source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r15 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208005969
@global_var_1001bbf0.3 = global i32 0
@global_var_1001bbfc.4 = local_unnamed_addr global i32* @global_var_1001bbf0.3
@global_var_1001bdd8.6 = global i32 0
@global_var_10000314.7 = constant i32 1207994973
@global_var_10000320.8 = constant [3 x i8] c"8`\00"
@global_var_1001bd64.10 = local_unnamed_addr global i32 0
@global_var_10000588.11 = constant [3 x i8] c";{\00"
@global_var_100005b4.12 = constant i32 939524096
@global_var_1001bd68.14 = local_unnamed_addr global i32 0
@global_var_10000f54.15 = constant [3 x i8] c"8~\00"
@global_var_10000f64.16 = constant [3 x i8] c"8~\00"
@global_var_10000f74.17 = constant [3 x i8] c"8~\00"
@global_var_100016f0.18 = constant i32 939524096
@global_var_10001c14.19 = constant [3 x i8] c"8`\00"
@global_var_1000225c.20 = constant [3 x i8] c"8`\00"
@global_var_10002f10.21 = constant i32 939524104
@global_var_10002f40.22 = constant i32 939524096
@global_var_10003240.23 = constant i32 939524096
@global_var_10003f14.24 = constant [3 x i8] c"8`\00"
@global_var_10004004.25 = constant [3 x i8] c"9!\00"
@global_var_1001bd74.26 = local_unnamed_addr global i32 0
@global_var_100045c8.27 = constant [3 x i8] c"8`\00"
@global_var_100045d0.28 = constant [3 x i8] c"8`\00"
@global_var_100045d8.29 = constant [3 x i8] c"8`\00"
@global_var_100046d8.30 = constant [3 x i8] c"9@\00"
@global_var_1000b680.31 = constant i32 788529152
@global_var_10004a20.32 = constant [3 x i8] c"8`\00"
@global_var_10004a28.33 = constant [3 x i8] c"8`\00"
@global_var_10004a30.34 = constant [3 x i8] c"8`\00"
@global_var_10004a38.35 = constant [3 x i8] c"8`\00"
@global_var_10004aa4.36 = constant [3 x i8] c"8`\00"
@global_var_10004aac.37 = constant [3 x i8] c"8`\00"
@global_var_10004ab4.38 = constant [3 x i8] c"8`\00"
@global_var_10004bc8.39 = constant i32 939572197
@global_var_10004c0c.40 = constant i32 939526087
@global_var_10004c48.41 = constant [3 x i8] c"8`\00"
@global_var_10004c7c.42 = constant [3 x i8] c"8`\00"
@global_var_10004c84.43 = constant i32 939524118
@global_var_10004cc0.44 = constant [3 x i8] c"8`\00"
@global_var_10004cc8.45 = constant i32 939524119
@global_var_10004d0c.46 = constant i32 939525433
@global_var_10004d50.47 = constant i32 939525057
@global_var_10004d8c.48 = constant [3 x i8] c"8`\00"
@global_var_1001bd6c.49 = local_unnamed_addr global i32 0
@global_var_1001bd70.50 = local_unnamed_addr global i32 0
@global_var_10004dc0.51 = constant [3 x i8] c"8`\00"
@global_var_10004e3c.52 = constant [3 x i8] c"8`\00"
@global_var_10004e44.53 = constant [3 x i8] c"8`\00"
@global_var_10004ea4.54 = constant i32 1207976697
@global_var_10004f40.55 = constant [3 x i8] c"8`\00"
@global_var_10004fd0.56 = constant [3 x i8] c"8`\00"
@global_var_10004fd8.57 = constant [3 x i8] c"8`\00"
@global_var_10005004.58 = constant [3 x i8] c"8`\00"
@global_var_100050d8.59 = constant [3 x i8] c"8`\00"
@global_var_10005110.60 = constant [3 x i8] c"8`\00"
@global_var_10005164.61 = constant [3 x i8] c"8`\00"
@global_var_1001bd48.62 = local_unnamed_addr global i32 268470364
@global_var_1001bd40.63 = local_unnamed_addr global i32 -1
@global_var_1000531c.65 = constant [3 x i8] c"8`\00"
@global_var_1000532c.66 = constant [3 x i8] c"8`\00"
@global_var_100053a4.67 = constant i32 1207962709
@global_var_1001be40.68 = global i32 0
@global_var_1001be44.69 = local_unnamed_addr global i32 0
@global_var_100053f4.70 = constant [3 x i8] c"8`\00"
@global_var_100053fc.71 = constant [3 x i8] c"8`\00"
@global_var_1001be42.72 = local_unnamed_addr global i32 0
@global_var_1001bd78.73 = local_unnamed_addr global i32 0
@global_var_10005484.74 = constant [3 x i8] c"8`\00"
@global_var_100054e0.75 = constant [3 x i8] c"8`\00"
@global_var_10005518.76 = constant [3 x i8] c"8`\00"
@global_var_10005520.77 = constant [3 x i8] c"8`\00"
@global_var_100055dc.78 = constant i32 1207972481
@global_var_10005618.79 = constant i32 1207961357
@global_var_10005634.80 = constant [3 x i8] c";a\00"
@global_var_10005698.81 = constant i32 1207961149
@global_var_100056ec.82 = constant [3 x i8] c"8`\00"
@global_var_1000b684.83 = constant i32 167772160
@global_var_10005724.84 = constant [3 x i8] c"8`\00"
@global_var_10005738.85 = constant i32 1207973289
@global_var_100057d8.86 = constant [3 x i8] c":`\00"
@global_var_100057e8.87 = constant [3 x i8] c"8`\00"
@global_var_100057f0.88 = constant [3 x i8] c"8`\00"
@global_var_1001bd44.89 = local_unnamed_addr global i32 -1
@global_var_100059b0.91 = constant i32 939589631
@global_var_10005a68.92 = constant i32 939589631
@global_var_10005b3c.93 = constant i32 939589631
@global_var_10005b48.94 = constant i32 1006685388
@global_var_10005b80.95 = constant i32 1207962005
@global_var_10005b88.96 = constant [3 x i8] c"|q\00"
@global_var_1000b688.97 = constant i32 1
@global_var_10005c30.98 = constant i32 939589631
@global_var_1001bdfc.99 = local_unnamed_addr global i32 0
@global_var_1001bdf0.100 = local_unnamed_addr global i32 0
@global_var_1001bdf8.101 = local_unnamed_addr global i32 0
@global_var_1001bdf4.102 = local_unnamed_addr global i32 0
@global_var_10006064.103 = constant [3 x i8] c"9A\00"
@global_var_100060e8.104 = constant i32 939524096
@global_var_1000611c.105 = constant i32 1006665728
@global_var_10006148.106 = constant i32 939524098
@global_var_10006190.107 = constant [3 x i8] c"8`\00"
@global_var_10006204.108 = constant i32 939524128
@global_var_100062b0.109 = constant [3 x i8] c"8c\00"
@global_var_1001bd98.110 = local_unnamed_addr global i32 0
@global_var_1001bd8c.111 = local_unnamed_addr global i32 0
@global_var_1001bd80.112 = local_unnamed_addr global i32 0
@global_var_1001bd84.113 = local_unnamed_addr global i32 0
@global_var_100068c0.115 = constant [3 x i8] c"8`\00"
@global_var_1001bd90.116 = local_unnamed_addr global i32 0
@global_var_1001bd94.117 = local_unnamed_addr global i32 0
@global_var_1001be00.118 = global i32 0
@global_var_1001be14.119 = global i32 0
@global_var_1001be02.120 = local_unnamed_addr global i32 0
@global_var_1001be20.121 = local_unnamed_addr global i32 0
@global_var_1001be08.122 = local_unnamed_addr global i32 0
@global_var_1001be09.123 = local_unnamed_addr global i32 0
@global_var_1001be04.124 = local_unnamed_addr global i32 0
@global_var_1000b6cc.125 = constant [8 x i8] c"0125!8 \00"
@global_var_1001be22.127 = local_unnamed_addr global i32 0
@global_var_1000b6ac.128 = constant i32 0
@global_var_1000b690.129 = constant [6 x i8] c"509=:\00"
@global_var_1000b698.130 = constant i32 455883832
@global_var_1000b6a4.131 = constant i32 124138003
@global_var_1000b6b0.132 = constant i32 941499172
@global_var_1000b6b8.133 = constant [7 x i8] c"5: '8%\00"
@global_var_1000b6c0.134 = constant i32 355481917
@global_var_1001be0c.135 = local_unnamed_addr global i32 0
@global_var_1000b6d4.136 = constant i32 -18048
@global_var_1001be10.137 = local_unnamed_addr global i32 0
@global_var_1001be0a.138 = local_unnamed_addr global i32 0
@global_var_1001be24.139 = local_unnamed_addr global i32 0
@global_var_1001be18.140 = local_unnamed_addr global i32 0
@global_var_10006e0c.141 = constant i32 939524096
@global_var_10006fc8.142 = constant [3 x i8] c"8`\00"
@global_var_10007198.143 = constant [3 x i8] c"8`\00"
@global_var_1001be50.165 = global i32 0
@global_var_1001bd4c.166 = local_unnamed_addr global i32 -555811921
@global_var_1000b710.167 = constant i32 1441136640
@global_var_100080b8.168 = constant [3 x i8] c"8`\00"
@global_var_1001be58.169 = local_unnamed_addr global i32 0
@global_var_1001be5c.170 = local_unnamed_addr global i32 0
@global_var_1000b714.171 = constant [13 x i8] c"&;; 91z78!6T\00"
@global_var_100080dc.172 = constant [3 x i8] c"8`\00"
@global_var_1001be60.173 = local_unnamed_addr global i32 0
@global_var_1001be64.174 = local_unnamed_addr global i32 0
@global_var_1000b724.175 = constant [13 x i8] c"'1:$5=z'= 1T\00"
@global_var_10008100.176 = constant [3 x i8] c"8`\00"
@global_var_1001be68.177 = local_unnamed_addr global i32 0
@global_var_1001be6c.178 = local_unnamed_addr global i32 0
@global_var_1000b734.179 = constant i32 -294715392
@global_var_10008124.180 = constant [3 x i8] c"8`\00"
@global_var_1001be70.181 = local_unnamed_addr global i32 0
@global_var_1001be74.182 = local_unnamed_addr global i32 0
@global_var_1000b738.183 = constant [37 x i8] c"&;; t'1:$5=t>!' t=:217 10t-;!&t'<= T\00"
@global_var_10008148.184 = constant i32 939524132
@global_var_1001be7c.185 = local_unnamed_addr global i32 0
@global_var_1001be78.186 = local_unnamed_addr global i32 0
@global_var_1000b760.187 = constant [7 x i8] c"'<188T\00"
@global_var_10008170.188 = constant [3 x i8] c"8`\00"
@global_var_1001be80.189 = local_unnamed_addr global i32 0
@global_var_1001be84.190 = local_unnamed_addr global i32 0
@global_var_1000b768.191 = constant [8 x i8] c"1:5681T\00"
@global_var_10008198.192 = constant [3 x i8] c"8`\00"
@global_var_1001be88.193 = local_unnamed_addr global i32 0
@global_var_1001be8c.194 = local_unnamed_addr global i32 0
@global_var_1000b770.195 = constant [8 x i8] c"'-' 19T\00"
@global_var_100081bc.196 = constant [3 x i8] c"8`\00"
@global_var_1001be90.197 = local_unnamed_addr global i32 0
@global_var_1001be94.198 = local_unnamed_addr global i32 0
@global_var_1000b778.199 = constant [4 x i8] c"'<T\00"
@global_var_100081e0.200 = constant i32 939524099
@global_var_1001be9c.201 = local_unnamed_addr global i32 0
@global_var_1001be98.202 = local_unnamed_addr global i32 0
@global_var_1000b77c.203 = constant i32 2067152186
@global_var_10008208.204 = constant [3 x i8] c"8`\00"
@global_var_1001bea0.205 = local_unnamed_addr global i32 0
@global_var_1001bea4.206 = local_unnamed_addr global i32 0
@global_var_1000b790.207 = constant i32 421337862
@global_var_1000822c.208 = constant i32 939524120
@global_var_1001beac.209 = local_unnamed_addr global i32 0
@global_var_1001bea8.210 = local_unnamed_addr global i32 0
@global_var_1000b7ac.211 = constant [10 x i8] c":7;&&17 T\00"
@global_var_10008254.212 = constant i32 939524105
@global_var_1001beb4.213 = local_unnamed_addr global i32 0
@global_var_1001beb0.214 = local_unnamed_addr global i32 0
@global_var_1000b7b8.215 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_1000827c.216 = constant [3 x i8] c"8`\00"
@global_var_1001beb8.217 = local_unnamed_addr global i32 0
@global_var_1001bebc.218 = local_unnamed_addr global i32 0
@global_var_1000b7cc.219 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_100082a0.220 = constant i32 939524118
@global_var_1001bec4.221 = local_unnamed_addr global i32 0
@global_var_1001bec0.222 = local_unnamed_addr global i32 0
@global_var_1000b7e4.223 = constant [8 x i8] c"{$&;7{T\00"
@global_var_100082c8.224 = constant [3 x i8] c"8`\00"
@global_var_1001bec8.225 = local_unnamed_addr global i32 0
@global_var_1001becc.226 = local_unnamed_addr global i32 0
@global_var_1000b7ec.227 = constant [6 x i8] c"{1,1T\00"
@global_var_100082ec.228 = constant [3 x i8] c"8`\00"
@global_var_1001bed0.229 = local_unnamed_addr global i32 0
@global_var_1001bed4.230 = local_unnamed_addr global i32 0
@global_var_1000b7f4.231 = constant [5 x i8] c"{20T\00"
@global_var_10008314.232 = constant i32 939524100
@global_var_1001bedc.233 = local_unnamed_addr global i32 0
@global_var_1001bed8.234 = local_unnamed_addr global i32 0
@global_var_1000b7fc.235 = constant [7 x i8] c"{95$'T\00"
@global_var_1000833c.236 = constant [3 x i8] c"8`\00"
@global_var_1001bee0.237 = local_unnamed_addr global i32 0
@global_var_1001bee4.238 = local_unnamed_addr global i32 0
@global_var_1000b804.239 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_10008360.240 = constant [3 x i8] c"8`\00"
@global_var_1001bee8.241 = local_unnamed_addr global i32 0
@global_var_1001beec.242 = local_unnamed_addr global i32 0
@global_var_1000b814.243 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_10008384.244 = constant [3 x i8] c"8`\00"
@global_var_1001bf48.245 = local_unnamed_addr global i32 0
@global_var_1001bf4c.246 = local_unnamed_addr global i32 0
@global_var_1000b820.247 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_100083a8.248 = constant [3 x i8] c"8`\00"
@global_var_1001bef0.249 = local_unnamed_addr global i32 0
@global_var_1001bef4.250 = local_unnamed_addr global i32 0
@global_var_1000b834.251 = constant [9 x i8] c"5''#;&0T\00"
@global_var_100083cc.252 = constant [3 x i8] c"8`\00"
@global_var_1001bef8.253 = local_unnamed_addr global i32 0
@global_var_1001befc.254 = local_unnamed_addr global i32 0
@global_var_1000b8bc.255 = constant i32 473889
@global_var_100083f0.256 = constant i32 939524117
@global_var_1001bf04.257 = local_unnamed_addr global i32 0
@global_var_1001bf00.258 = local_unnamed_addr global i32 0
@global_var_1000b840.259 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_10008418.260 = constant i32 939524113
@global_var_1001bf0c.261 = local_unnamed_addr global i32 0
@global_var_1001bf08.262 = local_unnamed_addr global i32 0
@global_var_1000b854.263 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_10008440.264 = constant [3 x i8] c"8`\00"
@global_var_1001bf10.265 = local_unnamed_addr global i32 0
@global_var_1001bf14.266 = local_unnamed_addr global i32 0
@global_var_1000b864.267 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_10008464.268 = constant [3 x i8] c"8`\00"
@global_var_1001bf18.269 = local_unnamed_addr global i32 0
@global_var_1001bf1c.270 = local_unnamed_addr global i32 0
@global_var_1000b874.271 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_10008488.272 = constant [3 x i8] c"8`\00"
@global_var_1001bf20.273 = local_unnamed_addr global i32 0
@global_var_1001bf24.274 = local_unnamed_addr global i32 0
@global_var_1000b888.275 = constant [9 x i8] c"$662*7!E\00"
@global_var_100084ac.276 = constant [3 x i8] c"8`\00"
@global_var_1001bf28.277 = local_unnamed_addr global i32 0
@global_var_1001bf2c.278 = local_unnamed_addr global i32 0
@global_var_1000b894.279 = constant [6 x i8] c";3=:T\00"
@global_var_100084d0.280 = constant [3 x i8] c"8`\00"
@global_var_1001bf30.281 = local_unnamed_addr global i32 0
@global_var_1001bf34.282 = local_unnamed_addr global i32 0
@global_var_1000b89c.283 = constant [7 x i8] c"1: 1&T\00"
@global_var_100084f4.284 = constant [3 x i8] c"8`\00"
@global_var_1001bf38.285 = local_unnamed_addr global i32 0
@global_var_1001bf3c.286 = local_unnamed_addr global i32 0
@global_var_1000b8a4.287 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_10008518.288 = constant i32 939524119
@global_var_1001bf44.289 = local_unnamed_addr global i32 0
@global_var_1001bf40.290 = local_unnamed_addr global i32 0
@global_var_10008880.291 = constant i32 939524096
@global_var_10008b48.292 = constant i32 1207959564
@global_var_10009024.293 = constant i32 939524118
@global_var_1000a700.294 = constant [3 x i8] c"8`\00"
@global_var_10009134.295 = constant i32 939524105
@global_var_10009150.296 = constant i32 939589631
@global_var_10009278.297 = constant i32 1207959797
@global_var_1000927c.298 = constant i32 939524108
@global_var_1001bdbc.299 = global i32 0
@global_var_100099f4.300 = constant i32 939524118
@global_var_10009a7c.301 = constant i32 939524118
@global_var_1001bf50.302 = global i32 0
@global_var_1001be28.303 = global i32 0
@global_var_1001bd50 = external global i32
@global_var_1000b9e0.305 = constant i32 33554944
@global_var_1001bdac.306 = local_unnamed_addr global i32 0
@global_var_1001bfd0.307 = global i32 0
@global_var_10009cd8.308 = constant i32 939524108
@global_var_10009d2c.309 = constant i32 939524108
@global_var_10009de0.310 = constant [3 x i8] c"8`\00"
@global_var_10009e8c.311 = constant [3 x i8] c"8`\00"
@global_var_1000a1b4.312 = constant i32 1207959640
@global_var_1000a1f0.313 = constant i32 1207959580
@global_var_1001bd5c.314 = local_unnamed_addr global i32* @global_var_1000b9e0.305
@global_var_1000a3e4.315 = constant i32 939524130
@global_var_1001bd10.316 = global i32 0
@global_var_1001bda0.317 = local_unnamed_addr global i32 0
@global_var_1000a478.318 = constant i32 1207960053
@global_var_1000a47c.319 = constant [3 x i8] c"= \00"
@global_var_1001bbe4.320 = global i32 -1
@global_var_1001bdb0.321 = local_unnamed_addr global i32 0
@global_var_1001bdb4.322 = local_unnamed_addr global i32 0
@global_var_1000b8d4.323 = constant [10 x i8] c"/dev/null\00"
@global_var_1001bdb8.324 = local_unnamed_addr global i32 0
@global_var_1001bda4.326 = local_unnamed_addr global i32 0
@global_var_1001bda8.327 = local_unnamed_addr global i32 0
@global_var_1000aa18.328 = constant i32 939524096
@global_var_1000aca4.330 = constant i32 939524118
@global_var_1000aea0.331 = constant i32 939589631
@global_var_1001bdd0.332 = local_unnamed_addr global i32 0
@global_var_1001bd28.333 = global i32 0
@global_var_1000b3c4.334 = constant i32 939524129
@global_var_1001bdc4.335 = local_unnamed_addr global i32 0
@global_var_1000b438.336 = constant [3 x i8] c"8`\00"
@global_var_1000b470.337 = constant i32 939524129
@global_var_1001bdc8.338 = local_unnamed_addr global i32 0
@global_var_1001bdcc.339 = local_unnamed_addr global i32 0
@global_var_1001bbe8.340 = global i32 0
@global_var_1001bdd4.2 = local_unnamed_addr global i8 0
@global_var_1001bd60.9 = local_unnamed_addr global i8 0
@global_var_1001bd61.13 = global i8 0
@global_var_1001bc00.64 = local_unnamed_addr global i8 1
@global_var_1001bd7c.90 = local_unnamed_addr global i16 0
@global_var_1001bd88.114 = global i16 0
@global_var_1001be16.126 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000b5f4(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001bdd4.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001bbfc.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001bbfc.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001bbfc.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001bdd4.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001bdd4.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268549108 to i32*), align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268549108
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_1000a7ec(i32 268457256, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268482144, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10000280:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268436160, i32* @lr, align 4
  %v0_100002bc = call i32 @function_10008ce0()
  %v3_100002c0 = icmp eq i32 %v0_100002bc, -1
  br i1 %v3_100002c0, label %dec_label_pc_100002d0, label %dec_label_pc_100002c8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_10000280
  %tmp14 = icmp slt i32 %v0_100002bc, 1
  br i1 %tmp14, label %dec_label_pc_100002f8, label %dec_label_pc_100002d0

dec_label_pc_100002d0:                            ; preds = %dec_label_pc_100002c8, %dec_label_pc_10000280
  ret i32 %v0_100002bc

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002c8
  store i32 268436220, i32* @lr, align 4
  %v0_100002f8 = call i32 @function_10008ce0()
  %v3_100002fc = icmp eq i32 %v0_100002f8, -1
  br i1 %v3_100002fc, label %dec_label_pc_10000320, label %dec_label_pc_10000304

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002f8
  %v3_10000304 = icmp eq i32 %v0_100002f8, 0
  br i1 %v3_10000304, label %dec_label_pc_1000030c, label %dec_label_pc_10000328

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_10000304
  %v0_1000030c = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10000314.7 to i32), i32* @lr, align 4
  %v1_10000310 = call i32 @function_1000a498(i32 %v0_1000030c)
  store i32 268436248, i32* @lr, align 4
  %v0_10000314 = call i32 @function_10008d70()
  store i32 ptrtoint ([3 x i8]* @global_var_10000320.8 to i32), i32* @lr, align 4
  %v2_1000031c = call i32 @function_10008db8(i32 %v0_10000314, i32 9)
  br label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000358, %dec_label_pc_10000328, %dec_label_pc_100002f8, %dec_label_pc_10000374, %dec_label_pc_1000030c
  %v0_10000324 = call i32 @function_1000a414()
  br label %dec_label_pc_10000328

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000304, %dec_label_pc_10000320
  %v3_1000032c = load i8, i8* @global_var_1001bd60.9, align 1
  %v3_10000330 = icmp eq i8 %v3_1000032c, 0
  br i1 %v3_10000330, label %dec_label_pc_10000320, label %dec_label_pc_10000338

dec_label_pc_10000338:                            ; preds = %dec_label_pc_10000328
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v3_10000340 = load i32, i32* @global_var_1001bd64.10, align 4
  %v1_10000348 = inttoptr i32 %v3_10000340 to i32*
  %v2_10000348 = load i32, i32* %v1_10000348, align 4
  %v1_1000034c = add i32 %v2_10000348, 4
  %v2_1000034c = inttoptr i32 %v1_1000034c to i8*
  %v3_1000034c = load i8, i8* %v2_1000034c, align 1
  %v4_1000034c = zext i8 %v3_1000034c to i32
  %v1_10000350 = load i32, i32* @r30, align 4
  %v4_10000350 = icmp eq i32 %v4_1000034c, %v1_10000350
  br i1 %v4_10000350, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000338, %dec_label_pc_10000360
  %v0_1000035c = phi i32 [ %v1_1000035c, %dec_label_pc_10000360 ], [ %v4_1000032c, %dec_label_pc_10000338 ]
  %v0_10000358 = phi i32 [ %v1_10000358, %dec_label_pc_10000360 ], [ 0, %dec_label_pc_10000338 ]
  %v1_10000358 = add i32 %v0_10000358, 1
  %v1_1000035c = add i32 %v0_1000035c, -1
  %v2_1000035c = icmp eq i32 %v1_1000035c, 0
  br i1 %v2_1000035c, label %dec_label_pc_10000320, label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_10000358
  %v1_10000360 = mul i32 %v1_10000358, 4
  %v2_10000364 = add i32 %v1_10000360, %v3_10000340
  %v3_10000364 = inttoptr i32 %v2_10000364 to i32*
  %v4_10000364 = load i32, i32* %v3_10000364, align 4
  %v1_10000368 = add i32 %v4_10000364, 4
  %v2_10000368 = inttoptr i32 %v1_10000368 to i8*
  %v3_10000368 = load i8, i8* %v2_10000368, align 1
  %v4_10000368 = zext i8 %v3_10000368 to i32
  %v4_1000036c = icmp eq i32 %v4_10000368, %v1_10000350
  br i1 %v4_1000036c, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000360, %dec_label_pc_10000338
  %v0_10000374 = phi i32 [ %v2_10000348, %dec_label_pc_10000338 ], [ %v4_10000364, %dec_label_pc_10000360 ]
  %v1_10000374 = inttoptr i32 %v0_10000374 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  call void @__pseudo_call(i32 %v2_10000374)
  br label %dec_label_pc_10000320

; uselistorder directives
  uselistorder i32 %v1_1000035c, { 1, 0 }
  uselistorder i8 %v3_1000032c, { 1, 0 }
  uselistorder label %dec_label_pc_10000358, { 1, 0 }
  uselistorder label %dec_label_pc_10000328, { 1, 0 }
  uselistorder label %dec_label_pc_10000320, { 3, 0, 1, 4, 2 }
}

define i32 @function_10000394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000394:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000394 = call i32 @__asm_mfcr()
  store i32 %v0_10000394, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* @r30, align 4
  %v0_100003c4 = load i32, i32* @r24, align 4
  %v0_100003cc = load i32, i32* @r26, align 4
  %v0_100003d4 = load i32, i32* @r28, align 4
  %v0_100003d8 = load i32, i32* @r29, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_100003f4, label %dec_label_pc_100003e8

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_10000394
  %v3_100003e8 = icmp eq i32 %arg2, 4
  %v1_100003ec = inttoptr i32 %v0_10000394 to i32*
  %v2_100003ec = load i32, i32* %v1_100003ec, align 4
  store i32 %v2_100003ec, i32* %r25.global-to-local, align 4
  br i1 %v3_100003e8, label %dec_label_pc_100003f4, label %dec_label_pc_1000043c

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8, %dec_label_pc_100005e8, %dec_label_pc_10000454, %dec_label_pc_10000448, %dec_label_pc_1000043c, %dec_label_pc_10000394, %dec_label_pc_1000061c
  %v1_10000408 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000394)
  store i32 %v0_100003c4, i32* @r24, align 4
  store i32 %v0_100003cc, i32* @r26, align 4
  store i32 %v0_100003d4, i32* @r28, align 4
  store i32 %v0_100003d8, i32* @r29, align 4
  store i32 %v0_100003a4, i32* @r30, align 4
  %v0_10000438 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000438

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003e8
  %v3_1000043c = icmp eq i32 %arg2, 5
  %v1_10000440 = add i32 %v0_10000394, 4
  %v2_10000440 = inttoptr i32 %v1_10000440 to i8*
  %v3_10000440 = load i8, i8* %v2_10000440, align 1
  %v4_10000440 = zext i8 %v3_10000440 to i32
  store i32 %v4_10000440, i32* %r22.global-to-local, align 4
  br i1 %v3_1000043c, label %dec_label_pc_100003f4, label %dec_label_pc_10000448

dec_label_pc_10000448:                            ; preds = %dec_label_pc_1000043c
  %v1_10000448 = add i32 %v0_10000394, 5
  %v2_10000448 = inttoptr i32 %v1_10000448 to i8*
  %v3_10000448 = load i8, i8* %v2_10000448, align 1
  %v4_10000448 = zext i8 %v3_10000448 to i32
  store i32 %v4_10000448, i32* @r26, align 4
  %v3_1000044c = icmp eq i8 %v3_10000448, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000044c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000044c, label %dec_label_pc_100003f4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000448
  %v1_10000454 = mul nuw nsw i32 %v4_10000448, 5
  store i32 %v1_10000454, i32* @r27, align 4
  %v1_10000458 = add i32 %arg2, -6
  store i32 %v1_10000458, i32* @r28, align 4
  %v2_1000045c = icmp ult i32 %v1_10000458, %v1_10000454
  br i1 %v2_1000045c, label %dec_label_pc_100003f4, label %dec_label_pc_10000464

dec_label_pc_10000464:                            ; preds = %dec_label_pc_10000454
  store i32 %v4_10000448, i32* %r3.global-to-local, align 4
  store i32 268436592, i32* @lr, align 4
  %v2_1000046c = call i32 @function_10009cfc(i32 %v4_10000448, i32 24)
  store i32 %v2_1000046c, i32* %r3.global-to-local, align 4
  %v0_10000470 = load i32, i32* @r31, align 4
  %v1_10000470 = add i32 %v0_10000470, 6
  store i32 %v1_10000470, i32* @r29, align 4
  store i32 %v2_1000046c, i32* %r20.global-to-local, align 4
  %v0_10000478 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000478 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000478 = or i1 %v0_10000478, %v1_10000478
  br i1 %v2_10000478, label %dec_label_pc_100004d4thread-pre-split, label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000464
  %v0_1000047c = load i32, i32* @r27, align 4
  store i32 %v2_1000046c, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_1000047c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004a4:                            ; preds = %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge, %dec_label_pc_1000047c
  %v2_100004b0 = phi i32 [ %v1_100004c0, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v2_1000046c, %dec_label_pc_1000047c ]
  %v0_100004ac = phi i32 [ %v0_100004a4.pre, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v1_10000470, %dec_label_pc_1000047c ]
  %v1_100004a4 = add i32 %v0_100004ac, 4
  %v2_100004a4 = inttoptr i32 %v1_100004a4 to i8*
  %v3_100004a4 = load i8, i8* %v2_100004a4, align 1
  %v1_100004a8 = inttoptr i32 %v0_100004ac to i32*
  %v2_100004a8 = load i32, i32* %v1_100004a8, align 4
  store i32 %v2_100004a8, i32* %r9.global-to-local, align 4
  %v1_100004ac = add i32 %v0_100004ac, 5
  store i32 %v1_100004ac, i32* @r29, align 4
  %v3_100004b0 = add i32 %v2_100004b0, 20
  %v4_100004b0 = inttoptr i32 %v3_100004b0 to i8*
  store i8 %v3_100004a4, i8* %v4_100004b0, align 1
  %v0_100004b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 4
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v0_100004b4, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b8 = add i32 %v1_100004b8, 16
  %v3_100004b8 = inttoptr i32 %v2_100004b8 to i32*
  store i32 %v0_100004b8, i32* %v3_100004b8, align 4
  %v0_100004bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100004bc = trunc i32 %v0_100004bc to i16
  %v2_100004bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100004bc = inttoptr i32 %v2_100004bc to i16*
  store i16 %v1_100004bc, i16* %v3_100004bc, align 2
  %v0_100004c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004c0 = add i32 %v0_100004c0, 24
  store i32 %v1_100004c0, i32* %r11.global-to-local, align 4
  %v0_100004c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004c4 = add i32 %v0_100004c4, -1
  store i32 %v1_100004c4, i32* %ctr.global-to-local, align 4
  %v2_100004c4 = icmp eq i32 %v1_100004c4, 0
  br i1 %v2_100004c4, label %dec_label_pc_100004c8, label %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge

dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge: ; preds = %dec_label_pc_100004a4
  %v0_100004a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_100004a4
  %v0_100004c8 = load i32, i32* @r26, align 4
  %v1_100004c8 = mul i32 %v0_100004c8, -5
  %v0_100004cc = load i32, i32* @r30, align 4
  %v2_100004cc = add i32 %v0_100004cc, %v1_100004c8
  store i32 %v2_100004cc, i32* %r9.global-to-local, align 4
  %v1_100004d0 = add i32 %v2_100004cc, -6
  store i32 %v1_100004d0, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4thread-pre-split:            ; preds = %dec_label_pc_10000464
  %v0_100004d4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4:                            ; preds = %dec_label_pc_100004d4thread-pre-split, %dec_label_pc_100004c8
  %v0_100004d4 = phi i32 [ %v0_100004d4.pr, %dec_label_pc_100004d4thread-pre-split ], [ %v1_100004d0, %dec_label_pc_100004c8 ]
  %v3_100004d4 = icmp eq i32 %v0_100004d4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004d4, label %dec_label_pc_100005d8, label %dec_label_pc_100004e0

dec_label_pc_100004e0:                            ; preds = %dec_label_pc_100004d4
  %v0_100004e0 = load i32, i32* @r29, align 4
  %v1_100004e0 = inttoptr i32 %v0_100004e0 to i8*
  %v2_100004e0 = load i8, i8* %v1_100004e0, align 1
  %v3_100004e0 = zext i8 %v2_100004e0 to i32
  store i32 %v3_100004e0, i32* @r24, align 4
  %v3_100004e4 = icmp eq i8 %v2_100004e0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004e4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004e4, label %dec_label_pc_100005b0, label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_100004e0
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  store i32 268436728, i32* @lr, align 4
  %v2_100004f4 = call i32 @function_10009cfc(i32 %v3_100004e0, i32 8)
  store i32 %v2_100004f4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004f4, i32* %r21.global-to-local, align 4
  %v0_100004fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004fc = or i1 %v0_100004fc, %v1_100004fc
  br i1 %v2_100004fc, label %dec_label_pc_100005b0, label %dec_label_pc_10000500

dec_label_pc_10000500:                            ; preds = %dec_label_pc_100004ec
  %v0_10000500 = load i32, i32* @r28, align 4
  %v1_10000500 = add i32 %v0_10000500, -1
  %v4_10000500 = icmp eq i32 %v1_10000500, 0
  store i32 %v1_10000500, i32* %ctr.global-to-local, align 4
  br i1 %v4_10000500, label %dec_label_pc_100005d8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_10000500
  %v0_1000050c = load i32, i32* @r29, align 4
  %v1_1000050c = add i32 %v0_1000050c, 1
  %v2_1000050c = inttoptr i32 %v1_1000050c to i8*
  %v3_1000050c = load i8, i8* %v2_1000050c, align 1
  store i32 %v1_1000050c, i32* %r9.global-to-local, align 4
  %v3_10000514 = add i32 %v2_100004f4, 4
  %v4_10000514 = inttoptr i32 %v3_10000514 to i8*
  store i8 %v3_1000050c, i8* %v4_10000514, align 1
  %v0_10000518 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000518, -1
  store i32 %v1_10000518, i32* %ctr.global-to-local, align 4
  %v2_10000518 = icmp eq i32 %v1_10000518, 0
  br i1 %v2_10000518, label %dec_label_pc_100005d8, label %dec_label_pc_1000051c

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_1000050c
  store i32 %v1_10000518, i32* %r11.global-to-local, align 4
  %v0_10000520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000520 = add i32 %v0_10000520, 1
  %v2_10000520 = inttoptr i32 %v1_10000520 to i8*
  %v3_10000520 = load i8, i8* %v2_10000520, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  %v1_10000528 = add i32 %v0_10000518, -2
  store i32 %v1_10000528, i32* @r29, align 4
  %v2_1000052c = icmp slt i32 %v1_10000528, %v4_10000520
  br i1 %v2_1000052c, label %dec_label_pc_100005d8, label %dec_label_pc_10000534

dec_label_pc_10000534:                            ; preds = %dec_label_pc_1000051c
  %v1_10000534 = add i32 %v0_10000520, 2
  store i32 %v1_10000534, i32* @r28, align 4
  %v0_10000538 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000538 = add i32 %v0_10000538, 8
  store i32 %v1_10000538, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000057c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_1000057c
  %v5_100005a4 = icmp eq i32 %v2_100005a4, 0
  br i1 %v5_100005a4, label %dec_label_pc_100005d8, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_10000548
  %v1_1000054c = load i32, i32* @r28, align 4
  %v2_1000054c = add i32 %v1_1000054c, %v0_100005a4
  %v3_1000054c = inttoptr i32 %v2_1000054c to i8*
  %v4_1000054c = load i8, i8* %v3_1000054c, align 1
  store i32 %v2_1000054c, i32* %r3.global-to-local, align 4
  %v1_10000554 = add i32 %v2_1000054c, 1
  store i32 %v1_10000554, i32* %r9.global-to-local, align 4
  %v2_10000558 = load i32, i32* @r30, align 4
  %v3_10000558 = add i32 %v2_10000558, 4
  %v4_10000558 = inttoptr i32 %v3_10000558 to i8*
  store i8 %v4_1000054c, i8* %v4_10000558, align 1
  %v0_1000055c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000055c = add i32 %v0_1000055c, -1
  %v4_1000055c = icmp eq i32 %v1_1000055c, 0
  %v0_10000560 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000560, 1
  store i32 %v1_10000560, i32* @r28, align 4
  br i1 %v4_1000055c, label %dec_label_pc_100005d8, label %dec_label_pc_10000568

dec_label_pc_10000568:                            ; preds = %dec_label_pc_1000054c
  %v0_10000568 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 1
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v1_1000055c, i32* %r9.global-to-local, align 4
  %v1_10000570 = add i32 %v0_1000055c, -2
  store i32 %v1_10000570, i32* @r29, align 4
  %v2_10000574 = icmp slt i32 %v1_10000570, %v4_10000568
  br i1 %v2_10000574, label %dec_label_pc_100005d8, label %dec_label_pc_1000057c

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_10000534
  %v0_10000580 = phi i32 [ %v4_10000568, %dec_label_pc_10000568 ], [ %v4_10000520, %dec_label_pc_10000534 ]
  %v1_10000580 = add nuw nsw i32 %v0_10000580, 1
  store i32 %v1_10000580, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000588.11 to i32), i32* @lr, align 4
  %v2_10000584 = call i32 @function_10009cfc(i32 %v1_10000580, i32 1)
  store i32 %v2_10000584, i32* %r3.global-to-local, align 4
  %v0_10000588 = load i32, i32* @r27, align 4
  %v1_10000588 = add i32 %v0_10000588, 1
  store i32 %v1_10000588, i32* @r27, align 4
  %v1_1000058c = load i32, i32* @r30, align 4
  %v2_1000058c = inttoptr i32 %v1_1000058c to i32*
  store i32 %v2_10000584, i32* %v2_1000058c, align 4
  %v0_10000590 = load i32, i32* @r28, align 4
  %v0_10000594 = load i32, i32* @r31, align 4
  %v0_10000598 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000598, i32* @r30, align 4
  store i32 268436896, i32* @lr, align 4
  %v3_1000059c = call i32 @function_100085dc(i32 %v2_10000584, i32 %v0_10000590, i32 %v0_10000594)
  store i32 %v3_1000059c, i32* %r3.global-to-local, align 4
  %v0_100005a0 = load i32, i32* @r27, align 4
  %v1_100005a0 = load i32, i32* @r24, align 4
  %v4_100005a0 = icmp eq i32 %v0_100005a0, %v1_100005a0
  %v0_100005a4 = load i32, i32* @r31, align 4
  %v1_100005a4 = load i32, i32* @r29, align 4
  %v2_100005a4 = sub i32 %v1_100005a4, %v0_100005a4
  store i32 %v2_100005a4, i32* %r11.global-to-local, align 4
  %v0_100005a8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100005a8 = add i32 %v0_100005a8, 8
  store i32 %v1_100005a8, i32* %r23.global-to-local, align 4
  br i1 %v4_100005a0, label %dec_label_pc_100005b0, label %dec_label_pc_10000548

dec_label_pc_100005b0:                            ; preds = %dec_label_pc_1000057c, %dec_label_pc_100004ec, %dec_label_pc_100004e0
  %v0_100005b0 = call i32 @function_1000936c()
  %v2_100005b8 = inttoptr i32 %v0_100005b0 to i32*
  store i32 0, i32* %v2_100005b8, align 4
  %v0_100005bc = load i32, i32* %r22.global-to-local, align 4
  %v0_100005c0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100005c0, i32* %r3.global-to-local, align 4
  %v0_100005c4 = load i32, i32* @r26, align 4
  %v0_100005c8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100005cc = load i32, i32* @r24, align 4
  %v0_100005d0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268436952, i32* @lr, align 4
  %v6_100005d4 = call i32 @function_10000280(i32 %v0_100005c0, i32 %v0_100005bc, i32 %v0_100005c4, i32 %v0_100005c8, i32 %v0_100005cc, i32 %v0_100005d0)
  store i32 %v6_100005d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_1000054c, %dec_label_pc_10000548, %dec_label_pc_1000051c, %dec_label_pc_1000050c, %dec_label_pc_10000500, %dec_label_pc_100004d4, %dec_label_pc_100005b0
  %v0_100005d8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005d8 = icmp eq i32 %v0_100005d8, 0
  br i1 %v3_100005d8, label %dec_label_pc_100005e8, label %dec_label_pc_100005e0

dec_label_pc_100005e0:                            ; preds = %dec_label_pc_100005d8
  store i32 %v0_100005d8, i32* @r3, align 4
  store i32 268436968, i32* @lr, align 4
  %v0_100005e4 = call i32 @function_10009d6c()
  store i32 %v0_100005e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005e8

dec_label_pc_100005e8:                            ; preds = %dec_label_pc_100005d8, %dec_label_pc_100005e0
  %v0_100005e8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005e8 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005e8, label %dec_label_pc_100003f4, label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e8
  %v0_100005f0 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_100005f0, 1
  br i1 %tmp27, label %dec_label_pc_1000061c, label %dec_label_pc_100005f8

dec_label_pc_100005f8:                            ; preds = %dec_label_pc_100005f0
  br label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f8
  %v0_100006146 = phi i32 [ %v0_100005f0, %dec_label_pc_100005f8 ], [ %v0_10000614, %dec_label_pc_10000614 ]
  %v0_10000604 = phi i32 [ %v0_100005e8, %dec_label_pc_100005f8 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  %v0_100005fc = phi i32 [ 0, %dec_label_pc_100005f8 ], [ %v1_10000614, %dec_label_pc_10000614 ]
  %v1_100005fc = mul i32 %v0_100005fc, 8
  %v1_10000600 = add i32 %v0_100005fc, 1
  store i32 %v1_10000600, i32* @r31, align 4
  %v2_10000604 = add i32 %v1_100005fc, %v0_10000604
  %v3_10000604 = inttoptr i32 %v2_10000604 to i32*
  %v4_10000604 = load i32, i32* %v3_10000604, align 4
  store i32 %v4_10000604, i32* @r3, align 4
  %v3_10000608 = icmp eq i32 %v4_10000604, 0
  br i1 %v3_10000608, label %dec_label_pc_10000614, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_100005fc
  store i32 268437012, i32* @lr, align 4
  %v0_10000610 = call i32 @function_10009d6c()
  store i32 %v0_10000610, i32* %r3.global-to-local, align 4
  %v0_10000614.pre = load i32, i32* @r24, align 4
  %v1_10000614.pre = load i32, i32* @r31, align 4
  %v0_1000061c.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000610
  %v0_1000061c.pre = phi i32 [ %v0_10000604, %dec_label_pc_100005fc ], [ %v0_1000061c.pre.pre, %dec_label_pc_10000610 ]
  %v1_10000614 = phi i32 [ %v1_10000600, %dec_label_pc_100005fc ], [ %v1_10000614.pre, %dec_label_pc_10000610 ]
  %v0_10000614 = phi i32 [ %v0_100006146, %dec_label_pc_100005fc ], [ %v0_10000614.pre, %dec_label_pc_10000610 ]
  %v4_10000614 = icmp eq i32 %v0_10000614, %v1_10000614
  br i1 %v4_10000614, label %dec_label_pc_1000061c, label %dec_label_pc_100005fc

dec_label_pc_1000061c:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f0
  %v0_1000061c = phi i32 [ %v0_100005e8, %dec_label_pc_100005f0 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  store i32 %v0_1000061c, i32* @r3, align 4
  store i32 268437028, i32* @lr, align 4
  %v0_10000620 = call i32 @function_10009d6c()
  store i32 %v0_10000620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003f4

; uselistorder directives
  uselistorder i32 %v0_10000614, { 1, 0 }
  uselistorder i32 %v1_10000614, { 1, 0 }
  uselistorder i32 %v0_100005fc, { 1, 0 }
  uselistorder i32 %v2_100005a4, { 1, 0 }
  uselistorder i32 %v0_100005a4, { 1, 0 }
  uselistorder i32 %v2_1000054c, { 1, 0, 2 }
  uselistorder i32 %v1_10000518, { 0, 2, 1 }
  uselistorder i32 %v3_100004e0, { 1, 0, 2 }
  uselistorder i32 %v1_100004c4, { 1, 0 }
  uselistorder i32 %v1_100004c0, { 1, 0 }
  uselistorder i32 %v0_100004ac, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10000448, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000394, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 5, 6, 9, 10, 11, 7, 8, 12, 13, 14, 16, 17, 15, 1, 0 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10000614, { 1, 0 }
  uselistorder label %dec_label_pc_100005e8, { 1, 0 }
  uselistorder label %dec_label_pc_100005d8, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_100003f4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10000628(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000628:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_1000066c, label %dec_label_pc_10000640

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000628
  %v0_10000640 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000640 = add i32 %v0_10000640, 4
  %v2_10000640 = inttoptr i32 %v1_10000640 to i8*
  %v3_10000640 = load i8, i8* %v2_10000640, align 1
  %v4_10000640 = zext i8 %v3_10000640 to i32
  %v4_10000648 = icmp eq i32 %v4_10000640, %arg3
  br i1 %v4_10000648, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000654:                            ; preds = %dec_label_pc_10000664
  %v1_10000654 = add i32 %v0_10000654.in, 12
  %v2_10000654 = inttoptr i32 %v1_10000654 to i8*
  %v3_10000654 = load i8, i8* %v2_10000654, align 1
  %v4_10000654 = zext i8 %v3_10000654 to i32
  %v4_1000065c = icmp eq i32 %v4_10000654, %arg3
  br i1 %v4_1000065c, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000664:                            ; preds = %dec_label_pc_10000640, %dec_label_pc_10000654
  %v0_10000668 = phi i32 [ %v1_10000668, %dec_label_pc_10000654 ], [ %arg1, %dec_label_pc_10000640 ]
  %v0_10000654.in = phi i32 [ %v0_10000654, %dec_label_pc_10000654 ], [ %v0_10000640, %dec_label_pc_10000640 ]
  %v0_10000654 = add i32 %v0_10000654.in, 8
  store i32 %v0_10000654, i32* %r4.global-to-local, align 4
  %v1_10000668 = add i32 %v0_10000668, -1
  %v2_10000668 = icmp eq i32 %v1_10000668, 0
  br i1 %v2_10000668, label %dec_label_pc_1000066c, label %dec_label_pc_10000654

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_10000664, %dec_label_pc_10000680, %dec_label_pc_10000628
  ret i32 %arg4

dec_label_pc_10000680:                            ; preds = %dec_label_pc_10000654, %dec_label_pc_10000640
  %v0_10000680 = phi i32 [ %v0_10000640, %dec_label_pc_10000640 ], [ %v0_10000654, %dec_label_pc_10000654 ]
  %v1_10000680 = inttoptr i32 %v0_10000680 to i32*
  %v2_10000680 = load i32, i32* %v1_10000680, align 4
  %v3_10000684 = icmp eq i32 %v2_10000680, 0
  br i1 %v3_10000684, label %dec_label_pc_1000066c, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %dec_label_pc_10000680
  store i32 268437136, i32* @lr, align 4
  %v1_1000068c = call i32 @function_10009704(i32 %v2_10000680)
  ret i32 %v1_1000068c

; uselistorder directives
  uselistorder i32 %v1_10000668, { 1, 0 }
  uselistorder i32 %v0_10000654, { 1, 0, 2 }
  uselistorder i32 %v0_10000654.in, { 1, 0 }
  uselistorder i32 %v0_10000640, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000066c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000664, { 1, 0 }
}

define i32 @function_100006a8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100006a8:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100006ec, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_100006a8
  %v0_100006c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006c0 = add i32 %v0_100006c0, 4
  %v2_100006c0 = inttoptr i32 %v1_100006c0 to i8*
  %v3_100006c0 = load i8, i8* %v2_100006c0, align 1
  %v4_100006c0 = zext i8 %v3_100006c0 to i32
  %v4_100006c8 = icmp eq i32 %v4_100006c0, %arg3
  br i1 %v4_100006c8, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006e4
  %v1_100006d4 = add i32 %v0_100006d4.in, 12
  %v2_100006d4 = inttoptr i32 %v1_100006d4 to i8*
  %v3_100006d4 = load i8, i8* %v2_100006d4, align 1
  %v4_100006d4 = zext i8 %v3_100006d4 to i32
  %v4_100006dc = icmp eq i32 %v4_100006d4, %arg3
  br i1 %v4_100006dc, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006e4:                            ; preds = %dec_label_pc_100006c0, %dec_label_pc_100006d4
  %v0_100006e8 = phi i32 [ %v1_100006e8, %dec_label_pc_100006d4 ], [ %arg1, %dec_label_pc_100006c0 ]
  %v0_100006d4.in = phi i32 [ %v0_100006d4, %dec_label_pc_100006d4 ], [ %v0_100006c0, %dec_label_pc_100006c0 ]
  %v0_100006d4 = add i32 %v0_100006d4.in, 8
  store i32 %v0_100006d4, i32* %r4.global-to-local, align 4
  %v1_100006e8 = add i32 %v0_100006e8, -1
  %v2_100006e8 = icmp eq i32 %v1_100006e8, 0
  br i1 %v2_100006e8, label %dec_label_pc_100006ec, label %dec_label_pc_100006d4

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006e4, %dec_label_pc_10000700, %dec_label_pc_100006a8
  ret i32 %arg4

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006c0
  %v0_10000700 = phi i32 [ %v0_100006c0, %dec_label_pc_100006c0 ], [ %v0_100006d4, %dec_label_pc_100006d4 ]
  %v1_10000700 = inttoptr i32 %v0_10000700 to i32*
  %v2_10000700 = load i32, i32* %v1_10000700, align 4
  store i32 %v2_10000700, i32* @r3, align 4
  %v3_10000704 = icmp eq i32 %v2_10000700, 0
  br i1 %v3_10000704, label %dec_label_pc_100006ec, label %dec_label_pc_1000070c

dec_label_pc_1000070c:                            ; preds = %dec_label_pc_10000700
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268437268, i32* @lr, align 4
  %v2_10000710 = call i32 @function_10008680(i32 %v2_10000700, i32 10)
  ret i32 %v2_10000710

; uselistorder directives
  uselistorder i32 %v1_100006e8, { 1, 0 }
  uselistorder i32 %v0_100006d4, { 1, 0, 2 }
  uselistorder i32 %v0_100006d4.in, { 1, 0 }
  uselistorder i32 %v0_100006c0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100006ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100006e4, { 1, 0 }
}

define i32 @function_1000072c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000072c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000730 = load i32, i32* @lr, align 4
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_1000074c = load i32, i32* @r28, align 4
  store i32 268437336, i32* @lr, align 4
  %v2_10000754 = call i32 @function_10009cfc(i32 1, i32 8)
  %v3_10000758 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_10000758 = zext i8 %v3_10000758 to i32
  store i32 %v4_10000758, i32* %r4.global-to-local, align 4
  store i32 %v2_10000754, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000076c = load i32, i32* @global_var_1001bd64.10, align 4
  %v2_10000770 = inttoptr i32 %v2_10000754 to i32*
  store i32 268448928, i32* %v2_10000770, align 4
  %v0_10000774 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000774 = mul i32 %v0_10000774, 4
  store i32 %v1_10000774, i32* %r4.global-to-local, align 4
  %v0_10000778 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000778 = trunc i32 %v0_10000778 to i8
  %v2_10000778 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000778 = add i32 %v2_10000778, 4
  %v4_10000778 = inttoptr i32 %v3_10000778 to i8*
  store i8 %v1_10000778, i8* %v4_10000778, align 1
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = add i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  store i32 268437380, i32* @lr, align 4
  %v3_10000780 = call i32 @function_10009e6c(i32 %v3_1000076c, i32 %v1_1000077c, i32 268448928)
  %v3_10000784 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_10000784 = zext i8 %v3_10000784 to i32
  store i32 %v3_10000780, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001bd61.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000794 = mul nuw nsw i32 %v4_10000784, 4
  %v0_10000798 = load i32, i32* @r28, align 4
  %v3_10000798 = add i32 %v1_10000794, %v3_10000780
  %v4_10000798 = inttoptr i32 %v3_10000798 to i32*
  store i32 %v0_10000798, i32* %v4_10000798, align 4
  %v0_100007a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a0, i32* @global_var_1001bd64.10, align 4
  %v0_100007a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007a4 = trunc i32 %v0_100007a4 to i8
  store i8 %v1_100007a4, i8* @global_var_1001bd60.9, align 1
  store i32 268437420, i32* @lr, align 4
  %v2_100007a8 = call i32 @function_10009cfc(i32 1, i32 8)
  %v3_100007ac = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_100007ac = zext i8 %v3_100007ac to i32
  store i32 %v4_100007ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100007a8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100007c0 = load i32, i32* @global_var_1001bd64.10, align 4
  %v2_100007c4 = inttoptr i32 %v2_100007a8 to i32*
  store i32 268450172, i32* %v2_100007c4, align 4
  %v0_100007c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007c8 = mul i32 %v0_100007c8, 4
  store i32 %v1_100007c8, i32* %r4.global-to-local, align 4
  %v0_100007cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100007cc = trunc i32 %v0_100007cc to i8
  %v2_100007cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100007cc = add i32 %v2_100007cc, 4
  %v4_100007cc = inttoptr i32 %v3_100007cc to i8*
  store i8 %v1_100007cc, i8* %v4_100007cc, align 1
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = add i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  store i32 268437464, i32* @lr, align 4
  %v3_100007d4 = call i32 @function_10009e6c(i32 %v3_100007c0, i32 %v1_100007d0, i32 268450172)
  %v3_100007d8 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_100007d8 = zext i8 %v3_100007d8 to i32
  store i32 %v3_100007d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001bd61.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100007e8 = mul nuw nsw i32 %v4_100007d8, 4
  %v0_100007ec = load i32, i32* @r28, align 4
  %v3_100007ec = add i32 %v1_100007e8, %v3_100007d4
  %v4_100007ec = inttoptr i32 %v3_100007ec to i32*
  store i32 %v0_100007ec, i32* %v4_100007ec, align 4
  %v0_100007f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007f4, i32* @global_var_1001bd64.10, align 4
  %v0_100007f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007f8 = trunc i32 %v0_100007f8 to i8
  store i8 %v1_100007f8, i8* @global_var_1001bd60.9, align 1
  store i32 268437504, i32* @lr, align 4
  %v2_100007fc = call i32 @function_10009cfc(i32 1, i32 8)
  %v3_10000800 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_10000800 = zext i8 %v3_10000800 to i32
  store i32 %v4_10000800, i32* %r4.global-to-local, align 4
  store i32 %v2_100007fc, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000814 = load i32, i32* @global_var_1001bd64.10, align 4
  %v2_10000818 = inttoptr i32 %v2_100007fc to i32*
  store i32 268451164, i32* %v2_10000818, align 4
  %v0_1000081c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000081c = mul i32 %v0_1000081c, 4
  store i32 %v1_1000081c, i32* %r4.global-to-local, align 4
  %v0_10000820 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000820 = trunc i32 %v0_10000820 to i8
  %v2_10000820 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000820 = add i32 %v2_10000820, 4
  %v4_10000820 = inttoptr i32 %v3_10000820 to i8*
  store i8 %v1_10000820, i8* %v4_10000820, align 1
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  store i32 268437548, i32* @lr, align 4
  %v3_10000828 = call i32 @function_10009e6c(i32 %v3_10000814, i32 %v1_10000824, i32 268451164)
  %v3_1000082c = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_1000082c = zext i8 %v3_1000082c to i32
  store i32 %v3_10000828, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001bd61.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000083c = mul nuw nsw i32 %v4_1000082c, 4
  %v0_10000840 = load i32, i32* @r28, align 4
  %v3_10000840 = add i32 %v1_1000083c, %v3_10000828
  %v4_10000840 = inttoptr i32 %v3_10000840 to i32*
  store i32 %v0_10000840, i32* %v4_10000840, align 4
  %v0_10000848 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000848, i32* @global_var_1001bd64.10, align 4
  %v0_1000084c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000084c = trunc i32 %v0_1000084c to i8
  store i8 %v1_1000084c, i8* @global_var_1001bd60.9, align 1
  store i32 268437588, i32* @lr, align 4
  %v2_10000850 = call i32 @function_10009cfc(i32 1, i32 8)
  %v3_10000854 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_10000854 = zext i8 %v3_10000854 to i32
  store i32 %v4_10000854, i32* %r4.global-to-local, align 4
  store i32 %v2_10000850, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_10000868 = load i32, i32* @global_var_1001bd64.10, align 4
  %v2_1000086c = inttoptr i32 %v2_10000850 to i32*
  store i32 268448104, i32* %v2_1000086c, align 4
  %v0_10000870 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000870 = mul i32 %v0_10000870, 4
  store i32 %v1_10000870, i32* %r4.global-to-local, align 4
  %v0_10000874 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000874 = trunc i32 %v0_10000874 to i8
  %v2_10000874 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000874 = add i32 %v2_10000874, 4
  %v4_10000874 = inttoptr i32 %v3_10000874 to i8*
  store i8 %v1_10000874, i8* %v4_10000874, align 1
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = add i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  store i32 268437632, i32* @lr, align 4
  %v3_1000087c = call i32 @function_10009e6c(i32 %v3_10000868, i32 %v1_10000878, i32 268448104)
  %v3_10000880 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_10000880 = zext i8 %v3_10000880 to i32
  store i32 %v3_1000087c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001bd61.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000890 = mul nuw nsw i32 %v4_10000880, 4
  %v0_10000894 = load i32, i32* @r28, align 4
  %v3_10000894 = add i32 %v1_10000890, %v3_1000087c
  %v4_10000894 = inttoptr i32 %v3_10000894 to i32*
  store i32 %v0_10000894, i32* %v4_10000894, align 4
  %v0_1000089c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000089c, i32* @global_var_1001bd64.10, align 4
  %v0_100008a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a0 = trunc i32 %v0_100008a0 to i8
  store i8 %v1_100008a0, i8* @global_var_1001bd60.9, align 1
  store i32 268437672, i32* @lr, align 4
  %v2_100008a4 = call i32 @function_10009cfc(i32 1, i32 8)
  %v3_100008a8 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_100008a8 = zext i8 %v3_100008a8 to i32
  store i32 %v4_100008a8, i32* %r4.global-to-local, align 4
  store i32 %v2_100008a4, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_100008bc = load i32, i32* @global_var_1001bd64.10, align 4
  %v2_100008c0 = inttoptr i32 %v2_100008a4 to i32*
  store i32 268446660, i32* %v2_100008c0, align 4
  %v0_100008c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008c4 = mul i32 %v0_100008c4, 4
  store i32 %v1_100008c4, i32* %r4.global-to-local, align 4
  %v0_100008c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008c8 = trunc i32 %v0_100008c8 to i8
  %v2_100008c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008c8 = add i32 %v2_100008c8, 4
  %v4_100008c8 = inttoptr i32 %v3_100008c8 to i8*
  store i8 %v1_100008c8, i8* %v4_100008c8, align 1
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = add i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  store i32 268437716, i32* @lr, align 4
  %v3_100008d0 = call i32 @function_10009e6c(i32 %v3_100008bc, i32 %v1_100008cc, i32 268446660)
  %v3_100008d4 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_100008d4 = zext i8 %v3_100008d4 to i32
  store i32 %v3_100008d0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001bd61.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100008e4 = mul nuw nsw i32 %v4_100008d4, 4
  %v0_100008e8 = load i32, i32* @r28, align 4
  %v3_100008e8 = add i32 %v1_100008e4, %v3_100008d0
  %v4_100008e8 = inttoptr i32 %v3_100008e8 to i32*
  store i32 %v0_100008e8, i32* %v4_100008e8, align 4
  %v0_100008f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f0, i32* @global_var_1001bd64.10, align 4
  %v0_100008f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008f4 = trunc i32 %v0_100008f4 to i8
  store i8 %v1_100008f4, i8* @global_var_1001bd60.9, align 1
  store i32 268437756, i32* @lr, align 4
  %v2_100008f8 = call i32 @function_10009cfc(i32 1, i32 8)
  %v3_100008fc = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_100008fc = zext i8 %v3_100008fc to i32
  store i32 %v4_100008fc, i32* %r4.global-to-local, align 4
  store i32 %v2_100008f8, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000910 = load i32, i32* @global_var_1001bd64.10, align 4
  %v2_10000914 = inttoptr i32 %v2_100008f8 to i32*
  store i32 268445152, i32* %v2_10000914, align 4
  %v0_10000918 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000918 = mul i32 %v0_10000918, 4
  store i32 %v1_10000918, i32* %r4.global-to-local, align 4
  %v0_1000091c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000091c = trunc i32 %v0_1000091c to i8
  %v2_1000091c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000091c = add i32 %v2_1000091c, 4
  %v4_1000091c = inttoptr i32 %v3_1000091c to i8*
  store i8 %v1_1000091c, i8* %v4_1000091c, align 1
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = add i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  store i32 268437800, i32* @lr, align 4
  %v3_10000924 = call i32 @function_10009e6c(i32 %v3_10000910, i32 %v1_10000920, i32 268445152)
  %v3_10000928 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_10000928 = zext i8 %v3_10000928 to i32
  store i32 %v3_10000924, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001bd61.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000938 = mul nuw nsw i32 %v4_10000928, 4
  %v0_1000093c = load i32, i32* @r28, align 4
  %v3_1000093c = add i32 %v1_10000938, %v3_10000924
  %v4_1000093c = inttoptr i32 %v3_1000093c to i32*
  store i32 %v0_1000093c, i32* %v4_1000093c, align 4
  %v0_10000944 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000944, i32* @global_var_1001bd64.10, align 4
  %v0_10000948 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000948 = trunc i32 %v0_10000948 to i8
  store i8 %v1_10000948, i8* @global_var_1001bd60.9, align 1
  store i32 268437840, i32* @lr, align 4
  %v2_1000094c = call i32 @function_10009cfc(i32 1, i32 8)
  %v3_10000950 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_10000950 = zext i8 %v3_10000950 to i32
  store i32 %v4_10000950, i32* %r4.global-to-local, align 4
  store i32 %v2_1000094c, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10000964 = load i32, i32* @global_var_1001bd64.10, align 4
  %v2_10000968 = inttoptr i32 %v2_1000094c to i32*
  store i32 268443544, i32* %v2_10000968, align 4
  %v0_1000096c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000096c = mul i32 %v0_1000096c, 4
  store i32 %v1_1000096c, i32* %r4.global-to-local, align 4
  %v0_10000970 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000970 = trunc i32 %v0_10000970 to i8
  %v2_10000970 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000970 = add i32 %v2_10000970, 4
  %v4_10000970 = inttoptr i32 %v3_10000970 to i8*
  store i8 %v1_10000970, i8* %v4_10000970, align 1
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = add i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  store i32 268437884, i32* @lr, align 4
  %v3_10000978 = call i32 @function_10009e6c(i32 %v3_10000964, i32 %v1_10000974, i32 268443544)
  %v3_1000097c = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_1000097c = zext i8 %v3_1000097c to i32
  store i32 %v3_10000978, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001bd61.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000098c = mul nuw nsw i32 %v4_1000097c, 4
  %v0_10000990 = load i32, i32* @r28, align 4
  %v3_10000990 = add i32 %v1_1000098c, %v3_10000978
  %v4_10000990 = inttoptr i32 %v3_10000990 to i32*
  store i32 %v0_10000990, i32* %v4_10000990, align 4
  %v0_10000998 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000998, i32* @global_var_1001bd64.10, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001bd60.9, align 1
  store i32 268437924, i32* @lr, align 4
  %v2_100009a0 = call i32 @function_10009cfc(i32 1, i32 8)
  %v3_100009a4 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_100009a4 = zext i8 %v3_100009a4 to i32
  store i32 %v4_100009a4, i32* %r4.global-to-local, align 4
  store i32 %v2_100009a0, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100009b8 = load i32, i32* @global_var_1001bd64.10, align 4
  %v2_100009bc = inttoptr i32 %v2_100009a0 to i32*
  store i32 268441936, i32* %v2_100009bc, align 4
  %v0_100009c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c0 = mul i32 %v0_100009c0, 4
  store i32 %v1_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009c4 = trunc i32 %v0_100009c4 to i8
  %v2_100009c4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100009c4 = add i32 %v2_100009c4, 4
  %v4_100009c4 = inttoptr i32 %v3_100009c4 to i8*
  store i8 %v1_100009c4, i8* %v4_100009c4, align 1
  %v0_100009c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c8 = add i32 %v0_100009c8, 4
  store i32 %v1_100009c8, i32* %r4.global-to-local, align 4
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_10009e6c(i32 %v3_100009b8, i32 %v1_100009c8, i32 268441936)
  %v3_100009d0 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_100009d0 = zext i8 %v3_100009d0 to i32
  store i32 %v3_100009cc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001bd61.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100009e0 = mul nuw nsw i32 %v4_100009d0, 4
  %v0_100009e4 = load i32, i32* @r28, align 4
  %v3_100009e4 = add i32 %v1_100009e0, %v3_100009cc
  %v4_100009e4 = inttoptr i32 %v3_100009e4 to i32*
  store i32 %v0_100009e4, i32* %v4_100009e4, align 4
  %v0_100009ec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100009ec, i32* @global_var_1001bd64.10, align 4
  %v0_100009f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009f0 = trunc i32 %v0_100009f0 to i8
  store i8 %v1_100009f0, i8* @global_var_1001bd60.9, align 1
  store i32 268438008, i32* @lr, align 4
  %v2_100009f4 = call i32 @function_10009cfc(i32 1, i32 8)
  %v3_100009f8 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_100009f8 = zext i8 %v3_100009f8 to i32
  store i32 %v4_100009f8, i32* %r4.global-to-local, align 4
  store i32 %v2_100009f4, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000a0c = load i32, i32* @global_var_1001bd64.10, align 4
  %v2_10000a10 = inttoptr i32 %v2_100009f4 to i32*
  store i32 268439748, i32* %v2_10000a10, align 4
  %v0_10000a14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a14 = mul i32 %v0_10000a14, 4
  store i32 %v1_10000a14, i32* %r4.global-to-local, align 4
  %v0_10000a18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a18 = trunc i32 %v0_10000a18 to i8
  %v2_10000a18 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a18 = add i32 %v2_10000a18, 4
  %v4_10000a18 = inttoptr i32 %v3_10000a18 to i8*
  store i8 %v1_10000a18, i8* %v4_10000a18, align 1
  %v0_10000a1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a1c = add i32 %v0_10000a1c, 4
  store i32 %v1_10000a1c, i32* %r4.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v3_10000a20 = call i32 @function_10009e6c(i32 %v3_10000a0c, i32 %v1_10000a1c, i32 268439748)
  %v3_10000a24 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_10000a24 = zext i8 %v3_10000a24 to i32
  store i32 %v3_10000a20, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001bd61.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a34 = mul nuw nsw i32 %v4_10000a24, 4
  %v0_10000a38 = load i32, i32* @r28, align 4
  %v3_10000a38 = add i32 %v1_10000a34, %v3_10000a20
  %v4_10000a38 = inttoptr i32 %v3_10000a38 to i32*
  store i32 %v0_10000a38, i32* %v4_10000a38, align 4
  %v0_10000a40 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a40, i32* @global_var_1001bd64.10, align 4
  %v0_10000a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a44 = trunc i32 %v0_10000a44 to i8
  store i8 %v1_10000a44, i8* @global_var_1001bd60.9, align 1
  store i32 268438092, i32* @lr, align 4
  %v2_10000a48 = call i32 @function_10009cfc(i32 1, i32 8)
  %v3_10000a4c = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_10000a4c = zext i8 %v3_10000a4c to i32
  store i32 %v4_10000a4c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a48, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10000a60 = load i32, i32* @global_var_1001bd64.10, align 4
  %v2_10000a64 = inttoptr i32 %v2_10000a48 to i32*
  store i32 268438276, i32* %v2_10000a64, align 4
  %v0_10000a68 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a68 = mul i32 %v0_10000a68, 4
  store i32 %v1_10000a68, i32* %r4.global-to-local, align 4
  %v0_10000a6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a6c = trunc i32 %v0_10000a6c to i8
  %v2_10000a6c = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a6c = add i32 %v2_10000a6c, 4
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v0_10000a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a70 = add i32 %v0_10000a70, 4
  store i32 %v1_10000a70, i32* %r4.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v3_10000a74 = call i32 @function_10009e6c(i32 %v3_10000a60, i32 %v1_10000a70, i32 268438276)
  %v3_10000a78 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_10000a78 = zext i8 %v3_10000a78 to i32
  store i32 %v3_10000a74, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001bd61.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a88 = mul nuw nsw i32 %v4_10000a78, 4
  %v0_10000a8c = load i32, i32* @r28, align 4
  %v3_10000a8c = add i32 %v1_10000a88, %v3_10000a74
  %v4_10000a8c = inttoptr i32 %v3_10000a8c to i32*
  store i32 %v0_10000a8c, i32* %v4_10000a8c, align 4
  %v0_10000a94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a94 = trunc i32 %v0_10000a94 to i8
  store i8 %v1_10000a94, i8* @global_var_1001bd60.9, align 1
  %v0_10000a98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a98, i32* @global_var_1001bd64.10, align 4
  store i32 268438176, i32* @lr, align 4
  %v2_10000a9c = call i32 @function_10009cfc(i32 1, i32 8)
  %v3_10000aa0 = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_10000aa0 = zext i8 %v3_10000aa0 to i32
  store i32 %v4_10000aa0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_10000ab4 = load i32, i32* @global_var_1001bd64.10, align 4
  %v2_10000ab8 = inttoptr i32 %v2_10000a9c to i32*
  store i32 268441112, i32* %v2_10000ab8, align 4
  %v0_10000abc = load i32, i32* %r4.global-to-local, align 4
  %v1_10000abc = mul i32 %v0_10000abc, 4
  store i32 %v1_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ac0 = trunc i32 %v0_10000ac0 to i8
  %v2_10000ac0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000ac0 = add i32 %v2_10000ac0, 4
  %v4_10000ac0 = inttoptr i32 %v3_10000ac0 to i8*
  store i8 %v1_10000ac0, i8* %v4_10000ac0, align 1
  %v0_10000ac4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000ac4 = add i32 %v0_10000ac4, 4
  store i32 %v1_10000ac4, i32* %r4.global-to-local, align 4
  store i32 268438220, i32* @lr, align 4
  %v3_10000ac8 = call i32 @function_10009e6c(i32 %v3_10000ab4, i32 %v1_10000ac4, i32 268441112)
  %v3_10000acc = load i8, i8* @global_var_1001bd60.9, align 1
  %v4_10000acc = zext i8 %v3_10000acc to i32
  store i32 %v3_10000ac8, i32* @global_var_1001bd64.10, align 4
  store i32 ptrtoint (i8* @global_var_1001bd61.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000ad8 = mul nuw nsw i32 %v4_10000acc, 4
  %v0_10000adc = load i32, i32* @r28, align 4
  %v3_10000adc = add i32 %v1_10000ad8, %v3_10000ac8
  %v4_10000adc = inttoptr i32 %v3_10000adc to i32*
  store i32 %v0_10000adc, i32* %v4_10000adc, align 4
  %v0_10000ae4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ae4 = trunc i32 %v0_10000ae4 to i8
  store i8 %v1_10000ae4, i8* @global_var_1001bd60.9, align 1
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 %v0_1000074c, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001bd61.13 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001bd60.9, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10000b04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000b04:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10000b08 = load i32, i32* @lr, align 4
  store i32 %v0_10000b08, i32* %r0.global-to-local, align 4
  %v0_10000b0c = call i32 @__asm_mfcr()
  store i32 %v0_10000b0c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000b1c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000b0c, i32* %r18.global-to-local, align 4
  %v0_10000b50 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000b58 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10000b60 = load i32, i32* @r30, align 4
  %v0_10000b64 = load i32, i32* @r31, align 4
  store i32 268438392, i32* @lr, align 4
  %v2_10000b74 = call i32 @function_10009cfc(i32 4, i32 4)
  store i32 %v2_10000b74, i32* %r19.global-to-local, align 4
  %v0_10000b7c = load i32, i32* @r28, align 4
  %v0_10000b88 = load i32, i32* @r29, align 4
  store i32 %v0_10000b88, i32* %r3.global-to-local, align 4
  store i32 268438416, i32* @lr, align 4
  %v4_10000b8c = inttoptr i32 %v0_10000b7c to i32*
  %v5_10000b8c = call i32 @function_100006a8(i32 %v0_10000b88, i32* %v4_10000b8c, i32 2, i32 0)
  %v0_10000b9c = load i32, i32* @r28, align 4
  %v1_10000ba0 = urem i32 %v5_10000b8c, 256
  store i32 %v1_10000ba0, i32* %r14.global-to-local, align 4
  %v0_10000ba4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ba4, i32* %r3.global-to-local, align 4
  store i32 268438444, i32* @lr, align 4
  %v4_10000ba8 = inttoptr i32 %v0_10000b9c to i32*
  %v5_10000ba8 = call i32 @function_100006a8(i32 %v0_10000ba4, i32* %v4_10000ba8, i32 3, i32 65535)
  %v0_10000bac = load i32, i32* @r28, align 4
  store i32 %v5_10000ba8, i32* %r24.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r29, align 4
  store i32 %v0_10000bbc, i32* %r3.global-to-local, align 4
  store i32 268438468, i32* @lr, align 4
  %v4_10000bc0 = inttoptr i32 %v0_10000bac to i32*
  %v5_10000bc0 = call i32 @function_100006a8(i32 %v0_10000bbc, i32* %v4_10000bc0, i32 4, i32 64)
  %v0_10000bc4 = load i32, i32* @r28, align 4
  %v1_10000bd0 = urem i32 %v5_10000bc0, 256
  store i32 %v1_10000bd0, i32* %r20.global-to-local, align 4
  %v0_10000bd4 = load i32, i32* @r29, align 4
  store i32 %v0_10000bd4, i32* %r3.global-to-local, align 4
  store i32 268438492, i32* @lr, align 4
  %v4_10000bd8 = inttoptr i32 %v0_10000bc4 to i32*
  %v5_10000bd8 = call i32 @function_100006a8(i32 %v0_10000bd4, i32* %v4_10000bd8, i32 5, i32 1)
  %v0_10000be8 = load i32, i32* @r28, align 4
  %v1_10000bec = urem i32 %v5_10000bd8, 256
  store i32 %v1_10000bec, i32* @r31, align 4
  %v0_10000bf0 = load i32, i32* @r29, align 4
  store i32 %v0_10000bf0, i32* %r3.global-to-local, align 4
  store i32 268438520, i32* @lr, align 4
  %v4_10000bf4 = inttoptr i32 %v0_10000be8 to i32*
  %v5_10000bf4 = call i32 @function_100006a8(i32 %v0_10000bf0, i32* %v4_10000bf4, i32 6, i32 65535)
  %v0_10000bfc = load i32, i32* @r28, align 4
  store i32 %v5_10000bf4, i32* %r26.global-to-local, align 4
  %v0_10000c0c = load i32, i32* @r29, align 4
  store i32 %v0_10000c0c, i32* %r3.global-to-local, align 4
  store i32 268438548, i32* @lr, align 4
  %v4_10000c10 = inttoptr i32 %v0_10000bfc to i32*
  %v5_10000c10 = call i32 @function_100006a8(i32 %v0_10000c0c, i32* %v4_10000c10, i32 7, i32 65535)
  %v0_10000c14 = load i32, i32* @r28, align 4
  store i32 %v5_10000c10, i32* %r27.global-to-local, align 4
  %v0_10000c24 = load i32, i32* @r29, align 4
  store i32 %v0_10000c24, i32* %r3.global-to-local, align 4
  store i32 268438572, i32* @lr, align 4
  %v4_10000c28 = inttoptr i32 %v0_10000c14 to i32*
  %v5_10000c28 = call i32 @function_100006a8(i32 %v0_10000c24, i32* %v4_10000c28, i32 0, i32 512)
  %v0_10000c2c = load i32, i32* @r28, align 4
  store i32 %v5_10000c28, i32* %r15.global-to-local, align 4
  %v0_10000c3c = load i32, i32* @r29, align 4
  store i32 %v0_10000c3c, i32* %r3.global-to-local, align 4
  store i32 268438596, i32* @lr, align 4
  %v4_10000c40 = inttoptr i32 %v0_10000c2c to i32*
  %v5_10000c40 = call i32 @function_100006a8(i32 %v0_10000c3c, i32* %v4_10000c40, i32 1, i32 1)
  %v0_10000c44 = load i32, i32* @r28, align 4
  %v1_10000c50 = urem i32 %v5_10000c40, 256
  store i32 %v1_10000c50, i32* %r21.global-to-local, align 4
  %v0_10000c54 = load i32, i32* @r29, align 4
  store i32 %v0_10000c54, i32* %r3.global-to-local, align 4
  store i32 268438620, i32* @lr, align 4
  %v4_10000c58 = inttoptr i32 %v0_10000c44 to i32*
  %v5_10000c58 = call i32 @function_100006a8(i32 %v0_10000c54, i32* %v4_10000c58, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10000c60 = load i32, i32* @global_var_1001bd68.14, align 4
  %v0_10000c64 = load i32, i32* @r28, align 4
  store i32 %v5_10000c58, i32* %r30.global-to-local, align 4
  %v0_10000c70 = load i32, i32* @r29, align 4
  store i32 %v0_10000c70, i32* %r3.global-to-local, align 4
  store i32 268438648, i32* @lr, align 4
  %v4_10000c74 = inttoptr i32 %v0_10000c64 to i32*
  %v5_10000c74 = call i32 @function_100006a8(i32 %v0_10000c70, i32* %v4_10000c74, i32 25, i32 %v3_10000c60)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438668, i32* @lr, align 4
  %v3_10000c88 = call i32 @function_100099a0(i32 2, i32 3, i32 6)
  store i32 %v3_10000c88, i32* %r3.global-to-local, align 4
  %v3_10000c8c = icmp eq i32 %v3_10000c88, -1
  store i1 %v3_10000c8c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10000c88, i32* %r23.global-to-local, align 4
  br i1 %v3_10000c8c, label %dec_label_pc_10000e30, label %dec_label_pc_10000c98

dec_label_pc_10000c98:                            ; preds = %dec_label_pc_10000b04
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10000ca4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268438708, i32* @lr, align 4
  %v4_10000cb0 = call i32 @function_10009964(i32 0, i32 3, i32 %v2_10000ca4, i32 4)
  store i32 %v4_10000cb0, i32* %r3.global-to-local, align 4
  %v3_10000cb4 = icmp eq i32 %v4_10000cb0, -1
  store i1 %v3_10000cb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000cb4, label %dec_label_pc_10000e28, label %dec_label_pc_10000cbc

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c98
  %v0_10000cbc = load i32, i32* %r18.global-to-local, align 4
  %v1_10000cbc = icmp slt i32 %v0_10000cbc, 0
  %v3_10000cbc = icmp eq i32 %v0_10000cbc, 0
  store i1 %v1_10000cbc, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000cbc, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10000cc8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000cc8 = urem i32 %v0_10000cc8, 65536
  store i32 %v1_10000cc8, i32* %r24.global-to-local, align 4
  %v0_10000ccc = load i32, i32* %r26.global-to-local, align 4
  %v1_10000ccc = urem i32 %v0_10000ccc, 65536
  store i32 %v1_10000ccc, i32* %r16.global-to-local, align 4
  %v0_10000cd0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000cd0 = urem i32 %v0_10000cd0, 65536
  store i32 %v1_10000cd0, i32* %r17.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000cd4 = urem i32 %v0_10000cd4, 256
  store i32 %v1_10000cd4, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_10000cbc, 1
  br i1 %tmp37, label %dec_label_pc_10000e90, label %dec_label_pc_10000cdc

dec_label_pc_10000cdc:                            ; preds = %dec_label_pc_10000cbc
  %v0_10000cdc = load i32, i32* @r31, align 4
  %v3_10000cdc = icmp eq i32 %v0_10000cdc, 0
  store i1 %v3_10000cdc, i1* %cr2_eq.global-to-local, align 1
  %v3_10000ce0 = icmp eq i32 %v1_10000cd4, 0
  store i1 %v3_10000ce0, i1* %cr3_eq.global-to-local, align 1
  %v0_10000ce4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000ce4 = urem i32 %v0_10000ce4, 65536
  %v0_10000cc8.not = or i32 %v0_10000cc8, -65536
  %v1_10000ce8 = xor i32 %v0_10000cc8.not, 65535
  store i32 %v1_10000ce8, i32* %r11.global-to-local, align 4
  %v1_10000cf0 = add nuw nsw i32 %v1_10000ce4, 66
  store i32 %v1_10000cf0, i32* %r0.global-to-local, align 4
  %v1_10000cf4 = add nuw nsw i32 %v1_10000ce4, 28
  store i32 %v1_10000cf4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10000ce4, 66
  %v1_10000cf8 = urem i32 %fold, 65536
  store i32 %v1_10000cf8, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10000ce4, 28
  %v1_10000cfc = urem i32 %fold8, 65536
  store i32 %v1_10000cfc, i32* %r26.global-to-local, align 4
  %v1_10000d00 = urem i32 %v1_10000ce8, 65536
  store i32 %v1_10000d00, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10000ce4, 8
  %v1_10000d04 = urem i32 %fold9, 65536
  store i32 %v1_10000d04, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10000d38

dec_label_pc_10000d10:                            ; preds = %dec_label_pc_10000e04
  %v0_10000d10 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d10 = add i32 %v0_10000d10, 16
  %v2_10000d10 = inttoptr i32 %v1_10000d10 to i32*
  %v3_10000d10 = load i32, i32* %v2_10000d10, align 4
  store i32 %v3_10000d10, i32* %r0.global-to-local, align 4
  %v1_10000d14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000d14 = add i32 %v1_10000d14, 16
  %v3_10000d14 = inttoptr i32 %v2_10000d14 to i32*
  store i32 %v3_10000d10, i32* %v3_10000d14, align 4
  br label %dec_label_pc_10000d18

dec_label_pc_10000d18:                            ; preds = %dec_label_pc_10000e20, %dec_label_pc_10000d10
  %v3_10000d18 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000d18, i32* %r9.global-to-local, align 4
  %v0_10000d1c = load i32, i32* @r28, align 4
  %v1_10000d1c = trunc i32 %v0_10000d1c to i16
  %v2_10000d1c = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d1c = add i32 %v2_10000d1c, 4
  %v4_10000d1c = inttoptr i32 %v3_10000d1c to i16*
  store i16 %v1_10000d1c, i16* %v4_10000d1c, align 2
  %v0_10000d20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d20 = add i32 %v0_10000d20, 1
  store i32 %v1_10000d20, i32* %r31.global-to-local, align 4
  %v0_10000d24 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000d24 = trunc i32 %v0_10000d24 to i16
  %v2_10000d24 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d24 = inttoptr i32 %v2_10000d24 to i16*
  store i16 %v1_10000d24, i16* %v3_10000d24, align 2
  %v0_10000d28 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d28 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000d28 = icmp slt i32 %v0_10000d28, %v1_10000d28
  %v4_10000d28 = icmp eq i32 %v0_10000d28, %v1_10000d28
  store i1 %v4_10000d28, i1* %cr7_eq.global-to-local, align 1
  %v0_10000d2c = load i32, i32* %r17.global-to-local, align 4
  %v1_10000d2c = trunc i32 %v0_10000d2c to i16
  %v2_10000d2c = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d2c = add i32 %v2_10000d2c, 2
  %v4_10000d2c = inttoptr i32 %v3_10000d2c to i16*
  store i16 %v1_10000d2c, i16* %v4_10000d2c, align 2
  %v0_10000d30 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10000d30, i32* %stack_var_-104, align 4
  br i1 %v2_10000d28, label %dec_label_pc_10000d38, label %dec_label_pc_10000e94

dec_label_pc_10000d38:                            ; preds = %dec_label_pc_10000d18, %dec_label_pc_10000cdc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268438852, i32* @lr, align 4
  %v2_10000d40 = call i32 @function_10009cfc(i32 1510, i32 4)
  store i32 %v2_10000d40, i32* %r3.global-to-local, align 4
  %v3_10000d44 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000d44, i32* %r9.global-to-local, align 4
  %v0_10000d48 = load i32, i32* @r31, align 4
  %v1_10000d48 = mul i32 %v0_10000d48, 4
  store i32 %v1_10000d48, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10000d50 = load i32, i32* %r19.global-to-local, align 4
  %v3_10000d50 = add i32 %v1_10000d50, %v1_10000d48
  %v4_10000d50 = inttoptr i32 %v3_10000d50 to i32*
  store i32 %v2_10000d40, i32* %v4_10000d50, align 4
  %v0_10000d54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d54 = mul i32 %v0_10000d54, 4
  store i32 %v1_10000d54, i32* %r9.global-to-local, align 4
  %v1_10000d58 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000d58 = add i32 %v1_10000d58, %v1_10000d54
  %v3_10000d58 = inttoptr i32 %v2_10000d58 to i32*
  %v4_10000d58 = load i32, i32* %v3_10000d58, align 4
  store i32 %v4_10000d58, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10000d60 = inttoptr i32 %v4_10000d58 to i32*
  %v2_10000d60 = load i32, i32* %v1_10000d60, align 4
  store i32 %v2_10000d60, i32* %r0.global-to-local, align 4
  %v1_10000d64 = add i32 %v4_10000d58, 38
  store i32 %v1_10000d64, i32* %r30.global-to-local, align 4
  %v0_10000d68 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000d68 = trunc i32 %v0_10000d68 to i8
  %v3_10000d68 = add i32 %v4_10000d58, 8
  %v4_10000d68 = inttoptr i32 %v3_10000d68 to i8*
  store i8 %v1_10000d68, i8* %v4_10000d68, align 1
  %v0_10000d6c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d6c = add i32 %v0_10000d6c, 58
  store i32 %v1_10000d6c, i32* %r29.global-to-local, align 4
  %v1_10000d70 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000d70, i32* %r0.global-to-local, align 4
  %v0_10000d74 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000d74 = trunc i32 %v0_10000d74 to i16
  %v2_10000d74 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d74 = add i32 %v2_10000d74, 4
  %v4_10000d74 = inttoptr i32 %v3_10000d74 to i16*
  store i16 %v1_10000d74, i16* %v4_10000d74, align 2
  %v1_10000d78 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000d78, i32* %r0.global-to-local, align 4
  %v0_10000d7c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d7c = add i32 %v0_10000d7c, 20
  store i32 %v1_10000d7c, i32* %r9.global-to-local, align 4
  %v2_10000d80 = inttoptr i32 %v0_10000d7c to i32*
  store i32 %v1_10000d78, i32* %v2_10000d80, align 4
  %v0_10000d84 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d84 = add i32 %v0_10000d84, 24
  store i32 %v1_10000d84, i32* %r11.global-to-local, align 4
  %v0_10000d88 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000d88 = trunc i32 %v0_10000d88 to i8
  %v3_10000d88 = add i32 %v0_10000d84, 1
  %v4_10000d88 = inttoptr i32 %v3_10000d88 to i8*
  store i8 %v1_10000d88, i8* %v4_10000d88, align 1
  %v0_10000d8c = load i32, i32* %r22.global-to-local, align 4
  %v1_10000d8c = trunc i32 %v0_10000d8c to i16
  %v2_10000d8c = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d8c = add i32 %v2_10000d8c, 2
  %v4_10000d8c = inttoptr i32 %v3_10000d8c to i16*
  store i16 %v1_10000d8c, i16* %v4_10000d8c, align 2
  %v0_10000d90 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000d90, label %dec_label_pc_10000d9c, label %dec_label_pc_10000d94

dec_label_pc_10000d94:                            ; preds = %dec_label_pc_10000d38
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10000d98 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d98 = add i32 %v2_10000d98, 6
  %v4_10000d98 = inttoptr i32 %v3_10000d98 to i16*
  store i16 16384, i16* %v4_10000d98, align 2
  br label %dec_label_pc_10000d9c

dec_label_pc_10000d9c:                            ; preds = %dec_label_pc_10000d38, %dec_label_pc_10000d94
  %v2_10000da0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000da0 = add i32 %v2_10000da0, 9
  %v4_10000da0 = inttoptr i32 %v3_10000da0 to i8*
  store i8 47, i8* %v4_10000da0, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_10000da8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000da8 = add i32 %v2_10000da8, 2
  %v4_10000da8 = inttoptr i32 %v3_10000da8 to i16*
  store i16 25944, i16* %v4_10000da8, align 2
  %v2_10000db0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10000db0 = add i32 %v2_10000db0, 12
  %v4_10000db0 = inttoptr i32 %v3_10000db0 to i16*
  store i16 2048, i16* %v4_10000db0, align 2
  %v3_10000db4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10000c74, i32* %r11.global-to-local, align 4
  %v1_10000dbc = mul i32 %v3_10000db4, 24
  store i32 %v1_10000dbc, i32* %r9.global-to-local, align 4
  %v0_10000dc0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000dc0 = add i32 %v0_10000dc0, 38
  %v2_10000dc0 = inttoptr i32 %v1_10000dc0 to i32*
  %v3_10000dc0 = load i32, i32* %v2_10000dc0, align 4
  store i32 %v3_10000dc0, i32* %r0.global-to-local, align 4
  %v2_10000dc4 = add i32 %v0_10000dc0, 12
  %v3_10000dc4 = inttoptr i32 %v2_10000dc4 to i32*
  store i32 %v5_10000c74, i32* %v3_10000dc4, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10000dcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10000dcc = load i32, i32* %r25.global-to-local, align 4
  %v2_10000dcc = add i32 %v1_10000dcc, %v0_10000dcc
  store i32 %v2_10000dcc, i32* %r9.global-to-local, align 4
  %v1_10000dd0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000dd0, i32* %r0.global-to-local, align 4
  %v0_10000dd4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000dd4 = add i32 %v0_10000dd4, 16
  %v2_10000dd4 = inttoptr i32 %v1_10000dd4 to i32*
  %v3_10000dd4 = load i32, i32* %v2_10000dd4, align 4
  store i32 %v3_10000dd4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10000ddc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000ddc, i32* %r0.global-to-local, align 4
  %v1_10000de0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000de0 = add i32 %v1_10000de0, 38
  %v3_10000de0 = inttoptr i32 %v2_10000de0 to i32*
  store i32 %v1_10000ddc, i32* %v3_10000de0, align 4
  %v0_10000de4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000de4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000de4 = add i32 %v1_10000de4, 16
  %v3_10000de4 = inttoptr i32 %v2_10000de4 to i32*
  store i32 %v0_10000de4, i32* %v3_10000de4, align 4
  %v0_10000de8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000de8 = trunc i32 %v0_10000de8 to i8
  %v2_10000de8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000de8 = add i32 %v2_10000de8, 1
  %v4_10000de8 = inttoptr i32 %v3_10000de8 to i8*
  store i8 %v1_10000de8, i8* %v4_10000de8, align 1
  %v0_10000dec = load i32, i32* %r26.global-to-local, align 4
  %v1_10000dec = trunc i32 %v0_10000dec to i16
  %v2_10000dec = load i32, i32* %r30.global-to-local, align 4
  %v3_10000dec = add i32 %v2_10000dec, 2
  %v4_10000dec = inttoptr i32 %v3_10000dec to i16*
  store i16 %v1_10000dec, i16* %v4_10000dec, align 2
  %v0_10000df0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000df0 = trunc i32 %v0_10000df0 to i16
  %v2_10000df0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000df0 = add i32 %v2_10000df0, 4
  %v4_10000df0 = inttoptr i32 %v3_10000df0 to i16*
  store i16 %v1_10000df0, i16* %v4_10000df0, align 2
  %v0_10000df4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000df4 = trunc i32 %v0_10000df4 to i8
  %v2_10000df4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000df4 = add i32 %v2_10000df4, 8
  %v4_10000df4 = inttoptr i32 %v3_10000df4 to i8*
  store i8 %v1_10000df4, i8* %v4_10000df4, align 1
  %v0_10000df8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000df8, label %dec_label_pc_10000e04, label %dec_label_pc_10000dfc

dec_label_pc_10000dfc:                            ; preds = %dec_label_pc_10000d9c
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10000e00 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000e00 = add i32 %v2_10000e00, 6
  %v4_10000e00 = inttoptr i32 %v3_10000e00 to i16*
  store i16 16384, i16* %v4_10000e00, align 2
  br label %dec_label_pc_10000e04

dec_label_pc_10000e04:                            ; preds = %dec_label_pc_10000d9c, %dec_label_pc_10000dfc
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10000e08 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000e08 = add i32 %v2_10000e08, 9
  %v4_10000e08 = inttoptr i32 %v3_10000e08 to i8*
  store i8 17, i8* %v4_10000e08, align 1
  %v0_10000e0c = call i32 @function_10005cd4()
  store i32 %v0_10000e0c, i32* %r3.global-to-local, align 4
  %v1_10000e10 = add i32 %v0_10000e0c, -1024
  store i32 %v1_10000e10, i32* %r0.global-to-local, align 4
  %v1_10000e14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000e14 = add i32 %v1_10000e14, 12
  %v3_10000e14 = inttoptr i32 %v2_10000e14 to i32*
  store i32 %v0_10000e0c, i32* %v3_10000e14, align 4
  %v0_10000e18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000e18 = sub i32 -1, %v0_10000e18
  store i32 %v1_10000e18, i32* %r0.global-to-local, align 4
  %v0_10000e1c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000e1c, label %dec_label_pc_10000e20, label %dec_label_pc_10000d10

dec_label_pc_10000e20:                            ; preds = %dec_label_pc_10000e04
  %v1_10000e20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000e20 = add i32 %v1_10000e20, 16
  %v3_10000e20 = inttoptr i32 %v2_10000e20 to i32*
  store i32 %v1_10000e18, i32* %v3_10000e20, align 4
  br label %dec_label_pc_10000d18

dec_label_pc_10000e28:                            ; preds = %dec_label_pc_10000c98
  %v0_10000e28 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000e28, i32* %r3.global-to-local, align 4
  store i32 268439088, i32* @lr, align 4
  %v0_10000e2c = call i32 @function_10008c98()
  store i32 %v0_10000e2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000e30

dec_label_pc_10000e30:                            ; preds = %dec_label_pc_10000b04, %dec_label_pc_10000e28
  store i32 %v0_10000b1c, i32* %r0.global-to-local, align 4
  %v1_10000e44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10000b0c)
  store i32 %v0_10000b50, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b58, i32* %r29.global-to-local, align 4
  store i32 %v0_10000b60, i32* %r30.global-to-local, align 4
  store i32 %v0_10000b64, i32* %r31.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000e8c

dec_label_pc_10000e90:                            ; preds = %dec_label_pc_10000cbc
  %v3_10000e90 = icmp eq i32 %v1_10000cd4, 0
  store i1 %v3_10000e90, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10000e94

dec_label_pc_10000e94:                            ; preds = %dec_label_pc_10000d18, %dec_label_pc_10000e90
  store i32 %v5_10000c74, i32* %r0.global-to-local, align 4
  %v0_10000e98 = load i32, i32* %r21.global-to-local, align 4
  %v3_10000e98 = icmp eq i32 %v0_10000e98, 0
  store i1 %v3_10000e98, i1* %cr2_eq.global-to-local, align 1
  %v2_10000e9c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10000e9c, i32* %r14.global-to-local, align 4
  %v0_10000ea0 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000ea0 = add i32 %v0_10000ea0, 8
  store i32 %v1_10000ea0, i32* %r21.global-to-local, align 4
  %v3_10000ea4 = icmp eq i32 %v5_10000c74, -1
  store i1 %v3_10000ea4, i1* %cr7_eq.global-to-local, align 1
  %v1_10000ea8 = add i32 %v0_10000ea0, 66
  store i32 %v1_10000ea8, i32* %r22.global-to-local, align 4
  %v0_10000eac = call i32 @__asm_mfcr()
  store i32 %v0_10000eac, i32* %r3.global-to-local, align 4
  %v1_10000eb0 = mul i32 %v0_10000eac, 268435456
  store i32 %v1_10000eb0, i32* %r20.global-to-local, align 4
  %v2_10000f44 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10000f68 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10000f78 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10000eb4.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000eb4.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10000eb4.outer

dec_label_pc_10000eb4.outer:                      ; preds = %dec_label_pc_10001018, %dec_label_pc_10000e94
  %v1_10000eb4.ph = phi i1 [ %v1_10000eb4.pre, %dec_label_pc_10000e94 ], [ %v1_10001018, %dec_label_pc_10001018 ]
  %v0_10000eb4.ph = phi i1 [ %v0_10000eb4.pre, %dec_label_pc_10000e94 ], [ %v0_10001018, %dec_label_pc_10001018 ]
  %v2_10000eb4 = or i1 %v1_10000eb4.ph, %v0_10000eb4.ph
  br label %dec_label_pc_10000eb4

dec_label_pc_10000eb4:                            ; preds = %dec_label_pc_10000eb4.outer, %dec_label_pc_10000eb4
  br i1 %v2_10000eb4, label %dec_label_pc_10000eb4, label %dec_label_pc_10000eb8

dec_label_pc_10000eb8:                            ; preds = %dec_label_pc_10000eb4, %dec_label_pc_10001018
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000ec8

dec_label_pc_10000ec8:                            ; preds = %dec_label_pc_10000f88, %dec_label_pc_10000eb8
  %v0_10000ec8 = phi i32 [ %v1_10001008, %dec_label_pc_10000f88 ], [ 0, %dec_label_pc_10000eb8 ]
  %v1_10000ec8 = mul i32 %v0_10000ec8, 24
  store i32 %v1_10000ec8, i32* %r0.global-to-local, align 4
  %v1_10000ecc = mul i32 %v0_10000ec8, 4
  store i32 %v1_10000ecc, i32* %r11.global-to-local, align 4
  %v1_10000ed0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000ed0 = add i32 %v1_10000ed0, %v1_10000ecc
  %v3_10000ed0 = inttoptr i32 %v2_10000ed0 to i32*
  %v4_10000ed0 = load i32, i32* %v3_10000ed0, align 4
  store i32 %v4_10000ed0, i32* %r28.global-to-local, align 4
  %v1_10000ed4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000ed4 = add i32 %v1_10000ed4, %v1_10000ec8
  %v1_10000ed8 = add i32 %v2_10000ed4, 20
  %v2_10000ed8 = inttoptr i32 %v1_10000ed8 to i8*
  %v3_10000ed8 = load i8, i8* %v2_10000ed8, align 1
  %v4_10000ed8 = zext i8 %v3_10000ed8 to i32
  store i32 %v4_10000ed8, i32* %r9.global-to-local, align 4
  %v1_10000edc = add i32 %v4_10000ed0, 24
  store i32 %v1_10000edc, i32* @r30, align 4
  %v1_10000ee0 = add i32 %v4_10000ed0, 38
  store i32 %v1_10000ee0, i32* @r31, align 4
  %v1_10000ee4 = add i32 %v4_10000ed0, 58
  store i32 %v1_10000ee4, i32* %r27.global-to-local, align 4
  %v3_10000ee8 = icmp eq i8 %v3_10000ed8, 31
  store i1 %v3_10000ee8, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10000ed8, 32
  br i1 %tmp39, label %dec_label_pc_10001020, label %dec_label_pc_10000ef0

dec_label_pc_10000ef0:                            ; preds = %dec_label_pc_10000ec8
  %v0_10000ef0 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000ef0 = mul i32 %v0_10000ef0, 16
  %v2_10000ef0 = udiv i32 %v0_10000ef0, 268435456
  %v3_10000ef0 = or i32 %v2_10000ef0, %v1_10000ef0
  store i32 %v3_10000ef0, i32* %r20.global-to-local, align 4
  %v1_10000ef4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10000ef0)
  %v1_10000ef8 = mul nuw i32 %v2_10000ef0, 268435456
  %v2_10000ef8 = urem i32 %v0_10000ef0, 268435456
  %v3_10000ef8 = or i32 %v1_10000ef8, %v2_10000ef8
  store i32 %v3_10000ef8, i32* %r20.global-to-local, align 4
  %v0_10000efc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10000efc, label %dec_label_pc_10001054, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10001020, %dec_label_pc_10000ef0
  store i32 65535, i32* @r29, align 4
  %v0_10000f08 = load i32, i32* %r24.global-to-local, align 4
  %v4_10000f08 = icmp eq i32 %v0_10000f08, 65535
  store i1 %v4_10000f08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f08, label %dec_label_pc_1000106c, label %dec_label_pc_10000f10

dec_label_pc_10000f10:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10000f00
  %v1_10000f10 = phi i32 [ %v1_10001064, %dec_label_pc_10001054 ], [ 65535, %dec_label_pc_10000f00 ]
  %v0_10000f10 = load i32, i32* %r16.global-to-local, align 4
  %v4_10000f10 = icmp eq i32 %v0_10000f10, %v1_10000f10
  store i1 %v4_10000f10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f10, label %dec_label_pc_1000108c, label %dec_label_pc_10000f18

dec_label_pc_10000f18:                            ; preds = %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge, %dec_label_pc_10000f10
  %v1_10000f18 = phi i32 [ %v1_10000f18.pre, %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge ], [ %v1_10000f10, %dec_label_pc_10000f10 ]
  %v0_10000f18 = load i32, i32* %r17.global-to-local, align 4
  %v4_10000f18 = icmp eq i32 %v0_10000f18, %v1_10000f18
  store i1 %v4_10000f18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f18, label %dec_label_pc_1000109c, label %dec_label_pc_10000f20

dec_label_pc_10000f20:                            ; preds = %dec_label_pc_1000108c, %dec_label_pc_10000f18
  %v0_10000f20 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000f20, label %dec_label_pc_100010a8, label %dec_label_pc_10000f24

dec_label_pc_10000f24:                            ; preds = %dec_label_pc_1000109c, %dec_label_pc_10000f20
  %v0_10000f24 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000f24 = add i32 %v0_10000f24, 16
  %v2_10000f24 = inttoptr i32 %v1_10000f24 to i32*
  %v3_10000f24 = load i32, i32* %v2_10000f24, align 4
  store i32 %v3_10000f24, i32* %r0.global-to-local, align 4
  %v1_10000f28 = load i32, i32* @r31, align 4
  %v2_10000f28 = add i32 %v1_10000f28, 16
  %v3_10000f28 = inttoptr i32 %v2_10000f28 to i32*
  store i32 %v3_10000f24, i32* %v3_10000f28, align 4
  br label %dec_label_pc_10000f2c

dec_label_pc_10000f2c:                            ; preds = %dec_label_pc_100010a8, %dec_label_pc_10000f24
  %v0_10000f2c = call i32 @function_10005cd4()
  store i32 %v0_10000f2c, i32* %r3.global-to-local, align 4
  store i32 %v0_10000f2c, i32* %stack_var_-100, align 4
  %v0_10000f34 = call i32 @function_10005cd4()
  store i32 %v0_10000f34, i32* %r3.global-to-local, align 4
  store i32 %v0_10000f34, i32* %stack_var_-96, align 4
  %v0_10000f3c = call i32 @function_10005cd4()
  store i32 %v0_10000f3c, i32* %stack_var_-92, align 4
  %v0_10000f48 = load i32, i32* @r30, align 4
  store i32 %v0_10000f48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f54.15 to i32), i32* @lr, align 4
  %v3_10000f50 = call i32 @function_100085dc(i32 %v0_10000f48, i32 %v2_10000f44, i32 4)
  %v0_10000f54 = load i32, i32* @r30, align 4
  %v1_10000f54 = add i32 %v0_10000f54, 6
  store i32 %v1_10000f54, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f64.16 to i32), i32* @lr, align 4
  %v3_10000f60 = call i32 @function_100085dc(i32 %v1_10000f54, i32 %v2_10000e9c, i32 4)
  %v0_10000f64 = load i32, i32* @r30, align 4
  %v1_10000f64 = add i32 %v0_10000f64, 4
  store i32 %v1_10000f64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f74.17 to i32), i32* @lr, align 4
  %v3_10000f70 = call i32 @function_100085dc(i32 %v1_10000f64, i32 %v2_10000f68, i32 2)
  %v0_10000f74 = load i32, i32* @r30, align 4
  %v1_10000f74 = add i32 %v0_10000f74, 10
  store i32 %v1_10000f74, i32* %r3.global-to-local, align 4
  store i32 268439428, i32* @lr, align 4
  %v3_10000f80 = call i32 @function_100085dc(i32 %v1_10000f74, i32 %v2_10000f78, i32 2)
  store i32 %v3_10000f80, i32* %r3.global-to-local, align 4
  %v0_10000f84 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000f84, label %dec_label_pc_10000f88, label %dec_label_pc_100010b4

dec_label_pc_10000f88:                            ; preds = %dec_label_pc_10000f2c, %dec_label_pc_100010b4
  %v0_10000f88 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000f88 = trunc i32 %v0_10000f88 to i16
  %v2_10000f88 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000f88 = add i32 %v2_10000f88, 10
  %v4_10000f88 = inttoptr i32 %v3_10000f88 to i16*
  store i16 %v1_10000f88, i16* %v4_10000f88, align 2
  %v0_10000f90 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000f90, i32* @r3, align 4
  %v2_10000f94 = call i32 @function_100043cc(i32 %v0_10000f90, i32 20)
  %v3_10000f94 = trunc i32 %v2_10000f94 to i16
  %v4_10000f9c = add i32 %v0_10000f90, 10
  %v5_10000f9c = inttoptr i32 %v4_10000f9c to i16*
  store i16 %v3_10000f94, i16* %v5_10000f9c, align 2
  %v0_10000fa0 = load i32, i32* @r31, align 4
  store i32 %v0_10000fa0, i32* @r3, align 4
  %v0_10000fa4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000fa4 = trunc i32 %v0_10000fa4 to i16
  %v3_10000fa4 = add i32 %v0_10000fa0, 10
  %v4_10000fa4 = inttoptr i32 %v3_10000fa4 to i16*
  store i16 %v1_10000fa4, i16* %v4_10000fa4, align 2
  %v2_10000fa8 = call i32 @function_100043cc(i32 %v0_10000fa0, i32 20)
  %v3_10000fa8 = trunc i32 %v2_10000fa8 to i16
  %v0_10000fac = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10000fac, i32* @r4, align 4
  %v3_10000fb0 = load i32, i32* @r31, align 4
  %v4_10000fb0 = add i32 %v3_10000fb0, 10
  %v5_10000fb0 = inttoptr i32 %v4_10000fb0 to i16*
  store i16 %v3_10000fa8, i16* %v5_10000fb0, align 2
  %v0_10000fb4 = load i32, i32* %r21.global-to-local, align 4
  %v0_10000fb8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000fb8 = trunc i32 %v0_10000fb8 to i16
  %v2_10000fb8 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000fb8 = add i32 %v2_10000fb8, 6
  %v4_10000fb8 = inttoptr i32 %v3_10000fb8 to i16*
  store i16 %v1_10000fb8, i16* %v4_10000fb8, align 2
  %v0_10000fbc = load i32, i32* @r31, align 4
  store i32 %v0_10000fbc, i32* %r3.global-to-local, align 4
  %v0_10000fc0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000fc0 = add i32 %v0_10000fc0, 4
  %v2_10000fc0 = inttoptr i32 %v1_10000fc0 to i16*
  %v3_10000fc0 = load i16, i16* %v2_10000fc0, align 2
  %v4_10000fc0 = zext i16 %v3_10000fc0 to i32
  %v4_10000fc4 = call i32 @function_10004430(i32 %v0_10000fbc, i32 %v0_10000fac, i32 %v4_10000fc0, i32 %v0_10000fb4)
  %v5_10000fc4 = trunc i32 %v4_10000fc4 to i16
  store i32 %v4_10000fc4, i32* %r3.global-to-local, align 4
  %v3_10000fc8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000fc8, i32* %r0.global-to-local, align 4
  %v0_10000fcc = load i32, i32* %r28.global-to-local, align 4
  %v1_10000fcc = add i32 %v0_10000fcc, 16
  %v2_10000fcc = inttoptr i32 %v1_10000fcc to i32*
  %v3_10000fcc = load i32, i32* %v2_10000fcc, align 4
  store i32 %v3_10000fcc, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10000fd4 = mul i32 %v3_10000fc8, 24
  store i32 %v1_10000fd4, i32* %r0.global-to-local, align 4
  %v3_10000fd8 = load i32, i32* %r27.global-to-local, align 4
  %v4_10000fd8 = add i32 %v3_10000fd8, 6
  %v5_10000fd8 = inttoptr i32 %v4_10000fd8 to i16*
  store i16 %v5_10000fc4, i16* %v5_10000fd8, align 2
  %v0_10000fdc = load i32, i32* %r28.global-to-local, align 4
  %v0_10000fe0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000fe0, i32* %r3.global-to-local, align 4
  %v0_10000fe4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000fe4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000fe4 = add i32 %v1_10000fe4, %v0_10000fe4
  %v0_10000fe8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000fe8 = trunc i32 %v0_10000fe8 to i16
  %v5_10000fe8 = inttoptr i32 %v2_10000fe4 to i16*
  store i16 %v3_10000fe8, i16* %v5_10000fe8, align 2
  %v0_10000fec = load i32, i32* %r11.global-to-local, align 4
  %v2_10000fec = add i32 %v2_10000fe4, 4
  %v3_10000fec = inttoptr i32 %v2_10000fec to i32*
  store i32 %v0_10000fec, i32* %v3_10000fec, align 4
  %v0_10000ff0 = load i32, i32* %r22.global-to-local, align 4
  %v0_10000ff4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000ff4 = trunc i32 %v0_10000ff4 to i16
  %v3_10000ff4 = add i32 %v2_10000fe4, 2
  %v4_10000ff4 = inttoptr i32 %v3_10000ff4 to i16*
  store i16 %v1_10000ff4, i16* %v4_10000ff4, align 2
  store i32 268439556, i32* @lr, align 4
  %v6_10001000 = call i32 @function_10009924(i32 %v0_10000fe0, i32 %v0_10000fdc, i32 %v0_10000ff0, i32 16384, i32 %v2_10000fe4, i32 16)
  store i32 %v6_10001000, i32* %r3.global-to-local, align 4
  %v3_10001004 = load i32, i32* %stack_var_-104, align 4
  %v1_10001008 = add i32 %v3_10001004, 1
  store i32 %v1_10001008, i32* %r9.global-to-local, align 4
  %v1_1000100c = load i32, i32* %r18.global-to-local, align 4
  %v2_1000100c = icmp slt i32 %v1_10001008, %v1_1000100c
  %v4_1000100c = icmp eq i32 %v1_10001008, %v1_1000100c
  store i1 %v4_1000100c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001008, i32* %stack_var_-104, align 4
  br i1 %v2_1000100c, label %dec_label_pc_10000ec8, label %dec_label_pc_10001018

dec_label_pc_10001018:                            ; preds = %dec_label_pc_10000f88
  %v0_10001018 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001018 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001018 = or i1 %v0_10001018, %v1_10001018
  br i1 %v2_10001018, label %dec_label_pc_10000eb4.outer, label %dec_label_pc_10000eb8

dec_label_pc_10001020:                            ; preds = %dec_label_pc_10000ec8
  %v1_10001020 = add i32 %v2_10000ed4, 16
  %v2_10001020 = inttoptr i32 %v1_10001020 to i32*
  %v3_10001020 = load i32, i32* %v2_10001020, align 4
  store i32 %v3_10001020, i32* %r29.global-to-local, align 4
  %v0_10001024 = call i32 @function_10005cd4()
  store i32 %v0_10001024, i32* %r3.global-to-local, align 4
  %v3_10001028 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001028, i32* %r9.global-to-local, align 4
  %v0_1000102c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000102c = mul i32 %v0_1000102c, 16
  %v2_1000102c = udiv i32 %v0_1000102c, 268435456
  %v3_1000102c = or i32 %v2_1000102c, %v1_1000102c
  store i32 %v3_1000102c, i32* %r20.global-to-local, align 4
  %v1_10001030 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000102c)
  %v1_10001034 = mul nuw i32 %v2_1000102c, 268435456
  %v2_10001034 = urem i32 %v0_1000102c, 268435456
  %v3_10001034 = or i32 %v1_10001034, %v2_10001034
  store i32 %v3_10001034, i32* %r20.global-to-local, align 4
  %v0_10001038 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001038 = mul i32 %v0_10001038, 24
  %v1_1000103c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000103c = add i32 %v1_1000103c, %v1_10001038
  store i32 %v2_1000103c, i32* %r9.global-to-local, align 4
  %v1_10001040 = add i32 %v2_1000103c, 20
  %v2_10001040 = inttoptr i32 %v1_10001040 to i8*
  %v3_10001040 = load i8, i8* %v2_10001040, align 1
  %v4_10001040 = zext i8 %v3_10001040 to i32
  store i32 %v4_10001040, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001040, 64
  %v2_10001044 = zext i8 %tmp to i32
  %v3_10001044 = lshr i32 %v0_10001024, %v2_10001044
  store i32 %v3_10001044, i32* %r3.global-to-local, align 4
  %v0_10001048 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001048 = add i32 %v3_10001044, %v0_10001048
  store i32 %v2_10001048, i32* %r29.global-to-local, align 4
  %v1_1000104c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000104c = add i32 %v1_1000104c, 16
  %v3_1000104c = inttoptr i32 %v2_1000104c to i32*
  store i32 %v2_10001048, i32* %v3_1000104c, align 4
  %v0_10001050 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001050, label %dec_label_pc_10001054, label %dec_label_pc_10000f00

dec_label_pc_10001054:                            ; preds = %dec_label_pc_10001020, %dec_label_pc_10000ef0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001058 = call i32 @function_10005cd4()
  store i32 %v0_10001058, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10001060 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001060 = add i32 %v1_10001060, 12
  %v3_10001060 = inttoptr i32 %v2_10001060 to i32*
  store i32 %v0_10001058, i32* %v3_10001060, align 4
  %v0_10001064 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001064 = load i32, i32* @r29, align 4
  %v4_10001064 = icmp eq i32 %v0_10001064, %v1_10001064
  store i1 %v4_10001064, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001064, label %dec_label_pc_1000106c, label %dec_label_pc_10000f10

dec_label_pc_1000106c:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10000f00
  %v0_1000106c = call i32 @function_10005cd4()
  %v0_10001070 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001070 = load i32, i32* @r29, align 4
  %v4_10001070 = icmp eq i32 %v0_10001070, %v1_10001070
  store i1 %v4_10001070, i1* %cr7_eq.global-to-local, align 1
  %v1_10001074 = urem i32 %v0_1000106c, 65536
  store i32 %v1_10001074, i32* %r3.global-to-local, align 4
  %v1_10001078 = add nsw i32 %v1_10001074, -1000
  store i32 %v1_10001078, i32* %r0.global-to-local, align 4
  %v1_1000107c = trunc i32 %v0_1000106c to i16
  %v2_1000107c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000107c = add i32 %v2_1000107c, 4
  %v4_1000107c = inttoptr i32 %v3_1000107c to i16*
  store i16 %v1_1000107c, i16* %v4_1000107c, align 2
  %v0_10001080 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001080 = sub i32 -1, %v0_10001080
  store i32 %v1_10001080, i32* %r0.global-to-local, align 4
  %v1_10001084 = trunc i32 %v1_10001080 to i16
  %v2_10001084 = load i32, i32* @r31, align 4
  %v3_10001084 = add i32 %v2_10001084, 4
  %v4_10001084 = inttoptr i32 %v3_10001084 to i16*
  store i16 %v1_10001084, i16* %v4_10001084, align 2
  br i1 %v4_10001070, label %dec_label_pc_1000108c, label %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge

dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge: ; preds = %dec_label_pc_1000106c
  %v1_10000f18.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10000f18

dec_label_pc_1000108c:                            ; preds = %dec_label_pc_1000106c, %dec_label_pc_10000f10
  %v0_1000108c = call i32 @function_10005cd4()
  %v1_1000108c = trunc i32 %v0_1000108c to i16
  store i32 %v0_1000108c, i32* %r3.global-to-local, align 4
  %v0_10001090 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001090 = load i32, i32* @r29, align 4
  %v4_10001090 = icmp eq i32 %v0_10001090, %v1_10001090
  store i1 %v4_10001090, i1* %cr7_eq.global-to-local, align 1
  %v3_10001094 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001094 = add i32 %v3_10001094, 58
  %v5_10001094 = inttoptr i32 %v4_10001094 to i16*
  store i16 %v1_1000108c, i16* %v5_10001094, align 2
  br i1 %v4_10001090, label %dec_label_pc_1000109c, label %dec_label_pc_10000f20

dec_label_pc_1000109c:                            ; preds = %dec_label_pc_1000108c, %dec_label_pc_10000f18
  %v0_1000109c = call i32 @function_10005cd4()
  %v1_1000109c = trunc i32 %v0_1000109c to i16
  store i32 %v0_1000109c, i32* %r3.global-to-local, align 4
  %v3_100010a0 = load i32, i32* %r27.global-to-local, align 4
  %v4_100010a0 = add i32 %v3_100010a0, 2
  %v5_100010a0 = inttoptr i32 %v4_100010a0 to i16*
  store i16 %v1_1000109c, i16* %v5_100010a0, align 2
  %v0_100010a4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100010a4, label %dec_label_pc_100010a8, label %dec_label_pc_10000f24

dec_label_pc_100010a8:                            ; preds = %dec_label_pc_1000109c, %dec_label_pc_10000f20
  %v0_100010a8 = call i32 @function_10005cd4()
  store i32 %v0_100010a8, i32* %r3.global-to-local, align 4
  %v1_100010ac = load i32, i32* @r31, align 4
  %v2_100010ac = add i32 %v1_100010ac, 16
  %v3_100010ac = inttoptr i32 %v2_100010ac to i32*
  store i32 %v0_100010a8, i32* %v3_100010ac, align 4
  br label %dec_label_pc_10000f2c

dec_label_pc_100010b4:                            ; preds = %dec_label_pc_10000f2c
  %v0_100010b4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100010b4 = add i32 %v0_100010b4, 8
  store i32 %v1_100010b4, i32* @r3, align 4
  %v0_100010b8 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100010b8, i32* @r4, align 4
  %v0_100010bc = call i32 @function_10005ea8()
  store i32 %v0_100010bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000f88

; uselistorder directives
  uselistorder i32 %v0_1000109c, { 1, 0 }
  uselistorder i32 %v0_1000108c, { 1, 0 }
  uselistorder i32 %v1_10001080, { 1, 0 }
  uselistorder i32 %v1_10001074, { 1, 0 }
  uselistorder i32 %v0_1000106c, { 1, 0 }
  uselistorder i32 %v1_10001064, { 1, 0 }
  uselistorder i32 %v0_1000102c, { 2, 1, 0 }
  uselistorder i1 %v1_10001018, { 1, 0 }
  uselistorder i1 %v0_10001018, { 1, 0 }
  uselistorder i32 %v1_10001008, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10000fe4, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10000fc4, { 1, 0 }
  uselistorder i32 %v0_10000ef0, { 2, 1, 0 }
  uselistorder i32 %v4_10000ed0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000ecc, { 1, 0 }
  uselistorder i32 %v1_10000e18, { 1, 0 }
  uselistorder i32 %v1_10000d54, { 1, 0 }
  uselistorder i32 %v1_10000d48, { 1, 0 }
  uselistorder i32 %v1_10000ce4, { 1, 0 }
  uselistorder i32 %v0_10000ce4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10000cd4, { 1, 2, 0 }
  uselistorder i32 %v0_10000cc8, { 1, 0 }
  uselistorder i32 %v5_10000c74, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 3, 13, 4, 14, 15, 16, 17, 18, 19, 20, 21, 1, 29, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 2, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 12, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000f88, { 1, 0 }
  uselistorder label %dec_label_pc_10000eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10000eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10000e94, { 1, 0 }
  uselistorder label %dec_label_pc_10000e30, { 1, 0 }
  uselistorder label %dec_label_pc_10000e04, { 1, 0 }
  uselistorder label %dec_label_pc_10000d9c, { 1, 0 }
}

define i32 @function_100010c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100010c4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100010c8 = load i32, i32* @lr, align 4
  store i32 %v0_100010c8, i32* %r0.global-to-local, align 4
  %v0_100010cc = call i32 @__asm_mfcr()
  store i32 %v0_100010cc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_100010dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100010cc, i32* %r19.global-to-local, align 4
  %v0_10001110 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001118 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10001120 = load i32, i32* @r30, align 4
  %v0_10001124 = load i32, i32* @r31, align 4
  store i32 268439864, i32* @lr, align 4
  %v2_10001134 = call i32 @function_10009cfc(i32 4, i32 4)
  store i32 %v2_10001134, i32* %r20.global-to-local, align 4
  %v0_1000113c = load i32, i32* @r28, align 4
  %v0_10001148 = load i32, i32* @r29, align 4
  store i32 %v0_10001148, i32* %r3.global-to-local, align 4
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = inttoptr i32 %v0_1000113c to i32*
  %v5_1000114c = call i32 @function_100006a8(i32 %v0_10001148, i32* %v4_1000114c, i32 2, i32 0)
  %v0_1000115c = load i32, i32* @r28, align 4
  %v1_10001160 = urem i32 %v5_1000114c, 256
  store i32 %v1_10001160, i32* %r14.global-to-local, align 4
  %v0_10001164 = load i32, i32* @r29, align 4
  store i32 %v0_10001164, i32* %r3.global-to-local, align 4
  store i32 268439916, i32* @lr, align 4
  %v4_10001168 = inttoptr i32 %v0_1000115c to i32*
  %v5_10001168 = call i32 @function_100006a8(i32 %v0_10001164, i32* %v4_10001168, i32 3, i32 65535)
  %v0_1000116c = load i32, i32* @r28, align 4
  store i32 %v5_10001168, i32* %r25.global-to-local, align 4
  %v0_1000117c = load i32, i32* @r29, align 4
  store i32 %v0_1000117c, i32* %r3.global-to-local, align 4
  store i32 268439940, i32* @lr, align 4
  %v4_10001180 = inttoptr i32 %v0_1000116c to i32*
  %v5_10001180 = call i32 @function_100006a8(i32 %v0_1000117c, i32* %v4_10001180, i32 4, i32 64)
  %v0_10001184 = load i32, i32* @r28, align 4
  %v1_10001190 = urem i32 %v5_10001180, 256
  store i32 %v1_10001190, i32* %r21.global-to-local, align 4
  %v0_10001194 = load i32, i32* @r29, align 4
  store i32 %v0_10001194, i32* %r3.global-to-local, align 4
  store i32 268439964, i32* @lr, align 4
  %v4_10001198 = inttoptr i32 %v0_10001184 to i32*
  %v5_10001198 = call i32 @function_100006a8(i32 %v0_10001194, i32* %v4_10001198, i32 5, i32 1)
  %v0_100011a8 = load i32, i32* @r28, align 4
  %v1_100011ac = urem i32 %v5_10001198, 256
  store i32 %v1_100011ac, i32* @r31, align 4
  %v0_100011b0 = load i32, i32* @r29, align 4
  store i32 %v0_100011b0, i32* %r3.global-to-local, align 4
  store i32 268439992, i32* @lr, align 4
  %v4_100011b4 = inttoptr i32 %v0_100011a8 to i32*
  %v5_100011b4 = call i32 @function_100006a8(i32 %v0_100011b0, i32* %v4_100011b4, i32 6, i32 65535)
  %v0_100011bc = load i32, i32* @r28, align 4
  store i32 %v5_100011b4, i32* %r24.global-to-local, align 4
  %v0_100011cc = load i32, i32* @r29, align 4
  store i32 %v0_100011cc, i32* %r3.global-to-local, align 4
  store i32 268440020, i32* @lr, align 4
  %v4_100011d0 = inttoptr i32 %v0_100011bc to i32*
  %v5_100011d0 = call i32 @function_100006a8(i32 %v0_100011cc, i32* %v4_100011d0, i32 7, i32 65535)
  %v0_100011d4 = load i32, i32* @r28, align 4
  store i32 %v5_100011d0, i32* %r27.global-to-local, align 4
  %v0_100011e4 = load i32, i32* @r29, align 4
  store i32 %v0_100011e4, i32* %r3.global-to-local, align 4
  store i32 268440044, i32* @lr, align 4
  %v4_100011e8 = inttoptr i32 %v0_100011d4 to i32*
  %v5_100011e8 = call i32 @function_100006a8(i32 %v0_100011e4, i32* %v4_100011e8, i32 0, i32 512)
  %v0_100011ec = load i32, i32* @r28, align 4
  store i32 %v5_100011e8, i32* %r16.global-to-local, align 4
  %v0_100011fc = load i32, i32* @r29, align 4
  store i32 %v0_100011fc, i32* %r3.global-to-local, align 4
  store i32 268440068, i32* @lr, align 4
  %v4_10001200 = inttoptr i32 %v0_100011ec to i32*
  %v5_10001200 = call i32 @function_100006a8(i32 %v0_100011fc, i32* %v4_10001200, i32 1, i32 1)
  %v0_10001204 = load i32, i32* @r28, align 4
  %v1_10001210 = urem i32 %v5_10001200, 256
  store i32 %v1_10001210, i32* %r15.global-to-local, align 4
  %v0_10001214 = load i32, i32* @r29, align 4
  store i32 %v0_10001214, i32* %r3.global-to-local, align 4
  store i32 268440092, i32* @lr, align 4
  %v4_10001218 = inttoptr i32 %v0_10001204 to i32*
  %v5_10001218 = call i32 @function_100006a8(i32 %v0_10001214, i32* %v4_10001218, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001220 = load i32, i32* @global_var_1001bd68.14, align 4
  %v0_10001224 = load i32, i32* @r28, align 4
  store i32 %v5_10001218, i32* %r30.global-to-local, align 4
  %v0_10001230 = load i32, i32* @r29, align 4
  store i32 %v0_10001230, i32* %r3.global-to-local, align 4
  store i32 268440120, i32* @lr, align 4
  %v4_10001234 = inttoptr i32 %v0_10001224 to i32*
  %v5_10001234 = call i32 @function_100006a8(i32 %v0_10001230, i32* %v4_10001234, i32 25, i32 %v3_10001220)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268440140, i32* @lr, align 4
  %v3_10001248 = call i32 @function_100099a0(i32 2, i32 3, i32 6)
  store i32 %v3_10001248, i32* %r3.global-to-local, align 4
  %v3_1000124c = icmp eq i32 %v3_10001248, -1
  store i1 %v3_1000124c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001248, i32* %r23.global-to-local, align 4
  br i1 %v3_1000124c, label %dec_label_pc_100013e4, label %dec_label_pc_10001258

dec_label_pc_10001258:                            ; preds = %dec_label_pc_100010c4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001264 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @function_10009964(i32 0, i32 3, i32 %v2_10001264, i32 4)
  store i32 %v4_10001270, i32* %r3.global-to-local, align 4
  %v3_10001274 = icmp eq i32 %v4_10001270, -1
  store i1 %v3_10001274, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001274, label %dec_label_pc_100013dc, label %dec_label_pc_1000127c

dec_label_pc_1000127c:                            ; preds = %dec_label_pc_10001258
  %v0_1000127c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000127c = icmp slt i32 %v0_1000127c, 0
  %v3_1000127c = icmp eq i32 %v0_1000127c, 0
  store i1 %v1_1000127c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000127c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001288 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001288 = urem i32 %v0_10001288, 65536
  store i32 %v1_10001288, i32* %r25.global-to-local, align 4
  %v0_1000128c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000128c = urem i32 %v0_1000128c, 65536
  store i32 %v1_1000128c, i32* %r17.global-to-local, align 4
  %v0_10001290 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001290 = urem i32 %v0_10001290, 65536
  store i32 %v1_10001290, i32* %r18.global-to-local, align 4
  %v0_10001294 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001294 = urem i32 %v0_10001294, 256
  store i32 %v1_10001294, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_1000127c, 1
  br i1 %tmp33, label %dec_label_pc_10001444, label %dec_label_pc_1000129c

dec_label_pc_1000129c:                            ; preds = %dec_label_pc_1000127c
  %v0_1000129c = load i32, i32* @r31, align 4
  %v3_1000129c = icmp eq i32 %v0_1000129c, 0
  store i1 %v3_1000129c, i1* %cr2_eq.global-to-local, align 1
  %v3_100012a0 = icmp eq i32 %v1_10001294, 0
  store i1 %v3_100012a0, i1* %cr3_eq.global-to-local, align 1
  %v0_100012a4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100012a4 = urem i32 %v0_100012a4, 65536
  %v0_10001288.not = or i32 %v0_10001288, -65536
  %v1_100012a8 = xor i32 %v0_10001288.not, 65535
  store i32 %v1_100012a8, i32* %r11.global-to-local, align 4
  %v1_100012b0 = add nuw nsw i32 %v1_100012a4, 52
  store i32 %v1_100012b0, i32* %r0.global-to-local, align 4
  %v1_100012b4 = add nuw nsw i32 %v1_100012a4, 28
  store i32 %v1_100012b4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_100012a4, 52
  %v1_100012b8 = urem i32 %fold, 65536
  store i32 %v1_100012b8, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_100012a4, 28
  %v1_100012bc = urem i32 %fold8, 65536
  store i32 %v1_100012bc, i32* %r24.global-to-local, align 4
  %v1_100012c0 = urem i32 %v1_100012a8, 65536
  store i32 %v1_100012c0, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_100012a4, 8
  %v1_100012c4 = urem i32 %fold9, 65536
  store i32 %v1_100012c4, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100012f8

dec_label_pc_100012d0:                            ; preds = %dec_label_pc_100013b8
  %v0_100012d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100012d0 = add i32 %v0_100012d0, 16
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  %v3_100012d0 = load i32, i32* %v2_100012d0, align 4
  store i32 %v3_100012d0, i32* %r0.global-to-local, align 4
  %v1_100012d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100012d4 = add i32 %v1_100012d4, 16
  %v3_100012d4 = inttoptr i32 %v2_100012d4 to i32*
  store i32 %v3_100012d0, i32* %v3_100012d4, align 4
  br label %dec_label_pc_100012d8

dec_label_pc_100012d8:                            ; preds = %dec_label_pc_100013d4, %dec_label_pc_100012d0
  %v3_100012d8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100012d8, i32* %r9.global-to-local, align 4
  %v0_100012dc = load i32, i32* @r28, align 4
  %v1_100012dc = trunc i32 %v0_100012dc to i16
  %v2_100012dc = load i32, i32* %r29.global-to-local, align 4
  %v3_100012dc = add i32 %v2_100012dc, 4
  %v4_100012dc = inttoptr i32 %v3_100012dc to i16*
  store i16 %v1_100012dc, i16* %v4_100012dc, align 2
  %v0_100012e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100012e0 = add i32 %v0_100012e0, 1
  store i32 %v1_100012e0, i32* %r31.global-to-local, align 4
  %v0_100012e4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100012e4 = trunc i32 %v0_100012e4 to i16
  %v2_100012e4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100012e4 = inttoptr i32 %v2_100012e4 to i16*
  store i16 %v1_100012e4, i16* %v3_100012e4, align 2
  %v0_100012e8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100012e8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100012e8 = icmp slt i32 %v0_100012e8, %v1_100012e8
  %v4_100012e8 = icmp eq i32 %v0_100012e8, %v1_100012e8
  store i1 %v4_100012e8, i1* %cr7_eq.global-to-local, align 1
  %v0_100012ec = load i32, i32* %r18.global-to-local, align 4
  %v1_100012ec = trunc i32 %v0_100012ec to i16
  %v2_100012ec = load i32, i32* %r29.global-to-local, align 4
  %v3_100012ec = add i32 %v2_100012ec, 2
  %v4_100012ec = inttoptr i32 %v3_100012ec to i16*
  store i16 %v1_100012ec, i16* %v4_100012ec, align 2
  %v0_100012f0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100012f0, i32* %stack_var_-104, align 4
  br i1 %v2_100012e8, label %dec_label_pc_100012f8, label %dec_label_pc_10001448

dec_label_pc_100012f8:                            ; preds = %dec_label_pc_100012d8, %dec_label_pc_1000129c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440324, i32* @lr, align 4
  %v2_10001300 = call i32 @function_10009cfc(i32 1510, i32 4)
  store i32 %v2_10001300, i32* %r3.global-to-local, align 4
  %v3_10001304 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001304, i32* %r9.global-to-local, align 4
  %v0_10001308 = load i32, i32* @r31, align 4
  %v1_10001308 = mul i32 %v0_10001308, 4
  store i32 %v1_10001308, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10001310 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001310 = add i32 %v1_10001310, %v1_10001308
  %v4_10001310 = inttoptr i32 %v3_10001310 to i32*
  store i32 %v2_10001300, i32* %v4_10001310, align 4
  %v0_10001314 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001314 = mul i32 %v0_10001314, 4
  store i32 %v1_10001314, i32* %r9.global-to-local, align 4
  %v1_10001318 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001318 = add i32 %v1_10001318, %v1_10001314
  %v3_10001318 = inttoptr i32 %v2_10001318 to i32*
  %v4_10001318 = load i32, i32* %v3_10001318, align 4
  store i32 %v4_10001318, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001320 = inttoptr i32 %v4_10001318 to i32*
  %v2_10001320 = load i32, i32* %v1_10001320, align 4
  store i32 %v2_10001320, i32* %r0.global-to-local, align 4
  %v1_10001324 = add i32 %v4_10001318, 24
  store i32 %v1_10001324, i32* %r30.global-to-local, align 4
  %v0_10001328 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001328 = trunc i32 %v0_10001328 to i8
  %v3_10001328 = add i32 %v4_10001318, 8
  %v4_10001328 = inttoptr i32 %v3_10001328 to i8*
  store i8 %v1_10001328, i8* %v4_10001328, align 1
  %v0_1000132c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000132c = add i32 %v0_1000132c, 44
  store i32 %v1_1000132c, i32* %r29.global-to-local, align 4
  %v1_10001330 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001330, i32* %r0.global-to-local, align 4
  %v0_10001334 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001334 = trunc i32 %v0_10001334 to i16
  %v2_10001334 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001334 = add i32 %v2_10001334, 4
  %v4_10001334 = inttoptr i32 %v3_10001334 to i16*
  store i16 %v1_10001334, i16* %v4_10001334, align 2
  %v1_10001338 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001338, i32* %r0.global-to-local, align 4
  %v0_1000133c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000133c = add i32 %v0_1000133c, 20
  store i32 %v1_1000133c, i32* %r9.global-to-local, align 4
  %v2_10001340 = inttoptr i32 %v0_1000133c to i32*
  store i32 %v1_10001338, i32* %v2_10001340, align 4
  %v0_10001344 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001344 = trunc i32 %v0_10001344 to i8
  %v2_10001344 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001344 = add i32 %v2_10001344, 1
  %v4_10001344 = inttoptr i32 %v3_10001344 to i8*
  store i8 %v1_10001344, i8* %v4_10001344, align 1
  %v0_10001348 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001348 = trunc i32 %v0_10001348 to i16
  %v2_10001348 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001348 = add i32 %v2_10001348, 2
  %v4_10001348 = inttoptr i32 %v3_10001348 to i16*
  store i16 %v1_10001348, i16* %v4_10001348, align 2
  %v0_1000134c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000134c, label %dec_label_pc_10001358, label %dec_label_pc_10001350

dec_label_pc_10001350:                            ; preds = %dec_label_pc_100012f8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001354 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001354 = add i32 %v2_10001354, 6
  %v4_10001354 = inttoptr i32 %v3_10001354 to i16*
  store i16 16384, i16* %v4_10001354, align 2
  br label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_100012f8, %dec_label_pc_10001350
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10001360 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001360 = add i32 %v2_10001360, 9
  %v4_10001360 = inttoptr i32 %v3_10001360 to i8*
  store i8 47, i8* %v4_10001360, align 1
  %v0_10001364 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001364 = trunc i32 %v0_10001364 to i16
  %v2_10001364 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001364 = add i32 %v2_10001364, 2
  %v4_10001364 = inttoptr i32 %v3_10001364 to i16*
  store i16 %v1_10001364, i16* %v4_10001364, align 2
  %v3_10001368 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10001234, i32* %r11.global-to-local, align 4
  %v1_10001370 = mul i32 %v3_10001368, 24
  store i32 %v1_10001370, i32* %r9.global-to-local, align 4
  %v0_10001374 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001374 = add i32 %v0_10001374, 24
  %v2_10001374 = inttoptr i32 %v1_10001374 to i32*
  %v3_10001374 = load i32, i32* %v2_10001374, align 4
  store i32 %v3_10001374, i32* %r0.global-to-local, align 4
  %v2_10001378 = add i32 %v0_10001374, 12
  %v3_10001378 = inttoptr i32 %v2_10001378 to i32*
  store i32 %v5_10001234, i32* %v3_10001378, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001380 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001380 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001380 = add i32 %v1_10001380, %v0_10001380
  store i32 %v2_10001380, i32* %r9.global-to-local, align 4
  %v1_10001384 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001384, i32* %r0.global-to-local, align 4
  %v0_10001388 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001388 = add i32 %v0_10001388, 16
  %v2_10001388 = inttoptr i32 %v1_10001388 to i32*
  %v3_10001388 = load i32, i32* %v2_10001388, align 4
  store i32 %v3_10001388, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001390 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001390, i32* %r0.global-to-local, align 4
  %v1_10001394 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001394 = add i32 %v1_10001394, 24
  %v3_10001394 = inttoptr i32 %v2_10001394 to i32*
  store i32 %v1_10001390, i32* %v3_10001394, align 4
  %v0_10001398 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001398 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001398 = add i32 %v1_10001398, 16
  %v3_10001398 = inttoptr i32 %v2_10001398 to i32*
  store i32 %v0_10001398, i32* %v3_10001398, align 4
  %v0_1000139c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000139c = trunc i32 %v0_1000139c to i8
  %v2_1000139c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000139c = add i32 %v2_1000139c, 1
  %v4_1000139c = inttoptr i32 %v3_1000139c to i8*
  store i8 %v1_1000139c, i8* %v4_1000139c, align 1
  %v0_100013a0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100013a0 = trunc i32 %v0_100013a0 to i16
  %v2_100013a0 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a0 = add i32 %v2_100013a0, 2
  %v4_100013a0 = inttoptr i32 %v3_100013a0 to i16*
  store i16 %v1_100013a0, i16* %v4_100013a0, align 2
  %v0_100013a4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100013a4 = trunc i32 %v0_100013a4 to i16
  %v2_100013a4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a4 = add i32 %v2_100013a4, 4
  %v4_100013a4 = inttoptr i32 %v3_100013a4 to i16*
  store i16 %v1_100013a4, i16* %v4_100013a4, align 2
  %v0_100013a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100013a8 = trunc i32 %v0_100013a8 to i8
  %v2_100013a8 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a8 = add i32 %v2_100013a8, 8
  %v4_100013a8 = inttoptr i32 %v3_100013a8 to i8*
  store i8 %v1_100013a8, i8* %v4_100013a8, align 1
  %v0_100013ac = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100013ac, label %dec_label_pc_100013b8, label %dec_label_pc_100013b0

dec_label_pc_100013b0:                            ; preds = %dec_label_pc_10001358
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_100013b4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013b4 = add i32 %v2_100013b4, 6
  %v4_100013b4 = inttoptr i32 %v3_100013b4 to i16*
  store i16 16384, i16* %v4_100013b4, align 2
  br label %dec_label_pc_100013b8

dec_label_pc_100013b8:                            ; preds = %dec_label_pc_10001358, %dec_label_pc_100013b0
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100013bc = load i32, i32* %r30.global-to-local, align 4
  %v3_100013bc = add i32 %v2_100013bc, 9
  %v4_100013bc = inttoptr i32 %v3_100013bc to i8*
  store i8 17, i8* %v4_100013bc, align 1
  %v0_100013c0 = call i32 @function_10005cd4()
  store i32 %v0_100013c0, i32* %r3.global-to-local, align 4
  %v1_100013c4 = add i32 %v0_100013c0, -1024
  store i32 %v1_100013c4, i32* %r0.global-to-local, align 4
  %v1_100013c8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100013c8 = add i32 %v1_100013c8, 12
  %v3_100013c8 = inttoptr i32 %v2_100013c8 to i32*
  store i32 %v0_100013c0, i32* %v3_100013c8, align 4
  %v0_100013cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100013cc = sub i32 -1, %v0_100013cc
  store i32 %v1_100013cc, i32* %r0.global-to-local, align 4
  %v0_100013d0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100013d0, label %dec_label_pc_100013d4, label %dec_label_pc_100012d0

dec_label_pc_100013d4:                            ; preds = %dec_label_pc_100013b8
  %v1_100013d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100013d4 = add i32 %v1_100013d4, 16
  %v3_100013d4 = inttoptr i32 %v2_100013d4 to i32*
  store i32 %v1_100013cc, i32* %v3_100013d4, align 4
  br label %dec_label_pc_100012d8

dec_label_pc_100013dc:                            ; preds = %dec_label_pc_10001258
  %v0_100013dc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100013dc, i32* %r3.global-to-local, align 4
  store i32 268440548, i32* @lr, align 4
  %v0_100013e0 = call i32 @function_10008c98()
  store i32 %v0_100013e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100010c4, %dec_label_pc_100013dc
  store i32 %v0_100010dc, i32* %r0.global-to-local, align 4
  %v1_100013f8 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100010cc)
  store i32 %v0_10001110, i32* %r28.global-to-local, align 4
  store i32 %v0_10001118, i32* %r29.global-to-local, align 4
  store i32 %v0_10001120, i32* %r30.global-to-local, align 4
  store i32 %v0_10001124, i32* %r31.global-to-local, align 4
  %v0_10001440 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001440

dec_label_pc_10001444:                            ; preds = %dec_label_pc_1000127c
  %v3_10001444 = icmp eq i32 %v1_10001294, 0
  store i1 %v3_10001444, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001448

dec_label_pc_10001448:                            ; preds = %dec_label_pc_100012d8, %dec_label_pc_10001444
  store i32 %v5_10001234, i32* %r0.global-to-local, align 4
  %v0_1000144c = load i32, i32* %r15.global-to-local, align 4
  %v3_1000144c = icmp eq i32 %v0_1000144c, 0
  store i1 %v3_1000144c, i1* %cr2_eq.global-to-local, align 1
  %v0_10001450 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001450 = add i32 %v0_10001450, 8
  store i32 %v1_10001450, i32* %r22.global-to-local, align 4
  %v1_10001454 = add i32 %v0_10001450, 52
  store i32 %v1_10001454, i32* %r24.global-to-local, align 4
  %v3_10001458 = icmp eq i32 %v5_10001234, -1
  store i1 %v3_10001458, i1* %cr7_eq.global-to-local, align 1
  %v0_1000145c = call i32 @__asm_mfcr()
  store i32 %v0_1000145c, i32* %r3.global-to-local, align 4
  %v1_10001460 = mul i32 %v0_1000145c, 268435456
  store i32 %v1_10001460, i32* %r21.global-to-local, align 4
  %v0_10001464.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001464.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001464.outer

dec_label_pc_10001464.outer:                      ; preds = %dec_label_pc_1000156c, %dec_label_pc_10001448
  %v1_10001464.ph = phi i1 [ %v1_10001464.pre, %dec_label_pc_10001448 ], [ %v1_1000156c, %dec_label_pc_1000156c ]
  %v0_10001464.ph = phi i1 [ %v0_10001464.pre, %dec_label_pc_10001448 ], [ %v0_1000156c, %dec_label_pc_1000156c ]
  %v2_10001464 = or i1 %v1_10001464.ph, %v0_10001464.ph
  br label %dec_label_pc_10001464

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001464.outer, %dec_label_pc_10001464
  br i1 %v2_10001464, label %dec_label_pc_10001464, label %dec_label_pc_10001468

dec_label_pc_10001468:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_1000156c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_10001468
  %v0_10001478 = phi i32 [ %v1_1000155c, %dec_label_pc_100014dc ], [ 0, %dec_label_pc_10001468 ]
  %v1_10001478 = mul i32 %v0_10001478, 24
  store i32 %v1_10001478, i32* %r0.global-to-local, align 4
  %v1_1000147c = mul i32 %v0_10001478, 4
  store i32 %v1_1000147c, i32* %r11.global-to-local, align 4
  %v1_10001480 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001480 = add i32 %v1_10001480, %v1_1000147c
  %v3_10001480 = inttoptr i32 %v2_10001480 to i32*
  %v4_10001480 = load i32, i32* %v3_10001480, align 4
  store i32 %v4_10001480, i32* %r28.global-to-local, align 4
  %v1_10001484 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001484 = add i32 %v1_10001484, %v1_10001478
  %v1_10001488 = add i32 %v2_10001484, 20
  %v2_10001488 = inttoptr i32 %v1_10001488 to i8*
  %v3_10001488 = load i8, i8* %v2_10001488, align 1
  %v4_10001488 = zext i8 %v3_10001488 to i32
  store i32 %v4_10001488, i32* %r9.global-to-local, align 4
  %v1_1000148c = add i32 %v4_10001480, 24
  store i32 %v1_1000148c, i32* @r31, align 4
  %v1_10001490 = add i32 %v4_10001480, 44
  store i32 %v1_10001490, i32* @r30, align 4
  %v3_10001494 = icmp eq i8 %v3_10001488, 31
  store i1 %v3_10001494, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10001488, 32
  br i1 %tmp35, label %dec_label_pc_10001574, label %dec_label_pc_1000149c

dec_label_pc_1000149c:                            ; preds = %dec_label_pc_10001478
  %v0_1000149c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000149c = mul i32 %v0_1000149c, 16
  %v2_1000149c = udiv i32 %v0_1000149c, 268435456
  %v3_1000149c = or i32 %v2_1000149c, %v1_1000149c
  store i32 %v3_1000149c, i32* %r21.global-to-local, align 4
  %v1_100014a0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000149c)
  %v1_100014a4 = mul nuw i32 %v2_1000149c, 268435456
  %v2_100014a4 = urem i32 %v0_1000149c, 268435456
  %v3_100014a4 = or i32 %v1_100014a4, %v2_100014a4
  store i32 %v3_100014a4, i32* %r21.global-to-local, align 4
  %v0_100014a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100014a8, label %dec_label_pc_100015a8, label %dec_label_pc_100014ac

dec_label_pc_100014ac:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_1000149c
  store i32 65535, i32* @r29, align 4
  %v0_100014b4 = load i32, i32* %r25.global-to-local, align 4
  %v4_100014b4 = icmp eq i32 %v0_100014b4, 65535
  store i1 %v4_100014b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014b4, label %dec_label_pc_100015c0, label %dec_label_pc_100014bc

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100014ac
  %v1_100014bc = phi i32 [ %v1_100015b8, %dec_label_pc_100015a8 ], [ 65535, %dec_label_pc_100014ac ]
  %v0_100014bc = load i32, i32* %r17.global-to-local, align 4
  %v4_100014bc = icmp eq i32 %v0_100014bc, %v1_100014bc
  store i1 %v4_100014bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014bc, label %dec_label_pc_100015e0, label %dec_label_pc_100014c4

dec_label_pc_100014c4:                            ; preds = %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge, %dec_label_pc_100014bc
  %v1_100014c4 = phi i32 [ %v1_100014c4.pre, %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge ], [ %v1_100014bc, %dec_label_pc_100014bc ]
  %v0_100014c4 = load i32, i32* %r18.global-to-local, align 4
  %v4_100014c4 = icmp eq i32 %v0_100014c4, %v1_100014c4
  store i1 %v4_100014c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014c4, label %dec_label_pc_100015f0, label %dec_label_pc_100014cc

dec_label_pc_100014cc:                            ; preds = %dec_label_pc_100015e0, %dec_label_pc_100014c4
  %v0_100014cc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100014cc, label %dec_label_pc_100015fc, label %dec_label_pc_100014d0

dec_label_pc_100014d0:                            ; preds = %dec_label_pc_100015f0, %dec_label_pc_100014cc
  %v0_100014d0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100014d0 = add i32 %v0_100014d0, 16
  %v2_100014d0 = inttoptr i32 %v1_100014d0 to i32*
  %v3_100014d0 = load i32, i32* %v2_100014d0, align 4
  store i32 %v3_100014d0, i32* %r0.global-to-local, align 4
  %v1_100014d4 = load i32, i32* @r31, align 4
  %v2_100014d4 = add i32 %v1_100014d4, 16
  %v3_100014d4 = inttoptr i32 %v2_100014d4 to i32*
  store i32 %v3_100014d0, i32* %v3_100014d4, align 4
  %v0_100014d8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100014d8, label %dec_label_pc_100014dc, label %dec_label_pc_10001608

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014d0, %dec_label_pc_100015fc, %dec_label_pc_10001608
  %v0_100014dc = load i32, i32* %r27.global-to-local, align 4
  %v1_100014dc = trunc i32 %v0_100014dc to i16
  %v2_100014dc = load i32, i32* %r28.global-to-local, align 4
  %v3_100014dc = add i32 %v2_100014dc, 10
  %v4_100014dc = inttoptr i32 %v3_100014dc to i16*
  store i16 %v1_100014dc, i16* %v4_100014dc, align 2
  %v0_100014e4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014e4, i32* @r3, align 4
  %v2_100014e8 = call i32 @function_100043cc(i32 %v0_100014e4, i32 20)
  %v3_100014e8 = trunc i32 %v2_100014e8 to i16
  %v4_100014f0 = add i32 %v0_100014e4, 10
  %v5_100014f0 = inttoptr i32 %v4_100014f0 to i16*
  store i16 %v3_100014e8, i16* %v5_100014f0, align 2
  %v0_100014f4 = load i32, i32* @r31, align 4
  store i32 %v0_100014f4, i32* @r3, align 4
  %v0_100014f8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100014f8 = trunc i32 %v0_100014f8 to i16
  %v3_100014f8 = add i32 %v0_100014f4, 10
  %v4_100014f8 = inttoptr i32 %v3_100014f8 to i16*
  store i16 %v1_100014f8, i16* %v4_100014f8, align 2
  %v2_100014fc = call i32 @function_100043cc(i32 %v0_100014f4, i32 20)
  %v3_100014fc = trunc i32 %v2_100014fc to i16
  %v0_10001500 = load i32, i32* @r30, align 4
  store i32 %v0_10001500, i32* @r4, align 4
  %v3_10001504 = load i32, i32* @r31, align 4
  %v4_10001504 = add i32 %v3_10001504, 10
  %v5_10001504 = inttoptr i32 %v4_10001504 to i16*
  store i16 %v3_100014fc, i16* %v5_10001504, align 2
  %v0_10001508 = load i32, i32* %r22.global-to-local, align 4
  %v0_1000150c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000150c = trunc i32 %v0_1000150c to i16
  %v2_1000150c = load i32, i32* @r30, align 4
  %v3_1000150c = add i32 %v2_1000150c, 6
  %v4_1000150c = inttoptr i32 %v3_1000150c to i16*
  store i16 %v1_1000150c, i16* %v4_1000150c, align 2
  %v0_10001510 = load i32, i32* @r31, align 4
  store i32 %v0_10001510, i32* %r3.global-to-local, align 4
  %v0_10001514 = load i32, i32* @r30, align 4
  %v1_10001514 = add i32 %v0_10001514, 4
  %v2_10001514 = inttoptr i32 %v1_10001514 to i16*
  %v3_10001514 = load i16, i16* %v2_10001514, align 2
  %v4_10001514 = zext i16 %v3_10001514 to i32
  %v4_10001518 = call i32 @function_10004430(i32 %v0_10001510, i32 %v0_10001500, i32 %v4_10001514, i32 %v0_10001508)
  %v5_10001518 = trunc i32 %v4_10001518 to i16
  store i32 %v4_10001518, i32* %r3.global-to-local, align 4
  %v3_1000151c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000151c, i32* %r0.global-to-local, align 4
  %v0_10001520 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001520 = add i32 %v0_10001520, 16
  %v2_10001520 = inttoptr i32 %v1_10001520 to i32*
  %v3_10001520 = load i32, i32* %v2_10001520, align 4
  store i32 %v3_10001520, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001528 = mul i32 %v3_1000151c, 24
  store i32 %v1_10001528, i32* %r0.global-to-local, align 4
  %v3_1000152c = load i32, i32* @r30, align 4
  %v4_1000152c = add i32 %v3_1000152c, 6
  %v5_1000152c = inttoptr i32 %v4_1000152c to i16*
  store i16 %v5_10001518, i16* %v5_1000152c, align 2
  %v0_10001530 = load i32, i32* %r28.global-to-local, align 4
  %v0_10001534 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001534, i32* %r3.global-to-local, align 4
  %v0_10001538 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001538 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001538 = add i32 %v1_10001538, %v0_10001538
  %v0_1000153c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000153c = trunc i32 %v0_1000153c to i16
  %v5_1000153c = inttoptr i32 %v2_10001538 to i16*
  store i16 %v3_1000153c, i16* %v5_1000153c, align 2
  %v0_10001540 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001540 = add i32 %v2_10001538, 4
  %v3_10001540 = inttoptr i32 %v2_10001540 to i32*
  store i32 %v0_10001540, i32* %v3_10001540, align 4
  %v0_10001544 = load i32, i32* %r24.global-to-local, align 4
  %v0_10001548 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001548 = trunc i32 %v0_10001548 to i16
  %v3_10001548 = add i32 %v2_10001538, 2
  %v4_10001548 = inttoptr i32 %v3_10001548 to i16*
  store i16 %v1_10001548, i16* %v4_10001548, align 2
  store i32 268440920, i32* @lr, align 4
  %v6_10001554 = call i32 @function_10009924(i32 %v0_10001534, i32 %v0_10001530, i32 %v0_10001544, i32 16384, i32 %v2_10001538, i32 16)
  store i32 %v6_10001554, i32* %r3.global-to-local, align 4
  %v3_10001558 = load i32, i32* %stack_var_-104, align 4
  %v1_1000155c = add i32 %v3_10001558, 1
  store i32 %v1_1000155c, i32* %r9.global-to-local, align 4
  %v1_10001560 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001560 = icmp slt i32 %v1_1000155c, %v1_10001560
  %v4_10001560 = icmp eq i32 %v1_1000155c, %v1_10001560
  store i1 %v4_10001560, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000155c, i32* %stack_var_-104, align 4
  br i1 %v2_10001560, label %dec_label_pc_10001478, label %dec_label_pc_1000156c

dec_label_pc_1000156c:                            ; preds = %dec_label_pc_100014dc
  %v0_1000156c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000156c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000156c = or i1 %v0_1000156c, %v1_1000156c
  br i1 %v2_1000156c, label %dec_label_pc_10001464.outer, label %dec_label_pc_10001468

dec_label_pc_10001574:                            ; preds = %dec_label_pc_10001478
  %v1_10001574 = add i32 %v2_10001484, 16
  %v2_10001574 = inttoptr i32 %v1_10001574 to i32*
  %v3_10001574 = load i32, i32* %v2_10001574, align 4
  store i32 %v3_10001574, i32* %r29.global-to-local, align 4
  %v0_10001578 = call i32 @function_10005cd4()
  store i32 %v0_10001578, i32* %r3.global-to-local, align 4
  %v3_1000157c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000157c, i32* %r9.global-to-local, align 4
  %v0_10001580 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001580 = mul i32 %v0_10001580, 16
  %v2_10001580 = udiv i32 %v0_10001580, 268435456
  %v3_10001580 = or i32 %v2_10001580, %v1_10001580
  store i32 %v3_10001580, i32* %r21.global-to-local, align 4
  %v1_10001584 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001580)
  %v1_10001588 = mul nuw i32 %v2_10001580, 268435456
  %v2_10001588 = urem i32 %v0_10001580, 268435456
  %v3_10001588 = or i32 %v1_10001588, %v2_10001588
  store i32 %v3_10001588, i32* %r21.global-to-local, align 4
  %v0_1000158c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000158c = mul i32 %v0_1000158c, 24
  %v1_10001590 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001590 = add i32 %v1_10001590, %v1_1000158c
  store i32 %v2_10001590, i32* %r9.global-to-local, align 4
  %v1_10001594 = add i32 %v2_10001590, 20
  %v2_10001594 = inttoptr i32 %v1_10001594 to i8*
  %v3_10001594 = load i8, i8* %v2_10001594, align 1
  %v4_10001594 = zext i8 %v3_10001594 to i32
  store i32 %v4_10001594, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001594, 64
  %v2_10001598 = zext i8 %tmp to i32
  %v3_10001598 = lshr i32 %v0_10001578, %v2_10001598
  store i32 %v3_10001598, i32* %r3.global-to-local, align 4
  %v0_1000159c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000159c = add i32 %v3_10001598, %v0_1000159c
  store i32 %v2_1000159c, i32* %r29.global-to-local, align 4
  %v1_100015a0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100015a0 = add i32 %v1_100015a0, 16
  %v3_100015a0 = inttoptr i32 %v2_100015a0 to i32*
  store i32 %v2_1000159c, i32* %v3_100015a0, align 4
  %v0_100015a4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100015a4, label %dec_label_pc_100015a8, label %dec_label_pc_100014ac

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_1000149c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100015ac = call i32 @function_10005cd4()
  store i32 %v0_100015ac, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100015b4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100015b4 = add i32 %v1_100015b4, 12
  %v3_100015b4 = inttoptr i32 %v2_100015b4 to i32*
  store i32 %v0_100015ac, i32* %v3_100015b4, align 4
  %v0_100015b8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100015b8 = load i32, i32* @r29, align 4
  %v4_100015b8 = icmp eq i32 %v0_100015b8, %v1_100015b8
  store i1 %v4_100015b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100015b8, label %dec_label_pc_100015c0, label %dec_label_pc_100014bc

dec_label_pc_100015c0:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100014ac
  %v0_100015c0 = call i32 @function_10005cd4()
  %v0_100015c4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100015c4 = load i32, i32* @r29, align 4
  %v4_100015c4 = icmp eq i32 %v0_100015c4, %v1_100015c4
  store i1 %v4_100015c4, i1* %cr7_eq.global-to-local, align 1
  %v1_100015c8 = urem i32 %v0_100015c0, 65536
  store i32 %v1_100015c8, i32* %r3.global-to-local, align 4
  %v1_100015cc = add nsw i32 %v1_100015c8, -1000
  store i32 %v1_100015cc, i32* %r0.global-to-local, align 4
  %v1_100015d0 = trunc i32 %v0_100015c0 to i16
  %v2_100015d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100015d0 = add i32 %v2_100015d0, 4
  %v4_100015d0 = inttoptr i32 %v3_100015d0 to i16*
  store i16 %v1_100015d0, i16* %v4_100015d0, align 2
  %v0_100015d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100015d4 = sub i32 -1, %v0_100015d4
  store i32 %v1_100015d4, i32* %r0.global-to-local, align 4
  %v1_100015d8 = trunc i32 %v1_100015d4 to i16
  %v2_100015d8 = load i32, i32* @r31, align 4
  %v3_100015d8 = add i32 %v2_100015d8, 4
  %v4_100015d8 = inttoptr i32 %v3_100015d8 to i16*
  store i16 %v1_100015d8, i16* %v4_100015d8, align 2
  br i1 %v4_100015c4, label %dec_label_pc_100015e0, label %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge

dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge: ; preds = %dec_label_pc_100015c0
  %v1_100014c4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100014c4

dec_label_pc_100015e0:                            ; preds = %dec_label_pc_100015c0, %dec_label_pc_100014bc
  %v0_100015e0 = call i32 @function_10005cd4()
  %v1_100015e0 = trunc i32 %v0_100015e0 to i16
  store i32 %v0_100015e0, i32* %r3.global-to-local, align 4
  %v0_100015e4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100015e4 = load i32, i32* @r29, align 4
  %v4_100015e4 = icmp eq i32 %v0_100015e4, %v1_100015e4
  store i1 %v4_100015e4, i1* %cr7_eq.global-to-local, align 1
  %v3_100015e8 = load i32, i32* %r28.global-to-local, align 4
  %v4_100015e8 = add i32 %v3_100015e8, 44
  %v5_100015e8 = inttoptr i32 %v4_100015e8 to i16*
  store i16 %v1_100015e0, i16* %v5_100015e8, align 2
  br i1 %v4_100015e4, label %dec_label_pc_100015f0, label %dec_label_pc_100014cc

dec_label_pc_100015f0:                            ; preds = %dec_label_pc_100015e0, %dec_label_pc_100014c4
  %v0_100015f0 = call i32 @function_10005cd4()
  %v1_100015f0 = trunc i32 %v0_100015f0 to i16
  store i32 %v0_100015f0, i32* %r3.global-to-local, align 4
  %v3_100015f4 = load i32, i32* @r30, align 4
  %v4_100015f4 = add i32 %v3_100015f4, 2
  %v5_100015f4 = inttoptr i32 %v4_100015f4 to i16*
  store i16 %v1_100015f0, i16* %v5_100015f4, align 2
  %v0_100015f8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100015f8, label %dec_label_pc_100015fc, label %dec_label_pc_100014d0

dec_label_pc_100015fc:                            ; preds = %dec_label_pc_100015f0, %dec_label_pc_100014cc
  %v0_100015fc = call i32 @function_10005cd4()
  store i32 %v0_100015fc, i32* %r3.global-to-local, align 4
  %v1_10001600 = load i32, i32* @r31, align 4
  %v2_10001600 = add i32 %v1_10001600, 16
  %v3_10001600 = inttoptr i32 %v2_10001600 to i32*
  store i32 %v0_100015fc, i32* %v3_10001600, align 4
  %v0_10001604 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001604, label %dec_label_pc_100014dc, label %dec_label_pc_10001608

dec_label_pc_10001608:                            ; preds = %dec_label_pc_100014d0, %dec_label_pc_100015fc
  %v0_10001608 = load i32, i32* @r30, align 4
  %v1_10001608 = add i32 %v0_10001608, 8
  store i32 %v1_10001608, i32* @r3, align 4
  %v0_1000160c = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_1000160c, i32* @r4, align 4
  %v0_10001610 = call i32 @function_10005ea8()
  store i32 %v0_10001610, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100014dc

; uselistorder directives
  uselistorder i32 %v0_100015f0, { 1, 0 }
  uselistorder i32 %v0_100015e0, { 1, 0 }
  uselistorder i32 %v1_100015d4, { 1, 0 }
  uselistorder i32 %v1_100015c8, { 1, 0 }
  uselistorder i32 %v0_100015c0, { 1, 0 }
  uselistorder i32 %v1_100015b8, { 1, 0 }
  uselistorder i32 %v0_10001580, { 2, 1, 0 }
  uselistorder i1 %v1_1000156c, { 1, 0 }
  uselistorder i1 %v0_1000156c, { 1, 0 }
  uselistorder i32 %v1_1000155c, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001538, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001518, { 1, 0 }
  uselistorder i32 %v0_1000149c, { 2, 1, 0 }
  uselistorder i32 %v4_10001480, { 1, 0, 2 }
  uselistorder i32 %v1_1000147c, { 1, 0 }
  uselistorder i32 %v1_100013cc, { 1, 0 }
  uselistorder i32 %v1_10001314, { 1, 0 }
  uselistorder i32 %v1_10001308, { 1, 0 }
  uselistorder i32 %v1_100012a4, { 1, 0 }
  uselistorder i32 %v0_100012a4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001294, { 1, 2, 0 }
  uselistorder i32 %v0_10001288, { 1, 0 }
  uselistorder i32 %v5_10001234, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 19, 20, 21, 22, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 4, 5, 17, 18 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 27, 28, 29, 30, 31, 32, 33, 34, 3, 4, 5, 6, 1, 14, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 2, 0 }
  uselistorder i32* %r29.global-to-local, { 6, 5, 7, 8, 0, 4, 1, 2, 3 }
  uselistorder i32* %r28.global-to-local, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32* %r26.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r21.global-to-local, { 8, 9, 7, 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r16.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 28, 29, 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22, 18, 19, 20, 21, 8, 23, 24, 25, 26, 27 }
  uselistorder i1* %cr7_eq.global-to-local, { 10, 11, 12, 4, 13, 0, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i1* %cr2_eq.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_10001608, { 1, 0 }
  uselistorder label %dec_label_pc_100014dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001468, { 1, 0 }
  uselistorder label %dec_label_pc_10001464, { 1, 0 }
  uselistorder label %dec_label_pc_10001448, { 1, 0 }
  uselistorder label %dec_label_pc_100013e4, { 1, 0 }
  uselistorder label %dec_label_pc_100013b8, { 1, 0 }
  uselistorder label %dec_label_pc_10001358, { 1, 0 }
}

define i32 @function_10001618(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001618:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10001620 = call i32 @__asm_mfcr()
  store i32 %v0_10001620, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000164c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001654 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268441208, i32* @lr, align 4
  %v2_10001674 = call i32 @function_10009cfc(i32 4, i32 4)
  store i32 %v2_10001674, i32* %r27.global-to-local, align 4
  %v0_10001680 = load i32, i32* @r30, align 4
  store i32 %v0_10001680, i32* %r3.global-to-local, align 4
  store i32 268441224, i32* @lr, align 4
  %v2_10001684 = call i32 @function_10009cfc(i32 %v0_10001680, i32 4)
  %v0_1000168c = load i32, i32* @r28, align 4
  store i32 %v2_10001684, i32* %r26.global-to-local, align 4
  %v0_1000169c = load i32, i32* @r29, align 4
  store i32 %v0_1000169c, i32* %r3.global-to-local, align 4
  store i32 268441252, i32* @lr, align 4
  %v4_100016a0 = inttoptr i32 %v0_1000168c to i32*
  %v5_100016a0 = call i32 @function_100006a8(i32 %v0_1000169c, i32* %v4_100016a0, i32 7, i32 65535)
  %v0_100016ac = load i32, i32* @r28, align 4
  %v1_100016b4 = urem i32 %v5_100016a0, 65536
  store i32 %v1_100016b4, i32* %r21.global-to-local, align 4
  %v0_100016b8 = load i32, i32* @r29, align 4
  store i32 %v0_100016b8, i32* %r3.global-to-local, align 4
  store i32 268441280, i32* @lr, align 4
  %v4_100016bc = inttoptr i32 %v0_100016ac to i32*
  %v5_100016bc = call i32 @function_100006a8(i32 %v0_100016b8, i32* %v4_100016bc, i32 6, i32 65535)
  %v0_100016c0 = load i32, i32* @r28, align 4
  %v1_100016c4 = urem i32 %v5_100016bc, 65536
  store i32 %v1_100016c4, i32* %r22.global-to-local, align 4
  %v0_100016d0 = load i32, i32* @r29, align 4
  store i32 %v0_100016d0, i32* %r3.global-to-local, align 4
  store i32 268441304, i32* @lr, align 4
  %v4_100016d4 = inttoptr i32 %v0_100016c0 to i32*
  %v5_100016d4 = call i32 @function_100006a8(i32 %v0_100016d0, i32* %v4_100016d4, i32 0, i32 1024)
  %v0_100016d8 = load i32, i32* @r28, align 4
  %v1_100016dc = urem i32 %v5_100016d4, 65536
  store i32 %v1_100016dc, i32* @r31, align 4
  %v0_100016e4 = load i32, i32* @r29, align 4
  store i32 %v0_100016e4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100016f0.18 to i32), i32* @lr, align 4
  %v4_100016ec = inttoptr i32 %v0_100016d8 to i32*
  %v5_100016ec = call i32 @function_100006a8(i32 %v0_100016e4, i32* %v4_100016ec, i32 1, i32 1)
  store i32 %v5_100016ec, i32* %r3.global-to-local, align 4
  %v0_100016fc = load i32, i32* %r22.global-to-local, align 4
  %v4_100016fc = icmp eq i32 %v0_100016fc, 65535
  %v1_10001704 = urem i32 %v5_100016ec, 256
  store i32 %v1_10001704, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_100016fc, label %dec_label_pc_10001900, label %dec_label_pc_10001718

dec_label_pc_10001718:                            ; preds = %dec_label_pc_10001618, %dec_label_pc_10001900
  %v0_10001718 = load i32, i32* @r30, align 4
  %v1_10001718 = icmp slt i32 %v0_10001718, 0
  %v3_10001718 = icmp eq i32 %v0_10001718, 0
  store i1 %v1_10001718, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001718, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10001718, 1
  br i1 %tmp38, label %dec_label_pc_100017d8, label %dec_label_pc_10001720

dec_label_pc_10001720:                            ; preds = %dec_label_pc_10001718
  %v0_10001724 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001724, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10001730 = load i32, i32* %r21.global-to-local, align 4
  %v4_10001730 = icmp eq i32 %v0_10001730, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_10001880 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10001730, label %dec_label_pc_10001850, label %dec_label_pc_10001744

dec_label_pc_10001744:                            ; preds = %dec_label_pc_10001720, %dec_label_pc_100017b8
  %v0_10001750 = phi i32 [ %v0_100017cc, %dec_label_pc_100017b8 ], [ 0, %dec_label_pc_10001720 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10001750 = add i32 %v0_10001750, 1
  store i32 %v1_10001750, i32* %r24.global-to-local, align 4
  store i32 268441432, i32* @lr, align 4
  %v2_10001754 = call i32 @function_10009cfc(i32 65535, i32 1)
  %v0_10001758 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001758 = trunc i32 %v0_10001758 to i16
  %v2_10001758 = load i32, i32* @r28, align 4
  %v3_10001758 = add i32 %v2_10001758, 2
  %v4_10001758 = inttoptr i32 %v3_10001758 to i16*
  store i16 %v1_10001758, i16* %v4_10001758, align 2
  %v1_1000175c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000175c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000175c = add i32 %v2_1000175c, %v1_1000175c
  %v4_1000175c = inttoptr i32 %v3_1000175c to i32*
  store i32 %v2_10001754, i32* %v4_1000175c, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441456, i32* @lr, align 4
  %v3_1000176c = call i32 @function_100099a0(i32 2, i32 2, i32 0)
  store i32 %v3_1000176c, i32* %r3.global-to-local, align 4
  %v3_10001774 = icmp eq i32 %v3_1000176c, -1
  %v1_1000177c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000177c = load i32, i32* %r26.global-to-local, align 4
  %v3_1000177c = add i32 %v2_1000177c, %v1_1000177c
  %v4_1000177c = inttoptr i32 %v3_1000177c to i32*
  store i32 %v3_1000176c, i32* %v4_1000177c, align 4
  br i1 %v3_10001774, label %dec_label_pc_100018b4, label %dec_label_pc_10001784

dec_label_pc_10001784:                            ; preds = %dec_label_pc_10001744
  %v0_10001784 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001784, i32* %stack_var_-72, align 4
  store i32 268441492, i32* @lr, align 4
  %v0_10001790 = load i32, i32* %r3.global-to-local, align 4
  %v3_10001790 = call i32 @function_1000976c(i32 %v0_10001790, i32 %v2_10001880, i32 16)
  store i32 %v3_10001790, i32* %r3.global-to-local, align 4
  %v0_10001794 = load i32, i32* @r28, align 4
  %v1_10001794 = add i32 %v0_10001794, 20
  %v2_10001794 = inttoptr i32 %v1_10001794 to i8*
  %v3_10001794 = load i8, i8* %v2_10001794, align 1
  %v2_10001798 = icmp ugt i8 %v3_10001794, 31
  br i1 %v2_10001798, label %dec_label_pc_100017b8, label %dec_label_pc_100017a0

dec_label_pc_100017a0:                            ; preds = %dec_label_pc_10001784
  %v1_100017a0 = add i32 %v0_10001794, 16
  %v2_100017a0 = inttoptr i32 %v1_100017a0 to i32*
  %v3_100017a0 = load i32, i32* %v2_100017a0, align 4
  store i32 %v3_100017a0, i32* %r29.global-to-local, align 4
  %v0_100017a4 = call i32 @function_10005cd4()
  store i32 %v0_100017a4, i32* %r3.global-to-local, align 4
  %v0_100017a8 = load i32, i32* @r28, align 4
  %v1_100017a8 = add i32 %v0_100017a8, 20
  %v2_100017a8 = inttoptr i32 %v1_100017a8 to i8*
  %v3_100017a8 = load i8, i8* %v2_100017a8, align 1
  %tmp = urem i8 %v3_100017a8, 64
  %v2_100017ac = zext i8 %tmp to i32
  %v3_100017ac = lshr i32 %v0_100017a4, %v2_100017ac
  %v0_100017b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100017b0 = add i32 %v3_100017ac, %v0_100017b0
  store i32 %v2_100017b0, i32* %r3.global-to-local, align 4
  %v2_100017b4 = add i32 %v0_100017a8, 4
  %v3_100017b4 = inttoptr i32 %v2_100017b4 to i32*
  store i32 %v2_100017b0, i32* %v3_100017b4, align 4
  br label %dec_label_pc_100017b8

dec_label_pc_100017b8:                            ; preds = %dec_label_pc_10001784, %dec_label_pc_100017a0
  %v0_100017b8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100017b8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100017b8 = add i32 %v1_100017b8, %v0_100017b8
  %v3_100017b8 = inttoptr i32 %v2_100017b8 to i32*
  %v4_100017b8 = load i32, i32* %v3_100017b8, align 4
  store i32 %v4_100017b8, i32* @r3, align 4
  %v1_100017c4 = add i32 %v0_100017b8, 4
  store i32 %v1_100017c4, i32* %r25.global-to-local, align 4
  store i32 268441548, i32* @lr, align 4
  %v0_100017c8 = call i32 @function_100097a0()
  store i32 %v0_100017c8, i32* %r3.global-to-local, align 4
  %v0_100017cc = load i32, i32* %r24.global-to-local, align 4
  %v1_100017cc = load i32, i32* @r30, align 4
  %v4_100017cc = icmp eq i32 %v0_100017cc, %v1_100017cc
  %v0_100017d0 = load i32, i32* @r28, align 4
  %v1_100017d0 = add i32 %v0_100017d0, 24
  store i32 %v1_100017d0, i32* @r28, align 4
  br i1 %v4_100017cc, label %dec_label_pc_100017d8, label %dec_label_pc_10001744

dec_label_pc_100017d8:                            ; preds = %dec_label_pc_100017b8, %dec_label_pc_10001830, %dec_label_pc_10001718
  %v0_100017d8 = load i32, i32* %r23.global-to-local, align 4
  %v3_100017d8 = icmp eq i32 %v0_100017d8, 0
  store i1 %v3_100017d8, i1* %cr3_eq.global-to-local, align 1
  %v0_100017dc.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100017dc.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100017dc.outer

dec_label_pc_100017dc.outer:                      ; preds = %dec_label_pc_10001810, %dec_label_pc_10001948, %dec_label_pc_100017d8
  %v1_100017dc.ph39 = phi i1 [ %v1_100017dc.pre, %dec_label_pc_100017d8 ], [ %v1_10001948, %dec_label_pc_10001948 ], [ %v1_10001810, %dec_label_pc_10001810 ]
  %v0_100017dc.ph40 = phi i1 [ %v0_100017dc.pre, %dec_label_pc_100017d8 ], [ %v0_10001948, %dec_label_pc_10001948 ], [ %v0_10001810, %dec_label_pc_10001810 ]
  %v2_100017dc = or i1 %v1_100017dc.ph39, %v0_100017dc.ph40
  br label %dec_label_pc_100017dc

dec_label_pc_100017dc:                            ; preds = %dec_label_pc_100017dc.outer, %dec_label_pc_100017dc
  br i1 %v2_100017dc, label %dec_label_pc_100017dc, label %dec_label_pc_100017e0

dec_label_pc_100017e0:                            ; preds = %dec_label_pc_10001948, %dec_label_pc_10001810, %dec_label_pc_100017dc
  %v0_100017e0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100017e0, label %dec_label_pc_100017e4, label %dec_label_pc_1000190c

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_100017e0
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100017ec

dec_label_pc_100017ec:                            ; preds = %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge, %dec_label_pc_100017e4
  %v0_100017f0 = phi i32 [ %v0_10001808, %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge ], [ 0, %dec_label_pc_100017e4 ]
  %v0_10001800 = phi i32 [ %v0_100017ec.pre, %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge ], [ 0, %dec_label_pc_100017e4 ]
  %v1_100017ec = load i32, i32* %r26.global-to-local, align 4
  %v2_100017ec = add i32 %v1_100017ec, %v0_10001800
  %v3_100017ec = inttoptr i32 %v2_100017ec to i32*
  %v4_100017ec = load i32, i32* %v3_100017ec, align 4
  store i32 %v4_100017ec, i32* %r3.global-to-local, align 4
  %v1_100017f0 = add i32 %v0_100017f0, 1
  store i32 %v1_100017f0, i32* %r28.global-to-local, align 4
  %v1_100017f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100017f4 = add i32 %v1_100017f4, %v0_10001800
  %v3_100017f4 = inttoptr i32 %v2_100017f4 to i32*
  %v4_100017f4 = load i32, i32* %v3_100017f4, align 4
  %v0_100017f8 = load i32, i32* @r31, align 4
  %v1_10001800 = add i32 %v0_10001800, 4
  store i32 %v1_10001800, i32* %r29.global-to-local, align 4
  store i32 268441608, i32* @lr, align 4
  %v4_10001804 = call i32 @function_100098ec(i32 %v4_100017ec, i32 %v4_100017f4, i32 %v0_100017f8, i32 16384)
  store i32 %v4_10001804, i32* %r3.global-to-local, align 4
  %v0_10001808 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001808 = load i32, i32* @r30, align 4
  %v4_10001808 = icmp eq i32 %v0_10001808, %v1_10001808
  br i1 %v4_10001808, label %dec_label_pc_10001810, label %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge

dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge: ; preds = %dec_label_pc_100017ec
  %v0_100017ec.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100017ec

dec_label_pc_10001810:                            ; preds = %dec_label_pc_100017ec
  %v0_10001810 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001810 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001810 = or i1 %v0_10001810, %v1_10001810
  br i1 %v2_10001810, label %dec_label_pc_100017dc.outer, label %dec_label_pc_100017e0

dec_label_pc_10001830:                            ; preds = %dec_label_pc_10001894, %dec_label_pc_100018b0
  %v0_10001830 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001830 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001830 = add i32 %v1_10001830, %v0_10001830
  %v3_10001830 = inttoptr i32 %v2_10001830 to i32*
  %v4_10001830 = load i32, i32* %v3_10001830, align 4
  store i32 %v4_10001830, i32* @r3, align 4
  %v1_1000183c = add i32 %v0_10001830, 4
  store i32 %v1_1000183c, i32* %r25.global-to-local, align 4
  store i32 268441668, i32* @lr, align 4
  %v0_10001840 = call i32 @function_100097a0()
  store i32 %v0_10001840, i32* %r3.global-to-local, align 4
  %v0_10001844 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001844 = load i32, i32* @r30, align 4
  %v4_10001844 = icmp eq i32 %v0_10001844, %v1_10001844
  %v0_10001848 = load i32, i32* @r28, align 4
  %v1_10001848 = add i32 %v0_10001848, 24
  store i32 %v1_10001848, i32* @r28, align 4
  br i1 %v4_10001844, label %dec_label_pc_100017d8, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_10001720, %dec_label_pc_10001830
  %v0_1000185c = phi i32 [ %v0_10001844, %dec_label_pc_10001830 ], [ 0, %dec_label_pc_10001720 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_1000185c = add i32 %v0_1000185c, 1
  store i32 %v1_1000185c, i32* %r24.global-to-local, align 4
  store i32 268441700, i32* @lr, align 4
  %v2_10001860 = call i32 @function_10009cfc(i32 65535, i32 1)
  store i32 %v2_10001860, i32* %r3.global-to-local, align 4
  %v1_10001864 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001864 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001864 = add i32 %v2_10001864, %v1_10001864
  %v4_10001864 = inttoptr i32 %v3_10001864 to i32*
  store i32 %v2_10001860, i32* %v4_10001864, align 4
  %v0_10001868 = call i32 @function_10005cd4()
  %v1_10001868 = trunc i32 %v0_10001868 to i16
  %v3_1000186c = load i32, i32* @r28, align 4
  %v4_1000186c = add i32 %v3_1000186c, 2
  %v5_1000186c = inttoptr i32 %v4_1000186c to i16*
  store i16 %v1_10001868, i16* %v5_1000186c, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441728, i32* @lr, align 4
  %v3_1000187c = call i32 @function_100099a0(i32 2, i32 2, i32 0)
  store i32 %v3_1000187c, i32* %r3.global-to-local, align 4
  %v3_10001884 = icmp eq i32 %v3_1000187c, -1
  %v1_1000188c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000188c = load i32, i32* %r26.global-to-local, align 4
  %v3_1000188c = add i32 %v2_1000188c, %v1_1000188c
  %v4_1000188c = inttoptr i32 %v3_1000188c to i32*
  store i32 %v3_1000187c, i32* %v4_1000188c, align 4
  br i1 %v3_10001884, label %dec_label_pc_100018b4, label %dec_label_pc_10001894

dec_label_pc_10001894:                            ; preds = %dec_label_pc_10001850
  %v0_10001894 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001894, i32* %stack_var_-72, align 4
  store i32 268441764, i32* @lr, align 4
  %v0_100018a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100018a0 = call i32 @function_1000976c(i32 %v0_100018a0, i32 %v2_10001880, i32 16)
  store i32 %v3_100018a0, i32* %r3.global-to-local, align 4
  %v0_100018a4 = load i32, i32* @r28, align 4
  %v1_100018a4 = add i32 %v0_100018a4, 20
  %v2_100018a4 = inttoptr i32 %v1_100018a4 to i8*
  %v3_100018a4 = load i8, i8* %v2_100018a4, align 1
  %v2_100018a8 = icmp ugt i8 %v3_100018a4, 31
  br i1 %v2_100018a8, label %dec_label_pc_10001830, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_10001894
  %v1_10001818 = add i32 %v0_100018a4, 16
  %v2_10001818 = inttoptr i32 %v1_10001818 to i32*
  %v3_10001818 = load i32, i32* %v2_10001818, align 4
  store i32 %v3_10001818, i32* %r29.global-to-local, align 4
  %v0_1000181c = call i32 @function_10005cd4()
  store i32 %v0_1000181c, i32* %r3.global-to-local, align 4
  %v0_10001820 = load i32, i32* @r28, align 4
  %v1_10001820 = add i32 %v0_10001820, 20
  %v2_10001820 = inttoptr i32 %v1_10001820 to i8*
  %v3_10001820 = load i8, i8* %v2_10001820, align 1
  %tmp43 = urem i8 %v3_10001820, 64
  %v2_10001824 = zext i8 %tmp43 to i32
  %v3_10001824 = lshr i32 %v0_1000181c, %v2_10001824
  %v0_10001828 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001828 = add i32 %v3_10001824, %v0_10001828
  store i32 %v2_10001828, i32* %r3.global-to-local, align 4
  %v2_1000182c = add i32 %v0_10001820, 4
  %v3_1000182c = inttoptr i32 %v2_1000182c to i32*
  store i32 %v2_10001828, i32* %v3_1000182c, align 4
  br label %dec_label_pc_10001830

dec_label_pc_100018b4:                            ; preds = %dec_label_pc_10001744, %dec_label_pc_10001850
  %v1_100018c8 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10001620)
  store i32 %v0_1000164c, i32* %r28.global-to-local, align 4
  store i32 %v0_10001654, i32* %r29.global-to-local, align 4
  %v0_100018fc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100018fc

dec_label_pc_10001900:                            ; preds = %dec_label_pc_10001618
  %v0_10001900 = call i32 @function_10005cd4()
  store i32 %v0_10001900, i32* %r3.global-to-local, align 4
  %v1_10001904 = urem i32 %v0_10001900, 65536
  store i32 %v1_10001904, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10001718

dec_label_pc_1000190c:                            ; preds = %dec_label_pc_100017e0
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001914

dec_label_pc_10001914:                            ; preds = %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge, %dec_label_pc_1000190c
  %v0_1000191c = phi i32 [ %v0_10001940, %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge ], [ 0, %dec_label_pc_1000190c ]
  %v0_10001914 = phi i32 [ %v0_10001914.pre, %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge ], [ 0, %dec_label_pc_1000190c ]
  %v1_10001914 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001914 = add i32 %v1_10001914, %v0_10001914
  %v3_10001914 = inttoptr i32 %v2_10001914 to i32*
  %v4_10001914 = load i32, i32* %v3_10001914, align 4
  store i32 %v4_10001914, i32* @r29, align 4
  %v0_10001918 = load i32, i32* @r31, align 4
  store i32 %v0_10001918, i32* @r4, align 4
  %v1_1000191c = add i32 %v0_1000191c, 1
  store i32 %v1_1000191c, i32* %r25.global-to-local, align 4
  store i32 %v4_10001914, i32* @r3, align 4
  %v0_10001924 = call i32 @function_10005ea8()
  store i32 %v0_10001924, i32* %r3.global-to-local, align 4
  %v0_10001928 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001928 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001928 = add i32 %v1_10001928, %v0_10001928
  %v3_10001928 = inttoptr i32 %v2_10001928 to i32*
  %v4_10001928 = load i32, i32* %v3_10001928, align 4
  store i32 %v4_10001928, i32* %r3.global-to-local, align 4
  %v0_1000192c = load i32, i32* @r29, align 4
  %v0_10001930 = load i32, i32* @r31, align 4
  %v1_10001938 = add i32 %v0_10001928, 4
  store i32 %v1_10001938, i32* %r28.global-to-local, align 4
  store i32 268441920, i32* @lr, align 4
  %v4_1000193c = call i32 @function_100098ec(i32 %v4_10001928, i32 %v0_1000192c, i32 %v0_10001930, i32 16384)
  store i32 %v4_1000193c, i32* %r3.global-to-local, align 4
  %v0_10001940 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001940 = load i32, i32* @r30, align 4
  %v4_10001940 = icmp eq i32 %v0_10001940, %v1_10001940
  br i1 %v4_10001940, label %dec_label_pc_10001948, label %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge

dec_label_pc_10001914.dec_label_pc_10001914_crit_edge: ; preds = %dec_label_pc_10001914
  %v0_10001914.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001914

dec_label_pc_10001948:                            ; preds = %dec_label_pc_10001914
  %v0_10001948 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001948 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001948 = or i1 %v0_10001948, %v1_10001948
  br i1 %v2_10001948, label %dec_label_pc_100017dc.outer, label %dec_label_pc_100017e0

; uselistorder directives
  uselistorder i1 %v1_10001948, { 1, 0 }
  uselistorder i1 %v0_10001948, { 1, 0 }
  uselistorder i32 %v0_10001940, { 1, 0 }
  uselistorder i32 %v0_10001928, { 1, 0 }
  uselistorder i32 %v0_10001830, { 1, 0 }
  uselistorder i1 %v1_10001810, { 1, 0 }
  uselistorder i1 %v0_10001810, { 1, 0 }
  uselistorder i32 %v0_10001808, { 1, 0 }
  uselistorder i32 %v0_10001800, { 2, 0, 1 }
  uselistorder i32 %v0_100017cc, { 1, 0 }
  uselistorder i32 %v0_100017b8, { 1, 0 }
  uselistorder i32 %v2_10001880, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 8, 9, 10, 11, 27, 12, 13, 15, 16, 17, 18, 19, 20, 14, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 3, 4, 5, 7, 8, 9, 6, 13, 10, 11, 12, 0, 1, 2 }
  uselistorder i32* %r24.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r22.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100018b4, { 1, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0 }
  uselistorder label %dec_label_pc_10001830, { 1, 0 }
  uselistorder label %dec_label_pc_100017dc, { 1, 0 }
  uselistorder label %dec_label_pc_100017dc.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100017d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100017b8, { 1, 0 }
  uselistorder label %dec_label_pc_10001744, { 1, 0 }
  uselistorder label %dec_label_pc_10001718, { 1, 0 }
}

define i32 @function_10001950(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001950:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10001954 = load i32, i32* @lr, align 4
  store i32 %v0_10001954, i32* %r0.global-to-local, align 4
  %v0_10001958 = call i32 @__asm_mfcr()
  store i32 %v0_10001958, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001968 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001958, i32* %r21.global-to-local, align 4
  %v0_100019a0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100019a8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268442052, i32* @lr, align 4
  %v2_100019c0 = call i32 @function_10009cfc(i32 16, i32 16)
  store i32 %v2_100019c0, i32* %r22.global-to-local, align 4
  %v0_100019cc = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100019cc, i32* %r3.global-to-local, align 4
  store i32 268442068, i32* @lr, align 4
  %v2_100019d0 = call i32 @function_10009cfc(i32 %v0_100019cc, i32 4)
  %v0_100019d4 = load i32, i32* @r28, align 4
  store i32 %v2_100019d0, i32* %r23.global-to-local, align 4
  %v0_100019e4 = load i32, i32* @r29, align 4
  store i32 %v0_100019e4, i32* %r3.global-to-local, align 4
  store i32 268442092, i32* @lr, align 4
  %v4_100019e8 = inttoptr i32 %v0_100019d4 to i32*
  %v5_100019e8 = call i32 @function_100006a8(i32 %v0_100019e4, i32* %v4_100019e8, i32 2, i32 0)
  %v5_100019f8 = trunc i32 %v5_100019e8 to i8
  %v0_10001a00 = load i32, i32* @r28, align 4
  %v0_10001a04 = load i32, i32* @r29, align 4
  store i32 %v0_10001a04, i32* %r3.global-to-local, align 4
  store i32 268442124, i32* @lr, align 4
  %v4_10001a08 = inttoptr i32 %v0_10001a00 to i32*
  %v5_10001a08 = call i32 @function_100006a8(i32 %v0_10001a04, i32* %v4_10001a08, i32 3, i32 65535)
  %v0_10001a0c = load i32, i32* @r28, align 4
  store i32 %v5_10001a08, i32* @r31, align 4
  %v0_10001a1c = load i32, i32* @r29, align 4
  store i32 %v0_10001a1c, i32* %r3.global-to-local, align 4
  store i32 268442148, i32* @lr, align 4
  %v4_10001a20 = inttoptr i32 %v0_10001a0c to i32*
  %v5_10001a20 = call i32 @function_100006a8(i32 %v0_10001a1c, i32* %v4_10001a20, i32 4, i32 64)
  %v0_10001a24 = load i32, i32* @r28, align 4
  %v5_10001a30 = trunc i32 %v5_10001a20 to i8
  %v0_10001a38 = load i32, i32* @r29, align 4
  store i32 %v0_10001a38, i32* %r3.global-to-local, align 4
  store i32 268442176, i32* @lr, align 4
  %v4_10001a3c = inttoptr i32 %v0_10001a24 to i32*
  %v5_10001a3c = call i32 @function_100006a8(i32 %v0_10001a38, i32* %v4_10001a3c, i32 5, i32 1)
  %v1_10001a44 = urem i32 %v5_10001a3c, 256
  %v0_10001a50 = load i32, i32* @r28, align 4
  %v0_10001a58 = load i32, i32* @r29, align 4
  store i32 %v0_10001a58, i32* %r3.global-to-local, align 4
  store i32 268442208, i32* @lr, align 4
  %v4_10001a5c = inttoptr i32 %v0_10001a50 to i32*
  %v5_10001a5c = call i32 @function_100006a8(i32 %v0_10001a58, i32* %v4_10001a5c, i32 7, i32 65535)
  %v0_10001a60 = load i32, i32* @r28, align 4
  %v5_10001a6c = trunc i32 %v5_10001a5c to i16
  %v0_10001a74 = load i32, i32* @r29, align 4
  store i32 %v0_10001a74, i32* %r3.global-to-local, align 4
  store i32 268442236, i32* @lr, align 4
  %v4_10001a78 = inttoptr i32 %v0_10001a60 to i32*
  %v5_10001a78 = call i32 @function_100006a8(i32 %v0_10001a74, i32* %v4_10001a78, i32 11, i32 1)
  %v0_10001a7c = load i32, i32* @r28, align 4
  %v1_10001a80 = urem i32 %v5_10001a78, 256
  %v0_10001a90 = load i32, i32* @r29, align 4
  store i32 %v0_10001a90, i32* %r3.global-to-local, align 4
  store i32 268442264, i32* @lr, align 4
  %v4_10001a94 = inttoptr i32 %v0_10001a7c to i32*
  %v5_10001a94 = call i32 @function_100006a8(i32 %v0_10001a90, i32* %v4_10001a94, i32 12, i32 1)
  %v0_10001a98 = load i32, i32* @r28, align 4
  %v1_10001aa4 = urem i32 %v5_10001a94, 256
  %v0_10001aa8 = load i32, i32* @r29, align 4
  store i32 %v0_10001aa8, i32* %r3.global-to-local, align 4
  store i32 268442288, i32* @lr, align 4
  %v4_10001aac = inttoptr i32 %v0_10001a98 to i32*
  %v5_10001aac = call i32 @function_100006a8(i32 %v0_10001aa8, i32* %v4_10001aac, i32 13, i32 1)
  %v0_10001ab0 = load i32, i32* @r28, align 4
  %v1_10001abc = urem i32 %v5_10001aac, 256
  %v0_10001ac0 = load i32, i32* @r29, align 4
  store i32 %v0_10001ac0, i32* %r3.global-to-local, align 4
  store i32 268442312, i32* @lr, align 4
  %v4_10001ac4 = inttoptr i32 %v0_10001ab0 to i32*
  %v5_10001ac4 = call i32 @function_100006a8(i32 %v0_10001ac0, i32* %v4_10001ac4, i32 14, i32 1)
  %v0_10001ac8 = load i32, i32* @r28, align 4
  %v1_10001ad4 = urem i32 %v5_10001ac4, 256
  %v0_10001ad8 = load i32, i32* @r29, align 4
  store i32 %v0_10001ad8, i32* %r3.global-to-local, align 4
  store i32 268442336, i32* @lr, align 4
  %v4_10001adc = inttoptr i32 %v0_10001ac8 to i32*
  %v5_10001adc = call i32 @function_100006a8(i32 %v0_10001ad8, i32* %v4_10001adc, i32 15, i32 1)
  %v0_10001ae0 = load i32, i32* @r28, align 4
  %v1_10001aec = urem i32 %v5_10001adc, 256
  %v0_10001af0 = load i32, i32* @r29, align 4
  store i32 %v0_10001af0, i32* %r3.global-to-local, align 4
  store i32 268442360, i32* @lr, align 4
  %v4_10001af4 = inttoptr i32 %v0_10001ae0 to i32*
  %v5_10001af4 = call i32 @function_100006a8(i32 %v0_10001af0, i32* %v4_10001af4, i32 16, i32 1)
  %v0_10001b00 = load i32, i32* @r28, align 4
  %v1_10001b04 = urem i32 %v5_10001af4, 256
  %v0_10001b08 = load i32, i32* @r29, align 4
  store i32 %v0_10001b08, i32* %r3.global-to-local, align 4
  store i32 268442384, i32* @lr, align 4
  %v4_10001b0c = inttoptr i32 %v0_10001b00 to i32*
  %v5_10001b0c = call i32 @function_100006a8(i32 %v0_10001b08, i32* %v4_10001b0c, i32 0, i32 768)
  %v0_10001b10 = load i32, i32* @r28, align 4
  store i32 %v5_10001b0c, i32* %r25.global-to-local, align 4
  %v0_10001b20 = load i32, i32* @r29, align 4
  store i32 %v0_10001b20, i32* %r3.global-to-local, align 4
  store i32 268442408, i32* @lr, align 4
  %v4_10001b24 = inttoptr i32 %v0_10001b10 to i32*
  %v5_10001b24 = call i32 @function_100006a8(i32 %v0_10001b20, i32* %v4_10001b24, i32 1, i32 1)
  %v1_10001b2c = urem i32 %v5_10001b24, 256
  store i32 %v1_10001b2c, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442428, i32* @lr, align 4
  %v3_10001b38 = call i32 @function_100099a0(i32 2, i32 3, i32 6)
  store i32 %v3_10001b38, i32* %r3.global-to-local, align 4
  %v3_10001b3c = icmp eq i32 %v3_10001b38, -1
  store i1 %v3_10001b3c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b38, i32* %r24.global-to-local, align 4
  br i1 %v3_10001b3c, label %dec_label_pc_10001cfc, label %dec_label_pc_10001b48

dec_label_pc_10001b48:                            ; preds = %dec_label_pc_10001950
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001b54 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268442468, i32* @lr, align 4
  %v4_10001b60 = call i32 @function_10009964(i32 0, i32 3, i32 %v2_10001b54, i32 4)
  store i32 %v4_10001b60, i32* %r3.global-to-local, align 4
  %v3_10001b64 = icmp eq i32 %v4_10001b60, -1
  store i1 %v3_10001b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b64, label %dec_label_pc_10001cf4, label %dec_label_pc_10001b6c

dec_label_pc_10001b6c:                            ; preds = %dec_label_pc_10001b48
  %v0_10001b6c = load i32, i32* %r21.global-to-local, align 4
  %v1_10001b6c = icmp slt i32 %v0_10001b6c, 0
  %v3_10001b6c = icmp eq i32 %v0_10001b6c, 0
  store i1 %v1_10001b6c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10001b6c, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10001b78 = load i32, i32* @r31, align 4
  %v1_10001b78 = urem i32 %v0_10001b78, 65536
  store i32 %v1_10001b78, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10001b6c, 1
  br i1 %tmp49, label %dec_label_pc_10001e94, label %dec_label_pc_10001b80

dec_label_pc_10001b80:                            ; preds = %dec_label_pc_10001b6c
  %v4_10001b80 = sext i16 %v5_10001a6c to i32
  store i32 %v4_10001b80, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10001c24 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10001c30 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10001c34 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10001c6c = zext i16 %tmp13 to i32
  %v1_10001c9c = and i32 %tmp, 1179648
  %v3_10001db0 = icmp eq i32 %v1_10001a44, 0
  %v4_10001dd0 = sext i8 %v5_100019f8 to i32
  %v4_10001dd8 = sext i8 %v5_10001a30 to i32
  %v1_10001ca0 = and i32 %tmp, 327680
  %v3_10001ca0 = icmp eq i32 %v1_10001ca0, 0
  %v4_10001ca8 = icmp eq i32 %v1_10001c9c, 1179648
  br label %dec_label_pc_10001b8c

dec_label_pc_10001b8c:                            ; preds = %dec_label_pc_10001e80, %dec_label_pc_10001cb4, %dec_label_pc_10001b80
  %v0_10001b8c = load i32, i32* %r25.global-to-local, align 4
  %v1_10001b8c = add i32 %v0_10001b8c, 40
  store i32 %v1_10001b8c, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442528, i32* @lr, align 4
  %v3_10001b9c53 = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  store i32 %v3_10001b9c53, i32* %r3.global-to-local, align 4
  %v3_10001ba055 = icmp eq i32 %v3_10001b9c53, -1
  store i1 %v3_10001ba055, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b9c53, i32* %r28.global-to-local, align 4
  br i1 %v3_10001ba055, label %dec_label_pc_10001e80, label %dec_label_pc_10001bac

dec_label_pc_10001bac:                            ; preds = %dec_label_pc_10001b8c, %dec_label_pc_10001c8c
  store i32 3, i32* @r4, align 4
  store i32 268442556, i32* @lr, align 4
  %v1_10001bb8 = call i32 @function_10008bb0(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10001bc4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001bc4, i32* %r3.global-to-local, align 4
  store i32 268442576, i32* @lr, align 4
  %v2_10001bcc = call i32 @function_10008bb0(i32 %v0_10001bc4)
  store i32 %v2_10001bcc, i32* %r3.global-to-local, align 4
  %v3_10001bd0 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001bd8 = mul i32 %v3_10001bd0, 24
  store i32 %v1_10001bd8, i32* %r0.global-to-local, align 4
  %v0_10001be0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001be0 = add i32 %v0_10001be0, %v1_10001bd8
  store i32 %v2_10001be0, i32* %r11.global-to-local, align 4
  %v1_10001be4 = add i32 %v2_10001be0, 20
  %v2_10001be4 = inttoptr i32 %v1_10001be4 to i8*
  %v3_10001be4 = load i8, i8* %v2_10001be4, align 1
  %v4_10001be4 = zext i8 %v3_10001be4 to i32
  store i32 %v4_10001be4, i32* %r9.global-to-local, align 4
  %v3_10001be8 = icmp eq i8 %v3_10001be4, 31
  store i1 %v3_10001be8, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10001be4, 32
  %v1_10001cc0 = add i32 %v2_10001be0, 16
  %v2_10001cc0 = inttoptr i32 %v1_10001cc0 to i32*
  %v3_10001cc0 = load i32, i32* %v2_10001cc0, align 4
  br i1 %tmp50, label %dec_label_pc_10001cc0, label %dec_label_pc_10001bf0

dec_label_pc_10001bf0:                            ; preds = %dec_label_pc_10001bac
  store i32 %v3_10001cc0, i32* %r0.global-to-local, align 4
  %v0_10001bf8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001bf8, label %dec_label_pc_10001ce8, label %dec_label_pc_10001bfc

dec_label_pc_10001bfc:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001bf0
  %stack_var_-396.0 = phi i32 [ %v2_10001cdc, %dec_label_pc_10001cc0 ], [ %v3_10001cc0, %dec_label_pc_10001bf0 ]
  store i32 %v4_10001b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10001c04

dec_label_pc_10001c04:                            ; preds = %dec_label_pc_10001ce8, %dec_label_pc_10001bfc
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10001ce8 ], [ %stack_var_-396.0, %dec_label_pc_10001bfc ]
  %storemerge = phi i16 [ %v1_10001ce8, %dec_label_pc_10001ce8 ], [ %v5_10001a6c, %dec_label_pc_10001bfc ]
  %v0_10001c0c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c0c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001c14.19 to i32), i32* @lr, align 4
  %v0_10001c10 = call i32 @function_100097a0()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268442652, i32* @lr, align 4
  %v0_10001c18 = call i32 @function_10009068()
  store i32 %v0_10001c18, i32* %r3.global-to-local, align 4
  store i32 %v0_10001c18, i32* @r31, align 4
  %v4_10001c60 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10001c70 = zext i16 %storemerge to i32
  %v4_10001c74 = icmp eq i16 %storemerge, %tmp13
  %v4_10001c60.not = xor i1 %v4_10001c60, true
  br label %dec_label_pc_10001c20

dec_label_pc_10001c20:                            ; preds = %dec_label_pc_10001c7c, %dec_label_pc_10001c04
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10001c30, i32* %r7.global-to-local, align 4
  store i32 %v2_10001c34, i32* %r8.global-to-local, align 4
  %v0_10001c38 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001c38, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268442692, i32* @lr, align 4
  %v6_10001c40 = call i32 @function_100098ac(i32 %v0_10001c38, i32 %v2_10001c24, i32 256, i32 16384, i32 %v2_10001c30, i32 %v2_10001c34)
  store i32 %v6_10001c40, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10001c4c = icmp eq i32 %v6_10001c40, -1
  store i1 %v3_10001c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001c4c, label %dec_label_pc_10001cfc, label %dec_label_pc_10001c58

dec_label_pc_10001c58:                            ; preds = %dec_label_pc_10001c20
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10001c60, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10001c40, 41
  %or.cond = or i1 %tmp51, %v4_10001c60.not
  br i1 %or.cond, label %dec_label_pc_10001c7c, label %dec_label_pc_10001c6c

dec_label_pc_10001c6c:                            ; preds = %dec_label_pc_10001c58
  store i32 %v4_10001c6c, i32* %r0.global-to-local, align 4
  store i32 %v4_10001c70, i32* %r8.global-to-local, align 4
  store i1 %v4_10001c74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001c74, label %dec_label_pc_10001c98, label %dec_label_pc_10001c7c

dec_label_pc_10001c7c:                            ; preds = %dec_label_pc_10001c58, %dec_label_pc_10001cb0, %dec_label_pc_10001c6c
  store i32 268442752, i32* @lr, align 4
  %v0_10001c7c = call i32 @function_10009068()
  %v0_10001c80 = load i32, i32* @r31, align 4
  %v2_10001c80 = sub i32 %v0_10001c7c, %v0_10001c80
  store i32 %v2_10001c80, i32* %r3.global-to-local, align 4
  %v3_10001c84 = icmp eq i32 %v2_10001c80, 10
  store i1 %v3_10001c84, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10001c80, 11
  br i1 %tmp52, label %dec_label_pc_10001c20, label %dec_label_pc_10001c8c

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c7c
  %v0_10001c8c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c8c, i32* %r3.global-to-local, align 4
  store i32 268442772, i32* @lr, align 4
  %v0_10001c90 = call i32 @function_10008c98()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442528, i32* @lr, align 4
  %v3_10001b9c = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  store i32 %v3_10001b9c, i32* %r3.global-to-local, align 4
  %v3_10001ba0 = icmp eq i32 %v3_10001b9c, -1
  store i1 %v3_10001ba0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b9c, i32* %r28.global-to-local, align 4
  br i1 %v3_10001ba0, label %dec_label_pc_10001e80, label %dec_label_pc_10001bac

dec_label_pc_10001c98:                            ; preds = %dec_label_pc_10001c6c
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10001c9c, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10001ca8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001ca8, label %dec_label_pc_10001d5c, label %dec_label_pc_10001cb0

dec_label_pc_10001cb0:                            ; preds = %dec_label_pc_10001c98
  br i1 %v3_10001ca0, label %dec_label_pc_10001c7c, label %dec_label_pc_10001cb4

dec_label_pc_10001cb4:                            ; preds = %dec_label_pc_10001cb0
  %v0_10001cb4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001cb4, i32* %r3.global-to-local, align 4
  store i32 268442812, i32* @lr, align 4
  %v0_10001cb8 = call i32 @function_10008c98()
  store i32 %v0_10001cb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b8c

dec_label_pc_10001cc0:                            ; preds = %dec_label_pc_10001bac
  store i32 %v3_10001cc0, i32* %r29.global-to-local, align 4
  %v0_10001cc4 = call i32 @function_10005cd4()
  store i32 %v0_10001cc4, i32* %r3.global-to-local, align 4
  %v3_10001cc8 = load i32, i32* %stack_var_-408, align 4
  %v1_10001ccc = mul i32 %v3_10001cc8, 24
  %v1_10001cd0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001cd0 = add i32 %v1_10001cd0, %v1_10001ccc
  store i32 %v2_10001cd0, i32* %r9.global-to-local, align 4
  %v1_10001cd4 = add i32 %v2_10001cd0, 20
  %v2_10001cd4 = inttoptr i32 %v1_10001cd4 to i8*
  %v3_10001cd4 = load i8, i8* %v2_10001cd4, align 1
  %v4_10001cd4 = zext i8 %v3_10001cd4 to i32
  store i32 %v4_10001cd4, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10001cd4, 64
  %v2_10001cd8 = zext i8 %tmp56 to i32
  %v3_10001cd8 = lshr i32 %v0_10001cc4, %v2_10001cd8
  store i32 %v3_10001cd8, i32* %r3.global-to-local, align 4
  %v0_10001cdc = load i32, i32* %r29.global-to-local, align 4
  %v2_10001cdc = add i32 %v3_10001cd8, %v0_10001cdc
  store i32 %v2_10001cdc, i32* %r29.global-to-local, align 4
  %v0_10001ce4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001ce4, label %dec_label_pc_10001ce8, label %dec_label_pc_10001bfc

dec_label_pc_10001ce8:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001bf0
  %stack_var_-396.2 = phi i32 [ %v2_10001cdc, %dec_label_pc_10001cc0 ], [ %v3_10001cc0, %dec_label_pc_10001bf0 ]
  %v0_10001ce8 = call i32 @function_10005cd4()
  %v1_10001ce8 = trunc i32 %v0_10001ce8 to i16
  store i32 %v0_10001ce8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001c04

dec_label_pc_10001cf4:                            ; preds = %dec_label_pc_10001b48
  %v0_10001cf4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001cf4, i32* %r3.global-to-local, align 4
  store i32 268442876, i32* @lr, align 4
  %v0_10001cf8 = call i32 @function_10008c98()
  store i32 %v0_10001cf8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001cfc

dec_label_pc_10001cfc:                            ; preds = %dec_label_pc_10001c20, %dec_label_pc_10001950, %dec_label_pc_10001cf4
  store i32 %v0_10001968, i32* %r0.global-to-local, align 4
  %v1_10001d10 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001958)
  store i32 %v0_100019a0, i32* %r28.global-to-local, align 4
  store i32 %v0_100019a8, i32* %r29.global-to-local, align 4
  %v0_10001d58 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001d58

dec_label_pc_10001d5c:                            ; preds = %dec_label_pc_10001c98
  %v3_10001d5c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001d5c, i32* %r29.global-to-local, align 4
  %v0_10001d60 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10001d60, i32* @r3, align 4
  %v0_10001d64 = load i32, i32* @r30, align 4
  %v1_10001d64 = add i32 %v0_10001d64, 2
  %v2_10001d64 = inttoptr i32 %v1_10001d64 to i16*
  %v3_10001d64 = load i16, i16* %v2_10001d64, align 2
  %v4_10001d64 = zext i16 %v3_10001d64 to i32
  store i32 %v4_10001d64, i32* %r11.global-to-local, align 4
  %v1_10001d68 = mul i32 %v3_10001d5c, 16
  store i32 %v1_10001d68, i32* %r9.global-to-local, align 4
  %v1_10001d6c = mul i32 %v3_10001d5c, 4
  store i32 %v1_10001d6c, i32* @r29, align 4
  %v1_10001d70 = load i32, i32* %r22.global-to-local, align 4
  %v3_10001d70 = add i32 %v1_10001d70, %v1_10001d68
  %v4_10001d70 = inttoptr i32 %v3_10001d70 to i32*
  store i32 %tmp14, i32* %v4_10001d70, align 4
  %v0_10001d74 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001d74 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d74 = add i32 %v1_10001d74, %v0_10001d74
  store i32 %v2_10001d74, i32* %r9.global-to-local, align 4
  %v0_10001d78 = load i32, i32* %r8.global-to-local, align 4
  %v1_10001d78 = trunc i32 %v0_10001d78 to i16
  %v3_10001d78 = add i32 %v2_10001d74, 14
  %v4_10001d78 = inttoptr i32 %v3_10001d78 to i16*
  store i16 %v1_10001d78, i16* %v4_10001d78, align 2
  %v0_10001d7c = load i32, i32* @r30, align 4
  %v1_10001d7c = add i32 %v0_10001d7c, 4
  %v2_10001d7c = inttoptr i32 %v1_10001d7c to i32*
  %v3_10001d7c = load i32, i32* %v2_10001d7c, align 4
  store i32 %v3_10001d7c, i32* %r0.global-to-local, align 4
  %v0_10001d80 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001d80 = trunc i32 %v0_10001d80 to i16
  %v2_10001d80 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001d80 = add i32 %v2_10001d80, 12
  %v4_10001d80 = inttoptr i32 %v3_10001d80 to i16*
  store i16 %v1_10001d80, i16* %v4_10001d80, align 2
  %v0_10001d84 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001d84 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d84 = add i32 %v1_10001d84, 4
  %v3_10001d84 = inttoptr i32 %v2_10001d84 to i32*
  store i32 %v0_10001d84, i32* %v3_10001d84, align 4
  %v0_10001d88 = load i32, i32* @r30, align 4
  %v1_10001d88 = add i32 %v0_10001d88, 8
  %v2_10001d88 = inttoptr i32 %v1_10001d88 to i32*
  %v3_10001d88 = load i32, i32* %v2_10001d88, align 4
  store i32 %v3_10001d88, i32* %r0.global-to-local, align 4
  %v1_10001d8c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d8c = add i32 %v1_10001d8c, 8
  %v3_10001d8c = inttoptr i32 %v2_10001d8c to i32*
  store i32 %v3_10001d88, i32* %v3_10001d8c, align 4
  store i32 268443028, i32* @lr, align 4
  %v0_10001d90 = call i32 @function_10009ba4()
  store i32 %v0_10001d90, i32* %r3.global-to-local, align 4
  %v3_10001d94 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001d94, i32* %r0.global-to-local, align 4
  %v1_10001d98 = load i32, i32* @r29, align 4
  %v2_10001d98 = load i32, i32* %r23.global-to-local, align 4
  %v3_10001d98 = add i32 %v2_10001d98, %v1_10001d98
  %v4_10001d98 = inttoptr i32 %v3_10001d98 to i32*
  store i32 %v0_10001d90, i32* %v4_10001d98, align 4
  %v0_10001d9c = load i32, i32* %r0.global-to-local, align 4
  %v1_10001d9c = mul i32 %v0_10001d9c, 4
  store i32 %v1_10001d9c, i32* %r0.global-to-local, align 4
  %v0_10001da0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001da0 = add i32 %v0_10001da0, %v1_10001d9c
  %v3_10001da0 = inttoptr i32 %v2_10001da0 to i32*
  %v4_10001da0 = load i32, i32* %v3_10001da0, align 4
  store i32 %v4_10001da0, i32* @r31, align 4
  store i32 %v1_10001a44, i32* %r0.global-to-local, align 4
  %v1_10001da8 = inttoptr i32 %v4_10001da0 to i32*
  %v2_10001da8 = load i32, i32* %v1_10001da8, align 4
  store i32 %v2_10001da8, i32* %r9.global-to-local, align 4
  %v1_10001dac = add i32 %v4_10001da0, 20
  store i32 %v1_10001dac, i32* @r30, align 4
  store i1 %v3_10001db0, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10001db8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001db8, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10001dc0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001dc4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001dc4 = trunc i32 %v0_10001dc4 to i16
  %v2_10001dc4 = load i32, i32* @r31, align 4
  %v3_10001dc4 = add i32 %v2_10001dc4, 4
  %v4_10001dc4 = inttoptr i32 %v3_10001dc4 to i16*
  store i16 %v1_10001dc4, i16* %v4_10001dc4, align 2
  %v1_10001dc8 = load i32, i32* @r31, align 4
  %v2_10001dc8 = inttoptr i32 %v1_10001dc8 to i32*
  store i32 %v1_10001dc0, i32* %v2_10001dc8, align 4
  %v0_10001dcc = load i32, i32* %r26.global-to-local, align 4
  %v1_10001dcc = trunc i32 %v0_10001dcc to i16
  %v2_10001dcc = load i32, i32* @r31, align 4
  %v3_10001dcc = add i32 %v2_10001dcc, 2
  %v4_10001dcc = inttoptr i32 %v3_10001dcc to i16*
  store i16 %v1_10001dcc, i16* %v4_10001dcc, align 2
  store i32 %v4_10001dd0, i32* %r9.global-to-local, align 4
  %v2_10001dd4 = load i32, i32* @r31, align 4
  %v3_10001dd4 = add i32 %v2_10001dd4, 1
  %v4_10001dd4 = inttoptr i32 %v3_10001dd4 to i8*
  store i8 %v5_100019f8, i8* %v4_10001dd4, align 1
  store i32 %v4_10001dd8, i32* %r0.global-to-local, align 4
  %v2_10001ddc = load i32, i32* @r31, align 4
  %v3_10001ddc = add i32 %v2_10001ddc, 8
  %v4_10001ddc = inttoptr i32 %v3_10001ddc to i8*
  store i8 %v5_10001a30, i8* %v4_10001ddc, align 1
  %v0_10001de0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001de0, label %dec_label_pc_10001dec, label %dec_label_pc_10001de4

dec_label_pc_10001de4:                            ; preds = %dec_label_pc_10001d5c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001de8 = load i32, i32* @r31, align 4
  %v3_10001de8 = add i32 %v2_10001de8, 6
  %v4_10001de8 = inttoptr i32 %v3_10001de8 to i16*
  store i16 16384, i16* %v4_10001de8, align 2
  br label %dec_label_pc_10001dec

dec_label_pc_10001dec:                            ; preds = %dec_label_pc_10001d5c, %dec_label_pc_10001de4
  %v2_10001df4 = load i32, i32* @r31, align 4
  %v3_10001df4 = add i32 %v2_10001df4, 9
  %v4_10001df4 = inttoptr i32 %v3_10001df4 to i8*
  store i8 6, i8* %v4_10001df4, align 1
  %v3_10001df8 = load i32, i32* @global_var_1001bd68.14, align 4
  store i32 %v3_10001df8, i32* %r0.global-to-local, align 4
  %v1_10001dfc = load i32, i32* @r31, align 4
  %v2_10001dfc = add i32 %v1_10001dfc, 12
  %v3_10001dfc = inttoptr i32 %v2_10001dfc to i32*
  store i32 %v3_10001df8, i32* %v3_10001dfc, align 4
  %v3_10001e00 = load i32, i32* %stack_var_-408, align 4
  %v1_10001e04 = mul i32 %v3_10001e00, 16
  store i32 %v1_10001e04, i32* %r9.global-to-local, align 4
  %v1_10001e08 = load i32, i32* %r22.global-to-local, align 4
  %v2_10001e08 = add i32 %v1_10001e08, %v1_10001e04
  %v3_10001e08 = inttoptr i32 %v2_10001e08 to i32*
  %v4_10001e08 = load i32, i32* %v3_10001e08, align 4
  store i32 %v4_10001e08, i32* %r0.global-to-local, align 4
  store i32 %v2_10001e08, i32* %r9.global-to-local, align 4
  %v1_10001e10 = add i32 %v2_10001e08, 12
  %v2_10001e10 = inttoptr i32 %v1_10001e10 to i16*
  %v3_10001e10 = load i16, i16* %v2_10001e10, align 2
  %v4_10001e10 = zext i16 %v3_10001e10 to i32
  store i32 %v4_10001e10, i32* %r11.global-to-local, align 4
  %v1_10001e14 = load i32, i32* @r31, align 4
  %v2_10001e14 = add i32 %v1_10001e14, 16
  %v3_10001e14 = inttoptr i32 %v2_10001e14 to i32*
  store i32 %v4_10001e08, i32* %v3_10001e14, align 4
  %v0_10001e18 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001e18 = trunc i32 %v0_10001e18 to i16
  %v2_10001e18 = load i32, i32* @r31, align 4
  %v3_10001e18 = add i32 %v2_10001e18, 20
  %v4_10001e18 = inttoptr i32 %v3_10001e18 to i16*
  store i16 %v1_10001e18, i16* %v4_10001e18, align 2
  %v0_10001e1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e1c = add i32 %v0_10001e1c, 8
  %v2_10001e1c = inttoptr i32 %v1_10001e1c to i32*
  %v3_10001e1c = load i32, i32* %v2_10001e1c, align 4
  store i32 %v3_10001e1c, i32* %r0.global-to-local, align 4
  %v0_10001e20 = load i32, i32* @r30, align 4
  %v1_10001e20 = add i32 %v0_10001e20, 12
  %v2_10001e20 = inttoptr i32 %v1_10001e20 to i32*
  %v3_10001e20 = load i32, i32* %v2_10001e20, align 4
  store i32 %v3_10001e20, i32* %r11.global-to-local, align 4
  %v2_10001e24 = add i32 %v0_10001e20, 4
  %v3_10001e24 = inttoptr i32 %v2_10001e24 to i32*
  store i32 %v3_10001e1c, i32* %v3_10001e24, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10001e2c = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10001e2c, i32* %r11.global-to-local, align 4
  %v0_10001e30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e30 = add i32 %v0_10001e30, 14
  %v2_10001e30 = inttoptr i32 %v1_10001e30 to i16*
  %v3_10001e30 = load i16, i16* %v2_10001e30, align 2
  %v4_10001e30 = zext i16 %v3_10001e30 to i32
  store i32 %v4_10001e30, i32* %r0.global-to-local, align 4
  %v1_10001e34 = add i32 %v0_10001e30, 4
  %v2_10001e34 = inttoptr i32 %v1_10001e34 to i32*
  %v3_10001e34 = load i32, i32* %v2_10001e34, align 4
  store i32 %v3_10001e34, i32* %r10.global-to-local, align 4
  %v1_10001e38 = or i32 %v1_10001e2c, 1114112
  store i32 %v1_10001e38, i32* %r11.global-to-local, align 4
  %v2_10001e3c = load i32, i32* @r30, align 4
  %v3_10001e3c = add i32 %v2_10001e3c, 2
  %v4_10001e3c = inttoptr i32 %v3_10001e3c to i16*
  store i16 %v3_10001e30, i16* %v4_10001e3c, align 2
  %v0_10001e40 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001e40 = load i32, i32* @r30, align 4
  %v2_10001e40 = add i32 %v1_10001e40, 8
  %v3_10001e40 = inttoptr i32 %v2_10001e40 to i32*
  store i32 %v0_10001e40, i32* %v3_10001e40, align 4
  %v0_10001e44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001e44 = load i32, i32* @r30, align 4
  %v2_10001e44 = add i32 %v1_10001e44, 12
  %v3_10001e44 = inttoptr i32 %v2_10001e44 to i32*
  store i32 %v0_10001e44, i32* %v3_10001e44, align 4
  %v0_10001e48 = call i32 @function_10005cd4()
  %v1_10001e48 = trunc i32 %v0_10001e48 to i16
  store i32 %v1_10001a80, i32* %r9.global-to-local, align 4
  %v3_10001e50 = load i32, i32* @r30, align 4
  %v4_10001e50 = add i32 %v3_10001e50, 14
  %v5_10001e50 = inttoptr i32 %v4_10001e50 to i16*
  store i16 %v1_10001e48, i16* %v5_10001e50, align 2
  %v0_10001e54 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001e54, i32* @r4, align 4
  %v0_10001e58 = load i32, i32* @r31, align 4
  %v1_10001e58 = add i32 %v0_10001e58, 40
  store i32 %v1_10001e58, i32* @r3, align 4
  %v0_10001e5c = load i32, i32* @r30, align 4
  %v1_10001e5c = add i32 %v0_10001e5c, 12
  %v2_10001e5c = inttoptr i32 %v1_10001e5c to i32*
  %v3_10001e5c = load i32, i32* %v2_10001e5c, align 4
  store i32 %v3_10001e5c, i32* %r0.global-to-local, align 4
  %v1_10001e60 = call i32 @__asm_rlwimi(i32 %v1_10001a80, i32 21, i32 10, i32 10)
  store i32 %v1_10001e60, i32* %r0.global-to-local, align 4
  %v1_10001e64 = call i32 @__asm_rlwimi(i32 %v1_10001aa4, i32 20, i32 11, i32 11)
  store i32 %v1_10001e64, i32* %r0.global-to-local, align 4
  %v1_10001e68 = call i32 @__asm_rlwimi(i32 %v1_10001abc, i32 19, i32 12, i32 12)
  store i32 %v1_10001e68, i32* %r0.global-to-local, align 4
  %v1_10001e6c = call i32 @__asm_rlwimi(i32 %v1_10001ad4, i32 18, i32 13, i32 13)
  store i32 %v1_10001e6c, i32* %r0.global-to-local, align 4
  %v1_10001e70 = call i32 @__asm_rlwimi(i32 %v1_10001aec, i32 17, i32 14, i32 14)
  store i32 %v1_10001e70, i32* %r0.global-to-local, align 4
  %v1_10001e74 = call i32 @__asm_rlwimi(i32 %v1_10001b04, i32 16, i32 15, i32 15)
  store i32 %v1_10001e74, i32* %r0.global-to-local, align 4
  %v1_10001e78 = load i32, i32* @r30, align 4
  %v2_10001e78 = add i32 %v1_10001e78, 12
  %v3_10001e78 = inttoptr i32 %v2_10001e78 to i32*
  store i32 %v1_10001e74, i32* %v3_10001e78, align 4
  %v0_10001e7c = call i32 @function_10005ea8()
  store i32 %v0_10001e7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001e80

dec_label_pc_10001e80:                            ; preds = %dec_label_pc_10001b8c, %dec_label_pc_10001c8c, %dec_label_pc_10001dec
  %v3_10001e80 = load i32, i32* %stack_var_-408, align 4
  %v1_10001e84 = add i32 %v3_10001e80, 1
  store i32 %v1_10001e84, i32* %r9.global-to-local, align 4
  %v1_10001e88 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001e88 = icmp slt i32 %v1_10001e84, %v1_10001e88
  %v4_10001e88 = icmp eq i32 %v1_10001e84, %v1_10001e88
  store i1 %v4_10001e88, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001e84, i32* %stack_var_-408, align 4
  br i1 %v2_10001e88, label %dec_label_pc_10001b8c, label %dec_label_pc_10001e94.loopexit

dec_label_pc_10001e94.loopexit:                   ; preds = %dec_label_pc_10001e80
  %v0_10001ea0.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10001ea0.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10001e94

dec_label_pc_10001e94:                            ; preds = %dec_label_pc_10001e94.loopexit, %dec_label_pc_10001b6c
  %v1_10001ea0.pre = phi i1 [ %v1_10001ea0.pre.pre, %dec_label_pc_10001e94.loopexit ], [ %v1_10001b6c, %dec_label_pc_10001b6c ]
  %v0_10001ea0.pre = phi i1 [ %v0_10001ea0.pre.pre, %dec_label_pc_10001e94.loopexit ], [ %v3_10001b6c, %dec_label_pc_10001b6c ]
  %v0_10001e94 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001e94 = icmp eq i32 %v0_10001e94, 0
  store i1 %v3_10001e94, i1* %cr2_eq.global-to-local, align 1
  %v0_10001e98 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001e98 = add i32 %v0_10001e98, 40
  store i32 %v1_10001e98, i32* %r26.global-to-local, align 4
  %v1_10001e9c = add i32 %v0_10001e98, 20
  store i32 %v1_10001e9c, i32* @r31, align 4
  br label %dec_label_pc_10001ea0.outer

dec_label_pc_10001ea0.outer:                      ; preds = %dec_label_pc_10001f74, %dec_label_pc_10001e94
  %v1_10001ea0.ph = phi i1 [ %v1_10001ea0.pre, %dec_label_pc_10001e94 ], [ %v1_10001f74, %dec_label_pc_10001f74 ]
  %v0_10001ea0.ph = phi i1 [ %v0_10001ea0.pre, %dec_label_pc_10001e94 ], [ %v0_10001f74, %dec_label_pc_10001f74 ]
  %v2_10001ea0 = or i1 %v1_10001ea0.ph, %v0_10001ea0.ph
  br label %dec_label_pc_10001ea0

dec_label_pc_10001ea0:                            ; preds = %dec_label_pc_10001ea0.outer, %dec_label_pc_10001ea0
  br i1 %v2_10001ea0, label %dec_label_pc_10001ea0, label %dec_label_pc_10001ea4

dec_label_pc_10001ea4:                            ; preds = %dec_label_pc_10001ea0, %dec_label_pc_10001f74
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10001eb4 = load i32, i32* %r19.global-to-local, align 4
  %v4_10001eb4 = icmp eq i32 %v0_10001eb4, 65535
  store i1 %v4_10001eb4, i1* %cr4_eq.global-to-local, align 1
  %v0_10001eb8 = load i32, i32* @r31, align 4
  %v1_10001eb8 = urem i32 %v0_10001eb8, 65536
  store i32 %v1_10001eb8, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001ec4

dec_label_pc_10001ec4:                            ; preds = %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge, %dec_label_pc_10001ea4
  %v0_10001ed0 = phi i1 [ %v0_10001ed0.pre, %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge ], [ %v4_10001eb4, %dec_label_pc_10001ea4 ]
  %v0_10001ec4 = phi i32 [ %v1_10001f64, %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge ], [ 0, %dec_label_pc_10001ea4 ]
  %v1_10001ec4 = mul i32 %v0_10001ec4, 4
  store i32 %v1_10001ec4, i32* %r0.global-to-local, align 4
  %v0_10001ec8 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001ec8 = add i32 %v0_10001ec8, %v1_10001ec4
  %v3_10001ec8 = inttoptr i32 %v2_10001ec8 to i32*
  %v4_10001ec8 = load i32, i32* %v3_10001ec8, align 4
  store i32 %v4_10001ec8, i32* @r29, align 4
  %v1_10001ecc = add i32 %v4_10001ec8, 20
  store i32 %v1_10001ecc, i32* %r28.global-to-local, align 4
  br i1 %v0_10001ed0, label %dec_label_pc_10001f7c, label %dec_label_pc_10001ed4

dec_label_pc_10001ed4:                            ; preds = %dec_label_pc_10001ec4
  %v1_10001ed4 = add i32 %v4_10001ec8, 40
  store i32 %v1_10001ed4, i32* @r3, align 4
  %v0_10001ed8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001ed8, i32* @r4, align 4
  %v0_10001edc = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001edc, label %dec_label_pc_10001ee0, label %dec_label_pc_10001f90

dec_label_pc_10001ee0:                            ; preds = %dec_label_pc_10001ed4, %dec_label_pc_10001f7c, %dec_label_pc_10001f90
  %v2_10001ee0 = phi i32 [ %v4_10001ec8, %dec_label_pc_10001ed4 ], [ %v0_10001f88, %dec_label_pc_10001f7c ], [ %v2_10001ee0.pre, %dec_label_pc_10001f90 ]
  %v0_10001ee0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ee0 = trunc i32 %v0_10001ee0 to i16
  %v3_10001ee0 = add i32 %v2_10001ee0, 10
  %v4_10001ee0 = inttoptr i32 %v3_10001ee0 to i16*
  store i16 %v1_10001ee0, i16* %v4_10001ee0, align 2
  %v0_10001ee8 = load i32, i32* @r29, align 4
  store i32 %v0_10001ee8, i32* @r3, align 4
  %v2_10001eec = call i32 @function_100043cc(i32 %v0_10001ee8, i32 20)
  %v3_10001eec = trunc i32 %v2_10001eec to i16
  store i32 %v2_10001eec, i32* %r3.global-to-local, align 4
  %v3_10001ef0 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001ef0, i32* %r9.global-to-local, align 4
  %v3_10001ef4 = load i32, i32* @r29, align 4
  %v4_10001ef4 = add i32 %v3_10001ef4, 10
  %v5_10001ef4 = inttoptr i32 %v4_10001ef4 to i16*
  store i16 %v3_10001eec, i16* %v5_10001ef4, align 2
  %v0_10001ef8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001ef8, i32* @r4, align 4
  %v0_10001efc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001efc = mul i32 %v0_10001efc, 16
  store i32 %v1_10001efc, i32* %r9.global-to-local, align 4
  %v0_10001f00 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001f00 = trunc i32 %v0_10001f00 to i16
  %v3_10001f00 = add i32 %v0_10001ef8, 16
  %v4_10001f00 = inttoptr i32 %v3_10001f00 to i16*
  store i16 %v1_10001f00, i16* %v4_10001f00, align 2
  %v0_10001f04 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001f04 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001f04 = add i32 %v1_10001f04, %v0_10001f04
  store i32 %v2_10001f04, i32* %r9.global-to-local, align 4
  %v0_10001f08 = load i32, i32* @r30, align 4
  %v1_10001f0c = add i32 %v2_10001f04, 4
  %v2_10001f0c = inttoptr i32 %v1_10001f0c to i32*
  %v3_10001f0c = load i32, i32* %v2_10001f0c, align 4
  store i32 %v3_10001f0c, i32* %r11.global-to-local, align 4
  %v0_10001f10 = load i32, i32* @r31, align 4
  %v0_10001f14 = load i32, i32* @r29, align 4
  store i32 %v0_10001f14, i32* %r3.global-to-local, align 4
  %v1_10001f18 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001f18 = add i32 %v1_10001f18, 4
  %v3_10001f18 = inttoptr i32 %v2_10001f18 to i32*
  store i32 %v3_10001f0c, i32* %v3_10001f18, align 4
  %v0_10001f1c = load i32, i32* %r11.global-to-local, align 4
  %v1_10001f1c = add i32 %v0_10001f1c, 1
  store i32 %v1_10001f1c, i32* %r11.global-to-local, align 4
  %v1_10001f20 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001f20 = add i32 %v1_10001f20, 4
  %v3_10001f20 = inttoptr i32 %v2_10001f20 to i32*
  store i32 %v1_10001f1c, i32* %v3_10001f20, align 4
  %v0_10001f24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001f24 = add i32 %v0_10001f24, 8
  %v2_10001f24 = inttoptr i32 %v1_10001f24 to i32*
  %v3_10001f24 = load i32, i32* %v2_10001f24, align 4
  store i32 %v3_10001f24, i32* %r0.global-to-local, align 4
  %v1_10001f28 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001f28 = add i32 %v1_10001f28, 8
  %v3_10001f28 = inttoptr i32 %v2_10001f28 to i32*
  store i32 %v3_10001f24, i32* %v3_10001f28, align 4
  %v4_10001f2c = call i32 @function_10004430(i32 %v0_10001f14, i32 %v0_10001ef8, i32 %v0_10001f08, i32 %v0_10001f10)
  %v5_10001f2c = trunc i32 %v4_10001f2c to i16
  store i32 %v4_10001f2c, i32* %r3.global-to-local, align 4
  %v3_10001f30 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001f30, i32* %r7.global-to-local, align 4
  %v0_10001f34 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001f34 = add i32 %v0_10001f34, 2
  %v2_10001f34 = inttoptr i32 %v1_10001f34 to i16*
  %v3_10001f34 = load i16, i16* %v2_10001f34, align 2
  %v4_10001f34 = zext i16 %v3_10001f34 to i32
  store i32 %v4_10001f34, i32* %r0.global-to-local, align 4
  %v0_10001f38 = load i32, i32* @r29, align 4
  %v1_10001f3c = mul i32 %v3_10001f30, 24
  store i32 %v1_10001f3c, i32* %r7.global-to-local, align 4
  %v4_10001f40 = add i32 %v0_10001f34, 16
  %v5_10001f40 = inttoptr i32 %v4_10001f40 to i16*
  store i16 %v5_10001f2c, i16* %v5_10001f40, align 2
  %v0_10001f44 = load i32, i32* %r26.global-to-local, align 4
  %v0_10001f48 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001f48, i32* %r3.global-to-local, align 4
  %v0_10001f4c = load i32, i32* %r7.global-to-local, align 4
  %v1_10001f4c = load i32, i32* %r20.global-to-local, align 4
  %v2_10001f4c = add i32 %v1_10001f4c, %v0_10001f4c
  store i32 %v2_10001f4c, i32* %r7.global-to-local, align 4
  %v0_10001f54 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001f54 = trunc i32 %v0_10001f54 to i16
  %v3_10001f54 = add i32 %v2_10001f4c, 2
  %v4_10001f54 = inttoptr i32 %v3_10001f54 to i16*
  store i16 %v1_10001f54, i16* %v4_10001f54, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268443488, i32* @lr, align 4
  %v6_10001f5c = call i32 @function_10009924(i32 %v0_10001f48, i32 %v0_10001f38, i32 %v0_10001f44, i32 16384, i32 %v2_10001f4c, i32 16)
  store i32 %v6_10001f5c, i32* %r3.global-to-local, align 4
  %v3_10001f60 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001f60, i32* %r9.global-to-local, align 4
  %v1_10001f64 = add i32 %v3_10001f60, 1
  store i32 %v1_10001f64, i32* %r0.global-to-local, align 4
  %v1_10001f68 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001f68 = icmp slt i32 %v1_10001f64, %v1_10001f68
  %v4_10001f68 = icmp eq i32 %v1_10001f64, %v1_10001f68
  store i1 %v4_10001f68, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001f64, i32* %stack_var_-408, align 4
  br i1 %v2_10001f68, label %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge, label %dec_label_pc_10001f74

dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge: ; preds = %dec_label_pc_10001ee0
  %v0_10001ed0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10001ec4

dec_label_pc_10001f74:                            ; preds = %dec_label_pc_10001ee0
  %v0_10001f74 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10001f74 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10001f74 = or i1 %v0_10001f74, %v1_10001f74
  br i1 %v2_10001f74, label %dec_label_pc_10001ea0.outer, label %dec_label_pc_10001ea4

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001ec4
  %v0_10001f7c = call i32 @function_10005cd4()
  %v1_10001f7c = trunc i32 %v0_10001f7c to i16
  %v0_10001f80 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001f80, i32* @r4, align 4
  %v3_10001f84 = load i32, i32* @r29, align 4
  %v4_10001f84 = add i32 %v3_10001f84, 4
  %v5_10001f84 = inttoptr i32 %v4_10001f84 to i16*
  store i16 %v1_10001f7c, i16* %v5_10001f84, align 2
  %v0_10001f88 = load i32, i32* @r29, align 4
  %v1_10001f88 = add i32 %v0_10001f88, 40
  store i32 %v1_10001f88, i32* @r3, align 4
  %v0_10001f8c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001f8c, label %dec_label_pc_10001ee0, label %dec_label_pc_10001f90

dec_label_pc_10001f90:                            ; preds = %dec_label_pc_10001ed4, %dec_label_pc_10001f7c
  %v0_10001f90 = call i32 @function_10005ea8()
  store i32 %v0_10001f90, i32* %r3.global-to-local, align 4
  %v2_10001ee0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001ee0

; uselistorder directives
  uselistorder i32 %v0_10001f88, { 1, 0 }
  uselistorder i1 %v1_10001f74, { 1, 0 }
  uselistorder i1 %v0_10001f74, { 1, 0 }
  uselistorder i32 %v1_10001f64, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10001f2c, { 1, 0 }
  uselistorder i32 %v0_10001ef8, { 1, 0, 2 }
  uselistorder i32 %v2_10001eec, { 1, 0 }
  uselistorder i32 %v1_10001ec4, { 1, 0 }
  uselistorder i32 %v1_10001e84, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10001e08, { 1, 0, 2 }
  uselistorder i32 %v1_10001e04, { 1, 0 }
  uselistorder i32 %v1_10001d9c, { 1, 0 }
  uselistorder i32 %v1_10001d68, { 1, 0 }
  uselistorder i32 %v0_10001ce8, { 1, 0 }
  uselistorder i32 %v2_10001cdc, { 1, 2, 0 }
  uselistorder i1 %v4_10001c60, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10001cc0, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10001c9c, { 1, 0 }
  uselistorder i32 %v1_10001a44, { 1, 0 }
  uselistorder i8 %v5_10001a30, { 1, 0 }
  uselistorder i8 %v5_100019f8, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 1, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268442528, { 1, 0 }
  uselistorder label %dec_label_pc_10001f90, { 1, 0 }
  uselistorder label %dec_label_pc_10001ee0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001ea4, { 1, 0 }
  uselistorder label %dec_label_pc_10001ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10001e80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001dec, { 1, 0 }
  uselistorder label %dec_label_pc_10001cfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001c7c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001bac, { 1, 0 }
}

define i32 @function_10001f98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001f98:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10001f9c = load i32, i32* @lr, align 4
  store i32 %v0_10001f9c, i32* %r0.global-to-local, align 4
  %v0_10001fa0 = call i32 @__asm_mfcr()
  store i32 %v0_10001fa0, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001fb0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001fa0, i32* %r21.global-to-local, align 4
  %v0_10001fe8 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001ff0 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268443660, i32* @lr, align 4
  %v2_10002008 = call i32 @function_10009cfc(i32 16, i32 16)
  store i32 %v2_10002008, i32* %r22.global-to-local, align 4
  %v0_10002014 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002014, i32* %r3.global-to-local, align 4
  store i32 268443676, i32* @lr, align 4
  %v2_10002018 = call i32 @function_10009cfc(i32 %v0_10002014, i32 4)
  %v0_1000201c = load i32, i32* @r28, align 4
  store i32 %v2_10002018, i32* %r23.global-to-local, align 4
  %v0_1000202c = load i32, i32* @r29, align 4
  store i32 %v0_1000202c, i32* %r3.global-to-local, align 4
  store i32 268443700, i32* @lr, align 4
  %v4_10002030 = inttoptr i32 %v0_1000201c to i32*
  %v5_10002030 = call i32 @function_100006a8(i32 %v0_1000202c, i32* %v4_10002030, i32 2, i32 0)
  %v5_10002040 = trunc i32 %v5_10002030 to i8
  %v0_10002048 = load i32, i32* @r28, align 4
  %v0_1000204c = load i32, i32* @r29, align 4
  store i32 %v0_1000204c, i32* %r3.global-to-local, align 4
  store i32 268443732, i32* @lr, align 4
  %v4_10002050 = inttoptr i32 %v0_10002048 to i32*
  %v5_10002050 = call i32 @function_100006a8(i32 %v0_1000204c, i32* %v4_10002050, i32 3, i32 65535)
  %v0_10002054 = load i32, i32* @r28, align 4
  store i32 %v5_10002050, i32* @r31, align 4
  %v0_10002064 = load i32, i32* @r29, align 4
  store i32 %v0_10002064, i32* %r3.global-to-local, align 4
  store i32 268443756, i32* @lr, align 4
  %v4_10002068 = inttoptr i32 %v0_10002054 to i32*
  %v5_10002068 = call i32 @function_100006a8(i32 %v0_10002064, i32* %v4_10002068, i32 4, i32 64)
  %v0_1000206c = load i32, i32* @r28, align 4
  %v5_10002078 = trunc i32 %v5_10002068 to i8
  %v0_10002080 = load i32, i32* @r29, align 4
  store i32 %v0_10002080, i32* %r3.global-to-local, align 4
  store i32 268443784, i32* @lr, align 4
  %v4_10002084 = inttoptr i32 %v0_1000206c to i32*
  %v5_10002084 = call i32 @function_100006a8(i32 %v0_10002080, i32* %v4_10002084, i32 5, i32 1)
  %v1_1000208c = urem i32 %v5_10002084, 256
  %v0_10002098 = load i32, i32* @r28, align 4
  %v0_100020a0 = load i32, i32* @r29, align 4
  store i32 %v0_100020a0, i32* %r3.global-to-local, align 4
  store i32 268443816, i32* @lr, align 4
  %v4_100020a4 = inttoptr i32 %v0_10002098 to i32*
  %v5_100020a4 = call i32 @function_100006a8(i32 %v0_100020a0, i32* %v4_100020a4, i32 7, i32 65535)
  %v0_100020a8 = load i32, i32* @r28, align 4
  %v5_100020b4 = trunc i32 %v5_100020a4 to i16
  %v0_100020bc = load i32, i32* @r29, align 4
  store i32 %v0_100020bc, i32* %r3.global-to-local, align 4
  store i32 268443844, i32* @lr, align 4
  %v4_100020c0 = inttoptr i32 %v0_100020a8 to i32*
  %v5_100020c0 = call i32 @function_100006a8(i32 %v0_100020bc, i32* %v4_100020c0, i32 11, i32 0)
  %v0_100020c4 = load i32, i32* @r28, align 4
  %v1_100020c8 = urem i32 %v5_100020c0, 256
  %v0_100020d8 = load i32, i32* @r29, align 4
  store i32 %v0_100020d8, i32* %r3.global-to-local, align 4
  store i32 268443872, i32* @lr, align 4
  %v4_100020dc = inttoptr i32 %v0_100020c4 to i32*
  %v5_100020dc = call i32 @function_100006a8(i32 %v0_100020d8, i32* %v4_100020dc, i32 12, i32 1)
  %v0_100020e0 = load i32, i32* @r28, align 4
  %v1_100020ec = urem i32 %v5_100020dc, 256
  %v0_100020f0 = load i32, i32* @r29, align 4
  store i32 %v0_100020f0, i32* %r3.global-to-local, align 4
  store i32 268443896, i32* @lr, align 4
  %v4_100020f4 = inttoptr i32 %v0_100020e0 to i32*
  %v5_100020f4 = call i32 @function_100006a8(i32 %v0_100020f0, i32* %v4_100020f4, i32 13, i32 1)
  %v0_100020f8 = load i32, i32* @r28, align 4
  %v1_10002104 = urem i32 %v5_100020f4, 256
  %v0_10002108 = load i32, i32* @r29, align 4
  store i32 %v0_10002108, i32* %r3.global-to-local, align 4
  store i32 268443920, i32* @lr, align 4
  %v4_1000210c = inttoptr i32 %v0_100020f8 to i32*
  %v5_1000210c = call i32 @function_100006a8(i32 %v0_10002108, i32* %v4_1000210c, i32 14, i32 0)
  %v0_10002110 = load i32, i32* @r28, align 4
  %v1_1000211c = urem i32 %v5_1000210c, 256
  %v0_10002120 = load i32, i32* @r29, align 4
  store i32 %v0_10002120, i32* %r3.global-to-local, align 4
  store i32 268443944, i32* @lr, align 4
  %v4_10002124 = inttoptr i32 %v0_10002110 to i32*
  %v5_10002124 = call i32 @function_100006a8(i32 %v0_10002120, i32* %v4_10002124, i32 15, i32 0)
  %v0_10002128 = load i32, i32* @r28, align 4
  %v1_10002134 = urem i32 %v5_10002124, 256
  %v0_10002138 = load i32, i32* @r29, align 4
  store i32 %v0_10002138, i32* %r3.global-to-local, align 4
  store i32 268443968, i32* @lr, align 4
  %v4_1000213c = inttoptr i32 %v0_10002128 to i32*
  %v5_1000213c = call i32 @function_100006a8(i32 %v0_10002138, i32* %v4_1000213c, i32 16, i32 0)
  %v0_10002148 = load i32, i32* @r28, align 4
  %v1_1000214c = urem i32 %v5_1000213c, 256
  %v0_10002150 = load i32, i32* @r29, align 4
  store i32 %v0_10002150, i32* %r3.global-to-local, align 4
  store i32 268443992, i32* @lr, align 4
  %v4_10002154 = inttoptr i32 %v0_10002148 to i32*
  %v5_10002154 = call i32 @function_100006a8(i32 %v0_10002150, i32* %v4_10002154, i32 0, i32 768)
  %v0_10002158 = load i32, i32* @r28, align 4
  store i32 %v5_10002154, i32* %r25.global-to-local, align 4
  %v0_10002168 = load i32, i32* @r29, align 4
  store i32 %v0_10002168, i32* %r3.global-to-local, align 4
  store i32 268444016, i32* @lr, align 4
  %v4_1000216c = inttoptr i32 %v0_10002158 to i32*
  %v5_1000216c = call i32 @function_100006a8(i32 %v0_10002168, i32* %v4_1000216c, i32 1, i32 1)
  %v1_10002174 = urem i32 %v5_1000216c, 256
  store i32 %v1_10002174, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444036, i32* @lr, align 4
  %v3_10002180 = call i32 @function_100099a0(i32 2, i32 3, i32 6)
  store i32 %v3_10002180, i32* %r3.global-to-local, align 4
  %v3_10002184 = icmp eq i32 %v3_10002180, -1
  store i1 %v3_10002184, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002180, i32* %r24.global-to-local, align 4
  br i1 %v3_10002184, label %dec_label_pc_10002344, label %dec_label_pc_10002190

dec_label_pc_10002190:                            ; preds = %dec_label_pc_10001f98
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000219c = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268444076, i32* @lr, align 4
  %v4_100021a8 = call i32 @function_10009964(i32 0, i32 3, i32 %v2_1000219c, i32 4)
  store i32 %v4_100021a8, i32* %r3.global-to-local, align 4
  %v3_100021ac = icmp eq i32 %v4_100021a8, -1
  store i1 %v3_100021ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100021ac, label %dec_label_pc_1000233c, label %dec_label_pc_100021b4

dec_label_pc_100021b4:                            ; preds = %dec_label_pc_10002190
  %v0_100021b4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100021b4 = icmp slt i32 %v0_100021b4, 0
  %v3_100021b4 = icmp eq i32 %v0_100021b4, 0
  store i1 %v1_100021b4, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_100021b4, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100021c0 = load i32, i32* @r31, align 4
  %v1_100021c0 = urem i32 %v0_100021c0, 65536
  store i32 %v1_100021c0, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_100021b4, 1
  br i1 %tmp49, label %dec_label_pc_100024dc, label %dec_label_pc_100021c8

dec_label_pc_100021c8:                            ; preds = %dec_label_pc_100021b4
  %v4_100021c8 = sext i16 %v5_100020b4 to i32
  store i32 %v4_100021c8, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_1000226c = ptrtoint i32* %stack_var_-368 to i32
  %v2_10002278 = ptrtoint i32* %stack_var_-384 to i32
  %v2_1000227c = ptrtoint i32* %stack_var_-404 to i32
  %v4_100022b4 = zext i16 %tmp13 to i32
  %v1_100022e4 = and i32 %tmp, 1179648
  %v3_100023f8 = icmp eq i32 %v1_1000208c, 0
  %v4_10002418 = sext i8 %v5_10002040 to i32
  %v4_10002420 = sext i8 %v5_10002078 to i32
  %v1_100022e8 = and i32 %tmp, 327680
  %v3_100022e8 = icmp eq i32 %v1_100022e8, 0
  %v4_100022f0 = icmp eq i32 %v1_100022e4, 1179648
  br label %dec_label_pc_100021d4

dec_label_pc_100021d4:                            ; preds = %dec_label_pc_100024c8, %dec_label_pc_100022fc, %dec_label_pc_100021c8
  %v0_100021d4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100021d4 = add i32 %v0_100021d4, 40
  store i32 %v1_100021d4, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444136, i32* @lr, align 4
  %v3_100021e453 = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  store i32 %v3_100021e453, i32* %r3.global-to-local, align 4
  %v3_100021e855 = icmp eq i32 %v3_100021e453, -1
  store i1 %v3_100021e855, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100021e453, i32* %r28.global-to-local, align 4
  br i1 %v3_100021e855, label %dec_label_pc_100024c8, label %dec_label_pc_100021f4

dec_label_pc_100021f4:                            ; preds = %dec_label_pc_100021d4, %dec_label_pc_100022d4
  store i32 3, i32* @r4, align 4
  store i32 268444164, i32* @lr, align 4
  %v1_10002200 = call i32 @function_10008bb0(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_1000220c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000220c, i32* %r3.global-to-local, align 4
  store i32 268444184, i32* @lr, align 4
  %v2_10002214 = call i32 @function_10008bb0(i32 %v0_1000220c)
  store i32 %v2_10002214, i32* %r3.global-to-local, align 4
  %v3_10002218 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002220 = mul i32 %v3_10002218, 24
  store i32 %v1_10002220, i32* %r0.global-to-local, align 4
  %v0_10002228 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002228 = add i32 %v0_10002228, %v1_10002220
  store i32 %v2_10002228, i32* %r11.global-to-local, align 4
  %v1_1000222c = add i32 %v2_10002228, 20
  %v2_1000222c = inttoptr i32 %v1_1000222c to i8*
  %v3_1000222c = load i8, i8* %v2_1000222c, align 1
  %v4_1000222c = zext i8 %v3_1000222c to i32
  store i32 %v4_1000222c, i32* %r9.global-to-local, align 4
  %v3_10002230 = icmp eq i8 %v3_1000222c, 31
  store i1 %v3_10002230, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_1000222c, 32
  %v1_10002308 = add i32 %v2_10002228, 16
  %v2_10002308 = inttoptr i32 %v1_10002308 to i32*
  %v3_10002308 = load i32, i32* %v2_10002308, align 4
  br i1 %tmp50, label %dec_label_pc_10002308, label %dec_label_pc_10002238

dec_label_pc_10002238:                            ; preds = %dec_label_pc_100021f4
  store i32 %v3_10002308, i32* %r0.global-to-local, align 4
  %v0_10002240 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002240, label %dec_label_pc_10002330, label %dec_label_pc_10002244

dec_label_pc_10002244:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002238
  %stack_var_-396.0 = phi i32 [ %v2_10002324, %dec_label_pc_10002308 ], [ %v3_10002308, %dec_label_pc_10002238 ]
  store i32 %v4_100021c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000224c

dec_label_pc_1000224c:                            ; preds = %dec_label_pc_10002330, %dec_label_pc_10002244
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10002330 ], [ %stack_var_-396.0, %dec_label_pc_10002244 ]
  %storemerge = phi i16 [ %v1_10002330, %dec_label_pc_10002330 ], [ %v5_100020b4, %dec_label_pc_10002244 ]
  %v0_10002254 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002254, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000225c.20 to i32), i32* @lr, align 4
  %v0_10002258 = call i32 @function_100097a0()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268444260, i32* @lr, align 4
  %v0_10002260 = call i32 @function_10009068()
  store i32 %v0_10002260, i32* %r3.global-to-local, align 4
  store i32 %v0_10002260, i32* @r31, align 4
  %v4_100022a8 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_100022b8 = zext i16 %storemerge to i32
  %v4_100022bc = icmp eq i16 %storemerge, %tmp13
  %v4_100022a8.not = xor i1 %v4_100022a8, true
  br label %dec_label_pc_10002268

dec_label_pc_10002268:                            ; preds = %dec_label_pc_100022c4, %dec_label_pc_1000224c
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10002278, i32* %r7.global-to-local, align 4
  store i32 %v2_1000227c, i32* %r8.global-to-local, align 4
  %v0_10002280 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002280, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268444300, i32* @lr, align 4
  %v6_10002288 = call i32 @function_100098ac(i32 %v0_10002280, i32 %v2_1000226c, i32 256, i32 16384, i32 %v2_10002278, i32 %v2_1000227c)
  store i32 %v6_10002288, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10002294 = icmp eq i32 %v6_10002288, -1
  store i1 %v3_10002294, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002294, label %dec_label_pc_10002344, label %dec_label_pc_100022a0

dec_label_pc_100022a0:                            ; preds = %dec_label_pc_10002268
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_100022a8, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10002288, 41
  %or.cond = or i1 %tmp51, %v4_100022a8.not
  br i1 %or.cond, label %dec_label_pc_100022c4, label %dec_label_pc_100022b4

dec_label_pc_100022b4:                            ; preds = %dec_label_pc_100022a0
  store i32 %v4_100022b4, i32* %r0.global-to-local, align 4
  store i32 %v4_100022b8, i32* %r8.global-to-local, align 4
  store i1 %v4_100022bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100022bc, label %dec_label_pc_100022e0, label %dec_label_pc_100022c4

dec_label_pc_100022c4:                            ; preds = %dec_label_pc_100022a0, %dec_label_pc_100022f8, %dec_label_pc_100022b4
  store i32 268444360, i32* @lr, align 4
  %v0_100022c4 = call i32 @function_10009068()
  %v0_100022c8 = load i32, i32* @r31, align 4
  %v2_100022c8 = sub i32 %v0_100022c4, %v0_100022c8
  store i32 %v2_100022c8, i32* %r3.global-to-local, align 4
  %v3_100022cc = icmp eq i32 %v2_100022c8, 10
  store i1 %v3_100022cc, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_100022c8, 11
  br i1 %tmp52, label %dec_label_pc_10002268, label %dec_label_pc_100022d4

dec_label_pc_100022d4:                            ; preds = %dec_label_pc_100022c4
  %v0_100022d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100022d4, i32* %r3.global-to-local, align 4
  store i32 268444380, i32* @lr, align 4
  %v0_100022d8 = call i32 @function_10008c98()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444136, i32* @lr, align 4
  %v3_100021e4 = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  store i32 %v3_100021e4, i32* %r3.global-to-local, align 4
  %v3_100021e8 = icmp eq i32 %v3_100021e4, -1
  store i1 %v3_100021e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100021e4, i32* %r28.global-to-local, align 4
  br i1 %v3_100021e8, label %dec_label_pc_100024c8, label %dec_label_pc_100021f4

dec_label_pc_100022e0:                            ; preds = %dec_label_pc_100022b4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_100022e4, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_100022f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100022f0, label %dec_label_pc_100023a4, label %dec_label_pc_100022f8

dec_label_pc_100022f8:                            ; preds = %dec_label_pc_100022e0
  br i1 %v3_100022e8, label %dec_label_pc_100022c4, label %dec_label_pc_100022fc

dec_label_pc_100022fc:                            ; preds = %dec_label_pc_100022f8
  %v0_100022fc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100022fc, i32* %r3.global-to-local, align 4
  store i32 268444420, i32* @lr, align 4
  %v0_10002300 = call i32 @function_10008c98()
  store i32 %v0_10002300, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100021d4

dec_label_pc_10002308:                            ; preds = %dec_label_pc_100021f4
  store i32 %v3_10002308, i32* %r29.global-to-local, align 4
  %v0_1000230c = call i32 @function_10005cd4()
  store i32 %v0_1000230c, i32* %r3.global-to-local, align 4
  %v3_10002310 = load i32, i32* %stack_var_-408, align 4
  %v1_10002314 = mul i32 %v3_10002310, 24
  %v1_10002318 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002318 = add i32 %v1_10002318, %v1_10002314
  store i32 %v2_10002318, i32* %r9.global-to-local, align 4
  %v1_1000231c = add i32 %v2_10002318, 20
  %v2_1000231c = inttoptr i32 %v1_1000231c to i8*
  %v3_1000231c = load i8, i8* %v2_1000231c, align 1
  %v4_1000231c = zext i8 %v3_1000231c to i32
  store i32 %v4_1000231c, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_1000231c, 64
  %v2_10002320 = zext i8 %tmp56 to i32
  %v3_10002320 = lshr i32 %v0_1000230c, %v2_10002320
  store i32 %v3_10002320, i32* %r3.global-to-local, align 4
  %v0_10002324 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002324 = add i32 %v3_10002320, %v0_10002324
  store i32 %v2_10002324, i32* %r29.global-to-local, align 4
  %v0_1000232c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000232c, label %dec_label_pc_10002330, label %dec_label_pc_10002244

dec_label_pc_10002330:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002238
  %stack_var_-396.2 = phi i32 [ %v2_10002324, %dec_label_pc_10002308 ], [ %v3_10002308, %dec_label_pc_10002238 ]
  %v0_10002330 = call i32 @function_10005cd4()
  %v1_10002330 = trunc i32 %v0_10002330 to i16
  store i32 %v0_10002330, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000224c

dec_label_pc_1000233c:                            ; preds = %dec_label_pc_10002190
  %v0_1000233c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000233c, i32* %r3.global-to-local, align 4
  store i32 268444484, i32* @lr, align 4
  %v0_10002340 = call i32 @function_10008c98()
  store i32 %v0_10002340, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002344

dec_label_pc_10002344:                            ; preds = %dec_label_pc_10002268, %dec_label_pc_10001f98, %dec_label_pc_1000233c
  store i32 %v0_10001fb0, i32* %r0.global-to-local, align 4
  %v1_10002358 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001fa0)
  store i32 %v0_10001fe8, i32* %r28.global-to-local, align 4
  store i32 %v0_10001ff0, i32* %r29.global-to-local, align 4
  %v0_100023a0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100023a0

dec_label_pc_100023a4:                            ; preds = %dec_label_pc_100022e0
  %v3_100023a4 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100023a4, i32* %r29.global-to-local, align 4
  %v0_100023a8 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100023a8, i32* @r3, align 4
  %v0_100023ac = load i32, i32* @r30, align 4
  %v1_100023ac = add i32 %v0_100023ac, 2
  %v2_100023ac = inttoptr i32 %v1_100023ac to i16*
  %v3_100023ac = load i16, i16* %v2_100023ac, align 2
  %v4_100023ac = zext i16 %v3_100023ac to i32
  store i32 %v4_100023ac, i32* %r11.global-to-local, align 4
  %v1_100023b0 = mul i32 %v3_100023a4, 16
  store i32 %v1_100023b0, i32* %r9.global-to-local, align 4
  %v1_100023b4 = mul i32 %v3_100023a4, 4
  store i32 %v1_100023b4, i32* @r29, align 4
  %v1_100023b8 = load i32, i32* %r22.global-to-local, align 4
  %v3_100023b8 = add i32 %v1_100023b8, %v1_100023b0
  %v4_100023b8 = inttoptr i32 %v3_100023b8 to i32*
  store i32 %tmp14, i32* %v4_100023b8, align 4
  %v0_100023bc = load i32, i32* %r22.global-to-local, align 4
  %v1_100023bc = load i32, i32* %r9.global-to-local, align 4
  %v2_100023bc = add i32 %v1_100023bc, %v0_100023bc
  store i32 %v2_100023bc, i32* %r9.global-to-local, align 4
  %v0_100023c0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100023c0 = trunc i32 %v0_100023c0 to i16
  %v3_100023c0 = add i32 %v2_100023bc, 14
  %v4_100023c0 = inttoptr i32 %v3_100023c0 to i16*
  store i16 %v1_100023c0, i16* %v4_100023c0, align 2
  %v0_100023c4 = load i32, i32* @r30, align 4
  %v1_100023c4 = add i32 %v0_100023c4, 4
  %v2_100023c4 = inttoptr i32 %v1_100023c4 to i32*
  %v3_100023c4 = load i32, i32* %v2_100023c4, align 4
  store i32 %v3_100023c4, i32* %r0.global-to-local, align 4
  %v0_100023c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100023c8 = trunc i32 %v0_100023c8 to i16
  %v2_100023c8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100023c8 = add i32 %v2_100023c8, 12
  %v4_100023c8 = inttoptr i32 %v3_100023c8 to i16*
  store i16 %v1_100023c8, i16* %v4_100023c8, align 2
  %v0_100023cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100023cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100023cc = add i32 %v1_100023cc, 4
  %v3_100023cc = inttoptr i32 %v2_100023cc to i32*
  store i32 %v0_100023cc, i32* %v3_100023cc, align 4
  %v0_100023d0 = load i32, i32* @r30, align 4
  %v1_100023d0 = add i32 %v0_100023d0, 8
  %v2_100023d0 = inttoptr i32 %v1_100023d0 to i32*
  %v3_100023d0 = load i32, i32* %v2_100023d0, align 4
  store i32 %v3_100023d0, i32* %r0.global-to-local, align 4
  %v1_100023d4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100023d4 = add i32 %v1_100023d4, 8
  %v3_100023d4 = inttoptr i32 %v2_100023d4 to i32*
  store i32 %v3_100023d0, i32* %v3_100023d4, align 4
  store i32 268444636, i32* @lr, align 4
  %v0_100023d8 = call i32 @function_10009ba4()
  store i32 %v0_100023d8, i32* %r3.global-to-local, align 4
  %v3_100023dc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100023dc, i32* %r0.global-to-local, align 4
  %v1_100023e0 = load i32, i32* @r29, align 4
  %v2_100023e0 = load i32, i32* %r23.global-to-local, align 4
  %v3_100023e0 = add i32 %v2_100023e0, %v1_100023e0
  %v4_100023e0 = inttoptr i32 %v3_100023e0 to i32*
  store i32 %v0_100023d8, i32* %v4_100023e0, align 4
  %v0_100023e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100023e4 = mul i32 %v0_100023e4, 4
  store i32 %v1_100023e4, i32* %r0.global-to-local, align 4
  %v0_100023e8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100023e8 = add i32 %v0_100023e8, %v1_100023e4
  %v3_100023e8 = inttoptr i32 %v2_100023e8 to i32*
  %v4_100023e8 = load i32, i32* %v3_100023e8, align 4
  store i32 %v4_100023e8, i32* @r31, align 4
  store i32 %v1_1000208c, i32* %r0.global-to-local, align 4
  %v1_100023f0 = inttoptr i32 %v4_100023e8 to i32*
  %v2_100023f0 = load i32, i32* %v1_100023f0, align 4
  store i32 %v2_100023f0, i32* %r9.global-to-local, align 4
  %v1_100023f4 = add i32 %v4_100023e8, 20
  store i32 %v1_100023f4, i32* @r30, align 4
  store i1 %v3_100023f8, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10002400 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002400, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10002408 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_1000240c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000240c = trunc i32 %v0_1000240c to i16
  %v2_1000240c = load i32, i32* @r31, align 4
  %v3_1000240c = add i32 %v2_1000240c, 4
  %v4_1000240c = inttoptr i32 %v3_1000240c to i16*
  store i16 %v1_1000240c, i16* %v4_1000240c, align 2
  %v1_10002410 = load i32, i32* @r31, align 4
  %v2_10002410 = inttoptr i32 %v1_10002410 to i32*
  store i32 %v1_10002408, i32* %v2_10002410, align 4
  %v0_10002414 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002414 = trunc i32 %v0_10002414 to i16
  %v2_10002414 = load i32, i32* @r31, align 4
  %v3_10002414 = add i32 %v2_10002414, 2
  %v4_10002414 = inttoptr i32 %v3_10002414 to i16*
  store i16 %v1_10002414, i16* %v4_10002414, align 2
  store i32 %v4_10002418, i32* %r9.global-to-local, align 4
  %v2_1000241c = load i32, i32* @r31, align 4
  %v3_1000241c = add i32 %v2_1000241c, 1
  %v4_1000241c = inttoptr i32 %v3_1000241c to i8*
  store i8 %v5_10002040, i8* %v4_1000241c, align 1
  store i32 %v4_10002420, i32* %r0.global-to-local, align 4
  %v2_10002424 = load i32, i32* @r31, align 4
  %v3_10002424 = add i32 %v2_10002424, 8
  %v4_10002424 = inttoptr i32 %v3_10002424 to i8*
  store i8 %v5_10002078, i8* %v4_10002424, align 1
  %v0_10002428 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002428, label %dec_label_pc_10002434, label %dec_label_pc_1000242c

dec_label_pc_1000242c:                            ; preds = %dec_label_pc_100023a4
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002430 = load i32, i32* @r31, align 4
  %v3_10002430 = add i32 %v2_10002430, 6
  %v4_10002430 = inttoptr i32 %v3_10002430 to i16*
  store i16 16384, i16* %v4_10002430, align 2
  br label %dec_label_pc_10002434

dec_label_pc_10002434:                            ; preds = %dec_label_pc_100023a4, %dec_label_pc_1000242c
  %v2_1000243c = load i32, i32* @r31, align 4
  %v3_1000243c = add i32 %v2_1000243c, 9
  %v4_1000243c = inttoptr i32 %v3_1000243c to i8*
  store i8 6, i8* %v4_1000243c, align 1
  %v3_10002440 = load i32, i32* @global_var_1001bd68.14, align 4
  store i32 %v3_10002440, i32* %r0.global-to-local, align 4
  %v1_10002444 = load i32, i32* @r31, align 4
  %v2_10002444 = add i32 %v1_10002444, 12
  %v3_10002444 = inttoptr i32 %v2_10002444 to i32*
  store i32 %v3_10002440, i32* %v3_10002444, align 4
  %v3_10002448 = load i32, i32* %stack_var_-408, align 4
  %v1_1000244c = mul i32 %v3_10002448, 16
  store i32 %v1_1000244c, i32* %r9.global-to-local, align 4
  %v1_10002450 = load i32, i32* %r22.global-to-local, align 4
  %v2_10002450 = add i32 %v1_10002450, %v1_1000244c
  %v3_10002450 = inttoptr i32 %v2_10002450 to i32*
  %v4_10002450 = load i32, i32* %v3_10002450, align 4
  store i32 %v4_10002450, i32* %r0.global-to-local, align 4
  store i32 %v2_10002450, i32* %r9.global-to-local, align 4
  %v1_10002458 = add i32 %v2_10002450, 12
  %v2_10002458 = inttoptr i32 %v1_10002458 to i16*
  %v3_10002458 = load i16, i16* %v2_10002458, align 2
  %v4_10002458 = zext i16 %v3_10002458 to i32
  store i32 %v4_10002458, i32* %r11.global-to-local, align 4
  %v1_1000245c = load i32, i32* @r31, align 4
  %v2_1000245c = add i32 %v1_1000245c, 16
  %v3_1000245c = inttoptr i32 %v2_1000245c to i32*
  store i32 %v4_10002450, i32* %v3_1000245c, align 4
  %v0_10002460 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002460 = trunc i32 %v0_10002460 to i16
  %v2_10002460 = load i32, i32* @r31, align 4
  %v3_10002460 = add i32 %v2_10002460, 20
  %v4_10002460 = inttoptr i32 %v3_10002460 to i16*
  store i16 %v1_10002460, i16* %v4_10002460, align 2
  %v0_10002464 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002464 = add i32 %v0_10002464, 8
  %v2_10002464 = inttoptr i32 %v1_10002464 to i32*
  %v3_10002464 = load i32, i32* %v2_10002464, align 4
  store i32 %v3_10002464, i32* %r0.global-to-local, align 4
  %v0_10002468 = load i32, i32* @r30, align 4
  %v1_10002468 = add i32 %v0_10002468, 12
  %v2_10002468 = inttoptr i32 %v1_10002468 to i32*
  %v3_10002468 = load i32, i32* %v2_10002468, align 4
  store i32 %v3_10002468, i32* %r11.global-to-local, align 4
  %v2_1000246c = add i32 %v0_10002468, 4
  %v3_1000246c = inttoptr i32 %v2_1000246c to i32*
  store i32 %v3_10002464, i32* %v3_1000246c, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10002474 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10002474, i32* %r11.global-to-local, align 4
  %v0_10002478 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002478 = add i32 %v0_10002478, 14
  %v2_10002478 = inttoptr i32 %v1_10002478 to i16*
  %v3_10002478 = load i16, i16* %v2_10002478, align 2
  %v4_10002478 = zext i16 %v3_10002478 to i32
  store i32 %v4_10002478, i32* %r0.global-to-local, align 4
  %v1_1000247c = add i32 %v0_10002478, 4
  %v2_1000247c = inttoptr i32 %v1_1000247c to i32*
  %v3_1000247c = load i32, i32* %v2_1000247c, align 4
  store i32 %v3_1000247c, i32* %r10.global-to-local, align 4
  %v1_10002480 = or i32 %v1_10002474, 1114112
  store i32 %v1_10002480, i32* %r11.global-to-local, align 4
  %v2_10002484 = load i32, i32* @r30, align 4
  %v3_10002484 = add i32 %v2_10002484, 2
  %v4_10002484 = inttoptr i32 %v3_10002484 to i16*
  store i16 %v3_10002478, i16* %v4_10002484, align 2
  %v0_10002488 = load i32, i32* %r10.global-to-local, align 4
  %v1_10002488 = load i32, i32* @r30, align 4
  %v2_10002488 = add i32 %v1_10002488, 8
  %v3_10002488 = inttoptr i32 %v2_10002488 to i32*
  store i32 %v0_10002488, i32* %v3_10002488, align 4
  %v0_1000248c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000248c = load i32, i32* @r30, align 4
  %v2_1000248c = add i32 %v1_1000248c, 12
  %v3_1000248c = inttoptr i32 %v2_1000248c to i32*
  store i32 %v0_1000248c, i32* %v3_1000248c, align 4
  %v0_10002490 = call i32 @function_10005cd4()
  %v1_10002490 = trunc i32 %v0_10002490 to i16
  store i32 %v1_100020c8, i32* %r9.global-to-local, align 4
  %v3_10002498 = load i32, i32* @r30, align 4
  %v4_10002498 = add i32 %v3_10002498, 14
  %v5_10002498 = inttoptr i32 %v4_10002498 to i16*
  store i16 %v1_10002490, i16* %v5_10002498, align 2
  %v0_1000249c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000249c, i32* @r4, align 4
  %v0_100024a0 = load i32, i32* @r31, align 4
  %v1_100024a0 = add i32 %v0_100024a0, 40
  store i32 %v1_100024a0, i32* @r3, align 4
  %v0_100024a4 = load i32, i32* @r30, align 4
  %v1_100024a4 = add i32 %v0_100024a4, 12
  %v2_100024a4 = inttoptr i32 %v1_100024a4 to i32*
  %v3_100024a4 = load i32, i32* %v2_100024a4, align 4
  store i32 %v3_100024a4, i32* %r0.global-to-local, align 4
  %v1_100024a8 = call i32 @__asm_rlwimi(i32 %v1_100020c8, i32 21, i32 10, i32 10)
  store i32 %v1_100024a8, i32* %r0.global-to-local, align 4
  %v1_100024ac = call i32 @__asm_rlwimi(i32 %v1_100020ec, i32 20, i32 11, i32 11)
  store i32 %v1_100024ac, i32* %r0.global-to-local, align 4
  %v1_100024b0 = call i32 @__asm_rlwimi(i32 %v1_10002104, i32 19, i32 12, i32 12)
  store i32 %v1_100024b0, i32* %r0.global-to-local, align 4
  %v1_100024b4 = call i32 @__asm_rlwimi(i32 %v1_1000211c, i32 18, i32 13, i32 13)
  store i32 %v1_100024b4, i32* %r0.global-to-local, align 4
  %v1_100024b8 = call i32 @__asm_rlwimi(i32 %v1_10002134, i32 17, i32 14, i32 14)
  store i32 %v1_100024b8, i32* %r0.global-to-local, align 4
  %v1_100024bc = call i32 @__asm_rlwimi(i32 %v1_1000214c, i32 16, i32 15, i32 15)
  store i32 %v1_100024bc, i32* %r0.global-to-local, align 4
  %v1_100024c0 = load i32, i32* @r30, align 4
  %v2_100024c0 = add i32 %v1_100024c0, 12
  %v3_100024c0 = inttoptr i32 %v2_100024c0 to i32*
  store i32 %v1_100024bc, i32* %v3_100024c0, align 4
  %v0_100024c4 = call i32 @function_10005ea8()
  store i32 %v0_100024c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100024c8

dec_label_pc_100024c8:                            ; preds = %dec_label_pc_100021d4, %dec_label_pc_100022d4, %dec_label_pc_10002434
  %v3_100024c8 = load i32, i32* %stack_var_-408, align 4
  %v1_100024cc = add i32 %v3_100024c8, 1
  store i32 %v1_100024cc, i32* %r9.global-to-local, align 4
  %v1_100024d0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100024d0 = icmp slt i32 %v1_100024cc, %v1_100024d0
  %v4_100024d0 = icmp eq i32 %v1_100024cc, %v1_100024d0
  store i1 %v4_100024d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100024cc, i32* %stack_var_-408, align 4
  br i1 %v2_100024d0, label %dec_label_pc_100021d4, label %dec_label_pc_100024dc.loopexit

dec_label_pc_100024dc.loopexit:                   ; preds = %dec_label_pc_100024c8
  %v0_100024e8.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100024e8.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100024dc

dec_label_pc_100024dc:                            ; preds = %dec_label_pc_100024dc.loopexit, %dec_label_pc_100021b4
  %v1_100024e8.pre = phi i1 [ %v1_100024e8.pre.pre, %dec_label_pc_100024dc.loopexit ], [ %v1_100021b4, %dec_label_pc_100021b4 ]
  %v0_100024e8.pre = phi i1 [ %v0_100024e8.pre.pre, %dec_label_pc_100024dc.loopexit ], [ %v3_100021b4, %dec_label_pc_100021b4 ]
  %v0_100024dc = load i32, i32* %r27.global-to-local, align 4
  %v3_100024dc = icmp eq i32 %v0_100024dc, 0
  store i1 %v3_100024dc, i1* %cr2_eq.global-to-local, align 1
  %v0_100024e0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100024e0 = add i32 %v0_100024e0, 40
  store i32 %v1_100024e0, i32* %r26.global-to-local, align 4
  %v1_100024e4 = add i32 %v0_100024e0, 20
  store i32 %v1_100024e4, i32* @r31, align 4
  br label %dec_label_pc_100024e8.outer

dec_label_pc_100024e8.outer:                      ; preds = %dec_label_pc_100025bc, %dec_label_pc_100024dc
  %v1_100024e8.ph = phi i1 [ %v1_100024e8.pre, %dec_label_pc_100024dc ], [ %v1_100025bc, %dec_label_pc_100025bc ]
  %v0_100024e8.ph = phi i1 [ %v0_100024e8.pre, %dec_label_pc_100024dc ], [ %v0_100025bc, %dec_label_pc_100025bc ]
  %v2_100024e8 = or i1 %v1_100024e8.ph, %v0_100024e8.ph
  br label %dec_label_pc_100024e8

dec_label_pc_100024e8:                            ; preds = %dec_label_pc_100024e8.outer, %dec_label_pc_100024e8
  br i1 %v2_100024e8, label %dec_label_pc_100024e8, label %dec_label_pc_100024ec

dec_label_pc_100024ec:                            ; preds = %dec_label_pc_100024e8, %dec_label_pc_100025bc
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100024fc = load i32, i32* %r19.global-to-local, align 4
  %v4_100024fc = icmp eq i32 %v0_100024fc, 65535
  store i1 %v4_100024fc, i1* %cr4_eq.global-to-local, align 1
  %v0_10002500 = load i32, i32* @r31, align 4
  %v1_10002500 = urem i32 %v0_10002500, 65536
  store i32 %v1_10002500, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000250c

dec_label_pc_1000250c:                            ; preds = %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge, %dec_label_pc_100024ec
  %v0_10002518 = phi i1 [ %v0_10002518.pre, %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge ], [ %v4_100024fc, %dec_label_pc_100024ec ]
  %v0_1000250c = phi i32 [ %v1_100025ac, %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge ], [ 0, %dec_label_pc_100024ec ]
  %v1_1000250c = mul i32 %v0_1000250c, 4
  store i32 %v1_1000250c, i32* %r0.global-to-local, align 4
  %v0_10002510 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002510 = add i32 %v0_10002510, %v1_1000250c
  %v3_10002510 = inttoptr i32 %v2_10002510 to i32*
  %v4_10002510 = load i32, i32* %v3_10002510, align 4
  store i32 %v4_10002510, i32* @r29, align 4
  %v1_10002514 = add i32 %v4_10002510, 20
  store i32 %v1_10002514, i32* %r28.global-to-local, align 4
  br i1 %v0_10002518, label %dec_label_pc_100025c4, label %dec_label_pc_1000251c

dec_label_pc_1000251c:                            ; preds = %dec_label_pc_1000250c
  %v1_1000251c = add i32 %v4_10002510, 40
  store i32 %v1_1000251c, i32* @r3, align 4
  %v0_10002520 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10002520, i32* @r4, align 4
  %v0_10002524 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002524, label %dec_label_pc_10002528, label %dec_label_pc_100025d8

dec_label_pc_10002528:                            ; preds = %dec_label_pc_1000251c, %dec_label_pc_100025c4, %dec_label_pc_100025d8
  %v2_10002528 = phi i32 [ %v4_10002510, %dec_label_pc_1000251c ], [ %v0_100025d0, %dec_label_pc_100025c4 ], [ %v2_10002528.pre, %dec_label_pc_100025d8 ]
  %v0_10002528 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002528 = trunc i32 %v0_10002528 to i16
  %v3_10002528 = add i32 %v2_10002528, 10
  %v4_10002528 = inttoptr i32 %v3_10002528 to i16*
  store i16 %v1_10002528, i16* %v4_10002528, align 2
  %v0_10002530 = load i32, i32* @r29, align 4
  store i32 %v0_10002530, i32* @r3, align 4
  %v2_10002534 = call i32 @function_100043cc(i32 %v0_10002530, i32 20)
  %v3_10002534 = trunc i32 %v2_10002534 to i16
  store i32 %v2_10002534, i32* %r3.global-to-local, align 4
  %v3_10002538 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002538, i32* %r9.global-to-local, align 4
  %v3_1000253c = load i32, i32* @r29, align 4
  %v4_1000253c = add i32 %v3_1000253c, 10
  %v5_1000253c = inttoptr i32 %v4_1000253c to i16*
  store i16 %v3_10002534, i16* %v5_1000253c, align 2
  %v0_10002540 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002540, i32* @r4, align 4
  %v0_10002544 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002544 = mul i32 %v0_10002544, 16
  store i32 %v1_10002544, i32* %r9.global-to-local, align 4
  %v0_10002548 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002548 = trunc i32 %v0_10002548 to i16
  %v3_10002548 = add i32 %v0_10002540, 16
  %v4_10002548 = inttoptr i32 %v3_10002548 to i16*
  store i16 %v1_10002548, i16* %v4_10002548, align 2
  %v0_1000254c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000254c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000254c = add i32 %v1_1000254c, %v0_1000254c
  store i32 %v2_1000254c, i32* %r9.global-to-local, align 4
  %v0_10002550 = load i32, i32* @r30, align 4
  %v1_10002554 = add i32 %v2_1000254c, 4
  %v2_10002554 = inttoptr i32 %v1_10002554 to i32*
  %v3_10002554 = load i32, i32* %v2_10002554, align 4
  store i32 %v3_10002554, i32* %r11.global-to-local, align 4
  %v0_10002558 = load i32, i32* @r31, align 4
  %v0_1000255c = load i32, i32* @r29, align 4
  store i32 %v0_1000255c, i32* %r3.global-to-local, align 4
  %v1_10002560 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002560 = add i32 %v1_10002560, 4
  %v3_10002560 = inttoptr i32 %v2_10002560 to i32*
  store i32 %v3_10002554, i32* %v3_10002560, align 4
  %v0_10002564 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002564 = add i32 %v0_10002564, 1
  store i32 %v1_10002564, i32* %r11.global-to-local, align 4
  %v1_10002568 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002568 = add i32 %v1_10002568, 4
  %v3_10002568 = inttoptr i32 %v2_10002568 to i32*
  store i32 %v1_10002564, i32* %v3_10002568, align 4
  %v0_1000256c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000256c = add i32 %v0_1000256c, 8
  %v2_1000256c = inttoptr i32 %v1_1000256c to i32*
  %v3_1000256c = load i32, i32* %v2_1000256c, align 4
  store i32 %v3_1000256c, i32* %r0.global-to-local, align 4
  %v1_10002570 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002570 = add i32 %v1_10002570, 8
  %v3_10002570 = inttoptr i32 %v2_10002570 to i32*
  store i32 %v3_1000256c, i32* %v3_10002570, align 4
  %v4_10002574 = call i32 @function_10004430(i32 %v0_1000255c, i32 %v0_10002540, i32 %v0_10002550, i32 %v0_10002558)
  %v5_10002574 = trunc i32 %v4_10002574 to i16
  store i32 %v4_10002574, i32* %r3.global-to-local, align 4
  %v3_10002578 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002578, i32* %r7.global-to-local, align 4
  %v0_1000257c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000257c = add i32 %v0_1000257c, 2
  %v2_1000257c = inttoptr i32 %v1_1000257c to i16*
  %v3_1000257c = load i16, i16* %v2_1000257c, align 2
  %v4_1000257c = zext i16 %v3_1000257c to i32
  store i32 %v4_1000257c, i32* %r0.global-to-local, align 4
  %v0_10002580 = load i32, i32* @r29, align 4
  %v1_10002584 = mul i32 %v3_10002578, 24
  store i32 %v1_10002584, i32* %r7.global-to-local, align 4
  %v4_10002588 = add i32 %v0_1000257c, 16
  %v5_10002588 = inttoptr i32 %v4_10002588 to i16*
  store i16 %v5_10002574, i16* %v5_10002588, align 2
  %v0_1000258c = load i32, i32* %r26.global-to-local, align 4
  %v0_10002590 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002590, i32* %r3.global-to-local, align 4
  %v0_10002594 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002594 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002594 = add i32 %v1_10002594, %v0_10002594
  store i32 %v2_10002594, i32* %r7.global-to-local, align 4
  %v0_1000259c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000259c = trunc i32 %v0_1000259c to i16
  %v3_1000259c = add i32 %v2_10002594, 2
  %v4_1000259c = inttoptr i32 %v3_1000259c to i16*
  store i16 %v1_1000259c, i16* %v4_1000259c, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268445096, i32* @lr, align 4
  %v6_100025a4 = call i32 @function_10009924(i32 %v0_10002590, i32 %v0_10002580, i32 %v0_1000258c, i32 16384, i32 %v2_10002594, i32 16)
  store i32 %v6_100025a4, i32* %r3.global-to-local, align 4
  %v3_100025a8 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100025a8, i32* %r9.global-to-local, align 4
  %v1_100025ac = add i32 %v3_100025a8, 1
  store i32 %v1_100025ac, i32* %r0.global-to-local, align 4
  %v1_100025b0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100025b0 = icmp slt i32 %v1_100025ac, %v1_100025b0
  %v4_100025b0 = icmp eq i32 %v1_100025ac, %v1_100025b0
  store i1 %v4_100025b0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100025ac, i32* %stack_var_-408, align 4
  br i1 %v2_100025b0, label %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge, label %dec_label_pc_100025bc

dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge: ; preds = %dec_label_pc_10002528
  %v0_10002518.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_1000250c

dec_label_pc_100025bc:                            ; preds = %dec_label_pc_10002528
  %v0_100025bc = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100025bc = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_100025bc = or i1 %v0_100025bc, %v1_100025bc
  br i1 %v2_100025bc, label %dec_label_pc_100024e8.outer, label %dec_label_pc_100024ec

dec_label_pc_100025c4:                            ; preds = %dec_label_pc_1000250c
  %v0_100025c4 = call i32 @function_10005cd4()
  %v1_100025c4 = trunc i32 %v0_100025c4 to i16
  %v0_100025c8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100025c8, i32* @r4, align 4
  %v3_100025cc = load i32, i32* @r29, align 4
  %v4_100025cc = add i32 %v3_100025cc, 4
  %v5_100025cc = inttoptr i32 %v4_100025cc to i16*
  store i16 %v1_100025c4, i16* %v5_100025cc, align 2
  %v0_100025d0 = load i32, i32* @r29, align 4
  %v1_100025d0 = add i32 %v0_100025d0, 40
  store i32 %v1_100025d0, i32* @r3, align 4
  %v0_100025d4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100025d4, label %dec_label_pc_10002528, label %dec_label_pc_100025d8

dec_label_pc_100025d8:                            ; preds = %dec_label_pc_1000251c, %dec_label_pc_100025c4
  %v0_100025d8 = call i32 @function_10005ea8()
  store i32 %v0_100025d8, i32* %r3.global-to-local, align 4
  %v2_10002528.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002528

; uselistorder directives
  uselistorder i32 %v0_100025d0, { 1, 0 }
  uselistorder i1 %v1_100025bc, { 1, 0 }
  uselistorder i1 %v0_100025bc, { 1, 0 }
  uselistorder i32 %v1_100025ac, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10002574, { 1, 0 }
  uselistorder i32 %v0_10002540, { 1, 0, 2 }
  uselistorder i32 %v2_10002534, { 1, 0 }
  uselistorder i32 %v1_1000250c, { 1, 0 }
  uselistorder i32 %v1_100024cc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10002450, { 1, 0, 2 }
  uselistorder i32 %v1_1000244c, { 1, 0 }
  uselistorder i32 %v1_100023e4, { 1, 0 }
  uselistorder i32 %v1_100023b0, { 1, 0 }
  uselistorder i32 %v0_10002330, { 1, 0 }
  uselistorder i32 %v2_10002324, { 1, 2, 0 }
  uselistorder i1 %v4_100022a8, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10002308, { 1, 3, 0, 2 }
  uselistorder i32 %v1_100022e4, { 1, 0 }
  uselistorder i32 %v1_1000208c, { 1, 0 }
  uselistorder i8 %v5_10002078, { 1, 0 }
  uselistorder i8 %v5_10002040, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i32 268444136, { 1, 0 }
  uselistorder i32 1179648, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_100025d8, { 1, 0 }
  uselistorder label %dec_label_pc_10002528, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100024ec, { 1, 0 }
  uselistorder label %dec_label_pc_100024e8, { 1, 0 }
  uselistorder label %dec_label_pc_100024c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002434, { 1, 0 }
  uselistorder label %dec_label_pc_10002344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100022c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100021f4, { 1, 0 }
}

define i32 @function_100025e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100025e0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_100025e4 = load i32, i32* @lr, align 4
  store i32 %v0_100025e4, i32* %r0.global-to-local, align 4
  %v0_100025e8 = call i32 @__asm_mfcr()
  store i32 %v0_100025e8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_100025f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100025e8, i32* %r21.global-to-local, align 4
  %v0_10002638 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002640 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002648 = load i32, i32* @r30, align 4
  store i32 268445268, i32* @lr, align 4
  %v2_10002650 = call i32 @function_10009cfc(i32 4, i32 4)
  store i32 %v2_10002650, i32* %r22.global-to-local, align 4
  %v0_10002658 = load i32, i32* @r28, align 4
  %v0_10002664 = load i32, i32* @r29, align 4
  store i32 %v0_10002664, i32* %r3.global-to-local, align 4
  store i32 268445292, i32* @lr, align 4
  %v4_10002668 = inttoptr i32 %v0_10002658 to i32*
  %v5_10002668 = call i32 @function_100006a8(i32 %v0_10002664, i32* %v4_10002668, i32 2, i32 0)
  %v5_10002678 = trunc i32 %v5_10002668 to i8
  %v0_10002680 = load i32, i32* @r28, align 4
  %v0_10002684 = load i32, i32* @r29, align 4
  store i32 %v0_10002684, i32* %r3.global-to-local, align 4
  store i32 268445324, i32* @lr, align 4
  %v4_10002688 = inttoptr i32 %v0_10002680 to i32*
  %v5_10002688 = call i32 @function_100006a8(i32 %v0_10002684, i32* %v4_10002688, i32 3, i32 65535)
  %v0_1000268c = load i32, i32* @r28, align 4
  store i32 %v5_10002688, i32* %r18.global-to-local, align 4
  %v0_1000269c = load i32, i32* @r29, align 4
  store i32 %v0_1000269c, i32* %r3.global-to-local, align 4
  store i32 268445348, i32* @lr, align 4
  %v4_100026a0 = inttoptr i32 %v0_1000268c to i32*
  %v5_100026a0 = call i32 @function_100006a8(i32 %v0_1000269c, i32* %v4_100026a0, i32 4, i32 64)
  %v0_100026a4 = load i32, i32* @r28, align 4
  %v5_100026b0 = trunc i32 %v5_100026a0 to i8
  %v0_100026b8 = load i32, i32* @r29, align 4
  store i32 %v0_100026b8, i32* %r3.global-to-local, align 4
  store i32 268445376, i32* @lr, align 4
  %v4_100026bc = inttoptr i32 %v0_100026a4 to i32*
  %v5_100026bc = call i32 @function_100006a8(i32 %v0_100026b8, i32* %v4_100026bc, i32 5, i32 0)
  %v0_100026cc = load i32, i32* @r28, align 4
  %v1_100026d0 = urem i32 %v5_100026bc, 256
  store i32 %v1_100026d0, i32* @r31, align 4
  %v0_100026d4 = load i32, i32* @r29, align 4
  store i32 %v0_100026d4, i32* %r3.global-to-local, align 4
  store i32 268445404, i32* @lr, align 4
  %v4_100026d8 = inttoptr i32 %v0_100026cc to i32*
  %v5_100026d8 = call i32 @function_100006a8(i32 %v0_100026d4, i32* %v4_100026d8, i32 6, i32 65535)
  %v0_100026e0 = load i32, i32* @r28, align 4
  store i32 %v5_100026d8, i32* %r19.global-to-local, align 4
  %v0_100026f0 = load i32, i32* @r29, align 4
  store i32 %v0_100026f0, i32* %r3.global-to-local, align 4
  store i32 268445432, i32* @lr, align 4
  %v4_100026f4 = inttoptr i32 %v0_100026e0 to i32*
  %v5_100026f4 = call i32 @function_100006a8(i32 %v0_100026f0, i32* %v4_100026f4, i32 7, i32 65535)
  %v0_100026fc = load i32, i32* @r28, align 4
  store i32 %v5_100026f4, i32* %r20.global-to-local, align 4
  %v0_1000270c = load i32, i32* @r29, align 4
  store i32 %v0_1000270c, i32* %r3.global-to-local, align 4
  store i32 268445460, i32* @lr, align 4
  %v4_10002710 = inttoptr i32 %v0_100026fc to i32*
  %v5_10002710 = call i32 @function_100006a8(i32 %v0_1000270c, i32* %v4_10002710, i32 17, i32 65535)
  %v0_10002718 = load i32, i32* @r28, align 4
  store i32 %v5_10002710, i32* %r15.global-to-local, align 4
  %v0_10002728 = load i32, i32* @r29, align 4
  store i32 %v0_10002728, i32* %r3.global-to-local, align 4
  store i32 268445488, i32* @lr, align 4
  %v4_1000272c = inttoptr i32 %v0_10002718 to i32*
  %v5_1000272c = call i32 @function_100006a8(i32 %v0_10002728, i32* %v4_1000272c, i32 18, i32 65535)
  %v0_10002730 = load i32, i32* @r28, align 4
  store i32 %v5_1000272c, i32* %r17.global-to-local, align 4
  %v0_10002740 = load i32, i32* @r29, align 4
  store i32 %v0_10002740, i32* %r3.global-to-local, align 4
  store i32 268445512, i32* @lr, align 4
  %v4_10002744 = inttoptr i32 %v0_10002730 to i32*
  %v5_10002744 = call i32 @function_100006a8(i32 %v0_10002740, i32* %v4_10002744, i32 11, i32 0)
  %v0_10002748 = load i32, i32* @r28, align 4
  %v0_10002758 = load i32, i32* @r29, align 4
  store i32 %v0_10002758, i32* %r3.global-to-local, align 4
  store i32 268445536, i32* @lr, align 4
  %v4_1000275c = inttoptr i32 %v0_10002748 to i32*
  %v5_1000275c = call i32 @function_100006a8(i32 %v0_10002758, i32* %v4_1000275c, i32 12, i32 1)
  %v0_10002760 = load i32, i32* @r28, align 4
  store i32 %v5_1000275c, i32* %r14.global-to-local, align 4
  %v0_10002770 = load i32, i32* @r29, align 4
  store i32 %v0_10002770, i32* %r3.global-to-local, align 4
  store i32 268445560, i32* @lr, align 4
  %v4_10002774 = inttoptr i32 %v0_10002760 to i32*
  %v5_10002774 = call i32 @function_100006a8(i32 %v0_10002770, i32* %v4_10002774, i32 13, i32 0)
  %v0_10002778 = load i32, i32* @r28, align 4
  store i32 %v5_10002774, i32* %r24.global-to-local, align 4
  %v0_10002788 = load i32, i32* @r29, align 4
  store i32 %v0_10002788, i32* %r3.global-to-local, align 4
  store i32 268445584, i32* @lr, align 4
  %v4_1000278c = inttoptr i32 %v0_10002778 to i32*
  %v5_1000278c = call i32 @function_100006a8(i32 %v0_10002788, i32* %v4_1000278c, i32 14, i32 0)
  %v0_10002790 = load i32, i32* @r28, align 4
  store i32 %v5_1000278c, i32* %r27.global-to-local, align 4
  %v0_100027a0 = load i32, i32* @r29, align 4
  store i32 %v0_100027a0, i32* %r3.global-to-local, align 4
  store i32 268445608, i32* @lr, align 4
  %v4_100027a4 = inttoptr i32 %v0_10002790 to i32*
  %v5_100027a4 = call i32 @function_100006a8(i32 %v0_100027a0, i32* %v4_100027a4, i32 15, i32 0)
  %v0_100027a8 = load i32, i32* @r28, align 4
  store i32 %v5_100027a4, i32* %r26.global-to-local, align 4
  %v0_100027b8 = load i32, i32* @r29, align 4
  store i32 %v0_100027b8, i32* %r3.global-to-local, align 4
  store i32 268445632, i32* @lr, align 4
  %v4_100027bc = inttoptr i32 %v0_100027a8 to i32*
  %v5_100027bc = call i32 @function_100006a8(i32 %v0_100027b8, i32* %v4_100027bc, i32 16, i32 0)
  %v0_100027c0 = load i32, i32* @r28, align 4
  store i32 %v5_100027bc, i32* %r30.global-to-local, align 4
  %v0_100027d0 = load i32, i32* @r29, align 4
  store i32 %v0_100027d0, i32* %r3.global-to-local, align 4
  store i32 268445656, i32* @lr, align 4
  %v4_100027d4 = inttoptr i32 %v0_100027c0 to i32*
  %v5_100027d4 = call i32 @function_100006a8(i32 %v0_100027d0, i32* %v4_100027d4, i32 0, i32 512)
  %v0_100027d8 = load i32, i32* @r28, align 4
  store i32 %v5_100027d4, i32* %r16.global-to-local, align 4
  %v0_100027e8 = load i32, i32* @r29, align 4
  store i32 %v0_100027e8, i32* %r3.global-to-local, align 4
  store i32 268445680, i32* @lr, align 4
  %v4_100027ec = inttoptr i32 %v0_100027d8 to i32*
  %v5_100027ec = call i32 @function_100006a8(i32 %v0_100027e8, i32* %v4_100027ec, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100027f4 = load i32, i32* @global_var_1001bd68.14, align 4
  %v1_100027f8 = urem i32 %v5_100027ec, 256
  %v0_100027fc = load i32, i32* @r28, align 4
  %v0_10002808 = load i32, i32* @r29, align 4
  store i32 %v0_10002808, i32* %r3.global-to-local, align 4
  store i32 268445712, i32* @lr, align 4
  %v5_1000280c = inttoptr i32 %v0_100027fc to i32*
  %v6_1000280c = call i32 @function_10000628(i32 %v0_10002808, i32* %v5_1000280c, i32 25, i32 %v3_100027f4, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445732, i32* @lr, align 4
  %v3_10002820 = call i32 @function_100099a0(i32 2, i32 3, i32 6)
  store i32 %v3_10002820, i32* %r3.global-to-local, align 4
  %v3_10002824 = icmp eq i32 %v3_10002820, -1
  store i32 %v3_10002820, i32* %r23.global-to-local, align 4
  br i1 %v3_10002824, label %dec_label_pc_10002b64, label %dec_label_pc_10002830

dec_label_pc_10002830:                            ; preds = %dec_label_pc_100025e0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000283c = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268445772, i32* @lr, align 4
  %v4_10002848 = call i32 @function_10009964(i32 0, i32 3, i32 %v2_1000283c, i32 4)
  store i32 %v4_10002848, i32* %r3.global-to-local, align 4
  %v3_1000284c = icmp eq i32 %v4_10002848, -1
  br i1 %v3_1000284c, label %dec_label_pc_10002b5c, label %dec_label_pc_10002854

dec_label_pc_10002854:                            ; preds = %dec_label_pc_10002830
  %v0_10002854 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002854 = icmp slt i32 %v0_10002854, 0
  %v3_10002854 = icmp eq i32 %v0_10002854, 0
  store i1 %v1_10002854, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002854, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10002860 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002860 = urem i32 %v0_10002860, 65536
  store i32 %v1_10002860, i32* %r18.global-to-local, align 4
  %v0_10002864 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002864 = urem i32 %v0_10002864, 65536
  store i32 %v1_10002864, i32* %r19.global-to-local, align 4
  %v0_10002868 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002868 = urem i32 %v0_10002868, 65536
  store i32 %v1_10002868, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10002854, 1
  br i1 %tmp40, label %dec_label_pc_10002b3c, label %dec_label_pc_10002870

dec_label_pc_10002870:                            ; preds = %dec_label_pc_10002854
  %v0_10002874 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002874 = urem i32 %v0_10002874, 256
  %v0_10002878 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002878 = add i32 %v0_10002878, 40
  store i32 %v1_10002878, i32* %r24.global-to-local, align 4
  %v3_1000287c = icmp eq i32 %v1_10002874, 0
  store i1 %v3_1000287c, i1* %cr3_eq.global-to-local, align 1
  %v1_10002880 = urem i32 %v5_10002744, 2
  store i32 %v1_10002880, i32* %r9.global-to-local, align 4
  %v0_10002884 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002884 = urem i32 %v0_10002884, 2
  store i32 %v1_10002884, i32* %r28.global-to-local, align 4
  %v1_10002888 = urem i32 %v0_10002874, 2
  store i32 %v1_10002888, i32* %r26.global-to-local, align 4
  %v1_1000288c = urem i32 %v1_10002878, 65536
  store i32 %v1_1000288c, i32* %r0.global-to-local, align 4
  %v0_10002894 = load i32, i32* @r31, align 4
  %v3_10002894 = icmp eq i32 %v0_10002894, 0
  store i1 %v3_10002894, i1* %cr2_eq.global-to-local, align 1
  %v5_10002898 = trunc i32 %v1_10002878 to i16
  %v0_1000289c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000289c = urem i32 %v0_1000289c, 2
  store i32 %v1_1000289c, i32* %r14.global-to-local, align 4
  %v0_100028a0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100028a0 = urem i32 %v0_100028a0, 2
  store i32 %v1_100028a0, i32* %r27.global-to-local, align 4
  %v0_100028a4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100028a4 = urem i32 %v0_100028a4, 2
  %v4_100028f4 = sext i8 %v5_10002678 to i32
  br label %dec_label_pc_100028ac

dec_label_pc_100028ac:                            ; preds = %dec_label_pc_1000298c, %dec_label_pc_10002870
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268445880, i32* @lr, align 4
  %v2_100028b4 = call i32 @function_10009cfc(i32 1510, i32 1)
  store i32 %v2_100028b4, i32* %r3.global-to-local, align 4
  %v3_100028b8 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_100028b8, i32* %r9.global-to-local, align 4
  %v0_100028bc = load i32, i32* @r31, align 4
  %v1_100028bc = mul i32 %v0_100028bc, 4
  store i32 %v1_100028bc, i32* %r0.global-to-local, align 4
  %v1_100028c0 = load i32, i32* %r22.global-to-local, align 4
  %v3_100028c0 = add i32 %v1_100028c0, %v1_100028bc
  %v4_100028c0 = inttoptr i32 %v3_100028c0 to i32*
  store i32 %v2_100028b4, i32* %v4_100028c0, align 4
  %v0_100028c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100028c4 = mul i32 %v0_100028c4, 4
  store i32 %v1_100028c4, i32* %r9.global-to-local, align 4
  %v1_100028c8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100028c8 = add i32 %v1_100028c8, %v1_100028c4
  %v3_100028c8 = inttoptr i32 %v2_100028c8 to i32*
  %v4_100028c8 = load i32, i32* %v3_100028c8, align 4
  store i32 %v4_100028c8, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100028d0 = inttoptr i32 %v4_100028c8 to i32*
  %v2_100028d0 = load i32, i32* %v1_100028d0, align 4
  store i32 %v2_100028d0, i32* %r0.global-to-local, align 4
  %v1_100028d4 = add i32 %v4_100028c8, 20
  store i32 %v1_100028d4, i32* @r30, align 4
  %v0_100028d8 = load i32, i32* %r18.global-to-local, align 4
  %v1_100028d8 = trunc i32 %v0_100028d8 to i16
  %v3_100028d8 = add i32 %v4_100028c8, 4
  %v4_100028d8 = inttoptr i32 %v3_100028d8 to i16*
  store i16 %v1_100028d8, i16* %v4_100028d8, align 2
  %v1_100028dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100028dc, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100028e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_100028e8 = load i32, i32* @r31, align 4
  %v2_100028e8 = inttoptr i32 %v1_100028e8 to i32*
  store i32 %v1_100028e4, i32* %v2_100028e8, align 4
  %v2_100028f0 = load i32, i32* @r31, align 4
  %v3_100028f0 = add i32 %v2_100028f0, 8
  %v4_100028f0 = inttoptr i32 %v3_100028f0 to i8*
  store i8 %v5_100026b0, i8* %v4_100028f0, align 1
  store i32 %v4_100028f4, i32* %r9.global-to-local, align 4
  %v2_100028f8 = load i32, i32* @r31, align 4
  %v3_100028f8 = add i32 %v2_100028f8, 1
  %v4_100028f8 = inttoptr i32 %v3_100028f8 to i8*
  store i8 %v5_10002678, i8* %v4_100028f8, align 1
  store i32 %v1_10002878, i32* %r0.global-to-local, align 4
  %v2_10002900 = load i32, i32* @r31, align 4
  %v3_10002900 = add i32 %v2_10002900, 2
  %v4_10002900 = inttoptr i32 %v3_10002900 to i16*
  store i16 %v5_10002898, i16* %v4_10002900, align 2
  %v0_10002904 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002904, label %dec_label_pc_10002910, label %dec_label_pc_10002908

dec_label_pc_10002908:                            ; preds = %dec_label_pc_100028ac
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000290c = load i32, i32* @r31, align 4
  %v3_1000290c = add i32 %v2_1000290c, 6
  %v4_1000290c = inttoptr i32 %v3_1000290c to i16*
  store i16 16384, i16* %v4_1000290c, align 2
  br label %dec_label_pc_10002910

dec_label_pc_10002910:                            ; preds = %dec_label_pc_100028ac, %dec_label_pc_10002908
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10002914 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002914 = trunc i32 %v0_10002914 to i16
  %v2_10002914 = load i32, i32* @r31, align 4
  %v3_10002914 = add i32 %v2_10002914, 20
  %v4_10002914 = inttoptr i32 %v3_10002914 to i16*
  store i16 %v1_10002914, i16* %v4_10002914, align 2
  %v0_10002918 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002918 = trunc i32 %v0_10002918 to i8
  %v2_10002918 = load i32, i32* @r31, align 4
  %v3_10002918 = add i32 %v2_10002918, 9
  %v4_10002918 = inttoptr i32 %v3_10002918 to i8*
  store i8 %v1_10002918, i8* %v4_10002918, align 1
  %v0_1000291c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000291c = trunc i32 %v0_1000291c to i16
  %v2_1000291c = load i32, i32* @r30, align 4
  %v3_1000291c = add i32 %v2_1000291c, 2
  %v4_1000291c = inttoptr i32 %v3_1000291c to i16*
  store i16 %v1_1000291c, i16* %v4_1000291c, align 2
  %v1_10002924 = load i32, i32* @r31, align 4
  %v2_10002924 = add i32 %v1_10002924, 12
  %v3_10002924 = inttoptr i32 %v2_10002924 to i32*
  store i32 %v6_1000280c, i32* %v3_10002924, align 4
  %v3_10002928 = load i32, i32* %stack_var_-136, align 4
  %v1_1000292c = mul i32 %v3_10002928, 24
  %v1_10002930 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002930 = add i32 %v1_10002930, %v1_1000292c
  store i32 %v2_10002930, i32* %r9.global-to-local, align 4
  %v1_10002934 = add i32 %v2_10002930, 16
  %v2_10002934 = inttoptr i32 %v1_10002934 to i32*
  %v3_10002934 = load i32, i32* %v2_10002934, align 4
  store i32 %v3_10002934, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_1000293c = load i32, i32* @r31, align 4
  %v2_1000293c = add i32 %v1_1000293c, 16
  %v3_1000293c = inttoptr i32 %v2_1000293c to i32*
  store i32 %v3_10002934, i32* %v3_1000293c, align 4
  %v0_10002940 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002940 = load i32, i32* @r30, align 4
  %v2_10002940 = add i32 %v1_10002940, 4
  %v3_10002940 = inttoptr i32 %v2_10002940 to i32*
  store i32 %v0_10002940, i32* %v3_10002940, align 4
  %v0_10002944 = load i32, i32* @r30, align 4
  %v1_10002944 = add i32 %v0_10002944, 12
  %v2_10002944 = inttoptr i32 %v1_10002944 to i32*
  %v3_10002944 = load i32, i32* %v2_10002944, align 4
  store i32 %v3_10002944, i32* %r0.global-to-local, align 4
  %v1_10002948 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10002948, i32* %r0.global-to-local, align 4
  store i32 %v1_10002880, i32* %r9.global-to-local, align 4
  %v1_10002950 = call i32 @__asm_rlwimi(i32 %v1_10002880, i32 21, i32 10, i32 10)
  store i32 %v1_10002950, i32* %r0.global-to-local, align 4
  %v1_10002954 = call i32 @__asm_rlwimi(i32 %v1_1000289c, i32 20, i32 11, i32 11)
  store i32 %v1_10002954, i32* %r0.global-to-local, align 4
  %v1_10002958 = call i32 @__asm_rlwimi(i32 %v1_10002888, i32 19, i32 12, i32 12)
  store i32 %v1_10002958, i32* %r0.global-to-local, align 4
  %v1_1000295c = call i32 @__asm_rlwimi(i32 %v1_100028a0, i32 18, i32 13, i32 13)
  store i32 %v1_1000295c, i32* %r0.global-to-local, align 4
  %v1_10002960 = call i32 @__asm_rlwimi(i32 %v1_10002884, i32 17, i32 14, i32 14)
  store i32 %v1_10002960, i32* %r0.global-to-local, align 4
  %v1_10002964 = call i32 @__asm_rlwimi(i32 %v1_100028a4, i32 16, i32 15, i32 15)
  store i32 %v1_10002964, i32* %r0.global-to-local, align 4
  %v1_10002968 = load i32, i32* @r30, align 4
  %v2_10002968 = add i32 %v1_10002968, 12
  %v3_10002968 = inttoptr i32 %v2_10002968 to i32*
  store i32 %v1_10002964, i32* %v3_10002968, align 4
  %v0_1000296c = call i32 @function_10005cd4()
  %v1_1000296c = trunc i32 %v0_1000296c to i16
  %v0_10002970 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002970, i32* @r4, align 4
  %v3_10002974 = load i32, i32* @r30, align 4
  %v4_10002974 = add i32 %v3_10002974, 14
  %v5_10002974 = inttoptr i32 %v4_10002974 to i16*
  store i16 %v1_1000296c, i16* %v5_10002974, align 2
  %v0_10002978 = load i32, i32* @r31, align 4
  %v1_10002978 = add i32 %v0_10002978, 40
  store i32 %v1_10002978, i32* @r3, align 4
  %v0_1000297c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000297c, label %dec_label_pc_1000298c, label %dec_label_pc_10002980

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002910
  %v0_10002980 = load i32, i32* @r30, align 4
  %v1_10002980 = add i32 %v0_10002980, 12
  %v2_10002980 = inttoptr i32 %v1_10002980 to i32*
  %v3_10002980 = load i32, i32* %v2_10002980, align 4
  %v1_10002984 = or i32 %v3_10002980, 524288
  store i32 %v1_10002984, i32* %r0.global-to-local, align 4
  store i32 %v1_10002984, i32* %v2_10002980, align 4
  br label %dec_label_pc_1000298c

dec_label_pc_1000298c:                            ; preds = %dec_label_pc_10002910, %dec_label_pc_10002980
  %v0_1000298c = call i32 @function_10005ea8()
  store i32 %v0_1000298c, i32* %r3.global-to-local, align 4
  %v3_10002990 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002990, i32* %r9.global-to-local, align 4
  %v1_10002994 = add i32 %v3_10002990, 1
  %v1_10002998 = load i32, i32* %r21.global-to-local, align 4
  %v2_10002998 = icmp slt i32 %v1_10002994, %v1_10002998
  store i32 %v1_10002994, i32* %stack_var_-136, align 4
  br i1 %v2_10002998, label %dec_label_pc_100028ac, label %dec_label_pc_100029a4

dec_label_pc_100029a4:                            ; preds = %dec_label_pc_1000298c
  store i32 %v6_1000280c, i32* %r0.global-to-local, align 4
  %v0_100029a8 = load i32, i32* %r16.global-to-local, align 4
  %v1_100029a8 = add i32 %v0_100029a8, 20
  store i32 %v1_100029a8, i32* @r30, align 4
  store i32 %v1_100027f8, i32* %r9.global-to-local, align 4
  %v3_100029b0 = icmp eq i32 %v6_1000280c, -1
  store i1 %v3_100029b0, i1* %cr2_eq.global-to-local, align 1
  %v3_100029b4 = icmp eq i32 %v1_100027f8, 0
  store i1 %v3_100029b4, i1* %cr3_eq.global-to-local, align 1
  %v0_100029b8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100029b8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100029b8.preheader

dec_label_pc_100029b8.preheader:                  ; preds = %dec_label_pc_10002a98, %dec_label_pc_10002b3c, %dec_label_pc_100029a4
  %v1_100029b8 = phi i1 [ %v1_10002854, %dec_label_pc_10002b3c ], [ %v1_100029b8.pre, %dec_label_pc_100029a4 ], [ %v1_10002a98, %dec_label_pc_10002a98 ]
  %v0_100029b8 = phi i1 [ %v3_10002854, %dec_label_pc_10002b3c ], [ %v0_100029b8.pre, %dec_label_pc_100029a4 ], [ %v0_10002a98, %dec_label_pc_10002a98 ]
  %v2_100029b8 = or i1 %v1_100029b8, %v0_100029b8
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_100029b8.preheader, %dec_label_pc_100029b8
  br i1 %v2_100029b8, label %dec_label_pc_100029b8, label %dec_label_pc_100029bc

dec_label_pc_100029bc:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002a98
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100029c0 = load i32, i32* @r30, align 4
  %v1_100029c0 = urem i32 %v0_100029c0, 65536
  store i32 %v1_100029c0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100029d0

dec_label_pc_100029d0:                            ; preds = %dec_label_pc_10002a28, %dec_label_pc_100029bc
  %v0_100029d0 = phi i32 [ %v1_10002a88, %dec_label_pc_10002a28 ], [ 0, %dec_label_pc_100029bc ]
  %v1_100029d0 = mul i32 %v0_100029d0, 24
  store i32 %v1_100029d0, i32* %r0.global-to-local, align 4
  %v1_100029d4 = mul i32 %v0_100029d0, 4
  %v1_100029d8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100029d8 = add i32 %v1_100029d8, %v1_100029d4
  %v3_100029d8 = inttoptr i32 %v2_100029d8 to i32*
  %v4_100029d8 = load i32, i32* %v3_100029d8, align 4
  store i32 %v4_100029d8, i32* %r28.global-to-local, align 4
  %v1_100029dc = load i32, i32* %r25.global-to-local, align 4
  %v2_100029dc = add i32 %v1_100029dc, %v1_100029d0
  %v1_100029e0 = add i32 %v2_100029dc, 20
  %v2_100029e0 = inttoptr i32 %v1_100029e0 to i8*
  %v3_100029e0 = load i8, i8* %v2_100029e0, align 1
  %v4_100029e0 = zext i8 %v3_100029e0 to i32
  store i32 %v4_100029e0, i32* %r9.global-to-local, align 4
  %v1_100029e4 = add i32 %v4_100029d8, 20
  store i32 %v1_100029e4, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_100029e0, 32
  br i1 %tmp41, label %dec_label_pc_10002aa0, label %dec_label_pc_100029f0

dec_label_pc_100029f0:                            ; preds = %dec_label_pc_100029d0
  %v0_100029f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100029f0, label %dec_label_pc_10002ac8, label %dec_label_pc_100029f4

dec_label_pc_100029f4:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_100029f0
  store i32 65535, i32* @r29, align 4
  %v0_100029fc = load i32, i32* %r18.global-to-local, align 4
  %v4_100029fc = icmp eq i32 %v0_100029fc, 65535
  br i1 %v4_100029fc, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a04

dec_label_pc_10002a04:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_100029f4
  %v1_10002a04 = phi i32 [ %v1_10002ad8, %dec_label_pc_10002ac8 ], [ 65535, %dec_label_pc_100029f4 ]
  %v0_10002a04 = load i32, i32* %r19.global-to-local, align 4
  %v4_10002a04 = icmp eq i32 %v0_10002a04, %v1_10002a04
  br i1 %v4_10002a04, label %dec_label_pc_10002af0, label %dec_label_pc_10002a0c

dec_label_pc_10002a0c:                            ; preds = %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge, %dec_label_pc_10002a04
  %v1_10002a0c = phi i32 [ %v1_10002a0c.pre, %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge ], [ %v1_10002a04, %dec_label_pc_10002a04 ]
  %v0_10002a0c = load i32, i32* %r20.global-to-local, align 4
  %v4_10002a0c = icmp eq i32 %v0_10002a0c, %v1_10002a0c
  br i1 %v4_10002a0c, label %dec_label_pc_10002b00, label %dec_label_pc_10002a14

dec_label_pc_10002a14:                            ; preds = %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge, %dec_label_pc_10002a0c
  %v1_10002a14 = phi i32 [ %v1_10002a14.pre, %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge ], [ %v1_10002a0c, %dec_label_pc_10002a0c ]
  %v0_10002a14 = load i32, i32* %r15.global-to-local, align 4
  %v4_10002a14 = icmp eq i32 %v0_10002a14, %v1_10002a14
  br i1 %v4_10002a14, label %dec_label_pc_10002b10, label %dec_label_pc_10002a1c

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge, %dec_label_pc_10002a14
  %v1_10002a1c = phi i32 [ %v1_10002a1c.pre, %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge ], [ %v1_10002a14, %dec_label_pc_10002a14 ]
  %v0_10002a1c = load i32, i32* %r17.global-to-local, align 4
  %v4_10002a1c = icmp eq i32 %v0_10002a1c, %v1_10002a1c
  br i1 %v4_10002a1c, label %dec_label_pc_10002b20, label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002a1c
  %v0_10002a24 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a24, label %dec_label_pc_10002a28, label %dec_label_pc_10002b2c

dec_label_pc_10002a28:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_10002b20, %dec_label_pc_10002b2c
  %v0_10002a28 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a28 = trunc i32 %v0_10002a28 to i16
  %v2_10002a28 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002a28 = add i32 %v2_10002a28, 10
  %v4_10002a28 = inttoptr i32 %v3_10002a28 to i16*
  store i16 %v1_10002a28, i16* %v4_10002a28, align 2
  %v0_10002a30 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002a30, i32* @r3, align 4
  %v2_10002a34 = call i32 @function_100043cc(i32 %v0_10002a30, i32 20)
  %v3_10002a34 = trunc i32 %v2_10002a34 to i16
  %v0_10002a38 = load i32, i32* @r31, align 4
  store i32 %v0_10002a38, i32* @r4, align 4
  %v4_10002a3c = add i32 %v0_10002a30, 10
  %v5_10002a3c = inttoptr i32 %v4_10002a3c to i16*
  store i16 %v3_10002a34, i16* %v5_10002a3c, align 2
  %v0_10002a40 = load i32, i32* %r27.global-to-local, align 4
  %v0_10002a44 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a44 = trunc i32 %v0_10002a44 to i16
  %v2_10002a44 = load i32, i32* @r31, align 4
  %v3_10002a44 = add i32 %v2_10002a44, 16
  %v4_10002a44 = inttoptr i32 %v3_10002a44 to i16*
  store i16 %v1_10002a44, i16* %v4_10002a44, align 2
  %v0_10002a48 = load i32, i32* @r30, align 4
  %v0_10002a4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002a4c, i32* %r3.global-to-local, align 4
  %v4_10002a50 = call i32 @function_10004430(i32 %v0_10002a4c, i32 %v0_10002a38, i32 %v0_10002a40, i32 %v0_10002a48)
  %v5_10002a50 = trunc i32 %v4_10002a50 to i16
  store i32 %v4_10002a50, i32* %r3.global-to-local, align 4
  %v3_10002a54 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002a54, i32* %r7.global-to-local, align 4
  %v0_10002a58 = load i32, i32* @r31, align 4
  %v1_10002a58 = add i32 %v0_10002a58, 2
  %v2_10002a58 = inttoptr i32 %v1_10002a58 to i16*
  %v3_10002a58 = load i16, i16* %v2_10002a58, align 2
  %v4_10002a58 = zext i16 %v3_10002a58 to i32
  store i32 %v4_10002a58, i32* %r0.global-to-local, align 4
  %v0_10002a5c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002a60 = mul i32 %v3_10002a54, 24
  store i32 %v1_10002a60, i32* %r7.global-to-local, align 4
  %v4_10002a64 = add i32 %v0_10002a58, 16
  %v5_10002a64 = inttoptr i32 %v4_10002a64 to i16*
  store i16 %v5_10002a50, i16* %v5_10002a64, align 2
  %v0_10002a68 = load i32, i32* %r24.global-to-local, align 4
  %v0_10002a6c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002a6c, i32* %r3.global-to-local, align 4
  %v0_10002a70 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002a70 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002a70 = add i32 %v1_10002a70, %v0_10002a70
  store i32 %v2_10002a70, i32* %r7.global-to-local, align 4
  %v0_10002a78 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002a78 = trunc i32 %v0_10002a78 to i16
  %v3_10002a78 = add i32 %v2_10002a70, 2
  %v4_10002a78 = inttoptr i32 %v3_10002a78 to i16*
  store i16 %v1_10002a78, i16* %v4_10002a78, align 2
  store i32 268446340, i32* @lr, align 4
  %v6_10002a80 = call i32 @function_10009924(i32 %v0_10002a6c, i32 %v0_10002a5c, i32 %v0_10002a68, i32 16384, i32 %v2_10002a70, i32 16)
  store i32 %v6_10002a80, i32* %r3.global-to-local, align 4
  %v3_10002a84 = load i32, i32* %stack_var_-136, align 4
  %v1_10002a88 = add i32 %v3_10002a84, 1
  store i32 %v1_10002a88, i32* %r9.global-to-local, align 4
  %v1_10002a8c = load i32, i32* %r21.global-to-local, align 4
  %v2_10002a8c = icmp slt i32 %v1_10002a88, %v1_10002a8c
  store i32 %v1_10002a88, i32* %stack_var_-136, align 4
  br i1 %v2_10002a8c, label %dec_label_pc_100029d0, label %dec_label_pc_10002a98

dec_label_pc_10002a98:                            ; preds = %dec_label_pc_10002a28
  %v0_10002a98 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002a98 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002a98 = or i1 %v0_10002a98, %v1_10002a98
  br i1 %v2_10002a98, label %dec_label_pc_100029b8.preheader, label %dec_label_pc_100029bc

dec_label_pc_10002aa0:                            ; preds = %dec_label_pc_100029d0
  %v1_10002aa0 = add i32 %v2_100029dc, 16
  %v2_10002aa0 = inttoptr i32 %v1_10002aa0 to i32*
  %v3_10002aa0 = load i32, i32* %v2_10002aa0, align 4
  store i32 %v3_10002aa0, i32* %r29.global-to-local, align 4
  %v0_10002aa4 = call i32 @function_10005cd4()
  store i32 %v0_10002aa4, i32* %r3.global-to-local, align 4
  %v3_10002aa8 = load i32, i32* %stack_var_-136, align 4
  %v1_10002aac = mul i32 %v3_10002aa8, 24
  %v1_10002ab0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002ab0 = add i32 %v1_10002ab0, %v1_10002aac
  store i32 %v2_10002ab0, i32* %r9.global-to-local, align 4
  %v1_10002ab4 = add i32 %v2_10002ab0, 20
  %v2_10002ab4 = inttoptr i32 %v1_10002ab4 to i8*
  %v3_10002ab4 = load i8, i8* %v2_10002ab4, align 1
  %v4_10002ab4 = zext i8 %v3_10002ab4 to i32
  store i32 %v4_10002ab4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002ab4, 64
  %v2_10002ab8 = zext i8 %tmp to i32
  %v3_10002ab8 = lshr i32 %v0_10002aa4, %v2_10002ab8
  store i32 %v3_10002ab8, i32* %r3.global-to-local, align 4
  %v0_10002abc = load i32, i32* %r29.global-to-local, align 4
  %v2_10002abc = add i32 %v3_10002ab8, %v0_10002abc
  store i32 %v2_10002abc, i32* %r29.global-to-local, align 4
  %v1_10002ac0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002ac0 = add i32 %v1_10002ac0, 16
  %v3_10002ac0 = inttoptr i32 %v2_10002ac0 to i32*
  store i32 %v2_10002abc, i32* %v3_10002ac0, align 4
  %v0_10002ac4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002ac4, label %dec_label_pc_10002ac8, label %dec_label_pc_100029f4

dec_label_pc_10002ac8:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_100029f0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002acc = call i32 @function_10005cd4()
  store i32 %v0_10002acc, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002ad4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002ad4 = add i32 %v1_10002ad4, 12
  %v3_10002ad4 = inttoptr i32 %v2_10002ad4 to i32*
  store i32 %v0_10002acc, i32* %v3_10002ad4, align 4
  %v0_10002ad8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002ad8 = load i32, i32* @r29, align 4
  %v4_10002ad8 = icmp eq i32 %v0_10002ad8, %v1_10002ad8
  br i1 %v4_10002ad8, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a04

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_100029f4
  %v0_10002ae0 = call i32 @function_10005cd4()
  %v1_10002ae0 = trunc i32 %v0_10002ae0 to i16
  store i32 %v0_10002ae0, i32* %r3.global-to-local, align 4
  %v0_10002ae4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002ae4 = load i32, i32* @r29, align 4
  %v4_10002ae4 = icmp eq i32 %v0_10002ae4, %v1_10002ae4
  %v3_10002ae8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002ae8 = add i32 %v3_10002ae8, 4
  %v5_10002ae8 = inttoptr i32 %v4_10002ae8 to i16*
  store i16 %v1_10002ae0, i16* %v5_10002ae8, align 2
  br i1 %v4_10002ae4, label %dec_label_pc_10002af0, label %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge

dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge: ; preds = %dec_label_pc_10002ae0
  %v1_10002a0c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a0c

dec_label_pc_10002af0:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a04
  %v0_10002af0 = call i32 @function_10005cd4()
  %v1_10002af0 = trunc i32 %v0_10002af0 to i16
  store i32 %v0_10002af0, i32* %r3.global-to-local, align 4
  %v0_10002af4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002af4 = load i32, i32* @r29, align 4
  %v4_10002af4 = icmp eq i32 %v0_10002af4, %v1_10002af4
  %v3_10002af8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002af8 = add i32 %v3_10002af8, 20
  %v5_10002af8 = inttoptr i32 %v4_10002af8 to i16*
  store i16 %v1_10002af0, i16* %v5_10002af8, align 2
  br i1 %v4_10002af4, label %dec_label_pc_10002b00, label %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge

dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge: ; preds = %dec_label_pc_10002af0
  %v1_10002a14.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a14

dec_label_pc_10002b00:                            ; preds = %dec_label_pc_10002af0, %dec_label_pc_10002a0c
  %v0_10002b00 = call i32 @function_10005cd4()
  %v1_10002b00 = trunc i32 %v0_10002b00 to i16
  store i32 %v0_10002b00, i32* %r3.global-to-local, align 4
  %v0_10002b04 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002b04 = load i32, i32* @r29, align 4
  %v4_10002b04 = icmp eq i32 %v0_10002b04, %v1_10002b04
  %v3_10002b08 = load i32, i32* @r31, align 4
  %v4_10002b08 = add i32 %v3_10002b08, 2
  %v5_10002b08 = inttoptr i32 %v4_10002b08 to i16*
  store i16 %v1_10002b00, i16* %v5_10002b08, align 2
  br i1 %v4_10002b04, label %dec_label_pc_10002b10, label %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge

dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge: ; preds = %dec_label_pc_10002b00
  %v1_10002a1c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a1c

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b00, %dec_label_pc_10002a14
  %v0_10002b10 = call i32 @function_10005cd4()
  store i32 %v0_10002b10, i32* %r3.global-to-local, align 4
  %v0_10002b14 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002b14 = load i32, i32* @r29, align 4
  %v4_10002b14 = icmp eq i32 %v0_10002b14, %v1_10002b14
  %v1_10002b18 = load i32, i32* @r31, align 4
  %v2_10002b18 = add i32 %v1_10002b18, 4
  %v3_10002b18 = inttoptr i32 %v2_10002b18 to i32*
  store i32 %v0_10002b10, i32* %v3_10002b18, align 4
  br i1 %v4_10002b14, label %dec_label_pc_10002b20, label %dec_label_pc_10002a24

dec_label_pc_10002b20:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002a1c
  %v0_10002b20 = call i32 @function_10005cd4()
  store i32 %v0_10002b20, i32* %r3.global-to-local, align 4
  %v1_10002b24 = load i32, i32* @r31, align 4
  %v2_10002b24 = add i32 %v1_10002b24, 8
  %v3_10002b24 = inttoptr i32 %v2_10002b24 to i32*
  store i32 %v0_10002b20, i32* %v3_10002b24, align 4
  %v0_10002b28 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002b28, label %dec_label_pc_10002a28, label %dec_label_pc_10002b2c

dec_label_pc_10002b2c:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_10002b20
  %v0_10002b2c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002b2c = add i32 %v0_10002b2c, 40
  store i32 %v1_10002b2c, i32* @r3, align 4
  %v0_10002b30 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002b30, i32* @r4, align 4
  %v0_10002b34 = call i32 @function_10005ea8()
  store i32 %v0_10002b34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002a28

dec_label_pc_10002b3c:                            ; preds = %dec_label_pc_10002854
  store i32 %v6_1000280c, i32* %r0.global-to-local, align 4
  %v0_10002b40 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002b40 = add i32 %v0_10002b40, 40
  store i32 %v1_10002b40, i32* %r24.global-to-local, align 4
  store i32 %v1_100027f8, i32* %r9.global-to-local, align 4
  %v1_10002b48 = add i32 %v0_10002b40, 20
  store i32 %v1_10002b48, i32* @r30, align 4
  %v3_10002b4c = icmp eq i32 %v6_1000280c, -1
  store i1 %v3_10002b4c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002b50 = icmp eq i32 %v1_100027f8, 0
  store i1 %v3_10002b50, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100029b8.preheader

dec_label_pc_10002b5c:                            ; preds = %dec_label_pc_10002830
  %v0_10002b5c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002b5c, i32* %r3.global-to-local, align 4
  store i32 268446564, i32* @lr, align 4
  %v0_10002b60 = call i32 @function_10008c98()
  store i32 %v0_10002b60, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002b64

dec_label_pc_10002b64:                            ; preds = %dec_label_pc_100025e0, %dec_label_pc_10002b5c
  store i32 %v0_100025f8, i32* %r0.global-to-local, align 4
  %v1_10002b78 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100025e8)
  store i32 %v0_10002638, i32* %r28.global-to-local, align 4
  store i32 %v0_10002640, i32* %r29.global-to-local, align 4
  store i32 %v0_10002648, i32* %r30.global-to-local, align 4
  %v0_10002bc0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002bc0

; uselistorder directives
  uselistorder i32 %v0_10002b00, { 1, 0 }
  uselistorder i32 %v0_10002af0, { 1, 0 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i32 %v1_10002ad8, { 1, 0 }
  uselistorder i1 %v1_10002a98, { 1, 0 }
  uselistorder i1 %v0_10002a98, { 1, 0 }
  uselistorder i32 %v1_10002a88, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002a50, { 1, 0 }
  uselistorder i32 %v1_100028c4, { 1, 0 }
  uselistorder i32 %v1_100028bc, { 1, 0 }
  uselistorder i32 %v1_100028a0, { 1, 0 }
  uselistorder i32 %v1_1000289c, { 1, 0 }
  uselistorder i32 %v1_10002888, { 1, 0 }
  uselistorder i32 %v1_10002884, { 1, 0 }
  uselistorder i32 %v1_10002880, { 2, 1, 0 }
  uselistorder i32 %v1_10002878, { 1, 2, 0, 3 }
  uselistorder i32 %v6_1000280c, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_100027f8, { 3, 0, 2, 1 }
  uselistorder i8 %v5_10002678, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002b64, { 1, 0 }
  uselistorder label %dec_label_pc_10002b2c, { 1, 0 }
  uselistorder label %dec_label_pc_10002a28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100029bc, { 1, 0 }
  uselistorder label %dec_label_pc_100029b8, { 1, 0 }
  uselistorder label %dec_label_pc_100029b8.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000298c, { 1, 0 }
  uselistorder label %dec_label_pc_10002910, { 1, 0 }
}

define i32 @function_10002bc4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002bc4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10002bc8 = load i32, i32* @lr, align 4
  store i32 %v0_10002bc8, i32* %r0.global-to-local, align 4
  %v0_10002bcc = call i32 @__asm_mfcr()
  store i32 %v0_10002bcc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10002bdc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002bcc, i32* %r24.global-to-local, align 4
  %v0_10002c1c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c24 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002c30 = load i32, i32* @r31, align 4
  store i32 268446776, i32* @lr, align 4
  %v2_10002c34 = call i32 @function_10009cfc(i32 4, i32 4)
  store i32 %v2_10002c34, i32* %r25.global-to-local, align 4
  %v0_10002c3c = load i32, i32* @r28, align 4
  %v0_10002c48 = load i32, i32* @r29, align 4
  store i32 %v0_10002c48, i32* %r3.global-to-local, align 4
  store i32 268446800, i32* @lr, align 4
  %v4_10002c4c = inttoptr i32 %v0_10002c3c to i32*
  %v5_10002c4c = call i32 @function_100006a8(i32 %v0_10002c48, i32* %v4_10002c4c, i32 2, i32 0)
  %v5_10002c5c = trunc i32 %v5_10002c4c to i8
  %v0_10002c64 = load i32, i32* @r28, align 4
  %v0_10002c68 = load i32, i32* @r29, align 4
  store i32 %v0_10002c68, i32* %r3.global-to-local, align 4
  store i32 268446832, i32* @lr, align 4
  %v4_10002c6c = inttoptr i32 %v0_10002c64 to i32*
  %v5_10002c6c = call i32 @function_100006a8(i32 %v0_10002c68, i32* %v4_10002c6c, i32 3, i32 65535)
  %v0_10002c70 = load i32, i32* @r28, align 4
  store i32 %v5_10002c6c, i32* %r21.global-to-local, align 4
  %v0_10002c80 = load i32, i32* @r29, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c70 to i32*
  %v5_10002c84 = call i32 @function_100006a8(i32 %v0_10002c80, i32* %v4_10002c84, i32 4, i32 64)
  %v0_10002c88 = load i32, i32* @r28, align 4
  %v5_10002c94 = trunc i32 %v5_10002c84 to i8
  %v0_10002c9c = load i32, i32* @r29, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c88 to i32*
  %v5_10002ca0 = call i32 @function_100006a8(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 5, i32 1)
  %v0_10002cb0 = load i32, i32* @r28, align 4
  %v1_10002cb4 = urem i32 %v5_10002ca0, 256
  store i32 %v1_10002cb4, i32* @r31, align 4
  %v0_10002cb8 = load i32, i32* @r29, align 4
  store i32 %v0_10002cb8, i32* %r3.global-to-local, align 4
  store i32 268446912, i32* @lr, align 4
  %v4_10002cbc = inttoptr i32 %v0_10002cb0 to i32*
  %v5_10002cbc = call i32 @function_100006a8(i32 %v0_10002cb8, i32* %v4_10002cbc, i32 6, i32 65535)
  %v0_10002cc4 = load i32, i32* @r28, align 4
  store i32 %v5_10002cbc, i32* %r22.global-to-local, align 4
  %v0_10002cd4 = load i32, i32* @r29, align 4
  store i32 %v0_10002cd4, i32* %r3.global-to-local, align 4
  store i32 268446940, i32* @lr, align 4
  %v4_10002cd8 = inttoptr i32 %v0_10002cc4 to i32*
  %v5_10002cd8 = call i32 @function_100006a8(i32 %v0_10002cd4, i32* %v4_10002cd8, i32 7, i32 65535)
  %v0_10002ce0 = load i32, i32* @r28, align 4
  store i32 %v5_10002cd8, i32* %r23.global-to-local, align 4
  %v0_10002cf0 = load i32, i32* @r29, align 4
  store i32 %v0_10002cf0, i32* %r3.global-to-local, align 4
  store i32 268446968, i32* @lr, align 4
  %v4_10002cf4 = inttoptr i32 %v0_10002ce0 to i32*
  %v5_10002cf4 = call i32 @function_100006a8(i32 %v0_10002cf0, i32* %v4_10002cf4, i32 17, i32 65535)
  %v0_10002cf8 = load i32, i32* @r28, align 4
  store i32 %v5_10002cf4, i32* %r19.global-to-local, align 4
  %v0_10002d08 = load i32, i32* @r29, align 4
  store i32 %v0_10002d08, i32* %r3.global-to-local, align 4
  store i32 268446992, i32* @lr, align 4
  %v4_10002d0c = inttoptr i32 %v0_10002cf8 to i32*
  %v5_10002d0c = call i32 @function_100006a8(i32 %v0_10002d08, i32* %v4_10002d0c, i32 18, i32 0)
  %v0_10002d10 = load i32, i32* @r28, align 4
  store i32 %v5_10002d0c, i32* %r20.global-to-local, align 4
  %v0_10002d20 = load i32, i32* @r29, align 4
  store i32 %v0_10002d20, i32* %r3.global-to-local, align 4
  store i32 268447016, i32* @lr, align 4
  %v4_10002d24 = inttoptr i32 %v0_10002d10 to i32*
  %v5_10002d24 = call i32 @function_100006a8(i32 %v0_10002d20, i32* %v4_10002d24, i32 11, i32 0)
  %v0_10002d28 = load i32, i32* @r28, align 4
  store i32 %v5_10002d24, i32* %r14.global-to-local, align 4
  %v0_10002d38 = load i32, i32* @r29, align 4
  store i32 %v0_10002d38, i32* %r3.global-to-local, align 4
  store i32 268447040, i32* @lr, align 4
  %v4_10002d3c = inttoptr i32 %v0_10002d28 to i32*
  %v5_10002d3c = call i32 @function_100006a8(i32 %v0_10002d38, i32* %v4_10002d3c, i32 12, i32 0)
  %v0_10002d40 = load i32, i32* @r28, align 4
  store i32 %v5_10002d3c, i32* %r17.global-to-local, align 4
  %v0_10002d50 = load i32, i32* @r29, align 4
  store i32 %v0_10002d50, i32* %r3.global-to-local, align 4
  store i32 268447064, i32* @lr, align 4
  %v4_10002d54 = inttoptr i32 %v0_10002d40 to i32*
  %v5_10002d54 = call i32 @function_100006a8(i32 %v0_10002d50, i32* %v4_10002d54, i32 13, i32 0)
  %v0_10002d58 = load i32, i32* @r28, align 4
  store i32 %v5_10002d54, i32* %r18.global-to-local, align 4
  %v0_10002d68 = load i32, i32* @r29, align 4
  store i32 %v0_10002d68, i32* %r3.global-to-local, align 4
  store i32 268447088, i32* @lr, align 4
  %v4_10002d6c = inttoptr i32 %v0_10002d58 to i32*
  %v5_10002d6c = call i32 @function_100006a8(i32 %v0_10002d68, i32* %v4_10002d6c, i32 14, i32 0)
  %v0_10002d70 = load i32, i32* @r28, align 4
  %v0_10002d80 = load i32, i32* @r29, align 4
  store i32 %v0_10002d80, i32* %r3.global-to-local, align 4
  store i32 268447112, i32* @lr, align 4
  %v4_10002d84 = inttoptr i32 %v0_10002d70 to i32*
  %v5_10002d84 = call i32 @function_100006a8(i32 %v0_10002d80, i32* %v4_10002d84, i32 15, i32 1)
  %v0_10002d88 = load i32, i32* @r28, align 4
  store i32 %v5_10002d84, i32* %r16.global-to-local, align 4
  %v0_10002d98 = load i32, i32* @r29, align 4
  store i32 %v0_10002d98, i32* %r3.global-to-local, align 4
  store i32 268447136, i32* @lr, align 4
  %v4_10002d9c = inttoptr i32 %v0_10002d88 to i32*
  %v5_10002d9c = call i32 @function_100006a8(i32 %v0_10002d98, i32* %v4_10002d9c, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002da4 = load i32, i32* @global_var_1001bd68.14, align 4
  %v0_10002da8 = load i32, i32* @r28, align 4
  store i32 %v5_10002d9c, i32* %r30.global-to-local, align 4
  %v0_10002db4 = load i32, i32* @r29, align 4
  store i32 %v0_10002db4, i32* %r3.global-to-local, align 4
  store i32 268447164, i32* @lr, align 4
  %v5_10002db8 = inttoptr i32 %v0_10002da8 to i32*
  %v6_10002db8 = call i32 @function_10000628(i32 %v0_10002db4, i32* %v5_10002db8, i32 25, i32 %v3_10002da4, i32 268566528)
  store i32 %v6_10002db8, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447184, i32* @lr, align 4
  %v3_10002dcc = call i32 @function_100099a0(i32 2, i32 3, i32 6)
  store i32 %v3_10002dcc, i32* %r3.global-to-local, align 4
  %v3_10002dd0 = icmp eq i32 %v3_10002dcc, -1
  store i32 %v3_10002dcc, i32* %r26.global-to-local, align 4
  br i1 %v3_10002dd0, label %dec_label_pc_10003108, label %dec_label_pc_10002ddc

dec_label_pc_10002ddc:                            ; preds = %dec_label_pc_10002bc4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002de8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268447224, i32* @lr, align 4
  %v4_10002df4 = call i32 @function_10009964(i32 0, i32 3, i32 %v2_10002de8, i32 4)
  store i32 %v4_10002df4, i32* %r3.global-to-local, align 4
  %v3_10002df8 = icmp eq i32 %v4_10002df4, -1
  br i1 %v3_10002df8, label %dec_label_pc_10003100, label %dec_label_pc_10002e00

dec_label_pc_10002e00:                            ; preds = %dec_label_pc_10002ddc
  %v0_10002e00 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002e00 = icmp slt i32 %v0_10002e00, 0
  %v3_10002e00 = icmp eq i32 %v0_10002e00, 0
  store i1 %v1_10002e00, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002e00, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_10002e0c = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e0c = urem i32 %v0_10002e0c, 65536
  store i32 %v1_10002e0c, i32* %r21.global-to-local, align 4
  %v0_10002e10 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002e10 = urem i32 %v0_10002e10, 65536
  store i32 %v1_10002e10, i32* %r22.global-to-local, align 4
  %v0_10002e14 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002e14 = urem i32 %v0_10002e14, 65536
  store i32 %v1_10002e14, i32* %r23.global-to-local, align 4
  %v0_10002e18 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002e18 = urem i32 %v0_10002e18, 256
  store i32 %v1_10002e18, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10002e00, 1
  br i1 %tmp40, label %dec_label_pc_10002f7c, label %dec_label_pc_10002e20

dec_label_pc_10002e20:                            ; preds = %dec_label_pc_10002e00
  store i32 %v5_10002d6c, i32* %r0.global-to-local, align 4
  %v0_10002e24 = load i32, i32* @r31, align 4
  %v3_10002e24 = icmp eq i32 %v0_10002e24, 0
  store i1 %v3_10002e24, i1* %cr3_eq.global-to-local, align 1
  %v0_10002e28 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002e28 = urem i32 %v0_10002e28, 2
  store i32 %v1_10002e28, i32* %r29.global-to-local, align 4
  %v0_10002e2c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002e2c = urem i32 %v0_10002e2c, 2
  store i32 %v1_10002e2c, i32* %r17.global-to-local, align 4
  %v0_10002e30 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002e30 = urem i32 %v0_10002e30, 2
  store i32 %v1_10002e30, i32* %r18.global-to-local, align 4
  %v1_10002e34 = urem i32 %v5_10002d6c, 2
  store i32 %v1_10002e34, i32* %r28.global-to-local, align 4
  %v0_10002e38 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002e38 = urem i32 %v0_10002e38, 2
  store i32 %v1_10002e38, i32* %r30.global-to-local, align 4
  %v1_10002e3c = urem i32 %v0_10002e18, 2
  store i32 %v1_10002e3c, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10002e8c = sext i8 %v5_10002c5c to i32
  %v4_10002e94 = sext i8 %v5_10002c94 to i32
  br label %dec_label_pc_10002e44

dec_label_pc_10002e44:                            ; preds = %dec_label_pc_10002ea8, %dec_label_pc_10002e20
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268447312, i32* @lr, align 4
  %v2_10002e4c = call i32 @function_10009cfc(i32 128, i32 1)
  store i32 %v2_10002e4c, i32* %r3.global-to-local, align 4
  %v3_10002e50 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002e50, i32* %r9.global-to-local, align 4
  %v0_10002e54 = load i32, i32* @r31, align 4
  %v1_10002e54 = mul i32 %v0_10002e54, 4
  store i32 %v1_10002e54, i32* %r0.global-to-local, align 4
  %v1_10002e58 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002e58 = add i32 %v1_10002e58, %v1_10002e54
  %v4_10002e58 = inttoptr i32 %v3_10002e58 to i32*
  store i32 %v2_10002e4c, i32* %v4_10002e58, align 4
  %v0_10002e5c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e5c = mul i32 %v0_10002e5c, 4
  store i32 %v1_10002e5c, i32* %r9.global-to-local, align 4
  %v1_10002e60 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002e60 = add i32 %v1_10002e60, %v1_10002e5c
  %v3_10002e60 = inttoptr i32 %v2_10002e60 to i32*
  %v4_10002e60 = load i32, i32* %v3_10002e60, align 4
  store i32 %v4_10002e60, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002e68 = inttoptr i32 %v4_10002e60 to i32*
  %v2_10002e68 = load i32, i32* %v1_10002e68, align 4
  store i32 %v2_10002e68, i32* %r0.global-to-local, align 4
  %v1_10002e6c = add i32 %v4_10002e60, 20
  store i32 %v1_10002e6c, i32* %r11.global-to-local, align 4
  %v0_10002e70 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e70 = trunc i32 %v0_10002e70 to i16
  %v3_10002e70 = add i32 %v4_10002e60, 4
  %v4_10002e70 = inttoptr i32 %v3_10002e70 to i16*
  store i16 %v1_10002e70, i16* %v4_10002e70, align 2
  %v1_10002e74 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002e74, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002e7c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_10002e84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e84 = inttoptr i32 %v1_10002e84 to i32*
  store i32 %v1_10002e7c, i32* %v2_10002e84, align 4
  %v0_10002e88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e88 = trunc i32 %v0_10002e88 to i16
  %v2_10002e88 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e88 = add i32 %v2_10002e88, 2
  %v4_10002e88 = inttoptr i32 %v3_10002e88 to i16*
  store i16 %v1_10002e88, i16* %v4_10002e88, align 2
  store i32 %v4_10002e8c, i32* %r0.global-to-local, align 4
  %v2_10002e90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e90 = add i32 %v2_10002e90, 1
  %v4_10002e90 = inttoptr i32 %v3_10002e90 to i8*
  store i8 %v5_10002c5c, i8* %v4_10002e90, align 1
  store i32 %v4_10002e94, i32* %r9.global-to-local, align 4
  %v2_10002e98 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e98 = add i32 %v2_10002e98, 8
  %v4_10002e98 = inttoptr i32 %v3_10002e98 to i8*
  store i8 %v5_10002c94, i8* %v4_10002e98, align 1
  %v0_10002e9c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002e9c, label %dec_label_pc_10002ea8, label %dec_label_pc_10002ea0

dec_label_pc_10002ea0:                            ; preds = %dec_label_pc_10002e44
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002ea4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002ea4 = add i32 %v2_10002ea4, 6
  %v4_10002ea4 = inttoptr i32 %v3_10002ea4 to i16*
  store i16 16384, i16* %v4_10002ea4, align 2
  br label %dec_label_pc_10002ea8

dec_label_pc_10002ea8:                            ; preds = %dec_label_pc_10002e44, %dec_label_pc_10002ea0
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10002eac = load i32, i32* %r15.global-to-local, align 4
  %v1_10002eac = load i32, i32* %r31.global-to-local, align 4
  %v2_10002eac = add i32 %v1_10002eac, 12
  %v3_10002eac = inttoptr i32 %v2_10002eac to i32*
  store i32 %v0_10002eac, i32* %v3_10002eac, align 4
  %v0_10002eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002eb0 = trunc i32 %v0_10002eb0 to i8
  %v2_10002eb0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002eb0 = add i32 %v2_10002eb0, 9
  %v4_10002eb0 = inttoptr i32 %v3_10002eb0 to i8*
  store i8 %v1_10002eb0, i8* %v4_10002eb0, align 1
  %v0_10002eb4 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002eb4 = trunc i32 %v0_10002eb4 to i16
  %v2_10002eb4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002eb4 = add i32 %v2_10002eb4, 20
  %v4_10002eb4 = inttoptr i32 %v3_10002eb4 to i16*
  store i16 %v1_10002eb4, i16* %v4_10002eb4, align 2
  %v3_10002eb8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002eb8, i32* %r9.global-to-local, align 4
  %v0_10002ebc = load i32, i32* %r23.global-to-local, align 4
  %v1_10002ebc = trunc i32 %v0_10002ebc to i16
  %v2_10002ebc = load i32, i32* %r11.global-to-local, align 4
  %v3_10002ebc = add i32 %v2_10002ebc, 2
  %v4_10002ebc = inttoptr i32 %v3_10002ebc to i16*
  store i16 %v1_10002ebc, i16* %v4_10002ebc, align 2
  %v0_10002ec0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002ec0 = mul i32 %v0_10002ec0, 24
  %v1_10002ec4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002ec4 = add i32 %v1_10002ec4, %v1_10002ec0
  store i32 %v2_10002ec4, i32* %r9.global-to-local, align 4
  %v1_10002ec8 = add i32 %v2_10002ec4, 16
  %v2_10002ec8 = inttoptr i32 %v1_10002ec8 to i32*
  %v3_10002ec8 = load i32, i32* %v2_10002ec8, align 4
  store i32 %v3_10002ec8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10002ed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ed0 = add i32 %v1_10002ed0, 16
  %v3_10002ed0 = inttoptr i32 %v2_10002ed0 to i32*
  store i32 %v3_10002ec8, i32* %v3_10002ed0, align 4
  %v0_10002ed4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002ed4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002ed4 = add i32 %v1_10002ed4, 4
  %v3_10002ed4 = inttoptr i32 %v2_10002ed4 to i32*
  store i32 %v0_10002ed4, i32* %v3_10002ed4, align 4
  %v0_10002ed8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002ed8 = add i32 %v0_10002ed8, 12
  %v2_10002ed8 = inttoptr i32 %v1_10002ed8 to i32*
  %v3_10002ed8 = load i32, i32* %v2_10002ed8, align 4
  store i32 %v3_10002ed8, i32* %r0.global-to-local, align 4
  %v1_10002edc = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_10002edc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002ee4 = call i32 @__asm_rlwimi(i32 %v1_10002e3c, i32 21, i32 10, i32 10)
  store i32 %v1_10002ee4, i32* %r0.global-to-local, align 4
  %v1_10002ee8 = call i32 @__asm_rlwimi(i32 %v1_10002e2c, i32 20, i32 11, i32 11)
  store i32 %v1_10002ee8, i32* %r0.global-to-local, align 4
  %v1_10002eec = call i32 @__asm_rlwimi(i32 %v1_10002e30, i32 19, i32 12, i32 12)
  store i32 %v1_10002eec, i32* %r0.global-to-local, align 4
  %v1_10002ef0 = call i32 @__asm_rlwimi(i32 %v1_10002e34, i32 18, i32 13, i32 13)
  store i32 %v1_10002ef0, i32* %r0.global-to-local, align 4
  %v1_10002ef4 = call i32 @__asm_rlwimi(i32 %v1_10002e28, i32 17, i32 14, i32 14)
  store i32 %v1_10002ef4, i32* %r0.global-to-local, align 4
  %v1_10002ef8 = call i32 @__asm_rlwimi(i32 %v1_10002e38, i32 16, i32 15, i32 15)
  %v1_10002efc = load i32, i32* %r11.global-to-local, align 4
  %v2_10002efc = add i32 %v1_10002efc, 12
  %v3_10002efc = inttoptr i32 %v2_10002efc to i32*
  store i32 %v1_10002ef8, i32* %v3_10002efc, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10002f04 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f04 = add i32 %v2_10002f04, 40
  %v4_10002f04 = inttoptr i32 %v3_10002f04 to i8*
  store i8 2, i8* %v4_10002f04, align 1
  %v0_10002f08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f08 = trunc i32 %v0_10002f08 to i8
  %v2_10002f08 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f08 = add i32 %v2_10002f08, 41
  %v4_10002f08 = inttoptr i32 %v3_10002f08 to i8*
  store i8 %v1_10002f08, i8* %v4_10002f08, align 1
  %v0_10002f0c = call i32 @function_10005cd4()
  %v2_10002f14 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f14 = add i32 %v2_10002f14, 46
  %v4_10002f14 = inttoptr i32 %v3_10002f14 to i8*
  store i8 8, i8* %v4_10002f14, align 1
  %v1_10002f18 = urem i32 %v0_10002f0c, 16
  store i32 %v1_10002f18, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10002f24 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f24 = add i32 %v2_10002f24, 44
  %v4_10002f24 = inttoptr i32 %v3_10002f24 to i8*
  store i8 4, i8* %v4_10002f24, align 1
  %v0_10002f28 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002f28 = add i32 %v0_10002f28, 1400
  store i32 %v1_10002f28, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10002f30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f30 = trunc i32 %v0_10002f30 to i8
  %v2_10002f30 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f30 = add i32 %v2_10002f30, 45
  %v4_10002f30 = inttoptr i32 %v3_10002f30 to i8*
  store i8 %v1_10002f30, i8* %v4_10002f30, align 1
  %v0_10002f34 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f34 = trunc i32 %v0_10002f34 to i8
  %v2_10002f34 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f34 = add i32 %v2_10002f34, 47
  %v4_10002f34 = inttoptr i32 %v3_10002f34 to i8*
  store i8 %v1_10002f34, i8* %v4_10002f34, align 1
  %v0_10002f38 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002f38 = trunc i32 %v0_10002f38 to i16
  %v2_10002f38 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f38 = add i32 %v2_10002f38, 42
  %v4_10002f38 = inttoptr i32 %v3_10002f38 to i16*
  store i16 %v1_10002f38, i16* %v4_10002f38, align 2
  %v0_10002f3c = call i32 @function_10005cd4()
  store i32 %v0_10002f3c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_10002f48 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002f48 = add i32 %v1_10002f48, 52
  %v3_10002f48 = inttoptr i32 %v2_10002f48 to i32*
  store i32 0, i32* %v3_10002f48, align 4
  %v0_10002f4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f4c = trunc i32 %v0_10002f4c to i8
  %v2_10002f4c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f4c = add i32 %v2_10002f4c, 56
  %v4_10002f4c = inttoptr i32 %v3_10002f4c to i8*
  store i8 %v1_10002f4c, i8* %v4_10002f4c, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_10002f58 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002f58 = add i32 %v1_10002f58, 48
  %v3_10002f58 = inttoptr i32 %v2_10002f58 to i32*
  store i32 %v0_10002f3c, i32* %v3_10002f58, align 4
  %v0_10002f5c = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f5c = trunc i32 %v0_10002f5c to i8
  %v2_10002f5c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f5c = add i32 %v2_10002f5c, 59
  %v4_10002f5c = inttoptr i32 %v3_10002f5c to i8*
  store i8 %v1_10002f5c, i8* %v4_10002f5c, align 1
  %v0_10002f60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f60 = trunc i32 %v0_10002f60 to i8
  %v2_10002f60 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f60 = add i32 %v2_10002f60, 57
  %v4_10002f60 = inttoptr i32 %v3_10002f60 to i8*
  store i8 %v1_10002f60, i8* %v4_10002f60, align 1
  %v0_10002f64 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f64 = trunc i32 %v0_10002f64 to i8
  %v2_10002f64 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f64 = add i32 %v2_10002f64, 58
  %v4_10002f64 = inttoptr i32 %v3_10002f64 to i8*
  store i8 %v1_10002f64, i8* %v4_10002f64, align 1
  %v3_10002f68 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002f68, i32* %r9.global-to-local, align 4
  %v1_10002f6c = add i32 %v3_10002f68, 1
  store i32 %v1_10002f6c, i32* %r31.global-to-local, align 4
  %v1_10002f70 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002f70 = icmp slt i32 %v1_10002f6c, %v1_10002f70
  store i32 %v1_10002f6c, i32* %stack_var_-120, align 4
  br i1 %v2_10002f70, label %dec_label_pc_10002e44, label %dec_label_pc_10002f7c.loopexit

dec_label_pc_10002f7c.loopexit:                   ; preds = %dec_label_pc_10002ea8
  %v0_10002f80.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_10002f84.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002f84.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10002f7c

dec_label_pc_10002f7c:                            ; preds = %dec_label_pc_10002f7c.loopexit, %dec_label_pc_10002e00
  %v1_10002f84.pre = phi i1 [ %v1_10002f84.pre.pre, %dec_label_pc_10002f7c.loopexit ], [ %v1_10002e00, %dec_label_pc_10002e00 ]
  %v0_10002f84.pre = phi i1 [ %v0_10002f84.pre.pre, %dec_label_pc_10002f7c.loopexit ], [ %v3_10002e00, %dec_label_pc_10002e00 ]
  %v0_10002f80 = phi i32 [ %v0_10002f80.pre, %dec_label_pc_10002f7c.loopexit ], [ %v1_10002e18, %dec_label_pc_10002e00 ]
  %v0_10002f7c = load i32, i32* %r15.global-to-local, align 4
  %v3_10002f7c = icmp eq i32 %v0_10002f7c, -1
  store i1 %v3_10002f7c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002f80 = icmp eq i32 %v0_10002f80, 0
  store i1 %v3_10002f80, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10002f84.outer

dec_label_pc_10002f84.outer:                      ; preds = %dec_label_pc_10003060, %dec_label_pc_10002f7c
  %v1_10002f84.ph = phi i1 [ %v1_10002f84.pre, %dec_label_pc_10002f7c ], [ %v1_10003060, %dec_label_pc_10003060 ]
  %v0_10002f84.ph = phi i1 [ %v0_10002f84.pre, %dec_label_pc_10002f7c ], [ %v0_10003060, %dec_label_pc_10003060 ]
  %v2_10002f84 = or i1 %v1_10002f84.ph, %v0_10002f84.ph
  br label %dec_label_pc_10002f84

dec_label_pc_10002f84:                            ; preds = %dec_label_pc_10002f84.outer, %dec_label_pc_10002f84
  br i1 %v2_10002f84, label %dec_label_pc_10002f84, label %dec_label_pc_10002f88

dec_label_pc_10002f88:                            ; preds = %dec_label_pc_10002f84, %dec_label_pc_10003060
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002f98

dec_label_pc_10002f98:                            ; preds = %dec_label_pc_10002ff0, %dec_label_pc_10002f88
  %v0_10002f98 = phi i32 [ %v1_10003050, %dec_label_pc_10002ff0 ], [ 0, %dec_label_pc_10002f88 ]
  %v1_10002f98 = mul i32 %v0_10002f98, 24
  store i32 %v1_10002f98, i32* %r0.global-to-local, align 4
  %v1_10002f9c = mul i32 %v0_10002f98, 4
  store i32 %v1_10002f9c, i32* %r11.global-to-local, align 4
  %v1_10002fa0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002fa0 = add i32 %v1_10002fa0, %v1_10002f9c
  %v3_10002fa0 = inttoptr i32 %v2_10002fa0 to i32*
  %v4_10002fa0 = load i32, i32* %v3_10002fa0, align 4
  store i32 %v4_10002fa0, i32* %r28.global-to-local, align 4
  %v1_10002fa4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002fa4 = add i32 %v1_10002fa4, %v1_10002f98
  %v1_10002fa8 = add i32 %v2_10002fa4, 20
  %v2_10002fa8 = inttoptr i32 %v1_10002fa8 to i8*
  %v3_10002fa8 = load i8, i8* %v2_10002fa8, align 1
  %v4_10002fa8 = zext i8 %v3_10002fa8 to i32
  store i32 %v4_10002fa8, i32* %r9.global-to-local, align 4
  %v1_10002fac = add i32 %v4_10002fa0, 20
  store i32 %v1_10002fac, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10002fa8, 32
  br i1 %tmp41, label %dec_label_pc_10003068, label %dec_label_pc_10002fb8

dec_label_pc_10002fb8:                            ; preds = %dec_label_pc_10002f98
  %v0_10002fb8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002fb8, label %dec_label_pc_10003090, label %dec_label_pc_10002fbc

dec_label_pc_10002fbc:                            ; preds = %dec_label_pc_10003068, %dec_label_pc_10002fb8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10002fc4 = load i32, i32* %r21.global-to-local, align 4
  %v4_10002fc4 = icmp eq i32 %v0_10002fc4, 65535
  br i1 %v4_10002fc4, label %dec_label_pc_100030a8, label %dec_label_pc_10002fcc

dec_label_pc_10002fcc:                            ; preds = %dec_label_pc_10003090, %dec_label_pc_10002fbc
  %v1_10002fcc = phi i32 [ %v1_100030a0, %dec_label_pc_10003090 ], [ 65535, %dec_label_pc_10002fbc ]
  %v0_10002fcc = load i32, i32* %r22.global-to-local, align 4
  %v4_10002fcc = icmp eq i32 %v0_10002fcc, %v1_10002fcc
  br i1 %v4_10002fcc, label %dec_label_pc_100030b8, label %dec_label_pc_10002fd4

dec_label_pc_10002fd4:                            ; preds = %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge, %dec_label_pc_10002fcc
  %v1_10002fd4 = phi i32 [ %v1_10002fd4.pre, %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge ], [ %v1_10002fcc, %dec_label_pc_10002fcc ]
  %v0_10002fd4 = load i32, i32* %r23.global-to-local, align 4
  %v4_10002fd4 = icmp eq i32 %v0_10002fd4, %v1_10002fd4
  br i1 %v4_10002fd4, label %dec_label_pc_100030c8, label %dec_label_pc_10002fdc

dec_label_pc_10002fdc:                            ; preds = %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge, %dec_label_pc_10002fd4
  %v1_10002fdc = phi i32 [ %v1_10002fdc.pre, %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge ], [ %v1_10002fd4, %dec_label_pc_10002fd4 ]
  %v0_10002fdc = load i32, i32* %r19.global-to-local, align 4
  %v4_10002fdc = icmp eq i32 %v0_10002fdc, %v1_10002fdc
  br i1 %v4_10002fdc, label %dec_label_pc_100030d8, label %dec_label_pc_10002fe4

dec_label_pc_10002fe4:                            ; preds = %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge, %dec_label_pc_10002fdc
  %v1_10002fe4 = phi i32 [ %v1_10002fe4.pre, %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge ], [ %v1_10002fdc, %dec_label_pc_10002fdc ]
  %v0_10002fe4 = load i32, i32* %r20.global-to-local, align 4
  %v4_10002fe4 = icmp eq i32 %v0_10002fe4, %v1_10002fe4
  br i1 %v4_10002fe4, label %dec_label_pc_100030e8, label %dec_label_pc_10002fec

dec_label_pc_10002fec:                            ; preds = %dec_label_pc_100030d8, %dec_label_pc_10002fe4
  %v0_10002fec = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002fec, label %dec_label_pc_10002ff0, label %dec_label_pc_100030f4

dec_label_pc_10002ff0:                            ; preds = %dec_label_pc_10002fec, %dec_label_pc_100030e8, %dec_label_pc_100030f4
  %v0_10002ff0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002ff0 = trunc i32 %v0_10002ff0 to i16
  %v2_10002ff0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002ff0 = add i32 %v2_10002ff0, 10
  %v4_10002ff0 = inttoptr i32 %v3_10002ff0 to i16*
  store i16 %v1_10002ff0, i16* %v4_10002ff0, align 2
  %v0_10002ff8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002ff8, i32* @r3, align 4
  %v2_10002ffc = call i32 @function_100043cc(i32 %v0_10002ff8, i32 20)
  %v3_10002ffc = trunc i32 %v2_10002ffc to i16
  %v0_10003000 = load i32, i32* @r31, align 4
  store i32 %v0_10003000, i32* @r4, align 4
  %v4_10003004 = add i32 %v0_10002ff8, 10
  %v5_10003004 = inttoptr i32 %v4_10003004 to i16*
  store i16 %v3_10002ffc, i16* %v5_10003004, align 2
  %v0_1000300c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000300c = trunc i32 %v0_1000300c to i16
  %v2_1000300c = load i32, i32* @r31, align 4
  %v3_1000300c = add i32 %v2_1000300c, 16
  %v4_1000300c = inttoptr i32 %v3_1000300c to i16*
  store i16 %v1_1000300c, i16* %v4_1000300c, align 2
  %v0_10003014 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003014, i32* %r3.global-to-local, align 4
  %v4_10003018 = call i32 @function_10004430(i32 %v0_10003014, i32 %v0_10003000, i32 40, i32 40)
  %v5_10003018 = trunc i32 %v4_10003018 to i16
  store i32 %v4_10003018, i32* %r3.global-to-local, align 4
  %v3_1000301c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000301c, i32* %r7.global-to-local, align 4
  %v0_10003020 = load i32, i32* @r31, align 4
  %v1_10003020 = add i32 %v0_10003020, 2
  %v2_10003020 = inttoptr i32 %v1_10003020 to i16*
  %v3_10003020 = load i16, i16* %v2_10003020, align 2
  %v4_10003020 = zext i16 %v3_10003020 to i32
  store i32 %v4_10003020, i32* %r0.global-to-local, align 4
  %v0_10003024 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003028 = mul i32 %v3_1000301c, 24
  store i32 %v1_10003028, i32* %r7.global-to-local, align 4
  %v4_1000302c = add i32 %v0_10003020, 16
  %v5_1000302c = inttoptr i32 %v4_1000302c to i16*
  store i16 %v5_10003018, i16* %v5_1000302c, align 2
  %v0_10003034 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003034, i32* %r3.global-to-local, align 4
  %v0_10003038 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003038 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003038 = add i32 %v1_10003038, %v0_10003038
  store i32 %v2_10003038, i32* %r7.global-to-local, align 4
  %v0_10003040 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003040 = trunc i32 %v0_10003040 to i16
  %v3_10003040 = add i32 %v2_10003038, 2
  %v4_10003040 = inttoptr i32 %v3_10003040 to i16*
  store i16 %v1_10003040, i16* %v4_10003040, align 2
  store i32 268447820, i32* @lr, align 4
  %v6_10003048 = call i32 @function_10009924(i32 %v0_10003034, i32 %v0_10003024, i32 60, i32 16384, i32 %v2_10003038, i32 16)
  store i32 %v6_10003048, i32* %r3.global-to-local, align 4
  %v3_1000304c = load i32, i32* %stack_var_-120, align 4
  %v1_10003050 = add i32 %v3_1000304c, 1
  store i32 %v1_10003050, i32* %r9.global-to-local, align 4
  %v1_10003054 = load i32, i32* %r24.global-to-local, align 4
  %v2_10003054 = icmp slt i32 %v1_10003050, %v1_10003054
  store i32 %v1_10003050, i32* %stack_var_-120, align 4
  br i1 %v2_10003054, label %dec_label_pc_10002f98, label %dec_label_pc_10003060

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10002ff0
  %v0_10003060 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003060 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003060 = or i1 %v0_10003060, %v1_10003060
  br i1 %v2_10003060, label %dec_label_pc_10002f84.outer, label %dec_label_pc_10002f88

dec_label_pc_10003068:                            ; preds = %dec_label_pc_10002f98
  %v1_10003068 = add i32 %v2_10002fa4, 16
  %v2_10003068 = inttoptr i32 %v1_10003068 to i32*
  %v3_10003068 = load i32, i32* %v2_10003068, align 4
  store i32 %v3_10003068, i32* %r29.global-to-local, align 4
  %v0_1000306c = call i32 @function_10005cd4()
  store i32 %v0_1000306c, i32* %r3.global-to-local, align 4
  %v3_10003070 = load i32, i32* %stack_var_-120, align 4
  %v1_10003074 = mul i32 %v3_10003070, 24
  %v1_10003078 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003078 = add i32 %v1_10003078, %v1_10003074
  store i32 %v2_10003078, i32* %r9.global-to-local, align 4
  %v1_1000307c = add i32 %v2_10003078, 20
  %v2_1000307c = inttoptr i32 %v1_1000307c to i8*
  %v3_1000307c = load i8, i8* %v2_1000307c, align 1
  %v4_1000307c = zext i8 %v3_1000307c to i32
  store i32 %v4_1000307c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_1000307c, 64
  %v2_10003080 = zext i8 %tmp to i32
  %v3_10003080 = lshr i32 %v0_1000306c, %v2_10003080
  store i32 %v3_10003080, i32* %r3.global-to-local, align 4
  %v0_10003084 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003084 = add i32 %v3_10003080, %v0_10003084
  store i32 %v2_10003084, i32* %r29.global-to-local, align 4
  %v1_10003088 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003088 = add i32 %v1_10003088, 16
  %v3_10003088 = inttoptr i32 %v2_10003088 to i32*
  store i32 %v2_10003084, i32* %v3_10003088, align 4
  %v0_1000308c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000308c, label %dec_label_pc_10003090, label %dec_label_pc_10002fbc

dec_label_pc_10003090:                            ; preds = %dec_label_pc_10003068, %dec_label_pc_10002fb8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003094 = call i32 @function_10005cd4()
  store i32 %v0_10003094, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_1000309c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000309c = add i32 %v1_1000309c, 12
  %v3_1000309c = inttoptr i32 %v2_1000309c to i32*
  store i32 %v0_10003094, i32* %v3_1000309c, align 4
  %v0_100030a0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100030a0 = load i32, i32* %r29.global-to-local, align 4
  %v4_100030a0 = icmp eq i32 %v0_100030a0, %v1_100030a0
  br i1 %v4_100030a0, label %dec_label_pc_100030a8, label %dec_label_pc_10002fcc

dec_label_pc_100030a8:                            ; preds = %dec_label_pc_10003090, %dec_label_pc_10002fbc
  %v0_100030a8 = call i32 @function_10005cd4()
  %v1_100030a8 = trunc i32 %v0_100030a8 to i16
  store i32 %v0_100030a8, i32* %r3.global-to-local, align 4
  %v0_100030ac = load i32, i32* %r22.global-to-local, align 4
  %v1_100030ac = load i32, i32* %r29.global-to-local, align 4
  %v4_100030ac = icmp eq i32 %v0_100030ac, %v1_100030ac
  %v3_100030b0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100030b0 = add i32 %v3_100030b0, 4
  %v5_100030b0 = inttoptr i32 %v4_100030b0 to i16*
  store i16 %v1_100030a8, i16* %v5_100030b0, align 2
  br i1 %v4_100030ac, label %dec_label_pc_100030b8, label %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge

dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge: ; preds = %dec_label_pc_100030a8
  %v1_10002fd4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fd4

dec_label_pc_100030b8:                            ; preds = %dec_label_pc_100030a8, %dec_label_pc_10002fcc
  %v0_100030b8 = call i32 @function_10005cd4()
  %v1_100030b8 = trunc i32 %v0_100030b8 to i16
  store i32 %v0_100030b8, i32* %r3.global-to-local, align 4
  %v0_100030bc = load i32, i32* %r23.global-to-local, align 4
  %v1_100030bc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030bc = icmp eq i32 %v0_100030bc, %v1_100030bc
  %v3_100030c0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100030c0 = add i32 %v3_100030c0, 20
  %v5_100030c0 = inttoptr i32 %v4_100030c0 to i16*
  store i16 %v1_100030b8, i16* %v5_100030c0, align 2
  br i1 %v4_100030bc, label %dec_label_pc_100030c8, label %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge

dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge: ; preds = %dec_label_pc_100030b8
  %v1_10002fdc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fdc

dec_label_pc_100030c8:                            ; preds = %dec_label_pc_100030b8, %dec_label_pc_10002fd4
  %v0_100030c8 = call i32 @function_10005cd4()
  %v1_100030c8 = trunc i32 %v0_100030c8 to i16
  store i32 %v0_100030c8, i32* %r3.global-to-local, align 4
  %v0_100030cc = load i32, i32* %r19.global-to-local, align 4
  %v1_100030cc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030cc = icmp eq i32 %v0_100030cc, %v1_100030cc
  %v3_100030d0 = load i32, i32* @r31, align 4
  %v4_100030d0 = add i32 %v3_100030d0, 2
  %v5_100030d0 = inttoptr i32 %v4_100030d0 to i16*
  store i16 %v1_100030c8, i16* %v5_100030d0, align 2
  br i1 %v4_100030cc, label %dec_label_pc_100030d8, label %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge

dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge: ; preds = %dec_label_pc_100030c8
  %v1_10002fe4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fe4

dec_label_pc_100030d8:                            ; preds = %dec_label_pc_100030c8, %dec_label_pc_10002fdc
  %v0_100030d8 = call i32 @function_10005cd4()
  store i32 %v0_100030d8, i32* %r3.global-to-local, align 4
  %v0_100030dc = load i32, i32* %r20.global-to-local, align 4
  %v1_100030dc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030dc = icmp eq i32 %v0_100030dc, %v1_100030dc
  %v1_100030e0 = load i32, i32* @r31, align 4
  %v2_100030e0 = add i32 %v1_100030e0, 4
  %v3_100030e0 = inttoptr i32 %v2_100030e0 to i32*
  store i32 %v0_100030d8, i32* %v3_100030e0, align 4
  br i1 %v4_100030dc, label %dec_label_pc_100030e8, label %dec_label_pc_10002fec

dec_label_pc_100030e8:                            ; preds = %dec_label_pc_100030d8, %dec_label_pc_10002fe4
  %v0_100030e8 = call i32 @function_10005cd4()
  store i32 %v0_100030e8, i32* %r3.global-to-local, align 4
  %v1_100030ec = load i32, i32* @r31, align 4
  %v2_100030ec = add i32 %v1_100030ec, 8
  %v3_100030ec = inttoptr i32 %v2_100030ec to i32*
  store i32 %v0_100030e8, i32* %v3_100030ec, align 4
  %v0_100030f0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100030f0, label %dec_label_pc_10002ff0, label %dec_label_pc_100030f4

dec_label_pc_100030f4:                            ; preds = %dec_label_pc_10002fec, %dec_label_pc_100030e8
  %v0_100030f4 = call i32 @function_10005cd4()
  %v1_100030f4 = trunc i32 %v0_100030f4 to i16
  store i32 %v0_100030f4, i32* %r3.global-to-local, align 4
  %v3_100030f8 = load i32, i32* @r31, align 4
  %v4_100030f8 = add i32 %v3_100030f8, 18
  %v5_100030f8 = inttoptr i32 %v4_100030f8 to i16*
  store i16 %v1_100030f4, i16* %v5_100030f8, align 2
  br label %dec_label_pc_10002ff0

dec_label_pc_10003100:                            ; preds = %dec_label_pc_10002ddc
  %v0_10003100 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003100, i32* %r3.global-to-local, align 4
  store i32 268448008, i32* @lr, align 4
  %v0_10003104 = call i32 @function_10008c98()
  store i32 %v0_10003104, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003108

dec_label_pc_10003108:                            ; preds = %dec_label_pc_10002bc4, %dec_label_pc_10003100
  store i32 %v0_10002bdc, i32* %r0.global-to-local, align 4
  %v1_1000311c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bcc)
  store i32 %v0_10002c1c, i32* %r28.global-to-local, align 4
  store i32 %v0_10002c24, i32* %r29.global-to-local, align 4
  store i32 %v0_10002c30, i32* %r31.global-to-local, align 4
  %v0_10003164 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003164

; uselistorder directives
  uselistorder i32 %v0_100030f4, { 1, 0 }
  uselistorder i32 %v0_100030c8, { 1, 0 }
  uselistorder i32 %v0_100030b8, { 1, 0 }
  uselistorder i32 %v0_100030a8, { 1, 0 }
  uselistorder i32 %v1_100030a0, { 1, 0 }
  uselistorder i1 %v1_10003060, { 1, 0 }
  uselistorder i1 %v0_10003060, { 1, 0 }
  uselistorder i32 %v1_10003050, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003018, { 1, 0 }
  uselistorder i32 %v1_10002f9c, { 1, 0 }
  uselistorder i32 %v1_10002e5c, { 1, 0 }
  uselistorder i32 %v1_10002e54, { 1, 0 }
  uselistorder i32 %v1_10002e3c, { 1, 0 }
  uselistorder i32 %v1_10002e38, { 1, 0 }
  uselistorder i32 %v1_10002e34, { 1, 0 }
  uselistorder i32 %v1_10002e30, { 1, 0 }
  uselistorder i32 %v1_10002e2c, { 1, 0 }
  uselistorder i32 %v1_10002e28, { 1, 0 }
  uselistorder i32 %v1_10002e18, { 1, 0 }
  uselistorder i8 %v5_10002c94, { 1, 0 }
  uselistorder i8 %v5_10002c5c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 12, 8, 13, 9, 11, 10, 1, 2, 4, 3, 5, 6, 14, 15 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003108, { 1, 0 }
  uselistorder label %dec_label_pc_100030f4, { 1, 0 }
  uselistorder label %dec_label_pc_10002ff0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002f88, { 1, 0 }
  uselistorder label %dec_label_pc_10002f84, { 1, 0 }
  uselistorder label %dec_label_pc_10002ea8, { 1, 0 }
}

define i32 @function_10003168(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003168:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10003170 = call i32 @__asm_mfcr()
  store i32 %v0_10003170, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000319c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100031a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448200, i32* @lr, align 4
  %v2_100031c4 = call i32 @function_10009cfc(i32 4, i32 4)
  store i32 %v2_100031c4, i32* %r27.global-to-local, align 4
  %v0_100031d0 = load i32, i32* @r30, align 4
  store i32 %v0_100031d0, i32* %r3.global-to-local, align 4
  store i32 268448216, i32* @lr, align 4
  %v2_100031d4 = call i32 @function_10009cfc(i32 %v0_100031d0, i32 4)
  %v0_100031dc = load i32, i32* @r28, align 4
  store i32 %v2_100031d4, i32* %r26.global-to-local, align 4
  %v0_100031ec = load i32, i32* @r29, align 4
  store i32 %v0_100031ec, i32* %r3.global-to-local, align 4
  store i32 268448244, i32* @lr, align 4
  %v4_100031f0 = inttoptr i32 %v0_100031dc to i32*
  %v5_100031f0 = call i32 @function_100006a8(i32 %v0_100031ec, i32* %v4_100031f0, i32 7, i32 65535)
  %v0_100031fc = load i32, i32* @r28, align 4
  %v1_10003204 = urem i32 %v5_100031f0, 65536
  store i32 %v1_10003204, i32* %r21.global-to-local, align 4
  %v0_10003208 = load i32, i32* @r29, align 4
  store i32 %v0_10003208, i32* %r3.global-to-local, align 4
  store i32 268448272, i32* @lr, align 4
  %v4_1000320c = inttoptr i32 %v0_100031fc to i32*
  %v5_1000320c = call i32 @function_100006a8(i32 %v0_10003208, i32* %v4_1000320c, i32 6, i32 65535)
  %v0_10003210 = load i32, i32* @r28, align 4
  %v1_10003214 = urem i32 %v5_1000320c, 65536
  store i32 %v1_10003214, i32* %r22.global-to-local, align 4
  %v0_10003220 = load i32, i32* @r29, align 4
  store i32 %v0_10003220, i32* %r3.global-to-local, align 4
  store i32 268448296, i32* @lr, align 4
  %v4_10003224 = inttoptr i32 %v0_10003210 to i32*
  %v5_10003224 = call i32 @function_100006a8(i32 %v0_10003220, i32* %v4_10003224, i32 0, i32 512)
  %v0_10003228 = load i32, i32* @r28, align 4
  %v1_1000322c = urem i32 %v5_10003224, 65536
  store i32 %v1_1000322c, i32* @r31, align 4
  %v0_10003234 = load i32, i32* @r29, align 4
  store i32 %v0_10003234, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10003240.23 to i32), i32* @lr, align 4
  %v4_1000323c = inttoptr i32 %v0_10003228 to i32*
  %v5_1000323c = call i32 @function_100006a8(i32 %v0_10003234, i32* %v4_1000323c, i32 1, i32 1)
  store i32 %v5_1000323c, i32* %r3.global-to-local, align 4
  %v0_1000324c = load i32, i32* %r22.global-to-local, align 4
  %v4_1000324c = icmp eq i32 %v0_1000324c, 65535
  %v1_10003254 = urem i32 %v5_1000323c, 256
  store i32 %v1_10003254, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_1000324c, label %dec_label_pc_10003450, label %dec_label_pc_10003268

dec_label_pc_10003268:                            ; preds = %dec_label_pc_10003168, %dec_label_pc_10003450
  %v0_10003268 = load i32, i32* @r30, align 4
  %v1_10003268 = icmp slt i32 %v0_10003268, 0
  %v3_10003268 = icmp eq i32 %v0_10003268, 0
  store i1 %v1_10003268, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003268, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10003268, 1
  br i1 %tmp38, label %dec_label_pc_10003328, label %dec_label_pc_10003270

dec_label_pc_10003270:                            ; preds = %dec_label_pc_10003268
  %v0_10003274 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003274, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10003280 = load i32, i32* %r21.global-to-local, align 4
  %v4_10003280 = icmp eq i32 %v0_10003280, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100033d0 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10003280, label %dec_label_pc_100033a0, label %dec_label_pc_10003294

dec_label_pc_10003294:                            ; preds = %dec_label_pc_10003270, %dec_label_pc_10003308
  %v0_100032a0 = phi i32 [ %v0_1000331c, %dec_label_pc_10003308 ], [ 0, %dec_label_pc_10003270 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_100032a0 = add i32 %v0_100032a0, 1
  store i32 %v1_100032a0, i32* %r24.global-to-local, align 4
  store i32 268448424, i32* @lr, align 4
  %v2_100032a4 = call i32 @function_10009cfc(i32 65535, i32 1)
  %v0_100032a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100032a8 = trunc i32 %v0_100032a8 to i16
  %v2_100032a8 = load i32, i32* @r28, align 4
  %v3_100032a8 = add i32 %v2_100032a8, 2
  %v4_100032a8 = inttoptr i32 %v3_100032a8 to i16*
  store i16 %v1_100032a8, i16* %v4_100032a8, align 2
  %v1_100032ac = load i32, i32* %r25.global-to-local, align 4
  %v2_100032ac = load i32, i32* %r27.global-to-local, align 4
  %v3_100032ac = add i32 %v2_100032ac, %v1_100032ac
  %v4_100032ac = inttoptr i32 %v3_100032ac to i32*
  store i32 %v2_100032a4, i32* %v4_100032ac, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448448, i32* @lr, align 4
  %v3_100032bc = call i32 @function_100099a0(i32 2, i32 2, i32 17)
  store i32 %v3_100032bc, i32* %r3.global-to-local, align 4
  %v3_100032c4 = icmp eq i32 %v3_100032bc, -1
  %v1_100032cc = load i32, i32* %r25.global-to-local, align 4
  %v2_100032cc = load i32, i32* %r26.global-to-local, align 4
  %v3_100032cc = add i32 %v2_100032cc, %v1_100032cc
  %v4_100032cc = inttoptr i32 %v3_100032cc to i32*
  store i32 %v3_100032bc, i32* %v4_100032cc, align 4
  br i1 %v3_100032c4, label %dec_label_pc_10003404, label %dec_label_pc_100032d4

dec_label_pc_100032d4:                            ; preds = %dec_label_pc_10003294
  %v0_100032d4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100032d4, i32* %stack_var_-72, align 4
  store i32 268448484, i32* @lr, align 4
  %v0_100032e0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100032e0 = call i32 @function_1000976c(i32 %v0_100032e0, i32 %v2_100033d0, i32 16)
  store i32 %v3_100032e0, i32* %r3.global-to-local, align 4
  %v0_100032e4 = load i32, i32* @r28, align 4
  %v1_100032e4 = add i32 %v0_100032e4, 20
  %v2_100032e4 = inttoptr i32 %v1_100032e4 to i8*
  %v3_100032e4 = load i8, i8* %v2_100032e4, align 1
  %v2_100032e8 = icmp ugt i8 %v3_100032e4, 31
  br i1 %v2_100032e8, label %dec_label_pc_10003308, label %dec_label_pc_100032f0

dec_label_pc_100032f0:                            ; preds = %dec_label_pc_100032d4
  %v1_100032f0 = add i32 %v0_100032e4, 16
  %v2_100032f0 = inttoptr i32 %v1_100032f0 to i32*
  %v3_100032f0 = load i32, i32* %v2_100032f0, align 4
  store i32 %v3_100032f0, i32* %r29.global-to-local, align 4
  %v0_100032f4 = call i32 @function_10005cd4()
  store i32 %v0_100032f4, i32* %r3.global-to-local, align 4
  %v0_100032f8 = load i32, i32* @r28, align 4
  %v1_100032f8 = add i32 %v0_100032f8, 20
  %v2_100032f8 = inttoptr i32 %v1_100032f8 to i8*
  %v3_100032f8 = load i8, i8* %v2_100032f8, align 1
  %tmp = urem i8 %v3_100032f8, 64
  %v2_100032fc = zext i8 %tmp to i32
  %v3_100032fc = lshr i32 %v0_100032f4, %v2_100032fc
  %v0_10003300 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003300 = add i32 %v3_100032fc, %v0_10003300
  store i32 %v2_10003300, i32* %r3.global-to-local, align 4
  %v2_10003304 = add i32 %v0_100032f8, 4
  %v3_10003304 = inttoptr i32 %v2_10003304 to i32*
  store i32 %v2_10003300, i32* %v3_10003304, align 4
  br label %dec_label_pc_10003308

dec_label_pc_10003308:                            ; preds = %dec_label_pc_100032d4, %dec_label_pc_100032f0
  %v0_10003308 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003308 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003308 = add i32 %v1_10003308, %v0_10003308
  %v3_10003308 = inttoptr i32 %v2_10003308 to i32*
  %v4_10003308 = load i32, i32* %v3_10003308, align 4
  store i32 %v4_10003308, i32* @r3, align 4
  %v1_10003314 = add i32 %v0_10003308, 4
  store i32 %v1_10003314, i32* %r25.global-to-local, align 4
  store i32 268448540, i32* @lr, align 4
  %v0_10003318 = call i32 @function_100097a0()
  store i32 %v0_10003318, i32* %r3.global-to-local, align 4
  %v0_1000331c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000331c = load i32, i32* @r30, align 4
  %v4_1000331c = icmp eq i32 %v0_1000331c, %v1_1000331c
  %v0_10003320 = load i32, i32* @r28, align 4
  %v1_10003320 = add i32 %v0_10003320, 24
  store i32 %v1_10003320, i32* @r28, align 4
  br i1 %v4_1000331c, label %dec_label_pc_10003328, label %dec_label_pc_10003294

dec_label_pc_10003328:                            ; preds = %dec_label_pc_10003308, %dec_label_pc_10003380, %dec_label_pc_10003268
  %v0_10003328 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003328 = icmp eq i32 %v0_10003328, 0
  store i1 %v3_10003328, i1* %cr3_eq.global-to-local, align 1
  %v0_1000332c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000332c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000332c.outer

dec_label_pc_1000332c.outer:                      ; preds = %dec_label_pc_10003360, %dec_label_pc_10003498, %dec_label_pc_10003328
  %v1_1000332c.ph39 = phi i1 [ %v1_1000332c.pre, %dec_label_pc_10003328 ], [ %v1_10003498, %dec_label_pc_10003498 ], [ %v1_10003360, %dec_label_pc_10003360 ]
  %v0_1000332c.ph40 = phi i1 [ %v0_1000332c.pre, %dec_label_pc_10003328 ], [ %v0_10003498, %dec_label_pc_10003498 ], [ %v0_10003360, %dec_label_pc_10003360 ]
  %v2_1000332c = or i1 %v1_1000332c.ph39, %v0_1000332c.ph40
  br label %dec_label_pc_1000332c

dec_label_pc_1000332c:                            ; preds = %dec_label_pc_1000332c.outer, %dec_label_pc_1000332c
  br i1 %v2_1000332c, label %dec_label_pc_1000332c, label %dec_label_pc_10003330

dec_label_pc_10003330:                            ; preds = %dec_label_pc_10003498, %dec_label_pc_10003360, %dec_label_pc_1000332c
  %v0_10003330 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003330, label %dec_label_pc_10003334, label %dec_label_pc_1000345c

dec_label_pc_10003334:                            ; preds = %dec_label_pc_10003330
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000333c

dec_label_pc_1000333c:                            ; preds = %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge, %dec_label_pc_10003334
  %v0_10003340 = phi i32 [ %v0_10003358, %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge ], [ 0, %dec_label_pc_10003334 ]
  %v0_10003350 = phi i32 [ %v0_1000333c.pre, %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge ], [ 0, %dec_label_pc_10003334 ]
  %v1_1000333c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000333c = add i32 %v1_1000333c, %v0_10003350
  %v3_1000333c = inttoptr i32 %v2_1000333c to i32*
  %v4_1000333c = load i32, i32* %v3_1000333c, align 4
  store i32 %v4_1000333c, i32* %r3.global-to-local, align 4
  %v1_10003340 = add i32 %v0_10003340, 1
  store i32 %v1_10003340, i32* %r28.global-to-local, align 4
  %v1_10003344 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003344 = add i32 %v1_10003344, %v0_10003350
  %v3_10003344 = inttoptr i32 %v2_10003344 to i32*
  %v4_10003344 = load i32, i32* %v3_10003344, align 4
  %v0_10003348 = load i32, i32* @r31, align 4
  %v1_10003350 = add i32 %v0_10003350, 4
  store i32 %v1_10003350, i32* %r29.global-to-local, align 4
  store i32 268448600, i32* @lr, align 4
  %v4_10003354 = call i32 @function_100098ec(i32 %v4_1000333c, i32 %v4_10003344, i32 %v0_10003348, i32 16384)
  store i32 %v4_10003354, i32* %r3.global-to-local, align 4
  %v0_10003358 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003358 = load i32, i32* @r30, align 4
  %v4_10003358 = icmp eq i32 %v0_10003358, %v1_10003358
  br i1 %v4_10003358, label %dec_label_pc_10003360, label %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge

dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge: ; preds = %dec_label_pc_1000333c
  %v0_1000333c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000333c

dec_label_pc_10003360:                            ; preds = %dec_label_pc_1000333c
  %v0_10003360 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003360 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003360 = or i1 %v0_10003360, %v1_10003360
  br i1 %v2_10003360, label %dec_label_pc_1000332c.outer, label %dec_label_pc_10003330

dec_label_pc_10003380:                            ; preds = %dec_label_pc_100033e4, %dec_label_pc_10003400
  %v0_10003380 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003380 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003380 = add i32 %v1_10003380, %v0_10003380
  %v3_10003380 = inttoptr i32 %v2_10003380 to i32*
  %v4_10003380 = load i32, i32* %v3_10003380, align 4
  store i32 %v4_10003380, i32* @r3, align 4
  %v1_1000338c = add i32 %v0_10003380, 4
  store i32 %v1_1000338c, i32* %r25.global-to-local, align 4
  store i32 268448660, i32* @lr, align 4
  %v0_10003390 = call i32 @function_100097a0()
  store i32 %v0_10003390, i32* %r3.global-to-local, align 4
  %v0_10003394 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003394 = load i32, i32* @r30, align 4
  %v4_10003394 = icmp eq i32 %v0_10003394, %v1_10003394
  %v0_10003398 = load i32, i32* @r28, align 4
  %v1_10003398 = add i32 %v0_10003398, 24
  store i32 %v1_10003398, i32* @r28, align 4
  br i1 %v4_10003394, label %dec_label_pc_10003328, label %dec_label_pc_100033a0

dec_label_pc_100033a0:                            ; preds = %dec_label_pc_10003270, %dec_label_pc_10003380
  %v0_100033ac = phi i32 [ %v0_10003394, %dec_label_pc_10003380 ], [ 0, %dec_label_pc_10003270 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_100033ac = add i32 %v0_100033ac, 1
  store i32 %v1_100033ac, i32* %r24.global-to-local, align 4
  store i32 268448692, i32* @lr, align 4
  %v2_100033b0 = call i32 @function_10009cfc(i32 65535, i32 1)
  store i32 %v2_100033b0, i32* %r3.global-to-local, align 4
  %v1_100033b4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100033b4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100033b4 = add i32 %v2_100033b4, %v1_100033b4
  %v4_100033b4 = inttoptr i32 %v3_100033b4 to i32*
  store i32 %v2_100033b0, i32* %v4_100033b4, align 4
  %v0_100033b8 = call i32 @function_10005cd4()
  %v1_100033b8 = trunc i32 %v0_100033b8 to i16
  %v3_100033bc = load i32, i32* @r28, align 4
  %v4_100033bc = add i32 %v3_100033bc, 2
  %v5_100033bc = inttoptr i32 %v4_100033bc to i16*
  store i16 %v1_100033b8, i16* %v5_100033bc, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448720, i32* @lr, align 4
  %v3_100033cc = call i32 @function_100099a0(i32 2, i32 2, i32 17)
  store i32 %v3_100033cc, i32* %r3.global-to-local, align 4
  %v3_100033d4 = icmp eq i32 %v3_100033cc, -1
  %v1_100033dc = load i32, i32* %r25.global-to-local, align 4
  %v2_100033dc = load i32, i32* %r26.global-to-local, align 4
  %v3_100033dc = add i32 %v2_100033dc, %v1_100033dc
  %v4_100033dc = inttoptr i32 %v3_100033dc to i32*
  store i32 %v3_100033cc, i32* %v4_100033dc, align 4
  br i1 %v3_100033d4, label %dec_label_pc_10003404, label %dec_label_pc_100033e4

dec_label_pc_100033e4:                            ; preds = %dec_label_pc_100033a0
  %v0_100033e4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100033e4, i32* %stack_var_-72, align 4
  store i32 268448756, i32* @lr, align 4
  %v0_100033f0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100033f0 = call i32 @function_1000976c(i32 %v0_100033f0, i32 %v2_100033d0, i32 16)
  store i32 %v3_100033f0, i32* %r3.global-to-local, align 4
  %v0_100033f4 = load i32, i32* @r28, align 4
  %v1_100033f4 = add i32 %v0_100033f4, 20
  %v2_100033f4 = inttoptr i32 %v1_100033f4 to i8*
  %v3_100033f4 = load i8, i8* %v2_100033f4, align 1
  %v2_100033f8 = icmp ugt i8 %v3_100033f4, 31
  br i1 %v2_100033f8, label %dec_label_pc_10003380, label %dec_label_pc_10003400

dec_label_pc_10003400:                            ; preds = %dec_label_pc_100033e4
  %v1_10003368 = add i32 %v0_100033f4, 16
  %v2_10003368 = inttoptr i32 %v1_10003368 to i32*
  %v3_10003368 = load i32, i32* %v2_10003368, align 4
  store i32 %v3_10003368, i32* %r29.global-to-local, align 4
  %v0_1000336c = call i32 @function_10005cd4()
  store i32 %v0_1000336c, i32* %r3.global-to-local, align 4
  %v0_10003370 = load i32, i32* @r28, align 4
  %v1_10003370 = add i32 %v0_10003370, 20
  %v2_10003370 = inttoptr i32 %v1_10003370 to i8*
  %v3_10003370 = load i8, i8* %v2_10003370, align 1
  %tmp43 = urem i8 %v3_10003370, 64
  %v2_10003374 = zext i8 %tmp43 to i32
  %v3_10003374 = lshr i32 %v0_1000336c, %v2_10003374
  %v0_10003378 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003378 = add i32 %v3_10003374, %v0_10003378
  store i32 %v2_10003378, i32* %r3.global-to-local, align 4
  %v2_1000337c = add i32 %v0_10003370, 4
  %v3_1000337c = inttoptr i32 %v2_1000337c to i32*
  store i32 %v2_10003378, i32* %v3_1000337c, align 4
  br label %dec_label_pc_10003380

dec_label_pc_10003404:                            ; preds = %dec_label_pc_10003294, %dec_label_pc_100033a0
  %v1_10003418 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10003170)
  store i32 %v0_1000319c, i32* %r28.global-to-local, align 4
  store i32 %v0_100031a4, i32* %r29.global-to-local, align 4
  %v0_1000344c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000344c

dec_label_pc_10003450:                            ; preds = %dec_label_pc_10003168
  %v0_10003450 = call i32 @function_10005cd4()
  store i32 %v0_10003450, i32* %r3.global-to-local, align 4
  %v1_10003454 = urem i32 %v0_10003450, 65536
  store i32 %v1_10003454, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10003268

dec_label_pc_1000345c:                            ; preds = %dec_label_pc_10003330
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10003464

dec_label_pc_10003464:                            ; preds = %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge, %dec_label_pc_1000345c
  %v0_1000346c = phi i32 [ %v0_10003490, %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge ], [ 0, %dec_label_pc_1000345c ]
  %v0_10003464 = phi i32 [ %v0_10003464.pre, %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge ], [ 0, %dec_label_pc_1000345c ]
  %v1_10003464 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003464 = add i32 %v1_10003464, %v0_10003464
  %v3_10003464 = inttoptr i32 %v2_10003464 to i32*
  %v4_10003464 = load i32, i32* %v3_10003464, align 4
  store i32 %v4_10003464, i32* @r29, align 4
  %v0_10003468 = load i32, i32* @r31, align 4
  store i32 %v0_10003468, i32* @r4, align 4
  %v1_1000346c = add i32 %v0_1000346c, 1
  store i32 %v1_1000346c, i32* %r25.global-to-local, align 4
  store i32 %v4_10003464, i32* @r3, align 4
  %v0_10003474 = call i32 @function_10005ea8()
  store i32 %v0_10003474, i32* %r3.global-to-local, align 4
  %v0_10003478 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003478 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003478 = add i32 %v1_10003478, %v0_10003478
  %v3_10003478 = inttoptr i32 %v2_10003478 to i32*
  %v4_10003478 = load i32, i32* %v3_10003478, align 4
  store i32 %v4_10003478, i32* %r3.global-to-local, align 4
  %v0_1000347c = load i32, i32* @r29, align 4
  %v0_10003480 = load i32, i32* @r31, align 4
  %v1_10003488 = add i32 %v0_10003478, 4
  store i32 %v1_10003488, i32* %r28.global-to-local, align 4
  store i32 268448912, i32* @lr, align 4
  %v4_1000348c = call i32 @function_100098ec(i32 %v4_10003478, i32 %v0_1000347c, i32 %v0_10003480, i32 16384)
  store i32 %v4_1000348c, i32* %r3.global-to-local, align 4
  %v0_10003490 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003490 = load i32, i32* @r30, align 4
  %v4_10003490 = icmp eq i32 %v0_10003490, %v1_10003490
  br i1 %v4_10003490, label %dec_label_pc_10003498, label %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge

dec_label_pc_10003464.dec_label_pc_10003464_crit_edge: ; preds = %dec_label_pc_10003464
  %v0_10003464.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10003464

dec_label_pc_10003498:                            ; preds = %dec_label_pc_10003464
  %v0_10003498 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003498 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003498 = or i1 %v0_10003498, %v1_10003498
  br i1 %v2_10003498, label %dec_label_pc_1000332c.outer, label %dec_label_pc_10003330

; uselistorder directives
  uselistorder i1 %v1_10003498, { 1, 0 }
  uselistorder i1 %v0_10003498, { 1, 0 }
  uselistorder i32 %v0_10003490, { 1, 0 }
  uselistorder i32 %v0_10003478, { 1, 0 }
  uselistorder i32 %v0_10003380, { 1, 0 }
  uselistorder i1 %v1_10003360, { 1, 0 }
  uselistorder i1 %v0_10003360, { 1, 0 }
  uselistorder i32 %v0_10003358, { 1, 0 }
  uselistorder i32 %v0_10003350, { 2, 0, 1 }
  uselistorder i32 %v0_1000331c, { 1, 0 }
  uselistorder i32 %v0_10003308, { 1, 0 }
  uselistorder i32 %v2_100033d0, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 22, 6, 7, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i8 31, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_10003404, { 1, 0 }
  uselistorder label %dec_label_pc_100033a0, { 1, 0 }
  uselistorder label %dec_label_pc_10003380, { 1, 0 }
  uselistorder label %dec_label_pc_1000332c, { 1, 0 }
  uselistorder label %dec_label_pc_1000332c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003328, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003308, { 1, 0 }
  uselistorder label %dec_label_pc_10003294, { 1, 0 }
  uselistorder label %dec_label_pc_10003268, { 1, 0 }
}

define i32 @function_100034a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100034a0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100034a4 = load i32, i32* @lr, align 4
  store i32 %v0_100034a4, i32* %r0.global-to-local, align 4
  %v0_100034a8 = call i32 @__asm_mfcr()
  store i32 %v0_100034a8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_100034b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100034a8, i32* %r19.global-to-local, align 4
  %v0_100034ec = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100034f4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100034fc = load i32, i32* @r30, align 4
  %v0_10003500 = load i32, i32* @r31, align 4
  store i32 268449044, i32* @lr, align 4
  %v2_10003510 = call i32 @function_10009cfc(i32 4, i32 4)
  store i32 %v2_10003510, i32* %r20.global-to-local, align 4
  %v0_10003518 = load i32, i32* @r28, align 4
  %v0_10003524 = load i32, i32* @r29, align 4
  store i32 %v0_10003524, i32* %r3.global-to-local, align 4
  store i32 268449068, i32* @lr, align 4
  %v4_10003528 = inttoptr i32 %v0_10003518 to i32*
  %v5_10003528 = call i32 @function_100006a8(i32 %v0_10003524, i32* %v4_10003528, i32 2, i32 0)
  %v0_10003538 = load i32, i32* @r28, align 4
  %v1_1000353c = urem i32 %v5_10003528, 256
  store i32 %v1_1000353c, i32* %r15.global-to-local, align 4
  %v0_10003540 = load i32, i32* @r29, align 4
  store i32 %v0_10003540, i32* %r3.global-to-local, align 4
  store i32 268449096, i32* @lr, align 4
  %v4_10003544 = inttoptr i32 %v0_10003538 to i32*
  %v5_10003544 = call i32 @function_100006a8(i32 %v0_10003540, i32* %v4_10003544, i32 3, i32 65535)
  %v0_10003548 = load i32, i32* @r28, align 4
  store i32 %v5_10003544, i32* %r23.global-to-local, align 4
  %v0_10003558 = load i32, i32* @r29, align 4
  store i32 %v0_10003558, i32* %r3.global-to-local, align 4
  store i32 268449120, i32* @lr, align 4
  %v4_1000355c = inttoptr i32 %v0_10003548 to i32*
  %v5_1000355c = call i32 @function_100006a8(i32 %v0_10003558, i32* %v4_1000355c, i32 4, i32 64)
  %v0_10003560 = load i32, i32* @r28, align 4
  %v1_1000356c = urem i32 %v5_1000355c, 256
  store i32 %v1_1000356c, i32* %r16.global-to-local, align 4
  %v0_10003570 = load i32, i32* @r29, align 4
  store i32 %v0_10003570, i32* %r3.global-to-local, align 4
  store i32 268449144, i32* @lr, align 4
  %v4_10003574 = inttoptr i32 %v0_10003560 to i32*
  %v5_10003574 = call i32 @function_100006a8(i32 %v0_10003570, i32* %v4_10003574, i32 5, i32 0)
  %v0_10003584 = load i32, i32* @r28, align 4
  %v1_10003588 = urem i32 %v5_10003574, 256
  store i32 %v1_10003588, i32* @r31, align 4
  %v0_1000358c = load i32, i32* @r29, align 4
  store i32 %v0_1000358c, i32* %r3.global-to-local, align 4
  store i32 268449172, i32* @lr, align 4
  %v4_10003590 = inttoptr i32 %v0_10003584 to i32*
  %v5_10003590 = call i32 @function_100006a8(i32 %v0_1000358c, i32* %v4_10003590, i32 6, i32 65535)
  %v0_10003598 = load i32, i32* @r28, align 4
  store i32 %v5_10003590, i32* %r24.global-to-local, align 4
  %v0_100035a8 = load i32, i32* @r29, align 4
  store i32 %v0_100035a8, i32* %r3.global-to-local, align 4
  store i32 268449200, i32* @lr, align 4
  %v4_100035ac = inttoptr i32 %v0_10003598 to i32*
  %v5_100035ac = call i32 @function_100006a8(i32 %v0_100035a8, i32* %v4_100035ac, i32 7, i32 65535)
  %v0_100035b0 = load i32, i32* @r28, align 4
  store i32 %v5_100035ac, i32* %r25.global-to-local, align 4
  %v0_100035c0 = load i32, i32* @r29, align 4
  store i32 %v0_100035c0, i32* %r3.global-to-local, align 4
  store i32 268449224, i32* @lr, align 4
  %v4_100035c4 = inttoptr i32 %v0_100035b0 to i32*
  %v5_100035c4 = call i32 @function_100006a8(i32 %v0_100035c0, i32* %v4_100035c4, i32 0, i32 512)
  %v0_100035c8 = load i32, i32* @r28, align 4
  store i32 %v5_100035c4, i32* %r26.global-to-local, align 4
  %v0_100035d8 = load i32, i32* @r29, align 4
  store i32 %v0_100035d8, i32* %r3.global-to-local, align 4
  store i32 268449248, i32* @lr, align 4
  %v4_100035dc = inttoptr i32 %v0_100035c8 to i32*
  %v5_100035dc = call i32 @function_100006a8(i32 %v0_100035d8, i32* %v4_100035dc, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100035e4 = load i32, i32* @global_var_1001bd68.14, align 4
  %v0_100035e8 = load i32, i32* @r28, align 4
  %v1_100035f0 = urem i32 %v5_100035dc, 256
  store i32 %v1_100035f0, i32* %r17.global-to-local, align 4
  %v0_100035f4 = load i32, i32* @r29, align 4
  store i32 %v0_100035f4, i32* %r3.global-to-local, align 4
  store i32 268449276, i32* @lr, align 4
  %v4_100035f8 = inttoptr i32 %v0_100035e8 to i32*
  %v5_100035f8 = call i32 @function_100006a8(i32 %v0_100035f4, i32* %v4_100035f8, i32 25, i32 %v3_100035e4)
  store i32 %v5_100035f8, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268449296, i32* @lr, align 4
  %v3_1000360c = call i32 @function_100099a0(i32 2, i32 3, i32 17)
  store i32 %v3_1000360c, i32* %r3.global-to-local, align 4
  %v3_10003610 = icmp eq i32 %v3_1000360c, -1
  store i32 %v3_1000360c, i32* %r21.global-to-local, align 4
  br i1 %v3_10003610, label %dec_label_pc_1000386c, label %dec_label_pc_1000361c

dec_label_pc_1000361c:                            ; preds = %dec_label_pc_100034a0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003628 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268449336, i32* @lr, align 4
  %v4_10003634 = call i32 @function_10009964(i32 0, i32 3, i32 %v2_10003628, i32 4)
  store i32 %v4_10003634, i32* %r3.global-to-local, align 4
  %v3_10003638 = icmp eq i32 %v4_10003634, -1
  br i1 %v3_10003638, label %dec_label_pc_10003864, label %dec_label_pc_10003640

dec_label_pc_10003640:                            ; preds = %dec_label_pc_1000361c
  %v0_10003640 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003640 = urem i32 %v0_10003640, 65536
  store i32 %v1_10003640, i32* %r18.global-to-local, align 4
  %v0_10003644 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003644 = urem i32 %v0_10003644, 65536
  store i32 %v1_10003644, i32* %r22.global-to-local, align 4
  %v0_1000364c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000364c = urem i32 %v0_1000364c, 65536
  store i32 %v1_1000364c, i32* %r23.global-to-local, align 4
  %v0_10003650 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003650 = urem i32 %v0_10003650, 65536
  store i32 %v1_10003650, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10003640, 1461
  br i1 %tmp30, label %dec_label_pc_1000365c, label %dec_label_pc_10003658

dec_label_pc_10003658:                            ; preds = %dec_label_pc_10003640
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000365c

dec_label_pc_1000365c:                            ; preds = %dec_label_pc_10003640, %dec_label_pc_10003658
  %v0_1000396c = phi i32 [ %v1_10003640, %dec_label_pc_10003640 ], [ 1460, %dec_label_pc_10003658 ]
  %v0_1000365c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000365c = icmp slt i32 %v0_1000365c, 0
  %v3_1000365c = icmp eq i32 %v0_1000365c, 0
  store i1 %v1_1000365c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000365c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_1000365c, 1
  br i1 %tmp31, label %dec_label_pc_10003964, label %dec_label_pc_1000366c

dec_label_pc_1000366c:                            ; preds = %dec_label_pc_1000365c
  %v0_1000366c = load i32, i32* @r31, align 4
  %v3_1000366c = icmp eq i32 %v0_1000366c, 0
  %v1_10003670 = add nuw nsw i32 %v0_1000396c, 28
  store i32 %v1_10003670, i32* %r25.global-to-local, align 4
  %v1_10003674 = add nuw nsw i32 %v0_1000396c, 8
  store i32 %v1_10003674, i32* %r26.global-to-local, align 4
  %v1_10003678 = urem i32 %v1_10003670, 65536
  store i32 %v1_10003678, i32* @r28, align 4
  %v1_1000367c = urem i32 %v1_10003674, 65536
  store i32 %v1_1000367c, i32* @r29, align 4
  br i1 %v3_1000366c, label %dec_label_pc_10003684, label %dec_label_pc_100038cc

dec_label_pc_10003684:                            ; preds = %dec_label_pc_1000366c
  br label %dec_label_pc_10003688

dec_label_pc_10003688:                            ; preds = %dec_label_pc_10003688, %dec_label_pc_10003684
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268449428, i32* @lr, align 4
  %v2_10003690 = call i32 @function_10009cfc(i32 1510, i32 1)
  store i32 %v2_10003690, i32* %r3.global-to-local, align 4
  %v3_10003694 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003694, i32* %r9.global-to-local, align 4
  %v0_10003698 = load i32, i32* @r31, align 4
  %v1_10003698 = mul i32 %v0_10003698, 4
  store i32 %v1_10003698, i32* %r0.global-to-local, align 4
  %v1_1000369c = load i32, i32* %r20.global-to-local, align 4
  %v3_1000369c = add i32 %v1_1000369c, %v1_10003698
  %v4_1000369c = inttoptr i32 %v3_1000369c to i32*
  store i32 %v2_10003690, i32* %v4_1000369c, align 4
  %v0_100036a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036a0 = mul i32 %v0_100036a0, 4
  store i32 %v1_100036a0, i32* %r9.global-to-local, align 4
  %v1_100036a4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100036a4 = add i32 %v1_100036a4, %v1_100036a0
  %v3_100036a4 = inttoptr i32 %v2_100036a4 to i32*
  %v4_100036a4 = load i32, i32* %v3_100036a4, align 4
  store i32 %v4_100036a4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100036ac = inttoptr i32 %v4_100036a4 to i32*
  %v2_100036ac = load i32, i32* %v1_100036ac, align 4
  store i32 %v2_100036ac, i32* %r0.global-to-local, align 4
  %v1_100036b0 = add i32 %v4_100036a4, 20
  store i32 %v1_100036b0, i32* %r10.global-to-local, align 4
  %v0_100036b4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100036b4 = trunc i32 %v0_100036b4 to i8
  %v3_100036b4 = add i32 %v4_100036a4, 8
  %v4_100036b4 = inttoptr i32 %v3_100036b4 to i8*
  store i8 %v1_100036b4, i8* %v4_100036b4, align 1
  %v1_100036b8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100036b8, i32* %r0.global-to-local, align 4
  %v0_100036bc = load i32, i32* @r30, align 4
  %v1_100036bc = load i32, i32* %r11.global-to-local, align 4
  %v2_100036bc = add i32 %v1_100036bc, 12
  %v3_100036bc = inttoptr i32 %v2_100036bc to i32*
  store i32 %v0_100036bc, i32* %v3_100036bc, align 4
  %v1_100036c0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100036c4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100036c4 = trunc i32 %v0_100036c4 to i16
  %v2_100036c4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036c4 = add i32 %v2_100036c4, 4
  %v4_100036c4 = inttoptr i32 %v3_100036c4 to i16*
  store i16 %v1_100036c4, i16* %v4_100036c4, align 2
  %v1_100036c8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036c8 = inttoptr i32 %v1_100036c8 to i32*
  store i32 %v1_100036c0, i32* %v2_100036c8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100036d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d0 = add i32 %v2_100036d0, 9
  %v4_100036d0 = inttoptr i32 %v3_100036d0 to i8*
  store i8 17, i8* %v4_100036d0, align 1
  %v0_100036d4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100036d4 = trunc i32 %v0_100036d4 to i8
  %v2_100036d4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d4 = add i32 %v2_100036d4, 1
  %v4_100036d4 = inttoptr i32 %v3_100036d4 to i8*
  store i8 %v1_100036d4, i8* %v4_100036d4, align 1
  %v0_100036d8 = load i32, i32* @r28, align 4
  %v1_100036d8 = trunc i32 %v0_100036d8 to i16
  %v2_100036d8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d8 = add i32 %v2_100036d8, 2
  %v4_100036d8 = inttoptr i32 %v3_100036d8 to i16*
  store i16 %v1_100036d8, i16* %v4_100036d8, align 2
  %v3_100036dc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100036dc, i32* %r9.global-to-local, align 4
  %v0_100036e0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100036e0 = trunc i32 %v0_100036e0 to i16
  %v2_100036e0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036e0 = add i32 %v2_100036e0, 20
  %v4_100036e0 = inttoptr i32 %v3_100036e0 to i16*
  store i16 %v1_100036e0, i16* %v4_100036e0, align 2
  %v0_100036e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036e4 = add i32 %v0_100036e4, 1
  store i32 %v1_100036e4, i32* %r31.global-to-local, align 4
  %v1_100036e8 = mul i32 %v0_100036e4, 24
  store i32 %v1_100036e8, i32* %r9.global-to-local, align 4
  %v1_100036ec = load i32, i32* %r19.global-to-local, align 4
  %v2_100036ec = icmp slt i32 %v1_100036e4, %v1_100036ec
  %v0_100036f0 = load i32, i32* @r29, align 4
  %v1_100036f0 = trunc i32 %v0_100036f0 to i16
  %v2_100036f0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100036f0 = add i32 %v2_100036f0, 4
  %v4_100036f0 = inttoptr i32 %v3_100036f0 to i16*
  store i16 %v1_100036f0, i16* %v4_100036f0, align 2
  %v0_100036f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100036f4 = add i32 %v1_100036f4, %v0_100036f4
  store i32 %v2_100036f4, i32* %r9.global-to-local, align 4
  %v0_100036f8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100036f8 = trunc i32 %v0_100036f8 to i16
  %v2_100036f8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100036f8 = add i32 %v2_100036f8, 2
  %v4_100036f8 = inttoptr i32 %v3_100036f8 to i16*
  store i16 %v1_100036f8, i16* %v4_100036f8, align 2
  %v0_100036fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036fc = add i32 %v0_100036fc, 16
  %v2_100036fc = inttoptr i32 %v1_100036fc to i32*
  %v3_100036fc = load i32, i32* %v2_100036fc, align 4
  store i32 %v3_100036fc, i32* %r0.global-to-local, align 4
  %v1_10003700 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003700 = add i32 %v1_10003700, 16
  %v3_10003700 = inttoptr i32 %v2_10003700 to i32*
  store i32 %v3_100036fc, i32* %v3_10003700, align 4
  %v0_10003704 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003704, i32* %stack_var_-104, align 4
  br i1 %v2_100036ec, label %dec_label_pc_10003688, label %dec_label_pc_1000370c

dec_label_pc_1000370c:                            ; preds = %dec_label_pc_100038d4, %dec_label_pc_10003688
  %v0_1000370c = load i32, i32* @r30, align 4
  %v3_1000370c = icmp eq i32 %v0_1000370c, -1
  store i1 %v3_1000370c, i1* %cr2_eq.global-to-local, align 1
  %v0_10003710 = load i32, i32* %r17.global-to-local, align 4
  %v3_10003710 = icmp eq i32 %v0_10003710, 0
  store i1 %v3_10003710, i1* %cr3_eq.global-to-local, align 1
  %v0_10003714.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003714.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003714.preheader

dec_label_pc_10003714.preheader:                  ; preds = %dec_label_pc_100037e0, %dec_label_pc_10003964, %dec_label_pc_1000370c
  %v1_10003714 = phi i1 [ %v1_1000365c, %dec_label_pc_10003964 ], [ %v1_10003714.pre, %dec_label_pc_1000370c ], [ %v1_100037e0, %dec_label_pc_100037e0 ]
  %v0_10003714 = phi i1 [ %v3_1000365c, %dec_label_pc_10003964 ], [ %v0_10003714.pre, %dec_label_pc_1000370c ], [ %v0_100037e0, %dec_label_pc_100037e0 ]
  %v2_10003714 = or i1 %v1_10003714, %v0_10003714
  br label %dec_label_pc_10003714

dec_label_pc_10003714:                            ; preds = %dec_label_pc_10003714.preheader, %dec_label_pc_10003714
  br i1 %v2_10003714, label %dec_label_pc_10003714, label %dec_label_pc_10003718

dec_label_pc_10003718:                            ; preds = %dec_label_pc_10003714, %dec_label_pc_100037e0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10003728

dec_label_pc_10003728:                            ; preds = %dec_label_pc_10003770, %dec_label_pc_10003718
  %v0_10003728 = phi i32 [ %v1_100037d0, %dec_label_pc_10003770 ], [ 0, %dec_label_pc_10003718 ]
  %v1_10003728 = mul i32 %v0_10003728, 24
  store i32 %v1_10003728, i32* %r0.global-to-local, align 4
  %v1_1000372c = mul i32 %v0_10003728, 4
  store i32 %v1_1000372c, i32* %r11.global-to-local, align 4
  %v1_10003730 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003730 = add i32 %v1_10003730, %v1_1000372c
  %v3_10003730 = inttoptr i32 %v2_10003730 to i32*
  %v4_10003730 = load i32, i32* %v3_10003730, align 4
  store i32 %v4_10003730, i32* %r28.global-to-local, align 4
  %v1_10003734 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003734 = add i32 %v1_10003734, %v1_10003728
  store i32 %v2_10003734, i32* %r10.global-to-local, align 4
  %v1_10003738 = add i32 %v2_10003734, 20
  %v2_10003738 = inttoptr i32 %v1_10003738 to i8*
  %v3_10003738 = load i8, i8* %v2_10003738, align 1
  %v4_10003738 = zext i8 %v3_10003738 to i32
  store i32 %v4_10003738, i32* %r9.global-to-local, align 4
  %v1_1000373c = add i32 %v4_10003730, 20
  store i32 %v1_1000373c, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_10003738, 32
  br i1 %tmp32, label %dec_label_pc_100037e8, label %dec_label_pc_10003748

dec_label_pc_10003748:                            ; preds = %dec_label_pc_10003728
  %v0_10003748 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003748, label %dec_label_pc_10003810, label %dec_label_pc_1000374c

dec_label_pc_1000374c:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003748
  store i32 65535, i32* @r29, align 4
  %v0_10003754 = load i32, i32* %r22.global-to-local, align 4
  %v4_10003754 = icmp eq i32 %v0_10003754, 65535
  br i1 %v4_10003754, label %dec_label_pc_10003828, label %dec_label_pc_1000375c

dec_label_pc_1000375c:                            ; preds = %dec_label_pc_10003810, %dec_label_pc_1000374c
  %v1_1000375c = phi i32 [ %v1_10003820, %dec_label_pc_10003810 ], [ 65535, %dec_label_pc_1000374c ]
  %v0_1000375c = load i32, i32* %r23.global-to-local, align 4
  %v4_1000375c = icmp eq i32 %v0_1000375c, %v1_1000375c
  br i1 %v4_1000375c, label %dec_label_pc_10003838, label %dec_label_pc_10003764

dec_label_pc_10003764:                            ; preds = %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge, %dec_label_pc_1000375c
  %v1_10003764 = phi i32 [ %v1_10003764.pre, %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge ], [ %v1_1000375c, %dec_label_pc_1000375c ]
  %v0_10003764 = load i32, i32* %r24.global-to-local, align 4
  %v4_10003764 = icmp eq i32 %v0_10003764, %v1_10003764
  br i1 %v4_10003764, label %dec_label_pc_10003848, label %dec_label_pc_1000376c

dec_label_pc_1000376c:                            ; preds = %dec_label_pc_10003838, %dec_label_pc_10003764
  %v0_1000376c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000376c, label %dec_label_pc_10003770, label %dec_label_pc_10003854

dec_label_pc_10003770:                            ; preds = %dec_label_pc_1000376c, %dec_label_pc_10003848, %dec_label_pc_10003854
  %v0_10003770 = load i32, i32* @r30, align 4
  %v1_10003770 = trunc i32 %v0_10003770 to i16
  %v2_10003770 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003770 = add i32 %v2_10003770, 10
  %v4_10003770 = inttoptr i32 %v3_10003770 to i16*
  store i16 %v1_10003770, i16* %v4_10003770, align 2
  %v0_10003778 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003778, i32* @r3, align 4
  %v2_1000377c = call i32 @function_100043cc(i32 %v0_10003778, i32 20)
  %v3_1000377c = trunc i32 %v2_1000377c to i16
  %v0_10003780 = load i32, i32* @r31, align 4
  store i32 %v0_10003780, i32* @r4, align 4
  %v4_10003784 = add i32 %v0_10003778, 10
  %v5_10003784 = inttoptr i32 %v4_10003784 to i16*
  store i16 %v3_1000377c, i16* %v5_10003784, align 2
  %v0_10003788 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000378c = load i32, i32* @r30, align 4
  %v1_1000378c = trunc i32 %v0_1000378c to i16
  %v2_1000378c = load i32, i32* @r31, align 4
  %v3_1000378c = add i32 %v2_1000378c, 6
  %v4_1000378c = inttoptr i32 %v3_1000378c to i16*
  store i16 %v1_1000378c, i16* %v4_1000378c, align 2
  %v0_10003790 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003790, i32* %r3.global-to-local, align 4
  %v0_10003794 = load i32, i32* @r31, align 4
  %v1_10003794 = add i32 %v0_10003794, 4
  %v2_10003794 = inttoptr i32 %v1_10003794 to i16*
  %v3_10003794 = load i16, i16* %v2_10003794, align 2
  %v4_10003794 = zext i16 %v3_10003794 to i32
  %v4_10003798 = call i32 @function_10004430(i32 %v0_10003790, i32 %v0_10003780, i32 %v4_10003794, i32 %v0_10003788)
  %v5_10003798 = trunc i32 %v4_10003798 to i16
  store i32 %v4_10003798, i32* %r3.global-to-local, align 4
  %v3_1000379c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000379c, i32* %r7.global-to-local, align 4
  %v0_100037a0 = load i32, i32* @r31, align 4
  %v1_100037a0 = add i32 %v0_100037a0, 2
  %v2_100037a0 = inttoptr i32 %v1_100037a0 to i16*
  %v3_100037a0 = load i16, i16* %v2_100037a0, align 2
  %v4_100037a0 = zext i16 %v3_100037a0 to i32
  store i32 %v4_100037a0, i32* %r0.global-to-local, align 4
  %v0_100037a4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100037a8 = mul i32 %v3_1000379c, 24
  store i32 %v1_100037a8, i32* %r7.global-to-local, align 4
  %v4_100037ac = add i32 %v0_100037a0, 6
  %v5_100037ac = inttoptr i32 %v4_100037ac to i16*
  store i16 %v5_10003798, i16* %v5_100037ac, align 2
  %v0_100037b0 = load i32, i32* %r25.global-to-local, align 4
  %v0_100037b4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100037b4, i32* %r3.global-to-local, align 4
  %v0_100037b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100037b8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100037b8 = add i32 %v1_100037b8, %v0_100037b8
  store i32 %v2_100037b8, i32* %r7.global-to-local, align 4
  %v0_100037c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100037c0 = trunc i32 %v0_100037c0 to i16
  %v3_100037c0 = add i32 %v2_100037b8, 2
  %v4_100037c0 = inttoptr i32 %v3_100037c0 to i16*
  store i16 %v1_100037c0, i16* %v4_100037c0, align 2
  store i32 268449740, i32* @lr, align 4
  %v6_100037c8 = call i32 @function_10009924(i32 %v0_100037b4, i32 %v0_100037a4, i32 %v0_100037b0, i32 16384, i32 %v2_100037b8, i32 16)
  store i32 %v6_100037c8, i32* %r3.global-to-local, align 4
  %v3_100037cc = load i32, i32* %stack_var_-104, align 4
  %v1_100037d0 = add i32 %v3_100037cc, 1
  store i32 %v1_100037d0, i32* %r9.global-to-local, align 4
  %v1_100037d4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100037d4 = icmp slt i32 %v1_100037d0, %v1_100037d4
  store i32 %v1_100037d0, i32* %stack_var_-104, align 4
  br i1 %v2_100037d4, label %dec_label_pc_10003728, label %dec_label_pc_100037e0

dec_label_pc_100037e0:                            ; preds = %dec_label_pc_10003770
  %v0_100037e0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100037e0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100037e0 = or i1 %v0_100037e0, %v1_100037e0
  br i1 %v2_100037e0, label %dec_label_pc_10003714.preheader, label %dec_label_pc_10003718

dec_label_pc_100037e8:                            ; preds = %dec_label_pc_10003728
  %v1_100037e8 = add i32 %v2_10003734, 16
  %v2_100037e8 = inttoptr i32 %v1_100037e8 to i32*
  %v3_100037e8 = load i32, i32* %v2_100037e8, align 4
  store i32 %v3_100037e8, i32* %r29.global-to-local, align 4
  %v0_100037ec = call i32 @function_10005cd4()
  store i32 %v0_100037ec, i32* %r3.global-to-local, align 4
  %v3_100037f0 = load i32, i32* %stack_var_-104, align 4
  %v1_100037f4 = mul i32 %v3_100037f0, 24
  %v1_100037f8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100037f8 = add i32 %v1_100037f8, %v1_100037f4
  store i32 %v2_100037f8, i32* %r9.global-to-local, align 4
  %v1_100037fc = add i32 %v2_100037f8, 20
  %v2_100037fc = inttoptr i32 %v1_100037fc to i8*
  %v3_100037fc = load i8, i8* %v2_100037fc, align 1
  %v4_100037fc = zext i8 %v3_100037fc to i32
  store i32 %v4_100037fc, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100037fc, 64
  %v2_10003800 = zext i8 %tmp to i32
  %v3_10003800 = lshr i32 %v0_100037ec, %v2_10003800
  store i32 %v3_10003800, i32* %r3.global-to-local, align 4
  %v0_10003804 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003804 = add i32 %v3_10003800, %v0_10003804
  store i32 %v2_10003804, i32* %r29.global-to-local, align 4
  %v1_10003808 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003808 = add i32 %v1_10003808, 16
  %v3_10003808 = inttoptr i32 %v2_10003808 to i32*
  store i32 %v2_10003804, i32* %v3_10003808, align 4
  %v0_1000380c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000380c, label %dec_label_pc_10003810, label %dec_label_pc_1000374c

dec_label_pc_10003810:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003748
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003814 = call i32 @function_10005cd4()
  store i32 %v0_10003814, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_1000381c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000381c = add i32 %v1_1000381c, 12
  %v3_1000381c = inttoptr i32 %v2_1000381c to i32*
  store i32 %v0_10003814, i32* %v3_1000381c, align 4
  %v0_10003820 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003820 = load i32, i32* @r29, align 4
  %v4_10003820 = icmp eq i32 %v0_10003820, %v1_10003820
  br i1 %v4_10003820, label %dec_label_pc_10003828, label %dec_label_pc_1000375c

dec_label_pc_10003828:                            ; preds = %dec_label_pc_10003810, %dec_label_pc_1000374c
  %v0_10003828 = call i32 @function_10005cd4()
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  store i32 %v0_10003828, i32* %r3.global-to-local, align 4
  %v0_1000382c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000382c = load i32, i32* @r29, align 4
  %v4_1000382c = icmp eq i32 %v0_1000382c, %v1_1000382c
  %v3_10003830 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003830 = add i32 %v3_10003830, 4
  %v5_10003830 = inttoptr i32 %v4_10003830 to i16*
  store i16 %v1_10003828, i16* %v5_10003830, align 2
  br i1 %v4_1000382c, label %dec_label_pc_10003838, label %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge

dec_label_pc_10003828.dec_label_pc_10003764_crit_edge: ; preds = %dec_label_pc_10003828
  %v1_10003764.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003764

dec_label_pc_10003838:                            ; preds = %dec_label_pc_10003828, %dec_label_pc_1000375c
  %v0_10003838 = call i32 @function_10005cd4()
  %v1_10003838 = trunc i32 %v0_10003838 to i16
  store i32 %v0_10003838, i32* %r3.global-to-local, align 4
  %v0_1000383c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000383c = load i32, i32* @r29, align 4
  %v4_1000383c = icmp eq i32 %v0_1000383c, %v1_1000383c
  %v3_10003840 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003840 = add i32 %v3_10003840, 20
  %v5_10003840 = inttoptr i32 %v4_10003840 to i16*
  store i16 %v1_10003838, i16* %v5_10003840, align 2
  br i1 %v4_1000383c, label %dec_label_pc_10003848, label %dec_label_pc_1000376c

dec_label_pc_10003848:                            ; preds = %dec_label_pc_10003838, %dec_label_pc_10003764
  %v0_10003848 = call i32 @function_10005cd4()
  %v1_10003848 = trunc i32 %v0_10003848 to i16
  store i32 %v0_10003848, i32* %r3.global-to-local, align 4
  %v3_1000384c = load i32, i32* @r31, align 4
  %v4_1000384c = add i32 %v3_1000384c, 2
  %v5_1000384c = inttoptr i32 %v4_1000384c to i16*
  store i16 %v1_10003848, i16* %v5_1000384c, align 2
  %v0_10003850 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003850, label %dec_label_pc_10003770, label %dec_label_pc_10003854

dec_label_pc_10003854:                            ; preds = %dec_label_pc_1000376c, %dec_label_pc_10003848
  %v0_10003854 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003854 = add i32 %v0_10003854, 28
  store i32 %v1_10003854, i32* @r3, align 4
  %v0_10003858 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10003858, i32* @r4, align 4
  %v0_1000385c = call i32 @function_10005ea8()
  store i32 %v0_1000385c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003770

dec_label_pc_10003864:                            ; preds = %dec_label_pc_1000361c
  %v0_10003864 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10003864, i32* %r3.global-to-local, align 4
  store i32 268449900, i32* @lr, align 4
  %v0_10003868 = call i32 @function_10008c98()
  store i32 %v0_10003868, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000386c

dec_label_pc_1000386c:                            ; preds = %dec_label_pc_100034a0, %dec_label_pc_10003864
  store i32 %v0_100034b8, i32* %r0.global-to-local, align 4
  %v1_10003880 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100034a8)
  store i32 %v0_100034ec, i32* %r28.global-to-local, align 4
  store i32 %v0_100034f4, i32* %r29.global-to-local, align 4
  store i32 %v0_100034fc, i32* %r30.global-to-local, align 4
  store i32 %v0_10003500, i32* %r31.global-to-local, align 4
  %v0_100038c8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100038c8

dec_label_pc_100038cc:                            ; preds = %dec_label_pc_1000366c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100038d4

dec_label_pc_100038d4:                            ; preds = %dec_label_pc_100038d4, %dec_label_pc_100038cc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450016, i32* @lr, align 4
  %v2_100038dc = call i32 @function_10009cfc(i32 1510, i32 1)
  store i32 %v2_100038dc, i32* %r3.global-to-local, align 4
  %v3_100038e0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100038e0, i32* %r9.global-to-local, align 4
  %v0_100038e4 = load i32, i32* @r31, align 4
  %v1_100038e4 = mul i32 %v0_100038e4, 4
  store i32 %v1_100038e4, i32* %r0.global-to-local, align 4
  %v1_100038e8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100038e8 = add i32 %v1_100038e8, %v1_100038e4
  %v4_100038e8 = inttoptr i32 %v3_100038e8 to i32*
  store i32 %v2_100038dc, i32* %v4_100038e8, align 4
  %v0_100038ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100038ec = mul i32 %v0_100038ec, 4
  store i32 %v1_100038ec, i32* %r9.global-to-local, align 4
  %v1_100038f0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100038f0 = add i32 %v1_100038f0, %v1_100038ec
  %v3_100038f0 = inttoptr i32 %v2_100038f0 to i32*
  %v4_100038f0 = load i32, i32* %v3_100038f0, align 4
  store i32 %v4_100038f0, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100038f8 = inttoptr i32 %v4_100038f0 to i32*
  %v2_100038f8 = load i32, i32* %v1_100038f8, align 4
  store i32 %v2_100038f8, i32* %r0.global-to-local, align 4
  %v1_100038fc = add i32 %v4_100038f0, 20
  store i32 %v1_100038fc, i32* %r10.global-to-local, align 4
  %v0_10003900 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003900 = trunc i32 %v0_10003900 to i8
  %v3_10003900 = add i32 %v4_100038f0, 8
  %v4_10003900 = inttoptr i32 %v3_10003900 to i8*
  store i8 %v1_10003900, i8* %v4_10003900, align 1
  %v1_10003904 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003904, i32* %r0.global-to-local, align 4
  %v0_10003908 = load i32, i32* @r30, align 4
  %v1_10003908 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003908 = add i32 %v1_10003908, 12
  %v3_10003908 = inttoptr i32 %v2_10003908 to i32*
  store i32 %v0_10003908, i32* %v3_10003908, align 4
  %v1_1000390c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003910 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003910 = trunc i32 %v0_10003910 to i16
  %v2_10003910 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003910 = add i32 %v2_10003910, 4
  %v4_10003910 = inttoptr i32 %v3_10003910 to i16*
  store i16 %v1_10003910, i16* %v4_10003910, align 2
  %v1_10003914 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003914 = inttoptr i32 %v1_10003914 to i32*
  store i32 %v1_1000390c, i32* %v2_10003914, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_1000391c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000391c = add i32 %v2_1000391c, 9
  %v4_1000391c = inttoptr i32 %v3_1000391c to i8*
  store i8 17, i8* %v4_1000391c, align 1
  %v0_10003920 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003920 = trunc i32 %v0_10003920 to i8
  %v2_10003920 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003920 = add i32 %v2_10003920, 1
  %v4_10003920 = inttoptr i32 %v3_10003920 to i8*
  store i8 %v1_10003920, i8* %v4_10003920, align 1
  %v0_10003924 = load i32, i32* @r28, align 4
  %v1_10003924 = trunc i32 %v0_10003924 to i16
  %v2_10003924 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003924 = add i32 %v2_10003924, 2
  %v4_10003924 = inttoptr i32 %v3_10003924 to i16*
  store i16 %v1_10003924, i16* %v4_10003924, align 2
  %v3_10003928 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003928, i32* %r9.global-to-local, align 4
  %v0_1000392c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000392c = trunc i32 %v0_1000392c to i16
  %v2_1000392c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000392c = add i32 %v2_1000392c, 20
  %v4_1000392c = inttoptr i32 %v3_1000392c to i16*
  store i16 %v1_1000392c, i16* %v4_1000392c, align 2
  %v0_10003930 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003930 = add i32 %v0_10003930, 1
  store i32 %v1_10003930, i32* %r31.global-to-local, align 4
  %v1_10003934 = mul i32 %v0_10003930, 24
  %v1_10003938 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003938 = icmp slt i32 %v1_10003930, %v1_10003938
  %v1_1000393c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000393c = add i32 %v1_1000393c, %v1_10003934
  store i32 %v2_1000393c, i32* %r9.global-to-local, align 4
  %v1_10003940 = add i32 %v2_1000393c, 16
  %v2_10003940 = inttoptr i32 %v1_10003940 to i32*
  %v3_10003940 = load i32, i32* %v2_10003940, align 4
  store i32 %v3_10003940, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_10003948 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003948 = add i32 %v2_10003948, 6
  %v4_10003948 = inttoptr i32 %v3_10003948 to i16*
  store i16 16384, i16* %v4_10003948, align 2
  %v0_1000394c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000394c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000394c = add i32 %v1_1000394c, 16
  %v3_1000394c = inttoptr i32 %v2_1000394c to i32*
  store i32 %v0_1000394c, i32* %v3_1000394c, align 4
  %v0_10003950 = load i32, i32* @r29, align 4
  %v1_10003950 = trunc i32 %v0_10003950 to i16
  %v2_10003950 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003950 = add i32 %v2_10003950, 4
  %v4_10003950 = inttoptr i32 %v3_10003950 to i16*
  store i16 %v1_10003950, i16* %v4_10003950, align 2
  %v0_10003954 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003954 = trunc i32 %v0_10003954 to i16
  %v2_10003954 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003954 = add i32 %v2_10003954, 2
  %v4_10003954 = inttoptr i32 %v3_10003954 to i16*
  store i16 %v1_10003954, i16* %v4_10003954, align 2
  %v0_10003958 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003958, i32* %stack_var_-104, align 4
  br i1 %v2_10003938, label %dec_label_pc_100038d4, label %dec_label_pc_1000370c

dec_label_pc_10003964:                            ; preds = %dec_label_pc_1000365c
  %v0_10003964 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003964 = icmp eq i32 %v0_10003964, -1
  store i1 %v3_10003964, i1* %cr2_eq.global-to-local, align 1
  %v0_10003968 = load i32, i32* %r17.global-to-local, align 4
  %v3_10003968 = icmp eq i32 %v0_10003968, 0
  store i1 %v3_10003968, i1* %cr3_eq.global-to-local, align 1
  %v1_1000396c = add nuw nsw i32 %v0_1000396c, 28
  store i32 %v1_1000396c, i32* %r25.global-to-local, align 4
  %v1_10003970 = add nuw nsw i32 %v0_1000396c, 8
  store i32 %v1_10003970, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003714.preheader

; uselistorder directives
  uselistorder i32 %v1_100038ec, { 1, 0 }
  uselistorder i32 %v1_100038e4, { 1, 0 }
  uselistorder i32 %v0_10003848, { 1, 0 }
  uselistorder i32 %v0_10003838, { 1, 0 }
  uselistorder i32 %v0_10003828, { 1, 0 }
  uselistorder i32 %v1_10003820, { 1, 0 }
  uselistorder i1 %v1_100037e0, { 1, 0 }
  uselistorder i1 %v0_100037e0, { 1, 0 }
  uselistorder i32 %v1_100037d0, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003798, { 1, 0 }
  uselistorder i32 %v1_1000372c, { 1, 0 }
  uselistorder i32 %v1_100036a0, { 1, 0 }
  uselistorder i32 %v1_10003698, { 1, 0 }
  uselistorder i32 %v0_1000396c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10003640, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 20, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_10005ea8, { 10, 9, 8, 7, 6, 5, 4, 3, 0, 1, 2 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_1000386c, { 1, 0 }
  uselistorder label %dec_label_pc_10003854, { 1, 0 }
  uselistorder label %dec_label_pc_10003770, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003718, { 1, 0 }
  uselistorder label %dec_label_pc_10003714, { 1, 0 }
  uselistorder label %dec_label_pc_10003714.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000365c, { 1, 0 }
}

define i32 @function_1000397c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000397c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10003980 = load i32, i32* @lr, align 4
  store i32 %v0_10003980, i32* %r0.global-to-local, align 4
  %v0_10003984 = call i32 @__asm_mfcr()
  store i32 %v0_10003984, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_10003984, i32* %r23.global-to-local, align 4
  %v0_100039bc = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100039c4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100039cc = load i32, i32* @r30, align 4
  store i32 268450284, i32* @lr, align 4
  %v2_100039e8 = call i32 @function_10009cfc(i32 4, i32 4)
  store i32 %v2_100039e8, i32* %r24.global-to-local, align 4
  %v0_100039f0 = load i32, i32* @r28, align 4
  %v0_100039f4 = load i32, i32* @r29, align 4
  store i32 %v0_100039f4, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268450308, i32* @lr, align 4
  %v4_10003a00 = inttoptr i32 %v0_100039f0 to i32*
  %v5_10003a00 = call i32 @function_100006a8(i32 %v0_100039f4, i32* %v4_10003a00, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_10003a10 = load i32, i32* @r28, align 4
  %v1_10003a14 = urem i32 %v5_10003a00, 256
  store i32 %v1_10003a14, i32* %r19.global-to-local, align 4
  %v0_10003a18 = load i32, i32* @r29, align 4
  store i32 %v0_10003a18, i32* %r3.global-to-local, align 4
  store i32 268450336, i32* @lr, align 4
  %v4_10003a1c = inttoptr i32 %v0_10003a10 to i32*
  %v5_10003a1c = call i32 @function_100006a8(i32 %v0_10003a18, i32* %v4_10003a1c, i32 3, i32 65535)
  %v0_10003a20 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10003a1c, i32* %r21.global-to-local, align 4
  %v0_10003a30 = load i32, i32* @r29, align 4
  store i32 %v0_10003a30, i32* %r3.global-to-local, align 4
  store i32 268450360, i32* @lr, align 4
  %v4_10003a34 = inttoptr i32 %v0_10003a20 to i32*
  %v5_10003a34 = call i32 @function_100006a8(i32 %v0_10003a30, i32* %v4_10003a34, i32 4, i32 64)
  %v0_10003a38 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_10003a44 = urem i32 %v5_10003a34, 256
  store i32 %v1_10003a44, i32* %r26.global-to-local, align 4
  %v0_10003a48 = load i32, i32* @r29, align 4
  store i32 %v0_10003a48, i32* %r3.global-to-local, align 4
  store i32 268450384, i32* @lr, align 4
  %v4_10003a4c = inttoptr i32 %v0_10003a38 to i32*
  %v5_10003a4c = call i32 @function_100006a8(i32 %v0_10003a48, i32* %v4_10003a4c, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10003a5c = load i32, i32* @r28, align 4
  %v1_10003a60 = urem i32 %v5_10003a4c, 256
  store i32 %v1_10003a60, i32* @r31, align 4
  %v0_10003a64 = load i32, i32* @r29, align 4
  store i32 %v0_10003a64, i32* %r3.global-to-local, align 4
  store i32 268450412, i32* @lr, align 4
  %v4_10003a68 = inttoptr i32 %v0_10003a5c to i32*
  %v5_10003a68 = call i32 @function_100006a8(i32 %v0_10003a64, i32* %v4_10003a68, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10003a74 = load i32, i32* @r28, align 4
  store i32 %v5_10003a68, i32* %r22.global-to-local, align 4
  %v0_10003a7c = load i32, i32* @r29, align 4
  store i32 %v0_10003a7c, i32* %r3.global-to-local, align 4
  store i32 268450436, i32* @lr, align 4
  %v4_10003a80 = inttoptr i32 %v0_10003a74 to i32*
  %v5_10003a80 = call i32 @function_100006a8(i32 %v0_10003a7c, i32* %v4_10003a80, i32 7, i32 27015)
  store i32 %v5_10003a80, i32* %r29.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 268450448, i32* @lr, align 4
  %v1_10003a8c = call i32 @function_10007fbc(i32 22)
  store i32 22, i32* %r3.global-to-local, align 4
  %v3_10003a98 = call i32 @function_10007f08(i32 22, i32* nonnull %stack_var_-84)
  store i32 %v3_10003a98, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450480, i32* @lr, align 4
  %v3_10003aac = call i32 @function_100099a0(i32 2, i32 3, i32 17)
  store i32 %v3_10003aac, i32* %r3.global-to-local, align 4
  %v3_10003ab0 = icmp eq i32 %v3_10003aac, -1
  store i32 %v3_10003aac, i32* %r25.global-to-local, align 4
  br i1 %v3_10003ab0, label %dec_label_pc_10003d00, label %dec_label_pc_10003abc

dec_label_pc_10003abc:                            ; preds = %dec_label_pc_1000397c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10003ac8 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10003ac8, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268450520, i32* @lr, align 4
  %v4_10003ad4 = call i32 @function_10009964(i32 0, i32 3, i32 %v2_10003ac8, i32 4)
  store i32 %v4_10003ad4, i32* %r3.global-to-local, align 4
  %v3_10003ad8 = icmp eq i32 %v4_10003ad4, -1
  br i1 %v3_10003ad8, label %dec_label_pc_10003cf8, label %dec_label_pc_10003ae0

dec_label_pc_10003ae0:                            ; preds = %dec_label_pc_10003abc
  %v0_10003ae0 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003ae0 = icmp slt i32 %v0_10003ae0, 0
  %v3_10003ae0 = icmp eq i32 %v0_10003ae0, 0
  store i1 %v1_10003ae0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003ae0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003ae8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ae8 = urem i32 %v0_10003ae8, 65536
  store i32 %v1_10003ae8, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_10003af0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003af0 = urem i32 %v0_10003af0, 65536
  store i32 %v1_10003af0, i32* %r21.global-to-local, align 4
  %v0_10003af4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003af4 = urem i32 %v0_10003af4, 65536
  store i32 %v1_10003af4, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_10003ae0, 1
  br i1 %tmp32, label %dec_label_pc_10003bcc.outer, label %dec_label_pc_10003afc

dec_label_pc_10003afc:                            ; preds = %dec_label_pc_10003ae0
  %v0_10003afc = load i32, i32* @r31, align 4
  %v3_10003afc = icmp eq i32 %v0_10003afc, 0
  store i1 %v3_10003afc, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10003b1c

dec_label_pc_10003b1c:                            ; preds = %dec_label_pc_10003b78, %dec_label_pc_10003afc
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268450600, i32* @lr, align 4
  %v2_10003b24 = call i32 @function_10009cfc(i32 128, i32 1)
  store i32 %v2_10003b24, i32* %r3.global-to-local, align 4
  %v3_10003b28 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003b28, i32* %r0.global-to-local, align 4
  %v0_10003b2c = load i32, i32* @r31, align 4
  %v1_10003b2c = mul i32 %v0_10003b2c, 4
  store i32 %v1_10003b2c, i32* %r9.global-to-local, align 4
  %v0_10003b30 = load i32, i32* @r30, align 4
  %v2_10003b34 = load i32, i32* %r24.global-to-local, align 4
  %v3_10003b34 = add i32 %v2_10003b34, %v1_10003b2c
  %v4_10003b34 = inttoptr i32 %v3_10003b34 to i32*
  store i32 %v2_10003b24, i32* %v4_10003b34, align 4
  %v0_10003b38 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b38 = mul i32 %v0_10003b38, 4
  store i32 %v1_10003b38, i32* %r0.global-to-local, align 4
  %v0_10003b3c = load i32, i32* %r24.global-to-local, align 4
  %v2_10003b3c = add i32 %v0_10003b3c, %v1_10003b38
  %v3_10003b3c = inttoptr i32 %v2_10003b3c to i32*
  %v4_10003b3c = load i32, i32* %v3_10003b3c, align 4
  store i32 %v4_10003b3c, i32* %r10.global-to-local, align 4
  %v1_10003b40 = inttoptr i32 %v4_10003b3c to i32*
  %v2_10003b40 = load i32, i32* %v1_10003b40, align 4
  store i32 %v2_10003b40, i32* %r0.global-to-local, align 4
  %v1_10003b44 = add i32 %v4_10003b3c, 32
  store i32 %v1_10003b44, i32* %r3.global-to-local, align 4
  %v0_10003b48 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b48 = trunc i32 %v0_10003b48 to i16
  %v3_10003b48 = add i32 %v4_10003b3c, 4
  %v4_10003b48 = inttoptr i32 %v3_10003b48 to i16*
  store i16 %v1_10003b48, i16* %v4_10003b48, align 2
  %v0_10003b4c = load i32, i32* %r10.global-to-local, align 4
  %v1_10003b4c = add i32 %v0_10003b4c, 20
  store i32 %v1_10003b4c, i32* %r8.global-to-local, align 4
  %v1_10003b50 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003b50, i32* %r0.global-to-local, align 4
  %v1_10003b54 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10003b54, i32* %r0.global-to-local, align 4
  %v1_10003b58 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003b58 = inttoptr i32 %v1_10003b58 to i32*
  store i32 %v1_10003b54, i32* %v2_10003b58, align 4
  %v0_10003b5c = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b5c = trunc i32 %v0_10003b5c to i8
  %v2_10003b5c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b5c = add i32 %v2_10003b5c, 1
  %v4_10003b5c = inttoptr i32 %v3_10003b5c to i8*
  store i8 %v1_10003b5c, i8* %v4_10003b5c, align 1
  %v3_10003b60 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003b60, i32* %r9.global-to-local, align 4
  %v0_10003b64 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003b64 = trunc i32 %v0_10003b64 to i8
  %v2_10003b64 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b64 = add i32 %v2_10003b64, 8
  %v4_10003b64 = inttoptr i32 %v3_10003b64 to i8*
  store i8 %v1_10003b64, i8* %v4_10003b64, align 1
  %v0_10003b68 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b68 = add i32 %v0_10003b68, 32
  store i32 %v1_10003b68, i32* %r9.global-to-local, align 4
  %v1_10003b6c = trunc i32 %v1_10003b68 to i16
  %v2_10003b6c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b6c = add i32 %v2_10003b6c, 2
  %v4_10003b6c = inttoptr i32 %v3_10003b6c to i16*
  store i16 %v1_10003b6c, i16* %v4_10003b6c, align 2
  %v0_10003b70 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003b70, label %dec_label_pc_10003b78, label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b1c
  %v0_10003b74 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b74 = trunc i32 %v0_10003b74 to i16
  %v2_10003b74 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b74 = add i32 %v2_10003b74, 6
  %v4_10003b74 = inttoptr i32 %v3_10003b74 to i16*
  store i16 %v1_10003b74, i16* %v4_10003b74, align 2
  br label %dec_label_pc_10003b78

dec_label_pc_10003b78:                            ; preds = %dec_label_pc_10003b1c, %dec_label_pc_10003b74
  %v0_10003b78 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003b78 = trunc i32 %v0_10003b78 to i8
  %v2_10003b78 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b78 = add i32 %v2_10003b78, 9
  %v4_10003b78 = inttoptr i32 %v3_10003b78 to i8*
  store i8 %v1_10003b78, i8* %v4_10003b78, align 1
  %v0_10003b7c = load i32, i32* %r21.global-to-local, align 4
  %v1_10003b7c = trunc i32 %v0_10003b7c to i16
  %v2_10003b7c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b7c = add i32 %v2_10003b7c, 20
  %v4_10003b7c = inttoptr i32 %v3_10003b7c to i16*
  store i16 %v1_10003b7c, i16* %v4_10003b7c, align 2
  %v3_10003b80 = load i32, i32* %stack_var_-88, align 4
  %v3_10003b84 = load i32, i32* @global_var_1001bd68.14, align 4
  store i32 %v3_10003b84, i32* %r0.global-to-local, align 4
  %v1_10003b88 = mul i32 %v3_10003b80, 24
  store i32 %v1_10003b88, i32* %r9.global-to-local, align 4
  %v0_10003b8c = load i32, i32* %r22.global-to-local, align 4
  %v1_10003b8c = trunc i32 %v0_10003b8c to i16
  %v2_10003b8c = load i32, i32* %r8.global-to-local, align 4
  %v3_10003b8c = add i32 %v2_10003b8c, 2
  %v4_10003b8c = inttoptr i32 %v3_10003b8c to i16*
  store i16 %v1_10003b8c, i16* %v4_10003b8c, align 2
  %v0_10003b90 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b90 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003b90 = add i32 %v1_10003b90, 12
  %v3_10003b90 = inttoptr i32 %v2_10003b90 to i32*
  store i32 %v0_10003b90, i32* %v3_10003b90, align 4
  %v0_10003b94 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b94 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003b94 = add i32 %v1_10003b94, %v0_10003b94
  store i32 %v2_10003b94, i32* %r9.global-to-local, align 4
  %v1_10003b98 = add i32 %v2_10003b94, 16
  %v2_10003b98 = inttoptr i32 %v1_10003b98 to i32*
  %v3_10003b98 = load i32, i32* %v2_10003b98, align 4
  store i32 %v3_10003b98, i32* %r0.global-to-local, align 4
  %v3_10003b9c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003b9c, i32* %r11.global-to-local, align 4
  %v0_10003ba0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ba0 = add i32 %v1_10003ba0, 28
  %v3_10003ba0 = inttoptr i32 %v2_10003ba0 to i32*
  store i32 %v0_10003ba0, i32* %v3_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003ba4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ba4 = add i32 %v1_10003ba4, 16
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v0_10003ba4, i32* %v3_10003ba4, align 4
  %v0_10003ba8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003ba8 = add i32 %v0_10003ba8, 12
  store i32 %v1_10003ba8, i32* %r11.global-to-local, align 4
  %v1_10003bac = trunc i32 %v1_10003ba8 to i16
  %v2_10003bac = load i32, i32* %r8.global-to-local, align 4
  %v3_10003bac = add i32 %v2_10003bac, 4
  %v4_10003bac = inttoptr i32 %v3_10003bac to i16*
  store i16 %v1_10003bac, i16* %v4_10003bac, align 2
  %v3_10003bb0 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003bb0, i32* %r5.global-to-local, align 4
  store i32 268450744, i32* @lr, align 4
  %v3_10003bb4 = call i32 @function_100085dc(i32 %v3_10003bb0, i32 %v0_10003b30, i32 %v3_10003bb0)
  store i32 %v3_10003bb4, i32* %r3.global-to-local, align 4
  %v3_10003bb8 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003bb8, i32* %r9.global-to-local, align 4
  %v1_10003bbc = add i32 %v3_10003bb8, 1
  %v1_10003bc0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003bc0 = icmp slt i32 %v1_10003bbc, %v1_10003bc0
  store i32 %v1_10003bbc, i32* %stack_var_-88, align 4
  br i1 %v2_10003bc0, label %dec_label_pc_10003b1c, label %dec_label_pc_10003bcc.preheader.loopexit

dec_label_pc_10003bcc.preheader.loopexit:         ; preds = %dec_label_pc_10003b78
  %v0_10003bcc.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003bcc.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003bcc.outer

dec_label_pc_10003bcc.outer:                      ; preds = %dec_label_pc_10003c98, %dec_label_pc_10003ae0, %dec_label_pc_10003bcc.preheader.loopexit
  %v1_10003bcc.ph34 = phi i1 [ %v1_10003ae0, %dec_label_pc_10003ae0 ], [ %v1_10003bcc.pre.pre, %dec_label_pc_10003bcc.preheader.loopexit ], [ %v1_10003c98, %dec_label_pc_10003c98 ]
  %v0_10003bcc.ph35 = phi i1 [ %v3_10003ae0, %dec_label_pc_10003ae0 ], [ %v0_10003bcc.pre.pre, %dec_label_pc_10003bcc.preheader.loopexit ], [ %v0_10003c98, %dec_label_pc_10003c98 ]
  %v2_10003bcc = or i1 %v1_10003bcc.ph34, %v0_10003bcc.ph35
  br label %dec_label_pc_10003bcc

dec_label_pc_10003bcc:                            ; preds = %dec_label_pc_10003bcc.outer, %dec_label_pc_10003bcc
  br i1 %v2_10003bcc, label %dec_label_pc_10003bcc, label %dec_label_pc_10003bd0

dec_label_pc_10003bd0:                            ; preds = %dec_label_pc_10003bcc, %dec_label_pc_10003c98
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003be0

dec_label_pc_10003be0:                            ; preds = %dec_label_pc_10003c20, %dec_label_pc_10003bd0
  %v0_10003bf0 = phi i32 [ %v1_10003c88, %dec_label_pc_10003c20 ], [ 0, %dec_label_pc_10003bd0 ]
  %v1_10003be0 = mul i32 %v0_10003bf0, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_10003bec = load i32, i32* %r27.global-to-local, align 4
  %v2_10003bec = add i32 %v1_10003bec, %v1_10003be0
  store i32 %v2_10003bec, i32* %r10.global-to-local, align 4
  %v1_10003bf0 = mul i32 %v0_10003bf0, 4
  store i32 %v1_10003bf0, i32* %r0.global-to-local, align 4
  %v1_10003bf4 = add i32 %v2_10003bec, 20
  %v2_10003bf4 = inttoptr i32 %v1_10003bf4 to i8*
  %v3_10003bf4 = load i8, i8* %v2_10003bf4, align 1
  %v4_10003bf4 = zext i8 %v3_10003bf4 to i32
  store i32 %v4_10003bf4, i32* %r9.global-to-local, align 4
  %v0_10003bf8 = load i32, i32* %r24.global-to-local, align 4
  %v2_10003bf8 = add i32 %v0_10003bf8, %v1_10003bf0
  %v3_10003bf8 = inttoptr i32 %v2_10003bf8 to i32*
  %v4_10003bf8 = load i32, i32* %v3_10003bf8, align 4
  store i32 %v4_10003bf8, i32* %r28.global-to-local, align 4
  %v1_10003c00 = add i32 %v4_10003bf8, 20
  store i32 %v1_10003c00, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_10003bf4, 32
  br i1 %tmp33, label %dec_label_pc_10003ca0, label %dec_label_pc_10003c08

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003be0
  %v0_10003c08 = load i32, i32* %r20.global-to-local, align 4
  %v4_10003c08 = icmp eq i32 %v0_10003c08, 65535
  br i1 %v4_10003c08, label %dec_label_pc_10003ccc, label %dec_label_pc_10003c10

dec_label_pc_10003c10:                            ; preds = %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge, %dec_label_pc_10003c08
  %v1_10003c10 = phi i32 [ %v1_10003c10.pre, %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge ], [ 65535, %dec_label_pc_10003c08 ]
  %v0_10003c10 = load i32, i32* %r21.global-to-local, align 4
  %v4_10003c10 = icmp eq i32 %v0_10003c10, %v1_10003c10
  br i1 %v4_10003c10, label %dec_label_pc_10003cdc, label %dec_label_pc_10003c18

dec_label_pc_10003c18:                            ; preds = %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge, %dec_label_pc_10003c10
  %v1_10003c18 = phi i32 [ %v1_10003c18.pre, %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge ], [ %v1_10003c10, %dec_label_pc_10003c10 ]
  %v0_10003c18 = load i32, i32* %r22.global-to-local, align 4
  %v4_10003c18 = icmp eq i32 %v0_10003c18, %v1_10003c18
  br i1 %v4_10003c18, label %dec_label_pc_10003cec, label %dec_label_pc_10003c20

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003c18, %dec_label_pc_10003cec
  %v0_10003c20 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c20 = trunc i32 %v0_10003c20 to i16
  %v2_10003c20 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003c20 = add i32 %v2_10003c20, 10
  %v4_10003c20 = inttoptr i32 %v3_10003c20 to i16*
  store i16 %v1_10003c20, i16* %v4_10003c20, align 2
  %v0_10003c28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c28, i32* @r3, align 4
  %v2_10003c2c = call i32 @function_100043cc(i32 %v0_10003c28, i32 20)
  %v3_10003c2c = trunc i32 %v2_10003c2c to i16
  store i32 %v2_10003c2c, i32* %r3.global-to-local, align 4
  %v3_10003c30 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003c30, i32* %r6.global-to-local, align 4
  %v3_10003c34 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003c34 = add i32 %v3_10003c34, 10
  %v5_10003c34 = inttoptr i32 %v4_10003c34 to i16*
  store i16 %v3_10003c2c, i16* %v5_10003c34, align 2
  %v0_10003c38 = load i32, i32* @r31, align 4
  store i32 %v0_10003c38, i32* @r4, align 4
  %v0_10003c3c = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c3c = trunc i32 %v0_10003c3c to i16
  %v3_10003c3c = add i32 %v0_10003c38, 6
  %v4_10003c3c = inttoptr i32 %v3_10003c3c to i16*
  store i16 %v1_10003c3c, i16* %v4_10003c3c, align 2
  %v0_10003c40 = load i32, i32* %r6.global-to-local, align 4
  %v1_10003c40 = add i32 %v0_10003c40, 12
  store i32 %v1_10003c40, i32* %r6.global-to-local, align 4
  %v0_10003c44 = load i32, i32* @r31, align 4
  %v1_10003c44 = add i32 %v0_10003c44, 4
  %v2_10003c44 = inttoptr i32 %v1_10003c44 to i16*
  %v3_10003c44 = load i16, i16* %v2_10003c44, align 2
  %v4_10003c44 = zext i16 %v3_10003c44 to i32
  store i32 %v4_10003c44, i32* %r5.global-to-local, align 4
  %v0_10003c48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c48, i32* %r3.global-to-local, align 4
  %v4_10003c4c = call i32 @function_10004430(i32 %v0_10003c48, i32 %v0_10003c38, i32 %v4_10003c44, i32 %v1_10003c40)
  %v5_10003c4c = trunc i32 %v4_10003c4c to i16
  store i32 %v4_10003c4c, i32* %r3.global-to-local, align 4
  %v3_10003c50 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003c50, i32* %r7.global-to-local, align 4
  %v0_10003c54 = load i32, i32* @r31, align 4
  %v1_10003c54 = add i32 %v0_10003c54, 2
  %v2_10003c54 = inttoptr i32 %v1_10003c54 to i16*
  %v3_10003c54 = load i16, i16* %v2_10003c54, align 2
  %v4_10003c54 = zext i16 %v3_10003c54 to i32
  store i32 %v4_10003c54, i32* %r0.global-to-local, align 4
  %v0_10003c58 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003c5c = mul i32 %v3_10003c50, 24
  store i32 %v1_10003c5c, i32* %r7.global-to-local, align 4
  %v3_10003c60 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003c60, i32* %r5.global-to-local, align 4
  %v4_10003c64 = add i32 %v0_10003c54, 6
  %v5_10003c64 = inttoptr i32 %v4_10003c64 to i16*
  store i16 %v5_10003c4c, i16* %v5_10003c64, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10003c6c = load i32, i32* %r7.global-to-local, align 4
  %v1_10003c6c = load i32, i32* %r27.global-to-local, align 4
  %v2_10003c6c = add i32 %v1_10003c6c, %v0_10003c6c
  store i32 %v2_10003c6c, i32* %r7.global-to-local, align 4
  %v0_10003c70 = load i32, i32* %r5.global-to-local, align 4
  %v1_10003c70 = add i32 %v0_10003c70, 32
  store i32 %v1_10003c70, i32* %r5.global-to-local, align 4
  %v0_10003c74 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003c74 = trunc i32 %v0_10003c74 to i16
  %v3_10003c74 = add i32 %v2_10003c6c, 2
  %v4_10003c74 = inttoptr i32 %v3_10003c74 to i16*
  store i16 %v1_10003c74, i16* %v4_10003c74, align 2
  %v0_10003c78 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003c78, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268450948, i32* @lr, align 4
  %v6_10003c80 = call i32 @function_10009924(i32 %v0_10003c78, i32 %v0_10003c58, i32 %v1_10003c70, i32 16384, i32 %v2_10003c6c, i32 16)
  store i32 %v6_10003c80, i32* %r3.global-to-local, align 4
  %v3_10003c84 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003c84, i32* %r9.global-to-local, align 4
  %v1_10003c88 = add i32 %v3_10003c84, 1
  store i32 %v1_10003c88, i32* %r11.global-to-local, align 4
  %v1_10003c8c = load i32, i32* %r23.global-to-local, align 4
  %v2_10003c8c = icmp slt i32 %v1_10003c88, %v1_10003c8c
  store i32 %v1_10003c88, i32* %stack_var_-88, align 4
  br i1 %v2_10003c8c, label %dec_label_pc_10003be0, label %dec_label_pc_10003c98

dec_label_pc_10003c98:                            ; preds = %dec_label_pc_10003c20
  %v0_10003c98 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c98 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003c98 = or i1 %v0_10003c98, %v1_10003c98
  br i1 %v2_10003c98, label %dec_label_pc_10003bcc.outer, label %dec_label_pc_10003bd0

dec_label_pc_10003ca0:                            ; preds = %dec_label_pc_10003be0
  %v1_10003ca0 = add i32 %v2_10003bec, 16
  %v2_10003ca0 = inttoptr i32 %v1_10003ca0 to i32*
  %v3_10003ca0 = load i32, i32* %v2_10003ca0, align 4
  store i32 %v3_10003ca0, i32* %r29.global-to-local, align 4
  %v0_10003ca4 = call i32 @function_10005cd4()
  store i32 %v0_10003ca4, i32* %r3.global-to-local, align 4
  %v3_10003ca8 = load i32, i32* %stack_var_-88, align 4
  %v0_10003cac = load i32, i32* %r20.global-to-local, align 4
  %v1_10003cac = load i32, i32* %r30.global-to-local, align 4
  %v4_10003cac = icmp eq i32 %v0_10003cac, %v1_10003cac
  %v1_10003cb0 = mul i32 %v3_10003ca8, 24
  %v1_10003cb4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003cb4 = add i32 %v1_10003cb4, %v1_10003cb0
  store i32 %v2_10003cb4, i32* %r9.global-to-local, align 4
  %v1_10003cb8 = add i32 %v2_10003cb4, 20
  %v2_10003cb8 = inttoptr i32 %v1_10003cb8 to i8*
  %v3_10003cb8 = load i8, i8* %v2_10003cb8, align 1
  %v4_10003cb8 = zext i8 %v3_10003cb8 to i32
  store i32 %v4_10003cb8, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003cb8, 64
  %v2_10003cbc = zext i8 %tmp to i32
  %v3_10003cbc = lshr i32 %v0_10003ca4, %v2_10003cbc
  store i32 %v3_10003cbc, i32* %r3.global-to-local, align 4
  %v0_10003cc0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003cc0 = add i32 %v3_10003cbc, %v0_10003cc0
  store i32 %v2_10003cc0, i32* %r29.global-to-local, align 4
  %v1_10003cc4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003cc4 = add i32 %v1_10003cc4, 16
  %v3_10003cc4 = inttoptr i32 %v2_10003cc4 to i32*
  store i32 %v2_10003cc0, i32* %v3_10003cc4, align 4
  br i1 %v4_10003cac, label %dec_label_pc_10003ccc, label %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge

dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge: ; preds = %dec_label_pc_10003ca0
  %v1_10003c10.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c10

dec_label_pc_10003ccc:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003c08
  %v0_10003ccc = call i32 @function_10005cd4()
  %v1_10003ccc = trunc i32 %v0_10003ccc to i16
  store i32 %v0_10003ccc, i32* %r3.global-to-local, align 4
  %v0_10003cd0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003cd0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10003cd0 = icmp eq i32 %v0_10003cd0, %v1_10003cd0
  %v3_10003cd4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003cd4 = add i32 %v3_10003cd4, 4
  %v5_10003cd4 = inttoptr i32 %v4_10003cd4 to i16*
  store i16 %v1_10003ccc, i16* %v5_10003cd4, align 2
  br i1 %v4_10003cd0, label %dec_label_pc_10003cdc, label %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge

dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge: ; preds = %dec_label_pc_10003ccc
  %v1_10003c18.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c18

dec_label_pc_10003cdc:                            ; preds = %dec_label_pc_10003ccc, %dec_label_pc_10003c10
  %v0_10003cdc = call i32 @function_10005cd4()
  %v1_10003cdc = trunc i32 %v0_10003cdc to i16
  store i32 %v0_10003cdc, i32* %r3.global-to-local, align 4
  %v0_10003ce0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003ce0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10003ce0 = icmp eq i32 %v0_10003ce0, %v1_10003ce0
  %v3_10003ce4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003ce4 = add i32 %v3_10003ce4, 20
  %v5_10003ce4 = inttoptr i32 %v4_10003ce4 to i16*
  store i16 %v1_10003cdc, i16* %v5_10003ce4, align 2
  br i1 %v4_10003ce0, label %dec_label_pc_10003cec, label %dec_label_pc_10003c20

dec_label_pc_10003cec:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003c18
  %v0_10003cec = call i32 @function_10005cd4()
  %v1_10003cec = trunc i32 %v0_10003cec to i16
  store i32 %v0_10003cec, i32* %r3.global-to-local, align 4
  %v3_10003cf0 = load i32, i32* @r31, align 4
  %v4_10003cf0 = add i32 %v3_10003cf0, 2
  %v5_10003cf0 = inttoptr i32 %v4_10003cf0 to i16*
  store i16 %v1_10003cec, i16* %v5_10003cf0, align 2
  br label %dec_label_pc_10003c20

dec_label_pc_10003cf8:                            ; preds = %dec_label_pc_10003abc
  %v0_10003cf8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003cf8, i32* %r3.global-to-local, align 4
  store i32 268451072, i32* @lr, align 4
  %v0_10003cfc = call i32 @function_10008c98()
  store i32 %v0_10003cfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003d00

dec_label_pc_10003d00:                            ; preds = %dec_label_pc_1000397c, %dec_label_pc_10003cf8
  store i32 %v0_10003980, i32* %r0.global-to-local, align 4
  %v1_10003d14 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10003984)
  store i32 %v0_100039bc, i32* %r28.global-to-local, align 4
  store i32 %v0_100039c4, i32* %r29.global-to-local, align 4
  store i32 %v0_100039cc, i32* %r30.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003d58

; uselistorder directives
  uselistorder i32 %v0_10003cec, { 1, 0 }
  uselistorder i32 %v0_10003cdc, { 1, 0 }
  uselistorder i32 %v0_10003ccc, { 1, 0 }
  uselistorder i1 %v1_10003c98, { 1, 0 }
  uselistorder i1 %v0_10003c98, { 1, 0 }
  uselistorder i32 %v1_10003c88, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003c4c, { 1, 0 }
  uselistorder i32 %v2_10003c2c, { 1, 0 }
  uselistorder i32 %v1_10003bf0, { 1, 0 }
  uselistorder i32 %v1_10003b38, { 1, 0 }
  uselistorder i32 %v1_10003b2c, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 5, 2, 4, 3, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 0 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003d00, { 1, 0 }
  uselistorder label %dec_label_pc_10003c20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003bd0, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003b78, { 1, 0 }
}

define i32 @function_10003d5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003d5c:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10003d60 = load i32, i32* @lr, align 4
  store i32 %v0_10003d60, i32* %r0.global-to-local, align 4
  %v0_10003d64 = call i32 @__asm_mfcr()
  store i32 %v0_10003d64, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_10003d74 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003d64, i32* %r15.global-to-local, align 4
  %v0_10003d94 = load i32, i32* @r24, align 4
  %v0_10003d98 = load i32, i32* @r25, align 4
  %v0_10003d9c = load i32, i32* @r26, align 4
  %v0_10003da0 = load i32, i32* @r27, align 4
  %v0_10003da4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003db4 = load i32, i32* @r31, align 4
  %v0_10003dc8 = load i32, i32* @r30, align 4
  store i32 268451280, i32* @lr, align 4
  %v2_10003dcc = call i32 @function_10009cfc(i32 4, i32 4)
  store i32 %v2_10003dcc, i32* %r16.global-to-local, align 4
  %v0_10003dd4 = load i32, i32* @r28, align 4
  %v0_10003de0 = load i32, i32* @r29, align 4
  store i32 %v0_10003de0, i32* %r3.global-to-local, align 4
  store i32 268451304, i32* @lr, align 4
  %v4_10003de4 = inttoptr i32 %v0_10003dd4 to i32*
  %v5_10003de4 = call i32 @function_100006a8(i32 %v0_10003de0, i32* %v4_10003de4, i32 2, i32 0)
  %v5_10003df4 = trunc i32 %v5_10003de4 to i8
  %v0_10003dfc = load i32, i32* @r28, align 4
  %v0_10003e00 = load i32, i32* @r29, align 4
  store i32 %v0_10003e00, i32* %r3.global-to-local, align 4
  store i32 268451336, i32* @lr, align 4
  %v4_10003e04 = inttoptr i32 %v0_10003dfc to i32*
  %v5_10003e04 = call i32 @function_100006a8(i32 %v0_10003e00, i32* %v4_10003e04, i32 3, i32 65535)
  %v0_10003e08 = load i32, i32* @r28, align 4
  store i32 %v5_10003e04, i32* %r19.global-to-local, align 4
  %v0_10003e18 = load i32, i32* @r29, align 4
  store i32 %v0_10003e18, i32* %r3.global-to-local, align 4
  store i32 268451360, i32* @lr, align 4
  %v4_10003e1c = inttoptr i32 %v0_10003e08 to i32*
  %v5_10003e1c = call i32 @function_100006a8(i32 %v0_10003e18, i32* %v4_10003e1c, i32 4, i32 64)
  %v0_10003e20 = load i32, i32* @r28, align 4
  %v5_10003e2c = trunc i32 %v5_10003e1c to i8
  %v0_10003e34 = load i32, i32* @r29, align 4
  store i32 %v0_10003e34, i32* %r3.global-to-local, align 4
  store i32 268451388, i32* @lr, align 4
  %v4_10003e38 = inttoptr i32 %v0_10003e20 to i32*
  %v5_10003e38 = call i32 @function_100006a8(i32 %v0_10003e34, i32* %v4_10003e38, i32 5, i32 0)
  %v0_10003e48 = load i32, i32* @r28, align 4
  %v1_10003e4c = urem i32 %v5_10003e38, 256
  store i32 %v1_10003e4c, i32* %r27.global-to-local, align 4
  %v0_10003e50 = load i32, i32* @r29, align 4
  store i32 %v0_10003e50, i32* %r3.global-to-local, align 4
  store i32 268451416, i32* @lr, align 4
  %v4_10003e54 = inttoptr i32 %v0_10003e48 to i32*
  %v5_10003e54 = call i32 @function_100006a8(i32 %v0_10003e50, i32* %v4_10003e54, i32 6, i32 65535)
  %v0_10003e58 = load i32, i32* @r28, align 4
  store i32 %v5_10003e54, i32* %r20.global-to-local, align 4
  %v0_10003e68 = load i32, i32* @r29, align 4
  store i32 %v0_10003e68, i32* %r3.global-to-local, align 4
  store i32 268451440, i32* @lr, align 4
  %v4_10003e6c = inttoptr i32 %v0_10003e58 to i32*
  %v5_10003e6c = call i32 @function_100006a8(i32 %v0_10003e68, i32* %v4_10003e6c, i32 7, i32 53)
  %v0_10003e74 = load i32, i32* @r28, align 4
  store i32 %v5_10003e6c, i32* %r23.global-to-local, align 4
  %v0_10003e84 = load i32, i32* @r29, align 4
  store i32 %v0_10003e84, i32* %r3.global-to-local, align 4
  store i32 268451468, i32* @lr, align 4
  %v4_10003e88 = inttoptr i32 %v0_10003e74 to i32*
  %v5_10003e88 = call i32 @function_100006a8(i32 %v0_10003e84, i32* %v4_10003e88, i32 9, i32 65535)
  %v0_10003e8c = load i32, i32* @r28, align 4
  store i32 %v5_10003e88, i32* %r24.global-to-local, align 4
  %v0_10003e9c = load i32, i32* @r29, align 4
  store i32 %v0_10003e9c, i32* %r3.global-to-local, align 4
  store i32 268451492, i32* @lr, align 4
  %v4_10003ea0 = inttoptr i32 %v0_10003e8c to i32*
  %v5_10003ea0 = call i32 @function_100006a8(i32 %v0_10003e9c, i32* %v4_10003ea0, i32 0, i32 12)
  %v0_10003eac = load i32, i32* @r28, align 4
  store i32 %v5_10003ea0, i32* %r26.global-to-local, align 4
  %v0_10003eb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003eb4, i32* %r3.global-to-local, align 4
  store i32 268451516, i32* @lr, align 4
  %v4_10003eb8 = inttoptr i32 %v0_10003eac to i32*
  %v5_10003eb8 = call i32 @function_10000238(i32 %v0_10003eb4, i32* %v4_10003eb8, i32 8, i32 0)
  store i32 %v5_10003eb8, i32* %r25.global-to-local, align 4
  store i32 23, i32* %r3.global-to-local, align 4
  store i32 268451528, i32* @lr, align 4
  %v1_10003ec4 = call i32 @function_10007fbc(i32 23)
  store i32 23, i32* %r3.global-to-local, align 4
  %v3_10003ed0 = call i32 @function_10007f08(i32 23, i32* null)
  store i32 %v3_10003ed0, i32* %r3.global-to-local, align 4
  store i32 268451552, i32* @lr, align 4
  %v2_10003edc = call i32 @function_10008e00(i32 %v3_10003ed0, i32 0)
  store i32 %v2_10003edc, i32* @r31, align 4
  store i32 23, i32* %r3.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v1_10003ee8 = call i32 @function_10007f30(i32 23)
  store i32 %v1_10003ee8, i32* %r3.global-to-local, align 4
  %v0_10003eec = load i32, i32* @r31, align 4
  %v1_10003eec = icmp slt i32 %v0_10003eec, 0
  %v3_10003eec = icmp eq i32 %v0_10003eec, 0
  store i1 %v3_10003eec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003eec, label %dec_label_pc_10003fbc, label %dec_label_pc_10003ef4

dec_label_pc_10003ef4:                            ; preds = %dec_label_pc_10003d5c
  %v2_10003ef4 = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_10003ef4, i32* %r28.global-to-local, align 4
  store i32 %v0_10003eec, i32* %r3.global-to-local, align 4
  store i32 268451592, i32* @lr, align 4
  %v3_10003f04 = call i32 @function_10008ed0(i32 %v0_10003eec, i32 %v2_10003ef4, i32 2048)
  store i32 %v3_10003f04, i32* %r30.global-to-local, align 4
  %v0_10003f0c = load i32, i32* @r31, align 4
  store i32 %v0_10003f0c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003f14.24 to i32), i32* @lr, align 4
  %v0_10003f10 = call i32 @function_10008c98()
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 268451612, i32* @lr, align 4
  %v1_10003f18 = call i32 @function_10007fbc(i32 24)
  store i32 24, i32* %r3.global-to-local, align 4
  %v3_10003f24 = call i32 @function_10007f08(i32 24, i32* null)
  %v0_10003f28 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_10003ef4, i32* %r3.global-to-local, align 4
  %v3_10003f34 = bitcast i32* %stack_var_-2148 to i8*
  %v4_10003f34 = call i32 @function_10008908(i8* %v3_10003f34, i32 %v0_10003f28, i32 %v3_10003f24)
  store i32 %v4_10003f34, i32* @r31, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 268451652, i32* @lr, align 4
  %v1_10003f40 = call i32 @function_10007f30(i32 24)
  store i32 %v1_10003f40, i32* %r3.global-to-local, align 4
  %v0_10003f44 = load i32, i32* @r31, align 4
  %v3_10003f44 = icmp eq i32 %v0_10003f44, -1
  store i1 %v3_10003f44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003f44, label %dec_label_pc_10003fbc, label %dec_label_pc_10003f4c

dec_label_pc_10003f4c:                            ; preds = %dec_label_pc_10003ef4
  %v0_10003f4c = load i32, i32* %r30.global-to-local, align 4
  %v3_10003f4c = icmp sgt i32 %v0_10003f4c, %v0_10003f44
  %v4_10003f4c = icmp eq i32 %v0_10003f4c, %v0_10003f44
  store i1 %v4_10003f4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003f4c, label %dec_label_pc_10003f54, label %dec_label_pc_10003fbc

dec_label_pc_10003f54:                            ; preds = %dec_label_pc_10003f4c
  %v2_10003f54 = sub i32 %v0_10003f4c, %v0_10003f44
  store i32 %v2_10003f54, i32* %r0.global-to-local, align 4
  %v1_10003f58 = add i32 %v0_10003f4c, -1
  store i32 %v1_10003f58, i32* %r3.global-to-local, align 4
  store i32 %v2_10003f54, i32* %ctr.global-to-local, align 4
  %v0_10003f64 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003f64 = add i32 %v0_10003f64, %v0_10003f44
  store i32 %v2_10003f64, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10003f6c = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_10003f6c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003f70

dec_label_pc_10003f70:                            ; preds = %dec_label_pc_10003fb4, %dec_label_pc_10003f54
  %v0_10003fb8 = phi i32 [ %v1_10003fb8, %dec_label_pc_10003fb4 ], [ %v2_10003f54, %dec_label_pc_10003f54 ]
  %v0_10003fb4 = phi i32 [ %v1_10003fb4, %dec_label_pc_10003fb4 ], [ %v0_10003f44, %dec_label_pc_10003f54 ]
  %v0_10003f7c = phi i32 [ %v1_10003f7c, %dec_label_pc_10003fb4 ], [ %v2_10003f64, %dec_label_pc_10003f54 ]
  %v0_10003f70 = phi i32 [ %v0_10003f704, %dec_label_pc_10003fb4 ], [ 0, %dec_label_pc_10003f54 ]
  %v3_10003f70 = icmp eq i32 %v0_10003f70, 0
  store i1 %v3_10003f70, i1* %cr7_eq.global-to-local, align 1
  %v1_10003f74 = inttoptr i32 %v0_10003f7c to i8*
  %v2_10003f74 = load i8, i8* %v1_10003f74, align 1
  %v3_10003f74 = zext i8 %v2_10003f74 to i32
  store i32 %v3_10003f74, i32* %r9.global-to-local, align 4
  %v4_10003f78 = icmp eq i32 %v1_10003f58, %v0_10003fb4
  %v1_10003f7c = add i32 %v0_10003f7c, 1
  store i32 %v1_10003f7c, i32* %r11.global-to-local, align 4
  br i1 %v3_10003f70, label %dec_label_pc_10003f8c, label %dec_label_pc_10003f9c

dec_label_pc_10003f8c:                            ; preds = %dec_label_pc_10003f70
  %v3_10003f8c = icmp eq i8 %v2_10003f74, 9
  store i1 %v3_10003f8c, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_10003f74, label %dec_label_pc_10003f98 [
    i8 32, label %dec_label_pc_10003fb4
    i8 9, label %dec_label_pc_10003fb4
  ]

dec_label_pc_10003f98:                            ; preds = %dec_label_pc_10003f8c
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10003f9c

dec_label_pc_10003f9c:                            ; preds = %dec_label_pc_10003f70, %dec_label_pc_10003f98
  %v0_10003f705 = phi i32 [ %v0_10003f70, %dec_label_pc_10003f70 ], [ 1, %dec_label_pc_10003f98 ]
  %v1_10003f9c = add nuw nsw i32 %v3_10003f74, 208
  %v1_10003fa0 = urem i32 %v1_10003f9c, 256
  store i32 %v1_10003fa0, i32* %r0.global-to-local, align 4
  %v2_10003fa4 = icmp ugt i32 %v1_10003fa0, 9
  %v3_10003fa4 = icmp eq i32 %v1_10003fa0, 9
  store i1 %v3_10003fa4, i1* %cr7_eq.global-to-local, align 1
  %v3_10003f80.not = icmp ne i8 %v2_10003f74, 46
  %brmerge.not = and i1 %v3_10003f80.not, %v2_10003fa4
  %brmerge26 = or i1 %v4_10003f78, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_10003ff0, label %dec_label_pc_10003fb4

dec_label_pc_10003fb4:                            ; preds = %dec_label_pc_10003f9c, %dec_label_pc_10003f8c, %dec_label_pc_10003f8c
  %v0_10003f704 = phi i32 [ 0, %dec_label_pc_10003f8c ], [ 0, %dec_label_pc_10003f8c ], [ %v0_10003f705, %dec_label_pc_10003f9c ]
  %v1_10003fb4 = add i32 %v0_10003fb4, 1
  %v1_10003fb8 = add i32 %v0_10003fb8, -1
  store i32 %v1_10003fb8, i32* %ctr.global-to-local, align 4
  %v2_10003fb8 = icmp eq i32 %v1_10003fb8, 0
  br i1 %v2_10003fb8, label %dec_label_pc_10003fbc, label %dec_label_pc_10003f70

dec_label_pc_10003fbc:                            ; preds = %dec_label_pc_10003fb4, %dec_label_pc_10003f4c, %dec_label_pc_10003ef4, %dec_label_pc_10003d5c
  %v0_10003fbc = call i32 @function_10005cd4()
  %v1_10003fc0 = urem i32 %v0_10003fbc, 4
  store i32 %v1_10003fc0, i32* %r3.global-to-local, align 4
  %v3_10003fc4 = icmp eq i32 %v1_10003fc0, 1
  store i1 %v3_10003fc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003fc4, label %dec_label_pc_100043a8, label %dec_label_pc_10003fcc

dec_label_pc_10003fcc:                            ; preds = %dec_label_pc_10003fbc
  %v1_10003fc4 = icmp eq i32 %v1_10003fc0, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003fc4, label %dec_label_pc_100043c0, label %dec_label_pc_10003fd4

dec_label_pc_10003fd4:                            ; preds = %dec_label_pc_10003fcc
  %v2_10003fd4 = icmp eq i32 %v1_10003fc0, 3
  %v3_10003fd4 = icmp eq i32 %v1_10003fc0, 2
  store i1 %v3_10003fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003fd4, label %dec_label_pc_100043b4, label %dec_label_pc_10003fdc

dec_label_pc_10003fdc:                            ; preds = %dec_label_pc_10003fd4
  store i1 %v2_10003fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10003fd4, label %dec_label_pc_10003fe4, label %dec_label_pc_10004020

dec_label_pc_10003fe4:                            ; preds = %dec_label_pc_10003fdc
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_10003ff0:                            ; preds = %dec_label_pc_10003f9c
  %v2_10003ff0 = sub i32 %v0_10003fb4, %v0_10003f44
  store i32 %v2_10003f6c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004004.25 to i32), i32* @lr, align 4
  %v3_10004000 = call i32 @function_100085dc(i32 %v2_10003f6c, i32 %v2_10003f64, i32 %v2_10003ff0)
  %v2_10004004 = ptrtoint i32* %stack_var_-2184 to i32
  %v2_10004008 = add i32 %v2_10003ff0, %v2_10004004
  store i32 %v2_10004008, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10004010 = add i32 %v2_10004008, 4
  %v4_10004010 = inttoptr i32 %v3_10004010 to i8*
  store i8 0, i8* %v4_10004010, align 1
  store i32 %v2_10003f6c, i32* %r3.global-to-local, align 4
  store i32 268451868, i32* @lr, align 4
  %v1_10004018 = call i32 @function_10009704(i32 %v2_10003f6c)
  store i32 %v1_10004018, i32* %r3.global-to-local, align 4
  store i32 %v1_10004018, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_10004020:                            ; preds = %dec_label_pc_10003fdc, %dec_label_pc_10003fe4, %dec_label_pc_100043c0, %dec_label_pc_100043b4, %dec_label_pc_100043a8, %dec_label_pc_10003ff0
  %v0_10004020 = load i32, i32* %r25.global-to-local, align 4
  %v3_10004020 = icmp eq i32 %v0_10004020, 0
  store i1 %v3_10004020, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004020, label %dec_label_pc_10004348, label %dec_label_pc_10004028

dec_label_pc_10004028:                            ; preds = %dec_label_pc_10004020
  store i32 %v0_10004020, i32* %r3.global-to-local, align 4
  store i32 268451888, i32* @lr, align 4
  %v1_1000402c = inttoptr i32 %v0_10004020 to i8*
  %v2_1000402c = call i32 @function_10008558(i8* %v1_1000402c)
  store i32 %v2_1000402c, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451908, i32* @lr, align 4
  %v3_10004040 = call i32 @function_100099a0(i32 2, i32 3, i32 17)
  store i32 %v3_10004040, i32* %r3.global-to-local, align 4
  %v3_10004044 = icmp eq i32 %v3_10004040, -1
  store i1 %v3_10004044, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10004040, i32* %r22.global-to-local, align 4
  br i1 %v3_10004044, label %dec_label_pc_10004348, label %dec_label_pc_10004050

dec_label_pc_10004050:                            ; preds = %dec_label_pc_10004028
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000405c = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268451948, i32* @lr, align 4
  %v4_10004068 = call i32 @function_10009964(i32 0, i32 3, i32 %v2_1000405c, i32 4)
  store i32 %v4_10004068, i32* %r3.global-to-local, align 4
  %v3_1000406c = icmp eq i32 %v4_10004068, -1
  store i1 %v3_1000406c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000406c, label %dec_label_pc_10004340, label %dec_label_pc_10004074

dec_label_pc_10004074:                            ; preds = %dec_label_pc_10004050
  %v0_10004074 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004074 = icmp slt i32 %v0_10004074, 0
  %v3_10004074 = icmp eq i32 %v0_10004074, 0
  store i1 %v1_10004074, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004074, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000407c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000407c = urem i32 %v0_1000407c, 65536
  store i32 %v1_1000407c, i32* %r17.global-to-local, align 4
  %v0_10004080 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004080 = urem i32 %v0_10004080, 65536
  store i32 %v1_10004080, i32* %r18.global-to-local, align 4
  %v0_10004084 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004084 = urem i32 %v0_10004084, 65536
  store i32 %v1_10004084, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000408c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000408c = urem i32 %v0_1000408c, 65536
  store i32 %v1_1000408c, i32* %r20.global-to-local, align 4
  %v0_10004090 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004090 = urem i32 %v0_10004090, 256
  store i32 %v1_10004090, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_10004074, 1
  %v1_10004334 = load i32, i32* @r29, align 4
  %v2_10004334 = add i32 %v1_10004334, %v1_10004090
  store i32 %v2_10004334, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100041f8.preheader, label %dec_label_pc_10004098

dec_label_pc_10004098:                            ; preds = %dec_label_pc_10004074
  %v1_1000409c = icmp slt i32 %v1_10004334, 0
  %v3_1000409c = icmp eq i32 %v1_10004334, 0
  store i1 %v1_1000409c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_1000409c, i1* %cr3_eq.global-to-local, align 1
  %v1_100040a0 = urem i32 %v2_10004334, 65536
  %v0_100040a4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100040a4 = icmp eq i32 %v0_100040a4, 0
  store i1 %v3_100040a4, i1* %cr2_eq.global-to-local, align 1
  %v1_100040a8 = add nuw nsw i32 %v1_100040a0, 27
  store i32 %v1_100040a8, i32* %r0.global-to-local, align 4
  %v1_100040ac = add nuw nsw i32 %v1_100040a0, 47
  store i32 %v1_100040ac, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10004334, 47
  %v1_100040b0 = urem i32 %fold, 65536
  store i32 %v1_100040b0, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10004334, 27
  %v1_100040b4 = urem i32 %fold3, 65536
  store i32 %v1_100040b4, i32* %r27.global-to-local, align 4
  %v1_100040b8 = add i32 %v1_10004334, 1
  store i32 %v1_100040b8, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10004108 = sext i8 %v5_10003df4 to i32
  %v4_10004110 = sext i8 %v5_10003e2c to i32
  br label %dec_label_pc_100040c0

dec_label_pc_100040c0:                            ; preds = %dec_label_pc_100041d0, %dec_label_pc_10004098
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268452044, i32* @lr, align 4
  %v2_100040c8 = call i32 @function_10009cfc(i32 600, i32 1)
  store i32 %v2_100040c8, i32* %r3.global-to-local, align 4
  %v3_100040cc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100040cc, i32* %r0.global-to-local, align 4
  %v0_100040d0 = load i32, i32* @r31, align 4
  %v1_100040d0 = mul i32 %v0_100040d0, 4
  store i32 %v1_100040d0, i32* %r9.global-to-local, align 4
  %v2_100040d4 = load i32, i32* %r16.global-to-local, align 4
  %v3_100040d4 = add i32 %v2_100040d4, %v1_100040d0
  %v4_100040d4 = inttoptr i32 %v3_100040d4 to i32*
  store i32 %v2_100040c8, i32* %v4_100040d4, align 4
  %v0_100040d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100040d8 = mul i32 %v0_100040d8, 4
  store i32 %v1_100040d8, i32* %r0.global-to-local, align 4
  %v0_100040dc = load i32, i32* %r16.global-to-local, align 4
  %v2_100040dc = add i32 %v0_100040dc, %v1_100040d8
  %v3_100040dc = inttoptr i32 %v2_100040dc to i32*
  %v4_100040dc = load i32, i32* %v3_100040dc, align 4
  store i32 %v4_100040dc, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100040e4 = inttoptr i32 %v4_100040dc to i32*
  %v2_100040e4 = load i32, i32* %v1_100040e4, align 4
  store i32 %v2_100040e4, i32* %r9.global-to-local, align 4
  %v1_100040e8 = add i32 %v4_100040dc, 20
  store i32 %v1_100040e8, i32* %r10.global-to-local, align 4
  %v0_100040ec = load i32, i32* %r17.global-to-local, align 4
  %v1_100040ec = trunc i32 %v0_100040ec to i16
  %v3_100040ec = add i32 %v4_100040dc, 4
  %v4_100040ec = inttoptr i32 %v3_100040ec to i16*
  store i16 %v1_100040ec, i16* %v4_100040ec, align 2
  %v0_100040f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100040f0 = add i32 %v0_100040f0, 28
  store i32 %v1_100040f0, i32* %r8.global-to-local, align 4
  %v1_100040f4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100040f4, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100040fc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100040fc, i32* %r9.global-to-local, align 4
  %v1_10004100 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004100 = inttoptr i32 %v1_10004100 to i32*
  store i32 %v1_100040fc, i32* %v2_10004100, align 4
  %v0_10004104 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004104 = trunc i32 %v0_10004104 to i16
  %v2_10004104 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004104 = add i32 %v2_10004104, 2
  %v4_10004104 = inttoptr i32 %v3_10004104 to i16*
  store i16 %v1_10004104, i16* %v4_10004104, align 2
  store i32 %v4_10004108, i32* %r0.global-to-local, align 4
  %v2_1000410c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000410c = add i32 %v2_1000410c, 1
  %v4_1000410c = inttoptr i32 %v3_1000410c to i8*
  store i8 %v5_10003df4, i8* %v4_1000410c, align 1
  store i32 %v4_10004110, i32* %r7.global-to-local, align 4
  %v2_10004114 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004114 = add i32 %v2_10004114, 8
  %v4_10004114 = inttoptr i32 %v3_10004114 to i8*
  store i8 %v5_10003e2c, i8* %v4_10004114, align 1
  %v0_10004118 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004118, label %dec_label_pc_10004124, label %dec_label_pc_1000411c

dec_label_pc_1000411c:                            ; preds = %dec_label_pc_100040c0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004120 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004120 = add i32 %v2_10004120, 6
  %v4_10004120 = inttoptr i32 %v3_10004120 to i16*
  store i16 16384, i16* %v4_10004120, align 2
  br label %dec_label_pc_10004124

dec_label_pc_10004124:                            ; preds = %dec_label_pc_100040c0, %dec_label_pc_1000411c
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_1000412c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000412c = add i32 %v2_1000412c, 9
  %v4_1000412c = inttoptr i32 %v3_1000412c to i8*
  store i8 17, i8* %v4_1000412c, align 1
  %v0_10004130 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004130 = add i32 %v0_10004130, 41
  store i32 %v1_10004130, i32* %r9.global-to-local, align 4
  %v0_10004134 = load i32, i32* %r27.global-to-local, align 4
  %v1_10004134 = trunc i32 %v0_10004134 to i16
  %v2_10004134 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004134 = add i32 %v2_10004134, 4
  %v4_10004134 = inttoptr i32 %v3_10004134 to i16*
  store i16 %v1_10004134, i16* %v4_10004134, align 2
  %v0_10004138 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r23.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, %v0_10004138
  store i32 %v2_10004138, i32* %r30.global-to-local, align 4
  %v3_1000413c = load i32, i32* @global_var_1001bd68.14, align 4
  store i32 %v3_1000413c, i32* %r0.global-to-local, align 4
  %v1_10004140 = add i32 %v2_10004138, 1
  store i32 %v1_10004140, i32* %r31.global-to-local, align 4
  %v0_10004144 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004144 = trunc i32 %v0_10004144 to i16
  %v2_10004144 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004144 = add i32 %v2_10004144, 2
  %v4_10004144 = inttoptr i32 %v3_10004144 to i16*
  store i16 %v1_10004144, i16* %v4_10004144, align 2
  %v0_10004148 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004148, i32* %r3.global-to-local, align 4
  %v0_1000414c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000414c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000414c = add i32 %v1_1000414c, 12
  %v3_1000414c = inttoptr i32 %v2_1000414c to i32*
  store i32 %v0_1000414c, i32* %v3_1000414c, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10004154 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004154 = trunc i32 %v0_10004154 to i16
  %v2_10004154 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004154 = add i32 %v2_10004154, 20
  %v4_10004154 = inttoptr i32 %v3_10004154 to i16*
  store i16 %v1_10004154, i16* %v4_10004154, align 2
  %v0_10004158 = load i32, i32* %r25.global-to-local, align 4
  %v0_1000415c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000415c = trunc i32 %v0_1000415c to i16
  %v2_1000415c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000415c = add i32 %v2_1000415c, 2
  %v4_1000415c = inttoptr i32 %v3_1000415c to i16*
  store i16 %v1_1000415c, i16* %v4_1000415c, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10004164 = load i32, i32* %r8.global-to-local, align 4
  %v3_10004164 = add i32 %v2_10004164, 4
  %v4_10004164 = inttoptr i32 %v3_10004164 to i16*
  store i16 1, i16* %v4_10004164, align 2
  %v0_10004168 = load i32, i32* @r28, align 4
  %v0_1000416c = load i32, i32* @r21, align 4
  %v1_1000416c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000416c = add i32 %v1_1000416c, 16
  %v3_1000416c = inttoptr i32 %v2_1000416c to i32*
  store i32 %v0_1000416c, i32* %v3_1000416c, align 4
  %v0_10004170 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004170 = trunc i32 %v0_10004170 to i16
  %v2_10004170 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004170 = add i32 %v2_10004170, 28
  %v4_10004170 = inttoptr i32 %v3_10004170 to i16*
  store i16 %v1_10004170, i16* %v4_10004170, align 2
  %v0_10004174 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004174 = trunc i32 %v0_10004174 to i8
  %v2_10004174 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004174 = add i32 %v2_10004174, 40
  %v4_10004174 = inttoptr i32 %v3_10004174 to i8*
  store i8 %v1_10004174, i8* %v4_10004174, align 1
  store i32 268452220, i32* @lr, align 4
  %v3_10004178 = call i32 @function_100085dc(i32 %v0_10004148, i32 %v0_10004158, i32 %v0_10004168)
  store i32 %v3_10004178, i32* %r3.global-to-local, align 4
  %v0_1000417c = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000417c = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_1000417c = or i1 %v0_1000417c, %v1_1000417c
  br i1 %v2_1000417c, label %dec_label_pc_100041c8, label %dec_label_pc_10004180

dec_label_pc_10004180:                            ; preds = %dec_label_pc_10004124
  %v0_10004180 = load i32, i32* @r29, align 4
  store i32 %v0_10004180, i32* %ctr.global-to-local, align 4
  %v0_10004184 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004184, i32* %r3.global-to-local, align 4
  %v0_10004188 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10004188, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100041a8

dec_label_pc_10004198:                            ; preds = %dec_label_pc_100041a8
  %v1_10004198 = urem i32 %v1_100041ac, 256
  br label %dec_label_pc_1000419c

dec_label_pc_1000419c:                            ; preds = %dec_label_pc_100041b8, %dec_label_pc_10004198
  %v0_100041a4 = phi i32 [ %v0_100041a4.pre, %dec_label_pc_100041b8 ], [ %v0_100041a418, %dec_label_pc_10004198 ]
  %v0_100041a0 = phi i32 [ %v0_100041bc, %dec_label_pc_100041b8 ], [ %v0_100041a016, %dec_label_pc_10004198 ]
  %v2_100041b813 = phi i32 [ %v0_100041bc, %dec_label_pc_100041b8 ], [ %v2_100041b8, %dec_label_pc_10004198 ]
  %v0_1000419c = phi i32 [ %v0_1000419c.pre, %dec_label_pc_100041b8 ], [ %v0_100041a8, %dec_label_pc_10004198 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100041b8 ], [ %v1_10004198, %dec_label_pc_10004198 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_1000419c = add i32 %v0_1000419c, 1
  store i32 %v1_1000419c, i32* %r10.global-to-local, align 4
  %v1_100041a0 = add i32 %v0_100041a0, 1
  store i32 %v1_100041a0, i32* %r3.global-to-local, align 4
  %v1_100041a4 = add i32 %v0_100041a4, -1
  store i32 %v1_100041a4, i32* %ctr.global-to-local, align 4
  %v2_100041a4 = icmp eq i32 %v1_100041a4, 0
  br i1 %v2_100041a4, label %dec_label_pc_100041d0.loopexit, label %dec_label_pc_100041a8

dec_label_pc_100041a8:                            ; preds = %dec_label_pc_1000419c, %dec_label_pc_10004180
  %v0_100041a418 = phi i32 [ %v1_100041a4, %dec_label_pc_1000419c ], [ %v0_10004180, %dec_label_pc_10004180 ]
  %v0_100041a016 = phi i32 [ %v1_100041a0, %dec_label_pc_1000419c ], [ %v0_10004184, %dec_label_pc_10004180 ]
  %v2_100041b8 = phi i32 [ %v2_100041b813, %dec_label_pc_1000419c ], [ %v0_10004188, %dec_label_pc_10004180 ]
  %v0_100041b8 = phi i32 [ %storemerge, %dec_label_pc_1000419c ], [ 0, %dec_label_pc_10004180 ]
  %v0_100041a8 = phi i32 [ %v1_1000419c, %dec_label_pc_1000419c ], [ 0, %dec_label_pc_10004180 ]
  %v1_100041a8 = load i32, i32* %r25.global-to-local, align 4
  %v2_100041a8 = add i32 %v1_100041a8, %v0_100041a8
  %v3_100041a8 = inttoptr i32 %v2_100041a8 to i8*
  %v4_100041a8 = load i8, i8* %v3_100041a8, align 1
  %v5_100041a8 = zext i8 %v4_100041a8 to i32
  store i32 %v5_100041a8, i32* %r0.global-to-local, align 4
  %v1_100041ac = add nsw i32 %v0_100041b8, 1
  store i32 %v1_100041ac, i32* %r11.global-to-local, align 4
  %v3_100041b0 = icmp eq i8 %v4_100041a8, 46
  store i1 %v3_100041b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100041b0, label %dec_label_pc_100041b8, label %dec_label_pc_10004198

dec_label_pc_100041b8:                            ; preds = %dec_label_pc_100041a8
  %v1_100041b8 = trunc i32 %v0_100041b8 to i8
  %v3_100041b8 = inttoptr i32 %v2_100041b8 to i8*
  store i8 %v1_100041b8, i8* %v3_100041b8, align 1
  %v0_100041bc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100041bc, i32* %r9.global-to-local, align 4
  %v0_1000419c.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_100041a4.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000419c

dec_label_pc_100041c8:                            ; preds = %dec_label_pc_10004124
  %v0_100041c8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100041c8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0.loopexit:                   ; preds = %dec_label_pc_1000419c
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0:                            ; preds = %dec_label_pc_100041d0.loopexit, %dec_label_pc_100041c8
  %v2_100041d0 = phi i32 [ %v2_100041b813, %dec_label_pc_100041d0.loopexit ], [ %v0_100041c8, %dec_label_pc_100041c8 ]
  %v0_100041d0.off0 = phi i8 [ %extract.t, %dec_label_pc_100041d0.loopexit ], [ 0, %dec_label_pc_100041c8 ]
  %v3_100041d0 = inttoptr i32 %v2_100041d0 to i8*
  store i8 %v0_100041d0.off0, i8* %v3_100041d0, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100041d8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100041d8 = load i32, i32* @r29, align 4
  %v2_100041d8 = add i32 %v1_100041d8, %v0_100041d8
  store i32 %v2_100041d8, i32* %r9.global-to-local, align 4
  %v3_100041dc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100041dc, i32* %r11.global-to-local, align 4
  %v3_100041e0 = add i32 %v2_100041d8, 4
  %v4_100041e0 = inttoptr i32 %v3_100041e0 to i16*
  store i16 1, i16* %v4_100041e0, align 2
  %v0_100041e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100041e4 = add i32 %v0_100041e4, 1
  store i32 %v1_100041e4, i32* %r31.global-to-local, align 4
  %v0_100041e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041e8 = trunc i32 %v0_100041e8 to i16
  %v2_100041e8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100041e8 = add i32 %v2_100041e8, 2
  %v4_100041e8 = inttoptr i32 %v3_100041e8 to i16*
  store i16 %v1_100041e8, i16* %v4_100041e8, align 2
  %v0_100041ec = load i32, i32* %r31.global-to-local, align 4
  %v1_100041ec = load i32, i32* %r15.global-to-local, align 4
  %v2_100041ec = icmp slt i32 %v0_100041ec, %v1_100041ec
  %v4_100041ec = icmp eq i32 %v0_100041ec, %v1_100041ec
  store i1 %v4_100041ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100041ec, i32* %stack_var_-2184, align 4
  br i1 %v2_100041ec, label %dec_label_pc_100040c0, label %dec_label_pc_100041f8.preheader.loopexit

dec_label_pc_100041f8.preheader.loopexit:         ; preds = %dec_label_pc_100041d0
  %v0_100041f8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100041f8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100041f8.preheader

dec_label_pc_100041f8.preheader:                  ; preds = %dec_label_pc_100042f0, %dec_label_pc_10004074, %dec_label_pc_100041f8.preheader.loopexit
  %v1_100041f8 = phi i1 [ %v1_10004074, %dec_label_pc_10004074 ], [ %v1_100041f8.pre, %dec_label_pc_100041f8.preheader.loopexit ], [ %v1_100042f0, %dec_label_pc_100042f0 ]
  %v0_100041f8 = phi i1 [ %v3_10004074, %dec_label_pc_10004074 ], [ %v0_100041f8.pre, %dec_label_pc_100041f8.preheader.loopexit ], [ %v0_100042f0, %dec_label_pc_100042f0 ]
  %v2_100041f8 = or i1 %v1_100041f8, %v0_100041f8
  br label %dec_label_pc_100041f8

dec_label_pc_100041f8:                            ; preds = %dec_label_pc_100041f8.preheader, %dec_label_pc_100041f8
  br i1 %v2_100041f8, label %dec_label_pc_100041f8, label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %dec_label_pc_100041f8, %dec_label_pc_100042f0
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000420c = load i32, i32* %r19.global-to-local, align 4
  %v4_1000420c = icmp eq i32 %v0_1000420c, 65535
  store i1 %v4_1000420c, i1* %cr7_eq.global-to-local, align 1
  %v0_10004210 = load i32, i32* %r18.global-to-local, align 4
  %v2_10004210 = icmp slt i32 %v0_10004210, 65535
  %v4_10004210 = icmp eq i32 %v0_10004210, 65535
  store i1 %v2_10004210, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_10004210, i1* %cr3_eq.global-to-local, align 1
  %v0_10004214 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004214 = icmp eq i32 %v0_10004214, 65535
  store i1 %v4_10004214, i1* %cr2_eq.global-to-local, align 1
  %v0_10004218 = load i32, i32* @r24, align 4
  %v1_10004218 = add i32 %v0_10004218, 27
  store i32 %v1_10004218, i32* @r30, align 4
  %v0_1000421c = call i32 @__asm_mfcr()
  store i32 %v0_1000421c, i32* %r3.global-to-local, align 4
  %v1_10004220 = mul i32 %v0_1000421c, 268435456
  store i32 %v1_10004220, i32* @r26, align 4
  %v0_10004224 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004224 = load i32, i32* %r0.global-to-local, align 4
  %v4_10004224 = icmp eq i32 %v0_10004224, %v1_10004224
  store i1 %v4_10004224, i1* %cr7_eq.global-to-local, align 1
  %v0_10004228 = load i32, i32* @r24, align 4
  %v1_10004228 = add i32 %v0_10004228, 47
  store i32 %v1_10004228, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10004230 = call i32 @__asm_mfcr()
  store i32 %v0_10004230, i32* %r3.global-to-local, align 4
  %v1_10004234 = mul i32 %v0_10004230, 268435456
  store i32 %v1_10004234, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_1000423c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000423c

dec_label_pc_1000423c:                            ; preds = %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge, %dec_label_pc_100041fc
  %v0_10004240 = phi i32 [ %v0_10004240.pre, %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge ], [ %v1_10004234, %dec_label_pc_100041fc ]
  %v0_1000423c = phi i32 [ %v1_100042e0, %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge ], [ %v0_1000423c.pre, %dec_label_pc_100041fc ]
  %v1_1000423c = mul i32 %v0_1000423c, 4
  store i32 %v1_1000423c, i32* %r0.global-to-local, align 4
  %v1_10004240 = mul i32 %v0_10004240, 16
  %v2_10004240 = udiv i32 %v0_10004240, 268435456
  %v3_10004240 = or i32 %v2_10004240, %v1_10004240
  store i32 %v3_10004240, i32* %r27.global-to-local, align 4
  %v1_10004244 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004240)
  %v1_10004248 = mul nuw i32 %v2_10004240, 268435456
  %v2_10004248 = urem i32 %v0_10004240, 268435456
  %v3_10004248 = or i32 %v1_10004248, %v2_10004248
  store i32 %v3_10004248, i32* @r27, align 4
  %v0_1000424c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000424c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000424c = add i32 %v1_1000424c, %v0_1000424c
  %v3_1000424c = inttoptr i32 %v2_1000424c to i32*
  %v4_1000424c = load i32, i32* %v3_1000424c, align 4
  store i32 %v4_1000424c, i32* @r29, align 4
  %v1_10004250 = add i32 %v4_1000424c, 20
  store i32 %v1_10004250, i32* @r28, align 4
  %v0_10004254 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004254, label %dec_label_pc_100042f8, label %dec_label_pc_10004258

dec_label_pc_10004258:                            ; preds = %dec_label_pc_1000423c
  %v0_10004258 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004258, label %dec_label_pc_10004304, label %dec_label_pc_1000425c

dec_label_pc_1000425c:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004258
  %v0_1000425c = load i32, i32* @r26, align 4
  %v1_1000425c = mul i32 %v0_1000425c, 16
  %v2_1000425c = udiv i32 %v0_1000425c, 268435456
  %v3_1000425c = or i32 %v2_1000425c, %v1_1000425c
  store i32 %v3_1000425c, i32* %r26.global-to-local, align 4
  %v1_10004260 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000425c)
  %v1_10004264 = mul nuw i32 %v2_1000425c, 268435456
  %v2_10004264 = urem i32 %v0_1000425c, 268435456
  %v3_10004264 = or i32 %v1_10004264, %v2_10004264
  store i32 %v3_10004264, i32* @r26, align 4
  %v0_10004268 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004268, label %dec_label_pc_1000431c, label %dec_label_pc_1000426c

dec_label_pc_1000426c:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_1000425c
  %v0_1000426c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000426c, label %dec_label_pc_10004328, label %dec_label_pc_10004270

dec_label_pc_10004270:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_1000426c, %dec_label_pc_10004328
  %v0_10004270 = load i32, i32* @r29, align 4
  %v1_10004270 = add i32 %v0_10004270, 41
  store i32 %v1_10004270, i32* %r3.global-to-local, align 4
  %v0_10004274 = load i32, i32* %r23.global-to-local, align 4
  store i32 268452476, i32* @lr, align 4
  %v2_10004278 = inttoptr i32 %v1_10004270 to i8*
  %v3_10004278 = call i32 @function_10005d94(i8* %v2_10004278, i32 %v0_10004274)
  %v0_1000427c = load i32, i32* @r25, align 4
  %v1_1000427c = trunc i32 %v0_1000427c to i16
  %v2_1000427c = load i32, i32* @r29, align 4
  %v3_1000427c = add i32 %v2_1000427c, 10
  %v4_1000427c = inttoptr i32 %v3_1000427c to i16*
  store i16 %v1_1000427c, i16* %v4_1000427c, align 2
  %v0_10004284 = load i32, i32* @r29, align 4
  store i32 %v0_10004284, i32* @r3, align 4
  %v2_10004288 = call i32 @function_100043cc(i32 %v0_10004284, i32 20)
  %v3_10004288 = trunc i32 %v2_10004288 to i16
  %v0_1000428c = load i32, i32* @r28, align 4
  store i32 %v0_1000428c, i32* @r4, align 4
  %v3_10004290 = load i32, i32* @r29, align 4
  %v4_10004290 = add i32 %v3_10004290, 10
  %v5_10004290 = inttoptr i32 %v4_10004290 to i16*
  store i16 %v3_10004288, i16* %v5_10004290, align 2
  %v0_10004294 = load i32, i32* @r30, align 4
  %v0_10004298 = load i32, i32* @r25, align 4
  %v1_10004298 = trunc i32 %v0_10004298 to i16
  %v2_10004298 = load i32, i32* @r28, align 4
  %v3_10004298 = add i32 %v2_10004298, 6
  %v4_10004298 = inttoptr i32 %v3_10004298 to i16*
  store i16 %v1_10004298, i16* %v4_10004298, align 2
  %v0_1000429c = load i32, i32* @r29, align 4
  store i32 %v0_1000429c, i32* %r3.global-to-local, align 4
  %v0_100042a0 = load i32, i32* @r28, align 4
  %v1_100042a0 = add i32 %v0_100042a0, 4
  %v2_100042a0 = inttoptr i32 %v1_100042a0 to i16*
  %v3_100042a0 = load i16, i16* %v2_100042a0, align 2
  %v4_100042a0 = zext i16 %v3_100042a0 to i32
  %v4_100042a4 = call i32 @function_10004430(i32 %v0_1000429c, i32 %v0_1000428c, i32 %v4_100042a0, i32 %v0_10004294)
  %v5_100042a4 = trunc i32 %v4_100042a4 to i16
  store i32 %v4_100042a4, i32* %r3.global-to-local, align 4
  %v3_100042a8 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100042a8, i32* %r7.global-to-local, align 4
  %v0_100042ac = load i32, i32* @r28, align 4
  %v1_100042ac = add i32 %v0_100042ac, 2
  %v2_100042ac = inttoptr i32 %v1_100042ac to i16*
  %v3_100042ac = load i16, i16* %v2_100042ac, align 2
  %v4_100042ac = zext i16 %v3_100042ac to i32
  store i32 %v4_100042ac, i32* %r0.global-to-local, align 4
  %v0_100042b0 = load i32, i32* @r29, align 4
  %v1_100042b4 = mul i32 %v3_100042a8, 24
  store i32 %v1_100042b4, i32* %r7.global-to-local, align 4
  %v4_100042b8 = add i32 %v0_100042ac, 6
  %v5_100042b8 = inttoptr i32 %v4_100042b8 to i16*
  store i16 %v5_100042a4, i16* %v5_100042b8, align 2
  %v0_100042bc = load i32, i32* @r31, align 4
  %v0_100042c0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100042c0, i32* %r3.global-to-local, align 4
  %v0_100042c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100042c4 = load i32, i32* %r14.global-to-local, align 4
  %v2_100042c4 = add i32 %v1_100042c4, %v0_100042c4
  store i32 %v2_100042c4, i32* %r7.global-to-local, align 4
  %v0_100042cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100042cc = trunc i32 %v0_100042cc to i16
  %v3_100042cc = add i32 %v2_100042c4, 2
  %v4_100042cc = inttoptr i32 %v3_100042cc to i16*
  store i16 %v1_100042cc, i16* %v4_100042cc, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_100042d4 = load i32, i32* @r21, align 4
  %v2_100042d4 = add i32 %v2_100042c4, 4
  %v3_100042d4 = inttoptr i32 %v2_100042d4 to i32*
  store i32 %v0_100042d4, i32* %v3_100042d4, align 4
  store i32 268452572, i32* @lr, align 4
  %v6_100042d8 = call i32 @function_10009924(i32 %v0_100042c0, i32 %v0_100042b0, i32 %v0_100042bc, i32 16384, i32 %v2_100042c4, i32 16)
  store i32 %v6_100042d8, i32* %r3.global-to-local, align 4
  %v3_100042dc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100042dc, i32* %r9.global-to-local, align 4
  %v1_100042e0 = add i32 %v3_100042dc, 1
  store i32 %v1_100042e0, i32* %r0.global-to-local, align 4
  %v1_100042e4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100042e4 = icmp slt i32 %v1_100042e0, %v1_100042e4
  %v4_100042e4 = icmp eq i32 %v1_100042e0, %v1_100042e4
  store i1 %v4_100042e4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100042e0, i32* %stack_var_-2184, align 4
  br i1 %v2_100042e4, label %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge, label %dec_label_pc_100042f0

dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge: ; preds = %dec_label_pc_10004270
  %v0_10004240.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000423c

dec_label_pc_100042f0:                            ; preds = %dec_label_pc_10004270
  %v0_100042f0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100042f0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100042f0 = or i1 %v0_100042f0, %v1_100042f0
  br i1 %v2_100042f0, label %dec_label_pc_100041f8.preheader, label %dec_label_pc_100041fc

dec_label_pc_100042f8:                            ; preds = %dec_label_pc_1000423c
  %v0_100042f8 = call i32 @function_10005cd4()
  %v1_100042f8 = trunc i32 %v0_100042f8 to i16
  store i32 %v0_100042f8, i32* %r3.global-to-local, align 4
  %v3_100042fc = load i32, i32* @r29, align 4
  %v4_100042fc = add i32 %v3_100042fc, 4
  %v5_100042fc = inttoptr i32 %v4_100042fc to i16*
  store i16 %v1_100042f8, i16* %v5_100042fc, align 2
  %v0_10004300 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004300, label %dec_label_pc_10004304, label %dec_label_pc_1000425c

dec_label_pc_10004304:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004258
  %v0_10004304 = call i32 @function_10005cd4()
  %v1_10004304 = trunc i32 %v0_10004304 to i16
  store i32 %v0_10004304, i32* %r3.global-to-local, align 4
  %v0_10004308 = load i32, i32* @r26, align 4
  %v1_10004308 = mul i32 %v0_10004308, 16
  %v2_10004308 = udiv i32 %v0_10004308, 268435456
  %v3_10004308 = or i32 %v2_10004308, %v1_10004308
  store i32 %v3_10004308, i32* %r26.global-to-local, align 4
  %v1_1000430c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004308)
  %v1_10004310 = mul nuw i32 %v2_10004308, 268435456
  %v2_10004310 = urem i32 %v0_10004308, 268435456
  %v3_10004310 = or i32 %v1_10004310, %v2_10004310
  store i32 %v3_10004310, i32* @r26, align 4
  %v3_10004314 = load i32, i32* @r29, align 4
  %v4_10004314 = add i32 %v3_10004314, 20
  %v5_10004314 = inttoptr i32 %v4_10004314 to i16*
  store i16 %v1_10004304, i16* %v5_10004314, align 2
  %v0_10004318 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004318, label %dec_label_pc_1000431c, label %dec_label_pc_1000426c

dec_label_pc_1000431c:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_1000425c
  %v0_1000431c = call i32 @function_10005cd4()
  %v1_1000431c = trunc i32 %v0_1000431c to i16
  store i32 %v0_1000431c, i32* %r3.global-to-local, align 4
  %v3_10004320 = load i32, i32* @r28, align 4
  %v4_10004320 = add i32 %v3_10004320, 2
  %v5_10004320 = inttoptr i32 %v4_10004320 to i16*
  store i16 %v1_1000431c, i16* %v5_10004320, align 2
  %v0_10004324 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004324, label %dec_label_pc_10004328, label %dec_label_pc_10004270

dec_label_pc_10004328:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_1000426c
  %v0_10004328 = call i32 @function_10005cd4()
  %v1_10004328 = trunc i32 %v0_10004328 to i16
  store i32 %v0_10004328, i32* %r3.global-to-local, align 4
  %v3_1000432c = load i32, i32* @r29, align 4
  %v4_1000432c = add i32 %v3_1000432c, 28
  %v5_1000432c = inttoptr i32 %v4_1000432c to i16*
  store i16 %v1_10004328, i16* %v5_1000432c, align 2
  br label %dec_label_pc_10004270

dec_label_pc_10004340:                            ; preds = %dec_label_pc_10004050
  %v0_10004340 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10004340, i32* %r3.global-to-local, align 4
  store i32 268452680, i32* @lr, align 4
  %v0_10004344 = call i32 @function_10008c98()
  store i32 %v0_10004344, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004348

dec_label_pc_10004348:                            ; preds = %dec_label_pc_10004028, %dec_label_pc_10004020, %dec_label_pc_10004340
  store i32 %v0_10003d74, i32* %r0.global-to-local, align 4
  %v1_1000435c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003d64)
  store i32 %v0_10003d94, i32* %r24.global-to-local, align 4
  store i32 %v0_10003d98, i32* %r25.global-to-local, align 4
  store i32 %v0_10003d9c, i32* %r26.global-to-local, align 4
  store i32 %v0_10003da0, i32* %r27.global-to-local, align 4
  store i32 %v0_10003da4, i32* %r28.global-to-local, align 4
  store i32 %v0_10003dc8, i32* %r30.global-to-local, align 4
  store i32 %v0_10003db4, i32* %r31.global-to-local, align 4
  %v0_100043a4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100043a4

dec_label_pc_100043a8:                            ; preds = %dec_label_pc_10003fbc
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_100043b4:                            ; preds = %dec_label_pc_10003fd4
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_100043c0:                            ; preds = %dec_label_pc_10003fcc
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10004020

; uselistorder directives
  uselistorder i32 %v0_10004328, { 1, 0 }
  uselistorder i32 %v0_1000431c, { 1, 0 }
  uselistorder i32 %v0_10004308, { 2, 1, 0 }
  uselistorder i32 %v0_10004304, { 1, 0 }
  uselistorder i32 %v0_100042f8, { 1, 0 }
  uselistorder i1 %v1_100042f0, { 1, 0 }
  uselistorder i1 %v0_100042f0, { 1, 0 }
  uselistorder i32 %v1_100042e0, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100042a4, { 1, 0 }
  uselistorder i32 %v0_1000425c, { 2, 1, 0 }
  uselistorder i32 %v0_10004240, { 2, 1, 0 }
  uselistorder i32 %v1_10004234, { 1, 0 }
  uselistorder i32 %v0_100041bc, { 2, 0, 1 }
  uselistorder i32 %v1_100041ac, { 1, 0 }
  uselistorder i32 %v1_100041a4, { 0, 2, 1 }
  uselistorder i32 %v1_100040d8, { 1, 0 }
  uselistorder i32 %v1_100040d0, { 1, 0 }
  uselistorder i32 %v2_10004334, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10004334, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10004090, { 1, 0 }
  uselistorder i32 %v0_10004020, { 1, 0, 2 }
  uselistorder i1 %v2_10003fd4, { 1, 0 }
  uselistorder i32 %v1_10003fc0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10003fb8, { 2, 1, 0 }
  uselistorder i32 %v1_10003fa0, { 1, 2, 0 }
  uselistorder i32 %v1_10003f7c, { 1, 0 }
  uselistorder i32 %v0_10003f70, { 1, 0 }
  uselistorder i32 %v2_10003f6c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10003f4c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10003f44, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_10003eec, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10003e2c, { 1, 0 }
  uselistorder i8 %v5_10003df4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r31.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 8, 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 3, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r27.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r26.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r25.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r24.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 41, { 2, 3, 4, 0, 1 }
  uselistorder i32 47, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @function_10009704, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_100006a8, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 103, 104, 105, 106, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102 }
  uselistorder label %dec_label_pc_10004348, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004270, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100041fc, { 1, 0 }
  uselistorder label %dec_label_pc_100041f8, { 1, 0 }
  uselistorder label %dec_label_pc_100041f8.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004124, { 1, 0 }
  uselistorder label %dec_label_pc_10004020, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_10003f9c, { 1, 0 }
}

define i32 @function_100043cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100043cc:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10004400, label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043cc
  %v1_100043d8 = add i32 %arg1, -2
  %v1_100043dc = udiv i32 %v1_100043d8, 2
  %v1_100043e0 = add nuw i32 %v1_100043dc, 1
  %v0_100043ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043ec, %dec_label_pc_100043d8
  %v0_100043fc = phi i32 [ %v1_100043fc, %dec_label_pc_100043ec ], [ %v1_100043e0, %dec_label_pc_100043d8 ]
  %v0_100043f8 = phi i32 [ %v2_100043f8, %dec_label_pc_100043ec ], [ 0, %dec_label_pc_100043d8 ]
  %v0_100043f4 = phi i32 [ %v1_100043f4, %dec_label_pc_100043ec ], [ %v0_100043ec.pre, %dec_label_pc_100043d8 ]
  %v1_100043ec = inttoptr i32 %v0_100043f4 to i16*
  %v2_100043ec = load i16, i16* %v1_100043ec, align 2
  %v3_100043ec = zext i16 %v2_100043ec to i32
  %v1_100043f4 = add i32 %v0_100043f4, 2
  store i32 %v1_100043f4, i32* @r3, align 4
  %v2_100043f8 = add i32 %v3_100043ec, %v0_100043f8
  %v1_100043fc = add i32 %v0_100043fc, -1
  %v2_100043fc = icmp eq i32 %v1_100043fc, 0
  br i1 %v2_100043fc, label %dec_label_pc_10004400.loopexit, label %dec_label_pc_100043ec

dec_label_pc_10004400.loopexit:                   ; preds = %dec_label_pc_100043ec
  %tmp11 = mul i32 %v1_100043dc, -2
  %tmp10 = add i32 %v1_100043d8, %tmp11
  br label %dec_label_pc_10004400

dec_label_pc_10004400:                            ; preds = %dec_label_pc_10004400.loopexit, %dec_label_pc_100043cc
  %v0_1000440c = phi i32 [ 0, %dec_label_pc_100043cc ], [ %v2_100043f8, %dec_label_pc_10004400.loopexit ]
  %v0_10004400 = phi i32 [ %arg1, %dec_label_pc_100043cc ], [ %tmp10, %dec_label_pc_10004400.loopexit ]
  %v3_10004400 = icmp eq i32 %v0_10004400, 1
  br i1 %v3_10004400, label %dec_label_pc_10004408, label %dec_label_pc_10004410

dec_label_pc_10004408:                            ; preds = %dec_label_pc_10004400
  %v0_10004408 = load i32, i32* @r3, align 4
  %v1_10004408 = add i32 %v0_10004408, 1
  %v2_10004408 = inttoptr i32 %v1_10004408 to i8*
  %v3_10004408 = load i8, i8* %v2_10004408, align 1
  %v4_10004408 = zext i8 %v3_10004408 to i32
  %v2_1000440c = add i32 %v4_10004408, %v0_1000440c
  br label %dec_label_pc_10004410

dec_label_pc_10004410:                            ; preds = %dec_label_pc_10004400, %dec_label_pc_10004408
  %v0_10004410 = phi i32 [ %v0_1000440c, %dec_label_pc_10004400 ], [ %v2_1000440c, %dec_label_pc_10004408 ]
  %v1_10004410 = urem i32 %v0_10004410, 65536
  %v1_10004414 = udiv i32 %v0_10004410, 65536
  %v2_10004418 = add nuw nsw i32 %v1_10004410, %v1_10004414
  %v1_1000441c = udiv i32 %v2_10004418, 65536
  %v2_10004420 = add nuw nsw i32 %v1_1000441c, %v2_10004418
  %v1_10004424 = urem i32 %v2_10004420, 65536
  %v1_10004428 = xor i32 %v1_10004424, 65535
  ret i32 %v1_10004428

; uselistorder directives
  uselistorder i32 %v2_10004418, { 1, 0 }
  uselistorder i32 %v0_1000440c, { 1, 0 }
  uselistorder i32 %v1_100043fc, { 1, 0 }
  uselistorder i32 %v1_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004410, { 1, 0 }
}

define i32 @function_10004430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004430:
  %r0.global-to-local = alloca i32, align 4
  %v1_10004434 = add i32 %arg1, 12
  %v2_10004434 = inttoptr i32 %v1_10004434 to i32*
  %v3_10004434 = load i32, i32* %v2_10004434, align 4
  %v1_10004438 = add i32 %arg1, 16
  %v2_10004438 = inttoptr i32 %v1_10004438 to i32*
  %v3_10004438 = load i32, i32* %v2_10004438, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10004474, label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004430
  %v1_10004440 = add i32 %arg3, -2
  %v1_10004448 = icmp slt i32 %v1_10004440, 0
  %v1_1000444c = udiv i32 %v1_10004440, 2
  %v1_10004450 = add nuw i32 %v1_1000444c, 1
  br i1 %v1_10004448, label %dec_label_pc_100044dc, label %dec_label_pc_1000445c.preheader

dec_label_pc_1000445c.preheader:                  ; preds = %dec_label_pc_100044dc, %dec_label_pc_10004440
  %v0_100044704 = phi i32 [ 1, %dec_label_pc_100044dc ], [ %v1_10004450, %dec_label_pc_10004440 ]
  %v0_1000445c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_1000445c.preheader, %dec_label_pc_1000445c
  %v0_10004470 = phi i32 [ %v0_100044704, %dec_label_pc_1000445c.preheader ], [ %v1_10004470, %dec_label_pc_1000445c ]
  %v0_1000446c = phi i32 [ 0, %dec_label_pc_1000445c.preheader ], [ %v2_1000446c, %dec_label_pc_1000445c ]
  %v0_10004464 = phi i32 [ %v0_1000445c.pre, %dec_label_pc_1000445c.preheader ], [ %v1_10004464, %dec_label_pc_1000445c ]
  %v1_1000445c = inttoptr i32 %v0_10004464 to i16*
  %v2_1000445c = load i16, i16* %v1_1000445c, align 2
  %v3_1000445c = zext i16 %v2_1000445c to i32
  store i32 %v3_1000445c, i32* %r0.global-to-local, align 4
  %v1_10004464 = add i32 %v0_10004464, 2
  %v2_1000446c = add i32 %v3_1000445c, %v0_1000446c
  %v1_10004470 = add i32 %v0_10004470, -1
  %v2_10004470 = icmp eq i32 %v1_10004470, 0
  br i1 %v2_10004470, label %dec_label_pc_10004474.loopexit, label %dec_label_pc_1000445c

dec_label_pc_10004474.loopexit:                   ; preds = %dec_label_pc_1000445c
  %tmp14 = mul i32 %v0_100044704, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10004468 = icmp eq i32 %tmp13, 1
  br i1 %v3_10004468, label %dec_label_pc_100044c8, label %dec_label_pc_10004478

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004430
  %v3_10004430 = icmp eq i32 %arg3, 1
  br i1 %v3_10004430, label %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, label %dec_label_pc_10004478

dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge: ; preds = %dec_label_pc_10004474
  %v0_100044c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_10004478:                            ; preds = %dec_label_pc_10004474.loopexit, %dec_label_pc_10004474, %dec_label_pc_100044c8
  %v0_10004490 = phi i32 [ 0, %dec_label_pc_10004474 ], [ %v2_100044cc, %dec_label_pc_100044c8 ], [ %v2_1000446c, %dec_label_pc_10004474.loopexit ]
  %v1_10004478 = urem i32 %v3_10004434, 65536
  %v1_1000447c = udiv i32 %v3_10004434, 65536
  %v2_10004480 = add nuw nsw i32 %v1_10004478, %v1_1000447c
  store i32 %v2_10004480, i32* %r0.global-to-local, align 4
  %v1_10004484 = urem i32 %v3_10004438, 65536
  %v1_10004488 = add i32 %arg1, 9
  %v2_10004488 = inttoptr i32 %v1_10004488 to i8*
  %v3_10004488 = load i8, i8* %v2_10004488, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v1_1000448c = udiv i32 %v3_10004438, 65536
  %v2_10004490 = add i32 %v0_10004490, %v1_1000448c
  %v2_10004498 = add i32 %v2_10004490, %v4_10004488
  %v2_10004494 = add i32 %v2_10004480, %arg2
  %v2_1000449c = add i32 %v2_10004494, %v1_10004484
  %v2_100044a0 = add i32 %v2_1000449c, %v2_10004498
  store i32 %v2_100044a0, i32* %r0.global-to-local, align 4
  %v1_100044a4 = call i32 @__asm_rlwinm.(i32 %v2_100044a0, i32 16, i32 16, i32 31)
  %v4_100044a4 = icmp eq i32 %v1_100044a4, 0
  br i1 %v4_100044a4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_10004478, %dec_label_pc_100044ac
  %v1_100044b0 = phi i32 [ %v1_100044b4, %dec_label_pc_100044ac ], [ %v1_100044a4, %dec_label_pc_10004478 ]
  %v0_100044ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100044ac = urem i32 %v0_100044ac, 65536
  %v2_100044b0 = add i32 %v1_100044ac, %v1_100044b0
  store i32 %v2_100044b0, i32* %r0.global-to-local, align 4
  %v1_100044b4 = call i32 @__asm_rlwinm.(i32 %v2_100044b0, i32 16, i32 16, i32 31)
  %v4_100044b4 = icmp eq i32 %v1_100044b4, 0
  br i1 %v4_100044b4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_100044ac, %dec_label_pc_10004478
  %v0_100044bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100044bc = urem i32 %v0_100044bc, 65536
  %v1_100044c0 = xor i32 %v1_100044bc, 65535
  ret i32 %v1_100044c0

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, %dec_label_pc_10004474.loopexit
  %v0_100044c8 = phi i32 [ %v1_10004464, %dec_label_pc_10004474.loopexit ], [ %v0_100044c8.pre, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v0_100044cc10 = phi i32 [ %v2_1000446c, %dec_label_pc_10004474.loopexit ], [ 0, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v1_100044c8 = inttoptr i32 %v0_100044c8 to i8*
  %v2_100044c8 = load i8, i8* %v1_100044c8, align 1
  %v3_100044c8 = zext i8 %v2_100044c8 to i32
  store i32 %v3_100044c8, i32* %r0.global-to-local, align 4
  %v2_100044cc = add i32 %v3_100044c8, %v0_100044cc10
  br label %dec_label_pc_10004478

dec_label_pc_100044dc:                            ; preds = %dec_label_pc_10004440
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000445c.preheader

; uselistorder directives
  uselistorder i32 %v1_100044b4, { 1, 0 }
  uselistorder i32 %v1_10004470, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000445c, { 1, 0 }
}

define i32 @function_100044e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100044e8:
  %v3_100044fc = load i32, i32* @global_var_1001bd74.26, align 4
  store i32 268453124, i32* @lr, align 4
  %v2_10004500 = call i32 @function_10008db8(i32 %v3_100044fc, i32 9)
  ret i32 %v2_10004500
}

define i32 @function_10004514(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004514:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_10004524 = load i32, i32* @r27, align 4
  %v2_10004528 = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_10004528, i32* @r27, align 4
  %v2_10004530 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10004534 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10004544 = load i32, i32* @r25, align 4
  %v2_10004548 = ptrtoint i8* %stack_var_-8776 to i32
  %v0_1000454c = load i32, i32* @r30, align 4
  %v2_10004550 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10004550, i32* @r30, align 4
  %v0_10004554 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_1000455c = load i32, i32* @r23, align 4
  %v0_10004564 = load i32, i32* @r28, align 4
  store i32 268453228, i32* @lr, align 4
  %v3_10004568 = call i32 @function_10009454(i32 %v2_10004528, i32 0, i32 4096)
  store i32 268453244, i32* @lr, align 4
  %v3_10004578 = call i32 @function_10009454(i32 %v2_10004530, i32 0, i32 4096)
  store i32 268453260, i32* @lr, align 4
  %v3_10004588 = call i32 @function_10009454(i32 %v2_10004550, i32 0, i32 513)
  %v0_10004594 = load i32, i32* @r29, align 4
  %v0_10004598 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004598, i32* %stack_var_-8792, align 4
  %v3_100045a8 = trunc i32 %v0_10004594 to i8
  %v4_100045a8 = call i32 @function_100089b4(i8 %v3_100045a8, i32 16, i32 %v2_10004548)
  store i32 268453300, i32* @lr, align 4
  %v2_100045b0 = call i32 @function_10008558(i8* nonnull %stack_var_-8776)
  %v3_100045b4 = icmp eq i32 %v2_100045b0, 2
  br i1 %v3_100045b4, label %dec_label_pc_10004af4, label %dec_label_pc_100045bc

dec_label_pc_100045bc:                            ; preds = %dec_label_pc_10004514, %dec_label_pc_10004af4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100045c8.27 to i32), i32* @lr, align 4
  %v1_100045c4 = call i32 @function_10007fbc(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_100045d0.28 to i32), i32* @lr, align 4
  %v1_100045cc = call i32 @function_10007fbc(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_100045d8.29 to i32), i32* @lr, align 4
  %v1_100045d4 = call i32 @function_10007fbc(i32 17)
  store i32 268453344, i32* @lr, align 4
  %v1_100045dc = call i32 @function_10007fbc(i32 19)
  %v3_100045e8 = call i32 @function_10007f08(i32 19, i32* null)
  store i32 268453368, i32* @lr, align 4
  %v2_100045f4 = call i32 @function_10008e00(i32 %v3_100045e8, i32 0)
  %v3_100045f8 = icmp eq i32 %v2_100045f4, -1
  store i32 %v2_100045f4, i32* @r28, align 4
  br i1 %v3_100045f8, label %dec_label_pc_10004a40, label %dec_label_pc_10004604

dec_label_pc_10004604:                            ; preds = %dec_label_pc_100045bc
  %v2_10004604 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_10004604, i32* %r26.global-to-local, align 4
  store i32 268453400, i32* @lr, align 4
  %v4_1000461488 = call i32 @function_100087b8(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_100045f4)
  %v3_1000461890 = icmp eq i32 %v4_1000461488, 0
  br i1 %v3_1000461890, label %dec_label_pc_100047c0.loopexit, label %dec_label_pc_10004620

dec_label_pc_10004620:                            ; preds = %dec_label_pc_10004604, %dec_label_pc_10004608.backedge
  %v3_10004620 = load i8, i8* %stack_var_-8760, align 1
  %v3_10004624 = icmp eq i8 %v3_10004620, 0
  br i1 %v3_10004624, label %dec_label_pc_10004608.backedge, label %dec_label_pc_1000462c

dec_label_pc_10004608.backedge:                   ; preds = %dec_label_pc_10004640, %dec_label_pc_10004620, %dec_label_pc_100046b0, %dec_label_pc_10004748, %dec_label_pc_10004794
  %v0_10004610.pre = load i32, i32* @r28, align 4
  store i32 268453400, i32* @lr, align 4
  %v4_10004614 = call i32 @function_100087b8(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_10004610.pre)
  %v3_10004618 = icmp eq i32 %v4_10004614, 0
  br i1 %v3_10004618, label %dec_label_pc_100047c0.loopexit, label %dec_label_pc_10004620

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_10004620
  %v3_1000462c = icmp eq i8 %v3_10004620, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_1000462c, label %dec_label_pc_10004660, label %dec_label_pc_1000463c

dec_label_pc_1000463c:                            ; preds = %dec_label_pc_1000462c
  %v1_10004644.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004640

dec_label_pc_10004640:                            ; preds = %dec_label_pc_10004654, %dec_label_pc_1000463c
  %v0_10004640 = phi i32 [ %v1_10004640, %dec_label_pc_10004654 ], [ 0, %dec_label_pc_1000463c ]
  %v1_10004640 = add i32 %v0_10004640, 1
  %v2_10004644 = add i32 %v1_10004640, %v1_10004644.pre
  %v3_10004644 = inttoptr i32 %v2_10004644 to i8*
  %v4_10004644 = load i8, i8* %v3_10004644, align 1
  %v3_10004648 = icmp eq i8 %v4_10004644, 0
  br i1 %v3_10004648, label %dec_label_pc_10004608.backedge, label %dec_label_pc_10004654

dec_label_pc_10004654:                            ; preds = %dec_label_pc_10004640
  %v3_1000464c = icmp eq i8 %v4_10004644, 58
  br i1 %v3_1000464c, label %dec_label_pc_10004658, label %dec_label_pc_10004640

dec_label_pc_10004658:                            ; preds = %dec_label_pc_10004654
  %v1_10004658 = add i32 %v0_10004640, 4
  store i32 %v1_10004658, i32* @r31, align 4
  %v1_1000465c = add i32 %v0_10004640, 3
  br label %dec_label_pc_10004660

dec_label_pc_10004660:                            ; preds = %dec_label_pc_1000462c, %dec_label_pc_10004658
  %v1_100046b8 = phi i32 [ 2, %dec_label_pc_1000462c ], [ %v1_1000465c, %dec_label_pc_10004658 ]
  %v0_10004660 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004660 = add i32 %v0_10004660, %v1_100046b8
  %v1_10004668 = add i32 %v2_10004660, 32
  %v2_10004668 = inttoptr i32 %v1_10004668 to i8*
  %v3_10004668 = load i8, i8* %v2_10004668, align 1
  %v3_1000466c = icmp eq i8 %v3_10004668, 0
  br i1 %v3_1000466c, label %dec_label_pc_100046b0, label %dec_label_pc_10004674

dec_label_pc_10004674:                            ; preds = %dec_label_pc_10004660
  %v3_10004674 = icmp eq i8 %v3_10004668, 32
  %v1_10004678 = add i32 %v1_100046b8, 1
  store i32 %v1_10004678, i32* @r31, align 4
  br i1 %v3_10004674, label %dec_label_pc_100046b0, label %dec_label_pc_10004680

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004674
  %v0_10004688 = load i32, i32* @r30, align 4
  %v2_10004688 = add i32 %v0_10004688, %v1_10004678
  br label %dec_label_pc_10004694

dec_label_pc_10004694:                            ; preds = %dec_label_pc_10004694, %dec_label_pc_10004680
  %v0_10004698 = phi i32 [ %v1_10004698, %dec_label_pc_10004694 ], [ %v1_100046b8, %dec_label_pc_10004680 ]
  %v0_1000469c = phi i32 [ %v1_1000469c, %dec_label_pc_10004694 ], [ %v2_10004688, %dec_label_pc_10004680 ]
  %v1_10004694 = inttoptr i32 %v0_1000469c to i8*
  %v2_10004694 = load i8, i8* %v1_10004694, align 1
  %v1_10004698 = add i32 %v0_10004698, 1
  %v1_1000469c = add i32 %v0_1000469c, 1
  %tmp60 = or i8 %v2_10004694, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_100046ac, label %dec_label_pc_10004694

dec_label_pc_100046ac:                            ; preds = %dec_label_pc_10004694
  %v1_100046ac = add i32 %v0_10004698, 2
  store i32 %v1_100046ac, i32* @r31, align 4
  br label %dec_label_pc_100046b0

dec_label_pc_100046b0:                            ; preds = %dec_label_pc_10004674, %dec_label_pc_10004660, %dec_label_pc_100046ac
  %v1_100046b0 = phi i32 [ %v1_100046b8, %dec_label_pc_10004674 ], [ %v1_100046b8, %dec_label_pc_10004660 ], [ %v1_10004698, %dec_label_pc_100046ac ]
  %v2_100046b0 = add i32 %v1_100046b0, %v0_10004660
  %v0_100046b8 = load i32, i32* @r30, align 4
  %v2_100046b8 = add i32 %v0_100046b8, %v1_100046b8
  store i32 %v2_100046b8, i32* @r29, align 4
  %v3_100046bc = add i32 %v2_100046b0, 32
  %v4_100046bc = inttoptr i32 %v3_100046bc to i8*
  store i8 0, i8* %v4_100046bc, align 1
  %v0_100046c0 = load i32, i32* @r29, align 4
  store i32 268453576, i32* @lr, align 4
  %v1_100046c4 = inttoptr i32 %v0_100046c0 to i8*
  %v2_100046c4 = call i32 @function_10008558(i8* %v1_100046c4)
  %v0_100046d0 = load i32, i32* @r29, align 4
  %v3_100046d4 = inttoptr i32 %v0_100046d0 to i8*
  %v4_100046d4 = call i32 @function_10008908(i8* %v3_100046d4, i32 %v2_100046c4, i32 %v2_10004548)
  %v3_100046dc = icmp eq i32 %v4_100046d4, -1
  br i1 %v3_100046dc, label %dec_label_pc_10004608.backedge, label %dec_label_pc_100046e8.preheader

dec_label_pc_100046e8.preheader:                  ; preds = %dec_label_pc_100046b0
  %v0_100046e8.pre = load i32, i32* @r31, align 4
  %v0_100046f0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100046e8.outer

dec_label_pc_100046e8.outer:                      ; preds = %dec_label_pc_10004a90, %dec_label_pc_100046e8.preheader
  %v0_1000470428.ph = phi i32 [ %v1_10004a78, %dec_label_pc_10004a90 ], [ 0, %dec_label_pc_100046e8.preheader ]
  %v0_100046e8.ph = phi i32 [ %v1_1000479c76, %dec_label_pc_10004a90 ], [ %v0_100046e8.pre, %dec_label_pc_100046e8.preheader ]
  %v0_10004748.ph = phi i32 [ 1, %dec_label_pc_10004a90 ], [ 0, %dec_label_pc_100046e8.preheader ]
  br label %dec_label_pc_100046e8

dec_label_pc_100046e8:                            ; preds = %dec_label_pc_100046e8.outer, %dec_label_pc_10004a80
  %v0_1000470428 = phi i32 [ %v1_10004a78, %dec_label_pc_10004a80 ], [ %v0_1000470428.ph, %dec_label_pc_100046e8.outer ]
  %v0_100046e8 = phi i32 [ %v1_1000479c76, %dec_label_pc_10004a80 ], [ %v0_100046e8.ph, %dec_label_pc_100046e8.outer ]
  %v1_100046e8 = add i32 %v0_100046e8, 1
  %v2_100046f0 = add i32 %v1_100046e8, %v0_100046f0.pre
  %v1_1000471c68 = inttoptr i32 %v2_100046f0 to i8*
  %v2_1000471c69 = load i8, i8* %v1_1000471c68, align 1
  store i32 %v1_100046e8, i32* @r31, align 4
  %v3_1000472471 = icmp eq i8 %v2_1000471c69, 0
  br i1 %v3_1000472471, label %dec_label_pc_10004748, label %dec_label_pc_10004734

dec_label_pc_100046f8:                            ; preds = %dec_label_pc_10004734
  %v3_1000472879 = icmp eq i8 %v3_1000472879.in, 9
  br i1 %v3_1000472879, label %dec_label_pc_10004738, label %dec_label_pc_10004704

dec_label_pc_10004704:                            ; preds = %dec_label_pc_100046f8
  %v3_100046f8 = icmp eq i32 %v0_100046f875, 1
  br i1 %v3_100046f8, label %dec_label_pc_10004a78, label %dec_label_pc_1000470c

dec_label_pc_1000470c:                            ; preds = %dec_label_pc_10004704, %dec_label_pc_10004a78
  %v0_1000470c = phi i32 [ %v1_10004a78, %dec_label_pc_10004a78 ], [ %v0_1000473874, %dec_label_pc_10004704 ]
  %v2_1000470c = icmp sgt i32 %v0_1000470c, 6
  br i1 %v2_1000470c, label %dec_label_pc_10004748, label %dec_label_pc_10004718

dec_label_pc_10004718:                            ; preds = %dec_label_pc_10004738, %dec_label_pc_1000470c
  %v0_1000470427 = phi i32 [ %v0_1000473874, %dec_label_pc_10004738 ], [ %v0_1000470c, %dec_label_pc_1000470c ]
  %v0_100046f825 = phi i32 [ 1, %dec_label_pc_10004738 ], [ 0, %dec_label_pc_1000470c ]
  %v0_1000471c22 = add i32 %v0_1000474078, 1
  %v1_10004718 = add i32 %v1_1000479c76, 1
  %v1_1000471c = inttoptr i32 %v0_1000471c22 to i8*
  %v2_1000471c = load i8, i8* %v1_1000471c, align 1
  store i32 %v1_10004718, i32* @r31, align 4
  %v3_10004724 = icmp eq i8 %v2_1000471c, 0
  br i1 %v3_10004724, label %dec_label_pc_10004748, label %dec_label_pc_10004734

dec_label_pc_10004734:                            ; preds = %dec_label_pc_100046e8, %dec_label_pc_10004718
  %v3_1000472879.in = phi i8 [ %v2_1000471c, %dec_label_pc_10004718 ], [ %v2_1000471c69, %dec_label_pc_100046e8 ]
  %v3_1000472c80.in = phi i8 [ %v2_1000471c, %dec_label_pc_10004718 ], [ %v2_1000471c69, %dec_label_pc_100046e8 ]
  %v0_1000474078 = phi i32 [ %v0_1000471c22, %dec_label_pc_10004718 ], [ %v2_100046f0, %dec_label_pc_100046e8 ]
  %v1_1000479c76 = phi i32 [ %v1_10004718, %dec_label_pc_10004718 ], [ %v1_100046e8, %dec_label_pc_100046e8 ]
  %v0_100046f875 = phi i32 [ %v0_100046f825, %dec_label_pc_10004718 ], [ 0, %dec_label_pc_100046e8 ]
  %v0_1000473874 = phi i32 [ %v0_1000470427, %dec_label_pc_10004718 ], [ %v0_1000470428, %dec_label_pc_100046e8 ]
  %v3_1000472c80 = icmp eq i8 %v3_1000472c80.in, 32
  br i1 %v3_1000472c80, label %dec_label_pc_10004738, label %dec_label_pc_100046f8

dec_label_pc_10004738:                            ; preds = %dec_label_pc_10004734, %dec_label_pc_100046f8
  %tmp62 = icmp slt i32 %v0_1000473874, 7
  br i1 %tmp62, label %dec_label_pc_10004718, label %dec_label_pc_10004748

dec_label_pc_10004748:                            ; preds = %dec_label_pc_10004718, %dec_label_pc_1000470c, %dec_label_pc_10004738, %dec_label_pc_100046e8
  %v1_1000479c.lcssa = phi i32 [ %v1_100046e8, %dec_label_pc_100046e8 ], [ %v1_1000479c76, %dec_label_pc_10004738 ], [ %v1_1000479c76, %dec_label_pc_1000470c ], [ %v1_10004718, %dec_label_pc_10004718 ]
  %v3_10004748 = icmp eq i32 %v0_10004748.ph, 0
  br i1 %v3_10004748, label %dec_label_pc_10004608.backedge, label %dec_label_pc_10004754

dec_label_pc_10004754:                            ; preds = %dec_label_pc_10004748
  %v0_10004754 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004754 = add i32 %v0_10004754, %v1_1000479c.lcssa
  %v1_10004758 = add i32 %v2_10004754, 32
  %v2_10004758 = inttoptr i32 %v1_10004758 to i8*
  %v3_10004758 = load i8, i8* %v2_10004758, align 1
  %v3_1000475c = icmp eq i8 %v3_10004758, 0
  br i1 %v3_1000475c, label %dec_label_pc_10004794, label %dec_label_pc_10004764

dec_label_pc_10004764:                            ; preds = %dec_label_pc_10004754
  %v3_10004764 = icmp eq i8 %v3_10004758, 32
  br i1 %v3_10004764, label %dec_label_pc_10004794, label %dec_label_pc_1000476c

dec_label_pc_1000476c:                            ; preds = %dec_label_pc_10004764
  %v1_1000476c = add i32 %v1_1000479c.lcssa, 1
  %v2_10004770 = add i32 %v1_1000476c, %v0_100046f0.pre
  br label %dec_label_pc_1000477c

dec_label_pc_1000477c:                            ; preds = %dec_label_pc_1000477c, %dec_label_pc_1000476c
  %v0_10004780 = phi i32 [ %v1_10004780, %dec_label_pc_1000477c ], [ %v1_1000479c.lcssa, %dec_label_pc_1000476c ]
  %v0_10004784 = phi i32 [ %v1_10004784, %dec_label_pc_1000477c ], [ %v2_10004770, %dec_label_pc_1000476c ]
  %v1_1000477c = inttoptr i32 %v0_10004784 to i8*
  %v2_1000477c = load i8, i8* %v1_1000477c, align 1
  %v1_10004780 = add i32 %v0_10004780, 1
  %v1_10004784 = add i32 %v0_10004784, 1
  %tmp63 = or i8 %v2_1000477c, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10004794, label %dec_label_pc_1000477c

dec_label_pc_10004794:                            ; preds = %dec_label_pc_1000477c, %dec_label_pc_10004764, %dec_label_pc_10004754
  %v1_10004794 = phi i32 [ %v1_1000479c.lcssa, %dec_label_pc_10004764 ], [ %v1_1000479c.lcssa, %dec_label_pc_10004754 ], [ %v1_10004780, %dec_label_pc_1000477c ]
  %v2_10004794 = add i32 %v1_10004794, %v0_10004754
  %v2_1000479c = add i32 %v1_1000479c.lcssa, %v0_100046f0.pre
  store i32 %v2_1000479c, i32* @r31, align 4
  %v3_100047a0 = add i32 %v2_10004794, 32
  %v4_100047a0 = inttoptr i32 %v3_100047a0 to i8*
  store i8 0, i8* %v4_100047a0, align 1
  %v0_100047a4 = load i32, i32* @r31, align 4
  store i32 268453804, i32* @lr, align 4
  %v1_100047a8 = inttoptr i32 %v0_100047a4 to i8*
  %v2_100047a8 = call i32 @function_10008558(i8* %v1_100047a8)
  %v2_100047ac = icmp sgt i32 %v2_100047a8, 15
  br i1 %v2_100047ac, label %dec_label_pc_10004608.backedge, label %dec_label_pc_100047b4

dec_label_pc_100047b4:                            ; preds = %dec_label_pc_10004794
  %v0_100047b4 = load i32, i32* @r31, align 4
  store i32 %v2_10004604, i32* @r3, align 4
  %v2_100047bc = bitcast i32* %stack_var_-8792 to i8*
  %v3_100047bc = call i32 @function_10008580(i8* %v2_100047bc, i32 %v0_100047b4)
  br label %dec_label_pc_100047c0

dec_label_pc_100047c0.loopexit:                   ; preds = %dec_label_pc_10004608.backedge, %dec_label_pc_10004604
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_100047c0

dec_label_pc_100047c0:                            ; preds = %dec_label_pc_100047c0.loopexit, %dec_label_pc_100047b4
  %v1_100047cc.pre-phi = phi i8* [ %.pre, %dec_label_pc_100047c0.loopexit ], [ %v2_100047bc, %dec_label_pc_100047b4 ]
  store i32 268453832, i32* @lr, align 4
  %v0_100047c4 = call i32 @function_10008c98()
  store i32 268453840, i32* @lr, align 4
  %v2_100047cc = call i32 @function_10008558(i8* %v1_100047cc.pre-phi)
  %v3_100047d0 = icmp eq i32 %v2_100047cc, 0
  br i1 %v3_100047d0, label %dec_label_pc_10004a98, label %dec_label_pc_100047d8

dec_label_pc_100047d8:                            ; preds = %dec_label_pc_100047c0
  %v3_100047e0 = call i32 @function_10007f08(i32 15, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268453868, i32* @lr, align 4
  %v1_100047e8 = call i32 @function_1000919c(i32 %v3_100047e0)
  store i32 %v1_100047e8, i32* @r23, align 4
  %v3_100047ec = icmp eq i32 %v1_100047e8, 0
  br i1 %v3_100047ec, label %dec_label_pc_10004a20, label %dec_label_pc_100047f4

dec_label_pc_100047f4:                            ; preds = %dec_label_pc_100047d8
  store i32 0, i32* @r28, align 4
  store i32 268453888, i32* @lr, align 4
  %v1_100047fc7 = inttoptr i32 %v1_100047e8 to i32*
  %v2_100047fc8 = call i32 @function_100092ac(i32* %v1_100047fc7)
  %v3_1000480011 = icmp eq i32 %v2_100047fc8, 0
  br i1 %v3_1000480011, label %dec_label_pc_10004a14, label %dec_label_pc_10004808.preheader.lr.ph

dec_label_pc_10004808.preheader.lr.ph:            ; preds = %dec_label_pc_100047f4
  %v2_1000483c = bitcast i32* %stack_var_-8247 to i8*
  %v1_100049ac = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_10004808.preheader

dec_label_pc_100047f8.loopexit:                   ; preds = %dec_label_pc_10004810, %dec_label_pc_10004828, %dec_label_pc_10004890
  %v0_100047f8 = load i32, i32* @r23, align 4
  store i32 268453888, i32* @lr, align 4
  %v1_100047fc = inttoptr i32 %v0_100047f8 to i32*
  %v2_100047fc = call i32 @function_100092ac(i32* %v1_100047fc)
  %v3_10004800 = icmp eq i32 %v2_100047fc, 0
  br i1 %v3_10004800, label %dec_label_pc_10004a14, label %dec_label_pc_10004808.preheader

dec_label_pc_10004808.preheader:                  ; preds = %dec_label_pc_10004808.preheader.lr.ph, %dec_label_pc_100047f8.loopexit
  %v0_1000481035 = phi i32 [ %v2_100047fc8, %dec_label_pc_10004808.preheader.lr.ph ], [ %v2_100047fc, %dec_label_pc_100047f8.loopexit ]
  br label %dec_label_pc_10004808

dec_label_pc_10004808:                            ; preds = %dec_label_pc_10004808.preheader, %dec_label_pc_100049fc
  %v0_10004810 = phi i32 [ %v0_1000481035, %dec_label_pc_10004808.preheader ], [ %v2_10004a08, %dec_label_pc_100049fc ]
  %v0_10004808 = load i32, i32* @r28, align 4
  %v3_10004808 = icmp eq i32 %v0_10004808, 0
  br i1 %v3_10004808, label %dec_label_pc_10004810, label %dec_label_pc_10004a14

dec_label_pc_10004810:                            ; preds = %dec_label_pc_10004808
  %v1_10004810 = add i32 %v0_10004810, 11
  %v2_10004810 = inttoptr i32 %v1_10004810 to i8*
  %v3_10004810 = load i8, i8* %v2_10004810, align 1
  %v4_10004810 = zext i8 %v3_10004810 to i32
  store i32 %v1_10004810, i32* @r30, align 4
  %v1_10004818 = add nuw nsw i32 %v4_10004810, 208
  %v1_1000481c = urem i32 %v1_10004818, 256
  %v2_10004820 = icmp ugt i32 %v1_1000481c, 9
  br i1 %v2_10004820, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_10004828

dec_label_pc_10004828:                            ; preds = %dec_label_pc_10004810
  %v3_10004830 = call i32 @function_10007f08(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_1000483c = call i32 @function_10008580(i8* %v2_1000483c, i32 %v3_10004830)
  store i32 268453960, i32* @lr, align 4
  %v2_10004844 = call i32 @function_10008558(i8* %v2_1000483c)
  %v0_10004848 = load i32, i32* @r30, align 4
  %v0_1000484c = load i32, i32* @r27, align 4
  %v2_1000484c = add i32 %v0_1000484c, %v2_10004844
  store i32 %v2_1000484c, i32* @r3, align 4
  %v2_10004850 = inttoptr i32 %v2_1000484c to i8*
  %v3_10004850 = call i32 @function_10008580(i8* %v2_10004850, i32 %v0_10004848)
  store i32 268453980, i32* @lr, align 4
  %v2_10004858 = call i32 @function_10008558(i8* %v2_1000483c)
  %v3_10004868 = call i32 @function_10007f08(i32 16, i32* null)
  %v0_10004870 = load i32, i32* @r27, align 4
  %v2_10004870 = add i32 %v2_10004858, %v0_10004870
  store i32 %v2_10004870, i32* @r3, align 4
  %v2_10004874 = inttoptr i32 %v2_10004870 to i8*
  %v3_10004874 = call i32 @function_10008580(i8* %v2_10004874, i32 %v3_10004868)
  store i32 4096, i32* @r5, align 4
  store i32 268454024, i32* @lr, align 4
  %v3_10004884 = call i32 @function_10008f18(i32 %v2_10004528, i32 %v2_10004530, i32 4096)
  %v3_10004888 = icmp eq i32 %v3_10004884, -1
  br i1 %v3_10004888, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_10004890

dec_label_pc_10004890:                            ; preds = %dec_label_pc_10004828
  %v3_10004898 = call i32 @function_10007f08(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_100048a4 = call i32 @function_10008580(i8* %v2_1000483c, i32 %v3_10004898)
  store i32 268454064, i32* @lr, align 4
  %v2_100048ac = call i32 @function_10008558(i8* %v2_1000483c)
  %v0_100048b0 = load i32, i32* @r30, align 4
  %v0_100048b4 = load i32, i32* @r27, align 4
  %v2_100048b4 = add i32 %v0_100048b4, %v2_100048ac
  store i32 %v2_100048b4, i32* @r3, align 4
  %v2_100048b8 = inttoptr i32 %v2_100048b4 to i8*
  %v3_100048b8 = call i32 @function_10008580(i8* %v2_100048b8, i32 %v0_100048b0)
  store i32 268454084, i32* @lr, align 4
  %v2_100048c0 = call i32 @function_10008558(i8* %v2_1000483c)
  %v3_100048d0 = call i32 @function_10007f08(i32 17, i32* null)
  %v0_100048d8 = load i32, i32* @r27, align 4
  %v2_100048d8 = add i32 %v2_100048c0, %v0_100048d8
  store i32 %v2_100048d8, i32* @r3, align 4
  %v2_100048dc = inttoptr i32 %v2_100048d8 to i8*
  %v3_100048dc = call i32 @function_10008580(i8* %v2_100048dc, i32 %v3_100048d0)
  store i32 268454120, i32* @lr, align 4
  %v1_100048e4 = call i32 @function_1000919c(i32 %v2_10004528)
  store i32 %v1_100048e4, i32* @r25, align 4
  %v3_100048e8 = icmp eq i32 %v1_100048e4, 0
  br i1 %v3_100048e8, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_100048f0

dec_label_pc_100048f0.loopexit:                   ; preds = %dec_label_pc_10004910, %dec_label_pc_100049ac
  %v0_100048f0.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100048f0

dec_label_pc_100048f0:                            ; preds = %dec_label_pc_10004890, %dec_label_pc_100048f0.loopexit
  %v0_100048f0 = phi i32 [ %v0_100048f0.pre, %dec_label_pc_100048f0.loopexit ], [ %v1_100048e4, %dec_label_pc_10004890 ]
  store i32 268454136, i32* @lr, align 4
  %v1_100048f4 = inttoptr i32 %v0_100048f0 to i32*
  %v2_100048f4 = call i32 @function_100092ac(i32* %v1_100048f4)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100048f4, i32* @r31, align 4
  %v3_100048fc = icmp eq i32 %v2_100048f4, 0
  %v0_10004900 = load i32, i32* @r28, align 4
  store i32 %v2_10004530, i32* @r3, align 4
  %v3_10004900.not = icmp ne i32 %v0_10004900, 0
  %brmerge = or i1 %v3_100048fc, %v3_10004900.not
  br i1 %brmerge, label %dec_label_pc_100049fc, label %dec_label_pc_10004910

dec_label_pc_10004910:                            ; preds = %dec_label_pc_100048f0
  store i32 268454164, i32* @lr, align 4
  %v0_10004910 = call i32 @function_10008600()
  %v3_1000491c = call i32 @function_10007f08(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_10004928 = call i32 @function_10008580(i8* %v2_1000483c, i32 %v3_1000491c)
  store i32 268454196, i32* @lr, align 4
  %v2_10004930 = call i32 @function_10008558(i8* %v2_1000483c)
  %v0_10004934 = load i32, i32* @r30, align 4
  %v0_10004938 = load i32, i32* @r27, align 4
  %v2_10004938 = add i32 %v0_10004938, %v2_10004930
  store i32 %v2_10004938, i32* @r3, align 4
  %v2_1000493c = inttoptr i32 %v2_10004938 to i8*
  %v3_1000493c = call i32 @function_10008580(i8* %v2_1000493c, i32 %v0_10004934)
  store i32 268454216, i32* @lr, align 4
  %v2_10004944 = call i32 @function_10008558(i8* %v2_1000483c)
  %v3_10004954 = call i32 @function_10007f08(i32 17, i32* null)
  %v0_1000495c = load i32, i32* @r27, align 4
  %v2_1000495c = add i32 %v2_10004944, %v0_1000495c
  store i32 %v2_1000495c, i32* @r3, align 4
  %v2_10004960 = inttoptr i32 %v2_1000495c to i8*
  %v3_10004960 = call i32 @function_10008580(i8* %v2_10004960, i32 %v3_10004954)
  store i32 268454252, i32* @lr, align 4
  %v2_10004968 = call i32 @function_10008558(i8* %v2_1000483c)
  %v0_10004974 = load i32, i32* @r27, align 4
  %v2_10004974 = add i32 %v0_10004974, %v2_10004968
  store i32 %v2_10004974, i32* @r3, align 4
  %v2_10004978 = inttoptr i32 %v2_10004974 to i8*
  %v3_10004978 = call i32 @function_10008580(i8* %v2_10004978, i32 ptrtoint (i32* @global_var_1000b680.31 to i32))
  store i32 268454276, i32* @lr, align 4
  %v2_10004980 = call i32 @function_10008558(i8* %v2_1000483c)
  %v0_10004984 = load i32, i32* @r31, align 4
  %v1_10004984 = add i32 %v0_10004984, 11
  %v0_10004988 = load i32, i32* @r27, align 4
  %v2_10004988 = add i32 %v0_10004988, %v2_10004980
  store i32 %v2_10004988, i32* @r3, align 4
  %v2_1000498c = inttoptr i32 %v2_10004988 to i8*
  %v3_1000498c = call i32 @function_10008580(i8* %v2_1000498c, i32 %v1_10004984)
  store i32 268454304, i32* @lr, align 4
  %v3_1000499c = call i32 @function_10008f18(i32 %v2_10004528, i32 %v2_10004530, i32 4096)
  %v3_100049a0 = icmp eq i32 %v3_1000499c, -1
  br i1 %v3_100049a0, label %dec_label_pc_100048f0.loopexit, label %dec_label_pc_100049ac

dec_label_pc_100049ac:                            ; preds = %dec_label_pc_10004910
  store i32 268454320, i32* @lr, align 4
  %v2_100049ac = call i32 @function_10008558(i8* %v1_100049ac)
  %v4_100049bc = call i32 @function_10008908(i8* %v1_100049ac, i32 %v2_100049ac, i32 %v2_10004604)
  %v3_100049c4 = icmp eq i32 %v4_100049bc, -1
  %v0_100049c8 = load i32, i32* @r30, align 4
  store i32 %v0_100049c8, i32* @r3, align 4
  br i1 %v3_100049c4, label %dec_label_pc_100048f0.loopexit, label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100049ac
  store i32 268454356, i32* @lr, align 4
  %v2_100049d0 = call i32 @function_10008680(i32 %v0_100049c8, i32 10)
  store i32 268454364, i32* @lr, align 4
  %v2_100049d8 = call i32 @function_10008db8(i32 %v2_100049d0, i32 9)
  %v0_100049dc = load i32, i32* @r25, align 4
  store i32 268454372, i32* @lr, align 4
  %v1_100049e0 = inttoptr i32 %v0_100049dc to i32*
  %v2_100049e0 = call i32 @function_100092ac(i32* %v1_100049e0)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100049e0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100049fc

dec_label_pc_100049fc:                            ; preds = %dec_label_pc_100048f0, %dec_label_pc_100049d0
  %v0_100049fc = load i32, i32* @r25, align 4
  store i32 268454404, i32* @lr, align 4
  %v1_10004a00 = inttoptr i32 %v0_100049fc to i32*
  %v2_10004a00 = call i32 @function_100090f8(i32* %v1_10004a00)
  %v0_10004a04 = load i32, i32* @r23, align 4
  store i32 268454412, i32* @lr, align 4
  %v1_10004a08 = inttoptr i32 %v0_10004a04 to i32*
  %v2_10004a08 = call i32 @function_100092ac(i32* %v1_10004a08)
  %v3_10004a0c = icmp eq i32 %v2_10004a08, 0
  br i1 %v3_10004a0c, label %dec_label_pc_10004a14, label %dec_label_pc_10004808

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_100047f8.loopexit, %dec_label_pc_100049fc, %dec_label_pc_10004808, %dec_label_pc_100047f4
  %v0_10004a14 = load i32, i32* @r23, align 4
  %v0_10004a18 = load i32, i32* @r28, align 4
  %v1_10004a18 = urem i32 %v0_10004a18, 256
  store i32 %v1_10004a18, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a20.32 to i32), i32* @lr, align 4
  %v1_10004a1c = inttoptr i32 %v0_10004a14 to i32*
  %v2_10004a1c = call i32 @function_100090f8(i32* %v1_10004a1c)
  br label %dec_label_pc_10004a20

dec_label_pc_10004a20:                            ; preds = %dec_label_pc_100047d8, %dec_label_pc_10004a14
  store i32 ptrtoint ([3 x i8]* @global_var_10004a28.33 to i32), i32* @lr, align 4
  %v1_10004a24 = call i32 @function_1000a498(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a30.34 to i32), i32* @lr, align 4
  %v1_10004a2c = call i32 @function_10007f30(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a38.35 to i32), i32* @lr, align 4
  %v1_10004a34 = call i32 @function_10007f30(i32 16)
  store i32 268454464, i32* @lr, align 4
  %v1_10004a3c = call i32 @function_10007f30(i32 17)
  br label %dec_label_pc_10004a40

dec_label_pc_10004a40:                            ; preds = %dec_label_pc_100045bc, %dec_label_pc_10004a20
  %v0_10004a44 = load i32, i32* @r31, align 4
  store i32 %v0_1000455c, i32* @r23, align 4
  store i32 %v0_10004544, i32* @r25, align 4
  store i32 %v0_10004524, i32* @r27, align 4
  store i32 %v0_10004564, i32* @r28, align 4
  store i32 %v0_10004534, i32* @r29, align 4
  store i32 %v0_1000454c, i32* @r30, align 4
  store i32 %v0_10004554, i32* @r31, align 4
  ret i32 %v0_10004a44

dec_label_pc_10004a78:                            ; preds = %dec_label_pc_10004704
  %v3_10004704 = icmp eq i32 %v0_1000473874, 0
  %v1_10004a78 = add i32 %v0_1000473874, 1
  br i1 %v3_10004704, label %dec_label_pc_10004a80, label %dec_label_pc_1000470c

dec_label_pc_10004a80:                            ; preds = %dec_label_pc_10004a78
  %v0_10004a80 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004a80 = add i32 %v0_10004a80, %v1_1000479c76
  %v1_10004a84 = add i32 %v2_10004a80, 33
  %v2_10004a84 = inttoptr i32 %v1_10004a84 to i8*
  %v3_10004a84 = load i8, i8* %v2_10004a84, align 1
  %v3_10004a88 = icmp eq i8 %v3_10004a84, 65
  br i1 %v3_10004a88, label %dec_label_pc_10004a90, label %dec_label_pc_100046e8

dec_label_pc_10004a90:                            ; preds = %dec_label_pc_10004a80
  br label %dec_label_pc_100046e8.outer

dec_label_pc_10004a98:                            ; preds = %dec_label_pc_100047c0
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004aa4.36 to i32), i32* @lr, align 4
  %v1_10004aa0 = call i32 @function_10007f30(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_10004aac.37 to i32), i32* @lr, align 4
  %v1_10004aa8 = call i32 @function_10007f30(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_10004ab4.38 to i32), i32* @lr, align 4
  %v1_10004ab0 = call i32 @function_10007f30(i32 17)
  store i32 268454588, i32* @lr, align 4
  %v1_10004ab8 = call i32 @function_10007f30(i32 19)
  %v0_10004ac0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000455c, i32* @r23, align 4
  store i32 %v0_10004544, i32* @r25, align 4
  store i32 %v0_10004524, i32* @r27, align 4
  store i32 %v0_10004564, i32* @r28, align 4
  store i32 %v0_10004534, i32* @r29, align 4
  store i32 %v0_1000454c, i32* @r30, align 4
  store i32 %v0_10004554, i32* @r31, align 4
  ret i32 %v0_10004ac0

dec_label_pc_10004af4:                            ; preds = %dec_label_pc_10004514
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_100045bc

; uselistorder directives
  uselistorder i32 %v2_10004a08, { 1, 0 }
  uselistorder i32 %v1_1000479c.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_1000473874, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000479c76, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_1000471c22, { 1, 0 }
  uselistorder i32 %v1_100046b8, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_10004604, { 1, 0, 2 }
  uselistorder i32 %v2_10004548, { 1, 0 }
  uselistorder i32 %v2_10004528, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10008680, { 1, 0 }
  uselistorder i32 268453888, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_100087b8, { 1, 0 }
  uselistorder i32 268453400, { 1, 0 }
  uselistorder label %dec_label_pc_10004a40, { 1, 0 }
  uselistorder label %dec_label_pc_10004a20, { 1, 0 }
  uselistorder label %dec_label_pc_10004a14, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100049fc, { 1, 0 }
  uselistorder label %dec_label_pc_100048f0, { 1, 0 }
  uselistorder label %dec_label_pc_100048f0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10004808, { 1, 0 }
  uselistorder label %dec_label_pc_10004808.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047f8.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004748, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004734, { 1, 0 }
  uselistorder label %dec_label_pc_1000470c, { 1, 0 }
  uselistorder label %dec_label_pc_100046e8, { 1, 0 }
  uselistorder label %dec_label_pc_100046b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004660, { 1, 0 }
  uselistorder label %dec_label_pc_10004608.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10004620, { 1, 0 }
  uselistorder label %dec_label_pc_100045bc, { 1, 0 }
}

define i32 @function_10004b18(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004b18:
  %r11.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-4308 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-4272 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-4304 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4288 = alloca i32, align 4
  %v0_10004b24 = load i32, i32* @r28, align 4
  %v0_10004b30 = load i32, i32* @r23, align 4
  %v0_10004b34 = load i32, i32* @r24, align 4
  %v0_10004b38 = load i32, i32* @r25, align 4
  %v0_10004b40 = load i32, i32* @r27, align 4
  %v0_10004b44 = load i32, i32* @r29, align 4
  %v0_10004b4c = load i32, i32* @r31, align 4
  store i32 268454740, i32* @lr, align 4
  %v0_10004b50 = call i32 @function_10009068()
  store i32 %v0_10004b50, i32* @r28, align 4
  store i32 268454748, i32* @lr, align 4
  %v0_10004b58 = call i32 @function_10008ce0()
  store i32 %v0_10004b58, i32* @global_var_1001bd74.26, align 4
  %tmp50 = icmp slt i32 %v0_10004b58, 1
  br i1 %tmp50, label %dec_label_pc_10004ba4, label %dec_label_pc_10004b6c

dec_label_pc_10004b6c:                            ; preds = %dec_label_pc_10004e90, %dec_label_pc_10004d8c, %dec_label_pc_10004ba4, %dec_label_pc_10004b18
  %v0_10004ba0 = phi i32 [ -1, %dec_label_pc_10004d8c ], [ -1, %dec_label_pc_10004ba4 ], [ %v0_10004b58, %dec_label_pc_10004b18 ], [ 0, %dec_label_pc_10004e90 ]
  store i32 %v0_10004b30, i32* @r23, align 4
  store i32 %v0_10004b34, i32* @r24, align 4
  store i32 %v0_10004b38, i32* @r25, align 4
  store i32 %v0_10004b40, i32* @r27, align 4
  store i32 %v0_10004b24, i32* @r28, align 4
  store i32 %v0_10004b44, i32* @r29, align 4
  store i32 %v0_10004b4c, i32* @r31, align 4
  ret i32 %v0_10004ba0

dec_label_pc_10004ba4:                            ; preds = %dec_label_pc_10004b18
  %v3_10004ba4 = icmp eq i32 %v0_10004b58, -1
  br i1 %v3_10004ba4, label %dec_label_pc_10004b6c, label %dec_label_pc_10004bac

dec_label_pc_10004bac:                            ; preds = %dec_label_pc_10004ba4
  store i32 0, i32* @r27, align 4
  store i32 2, i32* %stack_var_-4288, align 4
  store i32 ptrtoint (i32* @global_var_10004bc8.39 to i32), i32* @lr, align 4
  %v1_10004bc4 = call i32 @function_10004514(i32 48101)
  store i32 268454880, i32* @lr, align 4
  %v3_10004bdc = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  %v3_10004be0 = icmp eq i32 %v3_10004bdc, -1
  store i32 %v3_10004bdc, i32* @r31, align 4
  br i1 %v3_10004be0, label %dec_label_pc_10004c04, label %dec_label_pc_10004bec

dec_label_pc_10004bec:                            ; preds = %dec_label_pc_10004bac
  %v2_10004bec = ptrtoint i32* %stack_var_-4288 to i32
  store i32 268454904, i32* @lr, align 4
  %v3_10004bf4 = call i32 @function_1000976c(i32 %v2_10004bec, i32 16, i32 16)
  %v0_10004bf8 = load i32, i32* @r31, align 4
  store i32 268454916, i32* @lr, align 4
  %v2_10004c00 = call i32 @function_10009844(i32 %v0_10004bf8, i32 1)
  br label %dec_label_pc_10004c04

dec_label_pc_10004c04:                            ; preds = %dec_label_pc_10004bac, %dec_label_pc_10004bec
  store i32 ptrtoint (i32* @global_var_10004c0c.40 to i32), i32* @lr, align 4
  %v1_10004c08 = call i32 @function_10004514(i32 1991)
  store i32 268454948, i32* @lr, align 4
  %v3_10004c20 = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  %v3_10004c24 = icmp eq i32 %v3_10004c20, -1
  store i32 %v3_10004c20, i32* @r31, align 4
  br i1 %v3_10004c24, label %dec_label_pc_10004c48, label %dec_label_pc_10004c30

dec_label_pc_10004c30:                            ; preds = %dec_label_pc_10004c04
  %v2_10004c30 = ptrtoint i32* %stack_var_-4288 to i32
  store i32 268454972, i32* @lr, align 4
  %v3_10004c38 = call i32 @function_1000976c(i32 %v2_10004c30, i32 16, i32 16)
  %v0_10004c3c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004c48.41 to i32), i32* @lr, align 4
  %v2_10004c44 = call i32 @function_10009844(i32 %v0_10004c3c, i32 1)
  br label %dec_label_pc_10004c48

dec_label_pc_10004c48:                            ; preds = %dec_label_pc_10004c04, %dec_label_pc_10004c30
  store i32 268455000, i32* @lr, align 4
  %v3_10004c54 = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  %v3_10004c58 = icmp eq i32 %v3_10004c54, -1
  store i32 %v3_10004c54, i32* @r31, align 4
  br i1 %v3_10004c58, label %dec_label_pc_10004c7c, label %dec_label_pc_10004c64

dec_label_pc_10004c64:                            ; preds = %dec_label_pc_10004c48
  %v2_10004c64 = ptrtoint i32* %stack_var_-4288 to i32
  store i32 268455024, i32* @lr, align 4
  %v3_10004c6c = call i32 @function_1000976c(i32 %v2_10004c64, i32 16, i32 16)
  %v0_10004c70 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004c7c.42 to i32), i32* @lr, align 4
  %v2_10004c78 = call i32 @function_10009844(i32 %v0_10004c70, i32 1)
  br label %dec_label_pc_10004c7c

dec_label_pc_10004c7c:                            ; preds = %dec_label_pc_10004c48, %dec_label_pc_10004c64
  store i32 ptrtoint (i32* @global_var_10004c84.43 to i32), i32* @lr, align 4
  %v1_10004c80 = call i32 @function_10004514(i32 22)
  store i32 268455068, i32* @lr, align 4
  %v3_10004c98 = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  %v3_10004c9c = icmp eq i32 %v3_10004c98, -1
  store i32 %v3_10004c98, i32* @r31, align 4
  br i1 %v3_10004c9c, label %dec_label_pc_10004cc0, label %dec_label_pc_10004ca8

dec_label_pc_10004ca8:                            ; preds = %dec_label_pc_10004c7c
  %v2_10004ca8 = ptrtoint i32* %stack_var_-4288 to i32
  store i32 268455092, i32* @lr, align 4
  %v3_10004cb0 = call i32 @function_1000976c(i32 %v2_10004ca8, i32 16, i32 16)
  %v0_10004cb4 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004cc0.44 to i32), i32* @lr, align 4
  %v2_10004cbc = call i32 @function_10009844(i32 %v0_10004cb4, i32 1)
  br label %dec_label_pc_10004cc0

dec_label_pc_10004cc0:                            ; preds = %dec_label_pc_10004c7c, %dec_label_pc_10004ca8
  store i32 ptrtoint (i32* @global_var_10004cc8.45 to i32), i32* @lr, align 4
  %v1_10004cc4 = call i32 @function_10004514(i32 23)
  store i32 268455136, i32* @lr, align 4
  %v3_10004cdc = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  %v3_10004ce0 = icmp eq i32 %v3_10004cdc, -1
  store i32 %v3_10004cdc, i32* @r31, align 4
  br i1 %v3_10004ce0, label %dec_label_pc_10004d04, label %dec_label_pc_10004cec

dec_label_pc_10004cec:                            ; preds = %dec_label_pc_10004cc0
  %v2_10004cec = ptrtoint i32* %stack_var_-4288 to i32
  store i32 268455160, i32* @lr, align 4
  %v3_10004cf4 = call i32 @function_1000976c(i32 %v2_10004cec, i32 16, i32 16)
  %v0_10004cf8 = load i32, i32* @r31, align 4
  store i32 268455172, i32* @lr, align 4
  %v2_10004d00 = call i32 @function_10009844(i32 %v0_10004cf8, i32 1)
  br label %dec_label_pc_10004d04

dec_label_pc_10004d04:                            ; preds = %dec_label_pc_10004cc0, %dec_label_pc_10004cec
  store i32 ptrtoint (i32* @global_var_10004d0c.46 to i32), i32* @lr, align 4
  %v1_10004d08 = call i32 @function_10004514(i32 1337)
  store i32 268455204, i32* @lr, align 4
  %v3_10004d20 = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  %v3_10004d24 = icmp eq i32 %v3_10004d20, -1
  store i32 %v3_10004d20, i32* @r31, align 4
  br i1 %v3_10004d24, label %dec_label_pc_10004d48, label %dec_label_pc_10004d30

dec_label_pc_10004d30:                            ; preds = %dec_label_pc_10004d04
  %v2_10004d30 = ptrtoint i32* %stack_var_-4288 to i32
  store i32 268455228, i32* @lr, align 4
  %v3_10004d38 = call i32 @function_1000976c(i32 %v2_10004d30, i32 16, i32 16)
  %v0_10004d3c = load i32, i32* @r31, align 4
  store i32 268455240, i32* @lr, align 4
  %v2_10004d44 = call i32 @function_10009844(i32 %v0_10004d3c, i32 1)
  br label %dec_label_pc_10004d48

dec_label_pc_10004d48:                            ; preds = %dec_label_pc_10004d04, %dec_label_pc_10004d30
  store i32 ptrtoint (i32* @global_var_10004d50.47 to i32), i32* @lr, align 4
  %v1_10004d4c = call i32 @function_10004514(i32 961)
  store i32 268455272, i32* @lr, align 4
  %v3_10004d64 = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  %v3_10004d68 = icmp eq i32 %v3_10004d64, -1
  store i32 %v3_10004d64, i32* @r31, align 4
  br i1 %v3_10004d68, label %dec_label_pc_10004d8c, label %dec_label_pc_10004d74

dec_label_pc_10004d74:                            ; preds = %dec_label_pc_10004d48
  %v2_10004d74 = ptrtoint i32* %stack_var_-4288 to i32
  store i32 268455296, i32* @lr, align 4
  %v3_10004d7c = call i32 @function_1000976c(i32 %v2_10004d74, i32 16, i32 16)
  %v0_10004d80 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d8c.48 to i32), i32* @lr, align 4
  %v2_10004d88 = call i32 @function_10009844(i32 %v0_10004d80, i32 1)
  br label %dec_label_pc_10004d8c

dec_label_pc_10004d8c:                            ; preds = %dec_label_pc_10004d48, %dec_label_pc_10004d74
  store i32 268566528, i32* %r30.global-to-local, align 4
  store i32 268455320, i32* @lr, align 4
  %v1_10004d94 = call i32 @function_1000a498(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 268455328, i32* @lr, align 4
  %v0_10004d9c = call i32 @function_10009ba4()
  store i32 %v0_10004d9c, i32* %r11.global-to-local, align 4
  %v0_10004dac = load i32, i32* @r27, align 4
  %v1_10004dac = trunc i32 %v0_10004dac to i8
  %v3_10004dac = inttoptr i32 %v0_10004d9c to i8*
  store i8 %v1_10004dac, i8* %v3_10004dac, align 1
  %v2_10004db0 = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v2_10004db0, i32* %r26.global-to-local, align 4
  %v0_10004db4 = load i32, i32* @r27, align 4
  store i32 %v0_10004db4, i32* @global_var_1001bd6c.49, align 4
  %v0_10004db8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10004db8, i32* @global_var_1001bd70.50, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004dc0.51 to i32), i32* @lr, align 4
  %v1_10004dbc = call i32 @function_10007fbc(i32 15)
  store i32 268455368, i32* @lr, align 4
  %v1_10004dc4 = call i32 @function_10007fbc(i32 16)
  %v3_10004dd0 = call i32 @function_10007f08(i32 15, i32* null)
  store i32 %v2_10004db0, i32* @r3, align 4
  %v2_10004ddc = bitcast i32* %stack_var_-4144 to i8*
  %v3_10004ddc = call i32 @function_10008580(i8* %v2_10004ddc, i32 %v3_10004dd0)
  %v0_10004de0 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004de0 = add i32 %v0_10004de0, %v3_10004ddc
  store i32 %v2_10004de0, i32* %r29.global-to-local, align 4
  store i32 268455400, i32* @lr, align 4
  %v0_10004de4 = call i32 @function_10008d28()
  %v2_10004de8 = ptrtoint i32* %stack_var_-4304 to i32
  %v3_10004df0 = trunc i32 %v0_10004de4 to i8
  %v4_10004df0 = call i32 @function_100089b4(i8 %v3_10004df0, i32 10, i32 %v2_10004de8)
  store i32 %v2_10004de0, i32* @r3, align 4
  %v2_10004dfc = inttoptr i32 %v2_10004de0 to i8*
  %v3_10004dfc = call i32 @function_10008580(i8* %v2_10004dfc, i32 %v4_10004df0)
  %v0_10004e04 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004e04 = add i32 %v0_10004e04, %v3_10004dfc
  store i32 %v2_10004e04, i32* %r29.global-to-local, align 4
  %v3_10004e0c = call i32 @function_10007f08(i32 16, i32* null)
  store i32 %v2_10004e04, i32* @r3, align 4
  %v2_10004e18 = inttoptr i32 %v2_10004e04 to i8*
  %v3_10004e18 = call i32 @function_10008580(i8* %v2_10004e18, i32 %v3_10004e0c)
  store i32 %v3_10004e18, i32* @r31, align 4
  store i32 268455472, i32* @lr, align 4
  %v2_10004e2c = call i32 @function_10008e00(i32 %v2_10004db0, i32 0)
  %v3_10004e30 = icmp eq i32 %v2_10004e2c, -1
  br i1 %v3_10004e30, label %dec_label_pc_10004b6c, label %dec_label_pc_10004e38

dec_label_pc_10004e38:                            ; preds = %dec_label_pc_10004d8c
  store i32 ptrtoint ([3 x i8]* @global_var_10004e3c.52 to i32), i32* @lr, align 4
  %v0_10004e38 = call i32 @function_10008c98()
  store i32 ptrtoint ([3 x i8]* @global_var_10004e44.53 to i32), i32* @lr, align 4
  %v1_10004e40 = call i32 @function_10007f30(i32 15)
  store i32 268455500, i32* @lr, align 4
  %v1_10004e48 = call i32 @function_10007f30(i32 16)
  %v3_10004e4c = load i32, i32* @global_var_1001bd70.50, align 4
  store i32 268455516, i32* @lr, align 4
  %v3_10004e58 = call i32 @function_10008f18(i32 %v2_10004db0, i32 %v3_10004e4c, i32 4095)
  %v3_10004e5c = icmp eq i32 %v3_10004e58, -1
  br i1 %v3_10004e5c, label %dec_label_pc_10004e6c, label %dec_label_pc_10004e64

dec_label_pc_10004e64:                            ; preds = %dec_label_pc_10004e38
  %v3_10004e64 = load i32, i32* @global_var_1001bd70.50, align 4
  %v0_10004e68 = load i32, i32* @r27, align 4
  %v3_10004e68 = trunc i32 %v0_10004e68 to i8
  %v4_10004e68 = add i32 %v3_10004e64, %v3_10004e58
  %v5_10004e68 = inttoptr i32 %v4_10004e68 to i8*
  store i8 %v3_10004e68, i8* %v5_10004e68, align 1
  br label %dec_label_pc_10004e6c

dec_label_pc_10004e6c:                            ; preds = %dec_label_pc_10004e38, %dec_label_pc_10004e64
  %v0_10004e6c = load i32, i32* %r29.global-to-local, align 4
  %v1_10004e6c = load i32, i32* @r31, align 4
  %v2_10004e6c = add i32 %v1_10004e6c, %v0_10004e6c
  store i32 %v2_10004db0, i32* @r3, align 4
  %v0_10004e74 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004e74 = sub i32 %v2_10004e6c, %v0_10004e74
  store i32 %v2_10004e74, i32* @r4, align 4
  %v0_10004e78 = load i32, i32* @r28, align 4
  store i32 %v0_10004e78, i32* %r29.global-to-local, align 4
  store i32 268455552, i32* @lr, align 4
  %v0_10004e7c = call i32 @function_10008600()
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v2_10004e88 = ptrtoint i32* %stack_var_-4208 to i32
  store i32 %v2_10004e88, i32* @r24, align 4
  %v2_10004e8c = ptrtoint i32* %stack_var_-4272 to i32
  store i32 %v2_10004e8c, i32* @r23, align 4
  %v2_10004f5c = bitcast i32* %stack_var_-4208 to i8*
  %v2_10004fa0 = bitcast i32* %stack_var_-4272 to i8*
  br label %dec_label_pc_10004e90

dec_label_pc_10004e90:                            ; preds = %dec_label_pc_10004f20, %dec_label_pc_10004e6c
  store i32 268455576, i32* @lr, align 4
  %v1_10004e94 = call i32 @function_10007fbc(i32 15)
  %v3_10004ea0 = call i32 @function_10007f08(i32 15, i32* null)
  store i32 268455592, i32* @lr, align 4
  %v1_10004ea4 = call i32 @function_1000919c(i32 %v3_10004ea0)
  store i32 %v1_10004ea4, i32* @r27, align 4
  %v3_10004ea8 = icmp eq i32 %v1_10004ea4, 0
  br i1 %v3_10004ea8, label %dec_label_pc_10004b6c, label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004e90
  store i32 268455608, i32* @lr, align 4
  %v1_10004eb4 = call i32 @function_10007f30(i32 15)
  %v0_10004eb88 = load i32, i32* @r27, align 4
  store i32 268455616, i32* @lr, align 4
  %v1_10004ebc9 = inttoptr i32 %v0_10004eb88 to i32*
  %v2_10004ebc10 = call i32 @function_100092ac(i32* %v1_10004ebc9)
  %v3_10004ec013 = icmp eq i32 %v2_10004ebc10, 0
  br i1 %v3_10004ec013, label %dec_label_pc_10004f20, label %dec_label_pc_10004ec8.preheader

dec_label_pc_10004ec8.preheader:                  ; preds = %dec_label_pc_10004eb0, %dec_label_pc_10004eb8.backedge
  %v0_10004ec815 = phi i32 [ %v2_10004ebc, %dec_label_pc_10004eb8.backedge ], [ %v2_10004ebc10, %dec_label_pc_10004eb0 ]
  br label %dec_label_pc_10004ec8

dec_label_pc_10004ec8:                            ; preds = %dec_label_pc_10004ec8.preheader, %dec_label_pc_10004f0c
  %v0_10004edc = phi i32 [ %v0_10004ec815, %dec_label_pc_10004ec8.preheader ], [ %v2_10004f14, %dec_label_pc_10004f0c ]
  %v1_10004ec8 = add i32 %v0_10004edc, 11
  %v2_10004ec8 = inttoptr i32 %v1_10004ec8 to i8*
  %v3_10004ec8 = load i8, i8* %v2_10004ec8, align 1
  %v4_10004ec8 = zext i8 %v3_10004ec8 to i32
  %v1_10004ecc = add nuw nsw i32 %v4_10004ec8, 208
  %v1_10004ed0 = urem i32 %v1_10004ecc, 256
  %v2_10004ed4 = icmp ugt i32 %v1_10004ed0, 9
  br i1 %v2_10004ed4, label %dec_label_pc_10004eb8.backedge, label %dec_label_pc_10004edc

dec_label_pc_10004edc:                            ; preds = %dec_label_pc_10004ec8
  store i32 268455660, i32* @lr, align 4
  %v3_10004ee8 = call i32 @function_1000a24c(i8* %v2_10004ec8, i32 %v1_10004ed0)
  %v0_10004eec = load i32, i32* @r28, align 4
  %v2_10004eec = icmp slt i32 %v0_10004eec, %v3_10004ee8
  store i32 %v3_10004ee8, i32* %r30.global-to-local, align 4
  br i1 %v2_10004eec, label %dec_label_pc_10004f2c, label %dec_label_pc_10004ef8

dec_label_pc_10004ef8:                            ; preds = %dec_label_pc_10004edc
  store i32 268455680, i32* @lr, align 4
  %v0_10004efc = call i32 @function_10009068()
  %v0_10004f00 = load i32, i32* @r29, align 4
  %v2_10004f00 = sub i32 %v0_10004efc, %v0_10004f00
  %tmp51 = icmp slt i32 %v2_10004f00, 601
  br i1 %tmp51, label %dec_label_pc_1000512c, label %dec_label_pc_10004f0c

dec_label_pc_10004f0c:                            ; preds = %dec_label_pc_10004ef8
  %v0_10004f0c = load i32, i32* @r27, align 4
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 268455704, i32* @lr, align 4
  %v1_10004f14 = inttoptr i32 %v0_10004f0c to i32*
  %v2_10004f14 = call i32 @function_100092ac(i32* %v1_10004f14)
  %v3_10004f18 = icmp eq i32 %v2_10004f14, 0
  br i1 %v3_10004f18, label %dec_label_pc_10004f20, label %dec_label_pc_10004ec8

dec_label_pc_10004f20:                            ; preds = %dec_label_pc_10004eb8.backedge, %dec_label_pc_10004f0c, %dec_label_pc_10004eb0
  %v0_10004f20 = load i32, i32* @r27, align 4
  store i32 268455720, i32* @lr, align 4
  %v1_10004f24 = inttoptr i32 %v0_10004f20 to i32*
  %v2_10004f24 = call i32 @function_100090f8(i32* %v1_10004f24)
  br label %dec_label_pc_10004e90

dec_label_pc_10004f2c:                            ; preds = %dec_label_pc_10004edc
  store i32 268455732, i32* @lr, align 4
  %v0_10004f30 = call i32 @function_10009068()
  store i32 %v0_10004f30, i32* %r22.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004f40.55 to i32), i32* @lr, align 4
  %v1_10004f3c = call i32 @function_10007fbc(i32 15)
  store i32 268455752, i32* @lr, align 4
  %v1_10004f44 = call i32 @function_10007fbc(i32 16)
  %v3_10004f50 = call i32 @function_10007f08(i32 15, i32* null)
  store i32 %v2_10004e88, i32* @r3, align 4
  %v3_10004f5c = call i32 @function_10008580(i8* %v2_10004f5c, i32 %v3_10004f50)
  %v0_10004f60 = load i32, i32* @r31, align 4
  %v0_10004f64 = load i32, i32* @r24, align 4
  %v2_10004f64 = add i32 %v0_10004f64, %v3_10004f5c
  store i32 %v2_10004f64, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f64, i32* @r3, align 4
  %v2_10004f6c = inttoptr i32 %v2_10004f64 to i8*
  %v3_10004f6c = call i32 @function_10008580(i8* %v2_10004f6c, i32 %v0_10004f60)
  store i32 %v3_10004f6c, i32* %r29.global-to-local, align 4
  %v3_10004f7c = call i32 @function_10007f08(i32 16, i32* null)
  %v2_10004f84 = add i32 %v3_10004f6c, %v2_10004f64
  store i32 %v2_10004f84, i32* @r3, align 4
  %v2_10004f88 = inttoptr i32 %v2_10004f84 to i8*
  %v3_10004f88 = call i32 @function_10008580(i8* %v2_10004f88, i32 %v3_10004f7c)
  %v3_10004f94 = call i32 @function_10007f08(i32 15, i32* null)
  store i32 %v2_10004e8c, i32* @r3, align 4
  %v3_10004fa0 = call i32 @function_10008580(i8* %v2_10004fa0, i32 %v3_10004f94)
  %v0_10004fa4 = load i32, i32* @r31, align 4
  %v0_10004fa8 = load i32, i32* @r23, align 4
  %v2_10004fa8 = add i32 %v0_10004fa8, %v3_10004fa0
  store i32 %v2_10004fa8, i32* %r28.global-to-local, align 4
  store i32 %v2_10004fa8, i32* @r3, align 4
  %v2_10004fb0 = inttoptr i32 %v2_10004fa8 to i8*
  %v3_10004fb0 = call i32 @function_10008580(i8* %v2_10004fb0, i32 %v0_10004fa4)
  store i32 %v3_10004fb0, i32* %r29.global-to-local, align 4
  %v3_10004fc0 = call i32 @function_10007f08(i32 31, i32* null)
  %v2_10004fc8 = add i32 %v3_10004fb0, %v2_10004fa8
  store i32 %v2_10004fc8, i32* @r3, align 4
  %v2_10004fcc = inttoptr i32 %v2_10004fc8 to i8*
  %v3_10004fcc = call i32 @function_10008580(i8* %v2_10004fcc, i32 %v3_10004fc0)
  store i32 ptrtoint ([3 x i8]* @global_var_10004fd8.57 to i32), i32* @lr, align 4
  %v1_10004fd4 = call i32 @function_10007f30(i32 15)
  store i32 268455904, i32* @lr, align 4
  %v1_10004fdc = call i32 @function_10007f30(i32 16)
  store i32 268455920, i32* @lr, align 4
  %v2_10004fec = call i32 @function_10008e00(i32 %v2_10004e88, i32 0)
  %v3_10004ff0 = icmp eq i32 %v2_10004fec, -1
  store i32 %v2_10004fec, i32* @r31, align 4
  br i1 %v3_10004ff0, label %dec_label_pc_100050f4, label %dec_label_pc_10004ffc

dec_label_pc_10004ffc:                            ; preds = %dec_label_pc_10004f2c
  store i32 ptrtoint ([3 x i8]* @global_var_10005004.58 to i32), i32* @lr, align 4
  %v1_10005000 = call i32 @function_10007fbc(i32 20)
  store i32 268455948, i32* @lr, align 4
  %v1_10005008 = call i32 @function_10007fbc(i32 21)
  %v3_10005014 = call i32 @function_10007f08(i32 20, i32* nonnull %stack_var_-4312)
  store i32 %v3_10005014, i32* %r29.global-to-local, align 4
  %v3_10005024 = call i32 @function_10007f08(i32 21, i32* nonnull %stack_var_-4308)
  store i32 %v3_10005024, i32* %r28.global-to-local, align 4
  %v0_1000502c56 = load i32, i32* @r31, align 4
  store i32 268455996, i32* @lr, align 4
  %v3_1000503857 = call i32 @function_10008ed0(i32 %v0_1000502c56, i32 %v2_10004db0, i32 4096)
  %tmp5259 = icmp slt i32 %v3_1000503857, 1
  br i1 %tmp5259, label %dec_label_pc_1000515c, label %dec_label_pc_10005044

dec_label_pc_10005044:                            ; preds = %dec_label_pc_10004ffc, %dec_label_pc_1000502c.backedge
  %v3_1000503860 = phi i32 [ %v3_10005038, %dec_label_pc_1000502c.backedge ], [ %v3_1000503857, %dec_label_pc_10004ffc ]
  %v3_1000503c61.in = phi i32 [ %v3_10005038, %dec_label_pc_1000502c.backedge ], [ %v3_1000503857, %dec_label_pc_10004ffc ]
  %v3_1000503c61 = icmp eq i32 %v3_1000503c61.in, 0
  %v3_10005044 = load i32, i32* %stack_var_-4312, align 4
  %v2_10005048 = icmp slt i32 %v3_1000503860, %v3_10005044
  br i1 %v2_10005048, label %dec_label_pc_10005088, label %dec_label_pc_10005050

dec_label_pc_10005050:                            ; preds = %dec_label_pc_10005044
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10005064.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005064

dec_label_pc_10005064:                            ; preds = %dec_label_pc_10005050, %dec_label_pc_10005080
  %v0_10005084 = phi i32 [ %v3_1000503860, %dec_label_pc_10005050 ], [ %v1_10005084, %dec_label_pc_10005080 ]
  %v0_10005080 = phi i32 [ %v2_10004db0, %dec_label_pc_10005050 ], [ %v1_10005080, %dec_label_pc_10005080 ]
  %v1_10005064 = phi i32 [ 0, %dec_label_pc_10005050 ], [ %v1_1000506417, %dec_label_pc_10005080 ]
  %v2_10005064 = add i32 %v1_10005064, %v0_10005064.pre
  %v3_10005064 = inttoptr i32 %v2_10005064 to i8*
  %v4_10005064 = load i8, i8* %v3_10005064, align 1
  %v1_10005068 = add i32 %v1_10005064, 1
  store i32 %v1_10005068, i32* %r11.global-to-local, align 4
  %v1_1000506c = inttoptr i32 %v0_10005080 to i8*
  %v2_1000506c = load i8, i8* %v1_1000506c, align 1
  %v4_10005074 = icmp eq i8 %v2_1000506c, %v4_10005064
  br i1 %v4_10005074, label %dec_label_pc_100050cc, label %dec_label_pc_1000507c

dec_label_pc_1000507c:                            ; preds = %dec_label_pc_10005064
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005080

dec_label_pc_10005080:                            ; preds = %dec_label_pc_100050cc, %dec_label_pc_1000507c
  %v1_1000506417 = phi i32 [ %v1_10005068, %dec_label_pc_100050cc ], [ 0, %dec_label_pc_1000507c ]
  %v1_10005080 = add i32 %v0_10005080, 1
  %v1_10005084 = add i32 %v0_10005084, -1
  %v2_10005084 = icmp eq i32 %v1_10005084, 0
  br i1 %v2_10005084, label %dec_label_pc_10005088, label %dec_label_pc_10005064

dec_label_pc_10005088:                            ; preds = %dec_label_pc_10005080, %dec_label_pc_10005044
  %v3_10005088 = load i32, i32* %stack_var_-4308, align 4
  %v2_1000508c = icmp slt i32 %v3_1000503860, %v3_10005088
  br i1 %v2_1000508c, label %dec_label_pc_1000502c.backedge, label %dec_label_pc_10005094

dec_label_pc_10005094:                            ; preds = %dec_label_pc_10005088
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000503c61, label %dec_label_pc_1000502c.backedge, label %dec_label_pc_100050a8.lr.ph

dec_label_pc_1000502c.backedge:                   ; preds = %dec_label_pc_100050a4.backedge, %dec_label_pc_10005094, %dec_label_pc_10005088
  %v0_1000502c = load i32, i32* @r31, align 4
  store i32 268455996, i32* @lr, align 4
  %v3_10005038 = call i32 @function_10008ed0(i32 %v0_1000502c, i32 %v2_10004db0, i32 4096)
  %tmp52 = icmp slt i32 %v3_10005038, 1
  br i1 %tmp52, label %dec_label_pc_1000515c, label %dec_label_pc_10005044

dec_label_pc_100050a8.lr.ph:                      ; preds = %dec_label_pc_10005094
  %v0_100050a8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100050a8

dec_label_pc_100050a8:                            ; preds = %dec_label_pc_100050a8.lr.ph, %dec_label_pc_100050a4.backedge
  %v0_100050a4 = phi i32 [ %v3_1000503860, %dec_label_pc_100050a8.lr.ph ], [ %v1_100050a4, %dec_label_pc_100050a4.backedge ]
  %storemerge.in = phi i32 [ %v2_10004db0, %dec_label_pc_100050a8.lr.ph ], [ %storemerge, %dec_label_pc_100050a4.backedge ]
  %v1_100050a8 = phi i32 [ 0, %dec_label_pc_100050a8.lr.ph ], [ %v1_100050a823, %dec_label_pc_100050a4.backedge ]
  %v2_100050a8 = add i32 %v1_100050a8, %v0_100050a8.pre
  %v3_100050a8 = inttoptr i32 %v2_100050a8 to i8*
  %v4_100050a8 = load i8, i8* %v3_100050a8, align 1
  %v1_100050ac = add i32 %v1_100050a8, 1
  store i32 %v1_100050ac, i32* %r11.global-to-local, align 4
  %v1_100050b0 = inttoptr i32 %storemerge.in to i8*
  %v2_100050b0 = load i8, i8* %v1_100050b0, align 1
  %v4_100050b8 = icmp eq i8 %v2_100050b0, %v4_100050a8
  br i1 %v4_100050b8, label %dec_label_pc_10005120, label %dec_label_pc_100050c0

dec_label_pc_100050c0:                            ; preds = %dec_label_pc_100050a8
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100050a4.backedge

dec_label_pc_100050a4.backedge:                   ; preds = %dec_label_pc_10005120, %dec_label_pc_100050c0
  %v1_100050a823 = phi i32 [ 0, %dec_label_pc_100050c0 ], [ %v1_100050ac, %dec_label_pc_10005120 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_100050a4 = add i32 %v0_100050a4, -1
  %v2_100050a4 = icmp eq i32 %v1_100050a4, 0
  br i1 %v2_100050a4, label %dec_label_pc_1000502c.backedge, label %dec_label_pc_100050a8

dec_label_pc_100050cc:                            ; preds = %dec_label_pc_10005064
  %v4_10005070 = icmp eq i32 %v3_10005044, %v1_10005068
  br i1 %v4_10005070, label %dec_label_pc_100050d0, label %dec_label_pc_10005080

dec_label_pc_100050d0:                            ; preds = %dec_label_pc_100050cc, %dec_label_pc_10005120
  store i32 ptrtoint ([3 x i8]* @global_var_100050d8.59 to i32), i32* @lr, align 4
  %v1_100050d4 = call i32 @function_10007f30(i32 20)
  store i32 268456160, i32* @lr, align 4
  %v1_100050dc = call i32 @function_10007f30(i32 21)
  store i32 268456168, i32* @lr, align 4
  %v0_100050e4 = call i32 @function_10008c98()
  %v0_100050e8 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456180, i32* @lr, align 4
  %v2_100050f0 = call i32 @function_10008db8(i32 %v0_100050e8, i32 9)
  br label %dec_label_pc_100050f4

dec_label_pc_100050f4:                            ; preds = %dec_label_pc_10004f2c, %dec_label_pc_1000515c, %dec_label_pc_100050d0
  store i32 64, i32* @r4, align 4
  store i32 %v2_10004e88, i32* @r3, align 4
  store i32 268456192, i32* @lr, align 4
  %v0_100050fc = call i32 @function_10008600()
  store i32 %v2_10004e8c, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_10005108 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005108, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005110.60 to i32), i32* @lr, align 4
  %v0_1000510c = call i32 @function_10008600()
  store i32 268456216, i32* @lr, align 4
  %v1_10005114 = call i32 @function_1000a498(i32 1)
  %v0_10005118 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10005118, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004eb8.backedge

dec_label_pc_10004eb8.backedge:                   ; preds = %dec_label_pc_10004ec8, %dec_label_pc_100050f4, %dec_label_pc_10005150, %dec_label_pc_1000512c, %dec_label_pc_10005134
  %v0_10004eb8 = load i32, i32* @r27, align 4
  store i32 268455616, i32* @lr, align 4
  %v1_10004ebc = inttoptr i32 %v0_10004eb8 to i32*
  %v2_10004ebc = call i32 @function_100092ac(i32* %v1_10004ebc)
  %v3_10004ec0 = icmp eq i32 %v2_10004ebc, 0
  br i1 %v3_10004ec0, label %dec_label_pc_10004f20, label %dec_label_pc_10004ec8.preheader

dec_label_pc_10005120:                            ; preds = %dec_label_pc_100050a8
  %v4_100050b4 = icmp eq i32 %v3_10005088, %v1_100050ac
  br i1 %v4_100050b4, label %dec_label_pc_100050d0, label %dec_label_pc_100050a4.backedge

dec_label_pc_1000512c:                            ; preds = %dec_label_pc_10004ef8
  %v0_1000512c = load i32, i32* %r30.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_1000512c, 401
  br i1 %tmp53, label %dec_label_pc_10004eb8.backedge, label %dec_label_pc_10005134

dec_label_pc_10005134:                            ; preds = %dec_label_pc_1000512c
  %v0_1000513c = load i32, i32* @r25, align 4
  %v1_10005140 = urem i32 %v0_1000513c, 10
  %v4_10005148 = icmp eq i32 %v1_10005140, 0
  br i1 %v4_10005148, label %dec_label_pc_10005150, label %dec_label_pc_10004eb8.backedge

dec_label_pc_10005150:                            ; preds = %dec_label_pc_10005134
  store i32 268456280, i32* @lr, align 4
  %v1_10005154 = call i32 @function_1000a498(i32 1)
  br label %dec_label_pc_10004eb8.backedge

dec_label_pc_1000515c:                            ; preds = %dec_label_pc_1000502c.backedge, %dec_label_pc_10004ffc
  store i32 ptrtoint ([3 x i8]* @global_var_10005164.61 to i32), i32* @lr, align 4
  %v1_10005160 = call i32 @function_10007f30(i32 20)
  store i32 268456300, i32* @lr, align 4
  %v1_10005168 = call i32 @function_10007f30(i32 21)
  store i32 268456308, i32* @lr, align 4
  %v0_10005170 = call i32 @function_10008c98()
  br label %dec_label_pc_100050f4

; uselistorder directives
  uselistorder i32 %v2_10004ebc, { 1, 0 }
  uselistorder i32 %v1_100050a4, { 1, 0 }
  uselistorder i32 %v1_100050ac, { 1, 0, 2 }
  uselistorder i32 %v1_100050a8, { 1, 0 }
  uselistorder i32 %v3_10005038, { 2, 1, 0 }
  uselistorder i32 %v1_10005084, { 1, 0 }
  uselistorder i32 %v1_10005064, { 1, 0 }
  uselistorder i32 %v3_1000503860, { 3, 0, 2, 1 }
  uselistorder i32 %v2_10004f14, { 1, 0 }
  uselistorder i32 %v1_10004ed0, { 1, 0 }
  uselistorder i32 %v2_10004e04, { 1, 0, 2 }
  uselistorder i32 %v2_10004de0, { 1, 0, 2 }
  uselistorder i32 %v2_10004db0, { 1, 3, 2, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 %v0_10004b58, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4288, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4312, { 1, 0 }
  uselistorder i32* %stack_var_-4308, { 1, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 7 }
  uselistorder i32 268455996, { 1, 0 }
  uselistorder i32 (i32*)* @function_100092ac, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268455616, { 1, 0 }
  uselistorder i32 (i32)* @function_1000919c, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008f18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004eb8.backedge, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_100050f4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100050d0, { 1, 0 }
  uselistorder label %dec_label_pc_100050a8, { 1, 0 }
  uselistorder label %dec_label_pc_10005064, { 1, 0 }
  uselistorder label %dec_label_pc_10005044, { 1, 0 }
  uselistorder label %dec_label_pc_10004ec8, { 1, 0 }
  uselistorder label %dec_label_pc_10004ec8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004e6c, { 1, 0 }
  uselistorder label %dec_label_pc_10004d8c, { 1, 0 }
  uselistorder label %dec_label_pc_10004d48, { 1, 0 }
  uselistorder label %dec_label_pc_10004d04, { 1, 0 }
  uselistorder label %dec_label_pc_10004cc0, { 1, 0 }
  uselistorder label %dec_label_pc_10004c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10004c48, { 1, 0 }
  uselistorder label %dec_label_pc_10004c04, { 1, 0 }
}

define i32 @function_10005178() local_unnamed_addr {
dec_label_pc_10005178:
  store i32 268456824, i32* @global_var_1001bd48.62, align 4
  %v0_10005188 = load i32, i32* @r3, align 4
  ret i32 %v0_10005188
}

define i32 @function_1000518c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000518c:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_100051ac = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_100051bc = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_100051c8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_100051c8, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268456404, i32* @lr, align 4
  %v3_100051d0 = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  %v3_100051d4 = icmp eq i32 %v3_100051d0, -1
  store i32 %v3_100051d0, i32* @global_var_1001bd40.63, align 4
  br i1 %v3_100051d4, label %dec_label_pc_10005284, label %dec_label_pc_100051f0

dec_label_pc_100051f0:                            ; preds = %dec_label_pc_1000518c
  %v2_100051d8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268456436, i32* @lr, align 4
  %v5_100051f0 = call i32 @function_10009964(i32 %v3_100051d0, i32 1, i32 2, i32 %v2_100051d8)
  %v3_100051f4 = load i32, i32* @global_var_1001bd40.63, align 4
  store i32 3, i32* @r4, align 4
  store i32 268456460, i32* @lr, align 4
  %v2_10005208 = call i32 @function_10008bb0(i32 %v3_100051f4)
  store i32 4, i32* @r4, align 4
  store i32 268456480, i32* @lr, align 4
  %v2_1000521c = call i32 @function_10008bb0(i32 %v3_100051f4)
  %v3_10005220 = load i8, i8* @global_var_1001bc00.64, align 1
  %v3_10005228 = icmp eq i8 %v3_10005220, 0
  br i1 %v3_10005228, label %dec_label_pc_100052a8, label %dec_label_pc_10005234

dec_label_pc_10005234:                            ; preds = %dec_label_pc_100051f0
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10005248 = call i32 @function_1000936c()
  %v0_1000524c = load i32, i32* @r27, align 4
  %v2_1000524c = inttoptr i32 %v0_10005248 to i32*
  store i32 %v0_1000524c, i32* %v2_1000524c, align 4
  store i32 %v0_10005248, i32* @r29, align 4
  %v3_1000525c = load i32, i32* @global_var_1001bd40.63, align 4
  store i32 268456548, i32* @lr, align 4
  %v3_10005260 = call i32 @function_1000976c(i32 %v3_1000525c, i32 %v2_100051c8, i32 16)
  %v3_10005268 = icmp eq i32 %v3_10005260, -1
  br i1 %v3_10005268, label %dec_label_pc_100052f0, label %dec_label_pc_10005274

dec_label_pc_10005274:                            ; preds = %dec_label_pc_100052a8, %dec_label_pc_10005234
  %v3_1000527c = load i32, i32* @global_var_1001bd40.63, align 4
  store i32 268456580, i32* @lr, align 4
  %v2_10005280 = call i32 @function_10009844(i32 %v3_1000527c, i32 1)
  br label %dec_label_pc_10005284

dec_label_pc_10005284:                            ; preds = %dec_label_pc_1000518c, %dec_label_pc_10005274
  %v0_100052a4 = phi i32 [ -1, %dec_label_pc_1000518c ], [ %v2_10005280, %dec_label_pc_10005274 ]
  store i32 %v0_100051ac, i32* @r28, align 4
  store i32 %v0_100051bc, i32* @r31, align 4
  ret i32 %v0_100052a4

dec_label_pc_100052a8:                            ; preds = %dec_label_pc_100051f0
  store i32 2, i32* %stack_var_-52, align 4
  %v0_100052c4 = call i32 @function_1000936c()
  %v0_100052c8 = load i32, i32* @r27, align 4
  %v2_100052c8 = inttoptr i32 %v0_100052c4 to i32*
  store i32 %v0_100052c8, i32* %v2_100052c8, align 4
  store i32 %v0_100052c4, i32* @r29, align 4
  %v3_100052d8 = load i32, i32* @global_var_1001bd40.63, align 4
  store i32 268456672, i32* @lr, align 4
  %v3_100052dc = call i32 @function_1000976c(i32 %v3_100052d8, i32 %v2_100051c8, i32 16)
  %v3_100052e4 = icmp eq i32 %v3_100052dc, -1
  br i1 %v3_100052e4, label %dec_label_pc_100052f0, label %dec_label_pc_10005274

dec_label_pc_100052f0:                            ; preds = %dec_label_pc_100052a8, %dec_label_pc_10005234
  %v0_100052f0 = load i32, i32* @r29, align 4
  %v1_100052f0 = inttoptr i32 %v0_100052f0 to i32*
  %v2_100052f0 = load i32, i32* %v1_100052f0, align 4
  %v3_100052f4 = load i32, i32* @global_var_1001bd40.63, align 4
  store i32 %v3_100052f4, i32* @r3, align 4
  %v3_100052f8 = icmp eq i32 %v2_100052f0, 99
  br i1 %v3_100052f8, label %dec_label_pc_10005360, label %dec_label_pc_10005300

dec_label_pc_10005300:                            ; preds = %dec_label_pc_10005360, %dec_label_pc_100052f0, %dec_label_pc_1000536c
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000531c.65 to i32), i32* @lr, align 4
  %v0_10005318 = call i32 @function_100097a0()
  store i32 268456740, i32* @lr, align 4
  %v1_10005320 = call i32 @function_1000a498(i32 5)
  store i32 ptrtoint ([3 x i8]* @global_var_1000532c.66 to i32), i32* @lr, align 4
  %v0_10005328 = call i32 @function_10008c98()
  store i32 268456760, i32* @lr, align 4
  %v1_10005334 = call i32 @function_10004514(i32 47675)
  store i32 268456764, i32* @lr, align 4
  %v1_10005338 = call i32 @function_1000518c(i32 %v1_10005334)
  store i32 %v0_100051ac, i32* @r28, align 4
  store i32 %v0_100051bc, i32* @r31, align 4
  ret i32 %v1_10005338

dec_label_pc_10005360:                            ; preds = %dec_label_pc_100052f0
  %v3_10005360 = load i8, i8* @global_var_1001bc00.64, align 1
  %v3_10005364 = icmp eq i8 %v3_10005360, 0
  br i1 %v3_10005364, label %dec_label_pc_10005300, label %dec_label_pc_1000536c

dec_label_pc_1000536c:                            ; preds = %dec_label_pc_10005360
  %v0_10005370 = load i32, i32* @r27, align 4
  %v1_10005370 = trunc i32 %v0_10005370 to i8
  store i8 %v1_10005370, i8* @global_var_1001bc00.64, align 1
  br label %dec_label_pc_10005300

; uselistorder directives
  uselistorder i32 %v2_100051c8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_10004514, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009844, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000976c, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001bc00.64, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005300, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005284, { 1, 0 }
}

define i32 @function_10005378() local_unnamed_addr {
dec_label_pc_10005378:
  %r28.global-to-local = alloca i32, align 4
  store i32 268456856, i32* @lr, align 4
  %v1_10005394 = call i32 @function_10007fbc(i32 2)
  %v3_100053a0 = call i32 @function_10007f08(i32 2, i32* null)
  store i32 268456872, i32* @lr, align 4
  %v1_100053a4 = call i32 @function_10005ff8(i32 %v3_100053a0)
  store i32 %v1_100053a4, i32* @r31, align 4
  store i32 268456884, i32* @lr, align 4
  %v1_100053b0 = call i32 @function_10007f30(i32 2)
  %v0_100053b4 = load i32, i32* @r31, align 4
  %v3_100053b4 = icmp eq i32 %v0_100053b4, 0
  br i1 %v3_100053b4, label %dec_label_pc_10005418, label %dec_label_pc_100053bc

dec_label_pc_100053bc:                            ; preds = %dec_label_pc_10005378
  %v1_100053bc = add i32 %v0_100053b4, 4
  %v2_100053bc = inttoptr i32 %v1_100053bc to i32*
  %v3_100053bc = load i32, i32* %v2_100053bc, align 4
  store i32 %v3_100053bc, i32* %r28.global-to-local, align 4
  %v0_100053c0 = call i32 @function_10005cd4()
  %v0_100053c4 = load i32, i32* @r31, align 4
  %v1_100053c4 = inttoptr i32 %v0_100053c4 to i8*
  %v2_100053c4 = load i8, i8* %v1_100053c4, align 1
  %v3_100053c4 = zext i8 %v2_100053c4 to i32
  %v2_100053d0 = urem i32 %v0_100053c0, %v3_100053c4
  %v1_100053e4 = mul nuw nsw i32 %v2_100053d0, 4
  %v1_100053e8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100053e8 = add i32 %v1_100053e8, %v1_100053e4
  %v3_100053e8 = inttoptr i32 %v2_100053e8 to i32*
  %v4_100053e8 = load i32, i32* %v3_100053e8, align 4
  store i32 %v4_100053e8, i32* @global_var_1001be44.69, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100053f4.70 to i32), i32* @lr, align 4
  %v1_100053f0 = call i32 @function_10005fb4(i32 %v0_100053c4)
  store i32 ptrtoint ([3 x i8]* @global_var_100053fc.71 to i32), i32* @lr, align 4
  %v1_100053f8 = call i32 @function_10007fbc(i32 1)
  %v3_10005404 = call i32 @function_10007f08(i32 1, i32* null)
  %v4_10005404 = inttoptr i32 %v3_10005404 to i16*
  %v3_10005408 = load i16, i16* %v4_10005404, align 2
  store i16 %v3_10005408, i16* bitcast (i32* @global_var_1001be42.72 to i16*), align 4
  store i32 268456984, i32* @lr, align 4
  %v1_10005414 = call i32 @function_10007f30(i32 1)
  br label %dec_label_pc_10005418

dec_label_pc_10005418:                            ; preds = %dec_label_pc_10005378, %dec_label_pc_100053bc
  %v0_10005430 = phi i32 [ %v1_100053b0, %dec_label_pc_10005378 ], [ %v1_10005414, %dec_label_pc_100053bc ]
  ret i32 %v0_10005430

; uselistorder directives
  uselistorder label %dec_label_pc_10005418, { 1, 0 }
}

define i32 @function_10005434(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005434:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1612 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1608 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-1624 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10005434 = load i32, i32* @lr, align 4
  store i32 %v0_10005434, i32* %r0.global-to-local, align 4
  %v0_1000543c = load i32, i32* @r31, align 4
  store i32 268457032, i32* @lr, align 4
  %v0_10005444 = call i32 @function_10008ce0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10005444, i32* @global_var_1001bd78.73, align 4
  %tmp47 = icmp slt i32 %v0_10005444, 1
  br i1 %tmp47, label %dec_label_pc_1000546c, label %dec_label_pc_10005458

dec_label_pc_10005458:                            ; preds = %dec_label_pc_1000546c, %dec_label_pc_10005434
  store i32 %v0_10005434, i32* %r0.global-to-local, align 4
  store i32 %v0_1000543c, i32* @r31, align 4
  ret i32 %v0_10005444

dec_label_pc_1000546c:                            ; preds = %dec_label_pc_10005434
  %v3_1000546c = icmp eq i32 %v0_10005444, -1
  br i1 %v3_1000546c, label %dec_label_pc_10005458, label %dec_label_pc_10005474

dec_label_pc_10005474:                            ; preds = %dec_label_pc_1000546c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005484.74 to i32), i32* @lr, align 4
  %v1_10005480 = call i32 @function_10007fbc(i32 25)
  store i32 268457100, i32* @lr, align 4
  %v1_10005488 = call i32 @function_10007fbc(i32 26)
  %v3_10005494 = call i32 @function_10007f08(i32 25, i32* null)
  store i32 268457124, i32* @lr, align 4
  %v2_100054a0 = call i32 @function_10008e00(i32 %v3_10005494, i32 2)
  %v3_100054a4 = icmp eq i32 %v2_100054a0, -1
  store i32 %v2_100054a0, i32* @r31, align 4
  br i1 %v3_100054a4, label %dec_label_pc_100054ec, label %dec_label_pc_100054b0

dec_label_pc_100054b0:                            ; preds = %dec_label_pc_100054ec, %dec_label_pc_10005474
  %v0_100054b4 = phi i32 [ %v2_10005500, %dec_label_pc_100054ec ], [ %v2_100054a0, %dec_label_pc_10005474 ]
  %v2_100054bc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268457160, i32* @lr, align 4
  %v3_100054c4 = call i32 @function_10008ac8(i32 %v0_100054b4, i32 -2147199228, i32 %v2_100054bc)
  br label %dec_label_pc_100054c8

dec_label_pc_100054c8:                            ; preds = %dec_label_pc_100054c8, %dec_label_pc_100054b0
  %v0_100054cc = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100054e0.75 to i32), i32* @lr, align 4
  %v3_100054dc = call i32 @function_10008ac8(i32 %v0_100054cc, i32 -2147199227, i32 0)
  store i32 268457192, i32* @lr, align 4
  %v1_100054e4 = call i32 @function_1000a498(i32 10)
  br label %dec_label_pc_100054c8

dec_label_pc_100054ec:                            ; preds = %dec_label_pc_10005474
  %v3_100054f4 = call i32 @function_10007f08(i32 26, i32* null)
  store i32 268457220, i32* @lr, align 4
  %v2_10005500 = call i32 @function_10008e00(i32 %v3_100054f4, i32 2)
  %v3_10005504 = icmp eq i32 %v2_10005500, -1
  store i32 %v2_10005500, i32* @r31, align 4
  br i1 %v3_10005504, label %dec_label_pc_10005510, label %dec_label_pc_100054b0

dec_label_pc_10005510:                            ; preds = %dec_label_pc_100054ec
  store i32 ptrtoint ([3 x i8]* @global_var_10005518.76 to i32), i32* @lr, align 4
  %v1_10005514 = call i32 @function_10007f30(i32 25)
  store i32 ptrtoint ([3 x i8]* @global_var_10005520.77 to i32), i32* @lr, align 4
  %v1_1000551c = call i32 @function_10007f30(i32 26)
  %v0_10005524 = call i32 @function_1000a414()
  %v0_1000552c = load i32, i32* @lr, align 4
  %v0_10005530 = load i32, i32* @r29, align 4
  %v2_10005534 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_10005534, i32* @r29, align 4
  %v0_10005538 = load i32, i32* @r28, align 4
  store i32 %v0_10005524, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000554c = load i32, i32* @r21, align 4
  store i32 0, i32* %stack_var_-1620, align 4
  store i32 268566528, i32* @r21, align 4
  %v0_10005558 = load i32, i32* @r22, align 4
  store i32 268566528, i32* @r22, align 4
  %v0_10005560 = load i32, i32* @r24, align 4
  %v2_10005564 = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_10005564, i32* @r24, align 4
  %v0_10005568 = load i32, i32* @r25, align 4
  store i32 268566528, i32* @r25, align 4
  %v0_10005570 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_10005578 = load i32, i32* @r15, align 4
  %v0_1000557c = load i32, i32* %r16.global-to-local, align 4
  %v0_10005580 = load i32, i32* %r17.global-to-local, align 4
  %v0_10005584 = load i32, i32* %r18.global-to-local, align 4
  %v0_10005588 = load i32, i32* %r19.global-to-local, align 4
  %v0_1000558c = load i32, i32* @r20, align 4
  %v0_10005590 = load i32, i32* @r23, align 4
  %v0_10005598 = load i32, i32* @r27, align 4
  %v0_1000559c = load i32, i32* @r30, align 4
  store i32 268457380, i32* @lr, align 4
  %v1_100055a0 = call i32 @function_10009a20(i32 %v2_10005534)
  store i32 %v2_10005534, i32* @r3, align 4
  store i32 268457392, i32* @lr, align 4
  %v2_100055ac = call i32 @function_100099d4(i32 %v2_10005534, i32 2)
  store i32 268457408, i32* @lr, align 4
  %v3_100055bc = call i32 @function_10008ff0(i32 0, i32 %v2_10005534, i32 0)
  store i32 268457420, i32* @lr, align 4
  %v2_100055c8 = call i32 @function_10009a4c(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_100055dc.78 to i32), i32* @lr, align 4
  %v2_100055d8 = call i32 @function_10009a4c(i32 5, i32 268456312)
  store i32 268457440, i32* @lr, align 4
  %v1_100055dc = call i32 @function_1000885c(i32 %v2_100055d8)
  store i32 -1350886823, i32* %r9.global-to-local, align 4
  store i32 -1350886823, i32* @global_var_1001be44.69, align 4
  store i16 232, i16* bitcast (i32* @global_var_1001be42.72 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_100055dc, i32* @global_var_1001bd68.14, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001be40.68 to i16*), align 4
  store i32 268457480, i32* @lr, align 4
  %v2_10005604 = call i32 @function_10008048(i32 %v1_100055dc, i32 -1350886823)
  store i32 268456824, i32* %r9.global-to-local, align 4
  store i32 268456824, i32* @global_var_1001bd48.62, align 4
  store i32 ptrtoint (i32* @global_var_10005618.79 to i32), i32* @lr, align 4
  %v1_10005614 = call i32 @function_1000518c(i32 %v2_10005604)
  store i32 268457500, i32* @lr, align 4
  %v1_10005618 = call i32 @function_10005d24(i32 %v1_10005614)
  store i32 %v2_10005564, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268457512, i32* @lr, align 4
  %v0_10005624 = call i32 @function_10008600()
  %v0_10005628 = load i32, i32* @r28, align 4
  %v3_10005628 = icmp eq i32 %v0_10005628, 2
  br i1 %v3_10005628, label %dec_label_pc_1000579c, label %dec_label_pc_10005630

dec_label_pc_10005630:                            ; preds = %dec_label_pc_1000579c, %dec_label_pc_10005510, %dec_label_pc_100057ac
  %v0_10005630 = call i32 @function_10005cd4()
  %v2_10005634 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_10005634, i32* @r27, align 4
  store i32 %v0_10005630, i32* %r29.global-to-local, align 4
  %v0_1000563c = load i32, i32* @r31, align 4
  %v1_1000563c = inttoptr i32 %v0_1000563c to i32*
  %v2_1000563c = load i32, i32* %v1_1000563c, align 4
  %v2_10005640 = ptrtoint i16* %stack_var_-1624 to i32
  store i32 %v2_10005640, i32* @r30, align 4
  store i32 0, i32* @r26, align 4
  store i32 268457548, i32* @lr, align 4
  %v1_10005648 = inttoptr i32 %v2_1000563c to i8*
  %v2_10005648 = call i32 @function_10008558(i8* %v1_10005648)
  store i32 %v2_10005648, i32* %r28.global-to-local, align 4
  %v0_10005650 = load i32, i32* @r31, align 4
  %v1_10005650 = inttoptr i32 %v0_10005650 to i32*
  %v2_10005650 = load i32, i32* %v1_10005650, align 4
  %v1_10005654 = sub i32 20, %v2_10005648
  store i32 %v1_10005654, i32* @r28, align 4
  store i32 268457564, i32* @lr, align 4
  %v1_10005658 = inttoptr i32 %v2_10005650 to i8*
  %v2_10005658 = call i32 @function_10008558(i8* %v1_10005658)
  %v0_1000565c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000565c = load i32, i32* @r28, align 4
  %v2_1000565c = urem i32 %v0_1000565c, %v1_1000565c
  %v2_10005660 = sub i32 %v0_1000565c, %v2_1000565c
  store i32 %v2_10005660, i32* %r0.global-to-local, align 4
  %v2_10005668 = add i32 %v2_1000565c, %v2_10005658
  %v0_10005674 = load i32, i32* @r30, align 4
  %v2_10005674 = add i32 %v0_10005674, %v2_10005668
  store i32 %v2_10005674, i32* @r29, align 4
  store i32 268457596, i32* @lr, align 4
  %v2_10005678 = bitcast i32* %stack_var_-1584 to i8*
  %v3_10005678 = call i32 @function_10005d94(i8* %v2_10005678, i32 %v2_10005668)
  %v0_1000567c = load i32, i32* @r31, align 4
  %v1_1000567c = inttoptr i32 %v0_1000567c to i32*
  %v2_1000567c = load i32, i32* %v1_1000567c, align 4
  store i32 %v2_1000567c, i32* @r3, align 4
  %v0_10005680 = load i32, i32* @r26, align 4
  %v1_10005680 = trunc i32 %v0_10005680 to i8
  %v2_10005680 = load i32, i32* @r29, align 4
  %v3_10005680 = add i32 %v2_10005680, 40
  %v4_10005680 = inttoptr i32 %v3_10005680 to i8*
  store i8 %v1_10005680, i8* %v4_10005680, align 1
  %v2_10005688 = inttoptr i32 %v2_1000567c to i8*
  %v3_10005688 = call i32 @function_10008580(i8* %v2_10005688, i32 %v2_10005634)
  store i32 32, i32* @r4, align 4
  store i32 %v2_10005634, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005698.81 to i32), i32* @lr, align 4
  %v0_10005694 = call i32 @function_10008600()
  %v0_10005698 = call i32 @function_10005cd4()
  store i32 %v0_10005698, i32* %r28.global-to-local, align 4
  %v0_100056a0 = load i32, i32* @r31, align 4
  %v1_100056a0 = inttoptr i32 %v0_100056a0 to i32*
  %v2_100056a0 = load i32, i32* %v1_100056a0, align 4
  store i32 268457640, i32* @lr, align 4
  %v1_100056a4 = inttoptr i32 %v2_100056a0 to i8*
  %v2_100056a4 = call i32 @function_10008558(i8* %v1_100056a4)
  store i32 %v2_100056a4, i32* %r29.global-to-local, align 4
  %v0_100056ac = load i32, i32* @r31, align 4
  %v1_100056ac = inttoptr i32 %v0_100056ac to i32*
  %v2_100056ac = load i32, i32* %v1_100056ac, align 4
  %v1_100056b0 = sub i32 20, %v2_100056a4
  store i32 %v1_100056b0, i32* @r29, align 4
  store i32 268457656, i32* @lr, align 4
  %v1_100056b4 = inttoptr i32 %v2_100056ac to i8*
  %v2_100056b4 = call i32 @function_10008558(i8* %v1_100056b4)
  %v0_100056b8 = load i32, i32* %r28.global-to-local, align 4
  %v1_100056b8 = load i32, i32* @r29, align 4
  %v2_100056b8 = urem i32 %v0_100056b8, %v1_100056b8
  %v2_100056bc = sub i32 %v0_100056b8, %v2_100056b8
  store i32 %v2_100056bc, i32* %r0.global-to-local, align 4
  %v2_100056c4 = add i32 %v2_100056b8, %v2_100056b4
  %v0_100056d0 = load i32, i32* @r30, align 4
  %v2_100056d0 = add i32 %v0_100056d0, %v2_100056c4
  store i32 %v2_100056d0, i32* @r28, align 4
  store i32 268457688, i32* @lr, align 4
  %v3_100056d4 = call i32 @function_10005d94(i8* %v2_10005678, i32 %v2_100056c4)
  %v0_100056d8 = load i32, i32* @r26, align 4
  %v1_100056d8 = trunc i32 %v0_100056d8 to i8
  %v2_100056d8 = load i32, i32* @r28, align 4
  %v3_100056d8 = add i32 %v2_100056d8, 40
  %v4_100056d8 = inttoptr i32 %v3_100056d8 to i8*
  store i8 %v1_100056d8, i8* %v4_100056d8, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_100056ec.82 to i32), i32* @lr, align 4
  %v2_100056e8 = call i32 @function_10008e88(i32 15, i32 %v2_10005634)
  store i32 268457716, i32* @lr, align 4
  %v1_100056f0 = call i32 @function_10007fbc(i32 5)
  %v3_100056fc = call i32 @function_10007f08(i32 5, i32* nonnull %stack_var_-1620)
  %v3_10005700 = load i32, i32* %stack_var_-1620, align 4
  store i32 268457744, i32* @lr, align 4
  %v3_1000570c = call i32 @function_100090b0(i32 1, i32 %v3_100056fc, i32 %v3_10005700)
  store i32 ptrtoint ([3 x i8]* @global_var_10005724.84 to i32), i32* @lr, align 4
  %v3_10005720 = call i32 @function_100090b0(i32 1, i32 ptrtoint (i32* @global_var_1000b684.83 to i32), i32 1)
  store i32 268457772, i32* @lr, align 4
  %v1_10005728 = call i32 @function_10007f30(i32 5)
  store i32 268457776, i32* @lr, align 4
  %v1_1000572c = call i32 @function_1000072c(i32 %v1_10005728)
  store i32 268457780, i32* @lr, align 4
  %v1_10005730 = call i32 @function_10004b18(i32 %v1_1000572c)
  store i32 ptrtoint (i32* @global_var_10005738.85 to i32), i32* @lr, align 4
  %v1_10005734 = call i32 @function_10005434(i32 %v1_10005730)
  store i32 268457788, i32* @lr, align 4
  %v0_10005738 = call i32 @function_10008ce0()
  %tmp48 = icmp slt i32 %v0_10005738, 1
  br i1 %tmp48, label %dec_label_pc_100057d4, label %dec_label_pc_10005744

dec_label_pc_10005744:                            ; preds = %dec_label_pc_10005630
  store i32 %v0_1000552c, i32* %r0.global-to-local, align 4
  store i32 %v0_10005578, i32* @r15, align 4
  store i32 %v0_1000557c, i32* %r16.global-to-local, align 4
  store i32 %v0_10005580, i32* %r17.global-to-local, align 4
  store i32 %v0_10005584, i32* %r18.global-to-local, align 4
  store i32 %v0_10005588, i32* %r19.global-to-local, align 4
  store i32 %v0_1000558c, i32* @r20, align 4
  store i32 %v0_1000554c, i32* @r21, align 4
  store i32 %v0_10005558, i32* @r22, align 4
  store i32 %v0_10005590, i32* @r23, align 4
  store i32 %v0_10005560, i32* @r24, align 4
  store i32 %v0_10005568, i32* @r25, align 4
  store i32 %v0_10005598, i32* @r27, align 4
  store i32 %v0_10005538, i32* @r28, align 4
  store i32 %v0_10005530, i32* @r29, align 4
  store i32 %v0_1000559c, i32* @r30, align 4
  store i32 %v0_10005570, i32* @r31, align 4
  ret i32 0

dec_label_pc_1000579c:                            ; preds = %dec_label_pc_10005510
  %v0_1000579c = load i32, i32* @r31, align 4
  %v1_1000579c = add i32 %v0_1000579c, 4
  %v2_1000579c = inttoptr i32 %v1_1000579c to i32*
  %v3_1000579c = load i32, i32* %v2_1000579c, align 4
  store i32 268457892, i32* @lr, align 4
  %v1_100057a0 = inttoptr i32 %v3_1000579c to i8*
  %v2_100057a0 = call i32 @function_10008558(i8* %v1_100057a0)
  %v2_100057a4 = icmp sgt i32 %v2_100057a0, 31
  br i1 %v2_100057a4, label %dec_label_pc_10005630, label %dec_label_pc_100057ac

dec_label_pc_100057ac:                            ; preds = %dec_label_pc_1000579c
  %v0_100057ac = load i32, i32* @r31, align 4
  %v1_100057ac = add i32 %v0_100057ac, 4
  %v2_100057ac = inttoptr i32 %v1_100057ac to i32*
  %v3_100057ac = load i32, i32* %v2_100057ac, align 4
  store i32 %v2_10005564, i32* @r3, align 4
  %v2_100057b4 = bitcast i32* %stack_var_-1552 to i8*
  %v3_100057b4 = call i32 @function_10008580(i8* %v2_100057b4, i32 %v3_100057ac)
  %v0_100057b8 = load i32, i32* @r31, align 4
  %v1_100057b8 = add i32 %v0_100057b8, 4
  %v2_100057b8 = inttoptr i32 %v1_100057b8 to i32*
  %v3_100057b8 = load i32, i32* %v2_100057b8, align 4
  store i32 %v3_100057b8, i32* %r29.global-to-local, align 4
  store i32 268457924, i32* @lr, align 4
  %v1_100057c0 = inttoptr i32 %v3_100057b8 to i8*
  %v2_100057c0 = call i32 @function_10008558(i8* %v1_100057c0)
  store i32 %v2_100057c0, i32* @r4, align 4
  store i32 %v3_100057b8, i32* @r3, align 4
  store i32 268457936, i32* @lr, align 4
  %v0_100057cc = call i32 @function_10008600()
  br label %dec_label_pc_10005630

dec_label_pc_100057d4:                            ; preds = %dec_label_pc_10005630
  store i32 ptrtoint ([3 x i8]* @global_var_100057d8.86 to i32), i32* @lr, align 4
  %v1_100057d4 = call i32 @function_10008fa8(i32 %v0_10005738)
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 %v1_100057d4, i32* %r17.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100057e8.87 to i32), i32* @lr, align 4
  %v0_100057e4 = call i32 @function_10008c98()
  store i32 ptrtoint ([3 x i8]* @global_var_100057f0.88 to i32), i32* @lr, align 4
  %v0_100057ec = call i32 @function_10008c98()
  store i32 268457976, i32* @lr, align 4
  %v0_100057f4 = call i32 @function_10008c98()
  %v2_100057f8 = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_100057f8, i32* @r28, align 4
  store i32 268457984, i32* @lr, align 4
  %v1_100057fc = call i32 @function_1000072c(i32 %v0_100057f4)
  %v2_10005800 = ptrtoint i32* %stack_var_-1264 to i32
  store i32 %v2_10005800, i32* @r29, align 4
  store i32 268457992, i32* @lr, align 4
  %v1_10005804 = call i32 @function_10004b18(i32 %v1_100057fc)
  store i32 268566528, i32* @r20, align 4
  store i32 268458000, i32* @lr, align 4
  %v1_1000580c = call i32 @function_10005434(i32 %v1_10005804)
  store i32 268566528, i32* @r26, align 4
  store i32 268458008, i32* @lr, align 4
  %v1_10005814 = call i32 @function_100067d8(i32 %v1_1000580c)
  store i32 268566528, i32* %r18.global-to-local, align 4
  %v2_1000581c = ptrtoint i32* %stack_var_-1608 to i32
  %v2_10005820 = ptrtoint i32* %stack_var_-1616 to i32
  store i32 %v2_10005820, i32* %r16.global-to-local, align 4
  %v2_10005c58 = ptrtoint i32* %stack_var_-1136 to i32
  %v2_10005b18 = ptrtoint i32* %stack_var_-1612 to i32
  %v1_10005bb0 = bitcast i32* %stack_var_-1552 to i8*
  %v2_10005b74 = ptrtoint i32* %stack_var_-1600 to i32
  br label %dec_label_pc_10005824

dec_label_pc_10005824:                            ; preds = %dec_label_pc_100058dc, %dec_label_pc_10005c7c, %dec_label_pc_10005c18, %dec_label_pc_10005c0c, %dec_label_pc_10005bac, %dec_label_pc_100059fc, %dec_label_pc_100059ec, %dec_label_pc_10005cbc, %dec_label_pc_10005cb0, %dec_label_pc_10005c30, %dec_label_pc_10005bf8, %dec_label_pc_10005b34, %dec_label_pc_10005a60, %dec_label_pc_100059b0, %dec_label_pc_100057d4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000583450 = load i32, i32* @r28, align 4
  %v4_1000583452 = inttoptr i32 %v2_1000583450 to i32*
  store i32 0, i32* %v4_1000583452, align 4
  %v0_1000583853 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000583854 = add i32 %v0_1000583853, 4
  store i32 %v1_1000583854, i32* %r9.global-to-local, align 4
  %v0_1000583c55 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000583c56 = add i32 %v0_1000583c55, -1
  store i32 %v1_1000583c56, i32* %ctr.global-to-local, align 4
  %v2_1000583c57 = icmp eq i32 %v1_1000583c56, 0
  br i1 %v2_1000583c57, label %dec_label_pc_10005840, label %dec_label_pc_10005834.dec_label_pc_10005834_crit_edge

dec_label_pc_10005834.dec_label_pc_10005834_crit_edge: ; preds = %dec_label_pc_10005824, %dec_label_pc_10005834.dec_label_pc_10005834_crit_edge
  %v1_1000583858 = phi i32 [ %v1_10005838, %dec_label_pc_10005834.dec_label_pc_10005834_crit_edge ], [ %v1_1000583854, %dec_label_pc_10005824 ]
  %v0_10005834.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005834 = load i32, i32* @r28, align 4
  %v3_10005834 = add i32 %v2_10005834, %v1_1000583858
  %v4_10005834 = inttoptr i32 %v3_10005834 to i32*
  store i32 %v0_10005834.pre, i32* %v4_10005834, align 4
  %v0_10005838 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005838 = add i32 %v0_10005838, 4
  store i32 %v1_10005838, i32* %r9.global-to-local, align 4
  %v0_1000583c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000583c = add i32 %v0_1000583c, -1
  store i32 %v1_1000583c, i32* %ctr.global-to-local, align 4
  %v2_1000583c = icmp eq i32 %v1_1000583c, 0
  br i1 %v2_1000583c, label %dec_label_pc_10005840, label %dec_label_pc_10005834.dec_label_pc_10005834_crit_edge

dec_label_pc_10005840:                            ; preds = %dec_label_pc_10005834.dec_label_pc_10005834_crit_edge, %dec_label_pc_10005824
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000585059 = load i32, i32* @r29, align 4
  %v4_1000585061 = inttoptr i32 %v2_1000585059 to i32*
  store i32 0, i32* %v4_1000585061, align 4
  %v0_1000585462 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000585463 = add i32 %v0_1000585462, 4
  store i32 %v1_1000585463, i32* %r9.global-to-local, align 4
  %v0_1000585864 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000585865 = add i32 %v0_1000585864, -1
  store i32 %v1_1000585865, i32* %ctr.global-to-local, align 4
  %v2_1000585866 = icmp eq i32 %v1_1000585865, 0
  br i1 %v2_1000585866, label %dec_label_pc_1000585c, label %dec_label_pc_10005850.dec_label_pc_10005850_crit_edge

dec_label_pc_10005850.dec_label_pc_10005850_crit_edge: ; preds = %dec_label_pc_10005840, %dec_label_pc_10005850.dec_label_pc_10005850_crit_edge
  %v1_1000585467 = phi i32 [ %v1_10005854, %dec_label_pc_10005850.dec_label_pc_10005850_crit_edge ], [ %v1_1000585463, %dec_label_pc_10005840 ]
  %v0_10005850.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005850 = load i32, i32* @r29, align 4
  %v3_10005850 = add i32 %v2_10005850, %v1_1000585467
  %v4_10005850 = inttoptr i32 %v3_10005850 to i32*
  store i32 %v0_10005850.pre, i32* %v4_10005850, align 4
  %v0_10005854 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005854 = add i32 %v0_10005854, 4
  store i32 %v1_10005854, i32* %r9.global-to-local, align 4
  %v0_10005858 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005858 = add i32 %v0_10005858, -1
  store i32 %v1_10005858, i32* %ctr.global-to-local, align 4
  %v2_10005858 = icmp eq i32 %v1_10005858, 0
  br i1 %v2_10005858, label %dec_label_pc_1000585c, label %dec_label_pc_10005850.dec_label_pc_10005850_crit_edge

dec_label_pc_1000585c:                            ; preds = %dec_label_pc_10005850.dec_label_pc_10005850_crit_edge, %dec_label_pc_10005840
  %v3_1000585c = load i32, i32* @global_var_1001bd40.63, align 4
  %v3_10005860 = icmp eq i32 %v3_1000585c, -1
  br i1 %v3_10005860, label %dec_label_pc_10005888, label %dec_label_pc_10005868

dec_label_pc_10005868:                            ; preds = %dec_label_pc_1000585c
  %v1_10005868 = call i32 @__asm_rlwinm(i32 %v3_1000585c, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005870 = load i32, i32* @r30, align 4
  %v2_10005870 = add i32 %v1_10005870, %v1_10005868
  %v1_10005874 = urem i32 %v3_1000585c, 32
  %v1_10005878 = add i32 %v2_10005870, 232
  %v2_10005878 = inttoptr i32 %v1_10005878 to i32*
  %v3_10005878 = load i32, i32* %v2_10005878, align 4
  %v3_1000587c = shl i32 1, %v1_10005874
  store i32 %v3_1000587c, i32* %r0.global-to-local, align 4
  %v2_10005880 = or i32 %v3_10005878, %v3_1000587c
  store i32 %v2_10005880, i32* %r9.global-to-local, align 4
  store i32 %v2_10005880, i32* %v2_10005878, align 4
  br label %dec_label_pc_10005888

dec_label_pc_10005888:                            ; preds = %dec_label_pc_1000585c, %dec_label_pc_10005868
  %v3_10005888 = load i32, i32* @global_var_1001bd44.89, align 4
  store i32 %v3_10005888, i32* %r0.global-to-local, align 4
  %v3_10005890 = icmp eq i32 %v3_10005888, -1
  br i1 %v3_10005890, label %dec_label_pc_10005a74, label %dec_label_pc_10005898

dec_label_pc_10005898:                            ; preds = %dec_label_pc_10005888, %dec_label_pc_10005a74, %dec_label_pc_10005acc
  %v3_100059c4 = phi i32 [ %v3_10005888, %dec_label_pc_10005888 ], [ -1, %dec_label_pc_10005a74 ], [ %v3_100059c4.pre, %dec_label_pc_10005acc ]
  %v3_10005898 = load i8, i8* bitcast (i16* @global_var_1001bd7c.90 to i8*), align 2
  %v3_1000589c = icmp eq i8 %v3_10005898, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100059cc = call i32 @__asm_rlwinm(i32 %v3_100059c4, i32 29, i32 3, i32 29)
  %v1_100059d0 = urem i32 %v3_100059c4, 32
  %v1_100059d4 = load i32, i32* @r30, align 4
  %v2_100059d4 = add i32 %v1_100059d4, %v1_100059cc
  %v0_100059d8 = load i32, i32* %r0.global-to-local, align 4
  %v3_100059d8 = shl i32 %v0_100059d8, %v1_100059d0
  store i32 %v3_100059d8, i32* %r0.global-to-local, align 4
  br i1 %v3_1000589c, label %dec_label_pc_100059c4, label %dec_label_pc_100058a4

dec_label_pc_100058a4:                            ; preds = %dec_label_pc_10005898
  %v1_100058bc = add i32 %v2_100059d4, 360
  %v2_100058bc = inttoptr i32 %v1_100058bc to i32*
  %v3_100058bc = load i32, i32* %v2_100058bc, align 4
  %v2_100058c0 = or i32 %v3_100058bc, %v3_100059d8
  store i32 %v2_100058c0, i32* %r9.global-to-local, align 4
  store i32 %v2_100058c0, i32* %v2_100058bc, align 4
  br label %dec_label_pc_100058c8

dec_label_pc_100058c8:                            ; preds = %dec_label_pc_100059c4, %dec_label_pc_100058a4
  %v3_100058c8 = load i32, i32* @global_var_1001bd44.89, align 4
  store i32 %v3_100058c8, i32* %r0.global-to-local, align 4
  %v3_100058cc = load i32, i32* @global_var_1001bd40.63, align 4
  %v2_100058d0 = icmp slt i32 %v3_100058cc, %v3_100058c8
  br i1 %v2_100058d0, label %dec_label_pc_100058d8, label %dec_label_pc_100058dc

dec_label_pc_100058d8:                            ; preds = %dec_label_pc_100058c8
  br label %dec_label_pc_100058dc

dec_label_pc_100058dc:                            ; preds = %dec_label_pc_100058c8, %dec_label_pc_100058d8
  %v0_100058e4 = phi i32 [ %v3_100058cc, %dec_label_pc_100058c8 ], [ %v3_100058c8, %dec_label_pc_100058d8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_100058e4 = add i32 %v0_100058e4, 1
  store i32 10, i32* %stack_var_-1608, align 4
  store i32 268458244, i32* @lr, align 4
  %v5_10005900 = call i32 @function_10008f60(i32 %v1_100058e4, i32 %v2_100057f8, i32 %v2_10005800, i32 0, i32 %v2_1000581c)
  %v6_10005900 = trunc i32 %v5_10005900 to i16
  %v4_10005904 = icmp eq i16 %v6_10005900, -1
  br i1 %v4_10005904, label %dec_label_pc_10005824, label %dec_label_pc_1000590c

dec_label_pc_1000590c:                            ; preds = %dec_label_pc_100058dc
  %v4_1000590c = icmp eq i16 %v6_10005900, 0
  br i1 %v4_1000590c, label %dec_label_pc_10005914, label %dec_label_pc_10005940

dec_label_pc_10005914:                            ; preds = %dec_label_pc_1000590c
  %v0_10005918 = load i32, i32* %r19.global-to-local, align 4
  store i16 0, i16* %stack_var_-1624, align 2
  %v2_10005928 = srem i32 %v0_10005918, 6
  %v1_1000592c = sub i32 %v0_10005918, %v2_10005928
  store i32 %v1_1000592c, i32* %r9.global-to-local, align 4
  store i32 %v2_10005928, i32* %r0.global-to-local, align 4
  %v1_10005934 = add i32 %v0_10005918, 1
  store i32 %v1_10005934, i32* %r19.global-to-local, align 4
  %v3_10005938 = icmp eq i32 %v2_10005928, 0
  br i1 %v3_10005938, label %dec_label_pc_10005ae8, label %dec_label_pc_10005940

dec_label_pc_10005940:                            ; preds = %dec_label_pc_1000590c, %dec_label_pc_10005914, %dec_label_pc_10005ae8
  %v3_10005940 = load i32, i32* @global_var_1001bd40.63, align 4
  %v3_10005944 = icmp eq i32 %v3_10005940, -1
  br i1 %v3_10005944, label %dec_label_pc_10005968, label %dec_label_pc_1000594c

dec_label_pc_1000594c:                            ; preds = %dec_label_pc_10005940
  %v1_1000594c = call i32 @__asm_rlwinm(i32 %v3_10005940, i32 29, i32 3, i32 29)
  %v1_10005950 = urem i32 %v3_10005940, 32
  %v1_10005954 = load i32, i32* @r30, align 4
  %v2_10005954 = add i32 %v1_10005954, %v1_1000594c
  store i32 %v2_10005954, i32* %r9.global-to-local, align 4
  %v1_10005958 = add i32 %v2_10005954, 232
  %v2_10005958 = inttoptr i32 %v1_10005958 to i32*
  %v3_10005958 = load i32, i32* %v2_10005958, align 4
  %v3_1000595c = lshr i32 %v3_10005958, %v1_10005950
  store i32 %v3_1000595c, i32* %r0.global-to-local, align 4
  %v1_10005960 = urem i32 %v3_1000595c, 2
  store i32 %v1_10005960, i32* %r9.global-to-local, align 4
  %v3_10005960 = icmp eq i32 %v1_10005960, 0
  br i1 %v3_10005960, label %dec_label_pc_10005968, label %dec_label_pc_10005b6c

dec_label_pc_10005968:                            ; preds = %dec_label_pc_1000594c, %dec_label_pc_10005940
  %v3_10005968 = load i8, i8* bitcast (i16* @global_var_1001bd7c.90 to i8*), align 2
  %v4_10005968 = zext i8 %v3_10005968 to i32
  store i32 %v4_10005968, i32* @r31, align 4
  %v3_1000596c = icmp eq i8 %v3_10005968, 0
  %v3_100059ec = load i32, i32* @global_var_1001bd44.89, align 4
  br i1 %v3_1000596c, label %dec_label_pc_100059ec, label %dec_label_pc_10005974

dec_label_pc_10005974:                            ; preds = %dec_label_pc_10005968
  store i32 268566528, i32* @r31, align 4
  %v1_1000597c = call i32 @__asm_rlwinm(i32 %v3_100059ec, i32 29, i32 3, i32 29)
  %v1_10005980 = urem i32 %v3_100059ec, 32
  %v1_10005984 = load i32, i32* @r30, align 4
  %v2_10005984 = add i32 %v1_10005984, %v1_1000597c
  store i32 %v2_10005984, i32* %r9.global-to-local, align 4
  %v1_10005988 = add i32 %v2_10005984, 360
  %v2_10005988 = inttoptr i32 %v1_10005988 to i32*
  %v3_10005988 = load i32, i32* %v2_10005988, align 4
  %v3_1000598c = lshr i32 %v3_10005988, %v1_10005980
  store i32 %v3_1000598c, i32* %r0.global-to-local, align 4
  %v1_10005994 = urem i32 %v3_1000598c, 2
  %v3_10005994 = icmp eq i32 %v1_10005994, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001bd7c.90 to i8*), align 2
  br i1 %v3_10005994, label %dec_label_pc_100059a4, label %dec_label_pc_10005b04

dec_label_pc_100059a4:                            ; preds = %dec_label_pc_10005974
  %v3_100059a4 = icmp eq i32 %v3_100059ec, -1
  br i1 %v3_100059a4, label %dec_label_pc_100059b0, label %dec_label_pc_100059ac

dec_label_pc_100059ac:                            ; preds = %dec_label_pc_100059a4
  store i32 ptrtoint (i32* @global_var_100059b0.91 to i32), i32* @lr, align 4
  %v0_100059ac = call i32 @function_10008c98()
  br label %dec_label_pc_100059b0

dec_label_pc_100059b0:                            ; preds = %dec_label_pc_100059a4, %dec_label_pc_100059ac
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001bd44.89, align 4
  store i32 268458432, i32* @lr, align 4
  %v1_100059bc = call i32 @function_1000a498(i32 1)
  br label %dec_label_pc_10005824

dec_label_pc_100059c4:                            ; preds = %dec_label_pc_10005898
  %v1_100059dc = add i32 %v2_100059d4, 232
  %v2_100059dc = inttoptr i32 %v1_100059dc to i32*
  %v3_100059dc = load i32, i32* %v2_100059dc, align 4
  %v2_100059e0 = or i32 %v3_100059dc, %v3_100059d8
  store i32 %v2_100059e0, i32* %r9.global-to-local, align 4
  store i32 %v2_100059e0, i32* %v2_100059dc, align 4
  br label %dec_label_pc_100058c8

dec_label_pc_100059ec:                            ; preds = %dec_label_pc_10005968
  store i32 268566528, i32* @r27, align 4
  %v3_100059f4 = icmp eq i32 %v3_100059ec, -1
  br i1 %v3_100059f4, label %dec_label_pc_10005824, label %dec_label_pc_100059fc

dec_label_pc_100059fc:                            ; preds = %dec_label_pc_100059ec
  %v1_100059fc = call i32 @__asm_rlwinm(i32 %v3_100059ec, i32 29, i32 3, i32 29)
  %v1_10005a00 = urem i32 %v3_100059ec, 32
  %v1_10005a04 = load i32, i32* @r30, align 4
  %v2_10005a04 = add i32 %v1_10005a04, %v1_100059fc
  store i32 %v2_10005a04, i32* %r9.global-to-local, align 4
  %v1_10005a08 = add i32 %v2_10005a04, 232
  %v2_10005a08 = inttoptr i32 %v1_10005a08 to i32*
  %v3_10005a08 = load i32, i32* %v2_10005a08, align 4
  %v3_10005a0c = lshr i32 %v3_10005a08, %v1_10005a00
  store i32 %v3_10005a0c, i32* %r0.global-to-local, align 4
  %v1_10005a10 = urem i32 %v3_10005a0c, 2
  store i32 %v1_10005a10, i32* %r9.global-to-local, align 4
  %v3_10005a10 = icmp eq i32 %v1_10005a10, 0
  br i1 %v3_10005a10, label %dec_label_pc_10005824, label %dec_label_pc_10005a18

dec_label_pc_10005a18:                            ; preds = %dec_label_pc_100059fc
  %v0_10005a18 = load i32, i32* @r31, align 4
  %v6_10005a18 = trunc i32 %v0_10005a18 to i16
  store i16 %v6_10005a18, i16* %stack_var_-1624, align 2
  %v0_10005a1c = call i32 @function_1000936c()
  %v0_10005a20 = load i32, i32* @r31, align 4
  %v2_10005a20 = inttoptr i32 %v0_10005a1c to i32*
  store i32 %v0_10005a20, i32* %v2_10005a20, align 4
  store i32 %v0_10005a1c, i32* @r23, align 4
  %v3_10005a30 = load i32, i32* @global_var_1001bd44.89, align 4
  store i32 268458556, i32* @lr, align 4
  %v4_10005a38 = call i32 @function_10009874(i32 %v3_10005a30, i32 %v2_10005640, i32 2, i32 16386)
  %v3_10005a3c = icmp eq i32 %v4_10005a38, -1
  br i1 %v3_10005a3c, label %dec_label_pc_10005c0c, label %dec_label_pc_10005a44

dec_label_pc_10005a44:                            ; preds = %dec_label_pc_10005a18
  %v3_10005a44 = icmp eq i32 %v4_10005a38, 0
  br i1 %v3_10005a44, label %dec_label_pc_10005c20, label %dec_label_pc_10005a4c

dec_label_pc_10005a4c:                            ; preds = %dec_label_pc_10005a44
  %v3_10005a4c = load i16, i16* %stack_var_-1624, align 2
  %v4_10005a4c = sext i16 %v3_10005a4c to i32
  %v4_10005a50 = icmp eq i16 %v3_10005a4c, 0
  br i1 %v4_10005a50, label %dec_label_pc_10005cbc, label %dec_label_pc_10005a58

dec_label_pc_10005a58:                            ; preds = %dec_label_pc_10005a4c
  %tmp49 = icmp ult i16 %v3_10005a4c, 1025
  br i1 %tmp49, label %dec_label_pc_10005c54, label %dec_label_pc_10005a60

dec_label_pc_10005a60:                            ; preds = %dec_label_pc_10005a58
  store i32 ptrtoint (i32* @global_var_10005a68.92 to i32), i32* @lr, align 4
  %v0_10005a64 = call i32 @function_10008c98()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001bd44.89, align 4
  br label %dec_label_pc_10005824

dec_label_pc_10005a74:                            ; preds = %dec_label_pc_10005888
  store i32 268458628, i32* @lr, align 4
  %v3_10005a80 = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  %v3_10005a84 = icmp eq i32 %v3_10005a80, -1
  store i32 %v3_10005a80, i32* @r31, align 4
  store i32 %v3_10005a80, i32* @global_var_1001bd44.89, align 4
  br i1 %v3_10005a84, label %dec_label_pc_10005898, label %dec_label_pc_10005a94

dec_label_pc_10005a94:                            ; preds = %dec_label_pc_10005a74
  store i32 3, i32* @r4, align 4
  store i32 268458660, i32* @lr, align 4
  %v1_10005aa0 = call i32 @function_10008bb0(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10005aac = load i32, i32* @r31, align 4
  store i32 268458680, i32* @lr, align 4
  %v2_10005ab4 = call i32 @function_10008bb0(i32 %v0_10005aac)
  %v3_10005ab8 = load i32, i32* @global_var_1001bd48.62, align 4
  store i32 %v3_10005ab8, i32* %r0.global-to-local, align 4
  %v3_10005abc = icmp eq i32 %v3_10005ab8, 0
  br i1 %v3_10005abc, label %dec_label_pc_10005acc, label %dec_label_pc_10005ac4

dec_label_pc_10005ac4:                            ; preds = %dec_label_pc_10005a94
  store i32 %v3_10005ab8, i32* %ctr.global-to-local, align 4
  store i32 268458700, i32* @lr, align 4
  %v2_10005ac8 = call i32 @function_1000885c(i32 %v2_10005ab4)
  br label %dec_label_pc_10005acc

dec_label_pc_10005acc:                            ; preds = %dec_label_pc_10005a94, %dec_label_pc_10005ac4
  %v3_10005acc = load i32, i32* @global_var_1001bd44.89, align 4
  store i32 %v3_10005acc, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001bd7c.90 to i8*), align 2
  store i32 268458724, i32* @lr, align 4
  %v0_10005ae0 = call i32 @function_100097a0()
  %v3_100059c4.pre = load i32, i32* @global_var_1001bd44.89, align 4
  br label %dec_label_pc_10005898

dec_label_pc_10005ae8:                            ; preds = %dec_label_pc_10005914
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005af0 = load i32, i32* @global_var_1001bd44.89, align 4
  store i32 268458752, i32* @lr, align 4
  %v4_10005afc = call i32 @function_100098ec(i32 %v3_10005af0, i32 %v2_10005640, i32 2, i32 16384)
  br label %dec_label_pc_10005940

dec_label_pc_10005b04:                            ; preds = %dec_label_pc_10005974
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1616, align 4
  store i32 4, i32* %stack_var_-1612, align 4
  store i32 268458792, i32* @lr, align 4
  %v5_10005b24 = call i32 @function_10009808(i32 1, i32 4, i32 %v2_10005820, i32 %v2_10005b18, i32 4)
  %v3_10005b28 = load i32, i32* %stack_var_-1616, align 4
  store i32 %v3_10005b28, i32* %r0.global-to-local, align 4
  %v3_10005b2c = icmp eq i32 %v3_10005b28, 0
  br i1 %v3_10005b2c, label %dec_label_pc_10005bac, label %dec_label_pc_10005b34

dec_label_pc_10005b34:                            ; preds = %dec_label_pc_10005b04
  store i32 ptrtoint (i32* @global_var_10005b3c.93 to i32), i32* @lr, align 4
  %v0_10005b38 = call i32 @function_10008c98()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001bd44.89, align 4
  %v0_10005b44 = call i32 @function_10005cd4()
  %v1_10005b44 = sext i32 %v0_10005b44 to i64
  %v5_10005b50 = mul nuw nsw i64 %v1_10005b44, 3435973837
  %v1_10005b542 = udiv i64 %v5_10005b50, 34359738368
  %v1_10005b54 = trunc i64 %v1_10005b542 to i32
  %v1_10005b58 = mul i32 %v1_10005b54, 10
  store i32 %v1_10005b58, i32* %r0.global-to-local, align 4
  %v3_10005b5c = sub i32 %v0_10005b44, %v1_10005b58
  %v1_10005b60 = add i32 %v3_10005b5c, 1
  store i32 268458856, i32* @lr, align 4
  %v1_10005b64 = call i32 @function_1000a498(i32 %v1_10005b60)
  br label %dec_label_pc_10005824

dec_label_pc_10005b6c:                            ; preds = %dec_label_pc_1000594c
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-1616, align 4
  store i32 ptrtoint (i32* @global_var_10005b80.95 to i32), i32* @lr, align 4
  %v3_10005b7c = call i32 @function_10009738(i32 %v2_10005b74, i32 %v2_10005820, i32 %v1_10005960)
  store i32 268458884, i32* @lr, align 4
  %v1_10005b80 = call i32 @function_10006514(i32 %v3_10005b7c)
  store i32 ptrtoint ([3 x i8]* @global_var_10005b88.96 to i32), i32* @lr, align 4
  %v1_10005b84 = call i32 @function_100044e8(i32 %v1_10005b80)
  %v0_10005b88 = load i32, i32* %r17.global-to-local, align 4
  %v1_10005b88 = sub i32 0, %v0_10005b88
  store i32 268458900, i32* @lr, align 4
  %v2_10005b90 = call i32 @function_10008db8(i32 %v1_10005b88, i32 9)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005b98 = load i32, i32* @global_var_1001bd78.73, align 4
  %v3_10005b9c = icmp eq i32 %v3_10005b98, 0
  br i1 %v3_10005b9c, label %dec_label_pc_10005ba4, label %dec_label_pc_10005c48

dec_label_pc_10005ba4:                            ; preds = %dec_label_pc_10005b6c, %dec_label_pc_10005c48
  %v0_10005ba8 = call i32 @function_1000a414()
  br label %dec_label_pc_10005bac

dec_label_pc_10005bac:                            ; preds = %dec_label_pc_10005b04, %dec_label_pc_10005ba4
  store i32 268458932, i32* @lr, align 4
  %v2_10005bb0 = call i32 @function_10008558(i8* %v1_10005bb0)
  %v3_10005bb0 = trunc i32 %v2_10005bb0 to i8
  %v7_10005bb4 = sext i8 %v3_10005bb0 to i16
  store i16 %v7_10005bb4, i16* %stack_var_-1624, align 2
  store i32 268458940, i32* @lr, align 4
  %v2_10005bb8 = call i32 @function_1000885c(i32 %v2_10005bb0)
  store i32 %v2_10005bb8, i32* @global_var_1001bd68.14, align 4
  %v0_10005bc4 = load i32, i32* @r31, align 4
  %v1_10005bc4 = add i32 %v0_10005bc4, -17084
  %v2_10005bc4 = inttoptr i32 %v1_10005bc4 to i32*
  %v3_10005bc4 = load i32, i32* %v2_10005bc4, align 4
  store i32 268458968, i32* @lr, align 4
  %v4_10005bd4 = call i32 @function_100098ec(i32 %v3_10005bc4, i32 ptrtoint (i32* @global_var_1000b688.97 to i32), i32 4, i32 16384)
  %v0_10005bd8 = load i32, i32* @r31, align 4
  %v1_10005bd8 = add i32 %v0_10005bd8, -17084
  %v2_10005bd8 = inttoptr i32 %v1_10005bd8 to i32*
  %v3_10005bd8 = load i32, i32* %v2_10005bd8, align 4
  store i32 268458988, i32* @lr, align 4
  %v4_10005be8 = call i32 @function_100098ec(i32 %v3_10005bd8, i32 %v2_10005640, i32 1, i32 16384)
  %v3_10005bec = load i16, i16* %stack_var_-1624, align 2
  %v4_10005bf0 = icmp eq i16 %v3_10005bec, 0
  br i1 %v4_10005bf0, label %dec_label_pc_10005824, label %dec_label_pc_10005bf8

dec_label_pc_10005bf8:                            ; preds = %dec_label_pc_10005bac
  %v4_10005bec = sext i16 %v3_10005bec to i32
  %v0_10005bf8 = load i32, i32* @r31, align 4
  %v1_10005bf8 = add i32 %v0_10005bf8, -17084
  %v2_10005bf8 = inttoptr i32 %v1_10005bf8 to i32*
  %v3_10005bf8 = load i32, i32* %v2_10005bf8, align 4
  store i32 268459016, i32* @lr, align 4
  %v5_10005c04 = call i32 @function_100098ec(i32 %v3_10005bf8, i32 %v2_10005564, i32 %v4_10005bec, i32 16384)
  br label %dec_label_pc_10005824

dec_label_pc_10005c0c:                            ; preds = %dec_label_pc_10005c54, %dec_label_pc_10005a18
  %v0_10005c0c = load i32, i32* @r23, align 4
  %v1_10005c0c = inttoptr i32 %v0_10005c0c to i32*
  %v2_10005c0c = load i32, i32* %v1_10005c0c, align 4
  %v3_10005c10 = icmp eq i32 %v2_10005c0c, 11
  br i1 %v3_10005c10, label %dec_label_pc_10005824, label %dec_label_pc_10005c18

dec_label_pc_10005c18:                            ; preds = %dec_label_pc_10005c0c
  %v3_10005c18 = icmp eq i32 %v2_10005c0c, 4
  br i1 %v3_10005c18, label %dec_label_pc_10005824, label %dec_label_pc_10005c20

dec_label_pc_10005c20:                            ; preds = %dec_label_pc_10005c74, %dec_label_pc_10005c18, %dec_label_pc_10005a44
  %v3_10005c20 = load i32, i32* @global_var_1001bd44.89, align 4
  %v3_10005c24 = icmp eq i32 %v3_10005c20, -1
  br i1 %v3_10005c24, label %dec_label_pc_10005c30, label %dec_label_pc_10005c2c

dec_label_pc_10005c2c:                            ; preds = %dec_label_pc_10005c20
  store i32 ptrtoint (i32* @global_var_10005c30.98 to i32), i32* @lr, align 4
  %v0_10005c2c = call i32 @function_10008c98()
  br label %dec_label_pc_10005c30

dec_label_pc_10005c30:                            ; preds = %dec_label_pc_10005c20, %dec_label_pc_10005c2c
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001bd44.89, align 4
  store i32 268459076, i32* @lr, align 4
  %v1_10005c40 = call i32 @function_1000a498(i32 1)
  br label %dec_label_pc_10005824

dec_label_pc_10005c48:                            ; preds = %dec_label_pc_10005b6c
  store i32 268459088, i32* @lr, align 4
  %v2_10005c4c = call i32 @function_10008db8(i32 %v3_10005b98, i32 9)
  br label %dec_label_pc_10005ba4

dec_label_pc_10005c54:                            ; preds = %dec_label_pc_10005a58
  %v0_10005c54 = load i32, i32* @r31, align 4
  %v1_10005c54 = load i32, i32* @r23, align 4
  %v2_10005c54 = inttoptr i32 %v1_10005c54 to i32*
  store i32 %v0_10005c54, i32* %v2_10005c54, align 4
  store i32 %v2_10005c58, i32* @r31, align 4
  %v3_10005c64 = load i32, i32* @global_var_1001bd44.89, align 4
  store i32 268459116, i32* @lr, align 4
  %v5_10005c68 = call i32 @function_10009874(i32 %v3_10005c64, i32 %v2_10005c58, i32 %v4_10005a4c, i32 16386)
  %v3_10005c6c = icmp eq i32 %v5_10005c68, -1
  br i1 %v3_10005c6c, label %dec_label_pc_10005c0c, label %dec_label_pc_10005c74

dec_label_pc_10005c74:                            ; preds = %dec_label_pc_10005c54
  %v3_10005c74 = icmp eq i32 %v5_10005c68, 0
  br i1 %v3_10005c74, label %dec_label_pc_10005c20, label %dec_label_pc_10005c7c

dec_label_pc_10005c7c:                            ; preds = %dec_label_pc_10005c74
  %v3_10005c7c = load i32, i32* @global_var_1001bd44.89, align 4
  store i32 268459152, i32* @lr, align 4
  %v4_10005c8c = call i32 @function_10009874(i32 %v3_10005c7c, i32 %v2_10005640, i32 2, i32 16384)
  %v3_10005c90 = load i32, i32* @global_var_1001bd44.89, align 4
  %v3_10005c94 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005c94 = sext i16 %v3_10005c94 to i32
  store i32 268459172, i32* @lr, align 4
  %v5_10005ca0 = call i32 @function_10009874(i32 %v3_10005c90, i32 %v2_10005c58, i32 %v4_10005c94, i32 16384)
  %v3_10005ca4 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005ca8 = icmp eq i16 %v3_10005ca4, 0
  br i1 %v4_10005ca8, label %dec_label_pc_10005824, label %dec_label_pc_10005cb0

dec_label_pc_10005cb0:                            ; preds = %dec_label_pc_10005c7c
  %v4_10005ca4 = sext i16 %v3_10005ca4 to i32
  store i32 268459192, i32* @lr, align 4
  %v3_10005cb4 = call i32 @function_10000394(i32 %v2_10005c58, i32 %v4_10005ca4)
  br label %dec_label_pc_10005824

dec_label_pc_10005cbc:                            ; preds = %dec_label_pc_10005a4c
  %v3_10005cbc = load i32, i32* @global_var_1001bd44.89, align 4
  store i32 268459216, i32* @lr, align 4
  %v4_10005ccc = call i32 @function_10009874(i32 %v3_10005cbc, i32 %v2_10005640, i32 2, i32 16384)
  br label %dec_label_pc_10005824

; uselistorder directives
  uselistorder i16 %v3_10005ca4, { 1, 0 }
  uselistorder i16 %v3_10005bec, { 1, 0 }
  uselistorder i32 %v3_10005a80, { 1, 0, 2 }
  uselistorder i32 %v1_10005a10, { 1, 0 }
  uselistorder i32 %v3_100059ec, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_10005960, { 2, 1, 0 }
  uselistorder i32 %v2_10005928, { 1, 0, 2 }
  uselistorder i32 %v0_10005918, { 2, 0, 1 }
  uselistorder i32 %v2_100059d4, { 1, 0 }
  uselistorder i32 %v1_10005858, { 1, 0 }
  uselistorder i32 %v1_10005854, { 1, 0 }
  uselistorder i32 %v1_1000583c, { 1, 0 }
  uselistorder i32 %v1_10005838, { 1, 0 }
  uselistorder i32 %v2_10005c58, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10005820, { 1, 0, 2 }
  uselistorder i32 %v2_100056c4, { 1, 0 }
  uselistorder i32 %v2_10005668, { 1, 0 }
  uselistorder i32 %v2_10005640, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_100055dc, { 1, 0 }
  uselistorder i32 %v2_10005534, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_10005500, { 1, 2, 0 }
  uselistorder i32 %v0_10005444, { 2, 3, 0, 1 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1624, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1620, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 1, 2, 3, 4, 15, 16, 5, 6, 7, 13, 14, 8, 9, 10, 11, 12 }
  uselistorder i32* %r18.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r17.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r16.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 0, 1, 2, 28, 29, 30, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %ctr.global-to-local, { 10, 0, 8, 9, 1, 2, 3, 6, 7, 4, 5 }
  uselistorder i8* bitcast (i16* @global_var_1001bd7c.90 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001bd44.89, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 (i32)* @function_10005434, { 1, 0 }
  uselistorder i32 (i32)* @function_10004b18, { 1, 0 }
  uselistorder i32 (i32)* @function_1000072c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100090b0, { 1, 0 }
  uselistorder i32 (i32)* @function_1000518c, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009a4c, { 1, 0 }
  uselistorder label %dec_label_pc_10005c30, { 1, 0 }
  uselistorder label %dec_label_pc_10005bac, { 1, 0 }
  uselistorder label %dec_label_pc_10005ba4, { 1, 0 }
  uselistorder label %dec_label_pc_10005acc, { 1, 0 }
  uselistorder label %dec_label_pc_100059b0, { 1, 0 }
  uselistorder label %dec_label_pc_10005940, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100058dc, { 1, 0 }
  uselistorder label %dec_label_pc_10005898, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005888, { 1, 0 }
  uselistorder label %dec_label_pc_10005850.dec_label_pc_10005850_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005834.dec_label_pc_10005834_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005824, { 7, 8, 1, 9, 2, 3, 10, 4, 11, 12, 5, 6, 13, 0, 14 }
  uselistorder label %dec_label_pc_10005630, { 2, 0, 1 }
}

define i32 @function_10005cd4() local_unnamed_addr {
dec_label_pc_10005cd4:
  %v3_10005cdc = load i32, i32* @global_var_1001bdfc.99, align 4
  %v3_10005ce4 = load i32, i32* @global_var_1001bdf0.100, align 4
  %v1_10005cec = udiv i32 %v3_10005cdc, 524288
  %v3_10005cf0 = load i32, i32* @global_var_1001bdf8.101, align 4
  %v1_10005cf4 = mul i32 %v3_10005ce4, 2048
  %v2_10005cf8 = xor i32 %v1_10005cec, %v3_10005cdc
  %v2_10005cfc = xor i32 %v1_10005cf4, %v3_10005ce4
  %v3_10005d00 = load i32, i32* @global_var_1001bdf4.102, align 4
  %v2_10005d04 = xor i32 %v2_10005cf8, %v2_10005cfc
  %v1_10005d08 = udiv i32 %v2_10005cfc, 256
  %v2_10005d0c = xor i32 %v2_10005d04, %v1_10005d08
  store i32 %v3_10005d00, i32* @global_var_1001bdf0.100, align 4
  store i32 %v3_10005cf0, i32* @global_var_1001bdf4.102, align 4
  store i32 %v3_10005cdc, i32* @global_var_1001bdf8.101, align 4
  store i32 %v2_10005d0c, i32* @global_var_1001bdfc.99, align 4
  ret i32 %v2_10005d0c

; uselistorder directives
  uselistorder i32 %v2_10005d0c, { 1, 0 }
  uselistorder i32 %v3_10005ce4, { 1, 0 }
  uselistorder i32 %v3_10005cdc, { 2, 1, 0 }
}

define i32 @function_10005d24(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005d24:
  store i32 268459332, i32* @lr, align 4
  %v0_10005d40 = call i32 @function_10009068()
  store i32 %v0_10005d40, i32* @global_var_1001bdf0.100, align 4
  store i32 268459344, i32* @lr, align 4
  %v0_10005d4c = call i32 @function_10008d28()
  store i32 268459352, i32* @lr, align 4
  %v0_10005d54 = call i32 @function_10008d70()
  %v2_10005d58 = xor i32 %v0_10005d4c, %v0_10005d54
  store i32 %v2_10005d58, i32* @global_var_1001bdf4.102, align 4
  store i32 268459364, i32* @lr, align 4
  %v1_10005d60 = call i32 @function_10009378(i32 %v0_10005d54)
  %v3_10005d64 = load i32, i32* @global_var_1001bdf4.102, align 4
  %v2_10005d74 = xor i32 %v3_10005d64, %v1_10005d60
  store i32 %v2_10005d74, i32* @global_var_1001bdfc.99, align 4
  store i32 %v1_10005d60, i32* @global_var_1001bdf8.101, align 4
  ret i32 %v1_10005d60

; uselistorder directives
  uselistorder i32 %v1_10005d60, { 2, 1, 0 }
  uselistorder i32 %v0_10005d54, { 1, 0 }
  uselistorder i32 ()* @function_10008d70, { 1, 0 }
}

define i32 @function_10005d94(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005d94:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10005db0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 268459476, i32* @lr, align 4
  %v1_10005dd0 = call i32 @function_10007fbc(i32 30)
  %v3_10005ddc = call i32 @function_10007f08(i32 30, i32* null)
  %v2_10005de8 = inttoptr i32 %v3_10005ddc to i8*
  %v3_10005de8 = call i32 @function_100094e4(i32 %v2_10005db0, i8* %v2_10005de8)
  %v3_10005dec = icmp eq i32 %arg2, 0
  br i1 %v3_10005dec, label %dec_label_pc_10005e70, label %dec_label_pc_10005df4

dec_label_pc_10005df4:                            ; preds = %dec_label_pc_10005d94
  %v1_10005df4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005df4 = add i32 %v1_10005df4, %arg2
  store i32 %v2_10005df4, i32* %r26.global-to-local, align 4
  %v1_10005e48 = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_10005e08

dec_label_pc_10005e08:                            ; preds = %dec_label_pc_10005e08, %dec_label_pc_10005df4
  %v3_10005e08 = load i32, i32* @global_var_1001bdfc.99, align 4
  %v3_10005e10 = load i32, i32* @global_var_1001bdf0.100, align 4
  %v1_10005e14 = udiv i32 %v3_10005e08, 524288
  %v3_10005e18 = load i32, i32* @global_var_1001bdf8.101, align 4
  %v1_10005e1c = mul i32 %v3_10005e10, 2048
  %v2_10005e20 = xor i32 %v1_10005e14, %v3_10005e08
  %v2_10005e24 = xor i32 %v1_10005e1c, %v3_10005e10
  %v3_10005e28 = load i32, i32* @global_var_1001bdf4.102, align 4
  %v2_10005e2c = xor i32 %v2_10005e20, %v2_10005e24
  %v1_10005e30 = udiv i32 %v2_10005e24, 256
  %v2_10005e34 = xor i32 %v2_10005e2c, %v1_10005e30
  store i32 %v2_10005e34, i32* %r29.global-to-local, align 4
  store i32 %v3_10005e28, i32* @global_var_1001bdf0.100, align 4
  store i32 %v2_10005e34, i32* @global_var_1001bdfc.99, align 4
  store i32 %v3_10005e18, i32* @global_var_1001bdf4.102, align 4
  store i32 %v3_10005e08, i32* @global_var_1001bdf8.101, align 4
  store i32 268459596, i32* @lr, align 4
  %v2_10005e48 = call i32 @function_10008558(i8* %v1_10005e48)
  %v0_10005e4c = load i32, i32* %r29.global-to-local, align 4
  %v2_10005e4c = urem i32 %v0_10005e4c, %v2_10005e48
  store i32 %v2_10005e4c, i32* %r29.global-to-local, align 4
  %v0_10005e58 = load i32, i32* @r1, align 4
  %v2_10005e58 = add i32 %v0_10005e58, %v2_10005e4c
  %v1_10005e5c = add i32 %v2_10005e58, 8
  %v2_10005e5c = inttoptr i32 %v1_10005e5c to i8*
  %v3_10005e5c = load i8, i8* %v2_10005e5c, align 1
  %v2_10005e60 = load i32, i32* %r31.global-to-local, align 4
  %v3_10005e60 = inttoptr i32 %v2_10005e60 to i8*
  store i8 %v3_10005e5c, i8* %v3_10005e60, align 1
  %v0_10005e64 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005e64 = add i32 %v0_10005e64, 1
  store i32 %v1_10005e64, i32* %r31.global-to-local, align 4
  %v1_10005e68 = load i32, i32* %r26.global-to-local, align 4
  %v4_10005e68 = icmp eq i32 %v1_10005e64, %v1_10005e68
  br i1 %v4_10005e68, label %dec_label_pc_10005e70, label %dec_label_pc_10005e08

dec_label_pc_10005e70:                            ; preds = %dec_label_pc_10005e08, %dec_label_pc_10005d94
  store i32 268459640, i32* @lr, align 4
  %v1_10005e74 = call i32 @function_10007f30(i32 30)
  ret i32 %v1_10005e74

; uselistorder directives
  uselistorder i32 %v3_10005e10, { 1, 0 }
  uselistorder i32 %v3_10005e08, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_10007f30, { 0, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32*)* @function_10007f08, { 25, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 (i32)* @function_10007fbc, { 0, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10005ea8() local_unnamed_addr {
dec_label_pc_10005ea8:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10005ea8 = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10005ea8, 1
  br i1 %tmp19, label %dec_label_pc_10005ea8.dec_label_pc_10005f5c_crit_edge, label %dec_label_pc_10005ec0

dec_label_pc_10005ea8.dec_label_pc_10005f5c_crit_edge: ; preds = %dec_label_pc_10005ea8
  %v0_10005f6c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005f5c

dec_label_pc_10005ec0:                            ; preds = %dec_label_pc_10005ea8
  %v3_10005ed0 = load i32, i32* @global_var_1001bdfc.99, align 4
  store i32 %v3_10005ed0, i32* %r7.global-to-local, align 4
  %v3_10005ed4 = load i32, i32* @global_var_1001bdf8.101, align 4
  store i32 %v3_10005ed4, i32* %r5.global-to-local, align 4
  %v3_10005ed8 = load i32, i32* @global_var_1001bdf4.102, align 4
  store i32 %v3_10005ed8, i32* %r6.global-to-local, align 4
  %v3_10005edc = load i32, i32* @global_var_1001bdf0.100, align 4
  br label %dec_label_pc_10005f08

dec_label_pc_10005ee4:                            ; preds = %dec_label_pc_10005f08
  %v1_10005ee4 = load i32, i32* @r3, align 4
  %v2_10005ee4 = inttoptr i32 %v1_10005ee4 to i32*
  store i32 %v2_10005f2c, i32* %v2_10005ee4, align 4
  %v0_10005ee8 = load i32, i32* @r4, align 4
  %v1_10005ee8 = add i32 %v0_10005ee8, -4
  store i32 %v1_10005ee8, i32* @r4, align 4
  %v0_10005eec = load i32, i32* @r3, align 4
  %v1_10005eec = add i32 %v0_10005eec, 4
  br label %dec_label_pc_10005ef0

dec_label_pc_10005ef0:                            ; preds = %dec_label_pc_10005f40, %dec_label_pc_10005ee4
  %v0_10005ef0 = phi i32 [ %v0_10005ef0.pr, %dec_label_pc_10005f40 ], [ %v1_10005ee8, %dec_label_pc_10005ee4 ]
  %storemerge = phi i32 [ %v1_10005f44, %dec_label_pc_10005f40 ], [ %v1_10005eec, %dec_label_pc_10005ee4 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_10005ef4 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10005ef0, 1
  br i1 %tmp20, label %dec_label_pc_10005f4c, label %dec_label_pc_10005efc

dec_label_pc_10005efc:                            ; preds = %dec_label_pc_10005ef0
  %v0_10005efc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005efc, i32* %r6.global-to-local, align 4
  %v0_10005f00 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005f00, i32* %r5.global-to-local, align 4
  %v0_10005f04 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005f04, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10005f08

dec_label_pc_10005f08:                            ; preds = %dec_label_pc_10005ec0, %dec_label_pc_10005efc
  %v0_10005fa8 = phi i32 [ %v3_10005ed8, %dec_label_pc_10005ec0 ], [ %v0_10005efc, %dec_label_pc_10005efc ]
  %v0_10005f8c = phi i32 [ %v3_10005ed4, %dec_label_pc_10005ec0 ], [ %v0_10005f00, %dec_label_pc_10005efc ]
  %v0_10005f90 = phi i32 [ %v3_10005ed0, %dec_label_pc_10005ec0 ], [ %v0_10005f04, %dec_label_pc_10005efc ]
  %v0_10005f70 = phi i32 [ %v3_10005edc, %dec_label_pc_10005ec0 ], [ %v0_10005ef4, %dec_label_pc_10005efc ]
  %v0_10005f38 = phi i32 [ %v0_10005ea8, %dec_label_pc_10005ec0 ], [ %v0_10005ef0, %dec_label_pc_10005efc ]
  %v2_10005f08 = icmp sgt i32 %v0_10005f38, 3
  %v1_10005f0c = mul i32 %v0_10005f70, 2048
  %v1_10005f10 = udiv i32 %v0_10005f90, 524288
  %v2_10005f14 = xor i32 %v1_10005f0c, %v0_10005f70
  %v2_10005f18 = xor i32 %v1_10005f10, %v0_10005f90
  %v2_10005f20 = xor i32 %v2_10005f18, %v2_10005f14
  %v1_10005f24 = udiv i32 %v2_10005f14, 256
  %v2_10005f2c = xor i32 %v2_10005f20, %v1_10005f24
  store i32 %v2_10005f2c, i32* %r0.global-to-local, align 4
  br i1 %v2_10005f08, label %dec_label_pc_10005ee4, label %dec_label_pc_10005f34

dec_label_pc_10005f34:                            ; preds = %dec_label_pc_10005f08
  %v3_10005f1c = icmp eq i32 %v0_10005f38, 1
  store i32 %v2_10005f2c, i32* %r0.global-to-local, align 4
  %v1_10005f38 = add i32 %v0_10005f38, -2
  store i32 %v1_10005f38, i32* @r4, align 4
  br i1 %v3_10005f1c, label %dec_label_pc_10005f70, label %dec_label_pc_10005f40

dec_label_pc_10005f40:                            ; preds = %dec_label_pc_10005f34
  %v1_10005f40 = trunc i32 %v2_10005f2c to i16
  %v2_10005f40 = load i32, i32* @r3, align 4
  %v3_10005f40 = inttoptr i32 %v2_10005f40 to i16*
  store i16 %v1_10005f40, i16* %v3_10005f40, align 2
  %v0_10005f44 = load i32, i32* @r3, align 4
  %v1_10005f44 = add i32 %v0_10005f44, 2
  %v0_10005ef0.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_10005ef0

dec_label_pc_10005f4c:                            ; preds = %dec_label_pc_10005ef0
  %v0_10005f4c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005f4c, i32* @global_var_1001bdfc.99, align 4
  %v0_10005f50 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005f50, i32* @global_var_1001bdf8.101, align 4
  %v0_10005f54 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005f54, i32* @global_var_1001bdf4.102, align 4
  store i32 %v0_10005ef4, i32* @global_var_1001bdf0.100, align 4
  br label %dec_label_pc_10005f5c

dec_label_pc_10005f5c:                            ; preds = %dec_label_pc_10005ea8.dec_label_pc_10005f5c_crit_edge, %dec_label_pc_10005f4c
  %v0_10005f6c = phi i32 [ %v0_10005f6c.pre, %dec_label_pc_10005ea8.dec_label_pc_10005f5c_crit_edge ], [ %storemerge, %dec_label_pc_10005f4c ]
  ret i32 %v0_10005f6c

dec_label_pc_10005f70:                            ; preds = %dec_label_pc_10005f34
  store i32 %v2_10005f2c, i32* %r0.global-to-local, align 4
  store i32 %v0_10005f8c, i32* @global_var_1001bdf4.102, align 4
  store i32 %v0_10005f90, i32* @global_var_1001bdf8.101, align 4
  store i32 %v2_10005f2c, i32* @global_var_1001bdfc.99, align 4
  store i32 %v0_10005fa8, i32* @global_var_1001bdf0.100, align 4
  %v1_10005fac = trunc i32 %v2_10005f2c to i8
  %v2_10005fac = load i32, i32* @r3, align 4
  %v3_10005fac = inttoptr i32 %v2_10005fac to i8*
  store i8 %v1_10005fac, i8* %v3_10005fac, align 1
  %v0_10005fb0 = load i32, i32* @r3, align 4
  ret i32 %v0_10005fb0

; uselistorder directives
  uselistorder i32 %v2_10005f2c, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_10005f70, { 1, 0 }
  uselistorder i32 %v0_10005f90, { 1, 2, 0 }
  uselistorder i32 %v0_10005ea8, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_10005f5c, { 1, 0 }
  uselistorder label %dec_label_pc_10005f08, { 1, 0 }
}

define i32 @function_10005fb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005fb4:
  store i32 %arg1, i32* @r31, align 4
  %v3_10005fc0 = icmp eq i32 %arg1, 0
  br i1 %v3_10005fc0, label %dec_label_pc_10005fe4, label %dec_label_pc_10005fcc

dec_label_pc_10005fcc:                            ; preds = %dec_label_pc_10005fb4
  %v1_10005fcc = add i32 %arg1, 4
  %v2_10005fcc = inttoptr i32 %v1_10005fcc to i32*
  %v3_10005fcc = load i32, i32* %v2_10005fcc, align 4
  store i32 %v3_10005fcc, i32* @r3, align 4
  %v3_10005fd0 = icmp eq i32 %v3_10005fcc, 0
  br i1 %v3_10005fd0, label %dec_label_pc_10005fdc, label %dec_label_pc_10005fd8

dec_label_pc_10005fd8:                            ; preds = %dec_label_pc_10005fcc
  store i32 268459996, i32* @lr, align 4
  %v0_10005fd8 = call i32 @function_10009d6c()
  %v0_10005fdc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005fdc

dec_label_pc_10005fdc:                            ; preds = %dec_label_pc_10005fcc, %dec_label_pc_10005fd8
  %v0_10005fdc = phi i32 [ %arg1, %dec_label_pc_10005fcc ], [ %v0_10005fdc.pre, %dec_label_pc_10005fd8 ]
  store i32 %v0_10005fdc, i32* @r3, align 4
  store i32 268460004, i32* @lr, align 4
  %v0_10005fe0 = call i32 @function_10009d6c()
  br label %dec_label_pc_10005fe4

dec_label_pc_10005fe4:                            ; preds = %dec_label_pc_10005fb4, %dec_label_pc_10005fdc
  %v0_10005ff4 = phi i32 [ 0, %dec_label_pc_10005fb4 ], [ %v0_10005fe0, %dec_label_pc_10005fdc ]
  ret i32 %v0_10005ff4

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10005fe4, { 1, 0 }
  uselistorder label %dec_label_pc_10005fdc, { 1, 0 }
}

define i32 @function_10005ff8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005ff8:
  %cr4_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4308 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-2096 = alloca i32, align 4
  %stack_var_-2108 = alloca i16, align 2
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-4300 = alloca i32, align 4
  %stack_var_-4143 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v0_10005ffc = load i32, i32* @lr, align 4
  store i32 %v0_10005ffc, i32* %r0.global-to-local, align 4
  %v0_10006000 = call i32 @__asm_mfcr()
  %v0_10006008 = load i32, i32* @r29, align 4
  store i32 %v0_10006000, i32* @r29, align 4
  %v2_1000601c = ptrtoint i32* %stack_var_-4156 to i32
  %v2_10006024 = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v2_10006024, i32* %r26.global-to-local, align 4
  %v0_10006028 = load i32, i32* %r0.global-to-local, align 4
  %v0_10006048 = load i32, i32* @r28, align 4
  store i32 268460120, i32* @lr, align 4
  %v2_10006054 = call i32 @function_10009cfc(i32 1, i32 8)
  store i32 %v2_10006054, i32* %r25.global-to-local, align 4
  %v0_1000605c = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006064.103 to i32), i32* @lr, align 4
  %v1_10006060 = inttoptr i32 %v0_1000605c to i8*
  %v2_10006060 = call i32 @function_10008558(i8* %v1_10006060)
  %v2_10006064 = ptrtoint i32* %stack_var_-4143 to i32
  store i32 %v2_10006064, i32* %r10.global-to-local, align 4
  %v1_10006068 = add i32 %v2_10006060, 1
  store i32 %v2_10006024, i32* %r7.global-to-local, align 4
  %v1_10006074 = add i32 %v2_10006060, 2
  store i32 %v1_10006074, i32* %ctr.global-to-local, align 4
  %tmp94 = icmp sgt i32 %v1_10006068, -1
  br i1 %tmp94, label %dec_label_pc_1000609c.preheader, label %dec_label_pc_1000609c.preheader.thread

dec_label_pc_1000609c.preheader:                  ; preds = %dec_label_pc_10005ff8
  %v3_10006070 = icmp eq i32 %v1_10006068, 0
  %v1_1000609c13 = or i32 %v2_10006064, 1
  store i32 %v1_1000609c13, i32* %r11.global-to-local, align 4
  store i32 %v1_10006068, i32* %ctr.global-to-local, align 4
  br i1 %v3_10006070, label %dec_label_pc_100060cc, label %dec_label_pc_100060a4.lr.ph

dec_label_pc_100060a4.lr.ph:                      ; preds = %dec_label_pc_1000609c.preheader
  %v0_100060a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100060a4

dec_label_pc_10006088:                            ; preds = %dec_label_pc_100060b4
  %v3_10006088 = inttoptr i32 %v2_10006088 to i8*
  store i8 %v2_100060a4, i8* %v3_10006088, align 1
  %v0_1000608c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000608c = urem i32 %v0_1000608c, 256
  %v0_10006090 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006090 = add i32 %v0_10006090, 1
  store i32 %v1_10006090, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006094

dec_label_pc_10006094:                            ; preds = %dec_label_pc_100060bc, %dec_label_pc_10006088
  %v0_10006098 = phi i32 [ %v0_10006098.pre, %dec_label_pc_100060bc ], [ %v1_10006090, %dec_label_pc_10006088 ]
  %v0_100060b420 = phi i32 [ 0, %dec_label_pc_100060bc ], [ %v1_1000608c, %dec_label_pc_10006088 ]
  %v0_10006094 = load i32, i32* @r29, align 4
  %v1_10006094 = add i32 %v0_10006094, 1
  store i32 %v1_10006094, i32* @r29, align 4
  store i32 %v0_10006098, i32* %r10.global-to-local, align 4
  %v1_1000609c = add i32 %v0_10006098, 1
  store i32 %v1_1000609c, i32* %r11.global-to-local, align 4
  %v0_100060a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100060a0 = add i32 %v0_100060a0, -1
  store i32 %v1_100060a0, i32* %ctr.global-to-local, align 4
  %v2_100060a0 = icmp eq i32 %v1_100060a0, 0
  br i1 %v2_100060a0, label %dec_label_pc_100060cc, label %dec_label_pc_100060a4

dec_label_pc_100060a4:                            ; preds = %dec_label_pc_100060a4.lr.ph, %dec_label_pc_10006094
  %v2_10006088 = phi i32 [ %v2_10006064, %dec_label_pc_100060a4.lr.ph ], [ %v0_10006098, %dec_label_pc_10006094 ]
  %v0_100060bc = phi i32 [ 0, %dec_label_pc_100060a4.lr.ph ], [ %v0_100060b420, %dec_label_pc_10006094 ]
  %v0_100060a4 = phi i32 [ %v0_100060a4.pre, %dec_label_pc_100060a4.lr.ph ], [ %v1_10006094, %dec_label_pc_10006094 ]
  %v1_100060a4 = inttoptr i32 %v0_100060a4 to i8*
  %v2_100060a4 = load i8, i8* %v1_100060a4, align 1
  %v3_100060a4 = zext i8 %v2_100060a4 to i32
  store i32 %v3_100060a4, i32* %r0.global-to-local, align 4
  %v3_100060a8 = icmp eq i8 %v2_100060a4, 46
  br i1 %v3_100060a8, label %dec_label_pc_100060bc, label %dec_label_pc_100060b4

dec_label_pc_100060b4:                            ; preds = %dec_label_pc_100060a4
  %v3_100060ac = icmp eq i8 %v2_100060a4, 0
  %v1_100060b4 = add nsw i32 %v0_100060bc, 1
  store i32 %v1_100060b4, i32* %r9.global-to-local, align 4
  br i1 %v3_100060ac, label %dec_label_pc_100060bc, label %dec_label_pc_10006088

dec_label_pc_100060bc:                            ; preds = %dec_label_pc_100060b4, %dec_label_pc_100060a4
  %v1_100060bc = trunc i32 %v0_100060bc to i8
  %v2_100060bc = load i32, i32* %r7.global-to-local, align 4
  %v3_100060bc = inttoptr i32 %v2_100060bc to i8*
  store i8 %v1_100060bc, i8* %v3_100060bc, align 1
  %v0_100060c0 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100060c0, i32* %r7.global-to-local, align 4
  %v0_10006098.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006094

dec_label_pc_100060cc:                            ; preds = %dec_label_pc_10006094, %dec_label_pc_1000609c.preheader.thread, %dec_label_pc_1000609c.preheader
  %v2_100060d4 = phi i32 [ %v2_10006064, %dec_label_pc_1000609c.preheader ], [ %v2_10006064, %dec_label_pc_1000609c.preheader.thread ], [ %v0_10006098, %dec_label_pc_10006094 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100060d4 = inttoptr i32 %v2_100060d4 to i8*
  store i8 0, i8* %v3_100060d4, align 1
  %v2_100060d8 = ptrtoint i32* %stack_var_-4300 to i32
  store i32 -1, i32* @r30, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100060e8.104 to i32), i32* @lr, align 4
  %v1_100060e4 = bitcast i32* %stack_var_-4144 to i8*
  %v2_100060e4 = call i32 @function_10008558(i8* %v1_100060e4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100060ec = load i32, i32* %r26.global-to-local, align 4
  %v2_100060ec = add i32 %v0_100060ec, %v2_100060e4
  store i32 %v2_100060ec, i32* %r29.global-to-local, align 4
  %v0_100060f8 = load i32, i32* @r30, align 4
  %v3_100060f8 = icmp eq i32 %v0_100060f8, -1
  store i1 %v3_100060f8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-4300, align 4
  %v2_10006100 = ptrtoint i32* %stack_var_-4284 to i32
  store i32 %v2_10006100, i32* @r31, align 4
  %v2_10006108 = ptrtoint i16* %stack_var_-2108 to i32
  store i32 %v2_10006108, i32* %r19.global-to-local, align 4
  store i32 268460308, i32* @lr, align 4
  %v2_10006110 = call i32 @function_10008558(i8* %v1_100060e4)
  %v1_10006114 = add i32 %v2_10006110, 17
  store i32 %v1_10006114, i32* %r23.global-to-local, align 4
  %v0_10006118 = call i32 @function_10005cd4()
  %v1_10006118 = sext i32 %v0_10006118 to i64
  store i32 16, i32* @r4, align 4
  %v5_1000612c = mul nuw nsw i64 %v1_10006118, 2147516417
  store i32 %v2_100060d8, i32* @r3, align 4
  %v2_10006134 = ptrtoint i32* %stack_var_-2096 to i32
  store i32 %v2_10006134, i32* %r20.global-to-local, align 4
  %v1_100061382 = udiv i64 %v5_1000612c, 140737488355328
  %v1_10006138 = trunc i64 %v1_100061382 to i32
  store i32 %v1_10006138, i32* %r0.global-to-local, align 4
  %v2_1000613c = add i32 %v1_10006138, %v0_10006118
  store i32 %v2_1000613c, i32* %r9.global-to-local, align 4
  %v1_10006140 = urem i32 %v2_1000613c, 65536
  store i32 %v1_10006140, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006148.106 to i32), i32* @lr, align 4
  %v0_10006144 = call i32 @function_10008600()
  store i32 2, i32* %stack_var_-4300, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 134744072, i32* %r11.global-to-local, align 4
  %v0_1000615c = load i32, i32* %r29.global-to-local, align 4
  store i32 53, i32* %r9.global-to-local, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10006174 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10006174, i32* %stack_var_-4156, align 4
  %v3_1000617c = add i32 %v0_1000615c, 3
  %v4_1000617c = inttoptr i32 %v3_1000617c to i16*
  store i16 1, i16* %v4_1000617c, align 2
  %v0_10006180 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006180 = trunc i32 %v0_10006180 to i16
  %v2_10006180 = load i32, i32* %r29.global-to-local, align 4
  %v3_10006180 = add i32 %v2_10006180, 1
  %v4_10006180 = inttoptr i32 %v3_10006180 to i16*
  store i16 %v1_10006180, i16* %v4_10006180, align 2
  %v2_10006224 = ptrtoint i32* %stack_var_-4312 to i32
  %v2_10006258 = ptrtoint i32* %stack_var_-4308 to i32
  %v1_10006348 = bitcast i32* %stack_var_-2096 to i8*
  %v4_10006360 = zext i16 %tmp60 to i32
  %v3_10006364 = icmp eq i16 %tmp60, 0
  br label %dec_label_pc_10006184

dec_label_pc_10006184:                            ; preds = %dec_label_pc_100062c4, %dec_label_pc_100060cc
  %v0_10006184 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10006184, label %dec_label_pc_10006190, label %dec_label_pc_10006188

dec_label_pc_10006188:                            ; preds = %dec_label_pc_10006184
  store i32 ptrtoint ([3 x i8]* @global_var_10006190.107 to i32), i32* @lr, align 4
  %v0_1000618c = call i32 @function_10008c98()
  br label %dec_label_pc_10006190

dec_label_pc_10006190:                            ; preds = %dec_label_pc_10006184, %dec_label_pc_10006188
  store i32 268460448, i32* @lr, align 4
  %v3_1000619c = call i32 @function_100099a0(i32 2, i32 2, i32 0)
  store i32 %v3_1000619c, i32* @r3, align 4
  %v3_100061a0 = icmp eq i32 %v3_1000619c, -1
  store i1 %v3_100061a0, i1* %cr4_eq.global-to-local, align 1
  store i32 %v3_1000619c, i32* @r30, align 4
  br i1 %v3_100061a0, label %dec_label_pc_100062cc, label %dec_label_pc_100061ac

dec_label_pc_100061ac:                            ; preds = %dec_label_pc_10006190
  store i32 268460472, i32* @lr, align 4
  %v0_100061b4 = call i32 @function_100097a0()
  %v3_100061b8 = icmp eq i32 %v0_100061b4, -1
  br i1 %v3_100061b8, label %dec_label_pc_100062cc, label %dec_label_pc_100061c0

dec_label_pc_100061c0:                            ; preds = %dec_label_pc_100061ac
  %v0_100061c0 = load i32, i32* @r30, align 4
  %v0_100061c8 = load i32, i32* %r23.global-to-local, align 4
  store i32 268460500, i32* @lr, align 4
  %v4_100061d0 = call i32 @function_100098ec(i32 %v0_100061c0, i32 %v2_1000601c, i32 %v0_100061c8, i32 16384)
  %v3_100061d4 = icmp eq i32 %v4_100061d0, -1
  br i1 %v3_100061d4, label %dec_label_pc_100062cc, label %dec_label_pc_100061dc

dec_label_pc_100061dc:                            ; preds = %dec_label_pc_100061c0
  %v0_100061dc = load i32, i32* @r30, align 4
  store i32 %v0_100061dc, i32* @r4, align 4
  store i32 268460528, i32* @lr, align 4
  %v2_100061ec = call i32 @function_10008bb0(i32 3)
  %v0_100061f0 = load i32, i32* @r30, align 4
  store i32 %v0_100061f0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10006204.108 to i32), i32* @lr, align 4
  %v2_10006200 = call i32 @function_10008bb0(i32 4)
  store i32 32, i32* %r0.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10006214139 = load i32, i32* @r31, align 4
  %v4_10006214141 = inttoptr i32 %v2_10006214139 to i32*
  store i32 0, i32* %v4_10006214141, align 4
  %v0_10006218142 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006218143 = add i32 %v0_10006218142, 4
  store i32 %v1_10006218143, i32* %r9.global-to-local, align 4
  %v0_1000621c144 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000621c145 = add i32 %v0_1000621c144, -1
  store i32 %v1_1000621c145, i32* %ctr.global-to-local, align 4
  %v2_1000621c146 = icmp eq i32 %v1_1000621c145, 0
  br i1 %v2_1000621c146, label %dec_label_pc_10006220, label %dec_label_pc_10006214.dec_label_pc_10006214_crit_edge

dec_label_pc_10006214.dec_label_pc_10006214_crit_edge: ; preds = %dec_label_pc_100061dc, %dec_label_pc_10006214.dec_label_pc_10006214_crit_edge
  %v1_10006218147 = phi i32 [ %v1_10006218, %dec_label_pc_10006214.dec_label_pc_10006214_crit_edge ], [ %v1_10006218143, %dec_label_pc_100061dc ]
  %v0_10006214.pre = load i32, i32* %r11.global-to-local, align 4
  %v2_10006214 = load i32, i32* @r31, align 4
  %v3_10006214 = add i32 %v2_10006214, %v1_10006218147
  %v4_10006214 = inttoptr i32 %v3_10006214 to i32*
  store i32 %v0_10006214.pre, i32* %v4_10006214, align 4
  %v0_10006218 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006218 = add i32 %v0_10006218, 4
  store i32 %v1_10006218, i32* %r9.global-to-local, align 4
  %v0_1000621c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000621c = add i32 %v0_1000621c, -1
  store i32 %v1_1000621c, i32* %ctr.global-to-local, align 4
  %v2_1000621c = icmp eq i32 %v1_1000621c, 0
  br i1 %v2_1000621c, label %dec_label_pc_10006220, label %dec_label_pc_10006214.dec_label_pc_10006214_crit_edge

dec_label_pc_10006220:                            ; preds = %dec_label_pc_10006214.dec_label_pc_10006214_crit_edge, %dec_label_pc_100061dc
  %v0_10006220 = load i32, i32* @r30, align 4
  %v1_10006220 = call i32 @__asm_rlwinm(i32 %v0_10006220, i32 29, i32 3, i32 29)
  store i32 %v1_10006220, i32* %r9.global-to-local, align 4
  store i32 %v2_10006224, i32* %r0.global-to-local, align 4
  %v2_10006228 = add i32 %v1_10006220, %v2_10006224
  store i32 %v2_10006228, i32* %r29.global-to-local, align 4
  %v0_1000622c = load i32, i32* @r30, align 4
  %v1_1000622c = urem i32 %v0_1000622c, 32
  store i32 %v1_1000622c, i32* %r28.global-to-local, align 4
  %v1_10006230 = add i32 %v2_10006228, 28
  %v2_10006230 = inttoptr i32 %v1_10006230 to i32*
  %v3_10006230 = load i32, i32* %v2_10006230, align 4
  %v3_10006238 = shl i32 1, %v1_1000622c
  %v1_1000623c = add i32 %v0_1000622c, 1
  %v2_10006240 = or i32 %v3_10006238, %v3_10006230
  store i32 %v2_10006240, i32* %r9.global-to-local, align 4
  store i32 %v2_10006240, i32* %v2_10006230, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 %v2_10006258, i32* %r7.global-to-local, align 4
  store i32 5, i32* %stack_var_-4308, align 4
  store i32 268460648, i32* @lr, align 4
  %v5_10006264 = call i32 @function_10008f60(i32 %v1_1000623c, i32 %v2_10006100, i32 0, i32 0, i32 %v2_10006258)
  %v3_10006268 = icmp eq i32 %v5_10006264, -1
  br i1 %v3_10006268, label %dec_label_pc_100062dc, label %dec_label_pc_10006270

dec_label_pc_10006270:                            ; preds = %dec_label_pc_10006220
  %v3_10006270 = icmp eq i32 %v5_10006264, 0
  br i1 %v3_10006270, label %dec_label_pc_100062bc, label %dec_label_pc_10006278

dec_label_pc_10006278:                            ; preds = %dec_label_pc_10006270
  %v0_10006278 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006278 = add i32 %v0_10006278, 28
  %v2_10006278 = inttoptr i32 %v1_10006278 to i32*
  %v3_10006278 = load i32, i32* %v2_10006278, align 4
  %v1_1000627c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000627c = urem i32 %v1_1000627c, 32
  %v3_1000627c = sub i32 0, %v1_1000627c
  %v4_1000627c = urem i32 %v3_1000627c, 32
  %v5_1000627c = shl i32 %v3_10006278, %v4_1000627c
  %v6_1000627c = xor i32 %v4_1000627c, 31
  %v7_1000627c = lshr i32 %v3_10006278, %v6_1000627c
  %v8_1000627c = udiv i32 %v7_1000627c, 2
  %v9_1000627c = or i32 %v8_1000627c, %v5_1000627c
  %v10_1000627c = and i32 %v1_1000627c, 32
  %v11_1000627c = icmp ne i32 %v10_1000627c, 0
  %v12_1000627c = lshr i32 -1, %v2_1000627c
  %v13_1000627c = select i1 %v11_1000627c, i32 0, i32 %v12_1000627c
  %v14_1000627c = and i32 %v9_1000627c, %v13_1000627c
  %v15_1000627c = ashr i32 %v3_10006278, 31
  %v16_1000627c = sub i32 -1, %v13_1000627c
  %v17_1000627c = and i32 %v15_1000627c, %v16_1000627c
  %v18_1000627c = or i32 %v14_1000627c, %v17_1000627c
  store i32 %v18_1000627c, i32* %r0.global-to-local, align 4
  %v1_10006280 = urem i32 %v18_1000627c, 2
  store i32 %v1_10006280, i32* %r9.global-to-local, align 4
  %v3_10006280 = icmp eq i32 %v1_10006280, 0
  br i1 %v3_10006280, label %dec_label_pc_100062dc, label %dec_label_pc_10006288

dec_label_pc_10006288:                            ; preds = %dec_label_pc_10006278
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1000629c = load i32, i32* @r30, align 4
  store i32 268460708, i32* @lr, align 4
  %v6_100062a0 = call i32 @function_100098ac(i32 %v0_1000629c, i32 %v2_10006108, i32 2048, i32 16384, i32 0, i32 0)
  store i32 %v6_100062a0, i32* %r29.global-to-local, align 4
  %v0_100062a8 = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100062b0.109 to i32), i32* @lr, align 4
  %v1_100062ac = inttoptr i32 %v0_100062a8 to i8*
  %v2_100062ac = call i32 @function_10008558(i8* %v1_100062ac)
  %v1_100062b0 = add i32 %v2_100062ac, 17
  %v2_100062b4 = icmp ult i32 %v6_100062a0, %v1_100062b0
  br i1 %v2_100062b4, label %dec_label_pc_100062bc, label %dec_label_pc_10006340

dec_label_pc_100062bc:                            ; preds = %dec_label_pc_10006340, %dec_label_pc_10006288, %dec_label_pc_10006360, %dec_label_pc_10006270
  %v0_100062bc = load i32, i32* %r27.global-to-local, align 4
  %v3_100062bc = icmp eq i32 %v0_100062bc, 5
  br i1 %v3_100062bc, label %dec_label_pc_100062dc, label %dec_label_pc_100062c4

dec_label_pc_100062c4:                            ; preds = %dec_label_pc_100062cc, %dec_label_pc_100062bc
  %v0_100062c4 = phi i32 [ %v0_100062d4, %dec_label_pc_100062cc ], [ %v0_100062bc, %dec_label_pc_100062bc ]
  %v1_100062c4 = add i32 %v0_100062c4, 1
  store i32 %v1_100062c4, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10006184

dec_label_pc_100062cc:                            ; preds = %dec_label_pc_100061c0, %dec_label_pc_100061ac, %dec_label_pc_10006190
  store i32 268460756, i32* @lr, align 4
  %v1_100062d0 = call i32 @function_1000a498(i32 1)
  %v0_100062d4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100062d4 = icmp eq i32 %v0_100062d4, 5
  br i1 %v3_100062d4, label %dec_label_pc_100062dc, label %dec_label_pc_100062c4

dec_label_pc_100062dc:                            ; preds = %dec_label_pc_100062cc, %dec_label_pc_100062bc, %dec_label_pc_10006278, %dec_label_pc_10006220, %dec_label_pc_1000636c.backedge, %dec_label_pc_1000636c.preheader
  store i32 268460772, i32* @lr, align 4
  %v0_100062e0 = call i32 @function_10008c98()
  %v0_100062e4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100062e4 = inttoptr i32 %v0_100062e4 to i8*
  %v2_100062e4 = load i8, i8* %v1_100062e4, align 1
  %v3_100062e4 = zext i8 %v2_100062e4 to i32
  store i32 %v3_100062e4, i32* %r0.global-to-local, align 4
  %v3_100062e8 = icmp eq i8 %v2_100062e4, 0
  br i1 %v3_100062e8, label %dec_label_pc_10006458, label %dec_label_pc_100062f0

dec_label_pc_100062f0:                            ; preds = %dec_label_pc_100062dc, %dec_label_pc_10006468
  %v0_100062f4 = phi i32 [ %v0_100062e4, %dec_label_pc_100062dc ], [ 0, %dec_label_pc_10006468 ]
  store i32 %v0_10006028, i32* %r0.global-to-local, align 4
  %v1_10006308 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006000)
  store i32 %v0_10006048, i32* %r28.global-to-local, align 4
  store i32 %v0_10006008, i32* %r29.global-to-local, align 4
  ret i32 %v0_100062f4

dec_label_pc_10006340:                            ; preds = %dec_label_pc_10006288
  store i32 %v2_10006134, i32* %r26.global-to-local, align 4
  store i32 268460876, i32* @lr, align 4
  %v2_10006348 = call i32 @function_10008558(i8* %v1_10006348)
  %v3_1000634c = load i16, i16* %stack_var_-2108, align 2
  %v4_1000634c = sext i16 %v3_1000634c to i32
  store i32 %v4_1000634c, i32* %r0.global-to-local, align 4
  %v0_10006350 = load i32, i32* %r20.global-to-local, align 4
  %v1_10006354 = load i32, i32* %r22.global-to-local, align 4
  %v4_10006354 = icmp eq i32 %v4_1000634c, %v1_10006354
  %v2_10006350 = add i32 %v2_10006348, 5
  %v1_10006358 = add i32 %v2_10006350, %v0_10006350
  br i1 %v4_10006354, label %dec_label_pc_10006360, label %dec_label_pc_100062bc

dec_label_pc_10006360:                            ; preds = %dec_label_pc_10006340
  store i32 %v4_10006360, i32* %r28.global-to-local, align 4
  br i1 %v3_10006364, label %dec_label_pc_100062bc, label %dec_label_pc_1000636c.preheader

dec_label_pc_1000636c.preheader:                  ; preds = %dec_label_pc_10006360
  %v1_1000636c8 = add nsw i32 %v4_10006360, -1
  store i32 %v1_1000636c8, i32* %r0.global-to-local, align 4
  %v1_100063749 = urem i32 %v1_1000636c8, 65536
  store i32 %v1_100063749, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_1000637c11 = icmp eq i32 %v1_100063749, 65535
  br i1 %v4_1000637c11, label %dec_label_pc_100062dc, label %dec_label_pc_10006384

dec_label_pc_10006384:                            ; preds = %dec_label_pc_1000636c.preheader, %dec_label_pc_1000636c.backedge
  %v0_1000636c49 = phi i32 [ %v1_10006374, %dec_label_pc_1000636c.backedge ], [ %v1_100063749, %dec_label_pc_1000636c.preheader ]
  %v0_100063e0 = phi i32 [ %storemerge, %dec_label_pc_1000636c.backedge ], [ %v1_10006358, %dec_label_pc_1000636c.preheader ]
  store i32 %v0_100063e0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10006390110 = inttoptr i32 %v0_100063e0 to i8*
  %v2_10006390111 = load i8, i8* %v1_10006390110, align 1
  %v3_10006390112 = zext i8 %v2_10006390111 to i32
  store i32 %v3_10006390112, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10006398113 = icmp eq i8 %v2_10006390111, 0
  br i1 %v3_10006398113, label %dec_label_pc_100063dc, label %dec_label_pc_100063a8.preheader

dec_label_pc_100063a8.preheader:                  ; preds = %dec_label_pc_10006384, %dec_label_pc_10006478
  %v2_10006390119 = phi i8 [ %v2_10006390, %dec_label_pc_10006478 ], [ %v2_10006390111, %dec_label_pc_10006384 ]
  %v3_100063a0122.in = phi i8 [ %v2_10006390, %dec_label_pc_10006478 ], [ %v2_10006390111, %dec_label_pc_10006384 ]
  %v1_1000639c121.in = phi i32 [ %v3_10006390, %dec_label_pc_10006478 ], [ %v3_10006390112, %dec_label_pc_10006384 ]
  %v1_10006394120 = phi i32 [ %v1_10006394, %dec_label_pc_10006478 ], [ 1, %dec_label_pc_10006384 ]
  %v0_10006390118 = phi i32 [ %v1_1000647c, %dec_label_pc_10006478 ], [ %v0_100063e0, %dec_label_pc_10006384 ]
  %v0_10006394117 = phi i32 [ %v0_1000639428, %dec_label_pc_10006478 ], [ 0, %dec_label_pc_10006384 ]
  %v0_100063dc116 = phi i32 [ %v2_10006478, %dec_label_pc_10006478 ], [ 1, %dec_label_pc_10006384 ]
  br label %dec_label_pc_100063a8

dec_label_pc_100063a8:                            ; preds = %dec_label_pc_100063a8.preheader, %dec_label_pc_100063ac
  %v1_10006478 = phi i32 [ 0, %dec_label_pc_100063ac ], [ %v1_10006394120, %dec_label_pc_100063a8.preheader ]
  %v0_100063b8.in = phi i32 [ %v3_100063c8, %dec_label_pc_100063ac ], [ %v1_1000639c121.in, %dec_label_pc_100063a8.preheader ]
  %v0_1000647c = phi i32 [ %v2_100063c4, %dec_label_pc_100063ac ], [ %v0_10006390118, %dec_label_pc_100063a8.preheader ]
  %v0_100063a8.in = phi i8 [ %v2_100063c8, %dec_label_pc_100063ac ], [ %v3_100063a0122.in, %dec_label_pc_100063a8.preheader ]
  %v1_100063a8.in = phi i8 [ %v2_100063c8, %dec_label_pc_100063ac ], [ %v2_10006390119, %dec_label_pc_100063a8.preheader ]
  %v0_1000639428 = phi i32 [ 1, %dec_label_pc_100063ac ], [ %v0_10006394117, %dec_label_pc_100063a8.preheader ]
  %v0_100063a8 = icmp eq i8 %v0_100063a8.in, -65
  %v1_100063a8 = icmp ult i8 %v1_100063a8.in, -65
  %v2_100063a8 = or i1 %v0_100063a8, %v1_100063a8
  br i1 %v2_100063a8, label %dec_label_pc_10006478, label %dec_label_pc_100063ac

dec_label_pc_100063ac:                            ; preds = %dec_label_pc_100063a8
  %v0_100063b8 = mul nuw nsw i32 %v0_100063b8.in, 256
  %v1_100063ac = add i32 %v0_1000647c, 1
  %v2_100063ac = inttoptr i32 %v1_100063ac to i8*
  %v3_100063ac = load i8, i8* %v2_100063ac, align 1
  %v4_100063ac = zext i8 %v3_100063ac to i32
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100063b8 = or i32 %v4_100063ac, -49152
  %v1_100063c0 = add nsw i32 %v2_100063b8, %v0_100063b8
  %v0_100063c4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100063c4 = add i32 %v1_100063c0, %v0_100063c4
  store i32 %v2_100063c4, i32* %r9.global-to-local, align 4
  %v1_100063c8 = inttoptr i32 %v2_100063c4 to i8*
  %v2_100063c8 = load i8, i8* %v1_100063c8, align 1
  %v3_100063c8 = zext i8 %v2_100063c8 to i32
  store i32 %v3_100063c8, i32* %r0.global-to-local, align 4
  %v3_100063cc = icmp eq i8 %v2_100063c8, 0
  br i1 %v3_100063cc, label %dec_label_pc_100063dc, label %dec_label_pc_100063a8

dec_label_pc_100063dc:                            ; preds = %dec_label_pc_10006384, %dec_label_pc_10006478, %dec_label_pc_100063ac
  %v0_100063dc103 = phi i32 [ %v0_100063dc116, %dec_label_pc_100063ac ], [ 1, %dec_label_pc_10006384 ], [ %v2_10006478, %dec_label_pc_10006478 ]
  %v1_100063dc = phi i32 [ 1, %dec_label_pc_100063ac ], [ 0, %dec_label_pc_10006384 ], [ %v0_1000639428, %dec_label_pc_10006478 ]
  %v2_100063dc = add i32 %v1_100063dc, %v0_100063dc103
  store i32 %v2_100063dc, i32* %r10.global-to-local, align 4
  %v2_100063e0 = add i32 %v2_100063dc, %v0_100063e0
  %v3_100063e0 = inttoptr i32 %v2_100063e0 to i16*
  %v4_100063e0 = load i16, i16* %v3_100063e0, align 2
  %v5_100063e0 = zext i16 %v4_100063e0 to i32
  store i32 %v5_100063e0, i32* %r0.global-to-local, align 4
  %v1_100063e8 = add i32 %v2_100063e0, 10
  store i32 %v1_100063e8, i32* @r29, align 4
  %v3_100063ec = icmp eq i16 %v4_100063e0, 1
  br i1 %v3_100063ec, label %dec_label_pc_10006490, label %dec_label_pc_100063f4

dec_label_pc_100063f4:                            ; preds = %dec_label_pc_10006490, %dec_label_pc_100063dc
  store i32 %v1_100063e8, i32* %r9.global-to-local, align 4
  %v1_10006400124 = inttoptr i32 %v1_100063e8 to i8*
  %v2_10006400125 = load i8, i8* %v1_10006400124, align 1
  %v3_10006400126 = zext i8 %v2_10006400125 to i32
  store i32 %v3_10006400126, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10006408127 = icmp eq i8 %v2_10006400125, 0
  %v1_1000640c128 = mul nuw nsw i32 %v3_10006400126, 256
  store i32 %v1_1000640c128, i32* %r10.global-to-local, align 4
  br i1 %v3_10006408127, label %dec_label_pc_1000644c, label %dec_label_pc_10006418.preheader

dec_label_pc_10006418.preheader:                  ; preds = %dec_label_pc_100063f4, %dec_label_pc_10006484
  %v2_10006400133 = phi i8 [ %v2_10006400, %dec_label_pc_10006484 ], [ %v2_10006400125, %dec_label_pc_100063f4 ]
  %v3_10006410136.in = phi i8 [ %v2_10006400, %dec_label_pc_10006484 ], [ %v2_10006400125, %dec_label_pc_100063f4 ]
  %v1_1000640c135 = phi i32 [ %v1_1000640c, %dec_label_pc_10006484 ], [ %v1_1000640c128, %dec_label_pc_100063f4 ]
  %v1_10006404134 = phi i32 [ %v1_10006404, %dec_label_pc_10006484 ], [ 1, %dec_label_pc_100063f4 ]
  %v0_10006400132 = phi i32 [ %v1_10006488, %dec_label_pc_10006484 ], [ %v1_100063e8, %dec_label_pc_100063f4 ]
  %v0_10006404131 = phi i32 [ %v0_1000640438, %dec_label_pc_10006484 ], [ 0, %dec_label_pc_100063f4 ]
  %v0_1000644c130 = phi i32 [ %v2_10006484, %dec_label_pc_10006484 ], [ 1, %dec_label_pc_100063f4 ]
  br label %dec_label_pc_10006418

dec_label_pc_10006418:                            ; preds = %dec_label_pc_10006418.preheader, %dec_label_pc_1000641c
  %v1_10006484 = phi i32 [ 0, %dec_label_pc_1000641c ], [ %v1_10006404134, %dec_label_pc_10006418.preheader ]
  %v0_10006428 = phi i32 [ %v1_10006440, %dec_label_pc_1000641c ], [ %v1_1000640c135, %dec_label_pc_10006418.preheader ]
  %v0_10006488 = phi i32 [ %v2_10006434, %dec_label_pc_1000641c ], [ %v0_10006400132, %dec_label_pc_10006418.preheader ]
  %v0_10006418.in = phi i8 [ %v2_10006438, %dec_label_pc_1000641c ], [ %v3_10006410136.in, %dec_label_pc_10006418.preheader ]
  %v1_10006418.in = phi i8 [ %v2_10006438, %dec_label_pc_1000641c ], [ %v2_10006400133, %dec_label_pc_10006418.preheader ]
  %v0_1000640438 = phi i32 [ 1, %dec_label_pc_1000641c ], [ %v0_10006404131, %dec_label_pc_10006418.preheader ]
  %v0_10006418 = icmp eq i8 %v0_10006418.in, -65
  %v1_10006418 = icmp ult i8 %v1_10006418.in, -65
  %v2_10006418 = or i1 %v0_10006418, %v1_10006418
  br i1 %v2_10006418, label %dec_label_pc_10006484, label %dec_label_pc_1000641c

dec_label_pc_1000641c:                            ; preds = %dec_label_pc_10006418
  %v1_1000641c = add i32 %v0_10006488, 1
  %v2_1000641c = inttoptr i32 %v1_1000641c to i8*
  %v3_1000641c = load i8, i8* %v2_1000641c, align 1
  %v4_1000641c = zext i8 %v3_1000641c to i32
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10006428 = or i32 %v4_1000641c, -49152
  %v1_10006430 = add nsw i32 %v2_10006428, %v0_10006428
  %v0_10006434 = load i32, i32* %r19.global-to-local, align 4
  %v2_10006434 = add i32 %v1_10006430, %v0_10006434
  store i32 %v2_10006434, i32* %r9.global-to-local, align 4
  %v1_10006438 = inttoptr i32 %v2_10006434 to i8*
  %v2_10006438 = load i8, i8* %v1_10006438, align 1
  %v3_10006438 = zext i8 %v2_10006438 to i32
  store i32 %v3_10006438, i32* %r0.global-to-local, align 4
  %v3_1000643c = icmp eq i8 %v2_10006438, 0
  %v1_10006440 = mul nuw nsw i32 %v3_10006438, 256
  store i32 %v1_10006440, i32* %r10.global-to-local, align 4
  br i1 %v3_1000643c, label %dec_label_pc_1000644c, label %dec_label_pc_10006418

dec_label_pc_1000644c:                            ; preds = %dec_label_pc_100063f4, %dec_label_pc_10006484, %dec_label_pc_1000641c
  %v0_1000644c109 = phi i32 [ %v0_1000644c130, %dec_label_pc_1000641c ], [ 1, %dec_label_pc_100063f4 ], [ %v2_10006484, %dec_label_pc_10006484 ]
  %v1_1000644c = phi i32 [ 1, %dec_label_pc_1000641c ], [ 0, %dec_label_pc_100063f4 ], [ %v0_1000640438, %dec_label_pc_10006484 ]
  %v2_1000644c = add i32 %v1_1000644c, %v0_1000644c109
  %v2_10006450 = add i32 %v2_1000644c, %v1_100063e8
  br label %dec_label_pc_1000636c.backedge

dec_label_pc_1000636c.backedge:                   ; preds = %dec_label_pc_1000644c, %dec_label_pc_100064fc
  %v0_1000636c = phi i32 [ %v0_1000636c49, %dec_label_pc_1000644c ], [ %v0_1000636c.pre, %dec_label_pc_100064fc ]
  %storemerge = phi i32 [ %v2_10006450, %dec_label_pc_1000644c ], [ %v2_10006500, %dec_label_pc_100064fc ]
  %v1_1000636c = add i32 %v0_1000636c, -1
  store i32 %v1_1000636c, i32* %r0.global-to-local, align 4
  %v1_10006374 = urem i32 %v1_1000636c, 65536
  store i32 %v1_10006374, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_1000637c = icmp eq i32 %v1_10006374, 65535
  br i1 %v4_1000637c, label %dec_label_pc_100062dc, label %dec_label_pc_10006384

dec_label_pc_10006458:                            ; preds = %dec_label_pc_100062dc
  %v1_10006458 = add i32 %v0_100062e4, 4
  %v2_10006458 = inttoptr i32 %v1_10006458 to i32*
  %v3_10006458 = load i32, i32* %v2_10006458, align 4
  store i32 %v3_10006458, i32* @r3, align 4
  %v3_1000645c = icmp eq i32 %v3_10006458, 0
  br i1 %v3_1000645c, label %dec_label_pc_10006468, label %dec_label_pc_10006464

dec_label_pc_10006464:                            ; preds = %dec_label_pc_10006458
  store i32 268461160, i32* @lr, align 4
  %v0_10006464 = call i32 @function_10009d6c()
  %v0_10006468.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_10006468

dec_label_pc_10006468:                            ; preds = %dec_label_pc_10006458, %dec_label_pc_10006464
  %v0_10006468 = phi i32 [ %v0_100062e4, %dec_label_pc_10006458 ], [ %v0_10006468.pre, %dec_label_pc_10006464 ]
  store i32 %v0_10006468, i32* @r3, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268461172, i32* @lr, align 4
  %v0_10006470 = call i32 @function_10009d6c()
  br label %dec_label_pc_100062f0

dec_label_pc_10006478:                            ; preds = %dec_label_pc_100063a8
  %v2_10006478 = add i32 %v1_10006478, %v0_100063dc116
  store i32 %v2_10006478, i32* %r10.global-to-local, align 4
  %v1_1000647c = add i32 %v0_1000647c, 1
  store i32 %v1_1000647c, i32* %r9.global-to-local, align 4
  %v1_10006390 = inttoptr i32 %v1_1000647c to i8*
  %v2_10006390 = load i8, i8* %v1_10006390, align 1
  %v3_10006390 = zext i8 %v2_10006390 to i32
  store i32 %v3_10006390, i32* %r0.global-to-local, align 4
  %v1_10006394 = xor i32 %v0_1000639428, 1
  store i32 %v1_10006394, i32* %r11.global-to-local, align 4
  %v3_10006398 = icmp eq i8 %v2_10006390, 0
  br i1 %v3_10006398, label %dec_label_pc_100063dc, label %dec_label_pc_100063a8.preheader

dec_label_pc_10006484:                            ; preds = %dec_label_pc_10006418
  %v2_10006484 = add i32 %v1_10006484, %v0_1000644c130
  %v1_10006488 = add i32 %v0_10006488, 1
  store i32 %v1_10006488, i32* %r9.global-to-local, align 4
  %v1_10006400 = inttoptr i32 %v1_10006488 to i8*
  %v2_10006400 = load i8, i8* %v1_10006400, align 1
  %v3_10006400 = zext i8 %v2_10006400 to i32
  store i32 %v3_10006400, i32* %r0.global-to-local, align 4
  %v1_10006404 = xor i32 %v0_1000640438, 1
  store i32 %v1_10006404, i32* %r11.global-to-local, align 4
  %v3_10006408 = icmp eq i8 %v2_10006400, 0
  %v1_1000640c = mul nuw nsw i32 %v3_10006400, 256
  store i32 %v1_1000640c, i32* %r10.global-to-local, align 4
  br i1 %v3_10006408, label %dec_label_pc_1000644c, label %dec_label_pc_10006418.preheader

dec_label_pc_10006490:                            ; preds = %dec_label_pc_100063dc
  %v1_10006490 = add i32 %v2_100063e0, 2
  %v2_10006490 = inttoptr i32 %v1_10006490 to i16*
  %v3_10006490 = load i16, i16* %v2_10006490, align 2
  %v4_10006490 = zext i16 %v3_10006490 to i32
  store i32 %v4_10006490, i32* %r0.global-to-local, align 4
  %v3_10006494 = icmp eq i16 %v3_10006490, 1
  br i1 %v3_10006494, label %dec_label_pc_1000649c, label %dec_label_pc_100063f4

dec_label_pc_1000649c:                            ; preds = %dec_label_pc_10006490
  %v1_1000649c = add i32 %v2_100063e0, 8
  %v2_1000649c = inttoptr i32 %v1_1000649c to i16*
  %v3_1000649c = load i16, i16* %v2_1000649c, align 2
  %v4_1000649c = zext i16 %v3_1000649c to i32
  store i32 %v4_1000649c, i32* %r0.global-to-local, align 4
  %v3_100064a0 = icmp eq i16 %v3_1000649c, 4
  br i1 %v3_100064a0, label %dec_label_pc_100064a8, label %dec_label_pc_100064fc

dec_label_pc_100064a8:                            ; preds = %dec_label_pc_1000649c
  %v2_100064a8 = inttoptr i32 %v1_100063e8 to i8*
  %v3_100064a8 = load i8, i8* %v2_100064a8, align 1
  %v4_100064a8 = zext i8 %v3_100064a8 to i32
  store i32 %v4_100064a8, i32* %r0.global-to-local, align 4
  store i32 %v4_100064a8, i32* %stack_var_-4312, align 4
  %v1_100064b0 = add i32 %v2_100063e0, 11
  %v2_100064b0 = inttoptr i32 %v1_100064b0 to i8*
  %v3_100064b0 = load i8, i8* %v2_100064b0, align 1
  %v4_100064b0 = zext i8 %v3_100064b0 to i32
  store i32 %v4_100064b0, i32* %r9.global-to-local, align 4
  %v1_100064b8 = add i32 %v2_100063e0, 12
  %v2_100064b8 = inttoptr i32 %v1_100064b8 to i8*
  %v3_100064b8 = load i8, i8* %v2_100064b8, align 1
  %v4_100064b8 = zext i8 %v3_100064b8 to i32
  store i32 %v4_100064b8, i32* %r0.global-to-local, align 4
  %v1_100064c0 = add i32 %v2_100063e0, 13
  %v2_100064c0 = inttoptr i32 %v1_100064c0 to i8*
  %v3_100064c0 = load i8, i8* %v2_100064c0, align 1
  %v4_100064c0 = zext i8 %v3_100064c0 to i32
  store i32 %v4_100064c0, i32* %r9.global-to-local, align 4
  %v0_100064c8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100064c8 = inttoptr i32 %v0_100064c8 to i8*
  %v2_100064c8 = load i8, i8* %v1_100064c8, align 1
  %v3_100064c8 = zext i8 %v2_100064c8 to i32
  %v1_100064cc = add i32 %v0_100064c8, 4
  %v2_100064cc = inttoptr i32 %v1_100064cc to i32*
  %v3_100064cc = load i32, i32* %v2_100064cc, align 4
  %v1_100064d0 = mul nuw nsw i32 %v3_100064c8, 4
  %v1_100064d4 = add nuw nsw i32 %v1_100064d0, 4
  store i32 268461276, i32* @lr, align 4
  %v3_100064d8 = sext i8 %v3_100064c0 to i32
  %v4_100064d8 = call i32 @function_10009e6c(i32 %v3_100064cc, i32 %v1_100064d4, i32 %v3_100064d8)
  %v0_100064dc = load i32, i32* %r25.global-to-local, align 4
  %v1_100064dc = inttoptr i32 %v0_100064dc to i8*
  %v2_100064dc = load i8, i8* %v1_100064dc, align 1
  %v3_100064dc = zext i8 %v2_100064dc to i32
  %v3_100064e0 = load i32, i32* %stack_var_-4312, align 4
  store i32 %v3_100064e0, i32* %r0.global-to-local, align 4
  %v1_100064e4 = add nuw nsw i32 %v3_100064dc, 1
  store i32 %v1_100064e4, i32* %r11.global-to-local, align 4
  %v1_100064e8 = mul nuw nsw i32 %v3_100064dc, 4
  store i32 %v1_100064e8, i32* %r9.global-to-local, align 4
  %v3_100064ec = add i32 %v1_100064e8, %v4_100064d8
  %v4_100064ec = inttoptr i32 %v3_100064ec to i32*
  store i32 %v3_100064e0, i32* %v4_100064ec, align 4
  %v0_100064f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100064f0 = trunc i32 %v0_100064f0 to i8
  %v2_100064f0 = load i32, i32* %r25.global-to-local, align 4
  %v3_100064f0 = inttoptr i32 %v2_100064f0 to i8*
  store i8 %v1_100064f0, i8* %v3_100064f0, align 1
  %v1_100064f4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100064f4 = add i32 %v1_100064f4, 4
  %v3_100064f4 = inttoptr i32 %v2_100064f4 to i32*
  store i32 %v4_100064d8, i32* %v3_100064f4, align 4
  %v0_100064f8 = load i32, i32* @r31, align 4
  %v1_100064f8 = add i32 %v0_100064f8, 8
  %v2_100064f8 = inttoptr i32 %v1_100064f8 to i16*
  %v3_100064f8 = load i16, i16* %v2_100064f8, align 2
  %v4_100064f8 = zext i16 %v3_100064f8 to i32
  store i32 %v4_100064f8, i32* %r0.global-to-local, align 4
  %v0_10006500.pre = load i32, i32* @r29, align 4
  %v0_1000636c.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100064fc

dec_label_pc_100064fc:                            ; preds = %dec_label_pc_1000649c, %dec_label_pc_100064a8
  %v0_1000636c.pre = phi i32 [ %v0_1000636c49, %dec_label_pc_1000649c ], [ %v0_1000636c.pre.pre, %dec_label_pc_100064a8 ]
  %v0_10006500 = phi i32 [ %v1_100063e8, %dec_label_pc_1000649c ], [ %v0_10006500.pre, %dec_label_pc_100064a8 ]
  %v0_100064fc = phi i32 [ %v4_1000649c, %dec_label_pc_1000649c ], [ %v4_100064f8, %dec_label_pc_100064a8 ]
  store i32 %v0_100064fc, i32* %r0.global-to-local, align 4
  %v2_10006500 = add i32 %v0_100064fc, %v0_10006500
  br label %dec_label_pc_1000636c.backedge

dec_label_pc_1000609c.preheader.thread:           ; preds = %dec_label_pc_10005ff8
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000609c1355 = or i32 %v2_10006064, 1
  store i32 %v1_1000609c1355, i32* %r11.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100060cc

; uselistorder directives
  uselistorder i32 %v1_100064e8, { 1, 0 }
  uselistorder i32 %v4_100064d8, { 1, 0 }
  uselistorder i32 %v1_10006404, { 1, 0 }
  uselistorder i8 %v2_10006400, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006488, { 1, 2, 0 }
  uselistorder i32 %v2_10006484, { 1, 0 }
  uselistorder i32 %v1_10006394, { 1, 0 }
  uselistorder i32 %v3_10006390, { 1, 0 }
  uselistorder i8 %v2_10006390, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000647c, { 1, 2, 0 }
  uselistorder i32 %v2_10006478, { 2, 1, 0 }
  uselistorder i32 %v1_10006374, { 1, 0, 2 }
  uselistorder i8 %v2_10006438, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10006434, { 1, 2, 0 }
  uselistorder i32 %v0_1000640438, { 2, 0, 1 }
  uselistorder i32 %v0_1000644c130, { 1, 0 }
  uselistorder i32 %v1_1000640c128, { 1, 0 }
  uselistorder i32 %v1_100063e8, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %v3_100063c8, { 1, 0 }
  uselistorder i8 %v2_100063c8, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100063c4, { 1, 2, 0 }
  uselistorder i32 %v0_1000639428, { 2, 0, 1 }
  uselistorder i32 %v0_100063dc116, { 1, 0 }
  uselistorder i32 %v0_100063e0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_100063749, { 2, 1, 0 }
  uselistorder i32 %v0_100062e4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_100062d4, { 1, 0 }
  uselistorder i32 %v1_10006280, { 1, 0 }
  uselistorder i32 %v4_1000627c, { 1, 0 }
  uselistorder i32 %v1_1000627c, { 1, 2, 0 }
  uselistorder i32 %v3_10006278, { 2, 1, 0 }
  uselistorder i32 %v1_1000622c, { 1, 0 }
  uselistorder i32 %v0_1000622c, { 1, 0 }
  uselistorder i32 %v1_1000621c, { 1, 0 }
  uselistorder i32 %v1_10006218, { 1, 0 }
  uselistorder i8 %v2_100060a4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_100060a0, { 1, 0 }
  uselistorder i32 %v0_10006098, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10006068, { 0, 2, 1 }
  uselistorder i32 %v2_10006064, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_10006000, { 1, 0 }
  uselistorder i16* %stack_var_-2108, { 1, 0 }
  uselistorder i16 %tmp60, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7, 9, 22, 10, 11, 15, 12, 20, 21, 13, 14, 16, 17, 19, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 2, 3, 5, 4, 0, 1, 6, 7 }
  uselistorder i32* %r11.global-to-local, { 9, 0, 1, 3, 5, 2, 13, 4, 12, 6, 7, 8, 14, 11, 10, 15 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7, 9, 12, 13, 8, 29, 10, 11, 28, 30, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 8, 9, 5 }
  uselistorder i8 -65, { 2, 0, 3, 1 }
  uselistorder i32 65535, { 52, 53, 19, 20, 54, 55, 9, 8, 7, 56, 57, 21, 22, 23, 10, 11, 58, 24, 59, 25, 60, 0, 12, 61, 62, 26, 27, 28, 63, 64, 65, 66, 67, 68, 29, 30, 1, 13, 69, 70, 31, 32, 33, 34, 2, 14, 71, 72, 35, 36, 37, 38, 39, 73, 15, 40, 41, 74, 16, 42, 43, 75, 76, 77, 78, 79, 80, 44, 45, 3, 17, 81, 82, 5, 46, 47, 48, 4, 18, 83, 84, 6, 49, 50, 51 }
  uselistorder i32 (i32)* @function_1000a498, { 9, 3, 2, 1, 10, 8, 7, 6, 5, 4, 0 }
  uselistorder i16 1, { 2, 3, 0, 1, 4 }
  uselistorder i32 53, { 1, 0 }
  uselistorder label %dec_label_pc_100064fc, { 1, 0 }
  uselistorder label %dec_label_pc_10006468, { 1, 0 }
  uselistorder label %dec_label_pc_1000636c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000644c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006418, { 1, 0 }
  uselistorder label %dec_label_pc_10006418.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100063dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100063a8, { 1, 0 }
  uselistorder label %dec_label_pc_100063a8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006384, { 1, 0 }
  uselistorder label %dec_label_pc_100062f0, { 1, 0 }
  uselistorder label %dec_label_pc_100062dc, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_100062bc, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10006214.dec_label_pc_10006214_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006190, { 1, 0 }
  uselistorder label %dec_label_pc_100060cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100060a4, { 1, 0 }
}

define i32 @function_10006514(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006514:
  %v3_10006528 = load i32, i32* @global_var_1001bd98.110, align 4
  store i32 268461360, i32* @lr, align 4
  %v2_1000652c = call i32 @function_10008db8(i32 %v3_10006528, i32 9)
  ret i32 %v2_1000652c
}

define i32 @function_10006540() local_unnamed_addr {
dec_label_pc_10006540:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10006548 = load i32, i32* @r31, align 4
  %v0_1000654c = load i32, i32* @r3, align 4
  store i32 %v0_1000654c, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_1000655c = add i32 %v0_1000654c, 4
  %v2_1000655c = inttoptr i32 %v1_1000655c to i32*
  %v3_1000655c = load i32, i32* %v2_1000655c, align 4
  %v3_10006564 = icmp eq i32 %v3_1000655c, -1
  br i1 %v3_10006564, label %dec_label_pc_1000657c, label %dec_label_pc_10006578

dec_label_pc_10006578:                            ; preds = %dec_label_pc_10006540
  store i32 268461436, i32* @lr, align 4
  %v0_10006578 = call i32 @function_10008c98()
  br label %dec_label_pc_1000657c

dec_label_pc_1000657c:                            ; preds = %dec_label_pc_10006540, %dec_label_pc_10006578
  store i32 268461452, i32* @lr, align 4
  %v3_10006588 = call i32 @function_100099a0(i32 2, i32 1, i32 0)
  store i32 356, i32* @r4, align 4
  %v0_10006594 = load i32, i32* @r31, align 4
  %v1_10006594 = add i32 %v0_10006594, 28
  store i32 %v1_10006594, i32* @r3, align 4
  %v3_10006598 = icmp eq i32 %v3_10006588, -1
  %v2_1000659c = add i32 %v0_10006594, 4
  %v3_1000659c = inttoptr i32 %v2_1000659c to i32*
  store i32 %v3_10006588, i32* %v3_1000659c, align 4
  br i1 %v3_10006598, label %dec_label_pc_1000657c.dec_label_pc_10006614_crit_edge, label %dec_label_pc_100065a4

dec_label_pc_1000657c.dec_label_pc_10006614_crit_edge: ; preds = %dec_label_pc_1000657c
  %v0_10006628.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006614

dec_label_pc_100065a4:                            ; preds = %dec_label_pc_1000657c
  %v0_100065a4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100065a4 = load i32, i32* @r31, align 4
  %v2_100065a4 = add i32 %v1_100065a4, 24
  %v3_100065a4 = inttoptr i32 %v2_100065a4 to i32*
  store i32 %v0_100065a4, i32* %v3_100065a4, align 4
  store i32 268461484, i32* @lr, align 4
  %v0_100065a8 = call i32 @function_10008600()
  %v0_100065ac = load i32, i32* @r31, align 4
  %v1_100065ac = add i32 %v0_100065ac, 4
  %v2_100065ac = inttoptr i32 %v1_100065ac to i32*
  %v3_100065ac = load i32, i32* %v2_100065ac, align 4
  store i32 %v3_100065ac, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268461508, i32* @lr, align 4
  %v2_100065c0 = call i32 @function_10008bb0(i32 %v3_100065ac)
  store i32 4, i32* @r4, align 4
  store i32 268461528, i32* @lr, align 4
  %v2_100065d4 = call i32 @function_10008bb0(i32 %v3_100065ac)
  %v3_100065dc = load i32, i32* @global_var_1001bd8c.111, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_100065e4 = load i32, i32* @r31, align 4
  %v2_100065ec = add i32 %v0_100065e4, 8
  %v3_100065ec = inttoptr i32 %v2_100065ec to i32*
  store i32 %v3_100065dc, i32* %v3_100065ec, align 4
  %v0_100065f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100065f4 = load i32, i32* @r31, align 4
  %v2_100065f4 = add i32 %v1_100065f4, 12
  %v3_100065f4 = inttoptr i32 %v2_100065f4 to i32*
  store i32 %v0_100065f4, i32* %v3_100065f4, align 4
  %v0_100065fc = load i32, i32* @r31, align 4
  %v1_100065fc = add i32 %v0_100065fc, 4
  %v2_100065fc = inttoptr i32 %v1_100065fc to i32*
  %v3_100065fc = load i32, i32* %v2_100065fc, align 4
  store i32 %v3_100065fc, i32* @r3, align 4
  %v1_10006600 = add i32 %v0_100065fc, 16
  %v2_10006600 = inttoptr i32 %v1_10006600 to i32*
  %v3_10006600 = load i32, i32* %v2_10006600, align 4
  store i32 %v3_10006600, i32* %r9.global-to-local, align 4
  store i32 268461588, i32* @lr, align 4
  %v0_10006610 = call i32 @function_100097a0()
  br label %dec_label_pc_10006614

dec_label_pc_10006614:                            ; preds = %dec_label_pc_1000657c.dec_label_pc_10006614_crit_edge, %dec_label_pc_100065a4
  %v0_10006628 = phi i32 [ %v0_10006628.pre, %dec_label_pc_1000657c.dec_label_pc_10006614_crit_edge ], [ %v0_10006610, %dec_label_pc_100065a4 ]
  store i32 %v0_10006548, i32* @r31, align 4
  ret i32 %v0_10006628

; uselistorder directives
  uselistorder i32 ()* @function_10008600, { 8, 4, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10006614, { 1, 0 }
  uselistorder label %dec_label_pc_1000657c, { 1, 0 }
}

define i32 @function_1000662c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000662c:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10006630 = load i32, i32* @lr, align 4
  store i32 %v0_10006630, i32* %r0.global-to-local, align 4
  %v3_1000663c = load i32, i32* @global_var_1001bd80.112, align 4
  %v1_10006648 = mul i32 %v3_1000663c, 16
  store i32 %v1_10006648, i32* %r9.global-to-local, align 4
  %v0_1000664c = load i32, i32* @r28, align 4
  %v3_10006654 = load i32, i32* @global_var_1001bd84.113, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_10006660 = add i32 %v1_10006648, 16
  %v0_10006678 = load i32, i32* @r29, align 4
  %v0_1000667c = load i32, i32* @r30, align 4
  store i32 268461704, i32* @lr, align 4
  %v3_10006684 = call i32 @function_10009e6c(i32 %v3_10006654, i32 %v1_10006660, i32 %v1_10006648)
  store i32 %v3_10006684, i32* %r25.global-to-local, align 4
  %v0_1000668c = load i32, i32* @r28, align 4
  store i32 %v3_10006684, i32* @global_var_1001bd84.113, align 4
  %v3_10006694 = load i32, i32* @global_var_1001bd80.112, align 4
  store i32 %v3_10006694, i32* %r24.global-to-local, align 4
  store i32 268461724, i32* @lr, align 4
  %v1_10006698 = inttoptr i32 %v0_1000668c to i8*
  %v2_10006698 = call i32 @function_10008558(i8* %v1_10006698)
  %sext = mul i32 %v2_10006698, 16777216
  %v1_1000669c = sdiv i32 %sext, 16777216
  %v2_1000669c = add nsw i32 %v1_1000669c, 1
  store i32 %v2_1000669c, i32* @r29, align 4
  store i32 %v1_1000669c, i32* @r30, align 4
  store i32 %v2_1000669c, i32* @r3, align 4
  store i32 268461740, i32* @lr, align 4
  %v0_100066a8 = call i32 @function_10009ba4()
  %v0_100066ac = load i32, i32* @r28, align 4
  %v0_100066b0 = load i32, i32* @r29, align 4
  store i32 %v0_100066a8, i32* %r31.global-to-local, align 4
  store i32 268461756, i32* @lr, align 4
  %v3_100066b8 = call i32 @function_100085dc(i32 %v0_100066ac, i32 %v0_100066b0, i32 %v0_100066b0)
  %v0_100066bc = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_100066bc, 1
  %extract.t6 = trunc i32 %v0_100066bc to i8
  br i1 %tmp21, label %dec_label_pc_100066e0, label %dec_label_pc_100066c4

dec_label_pc_100066c4:                            ; preds = %dec_label_pc_1000662c
  store i32 %v0_100066bc, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100066cc

dec_label_pc_100066cc:                            ; preds = %dec_label_pc_100066cc, %dec_label_pc_100066c4
  %v1_100066d4 = phi i32 [ %v1_100066d8, %dec_label_pc_100066cc ], [ 0, %dec_label_pc_100066c4 ]
  %v1_100066cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100066cc = add i32 %v1_100066cc, %v1_100066d4
  %v3_100066cc = inttoptr i32 %v2_100066cc to i8*
  %v4_100066cc = load i8, i8* %v3_100066cc, align 1
  %v5_100066cc = zext i8 %v4_100066cc to i32
  %v1_100066d0 = xor i32 %v5_100066cc, 84
  store i32 %v1_100066d0, i32* %r0.global-to-local, align 4
  %v3_100066d4 = trunc i32 %v1_100066d0 to i8
  store i8 %v3_100066d4, i8* %v3_100066cc, align 1
  %v0_100066d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100066d8 = add i32 %v0_100066d8, 1
  store i32 %v1_100066d8, i32* %r9.global-to-local, align 4
  %v0_100066dc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100066dc = add i32 %v0_100066dc, -1
  store i32 %v1_100066dc, i32* %ctr.global-to-local, align 4
  %v2_100066dc = icmp eq i32 %v1_100066dc, 0
  br i1 %v2_100066dc, label %dec_label_pc_100066e0.loopexit, label %dec_label_pc_100066cc

dec_label_pc_100066e0.loopexit:                   ; preds = %dec_label_pc_100066cc
  %v0_100066f8.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_100066f8.pre to i8
  br label %dec_label_pc_100066e0

dec_label_pc_100066e0:                            ; preds = %dec_label_pc_100066e0.loopexit, %dec_label_pc_1000662c
  %v0_100066f8.off0 = phi i8 [ %extract.t, %dec_label_pc_100066e0.loopexit ], [ %extract.t6, %dec_label_pc_1000662c ]
  %v3_100066e0 = load i32, i32* @global_var_1001bd80.112, align 4
  %v0_100066e4 = load i32, i32* %r23.global-to-local, align 4
  %v3_100066e8 = load i32, i32* @global_var_1001bd84.113, align 4
  %v1_100066ec = mul i32 %v3_100066e0, 16
  %v2_100066f0 = add i32 %v3_100066e8, %v1_100066ec
  store i32 %v2_100066f0, i32* %r9.global-to-local, align 4
  %v0_100066f4 = load i32, i32* %r24.global-to-local, align 4
  %v1_100066f4 = mul i32 %v0_100066f4, 16
  store i32 %v1_100066f4, i32* %r0.global-to-local, align 4
  %v3_100066f8 = add i32 %v2_100066f0, 12
  %v4_100066f8 = inttoptr i32 %v3_100066f8 to i8*
  store i8 %v0_100066f8.off0, i8* %v4_100066f8, align 1
  %v0_100066fc = load i32, i32* %r31.global-to-local, align 4
  %v1_100066fc = load i32, i32* %r25.global-to-local, align 4
  %v2_100066fc = load i32, i32* %r0.global-to-local, align 4
  %v3_100066fc = add i32 %v2_100066fc, %v1_100066fc
  %v4_100066fc = inttoptr i32 %v3_100066fc to i32*
  store i32 %v0_100066fc, i32* %v4_100066fc, align 4
  %v3_10006700 = load i32, i32* @global_var_1001bd80.112, align 4
  store i32 %v3_10006700, i32* @r30, align 4
  %v3_10006704 = load i32, i32* @global_var_1001bd84.113, align 4
  store i32 %v3_10006704, i32* %r25.global-to-local, align 4
  store i32 268461836, i32* @lr, align 4
  %v1_10006708 = inttoptr i32 %v0_100066e4 to i8*
  %v2_10006708 = call i32 @function_10008558(i8* %v1_10006708)
  %sext1 = mul i32 %v2_10006708, 16777216
  %v1_1000670c = sdiv i32 %sext1, 16777216
  %v2_1000670c = add nsw i32 %v1_1000670c, 1
  store i32 %v2_1000670c, i32* @r29, align 4
  store i32 %v1_1000670c, i32* @r28, align 4
  store i32 %v2_1000670c, i32* @r3, align 4
  store i32 268461852, i32* @lr, align 4
  %v0_10006718 = call i32 @function_10009ba4()
  %v0_1000671c = load i32, i32* %r23.global-to-local, align 4
  %v0_10006720 = load i32, i32* @r29, align 4
  store i32 %v0_10006718, i32* %r31.global-to-local, align 4
  store i32 268461868, i32* @lr, align 4
  %v3_10006728 = call i32 @function_100085dc(i32 %v0_1000671c, i32 %v0_10006720, i32 %v0_10006720)
  %v0_1000672c = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_1000672c, 1
  %extract.t8 = trunc i32 %v0_1000672c to i8
  br i1 %tmp22, label %dec_label_pc_10006750, label %dec_label_pc_10006734

dec_label_pc_10006734:                            ; preds = %dec_label_pc_100066e0
  store i32 %v0_1000672c, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000673c

dec_label_pc_1000673c:                            ; preds = %dec_label_pc_1000673c, %dec_label_pc_10006734
  %v1_10006744 = phi i32 [ %v1_10006748, %dec_label_pc_1000673c ], [ 0, %dec_label_pc_10006734 ]
  %v1_1000673c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000673c = add i32 %v1_1000673c, %v1_10006744
  %v3_1000673c = inttoptr i32 %v2_1000673c to i8*
  %v4_1000673c = load i8, i8* %v3_1000673c, align 1
  %v5_1000673c = zext i8 %v4_1000673c to i32
  %v1_10006740 = xor i32 %v5_1000673c, 84
  store i32 %v1_10006740, i32* %r0.global-to-local, align 4
  %v3_10006744 = trunc i32 %v1_10006740 to i8
  store i8 %v3_10006744, i8* %v3_1000673c, align 1
  %v0_10006748 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006748 = add i32 %v0_10006748, 1
  store i32 %v1_10006748, i32* %r9.global-to-local, align 4
  %v0_1000674c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000674c = add i32 %v0_1000674c, -1
  store i32 %v1_1000674c, i32* %ctr.global-to-local, align 4
  %v2_1000674c = icmp eq i32 %v1_1000674c, 0
  br i1 %v2_1000674c, label %dec_label_pc_10006750.loopexit, label %dec_label_pc_1000673c

dec_label_pc_10006750.loopexit:                   ; preds = %dec_label_pc_1000673c
  %v0_10006764.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_10006764.pre to i8
  br label %dec_label_pc_10006750

dec_label_pc_10006750:                            ; preds = %dec_label_pc_10006750.loopexit, %dec_label_pc_100066e0
  %v0_10006764.off0 = phi i8 [ %extract.t7, %dec_label_pc_10006750.loopexit ], [ %extract.t8, %dec_label_pc_100066e0 ]
  %v3_10006750 = load i32, i32* @global_var_1001bd80.112, align 4
  %v3_10006758 = load i32, i32* @global_var_1001bd84.113, align 4
  %v1_1000675c = mul i32 %v3_10006750, 16
  %v2_10006760 = or i32 %v1_1000675c, 13
  %v3_10006764 = add i32 %v2_10006760, %v3_10006758
  %v4_10006764 = inttoptr i32 %v3_10006764 to i8*
  store i8 %v0_10006764.off0, i8* %v4_10006764, align 1
  %v0_10006768 = load i32, i32* @r30, align 4
  %v1_10006768 = mul i32 %v0_10006768, 16
  %v1_1000676c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000676c = add i32 %v1_1000676c, %v1_10006768
  store i32 %v2_1000676c, i32* %r9.global-to-local, align 4
  %v3_10006770 = load i32, i32* @global_var_1001bd80.112, align 4
  %v3_10006774 = load i32, i32* @global_var_1001bd84.113, align 4
  %v1_10006778 = mul i32 %v3_10006770, 16
  %v3_1000677c = load i16, i16* @global_var_1001bd88.114, align 2
  %v4_1000677c = zext i16 %v3_1000677c to i32
  store i32 %v4_1000677c, i32* %r7.global-to-local, align 4
  %v2_10006780 = add i32 %v3_10006774, %v1_10006778
  store i32 %v2_10006780, i32* %r11.global-to-local, align 4
  store i32 %v0_10006630, i32* %r0.global-to-local, align 4
  %v1_10006788 = add i32 %v3_10006770, 1
  store i32 %v1_10006788, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001bd88.114 to i32), i32* %r8.global-to-local, align 4
  %v0_10006790 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006790 = add i32 %v2_1000676c, 4
  %v3_10006790 = inttoptr i32 %v2_10006790 to i32*
  store i32 %v0_10006790, i32* %v3_10006790, align 4
  %v0_10006798 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006798, i32* @global_var_1001bd80.112, align 4
  store i32 %v0_1000664c, i32* @r28, align 4
  store i32 %v0_10006678, i32* @r29, align 4
  store i32 %v0_1000667c, i32* @r30, align 4
  %v0_100067c8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100067c8 = trunc i32 %v0_100067c8 to i16
  %v2_100067c8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100067c8 = add i32 %v2_100067c8, 10
  %v4_100067c8 = inttoptr i32 %v3_100067c8 to i16*
  store i16 %v1_100067c8, i16* %v4_100067c8, align 2
  %v0_100067cc = load i32, i32* %r7.global-to-local, align 4
  %v1_100067cc = trunc i32 %v0_100067cc to i16
  %v2_100067cc = load i32, i32* %r11.global-to-local, align 4
  %v3_100067cc = add i32 %v2_100067cc, 8
  %v4_100067cc = inttoptr i32 %v3_100067cc to i16*
  store i16 %v1_100067cc, i16* %v4_100067cc, align 2
  %v0_100067d0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100067d0 = trunc i32 %v0_100067d0 to i16
  store i16 %v1_100067d0, i16* @global_var_1001bd88.114, align 2
  ret i32 %v3_10006728

; uselistorder directives
  uselistorder i32 %v3_10006770, { 1, 0 }
  uselistorder i32 %v1_1000674c, { 1, 0 }
  uselistorder i32 %v1_10006748, { 1, 0 }
  uselistorder i32 %v0_1000672c, { 1, 0, 2 }
  uselistorder i32 %v1_100066dc, { 1, 0 }
  uselistorder i32 %v1_100066d8, { 1, 0 }
  uselistorder i32 %v0_100066bc, { 1, 0, 2 }
  uselistorder i32 %v1_10006648, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_10008558, { 0, 1, 8, 9, 10, 11, 12, 28, 27, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 (i32, i32, i32)* @function_10009e6c, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_100067d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100067d8:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i16 @__decompiler_undefined_function_1()
  %tmp55 = call i16 @__decompiler_undefined_function_1()
  %tmp56 = call i8 @__decompiler_undefined_function_2()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1920 = alloca i32, align 4
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1916 = alloca i64, align 8
  %v0_100067d8 = load i32, i32* @lr, align 4
  store i32 %v0_100067d8, i32* %r0.global-to-local, align 4
  %v0_100067e0 = call i32 @__asm_mfcr()
  store i32 %v0_100067e0, i32* %r3.global-to-local, align 4
  %v0_1000681c = load i32, i32* @r28, align 4
  %v0_10006820 = load i32, i32* @r29, align 4
  %v0_10006824 = load i32, i32* @r30, align 4
  %v0_1000682c = load i32, i32* %r0.global-to-local, align 4
  store i32 268462136, i32* @lr, align 4
  %v0_10006834 = call i32 @function_10008ce0()
  store i32 %v0_10006834, i32* %r3.global-to-local, align 4
  %v1_10006838 = icmp slt i32 %v0_10006834, 0
  %v3_10006838 = icmp eq i32 %v0_10006834, 0
  store i1 %v1_10006838, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006838, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10006834, i32* @global_var_1001bd98.110, align 4
  %tmp98 = icmp slt i32 %v0_10006834, 1
  br i1 %tmp98, label %dec_label_pc_100068a8, label %dec_label_pc_10006848

dec_label_pc_10006848:                            ; preds = %dec_label_pc_100068a8, %dec_label_pc_100067d8
  store i32 %v0_1000682c, i32* %r0.global-to-local, align 4
  %v1_1000685c = call %0 @__asm_mtcrf(i32 8, i32 %v0_100067e0)
  store i32 %v0_1000681c, i32* @r28, align 4
  store i32 %v0_10006820, i32* @r29, align 4
  store i32 %v0_10006824, i32* @r30, align 4
  ret i32 %v0_10006834

dec_label_pc_100068a8:                            ; preds = %dec_label_pc_100067d8
  %v1_100068a8 = icmp slt i32 %v0_10006834, -1
  %v3_100068a8 = icmp eq i32 %v0_10006834, -1
  store i1 %v1_100068a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068a8, label %dec_label_pc_10006848, label %dec_label_pc_100068b0

dec_label_pc_100068b0:                            ; preds = %dec_label_pc_100068a8
  store i32 268462260, i32* @lr, align 4
  %v1_100068b0 = call i32 @function_1000885c(i32 %v0_10006834)
  store i32 %v1_100068b0, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r6.global-to-local, align 4
  store i32 %v1_100068b0, i32* @global_var_1001bd68.14, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100068c0.115 to i32), i32* @lr, align 4
  %v1_100068bc = call i32 @function_10005d24(i32 %v1_100068b0)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268462280, i32* @lr, align 4
  %v0_100068c4 = call i32 @function_10009068()
  store i32 268566528, i32* %r6.global-to-local, align 4
  store i32 %v0_100068c4, i32* @global_var_1001bd8c.111, align 4
  store i32 356, i32* %r3.global-to-local, align 4
  store i32 268462300, i32* @lr, align 4
  %v2_100068d8 = call i32 @function_10009cfc(i32 356, i32 388)
  store i32 %v2_100068d8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_100068d8, i32* @global_var_1001bd90.116, align 4
  store i32 356, i32* %r6.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 356, i32* %ctr.global-to-local, align 4
  store i32 %v2_100068d8, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10006904 = add i32 %v2_100068d8, 4
  store i32 %v1_10006904, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006908

dec_label_pc_10006908:                            ; preds = %dec_label_pc_10006908.dec_label_pc_10006908_crit_edge, %dec_label_pc_100068b0
  %v1_10006910 = phi i32 [ %v1_10006910.pre, %dec_label_pc_10006908.dec_label_pc_10006908_crit_edge ], [ %v1_10006904, %dec_label_pc_100068b0 ]
  %v0_10006910 = phi i32 [ %v0_10006910.pre, %dec_label_pc_10006908.dec_label_pc_10006908_crit_edge ], [ -1, %dec_label_pc_100068b0 ]
  %v0_1000690c = phi i32 [ %v0_10006920, %dec_label_pc_10006908.dec_label_pc_10006908_crit_edge ], [ 0, %dec_label_pc_100068b0 ]
  %v1_10006908 = mul i32 %v0_1000690c, 388
  store i32 %v1_10006908, i32* %r9.global-to-local, align 4
  %v1_1000690c = add i32 %v0_1000690c, 1
  store i32 %v1_1000690c, i32* %r10.global-to-local, align 4
  %v2_10006910 = inttoptr i32 %v1_10006910 to i32*
  store i32 %v0_10006910, i32* %v2_10006910, align 4
  %v0_10006914 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006914 = add i32 %v0_10006914, 388
  store i32 %v1_10006914, i32* %r11.global-to-local, align 4
  %v0_10006918 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006918 = load i32, i32* %r8.global-to-local, align 4
  %v0_1000691c = load i32, i32* %r0.global-to-local, align 4
  %v2_10006918 = add i32 %v0_10006918, 12
  %v2_1000691c = add i32 %v2_10006918, %v1_10006918
  %v3_1000691c = inttoptr i32 %v2_1000691c to i32*
  store i32 %v0_1000691c, i32* %v3_1000691c, align 4
  %v0_10006920 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006920, i32* %r9.global-to-local, align 4
  %v0_10006924 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006924 = add i32 %v0_10006924, -1
  store i32 %v1_10006924, i32* %ctr.global-to-local, align 4
  %v2_10006924 = icmp eq i32 %v1_10006924, 0
  br i1 %v2_10006924, label %dec_label_pc_10006928, label %dec_label_pc_10006908.dec_label_pc_10006908_crit_edge

dec_label_pc_10006908.dec_label_pc_10006908_crit_edge: ; preds = %dec_label_pc_10006908
  %v0_10006910.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_10006910.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006908

dec_label_pc_10006928:                            ; preds = %dec_label_pc_10006908
  store i32 356, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i64 356, i64* %stack_var_-1916, align 8
  store i32 268462400, i32* @lr, align 4
  %v3_1000693c = call i32 @function_100099a0(i32 2, i32 3, i32 6)
  store i32 %v3_1000693c, i32* %r3.global-to-local, align 4
  %v1_10006940 = icmp slt i32 %v3_1000693c, -1
  %v3_10006940 = icmp eq i32 %v3_1000693c, -1
  store i1 %v1_10006940, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006940, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r6.global-to-local, align 4
  store i32 %v3_1000693c, i32* @r31, align 4
  store i32 %v3_1000693c, i32* @global_var_1001bd94.117, align 4
  br i1 %v3_10006940, label %dec_label_pc_10007198, label %dec_label_pc_10006954

dec_label_pc_10006954:                            ; preds = %dec_label_pc_10006928
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268462436, i32* @lr, align 4
  %v1_10006960 = call i32 @function_10008bb0(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10006968 = or i32 %v1_10006960, 2048
  store i32 %v1_10006968, i32* %r5.global-to-local, align 4
  %v0_1000696c = load i32, i32* @r31, align 4
  store i32 %v0_1000696c, i32* %r3.global-to-local, align 4
  store i32 268462456, i32* @lr, align 4
  %v2_10006974 = call i32 @function_10008bb0(i32 %v0_1000696c)
  %v3_1000697c = load i32, i32* @global_var_1001bd94.117, align 4
  store i32 %v3_1000697c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_1000698c = ptrtoint i64* %stack_var_-1916 to i32
  store i32 %v2_1000698c, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1916, align 8
  store i32 268462492, i32* @lr, align 4
  %v5_10006998 = call i32 @function_10009964(i32 %v3_1000697c, i32 0, i32 3, i32 %v2_1000698c)
  store i32 %v5_10006998, i32* %r3.global-to-local, align 4
  %v1_1000699c = icmp slt i32 %v5_10006998, 0
  %v3_1000699c = icmp eq i32 %v5_10006998, 0
  store i1 %v1_1000699c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000699c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000699c, label %dec_label_pc_100069a4, label %dec_label_pc_10007ef8

dec_label_pc_100069a4:                            ; preds = %dec_label_pc_10006954, %dec_label_pc_100069a4
  %v0_100069a4 = call i32 @function_10005cd4()
  store i32 %v0_100069a4, i32* %r3.global-to-local, align 4
  %v1_100069a8 = urem i32 %v0_100069a4, 65536
  store i32 %v1_100069a8, i32* @r20, align 4
  %v1_100069ac = icmp ult i32 %v1_100069a8, 1023
  %v3_100069ac = icmp eq i32 %v1_100069a8, 1023
  store i1 %v1_100069ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100069ac, i1* %cr7_eq.global-to-local, align 1
  %tmp99 = icmp ult i32 %v1_100069a8, 1024
  br i1 %tmp99, label %dec_label_pc_100069a4, label %dec_label_pc_100069b4

dec_label_pc_100069b4:                            ; preds = %dec_label_pc_100069a4
  store i32 268566528, i32* %r11.global-to-local, align 4
  %v3_100069bc = load i32, i32* @global_var_1001be00.118, align 4
  store i32 %v3_100069bc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001be00.118 to i32), i32* @r21, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001be14.119 to i32), i32* @r22, align 4
  %v1_100069cc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100069cc, i32* %r0.global-to-local, align 4
  %v2_100069d0 = ptrtoint i32* %stack_var_-1744 to i32
  store i32 %v2_100069d0, i32* @r15, align 4
  %v1_100069d4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100069d4, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_100069d4, i32* @global_var_1001be00.118, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001be02.120 to i16*), align 4
  %v0_100069e8 = call i32 @function_10005cd4()
  %v1_100069e8 = trunc i32 %v0_100069e8 to i16
  store i32 %v0_100069e8, i32* %r3.global-to-local, align 4
  %v3_100069ec = load i32, i32* @global_var_1001be20.121, align 4
  store i32 %v3_100069ec, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001be08.122 to i8*), align 4
  %v1_100069fc = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_100069fc, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_10006a04 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006a04 = trunc i32 %v0_10006a04 to i8
  store i8 %v1_10006a04, i8* bitcast (i32* @global_var_1001be09.123 to i8*), align 4
  store i16 %v1_100069e8, i16* bitcast (i32* @global_var_1001be04.124 to i16*), align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000b6cc.125 to i32), i32* @r29, align 4
  store i32 %v1_100069fc, i32* @global_var_1001be20.121, align 4
  store i16 23, i16* @global_var_1001be16.126, align 2
  %v0_10006a1c = load i32, i32* @r20, align 4
  %v1_10006a1c = trunc i32 %v0_10006a1c to i16
  store i16 %v1_10006a1c, i16* bitcast (i32* @global_var_1001be14.119 to i16*), align 4
  %v0_10006a20 = call i32 @function_10005cd4()
  %v1_10006a20 = trunc i32 %v0_10006a20 to i16
  store i16 %v1_10006a20, i16* bitcast (i32* @global_var_1001be22.127 to i16*), align 4
  %v0_10006a30 = load i32, i32* @r29, align 4
  store i32 %v0_10006a30, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  %v3_10006a38 = load i32, i32* @global_var_1001be20.121, align 4
  %v1_10006a3c = or i32 %v3_10006a38, 131072
  store i32 %v1_10006a3c, i32* %r0.global-to-local, align 4
  store i32 %v1_10006a3c, i32* @global_var_1001be20.121, align 4
  store i32 268462664, i32* @lr, align 4
  %v4_10006a44 = call i32 @function_1000662c(i32 %v0_10006a30, i32 ptrtoint (i32* @global_var_1000b6ac.128 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1000b690.129 to i32), i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268462684, i32* @lr, align 4
  %v4_10006a58 = call i32 @function_1000662c(i32 ptrtoint ([6 x i8]* @global_var_1000b690.129 to i32), i32 10, i32 10)
  %v0_10006a64 = load i32, i32* @r29, align 4
  store i32 %v0_10006a64, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268462704, i32* @lr, align 4
  %v4_10006a6c = call i32 @function_1000662c(i32 %v0_10006a64, i32 ptrtoint (i32* @global_var_1000b698.130 to i32), i32 15)
  %v0_10006a78 = load i32, i32* @r29, align 4
  store i32 %v0_10006a78, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268462724, i32* @lr, align 4
  %v4_10006a80 = call i32 @function_1000662c(i32 %v0_10006a78, i32 ptrtoint (i32* @global_var_1000b6a4.131 to i32), i32 15)
  %v0_10006a8c = load i32, i32* @r29, align 4
  store i32 %v0_10006a8c, i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268462744, i32* @lr, align 4
  %v4_10006a94 = call i32 @function_1000662c(i32 %v0_10006a8c, i32 ptrtoint (i32* @global_var_1000b6b0.132 to i32), i32 14)
  %v0_10006aa0 = load i32, i32* @r29, align 4
  store i32 %v0_10006aa0, i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268462764, i32* @lr, align 4
  %v5_10006aa8 = call i32 @function_1000662c(i32 %v0_10006aa0, i32 ptrtoint ([7 x i8]* @global_var_1000b6b8.133 to i32), i32 13)
  %v0_10006ab0 = load i32, i32* @r29, align 4
  store i32 %v0_10006ab0, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268462784, i32* @lr, align 4
  %v4_10006abc = call i32 @function_1000662c(i32 %v0_10006ab0, i32 ptrtoint (i32* @global_var_1000b6c0.134 to i32), i32 12)
  store i32 %v4_10006abc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006ac0

dec_label_pc_10006ac0:                            ; preds = %dec_label_pc_10006fe4, %dec_label_pc_100069b4
  store i32 268566528, i32* %r6.global-to-local, align 4
  %v3_10006ac4 = load i32, i32* @global_var_1001bd8c.111, align 4
  store i32 %v3_10006ac4, i32* @r31, align 4
  %v0_10006ac8 = load i32, i32* @r23, align 4
  %v2_10006ac8 = icmp slt i32 %v0_10006ac8, %v3_10006ac4
  %v4_10006ac8 = icmp eq i32 %v0_10006ac8, %v3_10006ac4
  store i1 %v2_10006ac8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006ac8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006ac8, label %dec_label_pc_10006ce8, label %dec_label_pc_10006ad0

dec_label_pc_10006ad0:                            ; preds = %dec_label_pc_10006ac0
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006ad4 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_10006ad4, i32* @r28, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 0, i32* @r30, align 4
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10006ae4

dec_label_pc_10006ae4:                            ; preds = %dec_label_pc_10006c14.dec_label_pc_10006ae4_crit_edge, %dec_label_pc_10006ad0
  %v0_10006ae4 = phi i32 [ %v0_10006ae4.pre, %dec_label_pc_10006c14.dec_label_pc_10006ae4_crit_edge ], [ 0, %dec_label_pc_10006ad0 ]
  store i32 %v0_10006ae4, i32* %stack_var_-1888, align 4
  %v0_10006af4 = call i32 @function_10005cd4()
  %v1_10006af4 = trunc i32 %v0_10006af4 to i16
  store i32 %v0_10006af4, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r6.global-to-local, align 4
  store i16 %v1_10006af4, i16* bitcast (i32* @global_var_1001be04.124 to i16*), align 4
  %v3_10006b00 = load i32, i32* @global_var_1001bd68.14, align 4
  store i32 %v3_10006b00, i32* %r0.global-to-local, align 4
  store i32 %v3_10006b00, i32* @global_var_1001be0c.135, align 4
  br label %dec_label_pc_10006b08.preheader

dec_label_pc_10006b08.preheader:                  ; preds = %dec_label_pc_10006ae4, %dec_label_pc_100071a0
  br label %dec_label_pc_10006b08

dec_label_pc_10006b08:                            ; preds = %dec_label_pc_1000723c, %dec_label_pc_10007230, %dec_label_pc_10007224, %dec_label_pc_10007218, %dec_label_pc_1000720c, %dec_label_pc_10007204, %dec_label_pc_100071fc, %dec_label_pc_100071f4, %dec_label_pc_100071e8, %dec_label_pc_100071d4, %dec_label_pc_100071c8, %dec_label_pc_100071b4, %dec_label_pc_10006c0c, %dec_label_pc_10006c04, %dec_label_pc_10006bfc, %dec_label_pc_10006bf4, %dec_label_pc_10006bec, %dec_label_pc_10006be4, %dec_label_pc_10006bdc, %dec_label_pc_10006bd4, %dec_label_pc_10006bcc, %dec_label_pc_10006bc4, %dec_label_pc_10006bbc, %dec_label_pc_10006bac, %dec_label_pc_10006b7c, %dec_label_pc_10006b4c, %dec_label_pc_10006b44, %dec_label_pc_10006b34, %dec_label_pc_10006b2c, %dec_label_pc_10006b24, %dec_label_pc_10006b08, %dec_label_pc_10006b08.preheader
  %v0_10006b08 = call i32 @function_10005cd4()
  store i32 %v0_10006b08, i32* %r3.global-to-local, align 4
  %v1_10006b0c = urem i32 %v0_10006b08, 256
  store i32 %v1_10006b0c, i32* %r11.global-to-local, align 4
  %v1_10006b10 = udiv i32 %v0_10006b08, 16777216
  store i32 %v1_10006b10, i32* %r10.global-to-local, align 4
  %v1_10006b14 = icmp ult i32 %v1_10006b0c, 127
  %v3_10006b14 = icmp eq i32 %v1_10006b0c, 127
  store i1 %v1_10006b14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b14, i1* %cr7_eq.global-to-local, align 1
  %v1_10006b18 = call i32 @__asm_rlwinm(i32 %v0_10006b08, i32 24, i32 24, i32 31)
  store i32 %v1_10006b18, i32* @r9, align 4
  %v1_10006b1c = call i32 @__asm_rlwinm(i32 %v0_10006b08, i32 16, i32 24, i32 31)
  store i32 %v1_10006b1c, i32* %r3.global-to-local, align 4
  %v0_10006b20 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006b20, label %dec_label_pc_10006b08, label %dec_label_pc_10006b24

dec_label_pc_10006b24:                            ; preds = %dec_label_pc_10006b08
  %v0_10006b24 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006b24 = icmp slt i32 %v0_10006b24, 0
  %v3_10006b24 = icmp eq i32 %v0_10006b24, 0
  store i1 %v1_10006b24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b24, label %dec_label_pc_10006b08, label %dec_label_pc_10006b2c

dec_label_pc_10006b2c:                            ; preds = %dec_label_pc_10006b24
  %v1_10006b2c = icmp slt i32 %v0_10006b24, 3
  %v3_10006b2c = icmp eq i32 %v0_10006b24, 3
  store i1 %v1_10006b2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b2c, label %dec_label_pc_10006b08, label %dec_label_pc_10006b34

dec_label_pc_10006b34:                            ; preds = %dec_label_pc_10006b2c
  %v1_10006b34 = add i32 %v0_10006b24, 241
  %v1_10006b38 = urem i32 %v1_10006b34, 256
  store i32 %v1_10006b38, i32* %r0.global-to-local, align 4
  %v1_10006b3c = icmp eq i32 %v1_10006b38, 0
  %v3_10006b3c = icmp eq i32 %v1_10006b38, 1
  store i1 %v1_10006b3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b3c, i1* %cr7_eq.global-to-local, align 1
  %tmp100 = or i32 %v1_10006b38, 1
  %tmp101 = icmp eq i32 %tmp100, 1
  br i1 %tmp101, label %dec_label_pc_10006b08, label %dec_label_pc_10006b44

dec_label_pc_10006b44:                            ; preds = %dec_label_pc_10006b34
  %v1_10006b44 = icmp slt i32 %v0_10006b24, 56
  %v3_10006b44 = icmp eq i32 %v0_10006b24, 56
  store i1 %v1_10006b44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b44, label %dec_label_pc_10006b08, label %dec_label_pc_10006b4c

dec_label_pc_10006b4c:                            ; preds = %dec_label_pc_10006b44
  %v1_10006b4c = icmp slt i32 %v0_10006b24, 10
  %v3_10006b4c = icmp eq i32 %v0_10006b24, 10
  store i1 %v1_10006b4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b4c, label %dec_label_pc_10006b08, label %dec_label_pc_10006b54

dec_label_pc_10006b54:                            ; preds = %dec_label_pc_10006b4c
  %v1_10006b54 = icmp slt i32 %v0_10006b24, 192
  %v3_10006b54 = icmp eq i32 %v0_10006b24, 192
  store i1 %v1_10006b54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b54, label %dec_label_pc_100071a0, label %dec_label_pc_10006b5c

dec_label_pc_10006b5c:                            ; preds = %dec_label_pc_10006b54
  %v1_10006b5c = icmp slt i32 %v0_10006b24, 172
  %v3_10006b5c = icmp eq i32 %v0_10006b24, 172
  store i1 %v1_10006b5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b5c, label %dec_label_pc_100071ac, label %dec_label_pc_10006b64

dec_label_pc_10006b64:                            ; preds = %dec_label_pc_10006b5c
  %v1_10006b64 = icmp slt i32 %v0_10006b24, 100
  %v3_10006b64 = icmp eq i32 %v0_10006b24, 100
  store i1 %v1_10006b64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b64, label %dec_label_pc_100071c0, label %dec_label_pc_10006b6c

dec_label_pc_10006b6c:                            ; preds = %dec_label_pc_10006b64
  %v1_10006b6c = icmp slt i32 %v0_10006b24, 169
  %v3_10006b6c = icmp eq i32 %v0_10006b24, 169
  store i1 %v1_10006b6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b6c, label %dec_label_pc_100071d4, label %dec_label_pc_10006b74

dec_label_pc_10006b74:                            ; preds = %dec_label_pc_10006b6c
  %v1_10006b74 = icmp slt i32 %v0_10006b24, 198
  %v3_10006b74 = icmp eq i32 %v0_10006b24, 198
  store i1 %v1_10006b74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b74, label %dec_label_pc_100071e0, label %dec_label_pc_10006b7c

dec_label_pc_10006b7c:                            ; preds = %dec_label_pc_10006b74
  %v1_10006b7c = icmp ult i32 %v0_10006b24, 223
  %v2_10006b7c = icmp ugt i32 %v0_10006b24, 223
  %v3_10006b7c = icmp eq i32 %v0_10006b24, 223
  store i1 %v1_10006b7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006b7c, label %dec_label_pc_10006b08, label %dec_label_pc_10006b84

dec_label_pc_10006b84:                            ; preds = %dec_label_pc_10006b7c
  %v1_10006b84 = icmp slt i32 %v0_10006b24, 106
  %v3_10006b84 = icmp eq i32 %v0_10006b24, 106
  store i1 %v1_10006b84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b84, label %dec_label_pc_100071f4, label %dec_label_pc_10006b8c

dec_label_pc_10006b8c:                            ; preds = %dec_label_pc_10006b84
  %v1_10006b8c = icmp slt i32 %v0_10006b24, 150
  %v3_10006b8c = icmp eq i32 %v0_10006b24, 150
  store i1 %v1_10006b8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b8c, label %dec_label_pc_10007218, label %dec_label_pc_10006b94

dec_label_pc_10006b94:                            ; preds = %dec_label_pc_10006b8c
  %v1_10006b94 = icmp slt i32 %v0_10006b24, 49
  %v3_10006b94 = icmp eq i32 %v0_10006b24, 49
  store i1 %v1_10006b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b94, label %dec_label_pc_10007224, label %dec_label_pc_10006b9c

dec_label_pc_10006b9c:                            ; preds = %dec_label_pc_10006b94
  %v1_10006b9c = icmp slt i32 %v0_10006b24, 178
  %v3_10006b9c = icmp eq i32 %v0_10006b24, 178
  store i1 %v1_10006b9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b9c, label %dec_label_pc_10007230, label %dec_label_pc_10006ba4

dec_label_pc_10006ba4:                            ; preds = %dec_label_pc_10006b9c
  %v1_10006ba4 = icmp slt i32 %v0_10006b24, 160
  %v3_10006ba4 = icmp eq i32 %v0_10006b24, 160
  store i1 %v1_10006ba4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ba4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ba4, label %dec_label_pc_1000723c, label %dec_label_pc_10006bac

dec_label_pc_10006bac:                            ; preds = %dec_label_pc_10006ba4
  %v1_10006bac = add i32 %v0_10006b24, 250
  %v1_10006bb0 = urem i32 %v1_10006bac, 256
  store i32 %v1_10006bb0, i32* %r0.global-to-local, align 4
  %v1_10006bb4 = icmp eq i32 %v1_10006bb0, 0
  %v3_10006bb4 = icmp eq i32 %v1_10006bb0, 1
  store i1 %v1_10006bb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006bb4, i1* %cr7_eq.global-to-local, align 1
  %tmp102 = or i32 %v1_10006bb0, 1
  %tmp103 = icmp eq i32 %tmp102, 1
  br i1 %tmp103, label %dec_label_pc_10006b08, label %dec_label_pc_10006bbc

dec_label_pc_10006bbc:                            ; preds = %dec_label_pc_10006bac
  %v1_10006bbc = icmp slt i32 %v0_10006b24, 11
  %v3_10006bbc = icmp eq i32 %v0_10006b24, 11
  store i1 %v1_10006bbc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006bbc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006bbc, label %dec_label_pc_10006b08, label %dec_label_pc_10006bc4

dec_label_pc_10006bc4:                            ; preds = %dec_label_pc_10006bbc
  %v1_10006bc4 = icmp slt i32 %v0_10006b24, 21
  %v3_10006bc4 = icmp eq i32 %v0_10006b24, 21
  store i1 %v1_10006bc4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006bc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006bc4, label %dec_label_pc_10006b08, label %dec_label_pc_10006bcc

dec_label_pc_10006bcc:                            ; preds = %dec_label_pc_10006bc4
  %v1_10006bcc = icmp slt i32 %v0_10006b24, 22
  %v3_10006bcc = icmp eq i32 %v0_10006b24, 22
  store i1 %v1_10006bcc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006bcc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006bcc, label %dec_label_pc_10006b08, label %dec_label_pc_10006bd4

dec_label_pc_10006bd4:                            ; preds = %dec_label_pc_10006bcc
  %v1_10006bd4 = icmp slt i32 %v0_10006b24, 26
  %v3_10006bd4 = icmp eq i32 %v0_10006b24, 26
  store i1 %v1_10006bd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006bd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006bd4, label %dec_label_pc_10006b08, label %dec_label_pc_10006bdc

dec_label_pc_10006bdc:                            ; preds = %dec_label_pc_10006bd4
  %v1_10006bdc = icmp slt i32 %v0_10006b24, 28
  %v3_10006bdc = icmp eq i32 %v0_10006b24, 28
  store i1 %v1_10006bdc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006bdc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006bdc, label %dec_label_pc_10006b08, label %dec_label_pc_10006be4

dec_label_pc_10006be4:                            ; preds = %dec_label_pc_10006bdc
  %v1_10006be4 = icmp slt i32 %v0_10006b24, 29
  %v3_10006be4 = icmp eq i32 %v0_10006b24, 29
  store i1 %v1_10006be4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006be4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006be4, label %dec_label_pc_10006b08, label %dec_label_pc_10006bec

dec_label_pc_10006bec:                            ; preds = %dec_label_pc_10006be4
  %v1_10006bec = icmp slt i32 %v0_10006b24, 30
  %v3_10006bec = icmp eq i32 %v0_10006b24, 30
  store i1 %v1_10006bec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006bec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006bec, label %dec_label_pc_10006b08, label %dec_label_pc_10006bf4

dec_label_pc_10006bf4:                            ; preds = %dec_label_pc_10006bec
  %v1_10006bf4 = icmp slt i32 %v0_10006b24, 33
  %v3_10006bf4 = icmp eq i32 %v0_10006b24, 33
  store i1 %v1_10006bf4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006bf4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006bf4, label %dec_label_pc_10006b08, label %dec_label_pc_10006bfc

dec_label_pc_10006bfc:                            ; preds = %dec_label_pc_10006bf4
  %v1_10006bfc = icmp slt i32 %v0_10006b24, 55
  %v3_10006bfc = icmp eq i32 %v0_10006b24, 55
  store i1 %v1_10006bfc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006bfc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006bfc, label %dec_label_pc_10006b08, label %dec_label_pc_10006c04

dec_label_pc_10006c04:                            ; preds = %dec_label_pc_10006bfc
  %v1_10006c04 = icmp slt i32 %v0_10006b24, 214
  %v3_10006c04 = icmp eq i32 %v0_10006b24, 214
  store i1 %v1_10006c04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c04, label %dec_label_pc_10006b08, label %dec_label_pc_10006c0c

dec_label_pc_10006c0c:                            ; preds = %dec_label_pc_10006c04
  %v1_10006c0c = icmp slt i32 %v0_10006b24, 215
  %v3_10006c0c = icmp eq i32 %v0_10006b24, 215
  store i1 %v1_10006c0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c0c, label %dec_label_pc_10006b08, label %dec_label_pc_10006c0c.dec_label_pc_10006c14.loopexit_crit_edge

dec_label_pc_10006c0c.dec_label_pc_10006c14.loopexit_crit_edge: ; preds = %dec_label_pc_10006c0c
  %v0_10006c18.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10006c14

dec_label_pc_10006c14:                            ; preds = %dec_label_pc_1000723c, %dec_label_pc_10007230, %dec_label_pc_10007224, %dec_label_pc_10007218, %dec_label_pc_1000720c, %dec_label_pc_100071e8, %dec_label_pc_100071d4, %dec_label_pc_100071c8, %dec_label_pc_100071b4, %dec_label_pc_100071e0, %dec_label_pc_100071c0, %dec_label_pc_100071ac, %dec_label_pc_10006c0c.dec_label_pc_10006c14.loopexit_crit_edge, %dec_label_pc_100071a0.dec_label_pc_10006c14_crit_edge
  %v0_10006c20 = phi i32 [ %v0_10006c2015, %dec_label_pc_100071a0.dec_label_pc_10006c14_crit_edge ], [ %v1_10006b1c, %dec_label_pc_10006c0c.dec_label_pc_10006c14.loopexit_crit_edge ], [ %v1_10006b1c, %dec_label_pc_100071ac ], [ %v1_10006b1c, %dec_label_pc_100071c0 ], [ %v1_10006b1c, %dec_label_pc_100071e0 ], [ %v1_10006b1c, %dec_label_pc_100071b4 ], [ %v1_10006b1c, %dec_label_pc_100071c8 ], [ %v1_10006b1c, %dec_label_pc_100071d4 ], [ %v1_10006b1c, %dec_label_pc_100071e8 ], [ %v1_10006b1c, %dec_label_pc_1000720c ], [ %v1_10006b1c, %dec_label_pc_10007218 ], [ %v1_10006b1c, %dec_label_pc_10007224 ], [ %v1_10006b1c, %dec_label_pc_10007230 ], [ %v1_10006b1c, %dec_label_pc_1000723c ]
  %v0_10006c18 = phi i32 [ %v0_100071a0, %dec_label_pc_100071a0.dec_label_pc_10006c14_crit_edge ], [ %v0_10006c18.pre.pre, %dec_label_pc_10006c0c.dec_label_pc_10006c14.loopexit_crit_edge ], [ %v0_100071ac, %dec_label_pc_100071ac ], [ %v0_100071c0, %dec_label_pc_100071c0 ], [ %v0_100071e0, %dec_label_pc_100071e0 ], [ %v0_100071ac, %dec_label_pc_100071b4 ], [ %v0_100071c0, %dec_label_pc_100071c8 ], [ %v0_100071d4, %dec_label_pc_100071d4 ], [ %v0_100071e0, %dec_label_pc_100071e8 ], [ %v0_100071f4, %dec_label_pc_1000720c ], [ %v0_10007218, %dec_label_pc_10007218 ], [ %v0_10007224, %dec_label_pc_10007224 ], [ %v0_10007230, %dec_label_pc_10007230 ], [ %v0_1000723c, %dec_label_pc_1000723c ]
  %v0_10006c14 = phi i32 [ %v0_10006c14.pre, %dec_label_pc_100071a0.dec_label_pc_10006c14_crit_edge ], [ %v0_10006b24, %dec_label_pc_10006c0c.dec_label_pc_10006c14.loopexit_crit_edge ], [ 172, %dec_label_pc_100071ac ], [ 100, %dec_label_pc_100071c0 ], [ 198, %dec_label_pc_100071e0 ], [ 172, %dec_label_pc_100071b4 ], [ 100, %dec_label_pc_100071c8 ], [ 169, %dec_label_pc_100071d4 ], [ 198, %dec_label_pc_100071e8 ], [ 106, %dec_label_pc_1000720c ], [ 150, %dec_label_pc_10007218 ], [ 49, %dec_label_pc_10007224 ], [ 178, %dec_label_pc_10007230 ], [ 160, %dec_label_pc_1000723c ]
  %v1_10006c14 = mul i32 %v0_10006c14, 16777216
  %v1_10006c18 = mul i32 %v0_10006c18, 65536
  %v2_10006c1c = or i32 %v1_10006c14, %v1_10006c18
  %v1_10006c20 = mul i32 %v0_10006c20, 256
  %v1_10006c24 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006c24 = or i32 %v2_10006c1c, %v1_10006c24
  store i32 %v2_10006c24, i32* %r0.global-to-local, align 4
  %v0_10006c28 = load i32, i32* @r21, align 4
  store i32 %v0_10006c28, i32* @r3, align 4
  %v2_10006c2c = or i32 %v2_10006c24, %v1_10006c20
  store i32 %v2_10006c2c, i32* %r9.global-to-local, align 4
  store i32 %v2_10006c2c, i32* @global_var_1001be10.137, align 4
  %v0_10006c38 = load i32, i32* @r29, align 4
  %v1_10006c38 = trunc i32 %v0_10006c38 to i16
  store i16 %v1_10006c38, i16* bitcast (i32* @global_var_1001be0a.138 to i16*), align 4
  %v2_10006c3c = call i32 @function_100043cc(i32 %v0_10006c28, i32 20)
  %v3_10006c3c = trunc i32 %v2_10006c3c to i16
  %v3_10006c40 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006c40 = trunc i64 %v3_10006c40 to i32
  store i32 %v4_10006c40, i32* %r9.global-to-local, align 4
  store i16 %v3_10006c3c, i16* bitcast (i32* @global_var_1001be0a.138 to i16*), align 4
  %v4_10006c50 = mul nsw i64 %v3_10006c40, 1717986919
  %v5_10006c50 = udiv i64 %v4_10006c50, 4294967296
  %v6_10006c50 = trunc i64 %v5_10006c50 to i32
  %tmp = icmp slt i32 %v4_10006c40, 0
  %v1_10006c54 = zext i1 %tmp to i32
  %v2_10006c54 = ashr i32 %v4_10006c40, 31
  %v3_10006c54 = and i32 %v2_10006c54, -2
  %v4_10006c54 = or i32 %v3_10006c54, %v1_10006c54
  store i32 %v4_10006c54, i32* %r11.global-to-local, align 4
  %v1_10006c5843 = udiv i64 %v4_10006c50, 17179869184
  %v1_10006c58 = trunc i64 %v1_10006c5843 to i32
  %v2_10006c58 = ashr i32 %v6_10006c50, 31
  %v3_10006c58 = and i32 %v2_10006c58, -1073741824
  %v4_10006c58 = or i32 %v3_10006c58, %v1_10006c58
  %v2_10006c5c = sub nsw i32 %v4_10006c58, %v4_10006c54
  %v1_10006c60 = mul i32 %v2_10006c5c, 10
  %v2_10006c64 = icmp slt i32 %v4_10006c40, %v1_10006c60
  %v4_10006c64 = icmp eq i32 %v4_10006c40, %v1_10006c60
  store i1 %v2_10006c64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006c64, i1* %cr7_eq.global-to-local, align 1
  %.3 = select i1 %v4_10006c64, i16 2323, i16 23
  store i16 %.3, i16* @global_var_1001be16.126, align 2
  %v3_10006c74 = load i32, i32* @global_var_1001be10.137, align 4
  store i32 %v3_10006c74, i32* %r0.global-to-local, align 4
  %v0_10006c78 = load i32, i32* @r22, align 4
  store i32 %v0_10006c78, i32* @r4, align 4
  %v0_10006c7c = load i32, i32* @r29, align 4
  %v1_10006c7c = trunc i32 %v0_10006c7c to i16
  store i16 %v1_10006c7c, i16* bitcast (i32* @global_var_1001be24.139 to i16*), align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_10006c74, i32* @global_var_1001be18.140, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_10006c8c = load i32, i32* @r21, align 4
  store i32 %v0_10006c8c, i32* %r3.global-to-local, align 4
  %v4_10006c90 = call i32 @function_10004430(i32 %v0_10006c8c, i32 %v0_10006c78, i32 20, i32 20)
  %v5_10006c90 = trunc i32 %v4_10006c90 to i16
  store i16 %v5_10006c90, i16* bitcast (i32* @global_var_1001be24.139 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10006ca0 = load i32, i32* @global_var_1001be10.137, align 4
  store i32 %v3_10006ca0, i32* %r9.global-to-local, align 4
  %v0_10006ca4 = load i32, i32* @r21, align 4
  %v3_10006ca8 = load i16, i16* @global_var_1001be16.126, align 2
  %v4_10006ca8 = zext i16 %v3_10006ca8 to i32
  store i32 %v4_10006ca8, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_10006cb0 = load i32, i32* @global_var_1001bd94.117, align 4
  store i32 %v3_10006cb0, i32* %r3.global-to-local, align 4
  %v0_10006cb4 = load i32, i32* @r28, align 4
  store i32 %v0_10006cb4, i32* %r7.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268463312, i32* @lr, align 4
  %v6_10006ccc = call i32 @function_10009924(i32 %v3_10006cb0, i32 %v0_10006ca4, i32 40, i32 16384, i32 %v0_10006cb4, i32 16)
  store i32 %v6_10006ccc, i32* %r3.global-to-local, align 4
  %v3_10006cd0 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006cd0 = trunc i64 %v3_10006cd0 to i32
  %v1_10006cd4 = add i32 %v4_10006cd0, 1
  store i32 %v1_10006cd4, i32* %r9.global-to-local, align 4
  %v1_10006cd8 = icmp slt i32 %v1_10006cd4, 483
  %v3_10006cd8 = icmp eq i32 %v1_10006cd4, 483
  store i1 %v1_10006cd8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cd8, i1* %cr7_eq.global-to-local, align 1
  %v5_10006cdc = sext i32 %v1_10006cd4 to i64
  store i64 %v5_10006cdc, i64* %stack_var_-1916, align 8
  %tmp104 = icmp slt i32 %v1_10006cd4, 484
  br i1 %tmp104, label %dec_label_pc_10006c14.dec_label_pc_10006ae4_crit_edge, label %dec_label_pc_10006ce4

dec_label_pc_10006c14.dec_label_pc_10006ae4_crit_edge: ; preds = %dec_label_pc_10006c14
  %v0_10006ae4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006ae4

dec_label_pc_10006ce4:                            ; preds = %dec_label_pc_10006c14
  %v0_10006ce4 = load i32, i32* @r31, align 4
  store i32 %v0_10006ce4, i32* @r23, align 4
  br label %dec_label_pc_10006ce8

dec_label_pc_10006ce8:                            ; preds = %dec_label_pc_10006ac0, %dec_label_pc_10006ce4
  %v0_10006ce8 = call i32 @function_1000936c()
  store i32 %v0_10006ce8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 %v0_10006ce8, i32* %r24.global-to-local, align 4
  %v2_10006d00 = ptrtoint i32* %stack_var_-1616 to i32
  %v4_10006d4c = zext i8 %tmp56 to i32
  %v1_10006d50 = icmp ult i8 %tmp56, 6
  %v3_10006d50 = icmp eq i8 %tmp56, 6
  %v4_10006d58 = zext i16 %tmp55 to i32
  %v1_10006d60 = icmp ult i16 %tmp55, 23
  %v3_10006d60 = icmp eq i16 %tmp55, 23
  %v4_10006d70 = zext i16 %tmp54 to i32
  %v1_10006d80 = and i32 %tmp53, 131072
  %v3_10006d80 = icmp eq i32 %v1_10006d80, 0
  %v1_10006da8 = add i32 %tmp52, -1
  %v2_10006dac = icmp slt i32 %v1_10006da8, %tmp51
  %v4_10006dac = icmp eq i32 %v1_10006da8, %tmp51
  %v1_10006d88 = and i32 %tmp53, 1048576
  %v3_10006d88 = icmp eq i32 %v1_10006d88, 0
  %v1_10006d90 = and i32 %tmp53, 262144
  %v3_10006d90 = icmp eq i32 %v1_10006d90, 0
  %v1_10006d98 = and i32 %tmp53, 65536
  %v3_10006d98 = icmp eq i32 %v1_10006d98, 0
  %v1_10006d68 = icmp ult i16 %tmp55, 2323
  %v3_10006d68 = icmp eq i16 %tmp55, 2323
  br label %dec_label_pc_10006cf4

dec_label_pc_10006cf4:                            ; preds = %dec_label_pc_10006da0, %dec_label_pc_10006d98, %dec_label_pc_10006d90, %dec_label_pc_10006d70, %dec_label_pc_10006d68, %dec_label_pc_10006d4c, %dec_label_pc_10006d38, %dec_label_pc_10006d88, %dec_label_pc_10006d7c, %dec_label_pc_10006d30, %dec_label_pc_10006ce8
  %v1_10006cfc = phi i32 [ %v0_10006ce8, %dec_label_pc_10006ce8 ], [ %v0_10006d24, %dec_label_pc_10006d30 ], [ %v0_10006d24, %dec_label_pc_10006d7c ], [ %v0_10006d24, %dec_label_pc_10006d88 ], [ %v0_10006d24, %dec_label_pc_10006d38 ], [ %v0_10006d24, %dec_label_pc_10006d4c ], [ %v0_10006d24, %dec_label_pc_10006d68 ], [ %v0_10006d24, %dec_label_pc_10006d70 ], [ %v0_10006d24, %dec_label_pc_10006d90 ], [ %v0_10006d24, %dec_label_pc_10006d98 ], [ %v0_10006d24, %dec_label_pc_10006da0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006cfc = inttoptr i32 %v1_10006cfc to i32*
  store i32 0, i32* %v2_10006cfc, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v3_10006d0c = load i32, i32* @global_var_1001bd94.117, align 4
  store i32 %v3_10006d0c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 268463388, i32* @lr, align 4
  %v6_10006d18 = call i32 @function_100098ac(i32 %v3_10006d0c, i32 %v2_10006d00, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10006d18, i32* %r3.global-to-local, align 4
  %tmp105 = icmp slt i32 %v6_10006d18, 1
  br i1 %tmp105, label %dec_label_pc_10006e3c, label %dec_label_pc_10006d24

dec_label_pc_10006d24:                            ; preds = %dec_label_pc_10006cf4, %dec_label_pc_10006e00
  %v0_10006d30 = phi i32 [ %v6_10006e30, %dec_label_pc_10006e00 ], [ %v6_10006d18, %dec_label_pc_10006cf4 ]
  %v0_10006d24 = load i32, i32* %r24.global-to-local, align 4
  %v1_10006d24 = inttoptr i32 %v0_10006d24 to i32*
  %v2_10006d24 = load i32, i32* %v1_10006d24, align 4
  store i32 %v2_10006d24, i32* %r0.global-to-local, align 4
  %v1_10006d28 = icmp slt i32 %v2_10006d24, 11
  %v3_10006d28 = icmp eq i32 %v2_10006d24, 11
  store i1 %v1_10006d28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d28, label %dec_label_pc_10006e3c, label %dec_label_pc_10006d30

dec_label_pc_10006d30:                            ; preds = %dec_label_pc_10006d24
  %v1_10006d30 = icmp ult i32 %v0_10006d30, 39
  %v3_10006d30 = icmp eq i32 %v0_10006d30, 39
  store i1 %v1_10006d30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d30, i1* %cr7_eq.global-to-local, align 1
  %tmp106 = icmp ult i32 %v0_10006d30, 40
  br i1 %tmp106, label %dec_label_pc_10006cf4, label %dec_label_pc_10006d38

dec_label_pc_10006d38:                            ; preds = %dec_label_pc_10006d30
  store i32 268566528, i32* %r6.global-to-local, align 4
  store i32 %tmp57, i32* %r9.global-to-local, align 4
  %v3_10006d40 = load i32, i32* @global_var_1001bd68.14, align 4
  store i32 %v3_10006d40, i32* %r0.global-to-local, align 4
  %v2_10006d44 = icmp slt i32 %tmp57, %v3_10006d40
  %v4_10006d44 = icmp eq i32 %tmp57, %v3_10006d40
  store i1 %v2_10006d44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006d44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006d44, label %dec_label_pc_10006d4c, label %dec_label_pc_10006cf4

dec_label_pc_10006d4c:                            ; preds = %dec_label_pc_10006d38
  store i32 %v4_10006d4c, i32* %r0.global-to-local, align 4
  store i1 %v1_10006d50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d50, label %dec_label_pc_10006d58, label %dec_label_pc_10006cf4

dec_label_pc_10006d58:                            ; preds = %dec_label_pc_10006d4c
  store i32 %v4_10006d58, i32* %r8.global-to-local, align 4
  store i32 %v4_10006d58, i32* %r0.global-to-local, align 4
  store i1 %v1_10006d60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d60, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d60, label %dec_label_pc_10006d70, label %dec_label_pc_10006d68

dec_label_pc_10006d68:                            ; preds = %dec_label_pc_10006d58
  store i1 %v1_10006d68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006d68, label %dec_label_pc_10006d70, label %dec_label_pc_10006cf4

dec_label_pc_10006d70:                            ; preds = %dec_label_pc_10006d68, %dec_label_pc_10006d58
  store i32 %v4_10006d70, i32* %r0.global-to-local, align 4
  %v1_10006d74 = load i32, i32* @r20, align 4
  %v2_10006d74 = icmp slt i32 %v4_10006d70, %v1_10006d74
  %v4_10006d74 = icmp eq i32 %v4_10006d70, %v1_10006d74
  store i1 %v2_10006d74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006d74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006d74, label %dec_label_pc_10006d7c, label %dec_label_pc_10006cf4

dec_label_pc_10006d7c:                            ; preds = %dec_label_pc_10006d70
  store i32 %tmp53, i32* %r0.global-to-local, align 4
  store i32 %v1_10006d80, i32* %r9.global-to-local, align 4
  br i1 %v3_10006d80, label %dec_label_pc_10006cf4, label %dec_label_pc_10006d88

dec_label_pc_10006d88:                            ; preds = %dec_label_pc_10006d7c
  store i32 %v1_10006d88, i32* %r10.global-to-local, align 4
  br i1 %v3_10006d88, label %dec_label_pc_10006cf4, label %dec_label_pc_10006d90

dec_label_pc_10006d90:                            ; preds = %dec_label_pc_10006d88
  store i32 %v1_10006d90, i32* %r11.global-to-local, align 4
  br i1 %v3_10006d90, label %dec_label_pc_10006d98, label %dec_label_pc_10006cf4

dec_label_pc_10006d98:                            ; preds = %dec_label_pc_10006d90
  store i32 %v1_10006d98, i32* %r6.global-to-local, align 4
  br i1 %v3_10006d98, label %dec_label_pc_10006da0, label %dec_label_pc_10006cf4

dec_label_pc_10006da0:                            ; preds = %dec_label_pc_10006d98
  store i32 %tmp52, i32* %r9.global-to-local, align 4
  store i32 %tmp51, i32* %r0.global-to-local, align 4
  store i32 %v1_10006da8, i32* %r10.global-to-local, align 4
  store i1 %v2_10006dac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006dac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006dac, label %dec_label_pc_10006db4, label %dec_label_pc_10006cf4

dec_label_pc_10006db4:                            ; preds = %dec_label_pc_10006da0
  %v0_10006db4 = load i32, i32* @r31, align 4
  %v1_10006db4 = icmp slt i32 %v0_10006db4, 355
  %v2_10006db4 = icmp sgt i32 %v0_10006db4, 355
  %v3_10006db4 = icmp eq i32 %v0_10006db4, 355
  store i1 %v1_10006db4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006db4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006db4, label %dec_label_pc_10006e3c, label %dec_label_pc_10006dbc

dec_label_pc_10006dbc:                            ; preds = %dec_label_pc_10006db4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v1_10006dc0 = mul i32 %v0_10006db4, 388
  store i32 %v1_10006dc0, i32* %r11.global-to-local, align 4
  %v3_10006dc4 = load i32, i32* @global_var_1001bd90.116, align 4
  store i32 %v3_10006dc4, i32* %r0.global-to-local, align 4
  %v2_10006dc8 = add i32 %v3_10006dc4, %v1_10006dc0
  store i32 %v2_10006dc8, i32* @r3, align 4
  %v1_10006dcc = add i32 %v2_10006dc8, 12
  %v2_10006dcc = inttoptr i32 %v1_10006dcc to i32*
  %v3_10006dcc = load i32, i32* %v2_10006dcc, align 4
  store i32 %v3_10006dcc, i32* %r9.global-to-local, align 4
  %v1_10006dd0 = icmp slt i32 %v3_10006dcc, 0
  %v3_10006dd0 = icmp eq i32 %v3_10006dcc, 0
  store i1 %v1_10006dd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006dd0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006dd0, label %dec_label_pc_10006e00, label %dec_label_pc_10006dd8

dec_label_pc_10006dd8:                            ; preds = %dec_label_pc_10006dbc
  %v1_10006dd8 = sub i32 356, %v0_10006db4
  store i32 %v1_10006dd8, i32* %r11.global-to-local, align 4
  %v1_10006ddc = add i32 %v2_10006dc8, 388
  store i32 %v1_10006ddc, i32* %r9.global-to-local, align 4
  store i32 %v1_10006dd8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006de4

dec_label_pc_10006de4:                            ; preds = %dec_label_pc_10006dec, %dec_label_pc_10006dd8
  %v0_10006dec = phi i32 [ %v1_10006df4, %dec_label_pc_10006dec ], [ %v1_10006ddc, %dec_label_pc_10006dd8 ]
  %v0_10006de8 = phi i32 [ %v1_10006de8, %dec_label_pc_10006dec ], [ %v1_10006dd8, %dec_label_pc_10006dd8 ]
  %v0_10006de4 = phi i32 [ %v1_10006de4, %dec_label_pc_10006dec ], [ %v0_10006db4, %dec_label_pc_10006dd8 ]
  %v1_10006de4 = add i32 %v0_10006de4, 1
  store i32 %v1_10006de4, i32* @r31, align 4
  %v1_10006de8 = add i32 %v0_10006de8, -1
  store i32 %v1_10006de8, i32* %ctr.global-to-local, align 4
  %v2_10006de8 = icmp eq i32 %v1_10006de8, 0
  br i1 %v2_10006de8, label %dec_label_pc_10006e3c, label %dec_label_pc_10006dec

dec_label_pc_10006dec:                            ; preds = %dec_label_pc_10006de4
  %v1_10006dec = add i32 %v0_10006dec, 12
  %v2_10006dec = inttoptr i32 %v1_10006dec to i32*
  %v3_10006dec = load i32, i32* %v2_10006dec, align 4
  store i32 %v3_10006dec, i32* %r0.global-to-local, align 4
  store i32 %v0_10006dec, i32* @r3, align 4
  %v1_10006df4 = add i32 %v0_10006dec, 388
  store i32 %v1_10006df4, i32* %r9.global-to-local, align 4
  %v1_10006df8 = icmp slt i32 %v3_10006dec, 0
  %v3_10006df8 = icmp eq i32 %v3_10006dec, 0
  store i1 %v1_10006df8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006df8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006df8, label %dec_label_pc_10006e00, label %dec_label_pc_10006de4

dec_label_pc_10006e00:                            ; preds = %dec_label_pc_10006dec, %dec_label_pc_10006dbc
  %v1_10006e00 = phi i32 [ %v2_10006dc8, %dec_label_pc_10006dbc ], [ %v0_10006dec, %dec_label_pc_10006dec ]
  %v2_10006e00 = add i32 %v1_10006e00, 16
  %v3_10006e00 = inttoptr i32 %v2_10006e00 to i32*
  store i32 %tmp51, i32* %v3_10006e00, align 4
  %v0_10006e04 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006e04 = trunc i32 %v0_10006e04 to i16
  %v2_10006e04 = load i32, i32* @r3, align 4
  %v3_10006e04 = add i32 %v2_10006e04, 20
  %v4_10006e04 = inttoptr i32 %v3_10006e04 to i16*
  store i16 %v1_10006e04, i16* %v4_10006e04, align 2
  store i32 ptrtoint (i32* @global_var_10006e0c.141 to i32), i32* @lr, align 4
  %v0_10006e08 = call i32 @function_10006540()
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10006e10 = load i32, i32* %r24.global-to-local, align 4
  %v2_10006e10 = inttoptr i32 %v1_10006e10 to i32*
  store i32 0, i32* %v2_10006e10, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  %v3_10006e20 = load i32, i32* @global_var_1001bd94.117, align 4
  store i32 %v3_10006e20, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268463668, i32* @lr, align 4
  %v6_10006e30 = call i32 @function_100098ac(i32 %v3_10006e20, i32 %v2_10006d00, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10006e30, i32* %r3.global-to-local, align 4
  %v2_10006e34 = icmp sgt i32 %v6_10006e30, 0
  br i1 %v2_10006e34, label %dec_label_pc_10006d24, label %dec_label_pc_10006e3c

dec_label_pc_10006e3c:                            ; preds = %dec_label_pc_10006cf4, %dec_label_pc_10006e00, %dec_label_pc_10006db4, %dec_label_pc_10006d24, %dec_label_pc_10006de4
  store i32 32, i32* %r6.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10006e54138 = load i32, i32* @r1, align 4
  %v3_10006e54139 = add i32 %v2_10006e54138, 64
  %v4_10006e54140 = inttoptr i32 %v3_10006e54139 to i32*
  store i32 0, i32* %v4_10006e54140, align 4
  %v0_10006e58141 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006e58142 = add i32 %v0_10006e58141, -1
  store i32 %v1_10006e58142, i32* %ctr.global-to-local, align 4
  %v2_10006e58143 = icmp eq i32 %v1_10006e58142, 0
  br i1 %v2_10006e58143, label %dec_label_pc_10006e5c, label %dec_label_pc_10006e4c.dec_label_pc_10006e4c_crit_edge

dec_label_pc_10006e4c.dec_label_pc_10006e4c_crit_edge: ; preds = %dec_label_pc_10006e3c, %dec_label_pc_10006e4c.dec_label_pc_10006e4c_crit_edge
  %v0_10006e4c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006e54.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10006e4c = add i32 %v0_10006e4c.pre, 64
  store i32 %v1_10006e4c, i32* %r10.global-to-local, align 4
  %v1_10006e50 = add i32 %v0_10006e4c.pre, 4
  store i32 %v1_10006e50, i32* %r9.global-to-local, align 4
  %v2_10006e54 = load i32, i32* @r1, align 4
  %v3_10006e54 = add i32 %v2_10006e54, %v1_10006e4c
  %v4_10006e54 = inttoptr i32 %v3_10006e54 to i32*
  store i32 %v0_10006e54.pre, i32* %v4_10006e54, align 4
  %v0_10006e58 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006e58 = add i32 %v0_10006e58, -1
  store i32 %v1_10006e58, i32* %ctr.global-to-local, align 4
  %v2_10006e58 = icmp eq i32 %v1_10006e58, 0
  br i1 %v2_10006e58, label %dec_label_pc_10006e5c, label %dec_label_pc_10006e4c.dec_label_pc_10006e4c_crit_edge

dec_label_pc_10006e5c:                            ; preds = %dec_label_pc_10006e4c.dec_label_pc_10006e4c_crit_edge, %dec_label_pc_10006e3c
  store i32 32, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006e6c130 = load i32, i32* @r15, align 4
  %v4_10006e6c131 = inttoptr i32 %v2_10006e6c130 to i32*
  store i32 0, i32* %v4_10006e6c131, align 4
  %v0_10006e70132 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006e70133 = add i32 %v0_10006e70132, 4
  store i32 %v1_10006e70133, i32* %r9.global-to-local, align 4
  %v0_10006e74134 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006e74135 = add i32 %v0_10006e74134, -1
  store i32 %v1_10006e74135, i32* %ctr.global-to-local, align 4
  %v2_10006e74136 = icmp eq i32 %v1_10006e74135, 0
  br i1 %v2_10006e74136, label %dec_label_pc_10006e78, label %dec_label_pc_10006e6c.dec_label_pc_10006e6c_crit_edge

dec_label_pc_10006e6c.dec_label_pc_10006e6c_crit_edge: ; preds = %dec_label_pc_10006e5c, %dec_label_pc_10006e6c.dec_label_pc_10006e6c_crit_edge
  %v1_10006e70137 = phi i32 [ %v1_10006e70, %dec_label_pc_10006e6c.dec_label_pc_10006e6c_crit_edge ], [ %v1_10006e70133, %dec_label_pc_10006e5c ]
  %v0_10006e6c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10006e6c = load i32, i32* @r15, align 4
  %v3_10006e6c = add i32 %v2_10006e6c, %v1_10006e70137
  %v4_10006e6c = inttoptr i32 %v3_10006e6c to i32*
  store i32 %v0_10006e6c.pre, i32* %v4_10006e6c, align 4
  %v0_10006e70 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006e70 = add i32 %v0_10006e70, 4
  store i32 %v1_10006e70, i32* %r9.global-to-local, align 4
  %v0_10006e74 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006e74 = add i32 %v0_10006e74, -1
  store i32 %v1_10006e74, i32* %ctr.global-to-local, align 4
  %v2_10006e74 = icmp eq i32 %v1_10006e74, 0
  br i1 %v2_10006e74, label %dec_label_pc_10006e78, label %dec_label_pc_10006e6c.dec_label_pc_10006e6c_crit_edge

dec_label_pc_10006e78:                            ; preds = %dec_label_pc_10006e6c.dec_label_pc_10006e6c_crit_edge, %dec_label_pc_10006e5c
  store i32 0, i32* @r29, align 4
  store i32 0, i32* @r30, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  %v0_10006e8c = load i32, i32* %r0.global-to-local, align 4
  %v5_10006e8c = sext i32 %v0_10006e8c to i64
  store i64 %v5_10006e8c, i64* %stack_var_-1916, align 8
  %v2_10007264 = ptrtoint i32* %stack_var_-1928 to i32
  br label %dec_label_pc_10006efc

dec_label_pc_10006e94:                            ; preds = %dec_label_pc_10006efc
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006e98 = load i32, i32* @global_var_1001bd8c.111, align 4
  store i32 %v3_10006e98, i32* %r0.global-to-local, align 4
  %v1_10006e9c = add i32 %v2_10006f0c, 8
  %v2_10006e9c = inttoptr i32 %v1_10006e9c to i32*
  %v3_10006e9c = load i32, i32* %v2_10006e9c, align 4
  store i32 %v3_10006e9c, i32* %r9.global-to-local, align 4
  %v2_10006ea0 = sub i32 %v3_10006e98, %v3_10006e9c
  store i32 %v2_10006ea0, i32* %r0.global-to-local, align 4
  %v2_10006ea4 = icmp ult i32 %v2_10006ea0, 30
  %v3_10006ea4 = icmp ugt i32 %v2_10006ea0, 30
  %v4_10006ea4 = icmp eq i32 %v2_10006ea0, 30
  store i1 %v2_10006ea4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006ea4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ea4, label %dec_label_pc_10006f40, label %dec_label_pc_10006eac

dec_label_pc_10006eac:                            ; preds = %dec_label_pc_10006f24, %dec_label_pc_10006e94
  %v1_10006eac = icmp slt i32 %v3_10006f10, 1
  store i1 %v1_10006eac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f14, i1* %cr7_eq.global-to-local, align 1
  %v1_10007260 = add i32 %v2_10006f0c, 4
  %v2_10007260 = inttoptr i32 %v1_10007260 to i32*
  %v3_10007260 = load i32, i32* %v2_10007260, align 4
  store i32 %v3_10007260, i32* %r3.global-to-local, align 4
  br i1 %v3_10006f14, label %dec_label_pc_10007260, label %dec_label_pc_10006eb4

dec_label_pc_10006eb4:                            ; preds = %dec_label_pc_10006eac
  store i32 %v2_10007264, i32* %r6.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10006ec0 = call i32 @__asm_rlwinm(i32 %v3_10007260, i32 29, i32 3, i32 29)
  %v0_10006ec4 = load i32, i32* @r29, align 4
  %v2_10006ec4 = icmp slt i32 %v0_10006ec4, %v3_10007260
  %v4_10006ec4 = icmp eq i32 %v0_10006ec4, %v3_10007260
  store i1 %v2_10006ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006ec4, i1* %cr7_eq.global-to-local, align 1
  %v1_10006ec8 = load i32, i32* %r6.global-to-local, align 4
  %v2_10006ec8 = add i32 %v1_10006ec8, %v1_10006ec0
  store i32 %v2_10006ec8, i32* %r11.global-to-local, align 4
  %v1_10006ecc = urem i32 %v3_10007260, 32
  store i32 %v1_10006ecc, i32* %r10.global-to-local, align 4
  %v1_10006ed0 = add i32 %v2_10006ec8, 56
  %v2_10006ed0 = inttoptr i32 %v1_10006ed0 to i32*
  %v3_10006ed0 = load i32, i32* %v2_10006ed0, align 4
  %v0_10006ed4 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006ed4 = shl i32 %v0_10006ed4, %v1_10006ecc
  store i32 %v3_10006ed4, i32* %r0.global-to-local, align 4
  %v2_10006ed8 = or i32 %v3_10006ed4, %v3_10006ed0
  store i32 %v2_10006ed8, i32* %r9.global-to-local, align 4
  store i32 %v2_10006ed8, i32* %v2_10006ed0, align 4
  br i1 %v2_10006ec4, label %dec_label_pc_10006ee4, label %dec_label_pc_10006ee8

dec_label_pc_10006ee4:                            ; preds = %dec_label_pc_10006eb4
  store i32 %v3_10007260, i32* @r29, align 4
  br label %dec_label_pc_10006ee8

dec_label_pc_10006ee8:                            ; preds = %dec_label_pc_10007260, %dec_label_pc_10006eb4, %dec_label_pc_10006f1c, %dec_label_pc_1000728c, %dec_label_pc_10007254, %dec_label_pc_10006ee4
  %v3_10006ee8 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006ee8 = trunc i64 %v3_10006ee8 to i32
  %v1_10006eec = add i32 %v4_10006ee8, 1
  store i32 %v1_10006eec, i32* %r9.global-to-local, align 4
  %v1_10006ef0 = icmp slt i32 %v1_10006eec, 355
  %v2_10006ef0 = icmp sgt i32 %v1_10006eec, 355
  %v3_10006ef0 = icmp eq i32 %v1_10006eec, 355
  store i1 %v1_10006ef0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ef0, i1* %cr7_eq.global-to-local, align 1
  %v5_10006ef4 = sext i32 %v1_10006eec to i64
  store i64 %v5_10006ef4, i64* %stack_var_-1916, align 8
  br i1 %v2_10006ef0, label %dec_label_pc_10006f90, label %dec_label_pc_10006efc

dec_label_pc_10006efc:                            ; preds = %dec_label_pc_10006f74, %dec_label_pc_10006ee8, %dec_label_pc_10006e78
  %v0_10006efc = phi i32 [ 0, %dec_label_pc_10006e78 ], [ %v1_10006eec, %dec_label_pc_10006ee8 ], [ %v1_10006f80, %dec_label_pc_10006f74 ]
  %v1_10006efc = mul i32 %v0_10006efc, 388
  store i32 %v1_10006efc, i32* %r9.global-to-local, align 4
  store i32 268566528, i32* %r6.global-to-local, align 4
  %v3_10006f04 = load i32, i32* @global_var_1001bd90.116, align 4
  store i32 %v3_10006f04, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_10006f0c = add i32 %v3_10006f04, %v1_10006efc
  store i32 %v2_10006f0c, i32* @r31, align 4
  %v1_10006f10 = add i32 %v2_10006f0c, 12
  %v2_10006f10 = inttoptr i32 %v1_10006f10 to i32*
  %v3_10006f10 = load i32, i32* %v2_10006f10, align 4
  store i32 %v3_10006f10, i32* %r10.global-to-local, align 4
  %v1_10006f14 = icmp eq i32 %v3_10006f10, 0
  %v2_10006f14 = icmp ugt i32 %v3_10006f10, 1
  %v3_10006f14 = icmp eq i32 %v3_10006f10, 1
  store i1 %v1_10006f14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006f14, label %dec_label_pc_10006e94, label %dec_label_pc_10006f1c

dec_label_pc_10006f1c:                            ; preds = %dec_label_pc_10006efc
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10006f14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10006f14, label %dec_label_pc_10006ee8, label %dec_label_pc_10006f24

dec_label_pc_10006f24:                            ; preds = %dec_label_pc_10006f1c
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v3_10006f2c = load i32, i32* @global_var_1001bd8c.111, align 4
  store i32 %v3_10006f2c, i32* %r0.global-to-local, align 4
  %v1_10006f30 = add i32 %v2_10006f0c, 8
  %v2_10006f30 = inttoptr i32 %v1_10006f30 to i32*
  %v3_10006f30 = load i32, i32* %v2_10006f30, align 4
  store i32 %v3_10006f30, i32* %r9.global-to-local, align 4
  %v2_10006f34 = sub i32 %v3_10006f2c, %v3_10006f30
  store i32 %v2_10006f34, i32* %r0.global-to-local, align 4
  %v2_10006f38 = icmp ult i32 %v2_10006f34, 5
  %v3_10006f38 = icmp ugt i32 %v2_10006f34, 5
  %v4_10006f38 = icmp eq i32 %v2_10006f34, 5
  store i1 %v2_10006f38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006f38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f38, label %dec_label_pc_10006f40, label %dec_label_pc_10006eac

dec_label_pc_10006f40:                            ; preds = %dec_label_pc_10006f24, %dec_label_pc_10006e94
  %v1_10006f40 = add i32 %v2_10006f0c, 4
  %v2_10006f40 = inttoptr i32 %v1_10006f40 to i32*
  %v3_10006f40 = load i32, i32* %v2_10006f40, align 4
  store i32 %v3_10006f40, i32* %r3.global-to-local, align 4
  store i32 268463944, i32* @lr, align 4
  %v0_10006f44 = call i32 @function_10008c98()
  store i32 %v0_10006f44, i32* %r3.global-to-local, align 4
  %v0_10006f48 = load i32, i32* @r31, align 4
  %v1_10006f48 = add i32 %v0_10006f48, 12
  %v2_10006f48 = inttoptr i32 %v1_10006f48 to i32*
  %v3_10006f48 = load i32, i32* %v2_10006f48, align 4
  store i32 %v3_10006f48, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10006f50 = icmp ult i32 %v3_10006f48, 2
  %v3_10006f50 = icmp eq i32 %v3_10006f48, 2
  store i1 %v1_10006f50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f50, i1* %cr7_eq.global-to-local, align 1
  %v2_10006f54 = add i32 %v0_10006f48, 4
  %v3_10006f54 = inttoptr i32 %v2_10006f54 to i32*
  store i32 -1, i32* %v3_10006f54, align 4
  %tmp108 = icmp ult i32 %v3_10006f48, 3
  br i1 %tmp108, label %dec_label_pc_10007254, label %dec_label_pc_10006f5c

dec_label_pc_10006f5c:                            ; preds = %dec_label_pc_10006f40
  %v0_10006f5c = load i32, i32* @r31, align 4
  %v1_10006f5c = add i32 %v0_10006f5c, 384
  %v2_10006f5c = inttoptr i32 %v1_10006f5c to i8*
  %v3_10006f5c = load i8, i8* %v2_10006f5c, align 1
  %v4_10006f5c = zext i8 %v3_10006f5c to i32
  %v1_10006f60 = add nuw nsw i32 %v4_10006f5c, 1
  %v1_10006f64 = urem i32 %v1_10006f60, 256
  store i32 %v1_10006f64, i32* %r9.global-to-local, align 4
  %v1_10006f68 = icmp ult i32 %v1_10006f64, 10
  %v3_10006f68 = icmp eq i32 %v1_10006f64, 10
  store i1 %v1_10006f68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f68, i1* %cr7_eq.global-to-local, align 1
  %v1_10006f6c = trunc i32 %v1_10006f60 to i8
  store i8 %v1_10006f6c, i8* %v2_10006f5c, align 1
  %v0_10006f70 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006f70, label %dec_label_pc_10007254, label %dec_label_pc_10006f74

dec_label_pc_10006f74:                            ; preds = %dec_label_pc_10006f5c
  %v0_10006f74 = load i32, i32* @r31, align 4
  store i32 %v0_10006f74, i32* @r3, align 4
  store i32 268463996, i32* @lr, align 4
  %v0_10006f78 = call i32 @function_10006540()
  store i32 %v0_10006f78, i32* %r3.global-to-local, align 4
  %v3_10006f7c = load i64, i64* %stack_var_-1916, align 8
  %v4_10006f7c = trunc i64 %v3_10006f7c to i32
  %v1_10006f80 = add i32 %v4_10006f7c, 1
  store i32 %v1_10006f80, i32* %r9.global-to-local, align 4
  %v1_10006f84 = icmp slt i32 %v1_10006f80, 355
  %v3_10006f84 = icmp eq i32 %v1_10006f80, 355
  store i1 %v1_10006f84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f84, i1* %cr7_eq.global-to-local, align 1
  %v5_10006f88 = sext i32 %v1_10006f80 to i64
  store i64 %v5_10006f88, i64* %stack_var_-1916, align 8
  %tmp109 = icmp slt i32 %v1_10006f80, 356
  br i1 %tmp109, label %dec_label_pc_10006efc, label %dec_label_pc_10006f90

dec_label_pc_10006f90:                            ; preds = %dec_label_pc_10006f74, %dec_label_pc_10006ee8
  %v0_10006f90 = load i32, i32* @r29, align 4
  %v1_10006f90 = load i32, i32* @r30, align 4
  %v2_10006f90 = icmp slt i32 %v0_10006f90, %v1_10006f90
  %v4_10006f90 = icmp eq i32 %v0_10006f90, %v1_10006f90
  store i1 %v2_10006f90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006f90, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* @r31, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v0_10006f90, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_10006f90, label %dec_label_pc_10006fac, label %dec_label_pc_10006fb0

dec_label_pc_10006fac:                            ; preds = %dec_label_pc_10006f90
  store i32 %v1_10006f90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006fb0

dec_label_pc_10006fb0:                            ; preds = %dec_label_pc_10006f90, %dec_label_pc_10006fac
  %v0_10006fc0 = phi i32 [ %v0_10006f90, %dec_label_pc_10006f90 ], [ %v1_10006f90, %dec_label_pc_10006fac ]
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_10006fb4 = ptrtoint i32* %stack_var_-1872 to i32
  %v1_10006fb8 = ptrtoint i32* %stack_var_-1744 to i32
  store i32 %v1_10006fb8, i32* %r5.global-to-local, align 4
  %v2_10006fbc = ptrtoint i32* %stack_var_-1908 to i32
  store i32 %v2_10006fbc, i32* %r7.global-to-local, align 4
  %v1_10006fc0 = add i32 %v0_10006fc0, 1
  store i32 %v1_10006fc0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006fc8.142 to i32), i32* @lr, align 4
  %v5_10006fc4 = call i32 @function_10008f60(i32 %v1_10006fc0, i32 %v2_10006fb4, i32 %v1_10006fb8, i32 0, i32 %v2_10006fbc)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268464080, i32* @lr, align 4
  %v0_10006fcc = call i32 @function_10009068()
  store i32 %v0_10006fcc, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10006fcc, i32* @global_var_1001bd8c.111, align 4
  %v0_10006fdc = load i32, i32* @r31, align 4
  %v5_10006fdc = sext i32 %v0_10006fdc to i64
  store i64 %v5_10006fdc, i64* %stack_var_-1916, align 8
  %v2_10007cfc = ptrtoint i32* %stack_var_-1920 to i32
  %v2_10007d0c = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_10006ff8

dec_label_pc_10006fe4:                            ; preds = %dec_label_pc_10007054, %dec_label_pc_10007bd0, %dec_label_pc_10007034, %dec_label_pc_10006ff8, %dec_label_pc_10007eb4, %dec_label_pc_10007e88, %dec_label_pc_10007c04
  %v3_10006fe4 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006fe4 = trunc i64 %v3_10006fe4 to i32
  store i32 %v4_10006fe4, i32* %r9.global-to-local, align 4
  %v1_10006fe8 = add i32 %v4_10006fe4, 1
  store i32 %v1_10006fe8, i32* %r0.global-to-local, align 4
  %v1_10006fec = icmp slt i32 %v1_10006fe8, 355
  %v2_10006fec = icmp sgt i32 %v1_10006fe8, 355
  %v3_10006fec = icmp eq i32 %v1_10006fe8, 355
  store i1 %v1_10006fec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006fec, i1* %cr7_eq.global-to-local, align 1
  %v5_10006ff0 = sext i32 %v1_10006fe8 to i64
  store i64 %v5_10006ff0, i64* %stack_var_-1916, align 8
  br i1 %v2_10006fec, label %dec_label_pc_10006ac0, label %dec_label_pc_10006ff8

dec_label_pc_10006ff8:                            ; preds = %dec_label_pc_10006fe4, %dec_label_pc_10006fb0
  %v0_10006ff8 = phi i32 [ %v1_10006fe8, %dec_label_pc_10006fe4 ], [ 0, %dec_label_pc_10006fb0 ]
  %v1_10006ff8 = mul i32 %v0_10006ff8, 388
  store i32 %v1_10006ff8, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_10007000 = load i32, i32* @global_var_1001bd90.116, align 4
  store i32 %v3_10007000, i32* %r9.global-to-local, align 4
  %v2_10007004 = add i32 %v3_10007000, %v1_10006ff8
  store i32 %v2_10007004, i32* @r31, align 4
  %v1_10007008 = add i32 %v2_10007004, 4
  %v2_10007008 = inttoptr i32 %v1_10007008 to i32*
  %v3_10007008 = load i32, i32* %v2_10007008, align 4
  store i32 %v3_10007008, i32* %r3.global-to-local, align 4
  %v1_1000700c = icmp slt i32 %v3_10007008, -1
  %v3_1000700c = icmp eq i32 %v3_10007008, -1
  store i1 %v1_1000700c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000700c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000700c, label %dec_label_pc_10006fe4, label %dec_label_pc_10007014

dec_label_pc_10007014:                            ; preds = %dec_label_pc_10006ff8
  store i32 %v2_10007264, i32* %r11.global-to-local, align 4
  %v1_10007018 = call i32 @__asm_rlwinm(i32 %v3_10007008, i32 29, i32 3, i32 29)
  %v1_1000701c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000701c = add i32 %v1_1000701c, %v1_10007018
  store i32 %v2_1000701c, i32* %r9.global-to-local, align 4
  %v0_10007020 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007020 = urem i32 %v0_10007020, 32
  store i32 %v1_10007020, i32* %r11.global-to-local, align 4
  %v1_10007024 = add i32 %v2_1000701c, 184
  %v2_10007024 = inttoptr i32 %v1_10007024 to i32*
  %v3_10007024 = load i32, i32* %v2_10007024, align 4
  %v3_10007028 = lshr i32 %v3_10007024, %v1_10007020
  store i32 %v3_10007028, i32* %r0.global-to-local, align 4
  %v1_1000702c = urem i32 %v3_10007028, 2
  store i32 %v1_1000702c, i32* %r6.global-to-local, align 4
  %v3_1000702c = icmp eq i32 %v1_1000702c, 0
  br i1 %v3_1000702c, label %dec_label_pc_10007034, label %dec_label_pc_10007cf8

dec_label_pc_10007034:                            ; preds = %dec_label_pc_10007014, %dec_label_pc_10007d90
  %v0_10007038 = phi i32 [ %v0_10007020, %dec_label_pc_10007014 ], [ %v0_10007038.pre, %dec_label_pc_10007d90 ]
  store i32 %v2_10007264, i32* %r0.global-to-local, align 4
  %v1_10007038 = call i32 @__asm_rlwinm(i32 %v0_10007038, i32 29, i32 3, i32 29)
  %v1_1000703c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000703c = add i32 %v1_1000703c, %v1_10007038
  store i32 %v2_1000703c, i32* %r9.global-to-local, align 4
  %v0_10007040 = load i32, i32* %r3.global-to-local, align 4
  %v1_10007040 = urem i32 %v0_10007040, 32
  store i32 %v1_10007040, i32* %r11.global-to-local, align 4
  %v1_10007044 = add i32 %v2_1000703c, 56
  %v2_10007044 = inttoptr i32 %v1_10007044 to i32*
  %v3_10007044 = load i32, i32* %v2_10007044, align 4
  %v3_10007048 = lshr i32 %v3_10007044, %v1_10007040
  store i32 %v3_10007048, i32* %r0.global-to-local, align 4
  %v1_1000704c = urem i32 %v3_10007048, 2
  store i32 %v1_1000704c, i32* %r6.global-to-local, align 4
  %v3_1000704c = icmp eq i32 %v1_1000704c, 0
  br i1 %v3_1000704c, label %dec_label_pc_10006fe4, label %dec_label_pc_10007054.preheader

dec_label_pc_10007054.preheader:                  ; preds = %dec_label_pc_10007034
  %v0_10007054.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007054

dec_label_pc_10007054:                            ; preds = %dec_label_pc_10007054.preheader, %dec_label_pc_100070c0
  %v0_10007c20 = phi i32 [ %v0_10007054.pre, %dec_label_pc_10007054.preheader ], [ %v0_100070d8, %dec_label_pc_100070c0 ]
  %v1_10007054 = add i32 %v0_10007c20, 12
  %v2_10007054 = inttoptr i32 %v1_10007054 to i32*
  %v3_10007054 = load i32, i32* %v2_10007054, align 4
  store i32 %v3_10007054, i32* %r10.global-to-local, align 4
  %v1_10007058 = icmp slt i32 %v3_10007054, 0
  %v3_10007058 = icmp eq i32 %v3_10007054, 0
  store i1 %v1_10007058, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007058, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007058, label %dec_label_pc_10006fe4, label %dec_label_pc_10007060

dec_label_pc_10007060:                            ; preds = %dec_label_pc_10007054
  %v1_10007060 = add i32 %v0_10007c20, 24
  %v2_10007060 = inttoptr i32 %v1_10007060 to i32*
  %v3_10007060 = load i32, i32* %v2_10007060, align 4
  store i32 %v3_10007060, i32* %r0.global-to-local, align 4
  %v1_10007064 = add i32 %v0_10007c20, 28
  store i32 %v1_10007064, i32* %r26.global-to-local, align 4
  %v1_10007068 = icmp slt i32 %v3_10007060, 356
  %v3_10007068 = icmp eq i32 %v3_10007060, 356
  store i1 %v1_10007068, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007068, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007068, label %dec_label_pc_10007c18, label %dec_label_pc_10007070

dec_label_pc_10007070:                            ; preds = %dec_label_pc_10007060, %dec_label_pc_10007c18
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10007078 = load i32, i32* %r24.global-to-local, align 4
  %v2_10007078 = inttoptr i32 %v1_10007078 to i32*
  store i32 0, i32* %v2_10007078, align 4
  %v0_1000707c = load i32, i32* @r31, align 4
  %v1_1000707c = add i32 %v0_1000707c, 24
  %v2_1000707c = inttoptr i32 %v1_1000707c to i32*
  %v3_1000707c = load i32, i32* %v2_1000707c, align 4
  store i32 %v3_1000707c, i32* %r5.global-to-local, align 4
  %v1_10007080 = add i32 %v0_1000707c, 4
  %v2_10007080 = inttoptr i32 %v1_10007080 to i32*
  %v3_10007080 = load i32, i32* %v2_10007080, align 4
  store i32 %v3_10007080, i32* %r3.global-to-local, align 4
  %v0_10007084 = load i32, i32* %r26.global-to-local, align 4
  %v2_10007084 = add i32 %v0_10007084, %v3_1000707c
  store i32 %v2_10007084, i32* @r29, align 4
  %v1_10007088 = sub i32 356, %v3_1000707c
  store i32 %v1_10007088, i32* %r5.global-to-local, align 4
  store i32 268464276, i32* @lr, align 4
  %v4_10007090 = call i32 @function_10009874(i32 %v3_10007080, i32 %v2_10007084, i32 %v1_10007088, i32 16384)
  store i32 %v4_10007090, i32* %r3.global-to-local, align 4
  %tmp111 = icmp slt i32 %v4_10007090, 1
  br i1 %tmp111, label %dec_label_pc_10007bc4, label %dec_label_pc_1000709c

dec_label_pc_1000709c:                            ; preds = %dec_label_pc_10007070
  store i32 %v4_10007090, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100070a8

dec_label_pc_100070a8:                            ; preds = %dec_label_pc_100070b8, %dec_label_pc_1000709c
  %v0_100070bc39 = phi i32 [ %v1_100070bc, %dec_label_pc_100070b8 ], [ %v4_10007090, %dec_label_pc_1000709c ]
  %v1_100070b4 = phi i32 [ %v1_100070b8, %dec_label_pc_100070b8 ], [ 0, %dec_label_pc_1000709c ]
  %v1_100070a8 = load i32, i32* @r29, align 4
  %v2_100070a8 = add i32 %v1_100070a8, %v1_100070b4
  %v3_100070a8 = inttoptr i32 %v2_100070a8 to i8*
  %v4_100070a8 = load i8, i8* %v3_100070a8, align 1
  %v5_100070a8 = zext i8 %v4_100070a8 to i32
  store i32 %v5_100070a8, i32* %r0.global-to-local, align 4
  %v3_100070ac = icmp eq i8 %v4_100070a8, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070ac, label %dec_label_pc_100070b4, label %dec_label_pc_100070b8

dec_label_pc_100070b4:                            ; preds = %dec_label_pc_100070a8
  %v0_100070b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100070b4 = trunc i32 %v0_100070b4 to i8
  store i8 %v3_100070b4, i8* %v3_100070a8, align 1
  %v0_100070b8.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100070bc.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100070b8

dec_label_pc_100070b8:                            ; preds = %dec_label_pc_100070a8, %dec_label_pc_100070b4
  %v0_100070bc = phi i32 [ %v0_100070bc39, %dec_label_pc_100070a8 ], [ %v0_100070bc.pre, %dec_label_pc_100070b4 ]
  %v0_100070b8 = phi i32 [ %v1_100070b4, %dec_label_pc_100070a8 ], [ %v0_100070b8.pre, %dec_label_pc_100070b4 ]
  %v1_100070b8 = add i32 %v0_100070b8, 1
  store i32 %v1_100070b8, i32* %r9.global-to-local, align 4
  %v1_100070bc = add i32 %v0_100070bc, -1
  store i32 %v1_100070bc, i32* %ctr.global-to-local, align 4
  %v2_100070bc = icmp eq i32 %v1_100070bc, 0
  br i1 %v2_100070bc, label %dec_label_pc_100070c0, label %dec_label_pc_100070a8

dec_label_pc_100070c0:                            ; preds = %dec_label_pc_100070b8, %dec_label_pc_10007bc8
  %v0_100070c0 = load i32, i32* @r31, align 4
  %v1_100070c0 = add i32 %v0_100070c0, 24
  %v2_100070c0 = inttoptr i32 %v1_100070c0 to i32*
  %v3_100070c0 = load i32, i32* %v2_100070c0, align 4
  store i32 268566528, i32* %r6.global-to-local, align 4
  %v3_100070c8 = load i32, i32* @global_var_1001bd8c.111, align 4
  store i32 %v3_100070c8, i32* %r0.global-to-local, align 4
  %v2_100070cc = add i32 %v3_100070c0, %v4_10007090
  store i32 %v2_100070cc, i32* %r5.global-to-local, align 4
  store i32 %v2_100070cc, i32* %v2_100070c0, align 4
  %v0_100070d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100070d4 = load i32, i32* @r31, align 4
  %v2_100070d4 = add i32 %v1_100070d4, 8
  %v3_100070d4 = inttoptr i32 %v2_100070d4 to i32*
  store i32 %v0_100070d4, i32* %v3_100070d4, align 4
  %v0_100070d8 = load i32, i32* @r31, align 4
  %v1_100070d8 = add i32 %v0_100070d8, 12
  %v2_100070d8 = inttoptr i32 %v1_100070d8 to i32*
  %v3_100070d8 = load i32, i32* %v2_100070d8, align 4
  store i32 %v3_100070d8, i32* %r10.global-to-local, align 4
  %v1_100070dc = icmp ult i32 %v3_100070d8, 10
  %v2_100070dc = icmp ugt i32 %v3_100070d8, 10
  %v3_100070dc = icmp eq i32 %v3_100070d8, 10
  store i1 %v1_100070dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100070dc, label %dec_label_pc_10007054, label %dec_label_pc_100070e4

dec_label_pc_100070e4:                            ; preds = %dec_label_pc_100070c0
  store i32 ptrtoint (i32* @global_var_1000b6d4.136 to i32), i32* %r11.global-to-local, align 4
  %v1_100070e8 = mul i32 %v3_100070d8, 4
  store i32 %v1_100070e8, i32* %r0.global-to-local, align 4
  %v2_100070ec = add i32 %v1_100070e8, ptrtoint (i32* @global_var_1000b6d4.136 to i32)
  %v3_100070ec = inttoptr i32 %v2_100070ec to i32*
  %v4_100070ec = load i32, i32* %v3_100070ec, align 4
  %v2_100070f0 = add i32 %v4_100070ec, ptrtoint (i32* @global_var_1000b6d4.136 to i32)
  store i32 %v2_100070f0, i32* %r9.global-to-local, align 4
  store i32 %v2_100070f0, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_100070f0)
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_1000710c = load i32, i32* @r28, align 4
  store i32 %v0_1000710c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-1912, align 4
  store i32 268464408, i32* @lr, align 4
  %v4_10007114 = call i32 @function_100098ec(i32 %v0_1000710c, i32 %v2_10007d0c, i32 1, i32 16384)
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007124 = load i32, i32* @r28, align 4
  store i32 %v0_10007124, i32* %r3.global-to-local, align 4
  store i32 268464428, i32* @lr, align 4
  %v4_10007128 = call i32 @function_100098ec(i32 %v0_10007124, i32 %v2_10007cfc, i32 4, i32 16384)
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007138 = load i32, i32* @r28, align 4
  store i32 %v0_10007138, i32* %r3.global-to-local, align 4
  store i32 268464448, i32* @lr, align 4
  %v4_1000713c = call i32 @function_100098ec(i32 %v0_10007138, i32 %v2_10007264, i32 2, i32 16384)
  %v0_10007140 = load i32, i32* @r25, align 4
  %v1_10007140 = add i32 %v0_10007140, 12
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_1000714c = load i32, i32* @r28, align 4
  store i32 %v0_1000714c, i32* %r3.global-to-local, align 4
  store i32 268464468, i32* @lr, align 4
  %v4_10007150 = call i32 @function_100098ec(i32 %v0_1000714c, i32 %v1_10007140, i32 1, i32 16384)
  store i32 %v4_10007150, i32* %r3.global-to-local, align 4
  %v0_10007154 = load i32, i32* @r25, align 4
  %v1_10007154 = inttoptr i32 %v0_10007154 to i32*
  %v2_10007154 = load i32, i32* %v1_10007154, align 4
  %v1_10007158 = add i32 %v0_10007154, 12
  %v2_10007158 = inttoptr i32 %v1_10007158 to i8*
  %v3_10007158 = load i8, i8* %v2_10007158, align 1
  %v4_10007158 = zext i8 %v3_10007158 to i32
  store i32 %v4_10007158, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007160 = load i32, i32* @r28, align 4
  store i32 %v0_10007160, i32* %r3.global-to-local, align 4
  store i32 268464488, i32* @lr, align 4
  %v4_10007164 = call i32 @function_100098ec(i32 %v0_10007160, i32 %v2_10007154, i32 %v4_10007158, i32 16384)
  %v0_10007168 = load i32, i32* @r25, align 4
  %v1_10007168 = add i32 %v0_10007168, 13
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10007174 = load i32, i32* @r28, align 4
  store i32 %v0_10007174, i32* %r3.global-to-local, align 4
  store i32 268464508, i32* @lr, align 4
  %v4_10007178 = call i32 @function_100098ec(i32 %v0_10007174, i32 %v1_10007168, i32 1, i32 16384)
  store i32 %v4_10007178, i32* %r3.global-to-local, align 4
  %v0_1000717c = load i32, i32* @r25, align 4
  %v1_1000717c = add i32 %v0_1000717c, 13
  %v2_1000717c = inttoptr i32 %v1_1000717c to i8*
  %v3_1000717c = load i8, i8* %v2_1000717c, align 1
  %v4_1000717c = zext i8 %v3_1000717c to i32
  store i32 %v4_1000717c, i32* %r5.global-to-local, align 4
  %v1_10007180 = add i32 %v0_1000717c, 4
  %v2_10007180 = inttoptr i32 %v1_10007180 to i32*
  %v3_10007180 = load i32, i32* %v2_10007180, align 4
  %v0_10007184 = load i32, i32* @r28, align 4
  store i32 %v0_10007184, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 268464528, i32* @lr, align 4
  %v4_1000718c = call i32 @function_100098ec(i32 %v0_10007184, i32 %v3_10007180, i32 %v4_1000717c, i32 16384)
  %v0_10007190 = load i32, i32* @r28, align 4
  store i32 %v0_10007190, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007198.143 to i32), i32* @lr, align 4
  %v0_10007194 = call i32 @function_10008c98()
  store i32 %v0_10007194, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007198

dec_label_pc_10007198:                            ; preds = %dec_label_pc_10006928, %dec_label_pc_10007ef8, %dec_label_pc_100070e4
  %v0_1000719c = call i32 @function_1000a414()
  store i32 %v0_1000719c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100071a0

dec_label_pc_100071a0:                            ; preds = %dec_label_pc_10006b54, %dec_label_pc_10007198
  %v0_10006c2015 = phi i32 [ %v0_1000719c, %dec_label_pc_10007198 ], [ %v1_10006b1c, %dec_label_pc_10006b54 ]
  %v0_100071a0 = load i32, i32* @r9, align 4
  %v1_100071a0 = icmp slt i32 %v0_100071a0, 168
  %v3_100071a0 = icmp eq i32 %v0_100071a0, 168
  store i1 %v1_100071a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100071a0, label %dec_label_pc_10006b08.preheader, label %dec_label_pc_100071a0.dec_label_pc_10006c14_crit_edge

dec_label_pc_100071a0.dec_label_pc_10006c14_crit_edge: ; preds = %dec_label_pc_100071a0
  %v0_10006c14.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006c14

dec_label_pc_100071ac:                            ; preds = %dec_label_pc_10006b5c
  %v0_100071ac = load i32, i32* @r9, align 4
  %v1_100071ac = icmp ult i32 %v0_100071ac, 15
  %v3_100071ac = icmp eq i32 %v0_100071ac, 15
  store i1 %v1_100071ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071ac, i1* %cr7_eq.global-to-local, align 1
  %tmp112 = icmp ult i32 %v0_100071ac, 16
  br i1 %tmp112, label %dec_label_pc_10006c14, label %dec_label_pc_100071b4

dec_label_pc_100071b4:                            ; preds = %dec_label_pc_100071ac
  %v1_100071b4 = icmp ult i32 %v0_100071ac, 31
  %v3_100071b4 = icmp eq i32 %v0_100071ac, 31
  store i1 %v1_100071b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071b4, i1* %cr7_eq.global-to-local, align 1
  %tmp113 = icmp ult i32 %v0_100071ac, 32
  br i1 %tmp113, label %dec_label_pc_10006b08, label %dec_label_pc_10006c14

dec_label_pc_100071c0:                            ; preds = %dec_label_pc_10006b64
  %v0_100071c0 = load i32, i32* @r9, align 4
  %v1_100071c0 = icmp ult i32 %v0_100071c0, 63
  %v3_100071c0 = icmp eq i32 %v0_100071c0, 63
  store i1 %v1_100071c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071c0, i1* %cr7_eq.global-to-local, align 1
  %tmp114 = icmp ult i32 %v0_100071c0, 64
  br i1 %tmp114, label %dec_label_pc_10006c14, label %dec_label_pc_100071c8

dec_label_pc_100071c8:                            ; preds = %dec_label_pc_100071c0
  %v1_100071c8 = icmp ult i32 %v0_100071c0, 126
  %v3_100071c8 = icmp eq i32 %v0_100071c0, 126
  store i1 %v1_100071c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071c8, i1* %cr7_eq.global-to-local, align 1
  %tmp115 = icmp ult i32 %v0_100071c0, 127
  br i1 %tmp115, label %dec_label_pc_10006b08, label %dec_label_pc_10006c14

dec_label_pc_100071d4:                            ; preds = %dec_label_pc_10006b6c
  %v0_100071d4 = load i32, i32* @r9, align 4
  %v1_100071d4 = icmp slt i32 %v0_100071d4, 255
  %v3_100071d4 = icmp eq i32 %v0_100071d4, 255
  store i1 %v1_100071d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100071d4, label %dec_label_pc_10006b08, label %dec_label_pc_10006c14

dec_label_pc_100071e0:                            ; preds = %dec_label_pc_10006b74
  %v0_100071e0 = load i32, i32* @r9, align 4
  %v1_100071e0 = icmp ult i32 %v0_100071e0, 17
  %v3_100071e0 = icmp eq i32 %v0_100071e0, 17
  store i1 %v1_100071e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071e0, i1* %cr7_eq.global-to-local, align 1
  %tmp116 = icmp ult i32 %v0_100071e0, 18
  br i1 %tmp116, label %dec_label_pc_10006c14, label %dec_label_pc_100071e8

dec_label_pc_100071e8:                            ; preds = %dec_label_pc_100071e0
  %v1_100071e8 = icmp eq i32 %v0_100071e0, 18
  %v3_100071e8 = icmp eq i32 %v0_100071e0, 19
  store i1 %v1_100071e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071e8, i1* %cr7_eq.global-to-local, align 1
  %tmp117 = icmp ult i32 %v0_100071e0, 20
  br i1 %tmp117, label %dec_label_pc_10006b08, label %dec_label_pc_10006c14

dec_label_pc_100071f4:                            ; preds = %dec_label_pc_10006b84
  %v0_100071f4 = load i32, i32* @r9, align 4
  %v1_100071f4 = icmp slt i32 %v0_100071f4, 186
  %v3_100071f4 = icmp eq i32 %v0_100071f4, 186
  store i1 %v1_100071f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100071f4, label %dec_label_pc_10006b08, label %dec_label_pc_100071fc

dec_label_pc_100071fc:                            ; preds = %dec_label_pc_100071f4
  %v1_100071fc = icmp slt i32 %v0_100071f4, 187
  %v3_100071fc = icmp eq i32 %v0_100071f4, 187
  store i1 %v1_100071fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100071fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100071fc, label %dec_label_pc_10006b08, label %dec_label_pc_10007204

dec_label_pc_10007204:                            ; preds = %dec_label_pc_100071fc
  %v1_10007204 = icmp slt i32 %v0_100071f4, 185
  %v3_10007204 = icmp eq i32 %v0_100071f4, 185
  store i1 %v1_10007204, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007204, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007204, label %dec_label_pc_10006b08, label %dec_label_pc_1000720c

dec_label_pc_1000720c:                            ; preds = %dec_label_pc_10007204
  %v1_1000720c = icmp slt i32 %v0_100071f4, 184
  %v3_1000720c = icmp eq i32 %v0_100071f4, 184
  store i1 %v1_1000720c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000720c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000720c, label %dec_label_pc_10006b08, label %dec_label_pc_10006c14

dec_label_pc_10007218:                            ; preds = %dec_label_pc_10006b8c
  %v0_10007218 = load i32, i32* @r9, align 4
  %v1_10007218 = icmp slt i32 %v0_10007218, 31
  %v3_10007218 = icmp eq i32 %v0_10007218, 31
  store i1 %v1_10007218, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007218, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007218, label %dec_label_pc_10006b08, label %dec_label_pc_10006c14

dec_label_pc_10007224:                            ; preds = %dec_label_pc_10006b94
  %v0_10007224 = load i32, i32* @r9, align 4
  %v1_10007224 = icmp slt i32 %v0_10007224, 51
  %v3_10007224 = icmp eq i32 %v0_10007224, 51
  store i1 %v1_10007224, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007224, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007224, label %dec_label_pc_10006b08, label %dec_label_pc_10006c14

dec_label_pc_10007230:                            ; preds = %dec_label_pc_10006b9c
  %v0_10007230 = load i32, i32* @r9, align 4
  %v1_10007230 = icmp slt i32 %v0_10007230, 62
  %v3_10007230 = icmp eq i32 %v0_10007230, 62
  store i1 %v1_10007230, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007230, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007230, label %dec_label_pc_10006b08, label %dec_label_pc_10006c14

dec_label_pc_1000723c:                            ; preds = %dec_label_pc_10006ba4
  %v0_1000723c = load i32, i32* @r9, align 4
  %v1_1000723c = icmp slt i32 %v0_1000723c, 13
  %v3_1000723c = icmp eq i32 %v0_1000723c, 13
  store i1 %v1_1000723c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000723c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000723c, label %dec_label_pc_10006b08, label %dec_label_pc_10006c14

dec_label_pc_10007254:                            ; preds = %dec_label_pc_10006f5c, %dec_label_pc_10006f40
  %v0_10007254 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007254 = load i32, i32* @r31, align 4
  %v2_10007254 = add i32 %v1_10007254, 12
  %v3_10007254 = inttoptr i32 %v2_10007254 to i32*
  store i32 %v0_10007254, i32* %v3_10007254, align 4
  %v0_10007258 = load i32, i32* @r28, align 4
  %v1_10007258 = trunc i32 %v0_10007258 to i8
  %v2_10007258 = load i32, i32* @r31, align 4
  %v3_10007258 = add i32 %v2_10007258, 384
  %v4_10007258 = inttoptr i32 %v3_10007258 to i8*
  store i8 %v1_10007258, i8* %v4_10007258, align 1
  br label %dec_label_pc_10006ee8

dec_label_pc_10007260:                            ; preds = %dec_label_pc_10006eac
  store i32 %v2_10007264, i32* %r0.global-to-local, align 4
  %v1_10007268 = call i32 @__asm_rlwinm(i32 %v3_10007260, i32 29, i32 3, i32 29)
  %v0_1000726c = load i32, i32* @r30, align 4
  %v2_1000726c = icmp slt i32 %v0_1000726c, %v3_10007260
  %v4_1000726c = icmp eq i32 %v0_1000726c, %v3_10007260
  store i1 %v2_1000726c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000726c, i1* %cr7_eq.global-to-local, align 1
  %v1_10007270 = load i32, i32* %r0.global-to-local, align 4
  %v2_10007270 = add i32 %v1_10007270, %v1_10007268
  store i32 %v2_10007270, i32* %r11.global-to-local, align 4
  %v1_10007274 = urem i32 %v3_10007260, 32
  store i32 %v1_10007274, i32* %r0.global-to-local, align 4
  %v1_10007278 = add i32 %v2_10007270, 184
  %v2_10007278 = inttoptr i32 %v1_10007278 to i32*
  %v3_10007278 = load i32, i32* %v2_10007278, align 4
  %v0_1000727c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000727c = shl i32 %v0_1000727c, %v1_10007274
  store i32 %v3_1000727c, i32* %r0.global-to-local, align 4
  %v2_10007280 = or i32 %v3_1000727c, %v3_10007278
  store i32 %v2_10007280, i32* %r9.global-to-local, align 4
  store i32 %v2_10007280, i32* %v2_10007278, align 4
  br i1 %v2_1000726c, label %dec_label_pc_1000728c, label %dec_label_pc_10006ee8

dec_label_pc_1000728c:                            ; preds = %dec_label_pc_10007260
  store i32 %v3_10007260, i32* @r30, align 4
  br label %dec_label_pc_10006ee8

dec_label_pc_10007bc4:                            ; preds = %dec_label_pc_10007070
  %v3_10007094 = icmp eq i32 %v4_10007090, 0
  br i1 %v3_10007094, label %dec_label_pc_10007ea8, label %dec_label_pc_10007bc8

dec_label_pc_10007bc8:                            ; preds = %dec_label_pc_10007bc4
  %v1_10007bc8 = icmp slt i32 %v4_10007090, -1
  %v3_10007bc8 = icmp eq i32 %v4_10007090, -1
  store i1 %v1_10007bc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007bc8, label %dec_label_pc_10007bd0, label %dec_label_pc_100070c0

dec_label_pc_10007bd0:                            ; preds = %dec_label_pc_10007bc8
  %v0_10007bd0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007bd0 = inttoptr i32 %v0_10007bd0 to i32*
  %v2_10007bd0 = load i32, i32* %v1_10007bd0, align 4
  store i32 %v2_10007bd0, i32* %r0.global-to-local, align 4
  %v1_10007bd4 = icmp slt i32 %v2_10007bd0, 11
  %v3_10007bd4 = icmp eq i32 %v2_10007bd0, 11
  store i1 %v1_10007bd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007bd4, label %dec_label_pc_10006fe4, label %dec_label_pc_10007bdc

dec_label_pc_10007bdc:                            ; preds = %dec_label_pc_10007bd0, %dec_label_pc_10007ea8
  %v0_10007bdc = load i32, i32* @r31, align 4
  %v1_10007bdc = add i32 %v0_10007bdc, 4
  %v2_10007bdc = inttoptr i32 %v1_10007bdc to i32*
  %v3_10007bdc = load i32, i32* %v2_10007bdc, align 4
  store i32 %v3_10007bdc, i32* %r3.global-to-local, align 4
  store i32 268467172, i32* @lr, align 4
  %v0_10007be0 = call i32 @function_10008c98()
  store i32 %v0_10007be0, i32* %r3.global-to-local, align 4
  %v0_10007be4 = load i32, i32* @r31, align 4
  %v1_10007be4 = add i32 %v0_10007be4, 384
  %v2_10007be4 = inttoptr i32 %v1_10007be4 to i8*
  %v3_10007be4 = load i8, i8* %v2_10007be4, align 1
  %v4_10007be4 = zext i8 %v3_10007be4 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10007bec = add nuw nsw i32 %v4_10007be4, 1
  store i32 %v1_10007bec, i32* %r9.global-to-local, align 4
  %v2_10007bf0 = add i32 %v0_10007be4, 4
  %v3_10007bf0 = inttoptr i32 %v2_10007bf0 to i32*
  store i32 -1, i32* %v3_10007bf0, align 4
  %v0_10007bf4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007bf4 = urem i32 %v0_10007bf4, 256
  store i32 %v1_10007bf4, i32* %r9.global-to-local, align 4
  %v1_10007bf8 = icmp ult i32 %v1_10007bf4, 9
  %v3_10007bf8 = icmp eq i32 %v1_10007bf4, 9
  store i1 %v1_10007bf8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bf8, i1* %cr7_eq.global-to-local, align 1
  %v1_10007bfc = trunc i32 %v0_10007bf4 to i8
  %v2_10007bfc = load i32, i32* @r31, align 4
  %v3_10007bfc = add i32 %v2_10007bfc, 384
  %v4_10007bfc = inttoptr i32 %v3_10007bfc to i8*
  store i8 %v1_10007bfc, i8* %v4_10007bfc, align 1
  %v0_10007c00 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10007c00 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10007c00 = or i1 %v0_10007c00, %v1_10007c00
  br i1 %v2_10007c00, label %dec_label_pc_10007eb4, label %dec_label_pc_10007c04

dec_label_pc_10007c04:                            ; preds = %dec_label_pc_10007bdc
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007c0c = load i32, i32* @r31, align 4
  %v2_10007c0c = add i32 %v1_10007c0c, 12
  %v3_10007c0c = inttoptr i32 %v2_10007c0c to i32*
  store i32 0, i32* %v3_10007c0c, align 4
  %v0_10007c10 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007c10 = trunc i32 %v0_10007c10 to i8
  %v2_10007c10 = load i32, i32* @r31, align 4
  %v3_10007c10 = add i32 %v2_10007c10, 384
  %v4_10007c10 = inttoptr i32 %v3_10007c10 to i8*
  store i8 %v1_10007c10, i8* %v4_10007c10, align 1
  br label %dec_label_pc_10006fe4

dec_label_pc_10007c18:                            ; preds = %dec_label_pc_10007060
  store i32 292, i32* %r5.global-to-local, align 4
  store i32 %v1_10007064, i32* %r3.global-to-local, align 4
  %v1_10007c20 = add i32 %v0_10007c20, 92
  store i32 268467240, i32* @lr, align 4
  %v3_10007c24 = call i32 @function_100093b0(i32 %v1_10007064, i32 %v1_10007c20, i32 292)
  store i32 %v3_10007c24, i32* %r3.global-to-local, align 4
  %v0_10007c28 = load i32, i32* @r31, align 4
  %v1_10007c28 = add i32 %v0_10007c28, 24
  %v2_10007c28 = inttoptr i32 %v1_10007c28 to i32*
  %v3_10007c28 = load i32, i32* %v2_10007c28, align 4
  store i32 %v3_10007c28, i32* %r9.global-to-local, align 4
  %v1_10007c2c = add i32 %v3_10007c28, -64
  store i32 %v1_10007c2c, i32* %r5.global-to-local, align 4
  store i32 %v1_10007c2c, i32* %v2_10007c28, align 4
  br label %dec_label_pc_10007070

dec_label_pc_10007cf8:                            ; preds = %dec_label_pc_10007014
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 %v2_10007cfc, i32* %r6.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v2_10007d0c, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1912, align 4
  store i32 0, i32* %stack_var_-1920, align 4
  store i32 268467484, i32* @lr, align 4
  %v5_10007d18 = call i32 @function_10009808(i32 1, i32 4, i32 %v2_10007cfc, i32 %v2_10007d0c, i32 %v2_1000701c)
  store i32 %v5_10007d18, i32* %r3.global-to-local, align 4
  %v3_10007d1c = load i32, i32* %stack_var_-1920, align 4
  store i32 %v3_10007d1c, i32* %r0.global-to-local, align 4
  %v2_10007d20 = or i32 %v3_10007d1c, %v5_10007d18
  store i32 %v2_10007d20, i32* %r6.global-to-local, align 4
  %v5_10007d20 = icmp eq i32 %v2_10007d20, 0
  br i1 %v5_10007d20, label %dec_label_pc_10007d28, label %dec_label_pc_10007e88

dec_label_pc_10007d28:                            ; preds = %dec_label_pc_10007cf8
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_10007d2c = load i32, i32* @r31, align 4
  %v2_10007d2c = add i32 %v1_10007d2c, 12
  %v3_10007d2c = inttoptr i32 %v2_10007d2c to i32*
  store i32 2, i32* %v3_10007d2c, align 4
  %v0_10007d30 = call i32 @function_10005cd4()
  %v3_10007d38 = load i16, i16* @global_var_1001bd88.114, align 2
  %v4_10007d38 = zext i16 %v3_10007d38 to i32
  store i32 %v4_10007d38, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007d40 = load i32, i32* @global_var_1001bd80.112, align 4
  store i32 %v3_10007d40, i32* %r10.global-to-local, align 4
  %v1_10007d48 = icmp slt i32 %v3_10007d40, 0
  %v3_10007d48 = icmp eq i32 %v3_10007d40, 0
  store i1 %v1_10007d48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d48, i1* %cr7_eq.global-to-local, align 1
  %v2_10007d44 = urem i32 %v0_10007d30, %v4_10007d38
  %v2_10007d4c = sub i32 %v0_10007d30, %v2_10007d44
  store i32 %v2_10007d4c, i32* %r0.global-to-local, align 4
  store i32 %v2_10007d44, i32* %r3.global-to-local, align 4
  %tmp119 = icmp slt i32 %v3_10007d40, 1
  br i1 %tmp119, label %dec_label_pc_10007d8c, label %dec_label_pc_10007d5c

dec_label_pc_10007d5c:                            ; preds = %dec_label_pc_10007d28
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10007d40, i32* %ctr.global-to-local, align 4
  %v3_10007d64 = load i32, i32* @global_var_1001bd84.113, align 4
  store i32 %v3_10007d64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10007d68

dec_label_pc_10007d68:                            ; preds = %dec_label_pc_10007d84, %dec_label_pc_10007d5c
  %v0_10007d88 = phi i32 [ %v1_10007d88, %dec_label_pc_10007d84 ], [ %v3_10007d40, %dec_label_pc_10007d5c ]
  %v0_10007d84 = phi i32 [ %v1_10007d84, %dec_label_pc_10007d84 ], [ %v3_10007d64, %dec_label_pc_10007d5c ]
  store i32 %v0_10007d84, i32* %r9.global-to-local, align 4
  %v1_10007d6c = add i32 %v0_10007d84, 8
  %v2_10007d6c = inttoptr i32 %v1_10007d6c to i16*
  %v3_10007d6c = load i16, i16* %v2_10007d6c, align 2
  %v4_10007d6c = zext i16 %v3_10007d6c to i32
  store i32 %v4_10007d6c, i32* %r0.global-to-local, align 4
  %v2_10007d70 = icmp ult i32 %v4_10007d6c, %v2_10007d44
  %v3_10007d70 = icmp ugt i32 %v4_10007d6c, %v2_10007d44
  %v4_10007d70 = icmp eq i32 %v4_10007d6c, %v2_10007d44
  br i1 %v3_10007d70, label %dec_label_pc_10007d84, label %dec_label_pc_10007d78

dec_label_pc_10007d78:                            ; preds = %dec_label_pc_10007d68
  %v1_10007d78 = add i32 %v0_10007d84, 10
  %v2_10007d78 = inttoptr i32 %v1_10007d78 to i16*
  %v3_10007d78 = load i16, i16* %v2_10007d78, align 2
  %v4_10007d78 = zext i16 %v3_10007d78 to i32
  store i32 %v4_10007d78, i32* %r0.global-to-local, align 4
  %v2_10007d7c = icmp ult i32 %v4_10007d78, %v2_10007d44
  %v3_10007d7c = icmp ugt i32 %v4_10007d78, %v2_10007d44
  %v4_10007d7c = icmp eq i32 %v4_10007d78, %v2_10007d44
  br i1 %v3_10007d7c, label %dec_label_pc_10007d90.loopexit, label %dec_label_pc_10007d84

dec_label_pc_10007d84:                            ; preds = %dec_label_pc_10007d78, %dec_label_pc_10007d68
  %v4_10007d7c8 = phi i1 [ %v4_10007d7c, %dec_label_pc_10007d78 ], [ %v4_10007d70, %dec_label_pc_10007d68 ]
  %v2_10007d7c6 = phi i1 [ %v2_10007d7c, %dec_label_pc_10007d78 ], [ %v2_10007d70, %dec_label_pc_10007d68 ]
  %v1_10007d84 = add i32 %v0_10007d84, 16
  store i32 %v1_10007d84, i32* %r0.global-to-local, align 4
  %v1_10007d88 = add i32 %v0_10007d88, -1
  store i32 %v1_10007d88, i32* %ctr.global-to-local, align 4
  %v2_10007d88 = icmp eq i32 %v1_10007d88, 0
  br i1 %v2_10007d88, label %dec_label_pc_10007d8c.loopexit, label %dec_label_pc_10007d68

dec_label_pc_10007d8c.loopexit:                   ; preds = %dec_label_pc_10007d84
  store i1 %v2_10007d7c6, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007d7c8, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10007d8c

dec_label_pc_10007d8c:                            ; preds = %dec_label_pc_10007d8c.loopexit, %dec_label_pc_10007d28
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007d90

dec_label_pc_10007d90.loopexit:                   ; preds = %dec_label_pc_10007d78
  store i1 %v2_10007d7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007d7c, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10007d90

dec_label_pc_10007d90:                            ; preds = %dec_label_pc_10007d90.loopexit, %dec_label_pc_10007d8c
  %v0_10007d98 = phi i32 [ %v0_10007d84, %dec_label_pc_10007d90.loopexit ], [ 0, %dec_label_pc_10007d8c ]
  %v0_10007d90 = load i32, i32* @r31, align 4
  %v1_10007d90 = add i32 %v0_10007d90, 4
  %v2_10007d90 = inttoptr i32 %v1_10007d90 to i32*
  %v3_10007d90 = load i32, i32* %v2_10007d90, align 4
  store i32 %v3_10007d90, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10007d98 = inttoptr i32 %v0_10007d90 to i32*
  store i32 %v0_10007d98, i32* %v2_10007d98, align 4
  %v0_10007d9c = load i32, i32* %r5.global-to-local, align 4
  %v1_10007d9c = load i32, i32* @r31, align 4
  %v2_10007d9c = add i32 %v1_10007d9c, 24
  %v3_10007d9c = inttoptr i32 %v2_10007d9c to i32*
  store i32 %v0_10007d9c, i32* %v3_10007d9c, align 4
  %v0_10007038.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007034

dec_label_pc_10007e88:                            ; preds = %dec_label_pc_10007cf8
  %v0_10007e88 = load i32, i32* @r31, align 4
  %v1_10007e88 = add i32 %v0_10007e88, 4
  %v2_10007e88 = inttoptr i32 %v1_10007e88 to i32*
  %v3_10007e88 = load i32, i32* %v2_10007e88, align 4
  store i32 %v3_10007e88, i32* %r3.global-to-local, align 4
  store i32 268467856, i32* @lr, align 4
  %v0_10007e8c = call i32 @function_10008c98()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007e98 = load i32, i32* @r31, align 4
  %v2_10007e98 = add i32 %v1_10007e98, 4
  %v3_10007e98 = inttoptr i32 %v2_10007e98 to i32*
  store i32 -1, i32* %v3_10007e98, align 4
  %v0_10007e9c = load i32, i32* %r10.global-to-local, align 4
  %v1_10007e9c = load i32, i32* @r31, align 4
  %v2_10007e9c = add i32 %v1_10007e9c, 12
  %v3_10007e9c = inttoptr i32 %v2_10007e9c to i32*
  store i32 %v0_10007e9c, i32* %v3_10007e9c, align 4
  %v0_10007ea0 = load i32, i32* @r30, align 4
  %v1_10007ea0 = trunc i32 %v0_10007ea0 to i8
  %v2_10007ea0 = load i32, i32* @r31, align 4
  %v3_10007ea0 = add i32 %v2_10007ea0, 384
  %v4_10007ea0 = inttoptr i32 %v3_10007ea0 to i8*
  store i8 %v1_10007ea0, i8* %v4_10007ea0, align 1
  br label %dec_label_pc_10006fe4

dec_label_pc_10007ea8:                            ; preds = %dec_label_pc_10007bc4
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10007eac = load i32, i32* %r24.global-to-local, align 4
  %v2_10007eac = inttoptr i32 %v1_10007eac to i32*
  store i32 104, i32* %v2_10007eac, align 4
  br label %dec_label_pc_10007bdc

dec_label_pc_10007eb4:                            ; preds = %dec_label_pc_10007bdc
  %v0_10007eb4 = load i32, i32* @r31, align 4
  store i32 %v0_10007eb4, i32* @r3, align 4
  store i32 268467900, i32* @lr, align 4
  %v0_10007eb8 = call i32 @function_10006540()
  store i32 %v0_10007eb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006fe4

dec_label_pc_10007ef8:                            ; preds = %dec_label_pc_10006954
  store i32 268566528, i32* %r6.global-to-local, align 4
  %v3_10007efc = load i32, i32* @global_var_1001bd94.117, align 4
  store i32 %v3_10007efc, i32* %r3.global-to-local, align 4
  store i32 268467972, i32* @lr, align 4
  %v0_10007f00 = call i32 @function_10008c98()
  store i32 %v0_10007f00, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007198

; uselistorder directives
  uselistorder i32 %v1_10007d88, { 2, 1, 0 }
  uselistorder i32 %v1_10007d84, { 1, 0 }
  uselistorder i32 %v4_10007d78, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10007d6c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10007d84, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10007d44, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10007d40, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10007bf4, { 1, 2, 0 }
  uselistorder i32 %v0_10007bf4, { 1, 0 }
  uselistorder i32 %v2_10007bd0, { 1, 0, 2 }
  uselistorder i32 %v1_10007274, { 1, 0 }
  uselistorder i32 %v0_1000723c, { 1, 2, 0 }
  uselistorder i32 %v0_10007230, { 1, 2, 0 }
  uselistorder i32 %v0_10007224, { 1, 2, 0 }
  uselistorder i32 %v0_10007218, { 1, 2, 0 }
  uselistorder i32 %v0_100071f4, { 2, 1, 4, 3, 6, 5, 7, 8, 0 }
  uselistorder i32 %v0_100071e0, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_100071d4, { 1, 2, 0 }
  uselistorder i32 %v0_100071c0, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_100071ac, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_100071a0, { 1, 2, 0 }
  uselistorder i32 %v1_100070e8, { 1, 0 }
  uselistorder i32 %v3_100070d8, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_100070d8, { 1, 0 }
  uselistorder i32 %v1_100070bc, { 2, 1, 0 }
  uselistorder i32 %v1_100070b8, { 1, 0 }
  uselistorder i32 %v1_100070b4, { 1, 0 }
  uselistorder i32 %v4_10007090, { 4, 3, 6, 0, 1, 2, 5, 7 }
  uselistorder i32 %v3_1000707c, { 1, 0, 2 }
  uselistorder i32 %v1_10007064, { 1, 0, 2 }
  uselistorder i32 %v3_10007060, { 1, 0, 2 }
  uselistorder i32 %v3_10007054, { 1, 0, 2 }
  uselistorder i32 %v0_10007c20, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000704c, { 1, 0 }
  uselistorder i32 %v1_10007040, { 1, 0 }
  uselistorder i32 %v1_1000702c, { 1, 0 }
  uselistorder i32 %v1_10007020, { 1, 0 }
  uselistorder i32 %v0_10007020, { 1, 0 }
  uselistorder i32 %v3_10007008, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10006fe8, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_10007d0c, { 1, 2, 0 }
  uselistorder i32 %v2_10007cfc, { 1, 2, 0 }
  uselistorder i32 %v1_10006f80, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_10006f64, { 1, 2, 0 }
  uselistorder i32 %v1_10006f60, { 1, 0 }
  uselistorder i32 %v3_10006f48, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10006f34, { 2, 1, 0, 3 }
  uselistorder i1 %v3_10006f14, { 2, 0, 1 }
  uselistorder i1 %v1_10006f14, { 1, 0, 2 }
  uselistorder i32 %v3_10006f10, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v2_10006f0c, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_10006eec, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v1_10006ecc, { 1, 0 }
  uselistorder i32 %v3_10007260, { 7, 0, 6, 5, 9, 4, 1, 3, 2, 8, 10 }
  uselistorder i32 %v2_10006ea0, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10007264, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v1_10006e74, { 1, 0 }
  uselistorder i32 %v1_10006e70, { 1, 0 }
  uselistorder i32 %v1_10006e58, { 1, 0 }
  uselistorder i32 %v6_10006e30, { 1, 2, 0 }
  uselistorder i32 %v1_10006df4, { 1, 0 }
  uselistorder i32 %v3_10006dec, { 1, 0, 2 }
  uselistorder i32 %v1_10006de8, { 2, 1, 0 }
  uselistorder i32 %v1_10006de4, { 1, 0 }
  uselistorder i32 %v0_10006dec, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10006dcc, { 1, 0, 2 }
  uselistorder i32 %v3_10006d40, { 1, 0, 2 }
  uselistorder i32 %v2_10006d24, { 1, 0, 2 }
  uselistorder i32 %v0_10006d24, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10006d30, { 2, 1, 0 }
  uselistorder i1 %v3_10006d68, { 1, 0 }
  uselistorder i32 %v1_10006d98, { 1, 0 }
  uselistorder i32 %v1_10006d90, { 1, 0 }
  uselistorder i32 %v1_10006d88, { 1, 0 }
  uselistorder i32 %v1_10006da8, { 2, 1, 0 }
  uselistorder i32 %v1_10006d80, { 1, 0 }
  uselistorder i32 %v4_10006d70, { 1, 0, 2 }
  uselistorder i32 %v1_10006cd4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10006c60, { 1, 0 }
  uselistorder i32 %v4_10006c40, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10006bb0, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10006b38, { 3, 1, 2, 0 }
  uselistorder i32 %v0_10006b24, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 36, 35, 34, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 51, 53, 52, 54, 55 }
  uselistorder i32 %v1_10006b0c, { 1, 2, 0 }
  uselistorder i32 %v0_10006b08, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10006af4, { 1, 0 }
  uselistorder i32 %v3_10006ac4, { 1, 0, 2 }
  uselistorder i32 %v0_100069e8, { 1, 0 }
  uselistorder i32 %v1_100069a8, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10006998, { 1, 0, 2 }
  uselistorder i32 %v3_1000693c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10006924, { 1, 0 }
  uselistorder i32 %v0_10006920, { 1, 0 }
  uselistorder i32 %v2_100068d8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10006834, { 5, 3, 2, 4, 0, 1, 7, 6, 8 }
  uselistorder i64* %stack_var_-1916, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1908, { 1, 0 }
  uselistorder i32 %tmp57, { 1, 2, 0 }
  uselistorder i8 %tmp56, { 2, 1, 0 }
  uselistorder i16 %tmp55, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp53, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 27, 22, 23, 24, 25, 26, 28, 52, 53, 29, 30, 31, 54, 55, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder i32* %r6.global-to-local, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 32, 9, 10, 11, 12, 13, 14, 17, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r5.global-to-local, { 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 30, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r3.global-to-local, { 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 72, 28, 29, 30, 31, 32, 33, 35, 34, 37, 36, 38, 39, 40, 26, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 23, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 19, 12, 13, 15, 14, 16, 17, 18 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 74, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 27, 25, 26, 28, 29, 30, 31, 37, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 68, 69, 71, 72, 73 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 17, 18, 7, 8, 9, 19, 20, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 40, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 41, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i16* @global_var_1001bd88.114, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10009808, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_100098ec, { 15, 14, 13, 12, 11, 10, 9, 8, 5, 4, 3, 2, 7, 6, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009874, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10008f60, { 2, 0, 1 }
  uselistorder i32 ()* @function_10006540, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_100098ac, { 4, 3, 2, 1, 0 }
  uselistorder i32 1514, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009924, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16384, { 25, 35, 8, 36, 7, 37, 6, 38, 5, 39, 0, 40, 1, 41, 2, 42, 3, 43, 26, 44, 4, 45, 9, 27, 29, 30, 31, 32, 33, 34, 28, 10, 46, 11, 47, 48, 49, 12, 14, 13, 15, 50, 16, 51, 18, 52, 17, 20, 53, 19, 22, 21, 23, 54, 55, 24, 56, 57 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004430, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_100043cc, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000662c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001be16.126, { 2, 0, 1 }
  uselistorder i8 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* @r15, { 1, 0, 2, 3, 4 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 65536, { 69, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32 ()* @function_10005cd4, { 75, 74, 73, 72, 71, 70, 67, 21, 69, 68, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 3, 2, 1, 0, 9, 8, 7, 6, 5, 4, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009964, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 2048, { 5, 3, 0, 1, 2, 4, 6 }
  uselistorder i32 388, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 356, { 3, 4, 5, 0, 7, 8, 1, 9, 2, 10, 6 }
  uselistorder i32 ()* @function_10009068, { 9, 8, 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @function_10005d24, { 1, 0 }
  uselistorder i32 (i32)* @function_1000885c, { 2, 0, 3, 1 }
  uselistorder i32 ()* @function_10008ce0, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10007bdc, { 1, 0 }
  uselistorder label %dec_label_pc_100071a0, { 1, 0 }
  uselistorder label %dec_label_pc_10007198, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100070c0, { 1, 0 }
  uselistorder label %dec_label_pc_100070b8, { 1, 0 }
  uselistorder label %dec_label_pc_10007070, { 1, 0 }
  uselistorder label %dec_label_pc_10007054, { 1, 0 }
  uselistorder label %dec_label_pc_10007034, { 1, 0 }
  uselistorder label %dec_label_pc_10006fe4, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10006fb0, { 1, 0 }
  uselistorder label %dec_label_pc_10006ee8, { 3, 0, 4, 2, 5, 1 }
  uselistorder label %dec_label_pc_10006e6c.dec_label_pc_10006e6c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006e4c.dec_label_pc_10006e4c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006e3c, { 1, 4, 2, 3, 0 }
  uselistorder label %dec_label_pc_10006d24, { 1, 0 }
  uselistorder label %dec_label_pc_10006cf4, { 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 10 }
  uselistorder label %dec_label_pc_10006ce8, { 1, 0 }
  uselistorder label %dec_label_pc_10006c14, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 10, 8, 11, 13, 12 }
  uselistorder label %dec_label_pc_10006b08.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100069a4, { 1, 0 }
}

define i32 @function_10007f08(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10007f08:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10007f08 = icmp eq i32* %arg2, null
  %v1_10007f10 = mul i32 %arg1, 8
  store i32 %v1_10007f10, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001be50.165 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_10007f08, label %dec_label_pc_10007f28, label %dec_label_pc_10007f20

dec_label_pc_10007f20:                            ; preds = %dec_label_pc_10007f08
  %v1_10007f20 = add i32 %v1_10007f10, add (i32 ptrtoint (i32* @global_var_1001be50.165 to i32), i32 4)
  %v2_10007f20 = inttoptr i32 %v1_10007f20 to i16*
  %v3_10007f20 = load i16, i16* %v2_10007f20, align 4
  %v4_10007f20 = zext i16 %v3_10007f20 to i32
  store i32 %v4_10007f20, i32* %arg2, align 4
  %v0_10007f28.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10007f28.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007f28

dec_label_pc_10007f28:                            ; preds = %dec_label_pc_10007f08, %dec_label_pc_10007f20
  %v1_10007f28 = phi i32 [ ptrtoint (i32* @global_var_1001be50.165 to i32), %dec_label_pc_10007f08 ], [ %v1_10007f28.pre, %dec_label_pc_10007f20 ]
  %v0_10007f28 = phi i32 [ %v1_10007f10, %dec_label_pc_10007f08 ], [ %v0_10007f28.pre, %dec_label_pc_10007f20 ]
  %v2_10007f28 = add i32 %v0_10007f28, %v1_10007f28
  %v3_10007f28 = inttoptr i32 %v2_10007f28 to i32*
  %v4_10007f28 = load i32, i32* %v3_10007f28, align 4
  store i32 %v4_10007f28, i32* %r3.global-to-local, align 4
  ret i32 %v4_10007f28

; uselistorder directives
  uselistorder i32 %v1_10007f10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007f28, { 1, 0 }
}

define i32 @function_10007f30(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007f30:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10007f34 = mul i32 %arg1, 8
  %v2_10007f3c = add i32 %v1_10007f34, ptrtoint (i32* @global_var_1001be50.165 to i32)
  %v1_10007f44 = add i32 %v1_10007f34, add (i32 ptrtoint (i32* @global_var_1001be50.165 to i32), i32 4)
  %v2_10007f44 = inttoptr i32 %v1_10007f44 to i16*
  %v3_10007f44 = load i16, i16* %v2_10007f44, align 4
  %v3_10007f48 = icmp eq i16 %v3_10007f44, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f48, i1* %cr7_eq.global-to-local, align 1
  %v3_10007f4c = load i32, i32* @global_var_1001bd4c.166, align 4
  %v1_10007f50 = udiv i32 %v3_10007f4c, 16777216
  store i32 %v1_10007f50, i32* @r5, align 4
  %v1_10007f54 = urem i32 %v3_10007f4c, 256
  store i32 %v1_10007f54, i32* %r6.global-to-local, align 4
  %v1_10007f58 = call i32 @__asm_rlwinm(i32 %v3_10007f4c, i32 24, i32 24, i32 31)
  %v1_10007f5c = call i32 @__asm_rlwinm(i32 %v3_10007f4c, i32 16, i32 24, i32 31)
  %v0_10007f60 = load i32, i32* @lr, align 4
  %v1_10007f60 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10007f60 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10007f60 = or i1 %v1_10007f60, %v2_10007f60
  call void @__pseudo_cond_branch(i1 %v3_10007f60, i32 %v0_10007f60)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007f68 = inttoptr i32 %v2_10007f3c to i32*
  br label %dec_label_pc_10007f68

dec_label_pc_10007f68:                            ; preds = %dec_label_pc_10007f68, %dec_label_pc_10007f30
  %v1_10007f74 = phi i32 [ %v1_10007fa8, %dec_label_pc_10007f68 ], [ 0, %dec_label_pc_10007f30 ]
  %v2_10007f68 = load i32, i32* %v1_10007f68, align 4
  %v2_10007f6c = add i32 %v2_10007f68, %v1_10007f74
  %v3_10007f6c = inttoptr i32 %v2_10007f6c to i8*
  %v4_10007f6c = load i8, i8* %v3_10007f6c, align 1
  %v5_10007f6c = zext i8 %v4_10007f6c to i32
  %v0_10007f70 = load i32, i32* %r6.global-to-local, align 4
  %v2_10007f70 = xor i32 %v0_10007f70, %v5_10007f6c
  %v3_10007f74 = trunc i32 %v2_10007f70 to i8
  store i8 %v3_10007f74, i8* %v3_10007f6c, align 1
  %v2_10007f78 = load i32, i32* %v1_10007f68, align 4
  %v0_10007f7c = load i32, i32* %r10.global-to-local, align 4
  %v2_10007f7c = add i32 %v0_10007f7c, %v2_10007f78
  %v3_10007f7c = inttoptr i32 %v2_10007f7c to i8*
  %v4_10007f7c = load i8, i8* %v3_10007f7c, align 1
  %v5_10007f7c = zext i8 %v4_10007f7c to i32
  %v2_10007f80 = xor i32 %v5_10007f7c, %v1_10007f58
  %v3_10007f84 = trunc i32 %v2_10007f80 to i8
  store i8 %v3_10007f84, i8* %v3_10007f7c, align 1
  %v2_10007f88 = load i32, i32* %v1_10007f68, align 4
  %v0_10007f8c = load i32, i32* %r10.global-to-local, align 4
  %v2_10007f8c = add i32 %v0_10007f8c, %v2_10007f88
  %v3_10007f8c = inttoptr i32 %v2_10007f8c to i8*
  %v4_10007f8c = load i8, i8* %v3_10007f8c, align 1
  %v5_10007f8c = zext i8 %v4_10007f8c to i32
  %v2_10007f90 = xor i32 %v5_10007f8c, %v1_10007f5c
  %v3_10007f94 = trunc i32 %v2_10007f90 to i8
  store i8 %v3_10007f94, i8* %v3_10007f8c, align 1
  %v2_10007f98 = load i32, i32* %v1_10007f68, align 4
  %v0_10007f9c = load i32, i32* %r10.global-to-local, align 4
  %v2_10007f9c = add i32 %v0_10007f9c, %v2_10007f98
  %v3_10007f9c = inttoptr i32 %v2_10007f9c to i8*
  %v4_10007f9c = load i8, i8* %v3_10007f9c, align 1
  %v5_10007f9c = zext i8 %v4_10007f9c to i32
  %v0_10007fa0 = load i32, i32* @r5, align 4
  %v2_10007fa0 = xor i32 %v0_10007fa0, %v5_10007f9c
  %v3_10007fa4 = trunc i32 %v2_10007fa0 to i8
  store i8 %v3_10007fa4, i8* %v3_10007f9c, align 1
  %v0_10007fa8 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007fa8 = add i32 %v0_10007fa8, 1
  store i32 %v1_10007fa8, i32* %r10.global-to-local, align 4
  %v3_10007fac = load i16, i16* %v2_10007f44, align 4
  %v4_10007fac = zext i16 %v3_10007fac to i32
  %v2_10007fb0 = icmp slt i32 %v4_10007fac, %v1_10007fa8
  %v3_10007fb0 = icmp sgt i32 %v4_10007fac, %v1_10007fa8
  %v4_10007fb0 = icmp eq i32 %v4_10007fac, %v1_10007fa8
  store i1 %v2_10007fb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007fb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007fb0, label %dec_label_pc_10007f68, label %dec_label_pc_10007fb8

dec_label_pc_10007fb8:                            ; preds = %dec_label_pc_10007f68
  ret i32 %v2_10007f3c

; uselistorder directives
  uselistorder i32 %v4_10007fac, { 2, 1, 0 }
  uselistorder i32 %v1_10007fa8, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10007f4c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10007f34, { 1, 0 }
}

define i32 @function_10007fbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007fbc:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10007fc0 = mul i32 %arg1, 8
  %v2_10007fc8 = add i32 %v1_10007fc0, ptrtoint (i32* @global_var_1001be50.165 to i32)
  %v1_10007fd0 = add i32 %v1_10007fc0, add (i32 ptrtoint (i32* @global_var_1001be50.165 to i32), i32 4)
  %v2_10007fd0 = inttoptr i32 %v1_10007fd0 to i16*
  %v3_10007fd0 = load i16, i16* %v2_10007fd0, align 4
  %v3_10007fd4 = icmp eq i16 %v3_10007fd0, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fd4, i1* %cr7_eq.global-to-local, align 1
  %v3_10007fd8 = load i32, i32* @global_var_1001bd4c.166, align 4
  %v1_10007fdc = udiv i32 %v3_10007fd8, 16777216
  store i32 %v1_10007fdc, i32* @r5, align 4
  %v1_10007fe0 = urem i32 %v3_10007fd8, 256
  store i32 %v1_10007fe0, i32* %r6.global-to-local, align 4
  %v1_10007fe4 = call i32 @__asm_rlwinm(i32 %v3_10007fd8, i32 24, i32 24, i32 31)
  %v1_10007fe8 = call i32 @__asm_rlwinm(i32 %v3_10007fd8, i32 16, i32 24, i32 31)
  %v0_10007fec = load i32, i32* @lr, align 4
  %v1_10007fec = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10007fec = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10007fec = or i1 %v1_10007fec, %v2_10007fec
  call void @__pseudo_cond_branch(i1 %v3_10007fec, i32 %v0_10007fec)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007ff4 = inttoptr i32 %v2_10007fc8 to i32*
  br label %dec_label_pc_10007ff4

dec_label_pc_10007ff4:                            ; preds = %dec_label_pc_10007ff4, %dec_label_pc_10007fbc
  %v1_10008000 = phi i32 [ %v1_10008034, %dec_label_pc_10007ff4 ], [ 0, %dec_label_pc_10007fbc ]
  %v2_10007ff4 = load i32, i32* %v1_10007ff4, align 4
  %v2_10007ff8 = add i32 %v2_10007ff4, %v1_10008000
  %v3_10007ff8 = inttoptr i32 %v2_10007ff8 to i8*
  %v4_10007ff8 = load i8, i8* %v3_10007ff8, align 1
  %v5_10007ff8 = zext i8 %v4_10007ff8 to i32
  %v0_10007ffc = load i32, i32* %r6.global-to-local, align 4
  %v2_10007ffc = xor i32 %v0_10007ffc, %v5_10007ff8
  %v3_10008000 = trunc i32 %v2_10007ffc to i8
  store i8 %v3_10008000, i8* %v3_10007ff8, align 1
  %v2_10008004 = load i32, i32* %v1_10007ff4, align 4
  %v0_10008008 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008008 = add i32 %v0_10008008, %v2_10008004
  %v3_10008008 = inttoptr i32 %v2_10008008 to i8*
  %v4_10008008 = load i8, i8* %v3_10008008, align 1
  %v5_10008008 = zext i8 %v4_10008008 to i32
  %v2_1000800c = xor i32 %v5_10008008, %v1_10007fe4
  %v3_10008010 = trunc i32 %v2_1000800c to i8
  store i8 %v3_10008010, i8* %v3_10008008, align 1
  %v2_10008014 = load i32, i32* %v1_10007ff4, align 4
  %v0_10008018 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008018 = add i32 %v0_10008018, %v2_10008014
  %v3_10008018 = inttoptr i32 %v2_10008018 to i8*
  %v4_10008018 = load i8, i8* %v3_10008018, align 1
  %v5_10008018 = zext i8 %v4_10008018 to i32
  %v2_1000801c = xor i32 %v5_10008018, %v1_10007fe8
  %v3_10008020 = trunc i32 %v2_1000801c to i8
  store i8 %v3_10008020, i8* %v3_10008018, align 1
  %v2_10008024 = load i32, i32* %v1_10007ff4, align 4
  %v0_10008028 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008028 = add i32 %v0_10008028, %v2_10008024
  %v3_10008028 = inttoptr i32 %v2_10008028 to i8*
  %v4_10008028 = load i8, i8* %v3_10008028, align 1
  %v5_10008028 = zext i8 %v4_10008028 to i32
  %v0_1000802c = load i32, i32* @r5, align 4
  %v2_1000802c = xor i32 %v0_1000802c, %v5_10008028
  %v3_10008030 = trunc i32 %v2_1000802c to i8
  store i8 %v3_10008030, i8* %v3_10008028, align 1
  %v0_10008034 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008034 = add i32 %v0_10008034, 1
  store i32 %v1_10008034, i32* %r10.global-to-local, align 4
  %v3_10008038 = load i16, i16* %v2_10007fd0, align 4
  %v4_10008038 = zext i16 %v3_10008038 to i32
  %v2_1000803c = icmp slt i32 %v4_10008038, %v1_10008034
  %v3_1000803c = icmp sgt i32 %v4_10008038, %v1_10008034
  %v4_1000803c = icmp eq i32 %v4_10008038, %v1_10008034
  store i1 %v2_1000803c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000803c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000803c, label %dec_label_pc_10007ff4, label %dec_label_pc_10008044

dec_label_pc_10008044:                            ; preds = %dec_label_pc_10007ff4
  ret i32 %v2_10007fc8

; uselistorder directives
  uselistorder i32 %v4_10008038, { 2, 1, 0 }
  uselistorder i32 %v1_10008034, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10007fd8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10007fc0, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001be50.165 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001be50.165 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_10008048(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008048:
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 19, i32* %r21.global-to-local, align 4
  store i32 5, i32* %r22.global-to-local, align 4
  store i32 6, i32* %r23.global-to-local, align 4
  store i32 12, i32* %r24.global-to-local, align 4
  store i32 16, i32* %r25.global-to-local, align 4
  store i32 14, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 268468380, i32* @lr, align 4
  %v0_10008098 = call i32 @function_10009ba4()
  store i32 %v0_10008098, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100080b8.168 to i32), i32* @lr, align 4
  %v3_100080b4 = call i32 @function_100085dc(i32 ptrtoint (i32* @global_var_1000b710.167 to i32), i32 2, i32 2)
  store i32 12, i32* @r3, align 4
  %v0_100080bc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100080bc, i32* @global_var_1001be58.169, align 4
  %v0_100080c0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100080c0 = trunc i32 %v0_100080c0 to i16
  store i16 %v1_100080c0, i16* bitcast (i32* @global_var_1001be5c.170 to i16*), align 4
  store i32 268468424, i32* @lr, align 4
  %v0_100080c4 = call i32 @function_10009ba4()
  store i32 %v0_100080c4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100080dc.172 to i32), i32* @lr, align 4
  %v4_100080d8 = call i32 @function_100085dc(i32 ptrtoint ([13 x i8]* @global_var_1000b714.171 to i32), i32 12, i32 12)
  store i32 12, i32* @r3, align 4
  %v0_100080e0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100080e0, i32* @global_var_1001be60.173, align 4
  %v0_100080e4 = load i32, i32* %r24.global-to-local, align 4
  %v1_100080e4 = trunc i32 %v0_100080e4 to i16
  store i16 %v1_100080e4, i16* bitcast (i32* @global_var_1001be64.174 to i16*), align 4
  store i32 268468460, i32* @lr, align 4
  %v0_100080e8 = call i32 @function_10009ba4()
  store i32 %v0_100080e8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008100.176 to i32), i32* @lr, align 4
  %v4_100080fc = call i32 @function_100085dc(i32 ptrtoint ([13 x i8]* @global_var_1000b724.175 to i32), i32 12, i32 12)
  store i32 2, i32* @r3, align 4
  %v0_10008104 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008104, i32* @global_var_1001be68.177, align 4
  %v0_10008108 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008108 = trunc i32 %v0_10008108 to i16
  store i16 %v1_10008108, i16* bitcast (i32* @global_var_1001be6c.178 to i16*), align 4
  store i32 268468496, i32* @lr, align 4
  %v0_1000810c = call i32 @function_10009ba4()
  store i32 %v0_1000810c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008124.180 to i32), i32* @lr, align 4
  %v3_10008120 = call i32 @function_100085dc(i32 ptrtoint (i32* @global_var_1000b734.179 to i32), i32 2, i32 2)
  store i32 36, i32* @r3, align 4
  %v0_10008128 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008128, i32* @global_var_1001be70.181, align 4
  %v0_1000812c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000812c = trunc i32 %v0_1000812c to i16
  store i16 %v1_1000812c, i16* bitcast (i32* @global_var_1001be74.182 to i16*), align 4
  store i32 268468532, i32* @lr, align 4
  %v0_10008130 = call i32 @function_10009ba4()
  store i32 %v0_10008130, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008148.184 to i32), i32* @lr, align 4
  %v4_10008144 = call i32 @function_100085dc(i32 ptrtoint ([37 x i8]* @global_var_1000b738.183 to i32), i32 36, i32 36)
  store i32 6, i32* @r3, align 4
  store i16 36, i16* bitcast (i32* @global_var_1001be7c.185 to i16*), align 4
  %v0_10008154 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008154, i32* @global_var_1001be78.186, align 4
  store i32 268468572, i32* @lr, align 4
  %v0_10008158 = call i32 @function_10009ba4()
  store i32 %v0_10008158, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008170.188 to i32), i32* @lr, align 4
  %v4_1000816c = call i32 @function_100085dc(i32 ptrtoint ([7 x i8]* @global_var_1000b760.187 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_10008174 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008174, i32* @global_var_1001be80.189, align 4
  store i32 7, i32* %r27.global-to-local, align 4
  %v0_1000817c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000817c = trunc i32 %v0_1000817c to i16
  store i16 %v1_1000817c, i16* bitcast (i32* @global_var_1001be84.190 to i16*), align 4
  store i32 268468612, i32* @lr, align 4
  %v0_10008180 = call i32 @function_10009ba4()
  store i32 %v0_10008180, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008198.192 to i32), i32* @lr, align 4
  %v4_10008194 = call i32 @function_100085dc(i32 ptrtoint ([8 x i8]* @global_var_1000b768.191 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_1000819c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000819c, i32* @global_var_1001be88.193, align 4
  %v0_100081a0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100081a0 = trunc i32 %v0_100081a0 to i16
  store i16 %v1_100081a0, i16* bitcast (i32* @global_var_1001be8c.194 to i16*), align 4
  store i32 268468648, i32* @lr, align 4
  %v0_100081a4 = call i32 @function_10009ba4()
  store i32 %v0_100081a4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100081bc.196 to i32), i32* @lr, align 4
  %v4_100081b8 = call i32 @function_100085dc(i32 ptrtoint ([8 x i8]* @global_var_1000b770.195 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_100081c0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100081c0, i32* @global_var_1001be90.197, align 4
  %v0_100081c4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100081c4 = trunc i32 %v0_100081c4 to i16
  store i16 %v1_100081c4, i16* bitcast (i32* @global_var_1001be94.198 to i16*), align 4
  store i32 268468684, i32* @lr, align 4
  %v0_100081c8 = call i32 @function_10009ba4()
  store i32 %v0_100081c8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100081e0.200 to i32), i32* @lr, align 4
  %v4_100081dc = call i32 @function_100085dc(i32 ptrtoint ([4 x i8]* @global_var_1000b778.199 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001be9c.201 to i16*), align 4
  %v0_100081ec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100081ec, i32* @global_var_1001be98.202, align 4
  store i32 268468724, i32* @lr, align 4
  %v0_100081f0 = call i32 @function_10009ba4()
  store i32 %v0_100081f0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008208.204 to i32), i32* @lr, align 4
  %v3_10008204 = call i32 @function_100085dc(i32 ptrtoint (i32* @global_var_1000b77c.203 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_1000820c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000820c, i32* @global_var_1001bea0.205, align 4
  %v0_10008210 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008210 = trunc i32 %v0_10008210 to i16
  store i16 %v1_10008210, i16* bitcast (i32* @global_var_1001bea4.206 to i16*), align 4
  store i32 268468760, i32* @lr, align 4
  %v0_10008214 = call i32 @function_10009ba4()
  store i32 %v0_10008214, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000822c.208 to i32), i32* @lr, align 4
  %v3_10008228 = call i32 @function_100085dc(i32 ptrtoint (i32* @global_var_1000b790.207 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001beac.209 to i16*), align 4
  %v0_10008238 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008238, i32* @global_var_1001bea8.210, align 4
  store i32 268468800, i32* @lr, align 4
  %v0_1000823c = call i32 @function_10009ba4()
  store i32 %v0_1000823c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008254.212 to i32), i32* @lr, align 4
  %v4_10008250 = call i32 @function_100085dc(i32 ptrtoint ([10 x i8]* @global_var_1000b7ac.211 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  store i16 9, i16* bitcast (i32* @global_var_1001beb4.213 to i16*), align 4
  %v0_10008260 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008260, i32* @global_var_1001beb0.214, align 4
  store i32 268468840, i32* @lr, align 4
  %v0_10008264 = call i32 @function_10009ba4()
  store i32 %v0_10008264, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000827c.216 to i32), i32* @lr, align 4
  %v4_10008278 = call i32 @function_100085dc(i32 ptrtoint ([17 x i8]* @global_var_1000b7b8.215 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_10008280 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008280, i32* @global_var_1001beb8.217, align 4
  %v0_10008284 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008284 = trunc i32 %v0_10008284 to i16
  store i16 %v1_10008284, i16* bitcast (i32* @global_var_1001bebc.218 to i16*), align 4
  store i32 268468876, i32* @lr, align 4
  %v0_10008288 = call i32 @function_10009ba4()
  store i32 %v0_10008288, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100082a0.220 to i32), i32* @lr, align 4
  %v4_1000829c = call i32 @function_100085dc(i32 ptrtoint ([23 x i8]* @global_var_1000b7cc.219 to i32), i32 22, i32 22)
  store i32 7, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001bec4.221 to i16*), align 4
  %v0_100082ac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100082ac, i32* @global_var_1001bec0.222, align 4
  store i32 268468916, i32* @lr, align 4
  %v0_100082b0 = call i32 @function_10009ba4()
  store i32 %v0_100082b0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100082c8.224 to i32), i32* @lr, align 4
  %v4_100082c4 = call i32 @function_100085dc(i32 ptrtoint ([8 x i8]* @global_var_1000b7e4.223 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_100082cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100082cc, i32* @global_var_1001bec8.225, align 4
  %v0_100082d0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100082d0 = trunc i32 %v0_100082d0 to i16
  store i16 %v1_100082d0, i16* bitcast (i32* @global_var_1001becc.226 to i16*), align 4
  store i32 268468952, i32* @lr, align 4
  %v0_100082d4 = call i32 @function_10009ba4()
  store i32 %v0_100082d4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100082ec.228 to i32), i32* @lr, align 4
  %v4_100082e8 = call i32 @function_100085dc(i32 ptrtoint ([6 x i8]* @global_var_1000b7ec.227 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_100082f0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100082f0, i32* @global_var_1001bed0.229, align 4
  store i32 8, i32* %r27.global-to-local, align 4
  %v0_100082f8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100082f8 = trunc i32 %v0_100082f8 to i16
  store i16 %v1_100082f8, i16* bitcast (i32* @global_var_1001bed4.230 to i16*), align 4
  store i32 268468992, i32* @lr, align 4
  %v0_100082fc = call i32 @function_10009ba4()
  store i32 %v0_100082fc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008314.232 to i32), i32* @lr, align 4
  %v4_10008310 = call i32 @function_100085dc(i32 ptrtoint ([5 x i8]* @global_var_1000b7f4.231 to i32), i32 4, i32 4)
  store i32 6, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001bedc.233 to i16*), align 4
  %v0_10008320 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008320, i32* @global_var_1001bed8.234, align 4
  store i32 268469032, i32* @lr, align 4
  %v0_10008324 = call i32 @function_10009ba4()
  store i32 %v0_10008324, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000833c.236 to i32), i32* @lr, align 4
  %v4_10008338 = call i32 @function_100085dc(i32 ptrtoint ([7 x i8]* @global_var_1000b7fc.235 to i32), i32 6, i32 6)
  store i32 14, i32* @r3, align 4
  %v0_10008340 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008340, i32* @global_var_1001bee0.237, align 4
  %v0_10008344 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008344 = trunc i32 %v0_10008344 to i16
  store i16 %v1_10008344, i16* bitcast (i32* @global_var_1001bee4.238 to i16*), align 4
  store i32 268469068, i32* @lr, align 4
  %v0_10008348 = call i32 @function_10009ba4()
  store i32 %v0_10008348, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008360.240 to i32), i32* @lr, align 4
  %v4_1000835c = call i32 @function_100085dc(i32 ptrtoint ([15 x i8]* @global_var_1000b804.239 to i32), i32 14, i32 14)
  store i32 8, i32* @r3, align 4
  %v0_10008364 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008364, i32* @global_var_1001bee8.241, align 4
  %v0_10008368 = load i32, i32* %r26.global-to-local, align 4
  %v1_10008368 = trunc i32 %v0_10008368 to i16
  store i16 %v1_10008368, i16* bitcast (i32* @global_var_1001beec.242 to i16*), align 4
  store i32 268469104, i32* @lr, align 4
  %v0_1000836c = call i32 @function_10009ba4()
  store i32 %v0_1000836c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008384.244 to i32), i32* @lr, align 4
  %v4_10008380 = call i32 @function_100085dc(i32 ptrtoint ([9 x i8]* @global_var_1000b814.243 to i32), i32 8, i32 8)
  store i32 16, i32* @r3, align 4
  %v0_10008388 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008388, i32* @global_var_1001bf48.245, align 4
  %v0_1000838c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000838c = trunc i32 %v0_1000838c to i16
  store i16 %v1_1000838c, i16* bitcast (i32* @global_var_1001bf4c.246 to i16*), align 4
  store i32 268469140, i32* @lr, align 4
  %v0_10008390 = call i32 @function_10009ba4()
  store i32 %v0_10008390, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100083a8.248 to i32), i32* @lr, align 4
  %v4_100083a4 = call i32 @function_100085dc(i32 ptrtoint ([17 x i8]* @global_var_1000b820.247 to i32), i32 16, i32 16)
  store i32 8, i32* @r3, align 4
  %v0_100083ac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100083ac, i32* @global_var_1001bef0.249, align 4
  %v0_100083b0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100083b0 = trunc i32 %v0_100083b0 to i16
  store i16 %v1_100083b0, i16* bitcast (i32* @global_var_1001bef4.250 to i16*), align 4
  store i32 268469176, i32* @lr, align 4
  %v0_100083b4 = call i32 @function_10009ba4()
  store i32 %v0_100083b4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100083cc.252 to i32), i32* @lr, align 4
  %v4_100083c8 = call i32 @function_100085dc(i32 ptrtoint ([9 x i8]* @global_var_1000b834.251 to i32), i32 8, i32 8)
  store i32 21, i32* @r3, align 4
  %v0_100083d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100083d0, i32* @global_var_1001bef8.253, align 4
  %v0_100083d4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100083d4 = trunc i32 %v0_100083d4 to i16
  store i16 %v1_100083d4, i16* bitcast (i32* @global_var_1001befc.254 to i16*), align 4
  store i32 268469212, i32* @lr, align 4
  %v0_100083d8 = call i32 @function_10009ba4()
  store i32 %v0_100083d8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100083f0.256 to i32), i32* @lr, align 4
  %v3_100083ec = call i32 @function_100085dc(i32 ptrtoint (i32* @global_var_1000b8bc.255 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001bf04.257 to i16*), align 4
  %v0_100083fc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100083fc, i32* @global_var_1001bf00.258, align 4
  store i32 268469252, i32* @lr, align 4
  %v0_10008400 = call i32 @function_10009ba4()
  store i32 %v0_10008400, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008418.260 to i32), i32* @lr, align 4
  %v4_10008414 = call i32 @function_100085dc(i32 ptrtoint ([18 x i8]* @global_var_1000b840.259 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001bf0c.261 to i16*), align 4
  %v0_10008424 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008424, i32* @global_var_1001bf08.262, align 4
  store i32 268469292, i32* @lr, align 4
  %v0_10008428 = call i32 @function_10009ba4()
  store i32 %v0_10008428, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008440.264 to i32), i32* @lr, align 4
  %v4_1000843c = call i32 @function_100085dc(i32 ptrtoint ([13 x i8]* @global_var_1000b854.263 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  %v0_10008444 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008444, i32* @global_var_1001bf10.265, align 4
  %v0_10008448 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008448 = trunc i32 %v0_10008448 to i16
  store i16 %v1_10008448, i16* bitcast (i32* @global_var_1001bf14.266 to i16*), align 4
  store i32 268469328, i32* @lr, align 4
  %v0_1000844c = call i32 @function_10009ba4()
  store i32 %v0_1000844c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008464.268 to i32), i32* @lr, align 4
  %v4_10008460 = call i32 @function_100085dc(i32 ptrtoint ([15 x i8]* @global_var_1000b864.267 to i32), i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10008468 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008468, i32* @global_var_1001bf18.269, align 4
  %v0_1000846c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000846c = trunc i32 %v0_1000846c to i16
  store i16 %v1_1000846c, i16* bitcast (i32* @global_var_1001bf1c.270 to i16*), align 4
  store i32 268469364, i32* @lr, align 4
  %v0_10008470 = call i32 @function_10009ba4()
  store i32 %v0_10008470, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008488.272 to i32), i32* @lr, align 4
  %v4_10008484 = call i32 @function_100085dc(i32 ptrtoint ([20 x i8]* @global_var_1000b874.271 to i32), i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_1000848c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000848c, i32* @global_var_1001bf20.273, align 4
  %v0_10008490 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008490 = trunc i32 %v0_10008490 to i16
  store i16 %v1_10008490, i16* bitcast (i32* @global_var_1001bf24.274 to i16*), align 4
  store i32 268469400, i32* @lr, align 4
  %v0_10008494 = call i32 @function_10009ba4()
  store i32 %v0_10008494, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100084ac.276 to i32), i32* @lr, align 4
  %v4_100084a8 = call i32 @function_100085dc(i32 ptrtoint ([9 x i8]* @global_var_1000b888.275 to i32), i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_100084b0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084b0, i32* @global_var_1001bf28.277, align 4
  %v0_100084b4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100084b4 = trunc i32 %v0_100084b4 to i16
  store i16 %v1_100084b4, i16* bitcast (i32* @global_var_1001bf2c.278 to i16*), align 4
  store i32 268469436, i32* @lr, align 4
  %v0_100084b8 = call i32 @function_10009ba4()
  store i32 %v0_100084b8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100084d0.280 to i32), i32* @lr, align 4
  %v4_100084cc = call i32 @function_100085dc(i32 ptrtoint ([6 x i8]* @global_var_1000b894.279 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_100084d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084d4, i32* @global_var_1001bf30.281, align 4
  %v0_100084d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100084d8 = trunc i32 %v0_100084d8 to i16
  store i16 %v1_100084d8, i16* bitcast (i32* @global_var_1001bf34.282 to i16*), align 4
  store i32 268469472, i32* @lr, align 4
  %v0_100084dc = call i32 @function_10009ba4()
  store i32 %v0_100084dc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100084f4.284 to i32), i32* @lr, align 4
  %v4_100084f0 = call i32 @function_100085dc(i32 ptrtoint ([7 x i8]* @global_var_1000b89c.283 to i32), i32 6, i32 6)
  store i32 23, i32* @r3, align 4
  %v0_100084f8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084f8, i32* @global_var_1001bf38.285, align 4
  %v0_100084fc = load i32, i32* %r23.global-to-local, align 4
  %v1_100084fc = trunc i32 %v0_100084fc to i16
  store i16 %v1_100084fc, i16* bitcast (i32* @global_var_1001bf3c.286 to i16*), align 4
  store i32 268469508, i32* @lr, align 4
  %v0_10008500 = call i32 @function_10009ba4()
  store i32 %v0_10008500, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008518.288 to i32), i32* @lr, align 4
  %v4_10008514 = call i32 @function_100085dc(i32 ptrtoint ([24 x i8]* @global_var_1000b8a4.287 to i32), i32 23, i32 23)
  store i16 23, i16* bitcast (i32* @global_var_1001bf44.289 to i16*), align 4
  %v0_10008524 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008524, i32* @global_var_1001bf40.290, align 4
  ret i32 %v4_10008514

; uselistorder directives
  uselistorder i16 23, { 2, 3, 4, 1, 0 }
  uselistorder i32 21, { 0, 1, 6, 7, 8, 2, 3, 4, 5, 9, 10, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @function_100085dc, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10008558(i8* %arg1) local_unnamed_addr {
dec_label_pc_10008558:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10008558 = load i8, i8* %arg1, align 1
  %v3_10008564 = icmp eq i8 %v3_10008558, 0
  %v0_10008568 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008564, i32 %v0_10008568)
  br label %dec_label_pc_1000856c

dec_label_pc_1000856c:                            ; preds = %dec_label_pc_1000856c, %dec_label_pc_10008558
  %v0_1000856c = phi i32 [ %v1_1000856c, %dec_label_pc_1000856c ], [ 0, %dec_label_pc_10008558 ]
  %v1_1000856c = add i32 %v0_1000856c, 1
  %v2_10008570 = add i32 %v1_1000856c, %tmp
  %v3_10008570 = inttoptr i32 %v2_10008570 to i8*
  %v4_10008570 = load i8, i8* %v3_10008570, align 1
  %v3_10008574 = icmp eq i8 %v4_10008570, 0
  br i1 %v3_10008574, label %dec_label_pc_1000857c, label %dec_label_pc_1000856c

dec_label_pc_1000857c:                            ; preds = %dec_label_pc_1000856c
  ret i32 %v1_1000856c
}

define i32 @function_10008580(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008580:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10008580 = load i8, i8* %arg1, align 1
  %v3_10008584 = icmp eq i8 %v2_10008580, 0
  br i1 %v3_10008584, label %dec_label_pc_100085d0, label %dec_label_pc_1000858c

dec_label_pc_1000858c:                            ; preds = %dec_label_pc_10008580
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008590

dec_label_pc_10008590:                            ; preds = %dec_label_pc_10008590, %dec_label_pc_1000858c
  %v0_10008590 = phi i32 [ %v1_10008590, %dec_label_pc_10008590 ], [ 0, %dec_label_pc_1000858c ]
  %v1_10008590 = add i32 %v0_10008590, 1
  store i32 %v1_10008590, i32* %r9.global-to-local, align 4
  %v2_10008594 = add i32 %v1_10008590, %tmp
  %v3_10008594 = inttoptr i32 %v2_10008594 to i8*
  %v4_10008594 = load i8, i8* %v3_10008594, align 1
  %v3_10008598 = icmp eq i8 %v4_10008594, 0
  br i1 %v3_10008598, label %dec_label_pc_100085a0, label %dec_label_pc_10008590

dec_label_pc_100085a0:                            ; preds = %dec_label_pc_10008590
  %v3_100085a0 = icmp eq i32 %v1_10008590, -1
  br i1 %v3_100085a0, label %dec_label_pc_100085c8, label %dec_label_pc_100085a8

dec_label_pc_100085a8:                            ; preds = %dec_label_pc_100085a0
  %phitmp = add i32 %v0_10008590, 2
  br label %dec_label_pc_100085ac

dec_label_pc_100085ac:                            ; preds = %dec_label_pc_100085d0, %dec_label_pc_100085a8
  %v0_100085ac = phi i32 [ 1, %dec_label_pc_100085d0 ], [ %phitmp, %dec_label_pc_100085a8 ]
  store i32 %v0_100085ac, i32* %ctr.global-to-local, align 4
  %v2_100085bc.pre = load i32, i32* @r3, align 4
  %v2_100085b48 = load i8, i8* %arg1, align 1
  %v1_100085b810 = add i32 %tmp, 1
  store i32 %v1_100085b810, i32* %r4.global-to-local, align 4
  %v3_100085bc11 = inttoptr i32 %v2_100085bc.pre to i8*
  store i8 %v2_100085b48, i8* %v3_100085bc11, align 1
  %v0_100085c012 = load i32, i32* @r3, align 4
  %v1_100085c013 = add i32 %v0_100085c012, 1
  store i32 %v1_100085c013, i32* %r3.global-to-local, align 4
  %v0_100085c414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100085c415 = add i32 %v0_100085c414, -1
  store i32 %v1_100085c415, i32* %ctr.global-to-local, align 4
  %v2_100085c416 = icmp eq i32 %v1_100085c415, 0
  br i1 %v2_100085c416, label %dec_label_pc_100085c8.loopexit, label %dec_label_pc_100085b4.dec_label_pc_100085b4_crit_edge

dec_label_pc_100085b4.dec_label_pc_100085b4_crit_edge: ; preds = %dec_label_pc_100085ac, %dec_label_pc_100085b4.dec_label_pc_100085b4_crit_edge
  %v1_100085c017 = phi i32 [ %v1_100085c0, %dec_label_pc_100085b4.dec_label_pc_100085b4_crit_edge ], [ %v1_100085c013, %dec_label_pc_100085ac ]
  %v0_100085b4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_100085b4 = inttoptr i32 %v0_100085b4.pre to i8*
  %v2_100085b4 = load i8, i8* %v1_100085b4, align 1
  %v1_100085b8 = add i32 %v0_100085b4.pre, 1
  store i32 %v1_100085b8, i32* %r4.global-to-local, align 4
  %v3_100085bc = inttoptr i32 %v1_100085c017 to i8*
  store i8 %v2_100085b4, i8* %v3_100085bc, align 1
  %v0_100085c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100085c0 = add i32 %v0_100085c0, 1
  store i32 %v1_100085c0, i32* %r3.global-to-local, align 4
  %v0_100085c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100085c4 = add i32 %v0_100085c4, -1
  store i32 %v1_100085c4, i32* %ctr.global-to-local, align 4
  %v2_100085c4 = icmp eq i32 %v1_100085c4, 0
  br i1 %v2_100085c4, label %dec_label_pc_100085c8.loopexit, label %dec_label_pc_100085b4.dec_label_pc_100085b4_crit_edge

dec_label_pc_100085c8.loopexit:                   ; preds = %dec_label_pc_100085b4.dec_label_pc_100085b4_crit_edge, %dec_label_pc_100085ac
  %v0_100085c8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100085c8

dec_label_pc_100085c8:                            ; preds = %dec_label_pc_100085c8.loopexit, %dec_label_pc_100085a0
  %v0_100085c8 = phi i32 [ %v0_100085c8.pre, %dec_label_pc_100085c8.loopexit ], [ -1, %dec_label_pc_100085a0 ]
  store i32 %v0_100085c8, i32* %r3.global-to-local, align 4
  ret i32 %v0_100085c8

dec_label_pc_100085d0:                            ; preds = %dec_label_pc_10008580
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100085ac

; uselistorder directives
  uselistorder i32 %v0_100085c8, { 1, 0 }
  uselistorder i32 %v1_100085c4, { 1, 0 }
  uselistorder i32 %v1_100085c0, { 1, 0 }
  uselistorder i32 %v1_10008590, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_100085b4.dec_label_pc_100085b4_crit_edge, { 1, 0 }
}

define i32 @function_100085dc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100085dc:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_100085dc = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_100085e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100085dc, i32 %v0_100085e4)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100085ec

dec_label_pc_100085ec:                            ; preds = %dec_label_pc_100085ec, %dec_label_pc_100085dc
  %v0_100085ec = phi i32 [ %v1_100085f4, %dec_label_pc_100085ec ], [ 0, %dec_label_pc_100085dc ]
  %v2_100085ec = add i32 %v0_100085ec, %arg2
  %v3_100085ec = inttoptr i32 %v2_100085ec to i8*
  %v4_100085ec = load i8, i8* %v3_100085ec, align 1
  %v4_100085f0 = add i32 %v0_100085ec, %arg1
  %v5_100085f0 = inttoptr i32 %v4_100085f0 to i8*
  store i8 %v4_100085ec, i8* %v5_100085f0, align 1
  %v0_100085f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100085f4 = add i32 %v0_100085f4, 1
  store i32 %v1_100085f4, i32* %r9.global-to-local, align 4
  %v0_100085f8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100085f8 = add i32 %v0_100085f8, -1
  store i32 %v1_100085f8, i32* %ctr.global-to-local, align 4
  %v2_100085f8 = icmp eq i32 %v1_100085f8, 0
  br i1 %v2_100085f8, label %dec_label_pc_100085fc, label %dec_label_pc_100085ec

dec_label_pc_100085fc:                            ; preds = %dec_label_pc_100085ec
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100085f8, { 1, 0 }
  uselistorder i32 %v1_100085f4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10008600() local_unnamed_addr {
dec_label_pc_10008600:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10008600 = load i32, i32* @r4, align 4
  store i32 %v0_10008600, i32* %r0.global-to-local, align 4
  %v3_10008600 = icmp eq i32 %v0_10008600, 0
  store i32 %v0_10008600, i32* %ctr.global-to-local, align 4
  %v0_10008608 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008600, i32 %v0_10008608)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100086143 = load i32, i32* @r3, align 4
  %v5_100086144 = inttoptr i32 %v2_100086143 to i8*
  store i8 0, i8* %v5_100086144, align 1
  %v0_100086185 = load i32, i32* %r9.global-to-local, align 4
  %v1_100086186 = add i32 %v0_100086185, 1
  store i32 %v1_100086186, i32* %r9.global-to-local, align 4
  %v0_1000861c7 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000861c8 = add i32 %v0_1000861c7, -1
  store i32 %v1_1000861c8, i32* %ctr.global-to-local, align 4
  %v2_1000861c9 = icmp eq i32 %v1_1000861c8, 0
  br i1 %v2_1000861c9, label %dec_label_pc_10008620, label %dec_label_pc_10008614.dec_label_pc_10008614_crit_edge

dec_label_pc_10008614.dec_label_pc_10008614_crit_edge: ; preds = %dec_label_pc_10008600, %dec_label_pc_10008614.dec_label_pc_10008614_crit_edge
  %v1_1000861810 = phi i32 [ %v1_10008618, %dec_label_pc_10008614.dec_label_pc_10008614_crit_edge ], [ %v1_100086186, %dec_label_pc_10008600 ]
  %v0_10008614.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10008614.pre to i8
  %v2_10008614 = load i32, i32* @r3, align 4
  %v4_10008614 = add i32 %v2_10008614, %v1_1000861810
  %v5_10008614 = inttoptr i32 %v4_10008614 to i8*
  store i8 %extract.t, i8* %v5_10008614, align 1
  %v0_10008618 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008618 = add i32 %v0_10008618, 1
  store i32 %v1_10008618, i32* %r9.global-to-local, align 4
  %v0_1000861c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000861c = add i32 %v0_1000861c, -1
  store i32 %v1_1000861c, i32* %ctr.global-to-local, align 4
  %v2_1000861c = icmp eq i32 %v1_1000861c, 0
  br i1 %v2_1000861c, label %dec_label_pc_10008620, label %dec_label_pc_10008614.dec_label_pc_10008614_crit_edge

dec_label_pc_10008620:                            ; preds = %dec_label_pc_10008614.dec_label_pc_10008614_crit_edge, %dec_label_pc_10008600
  %v0_10008620 = load i32, i32* @r3, align 4
  ret i32 %v0_10008620

; uselistorder directives
  uselistorder i32 %v1_1000861c, { 1, 0 }
  uselistorder i32 %v1_10008618, { 1, 0 }
  uselistorder i32 %v0_10008600, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10008614.dec_label_pc_10008614_crit_edge, { 1, 0 }
}

define i32 @function_10008624(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008624:
  %v3_10008624 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_10008624, label %dec_label_pc_10008630, label %dec_label_pc_10008638

dec_label_pc_10008630:                            ; preds = %dec_label_pc_10008654, %dec_label_pc_10008624, %dec_label_pc_10008638
  ret i32 -1

dec_label_pc_10008638:                            ; preds = %dec_label_pc_10008624
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_10008630, label %dec_label_pc_10008640

dec_label_pc_10008640:                            ; preds = %dec_label_pc_10008638
  br label %dec_label_pc_1000865c

dec_label_pc_10008650:                            ; preds = %dec_label_pc_1000865c
  br label %dec_label_pc_10008654

dec_label_pc_10008654:                            ; preds = %dec_label_pc_10008674, %dec_label_pc_10008650
  %v0_1000865c1 = phi i32 [ %v1_10008660, %dec_label_pc_10008674 ], [ 0, %dec_label_pc_10008650 ]
  %v1_10008654 = add i32 %v0_10008678, 1
  %v1_10008658 = add i32 %v0_10008658, -1
  %v2_10008658 = icmp eq i32 %v1_10008658, 0
  br i1 %v2_10008658, label %dec_label_pc_10008630, label %dec_label_pc_1000865c

dec_label_pc_1000865c:                            ; preds = %dec_label_pc_10008654, %dec_label_pc_10008640
  %v0_10008658 = phi i32 [ %v1_10008658, %dec_label_pc_10008654 ], [ %arg2, %dec_label_pc_10008640 ]
  %v0_10008678 = phi i32 [ %v1_10008654, %dec_label_pc_10008654 ], [ 0, %dec_label_pc_10008640 ]
  %v0_1000865c = phi i32 [ %v0_1000865c1, %dec_label_pc_10008654 ], [ 0, %dec_label_pc_10008640 ]
  %v2_1000865c = add i32 %v0_1000865c, %arg3
  %v3_1000865c = inttoptr i32 %v2_1000865c to i8*
  %v4_1000865c = load i8, i8* %v3_1000865c, align 1
  %v1_10008660 = add i32 %v0_1000865c, 1
  %v2_10008664 = add i32 %v0_10008678, %arg1
  %v3_10008664 = inttoptr i32 %v2_10008664 to i8*
  %v4_10008664 = load i8, i8* %v3_10008664, align 1
  %v4_1000866c = icmp eq i8 %v4_10008664, %v4_1000865c
  br i1 %v4_1000866c, label %dec_label_pc_10008674, label %dec_label_pc_10008650

dec_label_pc_10008674:                            ; preds = %dec_label_pc_1000865c
  %v4_10008668 = icmp eq i32 %v1_10008660, %arg4
  br i1 %v4_10008668, label %dec_label_pc_10008678, label %dec_label_pc_10008654

dec_label_pc_10008678:                            ; preds = %dec_label_pc_10008674
  %v1_10008678 = add i32 %v0_10008678, 1
  ret i32 %v1_10008678

; uselistorder directives
  uselistorder i32 %v0_1000865c, { 1, 0 }
  uselistorder label %dec_label_pc_10008630, { 0, 2, 1 }
}

define i32 @function_10008680(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10008680.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008680

dec_label_pc_10008680:                            ; preds = %dec_label_pc_1000869c, %dec_label_pc_10008680, %bb
  %v0_10008680 = phi i32 [ %v0_10008680.pre, %bb ], [ %v1_10008684, %dec_label_pc_10008680 ], [ %v1_10008684, %dec_label_pc_1000869c ]
  %v1_10008680 = inttoptr i32 %v0_10008680 to i8*
  %v2_10008680 = load i8, i8* %v1_10008680, align 1
  %v1_10008684 = add i32 %v0_10008680, 1
  %v3_10008690 = icmp eq i8 %v2_10008680, 32
  br i1 %v3_10008690, label %dec_label_pc_10008680, label %dec_label_pc_1000869c

dec_label_pc_1000869c:                            ; preds = %dec_label_pc_10008680
  %v2_10008680.off = add i8 %v2_10008680, -9
  %tmp = icmp ult i8 %v2_10008680.off, 2
  br i1 %tmp, label %dec_label_pc_10008680, label %dec_label_pc_100086a8

dec_label_pc_100086a8:                            ; preds = %dec_label_pc_1000869c
  %v3_100086a8 = icmp eq i8 %v2_10008680, 45
  br i1 %v3_100086a8, label %dec_label_pc_10008754, label %dec_label_pc_100086b0

dec_label_pc_100086b0:                            ; preds = %dec_label_pc_100086a8
  %v3_100086b0 = icmp eq i8 %v2_10008680, 43
  br i1 %v3_100086b0, label %dec_label_pc_100087ac, label %dec_label_pc_100086b8

dec_label_pc_100086b8:                            ; preds = %dec_label_pc_100086b0, %dec_label_pc_100087ac
  %v0_1000874826 = phi i32 [ %v1_10008684, %dec_label_pc_100086b0 ], [ %v1_100087b0, %dec_label_pc_100087ac ]
  %v0_100086d85.in = phi i8 [ %v2_10008680, %dec_label_pc_100086b0 ], [ %v2_100087ac, %dec_label_pc_100087ac ]
  br label %dec_label_pc_100086c4

dec_label_pc_100086c4:                            ; preds = %dec_label_pc_10008754, %dec_label_pc_100086b8
  %v0_1000874825 = phi i32 [ %v1_1000875c, %dec_label_pc_10008754 ], [ %v0_1000874826, %dec_label_pc_100086b8 ]
  %v0_100086d84.in = phi i8 [ %v2_10008754, %dec_label_pc_10008754 ], [ %v0_100086d85.in, %dec_label_pc_100086b8 ]
  %v0_1000879c = phi i32 [ 1, %dec_label_pc_10008754 ], [ 0, %dec_label_pc_100086b8 ]
  %v1_100086d4 = phi i32 [ -2147483648, %dec_label_pc_10008754 ], [ 2147483647, %dec_label_pc_100086b8 ]
  %v2_100086c4 = udiv i32 %v1_100086d4, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_100086d0 = mul i32 %v2_100086c4, %arg1
  %v2_100086d4 = sub i32 %v1_100086d4, %v2_100086d0
  br label %dec_label_pc_100086d8

dec_label_pc_100086d8:                            ; preds = %dec_label_pc_10008748, %dec_label_pc_100086c4
  %v0_10008748 = phi i32 [ %v1_1000874c, %dec_label_pc_10008748 ], [ %v0_1000874825, %dec_label_pc_100086c4 ]
  %v0_1000873c = phi i32 [ %v0_1000873417, %dec_label_pc_10008748 ], [ 0, %dec_label_pc_100086c4 ]
  %v0_1000872c = phi i32 [ %v0_1000878c11, %dec_label_pc_10008748 ], [ 0, %dec_label_pc_100086c4 ]
  %v0_10008724 = phi i32 [ %v0_100087809, %dec_label_pc_10008748 ], [ 0, %dec_label_pc_100086c4 ]
  %v1_10008718.in = phi i8 [ %v2_10008748, %dec_label_pc_10008748 ], [ %v0_100086d84.in, %dec_label_pc_100086c4 ]
  %v1_10008718 = zext i8 %v1_10008718.in to i32
  %v1_100086dc = add nsw i32 %v1_10008718, -48
  %fold = add nuw nsw i32 %v1_10008718, 208
  %v1_100086e4 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_100086e4, 10
  br i1 %tmp27, label %dec_label_pc_1000871c, label %dec_label_pc_100086f0

dec_label_pc_100086f0:                            ; preds = %dec_label_pc_100086d8
  %v1_100086f0 = add nuw nsw i32 %v1_10008718, 191
  %v1_100086f4 = urem i32 %v1_100086f0, 256
  %tmp28 = icmp ult i32 %v1_100086f4, 26
  br i1 %tmp28, label %dec_label_pc_10008718, label %dec_label_pc_10008704

dec_label_pc_10008704:                            ; preds = %dec_label_pc_100086f0
  %v1_10008704 = add nuw nsw i32 %v1_10008718, 159
  %v1_10008708 = urem i32 %v1_10008704, 256
  %v2_1000870c = icmp ugt i32 %v1_10008708, 25
  br i1 %v2_1000870c, label %dec_label_pc_10008780, label %dec_label_pc_10008714

dec_label_pc_10008714:                            ; preds = %dec_label_pc_10008704
  br label %dec_label_pc_10008718

dec_label_pc_10008718:                            ; preds = %dec_label_pc_100086f0, %dec_label_pc_10008714
  %v0_10008718 = phi i32 [ 55, %dec_label_pc_100086f0 ], [ 87, %dec_label_pc_10008714 ]
  %v2_10008718 = sub nsw i32 %v1_10008718, %v0_10008718
  br label %dec_label_pc_1000871c

dec_label_pc_1000871c:                            ; preds = %dec_label_pc_100086d8, %dec_label_pc_10008718
  %v1_10008744 = phi i32 [ %v1_100086dc, %dec_label_pc_100086d8 ], [ %v2_10008718, %dec_label_pc_10008718 ]
  %v2_1000871c = icmp slt i32 %v1_10008744, %arg1
  br i1 %v2_1000871c, label %dec_label_pc_10008724, label %dec_label_pc_10008780

dec_label_pc_10008724:                            ; preds = %dec_label_pc_1000871c
  %v1_10008724 = icmp slt i32 %v0_10008724, 0
  br i1 %v1_10008724, label %dec_label_pc_10008768, label %dec_label_pc_1000872c

dec_label_pc_1000872c:                            ; preds = %dec_label_pc_10008724
  %v3_1000872c = icmp ugt i32 %v0_1000872c, %v2_100086c4
  br i1 %v3_1000872c, label %dec_label_pc_10008768, label %dec_label_pc_10008734

dec_label_pc_10008734:                            ; preds = %dec_label_pc_1000872c
  %v4_10008734 = icmp eq i32 %v0_1000873c, %v2_100086c4
  br i1 %v4_10008734, label %dec_label_pc_10008770, label %dec_label_pc_1000873c

dec_label_pc_1000873c:                            ; preds = %dec_label_pc_10008770, %dec_label_pc_10008734
  %v2_1000873c = mul i32 %v0_1000873c, %arg1
  %v2_10008744 = add i32 %v1_10008744, %v2_1000873c
  store i32 %v2_10008744, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008748

dec_label_pc_10008748:                            ; preds = %dec_label_pc_10008770, %dec_label_pc_10008768, %dec_label_pc_1000873c
  %v0_1000873417 = phi i32 [ %v2_100086c4, %dec_label_pc_10008770 ], [ %v0_1000873c, %dec_label_pc_10008768 ], [ %v2_10008744, %dec_label_pc_1000873c ]
  %v0_1000878c11 = phi i32 [ %v2_100086c4, %dec_label_pc_10008770 ], [ %v0_1000872c, %dec_label_pc_10008768 ], [ %v2_10008744, %dec_label_pc_1000873c ]
  %v0_100087809 = phi i32 [ -1, %dec_label_pc_10008770 ], [ -1, %dec_label_pc_10008768 ], [ 1, %dec_label_pc_1000873c ]
  %v1_10008748 = inttoptr i32 %v0_10008748 to i8*
  %v2_10008748 = load i8, i8* %v1_10008748, align 1
  %v1_1000874c = add i32 %v0_10008748, 1
  br label %dec_label_pc_100086d8

dec_label_pc_10008754:                            ; preds = %dec_label_pc_100086a8
  %v1_10008754 = inttoptr i32 %v1_10008684 to i8*
  %v2_10008754 = load i8, i8* %v1_10008754, align 1
  %v1_1000875c = add i32 %v0_10008680, 2
  br label %dec_label_pc_100086c4

dec_label_pc_10008768:                            ; preds = %dec_label_pc_1000872c, %dec_label_pc_10008724
  br label %dec_label_pc_10008748

dec_label_pc_10008770:                            ; preds = %dec_label_pc_10008734
  %v3_10008770 = icmp sgt i32 %v1_10008744, %v2_100086d4
  br i1 %v3_10008770, label %dec_label_pc_10008748, label %dec_label_pc_1000873c

dec_label_pc_10008780:                            ; preds = %dec_label_pc_1000871c, %dec_label_pc_10008704
  %v1_10008780 = icmp slt i32 %v0_10008724, 0
  br i1 %v1_10008780, label %dec_label_pc_1000879c, label %dec_label_pc_10008788

dec_label_pc_10008788:                            ; preds = %dec_label_pc_10008780
  %v3_10008788 = icmp eq i32 %v0_1000879c, 0
  %v0_10008790 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008788, i32 %v0_10008790)
  %v0_10008794 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008794 = sub i32 0, %v0_10008794
  ret i32 %v1_10008794

dec_label_pc_1000879c:                            ; preds = %dec_label_pc_10008780
  %v1_1000879c = xor i32 %v0_1000879c, 1
  %v2_100087a4 = sub nuw i32 -2147483648, %v1_1000879c
  ret i32 %v2_100087a4

dec_label_pc_100087ac:                            ; preds = %dec_label_pc_100086b0
  %v1_100087ac = inttoptr i32 %v1_10008684 to i8*
  %v2_100087ac = load i8, i8* %v1_100087ac, align 1
  %v1_100087b0 = add i32 %v0_10008680, 2
  br label %dec_label_pc_100086b8

; uselistorder directives
  uselistorder i32 %v2_10008744, { 1, 0, 2 }
  uselistorder i32 %v1_10008744, { 1, 0, 2 }
  uselistorder i32 %v1_10008718, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_1000873c, { 2, 0, 1 }
  uselistorder i32 %v0_10008748, { 1, 0 }
  uselistorder i32 %v2_100086c4, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10008684, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10008680, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 1, 8, 11, 12, 13, 14, 15, 16, 9 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000871c, { 1, 0 }
  uselistorder label %dec_label_pc_10008718, { 1, 0 }
  uselistorder label %dec_label_pc_100086b8, { 1, 0 }
}

define i32 @function_100087b8(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100087b8:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_100087e4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_100087ec

dec_label_pc_100087ec:                            ; preds = %dec_label_pc_10008818.dec_label_pc_100087ec_crit_edge, %dec_label_pc_100087b8
  %v0_100087f0 = phi i32 [ %v0_100087f0.pre, %dec_label_pc_10008818.dec_label_pc_100087ec_crit_edge ], [ %arg3, %dec_label_pc_100087b8 ]
  %v0_100087ec = phi i32 [ %v1_10008804, %dec_label_pc_10008818.dec_label_pc_100087ec_crit_edge ], [ %tmp, %dec_label_pc_100087b8 ]
  store i32 1, i32* @r5, align 4
  store i32 268470268, i32* @lr, align 4
  %v4_100087f8 = call i32 @function_10008ed0(i32 %v0_100087f0, i32 %v0_100087ec, i32 1)
  %v0_100087fc = load i32, i32* @r31, align 4
  %v3_10008800 = icmp eq i32 %v4_100087f8, 1
  %v1_10008804 = add i32 %v0_100087fc, 1
  store i32 %v1_10008804, i32* @r31, align 4
  %v0_1000880c = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10008800, label %dec_label_pc_1000880c, label %dec_label_pc_10008824

dec_label_pc_1000880c:                            ; preds = %dec_label_pc_100087ec
  %v1_1000880c = add i32 %v0_1000880c, 1
  store i32 %v1_1000880c, i32* %r30.global-to-local, align 4
  %v0_10008810 = load i32, i32* %r28.global-to-local, align 4
  %v3_10008810 = icmp sgt i32 %v0_10008810, %v1_1000880c
  br i1 %v3_10008810, label %dec_label_pc_10008818, label %dec_label_pc_10008824

dec_label_pc_10008818:                            ; preds = %dec_label_pc_1000880c
  %v1_10008818 = inttoptr i32 %v0_100087fc to i8*
  %v2_10008818 = load i8, i8* %v1_10008818, align 1
  %v3_1000881c = icmp eq i8 %v2_10008818, 10
  br i1 %v3_1000881c, label %dec_label_pc_10008824, label %dec_label_pc_10008818.dec_label_pc_100087ec_crit_edge

dec_label_pc_10008818.dec_label_pc_100087ec_crit_edge: ; preds = %dec_label_pc_10008818
  %v0_100087f0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100087ec

dec_label_pc_10008824:                            ; preds = %dec_label_pc_100087ec, %dec_label_pc_10008818, %dec_label_pc_1000880c
  %v1_1000882c = phi i32 [ %v1_1000880c, %dec_label_pc_10008818 ], [ %v1_1000880c, %dec_label_pc_1000880c ], [ %v0_1000880c, %dec_label_pc_100087ec ]
  %tmp12 = icmp slt i32 %v1_1000882c, 0
  %v1_10008824 = zext i1 %tmp12 to i32
  %v2_10008824 = ashr i32 %v1_1000882c, 31
  %v3_10008824 = and i32 %v2_10008824, -2
  %v4_10008824 = or i32 %v3_10008824, %v1_10008824
  %v2_1000882c = xor i32 %v4_10008824, %v1_1000882c
  %v2_10008834 = sub i32 %v4_10008824, %v2_1000882c
  %tmp13 = icmp slt i32 %v2_10008834, 0
  %v1_1000883c = zext i1 %tmp13 to i32
  %v2_1000883c = ashr i32 %v2_10008834, 31
  %v3_1000883c = and i32 %v2_1000883c, -2
  %v4_1000883c = or i32 %v3_1000883c, %v1_1000883c
  %v0_10008844 = load i32, i32* %r27.global-to-local, align 4
  %v2_10008844 = and i32 %v4_1000883c, %v0_10008844
  store i32 %v0_100087e4, i32* @r31, align 4
  ret i32 %v2_10008844

; uselistorder directives
  uselistorder i32 %v2_10008834, { 1, 0 }
  uselistorder i32 %v4_10008824, { 1, 0 }
  uselistorder i32 %v1_1000882c, { 1, 2, 0 }
  uselistorder i32 %v1_10008804, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008ed0, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10008824, { 1, 2, 0 }
}

define i32 @function_1000885c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000885c:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_10008874 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_1000887c = call i32 @function_1000936c()
  %v2_10008888 = inttoptr i32 %v0_1000887c to i32*
  store i32 0, i32* %v2_10008888, align 4
  store i32 268470424, i32* @lr, align 4
  %v3_10008894 = call i32 @function_100099a0(i32 2, i32 2, i32 0)
  store i32 %v3_10008894, i32* @r3, align 4
  %v3_1000889c = icmp eq i32 %v3_10008894, -1
  store i32 %v3_10008894, i32* @r31, align 4
  br i1 %v3_1000889c, label %dec_label_pc_100088ec, label %dec_label_pc_100088b8

dec_label_pc_100088b8:                            ; preds = %dec_label_pc_1000885c
  %v2_10008868 = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268470480, i32* @lr, align 4
  %v0_100088cc = call i32 @function_100097a0()
  %v2_100088d4 = ptrtoint i32* %stack_var_-40 to i32
  %v0_100088d8 = load i32, i32* @r31, align 4
  store i32 268470496, i32* @lr, align 4
  %v3_100088dc = call i32 @function_100097d4(i32 %v0_100088d8, i32 %v2_10008868, i32 %v2_100088d4)
  store i32 268470504, i32* @lr, align 4
  %v0_100088e4 = call i32 @function_10008c98()
  br label %dec_label_pc_100088ec

dec_label_pc_100088ec:                            ; preds = %dec_label_pc_1000885c, %dec_label_pc_100088b8
  %v0_100088ec = phi i32 [ 0, %dec_label_pc_1000885c ], [ 134744072, %dec_label_pc_100088b8 ]
  store i32 %v0_10008874, i32* @r31, align 4
  ret i32 %v0_100088ec

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_100097a0, { 10, 9, 8, 2, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100099a0, { 29, 27, 28, 26, 6, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 0, 9, 8, 1, 7, 3, 2, 5, 4 }
  uselistorder label %dec_label_pc_100088ec, { 1, 0 }
}

define i32 @function_10008908(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008908:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10008908 = load i8, i8* %tmp, align 1
  %v3_10008914 = icmp eq i8 %v3_10008908, 0
  br i1 %v3_10008914, label %dec_label_pc_1000892c, label %dec_label_pc_1000891c

dec_label_pc_1000891c:                            ; preds = %dec_label_pc_10008908, %dec_label_pc_1000891c
  %v0_1000891c = phi i32 [ %v1_1000891c, %dec_label_pc_1000891c ], [ 0, %dec_label_pc_10008908 ]
  %v1_1000891c = add i32 %v0_1000891c, 1
  %v3_10008920 = add i32 %v1_1000891c, %arg3
  %v4_10008920 = inttoptr i32 %v3_10008920 to i8*
  %v5_10008920 = load i8, i8* %v4_10008920, align 1
  %v3_10008924 = icmp eq i8 %v5_10008920, 0
  br i1 %v3_10008924, label %dec_label_pc_1000892c, label %dec_label_pc_1000891c

dec_label_pc_1000892c:                            ; preds = %dec_label_pc_1000891c, %dec_label_pc_10008908
  %v0_1000895c11 = phi i32 [ 0, %dec_label_pc_10008908 ], [ %v1_1000891c, %dec_label_pc_1000891c ]
  %v1_1000892c = icmp slt i32 %arg2, 0
  %v1_10008930 = add i32 %arg2, 1
  br i1 %v1_1000892c, label %dec_label_pc_100089a8, label %dec_label_pc_10008944

dec_label_pc_10008944:                            ; preds = %dec_label_pc_1000892c, %dec_label_pc_100089a8, %dec_label_pc_1000899c
  %v2_100089508 = phi i32 [ %v1_10008954, %dec_label_pc_1000899c ], [ 0, %dec_label_pc_100089a8 ], [ 0, %dec_label_pc_1000892c ]
  %v0_100089486 = phi i32 [ %v1_1000894c, %dec_label_pc_1000899c ], [ %tmp16, %dec_label_pc_100089a8 ], [ %tmp16, %dec_label_pc_1000892c ]
  %v0_10008944 = phi i32 [ %v0_10008990, %dec_label_pc_1000899c ], [ 1, %dec_label_pc_100089a8 ], [ %v1_10008930, %dec_label_pc_1000892c ]
  %v1_10008944 = add i32 %v0_10008944, -1
  %v2_10008944 = icmp eq i32 %v1_10008944, 0
  br i1 %v2_10008944, label %dec_label_pc_10008994, label %dec_label_pc_10008948

dec_label_pc_10008948:                            ; preds = %dec_label_pc_10008944, %dec_label_pc_1000898c
  %v2_10008950 = phi i32 [ 0, %dec_label_pc_1000898c ], [ %v2_100089508, %dec_label_pc_10008944 ]
  %v0_10008948 = phi i32 [ %v1_1000894c, %dec_label_pc_1000898c ], [ %v0_100089486, %dec_label_pc_10008944 ]
  %v0_10008990 = phi i32 [ %v1_10008990, %dec_label_pc_1000898c ], [ %v1_10008944, %dec_label_pc_10008944 ]
  %v1_10008948 = inttoptr i32 %v0_10008948 to i8*
  %v2_10008948 = load i8, i8* %v1_10008948, align 1
  %v3_10008948 = zext i8 %v2_10008948 to i32
  %v1_1000894c = add i32 %v0_10008948, 1
  %v3_10008950 = add i32 %v2_10008950, %arg3
  %v4_10008950 = inttoptr i32 %v3_10008950 to i8*
  %v5_10008950 = load i8, i8* %v4_10008950, align 1
  %v6_10008950 = zext i8 %v5_10008950 to i32
  %v1_10008954 = add i32 %v2_10008950, 1
  %v1_10008958 = add nuw nsw i32 %v3_10008948, 191
  %v1_10008960 = urem i32 %v1_10008958, 256
  %v2_10008964 = icmp ugt i32 %v1_10008960, 25
  %v1_10008968 = add nuw nsw i32 %v6_10008950, 191
  %v1_1000896c = urem i32 %v1_10008968, 256
  %v2_10008970 = icmp ugt i32 %v1_1000896c, 25
  br i1 %v2_10008964, label %dec_label_pc_1000897c, label %dec_label_pc_10008978

dec_label_pc_10008978:                            ; preds = %dec_label_pc_10008948
  %v1_10008978 = or i32 %v3_10008948, 96
  br i1 %v2_10008970, label %dec_label_pc_10008984, label %dec_label_pc_10008980

dec_label_pc_1000897c:                            ; preds = %dec_label_pc_10008948
  br i1 %v2_10008970, label %dec_label_pc_10008984, label %dec_label_pc_10008980

dec_label_pc_10008980:                            ; preds = %dec_label_pc_10008978, %dec_label_pc_1000897c
  %v1_1000898414 = phi i32 [ %v1_10008978, %dec_label_pc_10008978 ], [ %v3_10008948, %dec_label_pc_1000897c ]
  %v1_10008980 = or i32 %v6_10008950, 96
  br label %dec_label_pc_10008984

dec_label_pc_10008984:                            ; preds = %dec_label_pc_10008978, %dec_label_pc_1000897c, %dec_label_pc_10008980
  %v1_10008984 = phi i32 [ %v1_10008978, %dec_label_pc_10008978 ], [ %v3_10008948, %dec_label_pc_1000897c ], [ %v1_1000898414, %dec_label_pc_10008980 ]
  %v0_10008984 = phi i32 [ %v6_10008950, %dec_label_pc_10008978 ], [ %v6_10008950, %dec_label_pc_1000897c ], [ %v1_10008980, %dec_label_pc_10008980 ]
  %v4_10008984 = icmp eq i32 %v0_10008984, %v1_10008984
  br i1 %v4_10008984, label %dec_label_pc_1000899c, label %dec_label_pc_1000898c

dec_label_pc_1000898c:                            ; preds = %dec_label_pc_10008984
  %v1_10008990 = add i32 %v0_10008990, -1
  %v2_10008990 = icmp eq i32 %v1_10008990, 0
  br i1 %v2_10008990, label %dec_label_pc_10008994, label %dec_label_pc_10008948

dec_label_pc_10008994:                            ; preds = %dec_label_pc_10008944, %dec_label_pc_1000898c
  ret i32 -1

dec_label_pc_1000899c:                            ; preds = %dec_label_pc_10008984
  %v4_1000895c.le = icmp eq i32 %v0_1000895c11, %v1_10008954
  br i1 %v4_1000895c.le, label %dec_label_pc_100089a0, label %dec_label_pc_10008944

dec_label_pc_100089a0:                            ; preds = %dec_label_pc_1000899c
  %v2_100089a0 = sub i32 %v1_1000894c, %tmp16
  ret i32 %v2_100089a0

dec_label_pc_100089a8:                            ; preds = %dec_label_pc_1000892c
  br label %dec_label_pc_10008944

; uselistorder directives
  uselistorder i32 %v1_10008990, { 1, 0 }
  uselistorder i32 %v1_10008978, { 1, 0 }
  uselistorder i1 %v2_10008970, { 1, 0 }
  uselistorder i32 %v1_10008954, { 1, 0 }
  uselistorder i32 %v3_10008948, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10008990, { 1, 0 }
  uselistorder i32 %v0_10008948, { 1, 0 }
  uselistorder i32 %v2_10008950, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 8, 9, 10, 4, 5, 6, 0, 1, 7, 2, 3 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10008994, { 1, 0 }
  uselistorder label %dec_label_pc_10008984, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008980, { 1, 0 }
  uselistorder label %dec_label_pc_10008948, { 1, 0 }
  uselistorder label %dec_label_pc_10008944, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000891c, { 1, 0 }
}

define i32 @function_100089b4(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100089b4:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100089b4 = icmp eq i32 %arg3, 0
  %v4_100089b8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100089b8, i32* %stack_var_-64, align 4
  %v5_100089b8 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_100089b4, label %dec_label_pc_100089d4, label %dec_label_pc_100089c0

dec_label_pc_100089c0:                            ; preds = %dec_label_pc_100089b4
  %v0_100089c0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100089c0 = icmp eq i32 %v0_100089c0, 0
  store i1 %v3_100089c0, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_100089c0, label %dec_label_pc_100089c8, label %dec_label_pc_100089e0

dec_label_pc_100089c8:                            ; preds = %dec_label_pc_100089c0
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_100089cc = add i32 %arg3, 1
  %v5_100089cc = inttoptr i32 %v4_100089cc to i8*
  store i8 0, i8* %v5_100089cc, align 1
  %v0_100089d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100089d0 = trunc i32 %v0_100089d0 to i8
  store i8 %v1_100089d0, i8* %tmp, align 1
  br label %dec_label_pc_100089d4

dec_label_pc_100089d4:                            ; preds = %dec_label_pc_10008a60, %dec_label_pc_100089b4, %dec_label_pc_100089c8
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_100089e0:                            ; preds = %dec_label_pc_100089c0
  %v2_100089c0 = icmp sgt i32 %v0_100089c0, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100089e0.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_100089c0, %v3_100089e0.not
  br i1 %brmerge, label %dec_label_pc_100089f4, label %dec_label_pc_10008aa8

dec_label_pc_100089f4:                            ; preds = %dec_label_pc_100089e0, %dec_label_pc_10008aa8
  %v0_100089f82 = phi i32 [ %v0_100089c0, %dec_label_pc_100089e0 ], [ %v1_10008aa8, %dec_label_pc_10008aa8 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100089e0 ], [ 1, %dec_label_pc_10008aa8 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100089f8

dec_label_pc_100089f8:                            ; preds = %dec_label_pc_10008a24.dec_label_pc_100089f8_crit_edge, %dec_label_pc_100089f4
  %v1_100089fc = phi i32 [ %v1_100089fc.pre, %dec_label_pc_10008a24.dec_label_pc_100089f8_crit_edge ], [ 32, %dec_label_pc_100089f4 ]
  %v0_100089fc = phi i32 [ %v0_100089fc.pre, %dec_label_pc_10008a24.dec_label_pc_100089f8_crit_edge ], [ %v5_100089b8, %dec_label_pc_100089f4 ]
  %v1_10008a0c = phi i32 [ %v0_100089f8.pre, %dec_label_pc_10008a24.dec_label_pc_100089f8_crit_edge ], [ %v0_100089f82, %dec_label_pc_100089f4 ]
  %v2_100089f8 = udiv i32 %v1_10008a0c, %arg2
  %v2_100089fc = add i32 %v0_100089fc, %v1_100089fc
  store i32 %v2_100089fc, i32* %r11.global-to-local, align 4
  %v1_10008a00 = add i32 %v1_100089fc, -1
  store i32 %v1_10008a00, i32* %r10.global-to-local, align 4
  %v2_10008a04 = mul i32 %v2_100089f8, %arg2
  %v3_10008a08 = icmp ult i32 %v1_10008a0c, %arg2
  store i1 %v3_10008a08, i1* %cr6_eq.global-to-local, align 1
  %v2_10008a0c = sub i32 %v1_10008a0c, %v2_10008a04
  store i32 %v2_10008a0c, i32* %r9.global-to-local, align 4
  store i32 %v2_100089f8, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_10008a0c, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_10008a0c
  %v0_10008a24.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_10008a24 = add i32 %v2_100089fc, 8
  %v4_10008a24 = inttoptr i32 %v3_10008a24 to i8*
  store i8 %v0_10008a24.off0, i8* %v4_10008a24, align 1
  %v0_10008a28 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10008a28, label %dec_label_pc_10008a2c, label %dec_label_pc_10008a24.dec_label_pc_100089f8_crit_edge

dec_label_pc_10008a24.dec_label_pc_100089f8_crit_edge: ; preds = %dec_label_pc_100089f8
  %v0_100089f8.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_100089fc.pre = load i32, i32* @r1, align 4
  %v1_100089fc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100089f8

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_100089f8
  %v0_10008a2c = load i32, i32* %r8.global-to-local, align 4
  %v3_10008a2c = icmp eq i32 %v0_10008a2c, 0
  br i1 %v3_10008a2c, label %dec_label_pc_10008a34, label %dec_label_pc_10008a94

dec_label_pc_10008a34:                            ; preds = %dec_label_pc_10008a2c
  %v0_10008a34 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008a34 = add i32 %v0_10008a34, 1
  store i32 %v1_10008a34, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008a38

dec_label_pc_10008a38:                            ; preds = %dec_label_pc_10008a94, %dec_label_pc_10008a34
  %v1_10008a40 = phi i32 [ %v1_10008a3c.pre, %dec_label_pc_10008a94 ], [ %v1_10008a34, %dec_label_pc_10008a34 ]
  %v2_10008a38 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008a38, i32* %r9.global-to-local, align 4
  %v2_10008a3c = add i32 %v1_10008a40, %v2_10008a38
  %v3_10008a3c = inttoptr i32 %v2_10008a3c to i8*
  %v4_10008a3c = load i8, i8* %v3_10008a3c, align 1
  %v5_10008a3c = zext i8 %v4_10008a3c to i32
  store i32 %v5_10008a3c, i32* %r0.global-to-local, align 4
  store i32 %v2_10008a3c, i32* %r9.global-to-local, align 4
  %v3_10008a44 = icmp eq i8 %v4_10008a3c, 0
  br i1 %v3_10008a44, label %dec_label_pc_10008abc, label %dec_label_pc_10008a4c

dec_label_pc_10008a4c:                            ; preds = %dec_label_pc_10008a38
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008a50

dec_label_pc_10008a50:                            ; preds = %dec_label_pc_10008a50, %dec_label_pc_10008a4c
  %v0_10008a50 = phi i32 [ %v1_10008a50, %dec_label_pc_10008a50 ], [ 0, %dec_label_pc_10008a4c ]
  %v1_10008a50 = add i32 %v0_10008a50, 1
  store i32 %v1_10008a50, i32* %r10.global-to-local, align 4
  %v2_10008a54 = add i32 %v1_10008a50, %v2_10008a3c
  %v3_10008a54 = inttoptr i32 %v2_10008a54 to i8*
  %v4_10008a54 = load i8, i8* %v3_10008a54, align 1
  %v5_10008a54 = zext i8 %v4_10008a54 to i32
  store i32 %v5_10008a54, i32* %r0.global-to-local, align 4
  %v3_10008a58 = icmp eq i8 %v4_10008a54, 0
  br i1 %v3_10008a58, label %dec_label_pc_10008a60, label %dec_label_pc_10008a50

dec_label_pc_10008a60:                            ; preds = %dec_label_pc_10008a50
  %v3_10008a60 = icmp eq i32 %v1_10008a50, -1
  br i1 %v3_10008a60, label %dec_label_pc_100089d4, label %dec_label_pc_10008a68

dec_label_pc_10008a68:                            ; preds = %dec_label_pc_10008a60
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_10008a50, 2
  br label %dec_label_pc_10008a6c

dec_label_pc_10008a6c:                            ; preds = %dec_label_pc_10008abc, %dec_label_pc_10008a68
  %v0_10008a6c = phi i32 [ 1, %dec_label_pc_10008abc ], [ %phitmp, %dec_label_pc_10008a68 ]
  store i32 %v0_10008a6c, i32* %r10.global-to-local, align 4
  store i32 %v0_10008a6c, i32* %ctr.global-to-local, align 4
  %v2_10008a7424 = load i8, i8* %v3_10008a3c, align 1
  %v3_10008a7425 = zext i8 %v2_10008a7424 to i32
  store i32 %v3_10008a7425, i32* %r0.global-to-local, align 4
  %v1_10008a7826 = add i32 %v2_10008a3c, 1
  store i32 %v1_10008a7826, i32* %r9.global-to-local, align 4
  store i8 %v2_10008a7424, i8* %tmp, align 1
  %v0_10008a8028 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008a8029 = add i32 %v0_10008a8028, 1
  store i32 %v1_10008a8029, i32* %r11.global-to-local, align 4
  %v0_10008a8430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008a8431 = add i32 %v0_10008a8430, -1
  store i32 %v1_10008a8431, i32* %ctr.global-to-local, align 4
  %v2_10008a8432 = icmp eq i32 %v1_10008a8431, 0
  br i1 %v2_10008a8432, label %dec_label_pc_10008a88, label %dec_label_pc_10008a74.dec_label_pc_10008a74_crit_edge

dec_label_pc_10008a74.dec_label_pc_10008a74_crit_edge: ; preds = %dec_label_pc_10008a6c, %dec_label_pc_10008a74.dec_label_pc_10008a74_crit_edge
  %v1_10008a8033 = phi i32 [ %v1_10008a80, %dec_label_pc_10008a74.dec_label_pc_10008a74_crit_edge ], [ %v1_10008a8029, %dec_label_pc_10008a6c ]
  %v0_10008a74.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10008a74 = inttoptr i32 %v0_10008a74.pre to i8*
  %v2_10008a74 = load i8, i8* %v1_10008a74, align 1
  %v3_10008a74 = zext i8 %v2_10008a74 to i32
  store i32 %v3_10008a74, i32* %r0.global-to-local, align 4
  %v1_10008a78 = add i32 %v0_10008a74.pre, 1
  store i32 %v1_10008a78, i32* %r9.global-to-local, align 4
  %v3_10008a7c = inttoptr i32 %v1_10008a8033 to i8*
  store i8 %v2_10008a74, i8* %v3_10008a7c, align 1
  %v0_10008a80 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008a80 = add i32 %v0_10008a80, 1
  store i32 %v1_10008a80, i32* %r11.global-to-local, align 4
  %v0_10008a84 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008a84 = add i32 %v0_10008a84, -1
  store i32 %v1_10008a84, i32* %ctr.global-to-local, align 4
  %v2_10008a84 = icmp eq i32 %v1_10008a84, 0
  br i1 %v2_10008a84, label %dec_label_pc_10008a88, label %dec_label_pc_10008a74.dec_label_pc_10008a74_crit_edge

dec_label_pc_10008a88:                            ; preds = %dec_label_pc_10008a74.dec_label_pc_10008a74_crit_edge, %dec_label_pc_10008a6c
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008a94:                            ; preds = %dec_label_pc_10008a2c
  %v0_10008a94.pre = load i32, i32* @r1, align 4
  %v1_10008a94.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008a94 = add i32 %v1_10008a94.pre, %v0_10008a94.pre
  store i32 %v2_10008a94, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_10008a9c = add i32 %v2_10008a94, 8
  %v4_10008a9c = inttoptr i32 %v3_10008a9c to i8*
  store i8 45, i8* %v4_10008a9c, align 1
  %v1_10008a3c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008a38

dec_label_pc_10008aa8:                            ; preds = %dec_label_pc_100089e0
  %v1_10008aa8 = sub i32 0, %v0_100089c0
  store i32 %v1_10008aa8, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100089f4

dec_label_pc_10008abc:                            ; preds = %dec_label_pc_10008a38
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008a6c

; uselistorder directives
  uselistorder i32 %v1_10008aa8, { 1, 0 }
  uselistorder i32 %v1_10008a84, { 1, 0 }
  uselistorder i32 %v1_10008a80, { 1, 0 }
  uselistorder i32 %v0_10008a6c, { 1, 0 }
  uselistorder i32 %v1_10008a50, { 0, 1, 3, 2 }
  uselistorder i32 %v2_100089f8, { 1, 0 }
  uselistorder i32 %v1_10008a0c, { 1, 0, 2 }
  uselistorder i32 %v1_100089fc, { 1, 0 }
  uselistorder i32 %v0_100089c0, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 9, 7, 2, 3, 5, 4, 6, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10008a74.dec_label_pc_10008a74_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100089f4, { 1, 0 }
  uselistorder label %dec_label_pc_100089d4, { 0, 2, 1 }
}

define i32 @function_10008ac8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008ac8:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10008ad8 = icmp eq i32 %arg2, -2143521772
  %v2_10008aec = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008aec, i32* %stack_var_-32, align 4
  br i1 %v4_10008ad8, label %dec_label_pc_10008b4c, label %dec_label_pc_10008b0c

dec_label_pc_10008b0c:                            ; preds = %dec_label_pc_10008ac8
  %v3_10008b0c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10008b0c, label %dec_label_pc_10008b24, label %dec_label_pc_10008b14

dec_label_pc_10008b14:                            ; preds = %dec_label_pc_10008b0c
  %v3_10008b18 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10008b18, label %dec_label_pc_10008b40, label %dec_label_pc_10008b6c

dec_label_pc_10008b24:                            ; preds = %dec_label_pc_10008b0c
  %v1_10008b24 = xor i32 %arg2, -2143551488
  %v3_10008b28 = icmp eq i32 %v1_10008b24, 29717
  br i1 %v3_10008b28, label %dec_label_pc_10008b5c, label %dec_label_pc_10008b30

dec_label_pc_10008b30:                            ; preds = %dec_label_pc_10008b24
  %v3_10008b34 = icmp eq i32 %v1_10008b24, 29718
  br i1 %v3_10008b34, label %dec_label_pc_10008b64, label %dec_label_pc_10008b6c

dec_label_pc_10008b40:                            ; preds = %dec_label_pc_10008b14
  store i32 ptrtoint (i32* @global_var_10008b48.292 to i32), i32* @lr, align 4
  %v2_10008b44 = inttoptr i32 %arg3 to i32*
  %v3_10008b44 = call i32 @function_10009504(i32* %v2_10008b44, i32 %arg1)
  br label %dec_label_pc_10008b54

dec_label_pc_10008b4c:                            ; preds = %dec_label_pc_10008ac8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10008b50

dec_label_pc_10008b50:                            ; preds = %dec_label_pc_10008b64, %dec_label_pc_10008b5c, %dec_label_pc_10008b4c
  store i32 268471124, i32* @lr, align 4
  %v0_10008b50 = call i32 @function_100095a0()
  br label %dec_label_pc_10008b54

dec_label_pc_10008b54:                            ; preds = %dec_label_pc_10008b40, %dec_label_pc_10008b50
  %storemerge = phi i32 [ %v0_10008b50, %dec_label_pc_10008b50 ], [ %v3_10008b44, %dec_label_pc_10008b40 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008b98

dec_label_pc_10008b5c:                            ; preds = %dec_label_pc_10008b24
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10008b50

dec_label_pc_10008b64:                            ; preds = %dec_label_pc_10008b30
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10008b50

dec_label_pc_10008b6c:                            ; preds = %dec_label_pc_10008b30, %dec_label_pc_10008b14
  %v0_10008b7c = call i32 @__asm_mfcr()
  %v1_10008b80 = and i32 %v0_10008b7c, 268435456
  %v3_10008b80 = icmp eq i32 %v1_10008b80, 0
  store i32 %v0_10008b7c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008b80, label %dec_label_pc_10008b98, label %dec_label_pc_10008b8c

dec_label_pc_10008b8c:                            ; preds = %dec_label_pc_10008b6c
  %v0_10008b8c = call i32 @function_1000936c()
  %v0_10008b90 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008b90 = inttoptr i32 %v0_10008b8c to i32*
  store i32 %v0_10008b90, i32* %v2_10008b90, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008b98

dec_label_pc_10008b98:                            ; preds = %dec_label_pc_10008b6c, %dec_label_pc_10008b54, %dec_label_pc_10008b8c
  %v0_10008b9c = phi i32 [ %v0_10008b7c, %dec_label_pc_10008b6c ], [ %storemerge, %dec_label_pc_10008b54 ], [ -1, %dec_label_pc_10008b8c ]
  ret i32 %v0_10008b9c

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10008b98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008b54, { 1, 0 }
}

define i32 @function_10008bb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008bb0:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10008bc4 = load i32, i32* @r4, align 4
  %v1_10008bc4 = add i32 %v0_10008bc4, -12
  %v2_10008bc8 = icmp ugt i32 %v1_10008bc4, 2
  %v2_10008bd0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008bd0, i32* %stack_var_-32, align 4
  br i1 %v2_10008bc8, label %dec_label_pc_10008bfc, label %dec_label_pc_10008bec

dec_label_pc_10008bec:                            ; preds = %dec_label_pc_10008bb0
  store i32 268471284, i32* @lr, align 4
  %v2_10008bf0 = call i32 @function_10008c34(i32 3)
  store i32 %v2_10008bf0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008c1c

dec_label_pc_10008bfc:                            ; preds = %dec_label_pc_10008bb0
  %v0_10008c00 = call i32 @__asm_mfcr()
  %v1_10008c04 = and i32 %v0_10008c00, 268435456
  %v3_10008c04 = icmp eq i32 %v1_10008c04, 0
  store i32 %v0_10008c00, i32* %r31.global-to-local, align 4
  br i1 %v3_10008c04, label %dec_label_pc_10008c1c, label %dec_label_pc_10008c10

dec_label_pc_10008c10:                            ; preds = %dec_label_pc_10008bfc
  %v0_10008c10 = call i32 @function_1000936c()
  %v0_10008c14 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c14 = inttoptr i32 %v0_10008c10 to i32*
  store i32 %v0_10008c14, i32* %v2_10008c14, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008c1c

dec_label_pc_10008c1c:                            ; preds = %dec_label_pc_10008bfc, %dec_label_pc_10008bec, %dec_label_pc_10008c10
  %v0_10008c20 = phi i32 [ %v0_10008c00, %dec_label_pc_10008bfc ], [ %v2_10008bf0, %dec_label_pc_10008bec ], [ -1, %dec_label_pc_10008c10 ]
  ret i32 %v0_10008c20

; uselistorder directives
  uselistorder label %dec_label_pc_10008c1c, { 2, 0, 1 }
}

define i32 @function_10008c34(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008c34:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10008c4c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008c4c, i32* %stack_var_-32, align 4
  %v0_10008c68 = call i32 @__asm_mfcr()
  %v1_10008c6c = and i32 %v0_10008c68, 268435456
  %v3_10008c6c = icmp eq i32 %v1_10008c6c, 0
  store i32 %v0_10008c68, i32* %r31.global-to-local, align 4
  br i1 %v3_10008c6c, label %dec_label_pc_10008c84, label %dec_label_pc_10008c78

dec_label_pc_10008c78:                            ; preds = %dec_label_pc_10008c34
  %v0_10008c78 = call i32 @function_1000936c()
  %v0_10008c7c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c7c = inttoptr i32 %v0_10008c78 to i32*
  store i32 %v0_10008c7c, i32* %v2_10008c7c, align 4
  br label %dec_label_pc_10008c84

dec_label_pc_10008c84:                            ; preds = %dec_label_pc_10008c34, %dec_label_pc_10008c78
  %v0_10008c94 = phi i32 [ %v0_10008c68, %dec_label_pc_10008c34 ], [ -1, %dec_label_pc_10008c78 ]
  ret i32 %v0_10008c94

; uselistorder directives
  uselistorder label %dec_label_pc_10008c84, { 1, 0 }
}

define i32 @function_10008c98() local_unnamed_addr {
dec_label_pc_10008c98:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008cb0 = call i32 @__asm_mfcr()
  %v1_10008cb4 = and i32 %v0_10008cb0, 268435456
  %v3_10008cb4 = icmp eq i32 %v1_10008cb4, 0
  store i32 %v0_10008cb0, i32* %r31.global-to-local, align 4
  br i1 %v3_10008cb4, label %dec_label_pc_10008ccc, label %dec_label_pc_10008cc0

dec_label_pc_10008cc0:                            ; preds = %dec_label_pc_10008c98
  %v0_10008cc0 = call i32 @function_1000936c()
  %v0_10008cc4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008cc4 = inttoptr i32 %v0_10008cc0 to i32*
  store i32 %v0_10008cc4, i32* %v2_10008cc4, align 4
  br label %dec_label_pc_10008ccc

dec_label_pc_10008ccc:                            ; preds = %dec_label_pc_10008c98, %dec_label_pc_10008cc0
  %v0_10008cdc = phi i32 [ %v0_10008cb0, %dec_label_pc_10008c98 ], [ -1, %dec_label_pc_10008cc0 ]
  ret i32 %v0_10008cdc

; uselistorder directives
  uselistorder label %dec_label_pc_10008ccc, { 1, 0 }
}

define i32 @function_10008ce0() local_unnamed_addr {
dec_label_pc_10008ce0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008cf8 = call i32 @__asm_mfcr()
  %v1_10008cfc = and i32 %v0_10008cf8, 268435456
  %v3_10008cfc = icmp eq i32 %v1_10008cfc, 0
  store i32 %v0_10008cf8, i32* %r31.global-to-local, align 4
  br i1 %v3_10008cfc, label %dec_label_pc_10008d14, label %dec_label_pc_10008d08

dec_label_pc_10008d08:                            ; preds = %dec_label_pc_10008ce0
  %v0_10008d08 = call i32 @function_1000936c()
  %v0_10008d0c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008d0c = inttoptr i32 %v0_10008d08 to i32*
  store i32 %v0_10008d0c, i32* %v2_10008d0c, align 4
  br label %dec_label_pc_10008d14

dec_label_pc_10008d14:                            ; preds = %dec_label_pc_10008ce0, %dec_label_pc_10008d08
  %v0_10008d24 = phi i32 [ %v0_10008cf8, %dec_label_pc_10008ce0 ], [ -1, %dec_label_pc_10008d08 ]
  ret i32 %v0_10008d24

; uselistorder directives
  uselistorder label %dec_label_pc_10008d14, { 1, 0 }
}

define i32 @function_10008d28() local_unnamed_addr {
dec_label_pc_10008d28:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008d40 = call i32 @__asm_mfcr()
  %v1_10008d44 = and i32 %v0_10008d40, 268435456
  %v3_10008d44 = icmp eq i32 %v1_10008d44, 0
  store i32 %v0_10008d40, i32* %r31.global-to-local, align 4
  br i1 %v3_10008d44, label %dec_label_pc_10008d5c, label %dec_label_pc_10008d50

dec_label_pc_10008d50:                            ; preds = %dec_label_pc_10008d28
  %v0_10008d50 = call i32 @function_1000936c()
  %v0_10008d54 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008d54 = inttoptr i32 %v0_10008d50 to i32*
  store i32 %v0_10008d54, i32* %v2_10008d54, align 4
  br label %dec_label_pc_10008d5c

dec_label_pc_10008d5c:                            ; preds = %dec_label_pc_10008d28, %dec_label_pc_10008d50
  %v0_10008d6c = phi i32 [ %v0_10008d40, %dec_label_pc_10008d28 ], [ -1, %dec_label_pc_10008d50 ]
  ret i32 %v0_10008d6c

; uselistorder directives
  uselistorder label %dec_label_pc_10008d5c, { 1, 0 }
}

define i32 @function_10008d70() local_unnamed_addr {
dec_label_pc_10008d70:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008d88 = call i32 @__asm_mfcr()
  %v1_10008d8c = and i32 %v0_10008d88, 268435456
  %v3_10008d8c = icmp eq i32 %v1_10008d8c, 0
  store i32 %v0_10008d88, i32* %r31.global-to-local, align 4
  br i1 %v3_10008d8c, label %dec_label_pc_10008da4, label %dec_label_pc_10008d98

dec_label_pc_10008d98:                            ; preds = %dec_label_pc_10008d70
  %v0_10008d98 = call i32 @function_1000936c()
  %v0_10008d9c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008d9c = inttoptr i32 %v0_10008d98 to i32*
  store i32 %v0_10008d9c, i32* %v2_10008d9c, align 4
  br label %dec_label_pc_10008da4

dec_label_pc_10008da4:                            ; preds = %dec_label_pc_10008d70, %dec_label_pc_10008d98
  %v0_10008db4 = phi i32 [ %v0_10008d88, %dec_label_pc_10008d70 ], [ -1, %dec_label_pc_10008d98 ]
  ret i32 %v0_10008db4

; uselistorder directives
  uselistorder label %dec_label_pc_10008da4, { 1, 0 }
}

define i32 @function_10008db8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008db8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008dd0 = call i32 @__asm_mfcr()
  %v1_10008dd4 = and i32 %v0_10008dd0, 268435456
  %v3_10008dd4 = icmp eq i32 %v1_10008dd4, 0
  store i32 %v0_10008dd0, i32* %r31.global-to-local, align 4
  br i1 %v3_10008dd4, label %dec_label_pc_10008dec, label %dec_label_pc_10008de0

dec_label_pc_10008de0:                            ; preds = %dec_label_pc_10008db8
  %v0_10008de0 = call i32 @function_1000936c()
  %v0_10008de4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008de4 = inttoptr i32 %v0_10008de0 to i32*
  store i32 %v0_10008de4, i32* %v2_10008de4, align 4
  br label %dec_label_pc_10008dec

dec_label_pc_10008dec:                            ; preds = %dec_label_pc_10008db8, %dec_label_pc_10008de0
  %v0_10008dfc = phi i32 [ %v0_10008dd0, %dec_label_pc_10008db8 ], [ -1, %dec_label_pc_10008de0 ]
  ret i32 %v0_10008dfc

; uselistorder directives
  uselistorder label %dec_label_pc_10008dec, { 1, 0 }
}

define i32 @function_10008e00(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008e00:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10008e14 = and i32 %arg2, 64
  %v3_10008e14 = icmp eq i32 %v1_10008e14, 0
  br i1 %v3_10008e14, label %dec_label_pc_10008e40, label %dec_label_pc_10008e24

dec_label_pc_10008e24:                            ; preds = %dec_label_pc_10008e00
  %v2_10008e2c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008e2c, i32* %stack_var_-32, align 4
  %v0_10008e3c = load i32, i32* @r5, align 4
  br label %dec_label_pc_10008e40

dec_label_pc_10008e40:                            ; preds = %dec_label_pc_10008e00, %dec_label_pc_10008e24
  %v0_10008e40 = phi i32 [ 0, %dec_label_pc_10008e00 ], [ %v0_10008e3c, %dec_label_pc_10008e24 ]
  store i32 %v0_10008e40, i32* @r5, align 4
  %v0_10008e48 = call i32 @__asm_mfcr()
  %v1_10008e4c = and i32 %v0_10008e48, 268435456
  %v3_10008e4c = icmp eq i32 %v1_10008e4c, 0
  store i32 %v0_10008e48, i32* %r31.global-to-local, align 4
  br i1 %v3_10008e4c, label %dec_label_pc_10008e64, label %dec_label_pc_10008e58

dec_label_pc_10008e58:                            ; preds = %dec_label_pc_10008e40
  %v0_10008e58 = call i32 @function_1000936c()
  %v0_10008e5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008e5c = inttoptr i32 %v0_10008e58 to i32*
  store i32 %v0_10008e5c, i32* %v2_10008e5c, align 4
  br label %dec_label_pc_10008e64

dec_label_pc_10008e64:                            ; preds = %dec_label_pc_10008e40, %dec_label_pc_10008e58
  %v0_10008e74 = phi i32 [ %v0_10008e48, %dec_label_pc_10008e40 ], [ -1, %dec_label_pc_10008e58 ]
  ret i32 %v0_10008e74

; uselistorder directives
  uselistorder label %dec_label_pc_10008e64, { 1, 0 }
  uselistorder label %dec_label_pc_10008e40, { 1, 0 }
}

define i32 @function_10008e78(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008e78:
  store i32 %arg1, i32* @r5, align 4
  %v2_10008e84 = call i32 @function_10008e00(i32 577, i32 577)
  ret i32 %v2_10008e84
}

define i32 @function_10008e88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008e88:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008ea0 = call i32 @__asm_mfcr()
  %v1_10008ea4 = and i32 %v0_10008ea0, 268435456
  %v3_10008ea4 = icmp eq i32 %v1_10008ea4, 0
  store i32 %v0_10008ea0, i32* %r31.global-to-local, align 4
  br i1 %v3_10008ea4, label %dec_label_pc_10008ebc, label %dec_label_pc_10008eb0

dec_label_pc_10008eb0:                            ; preds = %dec_label_pc_10008e88
  %v0_10008eb0 = call i32 @function_1000936c()
  %v0_10008eb4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008eb4 = inttoptr i32 %v0_10008eb0 to i32*
  store i32 %v0_10008eb4, i32* %v2_10008eb4, align 4
  br label %dec_label_pc_10008ebc

dec_label_pc_10008ebc:                            ; preds = %dec_label_pc_10008e88, %dec_label_pc_10008eb0
  %v0_10008ecc = phi i32 [ %v0_10008ea0, %dec_label_pc_10008e88 ], [ -1, %dec_label_pc_10008eb0 ]
  ret i32 %v0_10008ecc

; uselistorder directives
  uselistorder label %dec_label_pc_10008ebc, { 1, 0 }
}

define i32 @function_10008ed0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008ed0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008ee8 = call i32 @__asm_mfcr()
  %v1_10008eec = and i32 %v0_10008ee8, 268435456
  %v3_10008eec = icmp eq i32 %v1_10008eec, 0
  store i32 %v0_10008ee8, i32* %r31.global-to-local, align 4
  br i1 %v3_10008eec, label %dec_label_pc_10008f04, label %dec_label_pc_10008ef8

dec_label_pc_10008ef8:                            ; preds = %dec_label_pc_10008ed0
  %v0_10008ef8 = call i32 @function_1000936c()
  %v0_10008efc = load i32, i32* %r31.global-to-local, align 4
  %v2_10008efc = inttoptr i32 %v0_10008ef8 to i32*
  store i32 %v0_10008efc, i32* %v2_10008efc, align 4
  br label %dec_label_pc_10008f04

dec_label_pc_10008f04:                            ; preds = %dec_label_pc_10008ed0, %dec_label_pc_10008ef8
  %v0_10008f14 = phi i32 [ %v0_10008ee8, %dec_label_pc_10008ed0 ], [ -1, %dec_label_pc_10008ef8 ]
  ret i32 %v0_10008f14

; uselistorder directives
  uselistorder label %dec_label_pc_10008f04, { 1, 0 }
}

define i32 @function_10008f18(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008f18:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008f30 = call i32 @__asm_mfcr()
  %v1_10008f34 = and i32 %v0_10008f30, 268435456
  %v3_10008f34 = icmp eq i32 %v1_10008f34, 0
  store i32 %v0_10008f30, i32* %r31.global-to-local, align 4
  br i1 %v3_10008f34, label %dec_label_pc_10008f4c, label %dec_label_pc_10008f40

dec_label_pc_10008f40:                            ; preds = %dec_label_pc_10008f18
  %v0_10008f40 = call i32 @function_1000936c()
  %v0_10008f44 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008f44 = inttoptr i32 %v0_10008f40 to i32*
  store i32 %v0_10008f44, i32* %v2_10008f44, align 4
  br label %dec_label_pc_10008f4c

dec_label_pc_10008f4c:                            ; preds = %dec_label_pc_10008f18, %dec_label_pc_10008f40
  %v0_10008f5c = phi i32 [ %v0_10008f30, %dec_label_pc_10008f18 ], [ -1, %dec_label_pc_10008f40 ]
  ret i32 %v0_10008f5c

; uselistorder directives
  uselistorder label %dec_label_pc_10008f4c, { 1, 0 }
}

define i32 @function_10008f60(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10008f60:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008f78 = call i32 @__asm_mfcr()
  %v1_10008f7c = and i32 %v0_10008f78, 268435456
  %v3_10008f7c = icmp eq i32 %v1_10008f7c, 0
  store i32 %v0_10008f78, i32* %r31.global-to-local, align 4
  br i1 %v3_10008f7c, label %dec_label_pc_10008f94, label %dec_label_pc_10008f88

dec_label_pc_10008f88:                            ; preds = %dec_label_pc_10008f60
  %v0_10008f88 = call i32 @function_1000936c()
  %v0_10008f8c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008f8c = inttoptr i32 %v0_10008f88 to i32*
  store i32 %v0_10008f8c, i32* %v2_10008f8c, align 4
  br label %dec_label_pc_10008f94

dec_label_pc_10008f94:                            ; preds = %dec_label_pc_10008f60, %dec_label_pc_10008f88
  %v0_10008fa4 = phi i32 [ %v0_10008f78, %dec_label_pc_10008f60 ], [ -1, %dec_label_pc_10008f88 ]
  ret i32 %v0_10008fa4

; uselistorder directives
  uselistorder label %dec_label_pc_10008f94, { 1, 0 }
}

define i32 @function_10008fa8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008fa8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008fc0 = call i32 @__asm_mfcr()
  %v1_10008fc4 = and i32 %v0_10008fc0, 268435456
  %v3_10008fc4 = icmp eq i32 %v1_10008fc4, 0
  store i32 %v0_10008fc0, i32* %r31.global-to-local, align 4
  br i1 %v3_10008fc4, label %dec_label_pc_10008fdc, label %dec_label_pc_10008fd0

dec_label_pc_10008fd0:                            ; preds = %dec_label_pc_10008fa8
  %v0_10008fd0 = call i32 @function_1000936c()
  %v0_10008fd4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008fd4 = inttoptr i32 %v0_10008fd0 to i32*
  store i32 %v0_10008fd4, i32* %v2_10008fd4, align 4
  br label %dec_label_pc_10008fdc

dec_label_pc_10008fdc:                            ; preds = %dec_label_pc_10008fa8, %dec_label_pc_10008fd0
  %v0_10008fec = phi i32 [ %v0_10008fc0, %dec_label_pc_10008fa8 ], [ -1, %dec_label_pc_10008fd0 ]
  ret i32 %v0_10008fec

; uselistorder directives
  uselistorder label %dec_label_pc_10008fdc, { 1, 0 }
}

define i32 @function_10008ff0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008ff0:
  %r31.global-to-local = alloca i32, align 4
  %v3_10008ff0 = icmp eq i32 %arg2, 0
  br i1 %v3_10008ff0, label %dec_label_pc_10009030, label %dec_label_pc_10009018

dec_label_pc_10009018:                            ; preds = %dec_label_pc_10008ff0
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10009030, label %dec_label_pc_10009020

dec_label_pc_10009020:                            ; preds = %dec_label_pc_10009018
  %v0_10009020 = call i32 @function_1000936c()
  %v2_10009028 = inttoptr i32 %v0_10009020 to i32*
  store i32 22, i32* %v2_10009028, align 4
  %v0_10009054.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009050

dec_label_pc_10009030:                            ; preds = %dec_label_pc_10009018, %dec_label_pc_10008ff0
  %v0_10009034 = call i32 @__asm_mfcr()
  %v1_10009038 = and i32 %v0_10009034, 268435456
  %v3_10009038 = icmp eq i32 %v1_10009038, 0
  store i32 %v0_10009034, i32* %r31.global-to-local, align 4
  br i1 %v3_10009038, label %dec_label_pc_10009050, label %dec_label_pc_10009044

dec_label_pc_10009044:                            ; preds = %dec_label_pc_10009030
  %v0_10009044 = call i32 @function_1000936c()
  %v0_10009048 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009048 = inttoptr i32 %v0_10009044 to i32*
  store i32 %v0_10009048, i32* %v2_10009048, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009050

dec_label_pc_10009050:                            ; preds = %dec_label_pc_10009030, %dec_label_pc_10009020, %dec_label_pc_10009044
  %v0_10009054 = phi i32 [ %v0_10009034, %dec_label_pc_10009030 ], [ %v0_10009054.pre, %dec_label_pc_10009020 ], [ -1, %dec_label_pc_10009044 ]
  ret i32 %v0_10009054

; uselistorder directives
  uselistorder label %dec_label_pc_10009050, { 2, 0, 1 }
}

define i32 @function_10009068() local_unnamed_addr {
dec_label_pc_10009068:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009080 = call i32 @__asm_mfcr()
  %v1_10009084 = and i32 %v0_10009080, 268435456
  %v3_10009084 = icmp eq i32 %v1_10009084, 0
  store i32 %v0_10009080, i32* %r31.global-to-local, align 4
  br i1 %v3_10009084, label %dec_label_pc_1000909c, label %dec_label_pc_10009090

dec_label_pc_10009090:                            ; preds = %dec_label_pc_10009068
  %v0_10009090 = call i32 @function_1000936c()
  %v0_10009094 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009094 = inttoptr i32 %v0_10009090 to i32*
  store i32 %v0_10009094, i32* %v2_10009094, align 4
  br label %dec_label_pc_1000909c

dec_label_pc_1000909c:                            ; preds = %dec_label_pc_10009068, %dec_label_pc_10009090
  %v0_100090ac = phi i32 [ %v0_10009080, %dec_label_pc_10009068 ], [ -1, %dec_label_pc_10009090 ]
  ret i32 %v0_100090ac

; uselistorder directives
  uselistorder label %dec_label_pc_1000909c, { 1, 0 }
}

define i32 @function_100090b0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100090b0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100090c8 = call i32 @__asm_mfcr()
  %v1_100090cc = and i32 %v0_100090c8, 268435456
  %v3_100090cc = icmp eq i32 %v1_100090cc, 0
  store i32 %v0_100090c8, i32* %r31.global-to-local, align 4
  br i1 %v3_100090cc, label %dec_label_pc_100090e4, label %dec_label_pc_100090d8

dec_label_pc_100090d8:                            ; preds = %dec_label_pc_100090b0
  %v0_100090d8 = call i32 @function_1000936c()
  %v0_100090dc = load i32, i32* %r31.global-to-local, align 4
  %v2_100090dc = inttoptr i32 %v0_100090d8 to i32*
  store i32 %v0_100090dc, i32* %v2_100090dc, align 4
  br label %dec_label_pc_100090e4

dec_label_pc_100090e4:                            ; preds = %dec_label_pc_100090b0, %dec_label_pc_100090d8
  %v0_100090f4 = phi i32 [ %v0_100090c8, %dec_label_pc_100090b0 ], [ -1, %dec_label_pc_100090d8 ]
  ret i32 %v0_100090f4

; uselistorder directives
  uselistorder label %dec_label_pc_100090e4, { 1, 0 }
}

define i32 @function_100090f8(i32* %arg1) local_unnamed_addr {
dec_label_pc_100090f8:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009114 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1000911c = load i32, i32* %arg1, align 4
  store i32 %v2_10009114, i32* @r3, align 4
  %v3_10009128 = icmp eq i32 %v2_1000911c, -1
  br i1 %v3_10009128, label %dec_label_pc_10009130, label %dec_label_pc_10009144

dec_label_pc_10009130:                            ; preds = %dec_label_pc_100090f8
  %v0_10009130 = call i32 @function_1000936c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000913c = inttoptr i32 %v0_10009130 to i32*
  store i32 9, i32* %v2_1000913c, align 4
  %v0_10009188.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009184

dec_label_pc_10009144:                            ; preds = %dec_label_pc_100090f8
  %v3_10009144 = call i32 @function_1000a708(i32 %v2_10009114, i32 ptrtoint ([3 x i8]* @global_var_1000a700.294 to i32))
  %v0_1000914c = call i32 @function_1000a700()
  %v0_10009154 = load i32, i32* @r31, align 4
  %v1_10009154 = inttoptr i32 %v0_10009154 to i32*
  %v2_10009154 = load i32, i32* %v1_10009154, align 4
  store i32 %v2_10009154, i32* @r29, align 4
  store i32 -1, i32* %v1_10009154, align 4
  store i32 %v2_10009114, i32* @r3, align 4
  %v2_10009164 = call i32 @function_1000a708(i32 %v2_10009114, i32 1)
  %v0_10009168 = load i32, i32* @r31, align 4
  %v1_10009168 = add i32 %v0_10009168, 12
  %v2_10009168 = inttoptr i32 %v1_10009168 to i32*
  %v3_10009168 = load i32, i32* %v2_10009168, align 4
  store i32 %v3_10009168, i32* @r3, align 4
  store i32 268472688, i32* @lr, align 4
  %v0_1000916c = call i32 @function_10009d6c()
  %v0_10009170 = load i32, i32* @r31, align 4
  store i32 %v0_10009170, i32* @r3, align 4
  store i32 268472696, i32* @lr, align 4
  %v0_10009174 = call i32 @function_10009d6c()
  store i32 268472704, i32* @lr, align 4
  %v0_1000917c = call i32 @function_10008c98()
  store i32 %v0_1000917c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009184

dec_label_pc_10009184:                            ; preds = %dec_label_pc_10009130, %dec_label_pc_10009144
  %v0_10009188 = phi i32 [ %v0_10009188.pre, %dec_label_pc_10009130 ], [ %v0_1000917c, %dec_label_pc_10009144 ]
  ret i32 %v0_10009188

; uselistorder directives
  uselistorder i32 %v2_10009114, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009184, { 1, 0 }
}

define i32 @function_1000919c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000919c:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_1000919c = load i32, i32* @lr, align 4
  store i32 %v0_1000919c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268472764, i32* @lr, align 4
  %v2_100091b8 = call i32 @function_10008e00(i32 18432, i32 18432)
  %v1_100091bc = icmp slt i32 %v2_100091b8, 0
  br i1 %v1_100091bc, label %dec_label_pc_10009294, label %dec_label_pc_100091c4

dec_label_pc_100091c4:                            ; preds = %dec_label_pc_1000919c
  %v2_100091c4 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_100091c4, i32* @r4, align 4
  store i32 268472780, i32* @lr, align 4
  %v1_100091c8 = call i32 @function_1000aadc(i32 %v2_100091c4)
  %v1_100091cc = icmp slt i32 %v1_100091c8, 0
  br i1 %v1_100091cc, label %dec_label_pc_100091f0, label %dec_label_pc_100091d4

dec_label_pc_100091d4:                            ; preds = %dec_label_pc_100091c4
  %v0_100091d4 = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268472808, i32* @lr, align 4
  %v2_100091e4 = call i32 @function_10008bb0(i32 %v0_100091d4)
  %tmp5 = icmp sgt i32 %v2_100091e4, -1
  br i1 %tmp5, label %dec_label_pc_10009210, label %dec_label_pc_100091f0

dec_label_pc_100091f0:                            ; preds = %dec_label_pc_100091d4, %dec_label_pc_100091c4
  %v0_100091f0 = call i32 @function_1000936c()
  store i32 0, i32* @r31, align 4
  store i32 %v0_100091f0, i32* @r28, align 4
  %v1_10009200 = inttoptr i32 %v0_100091f0 to i32*
  %v2_10009200 = load i32, i32* %v1_10009200, align 4
  store i32 268472840, i32* @lr, align 4
  %v0_10009204 = call i32 @function_10008c98()
  %v1_10009208 = load i32, i32* @r28, align 4
  %v2_10009208 = inttoptr i32 %v1_10009208 to i32*
  store i32 %v2_10009200, i32* %v2_10009208, align 4
  br label %dec_label_pc_10009294

dec_label_pc_10009210:                            ; preds = %dec_label_pc_100091d4
  store i32 48, i32* @r3, align 4
  store i32 268472856, i32* @lr, align 4
  %v0_10009214 = call i32 @function_10009ba4()
  store i32 %v0_10009214, i32* %r31.global-to-local, align 4
  %v3_10009218 = icmp eq i32 %v0_10009214, 0
  br i1 %v3_10009218, label %dec_label_pc_1000926c, label %dec_label_pc_10009220

dec_label_pc_10009220:                            ; preds = %dec_label_pc_10009210
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10009224 = load i32, i32* @r29, align 4
  %v2_10009224 = inttoptr i32 %v0_10009214 to i32*
  store i32 %v0_10009224, i32* %v2_10009224, align 4
  %v0_10009228 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009228 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009228 = add i32 %v1_10009228, 4
  %v3_10009228 = inttoptr i32 %v2_10009228 to i32*
  store i32 %v0_10009228, i32* %v3_10009228, align 4
  %v0_1000922c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000922c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000922c = add i32 %v1_1000922c, 16
  %v3_1000922c = inttoptr i32 %v2_1000922c to i32*
  store i32 %v0_1000922c, i32* %v3_1000922c, align 4
  %v0_10009230 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009230 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009230 = add i32 %v1_10009230, 8
  %v3_10009230 = inttoptr i32 %v2_10009230 to i32*
  store i32 %v0_10009230, i32* %v3_10009230, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_10009238 = icmp ugt i32 %tmp, 511
  %v1_1000923c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000923c = add i32 %v1_1000923c, 20
  %v3_1000923c = inttoptr i32 %v2_1000923c to i32*
  store i32 %tmp, i32* %v3_1000923c, align 4
  br i1 %v2_10009238, label %dec_label_pc_1000924c, label %dec_label_pc_10009244

dec_label_pc_10009244:                            ; preds = %dec_label_pc_10009220
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_10009248 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009248 = add i32 %v1_10009248, 20
  %v3_10009248 = inttoptr i32 %v2_10009248 to i32*
  store i32 512, i32* %v3_10009248, align 4
  br label %dec_label_pc_1000924c

dec_label_pc_1000924c:                            ; preds = %dec_label_pc_10009220, %dec_label_pc_10009244
  %v0_1000924c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000924c = add i32 %v0_1000924c, 20
  %v2_1000924c = inttoptr i32 %v1_1000924c to i32*
  %v3_1000924c = load i32, i32* %v2_1000924c, align 4
  store i32 268472920, i32* @lr, align 4
  %v2_10009254 = call i32 @function_10009cfc(i32 1, i32 %v3_1000924c)
  %v3_10009258 = icmp eq i32 %v2_10009254, 0
  %v1_1000925c = load i32, i32* @r31, align 4
  %v2_1000925c = add i32 %v1_1000925c, 12
  %v3_1000925c = inttoptr i32 %v2_1000925c to i32*
  store i32 %v2_10009254, i32* %v3_1000925c, align 4
  br i1 %v3_10009258, label %dec_label_pc_10009264, label %dec_label_pc_10009288

dec_label_pc_10009264:                            ; preds = %dec_label_pc_1000924c
  %v0_10009264 = load i32, i32* @r31, align 4
  store i32 %v0_10009264, i32* @r3, align 4
  store i32 268472940, i32* @lr, align 4
  %v0_10009268 = call i32 @function_10009d6c()
  br label %dec_label_pc_1000926c

dec_label_pc_1000926c:                            ; preds = %dec_label_pc_10009210, %dec_label_pc_10009264
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10009278.297 to i32), i32* @lr, align 4
  %v0_10009274 = call i32 @function_10008c98()
  %v0_10009278 = call i32 @function_1000936c()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_10009280 = inttoptr i32 %v0_10009278 to i32*
  store i32 12, i32* %v2_10009280, align 4
  br label %dec_label_pc_10009294

dec_label_pc_10009288:                            ; preds = %dec_label_pc_1000924c
  %v0_10009290 = call i32 @function_1000a700()
  br label %dec_label_pc_10009294

dec_label_pc_10009294:                            ; preds = %dec_label_pc_1000919c, %dec_label_pc_1000926c, %dec_label_pc_100091f0, %dec_label_pc_10009288
  store i32 %v0_1000919c, i32* %r0.global-to-local, align 4
  %v0_10009298 = load i32, i32* @r31, align 4
  ret i32 %v0_10009298

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_10009cfc, { 41, 43, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 1, 0, 6, 5, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 4, 3, 2 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_10008c98, { 21, 20, 19, 36, 35, 34, 33, 37, 32, 31, 27, 26, 5, 4, 3, 2, 30, 29, 28, 25, 24, 23, 22, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_10009294, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000926c, { 1, 0 }
  uselistorder label %dec_label_pc_1000924c, { 1, 0 }
}

define i32 @function_100092ac(i32* %arg1) local_unnamed_addr {
dec_label_pc_100092ac:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_100092b0 = load i32, i32* @lr, align 4
  store i32 %v0_100092b0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100092c8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100092c8, i32* @r3, align 4
  %v3_100092d4 = call i32 @function_1000a708(i32 %v2_100092c8, i32 ptrtoint ([3 x i8]* @global_var_1000a700.294 to i32))
  %v0_100092dc = call i32 @function_1000a700()
  br label %dec_label_pc_100092e0

dec_label_pc_100092e0:                            ; preds = %dec_label_pc_1000931c, %dec_label_pc_100092ac
  %v0_100092e0 = load i32, i32* @r31, align 4
  %v1_100092e0 = add i32 %v0_100092e0, 4
  %v2_100092e0 = inttoptr i32 %v1_100092e0 to i32*
  %v3_100092e0 = load i32, i32* %v2_100092e0, align 4
  store i32 %v3_100092e0, i32* %r0.global-to-local, align 4
  %v1_100092e4 = add i32 %v0_100092e0, 8
  %v2_100092e4 = inttoptr i32 %v1_100092e4 to i32*
  %v3_100092e4 = load i32, i32* %v2_100092e4, align 4
  store i32 %v3_100092e4, i32* %r9.global-to-local, align 4
  %v3_100092e8 = icmp ugt i32 %v3_100092e4, %v3_100092e0
  br i1 %v3_100092e8, label %dec_label_pc_1000931c, label %dec_label_pc_100092f0

dec_label_pc_100092f0:                            ; preds = %dec_label_pc_100092e0
  %v1_100092f0 = inttoptr i32 %v0_100092e0 to i32*
  %v2_100092f0 = load i32, i32* %v1_100092f0, align 4
  store i32 %v2_100092f0, i32* @r3, align 4
  %v1_100092f4 = add i32 %v0_100092e0, 12
  %v2_100092f4 = inttoptr i32 %v1_100092f4 to i32*
  %v3_100092f4 = load i32, i32* %v2_100092f4, align 4
  %v1_100092f8 = add i32 %v0_100092e0, 20
  %v2_100092f8 = inttoptr i32 %v1_100092f8 to i32*
  %v3_100092f8 = load i32, i32* %v2_100092f8, align 4
  store i32 %v3_100092f8, i32* @r5, align 4
  store i32 268473088, i32* @lr, align 4
  %v4_100092fc = inttoptr i32 %v2_100092f0 to i32*
  %v5_100092fc = call i32 @function_1000ab50(i32* %v4_100092fc, i32 %v3_100092f4, i32 %v3_100092f8, i32 %v3_100092e4)
  %v2_10009300 = icmp sgt i32 %v5_100092fc, 0
  br i1 %v2_10009300, label %dec_label_pc_10009310, label %dec_label_pc_10009308

dec_label_pc_10009308:                            ; preds = %dec_label_pc_100092f0
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009348

dec_label_pc_10009310:                            ; preds = %dec_label_pc_100092f0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10009314 = load i32, i32* @r31, align 4
  %v2_10009314 = add i32 %v1_10009314, 8
  %v3_10009314 = inttoptr i32 %v2_10009314 to i32*
  store i32 %v5_100092fc, i32* %v3_10009314, align 4
  %v0_10009318 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009318 = load i32, i32* @r31, align 4
  %v2_10009318 = add i32 %v1_10009318, 4
  %v3_10009318 = inttoptr i32 %v2_10009318 to i32*
  store i32 %v0_10009318, i32* %v3_10009318, align 4
  %v0_1000931c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000931c

dec_label_pc_1000931c:                            ; preds = %dec_label_pc_100092e0, %dec_label_pc_10009310
  %v1_10009330 = phi i32 [ %v0_100092e0, %dec_label_pc_100092e0 ], [ %v0_1000931c.pre, %dec_label_pc_10009310 ]
  %v1_1000931c = add i32 %v1_10009330, 4
  %v2_1000931c = inttoptr i32 %v1_1000931c to i32*
  %v3_1000931c = load i32, i32* %v2_1000931c, align 4
  store i32 %v3_1000931c, i32* %r9.global-to-local, align 4
  %v1_10009320 = add i32 %v1_10009330, 12
  %v2_10009320 = inttoptr i32 %v1_10009320 to i32*
  %v3_10009320 = load i32, i32* %v2_10009320, align 4
  store i32 %v3_10009320, i32* %r11.global-to-local, align 4
  %v2_10009324 = add i32 %v3_10009320, %v3_1000931c
  store i32 %v2_10009324, i32* @r29, align 4
  %v1_10009328 = add i32 %v2_10009324, 8
  %v2_10009328 = inttoptr i32 %v1_10009328 to i16*
  %v3_10009328 = load i16, i16* %v2_10009328, align 2
  %v4_10009328 = zext i16 %v3_10009328 to i32
  %v2_1000932c = add i32 %v4_10009328, %v3_1000931c
  store i32 %v2_1000932c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000932c, i32* %v2_1000931c, align 4
  %v0_10009334 = load i32, i32* @r29, align 4
  %v1_10009334 = add i32 %v0_10009334, 4
  %v2_10009334 = inttoptr i32 %v1_10009334 to i32*
  %v3_10009334 = load i32, i32* %v2_10009334, align 4
  store i32 %v3_10009334, i32* %r0.global-to-local, align 4
  %v1_10009338 = load i32, i32* @r31, align 4
  %v2_10009338 = add i32 %v1_10009338, 16
  %v3_10009338 = inttoptr i32 %v2_10009338 to i32*
  store i32 %v3_10009334, i32* %v3_10009338, align 4
  %v0_1000933c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000933c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000933c = add i32 %v1_1000933c, %v0_1000933c
  %v3_1000933c = inttoptr i32 %v2_1000933c to i32*
  %v4_1000933c = load i32, i32* %v3_1000933c, align 4
  store i32 %v4_1000933c, i32* %r0.global-to-local, align 4
  %v3_10009340 = icmp eq i32 %v4_1000933c, 0
  br i1 %v3_10009340, label %dec_label_pc_100092e0, label %dec_label_pc_10009348

dec_label_pc_10009348:                            ; preds = %dec_label_pc_1000931c, %dec_label_pc_10009308
  store i32 %v2_100092c8, i32* @r3, align 4
  %v2_10009350 = call i32 @function_1000a708(i32 %v2_100092c8, i32 1)
  store i32 %v0_100092b0, i32* %r0.global-to-local, align 4
  %v0_10009358 = load i32, i32* @r29, align 4
  ret i32 %v0_10009358

; uselistorder directives
  uselistorder i32 %v1_10009330, { 1, 0 }
  uselistorder i32 %v0_100092e0, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_100092c8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000931c, { 1, 0 }
}

define i32 @function_1000936c() local_unnamed_addr {
dec_label_pc_1000936c:
  ret i32 ptrtoint (i32* @global_var_1001bdbc.299 to i32)
}

define i32 @function_10009378(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009378:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10009380 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268473228, i32* @lr, align 4
  %v1_10009388 = call i32 @function_1000af90(i32 %v2_10009380)
  %v3_10009390 = load i32, i32* %stack_var_-24, align 4
  %v2_10009394 = add i32 %v3_10009390, %tmp
  %v1_1000939c = mul i32 %v2_10009394, 10000
  %v1_100093a8 = and i32 %v1_1000939c, 2147483632
  ret i32 %v1_100093a8
}

define i32 @function_100093b0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100093b0:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_100093b0 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_100093b0, label %dec_label_pc_100093c4, label %dec_label_pc_100093c0

dec_label_pc_100093c0:                            ; preds = %dec_label_pc_100093b0
  %v0_100093c0 = call i32 @function_1000b154()
  store i32 %v0_100093c0, i32* @r3, align 4
  br label %dec_label_pc_100093c4

dec_label_pc_100093c4:                            ; preds = %dec_label_pc_100093b0, %dec_label_pc_100093c0
  %v1_100093c4 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_100093c4, i32* %r9.global-to-local, align 4
  %v4_100093c4 = icmp eq i32 %v1_100093c4, 0
  %v2_100093c8 = add i32 %arg3, %arg2
  store i32 %v2_100093c8, i32* %r4.global-to-local, align 4
  %v0_100093cc = load i32, i32* @r3, align 4
  %v2_100093cc = add i32 %v0_100093cc, %arg3
  store i32 %v2_100093cc, i32* %r10.global-to-local, align 4
  br i1 %v4_100093c4, label %dec_label_pc_100093f4, label %dec_label_pc_100093d4

dec_label_pc_100093d4:                            ; preds = %dec_label_pc_100093c4
  %v1_100093d4 = urem i32 %v2_100093cc, 4
  %v3_100093d4 = icmp eq i32 %v1_100093d4, 0
  br i1 %v3_100093d4, label %dec_label_pc_100093dc, label %dec_label_pc_10009428

dec_label_pc_100093dc:                            ; preds = %dec_label_pc_10009440.dec_label_pc_100093dc_crit_edge, %dec_label_pc_100093d4
  %v1_100093e8.pre = phi i32 [ %v1_100093e8.pre.pre, %dec_label_pc_10009440.dec_label_pc_100093dc_crit_edge ], [ %v2_100093cc, %dec_label_pc_100093d4 ]
  %v0_100093dc = phi i32 [ %v1_10009440, %dec_label_pc_10009440.dec_label_pc_100093dc_crit_edge ], [ %v1_100093c4, %dec_label_pc_100093d4 ]
  store i32 %v0_100093dc, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100093e0

dec_label_pc_100093e0:                            ; preds = %dec_label_pc_100093e0, %dec_label_pc_100093dc
  %v1_100093e8 = phi i32 [ %v2_100093ec, %dec_label_pc_100093e0 ], [ %v1_100093e8.pre, %dec_label_pc_100093dc ]
  %v0_100093e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100093e0 = add i32 %v0_100093e0, -4
  %v2_100093e0 = inttoptr i32 %v1_100093e0 to i32*
  %v3_100093e0 = load i32, i32* %v2_100093e0, align 4
  %v1_100093e4 = add i32 %v0_100093e0, -8
  %v2_100093e4 = inttoptr i32 %v1_100093e4 to i32*
  %v3_100093e4 = load i32, i32* %v2_100093e4, align 4
  store i32 %v3_100093e4, i32* %r9.global-to-local, align 4
  store i32 %v1_100093e4, i32* %r4.global-to-local, align 4
  %v2_100093e8 = add i32 %v1_100093e8, -4
  %v3_100093e8 = inttoptr i32 %v2_100093e8 to i32*
  store i32 %v3_100093e0, i32* %v3_100093e8, align 4
  %v0_100093ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100093ec = load i32, i32* %r10.global-to-local, align 4
  %v2_100093ec = add i32 %v1_100093ec, -8
  %v3_100093ec = inttoptr i32 %v2_100093ec to i32*
  store i32 %v0_100093ec, i32* %v3_100093ec, align 4
  store i32 %v2_100093ec, i32* %r10.global-to-local, align 4
  %v0_100093f0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100093f0 = add i32 %v0_100093f0, -1
  store i32 %v1_100093f0, i32* %ctr.global-to-local, align 4
  %v2_100093f0 = icmp eq i32 %v1_100093f0, 0
  br i1 %v2_100093f0, label %dec_label_pc_100093f4, label %dec_label_pc_100093e0

dec_label_pc_100093f4:                            ; preds = %dec_label_pc_100093e0, %dec_label_pc_10009440, %dec_label_pc_100093c4
  %v0_100093f4 = load i32, i32* @r11, align 4
  %v1_100093f4 = urem i32 %v0_100093f4, 8
  store i32 %v1_100093f4, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_100093f4, 4
  br i1 %tmp, label %dec_label_pc_1000940c, label %dec_label_pc_10009400

dec_label_pc_10009400:                            ; preds = %dec_label_pc_100093f4
  %v0_10009400 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009400 = add i32 %v0_10009400, -4
  %v2_10009400 = inttoptr i32 %v1_10009400 to i32*
  %v3_10009400 = load i32, i32* %v2_10009400, align 4
  store i32 %v1_10009400, i32* %r4.global-to-local, align 4
  %v1_10009404 = add nsw i32 %v1_100093f4, -4
  store i32 %v1_10009404, i32* %r5.global-to-local, align 4
  %v1_10009408 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009408 = add i32 %v1_10009408, -4
  %v3_10009408 = inttoptr i32 %v2_10009408 to i32*
  store i32 %v3_10009400, i32* %v3_10009408, align 4
  store i32 %v2_10009408, i32* %r10.global-to-local, align 4
  %v0_1000940c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000940c

dec_label_pc_1000940c:                            ; preds = %dec_label_pc_100093f4, %dec_label_pc_10009400
  %v0_10009414 = phi i32 [ %v1_100093f4, %dec_label_pc_100093f4 ], [ %v0_1000940c.pre, %dec_label_pc_10009400 ]
  %v3_1000940c = icmp eq i32 %v0_10009414, 0
  br i1 %v3_1000940c, label %dec_label_pc_1000944c, label %dec_label_pc_10009414

dec_label_pc_10009414:                            ; preds = %dec_label_pc_1000940c
  store i32 %v0_10009414, i32* %ctr.global-to-local, align 4
  %v2_1000941c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009418

dec_label_pc_10009418:                            ; preds = %dec_label_pc_10009418, %dec_label_pc_10009414
  %v2_1000941c = phi i32 [ %v3_1000941c, %dec_label_pc_10009418 ], [ %v2_1000941c.pre, %dec_label_pc_10009414 ]
  %v0_10009418 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009418 = add i32 %v0_10009418, -1
  %v2_10009418 = inttoptr i32 %v1_10009418 to i8*
  %v3_10009418 = load i8, i8* %v2_10009418, align 1
  store i32 %v1_10009418, i32* %r4.global-to-local, align 4
  %v3_1000941c = add i32 %v2_1000941c, -1
  %v4_1000941c = inttoptr i32 %v3_1000941c to i8*
  store i8 %v3_10009418, i8* %v4_1000941c, align 1
  store i32 %v3_1000941c, i32* %r10.global-to-local, align 4
  %v0_10009420 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009420 = add i32 %v0_10009420, -1
  store i32 %v1_10009420, i32* %ctr.global-to-local, align 4
  %v2_10009420 = icmp eq i32 %v1_10009420, 0
  br i1 %v2_10009420, label %dec_label_pc_1000944c, label %dec_label_pc_10009418

dec_label_pc_10009428:                            ; preds = %dec_label_pc_100093d4
  %v1_10009428 = sub nsw i32 4, %v1_100093d4
  store i32 %v1_10009428, i32* %ctr.global-to-local, align 4
  %v2_10009430 = sub i32 %arg3, %v1_10009428
  store i32 %v2_10009430, i32* @r11, align 4
  %v1_100094348 = add i32 %v2_100093c8, -1
  %v2_100094349 = inttoptr i32 %v1_100094348 to i8*
  %v3_1000943410 = load i8, i8* %v2_100094349, align 1
  store i32 %v1_100094348, i32* %r4.global-to-local, align 4
  %v3_1000943812 = add i32 %v2_100093cc, -1
  %v4_1000943813 = inttoptr i32 %v3_1000943812 to i8*
  store i8 %v3_1000943410, i8* %v4_1000943813, align 1
  store i32 %v3_1000943812, i32* %r10.global-to-local, align 4
  %v0_1000943c14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000943c15 = add i32 %v0_1000943c14, -1
  store i32 %v1_1000943c15, i32* %ctr.global-to-local, align 4
  %v2_1000943c16 = icmp eq i32 %v1_1000943c15, 0
  br i1 %v2_1000943c16, label %dec_label_pc_10009440, label %dec_label_pc_10009434.dec_label_pc_10009434_crit_edge

dec_label_pc_10009434.dec_label_pc_10009434_crit_edge: ; preds = %dec_label_pc_10009428, %dec_label_pc_10009434.dec_label_pc_10009434_crit_edge
  %v3_1000943817 = phi i32 [ %v3_10009438, %dec_label_pc_10009434.dec_label_pc_10009434_crit_edge ], [ %v3_1000943812, %dec_label_pc_10009428 ]
  %v0_10009434.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10009434 = add i32 %v0_10009434.pre, -1
  %v2_10009434 = inttoptr i32 %v1_10009434 to i8*
  %v3_10009434 = load i8, i8* %v2_10009434, align 1
  store i32 %v1_10009434, i32* %r4.global-to-local, align 4
  %v3_10009438 = add i32 %v3_1000943817, -1
  %v4_10009438 = inttoptr i32 %v3_10009438 to i8*
  store i8 %v3_10009434, i8* %v4_10009438, align 1
  store i32 %v3_10009438, i32* %r10.global-to-local, align 4
  %v0_1000943c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000943c = add i32 %v0_1000943c, -1
  store i32 %v1_1000943c, i32* %ctr.global-to-local, align 4
  %v2_1000943c = icmp eq i32 %v1_1000943c, 0
  br i1 %v2_1000943c, label %dec_label_pc_10009440, label %dec_label_pc_10009434.dec_label_pc_10009434_crit_edge

dec_label_pc_10009440:                            ; preds = %dec_label_pc_10009434.dec_label_pc_10009434_crit_edge, %dec_label_pc_10009428
  %v0_10009440 = load i32, i32* @r11, align 4
  %v1_10009440 = call i32 @__asm_rlwinm.(i32 %v0_10009440, i32 29, i32 3, i32 31)
  store i32 %v1_10009440, i32* %r9.global-to-local, align 4
  %v4_10009440 = icmp eq i32 %v1_10009440, 0
  br i1 %v4_10009440, label %dec_label_pc_100093f4, label %dec_label_pc_10009440.dec_label_pc_100093dc_crit_edge

dec_label_pc_10009440.dec_label_pc_100093dc_crit_edge: ; preds = %dec_label_pc_10009440
  %v1_100093e8.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100093dc

dec_label_pc_1000944c:                            ; preds = %dec_label_pc_10009418, %dec_label_pc_1000940c
  %v0_1000944c = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000944c

; uselistorder directives
  uselistorder i32 %v1_10009440, { 1, 2, 0 }
  uselistorder i32 %v1_1000943c, { 1, 0 }
  uselistorder i32 %v3_10009438, { 1, 2, 0 }
  uselistorder i32 %v1_10009420, { 1, 0 }
  uselistorder i32 %v3_1000941c, { 1, 2, 0 }
  uselistorder i32 %v1_100093f4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_100093f0, { 1, 0 }
  uselistorder i32 %v2_100093ec, { 1, 2, 0 }
  uselistorder i32 %v1_100093d4, { 1, 0 }
  uselistorder i32 %v2_100093cc, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 8, 9, 1, 5, 2, 7, 3, 6, 4 }
  uselistorder i32* %r10.global-to-local, { 8, 0, 9, 1, 7, 2, 5, 3, 6, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 3, 0, 1, 4, 2, 5 }
  uselistorder label %dec_label_pc_10009434.dec_label_pc_10009434_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000940c, { 1, 0 }
  uselistorder label %dec_label_pc_100093f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100093c4, { 1, 0 }
}

define i32 @function_10009454(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009454:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10009454 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10009454, i32* %r9.global-to-local, align 4
  %v4_10009454 = icmp eq i32 %v1_10009454, 0
  %v1_1000945c = add i32 %arg1, -4
  store i32 %v1_1000945c, i32* %r11.global-to-local, align 4
  %v1_10009460 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10009464 = call i32 @__asm_rlwimi(i32 %v1_10009460, i32 16, i32 0, i32 15)
  %v2_10009464 = trunc i32 %v1_10009464 to i8
  br i1 %v4_10009454, label %dec_label_pc_1000948c, label %dec_label_pc_1000946c

dec_label_pc_1000946c:                            ; preds = %dec_label_pc_10009454
  %v0_1000946c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000946c = urem i32 %v0_1000946c, 4
  %v3_1000946c = icmp eq i32 %v1_1000946c, 0
  br i1 %v3_1000946c, label %dec_label_pc_1000946c.dec_label_pc_10009474_crit_edge, label %dec_label_pc_100094bc

dec_label_pc_1000946c.dec_label_pc_10009474_crit_edge: ; preds = %dec_label_pc_1000946c
  %v0_10009474.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009474

dec_label_pc_10009474:                            ; preds = %dec_label_pc_100094d4.dec_label_pc_10009474_crit_edge, %dec_label_pc_1000946c.dec_label_pc_10009474_crit_edge
  %v0_10009478.pre = phi i32 [ %v0_1000946c, %dec_label_pc_1000946c.dec_label_pc_10009474_crit_edge ], [ %v0_10009478.pre.pre, %dec_label_pc_100094d4.dec_label_pc_10009474_crit_edge ]
  %v0_10009474 = phi i32 [ %v0_10009474.pre, %dec_label_pc_1000946c.dec_label_pc_10009474_crit_edge ], [ %v1_100094d4, %dec_label_pc_100094d4.dec_label_pc_10009474_crit_edge ]
  store i32 %v0_10009474, i32* %ctr.global-to-local, align 4
  %v1_1000947c = sext i8 %v2_10009464 to i32
  br label %dec_label_pc_10009478

dec_label_pc_10009478:                            ; preds = %dec_label_pc_10009478, %dec_label_pc_10009474
  %v0_10009478 = phi i32 [ %v1_10009484, %dec_label_pc_10009478 ], [ %v0_10009478.pre, %dec_label_pc_10009474 ]
  %v1_10009478 = add i32 %v0_10009478, 4
  store i32 %v1_10009478, i32* %r9.global-to-local, align 4
  %v4_1000947c = inttoptr i32 %v1_10009478 to i32*
  store i32 %v1_1000947c, i32* %v4_1000947c, align 4
  %v2_10009480 = load i32, i32* %r9.global-to-local, align 4
  %v3_10009480 = add i32 %v2_10009480, 4
  %v4_10009480 = inttoptr i32 %v3_10009480 to i32*
  store i32 %v1_1000947c, i32* %v4_10009480, align 4
  %v0_10009484 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009484 = add i32 %v0_10009484, 4
  store i32 %v1_10009484, i32* %r11.global-to-local, align 4
  %v0_10009488 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009488 = add i32 %v0_10009488, -1
  store i32 %v1_10009488, i32* %ctr.global-to-local, align 4
  %v2_10009488 = icmp eq i32 %v1_10009488, 0
  br i1 %v2_10009488, label %dec_label_pc_1000948c, label %dec_label_pc_10009478

dec_label_pc_1000948c:                            ; preds = %dec_label_pc_10009478, %dec_label_pc_100094d4, %dec_label_pc_10009454
  %v0_1000948c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000948c = urem i32 %v0_1000948c, 8
  store i32 %v1_1000948c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000948c, 4
  br i1 %tmp, label %dec_label_pc_100094a0, label %dec_label_pc_10009498

dec_label_pc_10009498:                            ; preds = %dec_label_pc_1000948c
  %v1_10009498 = sext i8 %v2_10009464 to i32
  %v2_10009498 = load i32, i32* %r11.global-to-local, align 4
  %v3_10009498 = add i32 %v2_10009498, 4
  %v4_10009498 = inttoptr i32 %v3_10009498 to i32*
  store i32 %v1_10009498, i32* %v4_10009498, align 4
  store i32 %v3_10009498, i32* %r11.global-to-local, align 4
  %v0_1000949c = load i32, i32* @r5, align 4
  %v1_1000949c = add i32 %v0_1000949c, -4
  store i32 %v1_1000949c, i32* @r5, align 4
  br label %dec_label_pc_100094a0

dec_label_pc_100094a0:                            ; preds = %dec_label_pc_1000948c, %dec_label_pc_10009498
  %v0_100094a0 = phi i32 [ %v1_1000948c, %dec_label_pc_1000948c ], [ %v1_1000949c, %dec_label_pc_10009498 ]
  %v3_100094a0 = icmp eq i32 %v0_100094a0, 0
  %v0_100094a4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100094a0, i32 %v0_100094a4)
  %v0_100094a8 = load i32, i32* @r5, align 4
  store i32 %v0_100094a8, i32* %ctr.global-to-local, align 4
  %v0_100094ac = load i32, i32* %r11.global-to-local, align 4
  %v1_100094ac = add i32 %v0_100094ac, 3
  store i32 %v1_100094ac, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100094b0

dec_label_pc_100094b0:                            ; preds = %dec_label_pc_100094b0, %dec_label_pc_100094a0
  %v3_100094b0 = phi i32 [ %v4_100094b0, %dec_label_pc_100094b0 ], [ %v1_100094ac, %dec_label_pc_100094a0 ]
  %v4_100094b0 = add i32 %v3_100094b0, 1
  %v5_100094b0 = inttoptr i32 %v4_100094b0 to i8*
  store i8 %v2_10009464, i8* %v5_100094b0, align 1
  store i32 %v4_100094b0, i32* %r9.global-to-local, align 4
  %v0_100094b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100094b4 = add i32 %v0_100094b4, -1
  store i32 %v1_100094b4, i32* %ctr.global-to-local, align 4
  %v2_100094b4 = icmp eq i32 %v1_100094b4, 0
  br i1 %v2_100094b4, label %dec_label_pc_100094e0, label %dec_label_pc_100094b0

dec_label_pc_100094bc:                            ; preds = %dec_label_pc_1000946c
  %v1_100094bc = sub nsw i32 4, %v1_1000946c
  store i32 %v1_100094bc, i32* %ctr.global-to-local, align 4
  %v1_100094c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_100094c4 = sub i32 %v1_100094c4, %v1_100094bc
  store i32 %v2_100094c4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100094c8

dec_label_pc_100094c8:                            ; preds = %dec_label_pc_100094c8, %dec_label_pc_100094bc
  %v3_100094c8 = phi i32 [ %v1_100094cc, %dec_label_pc_100094c8 ], [ %v0_1000946c, %dec_label_pc_100094bc ]
  %v4_100094c8 = add i32 %v3_100094c8, 4
  %v5_100094c8 = inttoptr i32 %v4_100094c8 to i8*
  store i8 %v2_10009464, i8* %v5_100094c8, align 1
  %v0_100094cc = load i32, i32* %r11.global-to-local, align 4
  %v1_100094cc = add i32 %v0_100094cc, 1
  store i32 %v1_100094cc, i32* %r11.global-to-local, align 4
  %v0_100094d0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100094d0 = add i32 %v0_100094d0, -1
  store i32 %v1_100094d0, i32* %ctr.global-to-local, align 4
  %v2_100094d0 = icmp eq i32 %v1_100094d0, 0
  br i1 %v2_100094d0, label %dec_label_pc_100094d4, label %dec_label_pc_100094c8

dec_label_pc_100094d4:                            ; preds = %dec_label_pc_100094c8
  %v0_100094d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100094d4 = call i32 @__asm_rlwinm.(i32 %v0_100094d4, i32 29, i32 3, i32 31)
  store i32 %v1_100094d4, i32* %r9.global-to-local, align 4
  %v4_100094d4 = icmp eq i32 %v1_100094d4, 0
  br i1 %v4_100094d4, label %dec_label_pc_1000948c, label %dec_label_pc_100094d4.dec_label_pc_10009474_crit_edge

dec_label_pc_100094d4.dec_label_pc_10009474_crit_edge: ; preds = %dec_label_pc_100094d4
  %v0_10009478.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009474

dec_label_pc_100094e0:                            ; preds = %dec_label_pc_100094b0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100094d4, { 1, 2, 0 }
  uselistorder i32 %v1_100094d0, { 1, 0 }
  uselistorder i32 %v1_100094cc, { 1, 0 }
  uselistorder i32 %v1_100094b4, { 1, 0 }
  uselistorder i32 %v4_100094b0, { 1, 2, 0 }
  uselistorder i32 %v1_1000948c, { 2, 1, 0 }
  uselistorder i32 %v1_10009488, { 1, 0 }
  uselistorder i32 %v1_10009484, { 1, 0 }
  uselistorder i32 %v1_1000946c, { 1, 0 }
  uselistorder i32 %v0_1000946c, { 2, 1, 0 }
  uselistorder i8 %v2_10009464, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 55, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_100094a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000948c, { 1, 0, 2 }
}

define i32 @function_100094e4(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_100094e4:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_100094e4 = add i32 %arg1, -1
  %v1_100094e8 = sub i32 %v2_100094e4, %tmp
  store i32 %v1_100094e8, i32* %r9.global-to-local, align 4
  %v2_100094ec4 = load i8, i8* %arg2, align 1
  %v1_100094f06 = add i32 %tmp, 1
  store i32 %v1_100094f06, i32* %r4.global-to-local, align 4
  %v3_100094f47 = icmp eq i8 %v2_100094ec4, 0
  store i1 %v3_100094f47, i1* %cr7_eq.global-to-local, align 1
  %v5_100094f88 = inttoptr i32 %arg1 to i8*
  store i8 %v2_100094ec4, i8* %v5_100094f88, align 1
  %v0_100094fc9 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100094fc9, label %dec_label_pc_10009500, label %dec_label_pc_100094ec.dec_label_pc_100094ec_crit_edge

dec_label_pc_100094ec.dec_label_pc_100094ec_crit_edge: ; preds = %dec_label_pc_100094e4, %dec_label_pc_100094ec.dec_label_pc_100094ec_crit_edge
  %v0_100094ec.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_100094f8.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100094ec = inttoptr i32 %v0_100094ec.pre to i8*
  %v2_100094ec = load i8, i8* %v1_100094ec, align 1
  %v1_100094f0 = add i32 %v0_100094ec.pre, 1
  store i32 %v1_100094f0, i32* %r4.global-to-local, align 4
  %v3_100094f4 = icmp eq i8 %v2_100094ec, 0
  store i1 %v3_100094f4, i1* %cr7_eq.global-to-local, align 1
  %v4_100094f8 = add i32 %v1_100094f0, %v2_100094f8.pre
  %v5_100094f8 = inttoptr i32 %v4_100094f8 to i8*
  store i8 %v2_100094ec, i8* %v5_100094f8, align 1
  %v0_100094fc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100094fc, label %dec_label_pc_10009500, label %dec_label_pc_100094ec.dec_label_pc_100094ec_crit_edge

dec_label_pc_10009500:                            ; preds = %dec_label_pc_100094ec.dec_label_pc_100094ec_crit_edge, %dec_label_pc_100094e4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100094ec.dec_label_pc_100094ec_crit_edge, { 1, 0 }
}

define i32 @function_10009504(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009504:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009508 = load i32, i32* @lr, align 4
  store i32 %v0_10009508, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009518 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268473644, i32* @lr, align 4
  %v3_10009528 = call i32 @function_10008ac8(i32 1076655123, i32 %v2_10009518, i32 %v2_10009518)
  %v2_1000952c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000952c, i32* @r4, align 4
  store i32 %v3_10009528, i32* @r30, align 4
  %v3_10009530 = icmp eq i32 %v3_10009528, 0
  %v0_10009538 = load i32, i32* @r31, align 4
  br i1 %v3_10009530, label %dec_label_pc_10009540, label %dec_label_pc_10009588

dec_label_pc_10009540:                            ; preds = %dec_label_pc_10009504
  %v1_10009538 = add i32 %v0_10009538, 17
  %v3_10009558 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10009558, i32* %r0.global-to-local, align 4
  %v2_1000955c = add i32 %v0_10009538, 4
  %v3_1000955c = inttoptr i32 %v2_1000955c to i32*
  store i32 %tmp7, i32* %v3_1000955c, align 4
  %v0_10009560 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009560 = load i32, i32* @r31, align 4
  %v2_10009560 = inttoptr i32 %v1_10009560 to i32*
  store i32 %v0_10009560, i32* %v2_10009560, align 4
  %v0_10009564 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009564 = load i32, i32* @r31, align 4
  %v2_10009564 = add i32 %v1_10009564, 8
  %v3_10009564 = inttoptr i32 %v2_10009564 to i32*
  store i32 %v0_10009564, i32* %v3_10009564, align 4
  %v0_10009568 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009568 = load i32, i32* @r31, align 4
  %v2_10009568 = add i32 %v1_10009568, 12
  %v3_10009568 = inttoptr i32 %v2_10009568 to i32*
  store i32 %v0_10009568, i32* %v3_10009568, align 4
  %v3_1000956c = load i32, i32* @r31, align 4
  %v4_1000956c = add i32 %v3_1000956c, 16
  %v5_1000956c = inttoptr i32 %v4_1000956c to i8*
  store i8 %tmp4, i8* %v5_1000956c, align 1
  %v1_10009570 = load i32, i32* @r31, align 4
  %v2_10009570 = add i32 %v1_10009570, 52
  %v3_10009570 = inttoptr i32 %v2_10009570 to i32*
  store i32 %tmp3, i32* %v3_10009570, align 4
  %v1_10009574 = load i32, i32* @r31, align 4
  %v2_10009574 = add i32 %v1_10009574, 56
  %v3_10009574 = inttoptr i32 %v2_10009574 to i32*
  store i32 %tmp2, i32* %v3_10009574, align 4
  store i32 268473724, i32* @lr, align 4
  %v6_10009578 = sext i8 %tmp4 to i32
  %v8_10009578 = call i32 @function_1000b1f0(i32 %v1_10009538, i32 %v2_1000952c, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10009578, i32 %tmp7)
  store i32 268473736, i32* @lr, align 4
  %v3_10009584 = call i32 @function_10009454(i32 %v8_10009578, i32 0, i32 13)
  %v0_1000958c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009588

dec_label_pc_10009588:                            ; preds = %dec_label_pc_10009504, %dec_label_pc_10009540
  %v0_1000958c = phi i32 [ %v3_10009528, %dec_label_pc_10009504 ], [ %v0_1000958c.pre, %dec_label_pc_10009540 ]
  store i32 %v0_10009508, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000958c

; uselistorder directives
  uselistorder i32 %v2_10009518, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 6, 10, 11, 8, 9, 7, 12, 0, 1, 13, 14, 2, 15, 16, 3, 17, 18, 4, 19, 20, 5 }
  uselistorder label %dec_label_pc_10009588, { 1, 0 }
}

define i32 @function_100095a0() local_unnamed_addr {
dec_label_pc_100095a0:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100095a0 = load i32, i32* @r4, align 4
  %v3_100095a0 = icmp eq i32 %v0_100095a0, 1
  %v0_100095b0 = load i32, i32* @r3, align 4
  store i32 %v0_100095b0, i32* %r27.global-to-local, align 4
  %v0_100095b8 = load i32, i32* @r5, align 4
  store i32 %v0_100095b8, i32* @r31, align 4
  br i1 %v3_100095a0, label %dec_label_pc_100095dc, label %dec_label_pc_100095c0

dec_label_pc_100095c0:                            ; preds = %dec_label_pc_100095a0
  %v3_100095c0 = icmp eq i32 %v0_100095a0, 2
  br i1 %v3_100095c0, label %dec_label_pc_100095fc, label %dec_label_pc_100095c8

dec_label_pc_100095c8:                            ; preds = %dec_label_pc_100095c0
  %v3_100095c8 = icmp eq i32 %v0_100095a0, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_100095c8, label %dec_label_pc_10009604, label %dec_label_pc_100095e8

dec_label_pc_100095dc:                            ; preds = %dec_label_pc_100095a0
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10009604

dec_label_pc_100095e8:                            ; preds = %dec_label_pc_100095c8
  %v0_100095e8 = call i32 @function_1000936c()
  store i32 -1, i32* @r28, align 4
  %v2_100095f4 = inttoptr i32 %v0_100095e8 to i32*
  store i32 22, i32* %v2_100095f4, align 4
  br label %dec_label_pc_100096ec

dec_label_pc_100095fc:                            ; preds = %dec_label_pc_100095c0
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10009604

dec_label_pc_10009604:                            ; preds = %dec_label_pc_100095c8, %dec_label_pc_100095dc, %dec_label_pc_100095fc
  %v1_10009604 = inttoptr i32 %v0_100095b8 to i32*
  %v2_10009604 = load i32, i32* %v1_10009604, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000960c = add i32 %v0_100095b8, 4
  %v2_1000960c = inttoptr i32 %v1_1000960c to i32*
  %v3_1000960c = load i32, i32* %v2_1000960c, align 4
  store i32 %v3_1000960c, i32* %r9.global-to-local, align 4
  %v1_10009610 = add i32 %v0_100095b8, 17
  store i32 %v1_10009610, i32* @r4, align 4
  %v1_10009614 = add i32 %v0_100095b8, 8
  %v2_10009614 = inttoptr i32 %v1_10009614 to i32*
  %v3_10009614 = load i32, i32* %v2_10009614, align 4
  %v2_10009618 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009618, i32* @r3, align 4
  %v2_10009620 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10009604, i32* %stack_var_-72, align 4
  store i32 268473936, i32* @lr, align 4
  %v0_1000964c = call i32 @function_1000b154()
  %v0_10009650 = load i32, i32* %r27.global-to-local, align 4
  %v0_10009654 = load i32, i32* @r30, align 4
  store i32 268473956, i32* @lr, align 4
  %v3_10009660 = call i32 @function_10008ac8(i32 %v0_10009650, i32 %v0_10009654, i32 %v2_10009620)
  store i32 %v3_10009660, i32* @r28, align 4
  %v3_10009664 = icmp eq i32 %v3_10009660, 0
  br i1 %v3_10009664, label %dec_label_pc_1000966c, label %dec_label_pc_100096ec

dec_label_pc_1000966c:                            ; preds = %dec_label_pc_10009604
  %v0_1000966c = load i32, i32* @r30, align 4
  %v3_10009670 = icmp eq i32 %v0_1000966c, -2144570348
  br i1 %v3_10009670, label %dec_label_pc_10009678, label %dec_label_pc_100096e8

dec_label_pc_10009678:                            ; preds = %dec_label_pc_1000966c
  %v0_10009678 = call i32 @function_1000936c()
  store i32 %v0_10009678, i32* @r29, align 4
  %v0_10009688 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009690 = inttoptr i32 %v0_10009678 to i32*
  %v2_10009690 = load i32, i32* %v1_10009690, align 4
  store i32 %v2_10009690, i32* @r30, align 4
  store i32 268474012, i32* @lr, align 4
  %v3_10009698 = call i32 @function_10008ac8(i32 %v0_10009688, i32 1076655123, i32 %v2_10009620)
  %v3_1000969c = icmp eq i32 %v3_10009698, 0
  br i1 %v3_1000969c, label %dec_label_pc_100096ac, label %dec_label_pc_100096a4

dec_label_pc_100096a4:                            ; preds = %dec_label_pc_10009678
  %v0_100096a4 = load i32, i32* @r30, align 4
  %v1_100096a4 = load i32, i32* @r29, align 4
  %v2_100096a4 = inttoptr i32 %v1_100096a4 to i32*
  store i32 %v0_100096a4, i32* %v2_100096a4, align 4
  br label %dec_label_pc_100096ec

dec_label_pc_100096ac:                            ; preds = %dec_label_pc_10009678
  %v0_100096ac = load i32, i32* @r31, align 4
  %v1_100096ac = add i32 %v0_100096ac, 8
  %v2_100096ac = inttoptr i32 %v1_100096ac to i32*
  %v3_100096ac = load i32, i32* %v2_100096ac, align 4
  %v1_100096b4 = call i32 @__asm_rlwinm(i32 %v3_100096ac, i32 0, i32 19, i32 20)
  %v1_100096b8 = call i32 @__asm_rlwinm(i32 %v3_10009614, i32 0, i32 19, i32 20)
  store i32 %v1_100096b8, i32* %r9.global-to-local, align 4
  %v4_100096bc = icmp eq i32 %v1_100096b4, %v1_100096b8
  br i1 %v4_100096bc, label %dec_label_pc_100096c4, label %dec_label_pc_100096d8

dec_label_pc_100096c4:                            ; preds = %dec_label_pc_100096ac
  %v1_100096c4 = and i32 %v3_100096ac, 768
  store i32 %v1_100096c4, i32* %r9.global-to-local, align 4
  %v3_100096c4 = icmp eq i32 %v1_100096c4, 0
  br i1 %v3_100096c4, label %dec_label_pc_100096e8, label %dec_label_pc_100096cc

dec_label_pc_100096cc:                            ; preds = %dec_label_pc_100096c4
  %v1_100096cc = call i32 @__asm_rlwinm(i32 %v3_10009614, i32 0, i32 22, i32 23)
  %v0_100096d0 = load i32, i32* %r9.global-to-local, align 4
  %v4_100096d0 = icmp eq i32 %v0_100096d0, %v1_100096cc
  br i1 %v4_100096d0, label %dec_label_pc_100096e8, label %dec_label_pc_100096d8

dec_label_pc_100096d8:                            ; preds = %dec_label_pc_100096ac, %dec_label_pc_100096cc
  store i32 -1, i32* @r28, align 4
  %v1_100096e0 = load i32, i32* @r29, align 4
  %v2_100096e0 = inttoptr i32 %v1_100096e0 to i32*
  store i32 22, i32* %v2_100096e0, align 4
  br label %dec_label_pc_100096ec

dec_label_pc_100096e8:                            ; preds = %dec_label_pc_1000966c, %dec_label_pc_100096cc, %dec_label_pc_100096c4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100096ec

dec_label_pc_100096ec:                            ; preds = %dec_label_pc_10009604, %dec_label_pc_100096d8, %dec_label_pc_100096a4, %dec_label_pc_100095e8, %dec_label_pc_100096e8
  %v0_100096f0 = load i32, i32* @r28, align 4
  ret i32 %v0_100096f0

; uselistorder directives
  uselistorder i32 %v0_100095b8, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_10008ac8, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100096ec, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100096e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100096d8, { 1, 0 }
  uselistorder label %dec_label_pc_10009604, { 2, 1, 0 }
}

define i32 @function_10009704(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009704:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000970c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000970c, i32* @r4, align 4
  store i32 268474136, i32* @lr, align 4
  %v1_10009714 = bitcast i32* %stack_var_-24 to i8*
  %v2_10009714 = call i32 @function_1000b224(i8* %v1_10009714)
  %v3_10009718 = icmp eq i32 %v2_10009714, 0
  br i1 %v3_10009718, label %dec_label_pc_10009728, label %dec_label_pc_10009724

dec_label_pc_10009724:                            ; preds = %dec_label_pc_10009704
  %v3_10009724 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10009728

dec_label_pc_10009728:                            ; preds = %dec_label_pc_10009704, %dec_label_pc_10009724
  %v0_10009734 = phi i32 [ -1, %dec_label_pc_10009704 ], [ %v3_10009724, %dec_label_pc_10009724 ]
  ret i32 %v0_10009734

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009728, { 1, 0 }
}

define i32 @function_10009738(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009738:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000974c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474204, i32* @lr, align 4
  %v2_10009758 = call i32 @function_1000aa58(i32 5, i32 %v2_1000974c)
  ret i32 %v2_10009758

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000976c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000976c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009780 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474256, i32* @lr, align 4
  %v2_1000978c = call i32 @function_1000aa58(i32 2, i32 %v2_10009780)
  ret i32 %v2_1000978c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100097a0() local_unnamed_addr {
dec_label_pc_100097a0:
  %stack_var_-24 = alloca i32, align 4
  %v0_100097a8 = load i32, i32* @r3, align 4
  store i32 %v0_100097a8, i32* %stack_var_-24, align 4
  %v2_100097b4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474308, i32* @lr, align 4
  %v2_100097c0 = call i32 @function_1000aa58(i32 3, i32 %v2_100097b4)
  ret i32 %v2_100097c0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100097d4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100097d4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100097e8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474360, i32* @lr, align 4
  %v2_100097f4 = call i32 @function_1000aa58(i32 6, i32 %v2_100097e8)
  ret i32 %v2_100097f4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009808(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10009808:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000981c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268474420, i32* @lr, align 4
  %v2_10009830 = call i32 @function_1000aa58(i32 15, i32 %v2_1000981c)
  ret i32 %v2_10009830

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 38, 25, 26, 6, 27, 7, 28, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 18, 19, 20, 21, 22, 23, 29, 24, 30, 31, 2, 32, 33, 3, 34, 35, 4, 36, 37, 5 }
}

define i32 @function_10009844(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009844:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009858 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474468, i32* @lr, align 4
  %v2_10009860 = call i32 @function_1000aa58(i32 4, i32 %v2_10009858)
  ret i32 %v2_10009860

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009874(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009874:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009888 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474524, i32* @lr, align 4
  %v2_10009898 = call i32 @function_1000aa58(i32 10, i32 %v2_10009888)
  ret i32 %v2_10009898

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100098ac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100098ac:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_100098c0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268474588, i32* @lr, align 4
  %v2_100098d8 = call i32 @function_1000aa58(i32 12, i32 %v2_100098c0)
  ret i32 %v2_100098d8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_100098ec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100098ec:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009900 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474644, i32* @lr, align 4
  %v2_10009910 = call i32 @function_1000aa58(i32 9, i32 %v2_10009900)
  ret i32 %v2_10009910

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 4, 5, 6, 12, 13, 14, 1, 7, 8, 9, 15, 10, 16, 2, 29, 17, 18, 19, 3, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 11 }
}

define i32 @function_10009924(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009924:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009938 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268474708, i32* @lr, align 4
  %v2_10009950 = call i32 @function_1000aa58(i32 11, i32 %v2_10009938)
  ret i32 %v2_10009950

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009964(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009964:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009978 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268474768, i32* @lr, align 4
  %v2_1000998c = call i32 @function_1000aa58(i32 14, i32 %v2_10009978)
  ret i32 %v2_1000998c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_100099a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100099a0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_100099b4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474820, i32* @lr, align 4
  %v2_100099c0 = call i32 @function_1000aa58(i32 1, i32 %v2_100099b4)
  ret i32 %v2_100099c0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000aa58, { 2, 1, 0, 5, 6, 11, 7, 10, 9, 4, 3, 8 }
}

define i32 @function_100099d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100099d4:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_10009a04, label %dec_label_pc_100099f0

dec_label_pc_100099f0:                            ; preds = %dec_label_pc_100099d4
  %v0_100099f0 = call i32 @function_1000936c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100099fc = inttoptr i32 %v0_100099f0 to i32*
  store i32 22, i32* %v2_100099fc, align 4
  %v0_10009a10.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009a0c

dec_label_pc_10009a04:                            ; preds = %dec_label_pc_100099d4
  %v0_10009a04 = call i32 @function_10009b54()
  store i32 %v0_10009a04, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009a0c

dec_label_pc_10009a0c:                            ; preds = %dec_label_pc_100099f0, %dec_label_pc_10009a04
  %v0_10009a10 = phi i32 [ %v0_10009a10.pre, %dec_label_pc_100099f0 ], [ %v0_10009a04, %dec_label_pc_10009a04 ]
  ret i32 %v0_10009a10

; uselistorder directives
  uselistorder label %dec_label_pc_10009a0c, { 1, 0 }
}

define i32 @function_10009a20(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009a20:
  store i32 268474936, i32* @lr, align 4
  %v3_10009a34 = call i32 @function_10009454(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_10009a4c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009a4c:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10009a4c = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10009a4c, label %dec_label_pc_10009a78, label %dec_label_pc_10009a68

dec_label_pc_10009a68:                            ; preds = %dec_label_pc_10009a4c
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_10009a78, label %dec_label_pc_10009a70

dec_label_pc_10009a70:                            ; preds = %dec_label_pc_10009a68
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_10009aa8.lr.ph, label %dec_label_pc_10009a78

dec_label_pc_10009a78:                            ; preds = %dec_label_pc_10009a70, %dec_label_pc_10009a68, %dec_label_pc_10009a4c
  %v0_10009a78 = call i32 @function_1000936c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009a84 = inttoptr i32 %v0_10009a78 to i32*
  store i32 22, i32* %v2_10009a84, align 4
  %v0_10009b18.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009b14

dec_label_pc_10009aa8.lr.ph:                      ; preds = %dec_label_pc_10009a70
  %v2_10009a98 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10009a98, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10009aa822 = add i32 %v2_10009a98, 128
  %v3_10009aa823 = inttoptr i32 %v2_10009aa822 to i32*
  store i32 0, i32* %v3_10009aa823, align 4
  %v0_10009aac24 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009aac25 = add i32 %v0_10009aac24, -1
  store i32 %v1_10009aac25, i32* %r11.global-to-local, align 4
  %v1_10009ab026 = mul i32 %v1_10009aac25, 4
  %v1_10009ab427 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009ab428 = add i32 %v1_10009ab427, %v1_10009ab026
  store i32 %v2_10009ab428, i32* %r9.global-to-local, align 4
  %v0_10009ab829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009ab830 = add i32 %v0_10009ab829, -1
  store i32 %v1_10009ab830, i32* %ctr.global-to-local, align 4
  %v2_10009ab831 = icmp eq i32 %v1_10009ab830, 0
  br i1 %v2_10009ab831, label %dec_label_pc_10009abc, label %dec_label_pc_10009aa8.dec_label_pc_10009aa8_crit_edge

dec_label_pc_10009aa8.dec_label_pc_10009aa8_crit_edge: ; preds = %dec_label_pc_10009aa8.lr.ph, %dec_label_pc_10009aa8.dec_label_pc_10009aa8_crit_edge
  %v2_10009ab432 = phi i32 [ %v2_10009ab4, %dec_label_pc_10009aa8.dec_label_pc_10009aa8_crit_edge ], [ %v2_10009ab428, %dec_label_pc_10009aa8.lr.ph ]
  %v0_10009aa8.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009aa8 = add i32 %v2_10009ab432, 4
  %v3_10009aa8 = inttoptr i32 %v2_10009aa8 to i32*
  store i32 %v0_10009aa8.pre, i32* %v3_10009aa8, align 4
  %v0_10009aac = load i32, i32* %r11.global-to-local, align 4
  %v1_10009aac = add i32 %v0_10009aac, -1
  store i32 %v1_10009aac, i32* %r11.global-to-local, align 4
  %v1_10009ab0 = mul i32 %v1_10009aac, 4
  %v1_10009ab4 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009ab4 = add i32 %v1_10009ab4, %v1_10009ab0
  store i32 %v2_10009ab4, i32* %r9.global-to-local, align 4
  %v0_10009ab8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009ab8 = add i32 %v0_10009ab8, -1
  store i32 %v1_10009ab8, i32* %ctr.global-to-local, align 4
  %v2_10009ab8 = icmp eq i32 %v1_10009ab8, 0
  br i1 %v2_10009ab8, label %dec_label_pc_10009abc, label %dec_label_pc_10009aa8.dec_label_pc_10009aa8_crit_edge

dec_label_pc_10009abc:                            ; preds = %dec_label_pc_10009aa8.dec_label_pc_10009aa8_crit_edge, %dec_label_pc_10009aa8.lr.ph
  %v0_10009ac0.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10009abc = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_10009abc, i32* @r3, align 4
  store i32 %v0_10009ac0.pre, i32* @r4, align 4
  %v0_10009ac4 = call i32 @function_10009b54()
  %v1_10009ac8 = icmp slt i32 %v0_10009ac4, 0
  br i1 %v1_10009ac8, label %dec_label_pc_10009b10, label %dec_label_pc_10009ad0

dec_label_pc_10009ad0:                            ; preds = %dec_label_pc_10009abc
  %v0_10009ad4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009adc = call i32 @function_10009b2c(i32 ptrtoint (i32* @global_var_1001bf50.302 to i32), i32 %v0_10009ad4)
  %v2_10009ae8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268475136, i32* @lr, align 4
  %v4_10009afc = call i32 @function_1000b2e4(i32 %v0_10009ad4, i32* nonnull %stack_var_-296, i32 %v2_10009ae8)
  %v1_10009b00 = icmp slt i32 %v4_10009afc, 0
  br i1 %v1_10009b00, label %dec_label_pc_10009b10, label %dec_label_pc_10009b08

dec_label_pc_10009b08:                            ; preds = %dec_label_pc_10009ad0
  %v3_10009b08 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_10009b08, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009b14

dec_label_pc_10009b10:                            ; preds = %dec_label_pc_10009ad0, %dec_label_pc_10009abc
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009b14

dec_label_pc_10009b14:                            ; preds = %dec_label_pc_10009b08, %dec_label_pc_10009a78, %dec_label_pc_10009b10
  %v0_10009b18 = phi i32 [ %v3_10009b08, %dec_label_pc_10009b08 ], [ %v0_10009b18.pre, %dec_label_pc_10009a78 ], [ -1, %dec_label_pc_10009b10 ]
  ret i32 %v0_10009b18

; uselistorder directives
  uselistorder i32 %v1_10009ab8, { 1, 0 }
  uselistorder i32 %v2_10009ab4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009b14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009aa8.dec_label_pc_10009aa8_crit_edge, { 1, 0 }
}

define i32 @function_10009b2c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009b2c:
  %v1_10009b2c = add i32 %arg2, -1
  %v1_10009b30 = call i32 @__asm_rlwinm(i32 %v1_10009b2c, i32 29, i32 3, i32 29)
  %v1_10009b34 = urem i32 %v1_10009b2c, 32
  %v2_10009b38 = add i32 %v1_10009b30, %arg1
  %v3_10009b38 = inttoptr i32 %v2_10009b38 to i32*
  %v4_10009b38 = load i32, i32* %v3_10009b38, align 4
  %v3_10009b40 = shl i32 1, %v1_10009b34
  %v2_10009b44 = and i32 %v4_10009b38, %v3_10009b40
  %v2_10009b48 = icmp ne i32 %v2_10009b44, 0
  %v5_10009b4c = zext i1 %v2_10009b48 to i32
  ret i32 %v5_10009b4c
}

define i32 @function_10009b54() local_unnamed_addr {
dec_label_pc_10009b54:
  %r0.global-to-local = alloca i32, align 4
  %v0_10009b54 = load i32, i32* @r4, align 4
  %v1_10009b54 = add i32 %v0_10009b54, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10009b5c = call i32 @__asm_rlwinm(i32 %v1_10009b54, i32 29, i32 3, i32 29)
  %v1_10009b60 = urem i32 %v1_10009b54, 32
  %v1_10009b64 = load i32, i32* @r3, align 4
  %v2_10009b64 = add i32 %v1_10009b64, %v1_10009b5c
  %v3_10009b64 = inttoptr i32 %v2_10009b64 to i32*
  %v4_10009b64 = load i32, i32* %v3_10009b64, align 4
  %v0_10009b68 = load i32, i32* %r0.global-to-local, align 4
  %v3_10009b68 = shl i32 %v0_10009b68, %v1_10009b60
  store i32 %v3_10009b68, i32* %r0.global-to-local, align 4
  %v2_10009b6c = or i32 %v3_10009b68, %v4_10009b64
  store i32 %v2_10009b6c, i32* %v3_10009b64, align 4
  ret i32 0
}

define i32 @function_10009b7c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009b7c:
  %v1_10009b7c = add i32 %arg2, -1
  %v1_10009b84 = call i32 @__asm_rlwinm(i32 %v1_10009b7c, i32 29, i32 3, i32 29)
  %v1_10009b88 = urem i32 %v1_10009b7c, 32
  %v2_10009b8c = add i32 %v1_10009b84, %arg1
  %v3_10009b8c = inttoptr i32 %v2_10009b8c to i32*
  %v4_10009b8c = load i32, i32* %v3_10009b8c, align 4
  %v3_10009b90 = shl i32 -2, %v1_10009b88
  %v4_10009b90 = sub nsw i32 32, %v1_10009b88
  %v5_10009b90 = lshr i32 -2, %v4_10009b90
  %v6_10009b90 = or i32 %v5_10009b90, %v3_10009b90
  %v2_10009b94 = and i32 %v6_10009b90, %v4_10009b8c
  store i32 %v2_10009b94, i32* %v3_10009b8c, align 4
  ret i32 0
}

define i32 @function_10009ba4() local_unnamed_addr {
dec_label_pc_10009ba4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10009ba4 = load i32, i32* @r3, align 4
  %v3_10009ba4 = icmp eq i32 %v0_10009ba4, 0
  br i1 %v3_10009ba4, label %dec_label_pc_10009bc0.thread, label %dec_label_pc_10009bc0

dec_label_pc_10009bc0.thread:                     ; preds = %dec_label_pc_10009ba4
  br label %dec_label_pc_10009bcc

dec_label_pc_10009bc0:                            ; preds = %dec_label_pc_10009ba4
  %v3_10009bc4 = icmp ugt i32 %v0_10009ba4, -8
  br i1 %v3_10009bc4, label %dec_label_pc_10009cd4, label %dec_label_pc_10009bcc

dec_label_pc_10009bcc:                            ; preds = %dec_label_pc_10009bc0.thread, %dec_label_pc_10009bc0
  %v0_10009bd016 = phi i32 [ 1, %dec_label_pc_10009bc0.thread ], [ %v0_10009ba4, %dec_label_pc_10009bc0 ]
  %v1_10009bd0 = add i32 %v0_10009bd016, 4
  store i32 ptrtoint (i32* @global_var_1001be28.303 to i32), i32* @r29, align 4
  store i32 %v1_10009bd0, i32* %stack_var_-40, align 4
  %v0_10009be0 = call i32 @function_1000a700()
  %v2_10009be8 = ptrtoint i32* %stack_var_-40 to i32
  %v3_10009bf0 = call i32 @function_10009f9c(i32* inttoptr (i32 268549456 to i32*), i32 %v2_10009be8)
  store i32 %v3_10009bf0, i32* %r31.global-to-local, align 4
  %v0_10009bfc = call i32 @function_1000a700()
  %v3_10009c00 = icmp eq i32 %v3_10009bf0, 0
  br i1 %v3_10009c00, label %dec_label_pc_10009c08, label %dec_label_pc_10009cb8.thread

dec_label_pc_10009cb8.thread:                     ; preds = %dec_label_pc_10009bcc
  br label %dec_label_pc_10009ccc

dec_label_pc_10009c08:                            ; preds = %dec_label_pc_10009bcc
  %v3_10009c0c = load i32, i32* @global_var_1001bdac.306, align 4
  store i32 %v3_10009c0c, i32* %r31.global-to-local, align 4
  %v3_10009c10 = load i32, i32* %stack_var_-40, align 4
  %v2_10009c14 = icmp ult i32 %v3_10009c10, %v3_10009c0c
  br i1 %v2_10009c14, label %dec_label_pc_10009c2c, label %dec_label_pc_10009c1c

dec_label_pc_10009c1c:                            ; preds = %dec_label_pc_10009c08
  %v1_10009c20 = sub i32 0, %v3_10009c0c
  %v2_10009c1c = add i32 %v3_10009c0c, -1
  %v1_10009c24 = add i32 %v2_10009c1c, %v3_10009c10
  %v2_10009c28 = and i32 %v1_10009c24, %v1_10009c20
  store i32 %v2_10009c28, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009c2c

dec_label_pc_10009c2c:                            ; preds = %dec_label_pc_10009c08, %dec_label_pc_10009c1c
  %v0_10009c38 = call i32 @function_1000a700()
  %v0_10009c3c = load i32, i32* %r31.global-to-local, align 4
  store i32 268475460, i32* @lr, align 4
  %v1_10009c40 = call i32 @function_1000af20(i32 %v0_10009c3c)
  %v3_10009c44 = icmp eq i32 %v1_10009c40, -1
  br i1 %v3_10009c44, label %dec_label_pc_10009c64, label %dec_label_pc_10009c4c

dec_label_pc_10009c4c:                            ; preds = %dec_label_pc_10009c2c
  %v1_10009c4c = add i32 %v1_10009c40, 3
  %v1_10009c50 = call i32 @__asm_rlwinm(i32 %v1_10009c4c, i32 0, i32 0, i32 29)
  store i32 %v1_10009c50, i32* @r30, align 4
  %v4_10009c54 = icmp eq i32 %v1_10009c50, %v1_10009c40
  br i1 %v4_10009c54, label %dec_label_pc_10009c64, label %dec_label_pc_10009c5c

dec_label_pc_10009c5c:                            ; preds = %dec_label_pc_10009c4c
  %v2_10009c5c = sub i32 %v1_10009c50, %v1_10009c40
  store i32 268475492, i32* @lr, align 4
  %v1_10009c60 = call i32 @function_1000af20(i32 %v2_10009c5c)
  br label %dec_label_pc_10009c64

dec_label_pc_10009c64:                            ; preds = %dec_label_pc_10009c4c, %dec_label_pc_10009c2c, %dec_label_pc_10009c5c
  %v0_10009c6c = call i32 @function_1000a700()
  %v0_10009c70 = load i32, i32* @r30, align 4
  %v3_10009c70 = icmp eq i32 %v0_10009c70, -1
  br i1 %v3_10009c70, label %dec_label_pc_10009cd4, label %dec_label_pc_10009cb8

dec_label_pc_10009cb8:                            ; preds = %dec_label_pc_10009c64
  store i32 ptrtoint (i32* @global_var_1001be28.303 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001bd50 to i32), i32* @r29, align 4
  %v0_10009c8c = call i32 @function_1000a700()
  %v0_10009c90 = load i32, i32* @r31, align 4
  %v0_10009c94 = load i32, i32* @r30, align 4
  %v0_10009c98 = load i32, i32* @r29, align 4
  store i32 268475552, i32* @lr, align 4
  %v3_10009c9c = inttoptr i32 %v0_10009c98 to i32*
  %v4_10009c9c = call i32 @function_1000a120(i32* %v3_10009c9c, i32 %v0_10009c94, i32 %v0_10009c90)
  %v0_10009ca0 = load i32, i32* @r29, align 4
  %v2_10009ca8 = inttoptr i32 %v0_10009ca0 to i32*
  %v3_10009ca8 = call i32 @function_10009f9c(i32* %v2_10009ca8, i32 %v2_10009be8)
  store i32 %v3_10009ca8, i32* %r31.global-to-local, align 4
  %v0_10009cb4 = call i32 @function_1000a700()
  %v3_10009cb8 = icmp eq i32 %v3_10009ca8, 0
  br i1 %v3_10009cb8, label %dec_label_pc_10009ccc.thread, label %dec_label_pc_10009ccc

dec_label_pc_10009ccc.thread:                     ; preds = %dec_label_pc_10009cb8
  br label %dec_label_pc_10009cd4

dec_label_pc_10009ccc:                            ; preds = %dec_label_pc_10009cb8, %dec_label_pc_10009cb8.thread
  %v0_10009ccc.pr6 = phi i32 [ %v3_10009bf0, %dec_label_pc_10009cb8.thread ], [ %v3_10009ca8, %dec_label_pc_10009cb8 ]
  %v3_10009cc0 = load i32, i32* %stack_var_-40, align 4
  %v2_10009cc4 = inttoptr i32 %v0_10009ccc.pr6 to i32*
  store i32 %v3_10009cc0, i32* %v2_10009cc4, align 4
  %v0_10009cc8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009cc8 = add i32 %v0_10009cc8, 4
  store i32 %v1_10009cc8, i32* @r31, align 4
  %v3_10009ccc = icmp eq i32 %v1_10009cc8, 0
  br i1 %v3_10009ccc, label %dec_label_pc_10009cd4, label %dec_label_pc_10009ce4

dec_label_pc_10009cd4:                            ; preds = %dec_label_pc_10009ccc.thread, %dec_label_pc_10009ccc, %dec_label_pc_10009c64, %dec_label_pc_10009bc0
  %v0_10009cd4 = call i32 @function_1000936c()
  %v2_10009cdc = inttoptr i32 %v0_10009cd4 to i32*
  store i32 12, i32* %v2_10009cdc, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10009ce4

dec_label_pc_10009ce4:                            ; preds = %dec_label_pc_10009ccc, %dec_label_pc_10009cd4
  %v0_10009ce8 = phi i32 [ %v1_10009cc8, %dec_label_pc_10009ccc ], [ 0, %dec_label_pc_10009cd4 ]
  ret i32 %v0_10009ce8

; uselistorder directives
  uselistorder i32 %v1_10009cc8, { 1, 0, 2 }
  uselistorder i32 %v1_10009c50, { 1, 0, 2 }
  uselistorder i32 %v1_10009c40, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10009c0c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10009bf0, { 1, 0, 2 }
  uselistorder i32 %v0_10009ba4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_10009ce4, { 1, 0 }
  uselistorder label %dec_label_pc_10009cd4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10009c64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009c2c, { 1, 0 }
  uselistorder label %dec_label_pc_10009bcc, { 1, 0 }
}

define i32 @function_10009cfc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009cfc:
  %v3_10009cfc = icmp eq i32 %arg1, 0
  %v2_10009d0c = mul i32 %arg2, %arg1
  store i32 %v2_10009d0c, i32* @r31, align 4
  br i1 %v3_10009cfc, label %dec_label_pc_10009d38, label %dec_label_pc_10009d18

dec_label_pc_10009d18:                            ; preds = %dec_label_pc_10009cfc
  %v2_10009d18 = udiv i32 %v2_10009d0c, %arg1
  store i32 0, i32* @r30, align 4
  %v4_10009d20 = icmp eq i32 %v2_10009d18, %arg2
  br i1 %v4_10009d20, label %dec_label_pc_10009d38, label %dec_label_pc_10009d28

dec_label_pc_10009d28:                            ; preds = %dec_label_pc_10009d18
  %v0_10009d28 = call i32 @function_1000936c()
  %v2_10009d30 = inttoptr i32 %v0_10009d28 to i32*
  store i32 12, i32* %v2_10009d30, align 4
  br label %dec_label_pc_10009d54

dec_label_pc_10009d38:                            ; preds = %dec_label_pc_10009d18, %dec_label_pc_10009cfc
  store i32 %v2_10009d0c, i32* @r3, align 4
  store i32 268475712, i32* @lr, align 4
  %v0_10009d3c = call i32 @function_10009ba4()
  %v0_10009d40 = load i32, i32* @r31, align 4
  store i32 %v0_10009d3c, i32* @r30, align 4
  %v3_10009d44 = icmp eq i32 %v0_10009d3c, 0
  br i1 %v3_10009d44, label %dec_label_pc_10009d54, label %dec_label_pc_10009d50

dec_label_pc_10009d50:                            ; preds = %dec_label_pc_10009d38
  store i32 268475732, i32* @lr, align 4
  %v3_10009d50 = call i32 @function_10009454(i32 0, i32 %v0_10009d40, i32 %v0_10009d40)
  br label %dec_label_pc_10009d54

dec_label_pc_10009d54:                            ; preds = %dec_label_pc_10009d38, %dec_label_pc_10009d28, %dec_label_pc_10009d50
  %v0_10009d58 = load i32, i32* @r30, align 4
  ret i32 %v0_10009d58

; uselistorder directives
  uselistorder i32 %v0_10009d40, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009d54, { 2, 0, 1 }
}

define i32 @function_10009d6c() local_unnamed_addr {
dec_label_pc_10009d6c:
  %v0_10009d6c = load i32, i32* @r3, align 4
  %v3_10009d6c = icmp eq i32 %v0_10009d6c, 0
  br i1 %v3_10009d6c, label %dec_label_pc_10009e58, label %dec_label_pc_10009d84

dec_label_pc_10009d84:                            ; preds = %dec_label_pc_10009d6c
  %v1_10009d88 = add i32 %v0_10009d6c, -4
  %v2_10009d88 = inttoptr i32 %v1_10009d88 to i32*
  %v3_10009d88 = load i32, i32* %v2_10009d88, align 4
  store i32 %v3_10009d88, i32* @r28, align 4
  %v0_10009d9c = call i32 @function_1000a700()
  %v0_10009da4 = load i32, i32* @r28, align 4
  store i32 268475824, i32* @lr, align 4
  %v4_10009dac = call i32 @function_1000a120(i32* nonnull @global_var_1001bd50, i32 %v1_10009d88, i32 %v0_10009da4)
  %v3_10009db4 = load i32, i32* @global_var_1001bdac.306, align 4
  store i32 %v4_10009dac, i32* @r29, align 4
  %v1_10009dbc = inttoptr i32 %v4_10009dac to i32*
  %v2_10009dbc = load i32, i32* %v1_10009dbc, align 4
  store i32 %v2_10009dbc, i32* @r27, align 4
  %v1_10009dc0 = mul i32 %v3_10009db4, 8
  %v2_10009dc4 = icmp ult i32 %v2_10009dbc, %v1_10009dc0
  br i1 %v2_10009dc4, label %dec_label_pc_10009df8, label %dec_label_pc_10009dcc

dec_label_pc_10009dcc:                            ; preds = %dec_label_pc_10009d84
  store i32 ptrtoint (i32* @global_var_1001bfd0.307 to i32), i32* @r28, align 4
  %v0_10009ddc = call i32 @function_1000a700()
  store i32 268475880, i32* @lr, align 4
  %v1_10009de4 = call i32 @function_1000af20(i32 0)
  %v0_10009de8 = load i32, i32* @r31, align 4
  %v4_10009de8 = icmp eq i32 %v0_10009de8, %v1_10009de4
  br i1 %v4_10009de8, label %dec_label_pc_10009e00, label %dec_label_pc_10009df0

dec_label_pc_10009df0:                            ; preds = %dec_label_pc_10009dcc
  %v0_10009df4 = call i32 @function_1000a700()
  br label %dec_label_pc_10009df8

dec_label_pc_10009df8:                            ; preds = %dec_label_pc_10009d84, %dec_label_pc_10009df0
  br label %dec_label_pc_10009e54

dec_label_pc_10009e00:                            ; preds = %dec_label_pc_10009dcc
  %v0_10009e00 = load i32, i32* @r29, align 4
  %v1_10009e00 = add i32 %v0_10009e00, 4
  %v2_10009e00 = inttoptr i32 %v1_10009e00 to i32*
  %v3_10009e00 = load i32, i32* %v2_10009e00, align 4
  %v3_10009e04 = icmp eq i32 %v3_10009e00, 0
  br i1 %v3_10009e04, label %dec_label_pc_10009e14, label %dec_label_pc_10009e0c

dec_label_pc_10009e0c:                            ; preds = %dec_label_pc_10009e00
  %v1_10009e0c = add i32 %v0_10009e00, 8
  %v2_10009e0c = inttoptr i32 %v1_10009e0c to i32*
  %v3_10009e0c = load i32, i32* %v2_10009e0c, align 4
  %v2_10009e10 = add i32 %v3_10009e00, 8
  %v3_10009e10 = inttoptr i32 %v2_10009e10 to i32*
  store i32 %v3_10009e0c, i32* %v3_10009e10, align 4
  %v0_10009e14.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009e14

dec_label_pc_10009e14:                            ; preds = %dec_label_pc_10009e00, %dec_label_pc_10009e0c
  %v0_10009e14 = phi i32 [ %v0_10009e00, %dec_label_pc_10009e00 ], [ %v0_10009e14.pre, %dec_label_pc_10009e0c ]
  %v1_10009e14 = add i32 %v0_10009e14, 8
  %v2_10009e14 = inttoptr i32 %v1_10009e14 to i32*
  %v3_10009e14 = load i32, i32* %v2_10009e14, align 4
  %v1_10009e18 = add i32 %v0_10009e14, 4
  %v2_10009e18 = inttoptr i32 %v1_10009e18 to i32*
  %v3_10009e18 = load i32, i32* %v2_10009e18, align 4
  %v3_10009e1c = icmp eq i32 %v3_10009e14, 0
  br i1 %v3_10009e1c, label %dec_label_pc_10009e2c, label %dec_label_pc_10009e24

dec_label_pc_10009e24:                            ; preds = %dec_label_pc_10009e14
  %v2_10009e24 = add i32 %v3_10009e14, 4
  %v3_10009e24 = inttoptr i32 %v2_10009e24 to i32*
  store i32 %v3_10009e18, i32* %v3_10009e24, align 4
  br label %dec_label_pc_10009e30

dec_label_pc_10009e2c:                            ; preds = %dec_label_pc_10009e14
  store i32 %v3_10009e18, i32* @global_var_1001bd50, align 4
  br label %dec_label_pc_10009e30

dec_label_pc_10009e30:                            ; preds = %dec_label_pc_10009e24, %dec_label_pc_10009e2c
  %v0_10009e38 = call i32 @function_1000a700()
  %v0_10009e3c = load i32, i32* @r27, align 4
  %v1_10009e3c = load i32, i32* @r29, align 4
  %v0_10009e44 = load i32, i32* @r31, align 4
  %v2_10009e3c = sub i32 12, %v0_10009e3c
  %v1_10009e40 = add i32 %v2_10009e3c, %v1_10009e3c
  %v2_10009e44 = sub i32 %v1_10009e40, %v0_10009e44
  store i32 268475980, i32* @lr, align 4
  %v1_10009e48 = call i32 @function_1000af20(i32 %v2_10009e44)
  br label %dec_label_pc_10009e54

dec_label_pc_10009e54:                            ; preds = %dec_label_pc_10009df8, %dec_label_pc_10009e30
  %v0_10009e54 = call i32 @function_1000a700()
  br label %dec_label_pc_10009e58

dec_label_pc_10009e58:                            ; preds = %dec_label_pc_10009d6c, %dec_label_pc_10009e54
  %.0 = phi i32 [ undef, %dec_label_pc_10009d6c ], [ %v0_10009e54, %dec_label_pc_10009e54 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10009e14, { 1, 0 }
  uselistorder i32 (i32)* @function_1000af20, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009e58, { 1, 0 }
  uselistorder label %dec_label_pc_10009e54, { 1, 0 }
  uselistorder label %dec_label_pc_10009e30, { 1, 0 }
  uselistorder label %dec_label_pc_10009e14, { 1, 0 }
  uselistorder label %dec_label_pc_10009df8, { 1, 0 }
}

define i32 @function_10009e6c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009e6c:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_10009e6c = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_10009e6c, label %dec_label_pc_10009e88, label %dec_label_pc_10009e94

dec_label_pc_10009e88:                            ; preds = %dec_label_pc_10009e6c
  store i32 ptrtoint ([3 x i8]* @global_var_10009e8c.311 to i32), i32* @lr, align 4
  %v0_10009e88 = call i32 @function_10009d6c()
  br label %dec_label_pc_10009ea0

dec_label_pc_10009e94:                            ; preds = %dec_label_pc_10009e6c
  %v3_10009e94 = icmp eq i32 %arg1, 0
  br i1 %v3_10009e94, label %dec_label_pc_10009ea0, label %dec_label_pc_10009eac

dec_label_pc_10009ea0:                            ; preds = %dec_label_pc_10009e94, %dec_label_pc_10009e88
  %storemerge = phi i32 [ 0, %dec_label_pc_10009e88 ], [ %arg2, %dec_label_pc_10009e94 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268476068, i32* @lr, align 4
  %v0_10009ea0 = call i32 @function_10009ba4()
  store i32 %v0_10009ea0, i32* @r28, align 4
  br label %dec_label_pc_10009f84

dec_label_pc_10009eac:                            ; preds = %dec_label_pc_10009e94
  %v1_10009eac = add i32 %arg2, 7
  %v1_10009eb0 = add i32 %arg1, -4
  store i32 %v1_10009eb0, i32* %r27.global-to-local, align 4
  %v1_10009eb4 = call i32 @__asm_rlwinm(i32 %v1_10009eac, i32 0, i32 0, i32 29)
  store i32 %v1_10009eb4, i32* @r31, align 4
  %v2_10009eb8 = inttoptr i32 %v1_10009eb0 to i32*
  %v3_10009eb8 = load i32, i32* %v2_10009eb8, align 4
  store i32 %v3_10009eb8, i32* @r30, align 4
  %v2_10009ebc = icmp ugt i32 %v1_10009eb4, 11
  br i1 %v2_10009ebc, label %dec_label_pc_10009ec8, label %dec_label_pc_10009ec4

dec_label_pc_10009ec4:                            ; preds = %dec_label_pc_10009eac
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_10009ec8

dec_label_pc_10009ec8:                            ; preds = %dec_label_pc_10009eac, %dec_label_pc_10009ec4
  %v0_10009f48 = phi i32 [ %v1_10009eb4, %dec_label_pc_10009eac ], [ 12, %dec_label_pc_10009ec4 ]
  %v3_10009ec8 = icmp ugt i32 %v0_10009f48, %v3_10009eb8
  br i1 %v3_10009ec8, label %dec_label_pc_10009ed0, label %dec_label_pc_10009f48

dec_label_pc_10009ed0:                            ; preds = %dec_label_pc_10009ec8
  store i32 ptrtoint (i32* @global_var_1001be28.303 to i32), i32* @r29, align 4
  %v0_10009edc = call i32 @function_1000a700()
  %v0_10009ee4 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009ee4 = load i32, i32* @r30, align 4
  %v2_10009ee4 = add i32 %v1_10009ee4, %v0_10009ee4
  %v1_10009ee8 = load i32, i32* @r31, align 4
  %v2_10009ee8 = sub i32 %v1_10009ee8, %v1_10009ee4
  %v4_10009ef0 = call i32 @function_1000a03c(i32* nonnull @global_var_1001bd50, i32 %v2_10009ee4, i32 %v2_10009ee8)
  store i32 %v4_10009ef0, i32* %r27.global-to-local, align 4
  %v0_10009efc = call i32 @function_1000a700()
  %v3_10009f00 = icmp eq i32 %v4_10009ef0, 0
  br i1 %v3_10009f00, label %dec_label_pc_10009f14, label %dec_label_pc_10009f08

dec_label_pc_10009f08:                            ; preds = %dec_label_pc_10009ed0
  %v0_10009f08 = load i32, i32* @r30, align 4
  %v2_10009f08 = add i32 %v0_10009f08, %v4_10009ef0
  %v1_10009f0c = load i32, i32* @r28, align 4
  %v2_10009f0c = add i32 %v1_10009f0c, -4
  %v3_10009f0c = inttoptr i32 %v2_10009f0c to i32*
  store i32 %v2_10009f08, i32* %v3_10009f0c, align 4
  br label %dec_label_pc_10009f84

dec_label_pc_10009f14:                            ; preds = %dec_label_pc_10009ed0
  %v0_10009f14 = load i32, i32* @r31, align 4
  %v1_10009f14 = add i32 %v0_10009f14, -4
  store i32 %v1_10009f14, i32* @r3, align 4
  store i32 268476188, i32* @lr, align 4
  %v0_10009f18 = call i32 @function_10009ba4()
  store i32 %v0_10009f18, i32* @r3, align 4
  store i32 %v0_10009f18, i32* @r31, align 4
  %v3_10009f1c = icmp eq i32 %v0_10009f18, 0
  br i1 %v3_10009f1c, label %dec_label_pc_10009f24, label %dec_label_pc_10009f2c

dec_label_pc_10009f24:                            ; preds = %dec_label_pc_10009f14
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009f84

dec_label_pc_10009f2c:                            ; preds = %dec_label_pc_10009f14
  %v0_10009f2c = load i32, i32* @r28, align 4
  store i32 %v0_10009f2c, i32* @r4, align 4
  %v0_10009f30 = load i32, i32* @r30, align 4
  %v1_10009f30 = add i32 %v0_10009f30, -4
  store i32 %v1_10009f30, i32* @r5, align 4
  store i32 268476216, i32* @lr, align 4
  %v0_10009f34 = call i32 @function_1000b154()
  %v0_10009f38 = load i32, i32* @r28, align 4
  store i32 %v0_10009f38, i32* @r3, align 4
  store i32 268476224, i32* @lr, align 4
  %v0_10009f3c = call i32 @function_10009d6c()
  %v0_10009f40 = load i32, i32* @r31, align 4
  store i32 %v0_10009f40, i32* @r28, align 4
  br label %dec_label_pc_10009f84

dec_label_pc_10009f48:                            ; preds = %dec_label_pc_10009ec8
  %v1_10009f48 = add i32 %v0_10009f48, 28
  %v3_10009f4c = icmp ugt i32 %v1_10009f48, %v3_10009eb8
  br i1 %v3_10009f4c, label %dec_label_pc_10009f84, label %dec_label_pc_10009f54

dec_label_pc_10009f54:                            ; preds = %dec_label_pc_10009f48
  store i32 ptrtoint (i32* @global_var_1001be28.303 to i32), i32* @r29, align 4
  %v0_10009f60 = call i32 @function_1000a700()
  %v0_10009f68 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009f68 = load i32, i32* @r31, align 4
  %v2_10009f68 = add i32 %v1_10009f68, %v0_10009f68
  %v1_10009f6c = load i32, i32* @r30, align 4
  %v2_10009f6c = sub i32 %v1_10009f6c, %v1_10009f68
  store i32 268476280, i32* @lr, align 4
  %v4_10009f74 = call i32 @function_1000a120(i32* nonnull @global_var_1001bd50, i32 %v2_10009f68, i32 %v2_10009f6c)
  %v0_10009f7c = call i32 @function_1000a700()
  %v0_10009f80 = load i32, i32* @r31, align 4
  %v1_10009f80 = load i32, i32* @r28, align 4
  %v2_10009f80 = add i32 %v1_10009f80, -4
  %v3_10009f80 = inttoptr i32 %v2_10009f80 to i32*
  store i32 %v0_10009f80, i32* %v3_10009f80, align 4
  br label %dec_label_pc_10009f84

dec_label_pc_10009f84:                            ; preds = %dec_label_pc_10009f48, %dec_label_pc_10009f2c, %dec_label_pc_10009f24, %dec_label_pc_10009f08, %dec_label_pc_10009ea0, %dec_label_pc_10009f54
  %v0_10009f88 = load i32, i32* @r28, align 4
  ret i32 %v0_10009f88

; uselistorder directives
  uselistorder i32 %v1_10009f68, { 1, 0 }
  uselistorder i32 %v4_10009ef0, { 1, 0, 2 }
  uselistorder i32 %v1_10009ee4, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001bd50, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_10009ba4, { 2, 1, 0, 5, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder i32 ()* @function_10009d6c, { 4, 3, 7, 6, 5, 11, 10, 9, 8, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10009f84, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10009ec8, { 1, 0 }
}

define i32 @function_10009f9c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009f9c:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10009f9c = inttoptr i32 %arg2 to i32*
  %v2_10009f9c = load i32, i32* %v1_10009f9c, align 4
  %v1_10009fa0 = add i32 %v2_10009f9c, 3
  store i32 %v1_10009fa0, i32* %r9.global-to-local, align 4
  %v1_10009fa4 = call i32 @__asm_rlwinm(i32 %v1_10009fa0, i32 0, i32 0, i32 29)
  %v2_10009fa8 = icmp ugt i32 %v1_10009fa4, 11
  br i1 %v2_10009fa8, label %dec_label_pc_1000a02c.preheader, label %dec_label_pc_10009fb0

dec_label_pc_10009fb0:                            ; preds = %dec_label_pc_10009f9c
  br label %dec_label_pc_1000a02c.preheader

dec_label_pc_1000a02c.preheader:                  ; preds = %dec_label_pc_10009f9c, %dec_label_pc_10009fb0
  %storemerge20 = phi i32 [ 12, %dec_label_pc_10009fb0 ], [ %v1_10009fa4, %dec_label_pc_10009f9c ]
  %v0_1000a010 = phi i32 [ 12, %dec_label_pc_10009fb0 ], [ %v1_10009fa4, %dec_label_pc_10009f9c ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000a02c5 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000a02c5, label %dec_label_pc_1000a034, label %dec_label_pc_10009fbc

dec_label_pc_10009fbc:                            ; preds = %dec_label_pc_1000a02c.preheader, %dec_label_pc_1000a028
  %v0_1000a028 = phi i32 [ %storemerge, %dec_label_pc_1000a028 ], [ %storemerge2, %dec_label_pc_1000a02c.preheader ]
  %v1_10009fbc = inttoptr i32 %v0_1000a028 to i32*
  %v2_10009fbc = load i32, i32* %v1_10009fbc, align 4
  store i32 %v2_10009fbc, i32* %r10.global-to-local, align 4
  %v2_10009fc0 = icmp ult i32 %v2_10009fbc, %v0_1000a010
  br i1 %v2_10009fc0, label %dec_label_pc_1000a028, label %dec_label_pc_10009fc8

dec_label_pc_10009fc8:                            ; preds = %dec_label_pc_10009fbc
  %v1_10009fc8 = add i32 %v0_1000a010, 44
  %v2_10009fcc = icmp ult i32 %v2_10009fbc, %v1_10009fc8
  br i1 %v2_10009fcc, label %dec_label_pc_10009fd4, label %dec_label_pc_1000a010

dec_label_pc_10009fd4:                            ; preds = %dec_label_pc_10009fc8
  %v1_10009fd4 = add i32 %v0_1000a028, 4
  %v2_10009fd4 = inttoptr i32 %v1_10009fd4 to i32*
  %v3_10009fd4 = load i32, i32* %v2_10009fd4, align 4
  store i32 %v3_10009fd4, i32* %r11.global-to-local, align 4
  %v3_10009fd8 = icmp eq i32 %v3_10009fd4, 0
  br i1 %v3_10009fd8, label %dec_label_pc_10009fe8, label %dec_label_pc_10009fe0

dec_label_pc_10009fe0:                            ; preds = %dec_label_pc_10009fd4
  %v1_10009fe0 = add i32 %v0_1000a028, 8
  %v2_10009fe0 = inttoptr i32 %v1_10009fe0 to i32*
  %v3_10009fe0 = load i32, i32* %v2_10009fe0, align 4
  %v2_10009fe4 = add i32 %v3_10009fd4, 8
  %v3_10009fe4 = inttoptr i32 %v2_10009fe4 to i32*
  store i32 %v3_10009fe0, i32* %v3_10009fe4, align 4
  %v0_10009fe8.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000a004.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009fe8

dec_label_pc_10009fe8:                            ; preds = %dec_label_pc_10009fd4, %dec_label_pc_10009fe0
  %v0_1000a004 = phi i32 [ %v2_10009fbc, %dec_label_pc_10009fd4 ], [ %v0_1000a004.pre, %dec_label_pc_10009fe0 ]
  %v0_10009fe8 = phi i32 [ %v0_1000a028, %dec_label_pc_10009fd4 ], [ %v0_10009fe8.pre, %dec_label_pc_10009fe0 ]
  %v1_10009fe8 = add i32 %v0_10009fe8, 8
  %v2_10009fe8 = inttoptr i32 %v1_10009fe8 to i32*
  %v3_10009fe8 = load i32, i32* %v2_10009fe8, align 4
  %v1_10009fec = add i32 %v0_10009fe8, 4
  %v2_10009fec = inttoptr i32 %v1_10009fec to i32*
  %v3_10009fec = load i32, i32* %v2_10009fec, align 4
  %v3_10009ff0 = icmp eq i32 %v3_10009fe8, 0
  store i32 %v0_1000a004, i32* %r11.global-to-local, align 4
  br i1 %v3_10009ff0, label %dec_label_pc_1000a004, label %dec_label_pc_10009ff8

dec_label_pc_10009ff8:                            ; preds = %dec_label_pc_10009fe8
  %v2_10009ffc = add i32 %v3_10009fe8, 4
  %v3_10009ffc = inttoptr i32 %v2_10009ffc to i32*
  store i32 %v3_10009fec, i32* %v3_10009ffc, align 4
  br label %dec_label_pc_1000a018

dec_label_pc_1000a004:                            ; preds = %dec_label_pc_10009fe8
  store i32 %v3_10009fec, i32* %arg1, align 4
  br label %dec_label_pc_1000a018

dec_label_pc_1000a010:                            ; preds = %dec_label_pc_10009fc8
  %v2_1000a010 = sub i32 %v2_10009fbc, %v0_1000a010
  store i32 %v2_1000a010, i32* %v1_10009fbc, align 4
  br label %dec_label_pc_1000a018

dec_label_pc_1000a018:                            ; preds = %dec_label_pc_1000a004, %dec_label_pc_10009ff8, %dec_label_pc_1000a010
  %v0_1000a018 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a018 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000a018 = sub i32 %v1_1000a018, %v0_1000a018
  store i32 %v2_1000a018, i32* %r9.global-to-local, align 4
  %v0_1000a01c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a01c, i32* %v1_10009f9c, align 4
  %v0_1000a020 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a020 = add i32 %v0_1000a020, 12
  ret i32 %v1_1000a020

dec_label_pc_1000a028:                            ; preds = %dec_label_pc_10009fbc
  %v1_1000a028 = add i32 %v0_1000a028, 4
  %storemerge.in = inttoptr i32 %v1_1000a028 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000a02c = icmp eq i32 %storemerge, 0
  br i1 %v3_1000a02c, label %dec_label_pc_1000a02c.dec_label_pc_1000a034_crit_edge, label %dec_label_pc_10009fbc

dec_label_pc_1000a02c.dec_label_pc_1000a034_crit_edge: ; preds = %dec_label_pc_1000a028
  br label %dec_label_pc_1000a034

dec_label_pc_1000a034:                            ; preds = %dec_label_pc_1000a02c.dec_label_pc_1000a034_crit_edge, %dec_label_pc_1000a02c.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10009fe8, { 1, 0 }
  uselistorder i32 %v2_10009fbc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000a028, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000a010, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a018, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10009fbc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a02c.preheader, { 1, 0 }
}

define i32 @function_1000a03c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a03c:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000a03c = load i32, i32* %arg1, align 4
  store i32 %v2_1000a03c, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_1000a044 = add i32 %arg3, 3
  %v3_1000a0c83 = icmp eq i32 %v2_1000a03c, 0
  br i1 %v3_1000a0c83, label %dec_label_pc_1000a0d0, label %dec_label_pc_1000a04c

dec_label_pc_1000a04c:                            ; preds = %dec_label_pc_1000a03c, %dec_label_pc_1000a0c4
  %v0_1000a0c4 = phi i32 [ %v3_1000a0c4, %dec_label_pc_1000a0c4 ], [ %v2_1000a03c, %dec_label_pc_1000a03c ]
  %v1_1000a04c = inttoptr i32 %v0_1000a0c4 to i32*
  %v2_1000a04c = load i32, i32* %v1_1000a04c, align 4
  %v2_1000a050 = sub i32 %v0_1000a0c4, %v2_1000a04c
  %v1_1000a054 = add i32 %v2_1000a050, 12
  %v3_1000a058 = icmp ugt i32 %v1_1000a054, %arg2
  br i1 %v3_1000a058, label %dec_label_pc_1000a0c4, label %dec_label_pc_1000a060

dec_label_pc_1000a060:                            ; preds = %dec_label_pc_1000a04c
  %v4_1000a058 = icmp eq i32 %v1_1000a054, %arg2
  br i1 %v4_1000a058, label %dec_label_pc_1000a068, label %dec_label_pc_1000a0d0

dec_label_pc_1000a068:                            ; preds = %dec_label_pc_1000a060
  %v1_1000a068 = call i32 @__asm_rlwinm(i32 %v1_1000a044, i32 0, i32 0, i32 29)
  %v2_1000a06c = icmp ult i32 %v2_1000a04c, %v1_1000a068
  br i1 %v2_1000a06c, label %dec_label_pc_1000a0d0, label %dec_label_pc_1000a074

dec_label_pc_1000a074:                            ; preds = %dec_label_pc_1000a068
  %v1_1000a074 = add i32 %v1_1000a068, 44
  %v2_1000a078 = icmp ult i32 %v2_1000a04c, %v1_1000a074
  br i1 %v2_1000a078, label %dec_label_pc_1000a080, label %dec_label_pc_1000a0b4

dec_label_pc_1000a080:                            ; preds = %dec_label_pc_1000a074
  %v0_1000a080 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a080 = add i32 %v0_1000a080, 4
  %v2_1000a080 = inttoptr i32 %v1_1000a080 to i32*
  %v3_1000a080 = load i32, i32* %v2_1000a080, align 4
  %v3_1000a084 = icmp eq i32 %v3_1000a080, 0
  br i1 %v3_1000a084, label %dec_label_pc_1000a094, label %dec_label_pc_1000a08c

dec_label_pc_1000a08c:                            ; preds = %dec_label_pc_1000a080
  %v1_1000a08c = add i32 %v0_1000a080, 8
  %v2_1000a08c = inttoptr i32 %v1_1000a08c to i32*
  %v3_1000a08c = load i32, i32* %v2_1000a08c, align 4
  %v2_1000a090 = add i32 %v3_1000a080, 8
  %v3_1000a090 = inttoptr i32 %v2_1000a090 to i32*
  store i32 %v3_1000a08c, i32* %v3_1000a090, align 4
  %v0_1000a094.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a094

dec_label_pc_1000a094:                            ; preds = %dec_label_pc_1000a080, %dec_label_pc_1000a08c
  %v0_1000a094 = phi i32 [ %v0_1000a080, %dec_label_pc_1000a080 ], [ %v0_1000a094.pre, %dec_label_pc_1000a08c ]
  %v1_1000a094 = add i32 %v0_1000a094, 8
  %v2_1000a094 = inttoptr i32 %v1_1000a094 to i32*
  %v3_1000a094 = load i32, i32* %v2_1000a094, align 4
  %v1_1000a098 = add i32 %v0_1000a094, 4
  %v2_1000a098 = inttoptr i32 %v1_1000a098 to i32*
  %v3_1000a098 = load i32, i32* %v2_1000a098, align 4
  %v3_1000a09c = icmp eq i32 %v3_1000a094, 0
  br i1 %v3_1000a09c, label %dec_label_pc_1000a0ac, label %dec_label_pc_1000a0a4

dec_label_pc_1000a0a4:                            ; preds = %dec_label_pc_1000a094
  %v2_1000a0a4 = add i32 %v3_1000a094, 4
  %v3_1000a0a4 = inttoptr i32 %v2_1000a0a4 to i32*
  store i32 %v3_1000a098, i32* %v3_1000a0a4, align 4
  ret i32 %v2_1000a04c

dec_label_pc_1000a0ac:                            ; preds = %dec_label_pc_1000a094
  %v1_1000a0ac = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0ac = inttoptr i32 %v1_1000a0ac to i32*
  store i32 %v3_1000a098, i32* %v2_1000a0ac, align 4
  ret i32 %v2_1000a04c

dec_label_pc_1000a0b4:                            ; preds = %dec_label_pc_1000a074
  %v2_1000a0b4 = sub i32 %v2_1000a04c, %v1_1000a068
  %v1_1000a0bc = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a0bc = inttoptr i32 %v1_1000a0bc to i32*
  store i32 %v2_1000a0b4, i32* %v2_1000a0bc, align 4
  ret i32 %v1_1000a068

dec_label_pc_1000a0c4:                            ; preds = %dec_label_pc_1000a04c
  %v1_1000a0c4 = add i32 %v0_1000a0c4, 4
  %v2_1000a0c4 = inttoptr i32 %v1_1000a0c4 to i32*
  %v3_1000a0c4 = load i32, i32* %v2_1000a0c4, align 4
  store i32 %v3_1000a0c4, i32* %r11.global-to-local, align 4
  %v3_1000a0c8 = icmp eq i32 %v3_1000a0c4, 0
  br i1 %v3_1000a0c8, label %dec_label_pc_1000a0c8.dec_label_pc_1000a0d0.loopexit_crit_edge, label %dec_label_pc_1000a04c

dec_label_pc_1000a0c8.dec_label_pc_1000a0d0.loopexit_crit_edge: ; preds = %dec_label_pc_1000a0c4
  br label %dec_label_pc_1000a0d0

dec_label_pc_1000a0d0:                            ; preds = %dec_label_pc_1000a03c, %dec_label_pc_1000a0c8.dec_label_pc_1000a0d0.loopexit_crit_edge, %dec_label_pc_1000a060, %dec_label_pc_1000a068
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000a0c4, { 1, 2, 0 }
  uselistorder i32 %v0_1000a094, { 1, 0 }
  uselistorder i32 %v1_1000a068, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000a04c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1000a0c4, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0d0, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000a094, { 1, 0 }
  uselistorder label %dec_label_pc_1000a04c, { 1, 0 }
}

define i32 @function_1000a0d8(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a0d8:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a0d8 = icmp eq i32 %arg3, 0
  %v2_1000a0dc = add i32 %arg2, 4
  %v3_1000a0dc = inttoptr i32 %v2_1000a0dc to i32*
  store i32 %arg4, i32* %v3_1000a0dc, align 4
  %v2_1000a0e0 = add i32 %arg2, 8
  %v3_1000a0e0 = inttoptr i32 %v2_1000a0e0 to i32*
  store i32 %arg3, i32* %v3_1000a0e0, align 4
  br i1 %v3_1000a0d8, label %dec_label_pc_1000a0f0, label %dec_label_pc_1000a0e8

dec_label_pc_1000a0e8:                            ; preds = %dec_label_pc_1000a0d8
  %v2_1000a0e8 = add i32 %arg3, 4
  %v3_1000a0e8 = inttoptr i32 %v2_1000a0e8 to i32*
  store i32 %arg2, i32* %v3_1000a0e8, align 4
  br label %dec_label_pc_1000a0f4

dec_label_pc_1000a0f0:                            ; preds = %dec_label_pc_1000a0d8
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a0f4

dec_label_pc_1000a0f4:                            ; preds = %dec_label_pc_1000a0e8, %dec_label_pc_1000a0f0
  %v3_1000a0f4 = icmp eq i32 %arg4, 0
  %v0_1000a0f8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a0f4, i32 %v0_1000a0f8)
  %v2_1000a0fc = add i32 %arg4, 8
  %v3_1000a0fc = inttoptr i32 %v2_1000a0fc to i32*
  store i32 %arg2, i32* %v3_1000a0fc, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_1000a0f4, { 1, 0 }
}

define i32 @function_1000a104(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a104:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a104 = icmp eq i32 %arg3, 0
  br i1 %v3_1000a104, label %dec_label_pc_1000a114, label %dec_label_pc_1000a10c

dec_label_pc_1000a10c:                            ; preds = %dec_label_pc_1000a104
  %v2_1000a10c = add i32 %arg3, 4
  %v3_1000a10c = inttoptr i32 %v2_1000a10c to i32*
  store i32 %arg2, i32* %v3_1000a10c, align 4
  br label %dec_label_pc_1000a118

dec_label_pc_1000a114:                            ; preds = %dec_label_pc_1000a104
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a118

dec_label_pc_1000a118:                            ; preds = %dec_label_pc_1000a10c, %dec_label_pc_1000a114
  %v2_1000a118 = add i32 %arg2, 8
  %v3_1000a118 = inttoptr i32 %v2_1000a118 to i32*
  store i32 %arg3, i32* %v3_1000a118, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a118, { 1, 0 }
}

define i32 @function_1000a120(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a120:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000a138 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a138, i32* @r31, align 4
  %v2_1000a13c = add i32 %arg3, %arg2
  store i32 %v2_1000a13c, i32* %r3.global-to-local, align 4
  %v3_1000a1507 = icmp eq i32 %v2_1000a138, 0
  %v1_1000a1548 = add i32 %v2_1000a138, 12
  %tmp69 = icmp uge i32 %v1_1000a1548, %arg2
  %or.cond10 = or i1 %v3_1000a1507, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000a160, label %dec_label_pc_1000a148

dec_label_pc_1000a148:                            ; preds = %dec_label_pc_1000a120, %dec_label_pc_1000a148
  %v0_1000a1a811 = phi i32 [ %v3_1000a14c, %dec_label_pc_1000a148 ], [ %v2_1000a138, %dec_label_pc_1000a120 ]
  store i32 %v0_1000a1a811, i32* %r11.global-to-local, align 4
  %v1_1000a14c = add i32 %v0_1000a1a811, 4
  %v2_1000a14c = inttoptr i32 %v1_1000a14c to i32*
  %v3_1000a14c = load i32, i32* %v2_1000a14c, align 4
  store i32 %v3_1000a14c, i32* @r31, align 4
  %v3_1000a150 = icmp eq i32 %v3_1000a14c, 0
  %v1_1000a154 = add i32 %v3_1000a14c, 12
  %tmp6 = icmp uge i32 %v1_1000a154, %arg2
  %or.cond = or i1 %v3_1000a150, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000a160, label %dec_label_pc_1000a148

dec_label_pc_1000a160:                            ; preds = %dec_label_pc_1000a148, %dec_label_pc_1000a120
  %v0_1000a19c.lcssa = phi i32 [ 0, %dec_label_pc_1000a120 ], [ %v0_1000a1a811, %dec_label_pc_1000a148 ]
  %v0_1000a1a8.lcssa = phi i32 [ %v2_1000a138, %dec_label_pc_1000a120 ], [ %v3_1000a14c, %dec_label_pc_1000a148 ]
  %v3_1000a150.lcssa = phi i1 [ %v3_1000a1507, %dec_label_pc_1000a120 ], [ %v3_1000a150, %dec_label_pc_1000a148 ]
  br i1 %v3_1000a150.lcssa, label %dec_label_pc_1000a218, label %dec_label_pc_1000a168

dec_label_pc_1000a168:                            ; preds = %dec_label_pc_1000a160
  %v1_1000a168 = inttoptr i32 %v0_1000a1a8.lcssa to i32*
  %v2_1000a168 = load i32, i32* %v1_1000a168, align 4
  %v2_1000a16c = sub i32 %v0_1000a1a8.lcssa, %v2_1000a168
  %v1_1000a170 = add i32 %v2_1000a16c, 12
  %v3_1000a174 = icmp ugt i32 %v1_1000a170, %v2_1000a13c
  br i1 %v3_1000a174, label %dec_label_pc_1000a218, label %dec_label_pc_1000a17c

dec_label_pc_1000a17c:                            ; preds = %dec_label_pc_1000a168
  %v4_1000a174 = icmp eq i32 %v1_1000a170, %v2_1000a13c
  %v2_1000a180 = add i32 %v2_1000a168, %arg3
  store i32 %v2_1000a180, i32* @r29, align 4
  br i1 %v4_1000a174, label %dec_label_pc_1000a188, label %dec_label_pc_1000a1b8

dec_label_pc_1000a188:                            ; preds = %dec_label_pc_1000a17c
  %v3_1000a188 = icmp eq i32 %v0_1000a19c.lcssa, 0
  br i1 %v3_1000a188, label %dec_label_pc_1000a20c, label %dec_label_pc_1000a190

dec_label_pc_1000a190:                            ; preds = %dec_label_pc_1000a188
  %v1_1000a190 = add i32 %v0_1000a19c.lcssa, 12
  %v4_1000a194 = icmp eq i32 %v1_1000a190, %arg2
  br i1 %v4_1000a194, label %dec_label_pc_1000a19c, label %dec_label_pc_1000a20c

dec_label_pc_1000a19c:                            ; preds = %dec_label_pc_1000a190
  %v1_1000a19c = inttoptr i32 %v0_1000a19c.lcssa to i32*
  %v2_1000a19c = load i32, i32* %v1_1000a19c, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000a1a4 = add i32 %v0_1000a19c.lcssa, 8
  %v2_1000a1a4 = inttoptr i32 %v1_1000a1a4 to i32*
  %v3_1000a1a4 = load i32, i32* %v2_1000a1a4, align 4
  %v2_1000a1ac = add i32 %v2_1000a19c, %v2_1000a180
  store i32 %v2_1000a1ac, i32* @r29, align 4
  %v5_1000a1b0 = call i32 @function_1000a104(i32* %arg1, i32 %v0_1000a1a8.lcssa, i32 %v3_1000a1a4, i32 %v2_1000a13c)
  store i32 %v5_1000a1b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a20c

dec_label_pc_1000a1b8:                            ; preds = %dec_label_pc_1000a17c
  %v1_1000a1b8 = add i32 %v0_1000a1a8.lcssa, 4
  %v2_1000a1b8 = inttoptr i32 %v1_1000a1b8 to i32*
  %v3_1000a1b8 = load i32, i32* %v2_1000a1b8, align 4
  %v3_1000a1bc = icmp eq i32 %v3_1000a1b8, 0
  br i1 %v3_1000a1bc, label %dec_label_pc_1000a1f4, label %dec_label_pc_1000a1c4

dec_label_pc_1000a1c4:                            ; preds = %dec_label_pc_1000a1b8
  %v1_1000a1c4 = inttoptr i32 %v3_1000a1b8 to i32*
  %v2_1000a1c4 = load i32, i32* %v1_1000a1c4, align 4
  %v2_1000a1c8 = sub i32 %v3_1000a1b8, %v2_1000a1c4
  %v1_1000a1cc = add i32 %v2_1000a1c8, 12
  %v4_1000a1d0 = icmp eq i32 %v2_1000a13c, %v1_1000a1cc
  br i1 %v4_1000a1d0, label %dec_label_pc_1000a1d8, label %dec_label_pc_1000a1f4

dec_label_pc_1000a1d8:                            ; preds = %dec_label_pc_1000a1c4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000a1e4 = add i32 %v2_1000a1c4, %v2_1000a180
  store i32 %v2_1000a1e4, i32* @r29, align 4
  store i32 %v3_1000a1b8, i32* @r31, align 4
  %v5_1000a1ec = call i32 @function_1000a104(i32* %arg1, i32 %v3_1000a1b8, i32 %v0_1000a19c.lcssa, i32 %v2_1000a13c)
  store i32 %v5_1000a1ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a20c

dec_label_pc_1000a1f4:                            ; preds = %dec_label_pc_1000a1c4, %dec_label_pc_1000a1b8
  %v2_1000a1f4 = add i32 %v0_1000a1a8.lcssa, %arg3
  store i32 %v2_1000a1f4, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268476940, i32* @lr, align 4
  %v5_1000a208 = call i32 @function_1000a0d8(i32* %arg1, i32 %v2_1000a1f4, i32 %v0_1000a19c.lcssa, i32 %v3_1000a1b8)
  store i32 %v5_1000a208, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a20c

dec_label_pc_1000a20c:                            ; preds = %dec_label_pc_1000a190, %dec_label_pc_1000a188, %dec_label_pc_1000a1d8, %dec_label_pc_1000a19c, %dec_label_pc_1000a1f4
  %v0_1000a20c = load i32, i32* @r31, align 4
  store i32 %v0_1000a20c, i32* @r30, align 4
  %v0_1000a210 = load i32, i32* @r29, align 4
  %v2_1000a210 = inttoptr i32 %v0_1000a20c to i32*
  store i32 %v0_1000a210, i32* %v2_1000a210, align 4
  br label %dec_label_pc_1000a234

dec_label_pc_1000a218:                            ; preds = %dec_label_pc_1000a168, %dec_label_pc_1000a160
  %v2_1000a218 = add i32 %v2_1000a13c, -12
  %v3_1000a218 = inttoptr i32 %v2_1000a218 to i32*
  store i32 %arg3, i32* %v3_1000a218, align 4
  %v0_1000a21c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a21c = add i32 %v0_1000a21c, -12
  store i32 %v1_1000a21c, i32* @r30, align 4
  %v0_1000a220 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000a224 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000a224, i32* %r3.global-to-local, align 4
  %v0_1000a228 = load i32, i32* @r31, align 4
  store i32 268476980, i32* @lr, align 4
  %v4_1000a230 = inttoptr i32 %v0_1000a224 to i32*
  %v5_1000a230 = call i32 @function_1000a0d8(i32* %v4_1000a230, i32 %v1_1000a21c, i32 %v0_1000a220, i32 %v0_1000a228)
  store i32 %v5_1000a230, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a234

dec_label_pc_1000a234:                            ; preds = %dec_label_pc_1000a20c, %dec_label_pc_1000a218
  %v0_1000a238 = load i32, i32* @r30, align 4
  store i32 %v0_1000a238, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a238

; uselistorder directives
  uselistorder i32 %v3_1000a1b8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000a170, { 1, 0 }
  uselistorder i32 %v0_1000a1a8.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000a19c.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000a14c, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000a13c, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 4, 9, 10, 11, 1, 2, 3, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_1000a104, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000a234, { 1, 0 }
  uselistorder label %dec_label_pc_1000a20c, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000a148, { 1, 0 }
}

define i32 @function_1000a24c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a24c:
  %r26.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @r25, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000a284 = load i32, i32* bitcast (i32** @global_var_1001bd5c.314 to i32*), align 4
  %v2_1000a29027 = load i8, i8* %arg1, align 1
  %v3_1000a29028 = zext i8 %v2_1000a29027 to i32
  %v1_1000a29429 = mul nuw nsw i32 %v3_1000a29028, 2
  %v2_1000a29830 = add i32 %v1_1000a29429, %v3_1000a284
  %v3_1000a29831 = inttoptr i32 %v2_1000a29830 to i16*
  %v4_1000a29832 = load i16, i16* %v3_1000a29831, align 2
  %v1_1000a29c34 = and i16 %v4_1000a29832, 32
  %v3_1000a29c35 = icmp eq i16 %v1_1000a29c34, 0
  br i1 %v3_1000a29c35, label %dec_label_pc_1000a2a4, label %dec_label_pc_1000a28c

dec_label_pc_1000a28c:                            ; preds = %dec_label_pc_1000a24c, %dec_label_pc_1000a28c
  %v0_1000a2c436 = phi i32 [ %v1_1000a28c, %dec_label_pc_1000a28c ], [ %tmp, %dec_label_pc_1000a24c ]
  %v1_1000a28c = add i32 %v0_1000a2c436, 1
  store i32 %v1_1000a28c, i32* %r31.global-to-local, align 4
  %v1_1000a290 = inttoptr i32 %v1_1000a28c to i8*
  %v2_1000a290 = load i8, i8* %v1_1000a290, align 1
  %v3_1000a290 = zext i8 %v2_1000a290 to i32
  %v1_1000a294 = mul nuw nsw i32 %v3_1000a290, 2
  %v2_1000a298 = add i32 %v1_1000a294, %v3_1000a284
  %v3_1000a298 = inttoptr i32 %v2_1000a298 to i16*
  %v4_1000a298 = load i16, i16* %v3_1000a298, align 2
  %v1_1000a29c = and i16 %v4_1000a298, 32
  %v3_1000a29c = icmp eq i16 %v1_1000a29c, 0
  br i1 %v3_1000a29c, label %dec_label_pc_1000a2a4, label %dec_label_pc_1000a28c

dec_label_pc_1000a2a4:                            ; preds = %dec_label_pc_1000a28c, %dec_label_pc_1000a24c
  %v0_1000a2c4.lcssa = phi i32 [ %tmp, %dec_label_pc_1000a24c ], [ %v1_1000a28c, %dec_label_pc_1000a28c ]
  %v2_1000a290.lcssa = phi i8 [ %v2_1000a29027, %dec_label_pc_1000a24c ], [ %v2_1000a290, %dec_label_pc_1000a28c ]
  %v3_1000a2a4 = icmp eq i8 %v2_1000a290.lcssa, 43
  br i1 %v3_1000a2a4, label %dec_label_pc_1000a2c4, label %dec_label_pc_1000a2ac

dec_label_pc_1000a2ac:                            ; preds = %dec_label_pc_1000a2a4
  %v3_1000a2ac = icmp eq i8 %v2_1000a290.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000a2ac, label %dec_label_pc_1000a2c4, label %dec_label_pc_1000a2c8

dec_label_pc_1000a2c4:                            ; preds = %dec_label_pc_1000a2a4, %dec_label_pc_1000a2ac
  %storemerge = phi i32 [ 1, %dec_label_pc_1000a2ac ], [ 0, %dec_label_pc_1000a2a4 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000a2c4 = add i32 %v0_1000a2c4.lcssa, 1
  store i32 %v1_1000a2c4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a2c8

dec_label_pc_1000a2c8:                            ; preds = %dec_label_pc_1000a2ac, %dec_label_pc_1000a2c4
  %v1_1000a2c8 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000a2c8 = icmp eq i32 %v1_1000a2c8, 0
  br i1 %v4_1000a2c8, label %dec_label_pc_1000a2d4, label %dec_label_pc_1000a2c8.dec_label_pc_1000a310_crit_edge

dec_label_pc_1000a2c8.dec_label_pc_1000a310_crit_edge: ; preds = %dec_label_pc_1000a2c8
  %v0_1000a310.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a310

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a2c8
  %v0_1000a2d4 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a2d4 = inttoptr i32 %v0_1000a2d4 to i8*
  %v2_1000a2d4 = load i8, i8* %v1_1000a2d4, align 1
  %v0_1000a2d8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a2d8 = add i32 %v0_1000a2d8, 10
  store i32 %v1_1000a2d8, i32* %r30.global-to-local, align 4
  %v3_1000a2dc = icmp eq i8 %v2_1000a2d4, 48
  br i1 %v3_1000a2dc, label %dec_label_pc_1000a2e4, label %dec_label_pc_1000a304

dec_label_pc_1000a2e4:                            ; preds = %dec_label_pc_1000a2d4
  %v1_1000a2e4 = add i32 %v0_1000a2d4, 1
  %v2_1000a2e4 = inttoptr i32 %v1_1000a2e4 to i8*
  %v3_1000a2e4 = load i8, i8* %v2_1000a2e4, align 1
  %v4_1000a2e4 = zext i8 %v3_1000a2e4 to i32
  store i32 %v1_1000a2e4, i32* %r31.global-to-local, align 4
  %v1_1000a2e8 = add i32 %v0_1000a2d8, 8
  store i32 %v1_1000a2e8, i32* %r30.global-to-local, align 4
  %v1_1000a2ec = or i32 %v4_1000a2e4, 32
  %v3_1000a2f4 = icmp eq i32 %v1_1000a2ec, 120
  br i1 %v3_1000a2f4, label %dec_label_pc_1000a2fc, label %dec_label_pc_1000a304

dec_label_pc_1000a2fc:                            ; preds = %dec_label_pc_1000a2e4
  %v1_1000a2fc = mul i32 %v1_1000a2e8, 2
  store i32 %v1_1000a2fc, i32* %r30.global-to-local, align 4
  %v1_1000a300 = add i32 %v0_1000a2d4, 2
  store i32 %v1_1000a300, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a304

dec_label_pc_1000a304:                            ; preds = %dec_label_pc_1000a2e4, %dec_label_pc_1000a2d4, %dec_label_pc_1000a2fc
  %v0_1000a3b815 = phi i32 [ %v1_1000a2e4, %dec_label_pc_1000a2fc ], [ %tmp, %dec_label_pc_1000a2d4 ], [ %v1_1000a2e4, %dec_label_pc_1000a2e4 ]
  %v0_1000a304 = phi i32 [ %v1_1000a2fc, %dec_label_pc_1000a2fc ], [ %v1_1000a2d8, %dec_label_pc_1000a2d4 ], [ %v1_1000a2e8, %dec_label_pc_1000a2e4 ]
  %tmp22 = icmp slt i32 %v0_1000a304, 17
  br i1 %tmp22, label %dec_label_pc_1000a310, label %dec_label_pc_1000a30c

dec_label_pc_1000a30c:                            ; preds = %dec_label_pc_1000a304
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a310

dec_label_pc_1000a310:                            ; preds = %dec_label_pc_1000a2c8.dec_label_pc_1000a310_crit_edge, %dec_label_pc_1000a304, %dec_label_pc_1000a30c
  %v0_1000a3b814 = phi i32 [ %tmp, %dec_label_pc_1000a2c8.dec_label_pc_1000a310_crit_edge ], [ %v0_1000a3b815, %dec_label_pc_1000a304 ], [ %v0_1000a3b815, %dec_label_pc_1000a30c ]
  %v1_1000a324 = phi i32 [ %v0_1000a310.pre, %dec_label_pc_1000a2c8.dec_label_pc_1000a310_crit_edge ], [ %v0_1000a304, %dec_label_pc_1000a304 ], [ 16, %dec_label_pc_1000a30c ]
  %v1_1000a310 = add i32 %v1_1000a324, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000a318 = icmp ugt i32 %v1_1000a310, 34
  br i1 %v2_1000a318, label %dec_label_pc_1000a3b0, label %dec_label_pc_1000a320

dec_label_pc_1000a320:                            ; preds = %dec_label_pc_1000a310
  %v2_1000a324 = udiv i32 -1, %v1_1000a324
  store i32 %v2_1000a324, i32* @r29, align 4
  %v2_1000a328 = mul i32 %v2_1000a324, %v1_1000a324
  %v1_1000a32c = sub i32 -1, %v2_1000a328
  %v1_1000a330 = urem i32 %v1_1000a32c, 256
  store i32 %v1_1000a330, i32* @r27, align 4
  %v0_1000a33c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a33c

dec_label_pc_1000a338:                            ; preds = %dec_label_pc_1000a3a4, %dec_label_pc_1000a38c
  %v1_1000a340.pre = phi i32 [ %v1_1000a344, %dec_label_pc_1000a3a4 ], [ %v1_1000a340.pre.pre, %dec_label_pc_1000a38c ]
  %v0_1000a340.pre = phi i32 [ %v2_1000a3a8, %dec_label_pc_1000a3a4 ], [ %v0_1000a340.pre.pre, %dec_label_pc_1000a38c ]
  %v0_1000a338 = phi i32 [ %v1_1000a348, %dec_label_pc_1000a3a4 ], [ %v0_1000a338.pre, %dec_label_pc_1000a38c ]
  br label %dec_label_pc_1000a33c

dec_label_pc_1000a33c:                            ; preds = %dec_label_pc_1000a320, %dec_label_pc_1000a338
  %v0_1000a3b812 = phi i32 [ %v0_1000a3b814, %dec_label_pc_1000a320 ], [ %v0_1000a338, %dec_label_pc_1000a338 ]
  %v0_1000a348 = phi i32 [ %v0_1000a33c.pre, %dec_label_pc_1000a320 ], [ %v0_1000a338, %dec_label_pc_1000a338 ]
  %v1_1000a344 = phi i32 [ %v2_1000a324, %dec_label_pc_1000a320 ], [ %v1_1000a340.pre, %dec_label_pc_1000a338 ]
  %v0_1000a3a4 = phi i32 [ 0, %dec_label_pc_1000a320 ], [ %v0_1000a340.pre, %dec_label_pc_1000a338 ]
  %v1_1000a33c = inttoptr i32 %v0_1000a348 to i8*
  %v2_1000a33c = load i8, i8* %v1_1000a33c, align 1
  %v3_1000a33c = zext i8 %v2_1000a33c to i32
  %v3_1000a340 = icmp ugt i32 %v0_1000a3a4, %v1_1000a344
  %v1_1000a348 = add i32 %v0_1000a348, 1
  store i32 %v1_1000a348, i32* %r31.global-to-local, align 4
  %v1_1000a34c = add nsw i32 %v3_1000a33c, -48
  %v1_1000a350 = or i32 %v3_1000a33c, 32
  %v1_1000a354 = urem i32 %v1_1000a34c, 256
  %tmp23 = icmp ult i32 %v1_1000a354, 10
  br i1 %tmp23, label %dec_label_pc_1000a374, label %dec_label_pc_1000a364

dec_label_pc_1000a364:                            ; preds = %dec_label_pc_1000a33c
  %tmp24 = icmp ult i32 %v1_1000a350, 97
  br i1 %tmp24, label %dec_label_pc_1000a374, label %dec_label_pc_1000a370

dec_label_pc_1000a370:                            ; preds = %dec_label_pc_1000a364
  %v1_1000a364 = add nsw i32 %v1_1000a350, -87
  %v1_1000a370 = urem i32 %v1_1000a364, 256
  br label %dec_label_pc_1000a374

dec_label_pc_1000a374:                            ; preds = %dec_label_pc_1000a364, %dec_label_pc_1000a33c, %dec_label_pc_1000a370
  %v1_1000a3a8 = phi i32 [ 40, %dec_label_pc_1000a364 ], [ %v1_1000a354, %dec_label_pc_1000a33c ], [ %v1_1000a370, %dec_label_pc_1000a370 ]
  %v1_1000a374 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a374 = icmp slt i32 %v1_1000a3a8, %v1_1000a374
  br i1 %v2_1000a374, label %dec_label_pc_1000a37c, label %dec_label_pc_1000a3b0

dec_label_pc_1000a37c:                            ; preds = %dec_label_pc_1000a374
  br i1 %v3_1000a340, label %dec_label_pc_1000a38c, label %dec_label_pc_1000a380

dec_label_pc_1000a380:                            ; preds = %dec_label_pc_1000a37c
  %v1_1000a380 = load i32, i32* @r27, align 4
  %v0_1000a384.not = icmp ne i32 %v0_1000a3a4, %v1_1000a344
  %tmp25 = icmp ule i32 %v1_1000a3a8, %v1_1000a380
  %or.cond = or i1 %tmp25, %v0_1000a384.not
  br i1 %or.cond, label %dec_label_pc_1000a3a4, label %dec_label_pc_1000a38c

dec_label_pc_1000a38c:                            ; preds = %dec_label_pc_1000a380, %dec_label_pc_1000a37c
  %v0_1000a38c = call i32 @function_1000936c()
  %v0_1000a390 = load i32, i32* @r28, align 4
  %v1_1000a390 = load i32, i32* %r26.global-to-local, align 4
  %v2_1000a390 = and i32 %v1_1000a390, %v0_1000a390
  store i32 %v2_1000a390, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000a39c = inttoptr i32 %v0_1000a38c to i32*
  store i32 34, i32* %v2_1000a39c, align 4
  %v0_1000a338.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000a340.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a340.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a338

dec_label_pc_1000a3a4:                            ; preds = %dec_label_pc_1000a380
  %v2_1000a3a4 = mul i32 %v1_1000a374, %v0_1000a3a4
  %v2_1000a3a8 = add i32 %v2_1000a3a4, %v1_1000a3a8
  store i32 %v2_1000a3a8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a338

dec_label_pc_1000a3b0:                            ; preds = %dec_label_pc_1000a374, %dec_label_pc_1000a310
  %v0_1000a3b8 = phi i32 [ %v0_1000a3b814, %dec_label_pc_1000a310 ], [ %v0_1000a3b812, %dec_label_pc_1000a374 ]
  %v0_1000a3b0 = load i32, i32* @r25, align 4
  %v3_1000a3b0 = icmp eq i32 %v0_1000a3b0, 0
  br i1 %v3_1000a3b0, label %dec_label_pc_1000a3bc, label %dec_label_pc_1000a3b8

dec_label_pc_1000a3b8:                            ; preds = %dec_label_pc_1000a3b0
  %v2_1000a3b8 = inttoptr i32 %v0_1000a3b0 to i32*
  store i32 %v0_1000a3b8, i32* %v2_1000a3b8, align 4
  br label %dec_label_pc_1000a3bc

dec_label_pc_1000a3bc:                            ; preds = %dec_label_pc_1000a3b0, %dec_label_pc_1000a3b8
  %v0_1000a3bc = load i32, i32* %r26.global-to-local, align 4
  %v3_1000a3bc = icmp eq i32 %v0_1000a3bc, 0
  %v0_1000a3c0 = load i32, i32* @r28, align 4
  %v1_1000a3c0 = sub i32 0, %v0_1000a3c0
  %tmp40 = lshr i32 %v1_1000a3c0, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_1000a400.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000a3bc, label %dec_label_pc_1000a3f0, label %dec_label_pc_1000a3d8

dec_label_pc_1000a3d8:                            ; preds = %dec_label_pc_1000a3bc
  %v3_1000a3d8 = icmp ugt i32 %v0_1000a400.pre.pre, %tmp41
  br i1 %v3_1000a3d8, label %dec_label_pc_1000a3e0, label %dec_label_pc_1000a3f0

dec_label_pc_1000a3e0:                            ; preds = %dec_label_pc_1000a3d8
  %v0_1000a3e0 = call i32 @function_1000936c()
  %v2_1000a3e8 = inttoptr i32 %v0_1000a3e0 to i32*
  store i32 34, i32* %v2_1000a3e8, align 4
  %v0_1000a3ec = load i32, i32* @r31, align 4
  store i32 %v0_1000a3ec, i32* %r8.global-to-local, align 4
  %v0_1000a3f0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000a3f0

dec_label_pc_1000a3f0:                            ; preds = %dec_label_pc_1000a3bc, %dec_label_pc_1000a3d8, %dec_label_pc_1000a3e0
  %v0_1000a400.pre = phi i32 [ %v0_1000a400.pre.pre, %dec_label_pc_1000a3d8 ], [ %v0_1000a3ec, %dec_label_pc_1000a3e0 ], [ %v0_1000a400.pre.pre, %dec_label_pc_1000a3bc ]
  %v0_1000a3f0 = phi i32 [ %v0_1000a3c0, %dec_label_pc_1000a3d8 ], [ %v0_1000a3f0.pre, %dec_label_pc_1000a3e0 ], [ %v0_1000a3c0, %dec_label_pc_1000a3bc ]
  %v3_1000a3f0 = icmp eq i32 %v0_1000a3f0, 0
  br i1 %v3_1000a3f0, label %dec_label_pc_1000a3fc, label %dec_label_pc_1000a3f8

dec_label_pc_1000a3f8:                            ; preds = %dec_label_pc_1000a3f0
  %v1_1000a3f8 = sub i32 0, %v0_1000a400.pre
  store i32 %v1_1000a3f8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a3fc

dec_label_pc_1000a3fc:                            ; preds = %dec_label_pc_1000a3f0, %dec_label_pc_1000a3f8
  %v0_1000a400 = phi i32 [ %v1_1000a3f8, %dec_label_pc_1000a3f8 ], [ %v0_1000a400.pre, %dec_label_pc_1000a3f0 ]
  ret i32 %v0_1000a400

; uselistorder directives
  uselistorder i32 %v0_1000a400.pre, { 1, 0 }
  uselistorder i32 %v0_1000a400.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000a3a8, { 1, 0 }
  uselistorder i32 %v1_1000a354, { 1, 0 }
  uselistorder i32 %v1_1000a350, { 1, 0 }
  uselistorder i32 %v1_1000a348, { 1, 0 }
  uselistorder i32 %v3_1000a33c, { 1, 0 }
  uselistorder i32 %v0_1000a3a4, { 1, 0, 2 }
  uselistorder i32 %v1_1000a344, { 0, 2, 1 }
  uselistorder i32 %v0_1000a338, { 1, 0 }
  uselistorder i32 %v2_1000a324, { 1, 0, 2 }
  uselistorder i32 %v1_1000a2fc, { 1, 0 }
  uselistorder i32 %v1_1000a2e8, { 1, 0, 2 }
  uselistorder i8 %v2_1000a290.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000a28c, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000a284, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32 26, { 6, 0, 4, 5, 1, 2, 3 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a3fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a3bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a374, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a33c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a310, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a304, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a2c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a28c, { 1, 0 }
}

define i32 @function_1000a414() local_unnamed_addr {
dec_label_pc_1000a414:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000a42c = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000a438 = load i32, i32* @r3, align 4
  store i32 %v0_1000a438, i32* @r31, align 4
  store i32 %v2_1000a42c, i32* @r3, align 4
  %v3_1000a444 = call i32 @function_1000a708(i32 %v2_1000a42c, i32 ptrtoint ([3 x i8]* @global_var_1000a700.294 to i32))
  %v0_1000a44c = call i32 @function_1000a700()
  %v3_1000a454 = load i32, i32* @global_var_1001bda0.317, align 4
  %v3_1000a458 = icmp eq i32 %v3_1000a454, 0
  br i1 %v3_1000a458, label %dec_label_pc_1000a46c, label %dec_label_pc_1000a460

dec_label_pc_1000a460:                            ; preds = %dec_label_pc_1000a414
  %v0_1000a460 = load i32, i32* @r31, align 4
  %v3_1000a468 = call i32 @unknown_0(i32 %v0_1000a460, i32 268566528)
  br label %dec_label_pc_1000a46c

dec_label_pc_1000a46c:                            ; preds = %dec_label_pc_1000a414, %dec_label_pc_1000a460
  store i32 %v2_1000a42c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000a474 = call i32 @function_1000a708(i32 %v2_1000a42c, i32 1)
  store i32 %v2_1000a474, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a47c.319 to i32), i32* @lr, align 4
  %v1_1000a478 = call i32 @function_1000a66c(i32 %v2_1000a474)
  %v0_1000a490 = load i32, i32* @r31, align 4
  %v1_1000a494 = call i32 @function_1000aaa0(i32 %v0_1000a490)
  ret i32 %v1_1000a494

; uselistorder directives
  uselistorder i32 %v2_1000a42c, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000a708, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000a46c, { 1, 0 }
}

define i32 @function_1000a498(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a498:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000a498 = icmp eq i32 %arg1, 0
  br i1 %v3_1000a498, label %dec_label_pc_1000a64c, label %dec_label_pc_1000a4c8.lr.ph

dec_label_pc_1000a4c8.lr.ph:                      ; preds = %dec_label_pc_1000a498
  %v2_1000a4bc = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000a4bc, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000a4c842 = add i32 %v2_1000a4bc, 132
  %v3_1000a4c843 = inttoptr i32 %v2_1000a4c842 to i32*
  store i32 0, i32* %v3_1000a4c843, align 4
  %v0_1000a4cc44 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a4cc45 = add i32 %v0_1000a4cc44, -1
  store i32 %v1_1000a4cc45, i32* %r11.global-to-local, align 4
  %v1_1000a4d046 = mul i32 %v1_1000a4cc45, 4
  %v1_1000a4d447 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a4d448 = add i32 %v1_1000a4d447, %v1_1000a4d046
  %v0_1000a4d849 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a4d850 = add i32 %v0_1000a4d849, -1
  store i32 %v1_1000a4d850, i32* %ctr.global-to-local, align 4
  %v2_1000a4d851 = icmp eq i32 %v1_1000a4d850, 0
  br i1 %v2_1000a4d851, label %dec_label_pc_1000a4dc, label %dec_label_pc_1000a4c8.dec_label_pc_1000a4c8_crit_edge

dec_label_pc_1000a4c8.dec_label_pc_1000a4c8_crit_edge: ; preds = %dec_label_pc_1000a4c8.lr.ph, %dec_label_pc_1000a4c8.dec_label_pc_1000a4c8_crit_edge
  %v2_1000a4d452 = phi i32 [ %v2_1000a4d4, %dec_label_pc_1000a4c8.dec_label_pc_1000a4c8_crit_edge ], [ %v2_1000a4d448, %dec_label_pc_1000a4c8.lr.ph ]
  %v0_1000a4c8.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a4c8 = add i32 %v2_1000a4d452, 8
  %v3_1000a4c8 = inttoptr i32 %v2_1000a4c8 to i32*
  store i32 %v0_1000a4c8.pre, i32* %v3_1000a4c8, align 4
  %v0_1000a4cc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a4cc = add i32 %v0_1000a4cc, -1
  store i32 %v1_1000a4cc, i32* %r11.global-to-local, align 4
  %v1_1000a4d0 = mul i32 %v1_1000a4cc, 4
  %v1_1000a4d4 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a4d4 = add i32 %v1_1000a4d4, %v1_1000a4d0
  %v0_1000a4d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a4d8 = add i32 %v0_1000a4d8, -1
  store i32 %v1_1000a4d8, i32* %ctr.global-to-local, align 4
  %v2_1000a4d8 = icmp eq i32 %v1_1000a4d8, 0
  br i1 %v2_1000a4d8, label %dec_label_pc_1000a4dc, label %dec_label_pc_1000a4c8.dec_label_pc_1000a4c8_crit_edge

dec_label_pc_1000a4dc:                            ; preds = %dec_label_pc_1000a4c8.dec_label_pc_1000a4c8_crit_edge, %dec_label_pc_1000a4c8.lr.ph
  %v0_1000a4f0.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a4dc = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000a4dc, i32* @r29, align 4
  store i32 %v2_1000a4dc, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000a4f0.pre, i32* %stack_var_-440, align 4
  %v0_1000a4f4 = call i32 @function_10009b54()
  store i32 %v0_1000a4f4, i32* %r3.global-to-local, align 4
  %v1_1000a4f8 = icmp slt i32 %v0_1000a4f4, 0
  br i1 %v1_1000a4f8, label %dec_label_pc_1000a654, label %dec_label_pc_1000a500

dec_label_pc_1000a500:                            ; preds = %dec_label_pc_1000a4dc
  %v2_1000a500 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000a500, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268477716, i32* @lr, align 4
  %v3_1000a510 = call i32 @function_10008ff0(i32 0, i32 %v2_1000a4dc, i32 %v2_1000a500)
  store i32 %v3_1000a510, i32* %r3.global-to-local, align 4
  %v3_1000a514 = icmp eq i32 %v3_1000a510, 0
  br i1 %v3_1000a514, label %dec_label_pc_1000a51c, label %dec_label_pc_1000a654

dec_label_pc_1000a51c:                            ; preds = %dec_label_pc_1000a500
  store i32 %v2_1000a500, i32* %r3.global-to-local, align 4
  %v2_1000a524 = call i32 @function_10009b2c(i32 %v2_1000a500, i32 17)
  store i32 %v2_1000a524, i32* %r3.global-to-local, align 4
  %v3_1000a528 = icmp eq i32 %v2_1000a524, 0
  br i1 %v3_1000a528, label %dec_label_pc_1000a548.lr.ph, label %dec_label_pc_1000a614

dec_label_pc_1000a548.lr.ph:                      ; preds = %dec_label_pc_1000a51c
  store i32 %v2_1000a4bc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000a4c843, align 4
  %v0_1000a54c33 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a54c34 = add i32 %v0_1000a54c33, -1
  store i32 %v1_1000a54c34, i32* %r11.global-to-local, align 4
  %v1_1000a55035 = mul i32 %v1_1000a54c34, 4
  %v1_1000a55436 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a55437 = add i32 %v1_1000a55436, %v1_1000a55035
  %v0_1000a55838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a55839 = add i32 %v0_1000a55838, -1
  store i32 %v1_1000a55839, i32* %ctr.global-to-local, align 4
  %v2_1000a55840 = icmp eq i32 %v1_1000a55839, 0
  br i1 %v2_1000a55840, label %dec_label_pc_1000a55c, label %dec_label_pc_1000a548.dec_label_pc_1000a548_crit_edge

dec_label_pc_1000a548.dec_label_pc_1000a548_crit_edge: ; preds = %dec_label_pc_1000a548.lr.ph, %dec_label_pc_1000a548.dec_label_pc_1000a548_crit_edge
  %v2_1000a55441 = phi i32 [ %v2_1000a554, %dec_label_pc_1000a548.dec_label_pc_1000a548_crit_edge ], [ %v2_1000a55437, %dec_label_pc_1000a548.lr.ph ]
  %v0_1000a548.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a548 = add i32 %v2_1000a55441, 8
  %v3_1000a548 = inttoptr i32 %v2_1000a548 to i32*
  store i32 %v0_1000a548.pre, i32* %v3_1000a548, align 4
  %v0_1000a54c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a54c = add i32 %v0_1000a54c, -1
  store i32 %v1_1000a54c, i32* %r11.global-to-local, align 4
  %v1_1000a550 = mul i32 %v1_1000a54c, 4
  %v1_1000a554 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a554 = add i32 %v1_1000a554, %v1_1000a550
  %v0_1000a558 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a558 = add i32 %v0_1000a558, -1
  store i32 %v1_1000a558, i32* %ctr.global-to-local, align 4
  %v2_1000a558 = icmp eq i32 %v1_1000a558, 0
  br i1 %v2_1000a558, label %dec_label_pc_1000a55c, label %dec_label_pc_1000a548.dec_label_pc_1000a548_crit_edge

dec_label_pc_1000a55c:                            ; preds = %dec_label_pc_1000a548.dec_label_pc_1000a548_crit_edge, %dec_label_pc_1000a548.lr.ph
  store i32 %v2_1000a4dc, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000a564 = call i32 @function_10009b54()
  store i32 %v0_1000a564, i32* %r3.global-to-local, align 4
  %v1_1000a568 = icmp slt i32 %v0_1000a564, 0
  br i1 %v1_1000a568, label %dec_label_pc_1000a654, label %dec_label_pc_1000a570

dec_label_pc_1000a570:                            ; preds = %dec_label_pc_1000a55c
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000a578 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268477824, i32* @lr, align 4
  %v4_1000a57c = call i32 @function_1000b2e4(i32 17, i32* null, i32 %v2_1000a578)
  store i32 %v4_1000a57c, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000a57c, -1
  br i1 %tmp30, label %dec_label_pc_1000a5b0, label %dec_label_pc_1000a588

dec_label_pc_1000a588:                            ; preds = %dec_label_pc_1000a570
  %v0_1000a588 = call i32 @function_1000936c()
  store i32 %v0_1000a588, i32* %r3.global-to-local, align 4
  %v1_1000a590 = inttoptr i32 %v0_1000a588 to i32*
  %v2_1000a590 = load i32, i32* %v1_1000a590, align 4
  store i32 %v2_1000a590, i32* @r28, align 4
  store i32 %v0_1000a588, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268477860, i32* @lr, align 4
  %v3_1000a5a0 = call i32 @function_10008ff0(i32 2, i32 %v2_1000a500, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000a5a8 = load i32, i32* @r28, align 4
  %v1_1000a5a8 = load i32, i32* @r29, align 4
  %v2_1000a5a8 = inttoptr i32 %v1_1000a5a8 to i32*
  store i32 %v0_1000a5a8, i32* %v2_1000a5a8, align 4
  %v0_1000a668.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a658

dec_label_pc_1000a5b0:                            ; preds = %dec_label_pc_1000a570
  %v3_1000a5b0 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000a500, i32* @r28, align 4
  %v3_1000a5bc = icmp eq i32 %v3_1000a5b0, 1
  br i1 %v3_1000a5bc, label %dec_label_pc_1000a5c4, label %dec_label_pc_1000a5f8

dec_label_pc_1000a5c4:                            ; preds = %dec_label_pc_1000a5b0
  store i32 %v2_1000a4bc, i32* %r3.global-to-local, align 4
  store i32 268477904, i32* @lr, align 4
  %v2_1000a5cc = call i32 @function_1000aed8(i32 %v2_1000a4bc, i32 %v2_1000a4bc)
  store i32 %v2_1000a5cc, i32* %r3.global-to-local, align 4
  store i32 %v2_1000a5cc, i32* @r31, align 4
  %v0_1000a5d4 = call i32 @function_1000936c()
  store i32 %v0_1000a5d4, i32* %r3.global-to-local, align 4
  store i32 %v0_1000a5d4, i32* @r29, align 4
  %v1_1000a5e4 = inttoptr i32 %v0_1000a5d4 to i32*
  %v2_1000a5e4 = load i32, i32* %v1_1000a5e4, align 4
  store i32 %v2_1000a5e4, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268477936, i32* @lr, align 4
  %v3_1000a5ec = call i32 @function_10008ff0(i32 2, i32 %v2_1000a500, i32 0)
  store i32 %v3_1000a5ec, i32* %r3.global-to-local, align 4
  %v0_1000a5f0 = load i32, i32* @r28, align 4
  %v1_1000a5f0 = load i32, i32* @r29, align 4
  %v2_1000a5f0 = inttoptr i32 %v1_1000a5f0 to i32*
  store i32 %v0_1000a5f0, i32* %v2_1000a5f0, align 4
  %v0_1000a620.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a620

dec_label_pc_1000a5f8:                            ; preds = %dec_label_pc_1000a5b0
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268477960, i32* @lr, align 4
  %v3_1000a604 = call i32 @function_10008ff0(i32 2, i32 %v2_1000a500, i32 0)
  br label %dec_label_pc_1000a614

dec_label_pc_1000a614:                            ; preds = %dec_label_pc_1000a51c, %dec_label_pc_1000a5f8
  store i32 %v2_1000a4bc, i32* %r3.global-to-local, align 4
  store i32 268477980, i32* @lr, align 4
  %v2_1000a618 = call i32 @function_1000aed8(i32 %v2_1000a4bc, i32 %v2_1000a4bc)
  store i32 %v2_1000a618, i32* %r3.global-to-local, align 4
  store i32 %v2_1000a618, i32* @r31, align 4
  br label %dec_label_pc_1000a620

dec_label_pc_1000a620:                            ; preds = %dec_label_pc_1000a5c4, %dec_label_pc_1000a614
  %v0_1000a620 = phi i32 [ %v0_1000a620.pr, %dec_label_pc_1000a5c4 ], [ %v2_1000a618, %dec_label_pc_1000a614 ]
  %v3_1000a620 = icmp eq i32 %v0_1000a620, 0
  br i1 %v3_1000a620, label %dec_label_pc_1000a64c, label %dec_label_pc_1000a628

dec_label_pc_1000a628:                            ; preds = %dec_label_pc_1000a620
  %v3_1000a638 = load i32, i32* %stack_var_-440, align 4
  %v0_1000a63c = call i32 @__asm_mfcr()
  store i32 %v0_1000a63c, i32* %r3.global-to-local, align 4
  %v1_1000a640 = call i32 @__asm_rlwinm(i32 %v0_1000a63c, i32 30, i32 31, i32 31)
  %v2_1000a644 = add i32 %v3_1000a638, %v1_1000a640
  store i32 %v2_1000a644, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a658

dec_label_pc_1000a64c:                            ; preds = %dec_label_pc_1000a620, %dec_label_pc_1000a498
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a658

dec_label_pc_1000a654:                            ; preds = %dec_label_pc_1000a500, %dec_label_pc_1000a55c, %dec_label_pc_1000a4dc
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a658

dec_label_pc_1000a658:                            ; preds = %dec_label_pc_1000a64c, %dec_label_pc_1000a628, %dec_label_pc_1000a588, %dec_label_pc_1000a654
  %v0_1000a668 = phi i32 [ 0, %dec_label_pc_1000a64c ], [ %v2_1000a644, %dec_label_pc_1000a628 ], [ %v0_1000a668.pre, %dec_label_pc_1000a588 ], [ -1, %dec_label_pc_1000a654 ]
  ret i32 %v0_1000a668

; uselistorder directives
  uselistorder i32 %v1_1000a558, { 1, 0 }
  uselistorder i32 %v2_1000a500, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000a4d8, { 1, 0 }
  uselistorder i32 %v2_1000a4bc, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 5, 7, 6, 0, 8, 2, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 3, 19, 20, 21, 22, 4, 23, 24, 1 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 2, 4, 5, 9, 8, 3, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 2, 3, 9, 8, 5, 0, 1 }
  uselistorder i32 (i32, i32)* @function_1000aed8, { 1, 0 }
  uselistorder i32 17, { 2, 35, 36, 3, 37, 4, 18, 19, 5, 6, 20, 21, 22, 23, 24, 7, 8, 9, 10, 11, 12, 13, 25, 14, 26, 27, 28, 15, 16, 17, 29, 0, 30, 1, 31, 32, 33, 34 }
  uselistorder label %dec_label_pc_1000a658, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a654, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a620, { 1, 0 }
  uselistorder label %dec_label_pc_1000a614, { 1, 0 }
  uselistorder label %dec_label_pc_1000a548.dec_label_pc_1000a548_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4c8.dec_label_pc_1000a4c8_crit_edge, { 1, 0 }
}

define i32 @function_1000a66c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a6bc:
  %v3_1000a6c0 = load i32, i32* @global_var_1001bdb0.321, align 4
  %v3_1000a6c4 = icmp eq i32 %v3_1000a6c0, 0
  br i1 %v3_1000a6c4, label %dec_label_pc_1000a6d4, label %dec_label_pc_1000a6cc

dec_label_pc_1000a6cc:                            ; preds = %dec_label_pc_1000a6bc
  %v2_1000a6d0 = load i32, i32* @r4, align 4
  %v3_1000a6d0 = call i32 @unknown_0(i32 268566528, i32 %v2_1000a6d0)
  store i32 %v3_1000a6d0, i32* @r3, align 4
  br label %dec_label_pc_1000a6d4

dec_label_pc_1000a6d4:                            ; preds = %dec_label_pc_1000a6bc, %dec_label_pc_1000a6cc
  %v3_1000a6d8 = load i32, i32* @global_var_1001bdb4.322, align 4
  %v3_1000a6dc = icmp eq i32 %v3_1000a6d8, 0
  br i1 %v3_1000a6dc, label %dec_label_pc_1000a6d4.dec_label_pc_1000a6ec_crit_edge, label %dec_label_pc_1000a6e4

dec_label_pc_1000a6d4.dec_label_pc_1000a6ec_crit_edge: ; preds = %dec_label_pc_1000a6d4
  %v0_1000a6fc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000a6ec

dec_label_pc_1000a6e4:                            ; preds = %dec_label_pc_1000a6d4
  %v2_1000a6e8 = load i32, i32* @r4, align 4
  %v3_1000a6e8 = call i32 @unknown_0(i32 268566528, i32 %v2_1000a6e8)
  br label %dec_label_pc_1000a6ec

dec_label_pc_1000a6ec:                            ; preds = %dec_label_pc_1000a6d4.dec_label_pc_1000a6ec_crit_edge, %dec_label_pc_1000a6e4
  %v0_1000a6fc = phi i32 [ %v0_1000a6fc.pre, %dec_label_pc_1000a6d4.dec_label_pc_1000a6ec_crit_edge ], [ %v3_1000a6e8, %dec_label_pc_1000a6e4 ]
  ret i32 %v0_1000a6fc

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a6ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6d4, { 1, 0 }
}

define i32 @function_1000a700() local_unnamed_addr {
dec_label_pc_1000a700:
  ret i32 0
}

define i32 @function_1000a708(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a708:
  %v0_1000a708 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a708
}

define i32 @function_1000a70c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a70c:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268478256, i32* @lr, align 4
  %v1_1000a72c = call i32 @function_10008bb0(i32 1)
  %v3_1000a730 = icmp eq i32 %v1_1000a72c, -1
  br i1 %v3_1000a730, label %dec_label_pc_1000a738, label %dec_label_pc_1000a758

dec_label_pc_1000a738:                            ; preds = %dec_label_pc_1000a70c
  %v0_1000a73c = load i32, i32* @r30, align 4
  store i32 268478284, i32* @lr, align 4
  %v3_1000a748 = call i32 @function_10008e00(i32 ptrtoint ([10 x i8]* @global_var_1000b8d4.323 to i32), i32 %v0_1000a73c)
  %v1_1000a74c = load i32, i32* @r31, align 4
  %v4_1000a74c = icmp eq i32 %v3_1000a748, %v1_1000a74c
  br i1 %v4_1000a74c, label %dec_label_pc_1000a758, label %dec_label_pc_1000a754

dec_label_pc_1000a754:                            ; preds = %dec_label_pc_1000a738
  %v1_1000a754 = call i32 @function_1000b3a8(i32 %v3_1000a748)
  br label %dec_label_pc_1000a758

dec_label_pc_1000a758:                            ; preds = %dec_label_pc_1000a70c, %dec_label_pc_1000a738, %dec_label_pc_1000a754
  %v0_1000a768 = phi i32 [ %v1_1000a72c, %dec_label_pc_1000a70c ], [ %v3_1000a748, %dec_label_pc_1000a738 ], [ %v1_1000a754, %dec_label_pc_1000a754 ]
  ret i32 %v0_1000a768

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10008e00, { 0, 3, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32)* @function_10008bb0, { 0, 7, 13, 12, 15, 14, 11, 10, 2, 1, 9, 8, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_1000a758, { 2, 1, 0 }
}

define i32 @function_1000a76c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a76c:
  %v3_1000a78c = load i32, i32* @global_var_1001bdb8.324, align 4
  %v3_1000a790 = icmp eq i32 %v3_1000a78c, 0
  br i1 %v3_1000a790, label %dec_label_pc_1000a7b4, label %dec_label_pc_1000a7d8

dec_label_pc_1000a7b4:                            ; preds = %dec_label_pc_1000a76c
  store i32 1, i32* @global_var_1001bdb8.324, align 4
  store i32 4096, i32* @global_var_1001bdac.306, align 4
  br label %dec_label_pc_1000a7d8

dec_label_pc_1000a7d8:                            ; preds = %dec_label_pc_1000a7b4, %dec_label_pc_1000a76c
  %v0_1000a7e8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a7e8
}

define i32 @function_1000a7ec(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a7ec:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000a804 = mul i32 %arg2, 4
  %v2_1000a808 = add i32 %tmp, %v1_1000a804
  %v0_1000a80c = load i32, i32* @r9, align 4
  store i32 %v0_1000a80c, i32* @global_var_1001bda4.326, align 4
  %v1_1000a810 = add i32 %v2_1000a808, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000a810, i32* @global_var_1001bda8.327, align 4
  store i32 %arg6, i32* @global_var_1001bdb4.322, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000a830 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000a838 = icmp eq i32 %v1_1000a810, %v2_1000a830
  br i1 %v4_1000a838, label %dec_label_pc_1000a840, label %dec_label_pc_1000a844

dec_label_pc_1000a840:                            ; preds = %dec_label_pc_1000a7ec
  store i32 %v2_1000a808, i32* @global_var_1001bda8.327, align 4
  br label %dec_label_pc_1000a844

dec_label_pc_1000a844:                            ; preds = %dec_label_pc_1000a7ec, %dec_label_pc_1000a840
  %v2_1000a844 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268478548, i32* @lr, align 4
  %v3_1000a850 = call i32 @function_10009454(i32 %v2_1000a844, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001bda8.327, align 4
  br label %dec_label_pc_1000a860

dec_label_pc_1000a860:                            ; preds = %dec_label_pc_1000a860, %dec_label_pc_1000a844
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000a844 ], [ %v1_1000a864, %dec_label_pc_1000a860 ]
  %v1_1000a860 = inttoptr i32 %storemerge to i32*
  %v2_1000a860 = load i32, i32* %v1_1000a860, align 4
  %v1_1000a864 = add i32 %storemerge, 4
  %v3_1000a868 = icmp eq i32 %v2_1000a860, 0
  br i1 %v3_1000a868, label %dec_label_pc_1000a870, label %dec_label_pc_1000a860

dec_label_pc_1000a870:                            ; preds = %dec_label_pc_1000a860
  store i32 %v1_1000a864, i32* %r29.global-to-local, align 4
  %v1_1000a89c12 = inttoptr i32 %v1_1000a864 to i32*
  %v2_1000a89c13 = load i32, i32* %v1_1000a89c12, align 4
  %v3_1000a8a016 = icmp eq i32 %v2_1000a89c13, 0
  br i1 %v3_1000a8a016, label %dec_label_pc_1000a8a8, label %dec_label_pc_1000a878

dec_label_pc_1000a878:                            ; preds = %dec_label_pc_1000a870, %dec_label_pc_1000a898
  %v0_1000a88c = phi i32 [ %v1_1000a898, %dec_label_pc_1000a898 ], [ %v1_1000a864, %dec_label_pc_1000a870 ]
  %v0_1000a880 = phi i32 [ %v2_1000a89c, %dec_label_pc_1000a898 ], [ %v2_1000a89c13, %dec_label_pc_1000a870 ]
  %v2_1000a878 = icmp ugt i32 %v0_1000a880, 14
  br i1 %v2_1000a878, label %dec_label_pc_1000a898, label %dec_label_pc_1000a880

dec_label_pc_1000a880:                            ; preds = %dec_label_pc_1000a878
  %v1_1000a880 = mul i32 %v0_1000a880, 8
  %v2_1000a888 = add i32 %v1_1000a880, %v2_1000a844
  store i32 %v2_1000a888, i32* @r3, align 4
  store i32 %v0_1000a88c, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268478616, i32* @lr, align 4
  %v0_1000a894 = call i32 @function_1000b154()
  %v0_1000a898.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a898

dec_label_pc_1000a898:                            ; preds = %dec_label_pc_1000a878, %dec_label_pc_1000a880
  %v0_1000a898 = phi i32 [ %v0_1000a88c, %dec_label_pc_1000a878 ], [ %v0_1000a898.pre, %dec_label_pc_1000a880 ]
  %v1_1000a898 = add i32 %v0_1000a898, 8
  store i32 %v1_1000a898, i32* %r29.global-to-local, align 4
  %v1_1000a89c = inttoptr i32 %v1_1000a898 to i32*
  %v2_1000a89c = load i32, i32* %v1_1000a89c, align 4
  %v3_1000a8a0 = icmp eq i32 %v2_1000a89c, 0
  br i1 %v3_1000a8a0, label %dec_label_pc_1000a8a8, label %dec_label_pc_1000a878

dec_label_pc_1000a8a8:                            ; preds = %dec_label_pc_1000a898, %dec_label_pc_1000a870
  %v1_1000a8ac = call i32 @function_1000b4f8(i32 %v2_1000a844)
  store i32 %v1_1000a8ac, i32* @r3, align 4
  store i32 268478644, i32* @lr, align 4
  %v1_1000a8b0 = call i32 @function_1000a76c(i32 %v1_1000a8ac)
  %v3_1000a8b8 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000a8b8, label %dec_label_pc_1000a8c0, label %dec_label_pc_1000a8c4

dec_label_pc_1000a8c0:                            ; preds = %dec_label_pc_1000a8a8
  br label %dec_label_pc_1000a8c4

dec_label_pc_1000a8c4:                            ; preds = %dec_label_pc_1000a8a8, %dec_label_pc_1000a8c0
  %v0_1000a8cc = phi i32 [ %tmp27, %dec_label_pc_1000a8a8 ], [ 4096, %dec_label_pc_1000a8c0 ]
  store i32 %v0_1000a8cc, i32* @global_var_1001bdac.306, align 4
  %v3_1000a8d0 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000a8d0, label %dec_label_pc_1000a8d8, label %dec_label_pc_1000a90c

dec_label_pc_1000a8d8:                            ; preds = %dec_label_pc_1000a8c4
  store i32 268478684, i32* @lr, align 4
  %v1_1000a8d8 = call i32 @function_1000ae10(i32 268566528)
  store i32 %v1_1000a8d8, i32* %r29.global-to-local, align 4
  store i32 268478692, i32* @lr, align 4
  %v0_1000a8e0 = call i32 @function_1000ad80()
  %v4_1000a8e4 = icmp eq i32 %v1_1000a8d8, %v0_1000a8e0
  br i1 %v4_1000a8e4, label %dec_label_pc_1000a8ec, label %dec_label_pc_1000a928

dec_label_pc_1000a8ec:                            ; preds = %dec_label_pc_1000a8d8
  store i32 268478704, i32* @lr, align 4
  %v1_1000a8ec = call i32 @function_1000adc8(i32 %v0_1000a8e0)
  store i32 %v1_1000a8ec, i32* %r29.global-to-local, align 4
  store i32 268478712, i32* @lr, align 4
  %v0_1000a8f4 = call i32 @function_1000ad38()
  %v4_1000a8f8 = icmp eq i32 %v1_1000a8ec, %v0_1000a8f4
  br i1 %v4_1000a8f8, label %dec_label_pc_1000a900.thread, label %dec_label_pc_1000a928

dec_label_pc_1000a900.thread:                     ; preds = %dec_label_pc_1000a8ec
  br label %dec_label_pc_1000a958

dec_label_pc_1000a90c:                            ; preds = %dec_label_pc_1000a8c4
  %v4_1000a910 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000a910, label %dec_label_pc_1000a918, label %dec_label_pc_1000a928

dec_label_pc_1000a918:                            ; preds = %dec_label_pc_1000a90c
  br label %dec_label_pc_1000a928

dec_label_pc_1000a928:                            ; preds = %dec_label_pc_1000a918, %dec_label_pc_1000a90c, %dec_label_pc_1000a8ec, %dec_label_pc_1000a8d8
  store i32 268478776, i32* @lr, align 4
  %v2_1000a934 = call i32 @function_1000a70c(i32 0, i32 32768)
  store i32 268478792, i32* @lr, align 4
  %v2_1000a944 = call i32 @function_1000a70c(i32 1, i32 32770)
  store i32 268478808, i32* @lr, align 4
  %v2_1000a954 = call i32 @function_1000a70c(i32 2, i32 32770)
  br label %dec_label_pc_1000a958

dec_label_pc_1000a958:                            ; preds = %dec_label_pc_1000a900.thread, %dec_label_pc_1000a928
  %v0_1000a964 = load i32, i32* @r30, align 4
  %v1_1000a964 = inttoptr i32 %v0_1000a964 to i32*
  %v2_1000a964 = load i32, i32* %v1_1000a964, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000a964, i32* inttoptr (i32 268549460 to i32*), align 4
  %v0_1000a984 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000a984, i32* @global_var_1001bdb0.321, align 4
  br i1 false, label %dec_label_pc_1000a98c, label %dec_label_pc_1000aa04

dec_label_pc_1000a98c:                            ; preds = %dec_label_pc_1000a958, %dec_label_pc_1000a98c
  br i1 undef, label %dec_label_pc_1000a98c, label %dec_label_pc_1000aa04

dec_label_pc_1000aa04:                            ; preds = %dec_label_pc_1000a98c, %dec_label_pc_1000a958
  %v0_1000a9b0 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000a9b0)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000aa14 = call i32 @function_1000936c()
  %v2_1000aa1c = inttoptr i32 %v0_1000aa14 to i32*
  store i32 0, i32* %v2_1000aa1c, align 4
  %v0_1000aa48 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000aa48)
  %v0_1000aa54 = call i32 @function_1000a414()
  ret i32 %v0_1000aa54

; uselistorder directives
  uselistorder i32 %v2_1000a89c, { 1, 0 }
  uselistorder i32 %v1_1000a898, { 2, 1, 0 }
  uselistorder i32 %v1_1000a864, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000a844, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_1000a414, { 0, 4, 2, 3, 1 }
  uselistorder i1 false, { 0, 5, 6, 7, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 (i32, i32)* @function_1000a70c, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 29, 0, 5, 6, 10, 7, 8, 11, 12, 9, 13, 14, 15, 1, 16, 17, 18, 2, 19, 20, 21, 22, 23, 3, 24, 25, 26, 27, 28, 4 }
  uselistorder i32* @r9, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder label %dec_label_pc_1000a98c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a958, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a898, { 1, 0 }
  uselistorder label %dec_label_pc_1000a878, { 1, 0 }
  uselistorder label %dec_label_pc_1000a844, { 1, 0 }
}

define i32 @function_1000aa58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000aa58:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aa70 = call i32 @__asm_mfcr()
  %v1_1000aa74 = and i32 %v0_1000aa70, 268435456
  %v3_1000aa74 = icmp eq i32 %v1_1000aa74, 0
  store i32 %v0_1000aa70, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aa74, label %dec_label_pc_1000aa8c, label %dec_label_pc_1000aa80

dec_label_pc_1000aa80:                            ; preds = %dec_label_pc_1000aa58
  %v0_1000aa80 = call i32 @function_1000936c()
  %v0_1000aa84 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aa84 = inttoptr i32 %v0_1000aa80 to i32*
  store i32 %v0_1000aa84, i32* %v2_1000aa84, align 4
  br label %dec_label_pc_1000aa8c

dec_label_pc_1000aa8c:                            ; preds = %dec_label_pc_1000aa58, %dec_label_pc_1000aa80
  %v0_1000aa9c = phi i32 [ %v0_1000aa70, %dec_label_pc_1000aa58 ], [ -1, %dec_label_pc_1000aa80 ]
  ret i32 %v0_1000aa9c

; uselistorder directives
  uselistorder label %dec_label_pc_1000aa8c, { 1, 0 }
}

define i32 @function_1000aaa0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000aaa0:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000aab4

dec_label_pc_1000aab4:                            ; preds = %dec_label_pc_1000aab4.backedge, %dec_label_pc_1000aaa0
  %v0_1000aac0 = call i32 @__asm_mfcr()
  %v1_1000aac4 = and i32 %v0_1000aac0, 268435456
  %v3_1000aac4 = icmp eq i32 %v1_1000aac4, 0
  store i32 %v0_1000aac0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aac4, label %dec_label_pc_1000aab4.backedge, label %dec_label_pc_1000aad0

dec_label_pc_1000aad0:                            ; preds = %dec_label_pc_1000aab4
  %v0_1000aad0 = call i32 @function_1000936c()
  %v0_1000aad4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aad4 = inttoptr i32 %v0_1000aad0 to i32*
  store i32 %v0_1000aad4, i32* %v2_1000aad4, align 4
  br label %dec_label_pc_1000aab4.backedge

dec_label_pc_1000aab4.backedge:                   ; preds = %dec_label_pc_1000aad0, %dec_label_pc_1000aab4
  br label %dec_label_pc_1000aab4
}

define i32 @function_1000aadc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000aadc:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000aae8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000aae8, i32* @r29, align 4
  %v0_1000aaf0 = load i32, i32* @r4, align 4
  store i32 %v0_1000aaf0, i32* @r30, align 4
  %v0_1000ab00 = call i32 @__asm_mfcr()
  %v1_1000ab04 = and i32 %v0_1000ab00, 268435456
  %v3_1000ab04 = icmp eq i32 %v1_1000ab04, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000ab00, i32* @r31, align 4
  br i1 %v3_1000ab04, label %dec_label_pc_1000ab20, label %dec_label_pc_1000ab14

dec_label_pc_1000ab14:                            ; preds = %dec_label_pc_1000aadc
  %v0_1000ab14 = call i32 @function_1000936c()
  %v0_1000ab18 = load i32, i32* @r31, align 4
  %v2_1000ab18 = inttoptr i32 %v0_1000ab14 to i32*
  store i32 %v0_1000ab18, i32* %v2_1000ab18, align 4
  br label %dec_label_pc_1000ab38

dec_label_pc_1000ab20:                            ; preds = %dec_label_pc_1000aadc
  %v3_1000ab20 = icmp eq i32 %v0_1000ab00, 0
  store i32 %v0_1000ab00, i32* @r28, align 4
  br i1 %v3_1000ab20, label %dec_label_pc_1000ab34, label %dec_label_pc_1000ab38

dec_label_pc_1000ab34:                            ; preds = %dec_label_pc_1000ab20
  %v0_1000ab28 = load i32, i32* @r30, align 4
  store i32 268479288, i32* @lr, align 4
  %v4_1000ab34 = call i32 @function_1000b0a4(i32* nonnull %stack_var_-104, i32 %v0_1000ab28, i32 0)
  br label %dec_label_pc_1000ab38

dec_label_pc_1000ab38:                            ; preds = %dec_label_pc_1000ab20, %dec_label_pc_1000ab14, %dec_label_pc_1000ab34
  %v0_1000ab3c = load i32, i32* @r28, align 4
  ret i32 %v0_1000ab3c

; uselistorder directives
  uselistorder i32 %v0_1000ab00, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000ab38, { 2, 0, 1 }
}

define i32 @function_1000ab50(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000ab50:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000ab64 = call i32 @function_1000abe0()
  store i32 %v0_1000ab64, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000ab64, 1
  br i1 %tmp18, label %dec_label_pc_1000abc8, label %dec_label_pc_1000ab70

dec_label_pc_1000ab70:                            ; preds = %dec_label_pc_1000ab50
  %v0_1000ab70 = load i32, i32* @r31, align 4
  %v2_1000ab70 = add i32 %v0_1000ab70, %v0_1000ab64
  store i32 %v2_1000ab70, i32* %r29.global-to-local, align 4
  %v2_1000abb83 = icmp ult i32 %v0_1000ab70, %v2_1000ab70
  br i1 %v2_1000abb83, label %dec_label_pc_1000ab78, label %dec_label_pc_1000abc8

dec_label_pc_1000ab78:                            ; preds = %dec_label_pc_1000ab70, %dec_label_pc_1000ab78
  %v1_1000ab88 = phi i32 [ %v2_1000abb4, %dec_label_pc_1000ab78 ], [ %v0_1000ab70, %dec_label_pc_1000ab70 ]
  %v1_1000abbc10.in = phi i32 [ %v2_1000abb4, %dec_label_pc_1000ab78 ], [ %v0_1000ab70, %dec_label_pc_1000ab70 ]
  %v1_1000abc011.in = phi i32 [ %v2_1000abb4, %dec_label_pc_1000ab78 ], [ %v0_1000ab70, %dec_label_pc_1000ab70 ]
  %v1_1000abbc10 = add i32 %v1_1000abbc10.in, 11
  %v1_1000abc011 = add i32 %v1_1000abc011.in, 19
  %v1_1000ab78 = add i32 %v1_1000ab88, 4
  %v2_1000ab78 = inttoptr i32 %v1_1000ab78 to i32*
  %v3_1000ab78 = load i32, i32* %v2_1000ab78, align 4
  store i32 %v3_1000ab78, i32* %r11.global-to-local, align 4
  %v1_1000ab7c = add i32 %v1_1000ab88, 12
  %v2_1000ab7c = inttoptr i32 %v1_1000ab7c to i32*
  %v3_1000ab7c = load i32, i32* %v2_1000ab7c, align 4
  %v1_1000ab80 = add i32 %v1_1000ab88, 16
  %v2_1000ab80 = inttoptr i32 %v1_1000ab80 to i16*
  %v3_1000ab80 = load i16, i16* %v2_1000ab80, align 2
  %v4_1000ab80 = zext i16 %v3_1000ab80 to i32
  store i32 %v4_1000ab80, i32* %r5.global-to-local, align 4
  %v1_1000ab84 = add i32 %v1_1000ab88, 18
  %v2_1000ab84 = inttoptr i32 %v1_1000ab84 to i8*
  %v3_1000ab84 = load i8, i8* %v2_1000ab84, align 1
  %v4_1000ab84 = zext i8 %v3_1000ab84 to i32
  store i32 %v4_1000ab84, i32* %r9.global-to-local, align 4
  store i32 %v3_1000ab7c, i32* %v2_1000ab78, align 4
  %v0_1000ab8c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ab8c = load i32, i32* @r31, align 4
  %v2_1000ab8c = inttoptr i32 %v1_1000ab8c to i32*
  store i32 %v0_1000ab8c, i32* %v2_1000ab8c, align 4
  %v0_1000ab90 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ab90 = trunc i32 %v0_1000ab90 to i8
  %v2_1000ab90 = load i32, i32* @r31, align 4
  %v3_1000ab90 = add i32 %v2_1000ab90, 10
  %v4_1000ab90 = inttoptr i32 %v3_1000ab90 to i8*
  store i8 %v1_1000ab90, i8* %v4_1000ab90, align 1
  %v0_1000ab94 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ab94 = trunc i32 %v0_1000ab94 to i16
  %v2_1000ab94 = load i32, i32* @r31, align 4
  %v3_1000ab94 = add i32 %v2_1000ab94, 8
  %v4_1000ab94 = inttoptr i32 %v3_1000ab94 to i16*
  store i16 %v1_1000ab94, i16* %v4_1000ab94, align 2
  %v0_1000ab98 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ab98 = add i32 %v0_1000ab98, -19
  store i32 %v1_1000ab98, i32* %r5.global-to-local, align 4
  store i32 268479392, i32* @lr, align 4
  %v3_1000ab9c = call i32 @function_100093b0(i32 %v1_1000abbc10, i32 %v1_1000abc011, i32 %v1_1000ab98)
  %v0_1000aba0 = load i32, i32* @r31, align 4
  %v1_1000aba0 = add i32 %v0_1000aba0, 8
  %v2_1000aba0 = inttoptr i32 %v1_1000aba0 to i16*
  %v3_1000aba0 = load i16, i16* %v2_1000aba0, align 2
  %v4_1000aba0 = zext i16 %v3_1000aba0 to i32
  store i32 %v4_1000aba0, i32* %r5.global-to-local, align 4
  store i32 268479408, i32* @lr, align 4
  %v3_1000abac = call i32 @function_100093b0(i32 %v0_1000aba0, i32 %v0_1000aba0, i32 %v4_1000aba0)
  %v0_1000abb0 = load i32, i32* @r31, align 4
  %v1_1000abb0 = add i32 %v0_1000abb0, 8
  %v2_1000abb0 = inttoptr i32 %v1_1000abb0 to i16*
  %v3_1000abb0 = load i16, i16* %v2_1000abb0, align 2
  %v4_1000abb0 = zext i16 %v3_1000abb0 to i32
  %v2_1000abb4 = add i32 %v4_1000abb0, %v0_1000abb0
  store i32 %v2_1000abb4, i32* @r31, align 4
  %v1_1000abb8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000abb8 = icmp ult i32 %v2_1000abb4, %v1_1000abb8
  br i1 %v2_1000abb8, label %dec_label_pc_1000ab78, label %dec_label_pc_1000abb8.dec_label_pc_1000abc8.loopexit_crit_edge

dec_label_pc_1000abb8.dec_label_pc_1000abc8.loopexit_crit_edge: ; preds = %dec_label_pc_1000ab78
  %v0_1000abcc.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000abc8

dec_label_pc_1000abc8:                            ; preds = %dec_label_pc_1000ab70, %dec_label_pc_1000abb8.dec_label_pc_1000abc8.loopexit_crit_edge, %dec_label_pc_1000ab50
  %v0_1000abcc = phi i32 [ %v0_1000ab64, %dec_label_pc_1000ab50 ], [ %v0_1000abcc.pre.pre, %dec_label_pc_1000abb8.dec_label_pc_1000abc8.loopexit_crit_edge ], [ %v0_1000ab64, %dec_label_pc_1000ab70 ]
  ret i32 %v0_1000abcc

; uselistorder directives
  uselistorder i32 %v2_1000abb4, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000aba0, { 1, 0, 2 }
  uselistorder i32 %v1_1000ab88, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000ab70, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000ab64, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_100093b0, { 1, 0, 2 }
  uselistorder i32 11, { 0, 28, 27, 2, 9, 10, 11, 12, 13, 14, 1, 15, 16, 17, 18, 19, 20, 3, 21, 22, 4, 23, 24, 7, 5, 25, 26, 8, 6 }
  uselistorder label %dec_label_pc_1000abc8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ab78, { 1, 0 }
}

define i32 @function_1000abe0() local_unnamed_addr {
dec_label_pc_1000abe0:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000abe4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000abe4, i32* %stack_var_-48, align 4
  %v5_1000abe4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000abe4, i32* %r9.global-to-local, align 4
  %v0_1000abf0 = load i32, i32* @r5, align 4
  %v1_1000abf0 = add i32 %v0_1000abf0, 30
  %v1_1000abf4 = call i32 @__asm_rlwinm(i32 %v1_1000abf0, i32 0, i32 0, i32 27)
  store i32 %v5_1000abe4, i32* @r31, align 4
  %v1_1000ac04 = load i32, i32* @r1, align 4
  %v3_1000ac04 = sub i32 %v1_1000ac04, %v1_1000abf4
  %v4_1000ac04 = inttoptr i32 %v3_1000ac04 to i32*
  store i32 %v4_1000abe4, i32* %v4_1000ac04, align 4
  %v0_1000ac08 = load i32, i32* @r4, align 4
  store i32 %v0_1000ac08, i32* @r28, align 4
  %v0_1000ac0c = load i32, i32* @r5, align 4
  store i32 %v0_1000ac0c, i32* @r23, align 4
  %v0_1000ac10 = load i32, i32* @r3, align 4
  store i32 %v0_1000ac10, i32* @r22, align 4
  %v1_1000ac14 = add i32 %v3_1000ac04, 23
  %v1_1000ac18 = call i32 @__asm_rlwinm(i32 %v1_1000ac14, i32 0, i32 0, i32 27)
  store i32 %v1_1000ac18, i32* @r27, align 4
  store i32 %v1_1000ac18, i32* %r4.global-to-local, align 4
  %v0_1000ac28 = call i32 @__asm_mfcr()
  %v1_1000ac2c = and i32 %v0_1000ac28, 268435456
  store i32 %v1_1000ac2c, i32* %r9.global-to-local, align 4
  %v3_1000ac2c = icmp eq i32 %v1_1000ac2c, 0
  store i32 %v0_1000ac28, i32* %r30.global-to-local, align 4
  br i1 %v3_1000ac2c, label %dec_label_pc_1000ac44, label %dec_label_pc_1000ac38

dec_label_pc_1000ac38:                            ; preds = %dec_label_pc_1000abe0
  %v0_1000ac38 = call i32 @function_1000936c()
  %v0_1000ac3c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ac3c = inttoptr i32 %v0_1000ac38 to i32*
  store i32 %v0_1000ac3c, i32* %v2_1000ac3c, align 4
  br label %dec_label_pc_1000ac50

dec_label_pc_1000ac44:                            ; preds = %dec_label_pc_1000abe0
  %v3_1000ac44 = icmp eq i32 %v0_1000ac28, -1
  store i32 %v0_1000ac28, i32* @r24, align 4
  br i1 %v3_1000ac44, label %dec_label_pc_1000ac50, label %dec_label_pc_1000ac58

dec_label_pc_1000ac50:                            ; preds = %dec_label_pc_1000ac44, %dec_label_pc_1000ac38
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000ad1c

dec_label_pc_1000ac58:                            ; preds = %dec_label_pc_1000ac44
  %v0_1000ac58 = load i32, i32* @r28, align 4
  store i32 %v0_1000ac58, i32* %r29.global-to-local, align 4
  store i32 %v1_1000ac18, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* %r26.global-to-local, align 4
  %v2_1000ad0012 = add i32 %v0_1000ac28, %v1_1000ac18
  %v1_1000ad0413 = load i32, i32* @r23, align 4
  %v2_1000ad0414 = add i32 %v1_1000ad0413, %v0_1000ac58
  store i32 %v2_1000ad0414, i32* %r10.global-to-local, align 4
  %v2_1000ad0815 = icmp ult i32 %v1_1000ac18, %v2_1000ad0012
  %v1_1000ad0c17 = add i32 %v0_1000ac58, 19
  store i32 %v1_1000ad0c17, i32* @r3, align 4
  %v1_1000ad1018 = add i32 %v1_1000ac18, 19
  store i32 %v1_1000ad1018, i32* @r4, align 4
  br i1 %v2_1000ad0815, label %dec_label_pc_1000ac6c, label %dec_label_pc_1000ad18

dec_label_pc_1000ac6c:                            ; preds = %dec_label_pc_1000ac58, %dec_label_pc_1000acb4
  %v0_1000ac6c19 = phi i32 [ %v2_1000acfc, %dec_label_pc_1000acb4 ], [ %v1_1000ac18, %dec_label_pc_1000ac58 ]
  %v1_1000ac6c = add i32 %v0_1000ac6c19, 16
  %v2_1000ac6c = inttoptr i32 %v1_1000ac6c to i16*
  %v3_1000ac6c = load i16, i16* %v2_1000ac6c, align 2
  %v4_1000ac6c = zext i16 %v3_1000ac6c to i32
  %v1_1000ac70 = add nuw nsw i32 %v4_1000ac6c, 7
  store i32 %v1_1000ac70, i32* %r9.global-to-local, align 4
  %v1_1000ac74 = call i32 @__asm_rlwinm(i32 %v1_1000ac70, i32 0, i32 0, i32 28)
  %v0_1000ac78 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000ac78 = add i32 %v1_1000ac74, %v0_1000ac78
  store i32 %v3_1000ac78, i32* %r11.global-to-local, align 4
  %v1_1000ac7c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000ac7c = icmp ugt i32 %v3_1000ac78, %v1_1000ac7c
  br i1 %v3_1000ac7c, label %dec_label_pc_1000ac84, label %dec_label_pc_1000acb4

dec_label_pc_1000ac84:                            ; preds = %dec_label_pc_1000ac6c
  %v0_1000ac84 = load i32, i32* @r22, align 4
  %v0_1000ac88 = load i32, i32* @r25, align 4
  %v0_1000ac8c = load i32, i32* %r26.global-to-local, align 4
  store i32 268479640, i32* @lr, align 4
  %v4_1000ac94 = call i32 @function_1000ae58(i32 %v0_1000ac84, i32 %v0_1000ac88, i32 %v0_1000ac8c, i32 0)
  %v0_1000ac98 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000ac98 = load i32, i32* @r28, align 4
  %v4_1000ac98 = icmp eq i32 %v0_1000ac98, %v1_1000ac98
  br i1 %v4_1000ac98, label %dec_label_pc_1000aca0, label %dec_label_pc_1000ad18

dec_label_pc_1000aca0:                            ; preds = %dec_label_pc_1000ac84
  %v0_1000aca0 = call i32 @function_1000936c()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000acac = inttoptr i32 %v0_1000aca0 to i32*
  store i32 22, i32* %v2_1000acac, align 4
  %v0_1000ad20.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000ad1c

dec_label_pc_1000acb4:                            ; preds = %dec_label_pc_1000ac6c
  %v2_1000ac74 = trunc i32 %v1_1000ac74 to i16
  %v0_1000acb4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000acb4 = inttoptr i32 %v0_1000acb4 to i32*
  %v2_1000acb4 = load i32, i32* %v1_1000acb4, align 4
  store i32 %v2_1000acb4, i32* %r9.global-to-local, align 4
  %v1_1000acb8 = add i32 %v0_1000acb4, 4
  %v2_1000acb8 = inttoptr i32 %v1_1000acb8 to i32*
  %v3_1000acb8 = load i32, i32* %v2_1000acb8, align 4
  store i32 %v3_1000acb8, i32* %r10.global-to-local, align 4
  %v1_1000acbc = add i32 %v0_1000acb4, 8
  %v2_1000acbc = inttoptr i32 %v1_1000acbc to i32*
  %v3_1000acbc = load i32, i32* %v2_1000acbc, align 4
  store i32 %v3_1000acbc, i32* @r25, align 4
  %v1_1000acc0 = add i32 %v0_1000acb4, 12
  %v2_1000acc0 = inttoptr i32 %v1_1000acc0 to i32*
  %v3_1000acc0 = load i32, i32* %v2_1000acc0, align 4
  store i32 %v3_1000acc0, i32* %r26.global-to-local, align 4
  %v2_1000acc4 = inttoptr i32 %v0_1000ac78 to i32*
  store i32 %v2_1000acb4, i32* %v2_1000acc4, align 4
  %v0_1000acc8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000acc8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000acc8 = add i32 %v1_1000acc8, 4
  %v3_1000acc8 = inttoptr i32 %v2_1000acc8 to i32*
  store i32 %v0_1000acc8, i32* %v3_1000acc8, align 4
  %v0_1000accc = load i32, i32* %r30.global-to-local, align 4
  %v1_1000accc = add i32 %v0_1000accc, 8
  %v2_1000accc = inttoptr i32 %v1_1000accc to i32*
  %v3_1000accc = load i32, i32* %v2_1000accc, align 4
  store i32 %v3_1000accc, i32* %r9.global-to-local, align 4
  %v1_1000acd0 = add i32 %v0_1000accc, 12
  %v2_1000acd0 = inttoptr i32 %v1_1000acd0 to i32*
  %v3_1000acd0 = load i32, i32* %v2_1000acd0, align 4
  store i32 %v3_1000acd0, i32* %r10.global-to-local, align 4
  %v3_1000acd4 = load i32, i32* %r29.global-to-local, align 4
  %v4_1000acd4 = add i32 %v3_1000acd4, 16
  %v5_1000acd4 = inttoptr i32 %v4_1000acd4 to i16*
  store i16 %v2_1000ac74, i16* %v5_1000acd4, align 2
  %v0_1000acd8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000acd8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000acd8 = add i32 %v1_1000acd8, 8
  %v3_1000acd8 = inttoptr i32 %v2_1000acd8 to i32*
  store i32 %v0_1000acd8, i32* %v3_1000acd8, align 4
  %v0_1000acdc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000acdc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000acdc = add i32 %v1_1000acdc, 12
  %v3_1000acdc = inttoptr i32 %v2_1000acdc to i32*
  store i32 %v0_1000acdc, i32* %v3_1000acdc, align 4
  %v0_1000ace0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ace0 = add i32 %v0_1000ace0, 18
  %v2_1000ace0 = inttoptr i32 %v1_1000ace0 to i8*
  %v3_1000ace0 = load i8, i8* %v2_1000ace0, align 1
  %v2_1000ace4 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000ace4 = add i32 %v2_1000ace4, 18
  %v4_1000ace4 = inttoptr i32 %v3_1000ace4 to i8*
  store i8 %v3_1000ace0, i8* %v4_1000ace4, align 1
  %v0_1000ace8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000ace8, i32* %r29.global-to-local, align 4
  %v0_1000acec = load i32, i32* %r30.global-to-local, align 4
  %v1_1000acec = add i32 %v0_1000acec, 16
  %v2_1000acec = inttoptr i32 %v1_1000acec to i16*
  %v3_1000acec = load i16, i16* %v2_1000acec, align 2
  %v4_1000acec = zext i16 %v3_1000acec to i32
  %v1_1000acf0 = add nsw i32 %v4_1000acec, -19
  store i32 %v1_1000acf0, i32* @r5, align 4
  store i32 268479736, i32* @lr, align 4
  %v0_1000acf4 = call i32 @function_1000b154()
  %v0_1000acf8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000acf8 = add i32 %v0_1000acf8, 16
  %v2_1000acf8 = inttoptr i32 %v1_1000acf8 to i16*
  %v3_1000acf8 = load i16, i16* %v2_1000acf8, align 2
  %v4_1000acf8 = zext i16 %v3_1000acf8 to i32
  %v2_1000acfc = add i32 %v4_1000acf8, %v0_1000acf8
  store i32 %v2_1000acfc, i32* %r30.global-to-local, align 4
  %v1_1000ad00.pre = load i32, i32* @r24, align 4
  %v0_1000ad04.pre = load i32, i32* @r28, align 4
  %v0_1000ad0c.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ad00 = add i32 %v1_1000ad00.pre, %v1_1000ac18
  %v1_1000ad04 = load i32, i32* @r23, align 4
  %v2_1000ad04 = add i32 %v1_1000ad04, %v0_1000ad04.pre
  store i32 %v2_1000ad04, i32* %r10.global-to-local, align 4
  %v2_1000ad08 = icmp ult i32 %v2_1000acfc, %v2_1000ad00
  %v1_1000ad0c = add i32 %v0_1000ad0c.pre, 19
  store i32 %v1_1000ad0c, i32* @r3, align 4
  %v1_1000ad10 = add i32 %v2_1000acfc, 19
  store i32 %v1_1000ad10, i32* @r4, align 4
  br i1 %v2_1000ad08, label %dec_label_pc_1000ac6c, label %dec_label_pc_1000ad18

dec_label_pc_1000ad18:                            ; preds = %dec_label_pc_1000ac58, %dec_label_pc_1000acb4, %dec_label_pc_1000ac84
  %v1_1000ad18 = phi i32 [ %v0_1000ac98, %dec_label_pc_1000ac84 ], [ %v0_1000ac58, %dec_label_pc_1000ac58 ], [ %v0_1000ad0c.pre, %dec_label_pc_1000acb4 ]
  %v0_1000ad18 = phi i32 [ %v1_1000ac98, %dec_label_pc_1000ac84 ], [ %v0_1000ac58, %dec_label_pc_1000ac58 ], [ %v0_1000ad04.pre, %dec_label_pc_1000acb4 ]
  %v2_1000ad18 = sub i32 %v1_1000ad18, %v0_1000ad18
  store i32 %v2_1000ad18, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000ad1c

dec_label_pc_1000ad1c:                            ; preds = %dec_label_pc_1000aca0, %dec_label_pc_1000ac50, %dec_label_pc_1000ad18
  %v0_1000ad20 = phi i32 [ %v0_1000ad20.pre, %dec_label_pc_1000aca0 ], [ -1, %dec_label_pc_1000ac50 ], [ %v2_1000ad18, %dec_label_pc_1000ad18 ]
  %v0_1000ad1c = load i32, i32* @r1, align 4
  %v1_1000ad1c = inttoptr i32 %v0_1000ad1c to i32*
  %v2_1000ad1c = load i32, i32* %v1_1000ad1c, align 4
  store i32 %v2_1000ad1c, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000ad20

; uselistorder directives
  uselistorder i32 %v2_1000acfc, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000acb4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000ac74, { 1, 0 }
  uselistorder i32 %v0_1000ac28, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_1000ac18, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 4, 5, 6, 0, 3, 7, 8, 1, 9, 2, 10, 11 }
  uselistorder i32 22, { 0, 1, 2, 3, 11, 4, 5, 6, 7, 12, 13, 14, 8, 9, 15, 10, 16 }
  uselistorder i32 7, { 25, 39, 11, 12, 19, 13, 14, 20, 15, 16, 21, 22, 1, 23, 24, 0, 26, 2, 27, 3, 28, 29, 30, 4, 5, 31, 6, 32, 7, 33, 17, 34, 18, 8, 35, 36, 9, 37, 38, 10, 40 }
  uselistorder i32 19, { 20, 21, 1, 2, 0, 13, 14, 15, 3, 6, 7, 16, 8, 9, 17, 18, 19, 10, 11, 12, 22, 23, 24, 25, 4, 5 }
  uselistorder i32* @r25, { 14, 15, 16, 8, 9, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* @r24, { 0, 9, 2, 3, 4, 5, 6, 7, 8, 11, 12, 10, 13, 1, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* @r27, { 22, 10, 11, 37, 38, 2, 3, 4, 5, 6, 7, 8, 9, 14, 12, 13, 1, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 23, { 9, 6, 13, 0, 1, 7, 8, 2, 3, 10, 4, 11, 5, 12 }
  uselistorder i32* @r22, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* @r23, { 12, 0, 13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* @r1, { 4, 5, 1, 2, 3, 0, 6, 7 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 16, 17, 18, 27, 23, 25, 24, 26, 0, 29, 28, 1, 2, 3, 21, 22, 19, 20, 4, 5, 6, 7, 8, 9, 15, 10, 12, 13, 11, 14, 30 }
  uselistorder i32 27, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 30, { 9, 10, 6, 2, 1, 0, 7, 8, 4, 5, 3 }
  uselistorder label %dec_label_pc_1000ad1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ad18, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ac6c, { 1, 0 }
}

define i32 @function_1000ad38() local_unnamed_addr {
dec_label_pc_1000ad38:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ad50 = call i32 @__asm_mfcr()
  %v1_1000ad54 = and i32 %v0_1000ad50, 268435456
  %v3_1000ad54 = icmp eq i32 %v1_1000ad54, 0
  store i32 %v0_1000ad50, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ad54, label %dec_label_pc_1000ad6c, label %dec_label_pc_1000ad60

dec_label_pc_1000ad60:                            ; preds = %dec_label_pc_1000ad38
  %v0_1000ad60 = call i32 @function_1000936c()
  %v0_1000ad64 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ad64 = inttoptr i32 %v0_1000ad60 to i32*
  store i32 %v0_1000ad64, i32* %v2_1000ad64, align 4
  br label %dec_label_pc_1000ad6c

dec_label_pc_1000ad6c:                            ; preds = %dec_label_pc_1000ad38, %dec_label_pc_1000ad60
  %v0_1000ad7c = phi i32 [ %v0_1000ad50, %dec_label_pc_1000ad38 ], [ -1, %dec_label_pc_1000ad60 ]
  ret i32 %v0_1000ad7c

; uselistorder directives
  uselistorder label %dec_label_pc_1000ad6c, { 1, 0 }
}

define i32 @function_1000ad80() local_unnamed_addr {
dec_label_pc_1000ad80:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ad98 = call i32 @__asm_mfcr()
  %v1_1000ad9c = and i32 %v0_1000ad98, 268435456
  %v3_1000ad9c = icmp eq i32 %v1_1000ad9c, 0
  store i32 %v0_1000ad98, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ad9c, label %dec_label_pc_1000adb4, label %dec_label_pc_1000ada8

dec_label_pc_1000ada8:                            ; preds = %dec_label_pc_1000ad80
  %v0_1000ada8 = call i32 @function_1000936c()
  %v0_1000adac = load i32, i32* %r31.global-to-local, align 4
  %v2_1000adac = inttoptr i32 %v0_1000ada8 to i32*
  store i32 %v0_1000adac, i32* %v2_1000adac, align 4
  br label %dec_label_pc_1000adb4

dec_label_pc_1000adb4:                            ; preds = %dec_label_pc_1000ad80, %dec_label_pc_1000ada8
  %v0_1000adc4 = phi i32 [ %v0_1000ad98, %dec_label_pc_1000ad80 ], [ -1, %dec_label_pc_1000ada8 ]
  ret i32 %v0_1000adc4

; uselistorder directives
  uselistorder label %dec_label_pc_1000adb4, { 1, 0 }
}

define i32 @function_1000adc8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000adc8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ade0 = call i32 @__asm_mfcr()
  %v1_1000ade4 = and i32 %v0_1000ade0, 268435456
  %v3_1000ade4 = icmp eq i32 %v1_1000ade4, 0
  store i32 %v0_1000ade0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ade4, label %dec_label_pc_1000adfc, label %dec_label_pc_1000adf0

dec_label_pc_1000adf0:                            ; preds = %dec_label_pc_1000adc8
  %v0_1000adf0 = call i32 @function_1000936c()
  %v0_1000adf4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000adf4 = inttoptr i32 %v0_1000adf0 to i32*
  store i32 %v0_1000adf4, i32* %v2_1000adf4, align 4
  br label %dec_label_pc_1000adfc

dec_label_pc_1000adfc:                            ; preds = %dec_label_pc_1000adc8, %dec_label_pc_1000adf0
  %v0_1000ae0c = phi i32 [ %v0_1000ade0, %dec_label_pc_1000adc8 ], [ -1, %dec_label_pc_1000adf0 ]
  ret i32 %v0_1000ae0c

; uselistorder directives
  uselistorder label %dec_label_pc_1000adfc, { 1, 0 }
}

define i32 @function_1000ae10(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ae10:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ae28 = call i32 @__asm_mfcr()
  %v1_1000ae2c = and i32 %v0_1000ae28, 268435456
  %v3_1000ae2c = icmp eq i32 %v1_1000ae2c, 0
  store i32 %v0_1000ae28, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ae2c, label %dec_label_pc_1000ae44, label %dec_label_pc_1000ae38

dec_label_pc_1000ae38:                            ; preds = %dec_label_pc_1000ae10
  %v0_1000ae38 = call i32 @function_1000936c()
  %v0_1000ae3c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ae3c = inttoptr i32 %v0_1000ae38 to i32*
  store i32 %v0_1000ae3c, i32* %v2_1000ae3c, align 4
  br label %dec_label_pc_1000ae44

dec_label_pc_1000ae44:                            ; preds = %dec_label_pc_1000ae10, %dec_label_pc_1000ae38
  %v0_1000ae54 = phi i32 [ %v0_1000ae28, %dec_label_pc_1000ae10 ], [ -1, %dec_label_pc_1000ae38 ]
  ret i32 %v0_1000ae54

; uselistorder directives
  uselistorder label %dec_label_pc_1000ae44, { 1, 0 }
}

define i32 @function_1000ae58(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000ae58:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000ae58 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000ae84 = call i32 @__asm_mfcr()
  %v1_1000ae88 = and i32 %v0_1000ae84, 268435456
  %v3_1000ae88 = icmp eq i32 %v1_1000ae88, 0
  store i32 %v0_1000ae84, i32* %r31.global-to-local, align 4
  store i32 %v0_1000ae84, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ae88, label %dec_label_pc_1000aeac, label %dec_label_pc_1000ae9c

dec_label_pc_1000ae9c:                            ; preds = %dec_label_pc_1000ae58
  %v0_1000ae9c = call i32 @function_1000936c()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000aea4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000aea4 = inttoptr i32 %v0_1000ae9c to i32*
  store i32 %v0_1000aea4, i32* %v2_1000aea4, align 4
  %v0_1000aeb0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000aeb0

dec_label_pc_1000aeac:                            ; preds = %dec_label_pc_1000ae58
  %v3_1000ae94 = icmp eq i32 %v0_1000ae84, 0
  br i1 %v3_1000ae94, label %dec_label_pc_1000aebc, label %dec_label_pc_1000aeb0

dec_label_pc_1000aeb0:                            ; preds = %dec_label_pc_1000aeac, %dec_label_pc_1000ae9c
  %v0_1000aeb0 = phi i32 [ %v0_1000ae84, %dec_label_pc_1000aeac ], [ %v0_1000aeb0.pre, %dec_label_pc_1000ae9c ]
  %tmp = icmp slt i32 %v0_1000aeb0, 0
  %v1_1000aeb4 = zext i1 %tmp to i32
  %v2_1000aeb4 = ashr i32 %v0_1000aeb0, 31
  %v3_1000aeb4 = and i32 %v2_1000aeb4, -2
  %v4_1000aeb4 = or i32 %v3_1000aeb4, %v1_1000aeb4
  br label %dec_label_pc_1000aec4

dec_label_pc_1000aebc:                            ; preds = %dec_label_pc_1000aeac
  %v3_1000aebc = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000aec4

dec_label_pc_1000aec4:                            ; preds = %dec_label_pc_1000aeb0, %dec_label_pc_1000aebc
  %v0_1000aed4 = phi i32 [ %v4_1000aeb4, %dec_label_pc_1000aeb0 ], [ %v3_1000aebc, %dec_label_pc_1000aebc ]
  store i32 %v0_1000ae58, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000aed4

; uselistorder directives
  uselistorder i32 %v0_1000aeb0, { 1, 0 }
  uselistorder i32 %v0_1000ae84, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 7, 1, 0, 9, 10, 6, 11, 2, 12, 3, 13, 4, 5 }
  uselistorder label %dec_label_pc_1000aec4, { 1, 0 }
}

define i32 @function_1000aed8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000aed8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000aef0 = call i32 @__asm_mfcr()
  %v1_1000aef4 = and i32 %v0_1000aef0, 268435456
  %v3_1000aef4 = icmp eq i32 %v1_1000aef4, 0
  store i32 %v0_1000aef0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000aef4, label %dec_label_pc_1000af0c, label %dec_label_pc_1000af00

dec_label_pc_1000af00:                            ; preds = %dec_label_pc_1000aed8
  %v0_1000af00 = call i32 @function_1000936c()
  %v0_1000af04 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af04 = inttoptr i32 %v0_1000af00 to i32*
  store i32 %v0_1000af04, i32* %v2_1000af04, align 4
  br label %dec_label_pc_1000af0c

dec_label_pc_1000af0c:                            ; preds = %dec_label_pc_1000aed8, %dec_label_pc_1000af00
  %v0_1000af1c = phi i32 [ %v0_1000aef0, %dec_label_pc_1000aed8 ], [ -1, %dec_label_pc_1000af00 ]
  ret i32 %v0_1000af1c

; uselistorder directives
  uselistorder label %dec_label_pc_1000af0c, { 1, 0 }
}

define i32 @function_1000af20(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af20:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000af3c = load i32, i32* @global_var_1001bdd0.332, align 4
  %v3_1000af40 = icmp eq i32 %v3_1000af3c, 0
  br i1 %v3_1000af40, label %dec_label_pc_1000af48, label %dec_label_pc_1000af54

dec_label_pc_1000af48:                            ; preds = %dec_label_pc_1000af20
  store i32 268480332, i32* @lr, align 4
  %v1_1000af48 = call i32 @function_1000b514(i32 0)
  %v1_1000af4c = icmp slt i32 %v1_1000af48, 0
  br i1 %v1_1000af4c, label %dec_label_pc_1000af74, label %dec_label_pc_1000af48.dec_label_pc_1000af54_crit_edge

dec_label_pc_1000af48.dec_label_pc_1000af54_crit_edge: ; preds = %dec_label_pc_1000af48
  %v0_1000af54.pre = load i32, i32* @r30, align 4
  %v3_1000af58.pre = load i32, i32* @global_var_1001bdd0.332, align 4
  br label %dec_label_pc_1000af54

dec_label_pc_1000af54:                            ; preds = %dec_label_pc_1000af48.dec_label_pc_1000af54_crit_edge, %dec_label_pc_1000af20
  %v3_1000af58 = phi i32 [ %v3_1000af58.pre, %dec_label_pc_1000af48.dec_label_pc_1000af54_crit_edge ], [ %v3_1000af3c, %dec_label_pc_1000af20 ]
  %v1_1000af60 = phi i32 [ %v0_1000af54.pre, %dec_label_pc_1000af48.dec_label_pc_1000af54_crit_edge ], [ %arg1, %dec_label_pc_1000af20 ]
  %v3_1000af54 = icmp eq i32 %v1_1000af60, 0
  store i32 %v3_1000af58, i32* @r31, align 4
  br i1 %v3_1000af54, label %dec_label_pc_1000af78, label %dec_label_pc_1000af68

dec_label_pc_1000af68:                            ; preds = %dec_label_pc_1000af54
  %v2_1000af60 = add i32 %v1_1000af60, %v3_1000af58
  store i32 268480364, i32* @lr, align 4
  %v1_1000af68 = call i32 @function_1000b514(i32 %v2_1000af60)
  %tmp6 = icmp sgt i32 %v1_1000af68, -1
  br i1 %tmp6, label %dec_label_pc_1000af68.dec_label_pc_1000af78_crit_edge, label %dec_label_pc_1000af74

dec_label_pc_1000af68.dec_label_pc_1000af78_crit_edge: ; preds = %dec_label_pc_1000af68
  %v0_1000af7c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000af78

dec_label_pc_1000af74:                            ; preds = %dec_label_pc_1000af68, %dec_label_pc_1000af48
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000af78

dec_label_pc_1000af78:                            ; preds = %dec_label_pc_1000af68.dec_label_pc_1000af78_crit_edge, %dec_label_pc_1000af54, %dec_label_pc_1000af74
  %v0_1000af7c = phi i32 [ %v0_1000af7c.pre, %dec_label_pc_1000af68.dec_label_pc_1000af78_crit_edge ], [ %v3_1000af58, %dec_label_pc_1000af54 ], [ -1, %dec_label_pc_1000af74 ]
  ret i32 %v0_1000af7c

; uselistorder directives
  uselistorder i32 %v3_1000af58, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000b514, { 1, 0 }
  uselistorder label %dec_label_pc_1000af78, { 2, 0, 1 }
}

define i32 @function_1000af90(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af90:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000afa8 = call i32 @__asm_mfcr()
  %v1_1000afac = and i32 %v0_1000afa8, 268435456
  %v3_1000afac = icmp eq i32 %v1_1000afac, 0
  store i32 %v0_1000afa8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000afac, label %dec_label_pc_1000afc4, label %dec_label_pc_1000afb8

dec_label_pc_1000afb8:                            ; preds = %dec_label_pc_1000af90
  %v0_1000afb8 = call i32 @function_1000936c()
  %v0_1000afbc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000afbc = inttoptr i32 %v0_1000afb8 to i32*
  store i32 %v0_1000afbc, i32* %v2_1000afbc, align 4
  br label %dec_label_pc_1000afc4

dec_label_pc_1000afc4:                            ; preds = %dec_label_pc_1000af90, %dec_label_pc_1000afb8
  %v0_1000afd4 = phi i32 [ %v0_1000afa8, %dec_label_pc_1000af90 ], [ -1, %dec_label_pc_1000afb8 ]
  ret i32 %v0_1000afd4

; uselistorder directives
  uselistorder label %dec_label_pc_1000afc4, { 1, 0 }
}

define i32 @function_1000afd8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000afd8:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268480512, i32* @lr, align 4
  %v3_1000affc = call i32 @function_10009454(i32 %arg2, i32 0, i32 104)
  %v2_1000b000 = load i32, i32* %arg1, align 4
  %v1_1000b004 = add i32 %tmp, 4
  %v2_1000b004 = inttoptr i32 %v1_1000b004 to i32*
  %v3_1000b004 = load i32, i32* %v2_1000b004, align 4
  store i32 %v3_1000b004, i32* %r10.global-to-local, align 4
  %v1_1000b008 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b008 = inttoptr i32 %v1_1000b008 to i32*
  store i32 %v2_1000b000, i32* %v2_1000b008, align 4
  %v0_1000b00c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b00c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b00c = add i32 %v1_1000b00c, 4
  %v3_1000b00c = inttoptr i32 %v2_1000b00c to i32*
  store i32 %v0_1000b00c, i32* %v3_1000b00c, align 4
  %v0_1000b010 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b010 = add i32 %v0_1000b010, 8
  %v2_1000b010 = inttoptr i32 %v1_1000b010 to i32*
  %v3_1000b010 = load i32, i32* %v2_1000b010, align 4
  %v1_1000b014 = add i32 %v0_1000b010, 12
  %v2_1000b014 = inttoptr i32 %v1_1000b014 to i32*
  %v3_1000b014 = load i32, i32* %v2_1000b014, align 4
  store i32 %v3_1000b014, i32* %r10.global-to-local, align 4
  %v1_1000b018 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b018 = add i32 %v1_1000b018, 8
  %v3_1000b018 = inttoptr i32 %v2_1000b018 to i32*
  store i32 %v3_1000b010, i32* %v3_1000b018, align 4
  %v0_1000b01c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b01c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b01c = add i32 %v1_1000b01c, 12
  %v3_1000b01c = inttoptr i32 %v2_1000b01c to i32*
  store i32 %v0_1000b01c, i32* %v3_1000b01c, align 4
  %v0_1000b020 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b020 = add i32 %v0_1000b020, 16
  %v2_1000b020 = inttoptr i32 %v1_1000b020 to i32*
  %v3_1000b020 = load i32, i32* %v2_1000b020, align 4
  %v1_1000b024 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b024 = add i32 %v1_1000b024, 16
  %v3_1000b024 = inttoptr i32 %v2_1000b024 to i32*
  store i32 %v3_1000b020, i32* %v3_1000b024, align 4
  %v0_1000b028 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b028 = add i32 %v0_1000b028, 20
  %v2_1000b028 = inttoptr i32 %v1_1000b028 to i32*
  %v3_1000b028 = load i32, i32* %v2_1000b028, align 4
  %v1_1000b02c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b02c = add i32 %v1_1000b02c, 20
  %v3_1000b02c = inttoptr i32 %v2_1000b02c to i32*
  store i32 %v3_1000b028, i32* %v3_1000b02c, align 4
  %v0_1000b030 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b030 = add i32 %v0_1000b030, 24
  %v2_1000b030 = inttoptr i32 %v1_1000b030 to i32*
  %v3_1000b030 = load i32, i32* %v2_1000b030, align 4
  %v1_1000b034 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b034 = add i32 %v1_1000b034, 24
  %v3_1000b034 = inttoptr i32 %v2_1000b034 to i32*
  store i32 %v3_1000b030, i32* %v3_1000b034, align 4
  %v0_1000b038 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b038 = add i32 %v0_1000b038, 28
  %v2_1000b038 = inttoptr i32 %v1_1000b038 to i32*
  %v3_1000b038 = load i32, i32* %v2_1000b038, align 4
  %v1_1000b03c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b03c = add i32 %v1_1000b03c, 28
  %v3_1000b03c = inttoptr i32 %v2_1000b03c to i32*
  store i32 %v3_1000b038, i32* %v3_1000b03c, align 4
  %v0_1000b040 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b040 = add i32 %v0_1000b040, 32
  %v2_1000b040 = inttoptr i32 %v1_1000b040 to i32*
  %v3_1000b040 = load i32, i32* %v2_1000b040, align 4
  %v1_1000b044 = add i32 %v0_1000b040, 36
  %v2_1000b044 = inttoptr i32 %v1_1000b044 to i32*
  %v3_1000b044 = load i32, i32* %v2_1000b044, align 4
  store i32 %v3_1000b044, i32* %r10.global-to-local, align 4
  %v1_1000b048 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b048 = add i32 %v1_1000b048, 32
  %v3_1000b048 = inttoptr i32 %v2_1000b048 to i32*
  store i32 %v3_1000b040, i32* %v3_1000b048, align 4
  %v0_1000b04c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b04c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b04c = add i32 %v1_1000b04c, 36
  %v3_1000b04c = inttoptr i32 %v2_1000b04c to i32*
  store i32 %v0_1000b04c, i32* %v3_1000b04c, align 4
  %v0_1000b050 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b050 = add i32 %v0_1000b050, 48
  %v2_1000b050 = inttoptr i32 %v1_1000b050 to i32*
  %v3_1000b050 = load i32, i32* %v2_1000b050, align 4
  %v1_1000b054 = add i32 %v0_1000b050, 52
  %v2_1000b054 = inttoptr i32 %v1_1000b054 to i32*
  %v3_1000b054 = load i32, i32* %v2_1000b054, align 4
  store i32 %v3_1000b054, i32* %r10.global-to-local, align 4
  %v1_1000b058 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b058 = add i32 %v1_1000b058, 48
  %v3_1000b058 = inttoptr i32 %v2_1000b058 to i32*
  store i32 %v3_1000b050, i32* %v3_1000b058, align 4
  %v0_1000b05c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b05c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b05c = add i32 %v1_1000b05c, 52
  %v3_1000b05c = inttoptr i32 %v2_1000b05c to i32*
  store i32 %v0_1000b05c, i32* %v3_1000b05c, align 4
  %v0_1000b060 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b060 = add i32 %v0_1000b060, 56
  %v2_1000b060 = inttoptr i32 %v1_1000b060 to i32*
  %v3_1000b060 = load i32, i32* %v2_1000b060, align 4
  %v1_1000b064 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b064 = add i32 %v1_1000b064, 56
  %v3_1000b064 = inttoptr i32 %v2_1000b064 to i32*
  store i32 %v3_1000b060, i32* %v3_1000b064, align 4
  %v0_1000b068 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b068 = add i32 %v0_1000b068, 64
  %v2_1000b068 = inttoptr i32 %v1_1000b068 to i32*
  %v3_1000b068 = load i32, i32* %v2_1000b068, align 4
  %v1_1000b06c = add i32 %v0_1000b068, 68
  %v2_1000b06c = inttoptr i32 %v1_1000b06c to i32*
  %v3_1000b06c = load i32, i32* %v2_1000b06c, align 4
  store i32 %v3_1000b06c, i32* %r10.global-to-local, align 4
  %v1_1000b070 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b070 = add i32 %v1_1000b070, 64
  %v3_1000b070 = inttoptr i32 %v2_1000b070 to i32*
  store i32 %v3_1000b068, i32* %v3_1000b070, align 4
  %v0_1000b074 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b074 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b074 = add i32 %v1_1000b074, 68
  %v3_1000b074 = inttoptr i32 %v2_1000b074 to i32*
  store i32 %v0_1000b074, i32* %v3_1000b074, align 4
  %v0_1000b078 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b078 = add i32 %v0_1000b078, 72
  %v2_1000b078 = inttoptr i32 %v1_1000b078 to i32*
  %v3_1000b078 = load i32, i32* %v2_1000b078, align 4
  %v1_1000b07c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b07c = add i32 %v1_1000b07c, 72
  %v3_1000b07c = inttoptr i32 %v2_1000b07c to i32*
  store i32 %v3_1000b078, i32* %v3_1000b07c, align 4
  %v0_1000b080 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b080 = add i32 %v0_1000b080, 80
  %v2_1000b080 = inttoptr i32 %v1_1000b080 to i32*
  %v3_1000b080 = load i32, i32* %v2_1000b080, align 4
  %v1_1000b084 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b084 = add i32 %v1_1000b084, 80
  %v3_1000b084 = inttoptr i32 %v2_1000b084 to i32*
  store i32 %v3_1000b080, i32* %v3_1000b084, align 4
  %v0_1000b088 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b088 = add i32 %v0_1000b088, 88
  %v2_1000b088 = inttoptr i32 %v1_1000b088 to i32*
  %v3_1000b088 = load i32, i32* %v2_1000b088, align 4
  %v1_1000b08c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b08c = add i32 %v1_1000b08c, 88
  %v3_1000b08c = inttoptr i32 %v2_1000b08c to i32*
  store i32 %v3_1000b088, i32* %v3_1000b08c, align 4
  ret i32 %v3_1000affc

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b0a4(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b0a4:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000b0a8 = load i32, i32* @lr, align 4
  store i32 %v0_1000b0a8, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268480716, i32* @lr, align 4
  %v3_1000b0c8 = call i32 @function_10009454(i32 %arg2, i32 0, i32 88)
  %v0_1000b0cc = load i32, i32* @r28, align 4
  %v1_1000b0cc = inttoptr i32 %v0_1000b0cc to i32*
  %v2_1000b0cc = load i32, i32* %v1_1000b0cc, align 4
  store i32 %v2_1000b0cc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000b0d4 = load i32, i32* @r29, align 4
  %v2_1000b0d4 = add i32 %v1_1000b0d4, 4
  %v3_1000b0d4 = inttoptr i32 %v2_1000b0d4 to i32*
  store i32 %v2_1000b0cc, i32* %v3_1000b0d4, align 4
  %v0_1000b0d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b0d8 = load i32, i32* @r29, align 4
  %v2_1000b0d8 = inttoptr i32 %v1_1000b0d8 to i32*
  store i32 %v0_1000b0d8, i32* %v2_1000b0d8, align 4
  %v0_1000b0dc = load i32, i32* @r28, align 4
  %v1_1000b0dc = add i32 %v0_1000b0dc, 4
  %v2_1000b0dc = inttoptr i32 %v1_1000b0dc to i32*
  %v3_1000b0dc = load i32, i32* %v2_1000b0dc, align 4
  store i32 %v3_1000b0dc, i32* %r0.global-to-local, align 4
  %v1_1000b0e0 = load i32, i32* @r29, align 4
  %v2_1000b0e0 = add i32 %v1_1000b0e0, 12
  %v3_1000b0e0 = inttoptr i32 %v2_1000b0e0 to i32*
  store i32 %v3_1000b0dc, i32* %v3_1000b0e0, align 4
  %v0_1000b0e4 = load i32, i32* @r28, align 4
  %v1_1000b0e4 = add i32 %v0_1000b0e4, 8
  %v2_1000b0e4 = inttoptr i32 %v1_1000b0e4 to i32*
  %v3_1000b0e4 = load i32, i32* %v2_1000b0e4, align 4
  store i32 %v3_1000b0e4, i32* %r0.global-to-local, align 4
  %v1_1000b0e8 = load i32, i32* @r29, align 4
  %v2_1000b0e8 = add i32 %v1_1000b0e8, 16
  %v3_1000b0e8 = inttoptr i32 %v2_1000b0e8 to i32*
  store i32 %v3_1000b0e4, i32* %v3_1000b0e8, align 4
  %v0_1000b0ec = load i32, i32* @r28, align 4
  %v1_1000b0ec = add i32 %v0_1000b0ec, 12
  %v2_1000b0ec = inttoptr i32 %v1_1000b0ec to i16*
  %v3_1000b0ec = load i16, i16* %v2_1000b0ec, align 2
  %v4_1000b0ec = zext i16 %v3_1000b0ec to i32
  store i32 %v4_1000b0ec, i32* %r0.global-to-local, align 4
  %v1_1000b0f0 = load i32, i32* @r29, align 4
  %v2_1000b0f0 = add i32 %v1_1000b0f0, 20
  %v3_1000b0f0 = inttoptr i32 %v2_1000b0f0 to i32*
  store i32 %v4_1000b0ec, i32* %v3_1000b0f0, align 4
  %v0_1000b0f4 = load i32, i32* @r28, align 4
  %v1_1000b0f4 = add i32 %v0_1000b0f4, 16
  %v2_1000b0f4 = inttoptr i32 %v1_1000b0f4 to i32*
  %v3_1000b0f4 = load i32, i32* %v2_1000b0f4, align 4
  store i32 %v3_1000b0f4, i32* %r0.global-to-local, align 4
  %v1_1000b0f8 = load i32, i32* @r29, align 4
  %v2_1000b0f8 = add i32 %v1_1000b0f8, 24
  %v3_1000b0f8 = inttoptr i32 %v2_1000b0f8 to i32*
  store i32 %v3_1000b0f4, i32* %v3_1000b0f8, align 4
  %v0_1000b0fc = load i32, i32* @r28, align 4
  %v1_1000b0fc = add i32 %v0_1000b0fc, 20
  %v2_1000b0fc = inttoptr i32 %v1_1000b0fc to i32*
  %v3_1000b0fc = load i32, i32* %v2_1000b0fc, align 4
  store i32 %v3_1000b0fc, i32* %r0.global-to-local, align 4
  %v1_1000b100 = load i32, i32* @r29, align 4
  %v2_1000b100 = add i32 %v1_1000b100, 28
  %v3_1000b100 = inttoptr i32 %v2_1000b100 to i32*
  store i32 %v3_1000b0fc, i32* %v3_1000b100, align 4
  %v0_1000b104 = load i32, i32* @r28, align 4
  %v1_1000b104 = add i32 %v0_1000b104, 24
  %v2_1000b104 = inttoptr i32 %v1_1000b104 to i32*
  %v3_1000b104 = load i32, i32* %v2_1000b104, align 4
  store i32 %v3_1000b104, i32* %r0.global-to-local, align 4
  %v0_1000b108 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b108 = load i32, i32* @r29, align 4
  %v2_1000b108 = add i32 %v1_1000b108, 32
  %v3_1000b108 = inttoptr i32 %v2_1000b108 to i32*
  store i32 %v0_1000b108, i32* %v3_1000b108, align 4
  %v0_1000b10c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b10c = load i32, i32* @r29, align 4
  %v2_1000b10c = add i32 %v1_1000b10c, 36
  %v3_1000b10c = inttoptr i32 %v2_1000b10c to i32*
  store i32 %v0_1000b10c, i32* %v3_1000b10c, align 4
  %v0_1000b110 = load i32, i32* @r28, align 4
  %v1_1000b110 = add i32 %v0_1000b110, 28
  %v2_1000b110 = inttoptr i32 %v1_1000b110 to i32*
  %v3_1000b110 = load i32, i32* %v2_1000b110, align 4
  store i32 %v3_1000b110, i32* %r0.global-to-local, align 4
  %v1_1000b114 = load i32, i32* @r29, align 4
  %v2_1000b114 = add i32 %v1_1000b114, 44
  %v3_1000b114 = inttoptr i32 %v2_1000b114 to i32*
  store i32 %v3_1000b110, i32* %v3_1000b114, align 4
  %v0_1000b118 = load i32, i32* @r28, align 4
  %v1_1000b118 = add i32 %v0_1000b118, 32
  %v2_1000b118 = inttoptr i32 %v1_1000b118 to i32*
  %v3_1000b118 = load i32, i32* %v2_1000b118, align 4
  store i32 %v3_1000b118, i32* %r0.global-to-local, align 4
  %v1_1000b11c = load i32, i32* @r29, align 4
  %v2_1000b11c = add i32 %v1_1000b11c, 48
  %v3_1000b11c = inttoptr i32 %v2_1000b11c to i32*
  store i32 %v3_1000b118, i32* %v3_1000b11c, align 4
  %v0_1000b120 = load i32, i32* @r28, align 4
  %v1_1000b120 = add i32 %v0_1000b120, 36
  %v2_1000b120 = inttoptr i32 %v1_1000b120 to i32*
  %v3_1000b120 = load i32, i32* %v2_1000b120, align 4
  store i32 %v3_1000b120, i32* %r0.global-to-local, align 4
  %v1_1000b124 = load i32, i32* @r29, align 4
  %v2_1000b124 = add i32 %v1_1000b124, 52
  %v3_1000b124 = inttoptr i32 %v2_1000b124 to i32*
  store i32 %v3_1000b120, i32* %v3_1000b124, align 4
  %v0_1000b128 = load i32, i32* @r28, align 4
  %v1_1000b128 = add i32 %v0_1000b128, 40
  %v2_1000b128 = inttoptr i32 %v1_1000b128 to i32*
  %v3_1000b128 = load i32, i32* %v2_1000b128, align 4
  store i32 %v3_1000b128, i32* %r0.global-to-local, align 4
  %v1_1000b12c = load i32, i32* @r29, align 4
  %v2_1000b12c = add i32 %v1_1000b12c, 56
  %v3_1000b12c = inttoptr i32 %v2_1000b12c to i32*
  store i32 %v3_1000b128, i32* %v3_1000b12c, align 4
  %v0_1000b130 = load i32, i32* @r28, align 4
  %v1_1000b130 = add i32 %v0_1000b130, 48
  %v2_1000b130 = inttoptr i32 %v1_1000b130 to i32*
  %v3_1000b130 = load i32, i32* %v2_1000b130, align 4
  store i32 %v3_1000b130, i32* %r0.global-to-local, align 4
  %v1_1000b134 = load i32, i32* @r29, align 4
  %v2_1000b134 = add i32 %v1_1000b134, 64
  %v3_1000b134 = inttoptr i32 %v2_1000b134 to i32*
  store i32 %v3_1000b130, i32* %v3_1000b134, align 4
  %v0_1000b138 = load i32, i32* @r28, align 4
  %v1_1000b138 = add i32 %v0_1000b138, 56
  %v2_1000b138 = inttoptr i32 %v1_1000b138 to i32*
  %v3_1000b138 = load i32, i32* %v2_1000b138, align 4
  %v1_1000b13c = load i32, i32* @r29, align 4
  %v2_1000b13c = add i32 %v1_1000b13c, 72
  %v3_1000b13c = inttoptr i32 %v2_1000b13c to i32*
  store i32 %v3_1000b138, i32* %v3_1000b13c, align 4
  store i32 %v0_1000b0a8, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000b0c8

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 19, 13, 14, 2, 21, 12, 15, 0, 1, 16, 17, 18, 3, 4, 20, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 56, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 40, { 9, 0, 4, 1, 5, 6, 7, 8, 10, 3, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 3, 4, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 36, { 5, 6, 2, 3, 0, 1, 4 }
  uselistorder i32 24, { 19, 20, 6, 7, 0, 1, 8, 29, 30, 31, 21, 22, 23, 9, 10, 11, 12, 13, 15, 16, 17, 18, 14, 24, 25, 2, 26, 3, 27, 4, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 5 }
  uselistorder i32 20, { 28, 29, 19, 20, 21, 22, 30, 31, 32, 33, 5, 23, 0, 1, 24, 25, 2, 26, 27, 6, 7, 8, 9, 34, 10, 35, 36, 37, 38, 39, 11, 40, 41, 42, 43, 44, 45, 46, 47, 12, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 13, 58, 59, 60, 61, 62, 63, 64, 65, 14, 66, 67, 68, 69, 70, 71, 15, 72, 73, 74, 75, 76, 77, 78, 16, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 3, 17, 91, 92, 93, 4, 18, 94, 95, 96 }
  uselistorder i32 16, { 94, 95, 79, 80, 96, 97, 98, 99, 100, 20, 93, 81, 178, 179, 101, 102, 46, 47, 48, 82, 49, 50, 83, 84, 106, 103, 85, 51, 87, 23, 88, 89, 18, 0, 19, 1, 2, 90, 3, 86, 92, 52, 91, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 24, 161, 162, 163, 164, 165, 4, 25, 104, 5, 6, 105, 107, 108, 26, 109, 110, 111, 112, 113, 114, 115, 27, 116, 117, 118, 29, 119, 28, 120, 121, 31, 122, 123, 7, 124, 125, 126, 30, 127, 128, 33, 129, 130, 131, 132, 133, 32, 37, 134, 135, 136, 8, 137, 138, 9, 10, 21, 140, 139, 34, 36, 35, 41, 141, 142, 143, 11, 144, 145, 12, 13, 22, 147, 146, 38, 40, 39, 148, 43, 149, 42, 150, 151, 14, 152, 44, 153, 154, 155, 15, 156, 159, 160, 157, 158, 166, 167, 16, 168, 45, 169, 170, 171, 17, 172, 175, 176, 173, 174, 177 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b154() local_unnamed_addr {
dec_label_pc_1000b154:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000b154 = load i32, i32* @r5, align 4
  %v1_1000b154 = call i32 @__asm_rlwinm.(i32 %v0_1000b154, i32 29, i32 3, i32 31)
  store i32 %v1_1000b154, i32* %r9.global-to-local, align 4
  %v4_1000b154 = icmp eq i32 %v1_1000b154, 0
  %v0_1000b158 = load i32, i32* @r4, align 4
  %v1_1000b158 = add i32 %v0_1000b158, -4
  store i32 %v1_1000b158, i32* %r4.global-to-local, align 4
  %v0_1000b15c = load i32, i32* @r3, align 4
  %v1_1000b15c = add i32 %v0_1000b15c, -4
  store i32 %v1_1000b15c, i32* @r11, align 4
  br i1 %v4_1000b154, label %dec_label_pc_1000b184, label %dec_label_pc_1000b164

dec_label_pc_1000b164:                            ; preds = %dec_label_pc_1000b154
  %v1_1000b164 = urem i32 %v1_1000b15c, 4
  %v3_1000b164 = icmp eq i32 %v1_1000b164, 0
  br i1 %v3_1000b164, label %dec_label_pc_1000b16c, label %dec_label_pc_1000b1c0

dec_label_pc_1000b16c:                            ; preds = %dec_label_pc_1000b1e0.dec_label_pc_1000b16c_crit_edge, %dec_label_pc_1000b164
  %v1_1000b178.pre = phi i32 [ %v1_1000b15c, %dec_label_pc_1000b164 ], [ %v1_1000b178.pre.pre, %dec_label_pc_1000b1e0.dec_label_pc_1000b16c_crit_edge ]
  %v0_1000b16c = phi i32 [ %v1_1000b154, %dec_label_pc_1000b164 ], [ %v1_1000b1e0, %dec_label_pc_1000b1e0.dec_label_pc_1000b16c_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000b164 ], [ %v2_1000b1c8, %dec_label_pc_1000b1e0.dec_label_pc_1000b16c_crit_edge ]
  store i32 %v0_1000b16c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b170

dec_label_pc_1000b170:                            ; preds = %dec_label_pc_1000b170, %dec_label_pc_1000b16c
  %v1_1000b178 = phi i32 [ %v2_1000b17c, %dec_label_pc_1000b170 ], [ %v1_1000b178.pre, %dec_label_pc_1000b16c ]
  %v0_1000b170 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b170 = add i32 %v0_1000b170, 4
  %v2_1000b170 = inttoptr i32 %v1_1000b170 to i32*
  %v3_1000b170 = load i32, i32* %v2_1000b170, align 4
  %v1_1000b174 = add i32 %v0_1000b170, 8
  %v2_1000b174 = inttoptr i32 %v1_1000b174 to i32*
  %v3_1000b174 = load i32, i32* %v2_1000b174, align 4
  store i32 %v3_1000b174, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b174, i32* %r4.global-to-local, align 4
  %v2_1000b178 = add i32 %v1_1000b178, 4
  %v3_1000b178 = inttoptr i32 %v2_1000b178 to i32*
  store i32 %v3_1000b170, i32* %v3_1000b178, align 4
  %v0_1000b17c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b17c = load i32, i32* @r11, align 4
  %v2_1000b17c = add i32 %v1_1000b17c, 8
  %v3_1000b17c = inttoptr i32 %v2_1000b17c to i32*
  store i32 %v0_1000b17c, i32* %v3_1000b17c, align 4
  store i32 %v2_1000b17c, i32* @r11, align 4
  %v0_1000b180 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b180 = add i32 %v0_1000b180, -1
  store i32 %v1_1000b180, i32* %ctr.global-to-local, align 4
  %v2_1000b180 = icmp eq i32 %v1_1000b180, 0
  br i1 %v2_1000b180, label %dec_label_pc_1000b184, label %dec_label_pc_1000b170

dec_label_pc_1000b184:                            ; preds = %dec_label_pc_1000b170, %dec_label_pc_1000b1e0, %dec_label_pc_1000b154
  %.1 = phi i32 [ undef, %dec_label_pc_1000b154 ], [ %v2_1000b1c8, %dec_label_pc_1000b1e0 ], [ %.0, %dec_label_pc_1000b170 ]
  %v1_1000b184 = urem i32 %.1, 8
  store i32 %v1_1000b184, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000b184, 4
  br i1 %tmp, label %dec_label_pc_1000b19c, label %dec_label_pc_1000b190

dec_label_pc_1000b190:                            ; preds = %dec_label_pc_1000b184
  %v0_1000b190 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b190 = add i32 %v0_1000b190, 4
  %v2_1000b190 = inttoptr i32 %v1_1000b190 to i32*
  %v3_1000b190 = load i32, i32* %v2_1000b190, align 4
  store i32 %v1_1000b190, i32* %r4.global-to-local, align 4
  %v1_1000b194 = add nsw i32 %v1_1000b184, -4
  store i32 %v1_1000b194, i32* @r5, align 4
  %v1_1000b198 = load i32, i32* @r11, align 4
  %v2_1000b198 = add i32 %v1_1000b198, 4
  %v3_1000b198 = inttoptr i32 %v2_1000b198 to i32*
  store i32 %v3_1000b190, i32* %v3_1000b198, align 4
  store i32 %v2_1000b198, i32* @r11, align 4
  %v0_1000b19c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000b19c

dec_label_pc_1000b19c:                            ; preds = %dec_label_pc_1000b184, %dec_label_pc_1000b190
  %v0_1000b19c = phi i32 [ %v1_1000b184, %dec_label_pc_1000b184 ], [ %v0_1000b19c.pre, %dec_label_pc_1000b190 ]
  %v3_1000b19c = icmp eq i32 %v0_1000b19c, 0
  %v0_1000b1a0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b19c, i32 %v0_1000b1a0)
  %v0_1000b1a4 = load i32, i32* @r5, align 4
  store i32 %v0_1000b1a4, i32* %ctr.global-to-local, align 4
  %v0_1000b1a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b1a8 = add i32 %v0_1000b1a8, 3
  store i32 %v1_1000b1a8, i32* %r4.global-to-local, align 4
  %v0_1000b1ac = load i32, i32* @r11, align 4
  %v1_1000b1ac = add i32 %v0_1000b1ac, 3
  store i32 %v1_1000b1ac, i32* %r9.global-to-local, align 4
  %v1_1000b1b09 = add i32 %v0_1000b1a8, 4
  %v2_1000b1b010 = inttoptr i32 %v1_1000b1b09 to i8*
  %v3_1000b1b011 = load i8, i8* %v2_1000b1b010, align 1
  store i32 %v1_1000b1b09, i32* %r4.global-to-local, align 4
  %v3_1000b1b413 = add i32 %v0_1000b1ac, 4
  %v4_1000b1b414 = inttoptr i32 %v3_1000b1b413 to i8*
  store i8 %v3_1000b1b011, i8* %v4_1000b1b414, align 1
  store i32 %v3_1000b1b413, i32* %r9.global-to-local, align 4
  %v0_1000b1b815 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b1b816 = add i32 %v0_1000b1b815, -1
  store i32 %v1_1000b1b816, i32* %ctr.global-to-local, align 4
  %v2_1000b1b817 = icmp eq i32 %v1_1000b1b816, 0
  br i1 %v2_1000b1b817, label %dec_label_pc_1000b1ec, label %dec_label_pc_1000b1b0.dec_label_pc_1000b1b0_crit_edge

dec_label_pc_1000b1b0.dec_label_pc_1000b1b0_crit_edge: ; preds = %dec_label_pc_1000b19c, %dec_label_pc_1000b1b0.dec_label_pc_1000b1b0_crit_edge
  %v3_1000b1b418 = phi i32 [ %v3_1000b1b4, %dec_label_pc_1000b1b0.dec_label_pc_1000b1b0_crit_edge ], [ %v3_1000b1b413, %dec_label_pc_1000b19c ]
  %v0_1000b1b0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b1b0 = add i32 %v0_1000b1b0.pre, 1
  %v2_1000b1b0 = inttoptr i32 %v1_1000b1b0 to i8*
  %v3_1000b1b0 = load i8, i8* %v2_1000b1b0, align 1
  store i32 %v1_1000b1b0, i32* %r4.global-to-local, align 4
  %v3_1000b1b4 = add i32 %v3_1000b1b418, 1
  %v4_1000b1b4 = inttoptr i32 %v3_1000b1b4 to i8*
  store i8 %v3_1000b1b0, i8* %v4_1000b1b4, align 1
  store i32 %v3_1000b1b4, i32* %r9.global-to-local, align 4
  %v0_1000b1b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b1b8 = add i32 %v0_1000b1b8, -1
  store i32 %v1_1000b1b8, i32* %ctr.global-to-local, align 4
  %v2_1000b1b8 = icmp eq i32 %v1_1000b1b8, 0
  br i1 %v2_1000b1b8, label %dec_label_pc_1000b1ec, label %dec_label_pc_1000b1b0.dec_label_pc_1000b1b0_crit_edge

dec_label_pc_1000b1c0:                            ; preds = %dec_label_pc_1000b164
  %v1_1000b1c0 = sub nsw i32 4, %v1_1000b164
  store i32 %v1_1000b1c0, i32* %ctr.global-to-local, align 4
  %v1_1000b1c8 = load i32, i32* @r5, align 4
  %v2_1000b1c8 = sub i32 %v1_1000b1c8, %v1_1000b1c0
  br label %dec_label_pc_1000b1cc

dec_label_pc_1000b1cc:                            ; preds = %dec_label_pc_1000b1cc.dec_label_pc_1000b1cc_crit_edge, %dec_label_pc_1000b1c0
  %v2_1000b1d4 = phi i32 [ %v1_1000b1d8, %dec_label_pc_1000b1cc.dec_label_pc_1000b1cc_crit_edge ], [ %v1_1000b15c, %dec_label_pc_1000b1c0 ]
  %v0_1000b1cc = phi i32 [ %v0_1000b1cc.pre, %dec_label_pc_1000b1cc.dec_label_pc_1000b1cc_crit_edge ], [ %v1_1000b158, %dec_label_pc_1000b1c0 ]
  %v1_1000b1cc = add i32 %v0_1000b1cc, 4
  %v2_1000b1cc = inttoptr i32 %v1_1000b1cc to i8*
  %v3_1000b1cc = load i8, i8* %v2_1000b1cc, align 1
  %v1_1000b1d0 = add i32 %v0_1000b1cc, 1
  store i32 %v1_1000b1d0, i32* %r4.global-to-local, align 4
  %v3_1000b1d4 = add i32 %v2_1000b1d4, 4
  %v4_1000b1d4 = inttoptr i32 %v3_1000b1d4 to i8*
  store i8 %v3_1000b1cc, i8* %v4_1000b1d4, align 1
  %v0_1000b1d8 = load i32, i32* @r11, align 4
  %v1_1000b1d8 = add i32 %v0_1000b1d8, 1
  store i32 %v1_1000b1d8, i32* @r11, align 4
  %v0_1000b1dc = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b1dc = add i32 %v0_1000b1dc, -1
  store i32 %v1_1000b1dc, i32* %ctr.global-to-local, align 4
  %v2_1000b1dc = icmp eq i32 %v1_1000b1dc, 0
  br i1 %v2_1000b1dc, label %dec_label_pc_1000b1e0, label %dec_label_pc_1000b1cc.dec_label_pc_1000b1cc_crit_edge

dec_label_pc_1000b1cc.dec_label_pc_1000b1cc_crit_edge: ; preds = %dec_label_pc_1000b1cc
  %v0_1000b1cc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b1cc

dec_label_pc_1000b1e0:                            ; preds = %dec_label_pc_1000b1cc
  %v1_1000b1e0 = call i32 @__asm_rlwinm.(i32 %v2_1000b1c8, i32 29, i32 3, i32 31)
  store i32 %v1_1000b1e0, i32* %r9.global-to-local, align 4
  %v4_1000b1e0 = icmp eq i32 %v1_1000b1e0, 0
  br i1 %v4_1000b1e0, label %dec_label_pc_1000b184, label %dec_label_pc_1000b1e0.dec_label_pc_1000b16c_crit_edge

dec_label_pc_1000b1e0.dec_label_pc_1000b16c_crit_edge: ; preds = %dec_label_pc_1000b1e0
  %v1_1000b178.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000b16c

dec_label_pc_1000b1ec:                            ; preds = %dec_label_pc_1000b1b0.dec_label_pc_1000b1b0_crit_edge, %dec_label_pc_1000b19c
  %v0_1000b1ec = load i32, i32* @r3, align 4
  ret i32 %v0_1000b1ec

; uselistorder directives
  uselistorder i32 %v1_1000b1e0, { 1, 2, 0 }
  uselistorder i32 %v1_1000b1dc, { 1, 0 }
  uselistorder i32 %v1_1000b1d8, { 1, 0 }
  uselistorder i32 %v0_1000b1cc, { 1, 0 }
  uselistorder i32 %v2_1000b1c8, { 2, 1, 0 }
  uselistorder i32 %v1_1000b1b8, { 1, 0 }
  uselistorder i32 %v3_1000b1b4, { 1, 2, 0 }
  uselistorder i32 %v1_1000b184, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000b180, { 1, 0 }
  uselistorder i32 %v2_1000b17c, { 1, 2, 0 }
  uselistorder i32 %v1_1000b164, { 1, 0 }
  uselistorder i32 %v1_1000b15c, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32 29, { 30, 31, 26, 28, 27, 29, 0, 1, 34, 35, 32, 33, 36, 37, 24, 25, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22, 23, 12, 13, 16, 17, 18, 19, 14, 15, 20, 21 }
  uselistorder label %dec_label_pc_1000b1b0.dec_label_pc_1000b1b0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b19c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b184, { 1, 0, 2 }
}

define i32 @function_1000b1f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000b1f0:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268481036, i32* @lr, align 4
  %v0_1000b208 = call i32 @function_1000b154()
  %v0_1000b210 = load i32, i32* @r28, align 4
  %v1_1000b210 = load i32, i32* @r29, align 4
  %v2_1000b210 = add i32 %v1_1000b210, %v0_1000b210
  ret i32 %v2_1000b210

; uselistorder directives
  uselistorder i32* @r28, { 16, 17, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 1, 73, 74, 75, 76, 77, 78, 295, 296, 297, 298, 299, 2, 50, 51, 52, 7, 53, 259, 260, 261, 262, 263, 264, 265, 266, 267, 281, 282, 283, 284, 18, 19, 20, 21, 22, 79, 80, 23, 8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 33, 34, 27, 3, 28, 29, 30, 31, 32, 4, 45, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 81, 82, 83, 84, 85, 86, 87, 5, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 285, 286, 288, 289, 6, 290, 291, 292, 293, 294 }
}

define i32 @function_1000b224(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000b224:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000b224 = icmp eq i8* %arg1, null
  br i1 %v3_1000b224, label %dec_label_pc_1000b2dc, label %dec_label_pc_1000b22c

dec_label_pc_1000b22c:                            ; preds = %dec_label_pc_1000b224
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000b240.pre = load i32, i32* bitcast (i32** @global_var_1001bd5c.314 to i32*), align 4
  br label %dec_label_pc_1000b23c

dec_label_pc_1000b23c:                            ; preds = %dec_label_pc_1000b22c, %dec_label_pc_1000b2b4
  %v0_1000b2b4 = phi i32 [ 0, %dec_label_pc_1000b22c ], [ %v2_1000b2bc, %dec_label_pc_1000b2b4 ]
  %v0_1000b2b8 = phi i32 [ 1, %dec_label_pc_1000b22c ], [ %v1_1000b2b8, %dec_label_pc_1000b2b4 ]
  %v0_1000b23c = phi i32 [ %tmp, %dec_label_pc_1000b22c ], [ %v0_1000b23c3, %dec_label_pc_1000b2b4 ]
  %v1_1000b23c = inttoptr i32 %v0_1000b23c to i8*
  %v2_1000b23c = load i8, i8* %v1_1000b23c, align 1
  %v3_1000b23c = zext i8 %v2_1000b23c to i32
  %v1_1000b244 = mul nuw nsw i32 %v3_1000b23c, 2
  %v2_1000b248 = add i32 %v1_1000b244, %v3_1000b240.pre
  %v3_1000b248 = inttoptr i32 %v2_1000b248 to i16*
  %v4_1000b248 = load i16, i16* %v3_1000b248, align 2
  %v1_1000b24c = and i16 %v4_1000b248, 8
  %v3_1000b24c = icmp eq i16 %v1_1000b24c, 0
  br i1 %v3_1000b24c, label %dec_label_pc_1000b2dc, label %dec_label_pc_1000b254

dec_label_pc_1000b254:                            ; preds = %dec_label_pc_1000b23c
  br label %dec_label_pc_1000b26c

dec_label_pc_1000b25c:                            ; preds = %dec_label_pc_1000b26c
  %v1_1000b270 = mul i32 %v1_1000b2bc, 10
  %v2_1000b278 = add i32 %v3_1000b26c, %v1_1000b270
  %v1_1000b25c = add i32 %v2_1000b278, -48
  %v1_1000b260 = add i32 %v0_1000b2a4, 1
  %v2_1000b264 = icmp sgt i32 %v1_1000b25c, 255
  br i1 %v2_1000b264, label %dec_label_pc_1000b2dc, label %dec_label_pc_1000b26c

dec_label_pc_1000b26c:                            ; preds = %dec_label_pc_1000b25c, %dec_label_pc_1000b254
  %v1_1000b2bc = phi i32 [ %v1_1000b25c, %dec_label_pc_1000b25c ], [ 0, %dec_label_pc_1000b254 ]
  %v0_1000b2a4 = phi i32 [ %v1_1000b260, %dec_label_pc_1000b25c ], [ %v0_1000b23c, %dec_label_pc_1000b254 ]
  %v1_1000b26c = inttoptr i32 %v0_1000b2a4 to i8*
  %v2_1000b26c = load i8, i8* %v1_1000b26c, align 1
  %v3_1000b26c = zext i8 %v2_1000b26c to i32
  %v1_1000b274 = mul nuw nsw i32 %v3_1000b26c, 2
  %v2_1000b27c = add i32 %v1_1000b274, %v3_1000b240.pre
  %v3_1000b27c = inttoptr i32 %v2_1000b27c to i16*
  %v4_1000b27c = load i16, i16* %v3_1000b27c, align 2
  %v5_1000b27c = zext i16 %v4_1000b27c to i32
  %v1_1000b280 = and i32 %v5_1000b27c, 8
  %v3_1000b280 = icmp eq i32 %v1_1000b280, 0
  br i1 %v3_1000b280, label %dec_label_pc_1000b288, label %dec_label_pc_1000b25c

dec_label_pc_1000b288:                            ; preds = %dec_label_pc_1000b26c
  %v2_1000b288 = icmp sgt i32 %v0_1000b2b8, 3
  br i1 %v2_1000b288, label %dec_label_pc_1000b2a0, label %dec_label_pc_1000b290

dec_label_pc_1000b290:                            ; preds = %dec_label_pc_1000b288
  %v3_1000b290 = icmp eq i8 %v2_1000b26c, 46
  br i1 %v3_1000b290, label %dec_label_pc_1000b298, label %dec_label_pc_1000b2dc

dec_label_pc_1000b298:                            ; preds = %dec_label_pc_1000b290
  %v1_1000b298 = add i32 %v0_1000b2a4, 1
  br label %dec_label_pc_1000b2b4

dec_label_pc_1000b2a0:                            ; preds = %dec_label_pc_1000b288
  %v3_1000b2a0 = icmp eq i8 %v2_1000b26c, 0
  %v1_1000b2a4 = add i32 %v0_1000b2a4, 1
  br i1 %v3_1000b2a0, label %dec_label_pc_1000b2b4, label %dec_label_pc_1000b2ac

dec_label_pc_1000b2ac:                            ; preds = %dec_label_pc_1000b2a0
  %v1_1000b2ac = and i32 %v5_1000b27c, 32
  %v3_1000b2ac = icmp eq i32 %v1_1000b2ac, 0
  br i1 %v3_1000b2ac, label %dec_label_pc_1000b2dc, label %dec_label_pc_1000b2b4

dec_label_pc_1000b2b4:                            ; preds = %dec_label_pc_1000b2ac, %dec_label_pc_1000b2a0, %dec_label_pc_1000b298
  %v0_1000b23c3 = phi i32 [ %v1_1000b2a4, %dec_label_pc_1000b2ac ], [ %v1_1000b2a4, %dec_label_pc_1000b2a0 ], [ %v1_1000b298, %dec_label_pc_1000b298 ]
  %v1_1000b2b4 = mul i32 %v0_1000b2b4, 256
  %v1_1000b2b8 = add nuw nsw i32 %v0_1000b2b8, 1
  %v2_1000b2bc = or i32 %v1_1000b2bc, %v1_1000b2b4
  store i32 %v2_1000b2bc, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000b2b8, 5
  br i1 %tmp10, label %dec_label_pc_1000b23c, label %dec_label_pc_1000b2c8

dec_label_pc_1000b2c8:                            ; preds = %dec_label_pc_1000b2b4
  %v0_1000b2c8 = load i32, i32* @r4, align 4
  %v3_1000b2c8 = icmp eq i32 %v0_1000b2c8, 0
  %v0_1000b2d0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b2c8, i32 %v0_1000b2d0)
  %v0_1000b2d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b2d4 = load i32, i32* @r4, align 4
  %v2_1000b2d4 = inttoptr i32 %v1_1000b2d4 to i32*
  store i32 %v0_1000b2d4, i32* %v2_1000b2d4, align 4
  ret i32 1

dec_label_pc_1000b2dc:                            ; preds = %dec_label_pc_1000b290, %dec_label_pc_1000b2ac, %dec_label_pc_1000b23c, %dec_label_pc_1000b25c, %dec_label_pc_1000b224
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000b2bc, { 1, 0 }
  uselistorder i32 %v1_1000b2b8, { 1, 0 }
  uselistorder i32 %v0_1000b2a4, { 0, 1, 3, 2 }
  uselistorder i32 5, { 23, 5, 24, 25, 41, 26, 27, 42, 43, 3, 2, 1, 44, 6, 7, 0, 45, 46, 4, 47, 28, 29, 30, 31, 32, 33, 34, 48, 8, 10, 49, 9, 50, 13, 51, 12, 52, 11, 35, 53, 14, 16, 54, 36, 55, 15, 37, 56, 17, 38, 57, 18, 39, 58, 20, 59, 19, 40, 60, 22, 61, 21, 62, 63, 64, 65, 66 }
  uselistorder i8 0, { 5, 10, 0, 11, 12, 8, 13, 14, 1, 15, 16, 17, 18, 19, 21, 23, 20, 2, 22, 3, 24, 25, 6, 9, 26, 27, 28, 29, 30, 31, 32, 4, 33, 34, 35, 36, 7, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i8 46, { 1, 2, 3, 0 }
  uselistorder i32 8, { 119, 3, 133, 134, 56, 37, 38, 57, 58, 59, 60, 61, 62, 137, 138, 11, 135, 136, 12, 123, 122, 120, 121, 104, 105, 106, 124, 125, 126, 127, 128, 129, 4, 39, 40, 41, 5, 139, 6, 63, 64, 65, 66, 67, 68, 28, 29, 42, 30, 31, 43, 32, 33, 44, 45, 7, 8, 9, 46, 47, 48, 49, 52, 51, 50, 53, 54, 55, 15, 69, 70, 16, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 34, 83, 84, 85, 86, 87, 88, 89, 90, 35, 91, 92, 93, 94, 95, 96, 97, 98, 99, 13, 100, 101, 102, 103, 14, 17, 107, 18, 108, 19, 109, 20, 110, 21, 111, 22, 112, 23, 113, 114, 24, 115, 25, 116, 26, 117, 27, 118, 0, 1, 10, 130, 131, 36, 132, 2 }
  uselistorder i32 255, { 2, 0, 1 }
  uselistorder i32 -48, { 2, 0, 1 }
  uselistorder i32 10, { 69, 31, 9, 30, 2, 3, 6, 5, 0, 10, 17, 18, 19, 20, 21, 11, 22, 23, 24, 12, 13, 25, 26, 29, 27, 4, 28, 14, 1, 15, 7, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 8, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 16, 68 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 13 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000b2dc, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000b23c, { 1, 0 }
}

define i32 @function_1000b2e4(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b2e4:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000b2e8 = load i32, i32* @lr, align 4
  store i32 %v0_1000b2e8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b2f4 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000b304 = add i32 %tmp, 4
  store i32 %v1_1000b304, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000b30c = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000b30c, i32* @r3, align 4
  br i1 %v3_1000b2f4, label %dec_label_pc_1000b334, label %dec_label_pc_1000b314

dec_label_pc_1000b314:                            ; preds = %dec_label_pc_1000b2e4
  %v2_1000b314 = load i32, i32* %arg2, align 4
  store i32 %v2_1000b314, i32* %r0.global-to-local, align 4
  store i32 268481312, i32* @lr, align 4
  %v0_1000b31c = call i32 @function_1000b154()
  %v0_1000b320 = load i32, i32* @r31, align 4
  %v1_1000b320 = add i32 %v0_1000b320, 132
  %v2_1000b320 = inttoptr i32 %v1_1000b320 to i32*
  %v3_1000b320 = load i32, i32* %v2_1000b320, align 4
  store i32 %v3_1000b320, i32* %r0.global-to-local, align 4
  %v1_1000b32c = add i32 %v0_1000b320, 136
  %v2_1000b32c = inttoptr i32 %v1_1000b32c to i32*
  %v3_1000b32c = load i32, i32* %v2_1000b32c, align 4
  store i32 %v3_1000b32c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b334

dec_label_pc_1000b334:                            ; preds = %dec_label_pc_1000b2e4, %dec_label_pc_1000b314
  store i32 268481364, i32* @lr, align 4
  %v0_1000b350 = call i32 @function_1000b548()
  %v0_1000b354 = load i32, i32* @r30, align 4
  %v3_1000b354 = icmp eq i32 %v0_1000b354, 0
  store i32 %v0_1000b350, i32* @r31, align 4
  br i1 %v3_1000b354, label %dec_label_pc_1000b390, label %dec_label_pc_1000b364

dec_label_pc_1000b364:                            ; preds = %dec_label_pc_1000b334
  %v1_1000b35c = icmp slt i32 %v0_1000b350, 0
  %v1_1000b364 = add i32 %v0_1000b354, 4
  store i32 %v1_1000b364, i32* @r3, align 4
  %v2_1000b368 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000b368, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000b35c, label %dec_label_pc_1000b390, label %dec_label_pc_1000b374

dec_label_pc_1000b374:                            ; preds = %dec_label_pc_1000b364
  %v3_1000b374 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000b374, i32* %r0.global-to-local, align 4
  %v2_1000b378 = inttoptr i32 %v0_1000b354 to i32*
  store i32 %v3_1000b374, i32* %v2_1000b378, align 4
  store i32 268481408, i32* @lr, align 4
  %v0_1000b37c = call i32 @function_1000b154()
  %v1_1000b388 = load i32, i32* @r30, align 4
  %v2_1000b388 = add i32 %v1_1000b388, 136
  %v3_1000b388 = inttoptr i32 %v2_1000b388 to i32*
  %v0_1000b38c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b38c = load i32, i32* @r30, align 4
  %v2_1000b38c = add i32 %v1_1000b38c, 132
  %v3_1000b38c = inttoptr i32 %v2_1000b38c to i32*
  store i32 %v0_1000b38c, i32* %v3_1000b38c, align 4
  %v0_1000b394.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b390

dec_label_pc_1000b390:                            ; preds = %dec_label_pc_1000b364, %dec_label_pc_1000b334, %dec_label_pc_1000b374
  %v0_1000b394 = phi i32 [ %v0_1000b350, %dec_label_pc_1000b364 ], [ %v0_1000b350, %dec_label_pc_1000b334 ], [ %v0_1000b394.pre, %dec_label_pc_1000b374 ]
  store i32 %v0_1000b2e8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b394

; uselistorder directives
  uselistorder i32 %v0_1000b350, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000b154, { 1, 0, 6, 4, 2, 3, 5, 7 }
  uselistorder i32* @r5, { 20, 21, 1, 22, 23, 0, 24, 25, 26, 9, 10, 11, 29, 19, 7, 8, 30, 31, 32, 33, 3, 12, 6, 27, 28, 2, 4, 5, 13, 17, 18, 15, 16, 14 }
  uselistorder i32 128, { 7, 8, 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* @r30, { 163, 164, 165, 166, 0, 145, 1, 50, 51, 52, 167, 170, 168, 169, 146, 147, 148, 140, 141, 142, 143, 144, 149, 150, 154, 151, 152, 153, 7, 8, 9, 10, 11, 12, 13, 2, 14, 15, 16, 17, 18, 19, 20, 3, 21, 28, 29, 22, 23, 24, 4, 25, 26, 27, 40, 41, 42, 43, 44, 45, 46, 47, 48, 30, 32, 33, 31, 34, 35, 36, 37, 38, 39, 49, 53, 54, 55, 56, 57, 58, 59, 5, 60, 61, 6, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 156, 157, 155, 158, 159, 160, 161, 162 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* @r31, { 3, 333, 334, 335, 312, 4, 313, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 342, 343, 336, 10, 337, 338, 339, 340, 341, 106, 107, 314, 315, 316, 317, 318, 319, 304, 305, 306, 307, 308, 309, 310, 311, 320, 321, 322, 326, 323, 324, 325, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 140, 5, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 21, 22, 23, 24, 155, 156, 157, 158, 159, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 6, 45, 46, 47, 48, 49, 50, 51, 61, 62, 63, 64, 65, 66, 67, 52, 53, 54, 55, 56, 57, 58, 59, 60, 95, 96, 0, 97, 7, 98, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 108, 1, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 160, 161, 162, 163, 164, 165, 166, 167, 168, 2, 8, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 9, 327, 328, 329, 330, 331, 332 }
  uselistorder label %dec_label_pc_1000b390, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b334, { 1, 0 }
}

define i32 @function_1000b3a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b3dc.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000b3c0 = call i32 @function_1000a700()
  %v2_1000b3c8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000b3c8, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000b3e033 = add i32 %v2_1000b3c8, 124
  %v4_1000b3e034 = inttoptr i32 %v3_1000b3e033 to i32*
  store i32 0, i32* %v4_1000b3e034, align 4
  %v0_1000b3e435 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b3e436 = add i32 %v0_1000b3e435, -1
  store i32 %v1_1000b3e436, i32* %r9.global-to-local, align 4
  %v0_1000b3e837 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b3e838 = add i32 %v0_1000b3e837, -1
  store i32 %v1_1000b3e838, i32* %ctr.global-to-local, align 4
  %v2_1000b3e839 = icmp eq i32 %v1_1000b3e838, 0
  br i1 %v2_1000b3e839, label %dec_label_pc_1000b3ec, label %dec_label_pc_1000b3dc.dec_label_pc_1000b3dc_crit_edge

dec_label_pc_1000b3dc.dec_label_pc_1000b3dc_crit_edge: ; preds = %dec_label_pc_1000b3dc.lr.ph, %dec_label_pc_1000b3dc.dec_label_pc_1000b3dc_crit_edge
  %v1_1000b3e440 = phi i32 [ %v1_1000b3e4, %dec_label_pc_1000b3dc.dec_label_pc_1000b3dc_crit_edge ], [ %v1_1000b3e436, %dec_label_pc_1000b3dc.lr.ph ]
  %v0_1000b3e0.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b3e0.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b3dc = mul i32 %v1_1000b3e440, 4
  %v3_1000b3e0 = add i32 %v1_1000b3dc, %v1_1000b3e0.pre
  %v4_1000b3e0 = inttoptr i32 %v3_1000b3e0 to i32*
  store i32 %v0_1000b3e0.pre, i32* %v4_1000b3e0, align 4
  %v0_1000b3e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b3e4 = add i32 %v0_1000b3e4, -1
  store i32 %v1_1000b3e4, i32* %r9.global-to-local, align 4
  %v0_1000b3e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b3e8 = add i32 %v0_1000b3e8, -1
  store i32 %v1_1000b3e8, i32* %ctr.global-to-local, align 4
  %v2_1000b3e8 = icmp eq i32 %v1_1000b3e8, 0
  br i1 %v2_1000b3e8, label %dec_label_pc_1000b3ec, label %dec_label_pc_1000b3dc.dec_label_pc_1000b3dc_crit_edge

dec_label_pc_1000b3ec:                            ; preds = %dec_label_pc_1000b3dc.dec_label_pc_1000b3dc_crit_edge, %dec_label_pc_1000b3dc.lr.ph
  store i32 %v2_1000b3c8, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000b3f4 = call i32 @function_10009b54()
  %v3_1000b3f8 = icmp eq i32 %v0_1000b3f4, 0
  br i1 %v3_1000b3f8, label %dec_label_pc_1000b400, label %dec_label_pc_1000b410

dec_label_pc_1000b400:                            ; preds = %dec_label_pc_1000b3ec
  store i32 268481552, i32* @lr, align 4
  %v3_1000b40c = call i32 @function_10008ff0(i32 1, i32 %v2_1000b3c8, i32 0)
  br label %dec_label_pc_1000b410

dec_label_pc_1000b410:                            ; preds = %dec_label_pc_1000b3ec, %dec_label_pc_1000b400
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b414 = load i32, i32* @global_var_1001bdc4.335, align 4
  %v3_1000b418 = icmp eq i32 %v3_1000b414, 0
  br i1 %v3_1000b418, label %dec_label_pc_1000b420, label %dec_label_pc_1000b448

dec_label_pc_1000b420:                            ; preds = %dec_label_pc_1000b410
  store i32 1, i32* @global_var_1001bdc4.335, align 4
  br label %dec_label_pc_1000b428

dec_label_pc_1000b428:                            ; preds = %dec_label_pc_1000b4a4, %dec_label_pc_1000b420
  store i32 ptrtoint (i32* @global_var_1001bd28.333 to i32), i32* %r29.global-to-local, align 4
  %v0_1000b434 = call i32 @function_1000a700()
  store i32 268481600, i32* @lr, align 4
  %v1_1000b43c = call i32 @function_1000b590(i32 6)
  %v0_1000b444 = call i32 @function_1000a700()
  %v3_1000b44c.pre = load i32, i32* @global_var_1001bdc4.335, align 4
  br label %dec_label_pc_1000b448

dec_label_pc_1000b448:                            ; preds = %dec_label_pc_1000b410, %dec_label_pc_1000b428
  %v0_1000b4c0 = phi i32 [ %v3_1000b414, %dec_label_pc_1000b410 ], [ %v3_1000b44c.pre, %dec_label_pc_1000b428 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b450 = icmp eq i32 %v0_1000b4c0, 1
  br i1 %v3_1000b450, label %dec_label_pc_1000b490.lr.ph, label %dec_label_pc_1000b4c0

dec_label_pc_1000b490.lr.ph:                      ; preds = %dec_label_pc_1000b448
  %v2_1000b45c = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001bdc4.335, align 4
  store i32 ptrtoint (i32* @global_var_1000b470.337 to i32), i32* @lr, align 4
  %v3_1000b46c = call i32 @function_10009454(i32 %v2_1000b45c, i32 0, i32 140)
  store i32 %v2_1000b3c8, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000b3e033, i32* %r9.global-to-local, align 4
  %v2_1000b49825 = add i32 %v2_1000b3c8, 256
  %v3_1000b49826 = inttoptr i32 %v2_1000b49825 to i32*
  store i32 -1, i32* %v3_1000b49826, align 4
  %v0_1000b49c27 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b49c28 = add i32 %v0_1000b49c27, -1
  store i32 %v1_1000b49c28, i32* %r11.global-to-local, align 4
  %v0_1000b4a029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b4a030 = add i32 %v0_1000b4a029, -1
  store i32 %v1_1000b4a030, i32* %ctr.global-to-local, align 4
  %v2_1000b4a031 = icmp eq i32 %v1_1000b4a030, 0
  br i1 %v2_1000b4a031, label %dec_label_pc_1000b4a4, label %dec_label_pc_1000b490.dec_label_pc_1000b490_crit_edge

dec_label_pc_1000b490.dec_label_pc_1000b490_crit_edge: ; preds = %dec_label_pc_1000b490.lr.ph, %dec_label_pc_1000b490.dec_label_pc_1000b490_crit_edge
  %v1_1000b49c32 = phi i32 [ %v1_1000b49c, %dec_label_pc_1000b490.dec_label_pc_1000b490_crit_edge ], [ %v1_1000b49c28, %dec_label_pc_1000b490.lr.ph ]
  %v1_1000b494.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000b498.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b490 = mul i32 %v1_1000b49c32, 4
  %v2_1000b494 = add i32 %v1_1000b490, %v1_1000b494.pre
  store i32 %v2_1000b494, i32* %r9.global-to-local, align 4
  %v2_1000b498 = add i32 %v2_1000b494, 132
  %v3_1000b498 = inttoptr i32 %v2_1000b498 to i32*
  store i32 %v0_1000b498.pre, i32* %v3_1000b498, align 4
  %v0_1000b49c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b49c = add i32 %v0_1000b49c, -1
  store i32 %v1_1000b49c, i32* %r11.global-to-local, align 4
  %v0_1000b4a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b4a0 = add i32 %v0_1000b4a0, -1
  store i32 %v1_1000b4a0, i32* %ctr.global-to-local, align 4
  %v2_1000b4a0 = icmp eq i32 %v1_1000b4a0, 0
  br i1 %v2_1000b4a0, label %dec_label_pc_1000b4a4, label %dec_label_pc_1000b490.dec_label_pc_1000b490_crit_edge

dec_label_pc_1000b4a4:                            ; preds = %dec_label_pc_1000b490.dec_label_pc_1000b490_crit_edge, %dec_label_pc_1000b490.lr.ph
  store i32 268481724, i32* @lr, align 4
  %v4_1000b4b8 = call i32 @function_1000b2e4(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000b428

dec_label_pc_1000b4c0:                            ; preds = %dec_label_pc_1000b448
  %v3_1000b4c0 = icmp eq i32 %v0_1000b4c0, 2
  br i1 %v3_1000b4c0, label %dec_label_pc_1000b4c8, label %dec_label_pc_1000b4d4

dec_label_pc_1000b4c8:                            ; preds = %dec_label_pc_1000b4c0
  store i32 3, i32* @global_var_1001bdc4.335, align 4
  br label %dec_label_pc_1000b4d4

dec_label_pc_1000b4d4:                            ; preds = %dec_label_pc_1000b4c0, %dec_label_pc_1000b4c8
  %v3_1000b4d4 = phi i32 [ %v0_1000b4c0, %dec_label_pc_1000b4c0 ], [ 3, %dec_label_pc_1000b4c8 ]
  %v1_1000b4dc = icmp ne i32 %v3_1000b4d4, 3
  call void @__pseudo_cond_branch(i1 %v1_1000b4dc, i32 268481776)
  store i32 4, i32* @global_var_1001bdc4.335, align 4
  %v1_1000b4ec = call i32 @function_1000aaa0(i32 127)
  ret i32 %v1_1000b4ec

; uselistorder directives
  uselistorder i32 %v1_1000b4a0, { 1, 0 }
  uselistorder i32 %v1_1000b49c, { 1, 0 }
  uselistorder i32 %v1_1000b3e8, { 1, 0 }
  uselistorder i32 %v1_1000b3e4, { 1, 0 }
  uselistorder i32 %v2_1000b3c8, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000aaa0, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2 }
  uselistorder i32 3, { 0, 6, 31, 94, 97, 98, 99, 100, 92, 95, 96, 46, 102, 101, 8, 103, 104, 105, 67, 68, 1, 7, 32, 33, 47, 48, 49, 50, 2, 51, 53, 54, 55, 56, 9, 57, 34, 58, 10, 52, 65, 35, 3, 89, 36, 59, 60, 62, 63, 61, 64, 66, 4, 69, 70, 12, 37, 5, 11, 71, 14, 72, 38, 13, 73, 74, 75, 15, 39, 16, 76, 77, 78, 17, 40, 18, 79, 80, 20, 41, 19, 81, 82, 42, 83, 21, 22, 23, 84, 85, 43, 86, 24, 25, 26, 87, 88, 27, 44, 28, 90, 91, 29, 45, 30, 93 }
  uselistorder i32 (i32, i32*, i32)* @function_1000b2e4, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 72, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 75, 21, 22, 23, 24, 25, 26, 27, 28, 76, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 73, 45, 46, 47, 48, 49, 50, 51, 52, 74, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71 }
  uselistorder i32 (i32, i32, i32)* @function_10009454, { 1, 6, 9, 0, 2, 8, 7, 5, 4, 3 }
  uselistorder i32 2, { 217, 41, 0, 1, 61, 62, 218, 63, 219, 64, 220, 30, 2, 3, 4, 42, 117, 130, 221, 118, 31, 65, 43, 66, 33, 32, 34, 67, 68, 119, 45, 44, 120, 121, 69, 122, 47, 116, 5, 6, 123, 124, 39, 125, 46, 126, 70, 129, 8, 7, 72, 71, 73, 35, 204, 76, 77, 75, 74, 48, 9, 10, 11, 127, 128, 78, 49, 79, 80, 81, 82, 50, 84, 83, 85, 52, 51, 86, 87, 88, 89, 90, 91, 92, 93, 36, 40, 131, 205, 12, 37, 206, 13, 132, 133, 134, 135, 136, 137, 138, 94, 139, 140, 53, 141, 142, 143, 144, 145, 96, 146, 95, 147, 148, 149, 150, 151, 152, 153, 154, 97, 155, 54, 98, 99, 156, 157, 100, 101, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 14, 15, 16, 17, 18, 19, 102, 168, 55, 169, 170, 171, 172, 173, 20, 21, 22, 23, 24, 25, 103, 174, 56, 175, 176, 177, 178, 179, 104, 181, 180, 26, 27, 105, 182, 57, 183, 184, 185, 186, 187, 106, 189, 188, 28, 29, 107, 190, 58, 108, 109, 191, 192, 110, 111, 193, 194, 195, 196, 197, 198, 200, 201, 202, 199, 112, 203, 59, 207, 208, 209, 113, 114, 211, 212, 213, 210, 115, 214, 60, 215, 38, 216 }
  uselistorder i32* @global_var_1001bdc4.335, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 46, 47, 0, 48, 2, 1, 3, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 4, 42, 5, 43, 44, 45 }
  uselistorder i32 (i32, i32, i32)* @function_10008ff0, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_10009b54, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 76, 77, 78, 73, 74, 79, 35, 1, 36, 8, 37, 86, 85, 4, 5, 80, 82, 83, 72, 81, 9, 6, 75, 10, 11, 12, 7, 38, 39, 84, 13, 14, 15, 40, 19, 20, 21, 16, 17, 18, 27, 28, 29, 3, 66, 67, 68, 69, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 41, 0, 2, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71 }
  uselistorder i32 6, { 12, 13, 61, 1, 14, 15, 26, 16, 17, 27, 18, 19, 28, 29, 30, 2, 31, 0, 32, 33, 34, 35, 3, 36, 37, 38, 4, 39, 40, 41, 42, 5, 6, 43, 44, 45, 20, 7, 46, 47, 21, 8, 48, 22, 49, 23, 9, 50, 51, 52, 53, 24, 10, 54, 55, 56, 57, 58, 25, 11, 59, 60 }
  uselistorder i32 4, { 130, 0, 1, 369, 370, 371, 372, 373, 69, 70, 374, 375, 131, 376, 377, 2, 201, 202, 152, 153, 203, 204, 206, 378, 385, 3, 4, 5, 6, 7, 348, 350, 349, 346, 347, 317, 318, 319, 320, 351, 352, 353, 354, 355, 356, 357, 358, 359, 8, 156, 9, 79, 157, 158, 379, 380, 381, 132, 382, 383, 384, 10, 205, 133, 11, 207, 208, 209, 210, 211, 134, 135, 159, 136, 160, 161, 162, 82, 78, 163, 164, 165, 166, 154, 80, 155, 12, 168, 169, 170, 171, 167, 172, 72, 173, 71, 81, 180, 181, 182, 183, 184, 179, 174, 175, 176, 177, 178, 193, 13, 194, 14, 195, 196, 197, 73, 137, 198, 304, 185, 138, 84, 83, 85, 186, 187, 188, 74, 189, 75, 190, 191, 192, 15, 199, 200, 76, 212, 213, 214, 16, 215, 216, 217, 218, 90, 219, 220, 17, 18, 89, 221, 222, 19, 86, 88, 87, 223, 224, 20, 225, 226, 95, 227, 21, 22, 228, 94, 229, 91, 230, 93, 92, 231, 232, 233, 101, 23, 24, 234, 235, 25, 236, 237, 238, 100, 26, 27, 96, 239, 97, 99, 98, 240, 241, 242, 243, 244, 245, 139, 103, 102, 246, 247, 28, 248, 249, 250, 104, 251, 252, 29, 30, 105, 253, 106, 108, 107, 254, 255, 31, 256, 257, 113, 258, 259, 32, 33, 112, 260, 109, 111, 110, 261, 262, 263, 264, 34, 265, 266, 267, 268, 140, 269, 35, 270, 271, 36, 272, 115, 273, 114, 141, 274, 275, 276, 277, 37, 278, 279, 280, 281, 142, 282, 38, 283, 284, 39, 285, 117, 286, 116, 143, 287, 288, 289, 290, 291, 292, 144, 119, 118, 293, 294, 295, 296, 40, 298, 299, 145, 300, 301, 302, 124, 303, 41, 42, 146, 297, 123, 120, 122, 121, 305, 306, 307, 308, 309, 147, 148, 43, 311, 312, 149, 313, 314, 315, 129, 316, 44, 45, 150, 310, 128, 125, 127, 126, 46, 321, 322, 47, 48, 323, 324, 49, 50, 325, 326, 51, 52, 327, 328, 53, 54, 329, 330, 55, 56, 331, 332, 57, 333, 58, 334, 335, 59, 60, 336, 337, 61, 62, 338, 339, 63, 64, 340, 341, 65, 66, 342, 343, 67, 344, 345, 360, 361, 362, 363, 364, 365, 77, 366, 68, 367, 368, 151 }
  uselistorder i32 32, { 19, 20, 49, 38, 39, 27, 28, 15, 16, 36, 37, 29, 0, 1, 2, 17, 40, 18, 41, 3, 21, 4, 5, 6, 22, 30, 23, 31, 34, 7, 8, 9, 24, 35, 10, 11, 12, 13, 14, 25, 26, 32, 33, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 31, { 1, 2, 29, 30, 18, 31, 32, 3, 4, 0, 5, 33, 34, 19, 20, 21, 22, 25, 26, 23, 24, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 6, 27, 28 }
  uselistorder i32 ()* @function_1000a700, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000b4d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b490.dec_label_pc_1000b490_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b448, { 1, 0 }
  uselistorder label %dec_label_pc_1000b410, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3dc.dec_label_pc_1000b3dc_crit_edge, { 1, 0 }
}

define i32 @function_1000b4f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b4f8:
  %v1_1000b4f8 = add i32 %arg1, 28
  %v2_1000b4f8 = inttoptr i32 %v1_1000b4f8 to i32*
  %v3_1000b4f8 = load i32, i32* %v2_1000b4f8, align 4
  store i32 %v3_1000b4f8, i32* @global_var_1001bdc8.338, align 4
  %v1_1000b508 = add i32 %arg1, 44
  %v2_1000b508 = inttoptr i32 %v1_1000b508 to i32*
  %v3_1000b508 = load i32, i32* %v2_1000b508, align 4
  store i32 %v3_1000b508, i32* @global_var_1001bdcc.339, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 7, 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 28, { 42, 13, 14, 2, 3, 15, 12, 41, 4, 6, 7, 8, 9, 5, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 1, 40 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000b514(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b514:
  store i32 %arg1, i32* @global_var_1001bdd0.332, align 4
  %v0_1000b53c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000b53c)
  %v1_1000b544 = call i32 @function_1000b5c0(i32 12)
  ret i32 %v1_1000b544

; uselistorder directives
  uselistorder i32 12, { 16, 49, 50, 27, 28, 51, 52, 53, 54, 108, 109, 110, 111, 6, 106, 112, 0, 1, 9, 107, 5, 17, 18, 10, 31, 55, 56, 19, 57, 58, 59, 20, 21, 32, 22, 23, 33, 24, 25, 34, 35, 36, 37, 38, 39, 29, 30, 40, 41, 42, 43, 45, 46, 26, 47, 7, 48, 44, 8, 101, 60, 11, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 12, 73, 74, 75, 76, 77, 78, 79, 13, 80, 81, 82, 83, 84, 85, 86, 87, 88, 14, 89, 90, 91, 92, 93, 94, 95, 96, 97, 15, 98, 99, 100, 102, 103, 104, 105, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 6, 10, 5, 11, 7, 12, 4, 0, 8, 1, 3, 2, 9 }
  uselistorder i1 true, { 2, 0, 1 }
  uselistorder i32* @global_var_1001bdd0.332, { 1, 0, 2 }
}

define i32 @function_1000b548() local_unnamed_addr {
dec_label_pc_1000b548:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b560 = call i32 @__asm_mfcr()
  %v1_1000b564 = and i32 %v0_1000b560, 268435456
  %v3_1000b564 = icmp eq i32 %v1_1000b564, 0
  store i32 %v0_1000b560, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b564, label %dec_label_pc_1000b57c, label %dec_label_pc_1000b570

dec_label_pc_1000b570:                            ; preds = %dec_label_pc_1000b548
  %v0_1000b570 = call i32 @function_1000936c()
  %v0_1000b574 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b574 = inttoptr i32 %v0_1000b570 to i32*
  store i32 %v0_1000b574, i32* %v2_1000b574, align 4
  br label %dec_label_pc_1000b57c

dec_label_pc_1000b57c:                            ; preds = %dec_label_pc_1000b548, %dec_label_pc_1000b570
  %v0_1000b58c = phi i32 [ %v0_1000b560, %dec_label_pc_1000b548 ], [ -1, %dec_label_pc_1000b570 ]
  ret i32 %v0_1000b58c

; uselistorder directives
  uselistorder i32 268435456, { 42, 25, 43, 31, 44, 45, 46, 47, 32, 33, 48, 49, 26, 36, 50, 27, 30, 34, 35, 28, 51, 40, 38, 41, 39, 37, 52, 53, 29, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 47, 11, 39, 10, 9, 8, 7, 38, 37, 6, 5, 4, 46, 25, 3, 45, 41, 36, 35, 44, 2, 14, 16, 13, 15, 20, 1, 0, 43, 42, 40, 34, 33, 32, 31, 30, 29, 28, 27, 26, 24, 23, 22, 21, 19, 18, 17 }
  uselistorder label %dec_label_pc_1000b57c, { 1, 0 }
}

define i32 @function_1000b590(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b590:
  %v0_1000b590 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268481960, i32* @lr, align 4
  %v0_1000b5a4 = call i32 @function_10008d28()
  %v0_1000b5ac = load i32, i32* @r29, align 4
  store i32 %v0_1000b590, i32* @lr, align 4
  %v2_1000b5bc = call i32 @function_10008db8(i32 %v0_1000b5a4, i32 %v0_1000b5ac)
  ret i32 %v2_1000b5bc

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10008db8, { 7, 6, 3, 2, 5, 4, 1, 0 }
}

define i32 @function_1000b5c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b5c0:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000b5d4 = call i32 @function_1000936c()
  %v0_1000b5d8 = load i32, i32* @r29, align 4
  %v2_1000b5d8 = inttoptr i32 %v0_1000b5d4 to i32*
  store i32 %v0_1000b5d8, i32* %v2_1000b5d8, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_1000936c, { 23, 15, 51, 14, 35, 13, 12, 11, 10, 34, 33, 32, 9, 8, 3, 7, 6, 37, 36, 21, 22, 50, 49, 48, 47, 31, 30, 29, 46, 27, 5, 4, 45, 40, 28, 25, 44, 2, 17, 19, 16, 18, 24, 1, 0, 43, 42, 41, 26, 39, 38, 20 }
  uselistorder i32* @r29, { 291, 292, 314, 315, 316, 14, 15, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 317, 318, 319, 320, 321, 1, 61, 293, 294, 295, 296, 289, 290, 297, 2, 298, 299, 300, 301, 302, 303, 16, 17, 18, 82, 83, 84, 85, 86, 87, 88, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 41, 42, 33, 34, 35, 36, 37, 38, 3, 52, 53, 54, 4, 55, 56, 57, 43, 0, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 60, 62, 63, 64, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 97, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 5, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 6, 174, 7, 175, 8, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 9, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 10, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 11, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 12, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 305, 304, 306, 307, 308, 13, 309, 310, 311, 312, 313 }
}

define i32 @function_1000b5f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b5f4:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001bbe4.320 to i32), i32* %r31.global-to-local, align 4
  %v3_1000b610 = load i32, i32* @global_var_1001bbe4.320, align 4
  %v3_1000b614 = icmp eq i32 %v3_1000b610, -1
  br i1 %v3_1000b614, label %dec_label_pc_1000b630, label %dec_label_pc_1000b61c

dec_label_pc_1000b61c:                            ; preds = %dec_label_pc_1000b5f4, %dec_label_pc_1000b61c
  %v0_1000b61c = phi i32 [ %v3_1000b624, %dec_label_pc_1000b61c ], [ %v3_1000b610, %dec_label_pc_1000b5f4 ]
  call void @__pseudo_call(i32 %v0_1000b61c)
  %v0_1000b624 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b624 = add i32 %v0_1000b624, -4
  %v2_1000b624 = inttoptr i32 %v1_1000b624 to i32*
  %v3_1000b624 = load i32, i32* %v2_1000b624, align 4
  store i32 %v1_1000b624, i32* %r31.global-to-local, align 4
  %v3_1000b628 = icmp eq i32 %v3_1000b624, -1
  br i1 %v3_1000b628, label %dec_label_pc_1000b630, label %dec_label_pc_1000b61c

dec_label_pc_1000b630:                            ; preds = %dec_label_pc_1000b61c, %dec_label_pc_1000b5f4
  %v0_1000b640 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b640

; uselistorder directives
  uselistorder i32 %v3_1000b624, { 1, 0 }
  uselistorder i32 -4, { 0, 13, 14, 15, 7, 8, 9, 10, 11, 12, 16, 17, 1, 2, 3, 4, 5, 6 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 137, 138, 0, 39, 92, 267, 11, 12, 13, 268, 93, 269, 9, 10, 94, 95, 14, 96, 40, 41, 260, 79, 42, 203, 43, 44, 45, 46, 47, 204, 205, 206, 207, 208, 213, 48, 280, 278, 49, 270, 271, 80, 97, 272, 17, 18, 98, 277, 15, 16, 191, 3, 81, 261, 262, 34, 139, 276, 273, 50, 140, 99, 141, 19, 20, 142, 143, 144, 37, 51, 145, 146, 77, 100, 101, 102, 103, 209, 210, 21, 22, 23, 104, 211, 212, 105, 82, 78, 214, 215, 52, 53, 54, 274, 275, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 279, 68, 147, 106, 24, 216, 217, 1, 107, 108, 148, 69, 70, 109, 2, 110, 25, 111, 71, 112, 26, 218, 83, 149, 113, 84, 150, 151, 152, 114, 153, 154, 72, 155, 115, 28, 116, 27, 117, 158, 159, 160, 118, 73, 161, 162, 163, 119, 120, 156, 157, 180, 76, 4, 181, 182, 121, 29, 183, 184, 185, 186, 187, 122, 38, 164, 85, 165, 166, 87, 167, 168, 86, 169, 170, 171, 88, 172, 173, 174, 74, 175, 176, 123, 30, 124, 31, 177, 178, 179, 188, 75, 189, 190, 125, 126, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 35, 36, 219, 220, 221, 222, 223, 127, 128, 129, 224, 225, 130, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 244, 32, 246, 247, 249, 248, 33, 250, 251, 252, 253, 5, 254, 6, 255, 256, 7, 257, 8, 258, 259, 131, 132, 263, 133, 264, 134, 135, 265, 266, 136, 89, 90, 91 }
  uselistorder i32 1, { 215, 502, 1021, 630, 631, 711, 710, 114, 110, 113, 112, 109, 111, 714, 713, 712, 9, 0, 1007, 1008, 1009, 1010, 551, 509, 1022, 1023, 1024, 1025, 505, 504, 503, 10, 11, 13, 14, 12, 108, 418, 715, 213, 214, 200, 451, 501, 500, 717, 716, 485, 484, 486, 483, 482, 481, 487, 632, 216, 217, 219, 218, 718, 369, 423, 633, 719, 46, 44, 43, 45, 634, 573, 1029, 1026, 723, 722, 721, 720, 76, 80, 77, 75, 79, 78, 635, 1028, 724, 885, 886, 887, 629, 888, 552, 47, 48, 50, 49, 95, 93, 94, 26, 27, 29, 30, 28, 96, 530, 725, 492, 1027, 506, 636, 637, 728, 727, 726, 414, 412, 413, 415, 411, 416, 458, 574, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 832, 743, 742, 459, 460, 745, 744, 479, 478, 480, 917, 519, 21, 20, 19, 1030, 1031, 456, 454, 457, 455, 82, 83, 81, 84, 85, 86, 746, 638, 747, 23, 22, 24, 639, 748, 367, 368, 575, 749, 25, 66, 508, 453, 212, 87, 55, 417, 74, 750, 221, 350, 493, 495, 494, 491, 751, 371, 752, 220, 833, 753, 115, 892, 893, 520, 521, 535, 894, 895, 531, 896, 756, 755, 754, 39, 36, 37, 40, 35, 42, 41, 38, 918, 919, 510, 920, 921, 758, 757, 897, 898, 899, 640, 900, 15, 16, 17, 18, 1004, 1005, 554, 553, 1006, 97, 826, 828, 827, 641, 901, 522, 489, 488, 490, 1011, 366, 365, 902, 903, 523, 524, 536, 904, 31, 32, 33, 34, 922, 98, 99, 100, 101, 102, 103, 104, 105, 943, 419, 422, 421, 420, 923, 89, 92, 91, 90, 52, 53, 537, 579, 834, 578, 829, 577, 830, 576, 831, 835, 642, 836, 837, 643, 838, 839, 840, 844, 845, 841, 842, 843, 847, 644, 848, 645, 646, 849, 647, 648, 850, 856, 857, 561, 704, 766, 765, 764, 763, 762, 761, 760, 759, 473, 468, 467, 475, 477, 476, 464, 463, 465, 466, 472, 471, 474, 470, 469, 851, 852, 649, 853, 854, 650, 855, 210, 201, 204, 206, 208, 207, 209, 203, 202, 211, 205, 846, 651, 461, 462, 534, 865, 866, 870, 867, 873, 868, 511, 512, 869, 532, 513, 514, 525, 515, 516, 871, 872, 533, 517, 518, 526, 874, 652, 875, 876, 653, 877, 878, 879, 882, 883, 880, 881, 538, 884, 580, 774, 773, 772, 771, 770, 705, 769, 768, 767, 385, 379, 377, 384, 378, 381, 380, 374, 372, 373, 375, 386, 382, 383, 387, 376, 988, 654, 539, 499, 497, 498, 496, 924, 775, 8, 6, 7, 656, 582, 858, 581, 859, 655, 657, 861, 862, 860, 555, 863, 658, 659, 660, 661, 662, 663, 864, 562, 787, 786, 785, 784, 708, 783, 782, 781, 780, 779, 778, 777, 776, 73, 69, 70, 4, 68, 5, 67, 72, 71, 664, 665, 666, 507, 667, 584, 583, 556, 789, 788, 670, 668, 560, 889, 669, 890, 891, 527, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 563, 796, 795, 794, 793, 792, 791, 790, 65, 62, 61, 63, 60, 64, 905, 685, 906, 907, 908, 909, 910, 2, 557, 911, 912, 1, 913, 914, 915, 916, 799, 798, 706, 707, 797, 107, 106, 989, 992, 990, 558, 991, 88, 993, 994, 995, 686, 687, 925, 926, 927, 928, 929, 930, 933, 931, 932, 934, 935, 936, 688, 937, 540, 564, 938, 939, 940, 559, 941, 942, 802, 801, 800, 126, 116, 124, 139, 140, 134, 141, 142, 143, 144, 145, 131, 125, 132, 133, 120, 121, 135, 136, 137, 128, 127, 138, 129, 130, 123, 122, 119, 118, 117, 944, 945, 946, 689, 541, 565, 947, 804, 803, 301, 299, 310, 318, 319, 312, 320, 314, 305, 323, 315, 311, 321, 322, 313, 316, 307, 317, 304, 303, 302, 298, 300, 324, 309, 308, 306, 948, 949, 690, 950, 951, 952, 691, 692, 566, 953, 585, 586, 805, 273, 268, 261, 270, 279, 257, 258, 282, 272, 274, 275, 277, 266, 269, 280, 281, 267, 271, 276, 278, 263, 262, 283, 265, 264, 259, 260, 954, 589, 955, 956, 587, 957, 693, 694, 588, 806, 362, 353, 351, 363, 361, 364, 355, 358, 359, 360, 354, 357, 356, 352, 958, 959, 960, 961, 695, 542, 567, 962, 590, 591, 807, 159, 154, 148, 157, 168, 150, 149, 171, 155, 169, 170, 165, 166, 167, 163, 164, 160, 161, 158, 156, 162, 147, 172, 153, 152, 151, 146, 963, 964, 965, 696, 543, 568, 966, 592, 593, 594, 808, 334, 331, 335, 345, 325, 327, 337, 336, 348, 338, 332, 346, 347, 342, 343, 344, 340, 333, 341, 339, 349, 330, 329, 328, 326, 967, 968, 969, 970, 697, 528, 544, 569, 971, 595, 596, 597, 598, 599, 812, 811, 810, 809, 396, 391, 400, 406, 389, 393, 403, 394, 404, 401, 405, 407, 408, 409, 397, 392, 390, 410, 402, 395, 399, 398, 388, 972, 973, 974, 975, 698, 529, 545, 570, 976, 600, 601, 602, 603, 604, 605, 606, 607, 608, 816, 815, 814, 813, 230, 225, 234, 240, 223, 227, 237, 228, 238, 235, 239, 241, 242, 243, 231, 226, 224, 244, 236, 229, 233, 232, 222, 977, 611, 978, 979, 609, 980, 699, 700, 610, 817, 297, 295, 292, 290, 289, 294, 296, 287, 291, 288, 284, 286, 285, 293, 981, 982, 983, 985, 986, 984, 546, 571, 987, 612, 613, 614, 818, 199, 174, 184, 196, 197, 173, 187, 193, 189, 188, 183, 175, 195, 191, 192, 179, 180, 186, 185, 190, 176, 194, 198, 182, 181, 177, 178, 996, 997, 998, 1000, 1001, 999, 547, 572, 1002, 615, 616, 617, 823, 822, 821, 820, 819, 439, 426, 437, 446, 425, 424, 441, 442, 449, 444, 435, 427, 438, 443, 447, 448, 431, 432, 440, 445, 428, 450, 436, 434, 433, 429, 430, 3, 618, 619, 620, 621, 622, 623, 624, 625, 626, 1003, 627, 628, 58, 57, 56, 59, 548, 54, 549, 370, 1012, 701, 1016, 702, 1017, 1013, 1014, 1015, 1018, 1019, 248, 252, 256, 245, 255, 246, 251, 250, 249, 247, 254, 253, 1020, 703, 550, 51, 825, 824, 452, 709 }
  uselistorder label %dec_label_pc_1000b61c, { 1, 0 }
}

define i32 @function_1000b644() local_unnamed_addr {
dec_label_pc_1000b644:
  %v0_1000b65c = load i32, i32* @r3, align 4
  ret i32 %v0_1000b65c

; uselistorder directives
  uselistorder i32* @r3, { 23, 11, 180, 181, 182, 12, 19, 183, 104, 0, 105, 31, 190, 18, 20, 3, 25, 184, 186, 32, 187, 188, 189, 171, 30, 172, 9, 16, 174, 176, 175, 185, 33, 154, 34, 35, 106, 26, 14, 107, 108, 109, 110, 111, 112, 113, 114, 115, 13, 28, 4, 15, 116, 1, 2, 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 69, 6, 70, 71, 85, 86, 29, 87, 88, 89, 17, 161, 162, 163, 10, 164, 165, 7, 78, 79, 80, 81, 82, 83, 84, 90, 22, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 166, 167, 8, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 168, 169, 170, 173, 177, 178, 179, 24, 21, 27 }
}

define i32 @function_1000b660() local_unnamed_addr {
entry:
  store i32 268482160, i32* @lr, align 4
  %v0_1000b66c = call i32 @function_100000b8()
  ret i32 %v0_1000b66c

; uselistorder directives
  uselistorder i32 0, { 859, 217, 860, 38, 218, 150, 861, 219, 862, 863, 36, 37, 864, 865, 866, 0, 802, 803, 804, 80, 79, 805, 867, 868, 869, 39, 870, 871, 872, 873, 563, 220, 221, 411, 809, 810, 151, 811, 874, 17, 564, 565, 875, 876, 877, 878, 222, 566, 567, 568, 569, 570, 571, 572, 81, 580, 581, 879, 880, 223, 898, 899, 224, 904, 906, 144, 907, 225, 905, 1, 881, 882, 82, 883, 884, 226, 152, 227, 885, 886, 42, 43, 887, 888, 889, 228, 892, 893, 894, 40, 41, 895, 896, 897, 543, 544, 545, 546, 547, 83, 548, 549, 550, 216, 551, 84, 814, 816, 21, 817, 44, 818, 815, 812, 813, 2, 786, 782, 783, 784, 785, 145, 3, 821, 819, 820, 146, 822, 823, 787, 788, 789, 790, 791, 229, 792, 793, 824, 825, 230, 826, 153, 827, 836, 837, 85, 828, 829, 830, 831, 832, 833, 834, 835, 4, 5, 402, 412, 413, 414, 45, 46, 415, 6, 231, 806, 416, 417, 418, 419, 420, 421, 422, 423, 232, 424, 908, 909, 910, 911, 912, 913, 914, 915, 573, 574, 47, 575, 576, 577, 578, 579, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 425, 725, 890, 891, 426, 522, 594, 626, 427, 900, 86, 901, 857, 852, 858, 853, 762, 902, 903, 428, 429, 595, 596, 597, 48, 87, 598, 599, 66, 600, 602, 601, 149, 627, 70, 628, 22, 23, 629, 71, 24, 88, 233, 234, 18, 19, 603, 795, 796, 797, 798, 92, 90, 89, 799, 91, 94, 93, 409, 95, 604, 49, 605, 606, 607, 838, 96, 839, 840, 608, 609, 50, 97, 610, 7, 98, 654, 99, 630, 430, 431, 103, 432, 433, 434, 435, 436, 142, 437, 235, 438, 439, 442, 101, 410, 440, 102, 441, 236, 443, 444, 445, 446, 447, 104, 448, 449, 154, 450, 451, 403, 72, 452, 453, 454, 455, 456, 457, 53, 54, 458, 459, 460, 51, 52, 461, 462, 155, 156, 463, 464, 237, 465, 467, 468, 469, 470, 471, 157, 158, 476, 477, 238, 478, 472, 473, 474, 475, 479, 20, 404, 405, 480, 481, 100, 482, 483, 484, 489, 490, 491, 492, 159, 493, 494, 105, 495, 496, 497, 498, 499, 500, 485, 106, 486, 487, 107, 488, 239, 466, 75, 523, 524, 25, 240, 73, 26, 27, 241, 74, 28, 525, 8, 163, 162, 526, 527, 528, 529, 530, 531, 161, 160, 532, 55, 56, 533, 534, 242, 108, 535, 536, 109, 537, 110, 538, 111, 539, 540, 631, 501, 502, 503, 504, 143, 505, 506, 243, 507, 508, 509, 510, 511, 164, 512, 513, 57, 58, 514, 515, 516, 59, 60, 517, 518, 519, 9, 520, 244, 245, 246, 521, 247, 15, 14, 13, 12, 541, 165, 542, 16, 559, 553, 113, 552, 112, 554, 555, 115, 556, 114, 557, 10, 248, 558, 147, 560, 561, 166, 249, 250, 251, 252, 253, 254, 255, 562, 29, 611, 622, 612, 11, 613, 614, 615, 616, 148, 617, 618, 619, 620, 621, 30, 116, 65, 64, 117, 623, 61, 258, 624, 256, 257, 167, 625, 77, 763, 764, 76, 765, 118, 766, 78, 767, 119, 632, 633, 259, 634, 635, 121, 120, 636, 260, 637, 638, 639, 640, 641, 642, 643, 122, 644, 645, 646, 168, 647, 648, 261, 649, 67, 68, 650, 123, 651, 652, 653, 262, 169, 170, 171, 172, 124, 655, 263, 656, 657, 658, 659, 264, 660, 661, 662, 174, 173, 663, 265, 664, 665, 666, 667, 668, 125, 669, 266, 670, 671, 672, 673, 674, 267, 675, 676, 677, 175, 176, 177, 178, 129, 128, 678, 679, 31, 127, 126, 680, 681, 682, 32, 683, 684, 685, 686, 130, 179, 687, 131, 688, 268, 689, 690, 691, 269, 692, 693, 694, 695, 270, 696, 697, 698, 180, 181, 182, 183, 184, 185, 186, 187, 699, 700, 132, 701, 702, 271, 703, 704, 705, 706, 707, 708, 272, 709, 710, 711, 196, 188, 189, 190, 191, 192, 193, 194, 195, 133, 712, 713, 273, 714, 715, 716, 717, 274, 720, 721, 62, 719, 718, 275, 722, 723, 724, 197, 198, 199, 200, 201, 202, 203, 134, 726, 727, 276, 728, 729, 730, 731, 277, 734, 735, 63, 733, 732, 278, 736, 737, 738, 204, 205, 206, 138, 137, 739, 740, 279, 33, 136, 135, 741, 742, 743, 280, 34, 744, 745, 746, 747, 139, 207, 748, 140, 749, 281, 750, 751, 752, 753, 754, 755, 756, 757, 758, 282, 759, 760, 761, 208, 209, 210, 211, 768, 141, 769, 283, 770, 771, 772, 773, 774, 775, 776, 777, 778, 284, 779, 780, 781, 212, 213, 214, 215, 794, 800, 801, 807, 808, 841, 69, 842, 843, 285, 844, 845, 846, 847, 848, 849, 850, 851, 854, 35, 855, 856, 916, 917, 918, 406, 407, 408, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938 }
  uselistorder i32* @lr, { 8, 723, 724, 725, 694, 726, 727, 728, 729, 730, 731, 732, 733, 691, 18, 734, 342, 343, 9, 695, 696, 344, 345, 346, 347, 348, 349, 743, 744, 748, 749, 750, 751, 752, 753, 754, 756, 745, 747, 735, 736, 737, 738, 739, 740, 741, 742, 697, 699, 698, 660, 661, 662, 663, 664, 665, 700, 701, 702, 703, 707, 704, 705, 706, 19, 20, 636, 637, 638, 600, 569, 21, 273, 22, 23, 601, 602, 24, 692, 25, 26, 27, 28, 29, 30, 31, 755, 32, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 746, 33, 34, 35, 36, 37, 38, 364, 689, 365, 708, 411, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 444, 412, 101, 102, 103, 104, 105, 106, 10, 11, 12, 13, 14, 15, 16, 17, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 128, 129, 130, 131, 132, 133, 134, 135, 113, 114, 115, 116, 117, 118, 147, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 413, 414, 415, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 298, 278, 279, 280, 281, 282, 283, 284, 285, 0, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 4, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 5, 395, 396, 397, 398, 399, 400, 1, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 550, 543, 544, 545, 546, 547, 548, 549, 2, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 581, 574, 575, 576, 577, 578, 579, 580, 3, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 603, 605, 606, 607, 604, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 693, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 6, 7 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
